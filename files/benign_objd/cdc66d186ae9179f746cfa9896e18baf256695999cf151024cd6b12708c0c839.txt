
cdc66d186ae9179f746cfa9896e18baf256695999cf151024cd6b12708c0c839.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	mov    QWORD PTR [rsp+0x8],rbx
   140001005:	push   rdi
   140001006:	sub    rsp,0x70
   14000100a:	lea    rcx,[rip+0x19467]        # 0x14001a478
   140001011:	call   0x140009d94
   140001016:	test   rax,rax
   140001019:	je     0x14000105a
   14000101b:	lea    rcx,[rip+0x19436]        # 0x14001a458
   140001022:	call   0x140009c2c
   140001027:	xor    ebx,ebx
   140001029:	cmp    DWORD PTR [rip+0x23955],ebx        # 0x140024984
   14000102f:	jle    0x14000105a
   140001031:	xor    edi,edi
   140001033:	mov    r8,QWORD PTR [rip+0x2394e]        # 0x140024988
   14000103a:	lea    rcx,[rip+0x193ff]        # 0x14001a440
   140001041:	mov    edx,ebx
   140001043:	mov    r8,QWORD PTR [rdi+r8*1]
   140001047:	call   0x140009c2c
   14000104c:	inc    ebx
   14000104e:	add    rdi,0x8
   140001052:	cmp    ebx,DWORD PTR [rip+0x2392c]        # 0x140024984
   140001058:	jl     0x140001033
   14000105a:	call   QWORD PTR [rip+0x18fe0]        # 0x14001a040
   140001060:	mov    rcx,rax
   140001063:	call   0x140003f4c
   140001068:	call   0x140003f3c
   14000106d:	movsxd rdi,eax
   140001070:	lea    ecx,[rdi+0x1]
   140001073:	movsxd rcx,ecx
   140001076:	shl    rcx,0x3
   14000107a:	call   0x140003ff0
   14000107f:	mov    rbx,rax
   140001082:	call   0x140003f44
   140001087:	xor    r9d,r9d
   14000108a:	xor    edx,edx
   14000108c:	test   edi,edi
   14000108e:	jle    0x1400010a6
   140001090:	mov    r9d,edi
   140001093:	mov    rcx,QWORD PTR [rax]
   140001096:	add    rax,0x10
   14000109a:	mov    QWORD PTR [rbx+rdx*8],rcx
   14000109e:	inc    rdx
   1400010a1:	cmp    rdx,rdi
   1400010a4:	jl     0x140001093
   1400010a6:	mov    rdx,QWORD PTR [rip+0x21f73]        # 0x140023020
   1400010ad:	movsxd rax,r9d
   1400010b0:	and    QWORD PTR [rbx+rax*8],0x0
   1400010b5:	test   rdx,rdx
   1400010b8:	jne    0x1400010bd
   1400010ba:	mov    rdx,QWORD PTR [rbx]
   1400010bd:	mov    rcx,QWORD PTR [rip+0x21f54]        # 0x140023018
   1400010c4:	test   rcx,rcx
   1400010c7:	jne    0x1400010cc
   1400010c9:	mov    rcx,QWORD PTR [rbx]
   1400010cc:	mov    r9,QWORD PTR [rip+0x2364d]        # 0x140024720
   1400010d3:	mov    r8d,0x1
   1400010d9:	test   r9,r9
   1400010dc:	setne  al
   1400010df:	and    DWORD PTR [rsp+0x68],0x0
   1400010e4:	mov    BYTE PTR [rsp+0x60],0x0
   1400010e9:	mov    BYTE PTR [rsp+0x58],0x1
   1400010ee:	mov    BYTE PTR [rsp+0x50],al
   1400010f2:	mov    QWORD PTR [rsp+0x48],rdx
   1400010f7:	mov    QWORD PTR [rsp+0x40],rcx
   1400010fc:	lea    rax,[rip+0x19335]        # 0x14001a438
   140001103:	mov    rdx,rbx
   140001106:	mov    QWORD PTR [rsp+0x38],rax
   14000110b:	lea    rax,[rip+0x19316]        # 0x14001a428
   140001112:	mov    ecx,edi
   140001114:	mov    QWORD PTR [rsp+0x30],rax
   140001119:	mov    rax,QWORD PTR [rip+0x23608]        # 0x140024728
   140001120:	mov    QWORD PTR [rsp+0x28],rax
   140001125:	mov    DWORD PTR [rsp+0x20],0x1
   14000112d:	call   0x140003870
   140001132:	mov    rbx,QWORD PTR [rsp+0x80]
   14000113a:	add    rsp,0x70
   14000113e:	pop    rdi
   14000113f:	ret    
   140001140:	mov    QWORD PTR [rsp+0x8],rbx
   140001145:	push   rdi
   140001146:	sub    rsp,0x20
   14000114a:	and    QWORD PTR [rsp+0x40],0x0
   140001150:	mov    rdi,rdx
   140001153:	mov    rbx,rcx
   140001156:	call   0x140004d7c
   14000115b:	lea    r8,[rsp+0x40]
   140001160:	mov    rcx,rbx
   140001163:	mov    rdx,rax
   140001166:	call   0x14000a0f0
   14000116b:	cmp    eax,0x1
   14000116e:	je     0x140001182
   140001170:	xor    eax,eax
   140001172:	jmp    0x1400011ff
   140001177:	cmp    al,0x30
   140001179:	jl     0x140001188
   14000117b:	cmp    al,0x39
   14000117d:	jg     0x140001188
   14000117f:	inc    rbx
   140001182:	mov    al,BYTE PTR [rbx]
   140001184:	test   al,al
   140001186:	jne    0x140001177
   140001188:	mov    rcx,rbx
   14000118b:	call   0x140009fa0
   140001190:	cmp    rax,0x1
   140001194:	ja     0x140001170
   140001196:	cmp    BYTE PTR [rbx],0x0
   140001199:	je     0x1400011f2
   14000119b:	cmp    BYTE PTR [rbx],0x47
   14000119e:	je     0x1400011e7
   1400011a0:	cmp    BYTE PTR [rbx],0x4b
   1400011a3:	je     0x1400011dc
   1400011a5:	cmp    BYTE PTR [rbx],0x4d
   1400011a8:	je     0x1400011d1
   1400011aa:	cmp    BYTE PTR [rbx],0x54
   1400011ad:	je     0x1400011c3
   1400011af:	cmp    BYTE PTR [rbx],0x67
   1400011b2:	je     0x1400011e7
   1400011b4:	cmp    BYTE PTR [rbx],0x6b
   1400011b7:	je     0x1400011dc
   1400011b9:	cmp    BYTE PTR [rbx],0x6d
   1400011bc:	je     0x1400011d1
   1400011be:	cmp    BYTE PTR [rbx],0x74
   1400011c1:	jne    0x140001170
   1400011c3:	mov    rcx,QWORD PTR [rsp+0x40]
   1400011c8:	shl    rcx,0x28
   1400011cc:	mov    QWORD PTR [rdi],rcx
   1400011cf:	jmp    0x1400011fa
   1400011d1:	mov    rax,QWORD PTR [rsp+0x40]
   1400011d6:	shl    rax,0x14
   1400011da:	jmp    0x1400011f7
   1400011dc:	mov    rax,QWORD PTR [rsp+0x40]
   1400011e1:	shl    rax,0xa
   1400011e5:	jmp    0x1400011f7
   1400011e7:	mov    rax,QWORD PTR [rsp+0x40]
   1400011ec:	shl    rax,0x1e
   1400011f0:	jmp    0x1400011f7
   1400011f2:	mov    rax,QWORD PTR [rsp+0x40]
   1400011f7:	mov    QWORD PTR [rdi],rax
   1400011fa:	mov    eax,0x1
   1400011ff:	mov    rbx,QWORD PTR [rsp+0x30]
   140001204:	add    rsp,0x20
   140001208:	pop    rdi
   140001209:	ret    
   14000120a:	int3   
   14000120b:	int3   
   14000120c:	mov    QWORD PTR [rsp+0x10],rbx
   140001211:	mov    QWORD PTR [rsp+0x18],rsi
   140001216:	push   rdi
   140001217:	sub    rsp,0x20
   14000121b:	mov    eax,DWORD PTR [rip+0x23513]        # 0x140024734
   140001221:	mov    rbx,rcx
   140001224:	mov    ecx,DWORD PTR [rip+0x23506]        # 0x140024730
   14000122a:	mov    rsi,rdx
   14000122d:	cmp    ecx,eax
   14000122f:	jl     0x1400012a7
   140001231:	cmp    QWORD PTR [rip+0x23507],0x0        # 0x140024740
   140001239:	jne    0x140001261
   14000123b:	mov    ecx,0x40
   140001240:	mov    DWORD PTR [rip+0x234ea],0x4        # 0x140024734
   14000124a:	call   0x140003ff0
   14000124f:	mov    rdi,rax
   140001252:	mov    QWORD PTR [rip+0x234e7],rax        # 0x140024740
   140001259:	mov    ecx,DWORD PTR [rip+0x234d1]        # 0x140024730
   14000125f:	jmp    0x1400012ae
   140001261:	add    eax,eax
   140001263:	movsxd rcx,eax
   140001266:	mov    DWORD PTR [rip+0x234c8],eax        # 0x140024734
   14000126c:	shl    rcx,0x4
   140001270:	call   0x140003ff0
   140001275:	movsxd r8,DWORD PTR [rip+0x234b4]        # 0x140024730
   14000127c:	mov    rdx,QWORD PTR [rip+0x234bd]        # 0x140024740
   140001283:	shl    r8,0x4
   140001287:	mov    rcx,rax
   14000128a:	mov    rdi,rax
   14000128d:	call   0x14000a140
   140001292:	mov    rcx,QWORD PTR [rip+0x234a7]        # 0x140024740
   140001299:	call   0x140004074
   14000129e:	mov    QWORD PTR [rip+0x2349b],rdi        # 0x140024740
   1400012a5:	jmp    0x140001259
   1400012a7:	mov    rdi,QWORD PTR [rip+0x23492]        # 0x140024740
   1400012ae:	movsxd rax,ecx
   1400012b1:	inc    ecx
   1400012b3:	lea    rdx,[rip+0x19206]        # 0x14001a4c0
   1400012ba:	add    rax,rax
   1400012bd:	mov    DWORD PTR [rip+0x2346d],ecx        # 0x140024730
   1400012c3:	mov    rcx,rbx
   1400012c6:	mov    QWORD PTR [rdi+rax*8],rbx
   1400012ca:	mov    QWORD PTR [rdi+rax*8+0x8],rsi
   1400012cf:	call   0x1400040e8
   1400012d4:	test   eax,eax
   1400012d6:	jne    0x1400012fc
   1400012d8:	lea    rcx,[rbx+0x4]
   1400012dc:	lea    rdx,[rsp+0x30]
   1400012e1:	call   0x140001140
   1400012e6:	mov    rcx,QWORD PTR [rip+0x234ab]        # 0x140024798
   1400012ed:	test   eax,eax
   1400012ef:	cmovne rcx,QWORD PTR [rsp+0x30]
   1400012f5:	mov    QWORD PTR [rip+0x2349c],rcx        # 0x140024798
   1400012fc:	lea    rdx,[rip+0x191b5]        # 0x14001a4b8
   140001303:	mov    rcx,rbx
   140001306:	call   0x1400040e8
   14000130b:	test   eax,eax
   14000130d:	jne    0x140001333
   14000130f:	lea    rcx,[rbx+0x4]
   140001313:	lea    rdx,[rsp+0x30]
   140001318:	call   0x140001140
   14000131d:	mov    rcx,QWORD PTR [rip+0x2347c]        # 0x1400247a0
   140001324:	test   eax,eax
   140001326:	cmovne rcx,QWORD PTR [rsp+0x30]
   14000132c:	mov    QWORD PTR [rip+0x2346d],rcx        # 0x1400247a0
   140001333:	lea    rdx,[rip+0x19176]        # 0x14001a4b0
   14000133a:	mov    rcx,rbx
   14000133d:	call   0x1400040e8
   140001342:	test   eax,eax
   140001344:	jne    0x14000136a
   140001346:	lea    rcx,[rbx+0x4]
   14000134a:	lea    rdx,[rsp+0x30]
   14000134f:	call   0x140001140
   140001354:	mov    rcx,QWORD PTR [rip+0x2344d]        # 0x1400247a8
   14000135b:	test   eax,eax
   14000135d:	cmovne rcx,QWORD PTR [rsp+0x30]
   140001363:	mov    QWORD PTR [rip+0x2343e],rcx        # 0x1400247a8
   14000136a:	mov    rbx,QWORD PTR [rsp+0x38]
   14000136f:	mov    rsi,QWORD PTR [rsp+0x40]
   140001374:	add    rsp,0x20
   140001378:	pop    rdi
   140001379:	ret    
   14000137a:	int3   
   14000137b:	int3   
   14000137c:	test   rcx,rcx
   14000137f:	je     0x1400013e7
   140001381:	mov    QWORD PTR [rsp+0x8],rbx
   140001386:	mov    QWORD PTR [rsp+0x10],rsi
   14000138b:	push   rdi
   14000138c:	sub    rsp,0x20
   140001390:	mov    rdi,rcx
   140001393:	call   0x140006160
   140001398:	mov    rcx,rax
   14000139b:	mov    rsi,rax
   14000139e:	call   0x140009fa0
   1400013a3:	lea    rcx,[rax+0x13]
   1400013a7:	call   0x140003ff0
   1400013ac:	lea    rdx,[rip+0x190e5]        # 0x14001a498
   1400013b3:	mov    r8,rsi
   1400013b6:	mov    rcx,rax
   1400013b9:	mov    rbx,rax
   1400013bc:	call   0x14000a474
   1400013c1:	xor    edx,edx
   1400013c3:	mov    rcx,rbx
   1400013c6:	call   0x14000120c
   1400013cb:	cmp    rsi,rdi
   1400013ce:	je     0x1400013d8
   1400013d0:	mov    rcx,rsi
   1400013d3:	call   0x140004074
   1400013d8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400013dd:	mov    rsi,QWORD PTR [rsp+0x38]
   1400013e2:	add    rsp,0x20
   1400013e6:	pop    rdi
   1400013e7:	ret    
   1400013e8:	sub    rsp,0x28
   1400013ec:	mov    rax,QWORD PTR [rip+0x233bd]        # 0x1400247b0
   1400013f3:	test   rax,rax
   1400013f6:	jne    0x14000141e
   1400013f8:	lea    rdx,[rip+0x191c1]        # 0x14001a5c0
   1400013ff:	call   0x140004d84
   140001404:	mov    QWORD PTR [rip+0x233a5],rax        # 0x1400247b0
   14000140b:	test   rax,rax
   14000140e:	jne    0x14000141e
   140001410:	lea    rcx,[rip+0x19159]        # 0x14001a570
   140001417:	call   0x140004360
   14000141c:	xor    eax,eax
   14000141e:	add    rsp,0x28
   140001422:	ret    
   140001423:	int3   
   140001424:	mov    rax,rsp
   140001427:	mov    QWORD PTR [rax+0x8],rbx
   14000142b:	mov    QWORD PTR [rax+0x10],rbp
   14000142f:	mov    QWORD PTR [rax+0x18],rsi
   140001433:	mov    QWORD PTR [rax+0x20],rdi
   140001437:	push   r12
   140001439:	sub    rsp,0x30
   14000143d:	mov    rdi,rcx
   140001440:	mov    rcx,rdx
   140001443:	mov    rbx,rdx
   140001446:	call   0x140009fa0
   14000144b:	mov    rcx,rdi
   14000144e:	mov    r12,rax
   140001451:	call   0x1400013e8
   140001456:	mov    rbp,rax
   140001459:	test   rax,rax
   14000145c:	jne    0x140001487
   14000145e:	lea    rcx,[rip+0x1910b]        # 0x14001a570
   140001465:	call   0x140004360
   14000146a:	xor    eax,eax
   14000146c:	mov    rbx,QWORD PTR [rsp+0x40]
   140001471:	mov    rbp,QWORD PTR [rsp+0x48]
   140001476:	mov    rsi,QWORD PTR [rsp+0x50]
   14000147b:	mov    rdi,QWORD PTR [rsp+0x58]
   140001480:	add    rsp,0x30
   140001484:	pop    r12
   140001486:	ret    
   140001487:	test   rbx,rbx
   14000148a:	je     0x14000146a
   14000148c:	mov    rax,QWORD PTR [rdi]
   14000148f:	mov    edx,r12d
   140001492:	mov    rcx,rdi
   140001495:	call   QWORD PTR [rax+0x580]
   14000149b:	mov    rsi,rax
   14000149e:	test   rax,rax
   1400014a1:	je     0x14000146a
   1400014a3:	mov    r10,QWORD PTR [rdi]
   1400014a6:	mov    r9d,r12d
   1400014a9:	xor    r8d,r8d
   1400014ac:	mov    rdx,rax
   1400014af:	mov    rcx,rdi
   1400014b2:	mov    QWORD PTR [rsp+0x20],rbx
   1400014b7:	call   QWORD PTR [r10+0x680]
   1400014be:	mov    r11,QWORD PTR [rdi]
   1400014c1:	mov    rcx,rdi
   1400014c4:	call   QWORD PTR [r11+0x78]
   1400014c8:	test   rax,rax
   1400014cb:	jne    0x14000146a
   1400014cd:	mov    r8,QWORD PTR [rip+0x232e4]        # 0x1400247b8
   1400014d4:	test   r8,r8
   1400014d7:	jne    0x140001509
   1400014d9:	mov    rax,QWORD PTR [rdi]
   1400014dc:	lea    r9,[rip+0x19115]        # 0x14001a5f8
   1400014e3:	lea    r8,[rip+0x190f6]        # 0x14001a5e0
   1400014ea:	mov    rdx,rbp
   1400014ed:	mov    rcx,rdi
   1400014f0:	call   QWORD PTR [rax+0x388]
   1400014f6:	mov    r8,rax
   1400014f9:	mov    QWORD PTR [rip+0x232b8],rax        # 0x1400247b8
   140001500:	test   rax,rax
   140001503:	je     0x14000145e
   140001509:	mov    rax,QWORD PTR [rdi]
   14000150c:	mov    r9d,0x1
   140001512:	mov    rdx,rbp
   140001515:	mov    rcx,rdi
   140001518:	mov    QWORD PTR [rsp+0x20],rsi
   14000151d:	call   QWORD PTR [rax+0x390]
   140001523:	mov    r8,QWORD PTR [rdi]
   140001526:	mov    rdx,rsi
   140001529:	mov    rcx,rdi
   14000152c:	mov    rbx,rax
   14000152f:	call   QWORD PTR [r8+0xb8]
   140001536:	mov    rax,rbx
   140001539:	jmp    0x14000146c
   14000153e:	int3   
   14000153f:	int3   
   140001540:	mov    QWORD PTR [rsp+0x8],rbx
   140001545:	mov    QWORD PTR [rsp+0x10],rbp
   14000154a:	mov    QWORD PTR [rsp+0x18],rsi
   14000154f:	push   rdi
   140001550:	push   r12
   140001552:	push   r13
   140001554:	sub    rsp,0x20
   140001558:	mov    rbp,rdx
   14000155b:	lea    rdx,[rip+0x190ae]        # 0x14001a610
   140001562:	mov    esi,r8d
   140001565:	mov    rbx,rcx
   140001568:	call   0x140004d84
   14000156d:	mov    r8,rax
   140001570:	test   rax,rax
   140001573:	jne    0x140001585
   140001575:	lea    rcx,[rip+0x18ff4]        # 0x14001a570
   14000157c:	call   0x140004360
   140001581:	xor    eax,eax
   140001583:	jmp    0x1400015ee
   140001585:	mov    rax,QWORD PTR [rbx]
   140001588:	xor    r9d,r9d
   14000158b:	mov    edx,esi
   14000158d:	mov    rcx,rbx
   140001590:	call   QWORD PTR [rax+0x560]
   140001596:	mov    rdi,rax
   140001599:	test   rax,rax
   14000159c:	je     0x140001575
   14000159e:	xor    r13d,r13d
   1400015a1:	test   esi,esi
   1400015a3:	jle    0x1400015eb
   1400015a5:	mov    rdx,QWORD PTR [rbp+0x0]
   1400015a9:	mov    rcx,rbx
   1400015ac:	call   0x140001424
   1400015b1:	add    rbp,0x8
   1400015b5:	mov    r12,rax
   1400015b8:	test   rax,rax
   1400015bb:	je     0x140001575
   1400015bd:	mov    r10,QWORD PTR [rbx]
   1400015c0:	mov    r9,rax
   1400015c3:	mov    r8d,r13d
   1400015c6:	mov    rdx,rdi
   1400015c9:	mov    rcx,rbx
   1400015cc:	call   QWORD PTR [r10+0x570]
   1400015d3:	mov    r11,QWORD PTR [rbx]
   1400015d6:	mov    rdx,r12
   1400015d9:	mov    rcx,rbx
   1400015dc:	call   QWORD PTR [r11+0xb8]
   1400015e3:	inc    r13d
   1400015e6:	cmp    r13d,esi
   1400015e9:	jl     0x1400015a5
   1400015eb:	mov    rax,rdi
   1400015ee:	mov    rbx,QWORD PTR [rsp+0x40]
   1400015f3:	mov    rbp,QWORD PTR [rsp+0x48]
   1400015f8:	mov    rsi,QWORD PTR [rsp+0x50]
   1400015fd:	add    rsp,0x20
   140001601:	pop    r13
   140001603:	pop    r12
   140001605:	pop    rdi
   140001606:	ret    
   140001607:	int3   
   140001608:	mov    QWORD PTR [rsp+0x8],rbx
   14000160d:	mov    QWORD PTR [rsp+0x10],rbp
   140001612:	mov    QWORD PTR [rsp+0x18],rsi
   140001617:	push   rdi
   140001618:	push   r12
   14000161a:	push   r13
   14000161c:	sub    rsp,0x30
   140001620:	mov    r12,r8
   140001623:	mov    r13d,edx
   140001626:	mov    rbx,rcx
   140001629:	call   0x1400013e8
   14000162e:	mov    rsi,rax
   140001631:	test   rax,rax
   140001634:	jne    0x140001649
   140001636:	lea    rcx,[rip+0x18f33]        # 0x14001a570
   14000163d:	call   0x140004360
   140001642:	xor    eax,eax
   140001644:	jmp    0x1400016f5
   140001649:	call   0x1400040e0
   14000164e:	test   al,al
   140001650:	je     0x14000165c
   140001652:	call   0x140004290
   140001657:	mov    rdi,rax
   14000165a:	jmp    0x140001661
   14000165c:	mov    rdi,QWORD PTR [rsp+0x68]
   140001661:	mov    rax,QWORD PTR [rbx]
   140001664:	lea    r9,[rip+0x1900d]        # 0x14001a678
   14000166b:	lea    r8,[rip+0x18fee]        # 0x14001a660
   140001672:	mov    rdx,rsi
   140001675:	mov    rcx,rbx
   140001678:	call   QWORD PTR [rax+0x388]
   14000167e:	mov    rbp,rax
   140001681:	test   rax,rax
   140001684:	je     0x140001636
   140001686:	mov    rdx,r12
   140001689:	mov    rcx,rbx
   14000168c:	call   0x140001424
   140001691:	mov    r10,QWORD PTR [rbx]
   140001694:	mov    r9d,0x1
   14000169a:	mov    QWORD PTR [rsp+0x28],rax
   14000169f:	mov    r8,rbp
   1400016a2:	mov    rdx,rsi
   1400016a5:	mov    rcx,rbx
   1400016a8:	mov    DWORD PTR [rsp+0x20],r13d
   1400016ad:	call   QWORD PTR [r10+0x390]
   1400016b4:	mov    rbx,rax
   1400016b7:	call   0x1400040e0
   1400016bc:	test   al,al
   1400016be:	je     0x1400016f2
   1400016c0:	call   0x140004290
   1400016c5:	sub    rax,rdi
   1400016c8:	mov    rcx,rax
   1400016cb:	call   0x1400042dc
   1400016d0:	lea    rcx,[rip+0x18f61]        # 0x14001a638
   1400016d7:	mov    rdx,rax
   1400016da:	call   0x140009c2c
   1400016df:	lea    rdx,[rip+0x18d92]        # 0x14001a478
   1400016e6:	lea    rcx,[rip+0x18f3b]        # 0x14001a628
   1400016ed:	call   0x140009c2c
   1400016f2:	mov    rax,rbx
   1400016f5:	mov    rbx,QWORD PTR [rsp+0x50]
   1400016fa:	mov    rbp,QWORD PTR [rsp+0x58]
   1400016ff:	mov    rsi,QWORD PTR [rsp+0x60]
   140001704:	add    rsp,0x30
   140001708:	pop    r13
   14000170a:	pop    r12
   14000170c:	pop    rdi
   14000170d:	ret    
   14000170e:	int3   
   14000170f:	int3   
   140001710:	mov    QWORD PTR [rsp+0x8],rbx
   140001715:	mov    QWORD PTR [rsp+0x18],rbp
   14000171a:	push   rsi
   14000171b:	push   rdi
   14000171c:	push   r12
   14000171e:	sub    rsp,0x150
   140001725:	mov    rax,QWORD PTR [rip+0x21994]        # 0x1400230c0
   14000172c:	xor    rax,rsp
   14000172f:	mov    QWORD PTR [rsp+0x140],rax
   140001737:	movsxd rbp,ecx
   14000173a:	lea    rcx,[rip+0x18fd7]        # 0x14001a718
   140001741:	mov    r12,rdx
   140001744:	mov    WORD PTR [rsp+0x20],0x3b
   14000174b:	call   0x140009d94
   140001750:	mov    esi,0x28
   140001755:	test   rax,rax
   140001758:	je     0x140001795
   14000175a:	mov    rcx,rax
   14000175d:	call   0x140006160
   140001762:	mov    rcx,rax
   140001765:	mov    rdi,rax
   140001768:	call   0x140009fa0
   14000176d:	lea    rcx,[rsi+rax*1]
   140001771:	call   0x140003ff0
   140001776:	lea    rdx,[rip+0x18f83]        # 0x14001a700
   14000177d:	mov    r8,rdi
   140001780:	mov    rcx,rax
   140001783:	mov    rbx,rax
   140001786:	call   0x14000a474
   14000178b:	xor    edx,edx
   14000178d:	mov    rcx,rbx
   140001790:	call   0x14000120c
   140001795:	lea    rcx,[rsp+0x30]
   14000179a:	mov    edx,0x104
   14000179f:	call   0x1400041bc
   1400017a4:	test   al,al
   1400017a6:	jne    0x1400017bb
   1400017a8:	lea    rcx,[rip+0x18f21]        # 0x14001a6d0
   1400017af:	call   0x140004360
   1400017b4:	xor    al,al
   1400017b6:	jmp    0x140001883
   1400017bb:	lea    rcx,[rsp+0x30]
   1400017c0:	call   0x140009fa0
   1400017c5:	lea    rcx,[rsi+rax*1]
   1400017c9:	call   0x140003ff0
   1400017ce:	lea    r8,[rsp+0x30]
   1400017d3:	lea    rdx,[rip+0x18ede]        # 0x14001a6b8
   1400017da:	mov    rcx,rax
   1400017dd:	mov    rbx,rax
   1400017e0:	call   0x14000a474
   1400017e5:	xor    edx,edx
   1400017e7:	mov    rcx,rbx
   1400017ea:	call   0x14000120c
   1400017ef:	xor    edi,edi
   1400017f1:	test   rbp,rbp
   1400017f4:	jle    0x140001818
   1400017f6:	mov    rcx,QWORD PTR [r12+rdi*8]
   1400017fa:	call   0x140009fa0
   1400017ff:	lea    rcx,[rsp+0x30]
   140001804:	lea    ebx,[rsi+rax*1]
   140001807:	call   0x140009fa0
   14000180c:	inc    rdi
   14000180f:	lea    esi,[rbx+rax*1+0x1]
   140001813:	cmp    rdi,rbp
   140001816:	jl     0x1400017f6
   140001818:	lea    eax,[rsi+0x1]
   14000181b:	movsxd rcx,eax
   14000181e:	call   0x140003ff0
   140001823:	lea    rdx,[rip+0x18e76]        # 0x14001a6a0
   14000182a:	mov    rcx,rax
   14000182d:	mov    rbx,rax
   140001830:	call   0x14000a750
   140001835:	xor    edi,edi
   140001837:	test   rbp,rbp
   14000183a:	jle    0x14000186a
   14000183c:	lea    rdx,[rsp+0x30]
   140001841:	mov    rcx,rbx
   140001844:	call   0x14000a6b0
   140001849:	mov    rdx,QWORD PTR [r12+rdi*8]
   14000184d:	mov    rcx,rbx
   140001850:	call   0x14000a6b0
   140001855:	lea    rdx,[rsp+0x20]
   14000185a:	mov    rcx,rbx
   14000185d:	call   0x14000a6b0
   140001862:	inc    rdi
   140001865:	cmp    rdi,rbp
   140001868:	jl     0x14000183c
   14000186a:	mov    rcx,rbx
   14000186d:	call   0x140009fa0
   140001872:	xor    edx,edx
   140001874:	mov    rcx,rbx
   140001877:	mov    BYTE PTR [rax+rbx*1-0x1],0x0
   14000187c:	call   0x14000120c
   140001881:	mov    al,0x1
   140001883:	mov    rcx,QWORD PTR [rsp+0x140]
   14000188b:	xor    rcx,rsp
   14000188e:	call   0x14000a820
   140001893:	lea    r11,[rsp+0x150]
   14000189b:	mov    rbx,QWORD PTR [r11+0x20]
   14000189f:	mov    rbp,QWORD PTR [r11+0x30]
   1400018a3:	mov    rsp,r11
   1400018a6:	pop    r12
   1400018a8:	pop    rdi
   1400018a9:	pop    rsi
   1400018aa:	ret    
   1400018ab:	int3   
   1400018ac:	test   rcx,rcx
   1400018af:	je     0x14000197e
   1400018b5:	mov    QWORD PTR [rsp+0x8],rbx
   1400018ba:	mov    QWORD PTR [rsp+0x10],rbp
   1400018bf:	mov    QWORD PTR [rsp+0x18],rsi
   1400018c4:	push   rdi
   1400018c5:	push   r12
   1400018c7:	push   r13
   1400018c9:	sub    rsp,0x20
   1400018cd:	mov    r13,r8
   1400018d0:	movsxd rsi,edx
   1400018d3:	mov    rbp,rcx
   1400018d6:	xor    ebx,ebx
   1400018d8:	call   0x140009fa0
   1400018dd:	mov    edi,ebx
   1400018df:	mov    r12,rax
   1400018e2:	test   rsi,rsi
   1400018e5:	jle    0x1400018fe
   1400018e7:	mov    rcx,QWORD PTR [r13+rdi*8+0x0]
   1400018ec:	call   0x140009fa0
   1400018f1:	inc    rdi
   1400018f4:	lea    r12,[r12+rax*1+0x1]
   1400018f9:	cmp    rdi,rsi
   1400018fc:	jl     0x1400018e7
   1400018fe:	lea    rcx,[rip+0x18e23]        # 0x14001a728
   140001905:	call   0x140009fa0
   14000190a:	lea    rcx,[rax+r12*1+0x1]
   14000190f:	call   0x140003ff0
   140001914:	lea    rdx,[rip+0x18e0d]        # 0x14001a728
   14000191b:	mov    rcx,rax
   14000191e:	mov    rdi,rax
   140001921:	mov    BYTE PTR [rax],bl
   140001923:	call   0x14000a6b0
   140001928:	mov    rdx,rbp
   14000192b:	mov    rcx,rdi
   14000192e:	call   0x14000a6b0
   140001933:	test   rsi,rsi
   140001936:	jle    0x14000195c
   140001938:	lea    rdx,[rip+0x18de5]        # 0x14001a724
   14000193f:	mov    rcx,rdi
   140001942:	call   0x14000a6b0
   140001947:	mov    rdx,QWORD PTR [r13+rbx*8+0x0]
   14000194c:	mov    rcx,rdi
   14000194f:	call   0x14000a6b0
   140001954:	inc    rbx
   140001957:	cmp    rbx,rsi
   14000195a:	jl     0x140001938
   14000195c:	xor    edx,edx
   14000195e:	mov    rcx,rdi
   140001961:	call   0x14000120c
   140001966:	mov    rbx,QWORD PTR [rsp+0x40]
   14000196b:	mov    rbp,QWORD PTR [rsp+0x48]
   140001970:	mov    rsi,QWORD PTR [rsp+0x50]
   140001975:	add    rsp,0x20
   140001979:	pop    r13
   14000197b:	pop    r12
   14000197d:	pop    rdi
   14000197e:	ret    
   14000197f:	int3   
   140001980:	mov    rax,rsp
   140001983:	mov    QWORD PTR [rax+0x8],rbx
   140001987:	mov    QWORD PTR [rax+0x10],rbp
   14000198b:	mov    QWORD PTR [rax+0x18],rsi
   14000198f:	mov    QWORD PTR [rax+0x20],rdi
   140001993:	push   r12
   140001995:	sub    rsp,0x50
   140001999:	mov    rbx,rdx
   14000199c:	mov    rsi,rcx
   14000199f:	call   0x1400013e8
   1400019a4:	mov    rbp,rax
   1400019a7:	test   rax,rax
   1400019aa:	jne    0x1400019bd
   1400019ac:	lea    rcx,[rip+0x18bbd]        # 0x14001a570
   1400019b3:	call   0x140004360
   1400019b8:	jmp    0x140001a43
   1400019bd:	mov    rax,QWORD PTR [rsi]
   1400019c0:	lea    r9,[rip+0x18dd9]        # 0x14001a7a0
   1400019c7:	lea    r8,[rip+0x18dc2]        # 0x14001a790
   1400019ce:	mov    rdx,rbp
   1400019d1:	mov    rcx,rsi
   1400019d4:	call   QWORD PTR [rax+0x388]
   1400019da:	mov    r12,rax
   1400019dd:	test   rax,rax
   1400019e0:	je     0x1400019ac
   1400019e2:	mov    rax,QWORD PTR [rsi]
   1400019e5:	mov    rdx,rbx
   1400019e8:	mov    rcx,rsi
   1400019eb:	call   QWORD PTR [rax+0x538]
   1400019f1:	mov    rdi,QWORD PTR [rsi]
   1400019f4:	mov    rbx,rax
   1400019f7:	call   0x1400045c0
   1400019fc:	mov    rcx,QWORD PTR [rip+0x22d95]        # 0x140024798
   140001a03:	movzx  r11d,al
   140001a07:	mov    r9d,0x1
   140001a0d:	mov    r8,r12
   140001a10:	mov    DWORD PTR [rsp+0x40],r11d
   140001a15:	mov    QWORD PTR [rsp+0x38],rcx
   140001a1a:	mov    rcx,QWORD PTR [rip+0x22d7f]        # 0x1400247a0
   140001a21:	mov    QWORD PTR [rsp+0x30],rcx
   140001a26:	mov    rcx,QWORD PTR [rip+0x22d7b]        # 0x1400247a8
   140001a2d:	mov    rdx,rbp
   140001a30:	mov    QWORD PTR [rsp+0x28],rcx
   140001a35:	mov    rcx,rsi
   140001a38:	mov    QWORD PTR [rsp+0x20],rbx
   140001a3d:	call   QWORD PTR [rdi+0x468]
   140001a43:	mov    rbx,QWORD PTR [rsp+0x60]
   140001a48:	mov    rbp,QWORD PTR [rsp+0x68]
   140001a4d:	mov    rsi,QWORD PTR [rsp+0x70]
   140001a52:	mov    rdi,QWORD PTR [rsp+0x78]
   140001a57:	add    rsp,0x50
   140001a5b:	pop    r12
   140001a5d:	ret    
   140001a5e:	int3   
   140001a5f:	int3   
   140001a60:	mov    QWORD PTR [rsp+0x8],rbx
   140001a65:	mov    QWORD PTR [rsp+0x10],rbp
   140001a6a:	push   rdi
   140001a6b:	push   r12
   140001a6d:	push   r13
   140001a6f:	push   r14
   140001a71:	push   r15
   140001a73:	sub    rsp,0x30
   140001a77:	mov    bl,dl
   140001a79:	mov    rdi,rcx
   140001a7c:	call   0x1400013e8
   140001a81:	mov    rbp,rax
   140001a84:	test   rax,rax
   140001a87:	jne    0x140001a9a
   140001a89:	lea    rcx,[rip+0x18ae0]        # 0x14001a570
   140001a90:	call   0x140004360
   140001a95:	jmp    0x140001d91
   140001a9a:	mov    rax,QWORD PTR [rdi]
   140001a9d:	mov    rdx,rbp
   140001aa0:	mov    rcx,rdi
   140001aa3:	test   bl,bl
   140001aa5:	je     0x140001add
   140001aa7:	lea    r9,[rip+0x18dee]        # 0x14001a89c
   140001aae:	lea    r8,[rip+0x18dd3]        # 0x14001a888
   140001ab5:	call   QWORD PTR [rax+0x388]
   140001abb:	mov    r8,rax
   140001abe:	test   rax,rax
   140001ac1:	je     0x140001a89
   140001ac3:	mov    rax,QWORD PTR [rdi]
   140001ac6:	mov    r9d,0x1
   140001acc:	mov    rdx,rbp
   140001acf:	mov    rcx,rdi
   140001ad2:	call   QWORD PTR [rax+0x468]
   140001ad8:	jmp    0x140001d91
   140001add:	lea    r9,[rip+0x18d8c]        # 0x14001a870
   140001ae4:	lea    r8,[rip+0x18d75]        # 0x14001a860
   140001aeb:	call   QWORD PTR [rax+0x388]
   140001af1:	mov    rbx,rax
   140001af4:	test   rax,rax
   140001af7:	je     0x140001a89
   140001af9:	mov    rax,QWORD PTR [rdi]
   140001afc:	lea    r9,[rip+0x18d35]        # 0x14001a838
   140001b03:	lea    r8,[rip+0x18d16]        # 0x14001a820
   140001b0a:	mov    rdx,rbp
   140001b0d:	mov    rcx,rdi
   140001b10:	call   QWORD PTR [rax+0x388]
   140001b16:	mov    r14,rax
   140001b19:	test   rax,rax
   140001b1c:	je     0x140001a89
   140001b22:	mov    rax,QWORD PTR [rdi]
   140001b25:	lea    r9,[rip+0x18d0c]        # 0x14001a838
   140001b2c:	lea    r8,[rip+0x18cd5]        # 0x14001a808
   140001b33:	mov    rdx,rbp
   140001b36:	mov    rcx,rdi
   140001b39:	call   QWORD PTR [rax+0x388]
   140001b3f:	mov    QWORD PTR [rsp+0x70],rax
   140001b44:	test   rax,rax
   140001b47:	je     0x140001a89
   140001b4d:	mov    rax,QWORD PTR [rdi]
   140001b50:	lea    r9,[rip+0x18c99]        # 0x14001a7f0
   140001b57:	lea    r8,[rip+0x18c7a]        # 0x14001a7d8
   140001b5e:	mov    rdx,rbp
   140001b61:	mov    rcx,rdi
   140001b64:	call   QWORD PTR [rax+0x388]
   140001b6a:	mov    r15,rax
   140001b6d:	test   rax,rax
   140001b70:	je     0x140001a89
   140001b76:	mov    rax,QWORD PTR [rdi]
   140001b79:	lea    r9,[rip+0x18d1c]        # 0x14001a89c
   140001b80:	lea    r8,[rip+0x18c39]        # 0x14001a7c0
   140001b87:	mov    rdx,rbp
   140001b8a:	mov    rcx,rdi
   140001b8d:	call   QWORD PTR [rax+0x388]
   140001b93:	mov    QWORD PTR [rsp+0x78],rax
   140001b98:	test   rax,rax
   140001b9b:	je     0x140001a89
   140001ba1:	mov    rax,QWORD PTR [rdi]
   140001ba4:	mov    rdx,QWORD PTR [rip+0x22b9d]        # 0x140024748
   140001bab:	mov    rcx,rdi
   140001bae:	call   QWORD PTR [rax+0x538]
   140001bb4:	mov    r10,QWORD PTR [rdi]
   140001bb7:	mov    r8,rbx
   140001bba:	mov    rdx,rbp
   140001bbd:	mov    rcx,rdi
   140001bc0:	mov    r9,rax
   140001bc3:	call   QWORD PTR [r10+0x468]
   140001bca:	mov    rdx,QWORD PTR [rip+0x22bb7]        # 0x140024788
   140001bd1:	cmp    DWORD PTR [rdx+0x8],0x0
   140001bd5:	je     0x140001bdd
   140001bd7:	cmp    DWORD PTR [rdx+0x8],0x4
   140001bdb:	jne    0x140001c2b
   140001bdd:	mov    rax,QWORD PTR [rdi]
   140001be0:	mov    rdx,QWORD PTR [rdx]
   140001be3:	mov    rcx,rdi
   140001be6:	call   QWORD PTR [rax+0x538]
   140001bec:	mov    rcx,QWORD PTR [rip+0x22b95]        # 0x140024788
   140001bf3:	mov    r8,QWORD PTR [rdi]
   140001bf6:	mov    rdx,QWORD PTR [rcx]
   140001bf9:	mov    rcx,rdi
   140001bfc:	mov    rbx,rax
   140001bff:	inc    rdx
   140001c02:	call   QWORD PTR [r8+0x538]
   140001c09:	mov    r10,QWORD PTR [rdi]
   140001c0c:	mov    r9,rbx
   140001c0f:	mov    r8,r14
   140001c12:	mov    rdx,rbp
   140001c15:	mov    rcx,rdi
   140001c18:	mov    QWORD PTR [rsp+0x20],rax
   140001c1d:	call   QWORD PTR [r10+0x468]
   140001c24:	mov    rdx,QWORD PTR [rip+0x22b5d]        # 0x140024788
   140001c2b:	mov    eax,DWORD PTR [rip+0x22b43]        # 0x140024774
   140001c31:	mov    r13d,0x1
   140001c37:	cmp    eax,r13d
   140001c3a:	jle    0x140001caa
   140001c3c:	lea    r12d,[r13+0x1f]
   140001c40:	cmp    DWORD PTR [r12+rdx*1+0x8],0x0
   140001c46:	jne    0x140001c9e
   140001c48:	mov    rax,QWORD PTR [rdi]
   140001c4b:	mov    rdx,QWORD PTR [r12+rdx*1]
   140001c4f:	mov    rcx,rdi
   140001c52:	call   QWORD PTR [rax+0x538]
   140001c58:	mov    rcx,QWORD PTR [rip+0x22b29]        # 0x140024788
   140001c5f:	mov    r8,QWORD PTR [rdi]
   140001c62:	mov    rdx,QWORD PTR [r12+rcx*1]
   140001c66:	mov    rcx,rdi
   140001c69:	mov    rbx,rax
   140001c6c:	inc    rdx
   140001c6f:	call   QWORD PTR [r8+0x538]
   140001c76:	mov    r10,QWORD PTR [rdi]
   140001c79:	mov    r9,rbx
   140001c7c:	mov    r8,r14
   140001c7f:	mov    rdx,rbp
   140001c82:	mov    rcx,rdi
   140001c85:	mov    QWORD PTR [rsp+0x20],rax
   140001c8a:	call   QWORD PTR [r10+0x468]
   140001c91:	mov    rdx,QWORD PTR [rip+0x22af0]        # 0x140024788
   140001c98:	mov    eax,DWORD PTR [rip+0x22ad6]        # 0x140024774
   140001c9e:	inc    r13d
   140001ca1:	add    r12,0x20
   140001ca5:	cmp    r13d,eax
   140001ca8:	jl     0x140001c40
   140001caa:	mov    r13d,0x1
   140001cb0:	cmp    eax,r13d
   140001cb3:	jle    0x140001d29
   140001cb5:	mov    r14,QWORD PTR [rsp+0x70]
   140001cba:	lea    r12d,[r13+0x1f]
   140001cbe:	cmp    DWORD PTR [r12+rdx*1+0x8],0x1
   140001cc4:	jne    0x140001d1d
   140001cc6:	mov    rax,QWORD PTR [rdi]
   140001cc9:	mov    rdx,QWORD PTR [r12+rdx*1]
   140001ccd:	mov    rcx,rdi
   140001cd0:	call   QWORD PTR [rax+0x538]
   140001cd6:	mov    rcx,QWORD PTR [rip+0x22aab]        # 0x140024788
   140001cdd:	mov    r8,QWORD PTR [rdi]
   140001ce0:	mov    rdx,QWORD PTR [r12+rcx*1+0x10]
   140001ce5:	mov    rcx,rdi
   140001ce8:	mov    rbx,rax
   140001ceb:	inc    rdx
   140001cee:	call   QWORD PTR [r8+0x538]
   140001cf5:	mov    r10,QWORD PTR [rdi]
   140001cf8:	mov    r9,rbx
   140001cfb:	mov    r8,r14
   140001cfe:	mov    rdx,rbp
   140001d01:	mov    rcx,rdi
   140001d04:	mov    QWORD PTR [rsp+0x20],rax
   140001d09:	call   QWORD PTR [r10+0x468]
   140001d10:	mov    rdx,QWORD PTR [rip+0x22a71]        # 0x140024788
   140001d17:	mov    eax,DWORD PTR [rip+0x22a57]        # 0x140024774
   140001d1d:	inc    r13d
   140001d20:	add    r12,0x20
   140001d24:	cmp    r13d,eax
   140001d27:	jl     0x140001cbe
   140001d29:	call   0x1400045c0
   140001d2e:	mov    rcx,QWORD PTR [rip+0x22a53]        # 0x140024788
   140001d35:	mov    rdx,QWORD PTR [rcx]
   140001d38:	mov    bl,al
   140001d3a:	inc    rdx
   140001d3d:	cmp    DWORD PTR [rcx+0x8],0x4
   140001d41:	jne    0x140001d4e
   140001d43:	test   al,al
   140001d45:	je     0x140001d4e
   140001d47:	mov    rdx,QWORD PTR [rcx+0x18]
   140001d4b:	inc    rdx
   140001d4e:	mov    rax,QWORD PTR [rdi]
   140001d51:	mov    rcx,rdi
   140001d54:	call   QWORD PTR [rax+0x538]
   140001d5a:	mov    r10,QWORD PTR [rdi]
   140001d5d:	movzx  r9d,bl
   140001d61:	mov    r8,r15
   140001d64:	mov    rdx,rbp
   140001d67:	mov    rcx,rdi
   140001d6a:	mov    QWORD PTR [rsp+0x20],rax
   140001d6f:	call   QWORD PTR [r10+0x468]
   140001d76:	mov    r11,QWORD PTR [rdi]
   140001d79:	mov    r8,QWORD PTR [rsp+0x78]
   140001d7e:	mov    r9d,0x1
   140001d84:	mov    rdx,rbp
   140001d87:	mov    rcx,rdi
   140001d8a:	call   QWORD PTR [r11+0x468]
   140001d91:	mov    rbx,QWORD PTR [rsp+0x60]
   140001d96:	mov    rbp,QWORD PTR [rsp+0x68]
   140001d9b:	add    rsp,0x30
   140001d9f:	pop    r15
   140001da1:	pop    r14
   140001da3:	pop    r13
   140001da5:	pop    r12
   140001da7:	pop    rdi
   140001da8:	ret    
   140001da9:	int3   
   140001daa:	int3   
   140001dab:	int3   
   140001dac:	mov    QWORD PTR [rsp+0x8],rbx
   140001db1:	mov    QWORD PTR [rsp+0x10],rsi
   140001db6:	push   rdi
   140001db7:	sub    rsp,0x20
   140001dbb:	lea    rdx,[rip+0x18ae2]        # 0x14001a8a4
   140001dc2:	mov    rdi,rcx
   140001dc5:	call   0x1400040e8
   140001dca:	test   eax,eax
   140001dcc:	jne    0x140001dd2
   140001dce:	add    rdi,0x2
   140001dd2:	xor    ebx,ebx
   140001dd4:	cmp    DWORD PTR [rip+0x2299a],ebx        # 0x140024774
   140001dda:	jle    0x140001e03
   140001ddc:	xor    esi,esi
   140001dde:	mov    rdx,QWORD PTR [rip+0x229a3]        # 0x140024788
   140001de5:	mov    rcx,rdi
   140001de8:	mov    rdx,QWORD PTR [rsi+rdx*1]
   140001dec:	call   0x14000a850
   140001df1:	test   eax,eax
   140001df3:	je     0x140001e16
   140001df5:	inc    ebx
   140001df7:	add    rsi,0x20
   140001dfb:	cmp    ebx,DWORD PTR [rip+0x22973]        # 0x140024774
   140001e01:	jl     0x140001dde
   140001e03:	or     eax,0xffffffff
   140001e06:	mov    rbx,QWORD PTR [rsp+0x30]
   140001e0b:	mov    rsi,QWORD PTR [rsp+0x38]
   140001e10:	add    rsp,0x20
   140001e14:	pop    rdi
   140001e15:	ret    
   140001e16:	mov    eax,ebx
   140001e18:	jmp    0x140001e06
   140001e1a:	int3   
   140001e1b:	int3   
   140001e1c:	mov    QWORD PTR [rsp+0x10],rbx
   140001e21:	mov    QWORD PTR [rsp+0x18],rsi
   140001e26:	push   rdi
   140001e27:	sub    rsp,0x20
   140001e2b:	lea    rcx,[rip+0x18aa6]        # 0x14001a8d8
   140001e32:	call   0x140009d94
   140001e37:	lea    rcx,[rip+0x18a82]        # 0x14001a8c0
   140001e3e:	mov    rsi,rax
   140001e41:	call   0x140009d94
   140001e46:	mov    rbx,rax
   140001e49:	test   rsi,rsi
   140001e4c:	je     0x140001e81
   140001e4e:	lea    r8,[rsp+0x30]
   140001e53:	mov    rdx,rax
   140001e56:	mov    rcx,rsi
   140001e59:	call   0x140006bc0
   140001e5e:	mov    rdi,rax
   140001e61:	test   rax,rax
   140001e64:	je     0x140001e93
   140001e66:	call   0x140006270
   140001e6b:	mov    edx,DWORD PTR [rsp+0x30]
   140001e6f:	mov    rcx,rdi
   140001e72:	call   0x1400061e8
   140001e77:	mov    rcx,rdi
   140001e7a:	call   0x140004074
   140001e7f:	jmp    0x140001e93
   140001e81:	test   rax,rax
   140001e84:	je     0x140001eda
   140001e86:	call   0x140006270
   140001e8b:	mov    rcx,rbx
   140001e8e:	call   0x140006230
   140001e93:	mov    rdx,rsi
   140001e96:	mov    rcx,rbx
   140001e99:	call   0x1400062a0
   140001e9e:	lea    rcx,[rip+0x18a03]        # 0x14001a8a8
   140001ea5:	call   0x140004d24
   140001eaa:	lea    rcx,[rip+0x18a0f]        # 0x14001a8c0
   140001eb1:	call   0x140004d24
   140001eb6:	lea    rcx,[rip+0x18a1b]        # 0x14001a8d8
   140001ebd:	call   0x140004d24
   140001ec2:	mov    rcx,QWORD PTR [rip+0x228b7]        # 0x140024780
   140001ec9:	call   0x140004074
   140001ece:	mov    rcx,QWORD PTR [rip+0x228a3]        # 0x140024778
   140001ed5:	call   0x140004074
   140001eda:	mov    rbx,QWORD PTR [rsp+0x38]
   140001edf:	mov    rsi,QWORD PTR [rsp+0x40]
   140001ee4:	add    rsp,0x20
   140001ee8:	pop    rdi
   140001ee9:	ret    
   140001eea:	int3   
   140001eeb:	int3   
   140001eec:	mov    rax,QWORD PTR [rip+0x22865]        # 0x140024758
   140001ef3:	ret    
   140001ef4:	mov    rax,QWORD PTR [rip+0x2284d]        # 0x140024748
   140001efb:	ret    
   140001efc:	mov    eax,DWORD PTR [rip+0x2286e]        # 0x140024770
   140001f02:	ret    
   140001f03:	int3   
   140001f04:	mov    rax,rsp
   140001f07:	mov    QWORD PTR [rax+0x8],rcx
   140001f0b:	mov    QWORD PTR [rax+0x10],rdx
   140001f0f:	mov    QWORD PTR [rax+0x18],r8
   140001f13:	mov    QWORD PTR [rax+0x20],r9
   140001f17:	push   rbx
   140001f18:	sub    rsp,0x20
   140001f1c:	lea    rbx,[rax+0x10]
   140001f20:	call   0x14000ab98
   140001f25:	mov    rdx,QWORD PTR [rsp+0x30]
   140001f2a:	lea    rcx,[rax+0x60]
   140001f2e:	mov    r8,rbx
   140001f31:	call   0x14000ab74
   140001f36:	call   0x14000ab98
   140001f3b:	lea    rdx,[rip+0x18ae2]        # 0x14001aa24
   140001f42:	lea    rcx,[rax+0x60]
   140001f46:	call   0x14000a900
   140001f4b:	add    rsp,0x20
   140001f4f:	pop    rbx
   140001f50:	ret    
   140001f51:	int3   
   140001f52:	int3   
   140001f53:	int3   
   140001f54:	rex push rbp
   140001f56:	push   rbx
   140001f57:	push   rsi
   140001f58:	push   rdi
   140001f59:	push   r12
   140001f5b:	push   r13
   140001f5d:	push   r14
   140001f5f:	push   r15
   140001f61:	mov    rbp,rsp
   140001f64:	sub    rsp,0x58
   140001f68:	mov    eax,DWORD PTR [rcx]
   140001f6a:	movsxd r14,DWORD PTR [rcx+0x10]
   140001f6e:	mov    r15,QWORD PTR [rcx+0x18]
   140001f72:	mov    r13,QWORD PTR [rcx+0x20]
   140001f76:	mov    DWORD PTR [rbp+0x48],eax
   140001f79:	mov    rax,QWORD PTR [rcx+0x8]
   140001f7d:	mov    QWORD PTR [rbp-0x38],rax
   140001f81:	mov    rax,QWORD PTR [rcx+0x28]
   140001f85:	xor    edi,edi
   140001f87:	mov    QWORD PTR [rbp-0x20],rax
   140001f8b:	mov    rax,QWORD PTR [rcx+0x30]
   140001f8f:	mov    DWORD PTR [rbp+0x50],r14d
   140001f93:	mov    QWORD PTR [rbp+0x60],rdi
   140001f97:	mov    QWORD PTR [rbp+0x58],rdi
   140001f9b:	mov    QWORD PTR [rbp-0x18],rax
   140001f9f:	call   0x140004ea4
   140001fa4:	call   0x140004290
   140001fa9:	lea    r8d,[rdi+0x18]
   140001fad:	lea    rcx,[rbp-0x28]
   140001fb1:	xor    edx,edx
   140001fb3:	mov    QWORD PTR [rbp-0x30],rax
   140001fb7:	call   0x14000a530
   140001fbc:	mov    eax,DWORD PTR [rip+0x2276e]        # 0x140024730
   140001fc2:	mov    DWORD PTR [rbp-0x28],0x10002
   140001fc9:	mov    DWORD PTR [rbp-0x24],eax
   140001fcc:	mov    rax,QWORD PTR [rip+0x2276d]        # 0x140024740
   140001fd3:	mov    BYTE PTR [rbp-0x18],dil
   140001fd7:	mov    QWORD PTR [rbp-0x20],rax
   140001fdb:	call   0x1400040e0
   140001fe0:	lea    esi,[rdi+0x1]
   140001fe3:	test   al,al
   140001fe5:	je     0x14000206b
   140001feb:	lea    rcx,[rip+0x1855e]        # 0x14001a550
   140001ff2:	call   0x140009c2c
   140001ff7:	mov    edx,DWORD PTR [rbp-0x28]
   140001ffa:	lea    rcx,[rip+0x18537]        # 0x14001a538
   140002001:	call   0x140009c2c
   140002006:	cmp    BYTE PTR [rbp-0x18],dil
   14000200a:	lea    rax,[rip+0x18517]        # 0x14001a528
   140002011:	lea    rdx,[rip+0x18500]        # 0x14001a518
   140002018:	lea    rcx,[rip+0x184d9]        # 0x14001a4f8
   14000201f:	cmovne rdx,rax
   140002023:	call   0x140009c2c
   140002028:	mov    edx,DWORD PTR [rbp-0x24]
   14000202b:	lea    rcx,[rip+0x184ae]        # 0x14001a4e0
   140002032:	call   0x140009c2c
   140002037:	cmp    DWORD PTR [rip+0x226f3],edi        # 0x140024730
   14000203d:	mov    r12d,edi
   140002040:	jle    0x14000206b
   140002042:	mov    ebx,edi
   140002044:	mov    r8,QWORD PTR [rbp-0x20]
   140002048:	lea    rcx,[rip+0x18479]        # 0x14001a4c8
   14000204f:	mov    edx,r12d
   140002052:	mov    r8,QWORD PTR [rbx+r8*1]
   140002056:	call   0x140009c2c
   14000205b:	add    r12d,esi
   14000205e:	add    rbx,0x10
   140002062:	cmp    r12d,DWORD PTR [rip+0x226c7]        # 0x140024730
   140002069:	jl     0x140002044
   14000206b:	lea    r8,[rbp-0x28]
   14000206f:	lea    rdx,[rbp+0x58]
   140002073:	lea    rcx,[rbp+0x60]
   140002077:	call   r13
   14000207a:	mov    rcx,QWORD PTR [rip+0x226bf]        # 0x140024740
   140002081:	mov    ebx,eax
   140002083:	call   0x140004074
   140002088:	test   ebx,ebx
   14000208a:	je     0x1400020a0
   14000208c:	lea    rcx,[rip+0x18a9d]        # 0x14001ab30
   140002093:	call   0x140004360
   140002098:	mov    ecx,esi
   14000209a:	call   0x140009bcc
   14000209f:	int3   
   1400020a0:	mov    rdx,QWORD PTR [rip+0x226c1]        # 0x140024768
   1400020a7:	test   rdx,rdx
   1400020aa:	je     0x1400020c8
   1400020ac:	mov    rcx,QWORD PTR [rbp+0x58]
   1400020b0:	call   0x140001980
   1400020b5:	mov    rcx,QWORD PTR [rbp+0x58]
   1400020b9:	mov    rax,QWORD PTR [rcx]
   1400020bc:	call   QWORD PTR [rax+0x78]
   1400020bf:	test   rax,rax
   1400020c2:	jne    0x1400023a5
   1400020c8:	cmp    BYTE PTR [rip+0x22691],dil        # 0x140024760
   1400020cf:	mov    r12b,BYTE PTR [rip+0x2268b]        # 0x140024761
   1400020d6:	jne    0x1400020e1
   1400020d8:	test   r12b,r12b
   1400020db:	je     0x140002190
   1400020e1:	mov    rbx,QWORD PTR [rbp+0x58]
   1400020e5:	lea    rdx,[rip+0x1868c]        # 0x14001a778
   1400020ec:	mov    rcx,rbx
   1400020ef:	call   0x140004d84
   1400020f4:	mov    r13,rax
   1400020f7:	test   rax,rax
   1400020fa:	jne    0x14000210a
   1400020fc:	lea    rcx,[rip+0x1846d]        # 0x14001a570
   140002103:	call   0x140004360
   140002108:	jmp    0x14000214c
   14000210a:	mov    rax,QWORD PTR [rbx]
   14000210d:	lea    rcx,[rip+0x1865c]        # 0x14001a770
   140002114:	lea    r8,[rip+0x1864d]        # 0x14001a768
   14000211b:	cmp    r12b,sil
   14000211e:	lea    r9,[rip+0x1863f]        # 0x14001a764
   140002125:	mov    rdx,r13
   140002128:	cmove  r8,rcx
   14000212c:	mov    rcx,rbx
   14000212f:	call   QWORD PTR [rax+0x388]
   140002135:	mov    r8,rax
   140002138:	test   rax,rax
   14000213b:	je     0x1400020fc
   14000213d:	mov    rax,QWORD PTR [rbx]
   140002140:	mov    rdx,r13
   140002143:	mov    rcx,rbx
   140002146:	call   QWORD PTR [rax+0x468]
   14000214c:	mov    rcx,QWORD PTR [rbp+0x58]
   140002150:	mov    rax,QWORD PTR [rcx]
   140002153:	call   QWORD PTR [rax+0x78]
   140002156:	test   rax,rax
   140002159:	je     0x140002187
   14000215b:	mov    rcx,QWORD PTR [rbp+0x58]
   14000215f:	call   0x140004590
   140002164:	mov    rcx,QWORD PTR [rbp+0x60]
   140002168:	mov    rax,QWORD PTR [rcx]
   14000216b:	call   QWORD PTR [rax+0x28]
   14000216e:	test   eax,eax
   140002170:	je     0x140002180
   140002172:	lea    rcx,[rip+0x18937]        # 0x14001aab0
   140002179:	call   0x140004360
   14000217e:	mov    edi,esi
   140002180:	mov    esi,edi
   140002182:	jmp    0x1400023c8
   140002187:	cmp    BYTE PTR [rip+0x225d2],dil        # 0x140024760
   14000218e:	jne    0x140002164
   140002190:	mov    dl,BYTE PTR [rip+0x225cd]        # 0x140024763
   140002196:	test   dl,dl
   140002198:	jne    0x14000238d
   14000219e:	cmp    BYTE PTR [rip+0x225bd],dil        # 0x140024762
   1400021a5:	jne    0x14000238d
   1400021ab:	test   r15,r15
   1400021ae:	je     0x14000238d
   1400021b4:	test   r14d,r14d
   1400021b7:	je     0x14000238d
   1400021bd:	cmp    DWORD PTR [rip+0x225b1],edi        # 0x140024774
   1400021c3:	mov    rcx,QWORD PTR [rip+0x225be]        # 0x140024788
   1400021ca:	mov    r12d,edi
   1400021cd:	jle    0x1400021f6
   1400021cf:	mov    rbx,rdi
   1400021d2:	mov    rcx,QWORD PTR [rbx+rcx*1]
   1400021d6:	call   0x140004074
   1400021db:	mov    rcx,QWORD PTR [rip+0x225a6]        # 0x140024788
   1400021e2:	add    r12d,esi
   1400021e5:	mov    QWORD PTR [rbx+rcx*1],rdi
   1400021e9:	add    rbx,0x20
   1400021ed:	cmp    r12d,DWORD PTR [rip+0x22580]        # 0x140024774
   1400021f4:	jl     0x1400021d2
   1400021f6:	call   0x140004074
   1400021fb:	call   0x1400040e0
   140002200:	test   al,al
   140002202:	je     0x140002224
   140002204:	call   0x140004290
   140002209:	sub    rax,QWORD PTR [rbp-0x30]
   14000220d:	mov    rcx,rax
   140002210:	call   0x1400042dc
   140002215:	lea    rcx,[rip+0x1886c]        # 0x14001aa88
   14000221c:	mov    rdx,rax
   14000221f:	call   0x14000407c
   140002224:	call   0x1400040e0
   140002229:	test   al,al
   14000222b:	je     0x14000228b
   14000222d:	lea    rax,[rip+0x20df4]        # 0x140023028
   140002234:	lea    rcx,[rip+0x1883d]        # 0x14001aa78
   14000223b:	mov    r8,r15
   14000223e:	mov    rdx,QWORD PTR [rax+r14*8]
   140002242:	call   0x140009c2c
   140002247:	movsxd r13,DWORD PTR [rbp+0x48]
   14000224b:	lea    rcx,[rip+0x1880e]        # 0x14001aa60
   140002252:	mov    edx,r13d
   140002255:	call   0x140009c2c
   14000225a:	mov    r12d,edi
   14000225d:	mov    rbx,rdi
   140002260:	test   r13,r13
   140002263:	jle    0x14000228b
   140002265:	mov    r14,QWORD PTR [rbp-0x38]
   140002269:	mov    r8,QWORD PTR [r14+rbx*8]
   14000226d:	lea    rcx,[rip+0x187d4]        # 0x14001aa48
   140002274:	mov    edx,r12d
   140002277:	call   0x140009c2c
   14000227c:	add    rbx,rsi
   14000227f:	add    r12d,esi
   140002282:	cmp    rbx,r13
   140002285:	jl     0x140002269
   140002287:	mov    r14d,DWORD PTR [rbp+0x50]
   14000228b:	mov    rcx,QWORD PTR [rbp+0x58]
   14000228f:	mov    r8,r15
   140002292:	mov    edx,r14d
   140002295:	call   0x140001608
   14000229a:	mov    rcx,QWORD PTR [rbp+0x58]
   14000229e:	mov    rbx,rax
   1400022a1:	mov    rax,QWORD PTR [rcx]
   1400022a4:	call   QWORD PTR [rax+0x78]
   1400022a7:	test   rax,rax
   1400022aa:	jne    0x1400023a5
   1400022b0:	test   rbx,rbx
   1400022b3:	jne    0x1400022c6
   1400022b5:	lea    rcx,[rip+0x182b4]        # 0x14001a570
   1400022bc:	call   0x140004360
   1400022c1:	jmp    0x1400023ae
   1400022c6:	mov    r8,QWORD PTR [rbp+0x60]
   1400022ca:	mov    rcx,QWORD PTR [rbp+0x58]
   1400022ce:	mov    rdx,rbx
   1400022d1:	call   0x140004ea4
   1400022d6:	mov    rcx,QWORD PTR [rbp+0x58]
   1400022da:	lea    r9,[rip+0x1874f]        # 0x14001aa30
   1400022e1:	mov    rax,QWORD PTR [rcx]
   1400022e4:	lea    r8,[rip+0x1873d]        # 0x14001aa28
   1400022eb:	mov    rdx,rbx
   1400022ee:	call   QWORD PTR [rax+0x388]
   1400022f4:	mov    rcx,QWORD PTR [rbp+0x58]
   1400022f8:	mov    r13,rax
   1400022fb:	mov    rax,QWORD PTR [rcx]
   1400022fe:	call   QWORD PTR [rax+0x78]
   140002301:	test   rax,rax
   140002304:	jne    0x1400023a5
   14000230a:	test   r13,r13
   14000230d:	je     0x1400022b5
   14000230f:	mov    r8d,DWORD PTR [rbp+0x48]
   140002313:	mov    rdx,QWORD PTR [rbp-0x38]
   140002317:	mov    rcx,QWORD PTR [rbp+0x58]
   14000231b:	call   0x140004eac
   140002320:	mov    rcx,QWORD PTR [rbp+0x58]
   140002324:	mov    r12,rax
   140002327:	mov    rax,QWORD PTR [rcx]
   14000232a:	call   QWORD PTR [rax+0x78]
   14000232d:	test   rax,rax
   140002330:	jne    0x1400023a5
   140002332:	test   r12,r12
   140002335:	je     0x1400022b5
   14000233b:	mov    rcx,QWORD PTR [rbp+0x58]
   14000233f:	mov    r9,r12
   140002342:	mov    r8,r13
   140002345:	mov    rax,QWORD PTR [rcx]
   140002348:	mov    rdx,rbx
   14000234b:	call   QWORD PTR [rax+0x468]
   140002351:	mov    rcx,QWORD PTR [rbp+0x58]
   140002355:	mov    rax,QWORD PTR [rcx]
   140002358:	call   QWORD PTR [rax+0x78]
   14000235b:	mov    rcx,QWORD PTR [rbp+0x60]
   14000235f:	mov    ebx,edi
   140002361:	test   rax,rax
   140002364:	mov    rax,QWORD PTR [rcx]
   140002367:	setne  bl
   14000236a:	call   QWORD PTR [rax+0x28]
   14000236d:	test   eax,eax
   14000236f:	je     0x14000237f
   140002371:	lea    rcx,[rip+0x18738]        # 0x14001aab0
   140002378:	call   0x140004360
   14000237d:	mov    ebx,esi
   14000237f:	mov    rcx,QWORD PTR [rbp+0x60]
   140002383:	mov    rax,QWORD PTR [rcx]
   140002386:	call   QWORD PTR [rax+0x18]
   140002389:	mov    eax,ebx
   14000238b:	jmp    0x1400023fe
   14000238d:	mov    rcx,QWORD PTR [rbp+0x58]
   140002391:	call   0x140001a60
   140002396:	mov    rcx,QWORD PTR [rbp+0x58]
   14000239a:	mov    rax,QWORD PTR [rcx]
   14000239d:	call   QWORD PTR [rax+0x78]
   1400023a0:	test   rax,rax
   1400023a3:	je     0x1400023d6
   1400023a5:	mov    rcx,QWORD PTR [rbp+0x58]
   1400023a9:	call   0x140004590
   1400023ae:	mov    rcx,QWORD PTR [rbp+0x60]
   1400023b2:	mov    rax,QWORD PTR [rcx]
   1400023b5:	call   QWORD PTR [rax+0x28]
   1400023b8:	test   eax,eax
   1400023ba:	je     0x1400023c8
   1400023bc:	lea    rcx,[rip+0x186ed]        # 0x14001aab0
   1400023c3:	call   0x140004360
   1400023c8:	mov    rcx,QWORD PTR [rbp+0x60]
   1400023cc:	mov    rax,QWORD PTR [rcx]
   1400023cf:	call   QWORD PTR [rax+0x18]
   1400023d2:	mov    eax,esi
   1400023d4:	jmp    0x1400023fe
   1400023d6:	mov    rcx,QWORD PTR [rbp+0x60]
   1400023da:	mov    rax,QWORD PTR [rcx]
   1400023dd:	call   QWORD PTR [rax+0x28]
   1400023e0:	test   eax,eax
   1400023e2:	je     0x1400023f2
   1400023e4:	lea    rcx,[rip+0x186c5]        # 0x14001aab0
   1400023eb:	call   0x140004360
   1400023f0:	mov    edi,esi
   1400023f2:	mov    rcx,QWORD PTR [rbp+0x60]
   1400023f6:	mov    rdx,QWORD PTR [rcx]
   1400023f9:	call   QWORD PTR [rdx+0x18]
   1400023fc:	mov    eax,edi
   1400023fe:	add    rsp,0x58
   140002402:	pop    r15
   140002404:	pop    r14
   140002406:	pop    r13
   140002408:	pop    r12
   14000240a:	pop    rdi
   14000240b:	pop    rsi
   14000240c:	pop    rbx
   14000240d:	pop    rbp
   14000240e:	ret    
   14000240f:	int3   
   140002410:	mov    QWORD PTR [rsp+0x18],rbx
   140002415:	mov    QWORD PTR [rsp+0x10],rdx
   14000241a:	mov    QWORD PTR [rsp+0x8],rcx
   14000241f:	push   rbp
   140002420:	push   rsi
   140002421:	push   rdi
   140002422:	push   r12
   140002424:	push   r13
   140002426:	push   r14
   140002428:	push   r15
   14000242a:	sub    rsp,0x30
   14000242e:	mov    rbx,rcx
   140002431:	lea    rcx,[rip+0x18868]        # 0x14001aca0
   140002438:	mov    r14b,r8b
   14000243b:	or     r12d,0xffffffff
   14000243f:	call   0x140009d94
   140002444:	movsxd rbx,DWORD PTR [rbx]
   140002447:	lea    r9d,[rbx+0x1]
   14000244b:	mov    rdi,rax
   14000244e:	movsxd rcx,r9d
   140002451:	shl    rcx,0x3
   140002455:	call   0x140003ff0
   14000245a:	mov    r11,QWORD PTR [rsp+0x78]
   14000245f:	lea    esi,[r12+0x2]
   140002464:	mov    rdx,QWORD PTR [r11]
   140002467:	mov    r8,rax
   14000246a:	mov    QWORD PTR [rsp+0x20],rax
   14000246f:	mov    rcx,QWORD PTR [rdx]
   140002472:	mov    r15,rbx
   140002475:	mov    QWORD PTR [rax],rcx
   140002478:	mov    eax,esi
   14000247a:	mov    DWORD PTR [rsp+0x88],eax
   140002481:	mov    r13d,eax
   140002484:	cmp    rax,rbx
   140002487:	jge    0x1400025d5
   14000248d:	mov    rdx,QWORD PTR [rip+0x222f4]        # 0x140024788
   140002494:	lea    rbp,[r8+0x8]
   140002498:	cmp    BYTE PTR [rip+0x222c5],0x0        # 0x140024764
   14000249f:	mov    rax,QWORD PTR [r11]
   1400024a2:	mov    rbx,QWORD PTR [rax+r13*8]
   1400024a6:	je     0x1400024bc
   1400024a8:	cmp    BYTE PTR [rbx],0x2d
   1400024ab:	je     0x1400024f3
   1400024ad:	mov    QWORD PTR [rbp+0x0],rbx
   1400024b1:	inc    esi
   1400024b3:	add    rbp,0x8
   1400024b7:	jmp    0x14000255b
   1400024bc:	lea    rdx,[rip+0x187cd]        # 0x14001ac90
   1400024c3:	mov    rcx,rbx
   1400024c6:	call   0x14000a850
   1400024cb:	test   eax,eax
   1400024cd:	je     0x140002591
   1400024d3:	lea    rdx,[rip+0x187b2]        # 0x14001ac8c
   1400024da:	mov    rcx,rbx
   1400024dd:	call   0x14000a850
   1400024e2:	test   eax,eax
   1400024e4:	je     0x140002591
   1400024ea:	cmp    BYTE PTR [rbx],0x2d
   1400024ed:	jne    0x1400025c9
   1400024f3:	mov    rcx,rbx
   1400024f6:	call   0x140001dac
   1400024fb:	test   eax,eax
   1400024fd:	js     0x14000251f
   1400024ff:	mov    rdx,QWORD PTR [rip+0x22282]        # 0x140024788
   140002506:	mov    r12d,eax
   140002509:	cdqe   
   14000250b:	shl    rax,0x5
   14000250f:	mov    rdi,QWORD PTR [rax+rdx*1]
   140002513:	mov    rax,QWORD PTR [rsp+0x70]
   140002518:	inc    rdi
   14000251b:	dec    DWORD PTR [rax]
   14000251d:	jmp    0x140002556
   14000251f:	lea    rdx,[rip+0x1875a]        # 0x14001ac80
   140002526:	mov    rcx,rbx
   140002529:	call   0x1400040e8
   14000252e:	test   eax,eax
   140002530:	je     0x140002579
   140002532:	lea    rdx,[rip+0x18737]        # 0x14001ac70
   140002539:	mov    rcx,rbx
   14000253c:	call   0x1400040e8
   140002541:	test   eax,eax
   140002543:	je     0x140002579
   140002545:	mov    QWORD PTR [rbp+0x0],rbx
   140002549:	inc    esi
   14000254b:	add    rbp,0x8
   14000254f:	mov    rdx,QWORD PTR [rip+0x22232]        # 0x140024788
   140002556:	mov    r11,QWORD PTR [rsp+0x78]
   14000255b:	mov    eax,DWORD PTR [rsp+0x88]
   140002562:	inc    r13
   140002565:	inc    eax
   140002567:	mov    DWORD PTR [rsp+0x88],eax
   14000256e:	cmp    r13,r15
   140002571:	jl     0x140002498
   140002577:	jmp    0x1400025dc
   140002579:	cmp    BYTE PTR [rbx+0x1],0x58
   14000257d:	mov    edi,0xc
   140002582:	lea    eax,[rdi-0x2]
   140002585:	cmove  edi,eax
   140002588:	add    rdi,rbx
   14000258b:	or     r12d,0xffffffff
   14000258f:	jmp    0x14000254f
   140002591:	inc    DWORD PTR [rsp+0x88]
   140002598:	inc    r13
   14000259b:	mov    QWORD PTR [rbp+0x0],rbx
   14000259f:	inc    esi
   1400025a1:	add    rbp,0x8
   1400025a5:	cmp    r13,r15
   1400025a8:	jge    0x14000254f
   1400025aa:	mov    r11,QWORD PTR [rsp+0x78]
   1400025af:	mov    rdx,QWORD PTR [rip+0x221d2]        # 0x140024788
   1400025b6:	inc    esi
   1400025b8:	mov    rax,QWORD PTR [r11]
   1400025bb:	mov    rcx,QWORD PTR [rax+r13*8]
   1400025bf:	mov    QWORD PTR [rbp+0x0],rcx
   1400025c3:	add    rbp,0x8
   1400025c7:	jmp    0x14000255b
   1400025c9:	mov    eax,DWORD PTR [rsp+0x88]
   1400025d0:	mov    r11,QWORD PTR [rsp+0x78]
   1400025d5:	mov    rdx,QWORD PTR [rip+0x221ac]        # 0x140024788
   1400025dc:	mov    r10,QWORD PTR [rsp+0x20]
   1400025e1:	movsxd r8,eax
   1400025e4:	mov    ebp,0x1
   1400025e9:	movsxd rax,esi
   1400025ec:	cmp    r8,r15
   1400025ef:	jge    0x140002613
   1400025f1:	lea    r9,[r10+rax*8]
   1400025f5:	mov    eax,r15d
   1400025f8:	sub    eax,r8d
   1400025fb:	add    esi,eax
   1400025fd:	mov    rax,QWORD PTR [r11]
   140002600:	mov    rcx,QWORD PTR [rax+r8*8]
   140002604:	add    r8,rbp
   140002607:	mov    QWORD PTR [r9],rcx
   14000260a:	add    r9,0x8
   14000260e:	cmp    r8,r15
   140002611:	jl     0x1400025fd
   140002613:	movsxd rax,esi
   140002616:	and    QWORD PTR [r10+rax*8],0x0
   14000261b:	mov    rax,QWORD PTR [rsp+0x70]
   140002620:	mov    QWORD PTR [r11],r10
   140002623:	mov    DWORD PTR [rax],esi
   140002625:	test   rdi,rdi
   140002628:	jne    0x140002665
   14000262a:	mov    rbx,QWORD PTR [rdx]
   14000262d:	add    rbx,rbp
   140002630:	cmp    DWORD PTR [rdx+0x8],0x4
   140002634:	jne    0x14000264e
   140002636:	call   0x1400045c0
   14000263b:	cmp    al,bpl
   14000263e:	jne    0x14000264e
   140002640:	mov    rax,QWORD PTR [rip+0x22141]        # 0x140024788
   140002647:	mov    rbx,QWORD PTR [rax+0x18]
   14000264b:	add    rbx,rbp
   14000264e:	lea    rcx,[rip+0x1860b]        # 0x14001ac60
   140002655:	mov    rdx,rbx
   140002658:	call   0x14000407c
   14000265d:	mov    rax,rbx
   140002660:	jmp    0x14000276f
   140002665:	test   r12d,r12d
   140002668:	js     0x14000276c
   14000266e:	movsxd rax,r12d
   140002671:	xor    ebx,ebx
   140002673:	shl    rax,0x5
   140002677:	jmp    0x1400026af
   140002679:	movsxd rcx,r12d
   14000267c:	shl    rcx,0x5
   140002680:	mov    rcx,QWORD PTR [rcx+rdx*1+0x10]
   140002685:	call   0x140001dac
   14000268a:	cmp    ebx,DWORD PTR [rip+0x220e4]        # 0x140024774
   140002690:	jg     0x140002707
   140002692:	test   eax,eax
   140002694:	js     0x1400026db
   140002696:	mov    rdx,QWORD PTR [rip+0x220eb]        # 0x140024788
   14000269d:	mov    r12d,eax
   1400026a0:	cdqe   
   1400026a2:	shl    rax,0x5
   1400026a6:	mov    rdi,QWORD PTR [rax+rdx*1]
   1400026aa:	add    rdi,rbp
   1400026ad:	add    ebx,ebp
   1400026af:	cmp    DWORD PTR [rax+rdx*1+0x8],ebp
   1400026b3:	je     0x140002679
   1400026b5:	movsxd rcx,r12d
   1400026b8:	shl    rcx,0x5
   1400026bc:	mov    r8d,DWORD PTR [rcx+rdx*1+0x8]
   1400026c1:	sub    r8d,0x2
   1400026c5:	je     0x140002745
   1400026c7:	dec    r8d
   1400026ca:	je     0x140002729
   1400026cc:	cmp    r8d,0x2
   1400026d0:	je     0x140002766
   1400026d6:	jmp    0x14000276c
   1400026db:	test   r14b,r14b
   1400026de:	jne    0x140002720
   1400026e0:	mov    rdx,QWORD PTR [rip+0x220a1]        # 0x140024788
   1400026e7:	movsxd rax,r12d
   1400026ea:	lea    rcx,[rip+0x18547]        # 0x14001ac38
   1400026f1:	shl    rax,0x5
   1400026f5:	mov    rdx,QWORD PTR [rax+rdx*1+0x10]
   1400026fa:	call   0x140004360
   1400026ff:	mov    ecx,ebp
   140002701:	call   0x140009bcc
   140002706:	int3   
   140002707:	test   r14b,r14b
   14000270a:	jne    0x140002720
   14000270c:	lea    rcx,[rip+0x184ed]        # 0x14001ac00
   140002713:	call   0x140004360
   140002718:	mov    ecx,ebp
   14000271a:	call   0x140009bcc
   14000271f:	int3   
   140002720:	lea    rax,[rip+0x184cd]        # 0x14001abf4
   140002727:	jmp    0x14000276f
   140002729:	test   r14b,r14b
   14000272c:	jne    0x140002720
   14000272e:	lea    rcx,[rip+0x184a3]        # 0x14001abd8
   140002735:	mov    rdx,rdi
   140002738:	call   0x140004360
   14000273d:	mov    ecx,ebp
   14000273f:	call   0x140009bcc
   140002744:	int3   
   140002745:	test   r14b,r14b
   140002748:	jne    0x140002766
   14000274a:	mov    r8,QWORD PTR [rdx]
   14000274d:	lea    rcx,[rip+0x1844c]        # 0x14001aba0
   140002754:	mov    rdx,rdi
   140002757:	add    r8,rbp
   14000275a:	call   0x140004360
   14000275f:	mov    rdx,QWORD PTR [rip+0x22022]        # 0x140024788
   140002766:	mov    rdi,QWORD PTR [rdx]
   140002769:	add    rdi,rbp
   14000276c:	mov    rax,rdi
   14000276f:	mov    rbx,QWORD PTR [rsp+0x80]
   140002777:	add    rsp,0x30
   14000277b:	pop    r15
   14000277d:	pop    r14
   14000277f:	pop    r13
   140002781:	pop    r12
   140002783:	pop    rdi
   140002784:	pop    rsi
   140002785:	pop    rbp
   140002786:	ret    
   140002787:	int3   
   140002788:	mov    QWORD PTR [rsp+0x20],rbx
   14000278d:	push   rbp
   14000278e:	push   rsi
   14000278f:	push   rdi
   140002790:	push   r12
   140002792:	push   r13
   140002794:	push   r14
   140002796:	push   r15
   140002798:	lea    rbp,[rsp-0xa0]
   1400027a0:	sub    rsp,0x1a0
   1400027a7:	mov    rax,QWORD PTR [rip+0x20912]        # 0x1400230c0
   1400027ae:	xor    rax,rsp
   1400027b1:	mov    QWORD PTR [rbp+0x90],rax
   1400027b8:	movzx  eax,WORD PTR [rip+0x18769]        # 0x14001af28
   1400027bf:	movups xmm0,XMMWORD PTR [rip+0x18752]        # 0x14001af18
   1400027c6:	or     DWORD PTR [rsp+0x20],0xffffffff
   1400027cb:	mov    WORD PTR [rbp-0x80],ax
   1400027cf:	mov    al,BYTE PTR [rip+0x18755]        # 0x14001af2a
   1400027d5:	mov    edi,ecx
   1400027d7:	movaps XMMWORD PTR [rsp+0x70],xmm0
   1400027dc:	mov    r12,r8
   1400027df:	mov    QWORD PTR [rsp+0x60],r8
   1400027e4:	mov    rsi,rdx
   1400027e7:	xor    ebx,ebx
   1400027e9:	lea    rcx,[rbp-0x7d]
   1400027ed:	xor    edx,edx
   1400027ef:	and    DWORD PTR [rsp+0x24],ebx
   1400027f3:	mov    r8d,0x109
   1400027f9:	mov    BYTE PTR [rbp-0x7e],al
   1400027fc:	mov    QWORD PTR [rsp+0x50],rbx
   140002801:	xor    r15d,r15d
   140002804:	call   0x14000a530
   140002809:	lea    rcx,[rip+0x18098]        # 0x14001a8a8
   140002810:	xor    r14d,r14d
   140002813:	mov    QWORD PTR [rsp+0x58],rbx
   140002818:	call   0x140009d94
   14000281d:	test   rax,rax
   140002820:	je     0x14000283b
   140002822:	cmp    BYTE PTR [rax],bl
   140002824:	je     0x140002c40
   14000282a:	mov    rcx,rax
   14000282d:	call   0x140004048
   140002832:	mov    QWORD PTR [r12],rax
   140002836:	jmp    0x140002c40
   14000283b:	lea    eax,[rdi+0x1]
   14000283e:	movsxd rcx,eax
   140002841:	shl    rcx,0x3
   140002845:	call   0x140003ff0
   14000284a:	mov    rcx,QWORD PTR [rsi]
   14000284d:	add    rsi,0x8
   140002851:	mov    QWORD PTR [rax],rcx
   140002854:	mov    rbx,QWORD PTR [rsi]
   140002857:	mov    r13,rax
   14000285a:	mov    QWORD PTR [rsp+0x68],rax
   14000285f:	lea    r12,[rax+0x8]
   140002863:	mov    eax,0x1
   140002868:	sub    edi,eax
   14000286a:	test   rbx,rbx
   14000286d:	je     0x1400029ac
   140002873:	mov    r13d,DWORD PTR [rsp+0x24]
   140002878:	cmp    BYTE PTR [rbx],0x2d
   14000287b:	jne    0x1400029a2
   140002881:	lea    rdx,[rip+0x18680]        # 0x14001af08
   140002888:	mov    rcx,rbx
   14000288b:	call   0x1400040e8
   140002890:	test   eax,eax
   140002892:	jne    0x14000289f
   140002894:	add    rbx,0x9
   140002898:	mov    QWORD PTR [rsp+0x50],rbx
   14000289d:	jmp    0x1400028d7
   14000289f:	lea    rdx,[rip+0x1864a]        # 0x14001aef0
   1400028a6:	mov    rcx,rbx
   1400028a9:	call   0x14000a850
   1400028ae:	test   eax,eax
   1400028b0:	jne    0x1400028c0
   1400028b2:	mov    eax,0x1
   1400028b7:	mov    DWORD PTR [rsp+0x20],eax
   1400028bb:	jmp    0x140002990
   1400028c0:	lea    rdx,[rip+0x18611]        # 0x14001aed8
   1400028c7:	mov    rcx,rbx
   1400028ca:	call   0x14000a850
   1400028cf:	test   eax,eax
   1400028d1:	jne    0x1400028e1
   1400028d3:	and    DWORD PTR [rsp+0x20],eax
   1400028d7:	mov    eax,0x1
   1400028dc:	jmp    0x140002990
   1400028e1:	lea    rdx,[rip+0x185e4]        # 0x14001aecc
   1400028e8:	mov    rcx,rbx
   1400028eb:	call   0x14000a850
   1400028f0:	lea    rdx,[rip+0x18399]        # 0x14001ac90
   1400028f7:	mov    rcx,rbx
   1400028fa:	test   eax,eax
   1400028fc:	mov    eax,0x1
   140002901:	cmove  r13d,eax
   140002905:	call   0x14000a850
   14000290a:	test   eax,eax
   14000290c:	je     0x140002921
   14000290e:	lea    rdx,[rip+0x18377]        # 0x14001ac8c
   140002915:	mov    rcx,rbx
   140002918:	call   0x14000a850
   14000291d:	test   eax,eax
   14000291f:	jne    0x140002937
   140002921:	cmp    edi,0x2
   140002924:	jl     0x140002937
   140002926:	mov    QWORD PTR [r12],rbx
   14000292a:	dec    edi
   14000292c:	add    r12,0x8
   140002930:	add    rsi,0x8
   140002934:	mov    rbx,QWORD PTR [rsi]
   140002937:	lea    rdx,[rip+0x18572]        # 0x14001aeb0
   14000293e:	mov    rcx,rbx
   140002941:	call   0x14000a850
   140002946:	test   eax,eax
   140002948:	jne    0x140002954
   14000294a:	mov    eax,0x1
   14000294f:	mov    r15d,eax
   140002952:	jmp    0x140002988
   140002954:	lea    rdx,[rip+0x1853d]        # 0x14001ae98
   14000295b:	mov    rcx,rbx
   14000295e:	call   0x1400040e8
   140002963:	test   eax,eax
   140002965:	jne    0x14000296c
   140002967:	xor    r15d,r15d
   14000296a:	jmp    0x140002983
   14000296c:	lea    rdx,[rip+0x18515]        # 0x14001ae88
   140002973:	mov    rcx,rbx
   140002976:	call   0x1400040e8
   14000297b:	test   eax,eax
   14000297d:	jne    0x140002983
   14000297f:	lea    r14,[rbx+0x8]
   140002983:	mov    eax,0x1
   140002988:	mov    QWORD PTR [r12],rbx
   14000298c:	add    r12,0x8
   140002990:	add    rsi,0x8
   140002994:	sub    edi,eax
   140002996:	mov    rbx,QWORD PTR [rsi]
   140002999:	test   rbx,rbx
   14000299c:	jne    0x140002878
   1400029a2:	mov    DWORD PTR [rsp+0x24],r13d
   1400029a7:	mov    r13,QWORD PTR [rsp+0x68]
   1400029ac:	test   edi,edi
   1400029ae:	jg     0x1400029b4
   1400029b0:	xor    ebx,ebx
   1400029b2:	jmp    0x1400029d5
   1400029b4:	mov    rbx,QWORD PTR [rsi]
   1400029b7:	sub    edi,eax
   1400029b9:	mov    QWORD PTR [r12],rbx
   1400029bd:	jmp    0x1400029cd
   1400029bf:	sub    edi,eax
   1400029c1:	mov    rax,QWORD PTR [rsi]
   1400029c4:	mov    QWORD PTR [r12],rax
   1400029c8:	mov    eax,0x1
   1400029cd:	add    r12,0x8
   1400029d1:	add    rsi,0x8
   1400029d5:	test   edi,edi
   1400029d7:	jg     0x1400029bf
   1400029d9:	xor    esi,esi
   1400029db:	mov    QWORD PTR [r12],rsi
   1400029df:	cmp    DWORD PTR [rsp+0x24],esi
   1400029e3:	je     0x140002a40
   1400029e5:	test   rbx,rbx
   1400029e8:	je     0x140002a40
   1400029ea:	lea    rdx,[rsp+0x28]
   1400029ef:	mov    rcx,rbx
   1400029f2:	call   0x140006a58
   1400029f7:	test   eax,eax
   1400029f9:	je     0x140002a21
   1400029fb:	mov    rdx,rbx
   1400029fe:	lea    rcx,[rip+0x1845b]        # 0x14001ae60
   140002a05:	cmp    eax,0xffffffff
   140002a08:	je     0x140002a11
   140002a0a:	lea    rcx,[rip+0x18427]        # 0x14001ae38
   140002a11:	call   0x140004360
   140002a16:	mov    ecx,0x1
   140002a1b:	call   0x140009bcc
   140002a20:	int3   
   140002a21:	test   r15d,r15d
   140002a24:	jne    0x140002a54
   140002a26:	test   r14,r14
   140002a29:	jne    0x140002a5e
   140002a2b:	mov    r14,QWORD PTR [rsp+0x48]
   140002a30:	test   r14,r14
   140002a33:	je     0x140002af9
   140002a39:	mov    QWORD PTR [rsp+0x58],rbx
   140002a3e:	jmp    0x140002a54
   140002a40:	mov    QWORD PTR [rsp+0x28],rsi
   140002a45:	mov    QWORD PTR [rsp+0x30],rsi
   140002a4a:	mov    QWORD PTR [rsp+0x38],rsi
   140002a4f:	mov    BYTE PTR [rsp+0x40],sil
   140002a54:	test   r14,r14
   140002a57:	je     0x140002aa4
   140002a59:	test   r15d,r15d
   140002a5c:	jne    0x140002aa4
   140002a5e:	mov    rcx,r14
   140002a61:	call   0x140009fa0
   140002a66:	lea    rcx,[rip+0x183b3]        # 0x14001ae20
   140002a6d:	mov    rbx,rax
   140002a70:	call   0x140009fa0
   140002a75:	lea    rcx,[rbx+rax*1+0x1]
   140002a7a:	call   0x140003ff0
   140002a7f:	lea    rdx,[rip+0x1839a]        # 0x14001ae20
   140002a86:	mov    rcx,rax
   140002a89:	mov    rbx,rax
   140002a8c:	call   0x14000a750
   140002a91:	mov    rdx,r14
   140002a94:	mov    rcx,rbx
   140002a97:	call   0x14000a6b0
   140002a9c:	mov    rcx,rbx
   140002a9f:	call   0x14000c2e8
   140002aa4:	mov    rdi,QWORD PTR [rsp+0x58]
   140002aa9:	test   rdi,rdi
   140002aac:	je     0x140002af9
   140002aae:	test   r15d,r15d
   140002ab1:	jne    0x140002af9
   140002ab3:	mov    rcx,rdi
   140002ab6:	call   0x140009fa0
   140002abb:	lea    rcx,[rip+0x18346]        # 0x14001ae08
   140002ac2:	mov    rbx,rax
   140002ac5:	call   0x140009fa0
   140002aca:	lea    rcx,[rbx+rax*1+0x1]
   140002acf:	call   0x140003ff0
   140002ad4:	lea    rdx,[rip+0x1832d]        # 0x14001ae08
   140002adb:	mov    rcx,rax
   140002ade:	mov    rbx,rax
   140002ae1:	call   0x14000a750
   140002ae6:	mov    rdx,rdi
   140002ae9:	mov    rcx,rbx
   140002aec:	call   0x14000a6b0
   140002af1:	mov    rcx,rbx
   140002af4:	call   0x14000c2e8
   140002af9:	mov    rax,QWORD PTR [rsp+0x50]
   140002afe:	movzx  ecx,BYTE PTR [rsp+0x40]
   140002b03:	mov    rdx,QWORD PTR [rsp+0x38]
   140002b08:	mov    r8d,DWORD PTR [rsp+0x20]
   140002b0d:	test   rax,rax
   140002b10:	cmovne rdx,rax
   140002b14:	cmp    r8d,0xffffffff
   140002b18:	movzx  eax,r8b
   140002b1c:	cmovne ecx,eax
   140002b1f:	mov    QWORD PTR [rsp+0x38],rdx
   140002b24:	mov    BYTE PTR [rsp+0x40],cl
   140002b28:	mov    rcx,QWORD PTR [rsp+0x30]
   140002b2d:	test   rcx,rcx
   140002b30:	je     0x140002b44
   140002b32:	call   0x140004048
   140002b37:	mov    rcx,QWORD PTR [rsp+0x60]
   140002b3c:	mov    rdx,QWORD PTR [rsp+0x38]
   140002b41:	mov    QWORD PTR [rcx],rax
   140002b44:	test   rdx,rdx
   140002b47:	je     0x140002c33
   140002b4d:	mov    rcx,rdx
   140002b50:	call   0x140007014
   140002b55:	test   eax,eax
   140002b57:	jne    0x140002b75
   140002b59:	mov    rdx,QWORD PTR [rsp+0x38]
   140002b5e:	lea    rcx,[rip+0x1826b]        # 0x14001add0
   140002b65:	call   0x140004360
   140002b6a:	mov    ecx,0x1
   140002b6f:	call   0x140009bcc
   140002b74:	int3   
   140002b75:	lea    rcx,[rsp+0x28]
   140002b7a:	call   0x1400045d4
   140002b7f:	mov    rcx,QWORD PTR [rsp+0x38]
   140002b84:	lea    rdx,[rip+0x18239]        # 0x14001adc4
   140002b8b:	test   rax,rax
   140002b8e:	mov    r9,rdx
   140002b91:	mov    rbx,rax
   140002b94:	cmovne r9,rax
   140002b98:	cmp    BYTE PTR [rsp+0x40],sil
   140002b9d:	lea    rax,[rip+0x18218]        # 0x14001adbc
   140002ba4:	lea    r8,[rip+0x18209]        # 0x14001adb4
   140002bab:	cmovne r8,rax
   140002baf:	test   rcx,rcx
   140002bb2:	cmovne rdx,rcx
   140002bb6:	lea    rcx,[rip+0x181bb]        # 0x14001ad78
   140002bbd:	call   0x14000407c
   140002bc2:	test   rbx,rbx
   140002bc5:	jne    0x140002bf6
   140002bc7:	mov    rdx,QWORD PTR [rsp+0x38]
   140002bcc:	mov    rcx,QWORD PTR [rip+0x21b65]        # 0x140024738
   140002bd3:	call   0x140006efc
   140002bd8:	test   eax,eax
   140002bda:	jne    0x140002c33
   140002bdc:	mov    rdx,QWORD PTR [rsp+0x38]
   140002be1:	lea    rcx,[rip+0x18158]        # 0x14001ad40
   140002be8:	call   0x140004360
   140002bed:	lea    ecx,[rbx+0x1]
   140002bf0:	call   0x140009bcc
   140002bf5:	int3   
   140002bf6:	mov    rcx,QWORD PTR [rsp+0x30]
   140002bfb:	test   rcx,rcx
   140002bfe:	je     0x140002c1e
   140002c00:	call   0x140009fa0
   140002c05:	mov    ecx,0x104
   140002c0a:	cmp    rax,rcx
   140002c0d:	ja     0x140002c6a
   140002c0f:	mov    rdx,QWORD PTR [rsp+0x30]
   140002c14:	lea    rcx,[rsp+0x70]
   140002c19:	call   0x14000a6b0
   140002c1e:	lea    rcx,[rsp+0x70]
   140002c23:	call   0x14000c2e8
   140002c28:	mov    rdx,r13
   140002c2b:	mov    rcx,rbx
   140002c2e:	call   0x140004860
   140002c33:	call   0x140006c38
   140002c38:	mov    rcx,r13
   140002c3b:	call   0x140004074
   140002c40:	mov    rcx,QWORD PTR [rbp+0x90]
   140002c47:	xor    rcx,rsp
   140002c4a:	call   0x14000a820
   140002c4f:	mov    rbx,QWORD PTR [rsp+0x1f8]
   140002c57:	add    rsp,0x1a0
   140002c5e:	pop    r15
   140002c60:	pop    r14
   140002c62:	pop    r13
   140002c64:	pop    r12
   140002c66:	pop    rdi
   140002c67:	pop    rsi
   140002c68:	pop    rbp
   140002c69:	ret    
   140002c6a:	mov    edx,ecx
   140002c6c:	lea    rcx,[rip+0x1804d]        # 0x14001acc0
   140002c73:	call   0x140004360
   140002c78:	mov    ecx,0x1
   140002c7d:	call   0x140009bcc
   140002c82:	int3   
   140002c83:	int3   
   140002c84:	mov    QWORD PTR [rsp+0x10],rbx
   140002c89:	mov    QWORD PTR [rsp+0x18],r8
   140002c8e:	mov    QWORD PTR [rsp+0x8],rcx
   140002c93:	push   rbp
   140002c94:	push   rsi
   140002c95:	push   rdi
   140002c96:	push   r12
   140002c98:	push   r13
   140002c9a:	push   r14
   140002c9c:	push   r15
   140002c9e:	sub    rsp,0x20
   140002ca2:	mov    rbp,QWORD PTR [rdx]
   140002ca5:	mov    r13,QWORD PTR [rsp+0x80]
   140002cad:	mov    esi,DWORD PTR [rcx]
   140002caf:	xor    r12d,r12d
   140002cb2:	mov    r14,r9
   140002cb5:	mov    r15,rdx
   140002cb8:	and    DWORD PTR [r13+0x0],r12d
   140002cbc:	mov    rdi,QWORD PTR [rbp+0x0]
   140002cc0:	lea    ebx,[r12+0x1]
   140002cc5:	test   rdi,rdi
   140002cc8:	je     0x14000313d
   140002cce:	cmp    BYTE PTR [rdi],0x2d
   140002cd1:	jne    0x140003133
   140002cd7:	lea    rdx,[rip+0x17fb2]        # 0x14001ac90
   140002cde:	mov    rcx,rdi
   140002ce1:	add    rbp,0x8
   140002ce5:	sub    esi,ebx
   140002ce7:	call   0x14000a850
   140002cec:	test   eax,eax
   140002cee:	je     0x14000310c
   140002cf4:	lea    rdx,[rip+0x17f91]        # 0x14001ac8c
   140002cfb:	mov    rcx,rdi
   140002cfe:	call   0x14000a850
   140002d03:	test   eax,eax
   140002d05:	je     0x14000310c
   140002d0b:	lea    rdx,[rip+0x181ba]        # 0x14001aecc
   140002d12:	mov    rcx,rdi
   140002d15:	call   0x14000a850
   140002d1a:	test   eax,eax
   140002d1c:	jne    0x140002d2f
   140002d1e:	cmp    esi,ebx
   140002d20:	jl     0x140003158
   140002d26:	lea    r12d,[rax+0x2]
   140002d2a:	jmp    0x140003126
   140002d2f:	lea    rdx,[rip+0x18486]        # 0x14001b1bc
   140002d36:	mov    rcx,rdi
   140002d39:	call   0x14000a850
   140002d3e:	test   eax,eax
   140002d40:	je     0x1400031a1
   140002d46:	lea    rdx,[rip+0x1846b]        # 0x14001b1b8
   140002d4d:	mov    rcx,rdi
   140002d50:	call   0x14000a850
   140002d55:	test   eax,eax
   140002d57:	je     0x1400031a1
   140002d5d:	lea    rdx,[rip+0x18450]        # 0x14001b1b4
   140002d64:	mov    rcx,rdi
   140002d67:	call   0x14000a850
   140002d6c:	test   eax,eax
   140002d6e:	je     0x1400031a1
   140002d74:	lea    rdx,[rip+0x1842d]        # 0x14001b1a8
   140002d7b:	mov    rcx,rdi
   140002d7e:	call   0x14000a850
   140002d83:	test   eax,eax
   140002d85:	je     0x140003199
   140002d8b:	lea    rdx,[rip+0x18406]        # 0x14001b198
   140002d92:	mov    rcx,rdi
   140002d95:	call   0x14000a850
   140002d9a:	test   eax,eax
   140002d9c:	jne    0x140002da9
   140002d9e:	mov    BYTE PTR [rip+0x219bd],bl        # 0x140024761
   140002da4:	jmp    0x140003126
   140002da9:	lea    rdx,[rip+0x183e0]        # 0x14001b190
   140002db0:	mov    rcx,rdi
   140002db3:	call   0x14000a850
   140002db8:	test   eax,eax
   140002dba:	je     0x140003191
   140002dc0:	lea    rdx,[rip+0x183b9]        # 0x14001b180
   140002dc7:	mov    rcx,rdi
   140002dca:	call   0x14000a850
   140002dcf:	test   eax,eax
   140002dd1:	je     0x140003103
   140002dd7:	lea    rdx,[rip+0x18392]        # 0x14001b170
   140002dde:	mov    rcx,rdi
   140002de1:	call   0x1400040e8
   140002de6:	test   eax,eax
   140002de8:	je     0x140003103
   140002dee:	lea    rdx,[rip+0x18373]        # 0x14001b168
   140002df5:	mov    rcx,rdi
   140002df8:	call   0x14000a850
   140002dfd:	test   eax,eax
   140002dff:	jne    0x140002e0d
   140002e01:	lea    rcx,[rip+0x18340]        # 0x14001b148
   140002e08:	jmp    0x140002f21
   140002e0d:	lea    rdx,[rip+0x18324]        # 0x14001b138
   140002e14:	mov    rcx,rdi
   140002e17:	call   0x14000a850
   140002e1c:	test   eax,eax
   140002e1e:	je     0x140003173
   140002e24:	lea    rdx,[rip+0x182fd]        # 0x14001b128
   140002e2b:	mov    rcx,rdi
   140002e2e:	call   0x14000a850
   140002e33:	test   eax,eax
   140002e35:	jne    0x140002e43
   140002e37:	lea    rcx,[rip+0x182da]        # 0x14001b118
   140002e3e:	jmp    0x140002f21
   140002e43:	lea    rdx,[rip+0x182c6]        # 0x14001b110
   140002e4a:	mov    rcx,rdi
   140002e4d:	call   0x14000a850
   140002e52:	test   eax,eax
   140002e54:	jne    0x140002e62
   140002e56:	lea    rcx,[rip+0x182af]        # 0x14001b10c
   140002e5d:	jmp    0x140002f21
   140002e62:	lea    rdx,[rip+0x1829f]        # 0x14001b108
   140002e69:	mov    rcx,rdi
   140002e6c:	call   0x14000a850
   140002e71:	test   eax,eax
   140002e73:	jne    0x140002e81
   140002e75:	lea    rcx,[rip+0x18284]        # 0x14001b100
   140002e7c:	jmp    0x140002f21
   140002e81:	lea    rdx,[rip+0x18270]        # 0x14001b0f8
   140002e88:	mov    rcx,rdi
   140002e8b:	call   0x14000a850
   140002e90:	test   eax,eax
   140002e92:	jne    0x140002ea0
   140002e94:	lea    rcx,[rip+0x18255]        # 0x14001b0f0
   140002e9b:	jmp    0x140002f21
   140002ea0:	lea    rdx,[rip+0x18239]        # 0x14001b0e0
   140002ea7:	mov    rcx,rdi
   140002eaa:	call   0x14000a850
   140002eaf:	test   eax,eax
   140002eb1:	jne    0x140002ebc
   140002eb3:	lea    rcx,[rip+0x18216]        # 0x14001b0d0
   140002eba:	jmp    0x140002f21
   140002ebc:	lea    rdx,[rip+0x181fd]        # 0x14001b0c0
   140002ec3:	mov    rcx,rdi
   140002ec6:	call   0x14000a850
   140002ecb:	test   eax,eax
   140002ecd:	jne    0x140002ed8
   140002ecf:	lea    rcx,[rip+0x181da]        # 0x14001b0b0
   140002ed6:	jmp    0x140002f21
   140002ed8:	lea    rdx,[rip+0x181c9]        # 0x14001b0a8
   140002edf:	mov    rcx,rdi
   140002ee2:	call   0x14000a850
   140002ee7:	test   eax,eax
   140002ee9:	je     0x140002ecf
   140002eeb:	lea    rdx,[rip+0x181a6]        # 0x14001b098
   140002ef2:	mov    rcx,rdi
   140002ef5:	call   0x14000a850
   140002efa:	test   eax,eax
   140002efc:	jne    0x140002f07
   140002efe:	lea    rcx,[rip+0x18183]        # 0x14001b088
   140002f05:	jmp    0x140002f21
   140002f07:	lea    rdx,[rip+0x1816a]        # 0x14001b078
   140002f0e:	mov    rcx,rdi
   140002f11:	call   0x14000a850
   140002f16:	test   eax,eax
   140002f18:	jne    0x140002f2d
   140002f1a:	lea    rcx,[rip+0x18147]        # 0x14001b068
   140002f21:	xor    edx,edx
   140002f23:	call   0x14000120c
   140002f28:	jmp    0x140003126
   140002f2d:	lea    rdx,[rip+0x18128]        # 0x14001b05c
   140002f34:	mov    rcx,rdi
   140002f37:	call   0x1400040e8
   140002f3c:	mov    rcx,rdi
   140002f3f:	test   eax,eax
   140002f41:	jne    0x140002f7e
   140002f43:	call   0x140009fa0
   140002f48:	lea    rcx,[rax+0x32]
   140002f4c:	call   0x140003ff0
   140002f51:	cmp    BYTE PTR [rdi+0x5],0x0
   140002f55:	mov    rbx,rax
   140002f58:	mov    rcx,rax
   140002f5b:	je     0x140002f6d
   140002f5d:	lea    r8,[rdi+0x6]
   140002f61:	lea    rdx,[rip+0x180d8]        # 0x14001b040
   140002f68:	jmp    0x1400030ed
   140002f6d:	lea    rdx,[rip+0x180a4]        # 0x14001b018
   140002f74:	call   0x14000a474
   140002f79:	jmp    0x1400030f2
   140002f7e:	lea    rdx,[rip+0x1808b]        # 0x14001b010
   140002f85:	call   0x1400040e8
   140002f8a:	test   eax,eax
   140002f8c:	je     0x1400030cb
   140002f92:	lea    rdx,[rip+0x1806f]        # 0x14001b008
   140002f99:	mov    rcx,rdi
   140002f9c:	call   0x1400040e8
   140002fa1:	test   eax,eax
   140002fa3:	je     0x1400030cb
   140002fa9:	lea    rdx,[rip+0x18054]        # 0x14001b004
   140002fb0:	mov    rcx,rdi
   140002fb3:	call   0x1400040e8
   140002fb8:	test   eax,eax
   140002fba:	je     0x1400030cb
   140002fc0:	lea    rdx,[rip+0x18039]        # 0x14001b000
   140002fc7:	mov    rcx,rdi
   140002fca:	call   0x1400040e8
   140002fcf:	test   eax,eax
   140002fd1:	je     0x1400030cb
   140002fd7:	lea    rdx,[rip+0x18012]        # 0x14001aff0
   140002fde:	mov    rcx,rdi
   140002fe1:	call   0x14000a850
   140002fe6:	test   eax,eax
   140002fe8:	je     0x1400030ba
   140002fee:	lea    rdx,[rip+0x17ff7]        # 0x14001afec
   140002ff5:	mov    rcx,rdi
   140002ff8:	call   0x14000a850
   140002ffd:	test   eax,eax
   140002fff:	je     0x1400030ba
   140003005:	lea    rdx,[rip+0x17fd4]        # 0x14001afe0
   14000300c:	mov    rcx,rdi
   14000300f:	call   0x14000a850
   140003014:	test   eax,eax
   140003016:	je     0x1400030ba
   14000301c:	lea    rdx,[rip+0x17ee5]        # 0x14001af08
   140003023:	mov    rcx,rdi
   140003026:	call   0x1400040e8
   14000302b:	test   eax,eax
   14000302d:	je     0x140003126
   140003033:	lea    rdx,[rip+0x17e9e]        # 0x14001aed8
   14000303a:	mov    rcx,rdi
   14000303d:	call   0x14000a850
   140003042:	test   eax,eax
   140003044:	je     0x140003126
   14000304a:	lea    rdx,[rip+0x17e9f]        # 0x14001aef0
   140003051:	mov    rcx,rdi
   140003054:	call   0x14000a850
   140003059:	test   eax,eax
   14000305b:	je     0x140003126
   140003061:	lea    rdx,[rip+0x17e20]        # 0x14001ae88
   140003068:	mov    rcx,rdi
   14000306b:	call   0x1400040e8
   140003070:	test   eax,eax
   140003072:	je     0x140003126
   140003078:	mov    rcx,rdi
   14000307b:	call   0x140004ea8
   140003080:	test   al,al
   140003082:	jne    0x140003126
   140003088:	lea    rdx,[rip+0x1798d]        # 0x14001aa1c
   14000308f:	mov    rcx,rdi
   140003092:	call   0x1400040e8
   140003097:	test   eax,eax
   140003099:	je     0x140003126
   14000309f:	lea    rdx,[rip+0x1796e]        # 0x14001aa14
   1400030a6:	mov    rcx,rdi
   1400030a9:	call   0x1400040e8
   1400030ae:	test   eax,eax
   1400030b0:	je     0x140003126
   1400030b2:	mov    rcx,rdi
   1400030b5:	jmp    0x140002f21
   1400030ba:	lea    rcx,[rip+0x17eef]        # 0x14001afb0
   1400030c1:	mov    rdx,rdi
   1400030c4:	call   0x140004360
   1400030c9:	jmp    0x140003126
   1400030cb:	mov    rcx,rdi
   1400030ce:	call   0x140009fa0
   1400030d3:	lea    rcx,[rax+0x6]
   1400030d7:	call   0x140003ff0
   1400030dc:	lea    r8,[rdi+0x1]
   1400030e0:	lea    rdx,[rip+0x17ebd]        # 0x14001afa4
   1400030e7:	mov    rbx,rax
   1400030ea:	mov    rcx,rax
   1400030ed:	call   0x14000a474
   1400030f2:	xor    edx,edx
   1400030f4:	mov    rcx,rbx
   1400030f7:	call   0x14000120c
   1400030fc:	mov    ebx,0x1
   140003101:	jmp    0x140003126
   140003103:	mov    QWORD PTR [rip+0x2165e],rdi        # 0x140024768
   14000310a:	jmp    0x140003126
   14000310c:	cmp    esi,ebx
   14000310e:	jl     0x1400031a9
   140003114:	mov    rcx,QWORD PTR [rbp+0x0]
   140003118:	call   0x14000137c
   14000311d:	add    rbp,0x8
   140003121:	sub    esi,ebx
   140003123:	mov    r12d,ebx
   140003126:	mov    rdi,QWORD PTR [rbp+0x0]
   14000312a:	test   rdi,rdi
   14000312d:	jne    0x140002cce
   140003133:	mov    r8,QWORD PTR [rsp+0x70]
   140003138:	mov    rcx,QWORD PTR [rsp+0x60]
   14000313d:	sub    esi,ebx
   14000313f:	js     0x14000314c
   140003141:	mov    rax,QWORD PTR [rbp+0x0]
   140003145:	add    rbp,0x8
   140003149:	mov    QWORD PTR [r14],rax
   14000314c:	cmp    QWORD PTR [r14],0x0
   140003150:	jne    0x1400031b2
   140003152:	mov    DWORD PTR [r13+0x0],ebx
   140003156:	jmp    0x1400031b9
   140003158:	lea    rcx,[rip+0x17e19]        # 0x14001af78
   14000315f:	mov    rdx,rdi
   140003162:	call   0x140004360
   140003167:	mov    BYTE PTR [rip+0x215f5],bl        # 0x140024762
   14000316d:	mov    DWORD PTR [r13+0x0],ebx
   140003171:	jmp    0x1400031c5
   140003173:	mov    r8,QWORD PTR [rip+0x215be]        # 0x140024738
   14000317a:	mov    rdx,QWORD PTR [rip+0x215cf]        # 0x140024750
   140003181:	lea    rcx,[rip+0x17dd8]        # 0x14001af60
   140003188:	call   0x140001f04
   14000318d:	xor    al,al
   14000318f:	jmp    0x1400031c7
   140003191:	mov    BYTE PTR [rip+0x215cc],bl        # 0x140024763
   140003197:	jmp    0x1400031c5
   140003199:	mov    BYTE PTR [rip+0x215c1],bl        # 0x140024760
   14000319f:	jmp    0x1400031c5
   1400031a1:	mov    BYTE PTR [rip+0x215bb],bl        # 0x140024762
   1400031a7:	jmp    0x1400031c5
   1400031a9:	lea    rcx,[rip+0x17d80]        # 0x14001af30
   1400031b0:	jmp    0x14000315f
   1400031b2:	test   r12d,r12d
   1400031b5:	cmove  r12d,ebx
   1400031b9:	test   esi,esi
   1400031bb:	js     0x1400031c2
   1400031bd:	mov    DWORD PTR [rcx],esi
   1400031bf:	mov    QWORD PTR [r15],rbp
   1400031c2:	mov    DWORD PTR [r8],r12d
   1400031c5:	mov    al,bl
   1400031c7:	mov    rbx,QWORD PTR [rsp+0x68]
   1400031cc:	add    rsp,0x20
   1400031d0:	pop    r15
   1400031d2:	pop    r14
   1400031d4:	pop    r13
   1400031d6:	pop    r12
   1400031d8:	pop    rdi
   1400031d9:	pop    rsi
   1400031da:	pop    rbp
   1400031db:	ret    
   1400031dc:	mov    QWORD PTR [rsp+0x10],rbx
   1400031e1:	mov    QWORD PTR [rsp+0x18],rbp
   1400031e6:	mov    QWORD PTR [rsp+0x20],rsi
   1400031eb:	push   rdi
   1400031ec:	push   r12
   1400031ee:	push   r13
   1400031f0:	push   r14
   1400031f2:	push   r15
   1400031f4:	sub    rsp,0x20
   1400031f8:	movsxd r13,DWORD PTR [r8]
   1400031fb:	mov    r15,QWORD PTR [r9]
   1400031fe:	movsxd rbp,ecx
   140003201:	lea    ebx,[r13+rbp*1+0x0]
   140003206:	mov    rsi,r9
   140003209:	mov    rdi,r8
   14000320c:	lea    eax,[rbx+0x1]
   14000320f:	mov    r14,rdx
   140003212:	movsxd rcx,eax
   140003215:	shl    rcx,0x3
   140003219:	call   0x140003ff0
   14000321e:	mov    DWORD PTR [rdi],ebx
   140003220:	xor    ebx,ebx
   140003222:	mov    r12,rax
   140003225:	mov    QWORD PTR [rsi],rax
   140003228:	test   ebp,ebp
   14000322a:	jle    0x14000325d
   14000322c:	mov    rax,QWORD PTR [r14+rbx*8]
   140003230:	cmp    BYTE PTR [rax],0x2d
   140003233:	jne    0x140003255
   140003235:	cmp    BYTE PTR [rax+0x1],0x4a
   140003239:	jne    0x140003255
   14000323b:	lea    rcx,[rax+0x2]
   14000323f:	test   rcx,rcx
   140003242:	jne    0x140003248
   140003244:	xor    eax,eax
   140003246:	jmp    0x14000324d
   140003248:	call   0x140004048
   14000324d:	mov    QWORD PTR [r12],rax
   140003251:	add    r12,0x8
   140003255:	inc    rbx
   140003258:	cmp    rbx,rbp
   14000325b:	jl     0x14000322c
   14000325d:	xor    eax,eax
   14000325f:	test   r13,r13
   140003262:	jle    0x140003290
   140003264:	mov    rcx,QWORD PTR [r15+rax*8]
   140003268:	cmp    BYTE PTR [rcx],0x2d
   14000326b:	jne    0x140003288
   14000326d:	cmp    BYTE PTR [rcx+0x1],0x4a
   140003271:	jne    0x140003288
   140003273:	add    rcx,0x2
   140003277:	cmp    BYTE PTR [rcx],0x0
   14000327a:	je     0x14000333a
   140003280:	mov    QWORD PTR [r12],rcx
   140003284:	add    r12,0x8
   140003288:	inc    rax
   14000328b:	cmp    rax,r13
   14000328e:	jl     0x140003264
   140003290:	xor    ebx,ebx
   140003292:	test   ebp,ebp
   140003294:	jle    0x1400032ba
   140003296:	mov    rcx,QWORD PTR [r14+rbx*8]
   14000329a:	cmp    BYTE PTR [rcx],0x2d
   14000329d:	jne    0x1400032a5
   14000329f:	cmp    BYTE PTR [rcx+0x1],0x4a
   1400032a3:	je     0x1400032b2
   1400032a5:	call   0x140004048
   1400032aa:	mov    QWORD PTR [r12],rax
   1400032ae:	add    r12,0x8
   1400032b2:	inc    rbx
   1400032b5:	cmp    rbx,rbp
   1400032b8:	jl     0x140003296
   1400032ba:	xor    esi,esi
   1400032bc:	xor    ebx,ebx
   1400032be:	test   r13,r13
   1400032c1:	jle    0x14000336b
   1400032c7:	lea    rbp,[r15+0x8]
   1400032cb:	mov    r14d,r13d
   1400032ce:	mov    rdi,QWORD PTR [r15+rbx*8]
   1400032d2:	cmp    BYTE PTR [rdi],0x2d
   1400032d5:	jne    0x140003351
   1400032d7:	mov    al,BYTE PTR [rdi+0x1]
   1400032da:	cmp    al,0x4a
   1400032dc:	je     0x140003359
   1400032de:	cmp    BYTE PTR [rip+0x21480],0x0        # 0x140024765
   1400032e5:	je     0x140003351
   1400032e7:	cmp    al,0x63
   1400032e9:	jne    0x140003351
   1400032eb:	lea    rdx,[rip+0x1799a]        # 0x14001ac8c
   1400032f2:	mov    rcx,rdi
   1400032f5:	call   0x14000a850
   1400032fa:	test   eax,eax
   1400032fc:	je     0x140003311
   1400032fe:	lea    rdx,[rip+0x1798b]        # 0x14001ac90
   140003305:	mov    rcx,rdi
   140003308:	call   0x14000a850
   14000330d:	test   eax,eax
   14000330f:	jne    0x140003351
   140003311:	lea    eax,[r14-0x1]
   140003315:	cmp    esi,eax
   140003317:	jge    0x140003351
   140003319:	mov    QWORD PTR [r12],rdi
   14000331d:	mov    rcx,QWORD PTR [rbp+0x0]
   140003321:	call   0x140006160
   140003326:	add    r12,0x10
   14000332a:	inc    esi
   14000332c:	mov    QWORD PTR [r12-0x8],rax
   140003331:	inc    rbx
   140003334:	add    rbp,0x8
   140003338:	jmp    0x140003359
   14000333a:	lea    rcx,[rip+0x17e87]        # 0x14001b1c8
   140003341:	call   0x140004360
   140003346:	mov    ecx,0x1
   14000334b:	call   0x140009bcc
   140003350:	int3   
   140003351:	mov    QWORD PTR [r12],rdi
   140003355:	add    r12,0x8
   140003359:	inc    rbx
   14000335c:	inc    esi
   14000335e:	add    rbp,0x8
   140003362:	cmp    rbx,r13
   140003365:	jl     0x1400032ce
   14000336b:	and    QWORD PTR [r12],0x0
   140003370:	mov    rbx,QWORD PTR [rsp+0x58]
   140003375:	mov    rbp,QWORD PTR [rsp+0x60]
   14000337a:	mov    rsi,QWORD PTR [rsp+0x68]
   14000337f:	add    rsp,0x20
   140003383:	pop    r15
   140003385:	pop    r14
   140003387:	pop    r13
   140003389:	pop    r12
   14000338b:	pop    rdi
   14000338c:	ret    
   14000338d:	int3   
   14000338e:	int3   
   14000338f:	int3   
   140003390:	mov    QWORD PTR [rsp+0x10],rbx
   140003395:	mov    QWORD PTR [rsp+0x18],rbp
   14000339a:	mov    QWORD PTR [rsp+0x20],rsi
   14000339f:	push   rdi
   1400033a0:	push   r12
   1400033a2:	push   r13
   1400033a4:	push   r14
   1400033a6:	push   r15
   1400033a8:	sub    rsp,0x170
   1400033af:	mov    rax,QWORD PTR [rip+0x1fd0a]        # 0x1400230c0
   1400033b6:	xor    rax,rsp
   1400033b9:	mov    QWORD PTR [rsp+0x160],rax
   1400033c1:	xor    ebp,ebp
   1400033c3:	xor    r13d,r13d
   1400033c6:	mov    bl,dl
   1400033c8:	and    QWORD PTR [rsp+0x28],rbp
   1400033cd:	mov    rsi,rcx
   1400033d0:	xor    r12d,r12d
   1400033d3:	mov    QWORD PTR [rsp+0x30],r13
   1400033d8:	call   0x1400040e0
   1400033dd:	test   al,al
   1400033df:	je     0x1400033e8
   1400033e1:	call   0x140004290
   1400033e6:	jmp    0x1400033ed
   1400033e8:	mov    rax,QWORD PTR [rsp+0x20]
   1400033ed:	lea    rdx,[rip+0x17fe8]        # 0x14001b3dc
   1400033f4:	mov    rcx,rsi
   1400033f7:	mov    QWORD PTR [rsp+0x20],rax
   1400033fc:	call   0x14000b218
   140003401:	mov    r15,rax
   140003404:	test   rax,rax
   140003407:	jne    0x14000342e
   140003409:	test   bl,bl
   14000340b:	jne    0x140003426
   14000340d:	lea    rcx,[rip+0x17fac]        # 0x14001b3c0
   140003414:	mov    rdx,rsi
   140003417:	call   0x140004360
   14000341c:	lea    ecx,[r15+0x1]
   140003420:	call   0x140009bcc
   140003425:	int3   
   140003426:	or     eax,0xffffffff
   140003429:	jmp    0x14000377c
   14000342e:	lea    rcx,[rsp+0x40]
   140003433:	mov    r8,rax
   140003436:	mov    edx,0x118
   14000343b:	call   0x14000afd8
   140003440:	test   rax,rax
   140003443:	je     0x140003742
   140003449:	xor    r14d,r14d
   14000344c:	mov    al,BYTE PTR [rsp+0x40]
   140003450:	or     edi,0xffffffff
   140003453:	inc    r12d
   140003456:	cmp    al,0x23
   140003458:	je     0x140003727
   14000345e:	cmp    al,0x2d
   140003460:	je     0x140003474
   140003462:	lea    rcx,[rip+0x17f27]        # 0x14001b390
   140003469:	mov    r8,rsi
   14000346c:	mov    edx,r12d
   14000346f:	call   0x140004360
   140003474:	mov    eax,DWORD PTR [rip+0x21316]        # 0x140024790
   14000347a:	cmp    ebp,eax
   14000347c:	jl     0x1400034e4
   14000347e:	test   eax,eax
   140003480:	lea    r13d,[rax+rax*1]
   140003484:	mov    ecx,0xa
   140003489:	cmove  r13d,ecx
   14000348d:	cmp    r13d,ebp
   140003490:	cmovle r13d,ebp
   140003494:	movsxd rcx,r13d
   140003497:	shl    rcx,0x5
   14000349b:	call   0x140003ff0
   1400034a0:	mov    rcx,QWORD PTR [rip+0x212e1]        # 0x140024788
   1400034a7:	mov    rbx,rax
   1400034aa:	test   rcx,rcx
   1400034ad:	je     0x1400034cc
   1400034af:	movsxd r8,DWORD PTR [rip+0x212da]        # 0x140024790
   1400034b6:	mov    rdx,rcx
   1400034b9:	mov    rcx,rax
   1400034bc:	shl    r8,0x5
   1400034c0:	call   0x14000a140
   1400034c5:	mov    rcx,QWORD PTR [rip+0x212bc]        # 0x140024788
   1400034cc:	call   0x140004074
   1400034d1:	mov    DWORD PTR [rip+0x212b8],r13d        # 0x140024790
   1400034d8:	mov    r13,QWORD PTR [rsp+0x30]
   1400034dd:	mov    QWORD PTR [rip+0x212a4],rbx        # 0x140024788
   1400034e4:	lea    rcx,[rsp+0x40]
   1400034e9:	call   0x140009fa0
   1400034ee:	mov    rdx,QWORD PTR [rip+0x1fb4b]        # 0x140023040
   1400034f5:	lea    rcx,[rsp+0x40]
   1400034fa:	mov    BYTE PTR [rax+rcx*1-0x1],0x0
   1400034ff:	lea    rcx,[rsp+0x40]
   140003504:	call   0x14000af44
   140003509:	lea    rbx,[rsp+rax*1+0x40]
   14000350e:	cmp    BYTE PTR [rbx],0x0
   140003511:	je     0x140003530
   140003513:	mov    rdx,QWORD PTR [rip+0x1fb26]        # 0x140023040
   14000351a:	mov    BYTE PTR [rbx],0x0
   14000351d:	inc    rbx
   140003520:	mov    rcx,rbx
   140003523:	call   0x14000ae90
   140003528:	add    rbx,rax
   14000352b:	cmp    BYTE PTR [rbx],0x0
   14000352e:	jne    0x140003547
   140003530:	lea    rcx,[rip+0x17e29]        # 0x14001b360
   140003537:	mov    edx,r12d
   14000353a:	mov    r8,rsi
   14000353d:	call   0x140004360
   140003542:	jmp    0x140003692
   140003547:	lea    rdx,[rip+0x17e06]        # 0x14001b354
   14000354e:	mov    rcx,rbx
   140003551:	call   0x1400040e8
   140003556:	test   eax,eax
   140003558:	je     0x140003690
   14000355e:	lea    rdx,[rip+0x17de3]        # 0x14001b348
   140003565:	mov    rcx,rbx
   140003568:	call   0x1400040e8
   14000356d:	mov    rcx,rbx
   140003570:	test   eax,eax
   140003572:	jne    0x1400035c4
   140003574:	mov    rdx,QWORD PTR [rip+0x1fac5]        # 0x140023040
   14000357b:	call   0x14000af44
   140003580:	add    rbx,rax
   140003583:	cmp    BYTE PTR [rbx],0x0
   140003586:	je     0x140003530
   140003588:	mov    rdx,QWORD PTR [rip+0x1fab1]        # 0x140023040
   14000358f:	mov    rcx,rbx
   140003592:	call   0x14000ae90
   140003597:	add    rbx,rax
   14000359a:	cmp    BYTE PTR [rbx],0x0
   14000359d:	je     0x140003530
   14000359f:	mov    rdx,QWORD PTR [rip+0x1fa9a]        # 0x140023040
   1400035a6:	mov    rcx,rbx
   1400035a9:	mov    r13,rbx
   1400035ac:	mov    QWORD PTR [rsp+0x30],rbx
   1400035b1:	call   0x14000af44
   1400035b6:	mov    edi,0x1
   1400035bb:	mov    BYTE PTR [rax+rbx*1],0x0
   1400035bf:	jmp    0x140003692
   1400035c4:	lea    rdx,[rip+0x17d75]        # 0x14001b340
   1400035cb:	call   0x1400040e8
   1400035d0:	test   eax,eax
   1400035d2:	jne    0x1400035dc
   1400035d4:	lea    edi,[rax+0x2]
   1400035d7:	jmp    0x140003692
   1400035dc:	lea    rdx,[rip+0x17d55]        # 0x14001b338
   1400035e3:	mov    rcx,rbx
   1400035e6:	call   0x1400040e8
   1400035eb:	test   eax,eax
   1400035ed:	jne    0x1400035f7
   1400035ef:	lea    edi,[rax+0x5]
   1400035f2:	jmp    0x140003692
   1400035f7:	lea    rdx,[rip+0x175f6]        # 0x14001abf4
   1400035fe:	mov    rcx,rbx
   140003601:	call   0x1400040e8
   140003606:	test   eax,eax
   140003608:	jne    0x140003612
   14000360a:	lea    edi,[rax+0x3]
   14000360d:	jmp    0x140003692
   140003612:	lea    rdx,[rip+0x17d0f]        # 0x14001b328
   140003619:	mov    rcx,rbx
   14000361c:	call   0x1400040e8
   140003621:	test   eax,eax
   140003623:	jne    0x14000367e
   140003625:	mov    rdx,QWORD PTR [rip+0x1fa14]        # 0x140023040
   14000362c:	mov    rcx,rbx
   14000362f:	call   0x14000af44
   140003634:	add    rbx,rax
   140003637:	cmp    BYTE PTR [rbx],0x0
   14000363a:	je     0x140003672
   14000363c:	mov    rdx,QWORD PTR [rip+0x1f9fd]        # 0x140023040
   140003643:	mov    rcx,rbx
   140003646:	call   0x14000ae90
   14000364b:	add    rbx,rax
   14000364e:	cmp    BYTE PTR [rbx],0x0
   140003651:	je     0x140003672
   140003653:	mov    rdx,QWORD PTR [rip+0x1f9e6]        # 0x140023040
   14000365a:	mov    rcx,rbx
   14000365d:	mov    QWORD PTR [rsp+0x28],rbx
   140003662:	call   0x14000af44
   140003667:	mov    edi,0x4
   14000366c:	mov    BYTE PTR [rax+rbx*1],0x0
   140003670:	jmp    0x140003692
   140003672:	lea    rcx,[rip+0x17c77]        # 0x14001b2f0
   140003679:	jmp    0x140003537
   14000367e:	lea    rcx,[rip+0x17c3b]        # 0x14001b2c0
   140003685:	mov    r8,rsi
   140003688:	mov    edx,r12d
   14000368b:	call   0x140004360
   140003690:	xor    edi,edi
   140003692:	lea    r8,[rsp+0x40]
   140003697:	lea    rcx,[rip+0x17c0a]        # 0x14001b2a8
   14000369e:	mov    edx,ebp
   1400036a0:	call   0x14000407c
   1400036a5:	cmp    edi,0xffffffff
   1400036a8:	je     0x140003727
   1400036aa:	mov    rbx,QWORD PTR [rip+0x210d7]        # 0x140024788
   1400036b1:	lea    rcx,[rsp+0x40]
   1400036b6:	call   0x140004048
   1400036bb:	mov    DWORD PTR [r14+rbx*1+0x8],edi
   1400036c0:	dec    edi
   1400036c2:	mov    QWORD PTR [r14+rbx*1],rax
   1400036c6:	je     0x1400036f3
   1400036c8:	cmp    edi,0x3
   1400036cb:	jne    0x140003721
   1400036cd:	mov    rcx,QWORD PTR [rsp+0x28]
   1400036d2:	call   0x140004048
   1400036d7:	mov    rdx,QWORD PTR [rip+0x210aa]        # 0x140024788
   1400036de:	lea    r8,[rip+0x17bab]        # 0x14001b290
   1400036e5:	mov    QWORD PTR [r14+rdx*1+0x18],rax
   1400036ea:	lea    rcx,[rip+0x17b6f]        # 0x14001b260
   1400036f1:	jmp    0x140003715
   1400036f3:	mov    rcx,r13
   1400036f6:	call   0x140004048
   1400036fb:	mov    rdx,QWORD PTR [rip+0x21086]        # 0x140024788
   140003702:	lea    r8,[rip+0x17b47]        # 0x14001b250
   140003709:	mov    QWORD PTR [r14+rdx*1+0x10],rax
   14000370e:	lea    rcx,[rip+0x17b13]        # 0x14001b228
   140003715:	mov    rdx,QWORD PTR [r14+rdx*1]
   140003719:	mov    r9,rax
   14000371c:	call   0x14000407c
   140003721:	inc    ebp
   140003723:	add    r14,0x20
   140003727:	lea    rcx,[rsp+0x40]
   14000372c:	mov    r8,r15
   14000372f:	mov    edx,0x118
   140003734:	call   0x14000afd8
   140003739:	test   rax,rax
   14000373c:	jne    0x14000344c
   140003742:	mov    rcx,r15
   140003745:	call   0x14000ae28
   14000374a:	mov    DWORD PTR [rip+0x21024],ebp        # 0x140024774
   140003750:	call   0x1400040e0
   140003755:	test   al,al
   140003757:	je     0x14000377a
   140003759:	call   0x140004290
   14000375e:	sub    rax,QWORD PTR [rsp+0x20]
   140003763:	mov    rcx,rax
   140003766:	call   0x1400042dc
   14000376b:	lea    rcx,[rip+0x17a8e]        # 0x14001b200
   140003772:	mov    rdx,rax
   140003775:	call   0x140009c2c
   14000377a:	mov    eax,ebp
   14000377c:	mov    rcx,QWORD PTR [rsp+0x160]
   140003784:	xor    rcx,rsp
   140003787:	call   0x14000a820
   14000378c:	lea    r11,[rsp+0x170]
   140003794:	mov    rbx,QWORD PTR [r11+0x38]
   140003798:	mov    rbp,QWORD PTR [r11+0x40]
   14000379c:	mov    rsi,QWORD PTR [r11+0x48]
   1400037a0:	mov    rsp,r11
   1400037a3:	pop    r15
   1400037a5:	pop    r14
   1400037a7:	pop    r13
   1400037a9:	pop    r12
   1400037ab:	pop    rdi
   1400037ac:	ret    
   1400037ad:	int3   
   1400037ae:	int3   
   1400037af:	int3   
   1400037b0:	mov    rax,rsp
   1400037b3:	mov    QWORD PTR [rax+0x8],rbx
   1400037b7:	mov    QWORD PTR [rax+0x10],rsi
   1400037bb:	mov    QWORD PTR [rax+0x18],rdi
   1400037bf:	mov    QWORD PTR [rax+0x20],r12
   1400037c3:	push   rbp
   1400037c4:	mov    rbp,rsp
   1400037c7:	sub    rsp,0x80
   1400037ce:	mov    rsi,r9
   1400037d1:	mov    r12d,r8d
   1400037d4:	mov    rbx,rdx
   1400037d7:	mov    rdi,rcx
   1400037da:	test   rdx,rdx
   1400037dd:	jne    0x140003808
   1400037df:	lea    rcx,[rbp-0x60]
   1400037e3:	mov    r8d,0x60
   1400037e9:	call   0x14000a530
   1400037ee:	lea    rcx,[rbp-0x60]
   1400037f2:	mov    DWORD PTR [rbp-0x60],0x10001
   1400037f9:	call   QWORD PTR [rdi+0x8]
   1400037fc:	movsxd r11,DWORD PTR [rbp-0x48]
   140003800:	test   r11d,r11d
   140003803:	jle    0x140003808
   140003805:	mov    rbx,r11
   140003808:	mov    eax,DWORD PTR [rbp+0x30]
   14000380b:	lea    r8,[rbp-0x60]
   14000380f:	lea    rcx,[rip+0xffffffffffffe73e]        # 0x140001f54
   140003816:	mov    DWORD PTR [rbp-0x50],eax
   140003819:	mov    rax,QWORD PTR [rbp+0x38]
   14000381d:	mov    rdx,rbx
   140003820:	mov    QWORD PTR [rbp-0x48],rax
   140003824:	mov    rax,QWORD PTR [rdi]
   140003827:	mov    DWORD PTR [rbp-0x60],r12d
   14000382b:	mov    QWORD PTR [rbp-0x40],rax
   14000382f:	mov    rax,QWORD PTR [rdi+0x8]
   140003833:	mov    QWORD PTR [rbp-0x58],rsi
   140003837:	mov    QWORD PTR [rbp-0x38],rax
   14000383b:	mov    rax,QWORD PTR [rdi+0x10]
   14000383f:	mov    QWORD PTR [rbp-0x30],rax
   140003843:	call   0x140005a74
   140003848:	mov    ecx,DWORD PTR [rbp+0x40]
   14000384b:	lea    r11,[rsp+0x80]
   140003853:	test   ecx,ecx
   140003855:	mov    rbx,QWORD PTR [r11+0x10]
   140003859:	mov    rsi,QWORD PTR [r11+0x18]
   14000385d:	mov    rdi,QWORD PTR [r11+0x20]
   140003861:	mov    r12,QWORD PTR [r11+0x28]
   140003865:	cmovne eax,ecx
   140003868:	mov    rsp,r11
   14000386b:	pop    rbp
   14000386c:	ret    
   14000386d:	int3   
   14000386e:	int3   
   14000386f:	int3   
   140003870:	rex push rbp
   140003872:	push   rbx
   140003873:	push   rsi
   140003874:	push   rdi
   140003875:	push   r12
   140003877:	push   r13
   140003879:	lea    rbp,[rsp-0x2c8]
   140003881:	sub    rsp,0x3c8
   140003888:	mov    rax,QWORD PTR [rip+0x1f831]        # 0x1400230c0
   14000388f:	xor    rax,rsp
   140003892:	mov    QWORD PTR [rbp+0x2b0],rax
   140003899:	mov    rax,QWORD PTR [rbp+0x348]
   1400038a0:	mov    r13,QWORD PTR [rbp+0x328]
   1400038a7:	and    DWORD PTR [rsp+0x50],0x0
   1400038ac:	and    QWORD PTR [rsp+0x58],0x0
   1400038b2:	and    QWORD PTR [rsp+0x60],0x0
   1400038b8:	mov    QWORD PTR [rip+0x20e91],rax        # 0x140024750
   1400038bf:	mov    al,BYTE PTR [rbp+0x350]
   1400038c5:	mov    DWORD PTR [rsp+0x40],ecx
   1400038c9:	mov    rcx,QWORD PTR [rbp+0x330]
   1400038d0:	mov    BYTE PTR [rip+0x20e8e],al        # 0x140024764
   1400038d6:	mov    al,BYTE PTR [rbp+0x358]
   1400038dc:	mov    esi,r8d
   1400038df:	mov    r8,QWORD PTR [rbp+0x340]
   1400038e6:	mov    QWORD PTR [rsp+0x48],rdx
   1400038eb:	mov    rdx,QWORD PTR [rbp+0x338]
   1400038f2:	mov    BYTE PTR [rip+0x20e6d],al        # 0x140024765
   1400038f8:	mov    eax,DWORD PTR [rbp+0x368]
   1400038fe:	mov    QWORD PTR [rip+0x20e33],rcx        # 0x140024738
   140003905:	mov    cl,BYTE PTR [rbp+0x360]
   14000390b:	mov    r12,r9
   14000390e:	mov    QWORD PTR [rip+0x20e43],rdx        # 0x140024758
   140003915:	mov    DWORD PTR [rip+0x20e55],eax        # 0x140024770
   14000391b:	mov    QWORD PTR [rip+0x20e26],r8        # 0x140024748
   140003922:	call   0x140004dfc
   140003927:	call   0x1400040e0
   14000392c:	test   al,al
   14000392e:	je     0x140003a23
   140003934:	lea    rcx,[rip+0x170c5]        # 0x14001aa00
   14000393b:	call   0x140009c2c
   140003940:	call   0x1400040e0
   140003945:	lea    rbx,[rip+0x170ac]        # 0x14001a9f8
   14000394c:	cmp    al,0x1
   14000394e:	lea    rdi,[rip+0x1709f]        # 0x14001a9f4
   140003955:	mov    rdx,rbx
   140003958:	lea    rcx,[rip+0x17089]        # 0x14001a9e8
   14000395f:	cmove  rdx,rdi
   140003963:	call   0x140009c2c
   140003968:	cmp    BYTE PTR [rip+0x20df5],0x1        # 0x140024764
   14000396f:	mov    rdx,rbx
   140003972:	lea    rcx,[rip+0x1705f]        # 0x14001a9d8
   140003979:	cmove  rdx,rdi
   14000397d:	call   0x140009c2c
   140003982:	mov    rdx,QWORD PTR [rip+0x20dbf]        # 0x140024748
   140003989:	lea    rcx,[rip+0x17030]        # 0x14001a9c0
   140003990:	call   0x140009c2c
   140003995:	mov    rdx,QWORD PTR [rip+0x20db4]        # 0x140024750
   14000399c:	lea    rcx,[rip+0x17005]        # 0x14001a9a8
   1400039a3:	call   0x140009c2c
   1400039a8:	call   0x1400041b4
   1400039ad:	lea    rcx,[rip+0x16fe4]        # 0x14001a998
   1400039b4:	cmp    al,0x1
   1400039b6:	cmove  rbx,rdi
   1400039ba:	mov    rdx,rbx
   1400039bd:	call   0x140009c2c
   1400039c2:	mov    rdx,QWORD PTR [rip+0x20d6f]        # 0x140024738
   1400039c9:	lea    rcx,[rip+0x16fb0]        # 0x14001a980
   1400039d0:	call   0x140009c2c
   1400039d5:	mov    rdx,QWORD PTR [rip+0x20d7c]        # 0x140024758
   1400039dc:	lea    rcx,[rip+0x16f8d]        # 0x14001a970
   1400039e3:	call   0x140009c2c
   1400039e8:	lea    rcx,[rip+0x16f71]        # 0x14001a960
   1400039ef:	call   0x140009c2c
   1400039f4:	mov    r11d,DWORD PTR [rip+0x20d75]        # 0x140024770
   1400039fb:	dec    r11d
   1400039fe:	je     0x140003a17
   140003a00:	dec    r11d
   140003a03:	je     0x140003a0e
   140003a05:	lea    rcx,[rip+0x16f34]        # 0x14001a940
   140003a0c:	jmp    0x140003a1e
   140003a0e:	lea    rcx,[rip+0x16f03]        # 0x14001a918
   140003a15:	jmp    0x140003a1e
   140003a17:	lea    rcx,[rip+0x16ed2]        # 0x14001a8f0
   140003a1e:	call   0x140009c2c
   140003a23:	call   0x1400040e0
   140003a28:	test   al,al
   140003a2a:	je     0x140003a73
   140003a2c:	lea    rcx,[rip+0x179ed]        # 0x14001b420
   140003a33:	call   0x140009c2c
   140003a38:	xor    ebx,ebx
   140003a3a:	cmp    DWORD PTR [rsp+0x40],ebx
   140003a3e:	jle    0x140003a65
   140003a40:	xor    edi,edi
   140003a42:	mov    r8,QWORD PTR [rsp+0x48]
   140003a47:	lea    rcx,[rip+0x179c2]        # 0x14001b410
   140003a4e:	mov    edx,ebx
   140003a50:	mov    r8,QWORD PTR [rdi+r8*1]
   140003a54:	call   0x140009c2c
   140003a59:	inc    ebx
   140003a5b:	add    rdi,0x8
   140003a5f:	cmp    ebx,DWORD PTR [rsp+0x40]
   140003a63:	jl     0x140003a42
   140003a65:	lea    rcx,[rip+0x176dc]        # 0x14001b148
   140003a6c:	xor    edx,edx
   140003a6e:	call   0x14000120c
   140003a73:	mov    rdx,QWORD PTR [rsp+0x48]
   140003a78:	mov    ecx,DWORD PTR [rsp+0x40]
   140003a7c:	lea    r8,[rsp+0x60]
   140003a81:	call   0x140002788
   140003a86:	mov    r9d,0x104
   140003a8c:	lea    rax,[rbp+0x90]
   140003a93:	mov    DWORD PTR [rsp+0x38],r9d
   140003a98:	mov    QWORD PTR [rsp+0x30],rax
   140003a9d:	lea    rax,[rbp-0x80]
   140003aa1:	mov    DWORD PTR [rsp+0x28],r9d
   140003aa6:	lea    r8,[rbp+0x1a0]
   140003aad:	lea    rdx,[rsp+0x48]
   140003ab2:	lea    rcx,[rsp+0x40]
   140003ab7:	mov    QWORD PTR [rsp+0x20],rax
   140003abc:	call   0x1400054b4
   140003ac1:	and    QWORD PTR [rsp+0x68],0x0
   140003ac7:	and    QWORD PTR [rsp+0x70],0x0
   140003acd:	call   0x1400040e0
   140003ad2:	test   al,al
   140003ad4:	je     0x140003ae0
   140003ad6:	call   0x140004290
   140003adb:	mov    rbx,rax
   140003ade:	jmp    0x140003ae5
   140003ae0:	mov    rbx,QWORD PTR [rsp+0x58]
   140003ae5:	lea    rdx,[rsp+0x68]
   140003aea:	lea    rcx,[rbp-0x80]
   140003aee:	call   0x140005898
   140003af3:	test   al,al
   140003af5:	jne    0x140003b01
   140003af7:	mov    eax,0x6
   140003afc:	jmp    0x140003c27
   140003b01:	call   0x1400040e0
   140003b06:	test   al,al
   140003b08:	je     0x140003b11
   140003b0a:	call   0x140004290
   140003b0f:	jmp    0x140003b16
   140003b11:	mov    rax,QWORD PTR [rsp+0x58]
   140003b16:	sub    rax,rbx
   140003b19:	mov    rcx,rax
   140003b1c:	call   0x1400042dc
   140003b21:	lea    rcx,[rip+0x178c0]        # 0x14001b3e8
   140003b28:	mov    rdx,rax
   140003b2b:	call   0x14000407c
   140003b30:	add    QWORD PTR [rsp+0x48],0x8
   140003b36:	dec    DWORD PTR [rsp+0x40]
   140003b3a:	cmp    BYTE PTR [rip+0x20c23],0x0        # 0x140024764
   140003b41:	je     0x140003b73
   140003b43:	lea    r9,[rsp+0x48]
   140003b48:	lea    r8,[rsp+0x40]
   140003b4d:	mov    rdx,r12
   140003b50:	mov    ecx,esi
   140003b52:	call   0x1400031dc
   140003b57:	mov    ecx,DWORD PTR [rbp+0x320]
   140003b5d:	mov    rdx,r13
   140003b60:	call   0x140001710
   140003b65:	test   al,al
   140003b67:	jne    0x140003b92
   140003b69:	mov    eax,0x1
   140003b6e:	jmp    0x140003c27
   140003b73:	lea    rcx,[rip+0x16b9e]        # 0x14001a718
   140003b7a:	call   0x140009d94
   140003b7f:	lea    rcx,[rip+0x1785a]        # 0x14001b3e0
   140003b86:	test   rax,rax
   140003b89:	cmovne rcx,rax
   140003b8d:	call   0x14000137c
   140003b92:	lea    rax,[rsp+0x60]
   140003b97:	lea    r9,[rsp+0x58]
   140003b9c:	lea    r8,[rsp+0x50]
   140003ba1:	lea    rdx,[rsp+0x48]
   140003ba6:	lea    rcx,[rsp+0x40]
   140003bab:	mov    QWORD PTR [rsp+0x20],rax
   140003bb0:	call   0x140002c84
   140003bb5:	test   al,al
   140003bb7:	jne    0x140003bbf
   140003bb9:	mov    eax,DWORD PTR [rsp+0x60]
   140003bbd:	jmp    0x140003c27
   140003bbf:	mov    edi,DWORD PTR [rsp+0x50]
   140003bc3:	mov    rbx,QWORD PTR [rsp+0x58]
   140003bc8:	cmp    edi,0x2
   140003bcb:	jne    0x140003bd5
   140003bcd:	mov    rcx,rbx
   140003bd0:	call   0x14000137c
   140003bd5:	mov    r8,QWORD PTR [rsp+0x48]
   140003bda:	mov    edx,DWORD PTR [rsp+0x40]
   140003bde:	mov    rcx,rbx
   140003be1:	call   0x1400018ac
   140003be6:	lea    rcx,[rip+0x16b53]        # 0x14001a740
   140003bed:	xor    edx,edx
   140003bef:	call   0x14000120c
   140003bf4:	call   0x140004ea4
   140003bf9:	mov    r11d,DWORD PTR [rsp+0x60]
   140003bfe:	mov    r9,QWORD PTR [rsp+0x48]
   140003c03:	mov    r8d,DWORD PTR [rsp+0x40]
   140003c08:	mov    rdx,QWORD PTR [rip+0x20b89]        # 0x140024798
   140003c0f:	mov    DWORD PTR [rsp+0x30],r11d
   140003c14:	lea    rcx,[rsp+0x68]
   140003c19:	mov    QWORD PTR [rsp+0x28],rbx
   140003c1e:	mov    DWORD PTR [rsp+0x20],edi
   140003c22:	call   0x140004e38
   140003c27:	mov    rcx,QWORD PTR [rbp+0x2b0]
   140003c2e:	xor    rcx,rsp
   140003c31:	call   0x14000a820
   140003c36:	add    rsp,0x3c8
   140003c3d:	pop    r13
   140003c3f:	pop    r12
   140003c41:	pop    rdi
   140003c42:	pop    rsi
   140003c43:	pop    rbx
   140003c44:	pop    rbp
   140003c45:	ret    
   140003c46:	int3   
   140003c47:	int3   
   140003c48:	mov    QWORD PTR [rsp+0x20],rbx
   140003c4d:	mov    QWORD PTR [rsp+0x18],r8
   140003c52:	push   rbp
   140003c53:	push   rsi
   140003c54:	push   rdi
   140003c55:	push   r12
   140003c57:	push   r13
   140003c59:	push   r14
   140003c5b:	push   r15
   140003c5d:	sub    rsp,0x20
   140003c61:	mov    r15,rcx
   140003c64:	xor    ecx,ecx
   140003c66:	mov    rdi,rdx
   140003c69:	mov    bl,cl
   140003c6b:	mov    BYTE PTR [rsp+0x60],cl
   140003c6f:	mov    r13d,ecx
   140003c72:	mov    esi,ecx
   140003c74:	movzx  r12d,cx
   140003c78:	mov    r14b,cl
   140003c7b:	mov    BYTE PTR [r8],cl
   140003c7e:	xor    ecx,ecx
   140003c80:	xor    r8d,r8d
   140003c83:	mov    rdx,r15
   140003c86:	call   QWORD PTR [rip+0x166b4]        # 0x14001a340
   140003c8c:	mov    rcx,rax
   140003c8f:	sub    ecx,r15d
   140003c92:	mov    QWORD PTR [rsp+0x68],rcx
   140003c97:	je     0x140003ef4
   140003c9d:	mov    edx,0x1
   140003ca2:	cmp    ecx,edx
   140003ca4:	jne    0x140003cac
   140003ca6:	movzx  ebp,BYTE PTR [r15]
   140003caa:	jmp    0x140003cb0
   140003cac:	movzx  ebp,WORD PTR [r15]
   140003cb0:	movzx  eax,bp
   140003cb3:	cmp    eax,0x9
   140003cb6:	je     0x140003e69
   140003cbc:	cmp    eax,0x20
   140003cbf:	je     0x140003e69
   140003cc5:	mov    r10d,0x22
   140003ccb:	cmp    eax,r10d
   140003cce:	je     0x140003dbc
   140003cd4:	cmp    eax,0x2a
   140003cd7:	je     0x140003d43
   140003cd9:	cmp    eax,0x3f
   140003cdc:	je     0x140003d43
   140003cde:	lea    r9d,[r10+0x3a]
   140003ce2:	cmp    eax,r9d
   140003ce5:	je     0x140003d31
   140003ce7:	xor    r8d,r8d
   140003cea:	cmp    r12w,r9w
   140003cee:	jne    0x140003d21
   140003cf0:	test   esi,esi
   140003cf2:	jle    0x140003eb3
   140003cf8:	mov    r8d,esi
   140003cfb:	mov    dl,r9b
   140003cfe:	mov    rcx,rdi
   140003d01:	mov    ebx,esi
   140003d03:	call   0x14000a530
   140003d08:	mov    rcx,QWORD PTR [rsp+0x68]
   140003d0d:	add    rdi,rbx
   140003d10:	mov    bl,BYTE PTR [rsp+0x60]
   140003d14:	mov    edx,0x1
   140003d19:	xor    r8d,r8d
   140003d1c:	jmp    0x140003eb3
   140003d21:	test   bl,bl
   140003d23:	je     0x140003eb3
   140003d29:	mov    r14b,dl
   140003d2c:	jmp    0x140003eda
   140003d31:	add    esi,edx
   140003d33:	test   bl,bl
   140003d35:	je     0x140003ee2
   140003d3b:	mov    r14b,dl
   140003d3e:	jmp    0x140003efa
   140003d43:	test   bl,bl
   140003d45:	jne    0x140003ef1
   140003d4b:	mov    eax,r13d
   140003d4e:	and    eax,0x80000001
   140003d53:	jge    0x140003d5c
   140003d55:	sub    eax,edx
   140003d57:	or     eax,0xfffffffe
   140003d5a:	add    eax,edx
   140003d5c:	test   eax,eax
   140003d5e:	jne    0x140003d67
   140003d60:	mov    rax,QWORD PTR [rsp+0x70]
   140003d65:	mov    BYTE PTR [rax],dl
   140003d67:	mov    r9d,0x5c
   140003d6d:	cmp    r12w,r9w
   140003d71:	jne    0x140003d98
   140003d73:	test   esi,esi
   140003d75:	jle    0x140003d98
   140003d77:	mov    r8d,esi
   140003d7a:	mov    dl,r9b
   140003d7d:	mov    rcx,rdi
   140003d80:	mov    ebx,esi
   140003d82:	call   0x14000a530
   140003d87:	mov    rcx,QWORD PTR [rsp+0x68]
   140003d8c:	add    rdi,rbx
   140003d8f:	mov    bl,BYTE PTR [rsp+0x60]
   140003d93:	mov    edx,0x1
   140003d98:	movzx  eax,bp
   140003d9b:	shr    ax,0x8
   140003d9f:	test   al,al
   140003da1:	jne    0x140003daa
   140003da3:	mov    BYTE PTR [rdi],bpl
   140003da6:	mov    eax,edx
   140003da8:	jmp    0x140003db2
   140003daa:	mov    WORD PTR [rdi],bp
   140003dad:	mov    eax,0x2
   140003db2:	cdqe   
   140003db4:	add    rdi,rax
   140003db7:	jmp    0x140003ee2
   140003dbc:	xor    r8d,r8d
   140003dbf:	lea    r9d,[r8+0x5c]
   140003dc3:	test   bl,bl
   140003dc5:	jne    0x140003d3b
   140003dcb:	cmp    r12w,r9w
   140003dcf:	jne    0x140003e18
   140003dd1:	cmp    esi,edx
   140003dd3:	jle    0x140003e00
   140003dd5:	lea    eax,[rsi-0x2]
   140003dd8:	mov    rcx,rdi
   140003ddb:	shr    eax,1
   140003ddd:	add    eax,edx
   140003ddf:	mov    dl,r9b
   140003de2:	mov    r8d,eax
   140003de5:	mov    ebx,eax
   140003de7:	call   0x14000a530
   140003dec:	mov    rcx,QWORD PTR [rsp+0x68]
   140003df1:	add    rdi,rbx
   140003df4:	mov    bl,BYTE PTR [rsp+0x60]
   140003df8:	xor    r8d,r8d
   140003dfb:	mov    edx,0x1
   140003e00:	and    esi,0x80000001
   140003e06:	jge    0x140003e0f
   140003e08:	sub    esi,edx
   140003e0a:	or     esi,0xfffffffe
   140003e0d:	add    esi,edx
   140003e0f:	cmp    esi,edx
   140003e11:	je     0x140003e36
   140003e13:	add    r13d,edx
   140003e16:	jmp    0x140003e64
   140003e18:	cmp    r12w,r10w
   140003e1c:	jne    0x140003e57
   140003e1e:	mov    eax,r13d
   140003e21:	and    eax,0x80000001
   140003e26:	jge    0x140003e2f
   140003e28:	sub    eax,edx
   140003e2a:	or     eax,0xfffffffe
   140003e2d:	add    eax,edx
   140003e2f:	test   eax,eax
   140003e31:	jne    0x140003e57
   140003e33:	add    r13d,edx
   140003e36:	movzx  eax,bp
   140003e39:	shr    ax,0x8
   140003e3d:	test   al,al
   140003e3f:	jne    0x140003e48
   140003e41:	mov    BYTE PTR [rdi],bpl
   140003e44:	mov    eax,edx
   140003e46:	jmp    0x140003e50
   140003e48:	mov    WORD PTR [rdi],bp
   140003e4b:	mov    eax,0x2
   140003e50:	cdqe   
   140003e52:	add    rdi,rax
   140003e55:	jmp    0x140003e64
   140003e57:	test   r13d,r13d
   140003e5a:	jne    0x140003e61
   140003e5c:	mov    r13d,edx
   140003e5f:	jmp    0x140003e64
   140003e61:	sub    r13d,edx
   140003e64:	mov    esi,r8d
   140003e67:	jmp    0x140003ee2
   140003e69:	mov    eax,0x5c
   140003e6e:	xor    r8d,r8d
   140003e71:	cmp    r12w,ax
   140003e75:	jne    0x140003e9e
   140003e77:	test   esi,esi
   140003e79:	jle    0x140003e9e
   140003e7b:	mov    r8d,esi
   140003e7e:	mov    dl,al
   140003e80:	mov    rcx,rdi
   140003e83:	mov    ebx,esi
   140003e85:	call   0x14000a530
   140003e8a:	mov    rcx,QWORD PTR [rsp+0x68]
   140003e8f:	add    rdi,rbx
   140003e92:	mov    bl,BYTE PTR [rsp+0x60]
   140003e96:	mov    edx,0x1
   140003e9b:	xor    r8d,r8d
   140003e9e:	mov    eax,r13d
   140003ea1:	and    eax,0x80000001
   140003ea6:	jge    0x140003eaf
   140003ea8:	sub    eax,edx
   140003eaa:	or     eax,0xfffffffe
   140003ead:	add    eax,edx
   140003eaf:	cmp    eax,edx
   140003eb1:	jne    0x140003ed4
   140003eb3:	movzx  eax,bp
   140003eb6:	shr    ax,0x8
   140003eba:	test   al,al
   140003ebc:	jne    0x140003ec5
   140003ebe:	mov    BYTE PTR [rdi],bpl
   140003ec1:	mov    eax,edx
   140003ec3:	jmp    0x140003ecd
   140003ec5:	mov    WORD PTR [rdi],bp
   140003ec8:	mov    eax,0x2
   140003ecd:	cdqe   
   140003ecf:	add    rdi,rax
   140003ed2:	jmp    0x140003eda
   140003ed4:	mov    bl,dl
   140003ed6:	mov    BYTE PTR [rsp+0x60],dl
   140003eda:	mov    esi,r8d
   140003edd:	test   r14b,r14b
   140003ee0:	jne    0x140003ef4
   140003ee2:	movsxd rax,ecx
   140003ee5:	movzx  r12d,bp
   140003ee9:	add    r15,rax
   140003eec:	jmp    0x140003c7e
   140003ef1:	mov    r14b,dl
   140003ef4:	mov    r9d,0x5c
   140003efa:	cmp    r12w,r9w
   140003efe:	jne    0x140003f17
   140003f00:	test   esi,esi
   140003f02:	jle    0x140003f17
   140003f04:	mov    r8d,esi
   140003f07:	mov    dl,r9b
   140003f0a:	mov    rcx,rdi
   140003f0d:	mov    ebx,esi
   140003f0f:	call   0x14000a530
   140003f14:	add    rdi,rbx
   140003f17:	mov    rbx,QWORD PTR [rsp+0x78]
   140003f1c:	xor    ecx,ecx
   140003f1e:	neg    r14b
   140003f21:	sbb    rax,rax
   140003f24:	mov    BYTE PTR [rdi],cl
   140003f26:	and    rax,r15
   140003f29:	add    rsp,0x20
   140003f2d:	pop    r15
   140003f2f:	pop    r14
   140003f31:	pop    r13
   140003f33:	pop    r12
   140003f35:	pop    rdi
   140003f36:	pop    rsi
   140003f37:	pop    rbp
   140003f38:	ret    
   140003f39:	int3   
   140003f3a:	int3   
   140003f3b:	int3   
   140003f3c:	mov    eax,DWORD PTR [rip+0x2087e]        # 0x1400247c0
   140003f42:	ret    
   140003f43:	int3   
   140003f44:	mov    rax,QWORD PTR [rip+0x2087d]        # 0x1400247c8
   140003f4b:	ret    
   140003f4c:	mov    rax,rsp
   140003f4f:	mov    QWORD PTR [rax+0x10],rbx
   140003f53:	mov    QWORD PTR [rax+0x18],rbp
   140003f57:	mov    QWORD PTR [rax+0x20],rsi
   140003f5b:	push   rdi
   140003f5c:	push   r12
   140003f5e:	push   r13
   140003f60:	sub    rsp,0x20
   140003f64:	xor    ebx,ebx
   140003f66:	mov    rsi,rcx
   140003f69:	xor    edi,edi
   140003f6b:	mov    BYTE PTR [rax+0x8],bl
   140003f6e:	call   0x140004048
   140003f73:	xor    ebp,ebp
   140003f75:	mov    r12,rax
   140003f78:	lea    r13d,[rbx+0x1]
   140003f7c:	lea    r8,[rsp+0x40]
   140003f81:	mov    rdx,r12
   140003f84:	mov    rcx,rsi
   140003f87:	call   0x140003c48
   140003f8c:	movsxd rdx,r13d
   140003f8f:	mov    rcx,rdi
   140003f92:	shl    rdx,0x4
   140003f96:	mov    rsi,rax
   140003f99:	call   0x14000401c
   140003f9e:	mov    rcx,r12
   140003fa1:	mov    rdi,rax
   140003fa4:	call   0x140004048
   140003fa9:	inc    ebx
   140003fab:	mov    QWORD PTR [rdi+rbp*1],rax
   140003faf:	mov    al,BYTE PTR [rsp+0x40]
   140003fb3:	add    rbp,0x10
   140003fb7:	mov    BYTE PTR [rdi+rbp*1-0x8],al
   140003fbb:	inc    r13d
   140003fbe:	mov    BYTE PTR [r12],0x0
   140003fc3:	test   rsi,rsi
   140003fc6:	jne    0x140003f7c
   140003fc8:	mov    rbp,QWORD PTR [rsp+0x50]
   140003fcd:	mov    rsi,QWORD PTR [rsp+0x58]
   140003fd2:	mov    DWORD PTR [rip+0x207e8],ebx        # 0x1400247c0
   140003fd8:	mov    rbx,QWORD PTR [rsp+0x48]
   140003fdd:	mov    QWORD PTR [rip+0x207e4],rdi        # 0x1400247c8
   140003fe4:	add    rsp,0x20
   140003fe8:	pop    r13
   140003fea:	pop    r12
   140003fec:	pop    rdi
   140003fed:	ret    
   140003fee:	int3   
   140003fef:	int3   
   140003ff0:	sub    rsp,0x28
   140003ff4:	call   0x14000b2d4
   140003ff9:	test   rax,rax
   140003ffc:	jne    0x140004015
   140003ffe:	lea    rcx,[rip+0x1742f]        # 0x14001b434
   140004005:	call   0x14000b224
   14000400a:	mov    ecx,0x1
   14000400f:	call   0x140009bcc
   140004014:	int3   
   140004015:	add    rsp,0x28
   140004019:	ret    
   14000401a:	int3   
   14000401b:	int3   
   14000401c:	sub    rsp,0x28
   140004020:	call   0x14000b38c
   140004025:	test   rax,rax
   140004028:	jne    0x140004041
   14000402a:	lea    rcx,[rip+0x1740f]        # 0x14001b440
   140004031:	call   0x14000b224
   140004036:	mov    ecx,0x1
   14000403b:	call   0x140009bcc
   140004040:	int3   
   140004041:	add    rsp,0x28
   140004045:	ret    
   140004046:	int3   
   140004047:	int3   
   140004048:	sub    rsp,0x28
   14000404c:	call   0x140018ba0
   140004051:	test   rax,rax
   140004054:	jne    0x14000406d
   140004056:	lea    rcx,[rip+0x173eb]        # 0x14001b448
   14000405d:	call   0x14000b224
   140004062:	mov    ecx,0x1
   140004067:	call   0x140009bcc
   14000406c:	int3   
   14000406d:	add    rsp,0x28
   140004071:	ret    
   140004072:	int3   
   140004073:	int3   
   140004074:	jmp    0x14000b460
   140004079:	int3   
   14000407a:	int3   
   14000407b:	int3   
   14000407c:	mov    rax,rsp
   14000407f:	mov    QWORD PTR [rax+0x8],rcx
   140004083:	mov    QWORD PTR [rax+0x10],rdx
   140004087:	mov    QWORD PTR [rax+0x18],r8
   14000408b:	mov    QWORD PTR [rax+0x20],r9
   14000408f:	sub    rsp,0x28
   140004093:	cmp    BYTE PTR [rip+0x20736],0x1        # 0x1400247d0
   14000409a:	jne    0x1400040a5
   14000409c:	lea    rdx,[rax+0x10]
   1400040a0:	call   0x14000b548
   1400040a5:	add    rsp,0x28
   1400040a9:	ret    
   1400040aa:	int3   
   1400040ab:	int3   
   1400040ac:	sub    rsp,0x28
   1400040b0:	lea    rcx,[rip+0x163c1]        # 0x14001a478
   1400040b7:	call   0x140009d94
   1400040bc:	test   rax,rax
   1400040bf:	je     0x1400040db
   1400040c1:	lea    rdx,[rip+0x163b0]        # 0x14001a478
   1400040c8:	lea    rcx,[rip+0x16559]        # 0x14001a628
   1400040cf:	mov    BYTE PTR [rip+0x206fa],0x1        # 0x1400247d0
   1400040d6:	call   0x14000407c
   1400040db:	add    rsp,0x28
   1400040df:	ret    
   1400040e0:	mov    al,BYTE PTR [rip+0x206ea]        # 0x1400247d0
   1400040e6:	ret    
   1400040e7:	int3   
   1400040e8:	mov    QWORD PTR [rsp+0x8],rbx
   1400040ed:	push   rdi
   1400040ee:	sub    rsp,0x20
   1400040f2:	mov    rdi,rcx
   1400040f5:	mov    rcx,rdx
   1400040f8:	mov    rbx,rdx
   1400040fb:	call   0x140009fa0
   140004100:	mov    rdx,rbx
   140004103:	mov    rcx,rdi
   140004106:	mov    r8,rax
   140004109:	mov    rbx,QWORD PTR [rsp+0x30]
   14000410e:	add    rsp,0x20
   140004112:	pop    rdi
   140004113:	jmp    0x14000b570
   140004118:	mov    QWORD PTR [rsp+0x8],rbx
   14000411d:	mov    QWORD PTR [rsp+0x10],rsi
   140004122:	push   rdi
   140004123:	sub    rsp,0x20
   140004127:	mov    rdi,rdx
   14000412a:	mov    rbx,rcx
   14000412d:	call   0x140009fa0
   140004132:	movsxd rsi,eax
   140004135:	mov    rdx,rdi
   140004138:	mov    rcx,rbx
   14000413b:	mov    r8,rsi
   14000413e:	call   0x14000b570
   140004143:	test   eax,eax
   140004145:	jne    0x140004154
   140004147:	cmp    BYTE PTR [rsi+rdi*1],0x3d
   14000414b:	jne    0x140004154
   14000414d:	lea    rax,[rsi+rdi*1+0x1]
   140004152:	jmp    0x140004156
   140004154:	xor    eax,eax
   140004156:	mov    rbx,QWORD PTR [rsp+0x30]
   14000415b:	mov    rsi,QWORD PTR [rsp+0x38]
   140004160:	add    rsp,0x20
   140004164:	pop    rdi
   140004165:	ret    
   140004166:	int3   
   140004167:	int3   
   140004168:	rex push rbx
   14000416a:	sub    rsp,0x20
   14000416e:	call   0x140004118
   140004173:	mov    rbx,rax
   140004176:	test   rax,rax
   140004179:	je     0x1400041a8
   14000417b:	lea    rdx,[rip+0x16c3a]        # 0x14001adbc
   140004182:	mov    rcx,rax
   140004185:	call   0x1400196a0
   14000418a:	test   eax,eax
   14000418c:	jne    0x140004195
   14000418e:	mov    eax,0x1
   140004193:	jmp    0x1400041ab
   140004195:	lea    rdx,[rip+0x16c18]        # 0x14001adb4
   14000419c:	mov    rcx,rbx
   14000419f:	call   0x1400196a0
   1400041a4:	test   eax,eax
   1400041a6:	je     0x1400041ab
   1400041a8:	or     eax,0xffffffff
   1400041ab:	add    rsp,0x20
   1400041af:	pop    rbx
   1400041b0:	ret    
   1400041b1:	int3   
   1400041b2:	int3   
   1400041b3:	int3   
   1400041b4:	mov    al,BYTE PTR [rip+0x2062a]        # 0x1400247e4
   1400041ba:	ret    
   1400041bb:	int3   
   1400041bc:	rex push rbx
   1400041be:	sub    rsp,0x20
   1400041c2:	mov    r8d,edx
   1400041c5:	mov    rbx,rcx
   1400041c8:	mov    rdx,rcx
   1400041cb:	xor    ecx,ecx
   1400041cd:	call   QWORD PTR [rip+0x15e75]        # 0x14001a048
   1400041d3:	mov    edx,0x5c
   1400041d8:	mov    rcx,rbx
   1400041db:	call   0x14000bb28
   1400041e0:	mov    edx,0x5c
   1400041e5:	mov    rcx,rbx
   1400041e8:	mov    BYTE PTR [rax],0x0
   1400041eb:	call   0x14000bb28
   1400041f0:	test   rax,rax
   1400041f3:	jne    0x1400041f9
   1400041f5:	mov    BYTE PTR [rbx],al
   1400041f7:	jmp    0x1400041fe
   1400041f9:	mov    BYTE PTR [rax],0x0
   1400041fc:	mov    al,0x1
   1400041fe:	add    rsp,0x20
   140004202:	pop    rbx
   140004203:	ret    
   140004204:	mov    r11,rsp
   140004207:	mov    QWORD PTR [r11+0x8],rbx
   14000420b:	mov    QWORD PTR [r11+0x10],rbp
   14000420f:	mov    QWORD PTR [r11+0x18],rsi
   140004213:	push   rdi
   140004214:	sub    rsp,0x40
   140004218:	lea    rax,[r11-0x18]
   14000421c:	mov    ebx,r9d
   14000421f:	mov    rbp,r8
   140004222:	mov    QWORD PTR [r11-0x20],rax
   140004226:	and    QWORD PTR [r11-0x28],0x0
   14000422b:	lea    r9,[r11-0x14]
   14000422f:	xor    r8d,r8d
   140004232:	mov    rdi,rdx
   140004235:	mov    rsi,rcx
   140004238:	call   QWORD PTR [rip+0x15dda]        # 0x14001a018
   14000423e:	test   eax,eax
   140004240:	jne    0x140004278
   140004242:	cmp    DWORD PTR [rsp+0x34],0x1
   140004247:	jne    0x140004278
   140004249:	cmp    DWORD PTR [rsp+0x30],ebx
   14000424d:	jae    0x140004278
   14000424f:	lea    rcx,[rsp+0x30]
   140004254:	xor    r9d,r9d
   140004257:	xor    r8d,r8d
   14000425a:	mov    QWORD PTR [rsp+0x28],rcx
   14000425f:	mov    rcx,rsi
   140004262:	mov    rdx,rdi
   140004265:	mov    QWORD PTR [rsp+0x20],rbp
   14000426a:	call   QWORD PTR [rip+0x15da8]        # 0x14001a018
   140004270:	test   eax,eax
   140004272:	jne    0x140004278
   140004274:	mov    al,0x1
   140004276:	jmp    0x14000427a
   140004278:	xor    al,al
   14000427a:	mov    rbx,QWORD PTR [rsp+0x50]
   14000427f:	mov    rbp,QWORD PTR [rsp+0x58]
   140004284:	mov    rsi,QWORD PTR [rsp+0x60]
   140004289:	add    rsp,0x40
   14000428d:	pop    rdi
   14000428e:	ret    
   14000428f:	int3   
   140004290:	sub    rsp,0x28
   140004294:	cmp    BYTE PTR [rip+0x2054b],0x0        # 0x1400247e6
   14000429b:	jne    0x1400042b9
   14000429d:	lea    rcx,[rip+0x20534]        # 0x1400247d8
   1400042a4:	call   QWORD PTR [rip+0x15dae]        # 0x14001a058
   1400042aa:	mov    BYTE PTR [rip+0x20535],0x1        # 0x1400247e6
   1400042b1:	mov    BYTE PTR [rip+0x2052e],al        # 0x1400247e5
   1400042b7:	jmp    0x1400042bf
   1400042b9:	mov    al,BYTE PTR [rip+0x20526]        # 0x1400247e5
   1400042bf:	test   al,al
   1400042c1:	jne    0x1400042c7
   1400042c3:	xor    eax,eax
   1400042c5:	jmp    0x1400042d7
   1400042c7:	lea    rcx,[rsp+0x30]
   1400042cc:	call   QWORD PTR [rip+0x15d7e]        # 0x14001a050
   1400042d2:	mov    rax,QWORD PTR [rsp+0x30]
   1400042d7:	add    rsp,0x28
   1400042db:	ret    
   1400042dc:	cmp    BYTE PTR [rip+0x20502],0x0        # 0x1400247e5
   1400042e3:	je     0x140004302
   1400042e5:	cmp    BYTE PTR [rip+0x204fa],0x0        # 0x1400247e6
   1400042ec:	je     0x140004302
   1400042ee:	imul   rcx,rcx,0xf4240
   1400042f5:	mov    rax,rcx
   1400042f8:	cqo    
   1400042fa:	idiv   QWORD PTR [rip+0x204d7]        # 0x1400247d8
   140004301:	ret    
   140004302:	xor    eax,eax
   140004304:	ret    
   140004305:	int3   
   140004306:	int3   
   140004307:	int3   
   140004308:	mov    QWORD PTR [rsp+0x18],r8
   14000430d:	mov    QWORD PTR [rsp+0x20],r9
   140004312:	push   rbx
   140004313:	push   rdi
   140004314:	sub    rsp,0x28
   140004318:	mov    rbx,rdx
   14000431b:	mov    rdi,rcx
   14000431e:	test   rdx,rdx
   140004321:	je     0x140004354
   140004323:	test   rcx,rcx
   140004326:	je     0x140004354
   140004328:	lea    r9,[rsp+0x58]
   14000432d:	mov    BYTE PTR [rcx],0x0
   140004330:	call   0x14000bc1c
   140004335:	movsxd r11,eax
   140004338:	test   eax,eax
   14000433a:	jns    0x140004345
   14000433c:	mov    BYTE PTR [rdi+rbx*1-0x1],0x0
   140004341:	mov    eax,ebx
   140004343:	jmp    0x140004357
   140004345:	cmp    r11,rbx
   140004348:	jne    0x14000434f
   14000434a:	mov    BYTE PTR [rdi+rbx*1-0x1],0x0
   14000434f:	mov    eax,r11d
   140004352:	jmp    0x140004357
   140004354:	or     eax,0xffffffff
   140004357:	add    rsp,0x28
   14000435b:	pop    rdi
   14000435c:	pop    rbx
   14000435d:	ret    
   14000435e:	int3   
   14000435f:	int3   
   140004360:	mov    rax,rsp
   140004363:	mov    QWORD PTR [rax+0x8],rcx
   140004367:	mov    QWORD PTR [rax+0x10],rdx
   14000436b:	mov    QWORD PTR [rax+0x18],r8
   14000436f:	mov    QWORD PTR [rax+0x20],r9
   140004373:	push   rbx
   140004374:	push   rsi
   140004375:	push   rdi
   140004376:	sub    rsp,0x20
   14000437a:	cmp    BYTE PTR [rip+0x20463],0x0        # 0x1400247e4
   140004381:	lea    rsi,[rax+0x10]
   140004385:	je     0x1400043d9
   140004387:	mov    rdx,rsi
   14000438a:	call   0x14000bcc4
   14000438f:	movsxd rbx,eax
   140004392:	lea    ecx,[rbx+0x1]
   140004395:	movsxd rcx,ecx
   140004398:	call   0x140003ff0
   14000439d:	mov    r8,QWORD PTR [rsp+0x40]
   1400043a2:	mov    r9,rsi
   1400043a5:	mov    rcx,rax
   1400043a8:	mov    rdx,rbx
   1400043ab:	mov    rdi,rax
   1400043ae:	call   0x14000bc1c
   1400043b3:	lea    r8,[rip+0x170b6]        # 0x14001b470
   1400043ba:	mov    r9d,0x10
   1400043c0:	mov    rdx,rdi
   1400043c3:	xor    ecx,ecx
   1400043c5:	mov    BYTE PTR [rbx+rdi*1],0x0
   1400043c9:	call   QWORD PTR [rip+0x15f79]        # 0x14001a348
   1400043cf:	mov    rcx,rdi
   1400043d2:	call   0x140004074
   1400043d7:	jmp    0x140004404
   1400043d9:	call   0x14000ab98
   1400043de:	mov    rdx,QWORD PTR [rsp+0x40]
   1400043e3:	mov    r8,rsi
   1400043e6:	lea    rcx,[rax+0x60]
   1400043ea:	call   0x14000ab74
   1400043ef:	call   0x14000ab98
   1400043f4:	lea    rdx,[rip+0x16629]        # 0x14001aa24
   1400043fb:	lea    rcx,[rax+0x60]
   1400043ff:	call   0x14000a900
   140004404:	add    rsp,0x20
   140004408:	pop    rdi
   140004409:	pop    rsi
   14000440a:	pop    rbx
   14000440b:	ret    
   14000440c:	mov    rax,rsp
   14000440f:	mov    QWORD PTR [rax+0x8],rcx
   140004413:	mov    QWORD PTR [rax+0x10],rdx
   140004417:	mov    QWORD PTR [rax+0x18],r8
   14000441b:	mov    QWORD PTR [rax+0x20],r9
   14000441f:	push   rbp
   140004420:	push   rbx
   140004421:	push   rsi
   140004422:	push   rdi
   140004423:	push   r12
   140004425:	push   r14
   140004427:	mov    rbp,rsp
   14000442a:	sub    rsp,0x58
   14000442e:	call   0x14000bdc0
   140004433:	xor    sil,sil
   140004436:	lea    r14,[rbp+0x40]
   14000443a:	mov    ebx,DWORD PTR [rax]
   14000443c:	and    QWORD PTR [rbp-0x18],0x0
   140004441:	call   QWORD PTR [rip+0x15c29]        # 0x14001a070
   140004447:	test   eax,eax
   140004449:	je     0x1400044b5
   14000444b:	and    QWORD PTR [rsp+0x30],0x0
   140004451:	and    DWORD PTR [rsp+0x28],0x0
   140004456:	lea    rcx,[rbp-0x18]
   14000445a:	mov    QWORD PTR [rsp+0x20],rcx
   14000445f:	xor    r9d,r9d
   140004462:	mov    r8d,eax
   140004465:	mov    ecx,0x1300
   14000446a:	xor    edx,edx
   14000446c:	call   QWORD PTR [rip+0x15bf6]        # 0x14001a068
   140004472:	mov    rdx,QWORD PTR [rbp-0x18]
   140004476:	movsxd r11,eax
   140004479:	test   rdx,rdx
   14000447c:	je     0x1400044ac
   14000447e:	test   eax,eax
   140004480:	je     0x1400044ac
   140004482:	mov    sil,0x1
   140004485:	cmp    r11d,0x2
   140004489:	jle    0x1400044c0
   14000448b:	cmp    BYTE PTR [r11+rdx*1-0x1],0xa
   140004491:	jne    0x140004496
   140004493:	dec    r11d
   140004496:	movsxd rax,r11d
   140004499:	cmp    BYTE PTR [rax+rdx*1-0x1],0xd
   14000449e:	jne    0x1400044a3
   1400044a0:	dec    r11d
   1400044a3:	movsxd rax,r11d
   1400044a6:	mov    BYTE PTR [rax+rdx*1],0x0
   1400044aa:	jmp    0x1400044c0
   1400044ac:	lea    rax,[rip+0x16fe0]        # 0x14001b493
   1400044b3:	jmp    0x1400044bc
   1400044b5:	mov    ecx,ebx
   1400044b7:	call   0x14000bcdc
   1400044bc:	mov    QWORD PTR [rbp-0x18],rax
   1400044c0:	cmp    BYTE PTR [rip+0x2031d],0x0        # 0x1400247e4
   1400044c7:	je     0x140004540
   1400044c9:	mov    rcx,QWORD PTR [rbp+0x38]
   1400044cd:	mov    rdx,r14
   1400044d0:	call   0x14000bcc4
   1400044d5:	lea    ebx,[rax+0x1]
   1400044d8:	movsxd r12,ebx
   1400044db:	test   sil,sil
   1400044de:	je     0x1400044eb
   1400044e0:	mov    rcx,QWORD PTR [rbp-0x18]
   1400044e4:	call   0x140009fa0
   1400044e9:	add    ebx,eax
   1400044eb:	movsxd rcx,ebx
   1400044ee:	call   0x140003ff0
   1400044f3:	mov    r8,QWORD PTR [rbp+0x38]
   1400044f7:	mov    r9,r14
   1400044fa:	mov    rcx,rax
   1400044fd:	mov    rdx,r12
   140004500:	mov    rdi,rax
   140004503:	call   0x14000bc1c
   140004508:	mov    BYTE PTR [r12+rdi*1],0x0
   14000450d:	test   sil,sil
   140004510:	je     0x14000451e
   140004512:	mov    rdx,QWORD PTR [rbp-0x18]
   140004516:	mov    rcx,rdi
   140004519:	call   0x14000a6b0
   14000451e:	lea    r8,[rip+0x16f4b]        # 0x14001b470
   140004525:	mov    r9d,0x10
   14000452b:	mov    rdx,rdi
   14000452e:	xor    ecx,ecx
   140004530:	call   QWORD PTR [rip+0x15e12]        # 0x14001a348
   140004536:	mov    rcx,rdi
   140004539:	call   0x140004074
   14000453e:	jmp    0x140004573
   140004540:	call   0x14000ab98
   140004545:	mov    rdx,QWORD PTR [rbp+0x38]
   140004549:	mov    r8,r14
   14000454c:	lea    rcx,[rax+0x60]
   140004550:	call   0x14000ab74
   140004555:	test   sil,sil
   140004558:	je     0x140004582
   14000455a:	call   0x14000ab98
   14000455f:	mov    r8,QWORD PTR [rbp-0x18]
   140004563:	lea    rdx,[rip+0x16f26]        # 0x14001b490
   14000456a:	lea    rcx,[rax+0x60]
   14000456e:	call   0x14000a900
   140004573:	test   sil,sil
   140004576:	je     0x140004582
   140004578:	mov    rcx,QWORD PTR [rbp-0x18]
   14000457c:	call   QWORD PTR [rip+0x15ade]        # 0x14001a060
   140004582:	add    rsp,0x58
   140004586:	pop    r14
   140004588:	pop    r12
   14000458a:	pop    rdi
   14000458b:	pop    rsi
   14000458c:	pop    rbx
   14000458d:	pop    rbp
   14000458e:	ret    
   14000458f:	int3   
   140004590:	cmp    BYTE PTR [rip+0x2024d],0x0        # 0x1400247e4
   140004597:	je     0x1400045b6
   140004599:	lea    r8,[rip+0x16ed0]        # 0x14001b470
   1400045a0:	lea    rdx,[rip+0x16ef1]        # 0x14001b498
   1400045a7:	mov    r9d,0x10
   1400045ad:	xor    ecx,ecx
   1400045af:	rex.W jmp QWORD PTR [rip+0x15d92]        # 0x14001a348
   1400045b6:	mov    rax,QWORD PTR [rcx]
   1400045b9:	rex.W jmp QWORD PTR [rax+0x80]
   1400045c0:	sub    rsp,0x28
   1400045c4:	call   0x140001efc
   1400045c9:	cmp    eax,0x2
   1400045cc:	sete   al
   1400045cf:	add    rsp,0x28
   1400045d3:	ret    
   1400045d4:	mov    QWORD PTR [rsp+0x10],rbx
   1400045d9:	mov    QWORD PTR [rsp+0x18],rsi
   1400045de:	mov    QWORD PTR [rsp+0x20],rdi
   1400045e3:	push   rbp
   1400045e4:	push   r12
   1400045e6:	push   r13
   1400045e8:	lea    rbp,[rsp-0x80]
   1400045ed:	sub    rsp,0x180
   1400045f4:	mov    rax,QWORD PTR [rip+0x1eac5]        # 0x1400230c0
   1400045fb:	xor    rax,rsp
   1400045fe:	mov    QWORD PTR [rbp+0x70],rax
   140004602:	and    QWORD PTR [rsp+0x30],0x0
   140004608:	mov    r13,rcx
   14000460b:	mov    QWORD PTR [rsp+0x48],0xffffffff80000001
   140004614:	xor    edi,edi
   140004616:	mov    QWORD PTR [rsp+0x50],0xffffffff80000002
   14000461f:	mov    rcx,QWORD PTR [rsp+rdi*8+0x48]
   140004624:	lea    rax,[rsp+0x30]
   140004629:	lea    rdx,[rip+0x16e98]        # 0x14001b4c8
   140004630:	mov    r9d,0x20019
   140004636:	xor    r8d,r8d
   140004639:	mov    QWORD PTR [rsp+0x20],rax
   14000463e:	call   QWORD PTR [rip+0x159c4]        # 0x14001a008
   140004644:	test   eax,eax
   140004646:	jne    0x140004771
   14000464c:	mov    r12,QWORD PTR [rsp+0x30]
   140004651:	lea    r8,[rsp+0x60]
   140004656:	mov    r9d,0x104
   14000465c:	xor    edx,edx
   14000465e:	mov    rcx,r12
   140004661:	xor    esi,esi
   140004663:	xor    ebx,ebx
   140004665:	call   QWORD PTR [rip+0x159a5]        # 0x14001a010
   14000466b:	test   eax,eax
   14000466d:	jne    0x140004771
   140004673:	mov    rdx,QWORD PTR [r13+0x10]
   140004677:	lea    rcx,[rsp+0x60]
   14000467c:	inc    esi
   14000467e:	call   0x140006efc
   140004683:	test   eax,eax
   140004685:	je     0x1400046b2
   140004687:	test   rbx,rbx
   14000468a:	je     0x1400046a5
   14000468c:	lea    rcx,[rsp+0x60]
   140004691:	mov    rdx,rbx
   140004694:	call   0x140006dec
   140004699:	test   eax,eax
   14000469b:	jle    0x1400046b2
   14000469d:	mov    rcx,rbx
   1400046a0:	call   0x140004074
   1400046a5:	lea    rcx,[rsp+0x60]
   1400046aa:	call   0x140004048
   1400046af:	mov    rbx,rax
   1400046b2:	lea    r8,[rsp+0x60]
   1400046b7:	mov    r9d,0x104
   1400046bd:	mov    edx,esi
   1400046bf:	mov    rcx,r12
   1400046c2:	call   QWORD PTR [rip+0x15948]        # 0x14001a010
   1400046c8:	test   eax,eax
   1400046ca:	je     0x140004673
   1400046cc:	test   rbx,rbx
   1400046cf:	je     0x140004771
   1400046d5:	lea    rax,[rsp+0x38]
   1400046da:	mov    r9d,0x20019
   1400046e0:	xor    r8d,r8d
   1400046e3:	mov    rdx,rbx
   1400046e6:	mov    rcx,r12
   1400046e9:	mov    QWORD PTR [rsp+0x20],rax
   1400046ee:	call   QWORD PTR [rip+0x15914]        # 0x14001a008
   1400046f4:	mov    rcx,rbx
   1400046f7:	test   eax,eax
   1400046f9:	je     0x140004712
   1400046fb:	call   0x140004074
   140004700:	mov    rcx,QWORD PTR [rsp+0x38]
   140004705:	test   rcx,rcx
   140004708:	je     0x140004771
   14000470a:	call   QWORD PTR [rip+0x158f0]        # 0x14001a000
   140004710:	jmp    0x140004771
   140004712:	call   0x140004074
   140004717:	mov    rcx,QWORD PTR [rsp+0x38]
   14000471c:	lea    rax,[rsp+0x40]
   140004721:	mov    QWORD PTR [rsp+0x28],rax
   140004726:	lea    rax,[rsp+0x60]
   14000472b:	lea    rdx,[rip+0x16d86]        # 0x14001b4b8
   140004732:	xor    r9d,r9d
   140004735:	xor    r8d,r8d
   140004738:	mov    DWORD PTR [rsp+0x40],0x104
   140004740:	mov    QWORD PTR [rsp+0x20],rax
   140004745:	call   QWORD PTR [rip+0x158cd]        # 0x14001a018
   14000474b:	mov    rcx,QWORD PTR [rsp+0x38]
   140004750:	test   eax,eax
   140004752:	jne    0x140004705
   140004754:	test   rcx,rcx
   140004757:	je     0x14000475f
   140004759:	call   QWORD PTR [rip+0x158a1]        # 0x14001a000
   14000475f:	lea    rcx,[rsp+0x60]
   140004764:	call   0x140004048
   140004769:	mov    rbx,rax
   14000476c:	test   rax,rax
   14000476f:	jne    0x1400047b9
   140004771:	mov    rcx,QWORD PTR [rsp+0x30]
   140004776:	test   rcx,rcx
   140004779:	je     0x140004781
   14000477b:	call   QWORD PTR [rip+0x1587f]        # 0x14001a000
   140004781:	inc    rdi
   140004784:	cmp    rdi,0x1
   140004788:	jle    0x14000461f
   14000478e:	xor    eax,eax
   140004790:	mov    rcx,QWORD PTR [rbp+0x70]
   140004794:	xor    rcx,rsp
   140004797:	call   0x14000a820
   14000479c:	lea    r11,[rsp+0x180]
   1400047a4:	mov    rbx,QWORD PTR [r11+0x28]
   1400047a8:	mov    rsi,QWORD PTR [r11+0x30]
   1400047ac:	mov    rdi,QWORD PTR [r11+0x38]
   1400047b0:	mov    rsp,r11
   1400047b3:	pop    r13
   1400047b5:	pop    r12
   1400047b7:	pop    rbp
   1400047b8:	ret    
   1400047b9:	mov    rcx,QWORD PTR [rsp+0x30]
   1400047be:	test   rcx,rcx
   1400047c1:	je     0x1400047c9
   1400047c3:	call   QWORD PTR [rip+0x15837]        # 0x14001a000
   1400047c9:	mov    rax,rbx
   1400047cc:	jmp    0x140004790
   1400047ce:	int3   
   1400047cf:	int3   
   1400047d0:	mov    rdx,QWORD PTR [rcx]
   1400047d3:	xor    r9d,r9d
   1400047d6:	xor    r11d,r11d
   1400047d9:	jmp    0x1400047e6
   1400047db:	cmp    al,0x20
   1400047dd:	je     0x1400047e3
   1400047df:	cmp    al,0x9
   1400047e1:	jne    0x1400047ec
   1400047e3:	inc    rdx
   1400047e6:	mov    al,BYTE PTR [rdx]
   1400047e8:	test   al,al
   1400047ea:	jne    0x1400047db
   1400047ec:	mov    r8,rdx
   1400047ef:	cmp    BYTE PTR [rdx],r9b
   1400047f2:	je     0x140004859
   1400047f4:	test   r11d,r11d
   1400047f7:	jne    0x140004803
   1400047f9:	cmp    BYTE PTR [rdx],0x20
   1400047fc:	je     0x14000484e
   1400047fe:	cmp    BYTE PTR [rdx],0x9
   140004801:	je     0x14000484e
   140004803:	cmp    BYTE PTR [rdx],0x5c
   140004806:	jne    0x140004828
   140004808:	cmp    BYTE PTR [rdx+0x1],0x22
   14000480c:	jne    0x140004828
   14000480e:	mov    eax,r9d
   140004811:	and    eax,0x80000001
   140004816:	jge    0x14000481f
   140004818:	dec    eax
   14000481a:	or     eax,0xfffffffe
   14000481d:	inc    eax
   14000481f:	test   eax,eax
   140004821:	jne    0x140004828
   140004823:	inc    rdx
   140004826:	jmp    0x140004838
   140004828:	cmp    BYTE PTR [rdx],0x22
   14000482b:	jne    0x140004838
   14000482d:	xor    eax,eax
   14000482f:	test   r11d,r11d
   140004832:	sete   al
   140004835:	mov    r11d,eax
   140004838:	mov    al,BYTE PTR [rdx]
   14000483a:	inc    rdx
   14000483d:	cmp    al,0x5c
   14000483f:	jne    0x140004846
   140004841:	inc    r9d
   140004844:	jmp    0x140004849
   140004846:	xor    r9d,r9d
   140004849:	cmp    BYTE PTR [rdx],0x0
   14000484c:	jne    0x1400047f4
   14000484e:	cmp    BYTE PTR [rdx],0x0
   140004851:	je     0x140004859
   140004853:	mov    BYTE PTR [rdx],0x0
   140004856:	inc    rdx
   140004859:	mov    QWORD PTR [rcx],rdx
   14000485c:	mov    rax,r8
   14000485f:	ret    
   140004860:	mov    rax,rsp
   140004863:	mov    QWORD PTR [rax+0x10],rbx
   140004867:	mov    QWORD PTR [rax+0x18],rsi
   14000486b:	mov    QWORD PTR [rax+0x20],rdi
   14000486f:	push   rbp
   140004870:	push   r12
   140004872:	push   r13
   140004874:	push   r14
   140004876:	push   r15
   140004878:	lea    rbp,[rax-0x138]
   14000487f:	sub    rsp,0x210
   140004886:	mov    rax,QWORD PTR [rip+0x1e833]        # 0x1400230c0
   14000488d:	xor    rax,rsp
   140004890:	mov    QWORD PTR [rbp+0x100],rax
   140004897:	mov    rbx,rcx
   14000489a:	call   0x140001ef4
   14000489f:	mov    esi,0x105
   1400048a4:	lea    rdx,[rbp-0x10]
   1400048a8:	xor    ecx,ecx
   1400048aa:	mov    r8d,esi
   1400048ad:	mov    rdi,rax
   1400048b0:	call   QWORD PTR [rip+0x15792]        # 0x14001a048
   1400048b6:	test   eax,eax
   1400048b8:	je     0x140004cd7
   1400048be:	cmp    eax,0x104
   1400048c3:	jg     0x140004cd7
   1400048c9:	lea    rdx,[rbp-0x10]
   1400048cd:	lea    rcx,[rip+0x16cf4]        # 0x14001b5c8
   1400048d4:	call   0x14000407c
   1400048d9:	lea    rcx,[rip+0x16cd0]        # 0x14001b5b0
   1400048e0:	mov    rdx,rbx
   1400048e3:	call   0x14000407c
   1400048e8:	mov    rcx,rbx
   1400048eb:	call   0x140009fa0
   1400048f0:	lea    rdx,[rbp-0x10]
   1400048f4:	mov    rcx,rbx
   1400048f7:	mov    r8,rax
   1400048fa:	call   0x1400194dc
   1400048ff:	test   eax,eax
   140004901:	je     0x140004cf1
   140004907:	lea    r8,[rip+0x16c92]        # 0x14001b5a0
   14000490e:	lea    rcx,[rbp-0x10]
   140004912:	mov    r9,rbx
   140004915:	mov    edx,esi
   140004917:	mov    QWORD PTR [rsp+0x20],rdi
   14000491c:	call   0x140004308
   140004921:	call   QWORD PTR [rip+0x15719]        # 0x14001a040
   140004927:	mov    rcx,rax
   14000492a:	call   0x140004048
   14000492f:	lea    rcx,[rsp+0x50]
   140004934:	mov    r15,rax
   140004937:	mov    QWORD PTR [rsp+0x50],rax
   14000493c:	call   0x1400047d0
   140004941:	mov    rsi,QWORD PTR [rsp+0x50]
   140004946:	mov    rcx,rsi
   140004949:	call   0x140009fa0
   14000494e:	lea    rcx,[rbp-0x10]
   140004952:	mov    rbx,rax
   140004955:	call   0x140009fa0
   14000495a:	lea    rcx,[rbx+rax*1+0x4]
   14000495f:	call   0x140003ff0
   140004964:	lea    rcx,[rbp-0x10]
   140004968:	mov    edx,0x20
   14000496d:	mov    rbx,rax
   140004970:	call   0x14000c04c
   140004975:	test   rax,rax
   140004978:	jne    0x140004999
   14000497a:	lea    edx,[rax+0x9]
   14000497d:	lea    rcx,[rbp-0x10]
   140004981:	call   0x14000c04c
   140004986:	test   rax,rax
   140004989:	jne    0x140004999
   14000498b:	lea    rdx,[rbp-0x10]
   14000498f:	mov    rcx,rbx
   140004992:	call   0x14000a750
   140004997:	jmp    0x1400049c3
   140004999:	lea    rdx,[rip+0x16bfc]        # 0x14001b59c
   1400049a0:	mov    rcx,rbx
   1400049a3:	call   0x14000a750
   1400049a8:	lea    rdx,[rbp-0x10]
   1400049ac:	mov    rcx,rax
   1400049af:	call   0x14000a6b0
   1400049b4:	lea    rdx,[rip+0x16be1]        # 0x14001b59c
   1400049bb:	mov    rcx,rax
   1400049be:	call   0x14000a6b0
   1400049c3:	cmp    BYTE PTR [rsi],0x0
   1400049c6:	mov    r13,rax
   1400049c9:	mov    edi,0x1
   1400049ce:	je     0x140004b8d
   1400049d4:	lea    rcx,[rsp+0x50]
   1400049d9:	call   0x1400047d0
   1400049de:	mov    r14,rax
   1400049e1:	cmp    BYTE PTR [rax],0x0
   1400049e4:	je     0x140004b3f
   1400049ea:	mov    rcx,rax
   1400049ed:	mov    rbx,rax
   1400049f0:	call   0x140009fa0
   1400049f5:	lea    rcx,[rdi+rax*1]
   1400049f9:	call   0x140003ff0
   1400049fe:	cmp    BYTE PTR [rbx],0x0
   140004a01:	mov    r12,rax
   140004a04:	mov    rsi,rax
   140004a07:	je     0x140004a60
   140004a09:	mov    al,BYTE PTR [rbx]
   140004a0b:	cmp    al,0x22
   140004a0d:	je     0x140004a58
   140004a0f:	cmp    al,0x5c
   140004a11:	jne    0x140004a53
   140004a13:	lea    rdx,[rip+0x16ada]        # 0x14001b4f4
   140004a1a:	mov    rcx,rbx
   140004a1d:	call   0x14000ae90
   140004a22:	lea    r11,[rbx+rax*1]
   140004a26:	cmp    BYTE PTR [r11],0x22
   140004a2a:	jne    0x140004a4c
   140004a2c:	mov    BYTE PTR [rsi],0x5c
   140004a2f:	add    rbx,0x2
   140004a33:	add    rsi,rdi
   140004a36:	cmp    BYTE PTR [rbx],0x5c
   140004a39:	jne    0x140004a5b
   140004a3b:	cmp    rbx,r11
   140004a3e:	jb     0x140004a2c
   140004a40:	jmp    0x140004a5b
   140004a42:	mov    al,BYTE PTR [rbx]
   140004a44:	mov    BYTE PTR [rsi],al
   140004a46:	add    rsi,rdi
   140004a49:	add    rbx,rdi
   140004a4c:	cmp    rbx,r11
   140004a4f:	jb     0x140004a42
   140004a51:	jmp    0x140004a5b
   140004a53:	mov    BYTE PTR [rsi],al
   140004a55:	add    rsi,rdi
   140004a58:	add    rbx,rdi
   140004a5b:	cmp    BYTE PTR [rbx],0x0
   140004a5e:	jne    0x140004a09
   140004a60:	mov    BYTE PTR [rsi],0x0
   140004a63:	cmp    BYTE PTR [r12],0x2d
   140004a68:	jne    0x140004b4c
   140004a6e:	lea    rdx,[rip+0x1621b]        # 0x14001ac90
   140004a75:	mov    rcx,r12
   140004a78:	call   0x14000a850
   140004a7d:	test   eax,eax
   140004a7f:	je     0x140004aeb
   140004a81:	lea    rdx,[rip+0x16204]        # 0x14001ac8c
   140004a88:	mov    rcx,r12
   140004a8b:	call   0x14000a850
   140004a90:	test   eax,eax
   140004a92:	je     0x140004aeb
   140004a94:	lea    rdx,[rip+0x1646d]        # 0x14001af08
   140004a9b:	mov    r8d,0x9
   140004aa1:	mov    rcx,r12
   140004aa4:	call   0x14000b570
   140004aa9:	test   eax,eax
   140004aab:	je     0x140004b37
   140004ab1:	lea    rdx,[rip+0x16438]        # 0x14001aef0
   140004ab8:	mov    rcx,r12
   140004abb:	call   0x14000a850
   140004ac0:	test   eax,eax
   140004ac2:	je     0x140004b37
   140004ac4:	lea    rdx,[rip+0x1640d]        # 0x14001aed8
   140004acb:	mov    rcx,r12
   140004ace:	call   0x14000a850
   140004ad3:	test   eax,eax
   140004ad5:	je     0x140004b37
   140004ad7:	lea    rdx,[rip+0x15c46]        # 0x14001a724
   140004ade:	mov    rcx,r13
   140004ae1:	call   0x14000a6b0
   140004ae6:	mov    rdx,r14
   140004ae9:	jmp    0x140004b2c
   140004aeb:	lea    rdx,[rip+0x15c32]        # 0x14001a724
   140004af2:	mov    rcx,r13
   140004af5:	call   0x14000a6b0
   140004afa:	mov    rdx,r14
   140004afd:	mov    rcx,rax
   140004b00:	call   0x14000a6b0
   140004b05:	lea    rcx,[rsp+0x50]
   140004b0a:	mov    r13,rax
   140004b0d:	call   0x1400047d0
   140004b12:	cmp    BYTE PTR [rax],0x0
   140004b15:	mov    rbx,rax
   140004b18:	je     0x140004b37
   140004b1a:	lea    rdx,[rip+0x15c03]        # 0x14001a724
   140004b21:	mov    rcx,r13
   140004b24:	call   0x14000a6b0
   140004b29:	mov    rdx,rbx
   140004b2c:	mov    rcx,rax
   140004b2f:	call   0x14000a6b0
   140004b34:	mov    r13,rax
   140004b37:	mov    rcx,r12
   140004b3a:	call   0x140004074
   140004b3f:	mov    rax,QWORD PTR [rsp+0x50]
   140004b44:	cmp    BYTE PTR [rax],0x0
   140004b47:	jmp    0x1400049ce
   140004b4c:	lea    rdx,[rip+0x15bd1]        # 0x14001a724
   140004b53:	mov    rcx,r13
   140004b56:	call   0x14000a6b0
   140004b5b:	mov    rdx,r14
   140004b5e:	mov    rcx,rax
   140004b61:	call   0x14000a6b0
   140004b66:	lea    rdx,[rip+0x15bb7]        # 0x14001a724
   140004b6d:	mov    rcx,rax
   140004b70:	call   0x14000a6b0
   140004b75:	mov    rdx,QWORD PTR [rsp+0x50]
   140004b7a:	mov    rcx,rax
   140004b7d:	call   0x14000a6b0
   140004b82:	mov    rcx,r12
   140004b85:	mov    r13,rax
   140004b88:	call   0x140004074
   140004b8d:	mov    rcx,r15
   140004b90:	call   0x140004074
   140004b95:	call   0x1400040e0
   140004b9a:	test   al,al
   140004b9c:	je     0x140004be4
   140004b9e:	mov    rcx,r13
   140004ba1:	call   0x140004048
   140004ba6:	lea    rcx,[rsp+0x50]
   140004bab:	mov    rbx,rax
   140004bae:	mov    QWORD PTR [rsp+0x50],rax
   140004bb3:	call   0x1400047d0
   140004bb8:	lea    rdx,[rbp-0x10]
   140004bbc:	lea    rcx,[rip+0x169bd]        # 0x14001b580
   140004bc3:	mov    r8,rax
   140004bc6:	call   0x140009c2c
   140004bcb:	mov    rdx,QWORD PTR [rsp+0x50]
   140004bd0:	lea    rcx,[rip+0x16991]        # 0x14001b568
   140004bd7:	call   0x140009c2c
   140004bdc:	mov    rcx,rbx
   140004bdf:	call   0x140004074
   140004be4:	call   0x14000ab98
   140004be9:	lea    rcx,[rax+0x30]
   140004bed:	call   0x14000bffc
   140004bf2:	call   0x14000ab98
   140004bf7:	lea    rcx,[rax+0x60]
   140004bfb:	call   0x14000bffc
   140004c00:	mov    ebx,0x68
   140004c05:	lea    rcx,[rbp-0x80]
   140004c09:	mov    r8d,ebx
   140004c0c:	xor    edx,edx
   140004c0e:	call   0x14000a530
   140004c13:	lea    r8d,[rbx-0x50]
   140004c17:	lea    rcx,[rsp+0x60]
   140004c1c:	xor    edx,edx
   140004c1e:	mov    DWORD PTR [rbp-0x80],ebx
   140004c21:	call   0x14000a530
   140004c26:	lea    r11,[rsp+0x60]
   140004c2b:	lea    rax,[rbp-0x80]
   140004c2f:	mov    QWORD PTR [rsp+0x48],r11
   140004c34:	mov    QWORD PTR [rsp+0x40],rax
   140004c39:	and    QWORD PTR [rsp+0x38],0x0
   140004c3f:	and    QWORD PTR [rsp+0x30],0x0
   140004c45:	and    DWORD PTR [rsp+0x28],0x0
   140004c4a:	lea    rcx,[rbp-0x10]
   140004c4e:	xor    r9d,r9d
   140004c51:	xor    r8d,r8d
   140004c54:	mov    rdx,r13
   140004c57:	mov    DWORD PTR [rsp+0x20],edi
   140004c5b:	call   QWORD PTR [rip+0x1542f]        # 0x14001a090
   140004c61:	test   eax,eax
   140004c63:	jne    0x140004c7d
   140004c65:	lea    rdx,[rbp-0x10]
   140004c69:	lea    rcx,[rip+0x168d0]        # 0x14001b540
   140004c70:	call   0x14000440c
   140004c75:	mov    ecx,edi
   140004c77:	call   0x140009bcc
   140004c7c:	int3   
   140004c7d:	mov    rcx,QWORD PTR [rsp+0x60]
   140004c82:	or     ebx,0xffffffff
   140004c85:	mov    edx,ebx
   140004c87:	call   QWORD PTR [rip+0x153fb]        # 0x14001a088
   140004c8d:	cmp    eax,ebx
   140004c8f:	je     0x140004ca7
   140004c91:	mov    rcx,QWORD PTR [rsp+0x60]
   140004c96:	lea    rdx,[rsp+0x58]
   140004c9b:	call   QWORD PTR [rip+0x153df]        # 0x14001a080
   140004ca1:	test   eax,eax
   140004ca3:	jne    0x140004cb7
   140004ca5:	jmp    0x140004cb3
   140004ca7:	lea    rcx,[rip+0x1686a]        # 0x14001b518
   140004cae:	call   0x140004360
   140004cb3:	mov    DWORD PTR [rsp+0x58],edi
   140004cb7:	mov    rcx,QWORD PTR [rsp+0x68]
   140004cbc:	call   QWORD PTR [rip+0x153b6]        # 0x14001a078
   140004cc2:	mov    rcx,QWORD PTR [rsp+0x60]
   140004cc7:	call   QWORD PTR [rip+0x153ab]        # 0x14001a078
   140004ccd:	mov    ecx,DWORD PTR [rsp+0x58]
   140004cd1:	call   0x140009bcc
   140004cd6:	int3   
   140004cd7:	lea    rcx,[rip+0x1681a]        # 0x14001b4f8
   140004cde:	mov    rdx,rdi
   140004ce1:	call   0x14000440c
   140004ce6:	mov    ecx,0x1
   140004ceb:	call   0x140009bcc
   140004cf0:	int3   
   140004cf1:	mov    rcx,QWORD PTR [rbp+0x100]
   140004cf8:	xor    rcx,rsp
   140004cfb:	call   0x14000a820
   140004d00:	lea    r11,[rsp+0x210]
   140004d08:	mov    rbx,QWORD PTR [r11+0x38]
   140004d0c:	mov    rsi,QWORD PTR [r11+0x40]
   140004d10:	mov    rdi,QWORD PTR [r11+0x48]
   140004d14:	mov    rsp,r11
   140004d17:	pop    r15
   140004d19:	pop    r14
   140004d1b:	pop    r13
   140004d1d:	pop    r12
   140004d1f:	pop    rbp
   140004d20:	ret    
   140004d21:	int3   
   140004d22:	int3   
   140004d23:	int3   
   140004d24:	mov    QWORD PTR [rsp+0x8],rbx
   140004d29:	push   rdi
   140004d2a:	sub    rsp,0x20
   140004d2e:	mov    rbx,rcx
   140004d31:	call   0x140009fa0
   140004d36:	lea    rcx,[rax+0x2]
   140004d3a:	call   0x140003ff0
   140004d3f:	mov    rdx,rbx
   140004d42:	mov    rcx,rax
   140004d45:	call   0x14000a750
   140004d4a:	lea    rdx,[rip+0x1688b]        # 0x14001b5dc
   140004d51:	mov    rcx,rax
   140004d54:	call   0x14000a6b0
   140004d59:	mov    rcx,rax
   140004d5c:	mov    rdi,rax
   140004d5f:	call   0x14000c2e8
   140004d64:	mov    rcx,rdi
   140004d67:	mov    ebx,eax
   140004d69:	call   0x140004074
   140004d6e:	mov    eax,ebx
   140004d70:	mov    rbx,QWORD PTR [rsp+0x30]
   140004d75:	add    rsp,0x20
   140004d79:	pop    rdi
   140004d7a:	ret    
   140004d7b:	int3   
   140004d7c:	lea    rax,[rip+0x1685d]        # 0x14001b5e0
   140004d83:	ret    
   140004d84:	mov    QWORD PTR [rsp+0x8],rbx
   140004d89:	push   rdi
   140004d8a:	sub    rsp,0x20
   140004d8e:	mov    rax,QWORD PTR [rip+0x1fa63]        # 0x1400247f8
   140004d95:	mov    rbx,rdx
   140004d98:	mov    rdi,rcx
   140004d9b:	test   rax,rax
   140004d9e:	jne    0x140004de7
   140004da0:	lea    rcx,[rip+0x16879]        # 0x14001b620
   140004da7:	call   QWORD PTR [rip+0x152f3]        # 0x14001a0a0
   140004dad:	test   rax,rax
   140004db0:	jne    0x140004db6
   140004db2:	xor    eax,eax
   140004db4:	jmp    0x140004def
   140004db6:	lea    rdx,[rip+0x16843]        # 0x14001b600
   140004dbd:	mov    rcx,rax
   140004dc0:	call   QWORD PTR [rip+0x152d2]        # 0x14001a098
   140004dc6:	mov    QWORD PTR [rip+0x1fa2b],rax        # 0x1400247f8
   140004dcd:	test   rax,rax
   140004dd0:	jne    0x140004de7
   140004dd2:	lea    rdx,[rip+0x16827]        # 0x14001b600
   140004dd9:	lea    rcx,[rip+0x16808]        # 0x14001b5e8
   140004de0:	call   0x140004360
   140004de5:	jmp    0x140004db2
   140004de7:	mov    rdx,rbx
   140004dea:	mov    rcx,rdi
   140004ded:	call   rax
   140004def:	mov    rbx,QWORD PTR [rsp+0x30]
   140004df4:	add    rsp,0x20
   140004df8:	pop    rdi
   140004df9:	ret    
   140004dfa:	int3   
   140004dfb:	int3   
   140004dfc:	rex push rbx
   140004dfe:	sub    rsp,0x20
   140004e02:	xor    edx,edx
   140004e04:	mov    bl,cl
   140004e06:	lea    rcx,[rsp+0x38]
   140004e0b:	lea    r8d,[rdx+0x8]
   140004e0f:	call   0x14000a530
   140004e14:	lea    rcx,[rsp+0x38]
   140004e19:	mov    DWORD PTR [rsp+0x38],0x8
   140004e21:	call   QWORD PTR [rip+0x15201]        # 0x14001a028
   140004e27:	mov    BYTE PTR [rip+0x1f9b7],bl        # 0x1400247e4
   140004e2d:	call   0x1400040ac
   140004e32:	add    rsp,0x20
   140004e36:	pop    rbx
   140004e37:	ret    
   140004e38:	mov    QWORD PTR [rsp+0x8],rbx
   140004e3d:	mov    QWORD PTR [rsp+0x10],rbp
   140004e42:	mov    QWORD PTR [rsp+0x18],rsi
   140004e47:	push   rdi
   140004e48:	sub    rsp,0x40
   140004e4c:	mov    rbx,r9
   140004e4f:	mov    edi,r8d
   140004e52:	mov    rsi,rdx
   140004e55:	mov    rbp,rcx
   140004e58:	call   0x140001e1c
   140004e5d:	mov    rax,QWORD PTR [rsp+0x78]
   140004e62:	mov    r11d,DWORD PTR [rsp+0x80]
   140004e6a:	mov    r9,rbx
   140004e6d:	mov    r8d,edi
   140004e70:	mov    DWORD PTR [rsp+0x30],r11d
   140004e75:	mov    QWORD PTR [rsp+0x28],rax
   140004e7a:	mov    eax,DWORD PTR [rsp+0x70]
   140004e7e:	mov    rdx,rsi
   140004e81:	mov    rcx,rbp
   140004e84:	mov    DWORD PTR [rsp+0x20],eax
   140004e88:	call   0x1400037b0
   140004e8d:	mov    rbx,QWORD PTR [rsp+0x50]
   140004e92:	mov    rbp,QWORD PTR [rsp+0x58]
   140004e97:	mov    rsi,QWORD PTR [rsp+0x60]
   140004e9c:	add    rsp,0x40
   140004ea0:	pop    rdi
   140004ea1:	ret    
   140004ea2:	int3   
   140004ea3:	int3   
   140004ea4:	ret    0x0
   140004ea7:	int3   
   140004ea8:	xor    al,al
   140004eaa:	ret    
   140004eab:	int3   
   140004eac:	mov    QWORD PTR [rsp+0x8],rbx
   140004eb1:	mov    QWORD PTR [rsp+0x10],rbp
   140004eb6:	mov    QWORD PTR [rsp+0x18],rsi
   140004ebb:	push   rdi
   140004ebc:	push   r12
   140004ebe:	push   r13
   140004ec0:	push   r14
   140004ec2:	push   r15
   140004ec4:	sub    rsp,0x50
   140004ec8:	xor    edi,edi
   140004eca:	movsxd rsi,r8d
   140004ecd:	mov    r12,rdx
   140004ed0:	mov    BYTE PTR [rsp+0x30],dil
   140004ed5:	mov    rbp,rcx
   140004ed8:	call   0x1400013e8
   140004edd:	mov    rbx,rax
   140004ee0:	mov    QWORD PTR [rsp+0x48],rax
   140004ee5:	test   rax,rax
   140004ee8:	jne    0x140004efd
   140004eea:	lea    rcx,[rip+0x1567f]        # 0x14001a570
   140004ef1:	call   0x140004360
   140004ef6:	xor    eax,eax
   140004ef8:	jmp    0x140005109
   140004efd:	test   esi,esi
   140004eff:	jne    0x140004f14
   140004f01:	xor    r8d,r8d
   140004f04:	mov    rdx,r12
   140004f07:	mov    rcx,rbp
   140004f0a:	call   0x140001540
   140004f0f:	jmp    0x140005109
   140004f14:	call   0x140003f44
   140004f19:	mov    r13,rax
   140004f1c:	call   0x140003f3c
   140004f21:	cmp    esi,eax
   140004f23:	jle    0x140004f47
   140004f25:	lea    rcx,[rip+0x167ac]        # 0x14001b6d8
   140004f2c:	mov    r8d,eax
   140004f2f:	mov    edx,esi
   140004f31:	call   0x14000407c
   140004f36:	lea    rcx,[rip+0x1677b]        # 0x14001b6b8
   140004f3d:	call   0x14000407c
   140004f42:	mov    r8d,esi
   140004f45:	jmp    0x140004f04
   140004f47:	mov    rdx,QWORD PTR [r12]
   140004f4b:	sub    eax,esi
   140004f4d:	movsxd r15,eax
   140004f50:	shl    r15,0x4
   140004f54:	add    r15,r13
   140004f57:	mov    rcx,QWORD PTR [r15]
   140004f5a:	call   0x14000a850
   140004f5f:	test   eax,eax
   140004f61:	je     0x140004f78
   140004f63:	lea    rcx,[rip+0x16726]        # 0x14001b690
   140004f6a:	call   0x14000407c
   140004f6f:	lea    rcx,[rip+0x166fa]        # 0x14001b670
   140004f76:	jmp    0x140004f3d
   140004f78:	mov    rcx,rsi
   140004f7b:	shl    rcx,0x3
   140004f7f:	call   0x140003ff0
   140004f84:	mov    DWORD PTR [rsp+0x34],edi
   140004f88:	mov    r13,rax
   140004f8b:	test   esi,esi
   140004f8d:	jle    0x14000506b
   140004f93:	mov    rbx,r12
   140004f96:	sub    rax,r12
   140004f99:	mov    QWORD PTR [rsp+0x38],rbx
   140004f9e:	mov    QWORD PTR [rsp+0x40],rax
   140004fa3:	mov    rdx,QWORD PTR [rbx]
   140004fa6:	mov    rcx,QWORD PTR [r15]
   140004fa9:	call   0x14000a850
   140004fae:	test   eax,eax
   140004fb0:	jne    0x140004fb8
   140004fb2:	mov    al,BYTE PTR [r15+0x8]
   140004fb6:	jmp    0x140004fbb
   140004fb8:	mov    al,dil
   140004fbb:	movzx  edx,BYTE PTR [rsp+0x30]
   140004fc0:	mov    BYTE PTR [rsp+0x98],al
   140004fc7:	movzx  eax,al
   140004fca:	mov    ecx,edx
   140004fcc:	test   dl,dl
   140004fce:	cmove  ecx,eax
   140004fd1:	mov    BYTE PTR [rsp+0x30],cl
   140004fd5:	mov    rcx,QWORD PTR [rbx]
   140004fd8:	call   0x140009fa0
   140004fdd:	add    eax,0x2
   140004fe0:	movsxd rbx,eax
   140004fe3:	mov    rcx,rbx
   140004fe6:	call   0x140003ff0
   140004feb:	mov    rcx,QWORD PTR [rsp+0x38]
   140004ff0:	mov    rdx,QWORD PTR [rsp+0x40]
   140004ff5:	neg    BYTE PTR [rsp+0x98]
   140004ffc:	mov    QWORD PTR [rdx+rcx*1],rax
   140005000:	mov    rcx,QWORD PTR [rcx]
   140005003:	sbb    r9d,r9d
   140005006:	mov    QWORD PTR [rsp+0x20],rcx
   14000500b:	lea    r8,[rip+0x16656]        # 0x14001b668
   140005012:	and    r9d,0xe
   140005016:	mov    rcx,rax
   140005019:	mov    rdx,rbx
   14000501c:	add    r9d,0x46
   140005020:	call   0x140004308
   140005025:	test   eax,eax
   140005027:	js     0x140004ef6
   14000502d:	mov    rax,QWORD PTR [rsp+0x40]
   140005032:	mov    rbx,QWORD PTR [rsp+0x38]
   140005037:	lea    rcx,[rip+0x16626]        # 0x14001b664
   14000503e:	mov    rdx,QWORD PTR [rax+rbx*1]
   140005042:	call   0x14000407c
   140005047:	mov    eax,DWORD PTR [rsp+0x34]
   14000504b:	add    rbx,0x8
   14000504f:	inc    eax
   140005051:	add    r15,0x10
   140005055:	mov    QWORD PTR [rsp+0x38],rbx
   14000505a:	mov    DWORD PTR [rsp+0x34],eax
   14000505e:	cmp    eax,esi
   140005060:	jl     0x140004fa3
   140005066:	mov    rbx,QWORD PTR [rsp+0x48]
   14000506b:	mov    dl,BYTE PTR [rsp+0x30]
   14000506f:	test   dl,dl
   140005071:	jne    0x140005096
   140005073:	test   esi,esi
   140005075:	jle    0x140005089
   140005077:	mov    rcx,QWORD PTR [r13+rdi*8+0x0]
   14000507c:	call   0x140004074
   140005081:	inc    rdi
   140005084:	cmp    rdi,rsi
   140005087:	jl     0x140005077
   140005089:	mov    rcx,r13
   14000508c:	call   0x140004074
   140005091:	jmp    0x140004f42
   140005096:	mov    rax,QWORD PTR [rbp+0x0]
   14000509a:	lea    r9,[rip+0x16597]        # 0x14001b638
   1400050a1:	lea    r8,[rip+0x16580]        # 0x14001b628
   1400050a8:	mov    rdx,rbx
   1400050ab:	mov    rcx,rbp
   1400050ae:	call   QWORD PTR [rax+0x388]
   1400050b4:	mov    r12,rax
   1400050b7:	test   rax,rax
   1400050ba:	je     0x140004eea
   1400050c0:	mov    r8d,esi
   1400050c3:	mov    rdx,r13
   1400050c6:	mov    rcx,rbp
   1400050c9:	call   0x140001540
   1400050ce:	mov    r10,QWORD PTR [rbp+0x0]
   1400050d2:	mov    r8,r12
   1400050d5:	mov    rdx,rbx
   1400050d8:	mov    rcx,rbp
   1400050db:	mov    r9,rax
   1400050de:	call   QWORD PTR [r10+0x390]
   1400050e5:	mov    rbx,rax
   1400050e8:	test   esi,esi
   1400050ea:	jle    0x1400050fe
   1400050ec:	mov    rcx,QWORD PTR [r13+rdi*8+0x0]
   1400050f1:	call   0x140004074
   1400050f6:	inc    rdi
   1400050f9:	cmp    rdi,rsi
   1400050fc:	jl     0x1400050ec
   1400050fe:	mov    rcx,r13
   140005101:	call   0x140004074
   140005106:	mov    rax,rbx
   140005109:	lea    r11,[rsp+0x50]
   14000510e:	mov    rbx,QWORD PTR [r11+0x30]
   140005112:	mov    rbp,QWORD PTR [r11+0x38]
   140005116:	mov    rsi,QWORD PTR [r11+0x40]
   14000511a:	mov    rsp,r11
   14000511d:	pop    r15
   14000511f:	pop    r14
   140005121:	pop    r13
   140005123:	pop    r12
   140005125:	pop    rdi
   140005126:	ret    
   140005127:	int3   
   140005128:	mov    QWORD PTR [rsp+0x10],rbx
   14000512d:	mov    QWORD PTR [rsp+0x18],rsi
   140005132:	push   rbp
   140005133:	push   rdi
   140005134:	push   r12
   140005136:	lea    rbp,[rsp-0x170]
   14000513e:	sub    rsp,0x270
   140005145:	mov    rax,QWORD PTR [rip+0x1df74]        # 0x1400230c0
   14000514c:	xor    rax,rsp
   14000514f:	mov    QWORD PTR [rbp+0x160],rax
   140005156:	lea    rax,[rsp+0x30]
   14000515b:	mov    edi,edx
   14000515d:	mov    rsi,rcx
   140005160:	lea    r12,[rip+0x16361]        # 0x14001b4c8
   140005167:	mov    r9d,0x20019
   14000516d:	xor    r8d,r8d
   140005170:	mov    rcx,0xffffffff80000002
   140005177:	mov    rdx,r12
   14000517a:	mov    QWORD PTR [rsp+0x20],rax
   14000517f:	call   QWORD PTR [rip+0x14e83]        # 0x14001a008
   140005185:	xor    ebx,ebx
   140005187:	test   eax,eax
   140005189:	je     0x1400051a1
   14000518b:	lea    rcx,[rip+0x166de]        # 0x14001b870
   140005192:	mov    rdx,r12
   140005195:	call   0x140004360
   14000519a:	xor    al,al
   14000519c:	jmp    0x1400052e5
   1400051a1:	mov    rcx,QWORD PTR [rsp+0x30]
   1400051a6:	lea    r8,[rsp+0x40]
   1400051ab:	lea    rdx,[rip+0x166ae]        # 0x14001b860
   1400051b2:	mov    r9d,0x104
   1400051b8:	call   0x140004204
   1400051bd:	test   al,al
   1400051bf:	jne    0x1400051dd
   1400051c1:	lea    rcx,[rip+0x16658]        # 0x14001b820
   1400051c8:	mov    rdx,r12
   1400051cb:	call   0x140004360
   1400051d0:	mov    rcx,QWORD PTR [rsp+0x30]
   1400051d5:	call   QWORD PTR [rip+0x14e25]        # 0x14001a000
   1400051db:	jmp    0x14000519a
   1400051dd:	call   0x140001eec
   1400051e2:	lea    rcx,[rsp+0x40]
   1400051e7:	mov    rdx,rax
   1400051ea:	call   0x14000a850
   1400051ef:	test   eax,eax
   1400051f1:	je     0x140005211
   1400051f3:	call   0x140001eec
   1400051f8:	lea    r8,[rsp+0x40]
   1400051fd:	lea    rcx,[rip+0x165cc]        # 0x14001b7d0
   140005204:	mov    r9,rax
   140005207:	mov    rdx,r12
   14000520a:	call   0x140004360
   14000520f:	jmp    0x1400051d0
   140005211:	mov    rcx,QWORD PTR [rsp+0x30]
   140005216:	lea    rax,[rsp+0x38]
   14000521b:	lea    rdx,[rsp+0x40]
   140005220:	mov    r9d,0x20019
   140005226:	xor    r8d,r8d
   140005229:	mov    QWORD PTR [rsp+0x20],rax
   14000522e:	call   QWORD PTR [rip+0x14dd4]        # 0x14001a008
   140005234:	test   eax,eax
   140005236:	je     0x14000524e
   140005238:	lea    r8,[rsp+0x40]
   14000523d:	lea    rcx,[rip+0x1662c]        # 0x14001b870
   140005244:	mov    rdx,r12
   140005247:	call   0x140004360
   14000524c:	jmp    0x1400051d0
   14000524e:	mov    rcx,QWORD PTR [rsp+0x38]
   140005253:	lea    rdx,[rip+0x1625e]        # 0x14001b4b8
   14000525a:	mov    r9d,edi
   14000525d:	mov    r8,rsi
   140005260:	call   0x140004204
   140005265:	test   al,al
   140005267:	jne    0x14000527f
   140005269:	lea    r8,[rsp+0x40]
   14000526e:	lea    rcx,[rip+0x16523]        # 0x14001b798
   140005275:	mov    rdx,r12
   140005278:	call   0x140004360
   14000527d:	jmp    0x1400052cd
   14000527f:	call   0x1400040e0
   140005284:	test   al,al
   140005286:	je     0x1400052cb
   140005288:	mov    rcx,QWORD PTR [rsp+0x38]
   14000528d:	lea    r8,[rbp+0x50]
   140005291:	lea    rdx,[rip+0x164f0]        # 0x14001b788
   140005298:	mov    r9d,0x104
   14000529e:	call   0x140004204
   1400052a3:	test   al,al
   1400052a5:	jne    0x1400052b6
   1400052a7:	lea    rcx,[rip+0x164b2]        # 0x14001b760
   1400052ae:	call   0x140009c2c
   1400052b3:	mov    BYTE PTR [rbp+0x50],bl
   1400052b6:	lea    r8,[rbp+0x50]
   1400052ba:	lea    rdx,[rsp+0x40]
   1400052bf:	lea    rcx,[rip+0x16472]        # 0x14001b738
   1400052c6:	call   0x140009c2c
   1400052cb:	mov    bl,0x1
   1400052cd:	mov    rcx,QWORD PTR [rsp+0x30]
   1400052d2:	call   QWORD PTR [rip+0x14d28]        # 0x14001a000
   1400052d8:	mov    rcx,QWORD PTR [rsp+0x38]
   1400052dd:	call   QWORD PTR [rip+0x14d1d]        # 0x14001a000
   1400052e3:	mov    al,bl
   1400052e5:	mov    rcx,QWORD PTR [rbp+0x160]
   1400052ec:	xor    rcx,rsp
   1400052ef:	call   0x14000a820
   1400052f4:	lea    r11,[rsp+0x270]
   1400052fc:	mov    rbx,QWORD PTR [r11+0x28]
   140005300:	mov    rsi,QWORD PTR [r11+0x30]
   140005304:	mov    rsp,r11
   140005307:	pop    r12
   140005309:	pop    rdi
   14000530a:	pop    rbp
   14000530b:	ret    
   14000530c:	mov    QWORD PTR [rsp+0x18],rbx
   140005311:	push   rdi
   140005312:	sub    rsp,0x170
   140005319:	mov    rax,QWORD PTR [rip+0x1dda0]        # 0x1400230c0
   140005320:	xor    rax,rsp
   140005323:	mov    QWORD PTR [rsp+0x160],rax
   14000532b:	mov    edi,edx
   14000532d:	mov    rbx,rcx
   140005330:	call   0x1400041bc
   140005335:	test   al,al
   140005337:	je     0x1400053b5
   140005339:	lea    r8,[rip+0x165a8]        # 0x14001b8e8
   140005340:	lea    rcx,[rsp+0x50]
   140005345:	mov    r9,rbx
   140005348:	mov    edx,0x104
   14000534d:	call   0x140004308
   140005352:	lea    rdx,[rsp+0x20]
   140005357:	lea    rcx,[rsp+0x50]
   14000535c:	call   0x14000b628
   140005361:	test   eax,eax
   140005363:	jne    0x140005378
   140005365:	lea    rcx,[rip+0x1656c]        # 0x14001b8d8
   14000536c:	mov    rdx,rbx
   14000536f:	call   0x14000407c
   140005374:	mov    al,0x1
   140005376:	jmp    0x1400053d1
   140005378:	lea    r8,[rip+0x16541]        # 0x14001b8c0
   14000537f:	lea    rcx,[rsp+0x50]
   140005384:	mov    r9,rbx
   140005387:	mov    edx,0x104
   14000538c:	call   0x140004308
   140005391:	lea    rdx,[rsp+0x20]
   140005396:	lea    rcx,[rsp+0x50]
   14000539b:	call   0x14000b628
   1400053a0:	test   eax,eax
   1400053a2:	jne    0x1400053b5
   1400053a4:	lea    rdx,[rip+0x1650d]        # 0x14001b8b8
   1400053ab:	mov    rcx,rbx
   1400053ae:	call   0x14000a6b0
   1400053b3:	jmp    0x140005365
   1400053b5:	mov    edx,edi
   1400053b7:	mov    rcx,rbx
   1400053ba:	call   0x140005128
   1400053bf:	test   al,al
   1400053c1:	jne    0x140005365
   1400053c3:	lea    rcx,[rip+0x164ce]        # 0x14001b898
   1400053ca:	call   0x140004360
   1400053cf:	xor    al,al
   1400053d1:	mov    rcx,QWORD PTR [rsp+0x160]
   1400053d9:	xor    rcx,rsp
   1400053dc:	call   0x14000a820
   1400053e1:	mov    rbx,QWORD PTR [rsp+0x190]
   1400053e9:	add    rsp,0x170
   1400053f0:	pop    rdi
   1400053f1:	ret    
   1400053f2:	int3   
   1400053f3:	int3   
   1400053f4:	mov    QWORD PTR [rsp+0x10],rbx
   1400053f9:	push   rdi
   1400053fa:	sub    rsp,0x140
   140005401:	mov    rax,QWORD PTR [rip+0x1dcb8]        # 0x1400230c0
   140005408:	xor    rax,rsp
   14000540b:	mov    QWORD PTR [rsp+0x130],rax
   140005413:	mov    rdi,rcx
   140005416:	lea    rcx,[rsp+0x20]
   14000541b:	mov    edx,0x104
   140005420:	call   0x14000530c
   140005425:	test   al,al
   140005427:	jne    0x14000542d
   140005429:	xor    eax,eax
   14000542b:	jmp    0x140005492
   14000542d:	mov    rcx,QWORD PTR [rip+0x1dc4c]        # 0x140023080
   140005434:	call   0x140009fa0
   140005439:	lea    rcx,[rsp+0x20]
   14000543e:	mov    rbx,rax
   140005441:	call   0x140009fa0
   140005446:	add    rbx,rax
   140005449:	cmp    rbx,0x104
   140005450:	jae    0x140005429
   140005452:	mov    rdx,QWORD PTR [rip+0x1dc27]        # 0x140023080
   140005459:	lea    rcx,[rsp+0x20]
   14000545e:	call   0x14000a6b0
   140005463:	mov    rax,QWORD PTR [rip+0x1f386]        # 0x1400247f0
   14000546a:	test   rax,rax
   14000546d:	jne    0x140005486
   14000546f:	lea    rcx,[rsp+0x20]
   140005474:	call   QWORD PTR [rip+0x14c2e]        # 0x14001a0a8
   14000547a:	mov    QWORD PTR [rip+0x1f36f],rax        # 0x1400247f0
   140005481:	test   rax,rax
   140005484:	je     0x140005429
   140005486:	mov    rdx,rdi
   140005489:	mov    rcx,rax
   14000548c:	call   QWORD PTR [rip+0x14c06]        # 0x14001a098
   140005492:	mov    rcx,QWORD PTR [rsp+0x130]
   14000549a:	xor    rcx,rsp
   14000549d:	call   0x14000a820
   1400054a2:	mov    rbx,QWORD PTR [rsp+0x158]
   1400054aa:	add    rsp,0x140
   1400054b1:	pop    rdi
   1400054b2:	ret    
   1400054b3:	int3   
   1400054b4:	rex push rbx
   1400054b6:	push   rbp
   1400054b7:	push   rsi
   1400054b8:	push   rdi
   1400054b9:	push   r12
   1400054bb:	push   r13
   1400054bd:	push   r14
   1400054bf:	push   r15
   1400054c1:	sub    rsp,0x88
   1400054c8:	mov    rax,QWORD PTR [rip+0x1dbf1]        # 0x1400230c0
   1400054cf:	xor    rax,rsp
   1400054d2:	mov    QWORD PTR [rsp+0x78],rax
   1400054d7:	mov    rax,QWORD PTR [rsp+0x100]
   1400054df:	mov    rsi,QWORD PTR [rsp+0xf0]
   1400054e7:	mov    rbx,QWORD PTR [rdx]
   1400054ea:	xor    ebp,ebp
   1400054ec:	mov    QWORD PTR [rsp+0x40],rax
   1400054f1:	mov    r15d,r9d
   1400054f4:	mov    r13,r8
   1400054f7:	mov    r14,rdx
   1400054fa:	mov    r12,rcx
   1400054fd:	mov    edi,0x40
   140005502:	cmp    DWORD PTR [rcx],ebp
   140005504:	jle    0x14000558c
   14000550a:	mov    rcx,QWORD PTR [rbx]
   14000550d:	lea    rdx,[rip+0x165d4]        # 0x14001bae8
   140005514:	call   0x14000a850
   140005519:	test   eax,eax
   14000551b:	je     0x14000555d
   14000551d:	mov    rcx,QWORD PTR [rbx]
   140005520:	lea    rdx,[rip+0x154ed]        # 0x14001aa14
   140005527:	call   0x14000a850
   14000552c:	test   eax,eax
   14000552e:	je     0x14000555d
   140005530:	mov    rcx,QWORD PTR [rbx]
   140005533:	lea    rdx,[rip+0x165a6]        # 0x14001bae0
   14000553a:	call   0x14000a850
   14000553f:	test   eax,eax
   140005541:	je     0x140005556
   140005543:	mov    rcx,QWORD PTR [rbx]
   140005546:	lea    rdx,[rip+0x154cf]        # 0x14001aa1c
   14000554d:	call   0x14000a850
   140005552:	test   eax,eax
   140005554:	jne    0x140005562
   140005556:	mov    edi,0x20
   14000555b:	jmp    0x140005562
   14000555d:	mov    edi,0x40
   140005562:	inc    ebp
   140005564:	add    rbx,0x8
   140005568:	cmp    ebp,DWORD PTR [r12]
   14000556c:	jl     0x14000550a
   14000556e:	cmp    edi,0x40
   140005571:	je     0x14000558c
   140005573:	lea    rcx,[rip+0x16506]        # 0x14001ba80
   14000557a:	mov    edx,edi
   14000557c:	call   0x140004360
   140005581:	mov    ecx,0x1
   140005586:	call   0x140009bcc
   14000558b:	int3   
   14000558c:	mov    edx,r15d
   14000558f:	mov    rcx,r13
   140005592:	call   0x14000530c
   140005597:	xor    ebp,ebp
   140005599:	test   al,al
   14000559b:	jne    0x1400055b2
   14000559d:	lea    rcx,[rip+0x164a4]        # 0x14001ba48
   1400055a4:	call   0x140004360
   1400055a9:	lea    ecx,[rbp+0x2]
   1400055ac:	call   0x140009bcc
   1400055b1:	int3   
   1400055b2:	mov    rbx,QWORD PTR [rsp+0x40]
   1400055b7:	movsxd rdx,DWORD PTR [rsp+0x108]
   1400055bf:	lea    rcx,[rip+0x15f2e]        # 0x14001b4f4
   1400055c6:	mov    QWORD PTR [rsp+0x38],rcx
   1400055cb:	lea    rax,[rip+0x15e96]        # 0x14001b468
   1400055d2:	lea    r8,[rip+0x16457]        # 0x14001ba30
   1400055d9:	mov    QWORD PTR [rsp+0x30],rax
   1400055de:	mov    QWORD PTR [rsp+0x28],rcx
   1400055e3:	mov    QWORD PTR [rsp+0x20],rcx
   1400055e8:	mov    rcx,rbx
   1400055eb:	mov    r9,r13
   1400055ee:	call   0x140004308
   1400055f3:	xor    edx,edx
   1400055f5:	mov    rcx,rbx
   1400055f8:	call   0x140003390
   1400055fd:	mov    r15d,0x1
   140005603:	cmp    eax,r15d
   140005606:	jge    0x14000561d
   140005608:	lea    rcx,[rip+0x163e9]        # 0x14001b9f8
   14000560f:	call   0x140004360
   140005614:	mov    ecx,r15d
   140005617:	call   0x140009bcc
   14000561c:	int3   
   14000561d:	xor    r8d,r8d
   140005620:	mov    rdx,r14
   140005623:	mov    rcx,r12
   140005626:	call   0x140002410
   14000562b:	lea    rdx,[rip+0x155c2]        # 0x14001abf4
   140005632:	mov    rcx,rax
   140005635:	mov    rbx,rax
   140005638:	call   0x14000a850
   14000563d:	test   eax,eax
   14000563f:	jne    0x140005658
   140005641:	lea    rcx,[rip+0x16388]        # 0x14001b9d0
   140005648:	call   0x140004360
   14000564d:	mov    ecx,0x4
   140005652:	call   0x140009bcc
   140005657:	int3   
   140005658:	mov    edx,0x2f
   14000565d:	mov    rcx,rbx
   140005660:	mov    BYTE PTR [rsi],bpl
   140005663:	call   0x14000c04c
   140005668:	test   rax,rax
   14000566b:	jne    0x14000569e
   14000566d:	lea    edx,[rax+0x5c]
   140005670:	mov    rcx,rbx
   140005673:	call   0x14000c04c
   140005678:	test   rax,rax
   14000567b:	jne    0x14000569e
   14000567d:	movsxd rdx,DWORD PTR [rsp+0xf8]
   140005685:	lea    r8,[rip+0x16094]        # 0x14001b720
   14000568c:	mov    r9,r13
   14000568f:	mov    rcx,rsi
   140005692:	mov    QWORD PTR [rsp+0x20],rbx
   140005697:	call   0x140004308
   14000569c:	jmp    0x1400056b8
   14000569e:	movsxd rdx,DWORD PTR [rsp+0xf8]
   1400056a6:	lea    r8,[rip+0x16063]        # 0x14001b710
   1400056ad:	mov    r9,rbx
   1400056b0:	mov    rcx,rsi
   1400056b3:	call   0x140004308
   1400056b8:	lea    rdx,[rsp+0x48]
   1400056bd:	mov    rcx,rsi
   1400056c0:	call   0x14000b628
   1400056c5:	test   eax,eax
   1400056c7:	je     0x1400056e6
   1400056c9:	lea    rcx,[rip+0x16290]        # 0x14001b960
   1400056d0:	mov    r8,rsi
   1400056d3:	mov    rdx,rbx
   1400056d6:	call   0x140004360
   1400056db:	mov    ecx,0x4
   1400056e0:	call   0x140009bcc
   1400056e5:	int3   
   1400056e6:	mov    rbx,QWORD PTR [r14]
   1400056e9:	mov    edi,ebp
   1400056eb:	cmp    DWORD PTR [r12],ebp
   1400056ef:	jle    0x14000577b
   1400056f5:	mov    ecx,DWORD PTR [rip+0x1d97d]        # 0x140023078
   1400056fb:	test   ecx,ecx
   1400056fd:	jns    0x140005723
   1400056ff:	mov    rdx,QWORD PTR [rbx]
   140005702:	lea    rcx,[rip+0x16237]        # 0x14001b940
   140005709:	call   0x140004168
   14000570e:	mov    ecx,DWORD PTR [rip+0x1d964]        # 0x140023078
   140005714:	cmp    eax,r15d
   140005717:	cmove  ecx,r15d
   14000571b:	mov    DWORD PTR [rip+0x1d957],ecx        # 0x140023078
   140005721:	test   ecx,ecx
   140005723:	je     0x140005766
   140005725:	mov    rdx,QWORD PTR [rbx]
   140005728:	lea    rcx,[rip+0x161f9]        # 0x14001b928
   14000572f:	call   0x140004168
   140005734:	cmp    eax,r15d
   140005737:	je     0x140005775
   140005739:	mov    rdx,QWORD PTR [rbx]
   14000573c:	lea    rcx,[rip+0x161cd]        # 0x14001b910
   140005743:	call   0x140004168
   140005748:	test   eax,eax
   14000574a:	je     0x140005775
   14000574c:	mov    rdx,QWORD PTR [rbx]
   14000574f:	lea    rcx,[rip+0x161a2]        # 0x14001b8f8
   140005756:	call   0x140004168
   14000575b:	cmp    eax,r15d
   14000575e:	je     0x140005775
   140005760:	mov    ecx,DWORD PTR [rip+0x1d912]        # 0x140023078
   140005766:	add    edi,r15d
   140005769:	add    rbx,0x8
   14000576d:	cmp    edi,DWORD PTR [r12]
   140005771:	jge    0x14000577b
   140005773:	jmp    0x1400056fb
   140005775:	mov    DWORD PTR [rip+0x1d8fd],ebp        # 0x140023078
   14000577b:	mov    rcx,QWORD PTR [rsp+0x78]
   140005780:	xor    rcx,rsp
   140005783:	call   0x14000a820
   140005788:	add    rsp,0x88
   14000578f:	pop    r15
   140005791:	pop    r14
   140005793:	pop    r13
   140005795:	pop    r12
   140005797:	pop    rdi
   140005798:	pop    rsi
   140005799:	pop    rbp
   14000579a:	pop    rbx
   14000579b:	ret    
   14000579c:	rex push rbx
   14000579e:	sub    rsp,0x140
   1400057a5:	mov    rax,QWORD PTR [rip+0x1d914]        # 0x1400230c0
   1400057ac:	xor    rax,rsp
   1400057af:	mov    QWORD PTR [rsp+0x130],rax
   1400057b7:	cmp    DWORD PTR [rip+0x1f02a],0x0        # 0x1400247e8
   1400057be:	jne    0x14000587d
   1400057c4:	lea    rcx,[rsp+0x20]
   1400057c9:	mov    edx,0x104
   1400057ce:	call   0x14000530c
   1400057d3:	test   al,al
   1400057d5:	je     0x140005873
   1400057db:	lea    rcx,[rip+0x16376]        # 0x14001bb58
   1400057e2:	call   0x140009fa0
   1400057e7:	lea    rcx,[rip+0x16362]        # 0x14001bb50
   1400057ee:	mov    rbx,rax
   1400057f1:	call   0x140009fa0
   1400057f6:	lea    rcx,[rsp+0x20]
   1400057fb:	add    rbx,rax
   1400057fe:	call   0x140009fa0
   140005803:	add    rax,rbx
   140005806:	cmp    rax,0x104
   14000580c:	jb     0x14000581e
   14000580e:	lea    rcx,[rip+0x16303]        # 0x14001bb18
   140005815:	call   0x140004360
   14000581a:	xor    al,al
   14000581c:	jmp    0x14000587f
   14000581e:	lea    rdx,[rip+0x162db]        # 0x14001bb00
   140005825:	lea    rcx,[rsp+0x20]
   14000582a:	call   0x14000a6b0
   14000582f:	lea    rdx,[rsp+0x20]
   140005834:	lea    rcx,[rip+0x162b5]        # 0x14001baf0
   14000583b:	call   0x14000407c
   140005840:	lea    rcx,[rsp+0x20]
   140005845:	xor    edx,edx
   140005847:	call   0x14000c39c
   14000584c:	test   eax,eax
   14000584e:	jne    0x140005873
   140005850:	lea    rcx,[rsp+0x20]
   140005855:	call   QWORD PTR [rip+0x1484d]        # 0x14001a0a8
   14000585b:	test   rax,rax
   14000585e:	jne    0x140005873
   140005860:	lea    rdx,[rsp+0x20]
   140005865:	lea    rcx,[rip+0x15d7c]        # 0x14001b5e8
   14000586c:	call   0x140004360
   140005871:	jmp    0x14000581a
   140005873:	mov    DWORD PTR [rip+0x1ef6b],0x1        # 0x1400247e8
   14000587d:	mov    al,0x1
   14000587f:	mov    rcx,QWORD PTR [rsp+0x130]
   140005887:	xor    rcx,rsp
   14000588a:	call   0x14000a820
   14000588f:	add    rsp,0x140
   140005896:	pop    rbx
   140005897:	ret    
   140005898:	mov    QWORD PTR [rsp+0x8],rbx
   14000589d:	mov    QWORD PTR [rsp+0x10],rsi
   1400058a2:	push   rdi
   1400058a3:	sub    rsp,0x20
   1400058a7:	mov    rsi,rdx
   1400058aa:	mov    rbx,rcx
   1400058ad:	mov    rdx,rcx
   1400058b0:	lea    rcx,[rip+0x16311]        # 0x14001bbc8
   1400058b7:	call   0x14000407c
   1400058bc:	call   0x14000579c
   1400058c1:	mov    rcx,rbx
   1400058c4:	call   QWORD PTR [rip+0x147de]        # 0x14001a0a8
   1400058ca:	mov    rdi,rax
   1400058cd:	test   rax,rax
   1400058d0:	jne    0x1400058db
   1400058d2:	lea    rcx,[rip+0x15d0f]        # 0x14001b5e8
   1400058d9:	jmp    0x140005918
   1400058db:	lea    rdx,[rip+0x162ce]        # 0x14001bbb0
   1400058e2:	mov    rcx,rax
   1400058e5:	call   QWORD PTR [rip+0x147ad]        # 0x14001a098
   1400058eb:	lea    rdx,[rip+0x1629e]        # 0x14001bb90
   1400058f2:	mov    rcx,rdi
   1400058f5:	mov    QWORD PTR [rsi],rax
   1400058f8:	call   QWORD PTR [rip+0x1479a]        # 0x14001a098
   1400058fe:	cmp    QWORD PTR [rsi],0x0
   140005902:	mov    QWORD PTR [rsi+0x8],rax
   140005906:	je     0x140005911
   140005908:	test   rax,rax
   14000590b:	je     0x140005911
   14000590d:	mov    al,0x1
   14000590f:	jmp    0x140005922
   140005911:	lea    rcx,[rip+0x16250]        # 0x14001bb68
   140005918:	mov    rdx,rbx
   14000591b:	call   0x140004360
   140005920:	xor    al,al
   140005922:	mov    rbx,QWORD PTR [rsp+0x30]
   140005927:	mov    rsi,QWORD PTR [rsp+0x38]
   14000592c:	add    rsp,0x20
   140005930:	pop    rdi
   140005931:	ret    
   140005932:	int3   
   140005933:	int3   
   140005934:	mov    QWORD PTR [rsp+0x10],rbx
   140005939:	mov    QWORD PTR [rsp+0x18],rsi
   14000593e:	push   rdi
   14000593f:	sub    rsp,0x140
   140005946:	mov    rax,QWORD PTR [rip+0x1d773]        # 0x1400230c0
   14000594d:	xor    rax,rsp
   140005950:	mov    QWORD PTR [rsp+0x130],rax
   140005958:	mov    rsi,rcx
   14000595b:	mov    rcx,QWORD PTR [rip+0x1eea6]        # 0x140024808
   140005962:	or     ebx,0xffffffff
   140005965:	test   rcx,rcx
   140005968:	jne    0x140005a31
   14000596e:	lea    rcx,[rsp+0x20]
   140005973:	mov    edx,0x104
   140005978:	call   0x14000530c
   14000597d:	test   al,al
   14000597f:	je     0x140005a25
   140005985:	lea    rcx,[rsp+0x20]
   14000598a:	call   0x140009fa0
   14000598f:	mov    rdi,rax
   140005992:	call   0x14000579c
   140005997:	lea    rdx,[rip+0x1626a]        # 0x14001bc08
   14000599e:	lea    rcx,[rsp+0x20]
   1400059a3:	call   0x14000a6b0
   1400059a8:	lea    rcx,[rsp+0x20]
   1400059ad:	call   QWORD PTR [rip+0x146f5]        # 0x14001a0a8
   1400059b3:	test   rax,rax
   1400059b6:	je     0x140005a25
   1400059b8:	movsxd rdi,edi
   1400059bb:	lea    rdx,[rip+0x16236]        # 0x14001bbf8
   1400059c2:	lea    rcx,[rsp+0x20]
   1400059c7:	mov    BYTE PTR [rsp+rdi*1+0x20],0x0
   1400059cc:	call   0x14000a6b0
   1400059d1:	lea    rcx,[rsp+0x20]
   1400059d6:	call   QWORD PTR [rip+0x146cc]        # 0x14001a0a8
   1400059dc:	test   rax,rax
   1400059df:	je     0x140005a25
   1400059e1:	lea    rdx,[rip+0x16200]        # 0x14001bbe8
   1400059e8:	lea    rcx,[rsp+0x20]
   1400059ed:	mov    BYTE PTR [rsp+rdi*1+0x20],0x0
   1400059f2:	call   0x14000a6b0
   1400059f7:	lea    rcx,[rsp+0x20]
   1400059fc:	call   QWORD PTR [rip+0x146a6]        # 0x14001a0a8
   140005a02:	mov    QWORD PTR [rip+0x1edff],rax        # 0x140024808
   140005a09:	test   rax,rax
   140005a0c:	je     0x140005a4d
   140005a0e:	lea    rdx,[rip+0x161c3]        # 0x14001bbd8
   140005a15:	mov    rcx,rax
   140005a18:	call   QWORD PTR [rip+0x1467a]        # 0x14001a098
   140005a1e:	mov    QWORD PTR [rip+0x1eddb],rax        # 0x140024800
   140005a25:	mov    rcx,QWORD PTR [rip+0x1eddc]        # 0x140024808
   140005a2c:	test   rcx,rcx
   140005a2f:	je     0x140005a4d
   140005a31:	mov    rdx,rsi
   140005a34:	call   QWORD PTR [rip+0x1465e]        # 0x14001a098
   140005a3a:	test   rax,rax
   140005a3d:	je     0x140005a4d
   140005a3f:	mov    DWORD PTR [rip+0x1ed97],0x1        # 0x1400247e0
   140005a49:	call   rax
   140005a4b:	mov    ebx,eax
   140005a4d:	mov    eax,ebx
   140005a4f:	mov    rcx,QWORD PTR [rsp+0x130]
   140005a57:	xor    rcx,rsp
   140005a5a:	call   0x14000a820
   140005a5f:	lea    r11,[rsp+0x140]
   140005a67:	mov    rbx,QWORD PTR [r11+0x18]
   140005a6b:	mov    rsi,QWORD PTR [r11+0x20]
   140005a6f:	mov    rsp,r11
   140005a72:	pop    rdi
   140005a73:	ret    
   140005a74:	mov    rax,rsp
   140005a77:	mov    QWORD PTR [rax+0x8],rbx
   140005a7b:	mov    QWORD PTR [rax+0x10],rbp
   140005a7f:	mov    QWORD PTR [rax+0x18],rsi
   140005a83:	push   rdi
   140005a84:	sub    rsp,0x40
   140005a88:	and    DWORD PTR [rax+0x20],0x0
   140005a8c:	lea    rax,[rax-0x18]
   140005a90:	mov    rsi,r8
   140005a93:	mov    r9,r8
   140005a96:	mov    rbp,rcx
   140005a99:	mov    r8,rcx
   140005a9c:	mov    QWORD PTR [rsp+0x28],rax
   140005aa1:	xor    ecx,ecx
   140005aa3:	mov    rdi,rdx
   140005aa6:	mov    DWORD PTR [rsp+0x20],0x10000
   140005aae:	call   0x14000c480
   140005ab3:	mov    rbx,rax
   140005ab6:	test   rax,rax
   140005ab9:	jne    0x140005adb
   140005abb:	lea    rax,[rsp+0x30]
   140005ac0:	mov    r9,rsi
   140005ac3:	mov    r8,rbp
   140005ac6:	mov    QWORD PTR [rsp+0x28],rax
   140005acb:	and    DWORD PTR [rsp+0x20],ebx
   140005acf:	mov    edx,edi
   140005ad1:	xor    ecx,ecx
   140005ad3:	call   0x14000c480
   140005ad8:	mov    rbx,rax
   140005adb:	cmp    DWORD PTR [rip+0x1d596],0x0        # 0x140023078
   140005ae2:	je     0x140005b98
   140005ae8:	lea    rcx,[rip+0x16149]        # 0x14001bc38
   140005aef:	call   0x140009d94
   140005af4:	test   rax,rax
   140005af7:	je     0x140005b18
   140005af9:	lea    rdx,[rip+0x152b4]        # 0x14001adb4
   140005b00:	mov    rcx,rax
   140005b03:	call   0x1400196a0
   140005b08:	neg    eax
   140005b0a:	sbb    ecx,ecx
   140005b0c:	and    ecx,DWORD PTR [rip+0x1d566]        # 0x140023078
   140005b12:	mov    DWORD PTR [rip+0x1d560],ecx        # 0x140023078
   140005b18:	lea    rcx,[rip+0x16109]        # 0x14001bc28
   140005b1f:	call   0x140009d94
   140005b24:	mov    rdi,rax
   140005b27:	test   rax,rax
   140005b2a:	je     0x140005b4d
   140005b2c:	lea    rdx,[rip+0x15281]        # 0x14001adb4
   140005b33:	mov    rcx,rax
   140005b36:	call   0x1400196a0
   140005b3b:	neg    eax
   140005b3d:	sbb    ecx,ecx
   140005b3f:	and    ecx,DWORD PTR [rip+0x1d533]        # 0x140023078
   140005b45:	mov    DWORD PTR [rip+0x1d52d],ecx        # 0x140023078
   140005b4b:	jmp    0x140005b53
   140005b4d:	mov    ecx,DWORD PTR [rip+0x1d525]        # 0x140023078
   140005b53:	test   ecx,ecx
   140005b55:	jns    0x140005b8a
   140005b57:	and    DWORD PTR [rip+0x1d51a],0x0        # 0x140023078
   140005b5e:	test   rdi,rdi
   140005b61:	je     0x140005b98
   140005b63:	lea    rdx,[rip+0x15252]        # 0x14001adbc
   140005b6a:	mov    rcx,rdi
   140005b6d:	call   0x1400196a0
   140005b72:	mov    ecx,DWORD PTR [rip+0x1d500]        # 0x140023078
   140005b78:	mov    edx,0x1
   140005b7d:	test   eax,eax
   140005b7f:	cmove  ecx,edx
   140005b82:	mov    DWORD PTR [rip+0x1d4f0],ecx        # 0x140023078
   140005b88:	test   ecx,ecx
   140005b8a:	je     0x140005b98
   140005b8c:	lea    rcx,[rip+0x16085]        # 0x14001bc18
   140005b93:	call   0x140005934
   140005b98:	test   rbx,rbx
   140005b9b:	je     0x140005bc2
   140005b9d:	or     edx,0xffffffff
   140005ba0:	mov    rcx,rbx
   140005ba3:	call   QWORD PTR [rip+0x144df]        # 0x14001a088
   140005ba9:	lea    rdx,[rsp+0x68]
   140005bae:	mov    rcx,rbx
   140005bb1:	call   QWORD PTR [rip+0x144f9]        # 0x14001a0b0
   140005bb7:	mov    rcx,rbx
   140005bba:	call   QWORD PTR [rip+0x144b8]        # 0x14001a078
   140005bc0:	jmp    0x140005bcb
   140005bc2:	mov    rcx,rsi
   140005bc5:	call   rbp
   140005bc7:	mov    DWORD PTR [rsp+0x68],eax
   140005bcb:	cmp    DWORD PTR [rip+0x1ec0e],0x0        # 0x1400247e0
   140005bd2:	je     0x140005be2
   140005bd4:	mov    rax,QWORD PTR [rip+0x1ec25]        # 0x140024800
   140005bdb:	test   rax,rax
   140005bde:	je     0x140005be2
   140005be0:	call   rax
   140005be2:	mov    eax,DWORD PTR [rsp+0x68]
   140005be6:	mov    rbx,QWORD PTR [rsp+0x50]
   140005beb:	mov    rbp,QWORD PTR [rsp+0x58]
   140005bf0:	mov    rsi,QWORD PTR [rsp+0x60]
   140005bf5:	add    rsp,0x40
   140005bf9:	pop    rdi
   140005bfa:	ret    
   140005bfb:	int3   
   140005bfc:	test   rcx,rcx
   140005bff:	je     0x140005c57
   140005c01:	mov    QWORD PTR [rsp+0x8],rbx
   140005c06:	mov    QWORD PTR [rsp+0x10],rsi
   140005c0b:	push   rdi
   140005c0c:	sub    rsp,0x20
   140005c10:	xor    edi,edi
   140005c12:	mov    rbx,rcx
   140005c15:	cmp    QWORD PTR [rcx],rdi
   140005c18:	je     0x140005c40
   140005c1a:	cmp    DWORD PTR [rcx+0x8],edi
   140005c1d:	jle    0x140005c38
   140005c1f:	mov    esi,edi
   140005c21:	mov    rcx,QWORD PTR [rbx]
   140005c24:	mov    rcx,QWORD PTR [rsi+rcx*1]
   140005c28:	call   0x140004074
   140005c2d:	inc    edi
   140005c2f:	add    rsi,0x8
   140005c33:	cmp    edi,DWORD PTR [rbx+0x8]
   140005c36:	jl     0x140005c21
   140005c38:	mov    rcx,QWORD PTR [rbx]
   140005c3b:	call   0x140004074
   140005c40:	mov    rcx,rbx
   140005c43:	call   0x140004074
   140005c48:	mov    rbx,QWORD PTR [rsp+0x30]
   140005c4d:	mov    rsi,QWORD PTR [rsp+0x38]
   140005c52:	add    rsp,0x20
   140005c56:	pop    rdi
   140005c57:	ret    
   140005c58:	mov    rax,rsp
   140005c5b:	mov    QWORD PTR [rax+0x8],rbx
   140005c5f:	mov    QWORD PTR [rax+0x10],rbp
   140005c63:	mov    QWORD PTR [rax+0x18],rsi
   140005c67:	mov    QWORD PTR [rax+0x20],rdi
   140005c6b:	push   r12
   140005c6d:	push   r13
   140005c6f:	push   r14
   140005c71:	sub    rsp,0x20
   140005c75:	xor    edi,edi
   140005c77:	mov    r14b,dl
   140005c7a:	mov    rsi,rcx
   140005c7d:	lea    ebp,[rdi+0x1]
   140005c80:	cmp    DWORD PTR [rcx+0x8],edi
   140005c83:	jle    0x140005ca2
   140005c85:	xor    ebx,ebx
   140005c87:	mov    rcx,QWORD PTR [rsi]
   140005c8a:	mov    rcx,QWORD PTR [rcx+rbx*1]
   140005c8e:	call   0x140009fa0
   140005c93:	inc    edi
   140005c95:	add    rbx,0x8
   140005c99:	lea    ebp,[rbp+rax*1+0x1]
   140005c9d:	cmp    edi,DWORD PTR [rsi+0x8]
   140005ca0:	jl     0x140005c87
   140005ca2:	movsxd rcx,ebp
   140005ca5:	call   0x140003ff0
   140005caa:	xor    r12d,r12d
   140005cad:	xor    r13d,r13d
   140005cb0:	mov    rbp,rax
   140005cb3:	mov    rdi,rax
   140005cb6:	cmp    DWORD PTR [rsi+0x8],r12d
   140005cba:	jle    0x140005cf7
   140005cbc:	mov    rcx,QWORD PTR [rsi]
   140005cbf:	mov    rcx,QWORD PTR [rcx+r12*8]
   140005cc3:	call   0x140009fa0
   140005cc8:	test   r12,r12
   140005ccb:	jle    0x140005cd3
   140005ccd:	mov    BYTE PTR [rdi],r14b
   140005cd0:	inc    rdi
   140005cd3:	mov    rdx,QWORD PTR [rsi]
   140005cd6:	movsxd rbx,eax
   140005cd9:	mov    rcx,rdi
   140005cdc:	mov    rdx,QWORD PTR [rdx+r12*8]
   140005ce0:	mov    r8,rbx
   140005ce3:	call   0x14000a140
   140005ce8:	inc    r13d
   140005ceb:	add    rdi,rbx
   140005cee:	inc    r12
   140005cf1:	cmp    r13d,DWORD PTR [rsi+0x8]
   140005cf5:	jl     0x140005cbc
   140005cf7:	mov    rbx,QWORD PTR [rsp+0x40]
   140005cfc:	mov    rsi,QWORD PTR [rsp+0x50]
   140005d01:	mov    BYTE PTR [rdi],0x0
   140005d04:	mov    rdi,QWORD PTR [rsp+0x58]
   140005d09:	mov    rax,rbp
   140005d0c:	mov    rbp,QWORD PTR [rsp+0x48]
   140005d11:	add    rsp,0x20
   140005d15:	pop    r14
   140005d17:	pop    r13
   140005d19:	pop    r12
   140005d1b:	ret    
   140005d1c:	mov    rax,rsp
   140005d1f:	mov    QWORD PTR [rax+0x8],rbx
   140005d23:	mov    QWORD PTR [rax+0x10],rbp
   140005d27:	mov    QWORD PTR [rax+0x18],rsi
   140005d2b:	mov    QWORD PTR [rax+0x20],rdi
   140005d2f:	push   r12
   140005d31:	push   r13
   140005d33:	push   r14
   140005d35:	sub    rsp,0x20
   140005d39:	mov    r13b,dl
   140005d3c:	mov    rbp,rcx
   140005d3f:	call   0x140009fa0
   140005d44:	movsxd r12,eax
   140005d47:	mov    ebx,0x1
   140005d4c:	mov    rcx,rbp
   140005d4f:	add    r12,rbp
   140005d52:	cmp    rbp,r12
   140005d55:	jae    0x140005d69
   140005d57:	xor    eax,eax
   140005d59:	cmp    BYTE PTR [rcx],r13b
   140005d5c:	sete   al
   140005d5f:	inc    rcx
   140005d62:	add    ebx,eax
   140005d64:	cmp    rcx,r12
   140005d67:	jb     0x140005d57
   140005d69:	mov    ecx,0x10
   140005d6e:	call   0x140003ff0
   140005d73:	movsxd rcx,ebx
   140005d76:	shl    rcx,0x3
   140005d7a:	mov    DWORD PTR [rax+0xc],ebx
   140005d7d:	mov    rdi,rax
   140005d80:	call   0x140003ff0
   140005d85:	and    DWORD PTR [rdi+0x8],0x0
   140005d89:	mov    QWORD PTR [rdi],rax
   140005d8c:	mov    rsi,rbp
   140005d8f:	cmp    rbp,r12
   140005d92:	ja     0x140005d8c
   140005d94:	cmp    BYTE PTR [rsi],r13b
   140005d97:	je     0x140005d9e
   140005d99:	cmp    BYTE PTR [rsi],0x0
   140005d9c:	jne    0x140005e04
   140005d9e:	mov    ebx,esi
   140005da0:	sub    ebx,ebp
   140005da2:	lea    eax,[rbx+0x1]
   140005da5:	movsxd rcx,eax
   140005da8:	call   0x140003ff0
   140005dad:	movsxd rbx,ebx
   140005db0:	mov    rdx,rbp
   140005db3:	mov    rcx,rax
   140005db6:	mov    r8,rbx
   140005db9:	mov    r14,rax
   140005dbc:	call   0x14000a140
   140005dc1:	mov    BYTE PTR [rbx+r14*1],0x0
   140005dc6:	mov    edx,DWORD PTR [rdi+0x8]
   140005dc9:	mov    ecx,DWORD PTR [rdi+0xc]
   140005dcc:	inc    edx
   140005dce:	cmp    ecx,edx
   140005dd0:	jge    0x140005ded
   140005dd2:	add    ecx,ecx
   140005dd4:	mov    DWORD PTR [rdi+0xc],ecx
   140005dd7:	cmp    ecx,edx
   140005dd9:	jl     0x140005dd2
   140005ddb:	movsxd rdx,ecx
   140005dde:	mov    rcx,QWORD PTR [rdi]
   140005de1:	shl    rdx,0x3
   140005de5:	call   0x14000401c
   140005dea:	mov    QWORD PTR [rdi],rax
   140005ded:	movsxd rcx,DWORD PTR [rdi+0x8]
   140005df1:	mov    rax,QWORD PTR [rdi]
   140005df4:	mov    QWORD PTR [rax+rcx*8],r14
   140005df8:	inc    DWORD PTR [rdi+0x8]
   140005dfb:	cmp    BYTE PTR [rsi],0x0
   140005dfe:	je     0x140005e11
   140005e00:	lea    rbp,[rsi+0x1]
   140005e04:	inc    rsi
   140005e07:	cmp    rsi,r12
   140005e0a:	jbe    0x140005d94
   140005e0c:	jmp    0x140005d8c
   140005e11:	mov    rbx,QWORD PTR [rsp+0x40]
   140005e16:	mov    rbp,QWORD PTR [rsp+0x48]
   140005e1b:	mov    rsi,QWORD PTR [rsp+0x50]
   140005e20:	mov    rax,rdi
   140005e23:	mov    rdi,QWORD PTR [rsp+0x58]
   140005e28:	add    rsp,0x20
   140005e2c:	pop    r14
   140005e2e:	pop    r13
   140005e30:	pop    r12
   140005e32:	ret    
   140005e33:	int3   
   140005e34:	mov    QWORD PTR [rsp+0x8],rbx
   140005e39:	mov    QWORD PTR [rsp+0x10],rbp
   140005e3e:	mov    QWORD PTR [rsp+0x18],rsi
   140005e43:	push   rdi
   140005e44:	push   r12
   140005e46:	push   r13
   140005e48:	push   r14
   140005e4a:	push   r15
   140005e4c:	sub    rsp,0x20
   140005e50:	mov    r14,rcx
   140005e53:	mov    ebx,0x10
   140005e58:	mov    ecx,ebx
   140005e5a:	call   0x140003ff0
   140005e5f:	lea    ecx,[rbx+0x70]
   140005e62:	mov    DWORD PTR [rax+0xc],ebx
   140005e65:	mov    rsi,rax
   140005e68:	call   0x140003ff0
   140005e6d:	and    DWORD PTR [rsi+0x8],0x0
   140005e71:	mov    ecx,ebx
   140005e73:	mov    QWORD PTR [rsi],rax
   140005e76:	call   0x140003ff0
   140005e7b:	lea    rdx,[rip+0x1e98e]        # 0x140024810
   140005e82:	mov    rcx,r14
   140005e85:	mov    r12,rax
   140005e88:	call   QWORD PTR [rip+0x1422a]        # 0x14001a0b8
   140005e8e:	cmp    rax,0xffffffffffffffff
   140005e92:	je     0x140005fdf
   140005e98:	lea    r15,[rip+0x1e99d]        # 0x14002483c
   140005e9f:	mov    QWORD PTR [r12],rax
   140005ea3:	mov    QWORD PTR [r12+0x8],r15
   140005ea8:	mov    rbp,QWORD PTR [r12+0x8]
   140005ead:	test   rbp,rbp
   140005eb0:	je     0x140005eba
   140005eb2:	and    QWORD PTR [r12+0x8],0x0
   140005eb8:	jmp    0x140005ed3
   140005eba:	mov    rcx,QWORD PTR [r12]
   140005ebe:	lea    rdx,[rip+0x1e94b]        # 0x140024810
   140005ec5:	call   QWORD PTR [rip+0x141f5]        # 0x14001a0c0
   140005ecb:	neg    eax
   140005ecd:	sbb    rbp,rbp
   140005ed0:	and    rbp,r15
   140005ed3:	test   rbp,rbp
   140005ed6:	je     0x140005fbe
   140005edc:	mov    rcx,rbp
   140005edf:	call   0x140009fa0
   140005ee4:	cmp    eax,0x4
   140005ee7:	jl     0x140005ea8
   140005ee9:	movsxd rcx,eax
   140005eec:	cmp    BYTE PTR [rcx+rbp*1-0x4],0x2e
   140005ef1:	jne    0x140005ea8
   140005ef3:	lea    rbx,[rcx+rbp*1-0x3]
   140005ef8:	lea    rdx,[rip+0x15d45]        # 0x14001bc44
   140005eff:	mov    rcx,rbx
   140005f02:	call   0x14000a850
   140005f07:	test   eax,eax
   140005f09:	je     0x140005f1e
   140005f0b:	lea    rdx,[rip+0x15d2e]        # 0x14001bc40
   140005f12:	mov    rcx,rbx
   140005f15:	call   0x14000a850
   140005f1a:	test   eax,eax
   140005f1c:	jne    0x140005ea8
   140005f1e:	mov    edx,0x3b
   140005f23:	mov    rcx,rbp
   140005f26:	call   0x14000c04c
   140005f2b:	test   rax,rax
   140005f2e:	jne    0x140005ea8
   140005f34:	mov    rcx,r14
   140005f37:	call   0x140009fa0
   140005f3c:	mov    rcx,rbp
   140005f3f:	mov    rdi,rax
   140005f42:	call   0x140009fa0
   140005f47:	lea    ecx,[rax+rdi*1]
   140005f4a:	mov    rbx,rax
   140005f4d:	movsxd rcx,ecx
   140005f50:	call   0x140003ff0
   140005f55:	lea    ecx,[rdi-0x1]
   140005f58:	mov    rdx,r14
   140005f5b:	movsxd r8,ecx
   140005f5e:	mov    rcx,rax
   140005f61:	mov    r13,rax
   140005f64:	call   0x14000a140
   140005f69:	lea    r11d,[rbx+0x1]
   140005f6d:	movsxd rcx,edi
   140005f70:	lea    rcx,[rcx+r13*1-0x1]
   140005f75:	movsxd r8,r11d
   140005f78:	mov    rdx,rbp
   140005f7b:	call   0x14000a140
   140005f80:	mov    r11d,DWORD PTR [rsi+0x8]
   140005f84:	mov    eax,DWORD PTR [rsi+0xc]
   140005f87:	inc    r11d
   140005f8a:	cmp    eax,r11d
   140005f8d:	jge    0x140005fab
   140005f8f:	add    eax,eax
   140005f91:	mov    DWORD PTR [rsi+0xc],eax
   140005f94:	cmp    eax,r11d
   140005f97:	jl     0x140005f8f
   140005f99:	mov    rcx,QWORD PTR [rsi]
   140005f9c:	movsxd rdx,eax
   140005f9f:	shl    rdx,0x3
   140005fa3:	call   0x14000401c
   140005fa8:	mov    QWORD PTR [rsi],rax
   140005fab:	movsxd rcx,DWORD PTR [rsi+0x8]
   140005faf:	mov    rax,QWORD PTR [rsi]
   140005fb2:	mov    QWORD PTR [rax+rcx*8],r13
   140005fb6:	inc    DWORD PTR [rsi+0x8]
   140005fb9:	jmp    0x140005ea8
   140005fbe:	mov    rcx,QWORD PTR [r12]
   140005fc2:	call   QWORD PTR [rip+0x14100]        # 0x14001a0c8
   140005fc8:	mov    rcx,QWORD PTR [r12+0x8]
   140005fcd:	call   0x140004074
   140005fd2:	mov    rcx,r12
   140005fd5:	call   0x140004074
   140005fda:	mov    rax,rsi
   140005fdd:	jmp    0x140005fe1
   140005fdf:	xor    eax,eax
   140005fe1:	mov    rbx,QWORD PTR [rsp+0x50]
   140005fe6:	mov    rbp,QWORD PTR [rsp+0x58]
   140005feb:	mov    rsi,QWORD PTR [rsp+0x60]
   140005ff0:	add    rsp,0x20
   140005ff4:	pop    r15
   140005ff6:	pop    r14
   140005ff8:	pop    r13
   140005ffa:	pop    r12
   140005ffc:	pop    rdi
   140005ffd:	ret    
   140005ffe:	int3   
   140005fff:	int3   
   140006000:	mov    QWORD PTR [rsp+0x8],rbx
   140006005:	mov    QWORD PTR [rsp+0x10],rbp
   14000600a:	mov    QWORD PTR [rsp+0x18],rsi
   14000600f:	push   rdi
   140006010:	sub    rsp,0x20
   140006014:	xor    esi,esi
   140006016:	mov    rbx,rcx
   140006019:	cmp    DWORD PTR [rcx+0x8],esi
   14000601c:	jle    0x140006149
   140006022:	mov    rax,QWORD PTR [rbx]
   140006025:	movsxd rbp,esi
   140006028:	mov    rdi,QWORD PTR [rax+rbp*8]
   14000602c:	mov    rcx,rdi
   14000602f:	call   0x140009fa0
   140006034:	test   eax,eax
   140006036:	jle    0x14000613e
   14000603c:	movsxd rcx,eax
   14000603f:	cmp    BYTE PTR [rcx+rdi*1-0x1],0x2a
   140006044:	jne    0x14000613e
   14000604a:	cmp    eax,0x1
   14000604d:	je     0x14000605f
   14000604f:	mov    al,BYTE PTR [rcx+rdi*1-0x2]
   140006053:	cmp    al,0x5c
   140006055:	je     0x14000605f
   140006057:	cmp    al,0x2f
   140006059:	jne    0x14000613e
   14000605f:	xor    edx,edx
   140006061:	mov    rcx,rdi
   140006064:	call   0x14000c39c
   140006069:	test   eax,eax
   14000606b:	je     0x14000613e
   140006071:	mov    rcx,QWORD PTR [rbx]
   140006074:	mov    rcx,QWORD PTR [rcx+rbp*8]
   140006078:	call   0x140005e34
   14000607d:	mov    rdi,rax
   140006080:	test   rax,rax
   140006083:	je     0x140006136
   140006089:	cmp    DWORD PTR [rax+0x8],0x0
   14000608d:	jle    0x140006136
   140006093:	mov    rcx,QWORD PTR [rbx]
   140006096:	mov    rcx,QWORD PTR [rcx+rbp*8]
   14000609a:	call   0x140004074
   14000609f:	mov    r11d,DWORD PTR [rdi+0x8]
   1400060a3:	mov    eax,DWORD PTR [rbx+0xc]
   1400060a6:	add    r11d,DWORD PTR [rbx+0x8]
   1400060aa:	cmp    eax,r11d
   1400060ad:	jge    0x1400060cb
   1400060af:	add    eax,eax
   1400060b1:	mov    DWORD PTR [rbx+0xc],eax
   1400060b4:	cmp    eax,r11d
   1400060b7:	jl     0x1400060af
   1400060b9:	mov    rcx,QWORD PTR [rbx]
   1400060bc:	movsxd rdx,eax
   1400060bf:	shl    rdx,0x3
   1400060c3:	call   0x14000401c
   1400060c8:	mov    QWORD PTR [rbx],rax
   1400060cb:	mov    eax,DWORD PTR [rbx+0x8]
   1400060ce:	lea    ecx,[rsi+0x1]
   1400060d1:	dec    eax
   1400060d3:	movsxd r8,eax
   1400060d6:	cmp    eax,ecx
   1400060d8:	jl     0x1400060fb
   1400060da:	sub    eax,ecx
   1400060dc:	lea    r9d,[rax+0x1]
   1400060e0:	mov    rdx,QWORD PTR [rbx]
   1400060e3:	movsxd rcx,DWORD PTR [rdi+0x8]
   1400060e7:	mov    rax,QWORD PTR [rdx+r8*8]
   1400060eb:	add    rcx,r8
   1400060ee:	dec    r8
   1400060f1:	dec    r9
   1400060f4:	mov    QWORD PTR [rdx+rcx*8-0x8],rax
   1400060f9:	jne    0x1400060e0
   1400060fb:	xor    r9d,r9d
   1400060fe:	cmp    DWORD PTR [rdi+0x8],r9d
   140006102:	jle    0x140006126
   140006104:	xor    r8d,r8d
   140006107:	mov    rax,QWORD PTR [rdi]
   14000610a:	mov    rcx,QWORD PTR [rbx]
   14000610d:	lea    rdx,[r8+rbp*8]
   140006111:	mov    rax,QWORD PTR [r8+rax*1]
   140006115:	inc    r9d
   140006118:	add    r8,0x8
   14000611c:	mov    QWORD PTR [rdx+rcx*1],rax
   140006120:	cmp    r9d,DWORD PTR [rdi+0x8]
   140006124:	jl     0x140006107
   140006126:	mov    eax,DWORD PTR [rdi+0x8]
   140006129:	lea    esi,[rsi+rax*1-0x1]
   14000612d:	dec    eax
   14000612f:	add    DWORD PTR [rbx+0x8],eax
   140006132:	and    DWORD PTR [rdi+0x8],0x0
   140006136:	mov    rcx,rdi
   140006139:	call   0x140005bfc
   14000613e:	inc    esi
   140006140:	cmp    esi,DWORD PTR [rbx+0x8]
   140006143:	jl     0x140006022
   140006149:	mov    rbx,QWORD PTR [rsp+0x30]
   14000614e:	mov    rbp,QWORD PTR [rsp+0x38]
   140006153:	mov    rsi,QWORD PTR [rsp+0x40]
   140006158:	add    rsp,0x20
   14000615c:	pop    rdi
   14000615d:	ret    
   14000615e:	int3   
   14000615f:	int3   
   140006160:	mov    QWORD PTR [rsp+0x8],rbx
   140006165:	mov    QWORD PTR [rsp+0x10],rsi
   14000616a:	push   rdi
   14000616b:	sub    rsp,0x20
   14000616f:	mov    edx,0x2a
   140006174:	mov    rdi,rcx
   140006177:	call   0x14000c04c
   14000617c:	test   rax,rax
   14000617f:	jne    0x140006186
   140006181:	mov    rax,rdi
   140006184:	jmp    0x1400061d6
   140006186:	mov    dl,0x3b
   140006188:	mov    rcx,rdi
   14000618b:	call   0x140005d1c
   140006190:	mov    rcx,rax
   140006193:	mov    rbx,rax
   140006196:	call   0x140006000
   14000619b:	mov    dl,0x3b
   14000619d:	mov    rcx,rbx
   1400061a0:	call   0x140005c58
   1400061a5:	mov    rcx,rbx
   1400061a8:	mov    rsi,rax
   1400061ab:	call   0x140005bfc
   1400061b0:	lea    rcx,[rip+0x142c1]        # 0x14001a478
   1400061b7:	call   0x140009d94
   1400061bc:	test   rax,rax
   1400061bf:	je     0x1400061d3
   1400061c1:	lea    rcx,[rip+0x15a80]        # 0x14001bc48
   1400061c8:	mov    r8,rsi
   1400061cb:	mov    rdx,rdi
   1400061ce:	call   0x140009c2c
   1400061d3:	mov    rax,rsi
   1400061d6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400061db:	mov    rsi,QWORD PTR [rsp+0x38]
   1400061e0:	add    rsp,0x20
   1400061e4:	pop    rdi
   1400061e5:	ret    
   1400061e6:	int3   
   1400061e7:	int3   
   1400061e8:	mov    QWORD PTR [rsp+0x8],rbx
   1400061ed:	push   rdi
   1400061ee:	sub    rsp,0x20
   1400061f2:	mov    rax,QWORD PTR [rip+0x1e757]        # 0x140024950
   1400061f9:	mov    ebx,edx
   1400061fb:	mov    rdi,rcx
   1400061fe:	test   rax,rax
   140006201:	jne    0x14000621b
   140006203:	lea    rcx,[rip+0x15a76]        # 0x14001bc80
   14000620a:	call   0x1400053f4
   14000620f:	mov    QWORD PTR [rip+0x1e73a],rax        # 0x140024950
   140006216:	test   rax,rax
   140006219:	je     0x140006222
   14000621b:	mov    edx,ebx
   14000621d:	mov    rcx,rdi
   140006220:	call   rax
   140006222:	mov    rbx,QWORD PTR [rsp+0x30]
   140006227:	add    rsp,0x20
   14000622b:	pop    rdi
   14000622c:	ret    
   14000622d:	int3   
   14000622e:	int3   
   14000622f:	int3   
   140006230:	rex push rbx
   140006232:	sub    rsp,0x20
   140006236:	mov    rax,QWORD PTR [rip+0x1e71b]        # 0x140024958
   14000623d:	mov    rbx,rcx
   140006240:	test   rax,rax
   140006243:	jne    0x140006263
   140006245:	lea    rcx,[rip+0x15a4c]        # 0x14001bc98
   14000624c:	call   0x1400053f4
   140006251:	mov    QWORD PTR [rip+0x1e700],rax        # 0x140024958
   140006258:	test   rax,rax
   14000625b:	jne    0x140006263
   14000625d:	add    rsp,0x20
   140006261:	pop    rbx
   140006262:	ret    
   140006263:	mov    rcx,rbx
   140006266:	add    rsp,0x20
   14000626a:	pop    rbx
   14000626b:	rex.W jmp rax
   14000626e:	int3   
   14000626f:	int3   
   140006270:	sub    rsp,0x28
   140006274:	mov    rax,QWORD PTR [rip+0x1e6e5]        # 0x140024960
   14000627b:	test   rax,rax
   14000627e:	jne    0x140006298
   140006280:	lea    rcx,[rip+0x15a21]        # 0x14001bca8
   140006287:	call   0x1400053f4
   14000628c:	mov    QWORD PTR [rip+0x1e6cd],rax        # 0x140024960
   140006293:	test   rax,rax
   140006296:	je     0x14000629a
   140006298:	call   rax
   14000629a:	add    rsp,0x28
   14000629e:	ret    
   14000629f:	int3   
   1400062a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400062a5:	push   rdi
   1400062a6:	sub    rsp,0x20
   1400062aa:	mov    rax,QWORD PTR [rip+0x1e6bf]        # 0x140024970
   1400062b1:	mov    rbx,rdx
   1400062b4:	mov    rdi,rcx
   1400062b7:	test   rax,rax
   1400062ba:	jne    0x1400062d4
   1400062bc:	lea    rcx,[rip+0x159f5]        # 0x14001bcb8
   1400062c3:	call   0x1400053f4
   1400062c8:	mov    QWORD PTR [rip+0x1e6a1],rax        # 0x140024970
   1400062cf:	test   rax,rax
   1400062d2:	je     0x1400062dc
   1400062d4:	mov    rdx,rbx
   1400062d7:	mov    rcx,rdi
   1400062da:	call   rax
   1400062dc:	mov    rbx,QWORD PTR [rsp+0x30]
   1400062e1:	add    rsp,0x20
   1400062e5:	pop    rdi
   1400062e6:	ret    
   1400062e7:	int3   
   1400062e8:	mov    rax,rsp
   1400062eb:	mov    QWORD PTR [rax+0x8],rbx
   1400062ef:	mov    QWORD PTR [rax+0x10],rbp
   1400062f3:	mov    QWORD PTR [rax+0x18],rsi
   1400062f7:	mov    QWORD PTR [rax+0x20],rdi
   1400062fb:	push   r12
   1400062fd:	sub    rsp,0x80
   140006304:	cmp    QWORD PTR [rdx+0x8],0xffffffffffffffff
   140006309:	mov    rbp,r8
   14000630c:	mov    rdi,rdx
   14000630f:	mov    esi,ecx
   140006311:	je     0x14000635d
   140006313:	cmp    QWORD PTR [rdx],0xffffffffffffffff
   140006317:	je     0x14000635d
   140006319:	mov    edx,DWORD PTR [rdx+0x10]
   14000631c:	xor    r8d,r8d
   14000631f:	call   0x140017664
   140006324:	test   eax,eax
   140006326:	js     0x14000635d
   140006328:	mov    rcx,QWORD PTR [rdi+0x8]
   14000632c:	inc    rcx
   14000632f:	call   0x14000b2d4
   140006334:	mov    rbx,rax
   140006337:	test   rax,rax
   14000633a:	je     0x14000635d
   14000633c:	mov    r12,QWORD PTR [rdi+0x8]
   140006340:	mov    rdx,rax
   140006343:	mov    ecx,esi
   140006345:	mov    r8d,r12d
   140006348:	call   0x140016994
   14000634d:	movsxd rcx,eax
   140006350:	cmp    rcx,r12
   140006353:	je     0x14000637d
   140006355:	mov    rcx,rbx
   140006358:	call   0x14000b460
   14000635d:	xor    eax,eax
   14000635f:	lea    r11,[rsp+0x80]
   140006367:	mov    rbx,QWORD PTR [r11+0x10]
   14000636b:	mov    rbp,QWORD PTR [r11+0x18]
   14000636f:	mov    rsi,QWORD PTR [r11+0x20]
   140006373:	mov    rdi,QWORD PTR [r11+0x28]
   140006377:	mov    rsp,r11
   14000637a:	pop    r12
   14000637c:	ret    
   14000637d:	cmp    DWORD PTR [rdi+0x14],0x0
   140006381:	jne    0x140006398
   140006383:	mov    BYTE PTR [r12+rbx*1],0x0
   140006388:	test   rbp,rbp
   14000638b:	je     0x140006393
   14000638d:	mov    eax,DWORD PTR [rdi+0x8]
   140006390:	mov    DWORD PTR [rbp+0x0],eax
   140006393:	mov    rax,rbx
   140006396:	jmp    0x14000635f
   140006398:	cmp    DWORD PTR [rdi+0x14],0x8
   14000639c:	jne    0x14000635d
   14000639e:	mov    eax,DWORD PTR [rdi+0x8]
   1400063a1:	and    QWORD PTR [rsp+0x50],0x0
   1400063a7:	and    QWORD PTR [rsp+0x58],0x0
   1400063ad:	and    QWORD PTR [rsp+0x60],0x0
   1400063b3:	mov    r9d,0x58
   1400063b9:	lea    r8,[rip+0x15928]        # 0x14001bce8
   1400063c0:	lea    rcx,[rsp+0x20]
   1400063c5:	lea    edx,[r9-0x67]
   1400063c9:	mov    QWORD PTR [rsp+0x20],rbx
   1400063ce:	mov    DWORD PTR [rsp+0x28],eax
   1400063d2:	call   0x1400071e8
   1400063d7:	test   eax,eax
   1400063d9:	js     0x140006355
   1400063df:	mov    rcx,QWORD PTR [rdi]
   1400063e2:	inc    rcx
   1400063e5:	call   0x14000b2d4
   1400063ea:	mov    rsi,rax
   1400063ed:	test   rax,rax
   1400063f0:	je     0x140006355
   1400063f6:	mov    QWORD PTR [rsp+0x30],rax
   1400063fb:	mov    eax,DWORD PTR [rdi]
   1400063fd:	lea    rcx,[rsp+0x20]
   140006402:	mov    edx,0x1
   140006407:	mov    DWORD PTR [rsp+0x38],eax
   14000640b:	call   0x1400073d0
   140006410:	mov    rcx,rbx
   140006413:	test   eax,eax
   140006415:	jns    0x140006424
   140006417:	call   0x14000b460
   14000641c:	mov    rcx,rsi
   14000641f:	jmp    0x140006358
   140006424:	mov    rax,QWORD PTR [rdi]
   140006427:	mov    BYTE PTR [rsi+rax*1],0x0
   14000642b:	call   0x14000b460
   140006430:	lea    rcx,[rsp+0x20]
   140006435:	call   0x140008950
   14000643a:	test   eax,eax
   14000643c:	js     0x14000641c
   14000643e:	test   rbp,rbp
   140006441:	je     0x140006448
   140006443:	mov    eax,DWORD PTR [rdi]
   140006445:	mov    DWORD PTR [rbp+0x0],eax
   140006448:	mov    rax,rsi
   14000644b:	jmp    0x14000635f
   140006450:	mov    rax,rsp
   140006453:	mov    QWORD PTR [rax+0x8],rbx
   140006457:	mov    QWORD PTR [rax+0x10],rbp
   14000645b:	mov    QWORD PTR [rax+0x18],rsi
   14000645f:	mov    QWORD PTR [rax+0x20],rdi
   140006463:	push   r12
   140006465:	sub    rsp,0x20
   140006469:	mov    rbp,rdx
   14000646c:	mov    edx,0xffffffea
   140006471:	mov    ebx,ecx
   140006473:	lea    r8d,[rdx+0x18]
   140006477:	call   0x140017664
   14000647c:	mov    edi,eax
   14000647e:	test   eax,eax
   140006480:	js     0x1400065bb
   140006486:	mov    r8d,0x16
   14000648c:	mov    rdx,rbp
   14000648f:	mov    ecx,ebx
   140006491:	call   0x140016994
   140006496:	test   eax,eax
   140006498:	js     0x1400065bb
   14000649e:	movzx  eax,BYTE PTR [rbp+0x2]
   1400064a2:	movzx  ecx,BYTE PTR [rbp+0x3]
   1400064a6:	shl    ecx,0x8
   1400064a9:	or     ecx,eax
   1400064ab:	movzx  eax,BYTE PTR [rbp+0x1]
   1400064af:	shl    ecx,0x8
   1400064b2:	or     ecx,eax
   1400064b4:	movzx  eax,BYTE PTR [rbp+0x0]
   1400064b8:	shl    ecx,0x8
   1400064bb:	or     ecx,eax
   1400064bd:	cmp    ecx,0x6054b50
   1400064c3:	jne    0x1400064cc
   1400064c5:	mov    eax,edi
   1400064c7:	jmp    0x1400065be
   1400064cc:	xor    edx,edx
   1400064ce:	mov    ecx,ebx
   1400064d0:	lea    r8d,[rdx+0x2]
   1400064d4:	call   0x140017664
   1400064d9:	mov    r12d,eax
   1400064dc:	test   eax,eax
   1400064de:	js     0x1400065bb
   1400064e4:	mov    edi,0x10015
   1400064e9:	mov    r8d,0x2
   1400064ef:	mov    ecx,ebx
   1400064f1:	cmp    eax,edi
   1400064f3:	mov    esi,edi
   1400064f5:	cmovl  esi,eax
   1400064f8:	mov    edx,esi
   1400064fa:	neg    edx
   1400064fc:	call   0x140017664
   140006501:	test   eax,eax
   140006503:	js     0x1400065bb
   140006509:	mov    ecx,edi
   14000650b:	call   0x14000b2d4
   140006510:	mov    rdi,rax
   140006513:	test   rax,rax
   140006516:	je     0x1400065bb
   14000651c:	mov    r8d,esi
   14000651f:	mov    rdx,rax
   140006522:	mov    ecx,ebx
   140006524:	call   0x140016994
   140006529:	test   eax,eax
   14000652b:	js     0x1400065b3
   140006531:	movsxd rsi,eax
   140006534:	add    eax,0xffffffea
   140006537:	movsxd rbx,eax
   14000653a:	add    rsi,rdi
   14000653d:	add    rbx,rdi
   140006540:	cmp    rbx,rdi
   140006543:	jb     0x1400065b3
   140006545:	cmp    BYTE PTR [rbx],0x50
   140006548:	jne    0x140006589
   14000654a:	movzx  eax,BYTE PTR [rbx+0x2]
   14000654e:	movzx  ecx,BYTE PTR [rbx+0x3]
   140006552:	shl    ecx,0x8
   140006555:	or     ecx,eax
   140006557:	movzx  eax,BYTE PTR [rbx+0x1]
   14000655b:	shl    ecx,0x8
   14000655e:	or     ecx,eax
   140006560:	shl    ecx,0x8
   140006563:	or     ecx,0x50
   140006566:	cmp    ecx,0x6054b50
   14000656c:	jne    0x140006589
   14000656e:	movzx  eax,BYTE PTR [rbx+0x15]
   140006572:	shl    eax,0x8
   140006575:	movsxd rcx,eax
   140006578:	movzx  eax,BYTE PTR [rbx+0x14]
   14000657c:	or     rcx,rax
   14000657f:	lea    rax,[rcx+rbx*1+0x16]
   140006584:	cmp    rax,rsi
   140006587:	je     0x14000658e
   140006589:	dec    rbx
   14000658c:	jmp    0x140006540
   14000658e:	mov    r8d,0x16
   140006594:	mov    rdx,rbx
   140006597:	mov    rcx,rbp
   14000659a:	call   0x14000a140
   14000659f:	mov    rcx,rdi
   1400065a2:	call   0x14000b460
   1400065a7:	mov    r11d,r12d
   1400065aa:	sub    r11,rsi
   1400065ad:	lea    rax,[rbx+r11*1]
   1400065b1:	jmp    0x1400065be
   1400065b3:	mov    rcx,rdi
   1400065b6:	call   0x14000b460
   1400065bb:	or     eax,0xffffffff
   1400065be:	mov    rbx,QWORD PTR [rsp+0x30]
   1400065c3:	mov    rbp,QWORD PTR [rsp+0x38]
   1400065c8:	mov    rsi,QWORD PTR [rsp+0x40]
   1400065cd:	mov    rdi,QWORD PTR [rsp+0x48]
   1400065d2:	add    rsp,0x20
   1400065d6:	pop    r12
   1400065d8:	ret    
   1400065d9:	int3   
   1400065da:	int3   
   1400065db:	int3   
   1400065dc:	mov    QWORD PTR [rsp+0x20],rbx
   1400065e1:	push   rbp
   1400065e2:	push   rsi
   1400065e3:	push   rdi
   1400065e4:	push   r12
   1400065e6:	push   r13
   1400065e8:	push   r14
   1400065ea:	push   r15
   1400065ec:	sub    rsp,0x50
   1400065f0:	mov    rax,QWORD PTR [rip+0x1cac9]        # 0x1400230c0
   1400065f7:	xor    rax,rsp
   1400065fa:	mov    QWORD PTR [rsp+0x48],rax
   1400065ff:	mov    r13d,ecx
   140006602:	mov    ecx,0x30032
   140006607:	mov    r15,r8
   14000660a:	mov    QWORD PTR [rsp+0x20],rdx
   14000660f:	call   0x14000b2d4
   140006614:	mov    rdi,rax
   140006617:	test   rax,rax
   14000661a:	jne    0x140006624
   14000661c:	or     eax,0xffffffff
   14000661f:	jmp    0x140006930
   140006624:	mov    rdx,rax
   140006627:	mov    ecx,r13d
   14000662a:	mov    rsi,rax
   14000662d:	call   0x140006450
   140006632:	or     ebp,0xffffffff
   140006635:	mov    r14d,eax
   140006638:	cmp    eax,ebp
   14000663a:	je     0x140006926
   140006640:	movzx  eax,BYTE PTR [rdi+0x12]
   140006644:	movzx  edx,BYTE PTR [rdi+0x13]
   140006648:	movzx  ecx,BYTE PTR [rdi+0xf]
   14000664c:	shl    ecx,0x8
   14000664f:	shl    edx,0x8
   140006652:	xor    r8d,r8d
   140006655:	or     edx,eax
   140006657:	movzx  eax,BYTE PTR [rdi+0x11]
   14000665b:	shl    edx,0x8
   14000665e:	or     edx,eax
   140006660:	movzx  eax,BYTE PTR [rdi+0x10]
   140006664:	shl    edx,0x8
   140006667:	or     edx,eax
   140006669:	movzx  eax,BYTE PTR [rdi+0xe]
   14000666d:	or     ecx,eax
   14000666f:	movzx  eax,BYTE PTR [rdi+0xd]
   140006673:	shl    ecx,0x8
   140006676:	or     ecx,eax
   140006678:	movzx  eax,BYTE PTR [rdi+0xc]
   14000667c:	shl    ecx,0x8
   14000667f:	or     ecx,eax
   140006681:	add    ecx,edx
   140006683:	sub    r14d,ecx
   140006686:	mov    ecx,r13d
   140006689:	add    edx,r14d
   14000668c:	call   0x140017664
   140006691:	test   eax,eax
   140006693:	js     0x140006926
   140006699:	mov    r8d,0x400
   14000669f:	mov    rdx,rdi
   1400066a2:	mov    ecx,r13d
   1400066a5:	call   0x140016994
   1400066aa:	mov    r12d,eax
   1400066ad:	test   eax,eax
   1400066af:	js     0x140006926
   1400066b5:	movzx  eax,BYTE PTR [rdi+0x2]
   1400066b9:	movzx  ecx,BYTE PTR [rdi+0x3]
   1400066bd:	shl    ecx,0x8
   1400066c0:	or     ecx,eax
   1400066c2:	movzx  eax,BYTE PTR [rdi+0x1]
   1400066c6:	shl    ecx,0x8
   1400066c9:	or     ecx,eax
   1400066cb:	movzx  eax,BYTE PTR [rdi]
   1400066ce:	shl    ecx,0x8
   1400066d1:	or     ecx,eax
   1400066d3:	cmp    ecx,0x2014b50
   1400066d9:	jne    0x140006926
   1400066df:	cmp    r12d,0x2e
   1400066e3:	jge    0x140006716
   1400066e5:	movsxd rbx,r12d
   1400066e8:	mov    rdx,rsi
   1400066eb:	mov    rcx,rdi
   1400066ee:	mov    r8,rbx
   1400066f1:	call   0x14000a140
   1400066f6:	lea    rdx,[rbx+rdi*1]
   1400066fa:	mov    r8d,0x400
   140006700:	mov    ecx,r13d
   140006703:	mov    rsi,rax
   140006706:	call   0x140016994
   14000670b:	test   eax,eax
   14000670d:	jle    0x140006926
   140006713:	add    r12d,eax
   140006716:	movzx  eax,BYTE PTR [rsi+0x20]
   14000671a:	movzx  edx,BYTE PTR [rsi+0x21]
   14000671e:	movzx  ecx,BYTE PTR [rsi+0x1f]
   140006722:	shl    ecx,0x8
   140006725:	shl    edx,0x8
   140006728:	or     edx,eax
   14000672a:	movzx  eax,BYTE PTR [rsi+0x1e]
   14000672e:	or     ecx,eax
   140006730:	movzx  eax,BYTE PTR [rsi+0x1c]
   140006734:	add    edx,ecx
   140006736:	movzx  ecx,BYTE PTR [rsi+0x1d]
   14000673a:	shl    ecx,0x8
   14000673d:	or     ecx,eax
   14000673f:	lea    ebx,[rdx+rcx*1+0x2e]
   140006743:	lea    eax,[rbx+0x4]
   140006746:	cmp    r12d,eax
   140006749:	jge    0x140006790
   14000674b:	cmp    rsi,rdi
   14000674e:	je     0x140006761
   140006750:	movsxd r8,r12d
   140006753:	mov    rdx,rsi
   140006756:	mov    rcx,rdi
   140006759:	call   0x14000a140
   14000675e:	mov    rsi,rax
   140006761:	mov    eax,0x400
   140006766:	mov    r8d,ebx
   140006769:	movsxd rdx,r12d
   14000676c:	sub    r8d,r12d
   14000676f:	mov    ecx,r13d
   140006772:	add    r8d,0x4
   140006776:	cmp    r8d,eax
   140006779:	cmovl  r8d,eax
   14000677d:	add    rdx,rdi
   140006780:	call   0x140016994
   140006785:	test   eax,eax
   140006787:	jle    0x140006926
   14000678d:	add    r12d,eax
   140006790:	mov    rcx,r15
   140006793:	call   0x140009fa0
   140006798:	movzx  ecx,BYTE PTR [rsi+0x1d]
   14000679c:	shl    ecx,0x8
   14000679f:	movsxd rdx,ecx
   1400067a2:	movzx  ecx,BYTE PTR [rsi+0x1c]
   1400067a6:	or     rdx,rcx
   1400067a9:	cmp    rdx,rax
   1400067ac:	jne    0x1400067c9
   1400067ae:	mov    rcx,r15
   1400067b1:	call   0x140009fa0
   1400067b6:	lea    rcx,[rsi+0x2e]
   1400067ba:	mov    rdx,r15
   1400067bd:	mov    r8,rax
   1400067c0:	call   0x14000c590
   1400067c5:	test   eax,eax
   1400067c7:	je     0x1400067f0
   1400067c9:	movsxd rax,ebx
   1400067cc:	sub    r12d,ebx
   1400067cf:	add    rsi,rax
   1400067d2:	movzx  eax,BYTE PTR [rsi+0x2]
   1400067d6:	movzx  ecx,BYTE PTR [rsi+0x3]
   1400067da:	shl    ecx,0x8
   1400067dd:	or     ecx,eax
   1400067df:	movzx  eax,BYTE PTR [rsi+0x1]
   1400067e3:	shl    ecx,0x8
   1400067e6:	or     ecx,eax
   1400067e8:	movzx  eax,BYTE PTR [rsi]
   1400067eb:	jmp    0x1400066ce
   1400067f0:	movzx  eax,BYTE PTR [rsi+0x2c]
   1400067f4:	movzx  edx,BYTE PTR [rsi+0x2d]
   1400067f8:	xor    r8d,r8d
   1400067fb:	shl    edx,0x8
   1400067fe:	mov    ecx,r13d
   140006801:	or     edx,eax
   140006803:	movzx  eax,BYTE PTR [rsi+0x2b]
   140006807:	shl    edx,0x8
   14000680a:	or     edx,eax
   14000680c:	movzx  eax,BYTE PTR [rsi+0x2a]
   140006810:	shl    edx,0x8
   140006813:	or     edx,eax
   140006815:	add    edx,r14d
   140006818:	call   0x140017664
   14000681d:	test   eax,eax
   14000681f:	js     0x140006926
   140006825:	lea    rdx,[rsp+0x28]
   14000682a:	mov    r8d,0x1e
   140006830:	mov    ecx,r13d
   140006833:	call   0x140016994
   140006838:	test   eax,eax
   14000683a:	js     0x140006926
   140006840:	movzx  eax,BYTE PTR [rsp+0x2a]
   140006845:	movzx  ecx,BYTE PTR [rsp+0x2b]
   14000684a:	shl    ecx,0x8
   14000684d:	or     ecx,eax
   14000684f:	movzx  eax,BYTE PTR [rsp+0x29]
   140006854:	shl    ecx,0x8
   140006857:	or     ecx,eax
   140006859:	movzx  eax,BYTE PTR [rsp+0x28]
   14000685e:	shl    ecx,0x8
   140006861:	or     ecx,eax
   140006863:	cmp    ecx,0x4034b50
   140006869:	jne    0x140006926
   14000686f:	movzx  eax,BYTE PTR [rsi+0x1a]
   140006873:	movzx  ecx,BYTE PTR [rsi+0x1b]
   140006877:	mov    r9,QWORD PTR [rsp+0x20]
   14000687c:	movzx  edx,BYTE PTR [rsp+0x45]
   140006881:	shl    ecx,0x8
   140006884:	or     ecx,eax
   140006886:	movzx  eax,BYTE PTR [rsi+0x19]
   14000688a:	shl    edx,0x8
   14000688d:	shl    ecx,0x8
   140006890:	or     ecx,eax
   140006892:	movzx  eax,BYTE PTR [rsi+0x18]
   140006896:	shl    ecx,0x8
   140006899:	movsxd rcx,ecx
   14000689c:	or     rcx,rax
   14000689f:	mov    QWORD PTR [r9],rcx
   1400068a2:	movzx  eax,BYTE PTR [rsi+0x16]
   1400068a6:	movzx  ecx,BYTE PTR [rsi+0x17]
   1400068aa:	shl    ecx,0x8
   1400068ad:	or     ecx,eax
   1400068af:	movzx  eax,BYTE PTR [rsi+0x15]
   1400068b3:	shl    ecx,0x8
   1400068b6:	or     ecx,eax
   1400068b8:	movzx  eax,BYTE PTR [rsi+0x14]
   1400068bc:	shl    ecx,0x8
   1400068bf:	movsxd rcx,ecx
   1400068c2:	or     rcx,rax
   1400068c5:	mov    QWORD PTR [r9+0x8],rcx
   1400068c9:	movzx  eax,BYTE PTR [rsi+0x2c]
   1400068cd:	movzx  r8d,BYTE PTR [rsi+0x2d]
   1400068d2:	movzx  ecx,BYTE PTR [rsp+0x43]
   1400068d7:	shl    r8d,0x8
   1400068db:	or     r8d,eax
   1400068de:	movzx  eax,BYTE PTR [rsi+0x2b]
   1400068e2:	shl    ecx,0x8
   1400068e5:	shl    r8d,0x8
   1400068e9:	or     r8d,eax
   1400068ec:	movzx  eax,BYTE PTR [rsi+0x2a]
   1400068f0:	shl    r8d,0x8
   1400068f4:	or     r8d,eax
   1400068f7:	movzx  eax,BYTE PTR [rsp+0x44]
   1400068fc:	or     edx,eax
   1400068fe:	movzx  eax,BYTE PTR [rsp+0x42]
   140006903:	or     ecx,eax
   140006905:	add    edx,r14d
   140006908:	add    edx,r8d
   14000690b:	lea    eax,[rcx+rdx*1+0x1e]
   14000690f:	mov    DWORD PTR [r9+0x10],eax
   140006913:	movzx  ecx,BYTE PTR [rsi+0xb]
   140006917:	movzx  eax,BYTE PTR [rsi+0xa]
   14000691b:	shl    ecx,0x8
   14000691e:	or     ecx,eax
   140006920:	xor    ebp,ebp
   140006922:	mov    DWORD PTR [r9+0x14],ecx
   140006926:	mov    rcx,rdi
   140006929:	call   0x14000b460
   14000692e:	mov    eax,ebp
   140006930:	mov    rcx,QWORD PTR [rsp+0x48]
   140006935:	xor    rcx,rsp
   140006938:	call   0x14000a820
   14000693d:	mov    rbx,QWORD PTR [rsp+0xa8]
   140006945:	add    rsp,0x50
   140006949:	pop    r15
   14000694b:	pop    r14
   14000694d:	pop    r13
   14000694f:	pop    r12
   140006951:	pop    rdi
   140006952:	pop    rsi
   140006953:	pop    rbp
   140006954:	ret    
   140006955:	int3   
   140006956:	int3   
   140006957:	int3   
   140006958:	mov    QWORD PTR [rsp+0x8],rbx
   14000695d:	mov    QWORD PTR [rsp+0x10],rbp
   140006962:	mov    QWORD PTR [rsp+0x18],rsi
   140006967:	push   rdi
   140006968:	sub    rsp,0x20
   14000696c:	mov    rdi,rcx
   14000696f:	mov    rcx,QWORD PTR [rcx]
   140006972:	mov    rsi,r8
   140006975:	mov    al,BYTE PTR [rcx]
   140006977:	mov    rbp,rdx
   14000697a:	test   al,al
   14000697c:	je     0x140006a3f
   140006982:	cmp    al,0xa
   140006984:	je     0x140006a3f
   14000698a:	cmp    al,0xd
   14000698c:	je     0x140006a3f
   140006992:	lea    rdx,[rip+0x15357]        # 0x14001bcf0
   140006999:	call   0x14000c658
   14000699e:	mov    rbx,rax
   1400069a1:	test   rax,rax
   1400069a4:	jne    0x1400069ea
   1400069a6:	mov    rcx,QWORD PTR [rdi]
   1400069a9:	xor    edx,edx
   1400069ab:	call   0x14000c04c
   1400069b0:	mov    rbx,rax
   1400069b3:	mov    rcx,QWORD PTR [rdi]
   1400069b6:	mov    edx,0x3a
   1400069bb:	call   0x14000c04c
   1400069c0:	test   rax,rax
   1400069c3:	je     0x140006a3a
   1400069c5:	mov    BYTE PTR [rax],0x0
   1400069c8:	cmp    BYTE PTR [rax+0x1],0x20
   1400069cc:	jne    0x140006a3a
   1400069ce:	mov    BYTE PTR [rax+0x1],0x0
   1400069d2:	mov    rcx,QWORD PTR [rdi]
   1400069d5:	mov    QWORD PTR [rbp+0x0],rcx
   1400069d9:	lea    rcx,[rax+0x2]
   1400069dd:	mov    eax,0x1
   1400069e2:	mov    QWORD PTR [rsi],rcx
   1400069e5:	mov    QWORD PTR [rdi],rbx
   1400069e8:	jmp    0x140006a41
   1400069ea:	cmp    BYTE PTR [rax],0xd
   1400069ed:	mov    rcx,rax
   1400069f0:	jne    0x140006a2a
   1400069f2:	inc    rax
   1400069f5:	jmp    0x140006a1f
   1400069f7:	mov    al,BYTE PTR [rbx]
   1400069f9:	cmp    al,0xd
   1400069fb:	je     0x140006a0e
   1400069fd:	test   al,al
   1400069ff:	je     0x140006a3a
   140006a01:	mov    BYTE PTR [rcx],al
   140006a03:	inc    rcx
   140006a06:	inc    rbx
   140006a09:	cmp    BYTE PTR [rbx],0xa
   140006a0c:	jne    0x1400069f7
   140006a0e:	cmp    BYTE PTR [rbx],0x0
   140006a11:	je     0x140006a3a
   140006a13:	mov    BYTE PTR [rcx],0x0
   140006a16:	cmp    BYTE PTR [rbx],0xd
   140006a19:	jne    0x140006a2a
   140006a1b:	lea    rax,[rbx+0x1]
   140006a1f:	cmp    BYTE PTR [rax],0xa
   140006a22:	jne    0x140006a2a
   140006a24:	mov    BYTE PTR [rbx],0x0
   140006a27:	mov    rbx,rax
   140006a2a:	mov    BYTE PTR [rbx],0x0
   140006a2d:	inc    rbx
   140006a30:	cmp    BYTE PTR [rbx],0x20
   140006a33:	je     0x140006a06
   140006a35:	jmp    0x1400069b3
   140006a3a:	or     eax,0xffffffff
   140006a3d:	jmp    0x140006a41
   140006a3f:	xor    eax,eax
   140006a41:	mov    rbx,QWORD PTR [rsp+0x30]
   140006a46:	mov    rbp,QWORD PTR [rsp+0x38]
   140006a4b:	mov    rsi,QWORD PTR [rsp+0x40]
   140006a50:	add    rsp,0x20
   140006a54:	pop    rdi
   140006a55:	ret    
   140006a56:	int3   
   140006a57:	int3   
   140006a58:	mov    QWORD PTR [rsp+0x8],rbx
   140006a5d:	push   rbp
   140006a5e:	push   rsi
   140006a5f:	push   rdi
   140006a60:	mov    rbp,rsp
   140006a63:	sub    rsp,0x40
   140006a67:	mov    rbx,rdx
   140006a6a:	mov    edx,0x8000
   140006a6f:	call   0x140012f5c
   140006a74:	mov    edi,eax
   140006a76:	or     eax,0xffffffff
   140006a79:	cmp    edi,eax
   140006a7b:	je     0x140006bb2
   140006a81:	mov    r8,QWORD PTR [rip+0x1c618]        # 0x1400230a0
   140006a88:	and    QWORD PTR [rbx],0x0
   140006a8c:	and    QWORD PTR [rbx+0x8],0x0
   140006a91:	and    QWORD PTR [rbx+0x10],0x0
   140006a96:	and    QWORD PTR [rbx+0x20],0x0
   140006a9b:	lea    rdx,[rbp-0x18]
   140006a9f:	mov    ecx,edi
   140006aa1:	mov    BYTE PTR [rbx+0x18],0x0
   140006aa5:	call   0x1400065dc
   140006aaa:	mov    ecx,edi
   140006aac:	test   eax,eax
   140006aae:	je     0x140006abf
   140006ab0:	call   0x140010e20
   140006ab5:	mov    eax,0xfffffffe
   140006aba:	jmp    0x140006bb2
   140006abf:	lea    rdx,[rbp-0x18]
   140006ac3:	xor    r8d,r8d
   140006ac6:	call   0x1400062e8
   140006acb:	mov    QWORD PTR [rip+0x1dea6],rax        # 0x140024978
   140006ad2:	test   rax,rax
   140006ad5:	jne    0x140006adb
   140006ad7:	mov    ecx,edi
   140006ad9:	jmp    0x140006ab0
   140006adb:	mov    QWORD PTR [rbp-0x20],rax
   140006adf:	jmp    0x140006b89
   140006ae4:	mov    rsi,QWORD PTR [rbp+0x38]
   140006ae8:	lea    rdx,[rip+0x15259]        # 0x14001bd48
   140006aef:	mov    rcx,rsi
   140006af2:	call   0x1400196a0
   140006af7:	test   eax,eax
   140006af9:	jne    0x140006b07
   140006afb:	mov    rax,QWORD PTR [rbp+0x30]
   140006aff:	mov    QWORD PTR [rbx],rax
   140006b02:	jmp    0x140006b89
   140006b07:	lea    rdx,[rip+0x1522a]        # 0x14001bd38
   140006b0e:	mov    rcx,rsi
   140006b11:	call   0x1400196a0
   140006b16:	test   eax,eax
   140006b18:	jne    0x140006b24
   140006b1a:	mov    rax,QWORD PTR [rbp+0x30]
   140006b1e:	mov    QWORD PTR [rbx+0x8],rax
   140006b22:	jmp    0x140006b89
   140006b24:	lea    rdx,[rip+0x151fd]        # 0x14001bd28
   140006b2b:	mov    rcx,rsi
   140006b2e:	call   0x1400196a0
   140006b33:	test   eax,eax
   140006b35:	jne    0x140006b41
   140006b37:	mov    rax,QWORD PTR [rbp+0x30]
   140006b3b:	mov    QWORD PTR [rbx+0x10],rax
   140006b3f:	jmp    0x140006b89
   140006b41:	lea    rdx,[rip+0x151c8]        # 0x14001bd10
   140006b48:	mov    rcx,rsi
   140006b4b:	call   0x1400196a0
   140006b50:	test   eax,eax
   140006b52:	jne    0x140006b6e
   140006b54:	mov    rcx,QWORD PTR [rbp+0x30]
   140006b58:	lea    rdx,[rip+0x1425d]        # 0x14001adbc
   140006b5f:	call   0x1400196a0
   140006b64:	test   eax,eax
   140006b66:	jne    0x140006b89
   140006b68:	mov    BYTE PTR [rbx+0x18],0x1
   140006b6c:	jmp    0x140006b89
   140006b6e:	lea    rdx,[rip+0x15183]        # 0x14001bcf8
   140006b75:	mov    rcx,rsi
   140006b78:	call   0x1400196a0
   140006b7d:	test   eax,eax
   140006b7f:	jne    0x140006b89
   140006b81:	mov    rax,QWORD PTR [rbp+0x30]
   140006b85:	mov    QWORD PTR [rbx+0x20],rax
   140006b89:	lea    r8,[rbp+0x30]
   140006b8d:	lea    rdx,[rbp+0x38]
   140006b91:	lea    rcx,[rbp-0x20]
   140006b95:	call   0x140006958
   140006b9a:	mov    esi,eax
   140006b9c:	test   eax,eax
   140006b9e:	jg     0x140006ae4
   140006ba4:	mov    ecx,edi
   140006ba6:	call   0x140010e20
   140006bab:	neg    esi
   140006bad:	sbb    eax,eax
   140006baf:	and    eax,0xfffffffe
   140006bb2:	mov    rbx,QWORD PTR [rsp+0x60]
   140006bb7:	add    rsp,0x40
   140006bbb:	pop    rdi
   140006bbc:	pop    rsi
   140006bbd:	pop    rbp
   140006bbe:	ret    
   140006bbf:	int3   
   140006bc0:	mov    QWORD PTR [rsp+0x8],rbx
   140006bc5:	mov    QWORD PTR [rsp+0x10],rbp
   140006bca:	mov    QWORD PTR [rsp+0x18],rsi
   140006bcf:	push   rdi
   140006bd0:	sub    rsp,0x40
   140006bd4:	mov    rbp,rdx
   140006bd7:	mov    edx,0x8000
   140006bdc:	mov    rsi,r8
   140006bdf:	xor    edi,edi
   140006be1:	call   0x140012f5c
   140006be6:	mov    ebx,eax
   140006be8:	cmp    eax,0xffffffff
   140006beb:	jne    0x140006bf1
   140006bed:	xor    eax,eax
   140006bef:	jmp    0x140006c20
   140006bf1:	lea    rdx,[rsp+0x20]
   140006bf6:	mov    r8,rbp
   140006bf9:	mov    ecx,eax
   140006bfb:	call   0x1400065dc
   140006c00:	test   eax,eax
   140006c02:	jne    0x140006c16
   140006c04:	lea    rdx,[rsp+0x20]
   140006c09:	mov    r8,rsi
   140006c0c:	mov    ecx,ebx
   140006c0e:	call   0x1400062e8
   140006c13:	mov    rdi,rax
   140006c16:	mov    ecx,ebx
   140006c18:	call   0x140010e20
   140006c1d:	mov    rax,rdi
   140006c20:	mov    rbx,QWORD PTR [rsp+0x50]
   140006c25:	mov    rbp,QWORD PTR [rsp+0x58]
   140006c2a:	mov    rsi,QWORD PTR [rsp+0x60]
   140006c2f:	add    rsp,0x40
   140006c33:	pop    rdi
   140006c34:	ret    
   140006c35:	int3   
   140006c36:	int3   
   140006c37:	int3   
   140006c38:	sub    rsp,0x28
   140006c3c:	mov    rcx,QWORD PTR [rip+0x1dd35]        # 0x140024978
   140006c43:	test   rcx,rcx
   140006c46:	je     0x140006c4d
   140006c48:	call   0x14000b460
   140006c4d:	add    rsp,0x28
   140006c51:	ret    
   140006c52:	int3   
   140006c53:	int3   
   140006c54:	mov    QWORD PTR [rsp+0x8],rbx
   140006c59:	mov    QWORD PTR [rsp+0x10],rsi
   140006c5e:	push   rdi
   140006c5f:	sub    rsp,0x20
   140006c63:	mov    al,BYTE PTR [rcx]
   140006c65:	mov    rsi,rdx
   140006c68:	mov    rbx,rcx
   140006c6b:	xor    edi,edi
   140006c6d:	jmp    0x140006c99
   140006c6f:	movsx  ecx,al
   140006c72:	call   0x14000c798
   140006c77:	test   eax,eax
   140006c79:	je     0x140006cb4
   140006c7b:	movsx  eax,BYTE PTR [rbx]
   140006c7e:	lea    rcx,[rdi+rdi*4]
   140006c82:	inc    rbx
   140006c85:	sub    eax,0x30
   140006c88:	cdqe   
   140006c8a:	lea    rdi,[rax+rcx*2]
   140006c8e:	cmp    rdi,0x7fffffff
   140006c95:	jg     0x140006cb4
   140006c97:	mov    al,BYTE PTR [rbx]
   140006c99:	test   al,al
   140006c9b:	jne    0x140006c6f
   140006c9d:	mov    DWORD PTR [rsi],edi
   140006c9f:	mov    eax,0x1
   140006ca4:	mov    rbx,QWORD PTR [rsp+0x30]
   140006ca9:	mov    rsi,QWORD PTR [rsp+0x38]
   140006cae:	add    rsp,0x20
   140006cb2:	pop    rdi
   140006cb3:	ret    
   140006cb4:	xor    eax,eax
   140006cb6:	jmp    0x140006ca4
   140006cb8:	mov    QWORD PTR [rsp+0x8],rbx
   140006cbd:	push   rdi
   140006cbe:	sub    rsp,0x20
   140006cc2:	mov    rbx,rdx
   140006cc5:	lea    rdx,[rsp+0x40]
   140006cca:	mov    rdi,rcx
   140006ccd:	call   0x140006c54
   140006cd2:	test   eax,eax
   140006cd4:	je     0x140006cf1
   140006cd6:	lea    rdx,[rsp+0x48]
   140006cdb:	mov    rcx,rbx
   140006cde:	call   0x140006c54
   140006ce3:	test   eax,eax
   140006ce5:	je     0x140006cf1
   140006ce7:	mov    eax,DWORD PTR [rsp+0x40]
   140006ceb:	sub    eax,DWORD PTR [rsp+0x48]
   140006cef:	jmp    0x140006cfc
   140006cf1:	mov    rdx,rbx
   140006cf4:	mov    rcx,rdi
   140006cf7:	call   0x14000a850
   140006cfc:	mov    rbx,QWORD PTR [rsp+0x30]
   140006d01:	add    rsp,0x20
   140006d05:	pop    rdi
   140006d06:	ret    
   140006d07:	int3   
   140006d08:	mov    rax,rsp
   140006d0b:	mov    QWORD PTR [rax+0x8],rbx
   140006d0f:	mov    QWORD PTR [rax+0x10],rbp
   140006d13:	mov    QWORD PTR [rax+0x18],rsi
   140006d17:	mov    QWORD PTR [rax+0x20],rdi
   140006d1b:	push   r12
   140006d1d:	push   r13
   140006d1f:	push   r14
   140006d21:	sub    rsp,0x20
   140006d25:	mov    rbx,rdx
   140006d28:	call   0x140004048
   140006d2d:	mov    rcx,rbx
   140006d30:	mov    rdi,rax
   140006d33:	call   0x140004048
   140006d38:	xor    ebp,ebp
   140006d3a:	mov    r13,rdi
   140006d3d:	xor    esi,esi
   140006d3f:	mov    rbx,rax
   140006d42:	mov    r14,rax
   140006d45:	test   rdi,rdi
   140006d48:	je     0x140006d64
   140006d4a:	lea    rdx,[rip+0x1500f]        # 0x14001bd60
   140006d51:	mov    rcx,rdi
   140006d54:	call   0x14000c658
   140006d59:	mov    rbp,rax
   140006d5c:	test   rax,rax
   140006d5f:	je     0x140006d64
   140006d61:	mov    BYTE PTR [rax],0x0
   140006d64:	test   rbx,rbx
   140006d67:	je     0x140006d83
   140006d69:	lea    rdx,[rip+0x14ff0]        # 0x14001bd60
   140006d70:	mov    rcx,rbx
   140006d73:	call   0x14000c658
   140006d78:	mov    rsi,rax
   140006d7b:	test   rax,rax
   140006d7e:	je     0x140006d83
   140006d80:	mov    BYTE PTR [rax],0x0
   140006d83:	mov    rdx,rbx
   140006d86:	mov    rcx,rdi
   140006d89:	call   0x140006cb8
   140006d8e:	mov    r12d,eax
   140006d91:	test   rbp,rbp
   140006d94:	je     0x140006d9c
   140006d96:	lea    rdi,[rbp+0x1]
   140006d9a:	jmp    0x140006d9e
   140006d9c:	xor    edi,edi
   140006d9e:	test   rsi,rsi
   140006da1:	je     0x140006da9
   140006da3:	lea    rbx,[rsi+0x1]
   140006da7:	jmp    0x140006dab
   140006da9:	xor    ebx,ebx
   140006dab:	test   eax,eax
   140006dad:	jne    0x140006db9
   140006daf:	test   rdi,rdi
   140006db2:	je     0x140006db9
   140006db4:	test   rbx,rbx
   140006db7:	jne    0x140006d45
   140006db9:	mov    rcx,r13
   140006dbc:	call   0x140004074
   140006dc1:	mov    rcx,r14
   140006dc4:	call   0x140004074
   140006dc9:	mov    rbx,QWORD PTR [rsp+0x40]
   140006dce:	mov    rbp,QWORD PTR [rsp+0x48]
   140006dd3:	mov    rsi,QWORD PTR [rsp+0x50]
   140006dd8:	mov    rdi,QWORD PTR [rsp+0x58]
   140006ddd:	mov    eax,r12d
   140006de0:	add    rsp,0x20
   140006de4:	pop    r14
   140006de6:	pop    r13
   140006de8:	pop    r12
   140006dea:	ret    
   140006deb:	int3   
   140006dec:	mov    rax,rsp
   140006def:	mov    QWORD PTR [rax+0x8],rbx
   140006df3:	mov    QWORD PTR [rax+0x10],rbp
   140006df7:	mov    QWORD PTR [rax+0x18],rsi
   140006dfb:	mov    QWORD PTR [rax+0x20],rdi
   140006dff:	push   r12
   140006e01:	push   r13
   140006e03:	push   r14
   140006e05:	sub    rsp,0x20
   140006e09:	mov    rbx,rdx
   140006e0c:	call   0x140004048
   140006e11:	mov    rcx,rbx
   140006e14:	mov    rdi,rax
   140006e17:	call   0x140004048
   140006e1c:	xor    ebp,ebp
   140006e1e:	mov    r13,rdi
   140006e21:	xor    r12d,r12d
   140006e24:	mov    rbx,rax
   140006e27:	mov    r14,rax
   140006e2a:	test   rdi,rdi
   140006e2d:	je     0x140006e49
   140006e2f:	mov    rdx,QWORD PTR [rip+0x1c272]        # 0x1400230a8
   140006e36:	mov    rcx,rdi
   140006e39:	call   0x14000c658
   140006e3e:	mov    rbp,rax
   140006e41:	test   rax,rax
   140006e44:	je     0x140006e49
   140006e46:	mov    BYTE PTR [rax],0x0
   140006e49:	test   rbx,rbx
   140006e4c:	je     0x140006e68
   140006e4e:	mov    rdx,QWORD PTR [rip+0x1c253]        # 0x1400230a8
   140006e55:	mov    rcx,rbx
   140006e58:	call   0x14000c658
   140006e5d:	mov    r12,rax
   140006e60:	test   rax,rax
   140006e63:	je     0x140006e68
   140006e65:	mov    BYTE PTR [rax],0x0
   140006e68:	test   rdi,rdi
   140006e6b:	je     0x140006e7b
   140006e6d:	test   rbx,rbx
   140006e70:	jne    0x140006e8c
   140006e72:	mov    rdx,QWORD PTR [rip+0x1c237]        # 0x1400230b0
   140006e79:	jmp    0x140006e8f
   140006e7b:	test   rbx,rbx
   140006e7e:	je     0x140006e8c
   140006e80:	mov    rcx,QWORD PTR [rip+0x1c229]        # 0x1400230b0
   140006e87:	mov    rdx,rbx
   140006e8a:	jmp    0x140006e92
   140006e8c:	mov    rdx,rbx
   140006e8f:	mov    rcx,rdi
   140006e92:	call   0x140006cb8
   140006e97:	mov    esi,eax
   140006e99:	test   rbp,rbp
   140006e9c:	je     0x140006ea4
   140006e9e:	lea    rdi,[rbp+0x1]
   140006ea2:	jmp    0x140006ea6
   140006ea4:	xor    edi,edi
   140006ea6:	test   r12,r12
   140006ea9:	je     0x140006eb2
   140006eab:	lea    rbx,[r12+0x1]
   140006eb0:	jmp    0x140006eb4
   140006eb2:	xor    ebx,ebx
   140006eb4:	test   esi,esi
   140006eb6:	jne    0x140006eca
   140006eb8:	test   rdi,rdi
   140006ebb:	jne    0x140006e2f
   140006ec1:	test   rbx,rbx
   140006ec4:	jne    0x140006e2a
   140006eca:	mov    rcx,r13
   140006ecd:	call   0x140004074
   140006ed2:	mov    rcx,r14
   140006ed5:	call   0x140004074
   140006eda:	mov    rbx,QWORD PTR [rsp+0x40]
   140006edf:	mov    rbp,QWORD PTR [rsp+0x48]
   140006ee4:	mov    rdi,QWORD PTR [rsp+0x58]
   140006ee9:	mov    eax,esi
   140006eeb:	mov    rsi,QWORD PTR [rsp+0x50]
   140006ef0:	add    rsp,0x20
   140006ef4:	pop    r14
   140006ef6:	pop    r13
   140006ef8:	pop    r12
   140006efa:	ret    
   140006efb:	int3   
   140006efc:	mov    QWORD PTR [rsp+0x8],rbx
   140006f01:	mov    QWORD PTR [rsp+0x10],rbp
   140006f06:	mov    QWORD PTR [rsp+0x18],rsi
   140006f0b:	push   rdi
   140006f0c:	push   r12
   140006f0e:	push   r13
   140006f10:	sub    rsp,0x20
   140006f14:	mov    r12,rcx
   140006f17:	mov    rcx,rdx
   140006f1a:	call   0x140004048
   140006f1f:	xor    ebx,ebx
   140006f21:	mov    rdi,rax
   140006f24:	mov    r13,rax
   140006f27:	mov    edx,0x20
   140006f2c:	mov    rcx,rdi
   140006f2f:	call   0x14000c04c
   140006f34:	mov    rbp,rax
   140006f37:	test   rax,rax
   140006f3a:	je     0x140006f3e
   140006f3c:	mov    BYTE PTR [rax],bl
   140006f3e:	mov    edx,0x26
   140006f43:	mov    rcx,rdi
   140006f46:	call   0x14000c04c
   140006f4b:	mov    rsi,rax
   140006f4e:	test   rax,rax
   140006f51:	je     0x140006f55
   140006f53:	mov    BYTE PTR [rax],bl
   140006f55:	mov    rcx,rdi
   140006f58:	call   0x140009fa0
   140006f5d:	mov    rcx,r12
   140006f60:	cmp    BYTE PTR [rax+rdi*1-0x1],0x2a
   140006f65:	jne    0x140006f8e
   140006f67:	mov    edx,0x2d
   140006f6c:	mov    BYTE PTR [rax+rdi*1-0x1],bl
   140006f70:	call   0x14000c04c
   140006f75:	mov    rdx,rdi
   140006f78:	mov    rcx,r12
   140006f7b:	test   rax,rax
   140006f7e:	je     0x140006f87
   140006f80:	call   0x14000a850
   140006f85:	jmp    0x140006fc4
   140006f87:	call   0x140006d08
   140006f8c:	jmp    0x140006fc4
   140006f8e:	cmp    BYTE PTR [rax+rdi*1-0x1],0x2b
   140006f93:	jne    0x140006fbc
   140006f95:	mov    edx,0x2d
   140006f9a:	mov    BYTE PTR [rax+rdi*1-0x1],bl
   140006f9e:	call   0x14000c04c
   140006fa3:	mov    rdx,rdi
   140006fa6:	mov    rcx,r12
   140006fa9:	test   rax,rax
   140006fac:	jne    0x140006f80
   140006fae:	call   0x140006dec
   140006fb3:	mov    ecx,ebx
   140006fb5:	test   eax,eax
   140006fb7:	setns  cl
   140006fba:	jmp    0x140006fcb
   140006fbc:	mov    rdx,rdi
   140006fbf:	call   0x140006dec
   140006fc4:	test   eax,eax
   140006fc6:	mov    ecx,ebx
   140006fc8:	sete   cl
   140006fcb:	test   ecx,ecx
   140006fcd:	je     0x140006fdd
   140006fcf:	test   rsi,rsi
   140006fd2:	je     0x140006feb
   140006fd4:	lea    rdi,[rsi+0x1]
   140006fd8:	jmp    0x140006f3e
   140006fdd:	test   rbp,rbp
   140006fe0:	je     0x140006ff0
   140006fe2:	lea    rdi,[rbp+0x1]
   140006fe6:	jmp    0x140006f27
   140006feb:	mov    ebx,0x1
   140006ff0:	mov    rcx,r13
   140006ff3:	call   0x140004074
   140006ff8:	mov    rbp,QWORD PTR [rsp+0x48]
   140006ffd:	mov    rsi,QWORD PTR [rsp+0x50]
   140007002:	mov    eax,ebx
   140007004:	mov    rbx,QWORD PTR [rsp+0x40]
   140007009:	add    rsp,0x20
   14000700d:	pop    r13
   14000700f:	pop    r12
   140007011:	pop    rdi
   140007012:	ret    
   140007013:	int3   
   140007014:	mov    rax,rsp
   140007017:	mov    QWORD PTR [rax+0x8],rbx
   14000701b:	mov    QWORD PTR [rax+0x10],rbp
   14000701f:	mov    QWORD PTR [rax+0x18],rsi
   140007023:	mov    QWORD PTR [rax+0x20],rdi
   140007027:	push   r12
   140007029:	sub    rsp,0x20
   14000702d:	mov    rbx,rcx
   140007030:	test   rcx,rcx
   140007033:	je     0x14000710f
   140007039:	call   0x140009fa0
   14000703e:	test   rax,rax
   140007041:	je     0x14000710f
   140007047:	mov    rcx,rbx
   14000704a:	call   0x140004048
   14000704f:	mov    rbx,rax
   140007052:	mov    r12,rax
   140007055:	mov    edx,0x20
   14000705a:	mov    rcx,rbx
   14000705d:	call   0x14000c04c
   140007062:	mov    rbp,rax
   140007065:	test   rax,rax
   140007068:	je     0x14000706d
   14000706a:	mov    BYTE PTR [rax],0x0
   14000706d:	test   rbx,rbx
   140007070:	je     0x140007107
   140007076:	mov    rcx,rbx
   140007079:	call   0x140009fa0
   14000707e:	test   rax,rax
   140007081:	je     0x140007107
   140007087:	mov    edx,0x26
   14000708c:	mov    rcx,rbx
   14000708f:	call   0x14000c04c
   140007094:	mov    rsi,rax
   140007097:	test   rax,rax
   14000709a:	je     0x14000709f
   14000709c:	mov    BYTE PTR [rax],0x0
   14000709f:	test   rbx,rbx
   1400070a2:	je     0x140007107
   1400070a4:	mov    rcx,rbx
   1400070a7:	call   0x140009fa0
   1400070ac:	test   rax,rax
   1400070af:	je     0x140007107
   1400070b1:	lea    rdi,[rax+rbx*1-0x1]
   1400070b6:	cmp    BYTE PTR [rdi],0x2a
   1400070b9:	je     0x1400070c0
   1400070bb:	cmp    BYTE PTR [rdi],0x2b
   1400070be:	jne    0x1400070cb
   1400070c0:	dec    rax
   1400070c3:	je     0x140007107
   1400070c5:	mov    BYTE PTR [rdi],0x0
   1400070c8:	dec    rdi
   1400070cb:	lea    rdx,[rip+0x14c92]        # 0x14001bd64
   1400070d2:	mov    rcx,rbx
   1400070d5:	call   0x14000c658
   1400070da:	test   rax,rax
   1400070dd:	jne    0x140007107
   1400070df:	movsx  edx,BYTE PTR [rbx]
   1400070e2:	lea    rcx,[rip+0x14c77]        # 0x14001bd60
   1400070e9:	call   0x14000c04c
   1400070ee:	test   rax,rax
   1400070f1:	jne    0x140007107
   1400070f3:	movsx  edx,BYTE PTR [rdi]
   1400070f6:	lea    rcx,[rip+0x14c63]        # 0x14001bd60
   1400070fd:	call   0x14000c04c
   140007102:	test   rax,rax
   140007105:	je     0x140007158
   140007107:	mov    rcx,r12
   14000710a:	call   0x140004074
   14000710f:	xor    eax,eax
   140007111:	mov    rbx,QWORD PTR [rsp+0x30]
   140007116:	mov    rbp,QWORD PTR [rsp+0x38]
   14000711b:	mov    rsi,QWORD PTR [rsp+0x40]
   140007120:	mov    rdi,QWORD PTR [rsp+0x48]
   140007125:	add    rsp,0x20
   140007129:	pop    r12
   14000712b:	ret    
   14000712c:	movsx  edx,BYTE PTR [rbx]
   14000712f:	lea    rcx,[rip+0x14c2a]        # 0x14001bd60
   140007136:	call   0x14000c04c
   14000713b:	test   rax,rax
   14000713e:	je     0x140007155
   140007140:	movsx  edx,BYTE PTR [rbx+0x1]
   140007144:	lea    rcx,[rip+0x14c15]        # 0x14001bd60
   14000714b:	call   0x14000c04c
   140007150:	test   rax,rax
   140007153:	jne    0x140007107
   140007155:	inc    rbx
   140007158:	cmp    rbx,rdi
   14000715b:	jne    0x14000712c
   14000715d:	test   rsi,rsi
   140007160:	je     0x14000716b
   140007162:	lea    rbx,[rsi+0x1]
   140007166:	jmp    0x140007087
   14000716b:	test   rbp,rbp
   14000716e:	je     0x140007179
   140007170:	lea    rbx,[rbp+0x1]
   140007174:	jmp    0x140007055
   140007179:	mov    rcx,r12
   14000717c:	call   0x140004074
   140007181:	mov    eax,0x1
   140007186:	jmp    0x140007111
   140007188:	xor    eax,eax
   14000718a:	test   rcx,rcx
   14000718d:	je     0x1400071e1
   14000718f:	mov    rdx,QWORD PTR [rcx+0x28]
   140007193:	test   rdx,rdx
   140007196:	je     0x1400071e1
   140007198:	mov    DWORD PTR [rdx+0x1c],eax
   14000719b:	mov    DWORD PTR [rcx+0x1c],eax
   14000719e:	mov    DWORD PTR [rcx+0xc],eax
   1400071a1:	mov    QWORD PTR [rcx+0x20],rax
   1400071a5:	mov    DWORD PTR [rcx+0x4c],0x1
   1400071ac:	mov    QWORD PTR [rdx],rax
   1400071af:	mov    DWORD PTR [rdx+0xc],eax
   1400071b2:	mov    QWORD PTR [rdx+0x20],rax
   1400071b6:	mov    QWORD PTR [rdx+0x2c],rax
   1400071ba:	mov    DWORD PTR [rdx+0x34],eax
   1400071bd:	mov    QWORD PTR [rdx+0x40],rax
   1400071c1:	lea    rax,[rdx+0x548]
   1400071c8:	mov    QWORD PTR [rdx+0x80],rax
   1400071cf:	mov    QWORD PTR [rdx+0x60],rax
   1400071d3:	mov    QWORD PTR [rdx+0x58],rax
   1400071d7:	xor    eax,eax
   1400071d9:	mov    DWORD PTR [rdx+0x14],0x8000
   1400071e0:	ret    
   1400071e1:	mov    eax,0xfffffffe
   1400071e6:	ret    
   1400071e7:	int3   
   1400071e8:	mov    QWORD PTR [rsp+0x8],rbx
   1400071ed:	push   rdi
   1400071ee:	sub    rsp,0x20
   1400071f2:	mov    edi,edx
   1400071f4:	mov    rbx,rcx
   1400071f7:	test   r8,r8
   1400071fa:	je     0x1400072c2
   140007200:	cmp    BYTE PTR [r8],0x31
   140007204:	jne    0x1400072c2
   14000720a:	cmp    r9d,0x58
   14000720e:	jne    0x1400072c2
   140007214:	test   rcx,rcx
   140007217:	jne    0x140007223
   140007219:	mov    eax,0xfffffffe
   14000721e:	jmp    0x1400072c7
   140007223:	and    QWORD PTR [rcx+0x20],0x0
   140007228:	cmp    QWORD PTR [rcx+0x30],0x0
   14000722d:	jne    0x14000723f
   14000722f:	and    QWORD PTR [rcx+0x40],0x0
   140007234:	lea    rax,[rip+0x1765]        # 0x1400089a0
   14000723b:	mov    QWORD PTR [rcx+0x30],rax
   14000723f:	mov    rax,QWORD PTR [rcx+0x38]
   140007243:	lea    rcx,[rip+0x1762]        # 0x1400089ac
   14000724a:	mov    edx,0x1
   14000724f:	cmp    rax,0x0
   140007253:	mov    r8d,0x2548
   140007259:	cmove  rax,rcx
   14000725d:	mov    rcx,QWORD PTR [rbx+0x40]
   140007261:	mov    QWORD PTR [rbx+0x38],rax
   140007265:	call   QWORD PTR [rbx+0x30]
   140007268:	mov    rdx,rax
   14000726b:	test   rax,rax
   14000726e:	jne    0x140007275
   140007270:	lea    eax,[rdx-0x4]
   140007273:	jmp    0x1400072c7
   140007275:	mov    QWORD PTR [rbx+0x28],rax
   140007279:	test   edi,edi
   14000727b:	jns    0x140007285
   14000727d:	and    DWORD PTR [rax+0x8],0x0
   140007281:	neg    edi
   140007283:	jmp    0x140007297
   140007285:	mov    eax,edi
   140007287:	sar    eax,0x4
   14000728a:	inc    eax
   14000728c:	mov    DWORD PTR [rdx+0x8],eax
   14000728f:	cmp    edi,0x30
   140007292:	jge    0x140007297
   140007294:	and    edi,0xf
   140007297:	lea    eax,[rdi-0x8]
   14000729a:	cmp    eax,0x7
   14000729d:	ja     0x1400072b1
   14000729f:	and    QWORD PTR [rdx+0x38],0x0
   1400072a4:	mov    rcx,rbx
   1400072a7:	mov    DWORD PTR [rdx+0x28],edi
   1400072aa:	call   0x140007188
   1400072af:	jmp    0x1400072c7
   1400072b1:	mov    rcx,QWORD PTR [rbx+0x40]
   1400072b5:	call   QWORD PTR [rbx+0x38]
   1400072b8:	and    QWORD PTR [rbx+0x28],0x0
   1400072bd:	jmp    0x140007219
   1400072c2:	mov    eax,0xfffffffa
   1400072c7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400072cc:	add    rsp,0x20
   1400072d0:	pop    rdi
   1400072d1:	ret    
   1400072d2:	int3   
   1400072d3:	int3   
   1400072d4:	mov    rax,rsp
   1400072d7:	mov    QWORD PTR [rax+0x8],rbx
   1400072db:	mov    QWORD PTR [rax+0x10],rbp
   1400072df:	mov    QWORD PTR [rax+0x18],rsi
   1400072e3:	mov    QWORD PTR [rax+0x20],rdi
   1400072e7:	push   r12
   1400072e9:	sub    rsp,0x20
   1400072ed:	mov    rbx,QWORD PTR [rcx+0x28]
   1400072f1:	xor    r12d,r12d
   1400072f4:	mov    ebp,edx
   1400072f6:	mov    rsi,rcx
   1400072f9:	mov    edi,0x1
   1400072fe:	cmp    QWORD PTR [rbx+0x38],r12
   140007302:	jne    0x140007325
   140007304:	mov    ecx,DWORD PTR [rbx+0x28]
   140007307:	mov    edx,edi
   140007309:	mov    r8d,edi
   14000730c:	shl    edx,cl
   14000730e:	mov    rcx,QWORD PTR [rsi+0x40]
   140007312:	call   QWORD PTR [rsi+0x30]
   140007315:	mov    QWORD PTR [rbx+0x38],rax
   140007319:	test   rax,rax
   14000731c:	jne    0x140007325
   14000731e:	mov    eax,edi
   140007320:	jmp    0x1400073b5
   140007325:	cmp    DWORD PTR [rbx+0x2c],r12d
   140007329:	jne    0x140007337
   14000732b:	mov    ecx,DWORD PTR [rbx+0x28]
   14000732e:	mov    QWORD PTR [rbx+0x30],r12
   140007332:	shl    edi,cl
   140007334:	mov    DWORD PTR [rbx+0x2c],edi
   140007337:	sub    ebp,DWORD PTR [rsi+0x18]
   14000733a:	mov    edi,DWORD PTR [rbx+0x2c]
   14000733d:	mov    rdx,QWORD PTR [rsi+0x10]
   140007341:	cmp    ebp,edi
   140007343:	jb     0x14000735d
   140007345:	mov    rcx,QWORD PTR [rbx+0x38]
   140007349:	mov    r8d,edi
   14000734c:	sub    rdx,rdi
   14000734f:	call   0x14000a140
   140007354:	mov    DWORD PTR [rbx+0x34],r12d
   140007358:	mov    eax,DWORD PTR [rbx+0x2c]
   14000735b:	jmp    0x1400073b0
   14000735d:	sub    edi,DWORD PTR [rbx+0x34]
   140007360:	mov    ecx,DWORD PTR [rbx+0x34]
   140007363:	mov    eax,ebp
   140007365:	cmp    edi,ebp
   140007367:	cmova  edi,ebp
   14000736a:	add    rcx,QWORD PTR [rbx+0x38]
   14000736e:	sub    rdx,rax
   140007371:	mov    r8d,edi
   140007374:	call   0x14000a140
   140007379:	sub    ebp,edi
   14000737b:	je     0x140007395
   14000737d:	mov    rdx,QWORD PTR [rsi+0x10]
   140007381:	mov    rcx,QWORD PTR [rbx+0x38]
   140007385:	mov    r8d,ebp
   140007388:	sub    rdx,r8
   14000738b:	call   0x14000a140
   140007390:	mov    DWORD PTR [rbx+0x34],ebp
   140007393:	jmp    0x140007358
   140007395:	add    DWORD PTR [rbx+0x34],edi
   140007398:	mov    eax,DWORD PTR [rbx+0x34]
   14000739b:	mov    ecx,DWORD PTR [rbx+0x2c]
   14000739e:	cmp    eax,ecx
   1400073a0:	cmove  eax,r12d
   1400073a4:	mov    DWORD PTR [rbx+0x34],eax
   1400073a7:	mov    eax,DWORD PTR [rbx+0x30]
   1400073aa:	cmp    eax,ecx
   1400073ac:	jae    0x1400073b3
   1400073ae:	add    eax,edi
   1400073b0:	mov    DWORD PTR [rbx+0x30],eax
   1400073b3:	xor    eax,eax
   1400073b5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400073ba:	mov    rbp,QWORD PTR [rsp+0x38]
   1400073bf:	mov    rsi,QWORD PTR [rsp+0x40]
   1400073c4:	mov    rdi,QWORD PTR [rsp+0x48]
   1400073c9:	add    rsp,0x20
   1400073cd:	pop    r12
   1400073cf:	ret    
   1400073d0:	mov    DWORD PTR [rsp+0x10],edx
   1400073d4:	push   rbp
   1400073d5:	push   rbx
   1400073d6:	push   rsi
   1400073d7:	push   rdi
   1400073d8:	push   r12
   1400073da:	push   r13
   1400073dc:	push   r14
   1400073de:	push   r15
   1400073e0:	mov    rbp,rsp
   1400073e3:	sub    rsp,0x58
   1400073e7:	xor    r11d,r11d
   1400073ea:	mov    ebx,edx
   1400073ec:	mov    r14,rcx
   1400073ef:	test   rcx,rcx
   1400073f2:	je     0x1400074bb
   1400073f8:	mov    rdi,QWORD PTR [rcx+0x28]
   1400073fc:	test   rdi,rdi
   1400073ff:	je     0x1400074bb
   140007405:	cmp    QWORD PTR [rcx+0x10],r11
   140007409:	je     0x1400074bb
   14000740f:	cmp    QWORD PTR [rcx],r11
   140007412:	jne    0x14000741e
   140007414:	cmp    DWORD PTR [rcx+0x8],r11d
   140007418:	jne    0x1400074bb
   14000741e:	mov    eax,DWORD PTR [rdi]
   140007420:	mov    r12d,DWORD PTR [rdi+0x40]
   140007424:	mov    esi,DWORD PTR [rdi+0x44]
   140007427:	cmp    eax,0xb
   14000742a:	mov    ecx,0xc
   14000742f:	mov    DWORD PTR [rbp+0x48],r11d
   140007433:	cmove  eax,ecx
   140007436:	mov    DWORD PTR [rdi],eax
   140007438:	mov    r9d,DWORD PTR [r14+0x18]
   14000743c:	mov    r13,QWORD PTR [r14]
   14000743f:	mov    r15d,DWORD PTR [r14+0x8]
   140007443:	mov    r10,QWORD PTR [r14+0x10]
   140007447:	mov    QWORD PTR [rbp-0x18],r13
   14000744b:	mov    DWORD PTR [rbp-0x20],r15d
   14000744f:	mov    r8d,r9d
   140007452:	mov    DWORD PTR [rbp+0x60],r9d
   140007456:	mov    edx,0x10
   14000745b:	mov    DWORD PTR [rbp+0x58],r9d
   14000745f:	mov    QWORD PTR [rbp-0x10],r10
   140007463:	mov    eax,0x7
   140007468:	mov    ecx,DWORD PTR [rdi]
   14000746a:	cmp    ecx,0xe
   14000746d:	jg     0x140007da3
   140007473:	je     0x140007b44
   140007479:	cmp    ecx,eax
   14000747b:	jg     0x140007ab4
   140007481:	je     0x14000783e
   140007487:	test   ecx,ecx
   140007489:	je     0x14000791b
   14000748f:	dec    ecx
   140007491:	je     0x1400074f3
   140007493:	dec    ecx
   140007495:	je     0x140007593
   14000749b:	dec    ecx
   14000749d:	je     0x140007619
   1400074a3:	dec    ecx
   1400074a5:	je     0x140007677
   1400074ab:	dec    ecx
   1400074ad:	je     0x140007697
   1400074b3:	dec    ecx
   1400074b5:	je     0x1400077a5
   1400074bb:	mov    eax,0xfffffffe
   1400074c0:	add    rsp,0x58
   1400074c4:	pop    r15
   1400074c6:	pop    r14
   1400074c8:	pop    r13
   1400074ca:	pop    r12
   1400074cc:	pop    rdi
   1400074cd:	pop    rsi
   1400074ce:	pop    rbx
   1400074cf:	pop    rbp
   1400074d0:	ret    
   1400074d1:	test   r15d,r15d
   1400074d4:	je     0x1400078ba
   1400074da:	movzx  eax,BYTE PTR [r13+0x0]
   1400074df:	mov    ecx,esi
   1400074e1:	inc    r13
   1400074e4:	shl    eax,cl
   1400074e6:	dec    r15d
   1400074e9:	mov    QWORD PTR [rbp-0x18],r13
   1400074ed:	add    r12d,eax
   1400074f0:	add    esi,0x8
   1400074f3:	cmp    esi,edx
   1400074f5:	jb     0x1400074d1
   1400074f7:	mov    DWORD PTR [rdi+0x10],r12d
   1400074fb:	cmp    r12b,0x8
   1400074ff:	je     0x14000750d
   140007501:	lea    rax,[rip+0x152d8]        # 0x14001c7e0
   140007508:	jmp    0x140007a68
   14000750d:	test   r12d,0xe000
   140007514:	je     0x140007522
   140007516:	lea    rax,[rip+0x152a3]        # 0x14001c7c0
   14000751d:	jmp    0x140007a68
   140007522:	mov    rcx,QWORD PTR [rdi+0x20]
   140007526:	test   rcx,rcx
   140007529:	je     0x140007536
   14000752b:	mov    eax,r12d
   14000752e:	shr    eax,0x8
   140007531:	and    eax,0x1
   140007534:	mov    DWORD PTR [rcx],eax
   140007536:	test   DWORD PTR [rdi+0x10],0x200
   14000753d:	je     0x140007563
   14000753f:	mov    BYTE PTR [rbp-0x28],r12b
   140007543:	shr    r12d,0x8
   140007547:	lea    rdx,[rbp-0x28]
   14000754b:	mov    BYTE PTR [rbp-0x27],r12b
   14000754f:	mov    ecx,DWORD PTR [rdi+0x18]
   140007552:	mov    r8d,0x2
   140007558:	call   0x14000985c
   14000755d:	xor    r11d,r11d
   140007560:	mov    DWORD PTR [rdi+0x18],eax
   140007563:	mov    r12d,r11d
   140007566:	mov    esi,r11d
   140007569:	mov    DWORD PTR [rdi],0x2
   14000756f:	jmp    0x140007593
   140007571:	test   r15d,r15d
   140007574:	je     0x1400078ba
   14000757a:	movzx  eax,BYTE PTR [r13+0x0]
   14000757f:	mov    ecx,esi
   140007581:	inc    r13
   140007584:	shl    eax,cl
   140007586:	dec    r15d
   140007589:	mov    QWORD PTR [rbp-0x18],r13
   14000758d:	add    r12d,eax
   140007590:	add    esi,0x8
   140007593:	cmp    esi,0x20
   140007596:	jb     0x140007571
   140007598:	mov    rax,QWORD PTR [rdi+0x20]
   14000759c:	test   rax,rax
   14000759f:	je     0x1400075a5
   1400075a1:	mov    DWORD PTR [rax+0x4],r12d
   1400075a5:	test   DWORD PTR [rdi+0x10],0x200
   1400075ac:	je     0x1400075e4
   1400075ae:	mov    eax,r12d
   1400075b1:	mov    BYTE PTR [rbp-0x28],r12b
   1400075b5:	lea    rdx,[rbp-0x28]
   1400075b9:	shr    eax,0x8
   1400075bc:	mov    r8d,0x4
   1400075c2:	mov    BYTE PTR [rbp-0x27],al
   1400075c5:	mov    eax,r12d
   1400075c8:	shr    r12d,0x18
   1400075cc:	shr    eax,0x10
   1400075cf:	mov    BYTE PTR [rbp-0x25],r12b
   1400075d3:	mov    BYTE PTR [rbp-0x26],al
   1400075d6:	mov    ecx,DWORD PTR [rdi+0x18]
   1400075d9:	call   0x14000985c
   1400075de:	xor    r11d,r11d
   1400075e1:	mov    DWORD PTR [rdi+0x18],eax
   1400075e4:	mov    r12d,r11d
   1400075e7:	mov    esi,r11d
   1400075ea:	mov    DWORD PTR [rdi],0x3
   1400075f0:	mov    edx,0x10
   1400075f5:	jmp    0x140007619
   1400075f7:	test   r15d,r15d
   1400075fa:	je     0x1400078ba
   140007600:	movzx  eax,BYTE PTR [r13+0x0]
   140007605:	mov    ecx,esi
   140007607:	inc    r13
   14000760a:	shl    eax,cl
   14000760c:	dec    r15d
   14000760f:	mov    QWORD PTR [rbp-0x18],r13
   140007613:	add    r12d,eax
   140007616:	add    esi,0x8
   140007619:	cmp    esi,edx
   14000761b:	jb     0x1400075f7
   14000761d:	mov    rcx,QWORD PTR [rdi+0x20]
   140007621:	test   rcx,rcx
   140007624:	je     0x14000763a
   140007626:	movzx  eax,r12b
   14000762a:	mov    DWORD PTR [rcx+0x8],eax
   14000762d:	mov    rax,QWORD PTR [rdi+0x20]
   140007631:	mov    ecx,r12d
   140007634:	shr    ecx,0x8
   140007637:	mov    DWORD PTR [rax+0xc],ecx
   14000763a:	test   DWORD PTR [rdi+0x10],0x200
   140007641:	je     0x14000766b
   140007643:	mov    BYTE PTR [rbp-0x28],r12b
   140007647:	shr    r12d,0x8
   14000764b:	lea    rdx,[rbp-0x28]
   14000764f:	mov    BYTE PTR [rbp-0x27],r12b
   140007653:	mov    ecx,DWORD PTR [rdi+0x18]
   140007656:	mov    r8d,0x2
   14000765c:	call   0x14000985c
   140007661:	xor    r11d,r11d
   140007664:	mov    DWORD PTR [rdi+0x18],eax
   140007667:	lea    edx,[r11+0x10]
   14000766b:	mov    r12d,r11d
   14000766e:	mov    esi,r11d
   140007671:	mov    DWORD PTR [rdi],0x4
   140007677:	test   DWORD PTR [rdi+0x10],0x400
   14000767e:	jne    0x140007706
   140007684:	mov    rax,QWORD PTR [rdi+0x20]
   140007688:	test   rax,rax
   14000768b:	je     0x140007691
   14000768d:	mov    QWORD PTR [rax+0x10],r11
   140007691:	mov    DWORD PTR [rdi],0x5
   140007697:	test   DWORD PTR [rdi+0x10],0x400
   14000769e:	je     0x14000779b
   1400076a4:	mov    ebx,DWORD PTR [rdi+0x48]
   1400076a7:	cmp    ebx,r15d
   1400076aa:	cmova  ebx,r15d
   1400076ae:	test   ebx,ebx
   1400076b0:	je     0x140007791
   1400076b6:	mov    rax,QWORD PTR [rdi+0x20]
   1400076ba:	test   rax,rax
   1400076bd:	je     0x140007765
   1400076c3:	mov    r9,QWORD PTR [rax+0x10]
   1400076c7:	test   r9,r9
   1400076ca:	je     0x140007765
   1400076d0:	mov    edx,DWORD PTR [rax+0x18]
   1400076d3:	mov    ecx,DWORD PTR [rax+0x1c]
   1400076d6:	sub    edx,DWORD PTR [rdi+0x48]
   1400076d9:	lea    eax,[rbx+rdx*1]
   1400076dc:	cmp    eax,ecx
   1400076de:	jbe    0x140007753
   1400076e0:	sub    ecx,edx
   1400076e2:	jmp    0x140007755
   1400076e4:	test   r15d,r15d
   1400076e7:	je     0x1400078ba
   1400076ed:	movzx  eax,BYTE PTR [r13+0x0]
   1400076f2:	mov    ecx,esi
   1400076f4:	inc    r13
   1400076f7:	shl    eax,cl
   1400076f9:	dec    r15d
   1400076fc:	mov    QWORD PTR [rbp-0x18],r13
   140007700:	add    r12d,eax
   140007703:	add    esi,0x8
   140007706:	cmp    esi,edx
   140007708:	jb     0x1400076e4
   14000770a:	mov    rax,QWORD PTR [rdi+0x20]
   14000770e:	mov    DWORD PTR [rdi+0x48],r12d
   140007712:	test   rax,rax
   140007715:	je     0x14000771b
   140007717:	mov    DWORD PTR [rax+0x18],r12d
   14000771b:	test   DWORD PTR [rdi+0x10],0x200
   140007722:	je     0x140007748
   140007724:	mov    BYTE PTR [rbp-0x28],r12b
   140007728:	shr    r12d,0x8
   14000772c:	lea    rdx,[rbp-0x28]
   140007730:	mov    BYTE PTR [rbp-0x27],r12b
   140007734:	mov    ecx,DWORD PTR [rdi+0x18]
   140007737:	mov    r8d,0x2
   14000773d:	call   0x14000985c
   140007742:	xor    r11d,r11d
   140007745:	mov    DWORD PTR [rdi+0x18],eax
   140007748:	mov    r12d,r11d
   14000774b:	mov    esi,r11d
   14000774e:	jmp    0x140007691
   140007753:	mov    ecx,ebx
   140007755:	mov    r8d,ecx
   140007758:	mov    ecx,edx
   14000775a:	mov    rdx,r13
   14000775d:	add    rcx,r9
   140007760:	call   0x14000a140
   140007765:	test   DWORD PTR [rdi+0x10],0x200
   14000776c:	je     0x14000777f
   14000776e:	mov    ecx,DWORD PTR [rdi+0x18]
   140007771:	mov    r8d,ebx
   140007774:	mov    rdx,r13
   140007777:	call   0x14000985c
   14000777c:	mov    DWORD PTR [rdi+0x18],eax
   14000777f:	sub    DWORD PTR [rdi+0x48],ebx
   140007782:	mov    eax,ebx
   140007784:	sub    r15d,ebx
   140007787:	add    r13,rax
   14000778a:	xor    r11d,r11d
   14000778d:	mov    QWORD PTR [rbp-0x18],r13
   140007791:	cmp    DWORD PTR [rdi+0x48],r11d
   140007795:	jne    0x1400078ba
   14000779b:	mov    DWORD PTR [rdi+0x48],r11d
   14000779f:	mov    DWORD PTR [rdi],0x6
   1400077a5:	test   DWORD PTR [rdi+0x10],0x800
   1400077ac:	je     0x140007827
   1400077ae:	test   r15d,r15d
   1400077b1:	je     0x1400078ba
   1400077b7:	mov    ebx,r11d
   1400077ba:	mov    r8,r13
   1400077bd:	mov    rax,QWORD PTR [rdi+0x20]
   1400077c1:	movzx  r13d,BYTE PTR [r8]
   1400077c5:	inc    ebx
   1400077c7:	inc    r8
   1400077ca:	test   rax,rax
   1400077cd:	je     0x1400077e7
   1400077cf:	mov    rdx,QWORD PTR [rax+0x20]
   1400077d3:	test   rdx,rdx
   1400077d6:	je     0x1400077e7
   1400077d8:	mov    ecx,DWORD PTR [rdi+0x48]
   1400077db:	cmp    ecx,DWORD PTR [rax+0x28]
   1400077de:	jae    0x1400077e7
   1400077e0:	mov    BYTE PTR [rcx+rdx*1],r13b
   1400077e4:	inc    DWORD PTR [rdi+0x48]
   1400077e7:	test   r13d,r13d
   1400077ea:	je     0x1400077f1
   1400077ec:	cmp    ebx,r15d
   1400077ef:	jb     0x1400077bd
   1400077f1:	test   DWORD PTR [rdi+0x10],0x200
   1400077f8:	je     0x14000780f
   1400077fa:	mov    rdx,QWORD PTR [rbp-0x18]
   1400077fe:	mov    ecx,DWORD PTR [rdi+0x18]
   140007801:	mov    r8d,ebx
   140007804:	call   0x14000985c
   140007809:	xor    r11d,r11d
   14000780c:	mov    DWORD PTR [rdi+0x18],eax
   14000780f:	mov    eax,ebx
   140007811:	sub    r15d,ebx
   140007814:	add    QWORD PTR [rbp-0x18],rax
   140007818:	test   r13d,r13d
   14000781b:	jne    0x1400078ba
   140007821:	mov    r13,QWORD PTR [rbp-0x18]
   140007825:	jmp    0x140007834
   140007827:	mov    rax,QWORD PTR [rdi+0x20]
   14000782b:	test   rax,rax
   14000782e:	je     0x140007834
   140007830:	mov    QWORD PTR [rax+0x20],r11
   140007834:	mov    DWORD PTR [rdi+0x48],r11d
   140007838:	mov    DWORD PTR [rdi],0x7
   14000783e:	test   DWORD PTR [rdi+0x10],0x1000
   140007845:	je     0x140007a77
   14000784b:	test   r15d,r15d
   14000784e:	je     0x1400078ba
   140007850:	mov    ebx,r11d
   140007853:	mov    r8,r13
   140007856:	mov    rax,QWORD PTR [rdi+0x20]
   14000785a:	movzx  r13d,BYTE PTR [r8]
   14000785e:	inc    ebx
   140007860:	inc    r8
   140007863:	test   rax,rax
   140007866:	je     0x140007880
   140007868:	mov    rdx,QWORD PTR [rax+0x30]
   14000786c:	test   rdx,rdx
   14000786f:	je     0x140007880
   140007871:	mov    ecx,DWORD PTR [rdi+0x48]
   140007874:	cmp    ecx,DWORD PTR [rax+0x38]
   140007877:	jae    0x140007880
   140007879:	mov    BYTE PTR [rcx+rdx*1],r13b
   14000787d:	inc    DWORD PTR [rdi+0x48]
   140007880:	test   r13d,r13d
   140007883:	je     0x14000788a
   140007885:	cmp    ebx,r15d
   140007888:	jb     0x140007856
   14000788a:	test   DWORD PTR [rdi+0x10],0x200
   140007891:	je     0x1400078a8
   140007893:	mov    rdx,QWORD PTR [rbp-0x18]
   140007897:	mov    ecx,DWORD PTR [rdi+0x18]
   14000789a:	mov    r8d,ebx
   14000789d:	call   0x14000985c
   1400078a2:	xor    r11d,r11d
   1400078a5:	mov    DWORD PTR [rdi+0x18],eax
   1400078a8:	mov    eax,ebx
   1400078aa:	sub    r15d,ebx
   1400078ad:	add    QWORD PTR [rbp-0x18],rax
   1400078b1:	test   r13d,r13d
   1400078b4:	je     0x140007a84
   1400078ba:	mov    r13d,DWORD PTR [rbp+0x48]
   1400078be:	mov    rax,QWORD PTR [rbp-0x10]
   1400078c2:	mov    ebx,DWORD PTR [rbp+0x60]
   1400078c5:	mov    DWORD PTR [r14+0x8],r15d
   1400078c9:	mov    QWORD PTR [r14+0x10],rax
   1400078cd:	mov    eax,DWORD PTR [rbp+0x58]
   1400078d0:	mov    DWORD PTR [r14+0x18],eax
   1400078d4:	mov    rax,QWORD PTR [rbp-0x18]
   1400078d8:	mov    QWORD PTR [r14],rax
   1400078db:	mov    DWORD PTR [rdi+0x40],r12d
   1400078df:	xor    r12d,r12d
   1400078e2:	mov    DWORD PTR [rdi+0x44],esi
   1400078e5:	cmp    DWORD PTR [rdi+0x2c],r12d
   1400078e9:	jne    0x1400078fe
   1400078eb:	cmp    DWORD PTR [rdi],0x18
   1400078ee:	jge    0x1400088c3
   1400078f4:	cmp    ebx,DWORD PTR [r14+0x18]
   1400078f8:	je     0x1400088c3
   1400078fe:	mov    edx,ebx
   140007900:	mov    rcx,r14
   140007903:	call   0x1400072d4
   140007908:	test   eax,eax
   14000790a:	je     0x1400088c3
   140007910:	mov    DWORD PTR [rdi],0x1c
   140007916:	jmp    0x14000873c
   14000791b:	cmp    DWORD PTR [rdi+0x8],r11d
   14000791f:	jne    0x14000794a
   140007921:	mov    DWORD PTR [rdi],0xc
   140007927:	jmp    0x140007463
   14000792c:	test   r15d,r15d
   14000792f:	je     0x1400078ba
   140007931:	movzx  eax,BYTE PTR [r13+0x0]
   140007936:	mov    ecx,esi
   140007938:	inc    r13
   14000793b:	shl    eax,cl
   14000793d:	dec    r15d
   140007940:	mov    QWORD PTR [rbp-0x18],r13
   140007944:	add    r12d,eax
   140007947:	add    esi,0x8
   14000794a:	cmp    esi,edx
   14000794c:	jb     0x14000792c
   14000794e:	test   BYTE PTR [rdi+0x8],0x2
   140007952:	je     0x1400079ab
   140007954:	cmp    r12d,0x8b1f
   14000795b:	jne    0x1400079ab
   14000795d:	xor    r8d,r8d
   140007960:	xor    edx,edx
   140007962:	xor    ecx,ecx
   140007964:	call   0x14000985c
   140007969:	lea    rdx,[rbp-0x28]
   14000796d:	mov    r8d,0x2
   140007973:	mov    DWORD PTR [rdi+0x18],eax
   140007976:	mov    WORD PTR [rbp-0x28],r12w
   14000797b:	mov    ecx,DWORD PTR [rdi+0x18]
   14000797e:	call   0x14000985c
   140007983:	mov    DWORD PTR [rdi],0x1
   140007989:	mov    DWORD PTR [rdi+0x18],eax
   14000798c:	xor    r11d,r11d
   14000798f:	mov    esi,r11d
   140007992:	mov    r12d,r11d
   140007995:	mov    r10,QWORD PTR [rbp-0x10]
   140007999:	mov    r8d,DWORD PTR [rbp+0x60]
   14000799d:	mov    r9d,DWORD PTR [rbp+0x58]
   1400079a1:	mov    edx,0x10
   1400079a6:	jmp    0x140007463
   1400079ab:	mov    rax,QWORD PTR [rdi+0x20]
   1400079af:	mov    DWORD PTR [rdi+0x10],r11d
   1400079b3:	test   rax,rax
   1400079b6:	je     0x1400079bc
   1400079b8:	or     DWORD PTR [rax+0x40],0xffffffff
   1400079bc:	test   BYTE PTR [rdi+0x8],0x1
   1400079c0:	je     0x140007a61
   1400079c6:	movzx  ecx,r12b
   1400079ca:	mov    eax,r12d
   1400079cd:	shr    eax,0x8
   1400079d0:	shl    ecx,0x8
   1400079d3:	add    ecx,eax
   1400079d5:	mov    eax,0x8421085
   1400079da:	mul    ecx
   1400079dc:	mov    eax,ecx
   1400079de:	sub    eax,edx
   1400079e0:	shr    eax,1
   1400079e2:	add    eax,edx
   1400079e4:	shr    eax,0x4
   1400079e7:	imul   eax,eax,0x1f
   1400079ea:	cmp    ecx,eax
   1400079ec:	jne    0x140007a5c
   1400079ee:	mov    eax,r12d
   1400079f1:	and    al,0xf
   1400079f3:	cmp    al,0x8
   1400079f5:	je     0x140007a0a
   1400079f7:	lea    rax,[rip+0x14de2]        # 0x14001c7e0
   1400079fe:	mov    QWORD PTR [r14+0x20],rax
   140007a02:	mov    DWORD PTR [rdi],0x1b
   140007a08:	jmp    0x1400079a1
   140007a0a:	shr    r12d,0x4
   140007a0e:	add    esi,0xfffffffc
   140007a11:	mov    ecx,r12d
   140007a14:	and    ecx,0xf
   140007a17:	add    ecx,0x8
   140007a1a:	cmp    ecx,DWORD PTR [rdi+0x28]
   140007a1d:	jbe    0x140007a28
   140007a1f:	lea    rax,[rip+0x14d82]        # 0x14001c7a8
   140007a26:	jmp    0x1400079fe
   140007a28:	mov    eax,0x1
   140007a2d:	xor    r8d,r8d
   140007a30:	xor    edx,edx
   140007a32:	shl    eax,cl
   140007a34:	xor    ecx,ecx
   140007a36:	mov    DWORD PTR [rdi+0x14],eax
   140007a39:	call   0x14000927c
   140007a3e:	shr    r12d,0x8
   140007a42:	not    r12d
   140007a45:	mov    DWORD PTR [rdi+0x18],eax
   140007a48:	mov    DWORD PTR [r14+0x4c],eax
   140007a4c:	and    r12d,0x2
   140007a50:	or     r12d,0x9
   140007a54:	mov    DWORD PTR [rdi],r12d
   140007a57:	jmp    0x14000798c
   140007a5c:	mov    edx,0x10
   140007a61:	lea    rax,[rip+0x14d28]        # 0x14001c790
   140007a68:	mov    QWORD PTR [r14+0x20],rax
   140007a6c:	mov    DWORD PTR [rdi],0x1b
   140007a72:	jmp    0x140007463
   140007a77:	mov    rax,QWORD PTR [rdi+0x20]
   140007a7b:	test   rax,rax
   140007a7e:	je     0x140007a84
   140007a80:	mov    QWORD PTR [rax+0x30],r11
   140007a84:	mov    r13,QWORD PTR [rbp-0x18]
   140007a88:	mov    r8d,DWORD PTR [rbp+0x60]
   140007a8c:	mov    r9d,DWORD PTR [rbp+0x58]
   140007a90:	mov    r10,QWORD PTR [rbp-0x10]
   140007a94:	mov    ebx,DWORD PTR [rbp+0x50]
   140007a97:	mov    DWORD PTR [rdi],0x8
   140007a9d:	mov    edx,0x10
   140007aa2:	test   DWORD PTR [rdi+0x10],0x200
   140007aa9:	je     0x140007d47
   140007aaf:	jmp    0x140007d28
   140007ab4:	sub    ecx,0x8
   140007ab7:	je     0x140007aa2
   140007ab9:	dec    ecx
   140007abb:	je     0x140007bc8
   140007ac1:	dec    ecx
   140007ac3:	je     0x140007c06
   140007ac9:	dec    ecx
   140007acb:	je     0x140007c3c
   140007ad1:	dec    ecx
   140007ad3:	je     0x140007c45
   140007ad9:	dec    ecx
   140007adb:	jne    0x1400074bb
   140007ae1:	mov    ecx,esi
   140007ae3:	and    ecx,0x7
   140007ae6:	shr    r12d,cl
   140007ae9:	sub    esi,ecx
   140007aeb:	jmp    0x140007b0f
   140007aed:	test   r15d,r15d
   140007af0:	je     0x1400078ba
   140007af6:	movzx  eax,BYTE PTR [r13+0x0]
   140007afb:	mov    ecx,esi
   140007afd:	inc    r13
   140007b00:	shl    eax,cl
   140007b02:	dec    r15d
   140007b05:	mov    QWORD PTR [rbp-0x18],r13
   140007b09:	add    r12d,eax
   140007b0c:	add    esi,0x8
   140007b0f:	cmp    esi,0x20
   140007b12:	jb     0x140007aed
   140007b14:	mov    eax,r12d
   140007b17:	movzx  ecx,r12w
   140007b1b:	not    eax
   140007b1d:	shr    eax,0x10
   140007b20:	cmp    ecx,eax
   140007b22:	je     0x140007b30
   140007b24:	lea    rax,[rip+0x14c45]        # 0x14001c770
   140007b2b:	jmp    0x140007a68
   140007b30:	mov    DWORD PTR [rdi+0x48],ecx
   140007b33:	mov    r12d,r11d
   140007b36:	mov    esi,r11d
   140007b39:	mov    DWORD PTR [rdi],0xe
   140007b3f:	mov    eax,0x7
   140007b44:	mov    r13d,DWORD PTR [rdi+0x48]
   140007b48:	test   r13d,r13d
   140007b4b:	je     0x140007d94
   140007b51:	cmp    r13d,r15d
   140007b54:	cmova  r13d,r15d
   140007b58:	cmp    r13d,r9d
   140007b5b:	cmova  r13d,r9d
   140007b5f:	test   r13d,r13d
   140007b62:	je     0x1400078ba
   140007b68:	mov    rdx,QWORD PTR [rbp-0x18]
   140007b6c:	mov    r8d,r13d
   140007b6f:	mov    rcx,r10
   140007b72:	mov    ebx,r13d
   140007b75:	call   0x14000a140
   140007b7a:	add    QWORD PTR [rbp-0x18],rbx
   140007b7e:	mov    r9d,DWORD PTR [rbp+0x58]
   140007b82:	mov    r10,QWORD PTR [rbp-0x10]
   140007b86:	sub    r15d,r13d
   140007b89:	sub    r9d,r13d
   140007b8c:	add    r10,rbx
   140007b8f:	sub    DWORD PTR [rdi+0x48],r13d
   140007b93:	mov    r13,QWORD PTR [rbp-0x18]
   140007b97:	mov    ebx,DWORD PTR [rbp+0x50]
   140007b9a:	mov    r8d,DWORD PTR [rbp+0x60]
   140007b9e:	xor    r11d,r11d
   140007ba1:	jmp    0x140007456
   140007ba6:	test   r15d,r15d
   140007ba9:	je     0x1400078ba
   140007baf:	movzx  eax,BYTE PTR [r13+0x0]
   140007bb4:	mov    ecx,esi
   140007bb6:	inc    r13
   140007bb9:	shl    eax,cl
   140007bbb:	dec    r15d
   140007bbe:	mov    QWORD PTR [rbp-0x18],r13
   140007bc2:	add    r12d,eax
   140007bc5:	add    esi,0x8
   140007bc8:	cmp    esi,0x20
   140007bcb:	jb     0x140007ba6
   140007bcd:	mov    ecx,r12d
   140007bd0:	mov    eax,r12d
   140007bd3:	mov    edx,0xff00
   140007bd8:	shl    eax,0x10
   140007bdb:	and    ecx,edx
   140007bdd:	mov    esi,r11d
   140007be0:	add    ecx,eax
   140007be2:	mov    eax,r12d
   140007be5:	shr    r12d,0x18
   140007be9:	shr    eax,0x8
   140007bec:	shl    ecx,0x8
   140007bef:	and    eax,edx
   140007bf1:	add    eax,ecx
   140007bf3:	add    eax,r12d
   140007bf6:	mov    r12d,r11d
   140007bf9:	mov    DWORD PTR [rdi+0x18],eax
   140007bfc:	mov    DWORD PTR [r14+0x4c],eax
   140007c00:	mov    DWORD PTR [rdi],0xa
   140007c06:	cmp    DWORD PTR [rdi+0xc],r11d
   140007c0a:	je     0x140008881
   140007c10:	xor    r8d,r8d
   140007c13:	xor    edx,edx
   140007c15:	xor    ecx,ecx
   140007c17:	call   0x14000927c
   140007c1c:	mov    r8d,DWORD PTR [rbp+0x60]
   140007c20:	mov    r9d,DWORD PTR [rbp+0x58]
   140007c24:	mov    r10,QWORD PTR [rbp-0x10]
   140007c28:	xor    r11d,r11d
   140007c2b:	mov    DWORD PTR [rdi+0x18],eax
   140007c2e:	mov    DWORD PTR [r14+0x4c],eax
   140007c32:	mov    DWORD PTR [rdi],0xb
   140007c38:	lea    edx,[r11+0x10]
   140007c3c:	cmp    ebx,0x5
   140007c3f:	je     0x1400078ba
   140007c45:	cmp    DWORD PTR [rdi+0x4],r11d
   140007c49:	je     0x140007c86
   140007c4b:	mov    ecx,esi
   140007c4d:	mov    eax,0x7
   140007c52:	mov    DWORD PTR [rdi],0x18
   140007c58:	and    ecx,eax
   140007c5a:	shr    r12d,cl
   140007c5d:	sub    esi,ecx
   140007c5f:	jmp    0x140007468
   140007c64:	test   r15d,r15d
   140007c67:	je     0x1400078ba
   140007c6d:	movzx  eax,BYTE PTR [r13+0x0]
   140007c72:	mov    ecx,esi
   140007c74:	inc    r13
   140007c77:	shl    eax,cl
   140007c79:	dec    r15d
   140007c7c:	mov    QWORD PTR [rbp-0x18],r13
   140007c80:	add    r12d,eax
   140007c83:	add    esi,0x8
   140007c86:	cmp    esi,0x3
   140007c89:	jb     0x140007c64
   140007c8b:	mov    eax,r12d
   140007c8e:	shr    r12d,1
   140007c91:	dec    esi
   140007c93:	and    eax,0x1
   140007c96:	mov    DWORD PTR [rdi+0x4],eax
   140007c99:	mov    eax,r12d
   140007c9c:	and    eax,0x3
   140007c9f:	je     0x140007cf4
   140007ca1:	dec    eax
   140007ca3:	je     0x140007cc8
   140007ca5:	dec    eax
   140007ca7:	je     0x140007cc0
   140007ca9:	dec    eax
   140007cab:	jne    0x140007cfa
   140007cad:	lea    rax,[rip+0x14aa4]        # 0x14001c758
   140007cb4:	mov    QWORD PTR [r14+0x20],rax
   140007cb8:	mov    DWORD PTR [rdi],0x1b
   140007cbe:	jmp    0x140007cfa
   140007cc0:	mov    DWORD PTR [rdi],0xf
   140007cc6:	jmp    0x140007cfa
   140007cc8:	lea    rax,[rip+0x140a1]        # 0x14001bd70
   140007ccf:	mov    DWORD PTR [rdi+0x68],0x9
   140007cd6:	mov    DWORD PTR [rdi+0x6c],0x5
   140007cdd:	mov    QWORD PTR [rdi+0x58],rax
   140007ce1:	lea    rax,[rip+0x14888]        # 0x14001c570
   140007ce8:	mov    DWORD PTR [rdi],0x12
   140007cee:	mov    QWORD PTR [rdi+0x60],rax
   140007cf2:	jmp    0x140007cfa
   140007cf4:	mov    DWORD PTR [rdi],0xd
   140007cfa:	shr    r12d,0x2
   140007cfe:	add    esi,0xfffffffe
   140007d01:	jmp    0x140007463
   140007d06:	test   r15d,r15d
   140007d09:	je     0x1400078ba
   140007d0f:	movzx  eax,BYTE PTR [r13+0x0]
   140007d14:	mov    ecx,esi
   140007d16:	inc    r13
   140007d19:	shl    eax,cl
   140007d1b:	dec    r15d
   140007d1e:	mov    QWORD PTR [rbp-0x18],r13
   140007d22:	add    r12d,eax
   140007d25:	add    esi,0x8
   140007d28:	cmp    esi,edx
   140007d2a:	jb     0x140007d06
   140007d2c:	movzx  eax,WORD PTR [rdi+0x18]
   140007d30:	cmp    r12d,eax
   140007d33:	je     0x140007d41
   140007d35:	lea    rax,[rip+0x14a04]        # 0x14001c740
   140007d3c:	jmp    0x140007a68
   140007d41:	mov    r12d,r11d
   140007d44:	mov    esi,r11d
   140007d47:	mov    rcx,QWORD PTR [rdi+0x20]
   140007d4b:	test   rcx,rcx
   140007d4e:	je     0x140007d67
   140007d50:	mov    eax,DWORD PTR [rdi+0x10]
   140007d53:	sar    eax,0x9
   140007d56:	and    eax,0x1
   140007d59:	mov    DWORD PTR [rcx+0x3c],eax
   140007d5c:	mov    rax,QWORD PTR [rdi+0x20]
   140007d60:	mov    DWORD PTR [rax+0x40],0x1
   140007d67:	xor    r8d,r8d
   140007d6a:	xor    edx,edx
   140007d6c:	xor    ecx,ecx
   140007d6e:	call   0x14000985c
   140007d73:	mov    r8d,DWORD PTR [rbp+0x60]
   140007d77:	mov    r9d,DWORD PTR [rbp+0x58]
   140007d7b:	mov    r10,QWORD PTR [rbp-0x10]
   140007d7f:	mov    DWORD PTR [rdi+0x18],eax
   140007d82:	mov    DWORD PTR [r14+0x4c],eax
   140007d86:	mov    DWORD PTR [rdi],0xb
   140007d8c:	xor    r11d,r11d
   140007d8f:	jmp    0x1400079a1
   140007d94:	mov    r13,QWORD PTR [rbp-0x18]
   140007d98:	mov    DWORD PTR [rdi],0xb
   140007d9e:	jmp    0x140007468
   140007da3:	cmp    ecx,0x16
   140007da6:	jg     0x14000870f
   140007dac:	je     0x14000867c
   140007db2:	sub    ecx,0xf
   140007db5:	je     0x140007e0e
   140007db7:	dec    ecx
   140007db9:	je     0x140007e67
   140007dbf:	dec    ecx
   140007dc1:	je     0x140007f5e
   140007dc7:	dec    ecx
   140007dc9:	je     0x140008285
   140007dcf:	dec    ecx
   140007dd1:	je     0x14000845a
   140007dd7:	dec    ecx
   140007dd9:	je     0x1400084a8
   140007ddf:	dec    ecx
   140007de1:	jne    0x1400074bb
   140007de7:	jmp    0x140008614
   140007dec:	test   r15d,r15d
   140007def:	je     0x1400078ba
   140007df5:	movzx  eax,BYTE PTR [r13+0x0]
   140007dfa:	mov    ecx,esi
   140007dfc:	inc    r13
   140007dff:	shl    eax,cl
   140007e01:	dec    r15d
   140007e04:	mov    QWORD PTR [rbp-0x18],r13
   140007e08:	add    r12d,eax
   140007e0b:	add    esi,0x8
   140007e0e:	cmp    esi,0xe
   140007e11:	jb     0x140007dec
   140007e13:	mov    ecx,r12d
   140007e16:	shr    r12d,0x5
   140007e1a:	add    esi,0xfffffff2
   140007e1d:	mov    edx,r12d
   140007e20:	shr    r12d,0x5
   140007e24:	and    ecx,0x1f
   140007e27:	mov    eax,r12d
   140007e2a:	and    edx,0x1f
   140007e2d:	add    ecx,0x101
   140007e33:	and    eax,0xf
   140007e36:	inc    edx
   140007e38:	shr    r12d,0x4
   140007e3c:	add    eax,0x4
   140007e3f:	mov    DWORD PTR [rdi+0x74],ecx
   140007e42:	mov    DWORD PTR [rdi+0x78],edx
   140007e45:	mov    DWORD PTR [rdi+0x70],eax
   140007e48:	cmp    ecx,0x11e
   140007e4e:	ja     0x1400086a4
   140007e54:	cmp    edx,0x1e
   140007e57:	ja     0x1400086a4
   140007e5d:	mov    DWORD PTR [rdi+0x7c],r11d
   140007e61:	mov    DWORD PTR [rdi],0x10
   140007e67:	mov    edx,0x7
   140007e6c:	lea    r8,[rip+0x1477d]        # 0x14001c5f0
   140007e73:	mov    eax,DWORD PTR [rdi+0x70]
   140007e76:	cmp    DWORD PTR [rdi+0x7c],eax
   140007e79:	jae    0x140007edb
   140007e7b:	jmp    0x140007e9f
   140007e7d:	test   r15d,r15d
   140007e80:	je     0x1400078ba
   140007e86:	movzx  eax,BYTE PTR [r13+0x0]
   140007e8b:	mov    ecx,esi
   140007e8d:	inc    r13
   140007e90:	shl    eax,cl
   140007e92:	dec    r15d
   140007e95:	mov    QWORD PTR [rbp-0x18],r13
   140007e99:	add    r12d,eax
   140007e9c:	add    esi,0x8
   140007e9f:	cmp    esi,0x3
   140007ea2:	jb     0x140007e7d
   140007ea4:	mov    eax,DWORD PTR [rdi+0x7c]
   140007ea7:	movzx  ecx,r12w
   140007eab:	shr    r12d,0x3
   140007eaf:	movzx  eax,WORD PTR [r8+rax*2]
   140007eb4:	and    cx,dx
   140007eb7:	mov    WORD PTR [rdi+rax*2+0x88],cx
   140007ebf:	inc    DWORD PTR [rdi+0x7c]
   140007ec2:	add    esi,0xfffffffd
   140007ec5:	jmp    0x140007e73
   140007ec7:	mov    eax,DWORD PTR [rdi+0x7c]
   140007eca:	movzx  ecx,WORD PTR [r8+rax*2]
   140007ecf:	mov    WORD PTR [rdi+rcx*2+0x88],r11w
   140007ed8:	inc    DWORD PTR [rdi+0x7c]
   140007edb:	cmp    DWORD PTR [rdi+0x7c],0x13
   140007edf:	jb     0x140007ec7
   140007ee1:	lea    rcx,[rdi+0x68]
   140007ee5:	lea    rax,[rdi+0x548]
   140007eec:	lea    r9,[rdi+0x80]
   140007ef3:	mov    DWORD PTR [rcx],edx
   140007ef5:	mov    QWORD PTR [r9],rax
   140007ef8:	mov    QWORD PTR [rdi+0x58],rax
   140007efc:	lea    rax,[rdi+0x308]
   140007f03:	lea    rdx,[rdi+0x88]
   140007f0a:	mov    QWORD PTR [rsp+0x28],rax
   140007f0f:	mov    QWORD PTR [rsp+0x20],rcx
   140007f14:	xor    ecx,ecx
   140007f16:	lea    r8d,[rcx+0x13]
   140007f1a:	call   0x140008e14
   140007f1f:	mov    r10,QWORD PTR [rbp-0x10]
   140007f23:	xor    r11d,r11d
   140007f26:	mov    DWORD PTR [rbp+0x48],eax
   140007f29:	lea    edx,[r11+0x10]
   140007f2d:	test   eax,eax
   140007f2f:	je     0x140007f4f
   140007f31:	mov    r8d,DWORD PTR [rbp+0x60]
   140007f35:	mov    r9d,DWORD PTR [rbp+0x58]
   140007f39:	lea    rax,[rip+0x147e0]        # 0x14001c720
   140007f40:	mov    QWORD PTR [r14+0x20],rax
   140007f44:	mov    DWORD PTR [rdi],0x1b
   140007f4a:	jmp    0x140007463
   140007f4f:	mov    r8d,0x11
   140007f55:	mov    DWORD PTR [rdi+0x7c],r11d
   140007f59:	mov    DWORD PTR [rdi],r8d
   140007f5c:	jmp    0x140007f64
   140007f5e:	mov    r8d,0x11
   140007f64:	mov    eax,DWORD PTR [rdi+0x78]
   140007f67:	add    eax,DWORD PTR [rdi+0x74]
   140007f6a:	cmp    DWORD PTR [rdi+0x7c],eax
   140007f6d:	jae    0x14000818e
   140007f73:	jmp    0x140007f97
   140007f75:	test   r15d,r15d
   140007f78:	je     0x1400078ba
   140007f7e:	movzx  eax,BYTE PTR [r13+0x0]
   140007f83:	mov    ecx,esi
   140007f85:	inc    r13
   140007f88:	shl    eax,cl
   140007f8a:	dec    r15d
   140007f8d:	mov    QWORD PTR [rbp-0x18],r13
   140007f91:	add    r12d,eax
   140007f94:	add    esi,0x8
   140007f97:	mov    ecx,DWORD PTR [rdi+0x68]
   140007f9a:	mov    eax,0x1
   140007f9f:	shl    eax,cl
   140007fa1:	lea    ecx,[rax-0x1]
   140007fa4:	mov    eax,r12d
   140007fa7:	and    rcx,rax
   140007faa:	mov    rax,QWORD PTR [rdi+0x58]
   140007fae:	mov    eax,DWORD PTR [rax+rcx*4]
   140007fb1:	mov    ecx,eax
   140007fb3:	mov    DWORD PTR [rbp-0x24],eax
   140007fb6:	shr    ecx,0x8
   140007fb9:	movzx  ecx,cl
   140007fbc:	cmp    ecx,esi
   140007fbe:	ja     0x140007f75
   140007fc0:	mov    ecx,eax
   140007fc2:	shr    ecx,0x10
   140007fc5:	cmp    cx,dx
   140007fc8:	jae    0x14000801e
   140007fca:	shr    eax,0x8
   140007fcd:	movzx  ecx,al
   140007fd0:	cmp    esi,ecx
   140007fd2:	jae    0x140007ffe
   140007fd4:	test   r15d,r15d
   140007fd7:	je     0x1400078ba
   140007fdd:	movzx  eax,BYTE PTR [r13+0x0]
   140007fe2:	mov    ecx,esi
   140007fe4:	inc    r13
   140007fe7:	shl    eax,cl
   140007fe9:	add    esi,0x8
   140007fec:	dec    r15d
   140007fef:	add    r12d,eax
   140007ff2:	movzx  eax,BYTE PTR [rbp-0x23]
   140007ff6:	mov    QWORD PTR [rbp-0x18],r13
   140007ffa:	cmp    esi,eax
   140007ffc:	jb     0x140007fd4
   140007ffe:	movzx  ecx,BYTE PTR [rbp-0x23]
   140008002:	movzx  eax,WORD PTR [rbp-0x22]
   140008006:	shr    r12d,cl
   140008009:	sub    esi,ecx
   14000800b:	mov    ecx,DWORD PTR [rdi+0x7c]
   14000800e:	mov    WORD PTR [rdi+rcx*2+0x88],ax
   140008016:	inc    DWORD PTR [rdi+0x7c]
   140008019:	jmp    0x140008151
   14000801e:	cmp    WORD PTR [rbp-0x22],dx
   140008022:	jne    0x140008087
   140008024:	movzx  edx,BYTE PTR [rbp-0x23]
   140008028:	lea    r8d,[rdx+0x2]
   14000802c:	jmp    0x140008050
   14000802e:	test   r15d,r15d
   140008031:	je     0x1400078ba
   140008037:	movzx  eax,BYTE PTR [r13+0x0]
   14000803c:	mov    ecx,esi
   14000803e:	inc    r13
   140008041:	shl    eax,cl
   140008043:	dec    r15d
   140008046:	mov    QWORD PTR [rbp-0x18],r13
   14000804a:	add    r12d,eax
   14000804d:	add    esi,0x8
   140008050:	cmp    esi,r8d
   140008053:	jb     0x14000802e
   140008055:	mov    eax,DWORD PTR [rdi+0x7c]
   140008058:	mov    ecx,edx
   14000805a:	sub    esi,edx
   14000805c:	shr    r12d,cl
   14000805f:	test   eax,eax
   140008061:	je     0x140008167
   140008067:	mov    edx,r12d
   14000806a:	dec    eax
   14000806c:	shr    r12d,0x2
   140008070:	movzx  r9d,WORD PTR [rdi+rax*2+0x88]
   140008079:	and    edx,0x3
   14000807c:	add    edx,0x3
   14000807f:	add    esi,0xfffffffe
   140008082:	jmp    0x140008125
   140008087:	cmp    WORD PTR [rbp-0x22],r8w
   14000808c:	movzx  r8d,BYTE PTR [rbp-0x23]
   140008091:	jne    0x1400080d9
   140008093:	lea    edx,[r8+0x3]
   140008097:	jmp    0x1400080bb
   140008099:	test   r15d,r15d
   14000809c:	je     0x1400078ba
   1400080a2:	movzx  eax,BYTE PTR [r13+0x0]
   1400080a7:	mov    ecx,esi
   1400080a9:	inc    r13
   1400080ac:	shl    eax,cl
   1400080ae:	dec    r15d
   1400080b1:	mov    QWORD PTR [rbp-0x18],r13
   1400080b5:	add    r12d,eax
   1400080b8:	add    esi,0x8
   1400080bb:	cmp    esi,edx
   1400080bd:	jb     0x140008099
   1400080bf:	mov    ecx,r8d
   1400080c2:	mov    eax,0xfffffffd
   1400080c7:	shr    r12d,cl
   1400080ca:	mov    edx,r12d
   1400080cd:	and    edx,0x7
   1400080d0:	add    edx,0x3
   1400080d3:	shr    r12d,0x3
   1400080d7:	jmp    0x14000811d
   1400080d9:	lea    edx,[r8+0x7]
   1400080dd:	jmp    0x140008101
   1400080df:	test   r15d,r15d
   1400080e2:	je     0x1400078ba
   1400080e8:	movzx  eax,BYTE PTR [r13+0x0]
   1400080ed:	mov    ecx,esi
   1400080ef:	inc    r13
   1400080f2:	shl    eax,cl
   1400080f4:	dec    r15d
   1400080f7:	mov    QWORD PTR [rbp-0x18],r13
   1400080fb:	add    r12d,eax
   1400080fe:	add    esi,0x8
   140008101:	cmp    esi,edx
   140008103:	jb     0x1400080df
   140008105:	mov    ecx,r8d
   140008108:	mov    eax,0xfffffff9
   14000810d:	shr    r12d,cl
   140008110:	mov    edx,r12d
   140008113:	and    edx,0x7f
   140008116:	add    edx,0xb
   140008119:	shr    r12d,0x7
   14000811d:	sub    eax,r8d
   140008120:	mov    r9d,r11d
   140008123:	add    esi,eax
   140008125:	mov    eax,DWORD PTR [rdi+0x7c]
   140008128:	lea    ecx,[rdx+rax*1]
   14000812b:	mov    eax,DWORD PTR [rdi+0x78]
   14000812e:	add    eax,DWORD PTR [rdi+0x74]
   140008131:	cmp    ecx,eax
   140008133:	ja     0x14000817d
   140008135:	test   edx,edx
   140008137:	je     0x14000814c
   140008139:	mov    eax,DWORD PTR [rdi+0x7c]
   14000813c:	mov    WORD PTR [rdi+rax*2+0x88],r9w
   140008145:	inc    DWORD PTR [rdi+0x7c]
   140008148:	dec    edx
   14000814a:	jne    0x140008139
   14000814c:	mov    edx,0x10
   140008151:	mov    eax,DWORD PTR [rdi+0x78]
   140008154:	add    eax,DWORD PTR [rdi+0x74]
   140008157:	cmp    DWORD PTR [rdi+0x7c],eax
   14000815a:	jae    0x14000818e
   14000815c:	mov    r8d,0x11
   140008162:	jmp    0x140007f97
   140008167:	lea    rax,[rip+0x14592]        # 0x14001c700
   14000816e:	mov    QWORD PTR [r14+0x20],rax
   140008172:	mov    DWORD PTR [rdi],0x1b
   140008178:	jmp    0x140007999
   14000817d:	lea    rax,[rip+0x1457c]        # 0x14001c700
   140008184:	mov    QWORD PTR [r14+0x20],rax
   140008188:	mov    DWORD PTR [rdi],0x1b
   14000818e:	cmp    DWORD PTR [rdi],0x1b
   140008191:	mov    r8d,DWORD PTR [rbp+0x60]
   140008195:	mov    r9d,DWORD PTR [rbp+0x58]
   140008199:	mov    edx,0x10
   14000819e:	lea    eax,[rdx-0x9]
   1400081a1:	je     0x140007468
   1400081a7:	mov    r8d,DWORD PTR [rdi+0x74]
   1400081ab:	lea    rax,[rdi+0x548]
   1400081b2:	lea    r13,[rdi+0x308]
   1400081b9:	mov    QWORD PTR [rdi+0x80],rax
   1400081c0:	mov    QWORD PTR [rdi+0x58],rax
   1400081c4:	lea    rax,[rdi+0x68]
   1400081c8:	lea    rdx,[rdi+0x88]
   1400081cf:	lea    r9,[rdi+0x80]
   1400081d6:	mov    ecx,0x1
   1400081db:	mov    QWORD PTR [rsp+0x28],r13
   1400081e0:	mov    DWORD PTR [rax],0x9
   1400081e6:	mov    QWORD PTR [rsp+0x20],rax
   1400081eb:	call   0x140008e14
   1400081f0:	xor    r11d,r11d
   1400081f3:	mov    DWORD PTR [rbp+0x48],eax
   1400081f6:	test   eax,eax
   1400081f8:	je     0x140008217
   1400081fa:	mov    r13,QWORD PTR [rbp-0x18]
   1400081fe:	mov    ebx,DWORD PTR [rbp+0x50]
   140008201:	lea    rax,[rip+0x144d8]        # 0x14001c6e0
   140008208:	mov    QWORD PTR [r14+0x20],rax
   14000820c:	mov    DWORD PTR [rdi],0x1b
   140008212:	jmp    0x140007995
   140008217:	mov    rax,QWORD PTR [rdi+0x80]
   14000821e:	mov    r8d,DWORD PTR [rdi+0x78]
   140008222:	lea    rcx,[rdi+0x6c]
   140008226:	mov    QWORD PTR [rdi+0x60],rax
   14000822a:	mov    eax,DWORD PTR [rdi+0x74]
   14000822d:	mov    DWORD PTR [rcx],0x6
   140008233:	mov    QWORD PTR [rsp+0x28],r13
   140008238:	mov    QWORD PTR [rsp+0x20],rcx
   14000823d:	lea    r9,[rdi+0x80]
   140008244:	lea    rdx,[rdi+rax*2+0x88]
   14000824c:	mov    ecx,0x2
   140008251:	call   0x140008e14
   140008256:	mov    r13,QWORD PTR [rbp-0x18]
   14000825a:	mov    r8d,DWORD PTR [rbp+0x60]
   14000825e:	mov    r9d,DWORD PTR [rbp+0x58]
   140008262:	mov    r10,QWORD PTR [rbp-0x10]
   140008266:	mov    ebx,DWORD PTR [rbp+0x50]
   140008269:	xor    r11d,r11d
   14000826c:	mov    DWORD PTR [rbp+0x48],eax
   14000826f:	test   eax,eax
   140008271:	je     0x14000827f
   140008273:	lea    rax,[rip+0x1444e]        # 0x14001c6c8
   14000827a:	jmp    0x1400079fe
   14000827f:	mov    DWORD PTR [rdi],0x12
   140008285:	cmp    r15d,0x6
   140008289:	jb     0x1400082d4
   14000828b:	cmp    r9d,0x102
   140008292:	jb     0x1400082d4
   140008294:	mov    QWORD PTR [r14+0x10],r10
   140008298:	mov    DWORD PTR [r14+0x18],r9d
   14000829c:	mov    QWORD PTR [r14],r13
   14000829f:	mov    DWORD PTR [r14+0x8],r15d
   1400082a3:	mov    edx,r8d
   1400082a6:	mov    rcx,r14
   1400082a9:	mov    DWORD PTR [rdi+0x40],r12d
   1400082ad:	mov    DWORD PTR [rdi+0x44],esi
   1400082b0:	call   0x1400089b4
   1400082b5:	mov    r13,QWORD PTR [r14]
   1400082b8:	mov    r10,QWORD PTR [r14+0x10]
   1400082bc:	mov    r9d,DWORD PTR [r14+0x18]
   1400082c0:	mov    r15d,DWORD PTR [r14+0x8]
   1400082c4:	mov    r12d,DWORD PTR [rdi+0x40]
   1400082c8:	mov    esi,DWORD PTR [rdi+0x44]
   1400082cb:	mov    QWORD PTR [rbp-0x18],r13
   1400082cf:	jmp    0x140007b9a
   1400082d4:	mov    ecx,DWORD PTR [rdi+0x68]
   1400082d7:	mov    r11,QWORD PTR [rdi+0x58]
   1400082db:	mov    eax,0x1
   1400082e0:	shl    eax,cl
   1400082e2:	lea    ecx,[rax-0x1]
   1400082e5:	mov    eax,r12d
   1400082e8:	and    rcx,rax
   1400082eb:	mov    eax,DWORD PTR [r11+rcx*4]
   1400082ef:	jmp    0x14000832d
   1400082f1:	test   r15d,r15d
   1400082f4:	je     0x1400078ba
   1400082fa:	movzx  eax,BYTE PTR [r13+0x0]
   1400082ff:	mov    ecx,esi
   140008301:	inc    r13
   140008304:	shl    eax,cl
   140008306:	mov    ecx,DWORD PTR [rdi+0x68]
   140008309:	dec    r15d
   14000830c:	add    r12d,eax
   14000830f:	mov    eax,0x1
   140008314:	add    esi,0x8
   140008317:	shl    eax,cl
   140008319:	mov    QWORD PTR [rbp-0x18],r13
   14000831d:	lea    ecx,[rax-0x1]
   140008320:	mov    eax,r12d
   140008323:	and    rcx,rax
   140008326:	mov    rax,QWORD PTR [rdi+0x58]
   14000832a:	mov    eax,DWORD PTR [rax+rcx*4]
   14000832d:	mov    ecx,eax
   14000832f:	shr    ecx,0x8
   140008332:	movzx  ecx,cl
   140008335:	cmp    ecx,esi
   140008337:	ja     0x1400082f1
   140008339:	test   al,al
   14000833b:	je     0x1400083fb
   140008341:	test   al,0xf0
   140008343:	jne    0x1400083fb
   140008349:	mov    r10d,eax
   14000834c:	movzx  ecx,al
   14000834f:	mov    r9d,0x1
   140008355:	shr    r10d,0x8
   140008359:	mov    edx,eax
   14000835b:	mov    DWORD PTR [rbp-0x24],eax
   14000835e:	movzx  r8d,r10b
   140008362:	shr    eax,0x10
   140008365:	add    ecx,r8d
   140008368:	shl    r9d,cl
   14000836b:	mov    ecx,r8d
   14000836e:	dec    r9d
   140008371:	and    r9d,r12d
   140008374:	shr    r9d,cl
   140008377:	add    r9d,eax
   14000837a:	mov    eax,DWORD PTR [r11+r9*4]
   14000837e:	mov    ecx,eax
   140008380:	shr    ecx,0x8
   140008383:	movzx  r8d,cl
   140008387:	movzx  ecx,r10b
   14000838b:	add    r8d,ecx
   14000838e:	jmp    0x1400083ed
   140008390:	test   r15d,r15d
   140008393:	je     0x1400078ba
   140008399:	movzx  eax,BYTE PTR [r13+0x0]
   14000839e:	movzx  r9d,BYTE PTR [rbp-0x23]
   1400083a3:	mov    ecx,esi
   1400083a5:	shl    eax,cl
   1400083a7:	mov    r8d,0x1
   1400083ad:	movzx  ecx,dl
   1400083b0:	add    ecx,r9d
   1400083b3:	add    r12d,eax
   1400083b6:	movzx  eax,WORD PTR [rbp-0x22]
   1400083ba:	shl    r8d,cl
   1400083bd:	mov    ecx,r9d
   1400083c0:	inc    r13
   1400083c3:	dec    r8d
   1400083c6:	dec    r15d
   1400083c9:	add    esi,0x8
   1400083cc:	and    r8d,r12d
   1400083cf:	mov    QWORD PTR [rbp-0x18],r13
   1400083d3:	shr    r8d,cl
   1400083d6:	add    r8d,eax
   1400083d9:	mov    rax,QWORD PTR [rdi+0x58]
   1400083dd:	mov    eax,DWORD PTR [rax+r8*4]
   1400083e1:	mov    ecx,eax
   1400083e3:	shr    ecx,0x8
   1400083e6:	movzx  r8d,cl
   1400083ea:	add    r8d,r9d
   1400083ed:	cmp    r8d,esi
   1400083f0:	ja     0x140008390
   1400083f2:	movzx  ecx,BYTE PTR [rbp-0x23]
   1400083f6:	shr    r12d,cl
   1400083f9:	sub    esi,ecx
   1400083fb:	mov    ecx,eax
   1400083fd:	xor    r11d,r11d
   140008400:	shr    ecx,0x8
   140008403:	movzx  ecx,cl
   140008406:	shr    r12d,cl
   140008409:	sub    esi,ecx
   14000840b:	mov    ecx,eax
   14000840d:	shr    ecx,0x10
   140008410:	mov    DWORD PTR [rdi+0x48],ecx
   140008413:	test   al,al
   140008415:	jne    0x140008422
   140008417:	mov    DWORD PTR [rdi],0x17
   14000841d:	jmp    0x140007995
   140008422:	test   al,0x20
   140008424:	je     0x140008431
   140008426:	mov    DWORD PTR [rdi],0xb
   14000842c:	jmp    0x140007995
   140008431:	test   al,0x40
   140008433:	je     0x14000844b
   140008435:	lea    rax,[rip+0x1426c]        # 0x14001c6a8
   14000843c:	mov    QWORD PTR [r14+0x20],rax
   140008440:	mov    DWORD PTR [rdi],0x1b
   140008446:	jmp    0x140007995
   14000844b:	movzx  ecx,al
   14000844e:	mov    DWORD PTR [rdi],0x13
   140008454:	and    ecx,0xf
   140008457:	mov    DWORD PTR [rdi+0x50],ecx
   14000845a:	mov    edx,DWORD PTR [rdi+0x50]
   14000845d:	test   edx,edx
   14000845f:	je     0x1400084a2
   140008461:	cmp    esi,edx
   140008463:	jae    0x14000848c
   140008465:	test   r15d,r15d
   140008468:	je     0x1400078ba
   14000846e:	movzx  eax,BYTE PTR [r13+0x0]
   140008473:	mov    ecx,esi
   140008475:	inc    r13
   140008478:	shl    eax,cl
   14000847a:	add    esi,0x8
   14000847d:	dec    r15d
   140008480:	add    r12d,eax
   140008483:	mov    QWORD PTR [rbp-0x18],r13
   140008487:	cmp    esi,DWORD PTR [rdi+0x50]
   14000848a:	jb     0x140008465
   14000848c:	mov    ecx,edx
   14000848e:	mov    eax,0x1
   140008493:	shl    eax,cl
   140008495:	dec    eax
   140008497:	and    eax,r12d
   14000849a:	shr    r12d,cl
   14000849d:	add    DWORD PTR [rdi+0x48],eax
   1400084a0:	sub    esi,edx
   1400084a2:	mov    DWORD PTR [rdi],0x14
   1400084a8:	mov    ecx,DWORD PTR [rdi+0x6c]
   1400084ab:	mov    r11,QWORD PTR [rdi+0x60]
   1400084af:	mov    eax,0x1
   1400084b4:	shl    eax,cl
   1400084b6:	lea    ecx,[rax-0x1]
   1400084b9:	mov    eax,r12d
   1400084bc:	and    rcx,rax
   1400084bf:	mov    eax,DWORD PTR [r11+rcx*4]
   1400084c3:	jmp    0x140008501
   1400084c5:	test   r15d,r15d
   1400084c8:	je     0x1400078ba
   1400084ce:	movzx  eax,BYTE PTR [r13+0x0]
   1400084d3:	mov    ecx,esi
   1400084d5:	inc    r13
   1400084d8:	shl    eax,cl
   1400084da:	mov    ecx,DWORD PTR [rdi+0x6c]
   1400084dd:	dec    r15d
   1400084e0:	add    r12d,eax
   1400084e3:	mov    eax,0x1
   1400084e8:	add    esi,0x8
   1400084eb:	shl    eax,cl
   1400084ed:	mov    QWORD PTR [rbp-0x18],r13
   1400084f1:	lea    ecx,[rax-0x1]
   1400084f4:	mov    eax,r12d
   1400084f7:	and    rcx,rax
   1400084fa:	mov    rax,QWORD PTR [rdi+0x60]
   1400084fe:	mov    eax,DWORD PTR [rax+rcx*4]
   140008501:	mov    ecx,eax
   140008503:	shr    ecx,0x8
   140008506:	movzx  ecx,cl
   140008509:	cmp    ecx,esi
   14000850b:	ja     0x1400084c5
   14000850d:	test   al,0xf0
   14000850f:	jne    0x1400085c7
   140008515:	mov    r10d,eax
   140008518:	movzx  ecx,al
   14000851b:	mov    r9d,0x1
   140008521:	shr    r10d,0x8
   140008525:	mov    edx,eax
   140008527:	mov    DWORD PTR [rbp-0x24],eax
   14000852a:	movzx  r8d,r10b
   14000852e:	shr    eax,0x10
   140008531:	add    ecx,r8d
   140008534:	shl    r9d,cl
   140008537:	mov    ecx,r8d
   14000853a:	dec    r9d
   14000853d:	and    r9d,r12d
   140008540:	shr    r9d,cl
   140008543:	add    r9d,eax
   140008546:	mov    eax,DWORD PTR [r11+r9*4]
   14000854a:	mov    ecx,eax
   14000854c:	shr    ecx,0x8
   14000854f:	movzx  r8d,cl
   140008553:	movzx  ecx,r10b
   140008557:	add    r8d,ecx
   14000855a:	jmp    0x1400085b9
   14000855c:	test   r15d,r15d
   14000855f:	je     0x1400078ba
   140008565:	movzx  eax,BYTE PTR [r13+0x0]
   14000856a:	movzx  r9d,BYTE PTR [rbp-0x23]
   14000856f:	mov    ecx,esi
   140008571:	shl    eax,cl
   140008573:	mov    r8d,0x1
   140008579:	movzx  ecx,dl
   14000857c:	add    ecx,r9d
   14000857f:	add    r12d,eax
   140008582:	movzx  eax,WORD PTR [rbp-0x22]
   140008586:	shl    r8d,cl
   140008589:	mov    ecx,r9d
   14000858c:	inc    r13
   14000858f:	dec    r8d
   140008592:	dec    r15d
   140008595:	add    esi,0x8
   140008598:	and    r8d,r12d
   14000859b:	mov    QWORD PTR [rbp-0x18],r13
   14000859f:	shr    r8d,cl
   1400085a2:	add    r8d,eax
   1400085a5:	mov    rax,QWORD PTR [rdi+0x60]
   1400085a9:	mov    eax,DWORD PTR [rax+r8*4]
   1400085ad:	mov    ecx,eax
   1400085af:	shr    ecx,0x8
   1400085b2:	movzx  r8d,cl
   1400085b6:	add    r8d,r9d
   1400085b9:	cmp    r8d,esi
   1400085bc:	ja     0x14000855c
   1400085be:	movzx  ecx,BYTE PTR [rbp-0x23]
   1400085c2:	shr    r12d,cl
   1400085c5:	sub    esi,ecx
   1400085c7:	mov    r8d,DWORD PTR [rbp+0x60]
   1400085cb:	mov    r9d,DWORD PTR [rbp+0x58]
   1400085cf:	mov    r10,QWORD PTR [rbp-0x10]
   1400085d3:	mov    ecx,eax
   1400085d5:	shr    ecx,0x8
   1400085d8:	movzx  ecx,cl
   1400085db:	shr    r12d,cl
   1400085de:	sub    esi,ecx
   1400085e0:	test   al,0x40
   1400085e2:	je     0x1400085fa
   1400085e4:	lea    rax,[rip+0x140a5]        # 0x14001c690
   1400085eb:	mov    QWORD PTR [r14+0x20],rax
   1400085ef:	mov    DWORD PTR [rdi],0x1b
   1400085f5:	jmp    0x140007d8c
   1400085fa:	mov    ecx,eax
   1400085fc:	mov    DWORD PTR [rdi],0x15
   140008602:	shr    ecx,0x10
   140008605:	mov    DWORD PTR [rdi+0x4c],ecx
   140008608:	movzx  ecx,al
   14000860b:	and    ecx,0xf
   14000860e:	xor    r11d,r11d
   140008611:	mov    DWORD PTR [rdi+0x50],ecx
   140008614:	mov    edx,DWORD PTR [rdi+0x50]
   140008617:	test   edx,edx
   140008619:	je     0x14000865c
   14000861b:	cmp    esi,edx
   14000861d:	jae    0x140008646
   14000861f:	test   r15d,r15d
   140008622:	je     0x1400078ba
   140008628:	movzx  eax,BYTE PTR [r13+0x0]
   14000862d:	mov    ecx,esi
   14000862f:	inc    r13
   140008632:	shl    eax,cl
   140008634:	add    esi,0x8
   140008637:	dec    r15d
   14000863a:	add    r12d,eax
   14000863d:	mov    QWORD PTR [rbp-0x18],r13
   140008641:	cmp    esi,DWORD PTR [rdi+0x50]
   140008644:	jb     0x14000861f
   140008646:	mov    ecx,edx
   140008648:	mov    eax,0x1
   14000864d:	shl    eax,cl
   14000864f:	dec    eax
   140008651:	and    eax,r12d
   140008654:	shr    r12d,cl
   140008657:	add    DWORD PTR [rdi+0x4c],eax
   14000865a:	sub    esi,edx
   14000865c:	mov    eax,DWORD PTR [rdi+0x30]
   14000865f:	sub    eax,r9d
   140008662:	add    eax,r8d
   140008665:	cmp    DWORD PTR [rdi+0x4c],eax
   140008668:	jbe    0x140008676
   14000866a:	lea    rax,[rip+0x13fff]        # 0x14001c670
   140008671:	jmp    0x1400079fe
   140008676:	mov    DWORD PTR [rdi],0x16
   14000867c:	test   r9d,r9d
   14000867f:	je     0x1400078ba
   140008685:	mov    ecx,DWORD PTR [rdi+0x4c]
   140008688:	mov    eax,r8d
   14000868b:	sub    eax,r9d
   14000868e:	cmp    ecx,eax
   140008690:	jbe    0x1400086c1
   140008692:	sub    ecx,eax
   140008694:	mov    eax,DWORD PTR [rdi+0x34]
   140008697:	cmp    ecx,eax
   140008699:	jbe    0x1400086b0
   14000869b:	mov    edx,DWORD PTR [rdi+0x2c]
   14000869e:	sub    ecx,eax
   1400086a0:	sub    edx,ecx
   1400086a2:	jmp    0x1400086b4
   1400086a4:	lea    rax,[rip+0x13f9d]        # 0x14001c648
   1400086ab:	jmp    0x1400079fe
   1400086b0:	sub    eax,ecx
   1400086b2:	mov    edx,eax
   1400086b4:	mov    eax,DWORD PTR [rdi+0x48]
   1400086b7:	add    rdx,QWORD PTR [rdi+0x38]
   1400086bb:	cmp    ecx,eax
   1400086bd:	jbe    0x1400086cc
   1400086bf:	jmp    0x1400086ca
   1400086c1:	mov    eax,DWORD PTR [rdi+0x48]
   1400086c4:	mov    rdx,r10
   1400086c7:	sub    rdx,rcx
   1400086ca:	mov    ecx,eax
   1400086cc:	cmp    ecx,r9d
   1400086cf:	cmova  ecx,r9d
   1400086d3:	sub    r9d,ecx
   1400086d6:	sub    eax,ecx
   1400086d8:	sub    rdx,r10
   1400086db:	mov    DWORD PTR [rbp+0x58],r9d
   1400086df:	mov    DWORD PTR [rdi+0x48],eax
   1400086e2:	mov    al,BYTE PTR [rdx+r10*1]
   1400086e6:	mov    BYTE PTR [r10],al
   1400086e9:	inc    r10
   1400086ec:	dec    ecx
   1400086ee:	jne    0x1400086e2
   1400086f0:	mov    QWORD PTR [rbp-0x10],r10
   1400086f4:	lea    edx,[rcx+0x10]
   1400086f7:	lea    eax,[rcx+0x7]
   1400086fa:	cmp    DWORD PTR [rdi+0x48],r11d
   1400086fe:	jne    0x140007468
   140008704:	mov    DWORD PTR [rdi],0x12
   14000870a:	jmp    0x140007468
   14000870f:	sub    ecx,0x17
   140008712:	je     0x140008861
   140008718:	dec    ecx
   14000871a:	je     0x140008746
   14000871c:	dec    ecx
   14000871e:	je     0x140008812
   140008724:	dec    ecx
   140008726:	je     0x1400088b8
   14000872c:	dec    ecx
   14000872e:	je     0x1400088a1
   140008734:	dec    ecx
   140008736:	jne    0x1400074bb
   14000873c:	mov    eax,0xfffffffc
   140008741:	jmp    0x1400074c0
   140008746:	cmp    DWORD PTR [rdi+0x8],r11d
   14000874a:	je     0x14000880c
   140008750:	jmp    0x140008774
   140008752:	test   r15d,r15d
   140008755:	je     0x1400078ba
   14000875b:	movzx  eax,BYTE PTR [r13+0x0]
   140008760:	mov    ecx,esi
   140008762:	inc    r13
   140008765:	shl    eax,cl
   140008767:	dec    r15d
   14000876a:	mov    QWORD PTR [rbp-0x18],r13
   14000876e:	add    r12d,eax
   140008771:	add    esi,0x8
   140008774:	cmp    esi,0x20
   140008777:	jb     0x140008752
   140008779:	sub    r8d,r9d
   14000877c:	add    DWORD PTR [r14+0x1c],r8d
   140008780:	add    DWORD PTR [rdi+0x1c],r8d
   140008784:	test   r8d,r8d
   140008787:	je     0x1400087bd
   140008789:	mov    ecx,DWORD PTR [rdi+0x18]
   14000878c:	mov    eax,r8d
   14000878f:	mov    rdx,r10
   140008792:	sub    rdx,rax
   140008795:	cmp    DWORD PTR [rdi+0x10],r11d
   140008799:	je     0x1400087a2
   14000879b:	call   0x14000985c
   1400087a0:	jmp    0x1400087a7
   1400087a2:	call   0x14000927c
   1400087a7:	mov    r9d,DWORD PTR [rbp+0x58]
   1400087ab:	mov    r10,QWORD PTR [rbp-0x10]
   1400087af:	xor    r11d,r11d
   1400087b2:	mov    DWORD PTR [rdi+0x18],eax
   1400087b5:	lea    edx,[r11+0x10]
   1400087b9:	mov    DWORD PTR [r14+0x4c],eax
   1400087bd:	mov    ecx,r12d
   1400087c0:	mov    eax,r12d
   1400087c3:	mov    r8d,r9d
   1400087c6:	shl    eax,0x10
   1400087c9:	and    ecx,0xff00
   1400087cf:	mov    DWORD PTR [rbp+0x60],r9d
   1400087d3:	add    ecx,eax
   1400087d5:	mov    eax,r12d
   1400087d8:	shr    eax,0x8
   1400087db:	shl    ecx,0x8
   1400087de:	and    eax,0xff00
   1400087e3:	add    ecx,eax
   1400087e5:	mov    eax,r12d
   1400087e8:	shr    eax,0x18
   1400087eb:	add    ecx,eax
   1400087ed:	cmp    DWORD PTR [rdi+0x10],r11d
   1400087f1:	cmovne ecx,r12d
   1400087f5:	cmp    ecx,DWORD PTR [rdi+0x18]
   1400087f8:	je     0x140008806
   1400087fa:	lea    rax,[rip+0x13e2f]        # 0x14001c630
   140008801:	jmp    0x140007a68
   140008806:	mov    r12d,r11d
   140008809:	mov    esi,r11d
   14000880c:	mov    DWORD PTR [rdi],0x19
   140008812:	cmp    DWORD PTR [rdi+0x8],r11d
   140008816:	je     0x1400088b2
   14000881c:	cmp    DWORD PTR [rdi+0x10],r11d
   140008820:	je     0x1400088b2
   140008826:	jmp    0x14000884a
   140008828:	test   r15d,r15d
   14000882b:	je     0x1400078ba
   140008831:	movzx  eax,BYTE PTR [r13+0x0]
   140008836:	mov    ecx,esi
   140008838:	inc    r13
   14000883b:	shl    eax,cl
   14000883d:	dec    r15d
   140008840:	mov    QWORD PTR [rbp-0x18],r13
   140008844:	add    r12d,eax
   140008847:	add    esi,0x8
   14000884a:	cmp    esi,0x20
   14000884d:	jb     0x140008828
   14000884f:	cmp    r12d,DWORD PTR [rdi+0x1c]
   140008853:	je     0x1400088ac
   140008855:	lea    rax,[rip+0x13dbc]        # 0x14001c618
   14000885c:	jmp    0x140007a68
   140008861:	test   r9d,r9d
   140008864:	je     0x1400078ba
   14000886a:	mov    al,BYTE PTR [rdi+0x48]
   14000886d:	mov    BYTE PTR [r10],al
   140008870:	inc    r10
   140008873:	dec    r9d
   140008876:	mov    DWORD PTR [rdi],0x12
   14000887c:	jmp    0x14000745b
   140008881:	mov    QWORD PTR [r14+0x10],r10
   140008885:	mov    DWORD PTR [r14+0x18],r9d
   140008889:	mov    QWORD PTR [r14],r13
   14000888c:	mov    DWORD PTR [r14+0x8],r15d
   140008890:	mov    eax,0x2
   140008895:	mov    DWORD PTR [rdi+0x40],r12d
   140008899:	mov    DWORD PTR [rdi+0x44],esi
   14000889c:	jmp    0x1400074c0
   1400088a1:	mov    r13d,0xfffffffd
   1400088a7:	jmp    0x1400078be
   1400088ac:	mov    r12d,r11d
   1400088af:	mov    esi,r11d
   1400088b2:	mov    DWORD PTR [rdi],0x1a
   1400088b8:	mov    r13d,0x1
   1400088be:	jmp    0x1400078be
   1400088c3:	sub    ebx,DWORD PTR [r14+0x18]
   1400088c7:	mov    esi,DWORD PTR [rbp-0x20]
   1400088ca:	sub    esi,DWORD PTR [r14+0x8]
   1400088ce:	add    DWORD PTR [r14+0x1c],ebx
   1400088d2:	add    DWORD PTR [r14+0xc],esi
   1400088d6:	add    DWORD PTR [rdi+0x1c],ebx
   1400088d9:	cmp    DWORD PTR [rdi+0x8],r12d
   1400088dd:	je     0x14000890b
   1400088df:	test   ebx,ebx
   1400088e1:	je     0x14000890b
   1400088e3:	mov    rdx,QWORD PTR [r14+0x10]
   1400088e7:	mov    ecx,DWORD PTR [rdi+0x18]
   1400088ea:	mov    eax,ebx
   1400088ec:	sub    rdx,rax
   1400088ef:	mov    r8d,ebx
   1400088f2:	cmp    DWORD PTR [rdi+0x10],r12d
   1400088f6:	je     0x1400088ff
   1400088f8:	call   0x14000985c
   1400088fd:	jmp    0x140008904
   1400088ff:	call   0x14000927c
   140008904:	mov    DWORD PTR [rdi+0x18],eax
   140008907:	mov    DWORD PTR [r14+0x4c],eax
   14000890b:	mov    eax,DWORD PTR [rdi+0x4]
   14000890e:	mov    edx,0x80
   140008913:	neg    eax
   140008915:	mov    eax,r12d
   140008918:	sbb    ecx,ecx
   14000891a:	and    ecx,0x40
   14000891d:	cmp    DWORD PTR [rdi],0xb
   140008920:	cmove  eax,edx
   140008923:	add    ecx,eax
   140008925:	add    ecx,DWORD PTR [rdi+0x44]
   140008928:	mov    DWORD PTR [r14+0x48],ecx
   14000892c:	test   esi,esi
   14000892e:	jne    0x140008934
   140008930:	test   ebx,ebx
   140008932:	je     0x14000893a
   140008934:	cmp    DWORD PTR [rbp+0x50],0x4
   140008938:	jne    0x140008946
   14000893a:	mov    eax,0xfffffffb
   14000893f:	test   r13d,r13d
   140008942:	cmove  r13d,eax
   140008946:	mov    eax,r13d
   140008949:	jmp    0x1400074c0
   14000894e:	int3   
   14000894f:	int3   
   140008950:	rex push rbx
   140008952:	sub    rsp,0x20
   140008956:	mov    rbx,rcx
   140008959:	test   rcx,rcx
   14000895c:	je     0x140008994
   14000895e:	mov    rax,QWORD PTR [rcx+0x28]
   140008962:	test   rax,rax
   140008965:	je     0x140008994
   140008967:	mov    r8,QWORD PTR [rcx+0x38]
   14000896b:	test   r8,r8
   14000896e:	je     0x140008994
   140008970:	mov    rdx,QWORD PTR [rax+0x38]
   140008974:	test   rdx,rdx
   140008977:	je     0x140008980
   140008979:	mov    rcx,QWORD PTR [rcx+0x40]
   14000897d:	call   r8
   140008980:	mov    rdx,QWORD PTR [rbx+0x28]
   140008984:	mov    rcx,QWORD PTR [rbx+0x40]
   140008988:	call   QWORD PTR [rbx+0x38]
   14000898b:	and    QWORD PTR [rbx+0x28],0x0
   140008990:	xor    eax,eax
   140008992:	jmp    0x140008999
   140008994:	mov    eax,0xfffffffe
   140008999:	add    rsp,0x20
   14000899d:	pop    rbx
   14000899e:	ret    
   14000899f:	int3   
   1400089a0:	imul   edx,r8d
   1400089a4:	mov    ecx,edx
   1400089a6:	jmp    0x14000b2d4
   1400089ab:	int3   
   1400089ac:	mov    rcx,rdx
   1400089af:	jmp    0x14000b460
   1400089b4:	rex push rbx
   1400089b6:	push   rbp
   1400089b7:	push   rsi
   1400089b8:	push   rdi
   1400089b9:	push   r12
   1400089bb:	push   r13
   1400089bd:	push   r14
   1400089bf:	push   r15
   1400089c1:	sub    rsp,0x38
   1400089c5:	mov    r12,QWORD PTR [rcx+0x28]
   1400089c9:	mov    r14d,DWORD PTR [rcx+0x8]
   1400089cd:	mov    rdi,QWORD PTR [rcx]
   1400089d0:	mov    r8,QWORD PTR [rcx+0x10]
   1400089d4:	mov    r9,QWORD PTR [r12+0x58]
   1400089d9:	mov    rsi,QWORD PTR [r12+0x60]
   1400089de:	mov    r13d,DWORD PTR [r12+0x34]
   1400089e3:	mov    ebx,DWORD PTR [r12+0x40]
   1400089e8:	mov    r10d,DWORD PTR [r12+0x44]
   1400089ed:	mov    rbp,rcx
   1400089f0:	mov    ecx,DWORD PTR [rcx+0x18]
   1400089f3:	dec    r8
   1400089f6:	sub    edx,ecx
   1400089f8:	lea    r15d,[rcx-0x101]
   1400089ff:	mov    ecx,DWORD PTR [r12+0x68]
   140008a04:	mov    eax,edx
   140008a06:	mov    rdx,r8
   140008a09:	dec    rdi
   140008a0c:	sub    rdx,rax
   140008a0f:	mov    eax,DWORD PTR [r12+0x2c]
   140008a14:	add    r14d,0xfffffffb
   140008a18:	mov    DWORD PTR [rsp+0x80],eax
   140008a1f:	mov    eax,DWORD PTR [r12+0x30]
   140008a24:	mov    QWORD PTR [rsp+0x10],rdx
   140008a29:	mov    DWORD PTR [rsp+0x98],eax
   140008a30:	mov    rax,QWORD PTR [r12+0x38]
   140008a35:	mov    edx,0x1
   140008a3a:	mov    QWORD PTR [rsp+0x18],rax
   140008a3f:	mov    eax,0x1
   140008a44:	add    r14,rdi
   140008a47:	shl    eax,cl
   140008a49:	mov    ecx,DWORD PTR [r12+0x6c]
   140008a4e:	add    r15,r8
   140008a51:	shl    edx,cl
   140008a53:	dec    eax
   140008a55:	mov    QWORD PTR [rsp+0x8],r9
   140008a5a:	dec    edx
   140008a5c:	mov    QWORD PTR [rsp],rsi
   140008a60:	mov    DWORD PTR [rsp+0x90],edx
   140008a67:	mov    edx,eax
   140008a69:	mov    QWORD PTR [rsp+0x20],rdx
   140008a6e:	cmp    r10d,0xf
   140008a72:	jae    0x140008a92
   140008a74:	movzx  eax,BYTE PTR [rdi+0x1]
   140008a78:	mov    ecx,r10d
   140008a7b:	add    rdi,0x2
   140008a7f:	shl    eax,cl
   140008a81:	lea    ecx,[r10+0x8]
   140008a85:	add    ebx,eax
   140008a87:	movzx  eax,BYTE PTR [rdi]
   140008a8a:	shl    eax,cl
   140008a8c:	add    ebx,eax
   140008a8e:	add    r10d,0x10
   140008a92:	mov    eax,ebx
   140008a94:	and    rax,rdx
   140008a97:	jmp    0x140008abb
   140008a99:	test   dl,0x10
   140008a9c:	jne    0x140008ae5
   140008a9e:	test   dl,0x40
   140008aa1:	jne    0x140008d78
   140008aa7:	mov    ecx,edx
   140008aa9:	mov    eax,0x1
   140008aae:	shr    r11d,0x10
   140008ab2:	shl    eax,cl
   140008ab4:	dec    eax
   140008ab6:	and    eax,ebx
   140008ab8:	add    eax,r11d
   140008abb:	mov    r11d,DWORD PTR [r9+rax*4]
   140008abf:	mov    eax,r11d
   140008ac2:	movzx  edx,r11b
   140008ac6:	shr    eax,0x8
   140008ac9:	movzx  ecx,al
   140008acc:	shr    ebx,cl
   140008ace:	sub    r10d,ecx
   140008ad1:	test   r11b,r11b
   140008ad4:	jne    0x140008a99
   140008ad6:	inc    r8
   140008ad9:	shr    r11d,0x10
   140008add:	mov    BYTE PTR [r8],r11b
   140008ae0:	jmp    0x140008d64
   140008ae5:	shr    r11d,0x10
   140008ae9:	and    edx,0xf
   140008aec:	je     0x140008b19
   140008aee:	cmp    r10d,edx
   140008af1:	jae    0x140008b04
   140008af3:	inc    rdi
   140008af6:	mov    ecx,r10d
   140008af9:	movzx  eax,BYTE PTR [rdi]
   140008afc:	shl    eax,cl
   140008afe:	add    ebx,eax
   140008b00:	add    r10d,0x8
   140008b04:	mov    ecx,edx
   140008b06:	mov    eax,0x1
   140008b0b:	shl    eax,cl
   140008b0d:	dec    eax
   140008b0f:	and    eax,ebx
   140008b11:	shr    ebx,cl
   140008b13:	add    r11d,eax
   140008b16:	sub    r10d,edx
   140008b19:	cmp    r10d,0xf
   140008b1d:	jae    0x140008b3d
   140008b1f:	movzx  eax,BYTE PTR [rdi+0x1]
   140008b23:	mov    ecx,r10d
   140008b26:	add    rdi,0x2
   140008b2a:	shl    eax,cl
   140008b2c:	lea    ecx,[r10+0x8]
   140008b30:	add    ebx,eax
   140008b32:	movzx  eax,BYTE PTR [rdi]
   140008b35:	shl    eax,cl
   140008b37:	add    ebx,eax
   140008b39:	add    r10d,0x10
   140008b3d:	mov    ecx,DWORD PTR [rsp+0x90]
   140008b44:	mov    eax,ebx
   140008b46:	and    rcx,rax
   140008b49:	mov    esi,DWORD PTR [rsi+rcx*4]
   140008b4c:	jmp    0x140008b75
   140008b4e:	test   dl,0x40
   140008b51:	jne    0x140008d90
   140008b57:	movzx  eax,WORD PTR [rsp+0x8a]
   140008b5f:	mov    ecx,edx
   140008b61:	mov    edx,0x1
   140008b66:	shl    edx,cl
   140008b68:	mov    rcx,QWORD PTR [rsp]
   140008b6c:	dec    edx
   140008b6e:	and    edx,ebx
   140008b70:	add    edx,eax
   140008b72:	mov    esi,DWORD PTR [rcx+rdx*4]
   140008b75:	mov    eax,esi
   140008b77:	movzx  edx,sil
   140008b7b:	mov    DWORD PTR [rsp+0x88],esi
   140008b82:	shr    eax,0x8
   140008b85:	movzx  ecx,al
   140008b88:	shr    ebx,cl
   140008b8a:	sub    r10d,ecx
   140008b8d:	test   dl,0x10
   140008b90:	je     0x140008b4e
   140008b92:	and    edx,0xf
   140008b95:	shr    esi,0x10
   140008b98:	cmp    r10d,edx
   140008b9b:	jae    0x140008bc4
   140008b9d:	inc    rdi
   140008ba0:	mov    ecx,r10d
   140008ba3:	add    r10d,0x8
   140008ba7:	movzx  eax,BYTE PTR [rdi]
   140008baa:	shl    eax,cl
   140008bac:	add    ebx,eax
   140008bae:	cmp    r10d,edx
   140008bb1:	jae    0x140008bc4
   140008bb3:	inc    rdi
   140008bb6:	mov    ecx,r10d
   140008bb9:	movzx  eax,BYTE PTR [rdi]
   140008bbc:	shl    eax,cl
   140008bbe:	add    ebx,eax
   140008bc0:	add    r10d,0x8
   140008bc4:	mov    ecx,edx
   140008bc6:	mov    eax,0x1
   140008bcb:	sub    r10d,edx
   140008bce:	shl    eax,cl
   140008bd0:	dec    eax
   140008bd2:	and    eax,ebx
   140008bd4:	shr    ebx,cl
   140008bd6:	add    esi,eax
   140008bd8:	mov    eax,r8d
   140008bdb:	sub    eax,DWORD PTR [rsp+0x10]
   140008bdf:	cmp    esi,eax
   140008be1:	jbe    0x140008d0b
   140008be7:	mov    ecx,esi
   140008be9:	sub    ecx,eax
   140008beb:	cmp    ecx,DWORD PTR [rsp+0x98]
   140008bf2:	ja     0x140008d99
   140008bf8:	mov    rdx,QWORD PTR [rsp+0x18]
   140008bfd:	lea    r9,[rdx-0x1]
   140008c01:	test   r13d,r13d
   140008c04:	jne    0x140008c30
   140008c06:	mov    eax,DWORD PTR [rsp+0x80]
   140008c0d:	sub    eax,ecx
   140008c0f:	add    r9,rax
   140008c12:	cmp    ecx,r11d
   140008c15:	jae    0x140008ca4
   140008c1b:	sub    r11d,ecx
   140008c1e:	inc    r9
   140008c21:	inc    r8
   140008c24:	dec    ecx
   140008c26:	mov    al,BYTE PTR [r9]
   140008c29:	mov    BYTE PTR [r8],al
   140008c2c:	jne    0x140008c1e
   140008c2e:	jmp    0x140008c9c
   140008c30:	mov    eax,r13d
   140008c33:	sub    eax,ecx
   140008c35:	cmp    r13d,ecx
   140008c38:	jae    0x140008c81
   140008c3a:	add    eax,DWORD PTR [rsp+0x80]
   140008c41:	sub    ecx,r13d
   140008c44:	add    r9,rax
   140008c47:	cmp    ecx,r11d
   140008c4a:	jae    0x140008ca4
   140008c4c:	sub    r11d,ecx
   140008c4f:	sub    r9,r8
   140008c52:	inc    r8
   140008c55:	dec    ecx
   140008c57:	mov    al,BYTE PTR [r9+r8*1]
   140008c5b:	mov    BYTE PTR [r8],al
   140008c5e:	jne    0x140008c52
   140008c60:	lea    r9,[rdx-0x1]
   140008c64:	cmp    r13d,r11d
   140008c67:	jae    0x140008ca4
   140008c69:	mov    ecx,r13d
   140008c6c:	sub    r11d,r13d
   140008c6f:	inc    r9
   140008c72:	inc    r8
   140008c75:	dec    ecx
   140008c77:	mov    al,BYTE PTR [r9]
   140008c7a:	mov    BYTE PTR [r8],al
   140008c7d:	jne    0x140008c6f
   140008c7f:	jmp    0x140008c9c
   140008c81:	add    r9,rax
   140008c84:	cmp    ecx,r11d
   140008c87:	jae    0x140008ca4
   140008c89:	sub    r11d,ecx
   140008c8c:	inc    r9
   140008c8f:	inc    r8
   140008c92:	dec    ecx
   140008c94:	mov    al,BYTE PTR [r9]
   140008c97:	mov    BYTE PTR [r8],al
   140008c9a:	jne    0x140008c8c
   140008c9c:	mov    eax,esi
   140008c9e:	mov    r9,r8
   140008ca1:	sub    r9,rax
   140008ca4:	cmp    r11d,0x2
   140008ca8:	jbe    0x140008ce1
   140008caa:	lea    ecx,[r11-0x3]
   140008cae:	mov    eax,0xaaaaaaab
   140008cb3:	mul    ecx
   140008cb5:	shr    edx,1
   140008cb7:	lea    ecx,[rdx+0x1]
   140008cba:	mov    al,BYTE PTR [r9+0x1]
   140008cbe:	add    r9,0x3
   140008cc2:	add    r8,0x3
   140008cc6:	mov    BYTE PTR [r8-0x2],al
   140008cca:	mov    al,BYTE PTR [r9-0x1]
   140008cce:	add    r11d,0xfffffffd
   140008cd2:	dec    rcx
   140008cd5:	mov    BYTE PTR [r8-0x1],al
   140008cd9:	mov    al,BYTE PTR [r9]
   140008cdc:	mov    BYTE PTR [r8],al
   140008cdf:	jne    0x140008cba
   140008ce1:	test   r11d,r11d
   140008ce4:	je     0x140008d5b
   140008ce6:	mov    al,BYTE PTR [r9+0x1]
   140008cea:	mov    rsi,QWORD PTR [rsp]
   140008cee:	inc    r8
   140008cf1:	mov    BYTE PTR [r8],al
   140008cf4:	cmp    r11d,0x1
   140008cf8:	jbe    0x140008d04
   140008cfa:	mov    al,BYTE PTR [r9+0x2]
   140008cfe:	inc    r8
   140008d01:	mov    BYTE PTR [r8],al
   140008d04:	mov    r9,QWORD PTR [rsp+0x8]
   140008d09:	jmp    0x140008d64
   140008d0b:	mov    eax,esi
   140008d0d:	mov    rcx,r8
   140008d10:	sub    rcx,rax
   140008d13:	mov    al,BYTE PTR [rcx+0x1]
   140008d16:	add    rcx,0x3
   140008d1a:	add    r8,0x3
   140008d1e:	mov    BYTE PTR [r8-0x2],al
   140008d22:	mov    al,BYTE PTR [rcx-0x1]
   140008d25:	add    r11d,0xfffffffd
   140008d29:	mov    BYTE PTR [r8-0x1],al
   140008d2d:	mov    al,BYTE PTR [rcx]
   140008d2f:	mov    BYTE PTR [r8],al
   140008d32:	cmp    r11d,0x2
   140008d36:	ja     0x140008d13
   140008d38:	test   r11d,r11d
   140008d3b:	je     0x140008d60
   140008d3d:	mov    al,BYTE PTR [rcx+0x1]
   140008d40:	mov    rsi,QWORD PTR [rsp]
   140008d44:	inc    r8
   140008d47:	mov    BYTE PTR [r8],al
   140008d4a:	cmp    r11d,0x1
   140008d4e:	jbe    0x140008d64
   140008d50:	mov    al,BYTE PTR [rcx+0x2]
   140008d53:	inc    r8
   140008d56:	mov    BYTE PTR [r8],al
   140008d59:	jmp    0x140008d64
   140008d5b:	mov    r9,QWORD PTR [rsp+0x8]
   140008d60:	mov    rsi,QWORD PTR [rsp]
   140008d64:	cmp    rdi,r14
   140008d67:	jae    0x140008dac
   140008d69:	cmp    r8,r15
   140008d6c:	jae    0x140008dac
   140008d6e:	mov    rdx,QWORD PTR [rsp+0x20]
   140008d73:	jmp    0x140008a6e
   140008d78:	test   dl,0x20
   140008d7b:	je     0x140008d87
   140008d7d:	mov    DWORD PTR [r12],0xb
   140008d85:	jmp    0x140008dac
   140008d87:	lea    rax,[rip+0x1391a]        # 0x14001c6a8
   140008d8e:	jmp    0x140008da0
   140008d90:	lea    rax,[rip+0x138f9]        # 0x14001c690
   140008d97:	jmp    0x140008da0
   140008d99:	lea    rax,[rip+0x138d0]        # 0x14001c670
   140008da0:	mov    QWORD PTR [rbp+0x20],rax
   140008da4:	mov    DWORD PTR [r12],0x1b
   140008dac:	mov    ecx,r10d
   140008daf:	sub    r15d,r8d
   140008db2:	shr    ecx,0x3
   140008db5:	add    r15d,0x101
   140008dbc:	mov    eax,ecx
   140008dbe:	mov    DWORD PTR [rbp+0x18],r15d
   140008dc2:	sub    rdi,rax
   140008dc5:	mov    eax,ecx
   140008dc7:	shl    eax,0x3
   140008dca:	sub    r14d,edi
   140008dcd:	sub    r10d,eax
   140008dd0:	lea    rax,[rdi+0x1]
   140008dd4:	add    r14d,0x5
   140008dd8:	mov    QWORD PTR [rbp+0x0],rax
   140008ddc:	lea    rax,[r8+0x1]
   140008de0:	mov    DWORD PTR [rbp+0x8],r14d
   140008de4:	mov    QWORD PTR [rbp+0x10],rax
   140008de8:	mov    eax,0x1
   140008ded:	mov    ecx,r10d
   140008df0:	shl    eax,cl
   140008df2:	mov    DWORD PTR [r12+0x44],r10d
   140008df7:	dec    eax
   140008df9:	and    eax,ebx
   140008dfb:	mov    DWORD PTR [r12+0x40],eax
   140008e00:	add    rsp,0x38
   140008e04:	pop    r15
   140008e06:	pop    r14
   140008e08:	pop    r13
   140008e0a:	pop    r12
   140008e0c:	pop    rdi
   140008e0d:	pop    rsi
   140008e0e:	pop    rbp
   140008e0f:	pop    rbx
   140008e10:	ret    
   140008e11:	int3   
   140008e12:	int3   
   140008e13:	int3   
   140008e14:	mov    QWORD PTR [rsp+0x8],rbx
   140008e19:	push   rbp
   140008e1a:	push   rsi
   140008e1b:	push   rdi
   140008e1c:	push   r12
   140008e1e:	push   r13
   140008e20:	push   r14
   140008e22:	push   r15
   140008e24:	lea    rbp,[rsp-0x17]
   140008e29:	sub    rsp,0xa0
   140008e30:	mov    rax,QWORD PTR [rip+0x1a289]        # 0x1400230c0
   140008e37:	xor    rax,rsp
   140008e3a:	mov    QWORD PTR [rbp+0xf],rax
   140008e3e:	mov    rbx,QWORD PTR [rbp+0x7f]
   140008e42:	xor    r14d,r14d
   140008e45:	mov    r12d,ecx
   140008e48:	mov    DWORD PTR [rbp-0x69],ecx
   140008e4b:	mov    r10,r9
   140008e4e:	mov    QWORD PTR [rbp-0x49],r9
   140008e52:	mov    r9,QWORD PTR [rbp+0x77]
   140008e56:	lea    ecx,[r14+0x10]
   140008e5a:	lea    rdi,[rbp-0x31]
   140008e5e:	movzx  eax,r14w
   140008e62:	mov    r13,rdx
   140008e65:	mov    QWORD PTR [rbp-0x41],rdx
   140008e69:	mov    QWORD PTR [rbp-0x39],r9
   140008e6d:	mov    QWORD PTR [rbp-0x51],rbx
   140008e71:	lea    r15d,[r14+0x1]
   140008e75:	rep stos WORD PTR es:[rdi],ax
   140008e78:	test   r8d,r8d
   140008e7b:	je     0x140008e95
   140008e7d:	mov    rcx,rdx
   140008e80:	mov    edx,r8d
   140008e83:	movzx  eax,WORD PTR [rcx]
   140008e86:	add    rcx,0x2
   140008e8a:	add    WORD PTR [rbp+rax*2-0x31],r15w
   140008e90:	sub    rdx,r15
   140008e93:	jne    0x140008e83
   140008e95:	mov    r11d,DWORD PTR [r9]
   140008e98:	or     ecx,0xffffffff
   140008e9b:	mov    esi,0xf
   140008ea0:	mov    DWORD PTR [rbp-0x75],ecx
   140008ea3:	lea    rax,[rbp-0x13]
   140008ea7:	cmp    WORD PTR [rax],r14w
   140008eab:	jne    0x140008eb8
   140008ead:	add    esi,ecx
   140008eaf:	sub    rax,0x2
   140008eb3:	cmp    esi,r15d
   140008eb6:	jae    0x140008ea7
   140008eb8:	cmp    r11d,esi
   140008ebb:	cmova  r11d,esi
   140008ebf:	test   esi,esi
   140008ec1:	jne    0x140008ee9
   140008ec3:	mov    rcx,QWORD PTR [r10]
   140008ec6:	mov    DWORD PTR [rsp],0x140
   140008ecd:	mov    eax,DWORD PTR [rsp]
   140008ed0:	mov    DWORD PTR [rcx],eax
   140008ed2:	add    QWORD PTR [r10],0x4
   140008ed6:	mov    rcx,QWORD PTR [r10]
   140008ed9:	mov    DWORD PTR [rcx],eax
   140008edb:	add    QWORD PTR [r10],0x4
   140008edf:	mov    DWORD PTR [r9],r15d
   140008ee2:	xor    eax,eax
   140008ee4:	jmp    0x140009254
   140008ee9:	mov    r9d,r15d
   140008eec:	lea    rax,[rbp-0x2f]
   140008ef0:	cmp    WORD PTR [rax],r14w
   140008ef4:	jne    0x140008f03
   140008ef6:	add    r9d,r15d
   140008ef9:	add    rax,0x2
   140008efd:	cmp    r9d,0xf
   140008f01:	jbe    0x140008ef0
   140008f03:	cmp    r11d,r9d
   140008f06:	mov    edx,r15d
   140008f09:	mov    edi,r15d
   140008f0c:	cmovb  r11d,r9d
   140008f10:	mov    eax,edi
   140008f12:	add    edx,edx
   140008f14:	movzx  ecx,WORD PTR [rbp+rax*2-0x31]
   140008f19:	sub    edx,ecx
   140008f1b:	js     0x140009251
   140008f21:	add    edi,r15d
   140008f24:	cmp    edi,0xf
   140008f27:	jbe    0x140008f10
   140008f29:	test   edx,edx
   140008f2b:	jle    0x140008f3f
   140008f2d:	test   r12d,r12d
   140008f30:	je     0x140009251
   140008f36:	cmp    esi,r15d
   140008f39:	jne    0x140009251
   140008f3f:	mov    WORD PTR [rbp-0xf],r14w
   140008f44:	mov    rcx,r14
   140008f47:	mov    edx,0xe
   140008f4c:	movzx  eax,WORD PTR [rbp+rcx*1-0x2f]
   140008f51:	add    rcx,0x2
   140008f55:	add    ax,WORD PTR [rbp+rcx*1-0x11]
   140008f5a:	sub    rdx,r15
   140008f5d:	mov    WORD PTR [rbp+rcx*1-0xf],ax
   140008f62:	jne    0x140008f4c
   140008f64:	mov    edi,r14d
   140008f67:	test   r8d,r8d
   140008f6a:	je     0x140008f96
   140008f6c:	mov    rdx,r13
   140008f6f:	cmp    WORD PTR [rdx],r14w
   140008f73:	je     0x140008f8a
   140008f75:	movzx  eax,WORD PTR [rdx]
   140008f78:	movzx  ecx,WORD PTR [rbp+rax*2-0x11]
   140008f7d:	mov    WORD PTR [rbx+rcx*2],di
   140008f81:	movzx  eax,WORD PTR [rdx]
   140008f84:	add    WORD PTR [rbp+rax*2-0x11],r15w
   140008f8a:	add    edi,r15d
   140008f8d:	add    rdx,0x2
   140008f91:	cmp    edi,r8d
   140008f94:	jb     0x140008f6f
   140008f96:	mov    ecx,r12d
   140008f99:	test   r12d,r12d
   140008f9c:	je     0x140008fdf
   140008f9e:	dec    ecx
   140008fa0:	je     0x140008fba
   140008fa2:	lea    rdx,[rip+0x13a27]        # 0x14001c9d0
   140008fa9:	lea    r15,[rip+0x139e0]        # 0x14001c990
   140008fb0:	or     r8d,0xffffffff
   140008fb4:	mov    QWORD PTR [rbp-0x61],rdx
   140008fb8:	jmp    0x140008fef
   140008fba:	mov    eax,0x202
   140008fbf:	lea    r15,[rip+0x1394a]        # 0x14001c910
   140008fc6:	lea    rdx,[rip+0x13983]        # 0x14001c950
   140008fcd:	sub    r15,rax
   140008fd0:	sub    rdx,rax
   140008fd3:	mov    r8d,0x100
   140008fd9:	mov    QWORD PTR [rbp-0x61],rdx
   140008fdd:	jmp    0x140008fef
   140008fdf:	mov    rdx,rbx
   140008fe2:	mov    QWORD PTR [rbp-0x61],rbx
   140008fe6:	mov    r15,rbx
   140008fe9:	mov    r8d,0x13
   140008fef:	mov    rax,QWORD PTR [r10]
   140008ff2:	mov    ecx,r11d
   140008ff5:	mov    ebx,0x1
   140008ffa:	shl    ebx,cl
   140008ffc:	cmp    DWORD PTR [rbp-0x69],0x1
   140009000:	mov    QWORD PTR [rsp+0x8],rax
   140009005:	lea    eax,[rbx-0x1]
   140009008:	mov    edi,r14d
   14000900b:	mov    r12d,r14d
   14000900e:	mov    DWORD PTR [rbp-0x71],r14d
   140009012:	mov    DWORD PTR [rbp-0x6d],ebx
   140009015:	mov    DWORD PTR [rbp-0x79],ebx
   140009018:	mov    DWORD PTR [rbp-0x59],eax
   14000901b:	jne    0x14000902f
   14000901d:	cmp    ebx,0x5b0
   140009023:	jb     0x14000902f
   140009025:	mov    eax,0x1
   14000902a:	jmp    0x140009254
   14000902f:	mov    r13,QWORD PTR [rsp+0x8]
   140009034:	mov    ecx,r12d
   140009037:	mov    r12,QWORD PTR [rbp-0x51]
   14000903b:	mov    al,r9b
   14000903e:	sub    al,r14b
   140009041:	mov    BYTE PTR [rsp+0x1],al
   140009045:	movzx  eax,WORD PTR [r12+rcx*2]
   14000904a:	cmp    eax,r8d
   14000904d:	jge    0x140009058
   14000904f:	xor    r10d,r10d
   140009052:	mov    BYTE PTR [rsp],r10b
   140009056:	jmp    0x140009072
   140009058:	jle    0x14000906c
   14000905a:	movzx  ecx,WORD PTR [r12+rcx*2]
   14000905f:	mov    al,BYTE PTR [rdx+rcx*2]
   140009062:	mov    BYTE PTR [rsp],al
   140009065:	movzx  eax,WORD PTR [r15+rcx*2]
   14000906a:	jmp    0x140009072
   14000906c:	mov    BYTE PTR [rsp],0x60
   140009070:	xor    eax,eax
   140009072:	mov    ecx,r9d
   140009075:	mov    r12d,0x1
   14000907b:	mov    edx,edi
   14000907d:	sub    ecx,r14d
   140009080:	mov    WORD PTR [rsp+0x2],ax
   140009085:	mov    eax,DWORD PTR [rsp]
   140009088:	shl    r12d,cl
   14000908b:	mov    ecx,r14d
   14000908e:	mov    DWORD PTR [rbp-0x55],ebx
   140009091:	shr    edx,cl
   140009093:	add    edx,ebx
   140009095:	sub    edx,r12d
   140009098:	sub    ebx,r12d
   14000909b:	mov    DWORD PTR [r13+rdx*4+0x0],eax
   1400090a0:	jne    0x140009095
   1400090a2:	mov    r10,QWORD PTR [rbp-0x49]
   1400090a6:	lea    ecx,[r9-0x1]
   1400090aa:	lea    edx,[rbx+0x1]
   1400090ad:	shl    edx,cl
   1400090af:	jmp    0x1400090b3
   1400090b1:	shr    edx,1
   1400090b3:	test   edi,edx
   1400090b5:	jne    0x1400090b1
   1400090b7:	xor    ebx,ebx
   1400090b9:	test   edx,edx
   1400090bb:	je     0x1400090c7
   1400090bd:	lea    eax,[rdx-0x1]
   1400090c0:	and    eax,edi
   1400090c2:	lea    edi,[rdx+rax*1]
   1400090c5:	jmp    0x1400090c9
   1400090c7:	mov    edi,ebx
   1400090c9:	mov    r12d,DWORD PTR [rbp-0x71]
   1400090cd:	mov    eax,r9d
   1400090d0:	mov    ecx,0xffff
   1400090d5:	inc    r12d
   1400090d8:	add    WORD PTR [rbp+rax*2-0x31],cx
   1400090dd:	mov    DWORD PTR [rbp-0x71],r12d
   1400090e1:	jne    0x1400090fe
   1400090e3:	cmp    r9d,esi
   1400090e6:	je     0x1400091c4
   1400090ec:	mov    rcx,QWORD PTR [rbp-0x51]
   1400090f0:	mov    rax,QWORD PTR [rbp-0x41]
   1400090f4:	movzx  ecx,WORD PTR [rcx+r12*2]
   1400090f9:	movzx  r9d,WORD PTR [rax+rcx*2]
   1400090fe:	mov    rdx,QWORD PTR [rbp-0x61]
   140009102:	mov    ebx,DWORD PTR [rbp-0x6d]
   140009105:	cmp    r9d,r11d
   140009108:	jbe    0x140009034
   14000910e:	mov    r13d,DWORD PTR [rbp-0x59]
   140009112:	and    r13d,edi
   140009115:	cmp    r13d,DWORD PTR [rbp-0x75]
   140009119:	je     0x14000902f
   14000911f:	mov    rcx,QWORD PTR [rsp+0x8]
   140009124:	mov    eax,DWORD PTR [rbp-0x55]
   140009127:	test   r14d,r14d
   14000912a:	cmove  r14d,r11d
   14000912e:	lea    rcx,[rcx+rax*4]
   140009132:	mov    r12d,r9d
   140009135:	sub    r12d,r14d
   140009138:	mov    QWORD PTR [rsp+0x8],rcx
   14000913d:	mov    edx,0x1
   140009142:	lea    ebx,[r14+r12*1]
   140009146:	mov    ecx,r12d
   140009149:	shl    edx,cl
   14000914b:	cmp    ebx,esi
   14000914d:	jae    0x140009169
   14000914f:	movzx  ecx,WORD PTR [rbp+rbx*2-0x31]
   140009154:	sub    edx,ecx
   140009156:	test   edx,edx
   140009158:	jle    0x140009165
   14000915a:	inc    ebx
   14000915c:	inc    r12d
   14000915f:	add    edx,edx
   140009161:	cmp    ebx,esi
   140009163:	jb     0x14000914f
   140009165:	mov    r10,QWORD PTR [rbp-0x49]
   140009169:	mov    eax,DWORD PTR [rbp-0x79]
   14000916c:	mov    ecx,r12d
   14000916f:	mov    ebx,0x1
   140009174:	shl    ebx,cl
   140009176:	add    eax,ebx
   140009178:	cmp    DWORD PTR [rbp-0x69],0x1
   14000917c:	mov    DWORD PTR [rbp-0x6d],ebx
   14000917f:	mov    DWORD PTR [rbp-0x79],eax
   140009182:	jne    0x14000918f
   140009184:	cmp    eax,0x5b0
   140009189:	jae    0x140009025
   14000918f:	mov    rax,QWORD PTR [r10]
   140009192:	mov    rdx,QWORD PTR [rbp-0x61]
   140009196:	mov    DWORD PTR [rbp-0x75],r13d
   14000919a:	mov    BYTE PTR [rax+r13*4],r12b
   14000919e:	mov    rax,QWORD PTR [r10]
   1400091a1:	mov    r12d,DWORD PTR [rbp-0x71]
   1400091a5:	mov    BYTE PTR [rax+r13*4+0x1],r11b
   1400091aa:	mov    rcx,QWORD PTR [r10]
   1400091ad:	mov    rax,QWORD PTR [rsp+0x8]
   1400091b2:	sub    rax,rcx
   1400091b5:	sar    rax,0x2
   1400091b9:	mov    WORD PTR [rcx+r13*4+0x2],ax
   1400091bf:	jmp    0x14000902f
   1400091c4:	mov    al,r9b
   1400091c7:	mov    BYTE PTR [rsp],0x40
   1400091cb:	mov    WORD PTR [rsp+0x2],bx
   1400091d0:	sub    al,r14b
   1400091d3:	mov    BYTE PTR [rsp+0x1],al
   1400091d7:	test   edi,edi
   1400091d9:	je     0x14000923b
   1400091db:	mov    r8d,DWORD PTR [rbp-0x75]
   1400091df:	test   r14d,r14d
   1400091e2:	je     0x140009201
   1400091e4:	mov    eax,DWORD PTR [rbp-0x59]
   1400091e7:	and    eax,edi
   1400091e9:	cmp    eax,r8d
   1400091ec:	je     0x140009201
   1400091ee:	mov    rax,QWORD PTR [r10]
   1400091f1:	mov    r14d,ebx
   1400091f4:	mov    r9d,r11d
   1400091f7:	mov    QWORD PTR [rsp+0x8],rax
   1400091fc:	mov    BYTE PTR [rsp+0x1],r11b
   140009201:	mov    eax,DWORD PTR [rsp]
   140009204:	mov    ecx,r14d
   140009207:	mov    edx,edi
   140009209:	shr    rdx,cl
   14000920c:	mov    rcx,QWORD PTR [rsp+0x8]
   140009211:	mov    DWORD PTR [rcx+rdx*4],eax
   140009214:	lea    ecx,[r9-0x1]
   140009218:	mov    edx,0x1
   14000921d:	shl    edx,cl
   14000921f:	jmp    0x140009223
   140009221:	shr    edx,1
   140009223:	test   edi,edx
   140009225:	jne    0x140009221
   140009227:	test   edx,edx
   140009229:	je     0x140009235
   14000922b:	lea    eax,[rdx-0x1]
   14000922e:	and    eax,edi
   140009230:	lea    edi,[rdx+rax*1]
   140009233:	jmp    0x140009237
   140009235:	mov    edi,ebx
   140009237:	test   edi,edi
   140009239:	jne    0x1400091df
   14000923b:	mov    eax,DWORD PTR [rbp-0x79]
   14000923e:	shl    rax,0x2
   140009242:	add    QWORD PTR [r10],rax
   140009245:	mov    rax,QWORD PTR [rbp-0x39]
   140009249:	mov    DWORD PTR [rax],r11d
   14000924c:	jmp    0x140008ee2
   140009251:	or     eax,0xffffffff
   140009254:	mov    rcx,QWORD PTR [rbp+0xf]
   140009258:	xor    rcx,rsp
   14000925b:	call   0x14000a820
   140009260:	mov    rbx,QWORD PTR [rsp+0xe0]
   140009268:	add    rsp,0xa0
   14000926f:	pop    r15
   140009271:	pop    r14
   140009273:	pop    r13
   140009275:	pop    r12
   140009277:	pop    rdi
   140009278:	pop    rsi
   140009279:	pop    rbp
   14000927a:	ret    
   14000927b:	int3   
   14000927c:	mov    QWORD PTR [rsp+0x8],rdi
   140009281:	mov    r9d,ecx
   140009284:	mov    r11,rdx
   140009287:	movzx  r10d,cx
   14000928b:	shr    r9d,0x10
   14000928f:	cmp    r8d,0x1
   140009293:	jne    0x1400092c1
   140009295:	movzx  eax,BYTE PTR [rdx]
   140009298:	mov    ecx,0xfff1
   14000929d:	add    r10d,eax
   1400092a0:	mov    eax,0xffff000f
   1400092a5:	cmp    r10d,ecx
   1400092a8:	jb     0x1400092ad
   1400092aa:	add    r10d,eax
   1400092ad:	add    r9d,r10d
   1400092b0:	cmp    r9d,ecx
   1400092b3:	jb     0x14000953e
   1400092b9:	add    r9d,eax
   1400092bc:	jmp    0x14000953e
   1400092c1:	test   rdx,rdx
   1400092c4:	jne    0x1400092ce
   1400092c6:	lea    eax,[rdx+0x1]
   1400092c9:	jmp    0x140009548
   1400092ce:	cmp    r8d,0x10
   1400092d2:	jae    0x14000931a
   1400092d4:	test   r8d,r8d
   1400092d7:	je     0x1400092eb
   1400092d9:	movzx  eax,BYTE PTR [r11]
   1400092dd:	inc    r11
   1400092e0:	add    r10d,eax
   1400092e3:	add    r9d,r10d
   1400092e6:	dec    r8d
   1400092e9:	jne    0x1400092d9
   1400092eb:	mov    ecx,0xfff1
   1400092f0:	cmp    r10d,ecx
   1400092f3:	jb     0x1400092fd
   1400092f5:	mov    eax,0xffff000f
   1400092fa:	add    r10d,eax
   1400092fd:	mov    eax,0x80078071
   140009302:	mul    r9d
   140009305:	shr    edx,0xf
   140009308:	imul   edx,edx,0xf
   14000930b:	lea    eax,[r9+rdx*1]
   14000930f:	shl    eax,0x10
   140009312:	or     eax,r10d
   140009315:	jmp    0x140009548
   14000931a:	mov    ecx,0x80078071
   14000931f:	cmp    r8d,0x15b0
   140009326:	jb     0x14000942b
   14000932c:	mov    eax,0x5e6ea9af
   140009331:	mul    r8d
   140009334:	shr    edx,0xb
   140009337:	mov    edi,edx
   140009339:	add    r8d,0xffffea50
   140009340:	mov    edx,0x15b
   140009345:	movzx  eax,BYTE PTR [r11]
   140009349:	add    r11,0x10
   14000934d:	add    r10d,eax
   140009350:	movzx  eax,BYTE PTR [r11-0xf]
   140009355:	add    r9d,r10d
   140009358:	add    r10d,eax
   14000935b:	movzx  eax,BYTE PTR [r11-0xe]
   140009360:	add    r9d,r10d
   140009363:	add    r10d,eax
   140009366:	movzx  eax,BYTE PTR [r11-0xd]
   14000936b:	add    r9d,r10d
   14000936e:	add    r10d,eax
   140009371:	movzx  eax,BYTE PTR [r11-0xc]
   140009376:	add    r9d,r10d
   140009379:	add    r10d,eax
   14000937c:	movzx  eax,BYTE PTR [r11-0xb]
   140009381:	add    r9d,r10d
   140009384:	add    r10d,eax
   140009387:	movzx  eax,BYTE PTR [r11-0xa]
   14000938c:	add    r9d,r10d
   14000938f:	add    r10d,eax
   140009392:	movzx  eax,BYTE PTR [r11-0x9]
   140009397:	add    r9d,r10d
   14000939a:	add    r10d,eax
   14000939d:	movzx  eax,BYTE PTR [r11-0x8]
   1400093a2:	add    r9d,r10d
   1400093a5:	add    r10d,eax
   1400093a8:	movzx  eax,BYTE PTR [r11-0x7]
   1400093ad:	add    r9d,r10d
   1400093b0:	add    r10d,eax
   1400093b3:	movzx  eax,BYTE PTR [r11-0x6]
   1400093b8:	add    r9d,r10d
   1400093bb:	add    r10d,eax
   1400093be:	movzx  eax,BYTE PTR [r11-0x5]
   1400093c3:	add    r9d,r10d
   1400093c6:	add    r10d,eax
   1400093c9:	movzx  eax,BYTE PTR [r11-0x4]
   1400093ce:	add    r9d,r10d
   1400093d1:	add    r10d,eax
   1400093d4:	movzx  eax,BYTE PTR [r11-0x3]
   1400093d9:	add    r9d,r10d
   1400093dc:	add    r10d,eax
   1400093df:	movzx  eax,BYTE PTR [r11-0x2]
   1400093e4:	add    r9d,r10d
   1400093e7:	add    r10d,eax
   1400093ea:	movzx  eax,BYTE PTR [r11-0x1]
   1400093ef:	add    r9d,r10d
   1400093f2:	add    r10d,eax
   1400093f5:	add    r9d,r10d
   1400093f8:	dec    edx
   1400093fa:	jne    0x140009345
   140009400:	mov    eax,ecx
   140009402:	mul    r10d
   140009405:	mov    eax,ecx
   140009407:	shr    edx,0xf
   14000940a:	imul   edx,edx,0xffff000f
   140009410:	add    r10d,edx
   140009413:	mul    r9d
   140009416:	shr    edx,0xf
   140009419:	imul   edx,edx,0xffff000f
   14000941f:	add    r9d,edx
   140009422:	dec    rdi
   140009425:	jne    0x140009339
   14000942b:	test   r8d,r8d
   14000942e:	je     0x14000953e
   140009434:	cmp    r8d,0x10
   140009438:	jb     0x140009505
   14000943e:	mov    edx,r8d
   140009441:	shr    rdx,0x4
   140009445:	movzx  eax,BYTE PTR [r11]
   140009449:	add    r8d,0xfffffff0
   14000944d:	add    r11,0x10
   140009451:	add    r10d,eax
   140009454:	movzx  eax,BYTE PTR [r11-0xf]
   140009459:	add    r9d,r10d
   14000945c:	add    r10d,eax
   14000945f:	movzx  eax,BYTE PTR [r11-0xe]
   140009464:	add    r9d,r10d
   140009467:	add    r10d,eax
   14000946a:	movzx  eax,BYTE PTR [r11-0xd]
   14000946f:	add    r9d,r10d
   140009472:	add    r10d,eax
   140009475:	movzx  eax,BYTE PTR [r11-0xc]
   14000947a:	add    r9d,r10d
   14000947d:	add    r10d,eax
   140009480:	movzx  eax,BYTE PTR [r11-0xb]
   140009485:	add    r9d,r10d
   140009488:	add    r10d,eax
   14000948b:	movzx  eax,BYTE PTR [r11-0xa]
   140009490:	add    r9d,r10d
   140009493:	add    r10d,eax
   140009496:	movzx  eax,BYTE PTR [r11-0x9]
   14000949b:	add    r9d,r10d
   14000949e:	add    r10d,eax
   1400094a1:	movzx  eax,BYTE PTR [r11-0x8]
   1400094a6:	add    r9d,r10d
   1400094a9:	add    r10d,eax
   1400094ac:	movzx  eax,BYTE PTR [r11-0x7]
   1400094b1:	add    r9d,r10d
   1400094b4:	add    r10d,eax
   1400094b7:	movzx  eax,BYTE PTR [r11-0x6]
   1400094bc:	add    r9d,r10d
   1400094bf:	add    r10d,eax
   1400094c2:	movzx  eax,BYTE PTR [r11-0x5]
   1400094c7:	add    r9d,r10d
   1400094ca:	add    r10d,eax
   1400094cd:	movzx  eax,BYTE PTR [r11-0x4]
   1400094d2:	add    r9d,r10d
   1400094d5:	add    r10d,eax
   1400094d8:	movzx  eax,BYTE PTR [r11-0x3]
   1400094dd:	add    r9d,r10d
   1400094e0:	add    r10d,eax
   1400094e3:	movzx  eax,BYTE PTR [r11-0x2]
   1400094e8:	add    r9d,r10d
   1400094eb:	add    r10d,eax
   1400094ee:	movzx  eax,BYTE PTR [r11-0x1]
   1400094f3:	add    r9d,r10d
   1400094f6:	add    r10d,eax
   1400094f9:	add    r9d,r10d
   1400094fc:	dec    rdx
   1400094ff:	jne    0x140009445
   140009505:	test   r8d,r8d
   140009508:	je     0x14000951c
   14000950a:	movzx  eax,BYTE PTR [r11]
   14000950e:	inc    r11
   140009511:	add    r10d,eax
   140009514:	add    r9d,r10d
   140009517:	dec    r8d
   14000951a:	jne    0x14000950a
   14000951c:	mov    eax,ecx
   14000951e:	mul    r10d
   140009521:	mov    eax,ecx
   140009523:	shr    edx,0xf
   140009526:	imul   edx,edx,0xffff000f
   14000952c:	add    r10d,edx
   14000952f:	mul    r9d
   140009532:	shr    edx,0xf
   140009535:	imul   edx,edx,0xffff000f
   14000953b:	add    r9d,edx
   14000953e:	shl    r9d,0x10
   140009542:	or     r9d,r10d
   140009545:	mov    eax,r9d
   140009548:	mov    rdi,QWORD PTR [rsp+0x8]
   14000954d:	ret    
   14000954e:	int3   
   14000954f:	int3   
   140009550:	mov    QWORD PTR [rsp+0x8],rbx
   140009555:	mov    QWORD PTR [rsp+0x10],rsi
   14000955a:	mov    QWORD PTR [rsp+0x18],rdi
   14000955f:	mov    r10d,ecx
   140009562:	mov    r11d,r8d
   140009565:	mov    rbx,rdx
   140009568:	lea    rsi,[rip+0x134a1]        # 0x14001ca10
   14000956f:	not    r10d
   140009572:	test   r8d,r8d
   140009575:	je     0x14000959a
   140009577:	test   bl,0x3
   14000957a:	je     0x14000959a
   14000957c:	movzx  ecx,BYTE PTR [rbx]
   14000957f:	mov    eax,r10d
   140009582:	inc    rbx
   140009585:	xor    rcx,rax
   140009588:	shr    eax,0x8
   14000958b:	movzx  edx,cl
   14000958e:	mov    r10d,DWORD PTR [rsi+rdx*4]
   140009592:	xor    r10d,eax
   140009595:	dec    r11d
   140009598:	jne    0x140009577
   14000959a:	cmp    r11d,0x20
   14000959e:	jb     0x1400097c5
   1400095a4:	mov    edi,r11d
   1400095a7:	shr    rdi,0x5
   1400095ab:	xor    r10d,DWORD PTR [rbx]
   1400095ae:	mov    eax,r10d
   1400095b1:	shr    rax,0x10
   1400095b5:	movzx  edx,al
   1400095b8:	mov    eax,r10d
   1400095bb:	mov    r8d,DWORD PTR [rsi+rdx*4+0x400]
   1400095c3:	shr    rax,0x8
   1400095c7:	movzx  ecx,al
   1400095ca:	mov    eax,r10d
   1400095cd:	xor    r8d,DWORD PTR [rsi+rcx*4+0x800]
   1400095d5:	shr    rax,0x18
   1400095d9:	xor    r8d,DWORD PTR [rsi+rax*4]
   1400095dd:	movzx  eax,r10b
   1400095e1:	xor    r8d,DWORD PTR [rsi+rax*4+0xc00]
   1400095e9:	xor    r8d,DWORD PTR [rbx+0x4]
   1400095ed:	mov    r9d,r8d
   1400095f0:	mov    eax,r8d
   1400095f3:	shr    rax,0x10
   1400095f7:	movzx  edx,al
   1400095fa:	mov    eax,r8d
   1400095fd:	mov    r8d,DWORD PTR [rsi+rdx*4+0x400]
   140009605:	shr    rax,0x8
   140009609:	movzx  ecx,al
   14000960c:	mov    eax,r9d
   14000960f:	xor    r8d,DWORD PTR [rsi+rcx*4+0x800]
   140009617:	shr    rax,0x18
   14000961b:	xor    r8d,DWORD PTR [rsi+rax*4]
   14000961f:	movzx  eax,r9b
   140009623:	xor    r8d,DWORD PTR [rsi+rax*4+0xc00]
   14000962b:	xor    r8d,DWORD PTR [rbx+0x8]
   14000962f:	mov    r9d,r8d
   140009632:	mov    eax,r8d
   140009635:	shr    rax,0x10
   140009639:	movzx  edx,al
   14000963c:	mov    eax,r8d
   14000963f:	mov    r8d,DWORD PTR [rsi+rdx*4+0x400]
   140009647:	shr    rax,0x8
   14000964b:	movzx  ecx,al
   14000964e:	mov    eax,r9d
   140009651:	xor    r8d,DWORD PTR [rsi+rcx*4+0x800]
   140009659:	shr    rax,0x18
   14000965d:	xor    r8d,DWORD PTR [rsi+rax*4]
   140009661:	movzx  eax,r9b
   140009665:	xor    r8d,DWORD PTR [rsi+rax*4+0xc00]
   14000966d:	xor    r8d,DWORD PTR [rbx+0xc]
   140009671:	mov    r9d,r8d
   140009674:	mov    eax,r8d
   140009677:	shr    rax,0x10
   14000967b:	movzx  edx,al
   14000967e:	mov    eax,r8d
   140009681:	mov    r8d,DWORD PTR [rsi+rdx*4+0x400]
   140009689:	shr    rax,0x8
   14000968d:	movzx  ecx,al
   140009690:	mov    eax,r9d
   140009693:	xor    r8d,DWORD PTR [rsi+rcx*4+0x800]
   14000969b:	shr    rax,0x18
   14000969f:	xor    r8d,DWORD PTR [rsi+rax*4]
   1400096a3:	movzx  eax,r9b
   1400096a7:	xor    r8d,DWORD PTR [rsi+rax*4+0xc00]
   1400096af:	xor    r8d,DWORD PTR [rbx+0x10]
   1400096b3:	mov    r9d,r8d
   1400096b6:	mov    eax,r8d
   1400096b9:	shr    rax,0x10
   1400096bd:	movzx  edx,al
   1400096c0:	mov    eax,r8d
   1400096c3:	mov    r8d,DWORD PTR [rsi+rdx*4+0x400]
   1400096cb:	shr    rax,0x8
   1400096cf:	movzx  ecx,al
   1400096d2:	mov    eax,r9d
   1400096d5:	xor    r8d,DWORD PTR [rsi+rcx*4+0x800]
   1400096dd:	shr    rax,0x18
   1400096e1:	xor    r8d,DWORD PTR [rsi+rax*4]
   1400096e5:	movzx  eax,r9b
   1400096e9:	xor    r8d,DWORD PTR [rsi+rax*4+0xc00]
   1400096f1:	xor    r8d,DWORD PTR [rbx+0x14]
   1400096f5:	mov    eax,r8d
   1400096f8:	mov    r9d,r8d
   1400096fb:	shr    rax,0x10
   1400096ff:	movzx  edx,al
   140009702:	mov    eax,r8d
   140009705:	shr    rax,0x8
   140009709:	mov    r8d,DWORD PTR [rsi+rdx*4+0x400]
   140009711:	movzx  ecx,al
   140009714:	mov    eax,r9d
   140009717:	xor    r8d,DWORD PTR [rsi+rcx*4+0x800]
   14000971f:	shr    rax,0x18
   140009723:	add    rbx,0x20
   140009727:	xor    r8d,DWORD PTR [rsi+rax*4]
   14000972b:	movzx  eax,r9b
   14000972f:	add    r11d,0xffffffe0
   140009733:	xor    r8d,DWORD PTR [rsi+rax*4+0xc00]
   14000973b:	xor    r8d,DWORD PTR [rbx-0x8]
   14000973f:	mov    r9d,r8d
   140009742:	mov    eax,r8d
   140009745:	shr    rax,0x10
   140009749:	movzx  edx,al
   14000974c:	mov    eax,r8d
   14000974f:	mov    r8d,DWORD PTR [rsi+rdx*4+0x400]
   140009757:	shr    rax,0x8
   14000975b:	movzx  ecx,al
   14000975e:	mov    eax,r9d
   140009761:	xor    r8d,DWORD PTR [rsi+rcx*4+0x800]
   140009769:	shr    rax,0x18
   14000976d:	xor    r8d,DWORD PTR [rsi+rax*4]
   140009771:	movzx  eax,r9b
   140009775:	xor    r8d,DWORD PTR [rsi+rax*4+0xc00]
   14000977d:	xor    r8d,DWORD PTR [rbx-0x4]
   140009781:	mov    eax,r8d
   140009784:	shr    rax,0x10
   140009788:	movzx  edx,al
   14000978b:	mov    eax,r8d
   14000978e:	mov    r10d,DWORD PTR [rsi+rdx*4+0x400]
   140009796:	shr    rax,0x8
   14000979a:	movzx  ecx,al
   14000979d:	mov    eax,r8d
   1400097a0:	xor    r10d,DWORD PTR [rsi+rcx*4+0x800]
   1400097a8:	shr    rax,0x18
   1400097ac:	xor    r10d,DWORD PTR [rsi+rax*4]
   1400097b0:	movzx  eax,r8b
   1400097b4:	xor    r10d,DWORD PTR [rsi+rax*4+0xc00]
   1400097bc:	dec    rdi
   1400097bf:	jne    0x1400095ab
   1400097c5:	cmp    r11d,0x4
   1400097c9:	jb     0x140009820
   1400097cb:	mov    r9d,r11d
   1400097ce:	shr    r9,0x2
   1400097d2:	xor    r10d,DWORD PTR [rbx]
   1400097d5:	add    r11d,0xfffffffc
   1400097d9:	add    rbx,0x4
   1400097dd:	mov    r8d,r10d
   1400097e0:	mov    eax,r10d
   1400097e3:	shr    rax,0x10
   1400097e7:	movzx  edx,al
   1400097ea:	mov    eax,r10d
   1400097ed:	mov    r10d,DWORD PTR [rsi+rdx*4+0x400]
   1400097f5:	shr    rax,0x8
   1400097f9:	movzx  ecx,al
   1400097fc:	mov    eax,r8d
   1400097ff:	xor    r10d,DWORD PTR [rsi+rcx*4+0x800]
   140009807:	shr    rax,0x18
   14000980b:	xor    r10d,DWORD PTR [rsi+rax*4]
   14000980f:	movzx  eax,r8b
   140009813:	xor    r10d,DWORD PTR [rsi+rax*4+0xc00]
   14000981b:	dec    r9
   14000981e:	jne    0x1400097d2
   140009820:	test   r11d,r11d
   140009823:	je     0x140009843
   140009825:	movzx  ecx,BYTE PTR [rbx]
   140009828:	mov    eax,r10d
   14000982b:	inc    rbx
   14000982e:	xor    rcx,rax
   140009831:	shr    eax,0x8
   140009834:	movzx  edx,cl
   140009837:	mov    r10d,DWORD PTR [rsi+rdx*4]
   14000983b:	xor    r10d,eax
   14000983e:	dec    r11d
   140009841:	jne    0x140009825
   140009843:	mov    rbx,QWORD PTR [rsp+0x8]
   140009848:	mov    rsi,QWORD PTR [rsp+0x10]
   14000984d:	mov    rdi,QWORD PTR [rsp+0x18]
   140009852:	not    r10d
   140009855:	mov    eax,r10d
   140009858:	ret    
   140009859:	int3   
   14000985a:	int3   
   14000985b:	int3   
   14000985c:	test   rdx,rdx
   14000985f:	jne    0x140009864
   140009861:	xor    eax,eax
   140009863:	ret    
   140009864:	jmp    0x140009550
   140009869:	int3   
   14000986a:	int3   
   14000986b:	int3   
   14000986c:	rex push rbx
   14000986e:	sub    rsp,0x20
   140009872:	mov    ebx,ecx
   140009874:	lea    rcx,[rip+0x151a5]        # 0x14001ea20
   14000987b:	call   QWORD PTR [rip+0x1084f]        # 0x14001a0d0
   140009881:	test   rax,rax
   140009884:	je     0x14000989f
   140009886:	lea    rdx,[rip+0x15183]        # 0x14001ea10
   14000988d:	mov    rcx,rax
   140009890:	call   QWORD PTR [rip+0x10802]        # 0x14001a098
   140009896:	test   rax,rax
   140009899:	je     0x14000989f
   14000989b:	mov    ecx,ebx
   14000989d:	call   rax
   14000989f:	add    rsp,0x20
   1400098a3:	pop    rbx
   1400098a4:	ret    
   1400098a5:	int3   
   1400098a6:	int3   
   1400098a7:	int3   
   1400098a8:	rex push rbx
   1400098aa:	sub    rsp,0x20
   1400098ae:	mov    ebx,ecx
   1400098b0:	call   0x14000986c
   1400098b5:	mov    ecx,ebx
   1400098b7:	call   QWORD PTR [rip+0x1081b]        # 0x14001a0d8
   1400098bd:	int3   
   1400098be:	int3   
   1400098bf:	int3   
   1400098c0:	mov    ecx,0x8
   1400098c5:	jmp    0x14000cb28
   1400098ca:	int3   
   1400098cb:	int3   
   1400098cc:	mov    ecx,0x8
   1400098d1:	jmp    0x14000ca28
   1400098d6:	int3   
   1400098d7:	int3   
   1400098d8:	rex push rbx
   1400098da:	sub    rsp,0x20
   1400098de:	call   0x14000d078
   1400098e3:	mov    rcx,rax
   1400098e6:	mov    rbx,rax
   1400098e9:	call   0x14000d03c
   1400098ee:	mov    rcx,rbx
   1400098f1:	call   0x14000ce24
   1400098f6:	mov    rcx,rbx
   1400098f9:	call   0x14000ce1c
   1400098fe:	mov    rcx,rbx
   140009901:	call   0x14000ce14
   140009906:	mov    rcx,rbx
   140009909:	call   0x14000cbb0
   14000990e:	mov    rcx,rbx
   140009911:	add    rsp,0x20
   140009915:	pop    rbx
   140009916:	jmp    0x14000cb90
   14000991b:	int3   
   14000991c:	cmp    rcx,rdx
   14000991f:	jae    0x14000994e
   140009921:	mov    QWORD PTR [rsp+0x8],rbx
   140009926:	push   rdi
   140009927:	sub    rsp,0x20
   14000992b:	mov    rdi,rdx
   14000992e:	mov    rbx,rcx
   140009931:	mov    rax,QWORD PTR [rbx]
   140009934:	test   rax,rax
   140009937:	je     0x14000993b
   140009939:	call   rax
   14000993b:	add    rbx,0x8
   14000993f:	cmp    rbx,rdi
   140009942:	jb     0x140009931
   140009944:	mov    rbx,QWORD PTR [rsp+0x30]
   140009949:	add    rsp,0x20
   14000994d:	pop    rdi
   14000994e:	ret    
   14000994f:	int3   
   140009950:	mov    QWORD PTR [rsp+0x8],rbx
   140009955:	push   rdi
   140009956:	sub    rsp,0x20
   14000995a:	xor    eax,eax
   14000995c:	mov    rdi,rdx
   14000995f:	mov    rbx,rcx
   140009962:	cmp    rcx,rdx
   140009965:	jae    0x14000997e
   140009967:	test   eax,eax
   140009969:	jne    0x14000997e
   14000996b:	mov    rcx,QWORD PTR [rbx]
   14000996e:	test   rcx,rcx
   140009971:	je     0x140009975
   140009973:	call   rcx
   140009975:	add    rbx,0x8
   140009979:	cmp    rbx,rdi
   14000997c:	jb     0x140009967
   14000997e:	mov    rbx,QWORD PTR [rsp+0x30]
   140009983:	add    rsp,0x20
   140009987:	pop    rdi
   140009988:	ret    
   140009989:	int3   
   14000998a:	int3   
   14000998b:	int3   
   14000998c:	mov    QWORD PTR [rsp+0x8],rbx
   140009991:	push   rdi
   140009992:	sub    rsp,0x20
   140009996:	cmp    QWORD PTR [rip+0x1d332],0x0        # 0x140026cd0
   14000999e:	mov    ebx,ecx
   1400099a0:	je     0x1400099ba
   1400099a2:	lea    rcx,[rip+0x1d327]        # 0x140026cd0
   1400099a9:	call   0x14000d6b0
   1400099ae:	test   eax,eax
   1400099b0:	je     0x1400099ba
   1400099b2:	mov    ecx,ebx
   1400099b4:	call   QWORD PTR [rip+0x1d316]        # 0x140026cd0
   1400099ba:	call   0x14000d5f8
   1400099bf:	lea    rdx,[rip+0x109ca]        # 0x14001a390
   1400099c6:	lea    rcx,[rip+0x1099b]        # 0x14001a368
   1400099cd:	call   0x140009950
   1400099d2:	test   eax,eax
   1400099d4:	jne    0x140009a30
   1400099d6:	lea    rcx,[rip+0x3be3]        # 0x14000d5c0
   1400099dd:	call   0x14000d570
   1400099e2:	lea    rbx,[rip+0x1096f]        # 0x14001a358
   1400099e9:	lea    rdi,[rip+0x10970]        # 0x14001a360
   1400099f0:	jmp    0x140009a00
   1400099f2:	mov    rax,QWORD PTR [rbx]
   1400099f5:	test   rax,rax
   1400099f8:	je     0x1400099fc
   1400099fa:	call   rax
   1400099fc:	add    rbx,0x8
   140009a00:	cmp    rbx,rdi
   140009a03:	jb     0x1400099f2
   140009a05:	cmp    QWORD PTR [rip+0x1d2cb],0x0        # 0x140026cd8
   140009a0d:	je     0x140009a2e
   140009a0f:	lea    rcx,[rip+0x1d2c2]        # 0x140026cd8
   140009a16:	call   0x14000d6b0
   140009a1b:	test   eax,eax
   140009a1d:	je     0x140009a2e
   140009a1f:	xor    r8d,r8d
   140009a22:	xor    ecx,ecx
   140009a24:	lea    edx,[r8+0x2]
   140009a28:	call   QWORD PTR [rip+0x1d2aa]        # 0x140026cd8
   140009a2e:	xor    eax,eax
   140009a30:	mov    rbx,QWORD PTR [rsp+0x30]
   140009a35:	add    rsp,0x20
   140009a39:	pop    rdi
   140009a3a:	ret    
   140009a3b:	int3   
   140009a3c:	mov    QWORD PTR [rsp+0x8],rbx
   140009a41:	mov    QWORD PTR [rsp+0x10],rsi
   140009a46:	mov    DWORD PTR [rsp+0x18],r8d
   140009a4b:	push   rdi
   140009a4c:	push   r12
   140009a4e:	push   r13
   140009a50:	push   r14
   140009a52:	push   r15
   140009a54:	sub    rsp,0x40
   140009a58:	mov    r12d,r8d
   140009a5b:	mov    ebx,edx
   140009a5d:	mov    r15d,ecx
   140009a60:	mov    ecx,0x8
   140009a65:	call   0x14000cb28
   140009a6a:	nop
   140009a6b:	cmp    DWORD PTR [rip+0x1af5e],0x1        # 0x1400249d0
   140009a72:	je     0x140009b79
   140009a78:	mov    DWORD PTR [rip+0x1af4a],0x1        # 0x1400249cc
   140009a82:	mov    BYTE PTR [rip+0x1af3f],r12b        # 0x1400249c8
   140009a89:	test   ebx,ebx
   140009a8b:	jne    0x140009b65
   140009a91:	mov    rcx,QWORD PTR [rip+0x1d228]        # 0x140026cc0
   140009a98:	call   QWORD PTR [rip+0x10642]        # 0x14001a0e0
   140009a9e:	mov    rsi,rax
   140009aa1:	mov    QWORD PTR [rsp+0x30],rax
   140009aa6:	test   rax,rax
   140009aa9:	je     0x140009b52
   140009aaf:	mov    rcx,QWORD PTR [rip+0x1d202]        # 0x140026cb8
   140009ab6:	call   QWORD PTR [rip+0x10624]        # 0x14001a0e0
   140009abc:	mov    rdi,rax
   140009abf:	mov    QWORD PTR [rsp+0x20],rax
   140009ac4:	mov    r14,rsi
   140009ac7:	mov    QWORD PTR [rsp+0x28],rsi
   140009acc:	mov    r13,rax
   140009acf:	mov    QWORD PTR [rsp+0x38],rax
   140009ad4:	sub    rdi,0x8
   140009ad8:	mov    QWORD PTR [rsp+0x20],rdi
   140009add:	cmp    rdi,rsi
   140009ae0:	jb     0x140009b52
   140009ae2:	call   0x14000d078
   140009ae7:	cmp    QWORD PTR [rdi],rax
   140009aea:	jne    0x140009aee
   140009aec:	jmp    0x140009ad4
   140009aee:	cmp    rdi,rsi
   140009af1:	jb     0x140009b52
   140009af3:	mov    rcx,QWORD PTR [rdi]
   140009af6:	call   QWORD PTR [rip+0x105e4]        # 0x14001a0e0
   140009afc:	mov    rbx,rax
   140009aff:	call   0x14000d078
   140009b04:	mov    QWORD PTR [rdi],rax
   140009b07:	call   rbx
   140009b09:	mov    rcx,QWORD PTR [rip+0x1d1b0]        # 0x140026cc0
   140009b10:	call   QWORD PTR [rip+0x105ca]        # 0x14001a0e0
   140009b16:	mov    rbx,rax
   140009b19:	mov    rcx,QWORD PTR [rip+0x1d198]        # 0x140026cb8
   140009b20:	call   QWORD PTR [rip+0x105ba]        # 0x14001a0e0
   140009b26:	cmp    r14,rbx
   140009b29:	jne    0x140009b30
   140009b2b:	cmp    r13,rax
   140009b2e:	je     0x140009aec
   140009b30:	mov    r14,rbx
   140009b33:	mov    QWORD PTR [rsp+0x28],rbx
   140009b38:	mov    rsi,rbx
   140009b3b:	mov    QWORD PTR [rsp+0x30],rbx
   140009b40:	mov    r13,rax
   140009b43:	mov    QWORD PTR [rsp+0x38],rax
   140009b48:	mov    rdi,rax
   140009b4b:	mov    QWORD PTR [rsp+0x20],rax
   140009b50:	jmp    0x140009aec
   140009b52:	lea    rdx,[rip+0x10857]        # 0x14001a3b0
   140009b59:	lea    rcx,[rip+0x10838]        # 0x14001a398
   140009b60:	call   0x14000991c
   140009b65:	lea    rdx,[rip+0x10854]        # 0x14001a3c0
   140009b6c:	lea    rcx,[rip+0x10845]        # 0x14001a3b8
   140009b73:	call   0x14000991c
   140009b78:	nop
   140009b79:	test   r12d,r12d
   140009b7c:	je     0x140009b8d
   140009b7e:	mov    ecx,0x8
   140009b83:	call   0x14000ca28
   140009b88:	test   r12d,r12d
   140009b8b:	jne    0x140009bb3
   140009b8d:	mov    DWORD PTR [rip+0x1ae39],0x1        # 0x1400249d0
   140009b97:	mov    ecx,0x8
   140009b9c:	call   0x14000ca28
   140009ba1:	mov    ecx,r15d
   140009ba4:	call   0x14000986c
   140009ba9:	mov    ecx,r15d
   140009bac:	call   QWORD PTR [rip+0x10526]        # 0x14001a0d8
   140009bb2:	int3   
   140009bb3:	mov    rbx,QWORD PTR [rsp+0x70]
   140009bb8:	mov    rsi,QWORD PTR [rsp+0x78]
   140009bbd:	add    rsp,0x40
   140009bc1:	pop    r15
   140009bc3:	pop    r14
   140009bc5:	pop    r13
   140009bc7:	pop    r12
   140009bc9:	pop    rdi
   140009bca:	ret    
   140009bcb:	int3   
   140009bcc:	xor    r8d,r8d
   140009bcf:	xor    edx,edx
   140009bd1:	jmp    0x140009a3c
   140009bd6:	int3   
   140009bd7:	int3   
   140009bd8:	xor    r8d,r8d
   140009bdb:	lea    edx,[r8+0x1]
   140009bdf:	jmp    0x140009a3c
   140009be4:	xor    edx,edx
   140009be6:	xor    ecx,ecx
   140009be8:	lea    r8d,[rdx+0x1]
   140009bec:	jmp    0x140009a3c
   140009bf1:	int3   
   140009bf2:	int3   
   140009bf3:	int3   
   140009bf4:	mov    edx,0x1
   140009bf9:	xor    ecx,ecx
   140009bfb:	mov    r8d,edx
   140009bfe:	jmp    0x140009a3c
   140009c03:	int3   
   140009c04:	rex push rbx
   140009c06:	sub    rsp,0x20
   140009c0a:	mov    ebx,ecx
   140009c0c:	call   0x14000db80
   140009c11:	mov    ecx,ebx
   140009c13:	call   0x14000d920
   140009c18:	xor    r8d,r8d
   140009c1b:	mov    ecx,0xff
   140009c20:	lea    edx,[r8+0x1]
   140009c24:	call   0x140009a3c
   140009c29:	int3   
   140009c2a:	int3   
   140009c2b:	int3   
   140009c2c:	mov    rax,rsp
   140009c2f:	mov    QWORD PTR [rax+0x8],rcx
   140009c33:	mov    QWORD PTR [rax+0x10],rdx
   140009c37:	mov    QWORD PTR [rax+0x18],r8
   140009c3b:	mov    QWORD PTR [rax+0x20],r9
   140009c3f:	push   rbx
   140009c40:	push   rdi
   140009c41:	sub    rsp,0x28
   140009c45:	xor    eax,eax
   140009c47:	test   rcx,rcx
   140009c4a:	setne  al
   140009c4d:	test   eax,eax
   140009c4f:	jne    0x140009c66
   140009c51:	call   0x14000bdc0
   140009c56:	mov    DWORD PTR [rax],0x16
   140009c5c:	call   0x14000d01c
   140009c61:	or     eax,0xffffffff
   140009c64:	jmp    0x140009cd0
   140009c66:	lea    rdi,[rsp+0x48]
   140009c6b:	call   0x14000ab98
   140009c70:	lea    rdx,[rax+0x30]
   140009c74:	mov    ecx,0x1
   140009c79:	call   0x14000ad0c
   140009c7e:	nop
   140009c7f:	call   0x14000ab98
   140009c84:	lea    rcx,[rax+0x30]
   140009c88:	call   0x14000dbc4
   140009c8d:	mov    ebx,eax
   140009c8f:	call   0x14000ab98
   140009c94:	mov    r9,rdi
   140009c97:	xor    r8d,r8d
   140009c9a:	mov    rdx,QWORD PTR [rsp+0x40]
   140009c9f:	lea    rcx,[rax+0x30]
   140009ca3:	call   0x14000de04
   140009ca8:	mov    edi,eax
   140009caa:	call   0x14000ab98
   140009caf:	lea    rdx,[rax+0x30]
   140009cb3:	mov    ecx,ebx
   140009cb5:	call   0x14000dc98
   140009cba:	nop
   140009cbb:	call   0x14000ab98
   140009cc0:	lea    rdx,[rax+0x30]
   140009cc4:	mov    ecx,0x1
   140009cc9:	call   0x14000ad8c
   140009cce:	mov    eax,edi
   140009cd0:	add    rsp,0x28
   140009cd4:	pop    rdi
   140009cd5:	pop    rbx
   140009cd6:	ret    
   140009cd7:	int3   
   140009cd8:	mov    rcx,QWORD PTR [rip+0x193e1]        # 0x1400230c0
   140009cdf:	xor    eax,eax
   140009ce1:	or     rcx,0x1
   140009ce5:	cmp    QWORD PTR [rip+0x1acec],rcx        # 0x1400249d8
   140009cec:	sete   al
   140009cef:	ret    
   140009cf0:	mov    QWORD PTR [rsp+0x8],rbx
   140009cf5:	mov    QWORD PTR [rsp+0x10],rsi
   140009cfa:	push   rdi
   140009cfb:	sub    rsp,0x20
   140009cff:	cmp    DWORD PTR [rip+0x1cfaa],0x0        # 0x140026cb0
   140009d06:	mov    rbx,QWORD PTR [rip+0x1ac8b]        # 0x140024998
   140009d0d:	mov    rsi,rcx
   140009d10:	je     0x140009d7f
   140009d12:	test   rbx,rbx
   140009d15:	jne    0x140009d35
   140009d17:	cmp    QWORD PTR [rip+0x1ac8a],rbx        # 0x1400249a8
   140009d1e:	je     0x140009d7f
   140009d20:	call   0x14000e9bc
   140009d25:	test   eax,eax
   140009d27:	jne    0x140009d7f
   140009d29:	mov    rbx,QWORD PTR [rip+0x1ac68]        # 0x140024998
   140009d30:	test   rbx,rbx
   140009d33:	je     0x140009d7f
   140009d35:	test   rsi,rsi
   140009d38:	je     0x140009d7f
   140009d3a:	mov    rcx,rsi
   140009d3d:	call   0x140009fa0
   140009d42:	mov    rdi,rax
   140009d45:	mov    rcx,QWORD PTR [rbx]
   140009d48:	test   rcx,rcx
   140009d4b:	je     0x140009d7f
   140009d4d:	call   0x140009fa0
   140009d52:	cmp    rax,rdi
   140009d55:	jbe    0x140009d6f
   140009d57:	mov    rcx,QWORD PTR [rbx]
   140009d5a:	cmp    BYTE PTR [rcx+rdi*1],0x3d
   140009d5e:	jne    0x140009d6f
   140009d60:	mov    r8,rdi
   140009d63:	mov    rdx,rsi
   140009d66:	call   0x14000e9b4
   140009d6b:	test   eax,eax
   140009d6d:	je     0x140009d75
   140009d6f:	add    rbx,0x8
   140009d73:	jmp    0x140009d45
   140009d75:	mov    rax,QWORD PTR [rbx]
   140009d78:	lea    rax,[rax+rdi*1+0x1]
   140009d7d:	jmp    0x140009d81
   140009d7f:	xor    eax,eax
   140009d81:	mov    rbx,QWORD PTR [rsp+0x30]
   140009d86:	mov    rsi,QWORD PTR [rsp+0x38]
   140009d8b:	add    rsp,0x20
   140009d8f:	pop    rdi
   140009d90:	ret    
   140009d91:	int3   
   140009d92:	int3   
   140009d93:	int3   
   140009d94:	rex push rbx
   140009d96:	sub    rsp,0x20
   140009d9a:	mov    rbx,rcx
   140009d9d:	xor    eax,eax
   140009d9f:	test   rcx,rcx
   140009da2:	setne  al
   140009da5:	test   eax,eax
   140009da7:	jne    0x140009dbd
   140009da9:	call   0x14000bdc0
   140009dae:	mov    DWORD PTR [rax],0x16
   140009db4:	call   0x14000d01c
   140009db9:	xor    eax,eax
   140009dbb:	jmp    0x140009df9
   140009dbd:	mov    edx,0x7fff
   140009dc2:	call   0x14000eb58
   140009dc7:	xor    ecx,ecx
   140009dc9:	cmp    rax,0x7fff
   140009dcf:	setb   cl
   140009dd2:	test   ecx,ecx
   140009dd4:	je     0x140009da9
   140009dd6:	mov    ecx,0x7
   140009ddb:	call   0x14000cb28
   140009de0:	nop
   140009de1:	mov    rcx,rbx
   140009de4:	call   0x140009cf0
   140009de9:	mov    rbx,rax
   140009dec:	mov    ecx,0x7
   140009df1:	call   0x14000ca28
   140009df6:	mov    rax,rbx
   140009df9:	add    rsp,0x20
   140009dfd:	pop    rbx
   140009dfe:	ret    
   140009dff:	int3   
   140009e00:	mov    QWORD PTR [rsp+0x10],rbx
   140009e05:	push   rdi
   140009e06:	sub    rsp,0x30
   140009e0a:	mov    eax,0x5a4d
   140009e0f:	cmp    WORD PTR [rip+0xffffffffffff61ea],ax        # 0x140000000
   140009e16:	je     0x140009e1c
   140009e18:	xor    ebx,ebx
   140009e1a:	jmp    0x140009e54
   140009e1c:	movsxd rax,DWORD PTR [rip+0xffffffffffff6219]        # 0x14000003c
   140009e23:	lea    rcx,[rip+0xffffffffffff61d6]        # 0x140000000
   140009e2a:	add    rax,rcx
   140009e2d:	cmp    DWORD PTR [rax],0x4550
   140009e33:	jne    0x140009e18
   140009e35:	mov    ecx,0x20b
   140009e3a:	cmp    WORD PTR [rax+0x18],cx
   140009e3e:	jne    0x140009e18
   140009e40:	xor    ebx,ebx
   140009e42:	cmp    DWORD PTR [rax+0x84],0xe
   140009e49:	jbe    0x140009e54
   140009e4b:	cmp    DWORD PTR [rax+0xf8],ebx
   140009e51:	setne  bl
   140009e54:	mov    DWORD PTR [rsp+0x40],ebx
   140009e58:	call   0x14000f560
   140009e5d:	test   eax,eax
   140009e5f:	jne    0x140009e83
   140009e61:	cmp    DWORD PTR [rip+0x1ab88],0x2        # 0x1400249f0
   140009e68:	je     0x140009e6f
   140009e6a:	call   0x14000db80
   140009e6f:	mov    ecx,0x1c
   140009e74:	call   0x14000d920
   140009e79:	mov    ecx,0xff
   140009e7e:	call   0x1400098a8
   140009e83:	call   0x14000d39c
   140009e88:	test   eax,eax
   140009e8a:	jne    0x140009eae
   140009e8c:	cmp    DWORD PTR [rip+0x1ab5d],0x2        # 0x1400249f0
   140009e93:	je     0x140009e9a
   140009e95:	call   0x14000db80
   140009e9a:	mov    ecx,0x10
   140009e9f:	call   0x14000d920
   140009ea4:	mov    ecx,0xff
   140009ea9:	call   0x1400098a8
   140009eae:	call   0x14000d588
   140009eb3:	nop
   140009eb4:	call   0x14000f28c
   140009eb9:	test   eax,eax
   140009ebb:	jns    0x140009ec7
   140009ebd:	mov    ecx,0x1b
   140009ec2:	call   0x140009c04
   140009ec7:	call   QWORD PTR [rip+0x10173]        # 0x14001a040
   140009ecd:	mov    QWORD PTR [rip+0x1cdd4],rax        # 0x140026ca8
   140009ed4:	call   0x14000f198
   140009ed9:	mov    QWORD PTR [rip+0x1ab00],rax        # 0x1400249e0
   140009ee0:	call   0x14000f0a0
   140009ee5:	test   eax,eax
   140009ee7:	jns    0x140009ef3
   140009ee9:	mov    ecx,0x8
   140009eee:	call   0x140009c04
   140009ef3:	call   0x14000eda0
   140009ef8:	test   eax,eax
   140009efa:	jns    0x140009f06
   140009efc:	mov    ecx,0x9
   140009f01:	call   0x140009c04
   140009f06:	mov    ecx,0x1
   140009f0b:	call   0x14000998c
   140009f10:	test   eax,eax
   140009f12:	je     0x140009f1b
   140009f14:	mov    ecx,eax
   140009f16:	call   0x140009c04
   140009f1b:	mov    r8,QWORD PTR [rip+0x1aa76]        # 0x140024998
   140009f22:	mov    QWORD PTR [rip+0x1aa77],r8        # 0x1400249a0
   140009f29:	mov    rdx,QWORD PTR [rip+0x1aa58]        # 0x140024988
   140009f30:	mov    ecx,DWORD PTR [rip+0x1aa4e]        # 0x140024984
   140009f36:	call   0x140001000
   140009f3b:	mov    edi,eax
   140009f3d:	mov    DWORD PTR [rsp+0x20],eax
   140009f41:	test   ebx,ebx
   140009f43:	jne    0x140009f4c
   140009f45:	mov    ecx,eax
   140009f47:	call   0x140009bcc
   140009f4c:	call   0x140009be4
   140009f51:	jmp    0x140009f6a
   140009f53:	mov    edi,eax
   140009f55:	cmp    DWORD PTR [rsp+0x40],0x0
   140009f5a:	jne    0x140009f64
   140009f5c:	mov    ecx,eax
   140009f5e:	call   0x140009bd8
   140009f63:	int3   
   140009f64:	call   0x140009bf4
   140009f69:	nop
   140009f6a:	mov    eax,edi
   140009f6c:	mov    rbx,QWORD PTR [rsp+0x48]
   140009f71:	add    rsp,0x30
   140009f75:	pop    rdi
   140009f76:	ret    
   140009f77:	int3   
   140009f78:	sub    rsp,0x28
   140009f7c:	call   0x14000f5b8
   140009f81:	add    rsp,0x28
   140009f85:	jmp    0x140009e00
   140009f8a:	int3   
   140009f8b:	int3   
   140009f8c:	int3   
   140009f8d:	int3   
   140009f8e:	int3   
   140009f8f:	int3   
   140009f90:	int3   
   140009f91:	int3   
   140009f92:	int3   
   140009f93:	int3   
   140009f94:	int3   
   140009f95:	int3   
   140009f96:	data16 nop WORD PTR [rax+rax*1+0x0]
   140009fa0:	mov    rax,rcx
   140009fa3:	neg    rcx
   140009fa6:	test   rax,0x7
   140009fac:	je     0x140009fbd
   140009fae:	xchg   ax,ax
   140009fb0:	mov    dl,BYTE PTR [rax]
   140009fb2:	inc    rax
   140009fb5:	test   dl,dl
   140009fb7:	je     0x14000a018
   140009fb9:	test   al,0x7
   140009fbb:	jne    0x140009fb0
   140009fbd:	movabs r8,0x7efefefefefefeff
   140009fc7:	movabs r11,0x8101010101010100
   140009fd1:	mov    rdx,QWORD PTR [rax]
   140009fd4:	mov    r9,r8
   140009fd7:	add    rax,0x8
   140009fdb:	add    r9,rdx
   140009fde:	not    rdx
   140009fe1:	xor    rdx,r9
   140009fe4:	and    rdx,r11
   140009fe7:	je     0x140009fd1
   140009fe9:	mov    rdx,QWORD PTR [rax-0x8]
   140009fed:	test   dl,dl
   140009fef:	je     0x14000a042
   140009ff1:	test   dh,dh
   140009ff3:	je     0x14000a03c
   140009ff5:	shr    rdx,0x10
   140009ff9:	test   dl,dl
   140009ffb:	je     0x14000a036
   140009ffd:	test   dh,dh
   140009fff:	je     0x14000a030
   14000a001:	shr    rdx,0x10
   14000a005:	test   dl,dl
   14000a007:	je     0x14000a02a
   14000a009:	test   dh,dh
   14000a00b:	je     0x14000a024
   14000a00d:	shr    edx,0x10
   14000a010:	test   dl,dl
   14000a012:	je     0x14000a01e
   14000a014:	test   dh,dh
   14000a016:	jne    0x140009fd1
   14000a018:	lea    rax,[rcx+rax*1-0x1]
   14000a01d:	ret    
   14000a01e:	lea    rax,[rcx+rax*1-0x2]
   14000a023:	ret    
   14000a024:	lea    rax,[rcx+rax*1-0x3]
   14000a029:	ret    
   14000a02a:	lea    rax,[rcx+rax*1-0x4]
   14000a02f:	ret    
   14000a030:	lea    rax,[rcx+rax*1-0x5]
   14000a035:	ret    
   14000a036:	lea    rax,[rcx+rax*1-0x6]
   14000a03b:	ret    
   14000a03c:	lea    rax,[rcx+rax*1-0x7]
   14000a041:	ret    
   14000a042:	lea    rax,[rcx+rax*1-0x8]
   14000a047:	ret    
   14000a048:	mov    rax,rsp
   14000a04b:	mov    QWORD PTR [rax+0x8],rbx
   14000a04f:	mov    QWORD PTR [rax+0x10],rbp
   14000a053:	mov    QWORD PTR [rax+0x18],rsi
   14000a057:	push   rdi
   14000a058:	sub    rsp,0x50
   14000a05c:	and    QWORD PTR [rax-0x38],0x0
   14000a061:	mov    rdi,rdx
   14000a064:	xor    edx,edx
   14000a066:	mov    rbx,r8
   14000a069:	mov    rbp,rcx
   14000a06c:	lea    r8d,[rdx+0x28]
   14000a070:	lea    rcx,[rax-0x30]
   14000a074:	mov    rsi,r9
   14000a077:	call   0x14000a530
   14000a07c:	test   rdi,rdi
   14000a07f:	jne    0x14000a096
   14000a081:	call   0x14000bdc0
   14000a086:	mov    DWORD PTR [rax],0x16
   14000a08c:	call   0x14000d01c
   14000a091:	or     eax,0xffffffff
   14000a094:	jmp    0x14000a0d9
   14000a096:	test   rbx,rbx
   14000a099:	je     0x14000a081
   14000a09b:	mov    rcx,rdi
   14000a09e:	call   0x140009fa0
   14000a0a3:	mov    r9,QWORD PTR [rsp+0x80]
   14000a0ab:	mov    ecx,0x7fffffff
   14000a0b0:	cmp    rax,rcx
   14000a0b3:	mov    r8,rsi
   14000a0b6:	mov    rdx,rbx
   14000a0b9:	cmova  eax,ecx
   14000a0bc:	lea    rcx,[rsp+0x20]
   14000a0c1:	mov    DWORD PTR [rsp+0x38],0x49
   14000a0c9:	mov    QWORD PTR [rsp+0x30],rdi
   14000a0ce:	mov    QWORD PTR [rsp+0x20],rdi
   14000a0d3:	mov    DWORD PTR [rsp+0x28],eax
   14000a0d7:	call   rbp
   14000a0d9:	mov    rbx,QWORD PTR [rsp+0x60]
   14000a0de:	mov    rbp,QWORD PTR [rsp+0x68]
   14000a0e3:	mov    rsi,QWORD PTR [rsp+0x70]
   14000a0e8:	add    rsp,0x50
   14000a0ec:	pop    rdi
   14000a0ed:	ret    
   14000a0ee:	int3   
   14000a0ef:	int3   
   14000a0f0:	mov    r11,rsp
   14000a0f3:	mov    QWORD PTR [r11+0x10],rdx
   14000a0f7:	mov    QWORD PTR [r11+0x18],r8
   14000a0fb:	mov    QWORD PTR [r11+0x20],r9
   14000a0ff:	sub    rsp,0x38
   14000a103:	mov    r8,rdx
   14000a106:	lea    rax,[r11+0x18]
   14000a10a:	mov    rdx,rcx
   14000a10d:	lea    rcx,[rip+0x5618]        # 0x14000f72c
   14000a114:	xor    r9d,r9d
   14000a117:	mov    QWORD PTR [r11-0x18],rax
   14000a11b:	call   0x14000a048
   14000a120:	add    rsp,0x38
   14000a124:	ret    
   14000a125:	int3   
   14000a126:	int3   
   14000a127:	int3   
   14000a128:	int3   
   14000a129:	int3   
   14000a12a:	int3   
   14000a12b:	int3   
   14000a12c:	int3   
   14000a12d:	int3   
   14000a12e:	int3   
   14000a12f:	int3   
   14000a130:	int3   
   14000a131:	int3   
   14000a132:	int3   
   14000a133:	int3   
   14000a134:	int3   
   14000a135:	int3   
   14000a136:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000a140:	mov    r11,rcx
   14000a143:	sub    rdx,rcx
   14000a146:	jb     0x14000a2ea
   14000a14c:	cmp    r8,0x8
   14000a150:	jb     0x14000a1b3
   14000a152:	test   cl,0x7
   14000a155:	je     0x14000a18d
   14000a157:	test   cl,0x1
   14000a15a:	je     0x14000a167
   14000a15c:	mov    al,BYTE PTR [rdx+rcx*1]
   14000a15f:	dec    r8
   14000a162:	mov    BYTE PTR [rcx],al
   14000a164:	inc    rcx
   14000a167:	test   cl,0x2
   14000a16a:	je     0x14000a17b
   14000a16c:	mov    ax,WORD PTR [rdx+rcx*1]
   14000a170:	sub    r8,0x2
   14000a174:	mov    WORD PTR [rcx],ax
   14000a177:	add    rcx,0x2
   14000a17b:	test   cl,0x4
   14000a17e:	je     0x14000a18d
   14000a180:	mov    eax,DWORD PTR [rdx+rcx*1]
   14000a183:	sub    r8,0x4
   14000a187:	mov    DWORD PTR [rcx],eax
   14000a189:	add    rcx,0x4
   14000a18d:	mov    r9,r8
   14000a190:	shr    r9,0x5
   14000a194:	jne    0x14000a1e7
   14000a196:	mov    r9,r8
   14000a199:	shr    r9,0x3
   14000a19d:	je     0x14000a1b3
   14000a19f:	mov    rax,QWORD PTR [rdx+rcx*1]
   14000a1a3:	mov    QWORD PTR [rcx],rax
   14000a1a6:	add    rcx,0x8
   14000a1aa:	dec    r9
   14000a1ad:	jne    0x14000a19f
   14000a1af:	and    r8,0x7
   14000a1b3:	test   r8,r8
   14000a1b6:	jne    0x14000a1c0
   14000a1b8:	mov    rax,r11
   14000a1bb:	ret    
   14000a1bc:	nop    DWORD PTR [rax+0x0]
   14000a1c0:	mov    al,BYTE PTR [rdx+rcx*1]
   14000a1c3:	mov    BYTE PTR [rcx],al
   14000a1c5:	inc    rcx
   14000a1c8:	dec    r8
   14000a1cb:	jne    0x14000a1c0
   14000a1cd:	mov    rax,r11
   14000a1d0:	ret    
   14000a1d1:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000a1e0:	data16 data16 xchg ax,ax
   14000a1e4:	data16 xchg ax,ax
   14000a1e7:	cmp    r9,0x2000
   14000a1ee:	jae    0x14000a232
   14000a1f0:	mov    rax,QWORD PTR [rdx+rcx*1]
   14000a1f4:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   14000a1f9:	add    rcx,0x20
   14000a1fd:	mov    QWORD PTR [rcx-0x20],rax
   14000a201:	mov    QWORD PTR [rcx-0x18],r10
   14000a205:	mov    rax,QWORD PTR [rdx+rcx*1-0x10]
   14000a20a:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   14000a20f:	dec    r9
   14000a212:	mov    QWORD PTR [rcx-0x10],rax
   14000a216:	mov    QWORD PTR [rcx-0x8],r10
   14000a21a:	jne    0x14000a1f0
   14000a21c:	and    r8,0x1f
   14000a220:	jmp    0x14000a196
   14000a225:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000a230:	xchg   ax,ax
   14000a232:	cmp    rdx,0x1000
   14000a239:	jb     0x14000a1f0
   14000a23b:	mov    eax,0x20
   14000a240:	prefetchnta BYTE PTR [rdx+rcx*1]
   14000a244:	prefetchnta BYTE PTR [rdx+rcx*1+0x40]
   14000a249:	add    rcx,0x80
   14000a250:	dec    eax
   14000a252:	jne    0x14000a240
   14000a254:	sub    rcx,0x1000
   14000a25b:	mov    eax,0x40
   14000a260:	mov    r9,QWORD PTR [rdx+rcx*1]
   14000a264:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   14000a269:	movnti QWORD PTR [rcx],r9
   14000a26d:	movnti QWORD PTR [rcx+0x8],r10
   14000a272:	mov    r9,QWORD PTR [rdx+rcx*1+0x10]
   14000a277:	mov    r10,QWORD PTR [rdx+rcx*1+0x18]
   14000a27c:	movnti QWORD PTR [rcx+0x10],r9
   14000a281:	movnti QWORD PTR [rcx+0x18],r10
   14000a286:	mov    r9,QWORD PTR [rdx+rcx*1+0x20]
   14000a28b:	mov    r10,QWORD PTR [rdx+rcx*1+0x28]
   14000a290:	add    rcx,0x40
   14000a294:	movnti QWORD PTR [rcx-0x20],r9
   14000a299:	movnti QWORD PTR [rcx-0x18],r10
   14000a29e:	mov    r9,QWORD PTR [rdx+rcx*1-0x10]
   14000a2a3:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   14000a2a8:	dec    eax
   14000a2aa:	movnti QWORD PTR [rcx-0x10],r9
   14000a2af:	movnti QWORD PTR [rcx-0x8],r10
   14000a2b4:	jne    0x14000a260
   14000a2b6:	sub    r8,0x1000
   14000a2bd:	cmp    r8,0x1000
   14000a2c4:	jae    0x14000a23b
   14000a2ca:	lock or BYTE PTR [rsp],0x0
   14000a2cf:	jmp    0x14000a18d
   14000a2d4:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000a2e0:	data16 data16 xchg ax,ax
   14000a2e4:	data16 data16 xchg ax,ax
   14000a2e8:	xchg   ax,ax
   14000a2ea:	add    rcx,r8
   14000a2ed:	cmp    r8,0x8
   14000a2f1:	jb     0x14000a354
   14000a2f3:	test   cl,0x7
   14000a2f6:	je     0x14000a32e
   14000a2f8:	test   cl,0x1
   14000a2fb:	je     0x14000a308
   14000a2fd:	dec    rcx
   14000a300:	mov    al,BYTE PTR [rdx+rcx*1]
   14000a303:	dec    r8
   14000a306:	mov    BYTE PTR [rcx],al
   14000a308:	test   cl,0x2
   14000a30b:	je     0x14000a31c
   14000a30d:	sub    rcx,0x2
   14000a311:	mov    ax,WORD PTR [rdx+rcx*1]
   14000a315:	sub    r8,0x2
   14000a319:	mov    WORD PTR [rcx],ax
   14000a31c:	test   cl,0x4
   14000a31f:	je     0x14000a32e
   14000a321:	sub    rcx,0x4
   14000a325:	mov    eax,DWORD PTR [rdx+rcx*1]
   14000a328:	sub    r8,0x4
   14000a32c:	mov    DWORD PTR [rcx],eax
   14000a32e:	mov    r9,r8
   14000a331:	shr    r9,0x5
   14000a335:	jne    0x14000a387
   14000a337:	mov    r9,r8
   14000a33a:	shr    r9,0x3
   14000a33e:	je     0x14000a354
   14000a340:	sub    rcx,0x8
   14000a344:	mov    rax,QWORD PTR [rdx+rcx*1]
   14000a348:	dec    r9
   14000a34b:	mov    QWORD PTR [rcx],rax
   14000a34e:	jne    0x14000a340
   14000a350:	and    r8,0x7
   14000a354:	test   r8,r8
   14000a357:	jne    0x14000a360
   14000a359:	mov    rax,r11
   14000a35c:	ret    
   14000a35d:	nop    DWORD PTR [rax]
   14000a360:	dec    rcx
   14000a363:	mov    al,BYTE PTR [rdx+rcx*1]
   14000a366:	dec    r8
   14000a369:	mov    BYTE PTR [rcx],al
   14000a36b:	jne    0x14000a360
   14000a36d:	mov    rax,r11
   14000a370:	ret    
   14000a371:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000a380:	data16 data16 xchg ax,ax
   14000a384:	data16 xchg ax,ax
   14000a387:	cmp    r9,0x2000
   14000a38e:	jae    0x14000a3d2
   14000a390:	mov    rax,QWORD PTR [rdx+rcx*1-0x8]
   14000a395:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   14000a39a:	sub    rcx,0x20
   14000a39e:	mov    QWORD PTR [rcx+0x18],rax
   14000a3a2:	mov    QWORD PTR [rcx+0x10],r10
   14000a3a6:	mov    rax,QWORD PTR [rdx+rcx*1+0x8]
   14000a3ab:	mov    r10,QWORD PTR [rdx+rcx*1]
   14000a3af:	dec    r9
   14000a3b2:	mov    QWORD PTR [rcx+0x8],rax
   14000a3b6:	mov    QWORD PTR [rcx],r10
   14000a3b9:	jne    0x14000a390
   14000a3bb:	and    r8,0x1f
   14000a3bf:	jmp    0x14000a337
   14000a3c4:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000a3d0:	xchg   ax,ax
   14000a3d2:	cmp    rdx,0xfffffffffffff000
   14000a3d9:	ja     0x14000a390
   14000a3db:	mov    eax,0x20
   14000a3e0:	sub    rcx,0x80
   14000a3e7:	prefetchnta BYTE PTR [rdx+rcx*1]
   14000a3eb:	prefetchnta BYTE PTR [rdx+rcx*1+0x40]
   14000a3f0:	dec    eax
   14000a3f2:	jne    0x14000a3e0
   14000a3f4:	add    rcx,0x1000
   14000a3fb:	mov    eax,0x40
   14000a400:	mov    r9,QWORD PTR [rdx+rcx*1-0x8]
   14000a405:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   14000a40a:	movnti QWORD PTR [rcx-0x8],r9
   14000a40f:	movnti QWORD PTR [rcx-0x10],r10
   14000a414:	mov    r9,QWORD PTR [rdx+rcx*1-0x18]
   14000a419:	mov    r10,QWORD PTR [rdx+rcx*1-0x20]
   14000a41e:	movnti QWORD PTR [rcx-0x18],r9
   14000a423:	movnti QWORD PTR [rcx-0x20],r10
   14000a428:	mov    r9,QWORD PTR [rdx+rcx*1-0x28]
   14000a42d:	mov    r10,QWORD PTR [rdx+rcx*1-0x30]
   14000a432:	sub    rcx,0x40
   14000a436:	movnti QWORD PTR [rcx+0x18],r9
   14000a43b:	movnti QWORD PTR [rcx+0x10],r10
   14000a440:	mov    r9,QWORD PTR [rdx+rcx*1+0x8]
   14000a445:	mov    r10,QWORD PTR [rdx+rcx*1]
   14000a449:	dec    eax
   14000a44b:	movnti QWORD PTR [rcx+0x8],r9
   14000a450:	movnti QWORD PTR [rcx],r10
   14000a454:	jne    0x14000a400
   14000a456:	sub    r8,0x1000
   14000a45d:	cmp    r8,0x1000
   14000a464:	jae    0x14000a3db
   14000a46a:	lock or BYTE PTR [rsp],0x0
   14000a46f:	jmp    0x14000a32e
   14000a474:	mov    QWORD PTR [rsp+0x10],rdx
   14000a479:	mov    QWORD PTR [rsp+0x18],r8
   14000a47e:	mov    QWORD PTR [rsp+0x20],r9
   14000a483:	push   rbp
   14000a484:	push   rbx
   14000a485:	push   rdi
   14000a486:	mov    rbp,rsp
   14000a489:	sub    rsp,0x50
   14000a48d:	and    QWORD PTR [rbp-0x30],0x0
   14000a492:	mov    rdi,rdx
   14000a495:	xor    edx,edx
   14000a497:	mov    rbx,rcx
   14000a49a:	lea    rcx,[rbp-0x28]
   14000a49e:	lea    r8d,[rdx+0x28]
   14000a4a2:	call   0x14000a530
   14000a4a7:	test   rdi,rdi
   14000a4aa:	jne    0x14000a4c1
   14000a4ac:	call   0x14000bdc0
   14000a4b1:	mov    DWORD PTR [rax],0x16
   14000a4b7:	call   0x14000d01c
   14000a4bc:	or     eax,0xffffffff
   14000a4bf:	jmp    0x14000a50c
   14000a4c1:	test   rbx,rbx
   14000a4c4:	je     0x14000a4ac
   14000a4c6:	lea    r9,[rbp+0x30]
   14000a4ca:	lea    rcx,[rbp-0x30]
   14000a4ce:	xor    r8d,r8d
   14000a4d1:	mov    rdx,rdi
   14000a4d4:	mov    DWORD PTR [rbp-0x28],0x7fffffff
   14000a4db:	mov    DWORD PTR [rbp-0x18],0x42
   14000a4e2:	mov    QWORD PTR [rbp-0x20],rbx
   14000a4e6:	mov    QWORD PTR [rbp-0x30],rbx
   14000a4ea:	call   0x14000de04
   14000a4ef:	dec    DWORD PTR [rbp-0x28]
   14000a4f2:	mov    ebx,eax
   14000a4f4:	js     0x14000a4ff
   14000a4f6:	mov    rcx,QWORD PTR [rbp-0x30]
   14000a4fa:	mov    BYTE PTR [rcx],0x0
   14000a4fd:	jmp    0x14000a50a
   14000a4ff:	lea    rdx,[rbp-0x30]
   14000a503:	xor    ecx,ecx
   14000a505:	call   0x1400107a0
   14000a50a:	mov    eax,ebx
   14000a50c:	add    rsp,0x50
   14000a510:	pop    rdi
   14000a511:	pop    rbx
   14000a512:	pop    rbp
   14000a513:	ret    
   14000a514:	int3   
   14000a515:	int3   
   14000a516:	int3   
   14000a517:	int3   
   14000a518:	int3   
   14000a519:	int3   
   14000a51a:	int3   
   14000a51b:	int3   
   14000a51c:	int3   
   14000a51d:	int3   
   14000a51e:	int3   
   14000a51f:	int3   
   14000a520:	int3   
   14000a521:	int3   
   14000a522:	int3   
   14000a523:	int3   
   14000a524:	int3   
   14000a525:	int3   
   14000a526:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000a530:	mov    rax,rcx
   14000a533:	cmp    r8,0x8
   14000a537:	jb     0x14000a58c
   14000a539:	movzx  edx,dl
   14000a53c:	movabs r9,0x101010101010101
   14000a546:	imul   rdx,r9
   14000a54a:	cmp    r8,0x40
   14000a54e:	jb     0x14000a56e
   14000a550:	neg    rcx
   14000a553:	and    ecx,0x7
   14000a556:	je     0x14000a55e
   14000a558:	sub    r8,rcx
   14000a55b:	mov    QWORD PTR [rax],rdx
   14000a55e:	add    rcx,rax
   14000a561:	mov    r9,r8
   14000a564:	and    r8,0x3f
   14000a568:	shr    r9,0x6
   14000a56c:	jne    0x14000a5a7
   14000a56e:	mov    r9,r8
   14000a571:	and    r8,0x7
   14000a575:	shr    r9,0x3
   14000a579:	je     0x14000a58c
   14000a57b:	data16 data16 xchg ax,ax
   14000a57f:	nop
   14000a580:	mov    QWORD PTR [rcx],rdx
   14000a583:	add    rcx,0x8
   14000a587:	dec    r9
   14000a58a:	jne    0x14000a580
   14000a58c:	test   r8,r8
   14000a58f:	je     0x14000a59b
   14000a591:	mov    BYTE PTR [rcx],dl
   14000a593:	inc    rcx
   14000a596:	dec    r8
   14000a599:	jne    0x14000a591
   14000a59b:	ret    
   14000a59c:	nop    DWORD PTR [rax+0x0]
   14000a5a0:	data16 data16 xchg ax,ax
   14000a5a4:	data16 xchg ax,ax
   14000a5a7:	cmp    r9,0x1c00
   14000a5ae:	jae    0x14000a5e0
   14000a5b0:	mov    QWORD PTR [rcx],rdx
   14000a5b3:	mov    QWORD PTR [rcx+0x8],rdx
   14000a5b7:	mov    QWORD PTR [rcx+0x10],rdx
   14000a5bb:	add    rcx,0x40
   14000a5bf:	mov    QWORD PTR [rcx-0x28],rdx
   14000a5c3:	mov    QWORD PTR [rcx-0x20],rdx
   14000a5c7:	dec    r9
   14000a5ca:	mov    QWORD PTR [rcx-0x18],rdx
   14000a5ce:	mov    QWORD PTR [rcx-0x10],rdx
   14000a5d2:	mov    QWORD PTR [rcx-0x8],rdx
   14000a5d6:	jne    0x14000a5b0
   14000a5d8:	jmp    0x14000a56e
   14000a5da:	nop    WORD PTR [rax+rax*1+0x0]
   14000a5e0:	movnti QWORD PTR [rcx],rdx
   14000a5e4:	movnti QWORD PTR [rcx+0x8],rdx
   14000a5e9:	movnti QWORD PTR [rcx+0x10],rdx
   14000a5ee:	add    rcx,0x40
   14000a5f2:	movnti QWORD PTR [rcx-0x28],rdx
   14000a5f7:	movnti QWORD PTR [rcx-0x20],rdx
   14000a5fc:	dec    r9
   14000a5ff:	movnti QWORD PTR [rcx-0x18],rdx
   14000a604:	movnti QWORD PTR [rcx-0x10],rdx
   14000a609:	movnti QWORD PTR [rcx-0x8],rdx
   14000a60e:	jne    0x14000a5e0
   14000a610:	lock or BYTE PTR [rsp],0x0
   14000a615:	jmp    0x14000a56e
   14000a61a:	int3   
   14000a61b:	int3   
   14000a61c:	rex push rbx
   14000a61e:	sub    rsp,0x20
   14000a622:	mov    r11d,DWORD PTR [r8]
   14000a625:	mov    rbx,rdx
   14000a628:	mov    r9,rcx
   14000a62b:	and    r11d,0xfffffff8
   14000a62f:	test   BYTE PTR [r8],0x4
   14000a633:	mov    r10,rcx
   14000a636:	je     0x14000a64b
   14000a638:	mov    eax,DWORD PTR [r8+0x8]
   14000a63c:	movsxd r10,DWORD PTR [r8+0x4]
   14000a640:	neg    eax
   14000a642:	add    r10,rcx
   14000a645:	movsxd rcx,eax
   14000a648:	and    r10,rcx
   14000a64b:	movsxd rax,r11d
   14000a64e:	mov    rdx,QWORD PTR [rax+r10*1]
   14000a652:	mov    rax,QWORD PTR [rbx+0x10]
   14000a656:	mov    ecx,DWORD PTR [rax+0x8]
   14000a659:	add    rcx,QWORD PTR [rbx+0x8]
   14000a65d:	test   BYTE PTR [rcx+0x3],0xf
   14000a661:	je     0x14000a66f
   14000a663:	movzx  eax,BYTE PTR [rcx+0x3]
   14000a667:	and    eax,0xfffffff0
   14000a66a:	cdqe   
   14000a66c:	add    r9,rax
   14000a66f:	xor    r9,rdx
   14000a672:	mov    rcx,r9
   14000a675:	add    rsp,0x20
   14000a679:	pop    rbx
   14000a67a:	jmp    0x14000a820
   14000a67f:	int3   
   14000a680:	sub    rsp,0x28
   14000a684:	mov    r8,QWORD PTR [r9+0x38]
   14000a688:	mov    rcx,rdx
   14000a68b:	mov    rdx,r9
   14000a68e:	call   0x14000a61c
   14000a693:	mov    eax,0x1
   14000a698:	add    rsp,0x28
   14000a69c:	ret    
   14000a69d:	int3   
   14000a69e:	int3   
   14000a69f:	int3   
   14000a6a0:	int3   
   14000a6a1:	int3   
   14000a6a2:	int3   
   14000a6a3:	int3   
   14000a6a4:	int3   
   14000a6a5:	int3   
   14000a6a6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000a6b0:	mov    r11,rcx
   14000a6b3:	test   cl,0x7
   14000a6b6:	je     0x14000a6ca
   14000a6b8:	mov    al,BYTE PTR [rcx]
   14000a6ba:	test   al,al
   14000a6bc:	je     0x14000a753
   14000a6c2:	inc    rcx
   14000a6c5:	test   cl,0x7
   14000a6c8:	jne    0x14000a6b8
   14000a6ca:	mov    rax,QWORD PTR [rcx]
   14000a6cd:	mov    r10,rax
   14000a6d0:	movabs r9,0x7efefefefefefeff
   14000a6da:	add    r9,r10
   14000a6dd:	xor    r10,0xffffffffffffffff
   14000a6e1:	xor    r10,r9
   14000a6e4:	add    rcx,0x8
   14000a6e8:	movabs r9,0x8101010101010100
   14000a6f2:	test   r9,r10
   14000a6f5:	je     0x14000a6ca
   14000a6f7:	sub    rcx,0x8
   14000a6fb:	test   al,al
   14000a6fd:	je     0x14000a753
   14000a6ff:	inc    rcx
   14000a702:	test   ah,ah
   14000a704:	je     0x14000a753
   14000a706:	inc    rcx
   14000a709:	shr    rax,0x10
   14000a70d:	test   al,al
   14000a70f:	je     0x14000a753
   14000a711:	inc    rcx
   14000a714:	test   ah,ah
   14000a716:	je     0x14000a753
   14000a718:	inc    rcx
   14000a71b:	shr    rax,0x10
   14000a71f:	test   al,al
   14000a721:	je     0x14000a753
   14000a723:	inc    rcx
   14000a726:	test   ah,ah
   14000a728:	je     0x14000a753
   14000a72a:	inc    rcx
   14000a72d:	shr    eax,0x10
   14000a730:	test   al,al
   14000a732:	je     0x14000a753
   14000a734:	inc    rcx
   14000a737:	test   ah,ah
   14000a739:	je     0x14000a753
   14000a73b:	inc    rcx
   14000a73e:	jmp    0x14000a6ca
   14000a740:	int3   
   14000a741:	int3   
   14000a742:	int3   
   14000a743:	int3   
   14000a744:	int3   
   14000a745:	int3   
   14000a746:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000a750:	mov    r11,rcx
   14000a753:	sub    rcx,rdx
   14000a756:	test   dl,0x7
   14000a759:	je     0x14000a77a
   14000a75b:	mov    al,BYTE PTR [rdx]
   14000a75d:	mov    BYTE PTR [rcx+rdx*1],al
   14000a760:	test   al,al
   14000a762:	je     0x14000a76e
   14000a764:	inc    rdx
   14000a767:	test   dl,0x7
   14000a76a:	jne    0x14000a75b
   14000a76c:	jmp    0x14000a77a
   14000a76e:	mov    rax,r11
   14000a771:	ret    
   14000a772:	mov    QWORD PTR [rcx+rdx*1],rax
   14000a776:	add    rdx,0x8
   14000a77a:	mov    rax,QWORD PTR [rdx]
   14000a77d:	movabs r9,0x7efefefefefefeff
   14000a787:	add    r9,rax
   14000a78a:	mov    r10,rax
   14000a78d:	xor    r10,0xffffffffffffffff
   14000a791:	xor    r10,r9
   14000a794:	movabs r9,0x8101010101010100
   14000a79e:	test   r9,r10
   14000a7a1:	je     0x14000a772
   14000a7a3:	test   al,al
   14000a7a5:	mov    BYTE PTR [rcx+rdx*1],al
   14000a7a8:	je     0x14000a803
   14000a7aa:	inc    rdx
   14000a7ad:	test   ah,ah
   14000a7af:	mov    BYTE PTR [rcx+rdx*1],ah
   14000a7b2:	je     0x14000a803
   14000a7b4:	inc    rdx
   14000a7b7:	shr    rax,0x10
   14000a7bb:	test   al,al
   14000a7bd:	mov    BYTE PTR [rcx+rdx*1],al
   14000a7c0:	je     0x14000a803
   14000a7c2:	inc    rdx
   14000a7c5:	test   ah,ah
   14000a7c7:	mov    BYTE PTR [rcx+rdx*1],ah
   14000a7ca:	je     0x14000a803
   14000a7cc:	inc    rdx
   14000a7cf:	shr    rax,0x10
   14000a7d3:	test   al,al
   14000a7d5:	mov    BYTE PTR [rcx+rdx*1],al
   14000a7d8:	je     0x14000a803
   14000a7da:	inc    rdx
   14000a7dd:	test   ah,ah
   14000a7df:	mov    BYTE PTR [rcx+rdx*1],ah
   14000a7e2:	je     0x14000a803
   14000a7e4:	inc    rdx
   14000a7e7:	shr    eax,0x10
   14000a7ea:	test   al,al
   14000a7ec:	mov    BYTE PTR [rcx+rdx*1],al
   14000a7ef:	je     0x14000a803
   14000a7f1:	inc    rdx
   14000a7f4:	test   ah,ah
   14000a7f6:	mov    BYTE PTR [rcx+rdx*1],ah
   14000a7f9:	je     0x14000a803
   14000a7fb:	inc    rdx
   14000a7fe:	jmp    0x14000a77a
   14000a803:	mov    rax,r11
   14000a806:	ret    
   14000a807:	int3   
   14000a808:	int3   
   14000a809:	int3   
   14000a80a:	int3   
   14000a80b:	int3   
   14000a80c:	int3   
   14000a80d:	int3   
   14000a80e:	int3   
   14000a80f:	int3   
   14000a810:	int3   
   14000a811:	int3   
   14000a812:	int3   
   14000a813:	int3   
   14000a814:	int3   
   14000a815:	int3   
   14000a816:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000a820:	cmp    rcx,QWORD PTR [rip+0x18899]        # 0x1400230c0
   14000a827:	jne    0x14000a83a
   14000a829:	rol    rcx,0x10
   14000a82d:	test   cx,0xffff
   14000a832:	jne    0x14000a836
   14000a834:	repz ret 
   14000a836:	ror    rcx,0x10
   14000a83a:	jmp    0x140010930
   14000a83f:	int3   
   14000a840:	int3   
   14000a841:	int3   
   14000a842:	int3   
   14000a843:	int3   
   14000a844:	int3   
   14000a845:	int3   
   14000a846:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000a850:	sub    rdx,rcx
   14000a853:	mov    r9,rdx
   14000a856:	test   cl,0x7
   14000a859:	je     0x14000a876
   14000a85b:	mov    al,BYTE PTR [rcx]
   14000a85d:	mov    dl,BYTE PTR [rcx+r9*1]
   14000a861:	cmp    al,dl
   14000a863:	jne    0x14000a8bb
   14000a865:	inc    rcx
   14000a868:	test   al,al
   14000a86a:	je     0x14000a8c3
   14000a86c:	test   rcx,0x7
   14000a873:	jne    0x14000a85b
   14000a875:	nop
   14000a876:	movabs r11,0x8101010101010100
   14000a880:	lea    rdx,[rcx+r9*1]
   14000a884:	and    dx,0xfff
   14000a889:	cmp    dx,0xff8
   14000a88e:	ja     0x14000a85b
   14000a890:	mov    rax,QWORD PTR [rcx]
   14000a893:	mov    rdx,QWORD PTR [rcx+r9*1]
   14000a897:	cmp    rax,rdx
   14000a89a:	jne    0x14000a85b
   14000a89c:	movabs r10,0x7efefefefefefeff
   14000a8a6:	add    r10,rdx
   14000a8a9:	xor    rax,0xffffffffffffffff
   14000a8ad:	add    rcx,0x8
   14000a8b1:	xor    rax,r10
   14000a8b4:	test   r11,rax
   14000a8b7:	je     0x14000a880
   14000a8b9:	jmp    0x14000a8ca
   14000a8bb:	sbb    rax,rax
   14000a8be:	sbb    rax,0xffffffffffffffff
   14000a8c2:	ret    
   14000a8c3:	xor    eax,eax
   14000a8c5:	ret    
   14000a8c6:	data16 data16 xchg ax,ax
   14000a8ca:	test   dl,dl
   14000a8cc:	je     0x14000a8f5
   14000a8ce:	test   dh,dh
   14000a8d0:	je     0x14000a8f5
   14000a8d2:	shr    rdx,0x10
   14000a8d6:	test   dl,dl
   14000a8d8:	je     0x14000a8f5
   14000a8da:	test   dh,dh
   14000a8dc:	je     0x14000a8f5
   14000a8de:	shr    rdx,0x10
   14000a8e2:	test   dl,dl
   14000a8e4:	je     0x14000a8f5
   14000a8e6:	test   dh,dh
   14000a8e8:	je     0x14000a8f5
   14000a8ea:	shr    edx,0x10
   14000a8ed:	test   dl,dl
   14000a8ef:	je     0x14000a8f5
   14000a8f1:	test   dh,dh
   14000a8f3:	jne    0x14000a880
   14000a8f5:	xor    eax,eax
   14000a8f7:	ret    
   14000a8f8:	sbb    rax,rax
   14000a8fb:	sbb    rax,0xffffffffffffffff
   14000a8ff:	ret    
   14000a900:	mov    rax,rsp
   14000a903:	mov    QWORD PTR [rax+0x10],rdx
   14000a907:	mov    QWORD PTR [rax+0x8],rcx
   14000a90b:	mov    QWORD PTR [rax+0x18],r8
   14000a90f:	mov    QWORD PTR [rax+0x20],r9
   14000a913:	push   rbx
   14000a914:	push   rsi
   14000a915:	push   rdi
   14000a916:	push   r12
   14000a918:	sub    rsp,0x28
   14000a91c:	mov    rdi,rcx
   14000a91f:	xor    esi,esi
   14000a921:	xor    eax,eax
   14000a923:	test   rcx,rcx
   14000a926:	setne  al
   14000a929:	test   eax,eax
   14000a92b:	jne    0x14000a945
   14000a92d:	call   0x14000bdc0
   14000a932:	mov    DWORD PTR [rax],0x16
   14000a938:	call   0x14000d01c
   14000a93d:	or     eax,0xffffffff
   14000a940:	jmp    0x14000aa24
   14000a945:	xor    eax,eax
   14000a947:	test   rdx,rdx
   14000a94a:	setne  al
   14000a94d:	test   eax,eax
   14000a94f:	je     0x14000a92d
   14000a951:	lea    r12,[rsp+0x60]
   14000a956:	call   0x14000aca8
   14000a95b:	nop
   14000a95c:	test   BYTE PTR [rdi+0x18],0x40
   14000a960:	jne    0x14000a9ec
   14000a966:	mov    rcx,rdi
   14000a969:	call   0x140010a7c
   14000a96e:	cmp    eax,0xffffffff
   14000a971:	je     0x14000a99d
   14000a973:	cmp    eax,0xfffffffe
   14000a976:	je     0x14000a99d
   14000a978:	movsxd rdx,eax
   14000a97b:	mov    rcx,rdx
   14000a97e:	sar    rcx,0x5
   14000a982:	lea    r8,[rip+0x1b0f7]        # 0x140025a80
   14000a989:	and    edx,0x1f
   14000a98c:	imul   rdx,rdx,0x58
   14000a990:	add    rdx,QWORD PTR [r8+rcx*8]
   14000a994:	lea    rcx,[rip+0x18f15]        # 0x1400238b0
   14000a99b:	jmp    0x14000a9ae
   14000a99d:	lea    rcx,[rip+0x18f0c]        # 0x1400238b0
   14000a9a4:	mov    rdx,rcx
   14000a9a7:	lea    r8,[rip+0x1b0d2]        # 0x140025a80
   14000a9ae:	test   BYTE PTR [rdx+0x38],0x7f
   14000a9b2:	jne    0x14000a9d9
   14000a9b4:	cmp    eax,0xffffffff
   14000a9b7:	je     0x14000a9d3
   14000a9b9:	cmp    eax,0xfffffffe
   14000a9bc:	je     0x14000a9d3
   14000a9be:	movsxd rcx,eax
   14000a9c1:	mov    rax,rcx
   14000a9c4:	sar    rax,0x5
   14000a9c8:	and    ecx,0x1f
   14000a9cb:	imul   rcx,rcx,0x58
   14000a9cf:	add    rcx,QWORD PTR [r8+rax*8]
   14000a9d3:	test   BYTE PTR [rcx+0x38],0x80
   14000a9d7:	je     0x14000a9ec
   14000a9d9:	call   0x14000bdc0
   14000a9de:	mov    DWORD PTR [rax],0x16
   14000a9e4:	call   0x14000d01c
   14000a9e9:	or     esi,0xffffffff
   14000a9ec:	test   esi,esi
   14000a9ee:	jne    0x14000aa1a
   14000a9f0:	mov    rcx,rdi
   14000a9f3:	call   0x14000dbc4
   14000a9f8:	mov    ebx,eax
   14000a9fa:	mov    r9,r12
   14000a9fd:	xor    r8d,r8d
   14000aa00:	mov    rdx,QWORD PTR [rsp+0x58]
   14000aa05:	mov    rcx,rdi
   14000aa08:	call   0x14000de04
   14000aa0d:	mov    esi,eax
   14000aa0f:	mov    rdx,rdi
   14000aa12:	mov    ecx,ebx
   14000aa14:	call   0x14000dc98
   14000aa19:	nop
   14000aa1a:	mov    rcx,rdi
   14000aa1d:	call   0x14000ad40
   14000aa22:	mov    eax,esi
   14000aa24:	add    rsp,0x28
   14000aa28:	pop    r12
   14000aa2a:	pop    rdi
   14000aa2b:	pop    rsi
   14000aa2c:	pop    rbx
   14000aa2d:	ret    
   14000aa2e:	int3   
   14000aa2f:	int3   
   14000aa30:	mov    rax,rsp
   14000aa33:	mov    QWORD PTR [rax+0x8],rbx
   14000aa37:	mov    QWORD PTR [rax+0x18],rsi
   14000aa3b:	mov    QWORD PTR [rax+0x20],rdi
   14000aa3f:	mov    QWORD PTR [rax+0x10],rdx
   14000aa43:	push   r12
   14000aa45:	push   r13
   14000aa47:	push   r14
   14000aa49:	sub    rsp,0x20
   14000aa4d:	mov    r13,r9
   14000aa50:	mov    r12,r8
   14000aa53:	mov    rdi,rdx
   14000aa56:	mov    r14,rcx
   14000aa59:	xor    esi,esi
   14000aa5b:	xor    eax,eax
   14000aa5d:	test   rdx,rdx
   14000aa60:	setne  al
   14000aa63:	test   eax,eax
   14000aa65:	jne    0x14000aa7f
   14000aa67:	call   0x14000bdc0
   14000aa6c:	mov    DWORD PTR [rax],0x16
   14000aa72:	call   0x14000d01c
   14000aa77:	or     eax,0xffffffff
   14000aa7a:	jmp    0x14000ab5a
   14000aa7f:	xor    eax,eax
   14000aa81:	test   r8,r8
   14000aa84:	setne  al
   14000aa87:	test   eax,eax
   14000aa89:	je     0x14000aa67
   14000aa8b:	mov    rcx,rdx
   14000aa8e:	call   0x14000aca8
   14000aa93:	nop
   14000aa94:	test   BYTE PTR [rdi+0x18],0x40
   14000aa98:	jne    0x14000ab24
   14000aa9e:	mov    rcx,rdi
   14000aaa1:	call   0x140010a7c
   14000aaa6:	cmp    eax,0xffffffff
   14000aaa9:	je     0x14000aad5
   14000aaab:	cmp    eax,0xfffffffe
   14000aaae:	je     0x14000aad5
   14000aab0:	movsxd rdx,eax
   14000aab3:	mov    rcx,rdx
   14000aab6:	sar    rcx,0x5
   14000aaba:	lea    r8,[rip+0x1afbf]        # 0x140025a80
   14000aac1:	and    edx,0x1f
   14000aac4:	imul   rdx,rdx,0x58
   14000aac8:	add    rdx,QWORD PTR [r8+rcx*8]
   14000aacc:	lea    rcx,[rip+0x18ddd]        # 0x1400238b0
   14000aad3:	jmp    0x14000aae6
   14000aad5:	lea    rcx,[rip+0x18dd4]        # 0x1400238b0
   14000aadc:	mov    rdx,rcx
   14000aadf:	lea    r8,[rip+0x1af9a]        # 0x140025a80
   14000aae6:	test   BYTE PTR [rdx+0x38],0x7f
   14000aaea:	jne    0x14000ab11
   14000aaec:	cmp    eax,0xffffffff
   14000aaef:	je     0x14000ab0b
   14000aaf1:	cmp    eax,0xfffffffe
   14000aaf4:	je     0x14000ab0b
   14000aaf6:	movsxd rcx,eax
   14000aaf9:	mov    rax,rcx
   14000aafc:	sar    rax,0x5
   14000ab00:	and    ecx,0x1f
   14000ab03:	imul   rcx,rcx,0x58
   14000ab07:	add    rcx,QWORD PTR [r8+rax*8]
   14000ab0b:	test   BYTE PTR [rcx+0x38],0x80
   14000ab0f:	je     0x14000ab24
   14000ab11:	call   0x14000bdc0
   14000ab16:	mov    DWORD PTR [rax],0x16
   14000ab1c:	call   0x14000d01c
   14000ab21:	or     esi,0xffffffff
   14000ab24:	test   esi,esi
   14000ab26:	jne    0x14000ab50
   14000ab28:	mov    rcx,rdi
   14000ab2b:	call   0x14000dbc4
   14000ab30:	mov    ebx,eax
   14000ab32:	mov    r9,QWORD PTR [rsp+0x60]
   14000ab37:	mov    r8,r13
   14000ab3a:	mov    rdx,r12
   14000ab3d:	mov    rcx,rdi
   14000ab40:	call   r14
   14000ab43:	mov    esi,eax
   14000ab45:	mov    rdx,rdi
   14000ab48:	mov    ecx,ebx
   14000ab4a:	call   0x14000dc98
   14000ab4f:	nop
   14000ab50:	mov    rcx,rdi
   14000ab53:	call   0x14000ad40
   14000ab58:	mov    eax,esi
   14000ab5a:	mov    rbx,QWORD PTR [rsp+0x40]
   14000ab5f:	mov    rsi,QWORD PTR [rsp+0x50]
   14000ab64:	mov    rdi,QWORD PTR [rsp+0x58]
   14000ab69:	add    rsp,0x20
   14000ab6d:	pop    r14
   14000ab6f:	pop    r13
   14000ab71:	pop    r12
   14000ab73:	ret    
   14000ab74:	sub    rsp,0x38
   14000ab78:	mov    QWORD PTR [rsp+0x20],r8
   14000ab7d:	mov    r8,rdx
   14000ab80:	mov    rdx,rcx
   14000ab83:	lea    rcx,[rip+0x327a]        # 0x14000de04
   14000ab8a:	xor    r9d,r9d
   14000ab8d:	call   0x14000aa30
   14000ab92:	add    rsp,0x38
   14000ab96:	ret    
   14000ab97:	int3   
   14000ab98:	lea    rax,[rip+0x18531]        # 0x1400230d0
   14000ab9f:	ret    
   14000aba0:	rex push rbx
   14000aba2:	sub    rsp,0x20
   14000aba6:	mov    eax,DWORD PTR [rip+0x1c0f4]        # 0x140026ca0
   14000abac:	mov    ebx,0x14
   14000abb1:	test   eax,eax
   14000abb3:	jne    0x14000abbc
   14000abb5:	mov    eax,0x200
   14000abba:	jmp    0x14000abc1
   14000abbc:	cmp    eax,ebx
   14000abbe:	cmovl  eax,ebx
   14000abc1:	movsxd rcx,eax
   14000abc4:	mov    edx,0x8
   14000abc9:	mov    DWORD PTR [rip+0x1c0d1],eax        # 0x140026ca0
   14000abcf:	call   0x140010b24
   14000abd4:	mov    QWORD PTR [rip+0x1b0ad],rax        # 0x140025c88
   14000abdb:	test   rax,rax
   14000abde:	jne    0x14000ac04
   14000abe0:	lea    edx,[rax+0x8]
   14000abe3:	mov    rcx,rbx
   14000abe6:	mov    DWORD PTR [rip+0x1c0b4],ebx        # 0x140026ca0
   14000abec:	call   0x140010b24
   14000abf1:	mov    QWORD PTR [rip+0x1b090],rax        # 0x140025c88
   14000abf8:	test   rax,rax
   14000abfb:	jne    0x14000ac04
   14000abfd:	mov    eax,0x1a
   14000ac02:	jmp    0x14000ac7a
   14000ac04:	xor    ecx,ecx
   14000ac06:	lea    rdx,[rip+0x184c3]        # 0x1400230d0
   14000ac0d:	mov    QWORD PTR [rcx+rax*1],rdx
   14000ac11:	add    rdx,0x30
   14000ac15:	add    rcx,0x8
   14000ac19:	dec    rbx
   14000ac1c:	je     0x14000ac27
   14000ac1e:	mov    rax,QWORD PTR [rip+0x1b063]        # 0x140025c88
   14000ac25:	jmp    0x14000ac0d
   14000ac27:	xor    r8d,r8d
   14000ac2a:	lea    rdx,[rip+0x184bb]        # 0x1400230ec
   14000ac31:	lea    r9d,[r8+0x3]
   14000ac35:	mov    rcx,r8
   14000ac38:	lea    r10,[rip+0x1ae41]        # 0x140025a80
   14000ac3f:	mov    rax,r8
   14000ac42:	sar    rax,0x5
   14000ac46:	and    ecx,0x1f
   14000ac49:	mov    rax,QWORD PTR [r10+rax*8]
   14000ac4d:	imul   rcx,rcx,0x58
   14000ac51:	mov    r10,QWORD PTR [rcx+rax*1]
   14000ac55:	cmp    r10,0xffffffffffffffff
   14000ac59:	je     0x14000ac66
   14000ac5b:	cmp    r10,0xfffffffffffffffe
   14000ac5f:	je     0x14000ac66
   14000ac61:	test   r10,r10
   14000ac64:	jne    0x14000ac6c
   14000ac66:	mov    DWORD PTR [rdx],0xfffffffe
   14000ac6c:	inc    r8
   14000ac6f:	add    rdx,0x30
   14000ac73:	dec    r9
   14000ac76:	jne    0x14000ac35
   14000ac78:	xor    eax,eax
   14000ac7a:	add    rsp,0x20
   14000ac7e:	pop    rbx
   14000ac7f:	ret    
   14000ac80:	sub    rsp,0x28
   14000ac84:	call   0x14000c040
   14000ac89:	cmp    BYTE PTR [rip+0x19d38],0x0        # 0x1400249c8
   14000ac90:	je     0x14000ac97
   14000ac92:	call   0x140010cb8
   14000ac97:	mov    rcx,QWORD PTR [rip+0x1afea]        # 0x140025c88
   14000ac9e:	add    rsp,0x28
   14000aca2:	jmp    0x14000b460
   14000aca7:	int3   
   14000aca8:	rex push rbx
   14000acaa:	sub    rsp,0x20
   14000acae:	mov    rbx,rcx
   14000acb1:	lea    rcx,[rip+0x18418]        # 0x1400230d0
   14000acb8:	cmp    rbx,rcx
   14000acbb:	jb     0x14000acfb
   14000acbd:	lea    rax,[rip+0x1879c]        # 0x140023460
   14000acc4:	cmp    rbx,rax
   14000acc7:	ja     0x14000acfb
   14000acc9:	mov    rdx,rbx
   14000accc:	movabs rax,0x2aaaaaaaaaaaaaab
   14000acd6:	sub    rdx,rcx
   14000acd9:	imul   rdx
   14000acdc:	sar    rdx,0x3
   14000ace0:	mov    rcx,rdx
   14000ace3:	shr    rcx,0x3f
   14000ace7:	lea    ecx,[rcx+rdx*1+0x10]
   14000aceb:	call   0x14000cb28
   14000acf0:	bts    DWORD PTR [rbx+0x18],0xf
   14000acf5:	add    rsp,0x20
   14000acf9:	pop    rbx
   14000acfa:	ret    
   14000acfb:	lea    rcx,[rbx+0x30]
   14000acff:	add    rsp,0x20
   14000ad03:	pop    rbx
   14000ad04:	rex.W jmp QWORD PTR [rip+0xf3dd]        # 0x14001a0e8
   14000ad0b:	int3   
   14000ad0c:	rex push rbx
   14000ad0e:	sub    rsp,0x20
   14000ad12:	mov    rbx,rdx
   14000ad15:	cmp    ecx,0x14
   14000ad18:	jge    0x14000ad2d
   14000ad1a:	add    ecx,0x10
   14000ad1d:	call   0x14000cb28
   14000ad22:	bts    DWORD PTR [rbx+0x18],0xf
   14000ad27:	add    rsp,0x20
   14000ad2b:	pop    rbx
   14000ad2c:	ret    
   14000ad2d:	lea    rcx,[rdx+0x30]
   14000ad31:	add    rsp,0x20
   14000ad35:	pop    rbx
   14000ad36:	rex.W jmp QWORD PTR [rip+0xf3ab]        # 0x14001a0e8
   14000ad3d:	int3   
   14000ad3e:	int3   
   14000ad3f:	int3   
   14000ad40:	lea    rdx,[rip+0x18389]        # 0x1400230d0
   14000ad47:	cmp    rcx,rdx
   14000ad4a:	jb     0x14000ad81
   14000ad4c:	lea    rax,[rip+0x1870d]        # 0x140023460
   14000ad53:	cmp    rcx,rax
   14000ad56:	ja     0x14000ad81
   14000ad58:	btr    DWORD PTR [rcx+0x18],0xf
   14000ad5d:	sub    rcx,rdx
   14000ad60:	movabs rax,0x2aaaaaaaaaaaaaab
   14000ad6a:	imul   rcx
   14000ad6d:	sar    rdx,0x3
   14000ad71:	mov    rcx,rdx
   14000ad74:	shr    rcx,0x3f
   14000ad78:	lea    ecx,[rcx+rdx*1+0x10]
   14000ad7c:	jmp    0x14000ca28
   14000ad81:	add    rcx,0x30
   14000ad85:	rex.W jmp QWORD PTR [rip+0xf364]        # 0x14001a0f0
   14000ad8c:	cmp    ecx,0x14
   14000ad8f:	jge    0x14000ad9e
   14000ad91:	btr    DWORD PTR [rdx+0x18],0xf
   14000ad96:	add    ecx,0x10
   14000ad99:	jmp    0x14000ca28
   14000ad9e:	lea    rcx,[rdx+0x30]
   14000ada2:	rex.W jmp QWORD PTR [rip+0xf347]        # 0x14001a0f0
   14000ada9:	int3   
   14000adaa:	int3   
   14000adab:	int3   
   14000adac:	mov    QWORD PTR [rsp+0x8],rbx
   14000adb1:	push   rdi
   14000adb2:	sub    rsp,0x20
   14000adb6:	or     edi,0xffffffff
   14000adb9:	mov    rbx,rcx
   14000adbc:	test   rcx,rcx
   14000adbf:	jne    0x14000add5
   14000adc1:	call   0x14000bdc0
   14000adc6:	mov    DWORD PTR [rax],0x16
   14000adcc:	call   0x14000d01c
   14000add1:	or     eax,edi
   14000add3:	jmp    0x14000ae1b
   14000add5:	test   BYTE PTR [rcx+0x18],0x83
   14000add9:	je     0x14000ae15
   14000addb:	call   0x14000be48
   14000ade0:	mov    rcx,rbx
   14000ade3:	mov    edi,eax
   14000ade5:	call   0x140010ee4
   14000adea:	mov    rcx,rbx
   14000aded:	call   0x140010a7c
   14000adf2:	mov    ecx,eax
   14000adf4:	call   0x140010e20
   14000adf9:	test   eax,eax
   14000adfb:	jns    0x14000ae02
   14000adfd:	or     edi,0xffffffff
   14000ae00:	jmp    0x14000ae15
   14000ae02:	mov    rcx,QWORD PTR [rbx+0x28]
   14000ae06:	test   rcx,rcx
   14000ae09:	je     0x14000ae15
   14000ae0b:	call   0x14000b460
   14000ae10:	and    QWORD PTR [rbx+0x28],0x0
   14000ae15:	and    DWORD PTR [rbx+0x18],0x0
   14000ae19:	mov    eax,edi
   14000ae1b:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ae20:	add    rsp,0x20
   14000ae24:	pop    rdi
   14000ae25:	ret    
   14000ae26:	int3   
   14000ae27:	int3   
   14000ae28:	mov    QWORD PTR [rsp+0x10],rbx
   14000ae2d:	mov    QWORD PTR [rsp+0x8],rcx
   14000ae32:	push   rdi
   14000ae33:	sub    rsp,0x20
   14000ae37:	mov    rbx,rcx
   14000ae3a:	or     edi,0xffffffff
   14000ae3d:	xor    eax,eax
   14000ae3f:	test   rcx,rcx
   14000ae42:	setne  al
   14000ae45:	test   eax,eax
   14000ae47:	jne    0x14000ae5d
   14000ae49:	call   0x14000bdc0
   14000ae4e:	mov    DWORD PTR [rax],0x16
   14000ae54:	call   0x14000d01c
   14000ae59:	mov    eax,edi
   14000ae5b:	jmp    0x14000ae83
   14000ae5d:	test   BYTE PTR [rcx+0x18],0x40
   14000ae61:	je     0x14000ae69
   14000ae63:	and    DWORD PTR [rcx+0x18],0x0
   14000ae67:	jmp    0x14000ae59
   14000ae69:	call   0x14000aca8
   14000ae6e:	nop
   14000ae6f:	mov    rcx,rbx
   14000ae72:	call   0x14000adac
   14000ae77:	mov    edi,eax
   14000ae79:	mov    rcx,rbx
   14000ae7c:	call   0x14000ad40
   14000ae81:	jmp    0x14000ae59
   14000ae83:	mov    rbx,QWORD PTR [rsp+0x38]
   14000ae88:	add    rsp,0x20
   14000ae8c:	pop    rdi
   14000ae8d:	ret    
   14000ae8e:	int3   
   14000ae8f:	int3   
   14000ae90:	sub    rsp,0x38
   14000ae94:	mov    rax,QWORD PTR [rip+0x18225]        # 0x1400230c0
   14000ae9b:	xor    rax,rsp
   14000ae9e:	mov    QWORD PTR [rsp+0x20],rax
   14000aea3:	mov    al,BYTE PTR [rdx]
   14000aea5:	xor    r9d,r9d
   14000aea8:	mov    r11,rdx
   14000aeab:	mov    QWORD PTR [rsp],r9
   14000aeaf:	mov    QWORD PTR [rsp+0x8],r9
   14000aeb4:	mov    QWORD PTR [rsp+0x10],r9
   14000aeb9:	mov    QWORD PTR [rsp+0x18],r9
   14000aebe:	mov    r10,rcx
   14000aec1:	jmp    0x14000aee4
   14000aec3:	movzx  r8d,al
   14000aec7:	movzx  eax,al
   14000aeca:	mov    edx,0x1
   14000aecf:	and    eax,0x7
   14000aed2:	shr    r8,0x3
   14000aed6:	mov    cl,al
   14000aed8:	shl    dl,cl
   14000aeda:	or     BYTE PTR [rsp+r8*1],dl
   14000aede:	inc    r11
   14000aee1:	mov    al,BYTE PTR [r11]
   14000aee4:	test   al,al
   14000aee6:	jne    0x14000aec3
   14000aee8:	cmp    BYTE PTR [r10],r9b
   14000aeeb:	je     0x14000af2e
   14000aeed:	movzx  ecx,BYTE PTR [r10]
   14000aef1:	movzx  eax,BYTE PTR [r10]
   14000aef5:	mov    edx,0x1
   14000aefa:	and    ecx,0x7
   14000aefd:	shr    rax,0x3
   14000af01:	shl    edx,cl
   14000af03:	test   BYTE PTR [rsp+rax*1],dl
   14000af06:	je     0x14000af29
   14000af08:	inc    r10
   14000af0b:	mov    edx,0x1
   14000af10:	inc    r9d
   14000af13:	movzx  r8d,BYTE PTR [r10]
   14000af17:	mov    ecx,r8d
   14000af1a:	shr    r8,0x3
   14000af1e:	and    ecx,0x7
   14000af21:	shl    edx,cl
   14000af23:	test   BYTE PTR [rsp+r8*1],dl
   14000af27:	jne    0x14000af08
   14000af29:	movsxd rax,r9d
   14000af2c:	jmp    0x14000af30
   14000af2e:	xor    eax,eax
   14000af30:	mov    rcx,QWORD PTR [rsp+0x20]
   14000af35:	xor    rcx,rsp
   14000af38:	call   0x14000a820
   14000af3d:	add    rsp,0x38
   14000af41:	ret    
   14000af42:	int3   
   14000af43:	int3   
   14000af44:	sub    rsp,0x38
   14000af48:	mov    rax,QWORD PTR [rip+0x18171]        # 0x1400230c0
   14000af4f:	xor    rax,rsp
   14000af52:	mov    QWORD PTR [rsp+0x20],rax
   14000af57:	mov    al,BYTE PTR [rdx]
   14000af59:	xor    r9d,r9d
   14000af5c:	mov    r11,rdx
   14000af5f:	mov    QWORD PTR [rsp],r9
   14000af63:	mov    QWORD PTR [rsp+0x8],r9
   14000af68:	mov    QWORD PTR [rsp+0x10],r9
   14000af6d:	mov    QWORD PTR [rsp+0x18],r9
   14000af72:	mov    r10,rcx
   14000af75:	jmp    0x14000af93
   14000af77:	movzx  r8d,al
   14000af7b:	movzx  eax,al
   14000af7e:	and    eax,0x7
   14000af81:	shr    r8,0x3
   14000af85:	mov    cl,al
   14000af87:	shl    dl,cl
   14000af89:	or     BYTE PTR [rsp+r8*1],dl
   14000af8d:	inc    r11
   14000af90:	mov    al,BYTE PTR [r11]
   14000af93:	mov    edx,0x1
   14000af98:	test   al,al
   14000af9a:	jne    0x14000af77
   14000af9c:	or     BYTE PTR [rsp],dl
   14000af9f:	jmp    0x14000afac
   14000afa1:	inc    r9d
   14000afa4:	mov    edx,0x1
   14000afa9:	inc    r10
   14000afac:	movzx  r8d,BYTE PTR [r10]
   14000afb0:	mov    ecx,r8d
   14000afb3:	shr    r8,0x3
   14000afb7:	and    ecx,0x7
   14000afba:	shl    edx,cl
   14000afbc:	test   BYTE PTR [rsp+r8*1],dl
   14000afc0:	je     0x14000afa1
   14000afc2:	movsxd rax,r9d
   14000afc5:	mov    rcx,QWORD PTR [rsp+0x20]
   14000afca:	xor    rcx,rsp
   14000afcd:	call   0x14000a820
   14000afd2:	add    rsp,0x38
   14000afd6:	ret    
   14000afd7:	int3   
   14000afd8:	rex push rbx
   14000afda:	push   rsi
   14000afdb:	push   rdi
   14000afdc:	push   r12
   14000afde:	push   r13
   14000afe0:	sub    rsp,0x30
   14000afe4:	mov    rbx,r8
   14000afe7:	mov    esi,edx
   14000afe9:	mov    r13,rcx
   14000afec:	mov    r12,rcx
   14000afef:	mov    rdi,rcx
   14000aff2:	test   rcx,rcx
   14000aff5:	jne    0x14000b012
   14000aff7:	test   edx,edx
   14000aff9:	je     0x14000b012
   14000affb:	call   0x14000bdc0
   14000b000:	mov    DWORD PTR [rax],0x16
   14000b006:	call   0x14000d01c
   14000b00b:	xor    eax,eax
   14000b00d:	jmp    0x14000b133
   14000b012:	xor    eax,eax
   14000b014:	test   edx,edx
   14000b016:	setns  al
   14000b019:	test   eax,eax
   14000b01b:	je     0x14000affb
   14000b01d:	xor    eax,eax
   14000b01f:	test   rbx,rbx
   14000b022:	setne  al
   14000b025:	test   eax,eax
   14000b027:	je     0x14000affb
   14000b029:	test   edx,edx
   14000b02b:	je     0x14000b00b
   14000b02d:	mov    QWORD PTR [rsp+0x78],rbx
   14000b032:	mov    rcx,rbx
   14000b035:	call   0x14000aca8
   14000b03a:	nop
   14000b03b:	test   BYTE PTR [rbx+0x18],0x40
   14000b03f:	jne    0x14000b0cf
   14000b045:	mov    rcx,rbx
   14000b048:	call   0x140010a7c
   14000b04d:	cmp    eax,0xffffffff
   14000b050:	je     0x14000b07c
   14000b052:	cmp    eax,0xfffffffe
   14000b055:	je     0x14000b07c
   14000b057:	movsxd rdx,eax
   14000b05a:	mov    rcx,rdx
   14000b05d:	sar    rcx,0x5
   14000b061:	lea    r8,[rip+0x1aa18]        # 0x140025a80
   14000b068:	and    edx,0x1f
   14000b06b:	imul   rdx,rdx,0x58
   14000b06f:	add    rdx,QWORD PTR [r8+rcx*8]
   14000b073:	lea    rcx,[rip+0x18836]        # 0x1400238b0
   14000b07a:	jmp    0x14000b08d
   14000b07c:	lea    rcx,[rip+0x1882d]        # 0x1400238b0
   14000b083:	mov    rdx,rcx
   14000b086:	lea    r8,[rip+0x1a9f3]        # 0x140025a80
   14000b08d:	test   BYTE PTR [rdx+0x38],0x7f
   14000b091:	jne    0x14000b0b8
   14000b093:	cmp    eax,0xffffffff
   14000b096:	je     0x14000b0b2
   14000b098:	cmp    eax,0xfffffffe
   14000b09b:	je     0x14000b0b2
   14000b09d:	movsxd rcx,eax
   14000b0a0:	mov    rax,rcx
   14000b0a3:	sar    rax,0x5
   14000b0a7:	and    ecx,0x1f
   14000b0aa:	imul   rcx,rcx,0x58
   14000b0ae:	add    rcx,QWORD PTR [r8+rax*8]
   14000b0b2:	test   BYTE PTR [rcx+0x38],0x80
   14000b0b6:	je     0x14000b0cf
   14000b0b8:	call   0x14000bdc0
   14000b0bd:	mov    DWORD PTR [rax],0x16
   14000b0c3:	call   0x14000d01c
   14000b0c8:	xor    edi,edi
   14000b0ca:	mov    QWORD PTR [rsp+0x20],rdi
   14000b0cf:	test   rdi,rdi
   14000b0d2:	je     0x14000b128
   14000b0d4:	dec    esi
   14000b0d6:	mov    DWORD PTR [rsp+0x68],esi
   14000b0da:	je     0x14000b123
   14000b0dc:	dec    DWORD PTR [rbx+0x8]
   14000b0df:	js     0x14000b0ef
   14000b0e1:	mov    rax,QWORD PTR [rbx]
   14000b0e4:	movzx  ecx,BYTE PTR [rax]
   14000b0e7:	inc    rax
   14000b0ea:	mov    QWORD PTR [rbx],rax
   14000b0ed:	jmp    0x14000b0f9
   14000b0ef:	mov    rcx,rbx
   14000b0f2:	call   0x140010f1c
   14000b0f7:	mov    ecx,eax
   14000b0f9:	mov    DWORD PTR [rsp+0x60],ecx
   14000b0fd:	cmp    ecx,0xffffffff
   14000b100:	jne    0x14000b110
   14000b102:	cmp    r12,r13
   14000b105:	jne    0x14000b123
   14000b107:	xor    edi,edi
   14000b109:	mov    QWORD PTR [rsp+0x20],rdi
   14000b10e:	jmp    0x14000b128
   14000b110:	mov    BYTE PTR [r12],cl
   14000b114:	inc    r12
   14000b117:	mov    QWORD PTR [rsp+0x28],r12
   14000b11c:	cmp    cl,0xa
   14000b11f:	je     0x14000b123
   14000b121:	jmp    0x14000b0d4
   14000b123:	mov    BYTE PTR [r12],0x0
   14000b128:	mov    rcx,rbx
   14000b12b:	call   0x14000ad40
   14000b130:	mov    rax,rdi
   14000b133:	add    rsp,0x30
   14000b137:	pop    r13
   14000b139:	pop    r12
   14000b13b:	pop    rdi
   14000b13c:	pop    rsi
   14000b13d:	pop    rbx
   14000b13e:	ret    
   14000b13f:	int3   
   14000b140:	mov    QWORD PTR [rsp+0x10],rbx
   14000b145:	mov    QWORD PTR [rsp+0x18],rsi
   14000b14a:	mov    QWORD PTR [rsp+0x20],rdi
   14000b14f:	push   r12
   14000b151:	sub    rsp,0x30
   14000b155:	mov    QWORD PTR [rsp+0x20],rsp
   14000b15a:	mov    r12d,r8d
   14000b15d:	mov    rdi,rdx
   14000b160:	mov    rsi,rcx
   14000b163:	xor    eax,eax
   14000b165:	test   rcx,rcx
   14000b168:	setne  al
   14000b16b:	test   eax,eax
   14000b16d:	jne    0x14000b183
   14000b16f:	call   0x14000bdc0
   14000b174:	mov    DWORD PTR [rax],0x16
   14000b17a:	call   0x14000d01c
   14000b17f:	xor    eax,eax
   14000b181:	jmp    0x14000b1ff
   14000b183:	xor    eax,eax
   14000b185:	test   rdx,rdx
   14000b188:	setne  al
   14000b18b:	test   eax,eax
   14000b18d:	je     0x14000b16f
   14000b18f:	xor    eax,eax
   14000b191:	cmp    BYTE PTR [rdx],al
   14000b193:	setne  al
   14000b196:	test   eax,eax
   14000b198:	je     0x14000b16f
   14000b19a:	call   0x140011328
   14000b19f:	mov    rbx,rax
   14000b1a2:	mov    QWORD PTR [rsp+0x40],rax
   14000b1a7:	test   rax,rax
   14000b1aa:	jne    0x14000b1b9
   14000b1ac:	call   0x14000bdc0
   14000b1b1:	mov    DWORD PTR [rax],0x18
   14000b1b7:	jmp    0x14000b17f
   14000b1b9:	cmp    BYTE PTR [rsi],0x0
   14000b1bc:	jne    0x14000b1e0
   14000b1be:	call   0x14000bdc0
   14000b1c3:	mov    DWORD PTR [rax],0x16
   14000b1c9:	lea    rdx,[rip+0xc]        # 0x14000b1dc
   14000b1d0:	mov    rcx,QWORD PTR [rsp+0x20]
   14000b1d5:	call   0x140011490
   14000b1da:	nop
   14000b1db:	nop
   14000b1dc:	xor    eax,eax
   14000b1de:	jmp    0x14000b1ff
   14000b1e0:	mov    r9,rax
   14000b1e3:	mov    r8d,r12d
   14000b1e6:	mov    rdx,rdi
   14000b1e9:	mov    rcx,rsi
   14000b1ec:	call   0x140011070
   14000b1f1:	mov    rdi,rax
   14000b1f4:	mov    rcx,rbx
   14000b1f7:	call   0x14000ad40
   14000b1fc:	mov    rax,rdi
   14000b1ff:	mov    rbx,QWORD PTR [rsp+0x48]
   14000b204:	mov    rsi,QWORD PTR [rsp+0x50]
   14000b209:	mov    rdi,QWORD PTR [rsp+0x58]
   14000b20e:	add    rsp,0x30
   14000b212:	pop    r12
   14000b214:	ret    
   14000b215:	int3   
   14000b216:	int3   
   14000b217:	int3   
   14000b218:	mov    r8d,0x40
   14000b21e:	jmp    0x14000b140
   14000b223:	int3   
   14000b224:	mov    QWORD PTR [rsp+0x8],rbx
   14000b229:	push   rdi
   14000b22a:	sub    rsp,0x20
   14000b22e:	mov    rbx,rcx
   14000b231:	mov    edi,0x2
   14000b236:	mov    ecx,edi
   14000b238:	call   0x1400116d4
   14000b23d:	nop
   14000b23e:	test   rbx,rbx
   14000b241:	je     0x14000b26e
   14000b243:	cmp    BYTE PTR [rbx],0x0
   14000b246:	je     0x14000b26e
   14000b248:	mov    rcx,rbx
   14000b24b:	call   0x140009fa0
   14000b250:	mov    r8,rax
   14000b253:	mov    rdx,rbx
   14000b256:	mov    ecx,edi
   14000b258:	call   0x1400119ac
   14000b25d:	mov    r8d,edi
   14000b260:	lea    rdx,[rip+0x137d1]        # 0x14001ea38
   14000b267:	mov    ecx,edi
   14000b269:	call   0x1400119ac
   14000b26e:	call   0x14000bdc0
   14000b273:	mov    ebx,DWORD PTR [rax]
   14000b275:	test   ebx,ebx
   14000b277:	js     0x14000b282
   14000b279:	call   0x1400114f4
   14000b27e:	cmp    ebx,DWORD PTR [rax]
   14000b280:	jl     0x14000b289
   14000b282:	call   0x1400114f4
   14000b287:	mov    ebx,DWORD PTR [rax]
   14000b289:	call   0x1400114fc
   14000b28e:	movsxd rcx,ebx
   14000b291:	mov    rbx,QWORD PTR [rax+rcx*8]
   14000b295:	mov    rcx,rbx
   14000b298:	call   0x140009fa0
   14000b29d:	mov    r8,rax
   14000b2a0:	mov    rdx,rbx
   14000b2a3:	mov    ecx,edi
   14000b2a5:	call   0x1400119ac
   14000b2aa:	mov    r8d,0x1
   14000b2b0:	lea    rdx,[rip+0xf76d]        # 0x14001aa24
   14000b2b7:	mov    ecx,edi
   14000b2b9:	call   0x1400119ac
   14000b2be:	nop
   14000b2bf:	mov    ecx,edi
   14000b2c1:	call   0x14001177c
   14000b2c6:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b2cb:	add    rsp,0x20
   14000b2cf:	pop    rdi
   14000b2d0:	ret    
   14000b2d1:	int3   
   14000b2d2:	int3   
   14000b2d3:	int3   
   14000b2d4:	mov    QWORD PTR [rsp+0x8],rbx
   14000b2d9:	mov    QWORD PTR [rsp+0x10],rsi
   14000b2de:	push   rdi
   14000b2df:	sub    rsp,0x20
   14000b2e3:	mov    rbx,rcx
   14000b2e6:	cmp    rcx,0xffffffffffffffe0
   14000b2ea:	ja     0x14000b368
   14000b2ec:	mov    edi,0x1
   14000b2f1:	test   rcx,rcx
   14000b2f4:	cmovne rdi,rcx
   14000b2f8:	mov    rcx,QWORD PTR [rip+0x1a0c9]        # 0x1400253c8
   14000b2ff:	test   rcx,rcx
   14000b302:	jne    0x14000b324
   14000b304:	call   0x14000db80
   14000b309:	mov    ecx,0x1e
   14000b30e:	call   0x14000d920
   14000b313:	mov    ecx,0xff
   14000b318:	call   0x1400098a8
   14000b31d:	mov    rcx,QWORD PTR [rip+0x1a0a4]        # 0x1400253c8
   14000b324:	mov    r8,rdi
   14000b327:	xor    edx,edx
   14000b329:	call   QWORD PTR [rip+0xedc9]        # 0x14001a0f8
   14000b32f:	mov    rsi,rax
   14000b332:	test   rax,rax
   14000b335:	jne    0x14000b363
   14000b337:	cmp    DWORD PTR [rip+0x1a607],eax        # 0x140025944
   14000b33d:	je     0x14000b34d
   14000b33f:	mov    rcx,rbx
   14000b342:	call   0x14000d044
   14000b347:	test   eax,eax
   14000b349:	je     0x14000b358
   14000b34b:	jmp    0x14000b2f8
   14000b34d:	call   0x14000bdc0
   14000b352:	mov    DWORD PTR [rax],0xc
   14000b358:	call   0x14000bdc0
   14000b35d:	mov    DWORD PTR [rax],0xc
   14000b363:	mov    rax,rsi
   14000b366:	jmp    0x14000b37a
   14000b368:	call   0x14000d044
   14000b36d:	call   0x14000bdc0
   14000b372:	mov    DWORD PTR [rax],0xc
   14000b378:	xor    eax,eax
   14000b37a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b37f:	mov    rsi,QWORD PTR [rsp+0x38]
   14000b384:	add    rsp,0x20
   14000b388:	pop    rdi
   14000b389:	ret    
   14000b38a:	int3   
   14000b38b:	int3   
   14000b38c:	mov    QWORD PTR [rsp+0x8],rbx
   14000b391:	mov    QWORD PTR [rsp+0x10],rsi
   14000b396:	push   rdi
   14000b397:	sub    rsp,0x20
   14000b39b:	mov    rbx,rdx
   14000b39e:	mov    rdi,rcx
   14000b3a1:	test   rcx,rcx
   14000b3a4:	jne    0x14000b3b0
   14000b3a6:	mov    rcx,rdx
   14000b3a9:	call   0x14000b2d4
   14000b3ae:	jmp    0x14000b41a
   14000b3b0:	test   rdx,rdx
   14000b3b3:	jne    0x14000b3bc
   14000b3b5:	call   0x14000b460
   14000b3ba:	jmp    0x14000b418
   14000b3bc:	cmp    rdx,0xffffffffffffffe0
   14000b3c0:	ja     0x14000b405
   14000b3c2:	mov    rcx,QWORD PTR [rip+0x19fff]        # 0x1400253c8
   14000b3c9:	mov    eax,0x1
   14000b3ce:	test   rbx,rbx
   14000b3d1:	cmove  rbx,rax
   14000b3d5:	mov    r8,rdi
   14000b3d8:	xor    edx,edx
   14000b3da:	mov    r9,rbx
   14000b3dd:	call   QWORD PTR [rip+0xed1d]        # 0x14001a100
   14000b3e3:	mov    rsi,rax
   14000b3e6:	test   rax,rax
   14000b3e9:	jne    0x14000b45a
   14000b3eb:	cmp    DWORD PTR [rip+0x1a553],eax        # 0x140025944
   14000b3f1:	je     0x14000b443
   14000b3f3:	mov    rcx,rbx
   14000b3f6:	call   0x14000d044
   14000b3fb:	test   eax,eax
   14000b3fd:	je     0x14000b42a
   14000b3ff:	cmp    rbx,0xffffffffffffffe0
   14000b403:	jbe    0x14000b3c2
   14000b405:	mov    rcx,rbx
   14000b408:	call   0x14000d044
   14000b40d:	call   0x14000bdc0
   14000b412:	mov    DWORD PTR [rax],0xc
   14000b418:	xor    eax,eax
   14000b41a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b41f:	mov    rsi,QWORD PTR [rsp+0x38]
   14000b424:	add    rsp,0x20
   14000b428:	pop    rdi
   14000b429:	ret    
   14000b42a:	call   0x14000bdc0
   14000b42f:	mov    rbx,rax
   14000b432:	call   QWORD PTR [rip+0xec38]        # 0x14001a070
   14000b438:	mov    ecx,eax
   14000b43a:	call   0x14000bd78
   14000b43f:	mov    DWORD PTR [rbx],eax
   14000b441:	jmp    0x14000b418
   14000b443:	call   0x14000bdc0
   14000b448:	mov    rbx,rax
   14000b44b:	call   QWORD PTR [rip+0xec1f]        # 0x14001a070
   14000b451:	mov    ecx,eax
   14000b453:	call   0x14000bd78
   14000b458:	mov    DWORD PTR [rbx],eax
   14000b45a:	mov    rax,rsi
   14000b45d:	jmp    0x14000b41a
   14000b45f:	int3   
   14000b460:	test   rcx,rcx
   14000b463:	je     0x14000b49c
   14000b465:	push   rbx
   14000b466:	sub    rsp,0x20
   14000b46a:	mov    r8,rcx
   14000b46d:	mov    rcx,QWORD PTR [rip+0x19f54]        # 0x1400253c8
   14000b474:	xor    edx,edx
   14000b476:	call   QWORD PTR [rip+0xec8c]        # 0x14001a108
   14000b47c:	test   eax,eax
   14000b47e:	jne    0x14000b497
   14000b480:	call   0x14000bdc0
   14000b485:	mov    rbx,rax
   14000b488:	call   QWORD PTR [rip+0xebe2]        # 0x14001a070
   14000b48e:	mov    ecx,eax
   14000b490:	call   0x14000bd78
   14000b495:	mov    DWORD PTR [rbx],eax
   14000b497:	add    rsp,0x20
   14000b49b:	pop    rbx
   14000b49c:	ret    
   14000b49d:	int3   
   14000b49e:	int3   
   14000b49f:	int3   
   14000b4a0:	mov    QWORD PTR [rsp+0x8],rbx
   14000b4a5:	mov    QWORD PTR [rsp+0x18],rsi
   14000b4aa:	mov    QWORD PTR [rsp+0x20],rdi
   14000b4af:	push   r12
   14000b4b1:	push   r13
   14000b4b3:	push   r14
   14000b4b5:	sub    rsp,0x20
   14000b4b9:	mov    r12,r9
   14000b4bc:	mov    r13,r8
   14000b4bf:	mov    rsi,rdx
   14000b4c2:	mov    r14,rcx
   14000b4c5:	call   0x14000ab98
   14000b4ca:	lea    rdi,[rax+0x30]
   14000b4ce:	mov    QWORD PTR [rsp+0x48],rdi
   14000b4d3:	xor    eax,eax
   14000b4d5:	test   rsi,rsi
   14000b4d8:	setne  al
   14000b4db:	test   eax,eax
   14000b4dd:	jne    0x14000b4f4
   14000b4df:	call   0x14000bdc0
   14000b4e4:	mov    DWORD PTR [rax],0x16
   14000b4ea:	call   0x14000d01c
   14000b4ef:	or     eax,0xffffffff
   14000b4f2:	jmp    0x14000b52d
   14000b4f4:	mov    rcx,rdi
   14000b4f7:	call   0x14000aca8
   14000b4fc:	nop
   14000b4fd:	mov    rcx,rdi
   14000b500:	call   0x14000dbc4
   14000b505:	mov    ebx,eax
   14000b507:	mov    r9,r12
   14000b50a:	mov    r8,r13
   14000b50d:	mov    rdx,rsi
   14000b510:	mov    rcx,rdi
   14000b513:	call   r14
   14000b516:	mov    esi,eax
   14000b518:	mov    rdx,rdi
   14000b51b:	mov    ecx,ebx
   14000b51d:	call   0x14000dc98
   14000b522:	nop
   14000b523:	mov    rcx,rdi
   14000b526:	call   0x14000ad40
   14000b52b:	mov    eax,esi
   14000b52d:	mov    rbx,QWORD PTR [rsp+0x40]
   14000b532:	mov    rsi,QWORD PTR [rsp+0x50]
   14000b537:	mov    rdi,QWORD PTR [rsp+0x58]
   14000b53c:	add    rsp,0x20
   14000b540:	pop    r14
   14000b542:	pop    r13
   14000b544:	pop    r12
   14000b546:	ret    
   14000b547:	int3   
   14000b548:	mov    r9,rdx
   14000b54b:	mov    rdx,rcx
   14000b54e:	lea    rcx,[rip+0x28af]        # 0x14000de04
   14000b555:	xor    r8d,r8d
   14000b558:	jmp    0x14000b4a0
   14000b55d:	int3   
   14000b55e:	int3   
   14000b55f:	int3   
   14000b560:	int3   
   14000b561:	int3   
   14000b562:	int3   
   14000b563:	int3   
   14000b564:	int3   
   14000b565:	int3   
   14000b566:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000b570:	test   r8,r8
   14000b573:	je     0x14000b5ea
   14000b575:	sub    rdx,rcx
   14000b578:	mov    r9,rdx
   14000b57b:	movabs r11,0x8101010101010100
   14000b585:	test   cl,0x7
   14000b588:	je     0x14000b5a9
   14000b58a:	mov    al,BYTE PTR [rcx]
   14000b58c:	mov    dl,BYTE PTR [rcx+r9*1]
   14000b590:	inc    rcx
   14000b593:	cmp    al,dl
   14000b595:	jne    0x14000b5ee
   14000b597:	dec    r8
   14000b59a:	je     0x14000b5ea
   14000b59c:	test   al,al
   14000b59e:	je     0x14000b5ea
   14000b5a0:	test   rcx,0x7
   14000b5a7:	jne    0x14000b58a
   14000b5a9:	lea    rdx,[rcx+r9*1]
   14000b5ad:	and    dx,0xfff
   14000b5b2:	cmp    dx,0xff8
   14000b5b7:	ja     0x14000b58a
   14000b5b9:	mov    rax,QWORD PTR [rcx]
   14000b5bc:	mov    rdx,QWORD PTR [rcx+r9*1]
   14000b5c0:	cmp    rax,rdx
   14000b5c3:	jne    0x14000b58a
   14000b5c5:	add    rcx,0x8
   14000b5c9:	sub    r8,0x8
   14000b5cd:	movabs r10,0x7efefefefefefeff
   14000b5d7:	jbe    0x14000b5ea
   14000b5d9:	xor    rax,0xffffffffffffffff
   14000b5dd:	add    r10,rdx
   14000b5e0:	xor    rax,r10
   14000b5e3:	test   r11,rax
   14000b5e6:	je     0x14000b5a9
   14000b5e8:	jmp    0x14000b5f6
   14000b5ea:	xor    rax,rax
   14000b5ed:	ret    
   14000b5ee:	sbb    rax,rax
   14000b5f1:	sbb    rax,0xffffffffffffffff
   14000b5f5:	ret    
   14000b5f6:	test   dl,dl
   14000b5f8:	je     0x14000b621
   14000b5fa:	test   dh,dh
   14000b5fc:	je     0x14000b621
   14000b5fe:	shr    rdx,0x10
   14000b602:	test   dl,dl
   14000b604:	je     0x14000b621
   14000b606:	test   dh,dh
   14000b608:	je     0x14000b621
   14000b60a:	shr    rdx,0x10
   14000b60e:	test   dl,dl
   14000b610:	je     0x14000b621
   14000b612:	test   dh,dh
   14000b614:	je     0x14000b621
   14000b616:	shr    edx,0x10
   14000b619:	test   dl,dl
   14000b61b:	je     0x14000b621
   14000b61d:	test   dh,dh
   14000b61f:	jne    0x14000b5a9
   14000b621:	xor    rax,rax
   14000b624:	ret    
   14000b625:	int3   
   14000b626:	int3   
   14000b627:	int3   
   14000b628:	mov    QWORD PTR [rsp+0x18],rbx
   14000b62d:	push   rbp
   14000b62e:	push   rsi
   14000b62f:	push   rdi
   14000b630:	push   r12
   14000b632:	push   r13
   14000b634:	push   r14
   14000b636:	push   r15
   14000b638:	lea    rbp,[rsp-0x1c0]
   14000b640:	sub    rsp,0x2c0
   14000b647:	mov    rax,QWORD PTR [rip+0x17a72]        # 0x1400230c0
   14000b64e:	xor    rax,rsp
   14000b651:	mov    QWORD PTR [rbp+0x1b0],rax
   14000b658:	xor    r14d,r14d
   14000b65b:	mov    rdi,rdx
   14000b65e:	mov    r12,rcx
   14000b661:	mov    r13d,r14d
   14000b664:	test   rcx,rcx
   14000b667:	jne    0x14000b689
   14000b669:	call   0x14000bde0
   14000b66e:	mov    DWORD PTR [rax],r14d
   14000b671:	call   0x14000bdc0
   14000b676:	mov    DWORD PTR [rax],0x16
   14000b67c:	call   0x14000d01c
   14000b681:	or     eax,0xffffffff
   14000b684:	jmp    0x14000bafc
   14000b689:	test   rdx,rdx
   14000b68c:	je     0x14000b669
   14000b68e:	lea    rdx,[rip+0x133ab]        # 0x14001ea40
   14000b695:	call   0x1400136d8
   14000b69a:	test   rax,rax
   14000b69d:	je     0x14000b6b4
   14000b69f:	call   0x14000bdc0
   14000b6a4:	mov    edi,0x2
   14000b6a9:	mov    DWORD PTR [rax],edi
   14000b6ab:	call   0x14000bde0
   14000b6b0:	mov    DWORD PTR [rax],edi
   14000b6b2:	jmp    0x14000b681
   14000b6b4:	cmp    BYTE PTR [r12+0x1],0x3a
   14000b6ba:	jne    0x14000b6d9
   14000b6bc:	cmp    BYTE PTR [r12],r14b
   14000b6c0:	je     0x14000b6c9
   14000b6c2:	cmp    BYTE PTR [r12+0x2],r14b
   14000b6c7:	je     0x14000b69f
   14000b6c9:	movsx  ecx,BYTE PTR [r12]
   14000b6ce:	call   0x1400135dc
   14000b6d3:	lea    r15d,[rax-0x60]
   14000b6d7:	jmp    0x14000b6e1
   14000b6d9:	call   0x140013408
   14000b6de:	mov    r15d,eax
   14000b6e1:	lea    r8,[rsp+0x60]
   14000b6e6:	xor    r9d,r9d
   14000b6e9:	xor    edx,edx
   14000b6eb:	mov    rcx,r12
   14000b6ee:	mov    DWORD PTR [rsp+0x28],r14d
   14000b6f3:	mov    QWORD PTR [rsp+0x20],r14
   14000b6f8:	call   QWORD PTR [rip+0xea2a]        # 0x14001a128
   14000b6fe:	or     rbx,0xffffffffffffffff
   14000b702:	mov    rsi,rax
   14000b705:	cmp    rax,rbx
   14000b708:	jne    0x14000b8cd
   14000b70e:	lea    rdx,[rip+0x13327]        # 0x14001ea3c
   14000b715:	mov    rcx,r12
   14000b718:	call   0x1400136d8
   14000b71d:	test   rax,rax
   14000b720:	je     0x14000b8b5
   14000b726:	call   0x14000bdc0
   14000b72b:	mov    r14d,DWORD PTR [rax]
   14000b72e:	call   0x14000bdc0
   14000b733:	lea    rcx,[rbp+0xa0]
   14000b73a:	and    DWORD PTR [rax],r13d
   14000b73d:	mov    r8d,0x104
   14000b743:	mov    rdx,r12
   14000b746:	call   0x1400121ec
   14000b74b:	mov    rsi,rax
   14000b74e:	test   rax,rax
   14000b751:	je     0x14000b75d
   14000b753:	call   0x14000bdc0
   14000b758:	mov    DWORD PTR [rax],r14d
   14000b75b:	jmp    0x14000b786
   14000b75d:	call   0x14000bdc0
   14000b762:	cmp    DWORD PTR [rax],0x22
   14000b765:	jne    0x14000b8b5
   14000b76b:	call   0x14000bdc0
   14000b770:	xor    r8d,r8d
   14000b773:	mov    rdx,r12
   14000b776:	xor    ecx,ecx
   14000b778:	mov    DWORD PTR [rax],r14d
   14000b77b:	call   0x1400121ec
   14000b780:	mov    r13,rax
   14000b783:	mov    rsi,rax
   14000b786:	xor    r14d,r14d
   14000b789:	test   rsi,rsi
   14000b78c:	je     0x14000b8a8
   14000b792:	mov    rcx,rsi
   14000b795:	call   0x140009fa0
   14000b79a:	cmp    rax,0x3
   14000b79e:	je     0x14000b844
   14000b7a4:	mov    rcx,rsi
   14000b7a7:	call   0x140009fa0
   14000b7ac:	cmp    rax,0x5
   14000b7b0:	jb     0x14000b8a8
   14000b7b6:	mov    r8b,0x5c
   14000b7b9:	mov    dl,0x2f
   14000b7bb:	cmp    BYTE PTR [rsi],r8b
   14000b7be:	je     0x14000b7c8
   14000b7c0:	cmp    BYTE PTR [rsi],dl
   14000b7c2:	jne    0x14000b8a8
   14000b7c8:	mov    al,BYTE PTR [rsi+0x1]
   14000b7cb:	cmp    al,r8b
   14000b7ce:	je     0x14000b7d8
   14000b7d0:	cmp    al,dl
   14000b7d2:	jne    0x14000b8a8
   14000b7d8:	mov    al,BYTE PTR [rsi+0x2]
   14000b7db:	cmp    al,r8b
   14000b7de:	je     0x14000b8a8
   14000b7e4:	cmp    al,dl
   14000b7e6:	je     0x14000b8a8
   14000b7ec:	lea    rax,[rsi+0x3]
   14000b7f0:	mov    cl,BYTE PTR [rax]
   14000b7f2:	test   cl,cl
   14000b7f4:	je     0x14000b8a8
   14000b7fa:	cmp    cl,r8b
   14000b7fd:	je     0x14000b80c
   14000b7ff:	cmp    cl,dl
   14000b801:	je     0x14000b80c
   14000b803:	inc    rax
   14000b806:	mov    cl,BYTE PTR [rax]
   14000b808:	test   cl,cl
   14000b80a:	jne    0x14000b7fa
   14000b80c:	cmp    BYTE PTR [rax],r14b
   14000b80f:	je     0x14000b8a8
   14000b815:	inc    rax
   14000b818:	cmp    BYTE PTR [rax],r14b
   14000b81b:	je     0x14000b8a8
   14000b821:	mov    cl,BYTE PTR [rax]
   14000b823:	test   cl,cl
   14000b825:	je     0x14000b844
   14000b827:	cmp    cl,r8b
   14000b82a:	je     0x14000b839
   14000b82c:	cmp    cl,dl
   14000b82e:	je     0x14000b839
   14000b830:	inc    rax
   14000b833:	mov    cl,BYTE PTR [rax]
   14000b835:	test   cl,cl
   14000b837:	jne    0x14000b827
   14000b839:	cmp    BYTE PTR [rax],r14b
   14000b83c:	je     0x14000b844
   14000b83e:	cmp    BYTE PTR [rax+0x1],r14b
   14000b842:	jne    0x14000b8a8
   14000b844:	mov    rcx,rsi
   14000b847:	call   QWORD PTR [rip+0xe8d3]        # 0x14001a120
   14000b84d:	mov    esi,0x1
   14000b852:	cmp    eax,esi
   14000b854:	jbe    0x14000b8a8
   14000b856:	test   r13,r13
   14000b859:	je     0x14000b863
   14000b85b:	mov    rcx,r13
   14000b85e:	call   0x14000b460
   14000b863:	mov    DWORD PTR [rsp+0x30],ebx
   14000b867:	xor    r9d,r9d
   14000b86a:	mov    r8d,esi
   14000b86d:	mov    edx,esi
   14000b86f:	mov    ecx,0x7bc
   14000b874:	mov    DWORD PTR [rsp+0x28],r14d
   14000b879:	mov    DWORD PTR [rsp+0x60],0x10
   14000b881:	mov    QWORD PTR [rsp+0x7c],r14
   14000b886:	mov    BYTE PTR [rbp-0x74],r14b
   14000b88a:	mov    DWORD PTR [rsp+0x20],r14d
   14000b88f:	call   0x14001313c
   14000b894:	mov    r13d,r14d
   14000b897:	mov    QWORD PTR [rdi+0x20],rax
   14000b89b:	mov    QWORD PTR [rdi+0x18],rax
   14000b89f:	mov    QWORD PTR [rdi+0x28],rax
   14000b8a3:	jmp    0x14000baa2
   14000b8a8:	test   r13,r13
   14000b8ab:	je     0x14000b8b5
   14000b8ad:	mov    rcx,r13
   14000b8b0:	call   0x14000b460
   14000b8b5:	call   0x14000bdc0
   14000b8ba:	mov    edi,0x2
   14000b8bf:	mov    DWORD PTR [rax],edi
   14000b8c1:	call   0x14000bde0
   14000b8c6:	mov    DWORD PTR [rax],edi
   14000b8c8:	jmp    0x14000bafa
   14000b8cd:	test   DWORD PTR [rsp+0x60],0x400
   14000b8d5:	je     0x14000b923
   14000b8d7:	cmp    DWORD PTR [rbp-0x7c],0xa000000c
   14000b8de:	jne    0x14000b923
   14000b8e0:	lea    rcx,[rsp+0x40]
   14000b8e5:	mov    r9d,0x40
   14000b8eb:	xor    r8d,r8d
   14000b8ee:	mov    rdx,r12
   14000b8f1:	mov    DWORD PTR [rsp+0x40],ebx
   14000b8f5:	mov    DWORD PTR [rsp+0x20],r14d
   14000b8fa:	call   0x140013108
   14000b8ff:	test   eax,eax
   14000b901:	jne    0x14000b8b5
   14000b903:	mov    ecx,DWORD PTR [rsp+0x40]
   14000b907:	cmp    ecx,ebx
   14000b909:	je     0x14000b8b5
   14000b90b:	mov    rdx,rdi
   14000b90e:	call   0x140012400
   14000b913:	mov    ecx,DWORD PTR [rsp+0x40]
   14000b917:	mov    ebx,eax
   14000b919:	call   0x140010e20
   14000b91e:	jmp    0x14000bafa
   14000b923:	cmp    DWORD PTR [rsp+0x74],r14d
   14000b928:	jne    0x14000b937
   14000b92a:	cmp    DWORD PTR [rsp+0x78],r14d
   14000b92f:	jne    0x14000b937
   14000b931:	mov    QWORD PTR [rdi+0x20],r14
   14000b935:	jmp    0x14000b99e
   14000b937:	lea    rdx,[rsp+0x40]
   14000b93c:	lea    rcx,[rsp+0x74]
   14000b941:	call   QWORD PTR [rip+0xe7d1]        # 0x14001a118
   14000b947:	test   eax,eax
   14000b949:	je     0x14000bae4
   14000b94f:	lea    rdx,[rsp+0x48]
   14000b954:	lea    rcx,[rsp+0x40]
   14000b959:	call   QWORD PTR [rip+0xe7b1]        # 0x14001a110
   14000b95f:	test   eax,eax
   14000b961:	je     0x14000bae4
   14000b967:	movzx  eax,WORD PTR [rsp+0x54]
   14000b96c:	movzx  r10d,WORD PTR [rsp+0x52]
   14000b972:	movzx  r9d,WORD PTR [rsp+0x50]
   14000b978:	movzx  r8d,WORD PTR [rsp+0x4e]
   14000b97e:	movzx  edx,WORD PTR [rsp+0x4a]
   14000b983:	movzx  ecx,WORD PTR [rsp+0x48]
   14000b988:	mov    DWORD PTR [rsp+0x30],ebx
   14000b98c:	mov    DWORD PTR [rsp+0x28],eax
   14000b990:	mov    DWORD PTR [rsp+0x20],r10d
   14000b995:	call   0x14001313c
   14000b99a:	mov    QWORD PTR [rdi+0x20],rax
   14000b99e:	cmp    DWORD PTR [rsp+0x6c],r14d
   14000b9a3:	jne    0x14000b9b2
   14000b9a5:	cmp    DWORD PTR [rsp+0x70],r14d
   14000b9aa:	jne    0x14000b9b2
   14000b9ac:	mov    rax,QWORD PTR [rdi+0x20]
   14000b9b0:	jmp    0x14000ba15
   14000b9b2:	lea    rdx,[rsp+0x40]
   14000b9b7:	lea    rcx,[rsp+0x6c]
   14000b9bc:	call   QWORD PTR [rip+0xe756]        # 0x14001a118
   14000b9c2:	test   eax,eax
   14000b9c4:	je     0x14000bae4
   14000b9ca:	lea    rdx,[rsp+0x48]
   14000b9cf:	lea    rcx,[rsp+0x40]
   14000b9d4:	call   QWORD PTR [rip+0xe736]        # 0x14001a110
   14000b9da:	test   eax,eax
   14000b9dc:	je     0x14000bae4
   14000b9e2:	movzx  eax,WORD PTR [rsp+0x54]
   14000b9e7:	movzx  r10d,WORD PTR [rsp+0x52]
   14000b9ed:	movzx  r9d,WORD PTR [rsp+0x50]
   14000b9f3:	movzx  r8d,WORD PTR [rsp+0x4e]
   14000b9f9:	movzx  edx,WORD PTR [rsp+0x4a]
   14000b9fe:	movzx  ecx,WORD PTR [rsp+0x48]
   14000ba03:	mov    DWORD PTR [rsp+0x30],ebx
   14000ba07:	mov    DWORD PTR [rsp+0x28],eax
   14000ba0b:	mov    DWORD PTR [rsp+0x20],r10d
   14000ba10:	call   0x14001313c
   14000ba15:	mov    QWORD PTR [rdi+0x18],rax
   14000ba19:	cmp    DWORD PTR [rsp+0x64],r14d
   14000ba1e:	jne    0x14000ba2d
   14000ba20:	cmp    DWORD PTR [rsp+0x68],r14d
   14000ba25:	jne    0x14000ba2d
   14000ba27:	mov    rax,QWORD PTR [rdi+0x20]
   14000ba2b:	jmp    0x14000ba90
   14000ba2d:	lea    rdx,[rsp+0x40]
   14000ba32:	lea    rcx,[rsp+0x64]
   14000ba37:	call   QWORD PTR [rip+0xe6db]        # 0x14001a118
   14000ba3d:	test   eax,eax
   14000ba3f:	je     0x14000bae4
   14000ba45:	lea    rdx,[rsp+0x48]
   14000ba4a:	lea    rcx,[rsp+0x40]
   14000ba4f:	call   QWORD PTR [rip+0xe6bb]        # 0x14001a110
   14000ba55:	test   eax,eax
   14000ba57:	je     0x14000bae4
   14000ba5d:	movzx  eax,WORD PTR [rsp+0x54]
   14000ba62:	movzx  r10d,WORD PTR [rsp+0x52]
   14000ba68:	movzx  r9d,WORD PTR [rsp+0x50]
   14000ba6e:	movzx  r8d,WORD PTR [rsp+0x4e]
   14000ba74:	movzx  edx,WORD PTR [rsp+0x4a]
   14000ba79:	movzx  ecx,WORD PTR [rsp+0x48]
   14000ba7e:	mov    DWORD PTR [rsp+0x30],ebx
   14000ba82:	mov    DWORD PTR [rsp+0x28],eax
   14000ba86:	mov    DWORD PTR [rsp+0x20],r10d
   14000ba8b:	call   0x14001313c
   14000ba90:	mov    rcx,rsi
   14000ba93:	mov    QWORD PTR [rdi+0x28],rax
   14000ba97:	call   QWORD PTR [rip+0xe62b]        # 0x14001a0c8
   14000ba9d:	mov    esi,0x1
   14000baa2:	mov    ecx,DWORD PTR [rsp+0x60]
   14000baa6:	mov    rdx,r12
   14000baa9:	call   0x140012318
   14000baae:	mov    WORD PTR [rdi+0x8],si
   14000bab2:	mov    WORD PTR [rdi+0x6],ax
   14000bab6:	mov    eax,DWORD PTR [rbp-0x80]
   14000bab9:	mov    DWORD PTR [rdi+0x14],eax
   14000babc:	cmp    DWORD PTR [rsp+0x7c],r14d
   14000bac1:	je     0x14000baca
   14000bac3:	mov    DWORD PTR [rdi+0x14],r14d
   14000bac7:	mov    r13d,ebx
   14000baca:	lea    ecx,[r15-0x1]
   14000bace:	mov    WORD PTR [rdi+0x4],r14w
   14000bad3:	mov    DWORD PTR [rdi+0xa],0x0
   14000bada:	mov    DWORD PTR [rdi],ecx
   14000badc:	mov    DWORD PTR [rdi+0x10],ecx
   14000badf:	mov    eax,r13d
   14000bae2:	jmp    0x14000bafc
   14000bae4:	call   QWORD PTR [rip+0xe586]        # 0x14001a070
   14000baea:	mov    ecx,eax
   14000baec:	call   0x14000be00
   14000baf1:	mov    rcx,rsi
   14000baf4:	call   QWORD PTR [rip+0xe5ce]        # 0x14001a0c8
   14000bafa:	mov    eax,ebx
   14000bafc:	mov    rcx,QWORD PTR [rbp+0x1b0]
   14000bb03:	xor    rcx,rsp
   14000bb06:	call   0x14000a820
   14000bb0b:	mov    rbx,QWORD PTR [rsp+0x310]
   14000bb13:	add    rsp,0x2c0
   14000bb1a:	pop    r15
   14000bb1c:	pop    r14
   14000bb1e:	pop    r13
   14000bb20:	pop    r12
   14000bb22:	pop    rdi
   14000bb23:	pop    rsi
   14000bb24:	pop    rbp
   14000bb25:	ret    
   14000bb26:	int3   
   14000bb27:	int3   
   14000bb28:	mov    r9,rcx
   14000bb2b:	xor    r8d,r8d
   14000bb2e:	mov    al,BYTE PTR [rcx]
   14000bb30:	inc    rcx
   14000bb33:	test   al,al
   14000bb35:	jne    0x14000bb2e
   14000bb37:	dec    rcx
   14000bb3a:	cmp    rcx,r9
   14000bb3d:	je     0x14000bb43
   14000bb3f:	cmp    BYTE PTR [rcx],dl
   14000bb41:	jne    0x14000bb37
   14000bb43:	cmp    BYTE PTR [rcx],dl
   14000bb45:	cmove  r8,rcx
   14000bb49:	mov    rax,r8
   14000bb4c:	ret    
   14000bb4d:	int3   
   14000bb4e:	int3   
   14000bb4f:	int3   
   14000bb50:	mov    rax,rsp
   14000bb53:	mov    QWORD PTR [rax+0x8],rbx
   14000bb57:	mov    QWORD PTR [rax+0x10],rbp
   14000bb5b:	mov    QWORD PTR [rax+0x18],rsi
   14000bb5f:	push   rdi
   14000bb60:	sub    rsp,0x50
   14000bb64:	and    QWORD PTR [rax-0x38],0x0
   14000bb69:	mov    rbx,rdx
   14000bb6c:	xor    edx,edx
   14000bb6e:	mov    rsi,r8
   14000bb71:	mov    rdi,rcx
   14000bb74:	lea    r8d,[rdx+0x28]
   14000bb78:	lea    rcx,[rax-0x30]
   14000bb7c:	mov    rbp,r9
   14000bb7f:	call   0x14000a530
   14000bb84:	test   rsi,rsi
   14000bb87:	jne    0x14000bb9e
   14000bb89:	call   0x14000bdc0
   14000bb8e:	mov    DWORD PTR [rax],0x16
   14000bb94:	call   0x14000d01c
   14000bb99:	or     eax,0xffffffff
   14000bb9c:	jmp    0x14000bc06
   14000bb9e:	test   rbx,rbx
   14000bba1:	je     0x14000bba8
   14000bba3:	test   rdi,rdi
   14000bba6:	je     0x14000bb89
   14000bba8:	mov    r9,QWORD PTR [rsp+0x80]
   14000bbb0:	mov    eax,0x7fffffff
   14000bbb5:	lea    rcx,[rsp+0x20]
   14000bbba:	cmp    rbx,rax
   14000bbbd:	mov    r8,rbp
   14000bbc0:	mov    rdx,rsi
   14000bbc3:	cmova  ebx,eax
   14000bbc6:	mov    DWORD PTR [rsp+0x38],0x42
   14000bbce:	mov    QWORD PTR [rsp+0x30],rdi
   14000bbd3:	mov    DWORD PTR [rsp+0x28],ebx
   14000bbd7:	mov    QWORD PTR [rsp+0x20],rdi
   14000bbdc:	call   0x14000de04
   14000bbe1:	mov    ebx,eax
   14000bbe3:	test   rdi,rdi
   14000bbe6:	je     0x14000bc06
   14000bbe8:	dec    DWORD PTR [rsp+0x28]
   14000bbec:	js     0x14000bbf8
   14000bbee:	mov    rax,QWORD PTR [rsp+0x20]
   14000bbf3:	mov    BYTE PTR [rax],0x0
   14000bbf6:	jmp    0x14000bc04
   14000bbf8:	lea    rdx,[rsp+0x20]
   14000bbfd:	xor    ecx,ecx
   14000bbff:	call   0x1400107a0
   14000bc04:	mov    eax,ebx
   14000bc06:	mov    rbx,QWORD PTR [rsp+0x60]
   14000bc0b:	mov    rbp,QWORD PTR [rsp+0x68]
   14000bc10:	mov    rsi,QWORD PTR [rsp+0x70]
   14000bc15:	add    rsp,0x50
   14000bc19:	pop    rdi
   14000bc1a:	ret    
   14000bc1b:	int3   
   14000bc1c:	sub    rsp,0x38
   14000bc20:	mov    QWORD PTR [rsp+0x20],r9
   14000bc25:	xor    r9d,r9d
   14000bc28:	call   0x14000bb50
   14000bc2d:	add    rsp,0x38
   14000bc31:	ret    
   14000bc32:	int3   
   14000bc33:	int3   
   14000bc34:	mov    rax,rsp
   14000bc37:	mov    QWORD PTR [rax+0x8],rbx
   14000bc3b:	mov    QWORD PTR [rax+0x10],rbp
   14000bc3f:	mov    QWORD PTR [rax+0x18],rsi
   14000bc43:	push   rdi
   14000bc44:	sub    rsp,0x50
   14000bc48:	and    QWORD PTR [rax-0x38],0x0
   14000bc4d:	mov    rbx,rdx
   14000bc50:	xor    edx,edx
   14000bc52:	mov    rsi,r8
   14000bc55:	mov    rbp,rcx
   14000bc58:	lea    r8d,[rdx+0x28]
   14000bc5c:	lea    rcx,[rax-0x30]
   14000bc60:	mov    rdi,r9
   14000bc63:	call   0x14000a530
   14000bc68:	test   rbx,rbx
   14000bc6b:	jne    0x14000bc82
   14000bc6d:	call   0x14000bdc0
   14000bc72:	mov    DWORD PTR [rax],0x16
   14000bc78:	call   0x14000d01c
   14000bc7d:	or     eax,0xffffffff
   14000bc80:	jmp    0x14000bcae
   14000bc82:	and    QWORD PTR [rsp+0x30],0x0
   14000bc88:	and    QWORD PTR [rsp+0x20],0x0
   14000bc8e:	lea    rcx,[rsp+0x20]
   14000bc93:	mov    r9,rdi
   14000bc96:	mov    r8,rsi
   14000bc99:	mov    rdx,rbx
   14000bc9c:	mov    DWORD PTR [rsp+0x28],0x7fffffff
   14000bca4:	mov    DWORD PTR [rsp+0x38],0x42
   14000bcac:	call   rbp
   14000bcae:	mov    rbx,QWORD PTR [rsp+0x60]
   14000bcb3:	mov    rbp,QWORD PTR [rsp+0x68]
   14000bcb8:	mov    rsi,QWORD PTR [rsp+0x70]
   14000bcbd:	add    rsp,0x50
   14000bcc1:	pop    rdi
   14000bcc2:	ret    
   14000bcc3:	int3   
   14000bcc4:	mov    r9,rdx
   14000bcc7:	mov    rdx,rcx
   14000bcca:	lea    rcx,[rip+0x2133]        # 0x14000de04
   14000bcd1:	xor    r8d,r8d
   14000bcd4:	jmp    0x14000bc34
   14000bcd9:	int3   
   14000bcda:	int3   
   14000bcdb:	int3   
   14000bcdc:	mov    QWORD PTR [rsp+0x8],rbx
   14000bce1:	push   rdi
   14000bce2:	sub    rsp,0x30
   14000bce6:	mov    edi,ecx
   14000bce8:	call   0x14000d180
   14000bced:	mov    rbx,rax
   14000bcf0:	test   rax,rax
   14000bcf3:	jne    0x14000bd07
   14000bcf5:	lea    rax,[rip+0x12d54]        # 0x14001ea50
   14000bcfc:	mov    rbx,QWORD PTR [rsp+0x40]
   14000bd01:	add    rsp,0x30
   14000bd05:	pop    rdi
   14000bd06:	ret    
   14000bd07:	cmp    QWORD PTR [rax+0x38],0x0
   14000bd0c:	jne    0x14000bd26
   14000bd0e:	mov    edx,0x1
   14000bd13:	mov    ecx,0x86
   14000bd18:	call   0x140010b24
   14000bd1d:	mov    QWORD PTR [rbx+0x38],rax
   14000bd21:	test   rax,rax
   14000bd24:	je     0x14000bcf5
   14000bd26:	mov    rbx,QWORD PTR [rbx+0x38]
   14000bd2a:	test   edi,edi
   14000bd2c:	js     0x14000bd37
   14000bd2e:	call   0x1400114f4
   14000bd33:	cmp    edi,DWORD PTR [rax]
   14000bd35:	jl     0x14000bd3e
   14000bd37:	call   0x1400114f4
   14000bd3c:	mov    edi,DWORD PTR [rax]
   14000bd3e:	call   0x1400114fc
   14000bd43:	movsxd rcx,edi
   14000bd46:	mov    edx,0x86
   14000bd4b:	mov    r8,QWORD PTR [rax+rcx*8]
   14000bd4f:	mov    rcx,rbx
   14000bd52:	call   0x14000eab0
   14000bd57:	test   eax,eax
   14000bd59:	jne    0x14000bd60
   14000bd5b:	mov    rax,rbx
   14000bd5e:	jmp    0x14000bcfc
   14000bd60:	and    QWORD PTR [rsp+0x20],0x0
   14000bd66:	xor    r9d,r9d
   14000bd69:	xor    r8d,r8d
   14000bd6c:	xor    edx,edx
   14000bd6e:	xor    ecx,ecx
   14000bd70:	call   0x14000cf78
   14000bd75:	int3   
   14000bd76:	int3   
   14000bd77:	int3   
   14000bd78:	lea    r9,[rip+0x17711]        # 0x140023490
   14000bd7f:	xor    eax,eax
   14000bd81:	mov    rdx,r9
   14000bd84:	lea    r8d,[rax+0x8]
   14000bd88:	cmp    ecx,DWORD PTR [rdx]
   14000bd8a:	je     0x14000bdb7
   14000bd8c:	inc    eax
   14000bd8e:	add    rdx,r8
   14000bd91:	cmp    eax,0x2d
   14000bd94:	jb     0x14000bd88
   14000bd96:	lea    eax,[rcx-0x13]
   14000bd99:	cmp    eax,0x11
   14000bd9c:	ja     0x14000bda4
   14000bd9e:	mov    eax,0xd
   14000bda3:	ret    
   14000bda4:	add    ecx,0xffffff44
   14000bdaa:	mov    eax,0x16
   14000bdaf:	cmp    ecx,0xe
   14000bdb2:	cmovbe eax,r8d
   14000bdb6:	ret    
   14000bdb7:	cdqe   
   14000bdb9:	mov    eax,DWORD PTR [r9+rax*8+0x4]
   14000bdbe:	ret    
   14000bdbf:	int3   
   14000bdc0:	sub    rsp,0x28
   14000bdc4:	call   0x14000d180
   14000bdc9:	test   rax,rax
   14000bdcc:	jne    0x14000bdd7
   14000bdce:	lea    rax,[rip+0x17823]        # 0x1400235f8
   14000bdd5:	jmp    0x14000bddb
   14000bdd7:	add    rax,0x10
   14000bddb:	add    rsp,0x28
   14000bddf:	ret    
   14000bde0:	sub    rsp,0x28
   14000bde4:	call   0x14000d180
   14000bde9:	test   rax,rax
   14000bdec:	jne    0x14000bdf7
   14000bdee:	lea    rax,[rip+0x17807]        # 0x1400235fc
   14000bdf5:	jmp    0x14000bdfb
   14000bdf7:	add    rax,0x14
   14000bdfb:	add    rsp,0x28
   14000bdff:	ret    
   14000be00:	rex push rbx
   14000be02:	sub    rsp,0x20
   14000be06:	mov    ebx,ecx
   14000be08:	call   0x14000d180
   14000be0d:	test   rax,rax
   14000be10:	jne    0x14000be1b
   14000be12:	lea    rax,[rip+0x177e3]        # 0x1400235fc
   14000be19:	jmp    0x14000be1f
   14000be1b:	add    rax,0x14
   14000be1f:	mov    DWORD PTR [rax],ebx
   14000be21:	call   0x14000d180
   14000be26:	lea    r10,[rip+0x177cb]        # 0x1400235f8
   14000be2d:	test   rax,rax
   14000be30:	je     0x14000be36
   14000be32:	lea    r10,[rax+0x10]
   14000be36:	mov    ecx,ebx
   14000be38:	call   0x14000bd78
   14000be3d:	mov    DWORD PTR [r10],eax
   14000be40:	add    rsp,0x20
   14000be44:	pop    rbx
   14000be45:	ret    
   14000be46:	int3   
   14000be47:	int3   
   14000be48:	mov    QWORD PTR [rsp+0x8],rbx
   14000be4d:	mov    QWORD PTR [rsp+0x10],rsi
   14000be52:	push   rdi
   14000be53:	sub    rsp,0x20
   14000be57:	mov    eax,DWORD PTR [rcx+0x18]
   14000be5a:	xor    esi,esi
   14000be5c:	mov    rbx,rcx
   14000be5f:	and    al,0x3
   14000be61:	cmp    al,0x2
   14000be63:	jne    0x14000bea4
   14000be65:	test   DWORD PTR [rcx+0x18],0x108
   14000be6c:	je     0x14000bea4
   14000be6e:	mov    edi,DWORD PTR [rcx]
   14000be70:	sub    edi,DWORD PTR [rcx+0x10]
   14000be73:	test   edi,edi
   14000be75:	jle    0x14000bea4
   14000be77:	call   0x140010a7c
   14000be7c:	mov    rdx,QWORD PTR [rbx+0x10]
   14000be80:	mov    r8d,edi
   14000be83:	mov    ecx,eax
   14000be85:	call   0x14001210c
   14000be8a:	cmp    eax,edi
   14000be8c:	jne    0x14000be9d
   14000be8e:	mov    eax,DWORD PTR [rbx+0x18]
   14000be91:	test   al,al
   14000be93:	jns    0x14000bea4
   14000be95:	and    eax,0xfffffffd
   14000be98:	mov    DWORD PTR [rbx+0x18],eax
   14000be9b:	jmp    0x14000bea4
   14000be9d:	or     DWORD PTR [rbx+0x18],0x20
   14000bea1:	or     esi,0xffffffff
   14000bea4:	mov    rcx,QWORD PTR [rbx+0x10]
   14000bea8:	and    DWORD PTR [rbx+0x8],0x0
   14000beac:	mov    eax,esi
   14000beae:	mov    rsi,QWORD PTR [rsp+0x38]
   14000beb3:	mov    QWORD PTR [rbx],rcx
   14000beb6:	mov    rbx,QWORD PTR [rsp+0x30]
   14000bebb:	add    rsp,0x20
   14000bebf:	pop    rdi
   14000bec0:	ret    
   14000bec1:	int3   
   14000bec2:	int3   
   14000bec3:	int3   
   14000bec4:	rex push rbx
   14000bec6:	sub    rsp,0x20
   14000beca:	mov    rbx,rcx
   14000becd:	test   rcx,rcx
   14000bed0:	jne    0x14000bedc
   14000bed2:	add    rsp,0x20
   14000bed6:	pop    rbx
   14000bed7:	jmp    0x14000bf10
   14000bedc:	call   0x14000be48
   14000bee1:	test   eax,eax
   14000bee3:	je     0x14000beea
   14000bee5:	or     eax,0xffffffff
   14000bee8:	jmp    0x14000bf0a
   14000beea:	test   DWORD PTR [rbx+0x18],0x4000
   14000bef1:	je     0x14000bf08
   14000bef3:	mov    rcx,rbx
   14000bef6:	call   0x140010a7c
   14000befb:	mov    ecx,eax
   14000befd:	call   0x1400137a0
   14000bf02:	neg    eax
   14000bf04:	sbb    eax,eax
   14000bf06:	jmp    0x14000bf0a
   14000bf08:	xor    eax,eax
   14000bf0a:	add    rsp,0x20
   14000bf0e:	pop    rbx
   14000bf0f:	ret    
   14000bf10:	mov    QWORD PTR [rsp+0x8],rbx
   14000bf15:	mov    QWORD PTR [rsp+0x10],rsi
   14000bf1a:	mov    QWORD PTR [rsp+0x18],rdi
   14000bf1f:	push   r12
   14000bf21:	push   r13
   14000bf23:	push   r15
   14000bf25:	sub    rsp,0x30
   14000bf29:	mov    r13d,ecx
   14000bf2c:	xor    esi,esi
   14000bf2e:	xor    edi,edi
   14000bf30:	lea    ecx,[rsi+0x1]
   14000bf33:	call   0x14000cb28
   14000bf38:	nop
   14000bf39:	xor    ebx,ebx
   14000bf3b:	or     r15d,0xffffffff
   14000bf3f:	mov    DWORD PTR [rsp+0x20],ebx
   14000bf43:	cmp    ebx,DWORD PTR [rip+0x1ad57]        # 0x140026ca0
   14000bf49:	jge    0x14000bfcf
   14000bf4f:	movsxd r12,ebx
   14000bf52:	mov    rax,QWORD PTR [rip+0x19d2f]        # 0x140025c88
   14000bf59:	cmp    QWORD PTR [rax+r12*8],0x0
   14000bf5e:	je     0x14000bfc8
   14000bf60:	mov    rdx,QWORD PTR [rax+r12*8]
   14000bf64:	test   BYTE PTR [rdx+0x18],0x83
   14000bf68:	je     0x14000bfc8
   14000bf6a:	mov    ecx,ebx
   14000bf6c:	call   0x14000ad0c
   14000bf71:	nop
   14000bf72:	mov    rax,QWORD PTR [rip+0x19d0f]        # 0x140025c88
   14000bf79:	mov    rcx,QWORD PTR [rax+r12*8]
   14000bf7d:	test   BYTE PTR [rcx+0x18],0x83
   14000bf81:	je     0x14000bfb6
   14000bf83:	cmp    r13d,0x1
   14000bf87:	jne    0x14000bf9b
   14000bf89:	call   0x14000bec4
   14000bf8e:	cmp    eax,r15d
   14000bf91:	je     0x14000bfb6
   14000bf93:	inc    esi
   14000bf95:	mov    DWORD PTR [rsp+0x24],esi
   14000bf99:	jmp    0x14000bfb6
   14000bf9b:	test   r13d,r13d
   14000bf9e:	jne    0x14000bfb6
   14000bfa0:	test   BYTE PTR [rcx+0x18],0x2
   14000bfa4:	je     0x14000bfb6
   14000bfa6:	call   0x14000bec4
   14000bfab:	cmp    eax,r15d
   14000bfae:	cmove  edi,r15d
   14000bfb2:	mov    DWORD PTR [rsp+0x28],edi
   14000bfb6:	mov    rdx,QWORD PTR [rip+0x19ccb]        # 0x140025c88
   14000bfbd:	mov    rdx,QWORD PTR [rdx+r12*8]
   14000bfc1:	mov    ecx,ebx
   14000bfc3:	call   0x14000ad8c
   14000bfc8:	inc    ebx
   14000bfca:	jmp    0x14000bf3f
   14000bfcf:	mov    ecx,0x1
   14000bfd4:	call   0x14000ca28
   14000bfd9:	cmp    r13d,0x1
   14000bfdd:	cmove  edi,esi
   14000bfe0:	mov    eax,edi
   14000bfe2:	mov    rbx,QWORD PTR [rsp+0x50]
   14000bfe7:	mov    rsi,QWORD PTR [rsp+0x58]
   14000bfec:	mov    rdi,QWORD PTR [rsp+0x60]
   14000bff1:	add    rsp,0x30
   14000bff5:	pop    r15
   14000bff7:	pop    r13
   14000bff9:	pop    r12
   14000bffb:	ret    
   14000bffc:	mov    QWORD PTR [rsp+0x10],rbx
   14000c001:	mov    QWORD PTR [rsp+0x8],rcx
   14000c006:	push   rdi
   14000c007:	sub    rsp,0x20
   14000c00b:	mov    rbx,rcx
   14000c00e:	test   rcx,rcx
   14000c011:	jne    0x14000c01a
   14000c013:	call   0x14000bf10
   14000c018:	jmp    0x14000c034
   14000c01a:	call   0x14000aca8
   14000c01f:	nop
   14000c020:	mov    rcx,rbx
   14000c023:	call   0x14000bec4
   14000c028:	mov    edi,eax
   14000c02a:	mov    rcx,rbx
   14000c02d:	call   0x14000ad40
   14000c032:	mov    eax,edi
   14000c034:	mov    rbx,QWORD PTR [rsp+0x38]
   14000c039:	add    rsp,0x20
   14000c03d:	pop    rdi
   14000c03e:	ret    
   14000c03f:	int3   
   14000c040:	mov    ecx,0x1
   14000c045:	jmp    0x14000bf10
   14000c04a:	int3   
   14000c04b:	int3   
   14000c04c:	jmp    0x14000c055
   14000c04e:	cmp    al,dl
   14000c050:	je     0x14000c05f
   14000c052:	inc    rcx
   14000c055:	mov    al,BYTE PTR [rcx]
   14000c057:	test   al,al
   14000c059:	jne    0x14000c04e
   14000c05b:	cmp    al,dl
   14000c05d:	jne    0x14000c063
   14000c05f:	mov    rax,rcx
   14000c062:	ret    
   14000c063:	xor    eax,eax
   14000c065:	ret    
   14000c066:	int3   
   14000c067:	int3   
   14000c068:	mov    QWORD PTR [rsp+0x8],rbx
   14000c06d:	push   rbp
   14000c06e:	push   rsi
   14000c06f:	push   rdi
   14000c070:	push   r12
   14000c072:	push   r14
   14000c074:	mov    rbp,rsp
   14000c077:	sub    rsp,0x30
   14000c07b:	and    QWORD PTR [rbp+0x48],0x0
   14000c080:	cmp    DWORD PTR [rip+0x1ac29],0x0        # 0x140026cb0
   14000c087:	mov    rsi,rdx
   14000c08a:	mov    rdi,rcx
   14000c08d:	jne    0x14000c097
   14000c08f:	or     eax,0xffffffff
   14000c092:	jmp    0x14000c2d7
   14000c097:	test   rcx,rcx
   14000c09a:	jne    0x14000c0ae
   14000c09c:	call   0x14000bdc0
   14000c0a1:	mov    DWORD PTR [rax],0x16
   14000c0a7:	call   0x14000d01c
   14000c0ac:	jmp    0x14000c08f
   14000c0ae:	test   rdx,rdx
   14000c0b1:	jne    0x14000c112
   14000c0b3:	lea    r14d,[rdx+0x3d]
   14000c0b7:	mov    edx,r14d
   14000c0ba:	call   0x1400140d8
   14000c0bf:	test   rax,rax
   14000c0c2:	je     0x14000c0e4
   14000c0c4:	mov    rcx,rax
   14000c0c7:	mov    ebx,0x7fff
   14000c0cc:	sub    rcx,rdi
   14000c0cf:	cmp    rcx,rbx
   14000c0d2:	jge    0x14000c09c
   14000c0d4:	lea    rcx,[rax+0x1]
   14000c0d8:	mov    edx,ebx
   14000c0da:	call   0x14000eb58
   14000c0df:	cmp    rax,rbx
   14000c0e2:	jae    0x14000c09c
   14000c0e4:	mov    rcx,rdi
   14000c0e7:	call   0x140009fa0
   14000c0ec:	mov    edx,0x1
   14000c0f1:	lea    rcx,[rax+0x1]
   14000c0f5:	mov    rbx,rax
   14000c0f8:	call   0x140010b24
   14000c0fd:	mov    QWORD PTR [rbp+0x48],rax
   14000c101:	test   rax,rax
   14000c104:	je     0x14000c08f
   14000c106:	mov    r8,rdi
   14000c109:	lea    rdx,[rbx+0x1]
   14000c10d:	mov    rcx,rax
   14000c110:	jmp    0x14000c18c
   14000c112:	mov    ebx,0x7fff
   14000c117:	mov    edx,ebx
   14000c119:	call   0x14000eb58
   14000c11e:	mov    edx,ebx
   14000c120:	mov    rcx,rsi
   14000c123:	mov    r12,rax
   14000c126:	call   0x14000eb58
   14000c12b:	cmp    r12,rbx
   14000c12e:	jae    0x14000c09c
   14000c134:	cmp    rax,rbx
   14000c137:	jae    0x14000c09c
   14000c13d:	lea    rbx,[rax+r12*1+0x2]
   14000c142:	mov    edx,0x1
   14000c147:	mov    rcx,rbx
   14000c14a:	call   0x140010b24
   14000c14f:	mov    QWORD PTR [rbp+0x48],rax
   14000c153:	test   rax,rax
   14000c156:	je     0x14000c08f
   14000c15c:	mov    r8,rdi
   14000c15f:	mov    rdx,rbx
   14000c162:	mov    rcx,rax
   14000c165:	call   0x14000eab0
   14000c16a:	mov    rax,QWORD PTR [rbp+0x48]
   14000c16e:	mov    r14d,0x3d
   14000c174:	mov    BYTE PTR [r12+rax*1],r14b
   14000c178:	mov    rax,QWORD PTR [rbp+0x48]
   14000c17c:	inc    r12
   14000c17f:	sub    rbx,r12
   14000c182:	mov    r8,rsi
   14000c185:	lea    rcx,[r12+rax*1]
   14000c189:	mov    rdx,rbx
   14000c18c:	call   0x14000eab0
   14000c191:	lea    rcx,[rbp+0x48]
   14000c195:	mov    edx,0x1
   14000c19a:	call   0x140013c50
   14000c19f:	test   eax,eax
   14000c1a1:	je     0x14000c1ba
   14000c1a3:	mov    rcx,QWORD PTR [rbp+0x48]
   14000c1a7:	test   rcx,rcx
   14000c1aa:	je     0x14000c08f
   14000c1b0:	call   0x14000b460
   14000c1b5:	jmp    0x14000c08f
   14000c1ba:	cmp    QWORD PTR [rip+0x187e6],0x0        # 0x1400249a8
   14000c1c2:	je     0x14000c2d5
   14000c1c8:	and    DWORD PTR [rsp+0x28],0x0
   14000c1cd:	and    QWORD PTR [rbp+0x40],0x0
   14000c1d2:	and    QWORD PTR [rsp+0x20],0x0
   14000c1d8:	or     ebx,0xffffffff
   14000c1db:	mov    r8,rdi
   14000c1de:	xor    edx,edx
   14000c1e0:	mov    r9d,ebx
   14000c1e3:	xor    ecx,ecx
   14000c1e5:	call   QWORD PTR [rip+0xdf45]        # 0x14001a130
   14000c1eb:	mov    r12d,eax
   14000c1ee:	test   eax,eax
   14000c1f0:	jne    0x14000c204
   14000c1f2:	call   0x14000bdc0
   14000c1f7:	mov    DWORD PTR [rax],0x2a
   14000c1fd:	mov    eax,ebx
   14000c1ff:	jmp    0x14000c2d7
   14000c204:	test   rsi,rsi
   14000c207:	je     0x14000c22d
   14000c209:	and    DWORD PTR [rsp+0x28],0x0
   14000c20e:	and    QWORD PTR [rsp+0x20],0x0
   14000c214:	mov    r9d,ebx
   14000c217:	mov    r8,rsi
   14000c21a:	xor    edx,edx
   14000c21c:	xor    ecx,ecx
   14000c21e:	call   QWORD PTR [rip+0xdf0c]        # 0x14001a130
   14000c224:	test   eax,eax
   14000c226:	je     0x14000c1f2
   14000c228:	lea    r12d,[r12+rax*1+0x1]
   14000c22d:	movsxd rcx,r12d
   14000c230:	mov    edx,0x2
   14000c235:	call   0x140010b24
   14000c23a:	mov    QWORD PTR [rbp+0x40],rax
   14000c23e:	test   rax,rax
   14000c241:	je     0x14000c1fd
   14000c243:	mov    r9d,ebx
   14000c246:	mov    r8,rdi
   14000c249:	xor    edx,edx
   14000c24b:	xor    ecx,ecx
   14000c24d:	mov    DWORD PTR [rsp+0x28],r12d
   14000c252:	mov    QWORD PTR [rsp+0x20],rax
   14000c257:	call   QWORD PTR [rip+0xded3]        # 0x14001a130
   14000c25d:	test   eax,eax
   14000c25f:	jne    0x14000c26c
   14000c261:	mov    rcx,QWORD PTR [rbp+0x40]
   14000c265:	call   0x14000b460
   14000c26a:	jmp    0x14000c1f2
   14000c26c:	test   rsi,rsi
   14000c26f:	je     0x14000c2af
   14000c271:	mov    rcx,QWORD PTR [rbp+0x40]
   14000c275:	call   0x140013c34
   14000c27a:	mov    rcx,QWORD PTR [rbp+0x40]
   14000c27e:	mov    r9d,ebx
   14000c281:	mov    WORD PTR [rcx+rax*2],r14w
   14000c286:	mov    rcx,QWORD PTR [rbp+0x40]
   14000c28a:	inc    rax
   14000c28d:	sub    r12d,eax
   14000c290:	lea    rax,[rcx+rax*2]
   14000c294:	mov    r8,rsi
   14000c297:	xor    edx,edx
   14000c299:	xor    ecx,ecx
   14000c29b:	mov    DWORD PTR [rsp+0x28],r12d
   14000c2a0:	mov    QWORD PTR [rsp+0x20],rax
   14000c2a5:	call   QWORD PTR [rip+0xde85]        # 0x14001a130
   14000c2ab:	test   eax,eax
   14000c2ad:	je     0x14000c261
   14000c2af:	lea    rcx,[rbp+0x40]
   14000c2b3:	xor    edx,edx
   14000c2b5:	call   0x140013878
   14000c2ba:	test   eax,eax
   14000c2bc:	je     0x14000c2d5
   14000c2be:	mov    rcx,QWORD PTR [rbp+0x40]
   14000c2c2:	test   rcx,rcx
   14000c2c5:	je     0x14000c1fd
   14000c2cb:	call   0x14000b460
   14000c2d0:	jmp    0x14000c1fd
   14000c2d5:	xor    eax,eax
   14000c2d7:	mov    rbx,QWORD PTR [rsp+0x60]
   14000c2dc:	add    rsp,0x30
   14000c2e0:	pop    r14
   14000c2e2:	pop    r12
   14000c2e4:	pop    rdi
   14000c2e5:	pop    rsi
   14000c2e6:	pop    rbp
   14000c2e7:	ret    
   14000c2e8:	rex push rbx
   14000c2ea:	sub    rsp,0x20
   14000c2ee:	mov    rbx,rcx
   14000c2f1:	mov    ecx,0x7
   14000c2f6:	call   0x14000cb28
   14000c2fb:	nop
   14000c2fc:	xor    edx,edx
   14000c2fe:	mov    rcx,rbx
   14000c301:	call   0x14000c068
   14000c306:	mov    ebx,eax
   14000c308:	mov    ecx,0x7
   14000c30d:	call   0x14000ca28
   14000c312:	mov    eax,ebx
   14000c314:	add    rsp,0x20
   14000c318:	pop    rbx
   14000c319:	ret    
   14000c31a:	int3   
   14000c31b:	int3   
   14000c31c:	rex push rbx
   14000c31e:	sub    rsp,0x20
   14000c322:	mov    ebx,edx
   14000c324:	test   rcx,rcx
   14000c327:	jne    0x14000c346
   14000c329:	call   0x14000bde0
   14000c32e:	and    DWORD PTR [rax],0x0
   14000c331:	call   0x14000bdc0
   14000c336:	mov    ebx,0x16
   14000c33b:	mov    DWORD PTR [rax],ebx
   14000c33d:	call   0x14000d01c
   14000c342:	mov    eax,ebx
   14000c344:	jmp    0x14000c396
   14000c346:	test   edx,0xfffffff9
   14000c34c:	jne    0x14000c329
   14000c34e:	call   QWORD PTR [rip+0xdde4]        # 0x14001a138
   14000c354:	cmp    eax,0xffffffff
   14000c357:	jne    0x14000c36f
   14000c359:	call   QWORD PTR [rip+0xdd11]        # 0x14001a070
   14000c35f:	mov    ecx,eax
   14000c361:	call   0x14000be00
   14000c366:	call   0x14000bdc0
   14000c36b:	mov    eax,DWORD PTR [rax]
   14000c36d:	jmp    0x14000c396
   14000c36f:	test   al,0x10
   14000c371:	jne    0x14000c394
   14000c373:	test   al,0x1
   14000c375:	je     0x14000c394
   14000c377:	test   bl,0x2
   14000c37a:	je     0x14000c394
   14000c37c:	call   0x14000bde0
   14000c381:	mov    DWORD PTR [rax],0x5
   14000c387:	call   0x14000bdc0
   14000c38c:	mov    DWORD PTR [rax],0xd
   14000c392:	jmp    0x14000c366
   14000c394:	xor    eax,eax
   14000c396:	add    rsp,0x20
   14000c39a:	pop    rbx
   14000c39b:	ret    
   14000c39c:	sub    rsp,0x28
   14000c3a0:	call   0x14000c31c
   14000c3a5:	neg    eax
   14000c3a7:	sbb    eax,eax
   14000c3a9:	add    rsp,0x28
   14000c3ad:	ret    
   14000c3ae:	int3   
   14000c3af:	int3   
   14000c3b0:	rex push rbx
   14000c3b2:	sub    rsp,0x20
   14000c3b6:	mov    ebx,ecx
   14000c3b8:	call   0x14000d180
   14000c3bd:	test   rax,rax
   14000c3c0:	je     0x14000c3ca
   14000c3c2:	mov    rcx,rax
   14000c3c5:	call   0x14000d35c
   14000c3ca:	mov    ecx,ebx
   14000c3cc:	call   QWORD PTR [rip+0xdd6e]        # 0x14001a140
   14000c3d2:	int3   
   14000c3d3:	int3   
   14000c3d4:	sub    rsp,0x28
   14000c3d8:	call   0x14000d204
   14000c3dd:	nop
   14000c3de:	mov    rcx,QWORD PTR [rax+0x98]
   14000c3e5:	call   QWORD PTR [rax+0x90]
   14000c3eb:	mov    ecx,eax
   14000c3ed:	call   0x14000c3b0
   14000c3f2:	nop
   14000c3f3:	mov    ecx,eax
   14000c3f5:	call   0x140009bd8
   14000c3fa:	nop
   14000c3fb:	add    rsp,0x28
   14000c3ff:	ret    
   14000c400:	rex push rbx
   14000c402:	sub    rsp,0x20
   14000c406:	mov    rbx,rcx
   14000c409:	call   0x14000d094
   14000c40e:	call   0x14000d08c
   14000c413:	mov    ecx,eax
   14000c415:	call   0x14000d084
   14000c41a:	mov    r11,rax
   14000c41d:	test   rax,rax
   14000c420:	jne    0x14000c44e
   14000c422:	call   0x14000d08c
   14000c427:	mov    rdx,rbx
   14000c42a:	mov    ecx,eax
   14000c42c:	call   0x14000d098
   14000c431:	test   eax,eax
   14000c433:	jne    0x14000c444
   14000c435:	call   QWORD PTR [rip+0xdc35]        # 0x14001a070
   14000c43b:	mov    ecx,eax
   14000c43d:	call   QWORD PTR [rip+0xdcfd]        # 0x14001a140
   14000c443:	int3   
   14000c444:	call   QWORD PTR [rip+0xdcfe]        # 0x14001a148
   14000c44a:	mov    DWORD PTR [rbx],eax
   14000c44c:	jmp    0x14000c47a
   14000c44e:	mov    rax,QWORD PTR [rbx+0x90]
   14000c455:	mov    rcx,rbx
   14000c458:	mov    QWORD PTR [r11+0x90],rax
   14000c45f:	mov    rax,QWORD PTR [rbx+0x98]
   14000c466:	mov    QWORD PTR [r11+0x98],rax
   14000c46d:	mov    rax,QWORD PTR [rbx+0x8]
   14000c471:	mov    QWORD PTR [r11+0x8],rax
   14000c475:	call   0x14000d228
   14000c47a:	call   0x14000c3d4
   14000c47f:	int3   
   14000c480:	mov    QWORD PTR [rsp+0x8],rbx
   14000c485:	mov    QWORD PTR [rsp+0x10],rbp
   14000c48a:	mov    QWORD PTR [rsp+0x20],rsi
   14000c48f:	push   rdi
   14000c490:	push   r12
   14000c492:	push   r13
   14000c494:	sub    rsp,0x30
   14000c498:	xor    ebx,ebx
   14000c49a:	mov    rbp,r9
   14000c49d:	mov    rsi,r8
   14000c4a0:	mov    r12d,edx
   14000c4a3:	mov    r13,rcx
   14000c4a6:	test   r8,r8
   14000c4a9:	jne    0x14000c4c0
   14000c4ab:	call   0x14000bdc0
   14000c4b0:	mov    DWORD PTR [rax],0x16
   14000c4b6:	call   0x14000d01c
   14000c4bb:	jmp    0x14000c557
   14000c4c0:	call   0x14000d094
   14000c4c5:	mov    edx,0x2c8
   14000c4ca:	mov    ecx,0x1
   14000c4cf:	call   0x140010b24
   14000c4d4:	mov    rdi,rax
   14000c4d7:	test   rax,rax
   14000c4da:	je     0x14000c544
   14000c4dc:	call   0x14000d204
   14000c4e1:	mov    rcx,rdi
   14000c4e4:	mov    rdx,QWORD PTR [rax+0xc0]
   14000c4eb:	call   0x14000d0c8
   14000c4f0:	mov    rcx,QWORD PTR [rsp+0x78]
   14000c4f5:	or     QWORD PTR [rdi+0x8],0xffffffffffffffff
   14000c4fa:	mov    eax,DWORD PTR [rsp+0x70]
   14000c4fe:	test   rcx,rcx
   14000c501:	lea    r8,[rsp+0x60]
   14000c506:	cmovne r8,rcx
   14000c50a:	mov    rdx,r12
   14000c50d:	mov    r9,rdi
   14000c510:	mov    QWORD PTR [rsp+0x28],r8
   14000c515:	lea    r8,[rip+0xfffffffffffffee4]        # 0x14000c400
   14000c51c:	mov    rcx,r13
   14000c51f:	mov    QWORD PTR [rdi+0x90],rsi
   14000c526:	mov    QWORD PTR [rdi+0x98],rbp
   14000c52d:	mov    DWORD PTR [rsp+0x20],eax
   14000c531:	call   QWORD PTR [rip+0xdc19]        # 0x14001a150
   14000c537:	test   rax,rax
   14000c53a:	jne    0x14000c559
   14000c53c:	call   QWORD PTR [rip+0xdb2e]        # 0x14001a070
   14000c542:	mov    ebx,eax
   14000c544:	mov    rcx,rdi
   14000c547:	call   0x14000b460
   14000c54c:	test   ebx,ebx
   14000c54e:	je     0x14000c557
   14000c550:	mov    ecx,ebx
   14000c552:	call   0x14000be00
   14000c557:	xor    eax,eax
   14000c559:	mov    rbx,QWORD PTR [rsp+0x50]
   14000c55e:	mov    rbp,QWORD PTR [rsp+0x58]
   14000c563:	mov    rsi,QWORD PTR [rsp+0x68]
   14000c568:	add    rsp,0x30
   14000c56c:	pop    r13
   14000c56e:	pop    r12
   14000c570:	pop    rdi
   14000c571:	ret    
   14000c572:	int3   
   14000c573:	int3   
   14000c574:	int3   
   14000c575:	int3   
   14000c576:	int3   
   14000c577:	int3   
   14000c578:	int3   
   14000c579:	int3   
   14000c57a:	int3   
   14000c57b:	int3   
   14000c57c:	int3   
   14000c57d:	int3   
   14000c57e:	int3   
   14000c57f:	int3   
   14000c580:	int3   
   14000c581:	int3   
   14000c582:	int3   
   14000c583:	int3   
   14000c584:	int3   
   14000c585:	int3   
   14000c586:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000c590:	sub    rdx,rcx
   14000c593:	cmp    r8,0x8
   14000c597:	jb     0x14000c5bb
   14000c599:	test   cl,0x7
   14000c59c:	je     0x14000c5b2
   14000c59e:	xchg   ax,ax
   14000c5a0:	mov    al,BYTE PTR [rcx]
   14000c5a2:	cmp    al,BYTE PTR [rdx+rcx*1]
   14000c5a5:	jne    0x14000c5d3
   14000c5a7:	inc    rcx
   14000c5aa:	dec    r8
   14000c5ad:	test   cl,0x7
   14000c5b0:	jne    0x14000c5a0
   14000c5b2:	mov    r9,r8
   14000c5b5:	shr    r9,0x3
   14000c5b9:	jne    0x14000c5da
   14000c5bb:	test   r8,r8
   14000c5be:	je     0x14000c5cf
   14000c5c0:	mov    al,BYTE PTR [rcx]
   14000c5c2:	cmp    al,BYTE PTR [rdx+rcx*1]
   14000c5c5:	jne    0x14000c5d3
   14000c5c7:	inc    rcx
   14000c5ca:	dec    r8
   14000c5cd:	jne    0x14000c5c0
   14000c5cf:	xor    rax,rax
   14000c5d2:	ret    
   14000c5d3:	sbb    eax,eax
   14000c5d5:	sbb    eax,0xffffffff
   14000c5d8:	ret    
   14000c5d9:	nop
   14000c5da:	shr    r9,0x2
   14000c5de:	je     0x14000c617
   14000c5e0:	mov    rax,QWORD PTR [rcx]
   14000c5e3:	cmp    rax,QWORD PTR [rdx+rcx*1]
   14000c5e7:	jne    0x14000c644
   14000c5e9:	mov    rax,QWORD PTR [rcx+0x8]
   14000c5ed:	cmp    rax,QWORD PTR [rdx+rcx*1+0x8]
   14000c5f2:	jne    0x14000c640
   14000c5f4:	mov    rax,QWORD PTR [rcx+0x10]
   14000c5f8:	cmp    rax,QWORD PTR [rdx+rcx*1+0x10]
   14000c5fd:	jne    0x14000c63c
   14000c5ff:	mov    rax,QWORD PTR [rcx+0x18]
   14000c603:	cmp    rax,QWORD PTR [rdx+rcx*1+0x18]
   14000c608:	jne    0x14000c638
   14000c60a:	add    rcx,0x20
   14000c60e:	dec    r9
   14000c611:	jne    0x14000c5e0
   14000c613:	and    r8,0x1f
   14000c617:	mov    r9,r8
   14000c61a:	shr    r9,0x3
   14000c61e:	je     0x14000c5bb
   14000c620:	mov    rax,QWORD PTR [rcx]
   14000c623:	cmp    rax,QWORD PTR [rdx+rcx*1]
   14000c627:	jne    0x14000c644
   14000c629:	add    rcx,0x8
   14000c62d:	dec    r9
   14000c630:	jne    0x14000c620
   14000c632:	and    r8,0x7
   14000c636:	jmp    0x14000c5bb
   14000c638:	add    rcx,0x8
   14000c63c:	add    rcx,0x8
   14000c640:	add    rcx,0x8
   14000c644:	mov    rcx,QWORD PTR [rcx+rdx*1]
   14000c648:	bswap  rax
   14000c64b:	bswap  rcx
   14000c64e:	cmp    rax,rcx
   14000c651:	sbb    eax,eax
   14000c653:	sbb    eax,0xffffffff
   14000c656:	ret    
   14000c657:	int3   
   14000c658:	sub    rsp,0x38
   14000c65c:	mov    rax,QWORD PTR [rip+0x16a5d]        # 0x1400230c0
   14000c663:	xor    rax,rsp
   14000c666:	mov    QWORD PTR [rsp+0x20],rax
   14000c66b:	mov    al,BYTE PTR [rdx]
   14000c66d:	xor    r11d,r11d
   14000c670:	mov    r10,rdx
   14000c673:	mov    QWORD PTR [rsp],r11
   14000c677:	mov    QWORD PTR [rsp+0x8],r11
   14000c67c:	mov    QWORD PTR [rsp+0x10],r11
   14000c681:	mov    QWORD PTR [rsp+0x18],r11
   14000c686:	mov    r9,rcx
   14000c689:	jmp    0x14000c6ac
   14000c68b:	movzx  r8d,al
   14000c68f:	movzx  eax,al
   14000c692:	mov    edx,0x1
   14000c697:	and    eax,0x7
   14000c69a:	shr    r8,0x3
   14000c69e:	mov    cl,al
   14000c6a0:	shl    dl,cl
   14000c6a2:	or     BYTE PTR [rsp+r8*1],dl
   14000c6a6:	inc    r10
   14000c6a9:	mov    al,BYTE PTR [r10]
   14000c6ac:	test   al,al
   14000c6ae:	jne    0x14000c68b
   14000c6b0:	jmp    0x14000c6d0
   14000c6b2:	movzx  ecx,r8b
   14000c6b6:	movzx  eax,r8b
   14000c6ba:	mov    edx,0x1
   14000c6bf:	and    ecx,0x7
   14000c6c2:	shr    rax,0x3
   14000c6c6:	shl    edx,cl
   14000c6c8:	test   BYTE PTR [rsp+rax*1],dl
   14000c6cb:	jne    0x14000c6ec
   14000c6cd:	inc    r9
   14000c6d0:	mov    r8b,BYTE PTR [r9]
   14000c6d3:	test   r8b,r8b
   14000c6d6:	jne    0x14000c6b2
   14000c6d8:	xor    eax,eax
   14000c6da:	mov    rcx,QWORD PTR [rsp+0x20]
   14000c6df:	xor    rcx,rsp
   14000c6e2:	call   0x14000a820
   14000c6e7:	add    rsp,0x38
   14000c6eb:	ret    
   14000c6ec:	mov    rax,r9
   14000c6ef:	jmp    0x14000c6da
   14000c6f1:	int3   
   14000c6f2:	int3   
   14000c6f3:	int3   
   14000c6f4:	rex push rbx
   14000c6f6:	sub    rsp,0x20
   14000c6fa:	mov    rbx,rcx
   14000c6fd:	mov    BYTE PTR [rcx+0x18],0x0
   14000c701:	test   rdx,rdx
   14000c704:	jne    0x14000c785
   14000c706:	call   0x14000d204
   14000c70b:	mov    QWORD PTR [rbx+0x10],rax
   14000c70f:	mov    rdx,QWORD PTR [rax+0xc0]
   14000c716:	mov    QWORD PTR [rbx],rdx
   14000c719:	mov    rcx,QWORD PTR [rax+0xb8]
   14000c720:	mov    QWORD PTR [rbx+0x8],rcx
   14000c724:	cmp    rdx,QWORD PTR [rip+0x17cb5]        # 0x1400243e0
   14000c72b:	je     0x14000c743
   14000c72d:	mov    eax,DWORD PTR [rax+0xc8]
   14000c733:	test   DWORD PTR [rip+0x17877],eax        # 0x140023fb0
   14000c739:	jne    0x14000c743
   14000c73b:	call   0x140014c2c
   14000c740:	mov    QWORD PTR [rbx],rax
   14000c743:	mov    rax,QWORD PTR [rip+0x17766]        # 0x140023eb0
   14000c74a:	cmp    QWORD PTR [rbx+0x8],rax
   14000c74e:	je     0x14000c76b
   14000c750:	mov    rax,QWORD PTR [rbx+0x10]
   14000c754:	mov    ecx,DWORD PTR [rax+0xc8]
   14000c75a:	test   DWORD PTR [rip+0x17850],ecx        # 0x140023fb0
   14000c760:	jne    0x14000c76b
   14000c762:	call   0x14001435c
   14000c767:	mov    QWORD PTR [rbx+0x8],rax
   14000c76b:	mov    rax,QWORD PTR [rbx+0x10]
   14000c76f:	test   BYTE PTR [rax+0xc8],0x2
   14000c776:	jne    0x14000c78c
   14000c778:	or     DWORD PTR [rax+0xc8],0x2
   14000c77f:	mov    BYTE PTR [rbx+0x18],0x1
   14000c783:	jmp    0x14000c78c
   14000c785:	movups xmm0,XMMWORD PTR [rdx]
   14000c788:	movdqu XMMWORD PTR [rcx],xmm0
   14000c78c:	mov    rax,rbx
   14000c78f:	add    rsp,0x20
   14000c793:	pop    rbx
   14000c794:	ret    
   14000c795:	int3   
   14000c796:	int3   
   14000c797:	int3   
   14000c798:	rex push rbx
   14000c79a:	sub    rsp,0x40
   14000c79e:	cmp    DWORD PTR [rip+0x191c3],0x0        # 0x140025968
   14000c7a5:	movsxd rbx,ecx
   14000c7a8:	jne    0x14000c7ba
   14000c7aa:	mov    rax,QWORD PTR [rip+0x17c0f]        # 0x1400243c0
   14000c7b1:	movzx  eax,WORD PTR [rax+rbx*2]
   14000c7b5:	and    eax,0x4
   14000c7b8:	jmp    0x14000c810
   14000c7ba:	lea    rcx,[rsp+0x20]
   14000c7bf:	xor    edx,edx
   14000c7c1:	call   0x14000c6f4
   14000c7c6:	mov    rax,QWORD PTR [rsp+0x20]
   14000c7cb:	cmp    DWORD PTR [rax+0x10c],0x1
   14000c7d2:	jle    0x14000c7ea
   14000c7d4:	lea    r8,[rsp+0x20]
   14000c7d9:	mov    edx,0x4
   14000c7de:	mov    ecx,ebx
   14000c7e0:	call   0x140014ca4
   14000c7e5:	mov    r11d,eax
   14000c7e8:	jmp    0x14000c7fa
   14000c7ea:	mov    rax,QWORD PTR [rax+0x140]
   14000c7f1:	movzx  r11d,WORD PTR [rax+rbx*2]
   14000c7f6:	and    r11d,0x4
   14000c7fa:	cmp    BYTE PTR [rsp+0x38],0x0
   14000c7ff:	je     0x14000c80d
   14000c801:	mov    rax,QWORD PTR [rsp+0x30]
   14000c806:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000c80d:	mov    eax,r11d
   14000c810:	add    rsp,0x40
   14000c814:	pop    rbx
   14000c815:	ret    
   14000c816:	int3   
   14000c817:	int3   
   14000c818:	rex push rbx
   14000c81a:	sub    rsp,0x40
   14000c81e:	cmp    DWORD PTR [rip+0x19143],0x0        # 0x140025968
   14000c825:	movsxd rbx,ecx
   14000c828:	jne    0x14000c83c
   14000c82a:	mov    rax,QWORD PTR [rip+0x17b8f]        # 0x1400243c0
   14000c831:	movzx  eax,WORD PTR [rax+rbx*2]
   14000c835:	and    eax,0x80
   14000c83a:	jmp    0x14000c895
   14000c83c:	lea    rcx,[rsp+0x20]
   14000c841:	xor    edx,edx
   14000c843:	call   0x14000c6f4
   14000c848:	mov    rax,QWORD PTR [rsp+0x20]
   14000c84d:	cmp    DWORD PTR [rax+0x10c],0x1
   14000c854:	jle    0x14000c86c
   14000c856:	lea    r8,[rsp+0x20]
   14000c85b:	mov    edx,0x80
   14000c860:	mov    ecx,ebx
   14000c862:	call   0x140014ca4
   14000c867:	mov    r11d,eax
   14000c86a:	jmp    0x14000c87f
   14000c86c:	mov    rax,QWORD PTR [rax+0x140]
   14000c873:	movzx  r11d,WORD PTR [rax+rbx*2]
   14000c878:	and    r11d,0x80
   14000c87f:	cmp    BYTE PTR [rsp+0x38],0x0
   14000c884:	je     0x14000c892
   14000c886:	mov    rax,QWORD PTR [rsp+0x30]
   14000c88b:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000c892:	mov    eax,r11d
   14000c895:	add    rsp,0x40
   14000c899:	pop    rbx
   14000c89a:	ret    
   14000c89b:	int3   
   14000c89c:	rex push rbx
   14000c89e:	sub    rsp,0x40
   14000c8a2:	cmp    DWORD PTR [rip+0x190bf],0x0        # 0x140025968
   14000c8a9:	movsxd rbx,ecx
   14000c8ac:	jne    0x14000c8be
   14000c8ae:	mov    rax,QWORD PTR [rip+0x17b0b]        # 0x1400243c0
   14000c8b5:	movzx  eax,WORD PTR [rax+rbx*2]
   14000c8b9:	and    eax,0x8
   14000c8bc:	jmp    0x14000c914
   14000c8be:	lea    rcx,[rsp+0x20]
   14000c8c3:	xor    edx,edx
   14000c8c5:	call   0x14000c6f4
   14000c8ca:	mov    rax,QWORD PTR [rsp+0x20]
   14000c8cf:	cmp    DWORD PTR [rax+0x10c],0x1
   14000c8d6:	jle    0x14000c8ee
   14000c8d8:	lea    r8,[rsp+0x20]
   14000c8dd:	mov    edx,0x8
   14000c8e2:	mov    ecx,ebx
   14000c8e4:	call   0x140014ca4
   14000c8e9:	mov    r11d,eax
   14000c8ec:	jmp    0x14000c8fe
   14000c8ee:	mov    rax,QWORD PTR [rax+0x140]
   14000c8f5:	movzx  r11d,WORD PTR [rax+rbx*2]
   14000c8fa:	and    r11d,0x8
   14000c8fe:	cmp    BYTE PTR [rsp+0x38],0x0
   14000c903:	je     0x14000c911
   14000c905:	mov    rax,QWORD PTR [rsp+0x30]
   14000c90a:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000c911:	mov    eax,r11d
   14000c914:	add    rsp,0x40
   14000c918:	pop    rbx
   14000c919:	ret    
   14000c91a:	int3   
   14000c91b:	int3   
   14000c91c:	mov    QWORD PTR [rsp+0x8],rbx
   14000c921:	mov    QWORD PTR [rsp+0x10],rsi
   14000c926:	mov    QWORD PTR [rsp+0x18],rdi
   14000c92b:	push   r12
   14000c92d:	sub    rsp,0x20
   14000c931:	lea    r12,[rip+0x16cc8]        # 0x140023600
   14000c938:	xor    esi,esi
   14000c93a:	xor    ebx,ebx
   14000c93c:	mov    rdi,r12
   14000c93f:	cmp    DWORD PTR [rdi+0x8],0x1
   14000c943:	jne    0x14000c96b
   14000c945:	movsxd rax,esi
   14000c948:	mov    edx,0xfa0
   14000c94d:	inc    esi
   14000c94f:	lea    rcx,[rax+rax*4]
   14000c953:	lea    rax,[rip+0x180a6]        # 0x140024a00
   14000c95a:	lea    rcx,[rax+rcx*8]
   14000c95e:	mov    QWORD PTR [rdi],rcx
   14000c961:	call   QWORD PTR [rip+0xd7f1]        # 0x14001a158
   14000c967:	test   eax,eax
   14000c969:	je     0x14000c991
   14000c96b:	inc    ebx
   14000c96d:	add    rdi,0x10
   14000c971:	cmp    ebx,0x24
   14000c974:	jl     0x14000c93f
   14000c976:	mov    eax,0x1
   14000c97b:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c980:	mov    rsi,QWORD PTR [rsp+0x38]
   14000c985:	mov    rdi,QWORD PTR [rsp+0x40]
   14000c98a:	add    rsp,0x20
   14000c98e:	pop    r12
   14000c990:	ret    
   14000c991:	movsxd rax,ebx
   14000c994:	add    rax,rax
   14000c997:	and    QWORD PTR [r12+rax*8],0x0
   14000c99c:	xor    eax,eax
   14000c99e:	jmp    0x14000c97b
   14000c9a0:	mov    QWORD PTR [rsp+0x8],rbx
   14000c9a5:	mov    QWORD PTR [rsp+0x10],rbp
   14000c9aa:	mov    QWORD PTR [rsp+0x18],rsi
   14000c9af:	push   rdi
   14000c9b0:	sub    rsp,0x20
   14000c9b4:	mov    edi,0x24
   14000c9b9:	lea    rbx,[rip+0x16c40]        # 0x140023600
   14000c9c0:	mov    esi,edi
   14000c9c2:	mov    rbp,QWORD PTR [rbx]
   14000c9c5:	test   rbp,rbp
   14000c9c8:	je     0x14000c9e5
   14000c9ca:	cmp    DWORD PTR [rbx+0x8],0x1
   14000c9ce:	je     0x14000c9e5
   14000c9d0:	mov    rcx,rbp
   14000c9d3:	call   QWORD PTR [rip+0xd787]        # 0x14001a160
   14000c9d9:	mov    rcx,rbp
   14000c9dc:	call   0x14000b460
   14000c9e1:	and    QWORD PTR [rbx],0x0
   14000c9e5:	add    rbx,0x10
   14000c9e9:	dec    rsi
   14000c9ec:	jne    0x14000c9c2
   14000c9ee:	lea    rbx,[rip+0x16c13]        # 0x140023608
   14000c9f5:	mov    rcx,QWORD PTR [rbx-0x8]
   14000c9f9:	test   rcx,rcx
   14000c9fc:	je     0x14000ca09
   14000c9fe:	cmp    DWORD PTR [rbx],0x1
   14000ca01:	jne    0x14000ca09
   14000ca03:	call   QWORD PTR [rip+0xd757]        # 0x14001a160
   14000ca09:	add    rbx,0x10
   14000ca0d:	dec    rdi
   14000ca10:	jne    0x14000c9f5
   14000ca12:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ca17:	mov    rbp,QWORD PTR [rsp+0x38]
   14000ca1c:	mov    rsi,QWORD PTR [rsp+0x40]
   14000ca21:	add    rsp,0x20
   14000ca25:	pop    rdi
   14000ca26:	ret    
   14000ca27:	int3   
   14000ca28:	movsxd rcx,ecx
   14000ca2b:	lea    rax,[rip+0x16bce]        # 0x140023600
   14000ca32:	add    rcx,rcx
   14000ca35:	mov    rcx,QWORD PTR [rax+rcx*8]
   14000ca39:	rex.W jmp QWORD PTR [rip+0xd6b0]        # 0x14001a0f0
   14000ca40:	mov    QWORD PTR [rsp+0x8],rbx
   14000ca45:	mov    QWORD PTR [rsp+0x10],rsi
   14000ca4a:	mov    QWORD PTR [rsp+0x18],rdi
   14000ca4f:	push   r13
   14000ca51:	sub    rsp,0x20
   14000ca55:	movsxd rbx,ecx
   14000ca58:	mov    esi,0x1
   14000ca5d:	cmp    QWORD PTR [rip+0x18963],0x0        # 0x1400253c8
   14000ca65:	jne    0x14000ca7e
   14000ca67:	call   0x14000db80
   14000ca6c:	lea    ecx,[rsi+0x1d]
   14000ca6f:	call   0x14000d920
   14000ca74:	mov    ecx,0xff
   14000ca79:	call   0x1400098a8
   14000ca7e:	mov    rdi,rbx
   14000ca81:	add    rdi,rdi
   14000ca84:	lea    r13,[rip+0x16b75]        # 0x140023600
   14000ca8b:	cmp    QWORD PTR [r13+rdi*8+0x0],0x0
   14000ca91:	je     0x14000ca97
   14000ca93:	mov    eax,esi
   14000ca95:	jmp    0x14000cb10
   14000ca97:	mov    ecx,0x28
   14000ca9c:	call   0x140010aa4
   14000caa1:	mov    rbx,rax
   14000caa4:	test   rax,rax
   14000caa7:	jne    0x14000cab8
   14000caa9:	call   0x14000bdc0
   14000caae:	mov    DWORD PTR [rax],0xc
   14000cab4:	xor    eax,eax
   14000cab6:	jmp    0x14000cb10
   14000cab8:	mov    ecx,0xa
   14000cabd:	call   0x14000cb28
   14000cac2:	nop
   14000cac3:	mov    rcx,rbx
   14000cac6:	cmp    QWORD PTR [r13+rdi*8+0x0],0x0
   14000cacc:	jne    0x14000cafb
   14000cace:	mov    edx,0xfa0
   14000cad3:	call   QWORD PTR [rip+0xd67f]        # 0x14001a158
   14000cad9:	test   eax,eax
   14000cadb:	jne    0x14000caf4
   14000cadd:	mov    rcx,rbx
   14000cae0:	call   0x14000b460
   14000cae5:	call   0x14000bdc0
   14000caea:	mov    DWORD PTR [rax],0xc
   14000caf0:	xor    esi,esi
   14000caf2:	jmp    0x14000cb01
   14000caf4:	mov    QWORD PTR [r13+rdi*8+0x0],rbx
   14000caf9:	jmp    0x14000cb01
   14000cafb:	call   0x14000b460
   14000cb00:	nop
   14000cb01:	mov    rcx,QWORD PTR [rip+0x16b98]        # 0x1400236a0
   14000cb08:	call   QWORD PTR [rip+0xd5e2]        # 0x14001a0f0
   14000cb0e:	jmp    0x14000ca93
   14000cb10:	mov    rbx,QWORD PTR [rsp+0x30]
   14000cb15:	mov    rsi,QWORD PTR [rsp+0x38]
   14000cb1a:	mov    rdi,QWORD PTR [rsp+0x40]
   14000cb1f:	add    rsp,0x20
   14000cb23:	pop    r13
   14000cb25:	ret    
   14000cb26:	int3   
   14000cb27:	int3   
   14000cb28:	mov    QWORD PTR [rsp+0x8],rbx
   14000cb2d:	push   rdi
   14000cb2e:	sub    rsp,0x20
   14000cb32:	movsxd rbx,ecx
   14000cb35:	lea    rdi,[rip+0x16ac4]        # 0x140023600
   14000cb3c:	add    rbx,rbx
   14000cb3f:	cmp    QWORD PTR [rdi+rbx*8],0x0
   14000cb44:	jne    0x14000cb57
   14000cb46:	call   0x14000ca40
   14000cb4b:	test   eax,eax
   14000cb4d:	jne    0x14000cb57
   14000cb4f:	lea    ecx,[rax+0x11]
   14000cb52:	call   0x140009c04
   14000cb57:	mov    rcx,QWORD PTR [rdi+rbx*8]
   14000cb5b:	mov    rbx,QWORD PTR [rsp+0x30]
   14000cb60:	add    rsp,0x20
   14000cb64:	pop    rdi
   14000cb65:	rex.W jmp QWORD PTR [rip+0xd57c]        # 0x14001a0e8
   14000cb6c:	sub    rsp,0x28
   14000cb70:	call   0x14000d204
   14000cb75:	mov    rcx,QWORD PTR [rax+0xd0]
   14000cb7c:	test   rcx,rcx
   14000cb7f:	je     0x14000cb85
   14000cb81:	call   rcx
   14000cb83:	jmp    0x14000cb85
   14000cb85:	call   0x140014d8c
   14000cb8a:	add    rsp,0x28
   14000cb8e:	ret    
   14000cb8f:	int3   
   14000cb90:	sub    rsp,0x28
   14000cb94:	lea    rcx,[rip+0xffffffffffffffd1]        # 0x14000cb6c
   14000cb9b:	call   QWORD PTR [rip+0xd5c7]        # 0x14001a168
   14000cba1:	mov    QWORD PTR [rip+0x18088],rax        # 0x140024c30
   14000cba8:	add    rsp,0x28
   14000cbac:	ret    
   14000cbad:	int3   
   14000cbae:	int3   
   14000cbaf:	int3   
   14000cbb0:	mov    QWORD PTR [rip+0x18081],rcx        # 0x140024c38
   14000cbb7:	mov    QWORD PTR [rip+0x18082],rcx        # 0x140024c40
   14000cbbe:	mov    QWORD PTR [rip+0x18083],rcx        # 0x140024c48
   14000cbc5:	mov    QWORD PTR [rip+0x18084],rcx        # 0x140024c50
   14000cbcc:	ret    
   14000cbcd:	int3   
   14000cbce:	int3   
   14000cbcf:	int3   
   14000cbd0:	mov    rcx,QWORD PTR [rip+0x18071]        # 0x140024c48
   14000cbd7:	rex.W jmp QWORD PTR [rip+0xd502]        # 0x14001a0e0
   14000cbde:	int3   
   14000cbdf:	int3   
   14000cbe0:	mov    QWORD PTR [rsp+0x10],rbx
   14000cbe5:	mov    QWORD PTR [rsp+0x18],rsi
   14000cbea:	push   rdi
   14000cbeb:	push   r12
   14000cbed:	push   r13
   14000cbef:	push   r14
   14000cbf1:	push   r15
   14000cbf3:	sub    rsp,0x30
   14000cbf7:	mov    ebx,ecx
   14000cbf9:	xor    edi,edi
   14000cbfb:	mov    DWORD PTR [rsp+0x60],edi
   14000cbff:	xor    esi,esi
   14000cc01:	mov    edx,ecx
   14000cc03:	sub    edx,0x2
   14000cc06:	je     0x14000ccd1
   14000cc0c:	sub    edx,0x2
   14000cc0f:	je     0x14000cc73
   14000cc11:	sub    edx,0x2
   14000cc14:	je     0x14000cc63
   14000cc16:	sub    edx,0x2
   14000cc19:	je     0x14000cc73
   14000cc1b:	sub    edx,0x3
   14000cc1e:	je     0x14000cc73
   14000cc20:	sub    edx,0x4
   14000cc23:	je     0x14000cc53
   14000cc25:	sub    edx,0x6
   14000cc28:	je     0x14000cc40
   14000cc2a:	dec    edx
   14000cc2c:	je     0x14000cc63
   14000cc2e:	call   0x14000bdc0
   14000cc33:	mov    DWORD PTR [rax],0x16
   14000cc39:	call   0x14000d01c
   14000cc3e:	jmp    0x14000cc80
   14000cc40:	lea    r12,[rip+0x17ff9]        # 0x140024c40
   14000cc47:	mov    rcx,QWORD PTR [rip+0x17ff2]        # 0x140024c40
   14000cc4e:	jmp    0x14000ccdf
   14000cc53:	lea    r12,[rip+0x17ff6]        # 0x140024c50
   14000cc5a:	mov    rcx,QWORD PTR [rip+0x17fef]        # 0x140024c50
   14000cc61:	jmp    0x14000ccdf
   14000cc63:	lea    r12,[rip+0x17fde]        # 0x140024c48
   14000cc6a:	mov    rcx,QWORD PTR [rip+0x17fd7]        # 0x140024c48
   14000cc71:	jmp    0x14000ccdf
   14000cc73:	call   0x14000d180
   14000cc78:	mov    rsi,rax
   14000cc7b:	test   rax,rax
   14000cc7e:	jne    0x14000cc88
   14000cc80:	or     eax,0xffffffff
   14000cc83:	jmp    0x14000cdfa
   14000cc88:	mov    rdx,QWORD PTR [rax+0xa0]
   14000cc8f:	mov    rcx,rdx
   14000cc92:	movsxd r8,DWORD PTR [rip+0x12a33]        # 0x14001f6cc
   14000cc99:	cmp    DWORD PTR [rcx+0x4],ebx
   14000cc9c:	je     0x14000ccb1
   14000cc9e:	add    rcx,0x10
   14000cca2:	mov    rax,r8
   14000cca5:	shl    rax,0x4
   14000cca9:	add    rax,rdx
   14000ccac:	cmp    rcx,rax
   14000ccaf:	jb     0x14000cc99
   14000ccb1:	mov    rax,r8
   14000ccb4:	shl    rax,0x4
   14000ccb8:	add    rax,rdx
   14000ccbb:	cmp    rcx,rax
   14000ccbe:	jae    0x14000ccc5
   14000ccc0:	cmp    DWORD PTR [rcx+0x4],ebx
   14000ccc3:	je     0x14000ccc7
   14000ccc5:	xor    ecx,ecx
   14000ccc7:	lea    r12,[rcx+0x8]
   14000cccb:	mov    r13,QWORD PTR [r12]
   14000cccf:	jmp    0x14000ccf1
   14000ccd1:	lea    r12,[rip+0x17f60]        # 0x140024c38
   14000ccd8:	mov    rcx,QWORD PTR [rip+0x17f59]        # 0x140024c38
   14000ccdf:	mov    edi,0x1
   14000cce4:	mov    DWORD PTR [rsp+0x60],edi
   14000cce8:	call   QWORD PTR [rip+0xd3f2]        # 0x14001a0e0
   14000ccee:	mov    r13,rax
   14000ccf1:	cmp    r13,0x1
   14000ccf5:	jne    0x14000ccfe
   14000ccf7:	xor    eax,eax
   14000ccf9:	jmp    0x14000cdfa
   14000ccfe:	test   r13,r13
   14000cd01:	jne    0x14000cd0d
   14000cd03:	lea    ecx,[r13+0x3]
   14000cd07:	call   0x140009bd8
   14000cd0c:	int3   
   14000cd0d:	test   edi,edi
   14000cd0f:	je     0x14000cd19
   14000cd11:	xor    ecx,ecx
   14000cd13:	call   0x14000cb28
   14000cd18:	nop
   14000cd19:	cmp    ebx,0x8
   14000cd1c:	je     0x14000cd2f
   14000cd1e:	cmp    ebx,0xb
   14000cd21:	je     0x14000cd2f
   14000cd23:	cmp    ebx,0x4
   14000cd26:	je     0x14000cd2f
   14000cd28:	mov    r15,QWORD PTR [rsp+0x28]
   14000cd2d:	jmp    0x14000cd5b
   14000cd2f:	mov    r15,QWORD PTR [rsi+0xa8]
   14000cd36:	mov    QWORD PTR [rsp+0x28],r15
   14000cd3b:	and    QWORD PTR [rsi+0xa8],0x0
   14000cd43:	cmp    ebx,0x8
   14000cd46:	jne    0x14000cd5b
   14000cd48:	mov    r14d,DWORD PTR [rsi+0xb0]
   14000cd4f:	mov    DWORD PTR [rsi+0xb0],0x8c
   14000cd59:	jmp    0x14000cd60
   14000cd5b:	mov    r14d,DWORD PTR [rsp+0x60]
   14000cd60:	cmp    ebx,0x8
   14000cd63:	jne    0x14000cd9e
   14000cd65:	mov    ecx,DWORD PTR [rip+0x12955]        # 0x14001f6c0
   14000cd6b:	mov    edx,ecx
   14000cd6d:	mov    DWORD PTR [rsp+0x20],ecx
   14000cd71:	mov    eax,DWORD PTR [rip+0x1294d]        # 0x14001f6c4
   14000cd77:	add    ecx,eax
   14000cd79:	cmp    edx,ecx
   14000cd7b:	jge    0x14000cda7
   14000cd7d:	movsxd rcx,edx
   14000cd80:	add    rcx,rcx
   14000cd83:	mov    rax,QWORD PTR [rsi+0xa0]
   14000cd8a:	and    QWORD PTR [rax+rcx*8+0x8],0x0
   14000cd90:	inc    edx
   14000cd92:	mov    DWORD PTR [rsp+0x20],edx
   14000cd96:	mov    ecx,DWORD PTR [rip+0x12924]        # 0x14001f6c0
   14000cd9c:	jmp    0x14000cd71
   14000cd9e:	call   0x14000d078
   14000cda3:	mov    QWORD PTR [r12],rax
   14000cda7:	test   edi,edi
   14000cda9:	je     0x14000cdb2
   14000cdab:	xor    ecx,ecx
   14000cdad:	call   0x14000ca28
   14000cdb2:	mov    edi,0x8
   14000cdb7:	cmp    ebx,edi
   14000cdb9:	jne    0x14000cdc8
   14000cdbb:	mov    edx,DWORD PTR [rsi+0xb0]
   14000cdc1:	mov    ecx,edi
   14000cdc3:	call   r13
   14000cdc6:	jmp    0x14000cdcd
   14000cdc8:	mov    ecx,ebx
   14000cdca:	call   r13
   14000cdcd:	cmp    ebx,edi
   14000cdcf:	je     0x14000cddf
   14000cdd1:	cmp    ebx,0xb
   14000cdd4:	je     0x14000cddf
   14000cdd6:	cmp    ebx,0x4
   14000cdd9:	jne    0x14000ccf7
   14000cddf:	mov    QWORD PTR [rsi+0xa8],r15
   14000cde6:	cmp    ebx,edi
   14000cde8:	jne    0x14000ccf7
   14000cdee:	mov    DWORD PTR [rsi+0xb0],r14d
   14000cdf5:	jmp    0x14000ccf7
   14000cdfa:	mov    rbx,QWORD PTR [rsp+0x68]
   14000cdff:	mov    rsi,QWORD PTR [rsp+0x70]
   14000ce04:	add    rsp,0x30
   14000ce08:	pop    r15
   14000ce0a:	pop    r14
   14000ce0c:	pop    r13
   14000ce0e:	pop    r12
   14000ce10:	pop    rdi
   14000ce11:	ret    
   14000ce12:	int3   
   14000ce13:	int3   
   14000ce14:	mov    QWORD PTR [rip+0x17e45],rcx        # 0x140024c60
   14000ce1b:	ret    
   14000ce1c:	mov    QWORD PTR [rip+0x17e45],rcx        # 0x140024c68
   14000ce23:	ret    
   14000ce24:	mov    QWORD PTR [rip+0x17e45],rcx        # 0x140024c70
   14000ce2b:	ret    
   14000ce2c:	mov    QWORD PTR [rsp+0x10],rbx
   14000ce31:	mov    QWORD PTR [rsp+0x18],rsi
   14000ce36:	push   rbp
   14000ce37:	push   rdi
   14000ce38:	push   r12
   14000ce3a:	lea    rbp,[rsp-0x4f0]
   14000ce42:	sub    rsp,0x5f0
   14000ce49:	mov    rax,QWORD PTR [rip+0x16270]        # 0x1400230c0
   14000ce50:	xor    rax,rsp
   14000ce53:	mov    QWORD PTR [rbp+0x4e0],rax
   14000ce5a:	mov    edi,r8d
   14000ce5d:	mov    esi,edx
   14000ce5f:	mov    ebx,ecx
   14000ce61:	cmp    ecx,0xffffffff
   14000ce64:	je     0x14000ce6b
   14000ce66:	call   0x140014dcc
   14000ce6b:	and    DWORD PTR [rsp+0x70],0x0
   14000ce70:	lea    rcx,[rsp+0x74]
   14000ce75:	xor    edx,edx
   14000ce77:	mov    r8d,0x94
   14000ce7d:	call   0x14000a530
   14000ce82:	lea    r11,[rsp+0x70]
   14000ce87:	lea    rax,[rbp+0x10]
   14000ce8b:	lea    rcx,[rbp+0x10]
   14000ce8f:	mov    QWORD PTR [rsp+0x48],r11
   14000ce94:	mov    QWORD PTR [rsp+0x50],rax
   14000ce99:	call   QWORD PTR [rip+0xd301]        # 0x14001a1a0
   14000ce9f:	mov    r12,QWORD PTR [rbp+0x108]
   14000cea6:	lea    rdx,[rsp+0x40]
   14000ceab:	mov    rcx,r12
   14000ceae:	xor    r8d,r8d
   14000ceb1:	call   0x140019912
   14000ceb6:	test   rax,rax
   14000ceb9:	je     0x14000cef2
   14000cebb:	and    QWORD PTR [rsp+0x38],0x0
   14000cec1:	mov    rdx,QWORD PTR [rsp+0x40]
   14000cec6:	lea    rcx,[rsp+0x60]
   14000cecb:	mov    QWORD PTR [rsp+0x30],rcx
   14000ced0:	lea    rcx,[rsp+0x58]
   14000ced5:	mov    r9,rax
   14000ced8:	mov    QWORD PTR [rsp+0x28],rcx
   14000cedd:	lea    rcx,[rbp+0x10]
   14000cee1:	mov    r8,r12
   14000cee4:	mov    QWORD PTR [rsp+0x20],rcx
   14000cee9:	xor    ecx,ecx
   14000ceeb:	call   0x14001990c
   14000cef0:	jmp    0x14000cf0e
   14000cef2:	mov    rax,QWORD PTR [rbp+0x508]
   14000cef9:	mov    QWORD PTR [rbp+0x108],rax
   14000cf00:	lea    rax,[rbp+0x508]
   14000cf07:	mov    QWORD PTR [rbp+0xa8],rax
   14000cf0e:	mov    rax,QWORD PTR [rbp+0x508]
   14000cf15:	mov    DWORD PTR [rsp+0x70],esi
   14000cf19:	mov    DWORD PTR [rsp+0x74],edi
   14000cf1d:	mov    QWORD PTR [rbp-0x80],rax
   14000cf21:	call   QWORD PTR [rip+0xd261]        # 0x14001a188
   14000cf27:	xor    ecx,ecx
   14000cf29:	mov    edi,eax
   14000cf2b:	call   QWORD PTR [rip+0xd24f]        # 0x14001a180
   14000cf31:	lea    rcx,[rsp+0x48]
   14000cf36:	call   QWORD PTR [rip+0xd23c]        # 0x14001a178
   14000cf3c:	test   eax,eax
   14000cf3e:	jne    0x14000cf50
   14000cf40:	test   edi,edi
   14000cf42:	jne    0x14000cf50
   14000cf44:	cmp    ebx,0xffffffff
   14000cf47:	je     0x14000cf50
   14000cf49:	mov    ecx,ebx
   14000cf4b:	call   0x140014dcc
   14000cf50:	mov    rcx,QWORD PTR [rbp+0x4e0]
   14000cf57:	xor    rcx,rsp
   14000cf5a:	call   0x14000a820
   14000cf5f:	lea    r11,[rsp+0x5f0]
   14000cf67:	mov    rbx,QWORD PTR [r11+0x28]
   14000cf6b:	mov    rsi,QWORD PTR [r11+0x30]
   14000cf6f:	mov    rsp,r11
   14000cf72:	pop    r12
   14000cf74:	pop    rdi
   14000cf75:	pop    rbp
   14000cf76:	ret    
   14000cf77:	int3   
   14000cf78:	sub    rsp,0x28
   14000cf7c:	mov    r8d,0x1
   14000cf82:	mov    edx,0xc0000417
   14000cf87:	lea    ecx,[r8+0x1]
   14000cf8b:	call   0x14000ce2c
   14000cf90:	call   QWORD PTR [rip+0xd21a]        # 0x14001a1b0
   14000cf96:	mov    edx,0xc0000417
   14000cf9b:	mov    rcx,rax
   14000cf9e:	add    rsp,0x28
   14000cfa2:	rex.W jmp QWORD PTR [rip+0xd1ff]        # 0x14001a1a8
   14000cfa9:	int3   
   14000cfaa:	int3   
   14000cfab:	int3   
   14000cfac:	mov    QWORD PTR [rsp+0x8],rbx
   14000cfb1:	mov    QWORD PTR [rsp+0x10],rbp
   14000cfb6:	mov    QWORD PTR [rsp+0x18],rsi
   14000cfbb:	push   rdi
   14000cfbc:	sub    rsp,0x30
   14000cfc0:	mov    rbp,rcx
   14000cfc3:	mov    rcx,QWORD PTR [rip+0x17ca6]        # 0x140024c70
   14000cfca:	mov    ebx,r9d
   14000cfcd:	mov    rdi,r8
   14000cfd0:	mov    rsi,rdx
   14000cfd3:	call   QWORD PTR [rip+0xd107]        # 0x14001a0e0
   14000cfd9:	mov    r9d,ebx
   14000cfdc:	mov    r8,rdi
   14000cfdf:	mov    rdx,rsi
   14000cfe2:	mov    rcx,rbp
   14000cfe5:	test   rax,rax
   14000cfe8:	je     0x14000d00b
   14000cfea:	mov    r10,QWORD PTR [rsp+0x60]
   14000cfef:	mov    QWORD PTR [rsp+0x20],r10
   14000cff4:	call   rax
   14000cff6:	mov    rbx,QWORD PTR [rsp+0x40]
   14000cffb:	mov    rbp,QWORD PTR [rsp+0x48]
   14000d000:	mov    rsi,QWORD PTR [rsp+0x50]
   14000d005:	add    rsp,0x30
   14000d009:	pop    rdi
   14000d00a:	ret    
   14000d00b:	mov    rax,QWORD PTR [rsp+0x60]
   14000d010:	mov    QWORD PTR [rsp+0x20],rax
   14000d015:	call   0x14000cf78
   14000d01a:	int3   
   14000d01b:	int3   
   14000d01c:	sub    rsp,0x38
   14000d020:	and    QWORD PTR [rsp+0x20],0x0
   14000d026:	xor    r9d,r9d
   14000d029:	xor    r8d,r8d
   14000d02c:	xor    edx,edx
   14000d02e:	xor    ecx,ecx
   14000d030:	call   0x14000cfac
   14000d035:	add    rsp,0x38
   14000d039:	ret    
   14000d03a:	int3   
   14000d03b:	int3   
   14000d03c:	mov    QWORD PTR [rip+0x17c35],rcx        # 0x140024c78
   14000d043:	ret    
   14000d044:	rex push rbx
   14000d046:	sub    rsp,0x20
   14000d04a:	mov    rbx,rcx
   14000d04d:	mov    rcx,QWORD PTR [rip+0x17c24]        # 0x140024c78
   14000d054:	call   QWORD PTR [rip+0xd086]        # 0x14001a0e0
   14000d05a:	test   rax,rax
   14000d05d:	je     0x14000d06f
   14000d05f:	mov    rcx,rbx
   14000d062:	call   rax
   14000d064:	test   eax,eax
   14000d066:	je     0x14000d06f
   14000d068:	mov    eax,0x1
   14000d06d:	jmp    0x14000d071
   14000d06f:	xor    eax,eax
   14000d071:	add    rsp,0x20
   14000d075:	pop    rbx
   14000d076:	ret    
   14000d077:	int3   
   14000d078:	xor    ecx,ecx
   14000d07a:	rex.W jmp QWORD PTR [rip+0xd0e7]        # 0x14001a168
   14000d081:	int3   
   14000d082:	int3   
   14000d083:	int3   
   14000d084:	rex.W jmp QWORD PTR [rip+0xd12d]        # 0x14001a1b8
   14000d08b:	int3   
   14000d08c:	mov    eax,DWORD PTR [rip+0x167ae]        # 0x140023840
   14000d092:	ret    
   14000d093:	int3   
   14000d094:	xor    eax,eax
   14000d096:	ret    
   14000d097:	int3   
   14000d098:	rex.W jmp QWORD PTR [rip+0xd121]        # 0x14001a1c0
   14000d09f:	int3   
   14000d0a0:	sub    rsp,0x28
   14000d0a4:	mov    ecx,DWORD PTR [rip+0x16796]        # 0x140023840
   14000d0aa:	cmp    ecx,0xffffffff
   14000d0ad:	je     0x14000d0bc
   14000d0af:	call   QWORD PTR [rip+0xd113]        # 0x14001a1c8
   14000d0b5:	or     DWORD PTR [rip+0x16784],0xffffffff        # 0x140023840
   14000d0bc:	add    rsp,0x28
   14000d0c0:	jmp    0x14000c9a0
   14000d0c5:	int3   
   14000d0c6:	int3   
   14000d0c7:	int3   
   14000d0c8:	mov    QWORD PTR [rsp+0x8],rbx
   14000d0cd:	push   rdi
   14000d0ce:	sub    rsp,0x20
   14000d0d2:	mov    rdi,rdx
   14000d0d5:	mov    rbx,rcx
   14000d0d8:	lea    rax,[rip+0x12521]        # 0x14001f600
   14000d0df:	mov    QWORD PTR [rcx+0xa0],rax
   14000d0e6:	and    DWORD PTR [rcx+0x10],0x0
   14000d0ea:	mov    DWORD PTR [rcx+0x1c],0x1
   14000d0f1:	mov    DWORD PTR [rcx+0xc8],0x1
   14000d0fb:	mov    BYTE PTR [rcx+0x174],0x43
   14000d102:	mov    BYTE PTR [rcx+0x1f7],0x43
   14000d109:	lea    rax,[rip+0x16970]        # 0x140023a80
   14000d110:	mov    QWORD PTR [rcx+0xb8],rax
   14000d117:	mov    ecx,0xd
   14000d11c:	call   0x14000cb28
   14000d121:	nop
   14000d122:	mov    rax,QWORD PTR [rbx+0xb8]
   14000d129:	lock inc DWORD PTR [rax]
   14000d12c:	mov    ecx,0xd
   14000d131:	call   0x14000ca28
   14000d136:	mov    ecx,0xc
   14000d13b:	call   0x14000cb28
   14000d140:	nop
   14000d141:	mov    QWORD PTR [rbx+0xc0],rdi
   14000d148:	test   rdi,rdi
   14000d14b:	jne    0x14000d15b
   14000d14d:	mov    rax,QWORD PTR [rip+0x1728c]        # 0x1400243e0
   14000d154:	mov    QWORD PTR [rbx+0xc0],rax
   14000d15b:	mov    rcx,QWORD PTR [rbx+0xc0]
   14000d162:	call   0x140014928
   14000d167:	nop
   14000d168:	mov    ecx,0xc
   14000d16d:	call   0x14000ca28
   14000d172:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d177:	add    rsp,0x20
   14000d17b:	pop    rdi
   14000d17c:	ret    
   14000d17d:	int3   
   14000d17e:	int3   
   14000d17f:	int3   
   14000d180:	mov    QWORD PTR [rsp+0x8],rbx
   14000d185:	push   rdi
   14000d186:	sub    rsp,0x20
   14000d18a:	call   QWORD PTR [rip+0xcee0]        # 0x14001a070
   14000d190:	mov    ecx,DWORD PTR [rip+0x166aa]        # 0x140023840
   14000d196:	mov    edi,eax
   14000d198:	call   QWORD PTR [rip+0xd01a]        # 0x14001a1b8
   14000d19e:	mov    rbx,rax
   14000d1a1:	test   rax,rax
   14000d1a4:	jne    0x14000d1ee
   14000d1a6:	lea    ecx,[rax+0x1]
   14000d1a9:	mov    edx,0x2c8
   14000d1ae:	call   0x140010b24
   14000d1b3:	mov    rbx,rax
   14000d1b6:	test   rax,rax
   14000d1b9:	je     0x14000d1ee
   14000d1bb:	mov    ecx,DWORD PTR [rip+0x1667f]        # 0x140023840
   14000d1c1:	mov    rdx,rax
   14000d1c4:	call   QWORD PTR [rip+0xcff6]        # 0x14001a1c0
   14000d1ca:	mov    rcx,rbx
   14000d1cd:	test   eax,eax
   14000d1cf:	je     0x14000d1e7
   14000d1d1:	xor    edx,edx
   14000d1d3:	call   0x14000d0c8
   14000d1d8:	call   QWORD PTR [rip+0xcf6a]        # 0x14001a148
   14000d1de:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   14000d1e3:	mov    DWORD PTR [rbx],eax
   14000d1e5:	jmp    0x14000d1ee
   14000d1e7:	call   0x14000b460
   14000d1ec:	xor    ebx,ebx
   14000d1ee:	mov    ecx,edi
   14000d1f0:	call   QWORD PTR [rip+0xcfda]        # 0x14001a1d0
   14000d1f6:	mov    rax,rbx
   14000d1f9:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d1fe:	add    rsp,0x20
   14000d202:	pop    rdi
   14000d203:	ret    
   14000d204:	rex push rbx
   14000d206:	sub    rsp,0x20
   14000d20a:	call   0x14000d180
   14000d20f:	mov    rbx,rax
   14000d212:	test   rax,rax
   14000d215:	jne    0x14000d21f
   14000d217:	lea    ecx,[rax+0x10]
   14000d21a:	call   0x140009c04
   14000d21f:	mov    rax,rbx
   14000d222:	add    rsp,0x20
   14000d226:	pop    rbx
   14000d227:	ret    
   14000d228:	test   rcx,rcx
   14000d22b:	je     0x14000d35a
   14000d231:	mov    QWORD PTR [rsp+0x10],rbx
   14000d236:	push   rdi
   14000d237:	sub    rsp,0x20
   14000d23b:	mov    rbx,rcx
   14000d23e:	mov    rcx,QWORD PTR [rcx+0x38]
   14000d242:	test   rcx,rcx
   14000d245:	je     0x14000d24c
   14000d247:	call   0x14000b460
   14000d24c:	mov    rcx,QWORD PTR [rbx+0x48]
   14000d250:	test   rcx,rcx
   14000d253:	je     0x14000d25a
   14000d255:	call   0x14000b460
   14000d25a:	mov    rcx,QWORD PTR [rbx+0x58]
   14000d25e:	test   rcx,rcx
   14000d261:	je     0x14000d268
   14000d263:	call   0x14000b460
   14000d268:	mov    rcx,QWORD PTR [rbx+0x68]
   14000d26c:	test   rcx,rcx
   14000d26f:	je     0x14000d276
   14000d271:	call   0x14000b460
   14000d276:	mov    rcx,QWORD PTR [rbx+0x70]
   14000d27a:	test   rcx,rcx
   14000d27d:	je     0x14000d284
   14000d27f:	call   0x14000b460
   14000d284:	mov    rcx,QWORD PTR [rbx+0x78]
   14000d288:	test   rcx,rcx
   14000d28b:	je     0x14000d292
   14000d28d:	call   0x14000b460
   14000d292:	mov    rcx,QWORD PTR [rbx+0x80]
   14000d299:	test   rcx,rcx
   14000d29c:	je     0x14000d2a3
   14000d29e:	call   0x14000b460
   14000d2a3:	mov    rcx,QWORD PTR [rbx+0xa0]
   14000d2aa:	lea    rax,[rip+0x1234f]        # 0x14001f600
   14000d2b1:	cmp    rcx,rax
   14000d2b4:	je     0x14000d2bb
   14000d2b6:	call   0x14000b460
   14000d2bb:	mov    edi,0xd
   14000d2c0:	mov    ecx,edi
   14000d2c2:	call   0x14000cb28
   14000d2c7:	nop
   14000d2c8:	mov    rcx,QWORD PTR [rbx+0xb8]
   14000d2cf:	mov    QWORD PTR [rsp+0x30],rcx
   14000d2d4:	test   rcx,rcx
   14000d2d7:	je     0x14000d2f5
   14000d2d9:	lock dec DWORD PTR [rcx]
   14000d2dc:	jne    0x14000d2f5
   14000d2de:	lea    rax,[rip+0x1679b]        # 0x140023a80
   14000d2e5:	mov    rcx,QWORD PTR [rsp+0x30]
   14000d2ea:	cmp    rcx,rax
   14000d2ed:	je     0x14000d2f5
   14000d2ef:	call   0x14000b460
   14000d2f4:	nop
   14000d2f5:	mov    ecx,edi
   14000d2f7:	call   0x14000ca28
   14000d2fc:	mov    ecx,0xc
   14000d301:	call   0x14000cb28
   14000d306:	nop
   14000d307:	mov    rdi,QWORD PTR [rbx+0xc0]
   14000d30e:	test   rdi,rdi
   14000d311:	je     0x14000d33e
   14000d313:	mov    rcx,rdi
   14000d316:	call   0x1400149b4
   14000d31b:	cmp    rdi,QWORD PTR [rip+0x170be]        # 0x1400243e0
   14000d322:	je     0x14000d33e
   14000d324:	lea    rax,[rip+0x16f55]        # 0x140024280
   14000d32b:	cmp    rdi,rax
   14000d32e:	je     0x14000d33e
   14000d330:	cmp    DWORD PTR [rdi],0x0
   14000d333:	jne    0x14000d33e
   14000d335:	mov    rcx,rdi
   14000d338:	call   0x140014a58
   14000d33d:	nop
   14000d33e:	mov    ecx,0xc
   14000d343:	call   0x14000ca28
   14000d348:	mov    rcx,rbx
   14000d34b:	call   0x14000b460
   14000d350:	mov    rbx,QWORD PTR [rsp+0x38]
   14000d355:	add    rsp,0x20
   14000d359:	pop    rdi
   14000d35a:	ret    
   14000d35b:	int3   
   14000d35c:	rex push rbx
   14000d35e:	sub    rsp,0x20
   14000d362:	mov    rbx,rcx
   14000d365:	mov    ecx,DWORD PTR [rip+0x164d5]        # 0x140023840
   14000d36b:	cmp    ecx,0xffffffff
   14000d36e:	je     0x14000d394
   14000d370:	test   rbx,rbx
   14000d373:	jne    0x14000d384
   14000d375:	call   QWORD PTR [rip+0xce3d]        # 0x14001a1b8
   14000d37b:	mov    ecx,DWORD PTR [rip+0x164bf]        # 0x140023840
   14000d381:	mov    rbx,rax
   14000d384:	xor    edx,edx
   14000d386:	call   QWORD PTR [rip+0xce34]        # 0x14001a1c0
   14000d38c:	mov    rcx,rbx
   14000d38f:	call   0x14000d228
   14000d394:	add    rsp,0x20
   14000d398:	pop    rbx
   14000d399:	ret    
   14000d39a:	int3   
   14000d39b:	int3   
   14000d39c:	rex push rbx
   14000d39e:	sub    rsp,0x20
   14000d3a2:	call   0x1400098d8
   14000d3a7:	call   0x14000c91c
   14000d3ac:	test   eax,eax
   14000d3ae:	je     0x14000d410
   14000d3b0:	lea    rcx,[rip+0xfffffffffffffe71]        # 0x14000d228
   14000d3b7:	call   QWORD PTR [rip+0xce1b]        # 0x14001a1d8
   14000d3bd:	mov    DWORD PTR [rip+0x1647d],eax        # 0x140023840
   14000d3c3:	cmp    eax,0xffffffff
   14000d3c6:	je     0x14000d410
   14000d3c8:	mov    edx,0x2c8
   14000d3cd:	mov    ecx,0x1
   14000d3d2:	call   0x140010b24
   14000d3d7:	mov    rbx,rax
   14000d3da:	test   rax,rax
   14000d3dd:	je     0x14000d410
   14000d3df:	mov    ecx,DWORD PTR [rip+0x1645b]        # 0x140023840
   14000d3e5:	mov    rdx,rax
   14000d3e8:	call   QWORD PTR [rip+0xcdd2]        # 0x14001a1c0
   14000d3ee:	test   eax,eax
   14000d3f0:	je     0x14000d410
   14000d3f2:	xor    edx,edx
   14000d3f4:	mov    rcx,rbx
   14000d3f7:	call   0x14000d0c8
   14000d3fc:	call   QWORD PTR [rip+0xcd46]        # 0x14001a148
   14000d402:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   14000d407:	mov    DWORD PTR [rbx],eax
   14000d409:	mov    eax,0x1
   14000d40e:	jmp    0x14000d417
   14000d410:	call   0x14000d0a0
   14000d415:	xor    eax,eax
   14000d417:	add    rsp,0x20
   14000d41b:	pop    rbx
   14000d41c:	ret    
   14000d41d:	int3   
   14000d41e:	int3   
   14000d41f:	int3   
   14000d420:	rex push rbx
   14000d422:	sub    rsp,0x20
   14000d426:	mov    edx,0x8
   14000d42b:	lea    ecx,[rdx+0x18]
   14000d42e:	call   0x140010b24
   14000d433:	mov    rcx,rax
   14000d436:	mov    rbx,rax
   14000d439:	call   QWORD PTR [rip+0xcd29]        # 0x14001a168
   14000d43f:	mov    QWORD PTR [rip+0x1987a],rax        # 0x140026cc0
   14000d446:	mov    QWORD PTR [rip+0x1986b],rax        # 0x140026cb8
   14000d44d:	test   rbx,rbx
   14000d450:	jne    0x14000d457
   14000d452:	lea    eax,[rbx+0x18]
   14000d455:	jmp    0x14000d45d
   14000d457:	and    QWORD PTR [rbx],0x0
   14000d45b:	xor    eax,eax
   14000d45d:	add    rsp,0x20
   14000d461:	pop    rbx
   14000d462:	ret    
   14000d463:	int3   
   14000d464:	mov    QWORD PTR [rsp+0x8],rbx
   14000d469:	mov    QWORD PTR [rsp+0x10],rsi
   14000d46e:	mov    QWORD PTR [rsp+0x18],rdi
   14000d473:	push   r12
   14000d475:	push   r13
   14000d477:	push   r14
   14000d479:	sub    rsp,0x20
   14000d47d:	mov    r14,rcx
   14000d480:	call   0x1400098c0
   14000d485:	nop
   14000d486:	mov    rcx,QWORD PTR [rip+0x19833]        # 0x140026cc0
   14000d48d:	call   QWORD PTR [rip+0xcc4d]        # 0x14001a0e0
   14000d493:	mov    r12,rax
   14000d496:	mov    rcx,QWORD PTR [rip+0x1981b]        # 0x140026cb8
   14000d49d:	call   QWORD PTR [rip+0xcc3d]        # 0x14001a0e0
   14000d4a3:	mov    rbx,rax
   14000d4a6:	cmp    rax,r12
   14000d4a9:	jb     0x14000d54a
   14000d4af:	mov    rdi,rax
   14000d4b2:	sub    rdi,r12
   14000d4b5:	lea    r13,[rdi+0x8]
   14000d4b9:	cmp    r13,0x8
   14000d4bd:	jb     0x14000d54a
   14000d4c3:	mov    rcx,r12
   14000d4c6:	call   0x140014dd4
   14000d4cb:	mov    rsi,rax
   14000d4ce:	cmp    rax,r13
   14000d4d1:	jae    0x14000d528
   14000d4d3:	mov    edx,0x1000
   14000d4d8:	cmp    rax,rdx
   14000d4db:	cmovb  rdx,rax
   14000d4df:	add    rdx,rax
   14000d4e2:	cmp    rdx,rax
   14000d4e5:	jb     0x14000d4f8
   14000d4e7:	mov    rcx,r12
   14000d4ea:	call   0x140010ba8
   14000d4ef:	xor    ebx,ebx
   14000d4f1:	test   rax,rax
   14000d4f4:	jne    0x14000d510
   14000d4f6:	jmp    0x14000d4fa
   14000d4f8:	xor    ebx,ebx
   14000d4fa:	lea    rdx,[rsi+0x20]
   14000d4fe:	cmp    rdx,rsi
   14000d501:	jb     0x14000d54c
   14000d503:	mov    rcx,r12
   14000d506:	call   0x140010ba8
   14000d50b:	test   rax,rax
   14000d50e:	je     0x14000d54c
   14000d510:	sar    rdi,0x3
   14000d514:	lea    rbx,[rax+rdi*8]
   14000d518:	mov    rcx,rax
   14000d51b:	call   QWORD PTR [rip+0xcc47]        # 0x14001a168
   14000d521:	mov    QWORD PTR [rip+0x19798],rax        # 0x140026cc0
   14000d528:	mov    rcx,r14
   14000d52b:	call   QWORD PTR [rip+0xcc37]        # 0x14001a168
   14000d531:	mov    QWORD PTR [rbx],rax
   14000d534:	lea    rcx,[rbx+0x8]
   14000d538:	call   QWORD PTR [rip+0xcc2a]        # 0x14001a168
   14000d53e:	mov    QWORD PTR [rip+0x19773],rax        # 0x140026cb8
   14000d545:	mov    rbx,r14
   14000d548:	jmp    0x14000d54c
   14000d54a:	xor    ebx,ebx
   14000d54c:	call   0x1400098cc
   14000d551:	mov    rax,rbx
   14000d554:	mov    rbx,QWORD PTR [rsp+0x40]
   14000d559:	mov    rsi,QWORD PTR [rsp+0x48]
   14000d55e:	mov    rdi,QWORD PTR [rsp+0x50]
   14000d563:	add    rsp,0x20
   14000d567:	pop    r14
   14000d569:	pop    r13
   14000d56b:	pop    r12
   14000d56d:	ret    
   14000d56e:	int3   
   14000d56f:	int3   
   14000d570:	sub    rsp,0x28
   14000d574:	call   0x14000d464
   14000d579:	neg    rax
   14000d57c:	sbb    eax,eax
   14000d57e:	neg    eax
   14000d580:	dec    eax
   14000d582:	add    rsp,0x28
   14000d586:	ret    
   14000d587:	int3   
   14000d588:	mov    QWORD PTR [rsp+0x8],rbx
   14000d58d:	push   rdi
   14000d58e:	sub    rsp,0x20
   14000d592:	lea    rbx,[rip+0x1330f]        # 0x1400208a8
   14000d599:	lea    rdi,[rip+0x13308]        # 0x1400208a8
   14000d5a0:	jmp    0x14000d5b0
   14000d5a2:	mov    rax,QWORD PTR [rbx]
   14000d5a5:	test   rax,rax
   14000d5a8:	je     0x14000d5ac
   14000d5aa:	call   rax
   14000d5ac:	add    rbx,0x8
   14000d5b0:	cmp    rbx,rdi
   14000d5b3:	jb     0x14000d5a2
   14000d5b5:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d5ba:	add    rsp,0x20
   14000d5be:	pop    rdi
   14000d5bf:	ret    
   14000d5c0:	mov    QWORD PTR [rsp+0x8],rbx
   14000d5c5:	push   rdi
   14000d5c6:	sub    rsp,0x20
   14000d5ca:	lea    rbx,[rip+0x132e7]        # 0x1400208b8
   14000d5d1:	lea    rdi,[rip+0x132e0]        # 0x1400208b8
   14000d5d8:	jmp    0x14000d5e8
   14000d5da:	mov    rax,QWORD PTR [rbx]
   14000d5dd:	test   rax,rax
   14000d5e0:	je     0x14000d5e4
   14000d5e2:	call   rax
   14000d5e4:	add    rbx,0x8
   14000d5e8:	cmp    rbx,rdi
   14000d5eb:	jb     0x14000d5da
   14000d5ed:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d5f2:	add    rsp,0x20
   14000d5f6:	pop    rdi
   14000d5f7:	ret    
   14000d5f8:	mov    QWORD PTR [rsp+0x8],rbx
   14000d5fd:	push   rdi
   14000d5fe:	sub    rsp,0x20
   14000d602:	lea    rbx,[rip+0x16247]        # 0x140023850
   14000d609:	mov    edi,0xa
   14000d60e:	mov    rcx,QWORD PTR [rbx]
   14000d611:	call   QWORD PTR [rip+0xcb51]        # 0x14001a168
   14000d617:	mov    QWORD PTR [rbx],rax
   14000d61a:	add    rbx,0x8
   14000d61e:	dec    rdi
   14000d621:	jne    0x14000d60e
   14000d623:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d628:	add    rsp,0x20
   14000d62c:	pop    rdi
   14000d62d:	ret    
   14000d62e:	int3   
   14000d62f:	int3   
   14000d630:	mov    rax,rcx
   14000d633:	mov    ecx,0x5a4d
   14000d638:	cmp    WORD PTR [rax],cx
   14000d63b:	je     0x14000d640
   14000d63d:	xor    eax,eax
   14000d63f:	ret    
   14000d640:	movsxd rcx,DWORD PTR [rax+0x3c]
   14000d644:	add    rcx,rax
   14000d647:	xor    eax,eax
   14000d649:	cmp    DWORD PTR [rcx],0x4550
   14000d64f:	jne    0x14000d65d
   14000d651:	mov    edx,0x20b
   14000d656:	cmp    WORD PTR [rcx+0x18],dx
   14000d65a:	sete   al
   14000d65d:	repz ret 
   14000d65f:	int3   
   14000d660:	movsxd r8,DWORD PTR [rcx+0x3c]
   14000d664:	xor    r9d,r9d
   14000d667:	mov    r10,rdx
   14000d66a:	add    r8,rcx
   14000d66d:	movzx  eax,WORD PTR [r8+0x14]
   14000d672:	movzx  r11d,WORD PTR [r8+0x6]
   14000d677:	lea    rcx,[rax+r8*1+0x18]
   14000d67c:	test   r11d,r11d
   14000d67f:	je     0x14000d69f
   14000d681:	mov    edx,DWORD PTR [rcx+0xc]
   14000d684:	cmp    r10,rdx
   14000d687:	jb     0x14000d693
   14000d689:	mov    eax,DWORD PTR [rcx+0x8]
   14000d68c:	add    eax,edx
   14000d68e:	cmp    r10,rax
   14000d691:	jb     0x14000d6a2
   14000d693:	inc    r9d
   14000d696:	add    rcx,0x28
   14000d69a:	cmp    r9d,r11d
   14000d69d:	jb     0x14000d681
   14000d69f:	xor    eax,eax
   14000d6a1:	ret    
   14000d6a2:	mov    rax,rcx
   14000d6a5:	ret    
   14000d6a6:	int3   
   14000d6a7:	int3   
   14000d6a8:	int3   
   14000d6a9:	int3   
   14000d6aa:	int3   
   14000d6ab:	int3   
   14000d6ac:	int3   
   14000d6ad:	int3   
   14000d6ae:	int3   
   14000d6af:	int3   
   14000d6b0:	sub    rsp,0x28
   14000d6b4:	mov    r8,rcx
   14000d6b7:	lea    r9,[rip+0xffffffffffff2942]        # 0x140000000
   14000d6be:	mov    rcx,r9
   14000d6c1:	call   0x14000d630
   14000d6c6:	test   eax,eax
   14000d6c8:	je     0x14000d6ec
   14000d6ca:	sub    r8,r9
   14000d6cd:	mov    rdx,r8
   14000d6d0:	mov    rcx,r9
   14000d6d3:	call   0x14000d660
   14000d6d8:	test   rax,rax
   14000d6db:	je     0x14000d6ec
   14000d6dd:	mov    eax,DWORD PTR [rax+0x24]
   14000d6e0:	shr    eax,0x1f
   14000d6e3:	not    eax
   14000d6e5:	and    eax,0x1
   14000d6e8:	jmp    0x14000d6ec
   14000d6ea:	xor    eax,eax
   14000d6ec:	add    rsp,0x28
   14000d6f0:	ret    
   14000d6f1:	int3   
   14000d6f2:	int3   
   14000d6f3:	int3   
   14000d6f4:	mov    r11,rsp
   14000d6f7:	mov    QWORD PTR [r11+0x8],rbx
   14000d6fb:	mov    QWORD PTR [r11+0x18],rbp
   14000d6ff:	mov    QWORD PTR [r11+0x20],rsi
   14000d703:	mov    QWORD PTR [r11+0x10],rdx
   14000d707:	push   rdi
   14000d708:	push   r12
   14000d70a:	push   r13
   14000d70c:	push   r14
   14000d70e:	push   r15
   14000d710:	sub    rsp,0x40
   14000d714:	mov    r15,QWORD PTR [r9+0x8]
   14000d718:	mov    r14,QWORD PTR [r9]
   14000d71b:	mov    eax,DWORD PTR [rcx+0x4]
   14000d71e:	mov    rdi,QWORD PTR [r9+0x38]
   14000d722:	sub    r14,r15
   14000d725:	mov    r12,r9
   14000d728:	mov    r13,rdx
   14000d72b:	mov    rbp,rcx
   14000d72e:	test   al,0x66
   14000d730:	jne    0x14000d823
   14000d736:	movsxd rsi,DWORD PTR [r9+0x48]
   14000d73a:	mov    QWORD PTR [r11-0x38],rcx
   14000d73e:	mov    QWORD PTR [r11-0x30],r8
   14000d742:	mov    rax,rsi
   14000d745:	cmp    esi,DWORD PTR [rdi]
   14000d747:	jae    0x14000d8ce
   14000d74d:	add    rax,rax
   14000d750:	lea    rbx,[rdi+rax*8+0xc]
   14000d755:	mov    eax,DWORD PTR [rbx-0x8]
   14000d758:	cmp    r14,rax
   14000d75b:	jb     0x14000d809
   14000d761:	mov    eax,DWORD PTR [rbx-0x4]
   14000d764:	cmp    r14,rax
   14000d767:	jae    0x14000d809
   14000d76d:	cmp    DWORD PTR [rbx+0x4],0x0
   14000d771:	je     0x14000d809
   14000d777:	cmp    DWORD PTR [rbx],0x1
   14000d77a:	je     0x14000d795
   14000d77c:	mov    eax,DWORD PTR [rbx]
   14000d77e:	lea    rcx,[rsp+0x30]
   14000d783:	mov    rdx,r13
   14000d786:	add    rax,r15
   14000d789:	call   rax
   14000d78b:	test   eax,eax
   14000d78d:	js     0x14000d81c
   14000d793:	jle    0x14000d809
   14000d795:	cmp    DWORD PTR [rbp+0x0],0xe06d7363
   14000d79c:	jne    0x14000d7c6
   14000d79e:	cmp    QWORD PTR [rip+0x184da],0x0        # 0x140025c80
   14000d7a6:	je     0x14000d7c6
   14000d7a8:	lea    rcx,[rip+0x184d1]        # 0x140025c80
   14000d7af:	call   0x14000d6b0
   14000d7b4:	test   eax,eax
   14000d7b6:	je     0x14000d7c6
   14000d7b8:	mov    edx,0x1
   14000d7bd:	mov    rcx,rbp
   14000d7c0:	call   QWORD PTR [rip+0x184ba]        # 0x140025c80
   14000d7c6:	mov    ecx,DWORD PTR [rbx+0x4]
   14000d7c9:	mov    r8d,0x1
   14000d7cf:	mov    rdx,r13
   14000d7d2:	add    rcx,r15
   14000d7d5:	call   0x1400114c0
   14000d7da:	mov    rax,QWORD PTR [r12+0x40]
   14000d7df:	mov    edx,DWORD PTR [rbx+0x4]
   14000d7e2:	movsxd r9,DWORD PTR [rbp+0x0]
   14000d7e6:	mov    QWORD PTR [rsp+0x28],rax
   14000d7eb:	mov    rax,QWORD PTR [r12+0x28]
   14000d7f0:	add    rdx,r15
   14000d7f3:	mov    r8,rbp
   14000d7f6:	mov    rcx,r13
   14000d7f9:	mov    QWORD PTR [rsp+0x20],rax
   14000d7fe:	call   QWORD PTR [rip+0xc9dc]        # 0x14001a1e0
   14000d804:	call   0x1400114f0
   14000d809:	inc    esi
   14000d80b:	add    rbx,0x10
   14000d80f:	cmp    esi,DWORD PTR [rdi]
   14000d811:	jae    0x14000d8ce
   14000d817:	jmp    0x14000d755
   14000d81c:	xor    eax,eax
   14000d81e:	jmp    0x14000d8d3
   14000d823:	mov    r8,QWORD PTR [r9+0x20]
   14000d827:	xor    ebp,ebp
   14000d829:	xor    r13d,r13d
   14000d82c:	sub    r8,r15
   14000d82f:	test   al,0x20
   14000d831:	je     0x14000d86e
   14000d833:	xor    edx,edx
   14000d835:	cmp    DWORD PTR [rdi],edx
   14000d837:	jbe    0x14000d86e
   14000d839:	lea    rcx,[rdi+0x8]
   14000d83d:	mov    eax,DWORD PTR [rcx-0x4]
   14000d840:	cmp    r8,rax
   14000d843:	jb     0x14000d84c
   14000d845:	mov    eax,DWORD PTR [rcx]
   14000d847:	cmp    r8,rax
   14000d84a:	jbe    0x14000d858
   14000d84c:	inc    edx
   14000d84e:	add    rcx,0x10
   14000d852:	cmp    edx,DWORD PTR [rdi]
   14000d854:	jae    0x14000d86e
   14000d856:	jmp    0x14000d83d
   14000d858:	mov    eax,edx
   14000d85a:	add    rax,rax
   14000d85d:	mov    ecx,DWORD PTR [rdi+rax*8+0x10]
   14000d861:	test   ecx,ecx
   14000d863:	jne    0x14000d86b
   14000d865:	mov    ebp,DWORD PTR [rdi+rax*8+0xc]
   14000d869:	jmp    0x14000d86e
   14000d86b:	mov    r13d,ecx
   14000d86e:	movsxd rsi,DWORD PTR [r9+0x48]
   14000d872:	mov    rbx,rsi
   14000d875:	cmp    esi,DWORD PTR [rdi]
   14000d877:	jae    0x14000d8ce
   14000d879:	inc    rbx
   14000d87c:	shl    rbx,0x4
   14000d880:	add    rbx,rdi
   14000d883:	mov    eax,DWORD PTR [rbx-0xc]
   14000d886:	cmp    r14,rax
   14000d889:	jb     0x14000d8c4
   14000d88b:	mov    eax,DWORD PTR [rbx-0x8]
   14000d88e:	cmp    r14,rax
   14000d891:	jae    0x14000d8c4
   14000d893:	test   r13d,r13d
   14000d896:	je     0x14000d89d
   14000d898:	cmp    r13d,DWORD PTR [rbx]
   14000d89b:	je     0x14000d8ce
   14000d89d:	test   ebp,ebp
   14000d89f:	je     0x14000d8a6
   14000d8a1:	cmp    ebp,DWORD PTR [rbx-0x4]
   14000d8a4:	je     0x14000d8ce
   14000d8a6:	cmp    DWORD PTR [rbx],0x0
   14000d8a9:	jne    0x14000d8c4
   14000d8ab:	mov    rdx,QWORD PTR [rsp+0x78]
   14000d8b0:	lea    eax,[rsi+0x1]
   14000d8b3:	mov    cl,0x1
   14000d8b5:	mov    DWORD PTR [r12+0x48],eax
   14000d8ba:	mov    r8d,DWORD PTR [rbx-0x4]
   14000d8be:	add    r8,r15
   14000d8c1:	call   r8
   14000d8c4:	inc    esi
   14000d8c6:	add    rbx,0x10
   14000d8ca:	cmp    esi,DWORD PTR [rdi]
   14000d8cc:	jb     0x14000d883
   14000d8ce:	mov    eax,0x1
   14000d8d3:	lea    r11,[rsp+0x40]
   14000d8d8:	mov    rbx,QWORD PTR [r11+0x30]
   14000d8dc:	mov    rbp,QWORD PTR [r11+0x40]
   14000d8e0:	mov    rsi,QWORD PTR [r11+0x48]
   14000d8e4:	mov    rsp,r11
   14000d8e7:	pop    r15
   14000d8e9:	pop    r14
   14000d8eb:	pop    r13
   14000d8ed:	pop    r12
   14000d8ef:	pop    rdi
   14000d8f0:	ret    
   14000d8f1:	int3   
   14000d8f2:	int3   
   14000d8f3:	int3   
   14000d8f4:	lea    r8,[rip+0x11a65]        # 0x14001f360
   14000d8fb:	xor    eax,eax
   14000d8fd:	mov    rdx,r8
   14000d900:	cmp    ecx,DWORD PTR [rdx]
   14000d902:	je     0x14000d912
   14000d904:	inc    eax
   14000d906:	add    rdx,0x10
   14000d90a:	cmp    eax,0x16
   14000d90d:	jb     0x14000d900
   14000d90f:	xor    eax,eax
   14000d911:	ret    
   14000d912:	cdqe   
   14000d914:	add    rax,rax
   14000d917:	mov    rax,QWORD PTR [r8+rax*8+0x8]
   14000d91c:	ret    
   14000d91d:	int3   
   14000d91e:	int3   
   14000d91f:	int3   
   14000d920:	mov    QWORD PTR [rsp+0x10],rbx
   14000d925:	mov    QWORD PTR [rsp+0x18],rbp
   14000d92a:	mov    QWORD PTR [rsp+0x20],rsi
   14000d92f:	push   rdi
   14000d930:	push   r12
   14000d932:	push   r13
   14000d934:	sub    rsp,0x250
   14000d93b:	mov    rax,QWORD PTR [rip+0x1577e]        # 0x1400230c0
   14000d942:	xor    rax,rsp
   14000d945:	mov    QWORD PTR [rsp+0x240],rax
   14000d94d:	mov    edi,ecx
   14000d94f:	call   0x14000d8f4
   14000d954:	xor    esi,esi
   14000d956:	mov    rbx,rax
   14000d959:	test   rax,rax
   14000d95c:	je     0x14000db50
   14000d962:	lea    ecx,[rsi+0x3]
   14000d965:	call   0x1400151e8
   14000d96a:	cmp    eax,0x1
   14000d96d:	je     0x14000dae8
   14000d973:	lea    ecx,[rsi+0x3]
   14000d976:	call   0x1400151e8
   14000d97b:	test   eax,eax
   14000d97d:	jne    0x14000d98c
   14000d97f:	cmp    DWORD PTR [rip+0x15732],0x1        # 0x1400230b8
   14000d986:	je     0x14000dae8
   14000d98c:	cmp    edi,0xfc
   14000d992:	je     0x14000db50
   14000d998:	lea    rbp,[rip+0x172e1]        # 0x140024c80
   14000d99f:	mov    r12d,0x314
   14000d9a5:	lea    r8,[rip+0x11ba4]        # 0x14001f550
   14000d9ac:	mov    rcx,rbp
   14000d9af:	mov    edx,r12d
   14000d9b2:	call   0x14001517c
   14000d9b7:	xor    ecx,ecx
   14000d9b9:	test   eax,eax
   14000d9bb:	jne    0x14000dad5
   14000d9c1:	lea    r13,[rip+0x172ea]        # 0x140024cb2
   14000d9c8:	mov    r8d,0x104
   14000d9ce:	mov    WORD PTR [rip+0x174e5],si        # 0x140024eba
   14000d9d5:	mov    rdx,r13
   14000d9d8:	call   QWORD PTR [rip+0xc81a]        # 0x14001a1f8
   14000d9de:	lea    edi,[r12-0x19]
   14000d9e3:	test   eax,eax
   14000d9e5:	jne    0x14000da11
   14000d9e7:	lea    r8,[rip+0x11b32]        # 0x14001f520
   14000d9ee:	mov    edx,edi
   14000d9f0:	mov    rcx,r13
   14000d9f3:	call   0x14001517c
   14000d9f8:	test   eax,eax
   14000d9fa:	je     0x14000da11
   14000d9fc:	xor    r9d,r9d
   14000d9ff:	xor    r8d,r8d
   14000da02:	xor    edx,edx
   14000da04:	xor    ecx,ecx
   14000da06:	mov    QWORD PTR [rsp+0x20],rsi
   14000da0b:	call   0x14000cf78
   14000da10:	int3   
   14000da11:	mov    rcx,r13
   14000da14:	call   0x140013c34
   14000da19:	inc    rax
   14000da1c:	cmp    rax,0x3c
   14000da20:	jbe    0x14000da69
   14000da22:	mov    rcx,r13
   14000da25:	call   0x140013c34
   14000da2a:	lea    r8,[rip+0x11ae7]        # 0x14001f518
   14000da31:	mov    r9d,0x3
   14000da37:	lea    rcx,[rbp+rax*2-0x44]
   14000da3c:	mov    rax,rcx
   14000da3f:	sub    rax,r13
   14000da42:	sar    rax,1
   14000da45:	sub    rdi,rax
   14000da48:	mov    rdx,rdi
   14000da4b:	call   0x1400150ac
   14000da50:	test   eax,eax
   14000da52:	je     0x14000da69
   14000da54:	xor    r9d,r9d
   14000da57:	xor    r8d,r8d
   14000da5a:	xor    edx,edx
   14000da5c:	xor    ecx,ecx
   14000da5e:	mov    QWORD PTR [rsp+0x20],rsi
   14000da63:	call   0x14000cf78
   14000da68:	int3   
   14000da69:	lea    r8,[rip+0x11a9c]        # 0x14001f50c
   14000da70:	mov    rdx,r12
   14000da73:	mov    rcx,rbp
   14000da76:	call   0x140015024
   14000da7b:	test   eax,eax
   14000da7d:	jne    0x14000dac0
   14000da7f:	mov    r8,rbx
   14000da82:	mov    rdx,r12
   14000da85:	mov    rcx,rbp
   14000da88:	call   0x140015024
   14000da8d:	test   eax,eax
   14000da8f:	jne    0x14000daab
   14000da91:	lea    rdx,[rip+0x11a28]        # 0x14001f4c0
   14000da98:	mov    r8d,0x12010
   14000da9e:	mov    rcx,rbp
   14000daa1:	call   0x140014e1c
   14000daa6:	jmp    0x14000db50
   14000daab:	xor    r9d,r9d
   14000daae:	xor    r8d,r8d
   14000dab1:	xor    edx,edx
   14000dab3:	xor    ecx,ecx
   14000dab5:	mov    QWORD PTR [rsp+0x20],rsi
   14000daba:	call   0x14000cf78
   14000dabf:	int3   
   14000dac0:	xor    r9d,r9d
   14000dac3:	xor    r8d,r8d
   14000dac6:	xor    edx,edx
   14000dac8:	xor    ecx,ecx
   14000daca:	mov    QWORD PTR [rsp+0x20],rsi
   14000dacf:	call   0x14000cf78
   14000dad4:	int3   
   14000dad5:	xor    r9d,r9d
   14000dad8:	xor    r8d,r8d
   14000dadb:	xor    edx,edx
   14000dadd:	mov    QWORD PTR [rsp+0x20],rsi
   14000dae2:	call   0x14000cf78
   14000dae7:	int3   
   14000dae8:	mov    ecx,0xfffffff4
   14000daed:	call   QWORD PTR [rip+0xc6fd]        # 0x14001a1f0
   14000daf3:	mov    rdi,rax
   14000daf6:	test   rax,rax
   14000daf9:	je     0x14000db50
   14000dafb:	cmp    rax,0xffffffffffffffff
   14000daff:	je     0x14000db50
   14000db01:	mov    edx,esi
   14000db03:	lea    r8,[rsp+0x40]
   14000db08:	mov    cl,BYTE PTR [rbx]
   14000db0a:	mov    BYTE PTR [r8],cl
   14000db0d:	cmp    WORD PTR [rbx],si
   14000db10:	je     0x14000db23
   14000db12:	inc    edx
   14000db14:	inc    r8
   14000db17:	add    rbx,0x2
   14000db1b:	cmp    edx,0x1f4
   14000db21:	jb     0x14000db08
   14000db23:	lea    rcx,[rsp+0x40]
   14000db28:	mov    BYTE PTR [rsp+0x233],sil
   14000db30:	call   0x140009fa0
   14000db35:	lea    r9,[rsp+0x30]
   14000db3a:	lea    rdx,[rsp+0x40]
   14000db3f:	mov    rcx,rdi
   14000db42:	mov    r8,rax
   14000db45:	mov    QWORD PTR [rsp+0x20],rsi
   14000db4a:	call   QWORD PTR [rip+0xc698]        # 0x14001a1e8
   14000db50:	mov    rcx,QWORD PTR [rsp+0x240]
   14000db58:	xor    rcx,rsp
   14000db5b:	call   0x14000a820
   14000db60:	lea    r11,[rsp+0x250]
   14000db68:	mov    rbx,QWORD PTR [r11+0x28]
   14000db6c:	mov    rbp,QWORD PTR [r11+0x30]
   14000db70:	mov    rsi,QWORD PTR [r11+0x38]
   14000db74:	mov    rsp,r11
   14000db77:	pop    r13
   14000db79:	pop    r12
   14000db7b:	pop    rdi
   14000db7c:	ret    
   14000db7d:	int3   
   14000db7e:	int3   
   14000db7f:	int3   
   14000db80:	sub    rsp,0x28
   14000db84:	mov    ecx,0x3
   14000db89:	call   0x1400151e8
   14000db8e:	cmp    eax,0x1
   14000db91:	je     0x14000dbaa
   14000db93:	mov    ecx,0x3
   14000db98:	call   0x1400151e8
   14000db9d:	test   eax,eax
   14000db9f:	jne    0x14000dbbe
   14000dba1:	cmp    DWORD PTR [rip+0x15510],0x1        # 0x1400230b8
   14000dba8:	jne    0x14000dbbe
   14000dbaa:	mov    ecx,0xfc
   14000dbaf:	call   0x14000d920
   14000dbb4:	mov    ecx,0xff
   14000dbb9:	call   0x14000d920
   14000dbbe:	add    rsp,0x28
   14000dbc2:	ret    
   14000dbc3:	int3   
   14000dbc4:	mov    QWORD PTR [rsp+0x8],rbx
   14000dbc9:	mov    QWORD PTR [rsp+0x10],rdi
   14000dbce:	push   r12
   14000dbd0:	sub    rsp,0x20
   14000dbd4:	mov    rbx,rcx
   14000dbd7:	call   0x140010a7c
   14000dbdc:	mov    ecx,eax
   14000dbde:	call   0x140015228
   14000dbe3:	test   eax,eax
   14000dbe5:	je     0x14000dc82
   14000dbeb:	call   0x14000ab98
   14000dbf0:	add    rax,0x30
   14000dbf4:	cmp    rbx,rax
   14000dbf7:	jne    0x14000dbfd
   14000dbf9:	xor    eax,eax
   14000dbfb:	jmp    0x14000dc10
   14000dbfd:	call   0x14000ab98
   14000dc02:	add    rax,0x60
   14000dc06:	cmp    rbx,rax
   14000dc09:	jne    0x14000dc82
   14000dc0b:	mov    eax,0x1
   14000dc10:	inc    DWORD PTR [rip+0x16dde]        # 0x1400249f4
   14000dc16:	test   DWORD PTR [rbx+0x18],0x10c
   14000dc1d:	jne    0x14000dc82
   14000dc1f:	lea    r12,[rip+0x17682]        # 0x1400252a8
   14000dc26:	movsxd rdi,eax
   14000dc29:	cmp    QWORD PTR [r12+rdi*8],0x0
   14000dc2e:	jne    0x14000dc5b
   14000dc30:	mov    ecx,0x1000
   14000dc35:	call   0x140010aa4
   14000dc3a:	mov    QWORD PTR [r12+rdi*8],rax
   14000dc3e:	test   rax,rax
   14000dc41:	jne    0x14000dc5b
   14000dc43:	lea    rax,[rbx+0x20]
   14000dc47:	mov    QWORD PTR [rbx+0x10],rax
   14000dc4b:	mov    QWORD PTR [rbx],rax
   14000dc4e:	mov    eax,0x2
   14000dc53:	mov    DWORD PTR [rbx+0x24],eax
   14000dc56:	mov    DWORD PTR [rbx+0x8],eax
   14000dc59:	jmp    0x14000dc74
   14000dc5b:	mov    rcx,QWORD PTR [r12+rdi*8]
   14000dc5f:	mov    DWORD PTR [rbx+0x24],0x1000
   14000dc66:	mov    DWORD PTR [rbx+0x8],0x1000
   14000dc6d:	mov    QWORD PTR [rbx+0x10],rcx
   14000dc71:	mov    QWORD PTR [rbx],rcx
   14000dc74:	or     DWORD PTR [rbx+0x18],0x1102
   14000dc7b:	mov    eax,0x1
   14000dc80:	jmp    0x14000dc84
   14000dc82:	xor    eax,eax
   14000dc84:	mov    rbx,QWORD PTR [rsp+0x30]
   14000dc89:	mov    rdi,QWORD PTR [rsp+0x38]
   14000dc8e:	add    rsp,0x20
   14000dc92:	pop    r12
   14000dc94:	ret    
   14000dc95:	int3   
   14000dc96:	int3   
   14000dc97:	int3   
   14000dc98:	test   ecx,ecx
   14000dc9a:	je     0x14000dcce
   14000dc9c:	push   rbx
   14000dc9d:	sub    rsp,0x20
   14000dca1:	test   DWORD PTR [rdx+0x18],0x1000
   14000dca8:	mov    rbx,rdx
   14000dcab:	je     0x14000dcc9
   14000dcad:	mov    rcx,rdx
   14000dcb0:	call   0x14000be48
   14000dcb5:	and    DWORD PTR [rbx+0x18],0xffffeeff
   14000dcbc:	and    DWORD PTR [rbx+0x24],0x0
   14000dcc0:	and    QWORD PTR [rbx],0x0
   14000dcc4:	and    QWORD PTR [rbx+0x10],0x0
   14000dcc9:	add    rsp,0x20
   14000dccd:	pop    rbx
   14000dcce:	ret    
   14000dccf:	int3   
   14000dcd0:	rex push rbx
   14000dcd2:	sub    rsp,0x20
   14000dcd6:	test   BYTE PTR [rdx+0x18],0x40
   14000dcda:	mov    rbx,r8
   14000dcdd:	je     0x14000dceb
   14000dcdf:	cmp    QWORD PTR [rdx+0x10],0x0
   14000dce4:	jne    0x14000dceb
   14000dce6:	inc    DWORD PTR [r8]
   14000dce9:	jmp    0x14000dd10
   14000dceb:	dec    DWORD PTR [rdx+0x8]
   14000dcee:	js     0x14000dcfd
   14000dcf0:	mov    rax,QWORD PTR [rdx]
   14000dcf3:	mov    BYTE PTR [rax],cl
   14000dcf5:	inc    QWORD PTR [rdx]
   14000dcf8:	movzx  eax,cl
   14000dcfb:	jmp    0x14000dd05
   14000dcfd:	movsx  ecx,cl
   14000dd00:	call   0x1400107a0
   14000dd05:	cmp    eax,0xffffffff
   14000dd08:	jne    0x14000dd0e
   14000dd0a:	or     DWORD PTR [rbx],eax
   14000dd0c:	jmp    0x14000dd10
   14000dd0e:	inc    DWORD PTR [rbx]
   14000dd10:	add    rsp,0x20
   14000dd14:	pop    rbx
   14000dd15:	ret    
   14000dd16:	int3   
   14000dd17:	int3   
   14000dd18:	test   edx,edx
   14000dd1a:	jle    0x14000dd68
   14000dd1c:	mov    QWORD PTR [rsp+0x8],rbx
   14000dd21:	mov    QWORD PTR [rsp+0x10],rbp
   14000dd26:	mov    QWORD PTR [rsp+0x18],rsi
   14000dd2b:	push   rdi
   14000dd2c:	sub    rsp,0x20
   14000dd30:	mov    rdi,r9
   14000dd33:	mov    rsi,r8
   14000dd36:	mov    ebx,edx
   14000dd38:	mov    bpl,cl
   14000dd3b:	mov    r8,rdi
   14000dd3e:	mov    rdx,rsi
   14000dd41:	mov    cl,bpl
   14000dd44:	dec    ebx
   14000dd46:	call   0x14000dcd0
   14000dd4b:	cmp    DWORD PTR [rdi],0xffffffff
   14000dd4e:	je     0x14000dd54
   14000dd50:	test   ebx,ebx
   14000dd52:	jg     0x14000dd3b
   14000dd54:	mov    rbx,QWORD PTR [rsp+0x30]
   14000dd59:	mov    rbp,QWORD PTR [rsp+0x38]
   14000dd5e:	mov    rsi,QWORD PTR [rsp+0x40]
   14000dd63:	add    rsp,0x20
   14000dd67:	pop    rdi
   14000dd68:	ret    
   14000dd69:	int3   
   14000dd6a:	int3   
   14000dd6b:	int3   
   14000dd6c:	mov    QWORD PTR [rsp+0x8],rbx
   14000dd71:	mov    QWORD PTR [rsp+0x10],rbp
   14000dd76:	mov    QWORD PTR [rsp+0x18],rsi
   14000dd7b:	push   rdi
   14000dd7c:	push   r12
   14000dd7e:	push   r13
   14000dd80:	sub    rsp,0x20
   14000dd84:	test   BYTE PTR [r8+0x18],0x40
   14000dd89:	mov    rbx,QWORD PTR [rsp+0x60]
   14000dd8e:	mov    rdi,r9
   14000dd91:	mov    r12d,DWORD PTR [rbx]
   14000dd94:	mov    rbp,r8
   14000dd97:	mov    esi,edx
   14000dd99:	mov    r13,rcx
   14000dd9c:	je     0x14000ddaa
   14000dd9e:	cmp    QWORD PTR [r8+0x10],0x0
   14000dda3:	jne    0x14000ddaa
   14000dda5:	add    DWORD PTR [r9],edx
   14000dda8:	jmp    0x14000dde8
   14000ddaa:	and    DWORD PTR [rbx],0x0
   14000ddad:	test   edx,edx
   14000ddaf:	jle    0x14000dde5
   14000ddb1:	mov    cl,BYTE PTR [r13+0x0]
   14000ddb5:	mov    r8,rdi
   14000ddb8:	mov    rdx,rbp
   14000ddbb:	dec    esi
   14000ddbd:	call   0x14000dcd0
   14000ddc2:	inc    r13
   14000ddc5:	cmp    DWORD PTR [rdi],0xffffffff
   14000ddc8:	jne    0x14000dddc
   14000ddca:	cmp    DWORD PTR [rbx],0x2a
   14000ddcd:	jne    0x14000dde0
   14000ddcf:	mov    r8,rdi
   14000ddd2:	mov    rdx,rbp
   14000ddd5:	mov    cl,0x3f
   14000ddd7:	call   0x14000dcd0
   14000dddc:	test   esi,esi
   14000ddde:	jg     0x14000ddb1
   14000dde0:	cmp    DWORD PTR [rbx],0x0
   14000dde3:	jne    0x14000dde8
   14000dde5:	mov    DWORD PTR [rbx],r12d
   14000dde8:	mov    rbx,QWORD PTR [rsp+0x40]
   14000dded:	mov    rbp,QWORD PTR [rsp+0x48]
   14000ddf2:	mov    rsi,QWORD PTR [rsp+0x50]
   14000ddf7:	add    rsp,0x20
   14000ddfb:	pop    r13
   14000ddfd:	pop    r12
   14000ddff:	pop    rdi
   14000de00:	ret    
   14000de01:	int3   
   14000de02:	int3   
   14000de03:	int3   
   14000de04:	mov    QWORD PTR [rsp+0x18],rbx
   14000de09:	push   rbp
   14000de0a:	push   rsi
   14000de0b:	push   rdi
   14000de0c:	push   r12
   14000de0e:	push   r13
   14000de10:	push   r14
   14000de12:	push   r15
   14000de14:	lea    rbp,[rsp-0x1d0]
   14000de1c:	sub    rsp,0x2d0
   14000de23:	mov    rax,QWORD PTR [rip+0x15296]        # 0x1400230c0
   14000de2a:	xor    rax,rsp
   14000de2d:	mov    QWORD PTR [rbp+0x1c8],rax
   14000de34:	xor    eax,eax
   14000de36:	mov    rbx,rcx
   14000de39:	mov    QWORD PTR [rsp+0x70],rcx
   14000de3e:	mov    QWORD PTR [rsp+0x68],rdx
   14000de43:	lea    rcx,[rbp-0x80]
   14000de47:	mov    rdx,r8
   14000de4a:	mov    r14,r9
   14000de4d:	mov    DWORD PTR [rsp+0x64],eax
   14000de51:	mov    r13d,eax
   14000de54:	mov    DWORD PTR [rsp+0x58],eax
   14000de58:	mov    edi,eax
   14000de5a:	mov    DWORD PTR [rsp+0x44],eax
   14000de5e:	mov    DWORD PTR [rsp+0x4c],eax
   14000de62:	mov    DWORD PTR [rsp+0x5c],eax
   14000de66:	mov    DWORD PTR [rsp+0x54],eax
   14000de6a:	call   0x14000c6f4
   14000de6f:	call   0x14000bdc0
   14000de74:	xor    r10d,r10d
   14000de77:	mov    QWORD PTR [rbp-0x60],rax
   14000de7b:	test   rbx,rbx
   14000de7e:	jne    0x14000deac
   14000de80:	call   0x14000bdc0
   14000de85:	mov    DWORD PTR [rax],0x16
   14000de8b:	call   0x14000d01c
   14000de90:	xor    r11d,r11d
   14000de93:	cmp    BYTE PTR [rbp-0x68],r11b
   14000de97:	je     0x14000dea4
   14000de99:	mov    rax,QWORD PTR [rbp-0x70]
   14000de9d:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000dea4:	or     eax,0xffffffff
   14000dea7:	jmp    0x14000e666
   14000deac:	or     r15d,0xffffffff
   14000deb0:	test   BYTE PTR [rbx+0x18],0x40
   14000deb4:	lea    r9,[rip+0xffffffffffff2145]        # 0x140000000
   14000debb:	jne    0x14000df66
   14000dec1:	mov    rcx,rbx
   14000dec4:	call   0x140010a7c
   14000dec9:	lea    rdx,[rip+0x159e0]        # 0x1400238b0
   14000ded0:	cmp    eax,r15d
   14000ded3:	je     0x14000defd
   14000ded5:	cmp    eax,0xfffffffe
   14000ded8:	je     0x14000defd
   14000deda:	movsxd r8,eax
   14000dedd:	lea    r9,[rip+0xffffffffffff211c]        # 0x140000000
   14000dee4:	mov    rcx,r8
   14000dee7:	and    r8d,0x1f
   14000deeb:	sar    rcx,0x5
   14000deef:	imul   r8,r8,0x58
   14000def3:	add    r8,QWORD PTR [r9+rcx*8+0x25a80]
   14000defb:	jmp    0x14000df07
   14000defd:	mov    r8,rdx
   14000df00:	lea    r9,[rip+0xffffffffffff20f9]        # 0x140000000
   14000df07:	test   BYTE PTR [r8+0x38],0x7f
   14000df0c:	jne    0x14000df37
   14000df0e:	cmp    eax,r15d
   14000df11:	je     0x14000df31
   14000df13:	cmp    eax,0xfffffffe
   14000df16:	je     0x14000df31
   14000df18:	movsxd rdx,eax
   14000df1b:	mov    rax,rdx
   14000df1e:	and    edx,0x1f
   14000df21:	sar    rax,0x5
   14000df25:	imul   rdx,rdx,0x58
   14000df29:	add    rdx,QWORD PTR [r9+rax*8+0x25a80]
   14000df31:	test   BYTE PTR [rdx+0x38],0x80
   14000df35:	je     0x14000df63
   14000df37:	call   0x14000bdc0
   14000df3c:	mov    DWORD PTR [rax],0x16
   14000df42:	call   0x14000d01c
   14000df47:	xor    r11d,r11d
   14000df4a:	cmp    BYTE PTR [rbp-0x68],r11b
   14000df4e:	je     0x14000df5b
   14000df50:	mov    rax,QWORD PTR [rbp-0x70]
   14000df54:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000df5b:	mov    eax,r15d
   14000df5e:	jmp    0x14000e666
   14000df63:	xor    r10d,r10d
   14000df66:	mov    r8,QWORD PTR [rsp+0x68]
   14000df6b:	test   r8,r8
   14000df6e:	je     0x14000df37
   14000df70:	mov    r12b,BYTE PTR [r8]
   14000df73:	mov    esi,r10d
   14000df76:	mov    DWORD PTR [rsp+0x40],r10d
   14000df7b:	mov    DWORD PTR [rsp+0x48],r10d
   14000df80:	mov    edx,r10d
   14000df83:	mov    QWORD PTR [rbp-0x50],r10
   14000df87:	test   r12b,r12b
   14000df8a:	je     0x14000e653
   14000df90:	mov    rbx,QWORD PTR [rbp-0x48]
   14000df94:	mov    r11d,0x200
   14000df9a:	inc    r8
   14000df9d:	mov    QWORD PTR [rsp+0x68],r8
   14000dfa2:	test   esi,esi
   14000dfa4:	js     0x14000e653
   14000dfaa:	lea    eax,[r12-0x20]
   14000dfaf:	cmp    al,0x58
   14000dfb1:	ja     0x14000dfc5
   14000dfb3:	movsx  rax,r12b
   14000dfb7:	movsx  ecx,BYTE PTR [rax+r9*1+0x1f580]
   14000dfc0:	and    ecx,0xf
   14000dfc3:	jmp    0x14000dfc8
   14000dfc5:	mov    ecx,r10d
   14000dfc8:	movsxd rax,edx
   14000dfcb:	movsxd rcx,ecx
   14000dfce:	lea    rdx,[rax+rcx*8]
   14000dfd2:	movsx  edx,BYTE PTR [rdx+r9*1+0x1f5a0]
   14000dfdb:	sar    edx,0x4
   14000dfde:	mov    DWORD PTR [rsp+0x60],edx
   14000dfe2:	mov    ecx,edx
   14000dfe4:	test   edx,edx
   14000dfe6:	je     0x14000e73d
   14000dfec:	dec    ecx
   14000dfee:	je     0x14000e86e
   14000dff4:	dec    ecx
   14000dff6:	je     0x14000e81e
   14000dffc:	dec    ecx
   14000dffe:	je     0x14000e7e5
   14000e004:	dec    ecx
   14000e006:	je     0x14000e7d8
   14000e00c:	dec    ecx
   14000e00e:	je     0x14000e79e
   14000e014:	dec    ecx
   14000e016:	je     0x14000e690
   14000e01c:	dec    ecx
   14000e01e:	jne    0x14000e647
   14000e024:	movsx  eax,r12b
   14000e028:	cmp    eax,0x64
   14000e02b:	jg     0x14000e1a4
   14000e031:	je     0x14000e2a5
   14000e037:	cmp    eax,0x41
   14000e03a:	je     0x14000e178
   14000e040:	cmp    eax,0x43
   14000e043:	je     0x14000e11e
   14000e049:	cmp    eax,0x45
   14000e04c:	je     0x14000e178
   14000e052:	cmp    eax,0x47
   14000e055:	je     0x14000e178
   14000e05b:	cmp    eax,0x53
   14000e05e:	je     0x14000e0d4
   14000e060:	cmp    eax,0x58
   14000e063:	je     0x14000e23f
   14000e069:	cmp    eax,0x5a
   14000e06c:	je     0x14000e085
   14000e06e:	cmp    eax,0x61
   14000e071:	je     0x14000e184
   14000e077:	cmp    eax,0x63
   14000e07a:	je     0x14000e12c
   14000e080:	jmp    0x14000e4b0
   14000e085:	mov    rax,QWORD PTR [r14]
   14000e088:	add    r14,0x8
   14000e08c:	test   rax,rax
   14000e08f:	je     0x14000e0c0
   14000e091:	mov    rbx,QWORD PTR [rax+0x8]
   14000e095:	test   rbx,rbx
   14000e098:	je     0x14000e0c0
   14000e09a:	movsx  eax,WORD PTR [rax]
   14000e09d:	bt     r13d,0xb
   14000e0a2:	jae    0x14000e0b6
   14000e0a4:	cdq    
   14000e0a5:	mov    DWORD PTR [rsp+0x54],0x1
   14000e0ad:	sub    eax,edx
   14000e0af:	sar    eax,1
   14000e0b1:	jmp    0x14000e4ac
   14000e0b6:	mov    DWORD PTR [rsp+0x54],r10d
   14000e0bb:	jmp    0x14000e4ac
   14000e0c0:	mov    rbx,QWORD PTR [rip+0x157d9]        # 0x1400238a0
   14000e0c7:	mov    rcx,rbx
   14000e0ca:	call   0x140009fa0
   14000e0cf:	jmp    0x14000e4a9
   14000e0d4:	test   r13d,0x830
   14000e0db:	jne    0x14000e0e2
   14000e0dd:	bts    r13d,0xb
   14000e0e2:	mov    rbx,QWORD PTR [r14]
   14000e0e5:	cmp    edi,r15d
   14000e0e8:	mov    eax,edi
   14000e0ea:	mov    ecx,0x7fffffff
   14000e0ef:	cmove  eax,ecx
   14000e0f2:	add    r14,0x8
   14000e0f6:	test   r13d,0x810
   14000e0fd:	je     0x14000e20c
   14000e103:	test   rbx,rbx
   14000e106:	mov    DWORD PTR [rsp+0x54],0x1
   14000e10e:	cmove  rbx,QWORD PTR [rip+0x15792]        # 0x1400238a8
   14000e116:	mov    rcx,rbx
   14000e119:	jmp    0x14000e200
   14000e11e:	test   r13d,0x830
   14000e125:	jne    0x14000e12c
   14000e127:	bts    r13d,0xb
   14000e12c:	add    r14,0x8
   14000e130:	test   r13d,0x810
   14000e137:	je     0x14000e160
   14000e139:	movzx  r9d,WORD PTR [r14-0x8]
   14000e13e:	lea    rdx,[rbp-0x40]
   14000e142:	lea    rcx,[rsp+0x48]
   14000e147:	mov    r8,r11
   14000e14a:	call   0x1400154dc
   14000e14f:	xor    r10d,r10d
   14000e152:	test   eax,eax
   14000e154:	je     0x14000e16f
   14000e156:	mov    DWORD PTR [rsp+0x5c],0x1
   14000e15e:	jmp    0x14000e16f
   14000e160:	mov    al,BYTE PTR [r14-0x8]
   14000e164:	mov    DWORD PTR [rsp+0x48],0x1
   14000e16c:	mov    BYTE PTR [rbp-0x40],al
   14000e16f:	lea    rbx,[rbp-0x40]
   14000e173:	jmp    0x14000e4b0
   14000e178:	mov    DWORD PTR [rsp+0x78],0x1
   14000e180:	add    r12b,0x20
   14000e184:	or     r13d,0x40
   14000e188:	lea    rbx,[rbp-0x40]
   14000e18c:	mov    esi,r11d
   14000e18f:	test   edi,edi
   14000e191:	jns    0x14000e3b5
   14000e197:	mov    DWORD PTR [rsp+0x44],0x6
   14000e19f:	jmp    0x14000e400
   14000e1a4:	cmp    eax,0x65
   14000e1a7:	jl     0x14000e4b0
   14000e1ad:	cmp    eax,0x67
   14000e1b0:	jle    0x14000e184
   14000e1b2:	cmp    eax,0x69
   14000e1b5:	je     0x14000e2a5
   14000e1bb:	cmp    eax,0x6e
   14000e1be:	je     0x14000e274
   14000e1c4:	cmp    eax,0x6f
   14000e1c7:	je     0x14000e264
   14000e1cd:	cmp    eax,0x70
   14000e1d0:	je     0x14000e235
   14000e1d2:	cmp    eax,0x73
   14000e1d5:	je     0x14000e0e2
   14000e1db:	cmp    eax,0x75
   14000e1de:	je     0x14000e2a9
   14000e1e4:	cmp    eax,0x78
   14000e1e7:	jne    0x14000e4b0
   14000e1ed:	mov    eax,0x27
   14000e1f2:	jmp    0x14000e244
   14000e1f4:	dec    eax
   14000e1f6:	cmp    WORD PTR [rcx],r10w
   14000e1fa:	je     0x14000e204
   14000e1fc:	add    rcx,0x2
   14000e200:	test   eax,eax
   14000e202:	jne    0x14000e1f4
   14000e204:	sub    rcx,rbx
   14000e207:	sar    rcx,1
   14000e20a:	jmp    0x14000e22c
   14000e20c:	test   rbx,rbx
   14000e20f:	cmove  rbx,QWORD PTR [rip+0x15689]        # 0x1400238a0
   14000e217:	mov    rcx,rbx
   14000e21a:	jmp    0x14000e226
   14000e21c:	dec    eax
   14000e21e:	cmp    BYTE PTR [rcx],r10b
   14000e221:	je     0x14000e22a
   14000e223:	inc    rcx
   14000e226:	test   eax,eax
   14000e228:	jne    0x14000e21c
   14000e22a:	sub    ecx,ebx
   14000e22c:	mov    DWORD PTR [rsp+0x48],ecx
   14000e230:	jmp    0x14000e4b0
   14000e235:	mov    edi,0x10
   14000e23a:	bts    r13d,0xf
   14000e23f:	mov    eax,0x7
   14000e244:	mov    DWORD PTR [rsp+0x64],eax
   14000e248:	mov    r9d,0x10
   14000e24e:	test   r13b,r13b
   14000e251:	jns    0x14000e2af
   14000e253:	add    al,0x51
   14000e255:	mov    BYTE PTR [rsp+0x50],0x30
   14000e25a:	lea    edx,[r9-0xe]
   14000e25e:	mov    BYTE PTR [rsp+0x51],al
   14000e262:	jmp    0x14000e2b3
   14000e264:	mov    r9d,0x8
   14000e26a:	test   r13b,r13b
   14000e26d:	jns    0x14000e2af
   14000e26f:	or     r13d,r11d
   14000e272:	jmp    0x14000e2af
   14000e274:	mov    rdi,QWORD PTR [r14]
   14000e277:	add    r14,0x8
   14000e27b:	call   0x140009cd8
   14000e280:	xor    r10d,r10d
   14000e283:	test   eax,eax
   14000e285:	je     0x14000df37
   14000e28b:	test   r13b,0x20
   14000e28f:	je     0x14000e296
   14000e291:	mov    WORD PTR [rdi],si
   14000e294:	jmp    0x14000e298
   14000e296:	mov    DWORD PTR [rdi],esi
   14000e298:	mov    DWORD PTR [rsp+0x5c],0x1
   14000e2a0:	jmp    0x14000e615
   14000e2a5:	or     r13d,0x40
   14000e2a9:	mov    r9d,0xa
   14000e2af:	mov    edx,DWORD PTR [rsp+0x4c]
   14000e2b3:	mov    eax,0x8000
   14000e2b8:	test   eax,r13d
   14000e2bb:	jne    0x14000e2c4
   14000e2bd:	bt     r13d,0xc
   14000e2c2:	jae    0x14000e2cd
   14000e2c4:	mov    r8,QWORD PTR [r14]
   14000e2c7:	add    r14,0x8
   14000e2cb:	jmp    0x14000e2fb
   14000e2cd:	add    r14,0x8
   14000e2d1:	test   r13b,0x20
   14000e2d5:	je     0x14000e2eb
   14000e2d7:	test   r13b,0x40
   14000e2db:	je     0x14000e2e4
   14000e2dd:	movsx  r8,WORD PTR [r14-0x8]
   14000e2e2:	jmp    0x14000e2fb
   14000e2e4:	movzx  r8d,WORD PTR [r14-0x8]
   14000e2e9:	jmp    0x14000e2fb
   14000e2eb:	test   r13b,0x40
   14000e2ef:	je     0x14000e2f7
   14000e2f1:	movsxd r8,DWORD PTR [r14-0x8]
   14000e2f5:	jmp    0x14000e2fb
   14000e2f7:	mov    r8d,DWORD PTR [r14-0x8]
   14000e2fb:	test   r13b,0x40
   14000e2ff:	je     0x14000e30e
   14000e301:	test   r8,r8
   14000e304:	jns    0x14000e30e
   14000e306:	neg    r8
   14000e309:	bts    r13d,0x8
   14000e30e:	test   eax,r13d
   14000e311:	jne    0x14000e31d
   14000e313:	bt     r13d,0xc
   14000e318:	jb     0x14000e31d
   14000e31a:	mov    r8d,r8d
   14000e31d:	test   edi,edi
   14000e31f:	jns    0x14000e328
   14000e321:	mov    edi,0x1
   14000e326:	jmp    0x14000e333
   14000e328:	and    r13d,0xfffffff7
   14000e32c:	cmp    edi,r11d
   14000e32f:	cmovg  edi,r11d
   14000e333:	mov    esi,DWORD PTR [rsp+0x64]
   14000e337:	mov    rax,r8
   14000e33a:	lea    rbx,[rbp+0x1bf]
   14000e341:	neg    rax
   14000e344:	sbb    ecx,ecx
   14000e346:	and    ecx,edx
   14000e348:	mov    DWORD PTR [rsp+0x4c],ecx
   14000e34c:	mov    ecx,edi
   14000e34e:	dec    edi
   14000e350:	test   ecx,ecx
   14000e352:	jg     0x14000e359
   14000e354:	test   r8,r8
   14000e357:	je     0x14000e378
   14000e359:	xor    edx,edx
   14000e35b:	mov    rax,r8
   14000e35e:	movsxd rcx,r9d
   14000e361:	div    rcx
   14000e364:	mov    r8,rax
   14000e367:	lea    eax,[rdx+0x30]
   14000e36a:	cmp    eax,0x39
   14000e36d:	jle    0x14000e371
   14000e36f:	add    eax,esi
   14000e371:	mov    BYTE PTR [rbx],al
   14000e373:	dec    rbx
   14000e376:	jmp    0x14000e34c
   14000e378:	mov    esi,DWORD PTR [rsp+0x40]
   14000e37c:	lea    rax,[rbp+0x1bf]
   14000e383:	mov    DWORD PTR [rsp+0x44],edi
   14000e387:	sub    eax,ebx
   14000e389:	inc    rbx
   14000e38c:	mov    DWORD PTR [rsp+0x48],eax
   14000e390:	test   r11d,r13d
   14000e393:	je     0x14000e4b0
   14000e399:	test   eax,eax
   14000e39b:	je     0x14000e3a6
   14000e39d:	cmp    BYTE PTR [rbx],0x30
   14000e3a0:	je     0x14000e4b0
   14000e3a6:	dec    rbx
   14000e3a9:	inc    DWORD PTR [rsp+0x48]
   14000e3ad:	mov    BYTE PTR [rbx],0x30
   14000e3b0:	jmp    0x14000e4b0
   14000e3b5:	jne    0x14000e3c7
   14000e3b7:	cmp    r12b,0x67
   14000e3bb:	jne    0x14000e400
   14000e3bd:	mov    DWORD PTR [rsp+0x44],0x1
   14000e3c5:	jmp    0x14000e400
   14000e3c7:	cmp    edi,r11d
   14000e3ca:	cmovg  edi,r11d
   14000e3ce:	mov    DWORD PTR [rsp+0x44],edi
   14000e3d2:	cmp    edi,0xa3
   14000e3d8:	jle    0x14000e400
   14000e3da:	add    edi,0x15d
   14000e3e0:	movsxd rcx,edi
   14000e3e3:	call   0x140010aa4
   14000e3e8:	mov    QWORD PTR [rbp-0x50],rax
   14000e3ec:	test   rax,rax
   14000e3ef:	je     0x14000e3f8
   14000e3f1:	mov    rbx,rax
   14000e3f4:	mov    esi,edi
   14000e3f6:	jmp    0x14000e400
   14000e3f8:	mov    DWORD PTR [rsp+0x44],0xa3
   14000e400:	mov    rax,QWORD PTR [r14]
   14000e403:	mov    rcx,QWORD PTR [rip+0x15476]        # 0x140023880
   14000e40a:	add    r14,0x8
   14000e40e:	movsx  edi,r12b
   14000e412:	movsxd rsi,esi
   14000e415:	mov    QWORD PTR [rbp-0x48],rax
   14000e419:	call   QWORD PTR [rip+0xbcc1]        # 0x14001a0e0
   14000e41f:	lea    rcx,[rbp-0x80]
   14000e423:	mov    r9d,edi
   14000e426:	mov    QWORD PTR [rsp+0x30],rcx
   14000e42b:	mov    ecx,DWORD PTR [rsp+0x78]
   14000e42f:	mov    r8,rsi
   14000e432:	mov    DWORD PTR [rsp+0x28],ecx
   14000e436:	mov    ecx,DWORD PTR [rsp+0x44]
   14000e43a:	mov    rdx,rbx
   14000e43d:	mov    DWORD PTR [rsp+0x20],ecx
   14000e441:	lea    rcx,[rbp-0x48]
   14000e445:	call   rax
   14000e447:	mov    edi,r13d
   14000e44a:	and    edi,0x80
   14000e450:	je     0x14000e470
   14000e452:	xor    eax,eax
   14000e454:	cmp    DWORD PTR [rsp+0x44],eax
   14000e458:	jne    0x14000e470
   14000e45a:	mov    rcx,QWORD PTR [rip+0x15437]        # 0x140023898
   14000e461:	call   QWORD PTR [rip+0xbc79]        # 0x14001a0e0
   14000e467:	lea    rdx,[rbp-0x80]
   14000e46b:	mov    rcx,rbx
   14000e46e:	call   rax
   14000e470:	cmp    r12b,0x67
   14000e474:	jne    0x14000e490
   14000e476:	test   edi,edi
   14000e478:	jne    0x14000e490
   14000e47a:	mov    rcx,QWORD PTR [rip+0x1540f]        # 0x140023890
   14000e481:	call   QWORD PTR [rip+0xbc59]        # 0x14001a0e0
   14000e487:	lea    rdx,[rbp-0x80]
   14000e48b:	mov    rcx,rbx
   14000e48e:	call   rax
   14000e490:	cmp    BYTE PTR [rbx],0x2d
   14000e493:	jne    0x14000e49d
   14000e495:	bts    r13d,0x8
   14000e49a:	inc    rbx
   14000e49d:	mov    rcx,rbx
   14000e4a0:	call   0x140009fa0
   14000e4a5:	mov    esi,DWORD PTR [rsp+0x40]
   14000e4a9:	xor    r10d,r10d
   14000e4ac:	mov    DWORD PTR [rsp+0x48],eax
   14000e4b0:	cmp    DWORD PTR [rsp+0x5c],r10d
   14000e4b5:	jne    0x14000e615
   14000e4bb:	test   r13b,0x40
   14000e4bf:	je     0x14000e4f2
   14000e4c1:	bt     r13d,0x8
   14000e4c6:	jae    0x14000e4cf
   14000e4c8:	mov    BYTE PTR [rsp+0x50],0x2d
   14000e4cd:	jmp    0x14000e4da
   14000e4cf:	test   r13b,0x1
   14000e4d3:	je     0x14000e4e5
   14000e4d5:	mov    BYTE PTR [rsp+0x50],0x2b
   14000e4da:	mov    edi,0x1
   14000e4df:	mov    DWORD PTR [rsp+0x4c],edi
   14000e4e3:	jmp    0x14000e4f6
   14000e4e5:	test   r13b,0x2
   14000e4e9:	je     0x14000e4f2
   14000e4eb:	mov    BYTE PTR [rsp+0x50],0x20
   14000e4f0:	jmp    0x14000e4da
   14000e4f2:	mov    edi,DWORD PTR [rsp+0x4c]
   14000e4f6:	mov    r12d,DWORD PTR [rsp+0x58]
   14000e4fb:	mov    rsi,QWORD PTR [rsp+0x70]
   14000e500:	sub    r12d,DWORD PTR [rsp+0x48]
   14000e505:	sub    r12d,edi
   14000e508:	test   r13b,0xc
   14000e50c:	jne    0x14000e520
   14000e50e:	lea    r9,[rsp+0x40]
   14000e513:	mov    r8,rsi
   14000e516:	mov    edx,r12d
   14000e519:	mov    cl,0x20
   14000e51b:	call   0x14000dd18
   14000e520:	mov    rax,QWORD PTR [rbp-0x60]
   14000e524:	lea    r9,[rsp+0x40]
   14000e529:	lea    rcx,[rsp+0x50]
   14000e52e:	mov    r8,rsi
   14000e531:	mov    edx,edi
   14000e533:	mov    QWORD PTR [rsp+0x20],rax
   14000e538:	call   0x14000dd6c
   14000e53d:	test   r13b,0x8
   14000e541:	je     0x14000e55b
   14000e543:	test   r13b,0x4
   14000e547:	jne    0x14000e55b
   14000e549:	lea    r9,[rsp+0x40]
   14000e54e:	mov    r8,rsi
   14000e551:	mov    edx,r12d
   14000e554:	mov    cl,0x30
   14000e556:	call   0x14000dd18
   14000e55b:	mov    edi,DWORD PTR [rsp+0x48]
   14000e55f:	xor    eax,eax
   14000e561:	cmp    DWORD PTR [rsp+0x54],eax
   14000e565:	je     0x14000e5ce
   14000e567:	test   edi,edi
   14000e569:	jle    0x14000e5ce
   14000e56b:	mov    rsi,rbx
   14000e56e:	movzx  r9d,WORD PTR [rsi]
   14000e572:	lea    rdx,[rbp+0x1c0]
   14000e579:	lea    rcx,[rbp-0x58]
   14000e57d:	mov    r8d,0x6
   14000e583:	dec    edi
   14000e585:	add    rsi,0x2
   14000e589:	call   0x1400154dc
   14000e58e:	xor    r10d,r10d
   14000e591:	test   eax,eax
   14000e593:	jne    0x14000e5c4
   14000e595:	mov    edx,DWORD PTR [rbp-0x58]
   14000e598:	test   edx,edx
   14000e59a:	je     0x14000e5c4
   14000e59c:	mov    rax,QWORD PTR [rbp-0x60]
   14000e5a0:	mov    r8,QWORD PTR [rsp+0x70]
   14000e5a5:	lea    r9,[rsp+0x40]
   14000e5aa:	lea    rcx,[rbp+0x1c0]
   14000e5b1:	mov    QWORD PTR [rsp+0x20],rax
   14000e5b6:	call   0x14000dd6c
   14000e5bb:	xor    r10d,r10d
   14000e5be:	test   edi,edi
   14000e5c0:	jne    0x14000e56e
   14000e5c2:	jmp    0x14000e5ec
   14000e5c4:	mov    esi,r15d
   14000e5c7:	mov    DWORD PTR [rsp+0x40],r15d
   14000e5cc:	jmp    0x14000e5f0
   14000e5ce:	mov    rax,QWORD PTR [rbp-0x60]
   14000e5d2:	lea    r9,[rsp+0x40]
   14000e5d7:	mov    r8,rsi
   14000e5da:	mov    edx,edi
   14000e5dc:	mov    rcx,rbx
   14000e5df:	mov    QWORD PTR [rsp+0x20],rax
   14000e5e4:	call   0x14000dd6c
   14000e5e9:	xor    r10d,r10d
   14000e5ec:	mov    esi,DWORD PTR [rsp+0x40]
   14000e5f0:	test   esi,esi
   14000e5f2:	js     0x14000e615
   14000e5f4:	test   r13b,0x4
   14000e5f8:	je     0x14000e615
   14000e5fa:	mov    r8,QWORD PTR [rsp+0x70]
   14000e5ff:	lea    r9,[rsp+0x40]
   14000e604:	mov    edx,r12d
   14000e607:	mov    cl,0x20
   14000e609:	call   0x14000dd18
   14000e60e:	mov    esi,DWORD PTR [rsp+0x40]
   14000e612:	xor    r10d,r10d
   14000e615:	mov    rax,QWORD PTR [rbp-0x50]
   14000e619:	test   rax,rax
   14000e61c:	je     0x14000e62d
   14000e61e:	mov    rcx,rax
   14000e621:	call   0x14000b460
   14000e626:	xor    r10d,r10d
   14000e629:	mov    QWORD PTR [rbp-0x50],r10
   14000e62d:	mov    edi,DWORD PTR [rsp+0x44]
   14000e631:	mov    r8,QWORD PTR [rsp+0x68]
   14000e636:	mov    edx,DWORD PTR [rsp+0x60]
   14000e63a:	mov    r11d,0x200
   14000e640:	lea    r9,[rip+0xffffffffffff19b9]        # 0x140000000
   14000e647:	mov    r12b,BYTE PTR [r8]
   14000e64a:	test   r12b,r12b
   14000e64d:	jne    0x14000df9a
   14000e653:	cmp    BYTE PTR [rbp-0x68],r10b
   14000e657:	je     0x14000e664
   14000e659:	mov    rcx,QWORD PTR [rbp-0x70]
   14000e65d:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000e664:	mov    eax,esi
   14000e666:	mov    rcx,QWORD PTR [rbp+0x1c8]
   14000e66d:	xor    rcx,rsp
   14000e670:	call   0x14000a820
   14000e675:	mov    rbx,QWORD PTR [rsp+0x320]
   14000e67d:	add    rsp,0x2d0
   14000e684:	pop    r15
   14000e686:	pop    r14
   14000e688:	pop    r13
   14000e68a:	pop    r12
   14000e68c:	pop    rdi
   14000e68d:	pop    rsi
   14000e68e:	pop    rbp
   14000e68f:	ret    
   14000e690:	cmp    r12b,0x49
   14000e694:	je     0x14000e6ce
   14000e696:	cmp    r12b,0x68
   14000e69a:	je     0x14000e6c5
   14000e69c:	cmp    r12b,0x6c
   14000e6a0:	je     0x14000e6af
   14000e6a2:	cmp    r12b,0x77
   14000e6a6:	jne    0x14000e647
   14000e6a8:	bts    r13d,0xb
   14000e6ad:	jmp    0x14000e647
   14000e6af:	cmp    BYTE PTR [r8],0x6c
   14000e6b3:	jne    0x14000e6bf
   14000e6b5:	inc    r8
   14000e6b8:	bts    r13d,0xc
   14000e6bd:	jmp    0x14000e647
   14000e6bf:	or     r13d,0x10
   14000e6c3:	jmp    0x14000e647
   14000e6c5:	or     r13d,0x20
   14000e6c9:	jmp    0x14000e647
   14000e6ce:	mov    al,BYTE PTR [r8]
   14000e6d1:	bts    r13d,0xf
   14000e6d6:	cmp    al,0x36
   14000e6d8:	jne    0x14000e6ef
   14000e6da:	cmp    BYTE PTR [r8+0x1],0x34
   14000e6df:	jne    0x14000e6ef
   14000e6e1:	add    r8,0x2
   14000e6e5:	bts    r13d,0xf
   14000e6ea:	jmp    0x14000e647
   14000e6ef:	cmp    al,0x33
   14000e6f1:	jne    0x14000e708
   14000e6f3:	cmp    BYTE PTR [r8+0x1],0x32
   14000e6f8:	jne    0x14000e708
   14000e6fa:	add    r8,0x2
   14000e6fe:	btr    r13d,0xf
   14000e703:	jmp    0x14000e647
   14000e708:	cmp    al,0x64
   14000e70a:	je     0x14000e647
   14000e710:	cmp    al,0x69
   14000e712:	je     0x14000e647
   14000e718:	cmp    al,0x6f
   14000e71a:	je     0x14000e647
   14000e720:	cmp    al,0x75
   14000e722:	je     0x14000e647
   14000e728:	cmp    al,0x78
   14000e72a:	je     0x14000e647
   14000e730:	cmp    al,0x58
   14000e732:	je     0x14000e647
   14000e738:	mov    DWORD PTR [rsp+0x60],r10d
   14000e73d:	lea    rdx,[rbp-0x80]
   14000e741:	movzx  ecx,r12b
   14000e745:	mov    DWORD PTR [rsp+0x54],r10d
   14000e74a:	call   0x140015288
   14000e74f:	xor    esi,esi
   14000e751:	test   eax,eax
   14000e753:	je     0x14000e780
   14000e755:	mov    rdx,QWORD PTR [rsp+0x70]
   14000e75a:	lea    r8,[rsp+0x40]
   14000e75f:	mov    cl,r12b
   14000e762:	call   0x14000dcd0
   14000e767:	mov    rdx,QWORD PTR [rsp+0x68]
   14000e76c:	mov    r12b,BYTE PTR [rdx]
   14000e76f:	inc    rdx
   14000e772:	mov    QWORD PTR [rsp+0x68],rdx
   14000e777:	test   r12b,r12b
   14000e77a:	je     0x14000e897
   14000e780:	mov    rdx,QWORD PTR [rsp+0x70]
   14000e785:	lea    r8,[rsp+0x40]
   14000e78a:	mov    cl,r12b
   14000e78d:	call   0x14000dcd0
   14000e792:	mov    esi,DWORD PTR [rsp+0x40]
   14000e796:	xor    r10d,r10d
   14000e799:	jmp    0x14000e631
   14000e79e:	cmp    r12b,0x2a
   14000e7a2:	jne    0x14000e7c4
   14000e7a4:	mov    edi,DWORD PTR [r14]
   14000e7a7:	add    r14,0x8
   14000e7ab:	mov    DWORD PTR [rsp+0x44],edi
   14000e7af:	test   edi,edi
   14000e7b1:	jns    0x14000e647
   14000e7b7:	mov    edi,r15d
   14000e7ba:	mov    DWORD PTR [rsp+0x44],r15d
   14000e7bf:	jmp    0x14000e647
   14000e7c4:	lea    ecx,[rdi+rdi*4]
   14000e7c7:	movsx  eax,r12b
   14000e7cb:	lea    edi,[rax+rcx*2-0x30]
   14000e7cf:	mov    DWORD PTR [rsp+0x44],edi
   14000e7d3:	jmp    0x14000e647
   14000e7d8:	mov    edi,r10d
   14000e7db:	mov    DWORD PTR [rsp+0x44],r10d
   14000e7e0:	jmp    0x14000e647
   14000e7e5:	cmp    r12b,0x2a
   14000e7e9:	jne    0x14000e806
   14000e7eb:	mov    eax,DWORD PTR [r14]
   14000e7ee:	add    r14,0x8
   14000e7f2:	mov    DWORD PTR [rsp+0x58],eax
   14000e7f6:	test   eax,eax
   14000e7f8:	jns    0x14000e647
   14000e7fe:	or     r13d,0x4
   14000e802:	neg    eax
   14000e804:	jmp    0x14000e815
   14000e806:	mov    eax,DWORD PTR [rsp+0x58]
   14000e80a:	lea    ecx,[rax+rax*4]
   14000e80d:	movsx  eax,r12b
   14000e811:	lea    eax,[rax+rcx*2-0x30]
   14000e815:	mov    DWORD PTR [rsp+0x58],eax
   14000e819:	jmp    0x14000e647
   14000e81e:	cmp    r12b,0x20
   14000e822:	je     0x14000e865
   14000e824:	cmp    r12b,0x23
   14000e828:	je     0x14000e85b
   14000e82a:	cmp    r12b,0x2b
   14000e82e:	je     0x14000e852
   14000e830:	cmp    r12b,0x2d
   14000e834:	je     0x14000e849
   14000e836:	cmp    r12b,0x30
   14000e83a:	jne    0x14000e647
   14000e840:	or     r13d,0x8
   14000e844:	jmp    0x14000e647
   14000e849:	or     r13d,0x4
   14000e84d:	jmp    0x14000e647
   14000e852:	or     r13d,0x1
   14000e856:	jmp    0x14000e647
   14000e85b:	bts    r13d,0x7
   14000e860:	jmp    0x14000e647
   14000e865:	or     r13d,0x2
   14000e869:	jmp    0x14000e647
   14000e86e:	mov    DWORD PTR [rsp+0x78],r10d
   14000e873:	mov    DWORD PTR [rsp+0x5c],r10d
   14000e878:	mov    DWORD PTR [rsp+0x58],r10d
   14000e87d:	mov    DWORD PTR [rsp+0x4c],r10d
   14000e882:	mov    r13d,r10d
   14000e885:	mov    edi,r15d
   14000e888:	mov    DWORD PTR [rsp+0x44],r15d
   14000e88d:	mov    DWORD PTR [rsp+0x54],r10d
   14000e892:	jmp    0x14000e647
   14000e897:	call   0x14000bdc0
   14000e89c:	mov    DWORD PTR [rax],0x16
   14000e8a2:	call   0x14000d01c
   14000e8a7:	cmp    BYTE PTR [rbp-0x68],sil
   14000e8ab:	jmp    0x14000df4e
   14000e8b0:	mov    rax,rsp
   14000e8b3:	mov    QWORD PTR [rax+0x8],rbx
   14000e8b7:	mov    QWORD PTR [rax+0x10],rsi
   14000e8bb:	mov    QWORD PTR [rax+0x18],rdi
   14000e8bf:	mov    QWORD PTR [rax+0x20],r12
   14000e8c3:	push   rbp
   14000e8c4:	mov    rbp,rsp
   14000e8c7:	sub    rsp,0x60
   14000e8cb:	mov    rsi,rcx
   14000e8ce:	mov    rdi,rdx
   14000e8d1:	lea    rcx,[rbp-0x20]
   14000e8d5:	mov    rdx,r9
   14000e8d8:	mov    r12,r9
   14000e8db:	mov    rbx,r8
   14000e8de:	call   0x14000c6f4
   14000e8e3:	test   rbx,rbx
   14000e8e6:	jne    0x14000e8ff
   14000e8e8:	cmp    BYTE PTR [rbp-0x8],bl
   14000e8eb:	je     0x14000e8f8
   14000e8ed:	mov    rax,QWORD PTR [rbp-0x10]
   14000e8f1:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000e8f8:	xor    eax,eax
   14000e8fa:	jmp    0x14000e998
   14000e8ff:	test   rsi,rsi
   14000e902:	jne    0x14000e92c
   14000e904:	call   0x14000bdc0
   14000e909:	mov    DWORD PTR [rax],0x16
   14000e90f:	call   0x14000d01c
   14000e914:	cmp    BYTE PTR [rbp-0x8],0x0
   14000e918:	je     0x14000e925
   14000e91a:	mov    rax,QWORD PTR [rbp-0x10]
   14000e91e:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000e925:	mov    eax,0x7fffffff
   14000e92a:	jmp    0x14000e998
   14000e92c:	test   rdi,rdi
   14000e92f:	je     0x14000e904
   14000e931:	cmp    rbx,0x7fffffff
   14000e938:	ja     0x14000e904
   14000e93a:	mov    rcx,QWORD PTR [rbp-0x18]
   14000e93e:	cmp    DWORD PTR [rcx+0x8],0x0
   14000e942:	jne    0x14000e957
   14000e944:	mov    r9,r12
   14000e947:	mov    r8,rbx
   14000e94a:	mov    rdx,rdi
   14000e94d:	mov    rcx,rsi
   14000e950:	call   0x1400158c0
   14000e955:	jmp    0x14000e987
   14000e957:	mov    eax,DWORD PTR [rcx+0x4]
   14000e95a:	mov    edx,DWORD PTR [rcx+0xc]
   14000e95d:	lea    rcx,[rbp-0x20]
   14000e961:	mov    DWORD PTR [rsp+0x38],eax
   14000e965:	mov    DWORD PTR [rsp+0x30],ebx
   14000e969:	mov    r9,rsi
   14000e96c:	mov    r8d,0x1001
   14000e972:	mov    QWORD PTR [rsp+0x28],rdi
   14000e977:	mov    DWORD PTR [rsp+0x20],ebx
   14000e97b:	call   0x140015834
   14000e980:	test   eax,eax
   14000e982:	je     0x14000e914
   14000e984:	add    eax,0xfffffffe
   14000e987:	cmp    BYTE PTR [rbp-0x8],0x0
   14000e98b:	je     0x14000e998
   14000e98d:	mov    rcx,QWORD PTR [rbp-0x10]
   14000e991:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000e998:	lea    r11,[rsp+0x60]
   14000e99d:	mov    rbx,QWORD PTR [r11+0x10]
   14000e9a1:	mov    rsi,QWORD PTR [r11+0x18]
   14000e9a5:	mov    rdi,QWORD PTR [r11+0x20]
   14000e9a9:	mov    r12,QWORD PTR [r11+0x28]
   14000e9ad:	mov    rsp,r11
   14000e9b0:	pop    rbp
   14000e9b1:	ret    
   14000e9b2:	int3   
   14000e9b3:	int3   
   14000e9b4:	xor    r9d,r9d
   14000e9b7:	jmp    0x14000e8b0
   14000e9bc:	mov    QWORD PTR [rsp+0x10],rbx
   14000e9c1:	mov    QWORD PTR [rsp+0x18],rbp
   14000e9c6:	push   rdi
   14000e9c7:	sub    rsp,0x40
   14000e9cb:	and    QWORD PTR [rsp+0x50],0x0
   14000e9d1:	mov    rbx,QWORD PTR [rip+0x15fd0]        # 0x1400249a8
   14000e9d8:	mov    rax,QWORD PTR [rbx]
   14000e9db:	test   rax,rax
   14000e9de:	je     0x14000ea8e
   14000e9e4:	or     ebp,0xffffffff
   14000e9e7:	and    QWORD PTR [rsp+0x38],0x0
   14000e9ed:	and    QWORD PTR [rsp+0x30],0x0
   14000e9f3:	and    DWORD PTR [rsp+0x28],0x0
   14000e9f8:	and    QWORD PTR [rsp+0x20],0x0
   14000e9fe:	mov    r9d,ebp
   14000ea01:	mov    r8,rax
   14000ea04:	xor    edx,edx
   14000ea06:	xor    ecx,ecx
   14000ea08:	call   QWORD PTR [rip+0xb7f2]        # 0x14001a200
   14000ea0e:	movsxd rdi,eax
   14000ea11:	test   eax,eax
   14000ea13:	je     0x14000eaaa
   14000ea19:	mov    rcx,rdi
   14000ea1c:	mov    edx,0x1
   14000ea21:	call   0x140010b24
   14000ea26:	mov    QWORD PTR [rsp+0x50],rax
   14000ea2b:	test   rax,rax
   14000ea2e:	je     0x14000eaaa
   14000ea30:	and    QWORD PTR [rsp+0x38],0x0
   14000ea36:	and    QWORD PTR [rsp+0x30],0x0
   14000ea3c:	mov    r8,QWORD PTR [rbx]
   14000ea3f:	mov    r9d,ebp
   14000ea42:	xor    edx,edx
   14000ea44:	xor    ecx,ecx
   14000ea46:	mov    DWORD PTR [rsp+0x28],edi
   14000ea4a:	mov    QWORD PTR [rsp+0x20],rax
   14000ea4f:	call   QWORD PTR [rip+0xb7ab]        # 0x14001a200
   14000ea55:	test   eax,eax
   14000ea57:	je     0x14000eaa0
   14000ea59:	lea    rcx,[rsp+0x50]
   14000ea5e:	xor    edx,edx
   14000ea60:	call   0x140013c50
   14000ea65:	test   eax,eax
   14000ea67:	jns    0x14000ea7e
   14000ea69:	mov    rcx,QWORD PTR [rsp+0x50]
   14000ea6e:	test   rcx,rcx
   14000ea71:	je     0x14000ea7e
   14000ea73:	call   0x14000b460
   14000ea78:	and    QWORD PTR [rsp+0x50],0x0
   14000ea7e:	add    rbx,0x8
   14000ea82:	mov    rax,QWORD PTR [rbx]
   14000ea85:	test   rax,rax
   14000ea88:	jne    0x14000e9e7
   14000ea8e:	xor    eax,eax
   14000ea90:	mov    rbx,QWORD PTR [rsp+0x58]
   14000ea95:	mov    rbp,QWORD PTR [rsp+0x60]
   14000ea9a:	add    rsp,0x40
   14000ea9e:	pop    rdi
   14000ea9f:	ret    
   14000eaa0:	mov    rcx,QWORD PTR [rsp+0x50]
   14000eaa5:	call   0x14000b460
   14000eaaa:	mov    eax,ebp
   14000eaac:	jmp    0x14000ea90
   14000eaae:	int3   
   14000eaaf:	int3   
   14000eab0:	rex push rbx
   14000eab2:	sub    rsp,0x20
   14000eab6:	test   rcx,rcx
   14000eab9:	je     0x14000eac8
   14000eabb:	test   rdx,rdx
   14000eabe:	je     0x14000eac8
   14000eac0:	test   r8,r8
   14000eac3:	jne    0x14000eae1
   14000eac5:	mov    BYTE PTR [rcx],r8b
   14000eac8:	call   0x14000bdc0
   14000eacd:	mov    ebx,0x16
   14000ead2:	mov    DWORD PTR [rax],ebx
   14000ead4:	call   0x14000d01c
   14000ead9:	mov    eax,ebx
   14000eadb:	add    rsp,0x20
   14000eadf:	pop    rbx
   14000eae0:	ret    
   14000eae1:	mov    r9,rcx
   14000eae4:	sub    r9,r8
   14000eae7:	mov    al,BYTE PTR [r8]
   14000eaea:	mov    BYTE PTR [r9+r8*1],al
   14000eaee:	inc    r8
   14000eaf1:	test   al,al
   14000eaf3:	je     0x14000eafa
   14000eaf5:	dec    rdx
   14000eaf8:	jne    0x14000eae7
   14000eafa:	test   rdx,rdx
   14000eafd:	jne    0x14000eb0d
   14000eaff:	mov    BYTE PTR [rcx],dl
   14000eb01:	call   0x14000bdc0
   14000eb06:	mov    ebx,0x22
   14000eb0b:	jmp    0x14000ead2
   14000eb0d:	xor    eax,eax
   14000eb0f:	jmp    0x14000eadb
   14000eb11:	int3   
   14000eb12:	int3   
   14000eb13:	int3   
   14000eb14:	rex push rbx
   14000eb16:	sub    rsp,0x20
   14000eb1a:	and    DWORD PTR [rsp+0x40],0x0
   14000eb1f:	lea    r8,[rsp+0x40]
   14000eb24:	call   0x1400159c4
   14000eb29:	mov    rbx,rax
   14000eb2c:	test   rax,rax
   14000eb2f:	jne    0x14000eb4c
   14000eb31:	cmp    DWORD PTR [rsp+0x40],eax
   14000eb35:	je     0x14000eb4c
   14000eb37:	call   0x14000bdc0
   14000eb3c:	test   rax,rax
   14000eb3f:	je     0x14000eb4c
   14000eb41:	call   0x14000bdc0
   14000eb46:	mov    ecx,DWORD PTR [rsp+0x40]
   14000eb4a:	mov    DWORD PTR [rax],ecx
   14000eb4c:	mov    rax,rbx
   14000eb4f:	add    rsp,0x20
   14000eb53:	pop    rbx
   14000eb54:	ret    
   14000eb55:	int3   
   14000eb56:	int3   
   14000eb57:	int3   
   14000eb58:	xor    eax,eax
   14000eb5a:	test   rdx,rdx
   14000eb5d:	je     0x14000eb6f
   14000eb5f:	cmp    BYTE PTR [rcx],0x0
   14000eb62:	je     0x14000eb6f
   14000eb64:	inc    rax
   14000eb67:	inc    rcx
   14000eb6a:	cmp    rax,rdx
   14000eb6d:	jb     0x14000eb5f
   14000eb6f:	repz ret 
   14000eb71:	int3   
   14000eb72:	int3   
   14000eb73:	int3   
   14000eb74:	sub    rsp,0x28
   14000eb78:	mov    rax,QWORD PTR [rcx]
   14000eb7b:	cmp    DWORD PTR [rax],0xe06d7363
   14000eb81:	jne    0x14000ebae
   14000eb83:	cmp    DWORD PTR [rax+0x18],0x4
   14000eb87:	jne    0x14000ebae
   14000eb89:	mov    eax,DWORD PTR [rax+0x20]
   14000eb8c:	cmp    eax,0x19930520
   14000eb91:	je     0x14000eba8
   14000eb93:	cmp    eax,0x19930521
   14000eb98:	je     0x14000eba8
   14000eb9a:	cmp    eax,0x19930522
   14000eb9f:	je     0x14000eba8
   14000eba1:	cmp    eax,0x1994000
   14000eba6:	jne    0x14000ebae
   14000eba8:	call   0x14000cb6c
   14000ebad:	int3   
   14000ebae:	xor    eax,eax
   14000ebb0:	add    rsp,0x28
   14000ebb4:	ret    
   14000ebb5:	int3   
   14000ebb6:	int3   
   14000ebb7:	int3   
   14000ebb8:	sub    rsp,0x28
   14000ebbc:	lea    rcx,[rip+0xffffffffffffffb1]        # 0x14000eb74
   14000ebc3:	call   QWORD PTR [rip+0xb5b7]        # 0x14001a180
   14000ebc9:	xor    eax,eax
   14000ebcb:	add    rsp,0x28
   14000ebcf:	ret    
   14000ebd0:	mov    QWORD PTR [rsp+0x8],rbx
   14000ebd5:	mov    QWORD PTR [rsp+0x10],rbp
   14000ebda:	mov    QWORD PTR [rsp+0x18],rsi
   14000ebdf:	push   rdi
   14000ebe0:	sub    rsp,0x20
   14000ebe4:	mov    rsi,rdx
   14000ebe7:	mov    edi,ecx
   14000ebe9:	call   0x14000d180
   14000ebee:	xor    r9d,r9d
   14000ebf1:	mov    rbx,rax
   14000ebf4:	test   rax,rax
   14000ebf7:	je     0x14000ed89
   14000ebfd:	mov    rdx,QWORD PTR [rax+0xa0]
   14000ec04:	mov    rcx,rdx
   14000ec07:	cmp    DWORD PTR [rcx],edi
   14000ec09:	je     0x14000ec1b
   14000ec0b:	lea    rax,[rdx+0xc0]
   14000ec12:	add    rcx,0x10
   14000ec16:	cmp    rcx,rax
   14000ec19:	jb     0x14000ec07
   14000ec1b:	lea    rax,[rdx+0xc0]
   14000ec22:	cmp    rcx,rax
   14000ec25:	jae    0x14000ec2b
   14000ec27:	cmp    DWORD PTR [rcx],edi
   14000ec29:	je     0x14000ec2e
   14000ec2b:	mov    rcx,r9
   14000ec2e:	test   rcx,rcx
   14000ec31:	je     0x14000ed89
   14000ec37:	mov    r8,QWORD PTR [rcx+0x8]
   14000ec3b:	test   r8,r8
   14000ec3e:	je     0x14000ed89
   14000ec44:	cmp    r8,0x5
   14000ec48:	jne    0x14000ec57
   14000ec4a:	mov    QWORD PTR [rcx+0x8],r9
   14000ec4e:	lea    eax,[r8-0x4]
   14000ec52:	jmp    0x14000ed8b
   14000ec57:	cmp    r8,0x1
   14000ec5b:	jne    0x14000ec65
   14000ec5d:	or     eax,0xffffffff
   14000ec60:	jmp    0x14000ed8b
   14000ec65:	mov    rbp,QWORD PTR [rbx+0xa8]
   14000ec6c:	mov    QWORD PTR [rbx+0xa8],rsi
   14000ec73:	cmp    DWORD PTR [rcx+0x4],0x8
   14000ec77:	jne    0x14000ed73
   14000ec7d:	mov    edx,0x30
   14000ec82:	mov    rax,QWORD PTR [rbx+0xa0]
   14000ec89:	add    rdx,0x10
   14000ec8d:	mov    QWORD PTR [rdx+rax*1-0x8],r9
   14000ec92:	cmp    rdx,0xc0
   14000ec99:	jl     0x14000ec82
   14000ec9b:	cmp    DWORD PTR [rcx],0xc000008e
   14000eca1:	mov    edi,DWORD PTR [rbx+0xb0]
   14000eca7:	jne    0x14000ecb8
   14000eca9:	mov    DWORD PTR [rbx+0xb0],0x83
   14000ecb3:	jmp    0x14000ed5d
   14000ecb8:	cmp    DWORD PTR [rcx],0xc0000090
   14000ecbe:	jne    0x14000eccf
   14000ecc0:	mov    DWORD PTR [rbx+0xb0],0x81
   14000ecca:	jmp    0x14000ed5d
   14000eccf:	cmp    DWORD PTR [rcx],0xc0000091
   14000ecd5:	jne    0x14000ece3
   14000ecd7:	mov    DWORD PTR [rbx+0xb0],0x84
   14000ece1:	jmp    0x14000ed5d
   14000ece3:	cmp    DWORD PTR [rcx],0xc0000093
   14000ece9:	jne    0x14000ecf7
   14000eceb:	mov    DWORD PTR [rbx+0xb0],0x85
   14000ecf5:	jmp    0x14000ed5d
   14000ecf7:	cmp    DWORD PTR [rcx],0xc000008d
   14000ecfd:	jne    0x14000ed0b
   14000ecff:	mov    DWORD PTR [rbx+0xb0],0x82
   14000ed09:	jmp    0x14000ed5d
   14000ed0b:	cmp    DWORD PTR [rcx],0xc000008f
   14000ed11:	jne    0x14000ed1f
   14000ed13:	mov    DWORD PTR [rbx+0xb0],0x86
   14000ed1d:	jmp    0x14000ed5d
   14000ed1f:	cmp    DWORD PTR [rcx],0xc0000092
   14000ed25:	jne    0x14000ed33
   14000ed27:	mov    DWORD PTR [rbx+0xb0],0x8a
   14000ed31:	jmp    0x14000ed5d
   14000ed33:	cmp    DWORD PTR [rcx],0xc00002b5
   14000ed39:	jne    0x14000ed47
   14000ed3b:	mov    DWORD PTR [rbx+0xb0],0x8d
   14000ed45:	jmp    0x14000ed5d
   14000ed47:	cmp    DWORD PTR [rcx],0xc00002b4
   14000ed4d:	mov    eax,edi
   14000ed4f:	mov    edx,0x8e
   14000ed54:	cmove  eax,edx
   14000ed57:	mov    DWORD PTR [rbx+0xb0],eax
   14000ed5d:	mov    edx,DWORD PTR [rbx+0xb0]
   14000ed63:	mov    ecx,0x8
   14000ed68:	call   r8
   14000ed6b:	mov    DWORD PTR [rbx+0xb0],edi
   14000ed71:	jmp    0x14000ed7d
   14000ed73:	mov    QWORD PTR [rcx+0x8],r9
   14000ed77:	mov    ecx,DWORD PTR [rcx+0x4]
   14000ed7a:	call   r8
   14000ed7d:	mov    QWORD PTR [rbx+0xa8],rbp
   14000ed84:	jmp    0x14000ec5d
   14000ed89:	xor    eax,eax
   14000ed8b:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ed90:	mov    rbp,QWORD PTR [rsp+0x38]
   14000ed95:	mov    rsi,QWORD PTR [rsp+0x40]
   14000ed9a:	add    rsp,0x20
   14000ed9e:	pop    rdi
   14000ed9f:	ret    
   14000eda0:	mov    QWORD PTR [rsp+0x8],rbx
   14000eda5:	mov    QWORD PTR [rsp+0x10],rbp
   14000edaa:	mov    QWORD PTR [rsp+0x18],rsi
   14000edaf:	push   rdi
   14000edb0:	sub    rsp,0x30
   14000edb4:	cmp    DWORD PTR [rip+0x17f0d],0x0        # 0x140026cc8
   14000edbb:	jne    0x14000edc2
   14000edbd:	call   0x140014900
   14000edc2:	mov    rbx,QWORD PTR [rip+0x15c17]        # 0x1400249e0
   14000edc9:	xor    edi,edi
   14000edcb:	test   rbx,rbx
   14000edce:	jne    0x14000edeb
   14000edd0:	or     eax,0xffffffff
   14000edd3:	jmp    0x14000ee8c
   14000edd8:	cmp    al,0x3d
   14000edda:	je     0x14000edde
   14000eddc:	inc    edi
   14000edde:	mov    rcx,rbx
   14000ede1:	call   0x140009fa0
   14000ede6:	lea    rbx,[rbx+rax*1+0x1]
   14000edeb:	mov    al,BYTE PTR [rbx]
   14000eded:	test   al,al
   14000edef:	jne    0x14000edd8
   14000edf1:	lea    eax,[rdi+0x1]
   14000edf4:	mov    edx,0x8
   14000edf9:	movsxd rcx,eax
   14000edfc:	call   0x140010b24
   14000ee01:	mov    rdi,rax
   14000ee04:	mov    QWORD PTR [rip+0x15b8d],rax        # 0x140024998
   14000ee0b:	test   rax,rax
   14000ee0e:	je     0x14000edd0
   14000ee10:	mov    rbx,QWORD PTR [rip+0x15bc9]        # 0x1400249e0
   14000ee17:	cmp    BYTE PTR [rbx],0x0
   14000ee1a:	je     0x14000ee6c
   14000ee1c:	mov    rcx,rbx
   14000ee1f:	call   0x140009fa0
   14000ee24:	cmp    BYTE PTR [rbx],0x3d
   14000ee27:	lea    esi,[rax+0x1]
   14000ee2a:	je     0x14000ee5a
   14000ee2c:	movsxd rbp,esi
   14000ee2f:	mov    edx,0x1
   14000ee34:	mov    rcx,rbp
   14000ee37:	call   0x140010b24
   14000ee3c:	mov    QWORD PTR [rdi],rax
   14000ee3f:	test   rax,rax
   14000ee42:	je     0x14000eeb7
   14000ee44:	mov    r8,rbx
   14000ee47:	mov    rdx,rbp
   14000ee4a:	mov    rcx,rax
   14000ee4d:	call   0x14000eab0
   14000ee52:	test   eax,eax
   14000ee54:	jne    0x14000eea1
   14000ee56:	add    rdi,0x8
   14000ee5a:	movsxd rax,esi
   14000ee5d:	add    rbx,rax
   14000ee60:	cmp    BYTE PTR [rbx],0x0
   14000ee63:	jne    0x14000ee1c
   14000ee65:	mov    rbx,QWORD PTR [rip+0x15b74]        # 0x1400249e0
   14000ee6c:	mov    rcx,rbx
   14000ee6f:	call   0x14000b460
   14000ee74:	and    QWORD PTR [rip+0x15b64],0x0        # 0x1400249e0
   14000ee7c:	and    QWORD PTR [rdi],0x0
   14000ee80:	mov    DWORD PTR [rip+0x17e26],0x1        # 0x140026cb0
   14000ee8a:	xor    eax,eax
   14000ee8c:	mov    rbx,QWORD PTR [rsp+0x40]
   14000ee91:	mov    rbp,QWORD PTR [rsp+0x48]
   14000ee96:	mov    rsi,QWORD PTR [rsp+0x50]
   14000ee9b:	add    rsp,0x30
   14000ee9f:	pop    rdi
   14000eea0:	ret    
   14000eea1:	and    QWORD PTR [rsp+0x20],0x0
   14000eea7:	xor    r9d,r9d
   14000eeaa:	xor    r8d,r8d
   14000eead:	xor    edx,edx
   14000eeaf:	xor    ecx,ecx
   14000eeb1:	call   0x14000cf78
   14000eeb6:	int3   
   14000eeb7:	mov    rcx,QWORD PTR [rip+0x15ada]        # 0x140024998
   14000eebe:	call   0x14000b460
   14000eec3:	and    QWORD PTR [rip+0x15acd],0x0        # 0x140024998
   14000eecb:	jmp    0x14000edd0
   14000eed0:	mov    rax,rsp
   14000eed3:	mov    QWORD PTR [rax+0x8],rbx
   14000eed7:	mov    QWORD PTR [rax+0x10],rbp
   14000eedb:	mov    QWORD PTR [rax+0x18],rsi
   14000eedf:	mov    QWORD PTR [rax+0x20],rdi
   14000eee3:	push   r12
   14000eee5:	push   r13
   14000eee7:	push   r14
   14000eee9:	sub    rsp,0x20
   14000eeed:	mov    r13,QWORD PTR [rsp+0x60]
   14000eef2:	mov    r14,r9
   14000eef5:	mov    rdi,r8
   14000eef8:	and    DWORD PTR [r13+0x0],0x0
   14000eefd:	mov    r12,rdx
   14000ef00:	mov    rbx,rcx
   14000ef03:	mov    DWORD PTR [r9],0x1
   14000ef0a:	test   rdx,rdx
   14000ef0d:	je     0x14000ef16
   14000ef0f:	mov    QWORD PTR [rdx],r8
   14000ef12:	add    r12,0x8
   14000ef16:	xor    ebp,ebp
   14000ef18:	cmp    BYTE PTR [rbx],0x22
   14000ef1b:	jne    0x14000ef2e
   14000ef1d:	xor    eax,eax
   14000ef1f:	test   ebp,ebp
   14000ef21:	mov    sil,0x22
   14000ef24:	sete   al
   14000ef27:	inc    rbx
   14000ef2a:	mov    ebp,eax
   14000ef2c:	jmp    0x14000ef67
   14000ef2e:	inc    DWORD PTR [r13+0x0]
   14000ef32:	test   rdi,rdi
   14000ef35:	je     0x14000ef3e
   14000ef37:	mov    al,BYTE PTR [rbx]
   14000ef39:	mov    BYTE PTR [rdi],al
   14000ef3b:	inc    rdi
   14000ef3e:	movzx  esi,BYTE PTR [rbx]
   14000ef41:	inc    rbx
   14000ef44:	mov    ecx,esi
   14000ef46:	call   0x140015adc
   14000ef4b:	test   eax,eax
   14000ef4d:	je     0x14000ef62
   14000ef4f:	inc    DWORD PTR [r13+0x0]
   14000ef53:	test   rdi,rdi
   14000ef56:	je     0x14000ef5f
   14000ef58:	mov    al,BYTE PTR [rbx]
   14000ef5a:	mov    BYTE PTR [rdi],al
   14000ef5c:	inc    rdi
   14000ef5f:	inc    rbx
   14000ef62:	test   sil,sil
   14000ef65:	je     0x14000ef82
   14000ef67:	test   ebp,ebp
   14000ef69:	jne    0x14000ef18
   14000ef6b:	cmp    sil,0x20
   14000ef6f:	je     0x14000ef77
   14000ef71:	cmp    sil,0x9
   14000ef75:	jne    0x14000ef18
   14000ef77:	test   rdi,rdi
   14000ef7a:	je     0x14000ef85
   14000ef7c:	mov    BYTE PTR [rdi-0x1],0x0
   14000ef80:	jmp    0x14000ef85
   14000ef82:	dec    rbx
   14000ef85:	xor    esi,esi
   14000ef87:	cmp    BYTE PTR [rbx],0x0
   14000ef8a:	je     0x14000f073
   14000ef90:	cmp    BYTE PTR [rbx],0x20
   14000ef93:	je     0x14000ef9a
   14000ef95:	cmp    BYTE PTR [rbx],0x9
   14000ef98:	jne    0x14000ef9f
   14000ef9a:	inc    rbx
   14000ef9d:	jmp    0x14000ef90
   14000ef9f:	cmp    BYTE PTR [rbx],0x0
   14000efa2:	je     0x14000f073
   14000efa8:	test   r12,r12
   14000efab:	je     0x14000efb5
   14000efad:	mov    QWORD PTR [r12],rdi
   14000efb1:	add    r12,0x8
   14000efb5:	inc    DWORD PTR [r14]
   14000efb8:	mov    edx,0x1
   14000efbd:	xor    ecx,ecx
   14000efbf:	jmp    0x14000efc6
   14000efc1:	inc    rbx
   14000efc4:	inc    ecx
   14000efc6:	cmp    BYTE PTR [rbx],0x5c
   14000efc9:	je     0x14000efc1
   14000efcb:	cmp    BYTE PTR [rbx],0x22
   14000efce:	jne    0x14000f006
   14000efd0:	test   dl,cl
   14000efd2:	jne    0x14000eff1
   14000efd4:	test   esi,esi
   14000efd6:	je     0x14000efe6
   14000efd8:	lea    rax,[rbx+0x1]
   14000efdc:	cmp    BYTE PTR [rax],0x22
   14000efdf:	jne    0x14000efe6
   14000efe1:	mov    rbx,rax
   14000efe4:	jmp    0x14000eff1
   14000efe6:	xor    eax,eax
   14000efe8:	xor    edx,edx
   14000efea:	test   esi,esi
   14000efec:	sete   al
   14000efef:	mov    esi,eax
   14000eff1:	shr    ecx,1
   14000eff3:	jmp    0x14000f006
   14000eff5:	dec    ecx
   14000eff7:	test   rdi,rdi
   14000effa:	je     0x14000f002
   14000effc:	mov    BYTE PTR [rdi],0x5c
   14000efff:	inc    rdi
   14000f002:	inc    DWORD PTR [r13+0x0]
   14000f006:	test   ecx,ecx
   14000f008:	jne    0x14000eff5
   14000f00a:	mov    al,BYTE PTR [rbx]
   14000f00c:	test   al,al
   14000f00e:	je     0x14000f05f
   14000f010:	test   esi,esi
   14000f012:	jne    0x14000f01c
   14000f014:	cmp    al,0x20
   14000f016:	je     0x14000f05f
   14000f018:	cmp    al,0x9
   14000f01a:	je     0x14000f05f
   14000f01c:	test   edx,edx
   14000f01e:	je     0x14000f057
   14000f020:	movsx  ecx,al
   14000f023:	call   0x140015adc
   14000f028:	test   rdi,rdi
   14000f02b:	je     0x14000f048
   14000f02d:	test   eax,eax
   14000f02f:	je     0x14000f03f
   14000f031:	mov    al,BYTE PTR [rbx]
   14000f033:	inc    rbx
   14000f036:	mov    BYTE PTR [rdi],al
   14000f038:	inc    rdi
   14000f03b:	inc    DWORD PTR [r13+0x0]
   14000f03f:	mov    al,BYTE PTR [rbx]
   14000f041:	mov    BYTE PTR [rdi],al
   14000f043:	inc    rdi
   14000f046:	jmp    0x14000f053
   14000f048:	test   eax,eax
   14000f04a:	je     0x14000f053
   14000f04c:	inc    rbx
   14000f04f:	inc    DWORD PTR [r13+0x0]
   14000f053:	inc    DWORD PTR [r13+0x0]
   14000f057:	inc    rbx
   14000f05a:	jmp    0x14000efb8
   14000f05f:	test   rdi,rdi
   14000f062:	je     0x14000f06a
   14000f064:	mov    BYTE PTR [rdi],0x0
   14000f067:	inc    rdi
   14000f06a:	inc    DWORD PTR [r13+0x0]
   14000f06e:	jmp    0x14000ef87
   14000f073:	test   r12,r12
   14000f076:	je     0x14000f07d
   14000f078:	and    QWORD PTR [r12],0x0
   14000f07d:	inc    DWORD PTR [r14]
   14000f080:	mov    rbx,QWORD PTR [rsp+0x40]
   14000f085:	mov    rbp,QWORD PTR [rsp+0x48]
   14000f08a:	mov    rsi,QWORD PTR [rsp+0x50]
   14000f08f:	mov    rdi,QWORD PTR [rsp+0x58]
   14000f094:	add    rsp,0x20
   14000f098:	pop    r14
   14000f09a:	pop    r13
   14000f09c:	pop    r12
   14000f09e:	ret    
   14000f09f:	int3   
   14000f0a0:	mov    QWORD PTR [rsp+0x18],rbx
   14000f0a5:	mov    QWORD PTR [rsp+0x20],rsi
   14000f0aa:	push   rdi
   14000f0ab:	sub    rsp,0x30
   14000f0af:	cmp    DWORD PTR [rip+0x17c12],0x0        # 0x140026cc8
   14000f0b6:	jne    0x14000f0bd
   14000f0b8:	call   0x140014900
   14000f0bd:	lea    rdi,[rip+0x161fc]        # 0x1400252c0
   14000f0c4:	mov    r8d,0x104
   14000f0ca:	xor    ecx,ecx
   14000f0cc:	mov    rdx,rdi
   14000f0cf:	mov    BYTE PTR [rip+0x162ee],0x0        # 0x1400253c4
   14000f0d6:	call   QWORD PTR [rip+0xaf6c]        # 0x14001a048
   14000f0dc:	mov    rbx,QWORD PTR [rip+0x17bc5]        # 0x140026ca8
   14000f0e3:	mov    QWORD PTR [rip+0x158ce],rdi        # 0x1400249b8
   14000f0ea:	test   rbx,rbx
   14000f0ed:	je     0x14000f0f4
   14000f0ef:	cmp    BYTE PTR [rbx],0x0
   14000f0f2:	jne    0x14000f0f7
   14000f0f4:	mov    rbx,rdi
   14000f0f7:	lea    rax,[rsp+0x48]
   14000f0fc:	lea    r9,[rsp+0x40]
   14000f101:	xor    r8d,r8d
   14000f104:	xor    edx,edx
   14000f106:	mov    rcx,rbx
   14000f109:	mov    QWORD PTR [rsp+0x20],rax
   14000f10e:	call   0x14000eed0
   14000f113:	movsxd rsi,DWORD PTR [rsp+0x40]
   14000f118:	movabs rcx,0x1fffffffffffffff
   14000f122:	cmp    rsi,rcx
   14000f125:	jae    0x14000f183
   14000f127:	movsxd rcx,DWORD PTR [rsp+0x48]
   14000f12c:	cmp    rcx,0xffffffffffffffff
   14000f130:	jae    0x14000f183
   14000f132:	lea    rdx,[rcx+rsi*8]
   14000f136:	cmp    rdx,rcx
   14000f139:	jb     0x14000f183
   14000f13b:	mov    rcx,rdx
   14000f13e:	call   0x140010aa4
   14000f143:	mov    rdi,rax
   14000f146:	test   rax,rax
   14000f149:	je     0x14000f183
   14000f14b:	lea    r8,[rax+rsi*8]
   14000f14f:	lea    rax,[rsp+0x48]
   14000f154:	lea    r9,[rsp+0x40]
   14000f159:	mov    rdx,rdi
   14000f15c:	mov    rcx,rbx
   14000f15f:	mov    QWORD PTR [rsp+0x20],rax
   14000f164:	call   0x14000eed0
   14000f169:	mov    r11d,DWORD PTR [rsp+0x40]
   14000f16e:	mov    QWORD PTR [rip+0x15813],rdi        # 0x140024988
   14000f175:	dec    r11d
   14000f178:	xor    eax,eax
   14000f17a:	mov    DWORD PTR [rip+0x15803],r11d        # 0x140024984
   14000f181:	jmp    0x14000f186
   14000f183:	or     eax,0xffffffff
   14000f186:	mov    rbx,QWORD PTR [rsp+0x50]
   14000f18b:	mov    rsi,QWORD PTR [rsp+0x58]
   14000f190:	add    rsp,0x30
   14000f194:	pop    rdi
   14000f195:	ret    
   14000f196:	int3   
   14000f197:	int3   
   14000f198:	mov    rax,rsp
   14000f19b:	mov    QWORD PTR [rax+0x8],rbx
   14000f19f:	mov    QWORD PTR [rax+0x10],rbp
   14000f1a3:	mov    QWORD PTR [rax+0x18],rsi
   14000f1a7:	mov    QWORD PTR [rax+0x20],rdi
   14000f1ab:	push   r12
   14000f1ad:	sub    rsp,0x40
   14000f1b1:	call   QWORD PTR [rip+0xb059]        # 0x14001a210
   14000f1b7:	xor    r12d,r12d
   14000f1ba:	mov    rdi,rax
   14000f1bd:	test   rax,rax
   14000f1c0:	je     0x14000f26f
   14000f1c6:	mov    rbx,rax
   14000f1c9:	cmp    WORD PTR [rax],r12w
   14000f1cd:	je     0x14000f1e3
   14000f1cf:	add    rbx,0x2
   14000f1d3:	cmp    WORD PTR [rbx],r12w
   14000f1d7:	jne    0x14000f1cf
   14000f1d9:	add    rbx,0x2
   14000f1dd:	cmp    WORD PTR [rbx],r12w
   14000f1e1:	jne    0x14000f1cf
   14000f1e3:	mov    QWORD PTR [rsp+0x38],r12
   14000f1e8:	sub    rbx,rax
   14000f1eb:	mov    QWORD PTR [rsp+0x30],r12
   14000f1f0:	sar    rbx,1
   14000f1f3:	mov    r8,rax
   14000f1f6:	xor    edx,edx
   14000f1f8:	lea    r9d,[rbx+0x1]
   14000f1fc:	xor    ecx,ecx
   14000f1fe:	mov    DWORD PTR [rsp+0x28],r12d
   14000f203:	mov    QWORD PTR [rsp+0x20],r12
   14000f208:	call   QWORD PTR [rip+0xaff2]        # 0x14001a200
   14000f20e:	movsxd rbp,eax
   14000f211:	test   eax,eax
   14000f213:	je     0x14000f266
   14000f215:	mov    rcx,rbp
   14000f218:	call   0x140010aa4
   14000f21d:	mov    rsi,rax
   14000f220:	test   rax,rax
   14000f223:	je     0x14000f266
   14000f225:	mov    QWORD PTR [rsp+0x38],r12
   14000f22a:	mov    QWORD PTR [rsp+0x30],r12
   14000f22f:	lea    r9d,[rbx+0x1]
   14000f233:	mov    r8,rdi
   14000f236:	xor    edx,edx
   14000f238:	xor    ecx,ecx
   14000f23a:	mov    DWORD PTR [rsp+0x28],ebp
   14000f23e:	mov    QWORD PTR [rsp+0x20],rax
   14000f243:	call   QWORD PTR [rip+0xafb7]        # 0x14001a200
   14000f249:	test   eax,eax
   14000f24b:	jne    0x14000f258
   14000f24d:	mov    rcx,rsi
   14000f250:	call   0x14000b460
   14000f255:	mov    rsi,r12
   14000f258:	mov    rcx,rdi
   14000f25b:	call   QWORD PTR [rip+0xafa7]        # 0x14001a208
   14000f261:	mov    rax,rsi
   14000f264:	jmp    0x14000f271
   14000f266:	mov    rcx,rdi
   14000f269:	call   QWORD PTR [rip+0xaf99]        # 0x14001a208
   14000f26f:	xor    eax,eax
   14000f271:	mov    rbx,QWORD PTR [rsp+0x50]
   14000f276:	mov    rbp,QWORD PTR [rsp+0x58]
   14000f27b:	mov    rsi,QWORD PTR [rsp+0x60]
   14000f280:	mov    rdi,QWORD PTR [rsp+0x68]
   14000f285:	add    rsp,0x40
   14000f289:	pop    r12
   14000f28b:	ret    
   14000f28c:	mov    QWORD PTR [rsp+0x8],rbx
   14000f291:	mov    QWORD PTR [rsp+0x10],rbp
   14000f296:	mov    QWORD PTR [rsp+0x18],rdi
   14000f29b:	push   r12
   14000f29d:	push   r13
   14000f29f:	push   r14
   14000f2a1:	sub    rsp,0x90
   14000f2a8:	lea    rcx,[rsp+0x20]
   14000f2ad:	call   QWORD PTR [rip+0xaf75]        # 0x14001a228
   14000f2b3:	mov    edx,0x58
   14000f2b8:	lea    ebp,[rdx-0x38]
   14000f2bb:	mov    ecx,ebp
   14000f2bd:	call   0x140010b24
   14000f2c2:	xor    r14d,r14d
   14000f2c5:	mov    rdx,rax
   14000f2c8:	test   rax,rax
   14000f2cb:	jne    0x14000f2d5
   14000f2cd:	or     eax,0xffffffff
   14000f2d0:	jmp    0x14000f540
   14000f2d5:	mov    QWORD PTR [rip+0x167a4],rax        # 0x140025a80
   14000f2dc:	add    rax,0xb00
   14000f2e2:	mov    ecx,ebp
   14000f2e4:	mov    DWORD PTR [rip+0x16782],ecx        # 0x140025a6c
   14000f2ea:	cmp    rdx,rax
   14000f2ed:	jae    0x14000f334
   14000f2ef:	add    rdx,0x9
   14000f2f3:	or     QWORD PTR [rdx-0x9],0xffffffffffffffff
   14000f2f8:	mov    WORD PTR [rdx-0x1],0xa00
   14000f2fe:	mov    DWORD PTR [rdx+0x3],r14d
   14000f302:	mov    WORD PTR [rdx+0x2f],0xa00
   14000f308:	mov    BYTE PTR [rdx+0x31],0xa
   14000f30c:	mov    DWORD PTR [rdx+0x47],r14d
   14000f310:	mov    BYTE PTR [rdx+0x43],r14b
   14000f314:	mov    rax,QWORD PTR [rip+0x16765]        # 0x140025a80
   14000f31b:	add    rdx,0x58
   14000f31f:	lea    rcx,[rdx-0x9]
   14000f323:	add    rax,0xb00
   14000f329:	cmp    rcx,rax
   14000f32c:	jb     0x14000f2f3
   14000f32e:	mov    ecx,DWORD PTR [rip+0x16738]        # 0x140025a6c
   14000f334:	cmp    WORD PTR [rsp+0x62],r14w
   14000f33a:	je     0x14000f474
   14000f340:	mov    rax,QWORD PTR [rsp+0x68]
   14000f345:	test   rax,rax
   14000f348:	je     0x14000f474
   14000f34e:	movsxd r12,DWORD PTR [rax]
   14000f351:	mov    ebx,0x800
   14000f356:	lea    r13,[rax+0x4]
   14000f35a:	add    r12,r13
   14000f35d:	cmp    DWORD PTR [rax],ebx
   14000f35f:	cmovl  ebx,DWORD PTR [rax]
   14000f362:	cmp    ecx,ebx
   14000f364:	jge    0x14000f3f1
   14000f36a:	lea    rdi,[rip+0x16717]        # 0x140025a88
   14000f371:	mov    edx,0x58
   14000f376:	mov    rcx,rbp
   14000f379:	call   0x140010b24
   14000f37e:	test   rax,rax
   14000f381:	je     0x14000f3eb
   14000f383:	mov    edx,DWORD PTR [rip+0x166e3]        # 0x140025a6c
   14000f389:	lea    rcx,[rax+0xb00]
   14000f390:	mov    QWORD PTR [rdi],rax
   14000f393:	add    edx,ebp
   14000f395:	mov    DWORD PTR [rip+0x166d1],edx        # 0x140025a6c
   14000f39b:	cmp    rax,rcx
   14000f39e:	jae    0x14000f3e1
   14000f3a0:	lea    rdx,[rax+0x9]
   14000f3a4:	or     QWORD PTR [rdx-0x9],0xffffffffffffffff
   14000f3a9:	and    BYTE PTR [rdx+0x2f],0x80
   14000f3ad:	mov    WORD PTR [rdx-0x1],0xa00
   14000f3b3:	mov    DWORD PTR [rdx+0x3],r14d
   14000f3b7:	mov    WORD PTR [rdx+0x30],0xa0a
   14000f3bd:	mov    DWORD PTR [rdx+0x47],r14d
   14000f3c1:	mov    BYTE PTR [rdx+0x43],r14b
   14000f3c5:	mov    rax,QWORD PTR [rdi]
   14000f3c8:	add    rdx,0x58
   14000f3cc:	lea    rcx,[rdx-0x9]
   14000f3d0:	add    rax,0xb00
   14000f3d6:	cmp    rcx,rax
   14000f3d9:	jb     0x14000f3a4
   14000f3db:	mov    edx,DWORD PTR [rip+0x1668b]        # 0x140025a6c
   14000f3e1:	add    rdi,0x8
   14000f3e5:	cmp    edx,ebx
   14000f3e7:	jl     0x14000f371
   14000f3e9:	jmp    0x14000f3f1
   14000f3eb:	mov    ebx,DWORD PTR [rip+0x1667b]        # 0x140025a6c
   14000f3f1:	mov    edi,r14d
   14000f3f4:	test   ebx,ebx
   14000f3f6:	jle    0x14000f474
   14000f3f8:	cmp    QWORD PTR [r12],0xffffffffffffffff
   14000f3fd:	je     0x14000f467
   14000f3ff:	cmp    QWORD PTR [r12],0xfffffffffffffffe
   14000f404:	je     0x14000f467
   14000f406:	test   BYTE PTR [r13+0x0],0x1
   14000f40b:	je     0x14000f467
   14000f40d:	test   BYTE PTR [r13+0x0],0x8
   14000f412:	jne    0x14000f422
   14000f414:	mov    rcx,QWORD PTR [r12]
   14000f418:	call   QWORD PTR [rip+0xae02]        # 0x14001a220
   14000f41e:	test   eax,eax
   14000f420:	je     0x14000f467
   14000f422:	movsxd rbp,edi
   14000f425:	lea    rcx,[rip+0x16654]        # 0x140025a80
   14000f42c:	mov    edx,0xfa0
   14000f431:	mov    rax,rbp
   14000f434:	and    ebp,0x1f
   14000f437:	sar    rax,0x5
   14000f43b:	imul   rbp,rbp,0x58
   14000f43f:	add    rbp,QWORD PTR [rcx+rax*8]
   14000f443:	mov    rax,QWORD PTR [r12]
   14000f447:	mov    QWORD PTR [rbp+0x0],rax
   14000f44b:	mov    al,BYTE PTR [r13+0x0]
   14000f44f:	lea    rcx,[rbp+0x10]
   14000f453:	mov    BYTE PTR [rbp+0x8],al
   14000f456:	call   QWORD PTR [rip+0xacfc]        # 0x14001a158
   14000f45c:	test   eax,eax
   14000f45e:	je     0x14000f2cd
   14000f464:	inc    DWORD PTR [rbp+0xc]
   14000f467:	inc    edi
   14000f469:	inc    r13
   14000f46c:	add    r12,0x8
   14000f470:	cmp    edi,ebx
   14000f472:	jl     0x14000f3f8
   14000f474:	mov    r12d,r14d
   14000f477:	mov    rbx,r14
   14000f47a:	mov    rdi,QWORD PTR [rip+0x165ff]        # 0x140025a80
   14000f481:	cmp    QWORD PTR [rbx+rdi*1],0xffffffffffffffff
   14000f486:	je     0x14000f499
   14000f488:	cmp    QWORD PTR [rbx+rdi*1],0xfffffffffffffffe
   14000f48d:	je     0x14000f499
   14000f48f:	or     BYTE PTR [rbx+rdi*1+0x8],0x80
   14000f494:	jmp    0x14000f51e
   14000f499:	lea    eax,[r12-0x1]
   14000f49e:	mov    BYTE PTR [rbx+rdi*1+0x8],0x81
   14000f4a3:	neg    eax
   14000f4a5:	mov    eax,0xfffffff6
   14000f4aa:	sbb    ecx,ecx
   14000f4ac:	add    ecx,0xfffffff5
   14000f4af:	test   r12d,r12d
   14000f4b2:	cmove  ecx,eax
   14000f4b5:	call   QWORD PTR [rip+0xad35]        # 0x14001a1f0
   14000f4bb:	mov    rbp,rax
   14000f4be:	cmp    rax,0xffffffffffffffff
   14000f4c2:	je     0x14000f511
   14000f4c4:	test   rax,rax
   14000f4c7:	je     0x14000f511
   14000f4c9:	mov    rcx,rax
   14000f4cc:	call   QWORD PTR [rip+0xad4e]        # 0x14001a220
   14000f4d2:	test   eax,eax
   14000f4d4:	je     0x14000f511
   14000f4d6:	movzx  eax,al
   14000f4d9:	mov    QWORD PTR [rbx+rdi*1],rbp
   14000f4dd:	cmp    eax,0x2
   14000f4e0:	jne    0x14000f4e9
   14000f4e2:	or     BYTE PTR [rbx+rdi*1+0x8],0x40
   14000f4e7:	jmp    0x14000f4f3
   14000f4e9:	cmp    eax,0x3
   14000f4ec:	jne    0x14000f4f3
   14000f4ee:	or     BYTE PTR [rbx+rdi*1+0x8],0x8
   14000f4f3:	lea    rcx,[rbx+rdi*1+0x10]
   14000f4f8:	mov    edx,0xfa0
   14000f4fd:	call   QWORD PTR [rip+0xac55]        # 0x14001a158
   14000f503:	test   eax,eax
   14000f505:	je     0x14000f2cd
   14000f50b:	inc    DWORD PTR [rbx+rdi*1+0xc]
   14000f50f:	jmp    0x14000f51e
   14000f511:	or     BYTE PTR [rbx+rdi*1+0x8],0x40
   14000f516:	mov    QWORD PTR [rbx+rdi*1],0xfffffffffffffffe
   14000f51e:	add    rbx,0x58
   14000f522:	inc    r12d
   14000f525:	cmp    rbx,0x108
   14000f52c:	jl     0x14000f47a
   14000f532:	mov    ecx,DWORD PTR [rip+0x16534]        # 0x140025a6c
   14000f538:	call   QWORD PTR [rip+0xacda]        # 0x14001a218
   14000f53e:	xor    eax,eax
   14000f540:	lea    r11,[rsp+0x90]
   14000f548:	mov    rbx,QWORD PTR [r11+0x20]
   14000f54c:	mov    rbp,QWORD PTR [r11+0x28]
   14000f550:	mov    rdi,QWORD PTR [r11+0x30]
   14000f554:	mov    rsp,r11
   14000f557:	pop    r14
   14000f559:	pop    r13
   14000f55b:	pop    r12
   14000f55d:	ret    
   14000f55e:	int3   
   14000f55f:	int3   
   14000f560:	sub    rsp,0x28
   14000f564:	xor    r8d,r8d
   14000f567:	mov    edx,0x1000
   14000f56c:	xor    ecx,ecx
   14000f56e:	mov    DWORD PTR [rsp+0x30],0x2
   14000f576:	call   QWORD PTR [rip+0xacc4]        # 0x14001a240
   14000f57c:	mov    QWORD PTR [rip+0x15e45],rax        # 0x1400253c8
   14000f583:	test   rax,rax
   14000f586:	je     0x14000f5b1
   14000f588:	call   QWORD PTR [rip+0xacaa]        # 0x14001a238
   14000f58e:	cmp    al,0x6
   14000f590:	jae    0x14000f5ac
   14000f592:	mov    rcx,QWORD PTR [rip+0x15e2f]        # 0x1400253c8
   14000f599:	lea    r8,[rsp+0x30]
   14000f59e:	mov    r9d,0x4
   14000f5a4:	xor    edx,edx
   14000f5a6:	call   QWORD PTR [rip+0xac84]        # 0x14001a230
   14000f5ac:	mov    eax,0x1
   14000f5b1:	add    rsp,0x28
   14000f5b5:	ret    
   14000f5b6:	int3   
   14000f5b7:	int3   
   14000f5b8:	mov    QWORD PTR [rsp+0x18],rbx
   14000f5bd:	push   rdi
   14000f5be:	sub    rsp,0x20
   14000f5c2:	mov    rax,QWORD PTR [rip+0x13af7]        # 0x1400230c0
   14000f5c9:	and    QWORD PTR [rsp+0x30],0x0
   14000f5cf:	movabs rdi,0x2b992ddfa232
   14000f5d9:	cmp    rax,rdi
   14000f5dc:	je     0x14000f5ea
   14000f5de:	not    rax
   14000f5e1:	mov    QWORD PTR [rip+0x13ae0],rax        # 0x1400230c8
   14000f5e8:	jmp    0x14000f660
   14000f5ea:	lea    rcx,[rsp+0x30]
   14000f5ef:	call   QWORD PTR [rip+0xac63]        # 0x14001a258
   14000f5f5:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f5fa:	call   QWORD PTR [rip+0xac50]        # 0x14001a250
   14000f600:	mov    r11d,eax
   14000f603:	xor    rbx,r11
   14000f606:	call   QWORD PTR [rip+0xab3c]        # 0x14001a148
   14000f60c:	mov    r11d,eax
   14000f60f:	xor    rbx,r11
   14000f612:	call   QWORD PTR [rip+0xac30]        # 0x14001a248
   14000f618:	lea    rcx,[rsp+0x38]
   14000f61d:	mov    r11d,eax
   14000f620:	xor    rbx,r11
   14000f623:	call   QWORD PTR [rip+0xaa27]        # 0x14001a050
   14000f629:	mov    r11,QWORD PTR [rsp+0x38]
   14000f62e:	xor    r11,rbx
   14000f631:	movabs rax,0xffffffffffff
   14000f63b:	and    r11,rax
   14000f63e:	movabs rax,0x2b992ddfa233
   14000f648:	cmp    r11,rdi
   14000f64b:	cmove  r11,rax
   14000f64f:	mov    QWORD PTR [rip+0x13a6a],r11        # 0x1400230c0
   14000f656:	not    r11
   14000f659:	mov    QWORD PTR [rip+0x13a68],r11        # 0x1400230c8
   14000f660:	mov    rbx,QWORD PTR [rsp+0x40]
   14000f665:	add    rsp,0x20
   14000f669:	pop    rdi
   14000f66a:	ret    
   14000f66b:	int3   
   14000f66c:	mov    QWORD PTR [rsp+0x8],rbx
   14000f671:	mov    QWORD PTR [rsp+0x10],rsi
   14000f676:	push   rdi
   14000f677:	sub    rsp,0x20
   14000f67b:	mov    rsi,r9
   14000f67e:	mov    rdi,r8
   14000f681:	mov    rbx,rdx
   14000f684:	cmp    rcx,QWORD PTR [rdx]
   14000f687:	jne    0x14000f6ed
   14000f689:	cmp    QWORD PTR [r8],r9
   14000f68c:	jne    0x14000f6cb
   14000f68e:	mov    rcx,QWORD PTR [rbx]
   14000f691:	mov    edx,0x2
   14000f696:	call   0x140010b24
   14000f69b:	mov    QWORD PTR [rdi],rax
   14000f69e:	test   rax,rax
   14000f6a1:	jne    0x14000f6a7
   14000f6a3:	xor    eax,eax
   14000f6a5:	jmp    0x14000f6f2
   14000f6a7:	mov    rax,QWORD PTR [rsp+0x50]
   14000f6ac:	mov    rdx,rsi
   14000f6af:	mov    DWORD PTR [rax],0x1
   14000f6b5:	mov    r8,QWORD PTR [rbx]
   14000f6b8:	mov    rcx,QWORD PTR [rdi]
   14000f6bb:	call   0x14000a140
   14000f6c0:	mov    r11,QWORD PTR [rbx]
   14000f6c3:	add    r11,r11
   14000f6c6:	mov    QWORD PTR [rbx],r11
   14000f6c9:	jmp    0x14000f6ed
   14000f6cb:	mov    rdx,QWORD PTR [rdx]
   14000f6ce:	mov    rcx,QWORD PTR [rdi]
   14000f6d1:	mov    r8d,0x2
   14000f6d7:	call   0x140010c30
   14000f6dc:	test   rax,rax
   14000f6df:	je     0x14000f6a3
   14000f6e1:	mov    QWORD PTR [rdi],rax
   14000f6e4:	mov    rcx,QWORD PTR [rbx]
   14000f6e7:	add    rcx,rcx
   14000f6ea:	mov    QWORD PTR [rbx],rcx
   14000f6ed:	mov    eax,0x1
   14000f6f2:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f6f7:	mov    rsi,QWORD PTR [rsp+0x38]
   14000f6fc:	add    rsp,0x20
   14000f700:	pop    rdi
   14000f701:	ret    
   14000f702:	int3   
   14000f703:	int3   
   14000f704:	sub    rsp,0x28
   14000f708:	dec    DWORD PTR [rcx+0x8]
   14000f70b:	js     0x14000f71b
   14000f70d:	mov    rax,QWORD PTR [rcx]
   14000f710:	movzx  edx,BYTE PTR [rax]
   14000f713:	inc    rax
   14000f716:	mov    QWORD PTR [rcx],rax
   14000f719:	jmp    0x14000f722
   14000f71b:	call   0x140010f1c
   14000f720:	mov    edx,eax
   14000f722:	mov    eax,edx
   14000f724:	add    rsp,0x28
   14000f728:	ret    
   14000f729:	int3   
   14000f72a:	int3   
   14000f72b:	int3   
   14000f72c:	mov    QWORD PTR [rsp+0x18],rbx
   14000f731:	push   rbp
   14000f732:	push   rsi
   14000f733:	push   rdi
   14000f734:	push   r12
   14000f736:	push   r13
   14000f738:	push   r14
   14000f73a:	push   r15
   14000f73c:	lea    rbp,[rsp-0x180]
   14000f744:	sub    rsp,0x280
   14000f74b:	mov    rax,QWORD PTR [rip+0x1396e]        # 0x1400230c0
   14000f752:	xor    rax,rsp
   14000f755:	mov    QWORD PTR [rbp+0x170],rax
   14000f75c:	xor    eax,eax
   14000f75e:	lea    r13,[rbp+0x10]
   14000f762:	mov    QWORD PTR [rbp-0x48],r9
   14000f766:	mov    rbx,r8
   14000f769:	mov    r12,rdx
   14000f76c:	mov    QWORD PTR [rsp+0x50],rdx
   14000f771:	mov    QWORD PTR [rsp+0x78],r13
   14000f776:	mov    rsi,rcx
   14000f779:	mov    QWORD PTR [rsp+0x68],rcx
   14000f77e:	mov    QWORD PTR [rbp-0x50],0x15e
   14000f786:	mov    DWORD PTR [rbp-0x7c],eax
   14000f789:	mov    WORD PTR [rbp-0x78],ax
   14000f78d:	mov    edi,eax
   14000f78f:	mov    DWORD PTR [rsp+0x3c],eax
   14000f793:	test   rdx,rdx
   14000f796:	jne    0x14000f7b0
   14000f798:	call   0x14000bdc0
   14000f79d:	mov    DWORD PTR [rax],0x16
   14000f7a3:	call   0x14000d01c
   14000f7a8:	or     eax,0xffffffff
   14000f7ab:	jmp    0x140010776
   14000f7b0:	test   rcx,rcx
   14000f7b3:	je     0x14000f798
   14000f7b5:	or     r15d,0xffffffff
   14000f7b9:	test   BYTE PTR [rcx+0x18],0x40
   14000f7bd:	jne    0x14000f83b
   14000f7bf:	call   0x140010a7c
   14000f7c4:	lea    rdx,[rip+0x140e5]        # 0x1400238b0
   14000f7cb:	lea    r9,[rip+0x162ae]        # 0x140025a80
   14000f7d2:	cmp    eax,r15d
   14000f7d5:	je     0x14000f7f4
   14000f7d7:	cmp    eax,0xfffffffe
   14000f7da:	je     0x14000f7f4
   14000f7dc:	movsxd r8,eax
   14000f7df:	mov    rcx,r8
   14000f7e2:	and    r8d,0x1f
   14000f7e6:	sar    rcx,0x5
   14000f7ea:	imul   r8,r8,0x58
   14000f7ee:	add    r8,QWORD PTR [r9+rcx*8]
   14000f7f2:	jmp    0x14000f7f7
   14000f7f4:	mov    r8,rdx
   14000f7f7:	test   BYTE PTR [r8+0x38],0x7f
   14000f7fc:	jne    0x14000f823
   14000f7fe:	cmp    eax,r15d
   14000f801:	je     0x14000f81d
   14000f803:	cmp    eax,0xfffffffe
   14000f806:	je     0x14000f81d
   14000f808:	movsxd rdx,eax
   14000f80b:	mov    rax,rdx
   14000f80e:	and    edx,0x1f
   14000f811:	sar    rax,0x5
   14000f815:	imul   rdx,rdx,0x58
   14000f819:	add    rdx,QWORD PTR [r9+rax*8]
   14000f81d:	test   BYTE PTR [rdx+0x38],0x80
   14000f821:	je     0x14000f83b
   14000f823:	call   0x14000bdc0
   14000f828:	mov    DWORD PTR [rax],0x16
   14000f82e:	call   0x14000d01c
   14000f833:	mov    eax,r15d
   14000f836:	jmp    0x140010776
   14000f83b:	lea    rcx,[rbp-0x38]
   14000f83f:	mov    rdx,rbx
   14000f842:	call   0x14000c6f4
   14000f847:	mov    al,BYTE PTR [r12]
   14000f84b:	xor    ebx,ebx
   14000f84d:	mov    BYTE PTR [rsp+0x39],bl
   14000f851:	mov    r14d,ebx
   14000f854:	mov    DWORD PTR [rsp+0x34],ebx
   14000f858:	mov    r13d,ebx
   14000f85b:	mov    DWORD PTR [rsp+0x70],ebx
   14000f85f:	test   al,al
   14000f861:	je     0x140010763
   14000f867:	lea    r13d,[rbx+0x1]
   14000f86b:	movzx  ecx,al
   14000f86e:	call   0x14000c89c
   14000f873:	test   eax,eax
   14000f875:	je     0x14000f8c7
   14000f877:	sub    r14d,r13d
   14000f87a:	add    r14d,r13d
   14000f87d:	mov    rcx,rsi
   14000f880:	mov    DWORD PTR [rsp+0x34],r14d
   14000f885:	call   0x14000f704
   14000f88a:	mov    ebx,eax
   14000f88c:	cmp    eax,r15d
   14000f88f:	je     0x14000f8a7
   14000f891:	movzx  ecx,al
   14000f894:	call   0x14000c89c
   14000f899:	test   eax,eax
   14000f89b:	jne    0x14000f87a
   14000f89d:	mov    rdx,rsi
   14000f8a0:	mov    ecx,ebx
   14000f8a2:	call   0x140015af0
   14000f8a7:	add    r12,r13
   14000f8aa:	movzx  ecx,BYTE PTR [r12]
   14000f8af:	call   0x14000c89c
   14000f8b4:	test   eax,eax
   14000f8b6:	jne    0x14000f8a7
   14000f8b8:	mov    rsi,QWORD PTR [rsp+0x68]
   14000f8bd:	mov    QWORD PTR [rsp+0x50],r12
   14000f8c2:	jmp    0x1400106fc
   14000f8c7:	mov    cl,0x25
   14000f8c9:	cmp    BYTE PTR [r12],cl
   14000f8cd:	jne    0x14001068f
   14000f8d3:	cmp    BYTE PTR [r12+0x1],cl
   14000f8d8:	je     0x14001067e
   14000f8de:	mov    r13,QWORD PTR [rsp+0x50]
   14000f8e3:	mov    edx,0x1
   14000f8e8:	mov    DWORD PTR [rsp+0x5c],ebx
   14000f8ec:	mov    BYTE PTR [rsp+0x38],dl
   14000f8f0:	mov    BYTE PTR [rbp-0x80],bl
   14000f8f3:	mov    DWORD PTR [rsp+0x4c],ebx
   14000f8f7:	mov    DWORD PTR [rsp+0x60],ebx
   14000f8fb:	mov    r14d,ebx
   14000f8fe:	mov    BYTE PTR [rsp+0x58],bl
   14000f902:	mov    BYTE PTR [rsp+0x40],bl
   14000f906:	mov    BYTE PTR [rsp+0x30],bl
   14000f90a:	mov    sil,bl
   14000f90d:	mov    BYTE PTR [rbp-0x58],bl
   14000f910:	mov    r12b,bl
   14000f913:	mov    edi,ebx
   14000f915:	add    r13,rdx
   14000f918:	movzx  ebx,BYTE PTR [r13+0x0]
   14000f91d:	mov    ecx,ebx
   14000f91f:	call   0x14000c798
   14000f924:	xor    r8d,r8d
   14000f927:	test   eax,eax
   14000f929:	je     0x14000f93e
   14000f92b:	lea    eax,[r14+r14*4]
   14000f92f:	lea    edx,[r8+0x1]
   14000f933:	add    DWORD PTR [rsp+0x60],edx
   14000f937:	lea    r14d,[rbx+rax*2-0x30]
   14000f93c:	jmp    0x14000f9a4
   14000f93e:	cmp    ebx,0x2a
   14000f941:	je     0x14000fa4e
   14000f947:	cmp    ebx,0x46
   14000f94a:	je     0x14000f99f
   14000f94c:	cmp    ebx,0x49
   14000f94f:	je     0x14000f9f4
   14000f955:	cmp    ebx,0x4c
   14000f958:	je     0x14000f9e9
   14000f95e:	cmp    ebx,0x4e
   14000f961:	je     0x14000f99f
   14000f963:	cmp    ebx,0x68
   14000f966:	je     0x14000f997
   14000f968:	mov    edx,0x1
   14000f96d:	cmp    ebx,0x6c
   14000f970:	je     0x14000f97c
   14000f972:	cmp    ebx,0x77
   14000f975:	je     0x14000f992
   14000f977:	jmp    0x14000fa46
   14000f97c:	cmp    BYTE PTR [r13+0x1],0x6c
   14000f981:	jne    0x14000f98e
   14000f983:	inc    r13
   14000f986:	add    edi,edx
   14000f988:	mov    QWORD PTR [rbp-0x70],r8
   14000f98c:	jmp    0x14000f9a4
   14000f98e:	add    BYTE PTR [rsp+0x38],dl
   14000f992:	add    r12b,dl
   14000f995:	jmp    0x14000f9a4
   14000f997:	add    BYTE PTR [rsp+0x38],r15b
   14000f99c:	add    r12b,r15b
   14000f99f:	mov    edx,0x1
   14000f9a4:	mov    cl,BYTE PTR [rsp+0x30]
   14000f9a8:	test   sil,sil
   14000f9ab:	je     0x14000f915
   14000f9b1:	mov    DWORD PTR [rsp+0x48],edi
   14000f9b5:	mov    edi,DWORD PTR [rsp+0x3c]
   14000f9b9:	mov    QWORD PTR [rsp+0x50],r13
   14000f9be:	mov    r13b,BYTE PTR [rbp-0x80]
   14000f9c2:	mov    DWORD PTR [rsp+0x44],r14d
   14000f9c7:	test   cl,cl
   14000f9c9:	jne    0x14000fa62
   14000f9cf:	mov    rax,QWORD PTR [rbp-0x48]
   14000f9d3:	mov    QWORD PTR [rbp-0x18],rax
   14000f9d7:	add    rax,0x8
   14000f9db:	mov    QWORD PTR [rbp-0x48],rax
   14000f9df:	mov    rax,QWORD PTR [rax-0x8]
   14000f9e3:	mov    QWORD PTR [rbp-0x60],rax
   14000f9e7:	jmp    0x14000fa66
   14000f9e9:	mov    edx,0x1
   14000f9ee:	add    BYTE PTR [rsp+0x38],dl
   14000f9f2:	jmp    0x14000f9a4
   14000f9f4:	mov    al,BYTE PTR [r13+0x1]
   14000f9f8:	cmp    al,0x36
   14000f9fa:	jne    0x14000fa12
   14000f9fc:	lea    rcx,[r13+0x2]
   14000fa00:	cmp    BYTE PTR [rcx],0x34
   14000fa03:	jne    0x14000fa12
   14000fa05:	mov    r13,rcx
   14000fa08:	mov    edx,0x1
   14000fa0d:	jmp    0x14000f986
   14000fa12:	cmp    al,0x33
   14000fa14:	jne    0x14000fa27
   14000fa16:	lea    rcx,[r13+0x2]
   14000fa1a:	cmp    BYTE PTR [rcx],0x32
   14000fa1d:	jne    0x14000fa27
   14000fa1f:	mov    r13,rcx
   14000fa22:	jmp    0x14000f99f
   14000fa27:	cmp    al,0x64
   14000fa29:	je     0x14000fa08
   14000fa2b:	cmp    al,0x69
   14000fa2d:	je     0x14000fa08
   14000fa2f:	cmp    al,0x6f
   14000fa31:	je     0x14000fa08
   14000fa33:	cmp    al,0x78
   14000fa35:	je     0x14000fa08
   14000fa37:	cmp    al,0x58
   14000fa39:	je     0x14000fa08
   14000fa3b:	mov    edx,0x1
   14000fa40:	mov    QWORD PTR [rbp-0x70],r8
   14000fa44:	add    edi,edx
   14000fa46:	add    sil,dl
   14000fa49:	jmp    0x14000f9a4
   14000fa4e:	mov    cl,BYTE PTR [rsp+0x30]
   14000fa52:	mov    edx,0x1
   14000fa57:	add    cl,dl
   14000fa59:	mov    BYTE PTR [rsp+0x30],cl
   14000fa5d:	jmp    0x14000f9a8
   14000fa62:	mov    QWORD PTR [rbp-0x60],r8
   14000fa66:	mov    rax,QWORD PTR [rsp+0x50]
   14000fa6b:	mov    bl,r8b
   14000fa6e:	test   r12b,r12b
   14000fa71:	jne    0x14000fa83
   14000fa73:	cmp    BYTE PTR [rax],0x53
   14000fa76:	je     0x14000fa80
   14000fa78:	cmp    BYTE PTR [rax],0x43
   14000fa7b:	mov    r12b,r15b
   14000fa7e:	jne    0x14000fa83
   14000fa80:	mov    r12b,dl
   14000fa83:	movzx  r14d,BYTE PTR [rax]
   14000fa87:	or     r14d,0x20
   14000fa8b:	mov    DWORD PTR [rbp-0x40],r14d
   14000fa8f:	cmp    r14d,0x6e
   14000fa93:	je     0x14000fb01
   14000fa95:	cmp    r14d,0x63
   14000fa99:	je     0x14000fadd
   14000fa9b:	cmp    r14d,0x7b
   14000fa9f:	je     0x14000fadd
   14000faa1:	mov    rsi,QWORD PTR [rsp+0x68]
   14000faa6:	mov    r14d,DWORD PTR [rsp+0x34]
   14000faab:	mov    rcx,rsi
   14000faae:	add    r14d,edx
   14000fab1:	call   0x14000f704
   14000fab6:	mov    edi,eax
   14000fab8:	mov    DWORD PTR [rsp+0x3c],eax
   14000fabc:	cmp    eax,r15d
   14000fabf:	je     0x14000fad2
   14000fac1:	movzx  ecx,al
   14000fac4:	call   0x14000c89c
   14000fac9:	mov    edx,0x1
   14000face:	test   eax,eax
   14000fad0:	jne    0x14000faab
   14000fad2:	mov    DWORD PTR [rsp+0x34],r14d
   14000fad7:	mov    r14d,DWORD PTR [rbp-0x40]
   14000fadb:	jmp    0x14000faf1
   14000fadd:	mov    rcx,QWORD PTR [rsp+0x68]
   14000fae2:	add    DWORD PTR [rsp+0x34],edx
   14000fae6:	call   0x14000f704
   14000faeb:	mov    edi,eax
   14000faed:	mov    DWORD PTR [rsp+0x3c],eax
   14000faf1:	cmp    edi,r15d
   14000faf4:	je     0x14000fdc2
   14000fafa:	mov    cl,BYTE PTR [rsp+0x30]
   14000fafe:	xor    r8d,r8d
   14000fb01:	mov    eax,DWORD PTR [rsp+0x60]
   14000fb05:	mov    esi,DWORD PTR [rsp+0x44]
   14000fb09:	test   eax,eax
   14000fb0b:	je     0x14000fb15
   14000fb0d:	test   esi,esi
   14000fb0f:	je     0x14001070f
   14000fb15:	cmp    r14d,0x6f
   14000fb19:	jg     0x14000ff42
   14000fb1f:	je     0x140010415
   14000fb25:	cmp    r14d,0x63
   14000fb29:	je     0x14000ff16
   14000fb2f:	cmp    r14d,0x64
   14000fb33:	je     0x140010415
   14000fb39:	jle    0x14000ff70
   14000fb3f:	cmp    r14d,0x67
   14000fb43:	jle    0x14000fb8b
   14000fb45:	cmp    r14d,0x69
   14000fb49:	je     0x14000fb6e
   14000fb4b:	cmp    r14d,0x6e
   14000fb4f:	jne    0x14000ff70
   14000fb55:	mov    eax,DWORD PTR [rsp+0x34]
   14000fb59:	test   cl,cl
   14000fb5b:	je     0x14001062b
   14000fb61:	mov    r12,QWORD PTR [rsp+0x50]
   14000fb66:	mov    r14d,eax
   14000fb69:	jmp    0x140010664
   14000fb6e:	mov    r14d,0x64
   14000fb74:	mov    ecx,0x1
   14000fb79:	cmp    edi,0x2d
   14000fb7c:	jne    0x1400100ab
   14000fb82:	mov    BYTE PTR [rsp+0x40],cl
   14000fb86:	jmp    0x1400100b0
   14000fb8b:	mov    rbx,r8
   14000fb8e:	mov    esi,0x1
   14000fb93:	cmp    edi,0x2d
   14000fb96:	jne    0x14000fba4
   14000fb98:	mov    rax,QWORD PTR [rsp+0x78]
   14000fb9d:	mov    ebx,esi
   14000fb9f:	mov    BYTE PTR [rax],dil
   14000fba2:	jmp    0x14000fba9
   14000fba4:	cmp    edi,0x2b
   14000fba7:	jne    0x14000fbd2
   14000fba9:	mov    r13,QWORD PTR [rsp+0x68]
   14000fbae:	mov    r12d,DWORD PTR [rsp+0x44]
   14000fbb3:	mov    r14d,DWORD PTR [rsp+0x34]
   14000fbb8:	mov    rcx,r13
   14000fbbb:	sub    r12d,esi
   14000fbbe:	add    r14d,esi
   14000fbc1:	call   0x14000f704
   14000fbc6:	mov    edi,eax
   14000fbc8:	mov    DWORD PTR [rsp+0x3c],eax
   14000fbcc:	mov    eax,DWORD PTR [rsp+0x60]
   14000fbd0:	jmp    0x14000fbe1
   14000fbd2:	mov    r12d,DWORD PTR [rsp+0x44]
   14000fbd7:	mov    r13,QWORD PTR [rsp+0x68]
   14000fbdc:	mov    r14d,DWORD PTR [rsp+0x34]
   14000fbe1:	test   eax,eax
   14000fbe3:	movzx  ecx,dil
   14000fbe7:	cmove  r12d,r15d
   14000fbeb:	jmp    0x14000fc41
   14000fbed:	mov    eax,r12d
   14000fbf0:	sub    r12d,esi
   14000fbf3:	test   eax,eax
   14000fbf5:	je     0x14000fc4a
   14000fbf7:	mov    rax,QWORD PTR [rsp+0x78]
   14000fbfc:	add    DWORD PTR [rsp+0x4c],esi
   14000fc00:	lea    r9,[rbp+0x10]
   14000fc04:	mov    BYTE PTR [rbx+rax*1],dil
   14000fc08:	lea    rax,[rbp-0x7c]
   14000fc0c:	add    rbx,rsi
   14000fc0f:	lea    r8,[rsp+0x78]
   14000fc14:	lea    rdx,[rbp-0x50]
   14000fc18:	mov    rcx,rbx
   14000fc1b:	mov    QWORD PTR [rsp+0x20],rax
   14000fc20:	call   0x14000f66c
   14000fc25:	test   eax,eax
   14000fc27:	je     0x14000fdc2
   14000fc2d:	mov    rcx,r13
   14000fc30:	add    r14d,esi
   14000fc33:	call   0x14000f704
   14000fc38:	mov    edi,eax
   14000fc3a:	mov    DWORD PTR [rsp+0x3c],eax
   14000fc3e:	movzx  ecx,al
   14000fc41:	call   0x14000c798
   14000fc46:	test   eax,eax
   14000fc48:	jne    0x14000fbed
   14000fc4a:	mov    rax,QWORD PTR [rbp-0x38]
   14000fc4e:	mov    rcx,QWORD PTR [rax+0x128]
   14000fc55:	mov    rax,QWORD PTR [rcx]
   14000fc58:	mov    ecx,0x1
   14000fc5d:	mov    sil,BYTE PTR [rax]
   14000fc60:	cmp    sil,dil
   14000fc63:	jne    0x14000fd25
   14000fc69:	mov    eax,r12d
   14000fc6c:	sub    r12d,ecx
   14000fc6f:	test   eax,eax
   14000fc71:	je     0x14000fd25
   14000fc77:	add    r14d,ecx
   14000fc7a:	mov    rcx,r13
   14000fc7d:	call   0x14000f704
   14000fc82:	lea    r9,[rbp+0x10]
   14000fc86:	lea    r8,[rsp+0x78]
   14000fc8b:	mov    edi,eax
   14000fc8d:	mov    DWORD PTR [rsp+0x3c],eax
   14000fc91:	mov    rax,QWORD PTR [rsp+0x78]
   14000fc96:	mov    BYTE PTR [rbx+rax*1],sil
   14000fc9a:	lea    rax,[rbp-0x7c]
   14000fc9e:	mov    esi,0x1
   14000fca3:	add    rbx,rsi
   14000fca6:	lea    rdx,[rbp-0x50]
   14000fcaa:	mov    QWORD PTR [rsp+0x20],rax
   14000fcaf:	mov    rcx,rbx
   14000fcb2:	call   0x14000f66c
   14000fcb7:	test   eax,eax
   14000fcb9:	je     0x14000fdc2
   14000fcbf:	movzx  ecx,dil
   14000fcc3:	jmp    0x14000fd19
   14000fcc5:	mov    eax,r12d
   14000fcc8:	sub    r12d,esi
   14000fccb:	test   eax,eax
   14000fccd:	je     0x14000fd22
   14000fccf:	mov    rax,QWORD PTR [rsp+0x78]
   14000fcd4:	add    DWORD PTR [rsp+0x4c],esi
   14000fcd8:	lea    r9,[rbp+0x10]
   14000fcdc:	mov    BYTE PTR [rbx+rax*1],dil
   14000fce0:	lea    rax,[rbp-0x7c]
   14000fce4:	add    rbx,rsi
   14000fce7:	lea    r8,[rsp+0x78]
   14000fcec:	lea    rdx,[rbp-0x50]
   14000fcf0:	mov    rcx,rbx
   14000fcf3:	mov    QWORD PTR [rsp+0x20],rax
   14000fcf8:	call   0x14000f66c
   14000fcfd:	test   eax,eax
   14000fcff:	je     0x14000fdc2
   14000fd05:	mov    rcx,r13
   14000fd08:	add    r14d,esi
   14000fd0b:	call   0x14000f704
   14000fd10:	mov    edi,eax
   14000fd12:	mov    DWORD PTR [rsp+0x3c],eax
   14000fd16:	movzx  ecx,al
   14000fd19:	call   0x14000c798
   14000fd1e:	test   eax,eax
   14000fd20:	jne    0x14000fcc5
   14000fd22:	mov    rcx,rsi
   14000fd25:	mov    esi,DWORD PTR [rsp+0x4c]
   14000fd29:	test   esi,esi
   14000fd2b:	je     0x14000fea0
   14000fd31:	cmp    edi,0x65
   14000fd34:	je     0x14000fd3f
   14000fd36:	cmp    edi,0x45
   14000fd39:	jne    0x14000fea0
   14000fd3f:	mov    eax,r12d
   14000fd42:	sub    r12d,ecx
   14000fd45:	test   eax,eax
   14000fd47:	je     0x14000fea0
   14000fd4d:	mov    rax,QWORD PTR [rsp+0x78]
   14000fd52:	lea    r9,[rbp+0x10]
   14000fd56:	lea    r8,[rsp+0x78]
   14000fd5b:	mov    BYTE PTR [rbx+rax*1],0x65
   14000fd5f:	add    rbx,rcx
   14000fd62:	lea    rax,[rbp-0x7c]
   14000fd66:	lea    rdx,[rbp-0x50]
   14000fd6a:	mov    rcx,rbx
   14000fd6d:	mov    QWORD PTR [rsp+0x20],rax
   14000fd72:	call   0x14000f66c
   14000fd77:	test   eax,eax
   14000fd79:	je     0x14000fdc2
   14000fd7b:	mov    rcx,r13
   14000fd7e:	inc    r14d
   14000fd81:	call   0x14000f704
   14000fd86:	mov    edi,eax
   14000fd88:	mov    DWORD PTR [rsp+0x3c],eax
   14000fd8c:	cmp    eax,0x2d
   14000fd8f:	jne    0x14000fe0d
   14000fd91:	mov    rax,QWORD PTR [rsp+0x78]
   14000fd96:	lea    r9,[rbp+0x10]
   14000fd9a:	lea    r8,[rsp+0x78]
   14000fd9f:	mov    BYTE PTR [rbx+rax*1],dil
   14000fda3:	lea    rax,[rbp-0x7c]
   14000fda7:	inc    rbx
   14000fdaa:	lea    rdx,[rbp-0x50]
   14000fdae:	mov    rcx,rbx
   14000fdb1:	mov    QWORD PTR [rsp+0x20],rax
   14000fdb6:	call   0x14000f66c
   14000fdbb:	xor    r8d,r8d
   14000fdbe:	test   eax,eax
   14000fdc0:	jne    0x14000fe15
   14000fdc2:	xor    ebx,ebx
   14000fdc4:	mov    eax,0x1
   14000fdc9:	cmp    DWORD PTR [rbp-0x7c],eax
   14000fdcc:	jne    0x14000fdd8
   14000fdce:	mov    rcx,QWORD PTR [rsp+0x78]
   14000fdd3:	call   0x14000b460
   14000fdd8:	cmp    edi,r15d
   14000fddb:	jne    0x14001075e
   14000fde1:	mov    eax,DWORD PTR [rsp+0x70]
   14000fde5:	test   eax,eax
   14000fde7:	jne    0x14000fdf1
   14000fde9:	mov    dl,BYTE PTR [rsp+0x39]
   14000fded:	test   dl,dl
   14000fdef:	je     0x14000fdf4
   14000fdf1:	mov    r15d,eax
   14000fdf4:	cmp    BYTE PTR [rbp-0x20],bl
   14000fdf7:	je     0x14000f833
   14000fdfd:	mov    rcx,QWORD PTR [rbp-0x28]
   14000fe01:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000fe08:	jmp    0x14000f833
   14000fe0d:	cmp    eax,0x2b
   14000fe10:	jne    0x14000fe3a
   14000fe12:	xor    r8d,r8d
   14000fe15:	mov    eax,r12d
   14000fe18:	mov    ecx,0x1
   14000fe1d:	sub    r12d,ecx
   14000fe20:	test   eax,eax
   14000fe22:	jne    0x14000fe29
   14000fe24:	mov    r12d,r8d
   14000fe27:	jmp    0x14000fe3a
   14000fe29:	add    r14d,ecx
   14000fe2c:	mov    rcx,r13
   14000fe2f:	call   0x14000f704
   14000fe34:	mov    edi,eax
   14000fe36:	mov    DWORD PTR [rsp+0x3c],eax
   14000fe3a:	movzx  ecx,dil
   14000fe3e:	jmp    0x14000fe97
   14000fe40:	mov    eax,r12d
   14000fe43:	mov    ecx,0x1
   14000fe48:	sub    r12d,ecx
   14000fe4b:	test   eax,eax
   14000fe4d:	je     0x14000fea0
   14000fe4f:	mov    rax,QWORD PTR [rsp+0x78]
   14000fe54:	add    esi,ecx
   14000fe56:	lea    r9,[rbp+0x10]
   14000fe5a:	mov    BYTE PTR [rbx+rax*1],dil
   14000fe5e:	add    rbx,rcx
   14000fe61:	lea    rax,[rbp-0x7c]
   14000fe65:	lea    r8,[rsp+0x78]
   14000fe6a:	lea    rdx,[rbp-0x50]
   14000fe6e:	mov    rcx,rbx
   14000fe71:	mov    QWORD PTR [rsp+0x20],rax
   14000fe76:	call   0x14000f66c
   14000fe7b:	test   eax,eax
   14000fe7d:	je     0x14000fdc2
   14000fe83:	mov    rcx,r13
   14000fe86:	inc    r14d
   14000fe89:	call   0x14000f704
   14000fe8e:	mov    edi,eax
   14000fe90:	mov    DWORD PTR [rsp+0x3c],eax
   14000fe94:	movzx  ecx,al
   14000fe97:	call   0x14000c798
   14000fe9c:	test   eax,eax
   14000fe9e:	jne    0x14000fe40
   14000fea0:	mov    eax,0x1
   14000fea5:	sub    r14d,eax
   14000fea8:	mov    DWORD PTR [rsp+0x34],r14d
   14000fead:	cmp    edi,r15d
   14000feb0:	je     0x14000fec1
   14000feb2:	mov    rdx,r13
   14000feb5:	mov    ecx,edi
   14000feb7:	call   0x140015af0
   14000febc:	mov    eax,0x1
   14000fec1:	xor    r8d,r8d
   14000fec4:	test   esi,esi
   14000fec6:	je     0x14000fdc2
   14000fecc:	cmp    BYTE PTR [rsp+0x30],r8b
   14000fed1:	jne    0x14000ff0c
   14000fed3:	mov    r13d,DWORD PTR [rsp+0x70]
   14000fed8:	mov    rsi,QWORD PTR [rsp+0x78]
   14000fedd:	mov    BYTE PTR [rbx+rsi*1],r8b
   14000fee1:	movsx  ebx,BYTE PTR [rsp+0x38]
   14000fee6:	mov    rcx,QWORD PTR [rip+0x1399b]        # 0x140023888
   14000feed:	add    r13d,eax
   14000fef0:	sub    ebx,eax
   14000fef2:	mov    DWORD PTR [rsp+0x70],r13d
   14000fef7:	call   QWORD PTR [rip+0xa1e3]        # 0x14001a0e0
   14000fefd:	mov    rdx,QWORD PTR [rbp-0x60]
   14000ff01:	lea    r9,[rbp-0x38]
   14000ff05:	mov    r8,rsi
   14000ff08:	mov    ecx,ebx
   14000ff0a:	call   rax
   14000ff0c:	mov    r12,QWORD PTR [rsp+0x50]
   14000ff11:	jmp    0x140010664
   14000ff16:	mov    r11d,0x1
   14000ff1c:	test   eax,eax
   14000ff1e:	jne    0x14000ff2c
   14000ff20:	add    esi,r11d
   14000ff23:	mov    DWORD PTR [rsp+0x60],r11d
   14000ff28:	mov    DWORD PTR [rsp+0x44],esi
   14000ff2c:	test   r12b,r12b
   14000ff2f:	mov    r12,QWORD PTR [rsp+0x50]
   14000ff34:	jle    0x14001023c
   14000ff3a:	mov    sil,r11b
   14000ff3d:	jmp    0x14001023f
   14000ff42:	cmp    r14d,0x70
   14000ff46:	je     0x1400103fe
   14000ff4c:	cmp    r14d,0x73
   14000ff50:	je     0x140010224
   14000ff56:	cmp    r14d,0x75
   14000ff5a:	je     0x140010415
   14000ff60:	cmp    r14d,0x78
   14000ff64:	je     0x14000fb74
   14000ff6a:	cmp    r14d,0x7b
   14000ff6e:	je     0x14000ffa7
   14000ff70:	mov    r12,QWORD PTR [rsp+0x50]
   14000ff75:	movzx  eax,BYTE PTR [r12]
   14000ff7a:	cmp    eax,edi
   14000ff7c:	jne    0x14001070f
   14000ff82:	mov    dl,BYTE PTR [rsp+0x39]
   14000ff86:	mov    r14d,DWORD PTR [rsp+0x34]
   14000ff8b:	add    dl,r15b
   14000ff8e:	mov    BYTE PTR [rsp+0x39],dl
   14000ff92:	test   cl,cl
   14000ff94:	jne    0x140010664
   14000ff9a:	mov    r9,QWORD PTR [rbp-0x18]
   14000ff9e:	mov    QWORD PTR [rbp-0x48],r9
   14000ffa2:	jmp    0x140010664
   14000ffa7:	mov    esi,DWORD PTR [rbp-0x58]
   14000ffaa:	test   r12b,r12b
   14000ffad:	mov    r12,QWORD PTR [rsp+0x50]
   14000ffb2:	mov    eax,0x1
   14000ffb7:	movzx  esi,sil
   14000ffbb:	cmovg  esi,eax
   14000ffbe:	add    r12,rax
   14000ffc1:	cmp    BYTE PTR [r12],0x5e
   14000ffc6:	jne    0x14000ffd0
   14000ffc8:	inc    r12
   14000ffcb:	mov    BYTE PTR [rsp+0x58],r15b
   14000ffd0:	xor    edx,edx
   14000ffd2:	lea    rcx,[rbp-0x10]
   14000ffd6:	lea    r8d,[rdx+0x20]
   14000ffda:	call   0x14000a530
   14000ffdf:	cmp    BYTE PTR [r12],0x5d
   14000ffe4:	mov    r11d,0x1
   14000ffea:	jne    0x140010090
   14000fff0:	mov    r13b,0x5d
   14000fff3:	add    r12,r11
   14000fff6:	mov    BYTE PTR [rbp-0x5],0x20
   14000fffa:	jmp    0x140010090
   14000ffff:	add    r12,r11
   140010002:	cmp    al,0x2d
   140010004:	jne    0x140010073
   140010006:	test   r13b,r13b
   140010009:	je     0x140010073
   14001000b:	mov    cl,BYTE PTR [r12]
   14001000f:	cmp    cl,0x5d
   140010012:	je     0x140010073
   140010014:	add    r12,r11
   140010017:	cmp    r13b,cl
   14001001a:	jae    0x140010021
   14001001c:	mov    r9b,cl
   14001001f:	jmp    0x140010027
   140010021:	mov    r9b,r13b
   140010024:	mov    r13b,cl
   140010027:	cmp    r13b,r9b
   14001002a:	jae    0x140010053
   14001002c:	movzx  r10d,r13b
   140010030:	movzx  ecx,r13b
   140010034:	mov    r8,r10
   140010037:	mov    edx,r11d
   14001003a:	and    ecx,0x7
   14001003d:	shr    r8,0x3
   140010041:	add    r13b,r11b
   140010044:	shl    dl,cl
   140010046:	add    r10,r11
   140010049:	or     BYTE PTR [rbp+r8*1-0x10],dl
   14001004e:	cmp    r13b,r9b
   140010051:	jb     0x140010030
   140010053:	movzx  eax,r9b
   140010057:	movzx  r8d,r9b
   14001005b:	mov    edx,r11d
   14001005e:	and    eax,0x7
   140010061:	shr    r8,0x3
   140010065:	mov    cl,al
   140010067:	shl    dl,cl
   140010069:	or     BYTE PTR [rbp+r8*1-0x10],dl
   14001006e:	xor    r13b,r13b
   140010071:	jmp    0x140010090
   140010073:	movzx  r8d,al
   140010077:	mov    r13b,al
   14001007a:	movzx  eax,al
   14001007d:	and    eax,0x7
   140010080:	mov    edx,r11d
   140010083:	shr    r8,0x3
   140010087:	mov    cl,al
   140010089:	shl    dl,cl
   14001008b:	or     BYTE PTR [rbp+r8*1-0x10],dl
   140010090:	mov    al,BYTE PTR [r12]
   140010094:	cmp    al,0x5d
   140010096:	jne    0x14000ffff
   14001009c:	xor    ebx,ebx
   14001009e:	cmp    al,bl
   1400100a0:	je     0x14000fdc4
   1400100a6:	jmp    0x14001023f
   1400100ab:	cmp    edi,0x2b
   1400100ae:	jne    0x1400100c6
   1400100b0:	sub    esi,ecx
   1400100b2:	mov    DWORD PTR [rsp+0x44],esi
   1400100b6:	jne    0x140010190
   1400100bc:	test   eax,eax
   1400100be:	je     0x140010190
   1400100c4:	mov    bl,cl
   1400100c6:	mov    r13d,DWORD PTR [rsp+0x34]
   1400100cb:	mov    r12,QWORD PTR [rsp+0x68]
   1400100d0:	cmp    edi,0x30
   1400100d3:	jne    0x140010128
   1400100d5:	add    r13d,ecx
   1400100d8:	mov    rcx,r12
   1400100db:	mov    DWORD PTR [rsp+0x34],r13d
   1400100e0:	call   0x14000f704
   1400100e5:	mov    edi,eax
   1400100e7:	mov    DWORD PTR [rsp+0x3c],eax
   1400100eb:	cmp    al,0x78
   1400100ed:	je     0x1400101e4
   1400100f3:	cmp    al,0x58
   1400100f5:	je     0x1400101e4
   1400100fb:	mov    eax,0x1
   140010100:	mov    DWORD PTR [rsp+0x4c],eax
   140010104:	cmp    r14d,0x78
   140010108:	je     0x1400101bc
   14001010e:	xor    r8d,r8d
   140010111:	cmp    DWORD PTR [rsp+0x60],r8d
   140010116:	je     0x140010122
   140010118:	sub    esi,eax
   14001011a:	mov    DWORD PTR [rsp+0x44],esi
   14001011e:	jne    0x140010122
   140010120:	add    bl,al
   140010122:	mov    r14d,0x6f
   140010128:	mov    r12d,DWORD PTR [rsp+0x48]
   14001012d:	test   r12d,r12d
   140010130:	je     0x140010514
   140010136:	mov    rsi,QWORD PTR [rbp-0x70]
   14001013a:	test   bl,bl
   14001013c:	jne    0x1400104fd
   140010142:	mov    r13d,DWORD PTR [rsp+0x44]
   140010147:	mov    rbx,QWORD PTR [rsp+0x68]
   14001014c:	cmp    r14d,0x78
   140010150:	je     0x14001046b
   140010156:	cmp    r14d,0x70
   14001015a:	je     0x14001046b
   140010160:	movzx  ecx,dil
   140010164:	call   0x14000c798
   140010169:	xor    r8d,r8d
   14001016c:	test   eax,eax
   14001016e:	je     0x1400104e3
   140010174:	cmp    r14d,0x6f
   140010178:	jne    0x140010462
   14001017e:	cmp    edi,0x38
   140010181:	jge    0x1400104e3
   140010187:	shl    rsi,0x3
   14001018b:	jmp    0x1400104a5
   140010190:	mov    r13d,DWORD PTR [rsp+0x34]
   140010195:	mov    r12,QWORD PTR [rsp+0x68]
   14001019a:	add    r13d,ecx
   14001019d:	mov    rcx,r12
   1400101a0:	mov    DWORD PTR [rsp+0x34],r13d
   1400101a5:	call   0x14000f704
   1400101aa:	xor    r8d,r8d
   1400101ad:	mov    edi,eax
   1400101af:	mov    DWORD PTR [rsp+0x3c],eax
   1400101b3:	lea    ecx,[r8+0x1]
   1400101b7:	jmp    0x1400100d0
   1400101bc:	sub    r13d,eax
   1400101bf:	mov    DWORD PTR [rsp+0x34],r13d
   1400101c4:	cmp    edi,r15d
   1400101c7:	je     0x1400101d3
   1400101c9:	mov    rdx,r12
   1400101cc:	mov    ecx,edi
   1400101ce:	call   0x140015af0
   1400101d3:	mov    edi,0x30
   1400101d8:	xor    r8d,r8d
   1400101db:	mov    DWORD PTR [rsp+0x3c],edi
   1400101df:	jmp    0x140010128
   1400101e4:	mov    r14d,0x1
   1400101ea:	mov    rcx,r12
   1400101ed:	add    r13d,r14d
   1400101f0:	mov    DWORD PTR [rsp+0x34],r13d
   1400101f5:	call   0x14000f704
   1400101fa:	xor    r8d,r8d
   1400101fd:	mov    edi,eax
   1400101ff:	mov    DWORD PTR [rsp+0x3c],eax
   140010203:	cmp    DWORD PTR [rsp+0x60],r8d
   140010208:	je     0x140010219
   14001020a:	sub    esi,0x2
   14001020d:	mov    DWORD PTR [rsp+0x44],esi
   140010211:	cmp    esi,r14d
   140010214:	jge    0x140010219
   140010216:	add    bl,r14b
   140010219:	mov    r14d,0x78
   14001021f:	jmp    0x140010128
   140010224:	movzx  esi,BYTE PTR [rbp-0x58]
   140010228:	test   r12b,r12b
   14001022b:	mov    r12,QWORD PTR [rsp+0x50]
   140010230:	mov    r11d,0x1
   140010236:	cmovg  esi,r11d
   14001023a:	jmp    0x14001023f
   14001023c:	mov    esi,DWORD PTR [rbp-0x58]
   14001023f:	mov    ecx,DWORD PTR [rsp+0x34]
   140010243:	mov    rbx,QWORD PTR [rbp-0x60]
   140010247:	sub    ecx,r11d
   14001024a:	mov    DWORD PTR [rsp+0x34],ecx
   14001024e:	cmp    edi,r15d
   140010251:	je     0x140010269
   140010253:	mov    rdx,QWORD PTR [rsp+0x68]
   140010258:	mov    ecx,edi
   14001025a:	call   0x140015af0
   14001025f:	mov    ecx,DWORD PTR [rsp+0x34]
   140010263:	mov    r11d,0x1
   140010269:	mov    r13d,DWORD PTR [rsp+0x44]
   14001026e:	xor    r8d,r8d
   140010271:	cmp    DWORD PTR [rsp+0x60],r8d
   140010276:	je     0x140010286
   140010278:	mov    eax,r13d
   14001027b:	sub    r13d,r11d
   14001027e:	test   eax,eax
   140010280:	je     0x1400103bc
   140010286:	add    ecx,r11d
   140010289:	mov    DWORD PTR [rsp+0x34],ecx
   14001028d:	mov    rcx,QWORD PTR [rsp+0x68]
   140010292:	call   0x14000f704
   140010297:	movsxd rdi,eax
   14001029a:	mov    DWORD PTR [rsp+0x3c],edi
   14001029e:	cmp    edi,r15d
   1400102a1:	je     0x140010397
   1400102a7:	cmp    r14d,0x63
   1400102ab:	je     0x1400102f1
   1400102ad:	cmp    r14d,0x73
   1400102b1:	jne    0x1400102c6
   1400102b3:	cmp    edi,0x9
   1400102b6:	jl     0x1400102c1
   1400102b8:	cmp    edi,0xd
   1400102bb:	jle    0x140010397
   1400102c1:	cmp    edi,0x20
   1400102c4:	jne    0x1400102f1
   1400102c6:	cmp    r14d,0x7b
   1400102ca:	jne    0x140010397
   1400102d0:	mov    rax,rdi
   1400102d3:	mov    edx,edi
   1400102d5:	sar    rax,0x3
   1400102d9:	and    edx,0x7
   1400102dc:	movsx  ecx,BYTE PTR [rbp+rax*1-0x10]
   1400102e1:	movsx  eax,BYTE PTR [rsp+0x58]
   1400102e6:	xor    ecx,eax
   1400102e8:	bt     ecx,edx
   1400102eb:	jae    0x140010397
   1400102f1:	xor    r8d,r8d
   1400102f4:	cmp    BYTE PTR [rsp+0x30],r8b
   1400102f9:	jne    0x140010385
   1400102ff:	test   sil,sil
   140010302:	je     0x14001036f
   140010304:	movzx  ecx,dil
   140010308:	mov    BYTE PTR [rbp-0x68],dil
   14001030c:	call   0x1400152d0
   140010311:	test   eax,eax
   140010313:	je     0x140010326
   140010315:	mov    rcx,QWORD PTR [rsp+0x68]
   14001031a:	inc    DWORD PTR [rsp+0x34]
   14001031e:	call   0x14000f704
   140010323:	mov    BYTE PTR [rbp-0x67],al
   140010326:	mov    eax,0x3f
   14001032b:	lea    r9,[rbp-0x38]
   14001032f:	lea    rdx,[rbp-0x68]
   140010333:	mov    WORD PTR [rbp-0x78],ax
   140010337:	mov    rax,QWORD PTR [rbp-0x38]
   14001033b:	lea    rcx,[rbp-0x78]
   14001033f:	movsxd r8,DWORD PTR [rax+0x10c]
   140010346:	call   0x140015bfc
   14001034b:	mov    rax,QWORD PTR [rbp-0x60]
   14001034f:	movzx  r11d,WORD PTR [rbp-0x78]
   140010354:	mov    ecx,DWORD PTR [rsp+0x34]
   140010358:	mov    WORD PTR [rax],r11w
   14001035c:	add    rax,0x2
   140010360:	mov    QWORD PTR [rbp-0x60],rax
   140010364:	mov    r11d,0x1
   14001036a:	jmp    0x14001026e
   14001036f:	mov    rax,QWORD PTR [rbp-0x60]
   140010373:	mov    r11d,0x1
   140010379:	mov    BYTE PTR [rax],dil
   14001037c:	add    rax,r11
   14001037f:	mov    QWORD PTR [rbp-0x60],rax
   140010383:	jmp    0x14001038e
   140010385:	mov    r11d,0x1
   14001038b:	add    rbx,r11
   14001038e:	mov    ecx,DWORD PTR [rsp+0x34]
   140010392:	jmp    0x140010271
   140010397:	mov    r11d,0x1
   14001039d:	sub    DWORD PTR [rsp+0x34],r11d
   1400103a2:	cmp    edi,r15d
   1400103a5:	je     0x1400103b9
   1400103a7:	mov    rdx,QWORD PTR [rsp+0x68]
   1400103ac:	mov    ecx,edi
   1400103ae:	call   0x140015af0
   1400103b3:	mov    r11d,0x1
   1400103b9:	xor    r8d,r8d
   1400103bc:	mov    rax,QWORD PTR [rbp-0x60]
   1400103c0:	cmp    rbx,rax
   1400103c3:	je     0x14000fdc2
   1400103c9:	cmp    BYTE PTR [rsp+0x30],r8b
   1400103ce:	jne    0x140010645
   1400103d4:	add    DWORD PTR [rsp+0x70],r11d
   1400103d9:	cmp    r14d,0x63
   1400103dd:	mov    r14d,DWORD PTR [rsp+0x34]
   1400103e2:	je     0x140010664
   1400103e8:	test   sil,sil
   1400103eb:	je     0x1400103f6
   1400103ed:	mov    WORD PTR [rax],r8w
   1400103f1:	jmp    0x140010664
   1400103f6:	mov    BYTE PTR [rax],r8b
   1400103f9:	jmp    0x140010664
   1400103fe:	mov    r12d,DWORD PTR [rsp+0x48]
   140010403:	mov    ecx,0x1
   140010408:	mov    QWORD PTR [rbp-0x70],r8
   14001040c:	add    r12d,ecx
   14001040f:	mov    BYTE PTR [rsp+0x38],cl
   140010413:	jmp    0x14001041f
   140010415:	mov    r12d,DWORD PTR [rsp+0x48]
   14001041a:	mov    ecx,0x1
   14001041f:	cmp    edi,0x2d
   140010422:	jne    0x14001042a
   140010424:	mov    BYTE PTR [rsp+0x40],cl
   140010428:	jmp    0x140010433
   14001042a:	cmp    edi,0x2b
   14001042d:	jne    0x14001012d
   140010433:	sub    esi,ecx
   140010435:	mov    DWORD PTR [rsp+0x44],esi
   140010439:	jne    0x140010446
   14001043b:	test   eax,eax
   14001043d:	je     0x140010446
   14001043f:	mov    bl,cl
   140010441:	jmp    0x14001012d
   140010446:	add    DWORD PTR [rsp+0x34],ecx
   14001044a:	mov    rcx,QWORD PTR [rsp+0x68]
   14001044f:	call   0x14000f704
   140010454:	xor    r8d,r8d
   140010457:	mov    edi,eax
   140010459:	mov    DWORD PTR [rsp+0x3c],eax
   14001045d:	jmp    0x14001012d
   140010462:	lea    rsi,[rsi+rsi*4]
   140010466:	add    rsi,rsi
   140010469:	jmp    0x1400104a5
   14001046b:	movzx  esi,dil
   14001046f:	mov    ecx,esi
   140010471:	call   0x14000c818
   140010476:	xor    r8d,r8d
   140010479:	test   eax,eax
   14001047b:	je     0x1400104e3
   14001047d:	shl    QWORD PTR [rbp-0x70],0x4
   140010482:	mov    ecx,esi
   140010484:	movsx  ebx,dil
   140010488:	call   0x14000c798
   14001048d:	mov    rsi,QWORD PTR [rbp-0x70]
   140010491:	mov    edi,ebx
   140010493:	and    edi,0xffffffdf
   140010496:	xor    r8d,r8d
   140010499:	sub    edi,0x7
   14001049c:	test   eax,eax
   14001049e:	cmovne edi,ebx
   1400104a1:	mov    DWORD PTR [rsp+0x3c],edi
   1400104a5:	lea    eax,[rdi-0x30]
   1400104a8:	mov    edx,0x1
   1400104ad:	add    DWORD PTR [rsp+0x4c],edx
   1400104b1:	movsxd rcx,eax
   1400104b4:	add    rsi,rcx
   1400104b7:	mov    QWORD PTR [rbp-0x70],rsi
   1400104bb:	cmp    DWORD PTR [rsp+0x60],r8d
   1400104c0:	je     0x1400104c7
   1400104c2:	sub    r13d,edx
   1400104c5:	je     0x1400104fd
   1400104c7:	mov    rbx,QWORD PTR [rsp+0x68]
   1400104cc:	add    DWORD PTR [rsp+0x34],edx
   1400104d0:	mov    rcx,rbx
   1400104d3:	call   0x14000f704
   1400104d8:	mov    edi,eax
   1400104da:	mov    DWORD PTR [rsp+0x3c],eax
   1400104de:	jmp    0x14001014c
   1400104e3:	dec    DWORD PTR [rsp+0x34]
   1400104e7:	cmp    edi,r15d
   1400104ea:	je     0x1400104f9
   1400104ec:	mov    rdx,rbx
   1400104ef:	mov    ecx,edi
   1400104f1:	call   0x140015af0
   1400104f6:	xor    r8d,r8d
   1400104f9:	mov    rsi,QWORD PTR [rbp-0x70]
   1400104fd:	cmp    BYTE PTR [rsp+0x40],r8b
   140010502:	je     0x140010606
   140010508:	neg    rsi
   14001050b:	mov    QWORD PTR [rbp-0x70],rsi
   14001050f:	jmp    0x140010606
   140010514:	mov    esi,DWORD PTR [rsp+0x5c]
   140010518:	test   bl,bl
   14001051a:	jne    0x1400105f9
   140010520:	mov    r13d,DWORD PTR [rsp+0x44]
   140010525:	mov    rbx,QWORD PTR [rsp+0x68]
   14001052a:	cmp    r14d,0x78
   14001052e:	je     0x140010566
   140010530:	cmp    r14d,0x70
   140010534:	je     0x140010566
   140010536:	movzx  ecx,dil
   14001053a:	call   0x14000c798
   14001053f:	xor    r8d,r8d
   140010542:	test   eax,eax
   140010544:	je     0x1400105df
   14001054a:	cmp    r14d,0x6f
   14001054e:	jne    0x14001055e
   140010550:	cmp    edi,0x38
   140010553:	jge    0x1400105df
   140010559:	shl    esi,0x3
   14001055c:	jmp    0x1400105a6
   14001055e:	lea    eax,[rsi+rsi*4]
   140010561:	lea    esi,[rax+rax*1]
   140010564:	jmp    0x1400105a6
   140010566:	movzx  esi,dil
   14001056a:	mov    ecx,esi
   14001056c:	call   0x14000c818
   140010571:	xor    r8d,r8d
   140010574:	test   eax,eax
   140010576:	je     0x1400105df
   140010578:	mov    eax,DWORD PTR [rsp+0x5c]
   14001057c:	mov    ecx,esi
   14001057e:	movsx  ebx,dil
   140010582:	shl    eax,0x4
   140010585:	mov    DWORD PTR [rsp+0x5c],eax
   140010589:	call   0x14000c798
   14001058e:	mov    esi,DWORD PTR [rsp+0x5c]
   140010592:	mov    edi,ebx
   140010594:	xor    r8d,r8d
   140010597:	and    edi,0xffffffdf
   14001059a:	sub    edi,0x7
   14001059d:	test   eax,eax
   14001059f:	cmovne edi,ebx
   1400105a2:	mov    DWORD PTR [rsp+0x3c],edi
   1400105a6:	mov    eax,0x1
   1400105ab:	lea    esi,[rsi+rdi*1-0x30]
   1400105af:	add    DWORD PTR [rsp+0x4c],eax
   1400105b3:	mov    DWORD PTR [rsp+0x5c],esi
   1400105b7:	cmp    DWORD PTR [rsp+0x60],r8d
   1400105bc:	je     0x1400105c3
   1400105be:	sub    r13d,eax
   1400105c1:	je     0x1400105f9
   1400105c3:	mov    rbx,QWORD PTR [rsp+0x68]
   1400105c8:	add    DWORD PTR [rsp+0x34],eax
   1400105cc:	mov    rcx,rbx
   1400105cf:	call   0x14000f704
   1400105d4:	mov    edi,eax
   1400105d6:	mov    DWORD PTR [rsp+0x3c],eax
   1400105da:	jmp    0x14001052a
   1400105df:	dec    DWORD PTR [rsp+0x34]
   1400105e3:	cmp    edi,r15d
   1400105e6:	je     0x1400105f5
   1400105e8:	mov    rdx,rbx
   1400105eb:	mov    ecx,edi
   1400105ed:	call   0x140015af0
   1400105f2:	xor    r8d,r8d
   1400105f5:	mov    esi,DWORD PTR [rsp+0x5c]
   1400105f9:	cmp    BYTE PTR [rsp+0x40],r8b
   1400105fe:	je     0x140010606
   140010600:	neg    esi
   140010602:	mov    DWORD PTR [rsp+0x5c],esi
   140010606:	mov    eax,DWORD PTR [rsp+0x4c]
   14001060a:	cmp    r14d,0x46
   14001060e:	cmove  eax,r8d
   140010612:	test   eax,eax
   140010614:	je     0x14000fdc2
   14001061a:	cmp    BYTE PTR [rsp+0x30],r8b
   14001061f:	jne    0x140010640
   140010621:	inc    DWORD PTR [rsp+0x70]
   140010625:	mov    eax,DWORD PTR [rsp+0x5c]
   140010629:	jmp    0x140010630
   14001062b:	mov    r12d,DWORD PTR [rsp+0x48]
   140010630:	mov    rcx,QWORD PTR [rbp-0x60]
   140010634:	test   r12d,r12d
   140010637:	je     0x14001064c
   140010639:	mov    rax,QWORD PTR [rbp-0x70]
   14001063d:	mov    QWORD PTR [rcx],rax
   140010640:	mov    r12,QWORD PTR [rsp+0x50]
   140010645:	mov    r14d,DWORD PTR [rsp+0x34]
   14001064a:	jmp    0x140010664
   14001064c:	mov    r12,QWORD PTR [rsp+0x50]
   140010651:	mov    r14d,DWORD PTR [rsp+0x34]
   140010656:	cmp    BYTE PTR [rsp+0x38],r8b
   14001065b:	je     0x140010661
   14001065d:	mov    DWORD PTR [rcx],eax
   14001065f:	jmp    0x140010664
   140010661:	mov    WORD PTR [rcx],ax
   140010664:	mov    rsi,QWORD PTR [rsp+0x68]
   140010669:	mov    r13d,0x1
   14001066f:	add    BYTE PTR [rsp+0x39],r13b
   140010674:	add    r12,r13
   140010677:	mov    QWORD PTR [rsp+0x50],r12
   14001067c:	jmp    0x1400106e0
   14001067e:	cmp    BYTE PTR [r12],cl
   140010682:	jne    0x14001068f
   140010684:	lea    rax,[r12+0x1]
   140010689:	cmp    BYTE PTR [rax],cl
   14001068b:	cmove  r12,rax
   14001068f:	add    r14d,r13d
   140010692:	mov    rcx,rsi
   140010695:	mov    DWORD PTR [rsp+0x34],r14d
   14001069a:	call   0x14000f704
   14001069f:	mov    edi,eax
   1400106a1:	mov    DWORD PTR [rsp+0x3c],eax
   1400106a5:	movzx  eax,BYTE PTR [r12]
   1400106aa:	add    r12,r13
   1400106ad:	mov    QWORD PTR [rsp+0x50],r12
   1400106b2:	cmp    eax,edi
   1400106b4:	jne    0x140010746
   1400106ba:	movzx  ecx,dil
   1400106be:	call   0x1400152d0
   1400106c3:	test   eax,eax
   1400106c5:	je     0x1400106e0
   1400106c7:	mov    rcx,rsi
   1400106ca:	call   0x14000f704
   1400106cf:	movzx  ecx,BYTE PTR [r12]
   1400106d4:	add    r12,r13
   1400106d7:	mov    QWORD PTR [rsp+0x50],r12
   1400106dc:	cmp    ecx,eax
   1400106de:	jne    0x140010729
   1400106e0:	cmp    edi,r15d
   1400106e3:	jne    0x1400106fc
   1400106e5:	cmp    BYTE PTR [r12],0x25
   1400106ea:	jne    0x14000fdc2
   1400106f0:	cmp    BYTE PTR [r12+0x1],0x6e
   1400106f6:	jne    0x14000fdc2
   1400106fc:	mov    al,BYTE PTR [r12]
   140010700:	xor    ebx,ebx
   140010702:	test   al,al
   140010704:	je     0x14000fdc4
   14001070a:	jmp    0x14000f86b
   14001070f:	cmp    edi,r15d
   140010712:	je     0x14000fdc2
   140010718:	mov    rdx,QWORD PTR [rsp+0x68]
   14001071d:	mov    ecx,edi
   14001071f:	call   0x140015af0
   140010724:	jmp    0x14000fdc2
   140010729:	cmp    eax,r15d
   14001072c:	je     0x140010738
   14001072e:	mov    rdx,rsi
   140010731:	mov    ecx,eax
   140010733:	call   0x140015af0
   140010738:	cmp    edi,r15d
   14001073b:	je     0x14000fdc2
   140010741:	mov    rdx,rsi
   140010744:	jmp    0x14001071d
   140010746:	cmp    edi,r15d
   140010749:	je     0x14000fdc4
   14001074f:	mov    rdx,rsi
   140010752:	mov    ecx,edi
   140010754:	call   0x140015af0
   140010759:	jmp    0x14000fdc4
   14001075e:	mov    r13d,DWORD PTR [rsp+0x70]
   140010763:	cmp    BYTE PTR [rbp-0x20],bl
   140010766:	je     0x140010773
   140010768:	mov    rcx,QWORD PTR [rbp-0x28]
   14001076c:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140010773:	mov    eax,r13d
   140010776:	mov    rcx,QWORD PTR [rbp+0x170]
   14001077d:	xor    rcx,rsp
   140010780:	call   0x14000a820
   140010785:	mov    rbx,QWORD PTR [rsp+0x2d0]
   14001078d:	add    rsp,0x280
   140010794:	pop    r15
   140010796:	pop    r14
   140010798:	pop    r13
   14001079a:	pop    r12
   14001079c:	pop    rdi
   14001079d:	pop    rsi
   14001079e:	pop    rbp
   14001079f:	ret    
   1400107a0:	mov    rax,rsp
   1400107a3:	mov    QWORD PTR [rax+0x10],rbx
   1400107a7:	mov    QWORD PTR [rax+0x18],rbp
   1400107ab:	mov    QWORD PTR [rax+0x20],rsi
   1400107af:	mov    DWORD PTR [rax+0x8],ecx
   1400107b2:	push   rdi
   1400107b3:	sub    rsp,0x20
   1400107b7:	mov    rcx,rdx
   1400107ba:	mov    rbx,rdx
   1400107bd:	call   0x140010a7c
   1400107c2:	mov    ecx,DWORD PTR [rbx+0x18]
   1400107c5:	movsxd rsi,eax
   1400107c8:	test   cl,0x82
   1400107cb:	jne    0x1400107e4
   1400107cd:	call   0x14000bdc0
   1400107d2:	mov    DWORD PTR [rax],0x9
   1400107d8:	or     DWORD PTR [rbx+0x18],0x20
   1400107dc:	or     eax,0xffffffff
   1400107df:	jmp    0x140010918
   1400107e4:	test   cl,0x40
   1400107e7:	je     0x1400107f6
   1400107e9:	call   0x14000bdc0
   1400107ee:	mov    DWORD PTR [rax],0x22
   1400107f4:	jmp    0x1400107d8
   1400107f6:	xor    edi,edi
   1400107f8:	test   cl,0x1
   1400107fb:	je     0x140010816
   1400107fd:	mov    DWORD PTR [rbx+0x8],edi
   140010800:	test   cl,0x10
   140010803:	je     0x140010892
   140010809:	mov    rax,QWORD PTR [rbx+0x10]
   14001080d:	and    ecx,0xfffffffe
   140010810:	mov    QWORD PTR [rbx],rax
   140010813:	mov    DWORD PTR [rbx+0x18],ecx
   140010816:	mov    eax,DWORD PTR [rbx+0x18]
   140010819:	mov    DWORD PTR [rbx+0x8],edi
   14001081c:	and    eax,0xffffffef
   14001081f:	or     eax,0x2
   140010822:	mov    DWORD PTR [rbx+0x18],eax
   140010825:	test   eax,0x10c
   14001082a:	jne    0x14001085b
   14001082c:	call   0x14000ab98
   140010831:	add    rax,0x30
   140010835:	cmp    rbx,rax
   140010838:	je     0x140010848
   14001083a:	call   0x14000ab98
   14001083f:	add    rax,0x60
   140010843:	cmp    rbx,rax
   140010846:	jne    0x140010853
   140010848:	mov    ecx,esi
   14001084a:	call   0x140015228
   14001084f:	test   eax,eax
   140010851:	jne    0x14001085b
   140010853:	mov    rcx,rbx
   140010856:	call   0x140015ef8
   14001085b:	test   DWORD PTR [rbx+0x18],0x108
   140010862:	je     0x1400108f5
   140010868:	mov    ebp,DWORD PTR [rbx]
   14001086a:	mov    rdx,QWORD PTR [rbx+0x10]
   14001086e:	sub    ebp,DWORD PTR [rbx+0x10]
   140010871:	lea    rax,[rdx+0x1]
   140010875:	mov    QWORD PTR [rbx],rax
   140010878:	mov    eax,DWORD PTR [rbx+0x24]
   14001087b:	dec    eax
   14001087d:	mov    DWORD PTR [rbx+0x8],eax
   140010880:	test   ebp,ebp
   140010882:	jle    0x14001089d
   140010884:	mov    r8d,ebp
   140010887:	mov    ecx,esi
   140010889:	call   0x14001210c
   14001088e:	mov    edi,eax
   140010890:	jmp    0x1400108e9
   140010892:	or     ecx,0x20
   140010895:	mov    DWORD PTR [rbx+0x18],ecx
   140010898:	jmp    0x1400107dc
   14001089d:	cmp    esi,0xffffffff
   1400108a0:	je     0x1400108c5
   1400108a2:	cmp    esi,0xfffffffe
   1400108a5:	je     0x1400108c5
   1400108a7:	mov    rcx,rsi
   1400108aa:	mov    rax,rsi
   1400108ad:	lea    rdx,[rip+0x151cc]        # 0x140025a80
   1400108b4:	and    ecx,0x1f
   1400108b7:	sar    rax,0x5
   1400108bb:	imul   rcx,rcx,0x58
   1400108bf:	add    rcx,QWORD PTR [rdx+rax*8]
   1400108c3:	jmp    0x1400108cc
   1400108c5:	lea    rcx,[rip+0x12fe4]        # 0x1400238b0
   1400108cc:	test   BYTE PTR [rcx+0x8],0x20
   1400108d0:	je     0x1400108e9
   1400108d2:	xor    edx,edx
   1400108d4:	mov    ecx,esi
   1400108d6:	lea    r8d,[rdx+0x2]
   1400108da:	call   0x140015e14
   1400108df:	cmp    rax,0xffffffffffffffff
   1400108e3:	je     0x1400107d8
   1400108e9:	mov    rcx,QWORD PTR [rbx+0x10]
   1400108ed:	mov    al,BYTE PTR [rsp+0x30]
   1400108f1:	mov    BYTE PTR [rcx],al
   1400108f3:	jmp    0x14001090b
   1400108f5:	mov    ebp,0x1
   1400108fa:	lea    rdx,[rsp+0x30]
   1400108ff:	mov    ecx,esi
   140010901:	mov    r8d,ebp
   140010904:	call   0x14001210c
   140010909:	mov    edi,eax
   14001090b:	cmp    edi,ebp
   14001090d:	jne    0x1400107d8
   140010913:	movzx  eax,BYTE PTR [rsp+0x30]
   140010918:	mov    rbx,QWORD PTR [rsp+0x38]
   14001091d:	mov    rbp,QWORD PTR [rsp+0x40]
   140010922:	mov    rsi,QWORD PTR [rsp+0x48]
   140010927:	add    rsp,0x20
   14001092b:	pop    rdi
   14001092c:	ret    
   14001092d:	int3   
   14001092e:	int3   
   14001092f:	int3   
   140010930:	mov    QWORD PTR [rsp+0x8],rcx
   140010935:	sub    rsp,0x88
   14001093c:	lea    rcx,[rip+0x14b2d]        # 0x140025470
   140010943:	call   QWORD PTR [rip+0x9857]        # 0x14001a1a0
   140010949:	mov    rax,QWORD PTR [rip+0x14c18]        # 0x140025568
   140010950:	mov    QWORD PTR [rsp+0x58],rax
   140010955:	xor    r8d,r8d
   140010958:	lea    rdx,[rsp+0x60]
   14001095d:	mov    rcx,QWORD PTR [rsp+0x58]
   140010962:	call   0x140019912
   140010967:	mov    QWORD PTR [rsp+0x50],rax
   14001096c:	cmp    QWORD PTR [rsp+0x50],0x0
   140010972:	je     0x1400109b5
   140010974:	mov    QWORD PTR [rsp+0x38],0x0
   14001097d:	lea    rax,[rsp+0x48]
   140010982:	mov    QWORD PTR [rsp+0x30],rax
   140010987:	lea    rax,[rsp+0x40]
   14001098c:	mov    QWORD PTR [rsp+0x28],rax
   140010991:	lea    rax,[rip+0x14ad8]        # 0x140025470
   140010998:	mov    QWORD PTR [rsp+0x20],rax
   14001099d:	mov    r9,QWORD PTR [rsp+0x50]
   1400109a2:	mov    r8,QWORD PTR [rsp+0x58]
   1400109a7:	mov    rdx,QWORD PTR [rsp+0x60]
   1400109ac:	xor    ecx,ecx
   1400109ae:	call   0x14001990c
   1400109b3:	jmp    0x1400109d7
   1400109b5:	mov    rax,QWORD PTR [rsp+0x88]
   1400109bd:	mov    QWORD PTR [rip+0x14ba4],rax        # 0x140025568
   1400109c4:	lea    rax,[rsp+0x88]
   1400109cc:	add    rax,0x8
   1400109d0:	mov    QWORD PTR [rip+0x14b31],rax        # 0x140025508
   1400109d7:	mov    rax,QWORD PTR [rip+0x14b8a]        # 0x140025568
   1400109de:	mov    QWORD PTR [rip+0x149fb],rax        # 0x1400253e0
   1400109e5:	mov    rax,QWORD PTR [rsp+0x90]
   1400109ed:	mov    QWORD PTR [rip+0x14afc],rax        # 0x1400254f0
   1400109f4:	mov    DWORD PTR [rip+0x149d2],0xc0000409        # 0x1400253d0
   1400109fe:	mov    DWORD PTR [rip+0x149cc],0x1        # 0x1400253d4
   140010a08:	mov    rax,QWORD PTR [rip+0x126b1]        # 0x1400230c0
   140010a0f:	mov    QWORD PTR [rsp+0x68],rax
   140010a14:	mov    rax,QWORD PTR [rip+0x126ad]        # 0x1400230c8
   140010a1b:	mov    QWORD PTR [rsp+0x70],rax
   140010a20:	call   QWORD PTR [rip+0x9762]        # 0x14001a188
   140010a26:	mov    DWORD PTR [rip+0x14a3c],eax        # 0x140025468
   140010a2c:	mov    ecx,0x1
   140010a31:	call   0x140014dcc
   140010a36:	xor    ecx,ecx
   140010a38:	call   QWORD PTR [rip+0x9742]        # 0x14001a180
   140010a3e:	lea    rcx,[rip+0xec8b]        # 0x14001f6d0
   140010a45:	call   QWORD PTR [rip+0x972d]        # 0x14001a178
   140010a4b:	cmp    DWORD PTR [rip+0x14a16],0x0        # 0x140025468
   140010a52:	jne    0x140010a5e
   140010a54:	mov    ecx,0x1
   140010a59:	call   0x140014dcc
   140010a5e:	call   QWORD PTR [rip+0x974c]        # 0x14001a1b0
   140010a64:	mov    edx,0xc0000409
   140010a69:	mov    rcx,rax
   140010a6c:	call   QWORD PTR [rip+0x9736]        # 0x14001a1a8
   140010a72:	add    rsp,0x88
   140010a79:	ret    
   140010a7a:	int3   
   140010a7b:	int3   
   140010a7c:	sub    rsp,0x28
   140010a80:	test   rcx,rcx
   140010a83:	jne    0x140010a9a
   140010a85:	call   0x14000bdc0
   140010a8a:	mov    DWORD PTR [rax],0x16
   140010a90:	call   0x14000d01c
   140010a95:	or     eax,0xffffffff
   140010a98:	jmp    0x140010a9d
   140010a9a:	mov    eax,DWORD PTR [rcx+0x1c]
   140010a9d:	add    rsp,0x28
   140010aa1:	ret    
   140010aa2:	int3   
   140010aa3:	int3   
   140010aa4:	mov    rax,rsp
   140010aa7:	mov    QWORD PTR [rax+0x8],rbx
   140010aab:	mov    QWORD PTR [rax+0x10],rbp
   140010aaf:	mov    QWORD PTR [rax+0x18],rsi
   140010ab3:	mov    QWORD PTR [rax+0x20],rdi
   140010ab7:	push   r12
   140010ab9:	sub    rsp,0x20
   140010abd:	mov    edi,DWORD PTR [rip+0x14e7d]        # 0x140025940
   140010ac3:	xor    ebp,ebp
   140010ac5:	mov    rsi,rcx
   140010ac8:	or     r12d,0xffffffff
   140010acc:	mov    rcx,rsi
   140010acf:	call   0x14000b2d4
   140010ad4:	mov    rbx,rax
   140010ad7:	test   rax,rax
   140010ada:	jne    0x140010b04
   140010adc:	test   edi,edi
   140010ade:	je     0x140010b04
   140010ae0:	mov    ecx,ebp
   140010ae2:	call   QWORD PTR [rip+0x9778]        # 0x14001a260
   140010ae8:	mov    edi,DWORD PTR [rip+0x14e52]        # 0x140025940
   140010aee:	lea    r11d,[rbp+0x3e8]
   140010af5:	cmp    r11d,edi
   140010af8:	mov    ebp,r11d
   140010afb:	cmova  ebp,r12d
   140010aff:	cmp    ebp,r12d
   140010b02:	jne    0x140010acc
   140010b04:	mov    rbp,QWORD PTR [rsp+0x38]
   140010b09:	mov    rsi,QWORD PTR [rsp+0x40]
   140010b0e:	mov    rdi,QWORD PTR [rsp+0x48]
   140010b13:	mov    rax,rbx
   140010b16:	mov    rbx,QWORD PTR [rsp+0x30]
   140010b1b:	add    rsp,0x20
   140010b1f:	pop    r12
   140010b21:	ret    
   140010b22:	int3   
   140010b23:	int3   
   140010b24:	mov    rax,rsp
   140010b27:	mov    QWORD PTR [rax+0x8],rbx
   140010b2b:	mov    QWORD PTR [rax+0x10],rbp
   140010b2f:	mov    QWORD PTR [rax+0x18],rsi
   140010b33:	mov    QWORD PTR [rax+0x20],rdi
   140010b37:	push   r12
   140010b39:	sub    rsp,0x20
   140010b3d:	xor    edi,edi
   140010b3f:	mov    rsi,rdx
   140010b42:	mov    rbp,rcx
   140010b45:	or     r12d,0xffffffff
   140010b49:	xor    r8d,r8d
   140010b4c:	mov    rdx,rsi
   140010b4f:	mov    rcx,rbp
   140010b52:	call   0x1400159c4
   140010b57:	mov    rbx,rax
   140010b5a:	test   rax,rax
   140010b5d:	jne    0x140010b89
   140010b5f:	cmp    DWORD PTR [rip+0x14ddb],eax        # 0x140025940
   140010b65:	jbe    0x140010b89
   140010b67:	mov    ecx,edi
   140010b69:	call   QWORD PTR [rip+0x96f1]        # 0x14001a260
   140010b6f:	lea    r11d,[rdi+0x3e8]
   140010b76:	cmp    r11d,DWORD PTR [rip+0x14dc3]        # 0x140025940
   140010b7d:	mov    edi,r11d
   140010b80:	cmova  edi,r12d
   140010b84:	cmp    edi,r12d
   140010b87:	jne    0x140010b49
   140010b89:	mov    rbp,QWORD PTR [rsp+0x38]
   140010b8e:	mov    rsi,QWORD PTR [rsp+0x40]
   140010b93:	mov    rdi,QWORD PTR [rsp+0x48]
   140010b98:	mov    rax,rbx
   140010b9b:	mov    rbx,QWORD PTR [rsp+0x30]
   140010ba0:	add    rsp,0x20
   140010ba4:	pop    r12
   140010ba6:	ret    
   140010ba7:	int3   
   140010ba8:	mov    rax,rsp
   140010bab:	mov    QWORD PTR [rax+0x8],rbx
   140010baf:	mov    QWORD PTR [rax+0x10],rbp
   140010bb3:	mov    QWORD PTR [rax+0x18],rsi
   140010bb7:	mov    QWORD PTR [rax+0x20],rdi
   140010bbb:	push   r12
   140010bbd:	sub    rsp,0x20
   140010bc1:	xor    esi,esi
   140010bc3:	mov    rdi,rdx
   140010bc6:	mov    rbp,rcx
   140010bc9:	or     r12d,0xffffffff
   140010bcd:	mov    rdx,rdi
   140010bd0:	mov    rcx,rbp
   140010bd3:	call   0x14000b38c
   140010bd8:	mov    rbx,rax
   140010bdb:	test   rax,rax
   140010bde:	jne    0x140010c0f
   140010be0:	test   rdi,rdi
   140010be3:	je     0x140010c0f
   140010be5:	cmp    DWORD PTR [rip+0x14d55],eax        # 0x140025940
   140010beb:	jbe    0x140010c0f
   140010bed:	mov    ecx,esi
   140010bef:	call   QWORD PTR [rip+0x966b]        # 0x14001a260
   140010bf5:	lea    r11d,[rsi+0x3e8]
   140010bfc:	cmp    r11d,DWORD PTR [rip+0x14d3d]        # 0x140025940
   140010c03:	mov    esi,r11d
   140010c06:	cmova  esi,r12d
   140010c0a:	cmp    esi,r12d
   140010c0d:	jne    0x140010bcd
   140010c0f:	mov    rbp,QWORD PTR [rsp+0x38]
   140010c14:	mov    rsi,QWORD PTR [rsp+0x40]
   140010c19:	mov    rdi,QWORD PTR [rsp+0x48]
   140010c1e:	mov    rax,rbx
   140010c21:	mov    rbx,QWORD PTR [rsp+0x30]
   140010c26:	add    rsp,0x20
   140010c2a:	pop    r12
   140010c2c:	ret    
   140010c2d:	int3   
   140010c2e:	int3   
   140010c2f:	int3   
   140010c30:	mov    QWORD PTR [rsp+0x8],rbx
   140010c35:	mov    QWORD PTR [rsp+0x10],rbp
   140010c3a:	mov    QWORD PTR [rsp+0x18],rsi
   140010c3f:	push   rdi
   140010c40:	push   r12
   140010c42:	push   r13
   140010c44:	sub    rsp,0x20
   140010c48:	xor    esi,esi
   140010c4a:	mov    rdi,r8
   140010c4d:	mov    rbp,rdx
   140010c50:	or     r13d,0xffffffff
   140010c54:	mov    r12,rcx
   140010c57:	mov    r8,rdi
   140010c5a:	mov    rdx,rbp
   140010c5d:	mov    rcx,r12
   140010c60:	call   0x1400161e8
   140010c65:	mov    rbx,rax
   140010c68:	test   rax,rax
   140010c6b:	jne    0x140010c9c
   140010c6d:	test   rdi,rdi
   140010c70:	je     0x140010c9c
   140010c72:	cmp    DWORD PTR [rip+0x14cc8],eax        # 0x140025940
   140010c78:	jbe    0x140010c9c
   140010c7a:	mov    ecx,esi
   140010c7c:	call   QWORD PTR [rip+0x95de]        # 0x14001a260
   140010c82:	lea    r11d,[rsi+0x3e8]
   140010c89:	cmp    r11d,DWORD PTR [rip+0x14cb0]        # 0x140025940
   140010c90:	mov    esi,r11d
   140010c93:	cmova  esi,r13d
   140010c97:	cmp    esi,r13d
   140010c9a:	jne    0x140010c57
   140010c9c:	mov    rbp,QWORD PTR [rsp+0x48]
   140010ca1:	mov    rsi,QWORD PTR [rsp+0x50]
   140010ca6:	mov    rax,rbx
   140010ca9:	mov    rbx,QWORD PTR [rsp+0x40]
   140010cae:	add    rsp,0x20
   140010cb2:	pop    r13
   140010cb4:	pop    r12
   140010cb6:	pop    rdi
   140010cb7:	ret    
   140010cb8:	mov    QWORD PTR [rsp+0x8],rbx
   140010cbd:	mov    QWORD PTR [rsp+0x10],rsi
   140010cc2:	push   rdi
   140010cc3:	sub    rsp,0x30
   140010cc7:	xor    edi,edi
   140010cc9:	lea    ecx,[rdi+0x1]
   140010ccc:	call   0x14000cb28
   140010cd1:	nop
   140010cd2:	lea    ebx,[rdi+0x3]
   140010cd5:	mov    DWORD PTR [rsp+0x20],ebx
   140010cd9:	cmp    ebx,DWORD PTR [rip+0x15fc1]        # 0x140026ca0
   140010cdf:	jge    0x140010d46
   140010ce1:	movsxd rsi,ebx
   140010ce4:	mov    rax,QWORD PTR [rip+0x14f9d]        # 0x140025c88
   140010ceb:	cmp    QWORD PTR [rax+rsi*8],0x0
   140010cf0:	je     0x140010d42
   140010cf2:	mov    rcx,QWORD PTR [rax+rsi*8]
   140010cf6:	test   BYTE PTR [rcx+0x18],0x83
   140010cfa:	je     0x140010d0c
   140010cfc:	call   0x14000ae28
   140010d01:	cmp    eax,0xffffffff
   140010d04:	je     0x140010d0c
   140010d06:	inc    edi
   140010d08:	mov    DWORD PTR [rsp+0x24],edi
   140010d0c:	cmp    ebx,0x14
   140010d0f:	jl     0x140010d42
   140010d11:	mov    rax,QWORD PTR [rip+0x14f70]        # 0x140025c88
   140010d18:	mov    rcx,QWORD PTR [rax+rsi*8]
   140010d1c:	add    rcx,0x30
   140010d20:	call   QWORD PTR [rip+0x943a]        # 0x14001a160
   140010d26:	mov    rcx,QWORD PTR [rip+0x14f5b]        # 0x140025c88
   140010d2d:	mov    rcx,QWORD PTR [rcx+rsi*8]
   140010d31:	call   0x14000b460
   140010d36:	mov    r11,QWORD PTR [rip+0x14f4b]        # 0x140025c88
   140010d3d:	and    QWORD PTR [r11+rsi*8],0x0
   140010d42:	inc    ebx
   140010d44:	jmp    0x140010cd5
   140010d46:	mov    ecx,0x1
   140010d4b:	call   0x14000ca28
   140010d50:	mov    eax,edi
   140010d52:	mov    rbx,QWORD PTR [rsp+0x40]
   140010d57:	mov    rsi,QWORD PTR [rsp+0x48]
   140010d5c:	add    rsp,0x30
   140010d60:	pop    rdi
   140010d61:	ret    
   140010d62:	int3   
   140010d63:	int3   
   140010d64:	mov    QWORD PTR [rsp+0x8],rbx
   140010d69:	push   rdi
   140010d6a:	sub    rsp,0x20
   140010d6e:	movsxd rdi,ecx
   140010d71:	mov    ecx,edi
   140010d73:	call   0x140011660
   140010d78:	cmp    rax,0xffffffffffffffff
   140010d7c:	je     0x140010dd7
   140010d7e:	mov    rax,QWORD PTR [rip+0x14cfb]        # 0x140025a80
   140010d85:	mov    ecx,0x2
   140010d8a:	cmp    edi,0x1
   140010d8d:	jne    0x140010d98
   140010d8f:	test   BYTE PTR [rax+0xb8],dil
   140010d96:	jne    0x140010da2
   140010d98:	cmp    edi,ecx
   140010d9a:	jne    0x140010db9
   140010d9c:	test   BYTE PTR [rax+0x60],0x1
   140010da0:	je     0x140010db9
   140010da2:	call   0x140011660
   140010da7:	mov    ecx,0x1
   140010dac:	mov    rbx,rax
   140010daf:	call   0x140011660
   140010db4:	cmp    rax,rbx
   140010db7:	je     0x140010dd7
   140010db9:	mov    ecx,edi
   140010dbb:	call   0x140011660
   140010dc0:	mov    rcx,rax
   140010dc3:	call   QWORD PTR [rip+0x92af]        # 0x14001a078
   140010dc9:	test   eax,eax
   140010dcb:	jne    0x140010dd7
   140010dcd:	call   QWORD PTR [rip+0x929d]        # 0x14001a070
   140010dd3:	mov    ebx,eax
   140010dd5:	jmp    0x140010dd9
   140010dd7:	xor    ebx,ebx
   140010dd9:	mov    ecx,edi
   140010ddb:	call   0x1400115b4
   140010de0:	mov    r11,rdi
   140010de3:	mov    rcx,rdi
   140010de6:	sar    rcx,0x5
   140010dea:	and    r11d,0x1f
   140010dee:	lea    rdx,[rip+0x14c8b]        # 0x140025a80
   140010df5:	mov    rcx,QWORD PTR [rdx+rcx*8]
   140010df9:	imul   r11,r11,0x58
   140010dfd:	mov    BYTE PTR [rcx+r11*1+0x8],0x0
   140010e03:	test   ebx,ebx
   140010e05:	je     0x140010e13
   140010e07:	mov    ecx,ebx
   140010e09:	call   0x14000be00
   140010e0e:	or     eax,0xffffffff
   140010e11:	jmp    0x140010e15
   140010e13:	xor    eax,eax
   140010e15:	mov    rbx,QWORD PTR [rsp+0x30]
   140010e1a:	add    rsp,0x20
   140010e1e:	pop    rdi
   140010e1f:	ret    
   140010e20:	mov    QWORD PTR [rsp+0x18],rbx
   140010e25:	mov    DWORD PTR [rsp+0x8],ecx
   140010e29:	push   rsi
   140010e2a:	push   rdi
   140010e2b:	push   r12
   140010e2d:	sub    rsp,0x20
   140010e31:	movsxd rbx,ecx
   140010e34:	cmp    ebx,0xfffffffe
   140010e37:	jne    0x140010e51
   140010e39:	call   0x14000bde0
   140010e3e:	and    DWORD PTR [rax],0x0
   140010e41:	call   0x14000bdc0
   140010e46:	mov    DWORD PTR [rax],0x9
   140010e4c:	jmp    0x140010ed2
   140010e51:	test   ecx,ecx
   140010e53:	js     0x140010eba
   140010e55:	cmp    ebx,DWORD PTR [rip+0x14c11]        # 0x140025a6c
   140010e5b:	jae    0x140010eba
   140010e5d:	mov    rdi,rbx
   140010e60:	mov    rsi,rbx
   140010e63:	sar    rsi,0x5
   140010e67:	lea    r12,[rip+0x14c12]        # 0x140025a80
   140010e6e:	and    edi,0x1f
   140010e71:	imul   rdi,rdi,0x58
   140010e75:	mov    rax,QWORD PTR [r12+rsi*8]
   140010e79:	movsx  ecx,BYTE PTR [rax+rdi*1+0x8]
   140010e7e:	and    ecx,0x1
   140010e81:	je     0x140010eba
   140010e83:	mov    ecx,ebx
   140010e85:	call   0x1400116d4
   140010e8a:	nop
   140010e8b:	mov    rax,QWORD PTR [r12+rsi*8]
   140010e8f:	test   BYTE PTR [rax+rdi*1+0x8],0x1
   140010e94:	je     0x140010ea1
   140010e96:	mov    ecx,ebx
   140010e98:	call   0x140010d64
   140010e9d:	mov    edi,eax
   140010e9f:	jmp    0x140010eaf
   140010ea1:	call   0x14000bdc0
   140010ea6:	mov    DWORD PTR [rax],0x9
   140010eac:	or     edi,0xffffffff
   140010eaf:	mov    ecx,ebx
   140010eb1:	call   0x14001177c
   140010eb6:	mov    eax,edi
   140010eb8:	jmp    0x140010ed5
   140010eba:	call   0x14000bde0
   140010ebf:	and    DWORD PTR [rax],0x0
   140010ec2:	call   0x14000bdc0
   140010ec7:	mov    DWORD PTR [rax],0x9
   140010ecd:	call   0x14000d01c
   140010ed2:	or     eax,0xffffffff
   140010ed5:	mov    rbx,QWORD PTR [rsp+0x50]
   140010eda:	add    rsp,0x20
   140010ede:	pop    r12
   140010ee0:	pop    rdi
   140010ee1:	pop    rsi
   140010ee2:	ret    
   140010ee3:	int3   
   140010ee4:	rex push rbx
   140010ee6:	sub    rsp,0x20
   140010eea:	test   BYTE PTR [rcx+0x18],0x83
   140010eee:	mov    rbx,rcx
   140010ef1:	je     0x140010f15
   140010ef3:	test   BYTE PTR [rcx+0x18],0x8
   140010ef7:	je     0x140010f15
   140010ef9:	mov    rcx,QWORD PTR [rcx+0x10]
   140010efd:	call   0x14000b460
   140010f02:	and    DWORD PTR [rbx+0x18],0xfffffbf7
   140010f09:	xor    eax,eax
   140010f0b:	mov    QWORD PTR [rbx],rax
   140010f0e:	mov    QWORD PTR [rbx+0x10],rax
   140010f12:	mov    DWORD PTR [rbx+0x8],eax
   140010f15:	add    rsp,0x20
   140010f19:	pop    rbx
   140010f1a:	ret    
   140010f1b:	int3   
   140010f1c:	mov    QWORD PTR [rsp+0x8],rbx
   140010f21:	mov    QWORD PTR [rsp+0x10],rsi
   140010f26:	push   rdi
   140010f27:	sub    rsp,0x20
   140010f2b:	mov    rdi,rcx
   140010f2e:	test   rcx,rcx
   140010f31:	jne    0x140010f48
   140010f33:	call   0x14000bdc0
   140010f38:	mov    DWORD PTR [rax],0x16
   140010f3e:	call   0x14000d01c
   140010f43:	jmp    0x14001105b
   140010f48:	mov    eax,DWORD PTR [rcx+0x18]
   140010f4b:	test   al,0x83
   140010f4d:	je     0x14001105b
   140010f53:	test   al,0x40
   140010f55:	jne    0x14001105b
   140010f5b:	test   al,0x2
   140010f5d:	je     0x140010f6a
   140010f5f:	or     eax,0x20
   140010f62:	mov    DWORD PTR [rcx+0x18],eax
   140010f65:	jmp    0x14001105b
   140010f6a:	or     eax,0x1
   140010f6d:	mov    DWORD PTR [rcx+0x18],eax
   140010f70:	test   eax,0x10c
   140010f75:	jne    0x140010f7e
   140010f77:	call   0x140015ef8
   140010f7c:	jmp    0x140010f85
   140010f7e:	mov    rax,QWORD PTR [rcx+0x10]
   140010f82:	mov    QWORD PTR [rcx],rax
   140010f85:	mov    rcx,rdi
   140010f88:	call   0x140010a7c
   140010f8d:	mov    r8d,DWORD PTR [rdi+0x24]
   140010f91:	mov    rdx,QWORD PTR [rdi+0x10]
   140010f95:	mov    ecx,eax
   140010f97:	call   0x140016994
   140010f9c:	mov    DWORD PTR [rdi+0x8],eax
   140010f9f:	test   eax,eax
   140010fa1:	je     0x14001104a
   140010fa7:	cmp    eax,0xffffffff
   140010faa:	je     0x14001104a
   140010fb0:	test   BYTE PTR [rdi+0x18],0x82
   140010fb4:	jne    0x140011015
   140010fb6:	mov    rcx,rdi
   140010fb9:	call   0x140010a7c
   140010fbe:	cmp    eax,0xffffffff
   140010fc1:	je     0x140010fff
   140010fc3:	mov    rcx,rdi
   140010fc6:	call   0x140010a7c
   140010fcb:	cmp    eax,0xfffffffe
   140010fce:	je     0x140010fff
   140010fd0:	mov    rcx,rdi
   140010fd3:	call   0x140010a7c
   140010fd8:	mov    rcx,rdi
   140010fdb:	lea    rsi,[rip+0x14a9e]        # 0x140025a80
   140010fe2:	movsxd rbx,eax
   140010fe5:	sar    rbx,0x5
   140010fe9:	call   0x140010a7c
   140010fee:	mov    r11d,eax
   140010ff1:	and    r11d,0x1f
   140010ff5:	imul   r11,r11,0x58
   140010ff9:	add    r11,QWORD PTR [rsi+rbx*8]
   140010ffd:	jmp    0x140011006
   140010fff:	lea    r11,[rip+0x128aa]        # 0x1400238b0
   140011006:	mov    al,BYTE PTR [r11+0x8]
   14001100a:	and    al,0x82
   14001100c:	cmp    al,0x82
   14001100e:	jne    0x140011015
   140011010:	bts    DWORD PTR [rdi+0x18],0xd
   140011015:	cmp    DWORD PTR [rdi+0x24],0x200
   14001101c:	jne    0x140011039
   14001101e:	test   BYTE PTR [rdi+0x18],0x8
   140011022:	je     0x140011039
   140011024:	mov    eax,DWORD PTR [rdi+0x24]
   140011027:	test   DWORD PTR [rdi+0x18],0x400
   14001102e:	mov    ecx,0x1000
   140011033:	cmove  eax,ecx
   140011036:	mov    DWORD PTR [rdi+0x24],eax
   140011039:	mov    rcx,QWORD PTR [rdi]
   14001103c:	dec    DWORD PTR [rdi+0x8]
   14001103f:	movzx  eax,BYTE PTR [rcx]
   140011042:	inc    rcx
   140011045:	mov    QWORD PTR [rdi],rcx
   140011048:	jmp    0x14001105e
   14001104a:	neg    eax
   14001104c:	sbb    eax,eax
   14001104e:	and    eax,0x10
   140011051:	add    eax,0x10
   140011054:	or     DWORD PTR [rdi+0x18],eax
   140011057:	and    DWORD PTR [rdi+0x8],0x0
   14001105b:	or     eax,0xffffffff
   14001105e:	mov    rbx,QWORD PTR [rsp+0x30]
   140011063:	mov    rsi,QWORD PTR [rsp+0x38]
   140011068:	add    rsp,0x20
   14001106c:	pop    rdi
   14001106d:	ret    
   14001106e:	int3   
   14001106f:	int3   
   140011070:	mov    QWORD PTR [rsp+0x8],rbx
   140011075:	mov    QWORD PTR [rsp+0x18],rbp
   14001107a:	push   rsi
   14001107b:	push   rdi
   14001107c:	push   r12
   14001107e:	push   r13
   140011080:	push   r15
   140011082:	sub    rsp,0x30
   140011086:	mov    ebp,DWORD PTR [rip+0x1490c]        # 0x140025998
   14001108c:	mov    rsi,r9
   14001108f:	xor    r9d,r9d
   140011092:	xor    r10d,r10d
   140011095:	xor    r11d,r11d
   140011098:	cmp    BYTE PTR [rdx],0x20
   14001109b:	lea    r15d,[r9+0x1]
   14001109f:	mov    r12d,r8d
   1400110a2:	mov    rbx,rdx
   1400110a5:	mov    r13,rcx
   1400110a8:	jne    0x1400110b2
   1400110aa:	add    rbx,r15
   1400110ad:	cmp    BYTE PTR [rbx],0x20
   1400110b0:	je     0x1400110aa
   1400110b2:	cmp    BYTE PTR [rbx],0x61
   1400110b5:	je     0x1400110e6
   1400110b7:	cmp    BYTE PTR [rbx],0x72
   1400110ba:	je     0x1400110df
   1400110bc:	cmp    BYTE PTR [rbx],0x77
   1400110bf:	je     0x1400110d8
   1400110c1:	call   0x14000bdc0
   1400110c6:	mov    DWORD PTR [rax],0x16
   1400110cc:	call   0x14000d01c
   1400110d1:	xor    eax,eax
   1400110d3:	jmp    0x14001130f
   1400110d8:	mov    edi,0x301
   1400110dd:	jmp    0x1400110eb
   1400110df:	xor    edi,edi
   1400110e1:	or     ebp,r15d
   1400110e4:	jmp    0x1400110ee
   1400110e6:	mov    edi,0x109
   1400110eb:	or     ebp,0x2
   1400110ee:	add    rbx,r15
   1400110f1:	mov    edx,r15d
   1400110f4:	mov    al,BYTE PTR [rbx]
   1400110f6:	test   al,al
   1400110f8:	je     0x1400112b9
   1400110fe:	mov    r8d,0x4000
   140011104:	test   edx,edx
   140011106:	je     0x1400111fa
   14001110c:	movsx  ecx,al
   14001110f:	cmp    ecx,0x53
   140011112:	jg     0x14001118d
   140011114:	je     0x140011180
   140011116:	sub    ecx,0x20
   140011119:	je     0x1400111ed
   14001111f:	sub    ecx,0xb
   140011122:	je     0x14001116b
   140011124:	dec    ecx
   140011126:	je     0x140011166
   140011128:	sub    ecx,0x18
   14001112b:	je     0x140011154
   14001112d:	sub    ecx,0xa
   140011130:	je     0x14001114b
   140011132:	cmp    ecx,0x4
   140011135:	jne    0x1400110c1
   140011137:	test   r10d,r10d
   14001113a:	jne    0x1400111e5
   140011140:	mov    r10d,r15d
   140011143:	or     edi,0x10
   140011146:	jmp    0x1400111ed
   14001114b:	bts    edi,0x7
   14001114f:	jmp    0x1400111ed
   140011154:	test   dil,0x40
   140011158:	jne    0x1400111e5
   14001115e:	or     edi,0x40
   140011161:	jmp    0x1400111ed
   140011166:	mov    r11d,r15d
   140011169:	jmp    0x1400111e5
   14001116b:	test   dil,0x2
   14001116f:	jne    0x1400111e5
   140011171:	and    edi,0xfffffffe
   140011174:	and    ebp,0xfffffffc
   140011177:	or     edi,0x2
   14001117a:	bts    ebp,0x7
   14001117e:	jmp    0x1400111ed
   140011180:	test   r10d,r10d
   140011183:	jne    0x1400111e5
   140011185:	mov    r10d,r15d
   140011188:	or     edi,0x20
   14001118b:	jmp    0x1400111ed
   14001118d:	sub    ecx,0x54
   140011190:	je     0x1400111df
   140011192:	sub    ecx,0xe
   140011195:	je     0x1400111d1
   140011197:	dec    ecx
   140011199:	je     0x1400111c4
   14001119b:	sub    ecx,0xb
   14001119e:	je     0x1400111b6
   1400111a0:	cmp    ecx,0x6
   1400111a3:	jne    0x1400110c1
   1400111a9:	test   edi,0xc000
   1400111af:	jne    0x1400111e5
   1400111b1:	or     edi,r8d
   1400111b4:	jmp    0x1400111ed
   1400111b6:	test   r9d,r9d
   1400111b9:	jne    0x1400111e5
   1400111bb:	mov    r9d,r15d
   1400111be:	btr    ebp,0xe
   1400111c2:	jmp    0x1400111ed
   1400111c4:	test   r9d,r9d
   1400111c7:	jne    0x1400111e5
   1400111c9:	mov    r9d,r15d
   1400111cc:	or     ebp,r8d
   1400111cf:	jmp    0x1400111ed
   1400111d1:	test   edi,0xc000
   1400111d7:	jne    0x1400111e5
   1400111d9:	bts    edi,0xf
   1400111dd:	jmp    0x1400111ed
   1400111df:	bt     edi,0xc
   1400111e3:	jae    0x1400111e9
   1400111e5:	xor    edx,edx
   1400111e7:	jmp    0x1400111ed
   1400111e9:	bts    edi,0xc
   1400111ed:	add    rbx,r15
   1400111f0:	mov    al,BYTE PTR [rbx]
   1400111f2:	test   al,al
   1400111f4:	jne    0x140011104
   1400111fa:	test   r11d,r11d
   1400111fd:	je     0x1400112b9
   140011203:	jmp    0x140011208
   140011205:	add    rbx,r15
   140011208:	cmp    BYTE PTR [rbx],0x20
   14001120b:	je     0x140011205
   14001120d:	lea    rcx,[rip+0xe52c]        # 0x14001f740
   140011214:	mov    r8d,0x3
   14001121a:	mov    rdx,rbx
   14001121d:	call   0x140016e00
   140011222:	test   eax,eax
   140011224:	jne    0x1400110c1
   14001122a:	add    rbx,0x3
   14001122e:	jmp    0x140011233
   140011230:	add    rbx,r15
   140011233:	cmp    BYTE PTR [rbx],0x20
   140011236:	je     0x140011230
   140011238:	cmp    BYTE PTR [rbx],0x3d
   14001123b:	jne    0x1400110c1
   140011241:	add    rbx,r15
   140011244:	cmp    BYTE PTR [rbx],0x20
   140011247:	je     0x140011241
   140011249:	lea    rdx,[rip+0xe4f4]        # 0x14001f744
   140011250:	mov    r8d,0x5
   140011256:	mov    rcx,rbx
   140011259:	call   0x140016c98
   14001125e:	test   eax,eax
   140011260:	jne    0x14001126c
   140011262:	add    rbx,0x5
   140011266:	bts    edi,0x12
   14001126a:	jmp    0x1400112b9
   14001126c:	lea    rdx,[rip+0xe4dd]        # 0x14001f750
   140011273:	mov    r8d,0x8
   140011279:	mov    rcx,rbx
   14001127c:	call   0x140016c98
   140011281:	test   eax,eax
   140011283:	jne    0x14001128f
   140011285:	add    rbx,0x8
   140011289:	bts    edi,0x11
   14001128d:	jmp    0x1400112b9
   14001128f:	lea    rdx,[rip+0xe4ca]        # 0x14001f760
   140011296:	mov    r8d,0x7
   14001129c:	mov    rcx,rbx
   14001129f:	call   0x140016c98
   1400112a4:	test   eax,eax
   1400112a6:	jne    0x1400110c1
   1400112ac:	add    rbx,0x7
   1400112b0:	bts    edi,0x10
   1400112b4:	jmp    0x1400112b9
   1400112b6:	add    rbx,r15
   1400112b9:	cmp    BYTE PTR [rbx],0x20
   1400112bc:	je     0x1400112b6
   1400112be:	cmp    BYTE PTR [rbx],0x0
   1400112c1:	jne    0x1400110c1
   1400112c7:	lea    rcx,[rsp+0x68]
   1400112cc:	mov    r9d,r12d
   1400112cf:	mov    r8d,edi
   1400112d2:	mov    rdx,r13
   1400112d5:	mov    DWORD PTR [rsp+0x20],0x180
   1400112dd:	call   0x140013108
   1400112e2:	test   eax,eax
   1400112e4:	jne    0x1400110d1
   1400112ea:	add    DWORD PTR [rip+0x13703],r15d        # 0x1400249f4
   1400112f1:	and    DWORD PTR [rsi+0x8],eax
   1400112f4:	mov    eax,DWORD PTR [rsp+0x68]
   1400112f8:	and    QWORD PTR [rsi],0x0
   1400112fc:	and    QWORD PTR [rsi+0x10],0x0
   140011301:	and    QWORD PTR [rsi+0x28],0x0
   140011306:	mov    DWORD PTR [rsi+0x1c],eax
   140011309:	mov    DWORD PTR [rsi+0x18],ebp
   14001130c:	mov    rax,rsi
   14001130f:	mov    rbx,QWORD PTR [rsp+0x60]
   140011314:	mov    rbp,QWORD PTR [rsp+0x70]
   140011319:	add    rsp,0x30
   14001131d:	pop    r15
   14001131f:	pop    r13
   140011321:	pop    r12
   140011323:	pop    rdi
   140011324:	pop    rsi
   140011325:	ret    
   140011326:	int3   
   140011327:	int3   
   140011328:	mov    QWORD PTR [rsp+0x8],rbx
   14001132d:	mov    QWORD PTR [rsp+0x10],rsi
   140011332:	push   rdi
   140011333:	sub    rsp,0x30
   140011337:	xor    ebx,ebx
   140011339:	lea    ecx,[rbx+0x1]
   14001133c:	call   0x14000cb28
   140011341:	nop
   140011342:	xor    edi,edi
   140011344:	mov    DWORD PTR [rsp+0x20],edi
   140011348:	cmp    edi,DWORD PTR [rip+0x15952]        # 0x140026ca0
   14001134e:	jge    0x140011440
   140011354:	movsxd rsi,edi
   140011357:	mov    rax,QWORD PTR [rip+0x1492a]        # 0x140025c88
   14001135e:	cmp    QWORD PTR [rax+rsi*8],0x0
   140011363:	je     0x1400113cb
   140011365:	mov    rax,QWORD PTR [rax+rsi*8]
   140011369:	test   BYTE PTR [rax+0x18],0x83
   14001136d:	jne    0x1400113c4
   14001136f:	test   DWORD PTR [rax+0x18],0x8000
   140011376:	jne    0x1400113c4
   140011378:	lea    eax,[rdi-0x3]
   14001137b:	cmp    eax,0x10
   14001137e:	ja     0x140011390
   140011380:	lea    ecx,[rdi+0x10]
   140011383:	call   0x14000ca40
   140011388:	test   eax,eax
   14001138a:	je     0x140011440
   140011390:	mov    rdx,QWORD PTR [rip+0x148f1]        # 0x140025c88
   140011397:	mov    rdx,QWORD PTR [rdx+rsi*8]
   14001139b:	mov    ecx,edi
   14001139d:	call   0x14000ad0c
   1400113a2:	mov    r11,QWORD PTR [rip+0x148df]        # 0x140025c88
   1400113a9:	mov    rax,QWORD PTR [r11+rsi*8]
   1400113ad:	test   BYTE PTR [rax+0x18],0x83
   1400113b1:	je     0x1400113bf
   1400113b3:	mov    rdx,rax
   1400113b6:	mov    ecx,edi
   1400113b8:	call   0x14000ad8c
   1400113bd:	jmp    0x1400113c4
   1400113bf:	mov    rbx,rax
   1400113c2:	jmp    0x140011440
   1400113c4:	inc    edi
   1400113c6:	jmp    0x140011344
   1400113cb:	mov    ecx,0x58
   1400113d0:	call   0x140010aa4
   1400113d5:	mov    rcx,rax
   1400113d8:	movsxd rdi,edi
   1400113db:	mov    rax,QWORD PTR [rip+0x148a6]        # 0x140025c88
   1400113e2:	mov    QWORD PTR [rax+rdi*8],rcx
   1400113e6:	test   rcx,rcx
   1400113e9:	je     0x140011440
   1400113eb:	add    rcx,0x30
   1400113ef:	mov    edx,0xfa0
   1400113f4:	call   QWORD PTR [rip+0x8d5e]        # 0x14001a158
   1400113fa:	test   eax,eax
   1400113fc:	jne    0x14001141c
   1400113fe:	mov    rcx,QWORD PTR [rip+0x14883]        # 0x140025c88
   140011405:	mov    rcx,QWORD PTR [rcx+rdi*8]
   140011409:	call   0x14000b460
   14001140e:	mov    r11,QWORD PTR [rip+0x14873]        # 0x140025c88
   140011415:	and    QWORD PTR [r11+rdi*8],0x0
   14001141a:	jmp    0x140011440
   14001141c:	mov    rax,QWORD PTR [rip+0x14865]        # 0x140025c88
   140011423:	mov    rcx,QWORD PTR [rax+rdi*8]
   140011427:	add    rcx,0x30
   14001142b:	call   QWORD PTR [rip+0x8cb7]        # 0x14001a0e8
   140011431:	mov    r11,QWORD PTR [rip+0x14850]        # 0x140025c88
   140011438:	mov    rbx,QWORD PTR [r11+rdi*8]
   14001143c:	and    DWORD PTR [rbx+0x18],0x0
   140011440:	test   rbx,rbx
   140011443:	je     0x140011462
   140011445:	and    DWORD PTR [rbx+0x18],0x8000
   14001144c:	and    DWORD PTR [rbx+0x8],0x0
   140011450:	and    QWORD PTR [rbx+0x10],0x0
   140011455:	and    QWORD PTR [rbx],0x0
   140011459:	and    QWORD PTR [rbx+0x28],0x0
   14001145e:	or     DWORD PTR [rbx+0x1c],0xffffffff
   140011462:	mov    ecx,0x1
   140011467:	call   0x14000ca28
   14001146c:	mov    rax,rbx
   14001146f:	mov    rbx,QWORD PTR [rsp+0x40]
   140011474:	mov    rsi,QWORD PTR [rsp+0x48]
   140011479:	add    rsp,0x30
   14001147d:	pop    rdi
   14001147e:	ret    
   14001147f:	int3   
   140011480:	int3   
   140011481:	int3   
   140011482:	int3   
   140011483:	int3   
   140011484:	int3   
   140011485:	int3   
   140011486:	data16 nop WORD PTR [rax+rax*1+0x0]
   140011490:	sub    rsp,0x4d8
   140011497:	xor    r8,r8
   14001149a:	xor    r9,r9
   14001149d:	mov    QWORD PTR [rsp+0x20],rsp
   1400114a2:	mov    QWORD PTR [rsp+0x28],r8
   1400114a7:	call   0x140019918
   1400114ac:	add    rsp,0x4d8
   1400114b3:	ret    
   1400114b4:	int3   
   1400114b5:	int3   
   1400114b6:	int3   
   1400114b7:	int3   
   1400114b8:	int3   
   1400114b9:	int3   
   1400114ba:	nop    WORD PTR [rax+rax*1+0x0]
   1400114c0:	mov    QWORD PTR [rsp+0x8],rcx
   1400114c5:	mov    QWORD PTR [rsp+0x18],rdx
   1400114ca:	mov    DWORD PTR [rsp+0x10],r8d
   1400114cf:	mov    r9,0x19930520
   1400114d6:	jmp    0x1400114e0
   1400114d8:	int3   
   1400114d9:	int3   
   1400114da:	int3   
   1400114db:	int3   
   1400114dc:	int3   
   1400114dd:	int3   
   1400114de:	xchg   ax,ax
   1400114e0:	ret    
   1400114e1:	int3   
   1400114e2:	int3   
   1400114e3:	int3   
   1400114e4:	int3   
   1400114e5:	int3   
   1400114e6:	int3   
   1400114e7:	nop    WORD PTR [rax+rax*1+0x0]
   1400114f0:	ret    
   1400114f1:	int3   
   1400114f2:	int3   
   1400114f3:	int3   
   1400114f4:	lea    rax,[rip+0x12575]        # 0x140023a70
   1400114fb:	ret    
   1400114fc:	lea    rax,[rip+0x1240d]        # 0x140023910
   140011503:	ret    
   140011504:	mov    QWORD PTR [rsp+0x8],rbx
   140011509:	mov    QWORD PTR [rsp+0x10],rbp
   14001150e:	mov    QWORD PTR [rsp+0x18],rsi
   140011513:	push   rdi
   140011514:	sub    rsp,0x20
   140011518:	mov    rbx,rdx
   14001151b:	test   ecx,ecx
   14001151d:	js     0x140011586
   14001151f:	cmp    ecx,DWORD PTR [rip+0x14547]        # 0x140025a6c
   140011525:	jae    0x140011586
   140011527:	movsxd rdi,ecx
   14001152a:	lea    rbp,[rip+0x1454f]        # 0x140025a80
   140011531:	mov    rsi,rdi
   140011534:	and    edi,0x1f
   140011537:	sar    rsi,0x5
   14001153b:	imul   rdi,rdi,0x58
   14001153f:	mov    rax,QWORD PTR [rbp+rsi*8+0x0]
   140011544:	cmp    QWORD PTR [rdi+rax*1],0xffffffffffffffff
   140011549:	jne    0x140011586
   14001154b:	cmp    DWORD PTR [rip+0x11b66],0x1        # 0x1400230b8
   140011552:	jne    0x140011579
   140011554:	test   ecx,ecx
   140011556:	je     0x14001156e
   140011558:	dec    ecx
   14001155a:	je     0x140011567
   14001155c:	dec    ecx
   14001155e:	jne    0x140011579
   140011560:	mov    ecx,0xfffffff4
   140011565:	jmp    0x140011573
   140011567:	mov    ecx,0xfffffff5
   14001156c:	jmp    0x140011573
   14001156e:	mov    ecx,0xfffffff6
   140011573:	call   QWORD PTR [rip+0x8cef]        # 0x14001a268
   140011579:	mov    rax,QWORD PTR [rbp+rsi*8+0x0]
   14001157e:	mov    QWORD PTR [rdi+rax*1],rbx
   140011582:	xor    eax,eax
   140011584:	jmp    0x14001159c
   140011586:	call   0x14000bdc0
   14001158b:	mov    DWORD PTR [rax],0x9
   140011591:	call   0x14000bde0
   140011596:	and    DWORD PTR [rax],0x0
   140011599:	or     eax,0xffffffff
   14001159c:	mov    rbx,QWORD PTR [rsp+0x30]
   1400115a1:	mov    rbp,QWORD PTR [rsp+0x38]
   1400115a6:	mov    rsi,QWORD PTR [rsp+0x40]
   1400115ab:	add    rsp,0x20
   1400115af:	pop    rdi
   1400115b0:	ret    
   1400115b1:	int3   
   1400115b2:	int3   
   1400115b3:	int3   
   1400115b4:	mov    QWORD PTR [rsp+0x8],rbx
   1400115b9:	mov    QWORD PTR [rsp+0x10],rbp
   1400115be:	push   rdi
   1400115bf:	sub    rsp,0x20
   1400115c3:	test   ecx,ecx
   1400115c5:	js     0x140011638
   1400115c7:	cmp    ecx,DWORD PTR [rip+0x1449f]        # 0x140025a6c
   1400115cd:	jae    0x140011638
   1400115cf:	movsxd rbx,ecx
   1400115d2:	lea    rbp,[rip+0x144a7]        # 0x140025a80
   1400115d9:	mov    rdi,rbx
   1400115dc:	and    ebx,0x1f
   1400115df:	sar    rdi,0x5
   1400115e3:	imul   rbx,rbx,0x58
   1400115e7:	mov    rax,QWORD PTR [rbp+rdi*8+0x0]
   1400115ec:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   1400115f1:	je     0x140011638
   1400115f3:	cmp    QWORD PTR [rax+rbx*1],0xffffffffffffffff
   1400115f8:	je     0x140011638
   1400115fa:	cmp    DWORD PTR [rip+0x11ab7],0x1        # 0x1400230b8
   140011601:	jne    0x14001162a
   140011603:	test   ecx,ecx
   140011605:	je     0x14001161d
   140011607:	dec    ecx
   140011609:	je     0x140011616
   14001160b:	dec    ecx
   14001160d:	jne    0x14001162a
   14001160f:	mov    ecx,0xfffffff4
   140011614:	jmp    0x140011622
   140011616:	mov    ecx,0xfffffff5
   14001161b:	jmp    0x140011622
   14001161d:	mov    ecx,0xfffffff6
   140011622:	xor    edx,edx
   140011624:	call   QWORD PTR [rip+0x8c3e]        # 0x14001a268
   14001162a:	mov    rax,QWORD PTR [rbp+rdi*8+0x0]
   14001162f:	or     QWORD PTR [rbx+rax*1],0xffffffffffffffff
   140011634:	xor    eax,eax
   140011636:	jmp    0x14001164e
   140011638:	call   0x14000bdc0
   14001163d:	mov    DWORD PTR [rax],0x9
   140011643:	call   0x14000bde0
   140011648:	and    DWORD PTR [rax],0x0
   14001164b:	or     eax,0xffffffff
   14001164e:	mov    rbx,QWORD PTR [rsp+0x30]
   140011653:	mov    rbp,QWORD PTR [rsp+0x38]
   140011658:	add    rsp,0x20
   14001165c:	pop    rdi
   14001165d:	ret    
   14001165e:	int3   
   14001165f:	int3   
   140011660:	sub    rsp,0x28
   140011664:	cmp    ecx,0xfffffffe
   140011667:	jne    0x14001167e
   140011669:	call   0x14000bde0
   14001166e:	and    DWORD PTR [rax],0x0
   140011671:	call   0x14000bdc0
   140011676:	mov    DWORD PTR [rax],0x9
   14001167c:	jmp    0x1400116cb
   14001167e:	test   ecx,ecx
   140011680:	js     0x1400116b3
   140011682:	cmp    ecx,DWORD PTR [rip+0x143e4]        # 0x140025a6c
   140011688:	jae    0x1400116b3
   14001168a:	movsxd rdx,ecx
   14001168d:	lea    rcx,[rip+0x143ec]        # 0x140025a80
   140011694:	mov    rax,rdx
   140011697:	and    edx,0x1f
   14001169a:	sar    rax,0x5
   14001169e:	imul   rdx,rdx,0x58
   1400116a2:	mov    rax,QWORD PTR [rcx+rax*8]
   1400116a6:	test   BYTE PTR [rax+rdx*1+0x8],0x1
   1400116ab:	je     0x1400116b3
   1400116ad:	mov    rax,QWORD PTR [rax+rdx*1]
   1400116b1:	jmp    0x1400116cf
   1400116b3:	call   0x14000bde0
   1400116b8:	and    DWORD PTR [rax],0x0
   1400116bb:	call   0x14000bdc0
   1400116c0:	mov    DWORD PTR [rax],0x9
   1400116c6:	call   0x14000d01c
   1400116cb:	or     rax,0xffffffffffffffff
   1400116cf:	add    rsp,0x28
   1400116d3:	ret    
   1400116d4:	mov    rax,rsp
   1400116d7:	mov    QWORD PTR [rax+0x8],rbx
   1400116db:	mov    QWORD PTR [rax+0x10],rsi
   1400116df:	mov    QWORD PTR [rax+0x18],rdi
   1400116e3:	mov    QWORD PTR [rax+0x20],r12
   1400116e7:	push   r14
   1400116e9:	sub    rsp,0x20
   1400116ed:	movsxd rbx,ecx
   1400116f0:	mov    r12,rbx
   1400116f3:	sar    r12,0x5
   1400116f7:	lea    r14,[rip+0x14382]        # 0x140025a80
   1400116fe:	and    ebx,0x1f
   140011701:	imul   rbx,rbx,0x58
   140011705:	mov    rsi,QWORD PTR [r14+r12*8]
   140011709:	mov    edi,0x1
   14001170e:	cmp    DWORD PTR [rbx+rsi*1+0xc],0x0
   140011713:	jne    0x140011749
   140011715:	lea    ecx,[rdi+0x9]
   140011718:	call   0x14000cb28
   14001171d:	nop
   14001171e:	cmp    DWORD PTR [rbx+rsi*1+0xc],0x0
   140011723:	jne    0x14001173f
   140011725:	lea    rcx,[rbx+rsi*1+0x10]
   14001172a:	mov    edx,0xfa0
   14001172f:	call   QWORD PTR [rip+0x8a23]        # 0x14001a158
   140011735:	neg    eax
   140011737:	sbb    edx,edx
   140011739:	and    edi,edx
   14001173b:	inc    DWORD PTR [rbx+rsi*1+0xc]
   14001173f:	mov    ecx,0xa
   140011744:	call   0x14000ca28
   140011749:	test   edi,edi
   14001174b:	je     0x14001175c
   14001174d:	mov    rcx,QWORD PTR [r14+r12*8]
   140011751:	lea    rcx,[rcx+rbx*1+0x10]
   140011756:	call   QWORD PTR [rip+0x898c]        # 0x14001a0e8
   14001175c:	mov    eax,edi
   14001175e:	mov    rbx,QWORD PTR [rsp+0x30]
   140011763:	mov    rsi,QWORD PTR [rsp+0x38]
   140011768:	mov    rdi,QWORD PTR [rsp+0x40]
   14001176d:	mov    r12,QWORD PTR [rsp+0x48]
   140011772:	add    rsp,0x20
   140011776:	pop    r14
   140011778:	ret    
   140011779:	int3   
   14001177a:	int3   
   14001177b:	int3   
   14001177c:	movsxd rdx,ecx
   14001177f:	lea    rcx,[rip+0x142fa]        # 0x140025a80
   140011786:	mov    rax,rdx
   140011789:	and    edx,0x1f
   14001178c:	sar    rax,0x5
   140011790:	imul   rdx,rdx,0x58
   140011794:	mov    rax,QWORD PTR [rcx+rax*8]
   140011798:	lea    rcx,[rax+rdx*1+0x10]
   14001179d:	rex.W jmp QWORD PTR [rip+0x894c]        # 0x14001a0f0
   1400117a4:	mov    QWORD PTR [rsp+0x8],rbx
   1400117a9:	mov    QWORD PTR [rsp+0x10],rsi
   1400117ae:	mov    QWORD PTR [rsp+0x18],rdi
   1400117b3:	push   r12
   1400117b5:	push   r13
   1400117b7:	push   r14
   1400117b9:	sub    rsp,0x40
   1400117bd:	or     rsi,0xffffffffffffffff
   1400117c1:	mov    r12d,esi
   1400117c4:	xor    r13d,r13d
   1400117c7:	lea    ebx,[rsi+0xc]
   1400117ca:	mov    ecx,ebx
   1400117cc:	call   0x14000ca40
   1400117d1:	test   eax,eax
   1400117d3:	jne    0x1400117dc
   1400117d5:	mov    eax,esi
   1400117d7:	jmp    0x140011992
   1400117dc:	mov    ecx,ebx
   1400117de:	call   0x14000cb28
   1400117e3:	nop
   1400117e4:	xor    edi,edi
   1400117e6:	lea    rax,[rip+0x14293]        # 0x140025a80
   1400117ed:	mov    DWORD PTR [rsp+0x24],edi
   1400117f1:	cmp    edi,0x40
   1400117f4:	jge    0x140011985
   1400117fa:	movsxd r14,edi
   1400117fd:	mov    rbx,QWORD PTR [rax+r14*8]
   140011801:	test   rbx,rbx
   140011804:	je     0x1400118fb
   14001180a:	mov    QWORD PTR [rsp+0x30],rbx
   14001180f:	mov    rax,QWORD PTR [rax+r14*8]
   140011813:	add    rax,0xb00
   140011819:	cmp    rbx,rax
   14001181c:	jae    0x1400118eb
   140011822:	test   BYTE PTR [rbx+0x8],0x1
   140011826:	jne    0x1400118d7
   14001182c:	cmp    DWORD PTR [rbx+0xc],0x0
   140011830:	jne    0x14001186e
   140011832:	mov    ecx,0xa
   140011837:	call   0x14000cb28
   14001183c:	nop
   14001183d:	cmp    DWORD PTR [rbx+0xc],0x0
   140011841:	jne    0x140011864
   140011843:	lea    rcx,[rbx+0x10]
   140011847:	mov    edx,0xfa0
   14001184c:	call   QWORD PTR [rip+0x8906]        # 0x14001a158
   140011852:	test   eax,eax
   140011854:	jne    0x140011861
   140011856:	lea    r13d,[rax+0x1]
   14001185a:	mov    DWORD PTR [rsp+0x28],r13d
   14001185f:	jmp    0x140011864
   140011861:	inc    DWORD PTR [rbx+0xc]
   140011864:	mov    ecx,0xa
   140011869:	call   0x14000ca28
   14001186e:	test   r13d,r13d
   140011871:	jne    0x1400118d7
   140011873:	lea    rcx,[rbx+0x10]
   140011877:	call   QWORD PTR [rip+0x886b]        # 0x14001a0e8
   14001187d:	test   BYTE PTR [rbx+0x8],0x1
   140011881:	je     0x14001188f
   140011883:	lea    rcx,[rbx+0x10]
   140011887:	call   QWORD PTR [rip+0x8863]        # 0x14001a0f0
   14001188d:	jmp    0x1400118d7
   14001188f:	or     rsi,0xffffffffffffffff
   140011893:	test   r13d,r13d
   140011896:	jne    0x1400118d7
   140011898:	mov    BYTE PTR [rbx+0x8],0x1
   14001189c:	mov    QWORD PTR [rbx],rsi
   14001189f:	lea    r8,[rip+0x141da]        # 0x140025a80
   1400118a6:	sub    rbx,QWORD PTR [r8+r14*8]
   1400118aa:	movabs rax,0x2e8ba2e8ba2e8ba3
   1400118b4:	imul   rbx
   1400118b7:	mov    r12,rdx
   1400118ba:	sar    r12,0x4
   1400118be:	mov    rax,r12
   1400118c1:	shr    rax,0x3f
   1400118c5:	add    r12,rax
   1400118c8:	mov    eax,edi
   1400118ca:	shl    eax,0x5
   1400118cd:	add    r12d,eax
   1400118d0:	mov    DWORD PTR [rsp+0x20],r12d
   1400118d5:	jmp    0x1400118eb
   1400118d7:	add    rbx,0x58
   1400118db:	or     rsi,0xffffffffffffffff
   1400118df:	lea    rax,[rip+0x1419a]        # 0x140025a80
   1400118e6:	jmp    0x14001180a
   1400118eb:	cmp    r12d,esi
   1400118ee:	jne    0x140011985
   1400118f4:	inc    edi
   1400118f6:	jmp    0x1400117e6
   1400118fb:	mov    edx,0x58
   140011900:	lea    ecx,[rdx-0x38]
   140011903:	call   0x140010b24
   140011908:	mov    QWORD PTR [rsp+0x30],rax
   14001190d:	test   rax,rax
   140011910:	je     0x140011985
   140011912:	movsxd rdx,edi
   140011915:	lea    r8,[rip+0x14164]        # 0x140025a80
   14001191c:	mov    QWORD PTR [r8+rdx*8],rax
   140011920:	add    DWORD PTR [rip+0x14145],0x20        # 0x140025a6c
   140011927:	mov    rcx,QWORD PTR [r8+rdx*8]
   14001192b:	add    rcx,0xb00
   140011932:	cmp    rax,rcx
   140011935:	jae    0x140011951
   140011937:	mov    BYTE PTR [rax+0x8],0x0
   14001193b:	mov    QWORD PTR [rax],rsi
   14001193e:	mov    BYTE PTR [rax+0x9],0xa
   140011942:	and    DWORD PTR [rax+0xc],0x0
   140011946:	add    rax,0x58
   14001194a:	mov    QWORD PTR [rsp+0x30],rax
   14001194f:	jmp    0x140011927
   140011951:	shl    edi,0x5
   140011954:	mov    DWORD PTR [rsp+0x20],edi
   140011958:	movsxd rcx,edi
   14001195b:	mov    rax,rcx
   14001195e:	sar    rax,0x5
   140011962:	and    ecx,0x1f
   140011965:	imul   rcx,rcx,0x58
   140011969:	mov    rax,QWORD PTR [r8+rax*8]
   14001196d:	mov    BYTE PTR [rax+rcx*1+0x8],0x1
   140011972:	mov    ecx,edi
   140011974:	call   0x1400116d4
   140011979:	test   eax,eax
   14001197b:	cmove  edi,esi
   14001197e:	mov    r12d,edi
   140011981:	mov    DWORD PTR [rsp+0x20],edi
   140011985:	mov    ecx,0xb
   14001198a:	call   0x14000ca28
   14001198f:	mov    eax,r12d
   140011992:	mov    rbx,QWORD PTR [rsp+0x60]
   140011997:	mov    rsi,QWORD PTR [rsp+0x68]
   14001199c:	mov    rdi,QWORD PTR [rsp+0x70]
   1400119a1:	add    rsp,0x40
   1400119a5:	pop    r14
   1400119a7:	pop    r13
   1400119a9:	pop    r12
   1400119ab:	ret    
   1400119ac:	mov    QWORD PTR [rsp+0x20],rbx
   1400119b1:	push   rbp
   1400119b2:	push   rsi
   1400119b3:	push   rdi
   1400119b4:	push   r12
   1400119b6:	push   r13
   1400119b8:	push   r14
   1400119ba:	push   r15
   1400119bc:	lea    rbp,[rsp-0x1a30]
   1400119c4:	mov    eax,0x1b30
   1400119c9:	call   0x140016e80
   1400119ce:	sub    rsp,rax
   1400119d1:	mov    rax,QWORD PTR [rip+0x116e8]        # 0x1400230c0
   1400119d8:	xor    rax,rsp
   1400119db:	mov    QWORD PTR [rbp+0x1a20],rax
   1400119e2:	xor    edi,edi
   1400119e4:	mov    r14d,r8d
   1400119e7:	mov    r13,rdx
   1400119ea:	and    DWORD PTR [rsp+0x44],edi
   1400119ee:	movsxd rbx,ecx
   1400119f1:	test   r8d,r8d
   1400119f4:	jne    0x1400119fd
   1400119f6:	xor    eax,eax
   1400119f8:	jmp    0x1400120e2
   1400119fd:	test   rdx,rdx
   140011a00:	jne    0x140011a21
   140011a02:	call   0x14000bde0
   140011a07:	and    DWORD PTR [rax],edi
   140011a09:	call   0x14000bdc0
   140011a0e:	mov    DWORD PTR [rax],0x16
   140011a14:	call   0x14000d01c
   140011a19:	or     eax,0xffffffff
   140011a1c:	jmp    0x1400120e2
   140011a21:	mov    r15,rbx
   140011a24:	mov    r12,rbx
   140011a27:	lea    rax,[rip+0x14052]        # 0x140025a80
   140011a2e:	sar    r12,0x5
   140011a32:	and    r15d,0x1f
   140011a36:	mov    rcx,QWORD PTR [rax+r12*8]
   140011a3a:	mov    QWORD PTR [rsp+0x50],r12
   140011a3f:	imul   r15,r15,0x58
   140011a43:	mov    sil,BYTE PTR [r15+rcx*1+0x38]
   140011a48:	mov    QWORD PTR [rsp+0x60],r15
   140011a4d:	add    sil,sil
   140011a50:	sar    sil,1
   140011a53:	cmp    sil,0x2
   140011a57:	je     0x140011a5f
   140011a59:	cmp    sil,0x1
   140011a5d:	jne    0x140011a68
   140011a5f:	mov    eax,r14d
   140011a62:	not    eax
   140011a64:	test   al,0x1
   140011a66:	je     0x140011a02
   140011a68:	test   BYTE PTR [r15+rcx*1+0x8],0x20
   140011a6e:	je     0x140011a7d
   140011a70:	xor    edx,edx
   140011a72:	mov    ecx,ebx
   140011a74:	lea    r8d,[rdx+0x2]
   140011a78:	call   0x140015d7c
   140011a7d:	mov    ecx,ebx
   140011a7f:	call   0x140015228
   140011a84:	test   eax,eax
   140011a86:	je     0x140011d56
   140011a8c:	lea    rax,[rip+0x13fed]        # 0x140025a80
   140011a93:	mov    rax,QWORD PTR [rax+r12*8]
   140011a97:	test   BYTE PTR [r15+rax*1+0x8],0x80
   140011a9d:	je     0x140011d56
   140011aa3:	call   0x14000d204
   140011aa8:	xor    ebx,ebx
   140011aaa:	lea    rdx,[rsp+0x5c]
   140011aaf:	mov    rcx,QWORD PTR [rax+0xc0]
   140011ab6:	lea    rax,[rip+0x13fc3]        # 0x140025a80
   140011abd:	cmp    DWORD PTR [rcx+0x14],ebx
   140011ac0:	mov    rcx,QWORD PTR [rax+r12*8]
   140011ac4:	mov    rcx,QWORD PTR [r15+rcx*1]
   140011ac8:	sete   bl
   140011acb:	call   QWORD PTR [rip+0x87a7]        # 0x14001a278
   140011ad1:	test   eax,eax
   140011ad3:	je     0x140011d56
   140011ad9:	test   ebx,ebx
   140011adb:	je     0x140011ae6
   140011add:	test   sil,sil
   140011ae0:	je     0x140011d56
   140011ae6:	call   QWORD PTR [rip+0x8784]        # 0x14001a270
   140011aec:	and    DWORD PTR [rsp+0x58],edi
   140011af0:	mov    rbx,r13
   140011af3:	mov    DWORD PTR [rsp+0x5c],eax
   140011af7:	test   r14d,r14d
   140011afa:	je     0x140011d4d
   140011b00:	test   sil,sil
   140011b03:	jne    0x140011c8d
   140011b09:	mov    cl,BYTE PTR [rbx]
   140011b0b:	xor    eax,eax
   140011b0d:	cmp    cl,0xa
   140011b10:	sete   al
   140011b13:	mov    DWORD PTR [rsp+0x4c],eax
   140011b17:	lea    rax,[rip+0x13f62]        # 0x140025a80
   140011b1e:	mov    rdx,QWORD PTR [rax+r12*8]
   140011b22:	cmp    DWORD PTR [r15+rdx*1+0x50],0x0
   140011b28:	je     0x140011b4a
   140011b2a:	mov    al,BYTE PTR [r15+rdx*1+0x4c]
   140011b2f:	mov    BYTE PTR [rsp+0x61],cl
   140011b33:	mov    r8d,0x2
   140011b39:	mov    BYTE PTR [rsp+0x60],al
   140011b3d:	and    DWORD PTR [r15+rdx*1+0x50],0x0
   140011b43:	lea    rdx,[rsp+0x60]
   140011b48:	jmp    0x140011b93
   140011b4a:	movsx  ecx,cl
   140011b4d:	call   0x1400152d0
   140011b52:	test   eax,eax
   140011b54:	je     0x140011b8a
   140011b56:	mov    rax,r14
   140011b59:	sub    rax,rbx
   140011b5c:	add    rax,r13
   140011b5f:	cmp    rax,0x1
   140011b63:	jle    0x140011d16
   140011b69:	lea    rcx,[rsp+0x40]
   140011b6e:	mov    r8d,0x2
   140011b74:	mov    rdx,rbx
   140011b77:	call   0x140015d74
   140011b7c:	cmp    eax,0xffffffff
   140011b7f:	je     0x140011d37
   140011b85:	inc    rbx
   140011b88:	jmp    0x140011ba6
   140011b8a:	mov    r8d,0x1
   140011b90:	mov    rdx,rbx
   140011b93:	lea    rcx,[rsp+0x40]
   140011b98:	call   0x140015d74
   140011b9d:	cmp    eax,0xffffffff
   140011ba0:	je     0x140011d37
   140011ba6:	and    QWORD PTR [rsp+0x38],0x0
   140011bac:	and    QWORD PTR [rsp+0x30],0x0
   140011bb2:	mov    ecx,DWORD PTR [rsp+0x5c]
   140011bb6:	lea    rax,[rsp+0x60]
   140011bbb:	lea    r8,[rsp+0x40]
   140011bc0:	mov    r9d,0x1
   140011bc6:	xor    edx,edx
   140011bc8:	mov    DWORD PTR [rsp+0x28],0x5
   140011bd0:	inc    rbx
   140011bd3:	mov    QWORD PTR [rsp+0x20],rax
   140011bd8:	call   QWORD PTR [rip+0x8622]        # 0x14001a200
   140011bde:	mov    r12d,eax
   140011be1:	test   eax,eax
   140011be3:	je     0x140011d37
   140011be9:	mov    rcx,QWORD PTR [rsp+0x50]
   140011bee:	and    QWORD PTR [rsp+0x20],0x0
   140011bf4:	lea    rax,[rip+0x13e85]        # 0x140025a80
   140011bfb:	mov    rcx,QWORD PTR [rax+rcx*8]
   140011bff:	lea    r9,[rsp+0x58]
   140011c04:	lea    rdx,[rsp+0x60]
   140011c09:	mov    rcx,QWORD PTR [r15+rcx*1]
   140011c0d:	mov    r8d,r12d
   140011c10:	call   QWORD PTR [rip+0x85d2]        # 0x14001a1e8
   140011c16:	test   eax,eax
   140011c18:	je     0x140011d40
   140011c1e:	mov    edi,ebx
   140011c20:	sub    edi,r13d
   140011c23:	add    edi,DWORD PTR [rsp+0x44]
   140011c27:	cmp    DWORD PTR [rsp+0x58],r12d
   140011c2c:	jl     0x140011d37
   140011c32:	cmp    DWORD PTR [rsp+0x4c],0x0
   140011c37:	mov    r12,QWORD PTR [rsp+0x50]
   140011c3c:	je     0x140011d07
   140011c42:	and    QWORD PTR [rsp+0x20],0x0
   140011c48:	lea    rax,[rip+0x13e31]        # 0x140025a80
   140011c4f:	mov    BYTE PTR [rsp+0x60],0xd
   140011c54:	mov    rcx,QWORD PTR [rax+r12*8]
   140011c58:	lea    r9,[rsp+0x58]
   140011c5d:	lea    rdx,[rsp+0x60]
   140011c62:	mov    rcx,QWORD PTR [r15+rcx*1]
   140011c66:	mov    r8d,0x1
   140011c6c:	call   QWORD PTR [rip+0x8576]        # 0x14001a1e8
   140011c72:	test   eax,eax
   140011c74:	je     0x140011d40
   140011c7a:	cmp    DWORD PTR [rsp+0x58],0x1
   140011c7f:	jl     0x140011d37
   140011c85:	inc    DWORD PTR [rsp+0x44]
   140011c89:	inc    edi
   140011c8b:	jmp    0x140011d07
   140011c8d:	cmp    sil,0x1
   140011c91:	je     0x140011c99
   140011c93:	cmp    sil,0x2
   140011c97:	jne    0x140011cb7
   140011c99:	movzx  eax,WORD PTR [rbx]
   140011c9c:	xor    r12d,r12d
   140011c9f:	cmp    ax,0xa
   140011ca3:	mov    WORD PTR [rsp+0x40],ax
   140011ca8:	sete   r12b
   140011cac:	add    rbx,0x2
   140011cb0:	mov    DWORD PTR [rsp+0x4c],r12d
   140011cb5:	jmp    0x140011cbc
   140011cb7:	mov    r12d,DWORD PTR [rsp+0x4c]
   140011cbc:	cmp    sil,0x1
   140011cc0:	je     0x140011cc8
   140011cc2:	cmp    sil,0x2
   140011cc6:	jne    0x140011d02
   140011cc8:	movzx  ecx,WORD PTR [rsp+0x40]
   140011ccd:	call   0x140016e08
   140011cd2:	cmp    ax,WORD PTR [rsp+0x40]
   140011cd7:	jne    0x140011d40
   140011cd9:	add    edi,0x2
   140011cdc:	test   r12d,r12d
   140011cdf:	je     0x140011d02
   140011ce1:	mov    r12d,0xd
   140011ce7:	mov    ecx,r12d
   140011cea:	mov    WORD PTR [rsp+0x40],r12w
   140011cf0:	call   0x140016e08
   140011cf5:	cmp    ax,WORD PTR [rsp+0x40]
   140011cfa:	jne    0x140011d40
   140011cfc:	inc    edi
   140011cfe:	inc    DWORD PTR [rsp+0x44]
   140011d02:	mov    r12,QWORD PTR [rsp+0x50]
   140011d07:	mov    eax,ebx
   140011d09:	sub    eax,r13d
   140011d0c:	cmp    eax,r14d
   140011d0f:	jae    0x140011d37
   140011d11:	jmp    0x140011b00
   140011d16:	mov    al,BYTE PTR [rbx]
   140011d18:	lea    rdx,[rip+0x13d61]        # 0x140025a80
   140011d1f:	inc    edi
   140011d21:	mov    rcx,QWORD PTR [rdx+r12*8]
   140011d25:	mov    BYTE PTR [r15+rcx*1+0x4c],al
   140011d2a:	mov    rax,QWORD PTR [rdx+r12*8]
   140011d2e:	mov    DWORD PTR [r15+rax*1+0x50],0x1
   140011d37:	mov    ebx,DWORD PTR [rsp+0x4c]
   140011d3b:	jmp    0x140012039
   140011d40:	call   QWORD PTR [rip+0x832a]        # 0x14001a070
   140011d46:	mov    ebx,eax
   140011d48:	jmp    0x140012039
   140011d4d:	mov    ebx,DWORD PTR [rsp+0x4c]
   140011d51:	jmp    0x140012041
   140011d56:	lea    rax,[rip+0x13d23]        # 0x140025a80
   140011d5d:	mov    rcx,QWORD PTR [rax+r12*8]
   140011d61:	test   BYTE PTR [r15+rcx*1+0x8],0x80
   140011d67:	je     0x14001206b
   140011d6d:	xor    ebx,ebx
   140011d6f:	mov    r12,r13
   140011d72:	test   sil,sil
   140011d75:	jne    0x140011e46
   140011d7b:	test   r14d,r14d
   140011d7e:	je     0x1400120a1
   140011d84:	lea    edx,[rbx+0xd]
   140011d87:	mov    r15d,DWORD PTR [rsp+0x44]
   140011d8c:	lea    rsi,[rbp+0x620]
   140011d93:	xor    ecx,ecx
   140011d95:	mov    eax,r12d
   140011d98:	sub    eax,r13d
   140011d9b:	cmp    eax,r14d
   140011d9e:	jae    0x140011dc7
   140011da0:	mov    al,BYTE PTR [r12]
   140011da4:	inc    r12
   140011da7:	cmp    al,0xa
   140011da9:	jne    0x140011db6
   140011dab:	mov    BYTE PTR [rsi],dl
   140011dad:	inc    r15d
   140011db0:	inc    rsi
   140011db3:	inc    rcx
   140011db6:	inc    rcx
   140011db9:	mov    BYTE PTR [rsi],al
   140011dbb:	inc    rsi
   140011dbe:	cmp    rcx,0x13ff
   140011dc5:	jb     0x140011d95
   140011dc7:	and    QWORD PTR [rsp+0x20],rbx
   140011dcc:	lea    rax,[rbp+0x620]
   140011dd3:	mov    r8d,esi
   140011dd6:	sub    r8d,eax
   140011dd9:	mov    rax,QWORD PTR [rsp+0x50]
   140011dde:	lea    rcx,[rip+0x13c9b]        # 0x140025a80
   140011de5:	mov    rcx,QWORD PTR [rcx+rax*8]
   140011de9:	mov    DWORD PTR [rsp+0x44],r15d
   140011dee:	mov    r15,QWORD PTR [rsp+0x60]
   140011df3:	mov    rcx,QWORD PTR [r15+rcx*1]
   140011df7:	lea    r9,[rsp+0x48]
   140011dfc:	lea    rdx,[rbp+0x620]
   140011e03:	call   QWORD PTR [rip+0x83df]        # 0x14001a1e8
   140011e09:	test   eax,eax
   140011e0b:	je     0x140011d40
   140011e11:	add    edi,DWORD PTR [rsp+0x48]
   140011e15:	lea    rax,[rbp+0x620]
   140011e1c:	sub    rsi,rax
   140011e1f:	movsxd rax,DWORD PTR [rsp+0x48]
   140011e24:	cmp    rax,rsi
   140011e27:	jl     0x140012039
   140011e2d:	mov    eax,r12d
   140011e30:	mov    edx,0xd
   140011e35:	sub    eax,r13d
   140011e38:	cmp    eax,r14d
   140011e3b:	jb     0x140011d87
   140011e41:	jmp    0x140012039
   140011e46:	cmp    sil,0x2
   140011e4a:	jne    0x140011f28
   140011e50:	test   r14d,r14d
   140011e53:	je     0x1400120a1
   140011e59:	mov    edx,0xd
   140011e5e:	mov    r15d,DWORD PTR [rsp+0x44]
   140011e63:	lea    rsi,[rbp+0x620]
   140011e6a:	xor    ecx,ecx
   140011e6c:	mov    eax,r12d
   140011e6f:	sub    eax,r13d
   140011e72:	cmp    eax,r14d
   140011e75:	jae    0x140011ea9
   140011e77:	movzx  eax,WORD PTR [r12]
   140011e7c:	add    r12,0x2
   140011e80:	cmp    ax,0xa
   140011e84:	jne    0x140011e95
   140011e86:	mov    WORD PTR [rsi],dx
   140011e89:	add    r15d,0x2
   140011e8d:	add    rsi,0x2
   140011e91:	add    rcx,0x2
   140011e95:	add    rcx,0x2
   140011e99:	mov    WORD PTR [rsi],ax
   140011e9c:	add    rsi,0x2
   140011ea0:	cmp    rcx,0x13fe
   140011ea7:	jb     0x140011e6c
   140011ea9:	and    QWORD PTR [rsp+0x20],rbx
   140011eae:	lea    rax,[rbp+0x620]
   140011eb5:	mov    r8d,esi
   140011eb8:	sub    r8d,eax
   140011ebb:	mov    rax,QWORD PTR [rsp+0x50]
   140011ec0:	lea    rcx,[rip+0x13bb9]        # 0x140025a80
   140011ec7:	mov    rcx,QWORD PTR [rcx+rax*8]
   140011ecb:	mov    DWORD PTR [rsp+0x44],r15d
   140011ed0:	mov    r15,QWORD PTR [rsp+0x60]
   140011ed5:	mov    rcx,QWORD PTR [r15+rcx*1]
   140011ed9:	lea    r9,[rsp+0x48]
   140011ede:	lea    rdx,[rbp+0x620]
   140011ee5:	call   QWORD PTR [rip+0x82fd]        # 0x14001a1e8
   140011eeb:	test   eax,eax
   140011eed:	je     0x140011d40
   140011ef3:	add    edi,DWORD PTR [rsp+0x48]
   140011ef7:	lea    rax,[rbp+0x620]
   140011efe:	sub    rsi,rax
   140011f01:	movsxd rax,DWORD PTR [rsp+0x48]
   140011f06:	cmp    rax,rsi
   140011f09:	jl     0x140012039
   140011f0f:	mov    eax,r12d
   140011f12:	mov    edx,0xd
   140011f17:	sub    eax,r13d
   140011f1a:	cmp    eax,r14d
   140011f1d:	jb     0x140011e5e
   140011f23:	jmp    0x140012039
   140011f28:	test   r14d,r14d
   140011f2b:	je     0x1400120a1
   140011f31:	mov    r8d,0xd
   140011f37:	lea    rcx,[rsp+0x70]
   140011f3c:	xor    edx,edx
   140011f3e:	mov    eax,r12d
   140011f41:	sub    eax,r13d
   140011f44:	cmp    eax,r14d
   140011f47:	jae    0x140011f78
   140011f49:	movzx  eax,WORD PTR [r12]
   140011f4e:	add    r12,0x2
   140011f52:	cmp    ax,0xa
   140011f56:	jne    0x140011f64
   140011f58:	mov    WORD PTR [rcx],r8w
   140011f5c:	add    rcx,0x2
   140011f60:	add    rdx,0x2
   140011f64:	add    rdx,0x2
   140011f68:	mov    WORD PTR [rcx],ax
   140011f6b:	add    rcx,0x2
   140011f6f:	cmp    rdx,0x6a8
   140011f76:	jb     0x140011f3e
   140011f78:	and    QWORD PTR [rsp+0x38],0x0
   140011f7e:	and    QWORD PTR [rsp+0x30],0x0
   140011f84:	lea    rax,[rsp+0x70]
   140011f89:	sub    ecx,eax
   140011f8b:	lea    r8,[rsp+0x70]
   140011f90:	mov    DWORD PTR [rsp+0x28],0xd55
   140011f98:	mov    eax,ecx
   140011f9a:	mov    ecx,0xfde9
   140011f9f:	cdq    
   140011fa0:	sub    eax,edx
   140011fa2:	xor    edx,edx
   140011fa4:	sar    eax,1
   140011fa6:	mov    r9d,eax
   140011fa9:	lea    rax,[rbp+0x620]
   140011fb0:	mov    QWORD PTR [rsp+0x20],rax
   140011fb5:	call   QWORD PTR [rip+0x8245]        # 0x14001a200
   140011fbb:	mov    r15d,eax
   140011fbe:	test   eax,eax
   140011fc0:	je     0x140012061
   140011fc6:	xor    esi,esi
   140011fc8:	mov    rax,QWORD PTR [rsp+0x50]
   140011fcd:	and    QWORD PTR [rsp+0x20],0x0
   140011fd3:	movsxd rcx,esi
   140011fd6:	lea    rdx,[rbp+rcx*1+0x620]
   140011fde:	mov    r8d,r15d
   140011fe1:	lea    rcx,[rip+0x13a98]        # 0x140025a80
   140011fe8:	mov    rcx,QWORD PTR [rcx+rax*8]
   140011fec:	mov    rax,QWORD PTR [rsp+0x60]
   140011ff1:	lea    r9,[rsp+0x48]
   140011ff6:	mov    rcx,QWORD PTR [rax+rcx*1]
   140011ffa:	sub    r8d,esi
   140011ffd:	call   QWORD PTR [rip+0x81e5]        # 0x14001a1e8
   140012003:	test   eax,eax
   140012005:	je     0x140012012
   140012007:	add    esi,DWORD PTR [rsp+0x48]
   14001200b:	cmp    r15d,esi
   14001200e:	jg     0x140011fc8
   140012010:	jmp    0x14001201a
   140012012:	call   QWORD PTR [rip+0x8058]        # 0x14001a070
   140012018:	mov    ebx,eax
   14001201a:	cmp    r15d,esi
   14001201d:	jg     0x140012034
   14001201f:	mov    edi,r12d
   140012022:	mov    r8d,0xd
   140012028:	sub    edi,r13d
   14001202b:	cmp    edi,r14d
   14001202e:	jb     0x140011f37
   140012034:	mov    r15,QWORD PTR [rsp+0x60]
   140012039:	test   edi,edi
   14001203b:	jne    0x1400120dc
   140012041:	test   ebx,ebx
   140012043:	je     0x1400120a1
   140012045:	cmp    ebx,0x5
   140012048:	jne    0x140012095
   14001204a:	call   0x14000bdc0
   14001204f:	mov    DWORD PTR [rax],0x9
   140012055:	call   0x14000bde0
   14001205a:	mov    DWORD PTR [rax],ebx
   14001205c:	jmp    0x140011a19
   140012061:	call   QWORD PTR [rip+0x8009]        # 0x14001a070
   140012067:	mov    ebx,eax
   140012069:	jmp    0x140012034
   14001206b:	mov    rcx,QWORD PTR [r15+rcx*1]
   14001206f:	and    QWORD PTR [rsp+0x20],rdi
   140012074:	lea    r9,[rsp+0x48]
   140012079:	mov    r8d,r14d
   14001207c:	mov    rdx,r13
   14001207f:	call   QWORD PTR [rip+0x8163]        # 0x14001a1e8
   140012085:	test   eax,eax
   140012087:	je     0x140011d40
   14001208d:	mov    edi,DWORD PTR [rsp+0x48]
   140012091:	xor    ebx,ebx
   140012093:	jmp    0x140012039
   140012095:	mov    ecx,ebx
   140012097:	call   0x14000be00
   14001209c:	jmp    0x140011a19
   1400120a1:	mov    rax,QWORD PTR [rsp+0x50]
   1400120a6:	lea    rcx,[rip+0x139d3]        # 0x140025a80
   1400120ad:	mov    rax,QWORD PTR [rcx+rax*8]
   1400120b1:	test   BYTE PTR [r15+rax*1+0x8],0x40
   1400120b7:	je     0x1400120c4
   1400120b9:	cmp    BYTE PTR [r13+0x0],0x1a
   1400120be:	je     0x1400119f6
   1400120c4:	call   0x14000bdc0
   1400120c9:	mov    DWORD PTR [rax],0x1c
   1400120cf:	call   0x14000bde0
   1400120d4:	and    DWORD PTR [rax],0x0
   1400120d7:	jmp    0x140011a19
   1400120dc:	sub    edi,DWORD PTR [rsp+0x44]
   1400120e0:	mov    eax,edi
   1400120e2:	mov    rcx,QWORD PTR [rbp+0x1a20]
   1400120e9:	xor    rcx,rsp
   1400120ec:	call   0x14000a820
   1400120f1:	mov    rbx,QWORD PTR [rsp+0x1b88]
   1400120f9:	add    rsp,0x1b30
   140012100:	pop    r15
   140012102:	pop    r14
   140012104:	pop    r13
   140012106:	pop    r12
   140012108:	pop    rdi
   140012109:	pop    rsi
   14001210a:	pop    rbp
   14001210b:	ret    
   14001210c:	mov    QWORD PTR [rsp+0x10],rbx
   140012111:	mov    DWORD PTR [rsp+0x8],ecx
   140012115:	push   rsi
   140012116:	push   rdi
   140012117:	push   r12
   140012119:	push   r13
   14001211b:	push   r14
   14001211d:	sub    rsp,0x20
   140012121:	mov    esi,r8d
   140012124:	mov    r12,rdx
   140012127:	movsxd rdi,ecx
   14001212a:	cmp    edi,0xfffffffe
   14001212d:	jne    0x140012147
   14001212f:	call   0x14000bde0
   140012134:	and    DWORD PTR [rax],0x0
   140012137:	call   0x14000bdc0
   14001213c:	mov    DWORD PTR [rax],0x9
   140012142:	jmp    0x1400121d6
   140012147:	test   ecx,ecx
   140012149:	js     0x1400121be
   14001214b:	cmp    edi,DWORD PTR [rip+0x1391b]        # 0x140025a6c
   140012151:	jae    0x1400121be
   140012153:	mov    rbx,rdi
   140012156:	mov    r13,rdi
   140012159:	sar    r13,0x5
   14001215d:	lea    r14,[rip+0x1391c]        # 0x140025a80
   140012164:	and    ebx,0x1f
   140012167:	imul   rbx,rbx,0x58
   14001216b:	mov    rax,QWORD PTR [r14+r13*8]
   14001216f:	movsx  ecx,BYTE PTR [rax+rbx*1+0x8]
   140012174:	and    ecx,0x1
   140012177:	je     0x1400121be
   140012179:	mov    ecx,edi
   14001217b:	call   0x1400116d4
   140012180:	nop
   140012181:	mov    rax,QWORD PTR [r14+r13*8]
   140012185:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   14001218a:	je     0x14001219d
   14001218c:	mov    r8d,esi
   14001218f:	mov    rdx,r12
   140012192:	mov    ecx,edi
   140012194:	call   0x1400119ac
   140012199:	mov    ebx,eax
   14001219b:	jmp    0x1400121b3
   14001219d:	call   0x14000bdc0
   1400121a2:	mov    DWORD PTR [rax],0x9
   1400121a8:	call   0x14000bde0
   1400121ad:	and    DWORD PTR [rax],0x0
   1400121b0:	or     ebx,0xffffffff
   1400121b3:	mov    ecx,edi
   1400121b5:	call   0x14001177c
   1400121ba:	mov    eax,ebx
   1400121bc:	jmp    0x1400121d9
   1400121be:	call   0x14000bde0
   1400121c3:	and    DWORD PTR [rax],0x0
   1400121c6:	call   0x14000bdc0
   1400121cb:	mov    DWORD PTR [rax],0x9
   1400121d1:	call   0x14000d01c
   1400121d6:	or     eax,0xffffffff
   1400121d9:	mov    rbx,QWORD PTR [rsp+0x58]
   1400121de:	add    rsp,0x20
   1400121e2:	pop    r14
   1400121e4:	pop    r13
   1400121e6:	pop    r12
   1400121e8:	pop    rdi
   1400121e9:	pop    rsi
   1400121ea:	ret    
   1400121eb:	int3   
   1400121ec:	mov    QWORD PTR [rsp+0x8],rbx
   1400121f1:	mov    QWORD PTR [rsp+0x18],rbp
   1400121f6:	mov    QWORD PTR [rsp+0x20],rsi
   1400121fb:	push   rdi
   1400121fc:	sub    rsp,0x20
   140012200:	mov    rsi,r8
   140012203:	mov    rbp,rdx
   140012206:	mov    rdi,rcx
   140012209:	test   rdx,rdx
   14001220c:	je     0x1400122fa
   140012212:	cmp    BYTE PTR [rdx],0x0
   140012215:	je     0x1400122fa
   14001221b:	test   rcx,rcx
   14001221e:	jne    0x14001228a
   140012220:	xor    r9d,r9d
   140012223:	xor    r8d,r8d
   140012226:	xor    edx,edx
   140012228:	mov    rcx,rbp
   14001222b:	call   QWORD PTR [rip+0x804f]        # 0x14001a280
   140012231:	test   eax,eax
   140012233:	jne    0x140012249
   140012235:	call   QWORD PTR [rip+0x7e35]        # 0x14001a070
   14001223b:	mov    ecx,eax
   14001223d:	call   0x14000be00
   140012242:	xor    eax,eax
   140012244:	jmp    0x140012302
   140012249:	mov    eax,eax
   14001224b:	cmp    rsi,rax
   14001224e:	cmova  rax,rsi
   140012252:	mov    rsi,rax
   140012255:	cmp    rax,0xffffffffffffffff
   140012259:	jbe    0x140012268
   14001225b:	call   0x14000bdc0
   140012260:	mov    DWORD PTR [rax],0x16
   140012266:	jmp    0x140012242
   140012268:	mov    edx,0x1
   14001226d:	mov    rcx,rax
   140012270:	call   0x14000eb14
   140012275:	mov    rbx,rax
   140012278:	test   rax,rax
   14001227b:	jne    0x1400122a4
   14001227d:	call   0x14000bdc0
   140012282:	mov    DWORD PTR [rax],0xc
   140012288:	jmp    0x140012242
   14001228a:	test   r8,r8
   14001228d:	jne    0x1400122a1
   14001228f:	call   0x14000bdc0
   140012294:	mov    DWORD PTR [rax],0x16
   14001229a:	call   0x14000d01c
   14001229f:	jmp    0x140012242
   1400122a1:	mov    rbx,rcx
   1400122a4:	lea    r9,[rsp+0x38]
   1400122a9:	mov    r8,rbx
   1400122ac:	mov    edx,esi
   1400122ae:	mov    rcx,rbp
   1400122b1:	call   QWORD PTR [rip+0x7fc9]        # 0x14001a280
   1400122b7:	mov    ecx,eax
   1400122b9:	cmp    rcx,rsi
   1400122bc:	jb     0x1400122db
   1400122be:	test   rdi,rdi
   1400122c1:	jne    0x1400122cb
   1400122c3:	mov    rcx,rbx
   1400122c6:	call   0x14000b460
   1400122cb:	call   0x14000bdc0
   1400122d0:	mov    DWORD PTR [rax],0x22
   1400122d6:	jmp    0x140012242
   1400122db:	test   eax,eax
   1400122dd:	jne    0x1400122f5
   1400122df:	test   rdi,rdi
   1400122e2:	jne    0x140012235
   1400122e8:	mov    rcx,rbx
   1400122eb:	call   0x14000b460
   1400122f0:	jmp    0x140012235
   1400122f5:	mov    rax,rbx
   1400122f8:	jmp    0x140012302
   1400122fa:	mov    edx,r8d
   1400122fd:	call   0x140017060
   140012302:	mov    rbx,QWORD PTR [rsp+0x30]
   140012307:	mov    rbp,QWORD PTR [rsp+0x40]
   14001230c:	mov    rsi,QWORD PTR [rsp+0x48]
   140012311:	add    rsp,0x20
   140012315:	pop    rdi
   140012316:	ret    
   140012317:	int3   
   140012318:	mov    QWORD PTR [rsp+0x8],rbx
   14001231d:	push   rdi
   14001231e:	sub    rsp,0x20
   140012322:	mov    r8,rdx
   140012325:	movzx  edx,cl
   140012328:	cmp    BYTE PTR [r8+0x1],0x3a
   14001232d:	mov    rcx,r8
   140012330:	jne    0x140012336
   140012332:	lea    rcx,[r8+0x2]
   140012336:	mov    al,BYTE PTR [rcx]
   140012338:	cmp    al,0x5c
   14001233a:	je     0x140012340
   14001233c:	cmp    al,0x2f
   14001233e:	jne    0x140012346
   140012340:	cmp    BYTE PTR [rcx+0x1],0x0
   140012344:	je     0x140012354
   140012346:	test   dl,0x10
   140012349:	jne    0x140012354
   14001234b:	mov    ebx,0x8000
   140012350:	test   al,al
   140012352:	jne    0x140012359
   140012354:	mov    ebx,0x4040
   140012359:	shl    dx,0x7
   14001235d:	mov    eax,0x80
   140012362:	mov    rcx,r8
   140012365:	not    dx
   140012368:	and    dx,ax
   14001236b:	mov    eax,0x100
   140012370:	or     dx,ax
   140012373:	or     bx,dx
   140012376:	mov    edx,0x2e
   14001237b:	call   0x140017398
   140012380:	mov    rdi,rax
   140012383:	test   rax,rax
   140012386:	je     0x1400123d8
   140012388:	lea    rdx,[rip+0xd785]        # 0x14001fb14
   14001238f:	mov    rcx,rax
   140012392:	call   0x1400172b0
   140012397:	test   eax,eax
   140012399:	je     0x1400123d4
   14001239b:	lea    rdx,[rip+0xd76a]        # 0x14001fb0c
   1400123a2:	mov    rcx,rdi
   1400123a5:	call   0x1400172b0
   1400123aa:	test   eax,eax
   1400123ac:	je     0x1400123d4
   1400123ae:	lea    rdx,[rip+0xd74f]        # 0x14001fb04
   1400123b5:	mov    rcx,rdi
   1400123b8:	call   0x1400172b0
   1400123bd:	test   eax,eax
   1400123bf:	je     0x1400123d4
   1400123c1:	lea    rdx,[rip+0xd734]        # 0x14001fafc
   1400123c8:	mov    rcx,rdi
   1400123cb:	call   0x1400172b0
   1400123d0:	test   eax,eax
   1400123d2:	jne    0x1400123d8
   1400123d4:	or     bx,0x40
   1400123d8:	movzx  eax,bx
   1400123db:	shr    ax,0x3
   1400123df:	and    ax,0x38
   1400123e3:	or     bx,ax
   1400123e6:	movzx  eax,bx
   1400123e9:	shr    ax,0x6
   1400123ed:	and    ax,0x7
   1400123f1:	or     ax,bx
   1400123f4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400123f9:	add    rsp,0x20
   1400123fd:	pop    rdi
   1400123fe:	ret    
   1400123ff:	int3   
   140012400:	mov    QWORD PTR [rsp+0x18],rbx
   140012405:	mov    QWORD PTR [rsp+0x20],rsi
   14001240a:	push   rdi
   14001240b:	push   r12
   14001240d:	push   r13
   14001240f:	push   r14
   140012411:	push   r15
   140012413:	sub    rsp,0xa0
   14001241a:	mov    rax,QWORD PTR [rip+0x10c9f]        # 0x1400230c0
   140012421:	xor    rax,rsp
   140012424:	mov    QWORD PTR [rsp+0x98],rax
   14001242c:	mov    rdi,rdx
   14001242f:	movsxd rsi,ecx
   140012432:	mov    DWORD PTR [rsp+0x4c],esi
   140012436:	xor    ebx,ebx
   140012438:	mov    eax,ebx
   14001243a:	test   rdx,rdx
   14001243d:	setne  al
   140012440:	test   eax,eax
   140012442:	jne    0x14001245b
   140012444:	call   0x14000bde0
   140012449:	mov    DWORD PTR [rax],ebx
   14001244b:	call   0x14000bdc0
   140012450:	mov    DWORD PTR [rax],0x16
   140012456:	jmp    0x14001277d
   14001245b:	xor    edx,edx
   14001245d:	lea    r8d,[rdx+0x30]
   140012461:	mov    rcx,rdi
   140012464:	call   0x14000a530
   140012469:	cmp    esi,0xfffffffe
   14001246c:	jne    0x140012485
   14001246e:	call   0x14000bde0
   140012473:	mov    DWORD PTR [rax],ebx
   140012475:	call   0x14000bdc0
   14001247a:	mov    DWORD PTR [rax],0x9
   140012480:	jmp    0x140012782
   140012485:	test   esi,esi
   140012487:	js     0x14001276b
   14001248d:	cmp    esi,DWORD PTR [rip+0x135d9]        # 0x140025a6c
   140012493:	jae    0x14001276b
   140012499:	mov    r12,rsi
   14001249c:	mov    r13,rsi
   14001249f:	sar    r13,0x5
   1400124a3:	lea    r15,[rip+0x135d6]        # 0x140025a80
   1400124aa:	and    r12d,0x1f
   1400124ae:	imul   r12,r12,0x58
   1400124b2:	mov    rax,QWORD PTR [r15+r13*8]
   1400124b6:	movsx  ecx,BYTE PTR [rax+r12*1+0x8]
   1400124bc:	mov    r14d,0x1
   1400124c2:	and    ecx,r14d
   1400124c5:	je     0x14001276b
   1400124cb:	mov    ecx,esi
   1400124cd:	call   0x1400116d4
   1400124d2:	nop
   1400124d3:	mov    rcx,QWORD PTR [r15+r13*8]
   1400124d7:	test   BYTE PTR [rcx+r12*1+0x8],r14b
   1400124dc:	jne    0x1400124ee
   1400124de:	call   0x14000bdc0
   1400124e3:	mov    DWORD PTR [rax],0x9
   1400124e9:	jmp    0x14001275d
   1400124ee:	mov    rcx,QWORD PTR [rcx+r12*1]
   1400124f2:	call   QWORD PTR [rip+0x7d28]        # 0x14001a220
   1400124f8:	btr    eax,0xf
   1400124fc:	cmp    eax,r14d
   1400124ff:	je     0x140012599
   140012505:	cmp    eax,0x2
   140012508:	je     0x14001252a
   14001250a:	cmp    eax,0x3
   14001250d:	je     0x140012525
   14001250f:	test   eax,eax
   140012511:	je     0x1400124de
   140012513:	call   QWORD PTR [rip+0x7b57]        # 0x14001a070
   140012519:	mov    ecx,eax
   14001251b:	call   0x14000be00
   140012520:	jmp    0x14001275d
   140012525:	cmp    eax,0x2
   140012528:	jne    0x140012531
   14001252a:	mov    ecx,0x2000
   14001252f:	jmp    0x140012536
   140012531:	mov    ecx,0x1000
   140012536:	mov    WORD PTR [rdi+0x6],cx
   14001253a:	mov    DWORD PTR [rdi],esi
   14001253c:	mov    DWORD PTR [rdi+0x10],esi
   14001253f:	mov    WORD PTR [rdi+0x8],r14w
   140012544:	mov    WORD PTR [rdi+0x4],bx
   140012548:	mov    DWORD PTR [rdi+0xa],ebx
   14001254b:	mov    QWORD PTR [rdi+0x28],rbx
   14001254f:	mov    QWORD PTR [rdi+0x20],rbx
   140012553:	mov    QWORD PTR [rdi+0x18],rbx
   140012557:	cmp    eax,0x2
   14001255a:	jne    0x140012564
   14001255c:	mov    DWORD PTR [rdi+0x14],ebx
   14001255f:	jmp    0x140012760
   140012564:	mov    rcx,QWORD PTR [r15+r13*8]
   140012568:	mov    QWORD PTR [rsp+0x28],rbx
   14001256d:	lea    rax,[rsp+0x48]
   140012572:	mov    QWORD PTR [rsp+0x20],rax
   140012577:	xor    r9d,r9d
   14001257a:	xor    r8d,r8d
   14001257d:	xor    edx,edx
   14001257f:	mov    rcx,QWORD PTR [rcx+r12*1]
   140012583:	call   QWORD PTR [rip+0x7d07]        # 0x14001a290
   140012589:	neg    eax
   14001258b:	sbb    ecx,ecx
   14001258d:	and    ecx,DWORD PTR [rsp+0x48]
   140012591:	mov    DWORD PTR [rdi+0x14],ecx
   140012594:	jmp    0x140012760
   140012599:	mov    DWORD PTR [rdi+0xa],ebx
   14001259c:	mov    DWORD PTR [rdi+0x4],ebx
   14001259f:	mov    WORD PTR [rdi+0x8],r14w
   1400125a4:	mov    rcx,QWORD PTR [r15+r13*8]
   1400125a8:	lea    rdx,[rsp+0x60]
   1400125ad:	mov    rcx,QWORD PTR [rcx+r12*1]
   1400125b1:	call   QWORD PTR [rip+0x7cd1]        # 0x14001a288
   1400125b7:	test   eax,eax
   1400125b9:	je     0x140012513
   1400125bf:	movzx  eax,WORD PTR [rdi+0x6]
   1400125c3:	test   BYTE PTR [rsp+0x60],r14b
   1400125c8:	je     0x1400125d1
   1400125ca:	or     eax,0x124
   1400125cf:	jmp    0x1400125d6
   1400125d1:	or     eax,0x1b6
   1400125d6:	mov    WORD PTR [rdi+0x6],ax
   1400125da:	cmp    DWORD PTR [rsp+0x74],ebx
   1400125de:	jne    0x1400125ec
   1400125e0:	cmp    DWORD PTR [rsp+0x78],ebx
   1400125e4:	jne    0x1400125ec
   1400125e6:	mov    QWORD PTR [rdi+0x20],rbx
   1400125ea:	jmp    0x140012654
   1400125ec:	lea    rdx,[rsp+0x40]
   1400125f1:	lea    rcx,[rsp+0x74]
   1400125f6:	call   QWORD PTR [rip+0x7b1c]        # 0x14001a118
   1400125fc:	test   eax,eax
   1400125fe:	je     0x14001275d
   140012604:	lea    rdx,[rsp+0x50]
   140012609:	lea    rcx,[rsp+0x40]
   14001260e:	call   QWORD PTR [rip+0x7afc]        # 0x14001a110
   140012614:	test   eax,eax
   140012616:	je     0x14001275d
   14001261c:	movzx  eax,WORD PTR [rsp+0x5c]
   140012621:	movzx  r10d,WORD PTR [rsp+0x5a]
   140012627:	movzx  r9d,WORD PTR [rsp+0x58]
   14001262d:	movzx  r8d,WORD PTR [rsp+0x56]
   140012633:	movzx  edx,WORD PTR [rsp+0x52]
   140012638:	movzx  ecx,WORD PTR [rsp+0x50]
   14001263d:	or     DWORD PTR [rsp+0x30],0xffffffff
   140012642:	mov    DWORD PTR [rsp+0x28],eax
   140012646:	mov    DWORD PTR [rsp+0x20],r10d
   14001264b:	call   0x14001313c
   140012650:	mov    QWORD PTR [rdi+0x20],rax
   140012654:	cmp    DWORD PTR [rsp+0x6c],ebx
   140012658:	jne    0x140012666
   14001265a:	cmp    DWORD PTR [rsp+0x70],ebx
   14001265e:	jne    0x140012666
   140012660:	mov    rax,QWORD PTR [rdi+0x20]
   140012664:	jmp    0x1400126ca
   140012666:	lea    rdx,[rsp+0x40]
   14001266b:	lea    rcx,[rsp+0x6c]
   140012670:	call   QWORD PTR [rip+0x7aa2]        # 0x14001a118
   140012676:	test   eax,eax
   140012678:	je     0x14001275d
   14001267e:	lea    rdx,[rsp+0x50]
   140012683:	lea    rcx,[rsp+0x40]
   140012688:	call   QWORD PTR [rip+0x7a82]        # 0x14001a110
   14001268e:	test   eax,eax
   140012690:	je     0x14001275d
   140012696:	movzx  eax,WORD PTR [rsp+0x5c]
   14001269b:	movzx  r10d,WORD PTR [rsp+0x5a]
   1400126a1:	movzx  r9d,WORD PTR [rsp+0x58]
   1400126a7:	movzx  r8d,WORD PTR [rsp+0x56]
   1400126ad:	movzx  edx,WORD PTR [rsp+0x52]
   1400126b2:	movzx  ecx,WORD PTR [rsp+0x50]
   1400126b7:	or     DWORD PTR [rsp+0x30],0xffffffff
   1400126bc:	mov    DWORD PTR [rsp+0x28],eax
   1400126c0:	mov    DWORD PTR [rsp+0x20],r10d
   1400126c5:	call   0x14001313c
   1400126ca:	mov    QWORD PTR [rdi+0x18],rax
   1400126ce:	cmp    DWORD PTR [rsp+0x64],ebx
   1400126d2:	jne    0x1400126e0
   1400126d4:	cmp    DWORD PTR [rsp+0x68],ebx
   1400126d8:	jne    0x1400126e0
   1400126da:	mov    rax,QWORD PTR [rdi+0x20]
   1400126de:	jmp    0x14001273c
   1400126e0:	lea    rdx,[rsp+0x40]
   1400126e5:	lea    rcx,[rsp+0x64]
   1400126ea:	call   QWORD PTR [rip+0x7a28]        # 0x14001a118
   1400126f0:	test   eax,eax
   1400126f2:	je     0x14001275d
   1400126f4:	lea    rdx,[rsp+0x50]
   1400126f9:	lea    rcx,[rsp+0x40]
   1400126fe:	call   QWORD PTR [rip+0x7a0c]        # 0x14001a110
   140012704:	test   eax,eax
   140012706:	je     0x14001275d
   140012708:	movzx  eax,WORD PTR [rsp+0x5c]
   14001270d:	movzx  r10d,WORD PTR [rsp+0x5a]
   140012713:	movzx  r9d,WORD PTR [rsp+0x58]
   140012719:	movzx  r8d,WORD PTR [rsp+0x56]
   14001271f:	movzx  edx,WORD PTR [rsp+0x52]
   140012724:	movzx  ecx,WORD PTR [rsp+0x50]
   140012729:	or     DWORD PTR [rsp+0x30],0xffffffff
   14001272e:	mov    DWORD PTR [rsp+0x28],eax
   140012732:	mov    DWORD PTR [rsp+0x20],r10d
   140012737:	call   0x14001313c
   14001273c:	mov    QWORD PTR [rdi+0x28],rax
   140012740:	mov    eax,DWORD PTR [rsp+0x84]
   140012747:	mov    DWORD PTR [rdi+0x14],eax
   14001274a:	movzx  eax,WORD PTR [rdi+0x6]
   14001274e:	bts    eax,0xf
   140012752:	mov    WORD PTR [rdi+0x6],ax
   140012756:	mov    DWORD PTR [rdi],ebx
   140012758:	mov    DWORD PTR [rdi+0x10],ebx
   14001275b:	jmp    0x140012760
   14001275d:	or     ebx,0xffffffff
   140012760:	mov    ecx,esi
   140012762:	call   0x14001177c
   140012767:	mov    eax,ebx
   140012769:	jmp    0x140012785
   14001276b:	call   0x14000bde0
   140012770:	mov    DWORD PTR [rax],ebx
   140012772:	call   0x14000bdc0
   140012777:	mov    DWORD PTR [rax],0x9
   14001277d:	call   0x14000d01c
   140012782:	or     eax,0xffffffff
   140012785:	mov    rcx,QWORD PTR [rsp+0x98]
   14001278d:	xor    rcx,rsp
   140012790:	call   0x14000a820
   140012795:	lea    r11,[rsp+0xa0]
   14001279d:	mov    rbx,QWORD PTR [r11+0x40]
   1400127a1:	mov    rsi,QWORD PTR [r11+0x48]
   1400127a5:	mov    rsp,r11
   1400127a8:	pop    r15
   1400127aa:	pop    r14
   1400127ac:	pop    r13
   1400127ae:	pop    r12
   1400127b0:	pop    rdi
   1400127b1:	ret    
   1400127b2:	int3   
   1400127b3:	int3   
   1400127b4:	mov    QWORD PTR [rsp+0x10],rbx
   1400127b9:	mov    QWORD PTR [rsp+0x18],r8
   1400127be:	mov    QWORD PTR [rsp+0x8],rcx
   1400127c3:	push   rbp
   1400127c4:	push   rsi
   1400127c5:	push   rdi
   1400127c6:	push   r12
   1400127c8:	push   r13
   1400127ca:	push   r14
   1400127cc:	push   r15
   1400127ce:	mov    rbp,rsp
   1400127d1:	sub    rsp,0x80
   1400127d8:	xor    edi,edi
   1400127da:	mov    r13b,0x80
   1400127dd:	mov    esi,r9d
   1400127e0:	mov    rbx,rdx
   1400127e3:	mov    DWORD PTR [rbp-0x18],0x18
   1400127ea:	lea    r12d,[rdi+0x1]
   1400127ee:	mov    DWORD PTR [rbp-0x28],edi
   1400127f1:	mov    BYTE PTR [rbp+0x58],dil
   1400127f5:	mov    QWORD PTR [rbp-0x10],rdi
   1400127f9:	test   r13b,r9b
   1400127fc:	je     0x140012806
   1400127fe:	mov    DWORD PTR [rbp-0x8],edi
   140012801:	mov    r15b,0x10
   140012804:	jmp    0x14001280d
   140012806:	mov    DWORD PTR [rbp-0x8],r12d
   14001280a:	mov    r15b,dil
   14001280d:	lea    rcx,[rbp-0x28]
   140012811:	call   0x140017814
   140012816:	test   eax,eax
   140012818:	jne    0x140012f46
   14001281e:	mov    eax,0x8000
   140012823:	test   eax,esi
   140012825:	jne    0x140012837
   140012827:	test   esi,0x74000
   14001282d:	jne    0x140012834
   14001282f:	cmp    DWORD PTR [rbp-0x28],eax
   140012832:	je     0x140012837
   140012834:	or     r15b,r13b
   140012837:	mov    ecx,esi
   140012839:	mov    r9d,0x3
   14001283f:	mov    eax,0xc0000000
   140012844:	and    ecx,r9d
   140012847:	mov    r8d,0x80000000
   14001284d:	je     0x1400128aa
   14001284f:	dec    ecx
   140012851:	je     0x140012894
   140012853:	dec    ecx
   140012855:	je     0x14001288f
   140012857:	call   0x14000bde0
   14001285c:	mov    DWORD PTR [rax],edi
   14001285e:	or     DWORD PTR [rbx],0xffffffff
   140012861:	call   0x14000bdc0
   140012866:	mov    ebx,0x16
   14001286b:	mov    DWORD PTR [rax],ebx
   14001286d:	call   0x14000d01c
   140012872:	mov    eax,ebx
   140012874:	mov    rbx,QWORD PTR [rsp+0xc8]
   14001287c:	add    rsp,0x80
   140012883:	pop    r15
   140012885:	pop    r14
   140012887:	pop    r13
   140012889:	pop    r12
   14001288b:	pop    rdi
   14001288c:	pop    rsi
   14001288d:	pop    rbp
   14001288e:	ret    
   14001288f:	mov    r14d,eax
   140012892:	jmp    0x1400128ad
   140012894:	test   sil,0x8
   140012898:	je     0x1400128a2
   14001289a:	test   esi,0x70000
   1400128a0:	jne    0x14001288f
   1400128a2:	mov    r14d,0x40000000
   1400128a8:	jmp    0x1400128ad
   1400128aa:	mov    r14d,r8d
   1400128ad:	mov    ecx,DWORD PTR [rbp+0x60]
   1400128b0:	mov    DWORD PTR [rbp-0x3c],r14d
   1400128b4:	mov    r13d,0x2
   1400128ba:	sub    ecx,0x10
   1400128bd:	je     0x1400128ec
   1400128bf:	sub    ecx,0x10
   1400128c2:	je     0x1400128e7
   1400128c4:	sub    ecx,0x10
   1400128c7:	je     0x1400128e2
   1400128c9:	sub    ecx,0x10
   1400128cc:	je     0x1400128dd
   1400128ce:	cmp    ecx,0x40
   1400128d1:	jne    0x140012857
   1400128d3:	cmp    r14d,r8d
   1400128d6:	mov    edx,edi
   1400128d8:	sete   dl
   1400128db:	jmp    0x1400128ee
   1400128dd:	mov    edx,r9d
   1400128e0:	jmp    0x1400128ee
   1400128e2:	mov    edx,r13d
   1400128e5:	jmp    0x1400128ee
   1400128e7:	mov    edx,r12d
   1400128ea:	jmp    0x1400128ee
   1400128ec:	mov    edx,edi
   1400128ee:	mov    eax,esi
   1400128f0:	mov    ecx,0x700
   1400128f5:	mov    DWORD PTR [rbp-0x38],edx
   1400128f8:	and    eax,ecx
   1400128fa:	mov    r8d,0x100
   140012900:	je     0x140012948
   140012902:	cmp    eax,r8d
   140012905:	je     0x140012940
   140012907:	cmp    eax,0x200
   14001290c:	je     0x140012938
   14001290e:	cmp    eax,0x300
   140012913:	je     0x140012933
   140012915:	cmp    eax,0x400
   14001291a:	je     0x140012948
   14001291c:	cmp    eax,0x500
   140012921:	je     0x14001294b
   140012923:	cmp    eax,0x600
   140012928:	je     0x140012938
   14001292a:	cmp    eax,ecx
   14001292c:	je     0x14001294b
   14001292e:	jmp    0x140012857
   140012933:	mov    r12d,r13d
   140012936:	jmp    0x14001294b
   140012938:	mov    r12d,0x5
   14001293e:	jmp    0x14001294b
   140012940:	mov    r12d,0x4
   140012946:	jmp    0x14001294b
   140012948:	mov    r12d,r9d
   14001294b:	mov    ecx,0x80
   140012950:	mov    DWORD PTR [rbp-0x30],ecx
   140012953:	test   r8d,esi
   140012956:	je     0x14001296e
   140012958:	mov    al,BYTE PTR [rip+0x12022]        # 0x140024980
   14001295e:	not    al
   140012960:	and    al,BYTE PTR [rbp+0x68]
   140012963:	test   al,0x80
   140012965:	lea    eax,[rcx-0x7f]
   140012968:	cmove  ecx,eax
   14001296b:	mov    DWORD PTR [rbp-0x30],ecx
   14001296e:	test   sil,0x40
   140012972:	je     0x14001298a
   140012974:	bts    ecx,0x1a
   140012978:	bts    r14d,0x10
   14001297d:	or     edx,0x4
   140012980:	mov    DWORD PTR [rbp-0x38],edx
   140012983:	mov    DWORD PTR [rbp-0x30],ecx
   140012986:	mov    DWORD PTR [rbp-0x3c],r14d
   14001298a:	bt     esi,0xc
   14001298e:	jae    0x140012996
   140012990:	or     ecx,r8d
   140012993:	mov    DWORD PTR [rbp-0x30],ecx
   140012996:	test   sil,0x20
   14001299a:	je     0x1400129a2
   14001299c:	bts    ecx,0x1b
   1400129a0:	jmp    0x1400129ac
   1400129a2:	test   sil,0x10
   1400129a6:	je     0x1400129af
   1400129a8:	bts    ecx,0x1c
   1400129ac:	mov    DWORD PTR [rbp-0x30],ecx
   1400129af:	call   0x1400117a4
   1400129b4:	mov    DWORD PTR [rbx],eax
   1400129b6:	cmp    eax,0xffffffff
   1400129b9:	jne    0x1400129dc
   1400129bb:	call   0x14000bde0
   1400129c0:	mov    DWORD PTR [rax],edi
   1400129c2:	or     DWORD PTR [rbx],0xffffffff
   1400129c5:	call   0x14000bdc0
   1400129ca:	mov    DWORD PTR [rax],0x18
   1400129d0:	call   0x14000bdc0
   1400129d5:	mov    eax,DWORD PTR [rax]
   1400129d7:	jmp    0x140012874
   1400129dc:	mov    rax,QWORD PTR [rbp+0x40]
   1400129e0:	mov    r8d,DWORD PTR [rbp-0x38]
   1400129e4:	mov    rcx,QWORD PTR [rbp+0x50]
   1400129e8:	mov    DWORD PTR [rax],0x1
   1400129ee:	mov    eax,DWORD PTR [rbp-0x30]
   1400129f1:	mov    QWORD PTR [rsp+0x30],rdi
   1400129f6:	mov    DWORD PTR [rsp+0x28],eax
   1400129fa:	lea    r9,[rbp-0x18]
   1400129fe:	mov    edx,r14d
   140012a01:	mov    DWORD PTR [rsp+0x20],r12d
   140012a06:	call   QWORD PTR [rip+0x788c]        # 0x14001a298
   140012a0c:	mov    QWORD PTR [rbp-0x20],rax
   140012a10:	cmp    rax,0xffffffffffffffff
   140012a14:	jne    0x140012aa5
   140012a1a:	mov    ecx,0xc0000000
   140012a1f:	mov    eax,r14d
   140012a22:	and    eax,ecx
   140012a24:	cmp    eax,ecx
   140012a26:	jne    0x140012a6b
   140012a28:	mov    eax,0x1
   140012a2d:	test   al,sil
   140012a30:	je     0x140012a6b
   140012a32:	mov    eax,DWORD PTR [rbp-0x30]
   140012a35:	mov    r8d,DWORD PTR [rbp-0x38]
   140012a39:	mov    rcx,QWORD PTR [rbp+0x50]
   140012a3d:	btr    r14d,0x1f
   140012a42:	mov    QWORD PTR [rsp+0x30],rdi
   140012a47:	mov    DWORD PTR [rsp+0x28],eax
   140012a4b:	lea    r9,[rbp-0x18]
   140012a4f:	mov    edx,r14d
   140012a52:	mov    DWORD PTR [rsp+0x20],r12d
   140012a57:	mov    DWORD PTR [rbp-0x3c],r14d
   140012a5b:	call   QWORD PTR [rip+0x7837]        # 0x14001a298
   140012a61:	mov    QWORD PTR [rbp-0x20],rax
   140012a65:	cmp    rax,0xffffffffffffffff
   140012a69:	jne    0x140012aa5
   140012a6b:	movsxd rcx,DWORD PTR [rbx]
   140012a6e:	lea    r14,[rip+0x1300b]        # 0x140025a80
   140012a75:	mov    rax,rcx
   140012a78:	and    ecx,0x1f
   140012a7b:	sar    rax,0x5
   140012a7f:	imul   rcx,rcx,0x58
   140012a83:	mov    rax,QWORD PTR [r14+rax*8]
   140012a87:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   140012a8c:	call   QWORD PTR [rip+0x75de]        # 0x14001a070
   140012a92:	mov    ecx,eax
   140012a94:	call   0x14000be00
   140012a99:	call   0x14000bdc0
   140012a9e:	mov    edi,DWORD PTR [rax]
   140012aa0:	jmp    0x140012f3f
   140012aa5:	mov    rcx,rax
   140012aa8:	call   QWORD PTR [rip+0x7772]        # 0x14001a220
   140012aae:	test   eax,eax
   140012ab0:	jne    0x140012afd
   140012ab2:	movsxd rcx,DWORD PTR [rbx]
   140012ab5:	lea    r14,[rip+0x12fc4]        # 0x140025a80
   140012abc:	mov    rax,rcx
   140012abf:	and    ecx,0x1f
   140012ac2:	sar    rax,0x5
   140012ac6:	imul   rcx,rcx,0x58
   140012aca:	mov    rax,QWORD PTR [r14+rax*8]
   140012ace:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   140012ad3:	call   QWORD PTR [rip+0x7597]        # 0x14001a070
   140012ad9:	mov    ecx,eax
   140012adb:	mov    ebx,eax
   140012add:	call   0x14000be00
   140012ae2:	mov    rcx,QWORD PTR [rbp-0x20]
   140012ae6:	call   QWORD PTR [rip+0x758c]        # 0x14001a078
   140012aec:	test   ebx,ebx
   140012aee:	jne    0x140012a99
   140012af0:	call   0x14000bdc0
   140012af5:	mov    DWORD PTR [rax],0xd
   140012afb:	jmp    0x140012a99
   140012afd:	cmp    eax,r13d
   140012b00:	jne    0x140012b08
   140012b02:	or     r15b,0x40
   140012b06:	jmp    0x140012b11
   140012b08:	cmp    eax,0x3
   140012b0b:	jne    0x140012b11
   140012b0d:	or     r15b,0x8
   140012b11:	mov    rdx,QWORD PTR [rbp-0x20]
   140012b15:	mov    ecx,DWORD PTR [rbx]
   140012b17:	call   0x140011504
   140012b1c:	movsxd rcx,DWORD PTR [rbx]
   140012b1f:	lea    r14,[rip+0x12f5a]        # 0x140025a80
   140012b26:	mov    rax,rcx
   140012b29:	and    ecx,0x1f
   140012b2c:	mov    r8d,0x1
   140012b32:	sar    rax,0x5
   140012b36:	or     r15b,r8b
   140012b39:	mov    rax,QWORD PTR [r14+rax*8]
   140012b3d:	imul   rcx,rcx,0x58
   140012b41:	mov    BYTE PTR [rax+rcx*1+0x8],r15b
   140012b46:	movsxd rcx,DWORD PTR [rbx]
   140012b49:	mov    rax,rcx
   140012b4c:	and    ecx,0x1f
   140012b4f:	sar    rax,0x5
   140012b53:	imul   rcx,rcx,0x58
   140012b57:	mov    rax,QWORD PTR [r14+rax*8]
   140012b5b:	and    BYTE PTR [rax+rcx*1+0x38],0x80
   140012b60:	mov    al,r15b
   140012b63:	and    al,0x48
   140012b65:	mov    BYTE PTR [rbp-0x2c],al
   140012b68:	jne    0x140012bf0
   140012b6e:	test   r15b,r15b
   140012b71:	jns    0x140012e1b
   140012b77:	test   r13b,sil
   140012b7a:	je     0x140012bf0
   140012b7c:	mov    ecx,DWORD PTR [rbx]
   140012b7e:	mov    r8d,r13d
   140012b81:	or     edx,0xffffffff
   140012b84:	call   0x1400175cc
   140012b89:	mov    DWORD PTR [rbp-0x34],eax
   140012b8c:	cmp    eax,0xffffffff
   140012b8f:	jne    0x140012baa
   140012b91:	call   0x14000bde0
   140012b96:	cmp    DWORD PTR [rax],0x83
   140012b9c:	je     0x140012bea
   140012b9e:	mov    ecx,DWORD PTR [rbx]
   140012ba0:	call   0x140010d64
   140012ba5:	jmp    0x140012a99
   140012baa:	mov    ecx,DWORD PTR [rbx]
   140012bac:	lea    rdx,[rbp-0x40]
   140012bb0:	mov    r8d,0x1
   140012bb6:	mov    BYTE PTR [rbp-0x40],dil
   140012bba:	call   0x140016270
   140012bbf:	test   eax,eax
   140012bc1:	jne    0x140012bd9
   140012bc3:	cmp    BYTE PTR [rbp-0x40],0x1a
   140012bc7:	jne    0x140012bd9
   140012bc9:	movsxd rdx,DWORD PTR [rbp-0x34]
   140012bcd:	mov    ecx,DWORD PTR [rbx]
   140012bcf:	call   0x140017434
   140012bd4:	cmp    eax,0xffffffff
   140012bd7:	je     0x140012b9e
   140012bd9:	mov    ecx,DWORD PTR [rbx]
   140012bdb:	xor    r8d,r8d
   140012bde:	xor    edx,edx
   140012be0:	call   0x1400175cc
   140012be5:	cmp    eax,0xffffffff
   140012be8:	je     0x140012b9e
   140012bea:	mov    r8d,0x1
   140012bf0:	test   r15b,r15b
   140012bf3:	jns    0x140012e1b
   140012bf9:	mov    edx,0x74000
   140012bfe:	mov    ecx,0x4000
   140012c03:	test   edx,esi
   140012c05:	jne    0x140012c14
   140012c07:	mov    eax,DWORD PTR [rbp-0x28]
   140012c0a:	and    eax,edx
   140012c0c:	jne    0x140012c12
   140012c0e:	or     esi,ecx
   140012c10:	jmp    0x140012c14
   140012c12:	or     esi,eax
   140012c14:	mov    eax,esi
   140012c16:	and    eax,edx
   140012c18:	cmp    eax,ecx
   140012c1a:	je     0x140012c5f
   140012c1c:	cmp    eax,0x10000
   140012c21:	je     0x140012c4c
   140012c23:	cmp    eax,0x14000
   140012c28:	je     0x140012c4c
   140012c2a:	cmp    eax,0x20000
   140012c2f:	je     0x140012c59
   140012c31:	cmp    eax,0x24000
   140012c36:	je     0x140012c59
   140012c38:	cmp    eax,0x40000
   140012c3d:	je     0x140012c46
   140012c3f:	cmp    eax,0x44000
   140012c44:	jne    0x140012c63
   140012c46:	mov    BYTE PTR [rbp+0x58],r8b
   140012c4a:	jmp    0x140012c63
   140012c4c:	mov    ecx,0x301
   140012c51:	mov    eax,esi
   140012c53:	and    eax,ecx
   140012c55:	cmp    eax,ecx
   140012c57:	jne    0x140012c63
   140012c59:	mov    BYTE PTR [rbp+0x58],r13b
   140012c5d:	jmp    0x140012c63
   140012c5f:	mov    BYTE PTR [rbp+0x58],dil
   140012c63:	test   esi,0x70000
   140012c69:	je     0x140012e1b
   140012c6f:	test   r15b,0x40
   140012c73:	mov    r15d,DWORD PTR [rbp-0x3c]
   140012c77:	mov    DWORD PTR [rbp-0x34],edi
   140012c7a:	jne    0x140012e1f
   140012c80:	mov    eax,r15d
   140012c83:	mov    ecx,0xc0000000
   140012c88:	and    eax,ecx
   140012c8a:	cmp    eax,0x40000000
   140012c8f:	je     0x140012da2
   140012c95:	cmp    eax,0x80000000
   140012c9a:	je     0x140012d0c
   140012c9c:	cmp    eax,ecx
   140012c9e:	jne    0x140012e1f
   140012ca4:	test   r12d,r12d
   140012ca7:	je     0x140012e1f
   140012cad:	cmp    r12d,r13d
   140012cb0:	jbe    0x140012cc2
   140012cb2:	cmp    r12d,0x4
   140012cb6:	jbe    0x140012ce5
   140012cb8:	cmp    r12d,0x5
   140012cbc:	jne    0x140012e1f
   140012cc2:	movsx  ecx,BYTE PTR [rbp+0x58]
   140012cc6:	mov    r12d,edi
   140012cc9:	dec    ecx
   140012ccb:	je     0x140012de6
   140012cd1:	dec    ecx
   140012cd3:	jne    0x140012e1f
   140012cd9:	mov    DWORD PTR [rbp-0x34],0xfeff
   140012ce0:	jmp    0x140012df3
   140012ce5:	mov    ecx,DWORD PTR [rbx]
   140012ce7:	mov    r8d,r13d
   140012cea:	xor    edx,edx
   140012cec:	call   0x140015d7c
   140012cf1:	test   rax,rax
   140012cf4:	je     0x140012cc2
   140012cf6:	mov    ecx,DWORD PTR [rbx]
   140012cf8:	xor    r8d,r8d
   140012cfb:	xor    edx,edx
   140012cfd:	call   0x140015d7c
   140012d02:	cmp    rax,0xffffffffffffffff
   140012d06:	je     0x140012b9e
   140012d0c:	mov    ecx,DWORD PTR [rbx]
   140012d0e:	lea    rdx,[rbp-0x34]
   140012d12:	mov    r8d,0x3
   140012d18:	call   0x140016270
   140012d1d:	cmp    eax,0xffffffff
   140012d20:	je     0x140012b9e
   140012d26:	cmp    eax,r13d
   140012d29:	je     0x140012d46
   140012d2b:	cmp    eax,0x3
   140012d2e:	jne    0x140012d91
   140012d30:	cmp    DWORD PTR [rbp-0x34],0xbfbbef
   140012d37:	jne    0x140012d46
   140012d39:	lea    r8d,[rax-0x2]
   140012d3d:	mov    BYTE PTR [rbp+0x58],r8b
   140012d41:	jmp    0x140012e25
   140012d46:	movzx  eax,WORD PTR [rbp-0x34]
   140012d4a:	cmp    eax,0xfffe
   140012d4f:	jne    0x140012d6b
   140012d51:	mov    ecx,DWORD PTR [rbx]
   140012d53:	call   0x140010d64
   140012d58:	call   0x14000bdc0
   140012d5d:	mov    ebx,0x16
   140012d62:	mov    DWORD PTR [rax],ebx
   140012d64:	mov    edi,ebx
   140012d66:	jmp    0x140012f3f
   140012d6b:	cmp    eax,0xfeff
   140012d70:	jne    0x140012d91
   140012d72:	mov    ecx,DWORD PTR [rbx]
   140012d74:	xor    r8d,r8d
   140012d77:	mov    edx,r13d
   140012d7a:	call   0x1400175cc
   140012d7f:	cmp    eax,0xffffffff
   140012d82:	je     0x140012b9e
   140012d88:	mov    BYTE PTR [rbp+0x58],r13b
   140012d8c:	jmp    0x140012e1f
   140012d91:	mov    ecx,DWORD PTR [rbx]
   140012d93:	xor    r8d,r8d
   140012d96:	xor    edx,edx
   140012d98:	call   0x1400175cc
   140012d9d:	cmp    eax,0xffffffff
   140012da0:	jmp    0x140012ddf
   140012da2:	test   r12d,r12d
   140012da5:	je     0x140012e1f
   140012da7:	cmp    r12d,r13d
   140012daa:	jbe    0x140012cc2
   140012db0:	cmp    r12d,0x4
   140012db4:	ja     0x140012cb8
   140012dba:	mov    ecx,DWORD PTR [rbx]
   140012dbc:	mov    r8d,r13d
   140012dbf:	xor    edx,edx
   140012dc1:	call   0x140015d7c
   140012dc6:	test   rax,rax
   140012dc9:	je     0x140012cc2
   140012dcf:	mov    ecx,DWORD PTR [rbx]
   140012dd1:	xor    r8d,r8d
   140012dd4:	xor    edx,edx
   140012dd6:	call   0x140015d7c
   140012ddb:	cmp    rax,0xffffffffffffffff
   140012ddf:	jne    0x140012e1f
   140012de1:	jmp    0x140012b9e
   140012de6:	mov    DWORD PTR [rbp-0x34],0xbfbbef
   140012ded:	mov    r13d,0x3
   140012df3:	mov    ecx,DWORD PTR [rbx]
   140012df5:	movsxd rax,r12d
   140012df8:	mov    r8d,r13d
   140012dfb:	lea    rdx,[rbp+rax*1-0x34]
   140012e00:	sub    r8d,r12d
   140012e03:	call   0x14001210c
   140012e08:	cmp    eax,0xffffffff
   140012e0b:	je     0x140012b9e
   140012e11:	add    r12d,eax
   140012e14:	cmp    r13d,r12d
   140012e17:	jg     0x140012df3
   140012e19:	jmp    0x140012e1f
   140012e1b:	mov    r15d,DWORD PTR [rbp-0x3c]
   140012e1f:	mov    r8d,0x1
   140012e25:	movsxd rcx,DWORD PTR [rbx]
   140012e28:	mov    r12b,BYTE PTR [rbp+0x58]
   140012e2c:	mov    rax,rcx
   140012e2f:	and    ecx,0x1f
   140012e32:	and    r12b,0x7f
   140012e36:	sar    rax,0x5
   140012e3a:	imul   rcx,rcx,0x58
   140012e3e:	mov    rax,QWORD PTR [r14+rax*8]
   140012e42:	and    BYTE PTR [rax+rcx*1+0x38],0x80
   140012e47:	or     BYTE PTR [rax+rcx*1+0x38],r12b
   140012e4c:	movsxd rdx,DWORD PTR [rbx]
   140012e4f:	mov    rax,rdx
   140012e52:	and    edx,0x1f
   140012e55:	sar    rax,0x5
   140012e59:	imul   rdx,rdx,0x58
   140012e5d:	mov    rcx,QWORD PTR [r14+rax*8]
   140012e61:	mov    eax,esi
   140012e63:	and    BYTE PTR [rcx+rdx*1+0x38],0x7f
   140012e68:	shr    eax,0x10
   140012e6b:	shl    al,0x7
   140012e6e:	or     BYTE PTR [rcx+rdx*1+0x38],al
   140012e72:	cmp    BYTE PTR [rbp-0x2c],dil
   140012e76:	jne    0x140012e98
   140012e78:	test   sil,0x8
   140012e7c:	je     0x140012e98
   140012e7e:	movsxd rcx,DWORD PTR [rbx]
   140012e81:	mov    rax,rcx
   140012e84:	and    ecx,0x1f
   140012e87:	sar    rax,0x5
   140012e8b:	imul   rcx,rcx,0x58
   140012e8f:	mov    rax,QWORD PTR [r14+rax*8]
   140012e93:	or     BYTE PTR [rax+rcx*1+0x8],0x20
   140012e98:	mov    ecx,0xc0000000
   140012e9d:	mov    eax,r15d
   140012ea0:	and    eax,ecx
   140012ea2:	cmp    eax,ecx
   140012ea4:	jne    0x140012f3f
   140012eaa:	test   r8b,sil
   140012ead:	je     0x140012f3f
   140012eb3:	mov    rcx,QWORD PTR [rbp-0x20]
   140012eb7:	call   QWORD PTR [rip+0x71bb]        # 0x14001a078
   140012ebd:	mov    eax,DWORD PTR [rbp-0x30]
   140012ec0:	mov    r8d,DWORD PTR [rbp-0x38]
   140012ec4:	mov    rcx,QWORD PTR [rbp+0x50]
   140012ec8:	mov    QWORD PTR [rsp+0x30],rdi
   140012ecd:	mov    DWORD PTR [rsp+0x28],eax
   140012ed1:	btr    r15d,0x1f
   140012ed6:	lea    r9,[rbp-0x18]
   140012eda:	mov    DWORD PTR [rsp+0x20],0x3
   140012ee2:	mov    edx,r15d
   140012ee5:	call   QWORD PTR [rip+0x73ad]        # 0x14001a298
   140012eeb:	cmp    rax,0xffffffffffffffff
   140012eef:	jne    0x140012f26
   140012ef1:	call   QWORD PTR [rip+0x7179]        # 0x14001a070
   140012ef7:	mov    ecx,eax
   140012ef9:	call   0x14000be00
   140012efe:	movsxd r11,DWORD PTR [rbx]
   140012f01:	mov    rax,r11
   140012f04:	and    r11d,0x1f
   140012f08:	sar    rax,0x5
   140012f0c:	imul   r11,r11,0x58
   140012f10:	mov    rax,QWORD PTR [r14+rax*8]
   140012f14:	and    BYTE PTR [rax+r11*1+0x8],0xfe
   140012f1a:	mov    ecx,DWORD PTR [rbx]
   140012f1c:	call   0x1400115b4
   140012f21:	jmp    0x140012a99
   140012f26:	movsxd rdx,DWORD PTR [rbx]
   140012f29:	mov    rcx,rdx
   140012f2c:	and    edx,0x1f
   140012f2f:	sar    rcx,0x5
   140012f33:	imul   rdx,rdx,0x58
   140012f37:	mov    rcx,QWORD PTR [r14+rcx*8]
   140012f3b:	mov    QWORD PTR [rdx+rcx*1],rax
   140012f3f:	mov    eax,edi
   140012f41:	jmp    0x140012874
   140012f46:	xor    r9d,r9d
   140012f49:	xor    r8d,r8d
   140012f4c:	xor    edx,edx
   140012f4e:	xor    ecx,ecx
   140012f50:	mov    QWORD PTR [rsp+0x20],rdi
   140012f55:	call   0x14000cf78
   140012f5a:	int3   
   140012f5b:	int3   
   140012f5c:	mov    rax,rsp
   140012f5f:	mov    DWORD PTR [rax+0x10],edx
   140012f62:	mov    QWORD PTR [rax+0x18],r8
   140012f66:	mov    QWORD PTR [rax+0x20],r9
   140012f6a:	push   rbx
   140012f6b:	push   rdi
   140012f6c:	sub    rsp,0x48
   140012f70:	or     DWORD PTR [rax-0x28],0xffffffff
   140012f74:	and    DWORD PTR [rax-0x24],0x0
   140012f78:	xor    r8d,r8d
   140012f7b:	test   rcx,rcx
   140012f7e:	setne  r8b
   140012f82:	test   r8d,r8d
   140012f85:	jne    0x140012f9f
   140012f87:	call   0x14000bdc0
   140012f8c:	mov    DWORD PTR [rax],0x16
   140012f92:	call   0x14000d01c
   140012f97:	or     eax,0xffffffff
   140012f9a:	jmp    0x14001302a
   140012f9f:	lea    rax,[rsp+0x70]
   140012fa4:	add    rax,0x8
   140012fa8:	mov    r8d,DWORD PTR [rax-0x8]
   140012fac:	mov    DWORD PTR [rsp+0x28],r8d
   140012fb1:	mov    DWORD PTR [rsp+0x20],0x40
   140012fb9:	mov    r9d,edx
   140012fbc:	mov    r8,rcx
   140012fbf:	lea    rdx,[rsp+0x30]
   140012fc4:	lea    rcx,[rsp+0x34]
   140012fc9:	call   0x1400127b4
   140012fce:	mov    edi,eax
   140012fd0:	mov    DWORD PTR [rsp+0x38],eax
   140012fd4:	cmp    DWORD PTR [rsp+0x34],0x0
   140012fd9:	je     0x140013014
   140012fdb:	test   eax,eax
   140012fdd:	je     0x140013007
   140012fdf:	movsxd rbx,DWORD PTR [rsp+0x30]
   140012fe4:	mov    rcx,rbx
   140012fe7:	mov    rax,rbx
   140012fea:	sar    rax,0x5
   140012fee:	lea    rdx,[rip+0x12a8b]        # 0x140025a80
   140012ff5:	and    ecx,0x1f
   140012ff8:	imul   rcx,rcx,0x58
   140012ffc:	mov    rax,QWORD PTR [rdx+rax*8]
   140013000:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   140013005:	jmp    0x14001300b
   140013007:	mov    ebx,DWORD PTR [rsp+0x30]
   14001300b:	mov    ecx,ebx
   14001300d:	call   0x14001177c
   140013012:	jmp    0x140013018
   140013014:	mov    ebx,DWORD PTR [rsp+0x30]
   140013018:	test   edi,edi
   14001301a:	je     0x140013028
   14001301c:	call   0x14000bdc0
   140013021:	mov    DWORD PTR [rax],edi
   140013023:	jmp    0x140012f97
   140013028:	mov    eax,ebx
   14001302a:	add    rsp,0x48
   14001302e:	pop    rdi
   14001302f:	pop    rbx
   140013030:	ret    
   140013031:	int3   
   140013032:	int3   
   140013033:	int3   
   140013034:	mov    QWORD PTR [rsp+0x8],rbx
   140013039:	push   rdi
   14001303a:	sub    rsp,0x40
   14001303e:	and    DWORD PTR [rsp+0x30],0x0
   140013043:	xor    eax,eax
   140013045:	mov    rdi,QWORD PTR [rsp+0x70]
   14001304a:	test   rdi,rdi
   14001304d:	setne  al
   140013050:	test   eax,eax
   140013052:	jne    0x14001306c
   140013054:	call   0x14000bdc0
   140013059:	mov    ebx,0x16
   14001305e:	mov    DWORD PTR [rax],ebx
   140013060:	call   0x14000d01c
   140013065:	mov    eax,ebx
   140013067:	jmp    0x1400130fb
   14001306c:	or     DWORD PTR [rdi],0xffffffff
   14001306f:	xor    eax,eax
   140013071:	test   rcx,rcx
   140013074:	setne  al
   140013077:	test   eax,eax
   140013079:	je     0x140013054
   14001307b:	cmp    DWORD PTR [rsp+0x78],0x0
   140013080:	je     0x140013095
   140013082:	test   r9d,0xfffffe7f
   140013089:	mov    eax,0x0
   14001308e:	sete   al
   140013091:	test   eax,eax
   140013093:	je     0x140013054
   140013095:	mov    DWORD PTR [rsp+0x28],r9d
   14001309a:	mov    DWORD PTR [rsp+0x20],r8d
   14001309f:	mov    r9d,edx
   1400130a2:	mov    r8,rcx
   1400130a5:	mov    rdx,rdi
   1400130a8:	lea    rcx,[rsp+0x30]
   1400130ad:	call   0x1400127b4
   1400130b2:	mov    ebx,eax
   1400130b4:	mov    DWORD PTR [rsp+0x34],eax
   1400130b8:	cmp    DWORD PTR [rsp+0x30],0x0
   1400130bd:	je     0x1400130eb
   1400130bf:	test   eax,eax
   1400130c1:	je     0x1400130e4
   1400130c3:	movsxd rcx,DWORD PTR [rdi]
   1400130c6:	mov    rax,rcx
   1400130c9:	sar    rax,0x5
   1400130cd:	lea    rdx,[rip+0x129ac]        # 0x140025a80
   1400130d4:	and    ecx,0x1f
   1400130d7:	imul   rcx,rcx,0x58
   1400130db:	mov    rax,QWORD PTR [rdx+rax*8]
   1400130df:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   1400130e4:	mov    ecx,DWORD PTR [rdi]
   1400130e6:	call   0x14001177c
   1400130eb:	test   ebx,ebx
   1400130ed:	je     0x140013065
   1400130f3:	or     DWORD PTR [rdi],0xffffffff
   1400130f6:	jmp    0x140013065
   1400130fb:	mov    rbx,QWORD PTR [rsp+0x50]
   140013100:	add    rsp,0x40
   140013104:	pop    rdi
   140013105:	ret    
   140013106:	int3   
   140013107:	int3   
   140013108:	sub    rsp,0x38
   14001310c:	mov    eax,r9d
   14001310f:	mov    r9d,DWORD PTR [rsp+0x60]
   140013114:	mov    r10d,r8d
   140013117:	mov    r11,rdx
   14001311a:	mov    DWORD PTR [rsp+0x28],0x1
   140013122:	mov    QWORD PTR [rsp+0x20],rcx
   140013127:	mov    r8d,eax
   14001312a:	mov    edx,r10d
   14001312d:	mov    rcx,r11
   140013130:	call   0x140013034
   140013135:	add    rsp,0x38
   140013139:	ret    
   14001313a:	int3   
   14001313b:	int3   
   14001313c:	rex push rbp
   14001313e:	push   rbx
   14001313f:	push   rsi
   140013140:	push   rdi
   140013141:	push   r12
   140013143:	push   r13
   140013145:	push   r14
   140013147:	push   r15
   140013149:	mov    rbp,rsp
   14001314c:	sub    rsp,0x78
   140013150:	mov    rax,QWORD PTR [rip+0xff69]        # 0x1400230c0
   140013157:	xor    rax,rsp
   14001315a:	mov    QWORD PTR [rbp-0x10],rax
   14001315e:	xor    edi,edi
   140013160:	lea    ebx,[rcx-0x76c]
   140013166:	movsxd r15,r9d
   140013169:	movsxd rsi,edx
   14001316c:	mov    DWORD PTR [rbp-0x48],edi
   14001316f:	mov    DWORD PTR [rbp-0x44],edi
   140013172:	mov    DWORD PTR [rbp-0x40],edi
   140013175:	cmp    ebx,0x46
   140013178:	jl     0x1400133da
   14001317e:	cmp    ebx,0x44c
   140013184:	jg     0x1400133da
   14001318a:	lea    eax,[rsi-0x1]
   14001318d:	cmp    eax,0xb
   140013190:	ja     0x1400133da
   140013196:	cmp    r15d,0x17
   14001319a:	ja     0x1400133da
   1400131a0:	movsxd r13,DWORD PTR [rbp+0x68]
   1400131a4:	cmp    r13d,0x3b
   1400131a8:	ja     0x1400133da
   1400131ae:	movsxd r14,DWORD PTR [rbp+0x70]
   1400131b2:	cmp    r14d,0x3b
   1400131b6:	ja     0x1400133da
   1400131bc:	lea    r10d,[rdi+0x1]
   1400131c0:	cmp    r8d,r10d
   1400131c3:	jl     0x1400133da
   1400131c9:	lea    rcx,[rip+0x11438]        # 0x140024608
   1400131d0:	mov    r11d,0x51eb851f
   1400131d6:	mov    r9d,DWORD PTR [rcx+rsi*4-0x4]
   1400131db:	mov    ecx,DWORD PTR [rcx+rsi*4]
   1400131de:	sub    ecx,r9d
   1400131e1:	cmp    ecx,r8d
   1400131e4:	jge    0x140013248
   1400131e6:	mov    eax,ebx
   1400131e8:	and    eax,0x80000003
   1400131ed:	jge    0x1400131f8
   1400131ef:	sub    eax,r10d
   1400131f2:	or     eax,0xfffffffc
   1400131f5:	add    eax,r10d
   1400131f8:	test   eax,eax
   1400131fa:	jne    0x140013212
   1400131fc:	mov    eax,r11d
   1400131ff:	imul   ebx
   140013201:	sar    edx,0x5
   140013204:	mov    eax,edx
   140013206:	shr    eax,0x1f
   140013209:	add    edx,eax
   14001320b:	imul   edx,edx,0x64
   14001320e:	cmp    ebx,edx
   140013210:	jne    0x140013235
   140013212:	lea    ecx,[rbx+0x76c]
   140013218:	mov    eax,r11d
   14001321b:	imul   ecx
   14001321d:	sar    edx,0x7
   140013220:	mov    eax,edx
   140013222:	shr    eax,0x1f
   140013225:	add    edx,eax
   140013227:	imul   edx,edx,0x190
   14001322d:	cmp    ecx,edx
   14001322f:	jne    0x1400133da
   140013235:	cmp    esi,0x2
   140013238:	jne    0x1400133da
   14001323e:	cmp    r8d,0x1d
   140013242:	jg     0x1400133da
   140013248:	mov    eax,ebx
   14001324a:	lea    r12d,[r9+r8*1]
   14001324e:	and    eax,0x80000003
   140013253:	jge    0x14001325e
   140013255:	sub    eax,r10d
   140013258:	or     eax,0xfffffffc
   14001325b:	add    eax,r10d
   14001325e:	test   eax,eax
   140013260:	jne    0x140013278
   140013262:	mov    eax,r11d
   140013265:	imul   ebx
   140013267:	sar    edx,0x5
   14001326a:	mov    eax,edx
   14001326c:	shr    eax,0x1f
   14001326f:	add    edx,eax
   140013271:	imul   edx,edx,0x64
   140013274:	cmp    ebx,edx
   140013276:	jne    0x140013297
   140013278:	lea    ecx,[rbx+0x76c]
   14001327e:	mov    eax,r11d
   140013281:	imul   ecx
   140013283:	sar    edx,0x7
   140013286:	mov    eax,edx
   140013288:	shr    eax,0x1f
   14001328b:	add    edx,eax
   14001328d:	imul   edx,edx,0x190
   140013293:	cmp    ecx,edx
   140013295:	jne    0x14001329f
   140013297:	cmp    esi,0x2
   14001329a:	jle    0x14001329f
   14001329c:	add    r12d,r10d
   14001329f:	call   0x140018244
   1400132a4:	lea    rcx,[rbp-0x48]
   1400132a8:	call   0x1400182b0
   1400132ad:	test   eax,eax
   1400132af:	jne    0x1400133c5
   1400132b5:	lea    rcx,[rbp-0x44]
   1400132b9:	call   0x1400182e0
   1400132be:	test   eax,eax
   1400132c0:	jne    0x1400133b0
   1400132c6:	lea    rcx,[rbp-0x40]
   1400132ca:	call   0x140018310
   1400132cf:	test   eax,eax
   1400132d1:	jne    0x14001339b
   1400132d7:	lea    ecx,[rbx+0x12b]
   1400132dd:	mov    r10d,0x51eb851f
   1400132e3:	lea    r8d,[rbx-0x1]
   1400132e7:	mov    eax,r10d
   1400132ea:	mov    DWORD PTR [rbp-0x1c],r12d
   1400132ee:	mov    DWORD PTR [rbp-0x24],ebx
   1400132f1:	mov    DWORD PTR [rbp-0x30],r15d
   1400132f5:	mov    DWORD PTR [rbp-0x34],r13d
   1400132f9:	mov    DWORD PTR [rbp-0x38],r14d
   1400132fd:	imul   ecx
   1400132ff:	mov    r9d,edx
   140013302:	mov    eax,r10d
   140013305:	sar    r9d,0x7
   140013309:	mov    ecx,r9d
   14001330c:	shr    ecx,0x1f
   14001330f:	add    r9d,ecx
   140013312:	imul   r8d
   140013315:	sar    edx,0x5
   140013318:	mov    eax,r8d
   14001331b:	mov    ecx,edx
   14001331d:	shr    ecx,0x1f
   140013320:	add    edx,ecx
   140013322:	sub    r9d,edx
   140013325:	cdq    
   140013326:	and    edx,0x3
   140013329:	add    eax,edx
   14001332b:	sar    eax,0x2
   14001332e:	lea    ecx,[r9+rax*1-0x11]
   140013333:	movsxd rax,ebx
   140013336:	sub    rax,0x46
   14001333a:	movsxd rdx,ecx
   14001333d:	imul   rax,rax,0x16d
   140013344:	add    rdx,rax
   140013347:	movsxd rax,r12d
   14001334a:	add    rdx,rax
   14001334d:	movsxd rax,DWORD PTR [rbp-0x40]
   140013351:	lea    rcx,[rdx+rdx*2]
   140013355:	lea    rdi,[r15+rcx*8]
   140013359:	imul   rdi,rdi,0x3c
   14001335d:	add    rdi,r13
   140013360:	imul   rdi,rdi,0x3c
   140013364:	add    rdi,rax
   140013367:	lea    eax,[rsi-0x1]
   14001336a:	add    rdi,r14
   14001336d:	cmp    DWORD PTR [rbp+0x78],0x1
   140013371:	mov    DWORD PTR [rbp-0x28],eax
   140013374:	je     0x14001338f
   140013376:	cmp    DWORD PTR [rbp+0x78],0xffffffff
   14001337a:	jne    0x140013396
   14001337c:	cmp    DWORD PTR [rbp-0x48],0x0
   140013380:	je     0x140013396
   140013382:	lea    rcx,[rbp-0x38]
   140013386:	call   0x140018280
   14001338b:	test   eax,eax
   14001338d:	je     0x140013396
   14001338f:	movsxd rcx,DWORD PTR [rbp-0x44]
   140013393:	add    rdi,rcx
   140013396:	mov    rax,rdi
   140013399:	jmp    0x1400133e9
   14001339b:	xor    r9d,r9d
   14001339e:	xor    r8d,r8d
   1400133a1:	xor    edx,edx
   1400133a3:	xor    ecx,ecx
   1400133a5:	mov    QWORD PTR [rsp+0x20],rdi
   1400133aa:	call   0x14000cf78
   1400133af:	int3   
   1400133b0:	xor    r9d,r9d
   1400133b3:	xor    r8d,r8d
   1400133b6:	xor    edx,edx
   1400133b8:	xor    ecx,ecx
   1400133ba:	mov    QWORD PTR [rsp+0x20],rdi
   1400133bf:	call   0x14000cf78
   1400133c4:	int3   
   1400133c5:	xor    r9d,r9d
   1400133c8:	xor    r8d,r8d
   1400133cb:	xor    edx,edx
   1400133cd:	xor    ecx,ecx
   1400133cf:	mov    QWORD PTR [rsp+0x20],rdi
   1400133d4:	call   0x14000cf78
   1400133d9:	int3   
   1400133da:	call   0x14000bdc0
   1400133df:	mov    DWORD PTR [rax],0x16
   1400133e5:	or     rax,0xffffffffffffffff
   1400133e9:	mov    rcx,QWORD PTR [rbp-0x10]
   1400133ed:	xor    rcx,rsp
   1400133f0:	call   0x14000a820
   1400133f5:	add    rsp,0x78
   1400133f9:	pop    r15
   1400133fb:	pop    r14
   1400133fd:	pop    r13
   1400133ff:	pop    r12
   140013401:	pop    rdi
   140013402:	pop    rsi
   140013403:	pop    rbx
   140013404:	pop    rbp
   140013405:	ret    
   140013406:	int3   
   140013407:	int3   
   140013408:	mov    QWORD PTR [rsp+0x8],rbx
   14001340d:	mov    QWORD PTR [rsp+0x10],rbp
   140013412:	mov    QWORD PTR [rsp+0x18],rsi
   140013417:	push   rdi
   140013418:	sub    rsp,0x240
   14001341f:	mov    rax,QWORD PTR [rip+0xfc9a]        # 0x1400230c0
   140013426:	xor    rax,rsp
   140013429:	mov    QWORD PTR [rsp+0x230],rax
   140013431:	lea    rdx,[rsp+0x20]
   140013436:	mov    ecx,0x105
   14001343b:	lea    rbx,[rsp+0x20]
   140013440:	xor    ebp,ebp
   140013442:	call   QWORD PTR [rip+0x6e58]        # 0x14001a2a0
   140013448:	mov    edi,eax
   14001344a:	cmp    eax,0x104
   14001344f:	jle    0x14001348c
   140013451:	lea    esi,[rax+0x1]
   140013454:	lea    edx,[rbp+0x2]
   140013457:	movsxd rcx,esi
   14001345a:	call   0x140010b24
   14001345f:	mov    rbx,rax
   140013462:	test   rax,rax
   140013465:	jne    0x140013476
   140013467:	call   0x14000bdc0
   14001346c:	xor    edi,edi
   14001346e:	mov    DWORD PTR [rax],0xc
   140013474:	jmp    0x14001348c
   140013476:	mov    ebp,0x1
   14001347b:	test   edi,edi
   14001347d:	je     0x14001348c
   14001347f:	mov    rdx,rax
   140013482:	mov    ecx,esi
   140013484:	call   QWORD PTR [rip+0x6e16]        # 0x14001a2a0
   14001348a:	mov    edi,eax
   14001348c:	xor    esi,esi
   14001348e:	test   edi,edi
   140013490:	je     0x1400134b5
   140013492:	cmp    WORD PTR [rbx+0x2],0x3a
   140013497:	jne    0x1400134c0
   140013499:	cmp    WORD PTR [rbx],0x61
   14001349d:	jb     0x1400134ad
   14001349f:	cmp    WORD PTR [rbx],0x7a
   1400134a3:	ja     0x1400134ad
   1400134a5:	movzx  eax,WORD PTR [rbx]
   1400134a8:	sub    eax,0x20
   1400134ab:	jmp    0x1400134b0
   1400134ad:	movzx  eax,WORD PTR [rbx]
   1400134b0:	lea    esi,[rax-0x40]
   1400134b3:	jmp    0x1400134c0
   1400134b5:	call   0x14000bdc0
   1400134ba:	mov    DWORD PTR [rax],0xc
   1400134c0:	test   ebp,ebp
   1400134c2:	je     0x1400134cc
   1400134c4:	mov    rcx,rbx
   1400134c7:	call   0x14000b460
   1400134cc:	mov    eax,esi
   1400134ce:	mov    rcx,QWORD PTR [rsp+0x230]
   1400134d6:	xor    rcx,rsp
   1400134d9:	call   0x14000a820
   1400134de:	lea    r11,[rsp+0x240]
   1400134e6:	mov    rbx,QWORD PTR [r11+0x10]
   1400134ea:	mov    rbp,QWORD PTR [r11+0x18]
   1400134ee:	mov    rsi,QWORD PTR [r11+0x20]
   1400134f2:	mov    rsp,r11
   1400134f5:	pop    rdi
   1400134f6:	ret    
   1400134f7:	int3   
   1400134f8:	mov    QWORD PTR [rsp+0x10],rbx
   1400134fd:	push   rbp
   1400134fe:	mov    rbp,rsp
   140013501:	sub    rsp,0x70
   140013505:	movsxd rbx,ecx
   140013508:	lea    rcx,[rbp-0x20]
   14001350c:	call   0x14000c6f4
   140013511:	mov    rcx,QWORD PTR [rbp-0x18]
   140013515:	cmp    ebx,0xff
   14001351b:	jbe    0x1400135ac
   140013521:	mov    eax,ebx
   140013523:	mov    BYTE PTR [rbp+0x11],bl
   140013526:	shr    eax,0x8
   140013529:	mov    BYTE PTR [rbp+0x10],al
   14001352c:	movzx  eax,al
   14001352f:	test   BYTE PTR [rax+rcx*1+0x1d],0x4
   140013534:	jne    0x14001354d
   140013536:	cmp    BYTE PTR [rbp-0x8],0x0
   14001353a:	je     0x1400135cc
   140013540:	mov    rax,QWORD PTR [rbp-0x10]
   140013544:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001354b:	jmp    0x1400135cc
   14001354d:	mov    eax,DWORD PTR [rcx+0x4]
   140013550:	mov    DWORD PTR [rsp+0x40],0x1
   140013558:	mov    edx,0x2
   14001355d:	mov    DWORD PTR [rsp+0x38],eax
   140013561:	mov    DWORD PTR [rsp+0x30],edx
   140013565:	lea    rax,[rbp+0x20]
   140013569:	mov    QWORD PTR [rsp+0x28],rax
   14001356e:	mov    DWORD PTR [rsp+0x20],edx
   140013572:	mov    edx,DWORD PTR [rcx+0xc]
   140013575:	lea    rcx,[rbp-0x20]
   140013579:	lea    r9,[rbp+0x10]
   14001357d:	mov    r8d,0x100
   140013583:	call   0x14001862c
   140013588:	test   eax,eax
   14001358a:	je     0x140013536
   14001358c:	movzx  eax,BYTE PTR [rbp+0x20]
   140013590:	movzx  ecx,BYTE PTR [rbp+0x21]
   140013594:	shl    eax,0x8
   140013597:	add    eax,ecx
   140013599:	cmp    BYTE PTR [rbp-0x8],0x0
   14001359d:	je     0x1400135ce
   14001359f:	mov    rcx,QWORD PTR [rbp-0x10]
   1400135a3:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400135aa:	jmp    0x1400135ce
   1400135ac:	test   BYTE PTR [rbx+rcx*1+0x1d],0x10
   1400135b1:	je     0x1400135bb
   1400135b3:	movzx  ebx,BYTE PTR [rbx+rcx*1+0x11d]
   1400135bb:	cmp    BYTE PTR [rbp-0x8],0x0
   1400135bf:	je     0x1400135cc
   1400135c1:	mov    rcx,QWORD PTR [rbp-0x10]
   1400135c5:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400135cc:	mov    eax,ebx
   1400135ce:	mov    rbx,QWORD PTR [rsp+0x88]
   1400135d6:	add    rsp,0x70
   1400135da:	pop    rbp
   1400135db:	ret    
   1400135dc:	xor    edx,edx
   1400135de:	jmp    0x1400134f8
   1400135e3:	int3   
   1400135e4:	mov    QWORD PTR [rsp+0x8],rbx
   1400135e9:	mov    QWORD PTR [rsp+0x10],rsi
   1400135ee:	push   rdi
   1400135ef:	sub    rsp,0x40
   1400135f3:	mov    rbx,rcx
   1400135f6:	mov    rdi,rdx
   1400135f9:	lea    rcx,[rsp+0x20]
   1400135fe:	mov    rdx,r8
   140013601:	call   0x14000c6f4
   140013606:	mov    rdx,QWORD PTR [rsp+0x28]
   14001360b:	xor    esi,esi
   14001360d:	cmp    DWORD PTR [rdx+0x8],esi
   140013610:	jne    0x140013622
   140013612:	mov    rdx,rdi
   140013615:	mov    rcx,rbx
   140013618:	call   0x14000c658
   14001361d:	jmp    0x1400136b3
   140013622:	test   rbx,rbx
   140013625:	jne    0x14001364e
   140013627:	call   0x14000bdc0
   14001362c:	mov    DWORD PTR [rax],0x16
   140013632:	call   0x14000d01c
   140013637:	cmp    BYTE PTR [rsp+0x38],sil
   14001363c:	je     0x14001364a
   14001363e:	mov    rax,QWORD PTR [rsp+0x30]
   140013643:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001364a:	xor    eax,eax
   14001364c:	jmp    0x1400136c6
   14001364e:	test   rdi,rdi
   140013651:	je     0x140013627
   140013653:	jmp    0x1400136a4
   140013655:	mov    rcx,rdi
   140013658:	cmp    BYTE PTR [rdi],sil
   14001365b:	je     0x14001368a
   14001365d:	movzx  eax,BYTE PTR [rcx]
   140013660:	test   BYTE PTR [rax+rdx*1+0x1d],0x4
   140013665:	je     0x14001367e
   140013667:	cmp    al,BYTE PTR [rbx]
   140013669:	jne    0x140013673
   14001366b:	mov    al,BYTE PTR [rbx+0x1]
   14001366e:	cmp    BYTE PTR [rcx+0x1],al
   140013671:	je     0x14001368a
   140013673:	cmp    BYTE PTR [rcx+0x1],sil
   140013677:	je     0x14001368a
   140013679:	inc    rcx
   14001367c:	jmp    0x140013682
   14001367e:	cmp    al,BYTE PTR [rbx]
   140013680:	je     0x14001368a
   140013682:	inc    rcx
   140013685:	cmp    BYTE PTR [rcx],sil
   140013688:	jne    0x14001365d
   14001368a:	cmp    BYTE PTR [rcx],sil
   14001368d:	jne    0x1400136a9
   14001368f:	movzx  eax,BYTE PTR [rbx]
   140013692:	test   BYTE PTR [rax+rdx*1+0x1d],0x4
   140013697:	je     0x1400136a1
   140013699:	inc    rbx
   14001369c:	cmp    BYTE PTR [rbx],sil
   14001369f:	je     0x1400136a9
   1400136a1:	inc    rbx
   1400136a4:	cmp    BYTE PTR [rbx],sil
   1400136a7:	jne    0x140013655
   1400136a9:	mov    al,BYTE PTR [rbx]
   1400136ab:	neg    al
   1400136ad:	sbb    rax,rax
   1400136b0:	and    rax,rbx
   1400136b3:	cmp    BYTE PTR [rsp+0x38],sil
   1400136b8:	je     0x1400136c6
   1400136ba:	mov    rcx,QWORD PTR [rsp+0x30]
   1400136bf:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400136c6:	mov    rbx,QWORD PTR [rsp+0x50]
   1400136cb:	mov    rsi,QWORD PTR [rsp+0x58]
   1400136d0:	add    rsp,0x40
   1400136d4:	pop    rdi
   1400136d5:	ret    
   1400136d6:	int3   
   1400136d7:	int3   
   1400136d8:	xor    r8d,r8d
   1400136db:	jmp    0x1400135e4
   1400136e0:	rex push rbx
   1400136e2:	sub    rsp,0x20
   1400136e6:	xor    ebx,ebx
   1400136e8:	mov    r10,r8
   1400136eb:	test   r9,r9
   1400136ee:	jne    0x1400136fe
   1400136f0:	test   rcx,rcx
   1400136f3:	jne    0x140013703
   1400136f5:	test   rdx,rdx
   1400136f8:	jne    0x140013718
   1400136fa:	xor    eax,eax
   1400136fc:	jmp    0x14001372b
   1400136fe:	test   rcx,rcx
   140013701:	je     0x140013718
   140013703:	test   rdx,rdx
   140013706:	je     0x140013718
   140013708:	test   r9,r9
   14001370b:	jne    0x140013711
   14001370d:	mov    BYTE PTR [rcx],bl
   14001370f:	jmp    0x1400136fa
   140013711:	test   r8,r8
   140013714:	jne    0x140013731
   140013716:	mov    BYTE PTR [rcx],bl
   140013718:	call   0x14000bdc0
   14001371d:	mov    ebx,0x16
   140013722:	mov    DWORD PTR [rax],ebx
   140013724:	call   0x14000d01c
   140013729:	mov    eax,ebx
   14001372b:	add    rsp,0x20
   14001372f:	pop    rbx
   140013730:	ret    
   140013731:	mov    r11,rcx
   140013734:	mov    r8,rdx
   140013737:	cmp    r9,0xffffffffffffffff
   14001373b:	jne    0x140013755
   14001373d:	sub    r11,r10
   140013740:	mov    al,BYTE PTR [r10]
   140013743:	mov    BYTE PTR [r11+r10*1],al
   140013747:	inc    r10
   14001374a:	test   al,al
   14001374c:	je     0x140013778
   14001374e:	dec    r8
   140013751:	jne    0x140013740
   140013753:	jmp    0x140013778
   140013755:	sub    r10,rcx
   140013758:	mov    al,BYTE PTR [r10+r11*1]
   14001375c:	mov    BYTE PTR [r11],al
   14001375f:	inc    r11
   140013762:	test   al,al
   140013764:	je     0x140013770
   140013766:	dec    r8
   140013769:	je     0x140013770
   14001376b:	dec    r9
   14001376e:	jne    0x140013758
   140013770:	test   r9,r9
   140013773:	jne    0x140013778
   140013775:	mov    BYTE PTR [r11],bl
   140013778:	test   r8,r8
   14001377b:	jne    0x1400136fa
   140013781:	cmp    r9,0xffffffffffffffff
   140013785:	jne    0x140013791
   140013787:	mov    BYTE PTR [rcx+rdx*1-0x1],bl
   14001378b:	lea    eax,[r8+0x50]
   14001378f:	jmp    0x14001372b
   140013791:	mov    BYTE PTR [rcx],bl
   140013793:	call   0x14000bdc0
   140013798:	mov    ebx,0x22
   14001379d:	jmp    0x140013722
   14001379f:	int3   
   1400137a0:	mov    QWORD PTR [rsp+0x18],rbx
   1400137a5:	mov    DWORD PTR [rsp+0x8],ecx
   1400137a9:	push   rsi
   1400137aa:	push   rdi
   1400137ab:	push   r12
   1400137ad:	sub    rsp,0x20
   1400137b1:	movsxd rdi,ecx
   1400137b4:	cmp    edi,0xfffffffe
   1400137b7:	jne    0x1400137c9
   1400137b9:	call   0x14000bdc0
   1400137be:	mov    DWORD PTR [rax],0x9
   1400137c4:	jmp    0x140013866
   1400137c9:	test   ecx,ecx
   1400137cb:	js     0x140013856
   1400137d1:	cmp    edi,DWORD PTR [rip+0x12295]        # 0x140025a6c
   1400137d7:	jae    0x140013856
   1400137d9:	mov    rbx,rdi
   1400137dc:	mov    rsi,rdi
   1400137df:	sar    rsi,0x5
   1400137e3:	lea    r12,[rip+0x12296]        # 0x140025a80
   1400137ea:	and    ebx,0x1f
   1400137ed:	imul   rbx,rbx,0x58
   1400137f1:	mov    rax,QWORD PTR [r12+rsi*8]
   1400137f5:	movsx  ecx,BYTE PTR [rax+rbx*1+0x8]
   1400137fa:	and    ecx,0x1
   1400137fd:	je     0x140013856
   1400137ff:	mov    ecx,edi
   140013801:	call   0x1400116d4
   140013806:	nop
   140013807:	mov    rax,QWORD PTR [r12+rsi*8]
   14001380b:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   140013810:	je     0x14001383d
   140013812:	mov    ecx,edi
   140013814:	call   0x140011660
   140013819:	mov    rcx,rax
   14001381c:	call   QWORD PTR [rip+0x6a86]        # 0x14001a2a8
   140013822:	test   eax,eax
   140013824:	jne    0x140013830
   140013826:	call   QWORD PTR [rip+0x6844]        # 0x14001a070
   14001382c:	mov    ebx,eax
   14001382e:	jmp    0x140013832
   140013830:	xor    ebx,ebx
   140013832:	test   ebx,ebx
   140013834:	je     0x14001384b
   140013836:	call   0x14000bde0
   14001383b:	mov    DWORD PTR [rax],ebx
   14001383d:	call   0x14000bdc0
   140013842:	mov    DWORD PTR [rax],0x9
   140013848:	or     ebx,0xffffffff
   14001384b:	mov    ecx,edi
   14001384d:	call   0x14001177c
   140013852:	mov    eax,ebx
   140013854:	jmp    0x140013869
   140013856:	call   0x14000bdc0
   14001385b:	mov    DWORD PTR [rax],0x9
   140013861:	call   0x14000d01c
   140013866:	or     eax,0xffffffff
   140013869:	mov    rbx,QWORD PTR [rsp+0x50]
   14001386e:	add    rsp,0x20
   140013872:	pop    r12
   140013874:	pop    rdi
   140013875:	pop    rsi
   140013876:	ret    
   140013877:	int3   
   140013878:	mov    QWORD PTR [rsp+0x18],rbx
   14001387d:	mov    DWORD PTR [rsp+0x10],edx
   140013881:	push   rbp
   140013882:	push   rsi
   140013883:	push   rdi
   140013884:	push   r12
   140013886:	push   r13
   140013888:	push   r14
   14001388a:	push   r15
   14001388c:	sub    rsp,0x30
   140013890:	xor    ebp,ebp
   140013892:	mov    edi,edx
   140013894:	mov    r14,rcx
   140013897:	mov    ebx,ebp
   140013899:	test   rcx,rcx
   14001389c:	jne    0x1400138b3
   14001389e:	call   0x14000bdc0
   1400138a3:	mov    DWORD PTR [rax],0x16
   1400138a9:	call   0x14000d01c
   1400138ae:	jmp    0x1400139ad
   1400138b3:	mov    r12,QWORD PTR [rcx]
   1400138b6:	test   r12,r12
   1400138b9:	je     0x1400139a2
   1400138bf:	mov    edx,0x3d
   1400138c4:	mov    rcx,r12
   1400138c7:	call   0x140018b80
   1400138cc:	mov    r13,rax
   1400138cf:	test   rax,rax
   1400138d2:	je     0x1400139a2
   1400138d8:	cmp    r12,rax
   1400138db:	je     0x1400139a2
   1400138e1:	cmp    WORD PTR [rax+0x2],bp
   1400138e5:	mov    rsi,QWORD PTR [rip+0x110bc]        # 0x1400249a8
   1400138ec:	mov    r15d,ebp
   1400138ef:	sete   r15b
   1400138f3:	cmp    rsi,QWORD PTR [rip+0x110b6]        # 0x1400249b0
   1400138fa:	jne    0x14001396b
   1400138fc:	xor    ecx,ecx
   1400138fe:	mov    rbp,rsi
   140013901:	mov    eax,ecx
   140013903:	test   rsi,rsi
   140013906:	jne    0x140013910
   140013908:	jmp    0x140013964
   14001390a:	add    rsi,0x8
   14001390e:	inc    eax
   140013910:	cmp    QWORD PTR [rsi],rcx
   140013913:	jne    0x14001390a
   140013915:	inc    eax
   140013917:	mov    edx,0x8
   14001391c:	movsxd rcx,eax
   14001391f:	call   0x140010b24
   140013924:	mov    rdi,rax
   140013927:	mov    rsi,rax
   14001392a:	test   rax,rax
   14001392d:	jne    0x140013937
   14001392f:	lea    ecx,[rax+0x9]
   140013932:	call   0x140009c04
   140013937:	mov    rax,QWORD PTR [rbp+0x0]
   14001393b:	test   rax,rax
   14001393e:	je     0x14001395b
   140013940:	sub    rbp,rdi
   140013943:	mov    rcx,rax
   140013946:	call   0x140018880
   14001394b:	mov    QWORD PTR [rdi],rax
   14001394e:	add    rdi,0x8
   140013952:	mov    rax,QWORD PTR [rdi+rbp*1]
   140013956:	test   rax,rax
   140013959:	jne    0x140013943
   14001395b:	xor    ebp,ebp
   14001395d:	mov    QWORD PTR [rdi],rbp
   140013960:	mov    edi,DWORD PTR [rsp+0x78]
   140013964:	mov    QWORD PTR [rip+0x1103d],rsi        # 0x1400249a8
   14001396b:	test   rsi,rsi
   14001396e:	jne    0x140013a19
   140013974:	mov    rax,QWORD PTR [rip+0x1101d]        # 0x140024998
   14001397b:	test   edi,edi
   14001397d:	je     0x1400139c8
   14001397f:	test   rax,rax
   140013982:	je     0x1400139c8
   140013984:	call   0x140018af8
   140013989:	mov    QWORD PTR [rip+0x11058],rax        # 0x1400249e8
   140013990:	call   0x1400189c0
   140013995:	test   eax,eax
   140013997:	jns    0x140013a12
   140013999:	call   0x1400188f8
   14001399e:	test   eax,eax
   1400139a0:	je     0x140013a12
   1400139a2:	call   0x14000bdc0
   1400139a7:	mov    DWORD PTR [rax],0x16
   1400139ad:	or     eax,0xffffffff
   1400139b0:	mov    rbx,QWORD PTR [rsp+0x80]
   1400139b8:	add    rsp,0x30
   1400139bc:	pop    r15
   1400139be:	pop    r14
   1400139c0:	pop    r13
   1400139c2:	pop    r12
   1400139c4:	pop    rdi
   1400139c5:	pop    rsi
   1400139c6:	pop    rbp
   1400139c7:	ret    
   1400139c8:	test   r15d,r15d
   1400139cb:	je     0x1400139d1
   1400139cd:	xor    eax,eax
   1400139cf:	jmp    0x1400139b0
   1400139d1:	test   rax,rax
   1400139d4:	jne    0x1400139f9
   1400139d6:	lea    ecx,[rax+0x8]
   1400139d9:	call   0x140010aa4
   1400139de:	mov    QWORD PTR [rip+0x10fb3],rax        # 0x140024998
   1400139e5:	test   rax,rax
   1400139e8:	je     0x1400139ad
   1400139ea:	mov    QWORD PTR [rax],rbp
   1400139ed:	mov    rsi,QWORD PTR [rip+0x10fb4]        # 0x1400249a8
   1400139f4:	test   rsi,rsi
   1400139f7:	jne    0x140013a19
   1400139f9:	mov    ecx,0x8
   1400139fe:	call   0x140010aa4
   140013a03:	mov    QWORD PTR [rip+0x10f9e],rax        # 0x1400249a8
   140013a0a:	test   rax,rax
   140013a0d:	je     0x1400139ad
   140013a0f:	mov    QWORD PTR [rax],rbp
   140013a12:	mov    rsi,QWORD PTR [rip+0x10f8f]        # 0x1400249a8
   140013a19:	mov    rbp,rsi
   140013a1c:	test   rsi,rsi
   140013a1f:	je     0x1400139ad
   140013a21:	mov    rax,QWORD PTR [rsi]
   140013a24:	sub    r13,r12
   140013a27:	mov    rdi,rsi
   140013a2a:	sar    r13,1
   140013a2d:	mov    QWORD PTR [rsp+0x70],r13
   140013a32:	movsxd r13,r13d
   140013a35:	test   rax,rax
   140013a38:	je     0x140013a7f
   140013a3a:	mov    esi,0x3d
   140013a3f:	mov    r8,r13
   140013a42:	mov    rdx,rax
   140013a45:	mov    rcx,r12
   140013a48:	call   0x1400187ec
   140013a4d:	xor    ecx,ecx
   140013a4f:	test   eax,eax
   140013a51:	jne    0x140013a6c
   140013a53:	mov    rax,QWORD PTR [rdi]
   140013a56:	cmp    WORD PTR [rax+r13*2],si
   140013a5b:	je     0x140013b02
   140013a61:	cmp    WORD PTR [rax+r13*2],cx
   140013a66:	je     0x140013b02
   140013a6c:	add    rdi,0x8
   140013a70:	mov    rax,QWORD PTR [rdi]
   140013a73:	test   rax,rax
   140013a76:	jne    0x140013a3f
   140013a78:	mov    rsi,QWORD PTR [rip+0x10f29]        # 0x1400249a8
   140013a7f:	sub    rdi,rsi
   140013a82:	sar    rdi,0x3
   140013a86:	neg    edi
   140013a88:	xor    r13d,r13d
   140013a8b:	test   edi,edi
   140013a8d:	js     0x140013b1f
   140013a93:	cmp    QWORD PTR [rbp+0x0],r13
   140013a97:	je     0x140013b1f
   140013a9d:	movsxd rsi,edi
   140013aa0:	mov    rcx,QWORD PTR [rbp+rsi*8+0x0]
   140013aa5:	call   0x14000b460
   140013aaa:	test   r15d,r15d
   140013aad:	je     0x140013b15
   140013aaf:	cmp    QWORD PTR [rbp+rsi*8+0x0],r13
   140013ab4:	je     0x140013ad3
   140013ab6:	lea    rcx,[rbp+rsi*8+0x8]
   140013abb:	mov    rax,QWORD PTR [rcx]
   140013abe:	inc    edi
   140013ac0:	add    rcx,0x8
   140013ac4:	mov    QWORD PTR [rbp+rsi*8+0x0],rax
   140013ac9:	inc    rsi
   140013acc:	cmp    QWORD PTR [rbp+rsi*8+0x0],r13
   140013ad1:	jne    0x140013abb
   140013ad3:	movsxd rdx,edi
   140013ad6:	movabs rax,0x1fffffffffffffff
   140013ae0:	cmp    rdx,rax
   140013ae3:	jae    0x140013b7b
   140013ae9:	mov    rcx,QWORD PTR [rip+0x10eb8]        # 0x1400249a8
   140013af0:	mov    r8d,0x8
   140013af6:	call   0x140010c30
   140013afb:	test   rax,rax
   140013afe:	je     0x140013b7b
   140013b00:	jmp    0x140013b74
   140013b02:	mov    rsi,QWORD PTR [rip+0x10e9f]        # 0x1400249a8
   140013b09:	sub    rdi,rsi
   140013b0c:	sar    rdi,0x3
   140013b10:	jmp    0x140013a88
   140013b15:	mov    QWORD PTR [rbp+rsi*8+0x0],r12
   140013b1a:	mov    QWORD PTR [r14],r13
   140013b1d:	jmp    0x140013b7b
   140013b1f:	test   r15d,r15d
   140013b22:	jne    0x140013c23
   140013b28:	test   edi,edi
   140013b2a:	jns    0x140013b2e
   140013b2c:	neg    edi
   140013b2e:	lea    eax,[rdi+0x2]
   140013b31:	cmp    eax,edi
   140013b33:	jl     0x1400139ad
   140013b39:	movsxd r8,eax
   140013b3c:	movabs rax,0x1fffffffffffffff
   140013b46:	cmp    r8,rax
   140013b49:	jae    0x1400139ad
   140013b4f:	mov    edx,0x8
   140013b54:	mov    rcx,rsi
   140013b57:	call   0x140010c30
   140013b5c:	test   rax,rax
   140013b5f:	je     0x1400139ad
   140013b65:	movsxd rcx,edi
   140013b68:	mov    QWORD PTR [rax+rcx*8],r12
   140013b6c:	mov    QWORD PTR [rax+rcx*8+0x8],r13
   140013b71:	mov    QWORD PTR [r14],r13
   140013b74:	mov    QWORD PTR [rip+0x10e2d],rax        # 0x1400249a8
   140013b7b:	cmp    DWORD PTR [rsp+0x78],r13d
   140013b80:	je     0x140013bf7
   140013b82:	mov    rcx,r12
   140013b85:	call   0x140013c34
   140013b8a:	mov    esi,0x2
   140013b8f:	lea    rcx,[rsi+rax*1]
   140013b93:	mov    edx,esi
   140013b95:	call   0x140010b24
   140013b9a:	mov    rdi,rax
   140013b9d:	test   rax,rax
   140013ba0:	je     0x140013bf7
   140013ba2:	mov    rcx,r12
   140013ba5:	call   0x140013c34
   140013baa:	mov    r8,r12
   140013bad:	mov    rcx,rdi
   140013bb0:	lea    rdx,[rsi+rax*1]
   140013bb4:	call   0x14001517c
   140013bb9:	test   eax,eax
   140013bbb:	jne    0x140013c0e
   140013bbd:	mov    rax,QWORD PTR [rsp+0x70]
   140013bc2:	mov    rcx,rdi
   140013bc5:	lea    rdx,[rdi+rax*2]
   140013bc9:	mov    WORD PTR [rdx],r13w
   140013bcd:	add    rdx,rsi
   140013bd0:	test   r15d,r15d
   140013bd3:	cmovne rdx,r13
   140013bd7:	call   QWORD PTR [rip+0x66d3]        # 0x14001a2b0
   140013bdd:	test   eax,eax
   140013bdf:	jne    0x140013bef
   140013be1:	or     ebx,0xffffffff
   140013be4:	call   0x14000bdc0
   140013be9:	mov    DWORD PTR [rax],0x2a
   140013bef:	mov    rcx,rdi
   140013bf2:	call   0x14000b460
   140013bf7:	test   r15d,r15d
   140013bfa:	je     0x140013c07
   140013bfc:	mov    rcx,r12
   140013bff:	call   0x14000b460
   140013c04:	mov    QWORD PTR [r14],r13
   140013c07:	mov    eax,ebx
   140013c09:	jmp    0x1400139b0
   140013c0e:	xor    r9d,r9d
   140013c11:	xor    r8d,r8d
   140013c14:	xor    edx,edx
   140013c16:	xor    ecx,ecx
   140013c18:	mov    QWORD PTR [rsp+0x20],r13
   140013c1d:	call   0x14000cf78
   140013c22:	int3   
   140013c23:	mov    rcx,r12
   140013c26:	call   0x14000b460
   140013c2b:	mov    QWORD PTR [r14],r13
   140013c2e:	jmp    0x1400139cd
   140013c33:	int3   
   140013c34:	mov    rax,rcx
   140013c37:	movzx  edx,WORD PTR [rax]
   140013c3a:	add    rax,0x2
   140013c3e:	test   dx,dx
   140013c41:	jne    0x140013c37
   140013c43:	sub    rax,rcx
   140013c46:	sar    rax,1
   140013c49:	dec    rax
   140013c4c:	ret    
   140013c4d:	int3   
   140013c4e:	int3   
   140013c4f:	int3   
   140013c50:	mov    QWORD PTR [rsp+0x18],rbx
   140013c55:	mov    DWORD PTR [rsp+0x10],edx
   140013c59:	push   rbp
   140013c5a:	push   rsi
   140013c5b:	push   rdi
   140013c5c:	push   r12
   140013c5e:	push   r13
   140013c60:	push   r14
   140013c62:	push   r15
   140013c64:	sub    rsp,0x30
   140013c68:	xor    r13d,r13d
   140013c6b:	mov    ebp,edx
   140013c6d:	mov    r14,rcx
   140013c70:	mov    ebx,r13d
   140013c73:	test   rcx,rcx
   140013c76:	jne    0x140013c8d
   140013c78:	call   0x14000bdc0
   140013c7d:	mov    DWORD PTR [rax],0x16
   140013c83:	call   0x14000d01c
   140013c88:	jmp    0x140013d79
   140013c8d:	mov    r12,QWORD PTR [rcx]
   140013c90:	test   r12,r12
   140013c93:	je     0x140013d6e
   140013c99:	mov    edx,0x3d
   140013c9e:	mov    rcx,r12
   140013ca1:	call   0x1400140d8
   140013ca6:	mov    rdi,rax
   140013ca9:	mov    QWORD PTR [rsp+0x70],rax
   140013cae:	test   rax,rax
   140013cb1:	je     0x140013d6e
   140013cb7:	cmp    r12,rax
   140013cba:	je     0x140013d6e
   140013cc0:	cmp    BYTE PTR [rax+0x1],r13b
   140013cc4:	mov    rsi,QWORD PTR [rip+0x10ccd]        # 0x140024998
   140013ccb:	mov    r15d,r13d
   140013cce:	sete   r15b
   140013cd2:	cmp    rsi,QWORD PTR [rip+0x10cc7]        # 0x1400249a0
   140013cd9:	jne    0x140013d4f
   140013cdb:	mov    rbp,rsi
   140013cde:	mov    eax,r13d
   140013ce1:	test   rsi,rsi
   140013ce4:	jne    0x140013cf1
   140013ce6:	mov    rsi,r13
   140013ce9:	jmp    0x140013d44
   140013ceb:	add    rsi,0x8
   140013cef:	inc    eax
   140013cf1:	cmp    QWORD PTR [rsi],r13
   140013cf4:	jne    0x140013ceb
   140013cf6:	inc    eax
   140013cf8:	mov    edx,0x8
   140013cfd:	movsxd rcx,eax
   140013d00:	call   0x140010b24
   140013d05:	mov    rdi,rax
   140013d08:	mov    rsi,rax
   140013d0b:	test   rax,rax
   140013d0e:	jne    0x140013d18
   140013d10:	lea    ecx,[rax+0x9]
   140013d13:	call   0x140009c04
   140013d18:	mov    rax,QWORD PTR [rbp+0x0]
   140013d1c:	test   rax,rax
   140013d1f:	je     0x140013d3c
   140013d21:	sub    rbp,rdi
   140013d24:	mov    rcx,rax
   140013d27:	call   0x140018ba0
   140013d2c:	mov    QWORD PTR [rdi],rax
   140013d2f:	add    rdi,0x8
   140013d33:	mov    rax,QWORD PTR [rdi+rbp*1]
   140013d37:	test   rax,rax
   140013d3a:	jne    0x140013d24
   140013d3c:	mov    QWORD PTR [rdi],r13
   140013d3f:	mov    rdi,QWORD PTR [rsp+0x70]
   140013d44:	mov    ebp,DWORD PTR [rsp+0x78]
   140013d48:	mov    QWORD PTR [rip+0x10c49],rsi        # 0x140024998
   140013d4f:	test   rsi,rsi
   140013d52:	jne    0x140013ddf
   140013d58:	test   ebp,ebp
   140013d5a:	je     0x140013d94
   140013d5c:	cmp    QWORD PTR [rip+0x10c45],r13        # 0x1400249a8
   140013d63:	je     0x140013d94
   140013d65:	call   0x14000e9bc
   140013d6a:	test   eax,eax
   140013d6c:	je     0x140013dd8
   140013d6e:	call   0x14000bdc0
   140013d73:	mov    DWORD PTR [rax],0x16
   140013d79:	or     eax,0xffffffff
   140013d7c:	mov    rbx,QWORD PTR [rsp+0x80]
   140013d84:	add    rsp,0x30
   140013d88:	pop    r15
   140013d8a:	pop    r14
   140013d8c:	pop    r13
   140013d8e:	pop    r12
   140013d90:	pop    rdi
   140013d91:	pop    rsi
   140013d92:	pop    rbp
   140013d93:	ret    
   140013d94:	test   r15d,r15d
   140013d97:	je     0x140013d9d
   140013d99:	xor    eax,eax
   140013d9b:	jmp    0x140013d7c
   140013d9d:	mov    ecx,0x8
   140013da2:	call   0x140010aa4
   140013da7:	mov    QWORD PTR [rip+0x10bea],rax        # 0x140024998
   140013dae:	test   rax,rax
   140013db1:	je     0x140013d79
   140013db3:	mov    QWORD PTR [rax],r13
   140013db6:	cmp    QWORD PTR [rip+0x10beb],r13        # 0x1400249a8
   140013dbd:	jne    0x140013dd8
   140013dbf:	mov    ecx,0x8
   140013dc4:	call   0x140010aa4
   140013dc9:	mov    QWORD PTR [rip+0x10bd8],rax        # 0x1400249a8
   140013dd0:	test   rax,rax
   140013dd3:	je     0x140013d79
   140013dd5:	mov    QWORD PTR [rax],r13
   140013dd8:	mov    rsi,QWORD PTR [rip+0x10bb9]        # 0x140024998
   140013ddf:	mov    rbp,rsi
   140013de2:	test   rsi,rsi
   140013de5:	je     0x140013d79
   140013de7:	mov    rcx,QWORD PTR [rsi]
   140013dea:	mov    eax,edi
   140013dec:	mov    rdi,rsi
   140013def:	sub    eax,r12d
   140013df2:	movsxd r13,eax
   140013df5:	test   rcx,rcx
   140013df8:	je     0x140013e39
   140013dfa:	mov    rdx,rcx
   140013dfd:	mov    r8,r13
   140013e00:	mov    rcx,r12
   140013e03:	call   0x14000e9b4
   140013e08:	test   eax,eax
   140013e0a:	jne    0x140013e26
   140013e0c:	mov    rax,QWORD PTR [rdi]
   140013e0f:	cmp    BYTE PTR [r13+rax*1+0x0],0x3d
   140013e15:	je     0x140013ebc
   140013e1b:	cmp    BYTE PTR [r13+rax*1+0x0],bl
   140013e20:	je     0x140013ebc
   140013e26:	add    rdi,0x8
   140013e2a:	mov    rcx,QWORD PTR [rdi]
   140013e2d:	test   rcx,rcx
   140013e30:	jne    0x140013dfa
   140013e32:	mov    rsi,QWORD PTR [rip+0x10b5f]        # 0x140024998
   140013e39:	sub    rdi,rsi
   140013e3c:	sar    rdi,0x3
   140013e40:	neg    edi
   140013e42:	xor    r13d,r13d
   140013e45:	test   edi,edi
   140013e47:	js     0x140013ed9
   140013e4d:	cmp    QWORD PTR [rbp+0x0],r13
   140013e51:	je     0x140013ed9
   140013e57:	movsxd rsi,edi
   140013e5a:	mov    rcx,QWORD PTR [rbp+rsi*8+0x0]
   140013e5f:	call   0x14000b460
   140013e64:	test   r15d,r15d
   140013e67:	je     0x140013ecf
   140013e69:	cmp    QWORD PTR [rbp+rsi*8+0x0],r13
   140013e6e:	je     0x140013e8d
   140013e70:	lea    rcx,[rbp+rsi*8+0x8]
   140013e75:	mov    rax,QWORD PTR [rcx]
   140013e78:	inc    edi
   140013e7a:	add    rcx,0x8
   140013e7e:	mov    QWORD PTR [rbp+rsi*8+0x0],rax
   140013e83:	inc    rsi
   140013e86:	cmp    QWORD PTR [rbp+rsi*8+0x0],r13
   140013e8b:	jne    0x140013e75
   140013e8d:	movsxd rdx,edi
   140013e90:	movabs rax,0x1fffffffffffffff
   140013e9a:	cmp    rdx,rax
   140013e9d:	jae    0x140013f35
   140013ea3:	mov    rcx,QWORD PTR [rip+0x10aee]        # 0x140024998
   140013eaa:	mov    r8d,0x8
   140013eb0:	call   0x140010c30
   140013eb5:	test   rax,rax
   140013eb8:	je     0x140013f35
   140013eba:	jmp    0x140013f2e
   140013ebc:	mov    rsi,QWORD PTR [rip+0x10ad5]        # 0x140024998
   140013ec3:	sub    rdi,rsi
   140013ec6:	sar    rdi,0x3
   140013eca:	jmp    0x140013e42
   140013ecf:	mov    QWORD PTR [rbp+rsi*8+0x0],r12
   140013ed4:	mov    QWORD PTR [r14],r13
   140013ed7:	jmp    0x140013f35
   140013ed9:	test   r15d,r15d
   140013edc:	jne    0x140013fdc
   140013ee2:	test   edi,edi
   140013ee4:	jns    0x140013ee8
   140013ee6:	neg    edi
   140013ee8:	lea    eax,[rdi+0x2]
   140013eeb:	cmp    eax,edi
   140013eed:	jl     0x140013d79
   140013ef3:	movsxd r8,eax
   140013ef6:	movabs rax,0x1fffffffffffffff
   140013f00:	cmp    r8,rax
   140013f03:	jae    0x140013d79
   140013f09:	mov    edx,0x8
   140013f0e:	mov    rcx,rsi
   140013f11:	call   0x140010c30
   140013f16:	test   rax,rax
   140013f19:	je     0x140013d79
   140013f1f:	movsxd rcx,edi
   140013f22:	mov    QWORD PTR [rax+rcx*8],r12
   140013f26:	mov    QWORD PTR [rax+rcx*8+0x8],r13
   140013f2b:	mov    QWORD PTR [r14],r13
   140013f2e:	mov    QWORD PTR [rip+0x10a63],rax        # 0x140024998
   140013f35:	cmp    DWORD PTR [rsp+0x78],r13d
   140013f3a:	je     0x140013fb0
   140013f3c:	mov    rcx,r12
   140013f3f:	call   0x140009fa0
   140013f44:	mov    edx,0x1
   140013f49:	lea    rcx,[rax+0x2]
   140013f4d:	call   0x140010b24
   140013f52:	mov    rdi,rax
   140013f55:	test   rax,rax
   140013f58:	je     0x140013fb0
   140013f5a:	mov    rcx,r12
   140013f5d:	call   0x140009fa0
   140013f62:	mov    r8,r12
   140013f65:	mov    rcx,rdi
   140013f68:	lea    rdx,[rax+0x2]
   140013f6c:	call   0x14000eab0
   140013f71:	test   eax,eax
   140013f73:	jne    0x140013fc7
   140013f75:	mov    rdx,rdi
   140013f78:	mov    rcx,rdi
   140013f7b:	sub    rdx,r12
   140013f7e:	add    rdx,QWORD PTR [rsp+0x70]
   140013f83:	mov    BYTE PTR [rdx],r13b
   140013f86:	inc    rdx
   140013f89:	test   r15d,r15d
   140013f8c:	cmovne rdx,r13
   140013f90:	call   QWORD PTR [rip+0x6322]        # 0x14001a2b8
   140013f96:	test   eax,eax
   140013f98:	jne    0x140013fa8
   140013f9a:	or     ebx,0xffffffff
   140013f9d:	call   0x14000bdc0
   140013fa2:	mov    DWORD PTR [rax],0x2a
   140013fa8:	mov    rcx,rdi
   140013fab:	call   0x14000b460
   140013fb0:	test   r15d,r15d
   140013fb3:	je     0x140013fc0
   140013fb5:	mov    rcx,r12
   140013fb8:	call   0x14000b460
   140013fbd:	mov    QWORD PTR [r14],r13
   140013fc0:	mov    eax,ebx
   140013fc2:	jmp    0x140013d7c
   140013fc7:	xor    r9d,r9d
   140013fca:	xor    r8d,r8d
   140013fcd:	xor    edx,edx
   140013fcf:	xor    ecx,ecx
   140013fd1:	mov    QWORD PTR [rsp+0x20],r13
   140013fd6:	call   0x14000cf78
   140013fdb:	int3   
   140013fdc:	mov    rcx,r12
   140013fdf:	call   0x14000b460
   140013fe4:	mov    QWORD PTR [r14],r13
   140013fe7:	jmp    0x140013d99
   140013fec:	mov    QWORD PTR [rsp+0x8],rbx
   140013ff1:	mov    QWORD PTR [rsp+0x10],rsi
   140013ff6:	mov    QWORD PTR [rsp+0x18],rdi
   140013ffb:	push   rbp
   140013ffc:	mov    rbp,rsp
   140013fff:	sub    rsp,0x40
   140014003:	mov    rbx,rcx
   140014006:	mov    edi,edx
   140014008:	lea    rcx,[rbp-0x20]
   14001400c:	mov    rdx,r8
   14001400f:	call   0x14000c6f4
   140014014:	xor    esi,esi
   140014016:	test   rbx,rbx
   140014019:	jne    0x140014053
   14001401b:	call   0x14000bdc0
   140014020:	mov    DWORD PTR [rax],0x16
   140014026:	call   0x14000d01c
   14001402b:	cmp    BYTE PTR [rbp-0x8],sil
   14001402f:	je     0x14001403c
   140014031:	mov    rax,QWORD PTR [rbp-0x10]
   140014035:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001403c:	xor    eax,eax
   14001403e:	mov    rbx,QWORD PTR [rsp+0x50]
   140014043:	mov    rsi,QWORD PTR [rsp+0x58]
   140014048:	mov    rdi,QWORD PTR [rsp+0x60]
   14001404d:	add    rsp,0x40
   140014051:	pop    rbp
   140014052:	ret    
   140014053:	mov    rdx,QWORD PTR [rbp-0x18]
   140014057:	cmp    DWORD PTR [rdx+0x8],esi
   14001405a:	jne    0x140014079
   14001405c:	mov    edx,edi
   14001405e:	mov    rcx,rbx
   140014061:	call   0x14000c04c
   140014066:	cmp    BYTE PTR [rbp-0x8],sil
   14001406a:	je     0x14001403e
   14001406c:	mov    rcx,QWORD PTR [rbp-0x10]
   140014070:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140014077:	jmp    0x14001403e
   140014079:	movzx  ecx,BYTE PTR [rbx]
   14001407c:	test   cx,cx
   14001407f:	je     0x1400140b4
   140014081:	movzx  eax,cl
   140014084:	test   BYTE PTR [rax+rdx*1+0x1d],0x4
   140014089:	je     0x1400140a8
   14001408b:	inc    rbx
   14001408e:	cmp    BYTE PTR [rbx],sil
   140014091:	je     0x14001402b
   140014093:	movzx  eax,BYTE PTR [rbx]
   140014096:	movzx  ecx,cx
   140014099:	shl    ecx,0x8
   14001409c:	or     ecx,eax
   14001409e:	cmp    edi,ecx
   1400140a0:	jne    0x1400140af
   1400140a2:	lea    rax,[rbx-0x1]
   1400140a6:	jmp    0x140014066
   1400140a8:	movzx  eax,cx
   1400140ab:	cmp    edi,eax
   1400140ad:	je     0x1400140b4
   1400140af:	inc    rbx
   1400140b2:	jmp    0x140014079
   1400140b4:	movzx  eax,cx
   1400140b7:	cmp    edi,eax
   1400140b9:	jne    0x14001402b
   1400140bf:	cmp    BYTE PTR [rbp-0x8],sil
   1400140c3:	je     0x1400140d0
   1400140c5:	mov    rax,QWORD PTR [rbp-0x10]
   1400140c9:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400140d0:	mov    rax,rbx
   1400140d3:	jmp    0x14001403e
   1400140d8:	xor    r8d,r8d
   1400140db:	jmp    0x140013fec
   1400140e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400140e5:	mov    QWORD PTR [rsp+0x10],rbp
   1400140ea:	mov    QWORD PTR [rsp+0x18],rsi
   1400140ef:	push   rdi
   1400140f0:	sub    rsp,0x20
   1400140f4:	lea    rbx,[rcx+0x1c]
   1400140f8:	mov    rbp,rcx
   1400140fb:	mov    esi,0x101
   140014100:	mov    rcx,rbx
   140014103:	mov    r8d,esi
   140014106:	xor    edx,edx
   140014108:	call   0x14000a530
   14001410d:	xor    r11d,r11d
   140014110:	lea    rdi,[rbp+0x10]
   140014114:	lea    ecx,[r11+0x6]
   140014118:	movzx  eax,r11w
   14001411c:	mov    DWORD PTR [rbp+0xc],r11d
   140014120:	mov    QWORD PTR [rbp+0x4],r11
   140014124:	rep stos WORD PTR es:[rdi],ax
   140014127:	lea    rdi,[rip+0xf952]        # 0x140023a80
   14001412e:	sub    rdi,rbp
   140014131:	mov    al,BYTE PTR [rdi+rbx*1]
   140014134:	mov    BYTE PTR [rbx],al
   140014136:	inc    rbx
   140014139:	dec    rsi
   14001413c:	jne    0x140014131
   14001413e:	lea    rcx,[rbp+0x11d]
   140014145:	mov    edx,0x100
   14001414a:	mov    al,BYTE PTR [rcx+rdi*1]
   14001414d:	mov    BYTE PTR [rcx],al
   14001414f:	inc    rcx
   140014152:	dec    rdx
   140014155:	jne    0x14001414a
   140014157:	mov    rbx,QWORD PTR [rsp+0x30]
   14001415c:	mov    rbp,QWORD PTR [rsp+0x38]
   140014161:	mov    rsi,QWORD PTR [rsp+0x40]
   140014166:	add    rsp,0x20
   14001416a:	pop    rdi
   14001416b:	ret    
   14001416c:	mov    rax,rsp
   14001416f:	mov    QWORD PTR [rax+0x10],rbx
   140014173:	mov    QWORD PTR [rax+0x18],rsi
   140014177:	mov    QWORD PTR [rax+0x20],rdi
   14001417b:	push   rbp
   14001417c:	lea    rbp,[rax-0x488]
   140014183:	sub    rsp,0x580
   14001418a:	mov    rax,QWORD PTR [rip+0xef2f]        # 0x1400230c0
   140014191:	xor    rax,rsp
   140014194:	mov    QWORD PTR [rbp+0x470],rax
   14001419b:	mov    rsi,rcx
   14001419e:	mov    ecx,DWORD PTR [rcx+0x4]
   1400141a1:	lea    rdx,[rsp+0x50]
   1400141a6:	call   QWORD PTR [rip+0x6114]        # 0x14001a2c0
   1400141ac:	mov    ebx,0x100
   1400141b1:	test   eax,eax
   1400141b3:	je     0x1400142f5
   1400141b9:	xor    eax,eax
   1400141bb:	lea    rcx,[rsp+0x70]
   1400141c0:	mov    BYTE PTR [rcx],al
   1400141c2:	inc    eax
   1400141c4:	inc    rcx
   1400141c7:	cmp    eax,ebx
   1400141c9:	jb     0x1400141c0
   1400141cb:	mov    al,BYTE PTR [rsp+0x56]
   1400141cf:	mov    BYTE PTR [rsp+0x70],0x20
   1400141d4:	lea    rdi,[rsp+0x56]
   1400141d9:	jmp    0x140014204
   1400141db:	movzx  edx,BYTE PTR [rdi+0x1]
   1400141df:	movzx  r8d,al
   1400141e3:	cmp    r8d,edx
   1400141e6:	ja     0x1400141fe
   1400141e8:	sub    edx,r8d
   1400141eb:	mov    eax,r8d
   1400141ee:	lea    rcx,[rsp+r8*1+0x70]
   1400141f3:	lea    r8d,[rdx+0x1]
   1400141f7:	mov    dl,0x20
   1400141f9:	call   0x14000a530
   1400141fe:	add    rdi,0x2
   140014202:	mov    al,BYTE PTR [rdi]
   140014204:	test   al,al
   140014206:	jne    0x1400141db
   140014208:	mov    eax,DWORD PTR [rsi+0xc]
   14001420b:	and    DWORD PTR [rsp+0x38],0x0
   140014210:	lea    r8,[rsp+0x70]
   140014215:	mov    DWORD PTR [rsp+0x30],eax
   140014219:	mov    eax,DWORD PTR [rsi+0x4]
   14001421c:	mov    r9d,ebx
   14001421f:	mov    DWORD PTR [rsp+0x28],eax
   140014223:	lea    rax,[rbp+0x270]
   14001422a:	mov    edx,0x1
   14001422f:	xor    ecx,ecx
   140014231:	mov    QWORD PTR [rsp+0x20],rax
   140014236:	call   0x140018d70
   14001423b:	and    DWORD PTR [rsp+0x40],0x0
   140014240:	mov    eax,DWORD PTR [rsi+0x4]
   140014243:	mov    edx,DWORD PTR [rsi+0xc]
   140014246:	mov    DWORD PTR [rsp+0x38],eax
   14001424a:	lea    rax,[rbp+0x70]
   14001424e:	mov    DWORD PTR [rsp+0x30],ebx
   140014252:	mov    QWORD PTR [rsp+0x28],rax
   140014257:	lea    r9,[rsp+0x70]
   14001425c:	mov    r8d,ebx
   14001425f:	xor    ecx,ecx
   140014261:	mov    DWORD PTR [rsp+0x20],ebx
   140014265:	call   0x14001862c
   14001426a:	and    DWORD PTR [rsp+0x40],0x0
   14001426f:	mov    eax,DWORD PTR [rsi+0x4]
   140014272:	mov    edx,DWORD PTR [rsi+0xc]
   140014275:	mov    DWORD PTR [rsp+0x38],eax
   140014279:	lea    rax,[rbp+0x170]
   140014280:	mov    DWORD PTR [rsp+0x30],ebx
   140014284:	mov    QWORD PTR [rsp+0x28],rax
   140014289:	lea    r9,[rsp+0x70]
   14001428e:	mov    r8d,0x200
   140014294:	xor    ecx,ecx
   140014296:	mov    DWORD PTR [rsp+0x20],ebx
   14001429a:	call   0x14001862c
   14001429f:	lea    rdx,[rbp+0x70]
   1400142a3:	lea    r8,[rbp+0x170]
   1400142aa:	sub    rdx,rsi
   1400142ad:	lea    r11,[rbp+0x270]
   1400142b4:	lea    rcx,[rsi+0x1d]
   1400142b8:	sub    r8,rsi
   1400142bb:	test   BYTE PTR [r11],0x1
   1400142bf:	je     0x1400142ca
   1400142c1:	or     BYTE PTR [rcx],0x10
   1400142c4:	mov    al,BYTE PTR [rdx+rcx*1-0x1d]
   1400142c8:	jmp    0x1400142d8
   1400142ca:	test   BYTE PTR [r11],0x2
   1400142ce:	je     0x1400142e0
   1400142d0:	or     BYTE PTR [rcx],0x20
   1400142d3:	mov    al,BYTE PTR [r8+rcx*1-0x1d]
   1400142d8:	mov    BYTE PTR [rcx+0x100],al
   1400142de:	jmp    0x1400142e7
   1400142e0:	mov    BYTE PTR [rcx+0x100],0x0
   1400142e7:	inc    rcx
   1400142ea:	add    r11,0x2
   1400142ee:	dec    rbx
   1400142f1:	jne    0x1400142bb
   1400142f3:	jmp    0x140014334
   1400142f5:	xor    edx,edx
   1400142f7:	lea    rcx,[rsi+0x1d]
   1400142fb:	lea    r8d,[rdx-0x61]
   1400142ff:	lea    eax,[r8+0x20]
   140014303:	cmp    eax,0x19
   140014306:	ja     0x140014310
   140014308:	or     BYTE PTR [rcx],0x10
   14001430b:	lea    eax,[rdx+0x20]
   14001430e:	jmp    0x14001431c
   140014310:	cmp    r8d,0x19
   140014314:	ja     0x140014324
   140014316:	or     BYTE PTR [rcx],0x20
   140014319:	lea    eax,[rdx-0x20]
   14001431c:	mov    BYTE PTR [rcx+0x100],al
   140014322:	jmp    0x14001432b
   140014324:	mov    BYTE PTR [rcx+0x100],0x0
   14001432b:	inc    edx
   14001432d:	inc    rcx
   140014330:	cmp    edx,ebx
   140014332:	jb     0x1400142fb
   140014334:	mov    rcx,QWORD PTR [rbp+0x470]
   14001433b:	xor    rcx,rsp
   14001433e:	call   0x14000a820
   140014343:	lea    r11,[rsp+0x580]
   14001434b:	mov    rbx,QWORD PTR [r11+0x18]
   14001434f:	mov    rsi,QWORD PTR [r11+0x20]
   140014353:	mov    rdi,QWORD PTR [r11+0x28]
   140014357:	mov    rsp,r11
   14001435a:	pop    rbp
   14001435b:	ret    
   14001435c:	mov    QWORD PTR [rsp+0x10],rbx
   140014361:	push   rdi
   140014362:	sub    rsp,0x20
   140014366:	call   0x14000d204
   14001436b:	mov    rdi,rax
   14001436e:	mov    ecx,DWORD PTR [rax+0xc8]
   140014374:	test   DWORD PTR [rip+0xfc36],ecx        # 0x140023fb0
   14001437a:	je     0x14001438f
   14001437c:	cmp    QWORD PTR [rax+0xc0],0x0
   140014384:	je     0x14001438f
   140014386:	mov    rbx,QWORD PTR [rax+0xb8]
   14001438d:	jmp    0x1400143fb
   14001438f:	mov    ecx,0xd
   140014394:	call   0x14000cb28
   140014399:	nop
   14001439a:	mov    rbx,QWORD PTR [rdi+0xb8]
   1400143a1:	mov    QWORD PTR [rsp+0x30],rbx
   1400143a6:	cmp    rbx,QWORD PTR [rip+0xfb03]        # 0x140023eb0
   1400143ad:	je     0x1400143f1
   1400143af:	test   rbx,rbx
   1400143b2:	je     0x1400143cf
   1400143b4:	lock dec DWORD PTR [rbx]
   1400143b7:	jne    0x1400143cf
   1400143b9:	lea    rax,[rip+0xf6c0]        # 0x140023a80
   1400143c0:	mov    rcx,QWORD PTR [rsp+0x30]
   1400143c5:	cmp    rcx,rax
   1400143c8:	je     0x1400143cf
   1400143ca:	call   0x14000b460
   1400143cf:	mov    rax,QWORD PTR [rip+0xfada]        # 0x140023eb0
   1400143d6:	mov    QWORD PTR [rdi+0xb8],rax
   1400143dd:	mov    rax,QWORD PTR [rip+0xfacc]        # 0x140023eb0
   1400143e4:	mov    QWORD PTR [rsp+0x30],rax
   1400143e9:	lock inc DWORD PTR [rax]
   1400143ec:	mov    rbx,QWORD PTR [rsp+0x30]
   1400143f1:	mov    ecx,0xd
   1400143f6:	call   0x14000ca28
   1400143fb:	test   rbx,rbx
   1400143fe:	jne    0x140014408
   140014400:	lea    ecx,[rbx+0x20]
   140014403:	call   0x140009c04
   140014408:	mov    rax,rbx
   14001440b:	mov    rbx,QWORD PTR [rsp+0x38]
   140014410:	add    rsp,0x20
   140014414:	pop    rdi
   140014415:	ret    
   140014416:	int3   
   140014417:	int3   
   140014418:	rex push rbx
   14001441a:	sub    rsp,0x40
   14001441e:	mov    ebx,ecx
   140014420:	lea    rcx,[rsp+0x20]
   140014425:	xor    edx,edx
   140014427:	call   0x14000c6f4
   14001442c:	and    DWORD PTR [rip+0x11515],0x0        # 0x140025948
   140014433:	cmp    ebx,0xfffffffe
   140014436:	jne    0x14001445d
   140014438:	mov    DWORD PTR [rip+0x11506],0x1        # 0x140025948
   140014442:	call   QWORD PTR [rip+0x5e88]        # 0x14001a2d0
   140014448:	cmp    BYTE PTR [rsp+0x38],0x0
   14001444d:	je     0x1400144a2
   14001444f:	mov    rcx,QWORD PTR [rsp+0x30]
   140014454:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001445b:	jmp    0x1400144a2
   14001445d:	cmp    ebx,0xfffffffd
   140014460:	jne    0x140014474
   140014462:	mov    DWORD PTR [rip+0x114dc],0x1        # 0x140025948
   14001446c:	call   QWORD PTR [rip+0x5e56]        # 0x14001a2c8
   140014472:	jmp    0x140014448
   140014474:	cmp    ebx,0xfffffffc
   140014477:	jne    0x14001448d
   140014479:	mov    rax,QWORD PTR [rsp+0x20]
   14001447e:	mov    DWORD PTR [rip+0x114c0],0x1        # 0x140025948
   140014488:	mov    eax,DWORD PTR [rax+0x4]
   14001448b:	jmp    0x140014448
   14001448d:	cmp    BYTE PTR [rsp+0x38],0x0
   140014492:	je     0x1400144a0
   140014494:	mov    rax,QWORD PTR [rsp+0x30]
   140014499:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400144a0:	mov    eax,ebx
   1400144a2:	add    rsp,0x40
   1400144a6:	pop    rbx
   1400144a7:	ret    
   1400144a8:	mov    QWORD PTR [rsp+0x18],rbx
   1400144ad:	push   rbp
   1400144ae:	push   rsi
   1400144af:	push   rdi
   1400144b0:	push   r12
   1400144b2:	push   r13
   1400144b4:	sub    rsp,0x40
   1400144b8:	mov    rax,QWORD PTR [rip+0xec01]        # 0x1400230c0
   1400144bf:	xor    rax,rsp
   1400144c2:	mov    QWORD PTR [rsp+0x38],rax
   1400144c7:	mov    rsi,rdx
   1400144ca:	call   0x140014418
   1400144cf:	xor    ebx,ebx
   1400144d1:	mov    edi,eax
   1400144d3:	test   eax,eax
   1400144d5:	jne    0x1400144e4
   1400144d7:	mov    rcx,rsi
   1400144da:	call   0x1400140e0
   1400144df:	jmp    0x1400146fa
   1400144e4:	lea    r13,[rip+0xf9d5]        # 0x140023ec0
   1400144eb:	mov    ecx,ebx
   1400144ed:	mov    rbp,rbx
   1400144f0:	mov    rax,r13
   1400144f3:	mov    r12d,0x1
   1400144f9:	cmp    DWORD PTR [rax],edi
   1400144fb:	je     0x140014627
   140014501:	add    ecx,r12d
   140014504:	add    rbp,r12
   140014507:	add    rax,0x30
   14001450b:	cmp    ecx,0x5
   14001450e:	jb     0x1400144f9
   140014510:	cmp    edi,0xfde8
   140014516:	je     0x14001461f
   14001451c:	cmp    edi,0xfde9
   140014522:	je     0x14001461f
   140014528:	movzx  ecx,di
   14001452b:	call   QWORD PTR [rip+0x5da7]        # 0x14001a2d8
   140014531:	test   eax,eax
   140014533:	je     0x14001461f
   140014539:	lea    rdx,[rsp+0x20]
   14001453e:	mov    ecx,edi
   140014540:	call   QWORD PTR [rip+0x5d7a]        # 0x14001a2c0
   140014546:	test   eax,eax
   140014548:	je     0x140014613
   14001454e:	lea    rcx,[rsi+0x1c]
   140014552:	xor    edx,edx
   140014554:	mov    r8d,0x101
   14001455a:	call   0x14000a530
   14001455f:	mov    DWORD PTR [rsi+0x4],edi
   140014562:	mov    DWORD PTR [rsi+0xc],ebx
   140014565:	cmp    DWORD PTR [rsp+0x20],r12d
   14001456a:	jbe    0x1400145fc
   140014570:	lea    rax,[rsp+0x26]
   140014575:	cmp    BYTE PTR [rsp+0x26],bl
   140014579:	je     0x1400145a8
   14001457b:	cmp    BYTE PTR [rax+0x1],bl
   14001457e:	je     0x1400145a8
   140014580:	movzx  edi,BYTE PTR [rax]
   140014583:	movzx  ecx,BYTE PTR [rax+0x1]
   140014587:	cmp    edi,ecx
   140014589:	ja     0x1400145a0
   14001458b:	sub    ecx,edi
   14001458d:	lea    rdx,[rdi+rsi*1+0x1d]
   140014592:	add    ecx,r12d
   140014595:	or     BYTE PTR [rdx],0x4
   140014598:	add    rdx,r12
   14001459b:	sub    rcx,r12
   14001459e:	jne    0x140014595
   1400145a0:	add    rax,0x2
   1400145a4:	cmp    BYTE PTR [rax],bl
   1400145a6:	jne    0x14001457b
   1400145a8:	lea    rax,[rsi+0x1e]
   1400145ac:	mov    ecx,0xfe
   1400145b1:	or     BYTE PTR [rax],0x8
   1400145b4:	add    rax,r12
   1400145b7:	sub    rcx,r12
   1400145ba:	jne    0x1400145b1
   1400145bc:	mov    ecx,DWORD PTR [rsi+0x4]
   1400145bf:	sub    ecx,0x3a4
   1400145c5:	je     0x1400145ee
   1400145c7:	sub    ecx,0x4
   1400145ca:	je     0x1400145e7
   1400145cc:	sub    ecx,0xd
   1400145cf:	je     0x1400145e0
   1400145d1:	dec    ecx
   1400145d3:	je     0x1400145d9
   1400145d5:	mov    eax,ebx
   1400145d7:	jmp    0x1400145f3
   1400145d9:	mov    eax,0x404
   1400145de:	jmp    0x1400145f3
   1400145e0:	mov    eax,0x412
   1400145e5:	jmp    0x1400145f3
   1400145e7:	mov    eax,0x804
   1400145ec:	jmp    0x1400145f3
   1400145ee:	mov    eax,0x411
   1400145f3:	mov    DWORD PTR [rsi+0xc],eax
   1400145f6:	mov    DWORD PTR [rsi+0x8],r12d
   1400145fa:	jmp    0x1400145ff
   1400145fc:	mov    DWORD PTR [rsi+0x8],ebx
   1400145ff:	lea    rdi,[rsi+0x10]
   140014603:	movzx  eax,bx
   140014606:	mov    ecx,0x6
   14001460b:	rep stos WORD PTR es:[rdi],ax
   14001460e:	jmp    0x1400146f2
   140014613:	cmp    DWORD PTR [rip+0x1132f],ebx        # 0x140025948
   140014619:	jne    0x1400144d7
   14001461f:	or     eax,0xffffffff
   140014622:	jmp    0x1400146fc
   140014627:	lea    rcx,[rsi+0x1c]
   14001462b:	xor    edx,edx
   14001462d:	mov    r8d,0x101
   140014633:	call   0x14000a530
   140014638:	lea    r10,[rbp+rbp*2+0x0]
   14001463d:	lea    r11,[rip+0xf874]        # 0x140023eb8
   140014644:	shl    r10,0x4
   140014648:	mov    ebp,0x4
   14001464d:	lea    r8,[r10+r13*1+0x10]
   140014652:	mov    rcx,r8
   140014655:	cmp    BYTE PTR [r8],bl
   140014658:	je     0x14001468b
   14001465a:	cmp    BYTE PTR [rcx+0x1],bl
   14001465d:	je     0x14001468b
   14001465f:	movzx  edx,BYTE PTR [rcx]
   140014662:	movzx  eax,BYTE PTR [rcx+0x1]
   140014666:	cmp    edx,eax
   140014668:	ja     0x140014683
   14001466a:	lea    r9,[rdx+rsi*1+0x1d]
   14001466f:	mov    al,BYTE PTR [r11]
   140014672:	add    edx,r12d
   140014675:	or     BYTE PTR [r9],al
   140014678:	movzx  eax,BYTE PTR [rcx+0x1]
   14001467c:	add    r9,r12
   14001467f:	cmp    edx,eax
   140014681:	jbe    0x14001466f
   140014683:	add    rcx,0x2
   140014687:	cmp    BYTE PTR [rcx],bl
   140014689:	jne    0x14001465a
   14001468b:	add    r8,0x8
   14001468f:	add    r11,r12
   140014692:	sub    rbp,r12
   140014695:	jne    0x140014652
   140014697:	mov    DWORD PTR [rsi+0x4],edi
   14001469a:	sub    edi,0x3a4
   1400146a0:	mov    DWORD PTR [rsi+0x8],r12d
   1400146a4:	je     0x1400146c9
   1400146a6:	sub    edi,0x4
   1400146a9:	je     0x1400146c2
   1400146ab:	sub    edi,0xd
   1400146ae:	je     0x1400146bb
   1400146b0:	dec    edi
   1400146b2:	jne    0x1400146ce
   1400146b4:	mov    ebx,0x404
   1400146b9:	jmp    0x1400146ce
   1400146bb:	mov    ebx,0x412
   1400146c0:	jmp    0x1400146ce
   1400146c2:	mov    ebx,0x804
   1400146c7:	jmp    0x1400146ce
   1400146c9:	mov    ebx,0x411
   1400146ce:	sub    r10,rsi
   1400146d1:	mov    DWORD PTR [rsi+0xc],ebx
   1400146d4:	lea    rcx,[rsi+0x10]
   1400146d8:	lea    rdi,[r10+r13*1-0xc]
   1400146dd:	mov    edx,0x6
   1400146e2:	movzx  eax,WORD PTR [rdi+rcx*1]
   1400146e6:	mov    WORD PTR [rcx],ax
   1400146e9:	add    rcx,0x2
   1400146ed:	sub    rdx,r12
   1400146f0:	jne    0x1400146e2
   1400146f2:	mov    rcx,rsi
   1400146f5:	call   0x14001416c
   1400146fa:	xor    eax,eax
   1400146fc:	mov    rcx,QWORD PTR [rsp+0x38]
   140014701:	xor    rcx,rsp
   140014704:	call   0x14000a820
   140014709:	mov    rbx,QWORD PTR [rsp+0x80]
   140014711:	add    rsp,0x40
   140014715:	pop    r13
   140014717:	pop    r12
   140014719:	pop    rdi
   14001471a:	pop    rsi
   14001471b:	pop    rbp
   14001471c:	ret    
   14001471d:	int3   
   14001471e:	int3   
   14001471f:	int3   
   140014720:	mov    rax,rsp
   140014723:	mov    QWORD PTR [rax+0x8],rbx
   140014727:	mov    QWORD PTR [rax+0x10],rsi
   14001472b:	mov    QWORD PTR [rax+0x18],rdi
   14001472f:	mov    QWORD PTR [rax+0x20],r12
   140014733:	push   r13
   140014735:	sub    rsp,0x30
   140014739:	mov    edi,ecx
   14001473b:	or     r13d,0xffffffff
   14001473f:	call   0x14000d204
   140014744:	mov    rsi,rax
   140014747:	call   0x14001435c
   14001474c:	mov    rbx,QWORD PTR [rsi+0xb8]
   140014753:	mov    ecx,edi
   140014755:	call   0x140014418
   14001475a:	mov    r12d,eax
   14001475d:	cmp    eax,DWORD PTR [rbx+0x4]
   140014760:	je     0x1400148db
   140014766:	mov    ecx,0x220
   14001476b:	call   0x140010aa4
   140014770:	mov    rbx,rax
   140014773:	xor    edi,edi
   140014775:	test   rax,rax
   140014778:	je     0x1400148e0
   14001477e:	mov    rdx,QWORD PTR [rsi+0xb8]
   140014785:	mov    rcx,rax
   140014788:	mov    r8d,0x220
   14001478e:	call   0x14000a140
   140014793:	mov    DWORD PTR [rbx],edi
   140014795:	mov    rdx,rbx
   140014798:	mov    ecx,r12d
   14001479b:	call   0x1400144a8
   1400147a0:	mov    r13d,eax
   1400147a3:	test   eax,eax
   1400147a5:	jne    0x1400148b5
   1400147ab:	mov    rcx,QWORD PTR [rsi+0xb8]
   1400147b2:	lea    r12,[rip+0xf2c7]        # 0x140023a80
   1400147b9:	lock dec DWORD PTR [rcx]
   1400147bc:	jne    0x1400147cf
   1400147be:	mov    rcx,QWORD PTR [rsi+0xb8]
   1400147c5:	cmp    rcx,r12
   1400147c8:	je     0x1400147cf
   1400147ca:	call   0x14000b460
   1400147cf:	mov    QWORD PTR [rsi+0xb8],rbx
   1400147d6:	lock inc DWORD PTR [rbx]
   1400147d9:	test   BYTE PTR [rsi+0xc8],0x2
   1400147e0:	jne    0x1400148e0
   1400147e6:	test   BYTE PTR [rip+0xf7c3],0x1        # 0x140023fb0
   1400147ed:	jne    0x1400148e0
   1400147f3:	mov    esi,0xd
   1400147f8:	mov    ecx,esi
   1400147fa:	call   0x14000cb28
   1400147ff:	nop
   140014800:	mov    eax,DWORD PTR [rbx+0x4]
   140014803:	mov    DWORD PTR [rip+0x11153],eax        # 0x14002595c
   140014809:	mov    eax,DWORD PTR [rbx+0x8]
   14001480c:	mov    DWORD PTR [rip+0x1114e],eax        # 0x140025960
   140014812:	mov    eax,DWORD PTR [rbx+0xc]
   140014815:	mov    DWORD PTR [rip+0x11149],eax        # 0x140025964
   14001481b:	mov    edx,edi
   14001481d:	lea    r8,[rip+0xfffffffffffeb7dc]        # 0x140000000
   140014824:	mov    DWORD PTR [rsp+0x20],edx
   140014828:	cmp    edx,0x5
   14001482b:	jge    0x140014842
   14001482d:	movsxd rcx,edx
   140014830:	movzx  eax,WORD PTR [rbx+rcx*2+0x10]
   140014835:	mov    WORD PTR [r8+rcx*2+0x25950],ax
   14001483e:	inc    edx
   140014840:	jmp    0x140014824
   140014842:	mov    edx,edi
   140014844:	mov    DWORD PTR [rsp+0x20],edx
   140014848:	cmp    edx,0x101
   14001484e:	jge    0x140014863
   140014850:	movsxd rcx,edx
   140014853:	mov    al,BYTE PTR [rcx+rbx*1+0x1c]
   140014857:	mov    BYTE PTR [rcx+r8*1+0x23ca0],al
   14001485f:	inc    edx
   140014861:	jmp    0x140014844
   140014863:	mov    DWORD PTR [rsp+0x20],edi
   140014867:	cmp    edi,0x100
   14001486d:	jge    0x140014885
   14001486f:	movsxd rcx,edi
   140014872:	mov    al,BYTE PTR [rcx+rbx*1+0x11d]
   140014879:	mov    BYTE PTR [rcx+r8*1+0x23db0],al
   140014881:	inc    edi
   140014883:	jmp    0x140014863
   140014885:	mov    rax,QWORD PTR [rip+0xf624]        # 0x140023eb0
   14001488c:	lock dec DWORD PTR [rax]
   14001488f:	jne    0x1400148a2
   140014891:	mov    rcx,QWORD PTR [rip+0xf618]        # 0x140023eb0
   140014898:	cmp    rcx,r12
   14001489b:	je     0x1400148a2
   14001489d:	call   0x14000b460
   1400148a2:	mov    QWORD PTR [rip+0xf607],rbx        # 0x140023eb0
   1400148a9:	lock inc DWORD PTR [rbx]
   1400148ac:	mov    ecx,esi
   1400148ae:	call   0x14000ca28
   1400148b3:	jmp    0x1400148e0
   1400148b5:	cmp    eax,0xffffffff
   1400148b8:	jne    0x1400148e0
   1400148ba:	lea    r12,[rip+0xf1bf]        # 0x140023a80
   1400148c1:	cmp    rbx,r12
   1400148c4:	je     0x1400148ce
   1400148c6:	mov    rcx,rbx
   1400148c9:	call   0x14000b460
   1400148ce:	call   0x14000bdc0
   1400148d3:	mov    DWORD PTR [rax],0x16
   1400148d9:	jmp    0x1400148e0
   1400148db:	xor    edi,edi
   1400148dd:	mov    r13d,edi
   1400148e0:	mov    eax,r13d
   1400148e3:	mov    rbx,QWORD PTR [rsp+0x40]
   1400148e8:	mov    rsi,QWORD PTR [rsp+0x48]
   1400148ed:	mov    rdi,QWORD PTR [rsp+0x50]
   1400148f2:	mov    r12,QWORD PTR [rsp+0x58]
   1400148f7:	add    rsp,0x30
   1400148fb:	pop    r13
   1400148fd:	ret    
   1400148fe:	int3   
   1400148ff:	int3   
   140014900:	sub    rsp,0x28
   140014904:	cmp    DWORD PTR [rip+0x123bd],0x0        # 0x140026cc8
   14001490b:	jne    0x140014921
   14001490d:	mov    ecx,0xfffffffd
   140014912:	call   0x140014720
   140014917:	mov    DWORD PTR [rip+0x123a7],0x1        # 0x140026cc8
   140014921:	xor    eax,eax
   140014923:	add    rsp,0x28
   140014927:	ret    
   140014928:	lock inc DWORD PTR [rcx]
   14001492b:	mov    rax,QWORD PTR [rcx+0x110]
   140014932:	test   rax,rax
   140014935:	je     0x14001493a
   140014937:	lock inc DWORD PTR [rax]
   14001493a:	mov    rax,QWORD PTR [rcx+0x120]
   140014941:	test   rax,rax
   140014944:	je     0x140014949
   140014946:	lock inc DWORD PTR [rax]
   140014949:	mov    rax,QWORD PTR [rcx+0x118]
   140014950:	test   rax,rax
   140014953:	je     0x140014958
   140014955:	lock inc DWORD PTR [rax]
   140014958:	mov    rax,QWORD PTR [rcx+0x130]
   14001495f:	test   rax,rax
   140014962:	je     0x140014967
   140014964:	lock inc DWORD PTR [rax]
   140014967:	lea    rax,[rcx+0x58]
   14001496b:	mov    r8d,0x6
   140014971:	lea    rdx,[rip+0xf63c]        # 0x140023fb4
   140014978:	cmp    QWORD PTR [rax-0x10],rdx
   14001497c:	je     0x140014989
   14001497e:	mov    rdx,QWORD PTR [rax]
   140014981:	test   rdx,rdx
   140014984:	je     0x140014989
   140014986:	lock inc DWORD PTR [rdx]
   140014989:	cmp    QWORD PTR [rax-0x8],0x0
   14001498e:	je     0x14001499c
   140014990:	mov    rdx,QWORD PTR [rax+0x8]
   140014994:	test   rdx,rdx
   140014997:	je     0x14001499c
   140014999:	lock inc DWORD PTR [rdx]
   14001499c:	add    rax,0x20
   1400149a0:	dec    r8
   1400149a3:	jne    0x140014971
   1400149a5:	mov    rax,QWORD PTR [rcx+0x158]
   1400149ac:	lock inc DWORD PTR [rax+0x160]
   1400149b3:	ret    
   1400149b4:	test   rcx,rcx
   1400149b7:	je     0x140014a54
   1400149bd:	or     r9d,0xffffffff
   1400149c1:	lock add DWORD PTR [rcx],r9d
   1400149c5:	mov    rax,QWORD PTR [rcx+0x110]
   1400149cc:	test   rax,rax
   1400149cf:	je     0x1400149d5
   1400149d1:	lock add DWORD PTR [rax],r9d
   1400149d5:	mov    rax,QWORD PTR [rcx+0x120]
   1400149dc:	test   rax,rax
   1400149df:	je     0x1400149e5
   1400149e1:	lock add DWORD PTR [rax],r9d
   1400149e5:	mov    rax,QWORD PTR [rcx+0x118]
   1400149ec:	test   rax,rax
   1400149ef:	je     0x1400149f5
   1400149f1:	lock add DWORD PTR [rax],r9d
   1400149f5:	mov    rax,QWORD PTR [rcx+0x130]
   1400149fc:	test   rax,rax
   1400149ff:	je     0x140014a05
   140014a01:	lock add DWORD PTR [rax],r9d
   140014a05:	lea    rax,[rcx+0x58]
   140014a09:	mov    r8d,0x6
   140014a0f:	lea    rdx,[rip+0xf59e]        # 0x140023fb4
   140014a16:	cmp    QWORD PTR [rax-0x10],rdx
   140014a1a:	je     0x140014a28
   140014a1c:	mov    rdx,QWORD PTR [rax]
   140014a1f:	test   rdx,rdx
   140014a22:	je     0x140014a28
   140014a24:	lock add DWORD PTR [rdx],r9d
   140014a28:	cmp    QWORD PTR [rax-0x8],0x0
   140014a2d:	je     0x140014a3c
   140014a2f:	mov    rdx,QWORD PTR [rax+0x8]
   140014a33:	test   rdx,rdx
   140014a36:	je     0x140014a3c
   140014a38:	lock add DWORD PTR [rdx],r9d
   140014a3c:	add    rax,0x20
   140014a40:	dec    r8
   140014a43:	jne    0x140014a0f
   140014a45:	mov    rax,QWORD PTR [rcx+0x158]
   140014a4c:	lock add DWORD PTR [rax+0x160],r9d
   140014a54:	mov    rax,rcx
   140014a57:	ret    
   140014a58:	mov    QWORD PTR [rsp+0x8],rbx
   140014a5d:	mov    QWORD PTR [rsp+0x10],rsi
   140014a62:	push   rdi
   140014a63:	sub    rsp,0x20
   140014a67:	mov    rax,QWORD PTR [rcx+0x128]
   140014a6e:	mov    rbx,rcx
   140014a71:	test   rax,rax
   140014a74:	je     0x140014aef
   140014a76:	lea    rcx,[rip+0xfbd3]        # 0x140024650
   140014a7d:	cmp    rax,rcx
   140014a80:	je     0x140014aef
   140014a82:	mov    rax,QWORD PTR [rbx+0x110]
   140014a89:	test   rax,rax
   140014a8c:	je     0x140014aef
   140014a8e:	cmp    DWORD PTR [rax],0x0
   140014a91:	jne    0x140014aef
   140014a93:	mov    rcx,QWORD PTR [rbx+0x120]
   140014a9a:	test   rcx,rcx
   140014a9d:	je     0x140014ab5
   140014a9f:	cmp    DWORD PTR [rcx],0x0
   140014aa2:	jne    0x140014ab5
   140014aa4:	call   0x14000b460
   140014aa9:	mov    rcx,QWORD PTR [rbx+0x128]
   140014ab0:	call   0x14001924c
   140014ab5:	mov    rcx,QWORD PTR [rbx+0x118]
   140014abc:	test   rcx,rcx
   140014abf:	je     0x140014ad7
   140014ac1:	cmp    DWORD PTR [rcx],0x0
   140014ac4:	jne    0x140014ad7
   140014ac6:	call   0x14000b460
   140014acb:	mov    rcx,QWORD PTR [rbx+0x128]
   140014ad2:	call   0x1400191e0
   140014ad7:	mov    rcx,QWORD PTR [rbx+0x110]
   140014ade:	call   0x14000b460
   140014ae3:	mov    rcx,QWORD PTR [rbx+0x128]
   140014aea:	call   0x14000b460
   140014aef:	mov    rax,QWORD PTR [rbx+0x130]
   140014af6:	test   rax,rax
   140014af9:	je     0x140014b42
   140014afb:	cmp    DWORD PTR [rax],0x0
   140014afe:	jne    0x140014b42
   140014b00:	mov    rcx,QWORD PTR [rbx+0x138]
   140014b07:	sub    rcx,0xfe
   140014b0e:	call   0x14000b460
   140014b13:	mov    rcx,QWORD PTR [rbx+0x148]
   140014b1a:	mov    edi,0x80
   140014b1f:	sub    rcx,rdi
   140014b22:	call   0x14000b460
   140014b27:	mov    rcx,QWORD PTR [rbx+0x150]
   140014b2e:	sub    rcx,rdi
   140014b31:	call   0x14000b460
   140014b36:	mov    rcx,QWORD PTR [rbx+0x130]
   140014b3d:	call   0x14000b460
   140014b42:	mov    rcx,QWORD PTR [rbx+0x158]
   140014b49:	lea    rax,[rip+0xf470]        # 0x140023fc0
   140014b50:	cmp    rcx,rax
   140014b53:	je     0x140014b6f
   140014b55:	cmp    DWORD PTR [rcx+0x160],0x0
   140014b5c:	jne    0x140014b6f
   140014b5e:	call   0x140018df0
   140014b63:	mov    rcx,QWORD PTR [rbx+0x158]
   140014b6a:	call   0x14000b460
   140014b6f:	lea    rdi,[rbx+0x58]
   140014b73:	mov    esi,0x6
   140014b78:	lea    rax,[rip+0xf435]        # 0x140023fb4
   140014b7f:	cmp    QWORD PTR [rdi-0x10],rax
   140014b83:	je     0x140014b97
   140014b85:	mov    rcx,QWORD PTR [rdi]
   140014b88:	test   rcx,rcx
   140014b8b:	je     0x140014b97
   140014b8d:	cmp    DWORD PTR [rcx],0x0
   140014b90:	jne    0x140014b97
   140014b92:	call   0x14000b460
   140014b97:	cmp    QWORD PTR [rdi-0x8],0x0
   140014b9c:	je     0x140014bb1
   140014b9e:	mov    rcx,QWORD PTR [rdi+0x8]
   140014ba2:	test   rcx,rcx
   140014ba5:	je     0x140014bb1
   140014ba7:	cmp    DWORD PTR [rcx],0x0
   140014baa:	jne    0x140014bb1
   140014bac:	call   0x14000b460
   140014bb1:	add    rdi,0x20
   140014bb5:	dec    rsi
   140014bb8:	jne    0x140014b78
   140014bba:	mov    rcx,rbx
   140014bbd:	mov    rbx,QWORD PTR [rsp+0x30]
   140014bc2:	mov    rsi,QWORD PTR [rsp+0x38]
   140014bc7:	add    rsp,0x20
   140014bcb:	pop    rdi
   140014bcc:	jmp    0x14000b460
   140014bd1:	int3   
   140014bd2:	int3   
   140014bd3:	int3   
   140014bd4:	rex push rbx
   140014bd6:	sub    rsp,0x20
   140014bda:	mov    rbx,rdx
   140014bdd:	test   rdx,rdx
   140014be0:	je     0x140014c23
   140014be2:	test   rcx,rcx
   140014be5:	je     0x140014c23
   140014be7:	mov    r10,QWORD PTR [rcx]
   140014bea:	cmp    r10,rdx
   140014bed:	je     0x140014c1e
   140014bef:	mov    QWORD PTR [rcx],rdx
   140014bf2:	mov    rcx,rdx
   140014bf5:	call   0x140014928
   140014bfa:	test   r10,r10
   140014bfd:	je     0x140014c1e
   140014bff:	mov    rcx,r10
   140014c02:	call   0x1400149b4
   140014c07:	cmp    DWORD PTR [r10],0x0
   140014c0b:	jne    0x140014c1e
   140014c0d:	lea    rax,[rip+0xf66c]        # 0x140024280
   140014c14:	cmp    r10,rax
   140014c17:	je     0x140014c1e
   140014c19:	call   0x140014a58
   140014c1e:	mov    rax,rbx
   140014c21:	jmp    0x140014c25
   140014c23:	xor    eax,eax
   140014c25:	add    rsp,0x20
   140014c29:	pop    rbx
   140014c2a:	ret    
   140014c2b:	int3   
   140014c2c:	rex push rbx
   140014c2e:	sub    rsp,0x20
   140014c32:	call   0x14000d204
   140014c37:	mov    rbx,rax
   140014c3a:	mov    ecx,DWORD PTR [rax+0xc8]
   140014c40:	test   DWORD PTR [rip+0xf36a],ecx        # 0x140023fb0
   140014c46:	je     0x140014c60
   140014c48:	cmp    QWORD PTR [rax+0xc0],0x0
   140014c50:	je     0x140014c60
   140014c52:	call   0x14000d204
   140014c57:	mov    rbx,QWORD PTR [rax+0xc0]
   140014c5e:	jmp    0x140014c8b
   140014c60:	mov    ecx,0xc
   140014c65:	call   0x14000cb28
   140014c6a:	nop
   140014c6b:	lea    rcx,[rbx+0xc0]
   140014c72:	mov    rdx,QWORD PTR [rip+0xf767]        # 0x1400243e0
   140014c79:	call   0x140014bd4
   140014c7e:	mov    rbx,rax
   140014c81:	mov    ecx,0xc
   140014c86:	call   0x14000ca28
   140014c8b:	test   rbx,rbx
   140014c8e:	jne    0x140014c98
   140014c90:	lea    ecx,[rbx+0x20]
   140014c93:	call   0x140009c04
   140014c98:	mov    rax,rbx
   140014c9b:	add    rsp,0x20
   140014c9f:	pop    rbx
   140014ca0:	ret    
   140014ca1:	int3   
   140014ca2:	int3   
   140014ca3:	int3   
   140014ca4:	mov    QWORD PTR [rsp+0x10],rsi
   140014ca9:	push   rbp
   140014caa:	push   rdi
   140014cab:	push   r12
   140014cad:	mov    rbp,rsp
   140014cb0:	sub    rsp,0x60
   140014cb4:	movsxd rdi,ecx
   140014cb7:	mov    r12d,edx
   140014cba:	lea    rcx,[rbp-0x20]
   140014cbe:	mov    rdx,r8
   140014cc1:	call   0x14000c6f4
   140014cc6:	lea    r11d,[rdi+0x1]
   140014cca:	cmp    r11d,0x100
   140014cd1:	ja     0x140014ce7
   140014cd3:	mov    rax,QWORD PTR [rbp-0x20]
   140014cd7:	mov    rcx,QWORD PTR [rax+0x140]
   140014cde:	movzx  eax,WORD PTR [rcx+rdi*2]
   140014ce2:	jmp    0x140014d67
   140014ce7:	mov    esi,edi
   140014ce9:	lea    rdx,[rbp-0x20]
   140014ced:	sar    esi,0x8
   140014cf0:	movzx  ecx,sil
   140014cf4:	call   0x140015288
   140014cf9:	mov    edx,0x1
   140014cfe:	test   eax,eax
   140014d00:	je     0x140014d14
   140014d02:	mov    BYTE PTR [rbp+0x38],sil
   140014d06:	mov    BYTE PTR [rbp+0x39],dil
   140014d0a:	mov    BYTE PTR [rbp+0x3a],0x0
   140014d0e:	lea    r9d,[rdx+0x1]
   140014d12:	jmp    0x140014d1f
   140014d14:	mov    BYTE PTR [rbp+0x38],dil
   140014d18:	mov    BYTE PTR [rbp+0x39],0x0
   140014d1c:	mov    r9d,edx
   140014d1f:	mov    rcx,QWORD PTR [rbp-0x20]
   140014d23:	mov    DWORD PTR [rsp+0x38],edx
   140014d27:	lea    r8,[rbp+0x38]
   140014d2b:	mov    eax,DWORD PTR [rcx+0x14]
   140014d2e:	mov    DWORD PTR [rsp+0x30],eax
   140014d32:	mov    eax,DWORD PTR [rcx+0x4]
   140014d35:	lea    rcx,[rbp-0x20]
   140014d39:	mov    DWORD PTR [rsp+0x28],eax
   140014d3d:	lea    rax,[rbp+0x20]
   140014d41:	mov    QWORD PTR [rsp+0x20],rax
   140014d46:	call   0x140018d70
   140014d4b:	test   eax,eax
   140014d4d:	jne    0x140014d63
   140014d4f:	cmp    BYTE PTR [rbp-0x8],al
   140014d52:	je     0x140014d5f
   140014d54:	mov    rax,QWORD PTR [rbp-0x10]
   140014d58:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140014d5f:	xor    eax,eax
   140014d61:	jmp    0x140014d7b
   140014d63:	movzx  eax,WORD PTR [rbp+0x20]
   140014d67:	and    eax,r12d
   140014d6a:	cmp    BYTE PTR [rbp-0x8],0x0
   140014d6e:	je     0x140014d7b
   140014d70:	mov    rcx,QWORD PTR [rbp-0x10]
   140014d74:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140014d7b:	mov    rsi,QWORD PTR [rsp+0x88]
   140014d83:	add    rsp,0x60
   140014d87:	pop    r12
   140014d89:	pop    rdi
   140014d8a:	pop    rbp
   140014d8b:	ret    
   140014d8c:	sub    rsp,0x28
   140014d90:	call   0x14000cbd0
   140014d95:	test   rax,rax
   140014d98:	je     0x140014da4
   140014d9a:	mov    ecx,0x16
   140014d9f:	call   0x14000cbe0
   140014da4:	test   BYTE PTR [rip+0xf655],0x2        # 0x140024400
   140014dab:	je     0x140014dc1
   140014dad:	mov    r8d,0x1
   140014db3:	mov    edx,0x40000015
   140014db8:	lea    ecx,[r8+0x2]
   140014dbc:	call   0x14000ce2c
   140014dc1:	mov    ecx,0x3
   140014dc6:	call   0x140009bd8
   140014dcb:	int3   
   140014dcc:	and    DWORD PTR [rip+0x10c95],0x0        # 0x140025a68
   140014dd3:	ret    
   140014dd4:	sub    rsp,0x28
   140014dd8:	test   rcx,rcx
   140014ddb:	jne    0x140014df6
   140014ddd:	call   0x14000bdc0
   140014de2:	mov    DWORD PTR [rax],0x16
   140014de8:	call   0x14000d01c
   140014ded:	or     rax,0xffffffffffffffff
   140014df1:	add    rsp,0x28
   140014df5:	ret    
   140014df6:	mov    r8,rcx
   140014df9:	mov    rcx,QWORD PTR [rip+0x105c8]        # 0x1400253c8
   140014e00:	xor    edx,edx
   140014e02:	add    rsp,0x28
   140014e06:	rex.W jmp QWORD PTR [rip+0x54d3]        # 0x14001a2e0
   140014e0d:	int3   
   140014e0e:	int3   
   140014e0f:	int3   
   140014e10:	mov    ecx,0x2
   140014e15:	jmp    0x140009c04
   140014e1a:	int3   
   140014e1b:	int3   
   140014e1c:	rex push rbx
   140014e1e:	push   rbp
   140014e1f:	push   rsi
   140014e20:	push   rdi
   140014e21:	push   r12
   140014e23:	push   r13
   140014e25:	push   r14
   140014e27:	sub    rsp,0x50
   140014e2b:	mov    rax,QWORD PTR [rip+0xe28e]        # 0x1400230c0
   140014e32:	xor    rax,rsp
   140014e35:	mov    QWORD PTR [rsp+0x48],rax
   140014e3a:	mov    ebp,r8d
   140014e3d:	mov    r14,rdx
   140014e40:	mov    r13,rcx
   140014e43:	call   0x14000d078
   140014e48:	xor    ebx,ebx
   140014e4a:	cmp    QWORD PTR [rip+0x10b1f],rbx        # 0x140025970
   140014e51:	mov    rdi,rax
   140014e54:	jne    0x140014f2f
   140014e5a:	lea    rcx,[rip+0xb15f]        # 0x14001ffc0
   140014e61:	call   QWORD PTR [rip+0x5309]        # 0x14001a170
   140014e67:	mov    rsi,rax
   140014e6a:	test   rax,rax
   140014e6d:	je     0x140015006
   140014e73:	lea    rdx,[rip+0xb136]        # 0x14001ffb0
   140014e7a:	mov    rcx,rax
   140014e7d:	call   QWORD PTR [rip+0x5215]        # 0x14001a098
   140014e83:	test   rax,rax
   140014e86:	je     0x140015006
   140014e8c:	mov    rcx,rax
   140014e8f:	call   QWORD PTR [rip+0x52d3]        # 0x14001a168
   140014e95:	lea    rdx,[rip+0xb104]        # 0x14001ffa0
   140014e9c:	mov    rcx,rsi
   140014e9f:	mov    QWORD PTR [rip+0x10aca],rax        # 0x140025970
   140014ea6:	call   QWORD PTR [rip+0x51ec]        # 0x14001a098
   140014eac:	mov    rcx,rax
   140014eaf:	call   QWORD PTR [rip+0x52b3]        # 0x14001a168
   140014eb5:	lea    rdx,[rip+0xb0cc]        # 0x14001ff88
   140014ebc:	mov    rcx,rsi
   140014ebf:	mov    QWORD PTR [rip+0x10ab2],rax        # 0x140025978
   140014ec6:	call   QWORD PTR [rip+0x51cc]        # 0x14001a098
   140014ecc:	mov    rcx,rax
   140014ecf:	call   QWORD PTR [rip+0x5293]        # 0x14001a168
   140014ed5:	lea    rdx,[rip+0xb08c]        # 0x14001ff68
   140014edc:	mov    rcx,rsi
   140014edf:	mov    QWORD PTR [rip+0x10a9a],rax        # 0x140025980
   140014ee6:	call   QWORD PTR [rip+0x51ac]        # 0x14001a098
   140014eec:	mov    rcx,rax
   140014eef:	call   QWORD PTR [rip+0x5273]        # 0x14001a168
   140014ef5:	mov    r11,rax
   140014ef8:	mov    QWORD PTR [rip+0x10a91],rax        # 0x140025990
   140014eff:	test   rax,rax
   140014f02:	je     0x140014f26
   140014f04:	lea    rdx,[rip+0xb045]        # 0x14001ff50
   140014f0b:	mov    rcx,rsi
   140014f0e:	call   QWORD PTR [rip+0x5184]        # 0x14001a098
   140014f14:	mov    rcx,rax
   140014f17:	call   QWORD PTR [rip+0x524b]        # 0x14001a168
   140014f1d:	mov    QWORD PTR [rip+0x10a64],rax        # 0x140025988
   140014f24:	jmp    0x140014f36
   140014f26:	mov    rax,QWORD PTR [rip+0x10a5b]        # 0x140025988
   140014f2d:	jmp    0x140014f3d
   140014f2f:	mov    rax,QWORD PTR [rip+0x10a52]        # 0x140025988
   140014f36:	mov    r11,QWORD PTR [rip+0x10a53]        # 0x140025990
   140014f3d:	cmp    rax,rdi
   140014f40:	je     0x140014fa4
   140014f42:	cmp    r11,rdi
   140014f45:	je     0x140014fa4
   140014f47:	mov    rcx,rax
   140014f4a:	call   QWORD PTR [rip+0x5190]        # 0x14001a0e0
   140014f50:	mov    rcx,QWORD PTR [rip+0x10a39]        # 0x140025990
   140014f57:	mov    rsi,rax
   140014f5a:	call   QWORD PTR [rip+0x5180]        # 0x14001a0e0
   140014f60:	mov    r12,rax
   140014f63:	test   rsi,rsi
   140014f66:	je     0x140014fa4
   140014f68:	test   rax,rax
   140014f6b:	je     0x140014fa4
   140014f6d:	call   rsi
   140014f6f:	test   rax,rax
   140014f72:	je     0x140014f9e
   140014f74:	lea    rcx,[rsp+0x30]
   140014f79:	mov    r9d,0xc
   140014f7f:	lea    r8,[rsp+0x38]
   140014f84:	mov    QWORD PTR [rsp+0x20],rcx
   140014f89:	lea    edx,[r9-0xb]
   140014f8d:	mov    rcx,rax
   140014f90:	call   r12
   140014f93:	test   eax,eax
   140014f95:	je     0x140014f9e
   140014f97:	test   BYTE PTR [rsp+0x40],0x1
   140014f9c:	jne    0x140014fa4
   140014f9e:	bts    ebp,0x15
   140014fa2:	jmp    0x140014fe4
   140014fa4:	mov    rcx,QWORD PTR [rip+0x109cd]        # 0x140025978
   140014fab:	cmp    rcx,rdi
   140014fae:	je     0x140014fe4
   140014fb0:	call   QWORD PTR [rip+0x512a]        # 0x14001a0e0
   140014fb6:	test   rax,rax
   140014fb9:	je     0x140014fe4
   140014fbb:	call   rax
   140014fbd:	mov    rbx,rax
   140014fc0:	test   rax,rax
   140014fc3:	je     0x140014fe4
   140014fc5:	mov    rcx,QWORD PTR [rip+0x109b4]        # 0x140025980
   140014fcc:	cmp    rcx,rdi
   140014fcf:	je     0x140014fe4
   140014fd1:	call   QWORD PTR [rip+0x5109]        # 0x14001a0e0
   140014fd7:	test   rax,rax
   140014fda:	je     0x140014fe4
   140014fdc:	mov    rcx,rbx
   140014fdf:	call   rax
   140014fe1:	mov    rbx,rax
   140014fe4:	mov    rcx,QWORD PTR [rip+0x10985]        # 0x140025970
   140014feb:	call   QWORD PTR [rip+0x50ef]        # 0x14001a0e0
   140014ff1:	test   rax,rax
   140014ff4:	je     0x140015006
   140014ff6:	mov    r9d,ebp
   140014ff9:	mov    r8,r14
   140014ffc:	mov    rdx,r13
   140014fff:	mov    rcx,rbx
   140015002:	call   rax
   140015004:	jmp    0x140015008
   140015006:	xor    eax,eax
   140015008:	mov    rcx,QWORD PTR [rsp+0x48]
   14001500d:	xor    rcx,rsp
   140015010:	call   0x14000a820
   140015015:	add    rsp,0x50
   140015019:	pop    r14
   14001501b:	pop    r13
   14001501d:	pop    r12
   14001501f:	pop    rdi
   140015020:	pop    rsi
   140015021:	pop    rbp
   140015022:	pop    rbx
   140015023:	ret    
   140015024:	rex push rbx
   140015026:	sub    rsp,0x20
   14001502a:	xor    r10d,r10d
   14001502d:	mov    r9,rcx
   140015030:	test   rcx,rcx
   140015033:	je     0x140015043
   140015035:	test   rdx,rdx
   140015038:	je     0x140015043
   14001503a:	test   r8,r8
   14001503d:	jne    0x14001505c
   14001503f:	mov    WORD PTR [rcx],r10w
   140015043:	call   0x14000bdc0
   140015048:	mov    ebx,0x16
   14001504d:	mov    DWORD PTR [rax],ebx
   14001504f:	call   0x14000d01c
   140015054:	mov    eax,ebx
   140015056:	add    rsp,0x20
   14001505a:	pop    rbx
   14001505b:	ret    
   14001505c:	cmp    WORD PTR [rcx],r10w
   140015060:	je     0x14001506b
   140015062:	add    rcx,0x2
   140015066:	dec    rdx
   140015069:	jne    0x14001505c
   14001506b:	test   rdx,rdx
   14001506e:	jne    0x140015076
   140015070:	mov    WORD PTR [r9],r10w
   140015074:	jmp    0x140015043
   140015076:	sub    rcx,r8
   140015079:	movzx  eax,WORD PTR [r8]
   14001507d:	mov    WORD PTR [rcx+r8*1],ax
   140015082:	add    r8,0x2
   140015086:	test   ax,ax
   140015089:	je     0x140015090
   14001508b:	dec    rdx
   14001508e:	jne    0x140015079
   140015090:	test   rdx,rdx
   140015093:	jne    0x1400150a5
   140015095:	mov    WORD PTR [r9],r10w
   140015099:	call   0x14000bdc0
   14001509e:	mov    ebx,0x22
   1400150a3:	jmp    0x14001504d
   1400150a5:	xor    eax,eax
   1400150a7:	jmp    0x140015056
   1400150a9:	int3   
   1400150aa:	int3   
   1400150ab:	int3   
   1400150ac:	rex push rbx
   1400150ae:	sub    rsp,0x20
   1400150b2:	xor    ebx,ebx
   1400150b4:	mov    r10,r8
   1400150b7:	test   r9,r9
   1400150ba:	jne    0x1400150ca
   1400150bc:	test   rcx,rcx
   1400150bf:	jne    0x1400150cf
   1400150c1:	test   rdx,rdx
   1400150c4:	jne    0x1400150e6
   1400150c6:	xor    eax,eax
   1400150c8:	jmp    0x1400150f9
   1400150ca:	test   rcx,rcx
   1400150cd:	je     0x1400150e6
   1400150cf:	test   rdx,rdx
   1400150d2:	je     0x1400150e6
   1400150d4:	test   r9,r9
   1400150d7:	jne    0x1400150de
   1400150d9:	mov    WORD PTR [rcx],bx
   1400150dc:	jmp    0x1400150c6
   1400150de:	test   r8,r8
   1400150e1:	jne    0x1400150ff
   1400150e3:	mov    WORD PTR [rcx],bx
   1400150e6:	call   0x14000bdc0
   1400150eb:	mov    ebx,0x16
   1400150f0:	mov    DWORD PTR [rax],ebx
   1400150f2:	call   0x14000d01c
   1400150f7:	mov    eax,ebx
   1400150f9:	add    rsp,0x20
   1400150fd:	pop    rbx
   1400150fe:	ret    
   1400150ff:	mov    r11,rcx
   140015102:	mov    r8,rdx
   140015105:	cmp    r9,0xffffffffffffffff
   140015109:	jne    0x140015127
   14001510b:	sub    r11,r10
   14001510e:	movzx  eax,WORD PTR [r10]
   140015112:	mov    WORD PTR [r11+r10*1],ax
   140015117:	add    r10,0x2
   14001511b:	test   ax,ax
   14001511e:	je     0x14001514f
   140015120:	dec    r8
   140015123:	jne    0x14001510e
   140015125:	jmp    0x14001514f
   140015127:	sub    r10,rcx
   14001512a:	movzx  eax,WORD PTR [r10+r11*1]
   14001512f:	mov    WORD PTR [r11],ax
   140015133:	add    r11,0x2
   140015137:	test   ax,ax
   14001513a:	je     0x140015146
   14001513c:	dec    r8
   14001513f:	je     0x140015146
   140015141:	dec    r9
   140015144:	jne    0x14001512a
   140015146:	test   r9,r9
   140015149:	jne    0x14001514f
   14001514b:	mov    WORD PTR [r11],bx
   14001514f:	test   r8,r8
   140015152:	jne    0x1400150c6
   140015158:	cmp    r9,0xffffffffffffffff
   14001515c:	jne    0x140015169
   14001515e:	mov    WORD PTR [rcx+rdx*2-0x2],bx
   140015163:	lea    eax,[r8+0x50]
   140015167:	jmp    0x1400150f9
   140015169:	mov    WORD PTR [rcx],bx
   14001516c:	call   0x14000bdc0
   140015171:	mov    ebx,0x22
   140015176:	jmp    0x1400150f0
   14001517b:	int3   
   14001517c:	rex push rbx
   14001517e:	sub    rsp,0x20
   140015182:	xor    r10d,r10d
   140015185:	mov    r9,rcx
   140015188:	test   rcx,rcx
   14001518b:	je     0x14001519b
   14001518d:	test   rdx,rdx
   140015190:	je     0x14001519b
   140015192:	test   r8,r8
   140015195:	jne    0x1400151b4
   140015197:	mov    WORD PTR [rcx],r10w
   14001519b:	call   0x14000bdc0
   1400151a0:	mov    ebx,0x16
   1400151a5:	mov    DWORD PTR [rax],ebx
   1400151a7:	call   0x14000d01c
   1400151ac:	mov    eax,ebx
   1400151ae:	add    rsp,0x20
   1400151b2:	pop    rbx
   1400151b3:	ret    
   1400151b4:	sub    rcx,r8
   1400151b7:	movzx  eax,WORD PTR [r8]
   1400151bb:	mov    WORD PTR [rcx+r8*1],ax
   1400151c0:	add    r8,0x2
   1400151c4:	test   ax,ax
   1400151c7:	je     0x1400151ce
   1400151c9:	dec    rdx
   1400151cc:	jne    0x1400151b7
   1400151ce:	test   rdx,rdx
   1400151d1:	jne    0x1400151e3
   1400151d3:	mov    WORD PTR [r9],r10w
   1400151d7:	call   0x14000bdc0
   1400151dc:	mov    ebx,0x22
   1400151e1:	jmp    0x1400151a5
   1400151e3:	xor    eax,eax
   1400151e5:	jmp    0x1400151ae
   1400151e7:	int3   
   1400151e8:	sub    rsp,0x28
   1400151ec:	test   ecx,ecx
   1400151ee:	js     0x140015210
   1400151f0:	cmp    ecx,0x2
   1400151f3:	jle    0x140015202
   1400151f5:	cmp    ecx,0x3
   1400151f8:	jne    0x140015210
   1400151fa:	mov    eax,DWORD PTR [rip+0xf7f0]        # 0x1400249f0
   140015200:	jmp    0x140015223
   140015202:	mov    eax,DWORD PTR [rip+0xf7e8]        # 0x1400249f0
   140015208:	mov    DWORD PTR [rip+0xf7e2],ecx        # 0x1400249f0
   14001520e:	jmp    0x140015223
   140015210:	call   0x14000bdc0
   140015215:	mov    DWORD PTR [rax],0x16
   14001521b:	call   0x14000d01c
   140015220:	or     eax,0xffffffff
   140015223:	add    rsp,0x28
   140015227:	ret    
   140015228:	sub    rsp,0x28
   14001522c:	cmp    ecx,0xfffffffe
   14001522f:	jne    0x14001523e
   140015231:	call   0x14000bdc0
   140015236:	mov    DWORD PTR [rax],0x9
   14001523c:	jmp    0x140015280
   14001523e:	test   ecx,ecx
   140015240:	js     0x140015270
   140015242:	cmp    ecx,DWORD PTR [rip+0x10824]        # 0x140025a6c
   140015248:	jae    0x140015270
   14001524a:	movsxd rcx,ecx
   14001524d:	lea    rdx,[rip+0x1082c]        # 0x140025a80
   140015254:	mov    rax,rcx
   140015257:	and    ecx,0x1f
   14001525a:	sar    rax,0x5
   14001525e:	imul   rcx,rcx,0x58
   140015262:	mov    rax,QWORD PTR [rdx+rax*8]
   140015266:	movsx  eax,BYTE PTR [rax+rcx*1+0x8]
   14001526b:	and    eax,0x40
   14001526e:	jmp    0x140015282
   140015270:	call   0x14000bdc0
   140015275:	mov    DWORD PTR [rax],0x9
   14001527b:	call   0x14000d01c
   140015280:	xor    eax,eax
   140015282:	add    rsp,0x28
   140015286:	ret    
   140015287:	int3   
   140015288:	rex push rbx
   14001528a:	sub    rsp,0x40
   14001528e:	mov    ebx,ecx
   140015290:	lea    rcx,[rsp+0x20]
   140015295:	call   0x14000c6f4
   14001529a:	mov    rax,QWORD PTR [rsp+0x20]
   14001529f:	movzx  r11d,bl
   1400152a3:	mov    rcx,QWORD PTR [rax+0x140]
   1400152aa:	movzx  eax,WORD PTR [rcx+r11*2]
   1400152af:	and    eax,0x8000
   1400152b4:	cmp    BYTE PTR [rsp+0x38],0x0
   1400152b9:	je     0x1400152c7
   1400152bb:	mov    rcx,QWORD PTR [rsp+0x30]
   1400152c0:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400152c7:	add    rsp,0x40
   1400152cb:	pop    rbx
   1400152cc:	ret    
   1400152cd:	int3   
   1400152ce:	int3   
   1400152cf:	int3   
   1400152d0:	rex push rbx
   1400152d2:	sub    rsp,0x40
   1400152d6:	mov    ebx,ecx
   1400152d8:	lea    rcx,[rsp+0x20]
   1400152dd:	xor    edx,edx
   1400152df:	call   0x14000c6f4
   1400152e4:	mov    rax,QWORD PTR [rsp+0x20]
   1400152e9:	movzx  r11d,bl
   1400152ed:	mov    rcx,QWORD PTR [rax+0x140]
   1400152f4:	movzx  eax,WORD PTR [rcx+r11*2]
   1400152f9:	and    eax,0x8000
   1400152fe:	cmp    BYTE PTR [rsp+0x38],0x0
   140015303:	je     0x140015311
   140015305:	mov    rcx,QWORD PTR [rsp+0x30]
   14001530a:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140015311:	add    rsp,0x40
   140015315:	pop    rbx
   140015316:	ret    
   140015317:	int3   
   140015318:	mov    QWORD PTR [rsp+0x8],rbx
   14001531d:	mov    WORD PTR [rsp+0x20],r9w
   140015323:	push   rbp
   140015324:	push   rsi
   140015325:	push   rdi
   140015326:	mov    rbp,rsp
   140015329:	sub    rsp,0x60
   14001532d:	mov    rdi,r8
   140015330:	mov    rsi,rdx
   140015333:	mov    rbx,rcx
   140015336:	test   rdx,rdx
   140015339:	jne    0x14001534e
   14001533b:	test   r8,r8
   14001533e:	je     0x14001534e
   140015340:	test   rcx,rcx
   140015343:	je     0x140015347
   140015345:	and    DWORD PTR [rcx],edx
   140015347:	xor    eax,eax
   140015349:	jmp    0x1400153d8
   14001534e:	test   rcx,rcx
   140015351:	je     0x140015356
   140015353:	or     DWORD PTR [rcx],0xffffffff
   140015356:	cmp    r8,0x7fffffff
   14001535d:	jbe    0x140015374
   14001535f:	call   0x14000bdc0
   140015364:	mov    ebx,0x16
   140015369:	mov    DWORD PTR [rax],ebx
   14001536b:	call   0x14000d01c
   140015370:	mov    eax,ebx
   140015372:	jmp    0x1400153d8
   140015374:	mov    rdx,QWORD PTR [rbp+0x40]
   140015378:	lea    rcx,[rbp-0x20]
   14001537c:	call   0x14000c6f4
   140015381:	mov    r11,QWORD PTR [rbp-0x20]
   140015385:	cmp    DWORD PTR [r11+0x14],0x0
   14001538a:	jne    0x140015442
   140015390:	movzx  eax,WORD PTR [rbp+0x38]
   140015394:	mov    ecx,0xff
   140015399:	cmp    ax,cx
   14001539c:	jbe    0x1400153e8
   14001539e:	test   rsi,rsi
   1400153a1:	je     0x1400153b5
   1400153a3:	test   rdi,rdi
   1400153a6:	je     0x1400153b5
   1400153a8:	mov    r8,rdi
   1400153ab:	xor    edx,edx
   1400153ad:	mov    rcx,rsi
   1400153b0:	call   0x14000a530
   1400153b5:	call   0x14000bdc0
   1400153ba:	mov    DWORD PTR [rax],0x2a
   1400153c0:	call   0x14000bdc0
   1400153c5:	cmp    BYTE PTR [rbp-0x8],0x0
   1400153c9:	mov    eax,DWORD PTR [rax]
   1400153cb:	je     0x1400153d8
   1400153cd:	mov    rcx,QWORD PTR [rbp-0x10]
   1400153d1:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400153d8:	mov    rbx,QWORD PTR [rsp+0x80]
   1400153e0:	add    rsp,0x60
   1400153e4:	pop    rdi
   1400153e5:	pop    rsi
   1400153e6:	pop    rbp
   1400153e7:	ret    
   1400153e8:	test   rsi,rsi
   1400153eb:	je     0x14001541d
   1400153ed:	test   rdi,rdi
   1400153f0:	jne    0x14001541b
   1400153f2:	call   0x14000bdc0
   1400153f7:	lea    ebx,[rdi+0x22]
   1400153fa:	mov    DWORD PTR [rax],ebx
   1400153fc:	call   0x14000d01c
   140015401:	cmp    BYTE PTR [rbp-0x8],dil
   140015405:	je     0x140015370
   14001540b:	mov    rcx,QWORD PTR [rbp-0x10]
   14001540f:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140015416:	jmp    0x140015370
   14001541b:	mov    BYTE PTR [rsi],al
   14001541d:	test   rbx,rbx
   140015420:	je     0x140015428
   140015422:	mov    DWORD PTR [rbx],0x1
   140015428:	cmp    BYTE PTR [rbp-0x8],0x0
   14001542c:	je     0x140015347
   140015432:	mov    rax,QWORD PTR [rbp-0x10]
   140015436:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001543d:	jmp    0x140015347
   140015442:	and    DWORD PTR [rbp+0x28],0x0
   140015446:	mov    ecx,DWORD PTR [r11+0x4]
   14001544a:	lea    rax,[rbp+0x28]
   14001544e:	mov    QWORD PTR [rsp+0x38],rax
   140015453:	and    QWORD PTR [rsp+0x30],0x0
   140015459:	lea    r8,[rbp+0x38]
   14001545d:	mov    r9d,0x1
   140015463:	xor    edx,edx
   140015465:	mov    DWORD PTR [rsp+0x28],edi
   140015469:	mov    QWORD PTR [rsp+0x20],rsi
   14001546e:	call   QWORD PTR [rip+0x4d8c]        # 0x14001a200
   140015474:	test   eax,eax
   140015476:	je     0x14001548b
   140015478:	cmp    DWORD PTR [rbp+0x28],0x0
   14001547c:	jne    0x1400153b5
   140015482:	test   rbx,rbx
   140015485:	je     0x140015428
   140015487:	mov    DWORD PTR [rbx],eax
   140015489:	jmp    0x140015428
   14001548b:	call   QWORD PTR [rip+0x4bdf]        # 0x14001a070
   140015491:	cmp    eax,0x7a
   140015494:	jne    0x1400153b5
   14001549a:	test   rsi,rsi
   14001549d:	je     0x1400154b1
   14001549f:	test   rdi,rdi
   1400154a2:	je     0x1400154b1
   1400154a4:	mov    r8,rdi
   1400154a7:	xor    edx,edx
   1400154a9:	mov    rcx,rsi
   1400154ac:	call   0x14000a530
   1400154b1:	call   0x14000bdc0
   1400154b6:	mov    ebx,0x22
   1400154bb:	mov    DWORD PTR [rax],ebx
   1400154bd:	call   0x14000d01c
   1400154c2:	cmp    BYTE PTR [rbp-0x8],0x0
   1400154c6:	je     0x140015370
   1400154cc:	mov    rax,QWORD PTR [rbp-0x10]
   1400154d0:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400154d7:	jmp    0x140015370
   1400154dc:	sub    rsp,0x38
   1400154e0:	and    QWORD PTR [rsp+0x20],0x0
   1400154e6:	call   0x140015318
   1400154eb:	add    rsp,0x38
   1400154ef:	ret    
   1400154f0:	rex push rbp
   1400154f2:	push   rbx
   1400154f3:	push   rsi
   1400154f4:	push   rdi
   1400154f5:	push   r12
   1400154f7:	push   r13
   1400154f9:	push   r14
   1400154fb:	push   r15
   1400154fd:	sub    rsp,0x68
   140015501:	lea    rbp,[rsp+0x30]
   140015506:	mov    rax,QWORD PTR [rip+0xdbb3]        # 0x1400230c0
   14001550d:	xor    rax,rbp
   140015510:	mov    QWORD PTR [rbp+0x28],rax
   140015514:	mov    edi,DWORD PTR [rbp+0xa0]
   14001551a:	mov    r12,QWORD PTR [rbp+0xa8]
   140015521:	xor    ebx,ebx
   140015523:	mov    DWORD PTR [rbp+0x4],r8d
   140015527:	mov    r13,r9
   14001552a:	mov    DWORD PTR [rbp+0x0],edx
   14001552d:	mov    r8,rcx
   140015530:	mov    QWORD PTR [rbp+0x8],r12
   140015534:	mov    r15d,0x1
   14001553a:	test   edi,edi
   14001553c:	jle    0x140015581
   14001553e:	mov    edx,edi
   140015540:	mov    rax,r9
   140015543:	sub    edx,r15d
   140015546:	or     ecx,0xffffffff
   140015549:	cmp    BYTE PTR [rax],bl
   14001554b:	je     0x140015556
   14001554d:	add    rax,r15
   140015550:	test   edx,edx
   140015552:	jne    0x140015543
   140015554:	mov    edx,ecx
   140015556:	mov    eax,ecx
   140015558:	sub    eax,edx
   14001555a:	add    edi,eax
   14001555c:	mov    esi,DWORD PTR [rbp+0xb0]
   140015562:	test   esi,esi
   140015564:	jle    0x14001558f
   140015566:	mov    eax,esi
   140015568:	mov    rdx,r12
   14001556b:	sub    eax,r15d
   14001556e:	cmp    BYTE PTR [rdx],bl
   140015570:	je     0x14001557b
   140015572:	add    rdx,r15
   140015575:	test   eax,eax
   140015577:	jne    0x14001556b
   140015579:	mov    eax,ecx
   14001557b:	sub    ecx,eax
   14001557d:	add    esi,ecx
   14001557f:	jmp    0x140015593
   140015581:	or     ecx,0xffffffff
   140015584:	cmp    edi,ecx
   140015586:	jge    0x14001555c
   140015588:	xor    eax,eax
   14001558a:	jmp    0x140015817
   14001558f:	cmp    esi,ecx
   140015591:	jl     0x140015588
   140015593:	mov    r14d,DWORD PTR [rbp+0xb8]
   14001559a:	test   r14d,r14d
   14001559d:	jne    0x1400155a6
   14001559f:	mov    rax,QWORD PTR [r8]
   1400155a2:	mov    r14d,DWORD PTR [rax+0x4]
   1400155a6:	test   edi,edi
   1400155a8:	je     0x1400155b2
   1400155aa:	test   esi,esi
   1400155ac:	jne    0x14001564b
   1400155b2:	cmp    edi,esi
   1400155b4:	jne    0x1400155c0
   1400155b6:	mov    eax,0x2
   1400155bb:	jmp    0x140015817
   1400155c0:	cmp    esi,r15d
   1400155c3:	jle    0x1400155cd
   1400155c5:	mov    eax,r15d
   1400155c8:	jmp    0x140015817
   1400155cd:	cmp    edi,r15d
   1400155d0:	jle    0x1400155dc
   1400155d2:	mov    eax,0x3
   1400155d7:	jmp    0x140015817
   1400155dc:	lea    rdx,[rbp+0x10]
   1400155e0:	mov    ecx,r14d
   1400155e3:	call   QWORD PTR [rip+0x4cd7]        # 0x14001a2c0
   1400155e9:	test   eax,eax
   1400155eb:	je     0x140015588
   1400155ed:	test   edi,edi
   1400155ef:	jle    0x14001561a
   1400155f1:	cmp    DWORD PTR [rbp+0x10],0x2
   1400155f5:	jb     0x1400155d2
   1400155f7:	cmp    BYTE PTR [rbp+0x16],bl
   1400155fa:	lea    rax,[rbp+0x16]
   1400155fe:	je     0x1400155d2
   140015600:	cmp    BYTE PTR [rax+0x1],bl
   140015603:	je     0x1400155d2
   140015605:	mov    cl,BYTE PTR [r13+0x0]
   140015609:	cmp    cl,BYTE PTR [rax]
   14001560b:	jb     0x140015612
   14001560d:	cmp    cl,BYTE PTR [rax+0x1]
   140015610:	jbe    0x1400155b6
   140015612:	add    rax,0x2
   140015616:	cmp    BYTE PTR [rax],bl
   140015618:	jmp    0x1400155fe
   14001561a:	test   esi,esi
   14001561c:	jle    0x14001564b
   14001561e:	cmp    DWORD PTR [rbp+0x10],0x2
   140015622:	jb     0x1400155c5
   140015624:	cmp    BYTE PTR [rbp+0x16],bl
   140015627:	lea    rax,[rbp+0x16]
   14001562b:	je     0x1400155c5
   14001562d:	cmp    BYTE PTR [rax+0x1],bl
   140015630:	je     0x1400155c5
   140015632:	mov    cl,BYTE PTR [r12]
   140015636:	cmp    cl,BYTE PTR [rax]
   140015638:	jb     0x140015643
   14001563a:	cmp    cl,BYTE PTR [rax+0x1]
   14001563d:	jbe    0x1400155b6
   140015643:	add    rax,0x2
   140015647:	cmp    BYTE PTR [rax],bl
   140015649:	jmp    0x14001562b
   14001564b:	mov    r9d,edi
   14001564e:	mov    r8,r13
   140015651:	mov    edx,0x9
   140015656:	mov    ecx,r14d
   140015659:	mov    DWORD PTR [rsp+0x28],ebx
   14001565d:	mov    QWORD PTR [rsp+0x20],rbx
   140015662:	call   QWORD PTR [rip+0x4ac8]        # 0x14001a130
   140015668:	movsxd r15,eax
   14001566b:	test   eax,eax
   14001566d:	je     0x140015588
   140015673:	movabs r8,0xffffffffffffff0
   14001567d:	jle    0x1400156e5
   14001567f:	xor    edx,edx
   140015681:	lea    rax,[rdx-0x20]
   140015685:	div    r15
   140015688:	cmp    rax,0x2
   14001568c:	jb     0x1400156e5
   14001568e:	lea    rcx,[r15+r15*1+0x10]
   140015693:	cmp    rcx,0x400
   14001569a:	ja     0x1400156cc
   14001569c:	lea    rax,[rcx+0xf]
   1400156a0:	cmp    rax,rcx
   1400156a3:	ja     0x1400156a8
   1400156a5:	mov    rax,r8
   1400156a8:	and    rax,0xfffffffffffffff0
   1400156ac:	call   0x140016e80
   1400156b1:	sub    rsp,rax
   1400156b4:	lea    r12,[rsp+0x30]
   1400156b9:	test   r12,r12
   1400156bc:	je     0x140015588
   1400156c2:	mov    DWORD PTR [r12],0xcccc
   1400156ca:	jmp    0x1400156df
   1400156cc:	call   0x14000b2d4
   1400156d1:	mov    r12,rax
   1400156d4:	test   rax,rax
   1400156d7:	je     0x1400156e8
   1400156d9:	mov    DWORD PTR [rax],0xdddd
   1400156df:	add    r12,0x10
   1400156e3:	jmp    0x1400156e8
   1400156e5:	mov    r12,rbx
   1400156e8:	test   r12,r12
   1400156eb:	je     0x140015588
   1400156f1:	mov    r9d,edi
   1400156f4:	mov    r8,r13
   1400156f7:	mov    edx,0x1
   1400156fc:	mov    ecx,r14d
   1400156ff:	mov    DWORD PTR [rsp+0x28],r15d
   140015704:	mov    QWORD PTR [rsp+0x20],r12
   140015709:	call   QWORD PTR [rip+0x4a21]        # 0x14001a130
   14001570f:	test   eax,eax
   140015711:	je     0x140015803
   140015717:	mov    r8,QWORD PTR [rbp+0x8]
   14001571b:	mov    r9d,esi
   14001571e:	mov    edx,0x9
   140015723:	mov    ecx,r14d
   140015726:	mov    DWORD PTR [rsp+0x28],ebx
   14001572a:	mov    QWORD PTR [rsp+0x20],rbx
   14001572f:	call   QWORD PTR [rip+0x49fb]        # 0x14001a130
   140015735:	movsxd r13,eax
   140015738:	test   eax,eax
   14001573a:	je     0x140015803
   140015740:	jle    0x1400157a9
   140015742:	xor    edx,edx
   140015744:	lea    rax,[rdx-0x20]
   140015748:	div    r13
   14001574b:	cmp    rax,0x2
   14001574f:	jb     0x1400157a9
   140015751:	lea    rcx,[r13+r13*1+0x10]
   140015756:	cmp    rcx,0x400
   14001575d:	ja     0x140015790
   14001575f:	lea    rax,[rcx+0xf]
   140015763:	cmp    rax,rcx
   140015766:	ja     0x140015772
   140015768:	movabs rax,0xffffffffffffff0
   140015772:	and    rax,0xfffffffffffffff0
   140015776:	call   0x140016e80
   14001577b:	sub    rsp,rax
   14001577e:	lea    rdi,[rsp+0x30]
   140015783:	test   rdi,rdi
   140015786:	je     0x140015803
   140015788:	mov    DWORD PTR [rdi],0xcccc
   14001578e:	jmp    0x1400157a3
   140015790:	call   0x14000b2d4
   140015795:	mov    rdi,rax
   140015798:	test   rax,rax
   14001579b:	je     0x1400157ac
   14001579d:	mov    DWORD PTR [rax],0xdddd
   1400157a3:	add    rdi,0x10
   1400157a7:	jmp    0x1400157ac
   1400157a9:	mov    rdi,rbx
   1400157ac:	test   rdi,rdi
   1400157af:	je     0x140015803
   1400157b1:	mov    r8,QWORD PTR [rbp+0x8]
   1400157b5:	mov    r9d,esi
   1400157b8:	mov    edx,0x1
   1400157bd:	mov    ecx,r14d
   1400157c0:	mov    DWORD PTR [rsp+0x28],r13d
   1400157c5:	mov    QWORD PTR [rsp+0x20],rdi
   1400157ca:	call   QWORD PTR [rip+0x4960]        # 0x14001a130
   1400157d0:	test   eax,eax
   1400157d2:	je     0x1400157f2
   1400157d4:	mov    edx,DWORD PTR [rbp+0x4]
   1400157d7:	mov    ecx,DWORD PTR [rbp+0x0]
   1400157da:	mov    r9d,r15d
   1400157dd:	mov    r8,r12
   1400157e0:	mov    DWORD PTR [rsp+0x28],r13d
   1400157e5:	mov    QWORD PTR [rsp+0x20],rdi
   1400157ea:	call   QWORD PTR [rip+0x4af8]        # 0x14001a2e8
   1400157f0:	mov    ebx,eax
   1400157f2:	lea    rcx,[rdi-0x10]
   1400157f6:	cmp    DWORD PTR [rcx],0xdddd
   1400157fc:	jne    0x140015803
   1400157fe:	call   0x14000b460
   140015803:	lea    rcx,[r12-0x10]
   140015808:	cmp    DWORD PTR [rcx],0xdddd
   14001580e:	jne    0x140015815
   140015810:	call   0x14000b460
   140015815:	mov    eax,ebx
   140015817:	mov    rcx,QWORD PTR [rbp+0x28]
   14001581b:	xor    rcx,rbp
   14001581e:	call   0x14000a820
   140015823:	lea    rsp,[rbp+0x38]
   140015827:	pop    r15
   140015829:	pop    r14
   14001582b:	pop    r13
   14001582d:	pop    r12
   14001582f:	pop    rdi
   140015830:	pop    rsi
   140015831:	pop    rbx
   140015832:	pop    rbp
   140015833:	ret    
   140015834:	mov    QWORD PTR [rsp+0x8],rbx
   140015839:	mov    QWORD PTR [rsp+0x10],rsi
   14001583e:	push   rdi
   14001583f:	sub    rsp,0x60
   140015843:	mov    esi,edx
   140015845:	mov    rdx,rcx
   140015848:	lea    rcx,[rsp+0x40]
   14001584d:	mov    rbx,r9
   140015850:	mov    edi,r8d
   140015853:	call   0x14000c6f4
   140015858:	mov    r11d,DWORD PTR [rsp+0xa8]
   140015860:	mov    eax,DWORD PTR [rsp+0xa0]
   140015867:	lea    rcx,[rsp+0x40]
   14001586c:	mov    DWORD PTR [rsp+0x38],r11d
   140015871:	mov    DWORD PTR [rsp+0x30],eax
   140015875:	mov    rax,QWORD PTR [rsp+0x98]
   14001587d:	mov    QWORD PTR [rsp+0x28],rax
   140015882:	mov    eax,DWORD PTR [rsp+0x90]
   140015889:	mov    r9,rbx
   14001588c:	mov    r8d,edi
   14001588f:	mov    edx,esi
   140015891:	mov    DWORD PTR [rsp+0x20],eax
   140015895:	call   0x1400154f0
   14001589a:	cmp    BYTE PTR [rsp+0x58],0x0
   14001589f:	je     0x1400158ad
   1400158a1:	mov    rcx,QWORD PTR [rsp+0x50]
   1400158a6:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400158ad:	mov    rbx,QWORD PTR [rsp+0x70]
   1400158b2:	mov    rsi,QWORD PTR [rsp+0x78]
   1400158b7:	add    rsp,0x60
   1400158bb:	pop    rdi
   1400158bc:	ret    
   1400158bd:	int3   
   1400158be:	int3   
   1400158bf:	int3   
   1400158c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400158c5:	mov    QWORD PTR [rsp+0x10],rsi
   1400158ca:	mov    QWORD PTR [rsp+0x18],rdi
   1400158cf:	push   rbp
   1400158d0:	mov    rbp,rsp
   1400158d3:	sub    rsp,0x60
   1400158d7:	mov    rsi,rcx
   1400158da:	mov    rdi,rdx
   1400158dd:	lea    rcx,[rbp-0x20]
   1400158e1:	mov    rdx,r9
   1400158e4:	mov    rbx,r8
   1400158e7:	call   0x14000c6f4
   1400158ec:	test   rbx,rbx
   1400158ef:	jne    0x140015908
   1400158f1:	cmp    BYTE PTR [rbp-0x8],bl
   1400158f4:	je     0x140015901
   1400158f6:	mov    rax,QWORD PTR [rbp-0x10]
   1400158fa:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140015901:	xor    eax,eax
   140015903:	jmp    0x1400159ad
   140015908:	test   rsi,rsi
   14001590b:	jne    0x140015935
   14001590d:	call   0x14000bdc0
   140015912:	mov    DWORD PTR [rax],0x16
   140015918:	call   0x14000d01c
   14001591d:	cmp    BYTE PTR [rbp-0x8],0x0
   140015921:	je     0x14001592e
   140015923:	mov    rax,QWORD PTR [rbp-0x10]
   140015927:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001592e:	mov    eax,0x7fffffff
   140015933:	jmp    0x1400159ad
   140015935:	test   rdi,rdi
   140015938:	je     0x14001590d
   14001593a:	cmp    rbx,0x7fffffff
   140015941:	ja     0x14001590d
   140015943:	mov    rax,QWORD PTR [rbp-0x20]
   140015947:	mov    edx,DWORD PTR [rax+0x10]
   14001594a:	test   edx,edx
   14001594c:	jne    0x140015962
   14001594e:	lea    r9,[rbp-0x20]
   140015952:	mov    r8,rbx
   140015955:	mov    rdx,rdi
   140015958:	mov    rcx,rsi
   14001595b:	call   0x1400193d8
   140015960:	jmp    0x14001599c
   140015962:	mov    eax,DWORD PTR [rax+0x8]
   140015965:	lea    rcx,[rbp-0x20]
   140015969:	mov    r9,rsi
   14001596c:	mov    DWORD PTR [rsp+0x38],eax
   140015970:	mov    DWORD PTR [rsp+0x30],ebx
   140015974:	mov    r8d,0x1001
   14001597a:	mov    QWORD PTR [rsp+0x28],rdi
   14001597f:	mov    DWORD PTR [rsp+0x20],ebx
   140015983:	call   0x140015834
   140015988:	test   eax,eax
   14001598a:	jne    0x140015999
   14001598c:	call   0x14000bdc0
   140015991:	mov    DWORD PTR [rax],0x16
   140015997:	jmp    0x14001591d
   140015999:	add    eax,0xfffffffe
   14001599c:	cmp    BYTE PTR [rbp-0x8],0x0
   1400159a0:	je     0x1400159ad
   1400159a2:	mov    rcx,QWORD PTR [rbp-0x10]
   1400159a6:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400159ad:	lea    r11,[rsp+0x60]
   1400159b2:	mov    rbx,QWORD PTR [r11+0x10]
   1400159b6:	mov    rsi,QWORD PTR [r11+0x18]
   1400159ba:	mov    rdi,QWORD PTR [r11+0x20]
   1400159be:	mov    rsp,r11
   1400159c1:	pop    rbp
   1400159c2:	ret    
   1400159c3:	int3   
   1400159c4:	mov    QWORD PTR [rsp+0x8],rbx
   1400159c9:	push   rdi
   1400159ca:	sub    rsp,0x20
   1400159ce:	mov    rbx,r8
   1400159d1:	mov    rdi,rdx
   1400159d4:	test   rcx,rcx
   1400159d7:	je     0x1400159f6
   1400159d9:	xor    edx,edx
   1400159db:	lea    rax,[rdx-0x20]
   1400159df:	div    rcx
   1400159e2:	cmp    rax,rdi
   1400159e5:	jae    0x1400159f6
   1400159e7:	call   0x14000bdc0
   1400159ec:	mov    DWORD PTR [rax],0xc
   1400159f2:	xor    eax,eax
   1400159f4:	jmp    0x140015a53
   1400159f6:	imul   rdi,rcx
   1400159fa:	mov    eax,0x1
   1400159ff:	test   rdi,rdi
   140015a02:	cmove  rdi,rax
   140015a06:	xor    eax,eax
   140015a08:	cmp    rdi,0xffffffffffffffe0
   140015a0c:	ja     0x140015a26
   140015a0e:	mov    rcx,QWORD PTR [rip+0xf9b3]        # 0x1400253c8
   140015a15:	lea    edx,[rax+0x8]
   140015a18:	mov    r8,rdi
   140015a1b:	call   QWORD PTR [rip+0x46d7]        # 0x14001a0f8
   140015a21:	test   rax,rax
   140015a24:	jne    0x140015a53
   140015a26:	cmp    DWORD PTR [rip+0xff17],0x0        # 0x140025944
   140015a2d:	je     0x140015a48
   140015a2f:	mov    rcx,rdi
   140015a32:	call   0x14000d044
   140015a37:	test   eax,eax
   140015a39:	jne    0x140015a06
   140015a3b:	test   rbx,rbx
   140015a3e:	je     0x1400159f2
   140015a40:	mov    DWORD PTR [rbx],0xc
   140015a46:	jmp    0x1400159f2
   140015a48:	test   rbx,rbx
   140015a4b:	je     0x140015a53
   140015a4d:	mov    DWORD PTR [rbx],0xc
   140015a53:	mov    rbx,QWORD PTR [rsp+0x30]
   140015a58:	add    rsp,0x20
   140015a5c:	pop    rdi
   140015a5d:	ret    
   140015a5e:	int3   
   140015a5f:	int3   
   140015a60:	mov    QWORD PTR [rsp+0x8],rbx
   140015a65:	mov    QWORD PTR [rsp+0x10],rsi
   140015a6a:	push   rdi
   140015a6b:	sub    rsp,0x40
   140015a6f:	mov    ebx,edx
   140015a71:	mov    rdx,rcx
   140015a74:	lea    rcx,[rsp+0x20]
   140015a79:	mov    edi,r9d
   140015a7c:	mov    esi,r8d
   140015a7f:	call   0x14000c6f4
   140015a84:	mov    rax,QWORD PTR [rsp+0x28]
   140015a89:	movzx  r11d,bl
   140015a8d:	test   BYTE PTR [r11+rax*1+0x1d],dil
   140015a92:	jne    0x140015ab3
   140015a94:	test   esi,esi
   140015a96:	je     0x140015aad
   140015a98:	mov    rax,QWORD PTR [rsp+0x20]
   140015a9d:	mov    rcx,QWORD PTR [rax+0x140]
   140015aa4:	movzx  eax,WORD PTR [rcx+r11*2]
   140015aa9:	and    eax,esi
   140015aab:	jmp    0x140015aaf
   140015aad:	xor    eax,eax
   140015aaf:	test   eax,eax
   140015ab1:	je     0x140015ab8
   140015ab3:	mov    eax,0x1
   140015ab8:	cmp    BYTE PTR [rsp+0x38],0x0
   140015abd:	je     0x140015acb
   140015abf:	mov    rcx,QWORD PTR [rsp+0x30]
   140015ac4:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140015acb:	mov    rbx,QWORD PTR [rsp+0x50]
   140015ad0:	mov    rsi,QWORD PTR [rsp+0x58]
   140015ad5:	add    rsp,0x40
   140015ad9:	pop    rdi
   140015ada:	ret    
   140015adb:	int3   
   140015adc:	mov    edx,ecx
   140015ade:	mov    r9d,0x4
   140015ae4:	xor    r8d,r8d
   140015ae7:	xor    ecx,ecx
   140015ae9:	jmp    0x140015a60
   140015aee:	int3   
   140015aef:	int3   
   140015af0:	mov    QWORD PTR [rsp+0x8],rbx
   140015af5:	push   rdi
   140015af6:	sub    rsp,0x20
   140015afa:	test   BYTE PTR [rdx+0x18],0x40
   140015afe:	mov    rbx,rdx
   140015b01:	mov    edi,ecx
   140015b03:	jne    0x140015b93
   140015b09:	mov    rcx,rdx
   140015b0c:	call   0x140010a7c
   140015b11:	lea    rdx,[rip+0xdd98]        # 0x1400238b0
   140015b18:	lea    r8,[rip+0xff61]        # 0x140025a80
   140015b1f:	movsxd r11,eax
   140015b22:	cmp    r11d,0xffffffff
   140015b26:	je     0x140015b45
   140015b28:	cmp    r11d,0xfffffffe
   140015b2c:	je     0x140015b45
   140015b2e:	mov    rcx,r11
   140015b31:	mov    rax,r11
   140015b34:	and    ecx,0x1f
   140015b37:	sar    rax,0x5
   140015b3b:	imul   rcx,rcx,0x58
   140015b3f:	add    rcx,QWORD PTR [r8+rax*8]
   140015b43:	jmp    0x140015b48
   140015b45:	mov    rcx,rdx
   140015b48:	test   BYTE PTR [rcx+0x38],0x7f
   140015b4c:	jne    0x140015b75
   140015b4e:	cmp    r11d,0xffffffff
   140015b52:	je     0x140015b6f
   140015b54:	cmp    r11d,0xfffffffe
   140015b58:	je     0x140015b6f
   140015b5a:	mov    rdx,r11
   140015b5d:	mov    rax,r11
   140015b60:	and    edx,0x1f
   140015b63:	sar    rax,0x5
   140015b67:	imul   rdx,rdx,0x58
   140015b6b:	add    rdx,QWORD PTR [r8+rax*8]
   140015b6f:	test   BYTE PTR [rdx+0x38],0x80
   140015b73:	je     0x140015b93
   140015b75:	call   0x14000bdc0
   140015b7a:	mov    DWORD PTR [rax],0x16
   140015b80:	call   0x14000d01c
   140015b85:	or     eax,0xffffffff
   140015b88:	mov    rbx,QWORD PTR [rsp+0x30]
   140015b8d:	add    rsp,0x20
   140015b91:	pop    rdi
   140015b92:	ret    
   140015b93:	cmp    edi,0xffffffff
   140015b96:	je     0x140015b85
   140015b98:	test   BYTE PTR [rbx+0x18],0x1
   140015b9c:	jne    0x140015baa
   140015b9e:	test   BYTE PTR [rbx+0x18],0x80
   140015ba2:	je     0x140015b85
   140015ba4:	test   BYTE PTR [rbx+0x18],0x2
   140015ba8:	jne    0x140015b85
   140015baa:	cmp    QWORD PTR [rbx+0x10],0x0
   140015baf:	jne    0x140015bb9
   140015bb1:	mov    rcx,rbx
   140015bb4:	call   0x140015ef8
   140015bb9:	mov    rax,QWORD PTR [rbx]
   140015bbc:	cmp    rax,QWORD PTR [rbx+0x10]
   140015bc0:	jne    0x140015bce
   140015bc2:	cmp    DWORD PTR [rbx+0x8],0x0
   140015bc6:	jne    0x140015b85
   140015bc8:	inc    rax
   140015bcb:	mov    QWORD PTR [rbx],rax
   140015bce:	dec    QWORD PTR [rbx]
   140015bd1:	test   BYTE PTR [rbx+0x18],0x40
   140015bd5:	mov    rax,QWORD PTR [rbx]
   140015bd8:	je     0x140015be7
   140015bda:	cmp    BYTE PTR [rax],dil
   140015bdd:	je     0x140015bea
   140015bdf:	inc    rax
   140015be2:	mov    QWORD PTR [rbx],rax
   140015be5:	jmp    0x140015b85
   140015be7:	mov    BYTE PTR [rax],dil
   140015bea:	inc    DWORD PTR [rbx+0x8]
   140015bed:	and    DWORD PTR [rbx+0x18],0xffffffef
   140015bf1:	or     DWORD PTR [rbx+0x18],0x1
   140015bf5:	movzx  eax,dil
   140015bf9:	jmp    0x140015b88
   140015bfb:	int3   
   140015bfc:	mov    rax,rsp
   140015bff:	mov    QWORD PTR [rax+0x8],rbx
   140015c03:	mov    QWORD PTR [rax+0x10],rsi
   140015c07:	mov    QWORD PTR [rax+0x18],rdi
   140015c0b:	mov    QWORD PTR [rax+0x20],r12
   140015c0f:	push   rbp
   140015c10:	mov    rbp,rsp
   140015c13:	sub    rsp,0x50
   140015c17:	xor    r12d,r12d
   140015c1a:	mov    rsi,r8
   140015c1d:	mov    rdi,rdx
   140015c20:	mov    rbx,rcx
   140015c23:	test   rdx,rdx
   140015c26:	je     0x140015c3b
   140015c28:	test   r8,r8
   140015c2b:	je     0x140015c3b
   140015c2d:	cmp    BYTE PTR [rdx],r12b
   140015c30:	jne    0x140015c57
   140015c32:	test   rcx,rcx
   140015c35:	je     0x140015c3b
   140015c37:	mov    WORD PTR [rcx],r12w
   140015c3b:	xor    eax,eax
   140015c3d:	mov    rbx,QWORD PTR [rsp+0x60]
   140015c42:	mov    rsi,QWORD PTR [rsp+0x68]
   140015c47:	mov    rdi,QWORD PTR [rsp+0x70]
   140015c4c:	mov    r12,QWORD PTR [rsp+0x78]
   140015c51:	add    rsp,0x50
   140015c55:	pop    rbp
   140015c56:	ret    
   140015c57:	lea    rcx,[rbp-0x20]
   140015c5b:	mov    rdx,r9
   140015c5e:	call   0x14000c6f4
   140015c63:	mov    r11,QWORD PTR [rbp-0x20]
   140015c67:	cmp    DWORD PTR [r11+0x14],r12d
   140015c6b:	jne    0x140015c90
   140015c6d:	test   rbx,rbx
   140015c70:	je     0x140015c78
   140015c72:	movzx  eax,BYTE PTR [rdi]
   140015c75:	mov    WORD PTR [rbx],ax
   140015c78:	cmp    BYTE PTR [rbp-0x8],r12b
   140015c7c:	je     0x140015c89
   140015c7e:	mov    rax,QWORD PTR [rbp-0x10]
   140015c82:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140015c89:	mov    eax,0x1
   140015c8e:	jmp    0x140015c3d
   140015c90:	movzx  ecx,BYTE PTR [rdi]
   140015c93:	lea    rdx,[rbp-0x20]
   140015c97:	call   0x140015288
   140015c9c:	test   eax,eax
   140015c9e:	je     0x140015d3b
   140015ca4:	mov    rcx,QWORD PTR [rbp-0x20]
   140015ca8:	mov    r9d,DWORD PTR [rcx+0x10c]
   140015caf:	cmp    r9d,0x1
   140015cb3:	jle    0x140015ce5
   140015cb5:	cmp    esi,r9d
   140015cb8:	jl     0x140015ce5
   140015cba:	mov    ecx,DWORD PTR [rcx+0x4]
   140015cbd:	mov    eax,r12d
   140015cc0:	test   rbx,rbx
   140015cc3:	setne  al
   140015cc6:	mov    r8,rdi
   140015cc9:	mov    edx,0x9
   140015cce:	mov    DWORD PTR [rsp+0x28],eax
   140015cd2:	mov    QWORD PTR [rsp+0x20],rbx
   140015cd7:	call   QWORD PTR [rip+0x4453]        # 0x14001a130
   140015cdd:	mov    rcx,QWORD PTR [rbp-0x20]
   140015ce1:	test   eax,eax
   140015ce3:	jne    0x140015cf7
   140015ce5:	movsxd rax,DWORD PTR [rcx+0x10c]
   140015cec:	cmp    rsi,rax
   140015cef:	jb     0x140015d17
   140015cf1:	cmp    BYTE PTR [rdi+0x1],r12b
   140015cf5:	je     0x140015d17
   140015cf7:	mov    eax,DWORD PTR [rcx+0x10c]
   140015cfd:	cmp    BYTE PTR [rbp-0x8],r12b
   140015d01:	je     0x140015c3d
   140015d07:	mov    rcx,QWORD PTR [rbp-0x10]
   140015d0b:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140015d12:	jmp    0x140015c3d
   140015d17:	call   0x14000bdc0
   140015d1c:	mov    DWORD PTR [rax],0x2a
   140015d22:	cmp    BYTE PTR [rbp-0x8],r12b
   140015d26:	je     0x140015d33
   140015d28:	mov    rax,QWORD PTR [rbp-0x10]
   140015d2c:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140015d33:	or     eax,0xffffffff
   140015d36:	jmp    0x140015c3d
   140015d3b:	mov    eax,r12d
   140015d3e:	mov    r9d,0x1
   140015d44:	test   rbx,rbx
   140015d47:	setne  al
   140015d4a:	lea    edx,[r9+0x8]
   140015d4e:	mov    r8,rdi
   140015d51:	mov    DWORD PTR [rsp+0x28],eax
   140015d55:	mov    rax,QWORD PTR [rbp-0x20]
   140015d59:	mov    QWORD PTR [rsp+0x20],rbx
   140015d5e:	mov    ecx,DWORD PTR [rax+0x4]
   140015d61:	call   QWORD PTR [rip+0x43c9]        # 0x14001a130
   140015d67:	test   eax,eax
   140015d69:	jne    0x140015c78
   140015d6f:	jmp    0x140015d17
   140015d71:	int3   
   140015d72:	int3   
   140015d73:	int3   
   140015d74:	xor    r9d,r9d
   140015d77:	jmp    0x140015bfc
   140015d7c:	mov    QWORD PTR [rsp+0x8],rbx
   140015d81:	push   rdi
   140015d82:	sub    rsp,0x20
   140015d86:	movsxd rbx,ecx
   140015d89:	mov    edi,r8d
   140015d8c:	mov    QWORD PTR [rsp+0x38],rdx
   140015d91:	mov    ecx,ebx
   140015d93:	call   0x140011660
   140015d98:	cmp    rax,0xffffffffffffffff
   140015d9c:	jne    0x140015daf
   140015d9e:	call   0x14000bdc0
   140015da3:	mov    DWORD PTR [rax],0x9
   140015da9:	or     rax,0xffffffffffffffff
   140015dad:	jmp    0x140015e06
   140015daf:	mov    edx,DWORD PTR [rsp+0x38]
   140015db3:	lea    r8,[rsp+0x3c]
   140015db8:	mov    r9d,edi
   140015dbb:	mov    rcx,rax
   140015dbe:	call   QWORD PTR [rip+0x452c]        # 0x14001a2f0
   140015dc4:	mov    DWORD PTR [rsp+0x38],eax
   140015dc8:	cmp    eax,0xffffffff
   140015dcb:	jne    0x140015de0
   140015dcd:	call   QWORD PTR [rip+0x429d]        # 0x14001a070
   140015dd3:	test   eax,eax
   140015dd5:	je     0x140015de0
   140015dd7:	mov    ecx,eax
   140015dd9:	call   0x14000be00
   140015dde:	jmp    0x140015da9
   140015de0:	mov    rcx,rbx
   140015de3:	mov    rax,rbx
   140015de6:	lea    rdx,[rip+0xfc93]        # 0x140025a80
   140015ded:	sar    rax,0x5
   140015df1:	and    ecx,0x1f
   140015df4:	mov    rax,QWORD PTR [rdx+rax*8]
   140015df8:	imul   rcx,rcx,0x58
   140015dfc:	and    BYTE PTR [rax+rcx*1+0x8],0xfd
   140015e01:	mov    rax,QWORD PTR [rsp+0x38]
   140015e06:	mov    rbx,QWORD PTR [rsp+0x30]
   140015e0b:	add    rsp,0x20
   140015e0f:	pop    rdi
   140015e10:	ret    
   140015e11:	int3   
   140015e12:	int3   
   140015e13:	int3   
   140015e14:	mov    QWORD PTR [rsp+0x10],rbx
   140015e19:	mov    DWORD PTR [rsp+0x8],ecx
   140015e1d:	push   rsi
   140015e1e:	push   rdi
   140015e1f:	push   r12
   140015e21:	push   r13
   140015e23:	push   r14
   140015e25:	sub    rsp,0x20
   140015e29:	mov    esi,r8d
   140015e2c:	mov    r12,rdx
   140015e2f:	movsxd rdi,ecx
   140015e32:	cmp    edi,0xfffffffe
   140015e35:	jne    0x140015e4f
   140015e37:	call   0x14000bde0
   140015e3c:	and    DWORD PTR [rax],0x0
   140015e3f:	call   0x14000bdc0
   140015e44:	mov    DWORD PTR [rax],0x9
   140015e4a:	jmp    0x140015ee1
   140015e4f:	test   ecx,ecx
   140015e51:	js     0x140015ec9
   140015e53:	cmp    edi,DWORD PTR [rip+0xfc13]        # 0x140025a6c
   140015e59:	jae    0x140015ec9
   140015e5b:	mov    rbx,rdi
   140015e5e:	mov    r13,rdi
   140015e61:	sar    r13,0x5
   140015e65:	lea    r14,[rip+0xfc14]        # 0x140025a80
   140015e6c:	and    ebx,0x1f
   140015e6f:	imul   rbx,rbx,0x58
   140015e73:	mov    rax,QWORD PTR [r14+r13*8]
   140015e77:	movsx  ecx,BYTE PTR [rax+rbx*1+0x8]
   140015e7c:	and    ecx,0x1
   140015e7f:	je     0x140015ec9
   140015e81:	mov    ecx,edi
   140015e83:	call   0x1400116d4
   140015e88:	nop
   140015e89:	mov    rax,QWORD PTR [r14+r13*8]
   140015e8d:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   140015e92:	je     0x140015ea6
   140015e94:	mov    r8d,esi
   140015e97:	mov    rdx,r12
   140015e9a:	mov    ecx,edi
   140015e9c:	call   0x140015d7c
   140015ea1:	mov    rbx,rax
   140015ea4:	jmp    0x140015ebd
   140015ea6:	call   0x14000bdc0
   140015eab:	mov    DWORD PTR [rax],0x9
   140015eb1:	call   0x14000bde0
   140015eb6:	and    DWORD PTR [rax],0x0
   140015eb9:	or     rbx,0xffffffffffffffff
   140015ebd:	mov    ecx,edi
   140015ebf:	call   0x14001177c
   140015ec4:	mov    rax,rbx
   140015ec7:	jmp    0x140015ee5
   140015ec9:	call   0x14000bde0
   140015ece:	and    DWORD PTR [rax],0x0
   140015ed1:	call   0x14000bdc0
   140015ed6:	mov    DWORD PTR [rax],0x9
   140015edc:	call   0x14000d01c
   140015ee1:	or     rax,0xffffffffffffffff
   140015ee5:	mov    rbx,QWORD PTR [rsp+0x58]
   140015eea:	add    rsp,0x20
   140015eee:	pop    r14
   140015ef0:	pop    r13
   140015ef2:	pop    r12
   140015ef4:	pop    rdi
   140015ef5:	pop    rsi
   140015ef6:	ret    
   140015ef7:	int3   
   140015ef8:	rex push rbx
   140015efa:	sub    rsp,0x20
   140015efe:	inc    DWORD PTR [rip+0xeaf0]        # 0x1400249f4
   140015f04:	mov    rbx,rcx
   140015f07:	mov    ecx,0x1000
   140015f0c:	call   0x140010aa4
   140015f11:	mov    QWORD PTR [rbx+0x10],rax
   140015f15:	test   rax,rax
   140015f18:	je     0x140015f27
   140015f1a:	or     DWORD PTR [rbx+0x18],0x8
   140015f1e:	mov    DWORD PTR [rbx+0x24],0x1000
   140015f25:	jmp    0x140015f3a
   140015f27:	or     DWORD PTR [rbx+0x18],0x4
   140015f2b:	lea    rax,[rbx+0x20]
   140015f2f:	mov    DWORD PTR [rbx+0x24],0x2
   140015f36:	mov    QWORD PTR [rbx+0x10],rax
   140015f3a:	mov    rax,QWORD PTR [rbx+0x10]
   140015f3e:	and    DWORD PTR [rbx+0x8],0x0
   140015f42:	mov    QWORD PTR [rbx],rax
   140015f45:	add    rsp,0x20
   140015f49:	pop    rbx
   140015f4a:	ret    
   140015f4b:	int3   
   140015f4c:	mov    QWORD PTR [rsp+0x8],rbx
   140015f51:	mov    QWORD PTR [rsp+0x18],rsi
   140015f56:	mov    QWORD PTR [rsp+0x20],rdi
   140015f5b:	push   rbp
   140015f5c:	push   r12
   140015f5e:	push   r13
   140015f60:	push   r14
   140015f62:	push   r15
   140015f64:	mov    rbp,rsp
   140015f67:	sub    rsp,0x40
   140015f6b:	mov    r15,rdx
   140015f6e:	mov    rdx,rcx
   140015f71:	lea    rcx,[rbp-0x20]
   140015f75:	mov    r13d,r9d
   140015f78:	mov    r14,r8
   140015f7b:	call   0x14000c6f4
   140015f80:	test   r14,r14
   140015f83:	je     0x140015f88
   140015f85:	mov    QWORD PTR [r14],r15
   140015f88:	test   r15,r15
   140015f8b:	jne    0x140015fa6
   140015f8d:	call   0x14000bdc0
   140015f92:	mov    DWORD PTR [rax],0x16
   140015f98:	call   0x14000d01c
   140015f9d:	cmp    BYTE PTR [rbp-0x8],0x0
   140015fa1:	jmp    0x14001618a
   140015fa6:	test   r13d,r13d
   140015fa9:	je     0x140015fb7
   140015fab:	cmp    r13d,0x2
   140015faf:	jl     0x140015f8d
   140015fb1:	cmp    r13d,0x24
   140015fb5:	jg     0x140015f8d
   140015fb7:	mov    r12b,BYTE PTR [r15]
   140015fba:	mov    r8,QWORD PTR [rbp-0x20]
   140015fbe:	xor    edi,edi
   140015fc0:	lea    rbx,[r15+0x1]
   140015fc4:	cmp    DWORD PTR [r8+0x10c],0x1
   140015fcc:	jle    0x140015fe6
   140015fce:	lea    r8,[rbp-0x20]
   140015fd2:	movzx  ecx,r12b
   140015fd6:	mov    edx,0x8
   140015fdb:	call   0x140014ca4
   140015fe0:	mov    r8,QWORD PTR [rbp-0x20]
   140015fe4:	jmp    0x140015ff8
   140015fe6:	mov    rax,QWORD PTR [r8+0x140]
   140015fed:	movzx  ecx,r12b
   140015ff1:	movzx  eax,WORD PTR [rax+rcx*2]
   140015ff5:	and    eax,0x8
   140015ff8:	test   eax,eax
   140015ffa:	je     0x140016004
   140015ffc:	mov    r12b,BYTE PTR [rbx]
   140015fff:	inc    rbx
   140016002:	jmp    0x140015fc4
   140016004:	mov    esi,DWORD PTR [rbp+0x50]
   140016007:	cmp    r12b,0x2d
   14001600b:	jne    0x140016012
   14001600d:	or     esi,0x2
   140016010:	jmp    0x140016018
   140016012:	cmp    r12b,0x2b
   140016016:	jne    0x14001601e
   140016018:	mov    r12b,BYTE PTR [rbx]
   14001601b:	inc    rbx
   14001601e:	test   r13d,r13d
   140016021:	js     0x14001617e
   140016027:	cmp    r13d,0x1
   14001602b:	je     0x14001617e
   140016031:	cmp    r13d,0x24
   140016035:	jg     0x14001617e
   14001603b:	test   r13d,r13d
   14001603e:	jne    0x140016068
   140016040:	cmp    r12b,0x30
   140016044:	je     0x14001604e
   140016046:	mov    r13d,0xa
   14001604c:	jmp    0x140016086
   14001604e:	cmp    BYTE PTR [rbx],0x78
   140016051:	je     0x140016060
   140016053:	cmp    BYTE PTR [rbx],0x58
   140016056:	je     0x140016060
   140016058:	mov    r13d,0x8
   14001605e:	jmp    0x140016086
   140016060:	mov    r13d,0x10
   140016066:	jmp    0x140016074
   140016068:	cmp    r13d,0x10
   14001606c:	jne    0x140016086
   14001606e:	cmp    r12b,0x30
   140016072:	jne    0x140016086
   140016074:	cmp    BYTE PTR [rbx],0x78
   140016077:	je     0x14001607e
   140016079:	cmp    BYTE PTR [rbx],0x58
   14001607c:	jne    0x140016086
   14001607e:	mov    r12b,BYTE PTR [rbx+0x1]
   140016082:	add    rbx,0x2
   140016086:	mov    r10,QWORD PTR [r8+0x140]
   14001608d:	xor    edx,edx
   14001608f:	or     eax,0xffffffff
   140016092:	div    r13d
   140016095:	mov    r9d,eax
   140016098:	movzx  ecx,r12b
   14001609c:	movzx  r8d,WORD PTR [r10+rcx*2]
   1400160a1:	mov    ecx,r8d
   1400160a4:	and    ecx,0x4
   1400160a7:	je     0x1400160b2
   1400160a9:	movsx  ecx,r12b
   1400160ad:	sub    ecx,0x30
   1400160b0:	jmp    0x1400160ce
   1400160b2:	and    r8d,0x103
   1400160b9:	je     0x1400160e9
   1400160bb:	lea    eax,[r12-0x61]
   1400160c0:	movsx  ecx,r12b
   1400160c4:	cmp    al,0x19
   1400160c6:	ja     0x1400160cb
   1400160c8:	sub    ecx,0x20
   1400160cb:	add    ecx,0xffffffc9
   1400160ce:	cmp    ecx,r13d
   1400160d1:	jae    0x1400160e9
   1400160d3:	or     esi,0x8
   1400160d6:	cmp    edi,r9d
   1400160d9:	jb     0x1400160fd
   1400160db:	jne    0x1400160e1
   1400160dd:	cmp    ecx,edx
   1400160df:	jbe    0x1400160fd
   1400160e1:	or     esi,0x4
   1400160e4:	test   r14,r14
   1400160e7:	jne    0x140016103
   1400160e9:	dec    rbx
   1400160ec:	test   sil,0x8
   1400160f0:	jne    0x14001610b
   1400160f2:	test   r14,r14
   1400160f5:	cmovne rbx,r15
   1400160f9:	xor    edi,edi
   1400160fb:	jmp    0x140016159
   1400160fd:	imul   edi,r13d
   140016101:	add    edi,ecx
   140016103:	mov    r12b,BYTE PTR [rbx]
   140016106:	inc    rbx
   140016109:	jmp    0x140016098
   14001610b:	mov    r12d,0x7fffffff
   140016111:	test   sil,0x4
   140016115:	jne    0x140016135
   140016117:	test   sil,0x1
   14001611b:	jne    0x140016159
   14001611d:	mov    eax,esi
   14001611f:	and    eax,0x2
   140016122:	je     0x14001612c
   140016124:	cmp    edi,0x80000000
   14001612a:	ja     0x140016135
   14001612c:	test   eax,eax
   14001612e:	jne    0x140016159
   140016130:	cmp    edi,r12d
   140016133:	jbe    0x140016159
   140016135:	call   0x14000bdc0
   14001613a:	mov    DWORD PTR [rax],0x22
   140016140:	test   sil,0x1
   140016144:	je     0x14001614b
   140016146:	or     edi,0xffffffff
   140016149:	jmp    0x140016159
   14001614b:	mov    al,sil
   14001614e:	and    al,0x2
   140016150:	neg    al
   140016152:	sbb    edi,edi
   140016154:	neg    edi
   140016156:	add    edi,r12d
   140016159:	test   r14,r14
   14001615c:	je     0x140016161
   14001615e:	mov    QWORD PTR [r14],rbx
   140016161:	test   sil,0x2
   140016165:	je     0x140016169
   140016167:	neg    edi
   140016169:	cmp    BYTE PTR [rbp-0x8],0x0
   14001616d:	je     0x14001617a
   14001616f:	mov    rcx,QWORD PTR [rbp-0x10]
   140016173:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001617a:	mov    eax,edi
   14001617c:	jmp    0x140016199
   14001617e:	test   r14,r14
   140016181:	je     0x140016186
   140016183:	mov    QWORD PTR [r14],r15
   140016186:	cmp    BYTE PTR [rbp-0x8],dil
   14001618a:	je     0x140016197
   14001618c:	mov    rax,QWORD PTR [rbp-0x10]
   140016190:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140016197:	xor    eax,eax
   140016199:	lea    r11,[rsp+0x40]
   14001619e:	mov    rbx,QWORD PTR [r11+0x30]
   1400161a2:	mov    rsi,QWORD PTR [r11+0x40]
   1400161a6:	mov    rdi,QWORD PTR [r11+0x48]
   1400161aa:	mov    rsp,r11
   1400161ad:	pop    r15
   1400161af:	pop    r14
   1400161b1:	pop    r13
   1400161b3:	pop    r12
   1400161b5:	pop    rbp
   1400161b6:	ret    
   1400161b7:	int3   
   1400161b8:	sub    rsp,0x38
   1400161bc:	xor    eax,eax
   1400161be:	mov    r9d,r8d
   1400161c1:	mov    r8,rdx
   1400161c4:	cmp    DWORD PTR [rip+0xf79e],eax        # 0x140025968
   1400161ca:	mov    DWORD PTR [rsp+0x20],eax
   1400161ce:	mov    rdx,rcx
   1400161d1:	jne    0x1400161dc
   1400161d3:	lea    rcx,[rip+0xe20e]        # 0x1400243e8
   1400161da:	jmp    0x1400161de
   1400161dc:	xor    ecx,ecx
   1400161de:	call   0x140015f4c
   1400161e3:	add    rsp,0x38
   1400161e7:	ret    
   1400161e8:	mov    QWORD PTR [rsp+0x8],rbx
   1400161ed:	mov    QWORD PTR [rsp+0x10],rsi
   1400161f2:	push   rdi
   1400161f3:	sub    rsp,0x20
   1400161f7:	xor    edi,edi
   1400161f9:	mov    rbx,rdx
   1400161fc:	mov    rsi,rcx
   1400161ff:	test   rdx,rdx
   140016202:	je     0x140016221
   140016204:	xor    edx,edx
   140016206:	lea    rax,[rdi-0x20]
   14001620a:	div    rbx
   14001620d:	cmp    rax,r8
   140016210:	jae    0x140016221
   140016212:	call   0x14000bdc0
   140016217:	mov    DWORD PTR [rax],0xc
   14001621d:	xor    eax,eax
   14001621f:	jmp    0x14001625e
   140016221:	imul   rbx,r8
   140016225:	test   rcx,rcx
   140016228:	je     0x140016232
   14001622a:	call   0x140014dd4
   14001622f:	mov    rdi,rax
   140016232:	mov    rdx,rbx
   140016235:	mov    rcx,rsi
   140016238:	call   0x14000b38c
   14001623d:	mov    rsi,rax
   140016240:	test   rax,rax
   140016243:	je     0x14001625b
   140016245:	cmp    rdi,rbx
   140016248:	jae    0x14001625b
   14001624a:	sub    rbx,rdi
   14001624d:	lea    rcx,[rdi+rax*1]
   140016251:	xor    edx,edx
   140016253:	mov    r8,rbx
   140016256:	call   0x14000a530
   14001625b:	mov    rax,rsi
   14001625e:	mov    rbx,QWORD PTR [rsp+0x30]
   140016263:	mov    rsi,QWORD PTR [rsp+0x38]
   140016268:	add    rsp,0x20
   14001626c:	pop    rdi
   14001626d:	ret    
   14001626e:	int3   
   14001626f:	int3   
   140016270:	mov    QWORD PTR [rsp+0x10],rdx
   140016275:	mov    DWORD PTR [rsp+0x8],ecx
   140016279:	push   rbp
   14001627a:	push   rbx
   14001627b:	push   rsi
   14001627c:	push   rdi
   14001627d:	push   r12
   14001627f:	push   r13
   140016281:	push   r14
   140016283:	push   r15
   140016285:	mov    rbp,rsp
   140016288:	sub    rsp,0x58
   14001628c:	movsxd rax,ecx
   14001628f:	mov    ebx,r8d
   140016292:	mov    DWORD PTR [rbp-0x20],0xfffffffe
   140016299:	mov    DWORD PTR [rbp-0x1c],ebx
   14001629c:	cmp    eax,0xfffffffe
   14001629f:	jne    0x1400162ba
   1400162a1:	call   0x14000bde0
   1400162a6:	xor    edi,edi
   1400162a8:	mov    DWORD PTR [rax],edi
   1400162aa:	call   0x14000bdc0
   1400162af:	mov    DWORD PTR [rax],0x9
   1400162b5:	jmp    0x14001697f
   1400162ba:	xor    edi,edi
   1400162bc:	test   ecx,ecx
   1400162be:	js     0x140016968
   1400162c4:	cmp    eax,DWORD PTR [rip+0xf7a2]        # 0x140025a6c
   1400162ca:	jae    0x140016968
   1400162d0:	mov    rsi,rax
   1400162d3:	mov    r15,rax
   1400162d6:	lea    r9,[rip+0xfffffffffffe9d23]        # 0x140000000
   1400162dd:	sar    r15,0x5
   1400162e1:	and    esi,0x1f
   1400162e4:	mov    rcx,QWORD PTR [r9+r15*8+0x25a80]
   1400162ec:	imul   rsi,rsi,0x58
   1400162f0:	mov    al,BYTE PTR [rcx+rsi*1+0x8]
   1400162f4:	test   al,0x1
   1400162f6:	je     0x140016968
   1400162fc:	cmp    ebx,0x7fffffff
   140016302:	jbe    0x14001631b
   140016304:	call   0x14000bde0
   140016309:	mov    DWORD PTR [rax],edi
   14001630b:	call   0x14000bdc0
   140016310:	mov    DWORD PTR [rax],0x16
   140016316:	jmp    0x14001697a
   14001631b:	mov    r12d,edi
   14001631e:	test   ebx,ebx
   140016320:	je     0x140016964
   140016326:	test   al,0x2
   140016328:	jne    0x140016964
   14001632e:	test   rdx,rdx
   140016331:	je     0x140016304
   140016333:	mov    r13b,BYTE PTR [rcx+rsi*1+0x38]
   140016338:	mov    r8d,0x4
   14001633e:	add    r13b,r13b
   140016341:	sar    r13b,1
   140016344:	movsx  ecx,r13b
   140016348:	mov    BYTE PTR [rbp+0x60],r13b
   14001634c:	dec    ecx
   14001634e:	je     0x140016364
   140016350:	dec    ecx
   140016352:	jne    0x14001635f
   140016354:	mov    eax,ebx
   140016356:	not    eax
   140016358:	test   al,0x1
   14001635a:	je     0x140016304
   14001635c:	and    ebx,0xfffffffe
   14001635f:	mov    r14,rdx
   140016362:	jmp    0x1400163c4
   140016364:	mov    eax,ebx
   140016366:	not    eax
   140016368:	test   al,0x1
   14001636a:	je     0x140016304
   14001636c:	shr    ebx,1
   14001636e:	cmp    ebx,r8d
   140016371:	cmovb  ebx,r8d
   140016375:	mov    ecx,ebx
   140016377:	call   0x140010aa4
   14001637c:	mov    r14,rax
   14001637f:	test   rax,rax
   140016382:	jne    0x14001639f
   140016384:	call   0x14000bdc0
   140016389:	mov    DWORD PTR [rax],0xc
   14001638f:	call   0x14000bde0
   140016394:	mov    DWORD PTR [rax],0x8
   14001639a:	jmp    0x14001697f
   14001639f:	mov    ecx,DWORD PTR [rbp+0x48]
   1400163a2:	xor    edx,edx
   1400163a4:	lea    r8d,[rdx+0x1]
   1400163a8:	call   0x140015d7c
   1400163ad:	lea    r9,[rip+0xfffffffffffe9c4c]        # 0x140000000
   1400163b4:	mov    r11,rax
   1400163b7:	mov    rax,QWORD PTR [r9+r15*8+0x25a80]
   1400163bf:	mov    QWORD PTR [rax+rsi*1+0x40],r11
   1400163c4:	mov    rax,QWORD PTR [r9+r15*8+0x25a80]
   1400163cc:	mov    rdx,r14
   1400163cf:	mov    r8d,0xa
   1400163d5:	test   BYTE PTR [rax+rsi*1+0x8],0x48
   1400163da:	je     0x14001647b
   1400163e0:	mov    cl,BYTE PTR [rax+rsi*1+0x9]
   1400163e4:	cmp    cl,r8b
   1400163e7:	je     0x14001647b
   1400163ed:	test   ebx,ebx
   1400163ef:	je     0x14001647b
   1400163f5:	mov    BYTE PTR [r14],cl
   1400163f8:	mov    rax,QWORD PTR [r9+r15*8+0x25a80]
   140016400:	or     r10d,0xffffffff
   140016404:	add    ebx,r10d
   140016407:	lea    rdx,[r14+0x1]
   14001640b:	lea    r12d,[r8-0x9]
   14001640f:	mov    BYTE PTR [rax+rsi*1+0x9],r8b
   140016414:	test   r13b,r13b
   140016417:	je     0x14001647b
   140016419:	mov    rax,QWORD PTR [r9+r15*8+0x25a80]
   140016421:	mov    cl,BYTE PTR [rax+rsi*1+0x39]
   140016425:	cmp    cl,r8b
   140016428:	je     0x14001647b
   14001642a:	test   ebx,ebx
   14001642c:	je     0x14001647b
   14001642e:	mov    BYTE PTR [rdx],cl
   140016430:	mov    rax,QWORD PTR [r9+r15*8+0x25a80]
   140016438:	add    ebx,r10d
   14001643b:	inc    rdx
   14001643e:	lea    r12d,[r8-0x8]
   140016442:	mov    BYTE PTR [rax+rsi*1+0x39],r8b
   140016447:	cmp    r13b,0x1
   14001644b:	jne    0x14001647b
   14001644d:	mov    rax,QWORD PTR [r9+r15*8+0x25a80]
   140016455:	mov    cl,BYTE PTR [rax+rsi*1+0x3a]
   140016459:	cmp    cl,r8b
   14001645c:	je     0x14001647b
   14001645e:	test   ebx,ebx
   140016460:	je     0x14001647b
   140016462:	mov    BYTE PTR [rdx],cl
   140016464:	mov    rax,QWORD PTR [r9+r15*8+0x25a80]
   14001646c:	inc    rdx
   14001646f:	lea    r12d,[r8-0x7]
   140016473:	add    ebx,r10d
   140016476:	mov    BYTE PTR [rax+rsi*1+0x3a],r8b
   14001647b:	mov    rcx,QWORD PTR [r9+r15*8+0x25a80]
   140016483:	lea    r9,[rbp-0x24]
   140016487:	mov    r8d,ebx
   14001648a:	mov    rcx,QWORD PTR [rcx+rsi*1]
   14001648e:	mov    QWORD PTR [rsp+0x20],rdi
   140016493:	call   QWORD PTR [rip+0x3e5f]        # 0x14001a2f8
   140016499:	test   eax,eax
   14001649b:	je     0x140016929
   1400164a1:	movsxd rdx,DWORD PTR [rbp-0x24]
   1400164a5:	test   edx,edx
   1400164a7:	js     0x140016929
   1400164ad:	mov    eax,ebx
   1400164af:	cmp    rdx,rax
   1400164b2:	ja     0x140016929
   1400164b8:	lea    r8,[rip+0xfffffffffffe9b41]        # 0x140000000
   1400164bf:	add    r12d,edx
   1400164c2:	mov    rax,QWORD PTR [r8+r15*8+0x25a80]
   1400164ca:	test   BYTE PTR [rax+rsi*1+0x8],0x80
   1400164cf:	je     0x14001690a
   1400164d5:	cmp    r13b,0x2
   1400164d9:	je     0x14001676b
   1400164df:	test   edx,edx
   1400164e1:	je     0x1400164f0
   1400164e3:	cmp    BYTE PTR [r14],0xa
   1400164e7:	jne    0x1400164f0
   1400164e9:	or     BYTE PTR [rax+rsi*1+0x8],0x4
   1400164ee:	jmp    0x1400164f5
   1400164f0:	and    BYTE PTR [rax+rsi*1+0x8],0xfb
   1400164f5:	movsxd rax,r12d
   1400164f8:	mov    rbx,r14
   1400164fb:	mov    r13,r14
   1400164fe:	add    rax,r14
   140016501:	mov    QWORD PTR [rbp-0x18],rax
   140016505:	cmp    r14,rax
   140016508:	jae    0x140016629
   14001650e:	mov    r12d,0xd
   140016514:	mov    al,BYTE PTR [r13+0x0]
   140016518:	cmp    al,0x1a
   14001651a:	je     0x14001660a
   140016520:	cmp    al,r12b
   140016523:	je     0x140016532
   140016525:	mov    BYTE PTR [rbx],al
   140016527:	inc    rbx
   14001652a:	inc    r13
   14001652d:	jmp    0x1400165fe
   140016532:	mov    rax,QWORD PTR [rbp-0x18]
   140016536:	dec    rax
   140016539:	cmp    r13,rax
   14001653c:	jae    0x140016555
   14001653e:	lea    rax,[r13+0x1]
   140016542:	cmp    BYTE PTR [rax],0xa
   140016545:	jne    0x14001654d
   140016547:	add    r13,0x2
   14001654b:	jmp    0x1400165cb
   14001654d:	mov    r13,rax
   140016550:	jmp    0x1400165f8
   140016555:	mov    rcx,QWORD PTR [r8+r15*8+0x25a80]
   14001655d:	lea    r9,[rbp-0x24]
   140016561:	lea    rdx,[rbp+0x58]
   140016565:	mov    rcx,QWORD PTR [rcx+rsi*1]
   140016569:	mov    r8d,0x1
   14001656f:	inc    r13
   140016572:	mov    QWORD PTR [rsp+0x20],rdi
   140016577:	call   QWORD PTR [rip+0x3d7b]        # 0x14001a2f8
   14001657d:	test   eax,eax
   14001657f:	jne    0x14001658b
   140016581:	call   QWORD PTR [rip+0x3ae9]        # 0x14001a070
   140016587:	test   eax,eax
   140016589:	jne    0x1400165f1
   14001658b:	cmp    DWORD PTR [rbp-0x24],edi
   14001658e:	je     0x1400165f1
   140016590:	lea    r8,[rip+0xfffffffffffe9a69]        # 0x140000000
   140016597:	mov    rax,QWORD PTR [r8+r15*8+0x25a80]
   14001659f:	test   BYTE PTR [rax+rsi*1+0x8],0x48
   1400165a4:	je     0x1400165c0
   1400165a6:	cmp    BYTE PTR [rbp+0x58],0xa
   1400165aa:	je     0x1400165cb
   1400165ac:	mov    BYTE PTR [rbx],r12b
   1400165af:	mov    rcx,QWORD PTR [r8+r15*8+0x25a80]
   1400165b7:	mov    al,BYTE PTR [rbp+0x58]
   1400165ba:	mov    BYTE PTR [rcx+rsi*1+0x9],al
   1400165be:	jmp    0x1400165fb
   1400165c0:	cmp    rbx,r14
   1400165c3:	jne    0x1400165d0
   1400165c5:	cmp    BYTE PTR [rbp+0x58],0xa
   1400165c9:	jne    0x1400165d0
   1400165cb:	mov    BYTE PTR [rbx],0xa
   1400165ce:	jmp    0x1400165fb
   1400165d0:	mov    ecx,DWORD PTR [rbp+0x48]
   1400165d3:	mov    r8d,0x1
   1400165d9:	or     rdx,0xffffffffffffffff
   1400165dd:	call   0x140015d7c
   1400165e2:	cmp    BYTE PTR [rbp+0x58],0xa
   1400165e6:	lea    r8,[rip+0xfffffffffffe9a13]        # 0x140000000
   1400165ed:	je     0x1400165fe
   1400165ef:	jmp    0x1400165f8
   1400165f1:	lea    r8,[rip+0xfffffffffffe9a08]        # 0x140000000
   1400165f8:	mov    BYTE PTR [rbx],r12b
   1400165fb:	inc    rbx
   1400165fe:	cmp    r13,QWORD PTR [rbp-0x18]
   140016602:	jb     0x140016514
   140016608:	jmp    0x140016629
   14001660a:	mov    rax,QWORD PTR [r8+r15*8+0x25a80]
   140016612:	test   BYTE PTR [rax+rsi*1+0x8],0x40
   140016617:	jne    0x140016620
   140016619:	or     BYTE PTR [rax+rsi*1+0x8],0x2
   14001661e:	jmp    0x140016629
   140016620:	mov    al,BYTE PTR [r13+0x0]
   140016624:	mov    BYTE PTR [rbx],al
   140016626:	inc    rbx
   140016629:	mov    r12d,ebx
   14001662c:	sub    r12d,r14d
   14001662f:	cmp    BYTE PTR [rbp+0x60],0x1
   140016633:	jne    0x14001690a
   140016639:	test   r12d,r12d
   14001663c:	je     0x14001690a
   140016642:	dec    rbx
   140016645:	test   BYTE PTR [rbx],0x80
   140016648:	jne    0x140016652
   14001664a:	inc    rbx
   14001664d:	jmp    0x140016703
   140016652:	mov    edx,0x1
   140016657:	jmp    0x140016668
   140016659:	cmp    edx,0x4
   14001665c:	jg     0x140016675
   14001665e:	cmp    rbx,r14
   140016661:	jb     0x140016675
   140016663:	dec    rbx
   140016666:	inc    edx
   140016668:	movzx  eax,BYTE PTR [rbx]
   14001666b:	cmp    BYTE PTR [rax+r8*1+0x24410],dil
   140016673:	je     0x140016659
   140016675:	movzx  ecx,BYTE PTR [rbx]
   140016678:	movsx  eax,BYTE PTR [rcx+r8*1+0x24410]
   140016681:	test   eax,eax
   140016683:	jne    0x140016698
   140016685:	call   0x14000bdc0
   14001668a:	mov    DWORD PTR [rax],0x2a
   140016690:	or     ebx,0xffffffff
   140016693:	jmp    0x14001690d
   140016698:	inc    eax
   14001669a:	cmp    eax,edx
   14001669c:	jne    0x1400166a6
   14001669e:	movsxd rax,edx
   1400166a1:	add    rbx,rax
   1400166a4:	jmp    0x140016703
   1400166a6:	mov    rax,QWORD PTR [r8+r15*8+0x25a80]
   1400166ae:	test   BYTE PTR [rax+rsi*1+0x8],0x48
   1400166b3:	je     0x1400166f0
   1400166b5:	inc    rbx
   1400166b8:	mov    BYTE PTR [rax+rsi*1+0x9],cl
   1400166bc:	cmp    edx,0x2
   1400166bf:	jl     0x1400166d2
   1400166c1:	mov    al,BYTE PTR [rbx]
   1400166c3:	mov    rcx,QWORD PTR [r8+r15*8+0x25a80]
   1400166cb:	inc    rbx
   1400166ce:	mov    BYTE PTR [rcx+rsi*1+0x39],al
   1400166d2:	cmp    edx,0x3
   1400166d5:	jne    0x1400166e8
   1400166d7:	mov    al,BYTE PTR [rbx]
   1400166d9:	mov    rcx,QWORD PTR [r8+r15*8+0x25a80]
   1400166e1:	inc    rbx
   1400166e4:	mov    BYTE PTR [rcx+rsi*1+0x3a],al
   1400166e8:	movsxd rax,edx
   1400166eb:	sub    rbx,rax
   1400166ee:	jmp    0x140016703
   1400166f0:	mov    ecx,DWORD PTR [rbp+0x48]
   1400166f3:	neg    edx
   1400166f5:	mov    r8d,0x1
   1400166fb:	movsxd rdx,edx
   1400166fe:	call   0x140015d7c
   140016703:	mov    eax,DWORD PTR [rbp-0x1c]
   140016706:	mov    r13,QWORD PTR [rbp+0x50]
   14001670a:	sub    ebx,r14d
   14001670d:	shr    eax,1
   14001670f:	mov    r9d,ebx
   140016712:	mov    r8,r14
   140016715:	mov    DWORD PTR [rsp+0x28],eax
   140016719:	xor    edx,edx
   14001671b:	mov    ecx,0xfde9
   140016720:	mov    QWORD PTR [rsp+0x20],r13
   140016725:	call   QWORD PTR [rip+0x3a05]        # 0x14001a130
   14001672b:	mov    r12d,eax
   14001672e:	test   eax,eax
   140016730:	jne    0x140016747
   140016732:	call   QWORD PTR [rip+0x3938]        # 0x14001a070
   140016738:	mov    ecx,eax
   14001673a:	call   0x14000be00
   14001673f:	or     ebx,0xffffffff
   140016742:	jmp    0x140016911
   140016747:	cmp    eax,ebx
   140016749:	mov    ebx,DWORD PTR [rbp-0x20]
   14001674c:	lea    rax,[rip+0xfffffffffffe98ad]        # 0x140000000
   140016753:	mov    rax,QWORD PTR [rax+r15*8+0x25a80]
   14001675b:	setne  dil
   14001675f:	add    r12d,r12d
   140016762:	mov    DWORD PTR [rax+rsi*1+0x48],edi
   140016766:	jmp    0x140016911
   14001676b:	test   edx,edx
   14001676d:	mov    edx,0xa
   140016772:	je     0x140016781
   140016774:	cmp    WORD PTR [r14],dx
   140016778:	jne    0x140016781
   14001677a:	or     BYTE PTR [rax+rsi*1+0x8],0x4
   14001677f:	jmp    0x140016786
   140016781:	and    BYTE PTR [rax+rsi*1+0x8],0xfb
   140016786:	movsxd rax,r12d
   140016789:	mov    rbx,r14
   14001678c:	mov    r13,r14
   14001678f:	add    rax,r14
   140016792:	mov    QWORD PTR [rbp+0x60],rax
   140016796:	cmp    r14,rax
   140016799:	jae    0x140016904
   14001679f:	mov    r12d,0xd
   1400167a5:	movzx  eax,WORD PTR [r13+0x0]
   1400167aa:	cmp    ax,0x1a
   1400167ae:	je     0x1400168e2
   1400167b4:	cmp    ax,r12w
   1400167b8:	je     0x1400167ca
   1400167ba:	mov    WORD PTR [rbx],ax
   1400167bd:	add    rbx,0x2
   1400167c1:	add    r13,0x2
   1400167c5:	jmp    0x1400168d6
   1400167ca:	mov    rax,QWORD PTR [rbp+0x60]
   1400167ce:	add    rax,0xfffffffffffffffe
   1400167d2:	cmp    r13,rax
   1400167d5:	jae    0x1400167f1
   1400167d7:	lea    rax,[r13+0x2]
   1400167db:	cmp    WORD PTR [rax],dx
   1400167de:	jne    0x1400167e9
   1400167e0:	add    r13,0x4
   1400167e4:	jmp    0x140016896
   1400167e9:	mov    r13,rax
   1400167ec:	jmp    0x1400168ce
   1400167f1:	mov    rcx,QWORD PTR [r8+r15*8+0x25a80]
   1400167f9:	lea    r9,[rbp-0x24]
   1400167fd:	lea    rdx,[rbp-0x28]
   140016801:	mov    rcx,QWORD PTR [rcx+rsi*1]
   140016805:	mov    r8d,0x2
   14001680b:	add    r13,0x2
   14001680f:	mov    QWORD PTR [rsp+0x20],rdi
   140016814:	call   QWORD PTR [rip+0x3ade]        # 0x14001a2f8
   14001681a:	test   eax,eax
   14001681c:	jne    0x14001682c
   14001681e:	call   QWORD PTR [rip+0x384c]        # 0x14001a070
   140016824:	test   eax,eax
   140016826:	jne    0x1400168c2
   14001682c:	cmp    DWORD PTR [rbp-0x24],edi
   14001682f:	je     0x1400168c2
   140016835:	lea    r8,[rip+0xfffffffffffe97c4]        # 0x140000000
   14001683c:	mov    rax,QWORD PTR [r8+r15*8+0x25a80]
   140016844:	test   BYTE PTR [rax+rsi*1+0x8],0x48
   140016849:	je     0x140016886
   14001684b:	mov    edx,0xa
   140016850:	cmp    WORD PTR [rbp-0x28],dx
   140016854:	je     0x140016896
   140016856:	mov    WORD PTR [rbx],r12w
   14001685a:	mov    al,BYTE PTR [rbp-0x28]
   14001685d:	mov    rcx,QWORD PTR [r8+r15*8+0x25a80]
   140016865:	mov    BYTE PTR [rcx+rsi*1+0x9],al
   140016869:	mov    al,BYTE PTR [rbp-0x27]
   14001686c:	mov    rcx,QWORD PTR [r8+r15*8+0x25a80]
   140016874:	mov    BYTE PTR [rcx+rsi*1+0x39],al
   140016878:	mov    rax,QWORD PTR [r8+r15*8+0x25a80]
   140016880:	mov    BYTE PTR [rax+rsi*1+0x3a],dl
   140016884:	jmp    0x1400168d2
   140016886:	cmp    rbx,r14
   140016889:	jne    0x14001689b
   14001688b:	mov    edx,0xa
   140016890:	cmp    WORD PTR [rbp-0x28],dx
   140016894:	jne    0x14001689b
   140016896:	mov    WORD PTR [rbx],dx
   140016899:	jmp    0x1400168d2
   14001689b:	mov    ecx,DWORD PTR [rbp+0x48]
   14001689e:	mov    rdx,0xfffffffffffffffe
   1400168a5:	lea    r8d,[rdx+0x3]
   1400168a9:	call   0x140015d7c
   1400168ae:	mov    edx,0xa
   1400168b3:	lea    r8,[rip+0xfffffffffffe9746]        # 0x140000000
   1400168ba:	cmp    WORD PTR [rbp-0x28],dx
   1400168be:	je     0x1400168d6
   1400168c0:	jmp    0x1400168ce
   1400168c2:	mov    edx,0xa
   1400168c7:	lea    r8,[rip+0xfffffffffffe9732]        # 0x140000000
   1400168ce:	mov    WORD PTR [rbx],r12w
   1400168d2:	add    rbx,0x2
   1400168d6:	cmp    r13,QWORD PTR [rbp+0x60]
   1400168da:	jb     0x1400167a5
   1400168e0:	jmp    0x140016904
   1400168e2:	mov    rax,QWORD PTR [r8+r15*8+0x25a80]
   1400168ea:	test   BYTE PTR [rax+rsi*1+0x8],0x40
   1400168ef:	jne    0x1400168f8
   1400168f1:	or     BYTE PTR [rax+rsi*1+0x8],0x2
   1400168f6:	jmp    0x140016904
   1400168f8:	movzx  eax,WORD PTR [r13+0x0]
   1400168fd:	mov    WORD PTR [rbx],ax
   140016900:	add    rbx,0x2
   140016904:	mov    r12d,ebx
   140016907:	sub    r12d,r14d
   14001690a:	mov    ebx,DWORD PTR [rbp-0x20]
   14001690d:	mov    r13,QWORD PTR [rbp+0x50]
   140016911:	cmp    r14,r13
   140016914:	je     0x14001691e
   140016916:	mov    rcx,r14
   140016919:	call   0x14000b460
   14001691e:	cmp    ebx,0xfffffffe
   140016921:	cmove  ebx,r12d
   140016925:	mov    eax,ebx
   140016927:	jmp    0x140016982
   140016929:	call   QWORD PTR [rip+0x3741]        # 0x14001a070
   14001692f:	cmp    eax,0x5
   140016932:	jne    0x14001694f
   140016934:	call   0x14000bdc0
   140016939:	mov    DWORD PTR [rax],0x9
   14001693f:	call   0x14000bde0
   140016944:	mov    DWORD PTR [rax],0x5
   14001694a:	jmp    0x140016690
   14001694f:	cmp    eax,0x6d
   140016952:	jne    0x140016958
   140016954:	mov    ebx,edi
   140016956:	jmp    0x14001690d
   140016958:	mov    ecx,eax
   14001695a:	call   0x14000be00
   14001695f:	jmp    0x140016690
   140016964:	xor    eax,eax
   140016966:	jmp    0x140016982
   140016968:	call   0x14000bde0
   14001696d:	mov    DWORD PTR [rax],edi
   14001696f:	call   0x14000bdc0
   140016974:	mov    DWORD PTR [rax],0x9
   14001697a:	call   0x14000d01c
   14001697f:	or     eax,0xffffffff
   140016982:	add    rsp,0x58
   140016986:	pop    r15
   140016988:	pop    r14
   14001698a:	pop    r13
   14001698c:	pop    r12
   14001698e:	pop    rdi
   14001698f:	pop    rsi
   140016990:	pop    rbx
   140016991:	pop    rbp
   140016992:	ret    
   140016993:	int3   
   140016994:	mov    QWORD PTR [rsp+0x10],rbx
   140016999:	mov    QWORD PTR [rsp+0x18],rsi
   14001699e:	mov    DWORD PTR [rsp+0x8],ecx
   1400169a2:	push   rdi
   1400169a3:	push   r12
   1400169a5:	push   r13
   1400169a7:	push   r14
   1400169a9:	push   r15
   1400169ab:	sub    rsp,0x20
   1400169af:	mov    esi,r8d
   1400169b2:	mov    r13,rdx
   1400169b5:	movsxd rdi,ecx
   1400169b8:	cmp    edi,0xfffffffe
   1400169bb:	jne    0x1400169d6
   1400169bd:	call   0x14000bde0
   1400169c2:	xor    ebx,ebx
   1400169c4:	mov    DWORD PTR [rax],ebx
   1400169c6:	call   0x14000bdc0
   1400169cb:	mov    DWORD PTR [rax],0x9
   1400169d1:	jmp    0x140016a94
   1400169d6:	xor    ebx,ebx
   1400169d8:	test   ecx,ecx
   1400169da:	js     0x140016a7d
   1400169e0:	cmp    edi,DWORD PTR [rip+0xf086]        # 0x140025a6c
   1400169e6:	jae    0x140016a7d
   1400169ec:	mov    r12,rdi
   1400169ef:	mov    r14,rdi
   1400169f2:	sar    r14,0x5
   1400169f6:	lea    r15,[rip+0xf083]        # 0x140025a80
   1400169fd:	and    r12d,0x1f
   140016a01:	imul   r12,r12,0x58
   140016a05:	mov    rax,QWORD PTR [r15+r14*8]
   140016a09:	movsx  ecx,BYTE PTR [rax+r12*1+0x8]
   140016a0f:	and    ecx,0x1
   140016a12:	je     0x140016a7d
   140016a14:	mov    eax,ebx
   140016a16:	cmp    r8d,0x7fffffff
   140016a1d:	setbe  al
   140016a20:	test   eax,eax
   140016a22:	jne    0x140016a38
   140016a24:	call   0x14000bde0
   140016a29:	mov    DWORD PTR [rax],ebx
   140016a2b:	call   0x14000bdc0
   140016a30:	mov    DWORD PTR [rax],0x16
   140016a36:	jmp    0x140016a8f
   140016a38:	mov    ecx,edi
   140016a3a:	call   0x1400116d4
   140016a3f:	nop
   140016a40:	mov    rax,QWORD PTR [r15+r14*8]
   140016a44:	test   BYTE PTR [rax+r12*1+0x8],0x1
   140016a4a:	je     0x140016a5d
   140016a4c:	mov    r8d,esi
   140016a4f:	mov    rdx,r13
   140016a52:	mov    ecx,edi
   140016a54:	call   0x140016270
   140016a59:	mov    ebx,eax
   140016a5b:	jmp    0x140016a72
   140016a5d:	call   0x14000bdc0
   140016a62:	mov    DWORD PTR [rax],0x9
   140016a68:	call   0x14000bde0
   140016a6d:	mov    DWORD PTR [rax],ebx
   140016a6f:	or     ebx,0xffffffff
   140016a72:	mov    ecx,edi
   140016a74:	call   0x14001177c
   140016a79:	mov    eax,ebx
   140016a7b:	jmp    0x140016a97
   140016a7d:	call   0x14000bde0
   140016a82:	mov    DWORD PTR [rax],ebx
   140016a84:	call   0x14000bdc0
   140016a89:	mov    DWORD PTR [rax],0x9
   140016a8f:	call   0x14000d01c
   140016a94:	or     eax,0xffffffff
   140016a97:	mov    rbx,QWORD PTR [rsp+0x58]
   140016a9c:	mov    rsi,QWORD PTR [rsp+0x60]
   140016aa1:	add    rsp,0x20
   140016aa5:	pop    r15
   140016aa7:	pop    r14
   140016aa9:	pop    r13
   140016aab:	pop    r12
   140016aad:	pop    rdi
   140016aae:	ret    
   140016aaf:	int3   
   140016ab0:	mov    rax,rsp
   140016ab3:	mov    QWORD PTR [rax+0x8],rbx
   140016ab7:	mov    QWORD PTR [rax+0x10],rsi
   140016abb:	mov    QWORD PTR [rax+0x18],rdi
   140016abf:	mov    QWORD PTR [rax+0x20],r12
   140016ac3:	push   rbp
   140016ac4:	mov    rbp,rsp
   140016ac7:	sub    rsp,0x40
   140016acb:	mov    rdi,rcx
   140016ace:	mov    rsi,rdx
   140016ad1:	lea    rcx,[rbp-0x20]
   140016ad5:	mov    rdx,r9
   140016ad8:	mov    rbx,r8
   140016adb:	call   0x14000c6f4
   140016ae0:	xor    r12d,r12d
   140016ae3:	test   rbx,rbx
   140016ae6:	jne    0x140016b00
   140016ae8:	cmp    BYTE PTR [rbp-0x8],r12b
   140016aec:	je     0x140016af9
   140016aee:	mov    rax,QWORD PTR [rbp-0x10]
   140016af2:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140016af9:	xor    eax,eax
   140016afb:	jmp    0x140016c7c
   140016b00:	mov    rcx,QWORD PTR [rbp-0x18]
   140016b04:	cmp    DWORD PTR [rcx+0x8],r12d
   140016b08:	jne    0x140016b1d
   140016b0a:	mov    r8,rbx
   140016b0d:	mov    rdx,rsi
   140016b10:	mov    rcx,rdi
   140016b13:	call   0x1400194dc
   140016b18:	jmp    0x140016c6b
   140016b1d:	test   rdi,rdi
   140016b20:	jne    0x140016b4d
   140016b22:	call   0x14000bdc0
   140016b27:	mov    DWORD PTR [rax],0x16
   140016b2d:	call   0x14000d01c
   140016b32:	cmp    BYTE PTR [rbp-0x8],r12b
   140016b36:	je     0x140016b43
   140016b38:	mov    rax,QWORD PTR [rbp-0x10]
   140016b3c:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140016b43:	mov    eax,0x7fffffff
   140016b48:	jmp    0x140016c7c
   140016b4d:	test   rsi,rsi
   140016b50:	je     0x140016b22
   140016b52:	mov    r9b,0x4
   140016b55:	movzx  edx,BYTE PTR [rdi]
   140016b58:	dec    rbx
   140016b5b:	inc    rdi
   140016b5e:	test   BYTE PTR [rdx+rcx*1+0x1d],r9b
   140016b63:	je     0x140016bbc
   140016b65:	test   rbx,rbx
   140016b68:	jne    0x140016b81
   140016b6a:	movzx  eax,BYTE PTR [rsi]
   140016b6d:	movzx  edx,r12w
   140016b71:	test   BYTE PTR [rax+rcx*1+0x1d],r9b
   140016b76:	jne    0x140016ae8
   140016b7c:	jmp    0x140016c48
   140016b81:	cmp    BYTE PTR [rdi],r12b
   140016b84:	jne    0x140016b8b
   140016b86:	mov    edx,r12d
   140016b89:	jmp    0x140016bce
   140016b8b:	movzx  eax,BYTE PTR [rdi]
   140016b8e:	shl    dx,0x8
   140016b92:	inc    rdi
   140016b95:	or     dx,ax
   140016b98:	cmp    dx,WORD PTR [rcx+0x10]
   140016b9c:	jb     0x140016baa
   140016b9e:	cmp    dx,WORD PTR [rcx+0x12]
   140016ba2:	ja     0x140016baa
   140016ba4:	add    dx,WORD PTR [rcx+0x14]
   140016ba8:	jmp    0x140016bce
   140016baa:	cmp    dx,WORD PTR [rcx+0x16]
   140016bae:	jb     0x140016bce
   140016bb0:	cmp    dx,WORD PTR [rcx+0x18]
   140016bb4:	ja     0x140016bce
   140016bb6:	add    dx,WORD PTR [rcx+0x1a]
   140016bba:	jmp    0x140016bce
   140016bbc:	movzx  eax,dx
   140016bbf:	test   BYTE PTR [rax+rcx*1+0x1d],0x10
   140016bc4:	je     0x140016bce
   140016bc6:	movzx  edx,BYTE PTR [rax+rcx*1+0x11d]
   140016bce:	movzx  r8d,BYTE PTR [rsi]
   140016bd2:	inc    rsi
   140016bd5:	mov    eax,r8d
   140016bd8:	test   BYTE PTR [r8+rcx*1+0x1d],r9b
   140016bdd:	je     0x140016c2f
   140016bdf:	test   rbx,rbx
   140016be2:	jne    0x140016be9
   140016be4:	mov    eax,r12d
   140016be7:	jmp    0x140016c48
   140016be9:	dec    rbx
   140016bec:	cmp    BYTE PTR [rsi],r12b
   140016bef:	jne    0x140016bf7
   140016bf1:	movzx  eax,r12w
   140016bf5:	jmp    0x140016c48
   140016bf7:	movzx  eax,BYTE PTR [rsi]
   140016bfa:	shl    r8w,0x8
   140016bff:	inc    rsi
   140016c02:	or     r8w,ax
   140016c06:	movzx  eax,r8w
   140016c0a:	cmp    r8w,WORD PTR [rcx+0x10]
   140016c0f:	jb     0x140016c1d
   140016c11:	cmp    ax,WORD PTR [rcx+0x12]
   140016c15:	ja     0x140016c1d
   140016c17:	add    ax,WORD PTR [rcx+0x14]
   140016c1b:	jmp    0x140016c48
   140016c1d:	cmp    ax,WORD PTR [rcx+0x16]
   140016c21:	jb     0x140016c48
   140016c23:	cmp    ax,WORD PTR [rcx+0x18]
   140016c27:	ja     0x140016c48
   140016c29:	add    ax,WORD PTR [rcx+0x1a]
   140016c2d:	jmp    0x140016c48
   140016c2f:	movzx  eax,r8w
   140016c33:	test   BYTE PTR [rax+rcx*1+0x1d],0x10
   140016c38:	je     0x140016c44
   140016c3a:	movzx  eax,BYTE PTR [rax+rcx*1+0x11d]
   140016c42:	jmp    0x140016c48
   140016c44:	movzx  eax,r8w
   140016c48:	cmp    ax,dx
   140016c4b:	jne    0x140016c64
   140016c4d:	test   dx,dx
   140016c50:	je     0x140016ae8
   140016c56:	test   rbx,rbx
   140016c59:	jne    0x140016b55
   140016c5f:	jmp    0x140016ae8
   140016c64:	sbb    eax,eax
   140016c66:	and    eax,0x2
   140016c69:	dec    eax
   140016c6b:	cmp    BYTE PTR [rbp-0x8],r12b
   140016c6f:	je     0x140016c7c
   140016c71:	mov    rcx,QWORD PTR [rbp-0x10]
   140016c75:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140016c7c:	mov    rbx,QWORD PTR [rsp+0x50]
   140016c81:	mov    rsi,QWORD PTR [rsp+0x58]
   140016c86:	mov    rdi,QWORD PTR [rsp+0x60]
   140016c8b:	mov    r12,QWORD PTR [rsp+0x68]
   140016c90:	add    rsp,0x40
   140016c94:	pop    rbp
   140016c95:	ret    
   140016c96:	int3   
   140016c97:	int3   
   140016c98:	xor    r9d,r9d
   140016c9b:	jmp    0x140016ab0
   140016ca0:	mov    rax,rsp
   140016ca3:	mov    QWORD PTR [rax+0x8],rbx
   140016ca7:	mov    QWORD PTR [rax+0x10],rsi
   140016cab:	mov    QWORD PTR [rax+0x18],rdi
   140016caf:	mov    QWORD PTR [rax+0x20],r12
   140016cb3:	push   rbp
   140016cb4:	mov    rbp,rsp
   140016cb7:	sub    rsp,0x40
   140016cbb:	xor    r12d,r12d
   140016cbe:	mov    rbx,r8
   140016cc1:	mov    rsi,rdx
   140016cc4:	mov    rdi,rcx
   140016cc7:	test   r8,r8
   140016cca:	jne    0x140016cd3
   140016ccc:	xor    eax,eax
   140016cce:	jmp    0x140016de6
   140016cd3:	lea    rcx,[rbp-0x20]
   140016cd7:	mov    rdx,r9
   140016cda:	call   0x14000c6f4
   140016cdf:	mov    r11,QWORD PTR [rbp-0x18]
   140016ce3:	cmp    DWORD PTR [r11+0x8],r12d
   140016ce7:	jne    0x140016cfc
   140016ce9:	mov    r8,rbx
   140016cec:	mov    rdx,rsi
   140016cef:	mov    rcx,rdi
   140016cf2:	call   0x14000b570
   140016cf7:	jmp    0x140016dd5
   140016cfc:	test   rdi,rdi
   140016cff:	jne    0x140016d2c
   140016d01:	call   0x14000bdc0
   140016d06:	mov    DWORD PTR [rax],0x16
   140016d0c:	call   0x14000d01c
   140016d11:	cmp    BYTE PTR [rbp-0x8],r12b
   140016d15:	je     0x140016d22
   140016d17:	mov    rax,QWORD PTR [rbp-0x10]
   140016d1b:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140016d22:	mov    eax,0x7fffffff
   140016d27:	jmp    0x140016de6
   140016d2c:	test   rsi,rsi
   140016d2f:	je     0x140016d01
   140016d31:	mov    r8b,0x4
   140016d34:	movzx  ecx,BYTE PTR [rdi]
   140016d37:	dec    rbx
   140016d3a:	inc    rdi
   140016d3d:	test   BYTE PTR [rcx+r11*1+0x1d],r8b
   140016d42:	je     0x140016d73
   140016d44:	test   rbx,rbx
   140016d47:	jne    0x140016d5b
   140016d49:	movzx  eax,BYTE PTR [rsi]
   140016d4c:	mov    ecx,r12d
   140016d4f:	test   BYTE PTR [rax+r11*1+0x1d],r8b
   140016d54:	jne    0x140016db4
   140016d56:	movzx  edx,ax
   140016d59:	jmp    0x140016da5
   140016d5b:	cmp    BYTE PTR [rdi],r12b
   140016d5e:	jne    0x140016d66
   140016d60:	movzx  ecx,r12w
   140016d64:	jmp    0x140016d73
   140016d66:	movzx  eax,BYTE PTR [rdi]
   140016d69:	shl    cx,0x8
   140016d6d:	or     cx,ax
   140016d70:	inc    rdi
   140016d73:	movzx  edx,BYTE PTR [rsi]
   140016d76:	inc    rsi
   140016d79:	test   BYTE PTR [rdx+r11*1+0x1d],r8b
   140016d7e:	je     0x140016da5
   140016d80:	test   rbx,rbx
   140016d83:	jne    0x140016d8a
   140016d85:	mov    edx,r12d
   140016d88:	jmp    0x140016da5
   140016d8a:	dec    rbx
   140016d8d:	cmp    BYTE PTR [rsi],r12b
   140016d90:	jne    0x140016d98
   140016d92:	movzx  edx,r12w
   140016d96:	jmp    0x140016da5
   140016d98:	movzx  eax,BYTE PTR [rsi]
   140016d9b:	shl    dx,0x8
   140016d9f:	or     dx,ax
   140016da2:	inc    rsi
   140016da5:	cmp    dx,cx
   140016da8:	jne    0x140016dce
   140016daa:	test   cx,cx
   140016dad:	je     0x140016db4
   140016daf:	test   rbx,rbx
   140016db2:	jne    0x140016d34
   140016db4:	cmp    BYTE PTR [rbp-0x8],r12b
   140016db8:	je     0x140016ccc
   140016dbe:	mov    rax,QWORD PTR [rbp-0x10]
   140016dc2:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140016dc9:	jmp    0x140016ccc
   140016dce:	sbb    eax,eax
   140016dd0:	and    eax,0x2
   140016dd3:	dec    eax
   140016dd5:	cmp    BYTE PTR [rbp-0x8],r12b
   140016dd9:	je     0x140016de6
   140016ddb:	mov    rcx,QWORD PTR [rbp-0x10]
   140016ddf:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140016de6:	mov    rbx,QWORD PTR [rsp+0x50]
   140016deb:	mov    rsi,QWORD PTR [rsp+0x58]
   140016df0:	mov    rdi,QWORD PTR [rsp+0x60]
   140016df5:	mov    r12,QWORD PTR [rsp+0x68]
   140016dfa:	add    rsp,0x40
   140016dfe:	pop    rbp
   140016dff:	ret    
   140016e00:	xor    r9d,r9d
   140016e03:	jmp    0x140016ca0
   140016e08:	mov    WORD PTR [rsp+0x8],cx
   140016e0d:	sub    rsp,0x38
   140016e11:	mov    rcx,QWORD PTR [rip+0xd8f0]        # 0x140024708
   140016e18:	cmp    rcx,0xfffffffffffffffe
   140016e1c:	jne    0x140016e2a
   140016e1e:	call   0x14001952c
   140016e23:	mov    rcx,QWORD PTR [rip+0xd8de]        # 0x140024708
   140016e2a:	cmp    rcx,0xffffffffffffffff
   140016e2e:	jne    0x140016e37
   140016e30:	mov    eax,0xffff
   140016e35:	jmp    0x140016e5c
   140016e37:	and    QWORD PTR [rsp+0x20],0x0
   140016e3d:	lea    r9,[rsp+0x48]
   140016e42:	lea    rdx,[rsp+0x40]
   140016e47:	mov    r8d,0x1
   140016e4d:	call   QWORD PTR [rip+0x34ad]        # 0x14001a300
   140016e53:	test   eax,eax
   140016e55:	je     0x140016e30
   140016e57:	movzx  eax,WORD PTR [rsp+0x40]
   140016e5c:	add    rsp,0x38
   140016e60:	ret    
   140016e61:	int3   
   140016e62:	int3   
   140016e63:	int3   
   140016e64:	int3   
   140016e65:	int3   
   140016e66:	int3   
   140016e67:	int3   
   140016e68:	int3   
   140016e69:	int3   
   140016e6a:	int3   
   140016e6b:	int3   
   140016e6c:	int3   
   140016e6d:	int3   
   140016e6e:	int3   
   140016e6f:	int3   
   140016e70:	int3   
   140016e71:	int3   
   140016e72:	int3   
   140016e73:	int3   
   140016e74:	int3   
   140016e75:	int3   
   140016e76:	data16 nop WORD PTR [rax+rax*1+0x0]
   140016e80:	sub    rsp,0x10
   140016e84:	mov    QWORD PTR [rsp],r10
   140016e88:	mov    QWORD PTR [rsp+0x8],r11
   140016e8d:	xor    r11,r11
   140016e90:	lea    r10,[rsp+0x18]
   140016e95:	sub    r10,rax
   140016e98:	cmovb  r10,r11
   140016e9c:	mov    r11,QWORD PTR gs:0x10
   140016ea5:	cmp    r10,r11
   140016ea8:	jae    0x140016ec0
   140016eaa:	and    r10w,0xf000
   140016eb0:	lea    r11,[r11-0x1000]
   140016eb7:	mov    BYTE PTR [r11],0x0
   140016ebb:	cmp    r10,r11
   140016ebe:	jne    0x140016eb0
   140016ec0:	mov    r10,QWORD PTR [rsp]
   140016ec4:	mov    r11,QWORD PTR [rsp+0x8]
   140016ec9:	add    rsp,0x10
   140016ecd:	ret    
   140016ece:	int3   
   140016ecf:	int3   
   140016ed0:	rex push rbx
   140016ed2:	sub    rsp,0x30
   140016ed6:	mov    rax,QWORD PTR [rip+0xc1e3]        # 0x1400230c0
   140016edd:	xor    rax,rsp
   140016ee0:	mov    QWORD PTR [rsp+0x28],rax
   140016ee5:	test   ecx,ecx
   140016ee7:	jne    0x140016ef0
   140016ee9:	mov    eax,0x1
   140016eee:	jmp    0x140016f21
   140016ef0:	add    cx,0x40
   140016ef4:	mov    eax,0x3a
   140016ef9:	mov    DWORD PTR [rsp+0x24],0x5c
   140016f01:	mov    WORD PTR [rsp+0x20],cx
   140016f06:	lea    rcx,[rsp+0x20]
   140016f0b:	mov    WORD PTR [rsp+0x22],ax
   140016f10:	call   QWORD PTR [rip+0x33f2]        # 0x14001a308
   140016f16:	test   eax,eax
   140016f18:	je     0x140016f1f
   140016f1a:	cmp    eax,0x1
   140016f1d:	jne    0x140016ee9
   140016f1f:	xor    eax,eax
   140016f21:	mov    rcx,QWORD PTR [rsp+0x28]
   140016f26:	xor    rcx,rsp
   140016f29:	call   0x14000a820
   140016f2e:	add    rsp,0x30
   140016f32:	pop    rbx
   140016f33:	ret    
   140016f34:	mov    QWORD PTR [rsp+0x10],rbx
   140016f39:	push   rbp
   140016f3a:	push   rsi
   140016f3b:	push   rdi
   140016f3c:	sub    rsp,0x20
   140016f40:	mov    esi,r8d
   140016f43:	mov    rbx,rdx
   140016f46:	mov    edi,ecx
   140016f48:	test   ecx,ecx
   140016f4a:	je     0x140016f75
   140016f4c:	call   0x140016ed0
   140016f51:	test   eax,eax
   140016f53:	jne    0x140016f7c
   140016f55:	call   0x14000bde0
   140016f5a:	mov    DWORD PTR [rax],0xf
   140016f60:	call   0x14000bdc0
   140016f65:	mov    DWORD PTR [rax],0xd
   140016f6b:	call   0x14000d01c
   140016f70:	jmp    0x140017050
   140016f75:	call   0x140013408
   140016f7a:	mov    edi,eax
   140016f7c:	test   rbx,rbx
   140016f7f:	je     0x140016f99
   140016f81:	test   esi,esi
   140016f83:	jg     0x140016f92
   140016f85:	call   0x14000bdc0
   140016f8a:	mov    DWORD PTR [rax],0x16
   140016f90:	jmp    0x140016f6b
   140016f92:	mov    ebp,esi
   140016f94:	mov    BYTE PTR [rbx],0x0
   140016f97:	jmp    0x140016f9b
   140016f99:	xor    ebp,ebp
   140016f9b:	test   edi,edi
   140016f9d:	je     0x140016fb6
   140016f9f:	add    dil,0x40
   140016fa3:	mov    WORD PTR [rsp+0x41],0x2e3a
   140016faa:	mov    BYTE PTR [rsp+0x43],0x0
   140016faf:	mov    BYTE PTR [rsp+0x40],dil
   140016fb4:	jmp    0x140016fbd
   140016fb6:	mov    WORD PTR [rsp+0x40],0x2e
   140016fbd:	lea    r9,[rsp+0x58]
   140016fc2:	lea    rcx,[rsp+0x40]
   140016fc7:	mov    r8,rbx
   140016fca:	mov    edx,ebp
   140016fcc:	call   QWORD PTR [rip+0x32ae]        # 0x14001a280
   140016fd2:	test   eax,eax
   140016fd4:	je     0x140017043
   140016fd6:	test   rbx,rbx
   140016fd9:	je     0x140016ff4
   140016fdb:	cmp    eax,ebp
   140016fdd:	jge    0x140016fe4
   140016fdf:	mov    rax,rbx
   140016fe2:	jmp    0x140017052
   140016fe4:	call   0x14000bdc0
   140016fe9:	mov    DWORD PTR [rax],0x22
   140016fef:	mov    BYTE PTR [rbx],0x0
   140016ff2:	jmp    0x140017050
   140016ff4:	cmp    eax,esi
   140016ff6:	mov    edx,0x1
   140016ffb:	cmovg  esi,eax
   140016ffe:	movsxd rcx,esi
   140017001:	call   0x14000eb14
   140017006:	mov    rbx,rax
   140017009:	test   rax,rax
   14001700c:	jne    0x140017026
   14001700e:	call   0x14000bdc0
   140017013:	mov    DWORD PTR [rax],0xc
   140017019:	call   0x14000bde0
   14001701e:	mov    DWORD PTR [rax],0x8
   140017024:	jmp    0x140017050
   140017026:	lea    r9,[rsp+0x58]
   14001702b:	lea    rcx,[rsp+0x40]
   140017030:	mov    r8,rax
   140017033:	mov    edx,esi
   140017035:	call   QWORD PTR [rip+0x3245]        # 0x14001a280
   14001703b:	test   eax,eax
   14001703d:	je     0x140017043
   14001703f:	cmp    eax,esi
   140017041:	jl     0x140016fdf
   140017043:	call   QWORD PTR [rip+0x3027]        # 0x14001a070
   140017049:	mov    ecx,eax
   14001704b:	call   0x14000be00
   140017050:	xor    eax,eax
   140017052:	mov    rbx,QWORD PTR [rsp+0x48]
   140017057:	add    rsp,0x20
   14001705b:	pop    rdi
   14001705c:	pop    rsi
   14001705d:	pop    rbp
   14001705e:	ret    
   14001705f:	int3   
   140017060:	mov    QWORD PTR [rsp+0x8],rbx
   140017065:	push   rdi
   140017066:	sub    rsp,0x20
   14001706a:	mov    ebx,edx
   14001706c:	mov    rdi,rcx
   14001706f:	mov    ecx,0x7
   140017074:	call   0x14000cb28
   140017079:	nop
   14001707a:	mov    r8d,ebx
   14001707d:	mov    rdx,rdi
   140017080:	xor    ecx,ecx
   140017082:	call   0x140016f34
   140017087:	mov    rbx,rax
   14001708a:	mov    ecx,0x7
   14001708f:	call   0x14000ca28
   140017094:	mov    rax,rbx
   140017097:	mov    rbx,QWORD PTR [rsp+0x30]
   14001709c:	add    rsp,0x20
   1400170a0:	pop    rdi
   1400170a1:	ret    
   1400170a2:	int3   
   1400170a3:	int3   
   1400170a4:	mov    QWORD PTR [rsp+0x10],rbx
   1400170a9:	mov    QWORD PTR [rsp+0x18],rsi
   1400170ae:	push   rbp
   1400170af:	push   rdi
   1400170b0:	push   r12
   1400170b2:	push   r14
   1400170b4:	push   r15
   1400170b6:	mov    rbp,rsp
   1400170b9:	sub    rsp,0x70
   1400170bd:	mov    rdi,rcx
   1400170c0:	mov    rsi,rdx
   1400170c3:	lea    rcx,[rbp-0x20]
   1400170c7:	mov    rdx,r8
   1400170ca:	call   0x14000c6f4
   1400170cf:	xor    r12d,r12d
   1400170d2:	test   rdi,rdi
   1400170d5:	jne    0x140017102
   1400170d7:	call   0x14000bdc0
   1400170dc:	mov    DWORD PTR [rax],0x16
   1400170e2:	call   0x14000d01c
   1400170e7:	cmp    BYTE PTR [rbp-0x8],r12b
   1400170eb:	je     0x1400170f8
   1400170ed:	mov    rax,QWORD PTR [rbp-0x10]
   1400170f1:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400170f8:	mov    eax,0x7fffffff
   1400170fd:	jmp    0x140017296
   140017102:	test   rsi,rsi
   140017105:	je     0x1400170d7
   140017107:	mov    rdx,QWORD PTR [rbp-0x18]
   14001710b:	cmp    DWORD PTR [rdx+0x8],r12d
   14001710f:	jne    0x140017125
   140017111:	lea    r8,[rbp-0x20]
   140017115:	mov    rdx,rsi
   140017118:	mov    rcx,rdi
   14001711b:	call   0x1400195c8
   140017120:	jmp    0x140017285
   140017125:	mov    r14d,0x2
   14001712b:	mov    r15d,0x100
   140017131:	movzx  ebx,BYTE PTR [rdi]
   140017134:	inc    rdi
   140017137:	test   BYTE PTR [rbx+rdx*1+0x1d],0x4
   14001713c:	je     0x1400171ae
   14001713e:	cmp    BYTE PTR [rdi],r12b
   140017141:	jne    0x140017149
   140017143:	movzx  ebx,r12w
   140017147:	jmp    0x1400171c0
   140017149:	mov    eax,DWORD PTR [rdx+0x4]
   14001714c:	mov    edx,DWORD PTR [rdx+0xc]
   14001714f:	mov    DWORD PTR [rsp+0x40],0x1
   140017157:	mov    DWORD PTR [rsp+0x38],eax
   14001715b:	lea    rax,[rbp+0x30]
   14001715f:	mov    DWORD PTR [rsp+0x30],r14d
   140017164:	mov    QWORD PTR [rsp+0x28],rax
   140017169:	lea    r9,[rdi-0x1]
   14001716d:	lea    rcx,[rbp-0x20]
   140017171:	mov    r8d,0x200
   140017177:	mov    DWORD PTR [rsp+0x20],r14d
   14001717c:	call   0x14001862c
   140017181:	cmp    eax,0x1
   140017184:	jne    0x14001718c
   140017186:	movzx  ebx,BYTE PTR [rbp+0x30]
   14001718a:	jmp    0x1400171a5
   14001718c:	cmp    eax,r14d
   14001718f:	jne    0x14001726e
   140017195:	movzx  ebx,BYTE PTR [rbp+0x30]
   140017199:	movzx  eax,BYTE PTR [rbp+0x31]
   14001719d:	imul   bx,r15w
   1400171a2:	add    bx,ax
   1400171a5:	mov    rdx,QWORD PTR [rbp-0x18]
   1400171a9:	inc    rdi
   1400171ac:	jmp    0x1400171c0
   1400171ae:	movzx  eax,bx
   1400171b1:	test   BYTE PTR [rax+rdx*1+0x1d],0x10
   1400171b6:	je     0x1400171c0
   1400171b8:	movzx  ebx,BYTE PTR [rax+rdx*1+0x11d]
   1400171c0:	movzx  ecx,BYTE PTR [rsi]
   1400171c3:	inc    rsi
   1400171c6:	test   BYTE PTR [rcx+rdx*1+0x1d],0x4
   1400171cb:	je     0x140017239
   1400171cd:	cmp    BYTE PTR [rsi],r12b
   1400171d0:	jne    0x1400171d8
   1400171d2:	movzx  ecx,r12w
   1400171d6:	jmp    0x14001724b
   1400171d8:	mov    eax,DWORD PTR [rdx+0x4]
   1400171db:	mov    edx,DWORD PTR [rdx+0xc]
   1400171de:	mov    DWORD PTR [rsp+0x40],0x1
   1400171e6:	mov    DWORD PTR [rsp+0x38],eax
   1400171ea:	lea    rax,[rbp+0x30]
   1400171ee:	mov    DWORD PTR [rsp+0x30],r14d
   1400171f3:	mov    QWORD PTR [rsp+0x28],rax
   1400171f8:	lea    r9,[rsi-0x1]
   1400171fc:	lea    rcx,[rbp-0x20]
   140017200:	mov    r8d,0x200
   140017206:	mov    DWORD PTR [rsp+0x20],r14d
   14001720b:	call   0x14001862c
   140017210:	cmp    eax,0x1
   140017213:	jne    0x14001721b
   140017215:	movzx  ecx,BYTE PTR [rbp+0x30]
   140017219:	jmp    0x140017230
   14001721b:	cmp    eax,r14d
   14001721e:	jne    0x14001726e
   140017220:	movzx  ecx,BYTE PTR [rbp+0x30]
   140017224:	movzx  eax,BYTE PTR [rbp+0x31]
   140017228:	imul   cx,r15w
   14001722d:	add    cx,ax
   140017230:	mov    rdx,QWORD PTR [rbp-0x18]
   140017234:	inc    rsi
   140017237:	jmp    0x14001724b
   140017239:	movzx  eax,cx
   14001723c:	test   BYTE PTR [rax+rdx*1+0x1d],0x10
   140017241:	je     0x14001724b
   140017243:	movzx  ecx,BYTE PTR [rax+rdx*1+0x11d]
   14001724b:	cmp    cx,bx
   14001724e:	jne    0x14001727e
   140017250:	test   bx,bx
   140017253:	jne    0x140017131
   140017259:	cmp    BYTE PTR [rbp-0x8],r12b
   14001725d:	je     0x14001726a
   14001725f:	mov    rax,QWORD PTR [rbp-0x10]
   140017263:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001726a:	xor    eax,eax
   14001726c:	jmp    0x140017296
   14001726e:	call   0x14000bdc0
   140017273:	mov    DWORD PTR [rax],0x16
   140017279:	jmp    0x1400170e7
   14001727e:	sbb    eax,eax
   140017280:	and    eax,r14d
   140017283:	dec    eax
   140017285:	cmp    BYTE PTR [rbp-0x8],r12b
   140017289:	je     0x140017296
   14001728b:	mov    rcx,QWORD PTR [rbp-0x10]
   14001728f:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140017296:	lea    r11,[rsp+0x70]
   14001729b:	mov    rbx,QWORD PTR [r11+0x38]
   14001729f:	mov    rsi,QWORD PTR [r11+0x40]
   1400172a3:	mov    rsp,r11
   1400172a6:	pop    r15
   1400172a8:	pop    r14
   1400172aa:	pop    r12
   1400172ac:	pop    rdi
   1400172ad:	pop    rbp
   1400172ae:	ret    
   1400172af:	int3   
   1400172b0:	xor    r8d,r8d
   1400172b3:	jmp    0x1400170a4
   1400172b8:	mov    QWORD PTR [rsp+0x8],rbx
   1400172bd:	mov    QWORD PTR [rsp+0x10],rsi
   1400172c2:	push   rdi
   1400172c3:	sub    rsp,0x40
   1400172c7:	mov    rbx,rcx
   1400172ca:	mov    esi,edx
   1400172cc:	lea    rcx,[rsp+0x20]
   1400172d1:	mov    rdx,r8
   1400172d4:	xor    edi,edi
   1400172d6:	call   0x14000c6f4
   1400172db:	test   rbx,rbx
   1400172de:	jne    0x140017307
   1400172e0:	call   0x14000bdc0
   1400172e5:	mov    DWORD PTR [rax],0x16
   1400172eb:	call   0x14000d01c
   1400172f0:	cmp    BYTE PTR [rsp+0x38],dil
   1400172f5:	je     0x140017303
   1400172f7:	mov    rax,QWORD PTR [rsp+0x30]
   1400172fc:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140017303:	xor    eax,eax
   140017305:	jmp    0x140017385
   140017307:	mov    r8,QWORD PTR [rsp+0x28]
   14001730c:	cmp    DWORD PTR [r8+0x8],edi
   140017310:	jne    0x140017331
   140017312:	mov    edx,esi
   140017314:	mov    rcx,rbx
   140017317:	call   0x14000bb28
   14001731c:	cmp    BYTE PTR [rsp+0x38],dil
   140017321:	je     0x140017385
   140017323:	mov    rcx,QWORD PTR [rsp+0x30]
   140017328:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001732f:	jmp    0x140017385
   140017331:	movzx  ecx,BYTE PTR [rbx]
   140017334:	mov    edx,ecx
   140017336:	test   BYTE PTR [rcx+r8*1+0x1d],0x4
   14001733c:	je     0x140017363
   14001733e:	inc    rbx
   140017341:	mov    cl,BYTE PTR [rbx]
   140017343:	test   cl,cl
   140017345:	je     0x140017359
   140017347:	shl    edx,0x8
   14001734a:	movzx  eax,cl
   14001734d:	or     edx,eax
   14001734f:	cmp    esi,edx
   140017351:	jne    0x140017369
   140017353:	lea    rdi,[rbx-0x1]
   140017357:	jmp    0x140017369
   140017359:	test   rdi,rdi
   14001735c:	jne    0x140017369
   14001735e:	mov    rdi,rbx
   140017361:	jmp    0x140017369
   140017363:	cmp    esi,ecx
   140017365:	cmove  rdi,rbx
   140017369:	inc    rbx
   14001736c:	test   cl,cl
   14001736e:	jne    0x140017331
   140017370:	cmp    BYTE PTR [rsp+0x38],cl
   140017374:	je     0x140017382
   140017376:	mov    rcx,QWORD PTR [rsp+0x30]
   14001737b:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140017382:	mov    rax,rdi
   140017385:	mov    rbx,QWORD PTR [rsp+0x50]
   14001738a:	mov    rsi,QWORD PTR [rsp+0x58]
   14001738f:	add    rsp,0x40
   140017393:	pop    rdi
   140017394:	ret    
   140017395:	int3   
   140017396:	int3   
   140017397:	int3   
   140017398:	xor    r8d,r8d
   14001739b:	jmp    0x1400172b8
   1400173a0:	mov    rax,rsp
   1400173a3:	mov    QWORD PTR [rax+0x8],rbx
   1400173a7:	mov    QWORD PTR [rax+0x10],rbp
   1400173ab:	mov    QWORD PTR [rax+0x18],rsi
   1400173af:	mov    QWORD PTR [rax+0x20],rdi
   1400173b3:	push   r12
   1400173b5:	sub    rsp,0x20
   1400173b9:	mov    r10,QWORD PTR [r9+0x38]
   1400173bd:	mov    rsi,rdx
   1400173c0:	mov    r12,r8
   1400173c3:	mov    eax,DWORD PTR [r10]
   1400173c6:	mov    rbp,rcx
   1400173c9:	mov    rdx,r9
   1400173cc:	add    rax,rax
   1400173cf:	mov    rcx,rsi
   1400173d2:	mov    rdi,r9
   1400173d5:	lea    rbx,[r10+rax*8+0x4]
   1400173da:	mov    r8,rbx
   1400173dd:	call   0x14000a61c
   1400173e2:	mov    r11d,DWORD PTR [rbx]
   1400173e5:	mov    r10d,DWORD PTR [rbp+0x4]
   1400173e9:	mov    eax,r11d
   1400173ec:	and    r11d,0x2
   1400173f0:	mov    edx,0x1
   1400173f5:	and    eax,edx
   1400173f7:	and    r10b,0x66
   1400173fb:	cmove  r11d,eax
   1400173ff:	test   r11d,r11d
   140017402:	je     0x140017417
   140017404:	mov    r9,rdi
   140017407:	mov    r8,r12
   14001740a:	mov    rdx,rsi
   14001740d:	mov    rcx,rbp
   140017410:	call   0x14000d6f4
   140017415:	mov    edx,eax
   140017417:	mov    rbx,QWORD PTR [rsp+0x30]
   14001741c:	mov    rbp,QWORD PTR [rsp+0x38]
   140017421:	mov    rsi,QWORD PTR [rsp+0x40]
   140017426:	mov    rdi,QWORD PTR [rsp+0x48]
   14001742b:	mov    eax,edx
   14001742d:	add    rsp,0x20
   140017431:	pop    r12
   140017433:	ret    
   140017434:	mov    rax,rsp
   140017437:	mov    QWORD PTR [rax+0x8],rbx
   14001743b:	mov    QWORD PTR [rax+0x10],rbp
   14001743f:	mov    QWORD PTR [rax+0x18],rsi
   140017443:	mov    QWORD PTR [rax+0x20],rdi
   140017447:	push   r12
   140017449:	push   r13
   14001744b:	push   r15
   14001744d:	sub    rsp,0x20
   140017451:	mov    rbp,rdx
   140017454:	xor    edi,edi
   140017456:	xor    edx,edx
   140017458:	lea    r8d,[rdi+0x1]
   14001745c:	mov    esi,ecx
   14001745e:	call   0x140015d7c
   140017463:	mov    r13,rax
   140017466:	cmp    rax,0xffffffffffffffff
   14001746a:	je     0x1400174bc
   14001746c:	lea    r8d,[rdi+0x2]
   140017470:	xor    edx,edx
   140017472:	mov    ecx,esi
   140017474:	call   0x140015d7c
   140017479:	cmp    rax,0xffffffffffffffff
   14001747d:	je     0x1400174bc
   14001747f:	mov    rbx,rbp
   140017482:	sub    rbx,rax
   140017485:	test   rbx,rbx
   140017488:	jle    0x14001754f
   14001748e:	call   QWORD PTR [rip+0x2e84]        # 0x14001a318
   140017494:	mov    r15d,0x1000
   14001749a:	lea    edx,[rdi+0x8]
   14001749d:	mov    rcx,rax
   1400174a0:	mov    r8d,r15d
   1400174a3:	call   QWORD PTR [rip+0x2c4f]        # 0x14001a0f8
   1400174a9:	mov    rbp,rax
   1400174ac:	test   rax,rax
   1400174af:	jne    0x1400174e2
   1400174b1:	call   0x14000bdc0
   1400174b6:	mov    DWORD PTR [rax],0xc
   1400174bc:	call   0x14000bdc0
   1400174c1:	mov    eax,DWORD PTR [rax]
   1400174c3:	mov    rbx,QWORD PTR [rsp+0x40]
   1400174c8:	mov    rbp,QWORD PTR [rsp+0x48]
   1400174cd:	mov    rsi,QWORD PTR [rsp+0x50]
   1400174d2:	mov    rdi,QWORD PTR [rsp+0x58]
   1400174d7:	add    rsp,0x20
   1400174db:	pop    r15
   1400174dd:	pop    r13
   1400174df:	pop    r12
   1400174e1:	ret    
   1400174e2:	mov    edx,0x8000
   1400174e7:	mov    ecx,esi
   1400174e9:	call   0x140017744
   1400174ee:	mov    r12d,eax
   1400174f1:	mov    r8d,ebx
   1400174f4:	cmp    rbx,r15
   1400174f7:	mov    rdx,rbp
   1400174fa:	cmovge r8d,r15d
   1400174fe:	mov    ecx,esi
   140017500:	call   0x1400119ac
   140017505:	cmp    eax,0xffffffff
   140017508:	je     0x140017516
   14001750a:	cdqe   
   14001750c:	sub    rbx,rax
   14001750f:	test   rbx,rbx
   140017512:	jle    0x14001752f
   140017514:	jmp    0x1400174f1
   140017516:	call   0x14000bde0
   14001751b:	cmp    DWORD PTR [rax],0x5
   14001751e:	jne    0x14001752b
   140017520:	call   0x14000bdc0
   140017525:	mov    DWORD PTR [rax],0xd
   14001752b:	or     rdi,0xffffffffffffffff
   14001752f:	mov    edx,r12d
   140017532:	mov    ecx,esi
   140017534:	call   0x140017744
   140017539:	call   QWORD PTR [rip+0x2dd9]        # 0x14001a318
   14001753f:	mov    r8,rbp
   140017542:	mov    rcx,rax
   140017545:	xor    edx,edx
   140017547:	call   QWORD PTR [rip+0x2bbb]        # 0x14001a108
   14001754d:	jmp    0x1400175a4
   14001754f:	jns    0x1400175ae
   140017551:	xor    r8d,r8d
   140017554:	mov    rdx,rbp
   140017557:	mov    ecx,esi
   140017559:	call   0x140015d7c
   14001755e:	cmp    rax,0xffffffffffffffff
   140017562:	je     0x1400174bc
   140017568:	mov    ecx,esi
   14001756a:	call   0x140011660
   14001756f:	mov    rcx,rax
   140017572:	call   QWORD PTR [rip+0x2d98]        # 0x14001a310
   140017578:	neg    eax
   14001757a:	sbb    rdi,rdi
   14001757d:	neg    rdi
   140017580:	dec    rdi
   140017583:	cmp    rdi,0xffffffffffffffff
   140017587:	jne    0x1400175ae
   140017589:	call   0x14000bdc0
   14001758e:	mov    DWORD PTR [rax],0xd
   140017594:	call   0x14000bde0
   140017599:	mov    rbx,rax
   14001759c:	call   QWORD PTR [rip+0x2ace]        # 0x14001a070
   1400175a2:	mov    DWORD PTR [rbx],eax
   1400175a4:	cmp    rdi,0xffffffffffffffff
   1400175a8:	je     0x1400174bc
   1400175ae:	xor    r8d,r8d
   1400175b1:	mov    rdx,r13
   1400175b4:	mov    ecx,esi
   1400175b6:	call   0x140015d7c
   1400175bb:	cmp    rax,0xffffffffffffffff
   1400175bf:	je     0x1400174bc
   1400175c5:	xor    eax,eax
   1400175c7:	jmp    0x1400174c3
   1400175cc:	mov    QWORD PTR [rsp+0x8],rbx
   1400175d1:	mov    QWORD PTR [rsp+0x10],rsi
   1400175d6:	push   rdi
   1400175d7:	sub    rsp,0x20
   1400175db:	movsxd rbx,ecx
   1400175de:	mov    edi,r8d
   1400175e1:	mov    esi,edx
   1400175e3:	mov    ecx,ebx
   1400175e5:	call   0x140011660
   1400175ea:	cmp    rax,0xffffffffffffffff
   1400175ee:	jne    0x140017600
   1400175f0:	call   0x14000bdc0
   1400175f5:	mov    DWORD PTR [rax],0x9
   1400175fb:	or     eax,0xffffffff
   1400175fe:	jmp    0x140017652
   140017600:	mov    r9d,edi
   140017603:	xor    r8d,r8d
   140017606:	mov    edx,esi
   140017608:	mov    rcx,rax
   14001760b:	call   QWORD PTR [rip+0x2cdf]        # 0x14001a2f0
   140017611:	mov    edi,eax
   140017613:	cmp    eax,0xffffffff
   140017616:	jne    0x140017620
   140017618:	call   QWORD PTR [rip+0x2a52]        # 0x14001a070
   14001761e:	jmp    0x140017622
   140017620:	xor    eax,eax
   140017622:	test   eax,eax
   140017624:	je     0x14001762f
   140017626:	mov    ecx,eax
   140017628:	call   0x14000be00
   14001762d:	jmp    0x1400175fb
   14001762f:	mov    rcx,rbx
   140017632:	mov    rax,rbx
   140017635:	lea    rdx,[rip+0xe444]        # 0x140025a80
   14001763c:	sar    rax,0x5
   140017640:	and    ecx,0x1f
   140017643:	mov    rax,QWORD PTR [rdx+rax*8]
   140017647:	imul   rcx,rcx,0x58
   14001764b:	and    BYTE PTR [rax+rcx*1+0x8],0xfd
   140017650:	mov    eax,edi
   140017652:	mov    rbx,QWORD PTR [rsp+0x30]
   140017657:	mov    rsi,QWORD PTR [rsp+0x38]
   14001765c:	add    rsp,0x20
   140017660:	pop    rdi
   140017661:	ret    
   140017662:	int3   
   140017663:	int3   
   140017664:	mov    QWORD PTR [rsp+0x10],rbx
   140017669:	mov    DWORD PTR [rsp+0x8],ecx
   14001766d:	push   rsi
   14001766e:	push   rdi
   14001766f:	push   r12
   140017671:	push   r13
   140017673:	push   r14
   140017675:	sub    rsp,0x20
   140017679:	mov    esi,r8d
   14001767c:	mov    r12d,edx
   14001767f:	movsxd rdi,ecx
   140017682:	cmp    edi,0xfffffffe
   140017685:	jne    0x14001769f
   140017687:	call   0x14000bde0
   14001768c:	and    DWORD PTR [rax],0x0
   14001768f:	call   0x14000bdc0
   140017694:	mov    DWORD PTR [rax],0x9
   14001769a:	jmp    0x14001772e
   14001769f:	test   ecx,ecx
   1400176a1:	js     0x140017716
   1400176a3:	cmp    edi,DWORD PTR [rip+0xe3c3]        # 0x140025a6c
   1400176a9:	jae    0x140017716
   1400176ab:	mov    rbx,rdi
   1400176ae:	mov    r13,rdi
   1400176b1:	sar    r13,0x5
   1400176b5:	lea    r14,[rip+0xe3c4]        # 0x140025a80
   1400176bc:	and    ebx,0x1f
   1400176bf:	imul   rbx,rbx,0x58
   1400176c3:	mov    rax,QWORD PTR [r14+r13*8]
   1400176c7:	movsx  ecx,BYTE PTR [rax+rbx*1+0x8]
   1400176cc:	and    ecx,0x1
   1400176cf:	je     0x140017716
   1400176d1:	mov    ecx,edi
   1400176d3:	call   0x1400116d4
   1400176d8:	nop
   1400176d9:	mov    rax,QWORD PTR [r14+r13*8]
   1400176dd:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   1400176e2:	je     0x1400176f5
   1400176e4:	mov    r8d,esi
   1400176e7:	mov    edx,r12d
   1400176ea:	mov    ecx,edi
   1400176ec:	call   0x1400175cc
   1400176f1:	mov    ebx,eax
   1400176f3:	jmp    0x14001770b
   1400176f5:	call   0x14000bdc0
   1400176fa:	mov    DWORD PTR [rax],0x9
   140017700:	call   0x14000bde0
   140017705:	and    DWORD PTR [rax],0x0
   140017708:	or     ebx,0xffffffff
   14001770b:	mov    ecx,edi
   14001770d:	call   0x14001177c
   140017712:	mov    eax,ebx
   140017714:	jmp    0x140017731
   140017716:	call   0x14000bde0
   14001771b:	and    DWORD PTR [rax],0x0
   14001771e:	call   0x14000bdc0
   140017723:	mov    DWORD PTR [rax],0x9
   140017729:	call   0x14000d01c
   14001772e:	or     eax,0xffffffff
   140017731:	mov    rbx,QWORD PTR [rsp+0x58]
   140017736:	add    rsp,0x20
   14001773a:	pop    r14
   14001773c:	pop    r13
   14001773e:	pop    r12
   140017740:	pop    rdi
   140017741:	pop    rsi
   140017742:	ret    
   140017743:	int3   
   140017744:	mov    QWORD PTR [rsp+0x8],rbx
   140017749:	movsxd r8,ecx
   14001774c:	lea    rbx,[rip+0xe32d]        # 0x140025a80
   140017753:	mov    r9,r8
   140017756:	and    r8d,0x1f
   14001775a:	sar    r9,0x5
   14001775e:	imul   r8,r8,0x58
   140017762:	mov    rcx,QWORD PTR [rbx+r9*8]
   140017766:	mov    al,BYTE PTR [rcx+r8*1+0x38]
   14001776b:	movzx  r11d,BYTE PTR [rcx+r8*1+0x8]
   140017771:	add    al,al
   140017773:	and    r11d,0x80
   14001777a:	movsx  r10d,al
   14001777e:	sar    r10d,1
   140017781:	cmp    edx,0x4000
   140017787:	je     0x1400177e1
   140017789:	cmp    edx,0x8000
   14001778f:	je     0x1400177d9
   140017791:	cmp    edx,0x10000
   140017797:	je     0x1400177c1
   140017799:	cmp    edx,0x20000
   14001779f:	je     0x1400177c1
   1400177a1:	cmp    edx,0x40000
   1400177a7:	jne    0x1400177f1
   1400177a9:	or     BYTE PTR [rcx+r8*1+0x8],0x80
   1400177af:	mov    rax,QWORD PTR [rbx+r9*8]
   1400177b3:	and    BYTE PTR [rax+r8*1+0x38],0x81
   1400177b9:	or     BYTE PTR [rax+r8*1+0x38],0x1
   1400177bf:	jmp    0x1400177f1
   1400177c1:	or     BYTE PTR [rcx+r8*1+0x8],0x80
   1400177c7:	mov    rax,QWORD PTR [rbx+r9*8]
   1400177cb:	and    BYTE PTR [rax+r8*1+0x38],0x82
   1400177d1:	or     BYTE PTR [rax+r8*1+0x38],0x2
   1400177d7:	jmp    0x1400177f1
   1400177d9:	and    BYTE PTR [rcx+r8*1+0x8],0x7f
   1400177df:	jmp    0x1400177f1
   1400177e1:	or     BYTE PTR [rcx+r8*1+0x8],0x80
   1400177e7:	mov    rcx,QWORD PTR [rbx+r9*8]
   1400177eb:	and    BYTE PTR [rcx+r8*1+0x38],0x80
   1400177f1:	test   r11d,r11d
   1400177f4:	jne    0x1400177fd
   1400177f6:	mov    eax,0x8000
   1400177fb:	jmp    0x14001780c
   1400177fd:	neg    r10d
   140017800:	sbb    eax,eax
   140017802:	and    eax,0xc000
   140017807:	add    eax,0x4000
   14001780c:	mov    rbx,QWORD PTR [rsp+0x8]
   140017811:	ret    
   140017812:	int3   
   140017813:	int3   
   140017814:	sub    rsp,0x28
   140017818:	test   rcx,rcx
   14001781b:	jne    0x140017834
   14001781d:	call   0x14000bdc0
   140017822:	mov    DWORD PTR [rax],0x16
   140017828:	call   0x14000d01c
   14001782d:	mov    eax,0x16
   140017832:	jmp    0x14001783e
   140017834:	mov    eax,DWORD PTR [rip+0xe22a]        # 0x140025a64
   14001783a:	mov    DWORD PTR [rcx],eax
   14001783c:	xor    eax,eax
   14001783e:	add    rsp,0x28
   140017842:	ret    
   140017843:	int3   
   140017844:	mov    rax,rsp
   140017847:	push   rbx
   140017848:	push   rsi
   140017849:	push   rdi
   14001784a:	push   r12
   14001784c:	push   r13
   14001784e:	push   r14
   140017850:	push   r15
   140017852:	sub    rsp,0x50
   140017856:	xor    r14d,r14d
   140017859:	mov    r13d,r14d
   14001785c:	mov    esi,r14d
   14001785f:	mov    DWORD PTR [rax+0x8],r14d
   140017863:	mov    DWORD PTR [rax+0x10],r14d
   140017867:	mov    DWORD PTR [rax+0x18],r14d
   14001786b:	lea    ecx,[r14+0x7]
   14001786f:	call   0x14000cb28
   140017874:	nop
   140017875:	call   0x140018358
   14001787a:	mov    r12,rax
   14001787d:	lea    rcx,[rsp+0x90]
   140017885:	call   0x140018310
   14001788a:	test   eax,eax
   14001788c:	jne    0x140017c9d
   140017892:	lea    rcx,[rsp+0x98]
   14001789a:	call   0x1400182b0
   14001789f:	test   eax,eax
   1400178a1:	jne    0x140017c89
   1400178a7:	lea    rcx,[rsp+0xa0]
   1400178af:	call   0x1400182e0
   1400178b4:	test   eax,eax
   1400178b6:	jne    0x140017c75
   1400178bc:	call   0x140019358
   1400178c1:	mov    ebx,eax
   1400178c3:	mov    DWORD PTR [rip+0xe182],r14d        # 0x140025a4c
   1400178ca:	or     r15d,0xffffffff
   1400178ce:	mov    DWORD PTR [rip+0xcc4b],r15d        # 0x140024520
   1400178d5:	mov    DWORD PTR [rip+0xcc34],r15d        # 0x140024510
   1400178dc:	lea    rcx,[rip+0x86f5]        # 0x14001ffd8
   1400178e3:	call   0x140009cf0
   1400178e8:	mov    rdi,rax
   1400178eb:	mov    QWORD PTR [rsp+0x40],rax
   1400178f0:	test   rax,rax
   1400178f3:	je     0x14001798a
   1400178f9:	cmp    BYTE PTR [rax],r14b
   1400178fc:	je     0x14001798a
   140017902:	mov    rcx,QWORD PTR [rip+0xe147]        # 0x140025a50
   140017909:	test   rcx,rcx
   14001790c:	je     0x140017932
   14001790e:	mov    rdx,rcx
   140017911:	mov    rcx,rax
   140017914:	call   0x14000a850
   140017919:	test   eax,eax
   14001791b:	je     0x140017ad9
   140017921:	mov    rcx,QWORD PTR [rip+0xe128]        # 0x140025a50
   140017928:	test   rcx,rcx
   14001792b:	je     0x140017932
   14001792d:	call   0x14000b460
   140017932:	mov    rcx,rdi
   140017935:	call   0x140009fa0
   14001793a:	lea    rcx,[rax+0x1]
   14001793e:	call   0x140010aa4
   140017943:	mov    QWORD PTR [rip+0xe106],rax        # 0x140025a50
   14001794a:	test   rax,rax
   14001794d:	je     0x140017ad9
   140017953:	mov    rcx,rdi
   140017956:	call   0x140009fa0
   14001795b:	mov    r8,rdi
   14001795e:	lea    rdx,[rax+0x1]
   140017962:	mov    rcx,QWORD PTR [rip+0xe0e7]        # 0x140025a50
   140017969:	call   0x14000eab0
   14001796e:	test   eax,eax
   140017970:	je     0x140017ade
   140017976:	mov    QWORD PTR [rsp+0x20],r14
   14001797b:	xor    r9d,r9d
   14001797e:	xor    r8d,r8d
   140017981:	xor    edx,edx
   140017983:	xor    ecx,ecx
   140017985:	call   0x14000cf78
   14001798a:	mov    rcx,QWORD PTR [rip+0xe0bf]        # 0x140025a50
   140017991:	test   rcx,rcx
   140017994:	je     0x1400179a2
   140017996:	call   0x14000b460
   14001799b:	mov    QWORD PTR [rip+0xe0ae],r14        # 0x140025a50
   1400179a2:	lea    rcx,[rip+0xdff7]        # 0x1400259a0
   1400179a9:	call   QWORD PTR [rip+0x2971]        # 0x14001a320
   1400179af:	cmp    eax,0xffffffff
   1400179b2:	je     0x140017ad9
   1400179b8:	mov    DWORD PTR [rip+0xe08a],0x1        # 0x140025a4c
   1400179c2:	mov    ecx,DWORD PTR [rip+0xdfd8]        # 0x1400259a0
   1400179c8:	imul   ecx,ecx,0x3c
   1400179cb:	mov    DWORD PTR [rsp+0x90],ecx
   1400179d2:	mov    edx,DWORD PTR [rip+0xe01c]        # 0x1400259f4
   1400179d8:	cmp    WORD PTR [rip+0xe006],r14w        # 0x1400259e6
   1400179e0:	je     0x1400179f0
   1400179e2:	mov    eax,edx
   1400179e4:	imul   eax,eax,0x3c
   1400179e7:	add    ecx,eax
   1400179e9:	mov    DWORD PTR [rsp+0x90],ecx
   1400179f0:	cmp    WORD PTR [rip+0xe042],r14w        # 0x140025a3a
   1400179f8:	je     0x140017a1d
   1400179fa:	mov    eax,DWORD PTR [rip+0xe048]        # 0x140025a48
   140017a00:	test   eax,eax
   140017a02:	je     0x140017a1d
   140017a04:	mov    DWORD PTR [rsp+0x98],0x1
   140017a0f:	sub    eax,edx
   140017a11:	imul   eax,eax,0x3c
   140017a14:	mov    DWORD PTR [rsp+0xa0],eax
   140017a1b:	jmp    0x140017a2d
   140017a1d:	mov    DWORD PTR [rsp+0x98],r14d
   140017a25:	mov    DWORD PTR [rsp+0xa0],r14d
   140017a2d:	lea    rax,[rsp+0xa8]
   140017a35:	mov    QWORD PTR [rsp+0x38],rax
   140017a3a:	mov    QWORD PTR [rsp+0x30],r14
   140017a3f:	mov    esi,0x3f
   140017a44:	mov    DWORD PTR [rsp+0x28],esi
   140017a48:	mov    rax,QWORD PTR [r12]
   140017a4c:	mov    QWORD PTR [rsp+0x20],rax
   140017a51:	mov    r9d,r15d
   140017a54:	lea    r8,[rip+0xdf49]        # 0x1400259a4
   140017a5b:	xor    edx,edx
   140017a5d:	mov    ecx,ebx
   140017a5f:	call   QWORD PTR [rip+0x279b]        # 0x14001a200
   140017a65:	test   eax,eax
   140017a67:	je     0x140017a7d
   140017a69:	cmp    DWORD PTR [rsp+0xa8],r14d
   140017a71:	jne    0x140017a7d
   140017a73:	mov    rax,QWORD PTR [r12]
   140017a77:	mov    BYTE PTR [rax+0x3f],r14b
   140017a7b:	jmp    0x140017a84
   140017a7d:	mov    rax,QWORD PTR [r12]
   140017a81:	mov    BYTE PTR [rax],r14b
   140017a84:	lea    rax,[rsp+0xa8]
   140017a8c:	mov    QWORD PTR [rsp+0x38],rax
   140017a91:	mov    QWORD PTR [rsp+0x30],r14
   140017a96:	mov    DWORD PTR [rsp+0x28],esi
   140017a9a:	mov    rax,QWORD PTR [r12+0x8]
   140017a9f:	mov    QWORD PTR [rsp+0x20],rax
   140017aa4:	mov    r9d,r15d
   140017aa7:	lea    r8,[rip+0xdf4a]        # 0x1400259f8
   140017aae:	xor    edx,edx
   140017ab0:	mov    ecx,ebx
   140017ab2:	call   QWORD PTR [rip+0x2748]        # 0x14001a200
   140017ab8:	test   eax,eax
   140017aba:	je     0x140017ad1
   140017abc:	cmp    DWORD PTR [rsp+0xa8],r14d
   140017ac4:	jne    0x140017ad1
   140017ac6:	mov    rax,QWORD PTR [r12+0x8]
   140017acb:	mov    BYTE PTR [rax+0x3f],r14b
   140017acf:	jmp    0x140017ad9
   140017ad1:	mov    rax,QWORD PTR [r12+0x8]
   140017ad6:	mov    BYTE PTR [rax],r14b
   140017ad9:	mov    esi,0x1
   140017ade:	mov    ebx,DWORD PTR [rsp+0x90]
   140017ae5:	call   0x140018350
   140017aea:	mov    DWORD PTR [rax],ebx
   140017aec:	mov    ebx,DWORD PTR [rsp+0x98]
   140017af3:	call   0x140018340
   140017af8:	mov    DWORD PTR [rax],ebx
   140017afa:	mov    ebx,DWORD PTR [rsp+0xa0]
   140017b01:	call   0x140018348
   140017b06:	mov    DWORD PTR [rax],ebx
   140017b08:	mov    ecx,0x7
   140017b0d:	call   0x14000ca28
   140017b12:	test   esi,esi
   140017b14:	jne    0x140017cb2
   140017b1a:	lea    r15d,[rsi+0x3]
   140017b1e:	mov    r9d,r15d
   140017b21:	mov    r8,rdi
   140017b24:	lea    edx,[rsi+0x40]
   140017b27:	mov    rcx,QWORD PTR [r12]
   140017b2b:	call   0x1400136e0
   140017b30:	test   eax,eax
   140017b32:	jne    0x140017c60
   140017b38:	add    rdi,r15
   140017b3b:	cmp    BYTE PTR [rdi],0x2d
   140017b3e:	jne    0x140017b47
   140017b40:	lea    r13d,[rsi+0x1]
   140017b44:	inc    rdi
   140017b47:	mov    rcx,rdi
   140017b4a:	call   0x1400196e8
   140017b4f:	mov    r11d,eax
   140017b52:	imul   r11d,r11d,0xe10
   140017b59:	mov    DWORD PTR [rsp+0x90],r11d
   140017b61:	mov    bl,0x30
   140017b63:	mov    sil,0x39
   140017b66:	mov    al,BYTE PTR [rdi]
   140017b68:	cmp    al,0x2b
   140017b6a:	je     0x140017c58
   140017b70:	cmp    al,bl
   140017b72:	jl     0x140017b7d
   140017b74:	cmp    al,sil
   140017b77:	jle    0x140017c58
   140017b7d:	cmp    BYTE PTR [rdi],0x3a
   140017b80:	jne    0x140017be6
   140017b82:	inc    rdi
   140017b85:	mov    rcx,rdi
   140017b88:	call   0x1400196e8
   140017b8d:	imul   eax,eax,0x3c
   140017b90:	mov    r11d,DWORD PTR [rsp+0x90]
   140017b98:	add    r11d,eax
   140017b9b:	mov    DWORD PTR [rsp+0x90],r11d
   140017ba3:	jmp    0x140017bad
   140017ba5:	cmp    al,sil
   140017ba8:	jg     0x140017bb3
   140017baa:	inc    rdi
   140017bad:	mov    al,BYTE PTR [rdi]
   140017baf:	cmp    al,bl
   140017bb1:	jge    0x140017ba5
   140017bb3:	cmp    BYTE PTR [rdi],0x3a
   140017bb6:	jne    0x140017be6
   140017bb8:	inc    rdi
   140017bbb:	mov    rcx,rdi
   140017bbe:	call   0x1400196e8
   140017bc3:	mov    r11d,DWORD PTR [rsp+0x90]
   140017bcb:	add    r11d,eax
   140017bce:	mov    DWORD PTR [rsp+0x90],r11d
   140017bd6:	jmp    0x140017be0
   140017bd8:	cmp    al,sil
   140017bdb:	jg     0x140017be6
   140017bdd:	inc    rdi
   140017be0:	mov    al,BYTE PTR [rdi]
   140017be2:	cmp    al,bl
   140017be4:	jge    0x140017bd8
   140017be6:	test   r13d,r13d
   140017be9:	je     0x140017bf6
   140017beb:	neg    r11d
   140017bee:	mov    DWORD PTR [rsp+0x90],r11d
   140017bf6:	movsx  eax,BYTE PTR [rdi]
   140017bf9:	mov    DWORD PTR [rsp+0x98],eax
   140017c00:	test   eax,eax
   140017c02:	je     0x140017c32
   140017c04:	mov    r9,r15
   140017c07:	mov    r8,rdi
   140017c0a:	mov    edx,0x40
   140017c0f:	mov    rcx,QWORD PTR [r12+0x8]
   140017c14:	call   0x1400136e0
   140017c19:	test   eax,eax
   140017c1b:	je     0x140017c3a
   140017c1d:	mov    QWORD PTR [rsp+0x20],r14
   140017c22:	xor    r9d,r9d
   140017c25:	xor    r8d,r8d
   140017c28:	xor    edx,edx
   140017c2a:	xor    ecx,ecx
   140017c2c:	call   0x14000cf78
   140017c31:	int3   
   140017c32:	mov    rax,QWORD PTR [r12+0x8]
   140017c37:	mov    BYTE PTR [rax],r14b
   140017c3a:	mov    ebx,DWORD PTR [rsp+0x90]
   140017c41:	call   0x140018350
   140017c46:	mov    DWORD PTR [rax],ebx
   140017c48:	mov    ebx,DWORD PTR [rsp+0x98]
   140017c4f:	call   0x140018340
   140017c54:	mov    DWORD PTR [rax],ebx
   140017c56:	jmp    0x140017cb2
   140017c58:	inc    rdi
   140017c5b:	jmp    0x140017b66
   140017c60:	mov    QWORD PTR [rsp+0x20],r14
   140017c65:	xor    r9d,r9d
   140017c68:	xor    r8d,r8d
   140017c6b:	xor    edx,edx
   140017c6d:	xor    ecx,ecx
   140017c6f:	call   0x14000cf78
   140017c74:	nop
   140017c75:	mov    QWORD PTR [rsp+0x20],r14
   140017c7a:	xor    r9d,r9d
   140017c7d:	xor    r8d,r8d
   140017c80:	xor    edx,edx
   140017c82:	xor    ecx,ecx
   140017c84:	call   0x14000cf78
   140017c89:	mov    QWORD PTR [rsp+0x20],r14
   140017c8e:	xor    r9d,r9d
   140017c91:	xor    r8d,r8d
   140017c94:	xor    edx,edx
   140017c96:	xor    ecx,ecx
   140017c98:	call   0x14000cf78
   140017c9d:	mov    QWORD PTR [rsp+0x20],r14
   140017ca2:	xor    r9d,r9d
   140017ca5:	xor    r8d,r8d
   140017ca8:	xor    edx,edx
   140017caa:	xor    ecx,ecx
   140017cac:	call   0x14000cf78
   140017cb1:	nop
   140017cb2:	add    rsp,0x50
   140017cb6:	pop    r15
   140017cb8:	pop    r14
   140017cba:	pop    r13
   140017cbc:	pop    r12
   140017cbe:	pop    rdi
   140017cbf:	pop    rsi
   140017cc0:	pop    rbx
   140017cc1:	ret    
   140017cc2:	int3   
   140017cc3:	int3   
   140017cc4:	mov    QWORD PTR [rsp+0x10],rbx
   140017cc9:	mov    QWORD PTR [rsp+0x18],rbp
   140017cce:	push   rsi
   140017ccf:	push   rdi
   140017cd0:	push   r12
   140017cd2:	sub    rsp,0x30
   140017cd6:	and    DWORD PTR [rsp+0x50],0x0
   140017cdb:	mov    ebx,r8d
   140017cde:	mov    r12d,ecx
   140017ce1:	cmp    edx,0x1
   140017ce4:	jne    0x140017e55
   140017cea:	mov    r11d,ebx
   140017ced:	and    r11d,0x80000003
   140017cf4:	jge    0x140017d00
   140017cf6:	dec    r11d
   140017cf9:	or     r11d,0xfffffffc
   140017cfd:	inc    r11d
   140017d00:	mov    esi,0x51eb851f
   140017d05:	test   r11d,r11d
   140017d08:	jne    0x140017d1f
   140017d0a:	mov    eax,esi
   140017d0c:	imul   ebx
   140017d0e:	sar    edx,0x5
   140017d11:	mov    eax,edx
   140017d13:	shr    eax,0x1f
   140017d16:	add    edx,eax
   140017d18:	imul   edx,edx,0x64
   140017d1b:	cmp    ebx,edx
   140017d1d:	jne    0x140017d52
   140017d1f:	lea    ecx,[r8+0x76c]
   140017d26:	mov    eax,esi
   140017d28:	imul   ecx
   140017d2a:	sar    edx,0x7
   140017d2d:	mov    eax,edx
   140017d2f:	shr    eax,0x1f
   140017d32:	add    edx,eax
   140017d34:	imul   edx,edx,0x190
   140017d3a:	cmp    ecx,edx
   140017d3c:	je     0x140017d52
   140017d3e:	lea    rdi,[rip+0xfffffffffffe82bb]        # 0x140000000
   140017d45:	movsxd rbp,r9d
   140017d48:	mov    r10d,DWORD PTR [rdi+rbp*4+0x24604]
   140017d50:	jmp    0x140017d64
   140017d52:	lea    rdi,[rip+0xfffffffffffe82a7]        # 0x140000000
   140017d59:	movsxd rbp,r9d
   140017d5c:	mov    r10d,DWORD PTR [rdi+rbp*4+0x245cc]
   140017d64:	dec    r8d
   140017d67:	lea    ecx,[rbx+0x12b]
   140017d6d:	mov    eax,esi
   140017d6f:	inc    r10d
   140017d72:	imul   ecx
   140017d74:	mov    r9d,edx
   140017d77:	sar    r9d,0x7
   140017d7b:	mov    eax,r9d
   140017d7e:	shr    eax,0x1f
   140017d81:	add    r9d,eax
   140017d84:	mov    eax,esi
   140017d86:	imul   r8d
   140017d89:	sar    edx,0x5
   140017d8c:	mov    eax,edx
   140017d8e:	shr    eax,0x1f
   140017d91:	add    edx,eax
   140017d93:	mov    eax,r8d
   140017d96:	sub    r9d,edx
   140017d99:	cdq    
   140017d9a:	and    edx,0x3
   140017d9d:	add    eax,edx
   140017d9f:	sar    eax,0x2
   140017da2:	lea    ecx,[r10+rax*1]
   140017da6:	mov    eax,ebx
   140017da8:	add    ecx,r9d
   140017dab:	imul   eax,eax,0x16d
   140017db1:	lea    r8d,[rax+rcx*1-0x63db]
   140017db9:	mov    ecx,DWORD PTR [rsp+0x70]
   140017dbd:	mov    eax,0x92492493
   140017dc2:	imul   r8d
   140017dc5:	add    edx,r8d
   140017dc8:	sar    edx,0x2
   140017dcb:	mov    eax,edx
   140017dcd:	shr    eax,0x1f
   140017dd0:	add    edx,eax
   140017dd2:	mov    eax,ecx
   140017dd4:	imul   edx,edx,0x7
   140017dd7:	imul   eax,eax,0x7
   140017dda:	sub    r8d,edx
   140017ddd:	mov    edx,DWORD PTR [rsp+0x78]
   140017de1:	sub    eax,r8d
   140017de4:	add    eax,edx
   140017de6:	cmp    r8d,edx
   140017de9:	jg     0x140017df2
   140017deb:	lea    r10d,[r10+rax*1-0x7]
   140017df0:	jmp    0x140017df5
   140017df2:	add    r10d,eax
   140017df5:	cmp    ecx,0x5
   140017df8:	jne    0x140017ed0
   140017dfe:	test   r11d,r11d
   140017e01:	jne    0x140017e18
   140017e03:	mov    eax,esi
   140017e05:	imul   ebx
   140017e07:	sar    edx,0x5
   140017e0a:	mov    ecx,edx
   140017e0c:	shr    ecx,0x1f
   140017e0f:	add    edx,ecx
   140017e11:	imul   edx,edx,0x64
   140017e14:	cmp    ebx,edx
   140017e16:	jne    0x140017e3f
   140017e18:	lea    ecx,[rbx+0x76c]
   140017e1e:	mov    eax,esi
   140017e20:	imul   ecx
   140017e22:	sar    edx,0x7
   140017e25:	mov    eax,edx
   140017e27:	shr    eax,0x1f
   140017e2a:	add    edx,eax
   140017e2c:	imul   edx,edx,0x190
   140017e32:	cmp    ecx,edx
   140017e34:	je     0x140017e3f
   140017e36:	mov    eax,DWORD PTR [rdi+rbp*4+0x24608]
   140017e3d:	jmp    0x140017e46
   140017e3f:	mov    eax,DWORD PTR [rdi+rbp*4+0x245d0]
   140017e46:	cmp    r10d,eax
   140017e49:	jle    0x140017ed0
   140017e4f:	sub    r10d,0x7
   140017e53:	jmp    0x140017ed0
   140017e55:	mov    eax,ebx
   140017e57:	and    eax,0x80000003
   140017e5c:	jge    0x140017e65
   140017e5e:	dec    eax
   140017e60:	or     eax,0xfffffffc
   140017e63:	inc    eax
   140017e65:	mov    esi,0x51eb851f
   140017e6a:	test   eax,eax
   140017e6c:	jne    0x140017e83
   140017e6e:	mov    eax,esi
   140017e70:	imul   ebx
   140017e72:	sar    edx,0x5
   140017e75:	mov    eax,edx
   140017e77:	shr    eax,0x1f
   140017e7a:	add    edx,eax
   140017e7c:	imul   edx,edx,0x64
   140017e7f:	cmp    ebx,edx
   140017e81:	jne    0x140017eb6
   140017e83:	lea    ecx,[r8+0x76c]
   140017e8a:	mov    eax,esi
   140017e8c:	imul   ecx
   140017e8e:	sar    edx,0x7
   140017e91:	mov    eax,edx
   140017e93:	shr    eax,0x1f
   140017e96:	add    edx,eax
   140017e98:	imul   edx,edx,0x190
   140017e9e:	cmp    ecx,edx
   140017ea0:	je     0x140017eb6
   140017ea2:	lea    rdi,[rip+0xfffffffffffe8157]        # 0x140000000
   140017ea9:	movsxd rax,r9d
   140017eac:	mov    r10d,DWORD PTR [rdi+rax*4+0x24604]
   140017eb4:	jmp    0x140017ec8
   140017eb6:	lea    rdi,[rip+0xfffffffffffe8143]        # 0x140000000
   140017ebd:	movsxd rax,r9d
   140017ec0:	mov    r10d,DWORD PTR [rdi+rax*4+0x245cc]
   140017ec8:	add    r10d,DWORD PTR [rsp+0x80]
   140017ed0:	mov    eax,DWORD PTR [rsp+0x88]
   140017ed7:	imul   eax,eax,0x3c
   140017eda:	add    eax,DWORD PTR [rsp+0x90]
   140017ee1:	imul   eax,eax,0x3c
   140017ee4:	add    eax,DWORD PTR [rsp+0x98]
   140017eeb:	imul   eax,eax,0x3e8
   140017ef1:	add    eax,DWORD PTR [rsp+0xa0]
   140017ef8:	cmp    r12d,0x1
   140017efc:	jne    0x140017f24
   140017efe:	mov    DWORD PTR [rip+0xc60f],r10d        # 0x140024514
   140017f05:	mov    DWORD PTR [rip+0xc60d],eax        # 0x140024518
   140017f0b:	mov    DWORD PTR [rip+0xc5ff],ebx        # 0x140024510
   140017f11:	mov    rbx,QWORD PTR [rsp+0x58]
   140017f16:	mov    rbp,QWORD PTR [rsp+0x60]
   140017f1b:	add    rsp,0x30
   140017f1f:	pop    r12
   140017f21:	pop    rdi
   140017f22:	pop    rsi
   140017f23:	ret    
   140017f24:	lea    rcx,[rsp+0x50]
   140017f29:	mov    DWORD PTR [rip+0xc5f4],r10d        # 0x140024524
   140017f30:	mov    DWORD PTR [rip+0xc5f2],eax        # 0x140024528
   140017f36:	call   0x1400182e0
   140017f3b:	test   eax,eax
   140017f3d:	jne    0x140017f82
   140017f3f:	mov    ecx,DWORD PTR [rip+0xc5e3]        # 0x140024528
   140017f45:	mov    eax,DWORD PTR [rsp+0x50]
   140017f49:	imul   eax,eax,0x3e8
   140017f4f:	add    ecx,eax
   140017f51:	mov    eax,0x5265c00
   140017f56:	mov    DWORD PTR [rip+0xc5cc],ecx        # 0x140024528
   140017f5c:	jns    0x140017f68
   140017f5e:	add    ecx,eax
   140017f60:	dec    DWORD PTR [rip+0xc5be]        # 0x140024524
   140017f66:	jmp    0x140017f74
   140017f68:	cmp    ecx,eax
   140017f6a:	jl     0x140017f7a
   140017f6c:	sub    ecx,eax
   140017f6e:	inc    DWORD PTR [rip+0xc5b0]        # 0x140024524
   140017f74:	mov    DWORD PTR [rip+0xc5ae],ecx        # 0x140024528
   140017f7a:	mov    DWORD PTR [rip+0xc5a0],ebx        # 0x140024520
   140017f80:	jmp    0x140017f11
   140017f82:	and    QWORD PTR [rsp+0x20],0x0
   140017f88:	xor    r9d,r9d
   140017f8b:	xor    r8d,r8d
   140017f8e:	xor    edx,edx
   140017f90:	xor    ecx,ecx
   140017f92:	call   0x14000cf78
   140017f97:	int3   
   140017f98:	mov    rax,rsp
   140017f9b:	mov    QWORD PTR [rax+0x8],rbx
   140017f9f:	mov    QWORD PTR [rax+0x18],rbp
   140017fa3:	mov    QWORD PTR [rax+0x20],rsi
   140017fa7:	push   rdi
   140017fa8:	push   r12
   140017faa:	push   r13
   140017fac:	sub    rsp,0x60
   140017fb0:	mov    rdi,rcx
   140017fb3:	lea    rcx,[rax+0x10]
   140017fb7:	xor    ebx,ebx
   140017fb9:	mov    DWORD PTR [rax+0x10],ebx
   140017fbc:	call   0x1400182b0
   140017fc1:	test   eax,eax
   140017fc3:	jne    0x14001822c
   140017fc9:	cmp    DWORD PTR [rsp+0x88],ebx
   140017fd0:	jne    0x140017fee
   140017fd2:	xor    eax,eax
   140017fd4:	lea    r11,[rsp+0x60]
   140017fd9:	mov    rbx,QWORD PTR [r11+0x20]
   140017fdd:	mov    rbp,QWORD PTR [r11+0x30]
   140017fe1:	mov    rsi,QWORD PTR [r11+0x38]
   140017fe5:	mov    rsp,r11
   140017fe8:	pop    r13
   140017fea:	pop    r12
   140017fec:	pop    rdi
   140017fed:	ret    
   140017fee:	mov    esi,DWORD PTR [rdi+0x14]
   140017ff1:	mov    r13d,0x1
   140017ff7:	cmp    esi,DWORD PTR [rip+0xc513]        # 0x140024510
   140017ffd:	jne    0x14001800b
   140017fff:	cmp    esi,DWORD PTR [rip+0xc51b]        # 0x140024520
   140018005:	je     0x1400181ac
   14001800b:	cmp    DWORD PTR [rip+0xda3b],ebx        # 0x140025a4c
   140018011:	je     0x140018129
   140018017:	cmp    WORD PTR [rip+0xda1a],bx        # 0x140025a38
   14001801e:	movzx  ecx,WORD PTR [rip+0xda1f]        # 0x140025a44
   140018025:	movzx  eax,WORD PTR [rip+0xda1a]        # 0x140025a46
   14001802c:	movzx  edx,WORD PTR [rip+0xda0f]        # 0x140025a42
   140018033:	movzx  r9d,WORD PTR [rip+0xd9ff]        # 0x140025a3a
   14001803b:	mov    DWORD PTR [rsp+0x50],eax
   14001803f:	mov    DWORD PTR [rsp+0x48],ecx
   140018043:	mov    DWORD PTR [rsp+0x40],edx
   140018047:	mov    ecx,r13d
   14001804a:	jne    0x14001807c
   14001804c:	movzx  r10d,WORD PTR [rip+0xd9ec]        # 0x140025a40
   140018054:	movzx  r11d,WORD PTR [rip+0xd9e0]        # 0x140025a3c
   14001805c:	movzx  r8d,WORD PTR [rip+0xd9da]        # 0x140025a3e
   140018064:	mov    DWORD PTR [rsp+0x38],r10d
   140018069:	mov    DWORD PTR [rsp+0x30],ebx
   14001806d:	mov    DWORD PTR [rsp+0x28],r11d
   140018072:	mov    DWORD PTR [rsp+0x20],r8d
   140018077:	mov    edx,r13d
   14001807a:	jmp    0x1400180a0
   14001807c:	movzx  r8d,WORD PTR [rip+0xd9bc]        # 0x140025a40
   140018084:	movzx  r10d,WORD PTR [rip+0xd9b2]        # 0x140025a3e
   14001808c:	xor    edx,edx
   14001808e:	mov    DWORD PTR [rsp+0x38],r8d
   140018093:	mov    DWORD PTR [rsp+0x30],r10d
   140018098:	mov    DWORD PTR [rsp+0x28],ebx
   14001809c:	mov    DWORD PTR [rsp+0x20],ebx
   1400180a0:	mov    r8d,esi
   1400180a3:	call   0x140017cc4
   1400180a8:	movzx  ecx,WORD PTR [rip+0xd941]        # 0x1400259f0
   1400180af:	movzx  r8d,WORD PTR [rip+0xd935]        # 0x1400259ec
   1400180b7:	movzx  eax,WORD PTR [rip+0xd934]        # 0x1400259f2
   1400180be:	movzx  edx,WORD PTR [rip+0xd929]        # 0x1400259ee
   1400180c5:	movzx  r9d,WORD PTR [rip+0xd919]        # 0x1400259e6
   1400180cd:	mov    DWORD PTR [rsp+0x50],eax
   1400180d1:	mov    DWORD PTR [rsp+0x48],ecx
   1400180d5:	mov    DWORD PTR [rsp+0x40],edx
   1400180d9:	xor    ecx,ecx
   1400180db:	cmp    WORD PTR [rip+0xd902],bx        # 0x1400259e4
   1400180e2:	mov    DWORD PTR [rsp+0x38],r8d
   1400180e7:	mov    r8d,DWORD PTR [rdi+0x14]
   1400180eb:	jne    0x140018110
   1400180ed:	movzx  r10d,WORD PTR [rip+0xd8f3]        # 0x1400259e8
   1400180f5:	movzx  r11d,WORD PTR [rip+0xd8ed]        # 0x1400259ea
   1400180fd:	mov    DWORD PTR [rsp+0x30],ebx
   140018101:	mov    DWORD PTR [rsp+0x28],r10d
   140018106:	mov    DWORD PTR [rsp+0x20],r11d
   14001810b:	jmp    0x1400181a4
   140018110:	movzx  r10d,WORD PTR [rip+0xd8d2]        # 0x1400259ea
   140018118:	xor    edx,edx
   14001811a:	mov    DWORD PTR [rsp+0x30],r10d
   14001811f:	mov    DWORD PTR [rsp+0x28],ebx
   140018123:	mov    DWORD PTR [rsp+0x20],ebx
   140018127:	jmp    0x1400181a7
   140018129:	mov    eax,0x2
   14001812e:	mov    r12d,r13d
   140018131:	lea    ebp,[rax+0x9]
   140018134:	lea    r9d,[rax+0x1]
   140018138:	cmp    esi,0x6b
   14001813b:	jge    0x14001814c
   14001813d:	lea    r9d,[rax+0x2]
   140018141:	mov    eax,r13d
   140018144:	lea    ebp,[r9+0x6]
   140018148:	lea    r12d,[r9+0x1]
   14001814c:	mov    DWORD PTR [rsp+0x50],ebx
   140018150:	mov    DWORD PTR [rsp+0x48],ebx
   140018154:	mov    DWORD PTR [rsp+0x40],ebx
   140018158:	mov    DWORD PTR [rsp+0x38],0x2
   140018160:	mov    DWORD PTR [rsp+0x30],ebx
   140018164:	mov    r8d,esi
   140018167:	mov    edx,r13d
   14001816a:	mov    ecx,r13d
   14001816d:	mov    DWORD PTR [rsp+0x28],ebx
   140018171:	mov    DWORD PTR [rsp+0x20],eax
   140018175:	call   0x140017cc4
   14001817a:	mov    r8d,DWORD PTR [rdi+0x14]
   14001817e:	mov    DWORD PTR [rsp+0x50],ebx
   140018182:	mov    DWORD PTR [rsp+0x48],ebx
   140018186:	mov    DWORD PTR [rsp+0x40],ebx
   14001818a:	mov    DWORD PTR [rsp+0x38],0x2
   140018192:	mov    DWORD PTR [rsp+0x30],ebx
   140018196:	mov    DWORD PTR [rsp+0x28],ebx
   14001819a:	mov    DWORD PTR [rsp+0x20],r12d
   14001819f:	mov    r9d,ebp
   1400181a2:	xor    ecx,ecx
   1400181a4:	mov    edx,r13d
   1400181a7:	call   0x140017cc4
   1400181ac:	mov    edx,DWORD PTR [rip+0xc362]        # 0x140024514
   1400181b2:	mov    r8d,DWORD PTR [rip+0xc36b]        # 0x140024524
   1400181b9:	mov    ecx,DWORD PTR [rdi+0x1c]
   1400181bc:	cmp    edx,r8d
   1400181bf:	jge    0x1400181e3
   1400181c1:	cmp    ecx,edx
   1400181c3:	jl     0x140017fd2
   1400181c9:	cmp    ecx,r8d
   1400181cc:	jg     0x140017fd2
   1400181d2:	cmp    ecx,edx
   1400181d4:	jle    0x1400181f9
   1400181d6:	cmp    ecx,r8d
   1400181d9:	jge    0x1400181f9
   1400181db:	mov    eax,r13d
   1400181de:	jmp    0x140017fd4
   1400181e3:	cmp    ecx,r8d
   1400181e6:	jl     0x1400181db
   1400181e8:	cmp    ecx,edx
   1400181ea:	jg     0x1400181db
   1400181ec:	cmp    ecx,r8d
   1400181ef:	jle    0x1400181f9
   1400181f1:	cmp    ecx,edx
   1400181f3:	jl     0x140017fd2
   1400181f9:	mov    eax,DWORD PTR [rdi+0x8]
   1400181fc:	imul   eax,eax,0x3c
   1400181ff:	add    eax,DWORD PTR [rdi+0x4]
   140018202:	imul   eax,eax,0x3c
   140018205:	add    eax,DWORD PTR [rdi]
   140018207:	imul   eax,eax,0x3e8
   14001820d:	cmp    ecx,edx
   14001820f:	jne    0x140018221
   140018211:	cmp    eax,DWORD PTR [rip+0xc301]        # 0x140024518
   140018217:	setge  bl
   14001821a:	mov    eax,ebx
   14001821c:	jmp    0x140017fd4
   140018221:	cmp    eax,DWORD PTR [rip+0xc301]        # 0x140024528
   140018227:	setl   bl
   14001822a:	jmp    0x14001821a
   14001822c:	xor    r9d,r9d
   14001822f:	xor    r8d,r8d
   140018232:	xor    edx,edx
   140018234:	xor    ecx,ecx
   140018236:	mov    QWORD PTR [rsp+0x20],rbx
   14001823b:	call   0x14000cf78
   140018240:	int3   
   140018241:	int3   
   140018242:	int3   
   140018243:	int3   
   140018244:	sub    rsp,0x28
   140018248:	cmp    DWORD PTR [rip+0xd809],0x0        # 0x140025a58
   14001824f:	jne    0x14001827a
   140018251:	mov    ecx,0x6
   140018256:	call   0x14000cb28
   14001825b:	nop
   14001825c:	cmp    DWORD PTR [rip+0xd7f5],0x0        # 0x140025a58
   140018263:	jne    0x140018270
   140018265:	call   0x140017844
   14001826a:	inc    DWORD PTR [rip+0xd7e8]        # 0x140025a58
   140018270:	mov    ecx,0x6
   140018275:	call   0x14000ca28
   14001827a:	add    rsp,0x28
   14001827e:	ret    
   14001827f:	int3   
   140018280:	rex push rbx
   140018282:	sub    rsp,0x20
   140018286:	mov    rbx,rcx
   140018289:	mov    ecx,0x6
   14001828e:	call   0x14000cb28
   140018293:	nop
   140018294:	mov    rcx,rbx
   140018297:	call   0x140017f98
   14001829c:	mov    ebx,eax
   14001829e:	mov    ecx,0x6
   1400182a3:	call   0x14000ca28
   1400182a8:	mov    eax,ebx
   1400182aa:	add    rsp,0x20
   1400182ae:	pop    rbx
   1400182af:	ret    
   1400182b0:	sub    rsp,0x28
   1400182b4:	test   rcx,rcx
   1400182b7:	jne    0x1400182d0
   1400182b9:	call   0x14000bdc0
   1400182be:	mov    DWORD PTR [rax],0x16
   1400182c4:	call   0x14000d01c
   1400182c9:	mov    eax,0x16
   1400182ce:	jmp    0x1400182da
   1400182d0:	mov    eax,DWORD PTR [rip+0xc25e]        # 0x140024534
   1400182d6:	mov    DWORD PTR [rcx],eax
   1400182d8:	xor    eax,eax
   1400182da:	add    rsp,0x28
   1400182de:	ret    
   1400182df:	int3   
   1400182e0:	sub    rsp,0x28
   1400182e4:	test   rcx,rcx
   1400182e7:	jne    0x140018300
   1400182e9:	call   0x14000bdc0
   1400182ee:	mov    DWORD PTR [rax],0x16
   1400182f4:	call   0x14000d01c
   1400182f9:	mov    eax,0x16
   1400182fe:	jmp    0x14001830a
   140018300:	mov    eax,DWORD PTR [rip+0xc232]        # 0x140024538
   140018306:	mov    DWORD PTR [rcx],eax
   140018308:	xor    eax,eax
   14001830a:	add    rsp,0x28
   14001830e:	ret    
   14001830f:	int3   
   140018310:	sub    rsp,0x28
   140018314:	test   rcx,rcx
   140018317:	jne    0x140018330
   140018319:	call   0x14000bdc0
   14001831e:	mov    DWORD PTR [rax],0x16
   140018324:	call   0x14000d01c
   140018329:	mov    eax,0x16
   14001832e:	jmp    0x14001833a
   140018330:	mov    eax,DWORD PTR [rip+0xc1fa]        # 0x140024530
   140018336:	mov    DWORD PTR [rcx],eax
   140018338:	xor    eax,eax
   14001833a:	add    rsp,0x28
   14001833e:	ret    
   14001833f:	int3   
   140018340:	lea    rax,[rip+0xc1ed]        # 0x140024534
   140018347:	ret    
   140018348:	lea    rax,[rip+0xc1e9]        # 0x140024538
   14001834f:	ret    
   140018350:	lea    rax,[rip+0xc1d9]        # 0x140024530
   140018357:	ret    
   140018358:	lea    rax,[rip+0xc261]        # 0x1400245c0
   14001835f:	ret    
   140018360:	rex push rbp
   140018362:	push   r12
   140018364:	push   r13
   140018366:	push   r14
   140018368:	push   r15
   14001836a:	sub    rsp,0x50
   14001836e:	lea    rbp,[rsp+0x40]
   140018373:	mov    QWORD PTR [rbp+0x40],rbx
   140018377:	mov    QWORD PTR [rbp+0x48],rsi
   14001837b:	mov    QWORD PTR [rbp+0x50],rdi
   14001837f:	mov    rax,QWORD PTR [rip+0xad3a]        # 0x1400230c0
   140018386:	xor    rax,rbp
   140018389:	mov    QWORD PTR [rbp+0x8],rax
   14001838d:	mov    ebx,DWORD PTR [rbp+0x60]
   140018390:	xor    edi,edi
   140018392:	mov    r14,r9
   140018395:	mov    r15d,r8d
   140018398:	mov    DWORD PTR [rbp+0x0],edx
   14001839b:	test   ebx,ebx
   14001839d:	jle    0x1400183c9
   14001839f:	mov    r10d,ebx
   1400183a2:	mov    rax,r9
   1400183a5:	dec    r10d
   1400183a8:	cmp    BYTE PTR [rax],dil
   1400183ab:	je     0x1400183b9
   1400183ad:	inc    rax
   1400183b0:	test   r10d,r10d
   1400183b3:	jne    0x1400183a5
   1400183b5:	or     r10d,0xffffffff
   1400183b9:	mov    eax,ebx
   1400183bb:	sub    eax,r10d
   1400183be:	dec    eax
   1400183c0:	cmp    eax,ebx
   1400183c2:	lea    ebx,[rax+0x1]
   1400183c5:	jl     0x1400183c9
   1400183c7:	mov    ebx,eax
   1400183c9:	mov    r12d,DWORD PTR [rbp+0x78]
   1400183cd:	mov    esi,edi
   1400183cf:	test   r12d,r12d
   1400183d2:	jne    0x1400183db
   1400183d4:	mov    rax,QWORD PTR [rcx]
   1400183d7:	mov    r12d,DWORD PTR [rax+0x4]
   1400183db:	neg    DWORD PTR [rbp+0x80]
   1400183e1:	mov    r9d,ebx
   1400183e4:	mov    r8,r14
   1400183e7:	sbb    edx,edx
   1400183e9:	mov    ecx,r12d
   1400183ec:	mov    DWORD PTR [rsp+0x28],edi
   1400183f0:	and    edx,0x8
   1400183f3:	mov    QWORD PTR [rsp+0x20],rdi
   1400183f8:	inc    edx
   1400183fa:	call   QWORD PTR [rip+0x1d30]        # 0x14001a130
   140018400:	movsxd r13,eax
   140018403:	test   eax,eax
   140018405:	jne    0x14001840e
   140018407:	xor    eax,eax
   140018409:	jmp    0x140018604
   14001840e:	movabs r8,0xffffffffffffff0
   140018418:	test   eax,eax
   14001841a:	jle    0x14001847a
   14001841c:	xor    edx,edx
   14001841e:	lea    rax,[rdx-0x20]
   140018422:	div    r13
   140018425:	cmp    rax,0x2
   140018429:	jb     0x14001847a
   14001842b:	lea    rcx,[r13+r13*1+0x10]
   140018430:	cmp    rcx,0x400
   140018437:	ja     0x140018463
   140018439:	lea    rax,[rcx+0xf]
   14001843d:	cmp    rax,rcx
   140018440:	ja     0x140018445
   140018442:	mov    rax,r8
   140018445:	and    rax,0xfffffffffffffff0
   140018449:	call   0x140016e80
   14001844e:	sub    rsp,rax
   140018451:	lea    rdi,[rsp+0x40]
   140018456:	test   rdi,rdi
   140018459:	je     0x140018407
   14001845b:	mov    DWORD PTR [rdi],0xcccc
   140018461:	jmp    0x140018476
   140018463:	call   0x14000b2d4
   140018468:	mov    rdi,rax
   14001846b:	test   rax,rax
   14001846e:	je     0x14001847a
   140018470:	mov    DWORD PTR [rax],0xdddd
   140018476:	add    rdi,0x10
   14001847a:	test   rdi,rdi
   14001847d:	je     0x140018407
   14001847f:	mov    r9d,ebx
   140018482:	mov    r8,r14
   140018485:	mov    edx,0x1
   14001848a:	mov    ecx,r12d
   14001848d:	mov    DWORD PTR [rsp+0x28],r13d
   140018492:	mov    QWORD PTR [rsp+0x20],rdi
   140018497:	call   QWORD PTR [rip+0x1c93]        # 0x14001a130
   14001849d:	test   eax,eax
   14001849f:	je     0x1400185f1
   1400184a5:	mov    r14d,DWORD PTR [rbp+0x0]
   1400184a9:	and    DWORD PTR [rsp+0x28],esi
   1400184ad:	and    QWORD PTR [rsp+0x20],rsi
   1400184b2:	mov    ecx,r14d
   1400184b5:	mov    r9d,r13d
   1400184b8:	mov    r8,rdi
   1400184bb:	mov    edx,r15d
   1400184be:	call   QWORD PTR [rip+0x1e64]        # 0x14001a328
   1400184c4:	movsxd rsi,eax
   1400184c7:	test   eax,eax
   1400184c9:	je     0x1400185f1
   1400184cf:	mov    r8d,0x400
   1400184d5:	test   r8d,r15d
   1400184d8:	je     0x140018511
   1400184da:	mov    ecx,DWORD PTR [rbp+0x70]
   1400184dd:	test   ecx,ecx
   1400184df:	je     0x1400185f1
   1400184e5:	cmp    esi,ecx
   1400184e7:	jg     0x1400185f1
   1400184ed:	mov    rax,QWORD PTR [rbp+0x68]
   1400184f1:	mov    DWORD PTR [rsp+0x28],ecx
   1400184f5:	mov    r9d,r13d
   1400184f8:	mov    r8,rdi
   1400184fb:	mov    edx,r15d
   1400184fe:	mov    ecx,r14d
   140018501:	mov    QWORD PTR [rsp+0x20],rax
   140018506:	call   QWORD PTR [rip+0x1e1c]        # 0x14001a328
   14001850c:	jmp    0x1400185f1
   140018511:	test   eax,eax
   140018513:	jle    0x14001857c
   140018515:	xor    edx,edx
   140018517:	lea    rax,[rdx-0x20]
   14001851b:	div    rsi
   14001851e:	cmp    rax,0x2
   140018522:	jb     0x14001857c
   140018524:	lea    rcx,[rsi+rsi*1+0x10]
   140018529:	cmp    rcx,r8
   14001852c:	ja     0x140018563
   14001852e:	lea    rax,[rcx+0xf]
   140018532:	cmp    rax,rcx
   140018535:	ja     0x140018541
   140018537:	movabs rax,0xffffffffffffff0
   140018541:	and    rax,0xfffffffffffffff0
   140018545:	call   0x140016e80
   14001854a:	sub    rsp,rax
   14001854d:	lea    rbx,[rsp+0x40]
   140018552:	test   rbx,rbx
   140018555:	je     0x1400185f1
   14001855b:	mov    DWORD PTR [rbx],0xcccc
   140018561:	jmp    0x140018576
   140018563:	call   0x14000b2d4
   140018568:	mov    rbx,rax
   14001856b:	test   rax,rax
   14001856e:	je     0x14001857e
   140018570:	mov    DWORD PTR [rax],0xdddd
   140018576:	add    rbx,0x10
   14001857a:	jmp    0x14001857e
   14001857c:	xor    ebx,ebx
   14001857e:	test   rbx,rbx
   140018581:	je     0x1400185f1
   140018583:	mov    r9d,r13d
   140018586:	mov    r8,rdi
   140018589:	mov    edx,r15d
   14001858c:	mov    ecx,r14d
   14001858f:	mov    DWORD PTR [rsp+0x28],esi
   140018593:	mov    QWORD PTR [rsp+0x20],rbx
   140018598:	call   QWORD PTR [rip+0x1d8a]        # 0x14001a328
   14001859e:	xor    ecx,ecx
   1400185a0:	test   eax,eax
   1400185a2:	je     0x1400185e0
   1400185a4:	mov    eax,DWORD PTR [rbp+0x70]
   1400185a7:	xor    edx,edx
   1400185a9:	mov    QWORD PTR [rsp+0x38],rcx
   1400185ae:	mov    r9d,esi
   1400185b1:	mov    r8,rbx
   1400185b4:	mov    QWORD PTR [rsp+0x30],rcx
   1400185b9:	test   eax,eax
   1400185bb:	jne    0x1400185c8
   1400185bd:	mov    DWORD PTR [rsp+0x28],ecx
   1400185c1:	mov    QWORD PTR [rsp+0x20],rcx
   1400185c6:	jmp    0x1400185d5
   1400185c8:	mov    DWORD PTR [rsp+0x28],eax
   1400185cc:	mov    rax,QWORD PTR [rbp+0x68]
   1400185d0:	mov    QWORD PTR [rsp+0x20],rax
   1400185d5:	mov    ecx,r12d
   1400185d8:	call   QWORD PTR [rip+0x1c22]        # 0x14001a200
   1400185de:	mov    esi,eax
   1400185e0:	lea    rcx,[rbx-0x10]
   1400185e4:	cmp    DWORD PTR [rcx],0xdddd
   1400185ea:	jne    0x1400185f1
   1400185ec:	call   0x14000b460
   1400185f1:	lea    rcx,[rdi-0x10]
   1400185f5:	cmp    DWORD PTR [rcx],0xdddd
   1400185fb:	jne    0x140018602
   1400185fd:	call   0x14000b460
   140018602:	mov    eax,esi
   140018604:	mov    rcx,QWORD PTR [rbp+0x8]
   140018608:	xor    rcx,rbp
   14001860b:	call   0x14000a820
   140018610:	mov    rbx,QWORD PTR [rbp+0x40]
   140018614:	mov    rsi,QWORD PTR [rbp+0x48]
   140018618:	mov    rdi,QWORD PTR [rbp+0x50]
   14001861c:	lea    rsp,[rbp+0x10]
   140018620:	pop    r15
   140018622:	pop    r14
   140018624:	pop    r13
   140018626:	pop    r12
   140018628:	pop    rbp
   140018629:	ret    
   14001862a:	int3   
   14001862b:	int3   
   14001862c:	mov    QWORD PTR [rsp+0x8],rbx
   140018631:	mov    QWORD PTR [rsp+0x10],rsi
   140018636:	push   rdi
   140018637:	sub    rsp,0x70
   14001863b:	mov    esi,edx
   14001863d:	mov    rdx,rcx
   140018640:	lea    rcx,[rsp+0x50]
   140018645:	mov    rbx,r9
   140018648:	mov    edi,r8d
   14001864b:	call   0x14000c6f4
   140018650:	mov    eax,DWORD PTR [rsp+0xb8]
   140018657:	mov    r11d,DWORD PTR [rsp+0xc0]
   14001865f:	lea    rcx,[rsp+0x50]
   140018664:	mov    DWORD PTR [rsp+0x40],r11d
   140018669:	mov    DWORD PTR [rsp+0x38],eax
   14001866d:	mov    eax,DWORD PTR [rsp+0xb0]
   140018674:	mov    DWORD PTR [rsp+0x30],eax
   140018678:	mov    rax,QWORD PTR [rsp+0xa8]
   140018680:	mov    r9,rbx
   140018683:	mov    QWORD PTR [rsp+0x28],rax
   140018688:	mov    eax,DWORD PTR [rsp+0xa0]
   14001868f:	mov    r8d,edi
   140018692:	mov    edx,esi
   140018694:	mov    DWORD PTR [rsp+0x20],eax
   140018698:	call   0x140018360
   14001869d:	cmp    BYTE PTR [rsp+0x68],0x0
   1400186a2:	je     0x1400186b0
   1400186a4:	mov    rcx,QWORD PTR [rsp+0x60]
   1400186a9:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400186b0:	lea    r11,[rsp+0x70]
   1400186b5:	mov    rbx,QWORD PTR [r11+0x10]
   1400186b9:	mov    rsi,QWORD PTR [r11+0x18]
   1400186bd:	mov    rsp,r11
   1400186c0:	pop    rdi
   1400186c1:	ret    
   1400186c2:	int3   
   1400186c3:	int3   
   1400186c4:	mov    QWORD PTR [rsp+0x8],rbx
   1400186c9:	mov    QWORD PTR [rsp+0x10],rbp
   1400186ce:	mov    QWORD PTR [rsp+0x18],rsi
   1400186d3:	push   rdi
   1400186d4:	sub    rsp,0x50
   1400186d8:	xor    ebp,ebp
   1400186da:	mov    rsi,r8
   1400186dd:	mov    rbx,rdx
   1400186e0:	mov    rdi,rcx
   1400186e3:	test   r8,r8
   1400186e6:	jne    0x1400186ef
   1400186e8:	xor    eax,eax
   1400186ea:	jmp    0x1400187d7
   1400186ef:	test   rcx,rcx
   1400186f2:	jne    0x14001870e
   1400186f4:	call   0x14000bdc0
   1400186f9:	mov    DWORD PTR [rax],0x16
   1400186ff:	call   0x14000d01c
   140018704:	mov    eax,0x7fffffff
   140018709:	jmp    0x1400187d7
   14001870e:	test   rdx,rdx
   140018711:	je     0x1400186f4
   140018713:	cmp    r8,0x7fffffff
   14001871a:	ja     0x1400186f4
   14001871c:	lea    rcx,[rsp+0x30]
   140018721:	mov    rdx,r9
   140018724:	call   0x14000c6f4
   140018729:	mov    r11,QWORD PTR [rsp+0x30]
   14001872e:	mov    ecx,DWORD PTR [r11+0x10]
   140018732:	test   ecx,ecx
   140018734:	jne    0x14001877d
   140018736:	sub    rdi,rbx
   140018739:	movzx  eax,WORD PTR [rdi+rbx*1]
   14001873d:	cmp    ax,0x41
   140018741:	jb     0x14001874d
   140018743:	cmp    ax,0x5a
   140018747:	ja     0x14001874d
   140018749:	add    ax,0x20
   14001874d:	movzx  ecx,WORD PTR [rbx]
   140018750:	cmp    cx,0x41
   140018754:	jb     0x140018760
   140018756:	cmp    cx,0x5a
   14001875a:	ja     0x140018760
   14001875c:	add    cx,0x20
   140018760:	add    rbx,0x2
   140018764:	dec    rsi
   140018767:	je     0x140018773
   140018769:	test   ax,ax
   14001876c:	je     0x140018773
   14001876e:	cmp    ax,cx
   140018771:	je     0x140018739
   140018773:	movzx  ecx,cx
   140018776:	movzx  eax,ax
   140018779:	sub    eax,ecx
   14001877b:	jmp    0x1400187c4
   14001877d:	mov    r9d,esi
   140018780:	mov    r8,rdi
   140018783:	mov    edx,0x1001
   140018788:	mov    DWORD PTR [rsp+0x28],esi
   14001878c:	mov    QWORD PTR [rsp+0x20],rbx
   140018791:	call   0x1400196f4
   140018796:	test   eax,eax
   140018798:	jne    0x1400187c1
   14001879a:	call   0x14000bdc0
   14001879f:	mov    DWORD PTR [rax],0x16
   1400187a5:	cmp    BYTE PTR [rsp+0x48],bpl
   1400187aa:	je     0x140018704
   1400187b0:	mov    rax,QWORD PTR [rsp+0x40]
   1400187b5:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400187bc:	jmp    0x140018704
   1400187c1:	add    eax,0xfffffffe
   1400187c4:	cmp    BYTE PTR [rsp+0x48],bpl
   1400187c9:	je     0x1400187d7
   1400187cb:	mov    rcx,QWORD PTR [rsp+0x40]
   1400187d0:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400187d7:	mov    rbx,QWORD PTR [rsp+0x60]
   1400187dc:	mov    rbp,QWORD PTR [rsp+0x68]
   1400187e1:	mov    rsi,QWORD PTR [rsp+0x70]
   1400187e6:	add    rsp,0x50
   1400187ea:	pop    rdi
   1400187eb:	ret    
   1400187ec:	sub    rsp,0x28
   1400187f0:	xor    r9d,r9d
   1400187f3:	mov    r10,rcx
   1400187f6:	cmp    DWORD PTR [rip+0xd16b],r9d        # 0x140025968
   1400187fd:	jne    0x140018877
   1400187ff:	test   rcx,rcx
   140018802:	jne    0x14001881e
   140018804:	call   0x14000bdc0
   140018809:	mov    DWORD PTR [rax],0x16
   14001880f:	call   0x14000d01c
   140018814:	mov    eax,0x7fffffff
   140018819:	add    rsp,0x28
   14001881d:	ret    
   14001881e:	test   rdx,rdx
   140018821:	je     0x140018804
   140018823:	cmp    r8,0x7fffffff
   14001882a:	ja     0x140018804
   14001882c:	sub    r10,rdx
   14001882f:	movzx  eax,WORD PTR [r10+rdx*1]
   140018834:	cmp    ax,0x41
   140018838:	jb     0x140018844
   14001883a:	cmp    ax,0x5a
   14001883e:	ja     0x140018844
   140018840:	add    ax,0x20
   140018844:	movzx  ecx,WORD PTR [rdx]
   140018847:	cmp    cx,0x41
   14001884b:	jb     0x140018857
   14001884d:	cmp    cx,0x5a
   140018851:	ja     0x140018857
   140018853:	add    cx,0x20
   140018857:	add    rdx,0x2
   14001885b:	dec    r8
   14001885e:	je     0x14001886a
   140018860:	test   ax,ax
   140018863:	je     0x14001886a
   140018865:	cmp    ax,cx
   140018868:	je     0x14001882f
   14001886a:	movzx  ecx,cx
   14001886d:	movzx  eax,ax
   140018870:	sub    eax,ecx
   140018872:	add    rsp,0x28
   140018876:	ret    
   140018877:	add    rsp,0x28
   14001887b:	jmp    0x1400186c4
   140018880:	mov    QWORD PTR [rsp+0x8],rbx
   140018885:	mov    QWORD PTR [rsp+0x10],rsi
   14001888a:	push   rdi
   14001888b:	sub    rsp,0x30
   14001888f:	mov    rbx,rcx
   140018892:	test   rcx,rcx
   140018895:	je     0x1400188e3
   140018897:	call   0x140013c34
   14001889c:	mov    edx,0x2
   1400188a1:	lea    rcx,[rax+0x1]
   1400188a5:	mov    rsi,rax
   1400188a8:	call   0x14000eb14
   1400188ad:	mov    rdi,rax
   1400188b0:	test   rax,rax
   1400188b3:	je     0x1400188e3
   1400188b5:	lea    rdx,[rsi+0x1]
   1400188b9:	mov    r8,rbx
   1400188bc:	mov    rcx,rax
   1400188bf:	call   0x14001517c
   1400188c4:	test   eax,eax
   1400188c6:	jne    0x1400188cd
   1400188c8:	mov    rax,rdi
   1400188cb:	jmp    0x1400188e5
   1400188cd:	and    QWORD PTR [rsp+0x20],0x0
   1400188d3:	xor    r9d,r9d
   1400188d6:	xor    r8d,r8d
   1400188d9:	xor    edx,edx
   1400188db:	xor    ecx,ecx
   1400188dd:	call   0x14000cf78
   1400188e2:	int3   
   1400188e3:	xor    eax,eax
   1400188e5:	mov    rbx,QWORD PTR [rsp+0x40]
   1400188ea:	mov    rsi,QWORD PTR [rsp+0x48]
   1400188ef:	add    rsp,0x30
   1400188f3:	pop    rdi
   1400188f4:	ret    
   1400188f5:	int3   
   1400188f6:	int3   
   1400188f7:	int3   
   1400188f8:	mov    QWORD PTR [rsp+0x10],rbx
   1400188fd:	mov    QWORD PTR [rsp+0x18],rbp
   140018902:	push   rdi
   140018903:	sub    rsp,0x30
   140018907:	and    QWORD PTR [rsp+0x40],0x0
   14001890d:	mov    rbx,QWORD PTR [rip+0xc084]        # 0x140024998
   140018914:	mov    rax,QWORD PTR [rbx]
   140018917:	test   rax,rax
   14001891a:	je     0x140018991
   14001891c:	or     ebp,0xffffffff
   14001891f:	and    DWORD PTR [rsp+0x28],0x0
   140018924:	and    QWORD PTR [rsp+0x20],0x0
   14001892a:	mov    r9d,ebp
   14001892d:	mov    r8,rax
   140018930:	xor    edx,edx
   140018932:	xor    ecx,ecx
   140018934:	call   QWORD PTR [rip+0x17f6]        # 0x14001a130
   14001893a:	movsxd rdi,eax
   14001893d:	test   eax,eax
   14001893f:	je     0x1400189b9
   140018941:	mov    rcx,rdi
   140018944:	mov    edx,0x2
   140018949:	call   0x140010b24
   14001894e:	mov    QWORD PTR [rsp+0x40],rax
   140018953:	test   rax,rax
   140018956:	je     0x1400189b9
   140018958:	mov    r8,QWORD PTR [rbx]
   14001895b:	mov    r9d,ebp
   14001895e:	xor    edx,edx
   140018960:	xor    ecx,ecx
   140018962:	mov    DWORD PTR [rsp+0x28],edi
   140018966:	mov    QWORD PTR [rsp+0x20],rax
   14001896b:	call   QWORD PTR [rip+0x17bf]        # 0x14001a130
   140018971:	test   eax,eax
   140018973:	je     0x1400189af
   140018975:	lea    rcx,[rsp+0x40]
   14001897a:	xor    edx,edx
   14001897c:	call   0x140013878
   140018981:	test   eax,eax
   140018983:	js     0x1400189a3
   140018985:	add    rbx,0x8
   140018989:	mov    rax,QWORD PTR [rbx]
   14001898c:	test   rax,rax
   14001898f:	jne    0x14001891f
   140018991:	xor    eax,eax
   140018993:	mov    rbx,QWORD PTR [rsp+0x48]
   140018998:	mov    rbp,QWORD PTR [rsp+0x50]
   14001899d:	add    rsp,0x30
   1400189a1:	pop    rdi
   1400189a2:	ret    
   1400189a3:	mov    rcx,QWORD PTR [rsp+0x40]
   1400189a8:	test   rcx,rcx
   1400189ab:	je     0x1400189b9
   1400189ad:	jmp    0x1400189b4
   1400189af:	mov    rcx,QWORD PTR [rsp+0x40]
   1400189b4:	call   0x14000b460
   1400189b9:	mov    eax,ebp
   1400189bb:	jmp    0x140018993
   1400189bd:	int3   
   1400189be:	int3   
   1400189bf:	int3   
   1400189c0:	mov    rax,rsp
   1400189c3:	mov    QWORD PTR [rax+0x8],rbx
   1400189c7:	mov    QWORD PTR [rax+0x10],rbp
   1400189cb:	mov    QWORD PTR [rax+0x18],rsi
   1400189cf:	mov    QWORD PTR [rax+0x20],rdi
   1400189d3:	push   r12
   1400189d5:	sub    rsp,0x30
   1400189d9:	mov    rbx,QWORD PTR [rip+0xc008]        # 0x1400249e8
   1400189e0:	xor    r12d,r12d
   1400189e3:	mov    edi,r12d
   1400189e6:	test   rbx,rbx
   1400189e9:	jne    0x140018a08
   1400189eb:	or     eax,0xffffffff
   1400189ee:	jmp    0x140018aad
   1400189f3:	cmp    ax,0x3d
   1400189f7:	je     0x1400189fb
   1400189f9:	inc    edi
   1400189fb:	mov    rcx,rbx
   1400189fe:	call   0x140013c34
   140018a03:	lea    rbx,[rbx+rax*2+0x2]
   140018a08:	movzx  eax,WORD PTR [rbx]
   140018a0b:	test   ax,ax
   140018a0e:	jne    0x1400189f3
   140018a10:	lea    eax,[rdi+0x1]
   140018a13:	mov    edx,0x8
   140018a18:	movsxd rcx,eax
   140018a1b:	call   0x140010b24
   140018a20:	mov    rdi,rax
   140018a23:	mov    QWORD PTR [rip+0xbf7e],rax        # 0x1400249a8
   140018a2a:	test   rax,rax
   140018a2d:	je     0x1400189eb
   140018a2f:	mov    rbx,QWORD PTR [rip+0xbfb2]        # 0x1400249e8
   140018a36:	cmp    WORD PTR [rbx],r12w
   140018a3a:	je     0x140018a8f
   140018a3c:	mov    rcx,rbx
   140018a3f:	call   0x140013c34
   140018a44:	cmp    WORD PTR [rbx],0x3d
   140018a48:	lea    esi,[rax+0x1]
   140018a4b:	je     0x140018a7b
   140018a4d:	movsxd rbp,esi
   140018a50:	mov    edx,0x2
   140018a55:	mov    rcx,rbp
   140018a58:	call   0x140010b24
   140018a5d:	mov    QWORD PTR [rdi],rax
   140018a60:	test   rax,rax
   140018a63:	je     0x140018add
   140018a65:	mov    r8,rbx
   140018a68:	mov    rdx,rbp
   140018a6b:	mov    rcx,rax
   140018a6e:	call   0x14001517c
   140018a73:	test   eax,eax
   140018a75:	jne    0x140018ac8
   140018a77:	add    rdi,0x8
   140018a7b:	movsxd rax,esi
   140018a7e:	lea    rbx,[rbx+rax*2]
   140018a82:	cmp    WORD PTR [rbx],r12w
   140018a86:	jne    0x140018a3c
   140018a88:	mov    rbx,QWORD PTR [rip+0xbf59]        # 0x1400249e8
   140018a8f:	mov    rcx,rbx
   140018a92:	call   0x14000b460
   140018a97:	mov    QWORD PTR [rip+0xbf4a],r12        # 0x1400249e8
   140018a9e:	mov    QWORD PTR [rdi],r12
   140018aa1:	mov    DWORD PTR [rip+0xe205],0x1        # 0x140026cb0
   140018aab:	xor    eax,eax
   140018aad:	mov    rbx,QWORD PTR [rsp+0x40]
   140018ab2:	mov    rbp,QWORD PTR [rsp+0x48]
   140018ab7:	mov    rsi,QWORD PTR [rsp+0x50]
   140018abc:	mov    rdi,QWORD PTR [rsp+0x58]
   140018ac1:	add    rsp,0x30
   140018ac5:	pop    r12
   140018ac7:	ret    
   140018ac8:	xor    r9d,r9d
   140018acb:	xor    r8d,r8d
   140018ace:	xor    edx,edx
   140018ad0:	xor    ecx,ecx
   140018ad2:	mov    QWORD PTR [rsp+0x20],r12
   140018ad7:	call   0x14000cf78
   140018adc:	int3   
   140018add:	mov    rcx,QWORD PTR [rip+0xbec4]        # 0x1400249a8
   140018ae4:	call   0x14000b460
   140018ae9:	mov    QWORD PTR [rip+0xbeb8],r12        # 0x1400249a8
   140018af0:	jmp    0x1400189eb
   140018af5:	int3   
   140018af6:	int3   
   140018af7:	int3   
   140018af8:	mov    QWORD PTR [rsp+0x8],rbx
   140018afd:	mov    QWORD PTR [rsp+0x10],rbp
   140018b02:	mov    QWORD PTR [rsp+0x18],rsi
   140018b07:	push   rdi
   140018b08:	sub    rsp,0x20
   140018b0c:	call   QWORD PTR [rip+0x16fe]        # 0x14001a210
   140018b12:	xor    ebx,ebx
   140018b14:	mov    rdi,rax
   140018b17:	test   rax,rax
   140018b1a:	je     0x140018b68
   140018b1c:	cmp    WORD PTR [rdi],bx
   140018b1f:	je     0x140018b33
   140018b21:	add    rax,0x2
   140018b25:	cmp    WORD PTR [rax],bx
   140018b28:	jne    0x140018b21
   140018b2a:	add    rax,0x2
   140018b2e:	cmp    WORD PTR [rax],bx
   140018b31:	jne    0x140018b21
   140018b33:	sub    eax,edi
   140018b35:	add    eax,0x2
   140018b38:	movsxd rbp,eax
   140018b3b:	mov    rcx,rbp
   140018b3e:	call   0x140010aa4
   140018b43:	mov    rsi,rax
   140018b46:	test   rax,rax
   140018b49:	je     0x140018b5c
   140018b4b:	mov    r8,rbp
   140018b4e:	mov    rdx,rdi
   140018b51:	mov    rcx,rax
   140018b54:	call   0x14000a140
   140018b59:	mov    rbx,rsi
   140018b5c:	mov    rcx,rdi
   140018b5f:	call   QWORD PTR [rip+0x16a3]        # 0x14001a208
   140018b65:	mov    rax,rbx
   140018b68:	mov    rbx,QWORD PTR [rsp+0x30]
   140018b6d:	mov    rbp,QWORD PTR [rsp+0x38]
   140018b72:	mov    rsi,QWORD PTR [rsp+0x40]
   140018b77:	add    rsp,0x20
   140018b7b:	pop    rdi
   140018b7c:	ret    
   140018b7d:	int3   
   140018b7e:	int3   
   140018b7f:	int3   
   140018b80:	jmp    0x140018b8b
   140018b82:	cmp    ax,dx
   140018b85:	je     0x140018b98
   140018b87:	add    rcx,0x2
   140018b8b:	movzx  eax,WORD PTR [rcx]
   140018b8e:	test   ax,ax
   140018b91:	jne    0x140018b82
   140018b93:	cmp    ax,dx
   140018b96:	jne    0x140018b9c
   140018b98:	mov    rax,rcx
   140018b9b:	ret    
   140018b9c:	xor    eax,eax
   140018b9e:	ret    
   140018b9f:	int3   
   140018ba0:	mov    QWORD PTR [rsp+0x8],rbx
   140018ba5:	mov    QWORD PTR [rsp+0x10],rsi
   140018baa:	push   rdi
   140018bab:	sub    rsp,0x30
   140018baf:	mov    rbx,rcx
   140018bb2:	test   rcx,rcx
   140018bb5:	je     0x140018bfe
   140018bb7:	call   0x140009fa0
   140018bbc:	mov    rsi,rax
   140018bbf:	lea    rcx,[rax+0x1]
   140018bc3:	call   0x14000b2d4
   140018bc8:	mov    rdi,rax
   140018bcb:	test   rax,rax
   140018bce:	je     0x140018bfe
   140018bd0:	lea    rdx,[rsi+0x1]
   140018bd4:	mov    r8,rbx
   140018bd7:	mov    rcx,rax
   140018bda:	call   0x14000eab0
   140018bdf:	test   eax,eax
   140018be1:	jne    0x140018be8
   140018be3:	mov    rax,rdi
   140018be6:	jmp    0x140018c00
   140018be8:	and    QWORD PTR [rsp+0x20],0x0
   140018bee:	xor    r9d,r9d
   140018bf1:	xor    r8d,r8d
   140018bf4:	xor    edx,edx
   140018bf6:	xor    ecx,ecx
   140018bf8:	call   0x14000cf78
   140018bfd:	int3   
   140018bfe:	xor    eax,eax
   140018c00:	mov    rbx,QWORD PTR [rsp+0x40]
   140018c05:	mov    rsi,QWORD PTR [rsp+0x48]
   140018c0a:	add    rsp,0x30
   140018c0e:	pop    rdi
   140018c0f:	ret    
   140018c10:	rex push rbp
   140018c12:	push   r12
   140018c14:	push   r13
   140018c16:	push   r14
   140018c18:	push   r15
   140018c1a:	sub    rsp,0x40
   140018c1e:	lea    rbp,[rsp+0x30]
   140018c23:	mov    QWORD PTR [rbp+0x40],rbx
   140018c27:	mov    QWORD PTR [rbp+0x48],rsi
   140018c2b:	mov    QWORD PTR [rbp+0x50],rdi
   140018c2f:	mov    rax,QWORD PTR [rip+0xa48a]        # 0x1400230c0
   140018c36:	xor    rax,rbp
   140018c39:	mov    QWORD PTR [rbp+0x0],rax
   140018c3d:	mov    esi,DWORD PTR [rbp+0x68]
   140018c40:	xor    edi,edi
   140018c42:	mov    r13d,r9d
   140018c45:	mov    r14,r8
   140018c48:	mov    r15d,edx
   140018c4b:	test   esi,esi
   140018c4d:	jne    0x140018c55
   140018c4f:	mov    rax,QWORD PTR [rcx]
   140018c52:	mov    esi,DWORD PTR [rax+0x4]
   140018c55:	neg    DWORD PTR [rbp+0x70]
   140018c58:	mov    ecx,esi
   140018c5a:	mov    DWORD PTR [rsp+0x28],edi
   140018c5e:	sbb    edx,edx
   140018c60:	mov    QWORD PTR [rsp+0x20],rdi
   140018c65:	and    edx,0x8
   140018c68:	inc    edx
   140018c6a:	call   QWORD PTR [rip+0x14c0]        # 0x14001a130
   140018c70:	movsxd r12,eax
   140018c73:	test   eax,eax
   140018c75:	jne    0x140018c7e
   140018c77:	xor    eax,eax
   140018c79:	jmp    0x140018d48
   140018c7e:	jle    0x140018ce7
   140018c80:	movabs rax,0x7ffffffffffffff0
   140018c8a:	cmp    r12,rax
   140018c8d:	ja     0x140018ce7
   140018c8f:	lea    rcx,[r12+r12*1+0x10]
   140018c94:	cmp    rcx,0x400
   140018c9b:	ja     0x140018cce
   140018c9d:	lea    rax,[rcx+0xf]
   140018ca1:	cmp    rax,rcx
   140018ca4:	ja     0x140018cb0
   140018ca6:	movabs rax,0xffffffffffffff0
   140018cb0:	and    rax,0xfffffffffffffff0
   140018cb4:	call   0x140016e80
   140018cb9:	sub    rsp,rax
   140018cbc:	lea    rbx,[rsp+0x30]
   140018cc1:	test   rbx,rbx
   140018cc4:	je     0x140018c77
   140018cc6:	mov    DWORD PTR [rbx],0xcccc
   140018ccc:	jmp    0x140018ce1
   140018cce:	call   0x14000b2d4
   140018cd3:	mov    rbx,rax
   140018cd6:	test   rax,rax
   140018cd9:	je     0x140018cea
   140018cdb:	mov    DWORD PTR [rax],0xdddd
   140018ce1:	add    rbx,0x10
   140018ce5:	jmp    0x140018cea
   140018ce7:	mov    rbx,rdi
   140018cea:	test   rbx,rbx
   140018ced:	je     0x140018c77
   140018cef:	mov    r8,r12
   140018cf2:	xor    edx,edx
   140018cf4:	mov    rcx,rbx
   140018cf7:	add    r8,r8
   140018cfa:	call   0x14000a530
   140018cff:	mov    r9d,r13d
   140018d02:	mov    r8,r14
   140018d05:	mov    edx,0x1
   140018d0a:	mov    ecx,esi
   140018d0c:	mov    DWORD PTR [rsp+0x28],r12d
   140018d11:	mov    QWORD PTR [rsp+0x20],rbx
   140018d16:	call   QWORD PTR [rip+0x1414]        # 0x14001a130
   140018d1c:	test   eax,eax
   140018d1e:	je     0x140018d35
   140018d20:	mov    r9,QWORD PTR [rbp+0x60]
   140018d24:	mov    r8d,eax
   140018d27:	mov    rdx,rbx
   140018d2a:	mov    ecx,r15d
   140018d2d:	call   QWORD PTR [rip+0x15fd]        # 0x14001a330
   140018d33:	mov    edi,eax
   140018d35:	lea    rcx,[rbx-0x10]
   140018d39:	cmp    DWORD PTR [rcx],0xdddd
   140018d3f:	jne    0x140018d46
   140018d41:	call   0x14000b460
   140018d46:	mov    eax,edi
   140018d48:	mov    rcx,QWORD PTR [rbp+0x0]
   140018d4c:	xor    rcx,rbp
   140018d4f:	call   0x14000a820
   140018d54:	mov    rbx,QWORD PTR [rbp+0x40]
   140018d58:	mov    rsi,QWORD PTR [rbp+0x48]
   140018d5c:	mov    rdi,QWORD PTR [rbp+0x50]
   140018d60:	lea    rsp,[rbp+0x10]
   140018d64:	pop    r15
   140018d66:	pop    r14
   140018d68:	pop    r13
   140018d6a:	pop    r12
   140018d6c:	pop    rbp
   140018d6d:	ret    
   140018d6e:	int3   
   140018d6f:	int3   
   140018d70:	mov    QWORD PTR [rsp+0x8],rbx
   140018d75:	mov    QWORD PTR [rsp+0x10],rsi
   140018d7a:	push   rdi
   140018d7b:	sub    rsp,0x60
   140018d7f:	mov    esi,edx
   140018d81:	mov    rdx,rcx
   140018d84:	lea    rcx,[rsp+0x40]
   140018d89:	mov    ebx,r9d
   140018d8c:	mov    rdi,r8
   140018d8f:	call   0x14000c6f4
   140018d94:	mov    r11d,DWORD PTR [rsp+0xa8]
   140018d9c:	mov    eax,DWORD PTR [rsp+0x98]
   140018da3:	lea    rcx,[rsp+0x40]
   140018da8:	mov    DWORD PTR [rsp+0x30],r11d
   140018dad:	mov    DWORD PTR [rsp+0x28],eax
   140018db1:	mov    rax,QWORD PTR [rsp+0x90]
   140018db9:	mov    r9d,ebx
   140018dbc:	mov    r8,rdi
   140018dbf:	mov    edx,esi
   140018dc1:	mov    QWORD PTR [rsp+0x20],rax
   140018dc6:	call   0x140018c10
   140018dcb:	cmp    BYTE PTR [rsp+0x58],0x0
   140018dd0:	je     0x140018dde
   140018dd2:	mov    rcx,QWORD PTR [rsp+0x50]
   140018dd7:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140018dde:	mov    rbx,QWORD PTR [rsp+0x70]
   140018de3:	mov    rsi,QWORD PTR [rsp+0x78]
   140018de8:	add    rsp,0x60
   140018dec:	pop    rdi
   140018ded:	ret    
   140018dee:	int3   
   140018def:	int3   
   140018df0:	test   rcx,rcx
   140018df3:	je     0x1400191dd
   140018df9:	push   rbx
   140018dfa:	sub    rsp,0x20
   140018dfe:	mov    rbx,rcx
   140018e01:	mov    rcx,QWORD PTR [rcx+0x8]
   140018e05:	call   0x14000b460
   140018e0a:	mov    rcx,QWORD PTR [rbx+0x10]
   140018e0e:	call   0x14000b460
   140018e13:	mov    rcx,QWORD PTR [rbx+0x18]
   140018e17:	call   0x14000b460
   140018e1c:	mov    rcx,QWORD PTR [rbx+0x20]
   140018e20:	call   0x14000b460
   140018e25:	mov    rcx,QWORD PTR [rbx+0x28]
   140018e29:	call   0x14000b460
   140018e2e:	mov    rcx,QWORD PTR [rbx+0x30]
   140018e32:	call   0x14000b460
   140018e37:	mov    rcx,QWORD PTR [rbx]
   140018e3a:	call   0x14000b460
   140018e3f:	mov    rcx,QWORD PTR [rbx+0x40]
   140018e43:	call   0x14000b460
   140018e48:	mov    rcx,QWORD PTR [rbx+0x48]
   140018e4c:	call   0x14000b460
   140018e51:	mov    rcx,QWORD PTR [rbx+0x50]
   140018e55:	call   0x14000b460
   140018e5a:	mov    rcx,QWORD PTR [rbx+0x58]
   140018e5e:	call   0x14000b460
   140018e63:	mov    rcx,QWORD PTR [rbx+0x60]
   140018e67:	call   0x14000b460
   140018e6c:	mov    rcx,QWORD PTR [rbx+0x68]
   140018e70:	call   0x14000b460
   140018e75:	mov    rcx,QWORD PTR [rbx+0x38]
   140018e79:	call   0x14000b460
   140018e7e:	mov    rcx,QWORD PTR [rbx+0x70]
   140018e82:	call   0x14000b460
   140018e87:	mov    rcx,QWORD PTR [rbx+0x78]
   140018e8b:	call   0x14000b460
   140018e90:	mov    rcx,QWORD PTR [rbx+0x80]
   140018e97:	call   0x14000b460
   140018e9c:	mov    rcx,QWORD PTR [rbx+0x88]
   140018ea3:	call   0x14000b460
   140018ea8:	mov    rcx,QWORD PTR [rbx+0x90]
   140018eaf:	call   0x14000b460
   140018eb4:	mov    rcx,QWORD PTR [rbx+0x98]
   140018ebb:	call   0x14000b460
   140018ec0:	mov    rcx,QWORD PTR [rbx+0xa0]
   140018ec7:	call   0x14000b460
   140018ecc:	mov    rcx,QWORD PTR [rbx+0xa8]
   140018ed3:	call   0x14000b460
   140018ed8:	mov    rcx,QWORD PTR [rbx+0xb0]
   140018edf:	call   0x14000b460
   140018ee4:	mov    rcx,QWORD PTR [rbx+0xb8]
   140018eeb:	call   0x14000b460
   140018ef0:	mov    rcx,QWORD PTR [rbx+0xc0]
   140018ef7:	call   0x14000b460
   140018efc:	mov    rcx,QWORD PTR [rbx+0xc8]
   140018f03:	call   0x14000b460
   140018f08:	mov    rcx,QWORD PTR [rbx+0xd0]
   140018f0f:	call   0x14000b460
   140018f14:	mov    rcx,QWORD PTR [rbx+0xd8]
   140018f1b:	call   0x14000b460
   140018f20:	mov    rcx,QWORD PTR [rbx+0xe0]
   140018f27:	call   0x14000b460
   140018f2c:	mov    rcx,QWORD PTR [rbx+0xe8]
   140018f33:	call   0x14000b460
   140018f38:	mov    rcx,QWORD PTR [rbx+0xf0]
   140018f3f:	call   0x14000b460
   140018f44:	mov    rcx,QWORD PTR [rbx+0xf8]
   140018f4b:	call   0x14000b460
   140018f50:	mov    rcx,QWORD PTR [rbx+0x100]
   140018f57:	call   0x14000b460
   140018f5c:	mov    rcx,QWORD PTR [rbx+0x108]
   140018f63:	call   0x14000b460
   140018f68:	mov    rcx,QWORD PTR [rbx+0x110]
   140018f6f:	call   0x14000b460
   140018f74:	mov    rcx,QWORD PTR [rbx+0x118]
   140018f7b:	call   0x14000b460
   140018f80:	mov    rcx,QWORD PTR [rbx+0x120]
   140018f87:	call   0x14000b460
   140018f8c:	mov    rcx,QWORD PTR [rbx+0x128]
   140018f93:	call   0x14000b460
   140018f98:	mov    rcx,QWORD PTR [rbx+0x130]
   140018f9f:	call   0x14000b460
   140018fa4:	mov    rcx,QWORD PTR [rbx+0x138]
   140018fab:	call   0x14000b460
   140018fb0:	mov    rcx,QWORD PTR [rbx+0x140]
   140018fb7:	call   0x14000b460
   140018fbc:	mov    rcx,QWORD PTR [rbx+0x148]
   140018fc3:	call   0x14000b460
   140018fc8:	mov    rcx,QWORD PTR [rbx+0x150]
   140018fcf:	call   0x14000b460
   140018fd4:	mov    rcx,QWORD PTR [rbx+0x170]
   140018fdb:	call   0x14000b460
   140018fe0:	mov    rcx,QWORD PTR [rbx+0x178]
   140018fe7:	call   0x14000b460
   140018fec:	mov    rcx,QWORD PTR [rbx+0x180]
   140018ff3:	call   0x14000b460
   140018ff8:	mov    rcx,QWORD PTR [rbx+0x188]
   140018fff:	call   0x14000b460
   140019004:	mov    rcx,QWORD PTR [rbx+0x190]
   14001900b:	call   0x14000b460
   140019010:	mov    rcx,QWORD PTR [rbx+0x198]
   140019017:	call   0x14000b460
   14001901c:	mov    rcx,QWORD PTR [rbx+0x168]
   140019023:	call   0x14000b460
   140019028:	mov    rcx,QWORD PTR [rbx+0x1a8]
   14001902f:	call   0x14000b460
   140019034:	mov    rcx,QWORD PTR [rbx+0x1b0]
   14001903b:	call   0x14000b460
   140019040:	mov    rcx,QWORD PTR [rbx+0x1b8]
   140019047:	call   0x14000b460
   14001904c:	mov    rcx,QWORD PTR [rbx+0x1c0]
   140019053:	call   0x14000b460
   140019058:	mov    rcx,QWORD PTR [rbx+0x1c8]
   14001905f:	call   0x14000b460
   140019064:	mov    rcx,QWORD PTR [rbx+0x1d0]
   14001906b:	call   0x14000b460
   140019070:	mov    rcx,QWORD PTR [rbx+0x1a0]
   140019077:	call   0x14000b460
   14001907c:	mov    rcx,QWORD PTR [rbx+0x1d8]
   140019083:	call   0x14000b460
   140019088:	mov    rcx,QWORD PTR [rbx+0x1e0]
   14001908f:	call   0x14000b460
   140019094:	mov    rcx,QWORD PTR [rbx+0x1e8]
   14001909b:	call   0x14000b460
   1400190a0:	mov    rcx,QWORD PTR [rbx+0x1f0]
   1400190a7:	call   0x14000b460
   1400190ac:	mov    rcx,QWORD PTR [rbx+0x1f8]
   1400190b3:	call   0x14000b460
   1400190b8:	mov    rcx,QWORD PTR [rbx+0x200]
   1400190bf:	call   0x14000b460
   1400190c4:	mov    rcx,QWORD PTR [rbx+0x208]
   1400190cb:	call   0x14000b460
   1400190d0:	mov    rcx,QWORD PTR [rbx+0x210]
   1400190d7:	call   0x14000b460
   1400190dc:	mov    rcx,QWORD PTR [rbx+0x218]
   1400190e3:	call   0x14000b460
   1400190e8:	mov    rcx,QWORD PTR [rbx+0x220]
   1400190ef:	call   0x14000b460
   1400190f4:	mov    rcx,QWORD PTR [rbx+0x228]
   1400190fb:	call   0x14000b460
   140019100:	mov    rcx,QWORD PTR [rbx+0x230]
   140019107:	call   0x14000b460
   14001910c:	mov    rcx,QWORD PTR [rbx+0x238]
   140019113:	call   0x14000b460
   140019118:	mov    rcx,QWORD PTR [rbx+0x240]
   14001911f:	call   0x14000b460
   140019124:	mov    rcx,QWORD PTR [rbx+0x248]
   14001912b:	call   0x14000b460
   140019130:	mov    rcx,QWORD PTR [rbx+0x250]
   140019137:	call   0x14000b460
   14001913c:	mov    rcx,QWORD PTR [rbx+0x258]
   140019143:	call   0x14000b460
   140019148:	mov    rcx,QWORD PTR [rbx+0x260]
   14001914f:	call   0x14000b460
   140019154:	mov    rcx,QWORD PTR [rbx+0x268]
   14001915b:	call   0x14000b460
   140019160:	mov    rcx,QWORD PTR [rbx+0x270]
   140019167:	call   0x14000b460
   14001916c:	mov    rcx,QWORD PTR [rbx+0x278]
   140019173:	call   0x14000b460
   140019178:	mov    rcx,QWORD PTR [rbx+0x280]
   14001917f:	call   0x14000b460
   140019184:	mov    rcx,QWORD PTR [rbx+0x288]
   14001918b:	call   0x14000b460
   140019190:	mov    rcx,QWORD PTR [rbx+0x290]
   140019197:	call   0x14000b460
   14001919c:	mov    rcx,QWORD PTR [rbx+0x298]
   1400191a3:	call   0x14000b460
   1400191a8:	mov    rcx,QWORD PTR [rbx+0x2a0]
   1400191af:	call   0x14000b460
   1400191b4:	mov    rcx,QWORD PTR [rbx+0x2a8]
   1400191bb:	call   0x14000b460
   1400191c0:	mov    rcx,QWORD PTR [rbx+0x2b0]
   1400191c7:	call   0x14000b460
   1400191cc:	mov    rcx,QWORD PTR [rbx+0x2b8]
   1400191d3:	call   0x14000b460
   1400191d8:	add    rsp,0x20
   1400191dc:	pop    rbx
   1400191dd:	ret    
   1400191de:	int3   
   1400191df:	int3   
   1400191e0:	test   rcx,rcx
   1400191e3:	je     0x14001924b
   1400191e5:	push   rbx
   1400191e6:	sub    rsp,0x20
   1400191ea:	mov    rbx,rcx
   1400191ed:	mov    rcx,QWORD PTR [rcx]
   1400191f0:	cmp    rcx,QWORD PTR [rip+0xb459]        # 0x140024650
   1400191f7:	je     0x1400191fe
   1400191f9:	call   0x14000b460
   1400191fe:	mov    rcx,QWORD PTR [rbx+0x8]
   140019202:	cmp    rcx,QWORD PTR [rip+0xb44f]        # 0x140024658
   140019209:	je     0x140019210
   14001920b:	call   0x14000b460
   140019210:	mov    rcx,QWORD PTR [rbx+0x10]
   140019214:	cmp    rcx,QWORD PTR [rip+0xb445]        # 0x140024660
   14001921b:	je     0x140019222
   14001921d:	call   0x14000b460
   140019222:	mov    rcx,QWORD PTR [rbx+0x58]
   140019226:	cmp    rcx,QWORD PTR [rip+0xb47b]        # 0x1400246a8
   14001922d:	je     0x140019234
   14001922f:	call   0x14000b460
   140019234:	mov    rcx,QWORD PTR [rbx+0x60]
   140019238:	cmp    rcx,QWORD PTR [rip+0xb471]        # 0x1400246b0
   14001923f:	je     0x140019246
   140019241:	call   0x14000b460
   140019246:	add    rsp,0x20
   14001924a:	pop    rbx
   14001924b:	ret    
   14001924c:	test   rcx,rcx
   14001924f:	je     0x140019355
   140019255:	push   rbx
   140019256:	sub    rsp,0x20
   14001925a:	mov    rbx,rcx
   14001925d:	mov    rcx,QWORD PTR [rcx+0x18]
   140019261:	cmp    rcx,QWORD PTR [rip+0xb400]        # 0x140024668
   140019268:	je     0x14001926f
   14001926a:	call   0x14000b460
   14001926f:	mov    rcx,QWORD PTR [rbx+0x20]
   140019273:	cmp    rcx,QWORD PTR [rip+0xb3f6]        # 0x140024670
   14001927a:	je     0x140019281
   14001927c:	call   0x14000b460
   140019281:	mov    rcx,QWORD PTR [rbx+0x28]
   140019285:	cmp    rcx,QWORD PTR [rip+0xb3ec]        # 0x140024678
   14001928c:	je     0x140019293
   14001928e:	call   0x14000b460
   140019293:	mov    rcx,QWORD PTR [rbx+0x30]
   140019297:	cmp    rcx,QWORD PTR [rip+0xb3e2]        # 0x140024680
   14001929e:	je     0x1400192a5
   1400192a0:	call   0x14000b460
   1400192a5:	mov    rcx,QWORD PTR [rbx+0x38]
   1400192a9:	cmp    rcx,QWORD PTR [rip+0xb3d8]        # 0x140024688
   1400192b0:	je     0x1400192b7
   1400192b2:	call   0x14000b460
   1400192b7:	mov    rcx,QWORD PTR [rbx+0x40]
   1400192bb:	cmp    rcx,QWORD PTR [rip+0xb3ce]        # 0x140024690
   1400192c2:	je     0x1400192c9
   1400192c4:	call   0x14000b460
   1400192c9:	mov    rcx,QWORD PTR [rbx+0x48]
   1400192cd:	cmp    rcx,QWORD PTR [rip+0xb3c4]        # 0x140024698
   1400192d4:	je     0x1400192db
   1400192d6:	call   0x14000b460
   1400192db:	mov    rcx,QWORD PTR [rbx+0x68]
   1400192df:	cmp    rcx,QWORD PTR [rip+0xb3d2]        # 0x1400246b8
   1400192e6:	je     0x1400192ed
   1400192e8:	call   0x14000b460
   1400192ed:	mov    rcx,QWORD PTR [rbx+0x70]
   1400192f1:	cmp    rcx,QWORD PTR [rip+0xb3c8]        # 0x1400246c0
   1400192f8:	je     0x1400192ff
   1400192fa:	call   0x14000b460
   1400192ff:	mov    rcx,QWORD PTR [rbx+0x78]
   140019303:	cmp    rcx,QWORD PTR [rip+0xb3be]        # 0x1400246c8
   14001930a:	je     0x140019311
   14001930c:	call   0x14000b460
   140019311:	mov    rcx,QWORD PTR [rbx+0x80]
   140019318:	cmp    rcx,QWORD PTR [rip+0xb3b1]        # 0x1400246d0
   14001931f:	je     0x140019326
   140019321:	call   0x14000b460
   140019326:	mov    rcx,QWORD PTR [rbx+0x88]
   14001932d:	cmp    rcx,QWORD PTR [rip+0xb3a4]        # 0x1400246d8
   140019334:	je     0x14001933b
   140019336:	call   0x14000b460
   14001933b:	mov    rcx,QWORD PTR [rbx+0x90]
   140019342:	cmp    rcx,QWORD PTR [rip+0xb397]        # 0x1400246e0
   140019349:	je     0x140019350
   14001934b:	call   0x14000b460
   140019350:	add    rsp,0x20
   140019354:	pop    rbx
   140019355:	ret    
   140019356:	int3   
   140019357:	int3   
   140019358:	sub    rsp,0x28
   14001935c:	call   0x14000d204
   140019361:	mov    rcx,QWORD PTR [rax+0xc0]
   140019368:	cmp    rcx,QWORD PTR [rip+0xb071]        # 0x1400243e0
   14001936f:	je     0x140019387
   140019371:	mov    eax,DWORD PTR [rax+0xc8]
   140019377:	test   DWORD PTR [rip+0xac33],eax        # 0x140023fb0
   14001937d:	jne    0x140019387
   14001937f:	call   0x140014c2c
   140019384:	mov    rcx,rax
   140019387:	mov    eax,DWORD PTR [rcx+0x4]
   14001938a:	add    rsp,0x28
   14001938e:	ret    
   14001938f:	int3   
   140019390:	mov    r10,rcx
   140019393:	test   r8,r8
   140019396:	je     0x1400193d3
   140019398:	movzx  r9d,BYTE PTR [r10]
   14001939c:	inc    r10
   14001939f:	lea    eax,[r9-0x41]
   1400193a3:	cmp    eax,0x19
   1400193a6:	ja     0x1400193ac
   1400193a8:	add    r9d,0x20
   1400193ac:	movzx  ecx,BYTE PTR [rdx]
   1400193af:	inc    rdx
   1400193b2:	lea    eax,[rcx-0x41]
   1400193b5:	cmp    eax,0x19
   1400193b8:	ja     0x1400193bd
   1400193ba:	add    ecx,0x20
   1400193bd:	dec    r8
   1400193c0:	je     0x1400193cc
   1400193c2:	test   r9d,r9d
   1400193c5:	je     0x1400193cc
   1400193c7:	cmp    r9d,ecx
   1400193ca:	je     0x140019398
   1400193cc:	sub    r9d,ecx
   1400193cf:	mov    eax,r9d
   1400193d2:	ret    
   1400193d3:	xor    eax,eax
   1400193d5:	ret    
   1400193d6:	int3   
   1400193d7:	int3   
   1400193d8:	mov    rax,rsp
   1400193db:	mov    QWORD PTR [rax+0x8],rbx
   1400193df:	mov    QWORD PTR [rax+0x10],rsi
   1400193e3:	mov    QWORD PTR [rax+0x18],rdi
   1400193e7:	mov    QWORD PTR [rax+0x20],r12
   1400193eb:	push   rbp
   1400193ec:	mov    rbp,rsp
   1400193ef:	sub    rsp,0x40
   1400193f3:	mov    r12,r8
   1400193f6:	mov    rsi,rdx
   1400193f9:	mov    rdi,rcx
   1400193fc:	test   r8,r8
   1400193ff:	je     0x1400194bf
   140019405:	lea    rcx,[rbp-0x20]
   140019409:	mov    rdx,r9
   14001940c:	call   0x14000c6f4
   140019411:	test   rdi,rdi
   140019414:	jne    0x140019441
   140019416:	call   0x14000bdc0
   14001941b:	mov    DWORD PTR [rax],0x16
   140019421:	call   0x14000d01c
   140019426:	cmp    BYTE PTR [rbp-0x8],0x0
   14001942a:	je     0x140019437
   14001942c:	mov    rax,QWORD PTR [rbp-0x10]
   140019430:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140019437:	mov    eax,0x7fffffff
   14001943c:	jmp    0x1400194c1
   140019441:	test   rsi,rsi
   140019444:	je     0x140019416
   140019446:	cmp    r12,0x7fffffff
   14001944d:	ja     0x140019416
   14001944f:	mov    rax,QWORD PTR [rbp-0x20]
   140019453:	cmp    DWORD PTR [rax+0x14],0x0
   140019457:	jne    0x14001947a
   140019459:	mov    r8,r12
   14001945c:	mov    rdx,rsi
   14001945f:	mov    rcx,rdi
   140019462:	call   0x140019390
   140019467:	cmp    BYTE PTR [rbp-0x8],0x0
   14001946b:	je     0x1400194c1
   14001946d:	mov    rcx,QWORD PTR [rbp-0x10]
   140019471:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140019478:	jmp    0x1400194c1
   14001947a:	sub    rdi,rsi
   14001947d:	movzx  ecx,BYTE PTR [rdi+rsi*1]
   140019481:	lea    rdx,[rbp-0x20]
   140019485:	call   0x14001979c
   14001948a:	movzx  ecx,BYTE PTR [rsi]
   14001948d:	lea    rdx,[rbp-0x20]
   140019491:	mov    ebx,eax
   140019493:	call   0x14001979c
   140019498:	inc    rsi
   14001949b:	dec    r12
   14001949e:	je     0x1400194a8
   1400194a0:	test   ebx,ebx
   1400194a2:	je     0x1400194a8
   1400194a4:	cmp    ebx,eax
   1400194a6:	je     0x14001947d
   1400194a8:	sub    ebx,eax
   1400194aa:	cmp    BYTE PTR [rbp-0x8],0x0
   1400194ae:	je     0x1400194bb
   1400194b0:	mov    rcx,QWORD PTR [rbp-0x10]
   1400194b4:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400194bb:	mov    eax,ebx
   1400194bd:	jmp    0x1400194c1
   1400194bf:	xor    eax,eax
   1400194c1:	mov    rbx,QWORD PTR [rsp+0x50]
   1400194c6:	mov    rsi,QWORD PTR [rsp+0x58]
   1400194cb:	mov    rdi,QWORD PTR [rsp+0x60]
   1400194d0:	mov    r12,QWORD PTR [rsp+0x68]
   1400194d5:	add    rsp,0x40
   1400194d9:	pop    rbp
   1400194da:	ret    
   1400194db:	int3   
   1400194dc:	sub    rsp,0x28
   1400194e0:	cmp    DWORD PTR [rip+0xc481],0x0        # 0x140025968
   1400194e7:	jne    0x14001951f
   1400194e9:	test   rcx,rcx
   1400194ec:	jne    0x140019508
   1400194ee:	call   0x14000bdc0
   1400194f3:	mov    DWORD PTR [rax],0x16
   1400194f9:	call   0x14000d01c
   1400194fe:	mov    eax,0x7fffffff
   140019503:	add    rsp,0x28
   140019507:	ret    
   140019508:	test   rdx,rdx
   14001950b:	je     0x1400194ee
   14001950d:	cmp    r8,0x7fffffff
   140019514:	ja     0x1400194ee
   140019516:	add    rsp,0x28
   14001951a:	jmp    0x140019390
   14001951f:	xor    r9d,r9d
   140019522:	add    rsp,0x28
   140019526:	jmp    0x1400193d8
   14001952b:	int3   
   14001952c:	sub    rsp,0x48
   140019530:	and    QWORD PTR [rsp+0x30],0x0
   140019536:	and    DWORD PTR [rsp+0x28],0x0
   14001953b:	mov    r8d,0x3
   140019541:	lea    rcx,[rip+0x72e8]        # 0x140020830
   140019548:	xor    r9d,r9d
   14001954b:	mov    edx,0x40000000
   140019550:	mov    DWORD PTR [rsp+0x20],r8d
   140019555:	call   QWORD PTR [rip+0xadd]        # 0x14001a038
   14001955b:	mov    QWORD PTR [rip+0xb1a6],rax        # 0x140024708
   140019562:	add    rsp,0x48
   140019566:	ret    
   140019567:	int3   
   140019568:	sub    rsp,0x28
   14001956c:	mov    rcx,QWORD PTR [rip+0xb195]        # 0x140024708
   140019573:	cmp    rcx,0xffffffffffffffff
   140019577:	je     0x140019585
   140019579:	cmp    rcx,0xfffffffffffffffe
   14001957d:	je     0x140019585
   14001957f:	call   QWORD PTR [rip+0xaf3]        # 0x14001a078
   140019585:	add    rsp,0x28
   140019589:	ret    
   14001958a:	int3   
   14001958b:	int3   
   14001958c:	mov    r9,rcx
   14001958f:	movzx  r8d,BYTE PTR [r9]
   140019593:	inc    r9
   140019596:	lea    eax,[r8-0x41]
   14001959a:	cmp    eax,0x19
   14001959d:	ja     0x1400195a3
   14001959f:	add    r8d,0x20
   1400195a3:	movzx  ecx,BYTE PTR [rdx]
   1400195a6:	inc    rdx
   1400195a9:	lea    eax,[rcx-0x41]
   1400195ac:	cmp    eax,0x19
   1400195af:	ja     0x1400195b4
   1400195b1:	add    ecx,0x20
   1400195b4:	test   r8d,r8d
   1400195b7:	je     0x1400195be
   1400195b9:	cmp    r8d,ecx
   1400195bc:	je     0x14001958f
   1400195be:	sub    r8d,ecx
   1400195c1:	mov    eax,r8d
   1400195c4:	ret    
   1400195c5:	int3   
   1400195c6:	int3   
   1400195c7:	int3   
   1400195c8:	mov    QWORD PTR [rsp+0x8],rbx
   1400195cd:	mov    QWORD PTR [rsp+0x10],rsi
   1400195d2:	mov    QWORD PTR [rsp+0x18],rdi
   1400195d7:	push   rbp
   1400195d8:	mov    rbp,rsp
   1400195db:	sub    rsp,0x40
   1400195df:	mov    rsi,rcx
   1400195e2:	mov    rdi,rdx
   1400195e5:	lea    rcx,[rbp-0x20]
   1400195e9:	mov    rdx,r8
   1400195ec:	call   0x14000c6f4
   1400195f1:	test   rsi,rsi
   1400195f4:	jne    0x14001961e
   1400195f6:	call   0x14000bdc0
   1400195fb:	mov    DWORD PTR [rax],0x16
   140019601:	call   0x14000d01c
   140019606:	cmp    BYTE PTR [rbp-0x8],0x0
   14001960a:	je     0x140019617
   14001960c:	mov    rax,QWORD PTR [rbp-0x10]
   140019610:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140019617:	mov    eax,0x7fffffff
   14001961c:	jmp    0x140019689
   14001961e:	test   rdi,rdi
   140019621:	je     0x1400195f6
   140019623:	mov    rax,QWORD PTR [rbp-0x20]
   140019627:	cmp    DWORD PTR [rax+0x14],0x0
   14001962b:	jne    0x14001964b
   14001962d:	mov    rdx,rdi
   140019630:	mov    rcx,rsi
   140019633:	call   0x14001958c
   140019638:	cmp    BYTE PTR [rbp-0x8],0x0
   14001963c:	je     0x140019689
   14001963e:	mov    rcx,QWORD PTR [rbp-0x10]
   140019642:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140019649:	jmp    0x140019689
   14001964b:	sub    rsi,rdi
   14001964e:	movzx  ecx,BYTE PTR [rsi+rdi*1]
   140019652:	lea    rdx,[rbp-0x20]
   140019656:	call   0x14001979c
   14001965b:	movzx  ecx,BYTE PTR [rdi]
   14001965e:	lea    rdx,[rbp-0x20]
   140019662:	mov    ebx,eax
   140019664:	call   0x14001979c
   140019669:	inc    rdi
   14001966c:	test   ebx,ebx
   14001966e:	je     0x140019674
   140019670:	cmp    ebx,eax
   140019672:	je     0x14001964e
   140019674:	sub    ebx,eax
   140019676:	cmp    BYTE PTR [rbp-0x8],0x0
   14001967a:	je     0x140019687
   14001967c:	mov    rcx,QWORD PTR [rbp-0x10]
   140019680:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140019687:	mov    eax,ebx
   140019689:	mov    rbx,QWORD PTR [rsp+0x50]
   14001968e:	mov    rsi,QWORD PTR [rsp+0x58]
   140019693:	mov    rdi,QWORD PTR [rsp+0x60]
   140019698:	add    rsp,0x40
   14001969c:	pop    rbp
   14001969d:	ret    
   14001969e:	int3   
   14001969f:	int3   
   1400196a0:	sub    rsp,0x28
   1400196a4:	cmp    DWORD PTR [rip+0xc2bd],0x0        # 0x140025968
   1400196ab:	jne    0x1400196da
   1400196ad:	test   rcx,rcx
   1400196b0:	jne    0x1400196cc
   1400196b2:	call   0x14000bdc0
   1400196b7:	mov    DWORD PTR [rax],0x16
   1400196bd:	call   0x14000d01c
   1400196c2:	mov    eax,0x7fffffff
   1400196c7:	add    rsp,0x28
   1400196cb:	ret    
   1400196cc:	test   rdx,rdx
   1400196cf:	je     0x1400196b2
   1400196d1:	add    rsp,0x28
   1400196d5:	jmp    0x14001958c
   1400196da:	xor    r8d,r8d
   1400196dd:	add    rsp,0x28
   1400196e1:	jmp    0x1400195c8
   1400196e6:	int3   
   1400196e7:	int3   
   1400196e8:	xor    edx,edx
   1400196ea:	lea    r8d,[rdx+0xa]
   1400196ee:	jmp    0x1400161b8
   1400196f3:	int3   
   1400196f4:	mov    rax,rsp
   1400196f7:	mov    QWORD PTR [rax+0x8],rbx
   1400196fb:	mov    QWORD PTR [rax+0x10],rbp
   1400196ff:	mov    QWORD PTR [rax+0x18],rsi
   140019703:	mov    QWORD PTR [rax+0x20],rdi
   140019707:	push   r12
   140019709:	sub    rsp,0x30
   14001970d:	movsxd rbx,r9d
   140019710:	mov    rsi,r8
   140019713:	mov    ebp,edx
   140019715:	mov    r12d,ecx
   140019718:	test   r9d,r9d
   14001971b:	jle    0x14001972b
   14001971d:	mov    rdx,rbx
   140019720:	mov    rcx,r8
   140019723:	call   0x1400198ec
   140019728:	mov    rbx,rax
   14001972b:	movsxd rax,DWORD PTR [rsp+0x68]
   140019730:	mov    rdi,QWORD PTR [rsp+0x60]
   140019735:	test   eax,eax
   140019737:	jle    0x140019744
   140019739:	mov    rdx,rax
   14001973c:	mov    rcx,rdi
   14001973f:	call   0x1400198ec
   140019744:	test   ebx,ebx
   140019746:	je     0x140019768
   140019748:	test   eax,eax
   14001974a:	je     0x140019768
   14001974c:	mov    DWORD PTR [rsp+0x28],eax
   140019750:	mov    r9d,ebx
   140019753:	mov    r8,rsi
   140019756:	mov    edx,ebp
   140019758:	mov    ecx,r12d
   14001975b:	mov    QWORD PTR [rsp+0x20],rdi
   140019760:	call   QWORD PTR [rip+0xb82]        # 0x14001a2e8
   140019766:	jmp    0x14001977f
   140019768:	sub    ebx,eax
   14001976a:	mov    eax,0x3
   14001976f:	lea    ecx,[rax-0x2]
   140019772:	cmovs  eax,ecx
   140019775:	mov    ecx,0x2
   14001977a:	test   ebx,ebx
   14001977c:	cmove  eax,ecx
   14001977f:	mov    rbx,QWORD PTR [rsp+0x40]
   140019784:	mov    rbp,QWORD PTR [rsp+0x48]
   140019789:	mov    rsi,QWORD PTR [rsp+0x50]
   14001978e:	mov    rdi,QWORD PTR [rsp+0x58]
   140019793:	add    rsp,0x30
   140019797:	pop    r12
   140019799:	ret    
   14001979a:	int3   
   14001979b:	int3   
   14001979c:	mov    QWORD PTR [rsp+0x10],rdi
   1400197a1:	mov    QWORD PTR [rsp+0x20],r12
   1400197a6:	push   rbp
   1400197a7:	mov    rbp,rsp
   1400197aa:	sub    rsp,0x70
   1400197ae:	movsxd rdi,ecx
   1400197b1:	lea    rcx,[rbp-0x20]
   1400197b5:	call   0x14000c6f4
   1400197ba:	cmp    edi,0x100
   1400197c0:	jae    0x14001981f
   1400197c2:	mov    rdx,QWORD PTR [rbp-0x20]
   1400197c6:	cmp    DWORD PTR [rdx+0x10c],0x1
   1400197cd:	jle    0x1400197e5
   1400197cf:	lea    r8,[rbp-0x20]
   1400197d3:	mov    edx,0x1
   1400197d8:	mov    ecx,edi
   1400197da:	call   0x140014ca4
   1400197df:	mov    rdx,QWORD PTR [rbp-0x20]
   1400197e3:	jmp    0x1400197f3
   1400197e5:	mov    rax,QWORD PTR [rdx+0x140]
   1400197ec:	movzx  eax,WORD PTR [rax+rdi*2]
   1400197f0:	and    eax,0x1
   1400197f3:	test   eax,eax
   1400197f5:	je     0x140019807
   1400197f7:	mov    rax,QWORD PTR [rdx+0x148]
   1400197fe:	movzx  eax,BYTE PTR [rax+rdi*1]
   140019802:	jmp    0x1400198c7
   140019807:	cmp    BYTE PTR [rbp-0x8],0x0
   14001980b:	je     0x140019818
   14001980d:	mov    rax,QWORD PTR [rbp-0x10]
   140019811:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140019818:	mov    eax,edi
   14001981a:	jmp    0x1400198d8
   14001981f:	mov    rax,QWORD PTR [rbp-0x20]
   140019823:	cmp    DWORD PTR [rax+0x10c],0x1
   14001982a:	jle    0x140019857
   14001982c:	mov    r12d,edi
   14001982f:	lea    rdx,[rbp-0x20]
   140019833:	sar    r12d,0x8
   140019837:	movzx  ecx,r12b
   14001983b:	call   0x140015288
   140019840:	test   eax,eax
   140019842:	je     0x140019857
   140019844:	mov    BYTE PTR [rbp+0x10],r12b
   140019848:	mov    BYTE PTR [rbp+0x11],dil
   14001984c:	mov    BYTE PTR [rbp+0x12],0x0
   140019850:	mov    edx,0x2
   140019855:	jmp    0x14001986f
   140019857:	call   0x14000bdc0
   14001985c:	mov    edx,0x1
   140019861:	mov    DWORD PTR [rax],0x2a
   140019867:	mov    BYTE PTR [rbp+0x10],dil
   14001986b:	mov    BYTE PTR [rbp+0x11],0x0
   14001986f:	mov    rcx,QWORD PTR [rbp-0x20]
   140019873:	mov    DWORD PTR [rsp+0x40],0x1
   14001987b:	lea    r9,[rbp+0x10]
   14001987f:	mov    eax,DWORD PTR [rcx+0x4]
   140019882:	mov    r8d,0x100
   140019888:	mov    DWORD PTR [rsp+0x38],eax
   14001988c:	lea    rax,[rbp+0x20]
   140019890:	mov    DWORD PTR [rsp+0x30],0x3
   140019898:	mov    QWORD PTR [rsp+0x28],rax
   14001989d:	mov    DWORD PTR [rsp+0x20],edx
   1400198a1:	mov    edx,DWORD PTR [rcx+0x14]
   1400198a4:	lea    rcx,[rbp-0x20]
   1400198a8:	call   0x14001862c
   1400198ad:	test   eax,eax
   1400198af:	je     0x140019807
   1400198b5:	cmp    eax,0x1
   1400198b8:	movzx  eax,BYTE PTR [rbp+0x20]
   1400198bc:	je     0x1400198c7
   1400198be:	movzx  ecx,BYTE PTR [rbp+0x21]
   1400198c2:	shl    eax,0x8
   1400198c5:	or     eax,ecx
   1400198c7:	cmp    BYTE PTR [rbp-0x8],0x0
   1400198cb:	je     0x1400198d8
   1400198cd:	mov    rcx,QWORD PTR [rbp-0x10]
   1400198d1:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400198d8:	lea    r11,[rsp+0x70]
   1400198dd:	mov    rdi,QWORD PTR [r11+0x18]
   1400198e1:	mov    r12,QWORD PTR [r11+0x28]
   1400198e5:	mov    rsp,r11
   1400198e8:	pop    rbp
   1400198e9:	ret    
   1400198ea:	int3   
   1400198eb:	int3   
   1400198ec:	xor    r8d,r8d
   1400198ef:	mov    eax,r8d
   1400198f2:	test   rdx,rdx
   1400198f5:	je     0x140019909
   1400198f7:	cmp    WORD PTR [rcx],r8w
   1400198fb:	je     0x140019909
   1400198fd:	inc    rax
   140019900:	add    rcx,0x2
   140019904:	cmp    rax,rdx
   140019907:	jb     0x1400198f7
   140019909:	repz ret 
   14001990b:	int3   
   14001990c:	jmp    QWORD PTR [rip+0x87e]        # 0x14001a190
   140019912:	jmp    QWORD PTR [rip+0x880]        # 0x14001a198
   140019918:	jmp    QWORD PTR [rip+0x8c2]        # 0x14001a1e0
   14001991e:	int3   
   14001991f:	int3   
   140019920:	rex push rbp
   140019922:	sub    rsp,0x20
   140019926:	mov    rbp,rdx
   140019929:	cmp    DWORD PTR [rbp+0x80],0x0
   140019930:	je     0x14001993d
   140019932:	mov    ecx,0x8
   140019937:	call   0x14000ca28
   14001993c:	nop
   14001993d:	add    rsp,0x20
   140019941:	pop    rbp
   140019942:	ret    
   140019943:	int3   
   140019944:	rex push rbp
   140019946:	sub    rsp,0x20
   14001994a:	mov    rbp,rdx
   14001994d:	call   0x14000ab98
   140019952:	add    rax,0x30
   140019956:	mov    rdx,rax
   140019959:	mov    ecx,0x1
   14001995e:	call   0x14000ad8c
   140019963:	nop
   140019964:	add    rsp,0x20
   140019968:	pop    rbp
   140019969:	ret    
   14001996a:	int3   
   14001996b:	rex push rbp
   14001996d:	sub    rsp,0x20
   140019971:	mov    rbp,rdx
   140019974:	mov    rcx,QWORD PTR [rbp+0x50]
   140019978:	call   0x14000ad40
   14001997d:	nop
   14001997e:	add    rsp,0x20
   140019982:	pop    rbp
   140019983:	ret    
   140019984:	int3   
   140019985:	rex push rbp
   140019987:	sub    rsp,0x20
   14001998b:	mov    rbp,rdx
   14001998e:	mov    rcx,QWORD PTR [rbp+0x78]
   140019992:	call   0x14000ad40
   140019997:	nop
   140019998:	add    rsp,0x20
   14001999c:	pop    rbp
   14001999d:	ret    
   14001999e:	int3   
   14001999f:	rex push rbp
   1400199a1:	sub    rsp,0x20
   1400199a5:	mov    rbp,rdx
   1400199a8:	mov    rcx,QWORD PTR [rbp+0x40]
   1400199ac:	call   0x14000ad40
   1400199b1:	nop
   1400199b2:	add    rsp,0x20
   1400199b6:	pop    rbp
   1400199b7:	ret    
   1400199b8:	int3   
   1400199b9:	rex push rbp
   1400199bb:	sub    rsp,0x20
   1400199bf:	mov    rbp,rdx
   1400199c2:	mov    ecx,0x2
   1400199c7:	call   0x14001177c
   1400199cc:	nop
   1400199cd:	add    rsp,0x20
   1400199d1:	pop    rbp
   1400199d2:	ret    
   1400199d3:	int3   
   1400199d4:	rex push rbp
   1400199d6:	sub    rsp,0x20
   1400199da:	mov    rbp,rdx
   1400199dd:	mov    rcx,QWORD PTR [rbp+0x48]
   1400199e1:	call   0x14000ad40
   1400199e6:	nop
   1400199e7:	add    rsp,0x20
   1400199eb:	pop    rbp
   1400199ec:	ret    
   1400199ed:	int3   
   1400199ee:	rex push rbp
   1400199f0:	sub    rsp,0x20
   1400199f4:	mov    rbp,rdx
   1400199f7:	movsxd rcx,DWORD PTR [rbp+0x20]
   1400199fb:	mov    rax,rcx
   1400199fe:	mov    rdx,QWORD PTR [rip+0xc283]        # 0x140025c88
   140019a05:	mov    rdx,QWORD PTR [rdx+rcx*8]
   140019a09:	call   0x14000ad8c
   140019a0e:	nop
   140019a0f:	add    rsp,0x20
   140019a13:	pop    rbp
   140019a14:	ret    
   140019a15:	int3   
   140019a16:	int3   
   140019a17:	int3   
   140019a18:	int3   
   140019a19:	int3   
   140019a1a:	int3   
   140019a1b:	int3   
   140019a1c:	int3   
   140019a1d:	int3   
   140019a1e:	rex push rbp
   140019a20:	sub    rsp,0x20
   140019a24:	mov    rbp,rdx
   140019a27:	mov    ecx,0x1
   140019a2c:	call   0x14000ca28
   140019a31:	nop
   140019a32:	add    rsp,0x20
   140019a36:	pop    rbp
   140019a37:	ret    
   140019a38:	int3   
   140019a39:	rex push rbp
   140019a3b:	sub    rsp,0x20
   140019a3f:	mov    rbp,rdx
   140019a42:	mov    rcx,QWORD PTR [rbp+0x30]
   140019a46:	call   0x14000ad40
   140019a4b:	nop
   140019a4c:	add    rsp,0x20
   140019a50:	pop    rbp
   140019a51:	ret    
   140019a52:	int3   
   140019a53:	rex push rbp
   140019a55:	sub    rsp,0x20
   140019a59:	mov    rbp,rdx
   140019a5c:	mov    ecx,0x7
   140019a61:	call   0x14000ca28
   140019a66:	nop
   140019a67:	add    rsp,0x20
   140019a6b:	pop    rbp
   140019a6c:	ret    
   140019a6d:	int3   
   140019a6e:	rex push rbp
   140019a70:	sub    rsp,0x20
   140019a74:	mov    rbp,rdx
   140019a77:	mov    rax,QWORD PTR [rcx]
   140019a7a:	mov    rdx,rcx
   140019a7d:	mov    ecx,DWORD PTR [rax]
   140019a7f:	call   0x14000ebd0
   140019a84:	nop
   140019a85:	add    rsp,0x20
   140019a89:	pop    rbp
   140019a8a:	ret    
   140019a8b:	int3   
   140019a8c:	rex push rbp
   140019a8e:	sub    rsp,0x20
   140019a92:	mov    rbp,rdx
   140019a95:	mov    rcx,QWORD PTR [rip+0x9c04]        # 0x1400236a0
   140019a9c:	call   QWORD PTR [rip+0x64e]        # 0x14001a0f0
   140019aa2:	nop
   140019aa3:	add    rsp,0x20
   140019aa7:	pop    rbp
   140019aa8:	ret    
   140019aa9:	int3   
   140019aaa:	rex push rbp
   140019aac:	sub    rsp,0x20
   140019ab0:	mov    rbp,rdx
   140019ab3:	cmp    DWORD PTR [rbp+0x60],0x0
   140019ab7:	je     0x140019ac1
   140019ab9:	xor    ecx,ecx
   140019abb:	call   0x14000ca28
   140019ac0:	nop
   140019ac1:	add    rsp,0x20
   140019ac5:	pop    rbp
   140019ac6:	ret    
   140019ac7:	int3   
   140019ac8:	rex push rbp
   140019aca:	sub    rsp,0x20
   140019ace:	mov    rbp,rdx
   140019ad1:	mov    ecx,0xd
   140019ad6:	call   0x14000ca28
   140019adb:	nop
   140019adc:	add    rsp,0x20
   140019ae0:	pop    rbp
   140019ae1:	ret    
   140019ae2:	int3   
   140019ae3:	int3   
   140019ae4:	int3   
   140019ae5:	int3   
   140019ae6:	int3   
   140019ae7:	int3   
   140019ae8:	rex push rbp
   140019aea:	sub    rsp,0x20
   140019aee:	mov    rbp,rdx
   140019af1:	mov    ecx,0xc
   140019af6:	call   0x14000ca28
   140019afb:	nop
   140019afc:	add    rsp,0x20
   140019b00:	pop    rbp
   140019b01:	ret    
   140019b02:	int3   
   140019b03:	rex push rbp
   140019b05:	sub    rsp,0x20
   140019b09:	mov    rbp,rdx
   140019b0c:	call   0x1400098cc
   140019b11:	nop
   140019b12:	add    rsp,0x20
   140019b16:	pop    rbp
   140019b17:	ret    
   140019b18:	int3   
   140019b19:	int3   
   140019b1a:	int3   
   140019b1b:	int3   
   140019b1c:	int3   
   140019b1d:	int3   
   140019b1e:	int3   
   140019b1f:	int3   
   140019b20:	rex push rbp
   140019b22:	sub    rsp,0x20
   140019b26:	mov    rbp,rdx
   140019b29:	mov    rax,QWORD PTR [rcx]
   140019b2c:	xor    ecx,ecx
   140019b2e:	cmp    DWORD PTR [rax],0xc0000005
   140019b34:	sete   cl
   140019b37:	mov    eax,ecx
   140019b39:	mov    eax,ecx
   140019b3b:	add    rsp,0x20
   140019b3f:	pop    rbp
   140019b40:	ret    
   140019b41:	int3   
   140019b42:	rex push rbp
   140019b44:	sub    rsp,0x20
   140019b48:	mov    rbp,rdx
   140019b4b:	mov    ecx,0x1
   140019b50:	call   0x14000ca28
   140019b55:	nop
   140019b56:	add    rsp,0x20
   140019b5a:	pop    rbp
   140019b5b:	ret    
   140019b5c:	int3   
   140019b5d:	rex push rbp
   140019b5f:	sub    rsp,0x20
   140019b63:	mov    rbp,rdx
   140019b66:	mov    ecx,DWORD PTR [rbp+0x40]
   140019b69:	call   0x14001177c
   140019b6e:	nop
   140019b6f:	add    rsp,0x20
   140019b73:	pop    rbp
   140019b74:	ret    
   140019b75:	int3   
   140019b76:	rex push rbp
   140019b78:	sub    rsp,0x20
   140019b7c:	mov    rbp,rdx
   140019b7f:	mov    ecx,0xa
   140019b84:	call   0x14000ca28
   140019b89:	nop
   140019b8a:	add    rsp,0x20
   140019b8e:	pop    rbp
   140019b8f:	ret    
   140019b90:	int3   
   140019b91:	rex push rbp
   140019b93:	sub    rsp,0x20
   140019b97:	mov    rbp,rdx
   140019b9a:	mov    ecx,0xa
   140019b9f:	call   0x14000ca28
   140019ba4:	nop
   140019ba5:	add    rsp,0x20
   140019ba9:	pop    rbp
   140019baa:	ret    
   140019bab:	int3   
   140019bac:	int3   
   140019bad:	int3   
   140019bae:	int3   
   140019baf:	int3   
   140019bb0:	int3   
   140019bb1:	rex push rbp
   140019bb3:	sub    rsp,0x20
   140019bb7:	mov    rbp,rdx
   140019bba:	mov    ecx,0xb
   140019bbf:	call   0x14000ca28
   140019bc4:	nop
   140019bc5:	add    rsp,0x20
   140019bc9:	pop    rbp
   140019bca:	ret    
   140019bcb:	int3   
   140019bcc:	rex push rbp
   140019bce:	sub    rsp,0x40
   140019bd2:	mov    rbp,rdx
   140019bd5:	mov    ecx,DWORD PTR [rbp+0x4c]
   140019bd8:	call   0x14001177c
   140019bdd:	nop
   140019bde:	add    rsp,0x40
   140019be2:	pop    rbp
   140019be3:	ret    
   140019be4:	int3   
   140019be5:	rex push rbp
   140019be7:	sub    rsp,0x30
   140019beb:	mov    rbp,rdx
   140019bee:	cmp    DWORD PTR [rbp+0x34],0x0
   140019bf2:	je     0x140019c2c
   140019bf4:	cmp    DWORD PTR [rbp+0x38],0x0
   140019bf8:	je     0x140019c21
   140019bfa:	movsxd rdx,DWORD PTR [rbp+0x30]
   140019bfe:	mov    rcx,rdx
   140019c01:	mov    rax,rdx
   140019c04:	sar    rax,0x5
   140019c08:	lea    r8,[rip+0xbe71]        # 0x140025a80
   140019c0f:	and    ecx,0x1f
   140019c12:	imul   rcx,rcx,0x58
   140019c16:	mov    rax,QWORD PTR [r8+rax*8]
   140019c1a:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   140019c1f:	jmp    0x140019c24
   140019c21:	mov    edx,DWORD PTR [rbp+0x30]
   140019c24:	mov    ecx,edx
   140019c26:	call   0x14001177c
   140019c2b:	nop
   140019c2c:	add    rsp,0x30
   140019c30:	pop    rbp
   140019c31:	ret    
   140019c32:	int3   
   140019c33:	rex push rbp
   140019c35:	sub    rsp,0x30
   140019c39:	mov    rbp,rdx
   140019c3c:	cmp    DWORD PTR [rbp+0x30],0x0
   140019c40:	je     0x140019c75
   140019c42:	mov    rdx,QWORD PTR [rbp+0x70]
   140019c46:	cmp    DWORD PTR [rbp+0x34],0x0
   140019c4a:	je     0x140019c6d
   140019c4c:	movsxd rcx,DWORD PTR [rdx]
   140019c4f:	mov    rax,rcx
   140019c52:	sar    rax,0x5
   140019c56:	lea    r8,[rip+0xbe23]        # 0x140025a80
   140019c5d:	and    ecx,0x1f
   140019c60:	imul   rcx,rcx,0x58
   140019c64:	mov    rax,QWORD PTR [r8+rax*8]
   140019c68:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   140019c6d:	mov    ecx,DWORD PTR [rdx]
   140019c6f:	call   0x14001177c
   140019c74:	nop
   140019c75:	add    rsp,0x30
   140019c79:	pop    rbp
   140019c7a:	ret    
   140019c7b:	int3   
   140019c7c:	rex push rbp
   140019c7e:	sub    rsp,0x20
   140019c82:	mov    rbp,rdx
   140019c85:	mov    ecx,0xd
   140019c8a:	call   0x14000ca28
   140019c8f:	nop
   140019c90:	add    rsp,0x20
   140019c94:	pop    rbp
   140019c95:	ret    
   140019c96:	int3   
   140019c97:	rex push rbp
   140019c99:	sub    rsp,0x20
   140019c9d:	mov    rbp,rdx
   140019ca0:	mov    ecx,0xc
   140019ca5:	call   0x14000ca28
   140019caa:	nop
   140019cab:	add    rsp,0x20
   140019caf:	pop    rbp
   140019cb0:	ret    
   140019cb1:	int3   
   140019cb2:	rex push rbp
   140019cb4:	sub    rsp,0x20
   140019cb8:	mov    rbp,rdx
   140019cbb:	mov    ecx,DWORD PTR [rbp+0x50]
   140019cbe:	call   0x14001177c
   140019cc3:	nop
   140019cc4:	add    rsp,0x20
   140019cc8:	pop    rbp
   140019cc9:	ret    
   140019cca:	int3   
   140019ccb:	rex push rbp
   140019ccd:	sub    rsp,0x40
   140019cd1:	mov    rbp,rdx
   140019cd4:	mov    ecx,0x7
   140019cd9:	call   0x14000ca28
   140019cde:	nop
   140019cdf:	add    rsp,0x40
   140019ce3:	pop    rbp
   140019ce4:	ret    
   140019ce5:	int3   
   140019ce6:	rex push rbp
   140019ce8:	sub    rsp,0x20
   140019cec:	mov    rbp,rdx
   140019cef:	mov    ecx,0x6
   140019cf4:	call   0x14000ca28
   140019cf9:	nop
   140019cfa:	add    rsp,0x20
   140019cfe:	pop    rbp
   140019cff:	ret    
   140019d00:	int3   

Disassembly of section .rdata:

000000014001a000 <.rdata>:
   14001a000:	sbb    al,0x1e
   14001a002:	add    al,BYTE PTR [rax]
   14001a004:	add    BYTE PTR [rax],al
   14001a006:	add    BYTE PTR [rax],al
   14001a008:	sub    bl,BYTE PTR [rsi]
   14001a00a:	add    al,BYTE PTR [rax]
   14001a00c:	add    BYTE PTR [rax],al
   14001a00e:	add    BYTE PTR [rax],al
   14001a010:	cmp    bl,BYTE PTR [rsi]
   14001a012:	add    al,BYTE PTR [rax]
   14001a014:	add    BYTE PTR [rax],al
   14001a016:	add    BYTE PTR [rax],al
   14001a018:	or     BYTE PTR [rsi],bl
   14001a01a:	add    al,BYTE PTR [rax]
	...
   14001a028:	jle    0x14001a048
   14001a02a:	add    al,BYTE PTR [rax]
	...
   14001a038:	xchg   edx,eax
   14001a039:	and    eax,0x2
   14001a03e:	add    BYTE PTR [rax],al
   14001a040:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001a041:	(bad)  
   14001a042:	add    al,BYTE PTR [rax]
   14001a044:	add    BYTE PTR [rax],al
   14001a046:	add    BYTE PTR [rax],al
   14001a048:	mov    dh,0x1e
   14001a04a:	add    al,BYTE PTR [rax]
   14001a04c:	add    BYTE PTR [rax],al
   14001a04e:	add    BYTE PTR [rax],al
   14001a050:	int3   
   14001a051:	(bad)  
   14001a052:	add    al,BYTE PTR [rax]
   14001a054:	add    BYTE PTR [rax],al
   14001a056:	add    BYTE PTR [rax],al
   14001a058:	out    0x1e,al
   14001a05a:	add    al,BYTE PTR [rax]
   14001a05c:	add    BYTE PTR [rax],al
   14001a05e:	add    BYTE PTR [rax],al
   14001a060:	add    bl,BYTE PTR [rdi]
   14001a062:	add    al,BYTE PTR [rax]
   14001a064:	add    BYTE PTR [rax],al
   14001a066:	add    BYTE PTR [rax],al
   14001a068:	(bad)  
   14001a069:	(bad)  
   14001a06a:	add    al,BYTE PTR [rax]
   14001a06c:	add    BYTE PTR [rax],al
   14001a06e:	add    BYTE PTR [rax],al
   14001a070:	and    BYTE PTR [rdi],bl
   14001a072:	add    al,BYTE PTR [rax]
   14001a074:	add    BYTE PTR [rax],al
   14001a076:	add    BYTE PTR [rax],al
   14001a078:	xor    BYTE PTR [rdi],bl
   14001a07a:	add    al,BYTE PTR [rax]
   14001a07c:	add    BYTE PTR [rax],al
   14001a07e:	add    BYTE PTR [rax],al
   14001a080:	ds (bad) 
   14001a082:	add    al,BYTE PTR [rax]
   14001a084:	add    BYTE PTR [rax],al
   14001a086:	add    BYTE PTR [rax],al
   14001a088:	push   rsp
   14001a089:	(bad)  
   14001a08a:	add    al,BYTE PTR [rax]
   14001a08c:	add    BYTE PTR [rax],al
   14001a08e:	add    BYTE PTR [rax],al
   14001a090:	push   0x1f
   14001a092:	add    al,BYTE PTR [rax]
   14001a094:	add    BYTE PTR [rax],al
   14001a096:	add    BYTE PTR [rax],al
   14001a098:	jl     0x14001a0b9
   14001a09a:	add    al,BYTE PTR [rax]
   14001a09c:	add    BYTE PTR [rax],al
   14001a09e:	add    BYTE PTR [rax],al
   14001a0a0:	mov    ds,WORD PTR [rdi]
   14001a0a2:	add    al,BYTE PTR [rax]
   14001a0a4:	add    BYTE PTR [rax],al
   14001a0a6:	add    BYTE PTR [rax],al
   14001a0a8:	movabs ds:0xb20000000000021f,al
   14001a0b1:	(bad)  
   14001a0b2:	add    al,BYTE PTR [rax]
   14001a0b4:	add    BYTE PTR [rax],al
   14001a0b6:	add    BYTE PTR [rax],al
   14001a0b8:	(bad)  
   14001a0b9:	(bad)  
   14001a0ba:	add    al,BYTE PTR [rax]
   14001a0bc:	add    BYTE PTR [rax],al
   14001a0be:	add    BYTE PTR [rax],al
   14001a0c0:	fcomp  DWORD PTR [rdi]
   14001a0c2:	add    al,BYTE PTR [rax]
   14001a0c4:	add    BYTE PTR [rax],al
   14001a0c6:	add    BYTE PTR [rax],al
   14001a0c8:	call   0x14001a2ec
   14001a0cd:	add    BYTE PTR [rax],al
   14001a0cf:	add    ah,dh
   14001a0d1:	(bad)  
   14001a0d2:	add    al,BYTE PTR [rax]
   14001a0d4:	add    BYTE PTR [rax],al
   14001a0d6:	add    BYTE PTR [rax],al
   14001a0d8:	or     BYTE PTR [rax],ah
   14001a0da:	add    al,BYTE PTR [rax]
   14001a0dc:	add    BYTE PTR [rax],al
   14001a0de:	add    BYTE PTR [rax],al
   14001a0e0:	(bad)  
   14001a0e1:	and    BYTE PTR [rdx],al
   14001a0e3:	add    BYTE PTR [rax],al
   14001a0e5:	add    BYTE PTR [rax],al
   14001a0e7:	add    BYTE PTR [rsi],ah
   14001a0e9:	and    BYTE PTR [rdx],al
   14001a0eb:	add    BYTE PTR [rax],al
   14001a0ed:	add    BYTE PTR [rax],al
   14001a0ef:	add    BYTE PTR [rsi],bh
   14001a0f1:	and    BYTE PTR [rdx],al
   14001a0f3:	add    BYTE PTR [rax],al
   14001a0f5:	add    BYTE PTR [rax],al
   14001a0f7:	add    BYTE PTR [rsi+0x20],dl
   14001a0fa:	add    al,BYTE PTR [rax]
   14001a0fc:	add    BYTE PTR [rax],al
   14001a0fe:	add    BYTE PTR [rax],al
   14001a100:	(bad)  
   14001a101:	and    BYTE PTR [rdx],al
   14001a103:	add    BYTE PTR [rax],al
   14001a105:	add    BYTE PTR [rax],al
   14001a107:	add    BYTE PTR [rax+0x20],dh
   14001a10a:	add    al,BYTE PTR [rax]
   14001a10c:	add    BYTE PTR [rax],al
   14001a10e:	add    BYTE PTR [rax],al
   14001a110:	jl     0x14001a132
   14001a112:	add    al,BYTE PTR [rax]
   14001a114:	add    BYTE PTR [rax],al
   14001a116:	add    BYTE PTR [rax],al
   14001a118:	xchg   esp,eax
   14001a119:	and    BYTE PTR [rdx],al
   14001a11b:	add    BYTE PTR [rax],al
   14001a11d:	add    BYTE PTR [rax],al
   14001a11f:	add    BYTE PTR [rsi+0x220],ch
   14001a125:	add    BYTE PTR [rax],al
   14001a127:	add    BYTE PTR [rsi+0x220],bh
   14001a12d:	add    BYTE PTR [rax],al
   14001a12f:	add    dl,dl
   14001a131:	and    BYTE PTR [rdx],al
   14001a133:	add    BYTE PTR [rax],al
   14001a135:	add    BYTE PTR [rax],al
   14001a137:	add    al,ch
   14001a139:	and    BYTE PTR [rdx],al
   14001a13b:	add    BYTE PTR [rax],al
   14001a13d:	add    BYTE PTR [rax],al
   14001a13f:	add    dh,bh
   14001a141:	and    BYTE PTR [rdx],al
   14001a143:	add    BYTE PTR [rax],al
   14001a145:	add    BYTE PTR [rax],al
   14001a147:	add    BYTE PTR [rcx+riz*1],cl
   14001a14a:	add    al,BYTE PTR [rax]
   14001a14c:	add    BYTE PTR [rax],al
   14001a14e:	add    BYTE PTR [rax],al
   14001a150:	and    ah,BYTE PTR [rcx]
   14001a152:	add    al,BYTE PTR [rax]
   14001a154:	add    BYTE PTR [rax],al
   14001a156:	add    BYTE PTR [rax],al
   14001a158:	xor    ah,BYTE PTR [rcx]
   14001a15a:	add    al,BYTE PTR [rax]
   14001a15c:	add    BYTE PTR [rax],al
   14001a15e:	add    BYTE PTR [rax],al
   14001a160:	pop    rdx
   14001a161:	and    DWORD PTR [rdx],eax
   14001a163:	add    BYTE PTR [rax],al
   14001a165:	add    BYTE PTR [rax],al
   14001a167:	add    BYTE PTR [rdx+0x21],dh
   14001a16a:	add    al,BYTE PTR [rax]
   14001a16c:	add    BYTE PTR [rax],al
   14001a16e:	add    BYTE PTR [rax],al
   14001a170:	(bad)  
   14001a171:	and    DWORD PTR [rdx],eax
   14001a173:	add    BYTE PTR [rax],al
   14001a175:	add    BYTE PTR [rax],al
   14001a177:	add    BYTE PTR [rdx+0x221],dl
   14001a17d:	add    BYTE PTR [rax],al
   14001a17f:	add    BYTE PTR [rsi+0x221],ch
   14001a185:	add    BYTE PTR [rax],al
   14001a187:	add    ah,cl
   14001a189:	and    DWORD PTR [rdx],eax
   14001a18b:	add    BYTE PTR [rax],al
   14001a18d:	add    BYTE PTR [rax],al
   14001a18f:	add    al,ah
   14001a191:	and    DWORD PTR [rdx],eax
   14001a193:	add    BYTE PTR [rax],al
   14001a195:	add    BYTE PTR [rax],al
   14001a197:	add    ah,dh
   14001a199:	and    DWORD PTR [rdx],eax
   14001a19b:	add    BYTE PTR [rax],al
   14001a19d:	add    BYTE PTR [rax],al
   14001a19f:	add    BYTE PTR [rsi],cl
   14001a1a1:	and    al,BYTE PTR [rdx]
   14001a1a3:	add    BYTE PTR [rax],al
   14001a1a5:	add    BYTE PTR [rax],al
   14001a1a7:	add    BYTE PTR [rdx],ah
   14001a1a9:	and    al,BYTE PTR [rdx]
   14001a1ab:	add    BYTE PTR [rax],al
   14001a1ad:	add    BYTE PTR [rax],al
   14001a1af:	add    BYTE PTR [rsi],dh
   14001a1b1:	and    al,BYTE PTR [rdx]
   14001a1b3:	add    BYTE PTR [rax],al
   14001a1b5:	add    BYTE PTR [rax],al
   14001a1b7:	add    BYTE PTR [rdx+0x22],cl
   14001a1ba:	add    al,BYTE PTR [rax]
   14001a1bc:	add    BYTE PTR [rax],al
   14001a1be:	add    BYTE PTR [rax],al
   14001a1c0:	pop    rax
   14001a1c1:	and    al,BYTE PTR [rdx]
   14001a1c3:	add    BYTE PTR [rax],al
   14001a1c5:	add    BYTE PTR [rax],al
   14001a1c7:	add    BYTE PTR [rsi+0x22],ah
   14001a1ca:	add    al,BYTE PTR [rax]
   14001a1cc:	add    BYTE PTR [rax],al
   14001a1ce:	add    BYTE PTR [rax],al
   14001a1d0:	jo     0x14001a1f4
   14001a1d2:	add    al,BYTE PTR [rax]
   14001a1d4:	add    BYTE PTR [rax],al
   14001a1d6:	add    BYTE PTR [rax],al
   14001a1d8:	and    BYTE PTR [rdx],0x2
   14001a1db:	add    BYTE PTR [rax],al
   14001a1dd:	add    BYTE PTR [rax],al
   14001a1df:	add    BYTE PTR [rdx+riz*1+0x2],cl
   14001a1e6:	add    BYTE PTR [rax],al
   14001a1e8:	(bad)  
   14001a1e9:	and    al,BYTE PTR [rdx]
   14001a1eb:	add    BYTE PTR [rax],al
   14001a1ed:	add    BYTE PTR [rax],al
   14001a1ef:	add    BYTE PTR [rsi+0x222],ah
   14001a1f5:	add    BYTE PTR [rax],al
   14001a1f7:	add    BYTE PTR [rsi+0x222],dh
   14001a1fd:	add    BYTE PTR [rax],al
   14001a1ff:	add    ah,cl
   14001a201:	and    al,BYTE PTR [rdx]
   14001a203:	add    BYTE PTR [rax],al
   14001a205:	add    BYTE PTR [rax],al
   14001a207:	add    dl,ah
   14001a209:	and    al,BYTE PTR [rdx]
   14001a20b:	add    BYTE PTR [rax],al
   14001a20d:	add    BYTE PTR [rax],al
   14001a20f:	add    ah,bh
   14001a211:	and    al,BYTE PTR [rdx]
   14001a213:	add    BYTE PTR [rax],al
   14001a215:	add    BYTE PTR [rax],al
   14001a217:	add    BYTE PTR [rsi],dl
   14001a219:	and    eax,DWORD PTR [rdx]
   14001a21b:	add    BYTE PTR [rax],al
   14001a21d:	add    BYTE PTR [rax],al
   14001a21f:	add    BYTE PTR [rax],ch
   14001a221:	and    eax,DWORD PTR [rdx]
   14001a223:	add    BYTE PTR [rax],al
   14001a225:	add    BYTE PTR [rax],al
   14001a227:	add    BYTE PTR [rsi],dh
   14001a229:	and    eax,DWORD PTR [rdx]
   14001a22b:	add    BYTE PTR [rax],al
   14001a22d:	add    BYTE PTR [rax],al
   14001a22f:	add    BYTE PTR [rax+0x23],cl
   14001a232:	add    al,BYTE PTR [rax]
   14001a234:	add    BYTE PTR [rax],al
   14001a236:	add    BYTE PTR [rax],al
   14001a238:	pop    rsi
   14001a239:	and    eax,DWORD PTR [rdx]
   14001a23b:	add    BYTE PTR [rax],al
   14001a23d:	add    BYTE PTR [rax],al
   14001a23f:	add    BYTE PTR [rbx+riz*1+0x2],ch
   14001a243:	add    BYTE PTR [rax],al
   14001a245:	add    BYTE PTR [rax],al
   14001a247:	add    BYTE PTR [rdx+0x23],bh
   14001a24a:	add    al,BYTE PTR [rax]
   14001a24c:	add    BYTE PTR [rax],al
   14001a24e:	add    BYTE PTR [rax],al
   14001a250:	mov    ah,BYTE PTR [rbx]
   14001a252:	add    al,BYTE PTR [rax]
   14001a254:	add    BYTE PTR [rax],al
   14001a256:	add    BYTE PTR [rax],al
   14001a258:	movabs al,ds:0xba00000000000223
   14001a261:	and    eax,DWORD PTR [rdx]
   14001a263:	add    BYTE PTR [rax],al
   14001a265:	add    BYTE PTR [rax],al
   14001a267:	add    dl,al
   14001a269:	and    eax,DWORD PTR [rdx]
   14001a26b:	add    BYTE PTR [rax],al
   14001a26d:	add    BYTE PTR [rax],al
   14001a26f:	add    dl,dl
   14001a271:	and    eax,DWORD PTR [rdx]
   14001a273:	add    BYTE PTR [rax],al
   14001a275:	add    BYTE PTR [rax],al
   14001a277:	add    dl,ah
   14001a279:	and    eax,DWORD PTR [rdx]
   14001a27b:	add    BYTE PTR [rax],al
   14001a27d:	add    BYTE PTR [rax],al
   14001a27f:	add    ah,dh
   14001a281:	and    eax,DWORD PTR [rdx]
   14001a283:	add    BYTE PTR [rax],al
   14001a285:	add    BYTE PTR [rax],al
   14001a287:	add    BYTE PTR [rax],cl
   14001a289:	and    al,0x2
   14001a28b:	add    BYTE PTR [rax],al
   14001a28d:	add    BYTE PTR [rax],al
   14001a28f:	add    BYTE PTR [rsi],ah
   14001a291:	and    al,0x2
   14001a293:	add    BYTE PTR [rax],al
   14001a295:	add    BYTE PTR [rax],al
   14001a297:	add    BYTE PTR [rsi],dh
   14001a299:	and    al,0x2
   14001a29b:	add    BYTE PTR [rax],al
   14001a29d:	add    BYTE PTR [rax],al
   14001a29f:	add    BYTE PTR [rsp+0x2],al
   14001a2a3:	add    BYTE PTR [rax],al
   14001a2a5:	add    BYTE PTR [rax],al
   14001a2a7:	add    BYTE PTR [rsp+0x2],bl
   14001a2ab:	add    BYTE PTR [rax],al
   14001a2ad:	add    BYTE PTR [rax],al
   14001a2af:	add    BYTE PTR [rax+0x24],dh
   14001a2b2:	add    al,BYTE PTR [rax]
   14001a2b4:	add    BYTE PTR [rax],al
   14001a2b6:	add    BYTE PTR [rax],al
   14001a2b8:	mov    ah,BYTE PTR [rdx+rax*1]
   14001a2bb:	add    BYTE PTR [rax],al
   14001a2bd:	add    BYTE PTR [rax],al
   14001a2bf:	add    BYTE PTR [rsp+0x2],ah
   14001a2c6:	add    BYTE PTR [rax],al
   14001a2c8:	mov    al,0x24
   14001a2ca:	add    al,BYTE PTR [rax]
   14001a2cc:	add    BYTE PTR [rax],al
   14001a2ce:	add    BYTE PTR [rax],al
   14001a2d0:	mov    edx,0x224
   14001a2d5:	add    BYTE PTR [rax],al
   14001a2d7:	add    dh,al
   14001a2d9:	and    al,0x2
   14001a2db:	add    BYTE PTR [rax],al
   14001a2dd:	add    BYTE PTR [rax],al
   14001a2df:	add    al,bl
   14001a2e1:	and    al,0x2
   14001a2e3:	add    BYTE PTR [rax],al
   14001a2e5:	add    BYTE PTR [rax],al
   14001a2e7:	add    ah,ah
   14001a2e9:	and    al,0x2
   14001a2eb:	add    BYTE PTR [rax],al
   14001a2ed:	add    BYTE PTR [rax],al
   14001a2ef:	add    dh,dh
   14001a2f1:	and    al,0x2
   14001a2f3:	add    BYTE PTR [rax],al
   14001a2f5:	add    BYTE PTR [rax],al
   14001a2f7:	add    BYTE PTR [rax],cl
   14001a2f9:	and    eax,0x2
   14001a2fe:	add    BYTE PTR [rax],al
   14001a300:	adc    al,0x25
   14001a302:	add    al,BYTE PTR [rax]
   14001a304:	add    BYTE PTR [rax],al
   14001a306:	add    BYTE PTR [rax],al
   14001a308:	and    al,0x25
   14001a30a:	add    al,BYTE PTR [rax]
   14001a30c:	add    BYTE PTR [rax],al
   14001a30e:	add    BYTE PTR [rax],al
   14001a310:	xor    al,0x25
   14001a312:	add    al,BYTE PTR [rax]
   14001a314:	add    BYTE PTR [rax],al
   14001a316:	add    BYTE PTR [rax],al
   14001a318:	rex.R and eax,0x2
   14001a31e:	add    BYTE PTR [rax],al
   14001a320:	push   rsi
   14001a321:	and    eax,0x2
   14001a326:	add    BYTE PTR [rax],al
   14001a328:	jo     0x14001a34f
   14001a32a:	add    al,BYTE PTR [rax]
   14001a32c:	add    BYTE PTR [rax],al
   14001a32e:	add    BYTE PTR [rax],al
   14001a330:	and    BYTE PTR [rip+0x2],0x0        # 0x14001a339
	...
   14001a33f:	add    BYTE PTR [rsi+0x1e],dl
   14001a342:	add    al,BYTE PTR [rax]
   14001a344:	add    BYTE PTR [rax],al
   14001a346:	add    BYTE PTR [rax],al
   14001a348:	fs (bad) 
   14001a34a:	add    al,BYTE PTR [rax]
	...
   14001a370:	movabs al,ds:0x20000000014000ab
   14001a379:	(bad)  
   14001a37a:	add    BYTE PTR [rax+0x1],al
   14001a37d:	add    BYTE PTR [rax],al
   14001a37f:	add    BYTE PTR [rax],al
   14001a381:	add    QWORD PTR [r8+0x1],rax
   14001a385:	add    BYTE PTR [rax],al
   14001a387:	add    BYTE PTR [rax+0x14000eb],bh
	...
   14001a39d:	add    BYTE PTR [rax],al
   14001a39f:	add    BYTE PTR [rax-0x6b],ch
   14001a3a2:	add    DWORD PTR [rax+0x1],eax
   14001a3a5:	add    BYTE PTR [rax],al
   14001a3a7:	add    BYTE PTR [rax+0x14000ac],al
	...
   14001a3d1:	add    BYTE PTR [rax],al
   14001a3d3:	add    BYTE PTR [rdx+0x536a91],bl
   14001a3d9:	add    BYTE PTR [rax],al
   14001a3db:	add    BYTE PTR [rdx],al
   14001a3dd:	add    BYTE PTR [rax],al
   14001a3df:	add    BYTE PTR [rax+rax*1+0x0],bl
   14001a3e3:	add    BYTE PTR [rax+0x8],al
   14001a3e6:	add    al,BYTE PTR [rax]
   14001a3e8:	rex cli 
   14001a3ea:	add    DWORD PTR [rax],eax
   14001a3ec:	push   0x61
   14001a3ee:	jbe    0x14001a451
	...
   14001a3f8:	rex.WX
   14001a3f9:	push   r10
   14001a3fb:	and    BYTE PTR [rsi+0x69],ah
   14001a3fe:	ins    BYTE PTR es:[rdi],dx
   14001a3ff:	add    BYTE PTR gs:[rax],al
   14001a402:	add    BYTE PTR [rax],al
   14001a404:	add    BYTE PTR [rax],al
   14001a406:	add    BYTE PTR [rax],al
   14001a408:	rex.WRB (bad) 
   14001a40a:	imul   ebp,DWORD PTR [rsi+0x20],0x73616c63
   14001a411:	jae    0x14001a413
   14001a413:	add    BYTE PTR [rax],al
   14001a415:	add    BYTE PTR [rax],al
   14001a417:	add    BYTE PTR [rbp+0x6e],dl
   14001a41a:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   14001a41e:	outs   dx,BYTE PTR ds:[rsi]
   14001a41f:	add    BYTE PTR [rcx],al
   14001a421:	add    BYTE PTR [rax],al
   14001a423:	add    BYTE PTR [rax],al
   14001a425:	add    BYTE PTR [rax],al
   14001a427:	add    BYTE PTR [rcx],dh
   14001a429:	cs (bad) 
   14001a42b:	xor    BYTE PTR cs:[rdi+0x36],bl
   14001a42f:	xor    BYTE PTR [rip+0x393162],ch        # 0x1403ad597
   14001a435:	add    BYTE PTR [rax],al
   14001a437:	add    BYTE PTR [rcx],dh
   14001a439:	cs (bad) 
   14001a43b:	add    BYTE PTR [rax],al
   14001a43d:	add    BYTE PTR [rax],al
   14001a43f:	add    BYTE PTR [rdi+0x77],dh
   14001a442:	ja     0x14001a4a8
   14001a444:	pop    rdi
   14001a445:	(bad)  
   14001a446:	jb     0x14001a4af
   14001a448:	jae    0x14001a4a5
   14001a44a:	and    eax,0x3d205d64
   14001a44f:	and    BYTE PTR [rip+0xa73],ah        # 0x14001aec8
   14001a455:	add    BYTE PTR [rax],al
   14001a457:	add    BYTE PTR [rdi+0x69],dl
   14001a45a:	outs   dx,BYTE PTR ds:[rsi]
   14001a45b:	outs   dx,DWORD PTR fs:[rsi]
   14001a45d:	ja     0x14001a4d2
   14001a45f:	and    BYTE PTR [rdi+0x72],ch
   14001a462:	imul   esp,DWORD PTR [rdi+0x69],0x206c616e
   14001a469:	ins    DWORD PTR es:[rdi],dx
   14001a46a:	(bad)  
   14001a46b:	imul   ebp,DWORD PTR [rsi+0x20],0x73677261
   14001a472:	cmp    cl,BYTE PTR [rdx]
   14001a474:	add    BYTE PTR [rax],al
   14001a476:	add    BYTE PTR [rax],al
   14001a478:	pop    rdi
   14001a479:	rex.WX
   14001a47a:	push   r14
   14001a47c:	pop    r15
   14001a47e:	rex.WR
   14001a47f:	push   r13
   14001a481:	rex.WRX
   14001a482:	rex.XB
   14001a483:	rex.W
   14001a484:	rex.RB push r10
   14001a486:	pop    rdi
   14001a487:	rex.R
   14001a488:	rex.RB
   14001a489:	rex.X push rbp
   14001a48b:	rex.RXB add BYTE PTR [r8],r8b
   14001a48e:	add    BYTE PTR [rax],al
   14001a490:	and    BYTE PTR [rcx],cl
   14001a492:	add    BYTE PTR [rax],al
   14001a494:	add    BYTE PTR [rax],al
   14001a496:	add    BYTE PTR [rax],al
   14001a498:	sub    eax,0x76616a44
   14001a49d:	(bad)  
   14001a49e:	movsxd ebp,DWORD PTR cs:[rcx+riz*2+0x73]
   14001a4a3:	jae    0x14001a4d3
   14001a4a5:	jo     0x14001a508
   14001a4a7:	je     0x14001a511
   14001a4a9:	cmp    eax,0x7325
   14001a4ae:	add    BYTE PTR [rax],al
   14001a4b0:	sub    eax,0x736d58
   14001a4b5:	add    BYTE PTR [rax],al
   14001a4b7:	add    BYTE PTR [rip+0x786d58],ch        # 0x1407a1215
   14001a4bd:	add    BYTE PTR [rax],al
   14001a4bf:	add    BYTE PTR [rip+0x737358],ch        # 0x14075181d
   14001a4c5:	add    BYTE PTR [rax],al
   14001a4c7:	add    BYTE PTR [rax],ah
   14001a4c9:	and    BYTE PTR [rax],ah
   14001a4cb:	and    BYTE PTR [rdi+0x70],ch
   14001a4ce:	je     0x14001a539
   14001a4d0:	outs   dx,DWORD PTR ds:[rsi]
   14001a4d1:	outs   dx,BYTE PTR ds:[rsi]
   14001a4d2:	pop    rbx
   14001a4d3:	and    eax,0x205d6432
   14001a4d8:	cmp    eax,0x73252720
   14001a4dd:	(bad)  
   14001a4de:	or     al,BYTE PTR [rax]
   14001a4e0:	outs   dx,BYTE PTR ds:[rsi]
   14001a4e1:	rex.WRXB jo 0x14001a558
   14001a4e4:	imul   ebp,DWORD PTR [rdi+0x6e],0x73692073
   14001a4eb:	and    BYTE PTR [rip+0xa646c],ah        # 0x1400c095d
   14001a4f1:	add    BYTE PTR [rax],al
   14001a4f3:	add    BYTE PTR [rax],al
   14001a4f5:	add    BYTE PTR [rax],al
   14001a4f7:	add    BYTE PTR [rcx+0x67],ch
   14001a4fa:	outs   dx,BYTE PTR ds:[rsi]
   14001a4fb:	outs   dx,DWORD PTR ds:[rsi]
   14001a4fc:	jb     0x14001a563
   14001a4fe:	push   rbp
   14001a4ff:	outs   dx,BYTE PTR ds:[rsi]
   14001a500:	jb     0x14001a567
   14001a502:	movsxd ebp,DWORD PTR [rdi+0x67]
   14001a505:	outs   dx,BYTE PTR ds:[rsi]
   14001a506:	imul   edi,DWORD PTR [rdx+0x65],0x73692064
   14001a50d:	and    BYTE PTR [rip+0x202c73],ah        # 0x14021d186
   14001a513:	add    BYTE PTR [rax],al
   14001a515:	add    BYTE PTR [rax],al
   14001a517:	add    BYTE PTR [rdx+0x4e],cl
   14001a51a:	rex.WB pop r15
   14001a51c:	rex.RX
   14001a51d:	rex.B
   14001a51e:	rex.WR push rbx
   14001a520:	add    BYTE PTR [r8],r8b
   14001a523:	add    BYTE PTR [rax],al
   14001a525:	add    BYTE PTR [rax],al
   14001a527:	add    BYTE PTR [rdx+0x4e],cl
   14001a52a:	rex.WB pop r15
   14001a52c:	push   rsp
   14001a52d:	push   rdx
   14001a52e:	push   rbp
   14001a52f:	add    BYTE PTR [r8],r8b
   14001a532:	add    BYTE PTR [rax],al
   14001a534:	add    BYTE PTR [rax],al
   14001a536:	add    BYTE PTR [rax],al
   14001a538:	jbe    0x14001a59f
   14001a53a:	jb     0x14001a5af
   14001a53c:	imul   ebp,DWORD PTR [rdi+0x6e],0x25783020
   14001a543:	xor    BYTE PTR [rax],bh
   14001a545:	ins    BYTE PTR es:[rdi],dx
   14001a546:	js     0x14001a574
   14001a548:	and    BYTE PTR [rax],al
   14001a54a:	add    BYTE PTR [rax],al
   14001a54c:	add    BYTE PTR [rax],al
   14001a54e:	add    BYTE PTR [rax],al
   14001a550:	rex.WX (bad) 
   14001a552:	jbe    0x14001a5b5
   14001a554:	push   rsi
   14001a555:	rex.WRB and BYTE PTR [r9+0x72],r12b
   14001a559:	addr32 jae 0x14001a596
   14001a55c:	or     ah,BYTE PTR [rax]
   14001a55e:	and    BYTE PTR [rax],ah
   14001a560:	and    BYTE PTR [rax],al
	...
   14001a56e:	add    BYTE PTR [rax],al
   14001a570:	rex.RB jb 0x14001a5e5
   14001a573:	outs   dx,DWORD PTR ds:[rsi]
   14001a574:	jb     0x14001a5b0
   14001a576:	and    BYTE PTR [rcx+0x20],al
   14001a579:	rex.WX
   14001a57a:	rex.WRX
   14001a57b:	rex.WB and BYTE PTR [r13+0x72],spl
   14001a57f:	jb     0x14001a5f0
   14001a581:	jb     0x14001a5a3
   14001a583:	push   0x6f207361
   14001a588:	movsxd esp,DWORD PTR [rbx+0x75]
   14001a58b:	jb     0x14001a5ff
   14001a58d:	gs fs sub al,0x20
   14001a591:	jo     0x14001a5ff
   14001a593:	gs (bad) 
   14001a595:	jae    0x14001a5fc
   14001a597:	and    BYTE PTR [rbx+0x68],ah
   14001a59a:	movsxd ebp,DWORD PTR gs:[rbx+0x20]
   14001a59e:	jns    0x14001a60f
   14001a5a0:	jne    0x14001a614
   14001a5a2:	and    BYTE PTR [rcx+0x6e],ch
   14001a5a5:	jae    0x14001a61b
   14001a5a7:	(bad)  
   14001a5a8:	ins    BYTE PTR es:[rdi],dx
   14001a5a9:	ins    BYTE PTR es:[rdi],dx
   14001a5aa:	(bad)  
   14001a5ab:	je     0x14001a616
   14001a5ad:	outs   dx,DWORD PTR ds:[rsi]
   14001a5ae:	outs   dx,BYTE PTR ds:[rsi]
   14001a5af:	and    BYTE PTR [rcx+0x6e],ah
   14001a5b2:	and    BYTE PTR fs:[rdx+rsi*2+0x79],dh
   14001a5b7:	and    BYTE PTR [rcx+0x67],ah
   14001a5ba:	(bad)  
   14001a5bb:	imul   ebp,DWORD PTR [rsi+0x0],0x75730000
   14001a5c2:	outs   dx,BYTE PTR ds:[rsi]
   14001a5c3:	(bad)  
   14001a5c4:	ins    BYTE PTR es:[rdi],dx
   14001a5c5:	(bad)  
   14001a5c6:	jne    0x14001a636
   14001a5c8:	movsxd ebp,DWORD PTR [rax+0x65]
   14001a5cb:	jb     0x14001a5fc
   14001a5cd:	rex.WR (bad) 
   14001a5cf:	jne    0x14001a63f
   14001a5d1:	movsxd ebp,DWORD PTR [rax+0x65]
   14001a5d4:	jb     0x14001a61e
   14001a5d6:	gs ins BYTE PTR es:[rdi],dx
   14001a5d8:	jo     0x14001a63f
   14001a5da:	jb     0x14001a5dc
   14001a5dc:	add    BYTE PTR [rax],al
   14001a5de:	add    BYTE PTR [rax],al
   14001a5e0:	ins    DWORD PTR es:[rdi],dx
   14001a5e1:	(bad)  
   14001a5e2:	imul   esp,DWORD PTR [rbp+0x50],0x6c
   14001a5e6:	(bad)  
   14001a5e7:	je     0x14001a64f
   14001a5e9:	outs   dx,DWORD PTR ds:[rsi]
   14001a5ea:	jb     0x14001a659
   14001a5ec:	push   rbx
   14001a5ed:	je     0x14001a661
   14001a5ef:	imul   ebp,DWORD PTR [rsi+0x67],0x0
   14001a5f6:	add    BYTE PTR [rax],al
   14001a5f8:	sub    BYTE PTR [rdx+0x5b],bl
   14001a5fb:	sub    DWORD PTR [rdx+r13*2+0x61],ecx
   14001a600:	jbe    0x14001a663
   14001a602:	(bad)  
   14001a603:	ins    BYTE PTR es:[rdi],dx
   14001a604:	(bad)  
   14001a605:	outs   dx,BYTE PTR ds:[rsi]
   14001a606:	addr32 (bad) 
   14001a608:	push   rbx
   14001a609:	je     0x14001a67d
   14001a60b:	imul   ebp,DWORD PTR [rsi+0x67],0x616a003b
   14001a612:	jbe    0x14001a675
   14001a614:	(bad)  
   14001a615:	ins    BYTE PTR es:[rdi],dx
   14001a616:	(bad)  
   14001a617:	outs   dx,BYTE PTR ds:[rsi]
   14001a618:	addr32 (bad) 
   14001a61a:	push   rbx
   14001a61b:	je     0x14001a68f
   14001a61d:	imul   ebp,DWORD PTR [rsi+0x67],0x0
   14001a624:	add    BYTE PTR [rax],al
   14001a626:	add    BYTE PTR [rax],al
   14001a628:	sub    eax,0x252d2d2d
   14001a62d:	jae    0x14001a65c
   14001a62f:	sub    eax,0xa2d2d
   14001a634:	add    BYTE PTR [rax],al
   14001a636:	add    BYTE PTR [rax],al
   14001a638:	and    eax,0x6d20646c
   14001a63d:	imul   esp,DWORD PTR [rbx+0x72],0x6573206f
   14001a644:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14001a647:	fs jae 0x14001a66a
   14001a64a:	je     0x14001a6bb
   14001a64c:	and    BYTE PTR [rdi+rbp*2+0x61],ch
   14001a650:	and    BYTE PTR fs:[rbp+0x61],ch
   14001a654:	imul   ebp,DWORD PTR [rsi+0x20],0x73616c63
   14001a65b:	jae    0x14001a667
   14001a65d:	add    BYTE PTR [rax],al
   14001a65f:	add    BYTE PTR [rbx+0x68],ah
   14001a662:	movsxd ebp,DWORD PTR gs:[rbx+0x41]
   14001a666:	outs   dx,BYTE PTR ds:[rsi]
   14001a667:	rex.WR outs dx,DWORD PTR fs:[rsi]
   14001a66a:	(bad)  
   14001a66b:	fs rex.WRB (bad) 
   14001a66e:	imul   ebp,DWORD PTR [rsi+0x0],0x0
   14001a675:	add    BYTE PTR [rax],al
   14001a677:	add    BYTE PTR [rax],ch
   14001a679:	pop    rdx
   14001a67a:	rex.WB
   14001a67b:	rex.WR push 0x61
   14001a67e:	jbe    0x14001a6e1
   14001a680:	(bad)  
   14001a681:	ins    BYTE PTR es:[rdi],dx
   14001a682:	(bad)  
   14001a683:	outs   dx,BYTE PTR ds:[rsi]
   14001a684:	addr32 (bad) 
   14001a686:	push   rbx
   14001a687:	je     0x14001a6fb
   14001a689:	imul   ebp,DWORD PTR [rsi+0x67],0x6a4c293b
   14001a690:	(bad)  
   14001a691:	jbe    0x14001a6f4
   14001a693:	(bad)  
   14001a694:	ins    BYTE PTR es:[rdi],dx
   14001a695:	(bad)  
   14001a696:	outs   dx,BYTE PTR ds:[rsi]
   14001a697:	addr32 (bad) 
   14001a699:	rex.XB ins BYTE PTR es:[rdi],dx
   14001a69b:	(bad)  
   14001a69c:	jae    0x14001a711
   14001a69e:	cmp    eax,DWORD PTR [rax]
   14001a6a0:	sub    eax,0x76616a44
   14001a6a5:	(bad)  
   14001a6a6:	movsxd ebp,DWORD PTR cs:[rcx+riz*2+0x73]
   14001a6ab:	jae    0x14001a6db
   14001a6ad:	jo     0x14001a710
   14001a6af:	je     0x14001a719
   14001a6b1:	cmp    eax,0x0
   14001a6b6:	add    BYTE PTR [rax],al
   14001a6b8:	sub    eax,0x70706144
   14001a6bd:	ins    BYTE PTR es:[rdi],dx
   14001a6be:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14001a6c5:	cs push 0x3d656d6f
   14001a6cb:	and    eax,0x73
   14001a6d0:	rex.RB jb 0x14001a745
   14001a6d3:	outs   dx,DWORD PTR ds:[rsi]
   14001a6d4:	jb     0x14001a710
   14001a6d6:	and    BYTE PTR [rbx+0x6f],al
   14001a6d9:	jne    0x14001a747
   14001a6db:	and    BYTE PTR fs:[rsi+0x6f],ch
   14001a6df:	je     0x14001a701
   14001a6e1:	fs gs je 0x14001a74a
   14001a6e5:	jb     0x14001a754
   14001a6e7:	imul   ebp,DWORD PTR [rsi+0x65],0x70706120
   14001a6ee:	ins    BYTE PTR es:[rdi],dx
   14001a6ef:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14001a6f6:	and    BYTE PTR [rax+0x6f],ch
   14001a6f9:	ins    DWORD PTR es:[rdi],dx
   14001a6fa:	gs add BYTE PTR cs:[rax],al
   14001a6fe:	add    BYTE PTR [rax],al
   14001a700:	sub    eax,0x766e6544
   14001a705:	movsxd ebp,DWORD PTR cs:[rcx+riz*2+0x73]
   14001a70a:	jae    0x14001a73a
   14001a70c:	jo     0x14001a76f
   14001a70e:	je     0x14001a778
   14001a710:	cmp    eax,0x7325
   14001a715:	add    BYTE PTR [rax],al
   14001a717:	add    BYTE PTR [rbx+0x4c],al
   14001a71a:	push   r11
   14001a71c:	push   rbx
   14001a71d:	push   rax
   14001a71e:	push   r12
   14001a720:	rex.W add BYTE PTR [rax],al
   14001a723:	add    BYTE PTR [rax],ah
   14001a725:	add    BYTE PTR [rax],al
   14001a727:	add    BYTE PTR [rip+0x6e757344],ch        # 0x1ae771a71
   14001a72d:	cs push 0x61
   14001a730:	jbe    0x14001a793
   14001a732:	movsxd ebp,DWORD PTR cs:[rdi+0x6d]
   14001a736:	ins    DWORD PTR es:[rdi],dx
   14001a737:	(bad)  
   14001a738:	outs   dx,BYTE PTR ds:[rsi]
   14001a739:	fs cmp eax,0x0
   14001a73f:	add    BYTE PTR [rip+0x6e757344],ch        # 0x1ae771a89
   14001a745:	cs push 0x61
   14001a748:	jbe    0x14001a7ab
   14001a74a:	cs ins BYTE PTR es:[rdi],dx
   14001a74c:	(bad)  
   14001a74d:	jne    0x14001a7bd
   14001a74f:	movsxd ebp,DWORD PTR [rax+0x65]
   14001a752:	jb     0x14001a791
   14001a754:	push   rbx
   14001a755:	push   rbp
   14001a756:	rex.WRX pop rdi
   14001a758:	push   rbx
   14001a759:	push   rsp
   14001a75a:	rex.B
   14001a75b:	rex.WRX
   14001a75c:	rex.R
   14001a75d:	push   r10
   14001a75f:	add    BYTE PTR [rax],r8b
   14001a762:	add    BYTE PTR [rax],al
   14001a764:	sub    BYTE PTR [rcx],ch
   14001a766:	push   rsi
   14001a767:	add    BYTE PTR [rax+0x72],dh
   14001a76a:	imul   ebp,DWORD PTR [rsi+0x74],0x70000000
   14001a771:	jb     0x14001a7dc
   14001a773:	outs   dx,BYTE PTR ds:[rsi]
   14001a774:	je     0x14001a7e2
   14001a776:	outs   dx,BYTE PTR ds:[rsi]
   14001a777:	add    BYTE PTR [rbx+0x75],dh
   14001a77a:	outs   dx,BYTE PTR ds:[rsi]
   14001a77b:	(bad)  
   14001a77c:	ins    DWORD PTR es:[rdi],dx
   14001a77d:	imul   esi,DWORD PTR [rbx+0x63],0x7265562f
   14001a784:	jae    0x14001a7ef
   14001a786:	outs   dx,DWORD PTR ds:[rsi]
   14001a787:	outs   dx,BYTE PTR ds:[rsi]
	...
   14001a790:	jae    0x14001a7fa
   14001a792:	outs   dx,DWORD PTR ds:[rsi]
   14001a793:	ja     0x14001a7e8
   14001a795:	gs je  0x14001a80c
   14001a798:	imul   ebp,DWORD PTR [rsi+0x67],0x73
   14001a79f:	add    BYTE PTR [rax],ch
   14001a7a1:	pop    rdx
   14001a7a2:	rex.WR push 0x61
   14001a7a5:	jbe    0x14001a808
   14001a7a7:	(bad)  
   14001a7a8:	ins    BYTE PTR es:[rdi],dx
   14001a7a9:	(bad)  
   14001a7aa:	outs   dx,BYTE PTR ds:[rsi]
   14001a7ab:	addr32 (bad) 
   14001a7ad:	push   rbx
   14001a7ae:	je     0x14001a822
   14001a7b0:	imul   ebp,DWORD PTR [rsi+0x67],0x4a4a4a3b
   14001a7b7:	pop    rdx
   14001a7b8:	sub    DWORD PTR [rsi+0x0],edx
   14001a7bb:	add    BYTE PTR [rax],al
   14001a7bd:	add    BYTE PTR [rax],al
   14001a7bf:	add    BYTE PTR [rax+0x72],dh
   14001a7c2:	imul   ebp,DWORD PTR [rsi+0x74],0x706c6548
   14001a7c9:	rex.WRB
   14001a7ca:	gs jae 0x14001a840
   14001a7cd:	(bad)  
   14001a7ce:	add    BYTE PTR gs:[eax],al
   14001a7d2:	add    BYTE PTR [rax],al
   14001a7d4:	add    BYTE PTR [rax],al
   14001a7d6:	add    BYTE PTR [rax],al
   14001a7d8:	(bad)  
   14001a7d9:	jo     0x14001a84b
   14001a7db:	outs   dx,BYTE PTR gs:[rsi]
   14001a7dd:	fs push rsi
   14001a7df:	ins    DWORD PTR es:[rdi],dx
   14001a7e0:	rex.RB jb 0x14001a84a
   14001a7e3:	outs   dx,DWORD PTR ds:[rsi]
   14001a7e4:	rex.WRB
   14001a7e5:	gs jae 0x14001a85b
   14001a7e8:	(bad)  
   14001a7e9:	add    BYTE PTR gs:[eax],al
   14001a7ed:	add    BYTE PTR [rax],al
   14001a7ef:	add    BYTE PTR [rax],ch
   14001a7f1:	pop    rdx
   14001a7f2:	rex.WR push 0x61
   14001a7f5:	jbe    0x14001a858
   14001a7f7:	(bad)  
   14001a7f8:	ins    BYTE PTR es:[rdi],dx
   14001a7f9:	(bad)  
   14001a7fa:	outs   dx,BYTE PTR ds:[rsi]
   14001a7fb:	addr32 (bad) 
   14001a7fd:	push   rbx
   14001a7fe:	je     0x14001a872
   14001a800:	imul   ebp,DWORD PTR [rsi+0x67],0x56293b
   14001a807:	add    BYTE PTR [rcx+0x70],ah
   14001a80a:	jo     0x14001a871
   14001a80c:	outs   dx,BYTE PTR ds:[rsi]
   14001a80d:	fs push rsi
   14001a80f:	ins    DWORD PTR es:[rdi],dx
   14001a810:	push   rbx
   14001a811:	jns    0x14001a881
   14001a813:	outs   dx,DWORD PTR ds:[rsi]
   14001a814:	outs   dx,BYTE PTR ds:[rsi]
   14001a815:	jns    0x14001a884
   14001a817:	rex.WRB
   14001a818:	gs jae 0x14001a88e
   14001a81b:	(bad)  
   14001a81c:	add    BYTE PTR gs:[eax],al
   14001a820:	(bad)  
   14001a821:	jo     0x14001a893
   14001a823:	outs   dx,BYTE PTR gs:[rsi]
   14001a825:	fs push rsi
   14001a827:	ins    DWORD PTR es:[rdi],dx
   14001a828:	push   rbx
   14001a829:	gs ins BYTE PTR es:[rdi],dx
   14001a82b:	movsxd esi,DWORD PTR gs:[rbp+rcx*2+0x65]
   14001a830:	jae    0x14001a8a5
   14001a832:	(bad)  
   14001a833:	add    BYTE PTR gs:[eax],al
   14001a837:	add    BYTE PTR [rax],ch
   14001a839:	rex.WR push 0x61
   14001a83c:	jbe    0x14001a89f
   14001a83e:	(bad)  
   14001a83f:	ins    BYTE PTR es:[rdi],dx
   14001a840:	(bad)  
   14001a841:	outs   dx,BYTE PTR ds:[rsi]
   14001a842:	addr32 (bad) 
   14001a844:	push   rbx
   14001a845:	je     0x14001a8b9
   14001a847:	imul   ebp,DWORD PTR [rsi+0x67],0x616a4c3b
   14001a84e:	jbe    0x14001a8b1
   14001a850:	(bad)  
   14001a851:	ins    BYTE PTR es:[rdi],dx
   14001a852:	(bad)  
   14001a853:	outs   dx,BYTE PTR ds:[rsi]
   14001a854:	addr32 (bad) 
   14001a856:	push   rbx
   14001a857:	je     0x14001a8cb
   14001a859:	imul   ebp,DWORD PTR [rsi+0x67],0x56293b
   14001a860:	imul   ebp,DWORD PTR [rsi+0x69],0x6c654874
   14001a867:	jo     0x14001a8b6
   14001a869:	gs jae 0x14001a8df
   14001a86c:	(bad)  
   14001a86d:	add    BYTE PTR gs:[eax],ch
   14001a871:	rex.WR push 0x61
   14001a874:	jbe    0x14001a8d7
   14001a876:	(bad)  
   14001a877:	ins    BYTE PTR es:[rdi],dx
   14001a878:	(bad)  
   14001a879:	outs   dx,BYTE PTR ds:[rsi]
   14001a87a:	addr32 (bad) 
   14001a87c:	push   rbx
   14001a87d:	je     0x14001a8f1
   14001a87f:	imul   ebp,DWORD PTR [rsi+0x67],0x56293b
   14001a886:	add    BYTE PTR [rax],al
   14001a888:	jo     0x14001a8fc
   14001a88a:	imul   ebp,DWORD PTR [rsi+0x74],0x61735558
   14001a891:	addr32 gs rex.WRB
   14001a894:	gs jae 0x14001a90a
   14001a897:	(bad)  
   14001a898:	add    BYTE PTR gs:[eax],al
   14001a89c:	sub    BYTE PTR [rdx+0x29],bl
   14001a89f:	push   rsi
   14001a8a0:	add    BYTE PTR [rax],al
   14001a8a2:	add    BYTE PTR [rax],al
   14001a8a4:	sub    eax,0x5f00004a
   14001a8a9:	rex.WX
   14001a8aa:	push   r14
   14001a8ac:	pop    r15
   14001a8ae:	push   rsi
   14001a8af:	rex.RB push r10
   14001a8b1:	push   rbx
   14001a8b2:	rex.WB
   14001a8b3:	rex.WRXB
   14001a8b4:	rex.WRX pop rdi
   14001a8b6:	push   rbx
   14001a8b7:	rex.RB push r12
   14001a8b9:	add    BYTE PTR [rax],al
   14001a8bb:	add    BYTE PTR [rax],al
   14001a8bd:	add    BYTE PTR [rax],al
   14001a8bf:	add    BYTE PTR [rdi+0x4a],bl
   14001a8c2:	push   r14
   14001a8c4:	pop    r15
   14001a8c6:	push   rbx
   14001a8c7:	push   rax
   14001a8c8:	rex.WR
   14001a8c9:	push   r11
   14001a8cb:	rex.W pop rdi
   14001a8cd:	rex.RX
   14001a8ce:	rex.WB
   14001a8cf:	rex.WR
   14001a8d0:	add    BYTE PTR [r8],r8b
   14001a8d3:	add    BYTE PTR [rax],al
   14001a8d5:	add    BYTE PTR [rax],al
   14001a8d7:	add    BYTE PTR [rdi+0x4a],bl
   14001a8da:	push   r14
   14001a8dc:	pop    r15
   14001a8de:	push   rbx
   14001a8df:	push   rax
   14001a8e0:	rex.WR
   14001a8e1:	push   r11
   14001a8e3:	rex.W pop rdi
   14001a8e5:	rex.WX
   14001a8e6:	push   r10
	...
   14001a8f0:	rex.WRX
   14001a8f1:	rex.RB push r14
   14001a8f3:	rex.RB push r10
   14001a8f5:	pop    rdi
   14001a8f6:	rex.B
   14001a8f7:	rex.XB push r12
   14001a8f9:	pop    rdi
   14001a8fa:	push   r11
   14001a8fc:	pop    rdi
   14001a8fd:	pop    r15
   14001a8ff:	push   rbx
   14001a900:	rex.RB push r10
   14001a902:	push   rsi
   14001a903:	rex.RB push r10
   14001a905:	pop    rdi
   14001a906:	rex.XB
   14001a907:	rex.WR
   14001a908:	push   r11
   14001a90a:	push   rbx
   14001a90b:	pop    rdi
   14001a90c:	rex.WRB
   14001a90d:	rex.B
   14001a90e:	rex.XB
   14001a90f:	rex.W
   14001a910:	rex.WB
   14001a911:	rex.WRX
   14001a912:	or     r8b,BYTE PTR [r8]
   14001a915:	add    BYTE PTR [rax],al
   14001a917:	add    BYTE PTR [rcx+0x4c],al
   14001a91a:	push   rdi
   14001a91b:	pop    r9
   14001a91d:	push   rbx
   14001a91e:	pop    rdi
   14001a91f:	rex.B
   14001a920:	rex.XB push r12
   14001a922:	pop    rdi
   14001a923:	push   r11
   14001a925:	pop    rdi
   14001a926:	pop    r15
   14001a928:	push   rbx
   14001a929:	rex.RB push r10
   14001a92b:	push   rsi
   14001a92c:	rex.RB push r10
   14001a92e:	pop    rdi
   14001a92f:	rex.XB
   14001a930:	rex.WR
   14001a931:	push   r11
   14001a933:	push   rbx
   14001a934:	pop    rdi
   14001a935:	rex.WRB
   14001a936:	rex.B
   14001a937:	rex.XB
   14001a938:	rex.W
   14001a939:	rex.WB
   14001a93a:	rex.WRX
   14001a93b:	or     r8b,BYTE PTR [r8]
   14001a93e:	add    BYTE PTR [rax],al
   14001a940:	rex.R
   14001a941:	rex.RB
   14001a942:	rex.RX
   14001a943:	push   r13
   14001a945:	rex.WR push rsp
   14001a947:	pop    rdi
   14001a948:	rex.RB push r10
   14001a94a:	rex.RXB
   14001a94b:	rex.WRXB
   14001a94c:	rex.WRX
   14001a94d:	rex.WRXB
   14001a94e:	rex.WRB
   14001a94f:	rex.WB
   14001a950:	rex.XB push r11
   14001a952:	pop    rdi
   14001a953:	push   rax
   14001a954:	rex.WRXB
   14001a955:	rex.WR
   14001a956:	rex.WB
   14001a957:	rex.XB pop r9
   14001a959:	or     al,BYTE PTR [rax]
   14001a95b:	add    BYTE PTR [rax],al
   14001a95d:	add    BYTE PTR [rax],al
   14001a95f:	add    BYTE PTR [rcx],cl
   14001a961:	gs jb  0x14001a9cb
   14001a964:	outs   dx,DWORD PTR ds:[rsi]
   14001a965:	pop    rdi
   14001a966:	jo     0x14001a9d7
   14001a968:	ins    BYTE PTR es:[rdi],dx
   14001a969:	imul   esp,DWORD PTR [rbx+0x79],0x3a
   14001a970:	or     DWORD PTR [rdi+rbp*2+0x74],esp
   14001a974:	jbe    0x14001a9db
   14001a976:	jb     0x14001a9eb
   14001a978:	imul   ebp,DWORD PTR [rdi+0x6e],0xa73253a
   14001a97f:	add    BYTE PTR [rcx],cl
   14001a981:	data16 jne 0x14001a9f0
   14001a984:	ins    BYTE PTR es:[rdi],dx
   14001a985:	jbe    0x14001a9ec
   14001a987:	jb     0x14001a9fc
   14001a989:	imul   ebp,DWORD PTR [rdi+0x6e],0xa73253a
	...
   14001a998:	or     DWORD PTR [rdx+0x61],ebp
   14001a99b:	jbe    0x14001a9fe
   14001a99d:	ja     0x14001a9d9
   14001a99f:	and    eax,0xa73
   14001a9a4:	add    BYTE PTR [rax],al
   14001a9a6:	add    BYTE PTR [rax],al
   14001a9a8:	or     DWORD PTR [rcx+riz*2+0x75],ebp
   14001a9ac:	outs   dx,BYTE PTR ds:[rsi]
   14001a9ad:	movsxd ebp,DWORD PTR [rax+0x65]
   14001a9b0:	jb     0x14001a9d2
   14001a9b2:	outs   dx,BYTE PTR ds:[rsi]
   14001a9b3:	(bad)  
   14001a9b4:	ins    DWORD PTR es:[rdi],dx
   14001a9b5:	cmp    ah,BYTE PTR gs:[rip+0xa73]        # 0x14001b42f
   14001a9bc:	add    BYTE PTR [rax],al
   14001a9be:	add    BYTE PTR [rax],al
   14001a9c0:	or     DWORD PTR [rax+0x72],esi
   14001a9c3:	outs   dx,DWORD PTR ds:[rsi]
   14001a9c4:	addr32 jb 0x14001aa28
   14001a9c7:	ins    DWORD PTR es:[rdi],dx
   14001a9c8:	and    BYTE PTR [rsi+0x61],ch
   14001a9cb:	ins    DWORD PTR es:[rdi],dx
   14001a9cc:	cmp    ah,BYTE PTR gs:[rip+0xa73]        # 0x14001b446
   14001a9d3:	add    BYTE PTR [rax],al
   14001a9d5:	add    BYTE PTR [rax],al
   14001a9d7:	add    BYTE PTR [rcx],cl
   14001a9d9:	push   0x61
   14001a9db:	jbe    0x14001aa3e
   14001a9dd:	jb     0x14001aa46
   14001a9df:	jae    0x14001aa1b
   14001a9e1:	and    eax,0xa73
   14001a9e6:	add    BYTE PTR [rax],al
   14001a9e8:	or     DWORD PTR [rbp+riz*2+0x62],esp
   14001a9ec:	jne    0x14001aa55
   14001a9ee:	cmp    ah,BYTE PTR [rip+0xa73]        # 0x14001b467
   14001a9f4:	outs   dx,DWORD PTR ds:[rsi]
   14001a9f5:	outs   dx,BYTE PTR ds:[rsi]
   14001a9f6:	add    BYTE PTR [rax],al
   14001a9f8:	outs   dx,DWORD PTR ds:[rsi]
   14001a9f9:	data16 data16 add BYTE PTR [rax],al
   14001a9fd:	add    BYTE PTR [rax],al
   14001a9ff:	add    BYTE PTR [rcx+riz*2+0x75],cl
   14001aa03:	outs   dx,BYTE PTR ds:[rsi]
   14001aa04:	movsxd ebp,DWORD PTR [rax+0x65]
   14001aa07:	jb     0x14001aa29
   14001aa09:	jae    0x14001aa7f
   14001aa0b:	(bad)  
   14001aa0c:	je     0x14001aa73
   14001aa0e:	cmp    cl,BYTE PTR [rdx]
   14001aa10:	add    BYTE PTR [rax],al
   14001aa12:	add    BYTE PTR [rax],al
   14001aa14:	sub    eax,0x343664
   14001aa19:	add    BYTE PTR [rax],al
   14001aa1b:	add    BYTE PTR [rip+0x323364],ch        # 0x14033dd85
   14001aa21:	add    BYTE PTR [rax],al
   14001aa23:	add    BYTE PTR [rdx],cl
   14001aa25:	add    BYTE PTR [rax],al
   14001aa27:	add    BYTE PTR [rbp+0x61],ch
   14001aa2a:	imul   ebp,DWORD PTR [rsi+0x0],0x28000000
   14001aa31:	pop    rbx
   14001aa32:	rex.WR push 0x61
   14001aa35:	jbe    0x14001aa98
   14001aa37:	(bad)  
   14001aa38:	ins    BYTE PTR es:[rdi],dx
   14001aa39:	(bad)  
   14001aa3a:	outs   dx,BYTE PTR ds:[rsi]
   14001aa3b:	addr32 (bad) 
   14001aa3d:	push   rbx
   14001aa3e:	je     0x14001aab2
   14001aa40:	imul   ebp,DWORD PTR [rsi+0x67],0x56293b
   14001aa47:	add    BYTE PTR [rax],ah
   14001aa49:	and    BYTE PTR [rax],ah
   14001aa4b:	and    BYTE PTR [rcx+0x72],ah
   14001aa4e:	addr32 jbe 0x14001aaac
   14001aa51:	and    eax,0x205d6432
   14001aa56:	cmp    eax,0x73252720
   14001aa5b:	(bad)  
   14001aa5c:	or     al,BYTE PTR [rax]
   14001aa5e:	add    BYTE PTR [rax],al
   14001aa60:	rex.B jo 0x14001aad3
   14001aa63:	(bad)  
   14001aa64:	jae    0x14001aa86
   14001aa66:	(bad)  
   14001aa67:	jb     0x14001aad0
   14001aa69:	movsxd esp,DWORD PTR [rax]
   14001aa6b:	imul   esi,DWORD PTR [rbx+0x20],0xa6425
   14001aa72:	add    BYTE PTR [rax],al
   14001aa74:	add    BYTE PTR [rax],al
   14001aa76:	add    BYTE PTR [rax],al
   14001aa78:	and    eax,0x73692073
   14001aa7d:	and    BYTE PTR [rdi],ah
   14001aa7f:	and    eax,0xa2773
   14001aa84:	add    BYTE PTR [rax],al
   14001aa86:	add    BYTE PTR [rax],al
   14001aa88:	and    eax,0x6d20646c
   14001aa8d:	imul   esp,DWORD PTR [rbx+0x72],0x6573206f
   14001aa94:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14001aa97:	fs jae 0x14001aaba
   14001aa9a:	je     0x14001ab0b
   14001aa9c:	and    BYTE PTR [rcx+0x6e],cl
   14001aa9f:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14001aaa7:	rex.WX push rsi
   14001aaa9:	rex.WRB or r8b,BYTE PTR [r8]
   14001aaac:	add    BYTE PTR [rax],al
   14001aaae:	add    BYTE PTR [rax],al
   14001aab0:	rex.RB jb 0x14001ab25
   14001aab3:	outs   dx,DWORD PTR ds:[rsi]
   14001aab4:	jb     0x14001aaf0
   14001aab6:	and    BYTE PTR [rbx+0x6f],al
   14001aab9:	jne    0x14001ab27
   14001aabb:	and    BYTE PTR fs:[rsi+0x6f],ch
   14001aabf:	je     0x14001aae1
   14001aac1:	fs gs je 0x14001ab26
   14001aac5:	movsxd ebp,DWORD PTR [rax+0x20]
   14001aac8:	ins    DWORD PTR es:[rdi],dx
   14001aac9:	(bad)  
   14001aaca:	imul   ebp,DWORD PTR [rsi+0x20],0x65726874
   14001aad1:	(bad)  
   14001aad2:	fs or  al,BYTE PTR cs:[rbp+0x72]
   14001aad7:	jb     0x14001ab48
   14001aad9:	jb     0x14001ab15
   14001aadb:	and    BYTE PTR [rcx+0x20],al
   14001aade:	rex.WX
   14001aadf:	rex.WRX
   14001aae0:	rex.WB and BYTE PTR [r13+0x72],spl
   14001aae4:	jb     0x14001ab55
   14001aae6:	jb     0x14001ab08
   14001aae8:	push   0x6f207361
   14001aaed:	movsxd esp,DWORD PTR [rbx+0x75]
   14001aaf0:	jb     0x14001ab64
   14001aaf2:	gs fs sub al,0x20
   14001aaf6:	jo     0x14001ab64
   14001aaf8:	gs (bad) 
   14001aafa:	jae    0x14001ab61
   14001aafc:	and    BYTE PTR [rbx+0x68],ah
   14001aaff:	movsxd ebp,DWORD PTR gs:[rbx+0x20]
   14001ab03:	jns    0x14001ab74
   14001ab05:	jne    0x14001ab79
   14001ab07:	and    BYTE PTR [rcx+0x6e],ch
   14001ab0a:	jae    0x14001ab80
   14001ab0c:	(bad)  
   14001ab0d:	ins    BYTE PTR es:[rdi],dx
   14001ab0e:	ins    BYTE PTR es:[rdi],dx
   14001ab0f:	(bad)  
   14001ab10:	je     0x14001ab7b
   14001ab12:	outs   dx,DWORD PTR ds:[rsi]
   14001ab13:	outs   dx,BYTE PTR ds:[rsi]
   14001ab14:	and    BYTE PTR [rcx+0x6e],ah
   14001ab17:	and    BYTE PTR fs:[rdx+rsi*2+0x79],dh
   14001ab1c:	and    BYTE PTR [rcx+0x67],ah
   14001ab1f:	(bad)  
   14001ab20:	imul   ebp,DWORD PTR [rsi+0x0],0x0
	...
   14001ab2f:	add    BYTE PTR [rbp+0x72],al
   14001ab32:	jb     0x14001aba3
   14001ab34:	jb     0x14001ab70
   14001ab36:	and    BYTE PTR [rbx+0x6f],al
   14001ab39:	jne    0x14001aba7
   14001ab3b:	and    BYTE PTR fs:[rsi+0x6f],ch
   14001ab3f:	je     0x14001ab61
   14001ab41:	movsxd esi,DWORD PTR [rdx+0x65]
   14001ab44:	(bad)  
   14001ab45:	je     0x14001abac
   14001ab47:	and    BYTE PTR [rax+rbp*2+0x65],dh
   14001ab4b:	and    BYTE PTR [rdx+0x61],cl
   14001ab4e:	jbe    0x14001abb1
   14001ab50:	and    BYTE PTR [rsi+0x69],dl
   14001ab53:	jb     0x14001abc9
   14001ab55:	jne    0x14001abb8
   14001ab57:	ins    BYTE PTR es:[rdi],dx
   14001ab58:	and    BYTE PTR [rbp+0x61],cl
   14001ab5b:	movsxd ebp,DWORD PTR [rax+0x69]
   14001ab5e:	outs   dx,BYTE PTR ds:[rsi]
   14001ab5f:	gs or  al,BYTE PTR cs:[rbp+0x72]
   14001ab64:	jb     0x14001abd5
   14001ab66:	jb     0x14001aba2
   14001ab68:	and    BYTE PTR [rcx+0x20],al
   14001ab6b:	data16 (bad) 
   14001ab6d:	je     0x14001abd0
   14001ab6f:	ins    BYTE PTR es:[rdi],dx
   14001ab70:	and    BYTE PTR [rbp+0x78],ah
   14001ab73:	movsxd esp,DWORD PTR [rbp+0x70]
   14001ab76:	je     0x14001abe1
   14001ab78:	outs   dx,DWORD PTR ds:[rsi]
   14001ab79:	outs   dx,BYTE PTR ds:[rsi]
   14001ab7a:	and    BYTE PTR [rax+0x61],ch
   14001ab7d:	jae    0x14001ab9f
   14001ab7f:	outs   dx,DWORD PTR ds:[rsi]
   14001ab80:	movsxd esp,DWORD PTR [rbx+0x75]
   14001ab83:	jb     0x14001abf7
   14001ab85:	gs fs and BYTE PTR cs:[rax+0x72],dl
   14001ab8b:	outs   dx,DWORD PTR ds:[rsi]
   14001ab8c:	addr32 jb 0x14001abf0
   14001ab8f:	ins    DWORD PTR es:[rdi],dx
   14001ab90:	and    BYTE PTR [rdi+0x69],dh
   14001ab93:	ins    BYTE PTR es:[rdi],dx
   14001ab94:	ins    BYTE PTR es:[rdi],dx
   14001ab95:	and    BYTE PTR [rbp+0x78],ah
   14001ab98:	imul   esi,DWORD PTR [rsi+rbp*1+0x0],0x0
   14001aba0:	push   rdi
   14001aba1:	(bad)  
   14001aba2:	jb     0x14001ac12
   14001aba4:	imul   ebp,DWORD PTR [rsi+0x67],0x7325203a
   14001abab:	and    BYTE PTR [rsi+0x4d],dl
   14001abae:	and    BYTE PTR [rsi+0x6f],ch
   14001abb1:	je     0x14001abd3
   14001abb3:	jae    0x14001ac2a
   14001abb5:	jo     0x14001ac27
   14001abb7:	outs   dx,DWORD PTR ds:[rsi]
   14001abb8:	jb     0x14001ac2e
   14001abba:	gs cmp esp,DWORD PTR fs:[rax]
   14001abbe:	and    eax,0x4d562073
   14001abc3:	and    BYTE PTR [rdi+0x69],dh
   14001abc6:	ins    BYTE PTR es:[rdi],dx
   14001abc7:	ins    BYTE PTR es:[rdi],dx
   14001abc8:	and    BYTE PTR [rdx+0x65],ah
   14001abcb:	and    BYTE PTR [rbp+0x73],dh
   14001abce:	gs add BYTE PTR fs:[rax],al
   14001abd2:	add    BYTE PTR [rax],al
   14001abd4:	add    BYTE PTR [rax],al
   14001abd6:	add    BYTE PTR [rax],al
   14001abd8:	rex.RB jb 0x14001ac4d
   14001abdb:	outs   dx,DWORD PTR ds:[rsi]
   14001abdc:	jb     0x14001ac18
   14001abde:	and    BYTE PTR [rip+0x4d562073],ah        # 0x18d57cc57
   14001abe4:	and    BYTE PTR [rsi+0x6f],ch
   14001abe7:	je     0x14001ac09
   14001abe9:	jae    0x14001ac60
   14001abeb:	jo     0x14001ac5d
   14001abed:	outs   dx,DWORD PTR ds:[rsi]
   14001abee:	jb     0x14001ac64
   14001abf0:	gs add BYTE PTR fs:[rax],al
   14001abf4:	rex.RB push r10
   14001abf6:	push   rdx
   14001abf7:	rex.WRXB push r10
   14001abf9:	add    BYTE PTR [rax],al
   14001abfb:	add    BYTE PTR [rax],al
   14001abfd:	add    BYTE PTR [rax],al
   14001abff:	add    BYTE PTR [rbp+0x72],al
   14001ac02:	jb     0x14001ac73
   14001ac04:	jb     0x14001ac40
   14001ac06:	and    BYTE PTR [rbx+0x6f],al
   14001ac09:	jb     0x14001ac7d
   14001ac0b:	jne    0x14001ac7d
   14001ac0d:	je     0x14001ac2f
   14001ac0f:	push   0x76
   14001ac11:	ins    DWORD PTR es:[rdi],dx
   14001ac12:	movsxd esp,DWORD PTR cs:[rsi+0x67]
   14001ac16:	and    BYTE PTR [rsi+0x69],ah
   14001ac19:	ins    BYTE PTR es:[rdi],dx
   14001ac1a:	cmp    esp,DWORD PTR gs:[rax]
   14001ac1d:	movsxd edi,DWORD PTR [rcx+0x63]
   14001ac20:	ins    BYTE PTR es:[rdi],dx
   14001ac21:	and    BYTE PTR gs:[rcx+0x6e],ch
   14001ac25:	and    BYTE PTR [rcx+0x6c],ah
   14001ac28:	imul   esp,DWORD PTR [rcx+0x73],0x73696c20
   14001ac2f:	je     0x14001ac5f
   14001ac31:	add    BYTE PTR [rax],al
   14001ac33:	add    BYTE PTR [rax],al
   14001ac35:	add    BYTE PTR [rax],al
   14001ac37:	add    BYTE PTR [rbp+0x72],al
   14001ac3a:	jb     0x14001acab
   14001ac3c:	jb     0x14001ac78
   14001ac3e:	and    BYTE PTR [rbp+0x6e],dl
   14001ac41:	(bad)  
   14001ac42:	(bad)  
   14001ac43:	ins    BYTE PTR es:[rdi],dx
   14001ac44:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   14001ac49:	jb     0x14001acb0
   14001ac4b:	jae    0x14001acbc
   14001ac4d:	ins    BYTE PTR es:[rdi],dx
   14001ac4e:	jbe    0x14001acb5
   14001ac50:	and    BYTE PTR [rsi+0x4d],dl
   14001ac53:	and    BYTE PTR [rcx+0x6c],ah
   14001ac56:	imul   esp,DWORD PTR [rcx+0x73],0x732520
   14001ac5d:	add    BYTE PTR [rax],al
   14001ac5f:	add    BYTE PTR [rbp+riz*2+0x66],al
   14001ac63:	(bad)  
   14001ac64:	jne    0x14001acd2
   14001ac66:	je     0x14001ac88
   14001ac68:	push   rsi
   14001ac69:	rex.WRB cmp r12b,BYTE PTR [r8]
   14001ac6c:	and    eax,0x2d000a73
   14001ac71:	rex.WX sub rax,0x6c615858
   14001ac77:	je     0x14001ace3
   14001ac79:	jbe    0x14001ace8
   14001ac7b:	cmp    eax,0x0
   14001ac80:	sub    eax,0x6c615858
   14001ac85:	je     0x14001acf1
   14001ac87:	jbe    0x14001acf6
   14001ac89:	cmp    eax,0x632d0000
   14001ac8e:	jo     0x14001ac90
   14001ac90:	sub    eax,0x73616c63
   14001ac95:	jae    0x14001ad07
   14001ac97:	(bad)  
   14001ac98:	je     0x14001ad02
   14001ac9a:	add    BYTE PTR [rax],al
   14001ac9c:	add    BYTE PTR [rax],al
   14001ac9e:	add    BYTE PTR [rax],al
   14001aca0:	rex.WX
   14001aca1:	rex.R
   14001aca2:	rex.WXB pop r15
   14001aca4:	rex.B
   14001aca5:	rex.WR push rsp
   14001aca7:	rex.RB push r10
   14001aca9:	rex.WRX
   14001acaa:	push   r12
   14001acac:	rex.RB pop r15
   14001acae:	push   rsi
   14001acaf:	rex.WRB add BYTE PTR [r8],r8b
	...
   14001acbe:	add    BYTE PTR [rax],al
   14001acc0:	rex.RB jb 0x14001ad35
   14001acc3:	outs   dx,DWORD PTR ds:[rsi]
   14001acc4:	jb     0x14001ad00
   14001acc6:	and    BYTE PTR [rbp+0x61],ch
   14001acc9:	imul   ebp,DWORD PTR [rsi+0x2d],0x73616c63
   14001acd0:	jae    0x14001ad0c
   14001acd2:	and    BYTE PTR [rcx+0x74],ah
   14001acd5:	je     0x14001ad49
   14001acd7:	imul   esp,DWORD PTR [rdx+0x75],0x65206574
   14001acde:	js     0x14001ad43
   14001ace0:	gs gs fs jae 0x14001ad05
   14001ace5:	jae    0x14001ad60
   14001ace7:	jae    0x14001ad5d
   14001ace9:	gs ins DWORD PTR es:[rdi],dx
   14001aceb:	and    BYTE PTR [rcx+rbp*2+0x6d],ch
   14001acef:	imul   esi,DWORD PTR [rbx+rsi*2+0x20],0x2520666f
   14001acf7:	and    BYTE PTR fs:[rdx+0x79],ah
   14001acfb:	je     0x14001ad62
   14001acfd:	jae    0x14001ad09
   14001acff:	rex.RB jb 0x14001ad74
   14001ad02:	outs   dx,DWORD PTR ds:[rsi]
   14001ad03:	jb     0x14001ad3f
   14001ad05:	and    BYTE PTR [rcx+0x20],al
   14001ad08:	data16 (bad) 
   14001ad0a:	je     0x14001ad6d
   14001ad0c:	ins    BYTE PTR es:[rdi],dx
   14001ad0d:	and    BYTE PTR [rbp+0x78],ah
   14001ad10:	movsxd esp,DWORD PTR [rbp+0x70]
   14001ad13:	je     0x14001ad7e
   14001ad15:	outs   dx,DWORD PTR ds:[rsi]
   14001ad16:	outs   dx,BYTE PTR ds:[rsi]
   14001ad17:	and    BYTE PTR [rax+0x61],ch
   14001ad1a:	jae    0x14001ad3c
   14001ad1c:	outs   dx,DWORD PTR ds:[rsi]
   14001ad1d:	movsxd esp,DWORD PTR [rbx+0x75]
   14001ad20:	jb     0x14001ad94
   14001ad22:	gs fs and BYTE PTR cs:[rax+0x72],dl
   14001ad28:	outs   dx,DWORD PTR ds:[rsi]
   14001ad29:	addr32 jb 0x14001ad8d
   14001ad2c:	ins    DWORD PTR es:[rdi],dx
   14001ad2d:	and    BYTE PTR [rdi+0x69],dh
   14001ad30:	ins    BYTE PTR es:[rdi],dx
   14001ad31:	ins    BYTE PTR es:[rdi],dx
   14001ad32:	and    BYTE PTR [rbp+0x78],ah
   14001ad35:	imul   esi,DWORD PTR [rsi+rbp*1+0x0],0x0
   14001ad3d:	add    BYTE PTR [rax],al
   14001ad3f:	add    BYTE PTR [rbp+0x72],al
   14001ad42:	jb     0x14001adb3
   14001ad44:	jb     0x14001ad80
   14001ad46:	and    BYTE PTR [rbp+0x6e],dl
   14001ad49:	(bad)  
   14001ad4a:	(bad)  
   14001ad4b:	ins    BYTE PTR es:[rdi],dx
   14001ad4c:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   14001ad51:	ins    BYTE PTR es:[rdi],dx
   14001ad52:	outs   dx,DWORD PTR ds:[rsi]
   14001ad53:	movsxd esp,DWORD PTR [rcx+0x74]
   14001ad56:	and    BYTE PTR gs:[rdx+0x52],cl
   14001ad5a:	and    BYTE PTR [r13+0x65],r13b
   14001ad5e:	gs je  0x14001adca
   14001ad61:	outs   dx,BYTE PTR ds:[rsi]
   14001ad62:	and    BYTE PTR [ebx+0x70],dh
   14001ad66:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14001ad6a:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14001ad71:	and    BYTE PTR [rdx],ah
   14001ad73:	and    eax,0x2273
   14001ad78:	rex.WX push rdx
   14001ad7a:	rex.RB sub eax,0x73726556
   14001ad80:	imul   ebp,DWORD PTR [rdi+0x6e],0x25203d20
   14001ad87:	jae    0x14001adb5
   14001ad89:	and    BYTE PTR [rdx+0x52],cl
   14001ad8c:	rex.RB sub eax,0x74736552
   14001ad92:	jb     0x14001adfd
   14001ad94:	movsxd esi,DWORD PTR [rbp+rbp*1+0x53]
   14001ad98:	gs (bad) 
   14001ad9a:	jb     0x14001adff
   14001ad9c:	push   0x25203d20
   14001ada1:	jae    0x14001adc3
   14001ada3:	push   rbx
   14001ada4:	gs ins BYTE PTR es:[rdi],dx
   14001ada6:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   14001adab:	and    BYTE PTR [rip+0xa732520],bh        # 0x14a74d2d1
   14001adb1:	add    BYTE PTR [rax],al
   14001adb3:	add    BYTE PTR [rsi+0x61],ah
   14001adb6:	ins    BYTE PTR es:[rdi],dx
   14001adb7:	jae    0x14001ae1e
   14001adb9:	add    BYTE PTR [rax],al
   14001adbb:	add    BYTE PTR [rdx+rsi*2+0x75],dh
   14001adbf:	add    BYTE PTR gs:[rax],al
   14001adc2:	add    BYTE PTR [rax],al
   14001adc4:	outs   dx,BYTE PTR ds:[rsi]
   14001adc5:	jne    0x14001ae33
   14001adc7:	ins    BYTE PTR es:[rdi],dx
	...
   14001add0:	rex.RB jb 0x14001ae45
   14001add3:	outs   dx,DWORD PTR ds:[rsi]
   14001add4:	jb     0x14001ae10
   14001add6:	and    BYTE PTR [rbx+0x79],dl
   14001add9:	outs   dx,BYTE PTR ds:[rsi]
   14001adda:	je     0x14001ae3d
   14001addc:	js     0x14001adfe
   14001adde:	gs jb  0x14001ae53
   14001ade1:	outs   dx,DWORD PTR ds:[rsi]
   14001ade2:	jb     0x14001ae04
   14001ade4:	imul   ebp,DWORD PTR [rsi+0x20],0x73726576
   14001adeb:	imul   ebp,DWORD PTR [rdi+0x6e],0x65707320
   14001adf2:	movsxd ebp,DWORD PTR [rcx+0x66]
   14001adf5:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14001adfc:	and    BYTE PTR [rdx],ah
   14001adfe:	and    eax,0x2273
   14001ae03:	add    BYTE PTR [rax],al
   14001ae05:	add    BYTE PTR [rax],al
   14001ae07:	add    BYTE PTR [rdi+0x4a],bl
   14001ae0a:	push   r14
   14001ae0c:	pop    r15
   14001ae0e:	push   rbx
   14001ae0f:	push   rax
   14001ae10:	rex.WR
   14001ae11:	push   r11
   14001ae13:	rex.W pop rdi
   14001ae15:	rex.WX
   14001ae16:	push   r10
   14001ae18:	cmp    eax,0x0
   14001ae1d:	add    BYTE PTR [rax],al
   14001ae1f:	add    BYTE PTR [rdi+0x4a],bl
   14001ae22:	push   r14
   14001ae24:	pop    r15
   14001ae26:	push   rbx
   14001ae27:	push   rax
   14001ae28:	rex.WR
   14001ae29:	push   r11
   14001ae2b:	rex.W pop rdi
   14001ae2d:	rex.RX
   14001ae2e:	rex.WB
   14001ae2f:	rex.WR
   14001ae30:	rex.RB cmp eax,0x0
   14001ae36:	add    BYTE PTR [rax],al
   14001ae38:	rex.RB jb 0x14001aead
   14001ae3b:	outs   dx,DWORD PTR ds:[rsi]
   14001ae3c:	jb     0x14001ae78
   14001ae3e:	and    BYTE PTR [rcx+0x6e],cl
   14001ae41:	jbe    0x14001aea4
   14001ae43:	ins    BYTE PTR es:[rdi],dx
   14001ae44:	imul   esp,DWORD PTR [rax+riz*1+0x6f],0x6f632072
   14001ae4c:	jb     0x14001aec0
   14001ae4e:	jne    0x14001aec0
   14001ae50:	je     0x14001ae72
   14001ae52:	push   0x61
   14001ae54:	jb     0x14001aebc
   14001ae56:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x7325
   14001ae5e:	add    BYTE PTR [rax],al
   14001ae60:	rex.RB jb 0x14001aed5
   14001ae63:	outs   dx,DWORD PTR ds:[rsi]
   14001ae64:	jb     0x14001aea0
   14001ae66:	and    BYTE PTR [rbp+0x6e],dl
   14001ae69:	(bad)  
   14001ae6a:	(bad)  
   14001ae6b:	ins    BYTE PTR es:[rdi],dx
   14001ae6c:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   14001ae71:	(bad)  
   14001ae72:	movsxd esp,DWORD PTR [rbx+0x65]
   14001ae75:	jae    0x14001aeea
   14001ae77:	and    BYTE PTR [rdx+0x61],ch
   14001ae7a:	jb     0x14001aee2
   14001ae7c:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x7325
   14001ae84:	add    BYTE PTR [rax],al
   14001ae86:	add    BYTE PTR [rax],al
   14001ae88:	sub    eax,0x616c7073
   14001ae8d:	jae    0x14001aef7
   14001ae8f:	cmp    al,BYTE PTR [rax]
   14001ae91:	add    BYTE PTR [rax],al
   14001ae93:	add    BYTE PTR [rax],al
   14001ae95:	add    BYTE PTR [rax],al
   14001ae97:	add    BYTE PTR [rip+0x76616a44],ch        # 0x1b66318e1
   14001ae9d:	(bad)  
   14001ae9e:	cs (bad) 
   14001aea0:	ja     0x14001af16
   14001aea2:	cs push 0x6c646165
   14001aea8:	gs jae 0x14001af1e
   14001aeab:	cmp    eax,0x0
   14001aeb0:	sub    eax,0x76616a44
   14001aeb5:	(bad)  
   14001aeb6:	cs (bad) 
   14001aeb8:	ja     0x14001af2e
   14001aeba:	cs push 0x6c646165
   14001aec0:	gs jae 0x14001af36
   14001aec3:	cmp    eax,0x65757274
   14001aec8:	add    BYTE PTR [rax],al
   14001aeca:	add    BYTE PTR [rax],al
   14001aecc:	sub    eax,0x72616a
   14001aed1:	add    BYTE PTR [rax],al
   14001aed3:	add    BYTE PTR [rax],al
   14001aed5:	add    BYTE PTR [rax],al
   14001aed7:	add    BYTE PTR [rip+0x6a2d6f6e],ch        # 0x1aa2f1e4b
   14001aedd:	jb     0x14001af44
   14001aedf:	sub    eax,0x74736572
   14001aee4:	jb     0x14001af4f
   14001aee6:	movsxd esi,DWORD PTR [rbp+rbp*1+0x73]
   14001aeea:	gs (bad) 
   14001aeec:	jb     0x14001af51
   14001aeee:	push   0x726a2d00
   14001aef3:	gs sub eax,0x74736572
   14001aef9:	jb     0x14001af64
   14001aefb:	movsxd esi,DWORD PTR [rbp+rbp*1+0x73]
   14001aeff:	gs (bad) 
   14001af01:	jb     0x14001af66
   14001af03:	push   0x0
   14001af08:	sub    eax,0x73726576
   14001af0d:	imul   ebp,DWORD PTR [rdi+0x6e],0x3a
   14001af14:	add    BYTE PTR [rax],al
   14001af16:	add    BYTE PTR [rax],al
   14001af18:	pop    rdi
   14001af19:	rex.WX
   14001af1a:	push   r14
   14001af1c:	pop    r15
   14001af1e:	push   rsi
   14001af1f:	rex.RB push r10
   14001af21:	push   rbx
   14001af22:	rex.WB
   14001af23:	rex.WRXB
   14001af24:	rex.WRX pop rdi
   14001af26:	push   rbx
   14001af27:	rex.RB push r12
   14001af29:	cmp    eax,0x0
   14001af2e:	add    BYTE PTR [rax],al
   14001af30:	rex.RB jb 0x14001afa5
   14001af33:	outs   dx,DWORD PTR ds:[rsi]
   14001af34:	jb     0x14001af70
   14001af36:	and    BYTE PTR [rip+0x65722073],ah        # 0x1a573cfaf
   14001af3c:	jno    0x14001afb3
   14001af3e:	imul   esi,DWORD PTR [rdx+0x65],0x6c632073
   14001af45:	(bad)  
   14001af46:	jae    0x14001afbb
   14001af48:	and    BYTE PTR [rax+0x61],dh
   14001af4b:	je     0x14001afb5
   14001af4d:	and    BYTE PTR [rbx+0x70],dh
   14001af50:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14001af54:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14001af5b:	add    BYTE PTR [rax],al
   14001af5d:	add    BYTE PTR [rax],al
   14001af5f:	add    BYTE PTR [rip+0x75662073],ah        # 0x1b567cfd8
   14001af65:	ins    BYTE PTR es:[rdi],dx
   14001af66:	ins    BYTE PTR es:[rdi],dx
   14001af67:	and    BYTE PTR [rsi+0x65],dh
   14001af6a:	jb     0x14001afdf
   14001af6c:	imul   ebp,DWORD PTR [rdi+0x6e],0x73252220
   14001af73:	and    al,BYTE PTR [rax]
   14001af75:	add    BYTE PTR [rax],al
   14001af77:	add    BYTE PTR [rbp+0x72],al
   14001af7a:	jb     0x14001afeb
   14001af7c:	jb     0x14001afb8
   14001af7e:	and    BYTE PTR [rip+0x65722073],ah        # 0x1a573cff7
   14001af84:	jno    0x14001affb
   14001af86:	imul   esi,DWORD PTR [rdx+0x65],0x616a2073
   14001af8d:	jb     0x14001afaf
   14001af8f:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x7073
   14001af96:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14001af9a:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14001afa1:	add    BYTE PTR [rax],al
   14001afa3:	add    BYTE PTR [rip+0x732558],ch        # 0x14074d501
   14001afa9:	add    BYTE PTR [rax],al
   14001afab:	add    BYTE PTR [rax],al
   14001afad:	add    BYTE PTR [rax],al
   14001afaf:	add    BYTE PTR [rdi+0x61],dl
   14001afb2:	jb     0x14001b022
   14001afb4:	imul   ebp,DWORD PTR [rsi+0x67],0x7325203a
   14001afbb:	and    BYTE PTR [rdi+0x70],ch
   14001afbe:	je     0x14001b029
   14001afc0:	outs   dx,DWORD PTR ds:[rsi]
   14001afc1:	outs   dx,BYTE PTR ds:[rsi]
   14001afc2:	and    BYTE PTR [rcx+0x73],ch
   14001afc5:	and    BYTE PTR [rsi+0x6f],ch
   14001afc8:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   14001afcc:	addr32 gs jb 0x14001aff0
   14001afd0:	jae    0x14001b047
   14001afd2:	jo     0x14001b044
   14001afd4:	outs   dx,DWORD PTR ds:[rsi]
   14001afd5:	jb     0x14001b04b
   14001afd7:	gs fs add BYTE PTR cs:[rax],al
   14001afdc:	add    BYTE PTR [rax],al
   14001afde:	add    BYTE PTR [rax],al
   14001afe0:	sub    eax,0x73616f6e
   14001afe5:	jns    0x14001b055
   14001afe7:	movsxd esp,DWORD PTR [rdi+0x63]
   14001afea:	add    BYTE PTR [rax],al
   14001afec:	sub    eax,0x2d007363
   14001aff1:	movsxd ebp,DWORD PTR [rax+0x65]
   14001aff4:	movsxd ebp,DWORD PTR [rbx+0x73]
   14001aff7:	outs   dx,DWORD PTR ds:[rsi]
   14001aff8:	jne    0x14001b06c
   14001affa:	movsxd esp,DWORD PTR [rbp+0x0]
   14001affd:	add    BYTE PTR [rax],al
   14001afff:	add    BYTE PTR [rip+0x2d00786d],ch        # 0x16d022872
   14001b005:	ins    DWORD PTR es:[rdi],dx
   14001b006:	jae    0x14001b008
   14001b008:	sub    eax,0x73736f
   14001b00d:	add    BYTE PTR [rax],al
   14001b00f:	add    BYTE PTR [rip+0x7373],ch        # 0x140022388
   14001b015:	add    BYTE PTR [rax],al
   14001b017:	add    BYTE PTR [rip+0x6e757258],ch        # 0x1ae772275
   14001b01d:	push   0x666f7270
   14001b022:	cmp    ah,BYTE PTR [rbx+0x70]
   14001b025:	jne    0x14001b064
   14001b027:	outs   dx,DWORD PTR ds:[rsi]
   14001b028:	ins    BYTE PTR es:[rdi],dx
   14001b029:	fs sub al,0x66
   14001b02c:	imul   ebp,DWORD PTR [rbp+riz*2+0x3d],0x6176616a
   14001b034:	cs jo  0x14001b0a9
   14001b037:	outs   dx,DWORD PTR ds:[rsi]
   14001b038:	data16 add BYTE PTR [rax],al
   14001b03b:	add    BYTE PTR [rax],al
   14001b03d:	add    BYTE PTR [rax],al
   14001b03f:	add    BYTE PTR [rip+0x6e757258],ch        # 0x1ae77229d
   14001b045:	push   0x666f7270
   14001b04a:	cmp    ah,BYTE PTR [rbx+0x70]
   14001b04d:	jne    0x14001b08c
   14001b04f:	outs   dx,DWORD PTR ds:[rsi]
   14001b050:	ins    BYTE PTR es:[rdi],dx
   14001b051:	fs sub al,0x66
   14001b054:	imul   ebp,DWORD PTR [rbp+riz*2+0x3d],0x7325
   14001b05c:	sub    eax,0x666f7270
   14001b061:	add    BYTE PTR [rax],al
   14001b063:	add    BYTE PTR [rax],al
   14001b065:	add    BYTE PTR [rax],al
   14001b067:	add    BYTE PTR [rip+0x72657658],ch        # 0x1b26726c5
   14001b06d:	imul   esp,DWORD PTR [rsi+0x79],0x6e6f6e3a
   14001b074:	add    BYTE PTR gs:[rax],al
   14001b077:	add    BYTE PTR [rip+0x65766f6e],ch        # 0x1a5781feb
   14001b07d:	jb     0x14001b0e8
   14001b07f:	data16 jns 0x14001b082
   14001b082:	add    BYTE PTR [rax],al
   14001b084:	add    BYTE PTR [rax],al
   14001b086:	add    BYTE PTR [rax],al
   14001b088:	sub    eax,0x72657658
   14001b08d:	imul   esp,DWORD PTR [rsi+0x79],0x6d65723a
   14001b094:	outs   dx,DWORD PTR ds:[rsi]
   14001b095:	je     0x14001b0fc
   14001b097:	add    BYTE PTR [rip+0x69726576],ch        # 0x1a9741613
   14001b09d:	data16 jns 0x14001b112
   14001b0a0:	gs ins DWORD PTR es:[rdi],dx
   14001b0a2:	outs   dx,DWORD PTR ds:[rsi]
   14001b0a3:	je     0x14001b10a
   14001b0a5:	add    BYTE PTR [rax],al
   14001b0a7:	add    BYTE PTR [rip+0x69726576],ch        # 0x1a9741623
   14001b0ad:	data16 jns 0x14001b0b0
   14001b0b0:	sub    eax,0x72657658
   14001b0b5:	imul   esp,DWORD PTR [rsi+0x79],0x6c6c613a
   14001b0bc:	add    BYTE PTR [rax],al
   14001b0be:	add    BYTE PTR [rax],al
   14001b0c0:	sub    eax,0x74756658
   14001b0c5:	jne    0x14001b139
   14001b0c7:	add    BYTE PTR gs:[rax],al
   14001b0ca:	add    BYTE PTR [rax],al
   14001b0cc:	add    BYTE PTR [rax],al
   14001b0ce:	add    BYTE PTR [rax],al
   14001b0d0:	sub    eax,0x636f6e58
   14001b0d5:	ins    BYTE PTR es:[rdi],dx
   14001b0d6:	(bad)  
   14001b0d7:	jae    0x14001b14c
   14001b0d9:	movsxd eax,DWORD PTR [eax]
   14001b0dc:	add    BYTE PTR [rax],al
   14001b0de:	add    BYTE PTR [rax],al
   14001b0e0:	sub    eax,0x6c636f6e
   14001b0e5:	(bad)  
   14001b0e6:	jae    0x14001b15b
   14001b0e8:	movsxd eax,DWORD PTR [eax]
   14001b0eb:	add    BYTE PTR [rax],al
   14001b0ed:	add    BYTE PTR [rax],al
   14001b0ef:	add    BYTE PTR [rip+0x62656458],ch        # 0x1a267154d
   14001b0f5:	jne    0x14001b15e
   14001b0f7:	add    BYTE PTR [rip+0x75626564],ch        # 0x1b5641661
   14001b0fd:	add    BYTE PTR [eax],al
   14001b100:	sub    eax,0x6d7458
   14001b105:	add    BYTE PTR [rax],al
   14001b107:	add    BYTE PTR [rip+0x2d006d74],ch        # 0x16d021e81
   14001b10d:	pop    rax
   14001b10e:	je     0x14001b110
   14001b110:	sub    eax,0x74
   14001b115:	add    BYTE PTR [rax],al
   14001b117:	add    BYTE PTR [rip+0x62726576],ch        # 0x1a2741693
   14001b11d:	outs   dx,DWORD PTR ds:[rsi]
   14001b11e:	jae    0x14001b185
   14001b120:	cmp    ah,BYTE PTR [rdi+0x63]
   14001b123:	add    BYTE PTR [rax],al
   14001b125:	add    BYTE PTR [rax],al
   14001b127:	add    BYTE PTR [rip+0x62726576],ch        # 0x1a27416a3
   14001b12d:	outs   dx,DWORD PTR ds:[rsi]
   14001b12e:	jae    0x14001b195
   14001b130:	movsxd eax,DWORD PTR [eax]
   14001b133:	add    BYTE PTR [rax],al
   14001b135:	add    BYTE PTR [rax],al
   14001b137:	add    BYTE PTR [rip+0x6c6c7566],ch        # 0x1ac6e26a3
   14001b13d:	jbe    0x14001b1a4
   14001b13f:	jb     0x14001b1b4
   14001b141:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
   14001b148:	sub    eax,0x6e757344
   14001b14d:	cs push 0x61
   14001b150:	jbe    0x14001b1b3
   14001b152:	cs ins BYTE PTR es:[rdi],dx
   14001b154:	(bad)  
   14001b155:	jne    0x14001b1c5
   14001b157:	movsxd ebp,DWORD PTR [rax+0x65]
   14001b15a:	jb     0x14001b18a
   14001b15c:	imul   esp,DWORD PTR fs:[rcx+0x67],0x7572743d
   14001b164:	add    BYTE PTR gs:[rax],al
   14001b167:	add    BYTE PTR [rip+0x61696458],ch        # 0x1a16b15c5
   14001b16d:	add    BYTE PTR [eax],al
   14001b170:	sub    eax,0x6f687358
   14001b175:	ja     0x14001b1ca
   14001b177:	gs je  0x14001b1ee
   14001b17a:	imul   ebp,DWORD PTR [rsi+0x67],0x2d003a73
   14001b181:	pop    rax
   14001b182:	jae    0x14001b1ec
   14001b184:	outs   dx,DWORD PTR ds:[rsi]
   14001b185:	ja     0x14001b1da
   14001b187:	gs je  0x14001b1fe
   14001b18a:	imul   ebp,DWORD PTR [rsi+0x67],0x2d000073
   14001b191:	pop    rax
   14001b192:	add    BYTE PTR [rax],al
   14001b194:	add    BYTE PTR [rax],al
   14001b196:	add    BYTE PTR [rax],al
   14001b198:	sub    eax,0x776f6873
   14001b19d:	jbe    0x14001b204
   14001b19f:	jb     0x14001b214
   14001b1a1:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
   14001b1a8:	sub    eax,0x73726576
   14001b1ad:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
   14001b1b4:	sub    eax,0x2d00003f
   14001b1b9:	push   0x682d0000
   14001b1be:	gs ins BYTE PTR es:[rdi],dx
   14001b1c0:	jo     0x14001b1c2
   14001b1c2:	add    BYTE PTR [rax],al
   14001b1c4:	add    BYTE PTR [rax],al
   14001b1c6:	add    BYTE PTR [rax],al
   14001b1c8:	rex.RB jb 0x14001b23d
   14001b1cb:	outs   dx,DWORD PTR ds:[rsi]
   14001b1cc:	jb     0x14001b208
   14001b1ce:	and    BYTE PTR [rax+rbp*2+0x65],dl
   14001b1d2:	and    BYTE PTR [rip+0x706f204a],ch        # 0x1b070d222
   14001b1d8:	je     0x14001b243
   14001b1da:	outs   dx,DWORD PTR ds:[rsi]
   14001b1db:	outs   dx,BYTE PTR ds:[rsi]
   14001b1dc:	and    BYTE PTR [rbx+0x68],dh
   14001b1df:	outs   dx,DWORD PTR ds:[rsi]
   14001b1e0:	jne    0x14001b24e
   14001b1e2:	and    BYTE PTR fs:[rsi+0x6f],ch
   14001b1e6:	je     0x14001b208
   14001b1e8:	(bad)  
   14001b1e9:	and    BYTE PTR gs:[rsi+0x6f],ah
   14001b1ed:	ins    BYTE PTR es:[rdi],dx
   14001b1ee:	ins    BYTE PTR es:[rdi],dx
   14001b1ef:	outs   dx,DWORD PTR ds:[rsi]
   14001b1f0:	ja     0x14001b257
   14001b1f2:	and    BYTE PTR fs:[rdx+0x79],ah
   14001b1f6:	and    BYTE PTR [rcx+0x20],ah
   14001b1f9:	jae    0x14001b26b
   14001b1fb:	(bad)  
   14001b1fc:	movsxd esp,DWORD PTR [rbp+0x2e]
   14001b1ff:	add    BYTE PTR [rip+0x6d20646c],ah        # 0x1ad221671
   14001b205:	imul   esp,DWORD PTR [rbx+0x72],0x6573206f
   14001b20c:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14001b20f:	fs jae 0x14001b232
   14001b212:	je     0x14001b283
   14001b214:	and    BYTE PTR [rax+0x61],dh
   14001b217:	jb     0x14001b28c
   14001b219:	and    BYTE PTR gs:[rdx+0x76],ch
   14001b21d:	ins    DWORD PTR es:[rdi],dx
   14001b21e:	movsxd esp,DWORD PTR cs:[rsi+0x67]
   14001b222:	or     al,BYTE PTR [rax]
   14001b224:	add    BYTE PTR [rax],al
   14001b226:	add    BYTE PTR [rax],al
   14001b228:	and    BYTE PTR [rax],ah
   14001b22a:	and    BYTE PTR [rax],ah
   14001b22c:	outs   dx,BYTE PTR ds:[rsi]
   14001b22d:	(bad)  
   14001b22e:	ins    DWORD PTR es:[rdi],dx
   14001b22f:	cmp    ah,BYTE PTR gs:[rax]
   14001b232:	and    eax,0x76202073
   14001b237:	ins    DWORD PTR es:[rdi],dx
   14001b238:	push   rsp
   14001b239:	jns    0x14001b2ab
   14001b23b:	cmp    ah,BYTE PTR gs:[rax]
   14001b23e:	and    eax,0x61202073
   14001b243:	ins    BYTE PTR es:[rdi],dx
   14001b244:	imul   esp,DWORD PTR [rcx+0x73],0x7325203a
   14001b24b:	or     al,BYTE PTR [rax]
   14001b24d:	add    BYTE PTR [rax],al
   14001b24f:	add    BYTE PTR [rsi+0x4d],dl
   14001b252:	pop    rdi
   14001b253:	rex.B
   14001b254:	rex.WR
   14001b255:	rex.WB
   14001b256:	push   r11
   14001b258:	rex.RB
   14001b259:	rex.R pop rdi
   14001b25b:	push   rsp
   14001b25c:	rex.WRXB add BYTE PTR [r8],r8b
   14001b25f:	add    BYTE PTR [rax],ah
   14001b261:	and    BYTE PTR [rax],ah
   14001b263:	and    BYTE PTR [rsi+0x61],ch
   14001b266:	ins    DWORD PTR es:[rdi],dx
   14001b267:	cmp    ah,BYTE PTR gs:[rax]
   14001b26a:	and    eax,0x76202073
   14001b26f:	ins    DWORD PTR es:[rdi],dx
   14001b270:	push   rsp
   14001b271:	jns    0x14001b2e3
   14001b273:	cmp    ah,BYTE PTR gs:[rax]
   14001b276:	and    eax,0x73202073
   14001b27b:	gs jb  0x14001b2f4
   14001b27e:	gs jb  0x14001b2e0
   14001b281:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
   14001b285:	jae    0x14001b2c1
   14001b287:	and    BYTE PTR [rip+0xa73],ah        # 0x14001bd00
   14001b28d:	add    BYTE PTR [rax],al
   14001b28f:	add    BYTE PTR [rsi+0x4d],dl
   14001b292:	pop    rdi
   14001b293:	rex.WB
   14001b294:	rex.RX pop rdi
   14001b296:	push   rbx
   14001b297:	rex.RB push r10
   14001b299:	push   rsi
   14001b29a:	rex.RB push r10
   14001b29c:	pop    rdi
   14001b29d:	rex.XB
   14001b29e:	rex.WR
   14001b29f:	push   r11
   14001b2a1:	push   rbx
   14001b2a2:	add    BYTE PTR [rax],al
   14001b2a4:	add    BYTE PTR [rax],al
   14001b2a6:	add    BYTE PTR [rax],al
   14001b2a8:	push   0x76
   14001b2aa:	ins    DWORD PTR es:[rdi],dx
   14001b2ab:	movsxd esp,DWORD PTR cs:[rsi+0x67]
   14001b2af:	pop    rbx
   14001b2b0:	and    eax,0x3d205d64
   14001b2b5:	and    BYTE PTR [rip+0x3c73253e],ch        # 0x17c74d7f9
   14001b2bb:	sub    eax,0xa
   14001b2c0:	push   rdi
   14001b2c1:	(bad)  
   14001b2c2:	jb     0x14001b332
   14001b2c4:	imul   ebp,DWORD PTR [rsi+0x67],0x6e55203a
   14001b2cb:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   14001b2cf:	outs   dx,BYTE PTR ds:[rsi]
   14001b2d0:	and    BYTE PTR [rsi+0x4d],dl
   14001b2d3:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14001b2d7:	and    BYTE PTR gs:[rdi+0x6e],ch
   14001b2db:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
   14001b2df:	and    BYTE PTR gs:[rip+0x666f2064],ah        # 0x1a670d34a
   14001b2e6:	and    BYTE PTR [rax+0x25],ah
   14001b2e9:	jae    0x14001b312
   14001b2eb:	add    BYTE PTR [rax],al
   14001b2ed:	add    BYTE PTR [rax],al
   14001b2ef:	add    BYTE PTR [rdi+0x61],dl
   14001b2f2:	jb     0x14001b362
   14001b2f4:	imul   ebp,DWORD PTR [rsi+0x67],0x694d203a
   14001b2fb:	jae    0x14001b370
   14001b2fd:	imul   ebp,DWORD PTR [rsi+0x67],0x72657320
   14001b304:	jbe    0x14001b36b
   14001b306:	jb     0x14001b328
   14001b308:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
   14001b30c:	jae    0x14001b32e
   14001b30e:	push   rsi
   14001b30f:	rex.WRB and BYTE PTR [r15+0x6e],r13b
   14001b313:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
   14001b317:	and    BYTE PTR gs:[rip+0x666f2064],ah        # 0x1a670d382
   14001b31e:	and    BYTE PTR [rax+0x25],ah
   14001b321:	jae    0x14001b34a
   14001b323:	add    BYTE PTR [rax],al
   14001b325:	add    BYTE PTR [rax],al
   14001b327:	add    BYTE PTR [rcx+0x46],cl
   14001b32a:	pop    rdi
   14001b32b:	push   rbx
   14001b32c:	rex.RB push r10
   14001b32e:	push   rsi
   14001b32f:	rex.RB push r10
   14001b331:	pop    rdi
   14001b332:	rex.XB
   14001b333:	rex.WR
   14001b334:	push   r11
   14001b336:	push   rbx
   14001b337:	add    BYTE PTR [rcx+0x47],cl
   14001b33a:	rex.WRX
   14001b33b:	rex.WRXB push r10
   14001b33d:	add    BYTE PTR [r8],r8b
   14001b340:	push   rdi
   14001b341:	push   r10
   14001b343:	rex.WRX add BYTE PTR [rax],r8b
   14001b346:	add    BYTE PTR [rax],al
   14001b348:	rex.B
   14001b349:	rex.WR
   14001b34a:	rex.WB
   14001b34b:	push   r11
   14001b34d:	rex.RB
   14001b34e:	rex.R pop rdi
   14001b350:	push   rsp
   14001b351:	rex.WRXB add BYTE PTR [r8],r8b
   14001b354:	rex.WXB
   14001b355:	rex.WRX
   14001b356:	rex.WRXB push r15
   14001b358:	rex.WRX add BYTE PTR [rax],r8b
   14001b35b:	add    BYTE PTR [rax],al
   14001b35d:	add    BYTE PTR [rax],al
   14001b35f:	add    BYTE PTR [rdi+0x61],dl
   14001b362:	jb     0x14001b3d2
   14001b364:	imul   ebp,DWORD PTR [rsi+0x67],0x694d203a
   14001b36b:	jae    0x14001b3e0
   14001b36d:	imul   ebp,DWORD PTR [rsi+0x67],0x204d5620
   14001b374:	je     0x14001b3ef
   14001b376:	jo     0x14001b3dd
   14001b378:	and    BYTE PTR [rdi+0x6e],ch
   14001b37b:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
   14001b37f:	and    BYTE PTR gs:[rip+0x666f2064],ah        # 0x1a670d3ea
   14001b386:	and    BYTE PTR [rax+0x25],ah
   14001b389:	jae    0x14001b3b2
   14001b38b:	add    BYTE PTR [rax],al
   14001b38d:	add    BYTE PTR [rax],al
   14001b38f:	add    BYTE PTR [rdi+0x61],dl
   14001b392:	jb     0x14001b402
   14001b394:	imul   ebp,DWORD PTR [rsi+0x67],0x6f4e203a
   14001b39b:	and    BYTE PTR [rbp+riz*2+0x61],ch
   14001b39f:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x6f202d20
   14001b3a7:	outs   dx,BYTE PTR ds:[rsi]
   14001b3a8:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
   14001b3ac:	and    BYTE PTR gs:[rip+0x666f2064],ah        # 0x1a670d417
   14001b3b3:	and    BYTE PTR [rax+0x25],ah
   14001b3b6:	jae    0x14001b3df
	...
   14001b3c0:	rex.RB jb 0x14001b435
   14001b3c3:	outs   dx,DWORD PTR ds:[rsi]
   14001b3c4:	jb     0x14001b400
   14001b3c6:	and    BYTE PTR [rbx+0x6f],ah
   14001b3c9:	jne    0x14001b437
   14001b3cb:	and    BYTE PTR fs:[rsi+0x6f],ch
   14001b3cf:	je     0x14001b3f1
   14001b3d1:	outs   dx,DWORD PTR ds:[rsi]
   14001b3d2:	jo     0x14001b439
   14001b3d4:	outs   dx,BYTE PTR ds:[rsi]
   14001b3d5:	and    BYTE PTR [rax+0x25],ah
   14001b3d8:	jae    0x14001b401
   14001b3da:	add    BYTE PTR [rax],al
   14001b3dc:	jb     0x14001b3de
   14001b3de:	add    BYTE PTR [rax],al
   14001b3e0:	add    BYTE PTR cs:[rax],al
   14001b3e3:	add    BYTE PTR [rax],al
   14001b3e5:	add    BYTE PTR [rax],al
   14001b3e7:	add    BYTE PTR [rip+0x6d20646c],ah        # 0x1ad221859
   14001b3ed:	imul   esp,DWORD PTR [rbx+0x72],0x6573206f
   14001b3f4:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14001b3f7:	fs jae 0x14001b41a
   14001b3fa:	je     0x14001b46b
   14001b3fc:	and    BYTE PTR [rdi+rbp*2+0x61],cl
   14001b400:	fs rex.WX (bad) 
   14001b403:	jbe    0x14001b466
   14001b405:	push   rsi
   14001b406:	rex.WRB or r8b,BYTE PTR [r8]
   14001b409:	add    BYTE PTR [rax],al
   14001b40b:	add    BYTE PTR [rax],al
   14001b40d:	add    BYTE PTR [rax],al
   14001b40f:	add    BYTE PTR [rcx+0x72],ah
   14001b412:	addr32 jbe 0x14001b470
   14001b415:	and    eax,0x3d205d64
   14001b41a:	and    BYTE PTR [rip+0xa73],ah        # 0x14001be93
   14001b420:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001b422:	ins    DWORD PTR es:[rdi],dx
   14001b423:	ins    DWORD PTR es:[rdi],dx
   14001b424:	(bad)  
   14001b425:	outs   dx,BYTE PTR ds:[rsi]
   14001b426:	and    BYTE PTR fs:[rcx+rbp*2+0x6e],ch
   14001b42b:	and    BYTE PTR gs:[rcx+0x72],ah
   14001b42f:	addr32 jae 0x14001b46c
   14001b432:	or     al,BYTE PTR [rax]
   14001b434:	ins    DWORD PTR es:[rdi],dx
   14001b435:	(bad)  
   14001b436:	ins    BYTE PTR es:[rdi],dx
   14001b437:	ins    BYTE PTR es:[rdi],dx
   14001b438:	outs   dx,DWORD PTR ds:[rsi]
   14001b439:	movsxd eax,DWORD PTR [rax]
   14001b43b:	add    BYTE PTR [rax],al
   14001b43d:	add    BYTE PTR [rax],al
   14001b43f:	add    BYTE PTR [rdx+0x65],dh
   14001b442:	(bad)  
   14001b443:	ins    BYTE PTR es:[rdi],dx
   14001b444:	ins    BYTE PTR es:[rdi],dx
   14001b445:	outs   dx,DWORD PTR ds:[rsi]
   14001b446:	movsxd eax,DWORD PTR [rax]
   14001b448:	jae    0x14001b4be
   14001b44a:	jb     0x14001b4b0
   14001b44c:	jne    0x14001b4be
   14001b44e:	add    BYTE PTR [rax],al
   14001b450:	pop    rsp
   14001b451:	(bad)  
   14001b452:	imul   ebp,DWORD PTR [rsi+0x5c],0x616c7073
   14001b459:	jae    0x14001b4c3
   14001b45b:	jae    0x14001b4c0
   14001b45d:	jb     0x14001b4c4
   14001b45f:	outs   dx,BYTE PTR gs:[rsi]
   14001b461:	cs fs ins BYTE PTR es:[rdi],dx
   14001b464:	ins    BYTE PTR es:[rdi],dx
   14001b465:	add    BYTE PTR [rax],al
   14001b467:	add    BYTE PTR [rcx+0x6d],ah
   14001b46a:	fs ss xor al,0x0
   14001b46e:	add    BYTE PTR [rax],al
   14001b470:	rex.WX (bad) 
   14001b472:	jbe    0x14001b4d5
   14001b474:	and    BYTE PTR [rsi+0x69],dl
   14001b477:	jb     0x14001b4ed
   14001b479:	jne    0x14001b4dc
   14001b47b:	ins    BYTE PTR es:[rdi],dx
   14001b47c:	and    BYTE PTR [rbp+0x61],cl
   14001b47f:	movsxd ebp,DWORD PTR [rax+0x69]
   14001b482:	outs   dx,BYTE PTR ds:[rsi]
   14001b483:	and    BYTE PTR gs:[rcx+riz*2+0x75],cl
   14001b488:	outs   dx,BYTE PTR ds:[rsi]
   14001b489:	movsxd ebp,DWORD PTR [rax+0x65]
   14001b48c:	jb     0x14001b48e
   14001b48e:	add    BYTE PTR [rax],al
   14001b490:	and    eax,0x73
   14001b495:	add    BYTE PTR [rax],al
   14001b497:	add    BYTE PTR [rcx+0x20],al
   14001b49a:	rex.WX (bad) 
   14001b49c:	jbe    0x14001b4ff
   14001b49e:	and    BYTE PTR [rbp+0x78],al
   14001b4a1:	movsxd esp,DWORD PTR [rbp+0x70]
   14001b4a4:	je     0x14001b50f
   14001b4a6:	outs   dx,DWORD PTR ds:[rsi]
   14001b4a7:	outs   dx,BYTE PTR ds:[rsi]
   14001b4a8:	and    BYTE PTR [rax+0x61],ch
   14001b4ab:	jae    0x14001b4cd
   14001b4ad:	outs   dx,DWORD PTR ds:[rsi]
   14001b4ae:	movsxd esp,DWORD PTR [rbx+0x75]
   14001b4b1:	jb     0x14001b525
   14001b4b3:	gs fs add BYTE PTR cs:[rax],al
   14001b4b8:	rex.WX (bad) 
   14001b4ba:	jbe    0x14001b51d
   14001b4bc:	rex.W outs dx,DWORD PTR ds:[rsi]
   14001b4be:	ins    DWORD PTR es:[rdi],dx
   14001b4bf:	add    BYTE PTR gs:[rax],al
   14001b4c2:	add    BYTE PTR [rax],al
   14001b4c4:	add    BYTE PTR [rax],al
   14001b4c6:	add    BYTE PTR [rax],al
   14001b4c8:	push   rbx
   14001b4c9:	outs   dx,DWORD PTR ds:[rsi]
   14001b4ca:	data16 je 0x14001b544
   14001b4cd:	(bad)  
   14001b4ce:	jb     0x14001b535
   14001b4d0:	pop    rsp
   14001b4d1:	rex.WX (bad) 
   14001b4d3:	jbe    0x14001b536
   14001b4d5:	push   rbx
   14001b4d6:	outs   dx,DWORD PTR ds:[rsi]
   14001b4d7:	data16 je 0x14001b536
   14001b4da:	rex.WX (bad) 
   14001b4dc:	jbe    0x14001b53f
   14001b4de:	and    BYTE PTR [rdx+0x75],dl
   14001b4e1:	outs   dx,BYTE PTR ds:[rsi]
   14001b4e2:	je     0x14001b54d
   14001b4e4:	ins    DWORD PTR es:[rdi],dx
   14001b4e5:	and    BYTE PTR gs:[rbp+0x6e],al
   14001b4e9:	jbe    0x14001b554
   14001b4eb:	jb     0x14001b55c
   14001b4ed:	outs   dx,BYTE PTR ds:[rsi]
   14001b4ee:	ins    DWORD PTR es:[rdi],dx
   14001b4ef:	outs   dx,BYTE PTR gs:[rsi]
   14001b4f1:	je     0x14001b4f3
   14001b4f3:	add    BYTE PTR [rax+rax*1+0x0],bl
   14001b4f7:	add    BYTE PTR [rbp+0x72],al
   14001b4fa:	jb     0x14001b56b
   14001b4fc:	jb     0x14001b538
   14001b4fe:	and    BYTE PTR [rbp+0x6e],dl
   14001b501:	(bad)  
   14001b502:	(bad)  
   14001b503:	ins    BYTE PTR es:[rdi],dx
   14001b504:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   14001b509:	jb     0x14001b570
   14001b50b:	jae    0x14001b57c
   14001b50d:	ins    BYTE PTR es:[rdi],dx
   14001b50e:	jbe    0x14001b575
   14001b510:	and    BYTE PTR [rip+0x73],ah        # 0x14001b589
   14001b516:	add    BYTE PTR [rax],al
   14001b518:	rex.RB jb 0x14001b58d
   14001b51b:	outs   dx,DWORD PTR ds:[rsi]
   14001b51c:	jb     0x14001b558
   14001b51e:	and    BYTE PTR [rdi+0x61],dl
   14001b521:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6e695372
   14001b529:	ins    BYTE PTR es:[edi],dx
   14001b52b:	gs rex.WRXB (bad) 
   14001b52e:	push   0x65
   14001b530:	movsxd esi,DWORD PTR [rax+rbp*1+0x29]
   14001b534:	and    BYTE PTR [rsi+0x61],ah
   14001b537:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x2e
   14001b53f:	add    BYTE PTR [rbp+0x72],al
   14001b542:	jb     0x14001b5b3
   14001b544:	jb     0x14001b580
   14001b546:	and    BYTE PTR [rbx+0x72],al
   14001b549:	gs (bad) 
   14001b54b:	je     0x14001b5b2
   14001b54d:	push   rax
   14001b54e:	jb     0x14001b5bf
   14001b550:	movsxd esp,DWORD PTR [rbp+0x73]
   14001b553:	jae    0x14001b57d
   14001b555:	and    eax,0x2e202c73
   14001b55a:	cs sub DWORD PTR cs:[rax],esp
   14001b55e:	data16 (bad) 
   14001b560:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x3a
   14001b568:	push   rdx
   14001b569:	gs rex.RB js 0x14001b5d2
   14001b56d:	movsxd esp,DWORD PTR [rax]
   14001b56f:	rex.B jb 0x14001b5d9
   14001b572:	jae    0x14001b5ae
   14001b574:	and    BYTE PTR [rip+0xa73],ah        # 0x14001bfed
   14001b57a:	add    BYTE PTR [rax],al
   14001b57c:	add    BYTE PTR [rax],al
   14001b57e:	add    BYTE PTR [rax],al
   14001b580:	push   rdx
   14001b581:	gs rex.RB js 0x14001b5ea
   14001b585:	movsxd esp,DWORD PTR [rax]
   14001b587:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001b589:	ins    DWORD PTR es:[rdi],dx
   14001b58a:	ins    DWORD PTR es:[rdi],dx
   14001b58b:	(bad)  
   14001b58c:	outs   dx,BYTE PTR ds:[rsi]
   14001b58d:	cmp    ah,BYTE PTR fs:[rax]
   14001b590:	and    eax,0x25282073
   14001b595:	jae    0x14001b5c0
   14001b597:	or     al,BYTE PTR [rax]
   14001b599:	add    BYTE PTR [rax],al
   14001b59b:	add    BYTE PTR [rdx],ah
   14001b59d:	add    BYTE PTR [rax],al
   14001b59f:	add    BYTE PTR [rip+0x69625c73],ah        # 0x1a9641218
   14001b5a5:	outs   dx,BYTE PTR ds:[rsi]
   14001b5a6:	pop    rsp
   14001b5a7:	and    eax,0x78652e73
   14001b5ac:	add    BYTE PTR gs:[rax],al
   14001b5af:	add    BYTE PTR [rbp+0x78],al
   14001b5b2:	movsxd ecx,DWORD PTR gs:[rdx+0x52]
   14001b5b6:	cmp    r12b,BYTE PTR [r8]
   14001b5b9:	outs   dx,BYTE PTR ds:[rsi]
   14001b5ba:	gs ja  0x14001b5f7
   14001b5bd:	and    BYTE PTR [rip+0xa73],ah        # 0x14001c036
   14001b5c3:	add    BYTE PTR [rax],al
   14001b5c5:	add    BYTE PTR [rax],al
   14001b5c7:	add    BYTE PTR [rbp+0x78],al
   14001b5ca:	movsxd ecx,DWORD PTR gs:[rdx+0x52]
   14001b5ce:	cmp    r12b,BYTE PTR [r8]
   14001b5d1:	outs   dx,DWORD PTR ds:[rsi]
   14001b5d2:	ins    BYTE PTR es:[rdi],dx
   14001b5d3:	cmp    ah,BYTE PTR fs:[rax]
   14001b5d6:	and    eax,0xa73
   14001b5db:	add    BYTE PTR [rip+0x25000000],bh        # 0x16501b5e1
   14001b5e1:	rex.WB
   14001b5e2:	ss xor al,0x64
   14001b5e5:	add    BYTE PTR [rax],al
   14001b5e7:	add    BYTE PTR [rbp+0x72],al
   14001b5ea:	jb     0x14001b65b
   14001b5ec:	jb     0x14001b628
   14001b5ee:	and    BYTE PTR [rdi+rbp*2+0x61],ch
   14001b5f2:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x7325203a
   14001b5fa:	add    BYTE PTR [rax],al
   14001b5fc:	add    BYTE PTR [rax],al
   14001b5fe:	add    BYTE PTR [rax],al
   14001b600:	rex.WX push rsi
   14001b602:	rex.WRB pop r15
   14001b604:	rex.RX imul r13d,DWORD PTR [rsi+0x64],0x73616c43
   14001b60c:	jae    0x14001b654
   14001b60e:	jb     0x14001b67f
   14001b610:	ins    DWORD PTR es:[rdi],dx
   14001b611:	rex.X outs dx,DWORD PTR ds:[rsi]
   14001b613:	outs   dx,DWORD PTR ds:[rsi]
   14001b614:	je     0x14001b662
   14001b616:	outs   dx,DWORD PTR ds:[rsi]
   14001b617:	(bad)  
   14001b618:	fs gs jb 0x14001b61c
   14001b61c:	add    BYTE PTR [rax],al
   14001b61e:	add    BYTE PTR [rax],al
   14001b620:	push   0x76
   14001b622:	ins    DWORD PTR es:[rdi],dx
   14001b623:	cs fs ins BYTE PTR es:[rdi],dx
   14001b626:	ins    BYTE PTR es:[rdi],dx
   14001b627:	add    BYTE PTR [rbp+0x78],ah
   14001b62a:	jo     0x14001b68d
   14001b62c:	outs   dx,BYTE PTR ds:[rsi]
   14001b62d:	fs rex.B jb 0x14001b698
   14001b631:	jae    0x14001b633
   14001b633:	add    BYTE PTR [rax],al
   14001b635:	add    BYTE PTR [rax],al
   14001b637:	add    BYTE PTR [rax],ch
   14001b639:	pop    rbx
   14001b63a:	rex.WR push 0x61
   14001b63d:	jbe    0x14001b6a0
   14001b63f:	(bad)  
   14001b640:	ins    BYTE PTR es:[rdi],dx
   14001b641:	(bad)  
   14001b642:	outs   dx,BYTE PTR ds:[rsi]
   14001b643:	addr32 (bad) 
   14001b645:	push   rbx
   14001b646:	je     0x14001b6ba
   14001b648:	imul   ebp,DWORD PTR [rsi+0x67],0x4c5b293b
   14001b64f:	push   0x61
   14001b651:	jbe    0x14001b6b4
   14001b653:	(bad)  
   14001b654:	ins    BYTE PTR es:[rdi],dx
   14001b655:	(bad)  
   14001b656:	outs   dx,BYTE PTR ds:[rsi]
   14001b657:	addr32 (bad) 
   14001b659:	push   rbx
   14001b65a:	je     0x14001b6ce
   14001b65c:	imul   ebp,DWORD PTR [rsi+0x67],0x3b
   14001b663:	add    BYTE PTR [rip+0x25000a73],ah        # 0x16501c0dc
   14001b669:	movsxd esp,DWORD PTR [rip+0x73]        # 0x14001b6e2
   14001b66f:	add    BYTE PTR [rax+0x61],dh
   14001b672:	jae    0x14001b6e7
   14001b674:	imul   ebp,DWORD PTR [rsi+0x67],0x67726120
   14001b67b:	jne    0x14001b6ea
   14001b67d:	outs   dx,BYTE PTR gs:[rsi]
   14001b67f:	je     0x14001b6f4
   14001b681:	and    BYTE PTR [rcx+0x73],ah
   14001b684:	sub    eax,0xa7369
   14001b689:	add    BYTE PTR [rax],al
   14001b68b:	add    BYTE PTR [rax],al
   14001b68d:	add    BYTE PTR [rax],al
   14001b68f:	add    BYTE PTR [rdi+0x61],dl
   14001b692:	jb     0x14001b702
   14001b694:	imul   ebp,DWORD PTR [rsi+0x67],0x7061203a
   14001b69b:	jo     0x14001b6bd
   14001b69d:	(bad)  
   14001b69e:	jb     0x14001b707
   14001b6a0:	jae    0x14001b6c2
   14001b6a2:	jo     0x14001b705
   14001b6a4:	jb     0x14001b719
   14001b6a6:	imul   ebp,DWORD PTR [rsi+0x67],0x72726520
   14001b6ad:	outs   dx,DWORD PTR ds:[rsi]
   14001b6ae:	jb     0x14001b6ba
	...
   14001b6b8:	jo     0x14001b71b
   14001b6ba:	jae    0x14001b72f
   14001b6bc:	imul   ebp,DWORD PTR [rsi+0x67],0x67726120
   14001b6c3:	jne    0x14001b732
   14001b6c5:	outs   dx,BYTE PTR gs:[rsi]
   14001b6c7:	je     0x14001b73c
   14001b6c9:	and    BYTE PTR [rcx+0x73],ah
   14001b6cc:	sub    eax,0xa2e7369
   14001b6d1:	add    BYTE PTR [rax],al
   14001b6d3:	add    BYTE PTR [rax],al
   14001b6d5:	add    BYTE PTR [rax],al
   14001b6d7:	add    BYTE PTR [rdi+0x61],dl
   14001b6da:	jb     0x14001b74a
   14001b6dc:	imul   ebp,DWORD PTR [rsi+0x67],0x7061203a
   14001b6e3:	jo     0x14001b705
   14001b6e5:	(bad)  
   14001b6e6:	jb     0x14001b74f
   14001b6e8:	jae    0x14001b70a
   14001b6ea:	imul   esi,DWORD PTR [rbx+0x20],0x6772616c
   14001b6f1:	gs jb  0x14001b714
   14001b6f4:	je     0x14001b75e
   14001b6f6:	(bad)  
   14001b6f7:	outs   dx,BYTE PTR ds:[rsi]
   14001b6f8:	and    BYTE PTR [rax+rbp*2+0x65],dh
   14001b6fc:	and    BYTE PTR [rdi+0x72],ch
   14001b6ff:	imul   esp,DWORD PTR [rdi+0x69],0x2c6c616e
   14001b706:	and    BYTE PTR [rip+0x64252064],ah        # 0x1a426d770
   14001b70c:	or     al,BYTE PTR [rax]
   14001b70e:	add    BYTE PTR [rax],al
   14001b710:	and    eax,0x766a5c73
   14001b715:	ins    DWORD PTR es:[rdi],dx
   14001b716:	cs fs ins BYTE PTR es:[rdi],dx
   14001b719:	ins    BYTE PTR es:[rdi],dx
   14001b71a:	add    BYTE PTR [rax],al
   14001b71c:	add    BYTE PTR [rax],al
   14001b71e:	add    BYTE PTR [rax],al
   14001b720:	and    eax,0x69625c73
   14001b725:	outs   dx,BYTE PTR ds:[rsi]
   14001b726:	pop    rsp
   14001b727:	and    eax,0x766a5c73
   14001b72c:	ins    DWORD PTR es:[rdi],dx
   14001b72d:	cs fs ins BYTE PTR es:[rdi],dx
   14001b730:	ins    BYTE PTR es:[rdi],dx
   14001b731:	add    BYTE PTR [rax],al
   14001b733:	add    BYTE PTR [rax],al
   14001b735:	add    BYTE PTR [rax],al
   14001b737:	add    BYTE PTR [rsi+0x65],dl
   14001b73a:	jb     0x14001b7af
   14001b73c:	imul   ebp,DWORD PTR [rdi+0x6e],0x6a616d20
   14001b743:	outs   dx,DWORD PTR ds:[rsi]
   14001b744:	jb     0x14001b774
   14001b746:	ins    DWORD PTR es:[rdi],dx
   14001b747:	imul   ebp,DWORD PTR [rsi+0x6f],0x696d2e72
   14001b74e:	movsxd esi,DWORD PTR [rdx+0x6f]
   14001b751:	and    BYTE PTR [rip+0x2e732520],bh        # 0x16e74dc77
   14001b757:	and    eax,0xa73
   14001b75c:	add    BYTE PTR [rax],al
   14001b75e:	add    BYTE PTR [rax],al
   14001b760:	push   rdi
   14001b761:	(bad)  
   14001b762:	jb     0x14001b7d2
   14001b764:	imul   ebp,DWORD PTR [rsi+0x67],0x6143203a
   14001b76b:	outs   dx,BYTE PTR ds:[rsi]
   14001b76c:	(bad)  
   14001b76d:	je     0x14001b78f
   14001b76f:	jb     0x14001b7d6
   14001b771:	(bad)  
   14001b772:	and    BYTE PTR fs:[rbp+0x69],cl
   14001b776:	movsxd esi,DWORD PTR [rdx+0x6f]
   14001b779:	push   rsi
   14001b77a:	gs jb  0x14001b7f0
   14001b77d:	imul   ebp,DWORD PTR [rdi+0x6e],0xa
   14001b784:	add    BYTE PTR [rax],al
   14001b786:	add    BYTE PTR [rax],al
   14001b788:	imul   r12,QWORD PTR [r11+0x72],0x7265566f
   14001b790:	jae    0x14001b7fb
   14001b792:	outs   dx,DWORD PTR ds:[rsi]
   14001b793:	outs   dx,BYTE PTR ds:[rsi]
   14001b794:	add    BYTE PTR [rax],al
   14001b796:	add    BYTE PTR [rax],al
   14001b798:	rex.RX (bad) 
   14001b79a:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x61657220
   14001b7a2:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x6c617620
   14001b7aa:	jne    0x14001b811
   14001b7ac:	and    BYTE PTR [rdi+0x66],ch
   14001b7af:	and    BYTE PTR [rdx+0x65],dh
   14001b7b2:	imul   esi,DWORD PTR [ebx+0x74],0x6b207972
   14001b7ba:	gs jns 0x14001b7f7
   14001b7bd:	or     cl,BYTE PTR [rcx]
   14001b7bf:	and    eax,0x73255c73
   14001b7c4:	pop    rsp
   14001b7c5:	rex.WX (bad) 
   14001b7c7:	jbe    0x14001b82a
   14001b7c9:	rex.W outs dx,DWORD PTR ds:[rsi]
   14001b7cb:	ins    DWORD PTR es:[rdi],dx
   14001b7cc:	add    BYTE PTR gs:[rax],al
   14001b7cf:	add    BYTE PTR [rbp+0x72],al
   14001b7d2:	jb     0x14001b843
   14001b7d4:	jb     0x14001b810
   14001b7d6:	and    BYTE PTR [rdx+0x65],dl
   14001b7d9:	imul   esi,DWORD PTR [ebx+0x74],0x6b207972
   14001b7e1:	gs jns 0x14001b804
   14001b7e4:	(bad)  
   14001b7e5:	and    eax,0x435c2773
   14001b7ea:	jne    0x14001b85e
   14001b7ec:	jb     0x14001b853
   14001b7ee:	outs   dx,BYTE PTR ds:[rsi]
   14001b7ef:	je     0x14001b847
   14001b7f1:	gs jb  0x14001b867
   14001b7f4:	imul   ebp,DWORD PTR [rdi+0x6e],0x61680a27
   14001b7fb:	jae    0x14001b81d
   14001b7fd:	jbe    0x14001b860
   14001b7ff:	ins    BYTE PTR es:[rdi],dx
   14001b800:	jne    0x14001b867
   14001b802:	and    BYTE PTR [rdi],ah
   14001b804:	and    eax,0x202c2773
   14001b809:	(bad)  
   14001b80a:	jne    0x14001b880
   14001b80c:	and    BYTE PTR [rdi],ah
   14001b80e:	and    eax,0x69202773
   14001b813:	jae    0x14001b835
   14001b815:	jb     0x14001b87c
   14001b817:	jno    0x14001b88e
   14001b819:	imul   esi,DWORD PTR [rdx+0x65],0x2e64
   14001b820:	rex.RB jb 0x14001b895
   14001b823:	outs   dx,DWORD PTR ds:[rsi]
   14001b824:	jb     0x14001b860
   14001b826:	and    BYTE PTR [rsi+0x61],al
   14001b829:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x61657220
   14001b831:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x6c617620
   14001b839:	jne    0x14001b8a0
   14001b83b:	and    BYTE PTR [rdi+0x66],ch
   14001b83e:	and    BYTE PTR [rdx+0x65],dh
   14001b841:	imul   esi,DWORD PTR [ebx+0x74],0x6b207972
   14001b849:	gs jns 0x14001b886
   14001b84c:	or     cl,BYTE PTR [rcx]
   14001b84e:	and    eax,0x75435c73
   14001b853:	jb     0x14001b8c7
   14001b855:	outs   dx,BYTE PTR gs:[rsi]
   14001b857:	je     0x14001b8af
   14001b859:	gs jb  0x14001b8cf
   14001b85c:	imul   ebp,DWORD PTR [rdi+0x6e],0x72754300
   14001b863:	jb     0x14001b8ca
   14001b865:	outs   dx,BYTE PTR ds:[rsi]
   14001b866:	je     0x14001b8be
   14001b868:	gs jb  0x14001b8de
   14001b86b:	imul   ebp,DWORD PTR [rdi+0x6e],0x72450000
   14001b872:	jb     0x14001b8e3
   14001b874:	jb     0x14001b8b0
   14001b876:	and    BYTE PTR [rdi+0x70],ch
   14001b879:	outs   dx,BYTE PTR gs:[rsi]
   14001b87b:	imul   ebp,DWORD PTR [rsi+0x67],0x67657220
   14001b882:	imul   esi,DWORD PTR [rbx+0x74],0x6b207972
   14001b889:	gs jns 0x14001b8ac
   14001b88c:	(bad)  
   14001b88d:	and    eax,0x2773
   14001b892:	add    BYTE PTR [rax],al
   14001b894:	add    BYTE PTR [rax],al
   14001b896:	add    BYTE PTR [rax],al
   14001b898:	rex.RB jb 0x14001b90d
   14001b89b:	outs   dx,DWORD PTR ds:[rsi]
   14001b89c:	jb     0x14001b8d8
   14001b89e:	and    BYTE PTR [rbx+0x6f],ah
   14001b8a1:	jne    0x14001b90f
   14001b8a3:	and    BYTE PTR fs:[rsi+0x6f],ch
   14001b8a7:	je     0x14001b8c9
   14001b8a9:	imul   bp,WORD PTR [rsi+0x64],0x6a20
   14001b8af:	(bad)  
   14001b8b0:	jbe    0x14001b913
   14001b8b2:	cs fs ins BYTE PTR es:[rdi],dx
   14001b8b5:	ins    BYTE PTR es:[rdi],dx
   14001b8b6:	add    BYTE PTR [rax],al
   14001b8b8:	pop    rsp
   14001b8b9:	push   0x72
   14001b8bb:	add    BYTE PTR gs:[rax],al
   14001b8be:	add    BYTE PTR [rax],al
   14001b8c0:	and    eax,0x726a5c73
   14001b8c5:	gs pop rsp
   14001b8c7:	(bad)  
   14001b8c8:	imul   ebp,DWORD PTR [rsi+0x5c],0x6176616a
   14001b8cf:	cs fs ins BYTE PTR es:[rdi],dx
   14001b8d2:	ins    BYTE PTR es:[rdi],dx
   14001b8d3:	add    BYTE PTR [rax],al
   14001b8d5:	add    BYTE PTR [rax],al
   14001b8d7:	add    BYTE PTR [rdx+0x52],cl
   14001b8da:	and    BYTE PTR [r8+0x61],r14b
   14001b8de:	je     0x14001b948
   14001b8e0:	and    BYTE PTR [rcx+0x73],ch
   14001b8e3:	and    BYTE PTR [rip+0x25000a73],ah        # 0x16501c35c
   14001b8e9:	jae    0x14001b947
   14001b8eb:	(bad)  
   14001b8ec:	imul   ebp,DWORD PTR [rsi+0x5c],0x6176616a
   14001b8f3:	cs fs ins BYTE PTR es:[rdi],dx
   14001b8f6:	ins    BYTE PTR es:[rdi],dx
   14001b8f7:	add    BYTE PTR [rip+0x6e757344],ch        # 0x1ae772c41
   14001b8fd:	cs push 0x61
   14001b900:	jbe    0x14001b963
   14001b902:	xor    ah,BYTE PTR [rsi+rbp*1+0x6f]
   14001b906:	jo     0x14001b96d
   14001b908:	outs   dx,BYTE PTR ds:[rsi]
   14001b909:	ins    BYTE PTR es:[edi],dx
   14001b90b:	add    BYTE PTR [rax],al
   14001b90d:	add    BYTE PTR [rax],al
   14001b90f:	add    BYTE PTR [rip+0x6e757344],ch        # 0x1ae772c59
   14001b915:	cs push 0x61
   14001b918:	jbe    0x14001b97b
   14001b91a:	xor    ah,BYTE PTR [rsi+rbp*1+0x64]
   14001b91e:	xor    esp,DWORD PTR [rax+rax*1+0x0]
   14001b922:	add    BYTE PTR [rax],al
   14001b924:	add    BYTE PTR [rax],al
   14001b926:	add    BYTE PTR [rax],al
   14001b928:	sub    eax,0x6e757344
   14001b92d:	cs push 0x61
   14001b930:	jbe    0x14001b993
   14001b932:	xor    ah,BYTE PTR [rsi+rbp*1+0x6e]
   14001b936:	outs   dx,DWORD PTR ds:[rsi]
   14001b937:	fs fs jb 0x14001b99c
   14001b93b:	ja     0x14001b93d
   14001b93d:	add    BYTE PTR [rax],al
   14001b93f:	add    BYTE PTR [rip+0x6e757344],ch        # 0x1ae772c89
   14001b945:	cs (bad) 
   14001b947:	ja     0x14001b9bd
   14001b949:	cs ja  0x14001b9ad
   14001b94c:	jb     0x14001b9bb
   14001b94e:	jne    0x14001b9c0
	...
   14001b960:	rex.RB jb 0x14001b9d5
   14001b963:	outs   dx,DWORD PTR ds:[rsi]
   14001b964:	jb     0x14001b9a0
   14001b966:	and    BYTE PTR [rbp+0x69],ch
   14001b969:	jae    0x14001b9de
   14001b96b:	imul   ebp,DWORD PTR [rsi+0x67],0x73256020
   14001b972:	(bad)  
   14001b973:	and    BYTE PTR [rdx+0x56],cl
   14001b976:	rex.WRB and BYTE PTR [r9+0x74],r12b
   14001b97a:	and    BYTE PTR [rax+0x25],ah
   14001b97d:	jae    0x14001b9a6
   14001b97f:	or     dl,BYTE PTR cs:[rax+0x6c]
   14001b983:	gs (bad) 
   14001b985:	jae    0x14001b9ec
   14001b987:	and    BYTE PTR [rcx+0x6e],ch
   14001b98a:	jae    0x14001ba00
   14001b98c:	(bad)  
   14001b98d:	ins    BYTE PTR es:[rdi],dx
   14001b98e:	ins    BYTE PTR es:[rdi],dx
   14001b98f:	and    BYTE PTR [rdi+0x72],ch
   14001b992:	and    BYTE PTR [rbp+0x73],dh
   14001b995:	and    BYTE PTR gs:[rax+rbp*2+0x65],dh
   14001b99a:	and    BYTE PTR [rdx+0x52],cl
   14001b99d:	and    BYTE PTR [r15+0x72],r13b
   14001b9a1:	and    BYTE PTR [rdx+0x44],cl
   14001b9a4:	rex.WXB and BYTE PTR [r8+r13*2+0x61],sil
   14001b9a9:	je     0x14001b9cb
   14001b9ab:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14001b9ae:	je     0x14001ba11
   14001b9b0:	imul   ebp,DWORD PTR [rsi+0x73],0x65687420
   14001b9b7:	jae    0x14001ba1e
   14001b9b9:	and    BYTE PTR [rbp+0x69],ch
   14001b9bc:	jae    0x14001ba31
   14001b9be:	imul   ebp,DWORD PTR [rsi+0x67],0x6d6f6320
   14001b9c5:	jo     0x14001ba36
   14001b9c7:	outs   dx,BYTE PTR ds:[rsi]
   14001b9c8:	outs   dx,BYTE PTR gs:[rsi]
   14001b9ca:	je     0x14001ba3f
   14001b9cc:	add    BYTE PTR cs:[rax],al
   14001b9cf:	add    BYTE PTR [rbp+0x72],al
   14001b9d2:	jb     0x14001ba43
   14001b9d4:	jb     0x14001ba10
   14001b9d6:	and    BYTE PTR [rbx+0x6f],ah
   14001b9d9:	jne    0x14001ba47
   14001b9db:	and    BYTE PTR fs:[rsi+0x6f],ch
   14001b9df:	je     0x14001ba01
   14001b9e1:	fs gs je 0x14001ba4a
   14001b9e5:	jb     0x14001ba54
   14001b9e7:	imul   ebp,DWORD PTR [rsi+0x65],0x4d564a20
   14001b9ee:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14001b9f2:	gs add BYTE PTR cs:[rax],al
   14001b9f6:	add    BYTE PTR [rax],al
   14001b9f8:	rex.RB jb 0x14001ba6d
   14001b9fb:	outs   dx,DWORD PTR ds:[rsi]
   14001b9fc:	jb     0x14001ba38
   14001b9fe:	and    BYTE PTR [rsi+0x6f],ch
   14001ba01:	and    BYTE PTR [rbx+0x6e],ch
   14001ba04:	outs   dx,DWORD PTR ds:[rsi]
   14001ba05:	ja     0x14001ba75
   14001ba07:	and    BYTE PTR [rsi+0x4d],dl
   14001ba0a:	jae    0x14001ba3a
   14001ba0c:	and    BYTE PTR [rax],ch
   14001ba0e:	movsxd ebp,DWORD PTR [rax+0x65]
   14001ba11:	movsxd ebp,DWORD PTR [rbx+0x20]
   14001ba14:	outs   dx,WORD PTR ds:[rsi]
   14001ba16:	jb     0x14001ba38
   14001ba18:	movsxd ebp,DWORD PTR [rdi+0x72]
   14001ba1b:	jb     0x14001ba92
   14001ba1d:	jo     0x14001ba93
   14001ba1f:	and    BYTE PTR [rdx+0x76],ch
   14001ba22:	ins    DWORD PTR es:[rdi],dx
   14001ba23:	movsxd esp,DWORD PTR cs:[rsi+0x67]
   14001ba27:	and    BYTE PTR [rsi+0x69],ah
   14001ba2a:	ins    BYTE PTR es:[rdi],dx
   14001ba2b:	sub    DWORD PTR gs:[rax],eax
   14001ba2e:	add    BYTE PTR [rax],al
   14001ba30:	and    eax,0x6c732573
   14001ba35:	imul   esp,DWORD PTR [rdx+0x25],0x25732573
   14001ba3c:	jae    0x14001baa8
   14001ba3e:	jbe    0x14001baad
   14001ba40:	movsxd esp,DWORD PTR cs:[rsi+0x67]
   14001ba44:	add    BYTE PTR [rax],al
   14001ba46:	add    BYTE PTR [rax],al
   14001ba48:	rex.RB jb 0x14001babd
   14001ba4b:	outs   dx,DWORD PTR ds:[rsi]
   14001ba4c:	jb     0x14001ba88
   14001ba4e:	and    BYTE PTR [rbx+0x6f],al
   14001ba51:	jne    0x14001babf
   14001ba53:	and    BYTE PTR fs:[rsi+0x6f],ch
   14001ba57:	je     0x14001ba79
   14001ba59:	imul   bp,WORD PTR [rsi+0x64],0x4a20
   14001ba5f:	(bad)  
   14001ba60:	jbe    0x14001bac3
   14001ba62:	and    BYTE PTR [rbx+0x45],dl
   14001ba65:	and    BYTE PTR [rdx+0x75],dl
   14001ba68:	outs   dx,BYTE PTR ds:[rsi]
   14001ba69:	je     0x14001bad4
   14001ba6b:	ins    DWORD PTR es:[rdi],dx
   14001ba6c:	and    BYTE PTR gs:[rbp+0x6e],al
   14001ba70:	jbe    0x14001badb
   14001ba72:	jb     0x14001bae3
   14001ba74:	outs   dx,BYTE PTR ds:[rsi]
   14001ba75:	ins    DWORD PTR es:[rdi],dx
   14001ba76:	outs   dx,BYTE PTR gs:[rsi]
   14001ba78:	je     0x14001baa8
   14001ba7a:	add    BYTE PTR [rax],al
   14001ba7c:	add    BYTE PTR [rax],al
   14001ba7e:	add    BYTE PTR [rax],al
   14001ba80:	rex.RB jb 0x14001baf5
   14001ba83:	outs   dx,DWORD PTR ds:[rsi]
   14001ba84:	jb     0x14001bac0
   14001ba86:	and    BYTE PTR [rax+rbp*2+0x69],dl
   14001ba8a:	jae    0x14001baac
   14001ba8c:	rex.WX (bad) 
   14001ba8e:	jbe    0x14001baf1
   14001ba90:	and    BYTE PTR [rcx+0x6e],ch
   14001ba93:	jae    0x14001bb09
   14001ba95:	(bad)  
   14001ba96:	outs   dx,BYTE PTR ds:[rsi]
   14001ba97:	movsxd esp,DWORD PTR [rbp+0x20]
   14001ba9a:	outs   dx,DWORD PTR fs:[rsi]
   14001ba9c:	gs jae 0x14001babf
   14001ba9f:	outs   dx,BYTE PTR ds:[rsi]
   14001baa0:	outs   dx,DWORD PTR ds:[rsi]
   14001baa1:	je     0x14001bac3
   14001baa3:	jae    0x14001bb1a
   14001baa5:	jo     0x14001bb17
   14001baa7:	outs   dx,DWORD PTR ds:[rsi]
   14001baa8:	jb     0x14001bb1e
   14001baaa:	and    BYTE PTR [rcx+0x20],ah
   14001baad:	and    eax,0x69622d64
   14001bab2:	je     0x14001bad4
   14001bab4:	rex.WX push rsi
   14001bab6:	rex.WRB
   14001bab7:	or     dl,BYTE PTR cs:[rax+0x6c]
   14001babb:	gs (bad) 
   14001babd:	jae    0x14001bb24
   14001babf:	and    BYTE PTR [rcx+0x6e],ch
   14001bac2:	jae    0x14001bb38
   14001bac4:	(bad)  
   14001bac5:	ins    BYTE PTR es:[rdi],dx
   14001bac6:	ins    BYTE PTR es:[rdi],dx
   14001bac7:	and    BYTE PTR [rax+rbp*2+0x65],dh
   14001bacb:	and    BYTE PTR [rbp+riz*2+0x73],ah
   14001bacf:	imul   esi,DWORD PTR [rdx+0x65],0x65762064
   14001bad6:	jb     0x14001bb4b
   14001bad8:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e
   14001badf:	add    BYTE PTR [rip+0x33642d4a],ch        # 0x17365e82f
   14001bae5:	xor    al,BYTE PTR [rax]
   14001bae7:	add    BYTE PTR [rip+0x36642d4a],ch        # 0x17665e837
   14001baed:	xor    al,0x0
   14001baef:	add    BYTE PTR [rbx+0x52],al
   14001baf2:	push   rsp
   14001baf3:	and    BYTE PTR [rax+0x61],dh
   14001baf6:	je     0x14001bb60
   14001baf8:	and    BYTE PTR [rcx+0x73],ch
   14001bafb:	and    BYTE PTR [rip+0x5c000a73],ah        # 0x19c01c574
   14001bb01:	(bad)  
   14001bb02:	imul   ebp,DWORD PTR [rsi+0x5c],0x6376736d
   14001bb09:	jb     0x14001bb3c
   14001bb0b:	xor    BYTE PTR [rax],dh
   14001bb0d:	cs fs ins BYTE PTR es:[rdi],dx
   14001bb10:	ins    BYTE PTR es:[rdi],dx
   14001bb11:	add    BYTE PTR [rax],al
   14001bb13:	add    BYTE PTR [rax],al
   14001bb15:	add    BYTE PTR [rax],al
   14001bb17:	add    BYTE PTR [rbp+0x72],al
   14001bb1a:	jb     0x14001bb8b
   14001bb1c:	jb     0x14001bb58
   14001bb1e:	and    BYTE PTR [rax+0x61],dl
   14001bb21:	je     0x14001bb8b
   14001bb23:	and    BYTE PTR [rbp+riz*2+0x6e],ch
   14001bb27:	addr32 je 0x14001bb92
   14001bb2a:	and    BYTE PTR [rbp+0x78],ah
   14001bb2d:	movsxd esp,DWORD PTR [rbp+0x65]
   14001bb30:	fs jae 0x14001bb53
   14001bb33:	ins    DWORD PTR es:[rdi],dx
   14001bb34:	(bad)  
   14001bb35:	js     0x14001bba0
   14001bb37:	ins    DWORD PTR es:[rdi],dx
   14001bb38:	jne    0x14001bba7
   14001bb3a:	and    BYTE PTR [rbp+riz*2+0x6e],ch
   14001bb3e:	addr32 je 0x14001bba9
   14001bb41:	and    BYTE PTR [rax],ch
   14001bb43:	push   rax
   14001bb44:	push   r12
   14001bb46:	rex.W pop rdi
   14001bb48:	rex.WRB
   14001bb49:	pop    r8
   14001bb4b:	sub    DWORD PTR [rax],eax
   14001bb4d:	add    BYTE PTR [rax],al
   14001bb4f:	add    BYTE PTR [rdx+riz*2+0x69],bl
   14001bb53:	outs   dx,BYTE PTR ds:[rsi]
   14001bb54:	pop    rsp
   14001bb55:	add    BYTE PTR [rax],al
   14001bb57:	add    BYTE PTR [rbp+0x73],ch
   14001bb5a:	jbe    0x14001bbbf
   14001bb5c:	jb     0x14001bb8f
   14001bb5e:	xor    BYTE PTR [rax],dh
   14001bb60:	cs fs ins BYTE PTR es:[rdi],dx
   14001bb63:	ins    BYTE PTR es:[rdi],dx
   14001bb64:	add    BYTE PTR [rax],al
   14001bb66:	add    BYTE PTR [rax],al
   14001bb68:	rex.RB jb 0x14001bbdd
   14001bb6b:	outs   dx,DWORD PTR ds:[rsi]
   14001bb6c:	jb     0x14001bba8
   14001bb6e:	and    BYTE PTR [rbx+0x61],ah
   14001bb71:	outs   dx,BYTE PTR ds:[rsi]
   14001bb72:	(bad)  
   14001bb73:	je     0x14001bb95
   14001bb75:	imul   bp,WORD PTR [rsi+0x64],0x4a20
   14001bb7b:	rex.WRX
   14001bb7c:	rex.WB and BYTE PTR [r9+0x6e],bpl
   14001bb80:	je     0x14001bbe7
   14001bb82:	jb     0x14001bbea
   14001bb84:	(bad)  
   14001bb85:	movsxd esp,DWORD PTR [rbp+0x73]
   14001bb88:	and    BYTE PTR [rcx+0x6e],ch
   14001bb8b:	cmp    ah,BYTE PTR [rax]
   14001bb8d:	and    eax,0x4e4a0073
   14001bb92:	rex.WB pop r15
   14001bb94:	rex.RXB
   14001bb95:	gs je  0x14001bbdc
   14001bb98:	gs data16 (bad) 
   14001bb9b:	jne    0x14001bc09
   14001bb9d:	je     0x14001bbe9
   14001bb9f:	(bad)  
   14001bba0:	jbe    0x14001bc03
   14001bba2:	push   rsi
   14001bba3:	rex.WRB
   14001bba4:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001bba6:	imul   esi,DWORD PTR [rcx+rax*2+0x72],0x7367
   14001bbae:	add    BYTE PTR [rax],al
   14001bbb0:	rex.WX
   14001bbb1:	rex.WRX
   14001bbb2:	rex.WB pop r15
   14001bbb4:	rex.XB jb 0x14001bc1c
   14001bbb7:	(bad)  
   14001bbb8:	je     0x14001bc1f
   14001bbba:	rex.WX (bad) 
   14001bbbc:	jbe    0x14001bc1f
   14001bbbe:	push   rsi
   14001bbbf:	rex.WRB add BYTE PTR [r8],r8b
   14001bbc2:	add    BYTE PTR [rax],al
   14001bbc4:	add    BYTE PTR [rax],al
   14001bbc6:	add    BYTE PTR [rax],al
   14001bbc8:	rex.WX push rsi
   14001bbca:	rex.WRB and BYTE PTR [r8+0x61],r14b
   14001bbce:	je     0x14001bc38
   14001bbd0:	and    BYTE PTR [rcx+0x73],ch
   14001bbd3:	and    BYTE PTR [rip+0x70000a73],ah        # 0x1b001c64c
   14001bbd9:	jb     0x14001bc40
   14001bbdb:	ins    BYTE PTR es:[rdi],dx
   14001bbdc:	outs   dx,DWORD PTR ds:[rsi]
   14001bbdd:	(bad)  
   14001bbde:	fs push rbx
   14001bbe0:	je     0x14001bc51
   14001bbe2:	jo     0x14001bbe4
   14001bbe4:	add    BYTE PTR [rax],al
   14001bbe6:	add    BYTE PTR [rax],al
   14001bbe8:	pop    rsp
   14001bbe9:	(bad)  
   14001bbea:	imul   ebp,DWORD PTR [rsi+0x5c],0x2e747761
   14001bbf1:	fs ins BYTE PTR es:[rdi],dx
   14001bbf3:	ins    BYTE PTR es:[rdi],dx
   14001bbf4:	add    BYTE PTR [rax],al
   14001bbf6:	add    BYTE PTR [rax],al
   14001bbf8:	pop    rsp
   14001bbf9:	(bad)  
   14001bbfa:	imul   ebp,DWORD PTR [rsi+0x5c],0x6176616a
   14001bc01:	cs fs ins BYTE PTR es:[rdi],dx
   14001bc04:	ins    BYTE PTR es:[rdi],dx
   14001bc05:	add    BYTE PTR [rax],al
   14001bc07:	add    BYTE PTR [rdx+riz*2+0x69],bl
   14001bc0b:	outs   dx,BYTE PTR ds:[rsi]
   14001bc0c:	pop    rsp
   14001bc0d:	jbe    0x14001bc74
   14001bc0f:	jb     0x14001bc7a
   14001bc11:	data16 jns 0x14001bc42
   14001bc14:	fs ins BYTE PTR es:[rdi],dx
   14001bc16:	ins    BYTE PTR es:[rdi],dx
   14001bc17:	add    BYTE PTR [rax+0x72],dh
   14001bc1a:	gs ins BYTE PTR es:[rdi],dx
   14001bc1c:	outs   dx,DWORD PTR ds:[rsi]
   14001bc1d:	(bad)  
   14001bc1e:	xor    r8d,DWORD PTR fs:[rax+rax*1+0x0]
   14001bc24:	add    BYTE PTR [rax],al
   14001bc26:	add    BYTE PTR [rax],al
   14001bc28:	rex.WX xor al,BYTE PTR [rdi+r11*2+0x44]
   14001bc2d:	xor    eax,DWORD PTR [rdi+rbx*2+0x50]
   14001bc31:	push   rdx
   14001bc32:	rex.RB
   14001bc33:	rex.WR
   14001bc34:	rex.WRXB
   14001bc35:	rex.B
   14001bc36:	add    BYTE PTR [rdx+0x32],r9b
   14001bc3a:	rex.R pop rdi
   14001bc3c:	xor    r8d,DWORD PTR [rax+rax*1+0x4a]
   14001bc41:	push   r10
   14001bc43:	add    BYTE PTR [rdx+0x61],ch
   14001bc46:	jb     0x14001bc48
   14001bc48:	rex.RB js 0x14001bcbb
   14001bc4b:	(bad)  
   14001bc4c:	outs   dx,BYTE PTR ds:[rsi]
   14001bc4d:	fs gs and BYTE PTR fs:[rdi+0x69],dh
   14001bc53:	ins    BYTE PTR es:[rdi],dx
   14001bc54:	movsxd esp,DWORD PTR fs:[rcx+0x72]
   14001bc58:	fs jae 0x14001bc95
   14001bc5b:	or     ah,BYTE PTR [rax]
   14001bc5d:	and    BYTE PTR [rax],ah
   14001bc5f:	and    BYTE PTR [rdx+0x65],ah
   14001bc62:	outs   dx,WORD PTR ds:[rsi]
   14001bc64:	jb     0x14001bccb
   14001bc66:	cmp    ah,BYTE PTR [rax]
   14001bc68:	and    ah,BYTE PTR [rip+0x200a2273]        # 0x1600bdee1
   14001bc6e:	and    BYTE PTR [rax],ah
   14001bc70:	and    BYTE PTR [rcx+0x66],ah
   14001bc73:	je     0x14001bcda
   14001bc75:	jb     0x14001bc97
   14001bc77:	cmp    ah,BYTE PTR [rax]
   14001bc79:	and    ah,BYTE PTR [rip+0xa2273]        # 0x1400bdef2
   14001bc7f:	add    BYTE PTR [rbx+0x70],dl
   14001bc82:	ins    BYTE PTR es:[rdi],dx
   14001bc83:	(bad)  
   14001bc84:	jae    0x14001bcee
   14001bc86:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001bc88:	(bad)  
   14001bc89:	fs rex.WRB
   14001bc8b:	gs ins DWORD PTR es:[rdi],dx
   14001bc8d:	outs   dx,DWORD PTR ds:[rsi]
   14001bc8e:	jb     0x14001bd09
	...
   14001bc98:	push   rbx
   14001bc99:	jo     0x14001bd07
   14001bc9b:	(bad)  
   14001bc9c:	jae    0x14001bd06
   14001bc9e:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001bca0:	(bad)  
   14001bca1:	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x0],0x6c705300
   14001bcab:	(bad)  
   14001bcac:	jae    0x14001bd16
   14001bcae:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001bcb0:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x0
   14001bcb8:	push   rbx
   14001bcb9:	jo     0x14001bd27
   14001bcbb:	(bad)  
   14001bcbc:	jae    0x14001bd26
   14001bcbe:	push   rbx
   14001bcbf:	gs je  0x14001bd08
   14001bcc2:	imul   ebp,DWORD PTR [rbp+riz*2+0x4a],0x614e7261
   14001bcca:	ins    DWORD PTR es:[rdi],dx
   14001bccb:	add    BYTE PTR gs:[rax],al
   14001bcce:	add    BYTE PTR [rax],al
   14001bcd0:	rex.WRB
   14001bcd1:	rex.RB push r12
   14001bcd3:	rex.B sub eax,0x2f464e49
   14001bcd9:	rex.WRB
   14001bcda:	rex.B
   14001bcdb:	rex.WRX
   14001bcdc:	rex.WB
   14001bcdd:	rex.RX
   14001bcde:	rex.RB push r11
   14001bce0:	push   rsp
   14001bce1:	cs rex.WRB
   14001bce3:	rex.RX add BYTE PTR [rax],r8b
   14001bce6:	add    BYTE PTR [rax],al
   14001bce8:	xor    DWORD PTR [rsi],ebp
   14001bcea:	xor    ch,BYTE PTR [rsi]
   14001bcec:	xor    eax,DWORD PTR [rax]
   14001bcee:	add    BYTE PTR [rax],al
   14001bcf0:	or     cl,BYTE PTR [rip+0x0]        # 0x14001bcf6
   14001bcf6:	add    BYTE PTR [rax],al
   14001bcf8:	push   rbx
   14001bcf9:	jo     0x14001bd67
   14001bcfb:	(bad)  
   14001bcfc:	jae    0x14001bd66
   14001bcfe:	jae    0x14001bd63
   14001bd00:	jb     0x14001bd67
   14001bd02:	outs   dx,BYTE PTR gs:[rsi]
   14001bd04:	sub    eax,0x67616d49
   14001bd09:	add    BYTE PTR gs:[rax],al
   14001bd0c:	add    BYTE PTR [rax],al
   14001bd0e:	add    BYTE PTR [rax],al
   14001bd10:	rex.WX push rdx
   14001bd12:	rex.RB sub eax,0x74736552
   14001bd18:	jb     0x14001bd83
   14001bd1a:	movsxd esi,DWORD PTR [rbp+rbp*1+0x53]
   14001bd1e:	gs (bad) 
   14001bd20:	jb     0x14001bd85
   14001bd22:	push   0x0
   14001bd27:	add    BYTE PTR [rdx+0x52],cl
   14001bd2a:	rex.RB sub eax,0x73726556
   14001bd30:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
   14001bd37:	add    BYTE PTR [rbp+0x61],cl
   14001bd3a:	imul   ebp,DWORD PTR [rsi+0x2d],0x73616c43
   14001bd41:	jae    0x14001bd43
   14001bd43:	add    BYTE PTR [rax],al
   14001bd45:	add    BYTE PTR [rax],al
   14001bd47:	add    BYTE PTR [rbp+0x61],cl
   14001bd4a:	outs   dx,BYTE PTR ds:[rsi]
   14001bd4b:	imul   esp,DWORD PTR [rsi+0x65],0x562d7473
   14001bd52:	gs jb  0x14001bdc8
   14001bd55:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
   14001bd5c:	xor    BYTE PTR [rax],al
   14001bd5e:	add    BYTE PTR [rax],al
   14001bd60:	cs sub eax,0x2620005f
   14001bd66:	sub    ebp,DWORD PTR [rdx]
	...
   14001bd70:	(bad)  
   14001bd71:	(bad)  
   14001bd72:	add    BYTE PTR [rax],al
   14001bd74:	add    BYTE PTR [rax],cl
   14001bd76:	push   rax
   14001bd77:	add    BYTE PTR [rax],al
   14001bd79:	or     BYTE PTR [rax],dl
   14001bd7b:	add    BYTE PTR [rax+rcx*1],dl
   14001bd7e:	jae    0x14001bd80
   14001bd80:	adc    al,BYTE PTR [rdi]
   14001bd82:	(bad)  
   14001bd83:	add    BYTE PTR [rax],al
   14001bd85:	or     BYTE PTR [rax+0x0],dh
   14001bd88:	add    BYTE PTR [rax],cl
   14001bd8a:	xor    BYTE PTR [rax],al
   14001bd8c:	add    BYTE PTR [rcx],cl
   14001bd8e:	rol    BYTE PTR [rax],0x10
   14001bd91:	(bad)  
   14001bd92:	or     al,BYTE PTR [rax]
   14001bd94:	add    BYTE PTR [rax],cl
   14001bd96:	(bad)  
   14001bd97:	add    BYTE PTR [rax],al
   14001bd99:	or     BYTE PTR [rax],ah
   14001bd9b:	add    BYTE PTR [rax],al
   14001bd9d:	or     DWORD PTR [rax+0x80000],esp
   14001bda3:	add    BYTE PTR [rax],al
   14001bda5:	or     BYTE PTR [rax+0x40080000],al
   14001bdab:	add    BYTE PTR [rax],al
   14001bdad:	or     eax,esp
   14001bdaf:	add    BYTE PTR [rax],dl
   14001bdb1:	(bad)  
   14001bdb2:	(bad)  
   14001bdb3:	add    BYTE PTR [rax],al
   14001bdb5:	or     BYTE PTR [rax+0x0],bl
   14001bdb8:	add    BYTE PTR [rax],cl
   14001bdba:	sbb    BYTE PTR [rax],al
   14001bdbc:	add    BYTE PTR [rcx],cl
   14001bdbe:	nop
   14001bdbf:	add    BYTE PTR [rbx],dl
   14001bdc1:	(bad)  
   14001bdc2:	cmp    eax,DWORD PTR [rax]
   14001bdc4:	add    BYTE PTR [rax],cl
   14001bdc6:	js     0x14001bdc8
   14001bdc8:	add    BYTE PTR [rax],cl
   14001bdca:	cmp    BYTE PTR [rax],al
   14001bdcc:	add    BYTE PTR [rcx],cl
   14001bdce:	rol    BYTE PTR [rax],1
   14001bdd0:	adc    DWORD PTR [rdi],eax
   14001bdd2:	adc    DWORD PTR [rax],eax
   14001bdd4:	add    BYTE PTR [rax],cl
   14001bdd6:	push   0x28080000
   14001bddb:	add    BYTE PTR [rax],al
   14001bddd:	or     DWORD PTR [rax+0x8080000],esi
   14001bde3:	add    BYTE PTR [rax],al
   14001bde5:	or     BYTE PTR [rax+0x48080000],cl
   14001bdeb:	add    BYTE PTR [rax],al
   14001bded:	or     eax,esi
   14001bdef:	add    BYTE PTR [rax],dl
   14001bdf1:	(bad)  
   14001bdf2:	add    al,0x0
   14001bdf4:	add    BYTE PTR [rax],cl
   14001bdf6:	push   rsp
   14001bdf7:	add    BYTE PTR [rax],al
   14001bdf9:	or     BYTE PTR [rax+rax*1],dl
   14001bdfc:	adc    eax,0x1300e308
   14001be01:	(bad)  
   14001be02:	sub    eax,DWORD PTR [rax]
   14001be04:	add    BYTE PTR [rax],cl
   14001be06:	je     0x14001be08
   14001be08:	add    BYTE PTR [rax],cl
   14001be0a:	xor    al,0x0
   14001be0c:	add    BYTE PTR [rcx],cl
   14001be0e:	enter  0x1100,0x7
   14001be12:	or     eax,0x64080000
   14001be17:	add    BYTE PTR [rax],al
   14001be19:	or     BYTE PTR [rax+rax*1],ah
   14001be1c:	add    BYTE PTR [rcx],cl
   14001be1e:	test   al,0x0
   14001be20:	add    BYTE PTR [rax],cl
   14001be22:	add    al,0x0
   14001be24:	add    BYTE PTR [rax],cl
   14001be26:	test   BYTE PTR [rax],al
   14001be28:	add    BYTE PTR [rax],cl
   14001be2a:	add    BYTE PTR [rax],r8b
   14001be2d:	or     eax,ebp
   14001be2f:	add    BYTE PTR [rax],dl
   14001be31:	(bad)  
   14001be32:	or     BYTE PTR [rax],al
   14001be34:	add    BYTE PTR [rax],cl
   14001be36:	pop    rsp
   14001be37:	add    BYTE PTR [rax],al
   14001be39:	or     BYTE PTR [rax+rax*1],bl
   14001be3c:	add    BYTE PTR [rcx],cl
   14001be3e:	cwde   
   14001be3f:	add    BYTE PTR [rdi+rax*1],dl
   14001be42:	push   rbx
   14001be43:	add    BYTE PTR [rax],al
   14001be45:	or     BYTE PTR [rax+rax*1+0x0],bh
   14001be49:	or     BYTE PTR [rax+rax*1],bh
   14001be4c:	add    BYTE PTR [rcx],cl
   14001be4e:	fadd   DWORD PTR [rax]
   14001be50:	adc    al,BYTE PTR [rdi]
   14001be52:	(bad)  
   14001be53:	add    BYTE PTR [rax],al
   14001be55:	or     BYTE PTR [rax+rax*1+0x0],ch
   14001be59:	or     BYTE PTR [rax+rax*1],ch
   14001be5c:	add    BYTE PTR [rcx],cl
   14001be5e:	mov    eax,0xc080000
   14001be63:	add    BYTE PTR [rax],al
   14001be65:	or     BYTE PTR [rax+rax*1+0x4c0800],cl
   14001be6c:	add    BYTE PTR [rcx],cl
   14001be6e:	clc    
   14001be6f:	add    BYTE PTR [rax],dl
   14001be71:	(bad)  
   14001be72:	add    eax,DWORD PTR [rax]
   14001be74:	add    BYTE PTR [rax],cl
   14001be76:	push   rdx
   14001be77:	add    BYTE PTR [rax],al
   14001be79:	or     BYTE PTR [rdx],dl
   14001be7b:	add    BYTE PTR [rip+0x1300a308],dl        # 0x153026189
   14001be81:	(bad)  
   14001be82:	and    eax,DWORD PTR [rax]
   14001be84:	add    BYTE PTR [rax],cl
   14001be86:	jb     0x14001be88
   14001be88:	add    BYTE PTR [rax],cl
   14001be8a:	xor    al,BYTE PTR [rax]
   14001be8c:	add    BYTE PTR [rcx],cl
   14001be8e:	(bad)  
   14001be8f:	add    BYTE PTR [rcx],dl
   14001be91:	(bad)  
   14001be92:	or     eax,DWORD PTR [rax]
   14001be94:	add    BYTE PTR [rax],cl
   14001be96:	(bad)  
   14001be97:	add    BYTE PTR [rax],al
   14001be99:	or     BYTE PTR [rdx],ah
   14001be9b:	add    BYTE PTR [rax],al
   14001be9d:	or     DWORD PTR [rax+rax*1+0x20800],esp
   14001bea4:	add    BYTE PTR [rax],cl
   14001bea6:	(bad)  
   14001bea7:	add    BYTE PTR [rax],al
   14001bea9:	or     BYTE PTR [rdx+0x0],al
   14001beac:	add    BYTE PTR [rcx],cl
   14001beae:	in     al,0x0
   14001beb0:	adc    BYTE PTR [rdi],al
   14001beb2:	(bad)  
   14001beb3:	add    BYTE PTR [rax],al
   14001beb5:	or     BYTE PTR [rdx+0x0],bl
   14001beb8:	add    BYTE PTR [rax],cl
   14001beba:	sbb    al,BYTE PTR [rax]
   14001bebc:	add    BYTE PTR [rcx],cl
   14001bebe:	xchg   esp,eax
   14001bebf:	add    BYTE PTR [rdi+rax*1],dl
   14001bec2:	rex.XB add BYTE PTR [r8],al
   14001bec5:	or     BYTE PTR [rdx+0x0],bh
   14001bec8:	add    BYTE PTR [rax],cl
   14001beca:	cmp    al,BYTE PTR [rax]
   14001becc:	add    BYTE PTR [rcx],cl
   14001bece:	(bad)  
   14001becf:	add    BYTE PTR [rdx],dl
   14001bed1:	(bad)  
   14001bed2:	adc    eax,DWORD PTR [rax]
   14001bed4:	add    BYTE PTR [rax],cl
   14001bed6:	push   0x0
   14001bed8:	add    BYTE PTR [rax],cl
   14001beda:	sub    al,BYTE PTR [rax]
   14001bedc:	add    BYTE PTR [rcx],cl
   14001bede:	mov    ah,0x0
   14001bee0:	add    BYTE PTR [rax],cl
   14001bee2:	or     al,BYTE PTR [rax]
   14001bee4:	add    BYTE PTR [rax],cl
   14001bee6:	mov    al,BYTE PTR [rax]
   14001bee8:	add    BYTE PTR [rax],cl
   14001beea:	rex.WX add BYTE PTR [rax],al
   14001beed:	or     esp,esi
   14001beef:	add    BYTE PTR [rax],dl
   14001bef1:	(bad)  
   14001bef2:	add    eax,0x56080000
   14001bef7:	add    BYTE PTR [rax],al
   14001bef9:	or     BYTE PTR [rsi],dl
   14001befb:	add    BYTE PTR [rax+0x8],al
   14001befe:	add    BYTE PTR [rax],al
   14001bf00:	adc    eax,DWORD PTR [rdi]
   14001bf02:	xor    eax,DWORD PTR [rax]
   14001bf04:	add    BYTE PTR [rax],cl
   14001bf06:	jbe    0x14001bf08
   14001bf08:	add    BYTE PTR [rax],cl
   14001bf0a:	add    BYTE PTR ss:[rax],al
   14001bf0d:	or     esp,ecx
   14001bf0f:	add    BYTE PTR [rcx],dl
   14001bf11:	(bad)  
   14001bf12:	sldt   WORD PTR [rax]
   14001bf15:	or     BYTE PTR [rsi+0x0],ah
   14001bf18:	add    BYTE PTR [rax],cl
   14001bf1a:	add    BYTE PTR es:[rax],al
   14001bf1d:	or     DWORD PTR [rax+rax*1+0x60800],ebp
   14001bf24:	add    BYTE PTR [rax],cl
   14001bf26:	xchg   BYTE PTR [rax],al
   14001bf28:	add    BYTE PTR [rax],cl
   14001bf2a:	rex.RX add BYTE PTR [rax],r8b
   14001bf2d:	or     esp,ebp
   14001bf2f:	add    BYTE PTR [rax],dl
   14001bf31:	(bad)  
   14001bf32:	or     DWORD PTR [rax],eax
   14001bf34:	add    BYTE PTR [rax],cl
   14001bf36:	pop    rsi
   14001bf37:	add    BYTE PTR [rax],al
   14001bf39:	or     BYTE PTR [rsi],bl
   14001bf3b:	add    BYTE PTR [rax],al
   14001bf3d:	or     DWORD PTR [rax+rax*1+0x630714],ebx
   14001bf44:	add    BYTE PTR [rax],cl
   14001bf46:	jle    0x14001bf48
   14001bf48:	add    BYTE PTR [rax],cl
   14001bf4a:	add    BYTE PTR ds:[rax],al
   14001bf4d:	or     esp,ebx
   14001bf4f:	add    BYTE PTR [rdx],dl
   14001bf51:	(bad)  
   14001bf52:	sbb    eax,DWORD PTR [rax]
   14001bf54:	add    BYTE PTR [rax],cl
   14001bf56:	outs   dx,BYTE PTR ds:[rsi]
   14001bf57:	add    BYTE PTR [rax],al
   14001bf59:	or     BYTE PTR [rsi],ch
   14001bf5b:	add    BYTE PTR [rax],al
   14001bf5d:	or     DWORD PTR [rax+rax*1+0xe0800],edi
   14001bf64:	add    BYTE PTR [rax],cl
   14001bf66:	mov    es,WORD PTR [rax]
   14001bf68:	add    BYTE PTR [rax],cl
   14001bf6a:	rex.WRX add BYTE PTR [rax],r8b
   14001bf6d:	or     esp,edi
   14001bf6f:	add    BYTE PTR [rax+0x7],ah
   14001bf72:	add    BYTE PTR [rax],al
   14001bf74:	add    BYTE PTR [rax],cl
   14001bf76:	push   rcx
   14001bf77:	add    BYTE PTR [rax],al
   14001bf79:	or     BYTE PTR [rcx],dl
   14001bf7b:	add    BYTE PTR [rip+0x12008308],dl        # 0x152024289
   14001bf81:	(bad)  
   14001bf82:	(bad)  
   14001bf83:	add    BYTE PTR [rax],al
   14001bf85:	or     BYTE PTR [rcx+0x0],dh
   14001bf88:	add    BYTE PTR [rax],cl
   14001bf8a:	xor    DWORD PTR [rax],eax
   14001bf8c:	add    BYTE PTR [rcx],cl
   14001bf8e:	ret    0x1000
   14001bf91:	(bad)  
   14001bf92:	or     al,BYTE PTR [rax]
   14001bf94:	add    BYTE PTR [rax],cl
   14001bf96:	(bad)  
   14001bf97:	add    BYTE PTR [rax],al
   14001bf99:	or     BYTE PTR [rcx],ah
   14001bf9b:	add    BYTE PTR [rax],al
   14001bf9d:	or     DWORD PTR [rdx+0x1080000],esp
   14001bfa3:	add    BYTE PTR [rax],al
   14001bfa5:	or     BYTE PTR [rcx+0x41080000],al
   14001bfab:	add    BYTE PTR [rax],al
   14001bfad:	or     edx,esp
   14001bfaf:	add    BYTE PTR [rax],dl
   14001bfb1:	(bad)  
   14001bfb2:	(bad)  
   14001bfb3:	add    BYTE PTR [rax],al
   14001bfb5:	or     BYTE PTR [rcx+0x0],bl
   14001bfb8:	add    BYTE PTR [rax],cl
   14001bfba:	sbb    DWORD PTR [rax],eax
   14001bfbc:	add    BYTE PTR [rcx],cl
   14001bfbe:	xchg   edx,eax
   14001bfbf:	add    BYTE PTR [rbx],dl
   14001bfc1:	(bad)  
   14001bfc2:	cmp    eax,DWORD PTR [rax]
   14001bfc4:	add    BYTE PTR [rax],cl
   14001bfc6:	jns    0x14001bfc8
   14001bfc8:	add    BYTE PTR [rax],cl
   14001bfca:	cmp    DWORD PTR [rax],eax
   14001bfcc:	add    BYTE PTR [rcx],cl
   14001bfce:	rol    BYTE PTR [rax],cl
   14001bfd0:	adc    DWORD PTR [rdi],eax
   14001bfd2:	adc    DWORD PTR [rax],eax
   14001bfd4:	add    BYTE PTR [rax],cl
   14001bfd6:	imul   eax,DWORD PTR [rax],0x290800
   14001bfdc:	add    BYTE PTR [rcx],cl
   14001bfde:	mov    dl,0x0
   14001bfe0:	add    BYTE PTR [rax],cl
   14001bfe2:	or     DWORD PTR [rax],eax
   14001bfe4:	add    BYTE PTR [rax],cl
   14001bfe6:	mov    DWORD PTR [rax],eax
   14001bfe8:	add    BYTE PTR [rax],cl
   14001bfea:	rex.WB add BYTE PTR [r8],al
   14001bfed:	or     edx,esi
   14001bfef:	add    BYTE PTR [rax],dl
   14001bff1:	(bad)  
   14001bff2:	add    al,0x0
   14001bff4:	add    BYTE PTR [rax],cl
   14001bff6:	push   rbp
   14001bff7:	add    BYTE PTR [rax],al
   14001bff9:	or     BYTE PTR [rip+0x2081000],dl        # 0x14209cfff
   14001bfff:	add    DWORD PTR [rbx],edx
   14001c001:	(bad)  
   14001c002:	sub    eax,DWORD PTR [rax]
   14001c004:	add    BYTE PTR [rax],cl
   14001c006:	jne    0x14001c008
   14001c008:	add    BYTE PTR [rax],cl
   14001c00a:	xor    eax,0xca090000
   14001c00f:	add    BYTE PTR [rcx],dl
   14001c011:	(bad)  
   14001c012:	or     eax,0x65080000
   14001c017:	add    BYTE PTR [rax],al
   14001c019:	or     BYTE PTR [rip+0xffffffffaa090000],ah        # 0xea0ac01f
   14001c01f:	add    BYTE PTR [rax],al
   14001c021:	or     BYTE PTR [rip+0xffffffff85080000],al        # 0xc509c027
   14001c027:	add    BYTE PTR [rax],al
   14001c029:	or     BYTE PTR [rbp+0x0],al
   14001c02c:	add    BYTE PTR [rcx],cl
   14001c02e:	(bad)  
   14001c02f:	add    BYTE PTR [rax],dl
   14001c031:	(bad)  
   14001c032:	or     BYTE PTR [rax],al
   14001c034:	add    BYTE PTR [rax],cl
   14001c036:	pop    rbp
   14001c037:	add    BYTE PTR [rax],al
   14001c039:	or     BYTE PTR [rip+0xffffffff9a090000],bl        # 0xda0ac03f
   14001c03f:	add    BYTE PTR [rdi+rax*1],dl
   14001c042:	push   rbx
   14001c043:	add    BYTE PTR [rax],al
   14001c045:	or     BYTE PTR [rbp+0x0],bh
   14001c048:	add    BYTE PTR [rax],cl
   14001c04a:	cmp    eax,0xda090000
   14001c04f:	add    BYTE PTR [rdx],dl
   14001c051:	(bad)  
   14001c052:	(bad)  
   14001c053:	add    BYTE PTR [rax],al
   14001c055:	or     BYTE PTR [rbp+0x0],ch
   14001c058:	add    BYTE PTR [rax],cl
   14001c05a:	sub    eax,0xba090000
   14001c05f:	add    BYTE PTR [rax],al
   14001c061:	or     BYTE PTR [rip+0xffffffff8d080000],cl        # 0xcd09c067
   14001c067:	add    BYTE PTR [rax],al
   14001c069:	or     BYTE PTR [rbp+0x0],cl
   14001c06c:	add    BYTE PTR [rcx],cl
   14001c06e:	cli    
   14001c06f:	add    BYTE PTR [rax],dl
   14001c071:	(bad)  
   14001c072:	add    eax,DWORD PTR [rax]
   14001c074:	add    BYTE PTR [rax],cl
   14001c076:	push   rbx
   14001c077:	add    BYTE PTR [rax],al
   14001c079:	or     BYTE PTR [rbx],dl
   14001c07b:	add    BYTE PTR [rip+0x1300c308],dl        # 0x153028389
   14001c081:	(bad)  
   14001c082:	and    eax,DWORD PTR [rax]
   14001c084:	add    BYTE PTR [rax],cl
   14001c086:	jae    0x14001c088
   14001c088:	add    BYTE PTR [rax],cl
   14001c08a:	xor    eax,DWORD PTR [rax]
   14001c08c:	add    BYTE PTR [rcx],cl
   14001c08e:	mov    BYTE PTR [rax],0x11
   14001c091:	(bad)  
   14001c092:	or     eax,DWORD PTR [rax]
   14001c094:	add    BYTE PTR [rax],cl
   14001c096:	movsxd eax,DWORD PTR [rax]
   14001c098:	add    BYTE PTR [rax],cl
   14001c09a:	and    eax,DWORD PTR [rax]
   14001c09c:	add    BYTE PTR [rcx],cl
   14001c09e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001c09f:	add    BYTE PTR [rax],al
   14001c0a1:	or     BYTE PTR [rbx],al
   14001c0a3:	add    BYTE PTR [rax],al
   14001c0a5:	or     BYTE PTR [rbx+0x43080000],al
   14001c0ab:	add    BYTE PTR [rax],al
   14001c0ad:	or     esi,esp
   14001c0af:	add    BYTE PTR [rax],dl
   14001c0b1:	(bad)  
   14001c0b2:	(bad)  
   14001c0b3:	add    BYTE PTR [rax],al
   14001c0b5:	or     BYTE PTR [rbx+0x0],bl
   14001c0b8:	add    BYTE PTR [rax],cl
   14001c0ba:	sbb    eax,DWORD PTR [rax]
   14001c0bc:	add    BYTE PTR [rcx],cl
   14001c0be:	xchg   esi,eax
   14001c0bf:	add    BYTE PTR [rdi+rax*1],dl
   14001c0c2:	rex.XB add BYTE PTR [r8],al
   14001c0c5:	or     BYTE PTR [rbx+0x0],bh
   14001c0c8:	add    BYTE PTR [rax],cl
   14001c0ca:	cmp    eax,DWORD PTR [rax]
   14001c0cc:	add    BYTE PTR [rcx],cl
   14001c0ce:	(bad)  
   14001c0cf:	add    BYTE PTR [rdx],dl
   14001c0d1:	(bad)  
   14001c0d2:	adc    eax,DWORD PTR [rax]
   14001c0d4:	add    BYTE PTR [rax],cl
   14001c0d6:	imul   eax,DWORD PTR [rax],0x0
   14001c0d9:	or     BYTE PTR [rbx],ch
   14001c0db:	add    BYTE PTR [rax],al
   14001c0dd:	or     DWORD PTR [rsi+0xb080000],esi
   14001c0e3:	add    BYTE PTR [rax],al
   14001c0e5:	or     BYTE PTR [rbx+0x4b080000],cl
   14001c0eb:	add    BYTE PTR [rax],al
   14001c0ed:	or     esi,esi
   14001c0ef:	add    BYTE PTR [rax],dl
   14001c0f1:	(bad)  
   14001c0f2:	add    eax,0x57080000
   14001c0f7:	add    BYTE PTR [rax],al
   14001c0f9:	or     BYTE PTR [rdi],dl
   14001c0fb:	add    BYTE PTR [rax+0x8],al
   14001c0fe:	add    BYTE PTR [rax],al
   14001c100:	adc    eax,DWORD PTR [rdi]
   14001c102:	xor    eax,DWORD PTR [rax]
   14001c104:	add    BYTE PTR [rax],cl
   14001c106:	ja     0x14001c108
   14001c108:	add    BYTE PTR [rax],cl
   14001c10a:	(bad)  
   14001c10b:	add    BYTE PTR [rax],al
   14001c10d:	or     esi,ecx
   14001c10f:	add    BYTE PTR [rcx],dl
   14001c111:	(bad)  
   14001c112:	sldt   WORD PTR [rax]
   14001c115:	or     BYTE PTR [rdi+0x0],ah
   14001c118:	add    BYTE PTR [rax],cl
   14001c11a:	(bad)  
   14001c11b:	add    BYTE PTR [rax],al
   14001c11d:	or     DWORD PTR [rsi+0x7080000],ebp
   14001c123:	add    BYTE PTR [rax],al
   14001c125:	or     BYTE PTR [rdi+0x47080000],al
   14001c12b:	add    BYTE PTR [rax],al
   14001c12d:	or     esi,ebp
   14001c12f:	add    BYTE PTR [rax],dl
   14001c131:	(bad)  
   14001c132:	or     DWORD PTR [rax],eax
   14001c134:	add    BYTE PTR [rax],cl
   14001c136:	pop    rdi
   14001c137:	add    BYTE PTR [rax],al
   14001c139:	or     BYTE PTR [rdi],bl
   14001c13b:	add    BYTE PTR [rax],al
   14001c13d:	or     DWORD PTR [rsi+0x63071400],ebx
   14001c143:	add    BYTE PTR [rax],al
   14001c145:	or     BYTE PTR [rdi+0x0],bh
   14001c148:	add    BYTE PTR [rax],cl
   14001c14a:	(bad)  
   14001c14b:	add    BYTE PTR [rax],al
   14001c14d:	or     esi,ebx
   14001c14f:	add    BYTE PTR [rdx],dl
   14001c151:	(bad)  
   14001c152:	sbb    eax,DWORD PTR [rax]
   14001c154:	add    BYTE PTR [rax],cl
   14001c156:	outs   dx,DWORD PTR ds:[rsi]
   14001c157:	add    BYTE PTR [rax],al
   14001c159:	or     BYTE PTR [rdi],ch
   14001c15b:	add    BYTE PTR [rax],al
   14001c15d:	or     DWORD PTR [rsi+0xf080000],edi
   14001c163:	add    BYTE PTR [rax],al
   14001c165:	or     BYTE PTR [rdi+0x4f080000],cl
   14001c16b:	add    BYTE PTR [rax],al
   14001c16d:	or     esi,edi
   14001c16f:	add    BYTE PTR [rax+0x7],ah
   14001c172:	add    BYTE PTR [rax],al
   14001c174:	add    BYTE PTR [rax],cl
   14001c176:	push   rax
   14001c177:	add    BYTE PTR [rax],al
   14001c179:	or     BYTE PTR [rax],dl
   14001c17b:	add    BYTE PTR [rax+rcx*1],dl
   14001c17e:	jae    0x14001c180
   14001c180:	adc    al,BYTE PTR [rdi]
   14001c182:	(bad)  
   14001c183:	add    BYTE PTR [rax],al
   14001c185:	or     BYTE PTR [rax+0x0],dh
   14001c188:	add    BYTE PTR [rax],cl
   14001c18a:	xor    BYTE PTR [rax],al
   14001c18c:	add    BYTE PTR [rcx],cl
   14001c18e:	rol    DWORD PTR [rax],0x10
   14001c191:	(bad)  
   14001c192:	or     al,BYTE PTR [rax]
   14001c194:	add    BYTE PTR [rax],cl
   14001c196:	(bad)  
   14001c197:	add    BYTE PTR [rax],al
   14001c199:	or     BYTE PTR [rax],ah
   14001c19b:	add    BYTE PTR [rax],al
   14001c19d:	or     DWORD PTR [rcx+0x80000],esp
   14001c1a3:	add    BYTE PTR [rax],al
   14001c1a5:	or     BYTE PTR [rax+0x40080000],al
   14001c1ab:	add    BYTE PTR [rax],al
   14001c1ad:	or     ecx,esp
   14001c1af:	add    BYTE PTR [rax],dl
   14001c1b1:	(bad)  
   14001c1b2:	(bad)  
   14001c1b3:	add    BYTE PTR [rax],al
   14001c1b5:	or     BYTE PTR [rax+0x0],bl
   14001c1b8:	add    BYTE PTR [rax],cl
   14001c1ba:	sbb    BYTE PTR [rax],al
   14001c1bc:	add    BYTE PTR [rcx],cl
   14001c1be:	xchg   ecx,eax
   14001c1bf:	add    BYTE PTR [rbx],dl
   14001c1c1:	(bad)  
   14001c1c2:	cmp    eax,DWORD PTR [rax]
   14001c1c4:	add    BYTE PTR [rax],cl
   14001c1c6:	js     0x14001c1c8
   14001c1c8:	add    BYTE PTR [rax],cl
   14001c1ca:	cmp    BYTE PTR [rax],al
   14001c1cc:	add    BYTE PTR [rcx],cl
   14001c1ce:	rol    DWORD PTR [rax],1
   14001c1d0:	adc    DWORD PTR [rdi],eax
   14001c1d2:	adc    DWORD PTR [rax],eax
   14001c1d4:	add    BYTE PTR [rax],cl
   14001c1d6:	push   0x28080000
   14001c1db:	add    BYTE PTR [rax],al
   14001c1dd:	or     DWORD PTR [rcx+0x8080000],esi
   14001c1e3:	add    BYTE PTR [rax],al
   14001c1e5:	or     BYTE PTR [rax+0x48080000],cl
   14001c1eb:	add    BYTE PTR [rax],al
   14001c1ed:	or     ecx,esi
   14001c1ef:	add    BYTE PTR [rax],dl
   14001c1f1:	(bad)  
   14001c1f2:	add    al,0x0
   14001c1f4:	add    BYTE PTR [rax],cl
   14001c1f6:	push   rsp
   14001c1f7:	add    BYTE PTR [rax],al
   14001c1f9:	or     BYTE PTR [rax+rax*1],dl
   14001c1fc:	adc    eax,0x1300e308
   14001c201:	(bad)  
   14001c202:	sub    eax,DWORD PTR [rax]
   14001c204:	add    BYTE PTR [rax],cl
   14001c206:	je     0x14001c208
   14001c208:	add    BYTE PTR [rax],cl
   14001c20a:	xor    al,0x0
   14001c20c:	add    BYTE PTR [rcx],cl
   14001c20e:	leave  
   14001c20f:	add    BYTE PTR [rcx],dl
   14001c211:	(bad)  
   14001c212:	or     eax,0x64080000
   14001c217:	add    BYTE PTR [rax],al
   14001c219:	or     BYTE PTR [rax+rax*1],ah
   14001c21c:	add    BYTE PTR [rcx],cl
   14001c21e:	test   eax,0x4080000
   14001c223:	add    BYTE PTR [rax],al
   14001c225:	or     BYTE PTR [rax+rax*1+0x440800],al
   14001c22c:	add    BYTE PTR [rcx],cl
   14001c22e:	jmp    0x14808d233
   14001c233:	add    BYTE PTR [rax],al
   14001c235:	or     BYTE PTR [rax+rax*1+0x0],bl
   14001c239:	or     BYTE PTR [rax+rax*1],bl
   14001c23c:	add    BYTE PTR [rcx],cl
   14001c23e:	cdq    
   14001c23f:	add    BYTE PTR [rdi+rax*1],dl
   14001c242:	push   rbx
   14001c243:	add    BYTE PTR [rax],al
   14001c245:	or     BYTE PTR [rax+rax*1+0x0],bh
   14001c249:	or     BYTE PTR [rax+rax*1],bh
   14001c24c:	add    BYTE PTR [rcx],cl
   14001c24e:	fld    DWORD PTR [rax]
   14001c250:	adc    al,BYTE PTR [rdi]
   14001c252:	(bad)  
   14001c253:	add    BYTE PTR [rax],al
   14001c255:	or     BYTE PTR [rax+rax*1+0x0],ch
   14001c259:	or     BYTE PTR [rax+rax*1],ch
   14001c25c:	add    BYTE PTR [rcx],cl
   14001c25e:	mov    ecx,0xc080000
   14001c263:	add    BYTE PTR [rax],al
   14001c265:	or     BYTE PTR [rax+rax*1+0x4c0800],cl
   14001c26c:	add    BYTE PTR [rcx],cl
   14001c26e:	stc    
   14001c26f:	add    BYTE PTR [rax],dl
   14001c271:	(bad)  
   14001c272:	add    eax,DWORD PTR [rax]
   14001c274:	add    BYTE PTR [rax],cl
   14001c276:	push   rdx
   14001c277:	add    BYTE PTR [rax],al
   14001c279:	or     BYTE PTR [rdx],dl
   14001c27b:	add    BYTE PTR [rip+0x1300a308],dl        # 0x153026589
   14001c281:	(bad)  
   14001c282:	and    eax,DWORD PTR [rax]
   14001c284:	add    BYTE PTR [rax],cl
   14001c286:	jb     0x14001c288
   14001c288:	add    BYTE PTR [rax],cl
   14001c28a:	xor    al,BYTE PTR [rax]
   14001c28c:	add    BYTE PTR [rcx],cl
   14001c28e:	(bad)
   14001c291:	(bad)  
   14001c292:	or     eax,DWORD PTR [rax]
   14001c294:	add    BYTE PTR [rax],cl
   14001c296:	(bad)  
   14001c297:	add    BYTE PTR [rax],al
   14001c299:	or     BYTE PTR [rdx],ah
   14001c29b:	add    BYTE PTR [rax],al
   14001c29d:	or     DWORD PTR [rbp+0x2080000],esp
   14001c2a3:	add    BYTE PTR [rax],al
   14001c2a5:	or     BYTE PTR [rdx+0x42080000],al
   14001c2ab:	add    BYTE PTR [rax],al
   14001c2ad:	or     ebp,esp
   14001c2af:	add    BYTE PTR [rax],dl
   14001c2b1:	(bad)  
   14001c2b2:	(bad)  
   14001c2b3:	add    BYTE PTR [rax],al
   14001c2b5:	or     BYTE PTR [rdx+0x0],bl
   14001c2b8:	add    BYTE PTR [rax],cl
   14001c2ba:	sbb    al,BYTE PTR [rax]
   14001c2bc:	add    BYTE PTR [rcx],cl
   14001c2be:	xchg   ebp,eax
   14001c2bf:	add    BYTE PTR [rdi+rax*1],dl
   14001c2c2:	rex.XB add BYTE PTR [r8],al
   14001c2c5:	or     BYTE PTR [rdx+0x0],bh
   14001c2c8:	add    BYTE PTR [rax],cl
   14001c2ca:	cmp    al,BYTE PTR [rax]
   14001c2cc:	add    BYTE PTR [rcx],cl
   14001c2ce:	(bad)  
   14001c2cf:	add    BYTE PTR [rdx],dl
   14001c2d1:	(bad)  
   14001c2d2:	adc    eax,DWORD PTR [rax]
   14001c2d4:	add    BYTE PTR [rax],cl
   14001c2d6:	push   0x0
   14001c2d8:	add    BYTE PTR [rax],cl
   14001c2da:	sub    al,BYTE PTR [rax]
   14001c2dc:	add    BYTE PTR [rcx],cl
   14001c2de:	mov    ch,0x0
   14001c2e0:	add    BYTE PTR [rax],cl
   14001c2e2:	or     al,BYTE PTR [rax]
   14001c2e4:	add    BYTE PTR [rax],cl
   14001c2e6:	mov    al,BYTE PTR [rax]
   14001c2e8:	add    BYTE PTR [rax],cl
   14001c2ea:	rex.WX add BYTE PTR [rax],al
   14001c2ed:	or     ebp,esi
   14001c2ef:	add    BYTE PTR [rax],dl
   14001c2f1:	(bad)  
   14001c2f2:	add    eax,0x56080000
   14001c2f7:	add    BYTE PTR [rax],al
   14001c2f9:	or     BYTE PTR [rsi],dl
   14001c2fb:	add    BYTE PTR [rax+0x8],al
   14001c2fe:	add    BYTE PTR [rax],al
   14001c300:	adc    eax,DWORD PTR [rdi]
   14001c302:	xor    eax,DWORD PTR [rax]
   14001c304:	add    BYTE PTR [rax],cl
   14001c306:	jbe    0x14001c308
   14001c308:	add    BYTE PTR [rax],cl
   14001c30a:	add    BYTE PTR ss:[rax],al
   14001c30d:	or     ebp,ecx
   14001c30f:	add    BYTE PTR [rcx],dl
   14001c311:	(bad)  
   14001c312:	sldt   WORD PTR [rax]
   14001c315:	or     BYTE PTR [rsi+0x0],ah
   14001c318:	add    BYTE PTR [rax],cl
   14001c31a:	add    BYTE PTR es:[rax],al
   14001c31d:	or     DWORD PTR [rbp+0x6080000],ebp
   14001c323:	add    BYTE PTR [rax],al
   14001c325:	or     BYTE PTR [rsi+0x46080000],al
   14001c32b:	add    BYTE PTR [rax],al
   14001c32d:	or     ebp,ebp
   14001c32f:	add    BYTE PTR [rax],dl
   14001c331:	(bad)  
   14001c332:	or     DWORD PTR [rax],eax
   14001c334:	add    BYTE PTR [rax],cl
   14001c336:	pop    rsi
   14001c337:	add    BYTE PTR [rax],al
   14001c339:	or     BYTE PTR [rsi],bl
   14001c33b:	add    BYTE PTR [rax],al
   14001c33d:	or     DWORD PTR [rbp+0x63071400],ebx
   14001c343:	add    BYTE PTR [rax],al
   14001c345:	or     BYTE PTR [rsi+0x0],bh
   14001c348:	add    BYTE PTR [rax],cl
   14001c34a:	add    BYTE PTR ds:[rax],al
   14001c34d:	or     ebp,ebx
   14001c34f:	add    BYTE PTR [rdx],dl
   14001c351:	(bad)  
   14001c352:	sbb    eax,DWORD PTR [rax]
   14001c354:	add    BYTE PTR [rax],cl
   14001c356:	outs   dx,BYTE PTR ds:[rsi]
   14001c357:	add    BYTE PTR [rax],al
   14001c359:	or     BYTE PTR [rsi],ch
   14001c35b:	add    BYTE PTR [rax],al
   14001c35d:	or     DWORD PTR [rbp+0xe080000],edi
   14001c363:	add    BYTE PTR [rax],al
   14001c365:	or     BYTE PTR [rsi+0x4e080000],cl
   14001c36b:	add    BYTE PTR [rax],al
   14001c36d:	or     ebp,edi
   14001c36f:	add    BYTE PTR [rax+0x7],ah
   14001c372:	add    BYTE PTR [rax],al
   14001c374:	add    BYTE PTR [rax],cl
   14001c376:	push   rcx
   14001c377:	add    BYTE PTR [rax],al
   14001c379:	or     BYTE PTR [rcx],dl
   14001c37b:	add    BYTE PTR [rip+0x12008308],dl        # 0x152024689
   14001c381:	(bad)  
   14001c382:	(bad)  
   14001c383:	add    BYTE PTR [rax],al
   14001c385:	or     BYTE PTR [rcx+0x0],dh
   14001c388:	add    BYTE PTR [rax],cl
   14001c38a:	xor    DWORD PTR [rax],eax
   14001c38c:	add    BYTE PTR [rcx],cl
   14001c38e:	ret    
   14001c38f:	add    BYTE PTR [rax],dl
   14001c391:	(bad)  
   14001c392:	or     al,BYTE PTR [rax]
   14001c394:	add    BYTE PTR [rax],cl
   14001c396:	(bad)  
   14001c397:	add    BYTE PTR [rax],al
   14001c399:	or     BYTE PTR [rcx],ah
   14001c39b:	add    BYTE PTR [rax],al
   14001c39d:	or     DWORD PTR [rbx+0x1080000],esp
   14001c3a3:	add    BYTE PTR [rax],al
   14001c3a5:	or     BYTE PTR [rcx+0x41080000],al
   14001c3ab:	add    BYTE PTR [rax],al
   14001c3ad:	or     ebx,esp
   14001c3af:	add    BYTE PTR [rax],dl
   14001c3b1:	(bad)  
   14001c3b2:	(bad)  
   14001c3b3:	add    BYTE PTR [rax],al
   14001c3b5:	or     BYTE PTR [rcx+0x0],bl
   14001c3b8:	add    BYTE PTR [rax],cl
   14001c3ba:	sbb    DWORD PTR [rax],eax
   14001c3bc:	add    BYTE PTR [rcx],cl
   14001c3be:	xchg   ebx,eax
   14001c3bf:	add    BYTE PTR [rbx],dl
   14001c3c1:	(bad)  
   14001c3c2:	cmp    eax,DWORD PTR [rax]
   14001c3c4:	add    BYTE PTR [rax],cl
   14001c3c6:	jns    0x14001c3c8
   14001c3c8:	add    BYTE PTR [rax],cl
   14001c3ca:	cmp    DWORD PTR [rax],eax
   14001c3cc:	add    BYTE PTR [rcx],cl
   14001c3ce:	rol    DWORD PTR [rax],cl
   14001c3d0:	adc    DWORD PTR [rdi],eax
   14001c3d2:	adc    DWORD PTR [rax],eax
   14001c3d4:	add    BYTE PTR [rax],cl
   14001c3d6:	imul   eax,DWORD PTR [rax],0x290800
   14001c3dc:	add    BYTE PTR [rcx],cl
   14001c3de:	mov    bl,0x0
   14001c3e0:	add    BYTE PTR [rax],cl
   14001c3e2:	or     DWORD PTR [rax],eax
   14001c3e4:	add    BYTE PTR [rax],cl
   14001c3e6:	mov    DWORD PTR [rax],eax
   14001c3e8:	add    BYTE PTR [rax],cl
   14001c3ea:	rex.WB add BYTE PTR [r8],al
   14001c3ed:	or     ebx,esi
   14001c3ef:	add    BYTE PTR [rax],dl
   14001c3f1:	(bad)  
   14001c3f2:	add    al,0x0
   14001c3f4:	add    BYTE PTR [rax],cl
   14001c3f6:	push   rbp
   14001c3f7:	add    BYTE PTR [rax],al
   14001c3f9:	or     BYTE PTR [rip+0x2081000],dl        # 0x14209d3ff
   14001c3ff:	add    DWORD PTR [rbx],edx
   14001c401:	(bad)  
   14001c402:	sub    eax,DWORD PTR [rax]
   14001c404:	add    BYTE PTR [rax],cl
   14001c406:	jne    0x14001c408
   14001c408:	add    BYTE PTR [rax],cl
   14001c40a:	xor    eax,0xcb090000
   14001c40f:	add    BYTE PTR [rcx],dl
   14001c411:	(bad)  
   14001c412:	or     eax,0x65080000
   14001c417:	add    BYTE PTR [rax],al
   14001c419:	or     BYTE PTR [rip+0xffffffffab090000],ah        # 0xeb0ac41f
   14001c41f:	add    BYTE PTR [rax],al
   14001c421:	or     BYTE PTR [rip+0xffffffff85080000],al        # 0xc509c427
   14001c427:	add    BYTE PTR [rax],al
   14001c429:	or     BYTE PTR [rbp+0x0],al
   14001c42c:	add    BYTE PTR [rcx],cl
   14001c42e:	jmp    0x14001c430
   14001c430:	adc    BYTE PTR [rdi],al
   14001c432:	or     BYTE PTR [rax],al
   14001c434:	add    BYTE PTR [rax],cl
   14001c436:	pop    rbp
   14001c437:	add    BYTE PTR [rax],al
   14001c439:	or     BYTE PTR [rip+0xffffffff9b090000],bl        # 0xdb0ac43f
   14001c43f:	add    BYTE PTR [rdi+rax*1],dl
   14001c442:	push   rbx
   14001c443:	add    BYTE PTR [rax],al
   14001c445:	or     BYTE PTR [rbp+0x0],bh
   14001c448:	add    BYTE PTR [rax],cl
   14001c44a:	cmp    eax,0xdb090000
   14001c44f:	add    BYTE PTR [rdx],dl
   14001c451:	(bad)  
   14001c452:	(bad)  
   14001c453:	add    BYTE PTR [rax],al
   14001c455:	or     BYTE PTR [rbp+0x0],ch
   14001c458:	add    BYTE PTR [rax],cl
   14001c45a:	sub    eax,0xbb090000
   14001c45f:	add    BYTE PTR [rax],al
   14001c461:	or     BYTE PTR [rip+0xffffffff8d080000],cl        # 0xcd09c467
   14001c467:	add    BYTE PTR [rax],al
   14001c469:	or     BYTE PTR [rbp+0x0],cl
   14001c46c:	add    BYTE PTR [rcx],cl
   14001c46e:	sti    
   14001c46f:	add    BYTE PTR [rax],dl
   14001c471:	(bad)  
   14001c472:	add    eax,DWORD PTR [rax]
   14001c474:	add    BYTE PTR [rax],cl
   14001c476:	push   rbx
   14001c477:	add    BYTE PTR [rax],al
   14001c479:	or     BYTE PTR [rbx],dl
   14001c47b:	add    BYTE PTR [rip+0x1300c308],dl        # 0x153028789
   14001c481:	(bad)  
   14001c482:	and    eax,DWORD PTR [rax]
   14001c484:	add    BYTE PTR [rax],cl
   14001c486:	jae    0x14001c488
   14001c488:	add    BYTE PTR [rax],cl
   14001c48a:	xor    eax,DWORD PTR [rax]
   14001c48c:	add    BYTE PTR [rcx],cl
   14001c48e:	mov    DWORD PTR [rax],0xb0711
   14001c494:	add    BYTE PTR [rax],cl
   14001c496:	movsxd eax,DWORD PTR [rax]
   14001c498:	add    BYTE PTR [rax],cl
   14001c49a:	and    eax,DWORD PTR [rax]
   14001c49c:	add    BYTE PTR [rcx],cl
   14001c49e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001c49f:	add    BYTE PTR [rax],al
   14001c4a1:	or     BYTE PTR [rbx],al
   14001c4a3:	add    BYTE PTR [rax],al
   14001c4a5:	or     BYTE PTR [rbx+0x43080000],al
   14001c4ab:	add    BYTE PTR [rax],al
   14001c4ad:	or     edi,esp
   14001c4af:	add    BYTE PTR [rax],dl
   14001c4b1:	(bad)  
   14001c4b2:	(bad)  
   14001c4b3:	add    BYTE PTR [rax],al
   14001c4b5:	or     BYTE PTR [rbx+0x0],bl
   14001c4b8:	add    BYTE PTR [rax],cl
   14001c4ba:	sbb    eax,DWORD PTR [rax]
   14001c4bc:	add    BYTE PTR [rcx],cl
   14001c4be:	xchg   edi,eax
   14001c4bf:	add    BYTE PTR [rdi+rax*1],dl
   14001c4c2:	rex.XB add BYTE PTR [r8],al
   14001c4c5:	or     BYTE PTR [rbx+0x0],bh
   14001c4c8:	add    BYTE PTR [rax],cl
   14001c4ca:	cmp    eax,DWORD PTR [rax]
   14001c4cc:	add    BYTE PTR [rcx],cl
   14001c4ce:	xlat   BYTE PTR ds:[rbx]
   14001c4cf:	add    BYTE PTR [rdx],dl
   14001c4d1:	(bad)  
   14001c4d2:	adc    eax,DWORD PTR [rax]
   14001c4d4:	add    BYTE PTR [rax],cl
   14001c4d6:	imul   eax,DWORD PTR [rax],0x0
   14001c4d9:	or     BYTE PTR [rbx],ch
   14001c4db:	add    BYTE PTR [rax],al
   14001c4dd:	or     DWORD PTR [rdi+0xb080000],esi
   14001c4e3:	add    BYTE PTR [rax],al
   14001c4e5:	or     BYTE PTR [rbx+0x4b080000],cl
   14001c4eb:	add    BYTE PTR [rax],al
   14001c4ed:	or     edi,esi
   14001c4ef:	add    BYTE PTR [rax],dl
   14001c4f1:	(bad)  
   14001c4f2:	add    eax,0x57080000
   14001c4f7:	add    BYTE PTR [rax],al
   14001c4f9:	or     BYTE PTR [rdi],dl
   14001c4fb:	add    BYTE PTR [rax+0x8],al
   14001c4fe:	add    BYTE PTR [rax],al
   14001c500:	adc    eax,DWORD PTR [rdi]
   14001c502:	xor    eax,DWORD PTR [rax]
   14001c504:	add    BYTE PTR [rax],cl
   14001c506:	ja     0x14001c508
   14001c508:	add    BYTE PTR [rax],cl
   14001c50a:	(bad)  
   14001c50b:	add    BYTE PTR [rax],al
   14001c50d:	or     edi,ecx
   14001c50f:	add    BYTE PTR [rcx],dl
   14001c511:	(bad)  
   14001c512:	sldt   WORD PTR [rax]
   14001c515:	or     BYTE PTR [rdi+0x0],ah
   14001c518:	add    BYTE PTR [rax],cl
   14001c51a:	(bad)  
   14001c51b:	add    BYTE PTR [rax],al
   14001c51d:	or     DWORD PTR [rdi+0x7080000],ebp
   14001c523:	add    BYTE PTR [rax],al
   14001c525:	or     BYTE PTR [rdi+0x47080000],al
   14001c52b:	add    BYTE PTR [rax],al
   14001c52d:	or     edi,ebp
   14001c52f:	add    BYTE PTR [rax],dl
   14001c531:	(bad)  
   14001c532:	or     DWORD PTR [rax],eax
   14001c534:	add    BYTE PTR [rax],cl
   14001c536:	pop    rdi
   14001c537:	add    BYTE PTR [rax],al
   14001c539:	or     BYTE PTR [rdi],bl
   14001c53b:	add    BYTE PTR [rax],al
   14001c53d:	or     DWORD PTR [rdi+0x63071400],ebx
   14001c543:	add    BYTE PTR [rax],al
   14001c545:	or     BYTE PTR [rdi+0x0],bh
   14001c548:	add    BYTE PTR [rax],cl
   14001c54a:	(bad)  
   14001c54b:	add    BYTE PTR [rax],al
   14001c54d:	or     edi,ebx
   14001c54f:	add    BYTE PTR [rdx],dl
   14001c551:	(bad)  
   14001c552:	sbb    eax,DWORD PTR [rax]
   14001c554:	add    BYTE PTR [rax],cl
   14001c556:	outs   dx,DWORD PTR ds:[rsi]
   14001c557:	add    BYTE PTR [rax],al
   14001c559:	or     BYTE PTR [rdi],ch
   14001c55b:	add    BYTE PTR [rax],al
   14001c55d:	or     DWORD PTR [rdi+0xf080000],edi
   14001c563:	add    BYTE PTR [rax],al
   14001c565:	or     BYTE PTR [rdi+0x4f080000],cl
   14001c56b:	add    BYTE PTR [rax],al
   14001c56d:	or     edi,edi
   14001c56f:	add    BYTE PTR [rax],dl
   14001c571:	add    eax,0x5170001
   14001c576:	add    DWORD PTR [rcx],eax
   14001c578:	adc    eax,DWORD PTR [rip+0x51b0011]        # 0x1451cc58f
   14001c57e:	add    DWORD PTR [rax],edx
   14001c580:	adc    DWORD PTR [rip+0x5190005],eax        # 0x1451ac58b
   14001c586:	add    DWORD PTR [rdx*1+0x1d004105],eax
   14001c58d:	add    eax,0x5104001
   14001c592:	add    eax,DWORD PTR [rax]
   14001c594:	sbb    BYTE PTR [rip+0x5140201],al        # 0x14515c79b
   14001c59a:	and    DWORD PTR [rax],eax
   14001c59c:	sbb    al,0x5
   14001c59e:	add    DWORD PTR [rax],esp
   14001c5a0:	adc    al,BYTE PTR [rip+0x51a0009]        # 0x1451bc5af
   14001c5a6:	add    DWORD PTR [rax],ecx
   14001c5a8:	(bad)  
   14001c5a9:	add    eax,0x5400081
   14001c5ae:	add    BYTE PTR [rax],al
   14001c5b0:	adc    BYTE PTR [rip+0x5170002],al        # 0x14518c5b8
   14001c5b6:	add    DWORD PTR [rcx],0x190513
   14001c5bc:	sbb    eax,DWORD PTR [rip+0x5111801]        # 0x14512ddc3
   14001c5c2:	(bad)  
   14001c5c3:	add    BYTE PTR [rcx],bl
   14001c5c5:	add    eax,0x5150601
   14001c5ca:	(bad)  
   14001c5cb:	add    BYTE PTR [rip+0x10600105],bl        # 0x15061c6d6
   14001c5d1:	add    eax,0x5180004
   14001c5d6:	add    DWORD PTR [rbx],eax
   14001c5d8:	adc    al,0x5
   14001c5da:	xor    DWORD PTR [rax],eax
   14001c5dc:	sbb    al,0x5
   14001c5de:	add    DWORD PTR [rax],esi
   14001c5e0:	adc    al,BYTE PTR [rip+0x51a000d]        # 0x1451bc5f3
   14001c5e6:	add    DWORD PTR [rsi+rdx*1],ecx
   14001c5e9:	add    eax,0x54000c1
   14001c5ee:	add    BYTE PTR [rax],al
   14001c5f0:	adc    BYTE PTR [rax],al
   14001c5f2:	adc    DWORD PTR [rax],eax
   14001c5f4:	adc    al,BYTE PTR [rax]
   14001c5f6:	add    BYTE PTR [rax],al
   14001c5f8:	or     BYTE PTR [rax],al
   14001c5fa:	(bad)  
   14001c5fb:	add    BYTE PTR [rcx],cl
   14001c5fd:	add    BYTE PTR [rsi],al
   14001c5ff:	add    BYTE PTR [rdx],cl
   14001c601:	add    BYTE PTR [rip+0x4000b00],al        # 0x14401d107
   14001c607:	add    BYTE PTR [rax+rax*1],cl
   14001c60a:	add    eax,DWORD PTR [rax]
   14001c60c:	or     eax,0xe000200
   14001c611:	add    BYTE PTR [rcx],al
   14001c613:	add    BYTE PTR [rdi],cl
   14001c615:	add    BYTE PTR [rax],al
   14001c617:	add    BYTE PTR [rcx+0x6e],ch
   14001c61a:	movsxd ebp,DWORD PTR [rdi+0x72]
   14001c61d:	jb     0x14001c684
   14001c61f:	movsxd esi,DWORD PTR [rax+riz*1+0x6c]
   14001c623:	outs   dx,BYTE PTR gs:[rsi]
   14001c625:	addr32 je 0x14001c690
   14001c628:	and    BYTE PTR [rbx+0x68],ah
   14001c62b:	movsxd ebp,DWORD PTR gs:[rbx+0x0]
   14001c62f:	add    BYTE PTR [rcx+0x6e],ch
   14001c632:	movsxd ebp,DWORD PTR [rdi+0x72]
   14001c635:	jb     0x14001c69c
   14001c637:	movsxd esi,DWORD PTR [rax+riz*1+0x64]
   14001c63b:	(bad)  
   14001c63c:	je     0x14001c69f
   14001c63e:	and    BYTE PTR [rbx+0x68],ah
   14001c641:	movsxd ebp,DWORD PTR gs:[rbx+0x0]
   14001c645:	add    BYTE PTR [rax],al
   14001c647:	add    BYTE PTR [rdi+rbp*2+0x6f],dh
   14001c64b:	and    BYTE PTR [rbp+0x61],ch
   14001c64e:	outs   dx,BYTE PTR ds:[rsi]
   14001c64f:	jns    0x14001c671
   14001c651:	ins    BYTE PTR es:[rdi],dx
   14001c652:	outs   dx,BYTE PTR gs:[rsi]
   14001c654:	addr32 je 0x14001c6bf
   14001c657:	and    BYTE PTR [rdi+0x72],ch
   14001c65a:	and    BYTE PTR [rcx+rbp*2+0x73],ah
   14001c65e:	je     0x14001c6c1
   14001c660:	outs   dx,BYTE PTR ds:[rsi]
   14001c661:	movsxd esp,DWORD PTR [rbp+0x20]
   14001c664:	jae    0x14001c6df
   14001c666:	ins    DWORD PTR es:[rdi],dx
   14001c667:	(bad)  
   14001c668:	outs   dx,DWORD PTR ds:[rsi]
   14001c669:	ins    BYTE PTR es:[rdi],dx
   14001c66a:	jae    0x14001c66c
   14001c66c:	add    BYTE PTR [rax],al
   14001c66e:	add    BYTE PTR [rax],al
   14001c670:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   14001c677:	and    BYTE PTR [rcx+rbp*2+0x73],ah
   14001c67b:	je     0x14001c6de
   14001c67d:	outs   dx,BYTE PTR ds:[rsi]
   14001c67e:	movsxd esp,DWORD PTR [rbp+0x20]
   14001c681:	je     0x14001c6f2
   14001c683:	outs   dx,DWORD PTR ds:[rsi]
   14001c684:	and    BYTE PTR [rsi+0x61],ah
   14001c687:	jb     0x14001c6a9
   14001c689:	(bad)  
   14001c68b:	movsxd ebp,DWORD PTR [rbx+0x0]
   14001c68e:	add    BYTE PTR [rax],al
   14001c690:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   14001c697:	and    BYTE PTR [rcx+rbp*2+0x73],ah
   14001c69b:	je     0x14001c6fe
   14001c69d:	outs   dx,BYTE PTR ds:[rsi]
   14001c69e:	movsxd esp,DWORD PTR [rbp+0x20]
   14001c6a1:	movsxd ebp,DWORD PTR [rdi+0x64]
   14001c6a4:	add    BYTE PTR gs:[rax],al
   14001c6a7:	add    BYTE PTR [rcx+0x6e],ch
   14001c6aa:	jbe    0x14001c70d
   14001c6ac:	ins    BYTE PTR es:[rdi],dx
   14001c6ad:	imul   esp,DWORD PTR [rax+riz*1+0x6c],0x72657469
   14001c6b5:	(bad)  
   14001c6b6:	ins    BYTE PTR es:[rdi],dx
   14001c6b7:	(bad)  
   14001c6b8:	ins    BYTE PTR es:[rdi],dx
   14001c6b9:	outs   dx,BYTE PTR gs:[rsi]
   14001c6bb:	addr32 je 0x14001c726
   14001c6be:	and    BYTE PTR [rbx+0x6f],ah
   14001c6c1:	fs add BYTE PTR gs:[rax],al
   14001c6c5:	add    BYTE PTR [rax],al
   14001c6c7:	add    BYTE PTR [rcx+0x6e],ch
   14001c6ca:	jbe    0x14001c72d
   14001c6cc:	ins    BYTE PTR es:[rdi],dx
   14001c6cd:	imul   esp,DWORD PTR [rax+riz*1+0x64],0x61747369
   14001c6d5:	outs   dx,BYTE PTR ds:[rsi]
   14001c6d6:	movsxd esp,DWORD PTR [rbp+0x73]
   14001c6d9:	and    BYTE PTR [rbx+0x65],dh
   14001c6dc:	je     0x14001c6de
   14001c6de:	add    BYTE PTR [rax],al
   14001c6e0:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   14001c6e7:	and    BYTE PTR [rcx+rbp*2+0x74],ch
   14001c6eb:	gs jb  0x14001c74f
   14001c6ee:	ins    BYTE PTR es:[rdi],dx
   14001c6ef:	(bad)  
   14001c6f0:	ins    BYTE PTR es:[rdi],dx
   14001c6f1:	outs   dx,BYTE PTR gs:[rsi]
   14001c6f3:	addr32 je 0x14001c75e
   14001c6f6:	jae    0x14001c718
   14001c6f8:	jae    0x14001c75f
   14001c6fa:	je     0x14001c6fc
   14001c6fc:	add    BYTE PTR [rax],al
   14001c6fe:	add    BYTE PTR [rax],al
   14001c700:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   14001c707:	and    BYTE PTR [rdx+0x69],ah
   14001c70a:	je     0x14001c72c
   14001c70c:	ins    BYTE PTR es:[rdi],dx
   14001c70d:	outs   dx,BYTE PTR gs:[rsi]
   14001c70f:	addr32 je 0x14001c77a
   14001c712:	and    BYTE PTR [rdx+0x65],dh
   14001c715:	jo     0x14001c77c
   14001c717:	(bad)  
   14001c718:	je     0x14001c71a
   14001c71a:	add    BYTE PTR [rax],al
   14001c71c:	add    BYTE PTR [rax],al
   14001c71e:	add    BYTE PTR [rax],al
   14001c720:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   14001c727:	and    BYTE PTR [rbx+0x6f],ah
   14001c72a:	fs and BYTE PTR gs:[rbp+riz*2+0x6e],ch
   14001c730:	addr32 je 0x14001c79b
   14001c733:	jae    0x14001c755
   14001c735:	jae    0x14001c79c
   14001c737:	je     0x14001c739
   14001c739:	add    BYTE PTR [rax],al
   14001c73b:	add    BYTE PTR [rax],al
   14001c73d:	add    BYTE PTR [rax],al
   14001c73f:	add    BYTE PTR [rax+0x65],ch
   14001c742:	(bad)  
   14001c743:	fs gs jb 0x14001c767
   14001c747:	movsxd esi,DWORD PTR [rdx+0x63]
   14001c74a:	and    BYTE PTR [rbp+0x69],ch
   14001c74d:	jae    0x14001c7bc
   14001c74f:	(bad)  
   14001c750:	je     0x14001c7b5
   14001c752:	push   0x0
   14001c757:	add    BYTE PTR [rcx+0x6e],ch
   14001c75a:	jbe    0x14001c7bd
   14001c75c:	ins    BYTE PTR es:[rdi],dx
   14001c75d:	imul   esp,DWORD PTR [rax+riz*1+0x62],0x6b636f6c
   14001c765:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14001c769:	add    BYTE PTR gs:[rax],al
   14001c76c:	add    BYTE PTR [rax],al
   14001c76e:	add    BYTE PTR [rax],al
   14001c770:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   14001c777:	and    BYTE PTR [rbx+0x74],dh
   14001c77a:	outs   dx,DWORD PTR ds:[rsi]
   14001c77b:	jb     0x14001c7e2
   14001c77d:	and    BYTE PTR fs:[rdx+0x6c],ah
   14001c781:	outs   dx,DWORD PTR ds:[rsi]
   14001c782:	movsxd ebp,DWORD PTR [rbx+0x20]
   14001c785:	ins    BYTE PTR es:[rdi],dx
   14001c786:	outs   dx,BYTE PTR gs:[rsi]
   14001c788:	addr32 je 0x14001c7f3
   14001c78b:	jae    0x14001c78d
   14001c78d:	add    BYTE PTR [rax],al
   14001c78f:	add    BYTE PTR [rcx+0x6e],ch
   14001c792:	movsxd ebp,DWORD PTR [rdi+0x72]
   14001c795:	jb     0x14001c7fc
   14001c797:	movsxd esi,DWORD PTR [rax+riz*1+0x68]
   14001c79b:	gs (bad) 
   14001c79d:	fs gs jb 0x14001c7c1
   14001c7a1:	movsxd ebp,DWORD PTR [rax+0x65]
   14001c7a4:	movsxd ebp,DWORD PTR [rbx+0x0]
   14001c7a7:	add    BYTE PTR [rcx+0x6e],ch
   14001c7aa:	jbe    0x14001c80d
   14001c7ac:	ins    BYTE PTR es:[rdi],dx
   14001c7ad:	imul   esp,DWORD PTR [rax+riz*1+0x77],0x6f646e69
   14001c7b5:	ja     0x14001c7d7
   14001c7b7:	jae    0x14001c822
   14001c7b9:	jp     0x14001c820
   14001c7bb:	add    BYTE PTR [rax],al
   14001c7bd:	add    BYTE PTR [rax],al
   14001c7bf:	add    BYTE PTR [rbp+0x6e],dh
   14001c7c2:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   14001c7c6:	outs   dx,BYTE PTR ds:[rsi]
   14001c7c7:	and    BYTE PTR [rax+0x65],ch
   14001c7ca:	(bad)  
   14001c7cb:	fs gs jb 0x14001c7ef
   14001c7cf:	data16 ins BYTE PTR es:[rdi],dx
   14001c7d1:	(bad)  
   14001c7d2:	addr32 jae 0x14001c7f5
   14001c7d5:	jae    0x14001c83c
   14001c7d7:	je     0x14001c7d9
   14001c7d9:	add    BYTE PTR [rax],al
   14001c7db:	add    BYTE PTR [rax],al
   14001c7dd:	add    BYTE PTR [rax],al
   14001c7df:	add    BYTE PTR [rbp+0x6e],dh
   14001c7e2:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   14001c7e6:	outs   dx,BYTE PTR ds:[rsi]
   14001c7e7:	and    BYTE PTR [rbx+0x6f],ah
   14001c7ea:	ins    DWORD PTR es:[rdi],dx
   14001c7eb:	jo     0x14001c85f
   14001c7ed:	gs jae 0x14001c863
   14001c7f0:	imul   ebp,DWORD PTR [rdi+0x6e],0x74656d20
   14001c7f7:	push   0x646f
   14001c7fc:	add    BYTE PTR [rax],al
   14001c7fe:	add    BYTE PTR [rax],al
   14001c800:	imul   ebp,DWORD PTR [rsi+0x63],0x61706d6f
   14001c807:	je     0x14001c872
   14001c809:	(bad)  
   14001c80a:	ins    BYTE PTR es:[rdi],dx
   14001c80b:	and    BYTE PTR gs:[rsi+0x65],dh
   14001c80f:	jb     0x14001c884
   14001c811:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
   14001c818:	(bad)  
   14001c819:	jne    0x14001c881
   14001c81b:	data16 gs jb 0x14001c83f
   14001c81f:	gs jb  0x14001c894
   14001c822:	outs   dx,DWORD PTR ds:[rsi]
   14001c823:	jb     0x14001c825
   14001c825:	add    BYTE PTR [rax],al
   14001c827:	add    BYTE PTR [rcx+0x6e],ch
   14001c82a:	jae    0x14001c8a1
   14001c82c:	data16 imul sp,WORD PTR [rbx+0x69],0x6e65
   14001c833:	je     0x14001c855
   14001c835:	ins    DWORD PTR es:[rdi],dx
   14001c836:	gs ins DWORD PTR es:[rdi],dx
   14001c838:	outs   dx,DWORD PTR ds:[rsi]
   14001c839:	jb     0x14001c8b4
   14001c83b:	add    BYTE PTR [rax],al
   14001c83d:	add    BYTE PTR [rax],al
   14001c83f:	add    BYTE PTR [rcx+riz*2+0x74],ah
   14001c843:	(bad)  
   14001c844:	and    BYTE PTR [rbp+0x72],ah
   14001c847:	jb     0x14001c8b8
   14001c849:	jb     0x14001c84b
   14001c84b:	add    BYTE PTR [rax],al
   14001c84d:	add    BYTE PTR [rax],al
   14001c84f:	add    BYTE PTR [rbx+0x74],dh
   14001c852:	jb     0x14001c8b9
   14001c854:	(bad)  
   14001c855:	ins    DWORD PTR es:[rdi],dx
   14001c856:	and    BYTE PTR [rbp+0x72],ah
   14001c859:	jb     0x14001c8ca
   14001c85b:	jb     0x14001c85d
   14001c85d:	add    BYTE PTR [rax],al
   14001c85f:	add    BYTE PTR [rsi+0x69],ah
   14001c862:	ins    BYTE PTR es:[rdi],dx
   14001c863:	and    BYTE PTR gs:[rbp+0x72],ah
   14001c867:	jb     0x14001c8d8
   14001c869:	jb     0x14001c86b
   14001c86b:	add    BYTE PTR [rax],al
   14001c86d:	add    BYTE PTR [rax],al
   14001c86f:	add    BYTE PTR [rbx+0x74],dh
   14001c872:	jb     0x14001c8d9
   14001c874:	(bad)  
   14001c875:	ins    DWORD PTR es:[rdi],dx
   14001c876:	and    BYTE PTR [rbp+0x6e],ah
   14001c879:	add    BYTE PTR fs:[rax],al
   14001c87c:	add    BYTE PTR [rax],al
   14001c87e:	add    BYTE PTR [rax],al
   14001c880:	outs   dx,BYTE PTR ds:[rsi]
   14001c881:	gs gs and BYTE PTR fs:[rcx+rbp*2+0x63],ah
   14001c888:	je     0x14001c8f3
   14001c88a:	outs   dx,DWORD PTR ds:[rsi]
   14001c88b:	outs   dx,BYTE PTR ds:[rsi]
   14001c88c:	(bad)  
   14001c88d:	jb     0x14001c908
   14001c88f:	add    BYTE PTR [rax+0x14001c8],al
   14001c895:	add    BYTE PTR [rax],al
   14001c897:	add    BYTE PTR [rax-0x38],dh
   14001c89a:	add    DWORD PTR [rax+0x1],eax
   14001c89d:	add    BYTE PTR [rax],al
   14001c89f:	add    BYTE PTR [rbx+0x14001b4],dl
   14001c8a5:	add    BYTE PTR [rax],al
   14001c8a7:	add    BYTE PTR [rax-0x38],ah
   14001c8aa:	add    DWORD PTR [rax+0x1],eax
   14001c8ad:	add    BYTE PTR [rax],al
   14001c8af:	add    BYTE PTR [rax-0x38],dl
   14001c8b2:	add    DWORD PTR [rax+0x1],eax
   14001c8b5:	add    BYTE PTR [rax],al
   14001c8b7:	add    BYTE PTR [rax-0x38],al
   14001c8ba:	add    DWORD PTR [rax+0x1],eax
   14001c8bd:	add    BYTE PTR [rax],al
   14001c8bf:	add    BYTE PTR [rax],ch
   14001c8c1:	enter  0x4001,0x1
   14001c8c5:	add    BYTE PTR [rax],al
   14001c8c7:	add    BYTE PTR [rax],bl
   14001c8c9:	enter  0x4001,0x1
   14001c8cd:	add    BYTE PTR [rax],al
   14001c8cf:	add    BYTE PTR [rax],al
   14001c8d1:	enter  0x4001,0x1
   14001c8d5:	add    BYTE PTR [rax],al
   14001c8d7:	add    BYTE PTR [rbx+0x14001b4],dl
   14001c8dd:	add    BYTE PTR [rax],al
   14001c8df:	add    BYTE PTR [rax],ah
   14001c8e1:	imul   ebp,DWORD PTR [rsi+0x66],0x6574616c
   14001c8e8:	and    BYTE PTR [rcx],dh
   14001c8ea:	xor    ch,BYTE PTR cs:[rsi]
   14001c8ed:	xor    esp,DWORD PTR [rax]
   14001c8ef:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001c8f1:	jo     0x14001c96c
   14001c8f3:	jb     0x14001c95e
   14001c8f5:	addr32 push 0x39312074
   14001c8fb:	cmp    DWORD PTR [rip+0x3030322d],esi        # 0x17031fb2e
   14001c901:	xor    eax,0x72614d20
   14001c906:	imul   esp,DWORD PTR [rax],0x41
   14001c909:	fs ins BYTE PTR es:[rdi],dx
   14001c90b:	gs jb  0x14001c92e
   14001c90e:	add    BYTE PTR [rax],al
   14001c910:	add    eax,DWORD PTR [rax]
   14001c912:	add    al,0x0
   14001c914:	add    eax,0x7000600
   14001c919:	add    BYTE PTR [rax],cl
   14001c91b:	add    BYTE PTR [rcx],cl
   14001c91d:	add    BYTE PTR [rdx],cl
   14001c91f:	add    BYTE PTR [rbx],cl
   14001c921:	add    BYTE PTR [rip+0x11000f00],cl        # 0x15101d827
   14001c927:	add    BYTE PTR [rbx],dl
   14001c929:	add    BYTE PTR [rdi],dl
   14001c92b:	add    BYTE PTR [rbx],bl
   14001c92d:	add    BYTE PTR [rdi],bl
   14001c92f:	add    BYTE PTR [rbx],ah
   14001c931:	add    BYTE PTR [rbx],ch
   14001c933:	add    BYTE PTR [rbx],dh
   14001c935:	add    BYTE PTR [rbx],bh
   14001c937:	add    BYTE PTR [rbx+0x0],al
   14001c93a:	push   rbx
   14001c93b:	add    BYTE PTR [rbx+0x0],ah
   14001c93e:	jae    0x14001c940
   14001c940:	add    DWORD PTR [rax],0xffffffa3
   14001c943:	add    bl,al
   14001c945:	add    bl,ah
   14001c947:	add    BYTE PTR [rdx],al
   14001c949:	add    DWORD PTR [rax],eax
   14001c94b:	add    BYTE PTR [rax],al
   14001c94d:	add    BYTE PTR [rax],al
   14001c94f:	add    BYTE PTR [rax],dl
   14001c951:	add    BYTE PTR [rax],dl
   14001c953:	add    BYTE PTR [rax],dl
   14001c955:	add    BYTE PTR [rax],dl
   14001c957:	add    BYTE PTR [rax],dl
   14001c959:	add    BYTE PTR [rax],dl
   14001c95b:	add    BYTE PTR [rax],dl
   14001c95d:	add    BYTE PTR [rax],dl
   14001c95f:	add    BYTE PTR [rcx],dl
   14001c961:	add    BYTE PTR [rcx],dl
   14001c963:	add    BYTE PTR [rcx],dl
   14001c965:	add    BYTE PTR [rcx],dl
   14001c967:	add    BYTE PTR [rdx],dl
   14001c969:	add    BYTE PTR [rdx],dl
   14001c96b:	add    BYTE PTR [rdx],dl
   14001c96d:	add    BYTE PTR [rdx],dl
   14001c96f:	add    BYTE PTR [rbx],dl
   14001c971:	add    BYTE PTR [rbx],dl
   14001c973:	add    BYTE PTR [rbx],dl
   14001c975:	add    BYTE PTR [rbx],dl
   14001c977:	add    BYTE PTR [rax+rax*1],dl
   14001c97a:	adc    al,0x0
   14001c97c:	adc    al,0x0
   14001c97e:	adc    al,0x0
   14001c980:	adc    eax,0x15001500
   14001c985:	add    BYTE PTR [rip+0xffffffffc9001000],dl        # 0x10901d98b
   14001c98b:	add    ah,al
   14001c98d:	add    BYTE PTR [rax],al
   14001c98f:	add    BYTE PTR [rcx],al
   14001c991:	add    BYTE PTR [rdx],al
   14001c993:	add    BYTE PTR [rbx],al
   14001c995:	add    BYTE PTR [rax+rax*1],al
   14001c998:	add    eax,0x9000700
   14001c99d:	add    BYTE PTR [rip+0x19001100],cl        # 0x15901daa3
   14001c9a3:	add    BYTE PTR [rcx],ah
   14001c9a5:	add    BYTE PTR [rcx],dh
   14001c9a7:	add    BYTE PTR [rcx+0x0],al
   14001c9aa:	(bad)  
   14001c9ab:	add    BYTE PTR [rcx+0x100c100],al
   14001c9b1:	add    DWORD PTR [rcx+0x1020101],eax
   14001c9b7:	add    eax,DWORD PTR [rcx]
   14001c9b9:	add    al,0x1
   14001c9bb:	(bad)  
   14001c9bc:	add    DWORD PTR [rax],ecx
   14001c9be:	add    DWORD PTR [rcx+rax*1],ecx
   14001c9c1:	adc    BYTE PTR [rcx],al
   14001c9c3:	sbb    BYTE PTR [rcx],al
   14001c9c5:	and    BYTE PTR [rcx],al
   14001c9c7:	xor    BYTE PTR [rcx],al
   14001c9c9:	rex add DWORD PTR [rax+0x0],esp
   14001c9cd:	add    BYTE PTR [rax],al
   14001c9cf:	add    BYTE PTR [rax],dl
   14001c9d1:	add    BYTE PTR [rax],dl
   14001c9d3:	add    BYTE PTR [rax],dl
   14001c9d5:	add    BYTE PTR [rax],dl
   14001c9d7:	add    BYTE PTR [rcx],dl
   14001c9d9:	add    BYTE PTR [rcx],dl
   14001c9db:	add    BYTE PTR [rdx],dl
   14001c9dd:	add    BYTE PTR [rdx],dl
   14001c9df:	add    BYTE PTR [rbx],dl
   14001c9e1:	add    BYTE PTR [rbx],dl
   14001c9e3:	add    BYTE PTR [rax+rax*1],dl
   14001c9e6:	adc    al,0x0
   14001c9e8:	adc    eax,0x16001500
   14001c9ed:	add    BYTE PTR [rsi],dl
   14001c9ef:	add    BYTE PTR [rdi],dl
   14001c9f1:	add    BYTE PTR [rdi],dl
   14001c9f3:	add    BYTE PTR [rax],bl
   14001c9f5:	add    BYTE PTR [rax],bl
   14001c9f7:	add    BYTE PTR [rcx],bl
   14001c9f9:	add    BYTE PTR [rcx],bl
   14001c9fb:	add    BYTE PTR [rdx],bl
   14001c9fd:	add    BYTE PTR [rdx],bl
   14001c9ff:	add    BYTE PTR [rbx],bl
   14001ca01:	add    BYTE PTR [rbx],bl
   14001ca03:	add    BYTE PTR [rax+rax*1],bl
   14001ca06:	sbb    al,0x0
   14001ca08:	sbb    eax,0x40001d00
   14001ca0d:	add    BYTE PTR [rax+0x0],al
   14001ca10:	add    BYTE PTR [rax],al
   14001ca12:	add    BYTE PTR [rax],al
   14001ca14:	xchg   esi,eax
   14001ca15:	xor    BYTE PTR [rdi],al
   14001ca17:	ja     0x14001ca45
   14001ca19:	(bad)  
   14001ca1a:	(bad)  
   14001ca1b:	out    dx,al
   14001ca1c:	mov    edx,0x19990951
   14001ca21:	(bad)  
   14001ca22:	ins    DWORD PTR es:[rdi],dx
   14001ca23:	(bad)  
   14001ca24:	(bad)  
   14001ca25:	hlt    
   14001ca26:	push   0x70
   14001ca28:	xor    eax,0xa3e963a5
   14001ca2d:	xchg   ebp,eax
   14001ca2e:	fs sahf 
   14001ca30:	xor    cl,BYTE PTR [rax-0x475bf125]
   14001ca36:	fdivr  QWORD PTR [rcx+0x1e]
   14001ca39:	jmp    0x1198aab13
   14001ca3e:	rcl    BYTE PTR [rdi+0x9b64c2b],cl
   14001ca44:	mov    ebp,0x77eb17c
   14001ca49:	sub    eax,0x1d91e7b8
   14001ca4e:	mov    edi,0xb7106490
   14001ca53:	sbb    eax,0x6ab020f2
   14001ca58:	rex.W jno 0x14001ca14
   14001ca5b:	repz fiadd WORD PTR [rcx-0x42]
   14001ca5f:	test   BYTE PTR [rbp-0x2c],bh
   14001ca62:	ficomp DWORD PTR [rdx]
   14001ca64:	jmp    0x14001ca4a
   14001ca66:	(bad)  [rbp+0x51]
   14001ca69:	mov    ch,0xd4
   14001ca6b:	hlt    
   14001ca6c:	mov    DWORD PTR [rbp-0x67a97c2d],0xa8c0136c
   14001ca76:	imul   esp,DWORD PTR [rdx+rdi*2-0x7],0x62
   14001ca7b:	std    
   14001ca7c:	in     al,dx
   14001ca7d:	leave  
   14001ca7e:	mov    cl,BYTE PTR gs:[rdi+0x5c]
   14001ca82:	add    DWORD PTR [rcx+rbx*8],edx
   14001ca85:	ins    BYTE PTR es:[rdi],dx
   14001ca86:	(bad)  
   14001ca87:	movsxd esp,DWORD PTR [rbx+0x3d]
   14001ca8a:	psubd  mm6,mm5
   14001ca8d:	or     eax,0x20c88d08
   14001ca92:	outs   dx,BYTE PTR ds:[rsi]
   14001ca93:	cmp    ebx,DWORD PTR [rsi+0x10]
   14001ca96:	imul   ecx,DWORD PTR [rsp+riz*8+0x41],0x7172d560
   14001ca9e:	addr32 mov ds:0x3c03e4d1,al
   14001caa4:	rex.RXB (bad) 
   14001caa6:	add    al,0x4b
   14001caa8:	std    
   14001caa9:	test   DWORD PTR [rip+0xab56bd2],ecx        # 0x14ab73681
   14001caaf:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001cab0:	cli    
   14001cab1:	test   al,0xb5
   14001cab3:	xor    eax,0x42b2986c
   14001cab8:	(bad)  
   14001cab9:	leave  
   14001caba:	mov    ebx,0xbcf940db
   14001cabf:	lods   al,BYTE PTR ds:[rsi]
   14001cac0:	jrcxz  0x14001cb2e
   14001cac2:	fdiv   DWORD PTR [rdx]
   14001cac4:	jne    0x14001cb22
   14001cac6:	fild   WORD PTR [rbp-0x31]
   14001cac9:	or     eax,0x3d59dcd6
   14001cace:	shr    DWORD PTR [rbx+0x26d930ac],1
   14001cad4:	cmp    al,BYTE PTR [rax]
   14001cad6:	ficom  WORD PTR [rcx-0x80]
   14001cad9:	push   rcx
   14001cada:	xlat   BYTE PTR ds:[rbx]
   14001cadb:	enter  0x6116,0xd0
   14001cadf:	mov    edi,0x21b4f4b5
   14001cae4:	and    eax,esp
   14001cae6:	mov    bl,0x56
   14001cae8:	cdq    
   14001cae9:	xchg   ebp,eax
   14001caea:	mov    edx,0xbda50fcf
   14001caef:	mov    eax,0x2802b89e
   14001caf4:	or     BYTE PTR [rax-0x264da0fb],cl
   14001cafa:	or     al,0xc6
   14001cafc:	and    al,0xe9
   14001cafe:	or     esi,DWORD PTR [rcx+0x2f6f7c87]
   14001cb04:	adc    DWORD PTR [rax+rbp*2+0x58],ecx
   14001cb08:	stos   DWORD PTR es:[rdi],eax
   14001cb09:	sbb    eax,0x2d3dc161
   14001cb0e:	data16 mov dh,0x90
   14001cb11:	fdiv   QWORD PTR [r14+0x6]
   14001cb15:	jno    0x14001caf2
   14001cb17:	add    DWORD PTR [rax+riz*1+0x102a98d2],edi
   14001cb1e:	(bad)  
   14001cb1f:	out    dx,eax
   14001cb20:	mov    DWORD PTR [rbp-0x4ae08e4f],eax
   14001cb26:	mov    dh,0x6
   14001cb28:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001cb29:	in     al,0xbf
   14001cb2b:	lahf   
   14001cb2c:	xor    edx,esp
   14001cb2e:	mov    eax,0x7c9a2e8
   14001cb33:	js     0x14001cb69
   14001cb35:	stc    
   14001cb36:	add    BYTE PTR [rdi],cl
   14001cb38:	mov    gs,WORD PTR [rax-0x67e769f7]
   14001cb3e:	(bad)  
   14001cb3f:	loope  0x14001cafc
   14001cb41:	or     eax,0x3d2d7f6a
   14001cb46:	ins    DWORD PTR es:[rdi],dx
   14001cb47:	or     BYTE PTR [rdi+0x191646c],dl
   14001cb4d:	pop    rsp
   14001cb4e:	movsxd esp,esi
   14001cb50:	hlt    
   14001cb51:	push   rcx
   14001cb52:	imul   ebp,DWORD PTR [rbx+0x62],0x61
   14001cb56:	ins    BYTE PTR es:[rdi],dx
   14001cb57:	sbb    al,0xd8
   14001cb59:	xor    BYTE PTR [rbp-0x7b],ah
   14001cb5c:	rex.WRX add BYTE PTR [rdx-0xe],r12b
   14001cb60:	in     eax,dx
   14001cb61:	xchg   ebp,eax
   14001cb62:	(bad)  
   14001cb63:	ins    BYTE PTR es:[rdi],dx
   14001cb64:	jnp    0x14001cb0b
   14001cb66:	add    DWORD PTR [rbx],ebx
   14001cb68:	shl    esp,0x8
   14001cb6b:	(bad)  
   14001cb6c:	push   rdi
   14001cb6d:	(bad)  
   14001cb6e:	pmaddwd mm0,mm6
   14001cb71:	fnstenv [rax-0x4816af9b]
   14001cb77:	adc    ch,dl
   14001cb79:	mov    eax,0x887c8bbe
   14001cb7e:	mov    ecx,0xdd1ddffc
   14001cb83:	(bad)  
   14001cb84:	rex.WB sub rax,0x7cf315da
   14001cb8a:	ror    DWORD PTR [rbp+riz*2+0x58fbd44c],cl
   14001cb91:	(bad)  
   14001cb92:	mov    dl,0x4d
   14001cb94:	(bad)  
   14001cb95:	push   rcx
   14001cb96:	mov    ch,0x3a
   14001cb98:	je     0x14001cb9a
   14001cb9a:	mov    esp,0xbb30e2a3
   14001cb9f:	(bad)  
   14001cba0:	rex.B movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001cba2:	fisttp WORD PTR [rdx-0x29]
   14001cba5:	xchg   ebp,eax
   14001cba6:	fdivr  DWORD PTR [rip+0xffffffffa4d1c46d]        # 0xe4d39019
   14001cbac:	sti    
   14001cbad:	hlt    
   14001cbae:	(bad)  
   14001cbaf:	shr    DWORD PTR [rdx-0x17],cl
   14001cbb2:	imul   eax,DWORD PTR [rbx-0x4],0x46346ed9
   14001cbb9:	mov    BYTE PTR [rdi-0x53],ah
   14001cbbc:	sar    BYTE PTR [rax+0x2d73da60],1
   14001cbc2:	add    al,0x44
   14001cbc4:	in     eax,0x1d
   14001cbc6:	add    esi,DWORD PTR [rbx]
   14001cbc8:	pop    rdi
   14001cbc9:	rex.WR or r13b,BYTE PTR [rdx-0x22f28337]
   14001cbd0:	cmp    al,0x71
   14001cbd2:	add    eax,0x241aa50
   14001cbd7:	(bad)  
   14001cbd8:	adc    BYTE PTR [rax],dl
   14001cbda:	or     edi,DWORD PTR [rsi-0x36f3df7a]
   14001cbe0:	and    eax,0xb35768b5
   14001cbe5:	test   DWORD PTR [rdi+0x20],ebp
   14001cbe8:	or     esp,edx
   14001cbea:	mov    cx,0xe49f
   14001cbee:	(bad)  
   14001cbef:	(bad)  
   14001cbf0:	(bad)  
   14001cbf1:	stc    
   14001cbf2:	ficomp WORD PTR [rsi-0x68]
   14001cbf5:	leave  
   14001cbf6:	fldcw  WORD PTR [rcx]
   14001cbf8:	and    bl,BYTE PTR [rax-0x574b4f30]
   14001cbfe:	xlat   BYTE PTR ds:[rbx]
   14001cbff:	(bad)  
   14001cc00:	(bad)  
   14001cc01:	cmp    eax,0xd8159b3
   14001cc06:	mov    ah,0x2e
   14001cc08:	cmp    ebx,DWORD PTR [rbp+rdi*4-0x49]
   14001cc0c:	lods   eax,DWORD PTR ds:[rsi]
   14001cc0d:	ins    BYTE PTR es:[rdi],dx
   14001cc0e:	mov    edx,0xb88320c0
   14001cc13:	in     eax,dx
   14001cc14:	mov    dh,0xb3
   14001cc16:	mov    edi,0xb6e20c9a
   14001cc1b:	add    ebx,DWORD PTR [rdx+0x3974b1d2]
   14001cc21:	rex.RXB (bad) 
   14001cc23:	(bad)  
   14001cc24:	scas   eax,DWORD PTR es:[rdi]
   14001cc25:	ja     0x14001cbf9
   14001cc27:	popf   
   14001cc28:	adc    eax,0x8304db26
   14001cc2d:	(bad)  
   14001cc2e:	fdiv   QWORD PTR [rbx+0x12]
   14001cc31:	or     esp,DWORD PTR [rbx-0x1d]
   14001cc34:	test   BYTE PTR [rbx],bh
   14001cc36:	fs xchg esp,eax
   14001cc38:	ds push 0x6d
   14001cc3b:	or     eax,0x7a6a5aa8
   14001cc40:	or     ecx,edi
   14001cc42:	(bad)  
   14001cc43:	in     al,0x9d
   14001cc45:	dec    DWORD PTR [rcx]
   14001cc47:	xchg   ebx,eax
   14001cc48:	(bad)  
   14001cc49:	scas   al,BYTE PTR es:[rdi]
   14001cc4a:	add    BYTE PTR [rdx],cl
   14001cc4c:	mov    cl,0x9e
   14001cc4e:	(bad)  
   14001cc4f:	jge    0x14001cc95
   14001cc51:	xchg   ebx,eax
   14001cc52:	(bad)  
   14001cc54:	shl    BYTE PTR [rbx-0xd9778f8],cl
   14001cc5a:	add    DWORD PTR [rsi],ebx
   14001cc5c:	inc    dl
   14001cc5e:	(bad)  
   14001cc5f:	imul   ebx,DWORD PTR [rbp+0x57],0x67cbf762
   14001cc66:	xor    BYTE PTR gs:[rcx+0x36],0x6c
   14001cc6b:	sbb    edi,esp
   14001cc6d:	(bad)  
   14001cc6e:	imul   ebp,DWORD PTR [rsi+0x76],0x1b
   14001cc72:	(bad)  
   14001cc73:	(bad)  
   14001cc74:	loopne 0x14001cca1
   14001cc76:	ror    DWORD PTR [rcx+0x10da7a5a],cl
   14001cc7c:	int3   
   14001cc7d:	rex.WX frstor [rdi+0x6f]
   14001cc81:	fistp  QWORD PTR [rcx-0x41100607]
   14001cc87:	mov    es,WORD PTR [rbx-0x42]
   14001cc8a:	mov    bh,0x17
   14001cc8c:	(bad)  
   14001cc8d:	mov    ?,WORD PTR [rax-0x295c17a0]
   14001cc93:	(bad)  
   14001cc94:	jle    0x14001cc29
   14001cc96:	shl    DWORD PTR [rcx+0x38d8c2c4],1
   14001cc9c:	push   rdx
   14001cc9d:	repnz fisttp WORD PTR [rdi-0xf]
   14001cca1:	addr32 mov ebx,0xbc5767d1
   14001cca7:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001cca8:	fld    QWORD PTR [rsi]
   14001ccaa:	mov    ch,0x3f
   14001ccac:	rex.WXB
   14001ccad:	ss mov dl,0x48
   14001ccb0:	fisubr DWORD PTR [rbx]
   14001ccb2:	or     eax,0xa1b4cd8
   14001ccb7:	scas   eax,DWORD PTR es:[rdi]
   14001ccb8:	test   BYTE PTR [rdx+0x3],0x36
   14001ccbc:	(bad)  
   14001ccbd:	jp     0x14001ccc3
   14001ccbf:	rex.B ret 
   14001ccc1:	out    dx,eax
   14001ccc2:	(bad)  
   14001ccc3:	fist   WORD PTR [rbp-0x21]
   14001ccc6:	addr32 test al,0xef
   14001ccc9:	mov    gs,WORD PTR [rsi+0x31]
   14001cccc:	jns    0x14001cc8c
   14001ccce:	imul   eax,DWORD PTR [rsi-0x74],0x1acb61b3
   14001ccd5:	and    DWORD PTR [rsi-0x44],0xffffffa0
   14001ccd9:	shr    BYTE PTR [rdi+0x25],cl
   14001ccdc:	ss loop 0x14001cd47
   14001ccdf:	push   rdx
   14001cce0:	xchg   ebp,eax
   14001cce1:	ja     0x14001ccef
   14001cce3:	int3   
   14001cce4:	add    eax,DWORD PTR [rdi+0xb]
   14001cce7:	mov    ebx,0x220216b9
   14001ccec:	(bad)  
   14001cced:	es add eax,0xba3bbe55
   14001ccf3:	(bad)
   14001ccf6:	mov    ebp,0xb45a92b2
   14001ccfb:	sub    eax,DWORD PTR [rdx+rbp*2]
   14001ccfe:	mov    bl,0x5c
   14001cd00:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001cd01:	call   rdi
   14001cd03:	ret    0xcf31
   14001cd06:	shl    BYTE PTR [rbp+0x2cd99e8b],1
   14001cd0c:	sbb    eax,0xb05bdeae
   14001cd11:	ret    0x9b64
   14001cd14:	es repnz movsxd ebp,esp
   14001cd18:	pushf  
   14001cd19:	movabs ds:0x6a9026d930a756a,eax
   14001cd22:	or     DWORD PTR [rdi+rdi*1-0x7a14f1ca],ebx
   14001cd29:	addr32 (bad) 
   14001cd2b:	jb     0x14001cd40
   14001cd2d:	push   rdi
   14001cd2e:	add    BYTE PTR [rip+0xffffffff95bf4a82],al        # 0xd5c117b6
   14001cd34:	adc    al,0x7a
   14001cd36:	mov    eax,0xb12baee2
   14001cd3b:	jnp    0x14001cd75
   14001cd3d:	sbb    esi,DWORD PTR [rsi-0x2d7164f4]
   14001cd43:	xchg   edx,eax
   14001cd44:	or     eax,0xb7e5d5be
   14001cd49:	out    dx,eax
   14001cd4a:	fdivr  QWORD PTR [rcx+riz*1-0x21]
   14001cd4e:	fisttp DWORD PTR [rbx]
   14001cd50:	(bad)  
   14001cd51:	rcl    bl,cl
   14001cd53:	xchg   BYTE PTR [rdx-0x1e],al
   14001cd56:	(bad)  
   14001cd57:	icebp  
   14001cd58:	clc    
   14001cd59:	mov    bl,0xdd
   14001cd5b:	push   0x1fda836e
   14001cd60:	int    0x16
   14001cd62:	mov    esi,0xb9265b81
   14001cd67:	mul    cl
   14001cd69:	ja     0x14001cd1b
   14001cd6b:	outs   dx,DWORD PTR ds:[rsi]
   14001cd6c:	ja     0x14001cdb5
   14001cd6e:	mov    bh,0x18
   14001cd70:	out    0x5a,al
   14001cd72:	or     BYTE PTR [rax-0xf09590],cl
   14001cd78:	retf   0x63b
   14001cd7b:	pop    sp
   14001cd7d:	or     eax,DWORD PTR [rcx]
   14001cd7f:	adc    edi,edi
   14001cd81:	sahf   
   14001cd82:	(bad)
   14001cd87:	clc    
   14001cd88:	sar    edi,cl
   14001cd8a:	imul   esp,DWORD PTR [rcx+0x45],0xffffffcf
   14001cd8e:	ins    BYTE PTR es:[rdi],dx
   14001cd8f:	(bad)  
   14001cd90:	js     0x14001cd74
   14001cd92:	or     ah,BYTE PTR [rax-0x28f22d12]
   14001cd98:	push   rsp
   14001cd99:	add    DWORD PTR [rsi+rcx*2],0xffffffc2
   14001cd9d:	mov    bl,0x3
   14001cd9f:	cmp    DWORD PTR [rcx+0x26],esp
   14001cda2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
   14001cda4:	not    DWORD PTR [rsi]
   14001cda6:	(bad)  
   14001cda7:	ror    BYTE PTR [rbp+0x47],1
   14001cdaa:	imul   ecx,DWORD PTR [rcx-0x25],0x4a3e6e77
   14001cdb1:	push   0xffffffffffffffd1
   14001cdb3:	scas   al,BYTE PTR es:[rdi]
   14001cdb4:	fcomp  QWORD PTR [rdx-0x2a]
   14001cdb7:	fldenv [rsi+0xb]
   14001cdba:	fild   WORD PTR [rax-0x10]
   14001cdbd:	cmp    ebx,eax
   14001cdbf:	(bad)  
   14001cdc0:	push   rbx
   14001cdc1:	scas   al,BYTE PTR es:[rdi]
   14001cdc2:	mov    esp,0xbb9ec5a9
   14001cdc7:	fidivr WORD PTR [rdi-0x31]
   14001cdca:	mov    dl,0x47
   14001cdcc:	jmp    0x15c3283d0
   14001cdd1:	repnz mov ebp,0xbac28abd
   14001cdd7:	retf   0x9330
   14001cdda:	mov    bl,0x53
   14001cddc:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001cddd:	movabs ds:0x693bad0360524b4,eax
   14001cde6:	xlat   BYTE PTR ds:[rbx]
   14001cde7:	int    0x29
   14001cde9:	push   rdi
   14001cdea:	ficom  WORD PTR [rdi+rdi*4+0x67]
   14001cdee:	fldenv [rbx]
   14001cdf0:	cs jp  0x14001ce59
   14001cdf3:	mov    bl,0xb8
   14001cdf5:	rex.WX (bad) 
   14001cdf7:	(bad)
   14001cdfb:	pop    rbp
   14001cdfc:	xchg   esp,eax
   14001cdfd:	sub    ebp,DWORD PTR [rdi+0x2a]
   14001ce00:	(bad)  
   14001ce01:	mov    esi,0x8ea1b40b
   14001ce06:	or     al,0xc3
   14001ce08:	sbb    ebx,edi
   14001ce0a:	add    eax,0x2ef8d5a
   14001ce0f:	sub    eax,0x0
   14001ce14:	xor    DWORD PTR [r11],ebx
   14001ce17:	sbb    DWORD PTR [rdx-0x3ccdc99e],eax
   14001ce1d:	push   rbx
   14001ce1e:	sub    eax,0x6cc5042b
   14001ce23:	fs rex.RB hlt 
   14001ce26:	ja     0x14001cea5
   14001ce28:	xchg   BYTE PTR [rdi-0x6938a9a6],ah
   14001ce2e:	rex.B
   14001ce2f:	rex.WRXB or BYTE PTR [r10-0x44b63727],r9b
   14001ce36:	ret    0x8ad1
   14001ce39:	call   0x119cdc92d
   14001ce3e:	hlt    
   14001ce3f:	jrcxz  0x14001ce4d
   14001ce41:	rex.WRXB mov r13b,0xac
   14001ce44:	rex.WRB jle 0x14001cdf5
   14001ce47:	mov    ch,0x8e
   14001ce49:	sub    eax,0x1ccf9e83
   14001ce4e:	cwde   
   14001ce4f:	xchg   DWORD PTR [rcx+0x12],edx
   14001ce52:	ret    0x104a
   14001ce55:	and    ebx,ecx
   14001ce57:	push   rbx
   14001ce58:	shl    DWORD PTR [rax-0xc],cl
   14001ce5b:	js     0x14001cdef
   14001ce5d:	rex.B out dx,eax
   14001ce5f:	(bad)  
   14001ce60:	push   rbp
   14001ce61:	xlat   BYTE PTR ds:[rbx]
   14001ce62:	scas   al,BYTE PTR es:[rdi]
   14001ce63:	cs adc al,0xe6
   14001ce66:	mov    ch,0x37
   14001ce68:	xlat   BYTE PTR ds:[rbx]
   14001ce69:	mov    ch,0x98
   14001ce6b:	sbb    al,0x96
   14001ce6d:	test   BYTE PTR [rbx+0x1b985905],al
   14001ce73:	(bad)  
   14001ce74:	sbb    BYTE PTR [rcx-0x5246500],ch
   14001ce7a:	sub    eax,0x36cb9ab0
   14001ce7f:	test   eax,0xe6775d5d
   14001ce84:	sbb    al,0x6c
   14001ce86:	ins    BYTE PTR es:[rdi],dx
   14001ce87:	(bad)  
   14001ce88:	fistp  QWORD PTR [rdi]
   14001ce8a:	rex.B (bad) 
   14001ce8c:	sahf   
   14001ce8d:	(bad)  
   14001ce8e:	pop    rdx
   14001ce8f:	int    0xa2
   14001ce91:	and    al,0x84
   14001ce93:	xchg   ebp,eax
   14001ce94:	jrcxz  0x14001ceab
   14001ce96:	lahf   
   14001ce97:	mov    WORD PTR [rax],fs
   14001ce99:	rex.RX mov dl,0xa7
   14001ce9c:	(bad)  
   14001ce9d:	ja     0x14001ce48
   14001ce9f:	mov    esi,0xf1e8e1a6
   14001cea4:	out    0xd0,eax
   14001cea6:	repz call 0x103e051d0
   14001ceac:	gs mov dl,0xc5
   14001ceaf:	fisubr DWORD PTR [rdx-0x14a2a252]
   14001ceb5:	lahf   
   14001ceb6:	rex.RX
   14001ceb7:	sub    spl,r9b
   14001ceba:	imul   ebp,DWORD PTR [rdi+0x69],0xfffffffd
   14001cebe:	jo     0x14001cf36
   14001cec0:	scas   al,BYTE PTR es:[rdi]
   14001cec1:	imul   esi,DWORD PTR [rcx],0x39
   14001cec4:	out    dx,eax
   14001cec5:	pop    rdx
   14001cec6:	sub    ah,BYTE PTR [rax]
   14001cec8:	sub    al,0x9
   14001ceca:	(bad)  
   14001cecb:	or     ebp,DWORD PTR [rbp+0x38]
   14001cece:	sbb    al,0x12
   14001ced0:	repz rex.RX fbstp TBYTE PTR ss:[rdx+0x71c65d07]
   14001ced9:	push   rsp
   14001ceda:	jo     0x14001cec9
   14001cedc:	xor    BYTE PTR [rbp+0x6b],ah
   14001cedf:	hlt    
   14001cee0:	div    ebx
   14001cee2:	sub    bh,BYTE PTR [rbx-0x5dce3d4a]
   14001cee8:	jne    0x14001ce7b
   14001ceea:	sbb    al,0x89
   14001ceec:	xor    al,0xa0
   14001ceee:	(bad)  
   14001ceef:	nop
   14001cef0:	sti    
   14001cef1:	mov    esp,0x8dba179f
   14001cef6:	test   BYTE PTR [rsi],cl
   14001cef8:	jns    0x14001ced8
   14001cefa:	test   eax,0xb2ef3825
   14001ceff:	cmp    al,0xff
   14001cf01:	jns    0x14001cef6
   14001cf03:	jae    0x14001cec3
   14001cf05:	call   0x1051d4c75
   14001cf0b:	rex.B cmp al,0x2a
   14001cf0e:	ficomp WORD PTR [rax+0x5]
   14001cf11:	rex.WRXB jns 0x14001cf04
   14001cf14:	rex.R jle 0x14001cf79
   14001cf17:	jmp    0x10250fca3
   14001cf1c:	(bad)  
   14001cf1d:	sbb    al,0x54
   14001cf1f:	fild   DWORD PTR [rcx]
   14001cf21:	mov    dl,BYTE PTR [rip+0xebb4094]        # 0x14ebd0fbb
   14001cf27:	lea    eax,[rbx-0x3d59dc18]
   14001cf2d:	fnstcw WORD PTR [rax]
   14001cf2f:	mov    edi,0x38a0c50d
   14001cf34:	rex.WR hlt 
   14001cf36:	mov    ebx,0x96a78f21
   14001cf3b:	or     cl,dh
   14001cf3d:	xchg   esi,eax
   14001cf3e:	lea    edx,[rbx]
   14001cf40:	or     DWORD PTR [rax],eax
   14001cf42:	int3   
   14001cf43:	pop    rsp
   14001cf44:	xor    rdi,rdx
   14001cf47:	mov    r12d,DWORD PTR [r10-0x6]
   14001cf4b:	outs   dx,BYTE PTR ds:[rsi]
   14001cf4c:	retf   0xe153
   14001cf4f:	ja     0x14001cfa5
   14001cf51:	pop    rbp
   14001cf52:	mov    ebx,0xa06c15ba
   14001cf57:	movabs ds:0x91960e97888d3fd6,eax
   14001cf60:	push   rax
   14001cf61:	cwde   
   14001cf62:	xlat   BYTE PTR ds:[rbx]
   14001cf63:	ficom  WORD PTR [rcx]
   14001cf65:	test   eax,0xfad2c7cc
   14001cf6a:	loope  0x14001cf58
   14001cf6c:	xchg   ebx,eax
   14001cf6d:	retf   
   14001cf6e:	cli    
   14001cf6f:	cmc    
   14001cf70:	pop    rsp
   14001cf71:	xlat   BYTE PTR ds:[rbx]
   14001cf72:	(bad)
   14001cf77:	imul   ebx,esi,0xffffffb5
   14001cf7a:	push   rsp
   14001cf7b:	rex lahf 
   14001cf7d:	test   BYTE PTR [rdi+0x59],cl
   14001cf80:	pop    rax
   14001cf81:	adc    cl,BYTE PTR [rsi]
   14001cf83:	(bad)  
   14001cf84:	sbb    DWORD PTR [rbx],esp
   14001cf86:	adc    eax,0x3870da0f
   14001cf8b:	and    al,0x9b
   14001cf8d:	and    edi,DWORD PTR [rip+0x65fd6ba7]        # 0x1a5ff3b3b
   14001cf94:	out    0x5a,al
   14001cf96:	out    0x7c,al
   14001cf98:	and    eax,0x6457cb09
   14001cf9d:	cmp    al,dl
   14001cf9f:	rex.WRX movabs ds:0x21188a9fe20191ae,rax
   14001cfa9:	int3   
   14001cfaa:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001cfab:	xor    esp,DWORD PTR [rax-0x3]
   14001cfae:	mov    esp,0x24e1af2a
   14001cfb3:	lods   eax,DWORD PTR ds:[rsi]
   14001cfb4:	out    dx,al
   14001cfb5:	sar    BYTE PTR [rdi],1
   14001cfb7:	mov    ah,0x2d
   14001cfb9:	adc    DWORD PTR [rdx],0xffffff9f
   14001cfbc:	ins    BYTE PTR es:[rdi],dx
   14001cfbd:	mov    dl,0x9
   14001cfbf:	xchg   BYTE PTR [rbx-0x1536b7dc],ch
   14001cfc5:	adc    eax,0x4629d053
   14001cfca:	jle    0x14001cfc7
   14001cfcc:	push   0xfffffffff6e26577
   14001cfd1:	jns    0x14001d012
   14001cfd3:	(bad)  
   14001cfd4:	mov    bh,0x48
   14001cfd6:	and    al,0x36
   14001cfd8:	je     0x14001cff5
   14001cfda:	or     DWORD PTR [rip+0x4122a35],ebx        # 0x14413fa15
   14001cfe0:	repnz mov esp,0x8db34b53
   14001cfe6:	rex.W push rdx
   14001cfe8:	jo     0x14001cfc8
   14001cfea:	gs jns 0x14001d01e
   14001cfed:	out    dx,eax
   14001cfee:	jle    0x14001d050
   14001cff0:	(bad)  
   14001cff1:	repz out 0xe7,al
   14001cff4:	mov    edi,0x7cfefdc2
   14001cff9:	xchg   ecx,eax
   14001cffa:	rcl    ch,1
   14001cffc:	cmp    eax,0xfacccba0
   14001d001:	mov    al,BYTE PTR ss:[rbx-0x656ef845]
   14001d008:	js     0x14001d05e
   14001d00a:	mov    esp,0xa76539b1
   14001d00f:	test   al,0x4b
   14001d011:	cwde   
   14001d012:	cmp    DWORD PTR [rbx],0xa
   14001d015:	test   eax,0xfac92298
   14001d01a:	mov    ch,0x9
   14001d01c:	mov    bl,cl
   14001d01e:	scas   al,BYTE PTR es:[rdi]
   14001d01f:	adc    BYTE PTR [rdi+0x5d],cl
   14001d022:	out    dx,eax
   14001d023:	pop    rdi
   14001d024:	(bad)  
   14001d025:	ins    BYTE PTR es:[rdi],dx
   14001d026:	hlt    
   14001d027:	rex.RX int 0x3f
   14001d02a:	fldcw  WORD PTR [rbp-0x74]
   14001d02d:	(bad)  
   14001d02e:	ret    0x4374
   14001d031:	adc    bl,BYTE PTR [rdx-0xd]
   14001d034:	add    ah,BYTE PTR [rbx]
   14001d036:	rex.B (bad) 
   14001d038:	shl    DWORD PTR [rax+0x6c],0xc1
   14001d03c:	add    BYTE PTR [rcx+0x77],0xd8
   14001d040:	rex.RXB xlat BYTE PTR ds:[rbx]
   14001d042:	ss xchg edi,eax
   14001d044:	(bad)  
   14001d045:	out    0x2d,al
   14001d047:	mov    es,ebp
   14001d049:	mov    ch,0x0
   14001d04b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001d04c:	test   BYTE PTR [rbx+rbx*1+0x418a1abc],al
   14001d053:	jno    0x14001d0b0
   14001d055:	mov    ebx,0xe898685a
   14001d05a:	ja     0x14001d09f
   14001d05c:	(bad)  
   14001d05e:	ins    BYTE PTR es:[rdi],dx
   14001d05f:	pop    rdx
   14001d060:	(bad)  
   14001d061:	rex.WRXB sub rax,0x367e5f15
   14001d067:	or     al,0x9c
   14001d069:	sub    eax,0x1cdd271b
   14001d06e:	add    BYTE PTR [rsi],bh
   14001d070:	adc    al,BYTE PTR [rax]
   14001d072:	cwde   
   14001d073:	mov    ecx,0xa0833153
   14001d078:	nop
   14001d079:	(bad)  
   14001d07a:	scas   al,BYTE PTR es:[rdi]
   14001d07b:	mov    edx,ecx
   14001d07d:	push   rbx
   14001d07e:	mov    ch,0x92
   14001d080:	(bad)  
   14001d081:	(bad)
   14001d084:	push   rdi
   14001d085:	hlt    
   14001d086:	out    dx,eax
   14001d087:	(bad)  
   14001d088:	xchg   esp,eax
   14001d089:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001d08a:	ret    0xd5ef
   14001d08d:	xchg   esi,eax
   14001d08e:	fdecstp 
   14001d090:	jmp    0xe8afd851
   14001d095:	lea    ebx,[rdi+rsi*4]
   14001d098:	imul   ebx,esi,0x31
   14001d09b:	pushf  
   14001d09c:	sub    ch,bh
   14001d09e:	sub    al,BYTE PTR [rbp-0x35948613]
   14001d0a4:	lods   al,BYTE PTR ds:[rsi]
   14001d0a5:	rex.W jo 0x14001d07b
   14001d0a8:	outs   dx,DWORD PTR ds:[rsi]
   14001d0a9:	sbb    ebx,DWORD PTR [rbp-0x8]
   14001d0ac:	sub    al,BYTE PTR cs:[rsi-0x1f]
   14001d0b0:	loope  0x14001d0e8
   14001d0b2:	fisub  WORD PTR [rsi-0x60]
   14001d0b5:	(bad)  
   14001d0b6:	(bad)  
   14001d0b9:	push   rsp
   14001d0ba:	call   0x13366f313
   14001d0bf:	rex.WRB in eax,0xf3
   14001d0c2:	mov    dl,0x2
   14001d0c4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001d0c5:	ret    0x1ba9
   14001d0c8:	addr32 xchg ecx,eax
   14001d0ca:	test   BYTE PTR [rax],dh
   14001d0cc:	movabs al,es:0x9ff9e4c5aeb8299f
   14001d0d6:	fdivp  st(5),st
   14001d0d8:	cmp    cl,ah
   14001d0da:	repz (bad) 
   14001d0dc:	jnp    0x14001d0db
   14001d0de:	call   0xe96d8db2
   14001d0e3:	cmp    ch,0x5a
   14001d0e6:	mov    dl,0x99
   14001d0e8:	or     DWORD PTR ds:[rdi-0x7bc7804e],ebx
   14001d0ef:	stos   DWORD PTR es:[rdi],eax
   14001d0f0:	mov    al,0x24
   14001d0f2:	sbb    al,0x2c
   14001d0f4:	icebp  
   14001d0f5:	adc    eax,0x46323507
   14001d0fa:	sub    bl,BYTE PTR [rsi]
   14001d0fc:	jae    0x14001d175
   14001d0fe:	xor    DWORD PTR [rdi],eax
   14001d100:	mov    ah,0xe1
   14001d102:	jo     0x14001d14c
   14001d104:	cmc    
   14001d105:	shr    BYTE PTR [rbx+0x51],1
   14001d108:	add    DWORD PTR ss:[rsi+0x7a],0x77
   14001d10d:	mov    dl,0x5d
   14001d10f:	movsxd ecx,DWORD PTR [rsi-0x29]
   14001d112:	cli    
   14001d113:	retf   
   14001d114:	(bad)  
   14001d116:	loope  0x14001d0ea
   14001d118:	int3   
   14001d119:	mov    ch,0xcc
   14001d11b:	stc    
   14001d11c:	lea    eax,[rdi+rdx*8-0x69edb520]
   14001d123:	scas   eax,DWORD PTR es:[rdi]
   14001d124:	or     esp,DWORD PTR [rbx]
   14001d126:	lea    esi,[rsi-0x625f8f38]
   14001d12c:	mov    DWORD PTR [rcx-0x45],eax
   14001d12f:	test   BYTE PTR [rsi+0x5d],al
   14001d132:	and    eax,DWORD PTR [rbx]
   14001d134:	(bad)  
   14001d135:	ins    BYTE PTR es:[rdi],dx
   14001d136:	cmp    BYTE PTR [rdx],bl
   14001d138:	(bad)  
   14001d139:	(bad)  
   14001d13a:	adc    eax,0xe0e8531
   14001d13f:	sub    BYTE PTR [rdx-0x68],al
   14001d142:	rex.WRXB
   14001d143:	add    ebp,DWORD PTR [ecx-0x53f81ac]
   14001d14a:	jns    0x14001d1a1
   14001d14c:	or     ebx,0xc51f4c62
   14001d152:	cmp    BYTE PTR [rcx-0x67dc0ba2],al
   14001d158:	popf   
   14001d159:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001d15a:	(bad)  
   14001d15b:	mov    bl,0xdc
   14001d15d:	xchg   esi,eax
   14001d15e:	adc    eax,0x54001baa
   14001d163:	in     eax,0x5a
   14001d165:	xor    DWORD PTR [rdi-0x4],ecx
   14001d168:	cdq    
   14001d169:	vp4dpwssds zmm31{z},zmm5,(bad)
   14001d16a:	(bad)  
   14001d16b:	xlat   BYTE PTR ds:[rbx]
   14001d16c:	fcom   DWORD PTR [rbx+0x79]
   14001d16f:	(bad)  
   14001d170:	(bad)  
   14001d171:	rex.WRXB loope 0x14001d1bd
   14001d174:	push   rsi
   14001d175:	jle    0x14001d171
   14001d177:	push   rax
   14001d178:	xchg   ebp,eax
   14001d179:	sub    eax,0x1cd47bd7
   14001d17e:	int3   
   14001d17f:	(bad)  
   14001d181:	mov    cl,BYTE PTR [rbp-0x6944add3]
   14001d187:	xor    al,0x91
   14001d189:	call   0x119d1f149
   14001d18e:	movabs al,ds:0x65c2ad5e7ef3ec06
   14001d197:	rex.RXB outs dx,BYTE PTR ds:[rsi]
   14001d199:	xchg   ecx,eax
   14001d19a:	rex.W ins BYTE PTR es:[rdi],dx
   14001d19c:	(bad)  
   14001d19d:	movabs al,ds:0x7a93a1236e87553
   14001d1a6:	or     DWORD PTR [rbx],esp
   14001d1a8:	push   0x54
   14001d1aa:	and    al,0x8
   14001d1ac:	sub    esp,DWORD PTR [rbp+0x3f]
   14001d1af:	adc    esp,esp
   14001d1b1:	jns    0x14001d15a
   14001d1b3:	xchg   esi,eax
   14001d1b4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001d1b5:	movabs rsp,0x8a2a27a4911b668f
   14001d1bf:	mov    ebp,0xf2cbbce0
   14001d1c4:	movabs eax,ds:0x23c0fdde62ebd08d
   14001d1cd:	out    dx,eax
   14001d1ce:	out    0xd9,al
   14001d1d0:	mov    ebp,0xfc14bce1
   14001d1d5:	shl    BYTE PTR [rdi-0x757cc0f3],1
   14001d1db:	es jle 0x14001d190
   14001d1de:	xchg   ecx,eax
   14001d1df:	(bad)  
   14001d1e0:	mov    ecx,0xf870d024
   14001d1e5:	adc    eax,0x463b69cb
   14001d1ea:	out    0x42,al
   14001d1ec:	jp     0x14001d265
   14001d1ee:	std    
   14001d1ef:	pop    rbx
   14001d1f0:	mov    ch,0x6b
   14001d1f2:	gs fdivr st(4),st
   14001d1f5:	pop    rdx
   14001d1f6:	jle    0x14001d1bd
   14001d1f8:	(bad)  
   14001d1f9:	or     DWORD PTR [rbx-0x12],edx
   14001d1fc:	jbe    0x14001d236
   14001d1fe:	div    QWORD PTR [rcx-0xf47f652]
   14001d205:	lahf   
   14001d206:	adc    ah,BYTE PTR [rcx-0x75c033cd]
   14001d20c:	jb     0x14001d20b
   14001d20e:	and    al,0x93
   14001d210:	add    BYTE PTR [rax],al
   14001d212:	add    BYTE PTR [rax],al
   14001d214:	(bad)  
   14001d215:	push   0xffffffffffffffc2
   14001d217:	add    DWORD PTR [rsi-0x2c],ebp
   14001d21a:	test   BYTE PTR [rbx],al
   14001d21c:	pop    rcx
   14001d21d:	mov    esi,0xa8dc0246
   14001d222:	or     DWORD PTR [rdi],eax
   14001d224:	jmp    0x14001d1e8
   14001d226:	retf   
   14001d227:	(bad)  
   14001d228:	mov    dl,0x7c
   14001d22a:	lea    eax,[rax*4-0x47fab0ea]
   14001d231:	push   rcx
   14001d232:	adc    ecx,DWORD PTR [rsi]
   14001d234:	(bad)  
   14001d235:	cmp    edx,ecx
   14001d237:	(bad)  
   14001d239:	test   DWORD PTR [rdi+0x55efe10d],edx
   14001d23f:	or     al,0x64
   14001d241:	stc    
   14001d242:	sbb    cl,BYTE PTR [rcx]
   14001d244:	push   rbx
   14001d245:	xchg   ebx,eax
   14001d246:	fmul   DWORD PTR [rax]
   14001d248:	or     ch,BYTE PTR [rip+0x473d0a9e]        # 0x1873edcec
   14001d24e:	pop    rsp
   14001d24f:	or     esi,DWORD PTR [rax-0x5d]
   14001d252:	es sbb al,0x47
   14001d255:	leave  
   14001d256:	in     al,0x1d
   14001d258:	(bad)  
   14001d259:	ja     0x14001d1fd
   14001d25b:	(bad)  
   14001d25c:	sub    DWORD PTR [rip+0xbac1e60],ebx        # 0x14badf0c2
   14001d262:	(bad)  
   14001d263:	sbb    ebx,DWORD PTR [rbx-0x3de5129f]
   14001d269:	fild   QWORD PTR [rbx+0x69b5f518]
   14001d26f:	sbb    eax,ecx
   14001d271:	repnz xor eax,0xf798ff12
   14001d277:	adc    esp,DWORD PTR [rsi-0x6eee4eda]
   14001d27d:	rex.WR jae 0x14001d290
   14001d280:	adc    al,0x5a
   14001d282:	cmp    al,0x15
   14001d284:	and    esi,DWORD PTR [rax]
   14001d286:	(bad)  
   14001d287:	adc    al,0x7a
   14001d289:	mov    ?,WORD PTR [rax+0x7ae44d16]
   14001d28f:	(bad)  
   14001d290:	loopne 0x14001d2d8
   14001d292:	rex.WRB cmp r15b,r10b
   14001d295:	sub    al,0x8f
   14001d297:	cmp    DWORD PTR [rsi-0x46c4366e],ecx
   14001d29d:	clc    
   14001d29e:	or     edi,DWORD PTR [rdx]
   14001d2a0:	cmp    al,0xee
   14001d2a2:	rex.R (bad) 
   14001d2a4:	or     eax,DWORD PTR [rsi+rax*4-0x3fc5adc2]
   14001d2ab:	cmp    al,0x65
   14001d2ad:	push   rax
   14001d2ae:	add    bh,BYTE PTR [rip+0x365e1758]        # 0x1765fea0c
   14001d2b4:	outs   dx,DWORD PTR ds:[rsi]
   14001d2b5:	jge    0x14001d253
   14001d2b7:	(bad)  
   14001d2b8:	ss ret 
   14001d2ba:	fidiv  DWORD PTR [rip+0x3418a901]        # 0x1741a7bc1
   14001d2c0:	test   BYTE PTR [rdi-0x2a4ccea9],bh
   14001d2c6:	xchg   ebp,eax
   14001d2c7:	xor    dl,ch
   14001d2c9:	imul   edx,ebx,0x32
   14001d2cc:	fld    QWORD PTR [rcx]
   14001d2ce:	adc    DWORD PTR [rbx],esi
   14001d2d0:	nop
   14001d2d1:	in     eax,0x6b
   14001d2d3:	and    al,0xa7
   14001d2d5:	(bad)
   14001d2d9:	xor    edi,ebp
   14001d2db:	(bad)  
   14001d2dc:	leave  
   14001d2dd:	pop    rbx
   14001d2de:	sub    eax,0x624d4c26
   14001d2e3:	and    edi,DWORD PTR [rbx+0x27]
   14001d2e6:	movabs al,ds:0x24f31520e6992222
   14001d2ef:	and    DWORD PTR [rax],ebp
   14001d2f1:	mov    ah,0x78
   14001d2f3:	sub    bl,BYTE PTR [rdi]
   14001d2f5:	fidivr WORD PTR [rdx-0x39fb9d5]
   14001d2fb:	sub    DWORD PTR [rcx+0xa],esi
   14001d2fe:	ds sub ah,dh
   14001d301:	sbb    al,0x71
   14001d303:	sub    eax,0x2cb376c3
   14001d308:	(bad)  
   14001d309:	enter  0x2ef5,0xad
   14001d30d:	movabs ds:0xe7f7709a8dc02f37,al
   14001d316:	pop    rax
   14001d317:	jno    0x14001d2c7
   14001d319:	pop    rcx
   14001d31a:	(bad)  
   14001d31b:	jae    0x14001d2b6
   14001d31d:	xor    ebx,esp
   14001d31f:	jb     0x14001d33d
   14001d321:	and    eax,0x4f2b7793
   14001d326:	push   rcx
   14001d327:	jbe    0x14001d39b
   14001d329:	icebp  
   14001d32a:	(bad)  
   14001d32b:	je     0x14001d372
   14001d32d:	fwait
   14001d32e:	(bad)  
   14001d32f:	jne    0x14001d3a9
   14001d331:	fmul   QWORD PTR [rcx+0x4bb64f7e]
   14001d337:	jg     0x14001d34f
   14001d339:	or     BYTE PTR [rip+0xffffffffcf62217d],cl        # 0x10f63f4bc
   14001d33f:	jl     0x14001d2e5
   14001d341:	je     0x14001d2c3
   14001d343:	jns    0x14001d2d8
   14001d345:	(bad)  
   14001d346:	rex.X js 0x14001d313
   14001d349:	movabs al,ds:0x2eb07bc6cafd7a04
   14001d352:	mov    esp,0x7e44876c
   14001d357:	ins    DWORD PTR es:[rdi],dx
   14001d358:	fdivp  st(2),st
   14001d35a:	cmp    BYTE PTR [rdi-0x17],ch
   14001d35d:	nop
   14001d35e:	cli    
   14001d35f:	outs   dx,BYTE PTR ds:[rsi]
   14001d360:	ins    BYTE PTR es:[rdi],dx
   14001d361:	xchg   BYTE PTR [rbp+0x77ec5b6b],dh
   14001d367:	push   0x2
   14001d369:	push   rdx
   14001d36a:	xor    DWORD PTR [rax+0x35],ebp
   14001d36d:	cmp    bl,dh
   14001d36f:	imul   ecx,DWORD PTR [rax],0x3f62af7f
   14001d375:	adc    eax,0xab66636d
   14001d37a:	sub    esp,DWORD PTR [rcx+0x51]
   14001d37d:	shr    ecx,0x60
   14001d380:	(bad)  
   14001d381:	xlat   BYTE PTR ds:[rbx]
   14001d382:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001d383:	gs jrcxz 0x14001d343
   14001d386:	fs fs mov edx,0x8d662203
   14001d38d:	imul   esp,eax,0xd7cb2067
   14001d393:	rex.W (bad) 
   14001d395:	movabs eax,ds:0x75794b531f4e4915
   14001d39e:	xchg   ecx,eax
   14001d39f:	rex.WX cld 
   14001d3a1:	movsxd ebx,esi
   14001d3a3:	rex.WRXB retf 
   14001d3a5:	or     DWORD PTR [rsi+rcx*2],ebx
   14001d3a8:	xchg   edx,eax
   14001d3a9:	mov    bh,0x5a
   14001d3ab:	rex.WR movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14001d3ad:	fstp   QWORD PTR [rax-0x3b6567b3]
   14001d3b3:	rex.RX scas eax,DWORD PTR es:[rdi]
   14001d3b5:	lock (bad) 
   14001d3b7:	rex.RXB test BYTE PTR [r14+0x40],0x45
   14001d3bc:	shl    DWORD PTR [rdx+rax*4],0x44
   14001d3c0:	xor    r9b,bpl
   14001d3c3:	rex.B jae 0x14001d41e
   14001d3c6:	cmovo  ebp,DWORD PTR [rdx]
   14001d3c9:	out    0x49,al
   14001d3cb:	rex.X sbb eax,0x50438b8c
   14001d3d1:	push   0x26754f1
   14001d3d6:	xor    edx,DWORD PTR [rbp+0x3e]
   14001d3d9:	mov    esp,0xd6095775
   14001d3de:	mov    bh,0x56
   14001d3e0:	mov    eax,es
   14001d3e2:	clc    
   14001d3e3:	push   rbx
   14001d3e4:	mov    ebx,0xe2523aaa
   14001d3e9:	adc    al,0x7c
   14001d3eb:	push   rax
   14001d3ec:	(bad)  
   14001d3ed:	jle    0x14001d3ad
   14001d3ef:	push   rcx
   14001d3f0:	call   0x11f5cb62e
   14001d3f5:	push   rbx
   14001d3f6:	and    BYTE PTR [rbx-0x7a],bl
   14001d3f9:	in     eax,dx
   14001d3fa:	pop    cx
   14001d3fc:	mov    cl,0x87
   14001d3fe:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001d3ff:	pop    rax
   14001d400:	xor    al,0x91
   14001d402:	jmp    0x14001d461
   14001d404:	add    edi,ebx
   14001d406:	sub    DWORD PTR [rdx+rbx*2+0x45],ebx
   14001d40a:	outs   dx,DWORD PTR ds:[rsi]
   14001d40b:	pop    rsi
   14001d40c:	ins    DWORD PTR es:[rdi],dx
   14001d40d:	(bad)  
   14001d40e:	lods   eax,DWORD PTR ds:[rsi]
   14001d40f:	pop    rdi
   14001d410:	sbb    BYTE PTR [rbx],0x35
   14001d413:	loope  0x14001d3cc
   14001d415:	jno    0x14001d40e
   14001d417:	loopne 0x14001d407
   14001d419:	iret   
   14001d41a:	mov    cl,0xe2
   14001d41c:	fldenv [rbp-0x4ca31c8d]
   14001d422:	cmp    al,0xe6
   14001d424:	imul   ebx,ecx,0xfffffffe
   14001d427:	out    0x32,eax
   14001d429:	addr32 mov eax,0x7a0d05e5
   14001d42f:	in     al,0x38
   14001d431:	rex.WX
   14001d432:	es out dx,eax
   14001d434:	mov    rsp,cr4
   14001d437:	out    dx,al
   14001d438:	push   rsi
   14001d439:	sahf   
   14001d43a:	movabs ds:0x2fe2e4ed60f461ec,al
   14001d443:	call   0x129ef5d1b
   14001d448:	mov    dh,BYTE PTR [rsi]
   14001d44a:	stos   DWORD PTR es:[rdi],eax
   14001d44b:	jmp    0x14001d40a
   14001d44d:	pop    rsp
   14001d44e:	imul   ebp,edx,0xfd13b8f0
   14001d454:	(bad)  
   14001d455:	rcl    cl,cl
   14001d457:	cld    
   14001d458:	sahf   
   14001d459:	ins    BYTE PTR es:[rdi],dx
   14001d45a:	xchg   edi,eax
   14001d45b:	(bad)  
   14001d45c:	test   eax,0x2cff5506
   14001d461:	adc    BYTE PTR [rdx],bl
   14001d463:	cli    
   14001d464:	sbb    edi,DWORD PTR [rdx-0x28]
   14001d467:	sti    
   14001d468:	rex.X (bad) 
   14001d46a:	sahf   
   14001d46b:	stc    
   14001d46c:	jne    0x14001d41c
   14001d46e:	pop    rsp
   14001d46f:	clc    
   14001d470:	jmp    0xc381c776
   14001d476:	ret    0x26f2
   14001d479:	cmp    eax,0x5711f084
   14001d47e:	rex.RX icebp 
   14001d480:	xchg   esp,eax
   14001d481:	or     r12d,esi
   14001d484:	movabs ds:0xcdf78d95faf5cb2b,eax
   14001d48d:	dec    DWORD PTR [rdi-0xa]
   14001d490:	(bad)  
   14001d491:	pop    rbp
   14001d492:	js     0x14001d46d
   14001d494:	push   rdi
   14001d495:	(bad)  
   14001d496:	mov    edx,0xfc890ed8
   14001d49b:	fidivr DWORD PTR [rcx]
   14001d49d:	jrcxz  0x14001d4dd
   14001d49f:	fstp   TBYTE PTR [rbp+rsi*8-0x6074218f]
   14001d4a6:	mov    bl,0xdf
   14001d4a8:	shl    BYTE PTR [rcx],cl
   14001d4aa:	cmc    
   14001d4ab:	fucom  st(5)
   14001d4ad:	rex.WXB (bad) 
   14001d4af:	(bad)  
   14001d4b1:	or     al,0x6b
   14001d4b3:	xlat   BYTE PTR ds:[rbx]
   14001d4b4:	out    dx,eax
   14001d4b5:	test   ax,0xb6d6
   14001d4b9:	fsubr  st,st(7)
   14001d4bb:	(bad)  
   14001d4bc:	xor    DWORD PTR [rdx-0x5bfb2ad3],0xce33d062
   14001d4c6:	movabs al,ds:0x241a5dd3e6706ad1
   14001d4cf:	rcl    BYTE PTR [rax],cl
   14001d4d1:	(bad)  
   14001d4d2:	pop    rsi
   14001d4d3:	(bad)
   14001d4d6:	pushf  
   14001d4d7:	(bad)  
   14001d4d8:	jle    0x14001d504
   14001d4da:	fcmovb st,st(6)
   14001d4dc:	rex.WB
   14001d4dd:	sbb    dil,al
   14001d4e0:	int3   
   14001d4e1:	push   rsi
   14001d4e2:	push   rdi
   14001d4e3:	ret    0x3cfb
   14001d4e6:	xchg   ebp,eax
   14001d4e7:	ret    
   14001d4e8:	movabs ds:0xa8c011e895c1d382,al
   14001d4f1:	scas   eax,DWORD PTR es:[rdi]
   14001d4f2:	rex.WRB retf 
   14001d4f4:	lahf   
   14001d4f5:	(bad)
   14001d4f8:	(bad)  
   14001d4f9:	jnp    0x14001d4c4
   14001d4fb:	enter  0x11f1,0xb
   14001d4ff:	leave  
   14001d500:	je     0x14001d509
   14001d502:	rex.R int3 
   14001d504:	rex.XB ins DWORD PTR es:[rdi],dx
   14001d506:	xchg   ch,cl
   14001d508:	sbb    dl,bl
   14001d50a:	ror    bh,0x2d
   14001d50d:	mov    ecx,0x9640ce02
   14001d512:	scas   eax,DWORD PTR es:[rdi]
   14001d513:	xchg   ecx,eax
   14001d514:	ja     0x14001d512
   14001d516:	ins    DWORD PTR es:[rdi],dx
   14001d517:	nop
   14001d518:	rex.X sub edx,DWORD PTR cs:[rdx-0x6c16d7e7]
   14001d520:	pushf  
   14001d521:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001d523:	xchg   esi,eax
   14001d524:	stos   DWORD PTR es:[rdi],eax
   14001d525:	push   rsp
   14001d526:	fs xchg edi,eax
   14001d528:	repnz (bad) 
   14001d52a:	and    dl,BYTE PTR [rbp-0x6b1f7f3b]
   14001d530:	clc    
   14001d531:	(bad)  
   14001d532:	mov    esp,0x7eadcf9f
   14001d537:	sahf   
   14001d538:	xchg   esi,eax
   14001d539:	adc    edi,DWORD PTR [rax]
   14001d53b:	pushf  
   14001d53c:	movabs eax,ds:0x1398b56f249dfa79
   14001d545:	add    eax,0xbb4a9977
   14001d54a:	xor    DWORD PTR [rbx-0x650c2e83],ebx
   14001d550:	xor    BYTE PTR [rip+0x5f078d89],dh        # 0x19f0962df
   14001d556:	rex.WXB mov WORD PTR [r14-0x1f],ds
   14001d55a:	or     eax,0xcf8b698e
   14001d55f:	(bad)  
   14001d560:	in     al,dx
   14001d561:	popf   
   14001d562:	or     BYTE PTR [rdx-0x74bd0825],0x82
   14001d569:	rex.WB add al,0x89
   14001d56c:	mov    ch,0x23
   14001d56e:	(bad)  
   14001d56f:	mov    BYTE PTR [rax-0x407c659c],cl
   14001d575:	(bad)  
   14001d576:	pop    rax
   14001d577:	(bad)  
   14001d578:	out    0xb0,al
   14001d57a:	(bad)  
   14001d57b:	adc    cl,0xda
   14001d57e:	fadd   QWORD PTR [rcx-0x7b6c33ac]
   14001d584:	movsxd esp,DWORD PTR [rsi+0x183a8551]
   14001d58a:	(bad)  
   14001d58b:	xchg   DWORD PTR [rip+0xffffffffa086d572],ecx        # 0xe088ab03
   14001d591:	shl    dl,1
   14001d593:	test   eax,0xa820ba97
   14001d598:	(bad)  
   14001d599:	add    al,0x66
   14001d59b:	stos   BYTE PTR es:[rdi],al
   14001d59c:	stc    
   14001d59d:	outs   dx,BYTE PTR ds:[rsi]
   14001d59e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001d59f:	stos   DWORD PTR es:[rdi],eax
   14001d5a0:	jl     0x14001d61a
   14001d5a2:	jmp    0x14001d552
   14001d5a4:	rex.WXB adc bpl,BYTE PTR [r9]
   14001d5a7:	scas   eax,DWORD PTR es:[rdi]
   14001d5a8:	adc    ch,BYTE PTR [rdi+rbp*2-0x5239da53]
   14001d5af:	lods   al,BYTE PTR ds:[rsi]
   14001d5b0:	sbb    BYTE PTR [rcx-0x14d0580f],al
   14001d5b6:	xor    esp,DWORD PTR [rsi-0x5b8aaa8a]
   14001d5bc:	rex.B (bad) 
   14001d5be:	mov    bh,0xa5
   14001d5c0:	(bad)  
   14001d5c1:	sub    eax,edi
   14001d5c3:	movabs al,ds:0xa37cfdaaa13a43f3
   14001d5cc:	popf   
   14001d5cd:	xchg   edi,eax
   14001d5ce:	mov    esi,0xc473d0a2
   14001d5d3:	mov    ch,0xe7
   14001d5d5:	sbb    DWORD PTR [rsi],eax
   14001d5d7:	mov    ah,0xbe
   14001d5d9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001d5da:	mov    sil,0x89
   14001d5dd:	int    0x82
   14001d5df:	mov    bh,0xc
   14001d5e1:	fcmovne st,st(5)
   14001d5e3:	mov    dl,0x3b
   14001d5e5:	mov    cl,0xf
   14001d5e7:	mov    bl,0x62
   14001d5e9:	cmovns esi,DWORD PTR [rcx-0x4f749aab]
   14001d5f0:	push   0x5fbbd722
   14001d5f5:	adc    rax,0x53f606ba
   14001d5fb:	mov    eax,0xb9919c31
   14001d600:	mov    ah,0x8a
   14001d602:	fidivr WORD PTR [rbx+rax*4-0x2542e320]
   14001d609:	pop    rsi
   14001d60a:	pop    rdx
   14001d60b:	mov    edi,0xbe9834ed
   14001d610:	add    BYTE PTR [rax],al
   14001d612:	add    BYTE PTR [rax],al
   14001d614:	gs addr32 mov esp,0x9c88bb8
   14001d61b:	stos   BYTE PTR es:[rdi],al
   14001d61c:	out    dx,al
   14001d61d:	scas   eax,DWORD PTR es:[rdi]
   14001d61e:	mov    ch,0x12
   14001d620:	push   rdi
   14001d621:	xchg   edi,eax
   14001d622:	(bad)  
   14001d623:	(bad)  
   14001d624:	xor    dh,al
   14001d626:	fidiv  WORD PTR [rdi]
   14001d628:	fcomp  QWORD PTR [rdi+0x6b]
   14001d62b:	and    eax,0x9dd738b9
   14001d630:	out    dx,eax
   14001d631:	sub    BYTE PTR [rbp+rax*8+0x7d084f8a],dh
   14001d638:	fs loopne 0x14001d5f8
   14001d63b:	outs   dx,DWORD PTR ds:[rsi]
   14001d63c:	add    DWORD PTR [rdi-0x404728ff],eax
   14001d642:	(bad)  
   14001d643:	rex.WX fstp st(0)
   14001d646:	push   0xfffffffffffffff2
   14001d648:	xor    esi,DWORD PTR [rdi-0x21]
   14001d64b:	loopne 0x14001d6a3
   14001d64d:	adc    BYTE PTR [rbx+0x58],ah
   14001d650:	lahf   
   14001d651:	push   rdi
   14001d652:	sbb    DWORD PTR [rax-0x6],edx
   14001d655:	xor    BYTE PTR [rbp+0x109f14e8],ah
   14001d65b:	cli    
   14001d65c:	jno    0x14001d656
   14001d65e:	lods   al,BYTE PTR ds:[rsi]
   14001d65f:	rex.X enter 0x7bc0,0xdf
   14001d664:	lods   eax,DWORD PTR ds:[rsi]
   14001d665:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001d666:	(bad)  
   14001d667:	rex.XB or BYTE PTR [r10d+0x75],sil
   14001d66c:	outs   dx,DWORD PTR es:[rsi]
   14001d66e:	(bad)  
   14001d66f:	int    0x70
   14001d671:	jg     0x14001d620
   14001d673:	xchg   ebp,eax
   14001d674:	adc    eax,0xfb2d1118
   14001d679:	mov    bh,0xa4
   14001d67b:	(bad)  
   14001d67c:	sahf   
   14001d67d:	rcr    BYTE PTR [rax],1
   14001d67f:	xchg   DWORD PTR [rdi],esp
   14001d681:	call   0xcf43f155
   14001d686:	jae    0x14001d62a
   14001d688:	lods   al,BYTE PTR ds:[rsi]
   14001d689:	and    dh,al
   14001d68b:	mov    al,0xc9
   14001d68d:	rex.RXB jp 0x14001d698
   14001d690:	ds scas eax,DWORD PTR es:[rdi]
   14001d692:	xor    ah,BYTE PTR [rax+0x188ec85b]
   14001d698:	mov    ch,0x67
   14001d69a:	cmp    ecx,DWORD PTR [rdx]
   14001d69c:	rol    BYTE PTR [rax],1
   14001d69e:	xchg   DWORD PTR [rdx+0x2f503869],esi
   14001d6a4:	or     al,0x5f
   14001d6a6:	in     al,dx
   14001d6a7:	xchg   edi,eax
   14001d6a8:	loop   0x14001d69a
   14001d6aa:	pop    rcx
   14001d6ab:	test   DWORD PTR [rdi-0x2ec21a69],eax
   14001d6b1:	xchg   DWORD PTR [rsi+0x3ae0b465],eax
   14001d6b7:	fstp   QWORD PTR [rdx+0x4f]
   14001d6ba:	(bad)  
   14001d6bb:	iret   
   14001d6bc:	(bad)  
   14001d6bd:	sub    BYTE PTR [rbx],dh
   14001d6bf:	ja     0x14001d647
   14001d6c1:	adc    ah,ah
   14001d6c3:	(bad)  
   14001d6c4:	jrcxz  0x14001d73d
   14001d6c6:	pop    rax
   14001d6c7:	push   rdx
   14001d6c8:	or     eax,0x6840edd8
   14001d6cd:	mov    edi,0xf8a1f851
   14001d6d2:	sub    esi,eax
   14001d6d4:	(bad)  
   14001d6d5:	lahf   
   14001d6d6:	xchg   edi,eax
   14001d6d7:	rex.W sub sil,BYTE PTR [rax]
   14001d6da:	and    bl,BYTE PTR [rdx+0x4f]
   14001d6dd:	push   rdi
   14001d6de:	sahf   
   14001d6df:	loop   0x14001d6d7
   14001d6e1:	outs   dx,DWORD PTR ds:[rsi]
   14001d6e2:	rex.WB jg 0x14001d678
   14001d6e5:	or     ch,dh
   14001d6e7:	(bad)  
   14001d6e8:	jge    0x14001d691
   14001d6ea:	rex (bad) 
   14001d6ec:	sbb    al,al
   14001d6ee:	cld    
   14001d6ef:	ins    DWORD PTR es:[rdi],dx
   14001d6f0:	rex.WRX rcr BYTE PTR [rdi+0x23b72b35],1
   14001d6f7:	(bad)  
   14001d6f8:	(bad)
   14001d6fb:	lahf   
   14001d6fc:	movabs al,ds:0x7cbafd4719272a7f
   14001d705:	and    BYTE PTR [rcx+0x2],al
   14001d708:	xchg   edx,eax
   14001d709:	(bad)  
   14001d70a:	hlt    
   14001d70b:	adc    bh,dh
   14001d70d:	call   0x1983f7f5a
   14001d712:	adc    al,0x9b
   14001d714:	pop    rax
   14001d715:	(bad)  
   14001d716:	test   al,0x23
   14001d718:	mov    dh,0x90
   14001d71a:	sbb    eax,0xa1f7d331
   14001d71f:	mov    DWORD PTR [rdx-0x31],ebp
   14001d722:	jbe    0x14001d738
   14001d724:	push   gs
   14001d726:	retf   0xe1ac
   14001d729:	(bad)  
   14001d72a:	jg     0x14001d6ea
   14001d72c:	test   BYTE PTR [rax-0x3d],ah
   14001d72f:	(bad)  
   14001d730:	shl    BYTE PTR [rax-0x60],cl
   14001d733:	pop    rsi
   14001d734:	mov    bh,0x17
   14001d736:	sbb    al,0xe6
   14001d738:	pop    rcx
   14001d739:	mov    eax,0xdf3cf4a9
   14001d73e:	adc    eax,0xc2e7854c
   14001d743:	shl    eax,1
   14001d745:	cmp    BYTE PTR [rsi+0x69],0xe
   14001d749:	(bad)  
   14001d74a:	retf   
   14001d74b:	jnp    0x14001d7b8
   14001d74d:	rex.W ja 0x14001d713
   14001d750:	movabs ds:0x2973b168c7cb0d0f,al
   14001d759:	mov    DWORD PTR [rcx+riz*2],0xd9b8a04c
   14001d760:	cmc    
   14001d761:	cwde   
   14001d762:	outs   dx,DWORD PTR ds:[rsi]
   14001d763:	rex.R xchg eax,eax
   14001d765:	call   rbx
   14001d767:	cld    
   14001d768:	jle    0x14001d7ba
   14001d76a:	data16 out dx,al
   14001d76c:	sbb    esi,DWORD PTR [rdi]
   14001d76e:	ficom  DWORD PTR [rsi+0x4d]
   14001d771:	(bad)  
   14001d772:	mov    ecx,0x540280e
   14001d777:	mov    dh,0xc6
   14001d779:	out    dx,eax
   14001d77a:	mov    al,0xa4
   14001d77c:	movabs ds:0x7f81dbb01a1c0c88,eax
   14001d785:	xlat   BYTE PTR ds:[rbx]
   14001d786:	cmp    DWORD PTR [ecx-0xbd42d88],edx
   14001d78d:	(bad)  
   14001d78e:	outs   dx,BYTE PTR ds:[rsi]
   14001d78f:	xchg   ebx,eax
   14001d790:	add    esi,edi
   14001d792:	cmp    esp,DWORD PTR es:[rsi-0x70]
   14001d796:	(bad)  
   14001d797:	or     DWORD PTR [rax-0x126ed0c1],0x58
   14001d79e:	xchg   ebx,eax
   14001d79f:	sub    DWORD PTR [rax+riz*2+0x44],edx
   14001d7a3:	mov    ah,0x31
   14001d7a5:	(bad)  
   14001d7a6:	clc    
   14001d7a7:	or     al,0xdf
   14001d7a9:	test   al,0x4d
   14001d7ab:	(bad)  
   14001d7ac:	mov    edx,0xeca6f1cf
   14001d7b1:	fist   WORD PTR [rdx+0x2eb889fe]
   14001d7b7:	rex.RX
   14001d7b8:	addr32 (bad) 
   14001d7ba:	fwait
   14001d7bb:	push   rsp
   14001d7bc:	add    dh,BYTE PTR [rax+0x27]
   14001d7bf:	in     al,dx
   14001d7c0:	mov    ebx,0xde71f048
   14001d7c5:	(bad)  
   14001d7c6:	rex.WR leave 
   14001d7c8:	xor    BYTE PTR [rax-0x18aa2407],al
   14001d7ce:	movsxd r11d,DWORD PTR [r8+riz*4-0x380694c1]
   14001d7d6:	adc    ebx,0x17
   14001d7d9:	push   0xf72c136
   14001d7de:	mov    bh,BYTE PTR [rcx-0x35]
   14001d7e1:	(bad)  
   14001d7e2:	pop    rbp
   14001d7e3:	in     al,0xae
   14001d7e5:	push   rax
   14001d7e6:	loope  0x14001d844
   14001d7e8:	rex call QWORD PTR [rsi+rcx*2+0x25]
   14001d7ed:	cwde   
   14001d7ee:	call   0xcb8a4be9
   14001d7f3:	scas   al,BYTE PTR es:[rdi]
   14001d7f4:	(bad)  
   14001d7f5:	out    dx,eax
   14001d7f6:	(bad)  
   14001d7f7:	(bad)  
   14001d7f8:	clc    
   14001d7f9:	rex (bad) 
   14001d7fb:	add    al,0x9d
   14001d7fd:	(bad)  
   14001d7fe:	ds mov esp,0x21e91f24
   14001d804:	rex.B js 0x14001d85c
   14001d807:	cdq    
   14001d808:	scas   eax,DWORD PTR es:[rdi]
   14001d809:	xlat   BYTE PTR ds:[rbx]
   14001d80a:	loopne 0x14001d797
   14001d80c:	retf   0x5cb0
   14001d80f:	xor    edi,DWORD PTR [rbx]
   14001d811:	mov    dh,0x59
   14001d813:	in     eax,dx
   14001d814:	pop    rsi
   14001d815:	shl    ebp,1
   14001d817:	push   rbp
   14001d818:	mov    al,0x7e
   14001d81a:	push   rax
   14001d81b:	rex.RXB (bad) 
   14001d81d:	sbb    esp,ebp
   14001d81f:	jmp    FWORD PTR [rcx+riz*1+0x3b]
   14001d823:	(bad)  
   14001d824:	or     DWORD PTR [rsi-0x79],eax
   14001d827:	(bad)  
   14001d829:	jmp    0xce84a060
   14001d82e:	mov    ?,WORD PTR [rax-0x2c]
   14001d831:	sahf   
   14001d832:	in     eax,dx
   14001d833:	sub    BYTE PTR [rcx+0x5f9051f9],dh
   14001d839:	push   rsi
   14001d83a:	in     al,0x82
   14001d83c:	cmp    dh,BYTE PTR [rcx]
   14001d83e:	pop    rax
   14001d83f:	cmp    al,BYTE PTR [rbx-0x195870f7]
   14001d845:	outs   dx,BYTE PTR ds:[rsi]
   14001d846:	xor    ebx,DWORD PTR [rdi]
   14001d848:	or     cl,al
   14001d84a:	xchg   BYTE PTR [rip+0xffffffffb53aa66d],cl        # 0xf53c7ebd
   14001d850:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001d851:	loope  0x14001d893
   14001d853:	mov    ebp,0x5fc86c1
   14001d858:	(bad)  
   14001d859:	sub    DWORD PTR [rcx+0x17],ecx
   14001d85c:	rex.WX
   14001d85d:	rex.WRX cmc 
   14001d85f:	scas   eax,DWORD PTR es:[rdi]
   14001d860:	repz jbe 0x14001d885
   14001d863:	xor    dl,BYTE PTR [rsi+0x788a9e11]
   14001d869:	mov    esi,0xd91d982b
   14001d86e:	xchg   edi,eax
   14001d86f:	and    BYTE PTR [rbx-0x37],cl
   14001d872:	hlt    
   14001d873:	js     0x14001d8a3
   14001d875:	scas   al,BYTE PTR es:[rdi]
   14001d876:	rex.W rol al,0x1
   14001d87a:	std    
   14001d87b:	shl    BYTE PTR [rbp+0x1c6a4166],cl
   14001d881:	pop    rsi
   14001d882:	xchg   esi,eax
   14001d883:	idiv   DWORD PTR [rcx+0x39]
   14001d886:	sub    cl,BYTE PTR [rdi-0x69]
   14001d889:	xchg   esi,eax
   14001d88a:	lahf   
   14001d88b:	pop    rbp
   14001d88c:	repnz icebp 
   14001d88e:	and    esp,ebp
   14001d890:	add    eax,0x604d6b19
   14001d895:	jle    0x14001d86e
   14001d897:	cmc    
   14001d898:	mov    ss,ecx
   14001d89a:	(bad)  
   14001d89b:	out    0xeb,eax
   14001d89d:	mov    dh,0xde
   14001d89f:	pop    rdi
   14001d8a0:	push   rdx
   14001d8a1:	mov    cs,WORD PTR [rcx]
   14001d8a3:	ret    0xe937
   14001d8a6:	mov    ch,0x7a
   14001d8a8:	fld    DWORD PTR [rsi+0x0]
   14001d8ab:	push   0xffffffffd0bc21bc
   14001d8b0:	(bad)  
   14001d8b1:	xor    edi,ebx
   14001d8b3:	mov    BYTE PTR [rdi+0x61306356],cl
   14001d8b9:	stc    
   14001d8ba:	(bad)  
   14001d8bb:	and    al,BYTE PTR [rsi+rbx*4]
   14001d8be:	push   0xffffffffffffff9a
   14001d8c0:	mov    ebp,0xd807bda6
   14001d8c5:	rol    DWORD PTR [rcx],0xbf
   14001d8c8:	outs   dx,BYTE PTR ss:[rsi]
   14001d8ca:	mov    ah,0xad
   14001d8cc:	push   rbx
   14001d8cd:	or     DWORD PTR [rax],ecx
   14001d8cf:	adc    eax,0x1d724e9a
   14001d8d4:	jmp    FWORD PTR [rcx]
   14001d8d6:	(bad)  
   14001d8d7:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001d8d8:	adc    DWORD PTR [rsi-0x1e8b4885],eax
   14001d8de:	(bad)  
   14001d8df:	bswap  ebp
   14001d8e1:	fst    DWORD PTR [rax]
   14001d8e3:	xchg   edx,eax
   14001d8e4:	test   al,0xbe
   14001d8e6:	lods   al,BYTE PTR ds:[rsi]
   14001d8e7:	sub    al,BYTE PTR [rsi+0x11]
   14001d8ea:	sbb    DWORD PTR [rax],edi
   14001d8ec:	and    esi,DWORD PTR [rsi-0x5b]
   14001d8ef:	xor    BYTE PTR [rbp+0x66],0xc6
   14001d8f3:	fcom   DWORD PTR [rax]
   14001d8f5:	add    DWORD PTR [rdx+0x60],edi
   14001d8f8:	(bad)  
   14001d8f9:	scas   al,BYTE PTR es:[rdi]
   14001d8fa:	iret   
   14001d8fb:	jb     0x14001d898
   14001d8fd:	leave  
   14001d8fe:	jae    0x14001d8ca
   14001d900:	and    dh,cl
   14001d902:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001d903:	push   rdi
   14001d904:	rex.RXB xchg r14d,eax
   14001d906:	sbb    bh,ch
   14001d908:	test   eax,0xccfdad39
   14001d90d:	pop    rsi
   14001d90e:	adc    DWORD PTR [rbp+0x6],eax
   14001d911:	out    dx,al
   14001d912:	rex.WRB jbe 0x14001d978
   14001d915:	mov    ecx,esi
   14001d917:	(bad)  
   14001d918:	lea    esp,[rsi]
   14001d91a:	rex.R fsub st(0),st
   14001d91d:	rex.B clc 
   14001d91f:	fs push rcx
   14001d921:	jns    0x14001d952
   14001d923:	stc    
   14001d924:	xor    al,0x1e
   14001d926:	xchg   ebx,eax
   14001d927:	fidiv  DWORD PTR [r9-0x2940acda]
   14001d92e:	(bad)  
   14001d92f:	jmp    0x14001d91a
   14001d931:	(bad)  
   14001d932:	stc    
   14001d933:	mov    bl,0x8c
   14001d935:	movabs eax,ds:0x690719f00e620b45
   14001d93e:	rex.WR movabs rax,ds:0x842736db3c9b51be
   14001d948:	xor    eax,0x50969299
   14001d94d:	(bad)  
   14001d94e:	cs cs cdq 
   14001d951:	mov    ecx,0xdefc2654
   14001d956:	call   0x19d72ebf9
   14001d95b:	mov    WORD PTR [rdi+0x16],?
   14001d95e:	loope  0x14001d994
   14001d960:	(bad)  
   14001d961:	cs ss test eax,0x118a49ab
   14001d968:	rex.RB out 0x3f,al
   14001d96b:	add    esp,DWORD PTR [rax]
   14001d96d:	add    DWORD PTR [rbx-0x1f6e8945],0x5cf613e3
   14001d977:	pop    rbx
   14001d978:	std    
   14001d979:	pop    rcx
   14001d97a:	jmp    0x1954071c8
   14001d97f:	icebp  
   14001d980:	and    DWORD PTR [rsi],eax
   14001d982:	(bad)  
   14001d983:	ins    BYTE PTR es:[rdi],dx
   14001d984:	rex.R (bad) 
   14001d986:	ds (bad) 
   14001d988:	stos   BYTE PTR es:[rdi],al
   14001d989:	(bad)  
   14001d98a:	mov    eax,esi
   14001d98c:	iret   
   14001d98d:	test   eax,0x41387e37
   14001d992:	jg     0x14001d96a
   14001d994:	pop    rbp
   14001d995:	es ret 
   14001d997:	outs   dx,BYTE PTR ds:[rsi]
   14001d998:	mov    bl,0x89
   14001d99a:	jbe    0x14001da18
   14001d99c:	(bad)  
   14001d99d:	out    dx,al
   14001d99e:	retf   0x6fc4
   14001d9a1:	(bad)  
   14001d9a2:	sbb    eax,0xa1b10a59
   14001d9a7:	loope  0x14001d98d
   14001d9a9:	(bad)  
   14001d9aa:	adc    al,0xf3
   14001d9ac:	cmp    DWORD PTR [rcx-0x58],0xcb69d74b
   14001d9b3:	adc    esi,DWORD PTR [rdx+0x5cab770e]
   14001d9b9:	movabs eax,ds:0xfe80017ec639b9c2
   14001d9c2:	test   eax,0x1599e59c
   14001d9c7:	and    al,0xb
   14001d9c9:	movabs al,ss:0x6616a78e1c516e36
   14001d9d3:	xchg   dl,al
   14001d9d5:	jno    0x14001d9b1
   14001d9d7:	ds sub al,0xde
   14001d9da:	outs   dx,DWORD PTR ds:[rsi]
   14001d9db:	sub    al,0x49
   14001d9dd:	mov    ecx,0x81f094d3
   14001d9e2:	add    al,0x9
   14001d9e4:	xchg   ebp,eax
   14001d9e5:	out    0xb8,al
   14001d9e7:	mov    cl,0x7b
   14001d9e9:	rex.WB or rax,0xffffffffb12e1ea3
   14001d9ef:	sbb    ecx,DWORD PTR [rax+0x3e]
   14001d9f2:	rol    BYTE PTR [rbx+0x2d],cl
   14001d9f5:	pop    rcx
   14001d9f6:	outs   dx,BYTE PTR ds:[rsi]
   14001d9f7:	sti    
   14001d9f8:	ret    
   14001d9f9:	neg    bl
   14001d9fb:	jmp    0x191696ba6
   14001da00:	(bad)  
   14001da01:	test   eax,0xce7accb0
   14001da06:	or     al,0x74
   14001da08:	xchg   esp,eax
   14001da09:	(bad)  
   14001da0a:	mov    ecx,0x506f166
   14001da0f:	fiadd  WORD PTR [rax]
   14001da11:	add    BYTE PTR [rax],al
   14001da13:	add    BYTE PTR [rdi+0x7],dh
   14001da16:	xor    BYTE PTR [rsi+0x2c610eee],dl
   14001da1c:	cdq    
   14001da1d:	or     DWORD PTR [rcx-0x46],edx
   14001da20:	(bad)  
   14001da21:	ins    DWORD PTR es:[rdi],dx
   14001da22:	(bad)  
   14001da23:	sbb    DWORD PTR [rax+0x6a],esi
   14001da26:	hlt    
   14001da27:	(bad)
   14001da2b:	xor    eax,0xa395649e
   14001da30:	(bad)  
   14001da31:	fisttp DWORD PTR [rax-0x472386ce]
   14001da37:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001da38:	loopne 0x14001da0f
   14001da3a:	jmp    0x119d4715d
   14001da3f:	mov    BYTE PTR [rcx],cl
   14001da41:	mov    dh,0x4c
   14001da43:	sub    edi,DWORD PTR [rsi-0x4f]
   14001da46:	jl     0x14001da05
   14001da48:	out    0xb8,eax
   14001da4a:	sub    eax,0x1dbf9007
   14001da4f:	xchg   ecx,eax
   14001da50:	sbb    eax,0x6a6410b7
   14001da55:	mov    al,0x20
   14001da57:	repnz repz mov ecx,0xbe844871
   14001da5e:	ficomp WORD PTR [r10]
   14001da61:	fcmovbe st,st(4)
   14001da63:	jge    0x14001dad2
   14001da65:	fucom  st(4)
   14001da67:	jmp    0x14001da5d
   14001da69:	(bad)  
   14001da6a:	mov    ch,0x51
   14001da6c:	adc    ebx,0xffffff85
   14001da6f:	(bad)  
   14001da70:	adc    ebp,DWORD PTR [rax+rbx*4+0x56]
   14001da74:	imul   ebp,DWORD PTR fs:[rax-0x69d0240],0x7a
   14001da7c:	mov    ah,BYTE PTR [rbp-0x37]
   14001da7f:	in     al,dx
   14001da80:	adc    al,0x1
   14001da82:	pop    rsp
   14001da83:	rex.WRXB movsxd r8,DWORD PTR [r14]
   14001da86:	ins    BYTE PTR es:[rdi],dx
   14001da87:	fsqrt  
   14001da89:	(bad)  
   14001da8b:	movsxd ecx,DWORD PTR [rbp+0x3bf50d08]
   14001da91:	outs   dx,BYTE PTR ds:[rsi]
   14001da92:	and    al,cl
   14001da94:	imul   r10,QWORD PTR [rax],0x4160d55e
   14001da9b:	in     al,0xa2
   14001da9d:	addr32 jno 0x14001db12
   14001daa0:	cmp    al,0x3
   14001daa2:	in     al,0xd1
   14001daa4:	rex.WXB add al,0xd4
   14001daa7:	rex.RXB ror BYTE PTR [rip+0xaa5fd85],cl        # 0x14aa7d833
   14001daae:	mov    ch,0x6b
   14001dab0:	xor    eax,0x42faa8b5
   14001dab5:	mov    dl,0x98
   14001dab7:	ins    BYTE PTR es:[rdi],dx
   14001dab8:	fstp   TBYTE PTR [rbx-0x43532937]
   14001dabe:	stc    
   14001dabf:	xor    bl,al
   14001dac2:	ins    BYTE PTR es:[rdi],dx
   14001dac3:	jrcxz  0x14001db0a
   14001dac5:	fistp  WORD PTR [rbp+rsi*2-0x24]
   14001dac9:	(bad)  
   14001daca:	or     eax,0x3dd1abcf
   14001dacf:	pop    rcx
   14001dad0:	fnstenv es:[rax]
   14001dad3:	lods   al,BYTE PTR ds:[rsi]
   14001dad4:	push   rcx
   14001dad5:	fiadd  WORD PTR [rax]
   14001dad7:	cmp    cl,al
   14001dad9:	xlat   BYTE PTR ds:[rbx]
   14001dada:	push   rcx
   14001dadb:	cmp    BYTE PTR [rdi+0x211661d0],0xb4
   14001dae2:	hlt    
   14001dae3:	mov    ch,0x56
   14001dae5:	mov    bl,0xc4
   14001dae7:	and    ecx,edi
   14001dae9:	mov    edx,0xbdb89995
   14001daee:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001daef:	movaps xmm0,XMMWORD PTR [rdx]
   14001daf2:	mov    eax,0x88055f9e
   14001daf7:	or     dh,al
   14001daf9:	or     al,0xd9
   14001dafb:	mov    dl,0xb1
   14001dafd:	or     ebp,ecx
   14001daff:	and    al,0x2f
   14001db01:	outs   dx,DWORD PTR ds:[rsi]
   14001db02:	jl     0x14001da8b
   14001db04:	pop    rax
   14001db05:	push   0x61c1114c
   14001db0a:	sbb    eax,0x2d66b6ab
   14001db0f:	cmp    eax,0x9041dc76
   14001db14:	add    ebx,ebx
   14001db16:	jno    0x14001db1e
   14001db18:	cwde   
   14001db19:	shl    BYTE PTR [rax],cl
   14001db1b:	mov    esp,0x2a10d5ef
   14001db20:	jno    0x14001dad3
   14001db22:	test   DWORD PTR [rcx+0x1fb5b606],ecx
   14001db28:	lahf   
   14001db29:	mov    edi,0xb8e8a5e4
   14001db2e:	(bad)  
   14001db2f:	xor    edi,DWORD PTR [rax+0x7]
   14001db32:	leave  
   14001db33:	movabs ds:0x8ea8099634f9000f,al
   14001db3c:	loope  0x14001db4c
   14001db3e:	cwde   
   14001db3f:	sbb    BYTE PTR [rdi+0x6a],bh
   14001db42:	or     eax,0x3d6d08bb
   14001db47:	sub    eax,0x976c6491
   14001db4c:	out    0x63,al
   14001db4e:	pop    rsp
   14001db4f:	add    DWORD PTR [rbx+0x6b],ebp
   14001db52:	push   rcx
   14001db53:	hlt    
   14001db54:	sbb    al,0x6c
   14001db56:	(bad)  
   14001db57:	(bad)  
   14001db58:	test   DWORD PTR [rbp+0x30],esp
   14001db5b:	fdiv   st,st(2)
   14001db5d:	(bad)  
   14001db5e:	add    BYTE PTR [rsi+0x6c],cl
   14001db61:	(bad)  
   14001db62:	xchg   ebp,eax
   14001db63:	in     eax,dx
   14001db64:	sbb    eax,DWORD PTR [rcx]
   14001db66:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001db67:	jnp    0x14001daeb
   14001db69:	or     ah,dh
   14001db6b:	shl    ebp,0xf
   14001db6e:	(bad)  
   14001db6f:	push   rdi
   14001db70:	gs mov al,0xd9
   14001db73:	(bad)  
   14001db74:	adc    dh,BYTE PTR [rdi-0x4174af17]
   14001db7a:	mov    eax,0x88b9fcea
   14001db7f:	jl     0x14001dbe3
   14001db81:	fstp   QWORD PTR [rip+0x2dda15df]        # 0x16ddbf166
   14001db87:	mov    r11,ss
   14001db8a:	jl     0x14001db7f
   14001db8c:	sti    
   14001db8d:	(bad)  
   14001db8e:	rex.WR
   14001db8f:	gs rex.WRB mov r10b,0x61
   14001db93:	pop    rax
   14001db94:	cmp    dh,BYTE PTR [rbp-0x435c31af]
   14001db9a:	add    BYTE PTR [rsp+rdx*8-0x45],dh
   14001db9e:	xor    dl,ah
   14001dba0:	rex.WX fbld TBYTE PTR [rbp-0x6a27c2bf]
   14001dba7:	xlat   BYTE PTR ds:[rbx]
   14001dba8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001dba9:	rol    esp,1
   14001dbab:	ins    DWORD PTR es:[rdi],dx
   14001dbac:	rcl    esi,cl
   14001dbae:	hlt    
   14001dbaf:	sti    
   14001dbb0:	rex.XB imul ebp,r9d,0xd96e346a
   14001dbb7:	cld    
   14001dbb8:	lods   eax,DWORD PTR ds:[rsi]
   14001dbb9:	mov    BYTE PTR [esi-0x26],al
   14001dbbd:	(bad)  
   14001dbbe:	mov    eax,0x2d0444d0
   14001dbc3:	jae    0x14001dbf8
   14001dbc5:	add    ebx,DWORD PTR [rip+0x4c0aaae5]        # 0x18c0c86b0
   14001dbcb:	pop    rdi
   14001dbcc:	fisttp QWORD PTR [rip+0x550c97c]        # 0x14552a54e
   14001dbd2:	jno    0x14001dc10
   14001dbd4:	(bad)  
   14001dbd5:	add    al,BYTE PTR [rcx-0x56]
   14001dbd8:	mov    esi,0xc910100b
   14001dbdd:	or     al,0x20
   14001dbdf:	xchg   BYTE PTR [rdi+0x68],dl
   14001dbe2:	mov    ch,0x25
   14001dbe4:	and    BYTE PTR [rdi-0x7b],ch
   14001dbe7:	mov    bl,0xb9
   14001dbe9:	data16 (bad) 
   14001dbeb:	or     esi,ecx
   14001dbed:	(bad)  
   14001dbee:	in     al,0x9f
   14001dbf0:	pop    rsi
   14001dbf1:	fdivp  st(1),st
   14001dbf3:	(bad)  
   14001dbf4:	sub    ecx,ebx
   14001dbf6:	leave  
   14001dbf7:	cwde   
   14001dbf8:	mov    al,0xd0
   14001dbfa:	cwde   
   14001dbfb:	and    al,bh
   14001dbfd:	xlat   BYTE PTR ds:[rbx]
   14001dbfe:	test   al,0xb4
   14001dc00:	pop    rcx
   14001dc01:	mov    bl,0x3d
   14001dc03:	(bad)  
   14001dc04:	cs mov ah,0xd
   14001dc07:	xor    DWORD PTR [rdi-0x3fc4a343],0xedad6cba
   14001dc11:	mov    eax,0xbf9a2083
   14001dc16:	mov    bl,0xb6
   14001dc18:	add    esi,DWORD PTR [rsi-0x4e8bf31e]
   14001dc1e:	rcr    BYTE PTR [rdx+0x3947d5ea],cl
   14001dc24:	popf   
   14001dc25:	shl    BYTE PTR [rdi-0x51],cl
   14001dc28:	add    al,0xdb
   14001dc2a:	es adc eax,0x8316dc73
   14001dc30:	jrcxz  0x14001dc95
   14001dc32:	or     edx,DWORD PTR [rdx]
   14001dc34:	xchg   esp,eax
   14001dc35:	cmp    eax,DWORD PTR fs:[rbp+rcx*1+0x7a3e6a6d]
   14001dc3d:	push   0x5a
   14001dc3f:	test   al,0xe4
   14001dc41:	(bad)  
   14001dc42:	iret   
   14001dc43:	or     edx,DWORD PTR [rbx+0xa9dff09]
   14001dc49:	add    BYTE PTR [rsi-0x61f882d9],ch
   14001dc4f:	mov    cl,0xf0
   14001dc51:	setae  BYTE PTR [rdi+rax*4+0x8]
   14001dc56:	movabs ds:0xc2066968f2011ed2,eax
   14001dc5f:	(bad)  
   14001dc60:	mul    DWORD PTR [rdx+0x57]
   14001dc63:	pop    rbp
   14001dc64:	and    BYTE PTR [rbp+0x67],0xcb
   14001dc68:	sbb    DWORD PTR [rsi+rsi*1+0x71],ebp
   14001dc6c:	outs   dx,BYTE PTR ds:[rsi]
   14001dc6d:	imul   eax,DWORD PTR [rsi],0xffffffe7
   14001dc70:	(bad)  
   14001dc71:	(bad)  
   14001dc72:	sbb    esi,DWORD PTR [rsi-0x77]
   14001dc75:	shr    DWORD PTR [rbx],cl
   14001dc77:	loopne 0x14001dc89
   14001dc79:	fidivr DWORD PTR [rdx+0x5a]
   14001dc7c:	fisttp QWORD PTR [edx-0x34]
   14001dc80:	stc    
   14001dc81:	mov    ecx,0xbe8e6fdf
   14001dc86:	out    dx,eax
   14001dc87:	stc    
   14001dc88:	(bad)  
   14001dc89:	mov    bh,0xbe
   14001dc8b:	rex.XB (bad) 
   14001dc8d:	mov    al,0x8e
   14001dc8f:	(bad)  
   14001dc90:	(bad)  
   14001dc91:	(bad)  
   14001dc92:	movabs ds:0xc2d8387e93d1a1e8,eax
   14001dc9b:	(bad)  
   14001dc9c:	rex.WRXB fcomip st,st(2)
   14001dc9f:	push   rdx
   14001dca0:	sar    DWORD PTR [rbx-0x43590e99],1
   14001dca6:	push   rdi
   14001dca7:	addr32 (bad) 
   14001dca9:	mov    ch,0x6
   14001dcab:	fisttp QWORD PTR [rax-0x4e]
   14001dcae:	rex.WXB fmul DWORD PTR ss:[rip+0xaafda2b]        # 0x14ab1b6e1
   14001dcb6:	sbb    ecx,DWORD PTR [rsi+rsi*1+0x3]
   14001dcba:	rex.WX test BYTE PTR [rcx+0x4],0x7a
   14001dcbf:	(bad)  
   14001dcc0:	fbld   TBYTE PTR [rax-0x11]
   14001dcc3:	ret    
   14001dcc4:	test   al,0x67
   14001dcc6:	fist   WORD PTR [rbp+0x31]
   14001dcc9:	outs   dx,BYTE PTR ds:[rsi]
   14001dcca:	mov    gs,edi
   14001dccc:	rex.RX imul r15d,DWORD PTR [rsi-0x4c9e3487],0x8366bc8c
   14001dcd7:	sbb    ah,BYTE PTR [rip+0x52a0d26f]        # 0x192a2af4c
   14001dcdd:	push   0xccc36e2
   14001dce2:	ja     0x14001dc79
   14001dce4:	mov    ebx,0x2203470b
   14001dce9:	add    dl,BYTE PTR [rsi]
   14001dceb:	mov    ecx,0x2f260555
   14001dcf0:	(bad)
   14001dcf3:	mov    esi,0x280bbdb2
   14001dcf8:	sub    esi,DWORD PTR [rdx+rbx*2+0x6ab35c92]
   14001dcff:	add    al,0xc2
   14001dd01:	xlat   BYTE PTR ds:[rbx]
   14001dd02:	jmp    QWORD PTR [rdi+0x31cfd0b5]
   14001dd08:	sub    al,0xd9
   14001dd0a:	sahf   
   14001dd0b:	mov    ebx,DWORD PTR [rbx-0x22]
   14001dd0e:	scas   al,BYTE PTR es:[rdi]
   14001dd0f:	sbb    eax,0xb0c2649b
   14001dd14:	in     al,dx
   14001dd15:	movsxd esi,edx
   14001dd17:	es jne 0x14001dd84
   14001dd1a:	movabs ds:0x6099c0a936d029c,eax
   14001dd23:	test   eax,0x3f360eeb
   14001dd28:	jb     0x14001dd31
   14001dd2a:	test   DWORD PTR [eip+0xffffffff95135700],eax        # 0xd5153431
   14001dd31:	mov    edi,0xb8e2824a
   14001dd36:	jp     0x14001dd4c
   14001dd38:	jnp    0x14001dceb
   14001dd3a:	sub    ebp,DWORD PTR [rsi+0x381bb60c]
   14001dd40:	xchg   edx,eax
   14001dd41:	ror    BYTE PTR [rsi-0x412a1a65],cl
   14001dd47:	or     eax,0xb7efdc7c
   14001dd4c:	or     ebx,ebx
   14001dd4e:	fbld   TBYTE PTR [rcx]
   14001dd50:	xchg   bl,dl
   14001dd52:	rcl    ah,cl
   14001dd54:	icebp  
   14001dd55:	(bad)  
   14001dd56:	loop   0x14001dd9a
   14001dd58:	push   0x1ff8b3dd
   14001dd5d:	fiadd  DWORD PTR [rbx+0x16be816e]
   14001dd63:	int    0xf6
   14001dd65:	mov    ecx,0xb06f5b26
   14001dd6a:	ja     0x14001dd4d
   14001dd6c:	sbb    BYTE PTR [rdi+0x8887747],dh
   14001dd72:	pop    rdx
   14001dd73:	out    0xff,al
   14001dd75:	punpckhdq mm6,QWORD PTR [rax+0x66]
   14001dd79:	(bad)  
   14001dd7a:	cmp    ecx,edx
   14001dd7c:	adc    DWORD PTR [rcx],eax
   14001dd7e:	or     ebx,DWORD PTR [rdi+rcx*4+0x65]
   14001dd82:	sahf   
   14001dd83:	(bad)  
   14001dd84:	clc    
   14001dd85:	(bad)  
   14001dd86:	scas   al,BYTE PTR es:[rdi]
   14001dd87:	imul   esp,DWORD PTR [rcx+0x6b],0x6c16d3ff
   14001dd8e:	iret   
   14001dd8f:	rex.RB movabs al,ds:0x4eeed20dd778e20a
   14001dd99:	add    al,0x83
   14001dd9b:	push   rsp
   14001dd9c:	cmp    DWORD PTR [rbx],eax
   14001dd9e:	mov    bl,0xc2
   14001dda0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001dda1:	addr32 es (bad) 
   14001dda4:	shl    BYTE PTR [rax+0x16],1
   14001dda7:	test   DWORD PTR [rcx+0x69],0x6e3e4d47
   14001ddae:	ja     0x14001dd8b
   14001ddb0:	scas   al,BYTE PTR es:[rdi]
   14001ddb1:	shr    DWORD PTR [rdx+0x4a],1
   14001ddb4:	(bad)  
   14001ddb6:	pop    rdx
   14001ddb7:	fadd   QWORD PTR [rax-0x21]
   14001ddba:	or     esp,DWORD PTR [rsi+0x37]
   14001ddbd:	fdivr  DWORD PTR [rbx]
   14001ddbf:	lock test eax,0xde53aebc
   14001ddc5:	mov    ebx,0xb247c59e
   14001ddca:	iret   
   14001ddcb:	jg     0x14001ddfd
   14001ddcd:	mov    ch,0xff
   14001ddcf:	jmp    0x15cf49b91
   14001ddd4:	retf   0xc2ba
   14001ddd7:	mov    dl,BYTE PTR [rbx-0x4d]
   14001ddda:	xchg   ebx,eax
   14001dddb:	xor    BYTE PTR [rsp+rsi*4],ah
   14001ddde:	movabs ds:0x6d7cd0536d0baa6,eax
   14001dde7:	xchg   ebx,eax
   14001dde8:	push   rsp
   14001dde9:	ficom  WORD PTR [rdi+0x29]
   14001ddec:	and    ebx,ecx
   14001ddee:	addr32 mov edi,0x2e7a66b3
   14001ddf4:	(bad)
   14001ddf8:	pop    rbp
   14001ddf9:	push   0x6f2a021b
   14001ddfe:	sub    edx,DWORD PTR [rsp+rsi*4-0x3cc841f5]
   14001de05:	or     al,0x8e
   14001de07:	movabs eax,ds:0x8def022d1bdf055a
   14001de10:	add    BYTE PTR [rax],al
   14001de12:	add    BYTE PTR [rax],al
   14001de14:	sbb    DWORD PTR [rbx],ebx
   14001de16:	xor    DWORD PTR [rcx+0x32],eax
   14001de19:	ss (bad) 
   14001de1c:	sub    ebp,DWORD PTR [rip+0x6c64c353]        # 0x1ac66a175
   14001de22:	(bad)
   14001de25:	ja     0x14001de1b
   14001de27:	rex.RB push r14
   14001de29:	pop    rdx
   14001de2a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001de2b:	xchg   BYTE PTR [rdi+0x41],cl
   14001de2e:	xchg   esi,eax
   14001de2f:	(bad)  
   14001de30:	enter  0x8ad9,0x8
   14001de34:	rol    edx,1
   14001de36:	mov    ebx,0xe8effa49
   14001de3b:	mov    ah,bl
   14001de3d:	hlt    
   14001de3e:	fxch   st(3)
   14001de40:	lods   al,BYTE PTR ds:[rsi]
   14001de41:	mov    ch,0x4f
   14001de43:	or     al,0xb5
   14001de45:	scas   al,BYTE PTR es:[rdi]
   14001de46:	jle    0x14001de95
   14001de48:	sahf   
   14001de49:	sub    DWORD PTR [rip+0x1c98878e],0xffffffcf        # 0x15c9a65de
   14001de50:	rex.WX ret 0x5112
   14001de54:	push   rbx
   14001de55:	fldenv [rbx]
   14001de57:	adc    BYTE PTR [rax-0xc],bh
   14001de5a:	jo     0x14001de2f
   14001de5c:	(bad)  
   14001de5d:	out    dx,eax
   14001de5e:	xchg   r10d,eax
   14001de60:	cs scas al,BYTE PTR es:[rdi]
   14001de62:	xlat   BYTE PTR ds:[rbx]
   14001de63:	push   rbp
   14001de64:	(bad)  
   14001de65:	mov    ch,0xe6
   14001de67:	adc    al,0x1c
   14001de69:	cwde   
   14001de6a:	mov    ch,0xd7
   14001de6c:	add    eax,0x82968483
   14001de71:	sbb    ebx,DWORD PTR [rax-0x56ff64a7]
   14001de77:	sbb    BYTE PTR [rax-0x562405d3],dh
   14001de7d:	ss retf 
   14001de7f:	(bad)  
   14001de80:	out    0x77,al
   14001de82:	pop    rbp
   14001de83:	pop    rbp
   14001de84:	jmp    FWORD PTR [rsp+rbp*2+0x1c]
   14001de88:	(bad)  
   14001de89:	rex.B (bad) 
   14001de8b:	(bad)  
   14001de8d:	pop    rdx
   14001de8e:	(bad)  
   14001de8f:	sahf   
   14001de90:	xchg   ebp,eax
   14001de91:	test   BYTE PTR [rdx+riz*4],ah
   14001de94:	mov    WORD PTR [rdi-0x4d581ceb],ds
   14001de9a:	rex.RX and BYTE PTR [rsi-0xe9e8857],r15b
   14001dea1:	call   0x133ea8587
   14001dea6:	shl    bh,1
   14001dea8:	ret    
   14001dea9:	fiadd  WORD PTR [rbx-0x4d3a25dc]
   14001deaf:	gs pop rbp
   14001deb1:	pop    rbp
   14001deb2:	scas   al,BYTE PTR es:[rdi]
   14001deb3:	stos   BYTE PTR es:[rdi],al
   14001deb4:	rex.R
   14001deb5:	rex.RX lahf 
   14001deb7:	jmp    0x14001df28
   14001deb9:	imul   ecx,esp,0x28
   14001debc:	jbe    0x14001df2e
   14001debe:	std    
   14001debf:	imul   edi,DWORD PTR [rcx],0x20ae6b31
   14001dec5:	sub    bl,BYTE PTR [rdx-0x11]
   14001dec8:	or     eax,DWORD PTR [rdi]
   14001deca:	or     DWORD PTR [rdx+rdx*1],ebp
   14001decd:	sbb    al,0x38
   14001decf:	ins    DWORD PTR es:[rdi],dx
   14001ded0:	fild   WORD PTR [rsi+0x36]
   14001ded3:	repz (bad) 
   14001ded5:	pop    rbp
   14001ded6:	(bad)  
   14001ded7:	mov    dl,0xed
   14001ded9:	jo     0x14001df2f
   14001dedb:	jno    0x14001ded1
   14001dedd:	imul   esp,DWORD PTR [rbp+0x30],0xffffffbb
   14001dee1:	sub    dh,bl
   14001dee3:	mul    DWORD PTR [rdx-0x76493dcf]
   14001dee9:	sbb    al,0x91
   14001deeb:	jne    0x14001de7d
   14001deed:	(bad)  
   14001deee:	movabs al,ds:0x8d840efbbc9f1734
   14001def7:	mov    edx,0x79dea925
   14001defc:	cmp    al,0xb2
   14001defe:	out    dx,eax
   14001deff:	cmp    BYTE PTR [rbx-0xd],dh
   14001df02:	jns    0x14001df03
   14001df04:	push   0xffffffffffffffe8
   14001df06:	movabs rsi,0x3c2ade587d1bc541
   14001df10:	lock jns 0x14001df62
   14001df13:	add    eax,0x447e62e9
   14001df18:	ret    0x2d4f
   14001df1b:	xchg   ebx,ebx
   14001df1d:	push   rsp
   14001df1e:	sbb    al,0xc6
   14001df20:	xchg   esp,eax
   14001df21:	adc    eax,0xe8d018a
   14001df26:	mov    ebx,0xe823a640
   14001df2b:	cmp    DWORD PTR [rdi+0x38c2d938],0xffffffa0
   14001df32:	(bad)
   14001df35:	mov    ebx,0x960a4cf4
   14001df3a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001df3b:	(bad)  
   14001df3c:	adc    ecx,DWORD PTR [rbp-0x33a3316a]
   14001df42:	add    BYTE PTR [rcx],cl
   14001df44:	rex.RB xlat BYTE PTR ds:[rbx]
   14001df46:	xor    DWORD PTR [rax+0x6e],ecx
   14001df49:	cli    
   14001df4a:	(bad)  
   14001df4b:	mov    esi,DWORD PTR [rdi-0x1f]
   14001df4e:	push   rbx
   14001df4f:	retf   0xbbba
   14001df52:	pop    rbp
   14001df53:	push   rsp
   14001df54:	movabs ds:0x91d63f8d88156ca0,eax
   14001df5d:	xchg   esi,eax
   14001df5e:	(bad)  
   14001df5f:	xchg   edi,eax
   14001df60:	(bad)  
   14001df62:	cwde   
   14001df63:	push   rax
   14001df64:	(bad)  
   14001df65:	int3   
   14001df66:	test   eax,0xfae1ec11
   14001df6b:	shl    ch,cl
   14001df6d:	cli    
   14001df6e:	retf   
   14001df6f:	xchg   ebx,eax
   14001df70:	jb     0x14001dfd4
   14001df72:	xlat   BYTE PTR ds:[rbx]
   14001df73:	pop    rsp
   14001df74:	imul   edi,DWORD PTR [rcx-0x1a],0x1d
   14001df78:	rex push rsp
   14001df7a:	mov    ch,0xde
   14001df7c:	pop    rcx
   14001df7d:	rex.WRXB test BYTE PTR [r15+0x58120e16],r11b
   14001df84:	unpckhps xmm4,XMMWORD PTR [rbx]
   14001df87:	sbb    DWORD PTR [rax+rdi*1],esp
   14001df8a:	jo     0x14001df66
   14001df8c:	cmp    eax,0x659b4123
   14001df91:	std    
   14001df92:	imul   esp,DWORD PTR [rdi-0x19a51984],0x57
   14001df99:	retf   
   14001df9a:	or     DWORD PTR [rip+0x6438d04e],esp        # 0x1a43aafee
   14001dfa0:	add    DWORD PTR [rcx-0x75e75c52],edx
   14001dfa6:	lahf   
   14001dfa7:	loop   0x14001dfdc
   14001dfa9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001dfaa:	int3   
   14001dfab:	and    DWORD PTR [rdx],ebp
   14001dfad:	mov    esp,0x24ad60fd
   14001dfb2:	loope  0x14001df63
   14001dfb4:	mov    ah,0x3f
   14001dfb6:	shr    dh,1
   14001dfb8:	lahf   
   14001dfb9:	adc    al,BYTE PTR [rbx-0x4df679d3]
   14001dfbf:	ins    BYTE PTR es:[rdi],dx
   14001dfc0:	leave  
   14001dfc1:	rex.W and al,0xab
   14001dfc4:	rcl    BYTE PTR [rbx+0x15],1
   14001dfc7:	(bad)  
   14001dfc8:	sti    
   14001dfc9:	jle    0x14001e011
   14001dfcb:	sub    edx,esp
   14001dfcd:	gs ja  0x14001e038
   14001dfd0:	(bad)  
   14001dfd1:	(bad)  
   14001dfd2:	jns    0x14001dfca
   14001dfd4:	ss and al,0x48
   14001dfd7:	mov    bh,0x1d
   14001dfd9:	or     DWORD PTR [rbx],ebx
   14001dfdb:	je     0x14001dfe1
   14001dfdd:	adc    ch,BYTE PTR [rdx]
   14001dfdf:	xor    eax,0xf2bc534b
   14001dfe4:	push   rdx
   14001dfe5:	lea    rsi,[rbx+0x70de6579]
   14001dfec:	(bad)  
   14001dfed:	jle    0x14001dfde
   14001dfef:	xor    edi,esp
   14001dff1:	out    0xf3,al
   14001dff3:	(bad)  
   14001dff4:	(bad)  
   14001dff5:	std    
   14001dff6:	ret    0xd5bf
   14001dff9:	rcl    BYTE PTR [rcx-0x5f343384],1
   14001dfff:	cmp    eax,0xfa368a83
   14001e004:	(bad)  
   14001e005:	xchg   ecx,eax
   14001e006:	(bad)  
   14001e007:	mov    ebx,0x7854bcb1
   14001e00c:	test   al,0xa7
   14001e00e:	cmp    DWORD PTR gs:[rbx],edi
   14001e011:	sbb    DWORD PTR [rax-0x5667ddb5],0xa
   14001e018:	or     DWORD PTR [rbp-0x51ef3606],esi
   14001e01e:	retf   
   14001e01f:	mov    BYTE PTR [rdi-0x11],bl
   14001e022:	pop    rbp
   14001e023:	rex.WRXB
   14001e024:	rex.RX hlt 
   14001e026:	ins    BYTE PTR es:[rdi],dx
   14001e027:	(bad)  
   14001e028:	ins    DWORD PTR es:[rdi],dx
   14001e029:	fnstcw WORD PTR [rdi]
   14001e02b:	int    0x74
   14001e02d:	ret    0x8c0e
   14001e030:	repz pop rdx
   14001e032:	adc    al,BYTE PTR [rbx-0x16]
   14001e035:	and    eax,DWORD PTR [r10]
   14001e038:	shr    DWORD PTR [rax+rsi*2-0x3f],0xd8
   14001e03d:	ja     0x14001e080
   14001e03f:	adc    BYTE PTR [rdi-0x71b828ca],0x2d
   14001e046:	out    0x6,al
   14001e048:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001e049:	add    BYTE PTR [rbp-0x7be4433b],dh
   14001e04f:	test   BYTE PTR [rcx+0x41],dh
   14001e052:	mov    bl,BYTE PTR [rdx]
   14001e054:	push   0x435bbb5a
   14001e059:	ja     0x14001e043
   14001e05b:	cwde   
   14001e05c:	pop    rdx
   14001e05d:	ins    BYTE PTR es:[rdi],dx
   14001e05e:	(bad)  
   14001e060:	adc    eax,0xc1e4f2d
   14001e065:	ss jle 0x14001e0c7
   14001e068:	(bad)  
   14001e069:	sbb    ebp,DWORD PTR [rip+0x1c003e9c]        # 0x15c021f0b
   14001e06f:	fnstsw WORD PTR [rcx-0x5fedff68]
   14001e075:	xor    DWORD PTR [rcx],0x53
   14001e078:	mov    ebp,DWORD PTR [rsi-0x4a6d6f9e]
   14001e07e:	push   rbx
   14001e07f:	rcr    ebp,1
   14001e081:	hlt    
   14001e082:	(bad)
   14001e085:	out    dx,eax
   14001e086:	hlt    
   14001e087:	push   rdi
   14001e088:	out    dx,eax
   14001e089:	ret    0x94a7
   14001e08c:	neg    cl
   14001e08e:	xchg   esi,eax
   14001e08f:	(bad)  
   14001e090:	scas   al,BYTE PTR es:[rdi]
   14001e091:	(bad)  
   14001e092:	mov    esp,0x8d1cb7e9
   14001e097:	test   al,0x9c
   14001e099:	xor    esi,ebx
   14001e09b:	imul   eax,DWORD PTR [rbp-0x35d510d6],0x6b
   14001e0a2:	jns    0x14001e091
   14001e0a4:	shl    DWORD PTR [rax+0x48],cl
   14001e0a7:	lods   al,BYTE PTR ds:[rsi]
   14001e0a8:	clc    
   14001e0a9:	pop    rbp
   14001e0aa:	sbb    ebp,DWORD PTR [rdi-0x1f]
   14001e0ad:	rex.RX sub r13b,BYTE PTR [rsi]
   14001e0b0:	data16 fidiv WORD PTR [rsi]
   14001e0b3:	loope  0x14001e134
   14001e0b5:	(bad)
   14001e0b8:	push   rsp
   14001e0b9:	call   0x1334f4412
   14001e0be:	and    al,BYTE PTR gs:[rdx]
   14001e0c1:	mov    dl,0xf3
   14001e0c3:	in     eax,0x1b
   14001e0c5:	test   eax,0x8430a4c2
   14001e0ca:	xchg   ecx,eax
   14001e0cb:	sub    DWORD PTR [edi-0x3a1bd960],ebx
   14001e0d2:	scas   al,BYTE PTR es:[rdi]
   14001e0d3:	mov    eax,0xf99fdefd
   14001e0d8:	(bad)  
   14001e0d9:	repz int3 
   14001e0db:	cmp    cl,bh
   14001e0dd:	call   0xe9825cdf
   14001e0e2:	imul   edi,DWORD PTR [rcx+rbx*4-0x4d02a54e],0xffffff9f
   14001e0ea:	or     DWORD PTR [rsi],edi
   14001e0ec:	stos   DWORD PTR es:[rdi],eax
   14001e0ed:	test   BYTE PTR [rax],bh
   14001e0ef:	jg     0x14001e11d
   14001e0f1:	sbb    al,0x24
   14001e0f3:	mov    al,0x35
   14001e0f5:	(bad)  
   14001e0f6:	adc    eax,0x462a1ef1
   14001e0fb:	xor    al,BYTE PTR [rdi]
   14001e0fd:	xor    DWORD PTR [rdi+0x73],esi
   14001e100:	rex.W jo 0x14001e0e4
   14001e103:	mov    ah,0x51
   14001e105:	imul   edx,eax,0xfffffff5
   14001e108:	jp     0x14001e150
   14001e10a:	xor    DWORD PTR [rsi],0x63
   14001e10d:	pop    rbp
   14001e10e:	mov    dl,0x77
   14001e110:	retf   
   14001e111:	cli    
   14001e112:	xlat   BYTE PTR ds:[rbx]
   14001e113:	rex.WRX shl cl,cl
   14001e116:	out    0xf,al
   14001e118:	stc    
   14001e119:	int3   
   14001e11a:	mov    ch,0xcc
   14001e11c:	loopne 0x14001e0f5
   14001e11e:	test   BYTE PTR [rbp+0x4a1296af],cl
   14001e124:	mov    dh,0x8d
   14001e126:	and    ecx,DWORD PTR [rbx]
   14001e128:	popf   
   14001e129:	movabs al,ds:0x23038941bb84c870
   14001e132:	pop    rbp
   14001e133:	rex.RX sbb r15b,BYTE PTR [rax]
   14001e136:	ins    BYTE PTR es:[rdi],dx
   14001e137:	(bad)  
   14001e138:	xor    DWORD PTR [rip+0xe28c43f],edx        # 0x14e2aa57d
   14001e13e:	(bad)  
   14001e13f:	test   DWORD PTR [rdi+0x4f],esp
   14001e142:	cwde   
   14001e143:	rex.X jle 0x14001e19a
   14001e146:	test   eax,0xfa795503
   14001e14b:	ror    BYTE PTR [rdx+riz*2-0x35],0x81
   14001e150:	cmp    DWORD PTR [rax],0x23981fc5
   14001e156:	hlt    
   14001e157:	pop    rsi
   14001e158:	mov    bl,0xe
   14001e15a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001e15b:	popf   
   14001e15c:	stos   BYTE PTR es:[rdi],al
   14001e15d:	adc    eax,0x54e5dc96
   14001e162:	add    BYTE PTR [rbx],bl
   14001e164:	cld    
   14001e165:	rex.WRXB xor QWORD PTR [r10-0x29],r11
   14001e169:	(bad)  
   14001e16b:	cdq    
   14001e16c:	(bad)  
   14001e16d:	jns    0x14001e1c2
   14001e16f:	fmul   DWORD PTR [rcx-0x1f]
   14001e172:	rex.WRXB (bad) 
   14001e174:	push   rax
   14001e175:	cli    
   14001e176:	jle    0x14001e1ce
   14001e178:	jnp    0x14001e151
   14001e17a:	sub    eax,0x1ccc6295
   14001e17f:	(bad)  
   14001e180:	sub    eax,0x34138a8d
   14001e185:	xchg   esi,eax
   14001e186:	mov    ebx,0xe8bb1f52
   14001e18b:	xchg   ecx,eax
   14001e18c:	(bad)  
   14001e18d:	movabs al,ds:0x6547ecf37e5ed0d9
   14001e196:	ret    0x6cad
   14001e199:	xchg   rcx,rax
   14001e19b:	outs   dx,BYTE PTR ds:[rsi]
   14001e19c:	jne    0x14001e1f1
   14001e19e:	movabs al,ds:0x70923e836123a2f
   14001e1a7:	test   eax,0x6a542408
   14001e1ac:	adc    DWORD PTR [rdi],edi
   14001e1ae:	sub    edx,DWORD PTR gs:[rsi-0x701b8659]
   14001e1b5:	mov    esp,0x91a4a548
   14001e1ba:	sbb    esp,DWORD PTR [rsi-0x43]
   14001e1bd:	mov    ch,BYTE PTR [rdx]
   14001e1bf:	(bad)  
   14001e1c0:	repnz retf 
   14001e1c2:	mov    esp,0x8dd0ebe0
   14001e1c7:	movabs eax,ds:0x23efe6d962defdc0
   14001e1d0:	adc    al,0xbc
   14001e1d2:	loope  0x14001e191
   14001e1d4:	or     eax,0x26fcd0a7
   14001e1d9:	mov    al,BYTE PTR [rbx-0x4d6ec0c1]
   14001e1df:	jle    0x14001e251
   14001e1e1:	shl    BYTE PTR [rcx+rdi*4],1
   14001e1e4:	imul   ecx,ebx,0xe642f815
   14001e1ea:	rex.RX cmp r11d,DWORD PTR [rbx-0x3]
   14001e1ee:	ja     0x14001e26a
   14001e1f0:	fsub   QWORD PTR [rbp+0x6b]
   14001e1f3:	mov    ch,0xc5
   14001e1f5:	jle    0x14001e251
   14001e1f7:	hlt    
   14001e1f8:	out    dx,al
   14001e1f9:	push   rbx
   14001e1fa:	or     DWORD PTR [rdi],esi
   14001e1fc:	test   DWORD PTR [rax+0x38],0xae09b876
   14001e203:	mov    cl,0xa1
   14001e205:	adc    bl,BYTE PTR [rdi-0x33c07510]
   14001e20b:	xor    edx,DWORD PTR [rbx+0x72fd24]
   14001e211:	add    BYTE PTR [rax],al
   14001e213:	add    BYTE PTR [rcx],al
   14001e215:	ret    0x376a
   14001e218:	add    eax,DWORD PTR [rsp+rdx*8-0x41b9fd92]
   14001e21f:	pop    rcx
   14001e220:	(bad)  
   14001e221:	or     DWORD PTR [rax-0x3d34f924],ebp
   14001e227:	jmp    0x14001e22d
   14001e229:	lea    edi,[rdx+rsi*4+0x5]
   14001e22d:	rex.WRXB (bad) 
   14001e22f:	test   DWORD PTR [rsi],ecx
   14001e231:	adc    edx,DWORD PTR [rcx-0x48]
   14001e234:	psrlw  mm7,QWORD PTR [rbx]
   14001e237:	(bad)  
   14001e238:	or     eax,0xcd68597
   14001e23d:	push   rbp
   14001e23e:	out    dx,eax
   14001e23f:	loope  0x14001e24a
   14001e241:	sbb    bh,cl
   14001e243:	fs or  al,bl
   14001e246:	xchg   ebx,eax
   14001e247:	push   rbx
   14001e248:	or     bl,BYTE PTR [rsi+0x5c0b0a2d]
   14001e24e:	rex.RXB cmp eax,0x70a3261c
   14001e254:	sbb    eax,0x1f47c9e4
   14001e259:	movabs ds:0x2f1b291d601e1e77,al
   14001e262:	or     ebp,DWORD PTR [rdx+rbx*1+0x189b61ed]
   14001e269:	stos   DWORD PTR es:[rdi],eax
   14001e26a:	ffreep st(2)
   14001e26c:	sbb    DWORD PTR [rcx-0x4b],ebp
   14001e26f:	cmc    
   14001e270:	adc    dh,BYTE PTR [rip+0xfffffffff713c8f2]        # 0x13715ab68
   14001e276:	cwde   
   14001e277:	call   QWORD PTR [rcx]
   14001e279:	mov    cl,0x26
   14001e27b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001e27c:	adc    BYTE PTR [rbx+0x4c],dh
   14001e27f:	xchg   ecx,eax
   14001e280:	adc    eax,0x14145a3c
   14001e285:	(bad)  
   14001e286:	xor    BYTE PTR [rbx],ah
   14001e288:	(bad)  
   14001e289:	mov    eax,0x7a177a8e
   14001e28e:	in     al,0x4d
   14001e290:	cmp    BYTE PTR [rbp+0x46],cl
   14001e293:	loopne 0x14001e2ce
   14001e295:	(bad)  
   14001e296:	sub    al,0xd7
   14001e298:	cmp    ecx,ecx
   14001e29a:	xchg   edx,eax
   14001e29b:	mov    ?,WORD PTR [rdx]
   14001e29d:	or     edi,eax
   14001e29f:	mov    ecx,0x3cee443f
   14001e2a4:	xchg   BYTE PTR ds:[rbx+rcx*1+0x523ac03c],al
   14001e2ac:	cmp    eax,0x36655002
   14001e2b1:	pop    rsi
   14001e2b2:	(bad)  
   14001e2b3:	pop    rax
   14001e2b4:	(bad)  
   14001e2b5:	pushf  
   14001e2b6:	jge    0x14001e327
   14001e2b8:	xor    eax,0x3436c3da
   14001e2bd:	sbb    BYTE PTR [rcx-0x40a8ceff],ch
   14001e2c3:	test   BYTE PTR [rax],dh
   14001e2c5:	xchg   ebp,eax
   14001e2c6:	(bad)  
   14001e2c7:	mov    bl,0x32
   14001e2c9:	shr    DWORD PTR [rbx-0x16],cl
   14001e2cc:	xor    edx,DWORD PTR [rcx]
   14001e2ce:	add    ebp,ebx
   14001e2d0:	and    al,0x6b
   14001e2d2:	in     eax,0x90
   14001e2d4:	and    eax,0x27a78fa9
   14001e2d9:	out    dx,eax
   14001e2da:	xor    esi,edi
   14001e2dc:	es sub eax,0x6223c95b
   14001e2e2:	rex.WRB
   14001e2e3:	rex.WR and r12b,BYTE PTR [rax-0x19df84d9]
   14001e2ea:	cdq    
   14001e2eb:	and    ah,BYTE PTR [rcx]
   14001e2ed:	and    al,0xf3
   14001e2ef:	adc    eax,0x28b4782a
   14001e2f4:	sub    edi,DWORD PTR [rdx-0x3d6e022]
   14001e2fa:	(bad)  
   14001e2fb:	rex.RX sub BYTE PTR [rsi],r15b
   14001e2fe:	or     dh,BYTE PTR [rcx+0x2d]
   14001e301:	jno    0x14001e31f
   14001e303:	hlt    
   14001e304:	sub    al,0xb3
   14001e306:	jbe    0x14001e2cb
   14001e308:	cs cmc 
   14001e30a:	enter  0x2f9a,0x37
   14001e30e:	movabs ds:0xe75871c08d9a70ad,al
   14001e317:	div    DWORD PTR [rbx+0x1e]
   14001e31a:	pop    rcx
   14001e31b:	scas   al,BYTE PTR es:[rdi]
   14001e31c:	jb     0x14001e2fa
   14001e31e:	xor    ebx,DWORD PTR [rcx+0x1c259377]
   14001e324:	jbe    0x14001e377
   14001e326:	sub    r14,QWORD PTR [r15+r10*1-0xf]
   14001e32b:	jb     0x14001e3a2
   14001e32d:	(bad)  
   14001e32e:	fwait
   14001e32f:	rex.RB jle 0x14001e2bb
   14001e332:	fdivr  QWORD PTR [rax+0x7f]
   14001e335:	rex.WXB mov r14b,0x4f
   14001e338:	jge    0x14001e347
   14001e33a:	or     BYTE PTR [rsi],dl
   14001e33c:	jl     0x14001e30d
   14001e33e:	(bad)  
   14001e340:	jns    0x14001e2c2
   14001e342:	je     0x14001e2e8
   14001e344:	js     0x14001e388
   14001e346:	(bad)  
   14001e347:	xchg   ebx,eax
   14001e348:	jp     0x14001e34e
   14001e34a:	movabs al,ds:0x2ebc6cfdcac67bca
   14001e353:	mov    al,0x6d
   14001e355:	jle    0x14001e39b
   14001e357:	xchg   DWORD PTR [rdi+0x38],ebp
   14001e35a:	cli    
   14001e35b:	fisubr WORD PTR [rsi-0x6]
   14001e35e:	nop
   14001e35f:	jmp    0x1ac8898cf
   14001e364:	push   0x77
   14001e366:	in     al,dx
   14001e367:	pop    rbx
   14001e368:	push   0x69025231
   14001e36d:	repz cmp BYTE PTR [rip+0x87faf62],dh        # 0x1488192d6
   14001e374:	movsxd ebp,DWORD PTR [rbp+0x15]
   14001e377:	(bad)  
   14001e378:	(bad)  
   14001e379:	sub    ebp,DWORD PTR [rbx-0x3e169f9a]
   14001e37f:	push   rcx
   14001e380:	cmps   BYTE PTR gs:[rsi],BYTE PTR es:[rdi]
   14001e382:	xlat   BYTE PTR ds:[rbx]
   14001e383:	(bad)  
   14001e384:	fs fs mov ebp,0x32266e3
   14001e38b:	mov    edx,0x8d69e067
   14001e390:	rex.W xlat BYTE PTR ds:[rbx]
   14001e392:	retf   
   14001e393:	and    BYTE PTR [rcx+0x15],cl
   14001e396:	movabs eax,ds:0x75914a4e1f534b17
   14001e39f:	jns    0x14001e3f0
   14001e3a1:	fisub  WORD PTR [rbx-0x4]
   14001e3a4:	rex.WRX sbb al,0x9
   14001e3a7:	retf   
   14001e3a8:	rex.WR pop rdx
   14001e3aa:	mov    bh,0x92
   14001e3ac:	rex.WRB cdqe 
   14001e3ae:	frstor [rbp-0x67653bba]
   14001e3b4:	rex.RXB (bad) 
   14001e3b6:	lock scas eax,DWORD PTR es:[rdi]
   14001e3b8:	rex.RB
   14001e3b9:	rex
   14001e3ba:	rex.WRX test BYTE PTR [rdx+r8*4+0x24],0xc1
   14001e3c0:	rex.B int 0x32
   14001e3c3:	rex.R
   14001e3c4:	rex addps xmm6,XMMWORD PTR [rbx+0x42]
   14001e3c9:	rex.WB out 0x2a,al
   14001e3cc:	mov    ecx,DWORD PTR [r13+r11*1+0x5068f154]
   14001e3d4:	push   rbp
   14001e3d5:	xor    eax,DWORD PTR [rdx]
   14001e3d7:	addr32 push rdi
   14001e3d9:	jne    0x14001e397
   14001e3db:	ds push rsi
   14001e3dd:	mov    bh,0xd6
   14001e3df:	or     DWORD PTR [rbx-0x8],edx
   14001e3e2:	ror    BYTE PTR [rdx+rdx*2+0x50bbaa3a],0x7c
   14001e3ea:	adc    al,0xe2
   14001e3ec:	push   rcx
   14001e3ed:	mov    esi,0xe25ad57e
   14001e3f2:	cmp    eax,ebp
   14001e3f4:	pop    rbx
   14001e3f5:	and    BYTE PTR [rbx-0x21],dl
   14001e3f8:	pop    rcx
   14001e3f9:	in     ax,dx
   14001e3fb:	xchg   BYTE PTR [rax-0x5c],bl
   14001e3fe:	xchg   DWORD PTR [rcx+0x3491eb5d],esi
   14001e404:	pop    rsp
   14001e405:	sub    ebx,edi
   14001e407:	add    ebx,DWORD PTR [rsi+0x6f]
   14001e40a:	rex.RB pop r10
   14001e40c:	pop    rdi
   14001e40d:	lods   eax,DWORD PTR ds:[rsi]
   14001e40e:	(bad)  
   14001e40f:	ins    DWORD PTR es:[rdi],dx
   14001e410:	loope  0x14001e447
   14001e412:	sbb    eax,DWORD PTR [rax-0x488e0820]
   14001e418:	loop   0x14001e3cb
   14001e41a:	iret   
   14001e41b:	out    dx,al
   14001e41c:	jrcxz  0x14001e491
   14001e41e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001e41f:	(bad)  
   14001e421:	cmp    al,0xb3
   14001e423:	pop    rsp
   14001e424:	out    0xfe,eax
   14001e426:	fldcw  WORD PTR [rbx-0x1b]
   14001e429:	mov    eax,0x7ae43267
   14001e42e:	or     eax,0x4a26ef05
   14001e433:	cmp    dh,ch
   14001e435:	in     al,0x20
   14001e437:	paddsb mm4,QWORD PTR [rdx+0x60ed569e]
   14001e43e:	hlt    
   14001e43f:	(bad)  
   14001e440:	call   0x129e6c674
   14001e445:	in     eax,dx
   14001e446:	mov    bl,dl
   14001e448:	jmp    0x14001e3f5
   14001e44a:	ss mov ch,dl
   14001e44d:	imul   ebx,DWORD PTR [rbp+rdi*4-0x3],0xfcf0b813
   14001e455:	rcl    edx,1
   14001e457:	(bad)  
   14001e458:	(bad)  
   14001e459:	xchg   edi,eax
   14001e45a:	ins    BYTE PTR es:[rdi],dx
   14001e45b:	sahf   
   14001e45c:	call   QWORD PTR [rbp+0x6]
   14001e45f:	test   eax,0x2c101afa
   14001e464:	sti    
   14001e465:	fdivr  DWORD PTR [rdx+0x1b]
   14001e468:	stc    
   14001e469:	sahf   
   14001e46a:	(bad)  
   14001e46e:	scas   al,BYTE PTR es:[rdi]
   14001e46f:	jne    0x14001e464
   14001e471:	add    cl,ch
   14001e473:	rex.W
   14001e474:	bnd ret 0x7f83
   14001e478:	lock test BYTE PTR [rip+0x5746f126],bh        # 0x19748d5a5
   14001e47f:	adc    esp,esi
   14001e481:	or     DWORD PTR [rcx-0x6c],eax
   14001e484:	cmc    
   14001e485:	retf   
   14001e486:	sub    esp,DWORD PTR [rbx-0x56a7209]
   14001e48c:	test   BYTE PTR [rdi-0x1],0xcd
   14001e490:	fnstcw WORD PTR [rax+0x5d]
   14001e493:	(bad)  
   14001e494:	fdivr  DWORD PTR [rdx-0x325a8c9]
   14001e49a:	mov    DWORD PTR [rsi],ecx
   14001e49c:	fstp   TBYTE PTR [rsi]
   14001e49e:	jrcxz  0x14001e4d9
   14001e4a0:	fidiv  WORD PTR [rcx-0xb]
   14001e4a3:	mov    esp,0x8b9fb3df
   14001e4a8:	(bad)  
   14001e4aa:	and    edx,edx
   14001e4ac:	fdiv   QWORD PTR [rdi]
   14001e4ae:	rex.WXB in eax,0xd7
   14001e4b1:	imul   ecx,DWORD PTR [rax+rbx*8],0xffffffd6
   14001e4b5:	test   eax,0xefd4ef66
   14001e4ba:	fdiv   DWORD PTR [rsi-0x7e4dd22b]
   14001e4c0:	shl    BYTE PTR [rdx-0x5c],1
   14001e4c3:	add    al,0xd1
   14001e4c5:	movabs al,ds:0x24d26a70e6d333ce
   14001e4ce:	sbb    bl,BYTE PTR [rbp-0x3b]
   14001e4d1:	pop    rsi
   14001e4d2:	(bad)  
   14001e4d3:	adc    ah,al
   14001e4d5:	pushf  
   14001e4d6:	xchg   esp,eax
   14001e4d7:	(bad)  
   14001e4d8:	(bad)  
   14001e4d9:	fisubr DWORD PTR [rdx]
   14001e4db:	jle    0x14001e4a4
   14001e4dd:	sbb    BYTE PTR [rax+0x49],al
   14001e4e0:	ret    0x5657
   14001e4e3:	int3   
   14001e4e4:	ret    
   14001e4e5:	xchg   ebp,eax
   14001e4e6:	cmp    al,0xfb
   14001e4e8:	rcl    ebx,0x82
   14001e4eb:	movabs ds:0xa8af4dcb95e811c0,al
   14001e4f4:	retf   0xc58f
   14001e4f7:	lahf   
   14001e4f8:	enter  0x7bc9,0xc6
   14001e4fc:	leave  
   14001e4fd:	or     edx,DWORD PTR [rcx]
   14001e4ff:	icebp  
   14001e500:	int3   
   14001e501:	rex.R (bad) 
   14001e503:	je     0x14001e4d2
   14001e505:	xchg   BYTE PTR [rbp+0x43],ch
   14001e508:	iret   
   14001e509:	rcl    bl,0x1a
   14001e50c:	(bad)  
   14001e50d:	add    bh,BYTE PTR [rcx-0x69506ed3]
   14001e513:	rex xchg eax,eax
   14001e515:	ins    DWORD PTR es:[rdi],dx
   14001e516:	cld    
   14001e517:	ja     0x14001e4ab
   14001e519:	sub    eax,DWORD PTR [rdx+0x2e]
   14001e51c:	xchg   ebx,eax
   14001e51d:	jmp    0xe697fe4a
   14001e522:	ds pushf 
   14001e524:	xchg   edi,eax
   14001e525:	fs push rsp
   14001e527:	stos   DWORD PTR es:[rdi],eax
   14001e528:	xchg   ebp,eax
   14001e529:	and    ch,dl
   14001e52b:	repnz xchg esp,eax
   14001e52d:	loopne 0x14001e4af
   14001e52f:	(bad)
   14001e532:	xbegin 0x10faf63d6
   14001e538:	pushf  
   14001e539:	cmp    BYTE PTR [rbx],dl
   14001e53b:	xchg   esi,eax
   14001e53c:	popf   
   14001e53d:	cli    
   14001e53e:	jns    0x14001e4e1
   14001e540:	cwde   
   14001e541:	mov    ch,0x6f
   14001e543:	and    al,0x99
   14001e545:	ja     0x14001e54c
   14001e547:	adc    ebx,DWORD PTR [rbx-0x65b544cf]
   14001e54d:	repz sar DWORD PTR [rbp-0x73],1
   14001e551:	mov    DWORD PTR [rip+0x5f4b8c30],esi        # 0x19f4d7187
   14001e557:	(bad)  
   14001e558:	mov    cs,WORD PTR [rip+0xffffffffcf8f5ee1]        # 0x10f91443f
   14001e55e:	mov    ebp,DWORD PTR [rcx-0x76]
   14001e561:	sbb    BYTE PTR [rbp-0x8bd7414],0xdb
   14001e568:	mov    DWORD PTR [rcx+rcx*2],eax
   14001e56b:	(bad)  
   14001e56c:	mov    dh,al
   14001e56e:	and    esi,DWORD PTR [rbp-0x779b657d]
   14001e574:	(bad)  
   14001e575:	pop    rax
   14001e576:	(bad)  
   14001e577:	mov    edi,0xe6b01e80
   14001e57c:	sbb    esp,0x9384d1da
   14001e582:	int3   
   14001e583:	push   rsp
   14001e584:	test   DWORD PTR [rcx-0x5a],edx
   14001e587:	movsxd eax,DWORD PTR [rdi-0x79c5e7e9]
   14001e58d:	(bad)  
   14001e58e:	jb     0x14001e59d
   14001e590:	test   eax,0xa8a0d0e2
   14001e595:	and    BYTE PTR [rdx+0x466aa97],bh
   14001e59b:	(bad)  
   14001e59c:	stos   DWORD PTR es:[rdi],eax
   14001e59d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001e59e:	outs   dx,BYTE PTR ds:[rsi]
   14001e59f:	stc    
   14001e5a0:	scas   al,BYTE PTR es:[rdi]
   14001e5a1:	jmp    0x14001e61b
   14001e5a3:	jl     0x14001e554
   14001e5a5:	sub    DWORD PTR [rdx],edx
   14001e5a7:	rex.WXB lods rax,QWORD PTR ds:[rsi]
   14001e5a9:	outs   dx,DWORD PTR ds:[rsi]
   14001e5aa:	lods   al,BYTE PTR ds:[rsi]
   14001e5ab:	adc    ch,BYTE PTR [rbp+rbp*4-0xe58da3a]
   14001e5b2:	sbb    DWORD PTR [rax],0x2feb33a6
   14001e5b8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001e5b9:	jne    0x14001e610
   14001e5bb:	jbe    0x14001e562
   14001e5bd:	mov    bh,0x3f
   14001e5bf:	rex.B movabs al,ds:0xa3f3433aa1c429f8
   14001e5c9:	jl     0x14001e5c8
   14001e5cb:	stos   BYTE PTR es:[rdi],al
   14001e5cc:	movabs ds:0xb4d073c4b59d97be,al
   14001e5d5:	(bad)  
   14001e5d6:	sbb    edi,esp
   14001e5d8:	mov    dh,0x40
   14001e5da:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001e5db:	mov    esi,0x89cd82b7
   14001e5e0:	mov    dl,0xcd
   14001e5e2:	fisttp DWORD PTR [rbx+rsi*4]
   14001e5e5:	cmpxchg DWORD PTR [rbx],edi
   14001e5e8:	mov    cl,0x49
   14001e5ea:	punpckldq mm6,DWORD PTR [rax-0x44aa9a75]
   14001e5f1:	xlat   BYTE PTR ds:[rbx]
   14001e5f2:	and    ch,BYTE PTR [rax-0x46]
   14001e5f5:	adc    eax,0x53b85f48
   14001e5fa:	test   BYTE PTR [rsi],0xb9
   14001e5fd:	xchg   ecx,eax
   14001e5fe:	pushf  
   14001e5ff:	xor    DWORD PTR [rsi+rbx*8+0x1cbdb48a],edi
   14001e606:	loopne 0x14001e58b
   14001e608:	mov    edi,0xbeda5e5a
   14001e60d:	cwde   
   14001e60e:	xor    al,0xed
   14001e610:	add    BYTE PTR [rax],al
   14001e612:	add    BYTE PTR [rax],al
   14001e614:	mov    eax,0xaa6567bc
   14001e619:	or     eax,ecx
   14001e61b:	mov    edx,DWORD PTR [rdx]
   14001e61d:	mov    ch,0xaf
   14001e61f:	out    dx,al
   14001e620:	(bad)  
   14001e621:	(bad)  
   14001e622:	xchg   edi,eax
   14001e623:	push   rdi
   14001e624:	(bad)  
   14001e625:	fdivrp st(0),st
   14001e627:	xor    ah,BYTE PTR [rip+0xffffffff9ddc5f6b]        # 0xddde4598
   14001e62d:	xlat   BYTE PTR ds:[rbx]
   14001e62e:	cmp    BYTE PTR [rcx-0x10d74b3b],bh
   14001e634:	jge    0x14001e63e
   14001e636:	rex.WRXB mov r13b,BYTE PTR [r15-0x43]
   14001e63a:	loopne 0x14001e6a0
   14001e63c:	xlat   BYTE PTR ds:[rbx]
   14001e63d:	add    DWORD PTR [rdi-0x4029b5ff],eax
   14001e643:	mov    eax,0xddd86af2
   14001e648:	loopne 0x14001e629
   14001e64a:	ja     0x14001e67f
   14001e64c:	pop    rax
   14001e64d:	movsxd edx,DWORD PTR [rax]
   14001e64f:	push   rsi
   14001e650:	push   rax
   14001e651:	sbb    DWORD PTR [rdi-0x61],edx
   14001e654:	call   0x13afc16fe
   14001e659:	adc    BYTE PTR [rdi-0x753bdec],bl
   14001e65f:	jno    0x14001e640
   14001e661:	jnp    0x14001e623
   14001e663:	enter  0xc767,0xa7
   14001e667:	lods   eax,DWORD PTR ds:[rsi]
   14001e668:	jne    0x14001e6dc
   14001e66a:	or     BYTE PTR [rbx-0x33],al
   14001e66d:	(bad)  
   14001e66e:	outs   dx,DWORD PTR ds:[rsi]
   14001e66f:	es xchg ebp,eax
   14001e671:	lods   eax,DWORD PTR ds:[rsi]
   14001e672:	jg     0x14001e6e4
   14001e674:	sub    eax,0x3f151811
   14001e679:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001e67a:	mov    bh,0xfb
   14001e67c:	xchg   DWORD PTR [rax],ebx
   14001e67e:	rcr    BYTE PTR [rsi+0x27e8cf1a],1
   14001e684:	movabs ds:0x8ac20c6b0428f73,al
   14001e68d:	jp     0x14001e6d6
   14001e68f:	leave  
   14001e690:	movabs al,ds:0xa5bc88e183eaf32
   14001e699:	cmp    esp,DWORD PTR [rdi-0x4b]
   14001e69c:	mov    dl,0x87
   14001e69e:	add    al,dl
   14001e6a0:	(bad)  
   14001e6a1:	push   rax
   14001e6a2:	cmp    BYTE PTR [rcx-0x69],ch
   14001e6a5:	in     al,dx
   14001e6a6:	pop    rdi
   14001e6a7:	or     al,0x85
   14001e6a9:	pop    rcx
   14001e6aa:	lock loop 0x14001e6ea
   14001e6ad:	in     eax,0x97
   14001e6af:	xchg   DWORD PTR [rbp-0x7a],esp
   14001e6b2:	xchg   ecx,edx
   14001e6b4:	fnstsw WORD PTR [rdx]
   14001e6b6:	loopne 0x14001e66c
   14001e6b8:	iret   
   14001e6b9:	(bad)  
   14001e6ba:	rex.WRXB pop r10
   14001e6bc:	ja     0x14001e6f1
   14001e6be:	sub    BYTE PTR [rdi],bh
   14001e6c0:	(bad)  
   14001e6c1:	in     al,0x10
   14001e6c3:	xchg   BYTE PTR [rdx+0x58],dl
   14001e6c6:	ja     0x14001e6ab
   14001e6c8:	rex in eax,dx
   14001e6ca:	fmul   DWORD PTR [rip+0x68bf51f8]        # 0x1a8c138c8
   14001e6d0:	lock sub edi,eax
   14001e6d3:	movabs eax,ds:0x2a30225ac49f9748
   14001e6dc:	loop   0x14001e67c
   14001e6de:	push   rdi
   14001e6df:	rex.WRXB jg 0x14001e72b
   14001e6e2:	outs   dx,DWORD PTR ds:[rsi]
   14001e6e3:	test   bh,0xf5
   14001e6e6:	or     BYTE PTR [rbx+0x7da740d5],dl
   14001e6ec:	ins    DWORD PTR es:[rdi],dx
   14001e6ed:	cld    
   14001e6ee:	rcr    BYTE PTR [rax],0x35
   14001e6f1:	lahf   
   14001e6f2:	ror    BYTE PTR [rsi-0x73],1
   14001e6f5:	and    esi,DWORD PTR [rdi+0x18969f2b]
   14001e6fb:	vcvtsi2sd xmm15,xmm11,DWORD PTR [rdi-0x60]
   14001e700:	mov    edx,0x21947fd
   14001e705:	and    BYTE PTR [r8+rdx*1-0xc],dil
   14001e70a:	(bad)  
   14001e70b:	xchg   edx,eax
   14001e70c:	test   al,0x48
   14001e70e:	call   0x19816830a
   14001e713:	cmp    eax,0x583fa823
   14001e718:	xor    DWORD PTR [rip+0xffffffffa189b690],ebx        # 0xe18b9dae
   14001e71e:	not    ebx
   14001e720:	adc    al,0x76
   14001e722:	iret   
   14001e723:	push   0xffffffffffffffac
   14001e725:	retf   0xfa8
   14001e728:	mov    esi,0x6e1077f
   14001e72d:	ret    
   14001e72e:	(bad)  
   14001e72f:	test   BYTE PTR [rsi-0x60],bl
   14001e732:	jo     0x14001e706
   14001e734:	out    0x1c,al
   14001e736:	(bad)  
   14001e737:	mov    bh,0xf4
   14001e739:	test   eax,0x154c59b8
   14001e73e:	fistp  QWORD PTR [rcx+rdx*8]
   14001e741:	ret    0x85e7
   14001e744:	imul   edi,DWORD PTR [rsi-0x80],0x2fcb7be0
   14001e74b:	(bad)  
   14001e74c:	ret    
   14001e74d:	ja     0x14001e797
   14001e74f:	imul   ecx,ebx,0xd
   14001e752:	cpuid  
   14001e754:	jae    0x14001e707
   14001e756:	push   0xffffffffc70461c7
   14001e75b:	sub    ecx,ebx
   14001e75d:	mov    eax,0x6f444ca0
   14001e762:	cwde   
   14001e763:	cmc    
   14001e764:	cld    
   14001e765:	sar    edi,cl
   14001e767:	nop
   14001e768:	out    dx,al
   14001e769:	push   ax
   14001e76b:	jle    0x14001e7c3
   14001e76d:	fidiv  DWORD PTR [rdi]
   14001e76f:	sbb    ecx,DWORD PTR [rsi]
   14001e771:	mov    ecx,0x5b64d27
   14001e776:	sub    BYTE PTR [rax+rsi*4+0xc1cc6ef],spl
   14001e77e:	mov    BYTE PTR [rbx+0x1ab0db81],ah
   14001e784:	cmp    DWORD PTR [rdi-0x29],esp
   14001e787:	jg     0x14001e7b4
   14001e789:	sar    BYTE PTR [rax-0x6f],cl
   14001e78c:	xchg   ebx,eax
   14001e78d:	outs   dx,BYTE PTR ds:[rsi]
   14001e78e:	(bad)  
   14001e78f:	hlt    
   14001e790:	cmp    esp,DWORD PTR [rsi]
   14001e792:	test   DWORD PTR [rbx],0x66909a83
   14001e798:	xchg   ecx,eax
   14001e799:	(bad)  
   14001e79a:	(bad)  
   14001e79b:	mov    BYTE PTR [rcx],ch
   14001e79d:	xchg   ebx,eax
   14001e79e:	pop    rax
   14001e79f:	in     eax,dx
   14001e7a0:	mov    ah,0x44
   14001e7a2:	(bad)  
   14001e7a3:	push   rsp
   14001e7a4:	or     al,0xf8
   14001e7a6:	(bad)  
   14001e7a7:	xor    DWORD PTR [rsi],ebx
   14001e7a9:	rex.WRB test al,0xdf
   14001e7ac:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001e7ad:	icebp  
   14001e7ae:	iret   
   14001e7af:	mov    edx,0xecdf92fe
   14001e7b4:	rex.RX
   14001e7b5:	cs mov eax,0x179b5489
   14001e7bb:	addr32 in al,dx
   14001e7bd:	(bad)  
   14001e7be:	jo     0x14001e7c2
   14001e7c0:	jno    0x14001e7b2
   14001e7c2:	movabs rbx,0x3080f9dbde2f4cc9
   14001e7cc:	movsxd eax,DWORD PTR [rbp-0x19]
   14001e7cf:	push   rbp
   14001e7d0:	imul   edi,DWORD PTR [rdi],0xffffffa0
   14001e7d3:	pushf  
   14001e7d4:	rol    DWORD PTR [rbx+0x36c1f9c7],cl
   14001e7da:	push   0xf8a7917
   14001e7df:	jb     0x14001e7c5
   14001e7e1:	pop    rbp
   14001e7e2:	(bad)  
   14001e7e3:	retf   
   14001e7e4:	pop    rsp
   14001e7e5:	loope  0x14001e837
   14001e7e7:	scas   al,BYTE PTR es:[rdi]
   14001e7e8:	rex.WRX push rsp
   14001e7ea:	inc    DWORD PTR [rax-0xa]
   14001e7ed:	call   0xcbb00d8a
   14001e7f2:	mov    BYTE PTR [rbx+0x16],dh
   14001e7f5:	(bad)  
   14001e7f6:	out    dx,eax
   14001e7f7:	(bad)  
   14001e7f8:	add    al,0x82
   14001e7fa:	rex clc 
   14001e7fc:	mov    esp,0x219d273e
   14001e801:	jmp    0x1959b0c25
   14001e806:	js     0x14001e849
   14001e808:	mov    esp,eax
   14001e80a:	xlat   BYTE PTR ds:[rbx]
   14001e80b:	scas   eax,DWORD PTR es:[rdi]
   14001e80c:	xor    ebx,DWORD PTR [rax+rsi*4-0x36]
   14001e810:	in     eax,dx
   14001e811:	pop    rcx
   14001e812:	mov    dh,0x3b
   14001e814:	push   rbp
   14001e815:	in     eax,0xd1
   14001e817:	pop    rsi
   14001e818:	rex.RXB push r8
   14001e81a:	jle    0x14001e7cc
   14001e81c:	(bad)  
   14001e81d:	in     al,dx
   14001e81e:	sbb    ebp,edx
   14001e820:	(bad)  
   14001e821:	cmp    esp,DWORD PTR [rcx]
   14001e823:	ins    BYTE PTR es:[rdi],dx
   14001e824:	fiadd  DWORD PTR [rdi+0x32c80946]
   14001e82a:	jmp    0xce905916
   14001e82f:	(bad)  
   14001e830:	sub    ch,ch
   14001e832:	sahf   
   14001e833:	(bad)  
   14001e834:	nop
   14001e835:	push   rcx
   14001e836:	stc    
   14001e837:	mov    cl,0x82
   14001e839:	in     al,0x56
   14001e83b:	pop    rdi
   14001e83c:	cmp    bl,BYTE PTR [rax+0x31]
   14001e83f:	cmp    ah,BYTE PTR [rdi+0x1f83098f]
   14001e845:	xor    ebp,DWORD PTR [rsi-0x1a]
   14001e848:	or     eax,0xb508c186
   14001e84d:	cmp    ah,BYTE PTR [rsi-0x1ebf4293]
   14001e853:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001e854:	add    eax,0x17c186fc
   14001e859:	sub    QWORD PTR [r15],rbp
   14001e85c:	scas   eax,DWORD PTR es:[rdi]
   14001e85d:	cmc    
   14001e85e:	rex.WRX
   14001e85f:	rex.WX xor spl,BYTE PTR [rdx]
   14001e862:	jbe    0x14001e857
   14001e864:	mov    bl,BYTE PTR [rsi+0x2b989611]
   14001e86a:	mov    esi,0xd9972078
   14001e86f:	sbb    eax,0x4bc9f478
   14001e874:	ror    BYTE PTR [rax-0x52],0x2e
   14001e878:	sar    ch,cl
   14001e87a:	add    eax,eax
   14001e87c:	push   0x41
   14001e87e:	movs   WORD PTR es:[rdi],WORD PTR ds:[rsi]
   14001e880:	not    DWORD PTR [rsi+0x2a4f1c5e]
   14001e886:	cmp    DWORD PTR [rcx+0x5d],edi
   14001e889:	lahf   
   14001e88a:	xchg   esi,eax
   14001e88b:	xchg   edi,eax
   14001e88c:	in     eax,0x23
   14001e88e:	icebp  
   14001e88f:	repnz imul r11,QWORD PTR [r9],0x5
   14001e894:	cmc    
   14001e895:	xlat   BYTE PTR ds:[rbx]
   14001e896:	jle    0x14001e8f8
   14001e898:	out    0x62,eax
   14001e89a:	ror    DWORD PTR [rsi-0x144921a1],1
   14001e8a0:	ret    0x8e09
   14001e8a3:	push   rdx
   14001e8a4:	jp     0x14001e85b
   14001e8a6:	jmp    0x1860250e2
   14001e8ab:	fnop   
   14001e8ad:	mov    esp,0xdf88bc21
   14001e8b2:	xor    edx,ebp
   14001e8b4:	xor    BYTE PTR [rbx+0x56],ah
   14001e8b7:	(bad)  
   14001e8b8:	and    dl,dh
   14001e8ba:	stc    
   14001e8bb:	(bad)  
   14001e8bc:	(bad)  
   14001e8bd:	push   0xffffffffffffff9e
   14001e8bf:	add    al,0x7
   14001e8c1:	mov    ebp,0x1bfbda6
   14001e8c6:	rcr    eax,0xad
   14001e8c9:	mov    ah,0x6e
   14001e8cb:	ss adc eax,0x1d530908
   14001e8d1:	jb     0x14001e921
   14001e8d3:	(bad)  
   14001e8d4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001e8d5:	(bad)  
   14001e8d6:	sub    edi,edi
   14001e8d8:	mov    bh,0x7b
   14001e8da:	xchg   BYTE PTR [rcx],dl
   14001e8dc:	(bad)  
   14001e8de:	loope  0x14001e954
   14001e8e0:	xchg   edx,eax
   14001e8e1:	adc    cl,bl
   14001e8e3:	int    0x2a
   14001e8e5:	lods   al,BYTE PTR ds:[rsi]
   14001e8e6:	mov    esi,0x111938a8
   14001e8eb:	rex.RX and BYTE PTR [rbp-0x3927dc8a],0x66
   14001e8f3:	jne    0x14001e955
   14001e8f5:	jp     0x14001e8f8
   14001e8f7:	adc    BYTE PTR [rdx-0x31],dh
   14001e8fa:	scas   al,BYTE PTR es:[rdi]
   14001e8fb:	dec    dl
   14001e8fd:	jae    0x14001e8c8
   14001e8ff:	fwait
   14001e900:	push   rdi
   14001e901:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001e902:	icebp  
   14001e903:	and    ch,bh
   14001e905:	sbb    BYTE PTR [rsi+0x39adfd47],dl
   14001e90b:	test   eax,0xcc5e1145
   14001e910:	jbe    0x14001e95f
   14001e912:	out    dx,al
   14001e913:	(bad)  
   14001e914:	(bad)  
   14001e915:	icebp  
   14001e916:	mov    DWORD PTR [rbx-0x24],esp
   14001e919:	rex.R
   14001e91a:	lea    esp,es:[rax+rdi*8+0x41]
   14001e91f:	call   0x1917b191d
   14001e924:	xchg   r11d,eax
   14001e926:	(bad)  
   14001e927:	xor    al,0x53
   14001e929:	es mov cl,0xda
   14001e92c:	jmp    0x14001e8c8
   14001e92e:	(bad)  
   14001e92f:	mov    edi,0xe9c6f9b3
   14001e934:	or     eax,DWORD PTR [rbp-0x5f]
   14001e937:	mov    WORD PTR [rcx],ds
   14001e939:	lock (bad) 
   14001e93b:	(bad)
   14001e940:	cmp    al,0x9b
   14001e942:	push   rcx
   14001e943:	mov    esi,0xdb362784
   14001e948:	xchg   esi,eax
   14001e949:	xchg   edx,eax
   14001e94a:	cdq    
   14001e94b:	xor    eax,0x50fe2e2e
   14001e950:	es push rsp
   14001e952:	mov    ecx,0xdee89e99
   14001e957:	cld    
   14001e958:	mov    WORD PTR [rbp+0x71],ds
   14001e95b:	adc    dh,BYTE PTR [rcx+riz*8]
   14001e95e:	(bad)  
   14001e95f:	ja     0x14001e90a
   14001e961:	ss cs (bad) 
   14001e964:	adc    DWORD PTR [rdx+0x3f03ab49],ecx
   14001e96a:	out    0x45,al
   14001e96c:	mov    ebx,0xe3208183
   14001e971:	loopne 0x14001e904
   14001e973:	jbe    0x14001e9d0
   14001e975:	pop    rsp
   14001e976:	not    BYTE PTR [rbx]
   14001e978:	rex.WB jmp 0x195f3e6d7
   14001e97e:	ds cwde 
   14001e980:	ins    BYTE PTR es:[rdi],dx
   14001e981:	(bad)  
   14001e982:	(bad)  
   14001e983:	and    esp,edx
   14001e985:	ds (bad) 
   14001e987:	rex.R (bad) 
   14001e989:	mov    ecx,esi
   14001e98b:	stos   BYTE PTR es:[rdi],al
   14001e98c:	jle    0x14001e9c5
   14001e98e:	test   eax,0x417fd6cf
   14001e993:	cmp    BYTE PTR [rsi-0x3d],ch
   14001e996:	es pop rbp
   14001e998:	jl     0x14001ea10
   14001e99a:	mov    DWORD PTR [rbx-0x2911353c],esi
   14001e9a0:	pop    rcx
   14001e9a1:	sbb    eax,0xa1e16fd6
   14001e9a6:	mov    cl,0xa
   14001e9a8:	repz adc al,0x1e
   14001e9ab:	in     al,0x4b
   14001e9ad:	test   al,0x79
   14001e9af:	adc    DWORD PTR [rbx],0xabd769cb
   14001e9b5:	ja     0x14001e9c5
   14001e9b7:	mov    dl,0xb9
   14001e9b9:	ret    0x5ca1
   14001e9bc:	add    DWORD PTR [rsi-0x3a],edi
   14001e9bf:	cmp    DWORD PTR [rcx+rbp*4+0x152480fe],ebx
   14001e9c6:	cdq    
   14001e9c7:	in     eax,0x36
   14001e9c9:	movabs al,ds:0x66866e511c8e0b36
   14001e9d2:	(bad)  
   14001e9d3:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001e9d4:	fidiv  DWORD PTR ds:[rcx-0x3e]
   14001e9d8:	sub    al,0x6f
   14001e9da:	fisubr WORD PTR [rsp+rdx*4]
   14001e9dd:	sar    DWORD PTR [rcx-0x7efbf6b7],cl
   14001e9e3:	lock mov cl,0xb8
   14001e9e6:	out    0x95,al
   14001e9e8:	movabs ds:0x431e2eb11b7b490d,eax
   14001e9f1:	sar    BYTE PTR [rsi],cl
   14001e9f3:	rex.W sti 
   14001e9f5:	outs   dx,BYTE PTR ds:[rsi]
   14001e9f6:	pop    rcx
   14001e9f7:	sub    eax,0xc3f6dbe9
   14001e9fc:	push   rcx
   14001e9fd:	addr32 xchg ecx,eax
   14001e9ff:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001ea00:	int3   
   14001ea01:	mov    al,0xa9
   14001ea03:	(bad)  
   14001ea04:	je     0x14001ea12
   14001ea06:	(bad)  
   14001ea07:	jp     0x14001ea6f
   14001ea09:	mov    ecx,0x5de9461
   14001ea0e:	(bad)  
   14001ea0f:	icebp  
   14001ea10:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001ea12:	jb     0x14001ea59
   14001ea14:	js     0x14001ea7f
   14001ea16:	je     0x14001ea68
   14001ea18:	jb     0x14001ea89
   14001ea1a:	movsxd esp,DWORD PTR [rbp+0x73]
   14001ea1d:	jae    0x14001ea1f
   14001ea1f:	add    BYTE PTR [rbp+0x0],ch
   14001ea22:	jae    0x14001ea24
   14001ea24:	movsxd eax,DWORD PTR [rax]
   14001ea26:	outs   dx,DWORD PTR ds:[rsi]
   14001ea27:	add    BYTE PTR [rdx+0x0],dh
   14001ea2a:	add    BYTE PTR gs:[rbp+0x0],ah
   14001ea2e:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   14001ea33:	add    BYTE PTR [rax+rax*1+0x0],ch
   14001ea37:	add    BYTE PTR [rdx],bh
   14001ea39:	and    BYTE PTR [rax],al
   14001ea3b:	add    BYTE PTR [rsi],ch
   14001ea3d:	(bad)  
   14001ea3e:	pop    rsp
   14001ea3f:	add    BYTE PTR [rdi],bh
   14001ea41:	sub    al,BYTE PTR [rax]
	...
   14001ea4f:	add    BYTE PTR [rsi+0x69],dl
   14001ea52:	jae    0x14001eac9
   14001ea54:	(bad)  
   14001ea55:	ins    BYTE PTR es:[rdi],dx
   14001ea56:	and    BYTE PTR [rbx+0x2b],al
   14001ea59:	sub    esp,DWORD PTR [rax]
   14001ea5b:	rex.XB push r10
   14001ea5d:	push   rsp
   14001ea5e:	cmp    ah,BYTE PTR [rax]
   14001ea60:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14001ea62:	je     0x14001ea84
   14001ea64:	outs   dx,BYTE PTR gs:[rsi]
   14001ea66:	outs   dx,DWORD PTR ds:[rsi]
   14001ea67:	jne    0x14001ead0
   14001ea69:	push   0x6d656d20
   14001ea6e:	outs   dx,DWORD PTR ds:[rsi]
   14001ea6f:	jb     0x14001eaea
   14001ea71:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   14001ea75:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14001ea78:	jo     0x14001eae6
   14001ea7a:	gs je  0x14001eae2
   14001ea7d:	and    BYTE PTR [rbx+0x61],ah
   14001ea80:	ins    BYTE PTR es:[rdi],dx
   14001ea81:	ins    BYTE PTR es:[rdi],dx
   14001ea82:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   14001ea86:	jae    0x14001eafc
   14001ea88:	jb     0x14001eaef
   14001ea8a:	jb     0x14001eafe
   14001ea8c:	outs   dx,DWORD PTR ds:[rsi]
   14001ea8d:	jb     0x14001eabd
   14001ea8f:	add    BYTE PTR [rdx+0x0],dh
   14001ea92:	jne    0x14001ea94
   14001ea94:	outs   dx,BYTE PTR ds:[rsi]
   14001ea95:	add    BYTE PTR [rax+rax*1+0x69],dh
   14001ea99:	add    BYTE PTR [rbp+0x0],ch
   14001ea9c:	add    BYTE PTR gs:[rax],ah
   14001ea9f:	add    BYTE PTR [rbp+0x0],ah
   14001eaa2:	jb     0x14001eaa4
   14001eaa4:	jb     0x14001eaa6
   14001eaa6:	outs   dx,DWORD PTR ds:[rsi]
   14001eaa7:	add    BYTE PTR [rdx+0x0],dh
   14001eaaa:	and    BYTE PTR [rax],al
   14001eaac:	add    BYTE PTR [rax],al
   14001eaae:	add    BYTE PTR [rax],al
   14001eab0:	or     eax,0xa00
   14001eab5:	add    BYTE PTR [rax],al
   14001eab7:	add    BYTE PTR [rax+rax*1+0x4c],dl
   14001eabb:	add    BYTE PTR [rdi+0x0],cl
   14001eabe:	push   rbx
   14001eabf:	add    BYTE PTR [rbx+0x0],dl
   14001eac2:	and    BYTE PTR [rax],al
   14001eac4:	add    BYTE PTR gs:[rdx+0x0],dh
   14001eac8:	jb     0x14001eaca
   14001eaca:	outs   dx,DWORD PTR ds:[rsi]
   14001eacb:	add    BYTE PTR [rdx+0x0],dh
   14001eace:	or     eax,0xa00
   14001ead3:	add    BYTE PTR [rax],al
   14001ead5:	add    BYTE PTR [rax],al
   14001ead7:	add    BYTE PTR [rbx+0x0],dl
   14001eada:	rex.WB add BYTE PTR [r14+0x0],cl
   14001eade:	rex.RXB add BYTE PTR [r8],r12b
   14001eae1:	add    BYTE PTR [rbp+0x0],ah
   14001eae4:	jb     0x14001eae6
   14001eae6:	jb     0x14001eae8
   14001eae8:	outs   dx,DWORD PTR ds:[rsi]
   14001eae9:	add    BYTE PTR [rdx+0x0],dh
   14001eaec:	or     eax,0xa00
   14001eaf1:	add    BYTE PTR [rax],al
   14001eaf3:	add    BYTE PTR [rax],al
   14001eaf5:	add    BYTE PTR [rax],al
   14001eaf7:	add    BYTE PTR [rax+rax*1+0x4f],al
   14001eafb:	add    BYTE PTR [rbp+0x0],cl
   14001eafe:	add    BYTE PTR [r9+0x0],cl
   14001eb02:	rex.WRX add BYTE PTR [rax],r12b
   14001eb05:	add    BYTE PTR [rbp+0x0],ah
   14001eb08:	jb     0x14001eb0a
   14001eb0a:	jb     0x14001eb0c
   14001eb0c:	outs   dx,DWORD PTR ds:[rsi]
   14001eb0d:	add    BYTE PTR [rdx+0x0],dh
   14001eb10:	or     eax,0xa00
	...
   14001eb1d:	add    BYTE PTR [rax],al
   14001eb1f:	add    BYTE PTR [rdx+0x0],dl
   14001eb22:	add    BYTE PTR ss:[rax],dh
   14001eb25:	add    BYTE PTR [rbx],dh
   14001eb27:	add    BYTE PTR [rbx],dh
   14001eb29:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d01f52f
   14001eb2f:	add    BYTE PTR [rax],ah
   14001eb31:	add    BYTE PTR [rcx+0x0],al
   14001eb34:	je     0x14001eb36
   14001eb36:	je     0x14001eb38
   14001eb38:	add    BYTE PTR gs:[rbp+0x0],ch
   14001eb3c:	jo     0x14001eb3e
   14001eb3e:	je     0x14001eb40
   14001eb40:	and    BYTE PTR [rax],al
   14001eb42:	je     0x14001eb44
   14001eb44:	outs   dx,DWORD PTR ds:[rsi]
   14001eb45:	add    BYTE PTR [rax],ah
   14001eb47:	add    BYTE PTR [rbp+0x0],dh
   14001eb4a:	jae    0x14001eb4c
   14001eb4c:	add    BYTE PTR gs:[rax],ah
   14001eb4f:	add    BYTE PTR [rbp+0x0],cl
   14001eb52:	push   rbx
   14001eb53:	add    BYTE PTR [rcx+0x0],cl
   14001eb56:	rex.WR add BYTE PTR [rax],r12b
   14001eb59:	add    BYTE PTR [rbx+0x0],ah
   14001eb5c:	outs   dx,DWORD PTR ds:[rsi]
   14001eb5d:	add    BYTE PTR [rax+rax*1+0x65],ah
   14001eb61:	add    BYTE PTR [rax],ah
   14001eb63:	add    BYTE PTR [rsi+0x0],ah
   14001eb66:	jb     0x14001eb68
   14001eb68:	outs   dx,DWORD PTR ds:[rsi]
   14001eb69:	add    BYTE PTR [rbp+0x0],ch
   14001eb6c:	and    BYTE PTR [rax],al
   14001eb6e:	je     0x14001eb70
   14001eb70:	push   0x73006900
   14001eb75:	add    BYTE PTR [rax],ah
   14001eb77:	add    BYTE PTR [rcx+0x0],ah
   14001eb7a:	jae    0x14001eb7c
   14001eb7c:	jae    0x14001eb7e
   14001eb7e:	add    BYTE PTR gs:[rbp+0x0],ch
   14001eb82:	(bad)  
   14001eb83:	add    BYTE PTR [rax+rax*1+0x79],ch
   14001eb87:	add    BYTE PTR [rax],ah
   14001eb89:	add    BYTE PTR [rax+rax*1+0x75],ah
   14001eb8d:	add    BYTE PTR [rdx+0x0],dh
   14001eb90:	imul   eax,DWORD PTR [rax],0x67006e
   14001eb96:	and    BYTE PTR [rax],al
   14001eb98:	outs   dx,BYTE PTR ds:[rsi]
   14001eb99:	add    BYTE PTR [rcx+0x0],ah
   14001eb9c:	je     0x14001eb9e
   14001eb9e:	imul   eax,DWORD PTR [rax],0x650076
   14001eba4:	and    BYTE PTR [rax],al
   14001eba6:	movsxd eax,DWORD PTR [rax]
   14001eba8:	outs   dx,DWORD PTR ds:[rsi]
   14001eba9:	add    BYTE PTR [rax+rax*1+0x65],ah
   14001ebad:	add    BYTE PTR [rax],ah
   14001ebaf:	add    BYTE PTR [rcx+0x0],ch
   14001ebb2:	outs   dx,BYTE PTR ds:[rsi]
   14001ebb3:	add    BYTE PTR [rcx+0x0],ch
   14001ebb6:	je     0x14001ebb8
   14001ebb8:	imul   eax,DWORD PTR [rax],0x6c0061
   14001ebbe:	imul   eax,DWORD PTR [rax],0x61007a
   14001ebc4:	je     0x14001ebc6
   14001ebc6:	imul   eax,DWORD PTR [rax],0x6e006f
   14001ebcc:	or     al,BYTE PTR [rax]
   14001ebce:	push   rsp
   14001ebcf:	add    BYTE PTR [rax+0x0],ch
   14001ebd2:	imul   eax,DWORD PTR [rax],0x200073
   14001ebd8:	imul   eax,DWORD PTR [rax],0x64006e
   14001ebde:	imul   eax,DWORD PTR [rax],0x610063
   14001ebe4:	je     0x14001ebe6
   14001ebe6:	add    BYTE PTR gs:[rbx+0x0],dh
   14001ebea:	and    BYTE PTR [rax],al
   14001ebec:	(bad)  
   14001ebed:	add    BYTE PTR [rax],ah
   14001ebef:	add    BYTE PTR [rdx+0x0],ah
   14001ebf2:	jne    0x14001ebf4
   14001ebf4:	add    BYTE PTR [eax],ah
   14001ebf7:	add    BYTE PTR [rcx+0x0],ch
   14001ebfa:	outs   dx,BYTE PTR ds:[rsi]
   14001ebfb:	add    BYTE PTR [rax],ah
   14001ebfd:	add    BYTE PTR [rcx+0x0],bh
   14001ec00:	outs   dx,DWORD PTR ds:[rsi]
   14001ec01:	add    BYTE PTR [rbp+0x0],dh
   14001ec04:	jb     0x14001ec06
   14001ec06:	and    BYTE PTR [rax],al
   14001ec08:	(bad)  
   14001ec09:	add    BYTE PTR [rax+0x0],dh
   14001ec0c:	jo     0x14001ec0e
   14001ec0e:	ins    BYTE PTR es:[rdi],dx
   14001ec0f:	add    BYTE PTR [rcx+0x0],ch
   14001ec12:	movsxd eax,DWORD PTR [rax]
   14001ec14:	(bad)  
   14001ec15:	add    BYTE PTR [rax+rax*1+0x69],dh
   14001ec19:	add    BYTE PTR [rdi+0x0],ch
   14001ec1c:	outs   dx,BYTE PTR ds:[rsi]
   14001ec1d:	add    BYTE PTR [rsi],ch
   14001ec1f:	add    BYTE PTR [rax],ah
   14001ec21:	add    BYTE PTR [rcx+0x0],cl
   14001ec24:	je     0x14001ec26
   14001ec26:	and    BYTE PTR [rax],al
   14001ec28:	imul   eax,DWORD PTR [rax],0x200073
   14001ec2e:	ins    DWORD PTR es:[rdi],dx
   14001ec2f:	add    BYTE PTR [rdi+0x0],ch
   14001ec32:	jae    0x14001ec34
   14001ec34:	je     0x14001ec36
   14001ec36:	and    BYTE PTR [rax],al
   14001ec38:	ins    BYTE PTR es:[rdi],dx
   14001ec39:	add    BYTE PTR [rcx+0x0],ch
   14001ec3c:	imul   eax,DWORD PTR [rax],0x65
   14001ec3f:	add    BYTE PTR [rax+rax*1+0x79],ch
   14001ec43:	add    BYTE PTR [rax],ah
   14001ec45:	add    BYTE PTR [rax+rax*1+0x68],dh
   14001ec49:	add    BYTE PTR [rbp+0x0],ah
   14001ec4c:	and    BYTE PTR [rax],al
   14001ec4e:	jb     0x14001ec50
   14001ec50:	add    BYTE PTR gs:[rbx+0x0],dh
   14001ec54:	jne    0x14001ec56
   14001ec56:	ins    BYTE PTR es:[rdi],dx
   14001ec57:	add    BYTE PTR [rax+rax*1+0x20],dh
   14001ec5b:	add    BYTE PTR [rdi+0x0],ch
   14001ec5e:	data16 add BYTE PTR [rax],ah
   14001ec61:	add    BYTE PTR [rbx+0x0],ah
   14001ec64:	(bad)  
   14001ec65:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14001ec69:	add    BYTE PTR [rcx+0x0],ch
   14001ec6c:	outs   dx,BYTE PTR ds:[rsi]
   14001ec6d:	add    BYTE PTR [rdi+0x0],ah
   14001ec70:	and    BYTE PTR [rax],al
   14001ec72:	(bad)  
   14001ec73:	add    BYTE PTR [rsi+0x0],ch
   14001ec76:	and    BYTE PTR [rax],al
   14001ec78:	rex.WRB add BYTE PTR [r11+0x0],r10b
   14001ec7c:	rex.WB add BYTE PTR [r8+rax*1+0x2d],cl
   14001ec81:	add    BYTE PTR [rbx+0x0],ah
   14001ec84:	outs   dx,DWORD PTR ds:[rsi]
   14001ec85:	add    BYTE PTR [rbp+0x0],ch
   14001ec88:	jo     0x14001ec8a
   14001ec8a:	imul   eax,DWORD PTR [rax],0x65006c
   14001ec90:	add    BYTE PTR fs:[rax],ah
   14001ec93:	add    BYTE PTR [rax],ch
   14001ec95:	add    BYTE PTR [rdi],ch
   14001ec97:	add    BYTE PTR [rbx+0x0],ah
   14001ec9a:	ins    BYTE PTR es:[rdi],dx
   14001ec9b:	add    BYTE PTR [rdx+0x0],dh
   14001ec9e:	sub    DWORD PTR [rax],eax
   14001eca0:	and    BYTE PTR [rax],al
   14001eca2:	data16 add BYTE PTR [rbp+0x0],dh
   14001eca6:	outs   dx,BYTE PTR ds:[rsi]
   14001eca7:	add    BYTE PTR [rbx+0x0],ah
   14001ecaa:	je     0x14001ecac
   14001ecac:	imul   eax,DWORD PTR [rax],0x6e006f
   14001ecb2:	and    BYTE PTR [rax],al
   14001ecb4:	data16 add BYTE PTR [rdx+0x0],dh
   14001ecb8:	outs   dx,DWORD PTR ds:[rsi]
   14001ecb9:	add    BYTE PTR [rbp+0x0],ch
   14001ecbc:	and    BYTE PTR [rax],al
   14001ecbe:	(bad)  
   14001ecbf:	add    BYTE PTR [rax],ah
   14001ecc1:	add    BYTE PTR [rsi+0x0],ch
   14001ecc4:	(bad)  
   14001ecc5:	add    BYTE PTR [rax+rax*1+0x69],dh
   14001ecc9:	add    BYTE PTR [rsi+0x0],dh
   14001eccc:	add    BYTE PTR gs:[rax],ah
   14001eccf:	add    BYTE PTR [rbx+0x0],ah
   14001ecd2:	outs   dx,DWORD PTR ds:[rsi]
   14001ecd3:	add    BYTE PTR [rsi+0x0],ch
   14001ecd6:	jae    0x14001ecd8
   14001ecd8:	je     0x14001ecda
   14001ecda:	jb     0x14001ecdc
   14001ecdc:	jne    0x14001ecde
   14001ecde:	movsxd eax,DWORD PTR [rax]
   14001ece0:	je     0x14001ece2
   14001ece2:	outs   dx,DWORD PTR ds:[rsi]
   14001ece3:	add    BYTE PTR [rdx+0x0],dh
   14001ece6:	and    BYTE PTR [rax],al
   14001ece8:	outs   dx,DWORD PTR ds:[rsi]
   14001ece9:	add    BYTE PTR [rdx+0x0],dh
   14001ecec:	and    BYTE PTR [rax],al
   14001ecee:	data16 add BYTE PTR [rdx+0x0],dh
   14001ecf2:	outs   dx,DWORD PTR ds:[rsi]
   14001ecf3:	add    BYTE PTR [rbp+0x0],ch
   14001ecf6:	and    BYTE PTR [rax],al
   14001ecf8:	add    BYTE PTR [rax+rax*1+0x6c],r13b
   14001ecfd:	add    BYTE PTR [rbp+0x0],cl
   14001ed00:	(bad)  
   14001ed01:	add    BYTE PTR [rcx+0x0],ch
   14001ed04:	outs   dx,BYTE PTR ds:[rsi]
   14001ed05:	add    BYTE PTR [rsi],ch
   14001ed07:	add    BYTE PTR [rip+0xa00],cl        # 0x14001f70d
   14001ed0d:	add    BYTE PTR [rax],al
   14001ed0f:	add    BYTE PTR [rdx+0x0],dl
   14001ed12:	add    BYTE PTR ss:[rax],dh
   14001ed15:	add    BYTE PTR [rbx],dh
   14001ed17:	add    BYTE PTR [rdx],dh
   14001ed19:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d01f71f
   14001ed1f:	add    BYTE PTR [rax],ah
   14001ed21:	add    BYTE PTR [rsi+0x0],ch
   14001ed24:	outs   dx,DWORD PTR ds:[rsi]
   14001ed25:	add    BYTE PTR [rax+rax*1+0x20],dh
   14001ed29:	add    BYTE PTR [rbp+0x0],ah
   14001ed2c:	outs   dx,BYTE PTR ds:[rsi]
   14001ed2d:	add    BYTE PTR [rdi+0x0],ch
   14001ed30:	jne    0x14001ed32
   14001ed32:	add    BYTE PTR [eax+0x0],ch
   14001ed36:	and    BYTE PTR [rax],al
   14001ed38:	jae    0x14001ed3a
   14001ed3a:	jo     0x14001ed3c
   14001ed3c:	(bad)  
   14001ed3d:	add    BYTE PTR [rbx+0x0],ah
   14001ed40:	add    BYTE PTR gs:[rax],ah
   14001ed43:	add    BYTE PTR [rsi+0x0],ah
   14001ed46:	outs   dx,DWORD PTR ds:[rsi]
   14001ed47:	add    BYTE PTR [rdx+0x0],dh
   14001ed4a:	and    BYTE PTR [rax],al
   14001ed4c:	ins    BYTE PTR es:[rdi],dx
   14001ed4d:	add    BYTE PTR [rdi+0x0],ch
   14001ed50:	movsxd eax,DWORD PTR [rax]
   14001ed52:	(bad)  
   14001ed53:	add    BYTE PTR [rax+rax*1+0x65],ch
   14001ed57:	add    BYTE PTR [rax],ah
   14001ed59:	add    BYTE PTR [rcx+0x0],ch
   14001ed5c:	outs   dx,BYTE PTR ds:[rsi]
   14001ed5d:	add    BYTE PTR [rsi+0x0],ah
   14001ed60:	outs   dx,DWORD PTR ds:[rsi]
   14001ed61:	add    BYTE PTR [rdx+0x0],dh
   14001ed64:	ins    DWORD PTR es:[rdi],dx
   14001ed65:	add    BYTE PTR [rcx+0x0],ah
   14001ed68:	je     0x14001ed6a
   14001ed6a:	imul   eax,DWORD PTR [rax],0x6e006f
   14001ed70:	or     eax,0xa00
	...
   14001ed7d:	add    BYTE PTR [rax],al
   14001ed7f:	add    BYTE PTR [rdx+0x0],dl
   14001ed82:	add    BYTE PTR ss:[rax],dh
   14001ed85:	add    BYTE PTR [rbx],dh
   14001ed87:	add    BYTE PTR [rcx],dh
   14001ed89:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d01f78f
   14001ed8f:	add    BYTE PTR [rax],ah
   14001ed91:	add    BYTE PTR [rcx+0x0],al
   14001ed94:	je     0x14001ed96
   14001ed96:	je     0x14001ed98
   14001ed98:	add    BYTE PTR gs:[rbp+0x0],ch
   14001ed9c:	jo     0x14001ed9e
   14001ed9e:	je     0x14001eda0
   14001eda0:	and    BYTE PTR [rax],al
   14001eda2:	je     0x14001eda4
   14001eda4:	outs   dx,DWORD PTR ds:[rsi]
   14001eda5:	add    BYTE PTR [rax],ah
   14001eda7:	add    BYTE PTR [rcx+0x0],ch
   14001edaa:	outs   dx,BYTE PTR ds:[rsi]
   14001edab:	add    BYTE PTR [rcx+0x0],ch
   14001edae:	je     0x14001edb0
   14001edb0:	imul   eax,DWORD PTR [rax],0x6c0061
   14001edb6:	imul   eax,DWORD PTR [rax],0x65007a
   14001edbc:	and    BYTE PTR [rax],al
   14001edbe:	je     0x14001edc0
   14001edc0:	push   0x20006500
   14001edc5:	add    BYTE PTR [rbx+0x0],al
   14001edc8:	push   rdx
   14001edc9:	add    BYTE PTR [rax+rax*1+0x20],dl
   14001edcd:	add    BYTE PTR [rbp+0x0],ch
   14001edd0:	outs   dx,DWORD PTR ds:[rsi]
   14001edd1:	add    BYTE PTR [rdx+0x0],dh
   14001edd4:	add    BYTE PTR gs:[rax],ah
   14001edd7:	add    BYTE PTR [rax+rax*1+0x68],dh
   14001eddb:	add    BYTE PTR [rcx+0x0],ah
   14001edde:	outs   dx,BYTE PTR ds:[rsi]
   14001eddf:	add    BYTE PTR [rax],ah
   14001ede1:	add    BYTE PTR [rdi+0x0],ch
   14001ede4:	outs   dx,BYTE PTR ds:[rsi]
   14001ede5:	add    BYTE PTR [rbx+0x0],ah
   14001ede8:	add    BYTE PTR gs:[rsi],ch
   14001edeb:	add    BYTE PTR [rdx],cl
   14001eded:	add    BYTE PTR [rax+rax*1+0x68],dl
   14001edf1:	add    BYTE PTR [rcx+0x0],ch
   14001edf4:	jae    0x14001edf6
   14001edf6:	and    BYTE PTR [rax],al
   14001edf8:	imul   eax,DWORD PTR [rax],0x64006e
   14001edfe:	imul   eax,DWORD PTR [rax],0x610063
   14001ee04:	je     0x14001ee06
   14001ee06:	add    BYTE PTR gs:[rbx+0x0],dh
   14001ee0a:	and    BYTE PTR [rax],al
   14001ee0c:	(bad)  
   14001ee0d:	add    BYTE PTR [rax],ah
   14001ee0f:	add    BYTE PTR [rdx+0x0],ah
   14001ee12:	jne    0x14001ee14
   14001ee14:	add    BYTE PTR [eax],ah
   14001ee17:	add    BYTE PTR [rcx+0x0],ch
   14001ee1a:	outs   dx,BYTE PTR ds:[rsi]
   14001ee1b:	add    BYTE PTR [rax],ah
   14001ee1d:	add    BYTE PTR [rcx+0x0],bh
   14001ee20:	outs   dx,DWORD PTR ds:[rsi]
   14001ee21:	add    BYTE PTR [rbp+0x0],dh
   14001ee24:	jb     0x14001ee26
   14001ee26:	and    BYTE PTR [rax],al
   14001ee28:	(bad)  
   14001ee29:	add    BYTE PTR [rax+0x0],dh
   14001ee2c:	jo     0x14001ee2e
   14001ee2e:	ins    BYTE PTR es:[rdi],dx
   14001ee2f:	add    BYTE PTR [rcx+0x0],ch
   14001ee32:	movsxd eax,DWORD PTR [rax]
   14001ee34:	(bad)  
   14001ee35:	add    BYTE PTR [rax+rax*1+0x69],dh
   14001ee39:	add    BYTE PTR [rdi+0x0],ch
   14001ee3c:	outs   dx,BYTE PTR ds:[rsi]
   14001ee3d:	add    BYTE PTR [rsi],ch
   14001ee3f:	add    BYTE PTR [rip+0xa00],cl        # 0x14001f845
   14001ee45:	add    BYTE PTR [rax],al
   14001ee47:	add    BYTE PTR [rdx+0x0],dl
   14001ee4a:	add    BYTE PTR ss:[rax],dh
   14001ee4d:	add    BYTE PTR [rbx],dh
   14001ee4f:	add    BYTE PTR [rax],dh
   14001ee51:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d01f857
   14001ee57:	add    BYTE PTR [rax],ah
   14001ee59:	add    BYTE PTR [rbx+0x0],al
   14001ee5c:	push   rdx
   14001ee5d:	add    BYTE PTR [rax+rax*1+0x20],dl
   14001ee61:	add    BYTE PTR [rsi+0x0],ch
   14001ee64:	outs   dx,DWORD PTR ds:[rsi]
   14001ee65:	add    BYTE PTR [rax+rax*1+0x20],dh
   14001ee69:	add    BYTE PTR [rcx+0x0],ch
   14001ee6c:	outs   dx,BYTE PTR ds:[rsi]
   14001ee6d:	add    BYTE PTR [rcx+0x0],ch
   14001ee70:	je     0x14001ee72
   14001ee72:	imul   eax,DWORD PTR [rax],0x6c0061
   14001ee78:	imul   eax,DWORD PTR [rax],0x65007a
   14001ee7e:	add    BYTE PTR fs:[rip+0xa00],cl        # 0x14001f885
	...
   14001ee8d:	add    BYTE PTR [rax],al
   14001ee8f:	add    BYTE PTR [rdx+0x0],dl
   14001ee92:	add    BYTE PTR ss:[rax],dh
   14001ee95:	add    BYTE PTR [rdx],dh
   14001ee97:	add    BYTE PTR [rax],bh
   14001ee99:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d01f89f
   14001ee9f:	add    BYTE PTR [rax],ah
   14001eea1:	add    BYTE PTR [rbp+0x0],dh
   14001eea4:	outs   dx,BYTE PTR ds:[rsi]
   14001eea5:	add    BYTE PTR [rcx+0x0],ah
   14001eea8:	(bad)  
   14001eea9:	add    BYTE PTR [rax+rax*1+0x65],ch
   14001eead:	add    BYTE PTR [rax],ah
   14001eeaf:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14001eeb3:	add    BYTE PTR [rax],ah
   14001eeb5:	add    BYTE PTR [rcx+0x0],ch
   14001eeb8:	outs   dx,BYTE PTR ds:[rsi]
   14001eeb9:	add    BYTE PTR [rcx+0x0],ch
   14001eebc:	je     0x14001eebe
   14001eebe:	imul   eax,DWORD PTR [rax],0x6c0061
   14001eec4:	imul   eax,DWORD PTR [rax],0x65007a
   14001eeca:	and    BYTE PTR [rax],al
   14001eecc:	push   0x61006500
   14001eed1:	add    BYTE PTR [rax+0x0],dh
   14001eed4:	or     eax,0xa00
   14001eed9:	add    BYTE PTR [rax],al
   14001eedb:	add    BYTE PTR [rax],al
   14001eedd:	add    BYTE PTR [rax],al
   14001eedf:	add    BYTE PTR [rdx+0x0],dl
   14001eee2:	add    BYTE PTR ss:[rax],dh
   14001eee5:	add    BYTE PTR [rdx],dh
   14001eee7:	add    BYTE PTR [rdi],dh
   14001eee9:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d01f8ef
   14001eeef:	add    BYTE PTR [rax],ah
   14001eef1:	add    BYTE PTR [rsi+0x0],ch
   14001eef4:	outs   dx,DWORD PTR ds:[rsi]
   14001eef5:	add    BYTE PTR [rax+rax*1+0x20],dh
   14001eef9:	add    BYTE PTR [rbp+0x0],ah
   14001eefc:	outs   dx,BYTE PTR ds:[rsi]
   14001eefd:	add    BYTE PTR [rdi+0x0],ch
   14001ef00:	jne    0x14001ef02
   14001ef02:	add    BYTE PTR [eax+0x0],ch
   14001ef06:	and    BYTE PTR [rax],al
   14001ef08:	jae    0x14001ef0a
   14001ef0a:	jo     0x14001ef0c
   14001ef0c:	(bad)  
   14001ef0d:	add    BYTE PTR [rbx+0x0],ah
   14001ef10:	add    BYTE PTR gs:[rax],ah
   14001ef13:	add    BYTE PTR [rsi+0x0],ah
   14001ef16:	outs   dx,DWORD PTR ds:[rsi]
   14001ef17:	add    BYTE PTR [rdx+0x0],dh
   14001ef1a:	and    BYTE PTR [rax],al
   14001ef1c:	ins    BYTE PTR es:[rdi],dx
   14001ef1d:	add    BYTE PTR [rdi+0x0],ch
   14001ef20:	ja     0x14001ef22
   14001ef22:	imul   eax,DWORD PTR [rax],0x20006f
   14001ef28:	imul   eax,DWORD PTR [rax],0x69006e
   14001ef2e:	je     0x14001ef30
   14001ef30:	imul   eax,DWORD PTR [rax],0x6c0061
   14001ef36:	imul   eax,DWORD PTR [rax],0x61007a
   14001ef3c:	je     0x14001ef3e
   14001ef3e:	imul   eax,DWORD PTR [rax],0x6e006f
   14001ef44:	or     eax,0xa00
   14001ef49:	add    BYTE PTR [rax],al
   14001ef4b:	add    BYTE PTR [rax],al
   14001ef4d:	add    BYTE PTR [rax],al
   14001ef4f:	add    BYTE PTR [rdx+0x0],dl
   14001ef52:	add    BYTE PTR ss:[rax],dh
   14001ef55:	add    BYTE PTR [rdx],dh
   14001ef57:	add    BYTE PTR [rsi],dh
   14001ef59:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d01f95f
   14001ef5f:	add    BYTE PTR [rax],ah
   14001ef61:	add    BYTE PTR [rsi+0x0],ch
   14001ef64:	outs   dx,DWORD PTR ds:[rsi]
   14001ef65:	add    BYTE PTR [rax+rax*1+0x20],dh
   14001ef69:	add    BYTE PTR [rbp+0x0],ah
   14001ef6c:	outs   dx,BYTE PTR ds:[rsi]
   14001ef6d:	add    BYTE PTR [rdi+0x0],ch
   14001ef70:	jne    0x14001ef72
   14001ef72:	add    BYTE PTR [eax+0x0],ch
   14001ef76:	and    BYTE PTR [rax],al
   14001ef78:	jae    0x14001ef7a
   14001ef7a:	jo     0x14001ef7c
   14001ef7c:	(bad)  
   14001ef7d:	add    BYTE PTR [rbx+0x0],ah
   14001ef80:	add    BYTE PTR gs:[rax],ah
   14001ef83:	add    BYTE PTR [rsi+0x0],ah
   14001ef86:	outs   dx,DWORD PTR ds:[rsi]
   14001ef87:	add    BYTE PTR [rdx+0x0],dh
   14001ef8a:	and    BYTE PTR [rax],al
   14001ef8c:	jae    0x14001ef8e
   14001ef8e:	je     0x14001ef90
   14001ef90:	add    BYTE PTR fs:[rcx+0x0],ch
   14001ef94:	outs   dx,DWORD PTR ds:[rsi]
   14001ef95:	add    BYTE PTR [rax],ah
   14001ef97:	add    BYTE PTR [rcx+0x0],ch
   14001ef9a:	outs   dx,BYTE PTR ds:[rsi]
   14001ef9b:	add    BYTE PTR [rcx+0x0],ch
   14001ef9e:	je     0x14001efa0
   14001efa0:	imul   eax,DWORD PTR [rax],0x6c0061
   14001efa6:	imul   eax,DWORD PTR [rax],0x61007a
   14001efac:	je     0x14001efae
   14001efae:	imul   eax,DWORD PTR [rax],0x6e006f
   14001efb4:	or     eax,0xa00
   14001efb9:	add    BYTE PTR [rax],al
   14001efbb:	add    BYTE PTR [rax],al
   14001efbd:	add    BYTE PTR [rax],al
   14001efbf:	add    BYTE PTR [rdx+0x0],dl
   14001efc2:	add    BYTE PTR ss:[rax],dh
   14001efc5:	add    BYTE PTR [rdx],dh
   14001efc7:	add    BYTE PTR [rip+0xa000d00],dh        # 0x14a01fccd
   14001efcd:	add    BYTE PTR [rip+0x70002000],ch        # 0x1b0020fd3
   14001efd3:	add    BYTE PTR [rbp+0x0],dh
   14001efd6:	jb     0x14001efd8
   14001efd8:	add    BYTE PTR gs:[rax],ah
   14001efdb:	add    BYTE PTR [rsi+0x0],dh
   14001efde:	imul   eax,DWORD PTR [rax],0x740072
   14001efe4:	jne    0x14001efe6
   14001efe6:	(bad)  
   14001efe7:	add    BYTE PTR [rax+rax*1+0x20],ch
   14001efeb:	add    BYTE PTR [rsi+0x0],ah
   14001efee:	jne    0x14001eff0
   14001eff0:	outs   dx,BYTE PTR ds:[rsi]
   14001eff1:	add    BYTE PTR [rbx+0x0],ah
   14001eff4:	je     0x14001eff6
   14001eff6:	imul   eax,DWORD PTR [rax],0x6e006f
   14001effc:	and    BYTE PTR [rax],al
   14001effe:	movsxd eax,DWORD PTR [rax]
   14001f000:	(bad)  
   14001f001:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14001f005:	add    BYTE PTR [rip+0xa00],cl        # 0x14001fa0b
   14001f00b:	add    BYTE PTR [rax],al
   14001f00d:	add    BYTE PTR [rax],al
   14001f00f:	add    BYTE PTR [rdx+0x0],dl
   14001f012:	add    BYTE PTR ss:[rax],dh
   14001f015:	add    BYTE PTR [rdx],dh
   14001f017:	add    BYTE PTR [rax+rax*1],dh
   14001f01a:	or     eax,0x2d000a00
   14001f01f:	add    BYTE PTR [rax],ah
   14001f021:	add    BYTE PTR [rsi+0x0],ch
   14001f024:	outs   dx,DWORD PTR ds:[rsi]
   14001f025:	add    BYTE PTR [rax+rax*1+0x20],dh
   14001f029:	add    BYTE PTR [rbp+0x0],ah
   14001f02c:	outs   dx,BYTE PTR ds:[rsi]
   14001f02d:	add    BYTE PTR [rdi+0x0],ch
   14001f030:	jne    0x14001f032
   14001f032:	add    BYTE PTR [eax+0x0],ch
   14001f036:	and    BYTE PTR [rax],al
   14001f038:	jae    0x14001f03a
   14001f03a:	jo     0x14001f03c
   14001f03c:	(bad)  
   14001f03d:	add    BYTE PTR [rbx+0x0],ah
   14001f040:	add    BYTE PTR gs:[rax],ah
   14001f043:	add    BYTE PTR [rsi+0x0],ah
   14001f046:	outs   dx,DWORD PTR ds:[rsi]
   14001f047:	add    BYTE PTR [rdx+0x0],dh
   14001f04a:	and    BYTE PTR [rax],al
   14001f04c:	pop    rdi
   14001f04d:	add    BYTE PTR [rdi+0x0],ch
   14001f050:	outs   dx,BYTE PTR ds:[rsi]
   14001f051:	add    BYTE PTR [rbp+0x0],ah
   14001f054:	js     0x14001f056
   14001f056:	imul   eax,DWORD PTR [rax],0x2f0074
   14001f05c:	(bad)  
   14001f05d:	add    BYTE PTR [rax+rax*1+0x65],dh
   14001f061:	add    BYTE PTR [rax+0x0],bh
   14001f064:	imul   eax,DWORD PTR [rax],0x200074
   14001f06a:	je     0x14001f06c
   14001f06c:	(bad)  
   14001f06d:	add    BYTE PTR [rdx+0x0],ah
   14001f070:	ins    BYTE PTR es:[rdi],dx
   14001f071:	add    BYTE PTR [rbp+0x0],ah
   14001f074:	or     eax,0xa00
   14001f079:	add    BYTE PTR [rax],al
   14001f07b:	add    BYTE PTR [rax],al
   14001f07d:	add    BYTE PTR [rax],al
   14001f07f:	add    BYTE PTR [rdx+0x0],dl
   14001f082:	add    BYTE PTR ss:[rax],dh
   14001f085:	add    BYTE PTR [rcx],dh
   14001f087:	add    BYTE PTR [rcx],bh
   14001f089:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d01fa8f
   14001f08f:	add    BYTE PTR [rax],ah
   14001f091:	add    BYTE PTR [rbp+0x0],dh
   14001f094:	outs   dx,BYTE PTR ds:[rsi]
   14001f095:	add    BYTE PTR [rcx+0x0],ah
   14001f098:	(bad)  
   14001f099:	add    BYTE PTR [rax+rax*1+0x65],ch
   14001f09d:	add    BYTE PTR [rax],ah
   14001f09f:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14001f0a3:	add    BYTE PTR [rax],ah
   14001f0a5:	add    BYTE PTR [rdi+0x0],ch
   14001f0a8:	jo     0x14001f0aa
   14001f0aa:	add    BYTE PTR gs:[rsi+0x0],ch
   14001f0ae:	and    BYTE PTR [rax],al
   14001f0b0:	movsxd eax,DWORD PTR [rax]
   14001f0b2:	outs   dx,DWORD PTR ds:[rsi]
   14001f0b3:	add    BYTE PTR [rsi+0x0],ch
   14001f0b6:	jae    0x14001f0b8
   14001f0b8:	outs   dx,DWORD PTR ds:[rsi]
   14001f0b9:	add    BYTE PTR [rax+rax*1+0x65],ch
   14001f0bd:	add    BYTE PTR [rax],ah
   14001f0bf:	add    BYTE PTR [rax+rax*1+0x65],ah
   14001f0c3:	add    BYTE PTR [rsi+0x0],dh
   14001f0c6:	imul   eax,DWORD PTR [rax],0x650063
   14001f0cc:	or     eax,0xa00
	...
   14001f0dd:	add    BYTE PTR [rax],al
   14001f0df:	add    BYTE PTR [rdx+0x0],dl
   14001f0e2:	add    BYTE PTR ss:[rax],dh
   14001f0e5:	add    BYTE PTR [rcx],dh
   14001f0e7:	add    BYTE PTR [rax],bh
   14001f0e9:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d01faef
   14001f0ef:	add    BYTE PTR [rax],ah
   14001f0f1:	add    BYTE PTR [rbp+0x0],dh
   14001f0f4:	outs   dx,BYTE PTR ds:[rsi]
   14001f0f5:	add    BYTE PTR [rbp+0x0],ah
   14001f0f8:	js     0x14001f0fa
   14001f0fa:	jo     0x14001f0fc
   14001f0fc:	add    BYTE PTR gs:[rbx+0x0],ah
   14001f100:	je     0x14001f102
   14001f102:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   14001f107:	add    BYTE PTR [rax+0x0],ch
   14001f10a:	add    BYTE PTR gs:[rcx+0x0],ah
   14001f10e:	jo     0x14001f110
   14001f110:	and    BYTE PTR [rax],al
   14001f112:	add    BYTE PTR gs:[rdx+0x0],dh
   14001f116:	jb     0x14001f118
   14001f118:	outs   dx,DWORD PTR ds:[rsi]
   14001f119:	add    BYTE PTR [rdx+0x0],dh
   14001f11c:	or     eax,0xa00
	...
   14001f12d:	add    BYTE PTR [rax],al
   14001f12f:	add    BYTE PTR [rdx+0x0],dl
   14001f132:	add    BYTE PTR ss:[rax],dh
   14001f135:	add    BYTE PTR [rcx],dh
   14001f137:	add    BYTE PTR [rdi],dh
   14001f139:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d01fb3f
   14001f13f:	add    BYTE PTR [rax],ah
   14001f141:	add    BYTE PTR [rbp+0x0],dh
   14001f144:	outs   dx,BYTE PTR ds:[rsi]
   14001f145:	add    BYTE PTR [rbp+0x0],ah
   14001f148:	js     0x14001f14a
   14001f14a:	jo     0x14001f14c
   14001f14c:	add    BYTE PTR gs:[rbx+0x0],ah
   14001f150:	je     0x14001f152
   14001f152:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   14001f157:	add    BYTE PTR [rbp+0x0],ch
   14001f15a:	jne    0x14001f15c
   14001f15c:	ins    BYTE PTR es:[rdi],dx
   14001f15d:	add    BYTE PTR [rax+rax*1+0x69],dh
   14001f161:	add    BYTE PTR [rax+rax*1+0x68],dh
   14001f165:	add    BYTE PTR [rdx+0x0],dh
   14001f168:	add    BYTE PTR gs:[rcx+0x0],ah
   14001f16c:	add    BYTE PTR fs:[rax],ah
   14001f16f:	add    BYTE PTR [rax+rax*1+0x6f],ch
   14001f173:	add    BYTE PTR [rbx+0x0],ah
   14001f176:	imul   eax,DWORD PTR [rax],0x20
   14001f179:	add    BYTE PTR [rbp+0x0],ah
   14001f17c:	jb     0x14001f17e
   14001f17e:	jb     0x14001f180
   14001f180:	outs   dx,DWORD PTR ds:[rsi]
   14001f181:	add    BYTE PTR [rdx+0x0],dh
   14001f184:	or     eax,0xa00
   14001f189:	add    BYTE PTR [rax],al
   14001f18b:	add    BYTE PTR [rax],al
   14001f18d:	add    BYTE PTR [rax],al
   14001f18f:	add    BYTE PTR [rdx+0x0],dl
   14001f192:	add    BYTE PTR ss:[rax],dh
   14001f195:	add    BYTE PTR [rcx],dh
   14001f197:	add    BYTE PTR [rsi],dh
   14001f199:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d01fb9f
   14001f19f:	add    BYTE PTR [rax],ah
   14001f1a1:	add    BYTE PTR [rsi+0x0],ch
   14001f1a4:	outs   dx,DWORD PTR ds:[rsi]
   14001f1a5:	add    BYTE PTR [rax+rax*1+0x20],dh
   14001f1a9:	add    BYTE PTR [rbp+0x0],ah
   14001f1ac:	outs   dx,BYTE PTR ds:[rsi]
   14001f1ad:	add    BYTE PTR [rdi+0x0],ch
   14001f1b0:	jne    0x14001f1b2
   14001f1b2:	add    BYTE PTR [eax+0x0],ch
   14001f1b6:	and    BYTE PTR [rax],al
   14001f1b8:	jae    0x14001f1ba
   14001f1ba:	jo     0x14001f1bc
   14001f1bc:	(bad)  
   14001f1bd:	add    BYTE PTR [rbx+0x0],ah
   14001f1c0:	add    BYTE PTR gs:[rax],ah
   14001f1c3:	add    BYTE PTR [rsi+0x0],ah
   14001f1c6:	outs   dx,DWORD PTR ds:[rsi]
   14001f1c7:	add    BYTE PTR [rdx+0x0],dh
   14001f1ca:	and    BYTE PTR [rax],al
   14001f1cc:	je     0x14001f1ce
   14001f1ce:	push   0x65007200
   14001f1d3:	add    BYTE PTR [rcx+0x0],ah
   14001f1d6:	add    BYTE PTR fs:[rax],ah
   14001f1d9:	add    BYTE PTR [rax+rax*1+0x61],ah
   14001f1dd:	add    BYTE PTR [rax+rax*1+0x61],dh
   14001f1e1:	add    BYTE PTR [rip+0xa00],cl        # 0x14001fbe7
	...
   14001f1ef:	add    BYTE PTR [rdx+0x0],dl
   14001f1f2:	add    BYTE PTR ss:[rax],dh
   14001f1f5:	add    BYTE PTR [rcx],dh
   14001f1f7:	add    BYTE PTR [rax],dh
   14001f1f9:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d01fbff
   14001f1ff:	add    BYTE PTR [rax],ah
   14001f201:	add    BYTE PTR [rcx+0x0],ah
   14001f204:	(bad)  
   14001f205:	add    BYTE PTR [rdi+0x0],ch
   14001f208:	jb     0x14001f20a
   14001f20a:	je     0x14001f20c
   14001f20c:	sub    BYTE PTR [rax],al
   14001f20e:	sub    DWORD PTR [rax],eax
   14001f210:	and    BYTE PTR [rax],al
   14001f212:	push   0x73006100
   14001f217:	add    BYTE PTR [rax],ah
   14001f219:	add    BYTE PTR [rdx+0x0],ah
   14001f21c:	add    BYTE PTR gs:[rbp+0x0],ah
   14001f220:	outs   dx,BYTE PTR ds:[rsi]
   14001f221:	add    BYTE PTR [rax],ah
   14001f223:	add    BYTE PTR [rbx+0x0],ah
   14001f226:	(bad)  
   14001f227:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14001f22b:	add    BYTE PTR [rbp+0x0],ah
   14001f22e:	add    BYTE PTR fs:[rip+0xa00],cl        # 0x14001fc35
	...
   14001f23d:	add    BYTE PTR [rax],al
   14001f23f:	add    BYTE PTR [rdx+0x0],dl
   14001f242:	add    BYTE PTR ss:[rax],dh
   14001f245:	add    BYTE PTR [rax],dh
   14001f247:	add    BYTE PTR [rcx],bh
   14001f249:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d01fc4f
   14001f24f:	add    BYTE PTR [rax],ah
   14001f251:	add    BYTE PTR [rsi+0x0],ch
   14001f254:	outs   dx,DWORD PTR ds:[rsi]
   14001f255:	add    BYTE PTR [rax+rax*1+0x20],dh
   14001f259:	add    BYTE PTR [rbp+0x0],ah
   14001f25c:	outs   dx,BYTE PTR ds:[rsi]
   14001f25d:	add    BYTE PTR [rdi+0x0],ch
   14001f260:	jne    0x14001f262
   14001f262:	add    BYTE PTR [eax+0x0],ch
   14001f266:	and    BYTE PTR [rax],al
   14001f268:	jae    0x14001f26a
   14001f26a:	jo     0x14001f26c
   14001f26c:	(bad)  
   14001f26d:	add    BYTE PTR [rbx+0x0],ah
   14001f270:	add    BYTE PTR gs:[rax],ah
   14001f273:	add    BYTE PTR [rsi+0x0],ah
   14001f276:	outs   dx,DWORD PTR ds:[rsi]
   14001f277:	add    BYTE PTR [rdx+0x0],dh
   14001f27a:	and    BYTE PTR [rax],al
   14001f27c:	add    BYTE PTR gs:[rsi+0x0],ch
   14001f280:	jbe    0x14001f282
   14001f282:	imul   eax,DWORD PTR [rax],0x6f0072
   14001f288:	outs   dx,BYTE PTR ds:[rsi]
   14001f289:	add    BYTE PTR [rbp+0x0],ch
   14001f28c:	add    BYTE PTR gs:[rsi+0x0],ch
   14001f290:	je     0x14001f292
   14001f292:	or     eax,0xa00
	...
   14001f29f:	add    BYTE PTR [rdx+0x0],dl
   14001f2a2:	add    BYTE PTR ss:[rax],dh
   14001f2a5:	add    BYTE PTR [rax],dh
   14001f2a7:	add    BYTE PTR [rax],bh
   14001f2a9:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d01fcaf
   14001f2af:	add    BYTE PTR [rax],ah
   14001f2b1:	add    BYTE PTR [rsi+0x0],ch
   14001f2b4:	outs   dx,DWORD PTR ds:[rsi]
   14001f2b5:	add    BYTE PTR [rax+rax*1+0x20],dh
   14001f2b9:	add    BYTE PTR [rbp+0x0],ah
   14001f2bc:	outs   dx,BYTE PTR ds:[rsi]
   14001f2bd:	add    BYTE PTR [rdi+0x0],ch
   14001f2c0:	jne    0x14001f2c2
   14001f2c2:	add    BYTE PTR [eax+0x0],ch
   14001f2c6:	and    BYTE PTR [rax],al
   14001f2c8:	jae    0x14001f2ca
   14001f2ca:	jo     0x14001f2cc
   14001f2cc:	(bad)  
   14001f2cd:	add    BYTE PTR [rbx+0x0],ah
   14001f2d0:	add    BYTE PTR gs:[rax],ah
   14001f2d3:	add    BYTE PTR [rsi+0x0],ah
   14001f2d6:	outs   dx,DWORD PTR ds:[rsi]
   14001f2d7:	add    BYTE PTR [rdx+0x0],dh
   14001f2da:	and    BYTE PTR [rax],al
   14001f2dc:	(bad)  
   14001f2dd:	add    BYTE PTR [rdx+0x0],dh
   14001f2e0:	add    BYTE PTR [ebp+0x0],dh
   14001f2e4:	ins    DWORD PTR es:[rdi],dx
   14001f2e5:	add    BYTE PTR [rbp+0x0],ah
   14001f2e8:	outs   dx,BYTE PTR ds:[rsi]
   14001f2e9:	add    BYTE PTR [rax+rax*1+0x73],dh
   14001f2ed:	add    BYTE PTR [rip+0xa00],cl        # 0x14001fcf3
	...
   14001f2ff:	add    BYTE PTR [rdx+0x0],dl
   14001f302:	add    BYTE PTR ss:[rax],dh
   14001f305:	add    BYTE PTR [rax],dh
   14001f307:	add    BYTE PTR [rdx],dh
   14001f309:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d01fd0f
   14001f30f:	add    BYTE PTR [rax],ah
   14001f311:	add    BYTE PTR [rsi+0x0],ah
   14001f314:	ins    BYTE PTR es:[rdi],dx
   14001f315:	add    BYTE PTR [rdi+0x0],ch
   14001f318:	(bad)  
   14001f319:	add    BYTE PTR [rax+rax*1+0x69],dh
   14001f31d:	add    BYTE PTR [rsi+0x0],ch
   14001f320:	add    BYTE PTR [eax],ah
   14001f323:	add    BYTE PTR [rax+0x0],dh
   14001f326:	outs   dx,DWORD PTR ds:[rsi]
   14001f327:	add    BYTE PTR [rcx+0x0],ch
   14001f32a:	outs   dx,BYTE PTR ds:[rsi]
   14001f32b:	add    BYTE PTR [rax+rax*1+0x20],dh
   14001f32f:	add    BYTE PTR [rbx+0x0],dh
   14001f332:	jne    0x14001f334
   14001f334:	jo     0x14001f336
   14001f336:	jo     0x14001f338
   14001f338:	outs   dx,DWORD PTR ds:[rsi]
   14001f339:	add    BYTE PTR [rdx+0x0],dh
   14001f33c:	je     0x14001f33e
   14001f33e:	and    BYTE PTR [rax],al
   14001f340:	outs   dx,BYTE PTR ds:[rsi]
   14001f341:	add    BYTE PTR [rdi+0x0],ch
   14001f344:	je     0x14001f346
   14001f346:	and    BYTE PTR [rax],al
   14001f348:	ins    BYTE PTR es:[rdi],dx
   14001f349:	add    BYTE PTR [rdi+0x0],ch
   14001f34c:	(bad)  
   14001f34d:	add    BYTE PTR [rax+rax*1+0x65],ah
   14001f351:	add    BYTE PTR [rax+rax*1+0xd],ah
   14001f355:	add    BYTE PTR [rdx],cl
	...
   14001f35f:	add    BYTE PTR [rdx],al
	...
   14001f369:	repz add DWORD PTR [rax+0x1],eax
   14001f36d:	add    BYTE PTR [rax],al
   14001f36f:	add    BYTE PTR [rax],cl
   14001f371:	add    BYTE PTR [rax],al
   14001f373:	add    BYTE PTR [rax],al
   14001f375:	add    BYTE PTR [rax],al
   14001f377:	add    BYTE PTR [rax+0x14001f2],ah
   14001f37d:	add    BYTE PTR [rax],al
   14001f37f:	add    BYTE PTR [rcx],cl
   14001f381:	add    BYTE PTR [rax],al
   14001f383:	add    BYTE PTR [rax],al
   14001f385:	add    BYTE PTR [rax],al
   14001f387:	add    BYTE PTR [rax-0xe],al
   14001f38a:	add    DWORD PTR [rax+0x1],eax
   14001f38d:	add    BYTE PTR [rax],al
   14001f38f:	add    BYTE PTR [rdx],cl
   14001f391:	add    BYTE PTR [rax],al
   14001f393:	add    BYTE PTR [rax],al
   14001f395:	add    BYTE PTR [rax],al
   14001f397:	add    al,dh
   14001f399:	icebp  
   14001f39a:	add    DWORD PTR [rax+0x1],eax
   14001f39d:	add    BYTE PTR [rax],al
   14001f39f:	add    BYTE PTR [rax],dl
   14001f3a1:	add    BYTE PTR [rax],al
   14001f3a3:	add    BYTE PTR [rax],al
   14001f3a5:	add    BYTE PTR [rax],al
   14001f3a7:	add    BYTE PTR [rax+0x14001f1],dl
   14001f3ad:	add    BYTE PTR [rax],al
   14001f3af:	add    BYTE PTR [rcx],dl
   14001f3b1:	add    BYTE PTR [rax],al
   14001f3b3:	add    BYTE PTR [rax],al
   14001f3b5:	add    BYTE PTR [rax],al
   14001f3b7:	add    BYTE PTR [rax],dh
   14001f3b9:	icebp  
   14001f3ba:	add    DWORD PTR [rax+0x1],eax
   14001f3bd:	add    BYTE PTR [rax],al
   14001f3bf:	add    BYTE PTR [rdx],dl
   14001f3c1:	add    BYTE PTR [rax],al
   14001f3c3:	add    BYTE PTR [rax],al
   14001f3c5:	add    BYTE PTR [rax],al
   14001f3c7:	add    al,ah
   14001f3c9:	lock add DWORD PTR [rax+0x1],eax
   14001f3cd:	add    BYTE PTR [rax],al
   14001f3cf:	add    BYTE PTR [rbx],dl
   14001f3d1:	add    BYTE PTR [rax],al
   14001f3d3:	add    BYTE PTR [rax],al
   14001f3d5:	add    BYTE PTR [rax],al
   14001f3d7:	add    BYTE PTR [rax+0x14001f0],al
   14001f3dd:	add    BYTE PTR [rax],al
   14001f3df:	add    BYTE PTR [rax],bl
   14001f3e1:	add    BYTE PTR [rax],al
   14001f3e3:	add    BYTE PTR [rax],al
   14001f3e5:	add    BYTE PTR [rax],al
   14001f3e7:	add    BYTE PTR [rax],dl
   14001f3e9:	lock add DWORD PTR [rax+0x1],eax
   14001f3ed:	add    BYTE PTR [rax],al
   14001f3ef:	add    BYTE PTR [rcx],bl
   14001f3f1:	add    BYTE PTR [rax],al
   14001f3f3:	add    BYTE PTR [rax],al
   14001f3f5:	add    BYTE PTR [rax],al
   14001f3f7:	add    al,al
   14001f3f9:	out    dx,eax
   14001f3fa:	add    DWORD PTR [rax+0x1],eax
   14001f3fd:	add    BYTE PTR [rax],al
   14001f3ff:	add    BYTE PTR [rdx],bl
   14001f401:	add    BYTE PTR [rax],al
   14001f403:	add    BYTE PTR [rax],al
   14001f405:	add    BYTE PTR [rax],al
   14001f407:	add    BYTE PTR [rax-0x11],dl
   14001f40a:	add    DWORD PTR [rax+0x1],eax
   14001f40d:	add    BYTE PTR [rax],al
   14001f40f:	add    BYTE PTR [rbx],bl
   14001f411:	add    BYTE PTR [rax],al
   14001f413:	add    BYTE PTR [rax],al
   14001f415:	add    BYTE PTR [rax],al
   14001f417:	add    al,ah
   14001f419:	out    dx,al
   14001f41a:	add    DWORD PTR [rax+0x1],eax
   14001f41d:	add    BYTE PTR [rax],al
   14001f41f:	add    BYTE PTR [rax+rax*1],bl
   14001f422:	add    BYTE PTR [rax],al
   14001f424:	add    BYTE PTR [rax],al
   14001f426:	add    BYTE PTR [rax],al
   14001f428:	nop
   14001f429:	out    dx,al
   14001f42a:	add    DWORD PTR [rax+0x1],eax
   14001f42d:	add    BYTE PTR [rax],al
   14001f42f:	add    BYTE PTR [rsi],bl
   14001f431:	add    BYTE PTR [rax],al
   14001f433:	add    BYTE PTR [rax],al
   14001f435:	add    BYTE PTR [rax],al
   14001f437:	add    BYTE PTR [rax-0x12],cl
   14001f43a:	add    DWORD PTR [rax+0x1],eax
   14001f43d:	add    BYTE PTR [rax],al
   14001f43f:	add    BYTE PTR [rdi],bl
   14001f441:	add    BYTE PTR [rax],al
   14001f443:	add    BYTE PTR [rax],al
   14001f445:	add    BYTE PTR [rax],al
   14001f447:	add    BYTE PTR [rax+0x14001ed],al
   14001f44d:	add    BYTE PTR [rax],al
   14001f44f:	add    BYTE PTR [rax],ah
   14001f451:	add    BYTE PTR [rax],al
   14001f453:	add    BYTE PTR [rax],al
   14001f455:	add    BYTE PTR [rax],al
   14001f457:	add    BYTE PTR [rax],dl
   14001f459:	in     eax,dx
   14001f45a:	add    DWORD PTR [rax+0x1],eax
   14001f45d:	add    BYTE PTR [rax],al
   14001f45f:	add    BYTE PTR [rcx],ah
   14001f461:	add    BYTE PTR [rax],al
   14001f463:	add    BYTE PTR [rax],al
   14001f465:	add    BYTE PTR [rax],al
   14001f467:	add    BYTE PTR [rax],ah
   14001f469:	jmp    0x14001f46c
   14001f46b:	rex add DWORD PTR [rax],eax
   14001f46e:	add    BYTE PTR [rax],al
   14001f470:	js     0x14001f472
   14001f472:	add    BYTE PTR [rax],al
   14001f474:	add    BYTE PTR [rax],al
   14001f476:	add    BYTE PTR [rax],al
   14001f478:	clc    
   14001f479:	(bad)  
   14001f47a:	add    DWORD PTR [rax+0x1],eax
   14001f47d:	add    BYTE PTR [rax],al
   14001f47f:	add    BYTE PTR [rcx+0x0],bh
   14001f482:	add    BYTE PTR [rax],al
   14001f484:	add    BYTE PTR [rax],al
   14001f486:	add    BYTE PTR [rax],al
   14001f488:	fsubr  st,st(2)
   14001f48a:	add    DWORD PTR [rax+0x1],eax
   14001f48d:	add    BYTE PTR [rax],al
   14001f48f:	add    BYTE PTR [rdx+0x0],bh
   14001f492:	add    BYTE PTR [rax],al
   14001f494:	add    BYTE PTR [rax],al
   14001f496:	add    BYTE PTR [rax],al
   14001f498:	mov    eax,0x14001ea
   14001f49d:	add    BYTE PTR [rax],al
   14001f49f:	add    ah,bh
   14001f4a1:	add    BYTE PTR [rax],al
   14001f4a3:	add    BYTE PTR [rax],al
   14001f4a5:	add    BYTE PTR [rax],al
   14001f4a7:	add    BYTE PTR [rax+0x14001ea],dh
   14001f4ad:	add    BYTE PTR [rax],al
   14001f4af:	add    bh,bh
   14001f4b1:	add    BYTE PTR [rax],al
   14001f4b3:	add    BYTE PTR [rax],al
   14001f4b5:	add    BYTE PTR [rax],al
   14001f4b7:	add    BYTE PTR [rax+0x14001ea],dl
   14001f4bd:	add    BYTE PTR [rax],al
   14001f4bf:	add    BYTE PTR [rbp+0x0],cl
   14001f4c2:	imul   eax,DWORD PTR [rax],0x720063
   14001f4c8:	outs   dx,DWORD PTR ds:[rsi]
   14001f4c9:	add    BYTE PTR [rbx+0x0],dh
   14001f4cc:	outs   dx,DWORD PTR ds:[rsi]
   14001f4cd:	add    BYTE PTR [rsi+0x0],ah
   14001f4d0:	je     0x14001f4d2
   14001f4d2:	and    BYTE PTR [rax],al
   14001f4d4:	push   rsi
   14001f4d5:	add    BYTE PTR [rcx+0x0],ch
   14001f4d8:	jae    0x14001f4da
   14001f4da:	jne    0x14001f4dc
   14001f4dc:	(bad)  
   14001f4dd:	add    BYTE PTR [rax+rax*1+0x20],ch
   14001f4e1:	add    BYTE PTR [rbx+0x0],al
   14001f4e4:	sub    eax,DWORD PTR [rax]
   14001f4e6:	sub    eax,DWORD PTR [rax]
   14001f4e8:	and    BYTE PTR [rax],al
   14001f4ea:	push   rdx
   14001f4eb:	add    BYTE PTR [rbp+0x0],dh
   14001f4ee:	outs   dx,BYTE PTR ds:[rsi]
   14001f4ef:	add    BYTE PTR [rax+rax*1+0x69],dh
   14001f4f3:	add    BYTE PTR [rbp+0x0],ch
   14001f4f6:	add    BYTE PTR gs:[rax],ah
   14001f4f9:	add    BYTE PTR [rax+rax*1+0x69],cl
   14001f4fd:	add    BYTE PTR [rdx+0x0],ah
   14001f500:	jb     0x14001f502
   14001f502:	(bad)  
   14001f503:	add    BYTE PTR [rdx+0x0],dh
   14001f506:	jns    0x14001f508
   14001f508:	add    BYTE PTR [rax],al
   14001f50a:	add    BYTE PTR [rax],al
   14001f50c:	or     al,BYTE PTR [rax]
   14001f50e:	or     al,BYTE PTR [rax]
	...
   14001f518:	add    BYTE PTR cs:[rsi],ch
   14001f51b:	add    BYTE PTR [rsi],ch
   14001f51d:	add    BYTE PTR [rax],al
   14001f51f:	add    BYTE PTR [rax+rax*1],bh
   14001f522:	jo     0x14001f524
   14001f524:	jb     0x14001f526
   14001f526:	outs   dx,DWORD PTR ds:[rsi]
   14001f527:	add    BYTE PTR [rdi+0x0],ah
   14001f52a:	jb     0x14001f52c
   14001f52c:	(bad)  
   14001f52d:	add    BYTE PTR [rbp+0x0],ch
   14001f530:	and    BYTE PTR [rax],al
   14001f532:	outs   dx,BYTE PTR ds:[rsi]
   14001f533:	add    BYTE PTR [rcx+0x0],ah
   14001f536:	ins    DWORD PTR es:[rdi],dx
   14001f537:	add    BYTE PTR [rbp+0x0],ah
   14001f53a:	and    BYTE PTR [rax],al
   14001f53c:	jne    0x14001f53e
   14001f53e:	outs   dx,BYTE PTR ds:[rsi]
   14001f53f:	add    BYTE PTR [rbx+0x0],ch
   14001f542:	outs   dx,BYTE PTR ds:[rsi]
   14001f543:	add    BYTE PTR [rdi+0x0],ch
   14001f546:	ja     0x14001f548
   14001f548:	outs   dx,BYTE PTR ds:[rsi]
   14001f549:	add    BYTE PTR [rsi],bh
   14001f54b:	add    BYTE PTR [rax],al
   14001f54d:	add    BYTE PTR [rax],al
   14001f54f:	add    BYTE PTR [rdx+0x0],dl
   14001f552:	jne    0x14001f554
   14001f554:	outs   dx,BYTE PTR ds:[rsi]
   14001f555:	add    BYTE PTR [rax+rax*1+0x69],dh
   14001f559:	add    BYTE PTR [rbp+0x0],ch
   14001f55c:	add    BYTE PTR gs:[rax],ah
   14001f55f:	add    BYTE PTR [rbp+0x0],al
   14001f562:	jb     0x14001f564
   14001f564:	jb     0x14001f566
   14001f566:	outs   dx,DWORD PTR ds:[rsi]
   14001f567:	add    BYTE PTR [rdx+0x0],dh
   14001f56a:	and    DWORD PTR [rax],eax
   14001f56c:	or     al,BYTE PTR [rax]
   14001f56e:	or     al,BYTE PTR [rax]
   14001f570:	push   rax
   14001f571:	add    BYTE PTR [rdx+0x0],dh
   14001f574:	outs   dx,DWORD PTR ds:[rsi]
   14001f575:	add    BYTE PTR [rdi+0x0],ah
   14001f578:	jb     0x14001f57a
   14001f57a:	(bad)  
   14001f57b:	add    BYTE PTR [rbp+0x0],ch
   14001f57e:	cmp    al,BYTE PTR [rax]
   14001f580:	and    BYTE PTR [rax],al
   14001f582:	add    BYTE PTR [rax],al
   14001f584:	add    BYTE PTR [rax],al
   14001f586:	add    BYTE PTR [rax],al
   14001f588:	sub    BYTE PTR [rax],al
   14001f58a:	outs   dx,BYTE PTR ds:[rsi]
   14001f58b:	add    BYTE PTR [rbp+0x0],dh
   14001f58e:	ins    BYTE PTR es:[rdi],dx
   14001f58f:	add    BYTE PTR [rax+rax*1+0x29],ch
   14001f593:	add    BYTE PTR [rax],al
   14001f595:	add    BYTE PTR [rax],al
   14001f597:	add    BYTE PTR [rax],ch
   14001f599:	outs   dx,BYTE PTR ds:[rsi]
   14001f59a:	jne    0x14001f608
   14001f59c:	ins    BYTE PTR es:[rdi],dx
   14001f59d:	sub    DWORD PTR [rax],eax
   14001f59f:	add    BYTE PTR [rsi],al
   14001f5a1:	add    BYTE PTR [rax],al
   14001f5a3:	(bad)  
   14001f5a4:	add    BYTE PTR [rcx],al
   14001f5a6:	add    BYTE PTR [rax],al
   14001f5a8:	adc    BYTE PTR [rax],al
   14001f5aa:	add    eax,DWORD PTR [rsi]
   14001f5ac:	add    BYTE PTR [rsi],al
   14001f5ae:	add    dl,BYTE PTR [rax]
   14001f5b0:	add    al,0x45
   14001f5b2:	rex.RB
   14001f5b3:	rex.RB add eax,0x5050505
   14001f5b9:	xor    eax,0x500030
   14001f5be:	add    BYTE PTR [rax],al
   14001f5c0:	add    BYTE PTR [rax],ch
   14001f5c2:	and    BYTE PTR [rax],bh
   14001f5c4:	push   rax
   14001f5c5:	pop    rax
   14001f5c6:	(bad)  
   14001f5c7:	or     BYTE PTR [rax],al
   14001f5c9:	(bad)  
   14001f5ca:	xor    BYTE PTR [rax],dh
   14001f5cc:	push   rdi
   14001f5cd:	push   rax
   14001f5ce:	(bad)  
   14001f5cf:	add    BYTE PTR [rax],al
   14001f5d1:	and    BYTE PTR [rax],ah
   14001f5d3:	or     BYTE PTR [rax],al
   14001f5d5:	add    BYTE PTR [rax],al
   14001f5d7:	add    BYTE PTR [rax],cl
   14001f5d9:	(bad)  
   14001f5da:	push   0x60606060
   14001f5df:	add    BYTE PTR [rax],al
   14001f5e1:	js     0x14001f653
   14001f5e3:	js     0x14001f65d
   14001f5e5:	js     0x14001f65f
   14001f5e7:	or     BYTE PTR [rdi],al
   14001f5e9:	or     BYTE PTR [rax],al
   14001f5eb:	add    BYTE PTR [rdi],al
   14001f5ed:	add    BYTE PTR [rax],cl
   14001f5ef:	or     BYTE PTR [rax],cl
   14001f5f1:	add    BYTE PTR [rax],al
   14001f5f3:	or     BYTE PTR [rax],al
   14001f5f5:	or     BYTE PTR [rax],al
   14001f5f7:	(bad)  
   14001f5f8:	or     BYTE PTR [rax],al
   14001f5fa:	add    BYTE PTR [rax],al
   14001f5fc:	add    BYTE PTR [rax],al
   14001f5fe:	add    BYTE PTR [rax],al
   14001f600:	add    eax,0xbc00000
	...
   14001f60d:	add    BYTE PTR [rax],al
   14001f60f:	add    BYTE PTR [rip+0x4c00000],bl        # 0x144c1f615
	...
   14001f61d:	add    BYTE PTR [rax],al
   14001f61f:	add    BYTE PTR [rsi+0x4c00000],dl
	...
   14001f62d:	add    BYTE PTR [rax],al
   14001f62f:	add    BYTE PTR [rbp+0x8c00000],cl
	...
   14001f63d:	add    BYTE PTR [rax],al
   14001f63f:	add    BYTE PTR [rsi+0x8c00000],cl
	...
   14001f64d:	add    BYTE PTR [rax],al
   14001f64f:	add    BYTE PTR [rdi+0x8c00000],cl
	...
   14001f65d:	add    BYTE PTR [rax],al
   14001f65f:	add    BYTE PTR [rax+0x8c00000],dl
	...
   14001f66d:	add    BYTE PTR [rax],al
   14001f66f:	add    BYTE PTR [rcx+0x8c00000],dl
	...
   14001f67d:	add    BYTE PTR [rax],al
   14001f67f:	add    BYTE PTR [rdx+0x8c00000],dl
	...
   14001f68d:	add    BYTE PTR [rax],al
   14001f68f:	add    BYTE PTR [rbx+0x8c00000],dl
	...
   14001f69d:	add    BYTE PTR [rax],al
   14001f69f:	add    BYTE PTR [rdx+rax*1+0x8c000],dh
	...
   14001f6ae:	add    BYTE PTR [rax],al
   14001f6b0:	mov    ch,0x2
   14001f6b2:	add    al,al
   14001f6b4:	or     BYTE PTR [rax],al
	...
   14001f6be:	add    BYTE PTR [rax],al
   14001f6c0:	add    eax,DWORD PTR [rax]
   14001f6c2:	add    BYTE PTR [rax],al
   14001f6c4:	or     DWORD PTR [rax],eax
   14001f6c6:	add    BYTE PTR [rax],al
   14001f6c8:	rol    BYTE PTR [rax],0x0
   14001f6cb:	add    BYTE PTR [rax+rax*1],cl
   14001f6ce:	add    BYTE PTR [rax],al
   14001f6d0:	rcl    BYTE PTR [rbx+0x2],1
   14001f6d3:	rex add DWORD PTR [rax],eax
   14001f6d6:	add    BYTE PTR [rax],al
   14001f6d8:	jo     0x14001f72e
   14001f6da:	add    al,BYTE PTR [rax+0x1]
   14001f6dd:	add    BYTE PTR [rax],al
   14001f6df:	add    BYTE PTR [rsi],al
   14001f6e1:	add    BYTE PTR [rax-0x7f7e7f7a],0x0
   14001f6e8:	add    BYTE PTR [rax],dl
   14001f6ea:	add    eax,DWORD PTR [rsi-0x7f7d7980]
   14001f6f0:	adc    al,0x5
   14001f6f2:	add    eax,0x85454545
   14001f6f7:	test   DWORD PTR [rbp+0x30000005],eax
   14001f6fd:	xor    BYTE PTR [rax+0x888050],al
   14001f703:	or     BYTE PTR [rax],al
   14001f705:	sub    BYTE PTR [rdi],ah
   14001f707:	cmp    BYTE PTR [rax+0x57],dl
   14001f70a:	add    BYTE PTR [rax],0x7
   14001f70d:	add    BYTE PTR [rdi],dh
   14001f70f:	xor    BYTE PTR [rax],dh
   14001f711:	push   rax
   14001f712:	push   rax
   14001f713:	mov    BYTE PTR [rax],al
   14001f715:	add    BYTE PTR [rax],al
   14001f717:	and    BYTE PTR [rax],ch
   14001f719:	or     BYTE PTR [rax+0x8080],0x0
   14001f720:	(bad)  
   14001f721:	push   0x68686860
   14001f726:	or     BYTE PTR [rax],cl
   14001f728:	(bad)  
   14001f729:	js     0x14001f79b
   14001f72b:	jo     0x14001f7a4
   14001f72d:	jo     0x14001f79f
   14001f72f:	or     BYTE PTR [rax],cl
   14001f731:	add    BYTE PTR [rax],al
   14001f733:	or     BYTE PTR [rax],al
   14001f735:	or     BYTE PTR [rax],al
   14001f737:	(bad)  
   14001f738:	or     BYTE PTR [rax],al
   14001f73a:	add    BYTE PTR [rax],al
   14001f73c:	add    BYTE PTR [rax],al
   14001f73e:	add    BYTE PTR [rax],al
   14001f740:	movsxd esp,DWORD PTR [rbx+0x73]
   14001f743:	add    BYTE PTR [rbp+0x54],dl
   14001f746:	rex.RX sub eax,0x38
   14001f74c:	add    BYTE PTR [rax],al
   14001f74e:	add    BYTE PTR [rax],al
   14001f750:	push   rbp
   14001f751:	push   rsp
   14001f752:	rex.RX sub eax,0x454c3631
	...
   14001f760:	push   rbp
   14001f761:	rex.WRX
   14001f762:	rex.WB
   14001f763:	rex.XB
   14001f764:	rex.WRXB
   14001f765:	rex.R
   14001f766:	add    BYTE PTR [r9+0x6c],r9b
   14001f76a:	ins    BYTE PTR es:[rdi],dx
   14001f76b:	gs addr32 (bad) 
   14001f76e:	ins    BYTE PTR es:[rdi],dx
   14001f76f:	and    BYTE PTR [rdx+0x79],ah
   14001f772:	je     0x14001f7d9
   14001f774:	and    BYTE PTR [rbx+0x65],dh
   14001f777:	jno    0x14001f7ee
   14001f779:	outs   dx,BYTE PTR gs:[rsi]
   14001f77b:	movsxd esp,DWORD PTR [rbp+0x0]
   14001f77e:	add    BYTE PTR [rax],al
   14001f780:	imul   r14d,DWORD PTR [rdx+0x65],0x726f7463
   14001f788:	jns    0x14001f7aa
   14001f78a:	outs   dx,BYTE PTR ds:[rsi]
   14001f78b:	outs   dx,DWORD PTR ds:[rsi]
   14001f78c:	je     0x14001f7ae
   14001f78e:	gs ins DWORD PTR es:[rdi],dx
   14001f790:	jo     0x14001f806
   14001f792:	jns    0x14001f794
   14001f794:	add    BYTE PTR [rax],al
   14001f796:	add    BYTE PTR [rax],al
   14001f798:	rex.RX jne 0x14001f809
   14001f79b:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14001f79f:	outs   dx,BYTE PTR ds:[rsi]
   14001f7a0:	and    BYTE PTR [rsi+0x6f],ch
   14001f7a3:	je     0x14001f7c5
   14001f7a5:	imul   ebp,DWORD PTR [rbp+0x70],0x656d656c
   14001f7ac:	outs   dx,BYTE PTR ds:[rsi]
   14001f7ad:	je     0x14001f814
   14001f7af:	add    BYTE PTR fs:[rax],al
   14001f7b2:	add    BYTE PTR [rax],al
   14001f7b4:	add    BYTE PTR [rax],al
   14001f7b6:	add    BYTE PTR [rax],al
   14001f7b8:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14001f7ba:	and    BYTE PTR [rdi+rbp*2+0x63],ch
   14001f7be:	imul   esi,DWORD PTR [rbx+0x20],0x61
   14001f7c2:	jbe    0x14001f825
   14001f7c4:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   14001f7cc:	add    BYTE PTR [rax],al
   14001f7ce:	add    BYTE PTR [rax],al
   14001f7d0:	imul   r13d,DWORD PTR [rbp+r12*2+0x6e],0x20656d61
   14001f7d9:	je     0x14001f84a
   14001f7db:	outs   dx,DWORD PTR ds:[rsi]
   14001f7dc:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   14001f7e0:	add    BYTE PTR [eax],al
   14001f7e3:	add    BYTE PTR [rax],al
   14001f7e5:	add    BYTE PTR [rax],al
   14001f7e7:	add    BYTE PTR [rdx+0x65],dl
   14001f7ea:	jae    0x14001f85b
   14001f7ec:	jne    0x14001f860
   14001f7ee:	movsxd esp,DWORD PTR [rbp+0x20]
   14001f7f1:	fs gs (bad) 
   14001f7f4:	fs ins BYTE PTR es:[rdi],dx
   14001f7f6:	outs   dx,DWORD PTR ds:[rsi]
   14001f7f7:	movsxd ebp,DWORD PTR [rbx+0x20]
   14001f7fa:	(bad)  
   14001f7fb:	jbe    0x14001f86c
   14001f7fd:	imul   esp,DWORD PTR [rbp+riz*2+0x64],0x0
   14001f805:	add    BYTE PTR [rax],al
   14001f807:	add    BYTE PTR [rdx+0x65],dl
   14001f80a:	jae    0x14001f881
   14001f80c:	ins    BYTE PTR es:[rdi],dx
   14001f80d:	je     0x14001f82f
   14001f80f:	je     0x14001f880
   14001f811:	outs   dx,DWORD PTR ds:[rsi]
   14001f812:	and    BYTE PTR [rcx+riz*2+0x72],ch
   14001f816:	add    BYTE PTR gs:[eax],al
   14001f81a:	add    BYTE PTR [rax],al
   14001f81c:	add    BYTE PTR [rax],al
   14001f81e:	add    BYTE PTR [rax],al
   14001f820:	rex.R outs dx,DWORD PTR ds:[rsi]
   14001f822:	ins    DWORD PTR es:[rdi],dx
   14001f823:	(bad)  
   14001f824:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
   14001f82b:	jb     0x14001f82d
   14001f82d:	add    BYTE PTR [rax],al
   14001f82f:	add    BYTE PTR [rdx+0x72],al
   14001f832:	outs   dx,DWORD PTR ds:[rsi]
   14001f833:	imul   esp,DWORD PTR [rbp+0x6e],0x20
   14001f837:	jo     0x14001f8a2
   14001f839:	jo     0x14001f8a0
   14001f83b:	add    BYTE PTR [rax],al
   14001f83d:	add    BYTE PTR [rax],al
   14001f83f:	add    BYTE PTR [rdi+rbp*2+0x6f],dl
   14001f843:	and    BYTE PTR [rbp+0x61],ch
   14001f846:	outs   dx,BYTE PTR ds:[rsi]
   14001f847:	jns    0x14001f869
   14001f849:	ins    BYTE PTR es:[rdi],dx
   14001f84a:	imul   ebp,DWORD PTR [rsi+0x6b],0x52000073
   14001f851:	gs (bad) 
   14001f853:	fs sub eax,0x796c6e6f
   14001f859:	and    BYTE PTR [rsi+0x69],ah
   14001f85c:	ins    BYTE PTR es:[rdi],dx
   14001f85d:	and    BYTE PTR gs:[rbx+0x79],dh
   14001f861:	jae    0x14001f8d7
   14001f863:	gs ins DWORD PTR es:[rdi],dx
   14001f865:	add    BYTE PTR [rax],al
   14001f867:	add    BYTE PTR [rcx+0x6e],cl
   14001f86a:	jbe    0x14001f8cd
   14001f86c:	ins    BYTE PTR es:[rdi],dx
   14001f86d:	imul   esp,DWORD PTR [rax+riz*1+0x73],0x6b6565
   14001f875:	add    BYTE PTR [rax],al
   14001f877:	add    BYTE PTR [rsi+0x6f],cl
   14001f87a:	and    BYTE PTR [rbx+0x70],dh
   14001f87d:	(bad)  
   14001f87e:	movsxd esp,DWORD PTR [rbp+0x20]
   14001f881:	ins    BYTE PTR es:[rdi],dx
   14001f882:	gs data16 je 0x14001f8a6
   14001f886:	outs   dx,DWORD PTR ds:[rsi]
   14001f887:	outs   dx,BYTE PTR ds:[rsi]
   14001f888:	and    BYTE PTR [rbp+riz*2+0x76],ah
   14001f88c:	imul   esp,DWORD PTR [rbx+0x65],0x6c694600
   14001f893:	and    BYTE PTR gs:[rdi+rbp*2+0x6f],dh
   14001f898:	and    BYTE PTR [rcx+riz*2+0x72],ch
   14001f89c:	add    BYTE PTR gs:[eax],al
   14001f8a0:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001f8a2:	(bad)  
   14001f8a3:	jo     0x14001f915
   14001f8a5:	jb     0x14001f916
   14001f8a7:	jo     0x14001f91b
   14001f8a9:	imul   esp,DWORD PTR [rcx+0x74],0x2f492065
   14001f8b0:	rex.WRXB and BYTE PTR [r11+0x6f],r12b
   14001f8b4:	outs   dx,BYTE PTR ds:[rsi]
   14001f8b5:	je     0x14001f929
   14001f8b7:	outs   dx,DWORD PTR ds:[rsi]
   14001f8b8:	ins    BYTE PTR es:[rdi],dx
   14001f8b9:	and    BYTE PTR [rdi+0x70],ch
   14001f8bc:	gs jb  0x14001f920
   14001f8bf:	je     0x14001f92a
   14001f8c1:	outs   dx,DWORD PTR ds:[rsi]
   14001f8c2:	outs   dx,BYTE PTR ds:[rsi]
   14001f8c3:	add    BYTE PTR [rax],al
   14001f8c5:	add    BYTE PTR [rax],al
   14001f8c7:	add    BYTE PTR [rdi+rbp*2+0x6f],dl
   14001f8cb:	and    BYTE PTR [rbp+0x61],ch
   14001f8ce:	outs   dx,BYTE PTR ds:[rsi]
   14001f8cf:	jns    0x14001f8f1
   14001f8d1:	outs   dx,DWORD PTR ds:[rsi]
   14001f8d2:	jo     0x14001f939
   14001f8d4:	outs   dx,BYTE PTR ds:[rsi]
   14001f8d5:	and    BYTE PTR [rsi+0x69],ah
   14001f8d8:	ins    BYTE PTR es:[rdi],dx
   14001f8d9:	gs jae 0x14001f8dc
   14001f8dc:	add    BYTE PTR [rax],al
   14001f8de:	add    BYTE PTR [rax],al
   14001f8e0:	push   rsp
   14001f8e1:	outs   dx,DWORD PTR ds:[rsi]
   14001f8e2:	outs   dx,DWORD PTR ds:[rsi]
   14001f8e3:	and    BYTE PTR [rbp+0x61],ch
   14001f8e6:	outs   dx,BYTE PTR ds:[rsi]
   14001f8e7:	jns    0x14001f909
   14001f8e9:	outs   dx,DWORD PTR ds:[rsi]
   14001f8ea:	jo     0x14001f951
   14001f8ec:	outs   dx,BYTE PTR ds:[rsi]
   14001f8ed:	and    BYTE PTR [rsi+0x69],ah
   14001f8f0:	ins    BYTE PTR es:[rdi],dx
   14001f8f1:	gs jae 0x14001f914
   14001f8f4:	imul   ebp,DWORD PTR [rsi+0x20],0x74737973
   14001f8fb:	gs ins DWORD PTR es:[rdi],dx
   14001f8fd:	add    BYTE PTR [rax],al
   14001f8ff:	add    BYTE PTR [rcx+0x6e],cl
   14001f902:	jbe    0x14001f965
   14001f904:	ins    BYTE PTR es:[rdi],dx
   14001f905:	imul   esp,DWORD PTR [rax+riz*1+0x61],0x6d756772
   14001f90d:	outs   dx,BYTE PTR gs:[rsi]
   14001f90f:	je     0x14001f911
   14001f911:	add    BYTE PTR [rax],al
   14001f913:	add    BYTE PTR [rax],al
   14001f915:	add    BYTE PTR [rax],al
   14001f917:	add    BYTE PTR [rcx+0x73],cl
   14001f91a:	and    BYTE PTR [rcx+0x20],ah
   14001f91d:	imul   esi,DWORD PTR fs:[rdx+0x65],0x726f7463
   14001f925:	jns    0x14001f927
   14001f927:	add    BYTE PTR [rsi+0x6f],cl
   14001f92a:	je     0x14001f94c
   14001f92c:	(bad)  
   14001f92d:	and    BYTE PTR [rcx+rbp*2+0x72],ah
   14001f931:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14001f936:	jns    0x14001f938
   14001f938:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14001f93a:	and    BYTE PTR [rbx+0x75],dh
   14001f93d:	movsxd ebp,DWORD PTR [rax+0x20]
   14001f940:	fs gs jbe 0x14001f9ad
   14001f944:	movsxd esp,DWORD PTR [rbp+0x0]
   14001f947:	add    BYTE PTR [rcx+0x6d],cl
   14001f94a:	jo     0x14001f9be
   14001f94c:	outs   dx,DWORD PTR ds:[rsi]
   14001f94d:	jo     0x14001f9b4
   14001f94f:	jb     0x14001f971
   14001f951:	ins    BYTE PTR es:[rdi],dx
   14001f952:	imul   ebp,DWORD PTR [rsi+0x6b],0x46000000
   14001f959:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x73697865
   14001f961:	je     0x14001f9d6
   14001f963:	add    BYTE PTR [rax],al
   14001f965:	add    BYTE PTR [rax],al
   14001f967:	add    BYTE PTR [rdx+0x65],dl
   14001f96a:	jae    0x14001f9db
   14001f96c:	jne    0x14001f9e0
   14001f96e:	movsxd esp,DWORD PTR [rbp+0x20]
   14001f971:	fs gs jbe 0x14001f9de
   14001f975:	movsxd esp,DWORD PTR [rbp+0x0]
   14001f978:	push   rbp
   14001f979:	outs   dx,BYTE PTR ds:[rsi]
   14001f97a:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   14001f97e:	outs   dx,BYTE PTR ds:[rsi]
   14001f97f:	and    BYTE PTR [rbp+0x72],ah
   14001f982:	jb     0x14001f9f3
   14001f984:	jb     0x14001f986
   14001f986:	add    BYTE PTR [rax],al
   14001f988:	rex.X (bad) 
   14001f98a:	and    BYTE PTR fs:[rcx+0x64],ah
   14001f98e:	fs jb  0x14001f9f6
   14001f991:	jae    0x14001fa06
   14001f993:	add    BYTE PTR [rax],al
   14001f995:	add    BYTE PTR [rax],al
   14001f997:	add    BYTE PTR [rax+0x65],dl
   14001f99a:	jb     0x14001fa09
   14001f99c:	imul   esi,DWORD PTR [rbx+0x73],0x206e6f69
   14001f9a3:	fs outs dx,BYTE PTR gs:[rsi]
   14001f9a6:	imul   esp,DWORD PTR [rbp+0x64],0x0
   14001f9ad:	add    BYTE PTR [rax],al
   14001f9af:	add    BYTE PTR [rsi+0x6f],cl
   14001f9b2:	je     0x14001f9d4
   14001f9b4:	outs   dx,BYTE PTR gs:[rsi]
   14001f9b6:	outs   dx,DWORD PTR ds:[rsi]
   14001f9b7:	jne    0x14001fa20
   14001f9b9:	push   0x61707320
   14001f9be:	movsxd esp,DWORD PTR [rbp+0x0]
   14001f9c1:	add    BYTE PTR [rax],al
   14001f9c3:	add    BYTE PTR [rax],al
   14001f9c5:	add    BYTE PTR [rax],al
   14001f9c7:	add    BYTE PTR [rdx+0x65],dl
   14001f9ca:	jae    0x14001fa3b
   14001f9cc:	jne    0x14001fa40
   14001f9ce:	movsxd esp,DWORD PTR [rbp+0x20]
   14001f9d1:	je     0x14001fa38
   14001f9d3:	ins    DWORD PTR es:[rdi],dx
   14001f9d4:	jo     0x14001fa45
   14001f9d6:	jb     0x14001fa39
   14001f9d8:	jb     0x14001fa43
   14001f9da:	ins    BYTE PTR es:[rdi],dx
   14001f9db:	jns    0x14001f9fd
   14001f9dd:	jne    0x14001fa4d
   14001f9df:	(bad)  
   14001f9e0:	jbe    0x14001fa43
   14001f9e2:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   14001f9ea:	add    BYTE PTR [rax],al
   14001f9ec:	add    BYTE PTR [rax],al
   14001f9ee:	add    BYTE PTR [rax],al
   14001f9f0:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14001f9f2:	and    BYTE PTR [rbx+0x68],ah
   14001f9f5:	imul   ebp,DWORD PTR [rsp+riz*2+0x20],0x636f7270
   14001f9fd:	gs jae 0x14001fa73
   14001fa00:	gs jae 0x14001fa03
   14001fa03:	add    BYTE PTR [rax],al
   14001fa05:	add    BYTE PTR [rax],al
   14001fa07:	add    BYTE PTR [rdx+0x61],al
   14001fa0a:	and    BYTE PTR fs:[rsi+0x69],ah
   14001fa0e:	ins    BYTE PTR es:[rdi],dx
   14001fa0f:	and    BYTE PTR gs:[rbp+riz*2+0x73],ah
   14001fa14:	movsxd esi,DWORD PTR [rdx+0x69]
   14001fa17:	jo     0x14001fa8d
   14001fa19:	outs   dx,DWORD PTR ds:[rsi]
   14001fa1a:	jb     0x14001fa1c
   14001fa1c:	add    BYTE PTR [rax],al
   14001fa1e:	add    BYTE PTR [rax],al
   14001fa20:	rex.RB js 0x14001fa88
   14001fa23:	movsxd esp,DWORD PTR [rax]
   14001fa25:	outs   dx,WORD PTR ds:[rsi]
   14001fa27:	jb     0x14001fa96
   14001fa29:	(bad)  
   14001fa2a:	je     0x14001fa4c
   14001fa2c:	gs jb  0x14001faa1
   14001fa2f:	outs   dx,DWORD PTR ds:[rsi]
   14001fa30:	jb     0x14001fa32
   14001fa32:	add    BYTE PTR [rax],al
   14001fa34:	add    BYTE PTR [rax],al
   14001fa36:	add    BYTE PTR [rax],al
   14001fa38:	rex.B jb 0x14001faa2
   14001fa3b:	and    BYTE PTR [rcx+rbp*2+0x73],ch
   14001fa3f:	je     0x14001fa61
   14001fa41:	je     0x14001fab2
   14001fa43:	outs   dx,DWORD PTR ds:[rsi]
   14001fa44:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   14001fa48:	add    BYTE PTR [eax],al
   14001fa4b:	add    BYTE PTR [rax],al
   14001fa4d:	add    BYTE PTR [rax],al
   14001fa4f:	add    BYTE PTR [rsi+0x6f],cl
   14001fa52:	and    BYTE PTR [rbx+0x75],dh
   14001fa55:	movsxd ebp,DWORD PTR [rax+0x20]
   14001fa58:	fs gs jbe 0x14001fac5
   14001fa5c:	movsxd esp,DWORD PTR [rbp+0x20]
   14001fa5f:	outs   dx,DWORD PTR ds:[rsi]
   14001fa60:	jb     0x14001fa82
   14001fa62:	(bad)  
   14001fa63:	fs fs jb 0x14001facc
   14001fa67:	jae    0x14001fadc
   14001fa69:	add    BYTE PTR [rax],al
   14001fa6b:	add    BYTE PTR [rax],al
   14001fa6d:	add    BYTE PTR [rax],al
   14001fa6f:	add    BYTE PTR [rcx+0x6e],cl
   14001fa72:	jo     0x14001fae9
   14001fa74:	je     0x14001faa5
   14001fa76:	outs   dx,DWORD PTR ds:[rsi]
   14001fa77:	jne    0x14001faed
   14001fa79:	jo     0x14001faf0
   14001fa7b:	je     0x14001fa9d
   14001fa7d:	gs jb  0x14001faf2
   14001fa80:	outs   dx,DWORD PTR ds:[rsi]
   14001fa81:	jb     0x14001fa83
   14001fa83:	add    BYTE PTR [rax],al
   14001fa85:	add    BYTE PTR [rax],al
   14001fa87:	add    BYTE PTR [rcx+0x6e],cl
   14001fa8a:	je     0x14001faf1
   14001fa8c:	jb     0x14001fb00
   14001fa8e:	jne    0x14001fb00
   14001fa90:	je     0x14001faf7
   14001fa92:	and    BYTE PTR fs:[rsi+0x75],ah
   14001fa96:	outs   dx,BYTE PTR ds:[rsi]
   14001fa97:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14001fa9b:	outs   dx,BYTE PTR ds:[rsi]
   14001fa9c:	and    BYTE PTR [rbx+0x61],ah
   14001fa9f:	ins    BYTE PTR es:[rdi],dx
   14001faa0:	ins    BYTE PTR es:[rdi],dx
   14001faa1:	add    BYTE PTR [rax],al
   14001faa3:	add    BYTE PTR [rax],al
   14001faa5:	add    BYTE PTR [rax],al
   14001faa7:	add    BYTE PTR [rsi+0x6f],cl
   14001faaa:	and    BYTE PTR [rbx+0x75],dh
   14001faad:	movsxd ebp,DWORD PTR [rax+0x20]
   14001fab0:	jo     0x14001fb24
   14001fab2:	outs   dx,DWORD PTR ds:[rsi]
   14001fab3:	movsxd esp,DWORD PTR [rbp+0x73]
   14001fab6:	jae    0x14001fab8
   14001fab8:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14001faba:	and    BYTE PTR [rbx+0x75],dh
   14001fabd:	movsxd ebp,DWORD PTR [rax+0x20]
   14001fac0:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x726f
   14001fac7:	and    BYTE PTR [rcx+rbp*2+0x72],ah
   14001facb:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14001fad0:	jns    0x14001fad2
   14001fad2:	add    BYTE PTR [rax],al
   14001fad4:	add    BYTE PTR [rax],al
   14001fad6:	add    BYTE PTR [rax],al
   14001fad8:	rex.WRXB jo 0x14001fb40
   14001fadb:	jb     0x14001fb3e
   14001fadd:	je     0x14001fb48
   14001fadf:	outs   dx,DWORD PTR ds:[rsi]
   14001fae0:	outs   dx,BYTE PTR ds:[rsi]
   14001fae1:	and    BYTE PTR [rsi+0x6f],ch
   14001fae4:	je     0x14001fb06
   14001fae6:	jo     0x14001fb4d
   14001fae8:	jb     0x14001fb57
   14001faea:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x6f4e0064
   14001faf2:	and    BYTE PTR [rbp+0x72],ah
   14001faf5:	jb     0x14001fb66
   14001faf7:	jb     0x14001faf9
   14001faf9:	add    BYTE PTR [rax],al
   14001fafb:	add    BYTE PTR [rsi],ch
   14001fafd:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14001fb00:	add    BYTE PTR [rax],al
   14001fb02:	add    BYTE PTR [rax],al
   14001fb04:	(bad)
   14001fb0a:	add    BYTE PTR [rax],al
   14001fb0c:	movsxd ebp,DWORD PTR cs:[rbp+0x64]
   14001fb10:	add    BYTE PTR [rax],al
   14001fb12:	add    BYTE PTR [rax],al
   14001fb14:	cs gs js 0x14001fb7d
	...
   14001fb20:	rex.W add BYTE PTR [rax+0x0],cl
   14001fb24:	cmp    al,BYTE PTR [rax]
   14001fb26:	ins    DWORD PTR es:[rdi],dx
   14001fb27:	add    BYTE PTR [rbp+0x0],ch
   14001fb2a:	cmp    al,BYTE PTR [rax]
   14001fb2c:	jae    0x14001fb2e
   14001fb2e:	jae    0x14001fb30
	...
   14001fb38:	add    BYTE PTR fs:[rax+rax*1+0x64],ah
   14001fb3d:	add    BYTE PTR [rax+rax*1+0x2c],ah
   14001fb41:	add    BYTE PTR [rax],ah
   14001fb43:	add    BYTE PTR [rbp+0x0],cl
   14001fb46:	rex.WRB add BYTE PTR [r13+0x0],r9b
   14001fb4a:	rex.WRB add BYTE PTR [r8],r12b
   14001fb4d:	add    BYTE PTR [rax+rax*1+0x64],ah
   14001fb51:	add    BYTE PTR [rax+rax*1],ch
   14001fb54:	and    BYTE PTR [rax],al
   14001fb56:	jns    0x14001fb58
   14001fb58:	jns    0x14001fb5a
   14001fb5a:	jns    0x14001fb5c
   14001fb5c:	jns    0x14001fb5e
   14001fb5e:	add    BYTE PTR [rax],al
   14001fb60:	rex.WRB add BYTE PTR [r13+0x0],r9b
   14001fb64:	(bad)  
   14001fb65:	add    BYTE PTR [rax+rax*1+0x64],ah
   14001fb69:	add    BYTE PTR [rdi],ch
   14001fb6b:	add    BYTE PTR [rcx+0x0],bh
   14001fb6e:	jns    0x14001fb70
   14001fb70:	add    BYTE PTR [rax],al
   14001fb72:	add    BYTE PTR [rax],al
   14001fb74:	push   rax
   14001fb75:	add    BYTE PTR [rbp+0x0],cl
   14001fb78:	add    BYTE PTR [rax],al
   14001fb7a:	add    BYTE PTR [rax],al
   14001fb7c:	add    BYTE PTR [r13+0x0],cl
	...
   14001fb88:	add    BYTE PTR [rbp+0x0],r12b
   14001fb8c:	movsxd eax,DWORD PTR [rax]
   14001fb8e:	add    BYTE PTR gs:[rbp+0x0],ch
   14001fb92:	(bad)  
   14001fb93:	add    BYTE PTR [rbp+0x0],ah
   14001fb96:	jb     0x14001fb98
	...
   14001fba0:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   14001fba4:	jbe    0x14001fba6
   14001fba6:	add    BYTE PTR gs:[rbp+0x0],ch
   14001fbaa:	(bad)  
   14001fbab:	add    BYTE PTR [rbp+0x0],ah
   14001fbae:	jb     0x14001fbb0
	...
   14001fbb8:	rex.WRXB add BYTE PTR [r11+0x0],r12b
   14001fbbc:	je     0x14001fbbe
   14001fbbe:	outs   dx,DWORD PTR ds:[rsi]
   14001fbbf:	add    BYTE PTR [rdx+0x0],ah
   14001fbc2:	add    BYTE PTR gs:[rdx+0x0],dh
   14001fbc6:	add    BYTE PTR [rax],al
   14001fbc8:	push   rbx
   14001fbc9:	add    BYTE PTR [rbp+0x0],ah
   14001fbcc:	jo     0x14001fbce
   14001fbce:	je     0x14001fbd0
   14001fbd0:	add    BYTE PTR gs:[rbp+0x0],ch
   14001fbd4:	(bad)  
   14001fbd5:	add    BYTE PTR [rbp+0x0],ah
   14001fbd8:	jb     0x14001fbda
   14001fbda:	add    BYTE PTR [rax],al
   14001fbdc:	add    BYTE PTR [rax],al
   14001fbde:	add    BYTE PTR [rax],al
   14001fbe0:	add    BYTE PTR [r13+0x0],sil
   14001fbe4:	add    BYTE PTR [ebp+0x0],dh
   14001fbe8:	jae    0x14001fbea
   14001fbea:	je     0x14001fbec
   14001fbec:	add    BYTE PTR [rax],al
   14001fbee:	add    BYTE PTR [rax],al
   14001fbf0:	rex.WX add BYTE PTR [rbp+0x0],sil
   14001fbf4:	ins    BYTE PTR es:[rdi],dx
   14001fbf5:	add    BYTE PTR [rcx+0x0],bh
	...
   14001fc00:	rex.WX add BYTE PTR [rbp+0x0],sil
   14001fc04:	outs   dx,BYTE PTR ds:[rsi]
   14001fc05:	add    BYTE PTR [rbp+0x0],ah
	...
   14001fc10:	add    BYTE PTR [r8+0x0],sil
   14001fc14:	jb     0x14001fc16
   14001fc16:	imul   eax,DWORD PTR [rax],0x6c
   14001fc1c:	add    BYTE PTR [rax],al
   14001fc1e:	add    BYTE PTR [rax],al
   14001fc20:	rex.WRB add BYTE PTR [r9+0x0],r12b
   14001fc24:	jb     0x14001fc26
   14001fc26:	movsxd eax,DWORD PTR [rax]
   14001fc28:	push   0x0
   14001fc2d:	add    BYTE PTR [rax],al
   14001fc2f:	add    BYTE PTR [rsi+0x0],al
   14001fc32:	add    BYTE PTR gs:[rdx+0x0],ah
   14001fc36:	jb     0x14001fc38
   14001fc38:	jne    0x14001fc3a
   14001fc3a:	(bad)  
   14001fc3b:	add    BYTE PTR [rdx+0x0],dh
   14001fc3e:	jns    0x14001fc40
	...
   14001fc48:	rex.WX add BYTE PTR [rcx+0x0],spl
   14001fc4c:	outs   dx,BYTE PTR ds:[rsi]
   14001fc4d:	add    BYTE PTR [rbp+0x0],dh
   14001fc50:	(bad)  
   14001fc51:	add    BYTE PTR [rdx+0x0],dh
   14001fc54:	jns    0x14001fc56
   14001fc56:	add    BYTE PTR [rax],al
   14001fc58:	add    BYTE PTR [rbp+0x0],r12b
   14001fc5c:	movsxd eax,DWORD PTR [rax]
   14001fc5e:	add    BYTE PTR [rax],al
   14001fc60:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   14001fc64:	jbe    0x14001fc66
   14001fc66:	add    BYTE PTR [rax],al
   14001fc68:	rex.WRXB add BYTE PTR [r11+0x0],r12b
   14001fc6c:	je     0x14001fc6e
   14001fc6e:	add    BYTE PTR [rax],al
   14001fc70:	push   rbx
   14001fc71:	add    BYTE PTR [rbp+0x0],ah
   14001fc74:	jo     0x14001fc76
   14001fc76:	add    BYTE PTR [rax],al
   14001fc78:	add    BYTE PTR [r13+0x0],sil
   14001fc7c:	add    BYTE PTR [eax],al
   14001fc7f:	add    BYTE PTR [rdx+0x0],cl
   14001fc82:	jne    0x14001fc84
   14001fc84:	ins    BYTE PTR es:[rdi],dx
   14001fc85:	add    BYTE PTR [rax],al
   14001fc87:	add    BYTE PTR [rdx+0x0],cl
   14001fc8a:	jne    0x14001fc8c
   14001fc8c:	outs   dx,BYTE PTR ds:[rsi]
   14001fc8d:	add    BYTE PTR [rax],al
   14001fc8f:	add    BYTE PTR [rbp+0x0],cl
   14001fc92:	(bad)  
   14001fc93:	add    BYTE PTR [rcx+0x0],bh
   14001fc96:	add    BYTE PTR [rax],al
   14001fc98:	add    BYTE PTR [r8+0x0],sil
   14001fc9c:	jb     0x14001fc9e
   14001fc9e:	add    BYTE PTR [rax],al
   14001fca0:	rex.WRB add BYTE PTR [r9+0x0],r12b
   14001fca4:	jb     0x14001fca6
   14001fca6:	add    BYTE PTR [rax],al
   14001fca8:	rex.RX add BYTE PTR [rbp+0x0],r12b
   14001fcac:	(bad)  
   14001fcad:	add    BYTE PTR [rax],al
   14001fcaf:	add    BYTE PTR [rdx+0x0],cl
   14001fcb2:	(bad)  
   14001fcb3:	add    BYTE PTR [rsi+0x0],ch
   14001fcb6:	add    BYTE PTR [rax],al
   14001fcb8:	push   rbx
   14001fcb9:	add    BYTE PTR [rcx+0x0],ah
   14001fcbc:	je     0x14001fcbe
   14001fcbe:	jne    0x14001fcc0
   14001fcc0:	jb     0x14001fcc2
   14001fcc2:	add    BYTE PTR fs:[rcx+0x0],ah
   14001fcc6:	jns    0x14001fcc8
	...
   14001fcd0:	rex.RX add BYTE PTR [rdx+0x0],r14b
   14001fcd4:	imul   eax,DWORD PTR [rax],0x610064
   14001fcda:	jns    0x14001fcdc
   14001fcdc:	add    BYTE PTR [rax],al
   14001fcde:	add    BYTE PTR [rax],al
   14001fce0:	push   rsp
   14001fce1:	add    BYTE PTR [rax+0x0],ch
   14001fce4:	jne    0x14001fce6
   14001fce6:	jb     0x14001fce8
   14001fce8:	jae    0x14001fcea
   14001fcea:	add    BYTE PTR fs:[rcx+0x0],ah
   14001fcee:	jns    0x14001fcf0
	...
   14001fcf8:	push   rdi
   14001fcf9:	add    BYTE PTR [rbp+0x0],ah
   14001fcfc:	add    BYTE PTR fs:[rsi+0x0],ch
   14001fd00:	add    BYTE PTR gs:[rbx+0x0],dh
   14001fd04:	add    BYTE PTR fs:[rcx+0x0],ah
   14001fd08:	jns    0x14001fd0a
   14001fd0a:	add    BYTE PTR [rax],al
   14001fd0c:	add    BYTE PTR [rax],al
   14001fd0e:	add    BYTE PTR [rax],al
   14001fd10:	push   rsp
   14001fd11:	add    BYTE PTR [rbp+0x0],dh
   14001fd14:	add    BYTE PTR gs:[rbx+0x0],dh
   14001fd18:	add    BYTE PTR fs:[rcx+0x0],ah
   14001fd1c:	jns    0x14001fd1e
   14001fd1e:	add    BYTE PTR [rax],al
   14001fd20:	rex.WRB add BYTE PTR [r15+0x0],r13b
   14001fd24:	outs   dx,BYTE PTR ds:[rsi]
   14001fd25:	add    BYTE PTR [rax+rax*1+0x61],ah
   14001fd29:	add    BYTE PTR [rcx+0x0],bh
   14001fd2c:	add    BYTE PTR [rax],al
   14001fd2e:	add    BYTE PTR [rax],al
   14001fd30:	push   rbx
   14001fd31:	add    BYTE PTR [rbp+0x0],dh
   14001fd34:	outs   dx,BYTE PTR ds:[rsi]
   14001fd35:	add    BYTE PTR [rax+rax*1+0x61],ah
   14001fd39:	add    BYTE PTR [rcx+0x0],bh
   14001fd3c:	add    BYTE PTR [rax],al
   14001fd3e:	add    BYTE PTR [rax],al
   14001fd40:	push   rbx
   14001fd41:	add    BYTE PTR [rcx+0x0],ah
   14001fd44:	je     0x14001fd46
   14001fd46:	add    BYTE PTR [rax],al
   14001fd48:	rex.RX add BYTE PTR [rdx+0x0],r14b
   14001fd4c:	imul   eax,DWORD PTR [rax],0x540000
   14001fd52:	push   0x7500
   14001fd57:	add    BYTE PTR [rdi+0x0],dl
   14001fd5a:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   14001fd5f:	add    BYTE PTR [rax+rax*1+0x75],dl
   14001fd63:	add    BYTE PTR [rbp+0x0],ah
   14001fd66:	add    BYTE PTR [rax],al
   14001fd68:	rex.WRB add BYTE PTR [r15+0x0],r13b
   14001fd6c:	outs   dx,BYTE PTR ds:[rsi]
   14001fd6d:	add    BYTE PTR [rax],al
   14001fd6f:	add    BYTE PTR [rbx+0x0],dl
   14001fd72:	jne    0x14001fd74
   14001fd74:	outs   dx,BYTE PTR ds:[rsi]
   14001fd75:	add    BYTE PTR [rax],al
   14001fd77:	add    BYTE PTR [rax+0x48],cl
   14001fd7a:	cmp    ch,BYTE PTR [rbp+0x6d]
   14001fd7d:	cmp    dh,BYTE PTR [rbx+0x73]
	...
   14001fd88:	fs fs fs fs sub al,0x20
   14001fd8e:	rex.WRB
   14001fd8f:	rex.WRB
   14001fd90:	rex.WRB
   14001fd91:	rex.WRB and BYTE PTR [r12+riz*2+0x2c],r12b
   14001fd96:	and    BYTE PTR [rcx+0x79],bh
   14001fd99:	jns    0x14001fe14
   14001fd9b:	add    BYTE PTR [rax],al
   14001fd9d:	add    BYTE PTR [rax],al
   14001fd9f:	add    BYTE PTR [rbp+0x4d],cl
   14001fda2:	(bad)  
   14001fda3:	fs fs (bad) 
   14001fda6:	jns    0x14001fe21
   14001fda8:	add    BYTE PTR [rax],al
   14001fdaa:	add    BYTE PTR [rax],al
   14001fdac:	push   rax
   14001fdad:	rex.WRB add BYTE PTR [r8],r8b
   14001fdb0:	rex.B
   14001fdb1:	rex.WRB add BYTE PTR [r8],r8b
   14001fdb4:	add    BYTE PTR [rax],al
   14001fdb6:	add    BYTE PTR [rax],al
   14001fdb8:	rex.R
   14001fdb9:	movsxd esp,DWORD PTR gs:[rbp+0x6d]
   14001fdbd:	(bad)  
   14001fdbe:	gs jb  0x14001fdc1
   14001fdc1:	add    BYTE PTR [rax],al
   14001fdc3:	add    BYTE PTR [rax],al
   14001fdc5:	add    BYTE PTR [rax],al
   14001fdc7:	add    BYTE PTR [rsi+0x6f],cl
   14001fdca:	jbe    0x14001fe31
   14001fdcc:	ins    DWORD PTR es:[rdi],dx
   14001fdcd:	(bad)  
   14001fdce:	gs jb  0x14001fdd1
   14001fdd1:	add    BYTE PTR [rax],al
   14001fdd3:	add    BYTE PTR [rax],al
   14001fdd5:	add    BYTE PTR [rax],al
   14001fdd7:	add    BYTE PTR [rdi+0x63],cl
   14001fdda:	je     0x14001fe4b
   14001fddc:	(bad)  
   14001fddd:	gs jb  0x14001fde0
   14001fde0:	push   rbx
   14001fde1:	gs jo  0x14001fe58
   14001fde4:	gs ins DWORD PTR es:[rdi],dx
   14001fde6:	(bad)  
   14001fde7:	gs jb  0x14001fdea
   14001fdea:	add    BYTE PTR [rax],al
   14001fdec:	rex.B jne 0x14001fe56
   14001fdef:	jne    0x14001fe64
   14001fdf1:	je     0x14001fdf3
   14001fdf3:	add    BYTE PTR [rdx+0x75],cl
   14001fdf6:	ins    BYTE PTR es:[rdi],dx
   14001fdf7:	jns    0x14001fdf9
   14001fdf9:	add    BYTE PTR [rax],al
   14001fdfb:	add    BYTE PTR [rdx+0x75],cl
   14001fdfe:	outs   dx,BYTE PTR ds:[rsi]
   14001fdff:	add    BYTE PTR gs:[rax],al
   14001fe02:	add    BYTE PTR [rax],al
   14001fe04:	rex.B jo 0x14001fe79
   14001fe07:	imul   ebp,DWORD PTR [rax+rax*1+0x0],0x72614d00
   14001fe0f:	movsxd ebp,DWORD PTR [rax+0x0]
   14001fe12:	add    BYTE PTR [rax],al
   14001fe14:	add    BYTE PTR [rax],al
   14001fe16:	add    BYTE PTR [rax],al
   14001fe18:	rex.RX
   14001fe19:	(bad)
   14001fe1f:	jns    0x14001fe21
   14001fe21:	add    BYTE PTR [rax],al
   14001fe23:	add    BYTE PTR [rax],al
   14001fe25:	add    BYTE PTR [rax],al
   14001fe27:	add    BYTE PTR [rdx+0x61],cl
   14001fe2a:	outs   dx,BYTE PTR ds:[rsi]
   14001fe2b:	jne    0x14001fe8e
   14001fe2d:	jb     0x14001fea8
   14001fe2f:	add    BYTE PTR [rbp+riz*2+0x63],al
   14001fe33:	add    BYTE PTR [rsi+0x6f],cl
   14001fe36:	jbe    0x14001fe38
   14001fe38:	movsxd r14,DWORD PTR [r8+r8*1+0x53]
   14001fe3d:	gs jo  0x14001fe40
   14001fe40:	rex.B jne 0x14001feaa
   14001fe43:	add    BYTE PTR [rdx+0x75],cl
   14001fe46:	ins    BYTE PTR es:[rdi],dx
   14001fe47:	add    BYTE PTR [rdx+0x75],cl
   14001fe4a:	outs   dx,BYTE PTR ds:[rsi]
   14001fe4b:	add    BYTE PTR [rbp+0x61],cl
   14001fe4e:	jns    0x14001fe50
   14001fe50:	rex.B jo 0x14001fec5
   14001fe53:	add    BYTE PTR [rbp+0x61],cl
   14001fe56:	jb     0x14001fe58
   14001fe58:	rex.RX
   14001fe59:	gs (bad) 
   14001fe5b:	add    BYTE PTR [rdx+0x61],cl
   14001fe5e:	outs   dx,BYTE PTR ds:[rsi]
   14001fe5f:	add    BYTE PTR [rbx+0x61],dl
   14001fe62:	je     0x14001fed9
   14001fe64:	jb     0x14001feca
   14001fe66:	(bad)  
   14001fe67:	jns    0x14001fe69
   14001fe69:	add    BYTE PTR [rax],al
   14001fe6b:	add    BYTE PTR [rsi+0x72],al
   14001fe6e:	imul   esp,DWORD PTR [rcx+riz*2+0x79],0x0
   14001fe76:	add    BYTE PTR [rax],al
   14001fe78:	push   rsp
   14001fe79:	push   0x64737275
   14001fe7e:	(bad)  
   14001fe7f:	jns    0x14001fe81
   14001fe81:	add    BYTE PTR [rax],al
   14001fe83:	add    BYTE PTR [rax],al
   14001fe85:	add    BYTE PTR [rax],al
   14001fe87:	add    BYTE PTR [rdi+0x65],dl
   14001fe8a:	outs   dx,BYTE PTR fs:[rsi]
   14001fe8c:	gs jae 0x14001fef3
   14001fe8f:	(bad)  
   14001fe90:	jns    0x14001fe92
   14001fe92:	add    BYTE PTR [rax],al
   14001fe94:	add    BYTE PTR [rax],al
   14001fe96:	add    BYTE PTR [rax],al
   14001fe98:	push   rsp
   14001fe99:	jne    0x14001ff00
   14001fe9b:	jae    0x14001ff01
   14001fe9d:	(bad)  
   14001fe9e:	jns    0x14001fea0
   14001fea0:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001fea2:	outs   dx,BYTE PTR ds:[rsi]
   14001fea3:	fs (bad) 
   14001fea5:	jns    0x14001fea7
   14001fea7:	add    BYTE PTR [rbx+0x75],dl
   14001feaa:	outs   dx,BYTE PTR ds:[rsi]
   14001feab:	fs (bad) 
   14001fead:	jns    0x14001feaf
   14001feaf:	add    BYTE PTR [rbx+0x61],dl
   14001feb2:	je     0x14001feb4
   14001feb4:	rex.RX jb 0x14001ff20
   14001feb7:	add    BYTE PTR [rax+rbp*2+0x75],dl
   14001febb:	add    BYTE PTR [rdi+0x65],dl
   14001febe:	add    BYTE PTR fs:[rbp+rsi*2+0x65],dl
   14001fec3:	add    BYTE PTR [rbp+0x6f],cl
   14001fec6:	outs   dx,BYTE PTR ds:[rsi]
   14001fec7:	add    BYTE PTR [rbx+0x75],dl
   14001feca:	outs   dx,BYTE PTR ds:[rsi]
   14001fecb:	add    BYTE PTR [rax],al
   14001fecd:	add    BYTE PTR [rax],al
   14001fecf:	add    BYTE PTR [rcx],al
   14001fed1:	add    al,BYTE PTR [rbx]
   14001fed3:	add    al,0x5
   14001fed5:	(bad)  
   14001fed6:	(bad)  
   14001fed7:	or     BYTE PTR [rcx],cl
   14001fed9:	or     cl,BYTE PTR [rbx]
   14001fedb:	or     al,0xd
   14001fedd:	(bad)  
   14001fede:	movups xmm2,XMMWORD PTR [rcx]
   14001fee1:	adc    dl,BYTE PTR [rbx]
   14001fee3:	adc    al,0x15
   14001fee5:	(bad)  
   14001fee6:	(bad)  
   14001fee7:	sbb    BYTE PTR [rcx],bl
   14001fee9:	sbb    bl,BYTE PTR [rbx]
   14001feeb:	sbb    al,0x1d
   14001feed:	(bad)  
   14001feee:	(bad)  
   14001feef:	and    BYTE PTR [rcx],ah
   14001fef1:	and    ah,BYTE PTR [rbx]
   14001fef3:	and    al,0x25
   14001fef5:	es (bad) 
   14001fef7:	sub    BYTE PTR [rcx],ch
   14001fef9:	sub    ch,BYTE PTR [rbx]
   14001fefb:	sub    al,0x2d
   14001fefd:	cs (bad) 
   14001feff:	xor    BYTE PTR [rcx],dh
   14001ff01:	xor    dh,BYTE PTR [rbx]
   14001ff03:	xor    al,0x35
   14001ff05:	ss (bad) 
   14001ff07:	cmp    BYTE PTR [rcx],bh
   14001ff09:	cmp    bh,BYTE PTR [rbx]
   14001ff0b:	cmp    al,0x3d
   14001ff0d:	ds (bad) 
   14001ff0f:	rex
   14001ff10:	rex.B
   14001ff11:	rex.X
   14001ff12:	rex.XB
   14001ff13:	rex.R
   14001ff14:	rex.RB
   14001ff15:	rex.RX
   14001ff16:	rex.RXB
   14001ff17:	rex.W
   14001ff18:	rex.WB
   14001ff19:	rex.WX
   14001ff1a:	rex.WXB
   14001ff1b:	rex.WR
   14001ff1c:	rex.WRB
   14001ff1d:	rex.WRX
   14001ff1e:	rex.WRXB push r8
   14001ff20:	push   rcx
   14001ff21:	push   rdx
   14001ff22:	push   rbx
   14001ff23:	push   rsp
   14001ff24:	push   rbp
   14001ff25:	push   rsi
   14001ff26:	push   rdi
   14001ff27:	pop    rax
   14001ff28:	pop    rcx
   14001ff29:	pop    rdx
   14001ff2a:	pop    rbx
   14001ff2b:	pop    rsp
   14001ff2c:	pop    rbp
   14001ff2d:	pop    rsi
   14001ff2e:	pop    rdi
   14001ff2f:	(bad)  
   14001ff30:	(bad)  
   14001ff31:	(bad)
   14001ff36:	addr32 push 0x6c6b6a69
   14001ff3c:	ins    DWORD PTR es:[rdi],dx
   14001ff3d:	outs   dx,BYTE PTR ds:[rsi]
   14001ff3e:	outs   dx,DWORD PTR ds:[rsi]
   14001ff3f:	jo     0x14001ffb2
   14001ff41:	jb     0x14001ffb6
   14001ff43:	je     0x14001ffba
   14001ff45:	jbe    0x14001ffbe
   14001ff47:	js     0x14001ffc2
   14001ff49:	jp     0x14001ffc6
   14001ff4b:	jl     0x14001ffca
   14001ff4d:	jle    0x14001ffce
   14001ff4f:	add    BYTE PTR [rdi+0x65],al
   14001ff52:	je     0x14001ffa4
   14001ff54:	jb     0x14001ffc5
   14001ff56:	movsxd esp,DWORD PTR [rbp+0x73]
   14001ff59:	jae    0x14001ffb2
   14001ff5b:	imul   ebp,DWORD PTR [rsi+0x64],0x7453776f
   14001ff62:	(bad)  
   14001ff63:	je     0x14001ffce
   14001ff65:	outs   dx,DWORD PTR ds:[rsi]
   14001ff66:	outs   dx,BYTE PTR ds:[rsi]
   14001ff67:	add    BYTE PTR [rdi+0x65],al
   14001ff6a:	je     0x14001ffc1
   14001ff6c:	jae    0x14001ffd3
   14001ff6e:	jb     0x14001ffbf
   14001ff70:	(bad)  
   14001ff71:	push   0x65
   14001ff73:	movsxd esi,DWORD PTR [rcx+rcx*2+0x6e]
   14001ff77:	outs   dx,WORD PTR ds:[rsi]
   14001ff79:	jb     0x14001ffe8
   14001ff7b:	(bad)  
   14001ff7c:	je     0x14001ffe7
   14001ff7e:	outs   dx,DWORD PTR ds:[rsi]
   14001ff7f:	outs   dx,BYTE PTR ds:[rsi]
   14001ff80:	push   rdi
   14001ff81:	add    BYTE PTR [rax],al
   14001ff83:	add    BYTE PTR [rax],al
   14001ff85:	add    BYTE PTR [rax],al
   14001ff87:	add    BYTE PTR [rdi+0x65],al
   14001ff8a:	je     0x14001ffd8
   14001ff8c:	(bad)  
   14001ff8d:	jae    0x140020003
   14001ff8f:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   14001ff94:	gs push rax
   14001ff96:	outs   dx,DWORD PTR ds:[rsi]
   14001ff97:	jo     0x14002000e
   14001ff99:	jo     0x14001ff9b
   14001ff9b:	add    BYTE PTR [rax],al
   14001ff9d:	add    BYTE PTR [rax],al
   14001ff9f:	add    BYTE PTR [rdi+0x65],al
   14001ffa2:	je     0x14001ffe5
   14001ffa4:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   14001ffa8:	gs push rdi
   14001ffaa:	imul   ebp,DWORD PTR [rsi+0x64],0x4d00776f
   14001ffb1:	gs jae 0x140020027
   14001ffb4:	(bad)  
   14001ffb5:	rex.X outs dx,DWORD PTR gs:[esi]
   14001ffb9:	js     0x140020012
   14001ffbb:	add    BYTE PTR [rax],al
   14001ffbd:	add    BYTE PTR [rax],al
   14001ffbf:	add    BYTE PTR [rbp+0x0],dl
   14001ffc2:	push   rbx
   14001ffc3:	add    BYTE PTR [rbp+0x0],al
   14001ffc6:	push   rdx
   14001ffc7:	add    BYTE PTR [rbx],dh
   14001ffc9:	add    BYTE PTR [rdx],dh
   14001ffcb:	add    BYTE PTR [rsi],ch
   14001ffcd:	add    BYTE PTR [rax+rax*1+0x4c],al
   14001ffd1:	add    BYTE PTR [rax+rax*1+0x0],cl
   14001ffd5:	add    BYTE PTR [rax],al
   14001ffd7:	add    BYTE PTR [rdx+rbx*2+0x0],dl
   14001ffdb:	add    BYTE PTR [rax],al
   14001ffdd:	add    BYTE PTR [rax],al
   14001ffdf:	add    BYTE PTR [rbx+0x75],dl
   14001ffe2:	outs   dx,BYTE PTR ds:[rsi]
   14001ffe3:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001ffe5:	outs   dx,BYTE PTR ds:[rsi]
   14001ffe6:	push   rsp
   14001ffe7:	jne    0x14002004e
   14001ffe9:	push   rdi
   14001ffea:	gs fs push rsp
   14001ffed:	push   0x69724675
   14001fff2:	push   rbx
   14001fff3:	(bad)  
   14001fff4:	je     0x14001fff6
   14001fff6:	add    BYTE PTR [rax],al
   14001fff8:	rex.WX (bad) 
   14001fffa:	outs   dx,BYTE PTR ds:[rsi]
   14001fffb:	rex.RX
   14001fffc:	gs (bad) 
   14001fffe:	rex.WRB (bad) 
   140020000:	jb     0x140020043
   140020002:	jo     0x140020076
   140020004:	rex.WRB (bad) 
   140020006:	jns    0x140020052
   140020008:	jne    0x140020078
   14002000a:	rex.WX jne 0x140020079
   14002000d:	rex.B jne 0x140020077
   140020010:	push   rbx
   140020011:	gs jo  0x140020063
   140020014:	movsxd esi,DWORD PTR [rsi+rcx*2+0x6f]
   140020018:	jbe    0x14002005e
   14002001a:	movsxd eax,DWORD PTR gs:[rax]
	...
   14002011d:	add    BYTE PTR [rax],al
   14002011f:	add    BYTE PTR [rax],ah
   140020121:	add    BYTE PTR [rax],ah
   140020123:	add    BYTE PTR [rax],ah
   140020125:	add    BYTE PTR [rax],ah
   140020127:	add    BYTE PTR [rax],ah
   140020129:	add    BYTE PTR [rax],ah
   14002012b:	add    BYTE PTR [rax],ah
   14002012d:	add    BYTE PTR [rax],ah
   14002012f:	add    BYTE PTR [rax],ah
   140020131:	add    BYTE PTR [rax],ch
   140020133:	add    BYTE PTR [rax],ch
   140020135:	add    BYTE PTR [rax],ch
   140020137:	add    BYTE PTR [rax],ch
   140020139:	add    BYTE PTR [rax],ch
   14002013b:	add    BYTE PTR [rax],ah
   14002013d:	add    BYTE PTR [rax],ah
   14002013f:	add    BYTE PTR [rax],ah
   140020141:	add    BYTE PTR [rax],ah
   140020143:	add    BYTE PTR [rax],ah
   140020145:	add    BYTE PTR [rax],ah
   140020147:	add    BYTE PTR [rax],ah
   140020149:	add    BYTE PTR [rax],ah
   14002014b:	add    BYTE PTR [rax],ah
   14002014d:	add    BYTE PTR [rax],ah
   14002014f:	add    BYTE PTR [rax],ah
   140020151:	add    BYTE PTR [rax],ah
   140020153:	add    BYTE PTR [rax],ah
   140020155:	add    BYTE PTR [rax],ah
   140020157:	add    BYTE PTR [rax],ah
   140020159:	add    BYTE PTR [rax],ah
   14002015b:	add    BYTE PTR [rax],ah
   14002015d:	add    BYTE PTR [rax],ah
   14002015f:	add    BYTE PTR [rax+0x0],cl
   140020162:	adc    BYTE PTR [rax],al
   140020164:	adc    BYTE PTR [rax],al
   140020166:	adc    BYTE PTR [rax],al
   140020168:	adc    BYTE PTR [rax],al
   14002016a:	adc    BYTE PTR [rax],al
   14002016c:	adc    BYTE PTR [rax],al
   14002016e:	adc    BYTE PTR [rax],al
   140020170:	adc    BYTE PTR [rax],al
   140020172:	adc    BYTE PTR [rax],al
   140020174:	adc    BYTE PTR [rax],al
   140020176:	adc    BYTE PTR [rax],al
   140020178:	adc    BYTE PTR [rax],al
   14002017a:	adc    BYTE PTR [rax],al
   14002017c:	adc    BYTE PTR [rax],al
   14002017e:	adc    BYTE PTR [rax],al
   140020180:	test   BYTE PTR [rax],al
   140020182:	test   BYTE PTR [rax],al
   140020184:	test   BYTE PTR [rax],al
   140020186:	test   BYTE PTR [rax],al
   140020188:	test   BYTE PTR [rax],al
   14002018a:	test   BYTE PTR [rax],al
   14002018c:	test   BYTE PTR [rax],al
   14002018e:	test   BYTE PTR [rax],al
   140020190:	test   BYTE PTR [rax],al
   140020192:	test   BYTE PTR [rax],al
   140020194:	adc    BYTE PTR [rax],al
   140020196:	adc    BYTE PTR [rax],al
   140020198:	adc    BYTE PTR [rax],al
   14002019a:	adc    BYTE PTR [rax],al
   14002019c:	adc    BYTE PTR [rax],al
   14002019e:	adc    BYTE PTR [rax],al
   1400201a0:	adc    BYTE PTR [rax],al
   1400201a2:	add    DWORD PTR [rax],0x810081
   1400201a8:	add    DWORD PTR [rax],0x810081
   1400201ae:	add    DWORD PTR [rax],eax
   1400201b0:	add    DWORD PTR [rax],eax
   1400201b2:	add    DWORD PTR [rax],eax
   1400201b4:	add    DWORD PTR [rax],eax
   1400201b6:	add    DWORD PTR [rax],eax
   1400201b8:	add    DWORD PTR [rax],eax
   1400201ba:	add    DWORD PTR [rax],eax
   1400201bc:	add    DWORD PTR [rax],eax
   1400201be:	add    DWORD PTR [rax],eax
   1400201c0:	add    DWORD PTR [rax],eax
   1400201c2:	add    DWORD PTR [rax],eax
   1400201c4:	add    DWORD PTR [rax],eax
   1400201c6:	add    DWORD PTR [rax],eax
   1400201c8:	add    DWORD PTR [rax],eax
   1400201ca:	add    DWORD PTR [rax],eax
   1400201cc:	add    DWORD PTR [rax],eax
   1400201ce:	add    DWORD PTR [rax],eax
   1400201d0:	add    DWORD PTR [rax],eax
   1400201d2:	add    DWORD PTR [rax],eax
   1400201d4:	add    DWORD PTR [rax],eax
   1400201d6:	adc    BYTE PTR [rax],al
   1400201d8:	adc    BYTE PTR [rax],al
   1400201da:	adc    BYTE PTR [rax],al
   1400201dc:	adc    BYTE PTR [rax],al
   1400201de:	adc    BYTE PTR [rax],al
   1400201e0:	adc    BYTE PTR [rax],al
   1400201e2:	(bad)  
   1400201e3:	add    BYTE PTR [rdx-0x7dff7e00],al
   1400201e9:	add    BYTE PTR [rdx+0x2008200],al
   1400201ef:	add    BYTE PTR [rdx],al
   1400201f1:	add    BYTE PTR [rdx],al
   1400201f3:	add    BYTE PTR [rdx],al
   1400201f5:	add    BYTE PTR [rdx],al
   1400201f7:	add    BYTE PTR [rdx],al
   1400201f9:	add    BYTE PTR [rdx],al
   1400201fb:	add    BYTE PTR [rdx],al
   1400201fd:	add    BYTE PTR [rdx],al
   1400201ff:	add    BYTE PTR [rdx],al
   140020201:	add    BYTE PTR [rdx],al
   140020203:	add    BYTE PTR [rdx],al
   140020205:	add    BYTE PTR [rdx],al
   140020207:	add    BYTE PTR [rdx],al
   140020209:	add    BYTE PTR [rdx],al
   14002020b:	add    BYTE PTR [rdx],al
   14002020d:	add    BYTE PTR [rdx],al
   14002020f:	add    BYTE PTR [rdx],al
   140020211:	add    BYTE PTR [rdx],al
   140020213:	add    BYTE PTR [rdx],al
   140020215:	add    BYTE PTR [rax],dl
   140020217:	add    BYTE PTR [rax],dl
   140020219:	add    BYTE PTR [rax],dl
   14002021b:	add    BYTE PTR [rax],dl
   14002021d:	add    BYTE PTR [rax],ah
	...
   14002031f:	add    BYTE PTR [rax],al
   140020321:	add    BYTE PTR [rax],ah
   140020323:	add    BYTE PTR [rax],ah
   140020325:	add    BYTE PTR [rax],ah
   140020327:	add    BYTE PTR [rax],ah
   140020329:	add    BYTE PTR [rax],ah
   14002032b:	add    BYTE PTR [rax],ah
   14002032d:	add    BYTE PTR [rax],ah
   14002032f:	add    BYTE PTR [rax],ah
   140020331:	add    BYTE PTR [rax],ah
   140020333:	add    BYTE PTR [rax+0x0],ch
   140020336:	sub    BYTE PTR [rax],al
   140020338:	sub    BYTE PTR [rax],al
   14002033a:	sub    BYTE PTR [rax],al
   14002033c:	sub    BYTE PTR [rax],al
   14002033e:	and    BYTE PTR [rax],al
   140020340:	and    BYTE PTR [rax],al
   140020342:	and    BYTE PTR [rax],al
   140020344:	and    BYTE PTR [rax],al
   140020346:	and    BYTE PTR [rax],al
   140020348:	and    BYTE PTR [rax],al
   14002034a:	and    BYTE PTR [rax],al
   14002034c:	and    BYTE PTR [rax],al
   14002034e:	and    BYTE PTR [rax],al
   140020350:	and    BYTE PTR [rax],al
   140020352:	and    BYTE PTR [rax],al
   140020354:	and    BYTE PTR [rax],al
   140020356:	and    BYTE PTR [rax],al
   140020358:	and    BYTE PTR [rax],al
   14002035a:	and    BYTE PTR [rax],al
   14002035c:	and    BYTE PTR [rax],al
   14002035e:	and    BYTE PTR [rax],al
   140020360:	and    BYTE PTR [rax],al
   140020362:	rex.W add BYTE PTR [rax],dl
   140020365:	add    BYTE PTR [rax],dl
   140020367:	add    BYTE PTR [rax],dl
   140020369:	add    BYTE PTR [rax],dl
   14002036b:	add    BYTE PTR [rax],dl
   14002036d:	add    BYTE PTR [rax],dl
   14002036f:	add    BYTE PTR [rax],dl
   140020371:	add    BYTE PTR [rax],dl
   140020373:	add    BYTE PTR [rax],dl
   140020375:	add    BYTE PTR [rax],dl
   140020377:	add    BYTE PTR [rax],dl
   140020379:	add    BYTE PTR [rax],dl
   14002037b:	add    BYTE PTR [rax],dl
   14002037d:	add    BYTE PTR [rax],dl
   14002037f:	add    BYTE PTR [rax],dl
   140020381:	add    BYTE PTR [rax+rax*1+0x840084],al
   140020388:	test   BYTE PTR [rax],al
   14002038a:	test   BYTE PTR [rax],al
   14002038c:	test   BYTE PTR [rax],al
   14002038e:	test   BYTE PTR [rax],al
   140020390:	test   BYTE PTR [rax],al
   140020392:	test   BYTE PTR [rax],al
   140020394:	test   BYTE PTR [rax],al
   140020396:	adc    BYTE PTR [rax],al
   140020398:	adc    BYTE PTR [rax],al
   14002039a:	adc    BYTE PTR [rax],al
   14002039c:	adc    BYTE PTR [rax],al
   14002039e:	adc    BYTE PTR [rax],al
   1400203a0:	adc    BYTE PTR [rax],al
   1400203a2:	adc    BYTE PTR [rax],al
   1400203a4:	add    DWORD PTR [rcx],0x1810181
   1400203aa:	add    DWORD PTR [rcx],0x1810181
   1400203b0:	add    DWORD PTR [rcx],eax
   1400203b2:	add    DWORD PTR [rcx],eax
   1400203b4:	add    DWORD PTR [rcx],eax
   1400203b6:	add    DWORD PTR [rcx],eax
   1400203b8:	add    DWORD PTR [rcx],eax
   1400203ba:	add    DWORD PTR [rcx],eax
   1400203bc:	add    DWORD PTR [rcx],eax
   1400203be:	add    DWORD PTR [rcx],eax
   1400203c0:	add    DWORD PTR [rcx],eax
   1400203c2:	add    DWORD PTR [rcx],eax
   1400203c4:	add    DWORD PTR [rcx],eax
   1400203c6:	add    DWORD PTR [rcx],eax
   1400203c8:	add    DWORD PTR [rcx],eax
   1400203ca:	add    DWORD PTR [rcx],eax
   1400203cc:	add    DWORD PTR [rcx],eax
   1400203ce:	add    DWORD PTR [rcx],eax
   1400203d0:	add    DWORD PTR [rcx],eax
   1400203d2:	add    DWORD PTR [rcx],eax
   1400203d4:	add    DWORD PTR [rcx],eax
   1400203d6:	add    DWORD PTR [rcx],eax
   1400203d8:	adc    BYTE PTR [rax],al
   1400203da:	adc    BYTE PTR [rax],al
   1400203dc:	adc    BYTE PTR [rax],al
   1400203de:	adc    BYTE PTR [rax],al
   1400203e0:	adc    BYTE PTR [rax],al
   1400203e2:	adc    BYTE PTR [rax],al
   1400203e4:	(bad)  
   1400203e5:	add    DWORD PTR [rdx-0x7dfe7dff],eax
   1400203eb:	add    DWORD PTR [rdx+0x2018201],eax
   1400203f1:	add    DWORD PTR [rdx],eax
   1400203f3:	add    DWORD PTR [rdx],eax
   1400203f5:	add    DWORD PTR [rdx],eax
   1400203f7:	add    DWORD PTR [rdx],eax
   1400203f9:	add    DWORD PTR [rdx],eax
   1400203fb:	add    DWORD PTR [rdx],eax
   1400203fd:	add    DWORD PTR [rdx],eax
   1400203ff:	add    DWORD PTR [rdx],eax
   140020401:	add    DWORD PTR [rdx],eax
   140020403:	add    DWORD PTR [rdx],eax
   140020405:	add    DWORD PTR [rdx],eax
   140020407:	add    DWORD PTR [rdx],eax
   140020409:	add    DWORD PTR [rdx],eax
   14002040b:	add    DWORD PTR [rdx],eax
   14002040d:	add    DWORD PTR [rdx],eax
   14002040f:	add    DWORD PTR [rdx],eax
   140020411:	add    DWORD PTR [rdx],eax
   140020413:	add    DWORD PTR [rdx],eax
   140020415:	add    DWORD PTR [rdx],eax
   140020417:	add    DWORD PTR [rax],edx
   140020419:	add    BYTE PTR [rax],dl
   14002041b:	add    BYTE PTR [rax],dl
   14002041d:	add    BYTE PTR [rax],dl
   14002041f:	add    BYTE PTR [rax],ah
   140020421:	add    BYTE PTR [rax],ah
   140020423:	add    BYTE PTR [rax],ah
   140020425:	add    BYTE PTR [rax],ah
   140020427:	add    BYTE PTR [rax],ah
   140020429:	add    BYTE PTR [rax],ah
   14002042b:	add    BYTE PTR [rax],ah
   14002042d:	add    BYTE PTR [rax],ah
   14002042f:	add    BYTE PTR [rax],ah
   140020431:	add    BYTE PTR [rax],ah
   140020433:	add    BYTE PTR [rax],ah
   140020435:	add    BYTE PTR [rax],ah
   140020437:	add    BYTE PTR [rax],ah
   140020439:	add    BYTE PTR [rax],ah
   14002043b:	add    BYTE PTR [rax],ah
   14002043d:	add    BYTE PTR [rax],ah
   14002043f:	add    BYTE PTR [rax],ah
   140020441:	add    BYTE PTR [rax],ah
   140020443:	add    BYTE PTR [rax],ah
   140020445:	add    BYTE PTR [rax],ah
   140020447:	add    BYTE PTR [rax],ah
   140020449:	add    BYTE PTR [rax],ah
   14002044b:	add    BYTE PTR [rax],ah
   14002044d:	add    BYTE PTR [rax],ah
   14002044f:	add    BYTE PTR [rax],ah
   140020451:	add    BYTE PTR [rax],ah
   140020453:	add    BYTE PTR [rax],ah
   140020455:	add    BYTE PTR [rax],ah
   140020457:	add    BYTE PTR [rax],ah
   140020459:	add    BYTE PTR [rax],ah
   14002045b:	add    BYTE PTR [rax],ah
   14002045d:	add    BYTE PTR [rax],ah
   14002045f:	add    BYTE PTR [rax],ah
   140020461:	add    BYTE PTR [rax+0x0],cl
   140020464:	adc    BYTE PTR [rax],al
   140020466:	adc    BYTE PTR [rax],al
   140020468:	adc    BYTE PTR [rax],al
   14002046a:	adc    BYTE PTR [rax],al
   14002046c:	adc    BYTE PTR [rax],al
   14002046e:	adc    BYTE PTR [rax],al
   140020470:	adc    BYTE PTR [rax],al
   140020472:	adc    BYTE PTR [rax],al
   140020474:	adc    BYTE PTR [rax],al
   140020476:	adc    BYTE PTR [rax],al
   140020478:	adc    BYTE PTR [rax],al
   14002047a:	adc    BYTE PTR [rax],al
   14002047c:	adc    BYTE PTR [rax],al
   14002047e:	adc    BYTE PTR [rax],al
   140020480:	adc    BYTE PTR [rax],al
   140020482:	adc    BYTE PTR [rax],al
   140020484:	adc    BYTE PTR [rax],al
   140020486:	adc    al,0x0
   140020488:	adc    al,0x0
   14002048a:	adc    BYTE PTR [rax],al
   14002048c:	adc    BYTE PTR [rax],al
   14002048e:	adc    BYTE PTR [rax],al
   140020490:	adc    BYTE PTR [rax],al
   140020492:	adc    BYTE PTR [rax],al
   140020494:	adc    al,0x0
   140020496:	adc    BYTE PTR [rax],al
   140020498:	adc    BYTE PTR [rax],al
   14002049a:	adc    BYTE PTR [rax],al
   14002049c:	adc    BYTE PTR [rax],al
   14002049e:	adc    BYTE PTR [rax],al
   1400204a0:	adc    BYTE PTR [rax],al
   1400204a2:	add    DWORD PTR [rcx],eax
   1400204a4:	add    DWORD PTR [rcx],eax
   1400204a6:	add    DWORD PTR [rcx],eax
   1400204a8:	add    DWORD PTR [rcx],eax
   1400204aa:	add    DWORD PTR [rcx],eax
   1400204ac:	add    DWORD PTR [rcx],eax
   1400204ae:	add    DWORD PTR [rcx],eax
   1400204b0:	add    DWORD PTR [rcx],eax
   1400204b2:	add    DWORD PTR [rcx],eax
   1400204b4:	add    DWORD PTR [rcx],eax
   1400204b6:	add    DWORD PTR [rcx],eax
   1400204b8:	add    DWORD PTR [rcx],eax
   1400204ba:	add    DWORD PTR [rcx],eax
   1400204bc:	add    DWORD PTR [rcx],eax
   1400204be:	add    DWORD PTR [rcx],eax
   1400204c0:	add    DWORD PTR [rcx],eax
   1400204c2:	add    DWORD PTR [rcx],eax
   1400204c4:	add    DWORD PTR [rcx],eax
   1400204c6:	add    DWORD PTR [rcx],eax
   1400204c8:	add    DWORD PTR [rcx],eax
   1400204ca:	add    DWORD PTR [rcx],eax
   1400204cc:	add    DWORD PTR [rcx],eax
   1400204ce:	add    DWORD PTR [rcx],eax
   1400204d0:	adc    BYTE PTR [rax],al
   1400204d2:	add    DWORD PTR [rcx],eax
   1400204d4:	add    DWORD PTR [rcx],eax
   1400204d6:	add    DWORD PTR [rcx],eax
   1400204d8:	add    DWORD PTR [rcx],eax
   1400204da:	add    DWORD PTR [rcx],eax
   1400204dc:	add    DWORD PTR [rcx],eax
   1400204de:	add    DWORD PTR [rcx],eax
   1400204e0:	add    al,BYTE PTR [rcx]
   1400204e2:	add    al,BYTE PTR [rcx]
   1400204e4:	add    al,BYTE PTR [rcx]
   1400204e6:	add    al,BYTE PTR [rcx]
   1400204e8:	add    al,BYTE PTR [rcx]
   1400204ea:	add    al,BYTE PTR [rcx]
   1400204ec:	add    al,BYTE PTR [rcx]
   1400204ee:	add    al,BYTE PTR [rcx]
   1400204f0:	add    al,BYTE PTR [rcx]
   1400204f2:	add    al,BYTE PTR [rcx]
   1400204f4:	add    al,BYTE PTR [rcx]
   1400204f6:	add    al,BYTE PTR [rcx]
   1400204f8:	add    al,BYTE PTR [rcx]
   1400204fa:	add    al,BYTE PTR [rcx]
   1400204fc:	add    al,BYTE PTR [rcx]
   1400204fe:	add    al,BYTE PTR [rcx]
   140020500:	add    al,BYTE PTR [rcx]
   140020502:	add    al,BYTE PTR [rcx]
   140020504:	add    al,BYTE PTR [rcx]
   140020506:	add    al,BYTE PTR [rcx]
   140020508:	add    al,BYTE PTR [rcx]
   14002050a:	add    al,BYTE PTR [rcx]
   14002050c:	add    al,BYTE PTR [rcx]
   14002050e:	add    al,BYTE PTR [rcx]
   140020510:	adc    BYTE PTR [rax],al
   140020512:	add    al,BYTE PTR [rcx]
   140020514:	add    al,BYTE PTR [rcx]
   140020516:	add    al,BYTE PTR [rcx]
   140020518:	add    al,BYTE PTR [rcx]
   14002051a:	add    al,BYTE PTR [rcx]
   14002051c:	add    al,BYTE PTR [rcx]
   14002051e:	add    al,BYTE PTR [rcx]
   140020520:	add    al,BYTE PTR [rcx]
   140020522:	add    DWORD PTR [rcx],eax
	...
   140020530:	add    BYTE PTR [rcx-0x7a7b7c7e],0x86
   140020537:	xchg   DWORD PTR [rax-0x73747577],ecx
   14002053d:	lea    ecx,[rsi-0x6d6e6f71]
   140020543:	xchg   ebx,eax
   140020544:	xchg   esp,eax
   140020545:	xchg   ebp,eax
   140020546:	xchg   esi,eax
   140020547:	xchg   edi,eax
   140020548:	cwde   
   140020549:	cdq    
   14002054a:	(bad)  
   14002054b:	fwait
   14002054c:	pushf  
   14002054d:	popf   
   14002054e:	sahf   
   14002054f:	lahf   
   140020550:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   140020559:	test   eax,0xadacabaa
   14002055e:	scas   al,BYTE PTR es:[rdi]
   14002055f:	scas   eax,DWORD PTR es:[rdi]
   140020560:	mov    al,0xb1
   140020562:	mov    dl,0xb3
   140020564:	mov    ah,0xb5
   140020566:	mov    dh,0xb7
   140020568:	mov    eax,0xbcbbbab9
   14002056d:	mov    ebp,0xc1c0bfbe
   140020572:	ret    0xc4c3
   140020575:	(bad)
   140020578:	enter  0xcac9,0xcb
   14002057c:	int3   
   14002057d:	int    0xce
   14002057f:	iret   
   140020580:	rcl    cl,1
   140020582:	rcl    bl,cl
   140020584:	(bad)  
   140020585:	(bad)  
   140020586:	(bad)  
   140020587:	xlat   BYTE PTR ds:[rbx]
   140020588:	fcomp  st(1)
   14002058a:	fcmovu st,st(3)
   14002058c:	(bad)  
   14002058e:	(bad)  
   140020590:	loopne 0x140020573
   140020592:	loop   0x140020577
   140020594:	in     al,0xe5
   140020596:	out    0xe7,al
   140020598:	call   0x12cedf086
   14002059d:	in     eax,dx
   14002059e:	out    dx,al
   14002059f:	out    dx,eax
   1400205a0:	lock icebp 
   1400205a2:	repnz repz hlt 
   1400205a5:	cmc    
   1400205a6:	div    bh
   1400205a8:	clc    
   1400205a9:	stc    
   1400205aa:	cli    
   1400205ab:	sti    
   1400205ac:	cld    
   1400205ad:	std    
   1400205ae:	(bad)  
   1400205af:	inc    DWORD PTR [rax]
   1400205b1:	add    DWORD PTR [rdx],eax
   1400205b3:	add    eax,DWORD PTR [rax*1+0x9080706]
   1400205ba:	or     cl,BYTE PTR [rbx]
   1400205bc:	or     al,0xd
   1400205be:	(bad)  
   1400205bf:	movups xmm2,XMMWORD PTR [rcx]
   1400205c2:	adc    dl,BYTE PTR [rbx]
   1400205c4:	adc    al,0x15
   1400205c6:	(bad)  
   1400205c7:	(bad)  
   1400205c8:	sbb    BYTE PTR [rcx],bl
   1400205ca:	sbb    bl,BYTE PTR [rbx]
   1400205cc:	sbb    al,0x1d
   1400205ce:	(bad)  
   1400205cf:	(bad)  
   1400205d0:	and    BYTE PTR [rcx],ah
   1400205d2:	and    ah,BYTE PTR [rbx]
   1400205d4:	and    al,0x25
   1400205d6:	es (bad) 
   1400205d8:	sub    BYTE PTR [rcx],ch
   1400205da:	sub    ch,BYTE PTR [rbx]
   1400205dc:	sub    al,0x2d
   1400205de:	cs (bad) 
   1400205e0:	xor    BYTE PTR [rcx],dh
   1400205e2:	xor    dh,BYTE PTR [rbx]
   1400205e4:	xor    al,0x35
   1400205e6:	ss (bad) 
   1400205e8:	cmp    BYTE PTR [rcx],bh
   1400205ea:	cmp    bh,BYTE PTR [rbx]
   1400205ec:	cmp    al,0x3d
   1400205ee:	ds (bad) 
   1400205f0:	rex (bad) 
   1400205f2:	(bad)
   1400205f7:	addr32 push 0x6c6b6a69
   1400205fd:	ins    DWORD PTR es:[rdi],dx
   1400205fe:	outs   dx,BYTE PTR ds:[rsi]
   1400205ff:	outs   dx,DWORD PTR ds:[rsi]
   140020600:	jo     0x140020673
   140020602:	jb     0x140020677
   140020604:	je     0x14002067b
   140020606:	jbe    0x14002067f
   140020608:	js     0x140020683
   14002060a:	jp     0x140020667
   14002060c:	pop    rsp
   14002060d:	pop    rbp
   14002060e:	pop    rsi
   14002060f:	pop    rdi
   140020610:	(bad)  
   140020611:	(bad)  
   140020612:	(bad)
   140020617:	addr32 push 0x6c6b6a69
   14002061d:	ins    DWORD PTR es:[rdi],dx
   14002061e:	outs   dx,BYTE PTR ds:[rsi]
   14002061f:	outs   dx,DWORD PTR ds:[rsi]
   140020620:	jo     0x140020693
   140020622:	jb     0x140020697
   140020624:	je     0x14002069b
   140020626:	jbe    0x14002069f
   140020628:	js     0x1400206a3
   14002062a:	jp     0x1400206a7
   14002062c:	jl     0x1400206ab
   14002062e:	jle    0x1400206af
   140020630:	add    BYTE PTR [rcx-0x7a7b7c7e],0x86
   140020637:	xchg   DWORD PTR [rax-0x73747577],ecx
   14002063d:	lea    ecx,[rsi-0x6d6e6f71]
   140020643:	xchg   ebx,eax
   140020644:	xchg   esp,eax
   140020645:	xchg   ebp,eax
   140020646:	xchg   esi,eax
   140020647:	xchg   edi,eax
   140020648:	cwde   
   140020649:	cdq    
   14002064a:	(bad)  
   14002064b:	fwait
   14002064c:	pushf  
   14002064d:	popf   
   14002064e:	sahf   
   14002064f:	lahf   
   140020650:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   140020659:	test   eax,0xadacabaa
   14002065e:	scas   al,BYTE PTR es:[rdi]
   14002065f:	scas   eax,DWORD PTR es:[rdi]
   140020660:	mov    al,0xb1
   140020662:	mov    dl,0xb3
   140020664:	mov    ah,0xb5
   140020666:	mov    dh,0xb7
   140020668:	mov    eax,0xbcbbbab9
   14002066d:	mov    ebp,0xc1c0bfbe
   140020672:	ret    0xc4c3
   140020675:	(bad)
   140020678:	enter  0xcac9,0xcb
   14002067c:	int3   
   14002067d:	int    0xce
   14002067f:	iret   
   140020680:	rcl    cl,1
   140020682:	rcl    bl,cl
   140020684:	(bad)  
   140020685:	(bad)  
   140020686:	(bad)  
   140020687:	xlat   BYTE PTR ds:[rbx]
   140020688:	fcomp  st(1)
   14002068a:	fcmovu st,st(3)
   14002068c:	(bad)  
   14002068e:	(bad)  
   140020690:	loopne 0x140020673
   140020692:	loop   0x140020677
   140020694:	in     al,0xe5
   140020696:	out    0xe7,al
   140020698:	call   0x12cedf186
   14002069d:	in     eax,dx
   14002069e:	out    dx,al
   14002069f:	out    dx,eax
   1400206a0:	lock icebp 
   1400206a2:	repnz repz hlt 
   1400206a5:	cmc    
   1400206a6:	div    bh
   1400206a8:	clc    
   1400206a9:	stc    
   1400206aa:	cli    
   1400206ab:	sti    
   1400206ac:	cld    
   1400206ad:	std    
   1400206ae:	(bad)  
   1400206af:	inc    DWORD PTR [rax-0x7b7c7d7f]
   1400206b5:	test   DWORD PTR [rsi-0x75767779],eax
   1400206bb:	mov    ecx,DWORD PTR [rbp+rcx*4-0x6e6f7072]
   1400206c2:	xchg   edx,eax
   1400206c3:	xchg   ebx,eax
   1400206c4:	xchg   esp,eax
   1400206c5:	xchg   ebp,eax
   1400206c6:	xchg   esi,eax
   1400206c7:	xchg   edi,eax
   1400206c8:	cwde   
   1400206c9:	cdq    
   1400206ca:	(bad)  
   1400206cb:	fwait
   1400206cc:	pushf  
   1400206cd:	popf   
   1400206ce:	sahf   
   1400206cf:	lahf   
   1400206d0:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   1400206d9:	test   eax,0xadacabaa
   1400206de:	scas   al,BYTE PTR es:[rdi]
   1400206df:	scas   eax,DWORD PTR es:[rdi]
   1400206e0:	mov    al,0xb1
   1400206e2:	mov    dl,0xb3
   1400206e4:	mov    ah,0xb5
   1400206e6:	mov    dh,0xb7
   1400206e8:	mov    eax,0xbcbbbab9
   1400206ed:	mov    ebp,0xc1c0bfbe
   1400206f2:	ret    0xc4c3
   1400206f5:	(bad)
   1400206f8:	enter  0xcac9,0xcb
   1400206fc:	int3   
   1400206fd:	int    0xce
   1400206ff:	iret   
   140020700:	rcl    cl,1
   140020702:	rcl    bl,cl
   140020704:	(bad)  
   140020705:	(bad)  
   140020706:	(bad)  
   140020707:	xlat   BYTE PTR ds:[rbx]
   140020708:	fcomp  st(1)
   14002070a:	fcmovu st,st(3)
   14002070c:	(bad)  
   14002070e:	(bad)  
   140020710:	loopne 0x1400206f3
   140020712:	loop   0x1400206f7
   140020714:	in     al,0xe5
   140020716:	out    0xe7,al
   140020718:	call   0x12cedf206
   14002071d:	in     eax,dx
   14002071e:	out    dx,al
   14002071f:	out    dx,eax
   140020720:	lock icebp 
   140020722:	repnz repz hlt 
   140020725:	cmc    
   140020726:	div    bh
   140020728:	clc    
   140020729:	stc    
   14002072a:	cli    
   14002072b:	sti    
   14002072c:	cld    
   14002072d:	std    
   14002072e:	(bad)  
   14002072f:	inc    DWORD PTR [rax]
   140020731:	add    DWORD PTR [rdx],eax
   140020733:	add    eax,DWORD PTR [rax*1+0x9080706]
   14002073a:	or     cl,BYTE PTR [rbx]
   14002073c:	or     al,0xd
   14002073e:	(bad)  
   14002073f:	movups xmm2,XMMWORD PTR [rcx]
   140020742:	adc    dl,BYTE PTR [rbx]
   140020744:	adc    al,0x15
   140020746:	(bad)  
   140020747:	(bad)  
   140020748:	sbb    BYTE PTR [rcx],bl
   14002074a:	sbb    bl,BYTE PTR [rbx]
   14002074c:	sbb    al,0x1d
   14002074e:	(bad)  
   14002074f:	(bad)  
   140020750:	and    BYTE PTR [rcx],ah
   140020752:	and    ah,BYTE PTR [rbx]
   140020754:	and    al,0x25
   140020756:	es (bad) 
   140020758:	sub    BYTE PTR [rcx],ch
   14002075a:	sub    ch,BYTE PTR [rbx]
   14002075c:	sub    al,0x2d
   14002075e:	cs (bad) 
   140020760:	xor    BYTE PTR [rcx],dh
   140020762:	xor    dh,BYTE PTR [rbx]
   140020764:	xor    al,0x35
   140020766:	ss (bad) 
   140020768:	cmp    BYTE PTR [rcx],bh
   14002076a:	cmp    bh,BYTE PTR [rbx]
   14002076c:	cmp    al,0x3d
   14002076e:	ds (bad) 
   140020770:	rex
   140020771:	rex.B
   140020772:	rex.X
   140020773:	rex.XB
   140020774:	rex.R
   140020775:	rex.RB
   140020776:	rex.RX
   140020777:	rex.RXB
   140020778:	rex.W
   140020779:	rex.WB
   14002077a:	rex.WX
   14002077b:	rex.WXB
   14002077c:	rex.WR
   14002077d:	rex.WRB
   14002077e:	rex.WRX
   14002077f:	rex.WRXB push r8
   140020781:	push   rcx
   140020782:	push   rdx
   140020783:	push   rbx
   140020784:	push   rsp
   140020785:	push   rbp
   140020786:	push   rsi
   140020787:	push   rdi
   140020788:	pop    rax
   140020789:	pop    rcx
   14002078a:	pop    rdx
   14002078b:	pop    rbx
   14002078c:	pop    rsp
   14002078d:	pop    rbp
   14002078e:	pop    rsi
   14002078f:	pop    rdi
   140020790:	(bad)  
   140020791:	rex.B
   140020792:	rex.X
   140020793:	rex.XB
   140020794:	rex.R
   140020795:	rex.RB
   140020796:	rex.RX
   140020797:	rex.RXB
   140020798:	rex.W
   140020799:	rex.WB
   14002079a:	rex.WX
   14002079b:	rex.WXB
   14002079c:	rex.WR
   14002079d:	rex.WRB
   14002079e:	rex.WRX
   14002079f:	rex.WRXB push r8
   1400207a1:	push   rcx
   1400207a2:	push   rdx
   1400207a3:	push   rbx
   1400207a4:	push   rsp
   1400207a5:	push   rbp
   1400207a6:	push   rsi
   1400207a7:	push   rdi
   1400207a8:	pop    rax
   1400207a9:	pop    rcx
   1400207aa:	pop    rdx
   1400207ab:	jnp    0x140020829
   1400207ad:	jge    0x14002082d
   1400207af:	jg     0x140020731
   1400207b1:	add    DWORD PTR [rdx-0x797a7b7d],0x8a898887
   1400207bb:	mov    ecx,DWORD PTR [rbp+rcx*4-0x6e6f7072]
   1400207c2:	xchg   edx,eax
   1400207c3:	xchg   ebx,eax
   1400207c4:	xchg   esp,eax
   1400207c5:	xchg   ebp,eax
   1400207c6:	xchg   esi,eax
   1400207c7:	xchg   edi,eax
   1400207c8:	cwde   
   1400207c9:	cdq    
   1400207ca:	(bad)  
   1400207cb:	fwait
   1400207cc:	pushf  
   1400207cd:	popf   
   1400207ce:	sahf   
   1400207cf:	lahf   
   1400207d0:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   1400207d9:	test   eax,0xadacabaa
   1400207de:	scas   al,BYTE PTR es:[rdi]
   1400207df:	scas   eax,DWORD PTR es:[rdi]
   1400207e0:	mov    al,0xb1
   1400207e2:	mov    dl,0xb3
   1400207e4:	mov    ah,0xb5
   1400207e6:	mov    dh,0xb7
   1400207e8:	mov    eax,0xbcbbbab9
   1400207ed:	mov    ebp,0xc1c0bfbe
   1400207f2:	ret    0xc4c3
   1400207f5:	(bad)
   1400207f8:	enter  0xcac9,0xcb
   1400207fc:	int3   
   1400207fd:	int    0xce
   1400207ff:	iret   
   140020800:	rcl    cl,1
   140020802:	rcl    bl,cl
   140020804:	(bad)  
   140020805:	(bad)  
   140020806:	(bad)  
   140020807:	xlat   BYTE PTR ds:[rbx]
   140020808:	fcomp  st(1)
   14002080a:	fcmovu st,st(3)
   14002080c:	(bad)  
   14002080e:	(bad)  
   140020810:	loopne 0x1400207f3
   140020812:	loop   0x1400207f7
   140020814:	in     al,0xe5
   140020816:	out    0xe7,al
   140020818:	call   0x12cedf306
   14002081d:	in     eax,dx
   14002081e:	out    dx,al
   14002081f:	out    dx,eax
   140020820:	lock icebp 
   140020822:	repnz repz hlt 
   140020825:	cmc    
   140020826:	div    bh
   140020828:	clc    
   140020829:	stc    
   14002082a:	cli    
   14002082b:	sti    
   14002082c:	cld    
   14002082d:	std    
   14002082e:	(bad)  
   14002082f:	inc    DWORD PTR [rbx+0x0]
   140020832:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   140020836:	rex.WRXB add BYTE PTR [r13+0x0],r10b
   14002083a:	push   rsp
   14002083b:	add    BYTE PTR [rax+rax*1],ah
   14002083e:	add    BYTE PTR [rax],al
   140020840:	push   rdx
   140020841:	push   rbx
   140020842:	rex.R push rbx
   140020844:	mov    dl,0x47
   140020846:	in     eax,dx
   140020847:	xchg   BYTE PTR [rbx-0x6eb35af7],cl
   14002084d:	rex.WXB ret 
   14002084f:	or     BYTE PTR [rcx],dh
   140020851:	clc    
   140020852:	jo     0x140020823
   140020854:	add    DWORD PTR [rax],eax
   140020856:	add    BYTE PTR [rax],al
   140020858:	cmp    bl,BYTE PTR [r10+r14*2+0x65]
   14002085d:	pop    rsp
   14002085e:	push   0x64
   140020860:	imul   esi,DWORD PTR [rdi],0x75
   140020863:	xor    BYTE PTR ss:[rcx+rsi*1+0x30],bl
   140020868:	cmp    BYTE PTR [rcx],dh
   14002086a:	pop    rsp
   14002086b:	(bad)  
   14002086c:	jne    0x1400208d7
   14002086e:	ins    BYTE PTR es:[rdi],dx
   14002086f:	fs pop rsp
   140020871:	ja     0x1400208dc
   140020873:	outs   dx,BYTE PTR ds:[rsi]
   140020874:	outs   dx,DWORD PTR fs:[rsi]
   140020876:	ja     0x1400208eb
   140020878:	sub    eax,0x36646d61
   14002087d:	xor    al,0x5c
   14002087f:	je     0x1400208ee
   140020881:	jo     0x1400208df
   140020883:	push   0x61
   140020885:	jbe    0x1400208e8
   140020887:	pop    rsp
   140020888:	push   0x61
   14002088a:	jbe    0x1400208ed
   14002088c:	pop    rsp
   14002088d:	outs   dx,DWORD PTR ds:[rsi]
   14002088e:	(bad)  
   14002088f:	push   0x36
   140020891:	xor    al,0x5c
   140020893:	push   0x61
   140020895:	jbe    0x1400208f8
   140020897:	cs jo  0x1400208fe
   14002089a:	(bad)  
	...
   1400208bf:	add    BYTE PTR [rcx],al
   1400208c1:	or     al,BYTE PTR [rax+rax*1]
   1400208c4:	or     dh,BYTE PTR [rax+rdx*1]
   1400208c7:	add    BYTE PTR [rdx],cl
   1400208c9:	rol    BYTE PTR [rsi],cl
   1400208cb:	jo     0x1400208ce
   1400208cd:	adc    al,0x6
   1400208cf:	add    BYTE PTR [rsp+riz*2],dl
   1400208d2:	(bad)  
   1400208d3:	add    BYTE PTR [rsp+rsi*1],dl
   1400208d6:	(bad)  
   1400208d7:	add    BYTE PTR [rdx+rsi*1],dl
   1400208da:	adc    BYTE PTR [rax+0x1],dh
   1400208dd:	sbb    BYTE PTR [rdx],cl
   1400208df:	add    BYTE PTR [rax],bl
   1400208e1:	fs or  al,0x0
   1400208e4:	sbb    BYTE PTR [rbx+rcx*1+0x0],dl
   1400208e8:	sbb    BYTE PTR [rdx+rcx*1],dh
   1400208eb:	add    BYTE PTR [rax],bl
   1400208ed:	push   rdx
   1400208ee:	adc    al,0xd0
   1400208f0:	adc    al,al
   1400208f2:	adc    BYTE PTR [rax+0x19],dh
   1400208f5:	(bad)  
   1400208f6:	or     DWORD PTR [rax],eax
   1400208f8:	adc    eax,0x15003054
   1400208fd:	xor    al,0x2e
   1400208ff:	add    BYTE PTR [rip+0xe002a01],dl        # 0x14e023306
   140020905:	ror    BYTE PTR [rax+rsi*2],0xb
   140020909:	(bad)  
   14002090a:	add    BYTE PTR [rax],al
   14002090c:	and    BYTE PTR [rsi+0x1400000],0x0
   140020913:	add    BYTE PTR [rcx],al
   140020915:	and    DWORD PTR [rdx],ecx
   140020917:	add    BYTE PTR [rcx],ah
   140020919:	or     al,BYTE PTR fs:[rax]
   14002091c:	and    DWORD PTR [rcx+rcx*1+0x0],edx
   140020920:	and    DWORD PTR [rax+rcx*1],esi
   140020923:	add    BYTE PTR [rcx],ah
   140020925:	xor    bl,BYTE PTR [rip+0x19c01bd0]        # 0x159c224fb
   14002092b:	jo     0x14002092e
   14002092d:	sbb    DWORD PTR [rdx],ecx
   14002092f:	add    BYTE PTR [rcx],bl
   140020931:	je     0x140020942
   140020933:	add    BYTE PTR [rcx],bl
   140020935:	fs (bad) 
   140020937:	add    BYTE PTR [rcx],bl
   140020939:	push   rsp
   14002093a:	or     eax,0xc341900
   14002093f:	add    BYTE PTR [rcx],bl
   140020941:	xchg   edx,eax
   140020942:	adc    eax,0xa1701c0
   140020947:	add    BYTE PTR [rdi],dl
   140020949:	push   rsp
   14002094a:	or     eax,0xc341700
   14002094f:	add    BYTE PTR [rdi],dl
   140020951:	push   rdx
   140020952:	adc    esi,eax
   140020954:	adc    eax,esp
   140020956:	(bad)  
   140020958:	or     eax,0x1700bc0
   14002095d:	clts   
   14002095f:	add    BYTE PTR [rdi],cl
   140020961:	or     BYTE PTR fs:[rax],al
   140020964:	sysenter 
   140020966:	(bad)  
   140020967:	add    BYTE PTR [rdi],cl
   140020969:	xor    cl,BYTE PTR [rbx]
   14002096b:	jo     0x14002096e
   14002096d:	sbb    BYTE PTR [rdx],al
   14002096f:	add    BYTE PTR [rax],bl
   140020971:	xor    dl,BYTE PTR [rax+rsi*1]
   140020974:	add    DWORD PTR [rcx+rcx*1],edx
   140020977:	add    BYTE PTR [rdx+riz*4],dl
   14002097a:	or     eax,0x9e00bf0
   14002097f:	rol    BYTE PTR [rdi],1
   140020981:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x143620df8
   140020988:	add    dl,BYTE PTR [rax+0x0]
   14002098b:	add    BYTE PTR [rcx],al
   14002098d:	(bad)  
   14002098e:	or     al,BYTE PTR [rax]
   140020990:	(bad)  
   140020991:	xor    al,0x10
   140020993:	add    BYTE PTR [rsi],bl
   140020995:	push   rdx
   140020996:	sbb    dh,al
   140020998:	sbb    al,ah
   14002099a:	(bad)  
   14002099b:	rcl    BYTE PTR [rax+rax*8],1
   14002099e:	adc    dh,BYTE PTR [rax+0x11]
   1400209a1:	(bad)  
   1400209a2:	adc    BYTE PTR [rax+0x19],dl
   1400209a5:	xor    BYTE PTR [rbx],cl
   1400209a7:	add    BYTE PTR [rdi],bl
   1400209a9:	xor    al,0x3f
   1400209ab:	add    BYTE PTR [rdi],bl
   1400209ad:	add    DWORD PTR [rax+rax*1],esi
   1400209b0:	adc    al,dh
   1400209b2:	(bad)  
   1400209b3:	loopne 0x1400209c1
   1400209b5:	ror    BYTE PTR [rdx],1
   1400209b7:	ror    BYTE PTR [rax],0x70
   1400209ba:	(bad)  
   1400209bb:	(bad)  
   1400209bc:	(bad)  
   1400209bd:	push   rax
   1400209be:	add    BYTE PTR [rax],al
   1400209c0:	and    BYTE PTR [rsi+0x1900000],0x0
   1400209c7:	add    BYTE PTR [rcx],al
   1400209c9:	(bad)  
   1400209ca:	or     al,BYTE PTR [rax]
   1400209cc:	(bad)  
   1400209cd:	xor    al,0xd
   1400209cf:	add    BYTE PTR [rsi],bl
   1400209d1:	xor    bl,BYTE PTR [rdx]
   1400209d3:	lock sbb al,ah
   1400209d6:	(bad)  
   1400209d7:	rcl    BYTE PTR [rax+rax*8],1
   1400209da:	adc    dh,BYTE PTR [rax+0x11]
   1400209dd:	(bad)  
   1400209de:	adc    BYTE PTR [rax+0x1],dl
   1400209e1:	sbb    al,0xc
   1400209e3:	add    BYTE PTR [rsp+riz*2],bl
   1400209e6:	or     eax,0xc541c00
   1400209eb:	add    BYTE PTR [rsp+rsi*1],bl
   1400209ee:	or     eax,DWORD PTR [rax]
   1400209f0:	sbb    al,0x32
   1400209f2:	sbb    al,dh
   1400209f4:	(bad)  
   1400209f5:	loopne 0x140020a0b
   1400209f7:	rcl    BYTE PTR [rdx],1
   1400209f9:	rcl    BYTE PTR [rax],0x70
   1400209fc:	sbb    DWORD PTR [rcx],esi
   1400209fe:	or     eax,0x37641f00
   140020a03:	add    BYTE PTR [rdi],bl
   140020a05:	push   rsp
   140020a06:	add    BYTE PTR ss:[rdi],bl
   140020a09:	xor    al,0x35
   140020a0b:	add    BYTE PTR [rdi],bl
   140020a0d:	add    DWORD PTR [rsi],ebp
   140020a0f:	add    BYTE PTR [rax],bl
   140020a11:	lock (bad) 
   140020a13:	loopne 0x140020a29
   140020a15:	rcl    BYTE PTR [rdx],1
   140020a17:	rcl    BYTE PTR [rax],0x70
   140020a1a:	add    BYTE PTR [rax],al
   140020a1c:	and    BYTE PTR [rsi+0x1600000],0x0
   140020a23:	add    BYTE PTR [rcx],al
   140020a25:	(bad)  
   140020a26:	or     al,BYTE PTR [rax]
   140020a28:	(bad)  
   140020a29:	(bad)  
   140020a2a:	adc    eax,0x14741e00
   140020a2f:	add    BYTE PTR [rsi],bl
   140020a31:	adc    eax,DWORD PTR fs:[rax]
   140020a34:	(bad)  
   140020a35:	xor    al,0x12
   140020a37:	add    BYTE PTR [rsi],bl
   140020a39:	repnz adc al,0x50
   140020a3c:	sbb    DWORD PTR [rcx],ebp
   140020a3e:	or     BYTE PTR [rax],al
   140020a40:	sbb    BYTE PTR [rcx],al
   140020a42:	jns    0x140020a44
   140020a44:	or     eax,edx
   140020a46:	(bad)  
   140020a47:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x143620ebe
   140020a4e:	add    dl,BYTE PTR [rax-0x80]
   140020a51:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140020a52:	add    BYTE PTR [rax],al
   140020a54:	mov    al,0x3
   140020a56:	add    BYTE PTR [rax],al
   140020a58:	add    DWORD PTR [rcx],ebx
   140020a5a:	or     al,BYTE PTR [rax]
   140020a5c:	sbb    DWORD PTR [rdi+rcx*1],esi
   140020a5f:	add    BYTE PTR [rcx],bl
   140020a61:	xor    dl,BYTE PTR [rip+0x11e013f0]        # 0x151e21e57
   140020a67:	ror    BYTE PTR [rdi],1
   140020a69:	ror    BYTE PTR [rip+0xb600c70],0x50        # 0x14b6216e0
   140020a70:	add    DWORD PTR [rax],ebx
   140020a72:	or     al,BYTE PTR [rax]
   140020a74:	sbb    BYTE PTR [rbx+rcx*1+0x0],ah
   140020a78:	sbb    BYTE PTR [rdx+rcx*1+0x0],dl
   140020a7c:	sbb    BYTE PTR [rcx+rcx*1],dh
   140020a7f:	add    BYTE PTR [rax],bl
   140020a81:	xor    dl,BYTE PTR [rax+rdx*8]
   140020a84:	adc    al,al
   140020a86:	adc    BYTE PTR [rax+0x1],dh
   140020a89:	(bad)  
   140020a8a:	add    DWORD PTR [rax],eax
   140020a8c:	(bad)  
   140020a8d:	rex.X add BYTE PTR [rax],al
   140020a90:	add    DWORD PTR [rax+rcx*1],edx
   140020a93:	add    BYTE PTR [rsp+riz*2],dl
   140020a96:	or     al,0x0
   140020a98:	adc    al,0x54
   140020a9a:	or     eax,DWORD PTR [rax]
   140020a9c:	adc    al,0x34
   140020a9e:	or     al,BYTE PTR [rax]
   140020aa0:	adc    al,0x72
   140020aa2:	adc    BYTE PTR [rax+0x1],dh
   140020aa5:	adc    BYTE PTR [rbx],al
   140020aa7:	add    BYTE PTR [rax],dl
   140020aa9:	rex.X or al,0x70
   140020aac:	or     esi,DWORD PTR [rax]
   140020aae:	add    BYTE PTR [rax],al
   140020ab0:	add    DWORD PTR [rdx],ebx
   140020ab2:	add    al,0x0
   140020ab4:	sbb    dh,BYTE PTR [rdx]
   140020ab6:	(bad)  
   140020ab7:	jo     0x140020ace
   140020ab9:	(bad)  
   140020aba:	adc    al,0x30
   140020abc:	add    DWORD PTR [rdx],esp
   140020abe:	(bad)  
   140020abf:	add    BYTE PTR [rdx],ah
   140020ac1:	movabs ds:0x60167017c019e01b,al
   140020aca:	adc    eax,0x501430
   140020acf:	add    BYTE PTR [rcx],bl
   140020ad1:	or     eax,DWORD PTR cs:[rax]
   140020ad4:	and    BYTE PTR [rdi+rsi*1+0x0],dh
   140020ad8:	and    BYTE PTR [rsi+rsi*1+0x0],ah
   140020adc:	and    BYTE PTR [rsi*1+0x30012000],dh
   140020ae3:	add    BYTE PTR [rax+rdx*8],dl
   140020ae6:	adc    al,al
   140020ae8:	adc    BYTE PTR [rax+0x0],dl
   140020aeb:	add    BYTE PTR [rax+0x700000a6],al
   140020af1:	add    DWORD PTR [rax],eax
   140020af3:	add    BYTE PTR [rcx],bl
   140020af5:	(bad)  
   140020af6:	or     eax,0x4b742600
   140020afb:	add    BYTE PTR [rsi],ah
   140020afd:	rex.WX add BYTE PTR fs:[rsi],spl
   140020b01:	xor    al,0x49
   140020b03:	add    BYTE PTR [rsi],ah
   140020b05:	add    DWORD PTR [rdx+0x0],eax
   140020b08:	sbb    al,dh
   140020b0a:	(bad)  
   140020b0b:	loopne 0x140020b21
   140020b0d:	rcl    BYTE PTR [rdx],1
   140020b0f:	rcl    BYTE PTR [rax],0x50
   140020b12:	add    BYTE PTR [rax],al
   140020b14:	and    BYTE PTR [rsi+0x2000000],0x0
   140020b1b:	add    BYTE PTR [rcx],al
   140020b1d:	sbb    al,0xc
   140020b1f:	add    BYTE PTR [rsp+riz*2],bl
   140020b22:	adc    al,BYTE PTR [rax]
   140020b24:	sbb    al,0x54
   140020b26:	adc    DWORD PTR [rax],eax
   140020b28:	sbb    al,0x34
   140020b2a:	adc    BYTE PTR [rax],al
   140020b2c:	sbb    al,0x92
   140020b2e:	sbb    al,dh
   140020b30:	(bad)  
   140020b31:	loopne 0x140020b47
   140020b33:	rcl    BYTE PTR [rdx],1
   140020b35:	rcl    BYTE PTR [rax],0x70
   140020b38:	sbb    DWORD PTR [rsi],ebp
   140020b3a:	or     DWORD PTR [rax],eax
   140020b3c:	sbb    eax,0x1d005464
   140020b41:	xor    al,0x53
   140020b43:	add    BYTE PTR [rip+0xe004e01],bl        # 0x14e02594a
   140020b49:	ror    BYTE PTR [rax+rsi*2],0xb
   140020b4d:	push   rax
   140020b4e:	add    BYTE PTR [rax],al
   140020b50:	and    BYTE PTR [rsi+0x2600000],0x0
   140020b57:	add    BYTE PTR [rcx],bl
   140020b59:	(bad)  
   140020b5a:	add    eax,0x32340d00
   140020b5f:	add    BYTE PTR [rip+0x6002e01],cl        # 0x146023966
   140020b65:	jo     0x140020b67
   140020b67:	add    BYTE PTR [rax+0x600000a6],al
   140020b6d:	add    DWORD PTR [rax],eax
   140020b6f:	add    BYTE PTR [rcx],bl
   140020b71:	(bad)  
   140020b72:	add    eax,0x2b340d00
   140020b77:	add    BYTE PTR [rip+0x6002801],cl        # 0x14602337e
   140020b7d:	jo     0x140020b7f
   140020b7f:	add    BYTE PTR [rax+0x300000a6],al
   140020b85:	add    DWORD PTR [rax],eax
   140020b87:	add    BYTE PTR [rcx],bl
   140020b89:	and    ecx,DWORD PTR [rdx]
   140020b8b:	add    BYTE PTR [rcx+rax*1],dl
   140020b8e:	adc    DWORD PTR [rax],eax
   140020b90:	or     eax,0x9e00bf0
   140020b95:	rol    BYTE PTR [rdi],1
   140020b97:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x14362100e
   140020b9e:	add    dh,BYTE PTR [rax]
   140020ba0:	and    BYTE PTR [rsi+0x780000],0x0
   140020ba7:	add    BYTE PTR [rcx],bl
   140020ba9:	sbb    eax,DWORD PTR [rbx]
   140020bab:	add    BYTE PTR [rcx],cl
   140020bad:	add    DWORD PTR [rax],ebp
   140020baf:	add    BYTE PTR [rdx],al
   140020bb1:	xor    BYTE PTR [rax],al
   140020bb3:	add    BYTE PTR [rax+0x300000a6],al
   140020bb9:	add    DWORD PTR [rax],eax
   140020bbb:	add    BYTE PTR [rcx],bl
   140020bbd:	and    al,0x7
   140020bbf:	add    BYTE PTR [rdx],dl
   140020bc1:	fs sub al,0x0
   140020bc4:	adc    dh,BYTE PTR [rbx+rbp*1]
   140020bc7:	add    BYTE PTR [rdx],dl
   140020bc9:	add    DWORD PTR [rax],ebp
   140020bcb:	add    BYTE PTR [rbx],cl
   140020bcd:	jo     0x140020bcf
   140020bcf:	add    BYTE PTR [rax+0x300000a6],al
   140020bd5:	add    DWORD PTR [rax],eax
   140020bd7:	add    BYTE PTR [rcx],al
   140020bd9:	sbb    al,0xc
   140020bdb:	add    BYTE PTR [rsp+riz*2],bl
   140020bde:	or     al,0x0
   140020be0:	sbb    al,0x54
   140020be2:	or     eax,DWORD PTR [rax]
   140020be4:	sbb    al,0x34
   140020be6:	or     al,BYTE PTR [rax]
   140020be8:	sbb    al,0x32
   140020bea:	sbb    al,dh
   140020bec:	(bad)  
   140020bed:	loopne 0x140020c03
   140020bef:	rcl    BYTE PTR [rdx],1
   140020bf1:	rcl    BYTE PTR [rax],0x70
   140020bf4:	add    DWORD PTR [rcx+rax*1],eax
   140020bf7:	add    BYTE PTR [rdx+rax*2],al
   140020bfa:	add    BYTE PTR [rax],al
   140020bfc:	add    DWORD PTR [rdx+rcx*1],ebx
   140020bff:	add    BYTE PTR [rsp+rsi*2],bl
   140020c02:	adc    eax,0x14641c00
   140020c07:	add    BYTE PTR [rsp+rdx*2],bl
   140020c0a:	adc    eax,DWORD PTR [rax]
   140020c0c:	sbb    al,0x34
   140020c0e:	adc    al,BYTE PTR [rax]
   140020c10:	sbb    al,0xf2
   140020c12:	adc    eax,0xa2319c0
   140020c17:	add    BYTE PTR [rsp+rsi*1],dl
   140020c1a:	adc    eax,0x10921400
   140020c1f:	lock (bad) 
   140020c21:	loopne 0x140020c2f
   140020c23:	ror    BYTE PTR [rdx],1
   140020c25:	ror    BYTE PTR [rax],0x70
   140020c28:	(bad)  
   140020c29:	(bad)  
   140020c2a:	(bad)  
   140020c2b:	push   rax
   140020c2c:	and    BYTE PTR [rsi+0x480000],0x0
   140020c33:	add    BYTE PTR [rcx],al
   140020c35:	clts   
   140020c37:	add    BYTE PTR [rdi],cl
   140020c39:	xor    al,0xc
   140020c3b:	add    BYTE PTR [rdi],cl
   140020c3d:	jb     0x140020c47
   140020c3f:	jo     0x140020c48
   140020c41:	(bad)  
   140020c42:	(bad)  
   140020c43:	push   rax
   140020c44:	add    DWORD PTR [rip+0x741d000c],ebx        # 0x1b41f0c56
   140020c4a:	or     eax,DWORD PTR [rax]
   140020c4c:	sbb    eax,0x1d000a64
   140020c51:	push   rsp
   140020c52:	or     DWORD PTR [rax],eax
   140020c54:	sbb    eax,0x1d000834
   140020c59:	xor    bl,BYTE PTR [rcx]
   140020c5b:	loopne 0x140020c74
   140020c5d:	rcl    BYTE PTR [rip+0xa1901c0],1        # 0x14a1b0e23
   140020c63:	add    BYTE PTR [rcx],bl
   140020c65:	je     0x140020c70
   140020c67:	add    BYTE PTR [rcx],bl
   140020c69:	or     BYTE PTR fs:[rax],al
   140020c6c:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   140020c70:	sbb    DWORD PTR [rsi+rax*1],esi
   140020c73:	add    BYTE PTR [rcx],bl
   140020c75:	xor    dl,BYTE PTR [rip+0x91701c0]        # 0x149190e3b
   140020c7b:	add    BYTE PTR [rdi],dl
   140020c7d:	movabs ds:0xc00ad00ce00ef010,al
   140020c86:	or     BYTE PTR [rax+0x7],dh
   140020c89:	(bad)  
   140020c8a:	(bad)  
   140020c8b:	xor    BYTE PTR [rip+0x1000050],al        # 0x141020ce1
   140020c91:	(bad)  
   140020c92:	add    al,BYTE PTR [rax]
   140020c94:	(bad)  
   140020c95:	xor    al,BYTE PTR [rdx]
   140020c97:	xor    BYTE PTR [rcx],al
   140020c99:	adc    DWORD PTR [rcx],ecx
   140020c9b:	add    BYTE PTR [rcx],dl
   140020c9d:	(bad)  
   140020c9e:	or     eax,0x9e00bf0
   140020ca3:	rol    BYTE PTR [rdi],1
   140020ca5:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x14362111c
   140020cac:	add    dh,BYTE PTR [rax]
   140020cae:	add    BYTE PTR [rax],al
   140020cb0:	sbb    DWORD PTR [rdx],ebp
   140020cb2:	or     eax,DWORD PTR [rax]
   140020cb4:	sbb    al,0x34
   140020cb6:	sbb    al,0x0
   140020cb8:	sbb    al,0x1
   140020cba:	adc    al,0x0
   140020cbc:	adc    al,dh
   140020cbe:	(bad)  
   140020cbf:	loopne 0x140020ccd
   140020cc1:	ror    BYTE PTR [rdx],1
   140020cc3:	ror    BYTE PTR [rax],0x70
   140020cc6:	(bad)  
   140020cc7:	(bad)  
   140020cc8:	(bad)  
   140020cc9:	push   rax
   140020cca:	add    BYTE PTR [rax],al
   140020ccc:	and    BYTE PTR [rsi+0x980000],0x0
   140020cd3:	add    BYTE PTR [rcx],al
   140020cd5:	add    eax,0x74050002
   140020cda:	add    DWORD PTR [rax],eax
   140020cdc:	add    DWORD PTR [rdi],ecx
   140020cde:	(bad)  
   140020cdf:	add    BYTE PTR [rdi],cl
   140020ce1:	je     0x140020ce6
   140020ce3:	add    BYTE PTR [rdx],cl
   140020ce5:	add    al,BYTE PTR fs:[rax]
   140020ce8:	add    eax,0x1000134
   140020ced:	(bad)  
   140020cef:	add    BYTE PTR [rdi],cl
   140020cf1:	xor    al,0x6
   140020cf3:	add    BYTE PTR [rdi],cl
   140020cf5:	xor    cl,BYTE PTR [rbx]
   140020cf7:	jo     0x140020d0a
   140020cf9:	sbb    al,0xa
   140020cfb:	add    BYTE PTR [rsp+riz*2],bl
   140020cfe:	ltr    WORD PTR [rsp+rsi*1]
   140020d02:	(bad)  
   140020d03:	add    BYTE PTR [rdx+rsi*2],bl
   140020d06:	sbb    al,dh
   140020d08:	(bad)  
   140020d09:	loopne 0x140020d1f
   140020d0b:	rcl    BYTE PTR [rdx],1
   140020d0d:	rcl    BYTE PTR [rax],0x70
   140020d10:	hlt    
   140020d11:	(bad)  
   140020d12:	add    BYTE PTR [rax],al
   140020d14:	add    DWORD PTR [rax],eax
   140020d16:	add    BYTE PTR [rax],al
   140020d18:	imul   ebx,DWORD PTR [rdx-0x64870000],0x0
   140020d1f:	add    BYTE PTR [rax],ah
   140020d21:	cdq    
   140020d22:	add    DWORD PTR [rax],eax
   140020d24:	add    BYTE PTR [rax],al
   140020d26:	add    BYTE PTR [rax],al
   140020d28:	adc    DWORD PTR [rcx],ebx
   140020d2a:	add    eax,DWORD PTR [rax]
   140020d2c:	sbb    DWORD PTR [rdx+0x15],eax
   140020d2f:	jo     0x140020d45
   140020d31:	xor    BYTE PTR [rax],al
   140020d33:	add    ah,dh
   140020d35:	(bad)  
   140020d36:	add    BYTE PTR [rax],al
   140020d38:	add    DWORD PTR [rax],eax
   140020d3a:	add    BYTE PTR [rax],al
   140020d3c:	jg     0x140020cda
   140020d3e:	add    BYTE PTR [rax],al
   140020d40:	mov    ebx,0x4400009c
   140020d45:	cdq    
   140020d46:	add    DWORD PTR [rax],eax
   140020d48:	add    BYTE PTR [rax],al
   140020d4a:	add    BYTE PTR [rax],al
   140020d4c:	adc    DWORD PTR [rsi],eax
   140020d4e:	add    al,BYTE PTR [rax]
   140020d50:	(bad)  
   140020d51:	xor    al,BYTE PTR [rdx]
   140020d53:	xor    ah,dh
   140020d55:	(bad)  
   140020d56:	add    BYTE PTR [rax],al
   140020d58:	add    DWORD PTR [rax],eax
   140020d5a:	add    BYTE PTR [rax],al
   140020d5c:	loope  0x140020cfb
   140020d5e:	add    BYTE PTR [rax],al
   140020d60:	in     al,dx
   140020d61:	popf   
   140020d62:	add    BYTE PTR [rax],al
   140020d64:	push   rbx
   140020d65:	(bad)  
   140020d66:	add    DWORD PTR [rax],eax
   140020d68:	add    BYTE PTR [rax],al
   140020d6a:	add    BYTE PTR [rax],al
   140020d6c:	or     DWORD PTR [rdx],ecx
   140020d6e:	add    al,0x0
   140020d70:	or     dh,BYTE PTR [rcx+rcx*1]
   140020d73:	add    BYTE PTR [rdx],cl
   140020d75:	push   rdx
   140020d76:	(bad)  
   140020d77:	jo     0x140020d6d
   140020d79:	(bad)  
   140020d7a:	add    BYTE PTR [rax],al
   140020d7c:	add    DWORD PTR [rax],eax
   140020d7e:	add    BYTE PTR [rax],al
   140020d80:	mov    ah,0x9e
   140020d82:	add    BYTE PTR [rax],al
   140020d84:	push   rbx
   140020d85:	lahf   
   140020d86:	add    BYTE PTR [rax],al
   140020d88:	outs   dx,BYTE PTR ds:[rsi]
   140020d89:	(bad)  
   140020d8a:	add    DWORD PTR [rax],eax
   140020d8c:	push   rbx
   140020d8d:	lahf   
   140020d8e:	add    BYTE PTR [rax],al
   140020d90:	add    DWORD PTR [rax],eax
   140020d92:	add    BYTE PTR [rax],al
   140020d94:	add    DWORD PTR [rbx],edx
   140020d96:	add    DWORD PTR [rax],eax
   140020d98:	adc    esp,DWORD PTR [rdx+0x0]
   140020d9b:	add    BYTE PTR [rax],al
   140020d9d:	add    BYTE PTR [rax],al
   140020d9f:	add    BYTE PTR [rcx],al
   140020da1:	add    BYTE PTR [rax],al
   140020da3:	add    BYTE PTR [rcx],al
   140020da5:	sbb    DWORD PTR [rax+rax*1],eax
   140020da8:	sbb    DWORD PTR [rdx+0x30117012],edx
   140020dae:	adc    BYTE PTR [rax+0x1],dl
   140020db1:	add    BYTE PTR [rax],al
   140020db3:	add    BYTE PTR [rax],al
   140020db5:	add    BYTE PTR [rax],al
   140020db7:	add    BYTE PTR [rcx],al
   140020db9:	add    BYTE PTR [rax],al
   140020dbb:	add    BYTE PTR [rcx],al
   140020dbd:	add    BYTE PTR [rax],al
   140020dbf:	add    BYTE PTR [rcx],al
   140020dc1:	add    BYTE PTR [rax],al
   140020dc3:	add    BYTE PTR [rax],al
   140020dc5:	add    BYTE PTR [rax],al
   140020dc7:	add    BYTE PTR [rcx],al
   140020dc9:	add    BYTE PTR [rax],al
   140020dcb:	add    BYTE PTR [rcx],dl
   140020dcd:	sbb    al,0x5
   140020dcf:	add    BYTE PTR [rdx+rax*2],bl
   140020dd2:	sbb    al,al
   140020dd4:	(bad)  
   140020dd5:	jo     0x140020dec
   140020dd7:	(bad)  
   140020dd8:	adc    al,0x30
   140020dda:	add    BYTE PTR [rax],al
   140020ddc:	hlt    
   140020ddd:	(bad)  
   140020dde:	add    BYTE PTR [rax],al
   140020de0:	add    DWORD PTR [rax],eax
   140020de2:	add    BYTE PTR [rax],al
   140020de4:	pop    rsp
   140020de5:	test   eax,0xaa1a0000
   140020dea:	add    BYTE PTR [rax],al
   140020dec:	imul   ebx,DWORD PTR [rcx+0x1],0x0
   140020df3:	add    BYTE PTR [rcx],dl
   140020df5:	sbb    eax,0x741d000a
   140020dfa:	or     eax,DWORD PTR [rax]
   140020dfc:	sbb    eax,0x1d000a64
   140020e01:	xor    al,0x8
   140020e03:	add    BYTE PTR [rip+0x17e01932],bl        # 0x157e2273b
   140020e09:	rcl    BYTE PTR [rip+0xd6f4c0],1        # 0x140d902cf
   140020e0f:	add    BYTE PTR [rcx],al
   140020e11:	add    BYTE PTR [rax],al
   140020e13:	add    BYTE PTR [rdx+rbp*4-0x54b00000],dl
   140020e1a:	add    BYTE PTR [rax],al
   140020e1c:	(bad)  
   140020e1d:	cdq    
   140020e1e:	add    DWORD PTR [rax],eax
   140020e20:	add    BYTE PTR [rax],al
   140020e22:	add    BYTE PTR [rax],al
   140020e24:	adc    DWORD PTR [rdi],ecx
   140020e26:	add    al,0x0
   140020e28:	sysenter 
   140020e2a:	(bad)  
   140020e2b:	add    BYTE PTR [rdi],cl
   140020e2d:	xor    cl,BYTE PTR [rbx]
   140020e2f:	jo     0x140020e25
   140020e31:	(bad)  
   140020e32:	add    BYTE PTR [rax],al
   140020e34:	add    DWORD PTR [rax],eax
   140020e36:	add    BYTE PTR [rax],al
   140020e38:	outs   dx,DWORD PTR ds:[rsi]
   140020e39:	scas   al,BYTE PTR es:[rdi]
   140020e3a:	add    BYTE PTR [rax],al
   140020e3c:	jns    0x140020dec
   140020e3e:	add    BYTE PTR [rax],al
   140020e40:	cmp    DWORD PTR [rdx+0x1],ebx
   140020e46:	add    BYTE PTR [rax],al
   140020e48:	sbb    DWORD PTR [rbx],edx
   140020e4a:	add    DWORD PTR [rax],eax
   140020e4c:	add    al,0x62
   140020e4e:	add    BYTE PTR [rax],al
   140020e50:	and    BYTE PTR [rsi+0x200000],0x0
   140020e57:	add    BYTE PTR [rcx],dl
   140020e59:	or     al,0x6
   140020e5b:	add    BYTE PTR [rdx+rdx*2],cl
   140020e5e:	or     al,dl
   140020e60:	(bad)  
   140020e61:	rol    BYTE PTR [rax+rsi*2],0x3
   140020e65:	(bad)  
   140020e66:	add    dh,BYTE PTR [rax]
   140020e68:	hlt    
   140020e69:	(bad)  
   140020e6a:	add    BYTE PTR [rax],al
   140020e6c:	add    DWORD PTR [rax],eax
   140020e6e:	add    BYTE PTR [rax],al
   140020e70:	cmp    esi,DWORD PTR [rax-0x4ed80000]
   140020e76:	add    BYTE PTR [rax],al
   140020e78:	test   DWORD PTR [rcx+0x1],ebx
   140020e7e:	add    BYTE PTR [rax],al
   140020e80:	adc    DWORD PTR [rip+0x74150008],edx        # 0x1b4170e8e
   140020e86:	or     eax,DWORD PTR [rax]
   140020e88:	adc    eax,0x15000a64
   140020e8d:	xor    al,0x9
   140020e8f:	add    BYTE PTR [rip+0xfffffffff4c01152],dl        # 0x134c21fe7
   140020e95:	(bad)  
   140020e96:	add    BYTE PTR [rax],al
   140020e98:	add    al,BYTE PTR [rax]
   140020e9a:	add    BYTE PTR [rax],al
   140020e9c:	mov    ecx,0xdb0000b1
   140020ea1:	mov    cl,0x0
   140020ea3:	add    BYTE PTR [rdi+0x199],bl
   140020ea9:	add    BYTE PTR [rax],al
   140020eab:	add    al,ah
   140020ead:	mov    cl,0x0
   140020eaf:	add    ah,dh
   140020eb1:	mov    cl,0x0
   140020eb3:	add    BYTE PTR [rdi+0x199],bl
   140020eb9:	add    BYTE PTR [rax],al
   140020ebb:	add    BYTE PTR [rcx],dl
   140020ebd:	or     al,BYTE PTR [rax+rax*1]
   140020ec0:	or     dh,BYTE PTR [rsi+rax*1]
   140020ec3:	add    BYTE PTR [rdx],cl
   140020ec5:	xor    al,BYTE PTR [rsi]
   140020ec7:	jo     0x140020ebd
   140020ec9:	(bad)  
   140020eca:	add    BYTE PTR [rax],al
   140020ecc:	add    DWORD PTR [rax],eax
   140020ece:	add    BYTE PTR [rax],al
   140020ed0:	ds mov dl,0x0
   140020ed3:	add    BYTE PTR [rdi-0x46ffff4e],bh
   140020ed9:	cdq    
   140020eda:	add    DWORD PTR [rax],eax
   140020edc:	add    BYTE PTR [rax],al
   140020ede:	add    BYTE PTR [rax],al
   140020ee0:	adc    DWORD PTR [rcx],ebx
   140020ee2:	or     al,BYTE PTR [rax]
   140020ee4:	sbb    DWORD PTR [rbx+rcx*1+0x0],esi
   140020ee8:	sbb    DWORD PTR [rdx+rcx*1+0x0],esp
   140020eec:	sbb    DWORD PTR [rax+rcx*1],esi
   140020eef:	add    BYTE PTR [rcx],bl
   140020ef1:	xor    dl,BYTE PTR [rip+0x11d013e0]        # 0x151d222d7
   140020ef7:	shl    ah,0xd6
   140020efa:	add    BYTE PTR [rax],al
   140020efc:	add    DWORD PTR [rax],eax
   140020efe:	add    BYTE PTR [rax],al
   140020f00:	std    
   140020f01:	mov    ah,0x0
   140020f03:	add    BYTE PTR [rbx],ah
   140020f05:	mov    ch,0x0
   140020f07:	add    ah,dl
   140020f09:	cdq    
   140020f0a:	add    DWORD PTR [rax],eax
   140020f0c:	add    BYTE PTR [rax],al
   140020f0e:	add    BYTE PTR [rax],al
   140020f10:	add    DWORD PTR [rax],eax
   140020f12:	add    BYTE PTR [rax],al
   140020f14:	sbb    DWORD PTR [rax],esi
   140020f16:	or     eax,DWORD PTR [rax]
   140020f18:	(bad)  
   140020f19:	xor    al,0x62
   140020f1b:	add    BYTE PTR [rdi],bl
   140020f1d:	add    DWORD PTR [rax+0x0],ebx
   140020f20:	adc    al,dh
   140020f22:	(bad)  
   140020f23:	loopne 0x140020f31
   140020f25:	ror    BYTE PTR [rdx],1
   140020f27:	ror    BYTE PTR [rax],0x70
   140020f2a:	(bad)  
   140020f2b:	(bad)  
   140020f2c:	(bad)  
   140020f2d:	push   rax
   140020f2e:	add    BYTE PTR [rax],al
   140020f30:	and    BYTE PTR [rsi+0x2b00000],0x0
   140020f37:	add    BYTE PTR [rcx],al
   140020f39:	adc    al,0x8
   140020f3b:	add    BYTE PTR [rsp+riz*2],dl
   140020f3e:	(bad)  
   140020f3f:	add    BYTE PTR [rsp+rdx*2],dl
   140020f42:	or     eax,0xc341400
   140020f47:	add    BYTE PTR [rdx+rdx*4],dl
   140020f4a:	adc    BYTE PTR [rax+0x1],dh
   140020f4d:	or     al,BYTE PTR [rax+rax*1]
   140020f50:	or     dh,BYTE PTR [rax+rcx*1]
   140020f53:	add    BYTE PTR [rdx],cl
   140020f55:	push   rdx
   140020f56:	(bad)  
   140020f57:	jo     0x140020f6a
   140020f59:	sbb    DWORD PTR [rdx],ecx
   140020f5b:	add    BYTE PTR [rcx],bl
   140020f5d:	je     0x140020f6b
   140020f5f:	add    BYTE PTR [rcx],bl
   140020f61:	or     eax,DWORD PTR fs:[rax]
   140020f64:	sbb    DWORD PTR [rdx+rcx*1],esi
   140020f67:	add    BYTE PTR [rcx],bl
   140020f69:	push   rdx
   140020f6a:	adc    eax,0x11d013f0
   140020f6f:	shl    ah,0xd6
   140020f72:	add    BYTE PTR [rax],al
   140020f74:	add    al,BYTE PTR [rax]
   140020f76:	add    BYTE PTR [rax],al
   140020f78:	jb     0x140020f39
   140020f7a:	add    BYTE PTR [rax],al
   140020f7c:	mov    dh,0xbf
   140020f7e:	add    BYTE PTR [rax],al
   140020f80:	out    dx,al
   140020f81:	cdq    
   140020f82:	add    DWORD PTR [rax],eax
   140020f84:	add    BYTE PTR [rax],al
   140020f86:	add    BYTE PTR [rax],al
   140020f88:	cmp    DWORD PTR [rdi-0x40310000],edi
   140020f8e:	add    BYTE PTR [rax],al
   140020f90:	(bad)  
   140020f91:	(bad)  
   140020f92:	add    DWORD PTR [rax],eax
   140020f94:	add    BYTE PTR [rax],al
   140020f96:	add    BYTE PTR [rax],al
   140020f98:	adc    DWORD PTR [rdi],ecx
   140020f9a:	add    al,0x0
   140020f9c:	sysenter 
   140020f9e:	(bad)  
   140020f9f:	add    BYTE PTR [rdi],cl
   140020fa1:	xor    cl,BYTE PTR [rbx]
   140020fa3:	jo     0x140020f99
   140020fa5:	(bad)  
   140020fa6:	add    BYTE PTR [rax],al
   140020fa8:	add    DWORD PTR [rax],eax
   140020faa:	add    BYTE PTR [rax],al
   140020fac:	and    al,al
   140020fae:	add    BYTE PTR [rax],al
   140020fb0:	sub    al,al
   140020fb2:	add    BYTE PTR [rax],al
   140020fb4:	cmp    DWORD PTR [rdx+0x1],ebx
   140020fba:	add    BYTE PTR [rax],al
   140020fbc:	add    DWORD PTR [rbx],edx
   140020fbe:	or     BYTE PTR [rax],al
   140020fc0:	adc    esi,DWORD PTR [rsp+rcx*1]
   140020fc3:	add    BYTE PTR [rbx],dl
   140020fc5:	push   rdx
   140020fc6:	or     al,0xe0
   140020fc8:	or     al,al
   140020fca:	or     BYTE PTR [rax+0x7],dh
   140020fcd:	(bad)  
   140020fce:	(bad)  
   140020fcf:	push   rax
   140020fd0:	adc    DWORD PTR [rsi],eax
   140020fd2:	add    al,BYTE PTR [rax]
   140020fd4:	(bad)  
   140020fd5:	xor    al,BYTE PTR [rdx]
   140020fd7:	xor    ah,dh
   140020fd9:	(bad)  
   140020fda:	add    BYTE PTR [rax],al
   140020fdc:	add    DWORD PTR [rax],eax
   140020fde:	add    BYTE PTR [rax],al
   140020fe0:	cld    
   140020fe1:	ret    0x0
   140020fe4:	or     bl,al
   140020fe6:	add    BYTE PTR [rax],al
   140020fe8:	push   rbx
   140020fe9:	(bad)  
   140020fea:	add    DWORD PTR [rax],eax
   140020fec:	add    BYTE PTR [rax],al
   140020fee:	add    BYTE PTR [rax],al
   140020ff0:	or     DWORD PTR [rcx+rax*1],eax
   140020ff3:	add    BYTE PTR [rdx+rax*2],al
   140020ff6:	add    BYTE PTR [rax],al
   140020ff8:	hlt    
   140020ff9:	(bad)  
   140020ffa:	add    BYTE PTR [rax],al
   140020ffc:	add    DWORD PTR [rax],eax
   140020ffe:	add    BYTE PTR [rax],al
   140021000:	faddp  st(3),st
   140021002:	add    BYTE PTR [rax],al
   140021004:	repz ret 
   140021006:	add    BYTE PTR [rax],al
   140021008:	outs   dx,BYTE PTR ds:[rsi]
   140021009:	(bad)  
   14002100a:	add    DWORD PTR [rax],eax
   14002100c:	repz ret 
   14002100e:	add    BYTE PTR [rax],al
   140021010:	add    DWORD PTR [rax],ebx
   140021012:	or     al,BYTE PTR [rax]
   140021014:	sbb    BYTE PTR [rbp+rcx*1+0x0],ah
   140021018:	sbb    BYTE PTR [rbx+rcx*1+0x0],dl
   14002101c:	sbb    BYTE PTR [rdx+rcx*1],dh
   14002101f:	add    BYTE PTR [rax],bl
   140021021:	push   rdx
   140021022:	adc    al,0xd0
   140021024:	adc    al,al
   140021026:	adc    BYTE PTR [rax+0x1],dh
   140021029:	add    BYTE PTR [rax],al
   14002102b:	add    BYTE PTR [rcx],al
   14002102d:	(bad)  
   14002102e:	add    al,BYTE PTR [rax]
   140021030:	(bad)  
   140021031:	jb     0x140021035
   140021033:	xor    BYTE PTR [rcx],al
   140021035:	adc    eax,0x74150008
   14002103a:	or     BYTE PTR [rax],al
   14002103c:	adc    eax,0x15000764
   140021041:	xor    al,0x6
   140021043:	add    BYTE PTR [rip+0x11c01132],dl        # 0x151c2217b
   140021049:	adc    eax,0x74150008
   14002104e:	or     BYTE PTR [rax],al
   140021050:	adc    eax,0x15000764
   140021055:	xor    al,0x6
   140021057:	add    BYTE PTR [rip+0xfffffffff4d01132],dl        # 0x134d2218f
   14002105d:	(bad)  
   14002105e:	add    BYTE PTR [rax],al
   140021060:	add    DWORD PTR [rax],eax
   140021062:	add    BYTE PTR [rax],al
   140021064:	ret    
   140021065:	retf   0x0
   140021068:	add    ebx,ecx
   14002106a:	add    BYTE PTR [rax],al
   14002106c:	mov    WORD PTR [rdx+0x1],ds
   140021072:	add    BYTE PTR [rax],al
   140021074:	or     DWORD PTR [rcx+rax*1],eax
   140021077:	add    BYTE PTR [rdx+rax*2],al
   14002107a:	add    BYTE PTR [rax],al
   14002107c:	hlt    
   14002107d:	(bad)  
   14002107e:	add    BYTE PTR [rax],al
   140021080:	add    DWORD PTR [rax],eax
   140021082:	add    BYTE PTR [rax],al
   140021084:	or     ebx,0xcb850000
   14002108a:	add    BYTE PTR [rax],al
   14002108c:	add    DWORD PTR [rax],eax
   14002108e:	add    BYTE PTR [rax],al
   140021090:	test   ebx,ecx
   140021092:	add    BYTE PTR [rax],al
   140021094:	add    DWORD PTR [rsi],eax
   140021096:	add    al,BYTE PTR [rax]
   140021098:	(bad)  
   140021099:	xor    al,BYTE PTR [rdx]
   14002109b:	push   rax
   14002109c:	adc    DWORD PTR [rdi],edx
   14002109e:	or     al,BYTE PTR [rax]
   1400210a0:	(bad)  
   1400210a1:	fs (bad) 
   1400210a3:	add    BYTE PTR [rdi],dl
   1400210a5:	xor    al,0xd
   1400210a7:	add    BYTE PTR [rdi],dl
   1400210a9:	push   rdx
   1400210aa:	adc    esi,eax
   1400210ac:	adc    eax,esp
   1400210ae:	(bad)  
   1400210b0:	or     eax,0xf4700bc0
   1400210b5:	(bad)  
   1400210b6:	add    BYTE PTR [rax],al
   1400210b8:	add    DWORD PTR [rax],eax
   1400210ba:	add    BYTE PTR [rax],al
   1400210bc:	sbb    ebp,ecx
   1400210be:	add    BYTE PTR [rax],al
   1400210c0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400210c1:	int    0x0
   1400210c3:	add    BYTE PTR [rdx+0x19a],ch
   1400210c9:	add    BYTE PTR [rax],al
   1400210cb:	add    BYTE PTR [rcx],bl
   1400210cd:	or     DWORD PTR cs:[rax],eax
   1400210d0:	sbb    eax,0x1d00c464
   1400210d5:	xor    al,0xc3
   1400210d7:	add    BYTE PTR [rip+0xe00be01],bl        # 0x14e02cede
   1400210dd:	ror    BYTE PTR [rax+rsi*2],0xb
   1400210e1:	push   rax
   1400210e2:	add    BYTE PTR [rax],al
   1400210e4:	and    BYTE PTR [rsi+0x5e00000],0x0
   1400210eb:	add    BYTE PTR [rcx],al
   1400210ed:	add    al,0x1
   1400210ef:	add    BYTE PTR [rdx+riz*2],al
   1400210f2:	add    BYTE PTR [rax],al
   1400210f4:	adc    DWORD PTR [rdx],ecx
   1400210f6:	add    al,0x0
   1400210f8:	or     dh,BYTE PTR [rsi+rax*1]
   1400210fb:	add    BYTE PTR [rdx],cl
   1400210fd:	xor    al,BYTE PTR [rsi]
   1400210ff:	jo     0x1400210f5
   140021101:	(bad)  
   140021102:	add    BYTE PTR [rax],al
   140021104:	add    al,BYTE PTR [rax]
   140021106:	add    BYTE PTR [rax],al
   140021108:	and    dl,cl
   14002110a:	add    BYTE PTR [rax],al
   14002110c:	sub    al,0xd1
   14002110e:	add    BYTE PTR [rax],al
   140021110:	enter  0x19a,0x0
   140021114:	add    BYTE PTR [rax],al
   140021116:	add    BYTE PTR [rax],al
   140021118:	rol    DWORD PTR [r8],1
   14002111b:	add    BYTE PTR [rax-0x2f],ch
   14002111e:	add    BYTE PTR [rax],al
   140021120:	call   0x1400212bf
   140021125:	add    BYTE PTR [rax],al
   140021127:	add    BYTE PTR [rcx],dl
   140021129:	adc    eax,DWORD PTR [rax+rax*1]
   14002112c:	adc    esi,DWORD PTR [rdi+rax*1]
   14002112f:	add    BYTE PTR [rbx],dl
   140021131:	xor    cl,BYTE PTR [rdi]
   140021133:	jo     0x140021129
   140021135:	(bad)  
   140021136:	add    BYTE PTR [rax],al
   140021138:	add    al,BYTE PTR [rax]
   14002113a:	add    BYTE PTR [rax],al
   14002113c:	enter  0xd2,0x0
   140021140:	cmc    
   140021141:	rol    BYTE PTR [rax],cl
   140021143:	add    al,cl
   140021145:	(bad)  
   140021146:	add    DWORD PTR [rax],eax
   140021148:	add    BYTE PTR [rax],al
   14002114a:	add    BYTE PTR [rax],al
   14002114c:	(bad)  
   14002114d:	rol    DWORD PTR [rax],cl
   14002114f:	add    BYTE PTR [rsi],bh
   140021151:	rol    DWORD PTR [rax],cl
   140021153:	add    al,ch
   140021155:	(bad)  
   140021156:	add    DWORD PTR [rax],eax
   140021158:	add    BYTE PTR [rax],al
   14002115a:	add    BYTE PTR [rax],al
   14002115c:	adc    DWORD PTR [rcx],ebx
   14002115e:	or     al,BYTE PTR [rax]
   140021160:	sbb    DWORD PTR [rdx+rcx*1+0x0],esi
   140021164:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   140021168:	sbb    DWORD PTR [rax+rcx*1],esi
   14002116b:	add    BYTE PTR [rcx],bl
   14002116d:	xor    dl,BYTE PTR [rip+0x11d013e0]        # 0x151d22553
   140021173:	shl    ah,0xd6
   140021176:	add    BYTE PTR [rax],al
   140021178:	add    DWORD PTR [rax],eax
   14002117a:	add    BYTE PTR [rax],al
   14002117c:	xchg   ah,dl
   14002117e:	add    BYTE PTR [rax],al
   140021180:	rex.WR (bad) 
   140021182:	add    BYTE PTR [rax],al
   140021184:	add    ebx,DWORD PTR [rbx+0x1]
   14002118a:	add    BYTE PTR [rax],al
   14002118c:	add    DWORD PTR [rdx],ecx
   14002118e:	add    al,0x0
   140021190:	or     dh,BYTE PTR [rsi+rax*1]
   140021193:	add    BYTE PTR [rdx],cl
   140021195:	xor    al,BYTE PTR [rsi]
   140021197:	jo     0x1400211a2
   140021199:	add    al,0x1
   14002119b:	add    BYTE PTR [rdx+rax*2],al
   14002119e:	add    BYTE PTR [rax],al
   1400211a0:	hlt    
   1400211a1:	(bad)  
   1400211a2:	add    BYTE PTR [rax],al
   1400211a4:	add    DWORD PTR [rax],eax
   1400211a6:	add    BYTE PTR [rax],al
   1400211a8:	mov    bh,0xd6
   1400211aa:	add    BYTE PTR [rax],al
   1400211ac:	(bad)  
   1400211ad:	(bad)  
   1400211ae:	add    BYTE PTR [rax],al
   1400211b0:	and    BYTE PTR [rbx-0x2915ffff],bl
   1400211b6:	add    BYTE PTR [rax],al
   1400211b8:	add    DWORD PTR [rax],esp
   1400211ba:	or     al,0x0
   1400211bc:	and    BYTE PTR [rcx+rdx*1+0x0],ah
   1400211c0:	and    BYTE PTR [rax+rdx*1+0x0],dl
   1400211c4:	and    BYTE PTR [rsi+rcx*1],dh
   1400211c7:	add    BYTE PTR [rax],ah
   1400211c9:	jb     0x1400211e7
   1400211cb:	lock sbb ah,al
   1400211ce:	sbb    al,dl
   1400211d0:	(bad)  
   1400211d1:	rcl    BYTE PTR [rax+rsi*2],0x19
   1400211d5:	sub    eax,0x641b000b
   1400211da:	push   rcx
   1400211db:	add    BYTE PTR [rbx],bl
   1400211dd:	push   rsp
   1400211de:	push   rax
   1400211df:	add    BYTE PTR [rbx],bl
   1400211e1:	xor    al,0x4f
   1400211e3:	add    BYTE PTR [rbx],bl
   1400211e5:	add    DWORD PTR [rdx+0x0],ecx
   1400211e8:	adc    al,0xd0
   1400211ea:	adc    al,al
   1400211ec:	adc    BYTE PTR [rax+0x0],dh
   1400211ef:	add    BYTE PTR [rax+0x400000a6],al
   1400211f5:	add    al,BYTE PTR [rax]
   1400211f7:	add    BYTE PTR [rcx],al
   1400211f9:	adc    BYTE PTR [rsi],al
   1400211fb:	add    BYTE PTR [rax],dl
   1400211fd:	je     0x140021206
   1400211ff:	add    BYTE PTR [rax],dl
   140021201:	xor    al,0x6
   140021203:	add    BYTE PTR [rax],dl
   140021205:	xor    cl,BYTE PTR [rax+rax*8]
   140021208:	add    DWORD PTR [rcx],ecx
   14002120a:	add    al,BYTE PTR [rax]
   14002120c:	or     DWORD PTR [rdx],esi
   14002120e:	add    eax,0x8180130
   140021213:	add    BYTE PTR [rax],bl
   140021215:	or     BYTE PTR fs:[rax],al
   140021218:	sbb    BYTE PTR [rdi+rax*1+0x0],dl
   14002121c:	sbb    BYTE PTR [rsi+rax*1],dh
   14002121f:	add    BYTE PTR [rax],bl
   140021221:	xor    dl,BYTE PTR [rax+rsi*2]
   140021224:	sbb    DWORD PTR [rax],esi
   140021226:	or     eax,DWORD PTR [rax]
   140021228:	(bad)  
   140021229:	xor    al,0x64
   14002122b:	add    BYTE PTR [rdi],bl
   14002122d:	add    DWORD PTR [rdx+0x0],ebx
   140021230:	adc    al,dh
   140021232:	(bad)  
   140021233:	loopne 0x140021241
   140021235:	ror    BYTE PTR [rdx],1
   140021237:	ror    BYTE PTR [rax],0x70
   14002123a:	(bad)  
   14002123b:	(bad)  
   14002123c:	(bad)  
   14002123d:	push   rax
   14002123e:	add    BYTE PTR [rax],al
   140021240:	and    BYTE PTR [rsi+0x2c80000],0x0
   140021247:	add    BYTE PTR [rcx],al
   140021249:	sbb    ecx,DWORD PTR [rdx]
   14002124b:	add    BYTE PTR [rbx],bl
   14002124d:	(bad)  
   14002124e:	adc    DWORD PTR [rax],eax
   140021250:	sbb    esi,DWORD PTR [rax+rdx*1+0x0]
   140021254:	sbb    esp,DWORD PTR [rdi+rcx*1+0x0]
   140021258:	sbb    esi,DWORD PTR [rsi+rcx*1]
   14002125b:	add    BYTE PTR [rbx],bl
   14002125d:	mov    dl,0x14
   14002125f:	push   rax
   140021260:	add    DWORD PTR [rdi],ecx
   140021262:	(bad)  
   140021263:	add    BYTE PTR [rdi],cl
   140021265:	push   rsp
   140021266:	or     al,0x0
   140021268:	sysenter 
   14002126a:	or     eax,DWORD PTR [rax]
   14002126c:	(bad)  
   14002126e:	or     esi,DWORD PTR [rax+0x1]
   140021271:	adc    al,0x8
   140021273:	add    BYTE PTR [rsp+riz*2],dl
   140021276:	or     al,BYTE PTR [rax]
   140021278:	adc    al,0x54
   14002127a:	or     DWORD PTR [rax],eax
   14002127c:	adc    al,0x34
   14002127e:	or     BYTE PTR [rax],al
   140021280:	adc    al,0x52
   140021282:	adc    BYTE PTR [rax+0x1],dh
   140021285:	clts   
   140021287:	add    BYTE PTR [rdi],cl
   140021289:	or     eax,DWORD PTR fs:[rax]
   14002128c:	sysenter 
   14002128e:	or     al,BYTE PTR [rax]
   140021290:	rsqrtps xmm1,XMMWORD PTR [rbx]
   140021293:	jo     0x140021296
   140021295:	sbb    DWORD PTR [rdx],ecx
   140021297:	add    BYTE PTR [rcx],bl
   140021299:	je     0x1400212a8
   14002129b:	add    BYTE PTR [rcx],bl
   14002129d:	fs or  al,0x0
   1400212a0:	sbb    DWORD PTR [rbx+rcx*1+0x0],edx
   1400212a4:	sbb    DWORD PTR [rdx+rcx*1],esi
   1400212a7:	add    BYTE PTR [rcx],bl
   1400212a9:	jb     0x1400212c0
   1400212ab:	rol    BYTE PTR [rcx],0x1c
   1400212ae:	or     eax,DWORD PTR [rax]
   1400212b0:	sbb    al,0x74
   1400212b2:	sbb    BYTE PTR [rax],al
   1400212b4:	sbb    al,0x54
   1400212b6:	(bad)  
   1400212b7:	add    BYTE PTR [rsp+rsi*1],bl
   1400212ba:	(bad)  
   1400212bb:	add    BYTE PTR [rcx+rax*1],bl
   1400212be:	adc    al,BYTE PTR [rax]
   1400212c0:	adc    eax,0x11d013e0
   1400212c5:	rol    BYTE PTR [rax],0x0
   1400212c8:	add    DWORD PTR [rdx],ecx
   1400212ca:	add    al,0x0
   1400212cc:	or     dh,BYTE PTR [rax+rcx*1]
   1400212cf:	add    BYTE PTR [rdx],cl
   1400212d1:	xor    al,BYTE PTR [rsi]
   1400212d3:	jo     0x1400212ee
   1400212d5:	xor    BYTE PTR [rbx],cl
   1400212d7:	add    BYTE PTR [rdi],bl
   1400212d9:	xor    al,0x5a
   1400212db:	add    BYTE PTR [rdi],bl
   1400212dd:	add    DWORD PTR [rax+0x0],edx
   1400212e0:	adc    al,dh
   1400212e2:	(bad)  
   1400212e3:	loopne 0x1400212f1
   1400212e5:	ror    BYTE PTR [rdx],1
   1400212e7:	ror    BYTE PTR [rax],0x70
   1400212ea:	(bad)  
   1400212eb:	(bad)  
   1400212ec:	(bad)  
   1400212ed:	push   rax
   1400212ee:	add    BYTE PTR [rax],al
   1400212f0:	and    BYTE PTR [rsi+0x2700000],0x0
   1400212f7:	add    BYTE PTR [rcx],al
   1400212f9:	(bad)  
   1400212fa:	or     BYTE PTR [rax],al
   1400212fc:	(bad)  
   1400212fd:	or     DWORD PTR fs:[rax],eax
   140021300:	(bad)  
   140021301:	push   rsp
   140021302:	or     BYTE PTR [rax],al
   140021304:	(bad)  
   140021305:	xor    al,0x7
   140021307:	add    BYTE PTR [rdi],dl
   140021309:	xor    dl,BYTE PTR [rbx]
   14002130b:	jo     0x14002130e
   14002130d:	or     al,0x2
   14002130f:	add    BYTE PTR [rcx+rax*1],cl
   140021312:	adc    DWORD PTR [rax],eax
   140021314:	add    DWORD PTR [rax],ebx
   140021316:	or     al,BYTE PTR [rax]
   140021318:	sbb    BYTE PTR [rdx+rcx*1+0x0],ah
   14002131c:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   140021320:	sbb    BYTE PTR [rax+rcx*1],dh
   140021323:	add    BYTE PTR [rax],bl
   140021325:	xor    dl,BYTE PTR [rax+rdx*8]
   140021328:	adc    al,al
   14002132a:	adc    BYTE PTR [rax+0x11],dh
   14002132d:	clts   
   14002132f:	add    BYTE PTR [rdi],cl
   140021331:	or     DWORD PTR fs:[rax],eax
   140021334:	sysenter 
   140021336:	or     BYTE PTR [rax],al
   140021338:	rsqrtps xmm1,XMMWORD PTR [rbx]
   14002133b:	jo     0x140021331
   14002133d:	(bad)  
   14002133e:	add    BYTE PTR [rax],al
   140021340:	add    DWORD PTR [rax],eax
   140021342:	add    BYTE PTR [rax],al
   140021344:	ror    BYTE PTR [rcx+rax*1],cl
   140021347:	add    BYTE PTR [rsi+0xd],al
   14002134a:	add    DWORD PTR [rax],eax
   14002134c:	rex.X
   14002134d:	fwait
   14002134e:	add    DWORD PTR [rax],eax
   140021350:	add    BYTE PTR [rax],al
   140021352:	add    BYTE PTR [rax],al
   140021354:	adc    DWORD PTR [rcx],edx
   140021356:	(bad)  
   140021357:	add    BYTE PTR [rcx],dl
   140021359:	xor    al,0xa
   14002135b:	add    BYTE PTR [rcx],dl
   14002135d:	xor    cl,BYTE PTR [rip+0xa700bc0]        # 0x14a721f23
   140021363:	(bad)  
   140021364:	hlt    
   140021365:	(bad)  
   140021366:	add    BYTE PTR [rax],al
   140021368:	add    DWORD PTR [rax],eax
   14002136a:	add    BYTE PTR [rax],al
   14002136c:	mov    ecx,DWORD PTR [rsi]
   14002136e:	add    DWORD PTR [rax],eax
   140021370:	scas   eax,DWORD PTR es:[rdi]
   140021371:	(bad)  
   140021372:	add    DWORD PTR [rax],eax
   140021374:	pop    rbp
   140021375:	fwait
   140021376:	add    DWORD PTR [rax],eax
   140021378:	add    BYTE PTR [rax],al
   14002137a:	add    BYTE PTR [rax],al
   14002137c:	add    DWORD PTR [rsi],edx
   14002137e:	or     al,BYTE PTR [rax]
   140021380:	(bad)  
   140021381:	push   rsp
   140021382:	(bad)  
   140021383:	add    BYTE PTR [rsi],dl
   140021385:	xor    al,0xc
   140021387:	add    BYTE PTR [rsi],dl
   140021389:	push   rdx
   14002138a:	adc    dh,al
   14002138c:	adc    al,dl
   14002138e:	(bad)  
   14002138f:	ror    BYTE PTR [rax+rsi*2],0xb
   140021393:	(bad)  
   140021394:	adc    DWORD PTR [rdi],ecx
   140021396:	(bad)  
   140021397:	add    BYTE PTR [rdi],cl
   140021399:	or     DWORD PTR fs:[rax],eax
   14002139c:	sysenter 
   14002139e:	or     BYTE PTR [rax],al
   1400213a0:	rsqrtps xmm1,XMMWORD PTR [rbx]
   1400213a3:	jo     0x140021399
   1400213a5:	(bad)  
   1400213a6:	add    BYTE PTR [rax],al
   1400213a8:	add    DWORD PTR [rax],eax
   1400213aa:	add    BYTE PTR [rax],al
   1400213ac:	rex.X adc eax,DWORD PTR [rcx]
   1400213af:	add    BYTE PTR [rdx+0x14],ah
   1400213b2:	add    DWORD PTR [rax],eax
   1400213b4:	rex.X
   1400213b5:	fwait
   1400213b6:	add    DWORD PTR [rax],eax
	...
   1400213c0:	add    DWORD PTR [rdi],eax
   1400213c2:	add    al,BYTE PTR [rax]
   1400213c4:	(bad)  
   1400213c5:	add    DWORD PTR [rbx+0x100],ebx
   1400213cb:	add    BYTE PTR [rcx],al
   1400213cd:	add    BYTE PTR [rax],al
   1400213cf:	add    BYTE PTR [rcx],al
   1400213d1:	add    BYTE PTR [rax],al
   1400213d3:	add    BYTE PTR [rcx],al
   1400213d5:	clts   
   1400213d7:	add    BYTE PTR [rdi],cl
   1400213d9:	push   rsp
   1400213da:	(bad)  
   1400213db:	add    BYTE PTR [rdi],cl
   1400213dd:	xor    al,0x6
   1400213df:	add    BYTE PTR [rdi],cl
   1400213e1:	xor    cl,BYTE PTR [rbx]
   1400213e3:	jo     0x1400213f6
   1400213e5:	sbb    DWORD PTR [rdx],ecx
   1400213e7:	add    BYTE PTR [rcx],bl
   1400213e9:	(bad)  
   1400213ea:	or     DWORD PTR [rax],eax
   1400213ec:	sbb    DWORD PTR [rax+rcx*1+0x0],esi
   1400213f0:	sbb    DWORD PTR [rdi+rax*1+0x0],esp
   1400213f4:	sbb    DWORD PTR [rsi+rax*1],esi
   1400213f7:	add    BYTE PTR [rcx],bl
   1400213f9:	xor    dl,BYTE PTR [rip+0xd6f4e0]        # 0x140d908df
   1400213ff:	add    BYTE PTR [rcx],al
   140021401:	add    BYTE PTR [rax],al
   140021403:	add    BYTE PTR [rsi],bl
   140021405:	(bad)  
   140021406:	add    DWORD PTR [rax],eax
   140021408:	(bad)  
   140021409:	(bad)  
   14002140a:	add    DWORD PTR [rax],eax
   14002140c:	jbe    0x1400213a9
   14002140e:	add    DWORD PTR [rax],eax
   140021410:	add    BYTE PTR [rax],al
   140021412:	add    BYTE PTR [rax],al
   140021414:	adc    DWORD PTR [rcx],ebx
   140021416:	or     al,BYTE PTR [rax]
   140021418:	sbb    DWORD PTR [rsi+rcx*1+0x0],esi
   14002141c:	sbb    DWORD PTR [rbp+rcx*1+0x0],esp
   140021420:	sbb    DWORD PTR [rsp+rcx*1],esi
   140021423:	add    BYTE PTR [rcx],bl
   140021425:	jb     0x14002143c
   140021427:	loopne 0x14002143c
   140021429:	rcl    BYTE PTR [rcx],1
   14002142b:	shl    ah,0xd6
   14002142e:	add    BYTE PTR [rax],al
   140021430:	add    al,BYTE PTR [rax]
   140021432:	add    BYTE PTR [rax],al
   140021434:	cmp    eax,0x64000118
   140021439:	sbb    BYTE PTR [rcx],al
   14002143b:	add    BYTE PTR [rcx+0x19b],dl
   140021441:	add    BYTE PTR [rax],al
   140021443:	add    ah,ah
   140021445:	(bad)  
   140021446:	add    DWORD PTR [rax],eax
   140021448:	test   DWORD PTR [rcx],ebx
   14002144a:	add    DWORD PTR [rax],eax
   14002144c:	mov    cl,0x9b
   14002144e:	add    DWORD PTR [rax],eax
   140021450:	add    BYTE PTR [rax],al
   140021452:	add    BYTE PTR [rax],al
   140021454:	sbb    DWORD PTR [rsi],esi
   140021456:	or     eax,DWORD PTR [rax]
   140021458:	and    eax,0x25037134
   14002145d:	add    DWORD PTR [rsi+0x3],esp
   140021460:	adc    al,dh
   140021462:	(bad)  
   140021463:	loopne 0x140021471
   140021465:	ror    BYTE PTR [rdx],1
   140021467:	ror    BYTE PTR [rax],0x70
   14002146a:	(bad)  
   14002146b:	(bad)  
   14002146c:	(bad)  
   14002146d:	push   rax
   14002146e:	add    BYTE PTR [rax],al
   140021470:	and    BYTE PTR [rsi+0x1b200000],0x0
   140021477:	add    BYTE PTR [rcx],dl
   140021479:	adc    eax,0x34150008
   14002147e:	or     eax,DWORD PTR [rax]
   140021480:	adc    eax,0xfe01132
   140021485:	ror    BYTE PTR [rip+0xa700bc0],1        # 0x14a72204b
   14002148b:	(bad)  
   14002148c:	hlt    
   14002148d:	(bad)  
   14002148e:	add    BYTE PTR [rax],al
   140021490:	add    DWORD PTR [rax],eax
   140021492:	add    BYTE PTR [rax],al
   140021494:	and    DWORD PTR [rcx],0x21b30001
   14002149a:	add    DWORD PTR [rax],eax
   14002149c:	mov    dl,0x9c
   14002149e:	add    DWORD PTR [rax],eax
   1400214a0:	add    BYTE PTR [rax],al
   1400214a2:	add    BYTE PTR [rax],al
   1400214a4:	add    DWORD PTR [rax+rcx*1],edx
   1400214a7:	add    BYTE PTR [rsp+riz*2],dl
   1400214aa:	or     DWORD PTR [rax],eax
   1400214ac:	adc    al,0x54
   1400214ae:	or     BYTE PTR [rax],al
   1400214b0:	adc    al,0x34
   1400214b2:	(bad)  
   1400214b3:	add    BYTE PTR [rdx+rsi*1],dl
   1400214b6:	adc    BYTE PTR [rax+0x1],dh
   1400214b9:	(bad)  
   1400214ba:	add    al,BYTE PTR [rax]
   1400214bc:	(bad)  
   1400214bd:	jb     0x1400214c1
   1400214bf:	push   rax
   1400214c0:	sbb    DWORD PTR [rbx+rcx*1],ebp
   1400214c3:	add    BYTE PTR [rdx],bl
   1400214c5:	fs sbb eax,0x1c341a00
   1400214cb:	add    BYTE PTR [rdx],bl
   1400214cd:	add    DWORD PTR [rax+rax*1],edx
   1400214d0:	adc    esi,eax
   1400214d2:	adc    eax,esp
   1400214d4:	(bad)  
   1400214d6:	or     eax,0x700bc0
   1400214db:	add    BYTE PTR [rax+0x1000173],ah
   1400214e1:	add    BYTE PTR [rax],al
   1400214e3:	add    bl,dl
   1400214e5:	and    al,0x1
   1400214e7:	add    BYTE PTR [rax+0x27],ah
   1400214ea:	add    DWORD PTR [rax],eax
   1400214ec:	int3   
   1400214ed:	fwait
   1400214ee:	add    DWORD PTR [rax],eax
   1400214f0:	add    BYTE PTR [rax],al
   1400214f2:	add    BYTE PTR [rax],al
   1400214f4:	(bad)  
   1400214f5:	add    BYTE PTR [rax],al
   1400214f7:	add    BYTE PTR [rcx],al
   1400214f9:	and    al,0xa
   1400214fb:	add    BYTE PTR [rsp+rsi*1],ah
   1400214fe:	sbb    DWORD PTR [rax],eax
   140021500:	and    al,0xf2
   140021502:	sbb    dh,al
   140021504:	sbb    al,ah
   140021506:	(bad)  
   140021507:	rcl    BYTE PTR [rax+rax*8],1
   14002150a:	adc    dh,BYTE PTR [rax+0x11]
   14002150d:	(bad)  
   14002150e:	adc    BYTE PTR [rax+0x1],dl
   140021511:	(bad)  
   140021512:	add    al,BYTE PTR [rax]
   140021514:	(bad)  
   140021515:	push   rdx
   140021516:	add    dl,BYTE PTR [rax+0x11]
   140021519:	adc    al,0x3
   14002151b:	add    BYTE PTR [rdx+rax*4],dl
   14002151e:	adc    BYTE PTR [rax+0xf],dh
   140021521:	xor    BYTE PTR [rax],al
   140021523:	add    ah,dh
   140021525:	(bad)  
   140021526:	add    BYTE PTR [rax],al
   140021528:	add    DWORD PTR [rax],eax
   14002152a:	add    BYTE PTR [rax],al
   14002152c:	lods   al,BYTE PTR ds:[rsi]
   14002152d:	(bad)  
   14002152e:	add    DWORD PTR [rax],eax
   140021530:	(bad)  
   140021531:	(bad)  
   140021532:	add    DWORD PTR [rax],eax
   140021534:	in     eax,0x9b
   140021536:	add    DWORD PTR [rax],eax
   140021538:	add    BYTE PTR [rax],al
   14002153a:	add    BYTE PTR [rax],al
   14002153c:	adc    DWORD PTR [rdx],ecx
   14002153e:	add    al,0x0
   140021540:	or     dh,BYTE PTR [rdx+rcx*1]
   140021543:	add    BYTE PTR [rdx],cl
   140021545:	jb     0x14002154d
   140021547:	jo     0x14002153d
   140021549:	(bad)  
   14002154a:	add    BYTE PTR [rax],al
   14002154c:	add    DWORD PTR [rax],eax
   14002154e:	add    BYTE PTR [rax],al
   140021550:	xchg   ebp,eax
   140021551:	xor    BYTE PTR [rcx],al
   140021553:	add    BYTE PTR [rax+0x33000130],bh
   140021559:	pushf  
   14002155a:	add    DWORD PTR [rax],eax
   14002155c:	add    BYTE PTR [rax],al
   14002155e:	add    BYTE PTR [rax],al
   140021560:	sbb    DWORD PTR [rdx],esp
   140021562:	or     DWORD PTR [rax],eax
   140021564:	adc    al,0xe2
   140021566:	or     eax,0x9e00bf0
   14002156b:	rol    BYTE PTR [rdi],1
   14002156d:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x1436219e4
   140021574:	add    dl,BYTE PTR [rax+0x0]
   140021577:	add    BYTE PTR [rax+0x680000a6],al
   14002157d:	add    BYTE PTR [rax],al
   14002157f:	add    BYTE PTR [rcx],bl
   140021581:	sub    DWORD PTR [rcx],ecx
   140021583:	add    BYTE PTR [rdi],dl
   140021585:	rex.WR add BYTE PTR fs:[rdi],r10b
   140021589:	push   rsp
   14002158a:	rex.WXB add BYTE PTR [r15],dl
   14002158d:	xor    al,0x4a
   14002158f:	add    BYTE PTR [rdi],dl
   140021591:	add    DWORD PTR [rax+0x0],ecx
   140021594:	adc    BYTE PTR [rax+0x0],dh
   140021597:	add    BYTE PTR [rax+0x300000a6],al
   14002159d:	add    al,BYTE PTR [rax]
   14002159f:	add    BYTE PTR [rcx],al
   1400215a1:	or     eax,0x340d0004
   1400215a6:	adc    DWORD PTR [rax],eax
   1400215a8:	or     eax,0x115006d2
   1400215ad:	adc    DWORD PTR [rsi],eax
   1400215af:	add    BYTE PTR [rcx],dl
   1400215b1:	xor    al,0xa
   1400215b3:	add    BYTE PTR [rcx],dl
   1400215b5:	xor    cl,BYTE PTR [rip+0xa700bc0]        # 0x14a72217b
   1400215bb:	(bad)  
   1400215bc:	hlt    
   1400215bd:	(bad)  
   1400215be:	add    BYTE PTR [rax],al
   1400215c0:	add    DWORD PTR [rax],eax
   1400215c2:	add    BYTE PTR [rax],al
   1400215c4:	(bad)  
   1400215c5:	cmp    BYTE PTR [rcx],al
   1400215c7:	add    BYTE PTR [rbx+0x38],cl
   1400215ca:	add    DWORD PTR [rax],eax
   1400215cc:	pop    rbp
   1400215cd:	fwait
   1400215ce:	add    DWORD PTR [rax],eax
   1400215d0:	add    BYTE PTR [rax],al
   1400215d2:	add    BYTE PTR [rax],al
   1400215d4:	add    DWORD PTR [rax],ebx
   1400215d6:	or     al,BYTE PTR [rax]
   1400215d8:	sbb    BYTE PTR [rax+rdx*1],dh
   1400215db:	add    BYTE PTR [rax],bl
   1400215dd:	push   rdx
   1400215de:	adc    al,0xf0
   1400215e0:	adc    ah,al
   1400215e2:	adc    al,dl
   1400215e4:	(bad)  
   1400215e5:	ror    BYTE PTR [rax+rsi*2],0xb
   1400215e9:	(bad)  
   1400215ea:	or     dl,BYTE PTR [rax+0x1]
   1400215ed:	adc    al,0x8
   1400215ef:	add    BYTE PTR [rsp+riz*2],dl
   1400215f2:	or     BYTE PTR [rax],al
   1400215f4:	adc    al,0x54
   1400215f6:	(bad)  
   1400215f7:	add    BYTE PTR [rsp+rsi*1],dl
   1400215fa:	(bad)  
   1400215fb:	add    BYTE PTR [rdx+rsi*1],dl
   1400215fe:	adc    BYTE PTR [rax+0x19],dh
   140021601:	(bad)  
   140021602:	or     DWORD PTR [rax],eax
   140021604:	(bad)  
   140021605:	je     0x1400215bc
   140021607:	add    BYTE PTR [rsi],bl
   140021609:	fs mov ah,0x0
   14002160c:	(bad)  
   14002160d:	xor    al,0xb3
   14002160f:	add    BYTE PTR [rsi],bl
   140021611:	add    DWORD PTR [rax+0x501000],esi
   140021617:	add    BYTE PTR [rax+0x700000a6],al
   14002161d:	add    eax,0xa110000
   140021622:	add    al,0x0
   140021624:	or     dh,BYTE PTR [rdi+rax*1]
   140021627:	add    BYTE PTR [rdx],cl
   140021629:	xor    al,BYTE PTR [rsi]
   14002162b:	jo     0x140021621
   14002162d:	(bad)  
   14002162e:	add    BYTE PTR [rax],al
   140021630:	add    DWORD PTR [rax],eax
   140021632:	add    BYTE PTR [rax],al
   140021634:	(bad)  
   140021635:	rex.XB add DWORD PTR [r8],eax
   140021638:	icebp  
   140021639:	rex.XB add DWORD PTR [r8],eax
   14002163c:	jl     0x1400215da
   14002163e:	add    DWORD PTR [rax],eax
   140021640:	add    BYTE PTR [rax],al
   140021642:	add    BYTE PTR [rax],al
   140021644:	sbb    DWORD PTR [rdi],ebx
   140021646:	or     BYTE PTR [rax],al
   140021648:	adc    BYTE PTR [rax+rdx*1],dh
   14002164b:	add    BYTE PTR [rax],dl
   14002164d:	jb     0x14002165b
   14002164f:	ror    BYTE PTR [rdx],1
   140021651:	ror    BYTE PTR [rax],0x70
   140021654:	(bad)  
   140021655:	(bad)  
   140021656:	(bad)  
   140021657:	push   rax
   140021658:	and    BYTE PTR [rsi+0x380000],0x0
   14002165f:	add    BYTE PTR [rcx],dl
   140021661:	sbb    DWORD PTR [rdx],ecx
   140021663:	add    BYTE PTR [rcx],bl
   140021665:	(bad)  
   140021666:	or     eax,DWORD PTR [rax]
   140021668:	sbb    DWORD PTR [rdx+rcx*1+0x0],esi
   14002166c:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   140021670:	sbb    DWORD PTR [rax+rcx*1],esi
   140021673:	add    BYTE PTR [rcx],bl
   140021675:	push   rdx
   140021676:	adc    eax,0xd6f4d0
   14002167b:	add    BYTE PTR [rcx],al
   14002167d:	add    BYTE PTR [rax],al
   14002167f:	add    BYTE PTR [rax],al
   140021681:	add    QWORD PTR [rax],rax
   140021684:	lods   al,BYTE PTR ds:[rsi]
   140021685:	add    QWORD PTR [rax],rax
   140021688:	jl     0x140021626
   14002168a:	add    DWORD PTR [rax],eax
   14002168c:	add    BYTE PTR [rax],al
   14002168e:	add    BYTE PTR [rax],al
   140021690:	add    DWORD PTR [rdi],ecx
   140021692:	(bad)  
   140021693:	add    BYTE PTR [rdi],cl
   140021695:	fs (bad) 
   140021697:	add    BYTE PTR [rdi],cl
   140021699:	xor    al,0x6
   14002169b:	add    BYTE PTR [rdi],cl
   14002169d:	xor    cl,BYTE PTR [rbx]
   14002169f:	jo     0x1400216b2
   1400216a1:	(bad)  
   1400216a2:	add    al,BYTE PTR [rax]
   1400216a4:	(bad)  
   1400216a5:	xor    al,BYTE PTR [rdx]
   1400216a7:	xor    ah,dh
   1400216a9:	(bad)  
   1400216aa:	add    BYTE PTR [rax],al
   1400216ac:	add    DWORD PTR [rax],eax
   1400216ae:	add    BYTE PTR [rax],al
   1400216b0:	imul   ecx,DWORD PTR [rcx+rax*1+0x0],0xffffff81
   1400216b5:	add    QWORD PTR [rax],r8
   1400216b8:	xchg   edi,eax
   1400216b9:	pushf  
   1400216ba:	add    DWORD PTR [rax],eax
   1400216bc:	add    BYTE PTR [rax],al
   1400216be:	add    BYTE PTR [rax],al
   1400216c0:	add    DWORD PTR [rax],edx
   1400216c2:	(bad)  
   1400216c3:	add    BYTE PTR [rax],dl
   1400216c5:	adc    DWORD PTR fs:[rax],eax
   1400216c8:	adc    BYTE PTR [rdx+0x7007c009],dh
   1400216ce:	(bad)  
   1400216cf:	push   rax
   1400216d0:	sbb    DWORD PTR [rsi],ebx
   1400216d2:	or     BYTE PTR [rax],al
   1400216d4:	setb   BYTE PTR [rbx]
   1400216d7:	loopne 0x1400216e2
   1400216d9:	rol    BYTE PTR [rdi],1
   1400216db:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x143621b52
   1400216e2:	add    dh,BYTE PTR [rax]
   1400216e4:	and    BYTE PTR [rsi+0x480000],0x0
   1400216eb:	add    BYTE PTR [rcx],al
   1400216ed:	adc    eax,0x34150006
   1400216f2:	adc    BYTE PTR [rax],al
   1400216f4:	adc    eax,0xd700eb2
   1400216f9:	(bad)  
   1400216fa:	or     al,0x50
   1400216fc:	sbb    DWORD PTR [rdx+rcx*1],esp
   1400216ff:	xor    eax,0xc2113316
   140021704:	or     eax,0x9e00bf0
   140021709:	rol    BYTE PTR [rdi],1
   14002170b:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x143621b82
   140021712:	add    dl,BYTE PTR [rax-0x80]
   140021715:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140021716:	add    BYTE PTR [rax],al
   140021718:	pop    rax
   140021719:	add    BYTE PTR [rax],al
   14002171b:	add    BYTE PTR [rcx],al
   14002171d:	clts   
   14002171f:	add    BYTE PTR [rdi],cl
   140021721:	str    WORD PTR fs:[rdi]
   140021725:	xor    al,0xe
   140021727:	add    BYTE PTR [rdi],cl
   140021729:	mov    dl,0xb
   14002172b:	jo     0x14002172e
   14002172d:	(bad)  
   14002172e:	or     BYTE PTR [rax],al
   140021730:	(bad)  
   140021731:	je     0x140021743
   140021733:	add    BYTE PTR [rdi],dl
   140021735:	lldt   WORD PTR fs:[rdi]
   140021739:	xor    al,0xe
   14002173b:	add    BYTE PTR [rdi],dl
   14002173d:	mov    dl,0x10
   14002173f:	push   rax
   140021740:	add    DWORD PTR [rbx],ebx
   140021742:	or     al,BYTE PTR [rax]
   140021744:	sbb    eax,esp
   140021746:	ltr    WORD PTR [rbx]
   140021749:	je     0x140021759
   14002174b:	add    BYTE PTR [rbx],bl
   14002174d:	fs or  eax,0xc341b00
   140021753:	add    BYTE PTR [rbx],bl
   140021755:	xchg   edx,eax
   140021756:	adc    al,0x50
   140021758:	adc    DWORD PTR [rip+0x34150008],edx        # 0x174171766
   14002175e:	or     eax,DWORD PTR [rax]
   140021760:	adc    eax,0xfe01132
   140021765:	ror    BYTE PTR [rip+0xa700bc0],1        # 0x14a72232b
   14002176b:	(bad)  
   14002176c:	hlt    
   14002176d:	(bad)  
   14002176e:	add    BYTE PTR [rax],al
   140021770:	add    DWORD PTR [rax],eax
   140021772:	add    BYTE PTR [rax],al
   140021774:	mov    DWORD PTR [rsi+0x1],ebx
   140021777:	add    BYTE PTR [rbp-0x4dfffea2],bh
   14002177d:	pushf  
   14002177e:	add    DWORD PTR [rax],eax
   140021780:	add    BYTE PTR [rax],al
   140021782:	add    BYTE PTR [rax],al
   140021784:	add    DWORD PTR [rdi],ebx
   140021786:	or     al,0x0
   140021788:	(bad)  
   140021789:	je     0x14002179c
   14002178b:	add    BYTE PTR [rdi],bl
   14002178d:	adc    BYTE PTR fs:[rax],al
   140021790:	(bad)  
   140021791:	xor    al,0xe
   140021793:	add    BYTE PTR [rdi],bl
   140021795:	jb     0x1400217af
   140021797:	lock (bad) 
   140021799:	loopne 0x1400217af
   14002179b:	rcl    BYTE PTR [rdx],1
   14002179d:	rcl    BYTE PTR [rax],0x50
   1400217a0:	add    DWORD PTR [rcx+rcx*1],ebx
   1400217a3:	add    BYTE PTR [rdx+riz*4],bl
   1400217a6:	adc    eax,0x11e013f0
   1400217ab:	ror    BYTE PTR [rdi],1
   1400217ad:	ror    BYTE PTR [rip+0xb600c70],0x30        # 0x14b622424
   1400217b4:	or     dl,BYTE PTR [rax+0x0]
   1400217b7:	add    BYTE PTR [rcx],dl
   1400217b9:	sbb    ecx,DWORD PTR [rdx]
   1400217bb:	add    BYTE PTR [rbx],bl
   1400217bd:	fs or  al,0x0
   1400217c0:	sbb    esi,DWORD PTR [rbx+rcx*1]
   1400217c3:	add    BYTE PTR [rbx],bl
   1400217c5:	xor    dl,BYTE PTR [rdi]
   1400217c7:	lock adc eax,0x11d013e0
   1400217cd:	ror    BYTE PTR [rdi],0x70
   1400217d0:	hlt    
   1400217d1:	(bad)  
   1400217d2:	add    BYTE PTR [rax],al
   1400217d4:	add    DWORD PTR [rax],eax
   1400217d6:	add    BYTE PTR [rax],al
   1400217d8:	rex push 0x1
   1400217db:	add    BYTE PTR [rdx+0x6a],dh
   1400217de:	add    DWORD PTR [rax],eax
   1400217e0:	mov    dl,0x9c
   1400217e2:	add    DWORD PTR [rax],eax
   1400217e4:	add    BYTE PTR [rax],al
   1400217e6:	add    BYTE PTR [rax],al
   1400217e8:	add    DWORD PTR [rcx],ecx
   1400217ea:	add    DWORD PTR [rax],eax
   1400217ec:	or     DWORD PTR [rdx+0x0],esp
   1400217ef:	add    BYTE PTR [rcx],al
   1400217f1:	add    al,0x1
   1400217f3:	add    BYTE PTR [rdx+rdx*1],al
   1400217f6:	add    BYTE PTR [rax],al
   1400217f8:	sbb    DWORD PTR [rip+0x52060002],edx        # 0x192081800
   1400217fe:	add    dh,BYTE PTR [rax]
   140021800:	and    BYTE PTR [rsi+0x280000],0x0
   140021807:	add    BYTE PTR [rcx],al
   140021809:	or     al,0x6
   14002180b:	add    BYTE PTR [rsp+rsi*1],cl
   14002180e:	or     DWORD PTR [rax],eax
   140021810:	or     al,0x32
   140021812:	or     BYTE PTR [rax+0x7],dh
   140021815:	(bad)  
   140021816:	(bad)  
   140021817:	push   rax
   140021818:	adc    DWORD PTR [rdx],ecx
   14002181a:	add    al,0x0
   14002181c:	or     dh,BYTE PTR [rsi+rax*1]
   14002181f:	add    BYTE PTR [rdx],cl
   140021821:	xor    al,BYTE PTR [rsi]
   140021823:	jo     0x140021819
   140021825:	(bad)  
   140021826:	add    BYTE PTR [rax],al
   140021828:	add    DWORD PTR [rax],eax
   14002182a:	add    BYTE PTR [rax],al
   14002182c:	jp     0x14002189e
   14002182e:	add    DWORD PTR [rax],eax
   140021830:	mov    dh,BYTE PTR [rax+0x1]
   140021833:	add    BYTE PTR [rbx-0x66],dl
   140021836:	add    DWORD PTR [rax],eax
   140021838:	add    BYTE PTR [rax],al
   14002183a:	add    BYTE PTR [rax],al
   14002183c:	add    DWORD PTR [rcx],ebx
   14002183e:	or     al,BYTE PTR [rax]
   140021840:	sbb    DWORD PTR [rsi+rdx*1+0x0],esp
   140021844:	sbb    DWORD PTR [rdx*1+0x12d21900],esi
   14002184b:	lock adc al,ah
   14002184e:	(bad)  
   14002184f:	ror    BYTE PTR [rax+rsi*2],0xb
   140021853:	push   rax
   140021854:	add    DWORD PTR [rdi],ecx
   140021856:	(bad)  
   140021857:	add    BYTE PTR [rdi],cl
   140021859:	or     eax,DWORD PTR fs:[rax]
   14002185c:	sysenter 
   14002185e:	or     al,BYTE PTR [rax]
   140021860:	(bad)  
   140021862:	or     esi,DWORD PTR [rax+0x1]
   140021865:	sbb    eax,0x741d000c
   14002186a:	or     eax,DWORD PTR [rax]
   14002186c:	sbb    eax,0x1d000a64
   140021871:	push   rsp
   140021872:	or     DWORD PTR [rax],eax
   140021874:	sbb    eax,0x1d000834
   140021879:	xor    bl,BYTE PTR [rcx]
   14002187b:	lock (bad) 
   14002187d:	rcl    BYTE PTR [rip+0x81511c0],1        # 0x148172a43
   140021883:	add    BYTE PTR [rip+0x15000b34],dl        # 0x1550223bd
   140021889:	xor    dl,BYTE PTR [rcx]
   14002188b:	loopne 0x14002189c
   14002188d:	ror    BYTE PTR [rip+0xa700bc0],1        # 0x14a722453
   140021893:	(bad)  
   140021894:	hlt    
   140021895:	(bad)  
   140021896:	add    BYTE PTR [rax],al
   140021898:	add    DWORD PTR [rax],eax
   14002189a:	add    BYTE PTR [rax],al
   14002189c:	fnstenv [rsi+0x1]
   14002189f:	add    BYTE PTR [rbx],cl
   1400218a1:	ja     0x1400218a4
   1400218a3:	add    BYTE PTR [rdx+0x19c],dh
   1400218a9:	add    BYTE PTR [rax],al
   1400218ab:	add    BYTE PTR [rcx],al
   1400218ad:	add    eax,0x34050002
   1400218b2:	add    DWORD PTR [rax],eax
   1400218b4:	adc    DWORD PTR [rdx],edx
   1400218b6:	or     BYTE PTR [rax],al
   1400218b8:	adc    dl,BYTE PTR [rdx-0x1ff30ff2]
   1400218be:	or     dl,al
   1400218c0:	or     al,al
   1400218c2:	(bad)  
   1400218c3:	jo     0x1400218ca
   1400218c5:	(bad)  
   1400218c6:	add    al,0x30
   1400218c8:	hlt    
   1400218c9:	(bad)  
   1400218ca:	add    BYTE PTR [rax],al
   1400218cc:	add    al,BYTE PTR [rax]
   1400218ce:	add    BYTE PTR [rax],al
   1400218d0:	jne    0x14002194a
   1400218d2:	add    DWORD PTR [rax],eax
   1400218d4:	or     BYTE PTR [rbx+0x1],bh
   1400218d7:	add    bl,cl
   1400218d9:	pushf  
   1400218da:	add    DWORD PTR [rax],eax
   1400218dc:	add    BYTE PTR [rax],al
   1400218de:	add    BYTE PTR [rax],al
   1400218e0:	jne    0x14002195e
   1400218e2:	add    DWORD PTR [rax],eax
   1400218e4:	mov    dl,0x7c
   1400218e6:	add    DWORD PTR [rax],eax
   1400218e8:	retf   
   1400218e9:	pushf  
   1400218ea:	add    DWORD PTR [rax],eax
   1400218ec:	add    BYTE PTR [rax],al
   1400218ee:	add    BYTE PTR [rax],al
   1400218f0:	add    DWORD PTR [rdx],edx
   1400218f2:	or     BYTE PTR [rax],al
   1400218f4:	adc    dl,BYTE PTR [rsp+rcx*1+0x0]
   1400218f8:	adc    dh,BYTE PTR [rbx+rcx*1]
   1400218fb:	add    BYTE PTR [rdx],dl
   1400218fd:	push   rdx
   1400218fe:	(bad)  
   1400218ff:	ror    BYTE PTR [rax+rsi*2],0xb
   140021903:	(bad)  
   140021904:	add    DWORD PTR [rax],ebx
   140021906:	or     al,BYTE PTR [rax]
   140021908:	sbb    BYTE PTR [rbx+rdx*1+0x0],ah
   14002190c:	sbb    BYTE PTR [rdx+rdx*1+0x0],dl
   140021910:	sbb    BYTE PTR [rax+rdx*1],dh
   140021913:	add    BYTE PTR [rax],bl
   140021915:	mov    dl,0x14
   140021917:	rcl    BYTE PTR [rdx],1
   140021919:	rcl    BYTE PTR [rax],0x70
   14002191c:	adc    DWORD PTR [rcx+rax*1],eax
   14002191f:	add    BYTE PTR [rdx+rax*2],al
   140021922:	add    BYTE PTR [rax],al
   140021924:	hlt    
   140021925:	(bad)  
   140021926:	add    BYTE PTR [rax],al
   140021928:	add    DWORD PTR [rax],eax
   14002192a:	add    BYTE PTR [rax],al
   14002192c:	pop    rsp
   14002192d:	(bad)  
   14002192e:	add    DWORD PTR [rax],eax
   140021930:	jo     0x1400218b4
   140021932:	add    DWORD PTR [rax],eax
   140021934:	out    0x9c,al
   140021936:	add    DWORD PTR [rax],eax
   140021938:	add    BYTE PTR [rax],al
   14002193a:	add    BYTE PTR [rax],al
   14002193c:	adc    DWORD PTR [rsi],eax
   14002193e:	add    al,BYTE PTR [rax]
   140021940:	(bad)  
   140021941:	xor    al,BYTE PTR [rdx]
   140021943:	xor    ah,dh
   140021945:	(bad)  
   140021946:	add    BYTE PTR [rax],al
   140021948:	add    DWORD PTR [rax],eax
   14002194a:	add    BYTE PTR [rax],al
   14002194c:	xchg   esp,eax
   14002194d:	(bad)  
   14002194e:	add    DWORD PTR [rax],eax
   140021950:	sahf   
   140021951:	(bad)  
   140021952:	add    DWORD PTR [rax],eax
   140021954:	out    0x9c,al
   140021956:	add    DWORD PTR [rax],eax
   140021958:	add    BYTE PTR [rax],al
   14002195a:	add    BYTE PTR [rax],al
   14002195c:	sbb    DWORD PTR [rip+0x741f450d],ebp        # 0x1b4215e6f
   140021962:	adc    al,BYTE PTR [rax]
   140021964:	sbb    esp,DWORD PTR [rcx+rdx*1+0x0]
   140021968:	(bad)  
   140021969:	xor    al,0x10
   14002196b:	add    BYTE PTR [rbx],dl
   14002196d:	rex.XB (bad) 
   14002196f:	xchg   edx,eax
   140021970:	or     dh,al
   140021972:	or     al,ah
   140021974:	(bad)  
   140021975:	rol    BYTE PTR [rax+rax*8],1
   140021978:	add    dl,BYTE PTR [rax+0x0]
   14002197b:	add    BYTE PTR [rax+0x480000a6],al
   140021981:	add    BYTE PTR [rax],al
   140021983:	add    BYTE PTR [rcx],al
   140021985:	clts   
   140021987:	add    BYTE PTR [rdi],cl
   140021989:	adc    DWORD PTR fs:[rax],eax
   14002198c:	sysenter 
   14002198e:	adc    BYTE PTR [rax],al
   140021990:	psrld  mm1,QWORD PTR [rbx]
   140021993:	jo     0x140021996
   140021995:	clts   
   140021997:	add    BYTE PTR [rdi],cl
   140021999:	or     DWORD PTR fs:[rax],eax
   14002199c:	sysenter 
   14002199e:	or     BYTE PTR [rax],al
   1400219a0:	rsqrtps xmm1,XMMWORD PTR [rbx]
   1400219a3:	jo     0x1400219a6
   1400219a5:	clts   
   1400219a7:	add    BYTE PTR [rdi],cl
   1400219a9:	push   rsp
   1400219aa:	or     al,BYTE PTR [rax]
   1400219ac:	sysenter 
   1400219ae:	or     DWORD PTR [rax],eax
   1400219b0:	rsqrtps xmm1,XMMWORD PTR [rbx]
   1400219b3:	jo     0x1400219ce
   1400219b5:	sub    eax,0x741f350d
   1400219ba:	adc    BYTE PTR [rax],al
   1400219bc:	sbb    esp,DWORD PTR [rdi+rcx*1+0x0]
   1400219c0:	(bad)  
   1400219c1:	xor    al,0xe
   1400219c3:	add    BYTE PTR [rbx],dl
   1400219c5:	xor    ecx,DWORD PTR [rsi]
   1400219c7:	jb     0x1400219d3
   1400219c9:	lock or al,ah
   1400219cc:	(bad)  
   1400219cd:	rol    BYTE PTR [rax+rax*8],1
   1400219d0:	add    dl,BYTE PTR [rax+0x0]
   1400219d3:	add    BYTE PTR [rax+0x300000a6],al
   1400219d9:	add    BYTE PTR [rax],al
   1400219db:	add    BYTE PTR [rcx],al
   1400219dd:	(bad)  
   1400219de:	add    al,BYTE PTR [rax]
   1400219e0:	(bad)  
   1400219e1:	xor    cl,BYTE PTR [rdx]
   1400219e3:	xor    BYTE PTR [rcx],al
   1400219e5:	or     al,BYTE PTR [rdx]
   1400219e7:	add    BYTE PTR [rdx],cl
   1400219e9:	xor    al,BYTE PTR [rsi]
   1400219eb:	xor    BYTE PTR [rcx],al
   1400219ed:	sbb    ecx,DWORD PTR [rdx]
   1400219ef:	add    BYTE PTR [rbx],bl
   1400219f1:	(bad)  
   1400219f2:	or     eax,0xc741b00
   1400219f7:	add    BYTE PTR [rbx],bl
   1400219f9:	or     eax,DWORD PTR fs:[rax]
   1400219fc:	sbb    esi,DWORD PTR [rdx+rcx*1]
   1400219ff:	add    BYTE PTR [rbx],bl
   140021a01:	jb     0x140021a17
   140021a03:	push   rax
   140021a04:	add    DWORD PTR [rcx+rax*1],eax
   140021a07:	add    BYTE PTR [rdx+rax*4],al
   140021a0a:	add    BYTE PTR [rax],al
   140021a0c:	add    DWORD PTR [rdi],edx
   140021a0e:	or     BYTE PTR [rax],al
   140021a10:	(bad)  
   140021a11:	je     0x140021a1f
   140021a13:	add    BYTE PTR [rdi],dl
   140021a15:	or     eax,DWORD PTR fs:[rax]
   140021a18:	(bad)  
   140021a19:	xor    al,0xa
   140021a1b:	add    BYTE PTR [rdi],dl
   140021a1d:	jb     0x140021a2f
   140021a1f:	push   rax
   140021a20:	add    DWORD PTR [rcx],ebx
   140021a22:	or     al,BYTE PTR [rax]
   140021a24:	sbb    DWORD PTR [rbx+rcx*1+0x0],esi
   140021a28:	sbb    DWORD PTR [rdx+rcx*1+0x0],esp
   140021a2c:	sbb    DWORD PTR [rcx+rcx*1+0x0],edx
   140021a30:	sbb    DWORD PTR [rax+rcx*1],esi
   140021a33:	add    BYTE PTR [rcx],bl
   140021a35:	push   rdx
   140021a36:	adc    eax,0x61201c0
   140021a3b:	add    BYTE PTR [rdx],dl
   140021a3d:	(bad)  
   140021a3e:	adc    eax,DWORD PTR [rax]
   140021a40:	adc    dh,BYTE PTR [rcx+rdx*1+0x0]
   140021a44:	adc    dl,dl
   140021a46:	or     edx,DWORD PTR [rax-0x50]
   140021a49:	sbb    al,BYTE PTR [rdx]
	...
   140021a53:	add    BYTE PTR [rax+0x1e],cl
   140021a56:	add    al,BYTE PTR [rax]
   140021a58:	add    BYTE PTR [rax+0x1df00001],ah
   140021a5e:	add    al,BYTE PTR [rax]
	...
   140021a68:	jb     0x140021a88
   140021a6a:	add    al,BYTE PTR [rax]
   140021a6c:	rex movabs ds:0x21ad80001,eax
   140021a76:	add    BYTE PTR [rax],al
   140021a78:	add    BYTE PTR [rax],al
   140021a7a:	add    BYTE PTR [rax],al
   140021a7c:	xchg   esi,eax
   140021a7d:	(bad)  
   140021a7e:	add    al,BYTE PTR [rax]
   140021a80:	sub    BYTE PTR [rax+0x1ae80001],ah
   140021a86:	add    al,BYTE PTR [rax]
	...
   140021a90:	movabs al,ds:0x1a038000225
	...
   140021aad:	add    BYTE PTR [rax],al
   140021aaf:	add    BYTE PTR [rsi+rbx*1],bl
   140021ab2:	add    al,BYTE PTR [rax]
   140021ab4:	add    BYTE PTR [rax],al
   140021ab6:	add    BYTE PTR [rax],al
   140021ab8:	sub    bl,BYTE PTR [rsi]
   140021aba:	add    al,BYTE PTR [rax]
   140021abc:	add    BYTE PTR [rax],al
   140021abe:	add    BYTE PTR [rax],al
   140021ac0:	cmp    bl,BYTE PTR [rsi]
   140021ac2:	add    al,BYTE PTR [rax]
   140021ac4:	add    BYTE PTR [rax],al
   140021ac6:	add    BYTE PTR [rax],al
   140021ac8:	or     BYTE PTR [rsi],bl
   140021aca:	add    al,BYTE PTR [rax]
	...
   140021ad8:	jle    0x140021af8
   140021ada:	add    al,BYTE PTR [rax]
	...
   140021ae8:	xchg   edx,eax
   140021ae9:	and    eax,0x2
   140021aee:	add    BYTE PTR [rax],al
   140021af0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140021af1:	(bad)  
   140021af2:	add    al,BYTE PTR [rax]
   140021af4:	add    BYTE PTR [rax],al
   140021af6:	add    BYTE PTR [rax],al
   140021af8:	mov    dh,0x1e
   140021afa:	add    al,BYTE PTR [rax]
   140021afc:	add    BYTE PTR [rax],al
   140021afe:	add    BYTE PTR [rax],al
   140021b00:	int3   
   140021b01:	(bad)  
   140021b02:	add    al,BYTE PTR [rax]
   140021b04:	add    BYTE PTR [rax],al
   140021b06:	add    BYTE PTR [rax],al
   140021b08:	out    0x1e,al
   140021b0a:	add    al,BYTE PTR [rax]
   140021b0c:	add    BYTE PTR [rax],al
   140021b0e:	add    BYTE PTR [rax],al
   140021b10:	add    bl,BYTE PTR [rdi]
   140021b12:	add    al,BYTE PTR [rax]
   140021b14:	add    BYTE PTR [rax],al
   140021b16:	add    BYTE PTR [rax],al
   140021b18:	(bad)  
   140021b19:	(bad)  
   140021b1a:	add    al,BYTE PTR [rax]
   140021b1c:	add    BYTE PTR [rax],al
   140021b1e:	add    BYTE PTR [rax],al
   140021b20:	and    BYTE PTR [rdi],bl
   140021b22:	add    al,BYTE PTR [rax]
   140021b24:	add    BYTE PTR [rax],al
   140021b26:	add    BYTE PTR [rax],al
   140021b28:	xor    BYTE PTR [rdi],bl
   140021b2a:	add    al,BYTE PTR [rax]
   140021b2c:	add    BYTE PTR [rax],al
   140021b2e:	add    BYTE PTR [rax],al
   140021b30:	ds (bad) 
   140021b32:	add    al,BYTE PTR [rax]
   140021b34:	add    BYTE PTR [rax],al
   140021b36:	add    BYTE PTR [rax],al
   140021b38:	push   rsp
   140021b39:	(bad)  
   140021b3a:	add    al,BYTE PTR [rax]
   140021b3c:	add    BYTE PTR [rax],al
   140021b3e:	add    BYTE PTR [rax],al
   140021b40:	push   0x1f
   140021b42:	add    al,BYTE PTR [rax]
   140021b44:	add    BYTE PTR [rax],al
   140021b46:	add    BYTE PTR [rax],al
   140021b48:	jl     0x140021b69
   140021b4a:	add    al,BYTE PTR [rax]
   140021b4c:	add    BYTE PTR [rax],al
   140021b4e:	add    BYTE PTR [rax],al
   140021b50:	mov    ds,WORD PTR [rdi]
   140021b52:	add    al,BYTE PTR [rax]
   140021b54:	add    BYTE PTR [rax],al
   140021b56:	add    BYTE PTR [rax],al
   140021b58:	movabs ds:0xb20000000000021f,al
   140021b61:	(bad)  
   140021b62:	add    al,BYTE PTR [rax]
   140021b64:	add    BYTE PTR [rax],al
   140021b66:	add    BYTE PTR [rax],al
   140021b68:	(bad)  
   140021b69:	(bad)  
   140021b6a:	add    al,BYTE PTR [rax]
   140021b6c:	add    BYTE PTR [rax],al
   140021b6e:	add    BYTE PTR [rax],al
   140021b70:	fcomp  DWORD PTR [rdi]
   140021b72:	add    al,BYTE PTR [rax]
   140021b74:	add    BYTE PTR [rax],al
   140021b76:	add    BYTE PTR [rax],al
   140021b78:	call   0x140021d9c
   140021b7d:	add    BYTE PTR [rax],al
   140021b7f:	add    ah,dh
   140021b81:	(bad)  
   140021b82:	add    al,BYTE PTR [rax]
   140021b84:	add    BYTE PTR [rax],al
   140021b86:	add    BYTE PTR [rax],al
   140021b88:	or     BYTE PTR [rax],ah
   140021b8a:	add    al,BYTE PTR [rax]
   140021b8c:	add    BYTE PTR [rax],al
   140021b8e:	add    BYTE PTR [rax],al
   140021b90:	(bad)  
   140021b91:	and    BYTE PTR [rdx],al
   140021b93:	add    BYTE PTR [rax],al
   140021b95:	add    BYTE PTR [rax],al
   140021b97:	add    BYTE PTR [rsi],ah
   140021b99:	and    BYTE PTR [rdx],al
   140021b9b:	add    BYTE PTR [rax],al
   140021b9d:	add    BYTE PTR [rax],al
   140021b9f:	add    BYTE PTR [rsi],bh
   140021ba1:	and    BYTE PTR [rdx],al
   140021ba3:	add    BYTE PTR [rax],al
   140021ba5:	add    BYTE PTR [rax],al
   140021ba7:	add    BYTE PTR [rsi+0x20],dl
   140021baa:	add    al,BYTE PTR [rax]
   140021bac:	add    BYTE PTR [rax],al
   140021bae:	add    BYTE PTR [rax],al
   140021bb0:	(bad)  
   140021bb1:	and    BYTE PTR [rdx],al
   140021bb3:	add    BYTE PTR [rax],al
   140021bb5:	add    BYTE PTR [rax],al
   140021bb7:	add    BYTE PTR [rax+0x20],dh
   140021bba:	add    al,BYTE PTR [rax]
   140021bbc:	add    BYTE PTR [rax],al
   140021bbe:	add    BYTE PTR [rax],al
   140021bc0:	jl     0x140021be2
   140021bc2:	add    al,BYTE PTR [rax]
   140021bc4:	add    BYTE PTR [rax],al
   140021bc6:	add    BYTE PTR [rax],al
   140021bc8:	xchg   esp,eax
   140021bc9:	and    BYTE PTR [rdx],al
   140021bcb:	add    BYTE PTR [rax],al
   140021bcd:	add    BYTE PTR [rax],al
   140021bcf:	add    BYTE PTR [rsi+0x220],ch
   140021bd5:	add    BYTE PTR [rax],al
   140021bd7:	add    BYTE PTR [rsi+0x220],bh
   140021bdd:	add    BYTE PTR [rax],al
   140021bdf:	add    dl,dl
   140021be1:	and    BYTE PTR [rdx],al
   140021be3:	add    BYTE PTR [rax],al
   140021be5:	add    BYTE PTR [rax],al
   140021be7:	add    al,ch
   140021be9:	and    BYTE PTR [rdx],al
   140021beb:	add    BYTE PTR [rax],al
   140021bed:	add    BYTE PTR [rax],al
   140021bef:	add    dh,bh
   140021bf1:	and    BYTE PTR [rdx],al
   140021bf3:	add    BYTE PTR [rax],al
   140021bf5:	add    BYTE PTR [rax],al
   140021bf7:	add    BYTE PTR [rcx+riz*1],cl
   140021bfa:	add    al,BYTE PTR [rax]
   140021bfc:	add    BYTE PTR [rax],al
   140021bfe:	add    BYTE PTR [rax],al
   140021c00:	and    ah,BYTE PTR [rcx]
   140021c02:	add    al,BYTE PTR [rax]
   140021c04:	add    BYTE PTR [rax],al
   140021c06:	add    BYTE PTR [rax],al
   140021c08:	xor    ah,BYTE PTR [rcx]
   140021c0a:	add    al,BYTE PTR [rax]
   140021c0c:	add    BYTE PTR [rax],al
   140021c0e:	add    BYTE PTR [rax],al
   140021c10:	pop    rdx
   140021c11:	and    DWORD PTR [rdx],eax
   140021c13:	add    BYTE PTR [rax],al
   140021c15:	add    BYTE PTR [rax],al
   140021c17:	add    BYTE PTR [rdx+0x21],dh
   140021c1a:	add    al,BYTE PTR [rax]
   140021c1c:	add    BYTE PTR [rax],al
   140021c1e:	add    BYTE PTR [rax],al
   140021c20:	(bad)  
   140021c21:	and    DWORD PTR [rdx],eax
   140021c23:	add    BYTE PTR [rax],al
   140021c25:	add    BYTE PTR [rax],al
   140021c27:	add    BYTE PTR [rdx+0x221],dl
   140021c2d:	add    BYTE PTR [rax],al
   140021c2f:	add    BYTE PTR [rsi+0x221],ch
   140021c35:	add    BYTE PTR [rax],al
   140021c37:	add    ah,cl
   140021c39:	and    DWORD PTR [rdx],eax
   140021c3b:	add    BYTE PTR [rax],al
   140021c3d:	add    BYTE PTR [rax],al
   140021c3f:	add    al,ah
   140021c41:	and    DWORD PTR [rdx],eax
   140021c43:	add    BYTE PTR [rax],al
   140021c45:	add    BYTE PTR [rax],al
   140021c47:	add    ah,dh
   140021c49:	and    DWORD PTR [rdx],eax
   140021c4b:	add    BYTE PTR [rax],al
   140021c4d:	add    BYTE PTR [rax],al
   140021c4f:	add    BYTE PTR [rsi],cl
   140021c51:	and    al,BYTE PTR [rdx]
   140021c53:	add    BYTE PTR [rax],al
   140021c55:	add    BYTE PTR [rax],al
   140021c57:	add    BYTE PTR [rdx],ah
   140021c59:	and    al,BYTE PTR [rdx]
   140021c5b:	add    BYTE PTR [rax],al
   140021c5d:	add    BYTE PTR [rax],al
   140021c5f:	add    BYTE PTR [rsi],dh
   140021c61:	and    al,BYTE PTR [rdx]
   140021c63:	add    BYTE PTR [rax],al
   140021c65:	add    BYTE PTR [rax],al
   140021c67:	add    BYTE PTR [rdx+0x22],cl
   140021c6a:	add    al,BYTE PTR [rax]
   140021c6c:	add    BYTE PTR [rax],al
   140021c6e:	add    BYTE PTR [rax],al
   140021c70:	pop    rax
   140021c71:	and    al,BYTE PTR [rdx]
   140021c73:	add    BYTE PTR [rax],al
   140021c75:	add    BYTE PTR [rax],al
   140021c77:	add    BYTE PTR [rsi+0x22],ah
   140021c7a:	add    al,BYTE PTR [rax]
   140021c7c:	add    BYTE PTR [rax],al
   140021c7e:	add    BYTE PTR [rax],al
   140021c80:	jo     0x140021ca4
   140021c82:	add    al,BYTE PTR [rax]
   140021c84:	add    BYTE PTR [rax],al
   140021c86:	add    BYTE PTR [rax],al
   140021c88:	and    BYTE PTR [rdx],0x2
   140021c8b:	add    BYTE PTR [rax],al
   140021c8d:	add    BYTE PTR [rax],al
   140021c8f:	add    BYTE PTR [rdx+riz*1+0x2],cl
   140021c96:	add    BYTE PTR [rax],al
   140021c98:	(bad)  
   140021c99:	and    al,BYTE PTR [rdx]
   140021c9b:	add    BYTE PTR [rax],al
   140021c9d:	add    BYTE PTR [rax],al
   140021c9f:	add    BYTE PTR [rsi+0x222],ah
   140021ca5:	add    BYTE PTR [rax],al
   140021ca7:	add    BYTE PTR [rsi+0x222],dh
   140021cad:	add    BYTE PTR [rax],al
   140021caf:	add    ah,cl
   140021cb1:	and    al,BYTE PTR [rdx]
   140021cb3:	add    BYTE PTR [rax],al
   140021cb5:	add    BYTE PTR [rax],al
   140021cb7:	add    dl,ah
   140021cb9:	and    al,BYTE PTR [rdx]
   140021cbb:	add    BYTE PTR [rax],al
   140021cbd:	add    BYTE PTR [rax],al
   140021cbf:	add    ah,bh
   140021cc1:	and    al,BYTE PTR [rdx]
   140021cc3:	add    BYTE PTR [rax],al
   140021cc5:	add    BYTE PTR [rax],al
   140021cc7:	add    BYTE PTR [rsi],dl
   140021cc9:	and    eax,DWORD PTR [rdx]
   140021ccb:	add    BYTE PTR [rax],al
   140021ccd:	add    BYTE PTR [rax],al
   140021ccf:	add    BYTE PTR [rax],ch
   140021cd1:	and    eax,DWORD PTR [rdx]
   140021cd3:	add    BYTE PTR [rax],al
   140021cd5:	add    BYTE PTR [rax],al
   140021cd7:	add    BYTE PTR [rsi],dh
   140021cd9:	and    eax,DWORD PTR [rdx]
   140021cdb:	add    BYTE PTR [rax],al
   140021cdd:	add    BYTE PTR [rax],al
   140021cdf:	add    BYTE PTR [rax+0x23],cl
   140021ce2:	add    al,BYTE PTR [rax]
   140021ce4:	add    BYTE PTR [rax],al
   140021ce6:	add    BYTE PTR [rax],al
   140021ce8:	pop    rsi
   140021ce9:	and    eax,DWORD PTR [rdx]
   140021ceb:	add    BYTE PTR [rax],al
   140021ced:	add    BYTE PTR [rax],al
   140021cef:	add    BYTE PTR [rbx+riz*1+0x2],ch
   140021cf3:	add    BYTE PTR [rax],al
   140021cf5:	add    BYTE PTR [rax],al
   140021cf7:	add    BYTE PTR [rdx+0x23],bh
   140021cfa:	add    al,BYTE PTR [rax]
   140021cfc:	add    BYTE PTR [rax],al
   140021cfe:	add    BYTE PTR [rax],al
   140021d00:	mov    ah,BYTE PTR [rbx]
   140021d02:	add    al,BYTE PTR [rax]
   140021d04:	add    BYTE PTR [rax],al
   140021d06:	add    BYTE PTR [rax],al
   140021d08:	movabs al,ds:0xba00000000000223
   140021d11:	and    eax,DWORD PTR [rdx]
   140021d13:	add    BYTE PTR [rax],al
   140021d15:	add    BYTE PTR [rax],al
   140021d17:	add    dl,al
   140021d19:	and    eax,DWORD PTR [rdx]
   140021d1b:	add    BYTE PTR [rax],al
   140021d1d:	add    BYTE PTR [rax],al
   140021d1f:	add    dl,dl
   140021d21:	and    eax,DWORD PTR [rdx]
   140021d23:	add    BYTE PTR [rax],al
   140021d25:	add    BYTE PTR [rax],al
   140021d27:	add    dl,ah
   140021d29:	and    eax,DWORD PTR [rdx]
   140021d2b:	add    BYTE PTR [rax],al
   140021d2d:	add    BYTE PTR [rax],al
   140021d2f:	add    ah,dh
   140021d31:	and    eax,DWORD PTR [rdx]
   140021d33:	add    BYTE PTR [rax],al
   140021d35:	add    BYTE PTR [rax],al
   140021d37:	add    BYTE PTR [rax],cl
   140021d39:	and    al,0x2
   140021d3b:	add    BYTE PTR [rax],al
   140021d3d:	add    BYTE PTR [rax],al
   140021d3f:	add    BYTE PTR [rsi],ah
   140021d41:	and    al,0x2
   140021d43:	add    BYTE PTR [rax],al
   140021d45:	add    BYTE PTR [rax],al
   140021d47:	add    BYTE PTR [rsi],dh
   140021d49:	and    al,0x2
   140021d4b:	add    BYTE PTR [rax],al
   140021d4d:	add    BYTE PTR [rax],al
   140021d4f:	add    BYTE PTR [rsp+0x2],al
   140021d53:	add    BYTE PTR [rax],al
   140021d55:	add    BYTE PTR [rax],al
   140021d57:	add    BYTE PTR [rsp+0x2],bl
   140021d5b:	add    BYTE PTR [rax],al
   140021d5d:	add    BYTE PTR [rax],al
   140021d5f:	add    BYTE PTR [rax+0x24],dh
   140021d62:	add    al,BYTE PTR [rax]
   140021d64:	add    BYTE PTR [rax],al
   140021d66:	add    BYTE PTR [rax],al
   140021d68:	mov    ah,BYTE PTR [rdx+rax*1]
   140021d6b:	add    BYTE PTR [rax],al
   140021d6d:	add    BYTE PTR [rax],al
   140021d6f:	add    BYTE PTR [rsp+0x2],ah
   140021d76:	add    BYTE PTR [rax],al
   140021d78:	mov    al,0x24
   140021d7a:	add    al,BYTE PTR [rax]
   140021d7c:	add    BYTE PTR [rax],al
   140021d7e:	add    BYTE PTR [rax],al
   140021d80:	mov    edx,0x224
   140021d85:	add    BYTE PTR [rax],al
   140021d87:	add    dh,al
   140021d89:	and    al,0x2
   140021d8b:	add    BYTE PTR [rax],al
   140021d8d:	add    BYTE PTR [rax],al
   140021d8f:	add    al,bl
   140021d91:	and    al,0x2
   140021d93:	add    BYTE PTR [rax],al
   140021d95:	add    BYTE PTR [rax],al
   140021d97:	add    ah,ah
   140021d99:	and    al,0x2
   140021d9b:	add    BYTE PTR [rax],al
   140021d9d:	add    BYTE PTR [rax],al
   140021d9f:	add    dh,dh
   140021da1:	and    al,0x2
   140021da3:	add    BYTE PTR [rax],al
   140021da5:	add    BYTE PTR [rax],al
   140021da7:	add    BYTE PTR [rax],cl
   140021da9:	and    eax,0x2
   140021dae:	add    BYTE PTR [rax],al
   140021db0:	adc    al,0x25
   140021db2:	add    al,BYTE PTR [rax]
   140021db4:	add    BYTE PTR [rax],al
   140021db6:	add    BYTE PTR [rax],al
   140021db8:	and    al,0x25
   140021dba:	add    al,BYTE PTR [rax]
   140021dbc:	add    BYTE PTR [rax],al
   140021dbe:	add    BYTE PTR [rax],al
   140021dc0:	xor    al,0x25
   140021dc2:	add    al,BYTE PTR [rax]
   140021dc4:	add    BYTE PTR [rax],al
   140021dc6:	add    BYTE PTR [rax],al
   140021dc8:	rex.R and eax,0x2
   140021dce:	add    BYTE PTR [rax],al
   140021dd0:	push   rsi
   140021dd1:	and    eax,0x2
   140021dd6:	add    BYTE PTR [rax],al
   140021dd8:	jo     0x140021dff
   140021dda:	add    al,BYTE PTR [rax]
   140021ddc:	add    BYTE PTR [rax],al
   140021dde:	add    BYTE PTR [rax],al
   140021de0:	and    BYTE PTR [rip+0x2],0x0        # 0x140021de9
	...
   140021def:	add    BYTE PTR [rsi+0x1e],dl
   140021df2:	add    al,BYTE PTR [rax]
   140021df4:	add    BYTE PTR [rax],al
   140021df6:	add    BYTE PTR [rax],al
   140021df8:	fs (bad) 
   140021dfa:	add    al,BYTE PTR [rax]
	...
   140021e08:	ins    DWORD PTR es:[rdi],dx
   140021e09:	add    dl,BYTE PTR [rdx+0x65]
   140021e0c:	addr32 push rcx
   140021e0e:	jne    0x140021e75
   140021e10:	jb     0x140021e8b
   140021e12:	push   rsi
   140021e13:	(bad)  
   140021e14:	ins    BYTE PTR es:[rdi],dx
   140021e15:	jne    0x140021e7c
   140021e17:	rex.RB js 0x140021e5b
   140021e1a:	add    BYTE PTR [rax],al
   140021e1c:	xor    BYTE PTR [rdx],al
   140021e1e:	push   rdx
   140021e1f:	gs rex.XB ins BYTE PTR es:[edi],dx
   140021e23:	outs   dx,DWORD PTR ds:[rsi]
   140021e24:	jae    0x140021e8b
   140021e26:	rex.WXB
   140021e27:	gs jns 0x140021e2a
   140021e2a:	(bad)  
   140021e2b:	add    dl,BYTE PTR [rdx+0x65]
   140021e2e:	addr32 rex.WRXB jo 0x140021e97
   140021e32:	outs   dx,BYTE PTR ds:[rsi]
   140021e33:	rex.WXB
   140021e34:	gs jns 0x140021e7c
   140021e37:	js     0x140021e7a
   140021e39:	add    BYTE PTR [rbp+0x2],cl
   140021e3c:	push   rdx
   140021e3d:	rex.RB outs dx,BYTE PTR gs:[esi]
   140021e41:	jne    0x140021eb0
   140021e43:	rex.WXB
   140021e44:	gs jns 0x140021e88
   140021e47:	add    BYTE PTR [rcx+0x44],al
   140021e4a:	push   rsi
   140021e4b:	push   r8
   140021e4d:	xor    rsi,QWORD PTR [r10]
   140021e50:	cs fs ins BYTE PTR es:[rdi],dx
   140021e53:	ins    BYTE PTR es:[rdi],dx
   140021e54:	add    BYTE PTR [rax],al
   140021e56:	xor    BYTE PTR [rax],al
   140021e58:	rex.XB push 0x654e7261
   140021e5e:	js     0x140021ed4
   140021e60:	rex.RB js 0x140021ea4
   140021e63:	add    BYTE PTR [rdx],dl
   140021e65:	add    cl,BYTE PTR [rbp+0x65]
   140021e68:	jae    0x140021edd
   140021e6a:	(bad)  
   140021e6b:	rex.X outs dx,DWORD PTR gs:[esi]
   140021e6f:	js     0x140021eb2
   140021e71:	add    BYTE PTR [rbp+0x53],dl
   140021e74:	rex.RB push r10
   140021e76:	xor    esi,DWORD PTR [rdx]
   140021e78:	cs fs ins BYTE PTR es:[rdi],dx
   140021e7b:	ins    BYTE PTR es:[rdi],dx
   140021e7c:	add    BYTE PTR [rax],al
   140021e7e:	jl     0x140021e80
   140021e80:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140021e82:	imul   esi,DWORD PTR [rbx+rax*2+0x6f],0x6e6f6d6d
   140021e8a:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140021e8c:	outs   dx,BYTE PTR ds:[rsi]
   140021e8d:	je     0x140021f01
   140021e8f:	outs   dx,DWORD PTR ds:[rsi]
   140021e90:	ins    BYTE PTR es:[rdi],dx
   140021e91:	jae    0x140021ed8
   140021e93:	js     0x140021e95
   140021e95:	add    BYTE PTR [rbx+0x4f],al
   140021e98:	rex.WRB
   140021e99:	rex.XB push r12
   140021e9b:	xor    r14,QWORD PTR [rdx]
   140021e9e:	cs fs ins BYTE PTR es:[rdi],dx
   140021ea1:	ins    BYTE PTR es:[rdi],dx
   140021ea2:	add    BYTE PTR [rax],al
   140021ea4:	mov    WORD PTR [rcx],es
   140021ea6:	rex.RXB
   140021ea7:	gs je  0x140021eed
   140021eaa:	outs   dx,DWORD PTR ds:[rsi]
   140021eab:	ins    DWORD PTR es:[rdi],dx
   140021eac:	ins    DWORD PTR es:[rdi],dx
   140021ead:	(bad)  
   140021eae:	outs   dx,BYTE PTR ds:[rsi]
   140021eaf:	imul   r13,QWORD PTR fs:[rsi+0x65],0x2190041
   140021eb8:	rex.RXB
   140021eb9:	gs je  0x140021f09
   140021ebc:	outs   dx,DWORD PTR ds:[rsi]
   140021ebd:	fs jne 0x140021f2c
   140021ec0:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x41656d61
   140021eca:	add    BYTE PTR [rax],al
   140021ecc:	test   eax,0x65755103
   140021ed1:	jb     0x140021f4c
   140021ed3:	push   rax
   140021ed4:	gs jb  0x140021f3d
   140021ed7:	outs   dx,DWORD PTR ds:[rsi]
   140021ed8:	jb     0x140021f47
   140021eda:	(bad)  
   140021edb:	outs   dx,BYTE PTR ds:[rsi]
   140021edc:	movsxd esp,DWORD PTR [rbp+0x43]
   140021edf:	outs   dx,DWORD PTR ds:[rsi]
   140021ee0:	jne    0x140021f50
   140021ee2:	je     0x140021f49
   140021ee4:	jb     0x140021ee6
   140021ee6:	stos   BYTE PTR es:[rdi],al
   140021ee7:	add    edx,DWORD PTR [rcx+0x75]
   140021eea:	gs jb  0x140021f66
   140021eed:	push   rax
   140021eee:	gs jb  0x140021f57
   140021ef1:	outs   dx,DWORD PTR ds:[rsi]
   140021ef2:	jb     0x140021f61
   140021ef4:	(bad)  
   140021ef5:	outs   dx,BYTE PTR ds:[rsi]
   140021ef6:	movsxd esp,DWORD PTR [rbp+0x46]
   140021ef9:	jb     0x140021f60
   140021efb:	jno    0x140021f72
   140021efd:	outs   dx,BYTE PTR gs:[rsi]
   140021eff:	movsxd edi,DWORD PTR [rcx+0x0]
   140021f02:	add    rcx,QWORD PTR [rdi+r13*2+0x63]
   140021f07:	(bad)  
   140021f08:	ins    BYTE PTR es:[rdi],dx
   140021f09:	rex.RX jb 0x140021f71
   140021f0c:	add    BYTE PTR gs:[rbx+0x1],ah
   140021f10:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140021f12:	jb     0x140021f81
   140021f14:	(bad)  
   140021f15:	je     0x140021f64
   140021f17:	gs jae 0x140021f8d
   140021f1a:	(bad)  
   140021f1b:	add    BYTE PTR gs:[r8d],al
   140021f20:	or     BYTE PTR [rdx],al
   140021f22:	rex.RXB
   140021f23:	gs je  0x140021f72
   140021f26:	(bad)  
   140021f27:	jae    0x140021f9d
   140021f29:	rex.RB jb 0x140021f9e
   140021f2c:	outs   dx,DWORD PTR ds:[rsi]
   140021f2d:	jb     0x140021f2f
   140021f2f:	add    BYTE PTR [rdx+0x0],dl
   140021f32:	rex.XB ins BYTE PTR es:[rdi],dx
   140021f34:	outs   dx,DWORD PTR ds:[rsi]
   140021f35:	jae    0x140021f9c
   140021f37:	rex.W (bad) 
   140021f39:	outs   dx,BYTE PTR ds:[rsi]
   140021f3a:	fs ins BYTE PTR es:[rdi],dx
   140021f3c:	gs add dh,ah
   140021f3f:	add    DWORD PTR [rdi+0x65],eax
   140021f42:	je     0x140021f89
   140021f44:	js     0x140021faf
   140021f46:	je     0x140021f8b
   140021f48:	outs   dx,DWORD PTR ds:[rsi]
   140021f49:	fs gs push rax
   140021f4c:	jb     0x140021fbd
   140021f4e:	movsxd esp,DWORD PTR [rbp+0x73]
   140021f51:	jae    0x140021f53
   140021f53:	add    BYTE PTR [rax],cl
   140021f55:	add    eax,0x74696157
   140021f5a:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140021f5c:	jb     0x140021fb1
   140021f5e:	imul   ebp,DWORD PTR [rsi+0x67],0x624f656c
   140021f65:	push   0x65
   140021f67:	movsxd esi,DWORD PTR [rax+rax*1-0x5c]
   140021f6b:	add    BYTE PTR [rbx+0x72],al
   140021f6e:	gs (bad) 
   140021f70:	je     0x140021fd7
   140021f72:	push   rax
   140021f73:	jb     0x140021fe4
   140021f75:	movsxd esp,DWORD PTR [rbp+0x73]
   140021f78:	jae    0x140021fbb
   140021f7a:	add    BYTE PTR [rax],al
   140021f7c:	rex.WR add r8b,BYTE PTR [rdi+0x65]
   140021f80:	je     0x140021fd2
   140021f82:	jb     0x140021ff3
   140021f84:	movsxd eax,DWORD PTR [rcx+0x64]
   140021f87:	fs jb  0x140021fef
   140021f8a:	jae    0x140021fff
   140021f8c:	add    BYTE PTR [rax],al
   140021f8e:	sbb    eax,DWORD PTR [rdx]
   140021f90:	rex.RXB
   140021f91:	gs je  0x140021fe1
   140021f94:	outs   dx,DWORD PTR ds:[rsi]
   140021f95:	fs jne 0x140022004
   140021f98:	gs rex.W (bad) 
   140021f9b:	outs   dx,BYTE PTR ds:[rsi]
   140021f9c:	fs ins BYTE PTR es:[rdi],dx
   140021f9e:	add    BYTE PTR gs:[r8],al
   140021fa2:	add    ecx,DWORD PTR ds:[rdi+rbp*2+0x61]
   140021fa7:	imul   r12,QWORD PTR fs:[rdx+0x72],0x41797261
   140021fb0:	add    BYTE PTR [rax],al
   140021fb2:	out    0x1,eax
   140021fb4:	rex.RXB
   140021fb5:	gs je  0x140021ffd
   140021fb8:	js     0x140022023
   140021fba:	je     0x140021fff
   140021fbc:	outs   dx,DWORD PTR ds:[rsi]
   140021fbd:	fs gs push rsp
   140021fc0:	push   0x64616572
   140021fc5:	add    BYTE PTR [rax],bh
   140021fc7:	add    DWORD PTR [rsi+0x69],eax
   140021fca:	outs   dx,BYTE PTR ds:[rsi]
   140021fcb:	rex.RX imul r14d,DWORD PTR fs:[rdx+0x73],0x6c694674
   140021fd4:	add    BYTE PTR gs:[r8],al
   140021fd8:	add    QWORD PTR [r14+0x69],rax
   140021fdc:	outs   dx,BYTE PTR ds:[rsi]
   140021fdd:	fs rex.WRX
   140021fdf:	gs js  0x140022056
   140021fe2:	imul   r13d,DWORD PTR [rbp+r12*2+0x41],0x46013400
   140021feb:	imul   ebp,DWORD PTR [rsi+0x64],0x736f6c43
   140021ff2:	add    BYTE PTR gs:[rsi],bl
   140021ff5:	add    al,BYTE PTR [rdi+0x65]
   140021ff8:	je     0x140022047
   140021ffa:	outs   dx,DWORD PTR ds:[rsi]
   140021ffb:	fs jne 0x14002206a
   140021ffe:	gs rex.W (bad) 
   140022001:	outs   dx,BYTE PTR ds:[rsi]
   140022002:	fs ins BYTE PTR es:[rdi],dx
   140022004:	gs push rdi
   140022006:	add    BYTE PTR [rax],al
   140022008:	(bad)  
   140022009:	add    DWORD PTR [rbp+0x78],eax
   14002200c:	imul   esi,DWORD PTR [rax+rdx*2+0x72],0x7365636f
   140022014:	jae    0x140022016
   140022016:	retf   
   140022017:	add    BYTE PTR [rbp+riz*2+0x63],al
   14002201b:	outs   dx,DWORD PTR ds:[rsi]
   14002201c:	fs gs push rax
   14002201f:	outs   dx,DWORD PTR ds:[rsi]
   140022020:	imul   ebp,DWORD PTR [rsi+0x74],0xf2007265
   140022027:	add    BYTE PTR [rbp+0x6e],al
   14002202a:	je     0x140022091
   14002202c:	jb     0x140022071
   14002202e:	jb     0x140022099
   140022030:	je     0x14002209b
   140022032:	movsxd esp,DWORD PTR [rcx+0x6c]
   140022035:	push   rbx
   140022036:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14002203b:	outs   dx,BYTE PTR ds:[rsi]
   14002203c:	add    BYTE PTR [rax],al
   14002203e:	cmp    eax,DWORD PTR [rbx]
   140022040:	rex.WR
   140022041:	gs (bad) 
   140022043:	jbe    0x1400220aa
   140022045:	rex.XB jb 0x1400220b1
   140022048:	je     0x1400220b3
   14002204a:	movsxd esp,DWORD PTR [rcx+0x6c]
   14002204d:	push   rbx
   14002204e:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140022053:	outs   dx,BYTE PTR ds:[rsi]
   140022054:	add    BYTE PTR [rax],al
   140022056:	rol    DWORD PTR [rdx],cl
   140022058:	rex.W
   140022059:	gs (bad) 
   14002205b:	jo     0x14002209e
   14002205d:	ins    BYTE PTR es:[rdi],dx
   14002205e:	ins    BYTE PTR es:[rdi],dx
   14002205f:	outs   dx,DWORD PTR ds:[rsi]
   140022060:	movsxd eax,DWORD PTR [rax]
   140022062:	fiadd  DWORD PTR [rdx]
   140022064:	rex.W
   140022065:	gs (bad) 
   140022067:	jo     0x1400220bb
   140022069:	gs rex.B ins BYTE PTR es:[rdi],dx
   14002206c:	ins    BYTE PTR es:[rdi],dx
   14002206d:	outs   dx,DWORD PTR ds:[rsi]
   14002206e:	movsxd eax,DWORD PTR [rax]
   140022070:	xlat   BYTE PTR ds:[rbx]
   140022071:	add    cl,BYTE PTR [rax+0x65]
   140022074:	(bad)  
   140022075:	jo     0x1400220bd
   140022077:	jb     0x1400220de
   140022079:	add    BYTE PTR gs:[rax],al
   14002207c:	sub    eax,DWORD PTR [rcx]
   14002207e:	imul   r13d,DWORD PTR [rbp+r12*2+0x54],0x54656d69
   140022087:	outs   dx,DWORD PTR ds:[rsi]
   140022088:	push   rbx
   140022089:	jns    0x1400220fe
   14002208b:	je     0x1400220f2
   14002208d:	ins    DWORD PTR es:[rdi],dx
   14002208e:	push   rsp
   14002208f:	imul   ebp,DWORD PTR [rbp+0x65],0x12a0000
   140022096:	imul   r13d,DWORD PTR [rbp+r12*2+0x54],0x54656d69
   14002209f:	outs   dx,DWORD PTR ds:[rsi]
   1400220a0:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400220a2:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400220a5:	imul   r13d,DWORD PTR [rbp+r12*2+0x54],0x656d69
   1400220ae:	fld    DWORD PTR [rcx]
   1400220b0:	rex.RXB
   1400220b1:	gs je  0x1400220f8
   1400220b4:	jb     0x14002211f
   1400220b6:	jbe    0x14002211d
   1400220b8:	push   rsp
   1400220b9:	jns    0x14002212b
   1400220bb:	add    BYTE PTR gs:[r9],dil
   1400220bf:	add    DWORD PTR [rsi+0x69],eax
   1400220c2:	outs   dx,BYTE PTR ds:[rsi]
   1400220c3:	rex.RX imul r14d,DWORD PTR fs:[rdx+0x73],0x6c694674
   1400220cc:	gs rex.RB js 0x140022111
   1400220d0:	add    BYTE PTR [rax],al
   1400220d2:	imul   eax,DWORD PTR [rbx],0x746c754d
   1400220d8:	imul   eax,DWORD PTR [rdx+0x79],0x6f546574
   1400220df:	push   rdi
   1400220e0:	imul   esp,DWORD PTR [rbp+riz*2+0x43],0x726168
   1400220e8:	in     al,dx
   1400220e9:	add    DWORD PTR [rdi+0x65],eax
   1400220ec:	je     0x140022134
   1400220ee:	imul   ebp,DWORD PTR [rbp+riz*2+0x41],0x69727474
   1400220f6:	(bad)  
   1400220f7:	jne    0x14002216d
   1400220f9:	gs jae 0x14002213d
   1400220fc:	add    BYTE PTR [rax],al
   1400220fe:	and    BYTE PTR [rcx],al
   140022100:	rex.RB js 0x14002216c
   140022103:	je     0x140022159
   140022105:	push   0x64616572
   14002210a:	add    BYTE PTR [rax],al
   14002210c:	retf   
   14002210d:	add    DWORD PTR [rdi+0x65],eax
   140022110:	je     0x140022155
   140022112:	jne    0x140022186
   140022114:	jb     0x14002217b
   140022116:	outs   dx,BYTE PTR ds:[rsi]
   140022117:	je     0x14002216d
   140022119:	push   0x64616572
   14002211e:	rex.WB
   14002211f:	add    BYTE PTR fs:[rax],al
   140022122:	mov    ah,0x0
   140022124:	rex.XB jb 0x14002218c
   140022127:	(bad)  
   140022128:	je     0x14002218f
   14002212a:	push   rsp
   14002212b:	push   0x64616572
   140022130:	add    BYTE PTR [rax],al
   140022132:	jmp    0x140022136
   140022134:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140022136:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14002213e:	rex.XB jb 0x1400221aa
   140022141:	je     0x1400221ac
   140022143:	movsxd esp,DWORD PTR [rcx+0x6c]
   140022146:	push   rbx
   140022147:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14002214c:	outs   dx,BYTE PTR ds:[rsi]
   14002214d:	rex.B outs dx,BYTE PTR ds:[rsi]
   14002214f:	fs push rbx
   140022151:	jo     0x1400221bc
   140022153:	outs   dx,BYTE PTR ds:[rsi]
   140022154:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140022156:	jne    0x1400221c6
   140022158:	je     0x14002215a
   14002215a:	rol    BYTE PTR [rax],cl
   14002215c:	rex.R
   14002215d:	gs ins BYTE PTR es:[rdi],dx
   14002215f:	gs je  0x1400221c7
   140022162:	rex.XB jb 0x1400221ce
   140022165:	je     0x1400221d0
   140022167:	movsxd esp,DWORD PTR [rcx+0x6c]
   14002216a:	push   rbx
   14002216b:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140022170:	outs   dx,BYTE PTR ds:[rsi]
   140022171:	add    dh,ch
   140022173:	add    BYTE PTR [rbp+0x6e],al
   140022176:	movsxd ebp,DWORD PTR [rdi+0x64]
   140022179:	gs push rax
   14002217b:	outs   dx,DWORD PTR ds:[rsi]
   14002217c:	imul   ebp,DWORD PTR [rsi+0x74],0x41007265
   140022183:	add    ecx,DWORD PTR [rdi+rbp*2+0x61]
   140022187:	imul   r12,QWORD PTR fs:[rdx+0x72],0x57797261
   140022190:	add    BYTE PTR [rax],al
   140022192:	loop   0x140022198
   140022194:	push   rbp
   140022195:	outs   dx,BYTE PTR ds:[rsi]
   140022196:	push   0x6c646e61
   14002219b:	gs fs rex.RB js 0x140022203
   1400221a0:	gs jo  0x140022217
   1400221a3:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   1400221aa:	gs jb  0x1400221ad
   1400221ad:	add    BYTE PTR [rbx+0x74655304],dh
   1400221b3:	push   rbp
   1400221b4:	outs   dx,BYTE PTR ds:[rsi]
   1400221b5:	push   0x6c646e61
   1400221ba:	gs fs rex.RB js 0x140022222
   1400221bf:	gs jo  0x140022236
   1400221c2:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   1400221c9:	gs jb  0x1400221cc
   1400221cc:	add    al,BYTE PTR [rbx]
   1400221ce:	rex.WB jae 0x140022215
   1400221d1:	gs (bad) 
   1400221d3:	jne    0x14002223c
   1400221d5:	addr32 gs jb 0x140022229
   1400221d9:	jb     0x140022240
   1400221db:	jae    0x140022242
   1400221dd:	outs   dx,BYTE PTR ds:[rsi]
   1400221de:	je     0x1400221e0
   1400221e0:	es add al,0x52
   1400221e3:	je     0x140022251
   1400221e5:	push   rsi
   1400221e6:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   1400221ed:	outs   dx,BYTE PTR ds:[rsi]
   1400221ee:	ja     0x140022259
   1400221f0:	outs   dx,BYTE PTR ds:[rsi]
   1400221f1:	add    BYTE PTR fs:[rax],al
   1400221f4:	(bad)  
   1400221f5:	add    al,0x52
   1400221f7:	je     0x140022265
   1400221f9:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400221fb:	outs   dx,DWORD PTR ds:[rsi]
   1400221fc:	imul   esi,DWORD PTR [rbp+0x70],0x46
   140022200:	jne    0x140022270
   140022202:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140022206:	outs   dx,BYTE PTR ds:[rsi]
   140022207:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140022209:	je     0x14002227d
   14002220b:	jns    0x14002220d
   14002220d:	add    BYTE PTR [rax],bl
   14002220f:	add    al,0x52
   140022211:	je     0x14002227f
   140022213:	rex.XB (bad) 
   140022215:	jo     0x14002228b
   140022217:	jne    0x14002228b
   140022219:	rex.XB outs dx,DWORD PTR gs:[rsi]
   14002221c:	outs   dx,BYTE PTR ds:[rsi]
   14002221d:	je     0x140022284
   14002221f:	js     0x140022295
   140022221:	add    dh,cl
   140022223:	add    al,0x54
   140022225:	gs jb  0x140022295
   140022228:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   14002222f:	outs   dx,DWORD PTR ds:[rsi]
   140022230:	movsxd esp,DWORD PTR [rbp+0x73]
   140022233:	jae    0x140022235
   140022235:	add    dh,al
   140022237:	add    DWORD PTR [rdi+0x65],eax
   14002223a:	je     0x14002227f
   14002223c:	jne    0x1400222b0
   14002223e:	jb     0x1400222a5
   140022240:	outs   dx,BYTE PTR ds:[rsi]
   140022241:	je     0x140022293
   140022243:	jb     0x1400222b4
   140022245:	movsxd esp,DWORD PTR [rbp+0x73]
   140022248:	jae    0x14002224a
   14002224a:	pop    rdx
   14002224b:	add    DWORD PTR [rsi+0x6c],eax
   14002224e:	jae    0x140022297
   140022250:	gs je  0x1400222a9
   140022253:	(bad)  
   140022254:	ins    BYTE PTR es:[rdi],dx
   140022255:	jne    0x1400222bc
   140022257:	add    BYTE PTR [rbx+0x1],bl
   14002225a:	rex.RX ins BYTE PTR es:[rdi],dx
   14002225c:	jae    0x1400222b1
   14002225e:	gs je  0x1400222b7
   140022261:	(bad)  
   140022262:	ins    BYTE PTR es:[rdi],dx
   140022263:	jne    0x1400222ca
   140022265:	add    BYTE PTR [rcx+0x1],bl
   140022268:	rex.RX ins BYTE PTR es:[rdi],dx
   14002226a:	jae    0x1400222b2
   14002226c:	jb     0x1400222d3
   14002226e:	add    BYTE PTR gs:[rax+0x74655304],al
   140022275:	rex.WR (bad) 
   140022277:	jae    0x1400222ed
   140022279:	rex.RB jb 0x1400222ee
   14002227c:	outs   dx,DWORD PTR ds:[rsi]
   14002227d:	jb     0x14002227f
   14002227f:	add    BYTE PTR [rax+0x1],bl
   140022282:	rex.RX ins BYTE PTR es:[rdi],dx
   140022284:	jae    0x1400222c7
   140022286:	ins    BYTE PTR es:[rdi],dx
   140022287:	ins    BYTE PTR es:[rdi],dx
   140022288:	outs   dx,DWORD PTR ds:[rsi]
   140022289:	movsxd eax,DWORD PTR [rax]
   14002228b:	add    BYTE PTR [rip+0x6c745204],ah        # 0x1ac767495
   140022291:	push   rbp
   140022292:	outs   dx,BYTE PTR ds:[rsi]
   140022293:	ja     0x1400222fe
   140022295:	outs   dx,BYTE PTR ds:[rsi]
   140022296:	fs rex.RB js 0x14002229a
   14002229a:	xor    al,0x5
   14002229c:	push   rdi
   14002229d:	jb     0x140022308
   14002229f:	je     0x140022306
   1400222a1:	imul   r13d,DWORD PTR [rbp+r12*2+0x0],0x6547026b
   1400222aa:	je     0x1400222ff
   1400222ac:	je     0x140022312
   1400222ae:	rex.W (bad) 
   1400222b0:	outs   dx,BYTE PTR ds:[rsi]
   1400222b1:	fs ins BYTE PTR es:[rdi],dx
   1400222b3:	add    BYTE PTR gs:[rax],al
   1400222b6:	sbb    al,BYTE PTR [rdx]
   1400222b8:	rex.RXB
   1400222b9:	gs je  0x140022309
   1400222bc:	outs   dx,DWORD PTR ds:[rsi]
   1400222bd:	fs jne 0x14002232c
   1400222c0:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x57656d61
   1400222ca:	add    BYTE PTR [rax],al
   1400222cc:	and    BYTE PTR [rip+0x65646957],al        # 0x1a5668c29
   1400222d2:	rex.XB push 0x6f547261
   1400222d8:	rex.WRB jne 0x140022347
   1400222db:	je     0x140022346
   1400222dd:	rex.X jns 0x140022354
   1400222e0:	add    BYTE PTR gs:[rdi+0x1],ah
   1400222e4:	rex.RX jb 0x14002234c
   1400222e7:	rex.RB outs dx,BYTE PTR gs:[rsi]
   1400222ea:	jbe    0x140022355
   1400222ec:	jb     0x14002235d
   1400222ee:	outs   dx,BYTE PTR ds:[rsi]
   1400222ef:	ins    DWORD PTR es:[rdi],dx
   1400222f0:	outs   dx,BYTE PTR gs:[rsi]
   1400222f2:	je     0x140022347
   1400222f4:	je     0x140022368
   1400222f6:	imul   ebp,DWORD PTR [rsi+0x67],0xe1005773
   1400222fd:	add    DWORD PTR [rdi+0x65],eax
   140022300:	je     0x140022347
   140022302:	outs   dx,BYTE PTR ds:[rsi]
   140022303:	jbe    0x14002236e
   140022305:	jb     0x140022376
   140022307:	outs   dx,BYTE PTR ds:[rsi]
   140022308:	ins    DWORD PTR es:[rdi],dx
   140022309:	outs   dx,BYTE PTR gs:[rsi]
   14002230b:	je     0x140022360
   14002230d:	je     0x140022381
   14002230f:	imul   ebp,DWORD PTR [rsi+0x67],0x5773
   140022316:	jl     0x14002231c
   140022318:	push   rbx
   140022319:	gs je  0x140022364
   14002231c:	(bad)  
   14002231d:	outs   dx,BYTE PTR ds:[rsi]
   14002231e:	fs ins BYTE PTR es:[rdi],dx
   140022320:	rex.XB outs dx,DWORD PTR gs:[rsi]
   140022323:	jne    0x140022393
   140022325:	je     0x140022327
   140022327:	add    dl,bh
   140022329:	add    DWORD PTR [rdi+0x65],eax
   14002232c:	je     0x140022374
   14002232e:	imul   ebp,DWORD PTR [rbp+riz*2+0x54],0x657079
   140022336:	push   0x2
   140022338:	rex.RXB
   140022339:	gs je  0x14002238f
   14002233c:	je     0x14002239f
   14002233e:	jb     0x1400223b4
   140022340:	jne    0x1400223b2
   140022342:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140022344:	outs   dx,WORD PTR ds:[rsi]
   140022346:	push   rdi
   140022347:	add    bl,bl
   140022349:	add    cl,BYTE PTR [rax+0x65]
   14002234c:	(bad)  
   14002234d:	jo     0x1400223a2
   14002234f:	gs je  0x14002239b
   140022352:	outs   dx,BYTE PTR ds:[rsi]
   140022353:	outs   dx,WORD PTR ds:[rsi]
   140022355:	jb     0x1400223c4
   140022357:	(bad)  
   140022358:	je     0x1400223c3
   14002235a:	outs   dx,DWORD PTR ds:[rsi]
   14002235b:	outs   dx,BYTE PTR ds:[rsi]
   14002235c:	add    BYTE PTR [rax],al
   14002235e:	stos   BYTE PTR es:[rdi],al
   14002235f:	add    al,BYTE PTR [rdi+0x65]
   140022362:	je     0x1400223ba
   140022364:	gs jb  0x1400223da
   140022367:	imul   ebp,DWORD PTR [rdi+0x6e],0x2d50000
   14002236e:	rex.W
   14002236f:	gs (bad) 
   140022371:	jo     0x1400223b6
   140022373:	jb     0x1400223da
   140022375:	(bad)  
   140022376:	je     0x1400223dd
   140022378:	add    BYTE PTR [rax],al
   14002237a:	(bad)  
   14002237b:	add    al,BYTE PTR [rdi+0x65]
   14002237e:	je     0x1400223d4
   140022380:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   140022387:	je     0x140022389
   140022389:	add    bh,al
   14002238b:	add    DWORD PTR [rdi+0x65],eax
   14002238e:	je     0x1400223d3
   140022390:	jne    0x140022404
   140022392:	jb     0x1400223f9
   140022394:	outs   dx,BYTE PTR ds:[rsi]
   140022395:	je     0x1400223e7
   140022397:	jb     0x140022408
   140022399:	movsxd esp,DWORD PTR [rbp+0x73]
   14002239c:	jae    0x1400223e7
   14002239e:	add    BYTE PTR fs:[rax+0x74654702],al
   1400223a5:	push   rbx
   1400223a6:	jns    0x14002241b
   1400223a8:	je     0x14002240f
   1400223aa:	ins    DWORD PTR es:[rdi],dx
   1400223ab:	push   rsp
   1400223ac:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   1400223b3:	ins    BYTE PTR es:[rdi],dx
   1400223b4:	gs push rsp
   1400223b6:	imul   ebp,DWORD PTR [rbp+0x65],0x5304c000
   1400223bd:	ins    BYTE PTR es:[rdi],dx
   1400223be:	gs gs jo 0x1400223c2
   1400223c2:	xchg   esp,eax
   1400223c3:	add    al,0x53
   1400223c5:	gs je  0x14002241b
   1400223c8:	je     0x14002242e
   1400223ca:	rex.W (bad) 
   1400223cc:	outs   dx,BYTE PTR ds:[rsi]
   1400223cd:	fs ins BYTE PTR es:[rdi],dx
   1400223cf:	add    BYTE PTR gs:[rax],al
   1400223d2:	movabs al,ds:0x736e6f4374654701
   1400223db:	outs   dx,DWORD PTR ds:[rsi]
   1400223dc:	ins    BYTE PTR es:[rdi],dx
   1400223dd:	gs rex.XB push r8
   1400223e0:	add    BYTE PTR [rax],al
   1400223e2:	mov    dl,0x1
   1400223e4:	rex.RXB
   1400223e5:	gs je  0x14002242b
   1400223e8:	outs   dx,DWORD PTR ds:[rsi]
   1400223e9:	outs   dx,BYTE PTR ds:[rsi]
   1400223ea:	jae    0x14002245b
   1400223ec:	ins    BYTE PTR es:[rdi],dx
   1400223ed:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   1400223f0:	fs add BYTE PTR gs:[rax],al
   1400223f4:	inc    DWORD PTR [rcx]
   1400223f6:	rex.RXB
   1400223f7:	gs je  0x140022440
   1400223fa:	jne    0x140022468
   1400223fc:	ins    BYTE PTR es:[rdi],dx
   1400223fd:	push   rax
   1400223fe:	(bad)  
   1400223ff:	je     0x140022469
   140022401:	rex.WRX (bad) 
   140022403:	ins    DWORD PTR es:[rdi],dx
   140022404:	add    BYTE PTR gs:[r8],al
   140022408:	repz add DWORD PTR [rdi+0x65],eax
   14002240c:	je     0x140022454
   14002240e:	imul   ebp,DWORD PTR [rbp+riz*2+0x49],0x726f666e
   140022416:	ins    DWORD PTR es:[rdi],dx
   140022417:	(bad)  
   140022418:	je     0x140022483
   14002241a:	outs   dx,DWORD PTR ds:[rsi]
   14002241b:	outs   dx,BYTE PTR ds:[rsi]
   14002241c:	rex.X jns 0x140022467
   14002241f:	(bad)  
   140022420:	outs   dx,BYTE PTR ds:[rsi]
   140022421:	fs ins BYTE PTR es:[rdi],dx
   140022423:	add    BYTE PTR gs:[rax],al
   140022426:	pop    QWORD PTR [rbx]
   140022428:	push   rax
   140022429:	gs imul ecx,DWORD PTR gs:[rsi+0x61],0x6d
   14002242f:	gs fs push rax
   140022432:	imul   esi,DWORD PTR [rax+0x65],0x43008800
   140022439:	jb     0x1400224a0
   14002243b:	(bad)  
   14002243c:	je     0x1400224a3
   14002243e:	imul   r13d,DWORD PTR [rbp+r12*2+0x41],0x4701c500
   140022447:	gs je  0x14002248d
   14002244a:	jne    0x1400224be
   14002244c:	jb     0x1400224b3
   14002244e:	outs   dx,BYTE PTR ds:[rsi]
   14002244f:	je     0x140022495
   140022451:	imul   esi,DWORD PTR [rdx+0x65],0x726f7463
   140022458:	jns    0x1400224b1
   14002245a:	add    BYTE PTR [rax],al
   14002245c:	pop    rbp
   14002245d:	add    DWORD PTR [rsi+0x6c],eax
   140022460:	jne    0x1400224d5
   140022462:	push   0x656c6946
   140022467:	rex.X jne 0x1400224d0
   14002246a:	data16 gs jb 0x1400224e1
   14002246e:	add    BYTE PTR [rax],al
   140022470:	gs add al,0x53
   140022473:	gs je  0x1400224bb
   140022476:	outs   dx,BYTE PTR ds:[rsi]
   140022477:	jbe    0x1400224e2
   140022479:	jb     0x1400224ea
   14002247b:	outs   dx,BYTE PTR ds:[rsi]
   14002247c:	ins    DWORD PTR es:[rdi],dx
   14002247d:	outs   dx,BYTE PTR gs:[rsi]
   14002247f:	je     0x1400224d7
   140022481:	(bad)  
   140022482:	jb     0x1400224ed
   140022484:	(bad)  
   140022485:	(bad)  
   140022486:	ins    BYTE PTR es:[rdi],dx
   140022487:	gs push rdi
   140022489:	add    BYTE PTR [rsp+rax*1+0x53],ah
   14002248d:	gs je  0x1400224d5
   140022490:	outs   dx,BYTE PTR ds:[rsi]
   140022491:	jbe    0x1400224fc
   140022493:	jb     0x140022504
   140022495:	outs   dx,BYTE PTR ds:[rsi]
   140022496:	ins    DWORD PTR es:[rdi],dx
   140022497:	outs   dx,BYTE PTR gs:[rsi]
   140022499:	je     0x1400224f1
   14002249b:	(bad)  
   14002249c:	jb     0x140022507
   14002249e:	(bad)  
   14002249f:	(bad)  
   1400224a0:	ins    BYTE PTR es:[rdi],dx
   1400224a1:	add    BYTE PTR gs:[r8+0x1],dil
   1400224a6:	rex.RXB
   1400224a7:	gs je  0x1400224ed
   1400224aa:	push   rax
   1400224ab:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400224ad:	outs   dx,WORD PTR ds:[rsi]
   1400224af:	add    BYTE PTR [rsi+0x1],ch
   1400224b2:	rex.RXB
   1400224b3:	gs je  0x1400224f7
   1400224b6:	rex.XB push r8
   1400224b8:	add    BYTE PTR [rax],al
   1400224ba:	add    al,BYTE PTR ds:[rdi+0x65]
   1400224be:	je     0x14002250f
   1400224c0:	rex.RB
   1400224c1:	rex.WRB
   1400224c2:	rex.XB push r8
   1400224c4:	add    BYTE PTR [rax],al
   1400224c6:	or     al,0x3
   1400224c8:	rex.WB jae 0x140022521
   1400224cb:	(bad)  
   1400224cc:	ins    BYTE PTR es:[rdi],dx
   1400224cd:	imul   esp,DWORD PTR [rbx+rax*2+0x6f],0x61506564
   1400224d5:	addr32 gs add ah,bl
   1400224d9:	add    cl,BYTE PTR [rax+0x65]
   1400224dc:	(bad)  
   1400224dd:	jo     0x140022532
   1400224df:	imul   edi,DWORD PTR [rdx+0x65],0x640000
   1400224e6:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400224e8:	ins    DWORD PTR es:[rdi],dx
   1400224e9:	jo     0x14002254c
   1400224eb:	jb     0x140022552
   1400224ed:	push   rbx
   1400224ee:	je     0x140022562
   1400224f0:	imul   ebp,DWORD PTR [rsi+0x67],0x74000057
   1400224f7:	add    al,0x53
   1400224f9:	gs je  0x140022542
   1400224fc:	imul   ebp,DWORD PTR [rbp+riz*2+0x50],0x746e696f
   140022504:	gs jb  0x140022507
   140022507:	add    bl,al
   140022509:	add    edx,DWORD PTR [rdx+0x65]
   14002250c:	(bad)  
   14002250d:	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x0],0x57053300
   140022517:	jb     0x140022582
   140022519:	je     0x140022580
   14002251b:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14002251d:	outs   dx,BYTE PTR ds:[rsi]
   14002251e:	jae    0x14002258f
   140022520:	ins    BYTE PTR es:[rdi],dx
   140022521:	gs push rdi
   140022523:	add    dl,bl
   140022525:	add    DWORD PTR [rdi+0x65],eax
   140022528:	je     0x14002256e
   14002252a:	jb     0x140022595
   14002252c:	jbe    0x140022593
   14002252e:	push   rsp
   14002252f:	jns    0x1400225a1
   140022531:	gs push rdi
   140022533:	add    BYTE PTR [rcx+0x4],ah
   140022536:	push   rbx
   140022537:	gs je  0x14002257f
   14002253a:	outs   dx,BYTE PTR ds:[rsi]
   14002253b:	fs rex.WRXB
   14002253d:	imul   r13w,WORD PTR [rbp+r12*2+0x0],0x5100
   140022545:	add    al,BYTE PTR [rdi+0x65]
   140022548:	je     0x14002259a
   14002254a:	jb     0x1400225bb
   14002254c:	movsxd esp,DWORD PTR [rbp+0x73]
   14002254f:	jae    0x140022599
   140022551:	gs (bad) 
   140022553:	jo     0x140022555
   140022555:	add    BYTE PTR [rdi+0x74654702],bl
   14002255b:	push   rsp
   14002255c:	imul   ebp,DWORD PTR [rbp+0x65],0x656e6f5a
   140022563:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140022565:	outs   dx,WORD PTR ds:[rsi]
   140022567:	jb     0x1400225d6
   140022569:	(bad)  
   14002256a:	je     0x1400225d5
   14002256c:	outs   dx,DWORD PTR ds:[rsi]
   14002256d:	outs   dx,BYTE PTR ds:[rsi]
   14002256e:	add    BYTE PTR [rax],al
   140022570:	(bad)  
   140022571:	add    ecx,DWORD PTR [rbx+rax*2+0x4d]
   140022575:	(bad)  
   140022576:	jo     0x1400225cb
   140022578:	je     0x1400225ec
   14002257a:	imul   ebp,DWORD PTR [rsi+0x67],0x70000057
   140022581:	add    al,BYTE PTR [rdi+0x65]
   140022584:	je     0x1400225d9
   140022586:	je     0x1400225fa
   140022588:	imul   ebp,DWORD PTR [rsi+0x67],0x65707954
   14002258f:	push   rdi
   140022590:	add    BYTE PTR [rax],al
   140022592:	pop    QWORD PTR [rax]
   140022594:	rex.XB jb 0x1400225fc
   140022597:	(bad)  
   140022598:	je     0x1400225ff
   14002259a:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x52454b00
   1400225a3:	rex.WRX
   1400225a4:	rex.RB
   1400225a5:	xor    r14,QWORD PTR [rdx]
   1400225a8:	cs fs ins BYTE PTR es:[rdi],dx
   1400225ab:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .data:

0000000140023000 <.data>:
   140023000:	sbb    BYTE PTR [rcx+rax*1+0x140],ah
   140023007:	add    BYTE PTR [rax],cl
   140023009:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002300a:	add    DWORD PTR [rax+0x1],eax
   14002300d:	add    BYTE PTR [rax],al
   14002300f:	add    al,bh
   140023011:	movabs ds:0xa3ec000000014001,eax
   14002301a:	add    DWORD PTR [rax+0x1],eax
   14002301d:	add    BYTE PTR [rax],al
   14002301f:	add    ah,ch
   140023021:	movabs ds:0xa418000000014001,eax
   14002302a:	add    DWORD PTR [rax+0x1],eax
   14002302d:	add    BYTE PTR [rax],al
   14002302f:	add    BYTE PTR [rax],cl
   140023031:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140023032:	add    DWORD PTR [rax+0x1],eax
   140023035:	add    BYTE PTR [rax],al
   140023037:	add    al,bh
   140023039:	movabs ds:0xa490000000014001,eax
   140023042:	add    DWORD PTR [rax+0x1],eax
   140023045:	add    BYTE PTR [rax],al
   140023047:	add    BYTE PTR [rax],bl
   140023049:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002304a:	add    DWORD PTR [rax+0x1],eax
   14002304d:	add    BYTE PTR [rax],al
   14002304f:	add    BYTE PTR [rax],cl
   140023051:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140023052:	add    DWORD PTR [rax+0x1],eax
   140023055:	add    BYTE PTR [rax],al
   140023057:	add    al,bh
   140023059:	movabs ds:0xa418000000014001,eax
   140023062:	add    DWORD PTR [rax+0x1],eax
   140023065:	add    BYTE PTR [rax],al
   140023067:	add    BYTE PTR [rax],cl
   140023069:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002306a:	add    DWORD PTR [rax+0x1],eax
   14002306d:	add    BYTE PTR [rax],al
   14002306f:	add    al,bh
   140023071:	movabs ds:0xffff000000014001,eax
   14002307a:	(bad)  
   14002307b:	inc    DWORD PTR [rax]
   14002307d:	add    BYTE PTR [rax],al
   14002307f:	add    BYTE PTR [rax-0x4c],dl
   140023082:	add    DWORD PTR [rax+0x1],eax
   140023085:	add    BYTE PTR [rax],al
   140023087:	add    BYTE PTR [rax],bl
   140023089:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002308a:	add    DWORD PTR [rax+0x1],eax
   14002308d:	add    BYTE PTR [rax],al
   14002308f:	add    BYTE PTR [rax],cl
   140023091:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140023092:	add    DWORD PTR [rax+0x1],eax
   140023095:	add    BYTE PTR [rax],al
   140023097:	add    al,bh
   140023099:	movabs ds:0xbcd0000000014001,eax
   1400230a2:	add    DWORD PTR [rax+0x1],eax
   1400230a5:	add    BYTE PTR [rax],al
   1400230a7:	add    BYTE PTR [rax-0x43],ah
   1400230aa:	add    DWORD PTR [rax+0x1],eax
   1400230ad:	add    BYTE PTR [rax],al
   1400230af:	add    BYTE PTR [rbp+rdi*4+0x1],bl
   1400230b3:	rex add DWORD PTR [rax],eax
   1400230b6:	add    BYTE PTR [rax],al
   1400230b8:	add    DWORD PTR [rax],eax
   1400230ba:	add    BYTE PTR [rax],al
   1400230bc:	add    BYTE PTR [rax],al
   1400230be:	add    BYTE PTR [rax],al
   1400230c0:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   1400230c6:	add    BYTE PTR [rax],al
   1400230c8:	int    0x5d
   1400230ca:	and    dl,dl
   1400230cc:	data16 (bad) 
   1400230ce:	(bad)  
   1400230cf:	jmp    QWORD PTR [rax+0x140025c]
	...
   1400230dd:	add    BYTE PTR [rax],al
   1400230df:	add    BYTE PTR [rax+0x140025c],ah
   1400230e5:	add    BYTE PTR [rax],al
   1400230e7:	add    BYTE PTR [rcx],al
   1400230e9:	add    DWORD PTR [rax],eax
	...
   1400230f3:	add    BYTE PTR [rax],al
   1400230f5:	adc    BYTE PTR [rax],al
	...
   140023117:	add    BYTE PTR [rdx],al
   140023119:	add    BYTE PTR [rax],al
   14002311b:	add    BYTE PTR [rcx],al
	...
   140023145:	add    BYTE PTR [rax],al
   140023147:	add    BYTE PTR [rdx],al
   140023149:	add    BYTE PTR [rax],al
   14002314b:	add    BYTE PTR [rdx],al
	...
   14002348d:	add    BYTE PTR [rax],al
   14002348f:	add    BYTE PTR [rcx],al
   140023491:	add    BYTE PTR [rax],al
   140023493:	add    BYTE PTR [rsi],dl
   140023495:	add    BYTE PTR [rax],al
   140023497:	add    BYTE PTR [rdx],al
   140023499:	add    BYTE PTR [rax],al
   14002349b:	add    BYTE PTR [rdx],al
   14002349d:	add    BYTE PTR [rax],al
   14002349f:	add    BYTE PTR [rbx],al
   1400234a1:	add    BYTE PTR [rax],al
   1400234a3:	add    BYTE PTR [rdx],al
   1400234a5:	add    BYTE PTR [rax],al
   1400234a7:	add    BYTE PTR [rax+rax*1],al
   1400234aa:	add    BYTE PTR [rax],al
   1400234ac:	sbb    BYTE PTR [rax],al
   1400234ae:	add    BYTE PTR [rax],al
   1400234b0:	add    eax,0xd000000
   1400234b5:	add    BYTE PTR [rax],al
   1400234b7:	add    BYTE PTR [rsi],al
   1400234b9:	add    BYTE PTR [rax],al
   1400234bb:	add    BYTE PTR [rcx],cl
   1400234bd:	add    BYTE PTR [rax],al
   1400234bf:	add    BYTE PTR [rdi],al
   1400234c1:	add    BYTE PTR [rax],al
   1400234c3:	add    BYTE PTR [rax+rax*1],cl
   1400234c6:	add    BYTE PTR [rax],al
   1400234c8:	or     BYTE PTR [rax],al
   1400234ca:	add    BYTE PTR [rax],al
   1400234cc:	or     al,0x0
   1400234ce:	add    BYTE PTR [rax],al
   1400234d0:	or     DWORD PTR [rax],eax
   1400234d2:	add    BYTE PTR [rax],al
   1400234d4:	or     al,0x0
   1400234d6:	add    BYTE PTR [rax],al
   1400234d8:	or     al,BYTE PTR [rax]
   1400234da:	add    BYTE PTR [rax],al
   1400234dc:	(bad)  
   1400234dd:	add    BYTE PTR [rax],al
   1400234df:	add    BYTE PTR [rbx],cl
   1400234e1:	add    BYTE PTR [rax],al
   1400234e3:	add    BYTE PTR [rax],cl
   1400234e5:	add    BYTE PTR [rax],al
   1400234e7:	add    BYTE PTR [rax+rax*1],cl
   1400234ea:	add    BYTE PTR [rax],al
   1400234ec:	(bad)  
   1400234ed:	add    BYTE PTR [rax],al
   1400234ef:	add    BYTE PTR [rip+0x16000000],cl        # 0x1560234f5
   1400234f5:	add    BYTE PTR [rax],al
   1400234f7:	add    BYTE PTR [rdi],cl
   1400234f9:	add    BYTE PTR [rax],al
   1400234fb:	add    BYTE PTR [rdx],al
   1400234fd:	add    BYTE PTR [rax],al
   1400234ff:	add    BYTE PTR [rax],dl
   140023501:	add    BYTE PTR [rax],al
   140023503:	add    BYTE PTR [rip+0x11000000],cl        # 0x151023509
   140023509:	add    BYTE PTR [rax],al
   14002350b:	add    BYTE PTR [rdx],dl
   14002350d:	add    BYTE PTR [rax],al
   14002350f:	add    BYTE PTR [rdx],dl
   140023511:	add    BYTE PTR [rax],al
   140023513:	add    BYTE PTR [rdx],al
   140023515:	add    BYTE PTR [rax],al
   140023517:	add    BYTE PTR [rcx],ah
   140023519:	add    BYTE PTR [rax],al
   14002351b:	add    BYTE PTR [rip+0x35000000],cl        # 0x175023521
   140023521:	add    BYTE PTR [rax],al
   140023523:	add    BYTE PTR [rdx],al
   140023525:	add    BYTE PTR [rax],al
   140023527:	add    BYTE PTR [rcx+0x0],al
   14002352a:	add    BYTE PTR [rax],al
   14002352c:	or     eax,0x43000000
   140023531:	add    BYTE PTR [rax],al
   140023533:	add    BYTE PTR [rdx],al
   140023535:	add    BYTE PTR [rax],al
   140023537:	add    BYTE PTR [rax+0x0],dl
   14002353a:	add    BYTE PTR [rax],al
   14002353c:	adc    DWORD PTR [rax],eax
   14002353e:	add    BYTE PTR [rax],al
   140023540:	push   rdx
   140023541:	add    BYTE PTR [rax],al
   140023543:	add    BYTE PTR [rip+0x53000000],cl        # 0x193023549
   140023549:	add    BYTE PTR [rax],al
   14002354b:	add    BYTE PTR [rip+0x57000000],cl        # 0x197023551
   140023551:	add    BYTE PTR [rax],al
   140023553:	add    BYTE PTR [rsi],dl
   140023555:	add    BYTE PTR [rax],al
   140023557:	add    BYTE PTR [rcx+0x0],bl
   14002355a:	add    BYTE PTR [rax],al
   14002355c:	or     eax,DWORD PTR [rax]
   14002355e:	add    BYTE PTR [rax],al
   140023560:	ins    BYTE PTR es:[rdi],dx
   140023561:	add    BYTE PTR [rax],al
   140023563:	add    BYTE PTR [rip+0x6d000000],cl        # 0x1ad023569
   140023569:	add    BYTE PTR [rax],al
   14002356b:	add    BYTE PTR [rax],ah
   14002356d:	add    BYTE PTR [rax],al
   14002356f:	add    BYTE PTR [rax+0x0],dh
   140023572:	add    BYTE PTR [rax],al
   140023574:	sbb    al,0x0
   140023576:	add    BYTE PTR [rax],al
   140023578:	jb     0x14002357a
   14002357a:	add    BYTE PTR [rax],al
   14002357c:	or     DWORD PTR [rax],eax
   14002357e:	add    BYTE PTR [rax],al
   140023580:	(bad)  
   140023581:	add    BYTE PTR [rax],al
   140023583:	add    BYTE PTR [rsi],dl
   140023585:	add    BYTE PTR [rax],al
   140023587:	add    BYTE PTR [rax+0xa000000],al
   14002358d:	add    BYTE PTR [rax],al
   14002358f:	add    BYTE PTR [rcx+0xa000000],al
   140023595:	add    BYTE PTR [rax],al
   140023597:	add    BYTE PTR [rdx+0x9000000],al
   14002359d:	add    BYTE PTR [rax],al
   14002359f:	add    BYTE PTR [rbx+0x16000000],al
   1400235a5:	add    BYTE PTR [rax],al
   1400235a7:	add    BYTE PTR [rax+rax*1+0xd0000],al
   1400235ae:	add    BYTE PTR [rax],al
   1400235b0:	xchg   ecx,eax
   1400235b1:	add    BYTE PTR [rax],al
   1400235b3:	add    BYTE PTR [rcx],ch
   1400235b5:	add    BYTE PTR [rax],al
   1400235b7:	add    BYTE PTR [rsi+0xd000000],bl
   1400235bd:	add    BYTE PTR [rax],al
   1400235bf:	add    BYTE PTR [rcx+0x2000000],ah
   1400235c5:	add    BYTE PTR [rax],al
   1400235c7:	add    BYTE PTR [rax+rax*1+0xb0000],ah
   1400235ce:	add    BYTE PTR [rax],al
   1400235d0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400235d1:	add    BYTE PTR [rax],al
   1400235d3:	add    BYTE PTR [rip+0xffffffffb7000000],cl        # 0xf70235d9
   1400235d9:	add    BYTE PTR [rax],al
   1400235db:	add    BYTE PTR [rcx],dl
   1400235dd:	add    BYTE PTR [rax],al
   1400235df:	add    dh,cl
   1400235e1:	add    BYTE PTR [rax],al
   1400235e3:	add    BYTE PTR [rdx],al
   1400235e5:	add    BYTE PTR [rax],al
   1400235e7:	add    bh,dl
   1400235e9:	add    BYTE PTR [rax],al
   1400235eb:	add    BYTE PTR [rbx],cl
   1400235ed:	add    BYTE PTR [rax],al
   1400235ef:	add    BYTE PTR [rax],bl
   1400235f1:	(bad)  
   1400235f2:	add    BYTE PTR [rax],al
   1400235f4:	or     al,0x0
   1400235f6:	add    BYTE PTR [rax],al
   1400235f8:	or     al,0x0
   1400235fa:	add    BYTE PTR [rax],al
   1400235fc:	or     BYTE PTR [rax],al
	...
   140023606:	add    BYTE PTR [rax],al
   140023608:	add    DWORD PTR [rax],eax
	...
   140023616:	add    BYTE PTR [rax],al
   140023618:	add    DWORD PTR [rax],eax
	...
   140023636:	add    BYTE PTR [rax],al
   140023638:	add    DWORD PTR [rax],eax
	...
   140023646:	add    BYTE PTR [rax],al
   140023648:	add    DWORD PTR [rax],eax
	...
   140023666:	add    BYTE PTR [rax],al
   140023668:	add    DWORD PTR [rax],eax
	...
   140023676:	add    BYTE PTR [rax],al
   140023678:	add    DWORD PTR [rax],eax
	...
   140023686:	add    BYTE PTR [rax],al
   140023688:	add    DWORD PTR [rax],eax
	...
   1400236a6:	add    BYTE PTR [rax],al
   1400236a8:	add    DWORD PTR [rax],eax
	...
   1400236c6:	add    BYTE PTR [rax],al
   1400236c8:	add    DWORD PTR [rax],eax
	...
   1400236d6:	add    BYTE PTR [rax],al
   1400236d8:	add    DWORD PTR [rax],eax
	...
   1400236e6:	add    BYTE PTR [rax],al
   1400236e8:	add    DWORD PTR [rax],eax
	...
   140023706:	add    BYTE PTR [rax],al
   140023708:	add    DWORD PTR [rax],eax
	...
   140023716:	add    BYTE PTR [rax],al
   140023718:	add    DWORD PTR [rax],eax
	...
   140023726:	add    BYTE PTR [rax],al
   140023728:	add    DWORD PTR [rax],eax
	...
   14002383e:	add    BYTE PTR [rax],al
   140023840:	(bad)  
   140023841:	(bad)  
   140023842:	(bad)  
   140023843:	inc    DWORD PTR [rax]
	...
   14002384d:	add    BYTE PTR [rax],al
   14002384f:	add    BYTE PTR [rax],dl
   140023851:	rex.WRX add QWORD PTR [rax+0x1],r8
   140023855:	add    BYTE PTR [rax],al
   140023857:	add    BYTE PTR [rax],dl
   140023859:	rex.WRX add QWORD PTR [rax+0x1],r8
   14002385d:	add    BYTE PTR [rax],al
   14002385f:	add    BYTE PTR [rax],dl
   140023861:	rex.WRX add QWORD PTR [rax+0x1],r8
   140023865:	add    BYTE PTR [rax],al
   140023867:	add    BYTE PTR [rax],dl
   140023869:	rex.WRX add QWORD PTR [rax+0x1],r8
   14002386d:	add    BYTE PTR [rax],al
   14002386f:	add    BYTE PTR [rax],dl
   140023871:	rex.WRX add QWORD PTR [rax+0x1],r8
   140023875:	add    BYTE PTR [rax],al
   140023877:	add    BYTE PTR [rax],dl
   140023879:	rex.WRX add QWORD PTR [rax+0x1],r8
   14002387d:	add    BYTE PTR [rax],al
   14002387f:	add    BYTE PTR [rax],dl
   140023881:	rex.WRX add QWORD PTR [rax+0x1],r8
   140023885:	add    BYTE PTR [rax],al
   140023887:	add    BYTE PTR [rax],dl
   140023889:	rex.WRX add QWORD PTR [rax+0x1],r8
   14002388d:	add    BYTE PTR [rax],al
   14002388f:	add    BYTE PTR [rax],dl
   140023891:	rex.WRX add QWORD PTR [rax+0x1],r8
   140023895:	add    BYTE PTR [rax],al
   140023897:	add    BYTE PTR [rax],dl
   140023899:	rex.WRX add QWORD PTR [rax+0x1],r8
   14002389d:	add    BYTE PTR [rax],al
   14002389f:	add    BYTE PTR [rax+0x14001f5],bl
   1400238a5:	add    BYTE PTR [rax],al
   1400238a7:	add    BYTE PTR [rax+0x14001f5],cl
   1400238ad:	add    BYTE PTR [rax],al
   1400238af:	add    bh,bh
   1400238b1:	(bad)  
   1400238b2:	(bad)  
   1400238b3:	(bad)  
   1400238b4:	(bad)  
   1400238b5:	(bad)  
   1400238b6:	(bad)  
   1400238b7:	inc    DWORD PTR [rax+0xa]
	...
   14002390d:	add    BYTE PTR [rax],al
   14002390f:	add    al,dh
   140023911:	cli    
   140023912:	add    DWORD PTR [rax+0x1],eax
   140023915:	add    BYTE PTR [rax],al
   140023917:	add    al,bl
   140023919:	cli    
   14002391a:	add    DWORD PTR [rax+0x1],eax
   14002391d:	add    BYTE PTR [rax],al
   14002391f:	add    BYTE PTR [rax+0x14001fa],bh
   140023925:	add    BYTE PTR [rax],al
   140023927:	add    BYTE PTR [rax+0x14001fa],ch
   14002392d:	add    BYTE PTR [rax],al
   14002392f:	add    BYTE PTR [rax+0x14001fa],cl
   140023935:	add    BYTE PTR [rax],al
   140023937:	add    BYTE PTR [rax-0x6],dh
   14002393a:	add    DWORD PTR [rax+0x1],eax
   14002393d:	add    BYTE PTR [rax],al
   14002393f:	add    BYTE PTR [rax-0x6],dl
   140023942:	add    DWORD PTR [rax+0x1],eax
   140023945:	add    BYTE PTR [rax],al
   140023947:	add    BYTE PTR [rax],bh
   140023949:	cli    
   14002394a:	add    DWORD PTR [rax+0x1],eax
   14002394d:	add    BYTE PTR [rax],al
   14002394f:	add    BYTE PTR [rax],ah
   140023951:	cli    
   140023952:	add    DWORD PTR [rax+0x1],eax
   140023955:	add    BYTE PTR [rax],al
   140023957:	add    BYTE PTR [rax],cl
   140023959:	cli    
   14002395a:	add    DWORD PTR [rax+0x1],eax
   14002395d:	add    BYTE PTR [rax],al
   14002395f:	add    al,dh
   140023961:	stc    
   140023962:	add    DWORD PTR [rax+0x1],eax
   140023965:	add    BYTE PTR [rax],al
   140023967:	add    al,cl
   140023969:	stc    
   14002396a:	add    DWORD PTR [rax+0x1],eax
   14002396d:	add    BYTE PTR [rax],al
   14002396f:	add    BYTE PTR [rax+0x14001f9],dh
   140023975:	add    BYTE PTR [rax],al
   140023977:	add    BYTE PTR [rax+0x14001f9],bl
   14002397d:	add    BYTE PTR [rax],al
   14002397f:	add    BYTE PTR [rax+0x14001f9],cl
   140023985:	add    BYTE PTR [rax],al
   140023987:	add    BYTE PTR [rax-0x7],bh
   14002398a:	add    DWORD PTR [rax+0x1],eax
   14002398d:	add    BYTE PTR [rax],al
   14002398f:	add    BYTE PTR [rax-0x7],ch
   140023992:	add    DWORD PTR [rax+0x1],eax
   140023995:	add    BYTE PTR [rax],al
   140023997:	add    BYTE PTR [rax-0x7],bl
   14002399a:	add    DWORD PTR [rax+0x1],eax
   14002399d:	add    BYTE PTR [rax],al
   14002399f:	add    BYTE PTR [rax-0x7],cl
   1400239a2:	add    DWORD PTR [rax+0x1],eax
   1400239a5:	add    BYTE PTR [rax],al
   1400239a7:	add    BYTE PTR [rax],bh
   1400239a9:	stc    
   1400239aa:	add    DWORD PTR [rax+0x1],eax
   1400239ad:	add    BYTE PTR [rax],al
   1400239af:	add    BYTE PTR [rax],ch
   1400239b1:	stc    
   1400239b2:	add    DWORD PTR [rax+0x1],eax
   1400239b5:	add    BYTE PTR [rax],al
   1400239b7:	add    BYTE PTR [rax],bl
   1400239b9:	stc    
   1400239ba:	add    DWORD PTR [rax+0x1],eax
   1400239bd:	add    BYTE PTR [rax],al
   1400239bf:	add    BYTE PTR [rax],al
   1400239c1:	stc    
   1400239c2:	add    DWORD PTR [rax+0x1],eax
   1400239c5:	add    BYTE PTR [rax],al
   1400239c7:	add    al,ah
   1400239c9:	clc    
   1400239ca:	add    DWORD PTR [rax+0x1],eax
   1400239cd:	add    BYTE PTR [rax],al
   1400239cf:	add    al,cl
   1400239d1:	clc    
   1400239d2:	add    DWORD PTR [rax+0x1],eax
   1400239d5:	add    BYTE PTR [rax],al
   1400239d7:	add    BYTE PTR [rax+0x14001f8],ah
   1400239dd:	add    BYTE PTR [rax],al
   1400239df:	add    BYTE PTR [rax-0x7],bh
   1400239e2:	add    DWORD PTR [rax+0x1],eax
   1400239e5:	add    BYTE PTR [rax],al
   1400239e7:	add    BYTE PTR [rax+0x14001f8],dl
   1400239ed:	add    BYTE PTR [rax],al
   1400239ef:	add    BYTE PTR [rax-0x8],bh
   1400239f2:	add    DWORD PTR [rax+0x1],eax
   1400239f5:	add    BYTE PTR [rax],al
   1400239f7:	add    BYTE PTR [rax-0x8],ch
   1400239fa:	add    DWORD PTR [rax+0x1],eax
   1400239fd:	add    BYTE PTR [rax],al
   1400239ff:	add    BYTE PTR [rax-0x8],dl
   140023a02:	add    DWORD PTR [rax+0x1],eax
   140023a05:	add    BYTE PTR [rax],al
   140023a07:	add    BYTE PTR [rax-0x8],al
   140023a0a:	add    DWORD PTR [rax+0x1],eax
   140023a0d:	add    BYTE PTR [rax],al
   140023a0f:	add    BYTE PTR [rax],dh
   140023a11:	clc    
   140023a12:	add    DWORD PTR [rax+0x1],eax
   140023a15:	add    BYTE PTR [rax],al
   140023a17:	add    BYTE PTR [rax],ah
   140023a19:	clc    
   140023a1a:	add    DWORD PTR [rax+0x1],eax
   140023a1d:	add    BYTE PTR [rax],al
   140023a1f:	add    BYTE PTR [rax],cl
   140023a21:	clc    
   140023a22:	add    DWORD PTR [rax+0x1],eax
   140023a25:	add    BYTE PTR [rax],al
   140023a27:	add    BYTE PTR [rax-0x7],bh
   140023a2a:	add    DWORD PTR [rax+0x1],eax
   140023a2d:	add    BYTE PTR [rax],al
   140023a2f:	add    al,ch
   140023a31:	test   DWORD PTR [rcx],0x140
   140023a37:	add    BYTE PTR [rax-0x7],bh
   140023a3a:	add    DWORD PTR [rax+0x1],eax
   140023a3d:	add    BYTE PTR [rax],al
   140023a3f:	add    al,dl
   140023a41:	test   DWORD PTR [rcx],0x140
   140023a47:	add    BYTE PTR [rax+0x14001f7],bh
   140023a4d:	add    BYTE PTR [rax],al
   140023a4f:	add    BYTE PTR [rax+0x14001f7],bl
   140023a55:	add    BYTE PTR [rax],al
   140023a57:	add    BYTE PTR [rax+0x14001f7],al
   140023a5d:	add    BYTE PTR [rax],al
   140023a5f:	add    BYTE PTR [rax-0x9],ch
   140023a62:	add    DWORD PTR [rax+0x1],eax
   140023a65:	add    BYTE PTR [rax],al
   140023a67:	add    BYTE PTR [rax-0x7],bh
   140023a6a:	add    DWORD PTR [rax+0x1],eax
   140023a6d:	add    BYTE PTR [rax],al
   140023a6f:	add    BYTE PTR [rbx],ch
	...
   140023add:	add    BYTE PTR [rax],dl
   140023adf:	adc    BYTE PTR [rax],dl
   140023ae1:	adc    BYTE PTR [rax],dl
   140023ae3:	adc    BYTE PTR [rax],dl
   140023ae5:	adc    BYTE PTR [rax],dl
   140023ae7:	adc    BYTE PTR [rax],dl
   140023ae9:	adc    BYTE PTR [rax],dl
   140023aeb:	adc    BYTE PTR [rax],dl
   140023aed:	adc    BYTE PTR [rax],dl
   140023aef:	adc    BYTE PTR [rax],dl
   140023af1:	adc    BYTE PTR [rax],dl
   140023af3:	adc    BYTE PTR [rax],dl
   140023af5:	adc    BYTE PTR [rax],dl
   140023af7:	adc    BYTE PTR [rax],al
   140023af9:	add    BYTE PTR [rax],al
   140023afb:	add    BYTE PTR [rax],al
   140023afd:	add    BYTE PTR [rax],ah
   140023aff:	and    BYTE PTR [rax],ah
   140023b01:	and    BYTE PTR [rax],ah
   140023b03:	and    BYTE PTR [rax],ah
   140023b05:	and    BYTE PTR [rax],ah
   140023b07:	and    BYTE PTR [rax],ah
   140023b09:	and    BYTE PTR [rax],ah
   140023b0b:	and    BYTE PTR [rax],ah
   140023b0d:	and    BYTE PTR [rax],ah
   140023b0f:	and    BYTE PTR [rax],ah
   140023b11:	and    BYTE PTR [rax],ah
   140023b13:	and    BYTE PTR [rax],ah
   140023b15:	and    BYTE PTR [rax],ah
   140023b17:	and    BYTE PTR [rax],al
	...
   140023bdd:	add    BYTE PTR [rcx+0x62],ah
   140023be0:	movsxd esp,DWORD PTR [rbp+riz*2+0x66]
   140023be4:	addr32 push 0x6c6b6a69
   140023bea:	ins    DWORD PTR es:[rdi],dx
   140023beb:	outs   dx,BYTE PTR ds:[rsi]
   140023bec:	outs   dx,DWORD PTR ds:[rsi]
   140023bed:	jo     0x140023c60
   140023bef:	jb     0x140023c64
   140023bf1:	je     0x140023c68
   140023bf3:	jbe    0x140023c6c
   140023bf5:	js     0x140023c70
   140023bf7:	jp     0x140023bf9
   140023bf9:	add    BYTE PTR [rax],al
   140023bfb:	add    BYTE PTR [rax],al
   140023bfd:	add    BYTE PTR [rcx+0x42],al
   140023c00:	rex.XB
   140023c01:	rex.R
   140023c02:	rex.RB
   140023c03:	rex.RX
   140023c04:	rex.RXB
   140023c05:	rex.W
   140023c06:	rex.WB
   140023c07:	rex.WX
   140023c08:	rex.WXB
   140023c09:	rex.WR
   140023c0a:	rex.WRB
   140023c0b:	rex.WRX
   140023c0c:	rex.WRXB push r8
   140023c0e:	push   rcx
   140023c0f:	push   rdx
   140023c10:	push   rbx
   140023c11:	push   rsp
   140023c12:	push   rbp
   140023c13:	push   rsi
   140023c14:	push   rdi
   140023c15:	pop    rax
   140023c16:	pop    rcx
   140023c17:	pop    rdx
	...
   140023ce0:	add    BYTE PTR [rax],al
   140023ce2:	adc    BYTE PTR [rax],dl
   140023ce4:	adc    BYTE PTR [rax],dl
   140023ce6:	adc    BYTE PTR [rax],dl
   140023ce8:	adc    BYTE PTR [rax],dl
   140023cea:	adc    BYTE PTR [rax],dl
   140023cec:	adc    BYTE PTR [rax],dl
   140023cee:	adc    BYTE PTR [rax],dl
   140023cf0:	adc    BYTE PTR [rax],dl
   140023cf2:	adc    BYTE PTR [rax],dl
   140023cf4:	adc    BYTE PTR [rax],dl
   140023cf6:	adc    BYTE PTR [rax],dl
   140023cf8:	adc    BYTE PTR [rax],dl
   140023cfa:	adc    BYTE PTR [rax],dl
   140023cfc:	add    BYTE PTR [rax],al
   140023cfe:	add    BYTE PTR [rax],al
   140023d00:	add    BYTE PTR [rax],al
   140023d02:	and    BYTE PTR [rax],ah
   140023d04:	and    BYTE PTR [rax],ah
   140023d06:	and    BYTE PTR [rax],ah
   140023d08:	and    BYTE PTR [rax],ah
   140023d0a:	and    BYTE PTR [rax],ah
   140023d0c:	and    BYTE PTR [rax],ah
   140023d0e:	and    BYTE PTR [rax],ah
   140023d10:	and    BYTE PTR [rax],ah
   140023d12:	and    BYTE PTR [rax],ah
   140023d14:	and    BYTE PTR [rax],ah
   140023d16:	and    BYTE PTR [rax],ah
   140023d18:	and    BYTE PTR [rax],ah
   140023d1a:	and    BYTE PTR [rax],ah
	...
   140023df0:	add    BYTE PTR [rcx+0x62],ah
   140023df3:	movsxd esp,DWORD PTR [rbp+riz*2+0x66]
   140023df7:	addr32 push 0x6c6b6a69
   140023dfd:	ins    DWORD PTR es:[rdi],dx
   140023dfe:	outs   dx,BYTE PTR ds:[rsi]
   140023dff:	outs   dx,DWORD PTR ds:[rsi]
   140023e00:	jo     0x140023e73
   140023e02:	jb     0x140023e77
   140023e04:	je     0x140023e7b
   140023e06:	jbe    0x140023e7f
   140023e08:	js     0x140023e83
   140023e0a:	jp     0x140023e0c
   140023e0c:	add    BYTE PTR [rax],al
   140023e0e:	add    BYTE PTR [rax],al
   140023e10:	add    BYTE PTR [rcx+0x42],al
   140023e13:	rex.XB
   140023e14:	rex.R
   140023e15:	rex.RB
   140023e16:	rex.RX
   140023e17:	rex.RXB
   140023e18:	rex.W
   140023e19:	rex.WB
   140023e1a:	rex.WX
   140023e1b:	rex.WXB
   140023e1c:	rex.WR
   140023e1d:	rex.WRB
   140023e1e:	rex.WRX
   140023e1f:	rex.WRXB push r8
   140023e21:	push   rcx
   140023e22:	push   rdx
   140023e23:	push   rbx
   140023e24:	push   rsp
   140023e25:	push   rbp
   140023e26:	push   rsi
   140023e27:	push   rdi
   140023e28:	pop    rax
   140023e29:	pop    rcx
   140023e2a:	pop    rdx
	...
   140023eaf:	add    BYTE PTR [rax+0x140023a],al
   140023eb5:	add    BYTE PTR [rax],al
   140023eb7:	add    BYTE PTR [rcx],al
   140023eb9:	add    al,BYTE PTR [rax+rcx*1]
   140023ebc:	add    BYTE PTR [rax],al
   140023ebe:	add    BYTE PTR [rax],al
   140023ec0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140023ec1:	add    eax,DWORD PTR [rax]
   140023ec3:	add    BYTE PTR [rax-0x7e],ah
   140023ec6:	jns    0x140023e4a
   140023ec8:	and    DWORD PTR [rax],eax
   140023eca:	add    BYTE PTR [rax],al
   140023ecc:	add    BYTE PTR [rax],al
   140023ece:	add    BYTE PTR [rax],al
   140023ed0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140023ed1:	fild   WORD PTR [rax]
   140023ed3:	add    BYTE PTR [rax],al
   140023ed5:	add    BYTE PTR [rax],al
   140023ed7:	add    BYTE PTR [rcx+0xa5],ah
   140023edd:	add    BYTE PTR [rax],al
   140023edf:	add    BYTE PTR [rcx+0xfce09f],al
   140023ee5:	add    BYTE PTR [rax],al
   140023ee7:	add    BYTE PTR [rax+0x7e],al
   140023eea:	cmp    ah,0x0
   140023eed:	add    BYTE PTR [rax],al
   140023eef:	add    BYTE PTR [rax-0x3efffffd],ch
   140023ef5:	movabs ds:0x20a3da,eax
	...
   140023f0e:	add    BYTE PTR [rax],al
   140023f10:	cmp    esi,0x0
   140023f16:	add    BYTE PTR [rax],al
   140023f18:	rex inc BYTE PTR [rax]
   140023f1b:	add    BYTE PTR [rax],al
   140023f1d:	add    BYTE PTR [rax],al
   140023f1f:	add    BYTE PTR [rbp-0x3efffffd],dh
   140023f25:	movabs ds:0x20a3da,eax
	...
   140023f3e:	add    BYTE PTR [rax],al
   140023f40:	cmp    esi,0x0
   140023f46:	add    BYTE PTR [rax],al
   140023f48:	inc    BYTE PTR [r8]
   140023f4b:	add    BYTE PTR [rax],al
   140023f4d:	add    BYTE PTR [rax],al
   140023f4f:	add    BYTE PTR [rsi-0x30fffffd],dh
   140023f55:	movabs ds:0xa2e8a2e5001aa2e4,al
   140023f5e:	pop    rbx
	...
   140023f6f:	add    BYTE PTR [rcx+0xfe],al
   140023f75:	add    BYTE PTR [rax],al
   140023f77:	add    BYTE PTR [rax+0x7e],al
   140023f7a:	movabs eax,ds:0x55100000000fe
   140023f83:	add    BYTE PTR [rcx-0x26],dl
   140023f86:	pop    rsi
   140023f87:	fisub  DWORD PTR [rax]
   140023f89:	add    BYTE PTR [rdi-0x26],bl
   140023f8c:	push   0xffffffffffffffda
   140023f8e:	xor    al,BYTE PTR [rax]
	...
   140023fa0:	adc    ebx,0xf9e0ded8
   140023fa6:	add    BYTE PTR [rax],al
   140023fa8:	xor    DWORD PTR [rsi-0x7f],edi
   140023fab:	inc    BYTE PTR [rax]
   140023fad:	add    BYTE PTR [rax],al
   140023faf:	add    dh,bh
   140023fb1:	(bad)  
   140023fb2:	(bad)  
   140023fb3:	inc    DWORD PTR [rbx+0x0]
	...
   140023fbe:	add    BYTE PTR [rax],al
   140023fc0:	enter  0x1fe,0x40
   140023fc4:	add    DWORD PTR [rax],eax
   140023fc6:	add    BYTE PTR [rax],al
   140023fc8:	(bad)  
   140023fc9:	inc    BYTE PTR [rcx]
   140023fcb:	rex add DWORD PTR [rax],eax
   140023fce:	add    BYTE PTR [rax],al
   140023fd0:	sar    dh,0x1
   140023fd3:	rex add DWORD PTR [rax],eax
   140023fd6:	add    BYTE PTR [rax],al
   140023fd8:	mov    esp,0x14001fe
   140023fdd:	add    BYTE PTR [rax],al
   140023fdf:	add    BYTE PTR [rax+0x14001fe],bh
   140023fe5:	add    BYTE PTR [rax],al
   140023fe7:	add    BYTE PTR [rsi+rdi*8+0x14001],dh
   140023fee:	add    BYTE PTR [rax],al
   140023ff0:	mov    al,0xfe
   140023ff2:	add    DWORD PTR [rax+0x1],eax
   140023ff5:	add    BYTE PTR [rax],al
   140023ff7:	add    BYTE PTR [rax+0x14001fe],ch
   140023ffd:	add    BYTE PTR [rax],al
   140023fff:	add    BYTE PTR [rax+0x14001fe],ah
   140024005:	add    BYTE PTR [rax],al
   140024007:	add    BYTE PTR [rax+0x14001fe],bl
   14002400d:	add    BYTE PTR [rax],al
   14002400f:	add    BYTE PTR [rax+0x14001fe],cl
   140024015:	add    BYTE PTR [rax],al
   140024017:	add    BYTE PTR [rax-0x2],bh
   14002401a:	add    DWORD PTR [rax+0x1],eax
   14002401d:	add    BYTE PTR [rax],al
   14002401f:	add    BYTE PTR [rsi+rdi*8+0x1],ch
   140024023:	rex add DWORD PTR [rax],eax
   140024026:	add    BYTE PTR [rax],al
   140024028:	(bad)  
   140024029:	inc    BYTE PTR [rcx]
   14002402b:	rex add DWORD PTR [rax],eax
   14002402e:	add    BYTE PTR [rax],al
   140024030:	pop    rsp
   140024031:	inc    BYTE PTR [rcx]
   140024033:	rex add DWORD PTR [rax],eax
   140024036:	add    BYTE PTR [rax],al
   140024038:	pop    rax
   140024039:	inc    BYTE PTR [rcx]
   14002403b:	rex add DWORD PTR [rax],eax
   14002403e:	add    BYTE PTR [rax],al
   140024040:	push   rsp
   140024041:	inc    BYTE PTR [rcx]
   140024043:	rex add DWORD PTR [rax],eax
   140024046:	add    BYTE PTR [rax],al
   140024048:	push   rax
   140024049:	inc    BYTE PTR [rcx]
   14002404b:	rex add DWORD PTR [rax],eax
   14002404e:	add    BYTE PTR [rax],al
   140024050:	rex.WR inc BYTE PTR [rcx]
   140024053:	rex add DWORD PTR [rax],eax
   140024056:	add    BYTE PTR [rax],al
   140024058:	rex.W inc BYTE PTR [rcx]
   14002405b:	rex add DWORD PTR [rax],eax
   14002405e:	add    BYTE PTR [rax],al
   140024060:	rex.R inc BYTE PTR [rcx]
   140024063:	rex add DWORD PTR [rax],eax
   140024066:	add    BYTE PTR [rax],al
   140024068:	rex inc BYTE PTR [rcx]
   14002406b:	rex add DWORD PTR [rax],eax
   14002406e:	add    BYTE PTR [rax],al
   140024070:	cmp    al,0xfe
   140024072:	add    DWORD PTR [rax+0x1],eax
   140024075:	add    BYTE PTR [rax],al
   140024077:	add    BYTE PTR [rax],bh
   140024079:	inc    BYTE PTR [rcx]
   14002407b:	rex add DWORD PTR [rax],eax
   14002407e:	add    BYTE PTR [rax],al
   140024080:	xor    al,0xfe
   140024082:	add    DWORD PTR [rax+0x1],eax
   140024085:	add    BYTE PTR [rax],al
   140024087:	add    BYTE PTR [rax],dh
   140024089:	inc    BYTE PTR [rcx]
   14002408b:	rex add DWORD PTR [rax],eax
   14002408e:	add    BYTE PTR [rax],al
   140024090:	sub    dh,bh
   140024092:	add    DWORD PTR [rax+0x1],eax
   140024095:	add    BYTE PTR [rax],al
   140024097:	add    BYTE PTR [rax],bl
   140024099:	inc    BYTE PTR [rcx]
   14002409b:	rex add DWORD PTR [rax],eax
   14002409e:	add    BYTE PTR [rax],al
   1400240a0:	or     al,0xfe
   1400240a2:	add    DWORD PTR [rax+0x1],eax
   1400240a5:	add    BYTE PTR [rax],al
   1400240a7:	add    BYTE PTR [rsi+rdi*8],al
   1400240aa:	add    DWORD PTR [rax+0x1],eax
   1400240ad:	add    BYTE PTR [rax],al
   1400240af:	add    BYTE PTR [rsi+rdi*8+0x1],cl
   1400240b3:	rex add DWORD PTR [rax],eax
   1400240b6:	add    BYTE PTR [rax],al
   1400240b8:	cld    
   1400240b9:	std    
   1400240ba:	add    DWORD PTR [rax+0x1],eax
   1400240bd:	add    BYTE PTR [rax],al
   1400240bf:	add    ah,dh
   1400240c1:	std    
   1400240c2:	add    DWORD PTR [rax+0x1],eax
   1400240c5:	add    BYTE PTR [rax],al
   1400240c7:	add    ah,ch
   1400240c9:	std    
   1400240ca:	add    DWORD PTR [rax+0x1],eax
   1400240cd:	add    BYTE PTR [rax],al
   1400240cf:	add    al,ah
   1400240d1:	std    
   1400240d2:	add    DWORD PTR [rax+0x1],eax
   1400240d5:	add    BYTE PTR [rax],al
   1400240d7:	add    al,bl
   1400240d9:	std    
   1400240da:	add    DWORD PTR [rax+0x1],eax
   1400240dd:	add    BYTE PTR [rax],al
   1400240df:	add    al,cl
   1400240e1:	std    
   1400240e2:	add    DWORD PTR [rax+0x1],eax
   1400240e5:	add    BYTE PTR [rax],al
   1400240e7:	add    BYTE PTR [rax+0x14001fd],bh
   1400240ed:	add    BYTE PTR [rax],al
   1400240ef:	add    BYTE PTR [rax+0x14001fd],dh
   1400240f5:	add    BYTE PTR [rax],al
   1400240f7:	add    BYTE PTR [rbp+rdi*8+0x14001],ch
   1400240fe:	add    BYTE PTR [rax],al
   140024100:	movabs al,ds:0x88000000014001fd
   140024109:	std    
   14002410a:	add    DWORD PTR [rax+0x1],eax
   14002410d:	add    BYTE PTR [rax],al
   14002410f:	add    BYTE PTR [rax-0x3],bh
   140024112:	add    DWORD PTR [rax+0x1],eax
   140024115:	add    BYTE PTR [rax],al
   140024117:	add    BYTE PTR [rcx],cl
   140024119:	add    al,0x0
   14002411b:	add    BYTE PTR [rcx],al
	...
   140024125:	add    BYTE PTR [rax],al
   140024127:	add    BYTE PTR [rax-0x3],dh
   14002412a:	add    DWORD PTR [rax+0x1],eax
   14002412d:	add    BYTE PTR [rax],al
   14002412f:	add    BYTE PTR [rax-0x3],ch
   140024132:	add    DWORD PTR [rax+0x1],eax
   140024135:	add    BYTE PTR [rax],al
   140024137:	add    BYTE PTR [rax-0x3],ah
   14002413a:	add    DWORD PTR [rax+0x1],eax
   14002413d:	add    BYTE PTR [rax],al
   14002413f:	add    BYTE PTR [rax-0x3],bl
   140024142:	add    DWORD PTR [rax+0x1],eax
   140024145:	add    BYTE PTR [rax],al
   140024147:	add    BYTE PTR [rax-0x3],dl
   14002414a:	add    DWORD PTR [rax+0x1],eax
   14002414d:	add    BYTE PTR [rax],al
   14002414f:	add    BYTE PTR [rax-0x3],cl
   140024152:	add    DWORD PTR [rax+0x1],eax
   140024155:	add    BYTE PTR [rax],al
   140024157:	add    BYTE PTR [rax-0x3],al
   14002415a:	add    DWORD PTR [rax+0x1],eax
   14002415d:	add    BYTE PTR [rax],al
   14002415f:	add    BYTE PTR [rax],dh
   140024161:	std    
   140024162:	add    DWORD PTR [rax+0x1],eax
   140024165:	add    BYTE PTR [rax],al
   140024167:	add    BYTE PTR [rax],ah
   140024169:	std    
   14002416a:	add    DWORD PTR [rax+0x1],eax
   14002416d:	add    BYTE PTR [rax],al
   14002416f:	add    BYTE PTR [rax],dl
   140024171:	std    
   140024172:	add    DWORD PTR [rax+0x1],eax
   140024175:	add    BYTE PTR [rax],al
   140024177:	add    al,bh
   140024179:	cld    
   14002417a:	add    DWORD PTR [rax+0x1],eax
   14002417d:	add    BYTE PTR [rax],al
   14002417f:	add    al,ah
   140024181:	cld    
   140024182:	add    DWORD PTR [rax+0x1],eax
   140024185:	add    BYTE PTR [rax],al
   140024187:	add    al,dl
   140024189:	cld    
   14002418a:	add    DWORD PTR [rax+0x1],eax
   14002418d:	add    BYTE PTR [rax],al
   14002418f:	add    BYTE PTR [rax+0x14001fc],bh
   140024195:	add    BYTE PTR [rax],al
   140024197:	add    BYTE PTR [rax+0x14001fc],dh
   14002419d:	add    BYTE PTR [rax],al
   14002419f:	add    BYTE PTR [rax+0x14001fc],ch
   1400241a5:	add    BYTE PTR [rax],al
   1400241a7:	add    BYTE PTR [rax+0x14001fc],ah
   1400241ad:	add    BYTE PTR [rax],al
   1400241af:	add    BYTE PTR [rax+0x14001fc],bl
   1400241b5:	add    BYTE PTR [rax],al
   1400241b7:	add    BYTE PTR [rax+0x14001fc],dl
   1400241bd:	add    BYTE PTR [rax],al
   1400241bf:	add    BYTE PTR [rax+0x14001fc],cl
   1400241c5:	add    BYTE PTR [rax],al
   1400241c7:	add    BYTE PTR [rax+0x14001fc],al
   1400241cd:	add    BYTE PTR [rax],al
   1400241cf:	add    BYTE PTR [rax-0x4],bh
   1400241d2:	add    DWORD PTR [rax+0x1],eax
   1400241d5:	add    BYTE PTR [rax],al
   1400241d7:	add    BYTE PTR [rax-0x4],dh
   1400241da:	add    DWORD PTR [rax+0x1],eax
   1400241dd:	add    BYTE PTR [rax],al
   1400241df:	add    BYTE PTR [rax-0x4],ch
   1400241e2:	add    DWORD PTR [rax+0x1],eax
   1400241e5:	add    BYTE PTR [rax],al
   1400241e7:	add    BYTE PTR [rax-0x4],ah
   1400241ea:	add    DWORD PTR [rax+0x1],eax
   1400241ed:	add    BYTE PTR [rax],al
   1400241ef:	add    BYTE PTR [rax-0x4],bl
   1400241f2:	add    DWORD PTR [rax+0x1],eax
   1400241f5:	add    BYTE PTR [rax],al
   1400241f7:	add    BYTE PTR [rax-0x4],cl
   1400241fa:	add    DWORD PTR [rax+0x1],eax
   1400241fd:	add    BYTE PTR [rax],al
   1400241ff:	add    BYTE PTR [rax],dh
   140024201:	cld    
   140024202:	add    DWORD PTR [rax+0x1],eax
   140024205:	add    BYTE PTR [rax],al
   140024207:	add    BYTE PTR [rax],ah
   140024209:	cld    
   14002420a:	add    DWORD PTR [rax+0x1],eax
   14002420d:	add    BYTE PTR [rax],al
   14002420f:	add    BYTE PTR [rax],dl
   140024211:	cld    
   140024212:	add    DWORD PTR [rax+0x1],eax
   140024215:	add    BYTE PTR [rax],al
   140024217:	add    BYTE PTR [rax+0x14001fc],dl
   14002421d:	add    BYTE PTR [rax],al
   14002421f:	add    BYTE PTR [rax],al
   140024221:	cld    
   140024222:	add    DWORD PTR [rax+0x1],eax
   140024225:	add    BYTE PTR [rax],al
   140024227:	add    al,dh
   140024229:	sti    
   14002422a:	add    DWORD PTR [rax+0x1],eax
   14002422d:	add    BYTE PTR [rax],al
   14002422f:	add    al,ah
   140024231:	sti    
   140024232:	add    DWORD PTR [rax+0x1],eax
   140024235:	add    BYTE PTR [rax],al
   140024237:	add    al,cl
   140024239:	sti    
   14002423a:	add    DWORD PTR [rax+0x1],eax
   14002423d:	add    BYTE PTR [rax],al
   14002423f:	add    BYTE PTR [rax+0x14001fb],bh
   140024245:	add    BYTE PTR [rax],al
   140024247:	add    BYTE PTR [rax+0x14001fb],ah
   14002424d:	add    BYTE PTR [rax],al
   14002424f:	add    BYTE PTR [rax+0x14001fb],cl
   140024255:	add    BYTE PTR [rax],al
   140024257:	add    BYTE PTR [rbx+rdi*8+0x1],bh
   14002425b:	rex add DWORD PTR [rax],eax
   14002425e:	add    BYTE PTR [rax],al
   140024260:	je     0x14002425d
   140024262:	add    DWORD PTR [rax+0x1],eax
   140024265:	add    BYTE PTR [rax],al
   140024267:	add    BYTE PTR [rax-0x5],ah
   14002426a:	add    DWORD PTR [rax+0x1],eax
   14002426d:	add    BYTE PTR [rax],al
   14002426f:	add    BYTE PTR [rax],bh
   140024271:	sti    
   140024272:	add    DWORD PTR [rax+0x1],eax
   140024275:	add    BYTE PTR [rax],al
   140024277:	add    BYTE PTR [rax],ah
   140024279:	sti    
   14002427a:	add    DWORD PTR [rax+0x1],eax
   14002427d:	add    BYTE PTR [rax],al
   14002427f:	add    BYTE PTR [rcx],al
	...
   1400242e5:	add    BYTE PTR [rax],al
   1400242e7:	add    BYTE PTR [rdi+rdi*1+0x14002],dh
	...
   140024306:	add    BYTE PTR [rax],al
   140024308:	mov    ah,0x3f
   14002430a:	add    al,BYTE PTR [rax+0x1]
	...
   140024325:	add    BYTE PTR [rax],al
   140024327:	add    BYTE PTR [rdi+rdi*1+0x14002],dh
	...
   140024346:	add    BYTE PTR [rax],al
   140024348:	mov    ah,0x3f
   14002434a:	add    al,BYTE PTR [rax+0x1]
	...
   140024365:	add    BYTE PTR [rax],al
   140024367:	add    BYTE PTR [rdi+rdi*1+0x14002],dh
	...
   140024386:	add    BYTE PTR [rax],al
   140024388:	add    DWORD PTR [rax],eax
   14002438a:	add    BYTE PTR [rax],al
   14002438c:	add    DWORD PTR [rax],eax
	...
   1400243a6:	add    BYTE PTR [rax],al
   1400243a8:	push   rax
   1400243a9:	rex.RX add r8b,BYTE PTR [rax+0x1]
	...
   1400243bd:	add    BYTE PTR [rax],al
   1400243bf:	add    BYTE PTR [rax],ah
   1400243c1:	add    DWORD PTR [rdx],eax
   1400243c3:	rex add DWORD PTR [rax],eax
   1400243c6:	add    BYTE PTR [rax],al
   1400243c8:	mov    al,0x5
   1400243ca:	add    al,BYTE PTR [rax+0x1]
   1400243cd:	add    BYTE PTR [rax],al
   1400243cf:	add    BYTE PTR [rax],dh
   1400243d1:	(bad)  
   1400243d2:	add    al,BYTE PTR [rax+0x1]
   1400243d5:	add    BYTE PTR [rax],al
   1400243d7:	add    al,al
   1400243d9:	(bad)  
   1400243da:	add    al,BYTE PTR [rax+0x1]
   1400243dd:	add    BYTE PTR [rax],al
   1400243df:	add    BYTE PTR [rax+0x1400242],al
   1400243e5:	add    BYTE PTR [rax],al
   1400243e7:	add    BYTE PTR [rax+0x1400242],al
   1400243ed:	add    BYTE PTR [rax],al
   1400243ef:	add    BYTE PTR [rax+0x140023a],al
   1400243f5:	add    BYTE PTR [rax],al
   1400243f7:	add    BYTE PTR [rbx+rax*1],ah
   1400243fa:	add    al,BYTE PTR [rax+0x1]
   1400243fd:	add    BYTE PTR [rax],al
   1400243ff:	add    BYTE PTR [rdx],al
	...
   1400244cd:	add    BYTE PTR [rax],al
   1400244cf:	add    BYTE PTR [rcx],al
   1400244d1:	add    DWORD PTR [rcx],eax
   1400244d3:	add    DWORD PTR [rcx],eax
   1400244d5:	add    DWORD PTR [rcx],eax
   1400244d7:	add    DWORD PTR [rcx],eax
   1400244d9:	add    DWORD PTR [rcx],eax
   1400244db:	add    DWORD PTR [rcx],eax
   1400244dd:	add    DWORD PTR [rcx],eax
   1400244df:	add    DWORD PTR [rcx],eax
   1400244e1:	add    DWORD PTR [rcx],eax
   1400244e3:	add    DWORD PTR [rcx],eax
   1400244e5:	add    DWORD PTR [rcx],eax
   1400244e7:	add    DWORD PTR [rcx],eax
   1400244e9:	add    DWORD PTR [rcx],eax
   1400244eb:	add    DWORD PTR [rcx],eax
   1400244ed:	add    DWORD PTR [rcx],eax
   1400244ef:	add    DWORD PTR [rdx],eax
   1400244f1:	add    al,BYTE PTR [rdx]
   1400244f3:	add    al,BYTE PTR [rdx]
   1400244f5:	add    al,BYTE PTR [rdx]
   1400244f7:	add    al,BYTE PTR [rdx]
   1400244f9:	add    al,BYTE PTR [rdx]
   1400244fb:	add    al,BYTE PTR [rdx]
   1400244fd:	add    al,BYTE PTR [rdx]
   1400244ff:	add    al,BYTE PTR [rbx]
   140024501:	add    eax,DWORD PTR [rbx]
   140024503:	add    eax,DWORD PTR [rbx]
   140024505:	add    eax,DWORD PTR [rbx]
   140024507:	add    eax,DWORD PTR [rax]
   140024509:	add    BYTE PTR [rax],al
   14002450b:	add    BYTE PTR [rax],al
   14002450d:	add    BYTE PTR [rax],al
   14002450f:	add    bh,bh
   140024511:	(bad)  
   140024512:	(bad)  
   140024513:	inc    DWORD PTR [rax]
	...
   14002451d:	add    BYTE PTR [rax],al
   14002451f:	add    bh,bh
   140024521:	(bad)  
   140024522:	(bad)  
   140024523:	inc    DWORD PTR [rax]
	...
   14002452d:	add    BYTE PTR [rax],al
   14002452f:	add    BYTE PTR [rax+0x1000070],al
   140024535:	add    BYTE PTR [rax],al
   140024537:	add    al,dh
   140024539:	icebp  
   14002453a:	(bad)  
   14002453b:	inc    DWORD PTR [rax]
   14002453d:	add    BYTE PTR [rax],al
   14002453f:	add    BYTE PTR [rax+0x53],dl
   140024542:	push   rsp
	...
   14002457f:	add    BYTE PTR [rax+0x44],dl
   140024582:	push   rsp
	...
   1400245bf:	add    BYTE PTR [rax+0x45],al
   1400245c2:	add    al,BYTE PTR [rax+0x1]
   1400245c5:	add    BYTE PTR [rax],al
   1400245c7:	add    BYTE PTR [rax+0x1400245],al
   1400245cd:	add    BYTE PTR [rax],al
   1400245cf:	add    bh,bh
   1400245d1:	(bad)  
   1400245d2:	(bad)  
   1400245d3:	call   FWORD PTR [rsi]
   1400245d5:	add    BYTE PTR [rax],al
   1400245d7:	add    BYTE PTR [rbx],bh
   1400245d9:	add    BYTE PTR [rax],al
   1400245db:	add    BYTE PTR [rdx+0x0],bl
   1400245de:	add    BYTE PTR [rax],al
   1400245e0:	js     0x1400245e2
   1400245e2:	add    BYTE PTR [rax],al
   1400245e4:	xchg   edi,eax
   1400245e5:	add    BYTE PTR [rax],al
   1400245e7:	add    BYTE PTR [rbp-0x2c000000],dh
   1400245ed:	add    BYTE PTR [rax],al
   1400245ef:	add    bl,dh
   1400245f1:	add    BYTE PTR [rax],al
   1400245f3:	add    BYTE PTR [rcx],dl
   1400245f5:	add    DWORD PTR [rax],eax
   1400245f7:	add    BYTE PTR [rax],dh
   1400245f9:	add    DWORD PTR [rax],eax
   1400245fb:	add    BYTE PTR [rsi+0x1],cl
   1400245fe:	add    BYTE PTR [rax],al
   140024600:	ins    DWORD PTR es:[rdi],dx
   140024601:	add    DWORD PTR [rax],eax
   140024603:	add    BYTE PTR [rax],al
   140024605:	add    BYTE PTR [rax],al
   140024607:	add    bh,bh
   140024609:	(bad)  
   14002460a:	(bad)  
   14002460b:	call   FWORD PTR [rsi]
   14002460d:	add    BYTE PTR [rax],al
   14002460f:	add    BYTE PTR [rdx],bh
   140024611:	add    BYTE PTR [rax],al
   140024613:	add    BYTE PTR [rcx+0x0],bl
   140024616:	add    BYTE PTR [rax],al
   140024618:	ja     0x14002461a
   14002461a:	add    BYTE PTR [rax],al
   14002461c:	xchg   esi,eax
   14002461d:	add    BYTE PTR [rax],al
   14002461f:	add    BYTE PTR [rax+rax*1+0xd30000],dh
   140024626:	add    BYTE PTR [rax],al
   140024628:	repnz add BYTE PTR [rax],al
   14002462b:	add    BYTE PTR [rax],dl
   14002462d:	add    DWORD PTR [rax],eax
   14002462f:	add    BYTE PTR [rdi],ch
   140024631:	add    DWORD PTR [rax],eax
   140024633:	add    BYTE PTR [rbp+0x1],cl
   140024636:	add    BYTE PTR [rax],al
   140024638:	ins    BYTE PTR es:[rdi],dx
   140024639:	add    DWORD PTR [rax],eax
   14002463b:	add    BYTE PTR [rax],al
   14002463d:	add    BYTE PTR [rax],al
   14002463f:	add    BYTE PTR [rsi],ch
   140024641:	add    BYTE PTR [rax],al
   140024643:	add    BYTE PTR [rsi],ch
   140024645:	add    BYTE PTR [rax],al
   140024647:	add    BYTE PTR [rax+0x46],dl
   14002464a:	add    al,BYTE PTR [rax+0x1]
   14002464d:	add    BYTE PTR [rax],al
   14002464f:	add    BYTE PTR [rax+0x46],al
   140024652:	add    al,BYTE PTR [rax+0x1]
   140024655:	add    BYTE PTR [rax],al
   140024657:	add    BYTE PTR [rdx+rbx*2+0x2],bl
   14002465b:	rex add DWORD PTR [rax],eax
   14002465e:	add    BYTE PTR [rax],al
   140024660:	pop    rsp
   140024661:	pop    rdx
   140024662:	add    al,BYTE PTR [rax+0x1]
   140024665:	add    BYTE PTR [rax],al
   140024667:	add    BYTE PTR [rdx+rbx*2+0x2],bl
   14002466b:	rex add DWORD PTR [rax],eax
   14002466e:	add    BYTE PTR [rax],al
   140024670:	pop    rsp
   140024671:	pop    rdx
   140024672:	add    al,BYTE PTR [rax+0x1]
   140024675:	add    BYTE PTR [rax],al
   140024677:	add    BYTE PTR [rdx+rbx*2+0x2],bl
   14002467b:	rex add DWORD PTR [rax],eax
   14002467e:	add    BYTE PTR [rax],al
   140024680:	pop    rsp
   140024681:	pop    rdx
   140024682:	add    al,BYTE PTR [rax+0x1]
   140024685:	add    BYTE PTR [rax],al
   140024687:	add    BYTE PTR [rdx+rbx*2+0x2],bl
   14002468b:	rex add DWORD PTR [rax],eax
   14002468e:	add    BYTE PTR [rax],al
   140024690:	pop    rsp
   140024691:	pop    rdx
   140024692:	add    al,BYTE PTR [rax+0x1]
   140024695:	add    BYTE PTR [rax],al
   140024697:	add    BYTE PTR [rdx+rbx*2+0x2],bl
   14002469b:	rex add DWORD PTR [rax],eax
   14002469e:	add    BYTE PTR [rax],al
   1400246a0:	jg     0x140024721
   1400246a2:	jg     0x140024723
   1400246a4:	jg     0x140024725
   1400246a6:	jg     0x140024727
   1400246a8:	rex.R
   1400246a9:	rex.RX add r8b,BYTE PTR [rax+0x1]
   1400246ad:	add    BYTE PTR [rax],al
   1400246af:	add    BYTE PTR [rax+0x5a],ah
   1400246b2:	add    al,BYTE PTR [rax+0x1]
   1400246b5:	add    BYTE PTR [rax],al
   1400246b7:	add    BYTE PTR [rax+0x5a],ah
   1400246ba:	add    al,BYTE PTR [rax+0x1]
   1400246bd:	add    BYTE PTR [rax],al
   1400246bf:	add    BYTE PTR [rax+0x5a],ah
   1400246c2:	add    al,BYTE PTR [rax+0x1]
   1400246c5:	add    BYTE PTR [rax],al
   1400246c7:	add    BYTE PTR [rax+0x5a],ah
   1400246ca:	add    al,BYTE PTR [rax+0x1]
   1400246cd:	add    BYTE PTR [rax],al
   1400246cf:	add    BYTE PTR [rax+0x5a],ah
   1400246d2:	add    al,BYTE PTR [rax+0x1]
   1400246d5:	add    BYTE PTR [rax],al
   1400246d7:	add    BYTE PTR [rax+0x5a],ah
   1400246da:	add    al,BYTE PTR [rax+0x1]
   1400246dd:	add    BYTE PTR [rax],al
   1400246df:	add    BYTE PTR [rax+0x5a],ah
   1400246e2:	add    al,BYTE PTR [rax+0x1]
   1400246e5:	add    BYTE PTR [rax],al
   1400246e7:	add    BYTE PTR [rax],ah
   1400246e9:	add    DWORD PTR [rdx],eax
   1400246eb:	rex add DWORD PTR [rax],eax
   1400246ee:	add    BYTE PTR [rax],al
   1400246f0:	and    al,BYTE PTR [rbx]
   1400246f2:	add    al,BYTE PTR [rax+0x1]
   1400246f5:	add    BYTE PTR [rax],al
   1400246f7:	add    BYTE PTR [rcx],al
   1400246f9:	add    BYTE PTR [rax],al
   1400246fb:	add    BYTE PTR [rsi],ch
   1400246fd:	add    BYTE PTR [rax],al
   1400246ff:	add    BYTE PTR [rcx],al
   140024701:	add    BYTE PTR [rax],al
   140024703:	add    BYTE PTR [rax],al
   140024705:	add    BYTE PTR [rax],al
   140024707:	add    dh,bh
   140024709:	(bad)  
   14002470a:	(bad)  
   14002470b:	(bad)  
   14002470c:	(bad)  
   14002470d:	(bad)  
   14002470e:	(bad)  
   14002470f:	inc    DWORD PTR [rax]
	...

Disassembly of section .pdata:

0000000140027000 <.pdata>:
   140027000:	add    BYTE PTR [rax],dl
   140027002:	add    BYTE PTR [rax],al
   140027004:	rex adc DWORD PTR [rax],eax
   140027007:	add    al,al
   140027009:	or     BYTE PTR [rdx],al
   14002700b:	add    BYTE PTR [rax+0x11],al
   14002700e:	add    BYTE PTR [rax],al
   140027010:	or     dl,BYTE PTR [rdx]
   140027012:	add    BYTE PTR [rax],al
   140027014:	mov    WORD PTR [rcx],ss
   140027016:	add    al,BYTE PTR [rax]
   140027018:	or     al,0x12
   14002701a:	add    BYTE PTR [rax],al
   14002701c:	jp     0x140027031
   14002701e:	add    BYTE PTR [rax],al
   140027020:	pop    rsp
   140027021:	or     DWORD PTR [rdx],eax
   140027023:	add    BYTE PTR [rbx+rdx*1+0x0],bh
   140027027:	add    al,ch
   140027029:	adc    eax,DWORD PTR [rax]
   14002702b:	add    ah,cl
   14002702d:	or     BYTE PTR [rdx],al
   14002702f:	add    al,ch
   140027031:	adc    eax,DWORD PTR [rax]
   140027033:	add    BYTE PTR [rbx],ah
   140027035:	adc    al,0x0
   140027037:	add    ah,dh
   140027039:	or     eax,DWORD PTR [rdx]
   14002703b:	add    BYTE PTR [rsp+rdx*1],ah
   14002703e:	add    BYTE PTR [rax],al
   140027040:	ds adc eax,0x1a200000
   140027046:	add    al,BYTE PTR [rax]
   140027048:	rex adc eax,0x16070000
   14002704e:	add    BYTE PTR [rax],al
   140027050:	adc    al,0x13
   140027052:	add    al,BYTE PTR [rax]
   140027054:	or     BYTE PTR [rsi],dl
   140027056:	add    BYTE PTR [rax],al
   140027058:	(bad)  
   140027059:	(bad)  
   14002705a:	add    BYTE PTR [rax],al
   14002705c:	fmul   QWORD PTR [rax]
   14002705e:	add    al,BYTE PTR [rax]
   140027060:	adc    BYTE PTR [rdi],dl
   140027062:	add    BYTE PTR [rax],al
   140027064:	stos   DWORD PTR es:[rdi],eax
   140027065:	sbb    BYTE PTR [rax],al
   140027067:	add    ah,dh
   140027069:	or     BYTE PTR [rdx],al
   14002706b:	add    BYTE PTR [rax+rbx*1+0x197f0000],ch
   140027072:	add    BYTE PTR [rax],al
   140027074:	adc    al,0x9
   140027076:	add    al,BYTE PTR [rax]
   140027078:	sbb    BYTE PTR [rcx],0x0
   14002707b:	add    BYTE PTR [rsi+0x1a],bl
   14002707e:	add    BYTE PTR [rax],al
   140027080:	sub    al,0x9
   140027082:	add    al,BYTE PTR [rax]
   140027084:	(bad)  
   140027085:	sbb    al,BYTE PTR [rax]
   140027087:	add    BYTE PTR [rcx+0x4400001d],ch
   14002708d:	or     DWORD PTR [rdx],eax
   14002708f:	add    BYTE PTR [rbp+rbx*1+0x1e1a0000],ch
   140027096:	add    BYTE PTR [rax],al
   140027098:	nop
   140027099:	(bad)  
   14002709a:	add    al,BYTE PTR [rax]
   14002709c:	sbb    al,0x1e
   14002709e:	add    BYTE PTR [rax],al
   1400270a0:	(bad)  
   1400270a1:	(bad)  
   1400270a2:	add    BYTE PTR [rax],al
   1400270a4:	pop    rsp
   1400270a5:	or     DWORD PTR [rdx],eax
   1400270a7:	add    BYTE PTR [rdi+rbx*1],al
   1400270aa:	add    BYTE PTR [rax],al
   1400270ac:	push   rcx
   1400270ad:	(bad)  
   1400270ae:	add    BYTE PTR [rax],al
   1400270b0:	ins    BYTE PTR es:[rdi],dx
   1400270b1:	or     DWORD PTR [rdx],eax
   1400270b3:	add    BYTE PTR [rdi+rbx*1+0x0],dl
   1400270b7:	add    BYTE PTR [rdi],cl
   1400270b9:	and    al,0x0
   1400270bb:	add    BYTE PTR [rcx+rcx*1+0x2],dh
   1400270bf:	add    BYTE PTR [rax],dl
   1400270c1:	and    al,0x0
   1400270c3:	add    BYTE PTR [rdi-0x73ffffd9],al
   1400270c9:	or     DWORD PTR [rdx],eax
   1400270cb:	add    BYTE PTR [rax-0x7cffffd9],cl
   1400270d1:	sub    al,0x0
   1400270d3:	add    BYTE PTR [rcx+rcx*1+0x2c840002],ah
   1400270da:	add    BYTE PTR [rax],al
   1400270dc:	fdiv   QWORD PTR [rcx]
   1400270de:	add    BYTE PTR [rax],al
   1400270e0:	enter  0x209,0x0
   1400270e4:	fdiv   QWORD PTR [rcx]
   1400270e6:	add    BYTE PTR [rax],al
   1400270e8:	lea    esi,[rbx]
   1400270ea:	add    BYTE PTR [rax],al
   1400270ec:	loopne 0x1400270f7
   1400270ee:	add    al,BYTE PTR [rax]
   1400270f0:	nop
   1400270f1:	xor    eax,DWORD PTR [rax]
   1400270f3:	add    BYTE PTR [rbp-0x3ffffc9],ch
   1400270f9:	or     DWORD PTR [rdx],eax
   1400270fb:	add    BYTE PTR [rax+0x6d000037],dh
   140027101:	cmp    BYTE PTR [rax],al
   140027103:	add    BYTE PTR [rdx+rcx*1],ah
   140027106:	add    al,BYTE PTR [rax]
   140027108:	jo     0x140027142
   14002710a:	add    BYTE PTR [rax],al
   14002710c:	rex.RX cmp al,0x0
   14002710f:	add    BYTE PTR [rdx+rcx*1],bh
   140027112:	add    al,BYTE PTR [rax]
   140027114:	rex.W cmp al,0x0
   140027117:	add    BYTE PTR [rcx],bh
   140027119:	(bad)  
   14002711a:	add    BYTE PTR [rax],al
   14002711c:	pop    rax
   14002711d:	or     al,BYTE PTR [rdx]
   14002711f:	add    BYTE PTR [rdi+rdi*1+0x0],cl
   140027123:	add    dh,ch
   140027125:	(bad)  
   140027126:	add    BYTE PTR [rax],al
   140027128:	jo     0x140027134
   14002712a:	add    al,BYTE PTR [rax]
   14002712c:	lock (bad) 
   14002712e:	add    BYTE PTR [rax],al
   140027130:	sbb    al,BYTE PTR [rax+0x0]
   140027133:	add    ah,dh
   140027135:	or     eax,DWORD PTR [rdx]
   140027137:	add    BYTE PTR [rax+rax*2],bl
   14002713a:	add    BYTE PTR [rax],al
   14002713c:	rex.RX
   14002713d:	add    BYTE PTR [rax],al
   140027140:	hlt    
   140027141:	or     eax,DWORD PTR [rdx]
   140027143:	add    BYTE PTR [rax+0x40],cl
   140027146:	add    BYTE PTR [rax],al
   140027148:	jb     0x14002718a
   14002714a:	add    BYTE PTR [rax],al
   14002714c:	hlt    
   14002714d:	or     eax,DWORD PTR [rdx]
   14002714f:	add    BYTE PTR [rax+rax*2+0x0],bh
   140027153:	add    BYTE PTR [rdx-0x77ffffc0],ch
   140027159:	or     al,BYTE PTR [rdx]
   14002715b:	add    BYTE PTR [rax+rax*2+0x40e00000],ch
   140027162:	add    BYTE PTR [rax],al
   140027164:	hlt    
   140027165:	or     eax,DWORD PTR [rdx]
   140027167:	add    al,ch
   140027169:	add    BYTE PTR [rax],al
   14002716c:	sbb    BYTE PTR [rcx+0x0],al
   14002716f:	add    BYTE PTR [rcx+rdx*1+0x41180002],cl
   140027176:	add    BYTE PTR [rax],al
   140027178:	data16 add BYTE PTR [r8],al
   14002717c:	nop
   14002717d:	(bad)  
   14002717e:	add    al,BYTE PTR [rax]
   140027180:	push   0xffffffffb1000041
   140027185:	add    BYTE PTR [r8],al
   140027188:	nop
   140027189:	or     al,0x2
   14002718b:	add    BYTE PTR [rcx+rax*2+0x42040000],bh
   140027192:	add    BYTE PTR [rax],al
   140027194:	nop
   140027195:	or     al,0x2
   140027197:	add    BYTE PTR [rdx+rax*2],al
   14002719a:	add    BYTE PTR [rax],al
   14002719c:	pop    QWORD PTR [rdx+0x0]
   14002719f:	add    BYTE PTR [rax-0x6ffffdf6],dl
   1400271a5:	rex.X add BYTE PTR [rax],al
   1400271a8:	fadd   QWORD PTR [rdx+0x0]
   1400271ab:	add    ah,dh
   1400271ad:	or     eax,DWORD PTR [rdx]
   1400271af:	add    BYTE PTR [rax],cl
   1400271b1:	rex.XB add BYTE PTR [r8],al
   1400271b4:	pop    rsi
   1400271b5:	rex.XB add BYTE PTR [r8],al
   1400271b8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400271b9:	or     al,BYTE PTR [rdx]
   1400271bb:	add    BYTE PTR [rax+0x43],ah
   1400271be:	add    BYTE PTR [rax],al
   1400271c0:	or     al,0x44
   1400271c2:	add    BYTE PTR [rax],al
   1400271c4:	mov    al,0xa
   1400271c6:	add    al,BYTE PTR [rax]
   1400271c8:	or     al,0x44
   1400271ca:	add    BYTE PTR [rax],al
   1400271cc:	pop    QWORD PTR [rbp+0x0]
   1400271cf:	add    BYTE PTR [rdx+rcx*1+0x45c00002],bh
   1400271d6:	add    BYTE PTR [rax],al
   1400271d8:	(bad)  
   1400271d9:	add    BYTE PTR [r8],r8b
   1400271dc:	hlt    
   1400271dd:	or     eax,DWORD PTR [rdx]
   1400271df:	add    ah,dl
   1400271e1:	add    BYTE PTR [r8],r8b
   1400271e4:	(bad)  
   1400271e5:	rex.RXB add BYTE PTR [r8],r8b
   1400271e8:	ror    BYTE PTR [rdx],1
   1400271ea:	add    al,BYTE PTR [rax]
   1400271ec:	(bad)  
   1400271ed:	rex.W add BYTE PTR [rax],al
   1400271f0:	and    DWORD PTR [rbp+0x0],ecx
   1400271f3:	add    ah,dh
   1400271f5:	or     al,BYTE PTR [rdx]
   1400271f7:	add    BYTE PTR [rcx*2+0x4d7b0000],ah
   1400271fe:	add    BYTE PTR [rax],al
   140027200:	mov    WORD PTR [rcx],ss
   140027202:	add    al,BYTE PTR [rax]
   140027204:	test   BYTE PTR [rbp+0x0],cl
   140027207:	add    dl,bh
   140027209:	rex.WRB add BYTE PTR [r8],r8b
   14002720c:	mov    WORD PTR [rcx],ss
   14002720e:	add    al,BYTE PTR [rax]
   140027210:	cld    
   140027211:	rex.WRB add BYTE PTR [r8],r8b
   140027214:	cmp    BYTE PTR [rsi+0x0],cl
   140027217:	add    BYTE PTR [rax+0x3800020c],dl
   14002721d:	rex.WRX add BYTE PTR [rax],r8b
   140027220:	movabs ds:0xac00020a9000004e,al
   140027229:	rex.WRX add BYTE PTR [rax],r8b
   14002722c:	(bad)  
   14002722d:	push   rcx
   14002722e:	add    BYTE PTR [rax],al
   140027230:	sbb    al,0xb
   140027232:	add    al,BYTE PTR [rax]
   140027234:	sub    BYTE PTR [rcx+0x0],dl
   140027237:	add    BYTE PTR [rbx+rdx*2],cl
   14002723a:	add    BYTE PTR [rax],al
   14002723c:	cmp    BYTE PTR [rbx],cl
   14002723e:	add    al,BYTE PTR [rax]
   140027240:	or     al,0x53
   140027242:	add    BYTE PTR [rax],al
   140027244:	repnz push rbx
   140027246:	add    BYTE PTR [rax],al
   140027248:	pop    rax
   140027249:	or     eax,DWORD PTR [rdx]
   14002724b:	add    ah,dh
   14002724d:	push   rbx
   14002724e:	add    BYTE PTR [rax],al
   140027250:	mov    bl,0x54
   140027252:	add    BYTE PTR [rax],al
   140027254:	jo     0x140027261
   140027256:	add    al,BYTE PTR [rax]
   140027258:	mov    ah,0x54
   14002725a:	add    BYTE PTR [rax],al
   14002725c:	pushf  
   14002725d:	push   rdi
   14002725e:	add    BYTE PTR [rax],al
   140027260:	mov    BYTE PTR [rbx],cl
   140027262:	add    al,BYTE PTR [rax]
   140027264:	pushf  
   140027265:	push   rdi
   140027266:	add    BYTE PTR [rax],al
   140027268:	cwde   
   140027269:	pop    rax
   14002726a:	add    BYTE PTR [rax],al
   14002726c:	test   al,0xb
   14002726e:	add    al,BYTE PTR [rax]
   140027270:	cwde   
   140027271:	pop    rax
   140027272:	add    BYTE PTR [rax],al
   140027274:	xor    bl,BYTE PTR [rcx+0x0]
   140027277:	add    BYTE PTR [rax+0x34000216],dl
   14002727d:	pop    rcx
   14002727e:	add    BYTE PTR [rax],al
   140027280:	je     0x1400272dc
   140027282:	add    BYTE PTR [rax],al
   140027284:	mov    esp,0x7400020b
   140027289:	pop    rdx
   14002728a:	add    BYTE PTR [rax],al
   14002728c:	sti    
   14002728d:	pop    rbx
   14002728e:	add    BYTE PTR [rax],al
   140027290:	nop
   140027291:	or     al,BYTE PTR [rdx]
   140027293:	add    ah,bh
   140027295:	pop    rbx
   140027296:	add    BYTE PTR [rax],al
   140027298:	pop    rax
   140027299:	pop    rsp
   14002729a:	add    BYTE PTR [rax],al
   14002729c:	int3   
   14002729d:	or     BYTE PTR [rdx],al
   14002729f:	add    BYTE PTR [rax+0x5c],bl
   1400272a2:	add    BYTE PTR [rax],al
   1400272a4:	sbb    al,0x5d
   1400272a6:	add    BYTE PTR [rax],al
   1400272a8:	rex.R or al,0x2
   1400272ab:	add    BYTE PTR [rbx*2+0x5e330000],bl
   1400272b2:	add    BYTE PTR [rax],al
   1400272b4:	rex.R or al,0x2
   1400272b7:	add    BYTE PTR [rsi+rbx*2],dh
   1400272ba:	add    BYTE PTR [rax],al
   1400272bc:	(bad)  
   1400272bd:	pop    rdi
   1400272be:	add    BYTE PTR [rax],al
   1400272c0:	fmul   DWORD PTR [rbx]
   1400272c2:	add    al,BYTE PTR [rax]
   1400272c4:	add    BYTE PTR [rax+0x0],ah
   1400272c7:	add    BYTE PTR [rsi+0x61],bl
   1400272ca:	add    BYTE PTR [rax],al
   1400272cc:	in     al,dx
   1400272cd:	adc    eax,0x61600002
   1400272d2:	add    BYTE PTR [rax],al
   1400272d4:	out    0x61,al
   1400272d6:	add    BYTE PTR [rax],al
   1400272d8:	nop
   1400272d9:	(bad)  
   1400272da:	add    al,BYTE PTR [rax]
   1400272dc:	call   0x16d027342
   1400272e1:	(bad)  
   1400272e2:	add    BYTE PTR [rax],al
   1400272e4:	mov    WORD PTR [rcx],ss
   1400272e6:	add    al,BYTE PTR [rax]
   1400272e8:	xor    BYTE PTR [rdx+0x0],ah
   1400272eb:	add    BYTE PTR [rsi+0x62],ch
   1400272ee:	add    BYTE PTR [rax],al
   1400272f0:	nop
   1400272f1:	or     al,0x2
   1400272f3:	add    BYTE PTR [rax+0x62],dh
   1400272f6:	add    BYTE PTR [rax],al
   1400272f8:	lahf   
   1400272f9:	(bad)  
   1400272fa:	add    BYTE PTR [rax],al
   1400272fc:	hlt    
   1400272fd:	or     eax,DWORD PTR [rdx]
   1400272ff:	add    BYTE PTR [rax-0x18ffff9e],ah
   140027305:	(bad)  
   140027306:	add    BYTE PTR [rax],al
   140027308:	mov    WORD PTR [rcx],ss
   14002730a:	add    al,BYTE PTR [rax]
   14002730c:	call   0x190027373
   140027311:	add    BYTE PTR fs:[rax],al
   140027314:	cld    
   140027315:	or     eax,DWORD PTR [rdx]
   140027317:	add    BYTE PTR [rax+0x64],dl
   14002731a:	add    BYTE PTR [rax],al
   14002731c:	fldenv [rbp+0x0]
   14002731f:	add    BYTE PTR [rax+0xc],ah
   140027322:	add    al,BYTE PTR [rax]
   140027324:	fsub   QWORD PTR [rbp+0x0]
   140027327:	add    BYTE PTR [rbp+0x69],dl
   14002732a:	add    BYTE PTR [rax],al
   14002732c:	adc    al,0xc
   14002732e:	add    al,BYTE PTR [rax]
   140027330:	pop    rax
   140027331:	imul   eax,DWORD PTR [rax],0x6a5600
   140027337:	add    ah,ch
   140027339:	adc    eax,0x6a580002
   14002733e:	add    BYTE PTR [rax],al
   140027340:	mov    edi,0x3400006b
   140027345:	or     al,0x2
   140027347:	add    al,al
   140027349:	imul   eax,DWORD PTR [rax],0x0
   14002734c:	xor    eax,0x9000006c
   140027351:	or     al,BYTE PTR [rdx]
   140027353:	add    BYTE PTR [rax],bh
   140027355:	ins    BYTE PTR es:[rdi],dx
   140027356:	add    BYTE PTR [rax],al
   140027358:	push   rdx
   140027359:	ins    BYTE PTR es:[rdi],dx
   14002735a:	add    BYTE PTR [rax],al
   14002735c:	hlt    
   14002735d:	or     eax,DWORD PTR [rdx]
   14002735f:	add    BYTE PTR [rsp+rbp*2+0x0],dl
   140027363:	add    BYTE PTR [rax-0x6fffff94],bh
   140027369:	(bad)  
   14002736a:	add    al,BYTE PTR [rax]
   14002736c:	mov    eax,0x700006c
   140027371:	ins    DWORD PTR es:[rdi],dx
   140027372:	add    BYTE PTR [rax],al
   140027374:	mov    WORD PTR [rcx],ss
   140027376:	add    al,BYTE PTR [rax]
   140027378:	or     BYTE PTR [rbp+0x0],ch
   14002737b:	add    bl,ch
   14002737d:	ins    DWORD PTR es:[rdi],dx
   14002737e:	add    BYTE PTR [rax],al
   140027380:	rex.R or al,0x2
   140027383:	add    ah,ch
   140027385:	ins    DWORD PTR es:[rdi],dx
   140027386:	add    BYTE PTR [rax],al
   140027388:	sti    
   140027389:	outs   dx,BYTE PTR ds:[rsi]
   14002738a:	add    BYTE PTR [rax],al
   14002738c:	rex.R or al,0x2
   14002738f:	add    ah,bh
   140027391:	outs   dx,BYTE PTR ds:[rsi]
   140027392:	add    BYTE PTR [rax],al
   140027394:	adc    esi,DWORD PTR [rax+0x0]
   140027397:	add    BYTE PTR [rbx+rdx*1],dl
   14002739a:	add    al,BYTE PTR [rax]
   14002739c:	adc    al,0x70
   14002739e:	add    BYTE PTR [rax],al
   1400273a0:	mov    BYTE PTR [rcx+0x0],dh
   1400273a3:	add    BYTE PTR [rax+0xc],ah
   1400273a6:	add    al,BYTE PTR [rax]
   1400273a8:	call   0x11202741e
   1400273ad:	jb     0x1400273af
   1400273af:	add    BYTE PTR [rcx+rdx*1+0x72d40002],cl
   1400273b6:	add    BYTE PTR [rax],al
   1400273b8:	shl    BYTE PTR [rbx+0x0],1
   1400273bb:	add    BYTE PTR [rax+0xc],ah
   1400273be:	add    al,BYTE PTR [rax]
   1400273c0:	shl    BYTE PTR [rbx+0x0],1
   1400273c3:	add    BYTE PTR [rsi-0x77],cl
   1400273c6:	add    BYTE PTR [rax],al
   1400273c8:	js     0x1400273d6
   1400273ca:	add    al,BYTE PTR [rax]
   1400273cc:	push   rax
   1400273cd:	mov    DWORD PTR [rax],eax
   1400273cf:	add    BYTE PTR [rdi-0x6fffff77],bl
   1400273d5:	or     al,0x2
   1400273d7:	add    BYTE PTR [rcx+rcx*4-0x71ef0000],dh
   1400273de:	add    BYTE PTR [rax],al
   1400273e0:	cwde   
   1400273e1:	or     al,0x2
   1400273e3:	add    BYTE PTR [rsi+rcx*4],dl
   1400273e6:	add    BYTE PTR [rax],al
   1400273e8:	jnp    0x14002737c
   1400273ea:	add    BYTE PTR [rax],al
   1400273ec:	mov    al,0xc
   1400273ee:	add    al,BYTE PTR [rax]
   1400273f0:	jl     0x140027384
   1400273f2:	add    BYTE PTR [rax],al
   1400273f4:	rex.WRX xchg rbp,rax
   1400273f6:	add    BYTE PTR [rax],al
   1400273f8:	(bad)  
   1400273f9:	or     al,0x2
   1400273fb:	add    BYTE PTR [rax-0x6b],dl
   1400273fe:	add    BYTE PTR [rax],al
   140027400:	pop    rcx
   140027401:	cwde   
   140027402:	add    BYTE PTR [rax],al
   140027404:	fmul   QWORD PTR [rdx+rax*1]
   140027407:	add    BYTE PTR [rax+rbx*4+0x0],ch
   14002740b:	add    BYTE PTR [rbp-0x6fffff68],ah
   140027411:	or     al,0x2
   140027413:	add    BYTE PTR [rax-0x41ffff68],ch
   140027419:	cwde   
   14002741a:	add    BYTE PTR [rax],al
   14002741c:	nop
   14002741d:	or     al,0x2
   14002741f:	add    al,bl
   140027421:	cwde   
   140027422:	add    BYTE PTR [rax],al
   140027424:	sbb    ebx,DWORD PTR [rcx+0xc900000]
   14002742a:	add    al,BYTE PTR [rax]
   14002742c:	sbb    al,0x99
   14002742e:	add    BYTE PTR [rax],al
   140027430:	rex.WRXB cqo 
   140027432:	add    BYTE PTR [rax],al
   140027434:	in     al,dx
   140027435:	or     al,0x2
   140027437:	add    BYTE PTR [rax-0x67],dl
   14002743a:	add    BYTE PTR [rax],al
   14002743c:	mov    DWORD PTR [rcx+0x118c0000],ebx
   140027442:	add    al,BYTE PTR [rax]
   140027444:	mov    WORD PTR [rcx-0x65c50000],ds
   14002744a:	add    BYTE PTR [rax],al
   14002744c:	mov    WORD PTR [rcx],ss
   14002744e:	add    al,BYTE PTR [rax]
   140027450:	cmp    al,0x9a
   140027452:	add    BYTE PTR [rax],al
   140027454:	retf   
   140027455:	fwait
   140027456:	add    BYTE PTR [rax],al
   140027458:	clc    
   140027459:	or     al,0x2
   14002745b:	add    BYTE PTR [rsp+rbx*4],al
   14002745e:	add    BYTE PTR [rax],al
   140027460:	sub    bl,BYTE PTR [rax+rax*1+0x20c9000]
   140027467:	add    BYTE PTR [rsp+rbx*4],ch
   14002746a:	add    BYTE PTR [rax],al
   14002746c:	xlat   BYTE PTR ds:[rbx]
   14002746d:	pushf  
   14002746e:	add    BYTE PTR [rax],al
   140027470:	sub    BYTE PTR [rip+0xffffffff9cf00002],cl        # 0xdcf27478
   140027476:	add    BYTE PTR [rax],al
   140027478:	xchg   ecx,eax
   140027479:	popf   
   14002747a:	add    BYTE PTR [rax],al
   14002747c:	nop
   14002747d:	(bad)  
   14002747e:	add    al,BYTE PTR [rax]
   140027480:	xchg   esp,eax
   140027481:	popf   
   140027482:	add    BYTE PTR [rax],al
   140027484:	call   FWORD PTR [rbp+0xd4c0000]
   14002748a:	add    al,BYTE PTR [rax]
   14002748c:	add    BYTE PTR [rsi-0x60890000],bl
   140027492:	add    BYTE PTR [rax],al
   140027494:	ins    BYTE PTR es:[rdi],dx
   140027495:	or     eax,0x9f780002
   14002749a:	add    BYTE PTR [rax],al
   14002749c:	mov    bl,BYTE PTR [rdi+0xbf40000]
   1400274a2:	add    al,BYTE PTR [rax]
   1400274a4:	movabs al,ds:0x900000a04800009f
   1400274ad:	or     eax,0xa0480002
   1400274b2:	add    BYTE PTR [rax],al
   1400274b4:	out    dx,al
   1400274b5:	movabs al,ds:0xa0f000020f380000
   1400274be:	add    BYTE PTR [rax],al
   1400274c0:	and    eax,0x940000a1
   1400274c5:	or     eax,0xa1400002
   1400274ca:	add    BYTE PTR [rax],al
   1400274cc:	je     0x140027472
   1400274ce:	add    BYTE PTR [rax],al
   1400274d0:	movabs al,ds:0x140000a47400020d
   1400274d9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400274da:	add    BYTE PTR [rax],al
   1400274dc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400274dd:	or     eax,0xa5300002
   1400274e2:	add    BYTE PTR [rax],al
   1400274e4:	sbb    ah,BYTE PTR [rsi+0xdb00000]
   1400274ea:	add    al,BYTE PTR [rax]
   1400274ec:	sbb    al,0xa6
   1400274ee:	add    BYTE PTR [rax],al
   1400274f0:	jg     0x140027498
   1400274f2:	add    BYTE PTR [rax],al
   1400274f4:	nop
   1400274f5:	or     al,0x2
   1400274f7:	add    BYTE PTR [rax-0x62ffff5a],al
   1400274fd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400274fe:	add    BYTE PTR [rax],al
   140027500:	hlt    
   140027501:	or     eax,DWORD PTR [rdx]
   140027503:	add    BYTE PTR [rax+0x400000a6],dh
   140027509:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002750a:	add    BYTE PTR [rax],al
   14002750c:	mov    eax,0x5000020d
   140027511:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140027512:	add    BYTE PTR [rax],al
   140027514:	(bad)  
   140027515:	test   al,0x0
   140027517:	add    BYTE PTR [rbp+rcx*1-0x57dffffe],bh
   14002751e:	add    BYTE PTR [rax],al
   140027520:	(bad)  
   140027521:	test   al,0x0
   140027523:	add    al,al
   140027525:	or     eax,0xa8500002
   14002752a:	add    BYTE PTR [rax],al
   14002752c:	add    BYTE PTR [rcx+0xdc80000],ch
   140027532:	add    al,BYTE PTR [rax]
   140027534:	add    BYTE PTR [rcx-0x55d20000],ch
   14002753a:	add    BYTE PTR [rax],al
   14002753c:	int3   
   14002753d:	or     eax,0xaa300002
   140027542:	add    BYTE PTR [rax],al
   140027544:	je     0x1400274f1
   140027546:	add    BYTE PTR [rax],al
   140027548:	hlt    
   140027549:	or     eax,0xab740002
   14002754e:	add    BYTE PTR [rax],al
   140027550:	xchg   edi,eax
   140027551:	stos   DWORD PTR es:[rdi],eax
   140027552:	add    BYTE PTR [rax],al
   140027554:	in     al,dx
   140027555:	adc    BYTE PTR [rdx],al
   140027557:	add    BYTE PTR [rax-0x7fffff55],ah
   14002755d:	lods   al,BYTE PTR ds:[rsi]
   14002755e:	add    BYTE PTR [rax],al
   140027560:	nop
   140027561:	or     al,0x2
   140027563:	add    BYTE PTR [rax-0x58ffff54],al
   140027569:	lods   al,BYTE PTR ds:[rsi]
   14002756a:	add    BYTE PTR [rax],al
   14002756c:	hlt    
   14002756d:	or     eax,DWORD PTR [rdx]
   14002756f:	add    BYTE PTR [rax+0xb0000ac],ch
   140027575:	lods   eax,DWORD PTR ds:[rsi]
   140027576:	add    BYTE PTR [rax],al
   140027578:	nop
   140027579:	or     al,0x2
   14002757b:	add    BYTE PTR [rbp*4-0x52c30000],cl
   140027582:	add    BYTE PTR [rax],al
   140027584:	nop
   140027585:	or     al,0x2
   140027587:	add    BYTE PTR [rbp+rbp*4-0x51da0000],ch
   14002758e:	add    BYTE PTR [rax],al
   140027590:	mov    WORD PTR [rcx],ss
   140027592:	add    al,BYTE PTR [rax]
   140027594:	sub    BYTE PTR [rsi-0x51720000],ch
   14002759a:	add    BYTE PTR [rax],al
   14002759c:	and    al,0xe
   14002759e:	add    al,BYTE PTR [rax]
   1400275a0:	nop
   1400275a1:	scas   al,BYTE PTR es:[rdi]
   1400275a2:	add    BYTE PTR [rax],al
   1400275a4:	rex.X scas eax,DWORD PTR es:[rdi]
   1400275a6:	add    BYTE PTR [rax],al
   1400275a8:	rex.W (bad) 
   1400275aa:	add    al,BYTE PTR [rax]
   1400275ac:	rex.R scas eax,DWORD PTR es:[rdi]
   1400275ae:	add    BYTE PTR [rax],al
   1400275b0:	xlat   BYTE PTR ds:[rbx]
   1400275b1:	scas   eax,DWORD PTR es:[rdi]
   1400275b2:	add    BYTE PTR [rax],al
   1400275b4:	rex.W (bad) 
   1400275b6:	add    al,BYTE PTR [rax]
   1400275b8:	fsubr  DWORD PTR [rdi-0x4ec10000]
   1400275be:	add    BYTE PTR [rax],al
   1400275c0:	pop    rax
   1400275c1:	(bad)  
   1400275c2:	add    al,BYTE PTR [rax]
   1400275c4:	mov    cl,0x0
   1400275c7:	add    BYTE PTR [rip+0xffffffff800000b2],dl        # 0xc002767f
   1400275cd:	(bad)  
   1400275ce:	add    al,BYTE PTR [rax]
   1400275d0:	and    al,0xb2
   1400275d2:	add    BYTE PTR [rax],al
   1400275d4:	shl    DWORD PTR [rdx+0xebc0000],1
   1400275da:	add    al,BYTE PTR [rax]
   1400275dc:	(bad)  
   1400275dd:	mov    dl,0x0
   1400275df:	add    BYTE PTR [rdx-0x6fffff4d],cl
   1400275e5:	(bad)  
   1400275e6:	add    al,BYTE PTR [rax]
   1400275e8:	mov    WORD PTR [rbx-0x4ba10000],?
   1400275ee:	add    BYTE PTR [rax],al
   1400275f0:	nop
   1400275f1:	(bad)  
   1400275f2:	add    al,BYTE PTR [rax]
   1400275f4:	(bad)  
   1400275f5:	mov    ah,0x0
   1400275f7:	add    BYTE PTR [rbp-0x1bffff4c],bl
   1400275fd:	sbb    DWORD PTR [rdx],eax
   1400275ff:	add    BYTE PTR [rax+0x470000b4],ah
   140027605:	mov    ch,0x0
   140027607:	add    al,ah
   140027609:	(bad)  
   14002760a:	add    al,BYTE PTR [rax]
   14002760c:	jo     0x1400275c3
   14002760e:	add    BYTE PTR [rax],al
   140027610:	and    eax,0x100000b6
   140027615:	lar    eax,WORD PTR [rax]
   140027618:	sub    BYTE PTR [rsi-0x44da0000],dh
   14002761e:	add    BYTE PTR [rax],al
   140027620:	adc    al,0xf
   140027622:	add    al,BYTE PTR [rax]
   140027624:	push   rax
   140027625:	mov    ebx,0xbc1b0000
   14002762a:	add    BYTE PTR [rax],al
   14002762c:	cmp    BYTE PTR [rdi],cl
   14002762e:	add    al,BYTE PTR [rax]
   140027630:	sbb    al,0xbc
   140027632:	add    BYTE PTR [rax],al
   140027634:	xor    bh,BYTE PTR [rax+rax*1+0x210ec00]
   14002763b:	add    BYTE PTR [rsp+rdi*4],dh
   14002763e:	add    BYTE PTR [rax],al
   140027640:	ret    
   140027641:	mov    esp,0xf380000
   140027646:	add    al,BYTE PTR [rax]
   140027648:	fdivr  QWORD PTR [rax+rax*1+0xbd7600]
   14002764f:	add    BYTE PTR [rdi+rcx*1+0x2],cl
   140027653:	add    al,al
   140027655:	mov    ebp,0xbde00000
   14002765a:	add    BYTE PTR [rax],al
   14002765c:	hlt    
   14002765d:	or     eax,DWORD PTR [rdx]
   14002765f:	add    al,ah
   140027661:	mov    ebp,0xbe000000
   140027666:	add    BYTE PTR [rax],al
   140027668:	hlt    
   140027669:	or     eax,DWORD PTR [rdx]
   14002766b:	add    BYTE PTR [rax],al
   14002766d:	mov    esi,0xbe460000
   140027672:	add    BYTE PTR [rax],al
   140027674:	nop
   140027675:	or     al,0x2
   140027677:	add    BYTE PTR [rax-0x42],cl
   14002767a:	add    BYTE PTR [rax],al
   14002767c:	sar    DWORD PTR [rsi+0x16900000],0x2
   140027683:	add    ah,al
   140027685:	mov    esi,0xbf100000
   14002768a:	add    BYTE PTR [rax],al
   14002768c:	nop
   14002768d:	or     al,0x2
   14002768f:	add    BYTE PTR [rax],dl
   140027691:	mov    edi,0xbffc0000
   140027696:	add    BYTE PTR [rax],al
   140027698:	pop    rax
   140027699:	lar    eax,WORD PTR [rax]
   14002769c:	cld    
   14002769d:	mov    edi,0xc03f0000
   1400276a2:	add    BYTE PTR [rax],al
   1400276a4:	cwde   
   1400276a5:	lar    eax,WORD PTR [rax]
   1400276a8:	push   0xffffffffe80000c0
   1400276ad:	ret    0x0
   1400276b0:	mov    esp,0xe800020f
   1400276b5:	ret    0x0
   1400276b8:	sbb    al,bl
   1400276ba:	add    BYTE PTR [rax],al
   1400276bc:	ror    BYTE PTR [rdi],1
   1400276be:	add    al,BYTE PTR [rax]
   1400276c0:	sbb    al,0xc3
   1400276c2:	add    BYTE PTR [rax],al
   1400276c4:	pushf  
   1400276c5:	ret    
   1400276c6:	add    BYTE PTR [rax],al
   1400276c8:	nop
   1400276c9:	or     al,0x2
   1400276cb:	add    BYTE PTR [rbx+rax*8-0x3c520000],bl
   1400276d2:	add    BYTE PTR [rax],al
   1400276d4:	hlt    
   1400276d5:	or     eax,DWORD PTR [rdx]
   1400276d7:	add    BYTE PTR [rax-0x2cffff3d],dh
   1400276dd:	ret    
   1400276de:	add    BYTE PTR [rax],al
   1400276e0:	nop
   1400276e1:	or     al,0x2
   1400276e3:	add    ah,dl
   1400276e5:	ret    
   1400276e6:	add    BYTE PTR [rax],al
   1400276e8:	add    ah,al
   1400276ea:	add    BYTE PTR [rax],al
   1400276ec:	lock lar eax,WORD PTR [rax]
   1400276f0:	add    ah,al
   1400276f2:	add    BYTE PTR [rax],al
   1400276f4:	add    ah,0x0
   1400276f7:	add    BYTE PTR [rax-0x7ffffdf4],dl
   1400276fd:	(bad)  
   1400276fe:	add    BYTE PTR [rax],al
   140027700:	jb     0x1400276c7
   140027702:	add    BYTE PTR [rax],al
   140027704:	adc    BYTE PTR [rax],dl
   140027706:	add    al,BYTE PTR [rax]
   140027708:	nop
   140027709:	(bad)
   14002770c:	push   rdi
   14002770d:	mov    BYTE PTR [rax],0x0
   140027710:	sub    BYTE PTR [rax],dl
   140027712:	add    al,BYTE PTR [rax]
   140027714:	pop    rax
   140027715:	mov    BYTE PTR [rax],0x0
   140027718:	icebp  
   140027719:	mov    BYTE PTR [rax],0x0
   14002771c:	rex.W (bad) 
   14002771e:	add    al,BYTE PTR [rax]
   140027720:	hlt    
   140027721:	mov    BYTE PTR [rax],0x0
   140027724:	xchg   ebp,eax
   140027725:	mov    DWORD PTR [rax],0x20c9000
   14002772b:	add    BYTE PTR [rax+0x160000c7],bl
   140027731:	enter  0x0,0x2c
   140027735:	adc    BYTE PTR [rdx],al
   140027737:	add    BYTE PTR [rax],bl
   140027739:	enter  0x0,0x9b
   14002773d:	enter  0x0,0x2c
   140027741:	adc    BYTE PTR [rdx],al
   140027743:	add    BYTE PTR [rax+rcx*8-0x36e60000],bl
   14002774a:	add    BYTE PTR [rax],al
   14002774c:	sub    al,0x10
   14002774e:	add    al,BYTE PTR [rax]
   140027750:	sbb    al,0xc9
   140027752:	add    BYTE PTR [rax],al
   140027754:	movabs al,ds:0xa0000210340000c9
   14002775d:	leave  
   14002775e:	add    BYTE PTR [rax],al
   140027760:	(bad)  
   140027761:	retf   0x0
   140027764:	in     al,dx
   140027765:	adc    eax,0xca400002
   14002776a:	add    BYTE PTR [rax],al
   14002776c:	es retf 
   14002776e:	add    BYTE PTR [rax],al
   140027770:	rex.W adc BYTE PTR [rdx],al
   140027773:	add    BYTE PTR [rax],ch
   140027775:	retf   
   140027776:	add    BYTE PTR [rax],al
   140027778:	ins    BYTE PTR es:[rdi],dx
   140027779:	retf   
   14002777a:	add    BYTE PTR [rax],al
   14002777c:	mov    WORD PTR [rcx],ss
   14002777e:	add    al,BYTE PTR [rax]
   140027780:	ins    BYTE PTR es:[rdi],dx
   140027781:	retf   
   140027782:	add    BYTE PTR [rax],al
   140027784:	(bad)  
   140027785:	retf   
   140027786:	add    BYTE PTR [rax],al
   140027788:	je     0x14002779a
   14002778a:	add    al,BYTE PTR [rax]
   14002778c:	nop
   14002778d:	retf   
   14002778e:	add    BYTE PTR [rax],al
   140027790:	lods   eax,DWORD PTR ds:[rsi]
   140027791:	retf   
   140027792:	add    BYTE PTR [rax],al
   140027794:	hlt    
   140027795:	or     eax,DWORD PTR [rdx]
   140027797:	add    al,ah
   140027799:	retf   
   14002779a:	add    BYTE PTR [rax],al
   14002779c:	adc    cl,dh
   14002779e:	add    BYTE PTR [rax],al
   1400277a0:	pushf  
   1400277a1:	adc    BYTE PTR [rdx],al
   1400277a3:	add    BYTE PTR [rsi+rcx*8],ch
   1400277a6:	add    BYTE PTR [rax],al
   1400277a8:	ja     0x140027779
   1400277aa:	add    BYTE PTR [rax],al
   1400277ac:	int3   
   1400277ad:	adc    BYTE PTR [rdx],al
   1400277af:	add    BYTE PTR [rax-0x31],bh
   1400277b2:	add    BYTE PTR [rax],al
   1400277b4:	test   eax,0xf40000cf
   1400277b9:	or     eax,DWORD PTR [rdx]
   1400277bb:	add    BYTE PTR [rdi+rcx*8-0x2fe50000],ch
   1400277c2:	add    BYTE PTR [rax],al
   1400277c4:	jo     0x1400277d8
   1400277c6:	add    al,BYTE PTR [rax]
   1400277c8:	sbb    al,0xd0
   1400277ca:	add    BYTE PTR [rax],al
   1400277cc:	cmp    dl,al
   1400277ce:	add    BYTE PTR [rax],al
   1400277d0:	in     al,dx
   1400277d1:	adc    BYTE PTR [rdx],al
   1400277d3:	add    BYTE PTR [rax+rdx*8+0x0],al
   1400277d7:	add    BYTE PTR [rdi-0x30],dh
   1400277da:	add    BYTE PTR [rax],al
   1400277dc:	nop
   1400277dd:	or     al,0x2
   1400277df:	add    BYTE PTR [rax-0x3affff30],ah
   1400277e5:	rol    BYTE PTR [rax],1
   1400277e7:	add    ah,dh
   1400277e9:	or     eax,DWORD PTR [rdx]
   1400277eb:	add    al,cl
   1400277ed:	rol    BYTE PTR [rax],1
   1400277ef:	add    BYTE PTR [rbp-0x2f],bh
   1400277f2:	add    BYTE PTR [rax],al
   1400277f4:	hlt    
   1400277f5:	adc    BYTE PTR [rdx],al
   1400277f7:	add    BYTE PTR [rax+0x40000d1],al
   1400277fd:	rol    BYTE PTR [rax],cl
   1400277ff:	add    BYTE PTR [rcx+rdx*1-0x2dfbfffe],cl
   140027806:	add    BYTE PTR [rax],al
   140027808:	sub    dl,dl
   14002780a:	add    BYTE PTR [rax],al
   14002780c:	nop
   14002780d:	or     al,0x2
   14002780f:	add    BYTE PTR [rax],ch
   140027811:	rol    BYTE PTR [rax],cl
   140027813:	add    BYTE PTR [rbx-0x2d],bl
   140027816:	add    BYTE PTR [rax],al
   140027818:	sub    BYTE PTR [rcx],dl
   14002781a:	add    al,BYTE PTR [rax]
   14002781c:	pop    rsp
   14002781d:	rol    DWORD PTR [rax],cl
   14002781f:	add    BYTE PTR [rdx-0x6fffff2d],bl
   140027825:	or     al,0x2
   140027827:	add    BYTE PTR [rbx+rdx*8-0x2be30000],bl
   14002782e:	add    BYTE PTR [rax],al
   140027830:	nop
   140027831:	or     al,0x2
   140027833:	add    BYTE PTR [rax],ah
   140027835:	(bad)  
   140027836:	add    BYTE PTR [rax],al
   140027838:	movsxd edx,esp
   14002783a:	add    BYTE PTR [rax],al
   14002783c:	nop
   14002783d:	or     al,0x2
   14002783f:	add    BYTE PTR [rsp+rdx*8+0x0],ah
   140027843:	add    BYTE PTR [rsi-0x2b],ch
   140027846:	add    BYTE PTR [rax],al
   140027848:	pop    rsp
   140027849:	adc    DWORD PTR [rdx],eax
   14002784b:	add    BYTE PTR [rax-0x2b],dh
   14002784e:	add    BYTE PTR [rax],al
   140027850:	xchg   ebp,edx
   140027852:	add    BYTE PTR [rax],al
   140027854:	hlt    
   140027855:	or     eax,DWORD PTR [rdx]
   140027857:	add    BYTE PTR [rax-0x3fffff2b],cl
   14002785d:	(bad)  
   14002785e:	add    BYTE PTR [rax],al
   140027860:	mov    WORD PTR [rcx],ss
   140027862:	add    al,BYTE PTR [rax]
   140027864:	rcl    ch,0x0
   140027867:	add    al,bh
   140027869:	(bad)  
   14002786a:	add    BYTE PTR [rax],al
   14002786c:	mov    WORD PTR [rcx],ss
   14002786e:	add    al,BYTE PTR [rax]
   140027870:	clc    
   140027871:	(bad)  
   140027872:	add    BYTE PTR [rax],al
   140027874:	cs (bad) 
   140027876:	add    BYTE PTR [rax],al
   140027878:	mov    WORD PTR [rcx],ss
   14002787a:	add    al,BYTE PTR [rax]
   14002787c:	mov    al,0xd6
   14002787e:	add    BYTE PTR [rax],al
   140027880:	icebp  
   140027881:	(bad)  
   140027882:	add    BYTE PTR [rax],al
   140027884:	cwde   
   140027885:	adc    DWORD PTR [rdx],eax
   140027887:	add    ah,dh
   140027889:	(bad)  
   14002788a:	add    BYTE PTR [rax],al
   14002788c:	icebp  
   14002788d:	fadd   DWORD PTR [rax]
   14002788f:	add    BYTE PTR [rax+0x20000211],bh
   140027895:	fld    DWORD PTR [rax]
   140027897:	add    BYTE PTR [rbp-0x25],bh
   14002789a:	add    BYTE PTR [rax],al
   14002789c:	(bad)  
   14002789d:	adc    DWORD PTR [rdx],eax
   14002789f:	add    BYTE PTR [rax-0x3cffff25],al
   1400278a5:	fild   DWORD PTR [rax]
   1400278a7:	add    ah,dh
   1400278a9:	or     eax,DWORD PTR [rdx]
   1400278ab:	add    ah,al
   1400278ad:	fild   DWORD PTR [rax]
   1400278af:	add    BYTE PTR [rbp-0x7ffff24],dl
   1400278b5:	adc    DWORD PTR [rdx],eax
   1400278b7:	add    BYTE PTR [rax-0x30ffff24],bl
   1400278bd:	fadd   QWORD PTR [rax]
   1400278bf:	add    BYTE PTR [rax],cl
   1400278c1:	adc    al,BYTE PTR [rdx]
   1400278c3:	add    al,dl
   1400278c5:	fadd   QWORD PTR [rax]
   1400278c7:	add    BYTE PTR [rsi],dl
   1400278c9:	fld    QWORD PTR [rax]
   1400278cb:	add    BYTE PTR [rax+0x1800020c],dl
   1400278d1:	fld    QWORD PTR [rax]
   1400278d3:	add    BYTE PTR [rcx-0x23],ch
   1400278d6:	add    BYTE PTR [rax],al
   1400278d8:	adc    BYTE PTR [rdx],dl
   1400278da:	add    al,BYTE PTR [rax]
   1400278dc:	ins    BYTE PTR es:[rdi],dx
   1400278dd:	fld    QWORD PTR [rax]
   1400278df:	add    BYTE PTR [rcx],al
   1400278e1:	fiadd  WORD PTR [rax]
   1400278e3:	add    BYTE PTR [rbx+rdx*1],dl
   1400278e6:	add    al,BYTE PTR [rax]
   1400278e8:	add    al,0xde
   1400278ea:	add    BYTE PTR [rax],al
   1400278ec:	mov    al,0xe8
   1400278ee:	add    BYTE PTR [rax],al
   1400278f0:	and    al,0x12
   1400278f2:	add    al,BYTE PTR [rax]
   1400278f4:	mov    al,0xe8
   1400278f6:	add    BYTE PTR [rax],al
   1400278f8:	mov    dl,0xe9
   1400278fa:	add    BYTE PTR [rax],al
   1400278fc:	rex.W adc al,BYTE PTR [rdx]
   1400278ff:	add    BYTE PTR [rcx+rbp*8-0x15520000],bh
   140027906:	add    BYTE PTR [rax],al
   140027908:	(bad)  
   140027909:	adc    al,BYTE PTR [rdx]
   14002790b:	add    BYTE PTR [rax+0x110000ea],dh
   140027911:	jmp    0x140027913
   140027913:	add    BYTE PTR [rax+0x1400020c],dl
   140027919:	jmp    0x14002791b
   14002791b:	add    BYTE PTR [rbp-0x15],dl
   14002791e:	add    BYTE PTR [rax],al
   140027920:	nop
   140027921:	or     al,0x2
   140027923:	add    BYTE PTR [rbx+rbp*8+0x0],dh
   140027927:	add    BYTE PTR [rbp-0xbffff15],dh
   14002792d:	or     eax,DWORD PTR [rdx]
   14002792f:	add    BYTE PTR [rax-0x2fffff15],bh
   140027935:	jmp    0x140027937
   140027937:	add    ah,dh
   140027939:	or     eax,DWORD PTR [rdx]
   14002793b:	add    al,dl
   14002793d:	jmp    0x14002793f
   14002793f:	add    BYTE PTR [rax-0x13ffff13],ah
   140027945:	adc    eax,0xeda00002
   14002794a:	add    BYTE PTR [rax],al
   14002794c:	shr    dh,1
   14002794e:	add    BYTE PTR [rax],al
   140027950:	jo     0x140027964
   140027952:	add    al,BYTE PTR [rax]
   140027954:	shr    dh,1
   140027956:	add    BYTE PTR [rax],al
   140027958:	lahf   
   140027959:	lock add BYTE PTR [rax],al
   14002795c:	rex.R or al,0x2
   14002795f:	add    BYTE PTR [rax-0x69ffff10],ah
   140027965:	icebp  
   140027966:	add    BYTE PTR [rax],al
   140027968:	test   BYTE PTR [rdx],dl
   14002796a:	add    al,BYTE PTR [rax]
   14002796c:	cwde   
   14002796d:	icebp  
   14002796e:	add    BYTE PTR [rax],al
   140027970:	mov    edx,?
   140027972:	add    BYTE PTR [rax],al
   140027974:	xchg   esp,eax
   140027975:	adc    al,BYTE PTR [rdx]
   140027977:	add    BYTE PTR [rdx+rsi*8-0xaa20000],cl
   14002797e:	add    BYTE PTR [rax],al
   140027980:	lods   al,BYTE PTR ds:[rsi]
   140027981:	adc    al,BYTE PTR [rdx]
   140027983:	add    BYTE PTR [rax-0xb],ah
   140027986:	add    BYTE PTR [rax],al
   140027988:	mov    dh,0xf5
   14002798a:	add    BYTE PTR [rax],al
   14002798c:	hlt    
   14002798d:	or     eax,DWORD PTR [rdx]
   14002798f:	add    BYTE PTR [rax+0x6b0000f5],bh
   140027995:	test   BYTE PTR [rax],0x0
   140027998:	enter  0x212,0x0
   14002799c:	ins    BYTE PTR es:[rdi],dx
   14002799d:	test   BYTE PTR [rax],0x0
   1400279a0:	add    dh,bh
   1400279a2:	add    BYTE PTR [rax],al
   1400279a4:	nop
   1400279a5:	(bad)  
   1400279a6:	add    al,BYTE PTR [rax]
   1400279a8:	add    al,0xf7
   1400279aa:	add    BYTE PTR [rax],al
   1400279ac:	sub    edi,esi
   1400279ae:	add    BYTE PTR [rax],al
   1400279b0:	hlt    
   1400279b1:	or     eax,DWORD PTR [rdx]
   1400279b3:	add    BYTE PTR [rdi+rsi*8],ch
   1400279b6:	add    BYTE PTR [rax],al
   1400279b8:	movabs al,ds:0xa0000212d4000107
   1400279c1:	(bad)  
   1400279c2:	add    DWORD PTR [rax],eax
   1400279c4:	sub    eax,0xf8000109
   1400279c9:	adc    al,BYTE PTR [rdx]
   1400279cb:	add    BYTE PTR [rax],dh
   1400279cd:	or     DWORD PTR [rcx],eax
   1400279cf:	add    BYTE PTR [rdx+0xa],bh
   1400279d2:	add    DWORD PTR [rax],eax
   1400279d4:	or     al,0x13
   1400279d6:	add    al,BYTE PTR [rax]
   1400279d8:	jl     0x1400279e4
   1400279da:	add    DWORD PTR [rax],eax
   1400279dc:	movabs ds:0xa400020bf400010a,al
   1400279e5:	or     al,BYTE PTR [rcx]
   1400279e7:	add    BYTE PTR [rdx],ah
   1400279e9:	or     eax,DWORD PTR [rcx]
   1400279eb:	add    BYTE PTR [rax+0xc],ah
   1400279ee:	add    al,BYTE PTR [rax]
   1400279f0:	and    al,0xb
   1400279f2:	add    DWORD PTR [rax],eax
   1400279f4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400279f5:	or     eax,DWORD PTR [rcx]
   1400279f7:	add    BYTE PTR [rax+0xc],ah
   1400279fa:	add    al,BYTE PTR [rax]
   1400279fc:	test   al,0xb
   1400279fe:	add    DWORD PTR [rax],eax
   140027a00:	sub    eax,0x6000010c
   140027a05:	or     al,0x2
   140027a07:	add    BYTE PTR [rax],dh
   140027a09:	or     al,0x1
   140027a0b:	add    BYTE PTR [rax+0x1400010c],bh
   140027a11:	adc    eax,DWORD PTR [rdx]
   140027a13:	add    BYTE PTR [rax+0x6200010c],bh
   140027a19:	or     eax,0x132c0001
   140027a1e:	add    al,BYTE PTR [rax]
   140027a20:	fs or  eax,0xe200001
   140027a26:	add    DWORD PTR [rax],eax
   140027a28:	mov    WORD PTR [rcx],ss
   140027a2a:	add    al,BYTE PTR [rax]
   140027a2c:	and    BYTE PTR [rsi],cl
   140027a2e:	add    DWORD PTR [rax],eax
   140027a30:	jrcxz  0x140027a40
   140027a32:	add    DWORD PTR [rax],eax
   140027a34:	push   rsp
   140027a35:	adc    eax,DWORD PTR [rdx]
   140027a37:	add    ah,ah
   140027a39:	(bad)  
   140027a3a:	add    DWORD PTR [rax],eax
   140027a3c:	sbb    ecx,DWORD PTR [rdi]
   140027a3e:	add    DWORD PTR [rax],eax
   140027a40:	nop
   140027a41:	or     al,0x2
   140027a43:	add    BYTE PTR [rdi+rcx*1],bl
   140027a46:	add    DWORD PTR [rax],eax
   140027a48:	outs   dx,BYTE PTR ds:[rsi]
   140027a49:	adc    BYTE PTR [rcx],al
   140027a4b:	add    BYTE PTR [rax+0x70000216],dl
   140027a51:	adc    BYTE PTR [rcx],al
   140027a53:	add    BYTE PTR [rsi],ah
   140027a55:	adc    eax,DWORD PTR [rcx]
   140027a57:	add    BYTE PTR [rbx+rdx*1+0x2],bh
   140027a5b:	add    BYTE PTR [rax],ch
   140027a5d:	adc    eax,DWORD PTR [rcx]
   140027a5f:	add    BYTE PTR [rdi+0x14],bh
   140027a62:	add    DWORD PTR [rax],eax
   140027a64:	xchg   esp,eax
   140027a65:	adc    eax,DWORD PTR [rdx]
   140027a67:	add    BYTE PTR [rax-0x4bfffeec],dl
   140027a6d:	adc    al,0x1
   140027a6f:	add    al,al
   140027a71:	adc    eax,DWORD PTR [rdx]
   140027a73:	add    al,al
   140027a75:	adc    al,0x1
   140027a77:	add    al,bl
   140027a79:	adc    al,0x1
   140027a7b:	add    al,cl
   140027a7d:	adc    eax,DWORD PTR [rdx]
   140027a7f:	add    al,ah
   140027a81:	adc    al,0x1
   140027a83:	add    cl,ah
   140027a85:	adc    al,0x1
   140027a87:	add    ah,cl
   140027a89:	adc    eax,DWORD PTR [rdx]
   140027a8b:	add    al,dh
   140027a8d:	adc    al,0x1
   140027a8f:	add    cl,dh
   140027a91:	adc    al,0x1
   140027a93:	add    al,dl
   140027a95:	adc    eax,DWORD PTR [rdx]
   140027a97:	add    BYTE PTR [rdx*1+0x15b10001],al
   140027a9e:	add    DWORD PTR [rax],eax
   140027aa0:	in     al,dx
   140027aa1:	adc    eax,0x15b40002
   140027aa6:	add    DWORD PTR [rax],eax
   140027aa8:	pop    rsi
   140027aa9:	(bad)  
   140027aaa:	add    DWORD PTR [rax],eax
   140027aac:	(bad)  
   140027aad:	adc    eax,DWORD PTR [rdx]
   140027aaf:	add    BYTE PTR [rax+0x16],ah
   140027ab2:	add    DWORD PTR [rax],eax
   140027ab4:	(bad)  
   140027ab5:	(bad)  
   140027ab6:	add    DWORD PTR [rax],eax
   140027ab8:	hlt    
   140027ab9:	or     eax,DWORD PTR [rdx]
   140027abb:	add    ah,dl
   140027abd:	(bad)  
   140027abe:	add    DWORD PTR [rax],eax
   140027ac0:	jns    0x140027ad9
   140027ac2:	add    DWORD PTR [rax],eax
   140027ac4:	in     al,0x13
   140027ac6:	add    al,BYTE PTR [rax]
   140027ac8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140027ac9:	(bad)  
   140027aca:	add    DWORD PTR [rax],eax
   140027acc:	lods   al,BYTE PTR ds:[rsi]
   140027acd:	sbb    DWORD PTR [rcx],eax
   140027acf:	add    BYTE PTR [rsp+rdx*1],dl
   140027ad2:	add    al,BYTE PTR [rax]
   140027ad4:	lods   al,BYTE PTR ds:[rsi]
   140027ad5:	sbb    DWORD PTR [rcx],eax
   140027ad7:	add    BYTE PTR [rcx+riz*1],cl
   140027ada:	add    DWORD PTR [rax],eax
   140027adc:	push   rsp
   140027add:	adc    al,0x2
   140027adf:	add    BYTE PTR [rcx+riz*1],cl
   140027ae2:	add    DWORD PTR [rax],eax
   140027ae4:	jmp    0x140027b07
   140027ae6:	add    DWORD PTR [rax],eax
   140027ae8:	js     0x140027afe
   140027aea:	add    al,BYTE PTR [rax]
   140027aec:	in     al,dx
   140027aed:	and    DWORD PTR [rcx],eax
   140027aef:	add    BYTE PTR [rdi],dl
   140027af1:	and    eax,DWORD PTR [rcx]
   140027af3:	add    BYTE PTR [rsp+rdx*1+0x23180002],ah
   140027afa:	add    DWORD PTR [rax],eax
   140027afc:	jmp    QWORD PTR [rbx]
   140027afe:	add    DWORD PTR [rax],eax
   140027b00:	mov    WORD PTR [rcx],ss
   140027b02:	add    al,BYTE PTR [rax]
   140027b04:	add    BYTE PTR [rcx+rax*1],ah
   140027b07:	add    BYTE PTR [rdx-0x3ffffed9],dh
   140027b0d:	adc    al,0x2
   140027b0f:	add    BYTE PTR [rdi+riz*1+0x2f5b0001],dh
   140027b16:	add    DWORD PTR [rax],eax
   140027b18:	clc    
   140027b19:	adc    al,0x2
   140027b1b:	add    BYTE PTR [rdi+rbp*1+0x1],bl
   140027b1f:	add    BYTE PTR [rcx],dh
   140027b21:	xor    BYTE PTR [rcx],al
   140027b23:	add    BYTE PTR [rax],bl
   140027b25:	adc    eax,0x30340002
   140027b2a:	add    DWORD PTR [rax],eax
   140027b2c:	(bad)  
   140027b2d:	xor    DWORD PTR [rcx],eax
   140027b2f:	add    BYTE PTR [rdx*1+0x31080002],bh
   140027b36:	add    DWORD PTR [rax],eax
   140027b38:	cmp    dh,BYTE PTR [rcx]
   140027b3a:	add    DWORD PTR [rax],eax
   140027b3c:	in     al,dx
   140027b3d:	adc    BYTE PTR [rdx],al
   140027b3f:	add    BYTE PTR [rcx+rsi*1],bh
   140027b42:	add    DWORD PTR [rax],eax
   140027b44:	(bad)  
   140027b45:	xor    al,0x1
   140027b47:	add    BYTE PTR [rax+0x15],ah
   140027b4a:	add    al,BYTE PTR [rax]
   140027b4c:	or     BYTE PTR [rcx+rax*1],dh
   140027b4f:	add    bh,dh
   140027b51:	xor    al,0x1
   140027b53:	add    BYTE PTR [rax-0x7fffdeb],al
   140027b59:	xor    al,0x1
   140027b5b:	add    ah,bl
   140027b5d:	xor    eax,0x15a00001
   140027b62:	add    al,BYTE PTR [rax]
   140027b64:	in     al,0x35
   140027b66:	add    DWORD PTR [rax],eax
   140027b68:	(bad)  
   140027b69:	add    DWORD PTR ss:[rax],eax
   140027b6c:	push   rsp
   140027b6d:	sbb    BYTE PTR [rdx],al
   140027b6f:	add    al,ah
   140027b71:	add    DWORD PTR ss:[rax],eax
   140027b74:	lahf   
   140027b75:	(bad)  
   140027b76:	add    DWORD PTR [rax],eax
   140027b78:	nop
   140027b79:	or     al,0x2
   140027b7b:	add    BYTE PTR [rax+0x77000137],ah
   140027b81:	cmp    BYTE PTR [rcx],al
   140027b83:	add    BYTE PTR [rbp+rdx*1+0x38780002],ch
   140027b8a:	add    DWORD PTR [rax],eax
   140027b8c:	xor    edi,DWORD PTR [rcx+rax*1]
   140027b8f:	add    ah,dl
   140027b91:	adc    eax,0x3c500002
   140027b96:	add    DWORD PTR [rax],eax
   140027b98:	in     al,dx
   140027b99:	(bad)  
   140027b9a:	add    DWORD PTR [rax],eax
   140027b9c:	(bad)  
   140027b9d:	adc    eax,0x3fec0002
   140027ba2:	add    DWORD PTR [rax],eax
   140027ba4:	fadd   DWORD PTR [rax+0x1]
   140027ba7:	add    BYTE PTR [rdx+rbx*1],cl
   140027baa:	add    al,BYTE PTR [rax]
   140027bac:	loopne 0x140027bee
   140027bae:	add    DWORD PTR [rax],eax
   140027bb0:	ins    BYTE PTR es:[rdi],dx
   140027bb1:	add    DWORD PTR [r8],eax
   140027bb4:	in     al,dx
   140027bb5:	adc    eax,0x416c0002
   140027bba:	add    DWORD PTR [rax],eax
   140027bbc:	pop    rsp
   140027bbd:	rex.XB add DWORD PTR [r8],eax
   140027bc0:	add    BYTE PTR [rsi],dl
   140027bc2:	add    al,BYTE PTR [rax]
   140027bc4:	pop    rsp
   140027bc5:	rex.XB add DWORD PTR [r8],eax
   140027bc8:	(bad)  
   140027bc9:	add    DWORD PTR [rax],r8d
   140027bcc:	and    BYTE PTR [rsi],dl
   140027bce:	add    al,BYTE PTR [rax]
   140027bd0:	sbb    BYTE PTR [rcx+rax*1+0x0],al
   140027bd4:	test   al,0x44
   140027bd6:	add    DWORD PTR [rax],eax
   140027bd8:	sub    al,0x10
   140027bda:	add    al,BYTE PTR [rax]
   140027bdc:	test   al,0x44
   140027bde:	add    DWORD PTR [rax],eax
   140027be0:	sbb    eax,0x44000147
   140027be5:	(bad)  
   140027be6:	add    al,BYTE PTR [rax]
   140027be8:	and    BYTE PTR [rdi+0x1],al
   140027beb:	add    dh,bh
   140027bed:	add    QWORD PTR [rax],rax
   140027bf0:	(bad)  
   140027bf1:	(bad)  
   140027bf2:	add    al,BYTE PTR [rax]
   140027bf4:	add    BYTE PTR [rcx+0x1],cl
   140027bf7:	add    BYTE PTR [rax],ch
   140027bf9:	add    QWORD PTR [r8],rax
   140027bfc:	hlt    
   140027bfd:	or     eax,DWORD PTR [rdx]
   140027bff:	add    BYTE PTR [rax+0x4a],bl
   140027c02:	add    DWORD PTR [rax],eax
   140027c04:	ror    DWORD PTR [rbx+0x1],1
   140027c07:	add    BYTE PTR [rax-0x2bfffdea],dl
   140027c0d:	rex.WXB add QWORD PTR [r8],rax
   140027c10:	sub    ecx,DWORD PTR [rcx+rax*1+0x0]
   140027c14:	nop
   140027c15:	or     al,0x2
   140027c17:	add    BYTE PTR [rsp+rcx*2],ch
   140027c1a:	add    DWORD PTR [rax],eax
   140027c1c:	movabs eax,ds:0xa4000216a000014c
   140027c25:	add    QWORD PTR [rax],r8
   140027c28:	mov    WORD PTR [rbp+0x1],cs
   140027c2b:	add    al,al
   140027c2d:	(bad)  
   140027c2e:	add    al,BYTE PTR [rax]
   140027c30:	mov    WORD PTR [rbp+0x1],cs
   140027c33:	add    ah,cl
   140027c35:	add    QWORD PTR [r8],r8
   140027c38:	hlt    
   140027c39:	or     eax,DWORD PTR [rdx]
   140027c3b:	add    ah,dl
   140027c3d:	add    QWORD PTR [r8],r8
   140027c40:	or     eax,0xf400014e
   140027c45:	or     eax,DWORD PTR [rdx]
   140027c47:	add    BYTE PTR [rsi+rcx*2],bl
   140027c4a:	add    DWORD PTR [rax],eax
   140027c4c:	and    al,0x50
   140027c4e:	add    DWORD PTR [rax],eax
   140027c50:	rcl    BYTE PTR [rsi],1
   140027c52:	add    al,BYTE PTR [rax]
   140027c54:	and    al,0x50
   140027c56:	add    DWORD PTR [rax],eax
   140027c58:	test   eax,0x90000150
   140027c5d:	or     al,0x2
   140027c5f:	add    BYTE PTR [rax+rdx*2+0x517b0001],ch
   140027c66:	add    DWORD PTR [rax],eax
   140027c68:	nop
   140027c69:	or     al,0x2
   140027c6b:	add    BYTE PTR [rcx+rdx*2+0x1],bh
   140027c6f:	add    bh,ah
   140027c71:	push   rcx
   140027c72:	add    DWORD PTR [rax],eax
   140027c74:	nop
   140027c75:	or     al,0x2
   140027c77:	add    al,ch
   140027c79:	push   rcx
   140027c7a:	add    DWORD PTR [rax],eax
   140027c7c:	sub    BYTE PTR [rdx+0x1],dl
   140027c7f:	add    ah,dh
   140027c81:	or     eax,DWORD PTR [rdx]
   140027c83:	add    BYTE PTR [rax],ch
   140027c85:	push   rdx
   140027c86:	add    DWORD PTR [rax],eax
   140027c88:	xchg   DWORD PTR [rdx+0x1],edx
   140027c8b:	add    ah,dh
   140027c8d:	or     eax,DWORD PTR [rdx]
   140027c8f:	add    BYTE PTR [rax-0x32fffeae],cl
   140027c95:	push   rdx
   140027c96:	add    DWORD PTR [rax],eax
   140027c98:	sub    al,0x10
   140027c9a:	add    al,BYTE PTR [rax]
   140027c9c:	rcl    BYTE PTR [rdx+0x1],1
   140027c9f:	add    BYTE PTR [rdi],dl
   140027ca1:	push   rbx
   140027ca2:	add    DWORD PTR [rax],eax
   140027ca4:	sub    al,0x10
   140027ca6:	add    al,BYTE PTR [rax]
   140027ca8:	sbb    BYTE PTR [rbx+0x1],dl
   140027cab:	add    ah,bl
   140027cad:	push   rsp
   140027cae:	add    DWORD PTR [rax],eax
   140027cb0:	in     al,dx
   140027cb1:	(bad)  
   140027cb2:	add    al,BYTE PTR [rax]
   140027cb4:	fcom   QWORD PTR [rcx+rax*1+0x0]
   140027cb8:	lock push rsp
   140027cba:	add    DWORD PTR [rax],eax
   140027cbc:	in     al,dx
   140027cbd:	adc    BYTE PTR [rdx],al
   140027cbf:	add    al,dh
   140027cc1:	push   rsp
   140027cc2:	add    DWORD PTR [rax],eax
   140027cc4:	xor    al,0x58
   140027cc6:	add    DWORD PTR [rax],eax
   140027cc8:	cld    
   140027cc9:	(bad)  
   140027cca:	add    al,BYTE PTR [rax]
   140027ccc:	xor    al,0x58
   140027cce:	add    DWORD PTR [rax],eax
   140027cd0:	mov    ebp,0x1c000158
   140027cd5:	(bad)  
   140027cd6:	add    al,BYTE PTR [rax]
   140027cd8:	rcr    BYTE PTR [rax+0x1],0x0
   140027cdc:	ret    
   140027cdd:	pop    rcx
   140027cde:	add    DWORD PTR [rax],eax
   140027ce0:	sub    al,0x17
   140027ce2:	add    al,BYTE PTR [rax]
   140027ce4:	(bad)  
   140027ce5:	pop    rcx
   140027ce6:	add    DWORD PTR [rax],eax
   140027ce8:	pop    rsi
   140027ce9:	pop    rdx
   140027cea:	add    DWORD PTR [rax],eax
   140027cec:	mov    WORD PTR [rcx],ss
   140027cee:	add    al,BYTE PTR [rax]
   140027cf0:	(bad)  
   140027cf1:	pop    rdx
   140027cf2:	add    DWORD PTR [rax],eax
   140027cf4:	fistp  DWORD PTR [rdx+0x1]
   140027cf7:	add    BYTE PTR [rax+rbx*1+0x2],dl
   140027cfb:	add    al,dh
   140027cfd:	pop    rdx
   140027cfe:	add    DWORD PTR [rax],eax
   140027d00:	sti    
   140027d01:	pop    rbx
   140027d02:	add    DWORD PTR [rax],eax
   140027d04:	mov    WORD PTR [rcx],ss
   140027d06:	add    al,BYTE PTR [rax]
   140027d08:	cld    
   140027d09:	pop    rbx
   140027d0a:	add    DWORD PTR [rax],eax
   140027d0c:	jno    0x140027d6b
   140027d0e:	add    DWORD PTR [rax],eax
   140027d10:	rex (bad) 
   140027d12:	add    al,BYTE PTR [rax]
   140027d14:	jl     0x140027d73
   140027d16:	add    DWORD PTR [rax],eax
   140027d18:	adc    DWORD PTR [rsi+0x1],ebx
   140027d1b:	add    BYTE PTR [rcx+rdx*1+0x5e140002],cl
   140027d22:	add    DWORD PTR [rax],eax
   140027d24:	neg    DWORD PTR [rsi+0x1]
   140027d27:	add    BYTE PTR [rax+0x17],bl
   140027d2a:	add    al,BYTE PTR [rax]
   140027d2c:	clc    
   140027d2d:	pop    rsi
   140027d2e:	add    DWORD PTR [rax],eax
   140027d30:	rex.WXB pop r15
   140027d32:	add    DWORD PTR [rax],eax
   140027d34:	nop
   140027d35:	or     al,0x2
   140027d37:	add    BYTE PTR [rdi+rbx*2+0x1],cl
   140027d3b:	add    BYTE PTR [rdi-0x7bfffe9f],dh
   140027d41:	(bad)  
   140027d42:	add    al,BYTE PTR [rax]
   140027d44:	mov    eax,0xe8000161
   140027d49:	(bad)  
   140027d4a:	add    DWORD PTR [rax],eax
   140027d4c:	in     al,dx
   140027d4d:	adc    BYTE PTR [rdx],al
   140027d4f:	add    al,ch
   140027d51:	(bad)  
   140027d52:	add    DWORD PTR [rax],eax
   140027d54:	outs   dx,BYTE PTR ds:[rsi]
   140027d55:	(bad)  
   140027d57:	add    BYTE PTR [rax+0x70000216],dl
   140027d5d:	(bad)  
   140027d5f:	add    BYTE PTR [rbx-0x5ffffe97],dl
   140027d65:	(bad)  
   140027d66:	add    al,BYTE PTR [rax]
   140027d68:	xchg   esp,eax
   140027d69:	imul   eax,DWORD PTR [rcx],0x16aaf00
   140027d6f:	add    BYTE PTR [rax-0x4ffffde9],bh
   140027d75:	push   0x1
   140027d77:	add    BYTE PTR [rsi-0x13fffe94],dl
   140027d7d:	sbb    DWORD PTR [rdx],eax
   140027d7f:	add    BYTE PTR [rax+0x16c],ah
   140027d85:	outs   dx,BYTE PTR ds:[rsi]
   140027d86:	add    DWORD PTR [rax],eax
   140027d88:	in     al,dx
   140027d89:	sbb    DWORD PTR [rdx],eax
   140027d8b:	add    BYTE PTR [rax],cl
   140027d8d:	outs   dx,BYTE PTR ds:[rsi]
   140027d8e:	add    DWORD PTR [rax],eax
   140027d90:	(bad)  
   140027d91:	outs   dx,BYTE PTR ds:[rsi]
   140027d92:	add    DWORD PTR [rax],eax
   140027d94:	call   0xc0027fb0
   140027d99:	outs   dx,BYTE PTR ds:[rsi]
   140027d9a:	add    DWORD PTR [rax],eax
   140027d9c:	(bad)  
   140027d9d:	outs   dx,BYTE PTR ds:[rsi]
   140027d9e:	add    DWORD PTR [rax],eax
   140027da0:	lock (bad) 
   140027da2:	add    al,BYTE PTR [rax]
   140027da4:	shr    BYTE PTR [rsi+0x1],1
   140027da7:	add    BYTE PTR [rdi+rbp*2],dh
   140027daa:	add    DWORD PTR [rax],eax
   140027dac:	clc    
   140027dad:	(bad)  
   140027dae:	add    al,BYTE PTR [rax]
   140027db0:	xor    al,0x6f
   140027db2:	add    DWORD PTR [rax],eax
   140027db4:	pop    rdi
   140027db5:	jo     0x140027db8
   140027db7:	add    BYTE PTR [rax],cl
   140027db9:	sbb    BYTE PTR [rdx],al
   140027dbb:	add    BYTE PTR [rax+0x70],ah
   140027dbe:	add    DWORD PTR [rax],eax
   140027dc0:	movabs ds:0xa400021818000170,al
   140027dc9:	jo     0x140027dcc
   140027dcb:	add    BYTE PTR [rdi+0x3c000172],ch
   140027dd1:	sbb    BYTE PTR [rdx],al
   140027dd3:	add    BYTE PTR [rax-0x6afffe8e],bh
   140027dd9:	jae    0x140027ddc
   140027ddb:	add    BYTE PTR [rax+rbx*1+0x2],dl
   140027ddf:	add    BYTE PTR [rax+0x34000173],ah
   140027de5:	je     0x140027de8
   140027de7:	add    BYTE PTR [rax+0xc],ah
   140027dea:	add    al,BYTE PTR [rax]
   140027dec:	xor    al,0x74
   140027dee:	add    DWORD PTR [rax],eax
   140027df0:	int3   
   140027df1:	jne    0x140027df4
   140027df3:	add    BYTE PTR [rax+rbx*1+0x2],ah
   140027df7:	add    ah,cl
   140027df9:	jne    0x140027dfc
   140027dfb:	add    BYTE PTR [rdx+0x76],ah
   140027dfe:	add    DWORD PTR [rax],eax
   140027e00:	nop
   140027e01:	(bad)  
   140027e02:	add    al,BYTE PTR [rax]
   140027e04:	fs jbe 0x140027e08
   140027e07:	add    BYTE PTR [rbx+0x77],al
   140027e0a:	add    DWORD PTR [rax],eax
   140027e0c:	sbb    BYTE PTR [rax],0x2
   140027e0f:	add    BYTE PTR [rdi+rsi*2+0x1],al
   140027e13:	add    BYTE PTR [rdx],dl
   140027e15:	js     0x140027e18
   140027e17:	add    BYTE PTR [rax+rbx*1+0x78140002],ch
   140027e1e:	add    DWORD PTR [rax],eax
   140027e20:	rex.XB js 0x140027e24
   140027e23:	add    ah,dh
   140027e25:	or     eax,DWORD PTR [rdx]
   140027e27:	add    BYTE PTR [rax+rdi*2+0x1],al
   140027e2b:	add    dl,al
   140027e2d:	jl     0x140027e30
   140027e2f:	add    BYTE PTR [rax+rbx*1+0x7cc40002],dh
   140027e36:	add    DWORD PTR [rax],eax
   140027e38:	cwde   
   140027e39:	jg     0x140027e3c
   140027e3b:	add    al,dh
   140027e3d:	sbb    BYTE PTR [rdx],al
   140027e3f:	add    BYTE PTR [rax+0x4100017f],bl
   140027e45:	(bad)  
   140027e46:	add    DWORD PTR [rax],eax
   140027e48:	add    al,0x19
   140027e4a:	add    al,BYTE PTR [rax]
   140027e4c:	rex.R (bad) 
   140027e4e:	add    DWORD PTR [rax],eax
   140027e50:	jg     0x140027dd4
   140027e52:	add    DWORD PTR [rax],eax
   140027e54:	sbb    al,0x19
   140027e56:	add    al,BYTE PTR [rax]
   140027e58:	add    BYTE PTR [rdx-0x7d4fffff],0x1
   140027e5f:	add    BYTE PTR [rcx+rbx*1],bh
   140027e62:	add    al,BYTE PTR [rax]
   140027e64:	mov    al,0x82
   140027e66:	add    DWORD PTR [rax],eax
   140027e68:	fild   WORD PTR [rdx+0xbf40001]
   140027e6e:	add    al,BYTE PTR [rax]
   140027e70:	loopne 0x140027df4
   140027e72:	add    DWORD PTR [rax],eax
   140027e74:	jae    0x14bf67e7b
   140027e7a:	add    al,BYTE PTR [rax]
   140027e7c:	adc    BYTE PTR [rbx-0x7cc0ffff],al
   140027e82:	add    DWORD PTR [rax],eax
   140027e84:	hlt    
   140027e85:	or     eax,DWORD PTR [rdx]
   140027e87:	add    BYTE PTR [rax-0x7d],ah
   140027e8a:	add    DWORD PTR [rax],eax
   140027e8c:	sub    al,BYTE PTR [rsi+0x195c0001]
   140027e92:	add    al,BYTE PTR [rax]
   140027e94:	sub    al,0x86
   140027e96:	add    DWORD PTR [rax],eax
   140027e98:	ret    0x186
   140027e9b:	add    BYTE PTR [rcx+rbx*1-0x793bfffe],al
   140027ea2:	add    DWORD PTR [rax],eax
   140027ea4:	in     al,dx
   140027ea5:	xchg   DWORD PTR [rcx],eax
   140027ea7:	add    BYTE PTR [rax],bh
   140027ea9:	lar    eax,WORD PTR [rax]
   140027eac:	in     al,dx
   140027ead:	xchg   DWORD PTR [rcx],eax
   140027eaf:	add    BYTE PTR [rax-0xbfffe78],al
   140027eb5:	or     eax,DWORD PTR [rdx]
   140027eb7:	add    BYTE PTR [rax-0xafffe78],al
   140027ebd:	mov    BYTE PTR [rcx],al
   140027ebf:	add    BYTE PTR [rcx+rbx*1-0x7707fffe],dl
   140027ec6:	add    DWORD PTR [rax],eax
   140027ec8:	mov    ebp,0xa4000189
   140027ecd:	sbb    DWORD PTR [rdx],eax
   140027ecf:	add    al,al
   140027ed1:	mov    DWORD PTR [rcx],eax
   140027ed3:	add    ch,dh
   140027ed5:	mov    al,BYTE PTR [rcx]
   140027ed7:	add    BYTE PTR [rax],ah
   140027ed9:	sbb    al,BYTE PTR [rdx]
   140027edb:	add    al,bh
   140027edd:	mov    al,BYTE PTR [rcx]
   140027edf:	add    BYTE PTR [rbp-0x75],bh
   140027ee2:	add    DWORD PTR [rax],eax
   140027ee4:	in     al,dx
   140027ee5:	adc    eax,0x8ba00002
   140027eea:	add    DWORD PTR [rax],eax
   140027eec:	adc    BYTE PTR [rcx+rax*1+0x2199400],cl
   140027ef3:	add    BYTE PTR [rax],dl
   140027ef5:	mov    WORD PTR [rcx],es
   140027ef7:	add    BYTE PTR [rsi-0x73],ch
   140027efa:	add    DWORD PTR [rax],eax
   140027efc:	mov    ah,0x19
   140027efe:	add    al,BYTE PTR [rax]
   140027f00:	jo     0x140027e8f
   140027f02:	add    DWORD PTR [rax],eax
   140027f04:	out    dx,al
   140027f05:	lea    eax,[rcx]
   140027f07:	add    BYTE PTR [rdi+rdx*1],bl
   140027f0a:	add    al,BYTE PTR [rax]
   140027f0c:	lock lea eax,[rcx]
   140027f0f:	add    dh,bl
   140027f11:	xchg   ecx,eax
   140027f12:	add    DWORD PTR [rax],eax
   140027f14:	fcomp  QWORD PTR [rcx]
   140027f16:	add    al,BYTE PTR [rax]
   140027f18:	loopne 0x140027eab
   140027f1a:	add    DWORD PTR [rax],eax
   140027f1c:	rex.WR xchg rdx,rax
   140027f1e:	add    DWORD PTR [rax],eax
   140027f20:	in     al,0x19
   140027f22:	add    al,BYTE PTR [rax]
   140027f24:	rex.WR xchg rdx,rax
   140027f26:	add    DWORD PTR [rax],eax
   140027f28:	push   rsi
   140027f29:	xchg   ebx,eax
   140027f2a:	add    DWORD PTR [rax],eax
   140027f2c:	fcomp  QWORD PTR [rcx]
   140027f2e:	add    al,BYTE PTR [rax]
   140027f30:	pop    rax
   140027f31:	xchg   ebx,eax
   140027f32:	add    DWORD PTR [rax],eax
   140027f34:	(bad)  
   140027f35:	xchg   ebx,eax
   140027f36:	add    DWORD PTR [rax],eax
   140027f38:	hlt    
   140027f39:	or     eax,DWORD PTR [rdx]
   140027f3b:	add    al,bl
   140027f3d:	xchg   ebx,eax
   140027f3e:	add    DWORD PTR [rax],eax
   140027f40:	fist   DWORD PTR [rcx+rax*1+0x219ec00]
   140027f47:	add    ah,bl
   140027f49:	xchg   esp,eax
   140027f4a:	add    DWORD PTR [rax],eax
   140027f4c:	sub    edx,DWORD PTR [rbp+0xbf40001]
   140027f52:	add    al,BYTE PTR [rax]
   140027f54:	sub    al,0x95
   140027f56:	add    DWORD PTR [rax],eax
   140027f58:	addr32 xchg ebp,eax
   140027f5a:	add    DWORD PTR [rax],eax
   140027f5c:	add    al,0x1a
   140027f5e:	add    al,BYTE PTR [rax]
   140027f60:	push   0xffffffff8a000195
   140027f65:	xchg   ebp,eax
   140027f66:	add    DWORD PTR [rax],eax
   140027f68:	hlt    
   140027f69:	or     eax,DWORD PTR [rdx]
   140027f6b:	add    al,cl
   140027f6d:	xchg   ebp,eax
   140027f6e:	add    DWORD PTR [rax],eax
   140027f70:	sahf   
   140027f71:	xchg   esi,eax
   140027f72:	add    DWORD PTR [rax],eax
   140027f74:	or     al,0x1a
   140027f76:	add    al,BYTE PTR [rax]
   140027f78:	movabs al,ds:0xf4000196e6000196
   140027f81:	or     eax,DWORD PTR [rdx]
   140027f83:	add    ah,dh
   140027f85:	xchg   esi,eax
   140027f86:	add    DWORD PTR [rax],eax
   140027f88:	(bad)  
   140027f89:	xchg   edi,eax
   140027f8a:	add    DWORD PTR [rax],eax
   140027f8c:	and    BYTE PTR [rdx],bl
   140027f8e:	add    al,BYTE PTR [rax]
   140027f90:	pushf  
   140027f91:	xchg   edi,eax
   140027f92:	add    DWORD PTR [rax],eax
   140027f94:	(bad)  
   140027f95:	cwde   
   140027f96:	add    DWORD PTR [rax],eax
   140027f98:	cmp    BYTE PTR [rdx],bl
   140027f9a:	add    al,BYTE PTR [rax]
   140027f9c:	and    BYTE PTR [rcx-0x66bbffff],bl
   140027fa2:	add    DWORD PTR [rax],eax
   140027fa4:	xchg   esp,eax
   140027fa5:	adc    BYTE PTR [rdx],al
   140027fa7:	add    BYTE PTR [rcx+rbx*4+0x1],al
   140027fab:	add    BYTE PTR [rbx-0x67],ch
   140027fae:	add    DWORD PTR [rax],eax
   140027fb0:	xchg   esp,eax
   140027fb1:	adc    BYTE PTR [rdx],al
   140027fb3:	add    BYTE PTR [rbx-0x67],ch
   140027fb6:	add    DWORD PTR [rax],eax
   140027fb8:	test   DWORD PTR [rcx+0x10940001],ebx
   140027fbe:	add    al,BYTE PTR [rax]
   140027fc0:	test   DWORD PTR [rcx-0x6660ffff],ebx
   140027fc6:	add    DWORD PTR [rax],eax
   140027fc8:	xchg   esp,eax
   140027fc9:	adc    BYTE PTR [rdx],al
   140027fcb:	add    BYTE PTR [rdi-0x46fffe67],bl
   140027fd1:	cdq    
   140027fd2:	add    DWORD PTR [rax],eax
   140027fd4:	xchg   esp,eax
   140027fd5:	adc    BYTE PTR [rdx],al
   140027fd7:	add    BYTE PTR [rcx-0x2bfffe67],bh
   140027fdd:	cdq    
   140027fde:	add    DWORD PTR [rax],eax
   140027fe0:	xchg   esp,eax
   140027fe1:	adc    BYTE PTR [rdx],al
   140027fe3:	add    ah,dl
   140027fe5:	cdq    
   140027fe6:	add    DWORD PTR [rax],eax
   140027fe8:	out    dx,al
   140027fe9:	cdq    
   140027fea:	add    DWORD PTR [rax],eax
   140027fec:	xchg   esp,eax
   140027fed:	adc    BYTE PTR [rdx],al
   140027fef:	add    dh,ch
   140027ff1:	cdq    
   140027ff2:	add    DWORD PTR [rax],eax
   140027ff4:	(bad)  
   140027ff5:	(bad)  
   140027ff6:	add    DWORD PTR [rax],eax
   140027ff8:	xchg   esp,eax
   140027ff9:	adc    BYTE PTR [rdx],al
   140027ffb:	add    BYTE PTR [rsi],bl
   140027ffd:	(bad)  
   140027ffe:	add    DWORD PTR [rax],eax
   140028000:	cmp    DWORD PTR [rdx+0x10940001],ebx
   140028006:	add    al,BYTE PTR [rax]
   140028008:	cmp    DWORD PTR [rdx-0x65acffff],ebx
   14002800e:	add    DWORD PTR [rax],eax
   140028010:	xchg   esp,eax
   140028011:	adc    BYTE PTR [rdx],al
   140028013:	add    BYTE PTR [rbx-0x66],dl
   140028016:	add    DWORD PTR [rax],eax
   140028018:	outs   dx,BYTE PTR ds:[rsi]
   140028019:	(bad)  
   14002801a:	add    DWORD PTR [rax],eax
   14002801c:	xchg   esp,eax
   14002801d:	adc    BYTE PTR [rdx],al
   14002801f:	add    BYTE PTR [rsi-0x66],ch
   140028022:	add    DWORD PTR [rax],eax
   140028024:	mov    WORD PTR [rdx+0x10940001],ds
   14002802a:	add    al,BYTE PTR [rax]
   14002802c:	mov    WORD PTR [rdx-0x6555ffff],ds
   140028032:	add    DWORD PTR [rax],eax
   140028034:	xchg   esp,eax
   140028035:	adc    BYTE PTR [rdx],al
   140028037:	add    BYTE PTR [rdx-0x37fffe66],ch
   14002803d:	(bad)  
   14002803e:	add    DWORD PTR [rax],eax
   140028040:	xchg   esp,eax
   140028041:	adc    BYTE PTR [rdx],al
   140028043:	add    al,cl
   140028045:	(bad)  
   140028046:	add    DWORD PTR [rax],eax
   140028048:	jrcxz  0x140027fe4
   14002804a:	add    DWORD PTR [rax],eax
   14002804c:	xchg   esp,eax
   14002804d:	adc    BYTE PTR [rdx],al
   14002804f:	add    al,ch
   140028051:	(bad)  
   140028052:	add    DWORD PTR [rax],eax
   140028054:	add    ebx,DWORD PTR [rbx+0x10940001]
   14002805a:	add    al,BYTE PTR [rax]
   14002805c:	add    ebx,DWORD PTR [rbx-0x64e6ffff]
   140028062:	add    DWORD PTR [rax],eax
   140028064:	xchg   esp,eax
   140028065:	adc    BYTE PTR [rdx],al
   140028067:	add    BYTE PTR [rax],ah
   140028069:	fwait
   14002806a:	add    DWORD PTR [rax],eax
   14002806c:	rex.X
   14002806d:	fwait
   14002806e:	add    DWORD PTR [rax],eax
   140028070:	xchg   esp,eax
   140028071:	adc    BYTE PTR [rdx],al
   140028073:	add    BYTE PTR [rdx-0x65],al
   140028076:	add    DWORD PTR [rax],eax
   140028078:	pop    rbp
   140028079:	fwait
   14002807a:	add    DWORD PTR [rax],eax
   14002807c:	xchg   esp,eax
   14002807d:	adc    BYTE PTR [rdx],al
   14002807f:	add    BYTE PTR [rbp-0x65],bl
   140028082:	add    DWORD PTR [rax],eax
   140028084:	jbe    0x140028021
   140028086:	add    DWORD PTR [rax],eax
   140028088:	xchg   esp,eax
   140028089:	adc    BYTE PTR [rdx],al
   14002808b:	add    BYTE PTR [rsi-0x65],dh
   14002808e:	add    DWORD PTR [rax],eax
   140028090:	xchg   ecx,eax
   140028091:	fwait
   140028092:	add    DWORD PTR [rax],eax
   140028094:	xchg   esp,eax
   140028095:	adc    BYTE PTR [rdx],al
   140028097:	add    BYTE PTR [rcx-0x53fffe65],dl
   14002809d:	fwait
   14002809e:	add    DWORD PTR [rax],eax
   1400280a0:	xchg   esp,eax
   1400280a1:	adc    BYTE PTR [rdx],al
   1400280a3:	add    BYTE PTR [rcx-0x33fffe65],dh
   1400280a9:	fwait
   1400280aa:	add    DWORD PTR [rax],eax
   1400280ac:	xchg   esp,eax
   1400280ad:	adc    BYTE PTR [rdx],al
   1400280af:	add    ah,cl
   1400280b1:	fwait
   1400280b2:	add    DWORD PTR [rax],eax
   1400280b4:	in     eax,0x9b
   1400280b6:	add    DWORD PTR [rax],eax
   1400280b8:	mov    eax,0xe5000214
   1400280bd:	fwait
   1400280be:	add    DWORD PTR [rax],eax
   1400280c0:	xor    ebx,DWORD PTR [rcx+rax*1+0x2151000]
   1400280c7:	add    BYTE PTR [rbx],dh
   1400280c9:	pushf  
   1400280ca:	add    DWORD PTR [rax],eax
   1400280cc:	jl     0x14002806a
   1400280ce:	add    DWORD PTR [rax],eax
   1400280d0:	adc    BYTE PTR [rip+0xffffffff9c7c0002],dl        # 0xdc7e80d8
   1400280d6:	add    DWORD PTR [rax],eax
   1400280d8:	xchg   edi,eax
   1400280d9:	pushf  
   1400280da:	add    DWORD PTR [rax],eax
   1400280dc:	xchg   esp,eax
   1400280dd:	adc    BYTE PTR [rdx],al
   1400280df:	add    BYTE PTR [rdi-0x4dfffe64],dl
   1400280e5:	pushf  
   1400280e6:	add    DWORD PTR [rax],eax
   1400280e8:	xchg   esp,eax
   1400280e9:	adc    BYTE PTR [rdx],al
   1400280eb:	add    BYTE PTR [rdx-0x34fffe64],dh
   1400280f1:	pushf  
   1400280f2:	add    DWORD PTR [rax],eax
   1400280f4:	xchg   esp,eax
   1400280f5:	adc    BYTE PTR [rdx],al
   1400280f7:	add    bl,cl
   1400280f9:	pushf  
   1400280fa:	add    DWORD PTR [rax],eax
   1400280fc:	out    0x9c,al
   1400280fe:	add    DWORD PTR [rax],eax
   140028100:	mov    eax,0xe6000214
   140028105:	pushf  
   140028106:	add    DWORD PTR [rax],eax
   140028108:	add    DWORD PTR [rbp+0x10940001],ebx
   14002810e:	add    al,BYTE PTR [rax]

Disassembly of section .rsrc:

0000000140029000 <.rsrc>:
	...
   140029008:	add    al,0x0
   14002900a:	add    BYTE PTR [rax],al
   14002900c:	add    BYTE PTR [rax],al
   14002900e:	add    al,0x0
   140029010:	add    eax,DWORD PTR [rax]
   140029012:	add    BYTE PTR [rax],al
   140029014:	xor    BYTE PTR [rax],al
   140029016:	add    BYTE PTR [rax+0xe],al
   14002901c:	movabs al,ds:0xb800000010800000
   140029025:	add    BYTE PTR [rax],al
   140029027:	sbb    BYTE PTR [rax],0x0
   14002902a:	add    BYTE PTR [rax],al
   14002902c:	rol    BYTE PTR [rax],1
   14002902e:	add    BYTE PTR [rax+0x0],al
   140029034:	add    BYTE PTR [rax],al
   140029036:	add    BYTE PTR [rax],al
   140029038:	add    al,0x0
   14002903a:	add    BYTE PTR [rax],al
   14002903c:	add    BYTE PTR [rax],al
   14002903e:	or     al,0x0
   140029040:	add    DWORD PTR [rax],eax
   140029042:	add    BYTE PTR [rax],al
   140029044:	call   0x142829049
   140029049:	add    BYTE PTR [rax],al
   14002904b:	add    BYTE PTR [rax],al
   14002904d:	add    DWORD PTR [rax],eax
   14002904f:	add    BYTE PTR [rbx],0x0
   140029052:	add    BYTE PTR [rax],al
   140029054:	sbb    BYTE PTR [rcx],al
   140029056:	add    BYTE PTR [rax+0x4],al
   14002905c:	xor    BYTE PTR [rcx],al
   14002905e:	add    BYTE PTR [rax+0x5],al
   140029064:	add    QWORD PTR [rax],rax
   140029067:	add    BYTE PTR [rsi],0x0
   14002906a:	add    BYTE PTR [rax],al
   14002906c:	(bad)  
   14002906d:	add    DWORD PTR [rax],eax
   14002906f:	add    BYTE PTR [rdi],0x0
   140029072:	add    BYTE PTR [rax],al
   140029074:	js     0x140029077
   140029076:	add    BYTE PTR [rax+0x8],al
   14002907c:	nop
   14002907d:	add    DWORD PTR [rax],eax
   14002907f:	or     BYTE PTR [rcx],0x0
   140029082:	add    BYTE PTR [rax],al
   140029084:	test   al,0x1
   140029086:	add    BYTE PTR [rax+0xa],al
   14002908c:	rol    BYTE PTR [rcx],0x0
   14002908f:	or     BYTE PTR [rbx],0x0
   140029092:	add    BYTE PTR [rax],al
   140029094:	fadd   DWORD PTR [rcx]
   140029096:	add    BYTE PTR [rax+0xc],al
   14002909c:	lock add DWORD PTR [rax],eax
   14002909f:	add    BYTE PTR [rax],0x0
   1400290a2:	add    BYTE PTR [rax],al
   1400290a4:	add    BYTE PTR [rax],al
   1400290a6:	add    BYTE PTR [rax],al
   1400290a8:	add    al,0x0
   1400290aa:	add    BYTE PTR [rax],al
   1400290ac:	add    BYTE PTR [rax],al
   1400290ae:	add    DWORD PTR [rax],eax
   1400290b0:	rol    BYTE PTR [rdi],1
   1400290b2:	add    BYTE PTR [rax],al
   1400290b4:	or     BYTE PTR [rdx],al
   1400290b6:	add    BYTE PTR [rax+0x0],al
   1400290bc:	add    BYTE PTR [rax],al
   1400290be:	add    BYTE PTR [rax],al
   1400290c0:	add    al,0x0
   1400290c2:	add    BYTE PTR [rax],al
   1400290c4:	add    BYTE PTR [rax],al
   1400290c6:	add    DWORD PTR [rax],eax
   1400290c8:	add    DWORD PTR [rax],eax
   1400290ca:	add    BYTE PTR [rax],al
   1400290cc:	and    BYTE PTR [rdx],al
   1400290ce:	add    BYTE PTR [rax+0x0],al
   1400290d4:	add    BYTE PTR [rax],al
   1400290d6:	add    BYTE PTR [rax],al
   1400290d8:	add    al,0x0
   1400290da:	add    BYTE PTR [rax],al
   1400290dc:	add    BYTE PTR [rax],al
   1400290de:	add    DWORD PTR [rax],eax
   1400290e0:	add    DWORD PTR [rax],eax
   1400290e2:	add    BYTE PTR [rax],al
   1400290e4:	cmp    BYTE PTR [rdx],al
   1400290e6:	add    BYTE PTR [rax+0x0],al
   1400290ec:	add    BYTE PTR [rax],al
   1400290ee:	add    BYTE PTR [rax],al
   1400290f0:	add    al,0x0
   1400290f2:	add    BYTE PTR [rax],al
   1400290f4:	add    BYTE PTR [rax],al
   1400290f6:	add    DWORD PTR [rax],eax
   1400290f8:	add    BYTE PTR [rax],al
   1400290fa:	add    BYTE PTR [rax],al
   1400290fc:	push   rax
   1400290fd:	add    al,BYTE PTR [rax]
	...
   140029107:	add    BYTE PTR [rax+rax*1],al
   14002910a:	add    BYTE PTR [rax],al
   14002910c:	add    BYTE PTR [rax],al
   14002910e:	add    DWORD PTR [rax],eax
   140029110:	add    BYTE PTR [rax],al
   140029112:	add    BYTE PTR [rax],al
   140029114:	(bad)  
   140029115:	add    al,BYTE PTR [rax]
	...
   14002911f:	add    BYTE PTR [rax+rax*1],al
   140029122:	add    BYTE PTR [rax],al
   140029124:	add    BYTE PTR [rax],al
   140029126:	add    DWORD PTR [rax],eax
   140029128:	add    BYTE PTR [rax],al
   14002912a:	add    BYTE PTR [rax],al
   14002912c:	jo     0x140029130
	...
   140029136:	add    BYTE PTR [rax],al
   140029138:	add    al,0x0
   14002913a:	add    BYTE PTR [rax],al
   14002913c:	add    BYTE PTR [rax],al
   14002913e:	add    DWORD PTR [rax],eax
   140029140:	add    BYTE PTR [rax],al
   140029142:	add    BYTE PTR [rax],al
   140029144:	add    BYTE PTR [rdx],0x0
	...
   14002914f:	add    BYTE PTR [rax+rax*1],al
   140029152:	add    BYTE PTR [rax],al
   140029154:	add    BYTE PTR [rax],al
   140029156:	add    DWORD PTR [rax],eax
   140029158:	add    BYTE PTR [rax],al
   14002915a:	add    BYTE PTR [rax],al
   14002915c:	nop
   14002915d:	add    al,BYTE PTR [rax]
	...
   140029167:	add    BYTE PTR [rax+rax*1],al
   14002916a:	add    BYTE PTR [rax],al
   14002916c:	add    BYTE PTR [rax],al
   14002916e:	add    DWORD PTR [rax],eax
   140029170:	add    BYTE PTR [rax],al
   140029172:	add    BYTE PTR [rax],al
   140029174:	movabs al,ds:0x2
   14002917d:	add    BYTE PTR [rax],al
   14002917f:	add    BYTE PTR [rax+rax*1],al
   140029182:	add    BYTE PTR [rax],al
   140029184:	add    BYTE PTR [rax],al
   140029186:	add    DWORD PTR [rax],eax
   140029188:	add    BYTE PTR [rax],al
   14002918a:	add    BYTE PTR [rax],al
   14002918c:	mov    al,0x2
	...
   140029196:	add    BYTE PTR [rax],al
   140029198:	add    al,0x0
   14002919a:	add    BYTE PTR [rax],al
   14002919c:	add    BYTE PTR [rax],al
   14002919e:	add    DWORD PTR [rax],eax
   1400291a0:	add    BYTE PTR [rax],al
   1400291a2:	add    BYTE PTR [rax],al
   1400291a4:	rol    BYTE PTR [rdx],0x0
	...
   1400291af:	add    BYTE PTR [rax+rax*1],al
   1400291b2:	add    BYTE PTR [rax],al
   1400291b4:	add    BYTE PTR [rax],al
   1400291b6:	add    DWORD PTR [rax],eax
   1400291b8:	add    BYTE PTR [rax],al
   1400291ba:	add    BYTE PTR [rax],al
   1400291bc:	rol    BYTE PTR [rdx],1
	...
   1400291c6:	add    BYTE PTR [rax],al
   1400291c8:	add    al,0x0
   1400291ca:	add    BYTE PTR [rax],al
   1400291cc:	add    BYTE PTR [rax],al
   1400291ce:	add    DWORD PTR [rax],eax
   1400291d0:	add    BYTE PTR [rax],al
   1400291d2:	add    BYTE PTR [rax],al
   1400291d4:	loopne 0x1400291d8
	...
   1400291de:	add    BYTE PTR [rax],al
   1400291e0:	add    al,0x0
   1400291e2:	add    BYTE PTR [rax],al
   1400291e4:	add    BYTE PTR [rax],al
   1400291e6:	add    DWORD PTR [rax],eax
   1400291e8:	add    BYTE PTR [rax],al
   1400291ea:	add    BYTE PTR [rax],al
   1400291ec:	lock add al,BYTE PTR [rax]
	...
   1400291f7:	add    BYTE PTR [rax+rax*1],al
   1400291fa:	add    BYTE PTR [rax],al
   1400291fc:	add    BYTE PTR [rax],al
   1400291fe:	add    DWORD PTR [rax],eax
   140029200:	add    BYTE PTR [rax],al
   140029202:	add    BYTE PTR [rax],al
   140029204:	add    BYTE PTR [rbx],al
	...
   14002920e:	add    BYTE PTR [rax],al
   140029210:	add    al,0x0
   140029212:	add    BYTE PTR [rax],al
   140029214:	add    BYTE PTR [rax],al
   140029216:	add    DWORD PTR [rax],eax
   140029218:	add    BYTE PTR [rax],al
   14002921a:	add    BYTE PTR [rax],al
   14002921c:	adc    BYTE PTR [rbx],al
	...
   140029226:	add    BYTE PTR [rax],al
   140029228:	add    al,0x0
   14002922a:	add    BYTE PTR [rax],al
   14002922c:	add    BYTE PTR [rax],al
   14002922e:	add    DWORD PTR [rax],eax
   140029230:	add    BYTE PTR [rax],al
   140029232:	add    BYTE PTR [rax],al
   140029234:	and    BYTE PTR [rbx],al
	...
   14002923e:	add    BYTE PTR [rax],al
   140029240:	add    al,0x0
   140029242:	add    BYTE PTR [rax],al
   140029244:	add    BYTE PTR [rax],al
   140029246:	add    DWORD PTR [rax],eax
   140029248:	add    BYTE PTR [rax],al
   14002924a:	add    BYTE PTR [rax],al
   14002924c:	xor    BYTE PTR [rbx],al
   14002924e:	add    BYTE PTR [rax],al
   140029250:	rex xchg ebx,eax
   140029252:	add    al,BYTE PTR [rax]
   140029254:	push   0xffffffffe4000006
   140029259:	add    al,0x0
   14002925b:	add    BYTE PTR [rax],al
   14002925d:	add    BYTE PTR [rax],al
   14002925f:	add    BYTE PTR [rax-0x17fffd67],ch
   140029265:	add    al,BYTE PTR [rax]
   140029267:	add    ah,ah
   140029269:	add    al,0x0
   14002926b:	add    BYTE PTR [rax],al
   14002926d:	add    BYTE PTR [rax],al
   14002926f:	add    BYTE PTR [rax-0x17fffd64],dl
   140029275:	add    DWORD PTR [rax],eax
   140029277:	add    ah,ah
   140029279:	add    al,0x0
   14002927b:	add    BYTE PTR [rax],al
   14002927d:	add    BYTE PTR [rax],al
   14002927f:	add    BYTE PTR [rax-0x62],bh
   140029282:	add    al,BYTE PTR [rax]
   140029284:	sub    BYTE PTR [rcx],al
   140029286:	add    BYTE PTR [rax],al
   140029288:	in     al,0x4
   14002928a:	add    BYTE PTR [rax],al
   14002928c:	add    BYTE PTR [rax],al
   14002928e:	add    BYTE PTR [rax],al
   140029290:	movabs al,ds:0xe400000ea800029f
   140029299:	add    al,0x0
   14002929b:	add    BYTE PTR [rax],al
   14002929d:	add    BYTE PTR [rax],al
   14002929f:	add    BYTE PTR [rax-0x52],cl
   1400292a2:	add    al,BYTE PTR [rax]
   1400292a4:	test   al,0x8
   1400292a6:	add    BYTE PTR [rax],al
   1400292a8:	in     al,0x4
   1400292aa:	add    BYTE PTR [rax],al
   1400292ac:	add    BYTE PTR [rax],al
   1400292ae:	add    BYTE PTR [rax],al
   1400292b0:	lock mov dh,0x2
   1400292b3:	add    al,cl
   1400292b5:	(bad)  
   1400292b6:	add    BYTE PTR [rax],al
   1400292b8:	in     al,0x4
   1400292ba:	add    BYTE PTR [rax],al
   1400292bc:	add    BYTE PTR [rax],al
   1400292be:	add    BYTE PTR [rax],al
   1400292c0:	mov    eax,0x680002bd
   1400292c5:	add    eax,0x4e40000
   1400292ca:	add    BYTE PTR [rax],al
   1400292cc:	add    BYTE PTR [rax],al
   1400292ce:	add    BYTE PTR [rax],al
   1400292d0:	and    bl,al
   1400292d2:	add    al,BYTE PTR [rax]
   1400292d4:	test   al,0x25
   1400292d6:	add    BYTE PTR [rax],al
   1400292d8:	in     al,0x4
   1400292da:	add    BYTE PTR [rax],al
   1400292dc:	add    BYTE PTR [rax],al
   1400292de:	add    BYTE PTR [rax],al
   1400292e0:	enter  0x2e8,0x0
   1400292e4:	test   al,0x10
   1400292e6:	add    BYTE PTR [rax],al
   1400292e8:	in     al,0x4
   1400292ea:	add    BYTE PTR [rax],al
   1400292ec:	add    BYTE PTR [rax],al
   1400292ee:	add    BYTE PTR [rax],al
   1400292f0:	jo     0x1400292eb
   1400292f2:	add    al,BYTE PTR [rax]
   1400292f4:	mov    BYTE PTR [rcx],cl
   1400292f6:	add    BYTE PTR [rax],al
   1400292f8:	in     al,0x4
   1400292fa:	add    BYTE PTR [rax],al
   1400292fc:	add    BYTE PTR [rax],al
   1400292fe:	add    BYTE PTR [rax],al
   140029300:	clc    
   140029301:	add    al,BYTE PTR [rbx]
   140029303:	add    BYTE PTR [rax+0x4],ch
   140029306:	add    BYTE PTR [rax],al
   140029308:	in     al,0x4
   14002930a:	add    BYTE PTR [rax],al
   14002930c:	add    BYTE PTR [rax],al
   14002930e:	add    BYTE PTR [rax],al
   140029310:	(bad)  
   140029311:	(bad)  
   140029312:	add    eax,DWORD PTR [rax]
   140029314:	scas   al,BYTE PTR es:[rdi]
   140029315:	add    BYTE PTR [rax],al
   140029317:	add    ah,ah
   140029319:	add    al,0x0
   14002931b:	add    BYTE PTR [rax],al
   14002931d:	add    BYTE PTR [rax],al
   14002931f:	add    BYTE PTR [rax],dl
   140029321:	or     BYTE PTR [rbx],al
   140029323:	add    BYTE PTR [rbx+rax*1],bh
   140029326:	add    BYTE PTR [rax],al
   140029328:	in     al,0x4
   14002932a:	add    BYTE PTR [rax],al
   14002932c:	add    BYTE PTR [rax],al
   14002932e:	add    BYTE PTR [rax],al
   140029330:	or     r8,QWORD PTR [rbx]
   140029333:	add    BYTE PTR [rax+0x6],al
   140029336:	add    BYTE PTR [rax],al
   140029338:	in     al,0x4
   14002933a:	add    BYTE PTR [rax],al
   14002933c:	add    BYTE PTR [rax],al
   14002933e:	add    BYTE PTR [rax],al
   140029340:	sub    BYTE PTR [rax],al
   140029342:	add    BYTE PTR [rax],al
   140029344:	xor    BYTE PTR [rax],al
   140029346:	add    BYTE PTR [rax],al
   140029348:	(bad)  
   140029349:	add    BYTE PTR [rax],al
   14002934b:	add    BYTE PTR [rcx],al
   14002934d:	add    BYTE PTR [rax+rax*1],al
	...
   140029360:	adc    BYTE PTR [rax],al
	...
   14002936a:	add    BYTE PTR [rax],al
   14002936c:	add    BYTE PTR [rax],0x0
   14002936f:	add    BYTE PTR [rax],al
   140029371:	add    BYTE PTR [rax],0x0
   140029374:	add    BYTE PTR [rax+0x0],0x80
   14002937b:	add    BYTE PTR [rax+0x8000],al
   140029381:	add    BYTE PTR [rax-0x7f7f8000],0x0
   140029388:	rol    al,0xc0
   14002938b:	add    bh,bh
   14002938d:	add    BYTE PTR [rax],al
   14002938f:	add    BYTE PTR [rax],al
   140029391:	inc    DWORD PTR [rax]
   140029393:	add    bh,bh
   140029395:	inc    DWORD PTR [rax]
   140029397:	add    BYTE PTR [rax],al
   140029399:	add    bh,bh
   14002939b:	add    bh,bh
   14002939d:	add    bh,bh
   14002939f:	add    BYTE PTR [rax],al
   1400293a1:	(bad)  
   1400293a2:	inc    DWORD PTR [rax]
   1400293a4:	(bad)  
   1400293a5:	(bad)  
   1400293a6:	inc    DWORD PTR [rax]
   1400293a8:	add    BYTE PTR [rbx],al
   1400293aa:	xor    esi,DWORD PTR [rbx]
   1400293ac:	xor    esi,DWORD PTR [rbx]
   1400293ae:	xor    esi,DWORD PTR [rbx]
   1400293b0:	xor    esi,DWORD PTR [rbx]
   1400293b2:	xor    esi,DWORD PTR [rbx]
   1400293b4:	xor    esi,DWORD PTR [rbx]
   1400293b6:	xor    esi,DWORD PTR [rbx]
   1400293b8:	xor    esi,DWORD PTR [rbx]
   1400293ba:	xor    esi,DWORD PTR [rbx]
   1400293bc:	xor    esi,DWORD PTR [rbx]
   1400293be:	xor    BYTE PTR [rax],al
   1400293c0:	add    BYTE PTR [rdi],dh
   1400293c2:	(bad)  
   1400293c3:	(bad)  
   1400293c4:	(bad)  
   1400293c5:	(bad)  
   1400293c6:	(bad)  
   1400293c7:	(bad)  
   1400293c8:	(bad)  
   1400293c9:	(bad)  
   1400293ca:	(bad)  
   1400293cb:	(bad)  
   1400293cc:	(bad)  
   1400293cd:	(bad)  
   1400293ce:	(bad)  
   1400293cf:	(bad)  
   1400293d0:	(bad)  
   1400293d1:	(bad)  
   1400293d2:	(bad)  
   1400293d3:	(bad)  
   1400293d4:	(bad)  
   1400293d5:	push   QWORD PTR [rbx+0x0]
   1400293d8:	add    ecx,DWORD PTR [rdi-0x1]
   1400293de:	(bad)  
   1400293df:	(bad)  
   1400293e0:	(bad)  
   1400293e1:	(bad)  
   1400293e2:	(bad)  
   1400293e3:	(bad)  
   1400293e4:	(bad)  
   1400293e5:	(bad)  
   1400293e6:	(bad)  
   1400293e7:	(bad)  
   1400293e8:	(bad)  
   1400293e9:	(bad)  
   1400293ea:	(bad)  
   1400293eb:	(bad)  
   1400293ec:	(bad)  
   1400293ed:	(bad)  
   1400293ee:	clc    
   1400293ef:	xor    BYTE PTR [rdi],al
   1400293f1:	(bad)  
   1400293f2:	(bad)  
   1400293f3:	(bad)  
   1400293f4:	(bad)  
   1400293f5:	(bad)  
   1400293f6:	(bad)  
   1400293f7:	(bad)  
   1400293f8:	(bad)  
   1400293f9:	(bad)  
   1400293fa:	(bad)  
   1400293fb:	(bad)  
   1400293fc:	(bad)  
   1400293fd:	(bad)  
   1400293fe:	(bad)  
   1400293ff:	(bad)  
   140029400:	(bad)  
   140029401:	(bad)  
   140029402:	(bad)  
   140029403:	(bad)  
   140029404:	(bad)  
   140029405:	(bad)  
   140029406:	push   QWORD PTR [rax+0x38]
   140029409:	(bad)  
   14002940a:	(bad)  
   14002940b:	(bad)  
   14002940c:	(bad)  
   14002940d:	(bad)  
   14002940e:	(bad)  
   14002940f:	(bad)  
   140029410:	(bad)  
   140029411:	(bad)  
   140029412:	(bad)  
   140029413:	(bad)  
   140029414:	(bad)  
   140029415:	(bad)  
   140029416:	(bad)  
   140029417:	(bad)  
   140029418:	(bad)  
   140029419:	(bad)  
   14002941a:	(bad)  
   14002941b:	(bad)  
   14002941c:	(bad)  
   14002941d:	(bad)  
   14002941e:	inc    DWORD PTR [rbx-0xc8]
   140029424:	(bad)  
   140029425:	dec    DWORD PTR [rax+0x77777787]
   14002942b:	ja     0x1400294a4
   14002942d:	ja     0x1400294a6
   14002942f:	mov    BYTE PTR [rdi-0x1],cl
   140029435:	(bad)  
   140029436:	inc    DWORD PTR [rbx-0x88]
   14002943c:	clc    
   14002943d:	xchg   DWORD PTR [rdi+0x77],esi
   140029440:	ja     0x1400294b9
   140029442:	ja     0x1400294bb
   140029444:	ja     0x1400294bd
   140029446:	ja     0x1400294bf
   140029448:	ja     0x1400293d2
   14002944a:	(bad)  
   14002944b:	(bad)  
   14002944c:	(bad)  
   14002944d:	(bad)  
   14002944e:	inc    DWORD PTR [rdi-0x88]
   140029454:	ja     0x1400294cd
   140029456:	ja     0x1400294d0
   140029458:	mov    BYTE PTR [rax-0x77777778],cl
   14002945e:	mov    BYTE PTR [rdi+0x77],dh
   140029461:	ja     0x1400293f2
   140029463:	(bad)  
   140029464:	(bad)  
   140029465:	(bad)  
   140029466:	inc    DWORD PTR [rdi-0x88]
   14002946c:	ja     0x1400294e5
   14002946e:	(bad)  
   14002946f:	(bad)  
   140029470:	(bad)  
   140029471:	(bad)  
   140029472:	(bad)  
   140029473:	(bad)  
   140029474:	(bad)  
   140029475:	(bad)  
   140029476:	(bad)  
   140029477:	(bad)  
   140029478:	clc    
   140029479:	xchg   DWORD PTR [rax-0x1],edi
   14002947c:	(bad)  
   14002947d:	(bad)  
   14002947e:	inc    DWORD PTR [rdi-0x88]
   140029484:	mov    BYTE PTR [rdi-0x78],dh
   140029487:	(bad)  
   140029488:	dec    DWORD PTR [rax-0x77777778]
   14002948e:	(bad)  
   14002948f:	(bad)  
   140029490:	(bad)  
   140029491:	dec    DWORD PTR [rax-0x1]
   140029497:	xchg   DWORD PTR [rax-0x1],edi
   14002949a:	(bad)  
   14002949b:	(bad)  
   14002949c:	(bad)  
   14002949d:	clc    
   14002949e:	xchg   DWORD PTR [rax+0x77777788],ecx
   1400294a4:	ja     0x14002951d
   1400294a6:	mov    bh,bh
   1400294a8:	(bad)  
   1400294a9:	dec    DWORD PTR [rdi-0x1]
   1400294af:	xchg   DWORD PTR [rax-0x1],edi
   1400294b2:	(bad)  
   1400294b3:	(bad)  
   1400294b4:	(bad)  
   1400294b5:	(bad)  
   1400294b6:	(bad)  
   1400294b7:	clc    
   1400294b8:	ja     0x140029531
   1400294ba:	ja     0x140029533
   1400294bc:	ja     0x140029535
   1400294be:	js     0x1400294bf
   1400294c0:	(bad)  
   1400294c1:	(bad)  
   1400294c2:	(bad)  
   1400294c3:	(bad)  
   1400294c4:	(bad)  
   1400294c5:	(bad)  
   1400294c6:	inc    DWORD PTR [rdi-0x88]
   1400294cc:	(bad)  
   1400294cd:	(bad)  
   1400294ce:	(bad)  
   1400294cf:	clc    
   1400294d0:	ja     0x14002945a
   1400294d2:	mov    BYTE PTR [rax-0x707778],cl
   1400294d8:	(bad)  
   1400294d9:	(bad)  
   1400294da:	(bad)  
   1400294db:	(bad)  
   1400294dc:	(bad)  
   1400294dd:	(bad)  
   1400294de:	inc    DWORD PTR [rdi-0x88]
   1400294e4:	(bad)  
   1400294e5:	(bad)  
   1400294e6:	(bad)  
   1400294e7:	dec    DWORD PTR [rax-0x1]
   1400294ed:	(bad)  
   1400294ee:	(bad)  
   1400294ef:	clc    
   1400294f0:	(bad)  
   1400294f1:	(bad)  
   1400294f2:	(bad)  
   1400294f3:	(bad)  
   1400294f4:	(bad)  
   1400294f5:	(bad)  
   1400294f6:	inc    DWORD PTR [rdi-0x88]
   1400294fc:	(bad)  
   1400294fd:	(bad)  
   1400294fe:	(bad)  
   1400294ff:	dec    DWORD PTR [rax+0x78777787]
   140029505:	mov    BYTE PTR [rax-0x707778],cl
   14002950b:	(bad)  
   14002950c:	(bad)  
   14002950d:	(bad)  
   14002950e:	inc    DWORD PTR [rdi-0x88]
   140029514:	(bad)  
   140029515:	(bad)  
   140029516:	inc    DWORD PTR [rdi+0x77777777]
   14002951c:	ja     0x140029595
   14002951e:	ja     0x1400294af
   140029520:	xchg   DWORD PTR [rax-0x1],edi
   140029523:	(bad)  
   140029524:	(bad)  
   140029525:	(bad)  
   140029526:	inc    DWORD PTR [rdi-0x88]
   14002952c:	(bad)  
   14002952d:	(bad)  
   14002952e:	inc    DWORD PTR [rdi-0x77777789]
   140029534:	mov    BYTE PTR [rdi+0x77f88f78],al
   14002953a:	js     0x14002953b
   14002953c:	(bad)  
   14002953d:	(bad)  
   14002953e:	inc    DWORD PTR [rdi-0x88]
   140029544:	(bad)  
   140029545:	(bad)  
   140029546:	dec    DWORD PTR [rax-0x71]
   14002954c:	(bad)  
   14002954d:	(bad)  
   14002954e:	(bad)  
   14002954f:	(bad)  
   140029550:	(bad)  
   140029551:	clc    
   140029552:	ja     0x1400294e3
   140029554:	(bad)  
   140029555:	(bad)  
   140029556:	inc    DWORD PTR [rdi-0x88]
   14002955c:	(bad)  
   14002955d:	(bad)  
   14002955e:	(bad)  
   14002955f:	dec    DWORD PTR [rax-0x70777778]
   140029565:	(bad)  
   140029566:	(bad)  
   140029567:	(bad)  
   140029568:	(bad)  
   140029569:	push   QWORD PTR [rdi+0x7f]
   14002956c:	(bad)  
   14002956d:	(bad)  
   14002956e:	inc    DWORD PTR [rdi-0x88]
   140029574:	(bad)  
   140029575:	clc    
   140029576:	mov    BYTE PTR [rdi+0x77],dh
   140029579:	ja     0x1400295f2
   14002957b:	ja     0x1400295f4
   14002957d:	ja     0x1400295f7
   14002957f:	(bad)  
   140029580:	(bad)  
   140029581:	inc    DWORD PTR [rdi-0x81]
   140029587:	xchg   DWORD PTR [rax-0x1],edi
   14002958a:	(bad)  
   14002958b:	(bad)  
   14002958c:	(bad)  
   14002958d:	clc    
   14002958e:	ja     0x140029608
   140029590:	mov    BYTE PTR [rax-0x77777778],cl
   140029596:	ja     0x140029610
   140029598:	(bad)  
   140029599:	inc    DWORD PTR [rdi-0x81]
   14002959f:	xchg   DWORD PTR [rax-0x1],edi
   1400295a2:	(bad)  
   1400295a3:	(bad)  
   1400295a4:	(bad)  
   1400295a5:	clc    
   1400295a6:	ja     0x140029620
   1400295a8:	(bad)  
   1400295a9:	(bad)  
   1400295aa:	(bad)  
   1400295ab:	dec    DWORD PTR [rax-0x77770701]
   1400295b1:	mov    BYTE PTR [rdi+0x7f],dh
   1400295b4:	(bad)  
   1400295b5:	(bad)  
   1400295b6:	inc    DWORD PTR [rdi-0x88]
   1400295bc:	(bad)  
   1400295bd:	(bad)  
   1400295be:	clc    
   1400295bf:	mov    BYTE PTR [rax-0x7000071],cl
   1400295c5:	jg     0x1400295c6
   1400295c7:	(bad)  
   1400295c8:	clc    
   1400295c9:	xchg   DWORD PTR [rax-0x1],edi
   1400295cc:	(bad)  
   1400295cd:	(bad)  
   1400295ce:	inc    DWORD PTR [rdi-0x88]
   1400295d4:	(bad)  
   1400295d5:	(bad)  
   1400295d6:	(bad)  
   1400295d7:	(bad)  
   1400295d8:	clc    
   1400295d9:	(bad)  
   1400295da:	dec    DWORD PTR [rax-0x9708]
   1400295e0:	dec    DWORD PTR [rax-0x1]
   1400295e6:	inc    DWORD PTR [rdi-0x81]
   1400295ec:	(bad)  
   1400295ed:	(bad)  
   1400295ee:	(bad)  
   1400295ef:	(bad)  
   1400295f0:	(bad)  
   1400295f1:	push   rdi
   1400295f3:	(bad)  
   1400295f4:	clc    
   1400295f5:	data16 (bad) 
   1400295f7:	(bad)  
   1400295f8:	(bad)  
   1400295f9:	(bad)  
   1400295fa:	(bad)  
   1400295fb:	(bad)  
   1400295fc:	(bad)  
   1400295fd:	(bad)  
   1400295fe:	push   rdi
   140029600:	jg     0x140029601
   140029602:	(bad)  
   140029603:	(bad)  
   140029604:	(bad)  
   140029605:	(bad)  
   140029606:	(bad)  
   140029607:	(bad)  
   140029608:	(bad)  
   140029609:	push   QWORD PTR [rdi-0x1]
   14002960c:	xchg   BYTE PTR [rsi-0x71],ah
   14002960f:	(bad)  
   140029610:	(bad)  
   140029611:	(bad)  
   140029612:	(bad)  
   140029613:	(bad)  
   140029614:	(bad)  
   140029615:	(bad)  
   140029616:	push   rdi
   140029618:	jg     0x140029619
   14002961a:	(bad)  
   14002961b:	(bad)  
   14002961c:	(bad)  
   14002961d:	(bad)  
   14002961e:	(bad)  
   14002961f:	(bad)  
   140029620:	(bad)  
   140029621:	clc    
   140029622:	push   0xffffffff8f6686ff
   140029627:	(bad)  
   140029628:	(bad)  
   140029629:	(bad)  
   14002962a:	(bad)  
   14002962b:	(bad)  
   14002962c:	(bad)  
   14002962d:	(bad)  
   14002962e:	push   rdi
   140029630:	jg     0x140029631
   140029632:	(bad)  
   140029633:	(bad)  
   140029634:	(bad)  
   140029635:	(bad)  
   140029636:	(bad)  
   140029637:	(bad)  
   140029638:	inc    DWORD PTR [rsi+0x6866f88f]
   14002963e:	(bad)  
   14002963f:	(bad)  
   140029640:	(bad)  
   140029641:	(bad)  
   140029642:	(bad)  
   140029643:	(bad)  
   140029644:	(bad)  
   140029645:	(bad)  
   140029646:	push   rdi
   140029648:	jg     0x140029649
   14002964a:	(bad)  
   14002964b:	(bad)  
   14002964c:	(bad)  
   14002964d:	(bad)  
   14002964e:	(bad)  
   14002964f:	(bad)  
   140029650:	jmp    QWORD PTR [rsi-0x71]
   140029653:	clc    
   140029654:	data16 jg 0x140029656
   140029657:	(bad)  
   140029658:	(bad)  
   140029659:	(bad)  
   14002965a:	(bad)  
   14002965b:	(bad)  
   14002965c:	(bad)  
   14002965d:	(bad)  
   14002965e:	push   rdi
   140029660:	jg     0x140029661
   140029662:	(bad)  
   140029663:	(bad)  
   140029664:	(bad)  
   140029665:	(bad)  
   140029666:	(bad)  
   140029667:	(bad)  
   140029668:	clc    
   140029669:	data16 (bad) 
   14002966b:	mul    DWORD PTR [rsi-0x71]
   14002966e:	(bad)  
   14002966f:	(bad)  
   140029670:	(bad)  
   140029671:	(bad)  
   140029672:	(bad)  
   140029673:	(bad)  
   140029674:	(bad)  
   140029675:	(bad)  
   140029676:	push   rdi
   140029678:	jg     0x140029679
   14002967a:	(bad)  
   14002967b:	(bad)  
   14002967c:	(bad)  
   14002967d:	(bad)  
   14002967e:	(bad)  
   14002967f:	(bad)  
   140029680:	clc    
   140029681:	data16 (bad) 
   140029683:	mul    DWORD PTR [rdi-0x1]
   140029686:	(bad)  
   140029687:	(bad)  
   140029688:	(bad)  
   140029689:	(bad)  
   14002968a:	(bad)  
   14002968b:	(bad)  
   14002968c:	(bad)  
   14002968d:	(bad)  
   14002968e:	push   rdi
   140029690:	jg     0x140029691
   140029692:	(bad)  
   140029693:	(bad)  
   140029694:	(bad)  
   140029695:	(bad)  
   140029696:	(bad)  
   140029697:	(bad)  
   140029698:	clc    
   140029699:	data16 (bad) 
   14002969b:	clc    
   14002969c:	data16 (bad) 
   14002969e:	(bad)  
   14002969f:	(bad)  
   1400296a0:	(bad)  
   1400296a1:	(bad)  
   1400296a2:	(bad)  
   1400296a3:	(bad)  
   1400296a4:	(bad)  
   1400296a5:	(bad)  
   1400296a6:	push   rdi
   1400296a8:	jg     0x1400296a9
   1400296aa:	(bad)  
   1400296ab:	(bad)  
   1400296ac:	(bad)  
   1400296ad:	(bad)  
   1400296ae:	(bad)  
   1400296af:	(bad)  
   1400296b0:	inc    DWORD PTR [rsi-0x70990098]
   1400296b6:	(bad)  
   1400296b7:	(bad)  
   1400296b8:	(bad)  
   1400296b9:	(bad)  
   1400296ba:	(bad)  
   1400296bb:	(bad)  
   1400296bc:	(bad)  
   1400296bd:	(bad)  
   1400296be:	push   rdi
   1400296c0:	jg     0x1400296c1
   1400296c2:	(bad)  
   1400296c3:	(bad)  
   1400296c4:	(bad)  
   1400296c5:	(bad)  
   1400296c6:	(bad)  
   1400296c7:	(bad)  
   1400296c8:	push   rdi
   1400296ca:	pop    WORD PTR [rsi-0x98]
   1400296d1:	(bad)  
   1400296d2:	(bad)  
   1400296d3:	(bad)  
   1400296d4:	(bad)  
   1400296d5:	(bad)  
   1400296d6:	push   rdi
   1400296d8:	jg     0x1400296d9
   1400296da:	(bad)  
   1400296db:	(bad)  
   1400296dc:	(bad)  
   1400296dd:	(bad)  
   1400296de:	(bad)  
   1400296df:	(bad)  
   1400296e0:	(bad)  
   1400296e1:	push   QWORD PTR [rsi+0x68]
   1400296e4:	push   QWORD PTR [rsi-0x71]
   1400296e7:	(bad)  
   1400296e8:	(bad)  
   1400296e9:	(bad)  
   1400296ea:	(bad)  
   1400296eb:	(bad)  
   1400296ec:	(bad)  
   1400296ed:	(bad)  
   1400296ee:	push   rdi
   1400296f0:	(bad)  
   1400296f1:	(bad)  
   1400296f2:	(bad)  
   1400296f3:	(bad)  
   1400296f4:	(bad)  
   1400296f5:	(bad)  
   1400296f6:	(bad)  
   1400296f7:	(bad)  
   1400296f8:	(bad)  
   1400296f9:	(bad)  
   1400296fa:	clc    
   1400296fb:	data16 (bad) 
   1400296fd:	clc    
   1400296fe:	ja     0x14002968f
   140029700:	(bad)  
   140029701:	(bad)  
   140029702:	(bad)  
   140029703:	(bad)  
   140029704:	(bad)  
   140029705:	(bad)  
   140029706:	(bad)  
   140029707:	clc    
   140029708:	(bad)  
   140029709:	(bad)  
   14002970a:	(bad)  
   14002970b:	(bad)  
   14002970c:	(bad)  
   14002970d:	(bad)  
   14002970e:	(bad)  
   14002970f:	(bad)  
   140029710:	(bad)  
   140029711:	(bad)  
   140029712:	inc    DWORD PTR [rsi-0x77070098]
   140029718:	(bad)  
   140029719:	(bad)  
   14002971a:	(bad)  
   14002971b:	(bad)  
   14002971c:	(bad)  
   14002971d:	(bad)  
   14002971e:	(bad)  
   14002971f:	clc    
   140029720:	(bad)  
   140029721:	(bad)  
   140029722:	(bad)  
   140029723:	(bad)  
   140029724:	(bad)  
   140029725:	(bad)  
   140029726:	(bad)  
   140029727:	(bad)  
   140029728:	(bad)  
   140029729:	(bad)  
   14002972a:	(bad)  
   14002972b:	clc    
   14002972c:	data16 (bad) 
   14002972e:	(bad)  
   14002972f:	clc    
   140029730:	(bad)  
   140029731:	(bad)  
   140029732:	(bad)  
   140029733:	(bad)  
   140029734:	(bad)  
   140029735:	(bad)  
   140029736:	(bad)  
   140029737:	clc    
   140029738:	(bad)  
   140029739:	(bad)  
   14002973a:	(bad)  
   14002973b:	(bad)  
   14002973c:	(bad)  
   14002973d:	(bad)  
   14002973e:	(bad)  
   14002973f:	(bad)  
   140029740:	(bad)  
   140029741:	(bad)  
   140029742:	(bad)  
   140029743:	inc    DWORD PTR [rsi-0x98]
   140029749:	(bad)  
   14002974a:	(bad)  
   14002974b:	(bad)  
   14002974c:	(bad)  
   14002974d:	(bad)  
   14002974e:	(bad)  
   14002974f:	clc    
   140029750:	(bad)  
   140029751:	(bad)  
   140029752:	(bad)  
   140029753:	(bad)  
   140029754:	(bad)  
   140029755:	(bad)  
   140029756:	(bad)  
   140029757:	(bad)  
   140029758:	(bad)  
   140029759:	(bad)  
   14002975a:	(bad)  
   14002975b:	(bad)  
   14002975c:	clc    
   14002975d:	push   0xffffffffffffffff
   140029762:	(bad)  
   140029763:	(bad)  
   140029764:	(bad)  
   140029765:	(bad)  
   140029766:	(bad)  
   140029767:	clc    
   140029768:	(bad)  
   140029769:	(bad)  
   14002976a:	(bad)  
   14002976b:	(bad)  
   14002976c:	(bad)  
   14002976d:	(bad)  
   14002976e:	(bad)  
   14002976f:	(bad)  
   140029770:	(bad)  
   140029771:	(bad)  
   140029772:	(bad)  
   140029773:	(bad)  
   140029774:	inc    DWORD PTR [rsi-0x71]
   14002977a:	(bad)  
   14002977b:	(bad)  
   14002977c:	(bad)  
   14002977d:	(bad)  
   14002977e:	(bad)  
   14002977f:	clc    
   140029780:	(bad)  
   140029781:	(bad)  
   140029782:	(bad)  
   140029783:	(bad)  
   140029784:	(bad)  
   140029785:	(bad)  
   140029786:	(bad)  
   140029787:	(bad)  
   140029788:	(bad)  
   140029789:	(bad)  
   14002978a:	(bad)  
   14002978b:	(bad)  
   14002978c:	inc    DWORD PTR [rdi-0x71]
   140029792:	(bad)  
   140029793:	(bad)  
   140029794:	(bad)  
   140029795:	(bad)  
   140029796:	(bad)  
   140029797:	clc    
   140029798:	(bad)  
   140029799:	(bad)  
   14002979a:	(bad)  
   14002979b:	(bad)  
   14002979c:	(bad)  
   14002979d:	(bad)  
   14002979e:	(bad)  
   14002979f:	(bad)  
   1400297a0:	(bad)  
   1400297a1:	(bad)  
   1400297a2:	(bad)  
   1400297a3:	(bad)  
   1400297a4:	(bad)  
   1400297a5:	clc    
   1400297a6:	(bad)  
   1400297a7:	(bad)  
   1400297a8:	(bad)  
   1400297a9:	(bad)  
   1400297aa:	(bad)  
   1400297ab:	(bad)  
   1400297ac:	(bad)  
   1400297ad:	(bad)  
   1400297ae:	(bad)  
   1400297af:	clc    
   1400297b0:	(bad)  
   1400297b1:	(bad)  
   1400297b2:	(bad)  
   1400297b3:	(bad)  
   1400297b4:	(bad)  
   1400297b5:	(bad)  
   1400297b6:	(bad)  
   1400297b7:	(bad)  
   1400297b8:	(bad)  
   1400297b9:	(bad)  
   1400297ba:	(bad)  
   1400297bb:	(bad)  
   1400297bc:	(bad)  
   1400297bd:	clc    
   1400297be:	(bad)  
   1400297bf:	(bad)  
   1400297c0:	(bad)  
   1400297c1:	(bad)  
   1400297c2:	(bad)  
   1400297c3:	(bad)  
   1400297c4:	(bad)  
   1400297c5:	(bad)  
   1400297c6:	(bad)  
   1400297c7:	clc    
   1400297c8:	or     bh,bh
   1400297ca:	(bad)  
   1400297cb:	(bad)  
   1400297cc:	(bad)  
   1400297cd:	(bad)  
   1400297ce:	(bad)  
   1400297cf:	(bad)  
   1400297d0:	(bad)  
   1400297d1:	(bad)  
   1400297d2:	(bad)  
   1400297d3:	(bad)  
   1400297d4:	(bad)  
   1400297d5:	(bad)  
   1400297d6:	(bad)  
   1400297d7:	(bad)  
   1400297d8:	(bad)  
   1400297d9:	(bad)  
   1400297da:	(bad)  
   1400297db:	(bad)  
   1400297dc:	(bad)  
   1400297dd:	(bad)  
   1400297de:	dec    DWORD PTR [rax-0x70f8]
   1400297e4:	(bad)  
   1400297e5:	(bad)  
   1400297e6:	(bad)  
   1400297e7:	(bad)  
   1400297e8:	(bad)  
   1400297e9:	(bad)  
   1400297ea:	(bad)  
   1400297eb:	(bad)  
   1400297ec:	(bad)  
   1400297ed:	(bad)  
   1400297ee:	(bad)  
   1400297ef:	(bad)  
   1400297f0:	(bad)  
   1400297f1:	(bad)  
   1400297f2:	(bad)  
   1400297f3:	(bad)  
   1400297f4:	(bad)  
   1400297f5:	(bad)  
   1400297f6:	inc    DWORD PTR [rax-0x7800]
   1400297fc:	(bad)  
   1400297fd:	(bad)  
   1400297fe:	(bad)  
   1400297ff:	(bad)  
   140029800:	(bad)  
   140029801:	(bad)  
   140029802:	(bad)  
   140029803:	(bad)  
   140029804:	(bad)  
   140029805:	(bad)  
   140029806:	(bad)  
   140029807:	(bad)  
   140029808:	(bad)  
   140029809:	(bad)  
   14002980a:	(bad)  
   14002980b:	(bad)  
   14002980c:	(bad)  
   14002980d:	dec    DWORD PTR [rax-0x77f7ff80]
   140029813:	mov    BYTE PTR [rax-0x77777778],cl
   140029819:	mov    BYTE PTR [rax-0x77777778],cl
   14002981f:	mov    BYTE PTR [rax-0x77777778],cl
   140029825:	mov    BYTE PTR [rax+0xe000],al
   14002982b:	add    BYTE PTR [rax],al
   14002982d:	(bad)  
   14002982e:	pushf  
   14002982f:	xchg   ecx,eax
   140029830:	rol    BYTE PTR [rax],0x0
   140029833:	add    BYTE PTR [rax],al
   140029835:	add    esp,eax
   140029837:	add    BYTE PTR [rax+0x0],al
   14002983d:	add    eax,eax
   14002983f:	add    BYTE PTR [rax+0x0],al
   140029845:	add    DWORD PTR [rax+0x0],eax
   14002984b:	add    BYTE PTR [rax],al
   14002984d:	add    BYTE PTR [rax+0x0],al
	...
   140029987:	add    BYTE PTR [rax+0x0],al
   14002998d:	add    BYTE PTR [rax],al
   14002998f:	add    BYTE PTR [rax+0x0],al
   140029995:	add    DWORD PTR [rax+0xc000],eax
   14002999b:	add    BYTE PTR [rax],al
   14002999d:	add    DWORD PTR [rax+0xe000],eax
   1400299a3:	add    BYTE PTR [rax],al
   1400299a5:	(bad)  
   1400299a6:	rol    BYTE PTR [rax],0x28
   1400299a9:	add    BYTE PTR [rax],al
   1400299ab:	add    BYTE PTR [rax],ah
   1400299ad:	add    BYTE PTR [rax],al
   1400299af:	add    BYTE PTR [rax+0x0],al
   1400299b2:	add    BYTE PTR [rax],al
   1400299b4:	add    DWORD PTR [rax],eax
   1400299b6:	add    al,0x0
	...
   1400299c8:	adc    BYTE PTR [rax],al
	...
   1400299d2:	add    BYTE PTR [rax],al
   1400299d4:	add    BYTE PTR [rax],0x0
   1400299d7:	add    BYTE PTR [rax],al
   1400299d9:	add    BYTE PTR [rax],0x0
   1400299dc:	add    BYTE PTR [rax+0x0],0x80
   1400299e3:	add    BYTE PTR [rax+0x8000],al
   1400299e9:	add    BYTE PTR [rax-0x7f7f8000],0x0
   1400299f0:	rol    al,0xc0
   1400299f3:	add    bh,bh
   1400299f5:	add    BYTE PTR [rax],al
   1400299f7:	add    BYTE PTR [rax],al
   1400299f9:	inc    DWORD PTR [rax]
   1400299fb:	add    bh,bh
   1400299fd:	inc    DWORD PTR [rax]
   1400299ff:	add    BYTE PTR [rax],al
   140029a01:	add    bh,bh
   140029a03:	add    bh,bh
   140029a05:	add    bh,bh
   140029a07:	add    BYTE PTR [rax],al
   140029a09:	(bad)  
   140029a0a:	inc    DWORD PTR [rax]
   140029a0c:	(bad)  
   140029a0d:	(bad)  
   140029a0e:	inc    DWORD PTR [rax]
   140029a10:	add    BYTE PTR [rbx],al
   140029a12:	xor    esi,DWORD PTR [rbx]
   140029a14:	xor    esi,DWORD PTR [rbx]
   140029a16:	xor    esi,DWORD PTR [rbx]
   140029a18:	xor    esi,DWORD PTR [rbx]
   140029a1a:	xor    esi,DWORD PTR [rbx]
   140029a1c:	xor    esi,DWORD PTR [rbx]
   140029a1e:	xor    BYTE PTR [rax],al
   140029a20:	add    BYTE PTR [rdi-0x71],dh
   140029a23:	(bad)  
   140029a24:	(bad)  
   140029a25:	(bad)  
   140029a26:	(bad)  
   140029a27:	(bad)  
   140029a28:	(bad)  
   140029a29:	(bad)  
   140029a2a:	(bad)  
   140029a2b:	(bad)  
   140029a2c:	(bad)  
   140029a2d:	clc    
   140029a2e:	ja     0x140029a30
   140029a30:	(bad)  
   140029a31:	(bad)  
   140029a32:	(bad)  
   140029a33:	(bad)  
   140029a34:	(bad)  
   140029a35:	(bad)  
   140029a36:	(bad)  
   140029a37:	(bad)  
   140029a38:	(bad)  
   140029a39:	(bad)  
   140029a3a:	(bad)  
   140029a3b:	(bad)  
   140029a3c:	(bad)  
   140029a3d:	(bad)  
   140029a3e:	clc    
   140029a3f:	jo     0x140029a78
   140029a41:	(bad)  
   140029a42:	(bad)  
   140029a43:	(bad)  
   140029a44:	(bad)  
   140029a45:	(bad)  
   140029a46:	(bad)  
   140029a47:	(bad)  
   140029a48:	(bad)  
   140029a49:	(bad)  
   140029a4a:	(bad)  
   140029a4b:	(bad)  
   140029a4c:	(bad)  
   140029a4d:	(bad)  
   140029a4e:	push   QWORD PTR [rbx+0x78]
   140029a51:	(bad)  
   140029a52:	dec    DWORD PTR [rax+0x77777787]
   140029a58:	ja     0x140029ad1
   140029a5a:	js     0x1400299e4
   140029a5c:	(bad)  
   140029a5d:	(bad)  
   140029a5e:	inc    DWORD PTR [rdi+0x77ffff78]
   140029a64:	ja     0x1400299ee
   140029a66:	mov    BYTE PTR [rax+0x77878888],cl
   140029a6c:	(bad)  
   140029a6d:	(bad)  
   140029a6e:	inc    DWORD PTR [rdi-0x78000088]
   140029a74:	js     0x140029a75
   140029a76:	mov    BYTE PTR [rax-0x7007078],cl
   140029a7c:	jg     0x140029a7d
   140029a7e:	inc    DWORD PTR [rdi-0x7000088]
   140029a84:	mov    BYTE PTR [rdi+0x78777777],al
   140029a8a:	(bad)  
   140029a8b:	dec    DWORD PTR [rdi+0x7887ffff]
   140029a91:	(bad)  
   140029a92:	(bad)  
   140029a93:	(bad)  
   140029a94:	inc    DWORD PTR [rdi+0x78888878]
   140029a9a:	(bad)  
   140029a9b:	(bad)  
   140029a9c:	(bad)  
   140029a9d:	(bad)  
   140029a9e:	inc    DWORD PTR [rdi-0x88]
   140029aa4:	(bad)  
   140029aa5:	clc    
   140029aa6:	mov    BYTE PTR [rax-0x70077078],cl
   140029aac:	(bad)  
   140029aad:	(bad)  
   140029aae:	inc    DWORD PTR [rdi-0x88]
   140029ab4:	clc    
   140029ab5:	xchg   DWORD PTR [rdi+0x77],esi
   140029ab8:	ja     0x140029b31
   140029aba:	mov    BYTE PTR [rax-0x78000071],cl
   140029ac0:	js     0x140029ac1
   140029ac2:	(bad)  
   140029ac3:	(bad)  
   140029ac4:	clc    
   140029ac5:	ja     0x140029a4f
   140029ac7:	mov    BYTE PTR [rax+0x7f878f88],cl
   140029acd:	(bad)  
   140029ace:	inc    DWORD PTR [rdi-0x88]
   140029ad4:	clc    
   140029ad5:	mov    BYTE PTR [rax-0x777778],cl
   140029adb:	clc    
   140029adc:	jg     0x140029add
   140029ade:	inc    DWORD PTR [rdi-0x7000088]
   140029ae4:	ja     0x140029b5e
   140029ae6:	xchg   DWORD PTR [rax+0x77],edi
   140029ae9:	ja     0x140029a73
   140029aeb:	(bad)  
   140029aec:	jg     0x140029aed
   140029aee:	inc    DWORD PTR [rdi-0x88]
   140029af4:	xchg   DWORD PTR [rax-0x71],edi
   140029af7:	dec    DWORD PTR [rax+0x7f878888]
   140029afd:	(bad)  
   140029afe:	inc    DWORD PTR [rdi-0x88]
   140029b04:	dec    DWORD PTR [rax-0x70787701]
   140029b0a:	dec    DWORD PTR [rax-0x78000071]
   140029b10:	jg     0x140029b11
   140029b12:	(bad)  
   140029b13:	(bad)  
   140029b14:	(bad)  
   140029b15:	(bad)  
   140029b16:	clc    
   140029b17:	js     0x140029b0f
   140029b19:	outs   dx,DWORD PTR ds:[rsi]
   140029b1a:	(bad)  
   140029b1b:	(bad)  
   140029b1c:	(bad)  
   140029b1d:	(bad)  
   140029b1e:	push   rdi
   140029b20:	jg     0x140029b21
   140029b22:	(bad)  
   140029b23:	(bad)  
   140029b24:	(bad)  
   140029b25:	push   rsi
   140029b27:	pop    QWORD PTR [rsi-0x81]
   140029b2d:	(bad)  
   140029b2e:	push   rdi
   140029b30:	jg     0x140029b31
   140029b32:	(bad)  
   140029b33:	(bad)  
   140029b34:	(bad)  
   140029b35:	inc    DWORD PTR [rsi-0x709908]
   140029b3b:	(bad)  
   140029b3c:	(bad)  
   140029b3d:	(bad)  
   140029b3e:	push   rdi
   140029b40:	jg     0x140029b41
   140029b42:	(bad)  
   140029b43:	(bad)  
   140029b44:	(bad)  
   140029b45:	clc    
   140029b46:	push   0xffffffffffff68f8
   140029b4b:	(bad)  
   140029b4c:	(bad)  
   140029b4d:	(bad)  
   140029b4e:	push   rdi
   140029b50:	jg     0x140029b51
   140029b52:	(bad)  
   140029b53:	(bad)  
   140029b54:	(bad)  
   140029b55:	clc    
   140029b56:	addr32 clc 
   140029b58:	push   0xffffffffffffffff
   140029b5d:	(bad)  
   140029b5e:	push   rdi
   140029b60:	jg     0x140029b61
   140029b62:	(bad)  
   140029b63:	(bad)  
   140029b64:	(bad)  
   140029b65:	inc    DWORD PTR [rsi-0x8971]
   140029b6b:	(bad)  
   140029b6c:	(bad)  
   140029b6d:	(bad)  
   140029b6e:	push   rdi
   140029b70:	jg     0x140029b71
   140029b72:	(bad)  
   140029b73:	(bad)  
   140029b74:	(bad)  
   140029b75:	push   rdi
   140029b77:	push   0xffffffffffff78f7
   140029b7c:	(bad)  
   140029b7d:	(bad)  
   140029b7e:	push   rdi
   140029b80:	(bad)  
   140029b81:	(bad)  
   140029b82:	(bad)  
   140029b83:	(bad)  
   140029b84:	(bad)  
   140029b85:	(bad)  
   140029b86:	inc    DWORD PTR [rsi-0x707771]
   140029b8c:	(bad)  
   140029b8d:	(bad)  
   140029b8e:	(bad)  
   140029b8f:	clc    
   140029b90:	(bad)  
   140029b91:	(bad)  
   140029b92:	(bad)  
   140029b93:	(bad)  
   140029b94:	(bad)  
   140029b95:	(bad)  
   140029b96:	(bad)  
   140029b97:	clc    
   140029b98:	push   0xffffffffffff8fff
   140029b9d:	(bad)  
   140029b9e:	(bad)  
   140029b9f:	clc    
   140029ba0:	(bad)  
   140029ba1:	(bad)  
   140029ba2:	(bad)  
   140029ba3:	(bad)  
   140029ba4:	(bad)  
   140029ba5:	(bad)  
   140029ba6:	(bad)  
   140029ba7:	inc    DWORD PTR [rsi-0x71]
   140029bad:	(bad)  
   140029bae:	(bad)  
   140029baf:	clc    
   140029bb0:	(bad)  
   140029bb1:	(bad)  
   140029bb2:	(bad)  
   140029bb3:	(bad)  
   140029bb4:	(bad)  
   140029bb5:	(bad)  
   140029bb6:	(bad)  
   140029bb7:	(bad)  
   140029bb8:	clc    
   140029bb9:	(bad)  
   140029bba:	(bad)  
   140029bbb:	(bad)  
   140029bbc:	(bad)  
   140029bbd:	(bad)  
   140029bbe:	(bad)  
   140029bbf:	clc    
   140029bc0:	mov    bh,bh
   140029bc2:	(bad)  
   140029bc3:	(bad)  
   140029bc4:	(bad)  
   140029bc5:	(bad)  
   140029bc6:	(bad)  
   140029bc7:	(bad)  
   140029bc8:	dec    DWORD PTR [rdi-0x1]
   140029bce:	dec    DWORD PTR [rax-0x78]
   140029bd4:	(bad)  
   140029bd5:	(bad)  
   140029bd6:	(bad)  
   140029bd7:	(bad)  
   140029bd8:	(bad)  
   140029bd9:	(bad)  
   140029bda:	(bad)  
   140029bdb:	(bad)  
   140029bdc:	(bad)  
   140029bdd:	(bad)  
   140029bde:	dec    DWORD PTR [rax-0x70f8]
   140029be4:	(bad)  
   140029be5:	(bad)  
   140029be6:	(bad)  
   140029be7:	(bad)  
   140029be8:	(bad)  
   140029be9:	(bad)  
   140029bea:	(bad)  
   140029beb:	(bad)  
   140029bec:	(bad)  
   140029bed:	(bad)  
   140029bee:	clc    
   140029bef:	add    BYTE PTR [rax],0x88
   140029bf2:	(bad)  
   140029bf3:	(bad)  
   140029bf4:	(bad)  
   140029bf5:	(bad)  
   140029bf6:	(bad)  
   140029bf7:	(bad)  
   140029bf8:	(bad)  
   140029bf9:	(bad)  
   140029bfa:	(bad)  
   140029bfb:	(bad)  
   140029bfc:	(bad)  
   140029bfd:	clc    
   140029bfe:	mov    BYTE PTR [rax],al
   140029c00:	add    BYTE PTR [rax],cl
   140029c02:	mov    BYTE PTR [rax-0x77777778],cl
   140029c08:	mov    BYTE PTR [rax-0x77777778],cl
   140029c0e:	add    BYTE PTR [rax],0xe0
   140029c11:	add    BYTE PTR [rax],al
   140029c13:	(bad)  
   140029c14:	rol    BYTE PTR [rax],0x0
   140029c17:	add    eax,DWORD PTR [rax+0x10000]
	...
   140029c81:	add    BYTE PTR [rax],al
   140029c83:	add    BYTE PTR [rax-0x3fff0000],al
   140029c89:	add    BYTE PTR [rax],al
   140029c8b:	add    esp,eax
   140029c8d:	add    BYTE PTR [rax],al
   140029c8f:	(bad)  
   140029c90:	sub    BYTE PTR [rax],al
   140029c92:	add    BYTE PTR [rax],al
   140029c94:	sbb    BYTE PTR [rax],al
   140029c96:	add    BYTE PTR [rax],al
   140029c98:	xor    BYTE PTR [rax],al
   140029c9a:	add    BYTE PTR [rax],al
   140029c9c:	add    DWORD PTR [rax],eax
   140029c9e:	add    al,0x0
	...
   140029cb0:	adc    BYTE PTR [rax],al
	...
   140029cba:	add    BYTE PTR [rax],al
   140029cbc:	add    BYTE PTR [rax],0x0
   140029cbf:	add    BYTE PTR [rax],al
   140029cc1:	add    BYTE PTR [rax],0x0
   140029cc4:	add    BYTE PTR [rax+0x0],0x80
   140029ccb:	add    BYTE PTR [rax+0x8000],al
   140029cd1:	add    BYTE PTR [rax-0x7f7f8000],0x0
   140029cd8:	rol    al,0xc0
   140029cdb:	add    bh,bh
   140029cdd:	add    BYTE PTR [rax],al
   140029cdf:	add    BYTE PTR [rax],al
   140029ce1:	inc    DWORD PTR [rax]
   140029ce3:	add    bh,bh
   140029ce5:	inc    DWORD PTR [rax]
   140029ce7:	add    BYTE PTR [rax],al
   140029ce9:	add    bh,bh
   140029ceb:	add    bh,bh
   140029ced:	add    bh,bh
   140029cef:	add    BYTE PTR [rax],al
   140029cf1:	(bad)  
   140029cf2:	inc    DWORD PTR [rax]
   140029cf4:	(bad)  
   140029cf5:	(bad)  
   140029cf6:	inc    DWORD PTR [rax]
	...
   140029d04:	add    esi,DWORD PTR [rbx]
   140029d06:	xor    esi,DWORD PTR [rbx]
   140029d08:	xor    esi,DWORD PTR [rbx]
   140029d0a:	xor    esi,DWORD PTR [rbx]
   140029d0c:	xor    esi,DWORD PTR [rbx]
   140029d0e:	xor    esi,DWORD PTR [rax]
   140029d10:	(bad)  
   140029d11:	(bad)  
   140029d12:	(bad)  
   140029d13:	(bad)  
   140029d14:	(bad)  
   140029d15:	(bad)  
   140029d16:	(bad)  
   140029d17:	(bad)  
   140029d18:	(bad)  
   140029d19:	(bad)  
   140029d1a:	clc    
   140029d1b:	jae    0x140029d95
   140029d1d:	(bad)  
   140029d1e:	(bad)  
   140029d1f:	(bad)  
   140029d20:	(bad)  
   140029d21:	(bad)  
   140029d22:	(bad)  
   140029d23:	(bad)  
   140029d24:	(bad)  
   140029d25:	(bad)  
   140029d26:	inc    DWORD PTR [rdi-0x88]
   140029d2c:	(bad)  
   140029d2d:	(bad)  
   140029d2e:	(bad)  
   140029d2f:	(bad)  
   140029d30:	(bad)  
   140029d31:	(bad)  
   140029d32:	inc    DWORD PTR [rdi+0x77f8ff78]
   140029d38:	ja     0x140029db1
   140029d3a:	ja     0x140029db3
   140029d3c:	(bad)  
   140029d3d:	(bad)  
   140029d3e:	inc    DWORD PTR [rdi+0x7887f878]
   140029d44:	mov    BYTE PTR [rax-0x70877878],cl
   140029d4a:	inc    DWORD PTR [rdi-0x77770088]
   140029d50:	ja     0x140029dc9
   140029d52:	js     0x140029cdc
   140029d54:	mov    bh,bh
   140029d56:	inc    DWORD PTR [rdi-0x77000088]
   140029d5c:	mov    BYTE PTR [rax-0x708778],cl
   140029d62:	inc    DWORD PTR [rdi-0x78000088]
   140029d68:	ja     0x140029de1
   140029d6a:	ja     0x140029cf3
   140029d6c:	jg     0x140029d6d
   140029d6e:	inc    DWORD PTR [rdi-0x7000088]
   140029d74:	mov    BYTE PTR [rax-0x887778],cl
   140029d7a:	inc    DWORD PTR [rdi+0x77ffff78]
   140029d80:	ja     0x140029df9
   140029d82:	ja     0x140029d0c
   140029d84:	ja     0x140029d85
   140029d86:	inc    DWORD PTR [rdi-0x7000081]
   140029d8c:	mov    BYTE PTR [rax-0x800871],cl
   140029d92:	push   rdi
   140029d94:	jg     0x140029d95
   140029d96:	(bad)  
   140029d97:	(bad)  
   140029d98:	clc    
   140029d99:	data16 (bad) 
   140029d9b:	(bad)  
   140029d9c:	(bad)  
   140029d9d:	(bad)  
   140029d9e:	push   rdi
   140029da0:	jg     0x140029da1
   140029da2:	(bad)  
   140029da3:	push   rsi
   140029da5:	xchg   bh,bh
   140029da7:	(bad)  
   140029da8:	(bad)  
   140029da9:	(bad)  
   140029daa:	push   rdi
   140029dac:	jg     0x140029dad
   140029dae:	(bad)  
   140029daf:	push   rsi
   140029db1:	js     0x140029e22
   140029db3:	(bad)  
   140029db4:	(bad)  
   140029db5:	(bad)  
   140029db6:	push   rdi
   140029db8:	jg     0x140029db9
   140029dba:	(bad)  
   140029dbb:	(bad)  
   140029dbc:	clc    
   140029dbd:	outs   dx,DWORD PTR ds:[rsi]
   140029dbe:	xchg   BYTE PTR [rdi-0x8000001],cl
   140029dc4:	jg     0x140029dc5
   140029dc6:	(bad)  
   140029dc7:	(bad)  
   140029dc8:	inc    DWORD PTR [rsi-0x8]
   140029dce:	push   rdi
   140029dd0:	(bad)  
   140029dd1:	(bad)  
   140029dd2:	(bad)  
   140029dd3:	(bad)  
   140029dd4:	(bad)  
   140029dd5:	clc    
   140029dd6:	outs   dx,DWORD PTR ds:[rsi]
   140029dd7:	(bad)  
   140029dd8:	(bad)  
   140029dd9:	(bad)  
   140029dda:	(bad)  
   140029ddb:	clc    
   140029ddc:	(bad)  
   140029ddd:	(bad)  
   140029dde:	(bad)  
   140029ddf:	(bad)  
   140029de0:	(bad)  
   140029de1:	clc    
   140029de2:	(bad)  
   140029de3:	(bad)  
   140029de4:	(bad)  
   140029de5:	(bad)  
   140029de6:	(bad)  
   140029de7:	clc    
   140029de8:	(bad)  
   140029de9:	(bad)  
   140029dea:	(bad)  
   140029deb:	(bad)  
   140029dec:	(bad)  
   140029ded:	(bad)  
   140029dee:	(bad)  
   140029def:	(bad)  
   140029df0:	(bad)  
   140029df1:	(bad)  
   140029df2:	(bad)  
   140029df3:	clc    
   140029df4:	(bad)  
   140029df5:	(bad)  
   140029df6:	(bad)  
   140029df7:	(bad)  
   140029df8:	(bad)  
   140029df9:	(bad)  
   140029dfa:	(bad)  
   140029dfb:	(bad)  
   140029dfc:	(bad)  
   140029dfd:	(bad)  
   140029dfe:	(bad)  
   140029dff:	clc    
   140029e00:	mov    bh,bh
   140029e02:	(bad)  
   140029e03:	(bad)  
   140029e04:	(bad)  
   140029e05:	(bad)  
   140029e06:	(bad)  
   140029e07:	(bad)  
   140029e08:	(bad)  
   140029e09:	(bad)  
   140029e0a:	dec    DWORD PTR [rax-0x777777f8]
   140029e10:	mov    BYTE PTR [rax-0x77777778],cl
   140029e16:	mov    BYTE PTR [rax-0x1],al
   140029e1c:	add    BYTE PTR [rax],0x1
   140029e1f:	inc    DWORD PTR [rax]
   140029e21:	add    BYTE PTR [rax],al
   140029e23:	add    BYTE PTR [rax],0x0
	...
   140029e72:	add    BYTE PTR [rax],al
   140029e74:	add    BYTE PTR [rax],0x1
   140029e77:	add    BYTE PTR [rax],ch
   140029e79:	add    BYTE PTR [rax],al
   140029e7b:	add    BYTE PTR [rax],dl
   140029e7d:	add    BYTE PTR [rax],al
   140029e7f:	add    BYTE PTR [rax],ah
   140029e81:	add    BYTE PTR [rax],al
   140029e83:	add    BYTE PTR [rcx],al
   140029e85:	add    BYTE PTR [rax+rax*1],al
	...
   140029e98:	adc    BYTE PTR [rax],al
	...
   140029ea2:	add    BYTE PTR [rax],al
   140029ea4:	add    BYTE PTR [rax],0x0
   140029ea7:	add    BYTE PTR [rax],al
   140029ea9:	add    BYTE PTR [rax],0x0
   140029eac:	add    BYTE PTR [rax+0x0],0x80
   140029eb3:	add    BYTE PTR [rax+0x8000],al
   140029eb9:	add    BYTE PTR [rax-0x7f7f8000],0x0
   140029ec0:	rol    al,0xc0
   140029ec3:	add    bh,bh
   140029ec5:	add    BYTE PTR [rax],al
   140029ec7:	add    BYTE PTR [rax],al
   140029ec9:	inc    DWORD PTR [rax]
   140029ecb:	add    bh,bh
   140029ecd:	inc    DWORD PTR [rax]
   140029ecf:	add    BYTE PTR [rax],al
   140029ed1:	add    bh,bh
   140029ed3:	add    bh,bh
   140029ed5:	add    bh,bh
   140029ed7:	add    BYTE PTR [rax],al
   140029ed9:	(bad)  
   140029eda:	inc    DWORD PTR [rax]
   140029edc:	(bad)  
   140029edd:	(bad)  
   140029ede:	inc    DWORD PTR [rax]
   140029ee0:	add    esi,DWORD PTR [rbx]
   140029ee2:	xor    esi,DWORD PTR [rbx]
   140029ee4:	xor    esi,DWORD PTR [rbx]
   140029ee6:	xor    esi,DWORD PTR [rax]
   140029ee8:	js     0x140029ee9
   140029eea:	(bad)  
   140029eeb:	(bad)  
   140029eec:	(bad)  
   140029eed:	(bad)  
   140029eee:	inc    DWORD PTR [rdi+0x7777f878]
   140029ef4:	ja     0x140029f6d
   140029ef6:	inc    DWORD PTR [rdi-0x77770788]
   140029efc:	mov    BYTE PTR [rax-0x877801],cl
   140029f02:	div    DWORD PTR [rdi+0x77]
   140029f05:	idiv   DWORD PTR [rdi-0x79]
   140029f08:	js     0x140029f09
   140029f0a:	clc    
   140029f0b:	mov    BYTE PTR [rax+0x78877788],cl
   140029f11:	push   QWORD PTR [rdi+0x77]
   140029f14:	ja     0x140029ea5
   140029f16:	ja     0x140029e9f
   140029f18:	js     0x140029f19
   140029f1a:	mov    BYTE PTR [rsi-0x78800878],al
   140029f20:	jg     0x140029f21
   140029f22:	jmp    FWORD PTR [rdi+0x6f]
   140029f25:	(bad)  
   140029f26:	push   rdi
   140029f28:	jg     0x140029f29
   140029f2a:	jmp    FWORD PTR [rdi+0x66]
   140029f2d:	(bad)  
   140029f2e:	push   rdi
   140029f30:	jg     0x140029f31
   140029f32:	inc    DWORD PTR [rsi-0x8009008]
   140029f38:	jg     0x140029f39
   140029f3a:	(bad)  
   140029f3b:	clc    
   140029f3c:	outs   dx,DWORD PTR ds:[rsi]
   140029f3d:	(bad)  
   140029f3e:	push   rdi
   140029f40:	(bad)  
   140029f41:	(bad)  
   140029f42:	(bad)  
   140029f43:	inc    DWORD PTR [rsi-0x70070001]
   140029f49:	(bad)  
   140029f4a:	(bad)  
   140029f4b:	(bad)  
   140029f4c:	clc    
   140029f4d:	(bad)  
   140029f4e:	(bad)  
   140029f4f:	clc    
   140029f50:	mov    bh,bh
   140029f52:	(bad)  
   140029f53:	(bad)  
   140029f54:	(bad)  
   140029f55:	(bad)  
   140029f56:	dec    DWORD PTR [rax-0x777777f8]
   140029f5c:	mov    BYTE PTR [rax+0x1808088],cl
   140029f62:	(bad)  
   140029f63:	inc    DWORD PTR [rax]
   140029f65:	add    BYTE PTR [rax+0x1],al
	...
   140029f9b:	add    BYTE PTR [rax+0x28000001],al
   140029fa1:	add    BYTE PTR [rax],al
   140029fa3:	add    BYTE PTR [rax],dh
   140029fa5:	add    BYTE PTR [rax],al
   140029fa7:	add    BYTE PTR [rax+0x0],ah
   140029faa:	add    BYTE PTR [rax],al
   140029fac:	add    DWORD PTR [rax],eax
   140029fae:	or     BYTE PTR [rax],al
	...
   140029fc0:	add    BYTE PTR [rcx],al
   140029fc2:	add    BYTE PTR [rax],al
   140029fc4:	add    BYTE PTR [rax],al
   140029fc6:	add    BYTE PTR [rax],al
   140029fc8:	outs   dx,BYTE PTR ds:[rsi]
   140029fc9:	push   rsi
   140029fca:	ss add dl,al
   140029fcd:	scas   al,BYTE PTR es:[rdi]
   140029fce:	xchg   edx,eax
   140029fcf:	add    dl,bl
   140029fd1:	fcmovbe st,st(2)
   140029fd3:	add    BYTE PTR [rdx],cl
   140029fd5:	data16 out 0x0,al
   140029fd8:	jp     0x140029f88
   140029fda:	out    dx,al
   140029fdb:	add    BYTE PTR [rsi-0x11ff9d7e],dl
   140029fe1:	out    dx,al
   140029fe2:	(bad)  
   140029fe3:	add    BYTE PTR [rsi-0x35ff695a],dh
   140029fe9:	mov    dh,0x0
   140029fec:	stos   BYTE PTR es:[rdi],al
   140029fed:	(bad)  
   140029fee:	(bad)  
   140029fef:	add    dl,cl
   140029ff1:	(bad)  
   140029ff3:	add    dl,cl
   140029ff5:	ret    0xb2
   140029ff8:	(bad)  
   140029ff9:	outs   dx,BYTE PTR ds:[rsi]
   140029ffa:	rex.WRX add BYTE PTR [rdx-0x61ff113a],r12b
   14002a001:	mov    dh,BYTE PTR [rdx+0x0]
   14002a004:	xchg   edx,eax
   14002a005:	jp     0x14002a061
   14002a007:	add    BYTE PTR [rdx],bh
   14002a009:	mov    ah,dh
   14002a00b:	add    dl,ah
   14002a00d:	out    0xee,al
   14002a00f:	add    dl,al
   14002a011:	mov    dh,0xaa
   14002a013:	add    BYTE PTR [rdx],ah
   14002a015:	jp     0x140029ffd
   14002a017:	add    dh,ah
   14002a019:	out    0xe2,al
   14002a01b:	add    dl,bh
   14002a01d:	cli    
   14002a01e:	cli    
   14002a01f:	add    BYTE PTR [rsi-0x62],bl
   14002a022:	(bad)  
   14002a023:	add    BYTE PTR [rdx-0x15ff715a],bh
   14002a029:	out    dx,al
   14002a02a:	test   BYTE PTR [rax],0xb2
   14002a02d:	shl    dl,cl
   14002a02f:	add    BYTE PTR [rsi-0x29ff1d42],ah
   14002a035:	ror    dl,cl
   14002a037:	add    BYTE PTR [rsi-0x21ffa98a],cl
   14002a03d:	(bad)  
   14002a03f:	add    BYTE PTR [rsi-0x45ff957e],dl
   14002a045:	scas   al,BYTE PTR es:[rdi]
   14002a046:	sahf   
   14002a047:	add    dl,al
   14002a049:	(bad)  
   14002a04b:	add    dh,cl
   14002a04d:	retf   0xbe
   14002a050:	movabs ds:0xd6008aa2b2007a92,al
   14002a059:	out    0xf2,al
   14002a05b:	add    BYTE PTR [rdx],dh
   14002a05d:	(bad)  
   14002a05e:	out    0x0,al
   14002a060:	xchg   edx,eax
   14002a061:	jle    0x14002a0c5
   14002a063:	add    BYTE PTR [rsi-0x9ff4542],bh
   14002a069:	div    dh
   14002a06b:	add    BYTE PTR [rsi+0x62],dh
   14002a06e:	rex.X add BYTE PTR [rsi+0x52005672],al
   14002a075:	xchg   esi,eax
   14002a076:	(bad)  
   14002a077:	add    dh,al
   14002a079:	mov    esi,0xd6da00ae
   14002a07e:	rol    BYTE PTR [rax],cl
   14002a080:	(bad)  
   14002a081:	jb     0x14002a069
   14002a083:	add    dh,dl
   14002a085:	fsubp  st(6),st
   14002a087:	add    BYTE PTR [rdx+0x6a00eece],ch
   14002a08d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002a08e:	(bad)  
   14002a08f:	add    dl,ah
   14002a091:	out    0xf2,al
   14002a093:	add    dl,bl
   14002a095:	fcmovu st,st(2)
   14002a097:	add    dh,al
   14002a099:	ret    0xba
   14002a09c:	xchg   BYTE PTR [rdx+0x52],dh
   14002a09f:	add    BYTE PTR [rdx-0x71ffa182],dl
   14002a0a5:	mov    edx,0x8a9e00ee
   14002a0aa:	outs   dx,BYTE PTR ds:[rsi]
   14002a0ab:	add    dl,cl
   14002a0ad:	mov    dh,0x9e
   14002a0af:	add    BYTE PTR [rsi-0x51ff0d4a],al
   14002a0b5:	sahf   
   14002a0b6:	mov    al,BYTE PTR [rax]
   14002a0b8:	rex.WRX xchg rdx,rax
   14002a0ba:	out    0x0,al
   14002a0bc:	out    dx,al
   14002a0bd:	repnz test BYTE PTR [rax],0xc2
   14002a0c1:	(bad)  
   14002a0c2:	repnz add dh,dl
   14002a0c5:	(bad)  
   14002a0c6:	(bad)  
   14002a0c7:	add    BYTE PTR [rsi+0x72007a92],ah
   14002a0cd:	pop    rsi
   14002a0ce:	add    BYTE PTR ds:[rdx-0x4e],bh
   14002a0d2:	out    dx,al
   14002a0d3:	add    BYTE PTR [rsi-0x49ff997e],dl
   14002a0d9:	stos   BYTE PTR es:[rdi],al
   14002a0da:	xchg   esi,eax
   14002a0db:	add    BYTE PTR [rsi-0x59ff7962],ch
   14002a0e1:	retf   0xf6
   14002a0e4:	xchg   esi,eax
   14002a0e5:	mov    es,WORD PTR [rdx-0x55453e00]
   14002a0eb:	add    BYTE PTR [rdx],ch
   14002a0ed:	jle    0x14002a0d5
   14002a0ef:	add    BYTE PTR [rdx-0x45ff6d56],bh
   14002a0f5:	(bad)  
   14002a0f6:	repnz add dl,ah
   14002a0f9:	loop   0x14002a0d9
   14002a0fb:	add    BYTE PTR [rdx-0x21ff957a],bl
   14002a101:	(bad)  
   14002a102:	repnz add BYTE PTR [rsi],dh
   14002a105:	xchg   dh,ah
   14002a107:	add    BYTE PTR [rdx-0x45ff0d3e],bl
   14002a10d:	scas   al,BYTE PTR es:[rdi]
   14002a10e:	(bad)  
   14002a10f:	add    BYTE PTR [rdx],dl
   14002a111:	outs   dx,BYTE PTR ds:[rsi]
   14002a112:	out    0x0,al
   14002a114:	out    0xee,al
   14002a116:	repnz add dl,dl
   14002a119:	(bad)  
   14002a11a:	mov    BYTE PTR [rax],0x82
   14002a11d:	outs   dx,BYTE PTR ds:[rsi]
   14002a11e:	push   rdx
   14002a11f:	add    BYTE PTR [rsi-0x5dff1136],ah
   14002a125:	mov    ?,WORD PTR [rdx+0x0]
   14002a128:	mov    ?,WORD PTR [rdx+0x5e]
   14002a12b:	add    dl,ch
   14002a12d:	(bad)  
   14002a12e:	out    0x0,al
   14002a130:	(bad)  
   14002a132:	(bad)  
   14002a133:	add    BYTE PTR [rdx-0x41ffa58a],cl
   14002a139:	mov    dl,0xa6
   14002a13b:	add    dl,dl
   14002a13d:	(bad)  
   14002a13e:	ret    0xae00
   14002a141:	movabs ds:0xc6ce00f2e2d6008e,al
   14002a14a:	mov    edx,0xf6be9200
   14002a14f:	add    BYTE PTR [rdx-0x49ff856a],ch
   14002a155:	stos   BYTE PTR es:[rdi],al
   14002a156:	(bad)  
   14002a157:	add    BYTE PTR [rdx+0x5a],dh
   14002a15a:	ds add dl,bl
   14002a15d:	fcmovbe st,st(6)
   14002a15f:	add    BYTE PTR [rdx-0x3dff7966],ch
   14002a165:	(bad)  
   14002a167:	add    BYTE PTR [rdx-0x72],al
   14002a16a:	out    0x0,al
   14002a16c:	out    0xe6,al
   14002a16e:	out    0x0,al
   14002a170:	mov    dl,0xa6
   14002a172:	xchg   edx,eax
   14002a173:	add    dl,ch
   14002a175:	repnz cli 
   14002a177:	add    BYTE PTR [rdx-0x29ff092e],dh
   14002a17d:	ror    dh,cl
   14002a17f:	add    dh,al
   14002a181:	mov    dl,0x9e
   14002a183:	add    dh,cl
   14002a185:	loop   0x14002a17d
   14002a187:	add    dh,cl
   14002a189:	retf   0xc2
   14002a18c:	(bad)  
   14002a18d:	out    0xf6,al
   14002a18f:	add    dl,dh
   14002a191:	idiv   dh
   14002a193:	add    BYTE PTR [rsi+0x6a],bh
   14002a196:	rex.WX add sil,al
   14002a199:	mov    esi,0x761e00b2
   14002a19e:	out    0x0,al
   14002a1a0:	jb     0x14002a14c
   14002a1a2:	(bad)  
   14002a1a3:	add    al,ah
   14002a1a5:	(bad)  
   14002a1a7:	add    BYTE PTR [rsi-0x65ff1142],dl
   14002a1ad:	xchg   BYTE PTR [rsi+0x0],ah
   14002a1b0:	jrcxz  0x14002a194
   14002a1b2:	loop   0x14002a1b4
   14002a1b4:	pushf  
   14002a1b5:	xchg   BYTE PTR [rsi+0x0],ch
   14002a1b8:	jo     0x14002a214
   14002a1ba:	cmp    al,BYTE PTR [rax]
   14002a1bc:	or     eax,0x7800e66a
   14002a1c1:	scas   al,BYTE PTR es:[rdi]
   14002a1c2:	repnz add dh,ch
   14002a1c5:	out    dx,al
   14002a1c6:	out    dx,al
   14002a1c7:	add    bh,al
   14002a1c9:	(bad)  
   14002a1cb:	add    BYTE PTR [rsi+0x6200eabe],dl
   14002a1d1:	(bad)  
   14002a1d2:	out    0x0,al
   14002a1d4:	ret    0xa6b6
   14002a1d7:	add    dh,al
   14002a1d9:	mov    dl,0x9a
   14002a1db:	add    dl,dh
   14002a1dd:	repnz repnz add dl,ch
   14002a1e1:	(bad)  
   14002a1e2:	(bad)  
   14002a1e3:	add    dl,cl
   14002a1e5:	fdivp  st(2),st
   14002a1e7:	add    dh,bl
   14002a1e9:	loop   0x14002a1d5
   14002a1eb:	add    dh,bh
   14002a1ed:	(bad)  
   14002a1ee:	inc    BYTE PTR [rax]
   14002a1f0:	jp     0x14002a258
   14002a1f2:	rex.RX add BYTE PTR [rdx-0x2dffa17e],r12b
   14002a1f9:	retf   0xc6
   14002a1fc:	push   rsi
   14002a1fd:	(bad)  
   14002a1fe:	(bad)  
   14002a1ff:	add    bl,ah
   14002a201:	(bad)  
   14002a202:	repnz add BYTE PTR [rbx-0x41ff1132],dh
   14002a209:	mov    dh,0xae
   14002a20b:	add    BYTE PTR [rdx-0x62],bl
   14002a20e:	out    dx,al
   14002a20f:	add    ah,ah
   14002a211:	out    dx,al
   14002a212:	cli    
   14002a213:	add    BYTE PTR [rdx-0x11ff816e],bl
   14002a219:	idiv   dl
   14002a21b:	add    dh,dl
   14002a21d:	(bad)  
   14002a21e:	(bad)  
   14002a21f:	add    BYTE PTR [rsi-0x4e],bh
   14002a222:	repnz add BYTE PTR [rdi-0x35ff5d4e],bh
   14002a229:	ret    0xb6
   14002a22c:	sahf   
   14002a22d:	(bad)  
   14002a22e:	repnz add BYTE PTR [rsi],bh
   14002a231:	mov    ch,dl
   14002a233:	add    BYTE PTR [rbx],dh
   14002a235:	(bad)  
   14002a236:	(bad)  
   14002a237:	add    BYTE PTR [rsi+0x6a00667e],dl
   14002a23d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002a23e:	out    dx,al
   14002a23f:	add    BYTE PTR [rdx+0x4b00f2ba],cl
   14002a245:	xchg   edx,eax
   14002a246:	(bad)  
   14002a247:	add    dh,ch
   14002a249:	repnz cli 
   14002a24b:	add    ch,al
   14002a24d:	mov    edx,0x7e2a00ae
   14002a252:	(bad)  
   14002a253:	add    BYTE PTR [rdi],dh
   14002a255:	xchg   dl,ch
   14002a257:	add    dh,dl
   14002a259:	(bad)  
   14002a25a:	retf   0xaa00
   14002a25d:	retf   0xf2
   14002a260:	movabs ds:0xa900eea26600768e,al
   14002a269:	xchg   esi,eax
   14002a26a:	jle    0x14002a26c
   14002a26c:	rex.RX mov gs,edx
   14002a26f:	add    dh,ah
   14002a271:	(bad)  
   14002a272:	out    dx,al
   14002a273:	add    dl,bl
   14002a275:	loop   0x14002a265
   14002a277:	add    dl,al
   14002a279:	scas   al,BYTE PTR es:[rdi]
   14002a27a:	xchg   esi,eax
   14002a27b:	add    BYTE PTR [rdx+0x2a004e6e],cl
   14002a281:	jp     0x14002a269
   14002a283:	add    dl,bh
   14002a285:	cli    
   14002a286:	inc    BYTE PTR [rax]
   14002a288:	fsubrp st(6),st
   14002a28a:	repnz add BYTE PTR [rsi],bl
   14002a28d:	jb     0x14002a275
   14002a28f:	add    dh,cl
   14002a291:	ret    0xba
   14002a294:	mov    ?,WORD PTR [rdx+0x52]
   14002a297:	add    BYTE PTR [rdx-0x35ffa182],bl
   14002a29d:	mov    dh,0xa2
   14002a29f:	add    dh,bl
   14002a2a1:	(bad)  
   14002a2a2:	(bad)  
   14002a2a3:	add    BYTE PTR [rsi-0x7dff816e],ah
   14002a2a9:	mov    dl,0xee
   14002a2ab:	add    BYTE PTR [rsi-0x45ff6956],bh
   14002a2b1:	(bad)  
   14002a2b2:	test   BYTE PTR [rax],0xde
   14002a2b5:	(bad)  
   14002a2b6:	test   BYTE PTR [rax],0xc2
   14002a2b9:	scas   al,BYTE PTR es:[rdi]
   14002a2ba:	(bad)  
   14002a2bb:	add    BYTE PTR [rdx-0x69ffad92],cl
   14002a2c1:	jp     0x14002a321
   14002a2c3:	add    BYTE PTR [rdx-0x49ffa58a],dl
   14002a2c9:	movabs ds:0xa6ba00bec6ce008e,al
   14002a2d2:	xchg   edx,eax
   14002a2d3:	add    BYTE PTR [rsi+0x6a],bh
   14002a2d6:	rex.WRX add sil,r9b
   14002a2d9:	mov    esi,0xbe9600b2
   14002a2de:	repnz add BYTE PTR [rdx-0x9ff997a],ah
   14002a2e5:	idiv   dl
   14002a2e7:	add    dh,bl
   14002a2e9:	fcmovbe st,st(2)
   14002a2eb:	add    BYTE PTR [rsi-0x31ff7d66],ch
   14002a2f1:	ret    0xb2
   14002a2f4:	xchg   BYTE PTR [rsi+0x4e],ch
   14002a2f7:	add    BYTE PTR [rdx-0x69ff8d76],ah
   14002a2fd:	jp     0x14002a359
   14002a2ff:	add    dh,al
   14002a301:	mov    dh,0xaa
   14002a303:	add    BYTE PTR [rsi],ah
   14002a305:	jp     0x14002a2ed
   14002a307:	add    dl,ch
   14002a309:	out    0xe2,al
   14002a30b:	add    BYTE PTR [rdx-0x62],ah
   14002a30e:	(bad)  
   14002a30f:	add    BYTE PTR [rsi-0x25ff0d2e],dh
   14002a315:	ror    dl,cl
   14002a317:	add    BYTE PTR [rdx-0x1dffa98a],dl
   14002a31d:	(bad)  
   14002a31f:	add    BYTE PTR [rdx-0x2dff957e],bl
   14002a325:	retf   0xbe
   14002a328:	mov    dh,0xa2
   14002a32a:	mov    al,BYTE PTR [rax]
   14002a32c:	xchg   esi,eax
   14002a32d:	jle    0x14002a391
   14002a32f:	add    BYTE PTR [rdx-0x21ffa98e],cl
   14002a335:	(bad)  
   14002a336:	rol    BYTE PTR [rax],cl
   14002a338:	sbb    dh,BYTE PTR [rdx-0x1a]
   14002a33b:	add    BYTE PTR [rsi-0x5a],ch
   14002a33e:	(bad)  
   14002a33f:	add    dh,bl
   14002a341:	fcmovu st,st(2)
   14002a343:	add    dl,cl
   14002a345:	ret    0xba
   14002a348:	mov    dh,BYTE PTR [rdx+0x52]
   14002a34b:	add    BYTE PTR [rsi-0x5dffa182],dl
   14002a351:	mov    ch,BYTE PTR [rsi+0x0]
   14002a354:	repnz repnz test BYTE PTR [rax],0xda
   14002a359:	(bad)  
   14002a35a:	(bad)  
   14002a35b:	add    BYTE PTR [rsi+0x5e],dh
   14002a35e:	add    BYTE PTR ds:[rdx-0x45ff997e],bl
   14002a365:	stos   BYTE PTR es:[rdi],al
   14002a366:	xchg   esi,eax
   14002a367:	add    BYTE PTR [rdx+0x2e00869e],dh
   14002a36d:	jle    0x14002a355
   14002a36f:	add    BYTE PTR [rsi-0x19ff6d56],bh
   14002a375:	loop   0x14002a355
   14002a377:	add    BYTE PTR [rsi+0x16006a86],bl
   14002a37d:	outs   dx,BYTE PTR ds:[rsi]
   14002a37e:	out    0x0,al
   14002a380:	(bad)  
   14002a381:	(bad)  
   14002a382:	mov    BYTE PTR [rax],0xaa
   14002a385:	retf   0xee
   14002a388:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002a389:	mov    ?,WORD PTR [rdx+0x0]
   14002a38c:	xchg   edx,eax
   14002a38d:	jp     0x14002a3ed
   14002a38f:	add    BYTE PTR [rsi-0x4dffa58a],cl
   14002a395:	movabs ds:0xaaba00f2e2da008e,al
   14002a39e:	(bad)  
   14002a39f:	add    dh,bl
   14002a3a1:	fcmovbe st,st(6)
   14002a3a3:	add    BYTE PTR [rsi-0x15ff7966],ch
   14002a3a9:	out    0xe6,al
   14002a3ab:	add    BYTE PTR [rsi-0x49ff6d5a],dh
   14002a3b1:	shl    dh,cl
   14002a3b3:	add    dl,bl
   14002a3b5:	ror    dh,cl
   14002a3b7:	add    dl,dl
   14002a3b9:	loop   0x14002a3b1
   14002a3bb:	add    dl,dl
   14002a3bd:	retf   0xc2
   14002a3c0:	(bad)  
   14002a3c2:	test   BYTE PTR [rax],0x0
   14002a3c5:	add    BYTE PTR [rax],al
   14002a3c7:	add    bh,bh
   14002a3c9:	(bad)  
   14002a3ca:	inc    DWORD PTR [rax]
	...
   14002a3f4:	add    bh,bh
   14002a3f6:	(bad)  
   14002a3f7:	(bad)  
   14002a3f8:	(bad)  
   14002a3f9:	(bad)  
   14002a3fa:	jl     0x14002a443
   14002a3fc:	imul   eax,DWORD PTR [rsi-0x7979797a],0x86868686
   14002a406:	xchg   BYTE PTR [rsi-0x7979797a],al
   14002a40c:	xchg   BYTE PTR [rsi-0x7979797a],al
   14002a412:	xchg   BYTE PTR [rsi-0x7979797a],al
   14002a418:	xchg   BYTE PTR [rsi-0x7979797a],al
   14002a41e:	xchg   BYTE PTR [rsi+0x69868686],al
   14002a424:	rex.RXB jl 0x14002a426
   14002a427:	(bad)  
   14002a428:	(bad)  
   14002a429:	jl     0x14002a45f
   14002a42b:	jg     0x14002a4ac
   14002a42d:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14002a433:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14002a439:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14002a43f:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14002a445:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14002a44b:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14002a451:	test   DWORD PTR [rbp+0x7c347f7f],eax
   14002a457:	(bad)  
   14002a458:	call   QWORD PTR [rbx-0x7a7a807a]
   14002a45e:	jg     0x14002a4df
   14002a460:	jg     0x14002a4e1
   14002a462:	jg     0x14002a4e3
   14002a464:	jg     0x14002a4e5
   14002a466:	jg     0x14002a4e7
   14002a468:	jg     0x14002a4e9
   14002a46a:	jg     0x14002a4eb
   14002a46c:	jg     0x14002a4ed
   14002a46e:	jg     0x14002a4ef
   14002a470:	jg     0x14002a4f1
   14002a472:	jg     0x14002a4f3
   14002a474:	jg     0x14002a4f5
   14002a476:	jg     0x14002a4f7
   14002a478:	jg     0x14002a4f9
   14002a47a:	jg     0x14002a4fb
   14002a47c:	jg     0x14002a4fd
   14002a47e:	jg     0x14002a4ff
   14002a480:	jg     0x14002a501
   14002a482:	jg     0x14002a409
   14002a484:	jg     0x14002a40c
   14002a486:	xchg   ebx,eax
   14002a487:	inc    DWORD PTR [rcx+0x8]
   14002a48a:	jg     0x14002a50b
   14002a48c:	jg     0x14002a50d
   14002a48e:	jg     0x14002a50f
   14002a490:	jg     0x14002a511
   14002a492:	jg     0x14002a513
   14002a494:	jg     0x14002a515
   14002a496:	jg     0x14002a517
   14002a498:	jg     0x14002a519
   14002a49a:	jg     0x14002a51b
   14002a49c:	jg     0x14002a51d
   14002a49e:	jg     0x14002a51f
   14002a4a0:	jg     0x14002a521
   14002a4a2:	jg     0x14002a523
   14002a4a4:	jg     0x14002a525
   14002a4a6:	jg     0x14002a527
   14002a4a8:	jg     0x14002a529
   14002a4aa:	jg     0x14002a52b
   14002a4ac:	jg     0x14002a52d
   14002a4ae:	jg     0x14002a52f
   14002a4b0:	jg     0x14002a531
   14002a4b2:	jg     0x14002a533
   14002a4b4:	jg     0x14002a535
   14002a4b6:	or     BYTE PTR [rcx+0x41],al
   14002a4b9:	sbb    eax,0x7f7f7f7f
   14002a4be:	xchg   BYTE PTR [rsi+0x4c698686],al
   14002a4c4:	in     al,0xb
   14002a4c6:	xchg   edi,eax
   14002a4c7:	rex.RB (bad) 
   14002a4c9:	cmp    BYTE PTR [rcx+riz*8-0x1e1e1e1f],dh
   14002a4d0:	loope  0x14002a4b3
   14002a4d2:	loope  0x14002a4ba
   14002a4d4:	push   rdi
   14002a4d5:	leave  
   14002a4d6:	out    0x12,eax
   14002a4d8:	rcl    DWORD PTR [rcx+rbx*2],cl
   14002a4db:	xchg   BYTE PTR [rsi-0x7979797a],al
   14002a4e1:	xchg   BYTE PTR [rsi+0x1d7f7f7f],al
   14002a4e7:	sub    DWORD PTR [rip+0xffffffff86868686],ebx        # 0xc6892b74
   14002a4ee:	xchg   BYTE PTR [rsi+0x997e44c],al
   14002a4f4:	push   rdi
   14002a4f5:	in     al,dx
   14002a4f6:	out    0xbe,al
   14002a4f8:	mov    esi,0xe1e1e1be
   14002a4fd:	loope  0x14002a4e0
   14002a4ff:	loope  0x14002a4e2
   14002a501:	loope  0x14002a4c1
   14002a503:	mov    esi,0x79e10fbe
   14002a508:	push   rdi
   14002a509:	and    ecx,DWORD PTR [rbx]
   14002a50b:	(bad)  
   14002a50c:	pop    rcx
   14002a50d:	xchg   BYTE PTR [rsi-0x7979797a],al
   14002a513:	xchg   BYTE PTR [rsi+0x29291d86],al
   14002a519:	xor    eax,DWORD PTR [rsi+0x59868686]
   14002a51f:	pop    rcx
   14002a520:	(bad)  
   14002a521:	nop    DWORD PTR [rcx+rbx*8]
   14002a525:	in     al,dx
   14002a526:	or     DWORD PTR [rdi+0x2d1b742c],edx
   14002a52c:	sub    eax,0x2d2d2d2d
   14002a531:	sbb    esp,DWORD PTR [rax+0x74]
   14002a534:	movabs eax,ds:0x6057e1d94d0923f5
   14002a53d:	adc    al,0x59
   14002a53f:	pop    rcx
   14002a540:	pop    rcx
   14002a541:	pop    rcx
   14002a542:	pop    rcx
   14002a543:	xchg   BYTE PTR [rsi-0x75d6cc7a],al
   14002a549:	xor    ebx,DWORD PTR [rcx+0x59]
   14002a54c:	pop    rcx
   14002a54d:	pop    rcx
   14002a54e:	imul   ebp,DWORD PTR [rcx+0x40],0x6005b3be
   14002a555:	imul   ebp,DWORD PTR [rcx+0x69],0x69696969
   14002a55c:	imul   ebp,DWORD PTR [rcx+0x69],0x69696969
   14002a563:	imul   ebp,DWORD PTR [rcx+0x69],0xde146969
   14002a56a:	cwde   
   14002a56b:	test   al,0x4d
   14002a56d:	push   rsp
   14002a56e:	imul   ebp,DWORD PTR [rcx+0x69],0x59596969
   14002a575:	pop    rcx
   14002a576:	xor    ecx,DWORD PTR [rdx+0x6969338a]
   14002a57c:	imul   ebp,DWORD PTR [rcx+0x69],0x40984c69
   14002a583:	rex.WRB stc 
   14002a585:	rcr    DWORD PTR [rbx],0x7a
   14002a588:	imul   edi,DWORD PTR [rdx+0x2d],0xb26021a4
   14002a58f:	(bad)  
   14002a590:	rcl    DWORD PTR [rbp+rbp*2+0x77],0x14
   14002a595:	imul   ebp,DWORD PTR [rcx+0x69],0x69696969
   14002a59c:	xchg   edi,eax
   14002a59d:	cwde   
   14002a59e:	jp     0x14002a609
   14002a5a0:	imul   ebp,DWORD PTR [rcx+0x69],0x33696969
   14002a5a7:	mov    dh,BYTE PTR [rbx+0x33]
   14002a5aa:	imul   ebp,DWORD PTR [rcx+0x69],0x7a7a7a69
   14002a5b1:	jp     0x14002a62d
   14002a5b3:	sbb    eax,DWORD PTR [rsi+riz*2+0x1f]
   14002a5b7:	faddp  st(1),st
   14002a5b9:	rex.R (bad) 
   14002a5bb:	mov    edi,0xadadadad
   14002a5c0:	lods   eax,DWORD PTR ds:[rsi]
   14002a5c1:	sbb    al,0x43
   14002a5c3:	test   al,0x1f
   14002a5c5:	push   rsp
   14002a5c6:	jp     0x14002a642
   14002a5c8:	jp     0x14002a644
   14002a5ca:	jp     0x14002a646
   14002a5cc:	add    bh,BYTE PTR [rdx+0x7a]
   14002a5cf:	jp     0x14002a64b
   14002a5d1:	jp     0x14002a64d
   14002a5d3:	imul   ebp,DWORD PTR [rcx+0x69],0x95737333
   14002a5da:	jp     0x14002a656
   14002a5dc:	jp     0x14002a658
   14002a5de:	jp     0x14002a65a
   14002a5e0:	jp     0x14002a65c
   14002a5e2:	jp     0x14002a65e
   14002a5e4:	jp     0x14002a660
   14002a5e6:	jp     0x14002a63c
   14002a5e8:	shrd   DWORD PTR [rbp-0x59c72641],edi,cl
   14002a5ef:	(bad)  
   14002a5f0:	es mov edi,0xa1d9adad
   14002a5f6:	jp     0x14002a672
   14002a5f8:	jp     0x14002a674
   14002a5fa:	jp     0x14002a676
   14002a5fc:	jp     0x14002a678
   14002a5fe:	jp     0x14002a67a
   14002a600:	jp     0x14002a67c
   14002a602:	jp     0x14002a67e
   14002a604:	jp     0x14002a680
   14002a606:	xchg   ebp,eax
   14002a607:	jae    0x14002a615
   14002a609:	xchg   ebp,eax
   14002a60a:	jp     0x14002a686
   14002a60c:	jp     0x14002a688
   14002a60e:	jp     0x14002a68a
   14002a610:	jp     0x14002a68c
   14002a612:	jp     0x14002a68e
   14002a614:	jp     0x14002a690
   14002a616:	jp     0x14002a678
   14002a618:	pushf  
   14002a619:	(bad)  
   14002a61a:	sbb    DWORD PTR [rax+0x2df66dfd],0x70
   14002a621:	cwde   
   14002a622:	xchg   edi,eax
   14002a623:	pop    rsp
   14002a624:	sbb    edi,DWORD PTR [rdx+0x7a]
   14002a627:	jp     0x14002a6a3
   14002a629:	jp     0x14002a6a5
   14002a62b:	jp     0x14002a6a7
   14002a62d:	jp     0x14002a6a9
   14002a62f:	jp     0x14002a6ab
   14002a631:	jp     0x14002a6ad
   14002a633:	jp     0x14002a6af
   14002a635:	jp     0x14002a5cc
   14002a637:	or     al,0x55
   14002a639:	xchg   ebp,eax
   14002a63a:	jp     0x14002a6b6
   14002a63c:	jp     0x14002a6b8
   14002a63e:	jp     0x14002a6ba
   14002a640:	jp     0x14002a6bc
   14002a642:	jp     0x14002a6be
   14002a644:	jp     0x14002a6c0
   14002a646:	jp     0x14002a6c2
   14002a648:	push   rsp
   14002a649:	sbb    edi,DWORD PTR [rdx+0x7a]
   14002a64c:	jp     0x14002a6c8
   14002a64e:	jp     0x14002a6ca
   14002a650:	jp     0x14002a6cc
   14002a652:	jp     0x14002a6ce
   14002a654:	jp     0x14002a6d0
   14002a656:	jp     0x14002a675
   14002a658:	jp     0x14002a6d4
   14002a65a:	jp     0x14002a6d6
   14002a65c:	jp     0x14002a6d8
   14002a65e:	jp     0x14002a6da
   14002a660:	jp     0x14002a6dc
   14002a662:	jp     0x14002a6de
   14002a664:	jp     0x14002a6e0
   14002a666:	xchg   ebp,eax
   14002a667:	push   rbp
   14002a668:	xor    eax,0x7a7a7a95
   14002a66d:	jp     0x14002a6d8
   14002a66f:	imul   ebp,DWORD PTR [rcx+0x69],0x69696969
   14002a676:	imul   ecx,DWORD PTR [rbx+rbx*1-0x68],0x66093b1f
   14002a67e:	or     WORD PTR [rbx],di
   14002a681:	movsxd edx,DWORD PTR [rdx]
   14002a683:	cwde   
   14002a684:	jo     0x14002a6c5
   14002a686:	ja     0x14002a67e
   14002a688:	cwde   
   14002a689:	cwde   
   14002a68a:	fisubr WORD PTR [rcx+0x69]
   14002a68d:	imul   ebp,DWORD PTR [rcx+0x69],0x7a696969
   14002a694:	jp     0x14002a710
   14002a696:	xchg   ebp,eax
   14002a697:	xor    eax,0x6969952a
   14002a69c:	imul   ebp,DWORD PTR [rcx+0x69],0x69696969
   14002a6a3:	imul   ebp,DWORD PTR [rcx+0x69],0xcb363b70
   14002a6aa:	retf   
   14002a6ab:	retf   
   14002a6ac:	sbb    al,0x1c
   14002a6ae:	sbb    al,0x1c
   14002a6b0:	lods   eax,DWORD PTR ds:[rsi]
   14002a6b1:	retf   
   14002a6b2:	retf   
   14002a6b3:	retf   
   14002a6b4:	repnz mov bh,0x1b
   14002a6b7:	jp     0x14002a72d
   14002a6b9:	cmp    esi,DWORD PTR [rdi+0x69696912]
   14002a6bf:	imul   ebp,DWORD PTR [rcx+0x69],0x69696969
   14002a6c6:	xchg   ebp,eax
   14002a6c7:	sub    bl,BYTE PTR [rbx+0x33]
   14002a6ca:	imul   ebp,DWORD PTR [rcx+0x69],0x69696969
   14002a6d1:	imul   ebp,DWORD PTR [rcx+0x69],0xcb636969
   14002a6d8:	fnstcw WORD PTR [rbx]
   14002a6da:	cmc    
   14002a6db:	pop    rsp
   14002a6dc:	cwde   
   14002a6dd:	cwde   
   14002a6de:	cwde   
   14002a6df:	cwde   
   14002a6e0:	rex.W (bad) 
   14002a6e2:	(bad)  
   14002a6e3:	cmp    esp,DWORD PTR [rdx]
   14002a6e5:	movsxd esi,DWORD PTR [rdi+0x69]
   14002a6e8:	adc    al,0x1b
   14002a6ea:	cmp    esp,eax
   14002a6ec:	cmp    esi,DWORD PTR [rdi+0x69]
   14002a6ef:	imul   ebp,DWORD PTR [rcx+0x69],0x69696969
   14002a6f6:	xor    ebx,DWORD PTR [rbx+0x5b]
   14002a6f9:	xor    ebp,DWORD PTR [rcx+0x69]
   14002a6fc:	imul   ebp,DWORD PTR [rcx+0x69],0x69696969
   14002a703:	imul   ebp,DWORD PTR [rcx+0x69],0x6951f32d
   14002a70a:	imul   ebp,DWORD PTR [rcx+0x69],0x69696969
   14002a711:	imul   ebp,DWORD PTR [rcx+0x69],0x6969144c
   14002a718:	imul   ebp,DWORD PTR [rcx+0x7a],0x1b66cb6a
   14002a71f:	imul   ebp,DWORD PTR [rcx+0x69],0x69696969
   14002a726:	xor    ebx,DWORD PTR [rbx+0x58]
   14002a729:	xor    ebp,DWORD PTR [rcx+0x69]
   14002a72c:	imul   ebp,DWORD PTR [rcx+0x59],0x59595959
   14002a733:	pop    rcx
   14002a734:	pop    rcx
   14002a735:	pop    rcx
   14002a736:	pop    rcx
   14002a737:	jp     0x14002a75a
   14002a739:	push   rsp
   14002a73a:	push   rsp
   14002a73b:	push   rsp
   14002a73c:	push   rsp
   14002a73d:	push   rsp
   14002a73e:	push   rsp
   14002a73f:	mov    WORD PTR [rbx],ds
   14002a741:	adc    al,0x59
   14002a743:	pop    rcx
   14002a744:	pop    rcx
   14002a745:	pop    rcx
   14002a746:	pop    rcx
   14002a747:	pop    rcx
   14002a748:	pop    rcx
   14002a749:	pop    rcx
   14002a74a:	pop    rcx
   14002a74b:	adc    al,0x22
   14002a74d:	lods   eax,DWORD PTR ds:[rsi]
   14002a74e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002a74f:	pop    rcx
   14002a750:	pop    rcx
   14002a751:	pop    rcx
   14002a752:	pop    rcx
   14002a753:	imul   ebp,DWORD PTR [rcx+0x69],0x33265833
   14002a75a:	pop    rcx
   14002a75b:	pop    rcx
   14002a75c:	pop    rcx
   14002a75d:	pop    rcx
   14002a75e:	xchg   BYTE PTR [rsi+0x2868686],al
   14002a764:	adc    dh,bl
   14002a766:	(bad)  
   14002a767:	rex.WRB (bad) 
   14002a769:	(bad)  
   14002a76b:	(bad)  
   14002a76d:	fstp   DWORD PTR [rcx+rbx*8-0x48843975]
   14002a774:	repz pop rsp
   14002a776:	std    
   14002a777:	rex.WR xchg BYTE PTR [rsi-0x1f67797a],r8b
   14002a77e:	lods   eax,DWORD PTR ds:[rsi]
   14002a77f:	xchg   BYTE PTR [rsi+0x59598686],al
   14002a785:	pop    rcx
   14002a786:	xor    esp,DWORD PTR [rsi]
   14002a788:	xor    eax,DWORD PTR es:[rsi-0x7979797a]
   14002a78f:	xchg   BYTE PTR [rsi-0x1f95797a],al
   14002a795:	lods   eax,DWORD PTR ds:[rsi]
   14002a796:	(bad)  
   14002a798:	cwde   
   14002a799:	(bad)  
   14002a79a:	cwde   
   14002a79b:	or     ecx,DWORD PTR [rbx]
   14002a79d:	or     ecx,edx
   14002a79f:	(bad)  
   14002a7a0:	(bad)  
   14002a7a1:	nop
   14002a7a2:	add    DWORD PTR [rdx+0x3b],ecx
   14002a7a5:	and    ah,BYTE PTR [rsi-0x7979eb7d]
   14002a7ab:	xchg   BYTE PTR [rcx-0x79795243],ah
   14002a7b1:	xchg   BYTE PTR [rsi+0x33868686],al
   14002a7b7:	es rex.XB sbb eax,0x86868686
   14002a7be:	xchg   BYTE PTR [rsi+0x1b868686],al
   14002a7c4:	and    ecx,DWORD PTR [rbp+0x4d]
   14002a7c7:	rex.R pop rbp
   14002a7c9:	rex.WR xchg BYTE PTR [rsi-0x7979797a],r8b
   14002a7d0:	or     bl,BYTE PTR [rdx]
   14002a7d2:	imul   edx,DWORD PTR [rbx+rbp*8],0xf6c80277
   14002a7d9:	in     al,0x2d
   14002a7db:	cwde   
   14002a7dc:	icebp  
   14002a7dd:	sbb    al,0xf3
   14002a7df:	xchg   BYTE PTR [rsi-0x7979797a],al
   14002a7e5:	xchg   BYTE PTR [rip+0xffffffff861d1e43],bl        # 0xc61fc62e
   14002a7eb:	xchg   BYTE PTR [rsi+0x7f7f7f86],al
   14002a7f1:	jg     0x14002a872
   14002a7f3:	jg     0x14002a85e
   14002a7f5:	ja     0x14002a78f
   14002a7f7:	(bad)  
   14002a7f8:	push   rcx
   14002a7f9:	je     0x14002a7df
   14002a7fb:	jg     0x14002a87c
   14002a7fd:	jg     0x14002a787
   14002a7ff:	(bad)  
   14002a800:	adc    DWORD PTR [rbp+0x7f7f1182],ebx
   14002a806:	jg     0x14002a887
   14002a808:	jp     0x14002a7a2
   14002a80a:	stc    
   14002a80b:	(bad)  
   14002a80c:	rex cwde 
   14002a80e:	adc    al,0x7f
   14002a810:	jg     0x14002a891
   14002a812:	jg     0x14002a79a
   14002a814:	xchg   BYTE PTR [rsi+0x1d4d1e1d],al
   14002a81a:	(bad)  
   14002a81b:	jg     0x14002a89c
   14002a81d:	jg     0x14002a89e
   14002a81f:	jg     0x14002a8a0
   14002a821:	jg     0x14002a8a2
   14002a823:	jg     0x14002a8a4
   14002a825:	jg     0x14002a82d
   14002a827:	pop    rcx
   14002a828:	adc    al,0x77
   14002a82a:	rex.WR jg 0x14002a8ac
   14002a82d:	(bad)  
   14002a82e:	xor    DWORD PTR [rdi+0x7e03817f],ecx
   14002a834:	jg     0x14002a8b5
   14002a836:	jg     0x14002a8b7
   14002a838:	jg     0x14002a84e
   14002a83a:	sbb    ebx,DWORD PTR [rbx]
   14002a83c:	adc    al,0x7f
   14002a83e:	jg     0x14002a8bf
   14002a840:	jg     0x14002a8c1
   14002a842:	jg     0x14002a8c3
   14002a844:	jg     0x14002a84c
   14002a846:	sbb    eax,0x7f1d0e4d
   14002a84b:	jg     0x14002a8cc
   14002a84d:	jg     0x14002a8ce
   14002a84f:	jg     0x14002a8d0
   14002a851:	jg     0x14002a8d2
   14002a853:	jg     0x14002a8d4
   14002a855:	jg     0x14002a8d6
   14002a857:	jg     0x14002a8d8
   14002a859:	jg     0x14002a8da
   14002a85b:	jg     0x14002a808
   14002a85d:	sub    esi,DWORD PTR [rsi+0x7f]
   14002a860:	jg     0x14002a8da
   14002a862:	add    esp,DWORD PTR [rip+0x7f7f7f80]        # 0x1bf8227e8
   14002a868:	jg     0x14002a8e9
   14002a86a:	jg     0x14002a8eb
   14002a86c:	jg     0x14002a8ed
   14002a86e:	jg     0x14002a8ef
   14002a870:	jg     0x14002a8f1
   14002a872:	jg     0x14002a8f3
   14002a874:	jg     0x14002a8f5
   14002a876:	sbb    eax,0x7f7a570e
   14002a87b:	jg     0x14002a8fc
   14002a87d:	jg     0x14002a8fe
   14002a87f:	jg     0x14002a900
   14002a881:	jg     0x14002a902
   14002a883:	jg     0x14002a904
   14002a885:	jg     0x14002a906
   14002a887:	jg     0x14002a908
   14002a889:	jg     0x14002a90a
   14002a88b:	stos   DWORD PTR es:[rdi],eax
   14002a88c:	cmp    al,0x68
   14002a88e:	mov    al,0x7f
   14002a890:	or     BYTE PTR [rdi+0x3],0xcf
   14002a894:	(bad)  
   14002a895:	jg     0x14002a916
   14002a897:	jg     0x14002a918
   14002a899:	jg     0x14002a91a
   14002a89b:	jg     0x14002a91c
   14002a89d:	jg     0x14002a91e
   14002a89f:	jg     0x14002a920
   14002a8a1:	jg     0x14002a922
   14002a8a3:	jg     0x14002a924
   14002a8a5:	jg     0x14002a921
   14002a8a7:	push   rdi
   14002a8a8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002a8a9:	jp     0x14002a92a
   14002a8ab:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14002a8b1:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14002a8b7:	test   DWORD PTR [rbp-0x23e9ac7b],eax
   14002a8bd:	pop    QWORD PTR [rbp+0x7d7d1611]
   14002a8c3:	adc    BYTE PTR [rax-0x7a7a7a7b],al
   14002a8c9:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14002a8cf:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14002a8d5:	jg     0x14002a951
   14002a8d7:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002a8d8:	rex jp 0x14002a860
   14002a8db:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14002a8e1:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14002a8e7:	test   DWORD PTR [rbp+0x317d0d85],eax
   14002a8ed:	test   DWORD PTR [rbp+0x2e7d52ef],eax
   14002a8f3:	(bad)  
   14002a8f4:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14002a8fa:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14002a900:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14002a906:	jp     0x14002a948
   14002a908:	rex jp 0x14002a890
   14002a90b:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14002a911:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14002a917:	test   DWORD PTR [rbp+0x3075e98e],eax
   14002a91d:	test   DWORD PTR [rsi-0x72adada6],ecx
   14002a923:	push   rbx
   14002a924:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14002a92a:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14002a930:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14002a936:	jp     0x14002a978
   14002a938:	test   al,0x69
   14002a93a:	test   DWORD PTR [rax],ebp
   14002a93c:	sub    BYTE PTR [rax],ch
   14002a93e:	sub    BYTE PTR [rax],ch
   14002a940:	sub    BYTE PTR [rax],ch
   14002a942:	sub    BYTE PTR [rax],ch
   14002a944:	sub    BYTE PTR [rax],ch
   14002a946:	sub    BYTE PTR [rax],ch
   14002a948:	sub    BYTE PTR [rbx-0x13],cl
   14002a94b:	jmp    0x16b50d18e
   14002a950:	push   rdx
   14002a951:	rex.WB shr BYTE PTR [r8],cl
   14002a954:	sub    BYTE PTR [rax],ch
   14002a956:	sub    BYTE PTR [rax],ch
   14002a958:	sub    BYTE PTR [rax],ch
   14002a95a:	sub    BYTE PTR [rax],ch
   14002a95c:	sub    BYTE PTR [rax],ch
   14002a95e:	sub    BYTE PTR [rax],ch
   14002a960:	sub    BYTE PTR [rax],ch
   14002a962:	sub    BYTE PTR [rax],ch
   14002a964:	sub    BYTE PTR [rbp+0x6909a869],al
   14002a96a:	test   DWORD PTR [rax],ebp
   14002a96c:	sub    BYTE PTR [rax],ch
   14002a96e:	sub    BYTE PTR [rax],ch
   14002a970:	sub    BYTE PTR [rax],ch
   14002a972:	sub    BYTE PTR [rax],ch
   14002a974:	sub    BYTE PTR [rax],ch
   14002a976:	sub    BYTE PTR [rax],ch
   14002a978:	sub    BYTE PTR [rsi+0x2e],dl
   14002a97b:	iret   
   14002a97c:	out    dx,eax
   14002a97d:	sub    BYTE PTR [rsi+0x289fed8d],cl
   14002a983:	sub    BYTE PTR [rax],ch
   14002a985:	sub    BYTE PTR [rax],ch
   14002a987:	sub    BYTE PTR [rax],ch
   14002a989:	sub    BYTE PTR [rax],ch
   14002a98b:	sub    BYTE PTR [rax],ch
   14002a98d:	sub    BYTE PTR [rax],ch
   14002a98f:	sub    BYTE PTR [rax],ch
   14002a991:	sub    BYTE PTR [rax],ch
   14002a993:	sub    BYTE PTR [rax],ch
   14002a995:	test   DWORD PTR [rcx+0x9],ebp
   14002a998:	leave  
   14002a999:	imul   ebp,DWORD PTR [rax],0x28282828
   14002a99f:	sub    BYTE PTR [rax],ch
   14002a9a1:	sub    BYTE PTR [rax],ch
   14002a9a3:	sub    BYTE PTR [rax],ch
   14002a9a5:	sub    BYTE PTR [rax],ch
   14002a9a7:	sub    BYTE PTR [rax],ch
   14002a9a9:	addr32 jne 0x14002a988
   14002a9ac:	pop    rdx
   14002a9ad:	cmp    eax,0x102eb818
   14002a9b2:	(bad)  
   14002a9b3:	sub    BYTE PTR [rax],ch
   14002a9b5:	sub    BYTE PTR [rax],ch
   14002a9b7:	sub    BYTE PTR [rax],ch
   14002a9b9:	sub    BYTE PTR [rax],ch
   14002a9bb:	sub    BYTE PTR [rax],ch
   14002a9bd:	sub    BYTE PTR [rax],ch
   14002a9bf:	sub    BYTE PTR [rax],ch
   14002a9c1:	sub    BYTE PTR [rax],ch
   14002a9c3:	sub    BYTE PTR [rax],ch
   14002a9c5:	sub    BYTE PTR [rcx-0x37],ch
   14002a9c8:	call   0x1682ad236
   14002a9cd:	sub    BYTE PTR [rax],ch
   14002a9cf:	sub    BYTE PTR [rax],ch
   14002a9d1:	sub    BYTE PTR [rax],ch
   14002a9d3:	sub    BYTE PTR [rax],ch
   14002a9d5:	sub    BYTE PTR [rax],ch
   14002a9d7:	sub    BYTE PTR [rax],ch
   14002a9d9:	cmp    eax,0x9913dc16
   14002a9de:	sub    BYTE PTR [rdx+rbx*4],ah
   14002a9e1:	fdiv   QWORD PTR [rcx]
   14002a9e3:	cmp    eax,0x28282828
   14002a9e8:	sub    BYTE PTR [rax],ch
   14002a9ea:	sub    BYTE PTR [rax],ch
   14002a9ec:	sub    BYTE PTR [rax],ch
   14002a9ee:	sub    BYTE PTR [rax],ch
   14002a9f0:	sub    BYTE PTR [rax],ch
   14002a9f2:	sub    BYTE PTR [rax],ch
   14002a9f4:	sub    BYTE PTR [rax],ch
   14002a9f6:	imul   ebp,eax,0x282859e8
   14002a9fc:	sub    BYTE PTR [rax],ch
   14002a9fe:	sub    BYTE PTR [rax],ch
   14002aa00:	sub    BYTE PTR [rax],ch
   14002aa02:	sub    BYTE PTR [rax],ch
   14002aa04:	sub    BYTE PTR [rax],ch
   14002aa06:	sub    BYTE PTR [rax],ch
   14002aa08:	sub    BYTE PTR [rax],ch
   14002aa0a:	and    al,0xa9
   14002aa0c:	mov    cl,0x4f
   14002aa0e:	sbb    DWORD PTR [rax],ebp
   14002aa10:	addr32 (bad) 
   14002aa12:	mov    cl,0x4
   14002aa14:	sbb    BYTE PTR [rax],ch
   14002aa16:	sub    BYTE PTR [rax],ch
   14002aa18:	sub    BYTE PTR [rax],ch
   14002aa1a:	sub    BYTE PTR [rax],ch
   14002aa1c:	sub    BYTE PTR [rax],ch
   14002aa1e:	sub    BYTE PTR [rax],ch
   14002aa20:	sub    BYTE PTR [rax],ch
   14002aa22:	sub    BYTE PTR [rax],ch
   14002aa24:	sub    BYTE PTR [rax],ch
   14002aa26:	pop    rcx
   14002aa27:	call   0x1552b3104
   14002aa2c:	adc    eax,0x15151515
   14002aa31:	adc    eax,0x15151515
   14002aa36:	adc    eax,0x15151515
   14002aa3b:	outs   dx,DWORD PTR ds:[rsi]
   14002aa3c:	test   eax,0x15992575
   14002aa41:	cld    
   14002aa42:	lea    esi,[rbp+0x16]
   14002aa45:	outs   dx,DWORD PTR ds:[rsi]
   14002aa46:	adc    eax,0x15151515
   14002aa4b:	adc    eax,0x15151515
   14002aa50:	adc    eax,0x15151515
   14002aa55:	sub    BYTE PTR [rsi+0x1586c0d8],al
   14002aa5b:	adc    eax,0x15151515
   14002aa60:	adc    eax,0x15151515
   14002aa65:	adc    eax,0x15151515
   14002aa6a:	adc    eax,0x13916f15
   14002aa6f:	rex.WB cmp dl,BYTE PTR [rip+0xffffffff9f9fc53d]        # 0xdfa26fb3
   14002aa76:	push   rax
   14002aa77:	cmp    eax,0x15151515
   14002aa7c:	adc    eax,0x15151515
   14002aa81:	adc    eax,0x15151515
   14002aa86:	xchg   al,al
   14002aa88:	(bad)  
   14002aa89:	xchg   BYTE PTR [rip+0x15151515],dl        # 0x15517bfa4
   14002aa8f:	adc    eax,0x15151515
   14002aa94:	adc    eax,0x15151515
   14002aa99:	adc    eax,0x92151515
   14002aa9e:	xchg   esi,eax
   14002aa9f:	scas   al,BYTE PTR es:[rdi]
   14002aaa0:	iret   
   14002aaa1:	cmp    dl,BYTE PTR [rip+0x4c5bb15]        # 0x144c865bc
   14002aaa7:	sahf   
   14002aaa8:	outs   dx,DWORD PTR ds:[rsi]
   14002aaa9:	adc    eax,0x15151515
   14002aaae:	adc    eax,0x15151515
   14002aab3:	adc    eax,0x17861515
   14002aab8:	ret    0x1586
   14002aabb:	adc    eax,0x15151515
   14002aac0:	adc    eax,0x15151515
   14002aac5:	adc    eax,0x15151515
   14002aaca:	adc    eax,0xc7151515
   14002aacf:	cdq    
   14002aad0:	fwait
   14002aad1:	rex.WB push r8
   14002aad3:	adc    eax,0xba921515
   14002aad8:	mov    ebx,0x15151515
   14002aadd:	adc    eax,0x15151515
   14002aae2:	adc    eax,0x86151515
   14002aae7:	ret    0x6ea
   14002aaea:	adc    eax,0x15151515
   14002aaef:	adc    eax,0x15151515
   14002aaf4:	adc    eax,0x15151515
   14002aaf9:	adc    eax,0x15151515
   14002aafe:	adc    eax,0xa3a3a515
   14002ab03:	and    BYTE PTR [rip+0x15151515],dl        # 0x15517c01e
   14002ab09:	adc    eax,0x15151515
   14002ab0e:	adc    eax,0x15151515
   14002ab13:	adc    eax,0xea061515
   14002ab18:	mov    ecx,0x1515157f
   14002ab1d:	adc    eax,0x15151515
   14002ab22:	adc    eax,0x15151515
   14002ab27:	adc    eax,0x15151515
   14002ab2c:	adc    eax,0x15151515
   14002ab31:	rex.RX and eax,0x15156ba7
   14002ab37:	adc    eax,0x15151515
   14002ab3c:	adc    eax,0x15151515
   14002ab41:	adc    eax,0x15151515
   14002ab46:	jg     0x14002ab01
   14002ab48:	lods   al,BYTE PTR ds:[rsi]
   14002ab49:	jg     0x14002ab60
   14002ab4b:	adc    eax,0x15151515
   14002ab50:	adc    eax,0x15151515
   14002ab55:	adc    eax,0x15151515
   14002ab5a:	adc    eax,0x15151515
   14002ab5f:	adc    eax,0xa3961515
   14002ab64:	ins    BYTE PTR es:[rdi],dx
   14002ab65:	adc    eax,0x15151515
   14002ab6a:	adc    eax,0x15151515
   14002ab6f:	adc    eax,0x15151515
   14002ab74:	adc    eax,0xbcac7f15
   14002ab79:	jg     0x14002ab90
   14002ab7b:	mov    DWORD PTR [rcx-0x76767677],ecx
   14002ab81:	mov    DWORD PTR [rcx-0x76767677],ecx
   14002ab87:	mov    DWORD PTR [rcx-0x76767677],ecx
   14002ab8d:	mov    DWORD PTR [rcx-0x78767677],ecx
   14002ab93:	lahf   
   14002ab94:	(bad)  
   14002ab95:	mov    DWORD PTR [rcx-0x76767677],ecx
   14002ab9b:	mov    DWORD PTR [rcx-0x76767677],ecx
   14002aba1:	mov    DWORD PTR [rcx+0x7f158989],ecx
   14002aba7:	mov    esp,0x89897f84
   14002abac:	mov    DWORD PTR [rcx-0x76767677],ecx
   14002abb2:	mov    DWORD PTR [rcx-0x76767677],ecx
   14002abb8:	mov    DWORD PTR [rcx-0x76767677],ecx
   14002abbe:	mov    DWORD PTR [rcx+0x7e728989],ecx
   14002abc4:	xchg   esi,eax
   14002abc5:	mov    DWORD PTR [rcx-0x76767677],ecx
   14002abcb:	mov    DWORD PTR [rcx-0x76767677],ecx
   14002abd1:	mov    DWORD PTR [rcx+0x7f898989],ecx
   14002abd7:	test   BYTE PTR [rsi+0x14],ch
   14002abda:	adc    eax,0x89898989
   14002abdf:	mov    DWORD PTR [rcx-0x76767677],ecx
   14002abe5:	mov    DWORD PTR [rcx-0x76767677],ecx
   14002abeb:	mov    DWORD PTR [rcx-0x76767677],ecx
   14002abf1:	mov    DWORD PTR [rcx-0x76769306],ecx
   14002abf7:	mov    DWORD PTR [rcx-0x76767677],ecx
   14002abfd:	mov    DWORD PTR [rcx-0x76767677],ecx
   14002ac03:	mov    DWORD PTR [rcx-0x9180eb],ecx
   14002ac09:	xlat   BYTE PTR ds:[rbx]
   14002ac0a:	sub    BYTE PTR [rcx-0x76767677],cl
   14002ac10:	mov    DWORD PTR [rcx-0x76767677],ecx
   14002ac16:	mov    DWORD PTR [rcx-0x76767677],ecx
   14002ac1c:	mov    DWORD PTR [rcx-0x76767677],ecx
   14002ac22:	mov    DWORD PTR [rcx-0x76767677],ecx
   14002ac28:	mov    DWORD PTR [rcx-0x76767677],ecx
   14002ac2e:	mov    DWORD PTR [rcx-0x76767677],ecx
   14002ac34:	mov    DWORD PTR [rip+0x39ff6ed3],edx        # 0x17a021b0d
   14002ac3a:	ja     0x14002ac64
   14002ac3c:	mov    DWORD PTR [rcx-0x76767677],ecx
   14002ac42:	mov    DWORD PTR [rcx-0x76767677],ecx
   14002ac48:	mov    DWORD PTR [rcx-0x76767677],ecx
   14002ac4e:	mov    DWORD PTR [rcx-0x76767677],ecx
   14002ac54:	mov    DWORD PTR [rcx-0x76767677],ecx
   14002ac5a:	mov    DWORD PTR [rcx-0x76767677],ecx
   14002ac60:	mov    DWORD PTR [rcx+0x7f158989],ecx
   14002ac66:	retf   0xffff
   14002ac69:	push   QWORD PTR [rbp+0x28857fd3]
   14002ac6f:	adc    eax,0x15151515
   14002ac74:	adc    eax,0x15151515
   14002ac79:	adc    eax,0x15151515
   14002ac7e:	adc    eax,0x15151515
   14002ac83:	adc    eax,0x15151515
   14002ac88:	adc    eax,0x15151515
   14002ac8d:	adc    eax,0x28151515
   14002ac92:	sub    BYTE PTR [rdi-0x4a],bh
   14002ac95:	retf   0xffb5
   14002ac98:	(bad)  
   14002ac99:	(bad)  
   14002ac9a:	push   QWORD PTR [rbp-0x4a4a4a4b]
   14002aca0:	mov    ch,0xb5
   14002aca2:	mov    ch,0xb5
   14002aca4:	mov    ch,0xb5
   14002aca6:	mov    ch,0xb5
   14002aca8:	mov    ch,0xb5
   14002acaa:	mov    ch,0xb5
   14002acac:	mov    ch,0xb5
   14002acae:	mov    ch,0xb5
   14002acb0:	mov    ch,0xb5
   14002acb2:	mov    ch,0xb5
   14002acb4:	mov    ch,0xb5
   14002acb6:	mov    ch,0xb5
   14002acb8:	mov    ch,0xb5
   14002acba:	mov    ch,0xb5
   14002acbc:	mov    ch,0xb5
   14002acbe:	mov    ch,0xb5
   14002acc0:	mov    ch,0xb5
   14002acc2:	mov    ch,0xb5
   14002acc4:	mov    ch,0xff
   14002acc6:	(bad)  
   14002acc7:	jmp    rax
   14002acc9:	add    BYTE PTR [rax],al
   14002accb:	add    BYTE PTR [rax],al
   14002accd:	(bad)  
   14002acce:	pop    rsi
   14002accf:	rex.WRX rol BYTE PTR [rax],0x0
   14002acd3:	add    BYTE PTR [rax],al
   14002acd5:	add    esp,eax
   14002acd7:	add    BYTE PTR [rax+0x0],al
   14002acdd:	add    eax,eax
   14002acdf:	add    BYTE PTR [rax+0x0],al
   14002ace5:	add    DWORD PTR [rax+0x0],eax
   14002aceb:	add    BYTE PTR [rax],al
   14002aced:	add    BYTE PTR [rax+0x0],al
	...
   14002ae27:	add    BYTE PTR [rax+0x0],al
   14002ae2d:	add    BYTE PTR [rax],al
   14002ae2f:	add    BYTE PTR [rax+0x0],al
   14002ae35:	add    DWORD PTR [rax+0xc000],eax
   14002ae3b:	add    BYTE PTR [rax],al
   14002ae3d:	add    DWORD PTR [rax+0xe000],eax
   14002ae43:	add    BYTE PTR [rax],al
   14002ae45:	(bad)  
   14002ae46:	rol    BYTE PTR [rax],0x28
   14002ae49:	add    BYTE PTR [rax],al
   14002ae4b:	add    BYTE PTR [rax],ah
   14002ae4d:	add    BYTE PTR [rax],al
   14002ae4f:	add    BYTE PTR [rax+0x0],al
   14002ae52:	add    BYTE PTR [rax],al
   14002ae54:	add    DWORD PTR [rax],eax
   14002ae56:	or     BYTE PTR [rax],al
	...
   14002ae68:	add    BYTE PTR [rcx],al
   14002ae6a:	add    BYTE PTR [rax],al
   14002ae6c:	add    BYTE PTR [rax],al
   14002ae6e:	add    BYTE PTR [rax],al
   14002ae70:	outs   dx,BYTE PTR ds:[rsi]
   14002ae71:	pop    rdx
   14002ae72:	cmp    al,BYTE PTR [rax]
   14002ae74:	ret    0x9aae
   14002ae77:	add    dh,bl
   14002ae79:	fcmovbe st,st(2)
   14002ae7b:	add    BYTE PTR [rsi],cl
   14002ae7d:	push   0xffffffffffffffe2
   14002ae7f:	add    BYTE PTR [rdx-0x52],bh
   14002ae82:	(bad)  
   14002ae83:	add    BYTE PTR [rdx-0x11ff997a],bl
   14002ae89:	out    dx,al
   14002ae8a:	(bad)  
   14002ae8b:	add    BYTE PTR [rdx-0x35ff7d66],ch
   14002ae91:	ret    0xb6
   14002ae94:	ror    dh,cl
   14002ae96:	retf   0xce00
   14002ae99:	fsubp  st(6),st
   14002ae9b:	add    BYTE PTR [rdx-0x71ff6166],bl
   14002aea1:	jb     0x14002aef5
   14002aea3:	add    dl,al
   14002aea5:	mov    dh,0xaa
   14002aea7:	add    BYTE PTR [rsi-0x59ff193a],ch
   14002aead:	xchg   edx,eax
   14002aeae:	jp     0x14002aeb0
   14002aeb0:	mov    edx,0xf6008ea6
   14002aeb5:	cli    
   14002aeb6:	cli    
   14002aeb7:	add    dh,bl
   14002aeb9:	(bad)  
   14002aebb:	add    BYTE PTR [rdx],dh
   14002aebd:	(bad)  
   14002aebe:	out    0x0,al
   14002aec0:	ror    dl,cl
   14002aec2:	mov    esi,0xeee6de00
   14002aec7:	add    BYTE PTR [rsi-0x6dff2542],ah
   14002aecd:	jle    0x14002af31
   14002aecf:	add    dl,al
   14002aed1:	shl    dl,cl
   14002aed3:	add    BYTE PTR [rsi-0x19ff916e],ch
   14002aed9:	out    dx,al
   14002aeda:	test   BYTE PTR [rax],0xae
   14002aedd:	movabs ds:0x8e4600aebec6008e,al
   14002aee6:	(bad)  
   14002aee7:	add    BYTE PTR [rdx+0x66],bh
   14002aeea:	rex.RX add dl,r9b
   14002aeed:	mov    dh,0x9e
   14002aeef:	add    BYTE PTR [rsi],bl
   14002aef1:	jbe    0x14002aed9
   14002aef3:	add    BYTE PTR [rsi-0x45ff1146],cl
   14002aef9:	movabs ds:0x869200ea9e5e0086,al
   14002af02:	jbe    0x14002af04
   14002af04:	(bad)  
   14002af05:	(bad)  
   14002af06:	mov    esi,0xced6da00
   14002af0b:	add    dl,dl
   14002af0d:	loop   0x14002af01
   14002af0f:	add    BYTE PTR [rdx-0x5dffa586],dl
   14002af15:	(bad)  
   14002af16:	repnz add BYTE PTR [rdx-0x19ff7d6a],ah
   14002af1d:	out    0xe2,al
   14002af1f:	add    dh,dh
   14002af21:	div    dh
   14002af23:	add    BYTE PTR [rdx-0x49ff153e],ah
   14002af29:	scas   al,BYTE PTR es:[rdi]
   14002af2a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002af2b:	add    dh,ah
   14002af2d:	loop   0x14002af09
   14002af2f:	add    BYTE PTR [rsi-0x2dff7562],ch
   14002af35:	(bad)  
   14002af36:	mov    dh,0x0
   14002af38:	ror    dl,cl
   14002af3a:	mov    BYTE PTR [rax],0xd6
   14002af3d:	out    0xf6,al
   14002af3f:	add    dh,al
   14002af41:	mov    esi,0xdada00b6
   14002af46:	fiadd  DWORD PTR [rax]
   14002af48:	mov    dh,0xa6
   14002af4a:	xchg   esi,eax
   14002af4b:	add    BYTE PTR [rsi+0x76006a82],dl
   14002af51:	(bad)  
   14002af53:	add    dh,al
   14002af55:	mov    dl,0x9a
   14002af57:	add    BYTE PTR [rdx],bl
   14002af59:	jb     0x14002af41
   14002af5b:	add    BYTE PTR [rdx-0x51ff917a],bl
   14002af61:	sahf   
   14002af62:	xchg   BYTE PTR [rax],al
   14002af64:	mov    dh,BYTE PTR [rsi+0x5a]
   14002af67:	add    dl,al
   14002af69:	mov    edx,0xceba00aa
   14002af6e:	out    dx,al
   14002af6f:	add    dl,ah
   14002af71:	loop   0x14002af51
   14002af73:	add    BYTE PTR [rdx-0x76],al
   14002af76:	out    0x0,al
   14002af78:	xchg   esi,eax
   14002af79:	(bad)  
   14002af7a:	data16 add BYTE PTR [rsi-0x39ff112e],dh
   14002af81:	mov    esi,0x6e8200b2
   14002af86:	push   rdx
   14002af87:	add    BYTE PTR [rsi],ah
   14002af89:	jp     0x14002af71
   14002af8b:	add    BYTE PTR [rsi+0x6e00f2be],cl
   14002af91:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002af92:	(bad)  
   14002af93:	add    dh,cl
   14002af95:	loop   0x14002af8d
   14002af97:	add    BYTE PTR [rsi+0x5e],dh
   14002af9a:	rex.X add dl,bl
   14002af9d:	fcmovbe st,st(6)
   14002af9f:	add    BYTE PTR [rsi],dl
   14002afa1:	outs   dx,BYTE PTR ds:[rsi]
   14002afa2:	loop   0x14002afa4
   14002afa4:	xchg   BYTE PTR [rsi-0x1111ff12],dh
   14002afaa:	repnz add dl,cl
   14002afad:	ret    0xba
   14002afb0:	(bad)  
   14002afb1:	ror    dl,cl
   14002afb3:	add    BYTE PTR [rdx-0x59ff113a],ah
   14002afb9:	xchg   esi,eax
   14002afba:	jle    0x14002afbc
   14002afbc:	mov    esi,0xfe0092aa
   14002afc1:	(bad)  
   14002afc2:	inc    BYTE PTR [rax]
   14002afc4:	(bad)  
   14002afc5:	retf   0xc2
   14002afc8:	loop   0x14002afb0
   14002afca:	repnz add BYTE PTR [rsi-0x11ff8972],bl
   14002afd1:	repnz test BYTE PTR [rax],0x4a
   14002afd5:	mov    ?,esi
   14002afd7:	add    BYTE PTR [rsi+0x66],dh
   14002afda:	rex.WRX add BYTE PTR [rsi-0x5e],r12b
   14002afde:	(bad)  
   14002afdf:	add    dh,dl
   14002afe1:	(bad)  
   14002afe2:	(bad)  
   14002afe3:	add    BYTE PTR [rdx-0x11ff796a],ah
   14002afe9:	idiv   dh
   14002afeb:	add    dl,al
   14002afed:	(bad)  
   14002afee:	repnz add BYTE PTR [rdx+0x5e],dh
   14002aff2:	add    BYTE PTR ds:[rdx+0x7a009eae],bh
   14002aff9:	mov    dl,0xee
   14002affb:	add    BYTE PTR [rdx-0x55ff957a],bl
   14002b001:	(bad)  
   14002b002:	xchg   BYTE PTR [rax],al
   14002b004:	ret    0xf6da
   14002b007:	add    BYTE PTR [rsi-0x45ffa98e],al
   14002b00d:	mov    dh,0xae
   14002b00f:	add    BYTE PTR [rdx-0x9ff6d5a],dh
   14002b015:	cli    
   14002b016:	inc    BYTE PTR [rax]
   14002b018:	(bad)  
   14002b019:	(bad)  
   14002b01a:	(bad)  
   14002b01b:	add    BYTE PTR [rsi-0x4dff9982],dl
   14002b021:	movabs ds:0x924a00aebece0092,al
   14002b02a:	(bad)  
   14002b02b:	add    dl,al
   14002b02d:	mov    dh,0xa6
   14002b02f:	add    BYTE PTR [rsi],ah
   14002b031:	jbe    0x14002b019
   14002b033:	add    BYTE PTR [rdx-0x61ff0d46],cl
   14002b039:	mov    dh,BYTE PTR [rdx+0x0]
   14002b03c:	fcmovbe st,st(6)
   14002b03e:	rol    BYTE PTR [rax],cl
   14002b040:	mov    ?,WORD PTR [rdx+0x5e]
   14002b043:	add    BYTE PTR [rsi-0x55ff0d36],ah
   14002b049:	xchg   esi,eax
   14002b04a:	(bad)  
   14002b04b:	add    dh,ah
   14002b04d:	out    0xe6,al
   14002b04f:	add    BYTE PTR [rdx-0x35ff0d3e],bl
   14002b055:	(bad)  
   14002b056:	mov    edx,0xc6ced200
   14002b05b:	add    dh,bl
   14002b05d:	(bad)  
   14002b05e:	cli    
   14002b05f:	add    dl,ah
   14002b061:	loop   0x14002b045
   14002b063:	add    BYTE PTR [rsi],bh
   14002b065:	mov    ch,dl
   14002b067:	add    BYTE PTR [rdx-0x29ff0d2e],dh
   14002b06d:	loop   0x14002b065
   14002b06f:	add    BYTE PTR [rsi],dl
   14002b071:	outs   dx,BYTE PTR ds:[rsi]
   14002b072:	out    0x0,al
   14002b074:	mov    edx,0xa6009aaa
   14002b079:	ret    0xe6
   14002b07c:	scas   al,BYTE PTR es:[rdi]
   14002b07d:	retf   0xee
   14002b080:	(bad)  
   14002b081:	push   0x4e
   14002b083:	add    BYTE PTR [rsi+0x7e00a2b2],bh
   14002b089:	push   0x4a
   14002b08b:	add    BYTE PTR [rdx],bh
   14002b08d:	xchg   dh,ah
   14002b08f:	add    dl,ah
   14002b091:	(bad)  
   14002b093:	add    BYTE PTR [rsi-0x59ff6956],bh
   14002b099:	xchg   edx,eax
   14002b09a:	jbe    0x14002b09c
   14002b09c:	retf   0xf6de
   14002b09f:	add    dl,dh
   14002b0a1:	repnz repnz add dl,ch
   14002b0a5:	repnz cli 
   14002b0a7:	add    BYTE PTR [rsi-0xdff755e],dh
   14002b0ad:	idiv   dl
   14002b0af:	add    BYTE PTR [rsi+0x6600eec2],bl
   14002b0b5:	movabs ds:0x92a600eeeeee00ee,al
   14002b0be:	jle    0x14002b0c0
   14002b0c0:	retf   0xa2b6
   14002b0c3:	add    dh,al
   14002b0c5:	mov    dl,0x9e
   14002b0c7:	add    dl,al
   14002b0c9:	mov    edx,0xbe9600ae
   14002b0ce:	repnz add dh,dl
   14002b0d1:	ror    dh,cl
   14002b0d3:	add    dh,dl
   14002b0d5:	retf   0xc2
   14002b0d8:	mov    ?,WORD PTR [rdx+0x56]
   14002b0db:	add    BYTE PTR [rsi-0x45ff0936],ah
   14002b0e1:	shl    dl,cl
   14002b0e3:	add    BYTE PTR [rdx+0x5a],dh
   14002b0e6:	cmp    al,BYTE PTR [rax]
   14002b0e8:	loop   0x14002b0c4
   14002b0ea:	rol    BYTE PTR [rax],cl
   14002b0ec:	scas   al,BYTE PTR es:[rdi]
   14002b0ed:	(bad)  
   14002b0ee:	(bad)  
   14002b0ef:	add    dh,cl
   14002b0f1:	ret    0xb6
   14002b0f4:	(bad)  
   14002b0f5:	(bad)  
   14002b0f6:	retf   0xfa00
   14002b0f9:	cli    
   14002b0fa:	cli    
   14002b0fb:	add    dl,ah
   14002b0fd:	(bad)  
   14002b0ff:	add    dl,ah
   14002b101:	out    0xee,al
   14002b103:	add    BYTE PTR [rsi-0x4dff9d82],dl
   14002b109:	movabs ds:0x8e4a00aebeca008e,al
   14002b112:	(bad)  
   14002b113:	add    BYTE PTR [rdx],ah
   14002b115:	jbe    0x14002b0fd
   14002b117:	add    BYTE PTR [rdx-0x21ff1146],dl
   14002b11d:	(bad)  
   14002b11e:	(bad)  
   14002b11f:	add    dh,dl
   14002b121:	loop   0x14002b115
   14002b123:	add    BYTE PTR [rsi-0x4dff7d6a],ah
   14002b129:	sahf   
   14002b12a:	mov    al,BYTE PTR [rax]
   14002b12c:	(bad)  
   14002b12e:	test   BYTE PTR [rax],0xca
   14002b131:	mov    esi,0x869e00b6
   14002b136:	outs   dx,BYTE PTR ds:[rsi]
   14002b137:	add    BYTE PTR [rdx-0x71ff7962],dh
   14002b13d:	jbe    0x14002b199
   14002b13f:	add    dh,ah
   14002b141:	loop   0x14002b121
   14002b143:	add    BYTE PTR [rdx-0x35ff997e],bl
   14002b149:	mov    esi,0x7a2a00b2
   14002b14e:	out    0x0,al
   14002b150:	shl    dl,cl
   14002b152:	test   BYTE PTR [rax],0xde
   14002b155:	fcmovbe st,st(6)
   14002b157:	add    dh,cl
   14002b159:	ret    0xba
   14002b15c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002b15d:	(bad)  
   14002b15e:	out    dx,al
   14002b15f:	add    BYTE PTR [rdx-0x2dff816a],ch
   14002b165:	retf   0xc2
   14002b168:	movabs ds:0x6a00f6f2f200768e,al
   14002b171:	movabs ds:0xaebe00fef6f200ea,al
   14002b17a:	sahf   
   14002b17b:	add    BYTE PTR [rsi-0x4e],bh
   14002b17e:	out    dx,al
   14002b17f:	add    BYTE PTR [rsi-0x41ff957a],bl
   14002b185:	mov    dh,0xae
   14002b187:	add    BYTE PTR [rsi-0x5dff6d5a],dh
   14002b18d:	mov    dh,BYTE PTR [rdx+0x0]
   14002b190:	xchg   edx,eax
   14002b191:	jp     0x14002b1f1
   14002b193:	add    dl,ch
   14002b195:	out    0xe6,al
   14002b197:	add    dh,cl
   14002b199:	(bad)  
   14002b19a:	mov    edx,0xc6ced600
   14002b19f:	add    BYTE PTR [rdx-0x76],al
   14002b1a2:	(bad)  
   14002b1a3:	add    BYTE PTR [rdx],bl
   14002b1a5:	outs   dx,BYTE PTR ds:[rsi]
   14002b1a6:	out    0x0,al
	...
   14002b270:	(bad)  
   14002b271:	(bad)  
   14002b272:	(bad)  
	...
   14002b28b:	add    BYTE PTR [rax],al
   14002b28d:	(bad)  
   14002b28e:	(bad)  
   14002b28f:	(bad)  
   14002b290:	(bad)  
   14002b291:	(bad)  
   14002b292:	pop    rdx
   14002b293:	and    al,0x67
   14002b295:	ja     0x14002b301
   14002b297:	push   0x6a
   14002b299:	push   0x6a
   14002b29b:	push   0x6a
   14002b29d:	push   0x6a
   14002b29f:	push   0x6a
   14002b2a1:	push   0x6a
   14002b2a3:	push   0x6a
   14002b2a5:	push   0x6a
   14002b2a7:	push   0x6a
   14002b2a9:	push   0x77
   14002b2ab:	addr32 and al,0x5a
   14002b2ae:	(bad)  
   14002b2af:	(bad)  
   14002b2b0:	(bad)  
   14002b2b1:	pop    rdx
   14002b2b2:	cs push 0xffffffffffffff92
   14002b2b5:	rex.WRX mov WORD PTR [rsp+r9*4-0x73737374],cs
   14002b2bd:	mov    WORD PTR [rsp+rcx*4-0x73737374],cs
   14002b2c4:	mov    WORD PTR [rsp+rcx*4+0x4e8c8c8c],cs
   14002b2cb:	xchg   edx,eax
   14002b2cc:	push   0x2e
   14002b2ce:	pop    rdx
   14002b2cf:	(bad)  
   14002b2d0:	rex.WX pop rbp
   14002b2d2:	sub    eax,DWORD PTR [rsi]
   14002b2d4:	xchg   edx,eax
   14002b2d5:	xchg   edx,eax
   14002b2d6:	xchg   edx,eax
   14002b2d7:	xchg   edx,eax
   14002b2d8:	xchg   edx,eax
   14002b2d9:	xchg   edx,eax
   14002b2da:	xchg   edx,eax
   14002b2db:	xchg   edx,eax
   14002b2dc:	xchg   edx,eax
   14002b2dd:	xchg   edx,eax
   14002b2de:	xchg   edx,eax
   14002b2df:	xchg   edx,eax
   14002b2e0:	xchg   edx,eax
   14002b2e1:	xchg   edx,eax
   14002b2e2:	xchg   edx,eax
   14002b2e3:	xchg   edx,eax
   14002b2e4:	xchg   edx,eax
   14002b2e5:	xchg   edx,eax
   14002b2e6:	xchg   edx,eax
   14002b2e7:	xchg   edx,eax
   14002b2e8:	xchg   edx,eax
   14002b2e9:	xchg   edx,eax
   14002b2ea:	xchg   edx,eax
   14002b2eb:	xchg   edx,eax
   14002b2ec:	(bad)  
   14002b2ed:	sub    ebx,DWORD PTR [rbp+0x4a]
   14002b2f0:	cmp    BYTE PTR [rdi+0x77],ah
   14002b2f3:	push   0x6a
   14002b2f5:	push   0x2
   14002b2f7:	or     BYTE PTR [rcx-0x4a3b758a],al
   14002b2fd:	mov    ch,0xb5
   14002b2ff:	add    eax,0xb1b5b5b5
   14002b304:	push   rdx
   14002b305:	(bad)  
   14002b306:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002b307:	add    ch,BYTE PTR [rdx+0x6a]
   14002b30a:	push   0x6a
   14002b30c:	push   0x77
   14002b30e:	cmp    BYTE PTR [esi],bl
   14002b311:	pop    rsp
   14002b312:	ja     0x14002b37e
   14002b314:	push   0x6a
   14002b316:	add    eax,0x6130b50c
   14002b31b:	or     dl,cl
   14002b31d:	retf   0xcaca
   14002b320:	retf   0xcaca
   14002b323:	(bad)  
   14002b324:	mov    BYTE PTR [rdi],0x72
   14002b327:	mov    esi,0x6a6a6ab6
   14002b32c:	push   0x77
   14002b32e:	pop    rsp
   14002b32f:	(bad)  
   14002b330:	xchg   BYTE PTR [rip+0x77777777],dh        # 0x1b77a2aad
   14002b336:	(bad)  
   14002b337:	jb     0x14002b375
   14002b339:	push   rax
   14002b33a:	rex sub eax,DWORD PTR [rdx]
   14002b33d:	mov    ebp,0xa12508b0
   14002b342:	mov    ecx,0x77777740
   14002b347:	outs   dx,DWORD PTR ds:[rsi]
   14002b348:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002b349:	ja     0x14002b3c2
   14002b34b:	ja     0x14002b3c4
   14002b34d:	ja     0x14002b384
   14002b34f:	xchg   BYTE PTR [rbp+rsi*1+0x77777777],al
   14002b356:	ja     0x14002b3cb
   14002b358:	sbb    al,0x8
   14002b35a:	and    eax,0xc28a507
   14002b35f:	(bad)  
   14002b360:	mov    bl,0x28
   14002b362:	cmp    eax,DWORD PTR [rbp+0x77777777]
   14002b368:	mov    BYTE PTR [rdi+0x77],dh
   14002b36b:	ja     0x14002b3e4
   14002b36d:	ja     0x14002b3a4
   14002b36f:	test   BYTE PTR [rbp+0x5c],al
   14002b372:	sub    ebp,DWORD PTR [rbx]
   14002b374:	sub    ebp,DWORD PTR [rbx]
   14002b376:	sub    ebp,DWORD PTR [rbx]
   14002b378:	sub    ebp,DWORD PTR [rbx]
   14002b37a:	and    eax,0x440d0f17
   14002b37f:	rex.R or eax,0x2b551b36
   14002b385:	sub    ebp,DWORD PTR [rbx]
   14002b387:	sub    ebp,DWORD PTR [rbx]
   14002b389:	sub    ebp,DWORD PTR [rbx]
   14002b38b:	sub    ebp,DWORD PTR [rbx]
   14002b38d:	sub    ebx,DWORD PTR [rbp+rax*2+0x66]
   14002b391:	pop    rsp
   14002b392:	sub    ebp,DWORD PTR [rbx]
   14002b394:	sub    ebp,DWORD PTR [rbx]
   14002b396:	sub    ebp,DWORD PTR [rbx]
   14002b398:	sub    ebp,DWORD PTR [rbx]
   14002b39a:	jl     0x14002b3d0
   14002b39c:	or     BYTE PTR [rip+0x73554f3e],r9b        # 0x1b35802e1
   14002b3a3:	rex
   14002b3a4:	rex jp 0x14002b3b0
   14002b3a7:	sub    ebp,DWORD PTR [rbx]
   14002b3a9:	sub    ebp,DWORD PTR [rbx]
   14002b3ab:	sub    ebp,DWORD PTR [rbx]
   14002b3ad:	sub    ebx,DWORD PTR [rsi+riz*2+0x3d]
   14002b3b1:	pop    rsp
   14002b3b2:	ja     0x14002b42b
   14002b3b4:	ja     0x14002b42d
   14002b3b6:	ja     0x14002b42f
   14002b3b8:	ja     0x14002b405
   14002b3ba:	ins    BYTE PTR es:[rdi],dx
   14002b3bb:	jb     0x14002b3ff
   14002b3bd:	imul   ebp,DWORD PTR [rbx+0x42],0x37
   14002b3c1:	(bad)  
   14002b3c2:	(bad)  
   14002b3c3:	lods   eax,DWORD PTR ds:[rsi]
   14002b3c4:	cwde   
   14002b3c5:	push   rbp
   14002b3c6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002b3c7:	ss rex.WXB ja 0x14002b442
   14002b3cb:	ja     0x14002b444
   14002b3cd:	ja     0x14002b42b
   14002b3cf:	cmp    eax,0x77773574
   14002b3d4:	ja     0x14002b44d
   14002b3d6:	ja     0x14002b44f
   14002b3d8:	ja     0x14002b425
   14002b3da:	push   rdi
   14002b3db:	push   rdx
   14002b3dc:	and    eax,0x32262632
   14002b3e1:	rex.WRXB or rax,0xffffffffbd77121c
   14002b3e7:	cmp    esi,DWORD PTR [rdx+0x77]
   14002b3ea:	ja     0x14002b463
   14002b3ec:	ja     0x14002b465
   14002b3ee:	xor    eax,0x6a351774
   14002b3f3:	push   0x6a
   14002b3f5:	push   0x6a
   14002b3f7:	ja     0x14002b439
   14002b3f9:	jae    0x14002b408
   14002b3fb:	test   DWORD PTR [rip+0x31084f79],esp        # 0x1710b037a
   14002b401:	cdq    
   14002b402:	jae    0x14002b38c
   14002b404:	sub    ebp,DWORD PTR [rdx+0x6a]
   14002b407:	jp     0x14002b3bc
   14002b409:	push   0x6a
   14002b40b:	push   0x6a
   14002b40d:	push   0x35
   14002b40f:	(bad)  
   14002b410:	(bad)  
   14002b411:	adc    ch,BYTE PTR [rdx+0x6a]
   14002b414:	push   0x6a
   14002b416:	push   0x73
   14002b418:	mov    esi,0x68683bc8
   14002b41d:	sbb    esp,DWORD PTR [rdx]
   14002b41f:	sbb    ecx,DWORD PTR [rbx]
   14002b421:	sub    bl,BYTE PTR [rcx]
   14002b423:	cmp    al,0xd
   14002b425:	mov    BYTE PTR [rdx+0x6a],ch
   14002b428:	cmp    ebp,DWORD PTR [rdx+0x6a]
   14002b42b:	push   0x6a
   14002b42d:	push   0x12
   14002b42f:	(bad)  
   14002b430:	(bad)  
   14002b431:	adc    ch,BYTE PTR [rdx+0x6a]
   14002b434:	push   0x6a
   14002b436:	push   0x40
   14002b438:	ss jb  0x14002b46b
   14002b43b:	or     BYTE PTR [rdx],al
   14002b43d:	rex (bad) 
   14002b43f:	mov    ah,0xe
   14002b441:	(bad)  
   14002b442:	sahf   
   14002b443:	add    dl,BYTE PTR [rax+0x50]
   14002b446:	and    eax,0x6a6a2864
   14002b44b:	push   0x6a
   14002b44d:	push   0x12
   14002b44f:	(bad)  
   14002b450:	cmp    edx,DWORD PTR [rdx]
   14002b452:	(bad)  
   14002b453:	xchg   edx,eax
   14002b454:	xchg   edx,eax
   14002b455:	xchg   edx,eax
   14002b456:	xchg   edx,eax
   14002b457:	(bad)  
   14002b458:	push   0x40
   14002b45a:	mov    ebp,0x3f922f14
   14002b45f:	sub    eax,0x92821d0a
   14002b464:	(bad)  
   14002b465:	sub    esp,DWORD PTR [rip+0xffffffff92924f61]        # 0xd29503cc
   14002b46b:	xchg   edx,eax
   14002b46c:	xchg   edx,eax
   14002b46d:	(bad)  
   14002b46e:	adc    bh,BYTE PTR [rbx]
   14002b470:	jb     0x14002b484
   14002b472:	xchg   edx,eax
   14002b473:	xchg   edx,eax
   14002b474:	xchg   edx,eax
   14002b475:	xchg   edx,eax
   14002b476:	xchg   edx,eax
   14002b477:	xchg   edx,eax
   14002b478:	xchg   edx,eax
   14002b479:	xchg   edx,eax
   14002b47a:	xchg   edx,eax
   14002b47b:	(bad)  
   14002b47c:	xchg   edx,eax
   14002b47d:	sbb    BYTE PTR [rcx-0x7d],bl
   14002b480:	adc    eax,0x92a487b7
   14002b485:	xchg   edx,eax
   14002b486:	xchg   edx,eax
   14002b487:	(bad)  
   14002b488:	xchg   edx,eax
   14002b489:	xchg   edx,eax
   14002b48a:	xchg   edx,eax
   14002b48b:	xchg   edx,eax
   14002b48c:	xchg   edx,eax
   14002b48d:	xchg   edx,eax
   14002b48e:	adc    dh,BYTE PTR [rdx-0x42]
   14002b491:	jl     0x14002b425
   14002b493:	rex.WRX
   14002b494:	rex.WRX
   14002b495:	rex.WRX
   14002b496:	rex.WRX
   14002b497:	rex.WRX
   14002b498:	rex.WRX
   14002b499:	rex.WRX
   14002b49a:	rex.WRX
   14002b49b:	rex.WRX lods al,BYTE PTR ds:[rsi]
   14002b49d:	jge    0x14002b4a3
   14002b49f:	rex.WRX pop rbx
   14002b4a1:	add    eax,DWORD PTR [rcx+0x56]
   14002b4a4:	rex.WRX
   14002b4a5:	rex.WRX
   14002b4a6:	rex.WRX
   14002b4a7:	rex.WRX
   14002b4a8:	rex.WRX
   14002b4a9:	rex.WRX
   14002b4aa:	rex.WRX
   14002b4ab:	rex.WRX
   14002b4ac:	rex.WRX xchg rdx,rax
   14002b4ae:	jl     0x14002b46e
   14002b4b0:	(bad)  
   14002b4b2:	mov    WORD PTR [rsp+rcx*4-0x73737374],cs
   14002b4b9:	mov    WORD PTR [rsi+rcx*2+0x4327135b],cs
   14002b4c0:	cmp    cl,BYTE PTR [rcx+rdx*2-0x74]
   14002b4c4:	mov    WORD PTR [rsp+rcx*4-0x73737374],cs
   14002b4cb:	mov    WORD PTR [rsp+rcx*4+0x2bbc0f7c],cs
   14002b4d2:	mov    WORD PTR [rsp+rcx*4-0x73737374],cs
   14002b4d9:	mov    WORD PTR [rdi+rbx*2+0x4d8c5b70],cs
   14002b4e0:	rex.WR
   14002b4e1:	rex.W
   14002b4e2:	rex.WRX mov WORD PTR [rsp+r9*4-0x73737374],cs
   14002b4ea:	mov    WORD PTR [rsp+rcx*4+0x7bc2b8c],cs
   14002b4f1:	ja     0x14002b51f
   14002b4f3:	sub    al,0x2c
   14002b4f5:	sub    al,0x2c
   14002b4f7:	sub    al,0x2c
   14002b4f9:	sub    al,0x2c
   14002b4fb:	pushf  
   14002b4fc:	and    BYTE PTR [rip+0xffffffff904c51bf],bl        # 0xd04f06c1
   14002b502:	sub    al,0x2c
   14002b504:	sub    al,0x2c
   14002b506:	sub    al,0x2c
   14002b508:	sub    al,0x2c
   14002b50a:	sub    al,0x2c
   14002b50c:	sub    al,0x2c
   14002b50e:	ja     0x14002b517
   14002b510:	cmp    al,0x77
   14002b512:	sub    al,0x2c
   14002b514:	sub    al,0x2c
   14002b516:	sub    al,0x2c
   14002b518:	sub    al,0x2c
   14002b51a:	sub    al,0x1a
   14002b51c:	and    ecx,ebp
   14002b51e:	and    DWORD PTR [rax+0x1d],ebx
   14002b521:	jge    0x14002b54a
   14002b523:	sub    al,0x2c
   14002b525:	sub    al,0x2c
   14002b527:	sub    al,0x2c
   14002b529:	sub    al,0x2c
   14002b52b:	sub    al,0x2c
   14002b52d:	sub    al,0x77
   14002b52f:	cmp    al,0xb2
   14002b531:	push   0x2c
   14002b533:	sub    al,0x2c
   14002b535:	sub    al,0x2c
   14002b537:	sub    al,0x2c
   14002b539:	sub    al,0x2c
   14002b53b:	sub    al,0x27
   14002b53d:	outs   dx,BYTE PTR ds:[rsi]
   14002b53e:	test   eax,0x6e6e3329
   14002b543:	jle    0x14002b571
   14002b545:	sub    al,0x2c
   14002b547:	sub    al,0x2c
   14002b549:	sub    al,0x2c
   14002b54b:	sub    al,0x2c
   14002b54d:	sub    al,0x6a
   14002b54f:	mov    dl,0x8e
   14002b551:	push   0x2c
   14002b553:	adc    DWORD PTR [rcx],edx
   14002b555:	adc    DWORD PTR [rcx],edx
   14002b557:	adc    DWORD PTR [rcx],edx
   14002b559:	adc    DWORD PTR [rcx],edx
   14002b55b:	adc    DWORD PTR [rcx],edx
   14002b55d:	scas   eax,DWORD PTR es:[rdi]
   14002b55e:	and    eax,DWORD PTR [rsi+0x21]
   14002b561:	jg     0x14002b5c5
   14002b563:	xchg   ecx,eax
   14002b564:	xchg   edi,eax
   14002b565:	scas   eax,DWORD PTR es:[rdi]
   14002b566:	adc    DWORD PTR [rcx],edx
   14002b568:	adc    DWORD PTR [rcx],edx
   14002b56a:	adc    DWORD PTR [rcx],edx
   14002b56c:	adc    DWORD PTR [rdx+rbp*2],ebp
   14002b56f:	mov    ss,WORD PTR [rax]
   14002b571:	push   0xffffffffffffffa2
   14002b573:	movabs ds:0xa2a2a2a2a2a2a2a2,al
   14002b57c:	movabs ds:0x758ba271b7c38da2,al
   14002b585:	adc    QWORD PTR [r10-0x5d5d5d5e],rsp
   14002b58c:	movabs ds:0xa2a2a20653106aa2,al
   14002b595:	movabs ds:0xa2a2a2a2a2a2a2a2,al
   14002b59e:	movabs ds:0xa28fa2a2657d4711,al
   14002b5a7:	movabs ds:0x5306a2a2a2a2a2a2,al
   14002b5b0:	mov    DWORD PTR [rsi],eax
   14002b5b2:	movabs ds:0x5454545454545454,al
   14002b5bb:	push   rsp
   14002b5bc:	push   rsp
   14002b5bd:	push   rsp
   14002b5be:	push   rsp
   14002b5bf:	push   rsp
   14002b5c0:	adc    DWORD PTR [rax+0x71],edi
   14002b5c3:	(bad)  
   14002b5c4:	push   rsp
   14002b5c5:	push   rsp
   14002b5c6:	push   rsp
   14002b5c7:	push   rsp
   14002b5c8:	push   rsp
   14002b5c9:	push   rsp
   14002b5ca:	push   rsp
   14002b5cb:	push   rsp
   14002b5cc:	push   rsp
   14002b5cd:	movabs ds:0x5454541102018906,al
   14002b5d6:	push   rsp
   14002b5d7:	push   rsp
   14002b5d8:	push   rsp
   14002b5d9:	push   rsp
   14002b5da:	push   rsp
   14002b5db:	push   rsp
   14002b5dc:	push   rsp
   14002b5dd:	push   rsp
   14002b5de:	push   rsp
   14002b5df:	push   rsp
   14002b5e0:	push   rsp
   14002b5e1:	(bad)  
   14002b5e2:	fwait
   14002b5e3:	pop    rsi
   14002b5e4:	push   rsp
   14002b5e5:	push   rsp
   14002b5e6:	push   rsp
   14002b5e7:	push   rsp
   14002b5e8:	push   rsp
   14002b5e9:	push   rsp
   14002b5ea:	push   rsp
   14002b5eb:	push   rsp
   14002b5ec:	push   rsp
   14002b5ed:	adc    DWORD PTR [rdx],eax
   14002b5ef:	add    DWORD PTR [rcx],eax
   14002b5f1:	adc    al,0x8c
   14002b5f3:	push   rsp
   14002b5f4:	push   rsp
   14002b5f5:	push   rsp
   14002b5f6:	push   rsp
   14002b5f7:	push   rsp
   14002b5f8:	push   rsp
   14002b5f9:	push   rsp
   14002b5fa:	push   rsp
   14002b5fb:	push   rsp
   14002b5fc:	push   rsp
   14002b5fd:	push   rsp
   14002b5fe:	push   rsp
   14002b5ff:	push   rsp
   14002b600:	push   rsp
   14002b601:	push   rsp
   14002b602:	jnp    0x14002b66d
   14002b604:	push   rsp
   14002b605:	push   rsp
   14002b606:	push   rsp
   14002b607:	push   rsp
   14002b608:	push   rsp
   14002b609:	push   rsp
   14002b60a:	push   rsp
   14002b60b:	push   rsp
   14002b60c:	push   rsp
   14002b60d:	mov    WORD PTR [rcx+rax*1],ss
   14002b610:	(bad)  
   14002b611:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002b612:	stos   DWORD PTR es:[rdi],eax
   14002b613:	sub    al,0xa2
   14002b615:	push   rsp
   14002b616:	push   rsp
   14002b617:	push   rsp
   14002b618:	push   rsp
   14002b619:	push   rsp
   14002b61a:	push   rsp
   14002b61b:	push   rsp
   14002b61c:	push   rsp
   14002b61d:	push   rsp
   14002b61e:	push   rsp
   14002b61f:	push   rsp
   14002b620:	push   rsp
   14002b621:	push   rsp
   14002b622:	push   rsp
   14002b623:	push   rsp
   14002b624:	push   rsp
   14002b625:	push   rsp
   14002b626:	push   rsp
   14002b627:	push   rsp
   14002b628:	push   rsp
   14002b629:	push   rsp
   14002b62a:	push   rsp
   14002b62b:	movabs ds:0x996dcececea7ab2c,al
   14002b634:	mov    BYTE PTR [rsp+rbp*1+0x2c2c2c2c],cl
   14002b63b:	sub    al,0x2c
   14002b63d:	sub    al,0x2c
   14002b63f:	sub    al,0x2c
   14002b641:	sub    al,0x2c
   14002b643:	sub    al,0x2c
   14002b645:	sub    al,0x2c
   14002b647:	sub    al,0x2c
   14002b649:	sub    al,0x8c
   14002b64b:	mov    BYTE PTR [rcx-0x31313193],bl
   14002b651:	(bad)  
   14002b652:	(bad)  
   14002b653:	xchg   esp,eax
   14002b654:	xchg   esp,eax
   14002b655:	xchg   esp,eax
   14002b656:	xchg   esp,eax
   14002b657:	xchg   esp,eax
   14002b658:	xchg   esp,eax
   14002b659:	xchg   esp,eax
   14002b65a:	xchg   esp,eax
   14002b65b:	xchg   esp,eax
   14002b65c:	xchg   esp,eax
   14002b65d:	xchg   esp,eax
   14002b65e:	xchg   esp,eax
   14002b65f:	xchg   esp,eax
   14002b660:	xchg   esp,eax
   14002b661:	xchg   esp,eax
   14002b662:	xchg   esp,eax
   14002b663:	xchg   esp,eax
   14002b664:	xchg   esp,eax
   14002b665:	xchg   esp,eax
   14002b666:	xchg   esp,eax
   14002b667:	xchg   esp,eax
   14002b668:	xchg   esp,eax
   14002b669:	xchg   esp,eax
   14002b66a:	xchg   esp,eax
   14002b66b:	xchg   esp,eax
   14002b66c:	xchg   esp,eax
   14002b66d:	(bad)  
   14002b66e:	(bad)  
   14002b66f:	(bad)  
   14002b670:	loopne 0x14002b672
   14002b672:	add    BYTE PTR [rdi],al
   14002b674:	rol    BYTE PTR [rax],0x0
   14002b677:	add    eax,DWORD PTR [rax+0x10000]
	...
   14002b6e1:	add    BYTE PTR [rax],al
   14002b6e3:	add    BYTE PTR [rax-0x3fff0000],al
   14002b6e9:	add    BYTE PTR [rax],al
   14002b6eb:	add    esp,eax
   14002b6ed:	add    BYTE PTR [rax],al
   14002b6ef:	(bad)  
   14002b6f0:	sub    BYTE PTR [rax],al
   14002b6f2:	add    BYTE PTR [rax],al
   14002b6f4:	sbb    BYTE PTR [rax],al
   14002b6f6:	add    BYTE PTR [rax],al
   14002b6f8:	xor    BYTE PTR [rax],al
   14002b6fa:	add    BYTE PTR [rax],al
   14002b6fc:	add    DWORD PTR [rax],eax
   14002b6fe:	or     BYTE PTR [rax],al
	...
   14002b710:	add    BYTE PTR [rcx],al
   14002b712:	add    BYTE PTR [rax],al
   14002b714:	add    BYTE PTR [rax],al
   14002b716:	add    BYTE PTR [rax],al
   14002b718:	jb     0x14002b774
   14002b71a:	cmp    al,BYTE PTR [rax]
   14002b71c:	ret    0x96ae
   14002b71f:	add    BYTE PTR [rdx-0x25ff6556],bh
   14002b725:	fcmovu st,st(2)
   14002b727:	add    BYTE PTR [rdx-0x7dff997a],bl
   14002b72d:	scas   al,BYTE PTR es:[rdi]
   14002b72e:	loop   0x14002b730
   14002b730:	scas   al,BYTE PTR es:[rdi]
   14002b731:	(bad)  
   14002b732:	jle    0x14002b734
   14002b734:	xchg   BYTE PTR [rdx+0x56],dh
   14002b737:	add    dl,al
   14002b739:	mov    edx,0x7e1600ae
   14002b73e:	(bad)  
   14002b73f:	add    dh,ch
   14002b741:	out    dx,al
   14002b742:	out    dx,al
   14002b743:	add    dh,cl
   14002b745:	retf   0xc6
   14002b748:	pop    rdx
   14002b749:	sahf   
   14002b74a:	(bad)  
   14002b74b:	add    BYTE PTR [rsi-0x45ff896e],ah
   14002b751:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002b752:	mov    es,WORD PTR [rax]
   14002b754:	xchg   esi,eax
   14002b755:	jle    0x14002b7b5
   14002b757:	add    BYTE PTR [rsi-0x69ff594e],bh
   14002b75d:	mov    edx,0xe6e600e2
   14002b762:	out    0x0,al
   14002b764:	scas   al,BYTE PTR es:[rdi]
   14002b765:	sahf   
   14002b766:	mov    al,BYTE PTR [rax]
   14002b768:	cs mov ch,dl
   14002b76b:	add    BYTE PTR [rdx-0x69ff897a],dl
   14002b771:	jle    0x14002b7d9
   14002b773:	add    BYTE PTR [rdx+0x7a00eebe],dl
   14002b779:	data16 rex.RX add dl,r8b
   14002b77d:	mov    edx,0xdac600aa
   14002b782:	repnz add BYTE PTR [rsi-0x35ff9176],bl
   14002b789:	mov    dl,0x0
   14002b78c:	cli    
   14002b78d:	cli    
   14002b78e:	cli    
   14002b78f:	add    BYTE PTR [rdx-0x41ffa17e],bl
   14002b795:	mov    dh,0xaa
   14002b797:	add    BYTE PTR [rsi],bh
   14002b799:	xchg   edx,eax
   14002b79a:	out    dx,al
   14002b79b:	add    BYTE PTR [rdx-0x1dff6152],bh
   14002b7a1:	loop   0x14002b781
   14002b7a3:	add    BYTE PTR [rsi-0x6dff7966],ch
   14002b7a9:	jp     0x14002b805
   14002b7ab:	add    BYTE PTR [rsi-0x5a],ch
   14002b7ae:	loop   0x14002b7b0
   14002b7b0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002b7b1:	xchg   esi,eax
   14002b7b2:	jle    0x14002b7b4
   14002b7b4:	mov    ?,WORD PTR [rdx-0x5d49ff16]
   14002b7ba:	mov    al,BYTE PTR [rax]
   14002b7bc:	ds mov fs,esi
   14002b7bf:	add    BYTE PTR [rsi+0x62],dh
   14002b7c2:	rex.X add BYTE PTR [rdx-0x79ff957a],bl
   14002b7c9:	mov    dh,0xea
   14002b7cb:	add    BYTE PTR [rdx],ah
   14002b7cd:	(bad)  
   14002b7ce:	(bad)  
   14002b7cf:	add    dh,dh
   14002b7d1:	div    dh
   14002b7d3:	add    dh,dl
   14002b7d5:	(bad)  
   14002b7d6:	(bad)  
   14002b7d7:	add    BYTE PTR [rsi-0x41ff856e],ah
   14002b7dd:	stos   BYTE PTR es:[rdi],al
   14002b7de:	xchg   edx,eax
   14002b7df:	add    BYTE PTR [rsi-0x15ff594a],bh
   14002b7e5:	(bad)  
   14002b7e6:	(bad)  
   14002b7e7:	add    BYTE PTR [rsi-0x7dff113e],dl
   14002b7ed:	outs   dx,BYTE PTR ds:[rsi]
   14002b7ee:	rex.WRX add dl,r10b
   14002b7f1:	retf   0xbe
   14002b7f4:	(bad)  
   14002b7f5:	(bad)  
   14002b7f6:	(bad)  
   14002b7f7:	add    BYTE PTR [rsi+0x7200869e],ch
   14002b7fd:	stos   BYTE PTR es:[rdi],al
   14002b7fe:	out    0x0,al
   14002b800:	jb     0x14002b860
   14002b802:	ds add dl,al
   14002b805:	mov    dl,0x9a
   14002b807:	add    dh,bl
   14002b809:	(bad)  
   14002b80b:	add    BYTE PTR [rdx-0x39ffa58a],cl
   14002b811:	ret    0xba
   14002b814:	(bad)  
   14002b815:	jle    0x14002b801
   14002b817:	add    dl,dh
   14002b819:	repnz repnz add dl,dl
   14002b81d:	(bad)  
   14002b81e:	mov    BYTE PTR [rax],0xb2
   14002b821:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002b822:	xchg   edx,eax
   14002b823:	add    BYTE PTR [rdx-0x69ff9d82],bl
   14002b829:	mov    esi,0x9eb200e6
   14002b82e:	mov    al,BYTE PTR [rax]
   14002b830:	ss mov ch,dl
   14002b833:	add    BYTE PTR [rdx-0x65ff8972],ah
   14002b839:	(bad)  
   14002b83a:	data16 add BYTE PTR [rdx+0x7e00f2be],dl
   14002b841:	push   0x4a
   14002b843:	add    BYTE PTR [rdx-0x1ff9176],ah
   14002b849:	(bad)  
   14002b84a:	inc    BYTE PTR [rax]
   14002b84c:	ret    0xaab6
   14002b84f:	add    dh,al
   14002b851:	mov    dl,0x9e
   14002b853:	add    dl,ah
   14002b855:	loop   0x14002b839
   14002b857:	add    BYTE PTR [rsi-0x65ffa186],cl
   14002b85d:	mov    esi,0xa2b200ea
   14002b862:	mov    es,WORD PTR [rax]
   14002b864:	cmp    cl,BYTE PTR [rsi-0x7961ff16]
   14002b86a:	push   0x0
   14002b86c:	xchg   BYTE PTR [rsi-0x6d55ff12],dh
   14002b872:	jp     0x14002b874
   14002b874:	retf   0xa2b6
   14002b877:	add    dh,ch
   14002b879:	(bad)  
   14002b87a:	(bad)  
   14002b87b:	add    dh,cl
   14002b87d:	retf   0xc2
   14002b880:	sahf   
   14002b881:	(bad)  
   14002b882:	(bad)  
   14002b883:	add    BYTE PTR [rdx+0x7600869e],dh
   14002b889:	stos   BYTE PTR es:[rdi],al
   14002b88a:	out    0x0,al
	...
   14002bb18:	pop    rbp
   14002bb19:	pop    rbp
   14002bb1a:	pop    rbp
   14002bb1b:	pop    rbp
   14002bb1c:	pop    rbp
   14002bb1d:	pop    rbp
   14002bb1e:	pop    rbp
   14002bb1f:	pop    rbp
   14002bb20:	pop    rbp
   14002bb21:	pop    rbp
   14002bb22:	pop    rbp
   14002bb23:	pop    rbp
   14002bb24:	pop    rbp
   14002bb25:	pop    rbp
   14002bb26:	pop    rbp
   14002bb27:	pop    rbp
   14002bb28:	pop    rbp
   14002bb29:	pop    rbp
   14002bb2a:	pop    rbp
   14002bb2b:	pop    rbp
   14002bb2c:	pop    rbp
   14002bb2d:	pop    rbp
   14002bb2e:	pop    rbp
   14002bb2f:	pop    rbp
   14002bb30:	pop    rbp
	...
   14002bb45:	add    BYTE PTR [rax],al
   14002bb47:	pop    rbp
   14002bb48:	cmp    dl,BYTE PTR [rip+0x1212123e]        # 0x15214cd8c
   14002bb4e:	adc    dl,BYTE PTR [rdx]
   14002bb50:	adc    dl,BYTE PTR [rdx]
   14002bb52:	adc    dl,BYTE PTR [rdx]
   14002bb54:	adc    dl,BYTE PTR [rdx]
   14002bb56:	adc    dl,BYTE PTR [rdx]
   14002bb58:	adc    dl,BYTE PTR [rdx]
   14002bb5a:	adc    dl,BYTE PTR [rdx]
   14002bb5c:	adc    bh,BYTE PTR [rsi]
   14002bb5e:	adc    eax,0x331c2a3a
   14002bb63:	or     cl,BYTE PTR [rdx]
   14002bb65:	or     cl,BYTE PTR [rdx]
   14002bb67:	or     cl,BYTE PTR [rdx]
   14002bb69:	or     cl,BYTE PTR [rdx]
   14002bb6b:	or     cl,BYTE PTR [rdx]
   14002bb6d:	or     cl,BYTE PTR [rdx]
   14002bb6f:	or     cl,BYTE PTR [rdx]
   14002bb71:	or     cl,BYTE PTR [rdx]
   14002bb73:	or     cl,BYTE PTR [rdx]
   14002bb75:	xor    ebx,DWORD PTR [rdx+rbp*1]
   14002bb78:	sbb    BYTE PTR [rbx],al
   14002bb7a:	xor    esi,DWORD PTR [rbx]
   14002bb7c:	xor    edx,DWORD PTR [rdx]
   14002bb7e:	adc    dl,BYTE PTR [rdx]
   14002bb80:	adc    dl,BYTE PTR [rdx]
   14002bb82:	adc    dl,BYTE PTR [rdx]
   14002bb84:	adc    dl,BYTE PTR [rdx]
   14002bb86:	adc    dl,BYTE PTR [rdx]
   14002bb88:	adc    dh,BYTE PTR [rbx]
   14002bb8a:	xor    esi,DWORD PTR [rbx]
   14002bb8c:	xor    esi,DWORD PTR [rbx]
   14002bb8e:	add    ebx,DWORD PTR [rax]
   14002bb90:	rex.WX add rdx,QWORD PTR [rdx]
   14002bb93:	adc    cl,BYTE PTR [rdi+0x4d]
   14002bb96:	xor    BYTE PTR [rdi],dh
   14002bb98:	(bad)  
   14002bb99:	(bad)  
   14002bb9a:	(bad)  
   14002bb9b:	(bad)  
   14002bb9c:	(bad)  
   14002bb9d:	(bad)  
   14002bb9e:	(bad)  
   14002bb9f:	xor    BYTE PTR [rbp+0x4f],cl
   14002bba2:	adc    dl,BYTE PTR [rdx]
   14002bba4:	adc    dl,BYTE PTR [rdx]
   14002bba6:	add    ecx,DWORD PTR [rdx+0x35]
   14002bba9:	(bad)  
   14002bbaa:	adc    bh,BYTE PTR [rax+rdx*1]
   14002bbad:	push   rsp
   14002bbae:	and    ebx,DWORD PTR [rdi]
   14002bbb0:	(bad)  
   14002bbb1:	(bad)  
   14002bbb2:	(bad)  
   14002bbb3:	(bad)  
   14002bbb4:	(bad)  
   14002bbb5:	add    ebx,DWORD PTR [rdi]
   14002bbb7:	and    edx,DWORD PTR [rax+rdx*1+0x3c]
   14002bbbb:	adc    dl,BYTE PTR [rdx]
   14002bbbd:	adc    ch,BYTE PTR [rdi]
   14002bbbf:	xor    eax,0x4f122f07
   14002bbc4:	add    eax,DWORD PTR [rbx]
   14002bbc6:	add    ebp,DWORD PTR [rdi]
   14002bbc8:	es (bad) 
   14002bbca:	and    al,0x24
   14002bbcc:	rex.W (bad) 
   14002bbce:	(bad)  
   14002bbcf:	(bad)  
   14002bbd0:	add    eax,DWORD PTR [rbx]
   14002bbd2:	rex.WRXB adc r10b,BYTE PTR [r10]
   14002bbd5:	adc    ch,BYTE PTR [rdi]
   14002bbd7:	(bad)  
   14002bbd8:	cmp    eax,0x4f121203
   14002bbdd:	rex.WRXB cmp al,0x3
   14002bbe0:	push   rdx
   14002bbe1:	(bad)  
   14002bbe2:	(bad)  
   14002bbe3:	(bad)  
   14002bbe4:	sbb    al,0xb
   14002bbe6:	and    edx,DWORD PTR [rax]
   14002bbe8:	add    esp,DWORD PTR [rdx]
   14002bbea:	adc    dl,BYTE PTR [rdx]
   14002bbec:	adc    dl,BYTE PTR [rdx]
   14002bbee:	add    edi,DWORD PTR [rip+0x12120350]        # 0x15214bf44
   14002bbf4:	adc    dl,BYTE PTR [rdx]
   14002bbf6:	cmp    al,0xd
   14002bbf8:	add    al,0x24
   14002bbfa:	(bad)  
   14002bbfb:	(bad)  
   14002bbfc:	and    al,0x4
   14002bbfe:	add    ecx,DWORD PTR [rdi]
   14002bc00:	and    esp,DWORD PTR [rdx]
   14002bc02:	adc    dl,BYTE PTR [rdx]
   14002bc04:	adc    dl,BYTE PTR [rdx]
   14002bc06:	add    edx,DWORD PTR [rax+0x16]
   14002bc09:	add    esi,DWORD PTR [rbx]
   14002bc0b:	xor    esi,DWORD PTR [rbx]
   14002bc0d:	rex.WRXB and r8b,BYTE PTR [r10+0x8]
   14002bc11:	(bad)  
   14002bc12:	(bad)  
   14002bc13:	add    eax,DWORD PTR [rbx]
   14002bc15:	or     eax,DWORD PTR [rcx+0x3]
   14002bc18:	movlps QWORD PTR [rdi+0x12],xmm1
   14002bc1c:	xor    esi,DWORD PTR [rbx]
   14002bc1e:	add    edx,DWORD PTR [rsi]
   14002bc20:	sub    edi,DWORD PTR [rdx+rcx*1]
   14002bc23:	or     dh,BYTE PTR [rbx]
   14002bc25:	adc    cl,BYTE PTR [rbx+0xf]
   14002bc28:	andps  xmm2,XMMWORD PTR [rsp+rdx*2+0xf]
   14002bc2d:	push   rsp
   14002bc2e:	add    bh,BYTE PTR [rdi+rcx*1]
   14002bc31:	adc    edx,DWORD PTR [rdx]
   14002bc33:	xor    ecx,DWORD PTR [rdx]
   14002bc35:	or     bh,BYTE PTR [rbx+rbp*1]
   14002bc38:	sbb    esp,DWORD PTR [rdx]
   14002bc3a:	or     cl,BYTE PTR [rdx]
   14002bc3c:	or     dl,BYTE PTR [rdx]
   14002bc3e:	adc    ah,BYTE PTR [rcx]
   14002bc40:	sbb    DWORD PTR [rcx+rdx*1],edi
   14002bc43:	add    eax,0xd4f4f25
   14002bc48:	push   rdx
   14002bc49:	adc    dh,BYTE PTR [rbx]
   14002bc4b:	or     cl,BYTE PTR [rdx]
   14002bc4d:	or     ah,BYTE PTR [rdx]
   14002bc4f:	sbb    eax,DWORD PTR [rdi+0x4f]
   14002bc52:	rex
   14002bc53:	or     cl,BYTE PTR [rdx]
   14002bc56:	xor    edx,DWORD PTR [rdx]
   14002bc58:	adc    bh,BYTE PTR [rcx]
   14002bc5a:	rex.RX sub DWORD PTR [rcx],r15d
   14002bc5d:	adc    dl,BYTE PTR [rdx]
   14002bc5f:	adc    dl,BYTE PTR [rdx]
   14002bc61:	xor    ecx,DWORD PTR [rdx]
   14002bc63:	or     al,BYTE PTR [rax+0x40]
   14002bc66:	rex.WRXB
   14002bc67:	rex.RXB xor BYTE PTR [r15+0x40],r9b
   14002bc6b:	rex
   14002bc6c:	rex
   14002bc6d:	or     cl,BYTE PTR [rdx]
   14002bc70:	adc    dl,BYTE PTR [rbx+0x5c]
   14002bc73:	or     DWORD PTR [rdx],edx
   14002bc75:	adc    cl,BYTE PTR [rdx]
   14002bc77:	or     cl,BYTE PTR [rdx]
   14002bc79:	or     al,BYTE PTR [rax+0x40]
   14002bc7c:	rex
   14002bc7d:	rex
   14002bc7e:	rex.WRXB xor BYTE PTR [r14],r8b
   14002bc81:	adc    ch,BYTE PTR [rsi]
   14002bc83:	cs cs cs rex xor edi,DWORD PTR cs:[rdi]
   14002bc8a:	or     al,0x44
   14002bc8c:	(bad)  
   14002bc8d:	xor    ecx,DWORD PTR [rdx]
   14002bc8f:	rex
   14002bc90:	cs cs cs cs cs adc al,BYTE PTR cs:[rsi]
   14002bc98:	and    edx,DWORD PTR [rdx]
   14002bc9a:	cs cs cs cs cs or dl,BYTE PTR cs:[rcx+0x2d]
   14002bca3:	adc    ch,BYTE PTR [rsp+rdx*1]
   14002bca6:	xor    al,0x40
   14002bca8:	cs cs cs cs cs adc ah,BYTE PTR cs:[rbx]
   14002bcb0:	sub    BYTE PTR [rbx],dh
   14002bcb2:	sbb    eax,0x1d1d1d1d
   14002bcb7:	sbb    eax,0x14270a2e
   14002bcbc:	xor    ebp,DWORD PTR [rax+rax*2]
   14002bcbf:	cs sbb eax,0x1d1d1d1d
   14002bcc5:	sbb    eax,0x330e2833
   14002bcca:	sbb    eax,0x1d1d1d1d
   14002bccf:	sbb    eax,0x170a2e1d
   14002bcd4:	and    BYTE PTR [rax+0x2e],al
   14002bcd7:	sbb    eax,0x1d1d1d1d
   14002bcdc:	sbb    eax,0x310e331d
   14002bce1:	or     bl,BYTE PTR [rip+0x1d1d1d1d]        # 0x15d1fda04
   14002bce7:	sbb    eax,0x1a2e1d1d
   14002bcec:	(bad)  
   14002bced:	cs sbb eax,0x1d1d1d1d
   14002bcf3:	sbb    eax,0x310a1d1d
   14002bcf8:	add    DWORD PTR [rdx],ecx
   14002bcfa:	sbb    eax,0x4c4c4c4c
   14002bcff:	rex.WR
   14002bd00:	rex.WR
   14002bd01:	rex.WR sbb rax,0x1d1d2e2e
   14002bd07:	rex.WR
   14002bd08:	rex.WR
   14002bd09:	rex.WR
   14002bd0a:	rex.WR
   14002bd0b:	rex.WR
   14002bd0c:	rex.WR sbb rax,0x223b010a
   14002bd12:	sbb    eax,0x4c4c4c4c
   14002bd17:	rex.WR
   14002bd18:	rex.WR
   14002bd19:	rex.WR
   14002bd1a:	rex.WR
   14002bd1b:	rex.WR sbb rax,0x4c4c4c4c
   14002bd21:	rex.WR
   14002bd22:	rex.WR
   14002bd23:	rex.WR
   14002bd24:	rex.WR sbb rax,0x364e3b22
   14002bd2a:	pop    rax
   14002bd2b:	sbb    eax,0x1d1d1d1d
   14002bd30:	sbb    eax,0x1d1d1d1d
   14002bd35:	sbb    eax,0x1d1d1d1d
   14002bd3a:	sbb    eax,0x36581d1d
   14002bd3f:	rex.WRX pop rbp
   14002bd41:	push   rdi
   14002bd42:	push   rdi
   14002bd43:	push   rdi
   14002bd44:	push   rdi
   14002bd45:	push   rdi
   14002bd46:	push   rdi
   14002bd47:	push   rdi
   14002bd48:	push   rdi
   14002bd49:	push   rdi
   14002bd4a:	push   rdi
   14002bd4b:	push   rdi
   14002bd4c:	push   rdi
   14002bd4d:	push   rdi
   14002bd4e:	push   rdi
   14002bd4f:	push   rdi
   14002bd50:	push   rdi
   14002bd51:	push   rdi
   14002bd52:	push   rdi
   14002bd53:	push   rdi
   14002bd54:	push   rdi
   14002bd55:	push   rdi
   14002bd56:	push   rdi
   14002bd57:	pop    rbp
   14002bd58:	(bad)  
   14002bd59:	(bad)  
   14002bd5a:	(bad)  
   14002bd5b:	inc    DWORD PTR [rax+0xff0100]
   14002bd61:	add    BYTE PTR [rax],al
   14002bd63:	add    BYTE PTR [rax],0x0
	...
   14002bdb2:	add    BYTE PTR [rax],al
   14002bdb4:	add    BYTE PTR [rax],0x1
   14002bdb7:	add    BYTE PTR [rax],ch
   14002bdb9:	add    BYTE PTR [rax],al
   14002bdbb:	add    BYTE PTR [rax],dl
   14002bdbd:	add    BYTE PTR [rax],al
   14002bdbf:	add    BYTE PTR [rax],ah
   14002bdc1:	add    BYTE PTR [rax],al
   14002bdc3:	add    BYTE PTR [rcx],al
   14002bdc5:	add    BYTE PTR [rax],cl
	...
   14002bdd7:	add    BYTE PTR [rax],al
   14002bdd9:	add    DWORD PTR [rax],eax
   14002bddb:	add    BYTE PTR [rax],al
   14002bddd:	add    BYTE PTR [rax],al
   14002bddf:	add    BYTE PTR [rdx+0x5e],dh
   14002bde2:	ds add dh,al
   14002bde5:	mov    dl,0x9a
   14002bde7:	add    BYTE PTR [rsi],cl
   14002bde9:	jbe    0x14002bdd5
   14002bdeb:	add    dh,bl
   14002bded:	fcmovbe st,st(6)
   14002bdef:	add    BYTE PTR [rsi-0x6dff9172],ah
   14002bdf5:	jp     0x14002be51
   14002bdf7:	add    BYTE PTR [rdx-0x11ff1d4e],al
   14002bdfd:	out    dx,al
   14002bdfe:	out    dx,al
   14002bdff:	add    BYTE PTR [rsi-0x45ff795e],dh
   14002be05:	scas   al,BYTE PTR es:[rdi]
   14002be06:	(bad)  
   14002be07:	add    dh,al
   14002be09:	(bad)  
   14002be0b:	add    BYTE PTR [rsi+0x26006682],dl
   14002be11:	xchg   dl,ch
   14002be13:	add    BYTE PTR [rsi-0x29ff7d66],ch
   14002be19:	(bad)  
   14002be1a:	(bad)  
   14002be1b:	add    BYTE PTR [rsi-0x7dff554e],dh
   14002be21:	outs   dx,BYTE PTR ds:[rsi]
   14002be22:	rex.WRX add dl,r12b
   14002be25:	loop   0x14002be09
   14002be27:	add    BYTE PTR [rdx-0x5ff1546],cl
   14002be2d:	cli    
   14002be2e:	cli    
   14002be2f:	add    BYTE PTR [rdx],bl
   14002be31:	jle    0x14002be1d
   14002be33:	add    dh,bl
   14002be35:	(bad)  
   14002be37:	add    BYTE PTR [rdx-0x69ff856a],ch
   14002be3d:	jle    0x14002be9d
   14002be3f:	add    BYTE PTR [rsi-0x65ff6952],bh
   14002be45:	xchg   BYTE PTR [rsi+0x0],ch
   14002be48:	(bad)  
   14002be49:	mov    esi,0x667e00b2
   14002be4e:	rex.WX add dl,bl
   14002be51:	fcmovu st,st(2)
   14002be53:	add    BYTE PTR [rdx-0x71ff8972],ah
   14002be59:	jp     0x14002beb9
   14002be5b:	add    dh,dh
   14002be5d:	div    dh
   14002be5f:	add    BYTE PTR [rdx-0x19ff6d5a],bh
   14002be65:	out    0xe6,al
   14002be67:	add    BYTE PTR [rdx+0x3a006686],bl
   14002be6d:	mov    gs,esi
   14002be6f:	add    BYTE PTR [rsi-0x69ff7562],ch
   14002be75:	mov    esi,0x627600ea
   14002be7a:	rex.X add dl,cl
   14002be7d:	mov    dh,0x9e
   14002be7f:	add    BYTE PTR [rdx],dl
   14002be81:	jp     0x14002be6d
   14002be83:	add    BYTE PTR [rsi-0x7dffa586],dl
   14002be89:	mov    dh,0xea
   14002be8b:	add    dl,dh
   14002be8d:	repnz repnz add BYTE PTR [rsi+0x32008aa2],dh
   14002be95:	mov    ch,dl
   14002be97:	add    BYTE PTR [rsi-0x45ff7962],ch
   14002be9d:	shr    dl,cl
   14002be9f:	add    dh,al
   14002bea1:	mov    edx,0x728600aa
   14002bea6:	push   rsi
   14002bea7:	add    BYTE PTR [rsi-0x1ff1146],cl
   14002bead:	(bad)  
   14002beae:	inc    BYTE PTR [rax]
   14002beb0:	es (bad) 
   14002beb2:	out    0x0,al
   14002beb4:	retf   0xb6c2
   14002beb7:	add    dh,bl
   14002beb9:	fcmovu st,st(2)
   14002bebb:	add    BYTE PTR [rsi-0x15ff896e],ah
   14002bec1:	(bad)  
   14002bec2:	(bad)  
   14002bec3:	add    BYTE PTR [rsi+0x6a86],bl
	...
   14002c1dd:	add    BYTE PTR [rax],al
   14002c1df:	add    BYTE PTR [rdx],bh
	...
   14002c1ed:	add    BYTE PTR [rax],al
   14002c1ef:	cmp    ah,BYTE PTR [rsi]
   14002c1f1:	mov    rcx,db4
   14002c1f4:	and    DWORD PTR [rcx],esp
   14002c1f6:	and    DWORD PTR [rcx],esp
   14002c1f8:	and    DWORD PTR [rcx],esp
   14002c1fa:	and    DWORD PTR [rcx],esp
   14002c1fc:	and    DWORD PTR [rax],edi
   14002c1fe:	(bad)  
   14002c200:	sbb    edx,DWORD PTR [rip+0x4083021]        # 0x1440af227
   14002c206:	add    al,0x4
   14002c208:	add    al,0x4
   14002c20a:	add    al,0x4
   14002c20c:	cmp    BYTE PTR [rdi],al
   14002c20e:	adc    eax,0x211c101b
   14002c213:	adc    eax,0x1c1c1c15
   14002c218:	sbb    al,0x1c
   14002c21a:	sbb    al,0x1c
   14002c21c:	and    DWORD PTR [rcx],esp
   14002c21e:	sbb    al,0x10
   14002c220:	xor    DWORD PTR [rsi],ecx
   14002c222:	adc    DWORD PTR [rcx],edx
   14002c224:	adc    DWORD PTR [rdx],esp
   14002c226:	add    eax,0x11220505
   14002c22b:	(bad)  
   14002c22c:	adc    DWORD PTR cs:[rsi],ecx
   14002c22f:	xor    DWORD PTR [rsi],ebx
   14002c231:	sbb    al,0x21
   14002c233:	adc    DWORD PTR [rcx],edx
   14002c235:	xor    eax,0x1a1a3535
   14002c23a:	add    ecx,DWORD PTR [rsi]
   14002c23c:	(bad)  
   14002c23d:	and    al,0xe
   14002c23f:	(bad)  
   14002c240:	or     edx,DWORD PTR [rip+0x17052138]        # 0x15707e37e
   14002c246:	cmp    DWORD PTR [rcx],ebp
   14002c248:	add    eax,0x5210939
   14002c24d:	and    al,0xe
   14002c24f:	or     ebx,DWORD PTR [rcx]
   14002c251:	adc    eax,0x15153807
   14002c256:	adc    eax,0x11150634
   14002c25b:	(bad)  
   14002c25c:	and    al,0x11
   14002c25e:	adc    eax,0x7111d19
   14002c263:	(bad)  
   14002c264:	(bad)  
   14002c265:	(bad)  
   14002c266:	sub    eax,0x7070211
   14002c26b:	adc    DWORD PTR [rcx],esp
   14002c26d:	(bad)  
   14002c26e:	adc    DWORD PTR [rip+0x2b2b1116],ebx        # 0x16b2dd38a
   14002c274:	sub    eax,DWORD PTR [rdi]
   14002c276:	sub    BYTE PTR [rdi],al
   14002c278:	sub    BYTE PTR [rax],ch
   14002c27a:	(bad)  
   14002c27b:	(bad)  
   14002c27c:	sub    ebp,DWORD PTR [rbx]
   14002c27e:	adc    DWORD PTR [rsi],edx
   14002c280:	or     eax,0x1f1f1f21
   14002c285:	sub    esp,DWORD PTR [rip+0xc2a2114]        # 0x14c2ce39f
   14002c28b:	sub    ebx,DWORD PTR [rdi]
   14002c28d:	(bad)  
   14002c28e:	and    DWORD PTR [rip+0x1313382c],ecx        # 0x15315fac0
   14002c294:	adc    edx,DWORD PTR [rbx]
   14002c296:	(bad)  
   14002c297:	adc    cl,BYTE PTR [rdi+rax*1]
   14002c29a:	(bad)  
   14002c29b:	(bad)  
   14002c29c:	adc    edx,DWORD PTR [rbx]
   14002c29e:	cmp    BYTE PTR [rax+riz*1],ch
   14002c2a1:	(bad)  
   14002c2a2:	adc    edx,DWORD PTR [rbx]
   14002c2a4:	adc    edx,DWORD PTR [rbx]
   14002c2a6:	adc    ebp,DWORD PTR [rbx]
   14002c2a8:	xor    ah,BYTE PTR [rbx]
   14002c2aa:	(bad)  
   14002c2ab:	adc    edx,DWORD PTR [rbx]
   14002c2ad:	adc    eax,DWORD PTR [rdi]
   14002c2af:	and    BYTE PTR [rax],bl
   14002c2b1:	(bad)  
   14002c2b2:	adc    esi,DWORD PTR [rbx]
   14002c2b4:	xor    esi,DWORD PTR [rbx]
   14002c2b6:	xor    edx,DWORD PTR [rbx]
   14002c2b8:	(bad)  
   14002c2b9:	or     dl,BYTE PTR [rbx]
   14002c2bb:	xor    esi,DWORD PTR [rbx]
   14002c2bd:	adc    eax,DWORD PTR [rdi]
   14002c2bf:	sbb    BYTE PTR [rcx],al
   14002c2c1:	add    ebx,DWORD PTR [rdi]
   14002c2c3:	(bad)  
   14002c2c4:	(bad)  
   14002c2c5:	(bad)  
   14002c2c6:	(bad)  
   14002c2c7:	(bad)  
   14002c2c8:	(bad)  
   14002c2c9:	(bad)  
   14002c2ca:	(bad)  
   14002c2cb:	(bad)  
   14002c2cc:	(bad)  
   14002c2cd:	(bad)  
   14002c2ce:	add    eax,DWORD PTR [rcx]
   14002c2d0:	cmp    ah,BYTE PTR [rdi]
   14002c2d2:	(bad)  
   14002c2d3:	(bad)  
   14002c2d4:	(bad)  
   14002c2d5:	(bad)  
   14002c2d6:	(bad)  
   14002c2d7:	(bad)  
   14002c2d8:	(bad)  
   14002c2d9:	(bad)  
   14002c2da:	(bad)  
   14002c2db:	(bad)  
   14002c2dc:	(bad)  
   14002c2dd:	(bad)  
   14002c2de:	(bad)  
   14002c2df:	cmp    al,BYTE PTR [rax+0xb6aa01]
   14002c2e5:	add    BYTE PTR [rax+0x1],al
	...
   14002c31b:	add    BYTE PTR [rax+0x28000001],al
   14002c321:	add    BYTE PTR [rax],al
   14002c323:	add    BYTE PTR [rax],dh
   14002c325:	add    BYTE PTR [rax],al
   14002c327:	add    BYTE PTR [rax+0x0],ah
   14002c32a:	add    BYTE PTR [rax],al
   14002c32c:	add    DWORD PTR [rax],eax
   14002c32e:	and    BYTE PTR [rax],al
	...
   14002c350:	ins    DWORD PTR es:[rdi],dx
   14002c351:	push   rdi
   14002c352:	(bad)  
   14002c353:	xor    ebp,DWORD PTR [rbp+0x57]
   14002c356:	(bad)  
   14002c357:	xchg   esi,eax
   14002c358:	ins    DWORD PTR es:[rdi],dx
   14002c359:	push   rdi
   14002c35a:	(bad)  
   14002c35b:	jmp    FWORD PTR [rbp+0x57]
   14002c35e:	(bad)  
   14002c35f:	jmp    FWORD PTR [rbp+0x57]
   14002c362:	(bad)  
   14002c363:	jmp    FWORD PTR [rbp+0x57]
   14002c366:	(bad)  
   14002c367:	jmp    FWORD PTR [rbp+0x57]
   14002c36a:	(bad)  
   14002c36b:	jmp    FWORD PTR [rbp+0x57]
   14002c36e:	(bad)  
   14002c36f:	jmp    FWORD PTR [rbp+0x57]
   14002c372:	(bad)  
   14002c373:	jmp    FWORD PTR [rbp+0x57]
   14002c376:	(bad)  
   14002c377:	jmp    FWORD PTR [rbp+0x57]
   14002c37a:	(bad)  
   14002c37b:	jmp    FWORD PTR [rbp+0x57]
   14002c37e:	(bad)  
   14002c37f:	jmp    FWORD PTR [rbp+0x57]
   14002c382:	(bad)  
   14002c383:	jmp    FWORD PTR [rbp+0x57]
   14002c386:	(bad)  
   14002c387:	jmp    FWORD PTR [rbp+0x57]
   14002c38a:	(bad)  
   14002c38b:	jmp    FWORD PTR [rbp+0x57]
   14002c38e:	(bad)  
   14002c38f:	jmp    FWORD PTR [rbp+0x57]
   14002c392:	(bad)  
   14002c393:	jmp    FWORD PTR [rbp+0x57]
   14002c396:	(bad)  
   14002c397:	jmp    FWORD PTR [rbp+0x57]
   14002c39a:	(bad)  
   14002c39b:	jmp    FWORD PTR [rbp+0x57]
   14002c39e:	(bad)  
   14002c39f:	jmp    FWORD PTR [rbp+0x57]
   14002c3a2:	(bad)  
   14002c3a3:	jmp    FWORD PTR [rbp+0x57]
   14002c3a6:	(bad)  
   14002c3a7:	jmp    FWORD PTR [rbp+0x57]
   14002c3aa:	(bad)  
   14002c3ab:	jmp    FWORD PTR [rbp+0x57]
   14002c3ae:	(bad)  
   14002c3af:	jmp    FWORD PTR [rbp+0x57]
   14002c3b2:	(bad)  
   14002c3b3:	jmp    FWORD PTR [rbp+0x57]
   14002c3b6:	(bad)  
   14002c3b7:	jmp    FWORD PTR [rbp+0x57]
   14002c3ba:	(bad)  
   14002c3bb:	jmp    FWORD PTR [rbp+0x57]
   14002c3be:	(bad)  
   14002c3bf:	jmp    FWORD PTR [rbp+0x57]
   14002c3c2:	(bad)  
   14002c3c3:	jmp    FWORD PTR [rbp+0x57]
   14002c3c6:	(bad)  
   14002c3c7:	jmp    FWORD PTR [rbp+0x57]
   14002c3ca:	(bad)  
   14002c3cb:	jmp    FWORD PTR [rbp+0x57]
   14002c3ce:	(bad)  
   14002c3cf:	jmp    FWORD PTR [rbp+0x57]
   14002c3d2:	(bad)  
   14002c3d3:	jmp    FWORD PTR [rbp+0x57]
   14002c3d6:	(bad)  
   14002c3d7:	jmp    FWORD PTR [rbp+0x57]
   14002c3da:	(bad)  
   14002c3db:	jmp    FWORD PTR [rbp+0x57]
   14002c3de:	(bad)  
   14002c3df:	jmp    FWORD PTR [rbp+0x57]
   14002c3e2:	(bad)  
   14002c3e3:	jmp    FWORD PTR [rbp+0x57]
   14002c3e6:	(bad)  
   14002c3e7:	jmp    FWORD PTR [rbp+0x57]
   14002c3ea:	(bad)  
   14002c3eb:	jmp    FWORD PTR [rbp+0x57]
   14002c3ee:	(bad)  
   14002c3ef:	jmp    FWORD PTR [rbp+0x57]
   14002c3f2:	(bad)  
   14002c3f3:	jmp    FWORD PTR [rbp+0x57]
   14002c3f6:	(bad)  
   14002c3f7:	jmp    FWORD PTR [rbp+0x57]
   14002c3fa:	(bad)  
   14002c3fb:	xchg   esi,eax
   14002c3fc:	ins    DWORD PTR es:[rdi],dx
   14002c3fd:	push   rdi
   14002c3fe:	(bad)  
   14002c3ff:	xor    eax,DWORD PTR [rax]
	...
   14002c409:	add    BYTE PTR [rax],al
   14002c40b:	add    BYTE PTR [rsi+0x58],ch
   14002c40e:	cmp    DWORD PTR [rsi+0x6f],esp
   14002c411:	pop    rcx
   14002c412:	cmp    bh,ah
   14002c414:	xchg   edi,eax
   14002c415:	mov    es,WORD PTR [rcx-0x1a1a1a01]
   14002c41b:	(bad)  
   14002c41c:	jmp    0x12a02ae0a
   14002c421:	jmp    0x129ecc40f
   14002c426:	jmp    0x129ecae2a
   14002c42b:	(bad)  
   14002c42c:	jmp    0x12a02ae1a
   14002c431:	jmp    0x129ecc41f
   14002c436:	jmp    0x129ecae3a
   14002c43b:	(bad)  
   14002c43c:	jmp    0x12a02ae2a
   14002c441:	jmp    0x129ecc42f
   14002c446:	jmp    0x129ecae4a
   14002c44b:	(bad)  
   14002c44c:	jmp    0x12a02ae3a
   14002c451:	jmp    0x129ecc43f
   14002c456:	jmp    0x129ecae5a
   14002c45b:	(bad)  
   14002c45c:	jmp    0x12a02ae4a
   14002c461:	jmp    0x129ecc44f
   14002c466:	jmp    0x129ecae6a
   14002c46b:	(bad)  
   14002c46c:	jmp    0x12a02ae5a
   14002c471:	jmp    0x129ecc45f
   14002c476:	jmp    0x129ecae7a
   14002c47b:	(bad)  
   14002c47c:	jmp    0x12a02ae6a
   14002c481:	jmp    0x129ecc46f
   14002c486:	jmp    0x129ecae8a
   14002c48b:	(bad)  
   14002c48c:	jmp    0x12a02ae7a
   14002c491:	jmp    0x129ecc47f
   14002c496:	jmp    0x129ecae9a
   14002c49b:	(bad)  
   14002c49c:	jmp    0x12a02ae8a
   14002c4a1:	jmp    0x129ecc48f
   14002c4a6:	jmp    0x129ecaeaa
   14002c4ab:	(bad)  
   14002c4ac:	jmp    0x12a02ae9a
   14002c4b1:	jmp    0x126e9c49f
   14002c4b6:	out    0xff,al
   14002c4b8:	xchg   edi,eax
   14002c4b9:	mov    es,WORD PTR [rcx+0x3a596fff]
   14002c4bf:	cld    
   14002c4c0:	outs   dx,BYTE PTR ds:[rsi]
   14002c4c1:	pop    rax
   14002c4c2:	cmp    DWORD PTR [rsi+0x0],esp
   14002c4c5:	add    BYTE PTR [rax],al
   14002c4c7:	add    BYTE PTR [rax+0x5a],dh
   14002c4ca:	cmp    ah,BYTE PTR [rcx]
   14002c4cc:	jno    0x14002c529
   14002c4ce:	cmp    edi,ecx
   14002c4d0:	(bad)  
   14002c4d1:	sar    BYTE PTR [rdx-0x12121201],0xff
   14002c4d8:	lock lock lock push rcx
   14002c4dd:	icebp  
   14002c4de:	icebp  
   14002c4df:	push   rcx
   14002c4e1:	icebp  
   14002c4e2:	icebp  
   14002c4e3:	push   rcx
   14002c4e5:	icebp  
   14002c4e6:	icebp  
   14002c4e7:	push   rcx
   14002c4e9:	icebp  
   14002c4ea:	icebp  
   14002c4eb:	push   rcx
   14002c4ed:	icebp  
   14002c4ee:	icebp  
   14002c4ef:	push   rcx
   14002c4f1:	icebp  
   14002c4f2:	icebp  
   14002c4f3:	push   rcx
   14002c4f5:	icebp  
   14002c4f6:	icebp  
   14002c4f7:	push   rcx
   14002c4f9:	icebp  
   14002c4fa:	icebp  
   14002c4fb:	push   rcx
   14002c4fd:	icebp  
   14002c4fe:	icebp  
   14002c4ff:	push   rcx
   14002c501:	icebp  
   14002c502:	icebp  
   14002c503:	push   rcx
   14002c505:	icebp  
   14002c506:	icebp  
   14002c507:	push   rcx
   14002c509:	icebp  
   14002c50a:	icebp  
   14002c50b:	push   rcx
   14002c50d:	icebp  
   14002c50e:	icebp  
   14002c50f:	push   rcx
   14002c511:	icebp  
   14002c512:	icebp  
   14002c513:	push   rcx
   14002c515:	icebp  
   14002c516:	icebp  
   14002c517:	push   rcx
   14002c519:	icebp  
   14002c51a:	icebp  
   14002c51b:	push   rcx
   14002c51d:	icebp  
   14002c51e:	icebp  
   14002c51f:	push   rcx
   14002c521:	icebp  
   14002c522:	icebp  
   14002c523:	push   rcx
   14002c525:	icebp  
   14002c526:	icebp  
   14002c527:	push   rcx
   14002c529:	icebp  
   14002c52a:	icebp  
   14002c52b:	push   rcx
   14002c52d:	icebp  
   14002c52e:	icebp  
   14002c52f:	push   rcx
   14002c531:	icebp  
   14002c532:	icebp  
   14002c533:	push   rcx
   14002c535:	icebp  
   14002c536:	icebp  
   14002c537:	push   rcx
   14002c539:	icebp  
   14002c53a:	icebp  
   14002c53b:	push   rcx
   14002c53d:	icebp  
   14002c53e:	icebp  
   14002c53f:	push   rcx
   14002c541:	icebp  
   14002c542:	icebp  
   14002c543:	push   rcx
   14002c545:	icebp  
   14002c546:	icebp  
   14002c547:	push   rcx
   14002c549:	icebp  
   14002c54a:	icebp  
   14002c54b:	push   rcx
   14002c54d:	icebp  
   14002c54e:	icebp  
   14002c54f:	push   rcx
   14002c551:	icebp  
   14002c552:	icebp  
   14002c553:	push   rcx
   14002c555:	icebp  
   14002c556:	icebp  
   14002c557:	push   rcx
   14002c559:	icebp  
   14002c55a:	icebp  
   14002c55b:	push   rcx
   14002c55d:	icebp  
   14002c55e:	icebp  
   14002c55f:	push   rcx
   14002c561:	icebp  
   14002c562:	icebp  
   14002c563:	push   rcx
   14002c565:	icebp  
   14002c566:	icebp  
   14002c567:	push   rcx
   14002c569:	icebp  
   14002c56a:	icebp  
   14002c56b:	push   rcx
   14002c56d:	icebp  
   14002c56e:	icebp  
   14002c56f:	push   rcx
   14002c571:	icebp  
   14002c572:	icebp  
   14002c573:	push   rax
   14002c575:	lock lock (bad) 
   14002c578:	in     eax,dx
   14002c579:	in     eax,dx
   14002c57a:	in     eax,dx
   14002c57b:	inc    esp
   14002c57d:	sar    BYTE PTR [rdx+0x3b5b71ff],0xf9
   14002c584:	jo     0x14002c5e0
   14002c586:	cmp    ah,BYTE PTR [rcx]
   14002c588:	jno    0x14002c5e5
   14002c58a:	cmp    al,0x78
   14002c58c:	fwait
   14002c58d:	nop
   14002c58e:	jg     0x14002c58f
   14002c590:	(bad)  
   14002c591:	(bad)  
   14002c592:	(bad)  
   14002c593:	push   rax
   14002c595:	lock lock push rcx
   14002c599:	icebp  
   14002c59a:	icebp  
   14002c59b:	push   rcx
   14002c59d:	icebp  
   14002c59e:	icebp  
   14002c59f:	push   rax
   14002c5a1:	lock lock push rax
   14002c5a5:	lock lock push rax
   14002c5a9:	lock lock push rax
   14002c5ad:	lock lock push rax
   14002c5b1:	lock lock push rax
   14002c5b5:	lock lock push rax
   14002c5b9:	lock lock push rax
   14002c5bd:	lock lock push rax
   14002c5c1:	lock lock push rax
   14002c5c5:	lock lock push rax
   14002c5c9:	lock lock push rax
   14002c5cd:	lock lock push rax
   14002c5d1:	lock lock push rax
   14002c5d5:	lock lock push rax
   14002c5d9:	lock lock push rax
   14002c5dd:	lock lock push rax
   14002c5e1:	lock lock push rax
   14002c5e5:	lock lock push rax
   14002c5e9:	lock lock push rax
   14002c5ed:	lock lock push rax
   14002c5f1:	lock lock push rax
   14002c5f5:	lock lock push rax
   14002c5f9:	lock lock push rax
   14002c5fd:	lock lock push rax
   14002c601:	lock lock push rax
   14002c605:	lock lock push rax
   14002c609:	lock lock push rax
   14002c60d:	lock lock push rax
   14002c611:	lock lock push rax
   14002c615:	lock lock push rax
   14002c619:	lock lock push rax
   14002c61d:	lock lock push rax
   14002c621:	lock lock push rax
   14002c625:	lock lock push rax
   14002c629:	lock lock push rax
   14002c62d:	lock lock push rax
   14002c631:	lock lock push rcx
   14002c635:	icebp  
   14002c636:	icebp  
   14002c637:	push   rax
   14002c639:	lock lock (bad) 
   14002c63c:	(bad)  
   14002c63d:	(bad)  
   14002c63e:	(bad)  
   14002c63f:	call   FWORD PTR [rbx+0x71ff7f90]
   14002c645:	pop    rbx
   14002c646:	cmp    al,0x78
   14002c648:	jb     0x14002c6a7
   14002c64a:	ds dec edx
   14002c64d:	mov    esp,0xedededff
   14002c653:	push   rax
   14002c655:	lock lock push rax
   14002c659:	lock lock push rax
   14002c65d:	lock lock (bad) 
   14002c660:	in     eax,dx
   14002c661:	in     eax,dx
   14002c662:	in     eax,dx
   14002c663:	(bad)  
   14002c664:	in     eax,dx
   14002c665:	in     eax,dx
   14002c666:	in     eax,dx
   14002c667:	(bad)  
   14002c668:	in     eax,dx
   14002c669:	in     eax,dx
   14002c66a:	in     eax,dx
   14002c66b:	(bad)  
   14002c66c:	in     eax,dx
   14002c66d:	in     eax,dx
   14002c66e:	in     eax,dx
   14002c66f:	(bad)  
   14002c670:	in     eax,dx
   14002c671:	in     eax,dx
   14002c672:	in     eax,dx
   14002c673:	(bad)  
   14002c674:	in     eax,dx
   14002c675:	in     eax,dx
   14002c676:	in     eax,dx
   14002c677:	(bad)  
   14002c678:	in     eax,dx
   14002c679:	in     eax,dx
   14002c67a:	in     eax,dx
   14002c67b:	(bad)  
   14002c67c:	in     eax,dx
   14002c67d:	in     eax,dx
   14002c67e:	in     eax,dx
   14002c67f:	(bad)  
   14002c680:	in     eax,dx
   14002c681:	in     eax,dx
   14002c682:	in     eax,dx
   14002c683:	(bad)  
   14002c684:	in     eax,dx
   14002c685:	in     eax,dx
   14002c686:	in     eax,dx
   14002c687:	(bad)  
   14002c688:	in     eax,dx
   14002c689:	in     eax,dx
   14002c68a:	in     eax,dx
   14002c68b:	(bad)  
   14002c68c:	in     eax,dx
   14002c68d:	in     eax,dx
   14002c68e:	in     eax,dx
   14002c68f:	(bad)  
   14002c690:	in     eax,dx
   14002c691:	in     eax,dx
   14002c692:	in     eax,dx
   14002c693:	(bad)  
   14002c694:	in     eax,dx
   14002c695:	in     eax,dx
   14002c696:	in     eax,dx
   14002c697:	(bad)  
   14002c698:	in     eax,dx
   14002c699:	in     eax,dx
   14002c69a:	in     eax,dx
   14002c69b:	(bad)  
   14002c69c:	in     eax,dx
   14002c69d:	in     eax,dx
   14002c69e:	in     eax,dx
   14002c69f:	(bad)  
   14002c6a0:	in     eax,dx
   14002c6a1:	in     eax,dx
   14002c6a2:	in     eax,dx
   14002c6a3:	(bad)  
   14002c6a4:	in     eax,dx
   14002c6a5:	in     eax,dx
   14002c6a6:	in     eax,dx
   14002c6a7:	(bad)  
   14002c6a8:	in     eax,dx
   14002c6a9:	in     eax,dx
   14002c6aa:	in     eax,dx
   14002c6ab:	(bad)  
   14002c6ac:	in     eax,dx
   14002c6ad:	in     eax,dx
   14002c6ae:	in     eax,dx
   14002c6af:	(bad)  
   14002c6b0:	in     eax,dx
   14002c6b1:	in     eax,dx
   14002c6b2:	in     eax,dx
   14002c6b3:	(bad)  
   14002c6b4:	in     eax,dx
   14002c6b5:	in     eax,dx
   14002c6b6:	in     eax,dx
   14002c6b7:	(bad)  
   14002c6b8:	in     eax,dx
   14002c6b9:	in     eax,dx
   14002c6ba:	in     eax,dx
   14002c6bb:	(bad)  
   14002c6bc:	in     eax,dx
   14002c6bd:	in     eax,dx
   14002c6be:	in     eax,dx
   14002c6bf:	(bad)  
   14002c6c0:	in     eax,dx
   14002c6c1:	in     eax,dx
   14002c6c2:	in     eax,dx
   14002c6c3:	(bad)  
   14002c6c4:	in     eax,dx
   14002c6c5:	in     eax,dx
   14002c6c6:	in     eax,dx
   14002c6c7:	(bad)  
   14002c6c8:	in     eax,dx
   14002c6c9:	in     eax,dx
   14002c6ca:	in     eax,dx
   14002c6cb:	(bad)  
   14002c6cc:	in     eax,dx
   14002c6cd:	in     eax,dx
   14002c6ce:	in     eax,dx
   14002c6cf:	(bad)  
   14002c6d0:	in     eax,dx
   14002c6d1:	in     eax,dx
   14002c6d2:	in     eax,dx
   14002c6d3:	(bad)  
   14002c6d4:	in     eax,dx
   14002c6d5:	in     eax,dx
   14002c6d6:	in     eax,dx
   14002c6d7:	(bad)  
   14002c6d8:	in     eax,dx
   14002c6d9:	in     eax,dx
   14002c6da:	in     eax,dx
   14002c6db:	(bad)  
   14002c6dc:	in     eax,dx
   14002c6dd:	in     eax,dx
   14002c6de:	in     eax,dx
   14002c6df:	(bad)  
   14002c6e0:	in     eax,dx
   14002c6e1:	in     eax,dx
   14002c6e2:	in     eax,dx
   14002c6e3:	(bad)  
   14002c6e4:	in     eax,dx
   14002c6e5:	in     eax,dx
   14002c6e6:	in     eax,dx
   14002c6e7:	(bad)  
   14002c6e8:	in     eax,dx
   14002c6e9:	in     eax,dx
   14002c6ea:	in     eax,dx
   14002c6eb:	(bad)  
   14002c6ec:	in     eax,dx
   14002c6ed:	in     eax,dx
   14002c6ee:	in     eax,dx
   14002c6ef:	(bad)  
   14002c6f0:	in     eax,dx
   14002c6f1:	in     eax,dx
   14002c6f2:	in     eax,dx
   14002c6f3:	push   rax
   14002c6f5:	lock lock push rax
   14002c6f9:	lock lock (bad) 
   14002c6fc:	in     eax,dx
   14002c6fd:	in     eax,dx
   14002c6fe:	in     eax,dx
   14002c6ff:	dec    edx
   14002c701:	mov    esp,0x3e5d72ff
   14002c707:	push   QWORD PTR [rsi+rbx*2+0x3f]
   14002c70b:	(bad)  
   14002c70c:	(bad)  
   14002c70e:	fdivp  st(7),st
   14002c710:	in     eax,dx
   14002c711:	in     eax,dx
   14002c712:	in     eax,dx
   14002c713:	(bad)  
   14002c714:	in     eax,dx
   14002c715:	in     eax,dx
   14002c716:	in     eax,dx
   14002c717:	(bad)  
   14002c718:	in     eax,dx
   14002c719:	in     eax,dx
   14002c71a:	in     eax,dx
   14002c71b:	(bad)  
   14002c71c:	in     eax,dx
   14002c71d:	in     eax,dx
   14002c71e:	in     eax,dx
   14002c71f:	(bad)  
   14002c720:	jmp    0x14002c70d
   14002c722:	jmp    0x14002c723
   14002c724:	jmp    0x14002c711
   14002c726:	jmp    0x14002c727
   14002c728:	jmp    0x14002c715
   14002c72a:	jmp    0x14002c72b
   14002c72c:	jmp    0x14002c719
   14002c72e:	(bad)  
   14002c72f:	jmp    rdi
   14002c731:	out    0xe5,al
   14002c733:	jmp    rsp
   14002c735:	loope  0x14002c715
   14002c737:	(bad)  
   14002c738:	fcmovbe st,st(4)
   14002c73a:	int    0xff
   14002c73c:	retf   0xb3c0
   14002c73f:	inc    eax
   14002c741:	mov    dl,0xa1
   14002c743:	jmp    FWORD PTR [rsi-0x56007964]
   14002c749:	xchg   ebp,eax
   14002c74a:	jnp    0x14002c74b
   14002c74c:	movabs al,ds:0x97ff5f7e98ff6d89
   14002c755:	jge    0x14002c7b6
   14002c757:	call   QWORD PTR [rdi-0x6800a083]
   14002c75d:	jge    0x14002c7be
   14002c75f:	call   QWORD PTR [rdi-0x6800a083]
   14002c765:	jge    0x14002c7c6
   14002c767:	call   QWORD PTR [rdi-0x6800a083]
   14002c76d:	jge    0x14002c7ce
   14002c76f:	call   QWORD PTR [rdi-0x6500a183]
   14002c775:	and    DWORD PTR [rdi+rdi*8-0x5c],0xadff738e
   14002c77d:	(bad)  
   14002c77e:	(bad)  
   14002c77f:	(bad)  
   14002c780:	mov    edx,0xc4ff96a9
   14002c785:	mov    bh,0xa8
   14002c787:	(bad)  
   14002c788:	(bad)  
   14002c78a:	int3   
   14002c78b:	jmp    rsi
   14002c78d:	in     al,0xe1
   14002c78f:	(bad)  
   14002c790:	(bad)  
   14002c791:	jmp    0x12beec77d
   14002c796:	jmp    0x14002c797
   14002c798:	jmp    0x14002c785
   14002c79a:	jmp    0x14002c79b
   14002c79c:	jmp    0x14002c789
   14002c79e:	jmp    0x14002c79f
   14002c7a0:	jmp    0x14002c78d
   14002c7a2:	jmp    0x14002c7a3
   14002c7a4:	jmp    0x14002c791
   14002c7a6:	jmp    0x14002c7a7
   14002c7a8:	jmp    0x14002c795
   14002c7aa:	jmp    0x14002c7ab
   14002c7ac:	jmp    0x14002c799
   14002c7ae:	jmp    0x14002c7af
   14002c7b0:	jmp    0x14002c79d
   14002c7b2:	jmp    0x14002c7b3
   14002c7b4:	in     eax,dx
   14002c7b5:	in     eax,dx
   14002c7b6:	in     eax,dx
   14002c7b7:	(bad)  
   14002c7b8:	in     eax,dx
   14002c7b9:	in     eax,dx
   14002c7ba:	in     eax,dx
   14002c7bb:	(bad)  
   14002c7bc:	in     eax,dx
   14002c7bd:	in     eax,dx
   14002c7be:	in     eax,dx
   14002c7bf:	(bad)  
   14002c7c0:	(bad)  
   14002c7c2:	fdivp  st(7),st
   14002c7c4:	je     0x14002c824
   14002c7c6:	(bad)  
   14002c7c7:	push   QWORD PTR [rsi+0x60]
   14002c7ca:	rex.B (bad) 
   14002c7cc:	fstp   st(5)
   14002c7ce:	(bad)  
   14002c7d0:	jmp    0x14002c7bd
   14002c7d2:	jmp    0x14002c7d3
   14002c7d4:	jmp    0x14002c7c1
   14002c7d6:	jmp    0x14002c7d7
   14002c7d8:	jmp    0x14002c7c5
   14002c7da:	jmp    0x14002c7db
   14002c7dc:	jmp    0x14002c7c9
   14002c7de:	jmp    0x14002c7df
   14002c7e0:	jmp    0x12a02b1ce
   14002c7e5:	jmp    0x121e6c7d3
   14002c7ea:	fdivp  st(7),st
   14002c7ec:	(bad)  
   14002c7ee:	int    0xff
   14002c7f0:	mov    edi,0xacffa1b1
   14002c7f5:	cdq    
   14002c7f6:	(bad)  
   14002c7f7:	jmp    QWORD PTR [rbx-0x62008b72]
   14002c7fd:	xchg   DWORD PTR [rdx-0x1],ebp
   14002c800:	cdq    
   14002c801:	(bad)  
   14002c802:	call   QWORD PTR fs:[rbp-0x6a00a385]
   14002c809:	jnp    0x14002c867
   14002c80b:	call   QWORD PTR [rbp-0x6900a385]
   14002c811:	jge    0x14002c871
   14002c813:	call   QWORD PTR [rsi-0x6900a083]
   14002c819:	jge    0x14002c87a
   14002c81b:	call   QWORD PTR [rsi-0x6900a083]
   14002c821:	jge    0x14002c882
   14002c823:	call   QWORD PTR [rsi-0x6800a083]
   14002c829:	jge    0x14002c88a
   14002c82b:	call   QWORD PTR [rsi-0x6a00a083]
   14002c831:	jnp    0x14002c890
   14002c833:	call   QWORD PTR [rbp-0x6a00a385]
   14002c839:	jnp    0x14002c897
   14002c83b:	call   QWORD PTR [rcx+rdi*2+0x7d97ff5a]
   14002c842:	pop    rdi
   14002c843:	call   FWORD PTR [rbx-0x5d00987c]
   14002c849:	mov    WORD PTR [rcx-0x1],?
   14002c84c:	mov    dl,0xa1
   14002c84e:	mov    edi,edi
   14002c850:	retf   0xb4c0
   14002c853:	jmp    rdx
   14002c855:	(bad)  
   14002c857:	(bad)  
   14002c858:	call   0x12a02b145
   14002c85d:	jmp    0x129ecc84b
   14002c862:	jmp    0x129ecb266
   14002c867:	(bad)  
   14002c868:	jmp    0x12a02b256
   14002c86d:	jmp    0x129ecc85b
   14002c872:	jmp    0x12beeb476
   14002c877:	(bad)  
   14002c878:	jmp    0x14002c865
   14002c87a:	jmp    0x14002c87b
   14002c87c:	jmp    0x14002c869
   14002c87e:	jmp    0x14002c87f
   14002c880:	fstp   st(5)
   14002c882:	(bad)  
   14002c884:	jbe    0x14002c8e6
   14002c886:	push   QWORD PTR [r15+0x62]
   14002c88a:	rex.XB (bad) 
   14002c88c:	fcmovnu st,st(3)
   14002c88e:	(bad)  
   14002c890:	jmp    0x12a02b27e
   14002c895:	jmp    0x129ecc883
   14002c89a:	jmp    0x129ecb29e
   14002c89f:	(bad)  
   14002c8a0:	call   0x12902b18d
   14002c8a5:	call   0xcba3c892
   14002c8aa:	jno    0x14002c8ab
   14002c8ac:	xchg   ebx,eax
   14002c8ad:	jns    0x14002c909
   14002c8af:	call   QWORD PTR [rax-0x6f00aa8b]
   14002c8b5:	jne    0x14002c90d
   14002c8b7:	call   QWORD PTR [rsi-0x61009f83]
   14002c8bd:	xchg   DWORD PTR [rdi+rdi*8-0x54],ebp
   14002c8c1:	(bad)  
   14002c8c2:	cmp    edi,0xffffffbe
   14002c8c5:	mov    dl,0xa1
   14002c8c7:	inc    esi
   14002c8c9:	mov    esp,0xbfc8ffaf
   14002c8ce:	mov    dl,0xff
   14002c8d0:	xlat   BYTE PTR ds:[rbx]
   14002c8d1:	ror    edx,1
   14002c8d3:	(bad)  
   14002c8d4:	fcmovbe st,st(6)
   14002c8d6:	sar    bh,1
   14002c8d8:	fcmovbe st,st(6)
   14002c8da:	sar    bh,1
   14002c8dc:	fcmovbe st,st(6)
   14002c8de:	sar    bh,1
   14002c8e0:	fcmovbe st,st(6)
   14002c8e2:	sar    bh,1
   14002c8e4:	fcmovbe st,st(6)
   14002c8e6:	sar    bh,1
   14002c8e8:	fcmovnbe st,st(7)
   14002c8ea:	sar    edi,1
   14002c8ec:	fcom   st(2)
   14002c8ee:	int3   
   14002c8ef:	dec    ebp
   14002c8f1:	(bad)  
   14002c8f2:	mov    ecx,0xb1bec8ff
   14002c8f7:	inc    esi
   14002c8f9:	mov    ebx,0xabb9ffae
   14002c8fe:	cdq    
   14002c8ff:	push   QWORD PTR [rcx-0x5400735f]
   14002c905:	cwde   
   14002c906:	(bad)  
   14002c907:	call   FWORD PTR [rbx-0x6900967b]
   14002c90d:	jge    0x14002c96f
   14002c90f:	call   QWORD PTR [rsi-0x5d00a083]
   14002c915:	lea    esi,[rdi+rdi*8-0x34]
   14002c919:	(bad)  
   14002c91a:	mov    ecx,0xe4e6e7ff
   14002c91f:	(bad)  
   14002c920:	call   0x12902b20d
   14002c925:	call   0x128ebc912
   14002c92a:	call   0x128ebb22e
   14002c92f:	(bad)  
   14002c930:	call   0x12a02b21d
   14002c935:	jmp    0x129ecc923
   14002c93a:	jmp    0x129ecb33e
   14002c93f:	(bad)  
   14002c940:	fcmovnu st,st(3)
   14002c942:	(bad)  
   14002c944:	ja     0x14002c9a8
   14002c946:	rex.XB (bad) 
   14002c948:	jns    0x14002c9ae
   14002c94a:	rex.RB (bad) 
   14002c94c:	fcmovu st,st(2)
   14002c94e:	(bad)  
   14002c950:	call   0x12902b23d
   14002c955:	call   0x128ebc942
   14002c95a:	call   0x128ebb25e
   14002c95f:	jmp    rdi
   14002c961:	out    0xe7,eax
   14002c963:	jmp    rdi
   14002c965:	out    0xe7,eax
   14002c967:	jmp    QWORD PTR [rbp-0x6b00876f]
   14002c96d:	jnp    0x14002c9cc
   14002c96f:	dec    DWORD PTR [rsi-0x6800ac8d]
   14002c975:	and    BYTE PTR [rbx-0x1],0xcd
   14002c979:	(bad)  
   14002c97a:	mov    edx,0xe7e7e7ff
   14002c97f:	jmp    rdi
   14002c981:	out    0xe7,eax
   14002c983:	jmp    rdi
   14002c985:	out    0xe7,eax
   14002c987:	jmp    rdi
   14002c989:	out    0xe7,eax
   14002c98b:	jmp    rdi
   14002c98d:	out    0xe7,eax
   14002c98f:	jmp    rdi
   14002c991:	out    0xe7,eax
   14002c993:	jmp    rdi
   14002c995:	out    0xe7,eax
   14002c997:	jmp    rdi
   14002c999:	out    0xe7,eax
   14002c99b:	jmp    rdi
   14002c99d:	out    0xe7,eax
   14002c99f:	jmp    rdi
   14002c9a1:	out    0xe7,eax
   14002c9a3:	jmp    rdi
   14002c9a5:	out    0xe7,eax
   14002c9a7:	jmp    rdi
   14002c9a9:	out    0xe7,eax
   14002c9ab:	jmp    rdi
   14002c9ad:	out    0xe7,eax
   14002c9af:	jmp    rdi
   14002c9b1:	out    0xe7,eax
   14002c9b3:	jmp    rdi
   14002c9b5:	out    0xe7,eax
   14002c9b7:	jmp    rdi
   14002c9b9:	out    0xe7,eax
   14002c9bb:	jmp    rdi
   14002c9bd:	out    0xe7,eax
   14002c9bf:	jmp    rdi
   14002c9c1:	out    0xe7,eax
   14002c9c3:	jmp    rdi
   14002c9c5:	out    0xe6,eax
   14002c9c7:	jmp    rbp
   14002c9c9:	in     eax,0xe3
   14002c9cb:	(bad)  
   14002c9cc:	(bad)  
   14002c9ce:	fdivr  st,st(7)
   14002c9d0:	retf   
   14002c9d1:	ret    0xffb7
   14002c9d4:	test   eax,0x9bff7f96
   14002c9d9:	test   DWORD PTR [rcx-0x1],ebp
   14002c9dc:	(bad)  
   14002c9dd:	(bad)  
   14002c9de:	(bad)  
   14002c9df:	jmp    rsi
   14002c9e1:	out    0xe6,al
   14002c9e3:	jmp    rdi
   14002c9e5:	out    0xe7,eax
   14002c9e7:	jmp    rdi
   14002c9e9:	out    0xe7,eax
   14002c9eb:	jmp    rdi
   14002c9ed:	out    0xe7,eax
   14002c9ef:	jmp    rdi
   14002c9f1:	out    0xe7,eax
   14002c9f3:	(bad)  
   14002c9f4:	call   0x12902b2e1
   14002c9f9:	call   0x128ebc9e6
   14002c9fe:	call   0x11adda502
   14002ca03:	(bad)  
   14002ca04:	jns    0x14002ca6a
   14002ca06:	rex.RB (bad) 
   14002ca08:	jnp    0x14002ca70
   14002ca0a:	rex.RXB (bad) 
   14002ca0c:	(bad)  
   14002ca0e:	fcos   
   14002ca10:	out    0xe7,eax
   14002ca12:	out    0xff,eax
   14002ca14:	out    0xe7,eax
   14002ca16:	out    0xff,eax
   14002ca18:	out    0xe7,eax
   14002ca1a:	out    0xff,eax
   14002ca1c:	out    0xe7,eax
   14002ca1e:	out    0xff,eax
   14002ca20:	out    0xe6,al
   14002ca22:	out    0xff,al
   14002ca24:	out    0xe6,al
   14002ca26:	out    0xff,al
   14002ca28:	loope  0x14002ca0a
   14002ca2a:	(bad)  
   14002ca2c:	retf   
   14002ca2d:	ret    
   14002ca2e:	mov    eax,0x7992a5ff
   14002ca33:	call   FWORD PTR [rdx-0x4a00977c]
   14002ca39:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002ca3a:	xchg   ebx,eax
   14002ca3b:	dec    esi
   14002ca3d:	(bad)  
   14002ca3e:	mov    ebp,0xccd2d6ff
   14002ca43:	jmp    rsp
   14002ca45:	in     al,0xe2
   14002ca47:	jmp    rsi
   14002ca49:	out    0xe6,al
   14002ca4b:	jmp    rsp
   14002ca4d:	in     al,0xe2
   14002ca4f:	(bad)  
   14002ca50:	fcmovnbe st,st(7)
   14002ca52:	sar    edi,cl
   14002ca54:	(bad)  
   14002ca55:	iret   
   14002ca56:	enter  0xd0ff,0xc9
   14002ca5a:	sar    bh,0xcc
   14002ca5d:	(bad)  
   14002ca5e:	mov    edx,0xb9c3ccff
   14002ca63:	dec    esp
   14002ca65:	(bad)  
   14002ca66:	mov    edx,0xbdc6ceff
   14002ca6b:	call   rsp
   14002ca6d:	(bad)  
   14002ca6e:	(bad)  
   14002ca6f:	call   rdi
   14002ca71:	ror    ebp,cl
   14002ca73:	(bad)  
   14002ca74:	(bad)  
   14002ca76:	(bad)  
   14002ca78:	in     eax,0xe5
   14002ca7a:	jrcxz  0x14002ca7b
   14002ca7c:	out    0xe6,al
   14002ca7e:	out    0xff,al
   14002ca80:	out    0xe6,al
   14002ca82:	out    0xff,al
   14002ca84:	out    0xe6,al
   14002ca86:	out    0xff,al
   14002ca88:	out    0xe6,al
   14002ca8a:	out    0xff,al
   14002ca8c:	out    0xe6,al
   14002ca8e:	out    0xff,al
   14002ca90:	out    0xe6,al
   14002ca92:	out    0xff,al
   14002ca94:	out    0xe6,al
   14002ca96:	out    0xff,al
   14002ca98:	mov    ebp,0xcaffa1b1
   14002ca9d:	shl    DWORD PTR [rdi-0x1e1d1c01],0xff
   14002caa4:	out    0xe6,al
   14002caa6:	out    0xff,al
   14002caa8:	out    0xe6,al
   14002caaa:	out    0xff,al
   14002caac:	out    0xe6,al
   14002caae:	out    0xff,al
   14002cab0:	out    0xe6,al
   14002cab2:	out    0xff,al
   14002cab4:	out    0xe7,eax
   14002cab6:	out    0xff,eax
   14002cab8:	out    0xe7,eax
   14002caba:	out    0xff,eax
   14002cabc:	out    0xe7,eax
   14002cabe:	out    0xff,eax
   14002cac0:	(bad)  
   14002cac2:	fcos   
   14002cac4:	jnp    0x14002cb2c
   14002cac6:	rex.RXB (bad) 
   14002cac8:	jge    0x14002cb32
   14002caca:	rex.WX (bad) 
   14002cacc:	fcomp  st(0)
   14002cace:	fdivr  st,st(7)
   14002cad0:	out    0xe6,al
   14002cad2:	out    0xff,al
   14002cad4:	out    0xe6,al
   14002cad6:	out    0xff,al
   14002cad8:	out    0xe6,al
   14002cada:	out    0xff,al
   14002cadc:	out    0xe6,al
   14002cade:	out    0xff,al
   14002cae0:	in     al,0xe4
   14002cae2:	in     al,0xff
   14002cae4:	in     al,0xe4
   14002cae6:	in     al,0xff
   14002cae8:	in     al,0xe4
   14002caea:	in     al,0xff
   14002caec:	in     al,0xe4
   14002caee:	in     al,0xff
   14002caf0:	in     al,0xe4
   14002caf2:	in     al,0xff
   14002caf4:	(bad)  
   14002caf5:	ror    dl,1
   14002caf7:	push   QWORD PTR [rdi-0x53006757]
   14002cafd:	fwait
   14002cafe:	xchg   bh,bh
   14002cb00:	mov    ebx,0xddff9faf
   14002cb05:	fcmovu st,st(0)
   14002cb07:	dec    esi
   14002cb09:	(bad)  
   14002cb0a:	mov    esi,0x98a9b7ff
   14002cb0f:	call   FWORD PTR [rdi-0x6f008e75]
   14002cb15:	ja     0x14002cb70
   14002cb17:	dec    DWORD PTR [rdx-0x7500b091]
   14002cb1d:	outs   dx,DWORD PTR ds:[rsi]
   14002cb1e:	rex.WRXB dec QWORD PTR [r10-0x7500b091]
   14002cb25:	outs   dx,DWORD PTR ds:[rsi]
   14002cb26:	rex.WRXB dec QWORD PTR [r10-0x7100b091]
   14002cb2d:	jne    0x14002cb85
   14002cb2f:	call   FWORD PTR [rax-0x57009a7f]
   14002cb35:	xchg   esi,eax
   14002cb36:	jg     0x14002cb37
   14002cb38:	mov    edx,0xd2ff9cad
   14002cb3d:	int3   
   14002cb3e:	(bad)  
   14002cb41:	jrcxz  0x14002cb26
   14002cb43:	jmp    rsp
   14002cb45:	in     al,0xe4
   14002cb47:	jmp    rsp
   14002cb49:	in     al,0xe4
   14002cb4b:	jmp    rsp
   14002cb4d:	in     al,0xe4
   14002cb4f:	jmp    rsp
   14002cb51:	in     al,0xe4
   14002cb53:	jmp    rbx
   14002cb55:	jrcxz  0x14002cb3a
   14002cb57:	(bad)  
   14002cb58:	fcmovu st,st(0)
   14002cb5a:	(bad)  
   14002cb5b:	jmp    rsp
   14002cb5d:	in     al,0xe4
   14002cb5f:	jmp    rsp
   14002cb61:	in     al,0xe4
   14002cb63:	jmp    rsp
   14002cb65:	in     al,0xe4
   14002cb67:	jmp    rsp
   14002cb69:	in     al,0xe4
   14002cb6b:	jmp    rsp
   14002cb6d:	in     al,0xe4
   14002cb6f:	jmp    rsp
   14002cb71:	in     al,0xe4
   14002cb73:	jmp    rsi
   14002cb75:	out    0xe6,al
   14002cb77:	jmp    rsi
   14002cb79:	out    0xe6,al
   14002cb7b:	jmp    rsi
   14002cb7d:	out    0xe6,al
   14002cb7f:	(bad)  
   14002cb80:	fcomp  st(0)
   14002cb82:	fdivr  st,st(7)
   14002cb84:	jge    0x14002cbee
   14002cb86:	rex.WX (bad) 
   14002cb88:	jg     0x14002cbf4
   14002cb8a:	rex.WR call rsi
   14002cb8d:	(bad)  
   14002cb8e:	(bad)  
   14002cb8f:	jmp    rsp
   14002cb91:	in     al,0xe4
   14002cb93:	jmp    rsp
   14002cb95:	in     al,0xe4
   14002cb97:	jmp    rsp
   14002cb99:	in     al,0xe4
   14002cb9b:	jmp    rsp
   14002cb9d:	in     al,0xe4
   14002cb9f:	jmp    rsp
   14002cba1:	in     al,0xe4
   14002cba3:	jmp    rsp
   14002cba5:	in     al,0xe4
   14002cba7:	jmp    rsp
   14002cba9:	in     al,0xe4
   14002cbab:	jmp    rsp
   14002cbad:	in     al,0xe4
   14002cbaf:	jmp    rsp
   14002cbb1:	in     al,0xe4
   14002cbb3:	jmp    rsp
   14002cbb5:	in     al,0xe4
   14002cbb7:	jmp    rsp
   14002cbb9:	in     al,0xe4
   14002cbbb:	jmp    rsp
   14002cbbd:	in     al,0xe4
   14002cbbf:	jmp    rsp
   14002cbc1:	in     al,0xe4
   14002cbc3:	call   rdx
   14002cbc5:	int3   
   14002cbc6:	(bad)  
   14002cbc9:	jns    0x14002cc27
   14002cbcb:	dec    DWORD PTR [rcx-0x7400b192]
   14002cbd1:	jo     0x14002cc24
   14002cbd3:	call   QWORD PTR [rax-0x6900a589]
   14002cbd9:	jg     0x14002cc3e
   14002cbdb:	call   FWORD PTR [rbp-0x5d009178]
   14002cbe1:	mov    ?,WORD PTR [rsi-0x1]
   14002cbe4:	sahf   
   14002cbe5:	mov    dh,BYTE PTR [rcx-0x1]
   14002cbe8:	xchg   esp,eax
   14002cbe9:	jle    0x14002cc4d
   14002cbeb:	call   QWORD PTR [rax-0x7500a589]
   14002cbf1:	jo     0x14002cc43
   14002cbf3:	dec    DWORD PTR [rcx-0x6900b192]
   14002cbf9:	jg     0x14002cc5e
   14002cbfb:	inc    esp
   14002cbfd:	mov    edx,0xe3e3ffaf
   14002cc02:	jrcxz  0x14002cc03
   14002cc04:	in     al,0xe4
   14002cc06:	in     al,0xff
   14002cc08:	in     al,0xe4
   14002cc0a:	in     al,0xff
   14002cc0c:	in     al,0xe4
   14002cc0e:	in     al,0xff
   14002cc10:	in     al,0xe4
   14002cc12:	in     al,0xff
   14002cc14:	in     al,0xe4
   14002cc16:	in     al,0xff
   14002cc18:	in     al,0xe4
   14002cc1a:	in     al,0xff
   14002cc1c:	in     al,0xe4
   14002cc1e:	in     al,0xff
   14002cc20:	in     al,0xe4
   14002cc22:	in     al,0xff
   14002cc24:	in     al,0xe4
   14002cc26:	in     al,0xff
   14002cc28:	in     al,0xe4
   14002cc2a:	in     al,0xff
   14002cc2c:	in     al,0xe4
   14002cc2e:	in     al,0xff
   14002cc30:	in     al,0xe4
   14002cc32:	in     al,0xff
   14002cc34:	in     al,0xe4
   14002cc36:	in     al,0xff
   14002cc38:	in     al,0xe4
   14002cc3a:	in     al,0xff
   14002cc3c:	in     al,0xe4
   14002cc3e:	in     al,0xff
   14002cc40:	(bad)  
   14002cc41:	(bad)  
   14002cc42:	(bad)  
   14002cc43:	(bad)  
   14002cc44:	jg     0x14002ccb0
   14002cc46:	rex.WR inc QWORD PTR [rcx-0x2900b194]
   14002cc4d:	(bad)  
   14002cc4e:	(bad)  
   14002cc4f:	jmp    rsp
   14002cc51:	in     al,0xe4
   14002cc53:	jmp    rsp
   14002cc55:	in     al,0xe4
   14002cc57:	jmp    rsp
   14002cc59:	in     al,0xe4
   14002cc5b:	jmp    rsp
   14002cc5d:	in     al,0xe4
   14002cc5f:	jmp    rsp
   14002cc61:	in     al,0xe4
   14002cc63:	jmp    rsp
   14002cc65:	in     al,0xe4
   14002cc67:	jmp    rsp
   14002cc69:	in     al,0xe4
   14002cc6b:	jmp    rsp
   14002cc6d:	in     al,0xe4
   14002cc6f:	jmp    rsp
   14002cc71:	in     al,0xe4
   14002cc73:	jmp    rsp
   14002cc75:	in     al,0xe4
   14002cc77:	jmp    rsp
   14002cc79:	in     al,0xe4
   14002cc7b:	jmp    rsp
   14002cc7d:	in     al,0xe4
   14002cc7f:	jmp    rsp
   14002cc81:	in     al,0xe4
   14002cc83:	dec    esp
   14002cc85:	(bad)  
   14002cc86:	mov    ebx,0x647f96ff
   14002cc8b:	call   FWORD PTR [rbp-0x3f008f77]
   14002cc91:	mov    ch,0xa7
   14002cc93:	dec    ecx
   14002cc95:	shl    DWORD PTR [rdi-0x3c352e01],0xff
   14002cc9c:	xlat   BYTE PTR ds:[rbx]
   14002cc9d:	ror    ebp,cl
   14002cc9f:	(bad)  
   14002cca0:	fstp   st(2)
   14002cca2:	xlat   BYTE PTR ds:[rbx]
   14002cca3:	(bad)  
   14002cca4:	(bad)  
   14002cca6:	sar    edi,1
   14002cca8:	iret   
   14002cca9:	leave  
   14002ccaa:	sar    edi,0xc8
   14002ccad:	shl    BYTE PTR [rbp-0x5d4f4301],0xff
   14002ccb4:	mov    ebp,0xd4ffa4b2
   14002ccb9:	ror    dl,1
   14002ccbb:	jmp    rsp
   14002ccbd:	in     al,0xe4
   14002ccbf:	jmp    rsp
   14002ccc1:	in     al,0xe4
   14002ccc3:	jmp    rsp
   14002ccc5:	in     al,0xe4
   14002ccc7:	jmp    rsp
   14002ccc9:	in     al,0xe4
   14002cccb:	jmp    rsp
   14002cccd:	in     al,0xe4
   14002cccf:	jmp    rsp
   14002ccd1:	in     al,0xe4
   14002ccd3:	jmp    rsp
   14002ccd5:	in     al,0xe4
   14002ccd7:	jmp    rsp
   14002ccd9:	in     al,0xe4
   14002ccdb:	jmp    rsp
   14002ccdd:	in     al,0xe4
   14002ccdf:	jmp    rsp
   14002cce1:	in     al,0xe4
   14002cce3:	jmp    rsp
   14002cce5:	in     al,0xe4
   14002cce7:	jmp    rsp
   14002cce9:	in     al,0xe4
   14002cceb:	jmp    rsp
   14002cced:	in     al,0xe4
   14002ccef:	jmp    rsp
   14002ccf1:	in     al,0xe4
   14002ccf3:	jmp    rsp
   14002ccf5:	in     al,0xe4
   14002ccf7:	jmp    rsp
   14002ccf9:	in     al,0xe4
   14002ccfb:	jmp    rsp
   14002ccfd:	in     al,0xe4
   14002ccff:	call   rsi
   14002cd01:	(bad)  
   14002cd02:	(bad)  
   14002cd03:	inc    DWORD PTR [rcx-0x7c00b194]
   14002cd09:	outs   dx,BYTE PTR ds:[rsi]
   14002cd0a:	push   rcx
   14002cd0b:	call   rsi
   14002cd0d:	(bad)  
   14002cd0e:	(bad)  
   14002cd0f:	jmp    rsp
   14002cd11:	in     al,0xe4
   14002cd13:	jmp    rsp
   14002cd15:	in     al,0xe4
   14002cd17:	jmp    rsp
   14002cd19:	in     al,0xe4
   14002cd1b:	jmp    rsp
   14002cd1d:	in     al,0xe4
   14002cd1f:	jmp    rsp
   14002cd21:	in     al,0xe4
   14002cd23:	jmp    rsp
   14002cd25:	in     al,0xe4
   14002cd27:	jmp    rsp
   14002cd29:	in     al,0xe4
   14002cd2b:	jmp    rsp
   14002cd2d:	in     al,0xe4
   14002cd2f:	jmp    rsp
   14002cd31:	in     al,0xe4
   14002cd33:	jmp    rsp
   14002cd35:	in     al,0xe4
   14002cd37:	jmp    rsp
   14002cd39:	in     al,0xe4
   14002cd3b:	jmp    rsp
   14002cd3d:	in     al,0xe4
   14002cd3f:	jmp    rsp
   14002cd41:	in     al,0xe4
   14002cd43:	jmp    rsp
   14002cd45:	in     al,0xe4
   14002cd47:	call   rbx
   14002cd49:	(bad)  
   14002cd4a:	(bad)  
   14002cd4b:	call   rsi
   14002cd4d:	ror    esp,1
   14002cd4f:	jmp    rsp
   14002cd51:	in     al,0xe4
   14002cd53:	jmp    rsp
   14002cd55:	in     al,0xe4
   14002cd57:	jmp    rsp
   14002cd59:	in     al,0xe4
   14002cd5b:	jmp    rsp
   14002cd5d:	in     al,0xe4
   14002cd5f:	jmp    rbx
   14002cd61:	jrcxz  0x14002cd46
   14002cd63:	jmp    rsp
   14002cd65:	in     al,0xe3
   14002cd67:	jmp    rsp
   14002cd69:	in     al,0xe4
   14002cd6b:	jmp    rsp
   14002cd6d:	in     al,0xe4
   14002cd6f:	jmp    rsp
   14002cd71:	in     al,0xe4
   14002cd73:	jmp    rsp
   14002cd75:	in     al,0xe4
   14002cd77:	jmp    rsp
   14002cd79:	in     al,0xe4
   14002cd7b:	jmp    rsp
   14002cd7d:	in     al,0xe4
   14002cd7f:	jmp    rsp
   14002cd81:	in     al,0xe4
   14002cd83:	jmp    rax
   14002cd85:	(bad)  
   14002cd87:	jmp    rsp
   14002cd89:	in     al,0xe4
   14002cd8b:	jmp    rsp
   14002cd8d:	in     al,0xe4
   14002cd8f:	jmp    rsp
   14002cd91:	in     al,0xe4
   14002cd93:	jmp    rsp
   14002cd95:	in     al,0xe4
   14002cd97:	jmp    rsp
   14002cd99:	in     al,0xe4
   14002cd9b:	jmp    rsp
   14002cd9d:	in     al,0xe4
   14002cd9f:	jmp    rsp
   14002cda1:	in     al,0xe4
   14002cda3:	jmp    rsp
   14002cda5:	in     al,0xe4
   14002cda7:	jmp    rsp
   14002cda9:	in     al,0xe4
   14002cdab:	jmp    rsp
   14002cdad:	in     al,0xe4
   14002cdaf:	jmp    rsp
   14002cdb1:	in     al,0xe4
   14002cdb3:	jmp    rsp
   14002cdb5:	in     al,0xe4
   14002cdb7:	jmp    rsp
   14002cdb9:	in     al,0xe4
   14002cdbb:	jmp    rsp
   14002cdbd:	in     al,0xe4
   14002cdbf:	call   rsi
   14002cdc1:	(bad)  
   14002cdc2:	(bad)  
   14002cdc3:	inc    DWORD PTR [rbx-0x7a00ae92]
   14002cdc9:	jo     0x14002ce1e
   14002cdcb:	call   rsi
   14002cdcd:	(bad)  
   14002cdce:	(bad)  
   14002cdcf:	jmp    rsp
   14002cdd1:	in     al,0xe4
   14002cdd3:	jmp    rsp
   14002cdd5:	in     al,0xe4
   14002cdd7:	jmp    rsp
   14002cdd9:	in     al,0xe4
   14002cddb:	jmp    rsp
   14002cddd:	in     al,0xe4
   14002cddf:	jmp    rbp
   14002cde1:	in     eax,0xe5
   14002cde3:	jmp    rbp
   14002cde5:	in     eax,0xe5
   14002cde7:	jmp    rbp
   14002cde9:	in     eax,0xe5
   14002cdeb:	jmp    rbp
   14002cded:	in     eax,0xe5
   14002cdef:	jmp    rbp
   14002cdf1:	in     eax,0xe5
   14002cdf3:	jmp    rbp
   14002cdf5:	in     eax,0xe5
   14002cdf7:	jmp    rbp
   14002cdf9:	in     eax,0xe5
   14002cdfb:	jmp    rbp
   14002cdfd:	in     eax,0xe5
   14002cdff:	jmp    rbp
   14002ce01:	in     eax,0xe5
   14002ce03:	jmp    rcx
   14002ce05:	loopne 0x14002cde6
   14002ce07:	call   rbp
   14002ce09:	ror    ebx,1
   14002ce0b:	dec    ecx
   14002ce0d:	shl    DWORD PTR [rsi-0x60504401],0xff
   14002ce14:	scas   al,BYTE PTR es:[rdi]
   14002ce15:	sahf   
   14002ce16:	mov    edi,edi
   14002ce18:	stos   BYTE PTR es:[rdi],al
   14002ce19:	cdq    
   14002ce1a:	test   bh,bh
   14002ce1c:	stos   DWORD PTR es:[rdi],eax
   14002ce1d:	(bad)  
   14002ce1e:	test   edi,edi
   14002ce20:	stos   BYTE PTR es:[rdi],al
   14002ce21:	(bad)  
   14002ce22:	test   edi,edi
   14002ce24:	stos   BYTE PTR es:[rdi],al
   14002ce25:	cdq    
   14002ce26:	test   bh,bh
   14002ce28:	lods   al,BYTE PTR ds:[rsi]
   14002ce29:	pushf  
   14002ce2a:	mov    bh,bh
   14002ce2c:	mov    bh,0xaa
   14002ce2e:	(bad)  
   14002ce2f:	inc    edx
   14002ce31:	mov    eax,0xc0c8ffab
   14002ce36:	mov    ch,0xff
   14002ce38:	ror    cl,1
   14002ce3a:	sar    edi,0xd7
   14002ce3d:	(bad)  
   14002ce3e:	(bad)  
   14002ce3f:	jmp    rax
   14002ce41:	(bad)  
   14002ce43:	(bad)  
   14002ce44:	fstp   st(2)
   14002ce46:	xlat   BYTE PTR ds:[rbx]
   14002ce47:	dec    ecx
   14002ce49:	shl    DWORD PTR [rdi-0x493f3601],0xff
   14002ce50:	(bad)  
   14002ce52:	fdivr  st,st(7)
   14002ce54:	in     eax,0xe5
   14002ce56:	in     eax,0xff
   14002ce58:	in     eax,0xe5
   14002ce5a:	in     eax,0xff
   14002ce5c:	in     eax,0xe5
   14002ce5e:	in     eax,0xff
   14002ce60:	in     eax,0xe5
   14002ce62:	in     eax,0xff
   14002ce64:	in     eax,0xe5
   14002ce66:	in     eax,0xff
   14002ce68:	in     eax,0xe5
   14002ce6a:	in     eax,0xff
   14002ce6c:	in     eax,0xe5
   14002ce6e:	in     eax,0xff
   14002ce70:	in     eax,0xe5
   14002ce72:	in     eax,0xff
   14002ce74:	in     al,0xe4
   14002ce76:	in     al,0xff
   14002ce78:	in     al,0xe4
   14002ce7a:	in     al,0xff
   14002ce7c:	in     al,0xe4
   14002ce7e:	in     al,0xff
   14002ce80:	(bad)  
   14002ce81:	(bad)  
   14002ce82:	(bad)  
   14002ce83:	inc    DWORD PTR [rbp-0x7800ac90]
   14002ce89:	jb     0x14002cee1
   14002ce8b:	call   rdi
   14002ce8d:	xlat   BYTE PTR ds:[rbx]
   14002ce8e:	xlat   BYTE PTR ds:[rbx]
   14002ce8f:	jmp    rbp
   14002ce91:	in     eax,0xe5
   14002ce93:	jmp    rbp
   14002ce95:	in     eax,0xe5
   14002ce97:	jmp    rbp
   14002ce99:	in     eax,0xe5
   14002ce9b:	jmp    rbp
   14002ce9d:	in     eax,0xe5
   14002ce9f:	jmp    rsi
   14002cea1:	out    0xe6,al
   14002cea3:	jmp    rsi
   14002cea5:	out    0xe6,al
   14002cea7:	jmp    rsi
   14002cea9:	out    0xe6,al
   14002ceab:	jmp    rsi
   14002cead:	out    0xe6,al
   14002ceaf:	jmp    rsi
   14002ceb1:	out    0xe6,al
   14002ceb3:	jmp    rsi
   14002ceb5:	out    0xe6,al
   14002ceb7:	jmp    rsi
   14002ceb9:	out    0xe6,al
   14002cebb:	jmp    rsi
   14002cebd:	out    0xe6,al
   14002cebf:	call   rax
   14002cec1:	retf   0xffc2
   14002cec4:	scas   al,BYTE PTR es:[rdi]
   14002cec5:	sahf   
   14002cec6:	mov    edi,edi
   14002cec8:	xchg   edx,eax
   14002cec9:	jl     0x14002cf2a
   14002cecb:	inc    DWORD PTR [rdi-0x7800b394]
   14002ced1:	ins    BYTE PTR es:[rdi],dx
   14002ced2:	rex.WR inc QWORD PTR [rdi-0x7100b294]
   14002ced9:	jne    0x14002cf33
   14002cedb:	dec    DWORD PTR [rsi-0x7100a88b]
   14002cee1:	jne    0x14002cf3a
   14002cee3:	dec    DWORD PTR [rbp-0x7500a88c]
   14002cee9:	jo     0x14002cf3b
   14002ceeb:	inc    DWORD PTR [rdi-0x7800b394]
   14002cef1:	ins    BYTE PTR es:[rdi],dx
   14002cef2:	rex.WR inc QWORD PTR [rdi-0x7000b394]
   14002cef9:	ja     0x14002cf54
   14002cefb:	jmp    QWORD PTR [rsi-0x2900816c]
   14002cf01:	ror    ebx,1
   14002cf03:	jmp    rsp
   14002cf05:	jrcxz  0x14002cee9
   14002cf07:	inc    edi
   14002cf09:	mov    esi,0x9cadffb2
   14002cf0e:	mov    bh,bh
   14002cf10:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002cf11:	xchg   esp,eax
   14002cf12:	jge    0x14002cf13
   14002cf14:	ret    0xabb8
   14002cf17:	jmp    rsi
   14002cf19:	out    0xe5,al
   14002cf1b:	jmp    rsi
   14002cf1d:	out    0xe6,al
   14002cf1f:	jmp    rsi
   14002cf21:	out    0xe6,al
   14002cf23:	jmp    rsi
   14002cf25:	out    0xe6,al
   14002cf27:	jmp    rsi
   14002cf29:	out    0xe6,al
   14002cf2b:	jmp    rsi
   14002cf2d:	out    0xe6,al
   14002cf2f:	jmp    rsi
   14002cf31:	out    0xe6,al
   14002cf33:	jmp    rbp
   14002cf35:	in     eax,0xe5
   14002cf37:	jmp    rbp
   14002cf39:	in     eax,0xe5
   14002cf3b:	jmp    rbp
   14002cf3d:	in     eax,0xe5
   14002cf3f:	call   rdi
   14002cf41:	xlat   BYTE PTR ds:[rbx]
   14002cf42:	xlat   BYTE PTR ds:[rbx]
   14002cf43:	inc    DWORD PTR [rdi-0x7500a98e]
   14002cf49:	jne    0x14002cfa3
   14002cf4b:	(bad)  
   14002cf4c:	fcomp  st(0)
   14002cf4e:	fdivr  st,st(7)
   14002cf50:	out    0xe6,al
   14002cf52:	out    0xff,al
   14002cf54:	out    0xe6,al
   14002cf56:	out    0xff,al
   14002cf58:	out    0xe6,al
   14002cf5a:	out    0xff,al
   14002cf5c:	out    0xe6,al
   14002cf5e:	out    0xff,al
   14002cf60:	out    0xe6,al
   14002cf62:	out    0xff,al
   14002cf64:	out    0xe6,al
   14002cf66:	out    0xff,al
   14002cf68:	out    0xe6,al
   14002cf6a:	out    0xff,al
   14002cf6c:	out    0xe6,al
   14002cf6e:	out    0xff,al
   14002cf70:	out    0xe6,al
   14002cf72:	out    0xff,al
   14002cf74:	out    0xe6,al
   14002cf76:	out    0xff,al
   14002cf78:	out    0xe6,al
   14002cf7a:	out    0xff,al
   14002cf7c:	out    0xe6,al
   14002cf7e:	out    0xff,al
   14002cf80:	mov    bh,0xaa
   14002cf82:	cdq    
   14002cf83:	inc    DWORD PTR [rdi-0x6a00b394]
   14002cf89:	jg     0x14002cfee
   14002cf8b:	jmp    FWORD PTR [rdi-0x46007360]
   14002cf91:	stos   DWORD PTR es:[rdi],eax
   14002cf92:	fwait
   14002cf93:	(bad)  
   14002cf94:	mov    esi,0xcaffa5b3
   14002cf99:	shl    DWORD PTR [rdi-0x4a3f3701],0xff
   14002cfa0:	leave  
   14002cfa1:	shl    BYTE PTR [rbp-0x4a3f3601],0xff
   14002cfa8:	ret    
   14002cfa9:	mov    ecx,0xacbaffac
   14002cfae:	pushf  
   14002cfaf:	push   QWORD PTR [rbp-0x52006a59]
   14002cfb5:	pushf  
   14002cfb6:	mov    bh,bh
   14002cfb8:	movabs ds:0xdfff99aab7ff7991,eax
   14002cfc1:	(bad)  
   14002cfc3:	jmp    rsi
   14002cfc5:	out    0xe6,al
   14002cfc7:	jmp    rbp
   14002cfc9:	in     eax,0xe3
   14002cfcb:	call   rsi
   14002cfcd:	ror    ebx,1
   14002cfcf:	jmp    FWORD PTR [rsi-0x74007461]
   14002cfd5:	jno    0x14002d02a
   14002cfd7:	jmp    FWORD PTR [rsi-0x1f007462]
   14002cfdd:	(bad)  
   14002cfdf:	jmp    rsi
   14002cfe1:	out    0xe6,al
   14002cfe3:	jmp    rsi
   14002cfe5:	out    0xe6,al
   14002cfe7:	jmp    rsi
   14002cfe9:	out    0xe6,al
   14002cfeb:	jmp    rsi
   14002cfed:	out    0xe6,al
   14002cfef:	jmp    rsi
   14002cff1:	out    0xe6,al
   14002cff3:	jmp    rsi
   14002cff5:	out    0xe6,al
   14002cff7:	jmp    rsi
   14002cff9:	out    0xe6,al
   14002cffb:	jmp    rsi
   14002cffd:	out    0xe6,al
   14002cfff:	(bad)  
   14002d000:	fcomp  st(0)
   14002d002:	fdivr  st,st(7)
   14002d004:	mov    dh,BYTE PTR [rbp+0x58]
   14002d007:	dec    DWORD PTR [rdi+rsi*2-0x272700a5]
   14002d00e:	fdivr  st,st(7)
   14002d010:	out    0xe6,al
   14002d012:	out    0xff,al
   14002d014:	out    0xe6,al
   14002d016:	out    0xff,al
   14002d018:	out    0xe6,al
   14002d01a:	out    0xff,al
   14002d01c:	out    0xe6,al
   14002d01e:	out    0xff,al
   14002d020:	out    0xe7,eax
   14002d022:	out    0xff,eax
   14002d024:	out    0xe7,eax
   14002d026:	out    0xff,eax
   14002d028:	out    0xe7,eax
   14002d02a:	out    0xff,eax
   14002d02c:	out    0xe7,eax
   14002d02e:	out    0xff,eax
   14002d030:	out    0xe7,eax
   14002d032:	out    0xff,eax
   14002d034:	out    0xe7,eax
   14002d036:	out    0xff,eax
   14002d038:	out    0xe7,eax
   14002d03a:	out    0xff,eax
   14002d03c:	out    0xe7,eax
   14002d03e:	out    0xff,eax
   14002d040:	(bad)  
   14002d042:	sar    bh,1
   14002d044:	mov    cl,0xa1
   14002d046:	(bad)  
   14002d047:	(bad)  
   14002d048:	mov    ecx,0xe7ff9bac
   14002d04d:	out    0xe7,eax
   14002d04f:	jmp    rdi
   14002d051:	out    0xe7,eax
   14002d053:	jmp    rdi
   14002d055:	out    0xe7,eax
   14002d057:	jmp    rdi
   14002d059:	out    0xe7,eax
   14002d05b:	jmp    rdi
   14002d05d:	out    0xe7,eax
   14002d05f:	jmp    rdi
   14002d061:	out    0xe7,eax
   14002d063:	jmp    rdi
   14002d065:	out    0xe7,eax
   14002d067:	jmp    rdi
   14002d069:	out    0xe7,eax
   14002d06b:	jmp    rdi
   14002d06d:	out    0xe7,eax
   14002d06f:	jmp    rdi
   14002d071:	out    0xe7,eax
   14002d073:	jmp    rdi
   14002d075:	out    0xe7,eax
   14002d077:	jmp    rdx
   14002d079:	loopne 0x14002d059
   14002d07b:	jmp    rsi
   14002d07d:	in     eax,0xe4
   14002d07f:	jmp    rdi
   14002d081:	out    0xe7,eax
   14002d083:	jmp    rdi
   14002d085:	out    0xe7,eax
   14002d087:	jmp    rdi
   14002d089:	out    0xe7,eax
   14002d08b:	jmp    rdi
   14002d08d:	out    0xe7,eax
   14002d08f:	jmp    rbx
   14002d091:	loop   0x14002d074
   14002d093:	push   QWORD PTR [rbp+riz*4+0x6c87ff92]
   14002d09a:	rex.WR jmp FWORD PTR [rdx+rbx*4-0x2f2a007b]
   14002d0a2:	leave  
   14002d0a3:	jmp    rdi
   14002d0a5:	out    0xe7,eax
   14002d0a7:	jmp    rdi
   14002d0a9:	out    0xe7,eax
   14002d0ab:	jmp    rdi
   14002d0ad:	out    0xe7,eax
   14002d0af:	jmp    rdi
   14002d0b1:	out    0xe7,eax
   14002d0b3:	jmp    rsi
   14002d0b5:	out    0xe6,al
   14002d0b7:	jmp    rsi
   14002d0b9:	out    0xe6,al
   14002d0bb:	jmp    rsi
   14002d0bd:	out    0xe6,al
   14002d0bf:	(bad)  
   14002d0c0:	fcomp  st(0)
   14002d0c2:	fdivr  st,st(7)
   14002d0c4:	mov    WORD PTR [rdi+0x5b],?
   14002d0c7:	dec    DWORD PTR [rsi-0x2600a287]
   14002d0cd:	(bad)  
   14002d0cf:	jmp    rdi
   14002d0d1:	out    0xe7,eax
   14002d0d3:	jmp    rdi
   14002d0d5:	out    0xe7,eax
   14002d0d7:	jmp    rdi
   14002d0d9:	out    0xe7,eax
   14002d0db:	jmp    rdi
   14002d0dd:	out    0xe7,eax
   14002d0df:	(bad)  
   14002d0e0:	call   0x12902b9cd
   14002d0e5:	call   0x128ebd0d2
   14002d0ea:	call   0x128ebb9ee
   14002d0ef:	(bad)  
   14002d0f0:	call   0x12902b9dd
   14002d0f5:	call   0x128ebd0e2
   14002d0fa:	call   0x128ebb9fe
   14002d0ff:	(bad)  
   14002d100:	call   0x12502b9ed
   14002d105:	in     al,0xe2
   14002d107:	dec    edi
   14002d109:	enter  0xffbf,0xd3
   14002d10d:	int    0xc6
   14002d10f:	call   rbx
   14002d111:	(bad)  
   14002d112:	(bad)  
   14002d113:	call   rbx
   14002d115:	(bad)  
   14002d116:	(bad)  
   14002d117:	call   rbx
   14002d119:	int    0xc6
   14002d11b:	call   rbx
   14002d11d:	int    0xc6
   14002d11f:	call   rbx
   14002d121:	int    0xc6
   14002d123:	call   rdx
   14002d125:	retf   
   14002d126:	(bad)  
   14002d127:	call   rdi
   14002d129:	ror    ah,cl
   14002d12b:	jmp    rsi
   14002d12d:	out    0xe4,al
   14002d12f:	(bad)  
   14002d130:	call   0x12902b91d
   14002d135:	call   0x128ebd122
   14002d13a:	call   0x128ebba3e
   14002d13f:	(bad)  
   14002d140:	call   0x12902ba2d
   14002d145:	call   0x128ebd132
   14002d14a:	call   0x128ebba4e
   14002d14f:	(bad)  
   14002d150:	call   0x12702ba3d
   14002d155:	in     eax,0xe4
   14002d157:	jmp    QWORD PTR [rdx+rdx*4+0x6f89ff7a]
   14002d15e:	rex.WRXB jmp QWORD PTR [r10-0x17008971]
   14002d165:	call   0x128ebd152
   14002d16a:	call   0x128ebba6e
   14002d16f:	(bad)  
   14002d170:	call   0x12802ba5d
   14002d175:	out    0xe7,eax
   14002d177:	jmp    rdi
   14002d179:	out    0xe7,eax
   14002d17b:	jmp    rdi
   14002d17d:	out    0xe7,eax
   14002d17f:	(bad)  
   14002d180:	(bad)  
   14002d182:	fcos   
   14002d184:	mov    ?,WORD PTR [rcx+0x5d]
   14002d187:	call   QWORD PTR [rax-0x25009f84]
   14002d18d:	fcmovu st,st(2)
   14002d18f:	(bad)  
   14002d190:	call   0x12902ba7d
   14002d195:	call   0x128ebd182
   14002d19a:	call   0x128ebba9e
   14002d19f:	(bad)  
   14002d1a0:	jmp    0x12a02bb8e
   14002d1a5:	jmp    0x129ecd193
   14002d1aa:	jmp    0x129ecbbae
   14002d1af:	(bad)  
   14002d1b0:	jmp    0x11c02bb9e
   14002d1b5:	fcom   st(2)
   14002d1b7:	inc    ecx
   14002d1b9:	mov    bh,0xa9
   14002d1bb:	push   QWORD PTR [rcx-0x6000715e]
   14002d1c1:	mov    esi,DWORD PTR [rbx-0x1]
   14002d1c4:	(bad)  
   14002d1c5:	test   BYTE PTR [rcx-0x1],ch
   14002d1c8:	cdq    
   14002d1c9:	sub    DWORD PTR [rax-0x1],0xffffff96
   14002d1cd:	jg     0x14002d232
   14002d1cf:	call   QWORD PTR [rsi-0x69009c81]
   14002d1d5:	jg     0x14002d23a
   14002d1d7:	call   QWORD PTR [rsi-0x69009c81]
   14002d1dd:	jg     0x14002d242
   14002d1df:	call   QWORD PTR [rbp-0x69009b81]
   14002d1e5:	jg     0x14002d24a
   14002d1e7:	jmp    QWORD PTR [rdx-0x5d00a27d]
   14002d1ed:	xchg   DWORD PTR [rsi-0x1],esp
   14002d1f0:	cwde   
   14002d1f1:	test   DWORD PTR [rsi-0x1],ebp
   14002d1f4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002d1f5:	xchg   ebx,eax
   14002d1f6:	jge    0x14002d1f7
   14002d1f8:	mov    cl,0xa1
   14002d1fa:	mov    ?,edi
   14002d1fc:	shl    BYTE PTR [rsi+riz*4-0x3c342d01],0xff
   14002d204:	jrcxz  0x14002d1e7
   14002d206:	fdivp  st(7),st
   14002d208:	jmp    0x12a02bbf6
   14002d20d:	jmp    0x129ecd1fb
   14002d212:	jmp    0x129ecbc16
   14002d217:	dec    edx
   14002d219:	ret    0xffb8
   14002d21c:	mov    esi,DWORD PTR [rcx+0x52]
   14002d21f:	dec    DWORD PTR [rdx-0x1600af90]
   14002d225:	jmp    0x129ecd213
   14002d22a:	jmp    0x129ecbc2e
   14002d22f:	(bad)  
   14002d230:	jmp    0x12902bc1e
   14002d235:	call   0x128ebd222
   14002d23a:	call   0x128ebbb3e
   14002d23f:	(bad)  
   14002d240:	fcmovu st,st(2)
   14002d242:	(bad)  
   14002d244:	nop
   14002d245:	jl     0x14002d2a7
   14002d247:	call   QWORD PTR [rbx-0x24009c82]
   14002d24d:	fcmovnu st,st(3)
   14002d24f:	(bad)  
   14002d250:	jmp    0x12a02bc3e
   14002d255:	jmp    0x129ecd243
   14002d25a:	jmp    0x129ecbc5e
   14002d25f:	(bad)  
   14002d260:	(bad)  
   14002d261:	(bad)  
   14002d262:	(bad)  
   14002d263:	(bad)  
   14002d264:	(bad)  
   14002d265:	(bad)  
   14002d266:	(bad)  
   14002d267:	(bad)  
   14002d268:	(bad)  
   14002d269:	(bad)  
   14002d26a:	(bad)  
   14002d26b:	(bad)  
   14002d26c:	(bad)  
   14002d26d:	(bad)  
   14002d26e:	(bad)  
   14002d26f:	(bad)  
   14002d270:	jmp    0xf402bc5e
   14002d275:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002d276:	xchg   ecx,eax
   14002d277:	dec    DWORD PTR [rbx-0x7700ac8f]
   14002d27d:	ins    DWORD PTR es:[rdi],dx
   14002d27e:	rex.WRX dec QWORD PTR [rbx-0x4e00ab8f]
   14002d285:	movabs ds:0xc5cdffb5c0caff8e,al
   14002d28e:	mov    ebx,0xb6c1caff
   14002d293:	dec    edx
   14002d295:	shl    BYTE PTR [rdi+rdi*8-0x4b3f36],0xca
   14002d29d:	shl    BYTE PTR [rdi+rdi*8-0x4e3e33],0xcc
   14002d2a5:	mov    edi,0xbcbdffb1
   14002d2aa:	mov    eax,0xadb6bcff
   14002d2af:	inc    ebx
   14002d2b1:	lods   al,BYTE PTR ds:[rsi]
   14002d2b2:	xchg   ecx,eax
   14002d2b3:	(bad)  
   14002d2b4:	mov    eax,0xadff92a8
   14002d2b9:	sahf   
   14002d2ba:	mov    edi,edi
   14002d2bc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002d2bd:	nop
   14002d2be:	js     0x14002d2bf
   14002d2c0:	movabs ds:0xe6ffa7b5c1ff768d,al
   14002d2c9:	in     eax,0xe3
   14002d2cb:	(bad)  
   14002d2cc:	(bad)  
   14002d2cd:	(bad)  
   14002d2ce:	(bad)  
   14002d2cf:	(bad)  
   14002d2d0:	(bad)  
   14002d2d1:	(bad)  
   14002d2d2:	(bad)  
   14002d2d3:	(bad)  
   14002d2d4:	(bad)  
   14002d2d5:	(bad)  
   14002d2d6:	(bad)  
   14002d2d7:	inc    ebp
   14002d2d9:	mov    ecx,0x6f8affac
   14002d2de:	push   rcx
   14002d2df:	dec    DWORD PTR [rcx-0x1500af91]
   14002d2e5:	(bad)  
   14002d2e6:	(bad)  
   14002d2e7:	(bad)  
   14002d2e8:	(bad)  
   14002d2e9:	(bad)  
   14002d2ea:	(bad)  
   14002d2eb:	(bad)  
   14002d2ec:	(bad)  
   14002d2ed:	(bad)  
   14002d2ee:	(bad)  
   14002d2ef:	(bad)  
   14002d2f0:	(bad)  
   14002d2f1:	(bad)  
   14002d2f2:	(bad)  
   14002d2f3:	(bad)  
   14002d2f4:	jmp    0x12a02bce2
   14002d2f9:	jmp    0x129ecd2e7
   14002d2fe:	jmp    0x11bdeaf02
   14002d303:	call   QWORD PTR [rbx-0x6a009c82]
   14002d309:	and    BYTE PTR [rbp-0x1],0xdc
   14002d30d:	(bad)  
   14002d30f:	(bad)  
   14002d310:	(bad)  
   14002d311:	(bad)  
   14002d312:	(bad)  
   14002d313:	(bad)  
   14002d314:	(bad)  
   14002d315:	(bad)  
   14002d316:	(bad)  
   14002d317:	(bad)  
   14002d318:	(bad)  
   14002d319:	(bad)  
   14002d31a:	(bad)  
   14002d31b:	(bad)  
   14002d31c:	(bad)  
   14002d31d:	(bad)  
   14002d31e:	(bad)  
   14002d31f:	(bad)  
   14002d320:	jmp    0x14002d30d
   14002d322:	jmp    0x14002d323
   14002d324:	jmp    0x14002d311
   14002d326:	jmp    0x14002d327
   14002d328:	jmp    0x14002d315
   14002d32a:	jmp    0x14002d32b
   14002d32c:	jmp    0x14002d319
   14002d32e:	jmp    0x14002d32f
   14002d330:	jmp    0x14002d31d
   14002d332:	jmp    0x14002d333
   14002d334:	xlat   BYTE PTR ds:[rbx]
   14002d335:	ror    ebx,cl
   14002d337:	push   QWORD PTR [rax-0x66007360]
   14002d33d:	test   BYTE PTR [rcx-0x1],ch
   14002d340:	(bad)  
   14002d341:	test   DWORD PTR [rbx-0x1],ebp
   14002d344:	mov    bh,0xa9
   14002d346:	xchg   esi,eax
   14002d347:	call   rbx
   14002d349:	int3   
   14002d34a:	ret    
   14002d34b:	jmp    rdx
   14002d34d:	loopne 0x14002d32c
   14002d34f:	(bad)  
   14002d350:	jmp    0x14002d33d
   14002d352:	jmp    0x14002d353
   14002d354:	jmp    0x14002d341
   14002d356:	jmp    0x14002d357
   14002d358:	jmp    0x14002d345
   14002d35a:	jmp    0x14002d35b
   14002d35c:	jmp    0x14002d349
   14002d35e:	jmp    0x14002d35f
   14002d360:	jmp    0x14002d34d
   14002d362:	jmp    0x14002d363
   14002d364:	jmp    0x14002d351
   14002d366:	jmp    0x14002d367
   14002d368:	retf   0xebd8
   14002d36b:	jmp    QWORD PTR [rsi-0x19001f41]
   14002d371:	out    0xe5,al
   14002d373:	(bad)  
   14002d374:	call   0x12602b860
   14002d379:	loop   0x14002d35a
   14002d37b:	jmp    rax
   14002d37d:	(bad)  
   14002d37f:	(bad)  
   14002d380:	(bad)  
   14002d382:	sar    edi,cl
   14002d384:	fstp   st(2)
   14002d386:	(bad)  
   14002d387:	(bad)  
   14002d388:	(bad)  
   14002d38a:	xlat   BYTE PTR ds:[rbx]
   14002d38b:	(bad)  
   14002d38c:	fcmovbe st,st(5)
   14002d38e:	(bad)  
   14002d38f:	(bad)  
   14002d390:	(bad)  
   14002d392:	sar    bh,cl
   14002d394:	retf   
   14002d395:	ret    0xffb6
   14002d398:	xchg   edx,eax
   14002d399:	jp     0x14002d3f9
   14002d39b:	dec    DWORD PTR [rdi-0x4e00a78a]
   14002d3a1:	movabs eax,ds:0xebebffebebebff8e
   14002d3aa:	jmp    0x14002d3ab
   14002d3ac:	jmp    0x14002d399
   14002d3ae:	jmp    0x14002d3af
   14002d3b0:	jmp    0x14002d39d
   14002d3b2:	jmp    0x14002d3b3
   14002d3b4:	(bad)  
   14002d3b5:	(bad)  
   14002d3b6:	(bad)  
   14002d3b7:	(bad)  
   14002d3b8:	(bad)  
   14002d3b9:	(bad)  
   14002d3ba:	(bad)  
   14002d3bb:	(bad)  
   14002d3bc:	(bad)  
   14002d3bd:	(bad)  
   14002d3be:	(bad)  
   14002d3bf:	(bad)  
   14002d3c0:	(bad)  
   14002d3c2:	fdiv   st(7),st
   14002d3c4:	xchg   ebp,eax
   14002d3c5:	and    BYTE PTR [rbp-0x1],0x97
   14002d3c9:	sub    DWORD PTR [rax-0x1],0xffffffdd
   14002d3cd:	fstp   st(5)
   14002d3cf:	(bad)  
   14002d3d0:	jmp    0x14002d3bd
   14002d3d2:	jmp    0x14002d3d3
   14002d3d4:	jmp    0x14002d3c1
   14002d3d6:	jmp    0x14002d3d7
   14002d3d8:	jmp    0x14002d3c5
   14002d3da:	jmp    0x14002d3db
   14002d3dc:	jmp    0x14002d3c9
   14002d3de:	jmp    0x14002d3df
   14002d3e0:	in     eax,dx
   14002d3e1:	in     eax,dx
   14002d3e2:	in     eax,dx
   14002d3e3:	(bad)  
   14002d3e4:	in     eax,dx
   14002d3e5:	in     eax,dx
   14002d3e6:	in     eax,dx
   14002d3e7:	(bad)  
   14002d3e8:	in     eax,dx
   14002d3e9:	in     eax,dx
   14002d3ea:	in     eax,dx
   14002d3eb:	(bad)  
   14002d3ec:	in     eax,dx
   14002d3ed:	in     eax,dx
   14002d3ee:	in     eax,dx
   14002d3ef:	(bad)  
   14002d3f0:	in     eax,dx
   14002d3f1:	in     eax,dx
   14002d3f2:	in     eax,dx
   14002d3f3:	(bad)  
   14002d3f4:	in     eax,dx
   14002d3f5:	in     eax,dx
   14002d3f6:	in     eax,dx
   14002d3f7:	(bad)  
   14002d3f8:	call   0x12202bae4
   14002d3fd:	fstp   st(1)
   14002d3ff:	dec    edx
   14002d401:	shl    DWORD PTR [rsi-0x6a574801],0xff
   14002d408:	mov    edx,0xc7ff9aac
   14002d40d:	mov    ebp,0xd6dbffb1
   14002d412:	iret   
   14002d413:	(bad)  
   14002d414:	in     eax,dx
   14002d415:	in     eax,dx
   14002d416:	in     eax,dx
   14002d417:	(bad)  
   14002d418:	in     eax,dx
   14002d419:	in     eax,dx
   14002d41a:	in     eax,dx
   14002d41b:	(bad)  
   14002d41c:	in     eax,dx
   14002d41d:	in     eax,dx
   14002d41e:	in     eax,dx
   14002d41f:	(bad)  
   14002d420:	fsubr  st(2),st
   14002d422:	jmp    0x12de2a926
   14002d427:	jmp    rax
   14002d429:	out    0xed,al
   14002d42b:	jmp    FWORD PTR [rdx-0x5c]
   14002d42e:	in     eax,dx
   14002d42f:	jmp    QWORD PTR [rax-0x68]
   14002d432:	in     al,0xff
   14002d434:	in     al,0xe8
   14002d436:	in     eax,dx
   14002d437:	(bad)  
   14002d438:	in     eax,dx
   14002d439:	in     eax,dx
   14002d43a:	in     eax,dx
   14002d43b:	(bad)  
   14002d43c:	in     eax,dx
   14002d43d:	in     eax,dx
   14002d43e:	in     eax,dx
   14002d43f:	(bad)  
   14002d440:	in     eax,dx
   14002d441:	in     eax,dx
   14002d442:	in     eax,dx
   14002d443:	(bad)  
   14002d444:	in     eax,dx
   14002d445:	in     eax,dx
   14002d446:	in     eax,dx
   14002d447:	jmp    rsp
   14002d449:	loop   0x14002d42b
   14002d44b:	dec    edx
   14002d44d:	shl    BYTE PTR [rbp-0x6c594a01],0xff
   14002d454:	sahf   
   14002d455:	mov    BYTE PTR [rax-0x1],dh
   14002d458:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002d459:	xchg   ebx,eax
   14002d45a:	jl     0x14002d45b
   14002d45c:	retf   
   14002d45d:	ret    0xffb8
   14002d460:	out    0xe6,eax
   14002d462:	jrcxz  0x14002d463
   14002d464:	in     eax,dx
   14002d465:	in     eax,dx
   14002d466:	in     eax,dx
   14002d467:	(bad)  
   14002d468:	in     eax,dx
   14002d469:	in     eax,dx
   14002d46a:	in     eax,dx
   14002d46b:	(bad)  
   14002d46c:	in     eax,dx
   14002d46d:	in     eax,dx
   14002d46e:	in     eax,dx
   14002d46f:	(bad)  
   14002d470:	in     eax,dx
   14002d471:	in     eax,dx
   14002d472:	in     eax,dx
   14002d473:	(bad)  
   14002d474:	jmp    0x14002d461
   14002d476:	jmp    0x14002d477
   14002d478:	jmp    0x14002d465
   14002d47a:	jmp    0x14002d47b
   14002d47c:	jmp    0x14002d469
   14002d47e:	jmp    0x14002d47f
   14002d480:	fstp   st(5)
   14002d482:	(bad)  
   14002d484:	xchg   edi,eax
   14002d485:	sub    DWORD PTR [rax-0x1],0xffffff9a
   14002d489:	test   DWORD PTR [rbx-0x1],ebp
   14002d48c:	(bad)  
   14002d48e:	fdivp  st(7),st
   14002d490:	in     al,dx
   14002d491:	in     al,dx
   14002d492:	in     al,dx
   14002d493:	(bad)  
   14002d494:	in     eax,dx
   14002d495:	in     eax,dx
   14002d496:	in     eax,dx
   14002d497:	(bad)  
   14002d498:	in     eax,dx
   14002d499:	in     eax,dx
   14002d49a:	in     eax,dx
   14002d49b:	(bad)  
   14002d49c:	in     eax,dx
   14002d49d:	in     eax,dx
   14002d49e:	in     eax,dx
   14002d49f:	(bad)  
   14002d4a0:	out    dx,al
   14002d4a1:	out    dx,al
   14002d4a2:	out    dx,al
   14002d4a3:	(bad)  
   14002d4a4:	out    dx,al
   14002d4a5:	out    dx,al
   14002d4a6:	out    dx,al
   14002d4a7:	(bad)  
   14002d4a8:	out    dx,al
   14002d4a9:	out    dx,al
   14002d4aa:	out    dx,al
   14002d4ab:	(bad)  
   14002d4ac:	out    dx,al
   14002d4ad:	out    dx,al
   14002d4ae:	out    dx,al
   14002d4af:	(bad)  
   14002d4b0:	out    dx,al
   14002d4b1:	out    dx,al
   14002d4b2:	out    dx,al
   14002d4b3:	(bad)  
   14002d4b4:	out    dx,al
   14002d4b5:	out    dx,al
   14002d4b6:	out    dx,al
   14002d4b7:	(bad)  
   14002d4b8:	out    dx,al
   14002d4b9:	out    dx,al
   14002d4ba:	out    dx,al
   14002d4bb:	(bad)  
   14002d4bc:	out    dx,al
   14002d4bd:	out    dx,al
   14002d4be:	out    dx,al
   14002d4bf:	(bad)  
   14002d4c0:	in     eax,dx
   14002d4c1:	in     al,dx
   14002d4c2:	jmp    0x14002d4c3
   14002d4c4:	jmp    0x12802bbb1
   14002d4c9:	out    0xe3,al
   14002d4cb:	jmp    rdx
   14002d4cd:	(bad)  
   14002d4cf:	jmp    rsp
   14002d4d1:	loope  0x14002d4af
   14002d4d3:	(bad)  
   14002d4d4:	out    dx,al
   14002d4d5:	out    dx,al
   14002d4d6:	out    dx,al
   14002d4d7:	(bad)  
   14002d4d8:	out    dx,al
   14002d4d9:	out    dx,al
   14002d4da:	out    dx,al
   14002d4db:	call   rbp
   14002d4dd:	loopne 0x14002d4cf
   14002d4df:	jmp    FWORD PTR [rbp+riz*4-0x15]
   14002d4e3:	push   QWORD PTR [rbp-0x11001232]
   14002d4e9:	out    dx,al
   14002d4ea:	out    dx,al
   14002d4eb:	call   QWORD PTR [rdi+0xbffebbe]
   14002d4f1:	push   0xffffffffad7affe7
   14002d4f6:	icebp  
   14002d4f7:	(bad)  
   14002d4f8:	out    dx,al
   14002d4f9:	out    dx,al
   14002d4fa:	out    dx,al
   14002d4fb:	(bad)  
   14002d4fc:	out    dx,al
   14002d4fd:	out    dx,al
   14002d4fe:	out    dx,al
   14002d4ff:	(bad)  
   14002d500:	out    dx,al
   14002d501:	out    dx,al
   14002d502:	out    dx,al
   14002d503:	(bad)  
   14002d504:	out    dx,al
   14002d505:	out    dx,al
   14002d506:	out    dx,al
   14002d507:	(bad)  
   14002d508:	out    dx,al
   14002d509:	out    dx,al
   14002d50a:	in     eax,dx
   14002d50b:	(bad)  
   14002d50c:	call   0x11902b8f7
   14002d511:	ror    ebx,cl
   14002d513:	call   rsi
   14002d515:	ror    al,1
   14002d517:	jmp    rdi
   14002d519:	in     eax,0xe2
   14002d51b:	(bad)  
   14002d51c:	in     eax,dx
   14002d51d:	in     eax,dx
   14002d51e:	in     eax,dx
   14002d51f:	(bad)  
   14002d520:	out    dx,al
   14002d521:	out    dx,al
   14002d522:	out    dx,al
   14002d523:	(bad)  
   14002d524:	out    dx,al
   14002d525:	out    dx,al
   14002d526:	out    dx,al
   14002d527:	(bad)  
   14002d528:	out    dx,al
   14002d529:	out    dx,al
   14002d52a:	out    dx,al
   14002d52b:	(bad)  
   14002d52c:	out    dx,al
   14002d52d:	out    dx,al
   14002d52e:	out    dx,al
   14002d52f:	(bad)  
   14002d530:	out    dx,al
   14002d531:	out    dx,al
   14002d532:	out    dx,al
   14002d533:	(bad)  
   14002d534:	in     eax,dx
   14002d535:	in     eax,dx
   14002d536:	in     eax,dx
   14002d537:	(bad)  
   14002d538:	in     eax,dx
   14002d539:	in     eax,dx
   14002d53a:	in     eax,dx
   14002d53b:	(bad)  
   14002d53c:	in     al,dx
   14002d53d:	in     al,dx
   14002d53e:	in     al,dx
   14002d53f:	(bad)  
   14002d540:	(bad)  
   14002d542:	fdivp  st(7),st
   14002d544:	(bad)  
   14002d545:	test   DWORD PTR [rbx-0x1],ebp
   14002d548:	lahf   
   14002d549:	mov    dh,BYTE PTR [rax-0x1]
   14002d54c:	loopne 0x14002d52e
   14002d54e:	loopne 0x14002d54f
   14002d550:	out    dx,al
   14002d551:	out    dx,al
   14002d552:	out    dx,al
   14002d553:	(bad)  
   14002d554:	out    dx,eax
   14002d555:	out    dx,eax
   14002d556:	out    dx,eax
   14002d557:	(bad)  
   14002d558:	out    dx,eax
   14002d559:	out    dx,eax
   14002d55a:	out    dx,eax
   14002d55b:	(bad)  
   14002d55c:	out    dx,eax
   14002d55d:	out    dx,eax
   14002d55e:	out    dx,eax
   14002d55f:	(bad)  
   14002d560:	out    dx,eax
   14002d561:	out    dx,eax
   14002d562:	out    dx,eax
   14002d563:	(bad)  
   14002d564:	out    dx,eax
   14002d565:	out    dx,eax
   14002d566:	out    dx,eax
   14002d567:	(bad)  
   14002d568:	out    dx,eax
   14002d569:	out    dx,eax
   14002d56a:	out    dx,eax
   14002d56b:	(bad)  
   14002d56c:	out    dx,eax
   14002d56d:	out    dx,eax
   14002d56e:	out    dx,eax
   14002d56f:	(bad)  
   14002d570:	out    dx,eax
   14002d571:	out    dx,eax
   14002d572:	out    dx,eax
   14002d573:	(bad)  
   14002d574:	out    dx,eax
   14002d575:	out    dx,eax
   14002d576:	out    dx,eax
   14002d577:	(bad)  
   14002d578:	out    dx,eax
   14002d579:	out    dx,eax
   14002d57a:	out    dx,eax
   14002d57b:	(bad)  
   14002d57c:	out    dx,eax
   14002d57d:	out    dx,eax
   14002d57e:	out    dx,eax
   14002d57f:	(bad)  
   14002d580:	out    dx,eax
   14002d581:	out    dx,eax
   14002d582:	out    dx,eax
   14002d583:	(bad)  
   14002d584:	out    dx,eax
   14002d585:	out    dx,eax
   14002d586:	out    dx,eax
   14002d587:	(bad)  
   14002d588:	out    dx,eax
   14002d589:	out    dx,eax
   14002d58a:	out    dx,eax
   14002d58b:	(bad)  
   14002d58c:	out    dx,eax
   14002d58d:	out    dx,eax
   14002d58e:	out    dx,eax
   14002d58f:	(bad)  
   14002d590:	out    dx,eax
   14002d591:	out    dx,eax
   14002d592:	out    dx,al
   14002d593:	(bad)  
   14002d594:	out    dx,eax
   14002d595:	out    dx,eax
   14002d596:	out    dx,eax
   14002d597:	(bad)  
   14002d598:	fsub   st,st(2)
   14002d59a:	out    dx,eax
   14002d59b:	call   QWORD PTR [rdx-0x6a]
   14002d59e:	call   0x12aac48a2
   14002d5a3:	(bad)  
   14002d5a4:	(bad)  
   14002d5a5:	in     al,dx
   14002d5a6:	out    dx,eax
   14002d5a7:	(bad)  
   14002d5a8:	out    dx,eax
   14002d5a9:	out    dx,eax
   14002d5aa:	out    dx,eax
   14002d5ab:	call   QWORD PTR [rdi+0x8ffecbe]
   14002d5b1:	addr32 in al,0xff
   14002d5b4:	xor    eax,DWORD PTR [rbx-0x27390019]
   14002d5ba:	in     eax,dx
   14002d5bb:	(bad)  
   14002d5bc:	out    dx,eax
   14002d5bd:	out    dx,eax
   14002d5be:	out    dx,eax
   14002d5bf:	(bad)  
   14002d5c0:	out    dx,eax
   14002d5c1:	out    dx,eax
   14002d5c2:	out    dx,eax
   14002d5c3:	(bad)  
   14002d5c4:	out    dx,eax
   14002d5c5:	out    dx,eax
   14002d5c6:	out    dx,eax
   14002d5c7:	(bad)  
   14002d5c8:	out    dx,eax
   14002d5c9:	out    dx,eax
   14002d5ca:	out    dx,eax
   14002d5cb:	(bad)  
   14002d5cc:	out    dx,eax
   14002d5cd:	out    dx,eax
   14002d5ce:	out    dx,eax
   14002d5cf:	(bad)  
   14002d5d0:	out    dx,eax
   14002d5d1:	out    dx,eax
   14002d5d2:	out    dx,al
   14002d5d3:	(bad)  
   14002d5d4:	out    dx,eax
   14002d5d5:	out    dx,eax
   14002d5d6:	out    dx,eax
   14002d5d7:	(bad)  
   14002d5d8:	out    dx,eax
   14002d5d9:	out    dx,eax
   14002d5da:	out    dx,eax
   14002d5db:	(bad)  
   14002d5dc:	out    dx,eax
   14002d5dd:	out    dx,eax
   14002d5de:	out    dx,eax
   14002d5df:	(bad)  
   14002d5e0:	out    dx,eax
   14002d5e1:	out    dx,eax
   14002d5e2:	out    dx,eax
   14002d5e3:	(bad)  
   14002d5e4:	out    dx,eax
   14002d5e5:	out    dx,eax
   14002d5e6:	out    dx,eax
   14002d5e7:	(bad)  
   14002d5e8:	out    dx,eax
   14002d5e9:	out    dx,eax
   14002d5ea:	out    dx,eax
   14002d5eb:	(bad)  
   14002d5ec:	out    dx,eax
   14002d5ed:	out    dx,eax
   14002d5ee:	out    dx,eax
   14002d5ef:	(bad)  
   14002d5f0:	out    dx,eax
   14002d5f1:	out    dx,eax
   14002d5f2:	out    dx,eax
   14002d5f3:	(bad)  
   14002d5f4:	out    dx,eax
   14002d5f5:	out    dx,eax
   14002d5f6:	out    dx,eax
   14002d5f7:	(bad)  
   14002d5f8:	out    dx,eax
   14002d5f9:	out    dx,eax
   14002d5fa:	out    dx,eax
   14002d5fb:	(bad)  
   14002d5fc:	out    dx,al
   14002d5fd:	out    dx,al
   14002d5fe:	out    dx,al
   14002d5ff:	jmp    rax
   14002d601:	loopne 0x14002d5e3
   14002d603:	call   FWORD PTR [rdi-0x5e008f76]
   14002d609:	lea    esi,[rbx-0x1]
   14002d60c:	loope  0x14002d5ef
   14002d60e:	loope  0x14002d60f
   14002d610:	out    dx,eax
   14002d611:	out    dx,eax
   14002d612:	out    dx,eax
   14002d613:	push   rax
   14002d615:	lock lock push rax
   14002d619:	lock lock push rax
   14002d61d:	lock lock push rax
   14002d621:	lock lock push rax
   14002d625:	lock lock push rax
   14002d629:	lock lock push rax
   14002d62d:	lock lock push rax
   14002d631:	lock lock push rax
   14002d635:	lock lock push rax
   14002d639:	lock lock push rax
   14002d63d:	lock lock push rax
   14002d641:	lock lock push rax
   14002d645:	lock lock push rax
   14002d649:	lock lock push rax
   14002d64d:	lock lock push rax
   14002d651:	lock lock (bad) 
   14002d654:	(bad)  
   14002d656:	lock dec DWORD PTR [rsi-0x6d]
   14002d65a:	out    0xff,eax
   14002d65c:	rex.XB (bad) 
   14002d65e:	out    0xff,eax
   14002d660:	(bad)  
   14002d662:	lock push rax
   14002d665:	lock lock dec eax
   14002d669:	fucomi st,st(6)
   14002d66b:	push   QWORD PTR [rsi]
   14002d66d:	test   edi,esp
   14002d66f:	dec    DWORD PTR [rdx]
   14002d671:	push   0x7925ffe4
   14002d676:	in     eax,0xff
   14002d678:	mov    al,0xcc
   14002d67a:	in     eax,dx
   14002d67b:	push   rax
   14002d67d:	lock lock push rax
   14002d681:	lock lock push rax
   14002d685:	lock lock push rax
   14002d689:	lock lock push rax
   14002d68d:	lock lock push rax
   14002d691:	lock lock push rax
   14002d695:	lock lock push rax
   14002d699:	lock lock push rax
   14002d69d:	lock lock push rax
   14002d6a1:	lock lock push rax
   14002d6a5:	lock lock push rax
   14002d6a9:	lock lock push rax
   14002d6ad:	lock lock push rax
   14002d6b1:	lock lock push rax
   14002d6b5:	lock lock push rax
   14002d6b9:	lock lock (bad) 
   14002d6bc:	out    dx,eax
   14002d6bd:	out    dx,eax
   14002d6be:	out    dx,eax
   14002d6bf:	jmp    rcx
   14002d6c1:	loope  0x14002d6a4
   14002d6c3:	jmp    QWORD PTR [rcx-0x5c008c73]
   14002d6c9:	(bad)  
   14002d6ca:	jne    0x14002d6cb
   14002d6cc:	loop   0x14002d6b0
   14002d6ce:	loop   0x14002d6cf
   14002d6d0:	lock lock lock push rcx
   14002d6d5:	icebp  
   14002d6d6:	icebp  
   14002d6d7:	push   rcx
   14002d6d9:	icebp  
   14002d6da:	icebp  
   14002d6db:	push   rcx
   14002d6dd:	icebp  
   14002d6de:	icebp  
   14002d6df:	push   rcx
   14002d6e1:	icebp  
   14002d6e2:	icebp  
   14002d6e3:	push   rcx
   14002d6e5:	icebp  
   14002d6e6:	icebp  
   14002d6e7:	push   rcx
   14002d6e9:	icebp  
   14002d6ea:	icebp  
   14002d6eb:	push   rcx
   14002d6ed:	icebp  
   14002d6ee:	icebp  
   14002d6ef:	push   rcx
   14002d6f1:	icebp  
   14002d6f2:	icebp  
   14002d6f3:	push   rcx
   14002d6f5:	icebp  
   14002d6f6:	icebp  
   14002d6f7:	push   rcx
   14002d6f9:	icebp  
   14002d6fa:	icebp  
   14002d6fb:	push   rcx
   14002d6fd:	icebp  
   14002d6fe:	icebp  
   14002d6ff:	push   rcx
   14002d701:	icebp  
   14002d702:	icebp  
   14002d703:	push   rcx
   14002d705:	icebp  
   14002d706:	icebp  
   14002d707:	push   rcx
   14002d709:	icebp  
   14002d70a:	icebp  
   14002d70b:	push   rcx
   14002d70d:	icebp  
   14002d70e:	icebp  
   14002d70f:	jmp    rsi
   14002d711:	jmp    0x14002d704
   14002d713:	call   FWORD PTR [rdi-0x62]
   14002d716:	jmp    0x12575f31a
   14002d71b:	push   QWORD PTR [rcx-0xe001133]
   14002d721:	icebp  
   14002d722:	icebp  
   14002d723:	jmp    rax
   14002d725:	out    0xf0,eax
   14002d727:	call   FWORD PTR [rsi-0x62]
   14002d72a:	jmp    0x1246ce52e
   14002d72f:	dec    DWORD PTR [rip+0x3affe46a]        # 0x17b02bb9f
   14002d735:	mov    bh,ah
   14002d737:	inc    esi
   14002d739:	(bad)  
   14002d73b:	push   rcx
   14002d73d:	icebp  
   14002d73e:	icebp  
   14002d73f:	push   rcx
   14002d741:	icebp  
   14002d742:	icebp  
   14002d743:	push   rcx
   14002d745:	icebp  
   14002d746:	icebp  
   14002d747:	push   rcx
   14002d749:	icebp  
   14002d74a:	icebp  
   14002d74b:	push   rcx
   14002d74d:	icebp  
   14002d74e:	icebp  
   14002d74f:	push   rcx
   14002d751:	icebp  
   14002d752:	icebp  
   14002d753:	push   rcx
   14002d755:	icebp  
   14002d756:	icebp  
   14002d757:	push   rcx
   14002d759:	icebp  
   14002d75a:	icebp  
   14002d75b:	push   rcx
   14002d75d:	icebp  
   14002d75e:	icebp  
   14002d75f:	push   rcx
   14002d761:	icebp  
   14002d762:	icebp  
   14002d763:	push   rcx
   14002d765:	icebp  
   14002d766:	icebp  
   14002d767:	push   rcx
   14002d769:	icebp  
   14002d76a:	icebp  
   14002d76b:	push   rcx
   14002d76d:	icebp  
   14002d76e:	icebp  
   14002d76f:	push   rcx
   14002d771:	icebp  
   14002d772:	icebp  
   14002d773:	push   rcx
   14002d775:	icebp  
   14002d776:	icebp  
   14002d777:	push   rcx
   14002d779:	icebp  
   14002d77a:	icebp  
   14002d77b:	push   rax
   14002d77d:	lock lock jmp rdx
   14002d781:	loop   0x14002d765
   14002d783:	jmp    QWORD PTR [rbx-0x59008a71]
   14002d789:	xchg   ecx,eax
   14002d78a:	js     0x14002d78b
   14002d78c:	jrcxz  0x14002d771
   14002d78e:	jrcxz  0x14002d78f
   14002d790:	icebp  
   14002d791:	icebp  
   14002d792:	icebp  
   14002d793:	push   rdx
   14002d795:	repnz repnz push rdx
   14002d799:	repnz repnz push rdx
   14002d79d:	repnz repnz push rdx
   14002d7a1:	repnz repnz push rdx
   14002d7a5:	repnz repnz push rdx
   14002d7a9:	repnz repnz push rdx
   14002d7ad:	repnz repnz push rdx
   14002d7b1:	repnz repnz push rdx
   14002d7b5:	repnz repnz push rdx
   14002d7b9:	repnz repnz push rdx
   14002d7bd:	repnz repnz push rdx
   14002d7c1:	repnz repnz push rdx
   14002d7c5:	repnz repnz push rdx
   14002d7c9:	repnz repnz push rdx
   14002d7cd:	repnz bnd jmp QWORD PTR [rax+0xeffeec4]
   14002d7d5:	imul   esp,ebp,0xffffffff
   14002d7d8:	push   0xfffffffff2ffeaa4
   14002d7dd:	repnz repnz push rcx
   14002d7e1:	icebp  
   14002d7e2:	repnz jmp FWORD PTR [rbx+0x13ffeecb]
   14002d7e9:	ins    DWORD PTR es:[rdi],dx
   14002d7ea:	in     eax,0xff
   14002d7ec:	(bad)  
   14002d7ed:	imul   esp,ebp,0xffffffff
   14002d7f0:	(bad)  
   14002d7f1:	jo     0x14002d7d8
   14002d7f3:	dec    DWORD PTR [rsi-0xd001346]
   14002d7f9:	repnz repnz push rdx
   14002d7fd:	repnz repnz push rdx
   14002d801:	repnz repnz push rdx
   14002d805:	repnz repnz push rdx
   14002d809:	repnz repnz push rdx
   14002d80d:	repnz repnz push rdx
   14002d811:	repnz repnz push rdx
   14002d815:	repnz repnz push rdx
   14002d819:	repnz repnz push rdx
   14002d81d:	repnz repnz push rdx
   14002d821:	repnz repnz push rdx
   14002d825:	repnz repnz push rdx
   14002d829:	repnz repnz push rdx
   14002d82d:	repnz repnz push rdx
   14002d831:	repnz repnz push rdx
   14002d835:	repnz repnz push rdx
   14002d839:	repnz repnz push rcx
   14002d83d:	icebp  
   14002d83e:	icebp  
   14002d83f:	jmp    rbx
   14002d841:	jrcxz  0x14002d826
   14002d843:	jmp    QWORD PTR [rsi-0x5700876f]
   14002d849:	xchg   esp,eax
   14002d84a:	jnp    0x14002d84b
   14002d84c:	in     al,0xe4
   14002d84e:	in     al,0xff
   14002d850:	repnz repnz repnz push rbx
   14002d855:	repz repz push rbx
   14002d859:	repz repz push rbx
   14002d85d:	repz repz push rbx
   14002d861:	repz repz push rbx
   14002d865:	repz repz push rbx
   14002d869:	repz repz push rbx
   14002d86d:	repz repz push rbx
   14002d871:	repz repz push rbx
   14002d875:	repz repz push rbx
   14002d879:	repz repz push rbx
   14002d87d:	repz repz push rbx
   14002d881:	repz repz push rbx
   14002d885:	repz repz push rbx
   14002d889:	repz repz jmp rdx
   14002d88d:	jmp    0x1bf31d884
   14002d892:	out    0xff,eax
   14002d894:	(bad)  
   14002d895:	jbe    0x14002d87d
   14002d897:	jmp    FWORD PTR [rbx-0xc001034]
   14002d89d:	repz repz jmp rbx
   14002d8a1:	jmp    0xe064d898
   14002d8a6:	jmp    0x1256ee9aa
   14002d8ab:	call   QWORD PTR [rdx]
   14002d8ad:	ins    DWORD PTR es:[rdi],dx
   14002d8ae:	in     eax,0xff
   14002d8b0:	push   rdi
   14002d8b1:	cdq    
   14002d8b2:	jmp    0x132efc0b6
   14002d8b7:	push   rbx
   14002d8b9:	repz repz push rbx
   14002d8bd:	repz repz push rbx
   14002d8c1:	repz repz push rbx
   14002d8c5:	repz repz push rbx
   14002d8c9:	repz repz push rbx
   14002d8cd:	repz repz push rbx
   14002d8d1:	repz repz push rbx
   14002d8d5:	repz repz push rbx
   14002d8d9:	repz repz push rbx
   14002d8dd:	repz repz push rbx
   14002d8e1:	repz repz push rbx
   14002d8e5:	repz repz push rbx
   14002d8e9:	repz repz push rbx
   14002d8ed:	repz repz push rbx
   14002d8f1:	repz repz push rbx
   14002d8f5:	repz repz push rbx
   14002d8f9:	repz repz push rdx
   14002d8fd:	repnz bnd jmp rsp
   14002d901:	in     al,0xe4
   14002d903:	jmp    FWORD PTR [rax-0x5500846c]
   14002d909:	xchg   esi,eax
   14002d90a:	jge    0x14002d90b
   14002d90c:	in     eax,0xe5
   14002d90e:	in     eax,0xff
   14002d910:	repz repz repz push rsp
   14002d915:	hlt    
   14002d916:	hlt    
   14002d917:	push   rsp
   14002d919:	hlt    
   14002d91a:	hlt    
   14002d91b:	push   rsp
   14002d91d:	hlt    
   14002d91e:	hlt    
   14002d91f:	push   rsp
   14002d921:	hlt    
   14002d922:	hlt    
   14002d923:	push   rsp
   14002d925:	hlt    
   14002d926:	hlt    
   14002d927:	push   rsp
   14002d929:	hlt    
   14002d92a:	hlt    
   14002d92b:	push   rsp
   14002d92d:	hlt    
   14002d92e:	hlt    
   14002d92f:	push   rsp
   14002d931:	hlt    
   14002d932:	hlt    
   14002d933:	push   rsp
   14002d935:	hlt    
   14002d936:	hlt    
   14002d937:	push   rsp
   14002d939:	hlt    
   14002d93a:	hlt    
   14002d93b:	push   rsp
   14002d93d:	hlt    
   14002d93e:	hlt    
   14002d93f:	push   rsp
   14002d941:	hlt    
   14002d942:	hlt    
   14002d943:	push   rsp
   14002d945:	hlt    
   14002d946:	hlt    
   14002d947:	push   rsp
   14002d949:	hlt    
   14002d94a:	hlt    
   14002d94b:	(bad)  
   14002d94c:	mov    ebx,0x15fff0d5
   14002d951:	outs   dx,DWORD PTR ds:[rsi]
   14002d952:	in     eax,0xff
   14002d954:	sub    eax,0xc0ffe77f
   14002d959:	xlat   BYTE PTR ds:[rbx]
   14002d95a:	icebp  
   14002d95b:	push   rsp
   14002d95d:	hlt    
   14002d95e:	hlt    
   14002d95f:	(bad)  
   14002d960:	fsubp  st(1),st
   14002d962:	repz call QWORD PTR [rax-0x6b]
   14002d966:	(bad)  
   14002d967:	call   QWORD PTR [rbx]
   14002d969:	ins    DWORD PTR es:[rdi],dx
   14002d96a:	in     eax,0xff
   14002d96c:	sub    edi,DWORD PTR [rsi-0x19]
   14002d96f:	push   QWORD PTR [rdi-0xb000f2e]
   14002d975:	hlt    
   14002d976:	hlt    
   14002d977:	push   rsp
   14002d979:	hlt    
   14002d97a:	hlt    
   14002d97b:	push   rsp
   14002d97d:	hlt    
   14002d97e:	hlt    
   14002d97f:	push   rsp
   14002d981:	hlt    
   14002d982:	hlt    
   14002d983:	push   rsp
   14002d985:	hlt    
   14002d986:	hlt    
   14002d987:	push   rsp
   14002d989:	hlt    
   14002d98a:	hlt    
   14002d98b:	push   rsp
   14002d98d:	hlt    
   14002d98e:	hlt    
   14002d98f:	push   rsp
   14002d991:	hlt    
   14002d992:	hlt    
   14002d993:	push   rsp
   14002d995:	hlt    
   14002d996:	hlt    
   14002d997:	push   rsp
   14002d999:	hlt    
   14002d99a:	hlt    
   14002d99b:	push   rsp
   14002d99d:	hlt    
   14002d99e:	hlt    
   14002d99f:	push   rsp
   14002d9a1:	hlt    
   14002d9a2:	hlt    
   14002d9a3:	push   rsp
   14002d9a5:	hlt    
   14002d9a6:	hlt    
   14002d9a7:	push   rsp
   14002d9a9:	hlt    
   14002d9aa:	hlt    
   14002d9ab:	push   rsp
   14002d9ad:	hlt    
   14002d9ae:	hlt    
   14002d9af:	push   rsp
   14002d9b1:	hlt    
   14002d9b2:	hlt    
   14002d9b3:	push   rsp
   14002d9b5:	hlt    
   14002d9b6:	hlt    
   14002d9b7:	push   rsp
   14002d9b9:	hlt    
   14002d9ba:	hlt    
   14002d9bb:	push   rbx
   14002d9bd:	repz repz jmp rbp
   14002d9c1:	in     eax,0xe5
   14002d9c3:	jmp    FWORD PTR [rdx-0x5300826a]
   14002d9c9:	cwde   
   14002d9ca:	cmp    bh,0xe5
   14002d9cd:	in     eax,0xe5
   14002d9cf:	push   rbx
   14002d9d1:	repz repz push rsp
   14002d9d5:	hlt    
   14002d9d6:	hlt    
   14002d9d7:	push   rsp
   14002d9d9:	hlt    
   14002d9da:	hlt    
   14002d9db:	push   rsp
   14002d9dd:	hlt    
   14002d9de:	hlt    
   14002d9df:	push   rsp
   14002d9e1:	hlt    
   14002d9e2:	hlt    
   14002d9e3:	push   rsp
   14002d9e5:	hlt    
   14002d9e6:	hlt    
   14002d9e7:	push   rsp
   14002d9e9:	hlt    
   14002d9ea:	hlt    
   14002d9eb:	push   rsp
   14002d9ed:	hlt    
   14002d9ee:	hlt    
   14002d9ef:	push   rsp
   14002d9f1:	hlt    
   14002d9f2:	hlt    
   14002d9f3:	push   rsp
   14002d9f5:	hlt    
   14002d9f6:	hlt    
   14002d9f7:	push   rsp
   14002d9f9:	hlt    
   14002d9fa:	hlt    
   14002d9fb:	push   rsp
   14002d9fd:	hlt    
   14002d9fe:	hlt    
   14002d9ff:	push   rsp
   14002da01:	hlt    
   14002da02:	hlt    
   14002da03:	push   rsp
   14002da05:	hlt    
   14002da06:	hlt    
   14002da07:	push   rsp
   14002da09:	hlt    
   14002da0a:	hlt    
   14002da0b:	jmp    QWORD PTR [rbp+0x17ffefc8]
   14002da11:	jno    0x14002d9f8
   14002da13:	jmp    QWORD PTR [rsi]
   14002da15:	jnp    0x14002d9fd
   14002da17:	jmp    FWORD PTR [rdx-0xb001036]
   14002da1d:	hlt    
   14002da1e:	hlt    
   14002da1f:	jmp    rcx
   14002da21:	(bad)  
   14002da22:	repz call QWORD PTR [rbp-0x68]
   14002da26:	(bad)  
   14002da27:	call   QWORD PTR [rip+0x4cffe56f]        # 0x18d02bf9c
   14002da2d:	xchg   ebx,eax
   14002da2e:	jmp    0x134f7cf32
   14002da33:	push   rsp
   14002da35:	hlt    
   14002da36:	hlt    
   14002da37:	push   rsp
   14002da39:	hlt    
   14002da3a:	hlt    
   14002da3b:	push   rsp
   14002da3d:	hlt    
   14002da3e:	hlt    
   14002da3f:	push   rsp
   14002da41:	hlt    
   14002da42:	hlt    
   14002da43:	push   rsp
   14002da45:	hlt    
   14002da46:	hlt    
   14002da47:	push   rsp
   14002da49:	hlt    
   14002da4a:	hlt    
   14002da4b:	push   rsp
   14002da4d:	hlt    
   14002da4e:	hlt    
   14002da4f:	push   rsp
   14002da51:	hlt    
   14002da52:	hlt    
   14002da53:	push   rsp
   14002da55:	hlt    
   14002da56:	hlt    
   14002da57:	push   rsp
   14002da59:	hlt    
   14002da5a:	hlt    
   14002da5b:	push   rsp
   14002da5d:	hlt    
   14002da5e:	hlt    
   14002da5f:	push   rsp
   14002da61:	hlt    
   14002da62:	hlt    
   14002da63:	push   rsp
   14002da65:	hlt    
   14002da66:	hlt    
   14002da67:	push   rsp
   14002da69:	hlt    
   14002da6a:	hlt    
   14002da6b:	push   rsp
   14002da6d:	hlt    
   14002da6e:	hlt    
   14002da6f:	push   rsp
   14002da71:	hlt    
   14002da72:	hlt    
   14002da73:	push   rsp
   14002da75:	hlt    
   14002da76:	hlt    
   14002da77:	push   rsp
   14002da79:	hlt    
   14002da7a:	hlt    
   14002da7b:	push   rbx
   14002da7d:	repz repz jmp rbp
   14002da81:	in     eax,0xe5
   14002da83:	jmp    FWORD PTR [rax+rbx*4-0x64500080]
   14002da8a:	(bad)  
   14002da8b:	jmp    rsi
   14002da8d:	out    0xe6,al
   14002da8f:	push   rsp
   14002da91:	hlt    
   14002da92:	hlt    
   14002da93:	push   rbp
   14002da95:	cmc    
   14002da96:	cmc    
   14002da97:	push   rbp
   14002da99:	cmc    
   14002da9a:	cmc    
   14002da9b:	push   rbp
   14002da9d:	cmc    
   14002da9e:	cmc    
   14002da9f:	push   rbp
   14002daa1:	cmc    
   14002daa2:	cmc    
   14002daa3:	push   rbp
   14002daa5:	cmc    
   14002daa6:	cmc    
   14002daa7:	push   rbp
   14002daa9:	cmc    
   14002daaa:	cmc    
   14002daab:	push   rbp
   14002daad:	cmc    
   14002daae:	cmc    
   14002daaf:	push   rbp
   14002dab1:	cmc    
   14002dab2:	cmc    
   14002dab3:	push   rbp
   14002dab5:	cmc    
   14002dab6:	cmc    
   14002dab7:	push   rbp
   14002dab9:	cmc    
   14002daba:	cmc    
   14002dabb:	push   rbp
   14002dabd:	cmc    
   14002dabe:	cmc    
   14002dabf:	push   rbp
   14002dac1:	cmc    
   14002dac2:	cmc    
   14002dac3:	push   rbp
   14002dac5:	cmc    
   14002dac6:	cmc    
   14002dac7:	push   rbp
   14002dac9:	cmc    
   14002daca:	cmc    
   14002dacb:	inc    ebx
   14002dacd:	fptan  
   14002dacf:	call   FWORD PTR [rdi]
   14002dad1:	jbe    0x14002dab9
   14002dad3:	call   FWORD PTR [rcx]
   14002dad5:	jb     0x14002dabc
   14002dad7:	jmp    QWORD PTR [rbx-0x5f]
   14002dada:	jmp    0x14002dadb
   14002dadc:	lock icebp 
   14002dade:	cmc    
   14002dadf:	(bad)  
   14002dae0:	in     al,dx
   14002dae1:	lock cmc 
   14002dae3:	inc    DWORD PTR [rcx+0x17ffeeb3]
   14002dae9:	jo     0x14002dad0
   14002daeb:	(bad)  
   14002daec:	cmp    cl,BYTE PTR [rax-0x1a240019]
   14002daf2:	hlt    
   14002daf3:	push   rbp
   14002daf5:	cmc    
   14002daf6:	cmc    
   14002daf7:	push   rbp
   14002daf9:	cmc    
   14002dafa:	cmc    
   14002dafb:	push   rbp
   14002dafd:	cmc    
   14002dafe:	cmc    
   14002daff:	push   rbp
   14002db01:	cmc    
   14002db02:	cmc    
   14002db03:	push   rbp
   14002db05:	cmc    
   14002db06:	cmc    
   14002db07:	push   rbp
   14002db09:	cmc    
   14002db0a:	cmc    
   14002db0b:	push   rbp
   14002db0d:	cmc    
   14002db0e:	cmc    
   14002db0f:	push   rbp
   14002db11:	cmc    
   14002db12:	cmc    
   14002db13:	push   rbp
   14002db15:	cmc    
   14002db16:	cmc    
   14002db17:	push   rbp
   14002db19:	cmc    
   14002db1a:	cmc    
   14002db1b:	push   rbp
   14002db1d:	cmc    
   14002db1e:	cmc    
   14002db1f:	push   rbp
   14002db21:	cmc    
   14002db22:	cmc    
   14002db23:	push   rbp
   14002db25:	cmc    
   14002db26:	cmc    
   14002db27:	push   rbp
   14002db29:	cmc    
   14002db2a:	cmc    
   14002db2b:	push   rbp
   14002db2d:	cmc    
   14002db2e:	cmc    
   14002db2f:	push   rbp
   14002db31:	cmc    
   14002db32:	cmc    
   14002db33:	push   rbp
   14002db35:	cmc    
   14002db36:	cmc    
   14002db37:	push   rbp
   14002db39:	cmc    
   14002db3a:	cmc    
   14002db3b:	push   rsp
   14002db3d:	hlt    
   14002db3e:	hlt    
   14002db3f:	jmp    rsi
   14002db41:	out    0xe6,al
   14002db43:	jmp    FWORD PTR [rdi-0x4e007d65]
   14002db49:	popf   
   14002db4a:	test   edi,edi
   14002db4c:	out    0xe7,eax
   14002db4e:	out    0xff,eax
   14002db50:	cmc    
   14002db51:	cmc    
   14002db52:	cmc    
   14002db53:	push   rsi
   14002db55:	div    dh
   14002db57:	push   rsi
   14002db59:	div    dh
   14002db5b:	push   rsi
   14002db5d:	div    dh
   14002db5f:	push   rsi
   14002db61:	div    dh
   14002db63:	push   rsi
   14002db65:	div    dh
   14002db67:	push   rsi
   14002db69:	div    dh
   14002db6b:	push   rsi
   14002db6d:	div    dh
   14002db6f:	push   rsi
   14002db71:	div    dh
   14002db73:	push   rsi
   14002db75:	div    dh
   14002db77:	push   rsi
   14002db79:	div    dh
   14002db7b:	push   rsi
   14002db7d:	div    dh
   14002db7f:	push   rsi
   14002db81:	div    dh
   14002db83:	push   rsi
   14002db85:	div    dh
   14002db87:	push   rsi
   14002db89:	div    dh
   14002db8b:	(bad)  
   14002db8c:	in     al,dx
   14002db8d:	icebp  
   14002db8e:	idiv   bh
   14002db90:	(bad)  
   14002db91:	lahf   
   14002db92:	jmp    0x14002db93
   14002db94:	sbb    DWORD PTR [rdx-0x1a],esi
   14002db97:	jmp    QWORD PTR [rbx]
   14002db99:	jns    0x14002db81
   14002db9b:	call   FWORD PTR [rdi-0x9000f3b]
   14002dba1:	div    dh
   14002dba3:	call   rdi
   14002dba5:	in     eax,0xf3
   14002dba7:	(bad)  
   14002dba8:	(bad)  
   14002dba9:	mov    ch,al
   14002dbab:	call   FWORD PTR [rcx]
   14002dbad:	jb     0x14002db95
   14002dbaf:	jmp    FWORD PTR [rax-0x5c]
   14002dbb2:	in     al,dx
   14002dbb3:	(bad)  
   14002dbb4:	in     eax,dx
   14002dbb5:	icebp  
   14002dbb6:	idiv   bh
   14002dbb8:	div    dh
   14002dbba:	idiv   bh
   14002dbbc:	div    dh
   14002dbbe:	idiv   bh
   14002dbc0:	div    dh
   14002dbc2:	idiv   bh
   14002dbc4:	div    dh
   14002dbc6:	idiv   bh
   14002dbc8:	div    dh
   14002dbca:	idiv   bh
   14002dbcc:	div    dh
   14002dbce:	idiv   bh
   14002dbd0:	div    dh
   14002dbd2:	idiv   bh
   14002dbd4:	div    dh
   14002dbd6:	idiv   bh
   14002dbd8:	div    dh
   14002dbda:	idiv   bh
   14002dbdc:	div    dh
   14002dbde:	idiv   bh
   14002dbe0:	div    dh
   14002dbe2:	idiv   bh
   14002dbe4:	div    dh
   14002dbe6:	idiv   bh
   14002dbe8:	div    dh
   14002dbea:	idiv   bh
   14002dbec:	div    dh
   14002dbee:	idiv   bh
   14002dbf0:	div    dh
   14002dbf2:	idiv   bh
   14002dbf4:	div    dh
   14002dbf6:	idiv   bh
   14002dbf8:	div    dh
   14002dbfa:	idiv   bh
   14002dbfc:	cmc    
   14002dbfd:	cmc    
   14002dbfe:	cmc    
   14002dbff:	jmp    rdi
   14002dc01:	out    0xe7,eax
   14002dc03:	push   QWORD PTR [rcx-0x4c007a63]
   14002dc09:	lahf   
   14002dc0a:	xchg   edi,edi
   14002dc0c:	call   0x13702c4f9
   14002dc11:	div    dh
   14002dc13:	push   rdi
   14002dc15:	div    edi
   14002dc17:	push   rdi
   14002dc19:	div    edi
   14002dc1b:	push   rdi
   14002dc1d:	div    edi
   14002dc1f:	push   rdi
   14002dc21:	div    edi
   14002dc23:	push   rdi
   14002dc25:	div    edi
   14002dc27:	push   rdi
   14002dc29:	div    edi
   14002dc2b:	push   rdi
   14002dc2d:	div    edi
   14002dc2f:	push   rdi
   14002dc31:	div    edi
   14002dc33:	push   rdi
   14002dc35:	div    edi
   14002dc37:	push   rdi
   14002dc39:	div    edi
   14002dc3b:	push   rdi
   14002dc3d:	div    edi
   14002dc3f:	push   rdi
   14002dc41:	div    edi
   14002dc43:	push   rdi
   14002dc45:	div    edi
   14002dc47:	push   rdi
   14002dc49:	div    edi
   14002dc4b:	push   rdi
   14002dc4d:	div    edi
   14002dc4f:	call   rbp
   14002dc51:	in     al,0xf4
   14002dc53:	inc    DWORD PTR [rbp-0x72]
   14002dc56:	jmp    0x12675f95a
   14002dc5b:	push   QWORD PTR [rip+0xffffffffb3ffe884]        # 0xf402c4e5
   14002dc61:	shl    bl,1
   14002dc63:	push   rdi
   14002dc65:	div    edi
   14002dc67:	inc    ecx
   14002dc69:	fpatan 
   14002dc6b:	(bad)  
   14002dc6c:	(bad)  
   14002dc6d:	mov    ebp,ecx
   14002dc6f:	call   FWORD PTR [rbx+rsi*2]
   14002dc72:	out    0xff,al
   14002dc74:	jnp    0x14002dc26
   14002dc76:	out    dx,al
   14002dc77:	(bad)  
   14002dc78:	jmp    0x13802d36c
   14002dc7d:	div    edi
   14002dc7f:	push   rdi
   14002dc81:	div    edi
   14002dc83:	push   rdi
   14002dc85:	div    edi
   14002dc87:	push   rdi
   14002dc89:	div    edi
   14002dc8b:	push   rdi
   14002dc8d:	div    edi
   14002dc8f:	push   rdi
   14002dc91:	div    edi
   14002dc93:	push   rdi
   14002dc95:	div    edi
   14002dc97:	push   rdi
   14002dc99:	div    edi
   14002dc9b:	push   rdi
   14002dc9d:	div    edi
   14002dc9f:	push   rdi
   14002dca1:	div    edi
   14002dca3:	push   rdi
   14002dca5:	div    edi
   14002dca7:	push   rdi
   14002dca9:	div    edi
   14002dcab:	push   rdi
   14002dcad:	div    edi
   14002dcaf:	push   rdi
   14002dcb1:	div    edi
   14002dcb3:	push   rdi
   14002dcb5:	div    edi
   14002dcb7:	push   rdi
   14002dcb9:	div    edi
   14002dcbb:	push   rsi
   14002dcbd:	div    dh
   14002dcbf:	(bad)  
   14002dcc0:	call   0xf402c5ad
   14002dcc5:	lahf   
   14002dcc6:	xchg   edi,edi
   14002dcc8:	mov    ch,0xa1
   14002dcca:	mov    bh,bh
   14002dccc:	jmp    0x13802c6ba
   14002dcd1:	div    edi
   14002dcd3:	(bad)  
   14002dcd4:	clc    
   14002dcd5:	clc    
   14002dcd6:	clc    
   14002dcd7:	(bad)  
   14002dcd8:	clc    
   14002dcd9:	clc    
   14002dcda:	clc    
   14002dcdb:	(bad)  
   14002dcdc:	clc    
   14002dcdd:	clc    
   14002dcde:	clc    
   14002dcdf:	(bad)  
   14002dce0:	clc    
   14002dce1:	clc    
   14002dce2:	clc    
   14002dce3:	(bad)  
   14002dce4:	clc    
   14002dce5:	clc    
   14002dce6:	clc    
   14002dce7:	(bad)  
   14002dce8:	clc    
   14002dce9:	clc    
   14002dcea:	clc    
   14002dceb:	(bad)  
   14002dcec:	clc    
   14002dced:	clc    
   14002dcee:	clc    
   14002dcef:	(bad)  
   14002dcf0:	clc    
   14002dcf1:	clc    
   14002dcf2:	clc    
   14002dcf3:	(bad)  
   14002dcf4:	clc    
   14002dcf5:	clc    
   14002dcf6:	clc    
   14002dcf7:	(bad)  
   14002dcf8:	clc    
   14002dcf9:	clc    
   14002dcfa:	clc    
   14002dcfb:	(bad)  
   14002dcfc:	clc    
   14002dcfd:	clc    
   14002dcfe:	clc    
   14002dcff:	(bad)  
   14002dd00:	clc    
   14002dd01:	clc    
   14002dd02:	clc    
   14002dd03:	(bad)  
   14002dd04:	clc    
   14002dd05:	clc    
   14002dd06:	clc    
   14002dd07:	(bad)  
   14002dd08:	clc    
   14002dd09:	clc    
   14002dd0a:	clc    
   14002dd0b:	(bad)  
   14002dd0c:	clc    
   14002dd0d:	clc    
   14002dd0e:	clc    
   14002dd0f:	(bad)  
   14002dd10:	clc    
   14002dd11:	clc    
   14002dd12:	clc    
   14002dd13:	dec    ebp
   14002dd15:	loopne 0x14002dd0b
   14002dd17:	inc    DWORD PTR [rbp-0x71]
   14002dd1a:	(bad)  
   14002dd1b:	call   FWORD PTR [rdi]
   14002dd1d:	jne    0x14002dd06
   14002dd1f:	push   QWORD PTR [rax]
   14002dd21:	sub    al,0xff
   14002dd24:	sahf   
   14002dd25:	(bad)
   14002dd28:	clc    
   14002dd29:	clc    
   14002dd2a:	clc    
   14002dd2b:	call   rdx
   14002dd2d:	jrcxz  0x14002dd24
   14002dd2f:	call   QWORD PTR [rsi-0x67]
   14002dd32:	jmp    0x14002dd33
   14002dd34:	(bad)  
   14002dd35:	jne    0x14002dd1e
   14002dd37:	call   FWORD PTR [rdi-0x62]
   14002dd3a:	jmp    0x14002dd3b
   14002dd3c:	iret   
   14002dd3d:	loope  0x14002dd33
   14002dd3f:	(bad)  
   14002dd40:	clc    
   14002dd41:	clc    
   14002dd42:	clc    
   14002dd43:	(bad)  
   14002dd44:	clc    
   14002dd45:	clc    
   14002dd46:	clc    
   14002dd47:	(bad)  
   14002dd48:	clc    
   14002dd49:	clc    
   14002dd4a:	clc    
   14002dd4b:	(bad)  
   14002dd4c:	clc    
   14002dd4d:	clc    
   14002dd4e:	clc    
   14002dd4f:	(bad)  
   14002dd50:	clc    
   14002dd51:	clc    
   14002dd52:	clc    
   14002dd53:	(bad)  
   14002dd54:	clc    
   14002dd55:	clc    
   14002dd56:	clc    
   14002dd57:	(bad)  
   14002dd58:	clc    
   14002dd59:	clc    
   14002dd5a:	clc    
   14002dd5b:	(bad)  
   14002dd5c:	clc    
   14002dd5d:	clc    
   14002dd5e:	clc    
   14002dd5f:	(bad)  
   14002dd60:	clc    
   14002dd61:	clc    
   14002dd62:	clc    
   14002dd63:	(bad)  
   14002dd64:	clc    
   14002dd65:	clc    
   14002dd66:	clc    
   14002dd67:	(bad)  
   14002dd68:	clc    
   14002dd69:	clc    
   14002dd6a:	clc    
   14002dd6b:	(bad)  
   14002dd6c:	clc    
   14002dd6d:	clc    
   14002dd6e:	clc    
   14002dd6f:	(bad)  
   14002dd70:	clc    
   14002dd71:	clc    
   14002dd72:	clc    
   14002dd73:	(bad)  
   14002dd74:	clc    
   14002dd75:	clc    
   14002dd76:	clc    
   14002dd77:	(bad)  
   14002dd78:	clc    
   14002dd79:	clc    
   14002dd7a:	clc    
   14002dd7b:	push   rdi
   14002dd7d:	div    edi
   14002dd7f:	(bad)  
   14002dd80:	jmp    0xf602c76e
   14002dd85:	movabs eax,ds:0xeaeaff8ca3b7ff8a
   14002dd8e:	(bad)  
   14002dd8f:	(bad)  
   14002dd90:	clc    
   14002dd91:	clc    
   14002dd92:	clc    
   14002dd93:	(bad)  
   14002dd94:	stc    
   14002dd95:	stc    
   14002dd96:	stc    
   14002dd97:	(bad)  
   14002dd98:	stc    
   14002dd99:	stc    
   14002dd9a:	stc    
   14002dd9b:	(bad)  
   14002dd9c:	stc    
   14002dd9d:	stc    
   14002dd9e:	stc    
   14002dd9f:	(bad)  
   14002dda0:	stc    
   14002dda1:	stc    
   14002dda2:	stc    
   14002dda3:	(bad)  
   14002dda4:	stc    
   14002dda5:	stc    
   14002dda6:	stc    
   14002dda7:	(bad)  
   14002dda8:	stc    
   14002dda9:	stc    
   14002ddaa:	stc    
   14002ddab:	(bad)  
   14002ddac:	stc    
   14002ddad:	stc    
   14002ddae:	stc    
   14002ddaf:	(bad)  
   14002ddb0:	stc    
   14002ddb1:	stc    
   14002ddb2:	stc    
   14002ddb3:	(bad)  
   14002ddb4:	stc    
   14002ddb5:	stc    
   14002ddb6:	stc    
   14002ddb7:	(bad)  
   14002ddb8:	stc    
   14002ddb9:	stc    
   14002ddba:	stc    
   14002ddbb:	(bad)  
   14002ddbc:	stc    
   14002ddbd:	stc    
   14002ddbe:	stc    
   14002ddbf:	(bad)  
   14002ddc0:	stc    
   14002ddc1:	stc    
   14002ddc2:	stc    
   14002ddc3:	(bad)  
   14002ddc4:	stc    
   14002ddc5:	stc    
   14002ddc6:	stc    
   14002ddc7:	(bad)  
   14002ddc8:	stc    
   14002ddc9:	stc    
   14002ddca:	stc    
   14002ddcb:	(bad)  
   14002ddcc:	stc    
   14002ddcd:	stc    
   14002ddce:	stc    
   14002ddcf:	(bad)  
   14002ddd0:	stc    
   14002ddd1:	stc    
   14002ddd2:	stc    
   14002ddd3:	(bad)  
   14002ddd4:	stc    
   14002ddd5:	stc    
   14002ddd6:	stc    
   14002ddd7:	dec    edi
   14002ddd9:	loop   0x14002ddd1
   14002dddb:	call   FWORD PTR [rdx-0x64]
   14002ddde:	in     al,dx
   14002dddf:	jmp    QWORD PTR [rbx]
   14002dde1:	js     0x14002ddca
   14002dde3:	jmp    FWORD PTR [rdx]
   14002dde5:	jl     0x14002ddcf
   14002dde7:	inc    DWORD PTR [rbp-0x6000f4a]
   14002dded:	stc    
   14002ddee:	stc    
   14002ddef:	(bad)  
   14002ddf0:	out    dx,eax
   14002ddf1:	hlt    
   14002ddf2:	clc    
   14002ddf3:	call   QWORD PTR [rdi+rdi*4-0x6cb4000f]
   14002ddfa:	jmp    0x14002ddfb
   14002ddfc:	xchg   r8,rax
   14002ddfe:	jmp    0x14002ddff
   14002de00:	fwait
   14002de01:	ret    
   14002de02:	icebp  
   14002de03:	(bad)  
   14002de04:	in     eax,dx
   14002de05:	repz clc 
   14002de07:	(bad)  
   14002de08:	stc    
   14002de09:	stc    
   14002de0a:	stc    
   14002de0b:	(bad)  
   14002de0c:	stc    
   14002de0d:	stc    
   14002de0e:	stc    
   14002de0f:	(bad)  
   14002de10:	stc    
   14002de11:	stc    
   14002de12:	stc    
   14002de13:	(bad)  
   14002de14:	stc    
   14002de15:	stc    
   14002de16:	stc    
   14002de17:	(bad)  
   14002de18:	stc    
   14002de19:	stc    
   14002de1a:	stc    
   14002de1b:	(bad)  
   14002de1c:	stc    
   14002de1d:	stc    
   14002de1e:	stc    
   14002de1f:	(bad)  
   14002de20:	stc    
   14002de21:	stc    
   14002de22:	stc    
   14002de23:	(bad)  
   14002de24:	stc    
   14002de25:	stc    
   14002de26:	stc    
   14002de27:	(bad)  
   14002de28:	stc    
   14002de29:	stc    
   14002de2a:	stc    
   14002de2b:	(bad)  
   14002de2c:	stc    
   14002de2d:	stc    
   14002de2e:	stc    
   14002de2f:	(bad)  
   14002de30:	stc    
   14002de31:	stc    
   14002de32:	stc    
   14002de33:	(bad)  
   14002de34:	stc    
   14002de35:	stc    
   14002de36:	stc    
   14002de37:	(bad)  
   14002de38:	stc    
   14002de39:	stc    
   14002de3a:	stc    
   14002de3b:	(bad)  
   14002de3c:	clc    
   14002de3d:	clc    
   14002de3e:	clc    
   14002de3f:	(bad)  
   14002de40:	(bad)  
   14002de41:	(bad)  
   14002de42:	(bad)  
   14002de43:	push   QWORD PTR [rdi-0x4600735d]
   14002de49:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002de4a:	mov    ?,edi
   14002de4c:	(bad)  
   14002de4d:	(bad)  
   14002de4e:	(bad)  
   14002de4f:	(bad)  
   14002de50:	clc    
   14002de51:	clc    
   14002de52:	clc    
   14002de53:	(bad)  
   14002de54:	stc    
   14002de55:	stc    
   14002de56:	stc    
   14002de57:	(bad)  
   14002de58:	stc    
   14002de59:	stc    
   14002de5a:	stc    
   14002de5b:	(bad)  
   14002de5c:	stc    
   14002de5d:	stc    
   14002de5e:	stc    
   14002de5f:	(bad)  
   14002de60:	stc    
   14002de61:	stc    
   14002de62:	stc    
   14002de63:	(bad)  
   14002de64:	stc    
   14002de65:	stc    
   14002de66:	stc    
   14002de67:	(bad)  
   14002de68:	stc    
   14002de69:	stc    
   14002de6a:	stc    
   14002de6b:	(bad)  
   14002de6c:	stc    
   14002de6d:	stc    
   14002de6e:	stc    
   14002de6f:	(bad)  
   14002de70:	stc    
   14002de71:	stc    
   14002de72:	stc    
   14002de73:	(bad)  
   14002de74:	stc    
   14002de75:	stc    
   14002de76:	stc    
   14002de77:	(bad)  
   14002de78:	stc    
   14002de79:	stc    
   14002de7a:	stc    
   14002de7b:	(bad)  
   14002de7c:	stc    
   14002de7d:	stc    
   14002de7e:	stc    
   14002de7f:	(bad)  
   14002de80:	stc    
   14002de81:	stc    
   14002de82:	stc    
   14002de83:	(bad)  
   14002de84:	stc    
   14002de85:	stc    
   14002de86:	stc    
   14002de87:	(bad)  
   14002de88:	stc    
   14002de89:	stc    
   14002de8a:	stc    
   14002de8b:	(bad)  
   14002de8c:	stc    
   14002de8d:	stc    
   14002de8e:	stc    
   14002de8f:	(bad)  
   14002de90:	stc    
   14002de91:	stc    
   14002de92:	stc    
   14002de93:	(bad)  
   14002de94:	stc    
   14002de95:	stc    
   14002de96:	stc    
   14002de97:	(bad)  
   14002de98:	stc    
   14002de99:	stc    
   14002de9a:	stc    
   14002de9b:	jmp    rsp
   14002de9d:	in     eax,dx
   14002de9e:	clc    
   14002de9f:	(bad)  
   14002dea0:	jg     0x14002de55
   14002dea2:	lock jmp FWORD PTR [rax]
   14002dea5:	jp     0x14002de8e
   14002dea7:	jmp    QWORD PTR [rsi]
   14002dea9:	jns    0x14002de92
   14002deab:	inc    DWORD PTR [rsi-0x6000f49]
   14002deb1:	stc    
   14002deb2:	stc    
   14002deb3:	(bad)  
   14002deb4:	stc    
   14002deb5:	stc    
   14002deb6:	stc    
   14002deb7:	(bad)  
   14002deb8:	fucomp st(1)
   14002deba:	idiv   edi
   14002debc:	xchg   ebp,eax
   14002debd:	mov    edi,0xae79fff1
   14002dec2:	out    dx,al
   14002dec3:	dec    DWORD PTR [rdx-0x30000f46]
   14002dec9:	loop   0x14002dec1
   14002decb:	(bad)  
   14002decc:	stc    
   14002decd:	stc    
   14002dece:	stc    
   14002decf:	(bad)  
   14002ded0:	stc    
   14002ded1:	stc    
   14002ded2:	stc    
   14002ded3:	(bad)  
   14002ded4:	stc    
   14002ded5:	stc    
   14002ded6:	stc    
   14002ded7:	(bad)  
   14002ded8:	stc    
   14002ded9:	stc    
   14002deda:	stc    
   14002dedb:	(bad)  
   14002dedc:	stc    
   14002dedd:	stc    
   14002dede:	stc    
   14002dedf:	(bad)  
   14002dee0:	stc    
   14002dee1:	stc    
   14002dee2:	stc    
   14002dee3:	(bad)  
   14002dee4:	stc    
   14002dee5:	stc    
   14002dee6:	stc    
   14002dee7:	(bad)  
   14002dee8:	stc    
   14002dee9:	stc    
   14002deea:	stc    
   14002deeb:	(bad)  
   14002deec:	stc    
   14002deed:	stc    
   14002deee:	stc    
   14002deef:	(bad)  
   14002def0:	stc    
   14002def1:	stc    
   14002def2:	stc    
   14002def3:	(bad)  
   14002def4:	stc    
   14002def5:	stc    
   14002def6:	stc    
   14002def7:	(bad)  
   14002def8:	stc    
   14002def9:	stc    
   14002defa:	stc    
   14002defb:	(bad)  
   14002defc:	clc    
   14002defd:	clc    
   14002defe:	clc    
   14002deff:	(bad)  
   14002df00:	(bad)  
   14002df01:	(bad)  
   14002df02:	(bad)  
   14002df03:	(bad)  
   14002df04:	mov    ecx,0xbbff8ea5
   14002df09:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002df0a:	xchg   ecx,eax
   14002df0b:	(bad)  
   14002df0c:	jmp    0x14002def9
   14002df0e:	jmp    0x14002df0f
   14002df10:	stc    
   14002df11:	stc    
   14002df12:	stc    
   14002df13:	(bad)  
   14002df14:	cli    
   14002df15:	cli    
   14002df16:	cli    
   14002df17:	(bad)  
   14002df18:	cli    
   14002df19:	cli    
   14002df1a:	cli    
   14002df1b:	(bad)  
   14002df1c:	cli    
   14002df1d:	cli    
   14002df1e:	cli    
   14002df1f:	(bad)  
   14002df20:	cli    
   14002df21:	cli    
   14002df22:	cli    
   14002df23:	(bad)  
   14002df24:	cli    
   14002df25:	cli    
   14002df26:	cli    
   14002df27:	(bad)  
   14002df28:	cli    
   14002df29:	cli    
   14002df2a:	cli    
   14002df2b:	(bad)  
   14002df2c:	cli    
   14002df2d:	cli    
   14002df2e:	cli    
   14002df2f:	(bad)  
   14002df30:	cli    
   14002df31:	cli    
   14002df32:	cli    
   14002df33:	(bad)  
   14002df34:	cli    
   14002df35:	cli    
   14002df36:	cli    
   14002df37:	(bad)  
   14002df38:	cli    
   14002df39:	cli    
   14002df3a:	cli    
   14002df3b:	(bad)  
   14002df3c:	cli    
   14002df3d:	cli    
   14002df3e:	cli    
   14002df3f:	(bad)  
   14002df40:	cli    
   14002df41:	cli    
   14002df42:	cli    
   14002df43:	(bad)  
   14002df44:	cli    
   14002df45:	cli    
   14002df46:	cli    
   14002df47:	(bad)  
   14002df48:	cli    
   14002df49:	cli    
   14002df4a:	cli    
   14002df4b:	(bad)  
   14002df4c:	cli    
   14002df4d:	cli    
   14002df4e:	cli    
   14002df4f:	(bad)  
   14002df50:	cli    
   14002df51:	cli    
   14002df52:	cli    
   14002df53:	(bad)  
   14002df54:	cli    
   14002df55:	cli    
   14002df56:	cli    
   14002df57:	(bad)  
   14002df58:	cli    
   14002df59:	cli    
   14002df5a:	cli    
   14002df5b:	(bad)  
   14002df5c:	cli    
   14002df5d:	cli    
   14002df5e:	cli    
   14002df5f:	push   rbp
   14002df61:	idiv   edx
   14002df63:	call   FWORD PTR [rsi+0x34fff2c5]
   14002df69:	sub    eax,0xffffffff
   14002df6c:	sub    edi,DWORD PTR [rbp-0x18]
   14002df6f:	call   FWORD PTR [rcx-0x5000d3d]
   14002df75:	cli    
   14002df76:	cli    
   14002df77:	(bad)  
   14002df78:	cli    
   14002df79:	cli    
   14002df7a:	cli    
   14002df7b:	(bad)  
   14002df7c:	cli    
   14002df7d:	cli    
   14002df7e:	cli    
   14002df7f:	jmp    rbx
   14002df81:	in     eax,dx
   14002df82:	clc    
   14002df83:	(bad)  
   14002df84:	mov    ebx,0xddfff5d5
   14002df89:	jmp    0x139fcdf85
   14002df8e:	cli    
   14002df8f:	(bad)  
   14002df90:	cli    
   14002df91:	cli    
   14002df92:	cli    
   14002df93:	(bad)  
   14002df94:	cli    
   14002df95:	cli    
   14002df96:	cli    
   14002df97:	(bad)  
   14002df98:	cli    
   14002df99:	cli    
   14002df9a:	cli    
   14002df9b:	(bad)  
   14002df9c:	cli    
   14002df9d:	cli    
   14002df9e:	cli    
   14002df9f:	(bad)  
   14002dfa0:	cli    
   14002dfa1:	cli    
   14002dfa2:	cli    
   14002dfa3:	(bad)  
   14002dfa4:	cli    
   14002dfa5:	cli    
   14002dfa6:	cli    
   14002dfa7:	(bad)  
   14002dfa8:	cli    
   14002dfa9:	cli    
   14002dfaa:	cli    
   14002dfab:	(bad)  
   14002dfac:	cli    
   14002dfad:	cli    
   14002dfae:	cli    
   14002dfaf:	(bad)  
   14002dfb0:	cli    
   14002dfb1:	cli    
   14002dfb2:	cli    
   14002dfb3:	(bad)  
   14002dfb4:	cli    
   14002dfb5:	cli    
   14002dfb6:	cli    
   14002dfb7:	(bad)  
   14002dfb8:	cli    
   14002dfb9:	cli    
   14002dfba:	cli    
   14002dfbb:	(bad)  
   14002dfbc:	stc    
   14002dfbd:	stc    
   14002dfbe:	stc    
   14002dfbf:	(bad)  
   14002dfc0:	jmp    0x14002dfad
   14002dfc2:	jmp    0x14002dfc3
   14002dfc4:	mov    ebx,0xbdff91a7
   14002dfc9:	test   eax,0xececff93
   14002dfce:	in     al,dx
   14002dfcf:	(bad)  
   14002dfd0:	cli    
   14002dfd1:	cli    
   14002dfd2:	cli    
   14002dfd3:	(bad)  
   14002dfd4:	sti    
   14002dfd5:	sti    
   14002dfd6:	sti    
   14002dfd7:	(bad)  
   14002dfd8:	sti    
   14002dfd9:	sti    
   14002dfda:	sti    
   14002dfdb:	(bad)  
   14002dfdc:	sti    
   14002dfdd:	sti    
   14002dfde:	sti    
   14002dfdf:	(bad)  
   14002dfe0:	sti    
   14002dfe1:	sti    
   14002dfe2:	sti    
   14002dfe3:	(bad)  
   14002dfe4:	sti    
   14002dfe5:	sti    
   14002dfe6:	sti    
   14002dfe7:	(bad)  
   14002dfe8:	sti    
   14002dfe9:	sti    
   14002dfea:	sti    
   14002dfeb:	(bad)  
   14002dfec:	sti    
   14002dfed:	sti    
   14002dfee:	sti    
   14002dfef:	(bad)  
   14002dff0:	sti    
   14002dff1:	sti    
   14002dff2:	sti    
   14002dff3:	(bad)  
   14002dff4:	sti    
   14002dff5:	sti    
   14002dff6:	sti    
   14002dff7:	(bad)  
   14002dff8:	sti    
   14002dff9:	sti    
   14002dffa:	sti    
   14002dffb:	(bad)  
   14002dffc:	sti    
   14002dffd:	sti    
   14002dffe:	sti    
   14002dfff:	(bad)  
   14002e000:	sti    
   14002e001:	sti    
   14002e002:	sti    
   14002e003:	(bad)  
   14002e004:	sti    
   14002e005:	sti    
   14002e006:	sti    
   14002e007:	(bad)  
   14002e008:	sti    
   14002e009:	sti    
   14002e00a:	sti    
   14002e00b:	(bad)  
   14002e00c:	sti    
   14002e00d:	sti    
   14002e00e:	sti    
   14002e00f:	(bad)  
   14002e010:	sti    
   14002e011:	sti    
   14002e012:	sti    
   14002e013:	(bad)  
   14002e014:	sti    
   14002e015:	sti    
   14002e016:	sti    
   14002e017:	(bad)  
   14002e018:	sti    
   14002e019:	sti    
   14002e01a:	sti    
   14002e01b:	(bad)  
   14002e01c:	sti    
   14002e01d:	sti    
   14002e01e:	sti    
   14002e01f:	(bad)  
   14002e020:	sti    
   14002e021:	sti    
   14002e022:	sti    
   14002e023:	(bad)  
   14002e024:	sti    
   14002e025:	sti    
   14002e026:	sti    
   14002e027:	jmp    FWORD PTR [rcx+0x37fff3cb]
   14002e02d:	test   cl,ch
   14002e02f:	(bad)  
   14002e030:	cmp    al,BYTE PTR [rsi-0x243d0017]
   14002e036:	idiv   bh
   14002e038:	sti    
   14002e039:	sti    
   14002e03a:	sti    
   14002e03b:	(bad)  
   14002e03c:	sti    
   14002e03d:	sti    
   14002e03e:	sti    
   14002e03f:	(bad)  
   14002e040:	sti    
   14002e041:	sti    
   14002e042:	sti    
   14002e043:	(bad)  
   14002e044:	sti    
   14002e045:	sti    
   14002e046:	sti    
   14002e047:	(bad)  
   14002e048:	sti    
   14002e049:	sti    
   14002e04a:	sti    
   14002e04b:	(bad)  
   14002e04c:	sti    
   14002e04d:	sti    
   14002e04e:	sti    
   14002e04f:	(bad)  
   14002e050:	sti    
   14002e051:	sti    
   14002e052:	sti    
   14002e053:	(bad)  
   14002e054:	sti    
   14002e055:	sti    
   14002e056:	sti    
   14002e057:	(bad)  
   14002e058:	sti    
   14002e059:	sti    
   14002e05a:	sti    
   14002e05b:	(bad)  
   14002e05c:	sti    
   14002e05d:	sti    
   14002e05e:	sti    
   14002e05f:	(bad)  
   14002e060:	sti    
   14002e061:	sti    
   14002e062:	sti    
   14002e063:	(bad)  
   14002e064:	sti    
   14002e065:	sti    
   14002e066:	sti    
   14002e067:	(bad)  
   14002e068:	sti    
   14002e069:	sti    
   14002e06a:	sti    
   14002e06b:	(bad)  
   14002e06c:	sti    
   14002e06d:	sti    
   14002e06e:	sti    
   14002e06f:	(bad)  
   14002e070:	sti    
   14002e071:	sti    
   14002e072:	sti    
   14002e073:	(bad)  
   14002e074:	sti    
   14002e075:	sti    
   14002e076:	sti    
   14002e077:	(bad)  
   14002e078:	sti    
   14002e079:	sti    
   14002e07a:	sti    
   14002e07b:	(bad)  
   14002e07c:	cli    
   14002e07d:	cli    
   14002e07e:	cli    
   14002e07f:	(bad)  
   14002e080:	in     al,dx
   14002e081:	in     al,dx
   14002e082:	in     al,dx
   14002e083:	(bad)  
   14002e084:	mov    ebp,0xbfff93a9
   14002e089:	stos   DWORD PTR es:[rdi],eax
   14002e08a:	xchg   ebp,eax
   14002e08b:	(bad)  
   14002e08c:	in     eax,dx
   14002e08d:	in     eax,dx
   14002e08e:	in     eax,dx
   14002e08f:	(bad)  
   14002e090:	sti    
   14002e091:	sti    
   14002e092:	sti    
   14002e093:	(bad)  
   14002e094:	cld    
   14002e095:	cld    
   14002e096:	cld    
   14002e097:	(bad)  
   14002e098:	cld    
   14002e099:	cld    
   14002e09a:	cld    
   14002e09b:	(bad)  
   14002e09c:	cld    
   14002e09d:	cld    
   14002e09e:	cld    
   14002e09f:	(bad)  
   14002e0a0:	cld    
   14002e0a1:	cld    
   14002e0a2:	cld    
   14002e0a3:	(bad)  
   14002e0a4:	cld    
   14002e0a5:	cld    
   14002e0a6:	cld    
   14002e0a7:	(bad)  
   14002e0a8:	cld    
   14002e0a9:	cld    
   14002e0aa:	cld    
   14002e0ab:	(bad)  
   14002e0ac:	cld    
   14002e0ad:	cld    
   14002e0ae:	cld    
   14002e0af:	(bad)  
   14002e0b0:	cld    
   14002e0b1:	cld    
   14002e0b2:	cld    
   14002e0b3:	(bad)  
   14002e0b4:	cld    
   14002e0b5:	cld    
   14002e0b6:	cld    
   14002e0b7:	(bad)  
   14002e0b8:	cld    
   14002e0b9:	cld    
   14002e0ba:	cld    
   14002e0bb:	(bad)  
   14002e0bc:	cld    
   14002e0bd:	cld    
   14002e0be:	cld    
   14002e0bf:	(bad)  
   14002e0c0:	cld    
   14002e0c1:	cld    
   14002e0c2:	cld    
   14002e0c3:	(bad)  
   14002e0c4:	cld    
   14002e0c5:	cld    
   14002e0c6:	cld    
   14002e0c7:	(bad)  
   14002e0c8:	cld    
   14002e0c9:	cld    
   14002e0ca:	cld    
   14002e0cb:	(bad)  
   14002e0cc:	cld    
   14002e0cd:	cld    
   14002e0ce:	cld    
   14002e0cf:	(bad)  
   14002e0d0:	cld    
   14002e0d1:	cld    
   14002e0d2:	cld    
   14002e0d3:	(bad)  
   14002e0d4:	cld    
   14002e0d5:	cld    
   14002e0d6:	cld    
   14002e0d7:	(bad)  
   14002e0d8:	cld    
   14002e0d9:	cld    
   14002e0da:	cld    
   14002e0db:	(bad)  
   14002e0dc:	cld    
   14002e0dd:	cld    
   14002e0de:	cld    
   14002e0df:	(bad)  
   14002e0e0:	cld    
   14002e0e1:	cld    
   14002e0e2:	cld    
   14002e0e3:	(bad)  
   14002e0e4:	cld    
   14002e0e5:	cld    
   14002e0e6:	cld    
   14002e0e7:	(bad)  
   14002e0e8:	cld    
   14002e0e9:	cld    
   14002e0ea:	cld    
   14002e0eb:	jmp    QWORD PTR [rbp+0x31fff4c9]
   14002e0f1:	sub    al,0xff
   14002e0f4:	movabs gs:0xfcfcfffbf2e9ffee,eax
   14002e0fe:	cld    
   14002e0ff:	(bad)  
   14002e100:	cld    
   14002e101:	cld    
   14002e102:	cld    
   14002e103:	(bad)  
   14002e104:	cld    
   14002e105:	cld    
   14002e106:	cld    
   14002e107:	(bad)  
   14002e108:	cld    
   14002e109:	cld    
   14002e10a:	cld    
   14002e10b:	(bad)  
   14002e10c:	cld    
   14002e10d:	cld    
   14002e10e:	cld    
   14002e10f:	(bad)  
   14002e110:	cld    
   14002e111:	cld    
   14002e112:	cld    
   14002e113:	(bad)  
   14002e114:	cld    
   14002e115:	cld    
   14002e116:	cld    
   14002e117:	(bad)  
   14002e118:	cld    
   14002e119:	cld    
   14002e11a:	cld    
   14002e11b:	(bad)  
   14002e11c:	cld    
   14002e11d:	cld    
   14002e11e:	cld    
   14002e11f:	(bad)  
   14002e120:	cld    
   14002e121:	cld    
   14002e122:	cld    
   14002e123:	(bad)  
   14002e124:	cld    
   14002e125:	cld    
   14002e126:	cld    
   14002e127:	(bad)  
   14002e128:	cld    
   14002e129:	cld    
   14002e12a:	cld    
   14002e12b:	(bad)  
   14002e12c:	cld    
   14002e12d:	cld    
   14002e12e:	cld    
   14002e12f:	(bad)  
   14002e130:	cld    
   14002e131:	cld    
   14002e132:	cld    
   14002e133:	(bad)  
   14002e134:	cld    
   14002e135:	cld    
   14002e136:	cld    
   14002e137:	(bad)  
   14002e138:	cld    
   14002e139:	cld    
   14002e13a:	cld    
   14002e13b:	(bad)  
   14002e13c:	sti    
   14002e13d:	sti    
   14002e13e:	sti    
   14002e13f:	(bad)  
   14002e140:	in     eax,dx
   14002e141:	in     eax,dx
   14002e142:	in     eax,dx
   14002e143:	(bad)  
   14002e144:	mov    edi,0xc0ff95ab
   14002e149:	lods   eax,DWORD PTR ds:[rsi]
   14002e14a:	xchg   edi,eax
   14002e14b:	(bad)  
   14002e14c:	in     eax,dx
   14002e14d:	in     eax,dx
   14002e14e:	in     eax,dx
   14002e14f:	(bad)  
   14002e150:	sti    
   14002e151:	sti    
   14002e152:	sti    
   14002e153:	(bad)  
   14002e154:	cld    
   14002e155:	cld    
   14002e156:	cld    
   14002e157:	(bad)  
   14002e158:	cld    
   14002e159:	cld    
   14002e15a:	cld    
   14002e15b:	(bad)  
   14002e15c:	cld    
   14002e15d:	cld    
   14002e15e:	cld    
   14002e15f:	(bad)  
   14002e160:	cld    
   14002e161:	cld    
   14002e162:	cld    
   14002e163:	(bad)  
   14002e164:	cld    
   14002e165:	cld    
   14002e166:	cld    
   14002e167:	(bad)  
   14002e168:	cld    
   14002e169:	cld    
   14002e16a:	cld    
   14002e16b:	(bad)  
   14002e16c:	cld    
   14002e16d:	cld    
   14002e16e:	cld    
   14002e16f:	(bad)  
   14002e170:	cld    
   14002e171:	cld    
   14002e172:	cld    
   14002e173:	(bad)  
   14002e174:	cld    
   14002e175:	cld    
   14002e176:	cld    
   14002e177:	(bad)  
   14002e178:	cld    
   14002e179:	cld    
   14002e17a:	cld    
   14002e17b:	(bad)  
   14002e17c:	cld    
   14002e17d:	cld    
   14002e17e:	cld    
   14002e17f:	(bad)  
   14002e180:	cld    
   14002e181:	cld    
   14002e182:	cld    
   14002e183:	(bad)  
   14002e184:	cld    
   14002e185:	cld    
   14002e186:	cld    
   14002e187:	(bad)  
   14002e188:	cld    
   14002e189:	cld    
   14002e18a:	cld    
   14002e18b:	(bad)  
   14002e18c:	cld    
   14002e18d:	cld    
   14002e18e:	cld    
   14002e18f:	(bad)  
   14002e190:	cld    
   14002e191:	cld    
   14002e192:	cld    
   14002e193:	(bad)  
   14002e194:	cld    
   14002e195:	cld    
   14002e196:	cld    
   14002e197:	(bad)  
   14002e198:	cld    
   14002e199:	cld    
   14002e19a:	cld    
   14002e19b:	(bad)  
   14002e19c:	cld    
   14002e19d:	cld    
   14002e19e:	cld    
   14002e19f:	(bad)  
   14002e1a0:	cld    
   14002e1a1:	cld    
   14002e1a2:	cld    
   14002e1a3:	(bad)  
   14002e1a4:	cld    
   14002e1a5:	cld    
   14002e1a6:	cld    
   14002e1a7:	(bad)  
   14002e1a8:	cld    
   14002e1a9:	cld    
   14002e1aa:	cld    
   14002e1ab:	(bad)  
   14002e1ac:	clc    
   14002e1ad:	stc    
   14002e1ae:	cld    
   14002e1af:	(bad)  
   14002e1b0:	jle    0x14002e164
   14002e1b2:	lock push QWORD PTR [rsi]
   14002e1b5:	test   cl,ch
   14002e1b7:	push   QWORD PTR [rbx+rdx*8-0x303000a]
   14002e1be:	cld    
   14002e1bf:	(bad)  
   14002e1c0:	cld    
   14002e1c1:	cld    
   14002e1c2:	cld    
   14002e1c3:	(bad)  
   14002e1c4:	cld    
   14002e1c5:	cld    
   14002e1c6:	cld    
   14002e1c7:	(bad)  
   14002e1c8:	cld    
   14002e1c9:	cld    
   14002e1ca:	cld    
   14002e1cb:	(bad)  
   14002e1cc:	cld    
   14002e1cd:	cld    
   14002e1ce:	cld    
   14002e1cf:	(bad)  
   14002e1d0:	cld    
   14002e1d1:	cld    
   14002e1d2:	cld    
   14002e1d3:	(bad)  
   14002e1d4:	cld    
   14002e1d5:	cld    
   14002e1d6:	cld    
   14002e1d7:	(bad)  
   14002e1d8:	cld    
   14002e1d9:	cld    
   14002e1da:	cld    
   14002e1db:	(bad)  
   14002e1dc:	cld    
   14002e1dd:	cld    
   14002e1de:	cld    
   14002e1df:	(bad)  
   14002e1e0:	cld    
   14002e1e1:	cld    
   14002e1e2:	cld    
   14002e1e3:	(bad)  
   14002e1e4:	cld    
   14002e1e5:	cld    
   14002e1e6:	cld    
   14002e1e7:	(bad)  
   14002e1e8:	cld    
   14002e1e9:	cld    
   14002e1ea:	cld    
   14002e1eb:	(bad)  
   14002e1ec:	cld    
   14002e1ed:	cld    
   14002e1ee:	cld    
   14002e1ef:	(bad)  
   14002e1f0:	cld    
   14002e1f1:	cld    
   14002e1f2:	cld    
   14002e1f3:	(bad)  
   14002e1f4:	cld    
   14002e1f5:	cld    
   14002e1f6:	cld    
   14002e1f7:	(bad)  
   14002e1f8:	cld    
   14002e1f9:	cld    
   14002e1fa:	cld    
   14002e1fb:	(bad)  
   14002e1fc:	sti    
   14002e1fd:	sti    
   14002e1fe:	sti    
   14002e1ff:	(bad)  
   14002e200:	in     eax,dx
   14002e201:	in     eax,dx
   14002e202:	in     eax,dx
   14002e203:	inc    eax
   14002e205:	lods   eax,DWORD PTR ds:[rsi]
   14002e206:	xchg   edi,eax
   14002e207:	inc    edx
   14002e209:	scas   eax,DWORD PTR es:[rdi]
   14002e20a:	cdq    
   14002e20b:	(bad)  
   14002e20c:	out    dx,al
   14002e20d:	out    dx,al
   14002e20e:	out    dx,al
   14002e20f:	(bad)  
   14002e210:	cld    
   14002e211:	cld    
   14002e212:	cld    
   14002e213:	(bad)  
   14002e214:	std    
   14002e215:	std    
   14002e216:	std    
   14002e217:	(bad)  
   14002e218:	std    
   14002e219:	std    
   14002e21a:	std    
   14002e21b:	(bad)  
   14002e21c:	std    
   14002e21d:	std    
   14002e21e:	std    
   14002e21f:	(bad)  
   14002e220:	std    
   14002e221:	std    
   14002e222:	std    
   14002e223:	(bad)  
   14002e224:	std    
   14002e225:	std    
   14002e226:	std    
   14002e227:	(bad)  
   14002e228:	std    
   14002e229:	std    
   14002e22a:	std    
   14002e22b:	(bad)  
   14002e22c:	std    
   14002e22d:	std    
   14002e22e:	std    
   14002e22f:	(bad)  
   14002e230:	std    
   14002e231:	std    
   14002e232:	std    
   14002e233:	(bad)  
   14002e234:	std    
   14002e235:	std    
   14002e236:	std    
   14002e237:	(bad)  
   14002e238:	std    
   14002e239:	std    
   14002e23a:	std    
   14002e23b:	(bad)  
   14002e23c:	std    
   14002e23d:	std    
   14002e23e:	std    
   14002e23f:	(bad)  
   14002e240:	std    
   14002e241:	std    
   14002e242:	std    
   14002e243:	(bad)  
   14002e244:	std    
   14002e245:	std    
   14002e246:	std    
   14002e247:	(bad)  
   14002e248:	std    
   14002e249:	std    
   14002e24a:	std    
   14002e24b:	(bad)  
   14002e24c:	std    
   14002e24d:	std    
   14002e24e:	std    
   14002e24f:	(bad)  
   14002e250:	std    
   14002e251:	std    
   14002e252:	std    
   14002e253:	(bad)  
   14002e254:	std    
   14002e255:	std    
   14002e256:	std    
   14002e257:	(bad)  
   14002e258:	std    
   14002e259:	std    
   14002e25a:	std    
   14002e25b:	(bad)  
   14002e25c:	std    
   14002e25d:	std    
   14002e25e:	std    
   14002e25f:	(bad)  
   14002e260:	std    
   14002e261:	std    
   14002e262:	std    
   14002e263:	(bad)  
   14002e264:	std    
   14002e265:	std    
   14002e266:	std    
   14002e267:	(bad)  
   14002e268:	std    
   14002e269:	std    
   14002e26a:	std    
   14002e26b:	(bad)  
   14002e26c:	std    
   14002e26d:	std    
   14002e26e:	std    
   14002e26f:	dec    eax
   14002e271:	fdivp  st(0),st
   14002e273:	dec    DWORD PTR [rdx-0x70]
   14002e276:	jmp    0x14002e277
   14002e278:	xchg   ecx,eax
   14002e279:	mov    edi,0xfdfdfff4
   14002e27e:	std    
   14002e27f:	(bad)  
   14002e280:	std    
   14002e281:	std    
   14002e282:	std    
   14002e283:	(bad)  
   14002e284:	std    
   14002e285:	std    
   14002e286:	std    
   14002e287:	(bad)  
   14002e288:	std    
   14002e289:	std    
   14002e28a:	std    
   14002e28b:	(bad)  
   14002e28c:	std    
   14002e28d:	std    
   14002e28e:	std    
   14002e28f:	(bad)  
   14002e290:	std    
   14002e291:	std    
   14002e292:	std    
   14002e293:	(bad)  
   14002e294:	std    
   14002e295:	std    
   14002e296:	std    
   14002e297:	(bad)  
   14002e298:	std    
   14002e299:	std    
   14002e29a:	std    
   14002e29b:	(bad)  
   14002e29c:	std    
   14002e29d:	std    
   14002e29e:	std    
   14002e29f:	(bad)  
   14002e2a0:	std    
   14002e2a1:	std    
   14002e2a2:	std    
   14002e2a3:	(bad)  
   14002e2a4:	std    
   14002e2a5:	std    
   14002e2a6:	std    
   14002e2a7:	(bad)  
   14002e2a8:	std    
   14002e2a9:	std    
   14002e2aa:	std    
   14002e2ab:	(bad)  
   14002e2ac:	std    
   14002e2ad:	std    
   14002e2ae:	std    
   14002e2af:	(bad)  
   14002e2b0:	std    
   14002e2b1:	std    
   14002e2b2:	std    
   14002e2b3:	(bad)  
   14002e2b4:	std    
   14002e2b5:	std    
   14002e2b6:	std    
   14002e2b7:	(bad)  
   14002e2b8:	std    
   14002e2b9:	std    
   14002e2ba:	std    
   14002e2bb:	(bad)  
   14002e2bc:	cld    
   14002e2bd:	cld    
   14002e2be:	cld    
   14002e2bf:	(bad)  
   14002e2c0:	out    dx,al
   14002e2c1:	out    dx,al
   14002e2c2:	out    dx,al
   14002e2c3:	inc    edx
   14002e2c5:	scas   eax,DWORD PTR es:[rdi]
   14002e2c6:	cdq    
   14002e2c7:	inc    esp
   14002e2c9:	mov    al,0x9a
   14002e2cb:	(bad)  
   14002e2cc:	out    dx,al
   14002e2cd:	out    dx,al
   14002e2ce:	out    dx,al
   14002e2cf:	(bad)  
   14002e2d0:	std    
   14002e2d1:	std    
   14002e2d2:	std    
   14002e2d3:	(bad)  
   14002e2d4:	(bad)  
   14002e2d5:	(bad)  
   14002e2d6:	(bad)  
   14002e2d7:	(bad)  
   14002e2d8:	(bad)  
   14002e2d9:	(bad)  
   14002e2da:	(bad)  
   14002e2db:	(bad)  
   14002e2dc:	(bad)  
   14002e2dd:	(bad)  
   14002e2de:	(bad)  
   14002e2df:	(bad)  
   14002e2e0:	(bad)  
   14002e2e1:	(bad)  
   14002e2e2:	(bad)  
   14002e2e3:	(bad)  
   14002e2e4:	(bad)  
   14002e2e5:	(bad)  
   14002e2e6:	(bad)  
   14002e2e7:	(bad)  
   14002e2e8:	(bad)  
   14002e2e9:	(bad)  
   14002e2ea:	(bad)  
   14002e2eb:	(bad)  
   14002e2ec:	(bad)  
   14002e2ed:	(bad)  
   14002e2ee:	(bad)  
   14002e2ef:	(bad)  
   14002e2f0:	(bad)  
   14002e2f1:	(bad)  
   14002e2f2:	(bad)  
   14002e2f3:	(bad)  
   14002e2f4:	(bad)  
   14002e2f5:	(bad)  
   14002e2f6:	(bad)  
   14002e2f7:	(bad)  
   14002e2f8:	(bad)  
   14002e2f9:	(bad)  
   14002e2fa:	(bad)  
   14002e2fb:	(bad)  
   14002e2fc:	(bad)  
   14002e2fd:	(bad)  
   14002e2fe:	(bad)  
   14002e2ff:	(bad)  
   14002e300:	(bad)  
   14002e301:	(bad)  
   14002e302:	(bad)  
   14002e303:	(bad)  
   14002e304:	(bad)  
   14002e305:	(bad)  
   14002e306:	(bad)  
   14002e307:	(bad)  
   14002e308:	(bad)  
   14002e309:	(bad)  
   14002e30a:	(bad)  
   14002e30b:	(bad)  
   14002e30c:	(bad)  
   14002e30d:	(bad)  
   14002e30e:	(bad)  
   14002e30f:	(bad)  
   14002e310:	(bad)  
   14002e311:	(bad)  
   14002e312:	(bad)  
   14002e313:	(bad)  
   14002e314:	(bad)  
   14002e315:	(bad)  
   14002e316:	(bad)  
   14002e317:	(bad)  
   14002e318:	(bad)  
   14002e319:	(bad)  
   14002e31a:	(bad)  
   14002e31b:	(bad)  
   14002e31c:	(bad)  
   14002e31d:	(bad)  
   14002e31e:	(bad)  
   14002e31f:	(bad)  
   14002e320:	(bad)  
   14002e321:	(bad)  
   14002e322:	(bad)  
   14002e323:	(bad)  
   14002e324:	(bad)  
   14002e325:	(bad)  
   14002e326:	(bad)  
   14002e327:	(bad)  
   14002e328:	(bad)  
   14002e329:	(bad)  
   14002e32a:	(bad)  
   14002e32b:	(bad)  
   14002e32c:	(bad)  
   14002e32d:	(bad)  
   14002e32e:	(bad)  
   14002e32f:	push   rbx
   14002e331:	idiv   ebp
   14002e333:	push   QWORD PTR [rsp+rbp*4-0x10]
   14002e337:	(bad)  
   14002e338:	jle    0x14002e2ed
   14002e33a:	icebp  
   14002e33b:	(bad)  
   14002e33c:	(bad)  
   14002e33d:	(bad)  
   14002e33e:	(bad)  
   14002e33f:	(bad)  
   14002e340:	(bad)  
   14002e341:	(bad)  
   14002e342:	(bad)  
   14002e343:	(bad)  
   14002e344:	(bad)  
   14002e345:	(bad)  
   14002e346:	(bad)  
   14002e347:	(bad)  
   14002e348:	(bad)  
   14002e349:	(bad)  
   14002e34a:	(bad)  
   14002e34b:	(bad)  
   14002e34c:	(bad)  
   14002e34d:	(bad)  
   14002e34e:	(bad)  
   14002e34f:	(bad)  
   14002e350:	(bad)  
   14002e351:	(bad)  
   14002e352:	(bad)  
   14002e353:	(bad)  
   14002e354:	(bad)  
   14002e355:	(bad)  
   14002e356:	(bad)  
   14002e357:	(bad)  
   14002e358:	(bad)  
   14002e359:	(bad)  
   14002e35a:	(bad)  
   14002e35b:	(bad)  
   14002e35c:	(bad)  
   14002e35d:	(bad)  
   14002e35e:	(bad)  
   14002e35f:	(bad)  
   14002e360:	(bad)  
   14002e361:	(bad)  
   14002e362:	(bad)  
   14002e363:	(bad)  
   14002e364:	(bad)  
   14002e365:	(bad)  
   14002e366:	(bad)  
   14002e367:	(bad)  
   14002e368:	(bad)  
   14002e369:	(bad)  
   14002e36a:	(bad)  
   14002e36b:	(bad)  
   14002e36c:	(bad)  
   14002e36d:	(bad)  
   14002e36e:	(bad)  
   14002e36f:	(bad)  
   14002e370:	(bad)  
   14002e371:	(bad)  
   14002e372:	(bad)  
   14002e373:	(bad)  
   14002e374:	(bad)  
   14002e375:	(bad)  
   14002e376:	(bad)  
   14002e377:	(bad)  
   14002e378:	(bad)  
   14002e379:	(bad)  
   14002e37a:	(bad)  
   14002e37b:	(bad)  
   14002e37c:	std    
   14002e37d:	std    
   14002e37e:	std    
   14002e37f:	(bad)  
   14002e380:	out    dx,eax
   14002e381:	out    dx,eax
   14002e382:	out    dx,eax
   14002e383:	inc    esp
   14002e385:	mov    al,0x9a
   14002e387:	inc    ebp
   14002e389:	mov    dl,0x9c
   14002e38b:	jmp    rsi
   14002e38d:	jrcxz  0x14002e370
   14002e38f:	(bad)  
   14002e390:	cli    
   14002e391:	cli    
   14002e392:	cli    
   14002e393:	(bad)  
   14002e394:	(bad)  
   14002e395:	(bad)  
   14002e396:	(bad)  
   14002e397:	(bad)  
   14002e398:	(bad)  
   14002e399:	(bad)  
   14002e39a:	(bad)  
   14002e39b:	(bad)  
   14002e39c:	(bad)  
   14002e39d:	(bad)  
   14002e39e:	(bad)  
   14002e39f:	(bad)  
   14002e3a0:	(bad)  
   14002e3a1:	(bad)  
   14002e3a2:	(bad)  
   14002e3a3:	(bad)  
   14002e3a4:	(bad)  
   14002e3a5:	(bad)  
   14002e3a6:	(bad)  
   14002e3a7:	(bad)  
   14002e3a8:	(bad)  
   14002e3a9:	(bad)  
   14002e3aa:	(bad)  
   14002e3ab:	(bad)  
   14002e3ac:	(bad)  
   14002e3ad:	(bad)  
   14002e3ae:	(bad)  
   14002e3af:	(bad)  
   14002e3b0:	(bad)  
   14002e3b1:	(bad)  
   14002e3b2:	(bad)  
   14002e3b3:	(bad)  
   14002e3b4:	(bad)  
   14002e3b5:	(bad)  
   14002e3b6:	(bad)  
   14002e3b7:	(bad)  
   14002e3b8:	(bad)  
   14002e3b9:	(bad)  
   14002e3ba:	(bad)  
   14002e3bb:	(bad)  
   14002e3bc:	(bad)  
   14002e3bd:	(bad)  
   14002e3be:	(bad)  
   14002e3bf:	(bad)  
   14002e3c0:	(bad)  
   14002e3c1:	(bad)  
   14002e3c2:	(bad)  
   14002e3c3:	(bad)  
   14002e3c4:	(bad)  
   14002e3c5:	(bad)  
   14002e3c6:	(bad)  
   14002e3c7:	(bad)  
   14002e3c8:	(bad)  
   14002e3c9:	(bad)  
   14002e3ca:	(bad)  
   14002e3cb:	(bad)  
   14002e3cc:	(bad)  
   14002e3cd:	(bad)  
   14002e3ce:	(bad)  
   14002e3cf:	(bad)  
   14002e3d0:	(bad)  
   14002e3d1:	(bad)  
   14002e3d2:	(bad)  
   14002e3d3:	(bad)  
   14002e3d4:	(bad)  
   14002e3d5:	(bad)  
   14002e3d6:	(bad)  
   14002e3d7:	(bad)  
   14002e3d8:	(bad)  
   14002e3d9:	(bad)  
   14002e3da:	(bad)  
   14002e3db:	(bad)  
   14002e3dc:	(bad)  
   14002e3dd:	(bad)  
   14002e3de:	(bad)  
   14002e3df:	(bad)  
   14002e3e0:	(bad)  
   14002e3e1:	(bad)  
   14002e3e2:	(bad)  
   14002e3e3:	(bad)  
   14002e3e4:	(bad)  
   14002e3e5:	(bad)  
   14002e3e6:	(bad)  
   14002e3e7:	(bad)  
   14002e3e8:	(bad)  
   14002e3e9:	(bad)  
   14002e3ea:	(bad)  
   14002e3eb:	(bad)  
   14002e3ec:	(bad)  
   14002e3ed:	(bad)  
   14002e3ee:	(bad)  
   14002e3ef:	(bad)  
   14002e3f0:	std    
   14002e3f1:	std    
   14002e3f2:	(bad)  
   14002e3f3:	push   QWORD PTR [rbp-0x4d00092d]
   14002e3f9:	shl    dh,cl
   14002e3fb:	(bad)  
   14002e3fc:	(bad)  
   14002e3fd:	(bad)  
   14002e3fe:	(bad)  
   14002e3ff:	(bad)  
   14002e400:	(bad)  
   14002e401:	(bad)  
   14002e402:	(bad)  
   14002e403:	(bad)  
   14002e404:	(bad)  
   14002e405:	(bad)  
   14002e406:	(bad)  
   14002e407:	(bad)  
   14002e408:	(bad)  
   14002e409:	(bad)  
   14002e40a:	(bad)  
   14002e40b:	(bad)  
   14002e40c:	(bad)  
   14002e40d:	(bad)  
   14002e40e:	(bad)  
   14002e40f:	(bad)  
   14002e410:	(bad)  
   14002e411:	(bad)  
   14002e412:	(bad)  
   14002e413:	(bad)  
   14002e414:	(bad)  
   14002e415:	(bad)  
   14002e416:	(bad)  
   14002e417:	(bad)  
   14002e418:	(bad)  
   14002e419:	(bad)  
   14002e41a:	(bad)  
   14002e41b:	(bad)  
   14002e41c:	(bad)  
   14002e41d:	(bad)  
   14002e41e:	(bad)  
   14002e41f:	(bad)  
   14002e420:	(bad)  
   14002e421:	(bad)  
   14002e422:	(bad)  
   14002e423:	(bad)  
   14002e424:	(bad)  
   14002e425:	(bad)  
   14002e426:	(bad)  
   14002e427:	(bad)  
   14002e428:	(bad)  
   14002e429:	(bad)  
   14002e42a:	(bad)  
   14002e42b:	(bad)  
   14002e42c:	(bad)  
   14002e42d:	(bad)  
   14002e42e:	(bad)  
   14002e42f:	(bad)  
   14002e430:	(bad)  
   14002e431:	(bad)  
   14002e432:	(bad)  
   14002e433:	(bad)  
   14002e434:	(bad)  
   14002e435:	(bad)  
   14002e436:	(bad)  
   14002e437:	(bad)  
   14002e438:	(bad)  
   14002e439:	(bad)  
   14002e43a:	(bad)  
   14002e43b:	(bad)  
   14002e43c:	sti    
   14002e43d:	sti    
   14002e43e:	sti    
   14002e43f:	(bad)  
   14002e440:	in     eax,dx
   14002e441:	in     eax,dx
   14002e442:	in     eax,dx
   14002e443:	inc    ebp
   14002e445:	mov    dl,0x9c
   14002e447:	inc    esi
   14002e449:	mov    bl,0x9e
   14002e44b:	js     0x14002e420
   14002e44d:	leave  
   14002e44e:	mov    esi,0xf5f5f5ff
   14002e453:	(bad)  
   14002e454:	std    
   14002e455:	std    
   14002e456:	std    
   14002e457:	(bad)  
   14002e458:	(bad)  
   14002e459:	(bad)  
   14002e45a:	(bad)  
   14002e45b:	(bad)  
   14002e45c:	(bad)  
   14002e45d:	(bad)  
   14002e45e:	(bad)  
   14002e45f:	(bad)  
   14002e460:	(bad)  
   14002e461:	(bad)  
   14002e462:	(bad)  
   14002e463:	(bad)  
   14002e464:	(bad)  
   14002e465:	(bad)  
   14002e466:	(bad)  
   14002e467:	(bad)  
   14002e468:	(bad)  
   14002e469:	(bad)  
   14002e46a:	(bad)  
   14002e46b:	(bad)  
   14002e46c:	(bad)  
   14002e46d:	(bad)  
   14002e46e:	(bad)  
   14002e46f:	(bad)  
   14002e470:	(bad)  
   14002e471:	(bad)  
   14002e472:	(bad)  
   14002e473:	(bad)  
   14002e474:	(bad)  
   14002e475:	(bad)  
   14002e476:	(bad)  
   14002e477:	(bad)  
   14002e478:	(bad)  
   14002e479:	(bad)  
   14002e47a:	(bad)  
   14002e47b:	(bad)  
   14002e47c:	(bad)  
   14002e47d:	(bad)  
   14002e47e:	(bad)  
   14002e47f:	(bad)  
   14002e480:	(bad)  
   14002e481:	(bad)  
   14002e482:	(bad)  
   14002e483:	(bad)  
   14002e484:	(bad)  
   14002e485:	(bad)  
   14002e486:	(bad)  
   14002e487:	(bad)  
   14002e488:	(bad)  
   14002e489:	(bad)  
   14002e48a:	(bad)  
   14002e48b:	(bad)  
   14002e48c:	(bad)  
   14002e48d:	(bad)  
   14002e48e:	(bad)  
   14002e48f:	(bad)  
   14002e490:	(bad)  
   14002e491:	(bad)  
   14002e492:	(bad)  
   14002e493:	(bad)  
   14002e494:	(bad)  
   14002e495:	(bad)  
   14002e496:	(bad)  
   14002e497:	(bad)  
   14002e498:	(bad)  
   14002e499:	(bad)  
   14002e49a:	(bad)  
   14002e49b:	(bad)  
   14002e49c:	(bad)  
   14002e49d:	(bad)  
   14002e49e:	(bad)  
   14002e49f:	(bad)  
   14002e4a0:	(bad)  
   14002e4a1:	(bad)  
   14002e4a2:	(bad)  
   14002e4a3:	(bad)  
   14002e4a4:	(bad)  
   14002e4a5:	(bad)  
   14002e4a6:	(bad)  
   14002e4a7:	(bad)  
   14002e4a8:	(bad)  
   14002e4a9:	(bad)  
   14002e4aa:	(bad)  
   14002e4ab:	(bad)  
   14002e4ac:	(bad)  
   14002e4ad:	(bad)  
   14002e4ae:	(bad)  
   14002e4af:	(bad)  
   14002e4b0:	(bad)  
   14002e4b1:	(bad)  
   14002e4b2:	(bad)  
   14002e4b3:	(bad)  
   14002e4b4:	(bad)  
   14002e4b5:	(bad)  
   14002e4b6:	(bad)  
   14002e4b7:	(bad)  
   14002e4b8:	(bad)  
   14002e4b9:	(bad)  
   14002e4ba:	(bad)  
   14002e4bb:	(bad)  
   14002e4bc:	(bad)  
   14002e4bd:	(bad)  
   14002e4be:	(bad)  
   14002e4bf:	(bad)  
   14002e4c0:	(bad)  
   14002e4c1:	(bad)  
   14002e4c2:	(bad)  
   14002e4c3:	(bad)  
   14002e4c4:	(bad)  
   14002e4c5:	(bad)  
   14002e4c6:	(bad)  
   14002e4c7:	(bad)  
   14002e4c8:	(bad)  
   14002e4c9:	(bad)  
   14002e4ca:	(bad)  
   14002e4cb:	(bad)  
   14002e4cc:	(bad)  
   14002e4cd:	(bad)  
   14002e4ce:	(bad)  
   14002e4cf:	(bad)  
   14002e4d0:	(bad)  
   14002e4d1:	(bad)  
   14002e4d2:	(bad)  
   14002e4d3:	(bad)  
   14002e4d4:	(bad)  
   14002e4d5:	(bad)  
   14002e4d6:	(bad)  
   14002e4d7:	(bad)  
   14002e4d8:	(bad)  
   14002e4d9:	(bad)  
   14002e4da:	(bad)  
   14002e4db:	(bad)  
   14002e4dc:	(bad)  
   14002e4dd:	(bad)  
   14002e4de:	(bad)  
   14002e4df:	(bad)  
   14002e4e0:	(bad)  
   14002e4e1:	(bad)  
   14002e4e2:	(bad)  
   14002e4e3:	(bad)  
   14002e4e4:	(bad)  
   14002e4e5:	(bad)  
   14002e4e6:	(bad)  
   14002e4e7:	(bad)  
   14002e4e8:	(bad)  
   14002e4e9:	(bad)  
   14002e4ea:	(bad)  
   14002e4eb:	(bad)  
   14002e4ec:	(bad)  
   14002e4ed:	(bad)  
   14002e4ee:	(bad)  
   14002e4ef:	(bad)  
   14002e4f0:	(bad)  
   14002e4f1:	(bad)  
   14002e4f2:	(bad)  
   14002e4f3:	(bad)  
   14002e4f4:	(bad)  
   14002e4f5:	(bad)  
   14002e4f6:	(bad)  
   14002e4f7:	(bad)  
   14002e4f8:	(bad)  
   14002e4f9:	(bad)  
   14002e4fa:	(bad)  
   14002e4fb:	(bad)  
   14002e4fc:	clc    
   14002e4fd:	clc    
   14002e4fe:	clc    
   14002e4ff:	(bad)  
   14002e500:	fcmovnbe st,st(3)
   14002e502:	int3   
   14002e503:	inc    esi
   14002e505:	mov    bl,0x9e
   14002e507:	lahf   
   14002e508:	enter  0x9fb5,0x21
   14002e50c:	enter  0x9fb5,0xf9
   14002e510:	loop   0x14002e4f0
   14002e512:	(bad)  
   14002e514:	div    dh
   14002e516:	idiv   bh
   14002e518:	std    
   14002e519:	std    
   14002e51a:	std    
   14002e51b:	(bad)  
   14002e51c:	(bad)  
   14002e51d:	(bad)  
   14002e51e:	(bad)  
   14002e51f:	(bad)  
   14002e520:	(bad)  
   14002e521:	(bad)  
   14002e522:	(bad)  
   14002e523:	(bad)  
   14002e524:	(bad)  
   14002e525:	(bad)  
   14002e526:	(bad)  
   14002e527:	(bad)  
   14002e528:	(bad)  
   14002e529:	(bad)  
   14002e52a:	(bad)  
   14002e52b:	(bad)  
   14002e52c:	(bad)  
   14002e52d:	(bad)  
   14002e52e:	(bad)  
   14002e52f:	(bad)  
   14002e530:	(bad)  
   14002e531:	(bad)  
   14002e532:	(bad)  
   14002e533:	(bad)  
   14002e534:	(bad)  
   14002e535:	(bad)  
   14002e536:	(bad)  
   14002e537:	(bad)  
   14002e538:	(bad)  
   14002e539:	(bad)  
   14002e53a:	(bad)  
   14002e53b:	(bad)  
   14002e53c:	(bad)  
   14002e53d:	(bad)  
   14002e53e:	(bad)  
   14002e53f:	(bad)  
   14002e540:	(bad)  
   14002e541:	(bad)  
   14002e542:	(bad)  
   14002e543:	(bad)  
   14002e544:	(bad)  
   14002e545:	(bad)  
   14002e546:	(bad)  
   14002e547:	(bad)  
   14002e548:	(bad)  
   14002e549:	(bad)  
   14002e54a:	(bad)  
   14002e54b:	(bad)  
   14002e54c:	(bad)  
   14002e54d:	(bad)  
   14002e54e:	(bad)  
   14002e54f:	(bad)  
   14002e550:	(bad)  
   14002e551:	(bad)  
   14002e552:	(bad)  
   14002e553:	(bad)  
   14002e554:	(bad)  
   14002e555:	(bad)  
   14002e556:	(bad)  
   14002e557:	(bad)  
   14002e558:	(bad)  
   14002e559:	(bad)  
   14002e55a:	(bad)  
   14002e55b:	(bad)  
   14002e55c:	(bad)  
   14002e55d:	(bad)  
   14002e55e:	(bad)  
   14002e55f:	(bad)  
   14002e560:	(bad)  
   14002e561:	(bad)  
   14002e562:	(bad)  
   14002e563:	(bad)  
   14002e564:	(bad)  
   14002e565:	(bad)  
   14002e566:	(bad)  
   14002e567:	(bad)  
   14002e568:	(bad)  
   14002e569:	(bad)  
   14002e56a:	(bad)  
   14002e56b:	(bad)  
   14002e56c:	(bad)  
   14002e56d:	(bad)  
   14002e56e:	(bad)  
   14002e56f:	(bad)  
   14002e570:	(bad)  
   14002e571:	(bad)  
   14002e572:	(bad)  
   14002e573:	(bad)  
   14002e574:	(bad)  
   14002e575:	(bad)  
   14002e576:	(bad)  
   14002e577:	(bad)  
   14002e578:	(bad)  
   14002e579:	(bad)  
   14002e57a:	(bad)  
   14002e57b:	(bad)  
   14002e57c:	(bad)  
   14002e57d:	(bad)  
   14002e57e:	(bad)  
   14002e57f:	(bad)  
   14002e580:	(bad)  
   14002e581:	(bad)  
   14002e582:	(bad)  
   14002e583:	(bad)  
   14002e584:	(bad)  
   14002e585:	(bad)  
   14002e586:	(bad)  
   14002e587:	(bad)  
   14002e588:	(bad)  
   14002e589:	(bad)  
   14002e58a:	(bad)  
   14002e58b:	(bad)  
   14002e58c:	(bad)  
   14002e58d:	(bad)  
   14002e58e:	(bad)  
   14002e58f:	(bad)  
   14002e590:	(bad)  
   14002e591:	(bad)  
   14002e592:	(bad)  
   14002e593:	(bad)  
   14002e594:	(bad)  
   14002e595:	(bad)  
   14002e596:	(bad)  
   14002e597:	(bad)  
   14002e598:	(bad)  
   14002e599:	(bad)  
   14002e59a:	(bad)  
   14002e59b:	(bad)  
   14002e59c:	(bad)  
   14002e59d:	(bad)  
   14002e59e:	(bad)  
   14002e59f:	(bad)  
   14002e5a0:	(bad)  
   14002e5a1:	(bad)  
   14002e5a2:	(bad)  
   14002e5a3:	(bad)  
   14002e5a4:	(bad)  
   14002e5a5:	(bad)  
   14002e5a6:	(bad)  
   14002e5a7:	(bad)  
   14002e5a8:	(bad)  
   14002e5a9:	(bad)  
   14002e5aa:	(bad)  
   14002e5ab:	(bad)  
   14002e5ac:	(bad)  
   14002e5ad:	(bad)  
   14002e5ae:	(bad)  
   14002e5af:	(bad)  
   14002e5b0:	(bad)  
   14002e5b1:	(bad)  
   14002e5b2:	(bad)  
   14002e5b3:	(bad)  
   14002e5b4:	std    
   14002e5b5:	std    
   14002e5b6:	std    
   14002e5b7:	(bad)  
   14002e5b8:	clc    
   14002e5b9:	clc    
   14002e5ba:	clc    
   14002e5bb:	(bad)  
   14002e5bc:	out    dx,al
   14002e5bd:	out    dx,al
   14002e5be:	out    dx,al
   14002e5bf:	dec    esi
   14002e5c1:	shl    DWORD PTR [rdx-0x604a3701],0x4e
   14002e5c8:	add    BYTE PTR [rax],al
   14002e5ca:	add    BYTE PTR [rax],al
   14002e5cc:	leave  
   14002e5cd:	mov    dh,0xa1
   14002e5cf:	leavew 
   14002e5d1:	mov    dh,0xa1
   14002e5d3:	cld    
   14002e5d4:	(bad)  
   14002e5d6:	leave  
   14002e5d7:	(bad)  
   14002e5d8:	out    dx,eax
   14002e5d9:	out    dx,eax
   14002e5da:	out    dx,eax
   14002e5db:	push   rbx
   14002e5dd:	repz repz push rdi
   14002e5e1:	div    edi
   14002e5e3:	(bad)  
   14002e5e4:	clc    
   14002e5e5:	clc    
   14002e5e6:	clc    
   14002e5e7:	(bad)  
   14002e5e8:	clc    
   14002e5e9:	clc    
   14002e5ea:	clc    
   14002e5eb:	(bad)  
   14002e5ec:	clc    
   14002e5ed:	clc    
   14002e5ee:	clc    
   14002e5ef:	(bad)  
   14002e5f0:	clc    
   14002e5f1:	clc    
   14002e5f2:	clc    
   14002e5f3:	(bad)  
   14002e5f4:	clc    
   14002e5f5:	clc    
   14002e5f6:	clc    
   14002e5f7:	(bad)  
   14002e5f8:	clc    
   14002e5f9:	clc    
   14002e5fa:	clc    
   14002e5fb:	(bad)  
   14002e5fc:	clc    
   14002e5fd:	clc    
   14002e5fe:	clc    
   14002e5ff:	(bad)  
   14002e600:	clc    
   14002e601:	clc    
   14002e602:	clc    
   14002e603:	(bad)  
   14002e604:	clc    
   14002e605:	clc    
   14002e606:	clc    
   14002e607:	(bad)  
   14002e608:	clc    
   14002e609:	clc    
   14002e60a:	clc    
   14002e60b:	(bad)  
   14002e60c:	clc    
   14002e60d:	clc    
   14002e60e:	clc    
   14002e60f:	(bad)  
   14002e610:	clc    
   14002e611:	clc    
   14002e612:	clc    
   14002e613:	(bad)  
   14002e614:	clc    
   14002e615:	clc    
   14002e616:	clc    
   14002e617:	(bad)  
   14002e618:	clc    
   14002e619:	clc    
   14002e61a:	clc    
   14002e61b:	(bad)  
   14002e61c:	clc    
   14002e61d:	clc    
   14002e61e:	clc    
   14002e61f:	(bad)  
   14002e620:	clc    
   14002e621:	clc    
   14002e622:	clc    
   14002e623:	(bad)  
   14002e624:	clc    
   14002e625:	clc    
   14002e626:	clc    
   14002e627:	(bad)  
   14002e628:	clc    
   14002e629:	clc    
   14002e62a:	clc    
   14002e62b:	(bad)  
   14002e62c:	clc    
   14002e62d:	clc    
   14002e62e:	clc    
   14002e62f:	(bad)  
   14002e630:	clc    
   14002e631:	clc    
   14002e632:	clc    
   14002e633:	(bad)  
   14002e634:	clc    
   14002e635:	clc    
   14002e636:	clc    
   14002e637:	(bad)  
   14002e638:	clc    
   14002e639:	clc    
   14002e63a:	clc    
   14002e63b:	(bad)  
   14002e63c:	clc    
   14002e63d:	clc    
   14002e63e:	clc    
   14002e63f:	(bad)  
   14002e640:	clc    
   14002e641:	clc    
   14002e642:	clc    
   14002e643:	(bad)  
   14002e644:	clc    
   14002e645:	clc    
   14002e646:	clc    
   14002e647:	(bad)  
   14002e648:	clc    
   14002e649:	clc    
   14002e64a:	clc    
   14002e64b:	(bad)  
   14002e64c:	clc    
   14002e64d:	clc    
   14002e64e:	clc    
   14002e64f:	(bad)  
   14002e650:	clc    
   14002e651:	clc    
   14002e652:	clc    
   14002e653:	(bad)  
   14002e654:	clc    
   14002e655:	clc    
   14002e656:	clc    
   14002e657:	(bad)  
   14002e658:	clc    
   14002e659:	clc    
   14002e65a:	clc    
   14002e65b:	(bad)  
   14002e65c:	clc    
   14002e65d:	clc    
   14002e65e:	clc    
   14002e65f:	(bad)  
   14002e660:	clc    
   14002e661:	clc    
   14002e662:	clc    
   14002e663:	(bad)  
   14002e664:	clc    
   14002e665:	clc    
   14002e666:	clc    
   14002e667:	(bad)  
   14002e668:	clc    
   14002e669:	clc    
   14002e66a:	clc    
   14002e66b:	push   rdi
   14002e66d:	div    edi
   14002e66f:	push   rsp
   14002e671:	hlt    
   14002e672:	hlt    
   14002e673:	push   rax
   14002e675:	lock lock (bad) 
   14002e678:	(bad)  
   14002e67a:	int    0xff
   14002e67c:	iret   
   14002e67d:	shl    DWORD PTR [rbx-0x5e493601],0x99
	...
   14002e690:	retf   0xa2b7
   14002e693:	xor    ecx,edx
   14002e695:	mov    bh,0xa2
   14002e697:	xchg   esi,eax
   14002e698:	retf   0xa2b7
   14002e69b:	dec    edx
   14002e69d:	mov    bh,0xa2
   14002e69f:	dec    edx
   14002e6a1:	mov    bh,0xa2
   14002e6a3:	dec    edx
   14002e6a5:	mov    bh,0xa2
   14002e6a7:	dec    edx
   14002e6a9:	mov    bh,0xa2
   14002e6ab:	dec    edx
   14002e6ad:	mov    bh,0xa2
   14002e6af:	dec    edx
   14002e6b1:	mov    bh,0xa2
   14002e6b3:	dec    edx
   14002e6b5:	mov    bh,0xa2
   14002e6b7:	dec    edx
   14002e6b9:	mov    bh,0xa2
   14002e6bb:	dec    edx
   14002e6bd:	mov    bh,0xa2
   14002e6bf:	dec    edx
   14002e6c1:	mov    bh,0xa2
   14002e6c3:	dec    edx
   14002e6c5:	mov    bh,0xa2
   14002e6c7:	dec    edx
   14002e6c9:	mov    bh,0xa2
   14002e6cb:	dec    edx
   14002e6cd:	mov    bh,0xa2
   14002e6cf:	dec    edx
   14002e6d1:	mov    bh,0xa2
   14002e6d3:	dec    edx
   14002e6d5:	mov    bh,0xa2
   14002e6d7:	dec    edx
   14002e6d9:	mov    bh,0xa2
   14002e6db:	dec    edx
   14002e6dd:	mov    bh,0xa2
   14002e6df:	dec    edx
   14002e6e1:	mov    bh,0xa2
   14002e6e3:	dec    edx
   14002e6e5:	mov    bh,0xa2
   14002e6e7:	dec    edx
   14002e6e9:	mov    bh,0xa2
   14002e6eb:	dec    edx
   14002e6ed:	mov    bh,0xa2
   14002e6ef:	dec    edx
   14002e6f1:	mov    bh,0xa2
   14002e6f3:	dec    edx
   14002e6f5:	mov    bh,0xa2
   14002e6f7:	dec    edx
   14002e6f9:	mov    bh,0xa2
   14002e6fb:	dec    edx
   14002e6fd:	mov    bh,0xa2
   14002e6ff:	dec    edx
   14002e701:	mov    bh,0xa2
   14002e703:	dec    edx
   14002e705:	mov    bh,0xa2
   14002e707:	dec    edx
   14002e709:	mov    bh,0xa2
   14002e70b:	dec    edx
   14002e70d:	mov    bh,0xa2
   14002e70f:	dec    edx
   14002e711:	mov    bh,0xa2
   14002e713:	dec    edx
   14002e715:	mov    bh,0xa2
   14002e717:	dec    edx
   14002e719:	mov    bh,0xa2
   14002e71b:	dec    edx
   14002e71d:	mov    bh,0xa2
   14002e71f:	dec    edx
   14002e721:	mov    bh,0xa2
   14002e723:	dec    edx
   14002e725:	mov    bh,0xa2
   14002e727:	dec    edx
   14002e729:	mov    bh,0xa2
   14002e72b:	dec    edx
   14002e72d:	mov    bh,0xa2
   14002e72f:	dec    edx
   14002e731:	mov    bh,0xa2
   14002e733:	dec    edx
   14002e735:	mov    bh,0xa2
   14002e737:	dec    edx
   14002e739:	mov    bh,0xa2
   14002e73b:	lahf   
   14002e73c:	retf   0xa2b7
   14002e73f:	rex.WXB add BYTE PTR [r8],al
   14002e742:	add    BYTE PTR [rax],al
   14002e744:	add    BYTE PTR [rax],al
   14002e746:	add    BYTE PTR [rax],al
   14002e748:	rol    BYTE PTR [rax],0x0
   14002e74b:	add    BYTE PTR [rax],al
   14002e74d:	add    eax,DWORD PTR [rax]
   14002e74f:	add    BYTE PTR [rax+0x0],al
   14002e755:	add    eax,esp
   14002e757:	add    BYTE PTR [rax],al
   14002e759:	add    BYTE PTR [rax],al
   14002e75b:	add    BYTE PTR [rax],al
   14002e75d:	add    al,al
   14002e75f:	add    BYTE PTR [rax],al
   14002e761:	add    BYTE PTR [rax],al
   14002e763:	add    BYTE PTR [rax],al
   14002e765:	add    BYTE PTR [rax+0x0],al
   14002e76b:	add    BYTE PTR [rax],al
   14002e76d:	add    BYTE PTR [rax+0x0],al
	...
   14002e8b3:	add    BYTE PTR [rax],al
   14002e8b5:	add    BYTE PTR [rax+0x8000],al
   14002e8bb:	add    BYTE PTR [rax],al
   14002e8bd:	add    DWORD PTR [rax+0xc000],eax
   14002e8c3:	add    BYTE PTR [rax],al
   14002e8c5:	add    eax,eax
   14002e8c7:	add    BYTE PTR [rax],ch
   14002e8c9:	add    BYTE PTR [rax],al
   14002e8cb:	add    BYTE PTR [rax],ah
   14002e8cd:	add    BYTE PTR [rax],al
   14002e8cf:	add    BYTE PTR [rax+0x0],al
   14002e8d2:	add    BYTE PTR [rax],al
   14002e8d4:	add    DWORD PTR [rax],eax
   14002e8d6:	and    BYTE PTR [rax],al
	...
   14002e8f8:	outs   dx,BYTE PTR ds:[rsi]
   14002e8f9:	pop    rax
   14002e8fa:	cmp    DWORD PTR [rax+0x6e],eax
   14002e8fd:	pop    rax
   14002e8fe:	cmp    DWORD PTR [rdi+0x6e],edi
   14002e901:	pop    rax
   14002e902:	cmp    DWORD PTR [rdi-0xc6a792],edi
   14002e908:	outs   dx,BYTE PTR ds:[rsi]
   14002e909:	pop    rax
   14002e90a:	cmp    edi,edi
   14002e90c:	outs   dx,BYTE PTR ds:[rsi]
   14002e90d:	pop    rax
   14002e90e:	cmp    edi,edi
   14002e910:	outs   dx,BYTE PTR ds:[rsi]
   14002e911:	pop    rax
   14002e912:	cmp    edi,edi
   14002e914:	outs   dx,BYTE PTR ds:[rsi]
   14002e915:	pop    rax
   14002e916:	cmp    edi,edi
   14002e918:	outs   dx,BYTE PTR ds:[rsi]
   14002e919:	pop    rax
   14002e91a:	cmp    edi,edi
   14002e91c:	outs   dx,BYTE PTR ds:[rsi]
   14002e91d:	pop    rax
   14002e91e:	cmp    edi,edi
   14002e920:	outs   dx,BYTE PTR ds:[rsi]
   14002e921:	pop    rax
   14002e922:	cmp    edi,edi
   14002e924:	outs   dx,BYTE PTR ds:[rsi]
   14002e925:	pop    rax
   14002e926:	cmp    edi,edi
   14002e928:	outs   dx,BYTE PTR ds:[rsi]
   14002e929:	pop    rax
   14002e92a:	cmp    edi,edi
   14002e92c:	outs   dx,BYTE PTR ds:[rsi]
   14002e92d:	pop    rax
   14002e92e:	cmp    edi,edi
   14002e930:	outs   dx,BYTE PTR ds:[rsi]
   14002e931:	pop    rax
   14002e932:	cmp    edi,edi
   14002e934:	outs   dx,BYTE PTR ds:[rsi]
   14002e935:	pop    rax
   14002e936:	cmp    edi,edi
   14002e938:	outs   dx,BYTE PTR ds:[rsi]
   14002e939:	pop    rax
   14002e93a:	cmp    edi,edi
   14002e93c:	outs   dx,BYTE PTR ds:[rsi]
   14002e93d:	pop    rax
   14002e93e:	cmp    edi,edi
   14002e940:	outs   dx,BYTE PTR ds:[rsi]
   14002e941:	pop    rax
   14002e942:	cmp    edi,edi
   14002e944:	outs   dx,BYTE PTR ds:[rsi]
   14002e945:	pop    rax
   14002e946:	cmp    edi,edi
   14002e948:	outs   dx,BYTE PTR ds:[rsi]
   14002e949:	pop    rax
   14002e94a:	cmp    edi,edi
   14002e94c:	outs   dx,BYTE PTR ds:[rsi]
   14002e94d:	pop    rax
   14002e94e:	cmp    edi,edi
   14002e950:	outs   dx,BYTE PTR ds:[rsi]
   14002e951:	pop    rax
   14002e952:	cmp    edi,edi
   14002e954:	outs   dx,BYTE PTR ds:[rsi]
   14002e955:	pop    rax
   14002e956:	cmp    edi,edi
   14002e958:	outs   dx,BYTE PTR ds:[rsi]
   14002e959:	pop    rax
   14002e95a:	cmp    edi,edi
   14002e95c:	outs   dx,BYTE PTR ds:[rsi]
   14002e95d:	pop    rax
   14002e95e:	cmp    DWORD PTR [rdi+0x7f39586e],edi
   14002e964:	outs   dx,BYTE PTR ds:[rsi]
   14002e965:	pop    rax
   14002e966:	cmp    DWORD PTR [rax+0x0],eax
	...
   14002e971:	add    BYTE PTR [rax],al
   14002e973:	add    BYTE PTR [rax+0x5a],dh
   14002e976:	cmp    eax,DWORD PTR [rax+0x76]
   14002e979:	data16 rex.WRX call QWORD PTR [rax-0x4600897b]
   14002e981:	mov    ah,0xac
   14002e983:	jmp    rdi
   14002e985:	out    0xe7,eax
   14002e987:	(bad)  
   14002e988:	call   0x12902d275
   14002e98d:	call   0x128ebe97a
   14002e992:	call   0x128ebd296
   14002e997:	(bad)  
   14002e998:	call   0x12902d285
   14002e99d:	call   0x128ebe98a
   14002e9a2:	call   0x128ebd2a6
   14002e9a7:	(bad)  
   14002e9a8:	call   0x12902d295
   14002e9ad:	call   0x128ebe99a
   14002e9b2:	call   0x128ebd2b6
   14002e9b7:	(bad)  
   14002e9b8:	call   0x12902d2a5
   14002e9bd:	call   0x128ebe9aa
   14002e9c2:	call   0x128ebd2c6
   14002e9c7:	(bad)  
   14002e9c8:	call   0x12902d2b5
   14002e9cd:	call   0x128ebe9ba
   14002e9d2:	call   0x128ebd2d6
   14002e9d7:	jmp    rdi
   14002e9d9:	out    0xe7,eax
   14002e9db:	(bad)  
   14002e9dc:	mov    ecx,0x90ffacb4
   14002e9e1:	test   DWORD PTR [rsi-0x1],esi
   14002e9e4:	jbe    0x14002ea4c
   14002e9e6:	rex.WRX push QWORD PTR [rax+0x5a]
   14002e9ea:	cmp    eax,DWORD PTR [rax+0x0]
   14002e9ed:	add    BYTE PTR [rax],al
   14002e9ef:	add    BYTE PTR [rdx+0x5d],dh
   14002e9f2:	ds rex jbe 0x14002ea5c
   14002e9f6:	rex.WRXB push QWORD PTR [r14-0x16005a51]
   14002e9fd:	jmp    0x12ff2e9eb
   14002ea02:	out    dx,eax
   14002ea03:	push   rax
   14002ea05:	lock lock push rcx
   14002ea09:	icebp  
   14002ea0a:	icebp  
   14002ea0b:	push   rcx
   14002ea0d:	icebp  
   14002ea0e:	icebp  
   14002ea0f:	push   rcx
   14002ea11:	icebp  
   14002ea12:	icebp  
   14002ea13:	push   rcx
   14002ea15:	icebp  
   14002ea16:	icebp  
   14002ea17:	push   rcx
   14002ea19:	icebp  
   14002ea1a:	icebp  
   14002ea1b:	push   rcx
   14002ea1d:	icebp  
   14002ea1e:	icebp  
   14002ea1f:	push   rcx
   14002ea21:	icebp  
   14002ea22:	icebp  
   14002ea23:	push   rcx
   14002ea25:	icebp  
   14002ea26:	icebp  
   14002ea27:	push   rcx
   14002ea29:	icebp  
   14002ea2a:	icebp  
   14002ea2b:	push   rcx
   14002ea2d:	icebp  
   14002ea2e:	icebp  
   14002ea2f:	push   rcx
   14002ea31:	icebp  
   14002ea32:	icebp  
   14002ea33:	push   rcx
   14002ea35:	icebp  
   14002ea36:	icebp  
   14002ea37:	push   rcx
   14002ea39:	icebp  
   14002ea3a:	icebp  
   14002ea3b:	push   rcx
   14002ea3d:	icebp  
   14002ea3e:	icebp  
   14002ea3f:	push   rcx
   14002ea41:	icebp  
   14002ea42:	icebp  
   14002ea43:	push   rcx
   14002ea45:	icebp  
   14002ea46:	icebp  
   14002ea47:	push   rcx
   14002ea49:	icebp  
   14002ea4a:	icebp  
   14002ea4b:	push   rcx
   14002ea4d:	icebp  
   14002ea4e:	icebp  
   14002ea4f:	push   rcx
   14002ea51:	icebp  
   14002ea52:	icebp  
   14002ea53:	push   rcx
   14002ea55:	icebp  
   14002ea56:	icebp  
   14002ea57:	push   rax
   14002ea59:	lock lock (bad) 
   14002ea5c:	out    dx,eax
   14002ea5d:	out    dx,eax
   14002ea5e:	out    dx,eax
   14002ea5f:	(bad)  
   14002ea60:	jmp    0xf702d44e
   14002ea65:	scas   eax,DWORD PTR es:[rdi]
   14002ea66:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002ea67:	push   QWORD PTR [rsi+0x66]
   14002ea6a:	rex.WRXB push QWORD PTR [r10+0x5d]
   14002ea6e:	ds rex jne 0x14002ead1
   14002ea72:	rex jg 0x14002ea17
   14002ea75:	xchg   edi,eax
   14002ea76:	xchg   edi,edi
   14002ea78:	in     al,0xe4
   14002ea7a:	in     al,0xff
   14002ea7c:	in     al,dx
   14002ea7d:	in     al,dx
   14002ea7e:	in     al,dx
   14002ea7f:	(bad)  
   14002ea80:	out    dx,al
   14002ea81:	out    dx,al
   14002ea82:	out    dx,al
   14002ea83:	(bad)  
   14002ea84:	out    dx,al
   14002ea85:	out    dx,al
   14002ea86:	out    dx,al
   14002ea87:	(bad)  
   14002ea88:	out    dx,al
   14002ea89:	out    dx,al
   14002ea8a:	out    dx,al
   14002ea8b:	(bad)  
   14002ea8c:	out    dx,al
   14002ea8d:	out    dx,al
   14002ea8e:	out    dx,al
   14002ea8f:	(bad)  
   14002ea90:	out    dx,al
   14002ea91:	out    dx,al
   14002ea92:	out    dx,al
   14002ea93:	(bad)  
   14002ea94:	out    dx,al
   14002ea95:	out    dx,al
   14002ea96:	out    dx,al
   14002ea97:	(bad)  
   14002ea98:	out    dx,al
   14002ea99:	out    dx,al
   14002ea9a:	out    dx,al
   14002ea9b:	(bad)  
   14002ea9c:	out    dx,al
   14002ea9d:	out    dx,al
   14002ea9e:	out    dx,al
   14002ea9f:	(bad)  
   14002eaa0:	out    dx,al
   14002eaa1:	out    dx,al
   14002eaa2:	out    dx,al
   14002eaa3:	(bad)  
   14002eaa4:	out    dx,al
   14002eaa5:	out    dx,al
   14002eaa6:	out    dx,al
   14002eaa7:	(bad)  
   14002eaa8:	out    dx,al
   14002eaa9:	out    dx,al
   14002eaaa:	out    dx,al
   14002eaab:	(bad)  
   14002eaac:	out    dx,al
   14002eaad:	out    dx,al
   14002eaae:	out    dx,al
   14002eaaf:	(bad)  
   14002eab0:	out    dx,al
   14002eab1:	out    dx,al
   14002eab2:	out    dx,al
   14002eab3:	(bad)  
   14002eab4:	out    dx,al
   14002eab5:	out    dx,al
   14002eab6:	out    dx,al
   14002eab7:	(bad)  
   14002eab8:	out    dx,al
   14002eab9:	out    dx,al
   14002eaba:	out    dx,al
   14002eabb:	(bad)  
   14002eabc:	out    dx,al
   14002eabd:	out    dx,al
   14002eabe:	out    dx,al
   14002eabf:	(bad)  
   14002eac0:	out    dx,al
   14002eac1:	out    dx,al
   14002eac2:	out    dx,al
   14002eac3:	(bad)  
   14002eac4:	out    dx,al
   14002eac5:	out    dx,al
   14002eac6:	out    dx,al
   14002eac7:	(bad)  
   14002eac8:	out    dx,al
   14002eac9:	out    dx,al
   14002eaca:	out    dx,al
   14002eacb:	(bad)  
   14002eacc:	out    dx,al
   14002eacd:	out    dx,al
   14002eace:	out    dx,al
   14002eacf:	(bad)  
   14002ead0:	out    dx,al
   14002ead1:	out    dx,al
   14002ead2:	out    dx,al
   14002ead3:	(bad)  
   14002ead4:	out    dx,al
   14002ead5:	out    dx,al
   14002ead6:	out    dx,al
   14002ead7:	(bad)  
   14002ead8:	out    dx,al
   14002ead9:	out    dx,al
   14002eada:	out    dx,al
   14002eadb:	(bad)  
   14002eadc:	out    dx,al
   14002eadd:	out    dx,al
   14002eade:	out    dx,al
   14002eadf:	(bad)  
   14002eae0:	in     al,dx
   14002eae1:	in     al,dx
   14002eae2:	in     al,dx
   14002eae3:	jmp    rsp
   14002eae5:	in     al,0xe4
   14002eae7:	jmp    QWORD PTR [rdx+0x75ff8797]
   14002eaed:	pop    rdi
   14002eaee:	rex jg 0x14002eb68
   14002eaf1:	(bad)
   14002eaf6:	scas   eax,DWORD PTR es:[rdi]
   14002eaf7:	jmp    rdi
   14002eaf9:	out    0xe7,eax
   14002eafb:	(bad)  
   14002eafc:	jmp    0x14002eae9
   14002eafe:	jmp    0x14002eaff
   14002eb00:	jmp    0x14002eaed
   14002eb02:	jmp    0x14002eb03
   14002eb04:	jmp    0x14002eaf1
   14002eb06:	jmp    0x14002eb07
   14002eb08:	fstp   st(0)
   14002eb0a:	sar    bh,cl
   14002eb0c:	int3   
   14002eb0d:	ret    
   14002eb0e:	mov    bh,0xff
   14002eb10:	mov    edx,0xabff98aa
   14002eb15:	xchg   edi,eax
   14002eb16:	cmp    bh,0xa5
   14002eb19:	xchg   ecx,eax
   14002eb1a:	ja     0x14002eb1b
   14002eb1c:	popf   
   14002eb1d:	xchg   BYTE PTR [rdx-0x1],ch
   14002eb20:	cdq    
   14002eb21:	(bad)  
   14002eb22:	call   FWORD PTR gs:[rbx-0x6400997d]
   14002eb29:	and    DWORD PTR [rsi-0x1],0xffffff9b
   14002eb2d:	test   BYTE PTR [rdi-0x1],ah
   14002eb30:	fwait
   14002eb31:	and    DWORD PTR [rsi-0x1],0xffffff9b
   14002eb35:	and    DWORD PTR [rsi-0x1],0xffffff9b
   14002eb39:	and    DWORD PTR [rsi-0x1],0xffffff9e
   14002eb3d:	xchg   DWORD PTR [rdi+rdi*8-0x58],ebp
   14002eb41:	xchg   ebp,eax
   14002eb42:	jl     0x14002eb43
   14002eb44:	mov    ch,0xa5
   14002eb46:	nop
   14002eb47:	dec    ecx
   14002eb49:	mov    ebp,0xdadeffb0
   14002eb4e:	(bad)  
   14002eb4f:	(bad)  
   14002eb50:	(bad)  
   14002eb51:	(bad)  
   14002eb52:	call   0x12beed756
   14002eb57:	(bad)  
   14002eb58:	jmp    0x14002eb45
   14002eb5a:	jmp    0x14002eb5b
   14002eb5c:	jmp    0x14002eb49
   14002eb5e:	jmp    0x14002eb5f
   14002eb60:	jmp    0x14002eb4d
   14002eb62:	jmp    0x14002eb63
   14002eb64:	out    0xe7,eax
   14002eb66:	out    0xff,eax
   14002eb68:	mov    esp,0x77ffafb7
   14002eb6d:	(bad)
   14002eb72:	rex.RX call rdi
   14002eb75:	xlat   BYTE PTR ds:[rbx]
   14002eb76:	xlat   BYTE PTR ds:[rbx]
   14002eb77:	jmp    rdi
   14002eb79:	out    0xe7,eax
   14002eb7b:	(bad)  
   14002eb7c:	jmp    0x12a02d56a
   14002eb81:	jmp    0x129eceb6f
   14002eb86:	jmp    0x1a887878a
   14002eb8b:	dec    DWORD PTR [rbp-0x6600ac8d]
   14002eb91:	and    DWORD PTR [rdi+rdi*8-0x50],0xbcff889e
   14002eb99:	scas   al,BYTE PTR es:[rdi]
   14002eb9a:	popf   
   14002eb9b:	dec    edx
   14002eb9d:	shl    DWORD PTR [rsi-0x44393101],0xff
   14002eba4:	(bad)  
   14002eba5:	(bad)  
   14002eba6:	mov    ebx,0xbbc6ceff
   14002ebab:	dec    esi
   14002ebad:	(bad)  
   14002ebae:	mov    edx,0xbbc6ceff
   14002ebb3:	dec    esi
   14002ebb5:	(bad)  
   14002ebb6:	mov    edx,0xbac5ceff
   14002ebbb:	(bad)  
   14002ebbc:	mov    esp,0xb5ff9dae
   14002ebc1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002ebc2:	xchg   ebx,eax
   14002ebc3:	jmp    FWORD PTR [rbx-0x5f007d68]
   14002ebc9:	mov    dh,BYTE PTR [rcx-0x1]
   14002ebcc:	movabs ds:0xe9ffb2bfc9ff748e,eax
   14002ebd5:	jmp    0x129ecebc3
   14002ebda:	jmp    0x129ecd5de
   14002ebdf:	(bad)  
   14002ebe0:	jmp    0x12802d5ce
   14002ebe5:	out    0xe7,eax
   14002ebe7:	call   rdi
   14002ebe9:	xlat   BYTE PTR ds:[rbx]
   14002ebea:	xlat   BYTE PTR ds:[rbx]
   14002ebeb:	(bad)  
   14002ebec:	jp     0x14002ec53
   14002ebee:	rex.RX (bad) 
   14002ebf0:	jge    0x14002ec5a
   14002ebf2:	rex.WX (bad) 
   14002ebf4:	fcomp  st(0)
   14002ebf6:	fdivr  st,st(7)
   14002ebf8:	out    0xe6,al
   14002ebfa:	out    0xff,al
   14002ebfc:	out    0xe6,al
   14002ebfe:	out    0xff,al
   14002ec00:	out    0xe6,al
   14002ec02:	out    0xff,al
   14002ec04:	out    0xe6,al
   14002ec06:	out    0xff,al
   14002ec08:	mov    ebx,0xa0ff9eaf
   14002ec0d:	mov    esi,DWORD PTR [rdx-0x1]
   14002ec10:	lods   eax,DWORD PTR ds:[rsi]
   14002ec11:	pushf  
   14002ec12:	xchg   edi,edi
   14002ec14:	(bad)  
   14002ec15:	ror    ebx,1
   14002ec17:	jmp    rdx
   14002ec19:	loope  0x14002ebfb
   14002ec1b:	jmp    rbp
   14002ec1d:	in     al,0xe3
   14002ec1f:	(bad)  
   14002ec20:	(bad)  
   14002ec22:	sar    edi,cl
   14002ec24:	ror    edx,1
   14002ec26:	ret    0xc9ff
   14002ec29:	mov    edi,0xc0c9ffb4
   14002ec2e:	mov    ch,0xff
   14002ec30:	(bad)  
   14002ec31:	(bad)  
   14002ec32:	mov    esp,0xc9cfd5ff
   14002ec37:	(bad)  
   14002ec38:	fstp   st(1)
   14002ec3a:	(bad)  
   14002ec3b:	jmp    rdx
   14002ec3d:	loope  0x14002ec1e
   14002ec3f:	jmp    rsi
   14002ec41:	out    0xe6,al
   14002ec43:	jmp    rsi
   14002ec45:	out    0xe6,al
   14002ec47:	jmp    rsi
   14002ec49:	out    0xe6,al
   14002ec4b:	inc    eax
   14002ec4d:	mov    ah,0xa6
   14002ec4f:	push   QWORD PTR [rcx-0x1900715f]
   14002ec55:	out    0xe6,al
   14002ec57:	jmp    rsi
   14002ec59:	out    0xe6,al
   14002ec5b:	jmp    rsi
   14002ec5d:	out    0xe6,al
   14002ec5f:	jmp    rsi
   14002ec61:	out    0xe6,al
   14002ec63:	jmp    rsi
   14002ec65:	out    0xe6,al
   14002ec67:	(bad)  
   14002ec68:	fcomp  st(0)
   14002ec6a:	fdivr  st,st(7)
   14002ec6c:	jge    0x14002ecd6
   14002ec6e:	rex.WX inc QWORD PTR [rax-0x2700b295]
   14002ec75:	fcomp  st(0)
   14002ec77:	jmp    rsi
   14002ec79:	out    0xe6,al
   14002ec7b:	jmp    rsi
   14002ec7d:	out    0xe6,al
   14002ec7f:	jmp    rsi
   14002ec81:	out    0xe6,al
   14002ec83:	jmp    rsi
   14002ec85:	out    0xe6,al
   14002ec87:	jmp    rsi
   14002ec89:	out    0xe6,al
   14002ec8b:	(bad)  
   14002ec8c:	fcmovbe st,st(6)
   14002ec8e:	sar    bh,cl
   14002ec90:	(bad)
   14002ec93:	dec    edx
   14002ec95:	shl    DWORD PTR [rsi-0x40383101],0xff
   14002ec9c:	stos   DWORD PTR es:[rdi],eax
   14002ec9d:	cdq    
   14002ec9e:	test   bh,bh
   14002eca0:	xchg   esi,eax
   14002eca1:	jg     0x14002ed06
   14002eca3:	call   QWORD PTR [rax-0x7300a487]
   14002eca9:	jb     0x14002ecfe
   14002ecab:	dec    DWORD PTR [rbx+rsi*2+0x778fff55]
   14002ecb2:	pop    rcx
   14002ecb3:	call   QWORD PTR [rcx-0x6300a387]
   14002ecb9:	xchg   BYTE PTR [rdi+rdi*8-0x42],ch
   14002ecbd:	mov    cl,0xa3
   14002ecbf:	jmp    rsi
   14002ecc1:	out    0xe6,al
   14002ecc3:	jmp    rsi
   14002ecc5:	out    0xe6,al
   14002ecc7:	jmp    rsi
   14002ecc9:	out    0xe6,al
   14002eccb:	jmp    rsi
   14002eccd:	out    0xe6,al
   14002eccf:	jmp    rcx
   14002ecd1:	(bad)  
   14002ecd3:	jmp    rsi
   14002ecd5:	out    0xe6,al
   14002ecd7:	jmp    rsi
   14002ecd9:	out    0xe6,al
   14002ecdb:	jmp    rsi
   14002ecdd:	out    0xe6,al
   14002ecdf:	jmp    rsi
   14002ece1:	out    0xe6,al
   14002ece3:	jmp    rsi
   14002ece5:	out    0xe6,al
   14002ece7:	(bad)  
   14002ece8:	fcomp  st(0)
   14002ecea:	fdivr  st,st(7)
   14002ecec:	sub    BYTE PTR [rbx+0x4d],0xff
   14002ecf0:	sub    DWORD PTR [rsi+0x51],0xffffffff
   14002ecf4:	(bad)  
   14002ecf5:	(bad)  
   14002ecf6:	(bad)  
   14002ecf7:	jmp    rsp
   14002ecf9:	in     al,0xe4
   14002ecfb:	jmp    rsp
   14002ecfd:	in     al,0xe4
   14002ecff:	jmp    rsp
   14002ed01:	in     al,0xe4
   14002ed03:	jmp    rsp
   14002ed05:	in     al,0xe4
   14002ed07:	jmp    rsp
   14002ed09:	in     al,0xe4
   14002ed0b:	jmp    rsp
   14002ed0d:	in     al,0xe4
   14002ed0f:	jmp    rsp
   14002ed11:	in     al,0xe4
   14002ed13:	jmp    rsp
   14002ed15:	in     al,0xe4
   14002ed17:	dec    ebp
   14002ed19:	(bad)  
   14002ed1a:	mov    esi,0x607c93ff
   14002ed1f:	jmp    QWORD PTR [rdx+rdx*4-0x493e0084]
   14002ed26:	test   eax,0xb3bfc7ff
   14002ed2b:	inc    edi
   14002ed2d:	mov    ebp,0xb7c2ffb3
   14002ed32:	stos   DWORD PTR es:[rdi],eax
   14002ed33:	push   QWORD PTR [rbp-0x4f006859]
   14002ed39:	movabs al,ds:0xe4e4ffc1c8cfff8e
   14002ed42:	in     al,0xff
   14002ed44:	in     al,0xe4
   14002ed46:	in     al,0xff
   14002ed48:	in     al,0xe4
   14002ed4a:	in     al,0xff
   14002ed4c:	in     al,0xe4
   14002ed4e:	in     al,0xff
   14002ed50:	in     al,0xe4
   14002ed52:	in     al,0xff
   14002ed54:	in     al,0xe4
   14002ed56:	in     al,0xff
   14002ed58:	in     al,0xe4
   14002ed5a:	in     al,0xff
   14002ed5c:	in     al,0xe4
   14002ed5e:	in     al,0xff
   14002ed60:	in     al,0xe4
   14002ed62:	in     al,0xff
   14002ed64:	in     al,0xe4
   14002ed66:	in     al,0xff
   14002ed68:	(bad)  
   14002ed69:	(bad)  
   14002ed6a:	(bad)  
   14002ed6b:	inc    DWORD PTR [rbx-0x7900ae92]
   14002ed71:	jno    0x14002edc7
   14002ed73:	call   rsi
   14002ed75:	(bad)  
   14002ed76:	(bad)  
   14002ed77:	jmp    rsp
   14002ed79:	in     al,0xe4
   14002ed7b:	jmp    rsp
   14002ed7d:	in     al,0xe4
   14002ed7f:	jmp    rsp
   14002ed81:	in     al,0xe4
   14002ed83:	jmp    rsp
   14002ed85:	in     al,0xe4
   14002ed87:	jmp    rsp
   14002ed89:	in     al,0xe4
   14002ed8b:	jmp    rsp
   14002ed8d:	in     al,0xe4
   14002ed8f:	jmp    rsp
   14002ed91:	in     al,0xe4
   14002ed93:	jmp    rsp
   14002ed95:	in     al,0xe4
   14002ed97:	jmp    rbx
   14002ed99:	jrcxz  0x14002ed7d
   14002ed9b:	inc    edi
   14002ed9d:	mov    edi,0xbdc6ffb4
   14002eda2:	mov    dl,0xff
   14002eda4:	leave  
   14002eda5:	sar    DWORD PTR [rax-0x54473d01],0xff
   14002edac:	ret    0xacb9
   14002edaf:	dec    esp
   14002edb1:	(bad)  
   14002edb2:	mov    ebx,0xc1c9cfff
   14002edb7:	(bad)  
   14002edb8:	fcom   st(5)
   14002edba:	sar    edi,1
   14002edbc:	loop   0x14002eda0
   14002edbe:	loopne 0x14002edbf
   14002edc0:	loop   0x14002eda4
   14002edc2:	loopne 0x14002edc3
   14002edc4:	ror    ch,cl
   14002edc6:	(bad)  
   14002edc7:	call   rbx
   14002edc9:	iret   
   14002edca:	leave  
   14002edcb:	jmp    rsp
   14002edcd:	in     al,0xe4
   14002edcf:	jmp    rsp
   14002edd1:	in     al,0xe4
   14002edd3:	jmp    rsp
   14002edd5:	in     al,0xe4
   14002edd7:	jmp    rsp
   14002edd9:	in     al,0xe4
   14002eddb:	jmp    rsp
   14002eddd:	in     al,0xe4
   14002eddf:	jmp    rsp
   14002ede1:	in     al,0xe4
   14002ede3:	jmp    rsp
   14002ede5:	in     al,0xe4
   14002ede7:	call   rsi
   14002ede9:	(bad)  
   14002edea:	(bad)  
   14002edeb:	inc    DWORD PTR [rsi-0x7500ab8f]
   14002edf1:	jne    0x14002ee4b
   14002edf3:	call   rdi
   14002edf5:	xlat   BYTE PTR ds:[rbx]
   14002edf6:	xlat   BYTE PTR ds:[rbx]
   14002edf7:	jmp    rbp
   14002edf9:	in     eax,0xe5
   14002edfb:	jmp    rbp
   14002edfd:	in     eax,0xe5
   14002edff:	jmp    rbp
   14002ee01:	in     eax,0xe5
   14002ee03:	jmp    rbp
   14002ee05:	in     eax,0xe5
   14002ee07:	jmp    rbp
   14002ee09:	in     eax,0xe5
   14002ee0b:	jmp    rbp
   14002ee0d:	in     eax,0xe5
   14002ee0f:	jmp    rbp
   14002ee11:	in     eax,0xe5
   14002ee13:	(bad)  
   14002ee14:	fcmovnu st,st(0)
   14002ee16:	(bad)  
   14002ee17:	push   QWORD PTR [rcx-0x62006f5e]
   14002ee1d:	mov    DWORD PTR [rax-0x1],esi
   14002ee20:	xchg   edi,eax
   14002ee21:	and    DWORD PTR [rdi-0x1],0xff657f95
   14002ee28:	xchg   ebp,eax
   14002ee29:	jg     0x14002ee8f
   14002ee2b:	call   QWORD PTR [rsi-0x68009980]
   14002ee31:	(bad)  
   14002ee32:	push   0x627d94ff
   14002ee37:	call   QWORD PTR [rbp+rdi*2-0x6958009e]
   14002ee3e:	cmp    edi,0xffcdd3d7
   14002ee44:	iret   
   14002ee45:	leave  
   14002ee46:	sar    edi,0xb1
   14002ee49:	movabs eax,ds:0xd9dcff95a6b4ff8f
   14002ee52:	(bad)  
   14002ee53:	jmp    rbp
   14002ee55:	in     eax,0xe5
   14002ee57:	jmp    rbp
   14002ee59:	in     eax,0xe5
   14002ee5b:	jmp    rbp
   14002ee5d:	in     eax,0xe5
   14002ee5f:	jmp    rbp
   14002ee61:	in     eax,0xe5
   14002ee63:	jmp    rbp
   14002ee65:	in     eax,0xe5
   14002ee67:	call   rdi
   14002ee69:	xlat   BYTE PTR ds:[rbx]
   14002ee6a:	xlat   BYTE PTR ds:[rbx]
   14002ee6b:	dec    DWORD PTR [rdx-0x7200a78b]
   14002ee71:	js     0x14002eecf
   14002ee73:	(bad)  
   14002ee74:	(bad)  
   14002ee76:	fcos   
   14002ee78:	out    0xe7,eax
   14002ee7a:	out    0xff,eax
   14002ee7c:	out    0xe7,eax
   14002ee7e:	out    0xff,eax
   14002ee80:	out    0xe7,eax
   14002ee82:	out    0xff,eax
   14002ee84:	out    0xe7,eax
   14002ee86:	out    0xff,eax
   14002ee88:	out    0xe7,eax
   14002ee8a:	out    0xff,eax
   14002ee8c:	out    0xe7,eax
   14002ee8e:	out    0xff,eax
   14002ee90:	out    0xe7,eax
   14002ee92:	out    0xff,eax
   14002ee94:	fcmovnu st,st(1)
   14002ee96:	(bad)  
   14002ee97:	call   FWORD PTR [rdi-0x59008b74]
   14002ee9d:	xchg   ebp,eax
   14002ee9e:	jg     0x14002ee9f
   14002eea0:	int3   
   14002eea1:	(bad)
   14002eea4:	ror    bl,cl
   14002eea6:	(bad)  
   14002eea7:	(bad)  
   14002eea8:	fcom   st(4)
   14002eeaa:	(bad)  
   14002eeab:	(bad)  
   14002eeac:	fcom   st(4)
   14002eeae:	(bad)  
   14002eeaf:	call   rcx
   14002eeb1:	retf   
   14002eeb2:	(bad)  
   14002eeb3:	dec    edx
   14002eeb5:	ret    
   14002eeb6:	mov    ecx,0xa8b6c1ff
   14002eebb:	inc    ebp
   14002eebd:	mov    esp,0xdfe0ffb0
   14002eec2:	(bad)  
   14002eec4:	out    0xe7,eax
   14002eec6:	out    0xff,eax
   14002eec8:	ror    edx,1
   14002eeca:	ret    0x9aff
   14002eecd:	test   DWORD PTR [rdi+rdi*8-0x62],ebp
   14002eed1:	mov    dh,BYTE PTR [rcx-0x1]
   14002eed4:	out    0xe7,eax
   14002eed6:	out    0xff,eax
   14002eed8:	out    0xe7,eax
   14002eeda:	out    0xff,eax
   14002eedc:	out    0xe7,eax
   14002eede:	out    0xff,eax
   14002eee0:	out    0xe7,eax
   14002eee2:	out    0xff,eax
   14002eee4:	out    0xe7,eax
   14002eee6:	out    0xff,eax
   14002eee8:	(bad)  
   14002eeea:	fcos   
   14002eeec:	lea    edi,[rax+0x5c]
   14002eeef:	call   QWORD PTR [rax-0x25009f84]
   14002eef5:	fcmovu st,st(2)
   14002eef7:	(bad)  
   14002eef8:	call   0x12902d7e5
   14002eefd:	call   0x128ebeeea
   14002ef02:	call   0x128ebd806
   14002ef07:	(bad)  
   14002ef08:	call   0x12802d7f5
   14002ef0d:	out    0xe5,eax
   14002ef0f:	jmp    rbx
   14002ef11:	loope  0x14002eef2
   14002ef13:	(bad)  
   14002ef14:	fcmovbe st,st(6)
   14002ef16:	sar    edi,1
   14002ef18:	shl    DWORD PTR [rdi-0x4e420057],0xa2
   14002ef1f:	dec    ebp
   14002ef21:	(bad)  
   14002ef22:	mov    esp,0xbbc5ccff
   14002ef27:	dec    ebx
   14002ef29:	(bad)  
   14002ef2a:	mov    ebx,0xb8c3ccff
   14002ef2f:	call   rax
   14002ef31:	(bad)
   14002ef34:	(bad)  
   14002ef35:	retf   
   14002ef36:	ret    
   14002ef37:	(bad)  
   14002ef38:	fcmovbe st,st(6)
   14002ef3a:	sar    bh,cl
   14002ef3c:	loopne 0x14002ef1c
   14002ef3e:	(bad)  
   14002ef40:	in     al,0xe4
   14002ef42:	loop   0x14002ef43
   14002ef44:	call   0x12902d831
   14002ef49:	call   0x10ed7ef36
   14002ef4e:	(bad)  
   14002ef4f:	dec    DWORD PTR [rdi-0x1700a489]
   14002ef55:	call   0x128ebef42
   14002ef5a:	call   0x128ebd85e
   14002ef5f:	(bad)  
   14002ef60:	call   0x12902d84d
   14002ef65:	call   0x11addef52
   14002ef6a:	(bad)  
   14002ef6c:	nop
   14002ef6d:	jl     0x14002efcf
   14002ef6f:	call   QWORD PTR [rdi+rdi*2-0x2323009c]
   14002ef76:	fdiv   st(7),st
   14002ef78:	(bad)  
   14002ef79:	(bad)  
   14002ef7a:	(bad)  
   14002ef7b:	(bad)  
   14002ef7c:	(bad)  
   14002ef7d:	(bad)  
   14002ef7e:	(bad)  
   14002ef7f:	(bad)  
   14002ef80:	(bad)  
   14002ef81:	(bad)  
   14002ef82:	(bad)  
   14002ef83:	(bad)  
   14002ef84:	(bad)  
   14002ef85:	(bad)  
   14002ef86:	(bad)  
   14002ef87:	(bad)  
   14002ef88:	(bad)  
   14002ef89:	(bad)  
   14002ef8a:	(bad)  
   14002ef8b:	(bad)  
   14002ef8c:	fcmovnbe st,st(7)
   14002ef8e:	sar    edi,cl
   14002ef90:	movabs eax,ds:0x9cff5d7a92ff768e
   14002ef99:	xchg   DWORD PTR [rdi-0x1],ebp
   14002ef9c:	mov    ah,0xa5
   14002ef9e:	xchg   ebx,eax
   14002ef9f:	push   QWORD PTR [rdx-0x50006f5c]
   14002efa5:	movabs eax,ds:0xa2b0ff85a2b8ff8d
   14002efae:	(bad)  
   14002efaf:	call   FWORD PTR [rcx-0x5c006166]
   14002efb5:	xchg   esp,eax
   14002efb6:	cmp    edi,0xff6f91ad
   14002efbc:	lods   eax,DWORD PTR ds:[rsi]
   14002efbd:	pushf  
   14002efbe:	xchg   bh,bh
   14002efc0:	ret    
   14002efc1:	mov    bh,0xaa
   14002efc3:	jmp    rcx
   14002efc5:	(bad)  
   14002efc7:	(bad)  
   14002efc8:	(bad)  
   14002efc9:	(bad)  
   14002efca:	(bad)  
   14002efcb:	(bad)  
   14002efcc:	(bad)  
   14002efcd:	(bad)  
   14002efce:	(bad)  
   14002efcf:	call   FWORD PTR [rdi+rax*4-0x15150092]
   14002efd6:	(bad)  
   14002efd7:	(bad)  
   14002efd8:	(bad)  
   14002efd9:	(bad)  
   14002efda:	(bad)  
   14002efdb:	(bad)  
   14002efdc:	(bad)  
   14002efdd:	(bad)  
   14002efde:	(bad)  
   14002efdf:	(bad)  
   14002efe0:	(bad)  
   14002efe1:	(bad)  
   14002efe2:	(bad)  
   14002efe3:	(bad)  
   14002efe4:	(bad)  
   14002efe5:	(bad)  
   14002efe6:	(bad)  
   14002efe7:	(bad)  
   14002efe8:	(bad)  
   14002efea:	fdiv   st(7),st
   14002efec:	xchg   esp,eax
   14002efed:	jg     0x14002f053
   14002efef:	call   QWORD PTR [rdi-0x2200977d]
   14002eff5:	fstp   st(5)
   14002eff7:	(bad)  
   14002eff8:	jmp    0x14002efe5
   14002effa:	jmp    0x14002effb
   14002effc:	jmp    0x14002efe9
   14002effe:	jmp    0x14002efff
   14002f000:	jmp    0x14002efed
   14002f002:	jmp    0x14002f003
   14002f004:	jmp    0x14002eff1
   14002f006:	jmp    0x14002f007
   14002f008:	jmp    0x14002eff5
   14002f00a:	jmp    0x14002f00b
   14002f00c:	jrcxz  0x14002efef
   14002f00e:	(bad)  
   14002f010:	mov    dh,0xa7
   14002f012:	xchg   esi,eax
   14002f013:	call   FWORD PTR [rsi-0x50008d76]
   14002f019:	sahf   
   14002f01a:	mov    edi,edi
   14002f01c:	retf   
   14002f01d:	ret    0xffb8
   14002f020:	(bad)  
   14002f022:	sar    bh,cl
   14002f024:	jrcxz  0x14002f007
   14002f026:	(bad)  
   14002f028:	out    0xe2,al
   14002f02a:	fdiv   st(7),st
   14002f02c:	out    0xe2,al
   14002f02e:	(bad)  
   14002f030:	scas   al,BYTE PTR es:[rdi]
   14002f031:	(bad)
   14002f034:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002f035:	mov    ebp,0xdae2ffd8
   14002f03a:	sar    bh,cl
   14002f03c:	fstp   st(0)
   14002f03e:	sar    bh,cl
   14002f040:	(bad)  
   14002f041:	ror    al,1
   14002f043:	call   rdi
   14002f045:	ror    edx,1
   14002f047:	dec    edi
   14002f049:	(bad)  
   14002f04a:	mov    esp,0x859aabff
   14002f04f:	call   QWORD PTR [rax-0x1400a488]
   14002f055:	jmp    0x14002f042
   14002f057:	(bad)  
   14002f058:	jmp    0x14002f045
   14002f05a:	jmp    0x14002f05b
   14002f05c:	jmp    0x14002f049
   14002f05e:	jmp    0x14002f05f
   14002f060:	jmp    0x14002f04d
   14002f062:	jmp    0x14002f063
   14002f064:	jmp    0x14002f051
   14002f066:	jmp    0x14002f067
   14002f068:	fstp   st(5)
   14002f06a:	(bad)  
   14002f06c:	xchg   edi,eax
   14002f06d:	sub    DWORD PTR [rax-0x1],0xffffff9b
   14002f071:	xchg   DWORD PTR [rdi+rdi*8-0x22],ebp
   14002f075:	(bad)  
   14002f077:	(bad)  
   14002f078:	in     al,dx
   14002f079:	in     al,dx
   14002f07a:	in     al,dx
   14002f07b:	(bad)  
   14002f07c:	in     eax,dx
   14002f07d:	in     eax,dx
   14002f07e:	in     eax,dx
   14002f07f:	(bad)  
   14002f080:	in     eax,dx
   14002f081:	in     eax,dx
   14002f082:	in     eax,dx
   14002f083:	(bad)  
   14002f084:	in     eax,dx
   14002f085:	in     eax,dx
   14002f086:	in     eax,dx
   14002f087:	(bad)  
   14002f088:	in     eax,dx
   14002f089:	in     eax,dx
   14002f08a:	in     eax,dx
   14002f08b:	(bad)  
   14002f08c:	in     eax,dx
   14002f08d:	in     eax,dx
   14002f08e:	in     al,dx
   14002f08f:	(bad)  
   14002f090:	(bad)  
   14002f091:	jmp    0x122e7f07e
   14002f096:	fdivp  st(7),st
   14002f098:	ror    edx,1
   14002f09a:	sar    edi,0xd0
   14002f09d:	enter  0xffbf,0xe5
   14002f0a1:	loopne 0x14002f07d
   14002f0a3:	(bad)  
   14002f0a4:	in     eax,dx
   14002f0a5:	in     eax,dx
   14002f0a6:	in     eax,dx
   14002f0a7:	(bad)  
   14002f0a8:	mov    ebx,0xa1ffeccf
   14002f0ad:	shr    eax,0xff
   14002f0b0:	iret   
   14002f0b1:	fucomp st(4)
   14002f0b3:	dec    DWORD PTR [rax-0x72]
   14002f0b6:	jmp    0x14002f0b7
   14002f0b8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002f0b9:	ret    0xffe7
   14002f0bc:	in     eax,dx
   14002f0bd:	in     eax,dx
   14002f0be:	in     eax,dx
   14002f0bf:	(bad)  
   14002f0c0:	in     al,dx
   14002f0c1:	in     al,dx
   14002f0c2:	jmp    0x14002f0c3
   14002f0c4:	call   0x11002d5b0
   14002f0c9:	(bad)  
   14002f0ca:	mov    ebp,0x9daebbff
   14002f0cf:	dec    esp
   14002f0d1:	(bad)  
   14002f0d2:	mov    edx,0xedededff
   14002f0d7:	(bad)  
   14002f0d8:	in     eax,dx
   14002f0d9:	in     eax,dx
   14002f0da:	in     eax,dx
   14002f0db:	(bad)  
   14002f0dc:	in     eax,dx
   14002f0dd:	in     eax,dx
   14002f0de:	in     eax,dx
   14002f0df:	(bad)  
   14002f0e0:	in     eax,dx
   14002f0e1:	in     eax,dx
   14002f0e2:	in     eax,dx
   14002f0e3:	(bad)  
   14002f0e4:	in     al,dx
   14002f0e5:	in     al,dx
   14002f0e6:	in     al,dx
   14002f0e7:	(bad)  
   14002f0e8:	(bad)  
   14002f0ea:	fdivp  st(7),st
   14002f0ec:	fwait
   14002f0ed:	xchg   DWORD PTR [rdi+rdi*8-0x61],ebp
   14002f0f1:	mov    dh,BYTE PTR [rax-0x1]
   14002f0f4:	loopne 0x14002f0d6
   14002f0f6:	loopne 0x14002f0f7
   14002f0f8:	out    dx,al
   14002f0f9:	out    dx,al
   14002f0fa:	out    dx,al
   14002f0fb:	(bad)  
   14002f0fc:	out    dx,eax
   14002f0fd:	out    dx,eax
   14002f0fe:	out    dx,eax
   14002f0ff:	(bad)  
   14002f100:	out    dx,eax
   14002f101:	out    dx,eax
   14002f102:	out    dx,eax
   14002f103:	(bad)  
   14002f104:	out    dx,eax
   14002f105:	out    dx,eax
   14002f106:	out    dx,eax
   14002f107:	(bad)  
   14002f108:	out    dx,eax
   14002f109:	out    dx,eax
   14002f10a:	out    dx,eax
   14002f10b:	(bad)  
   14002f10c:	out    dx,eax
   14002f10d:	out    dx,eax
   14002f10e:	out    dx,eax
   14002f10f:	(bad)  
   14002f110:	out    dx,eax
   14002f111:	out    dx,eax
   14002f112:	out    dx,eax
   14002f113:	(bad)  
   14002f114:	out    dx,eax
   14002f115:	out    dx,eax
   14002f116:	out    dx,eax
   14002f117:	(bad)  
   14002f118:	out    dx,eax
   14002f119:	out    dx,eax
   14002f11a:	out    dx,al
   14002f11b:	(bad)  
   14002f11c:	out    dx,al
   14002f11d:	out    dx,al
   14002f11e:	in     al,dx
   14002f11f:	(bad)  
   14002f120:	out    dx,eax
   14002f121:	out    dx,eax
   14002f122:	out    dx,eax
   14002f123:	inc    edx
   14002f125:	shl    al,1
   14002f127:	dec    DWORD PTR [rdx-0x71]
   14002f12a:	hlt    
   14002f12b:	jmp    FWORD PTR [rdx+rcx*8-0x1a230013]
   14002f132:	out    dx,eax
   14002f133:	jmp    FWORD PTR [rcx]
   14002f135:	jp     0x14002f11d
   14002f137:	(bad)  
   14002f138:	cmp    DWORD PTR [rdi+riz*8-0x10181d01],eax
   14002f13f:	(bad)  
   14002f140:	out    dx,eax
   14002f141:	out    dx,eax
   14002f142:	out    dx,eax
   14002f143:	(bad)  
   14002f144:	out    dx,eax
   14002f145:	out    dx,eax
   14002f146:	out    dx,eax
   14002f147:	(bad)  
   14002f148:	out    dx,al
   14002f149:	out    dx,al
   14002f14a:	in     eax,dx
   14002f14b:	(bad)  
   14002f14c:	out    dx,al
   14002f14d:	out    dx,al
   14002f14e:	in     al,dx
   14002f14f:	(bad)  
   14002f150:	out    dx,eax
   14002f151:	out    dx,eax
   14002f152:	out    dx,eax
   14002f153:	(bad)  
   14002f154:	out    dx,eax
   14002f155:	out    dx,eax
   14002f156:	out    dx,eax
   14002f157:	(bad)  
   14002f158:	out    dx,eax
   14002f159:	out    dx,eax
   14002f15a:	out    dx,eax
   14002f15b:	(bad)  
   14002f15c:	out    dx,eax
   14002f15d:	out    dx,eax
   14002f15e:	out    dx,eax
   14002f15f:	(bad)  
   14002f160:	out    dx,eax
   14002f161:	out    dx,eax
   14002f162:	out    dx,eax
   14002f163:	(bad)  
   14002f164:	out    dx,al
   14002f165:	out    dx,al
   14002f166:	out    dx,al
   14002f167:	jmp    rax
   14002f169:	loopne 0x14002f14b
   14002f16b:	call   FWORD PTR [rdi-0x5d008f76]
   14002f171:	mov    ?,WORD PTR [rdi+rdi*8-0x1f]
   14002f175:	loope  0x14002f158
   14002f177:	(bad)  
   14002f178:	out    dx,eax
   14002f179:	out    dx,eax
   14002f17a:	out    dx,eax
   14002f17b:	push   rax
   14002f17d:	lock lock push rax
   14002f181:	lock lock push rax
   14002f185:	lock lock push rax
   14002f189:	lock lock push rax
   14002f18d:	lock lock push rax
   14002f191:	lock lock push rax
   14002f195:	lock lock push rax
   14002f199:	lock lock push rax
   14002f19d:	lock lock call rsi
   14002f1a1:	loope  0x14002f194
   14002f1a3:	(bad)  
   14002f1a4:	ds mov al,ch
   14002f1a7:	(bad)  
   14002f1a8:	jns    0x14002f157
   14002f1aa:	jmp    0x130f1dfae
   14002f1af:	jmp    FWORD PTR [rax-0x5e]
   14002f1b2:	jmp    0x1236affb6
   14002f1b7:	inc    DWORD PTR [rdx-0x76]
   14002f1ba:	out    0xff,al
   14002f1bc:	loope  0x14002f1a5
   14002f1be:	lock push rax
   14002f1c1:	lock lock push rax
   14002f1c5:	lock lock push rax
   14002f1c9:	lock lock push rax
   14002f1cd:	lock lock push rax
   14002f1d1:	lock lock push rax
   14002f1d5:	lock lock push rax
   14002f1d9:	lock lock push rax
   14002f1dd:	lock lock push rax
   14002f1e1:	lock lock (bad) 
   14002f1e4:	out    dx,eax
   14002f1e5:	out    dx,eax
   14002f1e6:	out    dx,eax
   14002f1e7:	jmp    rcx
   14002f1e9:	loope  0x14002f1cc
   14002f1eb:	jmp    QWORD PTR [rdx-0x59008b72]
   14002f1f1:	xchg   ecx,eax
   14002f1f2:	js     0x14002f1f3
   14002f1f4:	jrcxz  0x14002f1d9
   14002f1f6:	jrcxz  0x14002f1f7
   14002f1f8:	icebp  
   14002f1f9:	icebp  
   14002f1fa:	icebp  
   14002f1fb:	push   rdx
   14002f1fd:	repnz repnz push rdx
   14002f201:	repnz repnz push rdx
   14002f205:	repnz repnz push rdx
   14002f209:	repnz repnz push rdx
   14002f20d:	repnz repnz push rdx
   14002f211:	repnz repnz push rdx
   14002f215:	repnz repnz push rdx
   14002f219:	repnz repnz (bad) 
   14002f21c:	in     al,dx
   14002f21d:	out    dx,al
   14002f21e:	bnd jmp QWORD PTR [rbp-0x5f]
   14002f222:	jmp    0x127852626
   14002f227:	call   rbx
   14002f229:	loopne 0x14002f21b
   14002f22b:	push   QWORD PTR [rdi+0x1affefd1]
   14002f231:	jno    0x14002f218
   14002f233:	call   QWORD PTR [rsi]
   14002f235:	outs   dx,BYTE PTR ds:[rsi]
   14002f236:	in     al,0xff
   14002f238:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002f239:	(bad)  
   14002f23a:	in     eax,dx
   14002f23b:	push   rdx
   14002f23d:	repnz repnz push rdx
   14002f241:	repnz repnz push rdx
   14002f245:	repnz repnz push rdx
   14002f249:	repnz repnz push rdx
   14002f24d:	repnz repnz push rdx
   14002f251:	repnz repnz push rdx
   14002f255:	repnz repnz push rdx
   14002f259:	repnz repnz push rdx
   14002f25d:	repnz repnz push rdx
   14002f261:	repnz repnz push rcx
   14002f265:	icebp  
   14002f266:	icebp  
   14002f267:	jmp    rbx
   14002f269:	jrcxz  0x14002f24e
   14002f26b:	jmp    QWORD PTR [rsi-0x5600876f]
   14002f271:	xchg   ebp,eax
   14002f272:	jl     0x14002f273
   14002f274:	in     al,0xe4
   14002f276:	in     al,0xff
   14002f278:	repnz repnz repnz push rbx
   14002f27d:	repz repz push rbx
   14002f281:	repz repz push rbx
   14002f285:	repz repz push rbx
   14002f289:	repz repz push rbx
   14002f28d:	repz repz push rbx
   14002f291:	repz repz push rbx
   14002f295:	repz repz push rbx
   14002f299:	repz repz inc eax
   14002f29d:	(bad)  
   14002f29e:	lock jmp QWORD PTR [rsi]
   14002f2a1:	ja     0x14002f288
   14002f2a3:	jmp    QWORD PTR [rsi-0x5d]
   14002f2a6:	jmp    0x14002f2a7
   14002f2a8:	repz repz repz inc DWORD PTR [rsi+0x15ffecb5]
   14002f2b1:	ins    BYTE PTR es:[rdi],dx
   14002f2b2:	in     al,0xff
   14002f2b4:	ins    BYTE PTR es:[rdi],dx
   14002f2b5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002f2b6:	jmp    0x14002f2b7
   14002f2b8:	in     eax,dx
   14002f2b9:	out    dx,eax
   14002f2ba:	repz push rbx
   14002f2bd:	repz repz push rbx
   14002f2c1:	repz repz push rbx
   14002f2c5:	repz repz push rbx
   14002f2c9:	repz repz push rbx
   14002f2cd:	repz repz push rbx
   14002f2d1:	repz repz push rbx
   14002f2d5:	repz repz push rbx
   14002f2d9:	repz repz push rbx
   14002f2dd:	repz repz push rbx
   14002f2e1:	repz repz push rdx
   14002f2e5:	repnz bnd jmp rsp
   14002f2e9:	in     al,0xe4
   14002f2eb:	jmp    FWORD PTR [rcx-0x5300836b]
   14002f2f1:	cwde   
   14002f2f2:	cmp    bh,0xe6
   14002f2f5:	out    0xe6,al
   14002f2f7:	push   rsp
   14002f2f9:	hlt    
   14002f2fa:	hlt    
   14002f2fb:	push   rbp
   14002f2fd:	cmc    
   14002f2fe:	cmc    
   14002f2ff:	push   rbp
   14002f301:	cmc    
   14002f302:	cmc    
   14002f303:	push   rbp
   14002f305:	cmc    
   14002f306:	cmc    
   14002f307:	push   rbp
   14002f309:	cmc    
   14002f30a:	cmc    
   14002f30b:	push   rbp
   14002f30d:	cmc    
   14002f30e:	cmc    
   14002f30f:	push   rbp
   14002f311:	cmc    
   14002f312:	cmc    
   14002f313:	push   rbp
   14002f315:	cmc    
   14002f316:	cmc    
   14002f317:	push   rbp
   14002f319:	cmc    
   14002f31a:	cmc    
   14002f31b:	(bad)  
   14002f31c:	mov    ecx,0x1ffff1d3
   14002f321:	je     0x14002f308
   14002f323:	inc    DWORD PTR [rbp+rcx*4-0x18]
   14002f327:	push   rcx
   14002f329:	repnz cmc 
   14002f32b:	jmp    QWORD PTR [rax+0x16ffefc5]
   14002f331:	ins    DWORD PTR es:[rdi],dx
   14002f332:	jrcxz  0x14002f333
   14002f334:	popf   
   14002f335:	ret    0xffef
   14002f338:	cmc    
   14002f339:	cmc    
   14002f33a:	cmc    
   14002f33b:	push   rbp
   14002f33d:	cmc    
   14002f33e:	cmc    
   14002f33f:	push   rbp
   14002f341:	cmc    
   14002f342:	cmc    
   14002f343:	push   rbp
   14002f345:	cmc    
   14002f346:	cmc    
   14002f347:	push   rbp
   14002f349:	cmc    
   14002f34a:	cmc    
   14002f34b:	push   rbp
   14002f34d:	cmc    
   14002f34e:	cmc    
   14002f34f:	push   rbp
   14002f351:	cmc    
   14002f352:	cmc    
   14002f353:	push   rbp
   14002f355:	cmc    
   14002f356:	cmc    
   14002f357:	push   rbp
   14002f359:	cmc    
   14002f35a:	cmc    
   14002f35b:	push   rbp
   14002f35d:	cmc    
   14002f35e:	cmc    
   14002f35f:	push   rbp
   14002f361:	cmc    
   14002f362:	cmc    
   14002f363:	push   rsp
   14002f365:	hlt    
   14002f366:	hlt    
   14002f367:	jmp    rsi
   14002f369:	out    0xe6,al
   14002f36b:	jmp    FWORD PTR [rax+rbx*4-0x634f0080]
   14002f372:	test   bh,bh
   14002f374:	out    0xe7,eax
   14002f376:	out    0xff,eax
   14002f378:	cmc    
   14002f379:	cmc    
   14002f37a:	cmc    
   14002f37b:	push   rsi
   14002f37d:	div    dh
   14002f37f:	push   rsi
   14002f381:	div    dh
   14002f383:	push   rsi
   14002f385:	div    dh
   14002f387:	push   rsi
   14002f389:	div    dh
   14002f38b:	push   rsi
   14002f38d:	div    dh
   14002f38f:	push   rsi
   14002f391:	div    dh
   14002f393:	push   rsi
   14002f395:	div    dh
   14002f397:	push   rsi
   14002f399:	div    dh
   14002f39b:	jmp    rsi
   14002f39d:	out    dx,al
   14002f39e:	cmc    
   14002f39f:	call   FWORD PTR [rdi-0x61]
   14002f3a2:	jmp    0x14002f3a3
   14002f3a4:	sbb    DWORD PTR [rdi-0x1c],ebp
   14002f3a7:	call   QWORD PTR [rax-0x13001045]
   14002f3ad:	icebp  
   14002f3ae:	idiv   bh
   14002f3b0:	rex.RXB (bad) 
   14002f3b5:	mov    al,ch
   14002f3b7:	call   rdx
   14002f3b9:	loope  0x14002f3ae
   14002f3bb:	push   rsi
   14002f3bd:	div    dh
   14002f3bf:	push   rsi
   14002f3c1:	div    dh
   14002f3c3:	push   rsi
   14002f3c5:	div    dh
   14002f3c7:	push   rsi
   14002f3c9:	div    dh
   14002f3cb:	push   rsi
   14002f3cd:	div    dh
   14002f3cf:	push   rsi
   14002f3d1:	div    dh
   14002f3d3:	push   rsi
   14002f3d5:	div    dh
   14002f3d7:	push   rsi
   14002f3d9:	div    dh
   14002f3db:	push   rsi
   14002f3dd:	div    dh
   14002f3df:	push   rsi
   14002f3e1:	div    dh
   14002f3e3:	push   rbp
   14002f3e5:	cmc    
   14002f3e6:	cmc    
   14002f3e7:	jmp    rdi
   14002f3e9:	out    0xe7,eax
   14002f3eb:	push   QWORD PTR [rax-0x4c007b64]
   14002f3f1:	lahf   
   14002f3f2:	xchg   edi,edi
   14002f3f4:	call   0x13702dce1
   14002f3f9:	div    dh
   14002f3fb:	push   rdi
   14002f3fd:	div    edi
   14002f3ff:	push   rdi
   14002f401:	div    edi
   14002f403:	push   rdi
   14002f405:	div    edi
   14002f407:	push   rdi
   14002f409:	div    edi
   14002f40b:	push   rdi
   14002f40d:	div    edi
   14002f40f:	push   rdi
   14002f411:	div    edi
   14002f413:	push   rdi
   14002f415:	div    edi
   14002f417:	push   rdi
   14002f419:	div    edi
   14002f41b:	push   rdi
   14002f41d:	div    edi
   14002f41f:	call   rbx
   14002f421:	loop   0x14002f417
   14002f423:	dec    DWORD PTR [rbx-0x6f]
   14002f426:	(bad)  
   14002f427:	jmp    QWORD PTR [rcx]
   14002f429:	je     0x14002f411
   14002f42b:	jmp    QWORD PTR [rax-0x28000e3b]
   14002f431:	out    0xf4,al
   14002f433:	dec    DWORD PTR [rbx-0x6f]
   14002f436:	(bad)  
   14002f437:	dec    DWORD PTR [rcx-0x70]
   14002f43a:	(bad)  
   14002f43b:	push   QWORD PTR [rbx-0x8000d2f]
   14002f441:	div    edi
   14002f443:	push   rdi
   14002f445:	div    edi
   14002f447:	push   rdi
   14002f449:	div    edi
   14002f44b:	push   rdi
   14002f44d:	div    edi
   14002f44f:	push   rdi
   14002f451:	div    edi
   14002f453:	push   rdi
   14002f455:	div    edi
   14002f457:	push   rdi
   14002f459:	div    edi
   14002f45b:	push   rdi
   14002f45d:	div    edi
   14002f45f:	push   rdi
   14002f461:	div    edi
   14002f463:	push   rsi
   14002f465:	div    dh
   14002f467:	(bad)  
   14002f468:	call   0xf402dd55
   14002f46d:	lahf   
   14002f46e:	xchg   edi,edi
   14002f470:	mov    dh,0xa2
   14002f472:	mov    edi,edi
   14002f474:	jmp    0x13802de62
   14002f479:	div    edi
   14002f47b:	(bad)  
   14002f47c:	clc    
   14002f47d:	clc    
   14002f47e:	clc    
   14002f47f:	(bad)  
   14002f480:	clc    
   14002f481:	clc    
   14002f482:	clc    
   14002f483:	(bad)  
   14002f484:	clc    
   14002f485:	clc    
   14002f486:	clc    
   14002f487:	(bad)  
   14002f488:	clc    
   14002f489:	clc    
   14002f48a:	clc    
   14002f48b:	(bad)  
   14002f48c:	clc    
   14002f48d:	clc    
   14002f48e:	clc    
   14002f48f:	(bad)  
   14002f490:	clc    
   14002f491:	clc    
   14002f492:	clc    
   14002f493:	(bad)  
   14002f494:	clc    
   14002f495:	clc    
   14002f496:	clc    
   14002f497:	(bad)  
   14002f498:	clc    
   14002f499:	clc    
   14002f49a:	clc    
   14002f49b:	(bad)  
   14002f49c:	clc    
   14002f49d:	clc    
   14002f49e:	clc    
   14002f49f:	(bad)  
   14002f4a0:	clc    
   14002f4a1:	clc    
   14002f4a2:	clc    
   14002f4a3:	(bad)  
   14002f4a4:	(bad)  
   14002f4a6:	idiv   bh
   14002f4a8:	pop    rsi
   14002f4a9:	popf   
   14002f4aa:	jmp    0x14002f4ab
   14002f4ac:	(bad)  
   14002f4ad:	js     0x14002f495
   14002f4af:	dec    DWORD PTR [rcx+rdi*4-0x1c2b0011]
   14002f4b6:	idiv   bh
   14002f4b8:	jnp    0x14002f46a
   14002f4ba:	out    dx,al
   14002f4bb:	jmp    QWORD PTR [rdi-0x5d]
   14002f4be:	in     eax,dx
   14002f4bf:	call   QWORD PTR [rbp-0x26000e41]
   14002f4c5:	out    0xf6,eax
   14002f4c7:	(bad)  
   14002f4c8:	clc    
   14002f4c9:	clc    
   14002f4ca:	clc    
   14002f4cb:	(bad)  
   14002f4cc:	clc    
   14002f4cd:	clc    
   14002f4ce:	clc    
   14002f4cf:	(bad)  
   14002f4d0:	clc    
   14002f4d1:	clc    
   14002f4d2:	clc    
   14002f4d3:	(bad)  
   14002f4d4:	clc    
   14002f4d5:	clc    
   14002f4d6:	clc    
   14002f4d7:	(bad)  
   14002f4d8:	clc    
   14002f4d9:	clc    
   14002f4da:	clc    
   14002f4db:	(bad)  
   14002f4dc:	clc    
   14002f4dd:	clc    
   14002f4de:	clc    
   14002f4df:	(bad)  
   14002f4e0:	clc    
   14002f4e1:	clc    
   14002f4e2:	clc    
   14002f4e3:	push   rdi
   14002f4e5:	div    edi
   14002f4e7:	(bad)  
   14002f4e8:	jmp    0xf702ded6
   14002f4ed:	movabs ds:0xebebff8ea5b9ff8b,al
   14002f4f6:	jmp    0x14002f4f7
   14002f4f8:	stc    
   14002f4f9:	stc    
   14002f4fa:	stc    
   14002f4fb:	(bad)  
   14002f4fc:	cli    
   14002f4fd:	cli    
   14002f4fe:	cli    
   14002f4ff:	(bad)  
   14002f500:	cli    
   14002f501:	cli    
   14002f502:	cli    
   14002f503:	(bad)  
   14002f504:	cli    
   14002f505:	cli    
   14002f506:	cli    
   14002f507:	(bad)  
   14002f508:	cli    
   14002f509:	cli    
   14002f50a:	cli    
   14002f50b:	(bad)  
   14002f50c:	cli    
   14002f50d:	cli    
   14002f50e:	cli    
   14002f50f:	(bad)  
   14002f510:	cli    
   14002f511:	cli    
   14002f512:	cli    
   14002f513:	(bad)  
   14002f514:	cli    
   14002f515:	cli    
   14002f516:	cli    
   14002f517:	(bad)  
   14002f518:	cli    
   14002f519:	cli    
   14002f51a:	cli    
   14002f51b:	(bad)  
   14002f51c:	cli    
   14002f51d:	cli    
   14002f51e:	cli    
   14002f51f:	(bad)  
   14002f520:	cli    
   14002f521:	cli    
   14002f522:	cli    
   14002f523:	(bad)  
   14002f524:	cli    
   14002f525:	cli    
   14002f526:	cli    
   14002f527:	(bad)  
   14002f528:	jmp    0x1bf02ef1e
   14002f52d:	mov    cl,0xef
   14002f52f:	jmp    FWORD PTR [rcx]
   14002f531:	jns    0x14002f519
   14002f533:	dec    DWORD PTR [rdx-0x5000f47]
   14002f539:	cli    
   14002f53a:	cli    
   14002f53b:	dec    edx
   14002f53d:	fcomip st,st(7)
   14002f53f:	jmp    QWORD PTR [rdi-0x31000c36]
   14002f545:	loope  0x14002f53e
   14002f547:	push   rdi
   14002f549:	clc    
   14002f54a:	cli    
   14002f54b:	(bad)  
   14002f54c:	cli    
   14002f54d:	cli    
   14002f54e:	cli    
   14002f54f:	(bad)  
   14002f550:	cli    
   14002f551:	cli    
   14002f552:	cli    
   14002f553:	(bad)  
   14002f554:	cli    
   14002f555:	cli    
   14002f556:	cli    
   14002f557:	(bad)  
   14002f558:	cli    
   14002f559:	cli    
   14002f55a:	cli    
   14002f55b:	(bad)  
   14002f55c:	cli    
   14002f55d:	cli    
   14002f55e:	cli    
   14002f55f:	(bad)  
   14002f560:	cli    
   14002f561:	cli    
   14002f562:	cli    
   14002f563:	(bad)  
   14002f564:	stc    
   14002f565:	stc    
   14002f566:	stc    
   14002f567:	(bad)  
   14002f568:	jmp    0x14002f555
   14002f56a:	jmp    0x14002f56b
   14002f56c:	mov    ecx,0xbcff8ea5
   14002f571:	test   al,0x92
   14002f573:	(bad)  
   14002f574:	in     al,dx
   14002f575:	in     al,dx
   14002f576:	in     al,dx
   14002f577:	(bad)  
   14002f578:	cli    
   14002f579:	cli    
   14002f57a:	cli    
   14002f57b:	(bad)  
   14002f57c:	sti    
   14002f57d:	sti    
   14002f57e:	sti    
   14002f57f:	(bad)  
   14002f580:	sti    
   14002f581:	sti    
   14002f582:	sti    
   14002f583:	(bad)  
   14002f584:	sti    
   14002f585:	sti    
   14002f586:	sti    
   14002f587:	(bad)  
   14002f588:	sti    
   14002f589:	sti    
   14002f58a:	sti    
   14002f58b:	(bad)  
   14002f58c:	sti    
   14002f58d:	sti    
   14002f58e:	sti    
   14002f58f:	(bad)  
   14002f590:	sti    
   14002f591:	sti    
   14002f592:	sti    
   14002f593:	(bad)  
   14002f594:	sti    
   14002f595:	sti    
   14002f596:	sti    
   14002f597:	(bad)  
   14002f598:	sti    
   14002f599:	sti    
   14002f59a:	sti    
   14002f59b:	(bad)  
   14002f59c:	sti    
   14002f59d:	sti    
   14002f59e:	sti    
   14002f59f:	(bad)  
   14002f5a0:	sti    
   14002f5a1:	sti    
   14002f5a2:	sti    
   14002f5a3:	(bad)  
   14002f5a4:	sti    
   14002f5a5:	sti    
   14002f5a6:	sti    
   14002f5a7:	(bad)  
   14002f5a8:	sti    
   14002f5a9:	sti    
   14002f5aa:	sti    
   14002f5ab:	push   rsp
   14002f5ad:	clc    
   14002f5ae:	sti    
   14002f5af:	dec    DWORD PTR [rbp+0x40fff1bc]
   14002f5b5:	mov    cl,ch
   14002f5b7:	inc    ecx
   14002f5b9:	(bad)  
   14002f5bb:	(bad)  
   14002f5bc:	sti    
   14002f5bd:	sti    
   14002f5be:	sti    
   14002f5bf:	(bad)  
   14002f5c0:	sti    
   14002f5c1:	sti    
   14002f5c2:	sti    
   14002f5c3:	push   rbx
   14002f5c5:	idiv   edx
   14002f5c7:	(bad)  
   14002f5c8:	cli    
   14002f5c9:	cli    
   14002f5ca:	sti    
   14002f5cb:	(bad)  
   14002f5cc:	sti    
   14002f5cd:	sti    
   14002f5ce:	sti    
   14002f5cf:	(bad)  
   14002f5d0:	sti    
   14002f5d1:	sti    
   14002f5d2:	sti    
   14002f5d3:	(bad)  
   14002f5d4:	sti    
   14002f5d5:	sti    
   14002f5d6:	sti    
   14002f5d7:	(bad)  
   14002f5d8:	sti    
   14002f5d9:	sti    
   14002f5da:	sti    
   14002f5db:	(bad)  
   14002f5dc:	sti    
   14002f5dd:	sti    
   14002f5de:	sti    
   14002f5df:	(bad)  
   14002f5e0:	sti    
   14002f5e1:	sti    
   14002f5e2:	sti    
   14002f5e3:	(bad)  
   14002f5e4:	cli    
   14002f5e5:	cli    
   14002f5e6:	cli    
   14002f5e7:	(bad)  
   14002f5e8:	in     al,dx
   14002f5e9:	in     al,dx
   14002f5ea:	in     al,dx
   14002f5eb:	(bad)  
   14002f5ec:	mov    esp,0xbfff92a8
   14002f5f1:	stos   DWORD PTR es:[rdi],eax
   14002f5f2:	xchg   ebp,eax
   14002f5f3:	(bad)  
   14002f5f4:	in     al,dx
   14002f5f5:	in     al,dx
   14002f5f6:	in     al,dx
   14002f5f7:	(bad)  
   14002f5f8:	stc    
   14002f5f9:	stc    
   14002f5fa:	stc    
   14002f5fb:	(bad)  
   14002f5fc:	cld    
   14002f5fd:	cld    
   14002f5fe:	cld    
   14002f5ff:	(bad)  
   14002f600:	cld    
   14002f601:	cld    
   14002f602:	cld    
   14002f603:	(bad)  
   14002f604:	cld    
   14002f605:	cld    
   14002f606:	cld    
   14002f607:	(bad)  
   14002f608:	cld    
   14002f609:	cld    
   14002f60a:	cld    
   14002f60b:	(bad)  
   14002f60c:	cld    
   14002f60d:	cld    
   14002f60e:	cld    
   14002f60f:	(bad)  
   14002f610:	cld    
   14002f611:	cld    
   14002f612:	cld    
   14002f613:	(bad)  
   14002f614:	cld    
   14002f615:	cld    
   14002f616:	cld    
   14002f617:	(bad)  
   14002f618:	cld    
   14002f619:	cld    
   14002f61a:	cld    
   14002f61b:	(bad)  
   14002f61c:	cld    
   14002f61d:	cld    
   14002f61e:	cld    
   14002f61f:	(bad)  
   14002f620:	cld    
   14002f621:	cld    
   14002f622:	cld    
   14002f623:	(bad)  
   14002f624:	cld    
   14002f625:	cld    
   14002f626:	cld    
   14002f627:	(bad)  
   14002f628:	cld    
   14002f629:	cld    
   14002f62a:	cld    
   14002f62b:	(bad)  
   14002f62c:	cld    
   14002f62d:	cld    
   14002f62e:	cld    
   14002f62f:	push   rdi
   14002f631:	stc    
   14002f632:	cld    
   14002f633:	call   FWORD PTR [rax-0x76000d3e]
   14002f639:	mov    ecx,0xf6f2fff2
   14002f63e:	sti    
   14002f63f:	(bad)  
   14002f640:	cld    
   14002f641:	cld    
   14002f642:	cld    
   14002f643:	(bad)  
   14002f644:	cld    
   14002f645:	cld    
   14002f646:	cld    
   14002f647:	(bad)  
   14002f648:	cld    
   14002f649:	cld    
   14002f64a:	cld    
   14002f64b:	(bad)  
   14002f64c:	cld    
   14002f64d:	cld    
   14002f64e:	cld    
   14002f64f:	(bad)  
   14002f650:	cld    
   14002f651:	cld    
   14002f652:	cld    
   14002f653:	(bad)  
   14002f654:	cld    
   14002f655:	cld    
   14002f656:	cld    
   14002f657:	(bad)  
   14002f658:	cld    
   14002f659:	cld    
   14002f65a:	cld    
   14002f65b:	(bad)  
   14002f65c:	cld    
   14002f65d:	cld    
   14002f65e:	cld    
   14002f65f:	(bad)  
   14002f660:	cld    
   14002f661:	cld    
   14002f662:	cld    
   14002f663:	(bad)  
   14002f664:	stc    
   14002f665:	stc    
   14002f666:	stc    
   14002f667:	(bad)  
   14002f668:	in     al,dx
   14002f669:	in     al,dx
   14002f66a:	in     al,dx
   14002f66b:	(bad)  
   14002f66c:	mov    edi,0xc1ff95ab
   14002f671:	scas   al,BYTE PTR es:[rdi]
   14002f672:	cwde   
   14002f673:	mov    edi,0xffd4d9de
   14002f678:	clc    
   14002f679:	clc    
   14002f67a:	clc    
   14002f67b:	(bad)  
   14002f67c:	std    
   14002f67d:	std    
   14002f67e:	std    
   14002f67f:	(bad)  
   14002f680:	std    
   14002f681:	std    
   14002f682:	std    
   14002f683:	(bad)  
   14002f684:	std    
   14002f685:	std    
   14002f686:	std    
   14002f687:	(bad)  
   14002f688:	std    
   14002f689:	std    
   14002f68a:	std    
   14002f68b:	(bad)  
   14002f68c:	std    
   14002f68d:	std    
   14002f68e:	std    
   14002f68f:	(bad)  
   14002f690:	std    
   14002f691:	std    
   14002f692:	std    
   14002f693:	(bad)  
   14002f694:	std    
   14002f695:	std    
   14002f696:	std    
   14002f697:	(bad)  
   14002f698:	std    
   14002f699:	std    
   14002f69a:	std    
   14002f69b:	(bad)  
   14002f69c:	std    
   14002f69d:	std    
   14002f69e:	std    
   14002f69f:	(bad)  
   14002f6a0:	std    
   14002f6a1:	std    
   14002f6a2:	std    
   14002f6a3:	(bad)  
   14002f6a4:	std    
   14002f6a5:	std    
   14002f6a6:	std    
   14002f6a7:	(bad)  
   14002f6a8:	std    
   14002f6a9:	std    
   14002f6aa:	std    
   14002f6ab:	(bad)  
   14002f6ac:	std    
   14002f6ad:	std    
   14002f6ae:	std    
   14002f6af:	(bad)  
   14002f6b0:	std    
   14002f6b1:	std    
   14002f6b2:	std    
   14002f6b3:	push   rdx
   14002f6b5:	idiv   ah
   14002f6b7:	jmp    QWORD PTR [rdx+rcx*8-0xb12000b]
   14002f6be:	cld    
   14002f6bf:	(bad)  
   14002f6c0:	std    
   14002f6c1:	std    
   14002f6c2:	std    
   14002f6c3:	(bad)  
   14002f6c4:	std    
   14002f6c5:	std    
   14002f6c6:	std    
   14002f6c7:	(bad)  
   14002f6c8:	std    
   14002f6c9:	std    
   14002f6ca:	std    
   14002f6cb:	(bad)  
   14002f6cc:	std    
   14002f6cd:	std    
   14002f6ce:	std    
   14002f6cf:	(bad)  
   14002f6d0:	std    
   14002f6d1:	std    
   14002f6d2:	std    
   14002f6d3:	(bad)  
   14002f6d4:	std    
   14002f6d5:	std    
   14002f6d6:	std    
   14002f6d7:	(bad)  
   14002f6d8:	std    
   14002f6d9:	std    
   14002f6da:	std    
   14002f6db:	(bad)  
   14002f6dc:	std    
   14002f6dd:	std    
   14002f6de:	std    
   14002f6df:	(bad)  
   14002f6e0:	std    
   14002f6e1:	std    
   14002f6e2:	std    
   14002f6e3:	(bad)  
   14002f6e4:	clc    
   14002f6e5:	clc    
   14002f6e6:	clc    
   14002f6e7:	(bad)  
   14002f6e8:	fcompp 
   14002f6ea:	(bad)  
   14002f6eb:	inc    ecx
   14002f6ed:	scas   al,BYTE PTR es:[rdi]
   14002f6ee:	cwde   
   14002f6ef:	mov    edi,0x7f9ab0c4
   14002f6f4:	ror    al,cl
   14002f6f6:	mov    ebp,0xf3f3f3ff
   14002f6fb:	(bad)  
   14002f6fc:	cld    
   14002f6fd:	cld    
   14002f6fe:	cld    
   14002f6ff:	(bad)  
   14002f700:	(bad)  
   14002f701:	(bad)  
   14002f702:	(bad)  
   14002f703:	(bad)  
   14002f704:	(bad)  
   14002f705:	(bad)  
   14002f706:	(bad)  
   14002f707:	(bad)  
   14002f708:	(bad)  
   14002f709:	(bad)  
   14002f70a:	(bad)  
   14002f70b:	(bad)  
   14002f70c:	(bad)  
   14002f70d:	(bad)  
   14002f70e:	(bad)  
   14002f70f:	(bad)  
   14002f710:	(bad)  
   14002f711:	(bad)  
   14002f712:	(bad)  
   14002f713:	(bad)  
   14002f714:	(bad)  
   14002f715:	(bad)  
   14002f716:	(bad)  
   14002f717:	(bad)  
   14002f718:	(bad)  
   14002f719:	(bad)  
   14002f71a:	(bad)  
   14002f71b:	(bad)  
   14002f71c:	(bad)  
   14002f71d:	(bad)  
   14002f71e:	(bad)  
   14002f71f:	(bad)  
   14002f720:	(bad)  
   14002f721:	(bad)  
   14002f722:	(bad)  
   14002f723:	(bad)  
   14002f724:	(bad)  
   14002f725:	(bad)  
   14002f726:	(bad)  
   14002f727:	(bad)  
   14002f728:	(bad)  
   14002f729:	(bad)  
   14002f72a:	(bad)  
   14002f72b:	(bad)  
   14002f72c:	(bad)  
   14002f72d:	(bad)  
   14002f72e:	(bad)  
   14002f72f:	(bad)  
   14002f730:	(bad)  
   14002f731:	(bad)  
   14002f732:	(bad)  
   14002f733:	(bad)  
   14002f734:	(bad)  
   14002f735:	(bad)  
   14002f736:	(bad)  
   14002f737:	(bad)  
   14002f738:	fucomp st(2)
   14002f73a:	sti    
   14002f73b:	push   rdi
   14002f73d:	cli    
   14002f73e:	std    
   14002f73f:	(bad)  
   14002f740:	(bad)  
   14002f741:	(bad)  
   14002f742:	(bad)  
   14002f743:	(bad)  
   14002f744:	(bad)  
   14002f745:	(bad)  
   14002f746:	(bad)  
   14002f747:	(bad)  
   14002f748:	(bad)  
   14002f749:	(bad)  
   14002f74a:	(bad)  
   14002f74b:	(bad)  
   14002f74c:	(bad)  
   14002f74d:	(bad)  
   14002f74e:	(bad)  
   14002f74f:	(bad)  
   14002f750:	(bad)  
   14002f751:	(bad)  
   14002f752:	(bad)  
   14002f753:	(bad)  
   14002f754:	(bad)  
   14002f755:	(bad)  
   14002f756:	(bad)  
   14002f757:	(bad)  
   14002f758:	(bad)  
   14002f759:	(bad)  
   14002f75a:	(bad)  
   14002f75b:	(bad)  
   14002f75c:	(bad)  
   14002f75d:	(bad)  
   14002f75e:	(bad)  
   14002f75f:	(bad)  
   14002f760:	cld    
   14002f761:	cld    
   14002f762:	cld    
   14002f763:	push   rbx
   14002f765:	repz repz call rdx
   14002f769:	enter  0xffbd,0xc4
   14002f76d:	mov    al,0x9a
   14002f76f:	jg     0x14002f737
   14002f771:	mov    bl,0x9d
   14002f773:	rex retf 
   14002f775:	mov    ebp,0xd7ddffac
   14002f77a:	iret   
   14002f77b:	push   rsp
   14002f77d:	hlt    
   14002f77e:	hlt    
   14002f77f:	(bad)  
   14002f780:	sti    
   14002f781:	sti    
   14002f782:	sti    
   14002f783:	(bad)  
   14002f784:	std    
   14002f785:	std    
   14002f786:	std    
   14002f787:	(bad)  
   14002f788:	(bad)  
   14002f789:	(bad)  
   14002f78a:	(bad)  
   14002f78b:	(bad)  
   14002f78c:	(bad)  
   14002f78d:	(bad)  
   14002f78e:	(bad)  
   14002f78f:	(bad)  
   14002f790:	(bad)  
   14002f791:	(bad)  
   14002f792:	(bad)  
   14002f793:	(bad)  
   14002f794:	(bad)  
   14002f795:	(bad)  
   14002f796:	(bad)  
   14002f797:	(bad)  
   14002f798:	(bad)  
   14002f799:	(bad)  
   14002f79a:	(bad)  
   14002f79b:	(bad)  
   14002f79c:	(bad)  
   14002f79d:	(bad)  
   14002f79e:	(bad)  
   14002f79f:	(bad)  
   14002f7a0:	(bad)  
   14002f7a1:	(bad)  
   14002f7a2:	(bad)  
   14002f7a3:	(bad)  
   14002f7a4:	(bad)  
   14002f7a5:	(bad)  
   14002f7a6:	(bad)  
   14002f7a7:	(bad)  
   14002f7a8:	(bad)  
   14002f7a9:	(bad)  
   14002f7aa:	(bad)  
   14002f7ab:	(bad)  
   14002f7ac:	(bad)  
   14002f7ad:	(bad)  
   14002f7ae:	(bad)  
   14002f7af:	(bad)  
   14002f7b0:	(bad)  
   14002f7b1:	(bad)  
   14002f7b2:	(bad)  
   14002f7b3:	(bad)  
   14002f7b4:	(bad)  
   14002f7b5:	(bad)  
   14002f7b6:	(bad)  
   14002f7b7:	(bad)  
   14002f7b8:	(bad)  
   14002f7b9:	(bad)  
   14002f7ba:	(bad)  
   14002f7bb:	(bad)  
   14002f7bc:	(bad)  
   14002f7bd:	(bad)  
   14002f7be:	(bad)  
   14002f7bf:	(bad)  
   14002f7c0:	(bad)  
   14002f7c1:	(bad)  
   14002f7c2:	(bad)  
   14002f7c3:	(bad)  
   14002f7c4:	(bad)  
   14002f7c5:	(bad)  
   14002f7c6:	(bad)  
   14002f7c7:	(bad)  
   14002f7c8:	(bad)  
   14002f7c9:	(bad)  
   14002f7ca:	(bad)  
   14002f7cb:	(bad)  
   14002f7cc:	(bad)  
   14002f7cd:	(bad)  
   14002f7ce:	(bad)  
   14002f7cf:	(bad)  
   14002f7d0:	(bad)  
   14002f7d1:	(bad)  
   14002f7d2:	(bad)  
   14002f7d3:	(bad)  
   14002f7d4:	(bad)  
   14002f7d5:	(bad)  
   14002f7d6:	(bad)  
   14002f7d7:	(bad)  
   14002f7d8:	std    
   14002f7d9:	std    
   14002f7da:	std    
   14002f7db:	(bad)  
   14002f7dc:	sti    
   14002f7dd:	sti    
   14002f7de:	sti    
   14002f7df:	push   rsp
   14002f7e1:	hlt    
   14002f7e2:	hlt    
   14002f7e3:	(bad)  
   14002f7e4:	fst    st(7)
   14002f7e6:	iret   
   14002f7e7:	dec    ebx
   14002f7e9:	mov    ebp,0xb3c6ffac
   14002f7ee:	popf   
   14002f7ef:	add    BYTE PTR [rax],al
   14002f7f2:	add    BYTE PTR [rax],al
   14002f7f4:	enter  0x9fb5,0x40
   14002f7f8:	int3   
   14002f7f9:	mov    esi,0xcbd5ffae
   14002f7fe:	sar    bh,0xe2
   14002f801:	(bad)  
   14002f803:	push   rdx
   14002f805:	repnz repnz push rbp
   14002f809:	cmc    
   14002f80a:	cmc    
   14002f80b:	push   rdi
   14002f80d:	div    edi
   14002f80f:	push   rdi
   14002f811:	div    edi
   14002f813:	push   rdi
   14002f815:	div    edi
   14002f817:	push   rdi
   14002f819:	div    edi
   14002f81b:	push   rdi
   14002f81d:	div    edi
   14002f81f:	push   rdi
   14002f821:	div    edi
   14002f823:	push   rdi
   14002f825:	div    edi
   14002f827:	push   rdi
   14002f829:	div    edi
   14002f82b:	push   rdi
   14002f82d:	div    edi
   14002f82f:	push   rdi
   14002f831:	div    edi
   14002f833:	push   rdi
   14002f835:	div    edi
   14002f837:	push   rdi
   14002f839:	div    edi
   14002f83b:	push   rdi
   14002f83d:	div    edi
   14002f83f:	push   rdi
   14002f841:	div    edi
   14002f843:	push   rdi
   14002f845:	div    edi
   14002f847:	push   rdi
   14002f849:	div    edi
   14002f84b:	push   rdi
   14002f84d:	div    edi
   14002f84f:	push   rdi
   14002f851:	div    edi
   14002f853:	push   rbp
   14002f855:	cmc    
   14002f856:	cmc    
   14002f857:	push   rdx
   14002f859:	repnz bnd jmp rdx
   14002f85d:	(bad)  
   14002f85f:	call   rbp
   14002f861:	retf   
   14002f862:	sar    bh,0xcc
   14002f865:	mov    esi,0xb5c8ffae
   14002f86a:	lahf   
   14002f86b:	add    BYTE PTR [rax],al
	...
   14002f876:	add    BYTE PTR [rax],al
   14002f878:	leave  
   14002f879:	mov    dh,0xa1
   14002f87b:	rex leave 
   14002f87d:	mov    dh,0xa1
   14002f87f:	jg     0x14002f84a
   14002f881:	mov    dh,0xa1
   14002f883:	mov    edi,0xffa1b6c9
   14002f888:	leave  
   14002f889:	mov    dh,0xa1
   14002f88b:	dec    ecx
   14002f88d:	mov    dh,0xa1
   14002f88f:	dec    ecx
   14002f891:	mov    dh,0xa1
   14002f893:	dec    ecx
   14002f895:	mov    dh,0xa1
   14002f897:	dec    ecx
   14002f899:	mov    dh,0xa1
   14002f89b:	dec    ecx
   14002f89d:	mov    dh,0xa1
   14002f89f:	dec    ecx
   14002f8a1:	mov    dh,0xa1
   14002f8a3:	dec    ecx
   14002f8a5:	mov    dh,0xa1
   14002f8a7:	dec    ecx
   14002f8a9:	mov    dh,0xa1
   14002f8ab:	dec    ecx
   14002f8ad:	mov    dh,0xa1
   14002f8af:	dec    ecx
   14002f8b1:	mov    dh,0xa1
   14002f8b3:	dec    ecx
   14002f8b5:	mov    dh,0xa1
   14002f8b7:	dec    ecx
   14002f8b9:	mov    dh,0xa1
   14002f8bb:	dec    ecx
   14002f8bd:	mov    dh,0xa1
   14002f8bf:	dec    ecx
   14002f8c1:	mov    dh,0xa1
   14002f8c3:	dec    ecx
   14002f8c5:	mov    dh,0xa1
   14002f8c7:	dec    ecx
   14002f8c9:	mov    dh,0xa1
   14002f8cb:	dec    ecx
   14002f8cd:	mov    dh,0xa1
   14002f8cf:	dec    ecx
   14002f8d1:	mov    dh,0xa1
   14002f8d3:	dec    ecx
   14002f8d5:	mov    dh,0xa1
   14002f8d7:	dec    ecx
   14002f8d9:	mov    dh,0xa1
   14002f8db:	dec    ecx
   14002f8dd:	mov    dh,0xa1
   14002f8df:	mov    edi,0x7fa1b6c9
   14002f8e4:	leave  
   14002f8e5:	mov    dh,0xa1
   14002f8e7:	add    BYTE PTR [rax],al
   14002f8ea:	add    BYTE PTR [rax],al
   14002f8ec:	add    BYTE PTR [rax],al
   14002f8ee:	add    BYTE PTR [rax],al
   14002f8f0:	rol    BYTE PTR [rax],0x0
   14002f8f3:	add    eax,DWORD PTR [rax+0x10000]
	...
   14002f965:	add    BYTE PTR [rax],al
   14002f967:	add    BYTE PTR [rax-0x3fff0000],al
   14002f96d:	add    BYTE PTR [rax],al
   14002f96f:	add    ebp,DWORD PTR [rax]
   14002f971:	add    BYTE PTR [rax],al
   14002f973:	add    BYTE PTR [rax],bl
   14002f975:	add    BYTE PTR [rax],al
   14002f977:	add    BYTE PTR [rax],dh
   14002f979:	add    BYTE PTR [rax],al
   14002f97b:	add    BYTE PTR [rcx],al
   14002f97d:	add    BYTE PTR [rax],ah
	...
   14002f9f7:	add    BYTE PTR [rax+0x5a],dh
   14002f9fa:	cmp    bl,BYTE PTR [rdx]
   14002f9fc:	jo     0x14002fa58
   14002f9fe:	cmp    al,BYTE PTR [rax-0x2ac5a590]
   14002fa04:	jo     0x14002fa60
   14002fa06:	cmp    bh,bh
   14002fa08:	jo     0x14002fa64
   14002fa0a:	cmp    bh,bh
   14002fa0c:	jo     0x14002fa68
   14002fa0e:	cmp    bh,bh
   14002fa10:	jo     0x14002fa6c
   14002fa12:	cmp    bh,bh
   14002fa14:	jo     0x14002fa70
   14002fa16:	cmp    bh,bh
   14002fa18:	jo     0x14002fa74
   14002fa1a:	cmp    bh,bh
   14002fa1c:	jo     0x14002fa78
   14002fa1e:	cmp    bh,bh
   14002fa20:	jo     0x14002fa7c
   14002fa22:	cmp    bh,bh
   14002fa24:	jo     0x14002fa80
   14002fa26:	cmp    bh,bh
   14002fa28:	jo     0x14002fa84
   14002fa2a:	cmp    bh,bh
   14002fa2c:	jo     0x14002fa88
   14002fa2e:	cmp    bh,bh
   14002fa30:	jo     0x14002fa8c
   14002fa32:	cmp    bh,bh
   14002fa34:	jo     0x14002fa90
   14002fa36:	cmp    bh,bh
   14002fa38:	jo     0x14002fa94
   14002fa3a:	cmp    bh,bh
   14002fa3c:	jo     0x14002fa98
   14002fa3e:	cmp    bh,bh
   14002fa40:	jo     0x14002fa9c
   14002fa42:	cmp    bh,bh
   14002fa44:	jo     0x14002faa0
   14002fa46:	cmp    bh,bh
   14002fa48:	jo     0x14002faa4
   14002fa4a:	cmp    bh,bh
   14002fa4c:	jo     0x14002faa8
   14002fa4e:	cmp    dl,ch
   14002fa50:	jo     0x14002faac
   14002fa52:	cmp    al,BYTE PTR [rax+0x1a3a5a70]
   14002fa58:	jae    0x14002fab7
   14002fa5a:	adc    BYTE PTR ds:[rdx-0x3b008879],0xc1
   14002fa62:	mov    ebx,0xe6e6e6ff
   14002fa67:	jmp    rdi
   14002fa69:	out    0xe7,eax
   14002fa6b:	jmp    rdi
   14002fa6d:	out    0xe7,eax
   14002fa6f:	jmp    rdi
   14002fa71:	out    0xe7,eax
   14002fa73:	jmp    rdi
   14002fa75:	out    0xe7,eax
   14002fa77:	jmp    rdi
   14002fa79:	out    0xe7,eax
   14002fa7b:	jmp    rdi
   14002fa7d:	out    0xe7,eax
   14002fa7f:	jmp    rdi
   14002fa81:	out    0xe7,eax
   14002fa83:	jmp    rdi
   14002fa85:	out    0xe7,eax
   14002fa87:	jmp    rdi
   14002fa89:	out    0xe7,eax
   14002fa8b:	jmp    rdi
   14002fa8d:	out    0xe7,eax
   14002fa8f:	jmp    rdi
   14002fa91:	out    0xe7,eax
   14002fa93:	jmp    rdi
   14002fa95:	out    0xe7,eax
   14002fa97:	jmp    rdi
   14002fa99:	out    0xe7,eax
   14002fa9b:	jmp    rdi
   14002fa9d:	out    0xe7,eax
   14002fa9f:	jmp    rdi
   14002faa1:	out    0xe7,eax
   14002faa3:	jmp    rdi
   14002faa5:	out    0xe7,eax
   14002faa7:	jmp    rsi
   14002faa9:	out    0xe6,al
   14002faab:	inc    esp
   14002faad:	sar    DWORD PTR [rbx+0x778792ff],0xff
   14002fab4:	jae    0x14002fb13
   14002fab6:	xor    BYTE PTR ds:[rsi+0x60],0x42
   14002fabb:	(bad)  
   14002fabc:	retf   0xc2c7
   14002fabf:	(bad)  
   14002fac0:	(bad)  
   14002fac1:	(bad)  
   14002fac2:	(bad)  
   14002fac3:	(bad)  
   14002fac4:	in     eax,dx
   14002fac5:	in     eax,dx
   14002fac6:	in     eax,dx
   14002fac7:	(bad)  
   14002fac8:	out    dx,eax
   14002fac9:	out    dx,eax
   14002faca:	out    dx,eax
   14002facb:	(bad)  
   14002facc:	out    dx,eax
   14002facd:	out    dx,eax
   14002face:	out    dx,eax
   14002facf:	(bad)  
   14002fad0:	out    dx,eax
   14002fad1:	out    dx,eax
   14002fad2:	out    dx,eax
   14002fad3:	(bad)  
   14002fad4:	out    dx,eax
   14002fad5:	out    dx,eax
   14002fad6:	out    dx,eax
   14002fad7:	(bad)  
   14002fad8:	out    dx,eax
   14002fad9:	out    dx,eax
   14002fada:	out    dx,eax
   14002fadb:	(bad)  
   14002fadc:	out    dx,eax
   14002fadd:	out    dx,eax
   14002fade:	out    dx,eax
   14002fadf:	(bad)  
   14002fae0:	out    dx,eax
   14002fae1:	out    dx,eax
   14002fae2:	out    dx,eax
   14002fae3:	(bad)  
   14002fae4:	out    dx,eax
   14002fae5:	out    dx,eax
   14002fae6:	out    dx,eax
   14002fae7:	(bad)  
   14002fae8:	out    dx,eax
   14002fae9:	out    dx,eax
   14002faea:	out    dx,eax
   14002faeb:	(bad)  
   14002faec:	out    dx,eax
   14002faed:	out    dx,eax
   14002faee:	out    dx,eax
   14002faef:	(bad)  
   14002faf0:	out    dx,eax
   14002faf1:	out    dx,eax
   14002faf2:	out    dx,eax
   14002faf3:	(bad)  
   14002faf4:	out    dx,eax
   14002faf5:	out    dx,eax
   14002faf6:	out    dx,eax
   14002faf7:	(bad)  
   14002faf8:	out    dx,eax
   14002faf9:	out    dx,eax
   14002fafa:	out    dx,eax
   14002fafb:	(bad)  
   14002fafc:	out    dx,eax
   14002fafd:	out    dx,eax
   14002fafe:	out    dx,eax
   14002faff:	(bad)  
   14002fb00:	out    dx,eax
   14002fb01:	out    dx,eax
   14002fb02:	out    dx,eax
   14002fb03:	(bad)  
   14002fb04:	out    dx,eax
   14002fb05:	out    dx,eax
   14002fb06:	out    dx,eax
   14002fb07:	(bad)  
   14002fb08:	in     eax,dx
   14002fb09:	in     eax,dx
   14002fb0a:	in     eax,dx
   14002fb0b:	(bad)  
   14002fb0c:	(bad)  
   14002fb0d:	(bad)  
   14002fb0e:	(bad)  
   14002fb0f:	dec    edx
   14002fb11:	mov    edx,0x426076ff
   14002fb17:	(bad)  
   14002fb18:	jp     0x14002fb7e
   14002fb1a:	rex.RX (bad) 
   14002fb1c:	(bad)  
   14002fb1e:	fdiv   st(7),st
   14002fb20:	jmp    0x12c02e50e
   14002fb25:	jmp    0x14002fb12
   14002fb27:	(bad)  
   14002fb28:	(bad)  
   14002fb29:	(bad)  
   14002fb2a:	(bad)  
   14002fb2b:	jmp    rsi
   14002fb2d:	out    0xe6,al
   14002fb2f:	jmp    rbp
   14002fb31:	in     eax,0xe5
   14002fb33:	jmp    rsp
   14002fb35:	in     al,0xe4
   14002fb37:	jmp    rsp
   14002fb39:	in     al,0xe4
   14002fb3b:	jmp    rsp
   14002fb3d:	in     al,0xe4
   14002fb3f:	jmp    rsp
   14002fb41:	in     al,0xe4
   14002fb43:	jmp    rsp
   14002fb45:	in     al,0xe4
   14002fb47:	jmp    rsp
   14002fb49:	in     al,0xe4
   14002fb4b:	jmp    rsp
   14002fb4d:	in     al,0xe4
   14002fb4f:	jmp    rsp
   14002fb51:	in     al,0xe4
   14002fb53:	jmp    rbp
   14002fb55:	in     eax,0xe5
   14002fb57:	jmp    rsi
   14002fb59:	out    0xe6,al
   14002fb5b:	(bad)  
   14002fb5c:	(bad)  
   14002fb5d:	(bad)  
   14002fb5e:	(bad)  
   14002fb5f:	(bad)  
   14002fb60:	jmp    0x14002fb4d
   14002fb62:	jmp    0x14002fb63
   14002fb64:	jmp    0x14002fb51
   14002fb66:	jmp    0x14002fb67
   14002fb68:	jmp    0x14002fb55
   14002fb6a:	jmp    0x14002fb6b
   14002fb6c:	jmp    0x11d02e55a
   14002fb71:	(bad)  
   14002fb73:	(bad)  
   14002fb74:	jp     0x14002fbda
   14002fb76:	rex.RX (bad) 
   14002fb78:	jge    0x14002fbe2
   14002fb7a:	rex.WX (bad) 
   14002fb7c:	(bad)  
   14002fb7e:	fcos   
   14002fb80:	out    0xe7,eax
   14002fb82:	out    0xff,eax
   14002fb84:	out    0xe6,al
   14002fb86:	out    0xff,al
   14002fb88:	loope  0x14002fb6b
   14002fb8a:	loope  0x14002fb8b
   14002fb8c:	ret    0xa8b6
   14002fb8f:	jmp    FWORD PTR [rax-0x6300866d]
   14002fb95:	and    DWORD PTR [rbx-0x1],0xffffff9a
   14002fb99:	sbb    BYTE PTR [rdi-0x1],0x9a
   14002fb9d:	sbb    BYTE PTR [rdi-0x1],0x9a
   14002fba1:	sbb    BYTE PTR [rdi-0x1],0x9a
   14002fba5:	sbb    BYTE PTR [rdi-0x1],0x9a
   14002fba9:	sbb    BYTE PTR [rdi-0x1],0x9a
   14002fbad:	sbb    BYTE PTR [rdi-0x1],0x9c
   14002fbb1:	and    DWORD PTR [rbx-0x1],0xffffffa8
   14002fbb5:	xchg   ebx,eax
   14002fbb6:	jns    0x14002fbb7
   14002fbb8:	ret    0xa8b6
   14002fbbb:	jmp    rcx
   14002fbbd:	loope  0x14002fba0
   14002fbbf:	jmp    rsi
   14002fbc1:	out    0xe6,al
   14002fbc3:	jmp    rdi
   14002fbc5:	out    0xe7,eax
   14002fbc7:	jmp    rdi
   14002fbc9:	out    0xe7,eax
   14002fbcb:	jmp    rdi
   14002fbcd:	out    0xe7,eax
   14002fbcf:	(bad)  
   14002fbd0:	(bad)  
   14002fbd2:	fcos   
   14002fbd4:	jge    0x14002fc3e
   14002fbd6:	rex.WX inc QWORD PTR [rdx-0x2800b094]
   14002fbdd:	xlat   BYTE PTR ds:[rbx]
   14002fbde:	xlat   BYTE PTR ds:[rbx]
   14002fbdf:	jmp    rbp
   14002fbe1:	in     eax,0xe5
   14002fbe3:	(bad)  
   14002fbe4:	(bad)  
   14002fbe6:	(bad)  
   14002fbe8:	mov    edi,0x9effa5b4
   14002fbed:	xchg   DWORD PTR [rdx-0x1],ebp
   14002fbf0:	lods   eax,DWORD PTR ds:[rsi]
   14002fbf1:	fwait
   14002fbf2:	test   edi,edi
   14002fbf4:	mov    edi,0xd7ffaab6
   14002fbf9:	xlat   BYTE PTR ds:[rbx]
   14002fbfa:	xlat   BYTE PTR ds:[rbx]
   14002fbfb:	call   rdi
   14002fbfd:	xlat   BYTE PTR ds:[rbx]
   14002fbfe:	xlat   BYTE PTR ds:[rbx]
   14002fbff:	call   rdi
   14002fc01:	xlat   BYTE PTR ds:[rbx]
   14002fc02:	xlat   BYTE PTR ds:[rbx]
   14002fc03:	call   rdi
   14002fc05:	xlat   BYTE PTR ds:[rbx]
   14002fc06:	xlat   BYTE PTR ds:[rbx]
   14002fc07:	call   rdi
   14002fc09:	xlat   BYTE PTR ds:[rbx]
   14002fc0a:	xlat   BYTE PTR ds:[rbx]
   14002fc0b:	(bad)  
   14002fc0c:	fcomp  st(0)
   14002fc0e:	fdivr  st,st(7)
   14002fc10:	shl    BYTE PTR [rsi-0x64520056],0x85
   14002fc17:	call   FWORD PTR [rsi-0x40009579]
   14002fc1d:	mov    ah,0xa5
   14002fc1f:	(bad)  
   14002fc20:	(bad)  
   14002fc22:	(bad)  
   14002fc24:	in     eax,0xe5
   14002fc26:	in     eax,0xff
   14002fc28:	in     eax,0xe5
   14002fc2a:	in     eax,0xff
   14002fc2c:	in     eax,0xe5
   14002fc2e:	in     eax,0xff
   14002fc30:	xlat   BYTE PTR ds:[rbx]
   14002fc31:	xlat   BYTE PTR ds:[rbx]
   14002fc32:	xlat   BYTE PTR ds:[rbx]
   14002fc33:	inc    DWORD PTR [rdx-0x7900b094]
   14002fc39:	jno    0x14002fc8f
   14002fc3b:	call   rsi
   14002fc3d:	(bad)  
   14002fc3e:	(bad)  
   14002fc3f:	jmp    rsp
   14002fc41:	in     al,0xe4
   14002fc43:	jmp    rdx
   14002fc45:	loop   0x14002fc29
   14002fc47:	(bad)  
   14002fc48:	(bad)  
   14002fc4a:	fdiv   st(7),st
   14002fc4c:	fcmovu st,st(2)
   14002fc4e:	(bad)  
   14002fc50:	fcomp  st(0)
   14002fc52:	fdivr  st,st(7)
   14002fc54:	xlat   BYTE PTR ds:[rbx]
   14002fc55:	xlat   BYTE PTR ds:[rbx]
   14002fc56:	xlat   BYTE PTR ds:[rbx]
   14002fc57:	jmp    QWORD PTR [rdi-0x6700826c]
   14002fc5d:	and    BYTE PTR [rcx-0x1],0x93
   14002fc61:	jns    0x14002fcbb
   14002fc63:	call   QWORD PTR [rbx-0x6500a787]
   14002fc69:	and    DWORD PTR [rsi-0x1],0xffffffd7
   14002fc6d:	xlat   BYTE PTR ds:[rbx]
   14002fc6e:	xlat   BYTE PTR ds:[rbx]
   14002fc6f:	call   rdi
   14002fc71:	xlat   BYTE PTR ds:[rbx]
   14002fc72:	xlat   BYTE PTR ds:[rbx]
   14002fc73:	call   rdi
   14002fc75:	xlat   BYTE PTR ds:[rbx]
   14002fc76:	xlat   BYTE PTR ds:[rbx]
   14002fc77:	(bad)  
   14002fc78:	(bad)  
   14002fc7a:	fcos   
   14002fc7c:	(bad)  
   14002fc7e:	fdiv   st(7),st
   14002fc80:	loop   0x14002fc64
   14002fc82:	loop   0x14002fc83
   14002fc84:	in     al,0xe4
   14002fc86:	in     al,0xff
   14002fc88:	in     al,0xe4
   14002fc8a:	in     al,0xff
   14002fc8c:	in     al,0xe4
   14002fc8e:	in     al,0xff
   14002fc90:	(bad)  
   14002fc91:	(bad)  
   14002fc92:	(bad)  
   14002fc93:	inc    DWORD PTR [rsi-0x7500ab8f]
   14002fc99:	jne    0x14002fcf4
   14002fc9b:	(bad)  
   14002fc9c:	fcomp  st(0)
   14002fc9e:	fdivr  st,st(7)
   14002fca0:	out    0xe6,al
   14002fca2:	out    0xff,al
   14002fca4:	in     eax,0xe5
   14002fca6:	in     eax,0xff
   14002fca8:	jrcxz  0x14002fc8d
   14002fcaa:	jrcxz  0x14002fcab
   14002fcac:	loope  0x14002fc8f
   14002fcae:	loope  0x14002fcaf
   14002fcb0:	fstp   st(5)
   14002fcb2:	(bad)  
   14002fcb4:	fcmovu st,st(2)
   14002fcb6:	(bad)  
   14002fcb8:	mov    al,0xa2
   14002fcba:	(bad)  
   14002fcbb:	(bad)  
   14002fcbc:	mov    esi,0xd4ffaab6
   14002fcc1:	(bad)  
   14002fcc2:	(bad)  
   14002fcc3:	call   rbp
   14002fcc5:	(bad)  
   14002fcc6:	(bad)  
   14002fcc7:	dec    esp
   14002fcc9:	enter  0xffc3,0xce
   14002fccd:	retf   0xffc5
   14002fcd0:	lods   al,BYTE PTR ds:[rsi]
   14002fcd1:	fwait
   14002fcd2:	test   edi,edi
   14002fcd4:	mov    ebp,0xdcffa4b2
   14002fcd9:	(bad)  
   14002fcdb:	jmp    rax
   14002fcdd:	loopne 0x14002fcbf
   14002fcdf:	jmp    rbp
   14002fce1:	in     eax,0xe5
   14002fce3:	jmp    rsi
   14002fce5:	out    0xe6,al
   14002fce7:	jmp    rsi
   14002fce9:	out    0xe6,al
   14002fceb:	jmp    rsi
   14002fced:	out    0xe6,al
   14002fcef:	(bad)  
   14002fcf0:	fcomp  st(0)
   14002fcf2:	fdivr  st,st(7)
   14002fcf4:	mov    dh,BYTE PTR [rbp+0x59]
   14002fcf7:	dec    DWORD PTR [rdi-0x2500a186]
   14002fcfd:	fcmovu st,st(2)
   14002fcff:	(bad)  
   14002fd00:	call   0x12802e5ed
   14002fd05:	out    0xe7,eax
   14002fd07:	jmp    rdi
   14002fd09:	out    0xe7,eax
   14002fd0b:	jmp    rsi
   14002fd0d:	out    0xe6,al
   14002fd0f:	(bad)  
   14002fd10:	(bad)  
   14002fd12:	(bad)  
   14002fd14:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002fd15:	xchg   ecx,eax
   14002fd16:	js     0x14002fd17
   14002fd18:	fwait
   14002fd19:	test   BYTE PTR [rsi-0x1],ah
   14002fd1c:	xchg   ebx,eax
   14002fd1d:	jns    0x14002fd77
   14002fd1f:	call   FWORD PTR [rax-0x67009e80]
   14002fd25:	and    BYTE PTR [rcx-0x1],0x93
   14002fd29:	jns    0x14002fd83
   14002fd2b:	call   FWORD PTR [rbx-0x2300997c]
   14002fd31:	(bad)  
   14002fd33:	call   QWORD PTR [rsi-0x5200a183]
   14002fd39:	pushf  
   14002fd3a:	xchg   edi,edi
   14002fd3c:	loopne 0x14002fd1e
   14002fd3e:	loopne 0x14002fd3f
   14002fd40:	in     al,0xe4
   14002fd42:	in     al,0xff
   14002fd44:	call   0x12902e631
   14002fd49:	call   0x128ebfd36
   14002fd4e:	call   0x11addd852
   14002fd53:	dec    DWORD PTR [rdi-0x6b00a186]
   14002fd59:	jg     0x14002fdbf
   14002fd5b:	(bad)  
   14002fd5c:	fcmovnu st,st(3)
   14002fd5e:	(bad)  
   14002fd60:	jmp    0x12a02e74e
   14002fd65:	jmp    0x129ecfd53
   14002fd6a:	jmp    0x123e6e16e
   14002fd6f:	jmp    rax
   14002fd71:	loopne 0x14002fd53
   14002fd73:	push   QWORD PTR [rbx-0x3f006d5c]
   14002fd79:	mov    ecx,0xd7d7ffad
   14002fd7e:	xlat   BYTE PTR ds:[rbx]
   14002fd7f:	call   rdi
   14002fd81:	xlat   BYTE PTR ds:[rbx]
   14002fd82:	xlat   BYTE PTR ds:[rbx]
   14002fd83:	(bad)  
   14002fd84:	fcomp  st(0)
   14002fd86:	fdivr  st,st(7)
   14002fd88:	(bad)  
   14002fd8a:	fcos   
   14002fd8c:	ror    ah,1
   14002fd8e:	(bad)  
   14002fd8f:	call   rcx
   14002fd91:	int3   
   14002fd92:	(bad)  
   14002fd93:	(bad)  
   14002fd94:	(bad)  
   14002fd96:	fdiv   st(7),st
   14002fd98:	cwde   
   14002fd99:	jg     0x14002fdfb
   14002fd9b:	jmp    FWORD PTR [rdi-0x1d007762]
   14002fda1:	loop   0x14002fd85
   14002fda3:	(bad)  
   14002fda4:	call   0x12a02e691
   14002fda9:	jmp    0x129ecfd97
   14002fdae:	jmp    0x11bded9b2
   14002fdb3:	call   QWORD PTR [rdi+rdi*2-0x7b66009c]
   14002fdba:	imul   edi,edi,0xffdddddd
   14002fdc0:	in     al,dx
   14002fdc1:	in     al,dx
   14002fdc2:	in     al,dx
   14002fdc3:	(bad)  
   14002fdc4:	in     al,dx
   14002fdc5:	in     al,dx
   14002fdc6:	in     al,dx
   14002fdc7:	(bad)  
   14002fdc8:	jmp    0x14002fdb5
   14002fdca:	jmp    0x14002fdcb
   14002fdcc:	in     eax,0xe5
   14002fdce:	in     eax,0xff
   14002fdd0:	movabs eax,ds:0x97ff5c7c95ff6f8a
   14002fdd9:	jg     0x14002fe3a
   14002fddb:	call   FWORD PTR [rbp-0x6200967a]
   14002fde1:	xchg   BYTE PTR [rcx-0x1],ch
   14002fde4:	popf   
   14002fde5:	xchg   BYTE PTR [rcx-0x1],ch
   14002fde8:	xchg   ebp,eax
   14002fde9:	jl     0x14002fe47
   14002fdeb:	call   FWORD PTR [rbp-0x4700957a]
   14002fdf1:	stos   BYTE PTR es:[rdi],al
   14002fdf2:	cwde   
   14002fdf3:	(bad)  
   14002fdf4:	(bad)  
   14002fdf6:	fdivp  st(7),st
   14002fdf8:	xchg   ebp,eax
   14002fdf9:	jl     0x14002fe57
   14002fdfb:	push   QWORD PTR [rax-0x1b007661]
   14002fe01:	in     al,0xe4
   14002fe03:	(bad)  
   14002fe04:	jmp    0x14002fdf1
   14002fe06:	jmp    0x14002fe07
   14002fe08:	in     al,dx
   14002fe09:	in     al,dx
   14002fe0a:	in     al,dx
   14002fe0b:	(bad)  
   14002fe0c:	in     al,dx
   14002fe0d:	in     al,dx
   14002fe0e:	in     al,dx
   14002fe0f:	(bad)  
   14002fe10:	fstp   st(5)
   14002fe12:	(bad)  
   14002fe14:	cdq    
   14002fe15:	test   BYTE PTR [rcx-0x1],ch
   14002fe18:	popf   
   14002fe19:	mov    DWORD PTR [rdi-0x1],ebp
   14002fe1c:	loopne 0x14002fdfe
   14002fe1e:	loopne 0x14002fe1f
   14002fe20:	out    dx,eax
   14002fe21:	out    dx,eax
   14002fe22:	out    dx,eax
   14002fe23:	(bad)  
   14002fe24:	out    dx,eax
   14002fe25:	out    dx,eax
   14002fe26:	out    dx,eax
   14002fe27:	(bad)  
   14002fe28:	out    dx,al
   14002fe29:	out    dx,al
   14002fe2a:	out    dx,al
   14002fe2b:	jmp    rdi
   14002fe2d:	out    0xe7,eax
   14002fe2f:	jmp    rsp
   14002fe31:	in     al,0xe4
   14002fe33:	(bad)  
   14002fe34:	mov    ebx,0xc1ff9eae
   14002fe39:	mov    eax,0xdfdfffab
   14002fe3e:	(bad)  
   14002fe40:	xchg   esp,eax
   14002fe41:	mov    ecx,0xae80ffe3
   14002fe46:	jrcxz  0x14002fe47
   14002fe48:	ins    DWORD PTR es:[rdi],dx
   14002fe49:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002fe4a:	jrcxz  0x14002fe4b
   14002fe4c:	loop   0x14002fe30
   14002fe4e:	loop   0x14002fe4f
   14002fe50:	jrcxz  0x14002fe35
   14002fe52:	jrcxz  0x14002fe53
   14002fe54:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002fe55:	xchg   ecx,eax
   14002fe56:	ja     0x14002fe57
   14002fe58:	mov    cl,0xa1
   14002fe5a:	mov    edi,?
   14002fe5c:	in     al,0xe4
   14002fe5e:	in     al,0xff
   14002fe60:	jmp    0x12f02e84e
   14002fe65:	out    dx,al
   14002fe66:	out    dx,al
   14002fe67:	(bad)  
   14002fe68:	out    dx,eax
   14002fe69:	out    dx,eax
   14002fe6a:	out    dx,eax
   14002fe6b:	(bad)  
   14002fe6c:	out    dx,eax
   14002fe6d:	out    dx,eax
   14002fe6e:	out    dx,eax
   14002fe6f:	jmp    rax
   14002fe71:	loopne 0x14002fe53
   14002fe73:	call   FWORD PTR [rbp-0x5d009077]
   14002fe79:	mov    ?,WORD PTR [rdi+rdi*8-0x1e]
   14002fe7d:	loop   0x14002fe61
   14002fe7f:	push   rcx
   14002fe81:	icebp  
   14002fe82:	icebp  
   14002fe83:	push   rcx
   14002fe85:	icebp  
   14002fe86:	icebp  
   14002fe87:	push   rax
   14002fe89:	lock lock (bad) 
   14002fe8c:	out    dx,eax
   14002fe8d:	out    dx,eax
   14002fe8e:	out    dx,eax
   14002fe8f:	(bad)  
   14002fe90:	jmp    0x14002fe7d
   14002fe92:	jmp    0x14002fe93
   14002fe94:	out    0xe6,al
   14002fe96:	out    0xff,al
   14002fe98:	in     al,0xe4
   14002fe9a:	in     al,0xff
   14002fe9c:	jb     0x14002fe48
   14002fe9e:	out    0xff,al
   14002fea0:	xor    eax,0x3fffe88a
   14002fea5:	(bad)  
   14002fea6:	out    0xff,eax
   14002fea8:	jae    0x14002fe55
   14002feaa:	out    0xff,eax
   14002feac:	out    0xe6,al
   14002feae:	out    0xff,al
   14002feb0:	call   0x12702e79d
   14002feb5:	out    0xe6,al
   14002feb7:	jmp    rsi
   14002feb9:	out    0xe6,al
   14002febb:	(bad)  
   14002febc:	(bad)  
   14002febd:	(bad)  
   14002febe:	(bad)  
   14002febf:	(bad)  
   14002fec0:	out    dx,al
   14002fec1:	out    dx,al
   14002fec2:	out    dx,al
   14002fec3:	push   rax
   14002fec5:	lock lock push rcx
   14002fec9:	icebp  
   14002feca:	icebp  
   14002fecb:	push   rcx
   14002fecd:	icebp  
   14002fece:	icebp  
   14002fecf:	jmp    rdx
   14002fed1:	loop   0x14002feb5
   14002fed3:	jmp    QWORD PTR [rdx-0x58008b72]
   14002fed9:	xchg   ebx,eax
   14002feda:	jp     0x14002fedb
   14002fedc:	jrcxz  0x14002fec1
   14002fede:	jrcxz  0x14002fedf
   14002fee0:	repz repz repz push rbx
   14002fee5:	repz repz push rbx
   14002fee9:	repz repz push rdx
   14002feed:	repnz repnz push rax
   14002fef1:	lock lock (bad) 
   14002fef4:	out    dx,al
   14002fef5:	out    dx,al
   14002fef6:	out    dx,al
   14002fef7:	jmp    rdi
   14002fef9:	out    0xe7,eax
   14002fefb:	(bad)  
   14002fefc:	cmp    cl,BYTE PTR [rsi-0x548a0018]
   14002ff02:	in     eax,0xff
   14002ff04:	(bad)  
   14002ff05:	jl     0x14002fef0
   14002ff07:	jmp    rbp
   14002ff09:	in     eax,0xe5
   14002ff0b:	(bad)  
   14002ff0c:	call   0x13002e7f9
   14002ff11:	out    dx,eax
   14002ff12:	out    dx,eax
   14002ff13:	(bad)  
   14002ff14:	out    dx,eax
   14002ff15:	out    dx,eax
   14002ff16:	out    dx,eax
   14002ff17:	(bad)  
   14002ff18:	out    dx,eax
   14002ff19:	out    dx,eax
   14002ff1a:	out    dx,eax
   14002ff1b:	push   rax
   14002ff1d:	lock lock push rdx
   14002ff21:	repnz repnz push rbx
   14002ff25:	repz repz push rbx
   14002ff29:	repz repz push rbx
   14002ff2d:	repz repz jmp rbx
   14002ff31:	jrcxz  0x14002ff16
   14002ff33:	jmp    QWORD PTR [rdi-0x5300856d]
   14002ff39:	cwde   
   14002ff3a:	jg     0x14002ff3b
   14002ff3c:	in     eax,0xe5
   14002ff3e:	in     eax,0xff
   14002ff40:	cmc    
   14002ff41:	cmc    
   14002ff42:	cmc    
   14002ff43:	push   rbp
   14002ff45:	cmc    
   14002ff46:	cmc    
   14002ff47:	push   rbp
   14002ff49:	cmc    
   14002ff4a:	cmc    
   14002ff4b:	push   rbp
   14002ff4d:	cmc    
   14002ff4e:	cmc    
   14002ff4f:	push   rbp
   14002ff51:	cmc    
   14002ff52:	cmc    
   14002ff53:	push   rdx
   14002ff55:	repnz repnz (bad) 
   14002ff58:	(bad)  
   14002ff59:	(bad)  
   14002ff5a:	(bad)  
   14002ff5b:	call   FWORD PTR [rip+0x58ffe97f]        # 0x19902e8e0
   14002ff61:	sahf   
   14002ff62:	call   0x127bf9466
   14002ff67:	call   FWORD PTR [rip+0xffffffffebffe97f]        # 0x12c02e8ec
   14002ff6d:	jmp    0x14002ff5a
   14002ff6f:	(bad)  
   14002ff70:	out    dx,al
   14002ff71:	out    dx,al
   14002ff72:	out    dx,al
   14002ff73:	push   rbx
   14002ff75:	repz repz push rsp
   14002ff79:	hlt    
   14002ff7a:	hlt    
   14002ff7b:	push   rsp
   14002ff7d:	hlt    
   14002ff7e:	hlt    
   14002ff7f:	push   rbp
   14002ff81:	cmc    
   14002ff82:	cmc    
   14002ff83:	push   rbp
   14002ff85:	cmc    
   14002ff86:	cmc    
   14002ff87:	push   rbp
   14002ff89:	cmc    
   14002ff8a:	cmc    
   14002ff8b:	push   rbp
   14002ff8d:	cmc    
   14002ff8e:	cmc    
   14002ff8f:	jmp    rbp
   14002ff91:	in     eax,0xe5
   14002ff93:	jmp    FWORD PTR [rax+rbx*4-0x634f0081]
   14002ff9a:	test   bh,bh
   14002ff9c:	out    0xe7,eax
   14002ff9e:	out    0xff,eax
   14002ffa0:	div    edi
   14002ffa2:	idiv   edi
   14002ffa4:	div    edi
   14002ffa6:	idiv   edi
   14002ffa8:	div    edi
   14002ffaa:	idiv   edi
   14002ffac:	div    edi
   14002ffae:	idiv   edi
   14002ffb0:	div    edi
   14002ffb2:	idiv   edi
   14002ffb4:	cmc    
   14002ffb5:	cmc    
   14002ffb6:	cmc    
   14002ffb7:	(bad)  
   14002ffb8:	in     eax,dx
   14002ffb9:	in     eax,dx
   14002ffba:	in     eax,dx
   14002ffbb:	call   FWORD PTR [rcx+0x23ffe9bf]
   14002ffc1:	sub    edx,0xffffffff
   14002ffc4:	out    0xe7,eax
   14002ffc6:	out    0xff,eax
   14002ffc8:	xchg   DWORD PTR [rsi-0x76d00017],esi
   14002ffce:	(bad)  
   14002ffcf:	call   QWORD PTR [rsi-0xd001240]
   14002ffd5:	repnz repnz push rdi
   14002ffd9:	div    edi
   14002ffdb:	push   rdi
   14002ffdd:	div    edi
   14002ffdf:	push   rdi
   14002ffe1:	div    edi
   14002ffe3:	push   rdi
   14002ffe5:	div    edi
   14002ffe7:	push   rdi
   14002ffe9:	div    edi
   14002ffeb:	push   rdi
   14002ffed:	div    edi
   14002ffef:	jmp    rdi
   14002fff1:	out    0xe7,eax
   14002fff3:	push   QWORD PTR [rax-0x4b007b64]
   14002fff9:	movabs eax,ds:0xf9f9ffe9e9e9ff89
   140030002:	stc    
   140030003:	(bad)  
   140030004:	stc    
   140030005:	stc    
   140030006:	stc    
   140030007:	(bad)  
   140030008:	stc    
   140030009:	stc    
   14003000a:	stc    
   14003000b:	(bad)  
   14003000c:	stc    
   14003000d:	stc    
   14003000e:	stc    
   14003000f:	(bad)  
   140030010:	stc    
   140030011:	stc    
   140030012:	stc    
   140030013:	(bad)  
   140030014:	clc    
   140030015:	clc    
   140030016:	clc    
   140030017:	push   rbp
   140030019:	cmc    
   14003001a:	cmc    
   14003001b:	(bad)  
   14003001c:	out    dx,al
   14003001d:	out    dx,al
   14003001e:	out    dx,al
   14003001f:	dec    DWORD PTR [rbp+0x2effebba]
   140030025:	mov    ebx,ebp
   140030027:	(bad)  
   140030028:	jmp    0x140030015
   14003002a:	jmp    0x14003002b
   14003002c:	xchg   DWORD PTR [rdi-0xe0e0014],esi
   140030032:	icebp  
   140030033:	push   rdi
   140030035:	div    edi
   140030037:	(bad)  
   140030038:	stc    
   140030039:	stc    
   14003003a:	stc    
   14003003b:	(bad)  
   14003003c:	stc    
   14003003d:	stc    
   14003003e:	stc    
   14003003f:	(bad)  
   140030040:	stc    
   140030041:	stc    
   140030042:	stc    
   140030043:	(bad)  
   140030044:	stc    
   140030045:	stc    
   140030046:	stc    
   140030047:	(bad)  
   140030048:	stc    
   140030049:	stc    
   14003004a:	stc    
   14003004b:	(bad)  
   14003004c:	stc    
   14003004d:	stc    
   14003004e:	stc    
   14003004f:	(bad)  
   140030050:	jmp    0xf502ea3e
   140030055:	movabs eax,ds:0xebebff8ea5b9ff89
   14003005e:	jmp    0x14003005f
   140030060:	sti    
   140030061:	sti    
   140030062:	sti    
   140030063:	(bad)  
   140030064:	sti    
   140030065:	sti    
   140030066:	sti    
   140030067:	(bad)  
   140030068:	sti    
   140030069:	sti    
   14003006a:	sti    
   14003006b:	(bad)  
   14003006c:	sti    
   14003006d:	sti    
   14003006e:	sti    
   14003006f:	(bad)  
   140030070:	sti    
   140030071:	sti    
   140030072:	sti    
   140030073:	(bad)  
   140030074:	cli    
   140030075:	cli    
   140030076:	cli    
   140030077:	(bad)  
   140030078:	clc    
   140030079:	clc    
   14003007a:	clc    
   14003007b:	push   rsp
   14003007d:	hlt    
   14003007e:	hlt    
   14003007f:	push   rax
   140030081:	lock lock call QWORD PTR [rax+0x3dffedbd]
   140030089:	xchg   ecx,eax
   14003008a:	in     eax,dx
   14003008b:	push   rcx
   14003008d:	icebp  
   14003008e:	icebp  
   14003008f:	push   rbp
   140030091:	cmc    
   140030092:	cmc    
   140030093:	(bad)  
   140030094:	stc    
   140030095:	stc    
   140030096:	stc    
   140030097:	(bad)  
   140030098:	sti    
   140030099:	sti    
   14003009a:	sti    
   14003009b:	(bad)  
   14003009c:	sti    
   14003009d:	sti    
   14003009e:	sti    
   14003009f:	(bad)  
   1400300a0:	sti    
   1400300a1:	sti    
   1400300a2:	sti    
   1400300a3:	(bad)  
   1400300a4:	sti    
   1400300a5:	sti    
   1400300a6:	sti    
   1400300a7:	(bad)  
   1400300a8:	sti    
   1400300a9:	sti    
   1400300aa:	sti    
   1400300ab:	(bad)  
   1400300ac:	sti    
   1400300ad:	sti    
   1400300ae:	sti    
   1400300af:	(bad)  
   1400300b0:	jmp    0x14003009d
   1400300b2:	jmp    0x1400300b3
   1400300b4:	mov    ecx,0xbcff8ea5
   1400300b9:	test   eax,0xececff92
   1400300be:	in     al,dx
   1400300bf:	(bad)  
   1400300c0:	cld    
   1400300c1:	cld    
   1400300c2:	cld    
   1400300c3:	(bad)  
   1400300c4:	cld    
   1400300c5:	cld    
   1400300c6:	cld    
   1400300c7:	(bad)  
   1400300c8:	cld    
   1400300c9:	cld    
   1400300ca:	cld    
   1400300cb:	(bad)  
   1400300cc:	cld    
   1400300cd:	cld    
   1400300ce:	cld    
   1400300cf:	(bad)  
   1400300d0:	cld    
   1400300d1:	cld    
   1400300d2:	cld    
   1400300d3:	(bad)  
   1400300d4:	cld    
   1400300d5:	cld    
   1400300d6:	cld    
   1400300d7:	(bad)  
   1400300d8:	sti    
   1400300d9:	sti    
   1400300da:	sti    
   1400300db:	(bad)  
   1400300dc:	stc    
   1400300dd:	stc    
   1400300de:	stc    
   1400300df:	push   rbp
   1400300e1:	cmc    
   1400300e2:	cmc    
   1400300e3:	inc    esp
   1400300e5:	(bad)  
   1400300e7:	call   QWORD PTR [rax-0xb000f43]
   1400300ed:	hlt    
   1400300ee:	hlt    
   1400300ef:	(bad)  
   1400300f0:	stc    
   1400300f1:	stc    
   1400300f2:	stc    
   1400300f3:	(bad)  
   1400300f4:	sti    
   1400300f5:	sti    
   1400300f6:	sti    
   1400300f7:	(bad)  
   1400300f8:	cld    
   1400300f9:	cld    
   1400300fa:	cld    
   1400300fb:	(bad)  
   1400300fc:	cld    
   1400300fd:	cld    
   1400300fe:	cld    
   1400300ff:	(bad)  
   140030100:	cld    
   140030101:	cld    
   140030102:	cld    
   140030103:	(bad)  
   140030104:	cld    
   140030105:	cld    
   140030106:	cld    
   140030107:	(bad)  
   140030108:	cld    
   140030109:	cld    
   14003010a:	cld    
   14003010b:	(bad)  
   14003010c:	cld    
   14003010d:	cld    
   14003010e:	cld    
   14003010f:	(bad)  
   140030110:	in     al,dx
   140030111:	in     al,dx
   140030112:	in     al,dx
   140030113:	(bad)  
   140030114:	mov    esp,0xc0ff92a9
   140030119:	lods   eax,DWORD PTR ds:[rsi]
   14003011a:	xchg   esi,eax
   14003011b:	(bad)  
   14003011c:	in     eax,dx
   14003011d:	in     eax,dx
   14003011e:	in     eax,dx
   14003011f:	(bad)  
   140030120:	cld    
   140030121:	cld    
   140030122:	cld    
   140030123:	(bad)  
   140030124:	std    
   140030125:	std    
   140030126:	std    
   140030127:	(bad)  
   140030128:	std    
   140030129:	std    
   14003012a:	std    
   14003012b:	(bad)  
   14003012c:	std    
   14003012d:	std    
   14003012e:	std    
   14003012f:	(bad)  
   140030130:	std    
   140030131:	std    
   140030132:	std    
   140030133:	(bad)  
   140030134:	std    
   140030135:	std    
   140030136:	std    
   140030137:	(bad)  
   140030138:	std    
   140030139:	std    
   14003013a:	std    
   14003013b:	(bad)  
   14003013c:	std    
   14003013d:	std    
   14003013e:	std    
   14003013f:	(bad)  
   140030140:	sti    
   140030141:	sti    
   140030142:	sti    
   140030143:	push   rdi
   140030145:	div    edi
   140030147:	push   rsi
   140030149:	div    dh
   14003014b:	(bad)  
   14003014c:	clc    
   14003014d:	clc    
   14003014e:	clc    
   14003014f:	(bad)  
   140030150:	cld    
   140030151:	cld    
   140030152:	cld    
   140030153:	(bad)  
   140030154:	std    
   140030155:	std    
   140030156:	std    
   140030157:	(bad)  
   140030158:	std    
   140030159:	std    
   14003015a:	std    
   14003015b:	(bad)  
   14003015c:	std    
   14003015d:	std    
   14003015e:	std    
   14003015f:	(bad)  
   140030160:	std    
   140030161:	std    
   140030162:	std    
   140030163:	(bad)  
   140030164:	std    
   140030165:	std    
   140030166:	std    
   140030167:	(bad)  
   140030168:	std    
   140030169:	std    
   14003016a:	std    
   14003016b:	(bad)  
   14003016c:	cld    
   14003016d:	cld    
   14003016e:	cld    
   14003016f:	(bad)  
   140030170:	in     eax,dx
   140030171:	in     eax,dx
   140030172:	in     eax,dx
   140030173:	inc    eax
   140030175:	lods   eax,DWORD PTR ds:[rsi]
   140030176:	xchg   esi,eax
   140030177:	inc    ebx
   140030179:	mov    al,0x9a
   14003017b:	(bad)  
   14003017c:	jrcxz  0x14003015e
   14003017e:	fdiv   st(7),st
   140030180:	cli    
   140030181:	cli    
   140030182:	cli    
   140030183:	(bad)  
   140030184:	std    
   140030185:	std    
   140030186:	std    
   140030187:	(bad)  
   140030188:	(bad)  
   140030189:	(bad)  
   14003018a:	(bad)  
   14003018b:	(bad)  
   14003018c:	(bad)  
   14003018d:	(bad)  
   14003018e:	(bad)  
   14003018f:	(bad)  
   140030190:	(bad)  
   140030191:	(bad)  
   140030192:	(bad)  
   140030193:	(bad)  
   140030194:	(bad)  
   140030195:	(bad)  
   140030196:	(bad)  
   140030197:	(bad)  
   140030198:	(bad)  
   140030199:	(bad)  
   14003019a:	(bad)  
   14003019b:	(bad)  
   14003019c:	(bad)  
   14003019d:	(bad)  
   14003019e:	(bad)  
   14003019f:	(bad)  
   1400301a0:	(bad)  
   1400301a1:	(bad)  
   1400301a2:	(bad)  
   1400301a3:	(bad)  
   1400301a4:	std    
   1400301a5:	std    
   1400301a6:	std    
   1400301a7:	(bad)  
   1400301a8:	cld    
   1400301a9:	cld    
   1400301aa:	cld    
   1400301ab:	(bad)  
   1400301ac:	std    
   1400301ad:	std    
   1400301ae:	std    
   1400301af:	(bad)  
   1400301b0:	(bad)  
   1400301b1:	(bad)  
   1400301b2:	(bad)  
   1400301b3:	(bad)  
   1400301b4:	(bad)  
   1400301b5:	(bad)  
   1400301b6:	(bad)  
   1400301b7:	(bad)  
   1400301b8:	(bad)  
   1400301b9:	(bad)  
   1400301ba:	(bad)  
   1400301bb:	(bad)  
   1400301bc:	(bad)  
   1400301bd:	(bad)  
   1400301be:	(bad)  
   1400301bf:	(bad)  
   1400301c0:	(bad)  
   1400301c1:	(bad)  
   1400301c2:	(bad)  
   1400301c3:	(bad)  
   1400301c4:	(bad)  
   1400301c5:	(bad)  
   1400301c6:	(bad)  
   1400301c7:	(bad)  
   1400301c8:	std    
   1400301c9:	std    
   1400301ca:	std    
   1400301cb:	(bad)  
   1400301cc:	cli    
   1400301cd:	cli    
   1400301ce:	cli    
   1400301cf:	jmp    rbx
   1400301d1:	loopne 0x1400301af
   1400301d3:	inc    ebx
   1400301d5:	mov    al,0x9a
   1400301d7:	(bad)  
   1400301d8:	(bad)  
   1400301d9:	mov    bl,0x9e
   1400301db:	adc    dl,0xc9
   1400301de:	mov    esi,0xe8ebedff
   1400301e3:	(bad)  
   1400301e4:	clc    
   1400301e5:	clc    
   1400301e6:	clc    
   1400301e7:	(bad)  
   1400301e8:	cli    
   1400301e9:	cli    
   1400301ea:	cli    
   1400301eb:	(bad)  
   1400301ec:	cli    
   1400301ed:	cli    
   1400301ee:	cli    
   1400301ef:	(bad)  
   1400301f0:	cli    
   1400301f1:	cli    
   1400301f2:	cli    
   1400301f3:	(bad)  
   1400301f4:	cli    
   1400301f5:	cli    
   1400301f6:	cli    
   1400301f7:	(bad)  
   1400301f8:	cli    
   1400301f9:	cli    
   1400301fa:	cli    
   1400301fb:	(bad)  
   1400301fc:	cli    
   1400301fd:	cli    
   1400301fe:	cli    
   1400301ff:	(bad)  
   140030200:	cli    
   140030201:	cli    
   140030202:	cli    
   140030203:	(bad)  
   140030204:	stc    
   140030205:	stc    
   140030206:	stc    
   140030207:	(bad)  
   140030208:	stc    
   140030209:	stc    
   14003020a:	stc    
   14003020b:	(bad)  
   14003020c:	cli    
   14003020d:	cli    
   14003020e:	cli    
   14003020f:	(bad)  
   140030210:	cli    
   140030211:	cli    
   140030212:	cli    
   140030213:	(bad)  
   140030214:	cli    
   140030215:	cli    
   140030216:	cli    
   140030217:	(bad)  
   140030218:	cli    
   140030219:	cli    
   14003021a:	cli    
   14003021b:	(bad)  
   14003021c:	cli    
   14003021d:	cli    
   14003021e:	cli    
   14003021f:	(bad)  
   140030220:	cli    
   140030221:	cli    
   140030222:	cli    
   140030223:	(bad)  
   140030224:	cli    
   140030225:	cli    
   140030226:	cli    
   140030227:	(bad)  
   140030228:	clc    
   140030229:	clc    
   14003022a:	clc    
   14003022b:	(bad)  
   14003022c:	in     eax,dx
   14003022d:	jmp    0x140030217
   14003022f:	call   rdx
   140030231:	leave  
   140030232:	mov    esi,0x9eb3c6ff
   140030237:	or     cl,0xb6
   14003023a:	movabs eax,ds:0xa1b6c980a1b6c91a
   140030243:	(bad)  
   140030244:	leave  
   140030245:	mov    dh,0xa1
   140030247:	dec    ecx
   140030249:	mov    dh,0xa1
   14003024b:	dec    ecx
   14003024d:	mov    dh,0xa1
   14003024f:	dec    ecx
   140030251:	mov    dh,0xa1
   140030253:	dec    ecx
   140030255:	mov    dh,0xa1
   140030257:	dec    ecx
   140030259:	mov    dh,0xa1
   14003025b:	dec    ecx
   14003025d:	mov    dh,0xa1
   14003025f:	dec    ecx
   140030261:	mov    dh,0xa1
   140030263:	dec    ecx
   140030265:	mov    dh,0xa1
   140030267:	dec    ecx
   140030269:	mov    dh,0xa1
   14003026b:	dec    ecx
   14003026d:	mov    dh,0xa1
   14003026f:	dec    ecx
   140030271:	mov    dh,0xa1
   140030273:	dec    ecx
   140030275:	mov    dh,0xa1
   140030277:	dec    ecx
   140030279:	mov    dh,0xa1
   14003027b:	dec    ecx
   14003027d:	mov    dh,0xa1
   14003027f:	dec    ecx
   140030281:	mov    dh,0xa1
   140030283:	dec    ecx
   140030285:	mov    dh,0xa1
   140030287:	dec    ecx
   140030289:	mov    dh,0xa1
   14003028b:	dec    ecx
   14003028d:	mov    dh,0xa1
   14003028f:	(bad)  
   140030290:	leave  
   140030291:	mov    dh,0xa1
   140030293:	or     cl,0xb6
   140030296:	movabs eax,ds:0x6bffffff1a
   14003029f:	add    BYTE PTR [rax],al
   1400302a1:	add    BYTE PTR [rax],al
   1400302a3:	adc    BYTE PTR [rax],al
	...
   1400302f5:	add    BYTE PTR [rax],al
   1400302f7:	(bad)  
   1400302f8:	sub    BYTE PTR [rax],al
   1400302fa:	add    BYTE PTR [rax],al
   1400302fc:	adc    BYTE PTR [rax],al
   1400302fe:	add    BYTE PTR [rax],al
   140030300:	and    BYTE PTR [rax],al
   140030302:	add    BYTE PTR [rax],al
   140030304:	add    DWORD PTR [rax],eax
   140030306:	and    BYTE PTR [rax],al
	...
   140030320:	jb     0x14003037e
   140030322:	cmp    eax,0x3d5c7268
   140030327:	int3   
   140030328:	jb     0x140030386
   14003032a:	cmp    eax,0x3d5c72ff
   14003032f:	push   QWORD PTR [rdx+0x5c]
   140030332:	cmp    eax,0x3d5c72ff
   140030337:	push   QWORD PTR [rdx+0x5c]
   14003033a:	cmp    eax,0x3d5c72ff
   14003033f:	push   QWORD PTR [rdx+0x5c]
   140030342:	cmp    eax,0x3d5c72ff
   140030347:	push   QWORD PTR [rdx+0x5c]
   14003034a:	cmp    eax,0x3d5c72ff
   14003034f:	push   QWORD PTR [rdx+0x5c]
   140030352:	cmp    eax,0x3d5c72ff
   140030357:	push   QWORD PTR [rdx+0x5c]
   14003035a:	cmp    eax,0x3d5c72cc
   14003035f:	push   0xffffffffe1426177
   140030364:	mov    ch,0xb0
   140030366:	stos   BYTE PTR es:[rdi],al
   140030367:	(bad)  
   140030368:	call   0x12802ec55
   14003036d:	out    0xe7,eax
   14003036f:	jmp    rdi
   140030371:	out    0xe7,eax
   140030373:	jmp    rdi
   140030375:	out    0xe7,eax
   140030377:	jmp    rdi
   140030379:	out    0xe7,eax
   14003037b:	jmp    rdi
   14003037d:	out    0xe7,eax
   14003037f:	jmp    rdi
   140030381:	out    0xe7,eax
   140030383:	jmp    rdi
   140030385:	out    0xe7,eax
   140030387:	jmp    rdi
   140030389:	out    0xe7,eax
   14003038b:	jmp    rdi
   14003038d:	out    0xe7,eax
   14003038f:	jmp    rdi
   140030391:	out    0xe7,eax
   140030393:	(bad)  
   140030394:	(bad)  
   140030395:	(bad)  
   140030396:	(bad)  
   140030397:	push   QWORD PTR [rbp+0x77ffaab0]
   14003039d:	(bad)  
   14003039e:	rex.X loope 0x14003041d
   1400303a1:	data16 rex.W (bad) 
   1400303a4:	(bad)  
   1400303a6:	(bad)  
   1400303a8:	call   0x10802ec95
   1400303ad:	mov    ebx,0xa0b4ffab
   1400303b2:	xchg   edi,edi
   1400303b4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400303b5:	lea    ebp,[rsi-0x1]
   1400303b8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400303b9:	lea    ebp,[rsi-0x1]
   1400303bc:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400303bd:	lea    ebp,[rsi-0x1]
   1400303c0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400303c1:	lea    ebp,[rsi-0x1]
   1400303c4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400303c5:	lea    ebp,[rsi-0x1]
   1400303c8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400303c9:	lea    ebp,[rsi-0x1]
   1400303cc:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400303cd:	lea    ebp,[rsi-0x1]
   1400303d0:	(bad)  
   1400303d1:	(bad)  
   1400303d2:	(bad)  
   1400303d3:	(bad)  
   1400303d4:	in     al,dx
   1400303d5:	in     al,dx
   1400303d6:	in     al,dx
   1400303d7:	(bad)  
   1400303d8:	(bad)  
   1400303da:	(bad)  
   1400303dc:	jl     0x140030444
   1400303de:	inc    QWORD PTR [rcx-0x2400b094]
   1400303e5:	fcmovnu st,st(3)
   1400303e7:	jmp    rdi
   1400303e9:	out    0xe7,eax
   1400303eb:	(bad)  
   1400303ec:	(bad)  
   1400303ee:	(bad)  
   1400303f0:	(bad)  
   1400303f2:	fdiv   st(7),st
   1400303f4:	(bad)  
   1400303f6:	fcos   
   1400303f8:	(bad)  
   1400303fa:	fcos   
   1400303fc:	(bad)  
   1400303fe:	fcos   
   140030400:	(bad)  
   140030402:	fcos   
   140030404:	(bad)  
   140030406:	fcos   
   140030408:	(bad)  
   14003040a:	fcos   
   14003040c:	(bad)  
   14003040e:	fcos   
   140030410:	in     eax,0xe5
   140030412:	in     eax,0xff
   140030414:	out    0xe7,eax
   140030416:	out    0xff,eax
   140030418:	fcmovnu st,st(3)
   14003041a:	(bad)  
   14003041c:	sub    DWORD PTR [rdi+rcx*2-0x1],0xff567287
   140030424:	(bad)  
   140030425:	(bad)  
   140030426:	(bad)  
   140030427:	jmp    rsp
   140030429:	in     al,0xe4
   14003042b:	jmp    rsp
   14003042d:	in     al,0xe4
   14003042f:	jmp    rax
   140030431:	loopne 0x140030413
   140030433:	call   FWORD PTR [rbx-0x6c00987c]
   140030439:	jns    0x140030493
   14003043b:	call   QWORD PTR [rbx-0x6c00a687]
   140030441:	jns    0x14003049b
   140030443:	call   FWORD PTR [rbx-0x1f00987c]
   140030449:	loopne 0x14003042b
   14003044b:	call   QWORD PTR [rsi-0x5100a183]
   140030451:	popf   
   140030452:	xchg   edi,edi
   140030454:	loopne 0x140030436
   140030456:	loopne 0x140030457
   140030458:	(bad)  
   140030459:	(bad)  
   14003045a:	(bad)  
   14003045b:	inc    DWORD PTR [rdi-0x7100a98e]
   140030461:	jns    0x1400304c0
   140030463:	(bad)  
   140030464:	(bad)  
   140030466:	fcos   
   140030468:	out    0xe7,eax
   14003046a:	out    0xff,eax
   14003046c:	jrcxz  0x140030451
   14003046e:	jrcxz  0x14003046f
   140030470:	jrcxz  0x140030455
   140030472:	jrcxz  0x140030473
   140030474:	retf   0xb7c2
   140030477:	dec    ecx
   140030479:	ret    0xffb6
   14003047c:	leave  
   14003047d:	ret    0xffb6
   140030480:	(bad)  
   140030481:	mov    ebp,0xbdc7ffb0
   140030486:	mov    al,0xff
   140030488:	fstp   st(3)
   14003048a:	fdivr  st,st(7)
   14003048c:	fcomp  st(0)
   14003048e:	fdivr  st,st(7)
   140030490:	xchg   edi,eax
   140030491:	jle    0x1400304f2
   140030493:	jmp    FWORD PTR [rdi-0x2a007662]
   140030499:	(bad)  
   14003049a:	(bad)  
   14003049b:	dec    DWORD PTR [rsi-0x6b00a287]
   1400304a1:	and    BYTE PTR [rdi+rdi*8-0x24],0xdc
   1400304a6:	fdiv   st(7),st
   1400304a8:	(bad)  
   1400304a9:	(bad)  
   1400304aa:	(bad)  
   1400304ab:	jmp    rsi
   1400304ad:	out    0xe6,al
   1400304af:	call   QWORD PTR [rdx+rdi*2+0x7d97ff59]
   1400304b6:	pop    rbp
   1400304b7:	call   FWORD PTR [rbp-0x6a00977a]
   1400304bd:	jnp    0x14003051a
   1400304bf:	call   QWORD PTR [rdx+rdi*2-0x796200a7]
   1400304c6:	push   0xffffffff9bacbaff
   1400304cb:	jmp    rsi
   1400304cd:	out    0xe6,al
   1400304cf:	call   QWORD PTR [rdx+rdi*2-0x615000a7]
   1400304d6:	mov    bh,bh
   1400304d8:	fcomp  st(0)
   1400304da:	fdivr  st,st(7)
   1400304dc:	xchg   esp,eax
   1400304dd:	and    BYTE PTR [rdi+rdi*8-0x65],0x87
   1400304e2:	ins    BYTE PTR es:[rdi],dx
   1400304e3:	(bad)  
   1400304e4:	(bad)  
   1400304e6:	fdivp  st(7),st
   1400304e8:	in     eax,dx
   1400304e9:	in     eax,dx
   1400304ea:	in     eax,dx
   1400304eb:	(bad)  
   1400304ec:	jmp    0x11e02eeda
   1400304f1:	fstp   st(5)
   1400304f3:	(bad)  
   1400304f4:	fstp   st(5)
   1400304f6:	(bad)  
   1400304f8:	(bad)  
   1400304fa:	fdivp  st(7),st
   1400304fc:	and    al,0x82
   1400304fe:	in     al,0xff
   140030500:	xor    BYTE PTR [rax-0x21210020],0xde
   140030507:	jmp    rbx
   140030509:	jrcxz  0x1400304ee
   14003050b:	jmp    QWORD PTR [rbp-0x51008970]
   140030511:	sahf   
   140030512:	mov    edi,edi
   140030514:	loop   0x1400304f8
   140030516:	loop   0x140030517
   140030518:	(bad)  
   14003051a:	fdiv   st(7),st
   14003051c:	fwait
   14003051d:	xchg   DWORD PTR [rdi+rdi*8-0x5e],ebp
   140030521:	lea    esi,[rdi+rdi*8-0x1f]
   140030525:	loope  0x140030508
   140030527:	push   rax
   140030529:	lock lock push rax
   14003052d:	lock lock push rax
   140030531:	lock lock (bad) 
   140030534:	in     al,dx
   140030535:	in     al,dx
   140030536:	in     al,dx
   140030537:	push   QWORD PTR [rbx]
   140030539:	mov    ch,cl
   14003053b:	jmp    rcx
   14003053d:	loope  0x140030520
   14003053f:	dec    DWORD PTR [rsi*2-0x13130018]
   140030546:	in     al,dx
   140030547:	(bad)  
   140030548:	in     al,dx
   140030549:	in     al,dx
   14003054a:	in     al,dx
   14003054b:	jmp    rbx
   14003054d:	jrcxz  0x140030532
   14003054f:	jmp    rsi
   140030551:	out    0xe6,al
   140030553:	(bad)  
   140030554:	out    dx,al
   140030555:	out    dx,al
   140030556:	out    dx,al
   140030557:	jmp    rcx
   140030559:	loope  0x14003053c
   14003055b:	jmp    QWORD PTR [rdx-0x57008b73]
   140030561:	xchg   esp,eax
   140030562:	jnp    0x140030563
   140030564:	in     al,0xe4
   140030566:	in     al,0xff
   140030568:	repz repz repz push rbx
   14003056d:	repz repz push rbx
   140030571:	repz repz push rax
   140030575:	lock lock call QWORD PTR [rbx]
   140030579:	jp     0x140030564
   14003057b:	push   rax
   14003057d:	lock lock call QWORD PTR [rbx]
   140030581:	jp     0x14003056c
   140030583:	call   QWORD PTR [rbx]
   140030585:	jp     0x140030570
   140030587:	push   rax
   140030589:	lock lock push rax
   14003058d:	lock lock push rbx
   140030591:	repz repz push rbx
   140030595:	repz repz jmp rsp
   140030599:	in     al,0xe4
   14003059b:	jmp    FWORD PTR [rax-0x5000846c]
   1400305a1:	fwait
   1400305a2:	(bad)  
   1400305a3:	jmp    rdi
   1400305a5:	out    0xe7,eax
   1400305a7:	push   rsi
   1400305a9:	div    dh
   1400305ab:	push   rsi
   1400305ad:	div    dh
   1400305af:	push   rsi
   1400305b1:	div    dh
   1400305b3:	push   rbx
   1400305b5:	repz repz call QWORD PTR [rbp+rdi*4+0x7e1affe8]
   1400305be:	jmp    0x127eaedc2
   1400305c3:	inc    DWORD PTR [rdx+0x26ffe8b4]
   1400305c9:	test   dl,ch
   1400305cb:	push   rbx
   1400305cd:	repz repz push rsi
   1400305d1:	div    dh
   1400305d3:	push   rsi
   1400305d5:	div    dh
   1400305d7:	jmp    rdi
   1400305d9:	out    0xe7,eax
   1400305db:	jmp    FWORD PTR [rdi-0x4a007d65]
   1400305e1:	movabs eax,ds:0xf9f9ffe9e9e9ff89
   1400305ea:	stc    
   1400305eb:	(bad)  
   1400305ec:	stc    
   1400305ed:	stc    
   1400305ee:	stc    
   1400305ef:	(bad)  
   1400305f0:	stc    
   1400305f1:	stc    
   1400305f2:	stc    
   1400305f3:	(bad)  
   1400305f4:	stc    
   1400305f5:	stc    
   1400305f6:	stc    
   1400305f7:	push   rax
   1400305f9:	lock lock dec DWORD PTR [rcx+0x26ffeab8]
   140030601:	test   ebx,ebp
   140030603:	(bad)  
   140030604:	out    dx,eax
   140030605:	out    dx,eax
   140030606:	out    dx,eax
   140030607:	(bad)  
   140030608:	mov    edx,0xf5ffebd1
   14003060d:	cmc    
   14003060e:	cmc    
   14003060f:	(bad)  
   140030610:	stc    
   140030611:	stc    
   140030612:	stc    
   140030613:	(bad)  
   140030614:	stc    
   140030615:	stc    
   140030616:	stc    
   140030617:	(bad)  
   140030618:	jmp    0xf602f006
   14003061d:	movabs eax,ds:0xececff90a7baff89
   140030626:	in     al,dx
   140030627:	(bad)  
   140030628:	sti    
   140030629:	sti    
   14003062a:	sti    
   14003062b:	(bad)  
   14003062c:	sti    
   14003062d:	sti    
   14003062e:	sti    
   14003062f:	(bad)  
   140030630:	sti    
   140030631:	sti    
   140030632:	sti    
   140030633:	(bad)  
   140030634:	sti    
   140030635:	sti    
   140030636:	sti    
   140030637:	(bad)  
   140030638:	cli    
   140030639:	cli    
   14003063a:	cli    
   14003063b:	push   rbx
   14003063d:	repz repz dec DWORD PTR [rbx+rdi*4-0x71c70013]
   140030646:	in     al,dx
   140030647:	push   rbp
   140030649:	cmc    
   14003064a:	cmc    
   14003064b:	(bad)  
   14003064c:	sti    
   14003064d:	sti    
   14003064e:	sti    
   14003064f:	(bad)  
   140030650:	sti    
   140030651:	sti    
   140030652:	sti    
   140030653:	(bad)  
   140030654:	sti    
   140030655:	sti    
   140030656:	sti    
   140030657:	(bad)  
   140030658:	in     al,dx
   140030659:	in     al,dx
   14003065a:	in     al,dx
   14003065b:	(bad)  
   14003065c:	mov    edx,0xbfff90a7
   140030661:	lods   al,BYTE PTR ds:[rsi]
   140030662:	xchg   esi,eax
   140030663:	(bad)  
   140030664:	in     eax,dx
   140030665:	in     eax,dx
   140030666:	in     eax,dx
   140030667:	(bad)  
   140030668:	cld    
   140030669:	cld    
   14003066a:	cld    
   14003066b:	(bad)  
   14003066c:	std    
   14003066d:	std    
   14003066e:	std    
   14003066f:	(bad)  
   140030670:	std    
   140030671:	std    
   140030672:	std    
   140030673:	(bad)  
   140030674:	std    
   140030675:	std    
   140030676:	std    
   140030677:	(bad)  
   140030678:	std    
   140030679:	std    
   14003067a:	std    
   14003067b:	(bad)  
   14003067c:	cld    
   14003067d:	cld    
   14003067e:	cld    
   14003067f:	push   rsp
   140030681:	hlt    
   140030682:	hlt    
   140030683:	inc    esp
   140030685:	f2xm1  
   140030687:	(bad)  
   140030688:	cli    
   140030689:	cli    
   14003068a:	cli    
   14003068b:	(bad)  
   14003068c:	std    
   14003068d:	std    
   14003068e:	std    
   14003068f:	(bad)  
   140030690:	std    
   140030691:	std    
   140030692:	std    
   140030693:	(bad)  
   140030694:	cld    
   140030695:	cld    
   140030696:	cld    
   140030697:	(bad)  
   140030698:	in     eax,dx
   140030699:	in     eax,dx
   14003069a:	in     eax,dx
   14003069b:	(bad)  
   14003069c:	mov    edi,0xc4ff96ac
   1400306a1:	mov    cl,0x9b
   1400306a3:	int3   
   1400306a4:	(bad)  
   1400306a6:	(bad)  
   1400306a7:	push   rbp
   1400306a9:	cmc    
   1400306aa:	cmc    
   1400306ab:	push   rdi
   1400306ad:	div    edi
   1400306af:	push   rdi
   1400306b1:	div    edi
   1400306b3:	push   rdi
   1400306b5:	div    edi
   1400306b7:	push   rdi
   1400306b9:	div    edi
   1400306bb:	push   rdi
   1400306bd:	div    edi
   1400306bf:	push   rdi
   1400306c1:	div    edi
   1400306c3:	push   rsp
   1400306c5:	hlt    
   1400306c6:	hlt    
   1400306c7:	push   rdi
   1400306c9:	div    edi
   1400306cb:	push   rdi
   1400306cd:	div    edi
   1400306cf:	push   rdi
   1400306d1:	div    edi
   1400306d3:	push   rbp
   1400306d5:	cmc    
   1400306d6:	cmc    
   1400306d7:	(bad)  
   1400306d8:	(bad)  
   1400306da:	(bad)  
   1400306db:	inc    esp
   1400306dd:	mov    cl,0x9b
   1400306df:	int3   
   1400306e0:	enter  0x9fb5,0x68
   1400306e4:	enter  0x9fb5,0xcc
   1400306e8:	enter  0x9fb5,0xff
   1400306ec:	enter  0x9fb5,0xff
   1400306f0:	enter  0x9fb5,0xff
   1400306f4:	enter  0x9fb5,0xff
   1400306f8:	enter  0x9fb5,0xff
   1400306fc:	enter  0x9fb5,0xff
   140030700:	enter  0x9fb5,0xff
   140030704:	enter  0x9fb5,0xff
   140030708:	enter  0x9fb5,0xff
   14003070c:	enter  0x9fb5,0xff
   140030710:	enter  0x9fb5,0xff
   140030714:	enter  0x9fb5,0xff
   140030718:	enter  0x9fb5,0xcc
   14003071c:	enter  0x9fb5,0x68
   140030720:	add    BYTE PTR [rax],al
   140030722:	(bad)  
   140030723:	jnp    0x140030725
   140030725:	add    BYTE PTR [rax],al
   140030727:	add    BYTE PTR [rax],al
   140030729:	add    BYTE PTR [rdx],ch
	...
   14003075f:	add    al,0x0
   140030761:	add    BYTE PTR [rcx],al
   140030763:	add    BYTE PTR [rax+rax*1],cl
   140030766:	xor    BYTE PTR [rax],dh
   140030768:	adc    BYTE PTR [rax],al
   14003076a:	add    DWORD PTR [rax],eax
   14003076c:	add    al,0x0
   14003076e:	push   0x1000006
   140030773:	add    BYTE PTR [rax],ah
   140030775:	and    BYTE PTR [rax],dl
   140030777:	add    BYTE PTR [rcx],al
   140030779:	add    BYTE PTR [rax+rax*1],al
   14003077c:	call   0x142030783
   140030781:	add    BYTE PTR [rax],bl
   140030783:	sbb    BYTE PTR [rax],dl
   140030785:	add    BYTE PTR [rcx],al
   140030787:	add    BYTE PTR [rax+rax*1],al
   14003078a:	call   0x143030790
   14003078f:	add    BYTE PTR [rax],dl
   140030791:	adc    BYTE PTR [rax],dl
   140030793:	add    BYTE PTR [rcx],al
   140030795:	add    BYTE PTR [rax+rax*1],al
   140030798:	sub    BYTE PTR [rcx],al
   14003079a:	add    BYTE PTR [rax],al
   14003079c:	add    al,0x0
   14003079e:	xor    BYTE PTR [rax],dh
   1400307a0:	add    BYTE PTR [rax],al
   1400307a2:	add    DWORD PTR [rax],eax
   1400307a4:	or     BYTE PTR [rax],al
   1400307a6:	test   al,0xe
   1400307a8:	add    BYTE PTR [rax],al
   1400307aa:	add    eax,0x202000
   1400307af:	add    BYTE PTR [rcx],al
   1400307b1:	add    BYTE PTR [rax],cl
   1400307b3:	add    BYTE PTR [rax+0x6000008],ch
   1400307b9:	add    BYTE PTR [rax],bl
   1400307bb:	sbb    BYTE PTR [rax],al
   1400307bd:	add    BYTE PTR [rcx],al
   1400307bf:	add    BYTE PTR [rax],cl
   1400307c1:	add    al,cl
   1400307c3:	(bad)  
   1400307c4:	add    BYTE PTR [rax],al
   1400307c6:	(bad)  
   1400307c7:	add    BYTE PTR [rax],dl
   1400307c9:	adc    BYTE PTR [rax],al
   1400307cb:	add    BYTE PTR [rcx],al
   1400307cd:	add    BYTE PTR [rax],cl
   1400307cf:	add    BYTE PTR [rax+0x5],ch
   1400307d2:	add    BYTE PTR [rax],al
   1400307d4:	or     BYTE PTR [rax],al
   1400307d6:	xor    BYTE PTR [rax],dh
   1400307d8:	add    BYTE PTR [rax],al
   1400307da:	add    DWORD PTR [rax],eax
   1400307dc:	and    BYTE PTR [rax],al
   1400307de:	test   al,0x25
   1400307e0:	add    BYTE PTR [rax],al
   1400307e2:	or     DWORD PTR [rax],eax
   1400307e4:	and    BYTE PTR [rax],ah
   1400307e6:	add    BYTE PTR [rax],al
   1400307e8:	add    DWORD PTR [rax],eax
   1400307ea:	and    BYTE PTR [rax],al
   1400307ec:	test   al,0x10
   1400307ee:	add    BYTE PTR [rax],al
   1400307f0:	or     al,BYTE PTR [rax]
   1400307f2:	sbb    BYTE PTR [rax],bl
   1400307f4:	add    BYTE PTR [rax],al
   1400307f6:	add    DWORD PTR [rax],eax
   1400307f8:	and    BYTE PTR [rax],al
   1400307fa:	mov    BYTE PTR [rcx],cl
   1400307fc:	add    BYTE PTR [rax],al
   1400307fe:	or     eax,DWORD PTR [rax]
   140030800:	adc    BYTE PTR [rax],dl
   140030802:	add    BYTE PTR [rax],al
   140030804:	add    DWORD PTR [rax],eax
   140030806:	and    BYTE PTR [rax],al
   140030808:	push   0xc000004
   14003080d:	add    BYTE PTR [rax+0x41],dl
   140030810:	cmp    al,0x3
   140030812:	xor    al,0x0
   140030814:	add    BYTE PTR [rax],al
   140030816:	push   rsi
   140030817:	add    BYTE PTR [rbx+0x0],dl
   14003081a:	pop    rdi
   14003081b:	add    BYTE PTR [rsi+0x0],dl
   14003081e:	add    BYTE PTR [r10+0x0],r10b
   140030822:	push   rbx
   140030823:	add    BYTE PTR [rcx+0x0],cl
   140030826:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14003082a:	pop    rdi
   14003082b:	add    BYTE PTR [rcx+0x0],cl
   14003082e:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   140030832:	rex.WRXB add BYTE PTR [r8],r8b
   140030835:	add    BYTE PTR [rax],al
   140030837:	add    BYTE PTR [rbp+0xfeef04],bh
   14003083d:	add    BYTE PTR [rcx],al
   14003083f:	add    BYTE PTR [rax],al
   140030841:	add    BYTE PTR [rdi],al
   140030843:	add    BYTE PTR [rbx],dl
   140030845:	add    BYTE PTR [rax+0x2],bl
   140030848:	add    BYTE PTR [rax],al
   14003084a:	(bad)  
   14003084b:	add    BYTE PTR [rbx],dl
   14003084d:	add    BYTE PTR [rax+0x2],bl
   140030850:	(bad)  
   140030851:	add    BYTE PTR [rax],al
   140030853:	add    BYTE PTR [rax],al
   140030855:	add    BYTE PTR [rax],al
   140030857:	add    BYTE PTR [rax+rax*1],al
   14003085a:	add    BYTE PTR [rax],al
   14003085c:	add    DWORD PTR [rax],eax
	...
   14003086a:	add    BYTE PTR [rax],al
   14003086c:	(bad)  
   14003086d:	add    al,BYTE PTR [rax]
   14003086f:	add    BYTE PTR [rcx],al
   140030871:	add    BYTE PTR [rbx+0x0],dl
   140030874:	je     0x140030876
   140030876:	jb     0x140030878
   140030878:	imul   eax,DWORD PTR [rax],0x67006e
   14003087e:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140030882:	ins    BYTE PTR es:[rdi],dx
   140030883:	add    BYTE PTR [rbp+0x0],ah
   140030886:	rex.WB add BYTE PTR [r14+0x0],bpl
   14003088a:	data16 add BYTE PTR [rdi+0x0],ch
   14003088e:	add    BYTE PTR [rax],al
   140030890:	jbe    0x140030894
   140030892:	add    BYTE PTR [rax],al
   140030894:	add    DWORD PTR [rax],eax
   140030896:	xor    BYTE PTR [rax],al
   140030898:	xor    BYTE PTR [rax],al
   14003089a:	xor    BYTE PTR [rax],al
   14003089c:	xor    BYTE PTR [rax],al
   14003089e:	xor    BYTE PTR [rax],al
   1400308a0:	xor    al,0x0
   1400308a2:	(bad)  
   1400308a3:	add    BYTE PTR [rax],dh
   1400308a5:	add    BYTE PTR [rax],al
   1400308a7:	add    BYTE PTR [rsi+0x0],al
   1400308aa:	adc    eax,DWORD PTR [rax]
   1400308ac:	add    DWORD PTR [rax],eax
   1400308ae:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400308b2:	ins    DWORD PTR es:[rdi],dx
   1400308b3:	add    BYTE PTR [rax+0x0],dh
   1400308b6:	(bad)  
   1400308b7:	add    BYTE PTR [rsi+0x0],ch
   1400308ba:	jns    0x1400308bc
   1400308bc:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   1400308c0:	ins    DWORD PTR es:[rdi],dx
   1400308c1:	add    BYTE PTR [rbp+0x0],ah
   1400308c4:	add    BYTE PTR [rax],al
   1400308c6:	add    BYTE PTR [rax],al
   1400308c8:	rex.WRXB add BYTE PTR [r10+0x0],r14b
   1400308cc:	(bad)  
   1400308cd:	add    BYTE PTR [rbx+0x0],ah
   1400308d0:	ins    BYTE PTR es:[rdi],dx
   1400308d1:	add    BYTE PTR [rbp+0x0],ah
   1400308d4:	and    BYTE PTR [rax],al
   1400308d6:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400308da:	jb     0x1400308dc
   1400308dc:	jo     0x1400308de
   1400308de:	outs   dx,DWORD PTR ds:[rsi]
   1400308df:	add    BYTE PTR [rdx+0x0],dh
   1400308e2:	(bad)  
   1400308e3:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400308e7:	add    BYTE PTR [rdi+0x0],ch
   1400308ea:	outs   dx,BYTE PTR ds:[rsi]
   1400308eb:	add    BYTE PTR [rax],al
   1400308ed:	add    BYTE PTR [rax],al
   1400308ef:	add    BYTE PTR [rax+0x0],ah
   1400308f2:	sbb    al,0x0
   1400308f4:	add    DWORD PTR [rax],eax
   1400308f6:	rex.RX add BYTE PTR [rcx+0x0],r13b
   1400308fa:	ins    BYTE PTR es:[rdi],dx
   1400308fb:	add    BYTE PTR [rbp+0x0],ah
   1400308fe:	add    BYTE PTR [rbp+0x0],r12b
   140030902:	jae    0x140030904
   140030904:	movsxd eax,DWORD PTR [rax]
   140030906:	jb     0x140030908
   140030908:	imul   eax,DWORD PTR [rax],0x740070
   14003090e:	imul   eax,DWORD PTR [rax],0x6e006f
   140030914:	add    BYTE PTR [rax],al
   140030916:	add    BYTE PTR [rax],al
   140030918:	rex.WX add BYTE PTR [rcx+0x0],spl
   14003091c:	jbe    0x14003091e
   14003091e:	(bad)  
   14003091f:	add    BYTE PTR [rax],ch
   140030921:	add    BYTE PTR [rax+rax*1+0x4d],dl
   140030925:	add    BYTE PTR [rcx],ch
   140030927:	add    BYTE PTR [rax],ah
   140030929:	add    BYTE PTR [rax+0x0],dl
   14003092c:	ins    BYTE PTR es:[rdi],dx
   14003092d:	add    BYTE PTR [rcx+0x0],ah
   140030930:	je     0x140030932
   140030932:	data16 add BYTE PTR [rdi+0x0],ch
   140030936:	jb     0x140030938
   140030938:	ins    DWORD PTR es:[rdi],dx
   140030939:	add    BYTE PTR [rax],ah
   14003093b:	add    BYTE PTR [rbx+0x0],dl
   14003093e:	add    BYTE PTR [r8],r12b
   140030941:	add    BYTE PTR [rdx+0x0],ah
   140030944:	imul   eax,DWORD PTR [rax],0x61006e
   14003094a:	jb     0x14003094c
   14003094c:	jns    0x14003094e
   14003094e:	add    BYTE PTR [rax],al
   140030950:	add    BYTE PTR ss:[rbx],cl
   140030953:	add    BYTE PTR [rcx],al
   140030955:	add    BYTE PTR [rsi+0x0],al
   140030958:	imul   eax,DWORD PTR [rax],0x65006c
   14003095e:	push   rsi
   14003095f:	add    BYTE PTR [rbp+0x0],ah
   140030962:	jb     0x140030964
   140030964:	jae    0x140030966
   140030966:	imul   eax,DWORD PTR [rax],0x6e006f
   14003096c:	add    BYTE PTR [rax],al
   14003096e:	add    BYTE PTR [rax],al
   140030970:	(bad)  
   140030971:	add    BYTE PTR [rsi],ch
   140030973:	add    BYTE PTR [rax],dh
   140030975:	add    BYTE PTR [rsi],ch
   140030977:	add    BYTE PTR [rsi],dh
   140030979:	add    BYTE PTR [rax],dh
   14003097b:	add    BYTE PTR [rax],dh
   14003097d:	add    BYTE PTR [rsi],ch
   14003097f:	add    BYTE PTR [rcx],dh
   140030981:	add    BYTE PTR [rcx],bh
   140030983:	add    BYTE PTR [rax],al
   140030985:	add    BYTE PTR [rax],al
   140030987:	add    BYTE PTR [rdx],bh
   140030989:	add    BYTE PTR [rip+0x46000100],cl        # 0x186030a8f
   14003098f:	add    BYTE PTR [rbp+0x0],dh
   140030992:	ins    BYTE PTR es:[rdi],dx
   140030993:	add    BYTE PTR [rax+rax*1+0x20],ch
   140030997:	add    BYTE PTR [rsi+0x0],dl
   14003099a:	add    BYTE PTR gs:[rdx+0x0],dh
   14003099e:	jae    0x1400309a0
   1400309a0:	imul   eax,DWORD PTR [rax],0x6e006f
   1400309a6:	add    BYTE PTR [rax],al
   1400309a8:	xor    DWORD PTR [rax],eax
   1400309aa:	add    BYTE PTR cs:[rdi],dh
   1400309ad:	add    BYTE PTR [rsi],ch
   1400309af:	add    BYTE PTR [rax],dh
   1400309b1:	add    BYTE PTR [rdi+0x0],bl
   1400309b4:	add    BYTE PTR ss:[rax],dh
   1400309b7:	add    BYTE PTR [rip+0x31006200],ch        # 0x171036bbd
   1400309bd:	add    BYTE PTR [rcx],bh
   1400309bf:	add    BYTE PTR [rax],al
   1400309c1:	add    BYTE PTR [rax],al
   1400309c3:	add    BYTE PTR [rdx],ch
   1400309c5:	add    BYTE PTR [rip+0x49000100],al        # 0x189030acb
   1400309cb:	add    BYTE PTR [rsi+0x0],ch
   1400309ce:	je     0x1400309d0
   1400309d0:	add    BYTE PTR gs:[rdx+0x0],dh
   1400309d4:	outs   dx,BYTE PTR ds:[rsi]
   1400309d5:	add    BYTE PTR [rcx+0x0],ah
   1400309d8:	ins    BYTE PTR es:[rdi],dx
   1400309d9:	add    BYTE PTR [rsi+0x0],cl
   1400309dc:	(bad)  
   1400309dd:	add    BYTE PTR [rbp+0x0],ch
   1400309e0:	add    BYTE PTR gs:[rax],al
   1400309e3:	add    BYTE PTR [rdx+0x0],ch
   1400309e6:	(bad)  
   1400309e7:	add    BYTE PTR [rsi+0x0],dh
   1400309ea:	(bad)  
   1400309eb:	add    BYTE PTR [rax],al
   1400309ed:	add    BYTE PTR [rax],al
   1400309ef:	add    BYTE PTR [rsi+0x0],al
   1400309f2:	adc    DWORD PTR [rax],eax
   1400309f4:	add    DWORD PTR [rax],eax
   1400309f6:	rex.WR add BYTE PTR [rbp+0x0],r12b
   1400309fa:	add    BYTE PTR [ecx+0x0],ah
   1400309fe:	ins    BYTE PTR es:[rdi],dx
   1400309ff:	add    BYTE PTR [rbx+0x0],al
   140030a02:	outs   dx,DWORD PTR ds:[rsi]
   140030a03:	add    BYTE PTR [rax+0x0],dh
   140030a06:	jns    0x140030a08
   140030a08:	jb     0x140030a0a
   140030a0a:	imul   eax,DWORD PTR [rax],0x680067
   140030a10:	je     0x140030a12
   140030a12:	add    BYTE PTR [rax],al
   140030a14:	rex.XB add BYTE PTR [r15+0x0],bpl
   140030a18:	jo     0x140030a1a
   140030a1a:	jns    0x140030a1c
   140030a1c:	jb     0x140030a1e
   140030a1e:	imul   eax,DWORD PTR [rax],0x680067
   140030a24:	je     0x140030a26
   140030a26:	and    BYTE PTR [rax],al
   140030a28:	test   eax,0x32002000
   140030a2d:	add    BYTE PTR [rax],dh
   140030a2f:	add    BYTE PTR [rcx],dh
   140030a31:	add    BYTE PTR [rax+rax*1],dh
   140030a34:	add    BYTE PTR [rax],al
   140030a36:	add    BYTE PTR [rax],al
   140030a38:	cmp    al,BYTE PTR [rax]
   140030a3a:	or     DWORD PTR [rax],eax
   140030a3c:	add    DWORD PTR [rax],eax
   140030a3e:	rex.WRXB add BYTE PTR [r10+0x0],r14b
   140030a42:	imul   eax,DWORD PTR [rax],0x690067
   140030a48:	outs   dx,BYTE PTR ds:[rsi]
   140030a49:	add    BYTE PTR [rcx+0x0],ah
   140030a4c:	ins    BYTE PTR es:[rdi],dx
   140030a4d:	add    BYTE PTR [rsi+0x0],al
   140030a50:	imul   eax,DWORD PTR [rax],0x65006c
   140030a56:	outs   dx,BYTE PTR ds:[rsi]
   140030a57:	add    BYTE PTR [rcx+0x0],ah
   140030a5a:	ins    DWORD PTR es:[rdi],dx
   140030a5b:	add    BYTE PTR [rbp+0x0],ah
   140030a5e:	add    BYTE PTR [rax],al
   140030a60:	push   0x0
   140030a62:	(bad)  
   140030a63:	add    BYTE PTR [rsi+0x0],dh
   140030a66:	(bad)  
   140030a67:	add    BYTE PTR [rsi],ch
   140030a69:	add    BYTE PTR [rbp+0x0],ah
   140030a6c:	js     0x140030a6e
   140030a6e:	add    BYTE PTR gs:[rax],al
   140030a71:	add    BYTE PTR [rax],al
   140030a73:	add    BYTE PTR [rsi+0x0],dl
   140030a76:	sbb    eax,DWORD PTR [rax]
   140030a78:	add    DWORD PTR [rax],eax
   140030a7a:	push   rax
   140030a7b:	add    BYTE PTR [rdx+0x0],dh
   140030a7e:	outs   dx,DWORD PTR ds:[rsi]
   140030a7f:	add    BYTE PTR [rax+rax*1+0x75],ah
   140030a83:	add    BYTE PTR [rbx+0x0],ah
   140030a86:	je     0x140030a88
   140030a88:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140030a8c:	ins    DWORD PTR es:[rdi],dx
   140030a8d:	add    BYTE PTR [rbp+0x0],ah
   140030a90:	add    BYTE PTR [rax],al
   140030a92:	add    BYTE PTR [rax],al
   140030a94:	rex.WX add BYTE PTR [rcx+0x0],spl
   140030a98:	jbe    0x140030a9a
   140030a9a:	(bad)  
   140030a9b:	add    BYTE PTR [rax],ch
   140030a9d:	add    BYTE PTR [rax+rax*1+0x4d],dl
   140030aa1:	add    BYTE PTR [rcx],ch
   140030aa3:	add    BYTE PTR [rax],ah
   140030aa5:	add    BYTE PTR [rax+0x0],dl
   140030aa8:	ins    BYTE PTR es:[rdi],dx
   140030aa9:	add    BYTE PTR [rcx+0x0],ah
   140030aac:	je     0x140030aae
   140030aae:	data16 add BYTE PTR [rdi+0x0],ch
   140030ab2:	jb     0x140030ab4
   140030ab4:	ins    DWORD PTR es:[rdi],dx
   140030ab5:	add    BYTE PTR [rax],ah
   140030ab7:	add    BYTE PTR [rbx+0x0],dl
   140030aba:	add    BYTE PTR [r8],r12b
   140030abd:	add    BYTE PTR [rdi],dh
   140030abf:	add    BYTE PTR [rax],ah
   140030ac1:	add    BYTE PTR [rbp+0x0],dl
   140030ac4:	add    BYTE PTR ss:[rax],dh
   140030ac7:	add    BYTE PTR [rax],al
   140030ac9:	add    BYTE PTR [rax],al
   140030acb:	add    BYTE PTR [rdx],bh
   140030acd:	add    BYTE PTR [rbx],cl
   140030acf:	add    BYTE PTR [rcx],al
   140030ad1:	add    BYTE PTR [rax+0x0],dl
   140030ad4:	jb     0x140030ad6
   140030ad6:	outs   dx,DWORD PTR ds:[rsi]
   140030ad7:	add    BYTE PTR [rax+rax*1+0x75],ah
   140030adb:	add    BYTE PTR [rbx+0x0],ah
   140030ade:	je     0x140030ae0
   140030ae0:	push   rsi
   140030ae1:	add    BYTE PTR [rbp+0x0],ah
   140030ae4:	jb     0x140030ae6
   140030ae6:	jae    0x140030ae8
   140030ae8:	imul   eax,DWORD PTR [rax],0x6e006f
   140030aee:	add    BYTE PTR [rax],al
   140030af0:	(bad)  
   140030af1:	add    BYTE PTR [rsi],ch
   140030af3:	add    BYTE PTR [rax],dh
   140030af5:	add    BYTE PTR [rsi],ch
   140030af7:	add    BYTE PTR [rsi],dh
   140030af9:	add    BYTE PTR [rax],dh
   140030afb:	add    BYTE PTR [rax],dh
   140030afd:	add    BYTE PTR [rsi],ch
   140030aff:	add    BYTE PTR [rcx],dh
   140030b01:	add    BYTE PTR [rcx],bh
   140030b03:	add    BYTE PTR [rax],al
   140030b05:	add    BYTE PTR [rax],al
   140030b07:	add    BYTE PTR [rax+rax*1+0x0],al
   140030b0b:	add    BYTE PTR [rcx],al
   140030b0d:	add    BYTE PTR [rsi+0x0],dl
   140030b10:	(bad)  
   140030b11:	add    BYTE PTR [rdx+0x0],dh
   140030b14:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140030b18:	ins    BYTE PTR es:[rdi],dx
   140030b19:	add    BYTE PTR [rbp+0x0],ah
   140030b1c:	rex.WB add BYTE PTR [r14+0x0],bpl
   140030b20:	data16 add BYTE PTR [rdi+0x0],ch
   140030b24:	add    BYTE PTR [rax],al
   140030b26:	add    BYTE PTR [rax],al
   140030b28:	and    al,0x0
   140030b2a:	add    al,0x0
   140030b2c:	add    BYTE PTR [rax],al
   140030b2e:	push   rsp
   140030b2f:	add    BYTE PTR [rdx+0x0],dh
   140030b32:	(bad)  
   140030b33:	add    BYTE PTR [rsi+0x0],ch
   140030b36:	jae    0x140030b38
   140030b38:	ins    BYTE PTR es:[rdi],dx
   140030b39:	add    BYTE PTR [rcx+0x0],ah
   140030b3c:	je     0x140030b3e
   140030b3e:	imul   eax,DWORD PTR [rax],0x6e006f
   140030b44:	add    BYTE PTR [rax],al
   140030b46:	add    BYTE PTR [rax],al
   140030b48:	add    BYTE PTR [rax],al
   140030b4a:	mov    al,0x4
   140030b4c:	cmp    al,0x61
   140030b4e:	jae    0x140030bc3
   140030b50:	gs ins DWORD PTR es:[rdi],dx
   140030b52:	(bad)  
   140030b53:	ins    BYTE PTR es:[rdi],dx
   140030b54:	jns    0x140030b76
   140030b56:	js     0x140030bc5
   140030b58:	ins    BYTE PTR es:[rdi],dx
   140030b59:	outs   dx,BYTE PTR ds:[rsi]
   140030b5a:	jae    0x140030b99
   140030b5c:	and    dh,BYTE PTR [rbp+0x72]
   140030b5f:	outs   dx,BYTE PTR ds:[rsi]
   140030b60:	cmp    dh,BYTE PTR [rbx+0x63]
   140030b63:	push   0x73616d65
   140030b68:	sub    eax,0x7263696d
   140030b6d:	outs   dx,DWORD PTR ds:[rsi]
   140030b6e:	jae    0x140030bdf
   140030b70:	data16 je 0x140030ba0
   140030b73:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140030b76:	cmp    ah,BYTE PTR [rcx+0x73]
   140030b79:	ins    DWORD PTR es:[rdi],dx
   140030b7a:	cs jbe 0x140030bae
   140030b7d:	and    ah,BYTE PTR [rax]
   140030b7f:	ins    DWORD PTR es:[rdi],dx
   140030b80:	(bad)  
   140030b81:	outs   dx,BYTE PTR ds:[rsi]
   140030b82:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   140030b89:	jb     0x140030bfe
   140030b8b:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   140030b92:	xor    BYTE PTR [rdx],ah
   140030b94:	and    BYTE PTR [rax+0x6d],bh
   140030b97:	ins    BYTE PTR es:[rdi],dx
   140030b98:	outs   dx,BYTE PTR ds:[rsi]
   140030b99:	jae    0x140030bd5
   140030b9b:	(bad)  
   140030b9c:	jae    0x140030c0b
   140030b9e:	jbe    0x140030bd3
   140030ba0:	cmp    eax,0x6e727522
   140030ba5:	cmp    dh,BYTE PTR [rbx+0x63]
   140030ba8:	push   0x73616d65
   140030bad:	sub    eax,0x7263696d
   140030bb2:	outs   dx,DWORD PTR ds:[rsi]
   140030bb3:	jae    0x140030c24
   140030bb5:	data16 je 0x140030be5
   140030bb8:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140030bbb:	cmp    ah,BYTE PTR [rcx+0x73]
   140030bbe:	ins    DWORD PTR es:[rdi],dx
   140030bbf:	cs jbe 0x140030bf5
   140030bc2:	and    bh,BYTE PTR [rsi]
   140030bc4:	or     eax,0x73613c0a
   140030bc9:	jae    0x140030c30
   140030bcb:	ins    DWORD PTR es:[rdi],dx
   140030bcc:	(bad)  
   140030bcd:	ins    BYTE PTR es:[rdi],dx
   140030bce:	jns    0x140030c19
   140030bd0:	fs outs dx,BYTE PTR gs:[rsi]
   140030bd3:	je     0x140030c3e
   140030bd5:	je     0x140030c50
   140030bd7:	and    BYTE PTR [rsi+0x65],dh
   140030bda:	jb     0x140030c4f
   140030bdc:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e37223d
   140030be3:	xor    BYTE PTR [rsi],ch
   140030be5:	xor    BYTE PTR ss:[rax],dh
   140030be8:	xor    DWORD PTR cs:[rcx],edi
   140030beb:	and    ah,BYTE PTR [rax]
   140030bed:	jo     0x140030c61
   140030bef:	outs   dx,DWORD PTR ds:[rsi]
   140030bf0:	movsxd esp,DWORD PTR [rbp+0x73]
   140030bf3:	jae    0x140030c64
   140030bf5:	jb     0x140030c38
   140030bf7:	jb     0x140030c5c
   140030bf9:	push   0x63657469
   140030bfe:	je     0x140030c75
   140030c00:	jb     0x140030c67
   140030c02:	cmp    eax,0x36385822
   140030c07:	and    ah,BYTE PTR [rax]
   140030c09:	outs   dx,BYTE PTR ds:[rsi]
   140030c0a:	(bad)  
   140030c0b:	ins    DWORD PTR es:[rdi],dx
   140030c0c:	gs cmp eax,0x61724f22
   140030c12:	movsxd ebp,DWORD PTR [rbp+riz*2+0x20]
   140030c16:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140030c18:	jb     0x140030c8a
   140030c1a:	outs   dx,DWORD PTR ds:[rsi]
   140030c1b:	jb     0x140030c7e
   140030c1d:	je     0x140030c88
   140030c1f:	outs   dx,DWORD PTR ds:[rsi]
   140030c20:	outs   dx,BYTE PTR ds:[rsi]
   140030c21:	sub    al,0x20
   140030c23:	rex.WX (bad) 
   140030c25:	jbe    0x140030c88
   140030c27:	sub    BYTE PTR [rbp+rbp*2+0x29],dh
   140030c2b:	and    BYTE PTR [rdx],dh
   140030c2d:	and    BYTE PTR [rbx+0x74],dl
   140030c30:	(bad)  
   140030c31:	outs   dx,BYTE PTR ds:[rsi]
   140030c32:	fs (bad) 
   140030c34:	jb     0x140030c9a
   140030c36:	and    BYTE PTR [rbp+0x64],al
   140030c39:	imul   esi,DWORD PTR [rcx+rbp*2+0x6f],0x7420226e
   140030c41:	jns    0x140030cb3
   140030c43:	gs cmp eax,0x6e697722
   140030c49:	xor    esi,DWORD PTR [rdx]
   140030c4b:	and    bh,BYTE PTR [rsi]
   140030c4d:	cmp    al,0x2f
   140030c4f:	(bad)  
   140030c50:	jae    0x140030cc5
   140030c52:	gs ins DWORD PTR es:[rdi],dx
   140030c54:	(bad)  
   140030c55:	ins    BYTE PTR es:[rdi],dx
   140030c56:	jns    0x140030ca1
   140030c58:	fs outs dx,BYTE PTR gs:[rsi]
   140030c5b:	je     0x140030cc6
   140030c5d:	je     0x140030cd8
   140030c5f:	ds or  eax,0x65643c0a
   140030c65:	jae    0x140030cca
   140030c67:	jb     0x140030cd2
   140030c69:	jo     0x140030cdf
   140030c6b:	imul   ebp,DWORD PTR [rdi+0x6e],0x76614a3e
   140030c72:	(bad)  
   140030c73:	sub    BYTE PTR [rbp+rcx*2+0x29],dl
   140030c77:	and    BYTE PTR [rbx+0x45],dl
   140030c7a:	and    BYTE PTR [rdx+0x61],ch
   140030c7d:	jbe    0x140030ce0
   140030c7f:	and    BYTE PTR [rax+0x72],dh
   140030c82:	outs   dx,DWORD PTR ds:[rsi]
   140030c83:	movsxd esp,DWORD PTR [rbp+0x73]
   140030c86:	jae    0x140030cc4
   140030c88:	(bad)  
   140030c89:	fs gs jae 0x140030cf0
   140030c8d:	jb     0x140030cf8
   140030c8f:	jo     0x140030d05
   140030c91:	imul   ebp,DWORD PTR [rdi+0x6e],0x3c0a0d3e
   140030c98:	fs gs jo 0x140030d01
   140030c9c:	outs   dx,BYTE PTR ds:[rsi]
   140030c9d:	fs outs dx,BYTE PTR gs:[rsi]
   140030ca0:	movsxd edi,DWORD PTR [rcx+0x3e]
   140030ca3:	or     eax,0x2020200a
   140030ca8:	and    BYTE PTR [rsp+riz*2],bh
   140030cab:	gs jo  0x140030d13
   140030cae:	outs   dx,BYTE PTR ds:[rsi]
   140030caf:	fs outs dx,BYTE PTR gs:[rsi]
   140030cb2:	je     0x140030cf5
   140030cb4:	jae    0x140030d29
   140030cb6:	gs ins DWORD PTR es:[rdi],dx
   140030cb8:	(bad)  
   140030cb9:	ins    BYTE PTR es:[rdi],dx
   140030cba:	jns    0x140030cfa
   140030cbc:	or     eax,0x2020200a
   140030cc1:	and    BYTE PTR [rax],ah
   140030cc3:	and    BYTE PTR [rax],ah
   140030cc5:	and    BYTE PTR [rcx+riz*2],bh
   140030cc8:	jae    0x140030d3d
   140030cca:	gs ins DWORD PTR es:[rdi],dx
   140030ccc:	(bad)  
   140030ccd:	ins    BYTE PTR es:[rdi],dx
   140030cce:	jns    0x140030d19
   140030cd0:	fs outs dx,BYTE PTR gs:[rsi]
   140030cd3:	je     0x140030d3e
   140030cd5:	je     0x140030d50
   140030cd7:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   140030cdb:	gs cmp eax,0x6e697722
   140030ce1:	xor    esi,DWORD PTR [rdx]
   140030ce3:	and    ah,BYTE PTR [rax]
   140030ce5:	outs   dx,BYTE PTR ds:[rsi]
   140030ce6:	(bad)  
   140030ce7:	ins    DWORD PTR es:[rdi],dx
   140030ce8:	gs cmp eax,0x63694d22
   140030cee:	jb     0x140030d5f
   140030cf0:	jae    0x140030d61
   140030cf2:	data16 je 0x140030d23
   140030cf5:	push   rdi
   140030cf6:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   140030cfd:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140030cff:	ins    DWORD PTR es:[rdi],dx
   140030d00:	ins    DWORD PTR es:[rdi],dx
   140030d01:	outs   dx,DWORD PTR ds:[rsi]
   140030d02:	outs   dx,BYTE PTR ds:[rsi]
   140030d03:	sub    eax,0x746e6f43
   140030d08:	jb     0x140030d79
   140030d0a:	ins    BYTE PTR es:[rdi],dx
   140030d0b:	jae    0x140030d2f
   140030d0d:	and    BYTE PTR [rsi+0x65],dh
   140030d10:	jb     0x140030d85
   140030d12:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e36223d
   140030d19:	xor    BYTE PTR [rsi],ch
   140030d1b:	xor    BYTE PTR [rsi],ch
   140030d1d:	xor    BYTE PTR [rdx],ah
   140030d1f:	and    BYTE PTR [rax+0x72],dh
   140030d22:	outs   dx,DWORD PTR ds:[rsi]
   140030d23:	movsxd esp,DWORD PTR [rbp+0x73]
   140030d26:	jae    0x140030d97
   140030d28:	jb     0x140030d6b
   140030d2a:	jb     0x140030d8f
   140030d2c:	push   0x63657469
   140030d31:	je     0x140030da8
   140030d33:	jb     0x140030d9a
   140030d35:	cmp    eax,0x20222a22
   140030d3a:	jo     0x140030db1
   140030d3c:	(bad)  
   140030d3d:	ins    BYTE PTR es:[rdi],dx
   140030d3e:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
   140030d45:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
   140030d49:	and    dh,BYTE PTR [rsi]
   140030d4b:	xor    eax,0x36623539
   140030d50:	xor    al,0x31
   140030d52:	xor    al,0x34
   140030d54:	movsxd esp,DWORD PTR [rbx+0x66]
   140030d57:	xor    DWORD PTR [rsi+riz*2+0x22],esp
   140030d5b:	and    BYTE PTR [rcx+riz*2+0x6e],ch
   140030d5f:	addr32 jne 0x140030dc3
   140030d62:	addr32 gs cmp eax,0x3e222a22
   140030d69:	cmp    al,0x2f
   140030d6b:	(bad)  
   140030d6c:	jae    0x140030de1
   140030d6e:	gs ins DWORD PTR es:[rdi],dx
   140030d70:	(bad)  
   140030d71:	ins    BYTE PTR es:[rdi],dx
   140030d72:	jns    0x140030dbd
   140030d74:	fs outs dx,BYTE PTR gs:[rsi]
   140030d77:	je     0x140030de2
   140030d79:	je     0x140030df4
   140030d7b:	ds or  eax,0x2020200a
   140030d81:	and    BYTE PTR [rdi+rbp*1],bh
   140030d84:	fs gs jo 0x140030ded
   140030d88:	outs   dx,BYTE PTR ds:[rsi]
   140030d89:	fs outs dx,BYTE PTR gs:[rsi]
   140030d8c:	je     0x140030dcf
   140030d8e:	jae    0x140030e03
   140030d90:	gs ins DWORD PTR es:[rdi],dx
   140030d92:	(bad)  
   140030d93:	ins    BYTE PTR es:[rdi],dx
   140030d94:	jns    0x140030dd4
   140030d96:	or     eax,0x642f3c0a
   140030d9b:	gs jo  0x140030e03
   140030d9e:	outs   dx,BYTE PTR ds:[rsi]
   140030d9f:	fs outs dx,BYTE PTR gs:[rsi]
   140030da2:	movsxd edi,DWORD PTR [rcx+0x3e]
   140030da5:	or     eax,0x200a0d0a
   140030daa:	and    BYTE PTR [rip+0x3c20200a],cl        # 0x17c232dba
   140030db0:	je     0x140030e24
   140030db2:	jne    0x140030e27
   140030db4:	je     0x140030dff
   140030db6:	outs   dx,BYTE PTR ds:[rsi]
   140030db7:	outs   dx,WORD PTR ds:[rsi]
   140030db9:	and    BYTE PTR [rax+0x6d],bh
   140030dbc:	ins    BYTE PTR es:[rdi],dx
   140030dbd:	outs   dx,BYTE PTR ds:[rsi]
   140030dbe:	jae    0x140030dfd
   140030dc0:	and    dh,BYTE PTR [rbp+0x72]
   140030dc3:	outs   dx,BYTE PTR ds:[rsi]
   140030dc4:	cmp    dh,BYTE PTR [rbx+0x63]
   140030dc7:	push   0x73616d65
   140030dcc:	sub    eax,0x7263696d
   140030dd1:	outs   dx,DWORD PTR ds:[rsi]
   140030dd2:	jae    0x140030e43
   140030dd4:	data16 je 0x140030e04
   140030dd7:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140030dda:	cmp    ah,BYTE PTR [rcx+0x73]
   140030ddd:	ins    DWORD PTR es:[rdi],dx
   140030dde:	cs jbe 0x140030e14
   140030de1:	and    bh,BYTE PTR [rsi]
   140030de3:	or     eax,0x2020200a
   140030de8:	and    BYTE PTR [rbx+rsi*2],bh
   140030deb:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140030def:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   140030df7:	and    BYTE PTR [rax],ah
   140030df9:	and    BYTE PTR [rax],ah
   140030dfb:	cmp    al,0x72
   140030dfd:	gs jno 0x140030e75
   140030e00:	gs jae 0x140030e77
   140030e03:	gs fs push rax
   140030e06:	jb     0x140030e71
   140030e08:	jbe    0x140030e73
   140030e0a:	ins    BYTE PTR es:[rdi],dx
   140030e0b:	gs addr32 gs jae 0x140030e4e
   140030e10:	or     eax,0x2020200a
   140030e15:	and    BYTE PTR [rax],ah
   140030e17:	and    BYTE PTR [rax],ah
   140030e19:	and    BYTE PTR [rdx+rsi*2],bh
   140030e1c:	gs jno 0x140030e94
   140030e1f:	gs jae 0x140030e96
   140030e22:	gs fs rex.RB js 0x140030e8c
   140030e27:	movsxd esi,DWORD PTR [rbp+0x74]
   140030e2a:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   140030e31:	ins    BYTE PTR es:[rdi],dx
   140030e32:	and    BYTE PTR [rbp+riz*2+0x76],ch
   140030e36:	gs ins BYTE PTR es:[rdi],dx
   140030e38:	cmp    eax,0x49736122
   140030e3d:	outs   dx,BYTE PTR ds:[rsi]
   140030e3e:	jbe    0x140030eaf
   140030e40:	imul   esp,DWORD PTR [rbp+0x72],0x22
   140030e44:	and    BYTE PTR [rbp+0x69],dh
   140030e47:	movsxd esp,DWORD PTR [r11+0x65]
   140030e4b:	jae    0x140030ec0
   140030e4d:	cmp    eax,0x6c616622
   140030e52:	jae    0x140030eb9
   140030e54:	and    bh,BYTE PTR [rsi]
   140030e56:	cmp    al,0x2f
   140030e58:	jb     0x140030ebf
   140030e5a:	jno    0x140030ed1
   140030e5c:	gs jae 0x140030ed3
   140030e5f:	gs fs rex.RB js 0x140030ec9
   140030e64:	movsxd esi,DWORD PTR [rbp+0x74]
   140030e67:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   140030e6e:	ins    BYTE PTR es:[rdi],dx
   140030e6f:	ds or  eax,0x2020200a
   140030e75:	and    BYTE PTR [rax],ah
   140030e77:	and    BYTE PTR [rax],ah
   140030e79:	and    BYTE PTR [rdi+rbp*1],bh
   140030e7c:	jb     0x140030ee3
   140030e7e:	jno    0x140030ef5
   140030e80:	gs jae 0x140030ef7
   140030e83:	gs fs push rax
   140030e86:	jb     0x140030ef1
   140030e88:	jbe    0x140030ef3
   140030e8a:	ins    BYTE PTR es:[rdi],dx
   140030e8b:	gs addr32 gs jae 0x140030ece
   140030e90:	or     eax,0x2020200a
   140030e95:	and    BYTE PTR [rax],ah
   140030e97:	and    BYTE PTR [rax],ah
   140030e99:	cmp    al,0x2f
   140030e9b:	jae    0x140030f02
   140030e9d:	movsxd esi,DWORD PTR [rbp+0x72]
   140030ea0:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   140030ea8:	cmp    al,0x2f
   140030eaa:	je     0x140030f1e
   140030eac:	jne    0x140030f21
   140030eae:	je     0x140030ef9
   140030eb0:	outs   dx,BYTE PTR ds:[rsi]
   140030eb1:	outs   dx,WORD PTR ds:[rsi]
   140030eb3:	ds or  eax,0x200a0d0a
   140030eb9:	and    BYTE PTR [rip+0x3c20200a],cl        # 0x17c232ec9
   140030ebf:	(bad)  
   140030ec0:	jae    0x140030f2f
   140030ec2:	jbe    0x140030ef7
   140030ec4:	cmp    ah,BYTE PTR [rcx+0x70]
   140030ec7:	jo     0x140030f35
   140030ec9:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140030ed0:	ds or  eax,0x2020200a
   140030ed6:	and    BYTE PTR [rcx+riz*2],bh
   140030ed9:	jae    0x140030f48
   140030edb:	jbe    0x140030f10
   140030edd:	cmp    dh,BYTE PTR [rdi+0x69]
   140030ee0:	outs   dx,BYTE PTR ds:[rsi]
   140030ee1:	outs   dx,DWORD PTR fs:[rsi]
   140030ee3:	ja     0x140030f58
   140030ee5:	push   rbx
   140030ee6:	gs je  0x140030f5d
   140030ee9:	imul   ebp,DWORD PTR [rsi+0x67],0x6d782073
   140030ef0:	ins    BYTE PTR es:[rdi],dx
   140030ef1:	outs   dx,BYTE PTR ds:[rsi]
   140030ef2:	jae    0x140030f31
   140030ef4:	and    ch,BYTE PTR [rax+0x74]
   140030ef7:	je     0x140030f69
   140030ef9:	cmp    ch,BYTE PTR [rdi]
   140030efb:	(bad)  
   140030efc:	jae    0x140030f61
   140030efe:	push   0x73616d65
   140030f03:	cs ins DWORD PTR es:[rdi],dx
   140030f05:	imul   esp,DWORD PTR [rbx+0x72],0x666f736f
   140030f0c:	je     0x140030f3c
   140030f0e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140030f11:	(bad)  
   140030f12:	push   rbx
   140030f13:	rex.WRB
   140030f14:	rex.WB (bad) 
   140030f16:	xor    dh,BYTE PTR [rax]
   140030f18:	xor    BYTE PTR [rip+0x6e69572f],dh        # 0x1ae6c664d
   140030f1e:	outs   dx,DWORD PTR fs:[rsi]
   140030f20:	ja     0x140030f95
   140030f22:	push   rbx
   140030f23:	gs je  0x140030f9a
   140030f26:	imul   ebp,DWORD PTR [rsi+0x67],0xd3e2273
   140030f2d:	or     ah,BYTE PTR [rax]
   140030f2f:	and    BYTE PTR [rax],ah
   140030f31:	and    BYTE PTR [rax],ah
   140030f33:	and    BYTE PTR [rax],ah
   140030f35:	cmp    al,0x64
   140030f37:	jo     0x140030fa2
   140030f39:	rex.B ja 0x140030f9d
   140030f3c:	jb     0x140030fa3
   140030f3e:	ds je  0x140030fb3
   140030f41:	jne    0x140030fa8
   140030f43:	cmp    al,0x2f
   140030f45:	fs jo  0x140030fb1
   140030f48:	rex.B ja 0x140030fac
   140030f4b:	jb     0x140030fb2
   140030f4d:	ds or  eax,0x2020200a
   140030f53:	and    BYTE PTR [rdi+rbp*1],bh
   140030f56:	(bad)  
   140030f57:	jae    0x140030fc6
   140030f59:	jbe    0x140030f8e
   140030f5b:	cmp    dh,BYTE PTR [rdi+0x69]
   140030f5e:	outs   dx,BYTE PTR ds:[rsi]
   140030f5f:	outs   dx,DWORD PTR fs:[rsi]
   140030f61:	ja     0x140030fd6
   140030f63:	push   rbx
   140030f64:	gs je  0x140030fdb
   140030f67:	imul   ebp,DWORD PTR [rsi+0x67],0xa0d3e73
   140030f6e:	and    BYTE PTR [rax],ah
   140030f70:	cmp    al,0x2f
   140030f72:	(bad)  
   140030f73:	jae    0x140030fe2
   140030f75:	jbe    0x140030faa
   140030f77:	cmp    ah,BYTE PTR [rcx+0x70]
   140030f7a:	jo     0x140030fe8
   140030f7c:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140030f83:	ds or  eax,0x200a0d0a
   140030f89:	and    BYTE PTR [rip+0x2020200a],cl        # 0x160232f99
   140030f8f:	cmp    al,0x63
   140030f91:	outs   dx,DWORD PTR ds:[rsi]
   140030f92:	ins    DWORD PTR es:[rdi],dx
   140030f93:	jo     0x140030ff6
   140030f95:	je     0x140031000
   140030f97:	(bad)  
   140030f98:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x6d782079
   140030fa0:	ins    BYTE PTR es:[rdi],dx
   140030fa1:	outs   dx,BYTE PTR ds:[rsi]
   140030fa2:	jae    0x140030fe1
   140030fa4:	and    dh,BYTE PTR [rbp+0x72]
   140030fa7:	outs   dx,BYTE PTR ds:[rsi]
   140030fa8:	cmp    dh,BYTE PTR [rbx+0x63]
   140030fab:	push   0x73616d65
   140030fb0:	sub    eax,0x7263696d
   140030fb5:	outs   dx,DWORD PTR ds:[rsi]
   140030fb6:	jae    0x140031027
   140030fb8:	data16 je 0x140030fe8
   140030fbb:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140030fbe:	cmp    ah,BYTE PTR [rbx+0x6f]
   140030fc1:	ins    DWORD PTR es:[rdi],dx
   140030fc2:	jo     0x140031025
   140030fc4:	je     0x14003102f
   140030fc6:	(bad)  
   140030fc7:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x31762e79
   140030fcf:	and    bh,BYTE PTR [rsi]
   140030fd1:	or     eax,0x2020200a
   140030fd6:	and    BYTE PTR [rax],ah
   140030fd8:	and    BYTE PTR [rcx+riz*2],bh
   140030fdb:	jo     0x14003104d
   140030fdd:	ins    BYTE PTR es:[rdi],dx
   140030fde:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140030fe5:	ds or  eax,0x2020200a
   140030feb:	and    BYTE PTR [rax],ah
   140030fed:	and    BYTE PTR [rax],ah
   140030fef:	and    BYTE PTR [rip+0x2020200a],cl        # 0x160232fff
   140030ff5:	and    BYTE PTR [rax],ah
   140030ff7:	and    BYTE PTR [rax],ah
   140030ff9:	and    BYTE PTR [rbx+rsi*2],bh
   140030ffc:	jne    0x14003106e
   140030ffe:	jo     0x14003106f
   140031000:	jb     0x140031076
   140031002:	gs fs rex.WRXB push r11
   140031006:	and    BYTE PTR [rcx+0x64],cl
   140031009:	cmp    eax,0x32657b22
   14003100e:	xor    BYTE PTR [rcx],dh
   140031010:	xor    DWORD PTR [rsi*1+0x35312d37],esi
   140031017:	xor    al,0x36
   140031019:	sub    eax,0x35633334
   14003101e:	sub    eax,0x65663561
   140031023:	sub    eax,0x64383030
   140031028:	gs gs xor esp,DWORD PTR gs:[rbx+rsi*1+0x66]
   14003102f:	xor    BYTE PTR [rbp+0x22],bh
   140031032:	ds cmp al,0x2f
   140031035:	jae    0x1400310ac
   140031037:	jo     0x1400310a9
   140031039:	outs   dx,DWORD PTR ds:[rsi]
   14003103a:	jb     0x1400310b0
   14003103c:	gs fs rex.WRXB push r11
   140031040:	ds or  eax,0x2020200a
   140031046:	and    BYTE PTR [rax],ah
   140031048:	and    BYTE PTR [rax],ah
   14003104a:	and    BYTE PTR [rip+0x2020200a],cl        # 0x16023305a
   140031050:	and    BYTE PTR [rax],ah
   140031052:	and    BYTE PTR [rax],ah
   140031054:	and    BYTE PTR [rbx+rsi*2],bh
   140031057:	jne    0x1400310c9
   140031059:	jo     0x1400310ca
   14003105b:	jb     0x1400310d1
   14003105d:	gs fs rex.WRXB push r11
   140031061:	and    BYTE PTR [rcx+0x64],cl
   140031064:	cmp    eax,0x35337b22
   140031069:	xor    DWORD PTR [rbx],esi
   14003106b:	cmp    BYTE PTR [rdx+0x39],ah
   14003106e:	(bad)  
   14003106f:	sub    eax,0x36396435
   140031074:	sub    eax,0x64626634
   140031079:	sub    eax,0x64326538
   14003107e:	sub    eax,0x34343261
   140031083:	xor    BYTE PTR [rdx],dh
   140031085:	xor    dh,BYTE PTR [rip+0x61333966]        # 0x1a13649f1
   14003108b:	jge    0x1400310af
   14003108d:	ds cmp al,0x2f
   140031090:	jae    0x140031107
   140031092:	jo     0x140031104
   140031094:	outs   dx,DWORD PTR ds:[rsi]
   140031095:	jb     0x14003110b
   140031097:	gs fs rex.WRXB push r11
   14003109b:	ds or  eax,0x2020200a
   1400310a1:	and    BYTE PTR [rax],ah
   1400310a3:	and    BYTE PTR [rax],ah
   1400310a5:	and    BYTE PTR [rip+0x2020200a],cl        # 0x1602330b5
   1400310ab:	and    BYTE PTR [rax],ah
   1400310ad:	and    BYTE PTR [rax],ah
   1400310af:	and    BYTE PTR [rbx+rsi*2],bh
   1400310b2:	jne    0x140031124
   1400310b4:	jo     0x140031125
   1400310b6:	jb     0x14003112c
   1400310b8:	gs fs rex.WRXB push r11
   1400310bc:	and    BYTE PTR [rcx+0x64],cl
   1400310bf:	cmp    eax,0x61347b22
   1400310c4:	xor    ah,BYTE PTR [rsi+0x32]
   1400310c7:	cmp    BYTE PTR [rbp+0x33],ah
   1400310ca:	sub    eax,0x39623335
   1400310cf:	sub    eax,0x31343434
   1400310d4:	sub    eax,0x63396162
   1400310d9:	sub    eax,0x64393664
   1400310de:	xor    al,0x61
   1400310e0:	xor    al,0x61
   1400310e2:	ss xor edi,DWORD PTR gs:[rax]
   1400310e6:	jge    0x14003110a
   1400310e8:	ds cmp al,0x2f
   1400310eb:	jae    0x140031162
   1400310ed:	jo     0x14003115f
   1400310ef:	outs   dx,DWORD PTR ds:[rsi]
   1400310f0:	jb     0x140031166
   1400310f2:	gs fs rex.WRXB push r11
   1400310f6:	ds or  eax,0x2020200a
   1400310fc:	and    BYTE PTR [rax],ah
   1400310fe:	and    BYTE PTR [rax],ah
   140031100:	and    BYTE PTR [rip+0x2020200a],cl        # 0x160233110
   140031106:	and    BYTE PTR [rax],ah
   140031108:	and    BYTE PTR [rax],ah
   14003110a:	and    BYTE PTR [rbx+rsi*2],bh
   14003110d:	jne    0x14003117f
   14003110f:	jo     0x140031180
   140031111:	jb     0x140031187
   140031113:	gs fs rex.WRXB push r11
   140031117:	and    BYTE PTR [rcx+0x64],cl
   14003111a:	cmp    eax,0x66317b22
   14003111f:	ss (bad) 
   140031121:	movsxd esi,DWORD PTR ss:[rdi]
   140031124:	ss sub eax,0x31653038
   14003112a:	sub    eax,0x39333234
   14003112f:	sub    eax,0x62623539
   140031134:	sub    eax,0x30643338
   140031139:	data16 ss xor BYTE PTR fs:[rcx+riz*2+0x37],ah
   140031140:	cmp    BYTE PTR [rbp+0x22],bh
   140031143:	ds cmp al,0x2f
   140031146:	jae    0x1400311bd
   140031148:	jo     0x1400311ba
   14003114a:	outs   dx,DWORD PTR ds:[rsi]
   14003114b:	jb     0x1400311c1
   14003114d:	gs fs rex.WRXB push r11
   140031151:	ds or  eax,0x2020200a
   140031157:	and    BYTE PTR [rax],ah
   140031159:	and    BYTE PTR [rdi+rbp*1],bh
   14003115c:	(bad)  
   14003115d:	jo     0x1400311cf
   14003115f:	ins    BYTE PTR es:[rdi],dx
   140031160:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140031167:	ds or  eax,0x2020200a
   14003116d:	cmp    al,0x2f
   14003116f:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140031172:	jo     0x1400311d5
   140031174:	je     0x1400311df
   140031176:	(bad)  
   140031177:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0xa0d3e79
   14003117f:	or     eax,0x612f3c0a
   140031184:	jae    0x1400311f9
   140031186:	gs ins DWORD PTR es:[rdi],dx
   140031188:	.byte 0x62
   140031189:	ins    BYTE PTR es:[rdi],dx
   14003118a:	jns    0x1400311ca

Disassembly of section .reloc:

0000000140032000 <.reloc>:
   140032000:	add    BYTE PTR [rax+0x140001],ah
   140032006:	add    BYTE PTR [rax],al
   140032008:	jo     0x140031fad
   14003200a:	js     0x140031faf
   14003200c:	and    BYTE PTR [rbx-0x5c5f5c78],0xa8
   140032013:	movabs ds:0x1c0001c000,eax
   14003201c:	nop
   14003201d:	test   al,0x98
   14003201f:	test   al,0xa0
   140032021:	test   al,0xa8
   140032023:	test   al,0xb0
   140032025:	test   al,0xb8
   140032027:	test   al,0xc0
   140032029:	test   al,0xc8
   14003202b:	test   al,0xd0
   14003202d:	test   al,0xd8
   14003202f:	test   al,0x0
   140032031:	lock add DWORD PTR [rax],eax
   140032034:	cmp    BYTE PTR [rax],al
   140032036:	add    BYTE PTR [rax],al
   140032038:	push   0xffffffff88a378a3
   14003203d:	movabs ds:0xa3c8a3b8a3a8a398,eax
   140032046:	fsub   DWORD PTR [rbx-0x5c075c18]
   14003204c:	or     BYTE PTR [rax+rbx*1+0x38a428a4],ah
   140032053:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140032054:	rex.W movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140032056:	pop    rax
   140032057:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140032058:	push   0xffffffff88a478a4
   14003205d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003205e:	cwde   
   14003205f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140032060:	test   al,0xa4
   140032062:	mov    eax,0xd8a6d0a4
   140032067:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140032068:	add    BYTE PTR [rax],dh
   14003206a:	add    al,BYTE PTR [rax]
   14003206c:	mov    esp,0x0
   140032071:	movabs al,ds:0xa020a018a010a008
   14003207a:	sub    BYTE PTR [rax-0x5fc75fd0],ah
   140032080:	movabs al,ds:0xa060a058a050a048
   14003208a:	push   0xffffffff80a070a0
   14003208f:	movabs al,ds:0xa0a0a098a090a088
   140032098:	test   al,0xa0
   14003209a:	mov    al,0xa0
   14003209c:	shl    BYTE PTR [rax-0x57af5f20],1
   1400320a2:	pop    rax
   1400320a3:	test   al,0x60
   1400320a5:	test   al,0x68
   1400320a7:	test   al,0x70
   1400320a9:	test   al,0x78
   1400320ab:	test   al,0x80
   1400320ad:	test   al,0x88
   1400320af:	test   al,0x90
   1400320b1:	test   al,0x98
   1400320b3:	test   al,0xa0
   1400320b5:	test   al,0xa8
   1400320b7:	test   al,0x10
   1400320b9:	test   eax,0xa920a918
   1400320be:	sub    BYTE PTR [rcx-0x56c756d0],ch
   1400320c4:	rex test eax,0xa950a948
   1400320ca:	pop    rax
   1400320cb:	test   eax,0xa968a960
   1400320d0:	jo     0x14003207b
   1400320d2:	js     0x14003207d
   1400320d4:	sub    BYTE PTR [rcx-0x566f5678],0x98
   1400320db:	test   eax,0xa9a8a9a0
   1400320e0:	mov    al,0xa9
   1400320e2:	mov    eax,0xc8a9c0a9
   1400320e7:	test   eax,0xa9d8a9d0
   1400320ec:	loopne 0x140032097
   1400320ee:	call   0x138ad119c
   1400320f3:	test   eax,0xaa08aa00
   1400320f8:	adc    BYTE PTR [rdx-0x55df55e8],ch
   1400320fe:	sub    BYTE PTR [rdx-0x55c755d0],ch
   140032104:	stos   BYTE PTR es:[rdi],al
   140032106:	rex.W stos BYTE PTR es:[rdi],al
   140032108:	push   rax
   140032109:	stos   BYTE PTR es:[rdi],al
   14003210a:	pop    rax
   14003210b:	stos   BYTE PTR es:[rdi],al
   14003210c:	(bad)  
   14003210d:	stos   BYTE PTR es:[rdi],al
   14003210e:	push   0xffffffffc0aeb0aa
   140032113:	scas   eax,DWORD PTR es:[rdi]
   140032114:	enter  0xd0af,0xaf
   140032118:	fsubr  DWORD PTR [rdi-0x50175020]
   14003211e:	lock scas eax,DWORD PTR es:[rdi]
   140032120:	clc    
   140032121:	scas   eax,DWORD PTR es:[rdi]
   140032122:	add    BYTE PTR [rax],al
   140032124:	add    BYTE PTR [rax+0x2],al
   140032127:	add    al,dh
   140032129:	add    BYTE PTR [rax],al
   14003212b:	add    BYTE PTR [rax],al
   14003212d:	movabs al,ds:0xa020a018a010a008
   140032136:	sub    BYTE PTR [rax-0x5fc75fd0],ah
   14003213c:	movabs al,ds:0xa060a058a050a048
   140032146:	push   0x78a070a0
   14003214b:	movabs al,ds:0xa098a090a088a080
   140032154:	movabs al,ds:0xc0a0b8a0b0a0a8a0
   14003215d:	movabs al,ds:0xa0e0a0d8a0d0a0c8
   140032166:	call   0x138a4120b
   14003216b:	movabs al,ds:0xa128a110a108a100
   140032174:	xor    BYTE PTR [rcx-0x5ebf5ec8],ah
   14003217a:	movabs rax,ds:0xa168a160a158a150
   140032184:	jo     0x140032127
   140032186:	js     0x140032129
   140032188:	and    BYTE PTR [rcx-0x5e6f5e78],0x98
   14003218f:	movabs eax,ds:0xa1b8a1b0a1a8a1a0
   140032198:	shl    BYTE PTR [rcx-0x5e2f5e38],0xd8
   14003219f:	movabs eax,ds:0xa1f8a1f0a1e8a1e0
   1400321a8:	add    BYTE PTR [rdx-0x5def5df8],ah
   1400321ae:	sbb    BYTE PTR [rdx-0x5dd75de0],ah
   1400321b4:	xor    BYTE PTR [rdx-0x5dbf5dc8],ah
   1400321ba:	rex.W movabs ds:0xa268a260a258a250,al
   1400321c4:	jo     0x140032168
   1400321c6:	js     0x14003216a
   1400321c8:	call   0x168a62a6f
   1400321cd:	movabs ds:0xa3c0a3a8a368a348,eax
   1400321d6:	enter  0xd0a3,0xa3
   1400321da:	fsub   DWORD PTR [rbx-0x5c175c20]
   1400321e0:	lock movabs ds:0xa648a5c8a5c0a3f8,eax
   1400321ea:	push   rax
   1400321eb:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400321ec:	pop    rax
   1400321ed:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400321ee:	(bad)  
   1400321ef:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400321f0:	push   0x78a670a6
   1400321f5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400321f6:	and    BYTE PTR [rsi-0x596f5978],0x98
   1400321fd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400321fe:	test   al,0xa6
   140032200:	mov    al,0xa6
   140032202:	mov    eax,0xc8a6c0a6
   140032207:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140032208:	shl    BYTE PTR [rsi-0x591f5928],1
   14003220e:	call   0x140aa12b9
	...
