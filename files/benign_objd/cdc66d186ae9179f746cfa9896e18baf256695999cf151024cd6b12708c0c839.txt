
cdc66d186ae9179f746cfa9896e18baf256695999cf151024cd6b12708c0c839.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	mov    QWORD PTR [rsp+0x8],rbx
   140001005:	push   rdi
   140001006:	sub    rsp,0x70
   14000100a:	lea    rcx,[rip+0x19467]        # 0x14001a478
   140001011:	call   0x140009d94
   140001016:	test   rax,rax
   140001019:	je     0x14000105a
   14000101b:	lea    rcx,[rip+0x19436]        # 0x14001a458
   140001022:	call   0x140009c2c
   140001027:	xor    ebx,ebx
   140001029:	cmp    DWORD PTR [rip+0x23955],ebx        # 0x140024984
   14000102f:	jle    0x14000105a
   140001031:	xor    edi,edi
   140001033:	mov    r8,QWORD PTR [rip+0x2394e]        # 0x140024988
   14000103a:	lea    rcx,[rip+0x193ff]        # 0x14001a440
   140001041:	mov    edx,ebx
   140001043:	mov    r8,QWORD PTR [rdi+r8*1]
   140001047:	call   0x140009c2c
   14000104c:	inc    ebx
   14000104e:	add    rdi,0x8
   140001052:	cmp    ebx,DWORD PTR [rip+0x2392c]        # 0x140024984
   140001058:	jl     0x140001033
   14000105a:	call   QWORD PTR [rip+0x18fe0]        # 0x14001a040
   140001060:	mov    rcx,rax
   140001063:	call   0x140003f4c
   140001068:	call   0x140003f3c
   14000106d:	movsxd rdi,eax
   140001070:	lea    ecx,[rdi+0x1]
   140001073:	movsxd rcx,ecx
   140001076:	shl    rcx,0x3
   14000107a:	call   0x140003ff0
   14000107f:	mov    rbx,rax
   140001082:	call   0x140003f44
   140001087:	xor    r9d,r9d
   14000108a:	xor    edx,edx
   14000108c:	test   edi,edi
   14000108e:	jle    0x1400010a6
   140001090:	mov    r9d,edi
   140001093:	mov    rcx,QWORD PTR [rax]
   140001096:	add    rax,0x10
   14000109a:	mov    QWORD PTR [rbx+rdx*8],rcx
   14000109e:	inc    rdx
   1400010a1:	cmp    rdx,rdi
   1400010a4:	jl     0x140001093
   1400010a6:	mov    rdx,QWORD PTR [rip+0x21f73]        # 0x140023020
   1400010ad:	movsxd rax,r9d
   1400010b0:	and    QWORD PTR [rbx+rax*8],0x0
   1400010b5:	test   rdx,rdx
   1400010b8:	jne    0x1400010bd
   1400010ba:	mov    rdx,QWORD PTR [rbx]
   1400010bd:	mov    rcx,QWORD PTR [rip+0x21f54]        # 0x140023018
   1400010c4:	test   rcx,rcx
   1400010c7:	jne    0x1400010cc
   1400010c9:	mov    rcx,QWORD PTR [rbx]
   1400010cc:	mov    r9,QWORD PTR [rip+0x2364d]        # 0x140024720
   1400010d3:	mov    r8d,0x1
   1400010d9:	test   r9,r9
   1400010dc:	setne  al
   1400010df:	and    DWORD PTR [rsp+0x68],0x0
   1400010e4:	mov    BYTE PTR [rsp+0x60],0x0
   1400010e9:	mov    BYTE PTR [rsp+0x58],0x1
   1400010ee:	mov    BYTE PTR [rsp+0x50],al
   1400010f2:	mov    QWORD PTR [rsp+0x48],rdx
   1400010f7:	mov    QWORD PTR [rsp+0x40],rcx
   1400010fc:	lea    rax,[rip+0x19335]        # 0x14001a438
   140001103:	mov    rdx,rbx
   140001106:	mov    QWORD PTR [rsp+0x38],rax
   14000110b:	lea    rax,[rip+0x19316]        # 0x14001a428
   140001112:	mov    ecx,edi
   140001114:	mov    QWORD PTR [rsp+0x30],rax
   140001119:	mov    rax,QWORD PTR [rip+0x23608]        # 0x140024728
   140001120:	mov    QWORD PTR [rsp+0x28],rax
   140001125:	mov    DWORD PTR [rsp+0x20],0x1
   14000112d:	call   0x140003870
   140001132:	mov    rbx,QWORD PTR [rsp+0x80]
   14000113a:	add    rsp,0x70
   14000113e:	pop    rdi
   14000113f:	ret    
   140001140:	mov    QWORD PTR [rsp+0x8],rbx
   140001145:	push   rdi
   140001146:	sub    rsp,0x20
   14000114a:	and    QWORD PTR [rsp+0x40],0x0
   140001150:	mov    rdi,rdx
   140001153:	mov    rbx,rcx
   140001156:	call   0x140004d7c
   14000115b:	lea    r8,[rsp+0x40]
   140001160:	mov    rcx,rbx
   140001163:	mov    rdx,rax
   140001166:	call   0x14000a0f0
   14000116b:	cmp    eax,0x1
   14000116e:	je     0x140001182
   140001170:	xor    eax,eax
   140001172:	jmp    0x1400011ff
   140001177:	cmp    al,0x30
   140001179:	jl     0x140001188
   14000117b:	cmp    al,0x39
   14000117d:	jg     0x140001188
   14000117f:	inc    rbx
   140001182:	mov    al,BYTE PTR [rbx]
   140001184:	test   al,al
   140001186:	jne    0x140001177
   140001188:	mov    rcx,rbx
   14000118b:	call   0x140009fa0
   140001190:	cmp    rax,0x1
   140001194:	ja     0x140001170
   140001196:	cmp    BYTE PTR [rbx],0x0
   140001199:	je     0x1400011f2
   14000119b:	cmp    BYTE PTR [rbx],0x47
   14000119e:	je     0x1400011e7
   1400011a0:	cmp    BYTE PTR [rbx],0x4b
   1400011a3:	je     0x1400011dc
   1400011a5:	cmp    BYTE PTR [rbx],0x4d
   1400011a8:	je     0x1400011d1
   1400011aa:	cmp    BYTE PTR [rbx],0x54
   1400011ad:	je     0x1400011c3
   1400011af:	cmp    BYTE PTR [rbx],0x67
   1400011b2:	je     0x1400011e7
   1400011b4:	cmp    BYTE PTR [rbx],0x6b
   1400011b7:	je     0x1400011dc
   1400011b9:	cmp    BYTE PTR [rbx],0x6d
   1400011bc:	je     0x1400011d1
   1400011be:	cmp    BYTE PTR [rbx],0x74
   1400011c1:	jne    0x140001170
   1400011c3:	mov    rcx,QWORD PTR [rsp+0x40]
   1400011c8:	shl    rcx,0x28
   1400011cc:	mov    QWORD PTR [rdi],rcx
   1400011cf:	jmp    0x1400011fa
   1400011d1:	mov    rax,QWORD PTR [rsp+0x40]
   1400011d6:	shl    rax,0x14
   1400011da:	jmp    0x1400011f7
   1400011dc:	mov    rax,QWORD PTR [rsp+0x40]
   1400011e1:	shl    rax,0xa
   1400011e5:	jmp    0x1400011f7
   1400011e7:	mov    rax,QWORD PTR [rsp+0x40]
   1400011ec:	shl    rax,0x1e
   1400011f0:	jmp    0x1400011f7
   1400011f2:	mov    rax,QWORD PTR [rsp+0x40]
   1400011f7:	mov    QWORD PTR [rdi],rax
   1400011fa:	mov    eax,0x1
   1400011ff:	mov    rbx,QWORD PTR [rsp+0x30]
   140001204:	add    rsp,0x20
   140001208:	pop    rdi
   140001209:	ret    
   14000120a:	int3   
   14000120b:	int3   
   14000120c:	mov    QWORD PTR [rsp+0x10],rbx
   140001211:	mov    QWORD PTR [rsp+0x18],rsi
   140001216:	push   rdi
   140001217:	sub    rsp,0x20
   14000121b:	mov    eax,DWORD PTR [rip+0x23513]        # 0x140024734
   140001221:	mov    rbx,rcx
   140001224:	mov    ecx,DWORD PTR [rip+0x23506]        # 0x140024730
   14000122a:	mov    rsi,rdx
   14000122d:	cmp    ecx,eax
   14000122f:	jl     0x1400012a7
   140001231:	cmp    QWORD PTR [rip+0x23507],0x0        # 0x140024740
   140001239:	jne    0x140001261
   14000123b:	mov    ecx,0x40
   140001240:	mov    DWORD PTR [rip+0x234ea],0x4        # 0x140024734
   14000124a:	call   0x140003ff0
   14000124f:	mov    rdi,rax
   140001252:	mov    QWORD PTR [rip+0x234e7],rax        # 0x140024740
   140001259:	mov    ecx,DWORD PTR [rip+0x234d1]        # 0x140024730
   14000125f:	jmp    0x1400012ae
   140001261:	add    eax,eax
   140001263:	movsxd rcx,eax
   140001266:	mov    DWORD PTR [rip+0x234c8],eax        # 0x140024734
   14000126c:	shl    rcx,0x4
   140001270:	call   0x140003ff0
   140001275:	movsxd r8,DWORD PTR [rip+0x234b4]        # 0x140024730
   14000127c:	mov    rdx,QWORD PTR [rip+0x234bd]        # 0x140024740
   140001283:	shl    r8,0x4
   140001287:	mov    rcx,rax
   14000128a:	mov    rdi,rax
   14000128d:	call   0x14000a140
   140001292:	mov    rcx,QWORD PTR [rip+0x234a7]        # 0x140024740
   140001299:	call   0x140004074
   14000129e:	mov    QWORD PTR [rip+0x2349b],rdi        # 0x140024740
   1400012a5:	jmp    0x140001259
   1400012a7:	mov    rdi,QWORD PTR [rip+0x23492]        # 0x140024740
   1400012ae:	movsxd rax,ecx
   1400012b1:	inc    ecx
   1400012b3:	lea    rdx,[rip+0x19206]        # 0x14001a4c0
   1400012ba:	add    rax,rax
   1400012bd:	mov    DWORD PTR [rip+0x2346d],ecx        # 0x140024730
   1400012c3:	mov    rcx,rbx
   1400012c6:	mov    QWORD PTR [rdi+rax*8],rbx
   1400012ca:	mov    QWORD PTR [rdi+rax*8+0x8],rsi
   1400012cf:	call   0x1400040e8
   1400012d4:	test   eax,eax
   1400012d6:	jne    0x1400012fc
   1400012d8:	lea    rcx,[rbx+0x4]
   1400012dc:	lea    rdx,[rsp+0x30]
   1400012e1:	call   0x140001140
   1400012e6:	mov    rcx,QWORD PTR [rip+0x234ab]        # 0x140024798
   1400012ed:	test   eax,eax
   1400012ef:	cmovne rcx,QWORD PTR [rsp+0x30]
   1400012f5:	mov    QWORD PTR [rip+0x2349c],rcx        # 0x140024798
   1400012fc:	lea    rdx,[rip+0x191b5]        # 0x14001a4b8
   140001303:	mov    rcx,rbx
   140001306:	call   0x1400040e8
   14000130b:	test   eax,eax
   14000130d:	jne    0x140001333
   14000130f:	lea    rcx,[rbx+0x4]
   140001313:	lea    rdx,[rsp+0x30]
   140001318:	call   0x140001140
   14000131d:	mov    rcx,QWORD PTR [rip+0x2347c]        # 0x1400247a0
   140001324:	test   eax,eax
   140001326:	cmovne rcx,QWORD PTR [rsp+0x30]
   14000132c:	mov    QWORD PTR [rip+0x2346d],rcx        # 0x1400247a0
   140001333:	lea    rdx,[rip+0x19176]        # 0x14001a4b0
   14000133a:	mov    rcx,rbx
   14000133d:	call   0x1400040e8
   140001342:	test   eax,eax
   140001344:	jne    0x14000136a
   140001346:	lea    rcx,[rbx+0x4]
   14000134a:	lea    rdx,[rsp+0x30]
   14000134f:	call   0x140001140
   140001354:	mov    rcx,QWORD PTR [rip+0x2344d]        # 0x1400247a8
   14000135b:	test   eax,eax
   14000135d:	cmovne rcx,QWORD PTR [rsp+0x30]
   140001363:	mov    QWORD PTR [rip+0x2343e],rcx        # 0x1400247a8
   14000136a:	mov    rbx,QWORD PTR [rsp+0x38]
   14000136f:	mov    rsi,QWORD PTR [rsp+0x40]
   140001374:	add    rsp,0x20
   140001378:	pop    rdi
   140001379:	ret    
   14000137a:	int3   
   14000137b:	int3   
   14000137c:	test   rcx,rcx
   14000137f:	je     0x1400013e7
   140001381:	mov    QWORD PTR [rsp+0x8],rbx
   140001386:	mov    QWORD PTR [rsp+0x10],rsi
   14000138b:	push   rdi
   14000138c:	sub    rsp,0x20
   140001390:	mov    rdi,rcx
   140001393:	call   0x140006160
   140001398:	mov    rcx,rax
   14000139b:	mov    rsi,rax
   14000139e:	call   0x140009fa0
   1400013a3:	lea    rcx,[rax+0x13]
   1400013a7:	call   0x140003ff0
   1400013ac:	lea    rdx,[rip+0x190e5]        # 0x14001a498
   1400013b3:	mov    r8,rsi
   1400013b6:	mov    rcx,rax
   1400013b9:	mov    rbx,rax
   1400013bc:	call   0x14000a474
   1400013c1:	xor    edx,edx
   1400013c3:	mov    rcx,rbx
   1400013c6:	call   0x14000120c
   1400013cb:	cmp    rsi,rdi
   1400013ce:	je     0x1400013d8
   1400013d0:	mov    rcx,rsi
   1400013d3:	call   0x140004074
   1400013d8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400013dd:	mov    rsi,QWORD PTR [rsp+0x38]
   1400013e2:	add    rsp,0x20
   1400013e6:	pop    rdi
   1400013e7:	ret    
   1400013e8:	sub    rsp,0x28
   1400013ec:	mov    rax,QWORD PTR [rip+0x233bd]        # 0x1400247b0
   1400013f3:	test   rax,rax
   1400013f6:	jne    0x14000141e
   1400013f8:	lea    rdx,[rip+0x191c1]        # 0x14001a5c0
   1400013ff:	call   0x140004d84
   140001404:	mov    QWORD PTR [rip+0x233a5],rax        # 0x1400247b0
   14000140b:	test   rax,rax
   14000140e:	jne    0x14000141e
   140001410:	lea    rcx,[rip+0x19159]        # 0x14001a570
   140001417:	call   0x140004360
   14000141c:	xor    eax,eax
   14000141e:	add    rsp,0x28
   140001422:	ret    
   140001423:	int3   
   140001424:	mov    rax,rsp
   140001427:	mov    QWORD PTR [rax+0x8],rbx
   14000142b:	mov    QWORD PTR [rax+0x10],rbp
   14000142f:	mov    QWORD PTR [rax+0x18],rsi
   140001433:	mov    QWORD PTR [rax+0x20],rdi
   140001437:	push   r12
   140001439:	sub    rsp,0x30
   14000143d:	mov    rdi,rcx
   140001440:	mov    rcx,rdx
   140001443:	mov    rbx,rdx
   140001446:	call   0x140009fa0
   14000144b:	mov    rcx,rdi
   14000144e:	mov    r12,rax
   140001451:	call   0x1400013e8
   140001456:	mov    rbp,rax
   140001459:	test   rax,rax
   14000145c:	jne    0x140001487
   14000145e:	lea    rcx,[rip+0x1910b]        # 0x14001a570
   140001465:	call   0x140004360
   14000146a:	xor    eax,eax
   14000146c:	mov    rbx,QWORD PTR [rsp+0x40]
   140001471:	mov    rbp,QWORD PTR [rsp+0x48]
   140001476:	mov    rsi,QWORD PTR [rsp+0x50]
   14000147b:	mov    rdi,QWORD PTR [rsp+0x58]
   140001480:	add    rsp,0x30
   140001484:	pop    r12
   140001486:	ret    
   140001487:	test   rbx,rbx
   14000148a:	je     0x14000146a
   14000148c:	mov    rax,QWORD PTR [rdi]
   14000148f:	mov    edx,r12d
   140001492:	mov    rcx,rdi
   140001495:	call   QWORD PTR [rax+0x580]
   14000149b:	mov    rsi,rax
   14000149e:	test   rax,rax
   1400014a1:	je     0x14000146a
   1400014a3:	mov    r10,QWORD PTR [rdi]
   1400014a6:	mov    r9d,r12d
   1400014a9:	xor    r8d,r8d
   1400014ac:	mov    rdx,rax
   1400014af:	mov    rcx,rdi
   1400014b2:	mov    QWORD PTR [rsp+0x20],rbx
   1400014b7:	call   QWORD PTR [r10+0x680]
   1400014be:	mov    r11,QWORD PTR [rdi]
   1400014c1:	mov    rcx,rdi
   1400014c4:	call   QWORD PTR [r11+0x78]
   1400014c8:	test   rax,rax
   1400014cb:	jne    0x14000146a
   1400014cd:	mov    r8,QWORD PTR [rip+0x232e4]        # 0x1400247b8
   1400014d4:	test   r8,r8
   1400014d7:	jne    0x140001509
   1400014d9:	mov    rax,QWORD PTR [rdi]
   1400014dc:	lea    r9,[rip+0x19115]        # 0x14001a5f8
   1400014e3:	lea    r8,[rip+0x190f6]        # 0x14001a5e0
   1400014ea:	mov    rdx,rbp
   1400014ed:	mov    rcx,rdi
   1400014f0:	call   QWORD PTR [rax+0x388]
   1400014f6:	mov    r8,rax
   1400014f9:	mov    QWORD PTR [rip+0x232b8],rax        # 0x1400247b8
   140001500:	test   rax,rax
   140001503:	je     0x14000145e
   140001509:	mov    rax,QWORD PTR [rdi]
   14000150c:	mov    r9d,0x1
   140001512:	mov    rdx,rbp
   140001515:	mov    rcx,rdi
   140001518:	mov    QWORD PTR [rsp+0x20],rsi
   14000151d:	call   QWORD PTR [rax+0x390]
   140001523:	mov    r8,QWORD PTR [rdi]
   140001526:	mov    rdx,rsi
   140001529:	mov    rcx,rdi
   14000152c:	mov    rbx,rax
   14000152f:	call   QWORD PTR [r8+0xb8]
   140001536:	mov    rax,rbx
   140001539:	jmp    0x14000146c
   14000153e:	int3   
   14000153f:	int3   
   140001540:	mov    QWORD PTR [rsp+0x8],rbx
   140001545:	mov    QWORD PTR [rsp+0x10],rbp
   14000154a:	mov    QWORD PTR [rsp+0x18],rsi
   14000154f:	push   rdi
   140001550:	push   r12
   140001552:	push   r13
   140001554:	sub    rsp,0x20
   140001558:	mov    rbp,rdx
   14000155b:	lea    rdx,[rip+0x190ae]        # 0x14001a610
   140001562:	mov    esi,r8d
   140001565:	mov    rbx,rcx
   140001568:	call   0x140004d84
   14000156d:	mov    r8,rax
   140001570:	test   rax,rax
   140001573:	jne    0x140001585
   140001575:	lea    rcx,[rip+0x18ff4]        # 0x14001a570
   14000157c:	call   0x140004360
   140001581:	xor    eax,eax
   140001583:	jmp    0x1400015ee
   140001585:	mov    rax,QWORD PTR [rbx]
   140001588:	xor    r9d,r9d
   14000158b:	mov    edx,esi
   14000158d:	mov    rcx,rbx
   140001590:	call   QWORD PTR [rax+0x560]
   140001596:	mov    rdi,rax
   140001599:	test   rax,rax
   14000159c:	je     0x140001575
   14000159e:	xor    r13d,r13d
   1400015a1:	test   esi,esi
   1400015a3:	jle    0x1400015eb
   1400015a5:	mov    rdx,QWORD PTR [rbp+0x0]
   1400015a9:	mov    rcx,rbx
   1400015ac:	call   0x140001424
   1400015b1:	add    rbp,0x8
   1400015b5:	mov    r12,rax
   1400015b8:	test   rax,rax
   1400015bb:	je     0x140001575
   1400015bd:	mov    r10,QWORD PTR [rbx]
   1400015c0:	mov    r9,rax
   1400015c3:	mov    r8d,r13d
   1400015c6:	mov    rdx,rdi
   1400015c9:	mov    rcx,rbx
   1400015cc:	call   QWORD PTR [r10+0x570]
   1400015d3:	mov    r11,QWORD PTR [rbx]
   1400015d6:	mov    rdx,r12
   1400015d9:	mov    rcx,rbx
   1400015dc:	call   QWORD PTR [r11+0xb8]
   1400015e3:	inc    r13d
   1400015e6:	cmp    r13d,esi
   1400015e9:	jl     0x1400015a5
   1400015eb:	mov    rax,rdi
   1400015ee:	mov    rbx,QWORD PTR [rsp+0x40]
   1400015f3:	mov    rbp,QWORD PTR [rsp+0x48]
   1400015f8:	mov    rsi,QWORD PTR [rsp+0x50]
   1400015fd:	add    rsp,0x20
   140001601:	pop    r13
   140001603:	pop    r12
   140001605:	pop    rdi
   140001606:	ret    
   140001607:	int3   
   140001608:	mov    QWORD PTR [rsp+0x8],rbx
   14000160d:	mov    QWORD PTR [rsp+0x10],rbp
   140001612:	mov    QWORD PTR [rsp+0x18],rsi
   140001617:	push   rdi
   140001618:	push   r12
   14000161a:	push   r13
   14000161c:	sub    rsp,0x30
   140001620:	mov    r12,r8
   140001623:	mov    r13d,edx
   140001626:	mov    rbx,rcx
   140001629:	call   0x1400013e8
   14000162e:	mov    rsi,rax
   140001631:	test   rax,rax
   140001634:	jne    0x140001649
   140001636:	lea    rcx,[rip+0x18f33]        # 0x14001a570
   14000163d:	call   0x140004360
   140001642:	xor    eax,eax
   140001644:	jmp    0x1400016f5
   140001649:	call   0x1400040e0
   14000164e:	test   al,al
   140001650:	je     0x14000165c
   140001652:	call   0x140004290
   140001657:	mov    rdi,rax
   14000165a:	jmp    0x140001661
   14000165c:	mov    rdi,QWORD PTR [rsp+0x68]
   140001661:	mov    rax,QWORD PTR [rbx]
   140001664:	lea    r9,[rip+0x1900d]        # 0x14001a678
   14000166b:	lea    r8,[rip+0x18fee]        # 0x14001a660
   140001672:	mov    rdx,rsi
   140001675:	mov    rcx,rbx
   140001678:	call   QWORD PTR [rax+0x388]
   14000167e:	mov    rbp,rax
   140001681:	test   rax,rax
   140001684:	je     0x140001636
   140001686:	mov    rdx,r12
   140001689:	mov    rcx,rbx
   14000168c:	call   0x140001424
   140001691:	mov    r10,QWORD PTR [rbx]
   140001694:	mov    r9d,0x1
   14000169a:	mov    QWORD PTR [rsp+0x28],rax
   14000169f:	mov    r8,rbp
   1400016a2:	mov    rdx,rsi
   1400016a5:	mov    rcx,rbx
   1400016a8:	mov    DWORD PTR [rsp+0x20],r13d
   1400016ad:	call   QWORD PTR [r10+0x390]
   1400016b4:	mov    rbx,rax
   1400016b7:	call   0x1400040e0
   1400016bc:	test   al,al
   1400016be:	je     0x1400016f2
   1400016c0:	call   0x140004290
   1400016c5:	sub    rax,rdi
   1400016c8:	mov    rcx,rax
   1400016cb:	call   0x1400042dc
   1400016d0:	lea    rcx,[rip+0x18f61]        # 0x14001a638
   1400016d7:	mov    rdx,rax
   1400016da:	call   0x140009c2c
   1400016df:	lea    rdx,[rip+0x18d92]        # 0x14001a478
   1400016e6:	lea    rcx,[rip+0x18f3b]        # 0x14001a628
   1400016ed:	call   0x140009c2c
   1400016f2:	mov    rax,rbx
   1400016f5:	mov    rbx,QWORD PTR [rsp+0x50]
   1400016fa:	mov    rbp,QWORD PTR [rsp+0x58]
   1400016ff:	mov    rsi,QWORD PTR [rsp+0x60]
   140001704:	add    rsp,0x30
   140001708:	pop    r13
   14000170a:	pop    r12
   14000170c:	pop    rdi
   14000170d:	ret    
   14000170e:	int3   
   14000170f:	int3   
   140001710:	mov    QWORD PTR [rsp+0x8],rbx
   140001715:	mov    QWORD PTR [rsp+0x18],rbp
   14000171a:	push   rsi
   14000171b:	push   rdi
   14000171c:	push   r12
   14000171e:	sub    rsp,0x150
   140001725:	mov    rax,QWORD PTR [rip+0x21994]        # 0x1400230c0
   14000172c:	xor    rax,rsp
   14000172f:	mov    QWORD PTR [rsp+0x140],rax
   140001737:	movsxd rbp,ecx
   14000173a:	lea    rcx,[rip+0x18fd7]        # 0x14001a718
   140001741:	mov    r12,rdx
   140001744:	mov    WORD PTR [rsp+0x20],0x3b
   14000174b:	call   0x140009d94
   140001750:	mov    esi,0x28
   140001755:	test   rax,rax
   140001758:	je     0x140001795
   14000175a:	mov    rcx,rax
   14000175d:	call   0x140006160
   140001762:	mov    rcx,rax
   140001765:	mov    rdi,rax
   140001768:	call   0x140009fa0
   14000176d:	lea    rcx,[rsi+rax*1]
   140001771:	call   0x140003ff0
   140001776:	lea    rdx,[rip+0x18f83]        # 0x14001a700
   14000177d:	mov    r8,rdi
   140001780:	mov    rcx,rax
   140001783:	mov    rbx,rax
   140001786:	call   0x14000a474
   14000178b:	xor    edx,edx
   14000178d:	mov    rcx,rbx
   140001790:	call   0x14000120c
   140001795:	lea    rcx,[rsp+0x30]
   14000179a:	mov    edx,0x104
   14000179f:	call   0x1400041bc
   1400017a4:	test   al,al
   1400017a6:	jne    0x1400017bb
   1400017a8:	lea    rcx,[rip+0x18f21]        # 0x14001a6d0
   1400017af:	call   0x140004360
   1400017b4:	xor    al,al
   1400017b6:	jmp    0x140001883
   1400017bb:	lea    rcx,[rsp+0x30]
   1400017c0:	call   0x140009fa0
   1400017c5:	lea    rcx,[rsi+rax*1]
   1400017c9:	call   0x140003ff0
   1400017ce:	lea    r8,[rsp+0x30]
   1400017d3:	lea    rdx,[rip+0x18ede]        # 0x14001a6b8
   1400017da:	mov    rcx,rax
   1400017dd:	mov    rbx,rax
   1400017e0:	call   0x14000a474
   1400017e5:	xor    edx,edx
   1400017e7:	mov    rcx,rbx
   1400017ea:	call   0x14000120c
   1400017ef:	xor    edi,edi
   1400017f1:	test   rbp,rbp
   1400017f4:	jle    0x140001818
   1400017f6:	mov    rcx,QWORD PTR [r12+rdi*8]
   1400017fa:	call   0x140009fa0
   1400017ff:	lea    rcx,[rsp+0x30]
   140001804:	lea    ebx,[rsi+rax*1]
   140001807:	call   0x140009fa0
   14000180c:	inc    rdi
   14000180f:	lea    esi,[rbx+rax*1+0x1]
   140001813:	cmp    rdi,rbp
   140001816:	jl     0x1400017f6
   140001818:	lea    eax,[rsi+0x1]
   14000181b:	movsxd rcx,eax
   14000181e:	call   0x140003ff0
   140001823:	lea    rdx,[rip+0x18e76]        # 0x14001a6a0
   14000182a:	mov    rcx,rax
   14000182d:	mov    rbx,rax
   140001830:	call   0x14000a750
   140001835:	xor    edi,edi
   140001837:	test   rbp,rbp
   14000183a:	jle    0x14000186a
   14000183c:	lea    rdx,[rsp+0x30]
   140001841:	mov    rcx,rbx
   140001844:	call   0x14000a6b0
   140001849:	mov    rdx,QWORD PTR [r12+rdi*8]
   14000184d:	mov    rcx,rbx
   140001850:	call   0x14000a6b0
   140001855:	lea    rdx,[rsp+0x20]
   14000185a:	mov    rcx,rbx
   14000185d:	call   0x14000a6b0
   140001862:	inc    rdi
   140001865:	cmp    rdi,rbp
   140001868:	jl     0x14000183c
   14000186a:	mov    rcx,rbx
   14000186d:	call   0x140009fa0
   140001872:	xor    edx,edx
   140001874:	mov    rcx,rbx
   140001877:	mov    BYTE PTR [rax+rbx*1-0x1],0x0
   14000187c:	call   0x14000120c
   140001881:	mov    al,0x1
   140001883:	mov    rcx,QWORD PTR [rsp+0x140]
   14000188b:	xor    rcx,rsp
   14000188e:	call   0x14000a820
   140001893:	lea    r11,[rsp+0x150]
   14000189b:	mov    rbx,QWORD PTR [r11+0x20]
   14000189f:	mov    rbp,QWORD PTR [r11+0x30]
   1400018a3:	mov    rsp,r11
   1400018a6:	pop    r12
   1400018a8:	pop    rdi
   1400018a9:	pop    rsi
   1400018aa:	ret    
   1400018ab:	int3   
   1400018ac:	test   rcx,rcx
   1400018af:	je     0x14000197e
   1400018b5:	mov    QWORD PTR [rsp+0x8],rbx
   1400018ba:	mov    QWORD PTR [rsp+0x10],rbp
   1400018bf:	mov    QWORD PTR [rsp+0x18],rsi
   1400018c4:	push   rdi
   1400018c5:	push   r12
   1400018c7:	push   r13
   1400018c9:	sub    rsp,0x20
   1400018cd:	mov    r13,r8
   1400018d0:	movsxd rsi,edx
   1400018d3:	mov    rbp,rcx
   1400018d6:	xor    ebx,ebx
   1400018d8:	call   0x140009fa0
   1400018dd:	mov    edi,ebx
   1400018df:	mov    r12,rax
   1400018e2:	test   rsi,rsi
   1400018e5:	jle    0x1400018fe
   1400018e7:	mov    rcx,QWORD PTR [r13+rdi*8+0x0]
   1400018ec:	call   0x140009fa0
   1400018f1:	inc    rdi
   1400018f4:	lea    r12,[r12+rax*1+0x1]
   1400018f9:	cmp    rdi,rsi
   1400018fc:	jl     0x1400018e7
   1400018fe:	lea    rcx,[rip+0x18e23]        # 0x14001a728
   140001905:	call   0x140009fa0
   14000190a:	lea    rcx,[rax+r12*1+0x1]
   14000190f:	call   0x140003ff0
   140001914:	lea    rdx,[rip+0x18e0d]        # 0x14001a728
   14000191b:	mov    rcx,rax
   14000191e:	mov    rdi,rax
   140001921:	mov    BYTE PTR [rax],bl
   140001923:	call   0x14000a6b0
   140001928:	mov    rdx,rbp
   14000192b:	mov    rcx,rdi
   14000192e:	call   0x14000a6b0
   140001933:	test   rsi,rsi
   140001936:	jle    0x14000195c
   140001938:	lea    rdx,[rip+0x18de5]        # 0x14001a724
   14000193f:	mov    rcx,rdi
   140001942:	call   0x14000a6b0
   140001947:	mov    rdx,QWORD PTR [r13+rbx*8+0x0]
   14000194c:	mov    rcx,rdi
   14000194f:	call   0x14000a6b0
   140001954:	inc    rbx
   140001957:	cmp    rbx,rsi
   14000195a:	jl     0x140001938
   14000195c:	xor    edx,edx
   14000195e:	mov    rcx,rdi
   140001961:	call   0x14000120c
   140001966:	mov    rbx,QWORD PTR [rsp+0x40]
   14000196b:	mov    rbp,QWORD PTR [rsp+0x48]
   140001970:	mov    rsi,QWORD PTR [rsp+0x50]
   140001975:	add    rsp,0x20
   140001979:	pop    r13
   14000197b:	pop    r12
   14000197d:	pop    rdi
   14000197e:	ret    
   14000197f:	int3   
   140001980:	mov    rax,rsp
   140001983:	mov    QWORD PTR [rax+0x8],rbx
   140001987:	mov    QWORD PTR [rax+0x10],rbp
   14000198b:	mov    QWORD PTR [rax+0x18],rsi
   14000198f:	mov    QWORD PTR [rax+0x20],rdi
   140001993:	push   r12
   140001995:	sub    rsp,0x50
   140001999:	mov    rbx,rdx
   14000199c:	mov    rsi,rcx
   14000199f:	call   0x1400013e8
   1400019a4:	mov    rbp,rax
   1400019a7:	test   rax,rax
   1400019aa:	jne    0x1400019bd
   1400019ac:	lea    rcx,[rip+0x18bbd]        # 0x14001a570
   1400019b3:	call   0x140004360
   1400019b8:	jmp    0x140001a43
   1400019bd:	mov    rax,QWORD PTR [rsi]
   1400019c0:	lea    r9,[rip+0x18dd9]        # 0x14001a7a0
   1400019c7:	lea    r8,[rip+0x18dc2]        # 0x14001a790
   1400019ce:	mov    rdx,rbp
   1400019d1:	mov    rcx,rsi
   1400019d4:	call   QWORD PTR [rax+0x388]
   1400019da:	mov    r12,rax
   1400019dd:	test   rax,rax
   1400019e0:	je     0x1400019ac
   1400019e2:	mov    rax,QWORD PTR [rsi]
   1400019e5:	mov    rdx,rbx
   1400019e8:	mov    rcx,rsi
   1400019eb:	call   QWORD PTR [rax+0x538]
   1400019f1:	mov    rdi,QWORD PTR [rsi]
   1400019f4:	mov    rbx,rax
   1400019f7:	call   0x1400045c0
   1400019fc:	mov    rcx,QWORD PTR [rip+0x22d95]        # 0x140024798
   140001a03:	movzx  r11d,al
   140001a07:	mov    r9d,0x1
   140001a0d:	mov    r8,r12
   140001a10:	mov    DWORD PTR [rsp+0x40],r11d
   140001a15:	mov    QWORD PTR [rsp+0x38],rcx
   140001a1a:	mov    rcx,QWORD PTR [rip+0x22d7f]        # 0x1400247a0
   140001a21:	mov    QWORD PTR [rsp+0x30],rcx
   140001a26:	mov    rcx,QWORD PTR [rip+0x22d7b]        # 0x1400247a8
   140001a2d:	mov    rdx,rbp
   140001a30:	mov    QWORD PTR [rsp+0x28],rcx
   140001a35:	mov    rcx,rsi
   140001a38:	mov    QWORD PTR [rsp+0x20],rbx
   140001a3d:	call   QWORD PTR [rdi+0x468]
   140001a43:	mov    rbx,QWORD PTR [rsp+0x60]
   140001a48:	mov    rbp,QWORD PTR [rsp+0x68]
   140001a4d:	mov    rsi,QWORD PTR [rsp+0x70]
   140001a52:	mov    rdi,QWORD PTR [rsp+0x78]
   140001a57:	add    rsp,0x50
   140001a5b:	pop    r12
   140001a5d:	ret    
   140001a5e:	int3   
   140001a5f:	int3   
   140001a60:	mov    QWORD PTR [rsp+0x8],rbx
   140001a65:	mov    QWORD PTR [rsp+0x10],rbp
   140001a6a:	push   rdi
   140001a6b:	push   r12
   140001a6d:	push   r13
   140001a6f:	push   r14
   140001a71:	push   r15
   140001a73:	sub    rsp,0x30
   140001a77:	mov    bl,dl
   140001a79:	mov    rdi,rcx
   140001a7c:	call   0x1400013e8
   140001a81:	mov    rbp,rax
   140001a84:	test   rax,rax
   140001a87:	jne    0x140001a9a
   140001a89:	lea    rcx,[rip+0x18ae0]        # 0x14001a570
   140001a90:	call   0x140004360
   140001a95:	jmp    0x140001d91
   140001a9a:	mov    rax,QWORD PTR [rdi]
   140001a9d:	mov    rdx,rbp
   140001aa0:	mov    rcx,rdi
   140001aa3:	test   bl,bl
   140001aa5:	je     0x140001add
   140001aa7:	lea    r9,[rip+0x18dee]        # 0x14001a89c
   140001aae:	lea    r8,[rip+0x18dd3]        # 0x14001a888
   140001ab5:	call   QWORD PTR [rax+0x388]
   140001abb:	mov    r8,rax
   140001abe:	test   rax,rax
   140001ac1:	je     0x140001a89
   140001ac3:	mov    rax,QWORD PTR [rdi]
   140001ac6:	mov    r9d,0x1
   140001acc:	mov    rdx,rbp
   140001acf:	mov    rcx,rdi
   140001ad2:	call   QWORD PTR [rax+0x468]
   140001ad8:	jmp    0x140001d91
   140001add:	lea    r9,[rip+0x18d8c]        # 0x14001a870
   140001ae4:	lea    r8,[rip+0x18d75]        # 0x14001a860
   140001aeb:	call   QWORD PTR [rax+0x388]
   140001af1:	mov    rbx,rax
   140001af4:	test   rax,rax
   140001af7:	je     0x140001a89
   140001af9:	mov    rax,QWORD PTR [rdi]
   140001afc:	lea    r9,[rip+0x18d35]        # 0x14001a838
   140001b03:	lea    r8,[rip+0x18d16]        # 0x14001a820
   140001b0a:	mov    rdx,rbp
   140001b0d:	mov    rcx,rdi
   140001b10:	call   QWORD PTR [rax+0x388]
   140001b16:	mov    r14,rax
   140001b19:	test   rax,rax
   140001b1c:	je     0x140001a89
   140001b22:	mov    rax,QWORD PTR [rdi]
   140001b25:	lea    r9,[rip+0x18d0c]        # 0x14001a838
   140001b2c:	lea    r8,[rip+0x18cd5]        # 0x14001a808
   140001b33:	mov    rdx,rbp
   140001b36:	mov    rcx,rdi
   140001b39:	call   QWORD PTR [rax+0x388]
   140001b3f:	mov    QWORD PTR [rsp+0x70],rax
   140001b44:	test   rax,rax
   140001b47:	je     0x140001a89
   140001b4d:	mov    rax,QWORD PTR [rdi]
   140001b50:	lea    r9,[rip+0x18c99]        # 0x14001a7f0
   140001b57:	lea    r8,[rip+0x18c7a]        # 0x14001a7d8
   140001b5e:	mov    rdx,rbp
   140001b61:	mov    rcx,rdi
   140001b64:	call   QWORD PTR [rax+0x388]
   140001b6a:	mov    r15,rax
   140001b6d:	test   rax,rax
   140001b70:	je     0x140001a89
   140001b76:	mov    rax,QWORD PTR [rdi]
   140001b79:	lea    r9,[rip+0x18d1c]        # 0x14001a89c
   140001b80:	lea    r8,[rip+0x18c39]        # 0x14001a7c0
   140001b87:	mov    rdx,rbp
   140001b8a:	mov    rcx,rdi
   140001b8d:	call   QWORD PTR [rax+0x388]
   140001b93:	mov    QWORD PTR [rsp+0x78],rax
   140001b98:	test   rax,rax
   140001b9b:	je     0x140001a89
   140001ba1:	mov    rax,QWORD PTR [rdi]
   140001ba4:	mov    rdx,QWORD PTR [rip+0x22b9d]        # 0x140024748
   140001bab:	mov    rcx,rdi
   140001bae:	call   QWORD PTR [rax+0x538]
   140001bb4:	mov    r10,QWORD PTR [rdi]
   140001bb7:	mov    r8,rbx
   140001bba:	mov    rdx,rbp
   140001bbd:	mov    rcx,rdi
   140001bc0:	mov    r9,rax
   140001bc3:	call   QWORD PTR [r10+0x468]
   140001bca:	mov    rdx,QWORD PTR [rip+0x22bb7]        # 0x140024788
   140001bd1:	cmp    DWORD PTR [rdx+0x8],0x0
   140001bd5:	je     0x140001bdd
   140001bd7:	cmp    DWORD PTR [rdx+0x8],0x4
   140001bdb:	jne    0x140001c2b
   140001bdd:	mov    rax,QWORD PTR [rdi]
   140001be0:	mov    rdx,QWORD PTR [rdx]
   140001be3:	mov    rcx,rdi
   140001be6:	call   QWORD PTR [rax+0x538]
   140001bec:	mov    rcx,QWORD PTR [rip+0x22b95]        # 0x140024788
   140001bf3:	mov    r8,QWORD PTR [rdi]
   140001bf6:	mov    rdx,QWORD PTR [rcx]
   140001bf9:	mov    rcx,rdi
   140001bfc:	mov    rbx,rax
   140001bff:	inc    rdx
   140001c02:	call   QWORD PTR [r8+0x538]
   140001c09:	mov    r10,QWORD PTR [rdi]
   140001c0c:	mov    r9,rbx
   140001c0f:	mov    r8,r14
   140001c12:	mov    rdx,rbp
   140001c15:	mov    rcx,rdi
   140001c18:	mov    QWORD PTR [rsp+0x20],rax
   140001c1d:	call   QWORD PTR [r10+0x468]
   140001c24:	mov    rdx,QWORD PTR [rip+0x22b5d]        # 0x140024788
   140001c2b:	mov    eax,DWORD PTR [rip+0x22b43]        # 0x140024774
   140001c31:	mov    r13d,0x1
   140001c37:	cmp    eax,r13d
   140001c3a:	jle    0x140001caa
   140001c3c:	lea    r12d,[r13+0x1f]
   140001c40:	cmp    DWORD PTR [r12+rdx*1+0x8],0x0
   140001c46:	jne    0x140001c9e
   140001c48:	mov    rax,QWORD PTR [rdi]
   140001c4b:	mov    rdx,QWORD PTR [r12+rdx*1]
   140001c4f:	mov    rcx,rdi
   140001c52:	call   QWORD PTR [rax+0x538]
   140001c58:	mov    rcx,QWORD PTR [rip+0x22b29]        # 0x140024788
   140001c5f:	mov    r8,QWORD PTR [rdi]
   140001c62:	mov    rdx,QWORD PTR [r12+rcx*1]
   140001c66:	mov    rcx,rdi
   140001c69:	mov    rbx,rax
   140001c6c:	inc    rdx
   140001c6f:	call   QWORD PTR [r8+0x538]
   140001c76:	mov    r10,QWORD PTR [rdi]
   140001c79:	mov    r9,rbx
   140001c7c:	mov    r8,r14
   140001c7f:	mov    rdx,rbp
   140001c82:	mov    rcx,rdi
   140001c85:	mov    QWORD PTR [rsp+0x20],rax
   140001c8a:	call   QWORD PTR [r10+0x468]
   140001c91:	mov    rdx,QWORD PTR [rip+0x22af0]        # 0x140024788
   140001c98:	mov    eax,DWORD PTR [rip+0x22ad6]        # 0x140024774
   140001c9e:	inc    r13d
   140001ca1:	add    r12,0x20
   140001ca5:	cmp    r13d,eax
   140001ca8:	jl     0x140001c40
   140001caa:	mov    r13d,0x1
   140001cb0:	cmp    eax,r13d
   140001cb3:	jle    0x140001d29
   140001cb5:	mov    r14,QWORD PTR [rsp+0x70]
   140001cba:	lea    r12d,[r13+0x1f]
   140001cbe:	cmp    DWORD PTR [r12+rdx*1+0x8],0x1
   140001cc4:	jne    0x140001d1d
   140001cc6:	mov    rax,QWORD PTR [rdi]
   140001cc9:	mov    rdx,QWORD PTR [r12+rdx*1]
   140001ccd:	mov    rcx,rdi
   140001cd0:	call   QWORD PTR [rax+0x538]
   140001cd6:	mov    rcx,QWORD PTR [rip+0x22aab]        # 0x140024788
   140001cdd:	mov    r8,QWORD PTR [rdi]
   140001ce0:	mov    rdx,QWORD PTR [r12+rcx*1+0x10]
   140001ce5:	mov    rcx,rdi
   140001ce8:	mov    rbx,rax
   140001ceb:	inc    rdx
   140001cee:	call   QWORD PTR [r8+0x538]
   140001cf5:	mov    r10,QWORD PTR [rdi]
   140001cf8:	mov    r9,rbx
   140001cfb:	mov    r8,r14
   140001cfe:	mov    rdx,rbp
   140001d01:	mov    rcx,rdi
   140001d04:	mov    QWORD PTR [rsp+0x20],rax
   140001d09:	call   QWORD PTR [r10+0x468]
   140001d10:	mov    rdx,QWORD PTR [rip+0x22a71]        # 0x140024788
   140001d17:	mov    eax,DWORD PTR [rip+0x22a57]        # 0x140024774
   140001d1d:	inc    r13d
   140001d20:	add    r12,0x20
   140001d24:	cmp    r13d,eax
   140001d27:	jl     0x140001cbe
   140001d29:	call   0x1400045c0
   140001d2e:	mov    rcx,QWORD PTR [rip+0x22a53]        # 0x140024788
   140001d35:	mov    rdx,QWORD PTR [rcx]
   140001d38:	mov    bl,al
   140001d3a:	inc    rdx
   140001d3d:	cmp    DWORD PTR [rcx+0x8],0x4
   140001d41:	jne    0x140001d4e
   140001d43:	test   al,al
   140001d45:	je     0x140001d4e
   140001d47:	mov    rdx,QWORD PTR [rcx+0x18]
   140001d4b:	inc    rdx
   140001d4e:	mov    rax,QWORD PTR [rdi]
   140001d51:	mov    rcx,rdi
   140001d54:	call   QWORD PTR [rax+0x538]
   140001d5a:	mov    r10,QWORD PTR [rdi]
   140001d5d:	movzx  r9d,bl
   140001d61:	mov    r8,r15
   140001d64:	mov    rdx,rbp
   140001d67:	mov    rcx,rdi
   140001d6a:	mov    QWORD PTR [rsp+0x20],rax
   140001d6f:	call   QWORD PTR [r10+0x468]
   140001d76:	mov    r11,QWORD PTR [rdi]
   140001d79:	mov    r8,QWORD PTR [rsp+0x78]
   140001d7e:	mov    r9d,0x1
   140001d84:	mov    rdx,rbp
   140001d87:	mov    rcx,rdi
   140001d8a:	call   QWORD PTR [r11+0x468]
   140001d91:	mov    rbx,QWORD PTR [rsp+0x60]
   140001d96:	mov    rbp,QWORD PTR [rsp+0x68]
   140001d9b:	add    rsp,0x30
   140001d9f:	pop    r15
   140001da1:	pop    r14
   140001da3:	pop    r13
   140001da5:	pop    r12
   140001da7:	pop    rdi
   140001da8:	ret    
   140001da9:	int3   
   140001daa:	int3   
   140001dab:	int3   
   140001dac:	mov    QWORD PTR [rsp+0x8],rbx
   140001db1:	mov    QWORD PTR [rsp+0x10],rsi
   140001db6:	push   rdi
   140001db7:	sub    rsp,0x20
   140001dbb:	lea    rdx,[rip+0x18ae2]        # 0x14001a8a4
   140001dc2:	mov    rdi,rcx
   140001dc5:	call   0x1400040e8
   140001dca:	test   eax,eax
   140001dcc:	jne    0x140001dd2
   140001dce:	add    rdi,0x2
   140001dd2:	xor    ebx,ebx
   140001dd4:	cmp    DWORD PTR [rip+0x2299a],ebx        # 0x140024774
   140001dda:	jle    0x140001e03
   140001ddc:	xor    esi,esi
   140001dde:	mov    rdx,QWORD PTR [rip+0x229a3]        # 0x140024788
   140001de5:	mov    rcx,rdi
   140001de8:	mov    rdx,QWORD PTR [rsi+rdx*1]
   140001dec:	call   0x14000a850
   140001df1:	test   eax,eax
   140001df3:	je     0x140001e16
   140001df5:	inc    ebx
   140001df7:	add    rsi,0x20
   140001dfb:	cmp    ebx,DWORD PTR [rip+0x22973]        # 0x140024774
   140001e01:	jl     0x140001dde
   140001e03:	or     eax,0xffffffff
   140001e06:	mov    rbx,QWORD PTR [rsp+0x30]
   140001e0b:	mov    rsi,QWORD PTR [rsp+0x38]
   140001e10:	add    rsp,0x20
   140001e14:	pop    rdi
   140001e15:	ret    
   140001e16:	mov    eax,ebx
   140001e18:	jmp    0x140001e06
   140001e1a:	int3   
   140001e1b:	int3   
   140001e1c:	mov    QWORD PTR [rsp+0x10],rbx
   140001e21:	mov    QWORD PTR [rsp+0x18],rsi
   140001e26:	push   rdi
   140001e27:	sub    rsp,0x20
   140001e2b:	lea    rcx,[rip+0x18aa6]        # 0x14001a8d8
   140001e32:	call   0x140009d94
   140001e37:	lea    rcx,[rip+0x18a82]        # 0x14001a8c0
   140001e3e:	mov    rsi,rax
   140001e41:	call   0x140009d94
   140001e46:	mov    rbx,rax
   140001e49:	test   rsi,rsi
   140001e4c:	je     0x140001e81
   140001e4e:	lea    r8,[rsp+0x30]
   140001e53:	mov    rdx,rax
   140001e56:	mov    rcx,rsi
   140001e59:	call   0x140006bc0
   140001e5e:	mov    rdi,rax
   140001e61:	test   rax,rax
   140001e64:	je     0x140001e93
   140001e66:	call   0x140006270
   140001e6b:	mov    edx,DWORD PTR [rsp+0x30]
   140001e6f:	mov    rcx,rdi
   140001e72:	call   0x1400061e8
   140001e77:	mov    rcx,rdi
   140001e7a:	call   0x140004074
   140001e7f:	jmp    0x140001e93
   140001e81:	test   rax,rax
   140001e84:	je     0x140001eda
   140001e86:	call   0x140006270
   140001e8b:	mov    rcx,rbx
   140001e8e:	call   0x140006230
   140001e93:	mov    rdx,rsi
   140001e96:	mov    rcx,rbx
   140001e99:	call   0x1400062a0
   140001e9e:	lea    rcx,[rip+0x18a03]        # 0x14001a8a8
   140001ea5:	call   0x140004d24
   140001eaa:	lea    rcx,[rip+0x18a0f]        # 0x14001a8c0
   140001eb1:	call   0x140004d24
   140001eb6:	lea    rcx,[rip+0x18a1b]        # 0x14001a8d8
   140001ebd:	call   0x140004d24
   140001ec2:	mov    rcx,QWORD PTR [rip+0x228b7]        # 0x140024780
   140001ec9:	call   0x140004074
   140001ece:	mov    rcx,QWORD PTR [rip+0x228a3]        # 0x140024778
   140001ed5:	call   0x140004074
   140001eda:	mov    rbx,QWORD PTR [rsp+0x38]
   140001edf:	mov    rsi,QWORD PTR [rsp+0x40]
   140001ee4:	add    rsp,0x20
   140001ee8:	pop    rdi
   140001ee9:	ret    
   140001eea:	int3   
   140001eeb:	int3   
   140001eec:	mov    rax,QWORD PTR [rip+0x22865]        # 0x140024758
   140001ef3:	ret    
   140001ef4:	mov    rax,QWORD PTR [rip+0x2284d]        # 0x140024748
   140001efb:	ret    
   140001efc:	mov    eax,DWORD PTR [rip+0x2286e]        # 0x140024770
   140001f02:	ret    
   140001f03:	int3   
   140001f04:	mov    rax,rsp
   140001f07:	mov    QWORD PTR [rax+0x8],rcx
   140001f0b:	mov    QWORD PTR [rax+0x10],rdx
   140001f0f:	mov    QWORD PTR [rax+0x18],r8
   140001f13:	mov    QWORD PTR [rax+0x20],r9
   140001f17:	push   rbx
   140001f18:	sub    rsp,0x20
   140001f1c:	lea    rbx,[rax+0x10]
   140001f20:	call   0x14000ab98
   140001f25:	mov    rdx,QWORD PTR [rsp+0x30]
   140001f2a:	lea    rcx,[rax+0x60]
   140001f2e:	mov    r8,rbx
   140001f31:	call   0x14000ab74
   140001f36:	call   0x14000ab98
   140001f3b:	lea    rdx,[rip+0x18ae2]        # 0x14001aa24
   140001f42:	lea    rcx,[rax+0x60]
   140001f46:	call   0x14000a900
   140001f4b:	add    rsp,0x20
   140001f4f:	pop    rbx
   140001f50:	ret    
   140001f51:	int3   
   140001f52:	int3   
   140001f53:	int3   
   140001f54:	rex push rbp
   140001f56:	push   rbx
   140001f57:	push   rsi
   140001f58:	push   rdi
   140001f59:	push   r12
   140001f5b:	push   r13
   140001f5d:	push   r14
   140001f5f:	push   r15
   140001f61:	mov    rbp,rsp
   140001f64:	sub    rsp,0x58
   140001f68:	mov    eax,DWORD PTR [rcx]
   140001f6a:	movsxd r14,DWORD PTR [rcx+0x10]
   140001f6e:	mov    r15,QWORD PTR [rcx+0x18]
   140001f72:	mov    r13,QWORD PTR [rcx+0x20]
   140001f76:	mov    DWORD PTR [rbp+0x48],eax
   140001f79:	mov    rax,QWORD PTR [rcx+0x8]
   140001f7d:	mov    QWORD PTR [rbp-0x38],rax
   140001f81:	mov    rax,QWORD PTR [rcx+0x28]
   140001f85:	xor    edi,edi
   140001f87:	mov    QWORD PTR [rbp-0x20],rax
   140001f8b:	mov    rax,QWORD PTR [rcx+0x30]
   140001f8f:	mov    DWORD PTR [rbp+0x50],r14d
   140001f93:	mov    QWORD PTR [rbp+0x60],rdi
   140001f97:	mov    QWORD PTR [rbp+0x58],rdi
   140001f9b:	mov    QWORD PTR [rbp-0x18],rax
   140001f9f:	call   0x140004ea4
   140001fa4:	call   0x140004290
   140001fa9:	lea    r8d,[rdi+0x18]
   140001fad:	lea    rcx,[rbp-0x28]
   140001fb1:	xor    edx,edx
   140001fb3:	mov    QWORD PTR [rbp-0x30],rax
   140001fb7:	call   0x14000a530
   140001fbc:	mov    eax,DWORD PTR [rip+0x2276e]        # 0x140024730
   140001fc2:	mov    DWORD PTR [rbp-0x28],0x10002
   140001fc9:	mov    DWORD PTR [rbp-0x24],eax
   140001fcc:	mov    rax,QWORD PTR [rip+0x2276d]        # 0x140024740
   140001fd3:	mov    BYTE PTR [rbp-0x18],dil
   140001fd7:	mov    QWORD PTR [rbp-0x20],rax
   140001fdb:	call   0x1400040e0
   140001fe0:	lea    esi,[rdi+0x1]
   140001fe3:	test   al,al
   140001fe5:	je     0x14000206b
   140001feb:	lea    rcx,[rip+0x1855e]        # 0x14001a550
   140001ff2:	call   0x140009c2c
   140001ff7:	mov    edx,DWORD PTR [rbp-0x28]
   140001ffa:	lea    rcx,[rip+0x18537]        # 0x14001a538
   140002001:	call   0x140009c2c
   140002006:	cmp    BYTE PTR [rbp-0x18],dil
   14000200a:	lea    rax,[rip+0x18517]        # 0x14001a528
   140002011:	lea    rdx,[rip+0x18500]        # 0x14001a518
   140002018:	lea    rcx,[rip+0x184d9]        # 0x14001a4f8
   14000201f:	cmovne rdx,rax
   140002023:	call   0x140009c2c
   140002028:	mov    edx,DWORD PTR [rbp-0x24]
   14000202b:	lea    rcx,[rip+0x184ae]        # 0x14001a4e0
   140002032:	call   0x140009c2c
   140002037:	cmp    DWORD PTR [rip+0x226f3],edi        # 0x140024730
   14000203d:	mov    r12d,edi
   140002040:	jle    0x14000206b
   140002042:	mov    ebx,edi
   140002044:	mov    r8,QWORD PTR [rbp-0x20]
   140002048:	lea    rcx,[rip+0x18479]        # 0x14001a4c8
   14000204f:	mov    edx,r12d
   140002052:	mov    r8,QWORD PTR [rbx+r8*1]
   140002056:	call   0x140009c2c
   14000205b:	add    r12d,esi
   14000205e:	add    rbx,0x10
   140002062:	cmp    r12d,DWORD PTR [rip+0x226c7]        # 0x140024730
   140002069:	jl     0x140002044
   14000206b:	lea    r8,[rbp-0x28]
   14000206f:	lea    rdx,[rbp+0x58]
   140002073:	lea    rcx,[rbp+0x60]
   140002077:	call   r13
   14000207a:	mov    rcx,QWORD PTR [rip+0x226bf]        # 0x140024740
   140002081:	mov    ebx,eax
   140002083:	call   0x140004074
   140002088:	test   ebx,ebx
   14000208a:	je     0x1400020a0
   14000208c:	lea    rcx,[rip+0x18a9d]        # 0x14001ab30
   140002093:	call   0x140004360
   140002098:	mov    ecx,esi
   14000209a:	call   0x140009bcc
   14000209f:	int3   
   1400020a0:	mov    rdx,QWORD PTR [rip+0x226c1]        # 0x140024768
   1400020a7:	test   rdx,rdx
   1400020aa:	je     0x1400020c8
   1400020ac:	mov    rcx,QWORD PTR [rbp+0x58]
   1400020b0:	call   0x140001980
   1400020b5:	mov    rcx,QWORD PTR [rbp+0x58]
   1400020b9:	mov    rax,QWORD PTR [rcx]
   1400020bc:	call   QWORD PTR [rax+0x78]
   1400020bf:	test   rax,rax
   1400020c2:	jne    0x1400023a5
   1400020c8:	cmp    BYTE PTR [rip+0x22691],dil        # 0x140024760
   1400020cf:	mov    r12b,BYTE PTR [rip+0x2268b]        # 0x140024761
   1400020d6:	jne    0x1400020e1
   1400020d8:	test   r12b,r12b
   1400020db:	je     0x140002190
   1400020e1:	mov    rbx,QWORD PTR [rbp+0x58]
   1400020e5:	lea    rdx,[rip+0x1868c]        # 0x14001a778
   1400020ec:	mov    rcx,rbx
   1400020ef:	call   0x140004d84
   1400020f4:	mov    r13,rax
   1400020f7:	test   rax,rax
   1400020fa:	jne    0x14000210a
   1400020fc:	lea    rcx,[rip+0x1846d]        # 0x14001a570
   140002103:	call   0x140004360
   140002108:	jmp    0x14000214c
   14000210a:	mov    rax,QWORD PTR [rbx]
   14000210d:	lea    rcx,[rip+0x1865c]        # 0x14001a770
   140002114:	lea    r8,[rip+0x1864d]        # 0x14001a768
   14000211b:	cmp    r12b,sil
   14000211e:	lea    r9,[rip+0x1863f]        # 0x14001a764
   140002125:	mov    rdx,r13
   140002128:	cmove  r8,rcx
   14000212c:	mov    rcx,rbx
   14000212f:	call   QWORD PTR [rax+0x388]
   140002135:	mov    r8,rax
   140002138:	test   rax,rax
   14000213b:	je     0x1400020fc
   14000213d:	mov    rax,QWORD PTR [rbx]
   140002140:	mov    rdx,r13
   140002143:	mov    rcx,rbx
   140002146:	call   QWORD PTR [rax+0x468]
   14000214c:	mov    rcx,QWORD PTR [rbp+0x58]
   140002150:	mov    rax,QWORD PTR [rcx]
   140002153:	call   QWORD PTR [rax+0x78]
   140002156:	test   rax,rax
   140002159:	je     0x140002187
   14000215b:	mov    rcx,QWORD PTR [rbp+0x58]
   14000215f:	call   0x140004590
   140002164:	mov    rcx,QWORD PTR [rbp+0x60]
   140002168:	mov    rax,QWORD PTR [rcx]
   14000216b:	call   QWORD PTR [rax+0x28]
   14000216e:	test   eax,eax
   140002170:	je     0x140002180
   140002172:	lea    rcx,[rip+0x18937]        # 0x14001aab0
   140002179:	call   0x140004360
   14000217e:	mov    edi,esi
   140002180:	mov    esi,edi
   140002182:	jmp    0x1400023c8
   140002187:	cmp    BYTE PTR [rip+0x225d2],dil        # 0x140024760
   14000218e:	jne    0x140002164
   140002190:	mov    dl,BYTE PTR [rip+0x225cd]        # 0x140024763
   140002196:	test   dl,dl
   140002198:	jne    0x14000238d
   14000219e:	cmp    BYTE PTR [rip+0x225bd],dil        # 0x140024762
   1400021a5:	jne    0x14000238d
   1400021ab:	test   r15,r15
   1400021ae:	je     0x14000238d
   1400021b4:	test   r14d,r14d
   1400021b7:	je     0x14000238d
   1400021bd:	cmp    DWORD PTR [rip+0x225b1],edi        # 0x140024774
   1400021c3:	mov    rcx,QWORD PTR [rip+0x225be]        # 0x140024788
   1400021ca:	mov    r12d,edi
   1400021cd:	jle    0x1400021f6
   1400021cf:	mov    rbx,rdi
   1400021d2:	mov    rcx,QWORD PTR [rbx+rcx*1]
   1400021d6:	call   0x140004074
   1400021db:	mov    rcx,QWORD PTR [rip+0x225a6]        # 0x140024788
   1400021e2:	add    r12d,esi
   1400021e5:	mov    QWORD PTR [rbx+rcx*1],rdi
   1400021e9:	add    rbx,0x20
   1400021ed:	cmp    r12d,DWORD PTR [rip+0x22580]        # 0x140024774
   1400021f4:	jl     0x1400021d2
   1400021f6:	call   0x140004074
   1400021fb:	call   0x1400040e0
   140002200:	test   al,al
   140002202:	je     0x140002224
   140002204:	call   0x140004290
   140002209:	sub    rax,QWORD PTR [rbp-0x30]
   14000220d:	mov    rcx,rax
   140002210:	call   0x1400042dc
   140002215:	lea    rcx,[rip+0x1886c]        # 0x14001aa88
   14000221c:	mov    rdx,rax
   14000221f:	call   0x14000407c
   140002224:	call   0x1400040e0
   140002229:	test   al,al
   14000222b:	je     0x14000228b
   14000222d:	lea    rax,[rip+0x20df4]        # 0x140023028
   140002234:	lea    rcx,[rip+0x1883d]        # 0x14001aa78
   14000223b:	mov    r8,r15
   14000223e:	mov    rdx,QWORD PTR [rax+r14*8]
   140002242:	call   0x140009c2c
   140002247:	movsxd r13,DWORD PTR [rbp+0x48]
   14000224b:	lea    rcx,[rip+0x1880e]        # 0x14001aa60
   140002252:	mov    edx,r13d
   140002255:	call   0x140009c2c
   14000225a:	mov    r12d,edi
   14000225d:	mov    rbx,rdi
   140002260:	test   r13,r13
   140002263:	jle    0x14000228b
   140002265:	mov    r14,QWORD PTR [rbp-0x38]
   140002269:	mov    r8,QWORD PTR [r14+rbx*8]
   14000226d:	lea    rcx,[rip+0x187d4]        # 0x14001aa48
   140002274:	mov    edx,r12d
   140002277:	call   0x140009c2c
   14000227c:	add    rbx,rsi
   14000227f:	add    r12d,esi
   140002282:	cmp    rbx,r13
   140002285:	jl     0x140002269
   140002287:	mov    r14d,DWORD PTR [rbp+0x50]
   14000228b:	mov    rcx,QWORD PTR [rbp+0x58]
   14000228f:	mov    r8,r15
   140002292:	mov    edx,r14d
   140002295:	call   0x140001608
   14000229a:	mov    rcx,QWORD PTR [rbp+0x58]
   14000229e:	mov    rbx,rax
   1400022a1:	mov    rax,QWORD PTR [rcx]
   1400022a4:	call   QWORD PTR [rax+0x78]
   1400022a7:	test   rax,rax
   1400022aa:	jne    0x1400023a5
   1400022b0:	test   rbx,rbx
   1400022b3:	jne    0x1400022c6
   1400022b5:	lea    rcx,[rip+0x182b4]        # 0x14001a570
   1400022bc:	call   0x140004360
   1400022c1:	jmp    0x1400023ae
   1400022c6:	mov    r8,QWORD PTR [rbp+0x60]
   1400022ca:	mov    rcx,QWORD PTR [rbp+0x58]
   1400022ce:	mov    rdx,rbx
   1400022d1:	call   0x140004ea4
   1400022d6:	mov    rcx,QWORD PTR [rbp+0x58]
   1400022da:	lea    r9,[rip+0x1874f]        # 0x14001aa30
   1400022e1:	mov    rax,QWORD PTR [rcx]
   1400022e4:	lea    r8,[rip+0x1873d]        # 0x14001aa28
   1400022eb:	mov    rdx,rbx
   1400022ee:	call   QWORD PTR [rax+0x388]
   1400022f4:	mov    rcx,QWORD PTR [rbp+0x58]
   1400022f8:	mov    r13,rax
   1400022fb:	mov    rax,QWORD PTR [rcx]
   1400022fe:	call   QWORD PTR [rax+0x78]
   140002301:	test   rax,rax
   140002304:	jne    0x1400023a5
   14000230a:	test   r13,r13
   14000230d:	je     0x1400022b5
   14000230f:	mov    r8d,DWORD PTR [rbp+0x48]
   140002313:	mov    rdx,QWORD PTR [rbp-0x38]
   140002317:	mov    rcx,QWORD PTR [rbp+0x58]
   14000231b:	call   0x140004eac
   140002320:	mov    rcx,QWORD PTR [rbp+0x58]
   140002324:	mov    r12,rax
   140002327:	mov    rax,QWORD PTR [rcx]
   14000232a:	call   QWORD PTR [rax+0x78]
   14000232d:	test   rax,rax
   140002330:	jne    0x1400023a5
   140002332:	test   r12,r12
   140002335:	je     0x1400022b5
   14000233b:	mov    rcx,QWORD PTR [rbp+0x58]
   14000233f:	mov    r9,r12
   140002342:	mov    r8,r13
   140002345:	mov    rax,QWORD PTR [rcx]
   140002348:	mov    rdx,rbx
   14000234b:	call   QWORD PTR [rax+0x468]
   140002351:	mov    rcx,QWORD PTR [rbp+0x58]
   140002355:	mov    rax,QWORD PTR [rcx]
   140002358:	call   QWORD PTR [rax+0x78]
   14000235b:	mov    rcx,QWORD PTR [rbp+0x60]
   14000235f:	mov    ebx,edi
   140002361:	test   rax,rax
   140002364:	mov    rax,QWORD PTR [rcx]
   140002367:	setne  bl
   14000236a:	call   QWORD PTR [rax+0x28]
   14000236d:	test   eax,eax
   14000236f:	je     0x14000237f
   140002371:	lea    rcx,[rip+0x18738]        # 0x14001aab0
   140002378:	call   0x140004360
   14000237d:	mov    ebx,esi
   14000237f:	mov    rcx,QWORD PTR [rbp+0x60]
   140002383:	mov    rax,QWORD PTR [rcx]
   140002386:	call   QWORD PTR [rax+0x18]
   140002389:	mov    eax,ebx
   14000238b:	jmp    0x1400023fe
   14000238d:	mov    rcx,QWORD PTR [rbp+0x58]
   140002391:	call   0x140001a60
   140002396:	mov    rcx,QWORD PTR [rbp+0x58]
   14000239a:	mov    rax,QWORD PTR [rcx]
   14000239d:	call   QWORD PTR [rax+0x78]
   1400023a0:	test   rax,rax
   1400023a3:	je     0x1400023d6
   1400023a5:	mov    rcx,QWORD PTR [rbp+0x58]
   1400023a9:	call   0x140004590
   1400023ae:	mov    rcx,QWORD PTR [rbp+0x60]
   1400023b2:	mov    rax,QWORD PTR [rcx]
   1400023b5:	call   QWORD PTR [rax+0x28]
   1400023b8:	test   eax,eax
   1400023ba:	je     0x1400023c8
   1400023bc:	lea    rcx,[rip+0x186ed]        # 0x14001aab0
   1400023c3:	call   0x140004360
   1400023c8:	mov    rcx,QWORD PTR [rbp+0x60]
   1400023cc:	mov    rax,QWORD PTR [rcx]
   1400023cf:	call   QWORD PTR [rax+0x18]
   1400023d2:	mov    eax,esi
   1400023d4:	jmp    0x1400023fe
   1400023d6:	mov    rcx,QWORD PTR [rbp+0x60]
   1400023da:	mov    rax,QWORD PTR [rcx]
   1400023dd:	call   QWORD PTR [rax+0x28]
   1400023e0:	test   eax,eax
   1400023e2:	je     0x1400023f2
   1400023e4:	lea    rcx,[rip+0x186c5]        # 0x14001aab0
   1400023eb:	call   0x140004360
   1400023f0:	mov    edi,esi
   1400023f2:	mov    rcx,QWORD PTR [rbp+0x60]
   1400023f6:	mov    rdx,QWORD PTR [rcx]
   1400023f9:	call   QWORD PTR [rdx+0x18]
   1400023fc:	mov    eax,edi
   1400023fe:	add    rsp,0x58
   140002402:	pop    r15
   140002404:	pop    r14
   140002406:	pop    r13
   140002408:	pop    r12
   14000240a:	pop    rdi
   14000240b:	pop    rsi
   14000240c:	pop    rbx
   14000240d:	pop    rbp
   14000240e:	ret    
   14000240f:	int3   
   140002410:	mov    QWORD PTR [rsp+0x18],rbx
   140002415:	mov    QWORD PTR [rsp+0x10],rdx
   14000241a:	mov    QWORD PTR [rsp+0x8],rcx
   14000241f:	push   rbp
   140002420:	push   rsi
   140002421:	push   rdi
   140002422:	push   r12
   140002424:	push   r13
   140002426:	push   r14
   140002428:	push   r15
   14000242a:	sub    rsp,0x30
   14000242e:	mov    rbx,rcx
   140002431:	lea    rcx,[rip+0x18868]        # 0x14001aca0
   140002438:	mov    r14b,r8b
   14000243b:	or     r12d,0xffffffff
   14000243f:	call   0x140009d94
   140002444:	movsxd rbx,DWORD PTR [rbx]
   140002447:	lea    r9d,[rbx+0x1]
   14000244b:	mov    rdi,rax
   14000244e:	movsxd rcx,r9d
   140002451:	shl    rcx,0x3
   140002455:	call   0x140003ff0
   14000245a:	mov    r11,QWORD PTR [rsp+0x78]
   14000245f:	lea    esi,[r12+0x2]
   140002464:	mov    rdx,QWORD PTR [r11]
   140002467:	mov    r8,rax
   14000246a:	mov    QWORD PTR [rsp+0x20],rax
   14000246f:	mov    rcx,QWORD PTR [rdx]
   140002472:	mov    r15,rbx
   140002475:	mov    QWORD PTR [rax],rcx
   140002478:	mov    eax,esi
   14000247a:	mov    DWORD PTR [rsp+0x88],eax
   140002481:	mov    r13d,eax
   140002484:	cmp    rax,rbx
   140002487:	jge    0x1400025d5
   14000248d:	mov    rdx,QWORD PTR [rip+0x222f4]        # 0x140024788
   140002494:	lea    rbp,[r8+0x8]
   140002498:	cmp    BYTE PTR [rip+0x222c5],0x0        # 0x140024764
   14000249f:	mov    rax,QWORD PTR [r11]
   1400024a2:	mov    rbx,QWORD PTR [rax+r13*8]
   1400024a6:	je     0x1400024bc
   1400024a8:	cmp    BYTE PTR [rbx],0x2d
   1400024ab:	je     0x1400024f3
   1400024ad:	mov    QWORD PTR [rbp+0x0],rbx
   1400024b1:	inc    esi
   1400024b3:	add    rbp,0x8
   1400024b7:	jmp    0x14000255b
   1400024bc:	lea    rdx,[rip+0x187cd]        # 0x14001ac90
   1400024c3:	mov    rcx,rbx
   1400024c6:	call   0x14000a850
   1400024cb:	test   eax,eax
   1400024cd:	je     0x140002591
   1400024d3:	lea    rdx,[rip+0x187b2]        # 0x14001ac8c
   1400024da:	mov    rcx,rbx
   1400024dd:	call   0x14000a850
   1400024e2:	test   eax,eax
   1400024e4:	je     0x140002591
   1400024ea:	cmp    BYTE PTR [rbx],0x2d
   1400024ed:	jne    0x1400025c9
   1400024f3:	mov    rcx,rbx
   1400024f6:	call   0x140001dac
   1400024fb:	test   eax,eax
   1400024fd:	js     0x14000251f
   1400024ff:	mov    rdx,QWORD PTR [rip+0x22282]        # 0x140024788
   140002506:	mov    r12d,eax
   140002509:	cdqe   
   14000250b:	shl    rax,0x5
   14000250f:	mov    rdi,QWORD PTR [rax+rdx*1]
   140002513:	mov    rax,QWORD PTR [rsp+0x70]
   140002518:	inc    rdi
   14000251b:	dec    DWORD PTR [rax]
   14000251d:	jmp    0x140002556
   14000251f:	lea    rdx,[rip+0x1875a]        # 0x14001ac80
   140002526:	mov    rcx,rbx
   140002529:	call   0x1400040e8
   14000252e:	test   eax,eax
   140002530:	je     0x140002579
   140002532:	lea    rdx,[rip+0x18737]        # 0x14001ac70
   140002539:	mov    rcx,rbx
   14000253c:	call   0x1400040e8
   140002541:	test   eax,eax
   140002543:	je     0x140002579
   140002545:	mov    QWORD PTR [rbp+0x0],rbx
   140002549:	inc    esi
   14000254b:	add    rbp,0x8
   14000254f:	mov    rdx,QWORD PTR [rip+0x22232]        # 0x140024788
   140002556:	mov    r11,QWORD PTR [rsp+0x78]
   14000255b:	mov    eax,DWORD PTR [rsp+0x88]
   140002562:	inc    r13
   140002565:	inc    eax
   140002567:	mov    DWORD PTR [rsp+0x88],eax
   14000256e:	cmp    r13,r15
   140002571:	jl     0x140002498
   140002577:	jmp    0x1400025dc
   140002579:	cmp    BYTE PTR [rbx+0x1],0x58
   14000257d:	mov    edi,0xc
   140002582:	lea    eax,[rdi-0x2]
   140002585:	cmove  edi,eax
   140002588:	add    rdi,rbx
   14000258b:	or     r12d,0xffffffff
   14000258f:	jmp    0x14000254f
   140002591:	inc    DWORD PTR [rsp+0x88]
   140002598:	inc    r13
   14000259b:	mov    QWORD PTR [rbp+0x0],rbx
   14000259f:	inc    esi
   1400025a1:	add    rbp,0x8
   1400025a5:	cmp    r13,r15
   1400025a8:	jge    0x14000254f
   1400025aa:	mov    r11,QWORD PTR [rsp+0x78]
   1400025af:	mov    rdx,QWORD PTR [rip+0x221d2]        # 0x140024788
   1400025b6:	inc    esi
   1400025b8:	mov    rax,QWORD PTR [r11]
   1400025bb:	mov    rcx,QWORD PTR [rax+r13*8]
   1400025bf:	mov    QWORD PTR [rbp+0x0],rcx
   1400025c3:	add    rbp,0x8
   1400025c7:	jmp    0x14000255b
   1400025c9:	mov    eax,DWORD PTR [rsp+0x88]
   1400025d0:	mov    r11,QWORD PTR [rsp+0x78]
   1400025d5:	mov    rdx,QWORD PTR [rip+0x221ac]        # 0x140024788
   1400025dc:	mov    r10,QWORD PTR [rsp+0x20]
   1400025e1:	movsxd r8,eax
   1400025e4:	mov    ebp,0x1
   1400025e9:	movsxd rax,esi
   1400025ec:	cmp    r8,r15
   1400025ef:	jge    0x140002613
   1400025f1:	lea    r9,[r10+rax*8]
   1400025f5:	mov    eax,r15d
   1400025f8:	sub    eax,r8d
   1400025fb:	add    esi,eax
   1400025fd:	mov    rax,QWORD PTR [r11]
   140002600:	mov    rcx,QWORD PTR [rax+r8*8]
   140002604:	add    r8,rbp
   140002607:	mov    QWORD PTR [r9],rcx
   14000260a:	add    r9,0x8
   14000260e:	cmp    r8,r15
   140002611:	jl     0x1400025fd
   140002613:	movsxd rax,esi
   140002616:	and    QWORD PTR [r10+rax*8],0x0
   14000261b:	mov    rax,QWORD PTR [rsp+0x70]
   140002620:	mov    QWORD PTR [r11],r10
   140002623:	mov    DWORD PTR [rax],esi
   140002625:	test   rdi,rdi
   140002628:	jne    0x140002665
   14000262a:	mov    rbx,QWORD PTR [rdx]
   14000262d:	add    rbx,rbp
   140002630:	cmp    DWORD PTR [rdx+0x8],0x4
   140002634:	jne    0x14000264e
   140002636:	call   0x1400045c0
   14000263b:	cmp    al,bpl
   14000263e:	jne    0x14000264e
   140002640:	mov    rax,QWORD PTR [rip+0x22141]        # 0x140024788
   140002647:	mov    rbx,QWORD PTR [rax+0x18]
   14000264b:	add    rbx,rbp
   14000264e:	lea    rcx,[rip+0x1860b]        # 0x14001ac60
   140002655:	mov    rdx,rbx
   140002658:	call   0x14000407c
   14000265d:	mov    rax,rbx
   140002660:	jmp    0x14000276f
   140002665:	test   r12d,r12d
   140002668:	js     0x14000276c
   14000266e:	movsxd rax,r12d
   140002671:	xor    ebx,ebx
   140002673:	shl    rax,0x5
   140002677:	jmp    0x1400026af
   140002679:	movsxd rcx,r12d
   14000267c:	shl    rcx,0x5
   140002680:	mov    rcx,QWORD PTR [rcx+rdx*1+0x10]
   140002685:	call   0x140001dac
   14000268a:	cmp    ebx,DWORD PTR [rip+0x220e4]        # 0x140024774
   140002690:	jg     0x140002707
   140002692:	test   eax,eax
   140002694:	js     0x1400026db
   140002696:	mov    rdx,QWORD PTR [rip+0x220eb]        # 0x140024788
   14000269d:	mov    r12d,eax
   1400026a0:	cdqe   
   1400026a2:	shl    rax,0x5
   1400026a6:	mov    rdi,QWORD PTR [rax+rdx*1]
   1400026aa:	add    rdi,rbp
   1400026ad:	add    ebx,ebp
   1400026af:	cmp    DWORD PTR [rax+rdx*1+0x8],ebp
   1400026b3:	je     0x140002679
   1400026b5:	movsxd rcx,r12d
   1400026b8:	shl    rcx,0x5
   1400026bc:	mov    r8d,DWORD PTR [rcx+rdx*1+0x8]
   1400026c1:	sub    r8d,0x2
   1400026c5:	je     0x140002745
   1400026c7:	dec    r8d
   1400026ca:	je     0x140002729
   1400026cc:	cmp    r8d,0x2
   1400026d0:	je     0x140002766
   1400026d6:	jmp    0x14000276c
   1400026db:	test   r14b,r14b
   1400026de:	jne    0x140002720
   1400026e0:	mov    rdx,QWORD PTR [rip+0x220a1]        # 0x140024788
   1400026e7:	movsxd rax,r12d
   1400026ea:	lea    rcx,[rip+0x18547]        # 0x14001ac38
   1400026f1:	shl    rax,0x5
   1400026f5:	mov    rdx,QWORD PTR [rax+rdx*1+0x10]
   1400026fa:	call   0x140004360
   1400026ff:	mov    ecx,ebp
   140002701:	call   0x140009bcc
   140002706:	int3   
   140002707:	test   r14b,r14b
   14000270a:	jne    0x140002720
   14000270c:	lea    rcx,[rip+0x184ed]        # 0x14001ac00
   140002713:	call   0x140004360
   140002718:	mov    ecx,ebp
   14000271a:	call   0x140009bcc
   14000271f:	int3   
   140002720:	lea    rax,[rip+0x184cd]        # 0x14001abf4
   140002727:	jmp    0x14000276f
   140002729:	test   r14b,r14b
   14000272c:	jne    0x140002720
   14000272e:	lea    rcx,[rip+0x184a3]        # 0x14001abd8
   140002735:	mov    rdx,rdi
   140002738:	call   0x140004360
   14000273d:	mov    ecx,ebp
   14000273f:	call   0x140009bcc
   140002744:	int3   
   140002745:	test   r14b,r14b
   140002748:	jne    0x140002766
   14000274a:	mov    r8,QWORD PTR [rdx]
   14000274d:	lea    rcx,[rip+0x1844c]        # 0x14001aba0
   140002754:	mov    rdx,rdi
   140002757:	add    r8,rbp
   14000275a:	call   0x140004360
   14000275f:	mov    rdx,QWORD PTR [rip+0x22022]        # 0x140024788
   140002766:	mov    rdi,QWORD PTR [rdx]
   140002769:	add    rdi,rbp
   14000276c:	mov    rax,rdi
   14000276f:	mov    rbx,QWORD PTR [rsp+0x80]
   140002777:	add    rsp,0x30
   14000277b:	pop    r15
   14000277d:	pop    r14
   14000277f:	pop    r13
   140002781:	pop    r12
   140002783:	pop    rdi
   140002784:	pop    rsi
   140002785:	pop    rbp
   140002786:	ret    
   140002787:	int3   
   140002788:	mov    QWORD PTR [rsp+0x20],rbx
   14000278d:	push   rbp
   14000278e:	push   rsi
   14000278f:	push   rdi
   140002790:	push   r12
   140002792:	push   r13
   140002794:	push   r14
   140002796:	push   r15
   140002798:	lea    rbp,[rsp-0xa0]
   1400027a0:	sub    rsp,0x1a0
   1400027a7:	mov    rax,QWORD PTR [rip+0x20912]        # 0x1400230c0
   1400027ae:	xor    rax,rsp
   1400027b1:	mov    QWORD PTR [rbp+0x90],rax
   1400027b8:	movzx  eax,WORD PTR [rip+0x18769]        # 0x14001af28
   1400027bf:	movups xmm0,XMMWORD PTR [rip+0x18752]        # 0x14001af18
   1400027c6:	or     DWORD PTR [rsp+0x20],0xffffffff
   1400027cb:	mov    WORD PTR [rbp-0x80],ax
   1400027cf:	mov    al,BYTE PTR [rip+0x18755]        # 0x14001af2a
   1400027d5:	mov    edi,ecx
   1400027d7:	movaps XMMWORD PTR [rsp+0x70],xmm0
   1400027dc:	mov    r12,r8
   1400027df:	mov    QWORD PTR [rsp+0x60],r8
   1400027e4:	mov    rsi,rdx
   1400027e7:	xor    ebx,ebx
   1400027e9:	lea    rcx,[rbp-0x7d]
   1400027ed:	xor    edx,edx
   1400027ef:	and    DWORD PTR [rsp+0x24],ebx
   1400027f3:	mov    r8d,0x109
   1400027f9:	mov    BYTE PTR [rbp-0x7e],al
   1400027fc:	mov    QWORD PTR [rsp+0x50],rbx
   140002801:	xor    r15d,r15d
   140002804:	call   0x14000a530
   140002809:	lea    rcx,[rip+0x18098]        # 0x14001a8a8
   140002810:	xor    r14d,r14d
   140002813:	mov    QWORD PTR [rsp+0x58],rbx
   140002818:	call   0x140009d94
   14000281d:	test   rax,rax
   140002820:	je     0x14000283b
   140002822:	cmp    BYTE PTR [rax],bl
   140002824:	je     0x140002c40
   14000282a:	mov    rcx,rax
   14000282d:	call   0x140004048
   140002832:	mov    QWORD PTR [r12],rax
   140002836:	jmp    0x140002c40
   14000283b:	lea    eax,[rdi+0x1]
   14000283e:	movsxd rcx,eax
   140002841:	shl    rcx,0x3
   140002845:	call   0x140003ff0
   14000284a:	mov    rcx,QWORD PTR [rsi]
   14000284d:	add    rsi,0x8
   140002851:	mov    QWORD PTR [rax],rcx
   140002854:	mov    rbx,QWORD PTR [rsi]
   140002857:	mov    r13,rax
   14000285a:	mov    QWORD PTR [rsp+0x68],rax
   14000285f:	lea    r12,[rax+0x8]
   140002863:	mov    eax,0x1
   140002868:	sub    edi,eax
   14000286a:	test   rbx,rbx
   14000286d:	je     0x1400029ac
   140002873:	mov    r13d,DWORD PTR [rsp+0x24]
   140002878:	cmp    BYTE PTR [rbx],0x2d
   14000287b:	jne    0x1400029a2
   140002881:	lea    rdx,[rip+0x18680]        # 0x14001af08
   140002888:	mov    rcx,rbx
   14000288b:	call   0x1400040e8
   140002890:	test   eax,eax
   140002892:	jne    0x14000289f
   140002894:	add    rbx,0x9
   140002898:	mov    QWORD PTR [rsp+0x50],rbx
   14000289d:	jmp    0x1400028d7
   14000289f:	lea    rdx,[rip+0x1864a]        # 0x14001aef0
   1400028a6:	mov    rcx,rbx
   1400028a9:	call   0x14000a850
   1400028ae:	test   eax,eax
   1400028b0:	jne    0x1400028c0
   1400028b2:	mov    eax,0x1
   1400028b7:	mov    DWORD PTR [rsp+0x20],eax
   1400028bb:	jmp    0x140002990
   1400028c0:	lea    rdx,[rip+0x18611]        # 0x14001aed8
   1400028c7:	mov    rcx,rbx
   1400028ca:	call   0x14000a850
   1400028cf:	test   eax,eax
   1400028d1:	jne    0x1400028e1
   1400028d3:	and    DWORD PTR [rsp+0x20],eax
   1400028d7:	mov    eax,0x1
   1400028dc:	jmp    0x140002990
   1400028e1:	lea    rdx,[rip+0x185e4]        # 0x14001aecc
   1400028e8:	mov    rcx,rbx
   1400028eb:	call   0x14000a850
   1400028f0:	lea    rdx,[rip+0x18399]        # 0x14001ac90
   1400028f7:	mov    rcx,rbx
   1400028fa:	test   eax,eax
   1400028fc:	mov    eax,0x1
   140002901:	cmove  r13d,eax
   140002905:	call   0x14000a850
   14000290a:	test   eax,eax
   14000290c:	je     0x140002921
   14000290e:	lea    rdx,[rip+0x18377]        # 0x14001ac8c
   140002915:	mov    rcx,rbx
   140002918:	call   0x14000a850
   14000291d:	test   eax,eax
   14000291f:	jne    0x140002937
   140002921:	cmp    edi,0x2
   140002924:	jl     0x140002937
   140002926:	mov    QWORD PTR [r12],rbx
   14000292a:	dec    edi
   14000292c:	add    r12,0x8
   140002930:	add    rsi,0x8
   140002934:	mov    rbx,QWORD PTR [rsi]
   140002937:	lea    rdx,[rip+0x18572]        # 0x14001aeb0
   14000293e:	mov    rcx,rbx
   140002941:	call   0x14000a850
   140002946:	test   eax,eax
   140002948:	jne    0x140002954
   14000294a:	mov    eax,0x1
   14000294f:	mov    r15d,eax
   140002952:	jmp    0x140002988
   140002954:	lea    rdx,[rip+0x1853d]        # 0x14001ae98
   14000295b:	mov    rcx,rbx
   14000295e:	call   0x1400040e8
   140002963:	test   eax,eax
   140002965:	jne    0x14000296c
   140002967:	xor    r15d,r15d
   14000296a:	jmp    0x140002983
   14000296c:	lea    rdx,[rip+0x18515]        # 0x14001ae88
   140002973:	mov    rcx,rbx
   140002976:	call   0x1400040e8
   14000297b:	test   eax,eax
   14000297d:	jne    0x140002983
   14000297f:	lea    r14,[rbx+0x8]
   140002983:	mov    eax,0x1
   140002988:	mov    QWORD PTR [r12],rbx
   14000298c:	add    r12,0x8
   140002990:	add    rsi,0x8
   140002994:	sub    edi,eax
   140002996:	mov    rbx,QWORD PTR [rsi]
   140002999:	test   rbx,rbx
   14000299c:	jne    0x140002878
   1400029a2:	mov    DWORD PTR [rsp+0x24],r13d
   1400029a7:	mov    r13,QWORD PTR [rsp+0x68]
   1400029ac:	test   edi,edi
   1400029ae:	jg     0x1400029b4
   1400029b0:	xor    ebx,ebx
   1400029b2:	jmp    0x1400029d5
   1400029b4:	mov    rbx,QWORD PTR [rsi]
   1400029b7:	sub    edi,eax
   1400029b9:	mov    QWORD PTR [r12],rbx
   1400029bd:	jmp    0x1400029cd
   1400029bf:	sub    edi,eax
   1400029c1:	mov    rax,QWORD PTR [rsi]
   1400029c4:	mov    QWORD PTR [r12],rax
   1400029c8:	mov    eax,0x1
   1400029cd:	add    r12,0x8
   1400029d1:	add    rsi,0x8
   1400029d5:	test   edi,edi
   1400029d7:	jg     0x1400029bf
   1400029d9:	xor    esi,esi
   1400029db:	mov    QWORD PTR [r12],rsi
   1400029df:	cmp    DWORD PTR [rsp+0x24],esi
   1400029e3:	je     0x140002a40
   1400029e5:	test   rbx,rbx
   1400029e8:	je     0x140002a40
   1400029ea:	lea    rdx,[rsp+0x28]
   1400029ef:	mov    rcx,rbx
   1400029f2:	call   0x140006a58
   1400029f7:	test   eax,eax
   1400029f9:	je     0x140002a21
   1400029fb:	mov    rdx,rbx
   1400029fe:	lea    rcx,[rip+0x1845b]        # 0x14001ae60
   140002a05:	cmp    eax,0xffffffff
   140002a08:	je     0x140002a11
   140002a0a:	lea    rcx,[rip+0x18427]        # 0x14001ae38
   140002a11:	call   0x140004360
   140002a16:	mov    ecx,0x1
   140002a1b:	call   0x140009bcc
   140002a20:	int3   
   140002a21:	test   r15d,r15d
   140002a24:	jne    0x140002a54
   140002a26:	test   r14,r14
   140002a29:	jne    0x140002a5e
   140002a2b:	mov    r14,QWORD PTR [rsp+0x48]
   140002a30:	test   r14,r14
   140002a33:	je     0x140002af9
   140002a39:	mov    QWORD PTR [rsp+0x58],rbx
   140002a3e:	jmp    0x140002a54
   140002a40:	mov    QWORD PTR [rsp+0x28],rsi
   140002a45:	mov    QWORD PTR [rsp+0x30],rsi
   140002a4a:	mov    QWORD PTR [rsp+0x38],rsi
   140002a4f:	mov    BYTE PTR [rsp+0x40],sil
   140002a54:	test   r14,r14
   140002a57:	je     0x140002aa4
   140002a59:	test   r15d,r15d
   140002a5c:	jne    0x140002aa4
   140002a5e:	mov    rcx,r14
   140002a61:	call   0x140009fa0
   140002a66:	lea    rcx,[rip+0x183b3]        # 0x14001ae20
   140002a6d:	mov    rbx,rax
   140002a70:	call   0x140009fa0
   140002a75:	lea    rcx,[rbx+rax*1+0x1]
   140002a7a:	call   0x140003ff0
   140002a7f:	lea    rdx,[rip+0x1839a]        # 0x14001ae20
   140002a86:	mov    rcx,rax
   140002a89:	mov    rbx,rax
   140002a8c:	call   0x14000a750
   140002a91:	mov    rdx,r14
   140002a94:	mov    rcx,rbx
   140002a97:	call   0x14000a6b0
   140002a9c:	mov    rcx,rbx
   140002a9f:	call   0x14000c2e8
   140002aa4:	mov    rdi,QWORD PTR [rsp+0x58]
   140002aa9:	test   rdi,rdi
   140002aac:	je     0x140002af9
   140002aae:	test   r15d,r15d
   140002ab1:	jne    0x140002af9
   140002ab3:	mov    rcx,rdi
   140002ab6:	call   0x140009fa0
   140002abb:	lea    rcx,[rip+0x18346]        # 0x14001ae08
   140002ac2:	mov    rbx,rax
   140002ac5:	call   0x140009fa0
   140002aca:	lea    rcx,[rbx+rax*1+0x1]
   140002acf:	call   0x140003ff0
   140002ad4:	lea    rdx,[rip+0x1832d]        # 0x14001ae08
   140002adb:	mov    rcx,rax
   140002ade:	mov    rbx,rax
   140002ae1:	call   0x14000a750
   140002ae6:	mov    rdx,rdi
   140002ae9:	mov    rcx,rbx
   140002aec:	call   0x14000a6b0
   140002af1:	mov    rcx,rbx
   140002af4:	call   0x14000c2e8
   140002af9:	mov    rax,QWORD PTR [rsp+0x50]
   140002afe:	movzx  ecx,BYTE PTR [rsp+0x40]
   140002b03:	mov    rdx,QWORD PTR [rsp+0x38]
   140002b08:	mov    r8d,DWORD PTR [rsp+0x20]
   140002b0d:	test   rax,rax
   140002b10:	cmovne rdx,rax
   140002b14:	cmp    r8d,0xffffffff
   140002b18:	movzx  eax,r8b
   140002b1c:	cmovne ecx,eax
   140002b1f:	mov    QWORD PTR [rsp+0x38],rdx
   140002b24:	mov    BYTE PTR [rsp+0x40],cl
   140002b28:	mov    rcx,QWORD PTR [rsp+0x30]
   140002b2d:	test   rcx,rcx
   140002b30:	je     0x140002b44
   140002b32:	call   0x140004048
   140002b37:	mov    rcx,QWORD PTR [rsp+0x60]
   140002b3c:	mov    rdx,QWORD PTR [rsp+0x38]
   140002b41:	mov    QWORD PTR [rcx],rax
   140002b44:	test   rdx,rdx
   140002b47:	je     0x140002c33
   140002b4d:	mov    rcx,rdx
   140002b50:	call   0x140007014
   140002b55:	test   eax,eax
   140002b57:	jne    0x140002b75
   140002b59:	mov    rdx,QWORD PTR [rsp+0x38]
   140002b5e:	lea    rcx,[rip+0x1826b]        # 0x14001add0
   140002b65:	call   0x140004360
   140002b6a:	mov    ecx,0x1
   140002b6f:	call   0x140009bcc
   140002b74:	int3   
   140002b75:	lea    rcx,[rsp+0x28]
   140002b7a:	call   0x1400045d4
   140002b7f:	mov    rcx,QWORD PTR [rsp+0x38]
   140002b84:	lea    rdx,[rip+0x18239]        # 0x14001adc4
   140002b8b:	test   rax,rax
   140002b8e:	mov    r9,rdx
   140002b91:	mov    rbx,rax
   140002b94:	cmovne r9,rax
   140002b98:	cmp    BYTE PTR [rsp+0x40],sil
   140002b9d:	lea    rax,[rip+0x18218]        # 0x14001adbc
   140002ba4:	lea    r8,[rip+0x18209]        # 0x14001adb4
   140002bab:	cmovne r8,rax
   140002baf:	test   rcx,rcx
   140002bb2:	cmovne rdx,rcx
   140002bb6:	lea    rcx,[rip+0x181bb]        # 0x14001ad78
   140002bbd:	call   0x14000407c
   140002bc2:	test   rbx,rbx
   140002bc5:	jne    0x140002bf6
   140002bc7:	mov    rdx,QWORD PTR [rsp+0x38]
   140002bcc:	mov    rcx,QWORD PTR [rip+0x21b65]        # 0x140024738
   140002bd3:	call   0x140006efc
   140002bd8:	test   eax,eax
   140002bda:	jne    0x140002c33
   140002bdc:	mov    rdx,QWORD PTR [rsp+0x38]
   140002be1:	lea    rcx,[rip+0x18158]        # 0x14001ad40
   140002be8:	call   0x140004360
   140002bed:	lea    ecx,[rbx+0x1]
   140002bf0:	call   0x140009bcc
   140002bf5:	int3   
   140002bf6:	mov    rcx,QWORD PTR [rsp+0x30]
   140002bfb:	test   rcx,rcx
   140002bfe:	je     0x140002c1e
   140002c00:	call   0x140009fa0
   140002c05:	mov    ecx,0x104
   140002c0a:	cmp    rax,rcx
   140002c0d:	ja     0x140002c6a
   140002c0f:	mov    rdx,QWORD PTR [rsp+0x30]
   140002c14:	lea    rcx,[rsp+0x70]
   140002c19:	call   0x14000a6b0
   140002c1e:	lea    rcx,[rsp+0x70]
   140002c23:	call   0x14000c2e8
   140002c28:	mov    rdx,r13
   140002c2b:	mov    rcx,rbx
   140002c2e:	call   0x140004860
   140002c33:	call   0x140006c38
   140002c38:	mov    rcx,r13
   140002c3b:	call   0x140004074
   140002c40:	mov    rcx,QWORD PTR [rbp+0x90]
   140002c47:	xor    rcx,rsp
   140002c4a:	call   0x14000a820
   140002c4f:	mov    rbx,QWORD PTR [rsp+0x1f8]
   140002c57:	add    rsp,0x1a0
   140002c5e:	pop    r15
   140002c60:	pop    r14
   140002c62:	pop    r13
   140002c64:	pop    r12
   140002c66:	pop    rdi
   140002c67:	pop    rsi
   140002c68:	pop    rbp
   140002c69:	ret    
   140002c6a:	mov    edx,ecx
   140002c6c:	lea    rcx,[rip+0x1804d]        # 0x14001acc0
   140002c73:	call   0x140004360
   140002c78:	mov    ecx,0x1
   140002c7d:	call   0x140009bcc
   140002c82:	int3   
   140002c83:	int3   
   140002c84:	mov    QWORD PTR [rsp+0x10],rbx
   140002c89:	mov    QWORD PTR [rsp+0x18],r8
   140002c8e:	mov    QWORD PTR [rsp+0x8],rcx
   140002c93:	push   rbp
   140002c94:	push   rsi
   140002c95:	push   rdi
   140002c96:	push   r12
   140002c98:	push   r13
   140002c9a:	push   r14
   140002c9c:	push   r15
   140002c9e:	sub    rsp,0x20
   140002ca2:	mov    rbp,QWORD PTR [rdx]
   140002ca5:	mov    r13,QWORD PTR [rsp+0x80]
   140002cad:	mov    esi,DWORD PTR [rcx]
   140002caf:	xor    r12d,r12d
   140002cb2:	mov    r14,r9
   140002cb5:	mov    r15,rdx
   140002cb8:	and    DWORD PTR [r13+0x0],r12d
   140002cbc:	mov    rdi,QWORD PTR [rbp+0x0]
   140002cc0:	lea    ebx,[r12+0x1]
   140002cc5:	test   rdi,rdi
   140002cc8:	je     0x14000313d
   140002cce:	cmp    BYTE PTR [rdi],0x2d
   140002cd1:	jne    0x140003133
   140002cd7:	lea    rdx,[rip+0x17fb2]        # 0x14001ac90
   140002cde:	mov    rcx,rdi
   140002ce1:	add    rbp,0x8
   140002ce5:	sub    esi,ebx
   140002ce7:	call   0x14000a850
   140002cec:	test   eax,eax
   140002cee:	je     0x14000310c
   140002cf4:	lea    rdx,[rip+0x17f91]        # 0x14001ac8c
   140002cfb:	mov    rcx,rdi
   140002cfe:	call   0x14000a850
   140002d03:	test   eax,eax
   140002d05:	je     0x14000310c
   140002d0b:	lea    rdx,[rip+0x181ba]        # 0x14001aecc
   140002d12:	mov    rcx,rdi
   140002d15:	call   0x14000a850
   140002d1a:	test   eax,eax
   140002d1c:	jne    0x140002d2f
   140002d1e:	cmp    esi,ebx
   140002d20:	jl     0x140003158
   140002d26:	lea    r12d,[rax+0x2]
   140002d2a:	jmp    0x140003126
   140002d2f:	lea    rdx,[rip+0x18486]        # 0x14001b1bc
   140002d36:	mov    rcx,rdi
   140002d39:	call   0x14000a850
   140002d3e:	test   eax,eax
   140002d40:	je     0x1400031a1
   140002d46:	lea    rdx,[rip+0x1846b]        # 0x14001b1b8
   140002d4d:	mov    rcx,rdi
   140002d50:	call   0x14000a850
   140002d55:	test   eax,eax
   140002d57:	je     0x1400031a1
   140002d5d:	lea    rdx,[rip+0x18450]        # 0x14001b1b4
   140002d64:	mov    rcx,rdi
   140002d67:	call   0x14000a850
   140002d6c:	test   eax,eax
   140002d6e:	je     0x1400031a1
   140002d74:	lea    rdx,[rip+0x1842d]        # 0x14001b1a8
   140002d7b:	mov    rcx,rdi
   140002d7e:	call   0x14000a850
   140002d83:	test   eax,eax
   140002d85:	je     0x140003199
   140002d8b:	lea    rdx,[rip+0x18406]        # 0x14001b198
   140002d92:	mov    rcx,rdi
   140002d95:	call   0x14000a850
   140002d9a:	test   eax,eax
   140002d9c:	jne    0x140002da9
   140002d9e:	mov    BYTE PTR [rip+0x219bd],bl        # 0x140024761
   140002da4:	jmp    0x140003126
   140002da9:	lea    rdx,[rip+0x183e0]        # 0x14001b190
   140002db0:	mov    rcx,rdi
   140002db3:	call   0x14000a850
   140002db8:	test   eax,eax
   140002dba:	je     0x140003191
   140002dc0:	lea    rdx,[rip+0x183b9]        # 0x14001b180
   140002dc7:	mov    rcx,rdi
   140002dca:	call   0x14000a850
   140002dcf:	test   eax,eax
   140002dd1:	je     0x140003103
   140002dd7:	lea    rdx,[rip+0x18392]        # 0x14001b170
   140002dde:	mov    rcx,rdi
   140002de1:	call   0x1400040e8
   140002de6:	test   eax,eax
   140002de8:	je     0x140003103
   140002dee:	lea    rdx,[rip+0x18373]        # 0x14001b168
   140002df5:	mov    rcx,rdi
   140002df8:	call   0x14000a850
   140002dfd:	test   eax,eax
   140002dff:	jne    0x140002e0d
   140002e01:	lea    rcx,[rip+0x18340]        # 0x14001b148
   140002e08:	jmp    0x140002f21
   140002e0d:	lea    rdx,[rip+0x18324]        # 0x14001b138
   140002e14:	mov    rcx,rdi
   140002e17:	call   0x14000a850
   140002e1c:	test   eax,eax
   140002e1e:	je     0x140003173
   140002e24:	lea    rdx,[rip+0x182fd]        # 0x14001b128
   140002e2b:	mov    rcx,rdi
   140002e2e:	call   0x14000a850
   140002e33:	test   eax,eax
   140002e35:	jne    0x140002e43
   140002e37:	lea    rcx,[rip+0x182da]        # 0x14001b118
   140002e3e:	jmp    0x140002f21
   140002e43:	lea    rdx,[rip+0x182c6]        # 0x14001b110
   140002e4a:	mov    rcx,rdi
   140002e4d:	call   0x14000a850
   140002e52:	test   eax,eax
   140002e54:	jne    0x140002e62
   140002e56:	lea    rcx,[rip+0x182af]        # 0x14001b10c
   140002e5d:	jmp    0x140002f21
   140002e62:	lea    rdx,[rip+0x1829f]        # 0x14001b108
   140002e69:	mov    rcx,rdi
   140002e6c:	call   0x14000a850
   140002e71:	test   eax,eax
   140002e73:	jne    0x140002e81
   140002e75:	lea    rcx,[rip+0x18284]        # 0x14001b100
   140002e7c:	jmp    0x140002f21
   140002e81:	lea    rdx,[rip+0x18270]        # 0x14001b0f8
   140002e88:	mov    rcx,rdi
   140002e8b:	call   0x14000a850
   140002e90:	test   eax,eax
   140002e92:	jne    0x140002ea0
   140002e94:	lea    rcx,[rip+0x18255]        # 0x14001b0f0
   140002e9b:	jmp    0x140002f21
   140002ea0:	lea    rdx,[rip+0x18239]        # 0x14001b0e0
   140002ea7:	mov    rcx,rdi
   140002eaa:	call   0x14000a850
   140002eaf:	test   eax,eax
   140002eb1:	jne    0x140002ebc
   140002eb3:	lea    rcx,[rip+0x18216]        # 0x14001b0d0
   140002eba:	jmp    0x140002f21
   140002ebc:	lea    rdx,[rip+0x181fd]        # 0x14001b0c0
   140002ec3:	mov    rcx,rdi
   140002ec6:	call   0x14000a850
   140002ecb:	test   eax,eax
   140002ecd:	jne    0x140002ed8
   140002ecf:	lea    rcx,[rip+0x181da]        # 0x14001b0b0
   140002ed6:	jmp    0x140002f21
   140002ed8:	lea    rdx,[rip+0x181c9]        # 0x14001b0a8
   140002edf:	mov    rcx,rdi
   140002ee2:	call   0x14000a850
   140002ee7:	test   eax,eax
   140002ee9:	je     0x140002ecf
   140002eeb:	lea    rdx,[rip+0x181a6]        # 0x14001b098
   140002ef2:	mov    rcx,rdi
   140002ef5:	call   0x14000a850
   140002efa:	test   eax,eax
   140002efc:	jne    0x140002f07
   140002efe:	lea    rcx,[rip+0x18183]        # 0x14001b088
   140002f05:	jmp    0x140002f21
   140002f07:	lea    rdx,[rip+0x1816a]        # 0x14001b078
   140002f0e:	mov    rcx,rdi
   140002f11:	call   0x14000a850
   140002f16:	test   eax,eax
   140002f18:	jne    0x140002f2d
   140002f1a:	lea    rcx,[rip+0x18147]        # 0x14001b068
   140002f21:	xor    edx,edx
   140002f23:	call   0x14000120c
   140002f28:	jmp    0x140003126
   140002f2d:	lea    rdx,[rip+0x18128]        # 0x14001b05c
   140002f34:	mov    rcx,rdi
   140002f37:	call   0x1400040e8
   140002f3c:	mov    rcx,rdi
   140002f3f:	test   eax,eax
   140002f41:	jne    0x140002f7e
   140002f43:	call   0x140009fa0
   140002f48:	lea    rcx,[rax+0x32]
   140002f4c:	call   0x140003ff0
   140002f51:	cmp    BYTE PTR [rdi+0x5],0x0
   140002f55:	mov    rbx,rax
   140002f58:	mov    rcx,rax
   140002f5b:	je     0x140002f6d
   140002f5d:	lea    r8,[rdi+0x6]
   140002f61:	lea    rdx,[rip+0x180d8]        # 0x14001b040
   140002f68:	jmp    0x1400030ed
   140002f6d:	lea    rdx,[rip+0x180a4]        # 0x14001b018
   140002f74:	call   0x14000a474
   140002f79:	jmp    0x1400030f2
   140002f7e:	lea    rdx,[rip+0x1808b]        # 0x14001b010
   140002f85:	call   0x1400040e8
   140002f8a:	test   eax,eax
   140002f8c:	je     0x1400030cb
   140002f92:	lea    rdx,[rip+0x1806f]        # 0x14001b008
   140002f99:	mov    rcx,rdi
   140002f9c:	call   0x1400040e8
   140002fa1:	test   eax,eax
   140002fa3:	je     0x1400030cb
   140002fa9:	lea    rdx,[rip+0x18054]        # 0x14001b004
   140002fb0:	mov    rcx,rdi
   140002fb3:	call   0x1400040e8
   140002fb8:	test   eax,eax
   140002fba:	je     0x1400030cb
   140002fc0:	lea    rdx,[rip+0x18039]        # 0x14001b000
   140002fc7:	mov    rcx,rdi
   140002fca:	call   0x1400040e8
   140002fcf:	test   eax,eax
   140002fd1:	je     0x1400030cb
   140002fd7:	lea    rdx,[rip+0x18012]        # 0x14001aff0
   140002fde:	mov    rcx,rdi
   140002fe1:	call   0x14000a850
   140002fe6:	test   eax,eax
   140002fe8:	je     0x1400030ba
   140002fee:	lea    rdx,[rip+0x17ff7]        # 0x14001afec
   140002ff5:	mov    rcx,rdi
   140002ff8:	call   0x14000a850
   140002ffd:	test   eax,eax
   140002fff:	je     0x1400030ba
   140003005:	lea    rdx,[rip+0x17fd4]        # 0x14001afe0
   14000300c:	mov    rcx,rdi
   14000300f:	call   0x14000a850
   140003014:	test   eax,eax
   140003016:	je     0x1400030ba
   14000301c:	lea    rdx,[rip+0x17ee5]        # 0x14001af08
   140003023:	mov    rcx,rdi
   140003026:	call   0x1400040e8
   14000302b:	test   eax,eax
   14000302d:	je     0x140003126
   140003033:	lea    rdx,[rip+0x17e9e]        # 0x14001aed8
   14000303a:	mov    rcx,rdi
   14000303d:	call   0x14000a850
   140003042:	test   eax,eax
   140003044:	je     0x140003126
   14000304a:	lea    rdx,[rip+0x17e9f]        # 0x14001aef0
   140003051:	mov    rcx,rdi
   140003054:	call   0x14000a850
   140003059:	test   eax,eax
   14000305b:	je     0x140003126
   140003061:	lea    rdx,[rip+0x17e20]        # 0x14001ae88
   140003068:	mov    rcx,rdi
   14000306b:	call   0x1400040e8
   140003070:	test   eax,eax
   140003072:	je     0x140003126
   140003078:	mov    rcx,rdi
   14000307b:	call   0x140004ea8
   140003080:	test   al,al
   140003082:	jne    0x140003126
   140003088:	lea    rdx,[rip+0x1798d]        # 0x14001aa1c
   14000308f:	mov    rcx,rdi
   140003092:	call   0x1400040e8
   140003097:	test   eax,eax
   140003099:	je     0x140003126
   14000309f:	lea    rdx,[rip+0x1796e]        # 0x14001aa14
   1400030a6:	mov    rcx,rdi
   1400030a9:	call   0x1400040e8
   1400030ae:	test   eax,eax
   1400030b0:	je     0x140003126
   1400030b2:	mov    rcx,rdi
   1400030b5:	jmp    0x140002f21
   1400030ba:	lea    rcx,[rip+0x17eef]        # 0x14001afb0
   1400030c1:	mov    rdx,rdi
   1400030c4:	call   0x140004360
   1400030c9:	jmp    0x140003126
   1400030cb:	mov    rcx,rdi
   1400030ce:	call   0x140009fa0
   1400030d3:	lea    rcx,[rax+0x6]
   1400030d7:	call   0x140003ff0
   1400030dc:	lea    r8,[rdi+0x1]
   1400030e0:	lea    rdx,[rip+0x17ebd]        # 0x14001afa4
   1400030e7:	mov    rbx,rax
   1400030ea:	mov    rcx,rax
   1400030ed:	call   0x14000a474
   1400030f2:	xor    edx,edx
   1400030f4:	mov    rcx,rbx
   1400030f7:	call   0x14000120c
   1400030fc:	mov    ebx,0x1
   140003101:	jmp    0x140003126
   140003103:	mov    QWORD PTR [rip+0x2165e],rdi        # 0x140024768
   14000310a:	jmp    0x140003126
   14000310c:	cmp    esi,ebx
   14000310e:	jl     0x1400031a9
   140003114:	mov    rcx,QWORD PTR [rbp+0x0]
   140003118:	call   0x14000137c
   14000311d:	add    rbp,0x8
   140003121:	sub    esi,ebx
   140003123:	mov    r12d,ebx
   140003126:	mov    rdi,QWORD PTR [rbp+0x0]
   14000312a:	test   rdi,rdi
   14000312d:	jne    0x140002cce
   140003133:	mov    r8,QWORD PTR [rsp+0x70]
   140003138:	mov    rcx,QWORD PTR [rsp+0x60]
   14000313d:	sub    esi,ebx
   14000313f:	js     0x14000314c
   140003141:	mov    rax,QWORD PTR [rbp+0x0]
   140003145:	add    rbp,0x8
   140003149:	mov    QWORD PTR [r14],rax
   14000314c:	cmp    QWORD PTR [r14],0x0
   140003150:	jne    0x1400031b2
   140003152:	mov    DWORD PTR [r13+0x0],ebx
   140003156:	jmp    0x1400031b9
   140003158:	lea    rcx,[rip+0x17e19]        # 0x14001af78
   14000315f:	mov    rdx,rdi
   140003162:	call   0x140004360
   140003167:	mov    BYTE PTR [rip+0x215f5],bl        # 0x140024762
   14000316d:	mov    DWORD PTR [r13+0x0],ebx
   140003171:	jmp    0x1400031c5
   140003173:	mov    r8,QWORD PTR [rip+0x215be]        # 0x140024738
   14000317a:	mov    rdx,QWORD PTR [rip+0x215cf]        # 0x140024750
   140003181:	lea    rcx,[rip+0x17dd8]        # 0x14001af60
   140003188:	call   0x140001f04
   14000318d:	xor    al,al
   14000318f:	jmp    0x1400031c7
   140003191:	mov    BYTE PTR [rip+0x215cc],bl        # 0x140024763
   140003197:	jmp    0x1400031c5
   140003199:	mov    BYTE PTR [rip+0x215c1],bl        # 0x140024760
   14000319f:	jmp    0x1400031c5
   1400031a1:	mov    BYTE PTR [rip+0x215bb],bl        # 0x140024762
   1400031a7:	jmp    0x1400031c5
   1400031a9:	lea    rcx,[rip+0x17d80]        # 0x14001af30
   1400031b0:	jmp    0x14000315f
   1400031b2:	test   r12d,r12d
   1400031b5:	cmove  r12d,ebx
   1400031b9:	test   esi,esi
   1400031bb:	js     0x1400031c2
   1400031bd:	mov    DWORD PTR [rcx],esi
   1400031bf:	mov    QWORD PTR [r15],rbp
   1400031c2:	mov    DWORD PTR [r8],r12d
   1400031c5:	mov    al,bl
   1400031c7:	mov    rbx,QWORD PTR [rsp+0x68]
   1400031cc:	add    rsp,0x20
   1400031d0:	pop    r15
   1400031d2:	pop    r14
   1400031d4:	pop    r13
   1400031d6:	pop    r12
   1400031d8:	pop    rdi
   1400031d9:	pop    rsi
   1400031da:	pop    rbp
   1400031db:	ret    
   1400031dc:	mov    QWORD PTR [rsp+0x10],rbx
   1400031e1:	mov    QWORD PTR [rsp+0x18],rbp
   1400031e6:	mov    QWORD PTR [rsp+0x20],rsi
   1400031eb:	push   rdi
   1400031ec:	push   r12
   1400031ee:	push   r13
   1400031f0:	push   r14
   1400031f2:	push   r15
   1400031f4:	sub    rsp,0x20
   1400031f8:	movsxd r13,DWORD PTR [r8]
   1400031fb:	mov    r15,QWORD PTR [r9]
   1400031fe:	movsxd rbp,ecx
   140003201:	lea    ebx,[r13+rbp*1+0x0]
   140003206:	mov    rsi,r9
   140003209:	mov    rdi,r8
   14000320c:	lea    eax,[rbx+0x1]
   14000320f:	mov    r14,rdx
   140003212:	movsxd rcx,eax
   140003215:	shl    rcx,0x3
   140003219:	call   0x140003ff0
   14000321e:	mov    DWORD PTR [rdi],ebx
   140003220:	xor    ebx,ebx
   140003222:	mov    r12,rax
   140003225:	mov    QWORD PTR [rsi],rax
   140003228:	test   ebp,ebp
   14000322a:	jle    0x14000325d
   14000322c:	mov    rax,QWORD PTR [r14+rbx*8]
   140003230:	cmp    BYTE PTR [rax],0x2d
   140003233:	jne    0x140003255
   140003235:	cmp    BYTE PTR [rax+0x1],0x4a
   140003239:	jne    0x140003255
   14000323b:	lea    rcx,[rax+0x2]
   14000323f:	test   rcx,rcx
   140003242:	jne    0x140003248
   140003244:	xor    eax,eax
   140003246:	jmp    0x14000324d
   140003248:	call   0x140004048
   14000324d:	mov    QWORD PTR [r12],rax
   140003251:	add    r12,0x8
   140003255:	inc    rbx
   140003258:	cmp    rbx,rbp
   14000325b:	jl     0x14000322c
   14000325d:	xor    eax,eax
   14000325f:	test   r13,r13
   140003262:	jle    0x140003290
   140003264:	mov    rcx,QWORD PTR [r15+rax*8]
   140003268:	cmp    BYTE PTR [rcx],0x2d
   14000326b:	jne    0x140003288
   14000326d:	cmp    BYTE PTR [rcx+0x1],0x4a
   140003271:	jne    0x140003288
   140003273:	add    rcx,0x2
   140003277:	cmp    BYTE PTR [rcx],0x0
   14000327a:	je     0x14000333a
   140003280:	mov    QWORD PTR [r12],rcx
   140003284:	add    r12,0x8
   140003288:	inc    rax
   14000328b:	cmp    rax,r13
   14000328e:	jl     0x140003264
   140003290:	xor    ebx,ebx
   140003292:	test   ebp,ebp
   140003294:	jle    0x1400032ba
   140003296:	mov    rcx,QWORD PTR [r14+rbx*8]
   14000329a:	cmp    BYTE PTR [rcx],0x2d
   14000329d:	jne    0x1400032a5
   14000329f:	cmp    BYTE PTR [rcx+0x1],0x4a
   1400032a3:	je     0x1400032b2
   1400032a5:	call   0x140004048
   1400032aa:	mov    QWORD PTR [r12],rax
   1400032ae:	add    r12,0x8
   1400032b2:	inc    rbx
   1400032b5:	cmp    rbx,rbp
   1400032b8:	jl     0x140003296
   1400032ba:	xor    esi,esi
   1400032bc:	xor    ebx,ebx
   1400032be:	test   r13,r13
   1400032c1:	jle    0x14000336b
   1400032c7:	lea    rbp,[r15+0x8]
   1400032cb:	mov    r14d,r13d
   1400032ce:	mov    rdi,QWORD PTR [r15+rbx*8]
   1400032d2:	cmp    BYTE PTR [rdi],0x2d
   1400032d5:	jne    0x140003351
   1400032d7:	mov    al,BYTE PTR [rdi+0x1]
   1400032da:	cmp    al,0x4a
   1400032dc:	je     0x140003359
   1400032de:	cmp    BYTE PTR [rip+0x21480],0x0        # 0x140024765
   1400032e5:	je     0x140003351
   1400032e7:	cmp    al,0x63
   1400032e9:	jne    0x140003351
   1400032eb:	lea    rdx,[rip+0x1799a]        # 0x14001ac8c
   1400032f2:	mov    rcx,rdi
   1400032f5:	call   0x14000a850
   1400032fa:	test   eax,eax
   1400032fc:	je     0x140003311
   1400032fe:	lea    rdx,[rip+0x1798b]        # 0x14001ac90
   140003305:	mov    rcx,rdi
   140003308:	call   0x14000a850
   14000330d:	test   eax,eax
   14000330f:	jne    0x140003351
   140003311:	lea    eax,[r14-0x1]
   140003315:	cmp    esi,eax
   140003317:	jge    0x140003351
   140003319:	mov    QWORD PTR [r12],rdi
   14000331d:	mov    rcx,QWORD PTR [rbp+0x0]
   140003321:	call   0x140006160
   140003326:	add    r12,0x10
   14000332a:	inc    esi
   14000332c:	mov    QWORD PTR [r12-0x8],rax
   140003331:	inc    rbx
   140003334:	add    rbp,0x8
   140003338:	jmp    0x140003359
   14000333a:	lea    rcx,[rip+0x17e87]        # 0x14001b1c8
   140003341:	call   0x140004360
   140003346:	mov    ecx,0x1
   14000334b:	call   0x140009bcc
   140003350:	int3   
   140003351:	mov    QWORD PTR [r12],rdi
   140003355:	add    r12,0x8
   140003359:	inc    rbx
   14000335c:	inc    esi
   14000335e:	add    rbp,0x8
   140003362:	cmp    rbx,r13
   140003365:	jl     0x1400032ce
   14000336b:	and    QWORD PTR [r12],0x0
   140003370:	mov    rbx,QWORD PTR [rsp+0x58]
   140003375:	mov    rbp,QWORD PTR [rsp+0x60]
   14000337a:	mov    rsi,QWORD PTR [rsp+0x68]
   14000337f:	add    rsp,0x20
   140003383:	pop    r15
   140003385:	pop    r14
   140003387:	pop    r13
   140003389:	pop    r12
   14000338b:	pop    rdi
   14000338c:	ret    
   14000338d:	int3   
   14000338e:	int3   
   14000338f:	int3   
   140003390:	mov    QWORD PTR [rsp+0x10],rbx
   140003395:	mov    QWORD PTR [rsp+0x18],rbp
   14000339a:	mov    QWORD PTR [rsp+0x20],rsi
   14000339f:	push   rdi
   1400033a0:	push   r12
   1400033a2:	push   r13
   1400033a4:	push   r14
   1400033a6:	push   r15
   1400033a8:	sub    rsp,0x170
   1400033af:	mov    rax,QWORD PTR [rip+0x1fd0a]        # 0x1400230c0
   1400033b6:	xor    rax,rsp
   1400033b9:	mov    QWORD PTR [rsp+0x160],rax
   1400033c1:	xor    ebp,ebp
   1400033c3:	xor    r13d,r13d
   1400033c6:	mov    bl,dl
   1400033c8:	and    QWORD PTR [rsp+0x28],rbp
   1400033cd:	mov    rsi,rcx
   1400033d0:	xor    r12d,r12d
   1400033d3:	mov    QWORD PTR [rsp+0x30],r13
   1400033d8:	call   0x1400040e0
   1400033dd:	test   al,al
   1400033df:	je     0x1400033e8
   1400033e1:	call   0x140004290
   1400033e6:	jmp    0x1400033ed
   1400033e8:	mov    rax,QWORD PTR [rsp+0x20]
   1400033ed:	lea    rdx,[rip+0x17fe8]        # 0x14001b3dc
   1400033f4:	mov    rcx,rsi
   1400033f7:	mov    QWORD PTR [rsp+0x20],rax
   1400033fc:	call   0x14000b218
   140003401:	mov    r15,rax
   140003404:	test   rax,rax
   140003407:	jne    0x14000342e
   140003409:	test   bl,bl
   14000340b:	jne    0x140003426
   14000340d:	lea    rcx,[rip+0x17fac]        # 0x14001b3c0
   140003414:	mov    rdx,rsi
   140003417:	call   0x140004360
   14000341c:	lea    ecx,[r15+0x1]
   140003420:	call   0x140009bcc
   140003425:	int3   
   140003426:	or     eax,0xffffffff
   140003429:	jmp    0x14000377c
   14000342e:	lea    rcx,[rsp+0x40]
   140003433:	mov    r8,rax
   140003436:	mov    edx,0x118
   14000343b:	call   0x14000afd8
   140003440:	test   rax,rax
   140003443:	je     0x140003742
   140003449:	xor    r14d,r14d
   14000344c:	mov    al,BYTE PTR [rsp+0x40]
   140003450:	or     edi,0xffffffff
   140003453:	inc    r12d
   140003456:	cmp    al,0x23
   140003458:	je     0x140003727
   14000345e:	cmp    al,0x2d
   140003460:	je     0x140003474
   140003462:	lea    rcx,[rip+0x17f27]        # 0x14001b390
   140003469:	mov    r8,rsi
   14000346c:	mov    edx,r12d
   14000346f:	call   0x140004360
   140003474:	mov    eax,DWORD PTR [rip+0x21316]        # 0x140024790
   14000347a:	cmp    ebp,eax
   14000347c:	jl     0x1400034e4
   14000347e:	test   eax,eax
   140003480:	lea    r13d,[rax+rax*1]
   140003484:	mov    ecx,0xa
   140003489:	cmove  r13d,ecx
   14000348d:	cmp    r13d,ebp
   140003490:	cmovle r13d,ebp
   140003494:	movsxd rcx,r13d
   140003497:	shl    rcx,0x5
   14000349b:	call   0x140003ff0
   1400034a0:	mov    rcx,QWORD PTR [rip+0x212e1]        # 0x140024788
   1400034a7:	mov    rbx,rax
   1400034aa:	test   rcx,rcx
   1400034ad:	je     0x1400034cc
   1400034af:	movsxd r8,DWORD PTR [rip+0x212da]        # 0x140024790
   1400034b6:	mov    rdx,rcx
   1400034b9:	mov    rcx,rax
   1400034bc:	shl    r8,0x5
   1400034c0:	call   0x14000a140
   1400034c5:	mov    rcx,QWORD PTR [rip+0x212bc]        # 0x140024788
   1400034cc:	call   0x140004074
   1400034d1:	mov    DWORD PTR [rip+0x212b8],r13d        # 0x140024790
   1400034d8:	mov    r13,QWORD PTR [rsp+0x30]
   1400034dd:	mov    QWORD PTR [rip+0x212a4],rbx        # 0x140024788
   1400034e4:	lea    rcx,[rsp+0x40]
   1400034e9:	call   0x140009fa0
   1400034ee:	mov    rdx,QWORD PTR [rip+0x1fb4b]        # 0x140023040
   1400034f5:	lea    rcx,[rsp+0x40]
   1400034fa:	mov    BYTE PTR [rax+rcx*1-0x1],0x0
   1400034ff:	lea    rcx,[rsp+0x40]
   140003504:	call   0x14000af44
   140003509:	lea    rbx,[rsp+rax*1+0x40]
   14000350e:	cmp    BYTE PTR [rbx],0x0
   140003511:	je     0x140003530
   140003513:	mov    rdx,QWORD PTR [rip+0x1fb26]        # 0x140023040
   14000351a:	mov    BYTE PTR [rbx],0x0
   14000351d:	inc    rbx
   140003520:	mov    rcx,rbx
   140003523:	call   0x14000ae90
   140003528:	add    rbx,rax
   14000352b:	cmp    BYTE PTR [rbx],0x0
   14000352e:	jne    0x140003547
   140003530:	lea    rcx,[rip+0x17e29]        # 0x14001b360
   140003537:	mov    edx,r12d
   14000353a:	mov    r8,rsi
   14000353d:	call   0x140004360
   140003542:	jmp    0x140003692
   140003547:	lea    rdx,[rip+0x17e06]        # 0x14001b354
   14000354e:	mov    rcx,rbx
   140003551:	call   0x1400040e8
   140003556:	test   eax,eax
   140003558:	je     0x140003690
   14000355e:	lea    rdx,[rip+0x17de3]        # 0x14001b348
   140003565:	mov    rcx,rbx
   140003568:	call   0x1400040e8
   14000356d:	mov    rcx,rbx
   140003570:	test   eax,eax
   140003572:	jne    0x1400035c4
   140003574:	mov    rdx,QWORD PTR [rip+0x1fac5]        # 0x140023040
   14000357b:	call   0x14000af44
   140003580:	add    rbx,rax
   140003583:	cmp    BYTE PTR [rbx],0x0
   140003586:	je     0x140003530
   140003588:	mov    rdx,QWORD PTR [rip+0x1fab1]        # 0x140023040
   14000358f:	mov    rcx,rbx
   140003592:	call   0x14000ae90
   140003597:	add    rbx,rax
   14000359a:	cmp    BYTE PTR [rbx],0x0
   14000359d:	je     0x140003530
   14000359f:	mov    rdx,QWORD PTR [rip+0x1fa9a]        # 0x140023040
   1400035a6:	mov    rcx,rbx
   1400035a9:	mov    r13,rbx
   1400035ac:	mov    QWORD PTR [rsp+0x30],rbx
   1400035b1:	call   0x14000af44
   1400035b6:	mov    edi,0x1
   1400035bb:	mov    BYTE PTR [rax+rbx*1],0x0
   1400035bf:	jmp    0x140003692
   1400035c4:	lea    rdx,[rip+0x17d75]        # 0x14001b340
   1400035cb:	call   0x1400040e8
   1400035d0:	test   eax,eax
   1400035d2:	jne    0x1400035dc
   1400035d4:	lea    edi,[rax+0x2]
   1400035d7:	jmp    0x140003692
   1400035dc:	lea    rdx,[rip+0x17d55]        # 0x14001b338
   1400035e3:	mov    rcx,rbx
   1400035e6:	call   0x1400040e8
   1400035eb:	test   eax,eax
   1400035ed:	jne    0x1400035f7
   1400035ef:	lea    edi,[rax+0x5]
   1400035f2:	jmp    0x140003692
   1400035f7:	lea    rdx,[rip+0x175f6]        # 0x14001abf4
   1400035fe:	mov    rcx,rbx
   140003601:	call   0x1400040e8
   140003606:	test   eax,eax
   140003608:	jne    0x140003612
   14000360a:	lea    edi,[rax+0x3]
   14000360d:	jmp    0x140003692
   140003612:	lea    rdx,[rip+0x17d0f]        # 0x14001b328
   140003619:	mov    rcx,rbx
   14000361c:	call   0x1400040e8
   140003621:	test   eax,eax
   140003623:	jne    0x14000367e
   140003625:	mov    rdx,QWORD PTR [rip+0x1fa14]        # 0x140023040
   14000362c:	mov    rcx,rbx
   14000362f:	call   0x14000af44
   140003634:	add    rbx,rax
   140003637:	cmp    BYTE PTR [rbx],0x0
   14000363a:	je     0x140003672
   14000363c:	mov    rdx,QWORD PTR [rip+0x1f9fd]        # 0x140023040
   140003643:	mov    rcx,rbx
   140003646:	call   0x14000ae90
   14000364b:	add    rbx,rax
   14000364e:	cmp    BYTE PTR [rbx],0x0
   140003651:	je     0x140003672
   140003653:	mov    rdx,QWORD PTR [rip+0x1f9e6]        # 0x140023040
   14000365a:	mov    rcx,rbx
   14000365d:	mov    QWORD PTR [rsp+0x28],rbx
   140003662:	call   0x14000af44
   140003667:	mov    edi,0x4
   14000366c:	mov    BYTE PTR [rax+rbx*1],0x0
   140003670:	jmp    0x140003692
   140003672:	lea    rcx,[rip+0x17c77]        # 0x14001b2f0
   140003679:	jmp    0x140003537
   14000367e:	lea    rcx,[rip+0x17c3b]        # 0x14001b2c0
   140003685:	mov    r8,rsi
   140003688:	mov    edx,r12d
   14000368b:	call   0x140004360
   140003690:	xor    edi,edi
   140003692:	lea    r8,[rsp+0x40]
   140003697:	lea    rcx,[rip+0x17c0a]        # 0x14001b2a8
   14000369e:	mov    edx,ebp
   1400036a0:	call   0x14000407c
   1400036a5:	cmp    edi,0xffffffff
   1400036a8:	je     0x140003727
   1400036aa:	mov    rbx,QWORD PTR [rip+0x210d7]        # 0x140024788
   1400036b1:	lea    rcx,[rsp+0x40]
   1400036b6:	call   0x140004048
   1400036bb:	mov    DWORD PTR [r14+rbx*1+0x8],edi
   1400036c0:	dec    edi
   1400036c2:	mov    QWORD PTR [r14+rbx*1],rax
   1400036c6:	je     0x1400036f3
   1400036c8:	cmp    edi,0x3
   1400036cb:	jne    0x140003721
   1400036cd:	mov    rcx,QWORD PTR [rsp+0x28]
   1400036d2:	call   0x140004048
   1400036d7:	mov    rdx,QWORD PTR [rip+0x210aa]        # 0x140024788
   1400036de:	lea    r8,[rip+0x17bab]        # 0x14001b290
   1400036e5:	mov    QWORD PTR [r14+rdx*1+0x18],rax
   1400036ea:	lea    rcx,[rip+0x17b6f]        # 0x14001b260
   1400036f1:	jmp    0x140003715
   1400036f3:	mov    rcx,r13
   1400036f6:	call   0x140004048
   1400036fb:	mov    rdx,QWORD PTR [rip+0x21086]        # 0x140024788
   140003702:	lea    r8,[rip+0x17b47]        # 0x14001b250
   140003709:	mov    QWORD PTR [r14+rdx*1+0x10],rax
   14000370e:	lea    rcx,[rip+0x17b13]        # 0x14001b228
   140003715:	mov    rdx,QWORD PTR [r14+rdx*1]
   140003719:	mov    r9,rax
   14000371c:	call   0x14000407c
   140003721:	inc    ebp
   140003723:	add    r14,0x20
   140003727:	lea    rcx,[rsp+0x40]
   14000372c:	mov    r8,r15
   14000372f:	mov    edx,0x118
   140003734:	call   0x14000afd8
   140003739:	test   rax,rax
   14000373c:	jne    0x14000344c
   140003742:	mov    rcx,r15
   140003745:	call   0x14000ae28
   14000374a:	mov    DWORD PTR [rip+0x21024],ebp        # 0x140024774
   140003750:	call   0x1400040e0
   140003755:	test   al,al
   140003757:	je     0x14000377a
   140003759:	call   0x140004290
   14000375e:	sub    rax,QWORD PTR [rsp+0x20]
   140003763:	mov    rcx,rax
   140003766:	call   0x1400042dc
   14000376b:	lea    rcx,[rip+0x17a8e]        # 0x14001b200
   140003772:	mov    rdx,rax
   140003775:	call   0x140009c2c
   14000377a:	mov    eax,ebp
   14000377c:	mov    rcx,QWORD PTR [rsp+0x160]
   140003784:	xor    rcx,rsp
   140003787:	call   0x14000a820
   14000378c:	lea    r11,[rsp+0x170]
   140003794:	mov    rbx,QWORD PTR [r11+0x38]
   140003798:	mov    rbp,QWORD PTR [r11+0x40]
   14000379c:	mov    rsi,QWORD PTR [r11+0x48]
   1400037a0:	mov    rsp,r11
   1400037a3:	pop    r15
   1400037a5:	pop    r14
   1400037a7:	pop    r13
   1400037a9:	pop    r12
   1400037ab:	pop    rdi
   1400037ac:	ret    
   1400037ad:	int3   
   1400037ae:	int3   
   1400037af:	int3   
   1400037b0:	mov    rax,rsp
   1400037b3:	mov    QWORD PTR [rax+0x8],rbx
   1400037b7:	mov    QWORD PTR [rax+0x10],rsi
   1400037bb:	mov    QWORD PTR [rax+0x18],rdi
   1400037bf:	mov    QWORD PTR [rax+0x20],r12
   1400037c3:	push   rbp
   1400037c4:	mov    rbp,rsp
   1400037c7:	sub    rsp,0x80
   1400037ce:	mov    rsi,r9
   1400037d1:	mov    r12d,r8d
   1400037d4:	mov    rbx,rdx
   1400037d7:	mov    rdi,rcx
   1400037da:	test   rdx,rdx
   1400037dd:	jne    0x140003808
   1400037df:	lea    rcx,[rbp-0x60]
   1400037e3:	mov    r8d,0x60
   1400037e9:	call   0x14000a530
   1400037ee:	lea    rcx,[rbp-0x60]
   1400037f2:	mov    DWORD PTR [rbp-0x60],0x10001
   1400037f9:	call   QWORD PTR [rdi+0x8]
   1400037fc:	movsxd r11,DWORD PTR [rbp-0x48]
   140003800:	test   r11d,r11d
   140003803:	jle    0x140003808
   140003805:	mov    rbx,r11
   140003808:	mov    eax,DWORD PTR [rbp+0x30]
   14000380b:	lea    r8,[rbp-0x60]
   14000380f:	lea    rcx,[rip+0xffffffffffffe73e]        # 0x140001f54
   140003816:	mov    DWORD PTR [rbp-0x50],eax
   140003819:	mov    rax,QWORD PTR [rbp+0x38]
   14000381d:	mov    rdx,rbx
   140003820:	mov    QWORD PTR [rbp-0x48],rax
   140003824:	mov    rax,QWORD PTR [rdi]
   140003827:	mov    DWORD PTR [rbp-0x60],r12d
   14000382b:	mov    QWORD PTR [rbp-0x40],rax
   14000382f:	mov    rax,QWORD PTR [rdi+0x8]
   140003833:	mov    QWORD PTR [rbp-0x58],rsi
   140003837:	mov    QWORD PTR [rbp-0x38],rax
   14000383b:	mov    rax,QWORD PTR [rdi+0x10]
   14000383f:	mov    QWORD PTR [rbp-0x30],rax
   140003843:	call   0x140005a74
   140003848:	mov    ecx,DWORD PTR [rbp+0x40]
   14000384b:	lea    r11,[rsp+0x80]
   140003853:	test   ecx,ecx
   140003855:	mov    rbx,QWORD PTR [r11+0x10]
   140003859:	mov    rsi,QWORD PTR [r11+0x18]
   14000385d:	mov    rdi,QWORD PTR [r11+0x20]
   140003861:	mov    r12,QWORD PTR [r11+0x28]
   140003865:	cmovne eax,ecx
   140003868:	mov    rsp,r11
   14000386b:	pop    rbp
   14000386c:	ret    
   14000386d:	int3   
   14000386e:	int3   
   14000386f:	int3   
   140003870:	rex push rbp
   140003872:	push   rbx
   140003873:	push   rsi
   140003874:	push   rdi
   140003875:	push   r12
   140003877:	push   r13
   140003879:	lea    rbp,[rsp-0x2c8]
   140003881:	sub    rsp,0x3c8
   140003888:	mov    rax,QWORD PTR [rip+0x1f831]        # 0x1400230c0
   14000388f:	xor    rax,rsp
   140003892:	mov    QWORD PTR [rbp+0x2b0],rax
   140003899:	mov    rax,QWORD PTR [rbp+0x348]
   1400038a0:	mov    r13,QWORD PTR [rbp+0x328]
   1400038a7:	and    DWORD PTR [rsp+0x50],0x0
   1400038ac:	and    QWORD PTR [rsp+0x58],0x0
   1400038b2:	and    QWORD PTR [rsp+0x60],0x0
   1400038b8:	mov    QWORD PTR [rip+0x20e91],rax        # 0x140024750
   1400038bf:	mov    al,BYTE PTR [rbp+0x350]
   1400038c5:	mov    DWORD PTR [rsp+0x40],ecx
   1400038c9:	mov    rcx,QWORD PTR [rbp+0x330]
   1400038d0:	mov    BYTE PTR [rip+0x20e8e],al        # 0x140024764
   1400038d6:	mov    al,BYTE PTR [rbp+0x358]
   1400038dc:	mov    esi,r8d
   1400038df:	mov    r8,QWORD PTR [rbp+0x340]
   1400038e6:	mov    QWORD PTR [rsp+0x48],rdx
   1400038eb:	mov    rdx,QWORD PTR [rbp+0x338]
   1400038f2:	mov    BYTE PTR [rip+0x20e6d],al        # 0x140024765
   1400038f8:	mov    eax,DWORD PTR [rbp+0x368]
   1400038fe:	mov    QWORD PTR [rip+0x20e33],rcx        # 0x140024738
   140003905:	mov    cl,BYTE PTR [rbp+0x360]
   14000390b:	mov    r12,r9
   14000390e:	mov    QWORD PTR [rip+0x20e43],rdx        # 0x140024758
   140003915:	mov    DWORD PTR [rip+0x20e55],eax        # 0x140024770
   14000391b:	mov    QWORD PTR [rip+0x20e26],r8        # 0x140024748
   140003922:	call   0x140004dfc
   140003927:	call   0x1400040e0
   14000392c:	test   al,al
   14000392e:	je     0x140003a23
   140003934:	lea    rcx,[rip+0x170c5]        # 0x14001aa00
   14000393b:	call   0x140009c2c
   140003940:	call   0x1400040e0
   140003945:	lea    rbx,[rip+0x170ac]        # 0x14001a9f8
   14000394c:	cmp    al,0x1
   14000394e:	lea    rdi,[rip+0x1709f]        # 0x14001a9f4
   140003955:	mov    rdx,rbx
   140003958:	lea    rcx,[rip+0x17089]        # 0x14001a9e8
   14000395f:	cmove  rdx,rdi
   140003963:	call   0x140009c2c
   140003968:	cmp    BYTE PTR [rip+0x20df5],0x1        # 0x140024764
   14000396f:	mov    rdx,rbx
   140003972:	lea    rcx,[rip+0x1705f]        # 0x14001a9d8
   140003979:	cmove  rdx,rdi
   14000397d:	call   0x140009c2c
   140003982:	mov    rdx,QWORD PTR [rip+0x20dbf]        # 0x140024748
   140003989:	lea    rcx,[rip+0x17030]        # 0x14001a9c0
   140003990:	call   0x140009c2c
   140003995:	mov    rdx,QWORD PTR [rip+0x20db4]        # 0x140024750
   14000399c:	lea    rcx,[rip+0x17005]        # 0x14001a9a8
   1400039a3:	call   0x140009c2c
   1400039a8:	call   0x1400041b4
   1400039ad:	lea    rcx,[rip+0x16fe4]        # 0x14001a998
   1400039b4:	cmp    al,0x1
   1400039b6:	cmove  rbx,rdi
   1400039ba:	mov    rdx,rbx
   1400039bd:	call   0x140009c2c
   1400039c2:	mov    rdx,QWORD PTR [rip+0x20d6f]        # 0x140024738
   1400039c9:	lea    rcx,[rip+0x16fb0]        # 0x14001a980
   1400039d0:	call   0x140009c2c
   1400039d5:	mov    rdx,QWORD PTR [rip+0x20d7c]        # 0x140024758
   1400039dc:	lea    rcx,[rip+0x16f8d]        # 0x14001a970
   1400039e3:	call   0x140009c2c
   1400039e8:	lea    rcx,[rip+0x16f71]        # 0x14001a960
   1400039ef:	call   0x140009c2c
   1400039f4:	mov    r11d,DWORD PTR [rip+0x20d75]        # 0x140024770
   1400039fb:	dec    r11d
   1400039fe:	je     0x140003a17
   140003a00:	dec    r11d
   140003a03:	je     0x140003a0e
   140003a05:	lea    rcx,[rip+0x16f34]        # 0x14001a940
   140003a0c:	jmp    0x140003a1e
   140003a0e:	lea    rcx,[rip+0x16f03]        # 0x14001a918
   140003a15:	jmp    0x140003a1e
   140003a17:	lea    rcx,[rip+0x16ed2]        # 0x14001a8f0
   140003a1e:	call   0x140009c2c
   140003a23:	call   0x1400040e0
   140003a28:	test   al,al
   140003a2a:	je     0x140003a73
   140003a2c:	lea    rcx,[rip+0x179ed]        # 0x14001b420
   140003a33:	call   0x140009c2c
   140003a38:	xor    ebx,ebx
   140003a3a:	cmp    DWORD PTR [rsp+0x40],ebx
   140003a3e:	jle    0x140003a65
   140003a40:	xor    edi,edi
   140003a42:	mov    r8,QWORD PTR [rsp+0x48]
   140003a47:	lea    rcx,[rip+0x179c2]        # 0x14001b410
   140003a4e:	mov    edx,ebx
   140003a50:	mov    r8,QWORD PTR [rdi+r8*1]
   140003a54:	call   0x140009c2c
   140003a59:	inc    ebx
   140003a5b:	add    rdi,0x8
   140003a5f:	cmp    ebx,DWORD PTR [rsp+0x40]
   140003a63:	jl     0x140003a42
   140003a65:	lea    rcx,[rip+0x176dc]        # 0x14001b148
   140003a6c:	xor    edx,edx
   140003a6e:	call   0x14000120c
   140003a73:	mov    rdx,QWORD PTR [rsp+0x48]
   140003a78:	mov    ecx,DWORD PTR [rsp+0x40]
   140003a7c:	lea    r8,[rsp+0x60]
   140003a81:	call   0x140002788
   140003a86:	mov    r9d,0x104
   140003a8c:	lea    rax,[rbp+0x90]
   140003a93:	mov    DWORD PTR [rsp+0x38],r9d
   140003a98:	mov    QWORD PTR [rsp+0x30],rax
   140003a9d:	lea    rax,[rbp-0x80]
   140003aa1:	mov    DWORD PTR [rsp+0x28],r9d
   140003aa6:	lea    r8,[rbp+0x1a0]
   140003aad:	lea    rdx,[rsp+0x48]
   140003ab2:	lea    rcx,[rsp+0x40]
   140003ab7:	mov    QWORD PTR [rsp+0x20],rax
   140003abc:	call   0x1400054b4
   140003ac1:	and    QWORD PTR [rsp+0x68],0x0
   140003ac7:	and    QWORD PTR [rsp+0x70],0x0
   140003acd:	call   0x1400040e0
   140003ad2:	test   al,al
   140003ad4:	je     0x140003ae0
   140003ad6:	call   0x140004290
   140003adb:	mov    rbx,rax
   140003ade:	jmp    0x140003ae5
   140003ae0:	mov    rbx,QWORD PTR [rsp+0x58]
   140003ae5:	lea    rdx,[rsp+0x68]
   140003aea:	lea    rcx,[rbp-0x80]
   140003aee:	call   0x140005898
   140003af3:	test   al,al
   140003af5:	jne    0x140003b01
   140003af7:	mov    eax,0x6
   140003afc:	jmp    0x140003c27
   140003b01:	call   0x1400040e0
   140003b06:	test   al,al
   140003b08:	je     0x140003b11
   140003b0a:	call   0x140004290
   140003b0f:	jmp    0x140003b16
   140003b11:	mov    rax,QWORD PTR [rsp+0x58]
   140003b16:	sub    rax,rbx
   140003b19:	mov    rcx,rax
   140003b1c:	call   0x1400042dc
   140003b21:	lea    rcx,[rip+0x178c0]        # 0x14001b3e8
   140003b28:	mov    rdx,rax
   140003b2b:	call   0x14000407c
   140003b30:	add    QWORD PTR [rsp+0x48],0x8
   140003b36:	dec    DWORD PTR [rsp+0x40]
   140003b3a:	cmp    BYTE PTR [rip+0x20c23],0x0        # 0x140024764
   140003b41:	je     0x140003b73
   140003b43:	lea    r9,[rsp+0x48]
   140003b48:	lea    r8,[rsp+0x40]
   140003b4d:	mov    rdx,r12
   140003b50:	mov    ecx,esi
   140003b52:	call   0x1400031dc
   140003b57:	mov    ecx,DWORD PTR [rbp+0x320]
   140003b5d:	mov    rdx,r13
   140003b60:	call   0x140001710
   140003b65:	test   al,al
   140003b67:	jne    0x140003b92
   140003b69:	mov    eax,0x1
   140003b6e:	jmp    0x140003c27
   140003b73:	lea    rcx,[rip+0x16b9e]        # 0x14001a718
   140003b7a:	call   0x140009d94
   140003b7f:	lea    rcx,[rip+0x1785a]        # 0x14001b3e0
   140003b86:	test   rax,rax
   140003b89:	cmovne rcx,rax
   140003b8d:	call   0x14000137c
   140003b92:	lea    rax,[rsp+0x60]
   140003b97:	lea    r9,[rsp+0x58]
   140003b9c:	lea    r8,[rsp+0x50]
   140003ba1:	lea    rdx,[rsp+0x48]
   140003ba6:	lea    rcx,[rsp+0x40]
   140003bab:	mov    QWORD PTR [rsp+0x20],rax
   140003bb0:	call   0x140002c84
   140003bb5:	test   al,al
   140003bb7:	jne    0x140003bbf
   140003bb9:	mov    eax,DWORD PTR [rsp+0x60]
   140003bbd:	jmp    0x140003c27
   140003bbf:	mov    edi,DWORD PTR [rsp+0x50]
   140003bc3:	mov    rbx,QWORD PTR [rsp+0x58]
   140003bc8:	cmp    edi,0x2
   140003bcb:	jne    0x140003bd5
   140003bcd:	mov    rcx,rbx
   140003bd0:	call   0x14000137c
   140003bd5:	mov    r8,QWORD PTR [rsp+0x48]
   140003bda:	mov    edx,DWORD PTR [rsp+0x40]
   140003bde:	mov    rcx,rbx
   140003be1:	call   0x1400018ac
   140003be6:	lea    rcx,[rip+0x16b53]        # 0x14001a740
   140003bed:	xor    edx,edx
   140003bef:	call   0x14000120c
   140003bf4:	call   0x140004ea4
   140003bf9:	mov    r11d,DWORD PTR [rsp+0x60]
   140003bfe:	mov    r9,QWORD PTR [rsp+0x48]
   140003c03:	mov    r8d,DWORD PTR [rsp+0x40]
   140003c08:	mov    rdx,QWORD PTR [rip+0x20b89]        # 0x140024798
   140003c0f:	mov    DWORD PTR [rsp+0x30],r11d
   140003c14:	lea    rcx,[rsp+0x68]
   140003c19:	mov    QWORD PTR [rsp+0x28],rbx
   140003c1e:	mov    DWORD PTR [rsp+0x20],edi
   140003c22:	call   0x140004e38
   140003c27:	mov    rcx,QWORD PTR [rbp+0x2b0]
   140003c2e:	xor    rcx,rsp
   140003c31:	call   0x14000a820
   140003c36:	add    rsp,0x3c8
   140003c3d:	pop    r13
   140003c3f:	pop    r12
   140003c41:	pop    rdi
   140003c42:	pop    rsi
   140003c43:	pop    rbx
   140003c44:	pop    rbp
   140003c45:	ret    
   140003c46:	int3   
   140003c47:	int3   
   140003c48:	mov    QWORD PTR [rsp+0x20],rbx
   140003c4d:	mov    QWORD PTR [rsp+0x18],r8
   140003c52:	push   rbp
   140003c53:	push   rsi
   140003c54:	push   rdi
   140003c55:	push   r12
   140003c57:	push   r13
   140003c59:	push   r14
   140003c5b:	push   r15
   140003c5d:	sub    rsp,0x20
   140003c61:	mov    r15,rcx
   140003c64:	xor    ecx,ecx
   140003c66:	mov    rdi,rdx
   140003c69:	mov    bl,cl
   140003c6b:	mov    BYTE PTR [rsp+0x60],cl
   140003c6f:	mov    r13d,ecx
   140003c72:	mov    esi,ecx
   140003c74:	movzx  r12d,cx
   140003c78:	mov    r14b,cl
   140003c7b:	mov    BYTE PTR [r8],cl
   140003c7e:	xor    ecx,ecx
   140003c80:	xor    r8d,r8d
   140003c83:	mov    rdx,r15
   140003c86:	call   QWORD PTR [rip+0x166b4]        # 0x14001a340
   140003c8c:	mov    rcx,rax
   140003c8f:	sub    ecx,r15d
   140003c92:	mov    QWORD PTR [rsp+0x68],rcx
   140003c97:	je     0x140003ef4
   140003c9d:	mov    edx,0x1
   140003ca2:	cmp    ecx,edx
   140003ca4:	jne    0x140003cac
   140003ca6:	movzx  ebp,BYTE PTR [r15]
   140003caa:	jmp    0x140003cb0
   140003cac:	movzx  ebp,WORD PTR [r15]
   140003cb0:	movzx  eax,bp
   140003cb3:	cmp    eax,0x9
   140003cb6:	je     0x140003e69
   140003cbc:	cmp    eax,0x20
   140003cbf:	je     0x140003e69
   140003cc5:	mov    r10d,0x22
   140003ccb:	cmp    eax,r10d
   140003cce:	je     0x140003dbc
   140003cd4:	cmp    eax,0x2a
   140003cd7:	je     0x140003d43
   140003cd9:	cmp    eax,0x3f
   140003cdc:	je     0x140003d43
   140003cde:	lea    r9d,[r10+0x3a]
   140003ce2:	cmp    eax,r9d
   140003ce5:	je     0x140003d31
   140003ce7:	xor    r8d,r8d
   140003cea:	cmp    r12w,r9w
   140003cee:	jne    0x140003d21
   140003cf0:	test   esi,esi
   140003cf2:	jle    0x140003eb3
   140003cf8:	mov    r8d,esi
   140003cfb:	mov    dl,r9b
   140003cfe:	mov    rcx,rdi
   140003d01:	mov    ebx,esi
   140003d03:	call   0x14000a530
   140003d08:	mov    rcx,QWORD PTR [rsp+0x68]
   140003d0d:	add    rdi,rbx
   140003d10:	mov    bl,BYTE PTR [rsp+0x60]
   140003d14:	mov    edx,0x1
   140003d19:	xor    r8d,r8d
   140003d1c:	jmp    0x140003eb3
   140003d21:	test   bl,bl
   140003d23:	je     0x140003eb3
   140003d29:	mov    r14b,dl
   140003d2c:	jmp    0x140003eda
   140003d31:	add    esi,edx
   140003d33:	test   bl,bl
   140003d35:	je     0x140003ee2
   140003d3b:	mov    r14b,dl
   140003d3e:	jmp    0x140003efa
   140003d43:	test   bl,bl
   140003d45:	jne    0x140003ef1
   140003d4b:	mov    eax,r13d
   140003d4e:	and    eax,0x80000001
   140003d53:	jge    0x140003d5c
   140003d55:	sub    eax,edx
   140003d57:	or     eax,0xfffffffe
   140003d5a:	add    eax,edx
   140003d5c:	test   eax,eax
   140003d5e:	jne    0x140003d67
   140003d60:	mov    rax,QWORD PTR [rsp+0x70]
   140003d65:	mov    BYTE PTR [rax],dl
   140003d67:	mov    r9d,0x5c
   140003d6d:	cmp    r12w,r9w
   140003d71:	jne    0x140003d98
   140003d73:	test   esi,esi
   140003d75:	jle    0x140003d98
   140003d77:	mov    r8d,esi
   140003d7a:	mov    dl,r9b
   140003d7d:	mov    rcx,rdi
   140003d80:	mov    ebx,esi
   140003d82:	call   0x14000a530
   140003d87:	mov    rcx,QWORD PTR [rsp+0x68]
   140003d8c:	add    rdi,rbx
   140003d8f:	mov    bl,BYTE PTR [rsp+0x60]
   140003d93:	mov    edx,0x1
   140003d98:	movzx  eax,bp
   140003d9b:	shr    ax,0x8
   140003d9f:	test   al,al
   140003da1:	jne    0x140003daa
   140003da3:	mov    BYTE PTR [rdi],bpl
   140003da6:	mov    eax,edx
   140003da8:	jmp    0x140003db2
   140003daa:	mov    WORD PTR [rdi],bp
   140003dad:	mov    eax,0x2
   140003db2:	cdqe   
   140003db4:	add    rdi,rax
   140003db7:	jmp    0x140003ee2
   140003dbc:	xor    r8d,r8d
   140003dbf:	lea    r9d,[r8+0x5c]
   140003dc3:	test   bl,bl
   140003dc5:	jne    0x140003d3b
   140003dcb:	cmp    r12w,r9w
   140003dcf:	jne    0x140003e18
   140003dd1:	cmp    esi,edx
   140003dd3:	jle    0x140003e00
   140003dd5:	lea    eax,[rsi-0x2]
   140003dd8:	mov    rcx,rdi
   140003ddb:	shr    eax,1
   140003ddd:	add    eax,edx
   140003ddf:	mov    dl,r9b
   140003de2:	mov    r8d,eax
   140003de5:	mov    ebx,eax
   140003de7:	call   0x14000a530
   140003dec:	mov    rcx,QWORD PTR [rsp+0x68]
   140003df1:	add    rdi,rbx
   140003df4:	mov    bl,BYTE PTR [rsp+0x60]
   140003df8:	xor    r8d,r8d
   140003dfb:	mov    edx,0x1
   140003e00:	and    esi,0x80000001
   140003e06:	jge    0x140003e0f
   140003e08:	sub    esi,edx
   140003e0a:	or     esi,0xfffffffe
   140003e0d:	add    esi,edx
   140003e0f:	cmp    esi,edx
   140003e11:	je     0x140003e36
   140003e13:	add    r13d,edx
   140003e16:	jmp    0x140003e64
   140003e18:	cmp    r12w,r10w
   140003e1c:	jne    0x140003e57
   140003e1e:	mov    eax,r13d
   140003e21:	and    eax,0x80000001
   140003e26:	jge    0x140003e2f
   140003e28:	sub    eax,edx
   140003e2a:	or     eax,0xfffffffe
   140003e2d:	add    eax,edx
   140003e2f:	test   eax,eax
   140003e31:	jne    0x140003e57
   140003e33:	add    r13d,edx
   140003e36:	movzx  eax,bp
   140003e39:	shr    ax,0x8
   140003e3d:	test   al,al
   140003e3f:	jne    0x140003e48
   140003e41:	mov    BYTE PTR [rdi],bpl
   140003e44:	mov    eax,edx
   140003e46:	jmp    0x140003e50
   140003e48:	mov    WORD PTR [rdi],bp
   140003e4b:	mov    eax,0x2
   140003e50:	cdqe   
   140003e52:	add    rdi,rax
   140003e55:	jmp    0x140003e64
   140003e57:	test   r13d,r13d
   140003e5a:	jne    0x140003e61
   140003e5c:	mov    r13d,edx
   140003e5f:	jmp    0x140003e64
   140003e61:	sub    r13d,edx
   140003e64:	mov    esi,r8d
   140003e67:	jmp    0x140003ee2
   140003e69:	mov    eax,0x5c
   140003e6e:	xor    r8d,r8d
   140003e71:	cmp    r12w,ax
   140003e75:	jne    0x140003e9e
   140003e77:	test   esi,esi
   140003e79:	jle    0x140003e9e
   140003e7b:	mov    r8d,esi
   140003e7e:	mov    dl,al
   140003e80:	mov    rcx,rdi
   140003e83:	mov    ebx,esi
   140003e85:	call   0x14000a530
   140003e8a:	mov    rcx,QWORD PTR [rsp+0x68]
   140003e8f:	add    rdi,rbx
   140003e92:	mov    bl,BYTE PTR [rsp+0x60]
   140003e96:	mov    edx,0x1
   140003e9b:	xor    r8d,r8d
   140003e9e:	mov    eax,r13d
   140003ea1:	and    eax,0x80000001
   140003ea6:	jge    0x140003eaf
   140003ea8:	sub    eax,edx
   140003eaa:	or     eax,0xfffffffe
   140003ead:	add    eax,edx
   140003eaf:	cmp    eax,edx
   140003eb1:	jne    0x140003ed4
   140003eb3:	movzx  eax,bp
   140003eb6:	shr    ax,0x8
   140003eba:	test   al,al
   140003ebc:	jne    0x140003ec5
   140003ebe:	mov    BYTE PTR [rdi],bpl
   140003ec1:	mov    eax,edx
   140003ec3:	jmp    0x140003ecd
   140003ec5:	mov    WORD PTR [rdi],bp
   140003ec8:	mov    eax,0x2
   140003ecd:	cdqe   
   140003ecf:	add    rdi,rax
   140003ed2:	jmp    0x140003eda
   140003ed4:	mov    bl,dl
   140003ed6:	mov    BYTE PTR [rsp+0x60],dl
   140003eda:	mov    esi,r8d
   140003edd:	test   r14b,r14b
   140003ee0:	jne    0x140003ef4
   140003ee2:	movsxd rax,ecx
   140003ee5:	movzx  r12d,bp
   140003ee9:	add    r15,rax
   140003eec:	jmp    0x140003c7e
   140003ef1:	mov    r14b,dl
   140003ef4:	mov    r9d,0x5c
   140003efa:	cmp    r12w,r9w
   140003efe:	jne    0x140003f17
   140003f00:	test   esi,esi
   140003f02:	jle    0x140003f17
   140003f04:	mov    r8d,esi
   140003f07:	mov    dl,r9b
   140003f0a:	mov    rcx,rdi
   140003f0d:	mov    ebx,esi
   140003f0f:	call   0x14000a530
   140003f14:	add    rdi,rbx
   140003f17:	mov    rbx,QWORD PTR [rsp+0x78]
   140003f1c:	xor    ecx,ecx
   140003f1e:	neg    r14b
   140003f21:	sbb    rax,rax
   140003f24:	mov    BYTE PTR [rdi],cl
   140003f26:	and    rax,r15
   140003f29:	add    rsp,0x20
   140003f2d:	pop    r15
   140003f2f:	pop    r14
   140003f31:	pop    r13
   140003f33:	pop    r12
   140003f35:	pop    rdi
   140003f36:	pop    rsi
   140003f37:	pop    rbp
   140003f38:	ret    
   140003f39:	int3   
   140003f3a:	int3   
   140003f3b:	int3   
   140003f3c:	mov    eax,DWORD PTR [rip+0x2087e]        # 0x1400247c0
   140003f42:	ret    
   140003f43:	int3   
   140003f44:	mov    rax,QWORD PTR [rip+0x2087d]        # 0x1400247c8
   140003f4b:	ret    
   140003f4c:	mov    rax,rsp
   140003f4f:	mov    QWORD PTR [rax+0x10],rbx
   140003f53:	mov    QWORD PTR [rax+0x18],rbp
   140003f57:	mov    QWORD PTR [rax+0x20],rsi
   140003f5b:	push   rdi
   140003f5c:	push   r12
   140003f5e:	push   r13
   140003f60:	sub    rsp,0x20
   140003f64:	xor    ebx,ebx
   140003f66:	mov    rsi,rcx
   140003f69:	xor    edi,edi
   140003f6b:	mov    BYTE PTR [rax+0x8],bl
   140003f6e:	call   0x140004048
   140003f73:	xor    ebp,ebp
   140003f75:	mov    r12,rax
   140003f78:	lea    r13d,[rbx+0x1]
   140003f7c:	lea    r8,[rsp+0x40]
   140003f81:	mov    rdx,r12
   140003f84:	mov    rcx,rsi
   140003f87:	call   0x140003c48
   140003f8c:	movsxd rdx,r13d
   140003f8f:	mov    rcx,rdi
   140003f92:	shl    rdx,0x4
   140003f96:	mov    rsi,rax
   140003f99:	call   0x14000401c
   140003f9e:	mov    rcx,r12
   140003fa1:	mov    rdi,rax
   140003fa4:	call   0x140004048
   140003fa9:	inc    ebx
   140003fab:	mov    QWORD PTR [rdi+rbp*1],rax
   140003faf:	mov    al,BYTE PTR [rsp+0x40]
   140003fb3:	add    rbp,0x10
   140003fb7:	mov    BYTE PTR [rdi+rbp*1-0x8],al
   140003fbb:	inc    r13d
   140003fbe:	mov    BYTE PTR [r12],0x0
   140003fc3:	test   rsi,rsi
   140003fc6:	jne    0x140003f7c
   140003fc8:	mov    rbp,QWORD PTR [rsp+0x50]
   140003fcd:	mov    rsi,QWORD PTR [rsp+0x58]
   140003fd2:	mov    DWORD PTR [rip+0x207e8],ebx        # 0x1400247c0
   140003fd8:	mov    rbx,QWORD PTR [rsp+0x48]
   140003fdd:	mov    QWORD PTR [rip+0x207e4],rdi        # 0x1400247c8
   140003fe4:	add    rsp,0x20
   140003fe8:	pop    r13
   140003fea:	pop    r12
   140003fec:	pop    rdi
   140003fed:	ret    
   140003fee:	int3   
   140003fef:	int3   
   140003ff0:	sub    rsp,0x28
   140003ff4:	call   0x14000b2d4
   140003ff9:	test   rax,rax
   140003ffc:	jne    0x140004015
   140003ffe:	lea    rcx,[rip+0x1742f]        # 0x14001b434
   140004005:	call   0x14000b224
   14000400a:	mov    ecx,0x1
   14000400f:	call   0x140009bcc
   140004014:	int3   
   140004015:	add    rsp,0x28
   140004019:	ret    
   14000401a:	int3   
   14000401b:	int3   
   14000401c:	sub    rsp,0x28
   140004020:	call   0x14000b38c
   140004025:	test   rax,rax
   140004028:	jne    0x140004041
   14000402a:	lea    rcx,[rip+0x1740f]        # 0x14001b440
   140004031:	call   0x14000b224
   140004036:	mov    ecx,0x1
   14000403b:	call   0x140009bcc
   140004040:	int3   
   140004041:	add    rsp,0x28
   140004045:	ret    
   140004046:	int3   
   140004047:	int3   
   140004048:	sub    rsp,0x28
   14000404c:	call   0x140018ba0
   140004051:	test   rax,rax
   140004054:	jne    0x14000406d
   140004056:	lea    rcx,[rip+0x173eb]        # 0x14001b448
   14000405d:	call   0x14000b224
   140004062:	mov    ecx,0x1
   140004067:	call   0x140009bcc
   14000406c:	int3   
   14000406d:	add    rsp,0x28
   140004071:	ret    
   140004072:	int3   
   140004073:	int3   
   140004074:	jmp    0x14000b460
   140004079:	int3   
   14000407a:	int3   
   14000407b:	int3   
   14000407c:	mov    rax,rsp
   14000407f:	mov    QWORD PTR [rax+0x8],rcx
   140004083:	mov    QWORD PTR [rax+0x10],rdx
   140004087:	mov    QWORD PTR [rax+0x18],r8
   14000408b:	mov    QWORD PTR [rax+0x20],r9
   14000408f:	sub    rsp,0x28
   140004093:	cmp    BYTE PTR [rip+0x20736],0x1        # 0x1400247d0
   14000409a:	jne    0x1400040a5
   14000409c:	lea    rdx,[rax+0x10]
   1400040a0:	call   0x14000b548
   1400040a5:	add    rsp,0x28
   1400040a9:	ret    
   1400040aa:	int3   
   1400040ab:	int3   
   1400040ac:	sub    rsp,0x28
   1400040b0:	lea    rcx,[rip+0x163c1]        # 0x14001a478
   1400040b7:	call   0x140009d94
   1400040bc:	test   rax,rax
   1400040bf:	je     0x1400040db
   1400040c1:	lea    rdx,[rip+0x163b0]        # 0x14001a478
   1400040c8:	lea    rcx,[rip+0x16559]        # 0x14001a628
   1400040cf:	mov    BYTE PTR [rip+0x206fa],0x1        # 0x1400247d0
   1400040d6:	call   0x14000407c
   1400040db:	add    rsp,0x28
   1400040df:	ret    
   1400040e0:	mov    al,BYTE PTR [rip+0x206ea]        # 0x1400247d0
   1400040e6:	ret    
   1400040e7:	int3   
   1400040e8:	mov    QWORD PTR [rsp+0x8],rbx
   1400040ed:	push   rdi
   1400040ee:	sub    rsp,0x20
   1400040f2:	mov    rdi,rcx
   1400040f5:	mov    rcx,rdx
   1400040f8:	mov    rbx,rdx
   1400040fb:	call   0x140009fa0
   140004100:	mov    rdx,rbx
   140004103:	mov    rcx,rdi
   140004106:	mov    r8,rax
   140004109:	mov    rbx,QWORD PTR [rsp+0x30]
   14000410e:	add    rsp,0x20
   140004112:	pop    rdi
   140004113:	jmp    0x14000b570
   140004118:	mov    QWORD PTR [rsp+0x8],rbx
   14000411d:	mov    QWORD PTR [rsp+0x10],rsi
   140004122:	push   rdi
   140004123:	sub    rsp,0x20
   140004127:	mov    rdi,rdx
   14000412a:	mov    rbx,rcx
   14000412d:	call   0x140009fa0
   140004132:	movsxd rsi,eax
   140004135:	mov    rdx,rdi
   140004138:	mov    rcx,rbx
   14000413b:	mov    r8,rsi
   14000413e:	call   0x14000b570
   140004143:	test   eax,eax
   140004145:	jne    0x140004154
   140004147:	cmp    BYTE PTR [rsi+rdi*1],0x3d
   14000414b:	jne    0x140004154
   14000414d:	lea    rax,[rsi+rdi*1+0x1]
   140004152:	jmp    0x140004156
   140004154:	xor    eax,eax
   140004156:	mov    rbx,QWORD PTR [rsp+0x30]
   14000415b:	mov    rsi,QWORD PTR [rsp+0x38]
   140004160:	add    rsp,0x20
   140004164:	pop    rdi
   140004165:	ret    
   140004166:	int3   
   140004167:	int3   
   140004168:	rex push rbx
   14000416a:	sub    rsp,0x20
   14000416e:	call   0x140004118
   140004173:	mov    rbx,rax
   140004176:	test   rax,rax
   140004179:	je     0x1400041a8
   14000417b:	lea    rdx,[rip+0x16c3a]        # 0x14001adbc
   140004182:	mov    rcx,rax
   140004185:	call   0x1400196a0
   14000418a:	test   eax,eax
   14000418c:	jne    0x140004195
   14000418e:	mov    eax,0x1
   140004193:	jmp    0x1400041ab
   140004195:	lea    rdx,[rip+0x16c18]        # 0x14001adb4
   14000419c:	mov    rcx,rbx
   14000419f:	call   0x1400196a0
   1400041a4:	test   eax,eax
   1400041a6:	je     0x1400041ab
   1400041a8:	or     eax,0xffffffff
   1400041ab:	add    rsp,0x20
   1400041af:	pop    rbx
   1400041b0:	ret    
   1400041b1:	int3   
   1400041b2:	int3   
   1400041b3:	int3   
   1400041b4:	mov    al,BYTE PTR [rip+0x2062a]        # 0x1400247e4
   1400041ba:	ret    
   1400041bb:	int3   
   1400041bc:	rex push rbx
   1400041be:	sub    rsp,0x20
   1400041c2:	mov    r8d,edx
   1400041c5:	mov    rbx,rcx
   1400041c8:	mov    rdx,rcx
   1400041cb:	xor    ecx,ecx
   1400041cd:	call   QWORD PTR [rip+0x15e75]        # 0x14001a048
   1400041d3:	mov    edx,0x5c
   1400041d8:	mov    rcx,rbx
   1400041db:	call   0x14000bb28
   1400041e0:	mov    edx,0x5c
   1400041e5:	mov    rcx,rbx
   1400041e8:	mov    BYTE PTR [rax],0x0
   1400041eb:	call   0x14000bb28
   1400041f0:	test   rax,rax
   1400041f3:	jne    0x1400041f9
   1400041f5:	mov    BYTE PTR [rbx],al
   1400041f7:	jmp    0x1400041fe
   1400041f9:	mov    BYTE PTR [rax],0x0
   1400041fc:	mov    al,0x1
   1400041fe:	add    rsp,0x20
   140004202:	pop    rbx
   140004203:	ret    
   140004204:	mov    r11,rsp
   140004207:	mov    QWORD PTR [r11+0x8],rbx
   14000420b:	mov    QWORD PTR [r11+0x10],rbp
   14000420f:	mov    QWORD PTR [r11+0x18],rsi
   140004213:	push   rdi
   140004214:	sub    rsp,0x40
   140004218:	lea    rax,[r11-0x18]
   14000421c:	mov    ebx,r9d
   14000421f:	mov    rbp,r8
   140004222:	mov    QWORD PTR [r11-0x20],rax
   140004226:	and    QWORD PTR [r11-0x28],0x0
   14000422b:	lea    r9,[r11-0x14]
   14000422f:	xor    r8d,r8d
   140004232:	mov    rdi,rdx
   140004235:	mov    rsi,rcx
   140004238:	call   QWORD PTR [rip+0x15dda]        # 0x14001a018
   14000423e:	test   eax,eax
   140004240:	jne    0x140004278
   140004242:	cmp    DWORD PTR [rsp+0x34],0x1
   140004247:	jne    0x140004278
   140004249:	cmp    DWORD PTR [rsp+0x30],ebx
   14000424d:	jae    0x140004278
   14000424f:	lea    rcx,[rsp+0x30]
   140004254:	xor    r9d,r9d
   140004257:	xor    r8d,r8d
   14000425a:	mov    QWORD PTR [rsp+0x28],rcx
   14000425f:	mov    rcx,rsi
   140004262:	mov    rdx,rdi
   140004265:	mov    QWORD PTR [rsp+0x20],rbp
   14000426a:	call   QWORD PTR [rip+0x15da8]        # 0x14001a018
   140004270:	test   eax,eax
   140004272:	jne    0x140004278
   140004274:	mov    al,0x1
   140004276:	jmp    0x14000427a
   140004278:	xor    al,al
   14000427a:	mov    rbx,QWORD PTR [rsp+0x50]
   14000427f:	mov    rbp,QWORD PTR [rsp+0x58]
   140004284:	mov    rsi,QWORD PTR [rsp+0x60]
   140004289:	add    rsp,0x40
   14000428d:	pop    rdi
   14000428e:	ret    
   14000428f:	int3   
   140004290:	sub    rsp,0x28
   140004294:	cmp    BYTE PTR [rip+0x2054b],0x0        # 0x1400247e6
   14000429b:	jne    0x1400042b9
   14000429d:	lea    rcx,[rip+0x20534]        # 0x1400247d8
   1400042a4:	call   QWORD PTR [rip+0x15dae]        # 0x14001a058
   1400042aa:	mov    BYTE PTR [rip+0x20535],0x1        # 0x1400247e6
   1400042b1:	mov    BYTE PTR [rip+0x2052e],al        # 0x1400247e5
   1400042b7:	jmp    0x1400042bf
   1400042b9:	mov    al,BYTE PTR [rip+0x20526]        # 0x1400247e5
   1400042bf:	test   al,al
   1400042c1:	jne    0x1400042c7
   1400042c3:	xor    eax,eax
   1400042c5:	jmp    0x1400042d7
   1400042c7:	lea    rcx,[rsp+0x30]
   1400042cc:	call   QWORD PTR [rip+0x15d7e]        # 0x14001a050
   1400042d2:	mov    rax,QWORD PTR [rsp+0x30]
   1400042d7:	add    rsp,0x28
   1400042db:	ret    
   1400042dc:	cmp    BYTE PTR [rip+0x20502],0x0        # 0x1400247e5
   1400042e3:	je     0x140004302
   1400042e5:	cmp    BYTE PTR [rip+0x204fa],0x0        # 0x1400247e6
   1400042ec:	je     0x140004302
   1400042ee:	imul   rcx,rcx,0xf4240
   1400042f5:	mov    rax,rcx
   1400042f8:	cqo    
   1400042fa:	idiv   QWORD PTR [rip+0x204d7]        # 0x1400247d8
   140004301:	ret    
   140004302:	xor    eax,eax
   140004304:	ret    
   140004305:	int3   
   140004306:	int3   
   140004307:	int3   
   140004308:	mov    QWORD PTR [rsp+0x18],r8
   14000430d:	mov    QWORD PTR [rsp+0x20],r9
   140004312:	push   rbx
   140004313:	push   rdi
   140004314:	sub    rsp,0x28
   140004318:	mov    rbx,rdx
   14000431b:	mov    rdi,rcx
   14000431e:	test   rdx,rdx
   140004321:	je     0x140004354
   140004323:	test   rcx,rcx
   140004326:	je     0x140004354
   140004328:	lea    r9,[rsp+0x58]
   14000432d:	mov    BYTE PTR [rcx],0x0
   140004330:	call   0x14000bc1c
   140004335:	movsxd r11,eax
   140004338:	test   eax,eax
   14000433a:	jns    0x140004345
   14000433c:	mov    BYTE PTR [rdi+rbx*1-0x1],0x0
   140004341:	mov    eax,ebx
   140004343:	jmp    0x140004357
   140004345:	cmp    r11,rbx
   140004348:	jne    0x14000434f
   14000434a:	mov    BYTE PTR [rdi+rbx*1-0x1],0x0
   14000434f:	mov    eax,r11d
   140004352:	jmp    0x140004357
   140004354:	or     eax,0xffffffff
   140004357:	add    rsp,0x28
   14000435b:	pop    rdi
   14000435c:	pop    rbx
   14000435d:	ret    
   14000435e:	int3   
   14000435f:	int3   
   140004360:	mov    rax,rsp
   140004363:	mov    QWORD PTR [rax+0x8],rcx
   140004367:	mov    QWORD PTR [rax+0x10],rdx
   14000436b:	mov    QWORD PTR [rax+0x18],r8
   14000436f:	mov    QWORD PTR [rax+0x20],r9
   140004373:	push   rbx
   140004374:	push   rsi
   140004375:	push   rdi
   140004376:	sub    rsp,0x20
   14000437a:	cmp    BYTE PTR [rip+0x20463],0x0        # 0x1400247e4
   140004381:	lea    rsi,[rax+0x10]
   140004385:	je     0x1400043d9
   140004387:	mov    rdx,rsi
   14000438a:	call   0x14000bcc4
   14000438f:	movsxd rbx,eax
   140004392:	lea    ecx,[rbx+0x1]
   140004395:	movsxd rcx,ecx
   140004398:	call   0x140003ff0
   14000439d:	mov    r8,QWORD PTR [rsp+0x40]
   1400043a2:	mov    r9,rsi
   1400043a5:	mov    rcx,rax
   1400043a8:	mov    rdx,rbx
   1400043ab:	mov    rdi,rax
   1400043ae:	call   0x14000bc1c
   1400043b3:	lea    r8,[rip+0x170b6]        # 0x14001b470
   1400043ba:	mov    r9d,0x10
   1400043c0:	mov    rdx,rdi
   1400043c3:	xor    ecx,ecx
   1400043c5:	mov    BYTE PTR [rbx+rdi*1],0x0
   1400043c9:	call   QWORD PTR [rip+0x15f79]        # 0x14001a348
   1400043cf:	mov    rcx,rdi
   1400043d2:	call   0x140004074
   1400043d7:	jmp    0x140004404
   1400043d9:	call   0x14000ab98
   1400043de:	mov    rdx,QWORD PTR [rsp+0x40]
   1400043e3:	mov    r8,rsi
   1400043e6:	lea    rcx,[rax+0x60]
   1400043ea:	call   0x14000ab74
   1400043ef:	call   0x14000ab98
   1400043f4:	lea    rdx,[rip+0x16629]        # 0x14001aa24
   1400043fb:	lea    rcx,[rax+0x60]
   1400043ff:	call   0x14000a900
   140004404:	add    rsp,0x20
   140004408:	pop    rdi
   140004409:	pop    rsi
   14000440a:	pop    rbx
   14000440b:	ret    
   14000440c:	mov    rax,rsp
   14000440f:	mov    QWORD PTR [rax+0x8],rcx
   140004413:	mov    QWORD PTR [rax+0x10],rdx
   140004417:	mov    QWORD PTR [rax+0x18],r8
   14000441b:	mov    QWORD PTR [rax+0x20],r9
   14000441f:	push   rbp
   140004420:	push   rbx
   140004421:	push   rsi
   140004422:	push   rdi
   140004423:	push   r12
   140004425:	push   r14
   140004427:	mov    rbp,rsp
   14000442a:	sub    rsp,0x58
   14000442e:	call   0x14000bdc0
   140004433:	xor    sil,sil
   140004436:	lea    r14,[rbp+0x40]
   14000443a:	mov    ebx,DWORD PTR [rax]
   14000443c:	and    QWORD PTR [rbp-0x18],0x0
   140004441:	call   QWORD PTR [rip+0x15c29]        # 0x14001a070
   140004447:	test   eax,eax
   140004449:	je     0x1400044b5
   14000444b:	and    QWORD PTR [rsp+0x30],0x0
   140004451:	and    DWORD PTR [rsp+0x28],0x0
   140004456:	lea    rcx,[rbp-0x18]
   14000445a:	mov    QWORD PTR [rsp+0x20],rcx
   14000445f:	xor    r9d,r9d
   140004462:	mov    r8d,eax
   140004465:	mov    ecx,0x1300
   14000446a:	xor    edx,edx
   14000446c:	call   QWORD PTR [rip+0x15bf6]        # 0x14001a068
   140004472:	mov    rdx,QWORD PTR [rbp-0x18]
   140004476:	movsxd r11,eax
   140004479:	test   rdx,rdx
   14000447c:	je     0x1400044ac
   14000447e:	test   eax,eax
   140004480:	je     0x1400044ac
   140004482:	mov    sil,0x1
   140004485:	cmp    r11d,0x2
   140004489:	jle    0x1400044c0
   14000448b:	cmp    BYTE PTR [r11+rdx*1-0x1],0xa
   140004491:	jne    0x140004496
   140004493:	dec    r11d
   140004496:	movsxd rax,r11d
   140004499:	cmp    BYTE PTR [rax+rdx*1-0x1],0xd
   14000449e:	jne    0x1400044a3
   1400044a0:	dec    r11d
   1400044a3:	movsxd rax,r11d
   1400044a6:	mov    BYTE PTR [rax+rdx*1],0x0
   1400044aa:	jmp    0x1400044c0
   1400044ac:	lea    rax,[rip+0x16fe0]        # 0x14001b493
   1400044b3:	jmp    0x1400044bc
   1400044b5:	mov    ecx,ebx
   1400044b7:	call   0x14000bcdc
   1400044bc:	mov    QWORD PTR [rbp-0x18],rax
   1400044c0:	cmp    BYTE PTR [rip+0x2031d],0x0        # 0x1400247e4
   1400044c7:	je     0x140004540
   1400044c9:	mov    rcx,QWORD PTR [rbp+0x38]
   1400044cd:	mov    rdx,r14
   1400044d0:	call   0x14000bcc4
   1400044d5:	lea    ebx,[rax+0x1]
   1400044d8:	movsxd r12,ebx
   1400044db:	test   sil,sil
   1400044de:	je     0x1400044eb
   1400044e0:	mov    rcx,QWORD PTR [rbp-0x18]
   1400044e4:	call   0x140009fa0
   1400044e9:	add    ebx,eax
   1400044eb:	movsxd rcx,ebx
   1400044ee:	call   0x140003ff0
   1400044f3:	mov    r8,QWORD PTR [rbp+0x38]
   1400044f7:	mov    r9,r14
   1400044fa:	mov    rcx,rax
   1400044fd:	mov    rdx,r12
   140004500:	mov    rdi,rax
   140004503:	call   0x14000bc1c
   140004508:	mov    BYTE PTR [r12+rdi*1],0x0
   14000450d:	test   sil,sil
   140004510:	je     0x14000451e
   140004512:	mov    rdx,QWORD PTR [rbp-0x18]
   140004516:	mov    rcx,rdi
   140004519:	call   0x14000a6b0
   14000451e:	lea    r8,[rip+0x16f4b]        # 0x14001b470
   140004525:	mov    r9d,0x10
   14000452b:	mov    rdx,rdi
   14000452e:	xor    ecx,ecx
   140004530:	call   QWORD PTR [rip+0x15e12]        # 0x14001a348
   140004536:	mov    rcx,rdi
   140004539:	call   0x140004074
   14000453e:	jmp    0x140004573
   140004540:	call   0x14000ab98
   140004545:	mov    rdx,QWORD PTR [rbp+0x38]
   140004549:	mov    r8,r14
   14000454c:	lea    rcx,[rax+0x60]
   140004550:	call   0x14000ab74
   140004555:	test   sil,sil
   140004558:	je     0x140004582
   14000455a:	call   0x14000ab98
   14000455f:	mov    r8,QWORD PTR [rbp-0x18]
   140004563:	lea    rdx,[rip+0x16f26]        # 0x14001b490
   14000456a:	lea    rcx,[rax+0x60]
   14000456e:	call   0x14000a900
   140004573:	test   sil,sil
   140004576:	je     0x140004582
   140004578:	mov    rcx,QWORD PTR [rbp-0x18]
   14000457c:	call   QWORD PTR [rip+0x15ade]        # 0x14001a060
   140004582:	add    rsp,0x58
   140004586:	pop    r14
   140004588:	pop    r12
   14000458a:	pop    rdi
   14000458b:	pop    rsi
   14000458c:	pop    rbx
   14000458d:	pop    rbp
   14000458e:	ret    
   14000458f:	int3   
   140004590:	cmp    BYTE PTR [rip+0x2024d],0x0        # 0x1400247e4
   140004597:	je     0x1400045b6
   140004599:	lea    r8,[rip+0x16ed0]        # 0x14001b470
   1400045a0:	lea    rdx,[rip+0x16ef1]        # 0x14001b498
   1400045a7:	mov    r9d,0x10
   1400045ad:	xor    ecx,ecx
   1400045af:	rex.W jmp QWORD PTR [rip+0x15d92]        # 0x14001a348
   1400045b6:	mov    rax,QWORD PTR [rcx]
   1400045b9:	rex.W jmp QWORD PTR [rax+0x80]
   1400045c0:	sub    rsp,0x28
   1400045c4:	call   0x140001efc
   1400045c9:	cmp    eax,0x2
   1400045cc:	sete   al
   1400045cf:	add    rsp,0x28
   1400045d3:	ret    
   1400045d4:	mov    QWORD PTR [rsp+0x10],rbx
   1400045d9:	mov    QWORD PTR [rsp+0x18],rsi
   1400045de:	mov    QWORD PTR [rsp+0x20],rdi
   1400045e3:	push   rbp
   1400045e4:	push   r12
   1400045e6:	push   r13
   1400045e8:	lea    rbp,[rsp-0x80]
   1400045ed:	sub    rsp,0x180
   1400045f4:	mov    rax,QWORD PTR [rip+0x1eac5]        # 0x1400230c0
   1400045fb:	xor    rax,rsp
   1400045fe:	mov    QWORD PTR [rbp+0x70],rax
   140004602:	and    QWORD PTR [rsp+0x30],0x0
   140004608:	mov    r13,rcx
   14000460b:	mov    QWORD PTR [rsp+0x48],0xffffffff80000001
   140004614:	xor    edi,edi
   140004616:	mov    QWORD PTR [rsp+0x50],0xffffffff80000002
   14000461f:	mov    rcx,QWORD PTR [rsp+rdi*8+0x48]
   140004624:	lea    rax,[rsp+0x30]
   140004629:	lea    rdx,[rip+0x16e98]        # 0x14001b4c8
   140004630:	mov    r9d,0x20019
   140004636:	xor    r8d,r8d
   140004639:	mov    QWORD PTR [rsp+0x20],rax
   14000463e:	call   QWORD PTR [rip+0x159c4]        # 0x14001a008
   140004644:	test   eax,eax
   140004646:	jne    0x140004771
   14000464c:	mov    r12,QWORD PTR [rsp+0x30]
   140004651:	lea    r8,[rsp+0x60]
   140004656:	mov    r9d,0x104
   14000465c:	xor    edx,edx
   14000465e:	mov    rcx,r12
   140004661:	xor    esi,esi
   140004663:	xor    ebx,ebx
   140004665:	call   QWORD PTR [rip+0x159a5]        # 0x14001a010
   14000466b:	test   eax,eax
   14000466d:	jne    0x140004771
   140004673:	mov    rdx,QWORD PTR [r13+0x10]
   140004677:	lea    rcx,[rsp+0x60]
   14000467c:	inc    esi
   14000467e:	call   0x140006efc
   140004683:	test   eax,eax
   140004685:	je     0x1400046b2
   140004687:	test   rbx,rbx
   14000468a:	je     0x1400046a5
   14000468c:	lea    rcx,[rsp+0x60]
   140004691:	mov    rdx,rbx
   140004694:	call   0x140006dec
   140004699:	test   eax,eax
   14000469b:	jle    0x1400046b2
   14000469d:	mov    rcx,rbx
   1400046a0:	call   0x140004074
   1400046a5:	lea    rcx,[rsp+0x60]
   1400046aa:	call   0x140004048
   1400046af:	mov    rbx,rax
   1400046b2:	lea    r8,[rsp+0x60]
   1400046b7:	mov    r9d,0x104
   1400046bd:	mov    edx,esi
   1400046bf:	mov    rcx,r12
   1400046c2:	call   QWORD PTR [rip+0x15948]        # 0x14001a010
   1400046c8:	test   eax,eax
   1400046ca:	je     0x140004673
   1400046cc:	test   rbx,rbx
   1400046cf:	je     0x140004771
   1400046d5:	lea    rax,[rsp+0x38]
   1400046da:	mov    r9d,0x20019
   1400046e0:	xor    r8d,r8d
   1400046e3:	mov    rdx,rbx
   1400046e6:	mov    rcx,r12
   1400046e9:	mov    QWORD PTR [rsp+0x20],rax
   1400046ee:	call   QWORD PTR [rip+0x15914]        # 0x14001a008
   1400046f4:	mov    rcx,rbx
   1400046f7:	test   eax,eax
   1400046f9:	je     0x140004712
   1400046fb:	call   0x140004074
   140004700:	mov    rcx,QWORD PTR [rsp+0x38]
   140004705:	test   rcx,rcx
   140004708:	je     0x140004771
   14000470a:	call   QWORD PTR [rip+0x158f0]        # 0x14001a000
   140004710:	jmp    0x140004771
   140004712:	call   0x140004074
   140004717:	mov    rcx,QWORD PTR [rsp+0x38]
   14000471c:	lea    rax,[rsp+0x40]
   140004721:	mov    QWORD PTR [rsp+0x28],rax
   140004726:	lea    rax,[rsp+0x60]
   14000472b:	lea    rdx,[rip+0x16d86]        # 0x14001b4b8
   140004732:	xor    r9d,r9d
   140004735:	xor    r8d,r8d
   140004738:	mov    DWORD PTR [rsp+0x40],0x104
   140004740:	mov    QWORD PTR [rsp+0x20],rax
   140004745:	call   QWORD PTR [rip+0x158cd]        # 0x14001a018
   14000474b:	mov    rcx,QWORD PTR [rsp+0x38]
   140004750:	test   eax,eax
   140004752:	jne    0x140004705
   140004754:	test   rcx,rcx
   140004757:	je     0x14000475f
   140004759:	call   QWORD PTR [rip+0x158a1]        # 0x14001a000
   14000475f:	lea    rcx,[rsp+0x60]
   140004764:	call   0x140004048
   140004769:	mov    rbx,rax
   14000476c:	test   rax,rax
   14000476f:	jne    0x1400047b9
   140004771:	mov    rcx,QWORD PTR [rsp+0x30]
   140004776:	test   rcx,rcx
   140004779:	je     0x140004781
   14000477b:	call   QWORD PTR [rip+0x1587f]        # 0x14001a000
   140004781:	inc    rdi
   140004784:	cmp    rdi,0x1
   140004788:	jle    0x14000461f
   14000478e:	xor    eax,eax
   140004790:	mov    rcx,QWORD PTR [rbp+0x70]
   140004794:	xor    rcx,rsp
   140004797:	call   0x14000a820
   14000479c:	lea    r11,[rsp+0x180]
   1400047a4:	mov    rbx,QWORD PTR [r11+0x28]
   1400047a8:	mov    rsi,QWORD PTR [r11+0x30]
   1400047ac:	mov    rdi,QWORD PTR [r11+0x38]
   1400047b0:	mov    rsp,r11
   1400047b3:	pop    r13
   1400047b5:	pop    r12
   1400047b7:	pop    rbp
   1400047b8:	ret    
   1400047b9:	mov    rcx,QWORD PTR [rsp+0x30]
   1400047be:	test   rcx,rcx
   1400047c1:	je     0x1400047c9
   1400047c3:	call   QWORD PTR [rip+0x15837]        # 0x14001a000
   1400047c9:	mov    rax,rbx
   1400047cc:	jmp    0x140004790
   1400047ce:	int3   
   1400047cf:	int3   
   1400047d0:	mov    rdx,QWORD PTR [rcx]
   1400047d3:	xor    r9d,r9d
   1400047d6:	xor    r11d,r11d
   1400047d9:	jmp    0x1400047e6
   1400047db:	cmp    al,0x20
   1400047dd:	je     0x1400047e3
   1400047df:	cmp    al,0x9
   1400047e1:	jne    0x1400047ec
   1400047e3:	inc    rdx
   1400047e6:	mov    al,BYTE PTR [rdx]
   1400047e8:	test   al,al
   1400047ea:	jne    0x1400047db
   1400047ec:	mov    r8,rdx
   1400047ef:	cmp    BYTE PTR [rdx],r9b
   1400047f2:	je     0x140004859
   1400047f4:	test   r11d,r11d
   1400047f7:	jne    0x140004803
   1400047f9:	cmp    BYTE PTR [rdx],0x20
   1400047fc:	je     0x14000484e
   1400047fe:	cmp    BYTE PTR [rdx],0x9
   140004801:	je     0x14000484e
   140004803:	cmp    BYTE PTR [rdx],0x5c
   140004806:	jne    0x140004828
   140004808:	cmp    BYTE PTR [rdx+0x1],0x22
   14000480c:	jne    0x140004828
   14000480e:	mov    eax,r9d
   140004811:	and    eax,0x80000001
   140004816:	jge    0x14000481f
   140004818:	dec    eax
   14000481a:	or     eax,0xfffffffe
   14000481d:	inc    eax
   14000481f:	test   eax,eax
   140004821:	jne    0x140004828
   140004823:	inc    rdx
   140004826:	jmp    0x140004838
   140004828:	cmp    BYTE PTR [rdx],0x22
   14000482b:	jne    0x140004838
   14000482d:	xor    eax,eax
   14000482f:	test   r11d,r11d
   140004832:	sete   al
   140004835:	mov    r11d,eax
   140004838:	mov    al,BYTE PTR [rdx]
   14000483a:	inc    rdx
   14000483d:	cmp    al,0x5c
   14000483f:	jne    0x140004846
   140004841:	inc    r9d
   140004844:	jmp    0x140004849
   140004846:	xor    r9d,r9d
   140004849:	cmp    BYTE PTR [rdx],0x0
   14000484c:	jne    0x1400047f4
   14000484e:	cmp    BYTE PTR [rdx],0x0
   140004851:	je     0x140004859
   140004853:	mov    BYTE PTR [rdx],0x0
   140004856:	inc    rdx
   140004859:	mov    QWORD PTR [rcx],rdx
   14000485c:	mov    rax,r8
   14000485f:	ret    
   140004860:	mov    rax,rsp
   140004863:	mov    QWORD PTR [rax+0x10],rbx
   140004867:	mov    QWORD PTR [rax+0x18],rsi
   14000486b:	mov    QWORD PTR [rax+0x20],rdi
   14000486f:	push   rbp
   140004870:	push   r12
   140004872:	push   r13
   140004874:	push   r14
   140004876:	push   r15
   140004878:	lea    rbp,[rax-0x138]
   14000487f:	sub    rsp,0x210
   140004886:	mov    rax,QWORD PTR [rip+0x1e833]        # 0x1400230c0
   14000488d:	xor    rax,rsp
   140004890:	mov    QWORD PTR [rbp+0x100],rax
   140004897:	mov    rbx,rcx
   14000489a:	call   0x140001ef4
   14000489f:	mov    esi,0x105
   1400048a4:	lea    rdx,[rbp-0x10]
   1400048a8:	xor    ecx,ecx
   1400048aa:	mov    r8d,esi
   1400048ad:	mov    rdi,rax
   1400048b0:	call   QWORD PTR [rip+0x15792]        # 0x14001a048
   1400048b6:	test   eax,eax
   1400048b8:	je     0x140004cd7
   1400048be:	cmp    eax,0x104
   1400048c3:	jg     0x140004cd7
   1400048c9:	lea    rdx,[rbp-0x10]
   1400048cd:	lea    rcx,[rip+0x16cf4]        # 0x14001b5c8
   1400048d4:	call   0x14000407c
   1400048d9:	lea    rcx,[rip+0x16cd0]        # 0x14001b5b0
   1400048e0:	mov    rdx,rbx
   1400048e3:	call   0x14000407c
   1400048e8:	mov    rcx,rbx
   1400048eb:	call   0x140009fa0
   1400048f0:	lea    rdx,[rbp-0x10]
   1400048f4:	mov    rcx,rbx
   1400048f7:	mov    r8,rax
   1400048fa:	call   0x1400194dc
   1400048ff:	test   eax,eax
   140004901:	je     0x140004cf1
   140004907:	lea    r8,[rip+0x16c92]        # 0x14001b5a0
   14000490e:	lea    rcx,[rbp-0x10]
   140004912:	mov    r9,rbx
   140004915:	mov    edx,esi
   140004917:	mov    QWORD PTR [rsp+0x20],rdi
   14000491c:	call   0x140004308
   140004921:	call   QWORD PTR [rip+0x15719]        # 0x14001a040
   140004927:	mov    rcx,rax
   14000492a:	call   0x140004048
   14000492f:	lea    rcx,[rsp+0x50]
   140004934:	mov    r15,rax
   140004937:	mov    QWORD PTR [rsp+0x50],rax
   14000493c:	call   0x1400047d0
   140004941:	mov    rsi,QWORD PTR [rsp+0x50]
   140004946:	mov    rcx,rsi
   140004949:	call   0x140009fa0
   14000494e:	lea    rcx,[rbp-0x10]
   140004952:	mov    rbx,rax
   140004955:	call   0x140009fa0
   14000495a:	lea    rcx,[rbx+rax*1+0x4]
   14000495f:	call   0x140003ff0
   140004964:	lea    rcx,[rbp-0x10]
   140004968:	mov    edx,0x20
   14000496d:	mov    rbx,rax
   140004970:	call   0x14000c04c
   140004975:	test   rax,rax
   140004978:	jne    0x140004999
   14000497a:	lea    edx,[rax+0x9]
   14000497d:	lea    rcx,[rbp-0x10]
   140004981:	call   0x14000c04c
   140004986:	test   rax,rax
   140004989:	jne    0x140004999
   14000498b:	lea    rdx,[rbp-0x10]
   14000498f:	mov    rcx,rbx
   140004992:	call   0x14000a750
   140004997:	jmp    0x1400049c3
   140004999:	lea    rdx,[rip+0x16bfc]        # 0x14001b59c
   1400049a0:	mov    rcx,rbx
   1400049a3:	call   0x14000a750
   1400049a8:	lea    rdx,[rbp-0x10]
   1400049ac:	mov    rcx,rax
   1400049af:	call   0x14000a6b0
   1400049b4:	lea    rdx,[rip+0x16be1]        # 0x14001b59c
   1400049bb:	mov    rcx,rax
   1400049be:	call   0x14000a6b0
   1400049c3:	cmp    BYTE PTR [rsi],0x0
   1400049c6:	mov    r13,rax
   1400049c9:	mov    edi,0x1
   1400049ce:	je     0x140004b8d
   1400049d4:	lea    rcx,[rsp+0x50]
   1400049d9:	call   0x1400047d0
   1400049de:	mov    r14,rax
   1400049e1:	cmp    BYTE PTR [rax],0x0
   1400049e4:	je     0x140004b3f
   1400049ea:	mov    rcx,rax
   1400049ed:	mov    rbx,rax
   1400049f0:	call   0x140009fa0
   1400049f5:	lea    rcx,[rdi+rax*1]
   1400049f9:	call   0x140003ff0
   1400049fe:	cmp    BYTE PTR [rbx],0x0
   140004a01:	mov    r12,rax
   140004a04:	mov    rsi,rax
   140004a07:	je     0x140004a60
   140004a09:	mov    al,BYTE PTR [rbx]
   140004a0b:	cmp    al,0x22
   140004a0d:	je     0x140004a58
   140004a0f:	cmp    al,0x5c
   140004a11:	jne    0x140004a53
   140004a13:	lea    rdx,[rip+0x16ada]        # 0x14001b4f4
   140004a1a:	mov    rcx,rbx
   140004a1d:	call   0x14000ae90
   140004a22:	lea    r11,[rbx+rax*1]
   140004a26:	cmp    BYTE PTR [r11],0x22
   140004a2a:	jne    0x140004a4c
   140004a2c:	mov    BYTE PTR [rsi],0x5c
   140004a2f:	add    rbx,0x2
   140004a33:	add    rsi,rdi
   140004a36:	cmp    BYTE PTR [rbx],0x5c
   140004a39:	jne    0x140004a5b
   140004a3b:	cmp    rbx,r11
   140004a3e:	jb     0x140004a2c
   140004a40:	jmp    0x140004a5b
   140004a42:	mov    al,BYTE PTR [rbx]
   140004a44:	mov    BYTE PTR [rsi],al
   140004a46:	add    rsi,rdi
   140004a49:	add    rbx,rdi
   140004a4c:	cmp    rbx,r11
   140004a4f:	jb     0x140004a42
   140004a51:	jmp    0x140004a5b
   140004a53:	mov    BYTE PTR [rsi],al
   140004a55:	add    rsi,rdi
   140004a58:	add    rbx,rdi
   140004a5b:	cmp    BYTE PTR [rbx],0x0
   140004a5e:	jne    0x140004a09
   140004a60:	mov    BYTE PTR [rsi],0x0
   140004a63:	cmp    BYTE PTR [r12],0x2d
   140004a68:	jne    0x140004b4c
   140004a6e:	lea    rdx,[rip+0x1621b]        # 0x14001ac90
   140004a75:	mov    rcx,r12
   140004a78:	call   0x14000a850
   140004a7d:	test   eax,eax
   140004a7f:	je     0x140004aeb
   140004a81:	lea    rdx,[rip+0x16204]        # 0x14001ac8c
   140004a88:	mov    rcx,r12
   140004a8b:	call   0x14000a850
   140004a90:	test   eax,eax
   140004a92:	je     0x140004aeb
   140004a94:	lea    rdx,[rip+0x1646d]        # 0x14001af08
   140004a9b:	mov    r8d,0x9
   140004aa1:	mov    rcx,r12
   140004aa4:	call   0x14000b570
   140004aa9:	test   eax,eax
   140004aab:	je     0x140004b37
   140004ab1:	lea    rdx,[rip+0x16438]        # 0x14001aef0
   140004ab8:	mov    rcx,r12
   140004abb:	call   0x14000a850
   140004ac0:	test   eax,eax
   140004ac2:	je     0x140004b37
   140004ac4:	lea    rdx,[rip+0x1640d]        # 0x14001aed8
   140004acb:	mov    rcx,r12
   140004ace:	call   0x14000a850
   140004ad3:	test   eax,eax
   140004ad5:	je     0x140004b37
   140004ad7:	lea    rdx,[rip+0x15c46]        # 0x14001a724
   140004ade:	mov    rcx,r13
   140004ae1:	call   0x14000a6b0
   140004ae6:	mov    rdx,r14
   140004ae9:	jmp    0x140004b2c
   140004aeb:	lea    rdx,[rip+0x15c32]        # 0x14001a724
   140004af2:	mov    rcx,r13
   140004af5:	call   0x14000a6b0
   140004afa:	mov    rdx,r14
   140004afd:	mov    rcx,rax
   140004b00:	call   0x14000a6b0
   140004b05:	lea    rcx,[rsp+0x50]
   140004b0a:	mov    r13,rax
   140004b0d:	call   0x1400047d0
   140004b12:	cmp    BYTE PTR [rax],0x0
   140004b15:	mov    rbx,rax
   140004b18:	je     0x140004b37
   140004b1a:	lea    rdx,[rip+0x15c03]        # 0x14001a724
   140004b21:	mov    rcx,r13
   140004b24:	call   0x14000a6b0
   140004b29:	mov    rdx,rbx
   140004b2c:	mov    rcx,rax
   140004b2f:	call   0x14000a6b0
   140004b34:	mov    r13,rax
   140004b37:	mov    rcx,r12
   140004b3a:	call   0x140004074
   140004b3f:	mov    rax,QWORD PTR [rsp+0x50]
   140004b44:	cmp    BYTE PTR [rax],0x0
   140004b47:	jmp    0x1400049ce
   140004b4c:	lea    rdx,[rip+0x15bd1]        # 0x14001a724
   140004b53:	mov    rcx,r13
   140004b56:	call   0x14000a6b0
   140004b5b:	mov    rdx,r14
   140004b5e:	mov    rcx,rax
   140004b61:	call   0x14000a6b0
   140004b66:	lea    rdx,[rip+0x15bb7]        # 0x14001a724
   140004b6d:	mov    rcx,rax
   140004b70:	call   0x14000a6b0
   140004b75:	mov    rdx,QWORD PTR [rsp+0x50]
   140004b7a:	mov    rcx,rax
   140004b7d:	call   0x14000a6b0
   140004b82:	mov    rcx,r12
   140004b85:	mov    r13,rax
   140004b88:	call   0x140004074
   140004b8d:	mov    rcx,r15
   140004b90:	call   0x140004074
   140004b95:	call   0x1400040e0
   140004b9a:	test   al,al
   140004b9c:	je     0x140004be4
   140004b9e:	mov    rcx,r13
   140004ba1:	call   0x140004048
   140004ba6:	lea    rcx,[rsp+0x50]
   140004bab:	mov    rbx,rax
   140004bae:	mov    QWORD PTR [rsp+0x50],rax
   140004bb3:	call   0x1400047d0
   140004bb8:	lea    rdx,[rbp-0x10]
   140004bbc:	lea    rcx,[rip+0x169bd]        # 0x14001b580
   140004bc3:	mov    r8,rax
   140004bc6:	call   0x140009c2c
   140004bcb:	mov    rdx,QWORD PTR [rsp+0x50]
   140004bd0:	lea    rcx,[rip+0x16991]        # 0x14001b568
   140004bd7:	call   0x140009c2c
   140004bdc:	mov    rcx,rbx
   140004bdf:	call   0x140004074
   140004be4:	call   0x14000ab98
   140004be9:	lea    rcx,[rax+0x30]
   140004bed:	call   0x14000bffc
   140004bf2:	call   0x14000ab98
   140004bf7:	lea    rcx,[rax+0x60]
   140004bfb:	call   0x14000bffc
   140004c00:	mov    ebx,0x68
   140004c05:	lea    rcx,[rbp-0x80]
   140004c09:	mov    r8d,ebx
   140004c0c:	xor    edx,edx
   140004c0e:	call   0x14000a530
   140004c13:	lea    r8d,[rbx-0x50]
   140004c17:	lea    rcx,[rsp+0x60]
   140004c1c:	xor    edx,edx
   140004c1e:	mov    DWORD PTR [rbp-0x80],ebx
   140004c21:	call   0x14000a530
   140004c26:	lea    r11,[rsp+0x60]
   140004c2b:	lea    rax,[rbp-0x80]
   140004c2f:	mov    QWORD PTR [rsp+0x48],r11
   140004c34:	mov    QWORD PTR [rsp+0x40],rax
   140004c39:	and    QWORD PTR [rsp+0x38],0x0
   140004c3f:	and    QWORD PTR [rsp+0x30],0x0
   140004c45:	and    DWORD PTR [rsp+0x28],0x0
   140004c4a:	lea    rcx,[rbp-0x10]
   140004c4e:	xor    r9d,r9d
   140004c51:	xor    r8d,r8d
   140004c54:	mov    rdx,r13
   140004c57:	mov    DWORD PTR [rsp+0x20],edi
   140004c5b:	call   QWORD PTR [rip+0x1542f]        # 0x14001a090
   140004c61:	test   eax,eax
   140004c63:	jne    0x140004c7d
   140004c65:	lea    rdx,[rbp-0x10]
   140004c69:	lea    rcx,[rip+0x168d0]        # 0x14001b540
   140004c70:	call   0x14000440c
   140004c75:	mov    ecx,edi
   140004c77:	call   0x140009bcc
   140004c7c:	int3   
   140004c7d:	mov    rcx,QWORD PTR [rsp+0x60]
   140004c82:	or     ebx,0xffffffff
   140004c85:	mov    edx,ebx
   140004c87:	call   QWORD PTR [rip+0x153fb]        # 0x14001a088
   140004c8d:	cmp    eax,ebx
   140004c8f:	je     0x140004ca7
   140004c91:	mov    rcx,QWORD PTR [rsp+0x60]
   140004c96:	lea    rdx,[rsp+0x58]
   140004c9b:	call   QWORD PTR [rip+0x153df]        # 0x14001a080
   140004ca1:	test   eax,eax
   140004ca3:	jne    0x140004cb7
   140004ca5:	jmp    0x140004cb3
   140004ca7:	lea    rcx,[rip+0x1686a]        # 0x14001b518
   140004cae:	call   0x140004360
   140004cb3:	mov    DWORD PTR [rsp+0x58],edi
   140004cb7:	mov    rcx,QWORD PTR [rsp+0x68]
   140004cbc:	call   QWORD PTR [rip+0x153b6]        # 0x14001a078
   140004cc2:	mov    rcx,QWORD PTR [rsp+0x60]
   140004cc7:	call   QWORD PTR [rip+0x153ab]        # 0x14001a078
   140004ccd:	mov    ecx,DWORD PTR [rsp+0x58]
   140004cd1:	call   0x140009bcc
   140004cd6:	int3   
   140004cd7:	lea    rcx,[rip+0x1681a]        # 0x14001b4f8
   140004cde:	mov    rdx,rdi
   140004ce1:	call   0x14000440c
   140004ce6:	mov    ecx,0x1
   140004ceb:	call   0x140009bcc
   140004cf0:	int3   
   140004cf1:	mov    rcx,QWORD PTR [rbp+0x100]
   140004cf8:	xor    rcx,rsp
   140004cfb:	call   0x14000a820
   140004d00:	lea    r11,[rsp+0x210]
   140004d08:	mov    rbx,QWORD PTR [r11+0x38]
   140004d0c:	mov    rsi,QWORD PTR [r11+0x40]
   140004d10:	mov    rdi,QWORD PTR [r11+0x48]
   140004d14:	mov    rsp,r11
   140004d17:	pop    r15
   140004d19:	pop    r14
   140004d1b:	pop    r13
   140004d1d:	pop    r12
   140004d1f:	pop    rbp
   140004d20:	ret    
   140004d21:	int3   
   140004d22:	int3   
   140004d23:	int3   
   140004d24:	mov    QWORD PTR [rsp+0x8],rbx
   140004d29:	push   rdi
   140004d2a:	sub    rsp,0x20
   140004d2e:	mov    rbx,rcx
   140004d31:	call   0x140009fa0
   140004d36:	lea    rcx,[rax+0x2]
   140004d3a:	call   0x140003ff0
   140004d3f:	mov    rdx,rbx
   140004d42:	mov    rcx,rax
   140004d45:	call   0x14000a750
   140004d4a:	lea    rdx,[rip+0x1688b]        # 0x14001b5dc
   140004d51:	mov    rcx,rax
   140004d54:	call   0x14000a6b0
   140004d59:	mov    rcx,rax
   140004d5c:	mov    rdi,rax
   140004d5f:	call   0x14000c2e8
   140004d64:	mov    rcx,rdi
   140004d67:	mov    ebx,eax
   140004d69:	call   0x140004074
   140004d6e:	mov    eax,ebx
   140004d70:	mov    rbx,QWORD PTR [rsp+0x30]
   140004d75:	add    rsp,0x20
   140004d79:	pop    rdi
   140004d7a:	ret    
   140004d7b:	int3   
   140004d7c:	lea    rax,[rip+0x1685d]        # 0x14001b5e0
   140004d83:	ret    
   140004d84:	mov    QWORD PTR [rsp+0x8],rbx
   140004d89:	push   rdi
   140004d8a:	sub    rsp,0x20
   140004d8e:	mov    rax,QWORD PTR [rip+0x1fa63]        # 0x1400247f8
   140004d95:	mov    rbx,rdx
   140004d98:	mov    rdi,rcx
   140004d9b:	test   rax,rax
   140004d9e:	jne    0x140004de7
   140004da0:	lea    rcx,[rip+0x16879]        # 0x14001b620
   140004da7:	call   QWORD PTR [rip+0x152f3]        # 0x14001a0a0
   140004dad:	test   rax,rax
   140004db0:	jne    0x140004db6
   140004db2:	xor    eax,eax
   140004db4:	jmp    0x140004def
   140004db6:	lea    rdx,[rip+0x16843]        # 0x14001b600
   140004dbd:	mov    rcx,rax
   140004dc0:	call   QWORD PTR [rip+0x152d2]        # 0x14001a098
   140004dc6:	mov    QWORD PTR [rip+0x1fa2b],rax        # 0x1400247f8
   140004dcd:	test   rax,rax
   140004dd0:	jne    0x140004de7
   140004dd2:	lea    rdx,[rip+0x16827]        # 0x14001b600
   140004dd9:	lea    rcx,[rip+0x16808]        # 0x14001b5e8
   140004de0:	call   0x140004360
   140004de5:	jmp    0x140004db2
   140004de7:	mov    rdx,rbx
   140004dea:	mov    rcx,rdi
   140004ded:	call   rax
   140004def:	mov    rbx,QWORD PTR [rsp+0x30]
   140004df4:	add    rsp,0x20
   140004df8:	pop    rdi
   140004df9:	ret    
   140004dfa:	int3   
   140004dfb:	int3   
   140004dfc:	rex push rbx
   140004dfe:	sub    rsp,0x20
   140004e02:	xor    edx,edx
   140004e04:	mov    bl,cl
   140004e06:	lea    rcx,[rsp+0x38]
   140004e0b:	lea    r8d,[rdx+0x8]
   140004e0f:	call   0x14000a530
   140004e14:	lea    rcx,[rsp+0x38]
   140004e19:	mov    DWORD PTR [rsp+0x38],0x8
   140004e21:	call   QWORD PTR [rip+0x15201]        # 0x14001a028
   140004e27:	mov    BYTE PTR [rip+0x1f9b7],bl        # 0x1400247e4
   140004e2d:	call   0x1400040ac
   140004e32:	add    rsp,0x20
   140004e36:	pop    rbx
   140004e37:	ret    
   140004e38:	mov    QWORD PTR [rsp+0x8],rbx
   140004e3d:	mov    QWORD PTR [rsp+0x10],rbp
   140004e42:	mov    QWORD PTR [rsp+0x18],rsi
   140004e47:	push   rdi
   140004e48:	sub    rsp,0x40
   140004e4c:	mov    rbx,r9
   140004e4f:	mov    edi,r8d
   140004e52:	mov    rsi,rdx
   140004e55:	mov    rbp,rcx
   140004e58:	call   0x140001e1c
   140004e5d:	mov    rax,QWORD PTR [rsp+0x78]
   140004e62:	mov    r11d,DWORD PTR [rsp+0x80]
   140004e6a:	mov    r9,rbx
   140004e6d:	mov    r8d,edi
   140004e70:	mov    DWORD PTR [rsp+0x30],r11d
   140004e75:	mov    QWORD PTR [rsp+0x28],rax
   140004e7a:	mov    eax,DWORD PTR [rsp+0x70]
   140004e7e:	mov    rdx,rsi
   140004e81:	mov    rcx,rbp
   140004e84:	mov    DWORD PTR [rsp+0x20],eax
   140004e88:	call   0x1400037b0
   140004e8d:	mov    rbx,QWORD PTR [rsp+0x50]
   140004e92:	mov    rbp,QWORD PTR [rsp+0x58]
   140004e97:	mov    rsi,QWORD PTR [rsp+0x60]
   140004e9c:	add    rsp,0x40
   140004ea0:	pop    rdi
   140004ea1:	ret    
   140004ea2:	int3   
   140004ea3:	int3   
   140004ea4:	ret    0x0
   140004ea7:	int3   
   140004ea8:	xor    al,al
   140004eaa:	ret    
   140004eab:	int3   
   140004eac:	mov    QWORD PTR [rsp+0x8],rbx
   140004eb1:	mov    QWORD PTR [rsp+0x10],rbp
   140004eb6:	mov    QWORD PTR [rsp+0x18],rsi
   140004ebb:	push   rdi
   140004ebc:	push   r12
   140004ebe:	push   r13
   140004ec0:	push   r14
   140004ec2:	push   r15
   140004ec4:	sub    rsp,0x50
   140004ec8:	xor    edi,edi
   140004eca:	movsxd rsi,r8d
   140004ecd:	mov    r12,rdx
   140004ed0:	mov    BYTE PTR [rsp+0x30],dil
   140004ed5:	mov    rbp,rcx
   140004ed8:	call   0x1400013e8
   140004edd:	mov    rbx,rax
   140004ee0:	mov    QWORD PTR [rsp+0x48],rax
   140004ee5:	test   rax,rax
   140004ee8:	jne    0x140004efd
   140004eea:	lea    rcx,[rip+0x1567f]        # 0x14001a570
   140004ef1:	call   0x140004360
   140004ef6:	xor    eax,eax
   140004ef8:	jmp    0x140005109
   140004efd:	test   esi,esi
   140004eff:	jne    0x140004f14
   140004f01:	xor    r8d,r8d
   140004f04:	mov    rdx,r12
   140004f07:	mov    rcx,rbp
   140004f0a:	call   0x140001540
   140004f0f:	jmp    0x140005109
   140004f14:	call   0x140003f44
   140004f19:	mov    r13,rax
   140004f1c:	call   0x140003f3c
   140004f21:	cmp    esi,eax
   140004f23:	jle    0x140004f47
   140004f25:	lea    rcx,[rip+0x167ac]        # 0x14001b6d8
   140004f2c:	mov    r8d,eax
   140004f2f:	mov    edx,esi
   140004f31:	call   0x14000407c
   140004f36:	lea    rcx,[rip+0x1677b]        # 0x14001b6b8
   140004f3d:	call   0x14000407c
   140004f42:	mov    r8d,esi
   140004f45:	jmp    0x140004f04
   140004f47:	mov    rdx,QWORD PTR [r12]
   140004f4b:	sub    eax,esi
   140004f4d:	movsxd r15,eax
   140004f50:	shl    r15,0x4
   140004f54:	add    r15,r13
   140004f57:	mov    rcx,QWORD PTR [r15]
   140004f5a:	call   0x14000a850
   140004f5f:	test   eax,eax
   140004f61:	je     0x140004f78
   140004f63:	lea    rcx,[rip+0x16726]        # 0x14001b690
   140004f6a:	call   0x14000407c
   140004f6f:	lea    rcx,[rip+0x166fa]        # 0x14001b670
   140004f76:	jmp    0x140004f3d
   140004f78:	mov    rcx,rsi
   140004f7b:	shl    rcx,0x3
   140004f7f:	call   0x140003ff0
   140004f84:	mov    DWORD PTR [rsp+0x34],edi
   140004f88:	mov    r13,rax
   140004f8b:	test   esi,esi
   140004f8d:	jle    0x14000506b
   140004f93:	mov    rbx,r12
   140004f96:	sub    rax,r12
   140004f99:	mov    QWORD PTR [rsp+0x38],rbx
   140004f9e:	mov    QWORD PTR [rsp+0x40],rax
   140004fa3:	mov    rdx,QWORD PTR [rbx]
   140004fa6:	mov    rcx,QWORD PTR [r15]
   140004fa9:	call   0x14000a850
   140004fae:	test   eax,eax
   140004fb0:	jne    0x140004fb8
   140004fb2:	mov    al,BYTE PTR [r15+0x8]
   140004fb6:	jmp    0x140004fbb
   140004fb8:	mov    al,dil
   140004fbb:	movzx  edx,BYTE PTR [rsp+0x30]
   140004fc0:	mov    BYTE PTR [rsp+0x98],al
   140004fc7:	movzx  eax,al
   140004fca:	mov    ecx,edx
   140004fcc:	test   dl,dl
   140004fce:	cmove  ecx,eax
   140004fd1:	mov    BYTE PTR [rsp+0x30],cl
   140004fd5:	mov    rcx,QWORD PTR [rbx]
   140004fd8:	call   0x140009fa0
   140004fdd:	add    eax,0x2
   140004fe0:	movsxd rbx,eax
   140004fe3:	mov    rcx,rbx
   140004fe6:	call   0x140003ff0
   140004feb:	mov    rcx,QWORD PTR [rsp+0x38]
   140004ff0:	mov    rdx,QWORD PTR [rsp+0x40]
   140004ff5:	neg    BYTE PTR [rsp+0x98]
   140004ffc:	mov    QWORD PTR [rdx+rcx*1],rax
   140005000:	mov    rcx,QWORD PTR [rcx]
   140005003:	sbb    r9d,r9d
   140005006:	mov    QWORD PTR [rsp+0x20],rcx
   14000500b:	lea    r8,[rip+0x16656]        # 0x14001b668
   140005012:	and    r9d,0xe
   140005016:	mov    rcx,rax
   140005019:	mov    rdx,rbx
   14000501c:	add    r9d,0x46
   140005020:	call   0x140004308
   140005025:	test   eax,eax
   140005027:	js     0x140004ef6
   14000502d:	mov    rax,QWORD PTR [rsp+0x40]
   140005032:	mov    rbx,QWORD PTR [rsp+0x38]
   140005037:	lea    rcx,[rip+0x16626]        # 0x14001b664
   14000503e:	mov    rdx,QWORD PTR [rax+rbx*1]
   140005042:	call   0x14000407c
   140005047:	mov    eax,DWORD PTR [rsp+0x34]
   14000504b:	add    rbx,0x8
   14000504f:	inc    eax
   140005051:	add    r15,0x10
   140005055:	mov    QWORD PTR [rsp+0x38],rbx
   14000505a:	mov    DWORD PTR [rsp+0x34],eax
   14000505e:	cmp    eax,esi
   140005060:	jl     0x140004fa3
   140005066:	mov    rbx,QWORD PTR [rsp+0x48]
   14000506b:	mov    dl,BYTE PTR [rsp+0x30]
   14000506f:	test   dl,dl
   140005071:	jne    0x140005096
   140005073:	test   esi,esi
   140005075:	jle    0x140005089
   140005077:	mov    rcx,QWORD PTR [r13+rdi*8+0x0]
   14000507c:	call   0x140004074
   140005081:	inc    rdi
   140005084:	cmp    rdi,rsi
   140005087:	jl     0x140005077
   140005089:	mov    rcx,r13
   14000508c:	call   0x140004074
   140005091:	jmp    0x140004f42
   140005096:	mov    rax,QWORD PTR [rbp+0x0]
   14000509a:	lea    r9,[rip+0x16597]        # 0x14001b638
   1400050a1:	lea    r8,[rip+0x16580]        # 0x14001b628
   1400050a8:	mov    rdx,rbx
   1400050ab:	mov    rcx,rbp
   1400050ae:	call   QWORD PTR [rax+0x388]
   1400050b4:	mov    r12,rax
   1400050b7:	test   rax,rax
   1400050ba:	je     0x140004eea
   1400050c0:	mov    r8d,esi
   1400050c3:	mov    rdx,r13
   1400050c6:	mov    rcx,rbp
   1400050c9:	call   0x140001540
   1400050ce:	mov    r10,QWORD PTR [rbp+0x0]
   1400050d2:	mov    r8,r12
   1400050d5:	mov    rdx,rbx
   1400050d8:	mov    rcx,rbp
   1400050db:	mov    r9,rax
   1400050de:	call   QWORD PTR [r10+0x390]
   1400050e5:	mov    rbx,rax
   1400050e8:	test   esi,esi
   1400050ea:	jle    0x1400050fe
   1400050ec:	mov    rcx,QWORD PTR [r13+rdi*8+0x0]
   1400050f1:	call   0x140004074
   1400050f6:	inc    rdi
   1400050f9:	cmp    rdi,rsi
   1400050fc:	jl     0x1400050ec
   1400050fe:	mov    rcx,r13
   140005101:	call   0x140004074
   140005106:	mov    rax,rbx
   140005109:	lea    r11,[rsp+0x50]
   14000510e:	mov    rbx,QWORD PTR [r11+0x30]
   140005112:	mov    rbp,QWORD PTR [r11+0x38]
   140005116:	mov    rsi,QWORD PTR [r11+0x40]
   14000511a:	mov    rsp,r11
   14000511d:	pop    r15
   14000511f:	pop    r14
   140005121:	pop    r13
   140005123:	pop    r12
   140005125:	pop    rdi
   140005126:	ret    
   140005127:	int3   
   140005128:	mov    QWORD PTR [rsp+0x10],rbx
   14000512d:	mov    QWORD PTR [rsp+0x18],rsi
   140005132:	push   rbp
   140005133:	push   rdi
   140005134:	push   r12
   140005136:	lea    rbp,[rsp-0x170]
   14000513e:	sub    rsp,0x270
   140005145:	mov    rax,QWORD PTR [rip+0x1df74]        # 0x1400230c0
   14000514c:	xor    rax,rsp
   14000514f:	mov    QWORD PTR [rbp+0x160],rax
   140005156:	lea    rax,[rsp+0x30]
   14000515b:	mov    edi,edx
   14000515d:	mov    rsi,rcx
   140005160:	lea    r12,[rip+0x16361]        # 0x14001b4c8
   140005167:	mov    r9d,0x20019
   14000516d:	xor    r8d,r8d
   140005170:	mov    rcx,0xffffffff80000002
   140005177:	mov    rdx,r12
   14000517a:	mov    QWORD PTR [rsp+0x20],rax
   14000517f:	call   QWORD PTR [rip+0x14e83]        # 0x14001a008
   140005185:	xor    ebx,ebx
   140005187:	test   eax,eax
   140005189:	je     0x1400051a1
   14000518b:	lea    rcx,[rip+0x166de]        # 0x14001b870
   140005192:	mov    rdx,r12
   140005195:	call   0x140004360
   14000519a:	xor    al,al
   14000519c:	jmp    0x1400052e5
   1400051a1:	mov    rcx,QWORD PTR [rsp+0x30]
   1400051a6:	lea    r8,[rsp+0x40]
   1400051ab:	lea    rdx,[rip+0x166ae]        # 0x14001b860
   1400051b2:	mov    r9d,0x104
   1400051b8:	call   0x140004204
   1400051bd:	test   al,al
   1400051bf:	jne    0x1400051dd
   1400051c1:	lea    rcx,[rip+0x16658]        # 0x14001b820
   1400051c8:	mov    rdx,r12
   1400051cb:	call   0x140004360
   1400051d0:	mov    rcx,QWORD PTR [rsp+0x30]
   1400051d5:	call   QWORD PTR [rip+0x14e25]        # 0x14001a000
   1400051db:	jmp    0x14000519a
   1400051dd:	call   0x140001eec
   1400051e2:	lea    rcx,[rsp+0x40]
   1400051e7:	mov    rdx,rax
   1400051ea:	call   0x14000a850
   1400051ef:	test   eax,eax
   1400051f1:	je     0x140005211
   1400051f3:	call   0x140001eec
   1400051f8:	lea    r8,[rsp+0x40]
   1400051fd:	lea    rcx,[rip+0x165cc]        # 0x14001b7d0
   140005204:	mov    r9,rax
   140005207:	mov    rdx,r12
   14000520a:	call   0x140004360
   14000520f:	jmp    0x1400051d0
   140005211:	mov    rcx,QWORD PTR [rsp+0x30]
   140005216:	lea    rax,[rsp+0x38]
   14000521b:	lea    rdx,[rsp+0x40]
   140005220:	mov    r9d,0x20019
   140005226:	xor    r8d,r8d
   140005229:	mov    QWORD PTR [rsp+0x20],rax
   14000522e:	call   QWORD PTR [rip+0x14dd4]        # 0x14001a008
   140005234:	test   eax,eax
   140005236:	je     0x14000524e
   140005238:	lea    r8,[rsp+0x40]
   14000523d:	lea    rcx,[rip+0x1662c]        # 0x14001b870
   140005244:	mov    rdx,r12
   140005247:	call   0x140004360
   14000524c:	jmp    0x1400051d0
   14000524e:	mov    rcx,QWORD PTR [rsp+0x38]
   140005253:	lea    rdx,[rip+0x1625e]        # 0x14001b4b8
   14000525a:	mov    r9d,edi
   14000525d:	mov    r8,rsi
   140005260:	call   0x140004204
   140005265:	test   al,al
   140005267:	jne    0x14000527f
   140005269:	lea    r8,[rsp+0x40]
   14000526e:	lea    rcx,[rip+0x16523]        # 0x14001b798
   140005275:	mov    rdx,r12
   140005278:	call   0x140004360
   14000527d:	jmp    0x1400052cd
   14000527f:	call   0x1400040e0
   140005284:	test   al,al
   140005286:	je     0x1400052cb
   140005288:	mov    rcx,QWORD PTR [rsp+0x38]
   14000528d:	lea    r8,[rbp+0x50]
   140005291:	lea    rdx,[rip+0x164f0]        # 0x14001b788
   140005298:	mov    r9d,0x104
   14000529e:	call   0x140004204
   1400052a3:	test   al,al
   1400052a5:	jne    0x1400052b6
   1400052a7:	lea    rcx,[rip+0x164b2]        # 0x14001b760
   1400052ae:	call   0x140009c2c
   1400052b3:	mov    BYTE PTR [rbp+0x50],bl
   1400052b6:	lea    r8,[rbp+0x50]
   1400052ba:	lea    rdx,[rsp+0x40]
   1400052bf:	lea    rcx,[rip+0x16472]        # 0x14001b738
   1400052c6:	call   0x140009c2c
   1400052cb:	mov    bl,0x1
   1400052cd:	mov    rcx,QWORD PTR [rsp+0x30]
   1400052d2:	call   QWORD PTR [rip+0x14d28]        # 0x14001a000
   1400052d8:	mov    rcx,QWORD PTR [rsp+0x38]
   1400052dd:	call   QWORD PTR [rip+0x14d1d]        # 0x14001a000
   1400052e3:	mov    al,bl
   1400052e5:	mov    rcx,QWORD PTR [rbp+0x160]
   1400052ec:	xor    rcx,rsp
   1400052ef:	call   0x14000a820
   1400052f4:	lea    r11,[rsp+0x270]
   1400052fc:	mov    rbx,QWORD PTR [r11+0x28]
   140005300:	mov    rsi,QWORD PTR [r11+0x30]
   140005304:	mov    rsp,r11
   140005307:	pop    r12
   140005309:	pop    rdi
   14000530a:	pop    rbp
   14000530b:	ret    
   14000530c:	mov    QWORD PTR [rsp+0x18],rbx
   140005311:	push   rdi
   140005312:	sub    rsp,0x170
   140005319:	mov    rax,QWORD PTR [rip+0x1dda0]        # 0x1400230c0
   140005320:	xor    rax,rsp
   140005323:	mov    QWORD PTR [rsp+0x160],rax
   14000532b:	mov    edi,edx
   14000532d:	mov    rbx,rcx
   140005330:	call   0x1400041bc
   140005335:	test   al,al
   140005337:	je     0x1400053b5
   140005339:	lea    r8,[rip+0x165a8]        # 0x14001b8e8
   140005340:	lea    rcx,[rsp+0x50]
   140005345:	mov    r9,rbx
   140005348:	mov    edx,0x104
   14000534d:	call   0x140004308
   140005352:	lea    rdx,[rsp+0x20]
   140005357:	lea    rcx,[rsp+0x50]
   14000535c:	call   0x14000b628
   140005361:	test   eax,eax
   140005363:	jne    0x140005378
   140005365:	lea    rcx,[rip+0x1656c]        # 0x14001b8d8
   14000536c:	mov    rdx,rbx
   14000536f:	call   0x14000407c
   140005374:	mov    al,0x1
   140005376:	jmp    0x1400053d1
   140005378:	lea    r8,[rip+0x16541]        # 0x14001b8c0
   14000537f:	lea    rcx,[rsp+0x50]
   140005384:	mov    r9,rbx
   140005387:	mov    edx,0x104
   14000538c:	call   0x140004308
   140005391:	lea    rdx,[rsp+0x20]
   140005396:	lea    rcx,[rsp+0x50]
   14000539b:	call   0x14000b628
   1400053a0:	test   eax,eax
   1400053a2:	jne    0x1400053b5
   1400053a4:	lea    rdx,[rip+0x1650d]        # 0x14001b8b8
   1400053ab:	mov    rcx,rbx
   1400053ae:	call   0x14000a6b0
   1400053b3:	jmp    0x140005365
   1400053b5:	mov    edx,edi
   1400053b7:	mov    rcx,rbx
   1400053ba:	call   0x140005128
   1400053bf:	test   al,al
   1400053c1:	jne    0x140005365
   1400053c3:	lea    rcx,[rip+0x164ce]        # 0x14001b898
   1400053ca:	call   0x140004360
   1400053cf:	xor    al,al
   1400053d1:	mov    rcx,QWORD PTR [rsp+0x160]
   1400053d9:	xor    rcx,rsp
   1400053dc:	call   0x14000a820
   1400053e1:	mov    rbx,QWORD PTR [rsp+0x190]
   1400053e9:	add    rsp,0x170
   1400053f0:	pop    rdi
   1400053f1:	ret    
   1400053f2:	int3   
   1400053f3:	int3   
   1400053f4:	mov    QWORD PTR [rsp+0x10],rbx
   1400053f9:	push   rdi
   1400053fa:	sub    rsp,0x140
   140005401:	mov    rax,QWORD PTR [rip+0x1dcb8]        # 0x1400230c0
   140005408:	xor    rax,rsp
   14000540b:	mov    QWORD PTR [rsp+0x130],rax
   140005413:	mov    rdi,rcx
   140005416:	lea    rcx,[rsp+0x20]
   14000541b:	mov    edx,0x104
   140005420:	call   0x14000530c
   140005425:	test   al,al
   140005427:	jne    0x14000542d
   140005429:	xor    eax,eax
   14000542b:	jmp    0x140005492
   14000542d:	mov    rcx,QWORD PTR [rip+0x1dc4c]        # 0x140023080
   140005434:	call   0x140009fa0
   140005439:	lea    rcx,[rsp+0x20]
   14000543e:	mov    rbx,rax
   140005441:	call   0x140009fa0
   140005446:	add    rbx,rax
   140005449:	cmp    rbx,0x104
   140005450:	jae    0x140005429
   140005452:	mov    rdx,QWORD PTR [rip+0x1dc27]        # 0x140023080
   140005459:	lea    rcx,[rsp+0x20]
   14000545e:	call   0x14000a6b0
   140005463:	mov    rax,QWORD PTR [rip+0x1f386]        # 0x1400247f0
   14000546a:	test   rax,rax
   14000546d:	jne    0x140005486
   14000546f:	lea    rcx,[rsp+0x20]
   140005474:	call   QWORD PTR [rip+0x14c2e]        # 0x14001a0a8
   14000547a:	mov    QWORD PTR [rip+0x1f36f],rax        # 0x1400247f0
   140005481:	test   rax,rax
   140005484:	je     0x140005429
   140005486:	mov    rdx,rdi
   140005489:	mov    rcx,rax
   14000548c:	call   QWORD PTR [rip+0x14c06]        # 0x14001a098
   140005492:	mov    rcx,QWORD PTR [rsp+0x130]
   14000549a:	xor    rcx,rsp
   14000549d:	call   0x14000a820
   1400054a2:	mov    rbx,QWORD PTR [rsp+0x158]
   1400054aa:	add    rsp,0x140
   1400054b1:	pop    rdi
   1400054b2:	ret    
   1400054b3:	int3   
   1400054b4:	rex push rbx
   1400054b6:	push   rbp
   1400054b7:	push   rsi
   1400054b8:	push   rdi
   1400054b9:	push   r12
   1400054bb:	push   r13
   1400054bd:	push   r14
   1400054bf:	push   r15
   1400054c1:	sub    rsp,0x88
   1400054c8:	mov    rax,QWORD PTR [rip+0x1dbf1]        # 0x1400230c0
   1400054cf:	xor    rax,rsp
   1400054d2:	mov    QWORD PTR [rsp+0x78],rax
   1400054d7:	mov    rax,QWORD PTR [rsp+0x100]
   1400054df:	mov    rsi,QWORD PTR [rsp+0xf0]
   1400054e7:	mov    rbx,QWORD PTR [rdx]
   1400054ea:	xor    ebp,ebp
   1400054ec:	mov    QWORD PTR [rsp+0x40],rax
   1400054f1:	mov    r15d,r9d
   1400054f4:	mov    r13,r8
   1400054f7:	mov    r14,rdx
   1400054fa:	mov    r12,rcx
   1400054fd:	mov    edi,0x40
   140005502:	cmp    DWORD PTR [rcx],ebp
   140005504:	jle    0x14000558c
   14000550a:	mov    rcx,QWORD PTR [rbx]
   14000550d:	lea    rdx,[rip+0x165d4]        # 0x14001bae8
   140005514:	call   0x14000a850
   140005519:	test   eax,eax
   14000551b:	je     0x14000555d
   14000551d:	mov    rcx,QWORD PTR [rbx]
   140005520:	lea    rdx,[rip+0x154ed]        # 0x14001aa14
   140005527:	call   0x14000a850
   14000552c:	test   eax,eax
   14000552e:	je     0x14000555d
   140005530:	mov    rcx,QWORD PTR [rbx]
   140005533:	lea    rdx,[rip+0x165a6]        # 0x14001bae0
   14000553a:	call   0x14000a850
   14000553f:	test   eax,eax
   140005541:	je     0x140005556
   140005543:	mov    rcx,QWORD PTR [rbx]
   140005546:	lea    rdx,[rip+0x154cf]        # 0x14001aa1c
   14000554d:	call   0x14000a850
   140005552:	test   eax,eax
   140005554:	jne    0x140005562
   140005556:	mov    edi,0x20
   14000555b:	jmp    0x140005562
   14000555d:	mov    edi,0x40
   140005562:	inc    ebp
   140005564:	add    rbx,0x8
   140005568:	cmp    ebp,DWORD PTR [r12]
   14000556c:	jl     0x14000550a
   14000556e:	cmp    edi,0x40
   140005571:	je     0x14000558c
   140005573:	lea    rcx,[rip+0x16506]        # 0x14001ba80
   14000557a:	mov    edx,edi
   14000557c:	call   0x140004360
   140005581:	mov    ecx,0x1
   140005586:	call   0x140009bcc
   14000558b:	int3   
   14000558c:	mov    edx,r15d
   14000558f:	mov    rcx,r13
   140005592:	call   0x14000530c
   140005597:	xor    ebp,ebp
   140005599:	test   al,al
   14000559b:	jne    0x1400055b2
   14000559d:	lea    rcx,[rip+0x164a4]        # 0x14001ba48
   1400055a4:	call   0x140004360
   1400055a9:	lea    ecx,[rbp+0x2]
   1400055ac:	call   0x140009bcc
   1400055b1:	int3   
   1400055b2:	mov    rbx,QWORD PTR [rsp+0x40]
   1400055b7:	movsxd rdx,DWORD PTR [rsp+0x108]
   1400055bf:	lea    rcx,[rip+0x15f2e]        # 0x14001b4f4
   1400055c6:	mov    QWORD PTR [rsp+0x38],rcx
   1400055cb:	lea    rax,[rip+0x15e96]        # 0x14001b468
   1400055d2:	lea    r8,[rip+0x16457]        # 0x14001ba30
   1400055d9:	mov    QWORD PTR [rsp+0x30],rax
   1400055de:	mov    QWORD PTR [rsp+0x28],rcx
   1400055e3:	mov    QWORD PTR [rsp+0x20],rcx
   1400055e8:	mov    rcx,rbx
   1400055eb:	mov    r9,r13
   1400055ee:	call   0x140004308
   1400055f3:	xor    edx,edx
   1400055f5:	mov    rcx,rbx
   1400055f8:	call   0x140003390
   1400055fd:	mov    r15d,0x1
   140005603:	cmp    eax,r15d
   140005606:	jge    0x14000561d
   140005608:	lea    rcx,[rip+0x163e9]        # 0x14001b9f8
   14000560f:	call   0x140004360
   140005614:	mov    ecx,r15d
   140005617:	call   0x140009bcc
   14000561c:	int3   
   14000561d:	xor    r8d,r8d
   140005620:	mov    rdx,r14
   140005623:	mov    rcx,r12
   140005626:	call   0x140002410
   14000562b:	lea    rdx,[rip+0x155c2]        # 0x14001abf4
   140005632:	mov    rcx,rax
   140005635:	mov    rbx,rax
   140005638:	call   0x14000a850
   14000563d:	test   eax,eax
   14000563f:	jne    0x140005658
   140005641:	lea    rcx,[rip+0x16388]        # 0x14001b9d0
   140005648:	call   0x140004360
   14000564d:	mov    ecx,0x4
   140005652:	call   0x140009bcc
   140005657:	int3   
   140005658:	mov    edx,0x2f
   14000565d:	mov    rcx,rbx
   140005660:	mov    BYTE PTR [rsi],bpl
   140005663:	call   0x14000c04c
   140005668:	test   rax,rax
   14000566b:	jne    0x14000569e
   14000566d:	lea    edx,[rax+0x5c]
   140005670:	mov    rcx,rbx
   140005673:	call   0x14000c04c
   140005678:	test   rax,rax
   14000567b:	jne    0x14000569e
   14000567d:	movsxd rdx,DWORD PTR [rsp+0xf8]
   140005685:	lea    r8,[rip+0x16094]        # 0x14001b720
   14000568c:	mov    r9,r13
   14000568f:	mov    rcx,rsi
   140005692:	mov    QWORD PTR [rsp+0x20],rbx
   140005697:	call   0x140004308
   14000569c:	jmp    0x1400056b8
   14000569e:	movsxd rdx,DWORD PTR [rsp+0xf8]
   1400056a6:	lea    r8,[rip+0x16063]        # 0x14001b710
   1400056ad:	mov    r9,rbx
   1400056b0:	mov    rcx,rsi
   1400056b3:	call   0x140004308
   1400056b8:	lea    rdx,[rsp+0x48]
   1400056bd:	mov    rcx,rsi
   1400056c0:	call   0x14000b628
   1400056c5:	test   eax,eax
   1400056c7:	je     0x1400056e6
   1400056c9:	lea    rcx,[rip+0x16290]        # 0x14001b960
   1400056d0:	mov    r8,rsi
   1400056d3:	mov    rdx,rbx
   1400056d6:	call   0x140004360
   1400056db:	mov    ecx,0x4
   1400056e0:	call   0x140009bcc
   1400056e5:	int3   
   1400056e6:	mov    rbx,QWORD PTR [r14]
   1400056e9:	mov    edi,ebp
   1400056eb:	cmp    DWORD PTR [r12],ebp
   1400056ef:	jle    0x14000577b
   1400056f5:	mov    ecx,DWORD PTR [rip+0x1d97d]        # 0x140023078
   1400056fb:	test   ecx,ecx
   1400056fd:	jns    0x140005723
   1400056ff:	mov    rdx,QWORD PTR [rbx]
   140005702:	lea    rcx,[rip+0x16237]        # 0x14001b940
   140005709:	call   0x140004168
   14000570e:	mov    ecx,DWORD PTR [rip+0x1d964]        # 0x140023078
   140005714:	cmp    eax,r15d
   140005717:	cmove  ecx,r15d
   14000571b:	mov    DWORD PTR [rip+0x1d957],ecx        # 0x140023078
   140005721:	test   ecx,ecx
   140005723:	je     0x140005766
   140005725:	mov    rdx,QWORD PTR [rbx]
   140005728:	lea    rcx,[rip+0x161f9]        # 0x14001b928
   14000572f:	call   0x140004168
   140005734:	cmp    eax,r15d
   140005737:	je     0x140005775
   140005739:	mov    rdx,QWORD PTR [rbx]
   14000573c:	lea    rcx,[rip+0x161cd]        # 0x14001b910
   140005743:	call   0x140004168
   140005748:	test   eax,eax
   14000574a:	je     0x140005775
   14000574c:	mov    rdx,QWORD PTR [rbx]
   14000574f:	lea    rcx,[rip+0x161a2]        # 0x14001b8f8
   140005756:	call   0x140004168
   14000575b:	cmp    eax,r15d
   14000575e:	je     0x140005775
   140005760:	mov    ecx,DWORD PTR [rip+0x1d912]        # 0x140023078
   140005766:	add    edi,r15d
   140005769:	add    rbx,0x8
   14000576d:	cmp    edi,DWORD PTR [r12]
   140005771:	jge    0x14000577b
   140005773:	jmp    0x1400056fb
   140005775:	mov    DWORD PTR [rip+0x1d8fd],ebp        # 0x140023078
   14000577b:	mov    rcx,QWORD PTR [rsp+0x78]
   140005780:	xor    rcx,rsp
   140005783:	call   0x14000a820
   140005788:	add    rsp,0x88
   14000578f:	pop    r15
   140005791:	pop    r14
   140005793:	pop    r13
   140005795:	pop    r12
   140005797:	pop    rdi
   140005798:	pop    rsi
   140005799:	pop    rbp
   14000579a:	pop    rbx
   14000579b:	ret    
   14000579c:	rex push rbx
   14000579e:	sub    rsp,0x140
   1400057a5:	mov    rax,QWORD PTR [rip+0x1d914]        # 0x1400230c0
   1400057ac:	xor    rax,rsp
   1400057af:	mov    QWORD PTR [rsp+0x130],rax
   1400057b7:	cmp    DWORD PTR [rip+0x1f02a],0x0        # 0x1400247e8
   1400057be:	jne    0x14000587d
   1400057c4:	lea    rcx,[rsp+0x20]
   1400057c9:	mov    edx,0x104
   1400057ce:	call   0x14000530c
   1400057d3:	test   al,al
   1400057d5:	je     0x140005873
   1400057db:	lea    rcx,[rip+0x16376]        # 0x14001bb58
   1400057e2:	call   0x140009fa0
   1400057e7:	lea    rcx,[rip+0x16362]        # 0x14001bb50
   1400057ee:	mov    rbx,rax
   1400057f1:	call   0x140009fa0
   1400057f6:	lea    rcx,[rsp+0x20]
   1400057fb:	add    rbx,rax
   1400057fe:	call   0x140009fa0
   140005803:	add    rax,rbx
   140005806:	cmp    rax,0x104
   14000580c:	jb     0x14000581e
   14000580e:	lea    rcx,[rip+0x16303]        # 0x14001bb18
   140005815:	call   0x140004360
   14000581a:	xor    al,al
   14000581c:	jmp    0x14000587f
   14000581e:	lea    rdx,[rip+0x162db]        # 0x14001bb00
   140005825:	lea    rcx,[rsp+0x20]
   14000582a:	call   0x14000a6b0
   14000582f:	lea    rdx,[rsp+0x20]
   140005834:	lea    rcx,[rip+0x162b5]        # 0x14001baf0
   14000583b:	call   0x14000407c
   140005840:	lea    rcx,[rsp+0x20]
   140005845:	xor    edx,edx
   140005847:	call   0x14000c39c
   14000584c:	test   eax,eax
   14000584e:	jne    0x140005873
   140005850:	lea    rcx,[rsp+0x20]
   140005855:	call   QWORD PTR [rip+0x1484d]        # 0x14001a0a8
   14000585b:	test   rax,rax
   14000585e:	jne    0x140005873
   140005860:	lea    rdx,[rsp+0x20]
   140005865:	lea    rcx,[rip+0x15d7c]        # 0x14001b5e8
   14000586c:	call   0x140004360
   140005871:	jmp    0x14000581a
   140005873:	mov    DWORD PTR [rip+0x1ef6b],0x1        # 0x1400247e8
   14000587d:	mov    al,0x1
   14000587f:	mov    rcx,QWORD PTR [rsp+0x130]
   140005887:	xor    rcx,rsp
   14000588a:	call   0x14000a820
   14000588f:	add    rsp,0x140
   140005896:	pop    rbx
   140005897:	ret    
   140005898:	mov    QWORD PTR [rsp+0x8],rbx
   14000589d:	mov    QWORD PTR [rsp+0x10],rsi
   1400058a2:	push   rdi
   1400058a3:	sub    rsp,0x20
   1400058a7:	mov    rsi,rdx
   1400058aa:	mov    rbx,rcx
   1400058ad:	mov    rdx,rcx
   1400058b0:	lea    rcx,[rip+0x16311]        # 0x14001bbc8
   1400058b7:	call   0x14000407c
   1400058bc:	call   0x14000579c
   1400058c1:	mov    rcx,rbx
   1400058c4:	call   QWORD PTR [rip+0x147de]        # 0x14001a0a8
   1400058ca:	mov    rdi,rax
   1400058cd:	test   rax,rax
   1400058d0:	jne    0x1400058db
   1400058d2:	lea    rcx,[rip+0x15d0f]        # 0x14001b5e8
   1400058d9:	jmp    0x140005918
   1400058db:	lea    rdx,[rip+0x162ce]        # 0x14001bbb0
   1400058e2:	mov    rcx,rax
   1400058e5:	call   QWORD PTR [rip+0x147ad]        # 0x14001a098
   1400058eb:	lea    rdx,[rip+0x1629e]        # 0x14001bb90
   1400058f2:	mov    rcx,rdi
   1400058f5:	mov    QWORD PTR [rsi],rax
   1400058f8:	call   QWORD PTR [rip+0x1479a]        # 0x14001a098
   1400058fe:	cmp    QWORD PTR [rsi],0x0
   140005902:	mov    QWORD PTR [rsi+0x8],rax
   140005906:	je     0x140005911
   140005908:	test   rax,rax
   14000590b:	je     0x140005911
   14000590d:	mov    al,0x1
   14000590f:	jmp    0x140005922
   140005911:	lea    rcx,[rip+0x16250]        # 0x14001bb68
   140005918:	mov    rdx,rbx
   14000591b:	call   0x140004360
   140005920:	xor    al,al
   140005922:	mov    rbx,QWORD PTR [rsp+0x30]
   140005927:	mov    rsi,QWORD PTR [rsp+0x38]
   14000592c:	add    rsp,0x20
   140005930:	pop    rdi
   140005931:	ret    
   140005932:	int3   
   140005933:	int3   
   140005934:	mov    QWORD PTR [rsp+0x10],rbx
   140005939:	mov    QWORD PTR [rsp+0x18],rsi
   14000593e:	push   rdi
   14000593f:	sub    rsp,0x140
   140005946:	mov    rax,QWORD PTR [rip+0x1d773]        # 0x1400230c0
   14000594d:	xor    rax,rsp
   140005950:	mov    QWORD PTR [rsp+0x130],rax
   140005958:	mov    rsi,rcx
   14000595b:	mov    rcx,QWORD PTR [rip+0x1eea6]        # 0x140024808
   140005962:	or     ebx,0xffffffff
   140005965:	test   rcx,rcx
   140005968:	jne    0x140005a31
   14000596e:	lea    rcx,[rsp+0x20]
   140005973:	mov    edx,0x104
   140005978:	call   0x14000530c
   14000597d:	test   al,al
   14000597f:	je     0x140005a25
   140005985:	lea    rcx,[rsp+0x20]
   14000598a:	call   0x140009fa0
   14000598f:	mov    rdi,rax
   140005992:	call   0x14000579c
   140005997:	lea    rdx,[rip+0x1626a]        # 0x14001bc08
   14000599e:	lea    rcx,[rsp+0x20]
   1400059a3:	call   0x14000a6b0
   1400059a8:	lea    rcx,[rsp+0x20]
   1400059ad:	call   QWORD PTR [rip+0x146f5]        # 0x14001a0a8
   1400059b3:	test   rax,rax
   1400059b6:	je     0x140005a25
   1400059b8:	movsxd rdi,edi
   1400059bb:	lea    rdx,[rip+0x16236]        # 0x14001bbf8
   1400059c2:	lea    rcx,[rsp+0x20]
   1400059c7:	mov    BYTE PTR [rsp+rdi*1+0x20],0x0
   1400059cc:	call   0x14000a6b0
   1400059d1:	lea    rcx,[rsp+0x20]
   1400059d6:	call   QWORD PTR [rip+0x146cc]        # 0x14001a0a8
   1400059dc:	test   rax,rax
   1400059df:	je     0x140005a25
   1400059e1:	lea    rdx,[rip+0x16200]        # 0x14001bbe8
   1400059e8:	lea    rcx,[rsp+0x20]
   1400059ed:	mov    BYTE PTR [rsp+rdi*1+0x20],0x0
   1400059f2:	call   0x14000a6b0
   1400059f7:	lea    rcx,[rsp+0x20]
   1400059fc:	call   QWORD PTR [rip+0x146a6]        # 0x14001a0a8
   140005a02:	mov    QWORD PTR [rip+0x1edff],rax        # 0x140024808
   140005a09:	test   rax,rax
   140005a0c:	je     0x140005a4d
   140005a0e:	lea    rdx,[rip+0x161c3]        # 0x14001bbd8
   140005a15:	mov    rcx,rax
   140005a18:	call   QWORD PTR [rip+0x1467a]        # 0x14001a098
   140005a1e:	mov    QWORD PTR [rip+0x1eddb],rax        # 0x140024800
   140005a25:	mov    rcx,QWORD PTR [rip+0x1eddc]        # 0x140024808
   140005a2c:	test   rcx,rcx
   140005a2f:	je     0x140005a4d
   140005a31:	mov    rdx,rsi
   140005a34:	call   QWORD PTR [rip+0x1465e]        # 0x14001a098
   140005a3a:	test   rax,rax
   140005a3d:	je     0x140005a4d
   140005a3f:	mov    DWORD PTR [rip+0x1ed97],0x1        # 0x1400247e0
   140005a49:	call   rax
   140005a4b:	mov    ebx,eax
   140005a4d:	mov    eax,ebx
   140005a4f:	mov    rcx,QWORD PTR [rsp+0x130]
   140005a57:	xor    rcx,rsp
   140005a5a:	call   0x14000a820
   140005a5f:	lea    r11,[rsp+0x140]
   140005a67:	mov    rbx,QWORD PTR [r11+0x18]
   140005a6b:	mov    rsi,QWORD PTR [r11+0x20]
   140005a6f:	mov    rsp,r11
   140005a72:	pop    rdi
   140005a73:	ret    
   140005a74:	mov    rax,rsp
   140005a77:	mov    QWORD PTR [rax+0x8],rbx
   140005a7b:	mov    QWORD PTR [rax+0x10],rbp
   140005a7f:	mov    QWORD PTR [rax+0x18],rsi
   140005a83:	push   rdi
   140005a84:	sub    rsp,0x40
   140005a88:	and    DWORD PTR [rax+0x20],0x0
   140005a8c:	lea    rax,[rax-0x18]
   140005a90:	mov    rsi,r8
   140005a93:	mov    r9,r8
   140005a96:	mov    rbp,rcx
   140005a99:	mov    r8,rcx
   140005a9c:	mov    QWORD PTR [rsp+0x28],rax
   140005aa1:	xor    ecx,ecx
   140005aa3:	mov    rdi,rdx
   140005aa6:	mov    DWORD PTR [rsp+0x20],0x10000
   140005aae:	call   0x14000c480
   140005ab3:	mov    rbx,rax
   140005ab6:	test   rax,rax
   140005ab9:	jne    0x140005adb
   140005abb:	lea    rax,[rsp+0x30]
   140005ac0:	mov    r9,rsi
   140005ac3:	mov    r8,rbp
   140005ac6:	mov    QWORD PTR [rsp+0x28],rax
   140005acb:	and    DWORD PTR [rsp+0x20],ebx
   140005acf:	mov    edx,edi
   140005ad1:	xor    ecx,ecx
   140005ad3:	call   0x14000c480
   140005ad8:	mov    rbx,rax
   140005adb:	cmp    DWORD PTR [rip+0x1d596],0x0        # 0x140023078
   140005ae2:	je     0x140005b98
   140005ae8:	lea    rcx,[rip+0x16149]        # 0x14001bc38
   140005aef:	call   0x140009d94
   140005af4:	test   rax,rax
   140005af7:	je     0x140005b18
   140005af9:	lea    rdx,[rip+0x152b4]        # 0x14001adb4
   140005b00:	mov    rcx,rax
   140005b03:	call   0x1400196a0
   140005b08:	neg    eax
   140005b0a:	sbb    ecx,ecx
   140005b0c:	and    ecx,DWORD PTR [rip+0x1d566]        # 0x140023078
   140005b12:	mov    DWORD PTR [rip+0x1d560],ecx        # 0x140023078
   140005b18:	lea    rcx,[rip+0x16109]        # 0x14001bc28
   140005b1f:	call   0x140009d94
   140005b24:	mov    rdi,rax
   140005b27:	test   rax,rax
   140005b2a:	je     0x140005b4d
   140005b2c:	lea    rdx,[rip+0x15281]        # 0x14001adb4
   140005b33:	mov    rcx,rax
   140005b36:	call   0x1400196a0
   140005b3b:	neg    eax
   140005b3d:	sbb    ecx,ecx
   140005b3f:	and    ecx,DWORD PTR [rip+0x1d533]        # 0x140023078
   140005b45:	mov    DWORD PTR [rip+0x1d52d],ecx        # 0x140023078
   140005b4b:	jmp    0x140005b53
   140005b4d:	mov    ecx,DWORD PTR [rip+0x1d525]        # 0x140023078
   140005b53:	test   ecx,ecx
   140005b55:	jns    0x140005b8a
   140005b57:	and    DWORD PTR [rip+0x1d51a],0x0        # 0x140023078
   140005b5e:	test   rdi,rdi
   140005b61:	je     0x140005b98
   140005b63:	lea    rdx,[rip+0x15252]        # 0x14001adbc
   140005b6a:	mov    rcx,rdi
   140005b6d:	call   0x1400196a0
   140005b72:	mov    ecx,DWORD PTR [rip+0x1d500]        # 0x140023078
   140005b78:	mov    edx,0x1
   140005b7d:	test   eax,eax
   140005b7f:	cmove  ecx,edx
   140005b82:	mov    DWORD PTR [rip+0x1d4f0],ecx        # 0x140023078
   140005b88:	test   ecx,ecx
   140005b8a:	je     0x140005b98
   140005b8c:	lea    rcx,[rip+0x16085]        # 0x14001bc18
   140005b93:	call   0x140005934
   140005b98:	test   rbx,rbx
   140005b9b:	je     0x140005bc2
   140005b9d:	or     edx,0xffffffff
   140005ba0:	mov    rcx,rbx
   140005ba3:	call   QWORD PTR [rip+0x144df]        # 0x14001a088
   140005ba9:	lea    rdx,[rsp+0x68]
   140005bae:	mov    rcx,rbx
   140005bb1:	call   QWORD PTR [rip+0x144f9]        # 0x14001a0b0
   140005bb7:	mov    rcx,rbx
   140005bba:	call   QWORD PTR [rip+0x144b8]        # 0x14001a078
   140005bc0:	jmp    0x140005bcb
   140005bc2:	mov    rcx,rsi
   140005bc5:	call   rbp
   140005bc7:	mov    DWORD PTR [rsp+0x68],eax
   140005bcb:	cmp    DWORD PTR [rip+0x1ec0e],0x0        # 0x1400247e0
   140005bd2:	je     0x140005be2
   140005bd4:	mov    rax,QWORD PTR [rip+0x1ec25]        # 0x140024800
   140005bdb:	test   rax,rax
   140005bde:	je     0x140005be2
   140005be0:	call   rax
   140005be2:	mov    eax,DWORD PTR [rsp+0x68]
   140005be6:	mov    rbx,QWORD PTR [rsp+0x50]
   140005beb:	mov    rbp,QWORD PTR [rsp+0x58]
   140005bf0:	mov    rsi,QWORD PTR [rsp+0x60]
   140005bf5:	add    rsp,0x40
   140005bf9:	pop    rdi
   140005bfa:	ret    
   140005bfb:	int3   
   140005bfc:	test   rcx,rcx
   140005bff:	je     0x140005c57
   140005c01:	mov    QWORD PTR [rsp+0x8],rbx
   140005c06:	mov    QWORD PTR [rsp+0x10],rsi
   140005c0b:	push   rdi
   140005c0c:	sub    rsp,0x20
   140005c10:	xor    edi,edi
   140005c12:	mov    rbx,rcx
   140005c15:	cmp    QWORD PTR [rcx],rdi
   140005c18:	je     0x140005c40
   140005c1a:	cmp    DWORD PTR [rcx+0x8],edi
   140005c1d:	jle    0x140005c38
   140005c1f:	mov    esi,edi
   140005c21:	mov    rcx,QWORD PTR [rbx]
   140005c24:	mov    rcx,QWORD PTR [rsi+rcx*1]
   140005c28:	call   0x140004074
   140005c2d:	inc    edi
   140005c2f:	add    rsi,0x8
   140005c33:	cmp    edi,DWORD PTR [rbx+0x8]
   140005c36:	jl     0x140005c21
   140005c38:	mov    rcx,QWORD PTR [rbx]
   140005c3b:	call   0x140004074
   140005c40:	mov    rcx,rbx
   140005c43:	call   0x140004074
   140005c48:	mov    rbx,QWORD PTR [rsp+0x30]
   140005c4d:	mov    rsi,QWORD PTR [rsp+0x38]
   140005c52:	add    rsp,0x20
   140005c56:	pop    rdi
   140005c57:	ret    
   140005c58:	mov    rax,rsp
   140005c5b:	mov    QWORD PTR [rax+0x8],rbx
   140005c5f:	mov    QWORD PTR [rax+0x10],rbp
   140005c63:	mov    QWORD PTR [rax+0x18],rsi
   140005c67:	mov    QWORD PTR [rax+0x20],rdi
   140005c6b:	push   r12
   140005c6d:	push   r13
   140005c6f:	push   r14
   140005c71:	sub    rsp,0x20
   140005c75:	xor    edi,edi
   140005c77:	mov    r14b,dl
   140005c7a:	mov    rsi,rcx
   140005c7d:	lea    ebp,[rdi+0x1]
   140005c80:	cmp    DWORD PTR [rcx+0x8],edi
   140005c83:	jle    0x140005ca2
   140005c85:	xor    ebx,ebx
   140005c87:	mov    rcx,QWORD PTR [rsi]
   140005c8a:	mov    rcx,QWORD PTR [rcx+rbx*1]
   140005c8e:	call   0x140009fa0
   140005c93:	inc    edi
   140005c95:	add    rbx,0x8
   140005c99:	lea    ebp,[rbp+rax*1+0x1]
   140005c9d:	cmp    edi,DWORD PTR [rsi+0x8]
   140005ca0:	jl     0x140005c87
   140005ca2:	movsxd rcx,ebp
   140005ca5:	call   0x140003ff0
   140005caa:	xor    r12d,r12d
   140005cad:	xor    r13d,r13d
   140005cb0:	mov    rbp,rax
   140005cb3:	mov    rdi,rax
   140005cb6:	cmp    DWORD PTR [rsi+0x8],r12d
   140005cba:	jle    0x140005cf7
   140005cbc:	mov    rcx,QWORD PTR [rsi]
   140005cbf:	mov    rcx,QWORD PTR [rcx+r12*8]
   140005cc3:	call   0x140009fa0
   140005cc8:	test   r12,r12
   140005ccb:	jle    0x140005cd3
   140005ccd:	mov    BYTE PTR [rdi],r14b
   140005cd0:	inc    rdi
   140005cd3:	mov    rdx,QWORD PTR [rsi]
   140005cd6:	movsxd rbx,eax
   140005cd9:	mov    rcx,rdi
   140005cdc:	mov    rdx,QWORD PTR [rdx+r12*8]
   140005ce0:	mov    r8,rbx
   140005ce3:	call   0x14000a140
   140005ce8:	inc    r13d
   140005ceb:	add    rdi,rbx
   140005cee:	inc    r12
   140005cf1:	cmp    r13d,DWORD PTR [rsi+0x8]
   140005cf5:	jl     0x140005cbc
   140005cf7:	mov    rbx,QWORD PTR [rsp+0x40]
   140005cfc:	mov    rsi,QWORD PTR [rsp+0x50]
   140005d01:	mov    BYTE PTR [rdi],0x0
   140005d04:	mov    rdi,QWORD PTR [rsp+0x58]
   140005d09:	mov    rax,rbp
   140005d0c:	mov    rbp,QWORD PTR [rsp+0x48]
   140005d11:	add    rsp,0x20
   140005d15:	pop    r14
   140005d17:	pop    r13
   140005d19:	pop    r12
   140005d1b:	ret    
   140005d1c:	mov    rax,rsp
   140005d1f:	mov    QWORD PTR [rax+0x8],rbx
   140005d23:	mov    QWORD PTR [rax+0x10],rbp
   140005d27:	mov    QWORD PTR [rax+0x18],rsi
   140005d2b:	mov    QWORD PTR [rax+0x20],rdi
   140005d2f:	push   r12
   140005d31:	push   r13
   140005d33:	push   r14
   140005d35:	sub    rsp,0x20
   140005d39:	mov    r13b,dl
   140005d3c:	mov    rbp,rcx
   140005d3f:	call   0x140009fa0
   140005d44:	movsxd r12,eax
   140005d47:	mov    ebx,0x1
   140005d4c:	mov    rcx,rbp
   140005d4f:	add    r12,rbp
   140005d52:	cmp    rbp,r12
   140005d55:	jae    0x140005d69
   140005d57:	xor    eax,eax
   140005d59:	cmp    BYTE PTR [rcx],r13b
   140005d5c:	sete   al
   140005d5f:	inc    rcx
   140005d62:	add    ebx,eax
   140005d64:	cmp    rcx,r12
   140005d67:	jb     0x140005d57
   140005d69:	mov    ecx,0x10
   140005d6e:	call   0x140003ff0
   140005d73:	movsxd rcx,ebx
   140005d76:	shl    rcx,0x3
   140005d7a:	mov    DWORD PTR [rax+0xc],ebx
   140005d7d:	mov    rdi,rax
   140005d80:	call   0x140003ff0
   140005d85:	and    DWORD PTR [rdi+0x8],0x0
   140005d89:	mov    QWORD PTR [rdi],rax
   140005d8c:	mov    rsi,rbp
   140005d8f:	cmp    rbp,r12
   140005d92:	ja     0x140005d8c
   140005d94:	cmp    BYTE PTR [rsi],r13b
   140005d97:	je     0x140005d9e
   140005d99:	cmp    BYTE PTR [rsi],0x0
   140005d9c:	jne    0x140005e04
   140005d9e:	mov    ebx,esi
   140005da0:	sub    ebx,ebp
   140005da2:	lea    eax,[rbx+0x1]
   140005da5:	movsxd rcx,eax
   140005da8:	call   0x140003ff0
   140005dad:	movsxd rbx,ebx
   140005db0:	mov    rdx,rbp
   140005db3:	mov    rcx,rax
   140005db6:	mov    r8,rbx
   140005db9:	mov    r14,rax
   140005dbc:	call   0x14000a140
   140005dc1:	mov    BYTE PTR [rbx+r14*1],0x0
   140005dc6:	mov    edx,DWORD PTR [rdi+0x8]
   140005dc9:	mov    ecx,DWORD PTR [rdi+0xc]
   140005dcc:	inc    edx
   140005dce:	cmp    ecx,edx
   140005dd0:	jge    0x140005ded
   140005dd2:	add    ecx,ecx
   140005dd4:	mov    DWORD PTR [rdi+0xc],ecx
   140005dd7:	cmp    ecx,edx
   140005dd9:	jl     0x140005dd2
   140005ddb:	movsxd rdx,ecx
   140005dde:	mov    rcx,QWORD PTR [rdi]
   140005de1:	shl    rdx,0x3
   140005de5:	call   0x14000401c
   140005dea:	mov    QWORD PTR [rdi],rax
   140005ded:	movsxd rcx,DWORD PTR [rdi+0x8]
   140005df1:	mov    rax,QWORD PTR [rdi]
   140005df4:	mov    QWORD PTR [rax+rcx*8],r14
   140005df8:	inc    DWORD PTR [rdi+0x8]
   140005dfb:	cmp    BYTE PTR [rsi],0x0
   140005dfe:	je     0x140005e11
   140005e00:	lea    rbp,[rsi+0x1]
   140005e04:	inc    rsi
   140005e07:	cmp    rsi,r12
   140005e0a:	jbe    0x140005d94
   140005e0c:	jmp    0x140005d8c
   140005e11:	mov    rbx,QWORD PTR [rsp+0x40]
   140005e16:	mov    rbp,QWORD PTR [rsp+0x48]
   140005e1b:	mov    rsi,QWORD PTR [rsp+0x50]
   140005e20:	mov    rax,rdi
   140005e23:	mov    rdi,QWORD PTR [rsp+0x58]
   140005e28:	add    rsp,0x20
   140005e2c:	pop    r14
   140005e2e:	pop    r13
   140005e30:	pop    r12
   140005e32:	ret    
   140005e33:	int3   
   140005e34:	mov    QWORD PTR [rsp+0x8],rbx
   140005e39:	mov    QWORD PTR [rsp+0x10],rbp
   140005e3e:	mov    QWORD PTR [rsp+0x18],rsi
   140005e43:	push   rdi
   140005e44:	push   r12
   140005e46:	push   r13
   140005e48:	push   r14
   140005e4a:	push   r15
   140005e4c:	sub    rsp,0x20
   140005e50:	mov    r14,rcx
   140005e53:	mov    ebx,0x10
   140005e58:	mov    ecx,ebx
   140005e5a:	call   0x140003ff0
   140005e5f:	lea    ecx,[rbx+0x70]
   140005e62:	mov    DWORD PTR [rax+0xc],ebx
   140005e65:	mov    rsi,rax
   140005e68:	call   0x140003ff0
   140005e6d:	and    DWORD PTR [rsi+0x8],0x0
   140005e71:	mov    ecx,ebx
   140005e73:	mov    QWORD PTR [rsi],rax
   140005e76:	call   0x140003ff0
   140005e7b:	lea    rdx,[rip+0x1e98e]        # 0x140024810
   140005e82:	mov    rcx,r14
   140005e85:	mov    r12,rax
   140005e88:	call   QWORD PTR [rip+0x1422a]        # 0x14001a0b8
   140005e8e:	cmp    rax,0xffffffffffffffff
   140005e92:	je     0x140005fdf
   140005e98:	lea    r15,[rip+0x1e99d]        # 0x14002483c
   140005e9f:	mov    QWORD PTR [r12],rax
   140005ea3:	mov    QWORD PTR [r12+0x8],r15
   140005ea8:	mov    rbp,QWORD PTR [r12+0x8]
   140005ead:	test   rbp,rbp
   140005eb0:	je     0x140005eba
   140005eb2:	and    QWORD PTR [r12+0x8],0x0
   140005eb8:	jmp    0x140005ed3
   140005eba:	mov    rcx,QWORD PTR [r12]
   140005ebe:	lea    rdx,[rip+0x1e94b]        # 0x140024810
   140005ec5:	call   QWORD PTR [rip+0x141f5]        # 0x14001a0c0
   140005ecb:	neg    eax
   140005ecd:	sbb    rbp,rbp
   140005ed0:	and    rbp,r15
   140005ed3:	test   rbp,rbp
   140005ed6:	je     0x140005fbe
   140005edc:	mov    rcx,rbp
   140005edf:	call   0x140009fa0
   140005ee4:	cmp    eax,0x4
   140005ee7:	jl     0x140005ea8
   140005ee9:	movsxd rcx,eax
   140005eec:	cmp    BYTE PTR [rcx+rbp*1-0x4],0x2e
   140005ef1:	jne    0x140005ea8
   140005ef3:	lea    rbx,[rcx+rbp*1-0x3]
   140005ef8:	lea    rdx,[rip+0x15d45]        # 0x14001bc44
   140005eff:	mov    rcx,rbx
   140005f02:	call   0x14000a850
   140005f07:	test   eax,eax
   140005f09:	je     0x140005f1e
   140005f0b:	lea    rdx,[rip+0x15d2e]        # 0x14001bc40
   140005f12:	mov    rcx,rbx
   140005f15:	call   0x14000a850
   140005f1a:	test   eax,eax
   140005f1c:	jne    0x140005ea8
   140005f1e:	mov    edx,0x3b
   140005f23:	mov    rcx,rbp
   140005f26:	call   0x14000c04c
   140005f2b:	test   rax,rax
   140005f2e:	jne    0x140005ea8
   140005f34:	mov    rcx,r14
   140005f37:	call   0x140009fa0
   140005f3c:	mov    rcx,rbp
   140005f3f:	mov    rdi,rax
   140005f42:	call   0x140009fa0
   140005f47:	lea    ecx,[rax+rdi*1]
   140005f4a:	mov    rbx,rax
   140005f4d:	movsxd rcx,ecx
   140005f50:	call   0x140003ff0
   140005f55:	lea    ecx,[rdi-0x1]
   140005f58:	mov    rdx,r14
   140005f5b:	movsxd r8,ecx
   140005f5e:	mov    rcx,rax
   140005f61:	mov    r13,rax
   140005f64:	call   0x14000a140
   140005f69:	lea    r11d,[rbx+0x1]
   140005f6d:	movsxd rcx,edi
   140005f70:	lea    rcx,[rcx+r13*1-0x1]
   140005f75:	movsxd r8,r11d
   140005f78:	mov    rdx,rbp
   140005f7b:	call   0x14000a140
   140005f80:	mov    r11d,DWORD PTR [rsi+0x8]
   140005f84:	mov    eax,DWORD PTR [rsi+0xc]
   140005f87:	inc    r11d
   140005f8a:	cmp    eax,r11d
   140005f8d:	jge    0x140005fab
   140005f8f:	add    eax,eax
   140005f91:	mov    DWORD PTR [rsi+0xc],eax
   140005f94:	cmp    eax,r11d
   140005f97:	jl     0x140005f8f
   140005f99:	mov    rcx,QWORD PTR [rsi]
   140005f9c:	movsxd rdx,eax
   140005f9f:	shl    rdx,0x3
   140005fa3:	call   0x14000401c
   140005fa8:	mov    QWORD PTR [rsi],rax
   140005fab:	movsxd rcx,DWORD PTR [rsi+0x8]
   140005faf:	mov    rax,QWORD PTR [rsi]
   140005fb2:	mov    QWORD PTR [rax+rcx*8],r13
   140005fb6:	inc    DWORD PTR [rsi+0x8]
   140005fb9:	jmp    0x140005ea8
   140005fbe:	mov    rcx,QWORD PTR [r12]
   140005fc2:	call   QWORD PTR [rip+0x14100]        # 0x14001a0c8
   140005fc8:	mov    rcx,QWORD PTR [r12+0x8]
   140005fcd:	call   0x140004074
   140005fd2:	mov    rcx,r12
   140005fd5:	call   0x140004074
   140005fda:	mov    rax,rsi
   140005fdd:	jmp    0x140005fe1
   140005fdf:	xor    eax,eax
   140005fe1:	mov    rbx,QWORD PTR [rsp+0x50]
   140005fe6:	mov    rbp,QWORD PTR [rsp+0x58]
   140005feb:	mov    rsi,QWORD PTR [rsp+0x60]
   140005ff0:	add    rsp,0x20
   140005ff4:	pop    r15
   140005ff6:	pop    r14
   140005ff8:	pop    r13
   140005ffa:	pop    r12
   140005ffc:	pop    rdi
   140005ffd:	ret    
   140005ffe:	int3   
   140005fff:	int3   
   140006000:	mov    QWORD PTR [rsp+0x8],rbx
   140006005:	mov    QWORD PTR [rsp+0x10],rbp
   14000600a:	mov    QWORD PTR [rsp+0x18],rsi
   14000600f:	push   rdi
   140006010:	sub    rsp,0x20
   140006014:	xor    esi,esi
   140006016:	mov    rbx,rcx
   140006019:	cmp    DWORD PTR [rcx+0x8],esi
   14000601c:	jle    0x140006149
   140006022:	mov    rax,QWORD PTR [rbx]
   140006025:	movsxd rbp,esi
   140006028:	mov    rdi,QWORD PTR [rax+rbp*8]
   14000602c:	mov    rcx,rdi
   14000602f:	call   0x140009fa0
   140006034:	test   eax,eax
   140006036:	jle    0x14000613e
   14000603c:	movsxd rcx,eax
   14000603f:	cmp    BYTE PTR [rcx+rdi*1-0x1],0x2a
   140006044:	jne    0x14000613e
   14000604a:	cmp    eax,0x1
   14000604d:	je     0x14000605f
   14000604f:	mov    al,BYTE PTR [rcx+rdi*1-0x2]
   140006053:	cmp    al,0x5c
   140006055:	je     0x14000605f
   140006057:	cmp    al,0x2f
   140006059:	jne    0x14000613e
   14000605f:	xor    edx,edx
   140006061:	mov    rcx,rdi
   140006064:	call   0x14000c39c
   140006069:	test   eax,eax
   14000606b:	je     0x14000613e
   140006071:	mov    rcx,QWORD PTR [rbx]
   140006074:	mov    rcx,QWORD PTR [rcx+rbp*8]
   140006078:	call   0x140005e34
   14000607d:	mov    rdi,rax
   140006080:	test   rax,rax
   140006083:	je     0x140006136
   140006089:	cmp    DWORD PTR [rax+0x8],0x0
   14000608d:	jle    0x140006136
   140006093:	mov    rcx,QWORD PTR [rbx]
   140006096:	mov    rcx,QWORD PTR [rcx+rbp*8]
   14000609a:	call   0x140004074
   14000609f:	mov    r11d,DWORD PTR [rdi+0x8]
   1400060a3:	mov    eax,DWORD PTR [rbx+0xc]
   1400060a6:	add    r11d,DWORD PTR [rbx+0x8]
   1400060aa:	cmp    eax,r11d
   1400060ad:	jge    0x1400060cb
   1400060af:	add    eax,eax
   1400060b1:	mov    DWORD PTR [rbx+0xc],eax
   1400060b4:	cmp    eax,r11d
   1400060b7:	jl     0x1400060af
   1400060b9:	mov    rcx,QWORD PTR [rbx]
   1400060bc:	movsxd rdx,eax
   1400060bf:	shl    rdx,0x3
   1400060c3:	call   0x14000401c
   1400060c8:	mov    QWORD PTR [rbx],rax
   1400060cb:	mov    eax,DWORD PTR [rbx+0x8]
   1400060ce:	lea    ecx,[rsi+0x1]
   1400060d1:	dec    eax
   1400060d3:	movsxd r8,eax
   1400060d6:	cmp    eax,ecx
   1400060d8:	jl     0x1400060fb
   1400060da:	sub    eax,ecx
   1400060dc:	lea    r9d,[rax+0x1]
   1400060e0:	mov    rdx,QWORD PTR [rbx]
   1400060e3:	movsxd rcx,DWORD PTR [rdi+0x8]
   1400060e7:	mov    rax,QWORD PTR [rdx+r8*8]
   1400060eb:	add    rcx,r8
   1400060ee:	dec    r8
   1400060f1:	dec    r9
   1400060f4:	mov    QWORD PTR [rdx+rcx*8-0x8],rax
   1400060f9:	jne    0x1400060e0
   1400060fb:	xor    r9d,r9d
   1400060fe:	cmp    DWORD PTR [rdi+0x8],r9d
   140006102:	jle    0x140006126
   140006104:	xor    r8d,r8d
   140006107:	mov    rax,QWORD PTR [rdi]
   14000610a:	mov    rcx,QWORD PTR [rbx]
   14000610d:	lea    rdx,[r8+rbp*8]
   140006111:	mov    rax,QWORD PTR [r8+rax*1]
   140006115:	inc    r9d
   140006118:	add    r8,0x8
   14000611c:	mov    QWORD PTR [rdx+rcx*1],rax
   140006120:	cmp    r9d,DWORD PTR [rdi+0x8]
   140006124:	jl     0x140006107
   140006126:	mov    eax,DWORD PTR [rdi+0x8]
   140006129:	lea    esi,[rsi+rax*1-0x1]
   14000612d:	dec    eax
   14000612f:	add    DWORD PTR [rbx+0x8],eax
   140006132:	and    DWORD PTR [rdi+0x8],0x0
   140006136:	mov    rcx,rdi
   140006139:	call   0x140005bfc
   14000613e:	inc    esi
   140006140:	cmp    esi,DWORD PTR [rbx+0x8]
   140006143:	jl     0x140006022
   140006149:	mov    rbx,QWORD PTR [rsp+0x30]
   14000614e:	mov    rbp,QWORD PTR [rsp+0x38]
   140006153:	mov    rsi,QWORD PTR [rsp+0x40]
   140006158:	add    rsp,0x20
   14000615c:	pop    rdi
   14000615d:	ret    
   14000615e:	int3   
   14000615f:	int3   
   140006160:	mov    QWORD PTR [rsp+0x8],rbx
   140006165:	mov    QWORD PTR [rsp+0x10],rsi
   14000616a:	push   rdi
   14000616b:	sub    rsp,0x20
   14000616f:	mov    edx,0x2a
   140006174:	mov    rdi,rcx
   140006177:	call   0x14000c04c
   14000617c:	test   rax,rax
   14000617f:	jne    0x140006186
   140006181:	mov    rax,rdi
   140006184:	jmp    0x1400061d6
   140006186:	mov    dl,0x3b
   140006188:	mov    rcx,rdi
   14000618b:	call   0x140005d1c
   140006190:	mov    rcx,rax
   140006193:	mov    rbx,rax
   140006196:	call   0x140006000
   14000619b:	mov    dl,0x3b
   14000619d:	mov    rcx,rbx
   1400061a0:	call   0x140005c58
   1400061a5:	mov    rcx,rbx
   1400061a8:	mov    rsi,rax
   1400061ab:	call   0x140005bfc
   1400061b0:	lea    rcx,[rip+0x142c1]        # 0x14001a478
   1400061b7:	call   0x140009d94
   1400061bc:	test   rax,rax
   1400061bf:	je     0x1400061d3
   1400061c1:	lea    rcx,[rip+0x15a80]        # 0x14001bc48
   1400061c8:	mov    r8,rsi
   1400061cb:	mov    rdx,rdi
   1400061ce:	call   0x140009c2c
   1400061d3:	mov    rax,rsi
   1400061d6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400061db:	mov    rsi,QWORD PTR [rsp+0x38]
   1400061e0:	add    rsp,0x20
   1400061e4:	pop    rdi
   1400061e5:	ret    
   1400061e6:	int3   
   1400061e7:	int3   
   1400061e8:	mov    QWORD PTR [rsp+0x8],rbx
   1400061ed:	push   rdi
   1400061ee:	sub    rsp,0x20
   1400061f2:	mov    rax,QWORD PTR [rip+0x1e757]        # 0x140024950
   1400061f9:	mov    ebx,edx
   1400061fb:	mov    rdi,rcx
   1400061fe:	test   rax,rax
   140006201:	jne    0x14000621b
   140006203:	lea    rcx,[rip+0x15a76]        # 0x14001bc80
   14000620a:	call   0x1400053f4
   14000620f:	mov    QWORD PTR [rip+0x1e73a],rax        # 0x140024950
   140006216:	test   rax,rax
   140006219:	je     0x140006222
   14000621b:	mov    edx,ebx
   14000621d:	mov    rcx,rdi
   140006220:	call   rax
   140006222:	mov    rbx,QWORD PTR [rsp+0x30]
   140006227:	add    rsp,0x20
   14000622b:	pop    rdi
   14000622c:	ret    
   14000622d:	int3   
   14000622e:	int3   
   14000622f:	int3   
   140006230:	rex push rbx
   140006232:	sub    rsp,0x20
   140006236:	mov    rax,QWORD PTR [rip+0x1e71b]        # 0x140024958
   14000623d:	mov    rbx,rcx
   140006240:	test   rax,rax
   140006243:	jne    0x140006263
   140006245:	lea    rcx,[rip+0x15a4c]        # 0x14001bc98
   14000624c:	call   0x1400053f4
   140006251:	mov    QWORD PTR [rip+0x1e700],rax        # 0x140024958
   140006258:	test   rax,rax
   14000625b:	jne    0x140006263
   14000625d:	add    rsp,0x20
   140006261:	pop    rbx
   140006262:	ret    
   140006263:	mov    rcx,rbx
   140006266:	add    rsp,0x20
   14000626a:	pop    rbx
   14000626b:	rex.W jmp rax
   14000626e:	int3   
   14000626f:	int3   
   140006270:	sub    rsp,0x28
   140006274:	mov    rax,QWORD PTR [rip+0x1e6e5]        # 0x140024960
   14000627b:	test   rax,rax
   14000627e:	jne    0x140006298
   140006280:	lea    rcx,[rip+0x15a21]        # 0x14001bca8
   140006287:	call   0x1400053f4
   14000628c:	mov    QWORD PTR [rip+0x1e6cd],rax        # 0x140024960
   140006293:	test   rax,rax
   140006296:	je     0x14000629a
   140006298:	call   rax
   14000629a:	add    rsp,0x28
   14000629e:	ret    
   14000629f:	int3   
   1400062a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400062a5:	push   rdi
   1400062a6:	sub    rsp,0x20
   1400062aa:	mov    rax,QWORD PTR [rip+0x1e6bf]        # 0x140024970
   1400062b1:	mov    rbx,rdx
   1400062b4:	mov    rdi,rcx
   1400062b7:	test   rax,rax
   1400062ba:	jne    0x1400062d4
   1400062bc:	lea    rcx,[rip+0x159f5]        # 0x14001bcb8
   1400062c3:	call   0x1400053f4
   1400062c8:	mov    QWORD PTR [rip+0x1e6a1],rax        # 0x140024970
   1400062cf:	test   rax,rax
   1400062d2:	je     0x1400062dc
   1400062d4:	mov    rdx,rbx
   1400062d7:	mov    rcx,rdi
   1400062da:	call   rax
   1400062dc:	mov    rbx,QWORD PTR [rsp+0x30]
   1400062e1:	add    rsp,0x20
   1400062e5:	pop    rdi
   1400062e6:	ret    
   1400062e7:	int3   
   1400062e8:	mov    rax,rsp
   1400062eb:	mov    QWORD PTR [rax+0x8],rbx
   1400062ef:	mov    QWORD PTR [rax+0x10],rbp
   1400062f3:	mov    QWORD PTR [rax+0x18],rsi
   1400062f7:	mov    QWORD PTR [rax+0x20],rdi
   1400062fb:	push   r12
   1400062fd:	sub    rsp,0x80
   140006304:	cmp    QWORD PTR [rdx+0x8],0xffffffffffffffff
   140006309:	mov    rbp,r8
   14000630c:	mov    rdi,rdx
   14000630f:	mov    esi,ecx
   140006311:	je     0x14000635d
   140006313:	cmp    QWORD PTR [rdx],0xffffffffffffffff
   140006317:	je     0x14000635d
   140006319:	mov    edx,DWORD PTR [rdx+0x10]
   14000631c:	xor    r8d,r8d
   14000631f:	call   0x140017664
   140006324:	test   eax,eax
   140006326:	js     0x14000635d
   140006328:	mov    rcx,QWORD PTR [rdi+0x8]
   14000632c:	inc    rcx
   14000632f:	call   0x14000b2d4
   140006334:	mov    rbx,rax
   140006337:	test   rax,rax
   14000633a:	je     0x14000635d
   14000633c:	mov    r12,QWORD PTR [rdi+0x8]
   140006340:	mov    rdx,rax
   140006343:	mov    ecx,esi
   140006345:	mov    r8d,r12d
   140006348:	call   0x140016994
   14000634d:	movsxd rcx,eax
   140006350:	cmp    rcx,r12
   140006353:	je     0x14000637d
   140006355:	mov    rcx,rbx
   140006358:	call   0x14000b460
   14000635d:	xor    eax,eax
   14000635f:	lea    r11,[rsp+0x80]
   140006367:	mov    rbx,QWORD PTR [r11+0x10]
   14000636b:	mov    rbp,QWORD PTR [r11+0x18]
   14000636f:	mov    rsi,QWORD PTR [r11+0x20]
   140006373:	mov    rdi,QWORD PTR [r11+0x28]
   140006377:	mov    rsp,r11
   14000637a:	pop    r12
   14000637c:	ret    
   14000637d:	cmp    DWORD PTR [rdi+0x14],0x0
   140006381:	jne    0x140006398
   140006383:	mov    BYTE PTR [r12+rbx*1],0x0
   140006388:	test   rbp,rbp
   14000638b:	je     0x140006393
   14000638d:	mov    eax,DWORD PTR [rdi+0x8]
   140006390:	mov    DWORD PTR [rbp+0x0],eax
   140006393:	mov    rax,rbx
   140006396:	jmp    0x14000635f
   140006398:	cmp    DWORD PTR [rdi+0x14],0x8
   14000639c:	jne    0x14000635d
   14000639e:	mov    eax,DWORD PTR [rdi+0x8]
   1400063a1:	and    QWORD PTR [rsp+0x50],0x0
   1400063a7:	and    QWORD PTR [rsp+0x58],0x0
   1400063ad:	and    QWORD PTR [rsp+0x60],0x0
   1400063b3:	mov    r9d,0x58
   1400063b9:	lea    r8,[rip+0x15928]        # 0x14001bce8
   1400063c0:	lea    rcx,[rsp+0x20]
   1400063c5:	lea    edx,[r9-0x67]
   1400063c9:	mov    QWORD PTR [rsp+0x20],rbx
   1400063ce:	mov    DWORD PTR [rsp+0x28],eax
   1400063d2:	call   0x1400071e8
   1400063d7:	test   eax,eax
   1400063d9:	js     0x140006355
   1400063df:	mov    rcx,QWORD PTR [rdi]
   1400063e2:	inc    rcx
   1400063e5:	call   0x14000b2d4
   1400063ea:	mov    rsi,rax
   1400063ed:	test   rax,rax
   1400063f0:	je     0x140006355
   1400063f6:	mov    QWORD PTR [rsp+0x30],rax
   1400063fb:	mov    eax,DWORD PTR [rdi]
   1400063fd:	lea    rcx,[rsp+0x20]
   140006402:	mov    edx,0x1
   140006407:	mov    DWORD PTR [rsp+0x38],eax
   14000640b:	call   0x1400073d0
   140006410:	mov    rcx,rbx
   140006413:	test   eax,eax
   140006415:	jns    0x140006424
   140006417:	call   0x14000b460
   14000641c:	mov    rcx,rsi
   14000641f:	jmp    0x140006358
   140006424:	mov    rax,QWORD PTR [rdi]
   140006427:	mov    BYTE PTR [rsi+rax*1],0x0
   14000642b:	call   0x14000b460
   140006430:	lea    rcx,[rsp+0x20]
   140006435:	call   0x140008950
   14000643a:	test   eax,eax
   14000643c:	js     0x14000641c
   14000643e:	test   rbp,rbp
   140006441:	je     0x140006448
   140006443:	mov    eax,DWORD PTR [rdi]
   140006445:	mov    DWORD PTR [rbp+0x0],eax
   140006448:	mov    rax,rsi
   14000644b:	jmp    0x14000635f
   140006450:	mov    rax,rsp
   140006453:	mov    QWORD PTR [rax+0x8],rbx
   140006457:	mov    QWORD PTR [rax+0x10],rbp
   14000645b:	mov    QWORD PTR [rax+0x18],rsi
   14000645f:	mov    QWORD PTR [rax+0x20],rdi
   140006463:	push   r12
   140006465:	sub    rsp,0x20
   140006469:	mov    rbp,rdx
   14000646c:	mov    edx,0xffffffea
   140006471:	mov    ebx,ecx
   140006473:	lea    r8d,[rdx+0x18]
   140006477:	call   0x140017664
   14000647c:	mov    edi,eax
   14000647e:	test   eax,eax
   140006480:	js     0x1400065bb
   140006486:	mov    r8d,0x16
   14000648c:	mov    rdx,rbp
   14000648f:	mov    ecx,ebx
   140006491:	call   0x140016994
   140006496:	test   eax,eax
   140006498:	js     0x1400065bb
   14000649e:	movzx  eax,BYTE PTR [rbp+0x2]
   1400064a2:	movzx  ecx,BYTE PTR [rbp+0x3]
   1400064a6:	shl    ecx,0x8
   1400064a9:	or     ecx,eax
   1400064ab:	movzx  eax,BYTE PTR [rbp+0x1]
   1400064af:	shl    ecx,0x8
   1400064b2:	or     ecx,eax
   1400064b4:	movzx  eax,BYTE PTR [rbp+0x0]
   1400064b8:	shl    ecx,0x8
   1400064bb:	or     ecx,eax
   1400064bd:	cmp    ecx,0x6054b50
   1400064c3:	jne    0x1400064cc
   1400064c5:	mov    eax,edi
   1400064c7:	jmp    0x1400065be
   1400064cc:	xor    edx,edx
   1400064ce:	mov    ecx,ebx
   1400064d0:	lea    r8d,[rdx+0x2]
   1400064d4:	call   0x140017664
   1400064d9:	mov    r12d,eax
   1400064dc:	test   eax,eax
   1400064de:	js     0x1400065bb
   1400064e4:	mov    edi,0x10015
   1400064e9:	mov    r8d,0x2
   1400064ef:	mov    ecx,ebx
   1400064f1:	cmp    eax,edi
   1400064f3:	mov    esi,edi
   1400064f5:	cmovl  esi,eax
   1400064f8:	mov    edx,esi
   1400064fa:	neg    edx
   1400064fc:	call   0x140017664
   140006501:	test   eax,eax
   140006503:	js     0x1400065bb
   140006509:	mov    ecx,edi
   14000650b:	call   0x14000b2d4
   140006510:	mov    rdi,rax
   140006513:	test   rax,rax
   140006516:	je     0x1400065bb
   14000651c:	mov    r8d,esi
   14000651f:	mov    rdx,rax
   140006522:	mov    ecx,ebx
   140006524:	call   0x140016994
   140006529:	test   eax,eax
   14000652b:	js     0x1400065b3
   140006531:	movsxd rsi,eax
   140006534:	add    eax,0xffffffea
   140006537:	movsxd rbx,eax
   14000653a:	add    rsi,rdi
   14000653d:	add    rbx,rdi
   140006540:	cmp    rbx,rdi
   140006543:	jb     0x1400065b3
   140006545:	cmp    BYTE PTR [rbx],0x50
   140006548:	jne    0x140006589
   14000654a:	movzx  eax,BYTE PTR [rbx+0x2]
   14000654e:	movzx  ecx,BYTE PTR [rbx+0x3]
   140006552:	shl    ecx,0x8
   140006555:	or     ecx,eax
   140006557:	movzx  eax,BYTE PTR [rbx+0x1]
   14000655b:	shl    ecx,0x8
   14000655e:	or     ecx,eax
   140006560:	shl    ecx,0x8
   140006563:	or     ecx,0x50
   140006566:	cmp    ecx,0x6054b50
   14000656c:	jne    0x140006589
   14000656e:	movzx  eax,BYTE PTR [rbx+0x15]
   140006572:	shl    eax,0x8
   140006575:	movsxd rcx,eax
   140006578:	movzx  eax,BYTE PTR [rbx+0x14]
   14000657c:	or     rcx,rax
   14000657f:	lea    rax,[rcx+rbx*1+0x16]
   140006584:	cmp    rax,rsi
   140006587:	je     0x14000658e
   140006589:	dec    rbx
   14000658c:	jmp    0x140006540
   14000658e:	mov    r8d,0x16
   140006594:	mov    rdx,rbx
   140006597:	mov    rcx,rbp
   14000659a:	call   0x14000a140
   14000659f:	mov    rcx,rdi
   1400065a2:	call   0x14000b460
   1400065a7:	mov    r11d,r12d
   1400065aa:	sub    r11,rsi
   1400065ad:	lea    rax,[rbx+r11*1]
   1400065b1:	jmp    0x1400065be
   1400065b3:	mov    rcx,rdi
   1400065b6:	call   0x14000b460
   1400065bb:	or     eax,0xffffffff
   1400065be:	mov    rbx,QWORD PTR [rsp+0x30]
   1400065c3:	mov    rbp,QWORD PTR [rsp+0x38]
   1400065c8:	mov    rsi,QWORD PTR [rsp+0x40]
   1400065cd:	mov    rdi,QWORD PTR [rsp+0x48]
   1400065d2:	add    rsp,0x20
   1400065d6:	pop    r12
   1400065d8:	ret    
   1400065d9:	int3   
   1400065da:	int3   
   1400065db:	int3   
   1400065dc:	mov    QWORD PTR [rsp+0x20],rbx
   1400065e1:	push   rbp
   1400065e2:	push   rsi
   1400065e3:	push   rdi
   1400065e4:	push   r12
   1400065e6:	push   r13
   1400065e8:	push   r14
   1400065ea:	push   r15
   1400065ec:	sub    rsp,0x50
   1400065f0:	mov    rax,QWORD PTR [rip+0x1cac9]        # 0x1400230c0
   1400065f7:	xor    rax,rsp
   1400065fa:	mov    QWORD PTR [rsp+0x48],rax
   1400065ff:	mov    r13d,ecx
   140006602:	mov    ecx,0x30032
   140006607:	mov    r15,r8
   14000660a:	mov    QWORD PTR [rsp+0x20],rdx
   14000660f:	call   0x14000b2d4
   140006614:	mov    rdi,rax
   140006617:	test   rax,rax
   14000661a:	jne    0x140006624
   14000661c:	or     eax,0xffffffff
   14000661f:	jmp    0x140006930
   140006624:	mov    rdx,rax
   140006627:	mov    ecx,r13d
   14000662a:	mov    rsi,rax
   14000662d:	call   0x140006450
   140006632:	or     ebp,0xffffffff
   140006635:	mov    r14d,eax
   140006638:	cmp    eax,ebp
   14000663a:	je     0x140006926
   140006640:	movzx  eax,BYTE PTR [rdi+0x12]
   140006644:	movzx  edx,BYTE PTR [rdi+0x13]
   140006648:	movzx  ecx,BYTE PTR [rdi+0xf]
   14000664c:	shl    ecx,0x8
   14000664f:	shl    edx,0x8
   140006652:	xor    r8d,r8d
   140006655:	or     edx,eax
   140006657:	movzx  eax,BYTE PTR [rdi+0x11]
   14000665b:	shl    edx,0x8
   14000665e:	or     edx,eax
   140006660:	movzx  eax,BYTE PTR [rdi+0x10]
   140006664:	shl    edx,0x8
   140006667:	or     edx,eax
   140006669:	movzx  eax,BYTE PTR [rdi+0xe]
   14000666d:	or     ecx,eax
   14000666f:	movzx  eax,BYTE PTR [rdi+0xd]
   140006673:	shl    ecx,0x8
   140006676:	or     ecx,eax
   140006678:	movzx  eax,BYTE PTR [rdi+0xc]
   14000667c:	shl    ecx,0x8
   14000667f:	or     ecx,eax
   140006681:	add    ecx,edx
   140006683:	sub    r14d,ecx
   140006686:	mov    ecx,r13d
   140006689:	add    edx,r14d
   14000668c:	call   0x140017664
   140006691:	test   eax,eax
   140006693:	js     0x140006926
   140006699:	mov    r8d,0x400
   14000669f:	mov    rdx,rdi
   1400066a2:	mov    ecx,r13d
   1400066a5:	call   0x140016994
   1400066aa:	mov    r12d,eax
   1400066ad:	test   eax,eax
   1400066af:	js     0x140006926
   1400066b5:	movzx  eax,BYTE PTR [rdi+0x2]
   1400066b9:	movzx  ecx,BYTE PTR [rdi+0x3]
   1400066bd:	shl    ecx,0x8
   1400066c0:	or     ecx,eax
   1400066c2:	movzx  eax,BYTE PTR [rdi+0x1]
   1400066c6:	shl    ecx,0x8
   1400066c9:	or     ecx,eax
   1400066cb:	movzx  eax,BYTE PTR [rdi]
   1400066ce:	shl    ecx,0x8
   1400066d1:	or     ecx,eax
   1400066d3:	cmp    ecx,0x2014b50
   1400066d9:	jne    0x140006926
   1400066df:	cmp    r12d,0x2e
   1400066e3:	jge    0x140006716
   1400066e5:	movsxd rbx,r12d
   1400066e8:	mov    rdx,rsi
   1400066eb:	mov    rcx,rdi
   1400066ee:	mov    r8,rbx
   1400066f1:	call   0x14000a140
   1400066f6:	lea    rdx,[rbx+rdi*1]
   1400066fa:	mov    r8d,0x400
   140006700:	mov    ecx,r13d
   140006703:	mov    rsi,rax
   140006706:	call   0x140016994
   14000670b:	test   eax,eax
   14000670d:	jle    0x140006926
   140006713:	add    r12d,eax
   140006716:	movzx  eax,BYTE PTR [rsi+0x20]
   14000671a:	movzx  edx,BYTE PTR [rsi+0x21]
   14000671e:	movzx  ecx,BYTE PTR [rsi+0x1f]
   140006722:	shl    ecx,0x8
   140006725:	shl    edx,0x8
   140006728:	or     edx,eax
   14000672a:	movzx  eax,BYTE PTR [rsi+0x1e]
   14000672e:	or     ecx,eax
   140006730:	movzx  eax,BYTE PTR [rsi+0x1c]
   140006734:	add    edx,ecx
   140006736:	movzx  ecx,BYTE PTR [rsi+0x1d]
   14000673a:	shl    ecx,0x8
   14000673d:	or     ecx,eax
   14000673f:	lea    ebx,[rdx+rcx*1+0x2e]
   140006743:	lea    eax,[rbx+0x4]
   140006746:	cmp    r12d,eax
   140006749:	jge    0x140006790
   14000674b:	cmp    rsi,rdi
   14000674e:	je     0x140006761
   140006750:	movsxd r8,r12d
   140006753:	mov    rdx,rsi
   140006756:	mov    rcx,rdi
   140006759:	call   0x14000a140
   14000675e:	mov    rsi,rax
   140006761:	mov    eax,0x400
   140006766:	mov    r8d,ebx
   140006769:	movsxd rdx,r12d
   14000676c:	sub    r8d,r12d
   14000676f:	mov    ecx,r13d
   140006772:	add    r8d,0x4
   140006776:	cmp    r8d,eax
   140006779:	cmovl  r8d,eax
   14000677d:	add    rdx,rdi
   140006780:	call   0x140016994
   140006785:	test   eax,eax
   140006787:	jle    0x140006926
   14000678d:	add    r12d,eax
   140006790:	mov    rcx,r15
   140006793:	call   0x140009fa0
   140006798:	movzx  ecx,BYTE PTR [rsi+0x1d]
   14000679c:	shl    ecx,0x8
   14000679f:	movsxd rdx,ecx
   1400067a2:	movzx  ecx,BYTE PTR [rsi+0x1c]
   1400067a6:	or     rdx,rcx
   1400067a9:	cmp    rdx,rax
   1400067ac:	jne    0x1400067c9
   1400067ae:	mov    rcx,r15
   1400067b1:	call   0x140009fa0
   1400067b6:	lea    rcx,[rsi+0x2e]
   1400067ba:	mov    rdx,r15
   1400067bd:	mov    r8,rax
   1400067c0:	call   0x14000c590
   1400067c5:	test   eax,eax
   1400067c7:	je     0x1400067f0
   1400067c9:	movsxd rax,ebx
   1400067cc:	sub    r12d,ebx
   1400067cf:	add    rsi,rax
   1400067d2:	movzx  eax,BYTE PTR [rsi+0x2]
   1400067d6:	movzx  ecx,BYTE PTR [rsi+0x3]
   1400067da:	shl    ecx,0x8
   1400067dd:	or     ecx,eax
   1400067df:	movzx  eax,BYTE PTR [rsi+0x1]
   1400067e3:	shl    ecx,0x8
   1400067e6:	or     ecx,eax
   1400067e8:	movzx  eax,BYTE PTR [rsi]
   1400067eb:	jmp    0x1400066ce
   1400067f0:	movzx  eax,BYTE PTR [rsi+0x2c]
   1400067f4:	movzx  edx,BYTE PTR [rsi+0x2d]
   1400067f8:	xor    r8d,r8d
   1400067fb:	shl    edx,0x8
   1400067fe:	mov    ecx,r13d
   140006801:	or     edx,eax
   140006803:	movzx  eax,BYTE PTR [rsi+0x2b]
   140006807:	shl    edx,0x8
   14000680a:	or     edx,eax
   14000680c:	movzx  eax,BYTE PTR [rsi+0x2a]
   140006810:	shl    edx,0x8
   140006813:	or     edx,eax
   140006815:	add    edx,r14d
   140006818:	call   0x140017664
   14000681d:	test   eax,eax
   14000681f:	js     0x140006926
   140006825:	lea    rdx,[rsp+0x28]
   14000682a:	mov    r8d,0x1e
   140006830:	mov    ecx,r13d
   140006833:	call   0x140016994
   140006838:	test   eax,eax
   14000683a:	js     0x140006926
   140006840:	movzx  eax,BYTE PTR [rsp+0x2a]
   140006845:	movzx  ecx,BYTE PTR [rsp+0x2b]
   14000684a:	shl    ecx,0x8
   14000684d:	or     ecx,eax
   14000684f:	movzx  eax,BYTE PTR [rsp+0x29]
   140006854:	shl    ecx,0x8
   140006857:	or     ecx,eax
   140006859:	movzx  eax,BYTE PTR [rsp+0x28]
   14000685e:	shl    ecx,0x8
   140006861:	or     ecx,eax
   140006863:	cmp    ecx,0x4034b50
   140006869:	jne    0x140006926
   14000686f:	movzx  eax,BYTE PTR [rsi+0x1a]
   140006873:	movzx  ecx,BYTE PTR [rsi+0x1b]
   140006877:	mov    r9,QWORD PTR [rsp+0x20]
   14000687c:	movzx  edx,BYTE PTR [rsp+0x45]
   140006881:	shl    ecx,0x8
   140006884:	or     ecx,eax
   140006886:	movzx  eax,BYTE PTR [rsi+0x19]
   14000688a:	shl    edx,0x8
   14000688d:	shl    ecx,0x8
   140006890:	or     ecx,eax
   140006892:	movzx  eax,BYTE PTR [rsi+0x18]
   140006896:	shl    ecx,0x8
   140006899:	movsxd rcx,ecx
   14000689c:	or     rcx,rax
   14000689f:	mov    QWORD PTR [r9],rcx
   1400068a2:	movzx  eax,BYTE PTR [rsi+0x16]
   1400068a6:	movzx  ecx,BYTE PTR [rsi+0x17]
   1400068aa:	shl    ecx,0x8
   1400068ad:	or     ecx,eax
   1400068af:	movzx  eax,BYTE PTR [rsi+0x15]
   1400068b3:	shl    ecx,0x8
   1400068b6:	or     ecx,eax
   1400068b8:	movzx  eax,BYTE PTR [rsi+0x14]
   1400068bc:	shl    ecx,0x8
   1400068bf:	movsxd rcx,ecx
   1400068c2:	or     rcx,rax
   1400068c5:	mov    QWORD PTR [r9+0x8],rcx
   1400068c9:	movzx  eax,BYTE PTR [rsi+0x2c]
   1400068cd:	movzx  r8d,BYTE PTR [rsi+0x2d]
   1400068d2:	movzx  ecx,BYTE PTR [rsp+0x43]
   1400068d7:	shl    r8d,0x8
   1400068db:	or     r8d,eax
   1400068de:	movzx  eax,BYTE PTR [rsi+0x2b]
   1400068e2:	shl    ecx,0x8
   1400068e5:	shl    r8d,0x8
   1400068e9:	or     r8d,eax
   1400068ec:	movzx  eax,BYTE PTR [rsi+0x2a]
   1400068f0:	shl    r8d,0x8
   1400068f4:	or     r8d,eax
   1400068f7:	movzx  eax,BYTE PTR [rsp+0x44]
   1400068fc:	or     edx,eax
   1400068fe:	movzx  eax,BYTE PTR [rsp+0x42]
   140006903:	or     ecx,eax
   140006905:	add    edx,r14d
   140006908:	add    edx,r8d
   14000690b:	lea    eax,[rcx+rdx*1+0x1e]
   14000690f:	mov    DWORD PTR [r9+0x10],eax
   140006913:	movzx  ecx,BYTE PTR [rsi+0xb]
   140006917:	movzx  eax,BYTE PTR [rsi+0xa]
   14000691b:	shl    ecx,0x8
   14000691e:	or     ecx,eax
   140006920:	xor    ebp,ebp
   140006922:	mov    DWORD PTR [r9+0x14],ecx
   140006926:	mov    rcx,rdi
   140006929:	call   0x14000b460
   14000692e:	mov    eax,ebp
   140006930:	mov    rcx,QWORD PTR [rsp+0x48]
   140006935:	xor    rcx,rsp
   140006938:	call   0x14000a820
   14000693d:	mov    rbx,QWORD PTR [rsp+0xa8]
   140006945:	add    rsp,0x50
   140006949:	pop    r15
   14000694b:	pop    r14
   14000694d:	pop    r13
   14000694f:	pop    r12
   140006951:	pop    rdi
   140006952:	pop    rsi
   140006953:	pop    rbp
   140006954:	ret    
   140006955:	int3   
   140006956:	int3   
   140006957:	int3   
   140006958:	mov    QWORD PTR [rsp+0x8],rbx
   14000695d:	mov    QWORD PTR [rsp+0x10],rbp
   140006962:	mov    QWORD PTR [rsp+0x18],rsi
   140006967:	push   rdi
   140006968:	sub    rsp,0x20
   14000696c:	mov    rdi,rcx
   14000696f:	mov    rcx,QWORD PTR [rcx]
   140006972:	mov    rsi,r8
   140006975:	mov    al,BYTE PTR [rcx]
   140006977:	mov    rbp,rdx
   14000697a:	test   al,al
   14000697c:	je     0x140006a3f
   140006982:	cmp    al,0xa
   140006984:	je     0x140006a3f
   14000698a:	cmp    al,0xd
   14000698c:	je     0x140006a3f
   140006992:	lea    rdx,[rip+0x15357]        # 0x14001bcf0
   140006999:	call   0x14000c658
   14000699e:	mov    rbx,rax
   1400069a1:	test   rax,rax
   1400069a4:	jne    0x1400069ea
   1400069a6:	mov    rcx,QWORD PTR [rdi]
   1400069a9:	xor    edx,edx
   1400069ab:	call   0x14000c04c
   1400069b0:	mov    rbx,rax
   1400069b3:	mov    rcx,QWORD PTR [rdi]
   1400069b6:	mov    edx,0x3a
   1400069bb:	call   0x14000c04c
   1400069c0:	test   rax,rax
   1400069c3:	je     0x140006a3a
   1400069c5:	mov    BYTE PTR [rax],0x0
   1400069c8:	cmp    BYTE PTR [rax+0x1],0x20
   1400069cc:	jne    0x140006a3a
   1400069ce:	mov    BYTE PTR [rax+0x1],0x0
   1400069d2:	mov    rcx,QWORD PTR [rdi]
   1400069d5:	mov    QWORD PTR [rbp+0x0],rcx
   1400069d9:	lea    rcx,[rax+0x2]
   1400069dd:	mov    eax,0x1
   1400069e2:	mov    QWORD PTR [rsi],rcx
   1400069e5:	mov    QWORD PTR [rdi],rbx
   1400069e8:	jmp    0x140006a41
   1400069ea:	cmp    BYTE PTR [rax],0xd
   1400069ed:	mov    rcx,rax
   1400069f0:	jne    0x140006a2a
   1400069f2:	inc    rax
   1400069f5:	jmp    0x140006a1f
   1400069f7:	mov    al,BYTE PTR [rbx]
   1400069f9:	cmp    al,0xd
   1400069fb:	je     0x140006a0e
   1400069fd:	test   al,al
   1400069ff:	je     0x140006a3a
   140006a01:	mov    BYTE PTR [rcx],al
   140006a03:	inc    rcx
   140006a06:	inc    rbx
   140006a09:	cmp    BYTE PTR [rbx],0xa
   140006a0c:	jne    0x1400069f7
   140006a0e:	cmp    BYTE PTR [rbx],0x0
   140006a11:	je     0x140006a3a
   140006a13:	mov    BYTE PTR [rcx],0x0
   140006a16:	cmp    BYTE PTR [rbx],0xd
   140006a19:	jne    0x140006a2a
   140006a1b:	lea    rax,[rbx+0x1]
   140006a1f:	cmp    BYTE PTR [rax],0xa
   140006a22:	jne    0x140006a2a
   140006a24:	mov    BYTE PTR [rbx],0x0
   140006a27:	mov    rbx,rax
   140006a2a:	mov    BYTE PTR [rbx],0x0
   140006a2d:	inc    rbx
   140006a30:	cmp    BYTE PTR [rbx],0x20
   140006a33:	je     0x140006a06
   140006a35:	jmp    0x1400069b3
   140006a3a:	or     eax,0xffffffff
   140006a3d:	jmp    0x140006a41
   140006a3f:	xor    eax,eax
   140006a41:	mov    rbx,QWORD PTR [rsp+0x30]
   140006a46:	mov    rbp,QWORD PTR [rsp+0x38]
   140006a4b:	mov    rsi,QWORD PTR [rsp+0x40]
   140006a50:	add    rsp,0x20
   140006a54:	pop    rdi
   140006a55:	ret    
   140006a56:	int3   
   140006a57:	int3   
   140006a58:	mov    QWORD PTR [rsp+0x8],rbx
   140006a5d:	push   rbp
   140006a5e:	push   rsi
   140006a5f:	push   rdi
   140006a60:	mov    rbp,rsp
   140006a63:	sub    rsp,0x40
   140006a67:	mov    rbx,rdx
   140006a6a:	mov    edx,0x8000
   140006a6f:	call   0x140012f5c
   140006a74:	mov    edi,eax
   140006a76:	or     eax,0xffffffff
   140006a79:	cmp    edi,eax
   140006a7b:	je     0x140006bb2
   140006a81:	mov    r8,QWORD PTR [rip+0x1c618]        # 0x1400230a0
   140006a88:	and    QWORD PTR [rbx],0x0
   140006a8c:	and    QWORD PTR [rbx+0x8],0x0
   140006a91:	and    QWORD PTR [rbx+0x10],0x0
   140006a96:	and    QWORD PTR [rbx+0x20],0x0
   140006a9b:	lea    rdx,[rbp-0x18]
   140006a9f:	mov    ecx,edi
   140006aa1:	mov    BYTE PTR [rbx+0x18],0x0
   140006aa5:	call   0x1400065dc
   140006aaa:	mov    ecx,edi
   140006aac:	test   eax,eax
   140006aae:	je     0x140006abf
   140006ab0:	call   0x140010e20
   140006ab5:	mov    eax,0xfffffffe
   140006aba:	jmp    0x140006bb2
   140006abf:	lea    rdx,[rbp-0x18]
   140006ac3:	xor    r8d,r8d
   140006ac6:	call   0x1400062e8
   140006acb:	mov    QWORD PTR [rip+0x1dea6],rax        # 0x140024978
   140006ad2:	test   rax,rax
   140006ad5:	jne    0x140006adb
   140006ad7:	mov    ecx,edi
   140006ad9:	jmp    0x140006ab0
   140006adb:	mov    QWORD PTR [rbp-0x20],rax
   140006adf:	jmp    0x140006b89
   140006ae4:	mov    rsi,QWORD PTR [rbp+0x38]
   140006ae8:	lea    rdx,[rip+0x15259]        # 0x14001bd48
   140006aef:	mov    rcx,rsi
   140006af2:	call   0x1400196a0
   140006af7:	test   eax,eax
   140006af9:	jne    0x140006b07
   140006afb:	mov    rax,QWORD PTR [rbp+0x30]
   140006aff:	mov    QWORD PTR [rbx],rax
   140006b02:	jmp    0x140006b89
   140006b07:	lea    rdx,[rip+0x1522a]        # 0x14001bd38
   140006b0e:	mov    rcx,rsi
   140006b11:	call   0x1400196a0
   140006b16:	test   eax,eax
   140006b18:	jne    0x140006b24
   140006b1a:	mov    rax,QWORD PTR [rbp+0x30]
   140006b1e:	mov    QWORD PTR [rbx+0x8],rax
   140006b22:	jmp    0x140006b89
   140006b24:	lea    rdx,[rip+0x151fd]        # 0x14001bd28
   140006b2b:	mov    rcx,rsi
   140006b2e:	call   0x1400196a0
   140006b33:	test   eax,eax
   140006b35:	jne    0x140006b41
   140006b37:	mov    rax,QWORD PTR [rbp+0x30]
   140006b3b:	mov    QWORD PTR [rbx+0x10],rax
   140006b3f:	jmp    0x140006b89
   140006b41:	lea    rdx,[rip+0x151c8]        # 0x14001bd10
   140006b48:	mov    rcx,rsi
   140006b4b:	call   0x1400196a0
   140006b50:	test   eax,eax
   140006b52:	jne    0x140006b6e
   140006b54:	mov    rcx,QWORD PTR [rbp+0x30]
   140006b58:	lea    rdx,[rip+0x1425d]        # 0x14001adbc
   140006b5f:	call   0x1400196a0
   140006b64:	test   eax,eax
   140006b66:	jne    0x140006b89
   140006b68:	mov    BYTE PTR [rbx+0x18],0x1
   140006b6c:	jmp    0x140006b89
   140006b6e:	lea    rdx,[rip+0x15183]        # 0x14001bcf8
   140006b75:	mov    rcx,rsi
   140006b78:	call   0x1400196a0
   140006b7d:	test   eax,eax
   140006b7f:	jne    0x140006b89
   140006b81:	mov    rax,QWORD PTR [rbp+0x30]
   140006b85:	mov    QWORD PTR [rbx+0x20],rax
   140006b89:	lea    r8,[rbp+0x30]
   140006b8d:	lea    rdx,[rbp+0x38]
   140006b91:	lea    rcx,[rbp-0x20]
   140006b95:	call   0x140006958
   140006b9a:	mov    esi,eax
   140006b9c:	test   eax,eax
   140006b9e:	jg     0x140006ae4
   140006ba4:	mov    ecx,edi
   140006ba6:	call   0x140010e20
   140006bab:	neg    esi
   140006bad:	sbb    eax,eax
   140006baf:	and    eax,0xfffffffe
   140006bb2:	mov    rbx,QWORD PTR [rsp+0x60]
   140006bb7:	add    rsp,0x40
   140006bbb:	pop    rdi
   140006bbc:	pop    rsi
   140006bbd:	pop    rbp
   140006bbe:	ret    
   140006bbf:	int3   
   140006bc0:	mov    QWORD PTR [rsp+0x8],rbx
   140006bc5:	mov    QWORD PTR [rsp+0x10],rbp
   140006bca:	mov    QWORD PTR [rsp+0x18],rsi
   140006bcf:	push   rdi
   140006bd0:	sub    rsp,0x40
   140006bd4:	mov    rbp,rdx
   140006bd7:	mov    edx,0x8000
   140006bdc:	mov    rsi,r8
   140006bdf:	xor    edi,edi
   140006be1:	call   0x140012f5c
   140006be6:	mov    ebx,eax
   140006be8:	cmp    eax,0xffffffff
   140006beb:	jne    0x140006bf1
   140006bed:	xor    eax,eax
   140006bef:	jmp    0x140006c20
   140006bf1:	lea    rdx,[rsp+0x20]
   140006bf6:	mov    r8,rbp
   140006bf9:	mov    ecx,eax
   140006bfb:	call   0x1400065dc
   140006c00:	test   eax,eax
   140006c02:	jne    0x140006c16
   140006c04:	lea    rdx,[rsp+0x20]
   140006c09:	mov    r8,rsi
   140006c0c:	mov    ecx,ebx
   140006c0e:	call   0x1400062e8
   140006c13:	mov    rdi,rax
   140006c16:	mov    ecx,ebx
   140006c18:	call   0x140010e20
   140006c1d:	mov    rax,rdi
   140006c20:	mov    rbx,QWORD PTR [rsp+0x50]
   140006c25:	mov    rbp,QWORD PTR [rsp+0x58]
   140006c2a:	mov    rsi,QWORD PTR [rsp+0x60]
   140006c2f:	add    rsp,0x40
   140006c33:	pop    rdi
   140006c34:	ret    
   140006c35:	int3   
   140006c36:	int3   
   140006c37:	int3   
   140006c38:	sub    rsp,0x28
   140006c3c:	mov    rcx,QWORD PTR [rip+0x1dd35]        # 0x140024978
   140006c43:	test   rcx,rcx
   140006c46:	je     0x140006c4d
   140006c48:	call   0x14000b460
   140006c4d:	add    rsp,0x28
   140006c51:	ret    
   140006c52:	int3   
   140006c53:	int3   
   140006c54:	mov    QWORD PTR [rsp+0x8],rbx
   140006c59:	mov    QWORD PTR [rsp+0x10],rsi
   140006c5e:	push   rdi
   140006c5f:	sub    rsp,0x20
   140006c63:	mov    al,BYTE PTR [rcx]
   140006c65:	mov    rsi,rdx
   140006c68:	mov    rbx,rcx
   140006c6b:	xor    edi,edi
   140006c6d:	jmp    0x140006c99
   140006c6f:	movsx  ecx,al
   140006c72:	call   0x14000c798
   140006c77:	test   eax,eax
   140006c79:	je     0x140006cb4
   140006c7b:	movsx  eax,BYTE PTR [rbx]
   140006c7e:	lea    rcx,[rdi+rdi*4]
   140006c82:	inc    rbx
   140006c85:	sub    eax,0x30
   140006c88:	cdqe   
   140006c8a:	lea    rdi,[rax+rcx*2]
   140006c8e:	cmp    rdi,0x7fffffff
   140006c95:	jg     0x140006cb4
   140006c97:	mov    al,BYTE PTR [rbx]
   140006c99:	test   al,al
   140006c9b:	jne    0x140006c6f
   140006c9d:	mov    DWORD PTR [rsi],edi
   140006c9f:	mov    eax,0x1
   140006ca4:	mov    rbx,QWORD PTR [rsp+0x30]
   140006ca9:	mov    rsi,QWORD PTR [rsp+0x38]
   140006cae:	add    rsp,0x20
   140006cb2:	pop    rdi
   140006cb3:	ret    
   140006cb4:	xor    eax,eax
   140006cb6:	jmp    0x140006ca4
   140006cb8:	mov    QWORD PTR [rsp+0x8],rbx
   140006cbd:	push   rdi
   140006cbe:	sub    rsp,0x20
   140006cc2:	mov    rbx,rdx
   140006cc5:	lea    rdx,[rsp+0x40]
   140006cca:	mov    rdi,rcx
   140006ccd:	call   0x140006c54
   140006cd2:	test   eax,eax
   140006cd4:	je     0x140006cf1
   140006cd6:	lea    rdx,[rsp+0x48]
   140006cdb:	mov    rcx,rbx
   140006cde:	call   0x140006c54
   140006ce3:	test   eax,eax
   140006ce5:	je     0x140006cf1
   140006ce7:	mov    eax,DWORD PTR [rsp+0x40]
   140006ceb:	sub    eax,DWORD PTR [rsp+0x48]
   140006cef:	jmp    0x140006cfc
   140006cf1:	mov    rdx,rbx
   140006cf4:	mov    rcx,rdi
   140006cf7:	call   0x14000a850
   140006cfc:	mov    rbx,QWORD PTR [rsp+0x30]
   140006d01:	add    rsp,0x20
   140006d05:	pop    rdi
   140006d06:	ret    
   140006d07:	int3   
   140006d08:	mov    rax,rsp
   140006d0b:	mov    QWORD PTR [rax+0x8],rbx
   140006d0f:	mov    QWORD PTR [rax+0x10],rbp
   140006d13:	mov    QWORD PTR [rax+0x18],rsi
   140006d17:	mov    QWORD PTR [rax+0x20],rdi
   140006d1b:	push   r12
   140006d1d:	push   r13
   140006d1f:	push   r14
   140006d21:	sub    rsp,0x20
   140006d25:	mov    rbx,rdx
   140006d28:	call   0x140004048
   140006d2d:	mov    rcx,rbx
   140006d30:	mov    rdi,rax
   140006d33:	call   0x140004048
   140006d38:	xor    ebp,ebp
   140006d3a:	mov    r13,rdi
   140006d3d:	xor    esi,esi
   140006d3f:	mov    rbx,rax
   140006d42:	mov    r14,rax
   140006d45:	test   rdi,rdi
   140006d48:	je     0x140006d64
   140006d4a:	lea    rdx,[rip+0x1500f]        # 0x14001bd60
   140006d51:	mov    rcx,rdi
   140006d54:	call   0x14000c658
   140006d59:	mov    rbp,rax
   140006d5c:	test   rax,rax
   140006d5f:	je     0x140006d64
   140006d61:	mov    BYTE PTR [rax],0x0
   140006d64:	test   rbx,rbx
   140006d67:	je     0x140006d83
   140006d69:	lea    rdx,[rip+0x14ff0]        # 0x14001bd60
   140006d70:	mov    rcx,rbx
   140006d73:	call   0x14000c658
   140006d78:	mov    rsi,rax
   140006d7b:	test   rax,rax
   140006d7e:	je     0x140006d83
   140006d80:	mov    BYTE PTR [rax],0x0
   140006d83:	mov    rdx,rbx
   140006d86:	mov    rcx,rdi
   140006d89:	call   0x140006cb8
   140006d8e:	mov    r12d,eax
   140006d91:	test   rbp,rbp
   140006d94:	je     0x140006d9c
   140006d96:	lea    rdi,[rbp+0x1]
   140006d9a:	jmp    0x140006d9e
   140006d9c:	xor    edi,edi
   140006d9e:	test   rsi,rsi
   140006da1:	je     0x140006da9
   140006da3:	lea    rbx,[rsi+0x1]
   140006da7:	jmp    0x140006dab
   140006da9:	xor    ebx,ebx
   140006dab:	test   eax,eax
   140006dad:	jne    0x140006db9
   140006daf:	test   rdi,rdi
   140006db2:	je     0x140006db9
   140006db4:	test   rbx,rbx
   140006db7:	jne    0x140006d45
   140006db9:	mov    rcx,r13
   140006dbc:	call   0x140004074
   140006dc1:	mov    rcx,r14
   140006dc4:	call   0x140004074
   140006dc9:	mov    rbx,QWORD PTR [rsp+0x40]
   140006dce:	mov    rbp,QWORD PTR [rsp+0x48]
   140006dd3:	mov    rsi,QWORD PTR [rsp+0x50]
   140006dd8:	mov    rdi,QWORD PTR [rsp+0x58]
   140006ddd:	mov    eax,r12d
   140006de0:	add    rsp,0x20
   140006de4:	pop    r14
   140006de6:	pop    r13
   140006de8:	pop    r12
   140006dea:	ret    
   140006deb:	int3   
   140006dec:	mov    rax,rsp
   140006def:	mov    QWORD PTR [rax+0x8],rbx
   140006df3:	mov    QWORD PTR [rax+0x10],rbp
   140006df7:	mov    QWORD PTR [rax+0x18],rsi
   140006dfb:	mov    QWORD PTR [rax+0x20],rdi
   140006dff:	push   r12
   140006e01:	push   r13
   140006e03:	push   r14
   140006e05:	sub    rsp,0x20
   140006e09:	mov    rbx,rdx
   140006e0c:	call   0x140004048
   140006e11:	mov    rcx,rbx
   140006e14:	mov    rdi,rax
   140006e17:	call   0x140004048
   140006e1c:	xor    ebp,ebp
   140006e1e:	mov    r13,rdi
   140006e21:	xor    r12d,r12d
   140006e24:	mov    rbx,rax
   140006e27:	mov    r14,rax
   140006e2a:	test   rdi,rdi
   140006e2d:	je     0x140006e49
   140006e2f:	mov    rdx,QWORD PTR [rip+0x1c272]        # 0x1400230a8
   140006e36:	mov    rcx,rdi
   140006e39:	call   0x14000c658
   140006e3e:	mov    rbp,rax
   140006e41:	test   rax,rax
   140006e44:	je     0x140006e49
   140006e46:	mov    BYTE PTR [rax],0x0
   140006e49:	test   rbx,rbx
   140006e4c:	je     0x140006e68
   140006e4e:	mov    rdx,QWORD PTR [rip+0x1c253]        # 0x1400230a8
   140006e55:	mov    rcx,rbx
   140006e58:	call   0x14000c658
   140006e5d:	mov    r12,rax
   140006e60:	test   rax,rax
   140006e63:	je     0x140006e68
   140006e65:	mov    BYTE PTR [rax],0x0
   140006e68:	test   rdi,rdi
   140006e6b:	je     0x140006e7b
   140006e6d:	test   rbx,rbx
   140006e70:	jne    0x140006e8c
   140006e72:	mov    rdx,QWORD PTR [rip+0x1c237]        # 0x1400230b0
   140006e79:	jmp    0x140006e8f
   140006e7b:	test   rbx,rbx
   140006e7e:	je     0x140006e8c
   140006e80:	mov    rcx,QWORD PTR [rip+0x1c229]        # 0x1400230b0
   140006e87:	mov    rdx,rbx
   140006e8a:	jmp    0x140006e92
   140006e8c:	mov    rdx,rbx
   140006e8f:	mov    rcx,rdi
   140006e92:	call   0x140006cb8
   140006e97:	mov    esi,eax
   140006e99:	test   rbp,rbp
   140006e9c:	je     0x140006ea4
   140006e9e:	lea    rdi,[rbp+0x1]
   140006ea2:	jmp    0x140006ea6
   140006ea4:	xor    edi,edi
   140006ea6:	test   r12,r12
   140006ea9:	je     0x140006eb2
   140006eab:	lea    rbx,[r12+0x1]
   140006eb0:	jmp    0x140006eb4
   140006eb2:	xor    ebx,ebx
   140006eb4:	test   esi,esi
   140006eb6:	jne    0x140006eca
   140006eb8:	test   rdi,rdi
   140006ebb:	jne    0x140006e2f
   140006ec1:	test   rbx,rbx
   140006ec4:	jne    0x140006e2a
   140006eca:	mov    rcx,r13
   140006ecd:	call   0x140004074
   140006ed2:	mov    rcx,r14
   140006ed5:	call   0x140004074
   140006eda:	mov    rbx,QWORD PTR [rsp+0x40]
   140006edf:	mov    rbp,QWORD PTR [rsp+0x48]
   140006ee4:	mov    rdi,QWORD PTR [rsp+0x58]
   140006ee9:	mov    eax,esi
   140006eeb:	mov    rsi,QWORD PTR [rsp+0x50]
   140006ef0:	add    rsp,0x20
   140006ef4:	pop    r14
   140006ef6:	pop    r13
   140006ef8:	pop    r12
   140006efa:	ret    
   140006efb:	int3   
   140006efc:	mov    QWORD PTR [rsp+0x8],rbx
   140006f01:	mov    QWORD PTR [rsp+0x10],rbp
   140006f06:	mov    QWORD PTR [rsp+0x18],rsi
   140006f0b:	push   rdi
   140006f0c:	push   r12
   140006f0e:	push   r13
   140006f10:	sub    rsp,0x20
   140006f14:	mov    r12,rcx
   140006f17:	mov    rcx,rdx
   140006f1a:	call   0x140004048
   140006f1f:	xor    ebx,ebx
   140006f21:	mov    rdi,rax
   140006f24:	mov    r13,rax
   140006f27:	mov    edx,0x20
   140006f2c:	mov    rcx,rdi
   140006f2f:	call   0x14000c04c
   140006f34:	mov    rbp,rax
   140006f37:	test   rax,rax
   140006f3a:	je     0x140006f3e
   140006f3c:	mov    BYTE PTR [rax],bl
   140006f3e:	mov    edx,0x26
   140006f43:	mov    rcx,rdi
   140006f46:	call   0x14000c04c
   140006f4b:	mov    rsi,rax
   140006f4e:	test   rax,rax
   140006f51:	je     0x140006f55
   140006f53:	mov    BYTE PTR [rax],bl
   140006f55:	mov    rcx,rdi
   140006f58:	call   0x140009fa0
   140006f5d:	mov    rcx,r12
   140006f60:	cmp    BYTE PTR [rax+rdi*1-0x1],0x2a
   140006f65:	jne    0x140006f8e
   140006f67:	mov    edx,0x2d
   140006f6c:	mov    BYTE PTR [rax+rdi*1-0x1],bl
   140006f70:	call   0x14000c04c
   140006f75:	mov    rdx,rdi
   140006f78:	mov    rcx,r12
   140006f7b:	test   rax,rax
   140006f7e:	je     0x140006f87
   140006f80:	call   0x14000a850
   140006f85:	jmp    0x140006fc4
   140006f87:	call   0x140006d08
   140006f8c:	jmp    0x140006fc4
   140006f8e:	cmp    BYTE PTR [rax+rdi*1-0x1],0x2b
   140006f93:	jne    0x140006fbc
   140006f95:	mov    edx,0x2d
   140006f9a:	mov    BYTE PTR [rax+rdi*1-0x1],bl
   140006f9e:	call   0x14000c04c
   140006fa3:	mov    rdx,rdi
   140006fa6:	mov    rcx,r12
   140006fa9:	test   rax,rax
   140006fac:	jne    0x140006f80
   140006fae:	call   0x140006dec
   140006fb3:	mov    ecx,ebx
   140006fb5:	test   eax,eax
   140006fb7:	setns  cl
   140006fba:	jmp    0x140006fcb
   140006fbc:	mov    rdx,rdi
   140006fbf:	call   0x140006dec
   140006fc4:	test   eax,eax
   140006fc6:	mov    ecx,ebx
   140006fc8:	sete   cl
   140006fcb:	test   ecx,ecx
   140006fcd:	je     0x140006fdd
   140006fcf:	test   rsi,rsi
   140006fd2:	je     0x140006feb
   140006fd4:	lea    rdi,[rsi+0x1]
   140006fd8:	jmp    0x140006f3e
   140006fdd:	test   rbp,rbp
   140006fe0:	je     0x140006ff0
   140006fe2:	lea    rdi,[rbp+0x1]
   140006fe6:	jmp    0x140006f27
   140006feb:	mov    ebx,0x1
   140006ff0:	mov    rcx,r13
   140006ff3:	call   0x140004074
   140006ff8:	mov    rbp,QWORD PTR [rsp+0x48]
   140006ffd:	mov    rsi,QWORD PTR [rsp+0x50]
   140007002:	mov    eax,ebx
   140007004:	mov    rbx,QWORD PTR [rsp+0x40]
   140007009:	add    rsp,0x20
   14000700d:	pop    r13
   14000700f:	pop    r12
   140007011:	pop    rdi
   140007012:	ret    
   140007013:	int3   
   140007014:	mov    rax,rsp
   140007017:	mov    QWORD PTR [rax+0x8],rbx
   14000701b:	mov    QWORD PTR [rax+0x10],rbp
   14000701f:	mov    QWORD PTR [rax+0x18],rsi
   140007023:	mov    QWORD PTR [rax+0x20],rdi
   140007027:	push   r12
   140007029:	sub    rsp,0x20
   14000702d:	mov    rbx,rcx
   140007030:	test   rcx,rcx
   140007033:	je     0x14000710f
   140007039:	call   0x140009fa0
   14000703e:	test   rax,rax
   140007041:	je     0x14000710f
   140007047:	mov    rcx,rbx
   14000704a:	call   0x140004048
   14000704f:	mov    rbx,rax
   140007052:	mov    r12,rax
   140007055:	mov    edx,0x20
   14000705a:	mov    rcx,rbx
   14000705d:	call   0x14000c04c
   140007062:	mov    rbp,rax
   140007065:	test   rax,rax
   140007068:	je     0x14000706d
   14000706a:	mov    BYTE PTR [rax],0x0
   14000706d:	test   rbx,rbx
   140007070:	je     0x140007107
   140007076:	mov    rcx,rbx
   140007079:	call   0x140009fa0
   14000707e:	test   rax,rax
   140007081:	je     0x140007107
   140007087:	mov    edx,0x26
   14000708c:	mov    rcx,rbx
   14000708f:	call   0x14000c04c
   140007094:	mov    rsi,rax
   140007097:	test   rax,rax
   14000709a:	je     0x14000709f
   14000709c:	mov    BYTE PTR [rax],0x0
   14000709f:	test   rbx,rbx
   1400070a2:	je     0x140007107
   1400070a4:	mov    rcx,rbx
   1400070a7:	call   0x140009fa0
   1400070ac:	test   rax,rax
   1400070af:	je     0x140007107
   1400070b1:	lea    rdi,[rax+rbx*1-0x1]
   1400070b6:	cmp    BYTE PTR [rdi],0x2a
   1400070b9:	je     0x1400070c0
   1400070bb:	cmp    BYTE PTR [rdi],0x2b
   1400070be:	jne    0x1400070cb
   1400070c0:	dec    rax
   1400070c3:	je     0x140007107
   1400070c5:	mov    BYTE PTR [rdi],0x0
   1400070c8:	dec    rdi
   1400070cb:	lea    rdx,[rip+0x14c92]        # 0x14001bd64
   1400070d2:	mov    rcx,rbx
   1400070d5:	call   0x14000c658
   1400070da:	test   rax,rax
   1400070dd:	jne    0x140007107
   1400070df:	movsx  edx,BYTE PTR [rbx]
   1400070e2:	lea    rcx,[rip+0x14c77]        # 0x14001bd60
   1400070e9:	call   0x14000c04c
   1400070ee:	test   rax,rax
   1400070f1:	jne    0x140007107
   1400070f3:	movsx  edx,BYTE PTR [rdi]
   1400070f6:	lea    rcx,[rip+0x14c63]        # 0x14001bd60
   1400070fd:	call   0x14000c04c
   140007102:	test   rax,rax
   140007105:	je     0x140007158
   140007107:	mov    rcx,r12
   14000710a:	call   0x140004074
   14000710f:	xor    eax,eax
   140007111:	mov    rbx,QWORD PTR [rsp+0x30]
   140007116:	mov    rbp,QWORD PTR [rsp+0x38]
   14000711b:	mov    rsi,QWORD PTR [rsp+0x40]
   140007120:	mov    rdi,QWORD PTR [rsp+0x48]
   140007125:	add    rsp,0x20
   140007129:	pop    r12
   14000712b:	ret    
   14000712c:	movsx  edx,BYTE PTR [rbx]
   14000712f:	lea    rcx,[rip+0x14c2a]        # 0x14001bd60
   140007136:	call   0x14000c04c
   14000713b:	test   rax,rax
   14000713e:	je     0x140007155
   140007140:	movsx  edx,BYTE PTR [rbx+0x1]
   140007144:	lea    rcx,[rip+0x14c15]        # 0x14001bd60
   14000714b:	call   0x14000c04c
   140007150:	test   rax,rax
   140007153:	jne    0x140007107
   140007155:	inc    rbx
   140007158:	cmp    rbx,rdi
   14000715b:	jne    0x14000712c
   14000715d:	test   rsi,rsi
   140007160:	je     0x14000716b
   140007162:	lea    rbx,[rsi+0x1]
   140007166:	jmp    0x140007087
   14000716b:	test   rbp,rbp
   14000716e:	je     0x140007179
   140007170:	lea    rbx,[rbp+0x1]
   140007174:	jmp    0x140007055
   140007179:	mov    rcx,r12
   14000717c:	call   0x140004074
   140007181:	mov    eax,0x1
   140007186:	jmp    0x140007111
   140007188:	xor    eax,eax
   14000718a:	test   rcx,rcx
   14000718d:	je     0x1400071e1
   14000718f:	mov    rdx,QWORD PTR [rcx+0x28]
   140007193:	test   rdx,rdx
   140007196:	je     0x1400071e1
   140007198:	mov    DWORD PTR [rdx+0x1c],eax
   14000719b:	mov    DWORD PTR [rcx+0x1c],eax
   14000719e:	mov    DWORD PTR [rcx+0xc],eax
   1400071a1:	mov    QWORD PTR [rcx+0x20],rax
   1400071a5:	mov    DWORD PTR [rcx+0x4c],0x1
   1400071ac:	mov    QWORD PTR [rdx],rax
   1400071af:	mov    DWORD PTR [rdx+0xc],eax
   1400071b2:	mov    QWORD PTR [rdx+0x20],rax
   1400071b6:	mov    QWORD PTR [rdx+0x2c],rax
   1400071ba:	mov    DWORD PTR [rdx+0x34],eax
   1400071bd:	mov    QWORD PTR [rdx+0x40],rax
   1400071c1:	lea    rax,[rdx+0x548]
   1400071c8:	mov    QWORD PTR [rdx+0x80],rax
   1400071cf:	mov    QWORD PTR [rdx+0x60],rax
   1400071d3:	mov    QWORD PTR [rdx+0x58],rax
   1400071d7:	xor    eax,eax
   1400071d9:	mov    DWORD PTR [rdx+0x14],0x8000
   1400071e0:	ret    
   1400071e1:	mov    eax,0xfffffffe
   1400071e6:	ret    
   1400071e7:	int3   
   1400071e8:	mov    QWORD PTR [rsp+0x8],rbx
   1400071ed:	push   rdi
   1400071ee:	sub    rsp,0x20
   1400071f2:	mov    edi,edx
   1400071f4:	mov    rbx,rcx
   1400071f7:	test   r8,r8
   1400071fa:	je     0x1400072c2
   140007200:	cmp    BYTE PTR [r8],0x31
   140007204:	jne    0x1400072c2
   14000720a:	cmp    r9d,0x58
   14000720e:	jne    0x1400072c2
   140007214:	test   rcx,rcx
   140007217:	jne    0x140007223
   140007219:	mov    eax,0xfffffffe
   14000721e:	jmp    0x1400072c7
   140007223:	and    QWORD PTR [rcx+0x20],0x0
   140007228:	cmp    QWORD PTR [rcx+0x30],0x0
   14000722d:	jne    0x14000723f
   14000722f:	and    QWORD PTR [rcx+0x40],0x0
   140007234:	lea    rax,[rip+0x1765]        # 0x1400089a0
   14000723b:	mov    QWORD PTR [rcx+0x30],rax
   14000723f:	mov    rax,QWORD PTR [rcx+0x38]
   140007243:	lea    rcx,[rip+0x1762]        # 0x1400089ac
   14000724a:	mov    edx,0x1
   14000724f:	cmp    rax,0x0
   140007253:	mov    r8d,0x2548
   140007259:	cmove  rax,rcx
   14000725d:	mov    rcx,QWORD PTR [rbx+0x40]
   140007261:	mov    QWORD PTR [rbx+0x38],rax
   140007265:	call   QWORD PTR [rbx+0x30]
   140007268:	mov    rdx,rax
   14000726b:	test   rax,rax
   14000726e:	jne    0x140007275
   140007270:	lea    eax,[rdx-0x4]
   140007273:	jmp    0x1400072c7
   140007275:	mov    QWORD PTR [rbx+0x28],rax
   140007279:	test   edi,edi
   14000727b:	jns    0x140007285
   14000727d:	and    DWORD PTR [rax+0x8],0x0
   140007281:	neg    edi
   140007283:	jmp    0x140007297
   140007285:	mov    eax,edi
   140007287:	sar    eax,0x4
   14000728a:	inc    eax
   14000728c:	mov    DWORD PTR [rdx+0x8],eax
   14000728f:	cmp    edi,0x30
   140007292:	jge    0x140007297
   140007294:	and    edi,0xf
   140007297:	lea    eax,[rdi-0x8]
   14000729a:	cmp    eax,0x7
   14000729d:	ja     0x1400072b1
   14000729f:	and    QWORD PTR [rdx+0x38],0x0
   1400072a4:	mov    rcx,rbx
   1400072a7:	mov    DWORD PTR [rdx+0x28],edi
   1400072aa:	call   0x140007188
   1400072af:	jmp    0x1400072c7
   1400072b1:	mov    rcx,QWORD PTR [rbx+0x40]
   1400072b5:	call   QWORD PTR [rbx+0x38]
   1400072b8:	and    QWORD PTR [rbx+0x28],0x0
   1400072bd:	jmp    0x140007219
   1400072c2:	mov    eax,0xfffffffa
   1400072c7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400072cc:	add    rsp,0x20
   1400072d0:	pop    rdi
   1400072d1:	ret    
   1400072d2:	int3   
   1400072d3:	int3   
   1400072d4:	mov    rax,rsp
   1400072d7:	mov    QWORD PTR [rax+0x8],rbx
   1400072db:	mov    QWORD PTR [rax+0x10],rbp
   1400072df:	mov    QWORD PTR [rax+0x18],rsi
   1400072e3:	mov    QWORD PTR [rax+0x20],rdi
   1400072e7:	push   r12
   1400072e9:	sub    rsp,0x20
   1400072ed:	mov    rbx,QWORD PTR [rcx+0x28]
   1400072f1:	xor    r12d,r12d
   1400072f4:	mov    ebp,edx
   1400072f6:	mov    rsi,rcx
   1400072f9:	mov    edi,0x1
   1400072fe:	cmp    QWORD PTR [rbx+0x38],r12
   140007302:	jne    0x140007325
   140007304:	mov    ecx,DWORD PTR [rbx+0x28]
   140007307:	mov    edx,edi
   140007309:	mov    r8d,edi
   14000730c:	shl    edx,cl
   14000730e:	mov    rcx,QWORD PTR [rsi+0x40]
   140007312:	call   QWORD PTR [rsi+0x30]
   140007315:	mov    QWORD PTR [rbx+0x38],rax
   140007319:	test   rax,rax
   14000731c:	jne    0x140007325
   14000731e:	mov    eax,edi
   140007320:	jmp    0x1400073b5
   140007325:	cmp    DWORD PTR [rbx+0x2c],r12d
   140007329:	jne    0x140007337
   14000732b:	mov    ecx,DWORD PTR [rbx+0x28]
   14000732e:	mov    QWORD PTR [rbx+0x30],r12
   140007332:	shl    edi,cl
   140007334:	mov    DWORD PTR [rbx+0x2c],edi
   140007337:	sub    ebp,DWORD PTR [rsi+0x18]
   14000733a:	mov    edi,DWORD PTR [rbx+0x2c]
   14000733d:	mov    rdx,QWORD PTR [rsi+0x10]
   140007341:	cmp    ebp,edi
   140007343:	jb     0x14000735d
   140007345:	mov    rcx,QWORD PTR [rbx+0x38]
   140007349:	mov    r8d,edi
   14000734c:	sub    rdx,rdi
   14000734f:	call   0x14000a140
   140007354:	mov    DWORD PTR [rbx+0x34],r12d
   140007358:	mov    eax,DWORD PTR [rbx+0x2c]
   14000735b:	jmp    0x1400073b0
   14000735d:	sub    edi,DWORD PTR [rbx+0x34]
   140007360:	mov    ecx,DWORD PTR [rbx+0x34]
   140007363:	mov    eax,ebp
   140007365:	cmp    edi,ebp
   140007367:	cmova  edi,ebp
   14000736a:	add    rcx,QWORD PTR [rbx+0x38]
   14000736e:	sub    rdx,rax
   140007371:	mov    r8d,edi
   140007374:	call   0x14000a140
   140007379:	sub    ebp,edi
   14000737b:	je     0x140007395
   14000737d:	mov    rdx,QWORD PTR [rsi+0x10]
   140007381:	mov    rcx,QWORD PTR [rbx+0x38]
   140007385:	mov    r8d,ebp
   140007388:	sub    rdx,r8
   14000738b:	call   0x14000a140
   140007390:	mov    DWORD PTR [rbx+0x34],ebp
   140007393:	jmp    0x140007358
   140007395:	add    DWORD PTR [rbx+0x34],edi
   140007398:	mov    eax,DWORD PTR [rbx+0x34]
   14000739b:	mov    ecx,DWORD PTR [rbx+0x2c]
   14000739e:	cmp    eax,ecx
   1400073a0:	cmove  eax,r12d
   1400073a4:	mov    DWORD PTR [rbx+0x34],eax
   1400073a7:	mov    eax,DWORD PTR [rbx+0x30]
   1400073aa:	cmp    eax,ecx
   1400073ac:	jae    0x1400073b3
   1400073ae:	add    eax,edi
   1400073b0:	mov    DWORD PTR [rbx+0x30],eax
   1400073b3:	xor    eax,eax
   1400073b5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400073ba:	mov    rbp,QWORD PTR [rsp+0x38]
   1400073bf:	mov    rsi,QWORD PTR [rsp+0x40]
   1400073c4:	mov    rdi,QWORD PTR [rsp+0x48]
   1400073c9:	add    rsp,0x20
   1400073cd:	pop    r12
   1400073cf:	ret    
   1400073d0:	mov    DWORD PTR [rsp+0x10],edx
   1400073d4:	push   rbp
   1400073d5:	push   rbx
   1400073d6:	push   rsi
   1400073d7:	push   rdi
   1400073d8:	push   r12
   1400073da:	push   r13
   1400073dc:	push   r14
   1400073de:	push   r15
   1400073e0:	mov    rbp,rsp
   1400073e3:	sub    rsp,0x58
   1400073e7:	xor    r11d,r11d
   1400073ea:	mov    ebx,edx
   1400073ec:	mov    r14,rcx
   1400073ef:	test   rcx,rcx
   1400073f2:	je     0x1400074bb
   1400073f8:	mov    rdi,QWORD PTR [rcx+0x28]
   1400073fc:	test   rdi,rdi
   1400073ff:	je     0x1400074bb
   140007405:	cmp    QWORD PTR [rcx+0x10],r11
   140007409:	je     0x1400074bb
   14000740f:	cmp    QWORD PTR [rcx],r11
   140007412:	jne    0x14000741e
   140007414:	cmp    DWORD PTR [rcx+0x8],r11d
   140007418:	jne    0x1400074bb
   14000741e:	mov    eax,DWORD PTR [rdi]
   140007420:	mov    r12d,DWORD PTR [rdi+0x40]
   140007424:	mov    esi,DWORD PTR [rdi+0x44]
   140007427:	cmp    eax,0xb
   14000742a:	mov    ecx,0xc
   14000742f:	mov    DWORD PTR [rbp+0x48],r11d
   140007433:	cmove  eax,ecx
   140007436:	mov    DWORD PTR [rdi],eax
   140007438:	mov    r9d,DWORD PTR [r14+0x18]
   14000743c:	mov    r13,QWORD PTR [r14]
   14000743f:	mov    r15d,DWORD PTR [r14+0x8]
   140007443:	mov    r10,QWORD PTR [r14+0x10]
   140007447:	mov    QWORD PTR [rbp-0x18],r13
   14000744b:	mov    DWORD PTR [rbp-0x20],r15d
   14000744f:	mov    r8d,r9d
   140007452:	mov    DWORD PTR [rbp+0x60],r9d
   140007456:	mov    edx,0x10
   14000745b:	mov    DWORD PTR [rbp+0x58],r9d
   14000745f:	mov    QWORD PTR [rbp-0x10],r10
   140007463:	mov    eax,0x7
   140007468:	mov    ecx,DWORD PTR [rdi]
   14000746a:	cmp    ecx,0xe
   14000746d:	jg     0x140007da3
   140007473:	je     0x140007b44
   140007479:	cmp    ecx,eax
   14000747b:	jg     0x140007ab4
   140007481:	je     0x14000783e
   140007487:	test   ecx,ecx
   140007489:	je     0x14000791b
   14000748f:	dec    ecx
   140007491:	je     0x1400074f3
   140007493:	dec    ecx
   140007495:	je     0x140007593
   14000749b:	dec    ecx
   14000749d:	je     0x140007619
   1400074a3:	dec    ecx
   1400074a5:	je     0x140007677
   1400074ab:	dec    ecx
   1400074ad:	je     0x140007697
   1400074b3:	dec    ecx
   1400074b5:	je     0x1400077a5
   1400074bb:	mov    eax,0xfffffffe
   1400074c0:	add    rsp,0x58
   1400074c4:	pop    r15
   1400074c6:	pop    r14
   1400074c8:	pop    r13
   1400074ca:	pop    r12
   1400074cc:	pop    rdi
   1400074cd:	pop    rsi
   1400074ce:	pop    rbx
   1400074cf:	pop    rbp
   1400074d0:	ret    
   1400074d1:	test   r15d,r15d
   1400074d4:	je     0x1400078ba
   1400074da:	movzx  eax,BYTE PTR [r13+0x0]
   1400074df:	mov    ecx,esi
   1400074e1:	inc    r13
   1400074e4:	shl    eax,cl
   1400074e6:	dec    r15d
   1400074e9:	mov    QWORD PTR [rbp-0x18],r13
   1400074ed:	add    r12d,eax
   1400074f0:	add    esi,0x8
   1400074f3:	cmp    esi,edx
   1400074f5:	jb     0x1400074d1
   1400074f7:	mov    DWORD PTR [rdi+0x10],r12d
   1400074fb:	cmp    r12b,0x8
   1400074ff:	je     0x14000750d
   140007501:	lea    rax,[rip+0x152d8]        # 0x14001c7e0
   140007508:	jmp    0x140007a68
   14000750d:	test   r12d,0xe000
   140007514:	je     0x140007522
   140007516:	lea    rax,[rip+0x152a3]        # 0x14001c7c0
   14000751d:	jmp    0x140007a68
   140007522:	mov    rcx,QWORD PTR [rdi+0x20]
   140007526:	test   rcx,rcx
   140007529:	je     0x140007536
   14000752b:	mov    eax,r12d
   14000752e:	shr    eax,0x8
   140007531:	and    eax,0x1
   140007534:	mov    DWORD PTR [rcx],eax
   140007536:	test   DWORD PTR [rdi+0x10],0x200
   14000753d:	je     0x140007563
   14000753f:	mov    BYTE PTR [rbp-0x28],r12b
   140007543:	shr    r12d,0x8
   140007547:	lea    rdx,[rbp-0x28]
   14000754b:	mov    BYTE PTR [rbp-0x27],r12b
   14000754f:	mov    ecx,DWORD PTR [rdi+0x18]
   140007552:	mov    r8d,0x2
   140007558:	call   0x14000985c
   14000755d:	xor    r11d,r11d
   140007560:	mov    DWORD PTR [rdi+0x18],eax
   140007563:	mov    r12d,r11d
   140007566:	mov    esi,r11d
   140007569:	mov    DWORD PTR [rdi],0x2
   14000756f:	jmp    0x140007593
   140007571:	test   r15d,r15d
   140007574:	je     0x1400078ba
   14000757a:	movzx  eax,BYTE PTR [r13+0x0]
   14000757f:	mov    ecx,esi
   140007581:	inc    r13
   140007584:	shl    eax,cl
   140007586:	dec    r15d
   140007589:	mov    QWORD PTR [rbp-0x18],r13
   14000758d:	add    r12d,eax
   140007590:	add    esi,0x8
   140007593:	cmp    esi,0x20
   140007596:	jb     0x140007571
   140007598:	mov    rax,QWORD PTR [rdi+0x20]
   14000759c:	test   rax,rax
   14000759f:	je     0x1400075a5
   1400075a1:	mov    DWORD PTR [rax+0x4],r12d
   1400075a5:	test   DWORD PTR [rdi+0x10],0x200
   1400075ac:	je     0x1400075e4
   1400075ae:	mov    eax,r12d
   1400075b1:	mov    BYTE PTR [rbp-0x28],r12b
   1400075b5:	lea    rdx,[rbp-0x28]
   1400075b9:	shr    eax,0x8
   1400075bc:	mov    r8d,0x4
   1400075c2:	mov    BYTE PTR [rbp-0x27],al
   1400075c5:	mov    eax,r12d
   1400075c8:	shr    r12d,0x18
   1400075cc:	shr    eax,0x10
   1400075cf:	mov    BYTE PTR [rbp-0x25],r12b
   1400075d3:	mov    BYTE PTR [rbp-0x26],al
   1400075d6:	mov    ecx,DWORD PTR [rdi+0x18]
   1400075d9:	call   0x14000985c
   1400075de:	xor    r11d,r11d
   1400075e1:	mov    DWORD PTR [rdi+0x18],eax
   1400075e4:	mov    r12d,r11d
   1400075e7:	mov    esi,r11d
   1400075ea:	mov    DWORD PTR [rdi],0x3
   1400075f0:	mov    edx,0x10
   1400075f5:	jmp    0x140007619
   1400075f7:	test   r15d,r15d
   1400075fa:	je     0x1400078ba
   140007600:	movzx  eax,BYTE PTR [r13+0x0]
   140007605:	mov    ecx,esi
   140007607:	inc    r13
   14000760a:	shl    eax,cl
   14000760c:	dec    r15d
   14000760f:	mov    QWORD PTR [rbp-0x18],r13
   140007613:	add    r12d,eax
   140007616:	add    esi,0x8
   140007619:	cmp    esi,edx
   14000761b:	jb     0x1400075f7
   14000761d:	mov    rcx,QWORD PTR [rdi+0x20]
   140007621:	test   rcx,rcx
   140007624:	je     0x14000763a
   140007626:	movzx  eax,r12b
   14000762a:	mov    DWORD PTR [rcx+0x8],eax
   14000762d:	mov    rax,QWORD PTR [rdi+0x20]
   140007631:	mov    ecx,r12d
   140007634:	shr    ecx,0x8
   140007637:	mov    DWORD PTR [rax+0xc],ecx
   14000763a:	test   DWORD PTR [rdi+0x10],0x200
   140007641:	je     0x14000766b
   140007643:	mov    BYTE PTR [rbp-0x28],r12b
   140007647:	shr    r12d,0x8
   14000764b:	lea    rdx,[rbp-0x28]
   14000764f:	mov    BYTE PTR [rbp-0x27],r12b
   140007653:	mov    ecx,DWORD PTR [rdi+0x18]
   140007656:	mov    r8d,0x2
   14000765c:	call   0x14000985c
   140007661:	xor    r11d,r11d
   140007664:	mov    DWORD PTR [rdi+0x18],eax
   140007667:	lea    edx,[r11+0x10]
   14000766b:	mov    r12d,r11d
   14000766e:	mov    esi,r11d
   140007671:	mov    DWORD PTR [rdi],0x4
   140007677:	test   DWORD PTR [rdi+0x10],0x400
   14000767e:	jne    0x140007706
   140007684:	mov    rax,QWORD PTR [rdi+0x20]
   140007688:	test   rax,rax
   14000768b:	je     0x140007691
   14000768d:	mov    QWORD PTR [rax+0x10],r11
   140007691:	mov    DWORD PTR [rdi],0x5
   140007697:	test   DWORD PTR [rdi+0x10],0x400
   14000769e:	je     0x14000779b
   1400076a4:	mov    ebx,DWORD PTR [rdi+0x48]
   1400076a7:	cmp    ebx,r15d
   1400076aa:	cmova  ebx,r15d
   1400076ae:	test   ebx,ebx
   1400076b0:	je     0x140007791
   1400076b6:	mov    rax,QWORD PTR [rdi+0x20]
   1400076ba:	test   rax,rax
   1400076bd:	je     0x140007765
   1400076c3:	mov    r9,QWORD PTR [rax+0x10]
   1400076c7:	test   r9,r9
   1400076ca:	je     0x140007765
   1400076d0:	mov    edx,DWORD PTR [rax+0x18]
   1400076d3:	mov    ecx,DWORD PTR [rax+0x1c]
   1400076d6:	sub    edx,DWORD PTR [rdi+0x48]
   1400076d9:	lea    eax,[rbx+rdx*1]
   1400076dc:	cmp    eax,ecx
   1400076de:	jbe    0x140007753
   1400076e0:	sub    ecx,edx
   1400076e2:	jmp    0x140007755
   1400076e4:	test   r15d,r15d
   1400076e7:	je     0x1400078ba
   1400076ed:	movzx  eax,BYTE PTR [r13+0x0]
   1400076f2:	mov    ecx,esi
   1400076f4:	inc    r13
   1400076f7:	shl    eax,cl
   1400076f9:	dec    r15d
   1400076fc:	mov    QWORD PTR [rbp-0x18],r13
   140007700:	add    r12d,eax
   140007703:	add    esi,0x8
   140007706:	cmp    esi,edx
   140007708:	jb     0x1400076e4
   14000770a:	mov    rax,QWORD PTR [rdi+0x20]
   14000770e:	mov    DWORD PTR [rdi+0x48],r12d
   140007712:	test   rax,rax
   140007715:	je     0x14000771b
   140007717:	mov    DWORD PTR [rax+0x18],r12d
   14000771b:	test   DWORD PTR [rdi+0x10],0x200
   140007722:	je     0x140007748
   140007724:	mov    BYTE PTR [rbp-0x28],r12b
   140007728:	shr    r12d,0x8
   14000772c:	lea    rdx,[rbp-0x28]
   140007730:	mov    BYTE PTR [rbp-0x27],r12b
   140007734:	mov    ecx,DWORD PTR [rdi+0x18]
   140007737:	mov    r8d,0x2
   14000773d:	call   0x14000985c
   140007742:	xor    r11d,r11d
   140007745:	mov    DWORD PTR [rdi+0x18],eax
   140007748:	mov    r12d,r11d
   14000774b:	mov    esi,r11d
   14000774e:	jmp    0x140007691
   140007753:	mov    ecx,ebx
   140007755:	mov    r8d,ecx
   140007758:	mov    ecx,edx
   14000775a:	mov    rdx,r13
   14000775d:	add    rcx,r9
   140007760:	call   0x14000a140
   140007765:	test   DWORD PTR [rdi+0x10],0x200
   14000776c:	je     0x14000777f
   14000776e:	mov    ecx,DWORD PTR [rdi+0x18]
   140007771:	mov    r8d,ebx
   140007774:	mov    rdx,r13
   140007777:	call   0x14000985c
   14000777c:	mov    DWORD PTR [rdi+0x18],eax
   14000777f:	sub    DWORD PTR [rdi+0x48],ebx
   140007782:	mov    eax,ebx
   140007784:	sub    r15d,ebx
   140007787:	add    r13,rax
   14000778a:	xor    r11d,r11d
   14000778d:	mov    QWORD PTR [rbp-0x18],r13
   140007791:	cmp    DWORD PTR [rdi+0x48],r11d
   140007795:	jne    0x1400078ba
   14000779b:	mov    DWORD PTR [rdi+0x48],r11d
   14000779f:	mov    DWORD PTR [rdi],0x6
   1400077a5:	test   DWORD PTR [rdi+0x10],0x800
   1400077ac:	je     0x140007827
   1400077ae:	test   r15d,r15d
   1400077b1:	je     0x1400078ba
   1400077b7:	mov    ebx,r11d
   1400077ba:	mov    r8,r13
   1400077bd:	mov    rax,QWORD PTR [rdi+0x20]
   1400077c1:	movzx  r13d,BYTE PTR [r8]
   1400077c5:	inc    ebx
   1400077c7:	inc    r8
   1400077ca:	test   rax,rax
   1400077cd:	je     0x1400077e7
   1400077cf:	mov    rdx,QWORD PTR [rax+0x20]
   1400077d3:	test   rdx,rdx
   1400077d6:	je     0x1400077e7
   1400077d8:	mov    ecx,DWORD PTR [rdi+0x48]
   1400077db:	cmp    ecx,DWORD PTR [rax+0x28]
   1400077de:	jae    0x1400077e7
   1400077e0:	mov    BYTE PTR [rcx+rdx*1],r13b
   1400077e4:	inc    DWORD PTR [rdi+0x48]
   1400077e7:	test   r13d,r13d
   1400077ea:	je     0x1400077f1
   1400077ec:	cmp    ebx,r15d
   1400077ef:	jb     0x1400077bd
   1400077f1:	test   DWORD PTR [rdi+0x10],0x200
   1400077f8:	je     0x14000780f
   1400077fa:	mov    rdx,QWORD PTR [rbp-0x18]
   1400077fe:	mov    ecx,DWORD PTR [rdi+0x18]
   140007801:	mov    r8d,ebx
   140007804:	call   0x14000985c
   140007809:	xor    r11d,r11d
   14000780c:	mov    DWORD PTR [rdi+0x18],eax
   14000780f:	mov    eax,ebx
   140007811:	sub    r15d,ebx
   140007814:	add    QWORD PTR [rbp-0x18],rax
   140007818:	test   r13d,r13d
   14000781b:	jne    0x1400078ba
   140007821:	mov    r13,QWORD PTR [rbp-0x18]
   140007825:	jmp    0x140007834
   140007827:	mov    rax,QWORD PTR [rdi+0x20]
   14000782b:	test   rax,rax
   14000782e:	je     0x140007834
   140007830:	mov    QWORD PTR [rax+0x20],r11
   140007834:	mov    DWORD PTR [rdi+0x48],r11d
   140007838:	mov    DWORD PTR [rdi],0x7
   14000783e:	test   DWORD PTR [rdi+0x10],0x1000
   140007845:	je     0x140007a77
   14000784b:	test   r15d,r15d
   14000784e:	je     0x1400078ba
   140007850:	mov    ebx,r11d
   140007853:	mov    r8,r13
   140007856:	mov    rax,QWORD PTR [rdi+0x20]
   14000785a:	movzx  r13d,BYTE PTR [r8]
   14000785e:	inc    ebx
   140007860:	inc    r8
   140007863:	test   rax,rax
   140007866:	je     0x140007880
   140007868:	mov    rdx,QWORD PTR [rax+0x30]
   14000786c:	test   rdx,rdx
   14000786f:	je     0x140007880
   140007871:	mov    ecx,DWORD PTR [rdi+0x48]
   140007874:	cmp    ecx,DWORD PTR [rax+0x38]
   140007877:	jae    0x140007880
   140007879:	mov    BYTE PTR [rcx+rdx*1],r13b
   14000787d:	inc    DWORD PTR [rdi+0x48]
   140007880:	test   r13d,r13d
   140007883:	je     0x14000788a
   140007885:	cmp    ebx,r15d
   140007888:	jb     0x140007856
   14000788a:	test   DWORD PTR [rdi+0x10],0x200
   140007891:	je     0x1400078a8
   140007893:	mov    rdx,QWORD PTR [rbp-0x18]
   140007897:	mov    ecx,DWORD PTR [rdi+0x18]
   14000789a:	mov    r8d,ebx
   14000789d:	call   0x14000985c
   1400078a2:	xor    r11d,r11d
   1400078a5:	mov    DWORD PTR [rdi+0x18],eax
   1400078a8:	mov    eax,ebx
   1400078aa:	sub    r15d,ebx
   1400078ad:	add    QWORD PTR [rbp-0x18],rax
   1400078b1:	test   r13d,r13d
   1400078b4:	je     0x140007a84
   1400078ba:	mov    r13d,DWORD PTR [rbp+0x48]
   1400078be:	mov    rax,QWORD PTR [rbp-0x10]
   1400078c2:	mov    ebx,DWORD PTR [rbp+0x60]
   1400078c5:	mov    DWORD PTR [r14+0x8],r15d
   1400078c9:	mov    QWORD PTR [r14+0x10],rax
   1400078cd:	mov    eax,DWORD PTR [rbp+0x58]
   1400078d0:	mov    DWORD PTR [r14+0x18],eax
   1400078d4:	mov    rax,QWORD PTR [rbp-0x18]
   1400078d8:	mov    QWORD PTR [r14],rax
   1400078db:	mov    DWORD PTR [rdi+0x40],r12d
   1400078df:	xor    r12d,r12d
   1400078e2:	mov    DWORD PTR [rdi+0x44],esi
   1400078e5:	cmp    DWORD PTR [rdi+0x2c],r12d
   1400078e9:	jne    0x1400078fe
   1400078eb:	cmp    DWORD PTR [rdi],0x18
   1400078ee:	jge    0x1400088c3
   1400078f4:	cmp    ebx,DWORD PTR [r14+0x18]
   1400078f8:	je     0x1400088c3
   1400078fe:	mov    edx,ebx
   140007900:	mov    rcx,r14
   140007903:	call   0x1400072d4
   140007908:	test   eax,eax
   14000790a:	je     0x1400088c3
   140007910:	mov    DWORD PTR [rdi],0x1c
   140007916:	jmp    0x14000873c
   14000791b:	cmp    DWORD PTR [rdi+0x8],r11d
   14000791f:	jne    0x14000794a
   140007921:	mov    DWORD PTR [rdi],0xc
   140007927:	jmp    0x140007463
   14000792c:	test   r15d,r15d
   14000792f:	je     0x1400078ba
   140007931:	movzx  eax,BYTE PTR [r13+0x0]
   140007936:	mov    ecx,esi
   140007938:	inc    r13
   14000793b:	shl    eax,cl
   14000793d:	dec    r15d
   140007940:	mov    QWORD PTR [rbp-0x18],r13
   140007944:	add    r12d,eax
   140007947:	add    esi,0x8
   14000794a:	cmp    esi,edx
   14000794c:	jb     0x14000792c
   14000794e:	test   BYTE PTR [rdi+0x8],0x2
   140007952:	je     0x1400079ab
   140007954:	cmp    r12d,0x8b1f
   14000795b:	jne    0x1400079ab
   14000795d:	xor    r8d,r8d
   140007960:	xor    edx,edx
   140007962:	xor    ecx,ecx
   140007964:	call   0x14000985c
   140007969:	lea    rdx,[rbp-0x28]
   14000796d:	mov    r8d,0x2
   140007973:	mov    DWORD PTR [rdi+0x18],eax
   140007976:	mov    WORD PTR [rbp-0x28],r12w
   14000797b:	mov    ecx,DWORD PTR [rdi+0x18]
   14000797e:	call   0x14000985c
   140007983:	mov    DWORD PTR [rdi],0x1
   140007989:	mov    DWORD PTR [rdi+0x18],eax
   14000798c:	xor    r11d,r11d
   14000798f:	mov    esi,r11d
   140007992:	mov    r12d,r11d
   140007995:	mov    r10,QWORD PTR [rbp-0x10]
   140007999:	mov    r8d,DWORD PTR [rbp+0x60]
   14000799d:	mov    r9d,DWORD PTR [rbp+0x58]
   1400079a1:	mov    edx,0x10
   1400079a6:	jmp    0x140007463
   1400079ab:	mov    rax,QWORD PTR [rdi+0x20]
   1400079af:	mov    DWORD PTR [rdi+0x10],r11d
   1400079b3:	test   rax,rax
   1400079b6:	je     0x1400079bc
   1400079b8:	or     DWORD PTR [rax+0x40],0xffffffff
   1400079bc:	test   BYTE PTR [rdi+0x8],0x1
   1400079c0:	je     0x140007a61
   1400079c6:	movzx  ecx,r12b
   1400079ca:	mov    eax,r12d
   1400079cd:	shr    eax,0x8
   1400079d0:	shl    ecx,0x8
   1400079d3:	add    ecx,eax
   1400079d5:	mov    eax,0x8421085
   1400079da:	mul    ecx
   1400079dc:	mov    eax,ecx
   1400079de:	sub    eax,edx
   1400079e0:	shr    eax,1
   1400079e2:	add    eax,edx
   1400079e4:	shr    eax,0x4
   1400079e7:	imul   eax,eax,0x1f
   1400079ea:	cmp    ecx,eax
   1400079ec:	jne    0x140007a5c
   1400079ee:	mov    eax,r12d
   1400079f1:	and    al,0xf
   1400079f3:	cmp    al,0x8
   1400079f5:	je     0x140007a0a
   1400079f7:	lea    rax,[rip+0x14de2]        # 0x14001c7e0
   1400079fe:	mov    QWORD PTR [r14+0x20],rax
   140007a02:	mov    DWORD PTR [rdi],0x1b
   140007a08:	jmp    0x1400079a1
   140007a0a:	shr    r12d,0x4
   140007a0e:	add    esi,0xfffffffc
   140007a11:	mov    ecx,r12d
   140007a14:	and    ecx,0xf
   140007a17:	add    ecx,0x8
   140007a1a:	cmp    ecx,DWORD PTR [rdi+0x28]
   140007a1d:	jbe    0x140007a28
   140007a1f:	lea    rax,[rip+0x14d82]        # 0x14001c7a8
   140007a26:	jmp    0x1400079fe
   140007a28:	mov    eax,0x1
   140007a2d:	xor    r8d,r8d
   140007a30:	xor    edx,edx
   140007a32:	shl    eax,cl
   140007a34:	xor    ecx,ecx
   140007a36:	mov    DWORD PTR [rdi+0x14],eax
   140007a39:	call   0x14000927c
   140007a3e:	shr    r12d,0x8
   140007a42:	not    r12d
   140007a45:	mov    DWORD PTR [rdi+0x18],eax
   140007a48:	mov    DWORD PTR [r14+0x4c],eax
   140007a4c:	and    r12d,0x2
   140007a50:	or     r12d,0x9
   140007a54:	mov    DWORD PTR [rdi],r12d
   140007a57:	jmp    0x14000798c
   140007a5c:	mov    edx,0x10
   140007a61:	lea    rax,[rip+0x14d28]        # 0x14001c790
   140007a68:	mov    QWORD PTR [r14+0x20],rax
   140007a6c:	mov    DWORD PTR [rdi],0x1b
   140007a72:	jmp    0x140007463
   140007a77:	mov    rax,QWORD PTR [rdi+0x20]
   140007a7b:	test   rax,rax
   140007a7e:	je     0x140007a84
   140007a80:	mov    QWORD PTR [rax+0x30],r11
   140007a84:	mov    r13,QWORD PTR [rbp-0x18]
   140007a88:	mov    r8d,DWORD PTR [rbp+0x60]
   140007a8c:	mov    r9d,DWORD PTR [rbp+0x58]
   140007a90:	mov    r10,QWORD PTR [rbp-0x10]
   140007a94:	mov    ebx,DWORD PTR [rbp+0x50]
   140007a97:	mov    DWORD PTR [rdi],0x8
   140007a9d:	mov    edx,0x10
   140007aa2:	test   DWORD PTR [rdi+0x10],0x200
   140007aa9:	je     0x140007d47
   140007aaf:	jmp    0x140007d28
   140007ab4:	sub    ecx,0x8
   140007ab7:	je     0x140007aa2
   140007ab9:	dec    ecx
   140007abb:	je     0x140007bc8
   140007ac1:	dec    ecx
   140007ac3:	je     0x140007c06
   140007ac9:	dec    ecx
   140007acb:	je     0x140007c3c
   140007ad1:	dec    ecx
   140007ad3:	je     0x140007c45
   140007ad9:	dec    ecx
   140007adb:	jne    0x1400074bb
   140007ae1:	mov    ecx,esi
   140007ae3:	and    ecx,0x7
   140007ae6:	shr    r12d,cl
   140007ae9:	sub    esi,ecx
   140007aeb:	jmp    0x140007b0f
   140007aed:	test   r15d,r15d
   140007af0:	je     0x1400078ba
   140007af6:	movzx  eax,BYTE PTR [r13+0x0]
   140007afb:	mov    ecx,esi
   140007afd:	inc    r13
   140007b00:	shl    eax,cl
   140007b02:	dec    r15d
   140007b05:	mov    QWORD PTR [rbp-0x18],r13
   140007b09:	add    r12d,eax
   140007b0c:	add    esi,0x8
   140007b0f:	cmp    esi,0x20
   140007b12:	jb     0x140007aed
   140007b14:	mov    eax,r12d
   140007b17:	movzx  ecx,r12w
   140007b1b:	not    eax
   140007b1d:	shr    eax,0x10
   140007b20:	cmp    ecx,eax
   140007b22:	je     0x140007b30
   140007b24:	lea    rax,[rip+0x14c45]        # 0x14001c770
   140007b2b:	jmp    0x140007a68
   140007b30:	mov    DWORD PTR [rdi+0x48],ecx
   140007b33:	mov    r12d,r11d
   140007b36:	mov    esi,r11d
   140007b39:	mov    DWORD PTR [rdi],0xe
   140007b3f:	mov    eax,0x7
   140007b44:	mov    r13d,DWORD PTR [rdi+0x48]
   140007b48:	test   r13d,r13d
   140007b4b:	je     0x140007d94
   140007b51:	cmp    r13d,r15d
   140007b54:	cmova  r13d,r15d
   140007b58:	cmp    r13d,r9d
   140007b5b:	cmova  r13d,r9d
   140007b5f:	test   r13d,r13d
   140007b62:	je     0x1400078ba
   140007b68:	mov    rdx,QWORD PTR [rbp-0x18]
   140007b6c:	mov    r8d,r13d
   140007b6f:	mov    rcx,r10
   140007b72:	mov    ebx,r13d
   140007b75:	call   0x14000a140
   140007b7a:	add    QWORD PTR [rbp-0x18],rbx
   140007b7e:	mov    r9d,DWORD PTR [rbp+0x58]
   140007b82:	mov    r10,QWORD PTR [rbp-0x10]
   140007b86:	sub    r15d,r13d
   140007b89:	sub    r9d,r13d
   140007b8c:	add    r10,rbx
   140007b8f:	sub    DWORD PTR [rdi+0x48],r13d
   140007b93:	mov    r13,QWORD PTR [rbp-0x18]
   140007b97:	mov    ebx,DWORD PTR [rbp+0x50]
   140007b9a:	mov    r8d,DWORD PTR [rbp+0x60]
   140007b9e:	xor    r11d,r11d
   140007ba1:	jmp    0x140007456
   140007ba6:	test   r15d,r15d
   140007ba9:	je     0x1400078ba
   140007baf:	movzx  eax,BYTE PTR [r13+0x0]
   140007bb4:	mov    ecx,esi
   140007bb6:	inc    r13
   140007bb9:	shl    eax,cl
   140007bbb:	dec    r15d
   140007bbe:	mov    QWORD PTR [rbp-0x18],r13
   140007bc2:	add    r12d,eax
   140007bc5:	add    esi,0x8
   140007bc8:	cmp    esi,0x20
   140007bcb:	jb     0x140007ba6
   140007bcd:	mov    ecx,r12d
   140007bd0:	mov    eax,r12d
   140007bd3:	mov    edx,0xff00
   140007bd8:	shl    eax,0x10
   140007bdb:	and    ecx,edx
   140007bdd:	mov    esi,r11d
   140007be0:	add    ecx,eax
   140007be2:	mov    eax,r12d
   140007be5:	shr    r12d,0x18
   140007be9:	shr    eax,0x8
   140007bec:	shl    ecx,0x8
   140007bef:	and    eax,edx
   140007bf1:	add    eax,ecx
   140007bf3:	add    eax,r12d
   140007bf6:	mov    r12d,r11d
   140007bf9:	mov    DWORD PTR [rdi+0x18],eax
   140007bfc:	mov    DWORD PTR [r14+0x4c],eax
   140007c00:	mov    DWORD PTR [rdi],0xa
   140007c06:	cmp    DWORD PTR [rdi+0xc],r11d
   140007c0a:	je     0x140008881
   140007c10:	xor    r8d,r8d
   140007c13:	xor    edx,edx
   140007c15:	xor    ecx,ecx
   140007c17:	call   0x14000927c
   140007c1c:	mov    r8d,DWORD PTR [rbp+0x60]
   140007c20:	mov    r9d,DWORD PTR [rbp+0x58]
   140007c24:	mov    r10,QWORD PTR [rbp-0x10]
   140007c28:	xor    r11d,r11d
   140007c2b:	mov    DWORD PTR [rdi+0x18],eax
   140007c2e:	mov    DWORD PTR [r14+0x4c],eax
   140007c32:	mov    DWORD PTR [rdi],0xb
   140007c38:	lea    edx,[r11+0x10]
   140007c3c:	cmp    ebx,0x5
   140007c3f:	je     0x1400078ba
   140007c45:	cmp    DWORD PTR [rdi+0x4],r11d
   140007c49:	je     0x140007c86
   140007c4b:	mov    ecx,esi
   140007c4d:	mov    eax,0x7
   140007c52:	mov    DWORD PTR [rdi],0x18
   140007c58:	and    ecx,eax
   140007c5a:	shr    r12d,cl
   140007c5d:	sub    esi,ecx
   140007c5f:	jmp    0x140007468
   140007c64:	test   r15d,r15d
   140007c67:	je     0x1400078ba
   140007c6d:	movzx  eax,BYTE PTR [r13+0x0]
   140007c72:	mov    ecx,esi
   140007c74:	inc    r13
   140007c77:	shl    eax,cl
   140007c79:	dec    r15d
   140007c7c:	mov    QWORD PTR [rbp-0x18],r13
   140007c80:	add    r12d,eax
   140007c83:	add    esi,0x8
   140007c86:	cmp    esi,0x3
   140007c89:	jb     0x140007c64
   140007c8b:	mov    eax,r12d
   140007c8e:	shr    r12d,1
   140007c91:	dec    esi
   140007c93:	and    eax,0x1
   140007c96:	mov    DWORD PTR [rdi+0x4],eax
   140007c99:	mov    eax,r12d
   140007c9c:	and    eax,0x3
   140007c9f:	je     0x140007cf4
   140007ca1:	dec    eax
   140007ca3:	je     0x140007cc8
   140007ca5:	dec    eax
   140007ca7:	je     0x140007cc0
   140007ca9:	dec    eax
   140007cab:	jne    0x140007cfa
   140007cad:	lea    rax,[rip+0x14aa4]        # 0x14001c758
   140007cb4:	mov    QWORD PTR [r14+0x20],rax
   140007cb8:	mov    DWORD PTR [rdi],0x1b
   140007cbe:	jmp    0x140007cfa
   140007cc0:	mov    DWORD PTR [rdi],0xf
   140007cc6:	jmp    0x140007cfa
   140007cc8:	lea    rax,[rip+0x140a1]        # 0x14001bd70
   140007ccf:	mov    DWORD PTR [rdi+0x68],0x9
   140007cd6:	mov    DWORD PTR [rdi+0x6c],0x5
   140007cdd:	mov    QWORD PTR [rdi+0x58],rax
   140007ce1:	lea    rax,[rip+0x14888]        # 0x14001c570
   140007ce8:	mov    DWORD PTR [rdi],0x12
   140007cee:	mov    QWORD PTR [rdi+0x60],rax
   140007cf2:	jmp    0x140007cfa
   140007cf4:	mov    DWORD PTR [rdi],0xd
   140007cfa:	shr    r12d,0x2
   140007cfe:	add    esi,0xfffffffe
   140007d01:	jmp    0x140007463
   140007d06:	test   r15d,r15d
   140007d09:	je     0x1400078ba
   140007d0f:	movzx  eax,BYTE PTR [r13+0x0]
   140007d14:	mov    ecx,esi
   140007d16:	inc    r13
   140007d19:	shl    eax,cl
   140007d1b:	dec    r15d
   140007d1e:	mov    QWORD PTR [rbp-0x18],r13
   140007d22:	add    r12d,eax
   140007d25:	add    esi,0x8
   140007d28:	cmp    esi,edx
   140007d2a:	jb     0x140007d06
   140007d2c:	movzx  eax,WORD PTR [rdi+0x18]
   140007d30:	cmp    r12d,eax
   140007d33:	je     0x140007d41
   140007d35:	lea    rax,[rip+0x14a04]        # 0x14001c740
   140007d3c:	jmp    0x140007a68
   140007d41:	mov    r12d,r11d
   140007d44:	mov    esi,r11d
   140007d47:	mov    rcx,QWORD PTR [rdi+0x20]
   140007d4b:	test   rcx,rcx
   140007d4e:	je     0x140007d67
   140007d50:	mov    eax,DWORD PTR [rdi+0x10]
   140007d53:	sar    eax,0x9
   140007d56:	and    eax,0x1
   140007d59:	mov    DWORD PTR [rcx+0x3c],eax
   140007d5c:	mov    rax,QWORD PTR [rdi+0x20]
   140007d60:	mov    DWORD PTR [rax+0x40],0x1
   140007d67:	xor    r8d,r8d
   140007d6a:	xor    edx,edx
   140007d6c:	xor    ecx,ecx
   140007d6e:	call   0x14000985c
   140007d73:	mov    r8d,DWORD PTR [rbp+0x60]
   140007d77:	mov    r9d,DWORD PTR [rbp+0x58]
   140007d7b:	mov    r10,QWORD PTR [rbp-0x10]
   140007d7f:	mov    DWORD PTR [rdi+0x18],eax
   140007d82:	mov    DWORD PTR [r14+0x4c],eax
   140007d86:	mov    DWORD PTR [rdi],0xb
   140007d8c:	xor    r11d,r11d
   140007d8f:	jmp    0x1400079a1
   140007d94:	mov    r13,QWORD PTR [rbp-0x18]
   140007d98:	mov    DWORD PTR [rdi],0xb
   140007d9e:	jmp    0x140007468
   140007da3:	cmp    ecx,0x16
   140007da6:	jg     0x14000870f
   140007dac:	je     0x14000867c
   140007db2:	sub    ecx,0xf
   140007db5:	je     0x140007e0e
   140007db7:	dec    ecx
   140007db9:	je     0x140007e67
   140007dbf:	dec    ecx
   140007dc1:	je     0x140007f5e
   140007dc7:	dec    ecx
   140007dc9:	je     0x140008285
   140007dcf:	dec    ecx
   140007dd1:	je     0x14000845a
   140007dd7:	dec    ecx
   140007dd9:	je     0x1400084a8
   140007ddf:	dec    ecx
   140007de1:	jne    0x1400074bb
   140007de7:	jmp    0x140008614
   140007dec:	test   r15d,r15d
   140007def:	je     0x1400078ba
   140007df5:	movzx  eax,BYTE PTR [r13+0x0]
   140007dfa:	mov    ecx,esi
   140007dfc:	inc    r13
   140007dff:	shl    eax,cl
   140007e01:	dec    r15d
   140007e04:	mov    QWORD PTR [rbp-0x18],r13
   140007e08:	add    r12d,eax
   140007e0b:	add    esi,0x8
   140007e0e:	cmp    esi,0xe
   140007e11:	jb     0x140007dec
   140007e13:	mov    ecx,r12d
   140007e16:	shr    r12d,0x5
   140007e1a:	add    esi,0xfffffff2
   140007e1d:	mov    edx,r12d
   140007e20:	shr    r12d,0x5
   140007e24:	and    ecx,0x1f
   140007e27:	mov    eax,r12d
   140007e2a:	and    edx,0x1f
   140007e2d:	add    ecx,0x101
   140007e33:	and    eax,0xf
   140007e36:	inc    edx
   140007e38:	shr    r12d,0x4
   140007e3c:	add    eax,0x4
   140007e3f:	mov    DWORD PTR [rdi+0x74],ecx
   140007e42:	mov    DWORD PTR [rdi+0x78],edx
   140007e45:	mov    DWORD PTR [rdi+0x70],eax
   140007e48:	cmp    ecx,0x11e
   140007e4e:	ja     0x1400086a4
   140007e54:	cmp    edx,0x1e
   140007e57:	ja     0x1400086a4
   140007e5d:	mov    DWORD PTR [rdi+0x7c],r11d
   140007e61:	mov    DWORD PTR [rdi],0x10
   140007e67:	mov    edx,0x7
   140007e6c:	lea    r8,[rip+0x1477d]        # 0x14001c5f0
   140007e73:	mov    eax,DWORD PTR [rdi+0x70]
   140007e76:	cmp    DWORD PTR [rdi+0x7c],eax
   140007e79:	jae    0x140007edb
   140007e7b:	jmp    0x140007e9f
   140007e7d:	test   r15d,r15d
   140007e80:	je     0x1400078ba
   140007e86:	movzx  eax,BYTE PTR [r13+0x0]
   140007e8b:	mov    ecx,esi
   140007e8d:	inc    r13
   140007e90:	shl    eax,cl
   140007e92:	dec    r15d
   140007e95:	mov    QWORD PTR [rbp-0x18],r13
   140007e99:	add    r12d,eax
   140007e9c:	add    esi,0x8
   140007e9f:	cmp    esi,0x3
   140007ea2:	jb     0x140007e7d
   140007ea4:	mov    eax,DWORD PTR [rdi+0x7c]
   140007ea7:	movzx  ecx,r12w
   140007eab:	shr    r12d,0x3
   140007eaf:	movzx  eax,WORD PTR [r8+rax*2]
   140007eb4:	and    cx,dx
   140007eb7:	mov    WORD PTR [rdi+rax*2+0x88],cx
   140007ebf:	inc    DWORD PTR [rdi+0x7c]
   140007ec2:	add    esi,0xfffffffd
   140007ec5:	jmp    0x140007e73
   140007ec7:	mov    eax,DWORD PTR [rdi+0x7c]
   140007eca:	movzx  ecx,WORD PTR [r8+rax*2]
   140007ecf:	mov    WORD PTR [rdi+rcx*2+0x88],r11w
   140007ed8:	inc    DWORD PTR [rdi+0x7c]
   140007edb:	cmp    DWORD PTR [rdi+0x7c],0x13
   140007edf:	jb     0x140007ec7
   140007ee1:	lea    rcx,[rdi+0x68]
   140007ee5:	lea    rax,[rdi+0x548]
   140007eec:	lea    r9,[rdi+0x80]
   140007ef3:	mov    DWORD PTR [rcx],edx
   140007ef5:	mov    QWORD PTR [r9],rax
   140007ef8:	mov    QWORD PTR [rdi+0x58],rax
   140007efc:	lea    rax,[rdi+0x308]
   140007f03:	lea    rdx,[rdi+0x88]
   140007f0a:	mov    QWORD PTR [rsp+0x28],rax
   140007f0f:	mov    QWORD PTR [rsp+0x20],rcx
   140007f14:	xor    ecx,ecx
   140007f16:	lea    r8d,[rcx+0x13]
   140007f1a:	call   0x140008e14
   140007f1f:	mov    r10,QWORD PTR [rbp-0x10]
   140007f23:	xor    r11d,r11d
   140007f26:	mov    DWORD PTR [rbp+0x48],eax
   140007f29:	lea    edx,[r11+0x10]
   140007f2d:	test   eax,eax
   140007f2f:	je     0x140007f4f
   140007f31:	mov    r8d,DWORD PTR [rbp+0x60]
   140007f35:	mov    r9d,DWORD PTR [rbp+0x58]
   140007f39:	lea    rax,[rip+0x147e0]        # 0x14001c720
   140007f40:	mov    QWORD PTR [r14+0x20],rax
   140007f44:	mov    DWORD PTR [rdi],0x1b
   140007f4a:	jmp    0x140007463
   140007f4f:	mov    r8d,0x11
   140007f55:	mov    DWORD PTR [rdi+0x7c],r11d
   140007f59:	mov    DWORD PTR [rdi],r8d
   140007f5c:	jmp    0x140007f64
   140007f5e:	mov    r8d,0x11
   140007f64:	mov    eax,DWORD PTR [rdi+0x78]
   140007f67:	add    eax,DWORD PTR [rdi+0x74]
   140007f6a:	cmp    DWORD PTR [rdi+0x7c],eax
   140007f6d:	jae    0x14000818e
   140007f73:	jmp    0x140007f97
   140007f75:	test   r15d,r15d
   140007f78:	je     0x1400078ba
   140007f7e:	movzx  eax,BYTE PTR [r13+0x0]
   140007f83:	mov    ecx,esi
   140007f85:	inc    r13
   140007f88:	shl    eax,cl
   140007f8a:	dec    r15d
   140007f8d:	mov    QWORD PTR [rbp-0x18],r13
   140007f91:	add    r12d,eax
   140007f94:	add    esi,0x8
   140007f97:	mov    ecx,DWORD PTR [rdi+0x68]
   140007f9a:	mov    eax,0x1
   140007f9f:	shl    eax,cl
   140007fa1:	lea    ecx,[rax-0x1]
   140007fa4:	mov    eax,r12d
   140007fa7:	and    rcx,rax
   140007faa:	mov    rax,QWORD PTR [rdi+0x58]
   140007fae:	mov    eax,DWORD PTR [rax+rcx*4]
   140007fb1:	mov    ecx,eax
   140007fb3:	mov    DWORD PTR [rbp-0x24],eax
   140007fb6:	shr    ecx,0x8
   140007fb9:	movzx  ecx,cl
   140007fbc:	cmp    ecx,esi
   140007fbe:	ja     0x140007f75
   140007fc0:	mov    ecx,eax
   140007fc2:	shr    ecx,0x10
   140007fc5:	cmp    cx,dx
   140007fc8:	jae    0x14000801e
   140007fca:	shr    eax,0x8
   140007fcd:	movzx  ecx,al
   140007fd0:	cmp    esi,ecx
   140007fd2:	jae    0x140007ffe
   140007fd4:	test   r15d,r15d
   140007fd7:	je     0x1400078ba
   140007fdd:	movzx  eax,BYTE PTR [r13+0x0]
   140007fe2:	mov    ecx,esi
   140007fe4:	inc    r13
   140007fe7:	shl    eax,cl
   140007fe9:	add    esi,0x8
   140007fec:	dec    r15d
   140007fef:	add    r12d,eax
   140007ff2:	movzx  eax,BYTE PTR [rbp-0x23]
   140007ff6:	mov    QWORD PTR [rbp-0x18],r13
   140007ffa:	cmp    esi,eax
   140007ffc:	jb     0x140007fd4
   140007ffe:	movzx  ecx,BYTE PTR [rbp-0x23]
   140008002:	movzx  eax,WORD PTR [rbp-0x22]
   140008006:	shr    r12d,cl
   140008009:	sub    esi,ecx
   14000800b:	mov    ecx,DWORD PTR [rdi+0x7c]
   14000800e:	mov    WORD PTR [rdi+rcx*2+0x88],ax
   140008016:	inc    DWORD PTR [rdi+0x7c]
   140008019:	jmp    0x140008151
   14000801e:	cmp    WORD PTR [rbp-0x22],dx
   140008022:	jne    0x140008087
   140008024:	movzx  edx,BYTE PTR [rbp-0x23]
   140008028:	lea    r8d,[rdx+0x2]
   14000802c:	jmp    0x140008050
   14000802e:	test   r15d,r15d
   140008031:	je     0x1400078ba
   140008037:	movzx  eax,BYTE PTR [r13+0x0]
   14000803c:	mov    ecx,esi
   14000803e:	inc    r13
   140008041:	shl    eax,cl
   140008043:	dec    r15d
   140008046:	mov    QWORD PTR [rbp-0x18],r13
   14000804a:	add    r12d,eax
   14000804d:	add    esi,0x8
   140008050:	cmp    esi,r8d
   140008053:	jb     0x14000802e
   140008055:	mov    eax,DWORD PTR [rdi+0x7c]
   140008058:	mov    ecx,edx
   14000805a:	sub    esi,edx
   14000805c:	shr    r12d,cl
   14000805f:	test   eax,eax
   140008061:	je     0x140008167
   140008067:	mov    edx,r12d
   14000806a:	dec    eax
   14000806c:	shr    r12d,0x2
   140008070:	movzx  r9d,WORD PTR [rdi+rax*2+0x88]
   140008079:	and    edx,0x3
   14000807c:	add    edx,0x3
   14000807f:	add    esi,0xfffffffe
   140008082:	jmp    0x140008125
   140008087:	cmp    WORD PTR [rbp-0x22],r8w
   14000808c:	movzx  r8d,BYTE PTR [rbp-0x23]
   140008091:	jne    0x1400080d9
   140008093:	lea    edx,[r8+0x3]
   140008097:	jmp    0x1400080bb
   140008099:	test   r15d,r15d
   14000809c:	je     0x1400078ba
   1400080a2:	movzx  eax,BYTE PTR [r13+0x0]
   1400080a7:	mov    ecx,esi
   1400080a9:	inc    r13
   1400080ac:	shl    eax,cl
   1400080ae:	dec    r15d
   1400080b1:	mov    QWORD PTR [rbp-0x18],r13
   1400080b5:	add    r12d,eax
   1400080b8:	add    esi,0x8
   1400080bb:	cmp    esi,edx
   1400080bd:	jb     0x140008099
   1400080bf:	mov    ecx,r8d
   1400080c2:	mov    eax,0xfffffffd
   1400080c7:	shr    r12d,cl
   1400080ca:	mov    edx,r12d
   1400080cd:	and    edx,0x7
   1400080d0:	add    edx,0x3
   1400080d3:	shr    r12d,0x3
   1400080d7:	jmp    0x14000811d
   1400080d9:	lea    edx,[r8+0x7]
   1400080dd:	jmp    0x140008101
   1400080df:	test   r15d,r15d
   1400080e2:	je     0x1400078ba
   1400080e8:	movzx  eax,BYTE PTR [r13+0x0]
   1400080ed:	mov    ecx,esi
   1400080ef:	inc    r13
   1400080f2:	shl    eax,cl
   1400080f4:	dec    r15d
   1400080f7:	mov    QWORD PTR [rbp-0x18],r13
   1400080fb:	add    r12d,eax
   1400080fe:	add    esi,0x8
   140008101:	cmp    esi,edx
   140008103:	jb     0x1400080df
   140008105:	mov    ecx,r8d
   140008108:	mov    eax,0xfffffff9
   14000810d:	shr    r12d,cl
   140008110:	mov    edx,r12d
   140008113:	and    edx,0x7f
   140008116:	add    edx,0xb
   140008119:	shr    r12d,0x7
   14000811d:	sub    eax,r8d
   140008120:	mov    r9d,r11d
   140008123:	add    esi,eax
   140008125:	mov    eax,DWORD PTR [rdi+0x7c]
   140008128:	lea    ecx,[rdx+rax*1]
   14000812b:	mov    eax,DWORD PTR [rdi+0x78]
   14000812e:	add    eax,DWORD PTR [rdi+0x74]
   140008131:	cmp    ecx,eax
   140008133:	ja     0x14000817d
   140008135:	test   edx,edx
   140008137:	je     0x14000814c
   140008139:	mov    eax,DWORD PTR [rdi+0x7c]
   14000813c:	mov    WORD PTR [rdi+rax*2+0x88],r9w
   140008145:	inc    DWORD PTR [rdi+0x7c]
   140008148:	dec    edx
   14000814a:	jne    0x140008139
   14000814c:	mov    edx,0x10
   140008151:	mov    eax,DWORD PTR [rdi+0x78]
   140008154:	add    eax,DWORD PTR [rdi+0x74]
   140008157:	cmp    DWORD PTR [rdi+0x7c],eax
   14000815a:	jae    0x14000818e
   14000815c:	mov    r8d,0x11
   140008162:	jmp    0x140007f97
   140008167:	lea    rax,[rip+0x14592]        # 0x14001c700
   14000816e:	mov    QWORD PTR [r14+0x20],rax
   140008172:	mov    DWORD PTR [rdi],0x1b
   140008178:	jmp    0x140007999
   14000817d:	lea    rax,[rip+0x1457c]        # 0x14001c700
   140008184:	mov    QWORD PTR [r14+0x20],rax
   140008188:	mov    DWORD PTR [rdi],0x1b
   14000818e:	cmp    DWORD PTR [rdi],0x1b
   140008191:	mov    r8d,DWORD PTR [rbp+0x60]
   140008195:	mov    r9d,DWORD PTR [rbp+0x58]
   140008199:	mov    edx,0x10
   14000819e:	lea    eax,[rdx-0x9]
   1400081a1:	je     0x140007468
   1400081a7:	mov    r8d,DWORD PTR [rdi+0x74]
   1400081ab:	lea    rax,[rdi+0x548]
   1400081b2:	lea    r13,[rdi+0x308]
   1400081b9:	mov    QWORD PTR [rdi+0x80],rax
   1400081c0:	mov    QWORD PTR [rdi+0x58],rax
   1400081c4:	lea    rax,[rdi+0x68]
   1400081c8:	lea    rdx,[rdi+0x88]
   1400081cf:	lea    r9,[rdi+0x80]
   1400081d6:	mov    ecx,0x1
   1400081db:	mov    QWORD PTR [rsp+0x28],r13
   1400081e0:	mov    DWORD PTR [rax],0x9
   1400081e6:	mov    QWORD PTR [rsp+0x20],rax
   1400081eb:	call   0x140008e14
   1400081f0:	xor    r11d,r11d
   1400081f3:	mov    DWORD PTR [rbp+0x48],eax
   1400081f6:	test   eax,eax
   1400081f8:	je     0x140008217
   1400081fa:	mov    r13,QWORD PTR [rbp-0x18]
   1400081fe:	mov    ebx,DWORD PTR [rbp+0x50]
   140008201:	lea    rax,[rip+0x144d8]        # 0x14001c6e0
   140008208:	mov    QWORD PTR [r14+0x20],rax
   14000820c:	mov    DWORD PTR [rdi],0x1b
   140008212:	jmp    0x140007995
   140008217:	mov    rax,QWORD PTR [rdi+0x80]
   14000821e:	mov    r8d,DWORD PTR [rdi+0x78]
   140008222:	lea    rcx,[rdi+0x6c]
   140008226:	mov    QWORD PTR [rdi+0x60],rax
   14000822a:	mov    eax,DWORD PTR [rdi+0x74]
   14000822d:	mov    DWORD PTR [rcx],0x6
   140008233:	mov    QWORD PTR [rsp+0x28],r13
   140008238:	mov    QWORD PTR [rsp+0x20],rcx
   14000823d:	lea    r9,[rdi+0x80]
   140008244:	lea    rdx,[rdi+rax*2+0x88]
   14000824c:	mov    ecx,0x2
   140008251:	call   0x140008e14
   140008256:	mov    r13,QWORD PTR [rbp-0x18]
   14000825a:	mov    r8d,DWORD PTR [rbp+0x60]
   14000825e:	mov    r9d,DWORD PTR [rbp+0x58]
   140008262:	mov    r10,QWORD PTR [rbp-0x10]
   140008266:	mov    ebx,DWORD PTR [rbp+0x50]
   140008269:	xor    r11d,r11d
   14000826c:	mov    DWORD PTR [rbp+0x48],eax
   14000826f:	test   eax,eax
   140008271:	je     0x14000827f
   140008273:	lea    rax,[rip+0x1444e]        # 0x14001c6c8
   14000827a:	jmp    0x1400079fe
   14000827f:	mov    DWORD PTR [rdi],0x12
   140008285:	cmp    r15d,0x6
   140008289:	jb     0x1400082d4
   14000828b:	cmp    r9d,0x102
   140008292:	jb     0x1400082d4
   140008294:	mov    QWORD PTR [r14+0x10],r10
   140008298:	mov    DWORD PTR [r14+0x18],r9d
   14000829c:	mov    QWORD PTR [r14],r13
   14000829f:	mov    DWORD PTR [r14+0x8],r15d
   1400082a3:	mov    edx,r8d
   1400082a6:	mov    rcx,r14
   1400082a9:	mov    DWORD PTR [rdi+0x40],r12d
   1400082ad:	mov    DWORD PTR [rdi+0x44],esi
   1400082b0:	call   0x1400089b4
   1400082b5:	mov    r13,QWORD PTR [r14]
   1400082b8:	mov    r10,QWORD PTR [r14+0x10]
   1400082bc:	mov    r9d,DWORD PTR [r14+0x18]
   1400082c0:	mov    r15d,DWORD PTR [r14+0x8]
   1400082c4:	mov    r12d,DWORD PTR [rdi+0x40]
   1400082c8:	mov    esi,DWORD PTR [rdi+0x44]
   1400082cb:	mov    QWORD PTR [rbp-0x18],r13
   1400082cf:	jmp    0x140007b9a
   1400082d4:	mov    ecx,DWORD PTR [rdi+0x68]
   1400082d7:	mov    r11,QWORD PTR [rdi+0x58]
   1400082db:	mov    eax,0x1
   1400082e0:	shl    eax,cl
   1400082e2:	lea    ecx,[rax-0x1]
   1400082e5:	mov    eax,r12d
   1400082e8:	and    rcx,rax
   1400082eb:	mov    eax,DWORD PTR [r11+rcx*4]
   1400082ef:	jmp    0x14000832d
   1400082f1:	test   r15d,r15d
   1400082f4:	je     0x1400078ba
   1400082fa:	movzx  eax,BYTE PTR [r13+0x0]
   1400082ff:	mov    ecx,esi
   140008301:	inc    r13
   140008304:	shl    eax,cl
   140008306:	mov    ecx,DWORD PTR [rdi+0x68]
   140008309:	dec    r15d
   14000830c:	add    r12d,eax
   14000830f:	mov    eax,0x1
   140008314:	add    esi,0x8
   140008317:	shl    eax,cl
   140008319:	mov    QWORD PTR [rbp-0x18],r13
   14000831d:	lea    ecx,[rax-0x1]
   140008320:	mov    eax,r12d
   140008323:	and    rcx,rax
   140008326:	mov    rax,QWORD PTR [rdi+0x58]
   14000832a:	mov    eax,DWORD PTR [rax+rcx*4]
   14000832d:	mov    ecx,eax
   14000832f:	shr    ecx,0x8
   140008332:	movzx  ecx,cl
   140008335:	cmp    ecx,esi
   140008337:	ja     0x1400082f1
   140008339:	test   al,al
   14000833b:	je     0x1400083fb
   140008341:	test   al,0xf0
   140008343:	jne    0x1400083fb
   140008349:	mov    r10d,eax
   14000834c:	movzx  ecx,al
   14000834f:	mov    r9d,0x1
   140008355:	shr    r10d,0x8
   140008359:	mov    edx,eax
   14000835b:	mov    DWORD PTR [rbp-0x24],eax
   14000835e:	movzx  r8d,r10b
   140008362:	shr    eax,0x10
   140008365:	add    ecx,r8d
   140008368:	shl    r9d,cl
   14000836b:	mov    ecx,r8d
   14000836e:	dec    r9d
   140008371:	and    r9d,r12d
   140008374:	shr    r9d,cl
   140008377:	add    r9d,eax
   14000837a:	mov    eax,DWORD PTR [r11+r9*4]
   14000837e:	mov    ecx,eax
   140008380:	shr    ecx,0x8
   140008383:	movzx  r8d,cl
   140008387:	movzx  ecx,r10b
   14000838b:	add    r8d,ecx
   14000838e:	jmp    0x1400083ed
   140008390:	test   r15d,r15d
   140008393:	je     0x1400078ba
   140008399:	movzx  eax,BYTE PTR [r13+0x0]
   14000839e:	movzx  r9d,BYTE PTR [rbp-0x23]
   1400083a3:	mov    ecx,esi
   1400083a5:	shl    eax,cl
   1400083a7:	mov    r8d,0x1
   1400083ad:	movzx  ecx,dl
   1400083b0:	add    ecx,r9d
   1400083b3:	add    r12d,eax
   1400083b6:	movzx  eax,WORD PTR [rbp-0x22]
   1400083ba:	shl    r8d,cl
   1400083bd:	mov    ecx,r9d
   1400083c0:	inc    r13
   1400083c3:	dec    r8d
   1400083c6:	dec    r15d
   1400083c9:	add    esi,0x8
   1400083cc:	and    r8d,r12d
   1400083cf:	mov    QWORD PTR [rbp-0x18],r13
   1400083d3:	shr    r8d,cl
   1400083d6:	add    r8d,eax
   1400083d9:	mov    rax,QWORD PTR [rdi+0x58]
   1400083dd:	mov    eax,DWORD PTR [rax+r8*4]
   1400083e1:	mov    ecx,eax
   1400083e3:	shr    ecx,0x8
   1400083e6:	movzx  r8d,cl
   1400083ea:	add    r8d,r9d
   1400083ed:	cmp    r8d,esi
   1400083f0:	ja     0x140008390
   1400083f2:	movzx  ecx,BYTE PTR [rbp-0x23]
   1400083f6:	shr    r12d,cl
   1400083f9:	sub    esi,ecx
   1400083fb:	mov    ecx,eax
   1400083fd:	xor    r11d,r11d
   140008400:	shr    ecx,0x8
   140008403:	movzx  ecx,cl
   140008406:	shr    r12d,cl
   140008409:	sub    esi,ecx
   14000840b:	mov    ecx,eax
   14000840d:	shr    ecx,0x10
   140008410:	mov    DWORD PTR [rdi+0x48],ecx
   140008413:	test   al,al
   140008415:	jne    0x140008422
   140008417:	mov    DWORD PTR [rdi],0x17
   14000841d:	jmp    0x140007995
   140008422:	test   al,0x20
   140008424:	je     0x140008431
   140008426:	mov    DWORD PTR [rdi],0xb
   14000842c:	jmp    0x140007995
   140008431:	test   al,0x40
   140008433:	je     0x14000844b
   140008435:	lea    rax,[rip+0x1426c]        # 0x14001c6a8
   14000843c:	mov    QWORD PTR [r14+0x20],rax
   140008440:	mov    DWORD PTR [rdi],0x1b
   140008446:	jmp    0x140007995
   14000844b:	movzx  ecx,al
   14000844e:	mov    DWORD PTR [rdi],0x13
   140008454:	and    ecx,0xf
   140008457:	mov    DWORD PTR [rdi+0x50],ecx
   14000845a:	mov    edx,DWORD PTR [rdi+0x50]
   14000845d:	test   edx,edx
   14000845f:	je     0x1400084a2
   140008461:	cmp    esi,edx
   140008463:	jae    0x14000848c
   140008465:	test   r15d,r15d
   140008468:	je     0x1400078ba
   14000846e:	movzx  eax,BYTE PTR [r13+0x0]
   140008473:	mov    ecx,esi
   140008475:	inc    r13
   140008478:	shl    eax,cl
   14000847a:	add    esi,0x8
   14000847d:	dec    r15d
   140008480:	add    r12d,eax
   140008483:	mov    QWORD PTR [rbp-0x18],r13
   140008487:	cmp    esi,DWORD PTR [rdi+0x50]
   14000848a:	jb     0x140008465
   14000848c:	mov    ecx,edx
   14000848e:	mov    eax,0x1
   140008493:	shl    eax,cl
   140008495:	dec    eax
   140008497:	and    eax,r12d
   14000849a:	shr    r12d,cl
   14000849d:	add    DWORD PTR [rdi+0x48],eax
   1400084a0:	sub    esi,edx
   1400084a2:	mov    DWORD PTR [rdi],0x14
   1400084a8:	mov    ecx,DWORD PTR [rdi+0x6c]
   1400084ab:	mov    r11,QWORD PTR [rdi+0x60]
   1400084af:	mov    eax,0x1
   1400084b4:	shl    eax,cl
   1400084b6:	lea    ecx,[rax-0x1]
   1400084b9:	mov    eax,r12d
   1400084bc:	and    rcx,rax
   1400084bf:	mov    eax,DWORD PTR [r11+rcx*4]
   1400084c3:	jmp    0x140008501
   1400084c5:	test   r15d,r15d
   1400084c8:	je     0x1400078ba
   1400084ce:	movzx  eax,BYTE PTR [r13+0x0]
   1400084d3:	mov    ecx,esi
   1400084d5:	inc    r13
   1400084d8:	shl    eax,cl
   1400084da:	mov    ecx,DWORD PTR [rdi+0x6c]
   1400084dd:	dec    r15d
   1400084e0:	add    r12d,eax
   1400084e3:	mov    eax,0x1
   1400084e8:	add    esi,0x8
   1400084eb:	shl    eax,cl
   1400084ed:	mov    QWORD PTR [rbp-0x18],r13
   1400084f1:	lea    ecx,[rax-0x1]
   1400084f4:	mov    eax,r12d
   1400084f7:	and    rcx,rax
   1400084fa:	mov    rax,QWORD PTR [rdi+0x60]
   1400084fe:	mov    eax,DWORD PTR [rax+rcx*4]
   140008501:	mov    ecx,eax
   140008503:	shr    ecx,0x8
   140008506:	movzx  ecx,cl
   140008509:	cmp    ecx,esi
   14000850b:	ja     0x1400084c5
   14000850d:	test   al,0xf0
   14000850f:	jne    0x1400085c7
   140008515:	mov    r10d,eax
   140008518:	movzx  ecx,al
   14000851b:	mov    r9d,0x1
   140008521:	shr    r10d,0x8
   140008525:	mov    edx,eax
   140008527:	mov    DWORD PTR [rbp-0x24],eax
   14000852a:	movzx  r8d,r10b
   14000852e:	shr    eax,0x10
   140008531:	add    ecx,r8d
   140008534:	shl    r9d,cl
   140008537:	mov    ecx,r8d
   14000853a:	dec    r9d
   14000853d:	and    r9d,r12d
   140008540:	shr    r9d,cl
   140008543:	add    r9d,eax
   140008546:	mov    eax,DWORD PTR [r11+r9*4]
   14000854a:	mov    ecx,eax
   14000854c:	shr    ecx,0x8
   14000854f:	movzx  r8d,cl
   140008553:	movzx  ecx,r10b
   140008557:	add    r8d,ecx
   14000855a:	jmp    0x1400085b9
   14000855c:	test   r15d,r15d
   14000855f:	je     0x1400078ba
   140008565:	movzx  eax,BYTE PTR [r13+0x0]
   14000856a:	movzx  r9d,BYTE PTR [rbp-0x23]
   14000856f:	mov    ecx,esi
   140008571:	shl    eax,cl
   140008573:	mov    r8d,0x1
   140008579:	movzx  ecx,dl
   14000857c:	add    ecx,r9d
   14000857f:	add    r12d,eax
   140008582:	movzx  eax,WORD PTR [rbp-0x22]
   140008586:	shl    r8d,cl
   140008589:	mov    ecx,r9d
   14000858c:	inc    r13
   14000858f:	dec    r8d
   140008592:	dec    r15d
   140008595:	add    esi,0x8
   140008598:	and    r8d,r12d
   14000859b:	mov    QWORD PTR [rbp-0x18],r13
   14000859f:	shr    r8d,cl
   1400085a2:	add    r8d,eax
   1400085a5:	mov    rax,QWORD PTR [rdi+0x60]
   1400085a9:	mov    eax,DWORD PTR [rax+r8*4]
   1400085ad:	mov    ecx,eax
   1400085af:	shr    ecx,0x8
   1400085b2:	movzx  r8d,cl
   1400085b6:	add    r8d,r9d
   1400085b9:	cmp    r8d,esi
   1400085bc:	ja     0x14000855c
   1400085be:	movzx  ecx,BYTE PTR [rbp-0x23]
   1400085c2:	shr    r12d,cl
   1400085c5:	sub    esi,ecx
   1400085c7:	mov    r8d,DWORD PTR [rbp+0x60]
   1400085cb:	mov    r9d,DWORD PTR [rbp+0x58]
   1400085cf:	mov    r10,QWORD PTR [rbp-0x10]
   1400085d3:	mov    ecx,eax
   1400085d5:	shr    ecx,0x8
   1400085d8:	movzx  ecx,cl
   1400085db:	shr    r12d,cl
   1400085de:	sub    esi,ecx
   1400085e0:	test   al,0x40
   1400085e2:	je     0x1400085fa
   1400085e4:	lea    rax,[rip+0x140a5]        # 0x14001c690
   1400085eb:	mov    QWORD PTR [r14+0x20],rax
   1400085ef:	mov    DWORD PTR [rdi],0x1b
   1400085f5:	jmp    0x140007d8c
   1400085fa:	mov    ecx,eax
   1400085fc:	mov    DWORD PTR [rdi],0x15
   140008602:	shr    ecx,0x10
   140008605:	mov    DWORD PTR [rdi+0x4c],ecx
   140008608:	movzx  ecx,al
   14000860b:	and    ecx,0xf
   14000860e:	xor    r11d,r11d
   140008611:	mov    DWORD PTR [rdi+0x50],ecx
   140008614:	mov    edx,DWORD PTR [rdi+0x50]
   140008617:	test   edx,edx
   140008619:	je     0x14000865c
   14000861b:	cmp    esi,edx
   14000861d:	jae    0x140008646
   14000861f:	test   r15d,r15d
   140008622:	je     0x1400078ba
   140008628:	movzx  eax,BYTE PTR [r13+0x0]
   14000862d:	mov    ecx,esi
   14000862f:	inc    r13
   140008632:	shl    eax,cl
   140008634:	add    esi,0x8
   140008637:	dec    r15d
   14000863a:	add    r12d,eax
   14000863d:	mov    QWORD PTR [rbp-0x18],r13
   140008641:	cmp    esi,DWORD PTR [rdi+0x50]
   140008644:	jb     0x14000861f
   140008646:	mov    ecx,edx
   140008648:	mov    eax,0x1
   14000864d:	shl    eax,cl
   14000864f:	dec    eax
   140008651:	and    eax,r12d
   140008654:	shr    r12d,cl
   140008657:	add    DWORD PTR [rdi+0x4c],eax
   14000865a:	sub    esi,edx
   14000865c:	mov    eax,DWORD PTR [rdi+0x30]
   14000865f:	sub    eax,r9d
   140008662:	add    eax,r8d
   140008665:	cmp    DWORD PTR [rdi+0x4c],eax
   140008668:	jbe    0x140008676
   14000866a:	lea    rax,[rip+0x13fff]        # 0x14001c670
   140008671:	jmp    0x1400079fe
   140008676:	mov    DWORD PTR [rdi],0x16
   14000867c:	test   r9d,r9d
   14000867f:	je     0x1400078ba
   140008685:	mov    ecx,DWORD PTR [rdi+0x4c]
   140008688:	mov    eax,r8d
   14000868b:	sub    eax,r9d
   14000868e:	cmp    ecx,eax
   140008690:	jbe    0x1400086c1
   140008692:	sub    ecx,eax
   140008694:	mov    eax,DWORD PTR [rdi+0x34]
   140008697:	cmp    ecx,eax
   140008699:	jbe    0x1400086b0
   14000869b:	mov    edx,DWORD PTR [rdi+0x2c]
   14000869e:	sub    ecx,eax
   1400086a0:	sub    edx,ecx
   1400086a2:	jmp    0x1400086b4
   1400086a4:	lea    rax,[rip+0x13f9d]        # 0x14001c648
   1400086ab:	jmp    0x1400079fe
   1400086b0:	sub    eax,ecx
   1400086b2:	mov    edx,eax
   1400086b4:	mov    eax,DWORD PTR [rdi+0x48]
   1400086b7:	add    rdx,QWORD PTR [rdi+0x38]
   1400086bb:	cmp    ecx,eax
   1400086bd:	jbe    0x1400086cc
   1400086bf:	jmp    0x1400086ca
   1400086c1:	mov    eax,DWORD PTR [rdi+0x48]
   1400086c4:	mov    rdx,r10
   1400086c7:	sub    rdx,rcx
   1400086ca:	mov    ecx,eax
   1400086cc:	cmp    ecx,r9d
   1400086cf:	cmova  ecx,r9d
   1400086d3:	sub    r9d,ecx
   1400086d6:	sub    eax,ecx
   1400086d8:	sub    rdx,r10
   1400086db:	mov    DWORD PTR [rbp+0x58],r9d
   1400086df:	mov    DWORD PTR [rdi+0x48],eax
   1400086e2:	mov    al,BYTE PTR [rdx+r10*1]
   1400086e6:	mov    BYTE PTR [r10],al
   1400086e9:	inc    r10
   1400086ec:	dec    ecx
   1400086ee:	jne    0x1400086e2
   1400086f0:	mov    QWORD PTR [rbp-0x10],r10
   1400086f4:	lea    edx,[rcx+0x10]
   1400086f7:	lea    eax,[rcx+0x7]
   1400086fa:	cmp    DWORD PTR [rdi+0x48],r11d
   1400086fe:	jne    0x140007468
   140008704:	mov    DWORD PTR [rdi],0x12
   14000870a:	jmp    0x140007468
   14000870f:	sub    ecx,0x17
   140008712:	je     0x140008861
   140008718:	dec    ecx
   14000871a:	je     0x140008746
   14000871c:	dec    ecx
   14000871e:	je     0x140008812
   140008724:	dec    ecx
   140008726:	je     0x1400088b8
   14000872c:	dec    ecx
   14000872e:	je     0x1400088a1
   140008734:	dec    ecx
   140008736:	jne    0x1400074bb
   14000873c:	mov    eax,0xfffffffc
   140008741:	jmp    0x1400074c0
   140008746:	cmp    DWORD PTR [rdi+0x8],r11d
   14000874a:	je     0x14000880c
   140008750:	jmp    0x140008774
   140008752:	test   r15d,r15d
   140008755:	je     0x1400078ba
   14000875b:	movzx  eax,BYTE PTR [r13+0x0]
   140008760:	mov    ecx,esi
   140008762:	inc    r13
   140008765:	shl    eax,cl
   140008767:	dec    r15d
   14000876a:	mov    QWORD PTR [rbp-0x18],r13
   14000876e:	add    r12d,eax
   140008771:	add    esi,0x8
   140008774:	cmp    esi,0x20
   140008777:	jb     0x140008752
   140008779:	sub    r8d,r9d
   14000877c:	add    DWORD PTR [r14+0x1c],r8d
   140008780:	add    DWORD PTR [rdi+0x1c],r8d
   140008784:	test   r8d,r8d
   140008787:	je     0x1400087bd
   140008789:	mov    ecx,DWORD PTR [rdi+0x18]
   14000878c:	mov    eax,r8d
   14000878f:	mov    rdx,r10
   140008792:	sub    rdx,rax
   140008795:	cmp    DWORD PTR [rdi+0x10],r11d
   140008799:	je     0x1400087a2
   14000879b:	call   0x14000985c
   1400087a0:	jmp    0x1400087a7
   1400087a2:	call   0x14000927c
   1400087a7:	mov    r9d,DWORD PTR [rbp+0x58]
   1400087ab:	mov    r10,QWORD PTR [rbp-0x10]
   1400087af:	xor    r11d,r11d
   1400087b2:	mov    DWORD PTR [rdi+0x18],eax
   1400087b5:	lea    edx,[r11+0x10]
   1400087b9:	mov    DWORD PTR [r14+0x4c],eax
   1400087bd:	mov    ecx,r12d
   1400087c0:	mov    eax,r12d
   1400087c3:	mov    r8d,r9d
   1400087c6:	shl    eax,0x10
   1400087c9:	and    ecx,0xff00
   1400087cf:	mov    DWORD PTR [rbp+0x60],r9d
   1400087d3:	add    ecx,eax
   1400087d5:	mov    eax,r12d
   1400087d8:	shr    eax,0x8
   1400087db:	shl    ecx,0x8
   1400087de:	and    eax,0xff00
   1400087e3:	add    ecx,eax
   1400087e5:	mov    eax,r12d
   1400087e8:	shr    eax,0x18
   1400087eb:	add    ecx,eax
   1400087ed:	cmp    DWORD PTR [rdi+0x10],r11d
   1400087f1:	cmovne ecx,r12d
   1400087f5:	cmp    ecx,DWORD PTR [rdi+0x18]
   1400087f8:	je     0x140008806
   1400087fa:	lea    rax,[rip+0x13e2f]        # 0x14001c630
   140008801:	jmp    0x140007a68
   140008806:	mov    r12d,r11d
   140008809:	mov    esi,r11d
   14000880c:	mov    DWORD PTR [rdi],0x19
   140008812:	cmp    DWORD PTR [rdi+0x8],r11d
   140008816:	je     0x1400088b2
   14000881c:	cmp    DWORD PTR [rdi+0x10],r11d
   140008820:	je     0x1400088b2
   140008826:	jmp    0x14000884a
   140008828:	test   r15d,r15d
   14000882b:	je     0x1400078ba
   140008831:	movzx  eax,BYTE PTR [r13+0x0]
   140008836:	mov    ecx,esi
   140008838:	inc    r13
   14000883b:	shl    eax,cl
   14000883d:	dec    r15d
   140008840:	mov    QWORD PTR [rbp-0x18],r13
   140008844:	add    r12d,eax
   140008847:	add    esi,0x8
   14000884a:	cmp    esi,0x20
   14000884d:	jb     0x140008828
   14000884f:	cmp    r12d,DWORD PTR [rdi+0x1c]
   140008853:	je     0x1400088ac
   140008855:	lea    rax,[rip+0x13dbc]        # 0x14001c618
   14000885c:	jmp    0x140007a68
   140008861:	test   r9d,r9d
   140008864:	je     0x1400078ba
   14000886a:	mov    al,BYTE PTR [rdi+0x48]
   14000886d:	mov    BYTE PTR [r10],al
   140008870:	inc    r10
   140008873:	dec    r9d
   140008876:	mov    DWORD PTR [rdi],0x12
   14000887c:	jmp    0x14000745b
   140008881:	mov    QWORD PTR [r14+0x10],r10
   140008885:	mov    DWORD PTR [r14+0x18],r9d
   140008889:	mov    QWORD PTR [r14],r13
   14000888c:	mov    DWORD PTR [r14+0x8],r15d
   140008890:	mov    eax,0x2
   140008895:	mov    DWORD PTR [rdi+0x40],r12d
   140008899:	mov    DWORD PTR [rdi+0x44],esi
   14000889c:	jmp    0x1400074c0
   1400088a1:	mov    r13d,0xfffffffd
   1400088a7:	jmp    0x1400078be
   1400088ac:	mov    r12d,r11d
   1400088af:	mov    esi,r11d
   1400088b2:	mov    DWORD PTR [rdi],0x1a
   1400088b8:	mov    r13d,0x1
   1400088be:	jmp    0x1400078be
   1400088c3:	sub    ebx,DWORD PTR [r14+0x18]
   1400088c7:	mov    esi,DWORD PTR [rbp-0x20]
   1400088ca:	sub    esi,DWORD PTR [r14+0x8]
   1400088ce:	add    DWORD PTR [r14+0x1c],ebx
   1400088d2:	add    DWORD PTR [r14+0xc],esi
   1400088d6:	add    DWORD PTR [rdi+0x1c],ebx
   1400088d9:	cmp    DWORD PTR [rdi+0x8],r12d
   1400088dd:	je     0x14000890b
   1400088df:	test   ebx,ebx
   1400088e1:	je     0x14000890b
   1400088e3:	mov    rdx,QWORD PTR [r14+0x10]
   1400088e7:	mov    ecx,DWORD PTR [rdi+0x18]
   1400088ea:	mov    eax,ebx
   1400088ec:	sub    rdx,rax
   1400088ef:	mov    r8d,ebx
   1400088f2:	cmp    DWORD PTR [rdi+0x10],r12d
   1400088f6:	je     0x1400088ff
   1400088f8:	call   0x14000985c
   1400088fd:	jmp    0x140008904
   1400088ff:	call   0x14000927c
   140008904:	mov    DWORD PTR [rdi+0x18],eax
   140008907:	mov    DWORD PTR [r14+0x4c],eax
   14000890b:	mov    eax,DWORD PTR [rdi+0x4]
   14000890e:	mov    edx,0x80
   140008913:	neg    eax
   140008915:	mov    eax,r12d
   140008918:	sbb    ecx,ecx
   14000891a:	and    ecx,0x40
   14000891d:	cmp    DWORD PTR [rdi],0xb
   140008920:	cmove  eax,edx
   140008923:	add    ecx,eax
   140008925:	add    ecx,DWORD PTR [rdi+0x44]
   140008928:	mov    DWORD PTR [r14+0x48],ecx
   14000892c:	test   esi,esi
   14000892e:	jne    0x140008934
   140008930:	test   ebx,ebx
   140008932:	je     0x14000893a
   140008934:	cmp    DWORD PTR [rbp+0x50],0x4
   140008938:	jne    0x140008946
   14000893a:	mov    eax,0xfffffffb
   14000893f:	test   r13d,r13d
   140008942:	cmove  r13d,eax
   140008946:	mov    eax,r13d
   140008949:	jmp    0x1400074c0
   14000894e:	int3   
   14000894f:	int3   
   140008950:	rex push rbx
   140008952:	sub    rsp,0x20
   140008956:	mov    rbx,rcx
   140008959:	test   rcx,rcx
   14000895c:	je     0x140008994
   14000895e:	mov    rax,QWORD PTR [rcx+0x28]
   140008962:	test   rax,rax
   140008965:	je     0x140008994
   140008967:	mov    r8,QWORD PTR [rcx+0x38]
   14000896b:	test   r8,r8
   14000896e:	je     0x140008994
   140008970:	mov    rdx,QWORD PTR [rax+0x38]
   140008974:	test   rdx,rdx
   140008977:	je     0x140008980
   140008979:	mov    rcx,QWORD PTR [rcx+0x40]
   14000897d:	call   r8
   140008980:	mov    rdx,QWORD PTR [rbx+0x28]
   140008984:	mov    rcx,QWORD PTR [rbx+0x40]
   140008988:	call   QWORD PTR [rbx+0x38]
   14000898b:	and    QWORD PTR [rbx+0x28],0x0
   140008990:	xor    eax,eax
   140008992:	jmp    0x140008999
   140008994:	mov    eax,0xfffffffe
   140008999:	add    rsp,0x20
   14000899d:	pop    rbx
   14000899e:	ret    
   14000899f:	int3   
   1400089a0:	imul   edx,r8d
   1400089a4:	mov    ecx,edx
   1400089a6:	jmp    0x14000b2d4
   1400089ab:	int3   
   1400089ac:	mov    rcx,rdx
   1400089af:	jmp    0x14000b460
   1400089b4:	rex push rbx
   1400089b6:	push   rbp
   1400089b7:	push   rsi
   1400089b8:	push   rdi
   1400089b9:	push   r12
   1400089bb:	push   r13
   1400089bd:	push   r14
   1400089bf:	push   r15
   1400089c1:	sub    rsp,0x38
   1400089c5:	mov    r12,QWORD PTR [rcx+0x28]
   1400089c9:	mov    r14d,DWORD PTR [rcx+0x8]
   1400089cd:	mov    rdi,QWORD PTR [rcx]
   1400089d0:	mov    r8,QWORD PTR [rcx+0x10]
   1400089d4:	mov    r9,QWORD PTR [r12+0x58]
   1400089d9:	mov    rsi,QWORD PTR [r12+0x60]
   1400089de:	mov    r13d,DWORD PTR [r12+0x34]
   1400089e3:	mov    ebx,DWORD PTR [r12+0x40]
   1400089e8:	mov    r10d,DWORD PTR [r12+0x44]
   1400089ed:	mov    rbp,rcx
   1400089f0:	mov    ecx,DWORD PTR [rcx+0x18]
   1400089f3:	dec    r8
   1400089f6:	sub    edx,ecx
   1400089f8:	lea    r15d,[rcx-0x101]
   1400089ff:	mov    ecx,DWORD PTR [r12+0x68]
   140008a04:	mov    eax,edx
   140008a06:	mov    rdx,r8
   140008a09:	dec    rdi
   140008a0c:	sub    rdx,rax
   140008a0f:	mov    eax,DWORD PTR [r12+0x2c]
   140008a14:	add    r14d,0xfffffffb
   140008a18:	mov    DWORD PTR [rsp+0x80],eax
   140008a1f:	mov    eax,DWORD PTR [r12+0x30]
   140008a24:	mov    QWORD PTR [rsp+0x10],rdx
   140008a29:	mov    DWORD PTR [rsp+0x98],eax
   140008a30:	mov    rax,QWORD PTR [r12+0x38]
   140008a35:	mov    edx,0x1
   140008a3a:	mov    QWORD PTR [rsp+0x18],rax
   140008a3f:	mov    eax,0x1
   140008a44:	add    r14,rdi
   140008a47:	shl    eax,cl
   140008a49:	mov    ecx,DWORD PTR [r12+0x6c]
   140008a4e:	add    r15,r8
   140008a51:	shl    edx,cl
   140008a53:	dec    eax
   140008a55:	mov    QWORD PTR [rsp+0x8],r9
   140008a5a:	dec    edx
   140008a5c:	mov    QWORD PTR [rsp],rsi
   140008a60:	mov    DWORD PTR [rsp+0x90],edx
   140008a67:	mov    edx,eax
   140008a69:	mov    QWORD PTR [rsp+0x20],rdx
   140008a6e:	cmp    r10d,0xf
   140008a72:	jae    0x140008a92
   140008a74:	movzx  eax,BYTE PTR [rdi+0x1]
   140008a78:	mov    ecx,r10d
   140008a7b:	add    rdi,0x2
   140008a7f:	shl    eax,cl
   140008a81:	lea    ecx,[r10+0x8]
   140008a85:	add    ebx,eax
   140008a87:	movzx  eax,BYTE PTR [rdi]
   140008a8a:	shl    eax,cl
   140008a8c:	add    ebx,eax
   140008a8e:	add    r10d,0x10
   140008a92:	mov    eax,ebx
   140008a94:	and    rax,rdx
   140008a97:	jmp    0x140008abb
   140008a99:	test   dl,0x10
   140008a9c:	jne    0x140008ae5
   140008a9e:	test   dl,0x40
   140008aa1:	jne    0x140008d78
   140008aa7:	mov    ecx,edx
   140008aa9:	mov    eax,0x1
   140008aae:	shr    r11d,0x10
   140008ab2:	shl    eax,cl
   140008ab4:	dec    eax
   140008ab6:	and    eax,ebx
   140008ab8:	add    eax,r11d
   140008abb:	mov    r11d,DWORD PTR [r9+rax*4]
   140008abf:	mov    eax,r11d
   140008ac2:	movzx  edx,r11b
   140008ac6:	shr    eax,0x8
   140008ac9:	movzx  ecx,al
   140008acc:	shr    ebx,cl
   140008ace:	sub    r10d,ecx
   140008ad1:	test   r11b,r11b
   140008ad4:	jne    0x140008a99
   140008ad6:	inc    r8
   140008ad9:	shr    r11d,0x10
   140008add:	mov    BYTE PTR [r8],r11b
   140008ae0:	jmp    0x140008d64
   140008ae5:	shr    r11d,0x10
   140008ae9:	and    edx,0xf
   140008aec:	je     0x140008b19
   140008aee:	cmp    r10d,edx
   140008af1:	jae    0x140008b04
   140008af3:	inc    rdi
   140008af6:	mov    ecx,r10d
   140008af9:	movzx  eax,BYTE PTR [rdi]
   140008afc:	shl    eax,cl
   140008afe:	add    ebx,eax
   140008b00:	add    r10d,0x8
   140008b04:	mov    ecx,edx
   140008b06:	mov    eax,0x1
   140008b0b:	shl    eax,cl
   140008b0d:	dec    eax
   140008b0f:	and    eax,ebx
   140008b11:	shr    ebx,cl
   140008b13:	add    r11d,eax
   140008b16:	sub    r10d,edx
   140008b19:	cmp    r10d,0xf
   140008b1d:	jae    0x140008b3d
   140008b1f:	movzx  eax,BYTE PTR [rdi+0x1]
   140008b23:	mov    ecx,r10d
   140008b26:	add    rdi,0x2
   140008b2a:	shl    eax,cl
   140008b2c:	lea    ecx,[r10+0x8]
   140008b30:	add    ebx,eax
   140008b32:	movzx  eax,BYTE PTR [rdi]
   140008b35:	shl    eax,cl
   140008b37:	add    ebx,eax
   140008b39:	add    r10d,0x10
   140008b3d:	mov    ecx,DWORD PTR [rsp+0x90]
   140008b44:	mov    eax,ebx
   140008b46:	and    rcx,rax
   140008b49:	mov    esi,DWORD PTR [rsi+rcx*4]
   140008b4c:	jmp    0x140008b75
   140008b4e:	test   dl,0x40
   140008b51:	jne    0x140008d90
   140008b57:	movzx  eax,WORD PTR [rsp+0x8a]
   140008b5f:	mov    ecx,edx
   140008b61:	mov    edx,0x1
   140008b66:	shl    edx,cl
   140008b68:	mov    rcx,QWORD PTR [rsp]
   140008b6c:	dec    edx
   140008b6e:	and    edx,ebx
   140008b70:	add    edx,eax
   140008b72:	mov    esi,DWORD PTR [rcx+rdx*4]
   140008b75:	mov    eax,esi
   140008b77:	movzx  edx,sil
   140008b7b:	mov    DWORD PTR [rsp+0x88],esi
   140008b82:	shr    eax,0x8
   140008b85:	movzx  ecx,al
   140008b88:	shr    ebx,cl
   140008b8a:	sub    r10d,ecx
   140008b8d:	test   dl,0x10
   140008b90:	je     0x140008b4e
   140008b92:	and    edx,0xf
   140008b95:	shr    esi,0x10
   140008b98:	cmp    r10d,edx
   140008b9b:	jae    0x140008bc4
   140008b9d:	inc    rdi
   140008ba0:	mov    ecx,r10d
   140008ba3:	add    r10d,0x8
   140008ba7:	movzx  eax,BYTE PTR [rdi]
   140008baa:	shl    eax,cl
   140008bac:	add    ebx,eax
   140008bae:	cmp    r10d,edx
   140008bb1:	jae    0x140008bc4
   140008bb3:	inc    rdi
   140008bb6:	mov    ecx,r10d
   140008bb9:	movzx  eax,BYTE PTR [rdi]
   140008bbc:	shl    eax,cl
   140008bbe:	add    ebx,eax
   140008bc0:	add    r10d,0x8
   140008bc4:	mov    ecx,edx
   140008bc6:	mov    eax,0x1
   140008bcb:	sub    r10d,edx
   140008bce:	shl    eax,cl
   140008bd0:	dec    eax
   140008bd2:	and    eax,ebx
   140008bd4:	shr    ebx,cl
   140008bd6:	add    esi,eax
   140008bd8:	mov    eax,r8d
   140008bdb:	sub    eax,DWORD PTR [rsp+0x10]
   140008bdf:	cmp    esi,eax
   140008be1:	jbe    0x140008d0b
   140008be7:	mov    ecx,esi
   140008be9:	sub    ecx,eax
   140008beb:	cmp    ecx,DWORD PTR [rsp+0x98]
   140008bf2:	ja     0x140008d99
   140008bf8:	mov    rdx,QWORD PTR [rsp+0x18]
   140008bfd:	lea    r9,[rdx-0x1]
   140008c01:	test   r13d,r13d
   140008c04:	jne    0x140008c30
   140008c06:	mov    eax,DWORD PTR [rsp+0x80]
   140008c0d:	sub    eax,ecx
   140008c0f:	add    r9,rax
   140008c12:	cmp    ecx,r11d
   140008c15:	jae    0x140008ca4
   140008c1b:	sub    r11d,ecx
   140008c1e:	inc    r9
   140008c21:	inc    r8
   140008c24:	dec    ecx
   140008c26:	mov    al,BYTE PTR [r9]
   140008c29:	mov    BYTE PTR [r8],al
   140008c2c:	jne    0x140008c1e
   140008c2e:	jmp    0x140008c9c
   140008c30:	mov    eax,r13d
   140008c33:	sub    eax,ecx
   140008c35:	cmp    r13d,ecx
   140008c38:	jae    0x140008c81
   140008c3a:	add    eax,DWORD PTR [rsp+0x80]
   140008c41:	sub    ecx,r13d
   140008c44:	add    r9,rax
   140008c47:	cmp    ecx,r11d
   140008c4a:	jae    0x140008ca4
   140008c4c:	sub    r11d,ecx
   140008c4f:	sub    r9,r8
   140008c52:	inc    r8
   140008c55:	dec    ecx
   140008c57:	mov    al,BYTE PTR [r9+r8*1]
   140008c5b:	mov    BYTE PTR [r8],al
   140008c5e:	jne    0x140008c52
   140008c60:	lea    r9,[rdx-0x1]
   140008c64:	cmp    r13d,r11d
   140008c67:	jae    0x140008ca4
   140008c69:	mov    ecx,r13d
   140008c6c:	sub    r11d,r13d
   140008c6f:	inc    r9
   140008c72:	inc    r8
   140008c75:	dec    ecx
   140008c77:	mov    al,BYTE PTR [r9]
   140008c7a:	mov    BYTE PTR [r8],al
   140008c7d:	jne    0x140008c6f
   140008c7f:	jmp    0x140008c9c
   140008c81:	add    r9,rax
   140008c84:	cmp    ecx,r11d
   140008c87:	jae    0x140008ca4
   140008c89:	sub    r11d,ecx
   140008c8c:	inc    r9
   140008c8f:	inc    r8
   140008c92:	dec    ecx
   140008c94:	mov    al,BYTE PTR [r9]
   140008c97:	mov    BYTE PTR [r8],al
   140008c9a:	jne    0x140008c8c
   140008c9c:	mov    eax,esi
   140008c9e:	mov    r9,r8
   140008ca1:	sub    r9,rax
   140008ca4:	cmp    r11d,0x2
   140008ca8:	jbe    0x140008ce1
   140008caa:	lea    ecx,[r11-0x3]
   140008cae:	mov    eax,0xaaaaaaab
   140008cb3:	mul    ecx
   140008cb5:	shr    edx,1
   140008cb7:	lea    ecx,[rdx+0x1]
   140008cba:	mov    al,BYTE PTR [r9+0x1]
   140008cbe:	add    r9,0x3
   140008cc2:	add    r8,0x3
   140008cc6:	mov    BYTE PTR [r8-0x2],al
   140008cca:	mov    al,BYTE PTR [r9-0x1]
   140008cce:	add    r11d,0xfffffffd
   140008cd2:	dec    rcx
   140008cd5:	mov    BYTE PTR [r8-0x1],al
   140008cd9:	mov    al,BYTE PTR [r9]
   140008cdc:	mov    BYTE PTR [r8],al
   140008cdf:	jne    0x140008cba
   140008ce1:	test   r11d,r11d
   140008ce4:	je     0x140008d5b
   140008ce6:	mov    al,BYTE PTR [r9+0x1]
   140008cea:	mov    rsi,QWORD PTR [rsp]
   140008cee:	inc    r8
   140008cf1:	mov    BYTE PTR [r8],al
   140008cf4:	cmp    r11d,0x1
   140008cf8:	jbe    0x140008d04
   140008cfa:	mov    al,BYTE PTR [r9+0x2]
   140008cfe:	inc    r8
   140008d01:	mov    BYTE PTR [r8],al
   140008d04:	mov    r9,QWORD PTR [rsp+0x8]
   140008d09:	jmp    0x140008d64
   140008d0b:	mov    eax,esi
   140008d0d:	mov    rcx,r8
   140008d10:	sub    rcx,rax
   140008d13:	mov    al,BYTE PTR [rcx+0x1]
   140008d16:	add    rcx,0x3
   140008d1a:	add    r8,0x3
   140008d1e:	mov    BYTE PTR [r8-0x2],al
   140008d22:	mov    al,BYTE PTR [rcx-0x1]
   140008d25:	add    r11d,0xfffffffd
   140008d29:	mov    BYTE PTR [r8-0x1],al
   140008d2d:	mov    al,BYTE PTR [rcx]
   140008d2f:	mov    BYTE PTR [r8],al
   140008d32:	cmp    r11d,0x2
   140008d36:	ja     0x140008d13
   140008d38:	test   r11d,r11d
   140008d3b:	je     0x140008d60
   140008d3d:	mov    al,BYTE PTR [rcx+0x1]
   140008d40:	mov    rsi,QWORD PTR [rsp]
   140008d44:	inc    r8
   140008d47:	mov    BYTE PTR [r8],al
   140008d4a:	cmp    r11d,0x1
   140008d4e:	jbe    0x140008d64
   140008d50:	mov    al,BYTE PTR [rcx+0x2]
   140008d53:	inc    r8
   140008d56:	mov    BYTE PTR [r8],al
   140008d59:	jmp    0x140008d64
   140008d5b:	mov    r9,QWORD PTR [rsp+0x8]
   140008d60:	mov    rsi,QWORD PTR [rsp]
   140008d64:	cmp    rdi,r14
   140008d67:	jae    0x140008dac
   140008d69:	cmp    r8,r15
   140008d6c:	jae    0x140008dac
   140008d6e:	mov    rdx,QWORD PTR [rsp+0x20]
   140008d73:	jmp    0x140008a6e
   140008d78:	test   dl,0x20
   140008d7b:	je     0x140008d87
   140008d7d:	mov    DWORD PTR [r12],0xb
   140008d85:	jmp    0x140008dac
   140008d87:	lea    rax,[rip+0x1391a]        # 0x14001c6a8
   140008d8e:	jmp    0x140008da0
   140008d90:	lea    rax,[rip+0x138f9]        # 0x14001c690
   140008d97:	jmp    0x140008da0
   140008d99:	lea    rax,[rip+0x138d0]        # 0x14001c670
   140008da0:	mov    QWORD PTR [rbp+0x20],rax
   140008da4:	mov    DWORD PTR [r12],0x1b
   140008dac:	mov    ecx,r10d
   140008daf:	sub    r15d,r8d
   140008db2:	shr    ecx,0x3
   140008db5:	add    r15d,0x101
   140008dbc:	mov    eax,ecx
   140008dbe:	mov    DWORD PTR [rbp+0x18],r15d
   140008dc2:	sub    rdi,rax
   140008dc5:	mov    eax,ecx
   140008dc7:	shl    eax,0x3
   140008dca:	sub    r14d,edi
   140008dcd:	sub    r10d,eax
   140008dd0:	lea    rax,[rdi+0x1]
   140008dd4:	add    r14d,0x5
   140008dd8:	mov    QWORD PTR [rbp+0x0],rax
   140008ddc:	lea    rax,[r8+0x1]
   140008de0:	mov    DWORD PTR [rbp+0x8],r14d
   140008de4:	mov    QWORD PTR [rbp+0x10],rax
   140008de8:	mov    eax,0x1
   140008ded:	mov    ecx,r10d
   140008df0:	shl    eax,cl
   140008df2:	mov    DWORD PTR [r12+0x44],r10d
   140008df7:	dec    eax
   140008df9:	and    eax,ebx
   140008dfb:	mov    DWORD PTR [r12+0x40],eax
   140008e00:	add    rsp,0x38
   140008e04:	pop    r15
   140008e06:	pop    r14
   140008e08:	pop    r13
   140008e0a:	pop    r12
   140008e0c:	pop    rdi
   140008e0d:	pop    rsi
   140008e0e:	pop    rbp
   140008e0f:	pop    rbx
   140008e10:	ret    
   140008e11:	int3   
   140008e12:	int3   
   140008e13:	int3   
   140008e14:	mov    QWORD PTR [rsp+0x8],rbx
   140008e19:	push   rbp
   140008e1a:	push   rsi
   140008e1b:	push   rdi
   140008e1c:	push   r12
   140008e1e:	push   r13
   140008e20:	push   r14
   140008e22:	push   r15
   140008e24:	lea    rbp,[rsp-0x17]
   140008e29:	sub    rsp,0xa0
   140008e30:	mov    rax,QWORD PTR [rip+0x1a289]        # 0x1400230c0
   140008e37:	xor    rax,rsp
   140008e3a:	mov    QWORD PTR [rbp+0xf],rax
   140008e3e:	mov    rbx,QWORD PTR [rbp+0x7f]
   140008e42:	xor    r14d,r14d
   140008e45:	mov    r12d,ecx
   140008e48:	mov    DWORD PTR [rbp-0x69],ecx
   140008e4b:	mov    r10,r9
   140008e4e:	mov    QWORD PTR [rbp-0x49],r9
   140008e52:	mov    r9,QWORD PTR [rbp+0x77]
   140008e56:	lea    ecx,[r14+0x10]
   140008e5a:	lea    rdi,[rbp-0x31]
   140008e5e:	movzx  eax,r14w
   140008e62:	mov    r13,rdx
   140008e65:	mov    QWORD PTR [rbp-0x41],rdx
   140008e69:	mov    QWORD PTR [rbp-0x39],r9
   140008e6d:	mov    QWORD PTR [rbp-0x51],rbx
   140008e71:	lea    r15d,[r14+0x1]
   140008e75:	rep stos WORD PTR es:[rdi],ax
   140008e78:	test   r8d,r8d
   140008e7b:	je     0x140008e95
   140008e7d:	mov    rcx,rdx
   140008e80:	mov    edx,r8d
   140008e83:	movzx  eax,WORD PTR [rcx]
   140008e86:	add    rcx,0x2
   140008e8a:	add    WORD PTR [rbp+rax*2-0x31],r15w
   140008e90:	sub    rdx,r15
   140008e93:	jne    0x140008e83
   140008e95:	mov    r11d,DWORD PTR [r9]
   140008e98:	or     ecx,0xffffffff
   140008e9b:	mov    esi,0xf
   140008ea0:	mov    DWORD PTR [rbp-0x75],ecx
   140008ea3:	lea    rax,[rbp-0x13]
   140008ea7:	cmp    WORD PTR [rax],r14w
   140008eab:	jne    0x140008eb8
   140008ead:	add    esi,ecx
   140008eaf:	sub    rax,0x2
   140008eb3:	cmp    esi,r15d
   140008eb6:	jae    0x140008ea7
   140008eb8:	cmp    r11d,esi
   140008ebb:	cmova  r11d,esi
   140008ebf:	test   esi,esi
   140008ec1:	jne    0x140008ee9
   140008ec3:	mov    rcx,QWORD PTR [r10]
   140008ec6:	mov    DWORD PTR [rsp],0x140
   140008ecd:	mov    eax,DWORD PTR [rsp]
   140008ed0:	mov    DWORD PTR [rcx],eax
   140008ed2:	add    QWORD PTR [r10],0x4
   140008ed6:	mov    rcx,QWORD PTR [r10]
   140008ed9:	mov    DWORD PTR [rcx],eax
   140008edb:	add    QWORD PTR [r10],0x4
   140008edf:	mov    DWORD PTR [r9],r15d
   140008ee2:	xor    eax,eax
   140008ee4:	jmp    0x140009254
   140008ee9:	mov    r9d,r15d
   140008eec:	lea    rax,[rbp-0x2f]
   140008ef0:	cmp    WORD PTR [rax],r14w
   140008ef4:	jne    0x140008f03
   140008ef6:	add    r9d,r15d
   140008ef9:	add    rax,0x2
   140008efd:	cmp    r9d,0xf
   140008f01:	jbe    0x140008ef0
   140008f03:	cmp    r11d,r9d
   140008f06:	mov    edx,r15d
   140008f09:	mov    edi,r15d
   140008f0c:	cmovb  r11d,r9d
   140008f10:	mov    eax,edi
   140008f12:	add    edx,edx
   140008f14:	movzx  ecx,WORD PTR [rbp+rax*2-0x31]
   140008f19:	sub    edx,ecx
   140008f1b:	js     0x140009251
   140008f21:	add    edi,r15d
   140008f24:	cmp    edi,0xf
   140008f27:	jbe    0x140008f10
   140008f29:	test   edx,edx
   140008f2b:	jle    0x140008f3f
   140008f2d:	test   r12d,r12d
   140008f30:	je     0x140009251
   140008f36:	cmp    esi,r15d
   140008f39:	jne    0x140009251
   140008f3f:	mov    WORD PTR [rbp-0xf],r14w
   140008f44:	mov    rcx,r14
   140008f47:	mov    edx,0xe
   140008f4c:	movzx  eax,WORD PTR [rbp+rcx*1-0x2f]
   140008f51:	add    rcx,0x2
   140008f55:	add    ax,WORD PTR [rbp+rcx*1-0x11]
   140008f5a:	sub    rdx,r15
   140008f5d:	mov    WORD PTR [rbp+rcx*1-0xf],ax
   140008f62:	jne    0x140008f4c
   140008f64:	mov    edi,r14d
   140008f67:	test   r8d,r8d
   140008f6a:	je     0x140008f96
   140008f6c:	mov    rdx,r13
   140008f6f:	cmp    WORD PTR [rdx],r14w
   140008f73:	je     0x140008f8a
   140008f75:	movzx  eax,WORD PTR [rdx]
   140008f78:	movzx  ecx,WORD PTR [rbp+rax*2-0x11]
   140008f7d:	mov    WORD PTR [rbx+rcx*2],di
   140008f81:	movzx  eax,WORD PTR [rdx]
   140008f84:	add    WORD PTR [rbp+rax*2-0x11],r15w
   140008f8a:	add    edi,r15d
   140008f8d:	add    rdx,0x2
   140008f91:	cmp    edi,r8d
   140008f94:	jb     0x140008f6f
   140008f96:	mov    ecx,r12d
   140008f99:	test   r12d,r12d
   140008f9c:	je     0x140008fdf
   140008f9e:	dec    ecx
   140008fa0:	je     0x140008fba
   140008fa2:	lea    rdx,[rip+0x13a27]        # 0x14001c9d0
   140008fa9:	lea    r15,[rip+0x139e0]        # 0x14001c990
   140008fb0:	or     r8d,0xffffffff
   140008fb4:	mov    QWORD PTR [rbp-0x61],rdx
   140008fb8:	jmp    0x140008fef
   140008fba:	mov    eax,0x202
   140008fbf:	lea    r15,[rip+0x1394a]        # 0x14001c910
   140008fc6:	lea    rdx,[rip+0x13983]        # 0x14001c950
   140008fcd:	sub    r15,rax
   140008fd0:	sub    rdx,rax
   140008fd3:	mov    r8d,0x100
   140008fd9:	mov    QWORD PTR [rbp-0x61],rdx
   140008fdd:	jmp    0x140008fef
   140008fdf:	mov    rdx,rbx
   140008fe2:	mov    QWORD PTR [rbp-0x61],rbx
   140008fe6:	mov    r15,rbx
   140008fe9:	mov    r8d,0x13
   140008fef:	mov    rax,QWORD PTR [r10]
   140008ff2:	mov    ecx,r11d
   140008ff5:	mov    ebx,0x1
   140008ffa:	shl    ebx,cl
   140008ffc:	cmp    DWORD PTR [rbp-0x69],0x1
   140009000:	mov    QWORD PTR [rsp+0x8],rax
   140009005:	lea    eax,[rbx-0x1]
   140009008:	mov    edi,r14d
   14000900b:	mov    r12d,r14d
   14000900e:	mov    DWORD PTR [rbp-0x71],r14d
   140009012:	mov    DWORD PTR [rbp-0x6d],ebx
   140009015:	mov    DWORD PTR [rbp-0x79],ebx
   140009018:	mov    DWORD PTR [rbp-0x59],eax
   14000901b:	jne    0x14000902f
   14000901d:	cmp    ebx,0x5b0
   140009023:	jb     0x14000902f
   140009025:	mov    eax,0x1
   14000902a:	jmp    0x140009254
   14000902f:	mov    r13,QWORD PTR [rsp+0x8]
   140009034:	mov    ecx,r12d
   140009037:	mov    r12,QWORD PTR [rbp-0x51]
   14000903b:	mov    al,r9b
   14000903e:	sub    al,r14b
   140009041:	mov    BYTE PTR [rsp+0x1],al
   140009045:	movzx  eax,WORD PTR [r12+rcx*2]
   14000904a:	cmp    eax,r8d
   14000904d:	jge    0x140009058
   14000904f:	xor    r10d,r10d
   140009052:	mov    BYTE PTR [rsp],r10b
   140009056:	jmp    0x140009072
   140009058:	jle    0x14000906c
   14000905a:	movzx  ecx,WORD PTR [r12+rcx*2]
   14000905f:	mov    al,BYTE PTR [rdx+rcx*2]
   140009062:	mov    BYTE PTR [rsp],al
   140009065:	movzx  eax,WORD PTR [r15+rcx*2]
   14000906a:	jmp    0x140009072
   14000906c:	mov    BYTE PTR [rsp],0x60
   140009070:	xor    eax,eax
   140009072:	mov    ecx,r9d
   140009075:	mov    r12d,0x1
   14000907b:	mov    edx,edi
   14000907d:	sub    ecx,r14d
   140009080:	mov    WORD PTR [rsp+0x2],ax
   140009085:	mov    eax,DWORD PTR [rsp]
   140009088:	shl    r12d,cl
   14000908b:	mov    ecx,r14d
   14000908e:	mov    DWORD PTR [rbp-0x55],ebx
   140009091:	shr    edx,cl
   140009093:	add    edx,ebx
   140009095:	sub    edx,r12d
   140009098:	sub    ebx,r12d
   14000909b:	mov    DWORD PTR [r13+rdx*4+0x0],eax
   1400090a0:	jne    0x140009095
   1400090a2:	mov    r10,QWORD PTR [rbp-0x49]
   1400090a6:	lea    ecx,[r9-0x1]
   1400090aa:	lea    edx,[rbx+0x1]
   1400090ad:	shl    edx,cl
   1400090af:	jmp    0x1400090b3
   1400090b1:	shr    edx,1
   1400090b3:	test   edi,edx
   1400090b5:	jne    0x1400090b1
   1400090b7:	xor    ebx,ebx
   1400090b9:	test   edx,edx
   1400090bb:	je     0x1400090c7
   1400090bd:	lea    eax,[rdx-0x1]
   1400090c0:	and    eax,edi
   1400090c2:	lea    edi,[rdx+rax*1]
   1400090c5:	jmp    0x1400090c9
   1400090c7:	mov    edi,ebx
   1400090c9:	mov    r12d,DWORD PTR [rbp-0x71]
   1400090cd:	mov    eax,r9d
   1400090d0:	mov    ecx,0xffff
   1400090d5:	inc    r12d
   1400090d8:	add    WORD PTR [rbp+rax*2-0x31],cx
   1400090dd:	mov    DWORD PTR [rbp-0x71],r12d
   1400090e1:	jne    0x1400090fe
   1400090e3:	cmp    r9d,esi
   1400090e6:	je     0x1400091c4
   1400090ec:	mov    rcx,QWORD PTR [rbp-0x51]
   1400090f0:	mov    rax,QWORD PTR [rbp-0x41]
   1400090f4:	movzx  ecx,WORD PTR [rcx+r12*2]
   1400090f9:	movzx  r9d,WORD PTR [rax+rcx*2]
   1400090fe:	mov    rdx,QWORD PTR [rbp-0x61]
   140009102:	mov    ebx,DWORD PTR [rbp-0x6d]
   140009105:	cmp    r9d,r11d
   140009108:	jbe    0x140009034
   14000910e:	mov    r13d,DWORD PTR [rbp-0x59]
   140009112:	and    r13d,edi
   140009115:	cmp    r13d,DWORD PTR [rbp-0x75]
   140009119:	je     0x14000902f
   14000911f:	mov    rcx,QWORD PTR [rsp+0x8]
   140009124:	mov    eax,DWORD PTR [rbp-0x55]
   140009127:	test   r14d,r14d
   14000912a:	cmove  r14d,r11d
   14000912e:	lea    rcx,[rcx+rax*4]
   140009132:	mov    r12d,r9d
   140009135:	sub    r12d,r14d
   140009138:	mov    QWORD PTR [rsp+0x8],rcx
   14000913d:	mov    edx,0x1
   140009142:	lea    ebx,[r14+r12*1]
   140009146:	mov    ecx,r12d
   140009149:	shl    edx,cl
   14000914b:	cmp    ebx,esi
   14000914d:	jae    0x140009169
   14000914f:	movzx  ecx,WORD PTR [rbp+rbx*2-0x31]
   140009154:	sub    edx,ecx
   140009156:	test   edx,edx
   140009158:	jle    0x140009165
   14000915a:	inc    ebx
   14000915c:	inc    r12d
   14000915f:	add    edx,edx
   140009161:	cmp    ebx,esi
   140009163:	jb     0x14000914f
   140009165:	mov    r10,QWORD PTR [rbp-0x49]
   140009169:	mov    eax,DWORD PTR [rbp-0x79]
   14000916c:	mov    ecx,r12d
   14000916f:	mov    ebx,0x1
   140009174:	shl    ebx,cl
   140009176:	add    eax,ebx
   140009178:	cmp    DWORD PTR [rbp-0x69],0x1
   14000917c:	mov    DWORD PTR [rbp-0x6d],ebx
   14000917f:	mov    DWORD PTR [rbp-0x79],eax
   140009182:	jne    0x14000918f
   140009184:	cmp    eax,0x5b0
   140009189:	jae    0x140009025
   14000918f:	mov    rax,QWORD PTR [r10]
   140009192:	mov    rdx,QWORD PTR [rbp-0x61]
   140009196:	mov    DWORD PTR [rbp-0x75],r13d
   14000919a:	mov    BYTE PTR [rax+r13*4],r12b
   14000919e:	mov    rax,QWORD PTR [r10]
   1400091a1:	mov    r12d,DWORD PTR [rbp-0x71]
   1400091a5:	mov    BYTE PTR [rax+r13*4+0x1],r11b
   1400091aa:	mov    rcx,QWORD PTR [r10]
   1400091ad:	mov    rax,QWORD PTR [rsp+0x8]
   1400091b2:	sub    rax,rcx
   1400091b5:	sar    rax,0x2
   1400091b9:	mov    WORD PTR [rcx+r13*4+0x2],ax
   1400091bf:	jmp    0x14000902f
   1400091c4:	mov    al,r9b
   1400091c7:	mov    BYTE PTR [rsp],0x40
   1400091cb:	mov    WORD PTR [rsp+0x2],bx
   1400091d0:	sub    al,r14b
   1400091d3:	mov    BYTE PTR [rsp+0x1],al
   1400091d7:	test   edi,edi
   1400091d9:	je     0x14000923b
   1400091db:	mov    r8d,DWORD PTR [rbp-0x75]
   1400091df:	test   r14d,r14d
   1400091e2:	je     0x140009201
   1400091e4:	mov    eax,DWORD PTR [rbp-0x59]
   1400091e7:	and    eax,edi
   1400091e9:	cmp    eax,r8d
   1400091ec:	je     0x140009201
   1400091ee:	mov    rax,QWORD PTR [r10]
   1400091f1:	mov    r14d,ebx
   1400091f4:	mov    r9d,r11d
   1400091f7:	mov    QWORD PTR [rsp+0x8],rax
   1400091fc:	mov    BYTE PTR [rsp+0x1],r11b
   140009201:	mov    eax,DWORD PTR [rsp]
   140009204:	mov    ecx,r14d
   140009207:	mov    edx,edi
   140009209:	shr    rdx,cl
   14000920c:	mov    rcx,QWORD PTR [rsp+0x8]
   140009211:	mov    DWORD PTR [rcx+rdx*4],eax
   140009214:	lea    ecx,[r9-0x1]
   140009218:	mov    edx,0x1
   14000921d:	shl    edx,cl
   14000921f:	jmp    0x140009223
   140009221:	shr    edx,1
   140009223:	test   edi,edx
   140009225:	jne    0x140009221
   140009227:	test   edx,edx
   140009229:	je     0x140009235
   14000922b:	lea    eax,[rdx-0x1]
   14000922e:	and    eax,edi
   140009230:	lea    edi,[rdx+rax*1]
   140009233:	jmp    0x140009237
   140009235:	mov    edi,ebx
   140009237:	test   edi,edi
   140009239:	jne    0x1400091df
   14000923b:	mov    eax,DWORD PTR [rbp-0x79]
   14000923e:	shl    rax,0x2
   140009242:	add    QWORD PTR [r10],rax
   140009245:	mov    rax,QWORD PTR [rbp-0x39]
   140009249:	mov    DWORD PTR [rax],r11d
   14000924c:	jmp    0x140008ee2
   140009251:	or     eax,0xffffffff
   140009254:	mov    rcx,QWORD PTR [rbp+0xf]
   140009258:	xor    rcx,rsp
   14000925b:	call   0x14000a820
   140009260:	mov    rbx,QWORD PTR [rsp+0xe0]
   140009268:	add    rsp,0xa0
   14000926f:	pop    r15
   140009271:	pop    r14
   140009273:	pop    r13
   140009275:	pop    r12
   140009277:	pop    rdi
   140009278:	pop    rsi
   140009279:	pop    rbp
   14000927a:	ret    
   14000927b:	int3   
   14000927c:	mov    QWORD PTR [rsp+0x8],rdi
   140009281:	mov    r9d,ecx
   140009284:	mov    r11,rdx
   140009287:	movzx  r10d,cx
   14000928b:	shr    r9d,0x10
   14000928f:	cmp    r8d,0x1
   140009293:	jne    0x1400092c1
   140009295:	movzx  eax,BYTE PTR [rdx]
   140009298:	mov    ecx,0xfff1
   14000929d:	add    r10d,eax
   1400092a0:	mov    eax,0xffff000f
   1400092a5:	cmp    r10d,ecx
   1400092a8:	jb     0x1400092ad
   1400092aa:	add    r10d,eax
   1400092ad:	add    r9d,r10d
   1400092b0:	cmp    r9d,ecx
   1400092b3:	jb     0x14000953e
   1400092b9:	add    r9d,eax
   1400092bc:	jmp    0x14000953e
   1400092c1:	test   rdx,rdx
   1400092c4:	jne    0x1400092ce
   1400092c6:	lea    eax,[rdx+0x1]
   1400092c9:	jmp    0x140009548
   1400092ce:	cmp    r8d,0x10
   1400092d2:	jae    0x14000931a
   1400092d4:	test   r8d,r8d
   1400092d7:	je     0x1400092eb
   1400092d9:	movzx  eax,BYTE PTR [r11]
   1400092dd:	inc    r11
   1400092e0:	add    r10d,eax
   1400092e3:	add    r9d,r10d
   1400092e6:	dec    r8d
   1400092e9:	jne    0x1400092d9
   1400092eb:	mov    ecx,0xfff1
   1400092f0:	cmp    r10d,ecx
   1400092f3:	jb     0x1400092fd
   1400092f5:	mov    eax,0xffff000f
   1400092fa:	add    r10d,eax
   1400092fd:	mov    eax,0x80078071
   140009302:	mul    r9d
   140009305:	shr    edx,0xf
   140009308:	imul   edx,edx,0xf
   14000930b:	lea    eax,[r9+rdx*1]
   14000930f:	shl    eax,0x10
   140009312:	or     eax,r10d
   140009315:	jmp    0x140009548
   14000931a:	mov    ecx,0x80078071
   14000931f:	cmp    r8d,0x15b0
   140009326:	jb     0x14000942b
   14000932c:	mov    eax,0x5e6ea9af
   140009331:	mul    r8d
   140009334:	shr    edx,0xb
   140009337:	mov    edi,edx
   140009339:	add    r8d,0xffffea50
   140009340:	mov    edx,0x15b
   140009345:	movzx  eax,BYTE PTR [r11]
   140009349:	add    r11,0x10
   14000934d:	add    r10d,eax
   140009350:	movzx  eax,BYTE PTR [r11-0xf]
   140009355:	add    r9d,r10d
   140009358:	add    r10d,eax
   14000935b:	movzx  eax,BYTE PTR [r11-0xe]
   140009360:	add    r9d,r10d
   140009363:	add    r10d,eax
   140009366:	movzx  eax,BYTE PTR [r11-0xd]
   14000936b:	add    r9d,r10d
   14000936e:	add    r10d,eax
   140009371:	movzx  eax,BYTE PTR [r11-0xc]
   140009376:	add    r9d,r10d
   140009379:	add    r10d,eax
   14000937c:	movzx  eax,BYTE PTR [r11-0xb]
   140009381:	add    r9d,r10d
   140009384:	add    r10d,eax
   140009387:	movzx  eax,BYTE PTR [r11-0xa]
   14000938c:	add    r9d,r10d
   14000938f:	add    r10d,eax
   140009392:	movzx  eax,BYTE PTR [r11-0x9]
   140009397:	add    r9d,r10d
   14000939a:	add    r10d,eax
   14000939d:	movzx  eax,BYTE PTR [r11-0x8]
   1400093a2:	add    r9d,r10d
   1400093a5:	add    r10d,eax
   1400093a8:	movzx  eax,BYTE PTR [r11-0x7]
   1400093ad:	add    r9d,r10d
   1400093b0:	add    r10d,eax
   1400093b3:	movzx  eax,BYTE PTR [r11-0x6]
   1400093b8:	add    r9d,r10d
   1400093bb:	add    r10d,eax
   1400093be:	movzx  eax,BYTE PTR [r11-0x5]
   1400093c3:	add    r9d,r10d
   1400093c6:	add    r10d,eax
   1400093c9:	movzx  eax,BYTE PTR [r11-0x4]
   1400093ce:	add    r9d,r10d
   1400093d1:	add    r10d,eax
   1400093d4:	movzx  eax,BYTE PTR [r11-0x3]
   1400093d9:	add    r9d,r10d
   1400093dc:	add    r10d,eax
   1400093df:	movzx  eax,BYTE PTR [r11-0x2]
   1400093e4:	add    r9d,r10d
   1400093e7:	add    r10d,eax
   1400093ea:	movzx  eax,BYTE PTR [r11-0x1]
   1400093ef:	add    r9d,r10d
   1400093f2:	add    r10d,eax
   1400093f5:	add    r9d,r10d
   1400093f8:	dec    edx
   1400093fa:	jne    0x140009345
   140009400:	mov    eax,ecx
   140009402:	mul    r10d
   140009405:	mov    eax,ecx
   140009407:	shr    edx,0xf
   14000940a:	imul   edx,edx,0xffff000f
   140009410:	add    r10d,edx
   140009413:	mul    r9d
   140009416:	shr    edx,0xf
   140009419:	imul   edx,edx,0xffff000f
   14000941f:	add    r9d,edx
   140009422:	dec    rdi
   140009425:	jne    0x140009339
   14000942b:	test   r8d,r8d
   14000942e:	je     0x14000953e
   140009434:	cmp    r8d,0x10
   140009438:	jb     0x140009505
   14000943e:	mov    edx,r8d
   140009441:	shr    rdx,0x4
   140009445:	movzx  eax,BYTE PTR [r11]
   140009449:	add    r8d,0xfffffff0
   14000944d:	add    r11,0x10
   140009451:	add    r10d,eax
   140009454:	movzx  eax,BYTE PTR [r11-0xf]
   140009459:	add    r9d,r10d
   14000945c:	add    r10d,eax
   14000945f:	movzx  eax,BYTE PTR [r11-0xe]
   140009464:	add    r9d,r10d
   140009467:	add    r10d,eax
   14000946a:	movzx  eax,BYTE PTR [r11-0xd]
   14000946f:	add    r9d,r10d
   140009472:	add    r10d,eax
   140009475:	movzx  eax,BYTE PTR [r11-0xc]
   14000947a:	add    r9d,r10d
   14000947d:	add    r10d,eax
   140009480:	movzx  eax,BYTE PTR [r11-0xb]
   140009485:	add    r9d,r10d
   140009488:	add    r10d,eax
   14000948b:	movzx  eax,BYTE PTR [r11-0xa]
   140009490:	add    r9d,r10d
   140009493:	add    r10d,eax
   140009496:	movzx  eax,BYTE PTR [r11-0x9]
   14000949b:	add    r9d,r10d
   14000949e:	add    r10d,eax
   1400094a1:	movzx  eax,BYTE PTR [r11-0x8]
   1400094a6:	add    r9d,r10d
   1400094a9:	add    r10d,eax
   1400094ac:	movzx  eax,BYTE PTR [r11-0x7]
   1400094b1:	add    r9d,r10d
   1400094b4:	add    r10d,eax
   1400094b7:	movzx  eax,BYTE PTR [r11-0x6]
   1400094bc:	add    r9d,r10d
   1400094bf:	add    r10d,eax
   1400094c2:	movzx  eax,BYTE PTR [r11-0x5]
   1400094c7:	add    r9d,r10d
   1400094ca:	add    r10d,eax
   1400094cd:	movzx  eax,BYTE PTR [r11-0x4]
   1400094d2:	add    r9d,r10d
   1400094d5:	add    r10d,eax
   1400094d8:	movzx  eax,BYTE PTR [r11-0x3]
   1400094dd:	add    r9d,r10d
   1400094e0:	add    r10d,eax
   1400094e3:	movzx  eax,BYTE PTR [r11-0x2]
   1400094e8:	add    r9d,r10d
   1400094eb:	add    r10d,eax
   1400094ee:	movzx  eax,BYTE PTR [r11-0x1]
   1400094f3:	add    r9d,r10d
   1400094f6:	add    r10d,eax
   1400094f9:	add    r9d,r10d
   1400094fc:	dec    rdx
   1400094ff:	jne    0x140009445
   140009505:	test   r8d,r8d
   140009508:	je     0x14000951c
   14000950a:	movzx  eax,BYTE PTR [r11]
   14000950e:	inc    r11
   140009511:	add    r10d,eax
   140009514:	add    r9d,r10d
   140009517:	dec    r8d
   14000951a:	jne    0x14000950a
   14000951c:	mov    eax,ecx
   14000951e:	mul    r10d
   140009521:	mov    eax,ecx
   140009523:	shr    edx,0xf
   140009526:	imul   edx,edx,0xffff000f
   14000952c:	add    r10d,edx
   14000952f:	mul    r9d
   140009532:	shr    edx,0xf
   140009535:	imul   edx,edx,0xffff000f
   14000953b:	add    r9d,edx
   14000953e:	shl    r9d,0x10
   140009542:	or     r9d,r10d
   140009545:	mov    eax,r9d
   140009548:	mov    rdi,QWORD PTR [rsp+0x8]
   14000954d:	ret    
   14000954e:	int3   
   14000954f:	int3   
   140009550:	mov    QWORD PTR [rsp+0x8],rbx
   140009555:	mov    QWORD PTR [rsp+0x10],rsi
   14000955a:	mov    QWORD PTR [rsp+0x18],rdi
   14000955f:	mov    r10d,ecx
   140009562:	mov    r11d,r8d
   140009565:	mov    rbx,rdx
   140009568:	lea    rsi,[rip+0x134a1]        # 0x14001ca10
   14000956f:	not    r10d
   140009572:	test   r8d,r8d
   140009575:	je     0x14000959a
   140009577:	test   bl,0x3
   14000957a:	je     0x14000959a
   14000957c:	movzx  ecx,BYTE PTR [rbx]
   14000957f:	mov    eax,r10d
   140009582:	inc    rbx
   140009585:	xor    rcx,rax
   140009588:	shr    eax,0x8
   14000958b:	movzx  edx,cl
   14000958e:	mov    r10d,DWORD PTR [rsi+rdx*4]
   140009592:	xor    r10d,eax
   140009595:	dec    r11d
   140009598:	jne    0x140009577
   14000959a:	cmp    r11d,0x20
   14000959e:	jb     0x1400097c5
   1400095a4:	mov    edi,r11d
   1400095a7:	shr    rdi,0x5
   1400095ab:	xor    r10d,DWORD PTR [rbx]
   1400095ae:	mov    eax,r10d
   1400095b1:	shr    rax,0x10
   1400095b5:	movzx  edx,al
   1400095b8:	mov    eax,r10d
   1400095bb:	mov    r8d,DWORD PTR [rsi+rdx*4+0x400]
   1400095c3:	shr    rax,0x8
   1400095c7:	movzx  ecx,al
   1400095ca:	mov    eax,r10d
   1400095cd:	xor    r8d,DWORD PTR [rsi+rcx*4+0x800]
   1400095d5:	shr    rax,0x18
   1400095d9:	xor    r8d,DWORD PTR [rsi+rax*4]
   1400095dd:	movzx  eax,r10b
   1400095e1:	xor    r8d,DWORD PTR [rsi+rax*4+0xc00]
   1400095e9:	xor    r8d,DWORD PTR [rbx+0x4]
   1400095ed:	mov    r9d,r8d
   1400095f0:	mov    eax,r8d
   1400095f3:	shr    rax,0x10
   1400095f7:	movzx  edx,al
   1400095fa:	mov    eax,r8d
   1400095fd:	mov    r8d,DWORD PTR [rsi+rdx*4+0x400]
   140009605:	shr    rax,0x8
   140009609:	movzx  ecx,al
   14000960c:	mov    eax,r9d
   14000960f:	xor    r8d,DWORD PTR [rsi+rcx*4+0x800]
   140009617:	shr    rax,0x18
   14000961b:	xor    r8d,DWORD PTR [rsi+rax*4]
   14000961f:	movzx  eax,r9b
   140009623:	xor    r8d,DWORD PTR [rsi+rax*4+0xc00]
   14000962b:	xor    r8d,DWORD PTR [rbx+0x8]
   14000962f:	mov    r9d,r8d
   140009632:	mov    eax,r8d
   140009635:	shr    rax,0x10
   140009639:	movzx  edx,al
   14000963c:	mov    eax,r8d
   14000963f:	mov    r8d,DWORD PTR [rsi+rdx*4+0x400]
   140009647:	shr    rax,0x8
   14000964b:	movzx  ecx,al
   14000964e:	mov    eax,r9d
   140009651:	xor    r8d,DWORD PTR [rsi+rcx*4+0x800]
   140009659:	shr    rax,0x18
   14000965d:	xor    r8d,DWORD PTR [rsi+rax*4]
   140009661:	movzx  eax,r9b
   140009665:	xor    r8d,DWORD PTR [rsi+rax*4+0xc00]
   14000966d:	xor    r8d,DWORD PTR [rbx+0xc]
   140009671:	mov    r9d,r8d
   140009674:	mov    eax,r8d
   140009677:	shr    rax,0x10
   14000967b:	movzx  edx,al
   14000967e:	mov    eax,r8d
   140009681:	mov    r8d,DWORD PTR [rsi+rdx*4+0x400]
   140009689:	shr    rax,0x8
   14000968d:	movzx  ecx,al
   140009690:	mov    eax,r9d
   140009693:	xor    r8d,DWORD PTR [rsi+rcx*4+0x800]
   14000969b:	shr    rax,0x18
   14000969f:	xor    r8d,DWORD PTR [rsi+rax*4]
   1400096a3:	movzx  eax,r9b
   1400096a7:	xor    r8d,DWORD PTR [rsi+rax*4+0xc00]
   1400096af:	xor    r8d,DWORD PTR [rbx+0x10]
   1400096b3:	mov    r9d,r8d
   1400096b6:	mov    eax,r8d
   1400096b9:	shr    rax,0x10
   1400096bd:	movzx  edx,al
   1400096c0:	mov    eax,r8d
   1400096c3:	mov    r8d,DWORD PTR [rsi+rdx*4+0x400]
   1400096cb:	shr    rax,0x8
   1400096cf:	movzx  ecx,al
   1400096d2:	mov    eax,r9d
   1400096d5:	xor    r8d,DWORD PTR [rsi+rcx*4+0x800]
   1400096dd:	shr    rax,0x18
   1400096e1:	xor    r8d,DWORD PTR [rsi+rax*4]
   1400096e5:	movzx  eax,r9b
   1400096e9:	xor    r8d,DWORD PTR [rsi+rax*4+0xc00]
   1400096f1:	xor    r8d,DWORD PTR [rbx+0x14]
   1400096f5:	mov    eax,r8d
   1400096f8:	mov    r9d,r8d
   1400096fb:	shr    rax,0x10
   1400096ff:	movzx  edx,al
   140009702:	mov    eax,r8d
   140009705:	shr    rax,0x8
   140009709:	mov    r8d,DWORD PTR [rsi+rdx*4+0x400]
   140009711:	movzx  ecx,al
   140009714:	mov    eax,r9d
   140009717:	xor    r8d,DWORD PTR [rsi+rcx*4+0x800]
   14000971f:	shr    rax,0x18
   140009723:	add    rbx,0x20
   140009727:	xor    r8d,DWORD PTR [rsi+rax*4]
   14000972b:	movzx  eax,r9b
   14000972f:	add    r11d,0xffffffe0
   140009733:	xor    r8d,DWORD PTR [rsi+rax*4+0xc00]
   14000973b:	xor    r8d,DWORD PTR [rbx-0x8]
   14000973f:	mov    r9d,r8d
   140009742:	mov    eax,r8d
   140009745:	shr    rax,0x10
   140009749:	movzx  edx,al
   14000974c:	mov    eax,r8d
   14000974f:	mov    r8d,DWORD PTR [rsi+rdx*4+0x400]
   140009757:	shr    rax,0x8
   14000975b:	movzx  ecx,al
   14000975e:	mov    eax,r9d
   140009761:	xor    r8d,DWORD PTR [rsi+rcx*4+0x800]
   140009769:	shr    rax,0x18
   14000976d:	xor    r8d,DWORD PTR [rsi+rax*4]
   140009771:	movzx  eax,r9b
   140009775:	xor    r8d,DWORD PTR [rsi+rax*4+0xc00]
   14000977d:	xor    r8d,DWORD PTR [rbx-0x4]
   140009781:	mov    eax,r8d
   140009784:	shr    rax,0x10
   140009788:	movzx  edx,al
   14000978b:	mov    eax,r8d
   14000978e:	mov    r10d,DWORD PTR [rsi+rdx*4+0x400]
   140009796:	shr    rax,0x8
   14000979a:	movzx  ecx,al
   14000979d:	mov    eax,r8d
   1400097a0:	xor    r10d,DWORD PTR [rsi+rcx*4+0x800]
   1400097a8:	shr    rax,0x18
   1400097ac:	xor    r10d,DWORD PTR [rsi+rax*4]
   1400097b0:	movzx  eax,r8b
   1400097b4:	xor    r10d,DWORD PTR [rsi+rax*4+0xc00]
   1400097bc:	dec    rdi
   1400097bf:	jne    0x1400095ab
   1400097c5:	cmp    r11d,0x4
   1400097c9:	jb     0x140009820
   1400097cb:	mov    r9d,r11d
   1400097ce:	shr    r9,0x2
   1400097d2:	xor    r10d,DWORD PTR [rbx]
   1400097d5:	add    r11d,0xfffffffc
   1400097d9:	add    rbx,0x4
   1400097dd:	mov    r8d,r10d
   1400097e0:	mov    eax,r10d
   1400097e3:	shr    rax,0x10
   1400097e7:	movzx  edx,al
   1400097ea:	mov    eax,r10d
   1400097ed:	mov    r10d,DWORD PTR [rsi+rdx*4+0x400]
   1400097f5:	shr    rax,0x8
   1400097f9:	movzx  ecx,al
   1400097fc:	mov    eax,r8d
   1400097ff:	xor    r10d,DWORD PTR [rsi+rcx*4+0x800]
   140009807:	shr    rax,0x18
   14000980b:	xor    r10d,DWORD PTR [rsi+rax*4]
   14000980f:	movzx  eax,r8b
   140009813:	xor    r10d,DWORD PTR [rsi+rax*4+0xc00]
   14000981b:	dec    r9
   14000981e:	jne    0x1400097d2
   140009820:	test   r11d,r11d
   140009823:	je     0x140009843
   140009825:	movzx  ecx,BYTE PTR [rbx]
   140009828:	mov    eax,r10d
   14000982b:	inc    rbx
   14000982e:	xor    rcx,rax
   140009831:	shr    eax,0x8
   140009834:	movzx  edx,cl
   140009837:	mov    r10d,DWORD PTR [rsi+rdx*4]
   14000983b:	xor    r10d,eax
   14000983e:	dec    r11d
   140009841:	jne    0x140009825
   140009843:	mov    rbx,QWORD PTR [rsp+0x8]
   140009848:	mov    rsi,QWORD PTR [rsp+0x10]
   14000984d:	mov    rdi,QWORD PTR [rsp+0x18]
   140009852:	not    r10d
   140009855:	mov    eax,r10d
   140009858:	ret    
   140009859:	int3   
   14000985a:	int3   
   14000985b:	int3   
   14000985c:	test   rdx,rdx
   14000985f:	jne    0x140009864
   140009861:	xor    eax,eax
   140009863:	ret    
   140009864:	jmp    0x140009550
   140009869:	int3   
   14000986a:	int3   
   14000986b:	int3   
   14000986c:	rex push rbx
   14000986e:	sub    rsp,0x20
   140009872:	mov    ebx,ecx
   140009874:	lea    rcx,[rip+0x151a5]        # 0x14001ea20
   14000987b:	call   QWORD PTR [rip+0x1084f]        # 0x14001a0d0
   140009881:	test   rax,rax
   140009884:	je     0x14000989f
   140009886:	lea    rdx,[rip+0x15183]        # 0x14001ea10
   14000988d:	mov    rcx,rax
   140009890:	call   QWORD PTR [rip+0x10802]        # 0x14001a098
   140009896:	test   rax,rax
   140009899:	je     0x14000989f
   14000989b:	mov    ecx,ebx
   14000989d:	call   rax
   14000989f:	add    rsp,0x20
   1400098a3:	pop    rbx
   1400098a4:	ret    
   1400098a5:	int3   
   1400098a6:	int3   
   1400098a7:	int3   
   1400098a8:	rex push rbx
   1400098aa:	sub    rsp,0x20
   1400098ae:	mov    ebx,ecx
   1400098b0:	call   0x14000986c
   1400098b5:	mov    ecx,ebx
   1400098b7:	call   QWORD PTR [rip+0x1081b]        # 0x14001a0d8
   1400098bd:	int3   
   1400098be:	int3   
   1400098bf:	int3   
   1400098c0:	mov    ecx,0x8
   1400098c5:	jmp    0x14000cb28
   1400098ca:	int3   
   1400098cb:	int3   
   1400098cc:	mov    ecx,0x8
   1400098d1:	jmp    0x14000ca28
   1400098d6:	int3   
   1400098d7:	int3   
   1400098d8:	rex push rbx
   1400098da:	sub    rsp,0x20
   1400098de:	call   0x14000d078
   1400098e3:	mov    rcx,rax
   1400098e6:	mov    rbx,rax
   1400098e9:	call   0x14000d03c
   1400098ee:	mov    rcx,rbx
   1400098f1:	call   0x14000ce24
   1400098f6:	mov    rcx,rbx
   1400098f9:	call   0x14000ce1c
   1400098fe:	mov    rcx,rbx
   140009901:	call   0x14000ce14
   140009906:	mov    rcx,rbx
   140009909:	call   0x14000cbb0
   14000990e:	mov    rcx,rbx
   140009911:	add    rsp,0x20
   140009915:	pop    rbx
   140009916:	jmp    0x14000cb90
   14000991b:	int3   
   14000991c:	cmp    rcx,rdx
   14000991f:	jae    0x14000994e
   140009921:	mov    QWORD PTR [rsp+0x8],rbx
   140009926:	push   rdi
   140009927:	sub    rsp,0x20
   14000992b:	mov    rdi,rdx
   14000992e:	mov    rbx,rcx
   140009931:	mov    rax,QWORD PTR [rbx]
   140009934:	test   rax,rax
   140009937:	je     0x14000993b
   140009939:	call   rax
   14000993b:	add    rbx,0x8
   14000993f:	cmp    rbx,rdi
   140009942:	jb     0x140009931
   140009944:	mov    rbx,QWORD PTR [rsp+0x30]
   140009949:	add    rsp,0x20
   14000994d:	pop    rdi
   14000994e:	ret    
   14000994f:	int3   
   140009950:	mov    QWORD PTR [rsp+0x8],rbx
   140009955:	push   rdi
   140009956:	sub    rsp,0x20
   14000995a:	xor    eax,eax
   14000995c:	mov    rdi,rdx
   14000995f:	mov    rbx,rcx
   140009962:	cmp    rcx,rdx
   140009965:	jae    0x14000997e
   140009967:	test   eax,eax
   140009969:	jne    0x14000997e
   14000996b:	mov    rcx,QWORD PTR [rbx]
   14000996e:	test   rcx,rcx
   140009971:	je     0x140009975
   140009973:	call   rcx
   140009975:	add    rbx,0x8
   140009979:	cmp    rbx,rdi
   14000997c:	jb     0x140009967
   14000997e:	mov    rbx,QWORD PTR [rsp+0x30]
   140009983:	add    rsp,0x20
   140009987:	pop    rdi
   140009988:	ret    
   140009989:	int3   
   14000998a:	int3   
   14000998b:	int3   
   14000998c:	mov    QWORD PTR [rsp+0x8],rbx
   140009991:	push   rdi
   140009992:	sub    rsp,0x20
   140009996:	cmp    QWORD PTR [rip+0x1d332],0x0        # 0x140026cd0
   14000999e:	mov    ebx,ecx
   1400099a0:	je     0x1400099ba
   1400099a2:	lea    rcx,[rip+0x1d327]        # 0x140026cd0
   1400099a9:	call   0x14000d6b0
   1400099ae:	test   eax,eax
   1400099b0:	je     0x1400099ba
   1400099b2:	mov    ecx,ebx
   1400099b4:	call   QWORD PTR [rip+0x1d316]        # 0x140026cd0
   1400099ba:	call   0x14000d5f8
   1400099bf:	lea    rdx,[rip+0x109ca]        # 0x14001a390
   1400099c6:	lea    rcx,[rip+0x1099b]        # 0x14001a368
   1400099cd:	call   0x140009950
   1400099d2:	test   eax,eax
   1400099d4:	jne    0x140009a30
   1400099d6:	lea    rcx,[rip+0x3be3]        # 0x14000d5c0
   1400099dd:	call   0x14000d570
   1400099e2:	lea    rbx,[rip+0x1096f]        # 0x14001a358
   1400099e9:	lea    rdi,[rip+0x10970]        # 0x14001a360
   1400099f0:	jmp    0x140009a00
   1400099f2:	mov    rax,QWORD PTR [rbx]
   1400099f5:	test   rax,rax
   1400099f8:	je     0x1400099fc
   1400099fa:	call   rax
   1400099fc:	add    rbx,0x8
   140009a00:	cmp    rbx,rdi
   140009a03:	jb     0x1400099f2
   140009a05:	cmp    QWORD PTR [rip+0x1d2cb],0x0        # 0x140026cd8
   140009a0d:	je     0x140009a2e
   140009a0f:	lea    rcx,[rip+0x1d2c2]        # 0x140026cd8
   140009a16:	call   0x14000d6b0
   140009a1b:	test   eax,eax
   140009a1d:	je     0x140009a2e
   140009a1f:	xor    r8d,r8d
   140009a22:	xor    ecx,ecx
   140009a24:	lea    edx,[r8+0x2]
   140009a28:	call   QWORD PTR [rip+0x1d2aa]        # 0x140026cd8
   140009a2e:	xor    eax,eax
   140009a30:	mov    rbx,QWORD PTR [rsp+0x30]
   140009a35:	add    rsp,0x20
   140009a39:	pop    rdi
   140009a3a:	ret    
   140009a3b:	int3   
   140009a3c:	mov    QWORD PTR [rsp+0x8],rbx
   140009a41:	mov    QWORD PTR [rsp+0x10],rsi
   140009a46:	mov    DWORD PTR [rsp+0x18],r8d
   140009a4b:	push   rdi
   140009a4c:	push   r12
   140009a4e:	push   r13
   140009a50:	push   r14
   140009a52:	push   r15
   140009a54:	sub    rsp,0x40
   140009a58:	mov    r12d,r8d
   140009a5b:	mov    ebx,edx
   140009a5d:	mov    r15d,ecx
   140009a60:	mov    ecx,0x8
   140009a65:	call   0x14000cb28
   140009a6a:	nop
   140009a6b:	cmp    DWORD PTR [rip+0x1af5e],0x1        # 0x1400249d0
   140009a72:	je     0x140009b79
   140009a78:	mov    DWORD PTR [rip+0x1af4a],0x1        # 0x1400249cc
   140009a82:	mov    BYTE PTR [rip+0x1af3f],r12b        # 0x1400249c8
   140009a89:	test   ebx,ebx
   140009a8b:	jne    0x140009b65
   140009a91:	mov    rcx,QWORD PTR [rip+0x1d228]        # 0x140026cc0
   140009a98:	call   QWORD PTR [rip+0x10642]        # 0x14001a0e0
   140009a9e:	mov    rsi,rax
   140009aa1:	mov    QWORD PTR [rsp+0x30],rax
   140009aa6:	test   rax,rax
   140009aa9:	je     0x140009b52
   140009aaf:	mov    rcx,QWORD PTR [rip+0x1d202]        # 0x140026cb8
   140009ab6:	call   QWORD PTR [rip+0x10624]        # 0x14001a0e0
   140009abc:	mov    rdi,rax
   140009abf:	mov    QWORD PTR [rsp+0x20],rax
   140009ac4:	mov    r14,rsi
   140009ac7:	mov    QWORD PTR [rsp+0x28],rsi
   140009acc:	mov    r13,rax
   140009acf:	mov    QWORD PTR [rsp+0x38],rax
   140009ad4:	sub    rdi,0x8
   140009ad8:	mov    QWORD PTR [rsp+0x20],rdi
   140009add:	cmp    rdi,rsi
   140009ae0:	jb     0x140009b52
   140009ae2:	call   0x14000d078
   140009ae7:	cmp    QWORD PTR [rdi],rax
   140009aea:	jne    0x140009aee
   140009aec:	jmp    0x140009ad4
   140009aee:	cmp    rdi,rsi
   140009af1:	jb     0x140009b52
   140009af3:	mov    rcx,QWORD PTR [rdi]
   140009af6:	call   QWORD PTR [rip+0x105e4]        # 0x14001a0e0
   140009afc:	mov    rbx,rax
   140009aff:	call   0x14000d078
   140009b04:	mov    QWORD PTR [rdi],rax
   140009b07:	call   rbx
   140009b09:	mov    rcx,QWORD PTR [rip+0x1d1b0]        # 0x140026cc0
   140009b10:	call   QWORD PTR [rip+0x105ca]        # 0x14001a0e0
   140009b16:	mov    rbx,rax
   140009b19:	mov    rcx,QWORD PTR [rip+0x1d198]        # 0x140026cb8
   140009b20:	call   QWORD PTR [rip+0x105ba]        # 0x14001a0e0
   140009b26:	cmp    r14,rbx
   140009b29:	jne    0x140009b30
   140009b2b:	cmp    r13,rax
   140009b2e:	je     0x140009aec
   140009b30:	mov    r14,rbx
   140009b33:	mov    QWORD PTR [rsp+0x28],rbx
   140009b38:	mov    rsi,rbx
   140009b3b:	mov    QWORD PTR [rsp+0x30],rbx
   140009b40:	mov    r13,rax
   140009b43:	mov    QWORD PTR [rsp+0x38],rax
   140009b48:	mov    rdi,rax
   140009b4b:	mov    QWORD PTR [rsp+0x20],rax
   140009b50:	jmp    0x140009aec
   140009b52:	lea    rdx,[rip+0x10857]        # 0x14001a3b0
   140009b59:	lea    rcx,[rip+0x10838]        # 0x14001a398
   140009b60:	call   0x14000991c
   140009b65:	lea    rdx,[rip+0x10854]        # 0x14001a3c0
   140009b6c:	lea    rcx,[rip+0x10845]        # 0x14001a3b8
   140009b73:	call   0x14000991c
   140009b78:	nop
   140009b79:	test   r12d,r12d
   140009b7c:	je     0x140009b8d
   140009b7e:	mov    ecx,0x8
   140009b83:	call   0x14000ca28
   140009b88:	test   r12d,r12d
   140009b8b:	jne    0x140009bb3
   140009b8d:	mov    DWORD PTR [rip+0x1ae39],0x1        # 0x1400249d0
   140009b97:	mov    ecx,0x8
   140009b9c:	call   0x14000ca28
   140009ba1:	mov    ecx,r15d
   140009ba4:	call   0x14000986c
   140009ba9:	mov    ecx,r15d
   140009bac:	call   QWORD PTR [rip+0x10526]        # 0x14001a0d8
   140009bb2:	int3   
   140009bb3:	mov    rbx,QWORD PTR [rsp+0x70]
   140009bb8:	mov    rsi,QWORD PTR [rsp+0x78]
   140009bbd:	add    rsp,0x40
   140009bc1:	pop    r15
   140009bc3:	pop    r14
   140009bc5:	pop    r13
   140009bc7:	pop    r12
   140009bc9:	pop    rdi
   140009bca:	ret    
   140009bcb:	int3   
   140009bcc:	xor    r8d,r8d
   140009bcf:	xor    edx,edx
   140009bd1:	jmp    0x140009a3c
   140009bd6:	int3   
   140009bd7:	int3   
   140009bd8:	xor    r8d,r8d
   140009bdb:	lea    edx,[r8+0x1]
   140009bdf:	jmp    0x140009a3c
   140009be4:	xor    edx,edx
   140009be6:	xor    ecx,ecx
   140009be8:	lea    r8d,[rdx+0x1]
   140009bec:	jmp    0x140009a3c
   140009bf1:	int3   
   140009bf2:	int3   
   140009bf3:	int3   
   140009bf4:	mov    edx,0x1
   140009bf9:	xor    ecx,ecx
   140009bfb:	mov    r8d,edx
   140009bfe:	jmp    0x140009a3c
   140009c03:	int3   
   140009c04:	rex push rbx
   140009c06:	sub    rsp,0x20
   140009c0a:	mov    ebx,ecx
   140009c0c:	call   0x14000db80
   140009c11:	mov    ecx,ebx
   140009c13:	call   0x14000d920
   140009c18:	xor    r8d,r8d
   140009c1b:	mov    ecx,0xff
   140009c20:	lea    edx,[r8+0x1]
   140009c24:	call   0x140009a3c
   140009c29:	int3   
   140009c2a:	int3   
   140009c2b:	int3   
   140009c2c:	mov    rax,rsp
   140009c2f:	mov    QWORD PTR [rax+0x8],rcx
   140009c33:	mov    QWORD PTR [rax+0x10],rdx
   140009c37:	mov    QWORD PTR [rax+0x18],r8
   140009c3b:	mov    QWORD PTR [rax+0x20],r9
   140009c3f:	push   rbx
   140009c40:	push   rdi
   140009c41:	sub    rsp,0x28
   140009c45:	xor    eax,eax
   140009c47:	test   rcx,rcx
   140009c4a:	setne  al
   140009c4d:	test   eax,eax
   140009c4f:	jne    0x140009c66
   140009c51:	call   0x14000bdc0
   140009c56:	mov    DWORD PTR [rax],0x16
   140009c5c:	call   0x14000d01c
   140009c61:	or     eax,0xffffffff
   140009c64:	jmp    0x140009cd0
   140009c66:	lea    rdi,[rsp+0x48]
   140009c6b:	call   0x14000ab98
   140009c70:	lea    rdx,[rax+0x30]
   140009c74:	mov    ecx,0x1
   140009c79:	call   0x14000ad0c
   140009c7e:	nop
   140009c7f:	call   0x14000ab98
   140009c84:	lea    rcx,[rax+0x30]
   140009c88:	call   0x14000dbc4
   140009c8d:	mov    ebx,eax
   140009c8f:	call   0x14000ab98
   140009c94:	mov    r9,rdi
   140009c97:	xor    r8d,r8d
   140009c9a:	mov    rdx,QWORD PTR [rsp+0x40]
   140009c9f:	lea    rcx,[rax+0x30]
   140009ca3:	call   0x14000de04
   140009ca8:	mov    edi,eax
   140009caa:	call   0x14000ab98
   140009caf:	lea    rdx,[rax+0x30]
   140009cb3:	mov    ecx,ebx
   140009cb5:	call   0x14000dc98
   140009cba:	nop
   140009cbb:	call   0x14000ab98
   140009cc0:	lea    rdx,[rax+0x30]
   140009cc4:	mov    ecx,0x1
   140009cc9:	call   0x14000ad8c
   140009cce:	mov    eax,edi
   140009cd0:	add    rsp,0x28
   140009cd4:	pop    rdi
   140009cd5:	pop    rbx
   140009cd6:	ret    
   140009cd7:	int3   
   140009cd8:	mov    rcx,QWORD PTR [rip+0x193e1]        # 0x1400230c0
   140009cdf:	xor    eax,eax
   140009ce1:	or     rcx,0x1
   140009ce5:	cmp    QWORD PTR [rip+0x1acec],rcx        # 0x1400249d8
   140009cec:	sete   al
   140009cef:	ret    
   140009cf0:	mov    QWORD PTR [rsp+0x8],rbx
   140009cf5:	mov    QWORD PTR [rsp+0x10],rsi
   140009cfa:	push   rdi
   140009cfb:	sub    rsp,0x20
   140009cff:	cmp    DWORD PTR [rip+0x1cfaa],0x0        # 0x140026cb0
   140009d06:	mov    rbx,QWORD PTR [rip+0x1ac8b]        # 0x140024998
   140009d0d:	mov    rsi,rcx
   140009d10:	je     0x140009d7f
   140009d12:	test   rbx,rbx
   140009d15:	jne    0x140009d35
   140009d17:	cmp    QWORD PTR [rip+0x1ac8a],rbx        # 0x1400249a8
   140009d1e:	je     0x140009d7f
   140009d20:	call   0x14000e9bc
   140009d25:	test   eax,eax
   140009d27:	jne    0x140009d7f
   140009d29:	mov    rbx,QWORD PTR [rip+0x1ac68]        # 0x140024998
   140009d30:	test   rbx,rbx
   140009d33:	je     0x140009d7f
   140009d35:	test   rsi,rsi
   140009d38:	je     0x140009d7f
   140009d3a:	mov    rcx,rsi
   140009d3d:	call   0x140009fa0
   140009d42:	mov    rdi,rax
   140009d45:	mov    rcx,QWORD PTR [rbx]
   140009d48:	test   rcx,rcx
   140009d4b:	je     0x140009d7f
   140009d4d:	call   0x140009fa0
   140009d52:	cmp    rax,rdi
   140009d55:	jbe    0x140009d6f
   140009d57:	mov    rcx,QWORD PTR [rbx]
   140009d5a:	cmp    BYTE PTR [rcx+rdi*1],0x3d
   140009d5e:	jne    0x140009d6f
   140009d60:	mov    r8,rdi
   140009d63:	mov    rdx,rsi
   140009d66:	call   0x14000e9b4
   140009d6b:	test   eax,eax
   140009d6d:	je     0x140009d75
   140009d6f:	add    rbx,0x8
   140009d73:	jmp    0x140009d45
   140009d75:	mov    rax,QWORD PTR [rbx]
   140009d78:	lea    rax,[rax+rdi*1+0x1]
   140009d7d:	jmp    0x140009d81
   140009d7f:	xor    eax,eax
   140009d81:	mov    rbx,QWORD PTR [rsp+0x30]
   140009d86:	mov    rsi,QWORD PTR [rsp+0x38]
   140009d8b:	add    rsp,0x20
   140009d8f:	pop    rdi
   140009d90:	ret    
   140009d91:	int3   
   140009d92:	int3   
   140009d93:	int3   
   140009d94:	rex push rbx
   140009d96:	sub    rsp,0x20
   140009d9a:	mov    rbx,rcx
   140009d9d:	xor    eax,eax
   140009d9f:	test   rcx,rcx
   140009da2:	setne  al
   140009da5:	test   eax,eax
   140009da7:	jne    0x140009dbd
   140009da9:	call   0x14000bdc0
   140009dae:	mov    DWORD PTR [rax],0x16
   140009db4:	call   0x14000d01c
   140009db9:	xor    eax,eax
   140009dbb:	jmp    0x140009df9
   140009dbd:	mov    edx,0x7fff
   140009dc2:	call   0x14000eb58
   140009dc7:	xor    ecx,ecx
   140009dc9:	cmp    rax,0x7fff
   140009dcf:	setb   cl
   140009dd2:	test   ecx,ecx
   140009dd4:	je     0x140009da9
   140009dd6:	mov    ecx,0x7
   140009ddb:	call   0x14000cb28
   140009de0:	nop
   140009de1:	mov    rcx,rbx
   140009de4:	call   0x140009cf0
   140009de9:	mov    rbx,rax
   140009dec:	mov    ecx,0x7
   140009df1:	call   0x14000ca28
   140009df6:	mov    rax,rbx
   140009df9:	add    rsp,0x20
   140009dfd:	pop    rbx
   140009dfe:	ret    
   140009dff:	int3   
   140009e00:	mov    QWORD PTR [rsp+0x10],rbx
   140009e05:	push   rdi
   140009e06:	sub    rsp,0x30
   140009e0a:	mov    eax,0x5a4d
   140009e0f:	cmp    WORD PTR [rip+0xffffffffffff61ea],ax        # 0x140000000
   140009e16:	je     0x140009e1c
   140009e18:	xor    ebx,ebx
   140009e1a:	jmp    0x140009e54
   140009e1c:	movsxd rax,DWORD PTR [rip+0xffffffffffff6219]        # 0x14000003c
   140009e23:	lea    rcx,[rip+0xffffffffffff61d6]        # 0x140000000
   140009e2a:	add    rax,rcx
   140009e2d:	cmp    DWORD PTR [rax],0x4550
   140009e33:	jne    0x140009e18
   140009e35:	mov    ecx,0x20b
   140009e3a:	cmp    WORD PTR [rax+0x18],cx
   140009e3e:	jne    0x140009e18
   140009e40:	xor    ebx,ebx
   140009e42:	cmp    DWORD PTR [rax+0x84],0xe
   140009e49:	jbe    0x140009e54
   140009e4b:	cmp    DWORD PTR [rax+0xf8],ebx
   140009e51:	setne  bl
   140009e54:	mov    DWORD PTR [rsp+0x40],ebx
   140009e58:	call   0x14000f560
   140009e5d:	test   eax,eax
   140009e5f:	jne    0x140009e83
   140009e61:	cmp    DWORD PTR [rip+0x1ab88],0x2        # 0x1400249f0
   140009e68:	je     0x140009e6f
   140009e6a:	call   0x14000db80
   140009e6f:	mov    ecx,0x1c
   140009e74:	call   0x14000d920
   140009e79:	mov    ecx,0xff
   140009e7e:	call   0x1400098a8
   140009e83:	call   0x14000d39c
   140009e88:	test   eax,eax
   140009e8a:	jne    0x140009eae
   140009e8c:	cmp    DWORD PTR [rip+0x1ab5d],0x2        # 0x1400249f0
   140009e93:	je     0x140009e9a
   140009e95:	call   0x14000db80
   140009e9a:	mov    ecx,0x10
   140009e9f:	call   0x14000d920
   140009ea4:	mov    ecx,0xff
   140009ea9:	call   0x1400098a8
   140009eae:	call   0x14000d588
   140009eb3:	nop
   140009eb4:	call   0x14000f28c
   140009eb9:	test   eax,eax
   140009ebb:	jns    0x140009ec7
   140009ebd:	mov    ecx,0x1b
   140009ec2:	call   0x140009c04
   140009ec7:	call   QWORD PTR [rip+0x10173]        # 0x14001a040
   140009ecd:	mov    QWORD PTR [rip+0x1cdd4],rax        # 0x140026ca8
   140009ed4:	call   0x14000f198
   140009ed9:	mov    QWORD PTR [rip+0x1ab00],rax        # 0x1400249e0
   140009ee0:	call   0x14000f0a0
   140009ee5:	test   eax,eax
   140009ee7:	jns    0x140009ef3
   140009ee9:	mov    ecx,0x8
   140009eee:	call   0x140009c04
   140009ef3:	call   0x14000eda0
   140009ef8:	test   eax,eax
   140009efa:	jns    0x140009f06
   140009efc:	mov    ecx,0x9
   140009f01:	call   0x140009c04
   140009f06:	mov    ecx,0x1
   140009f0b:	call   0x14000998c
   140009f10:	test   eax,eax
   140009f12:	je     0x140009f1b
   140009f14:	mov    ecx,eax
   140009f16:	call   0x140009c04
   140009f1b:	mov    r8,QWORD PTR [rip+0x1aa76]        # 0x140024998
   140009f22:	mov    QWORD PTR [rip+0x1aa77],r8        # 0x1400249a0
   140009f29:	mov    rdx,QWORD PTR [rip+0x1aa58]        # 0x140024988
   140009f30:	mov    ecx,DWORD PTR [rip+0x1aa4e]        # 0x140024984
   140009f36:	call   0x140001000
   140009f3b:	mov    edi,eax
   140009f3d:	mov    DWORD PTR [rsp+0x20],eax
   140009f41:	test   ebx,ebx
   140009f43:	jne    0x140009f4c
   140009f45:	mov    ecx,eax
   140009f47:	call   0x140009bcc
   140009f4c:	call   0x140009be4
   140009f51:	jmp    0x140009f6a
   140009f53:	mov    edi,eax
   140009f55:	cmp    DWORD PTR [rsp+0x40],0x0
   140009f5a:	jne    0x140009f64
   140009f5c:	mov    ecx,eax
   140009f5e:	call   0x140009bd8
   140009f63:	int3   
   140009f64:	call   0x140009bf4
   140009f69:	nop
   140009f6a:	mov    eax,edi
   140009f6c:	mov    rbx,QWORD PTR [rsp+0x48]
   140009f71:	add    rsp,0x30
   140009f75:	pop    rdi
   140009f76:	ret    
   140009f77:	int3   
   140009f78:	sub    rsp,0x28
   140009f7c:	call   0x14000f5b8
   140009f81:	add    rsp,0x28
   140009f85:	jmp    0x140009e00
   140009f8a:	int3   
   140009f8b:	int3   
   140009f8c:	int3   
   140009f8d:	int3   
   140009f8e:	int3   
   140009f8f:	int3   
   140009f90:	int3   
   140009f91:	int3   
   140009f92:	int3   
   140009f93:	int3   
   140009f94:	int3   
   140009f95:	int3   
   140009f96:	data16 nop WORD PTR [rax+rax*1+0x0]
   140009fa0:	mov    rax,rcx
   140009fa3:	neg    rcx
   140009fa6:	test   rax,0x7
   140009fac:	je     0x140009fbd
   140009fae:	xchg   ax,ax
   140009fb0:	mov    dl,BYTE PTR [rax]
   140009fb2:	inc    rax
   140009fb5:	test   dl,dl
   140009fb7:	je     0x14000a018
   140009fb9:	test   al,0x7
   140009fbb:	jne    0x140009fb0
   140009fbd:	movabs r8,0x7efefefefefefeff
   140009fc7:	movabs r11,0x8101010101010100
   140009fd1:	mov    rdx,QWORD PTR [rax]
   140009fd4:	mov    r9,r8
   140009fd7:	add    rax,0x8
   140009fdb:	add    r9,rdx
   140009fde:	not    rdx
   140009fe1:	xor    rdx,r9
   140009fe4:	and    rdx,r11
   140009fe7:	je     0x140009fd1
   140009fe9:	mov    rdx,QWORD PTR [rax-0x8]
   140009fed:	test   dl,dl
   140009fef:	je     0x14000a042
   140009ff1:	test   dh,dh
   140009ff3:	je     0x14000a03c
   140009ff5:	shr    rdx,0x10
   140009ff9:	test   dl,dl
   140009ffb:	je     0x14000a036
   140009ffd:	test   dh,dh
   140009fff:	je     0x14000a030
   14000a001:	shr    rdx,0x10
   14000a005:	test   dl,dl
   14000a007:	je     0x14000a02a
   14000a009:	test   dh,dh
   14000a00b:	je     0x14000a024
   14000a00d:	shr    edx,0x10
   14000a010:	test   dl,dl
   14000a012:	je     0x14000a01e
   14000a014:	test   dh,dh
   14000a016:	jne    0x140009fd1
   14000a018:	lea    rax,[rcx+rax*1-0x1]
   14000a01d:	ret    
   14000a01e:	lea    rax,[rcx+rax*1-0x2]
   14000a023:	ret    
   14000a024:	lea    rax,[rcx+rax*1-0x3]
   14000a029:	ret    
   14000a02a:	lea    rax,[rcx+rax*1-0x4]
   14000a02f:	ret    
   14000a030:	lea    rax,[rcx+rax*1-0x5]
   14000a035:	ret    
   14000a036:	lea    rax,[rcx+rax*1-0x6]
   14000a03b:	ret    
   14000a03c:	lea    rax,[rcx+rax*1-0x7]
   14000a041:	ret    
   14000a042:	lea    rax,[rcx+rax*1-0x8]
   14000a047:	ret    
   14000a048:	mov    rax,rsp
   14000a04b:	mov    QWORD PTR [rax+0x8],rbx
   14000a04f:	mov    QWORD PTR [rax+0x10],rbp
   14000a053:	mov    QWORD PTR [rax+0x18],rsi
   14000a057:	push   rdi
   14000a058:	sub    rsp,0x50
   14000a05c:	and    QWORD PTR [rax-0x38],0x0
   14000a061:	mov    rdi,rdx
   14000a064:	xor    edx,edx
   14000a066:	mov    rbx,r8
   14000a069:	mov    rbp,rcx
   14000a06c:	lea    r8d,[rdx+0x28]
   14000a070:	lea    rcx,[rax-0x30]
   14000a074:	mov    rsi,r9
   14000a077:	call   0x14000a530
   14000a07c:	test   rdi,rdi
   14000a07f:	jne    0x14000a096
   14000a081:	call   0x14000bdc0
   14000a086:	mov    DWORD PTR [rax],0x16
   14000a08c:	call   0x14000d01c
   14000a091:	or     eax,0xffffffff
   14000a094:	jmp    0x14000a0d9
   14000a096:	test   rbx,rbx
   14000a099:	je     0x14000a081
   14000a09b:	mov    rcx,rdi
   14000a09e:	call   0x140009fa0
   14000a0a3:	mov    r9,QWORD PTR [rsp+0x80]
   14000a0ab:	mov    ecx,0x7fffffff
   14000a0b0:	cmp    rax,rcx
   14000a0b3:	mov    r8,rsi
   14000a0b6:	mov    rdx,rbx
   14000a0b9:	cmova  eax,ecx
   14000a0bc:	lea    rcx,[rsp+0x20]
   14000a0c1:	mov    DWORD PTR [rsp+0x38],0x49
   14000a0c9:	mov    QWORD PTR [rsp+0x30],rdi
   14000a0ce:	mov    QWORD PTR [rsp+0x20],rdi
   14000a0d3:	mov    DWORD PTR [rsp+0x28],eax
   14000a0d7:	call   rbp
   14000a0d9:	mov    rbx,QWORD PTR [rsp+0x60]
   14000a0de:	mov    rbp,QWORD PTR [rsp+0x68]
   14000a0e3:	mov    rsi,QWORD PTR [rsp+0x70]
   14000a0e8:	add    rsp,0x50
   14000a0ec:	pop    rdi
   14000a0ed:	ret    
   14000a0ee:	int3   
   14000a0ef:	int3   
   14000a0f0:	mov    r11,rsp
   14000a0f3:	mov    QWORD PTR [r11+0x10],rdx
   14000a0f7:	mov    QWORD PTR [r11+0x18],r8
   14000a0fb:	mov    QWORD PTR [r11+0x20],r9
   14000a0ff:	sub    rsp,0x38
   14000a103:	mov    r8,rdx
   14000a106:	lea    rax,[r11+0x18]
   14000a10a:	mov    rdx,rcx
   14000a10d:	lea    rcx,[rip+0x5618]        # 0x14000f72c
   14000a114:	xor    r9d,r9d
   14000a117:	mov    QWORD PTR [r11-0x18],rax
   14000a11b:	call   0x14000a048
   14000a120:	add    rsp,0x38
   14000a124:	ret    
   14000a125:	int3   
   14000a126:	int3   
   14000a127:	int3   
   14000a128:	int3   
   14000a129:	int3   
   14000a12a:	int3   
   14000a12b:	int3   
   14000a12c:	int3   
   14000a12d:	int3   
   14000a12e:	int3   
   14000a12f:	int3   
   14000a130:	int3   
   14000a131:	int3   
   14000a132:	int3   
   14000a133:	int3   
   14000a134:	int3   
   14000a135:	int3   
   14000a136:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000a140:	mov    r11,rcx
   14000a143:	sub    rdx,rcx
   14000a146:	jb     0x14000a2ea
   14000a14c:	cmp    r8,0x8
   14000a150:	jb     0x14000a1b3
   14000a152:	test   cl,0x7
   14000a155:	je     0x14000a18d
   14000a157:	test   cl,0x1
   14000a15a:	je     0x14000a167
   14000a15c:	mov    al,BYTE PTR [rdx+rcx*1]
   14000a15f:	dec    r8
   14000a162:	mov    BYTE PTR [rcx],al
   14000a164:	inc    rcx
   14000a167:	test   cl,0x2
   14000a16a:	je     0x14000a17b
   14000a16c:	mov    ax,WORD PTR [rdx+rcx*1]
   14000a170:	sub    r8,0x2
   14000a174:	mov    WORD PTR [rcx],ax
   14000a177:	add    rcx,0x2
   14000a17b:	test   cl,0x4
   14000a17e:	je     0x14000a18d
   14000a180:	mov    eax,DWORD PTR [rdx+rcx*1]
   14000a183:	sub    r8,0x4
   14000a187:	mov    DWORD PTR [rcx],eax
   14000a189:	add    rcx,0x4
   14000a18d:	mov    r9,r8
   14000a190:	shr    r9,0x5
   14000a194:	jne    0x14000a1e7
   14000a196:	mov    r9,r8
   14000a199:	shr    r9,0x3
   14000a19d:	je     0x14000a1b3
   14000a19f:	mov    rax,QWORD PTR [rdx+rcx*1]
   14000a1a3:	mov    QWORD PTR [rcx],rax
   14000a1a6:	add    rcx,0x8
   14000a1aa:	dec    r9
   14000a1ad:	jne    0x14000a19f
   14000a1af:	and    r8,0x7
   14000a1b3:	test   r8,r8
   14000a1b6:	jne    0x14000a1c0
   14000a1b8:	mov    rax,r11
   14000a1bb:	ret    
   14000a1bc:	nop    DWORD PTR [rax+0x0]
   14000a1c0:	mov    al,BYTE PTR [rdx+rcx*1]
   14000a1c3:	mov    BYTE PTR [rcx],al
   14000a1c5:	inc    rcx
   14000a1c8:	dec    r8
   14000a1cb:	jne    0x14000a1c0
   14000a1cd:	mov    rax,r11
   14000a1d0:	ret    
   14000a1d1:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000a1e0:	data16 data16 xchg ax,ax
   14000a1e4:	data16 xchg ax,ax
   14000a1e7:	cmp    r9,0x2000
   14000a1ee:	jae    0x14000a232
   14000a1f0:	mov    rax,QWORD PTR [rdx+rcx*1]
   14000a1f4:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   14000a1f9:	add    rcx,0x20
   14000a1fd:	mov    QWORD PTR [rcx-0x20],rax
   14000a201:	mov    QWORD PTR [rcx-0x18],r10
   14000a205:	mov    rax,QWORD PTR [rdx+rcx*1-0x10]
   14000a20a:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   14000a20f:	dec    r9
   14000a212:	mov    QWORD PTR [rcx-0x10],rax
   14000a216:	mov    QWORD PTR [rcx-0x8],r10
   14000a21a:	jne    0x14000a1f0
   14000a21c:	and    r8,0x1f
   14000a220:	jmp    0x14000a196
   14000a225:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000a230:	xchg   ax,ax
   14000a232:	cmp    rdx,0x1000
   14000a239:	jb     0x14000a1f0
   14000a23b:	mov    eax,0x20
   14000a240:	prefetchnta BYTE PTR [rdx+rcx*1]
   14000a244:	prefetchnta BYTE PTR [rdx+rcx*1+0x40]
   14000a249:	add    rcx,0x80
   14000a250:	dec    eax
   14000a252:	jne    0x14000a240
   14000a254:	sub    rcx,0x1000
   14000a25b:	mov    eax,0x40
   14000a260:	mov    r9,QWORD PTR [rdx+rcx*1]
   14000a264:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   14000a269:	movnti QWORD PTR [rcx],r9
   14000a26d:	movnti QWORD PTR [rcx+0x8],r10
   14000a272:	mov    r9,QWORD PTR [rdx+rcx*1+0x10]
   14000a277:	mov    r10,QWORD PTR [rdx+rcx*1+0x18]
   14000a27c:	movnti QWORD PTR [rcx+0x10],r9
   14000a281:	movnti QWORD PTR [rcx+0x18],r10
   14000a286:	mov    r9,QWORD PTR [rdx+rcx*1+0x20]
   14000a28b:	mov    r10,QWORD PTR [rdx+rcx*1+0x28]
   14000a290:	add    rcx,0x40
   14000a294:	movnti QWORD PTR [rcx-0x20],r9
   14000a299:	movnti QWORD PTR [rcx-0x18],r10
   14000a29e:	mov    r9,QWORD PTR [rdx+rcx*1-0x10]
   14000a2a3:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   14000a2a8:	dec    eax
   14000a2aa:	movnti QWORD PTR [rcx-0x10],r9
   14000a2af:	movnti QWORD PTR [rcx-0x8],r10
   14000a2b4:	jne    0x14000a260
   14000a2b6:	sub    r8,0x1000
   14000a2bd:	cmp    r8,0x1000
   14000a2c4:	jae    0x14000a23b
   14000a2ca:	lock or BYTE PTR [rsp],0x0
   14000a2cf:	jmp    0x14000a18d
   14000a2d4:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000a2e0:	data16 data16 xchg ax,ax
   14000a2e4:	data16 data16 xchg ax,ax
   14000a2e8:	xchg   ax,ax
   14000a2ea:	add    rcx,r8
   14000a2ed:	cmp    r8,0x8
   14000a2f1:	jb     0x14000a354
   14000a2f3:	test   cl,0x7
   14000a2f6:	je     0x14000a32e
   14000a2f8:	test   cl,0x1
   14000a2fb:	je     0x14000a308
   14000a2fd:	dec    rcx
   14000a300:	mov    al,BYTE PTR [rdx+rcx*1]
   14000a303:	dec    r8
   14000a306:	mov    BYTE PTR [rcx],al
   14000a308:	test   cl,0x2
   14000a30b:	je     0x14000a31c
   14000a30d:	sub    rcx,0x2
   14000a311:	mov    ax,WORD PTR [rdx+rcx*1]
   14000a315:	sub    r8,0x2
   14000a319:	mov    WORD PTR [rcx],ax
   14000a31c:	test   cl,0x4
   14000a31f:	je     0x14000a32e
   14000a321:	sub    rcx,0x4
   14000a325:	mov    eax,DWORD PTR [rdx+rcx*1]
   14000a328:	sub    r8,0x4
   14000a32c:	mov    DWORD PTR [rcx],eax
   14000a32e:	mov    r9,r8
   14000a331:	shr    r9,0x5
   14000a335:	jne    0x14000a387
   14000a337:	mov    r9,r8
   14000a33a:	shr    r9,0x3
   14000a33e:	je     0x14000a354
   14000a340:	sub    rcx,0x8
   14000a344:	mov    rax,QWORD PTR [rdx+rcx*1]
   14000a348:	dec    r9
   14000a34b:	mov    QWORD PTR [rcx],rax
   14000a34e:	jne    0x14000a340
   14000a350:	and    r8,0x7
   14000a354:	test   r8,r8
   14000a357:	jne    0x14000a360
   14000a359:	mov    rax,r11
   14000a35c:	ret    
   14000a35d:	nop    DWORD PTR [rax]
   14000a360:	dec    rcx
   14000a363:	mov    al,BYTE PTR [rdx+rcx*1]
   14000a366:	dec    r8
   14000a369:	mov    BYTE PTR [rcx],al
   14000a36b:	jne    0x14000a360
   14000a36d:	mov    rax,r11
   14000a370:	ret    
   14000a371:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000a380:	data16 data16 xchg ax,ax
   14000a384:	data16 xchg ax,ax
   14000a387:	cmp    r9,0x2000
   14000a38e:	jae    0x14000a3d2
   14000a390:	mov    rax,QWORD PTR [rdx+rcx*1-0x8]
   14000a395:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   14000a39a:	sub    rcx,0x20
   14000a39e:	mov    QWORD PTR [rcx+0x18],rax
   14000a3a2:	mov    QWORD PTR [rcx+0x10],r10
   14000a3a6:	mov    rax,QWORD PTR [rdx+rcx*1+0x8]
   14000a3ab:	mov    r10,QWORD PTR [rdx+rcx*1]
   14000a3af:	dec    r9
   14000a3b2:	mov    QWORD PTR [rcx+0x8],rax
   14000a3b6:	mov    QWORD PTR [rcx],r10
   14000a3b9:	jne    0x14000a390
   14000a3bb:	and    r8,0x1f
   14000a3bf:	jmp    0x14000a337
   14000a3c4:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000a3d0:	xchg   ax,ax
   14000a3d2:	cmp    rdx,0xfffffffffffff000
   14000a3d9:	ja     0x14000a390
   14000a3db:	mov    eax,0x20
   14000a3e0:	sub    rcx,0x80
   14000a3e7:	prefetchnta BYTE PTR [rdx+rcx*1]
   14000a3eb:	prefetchnta BYTE PTR [rdx+rcx*1+0x40]
   14000a3f0:	dec    eax
   14000a3f2:	jne    0x14000a3e0
   14000a3f4:	add    rcx,0x1000
   14000a3fb:	mov    eax,0x40
   14000a400:	mov    r9,QWORD PTR [rdx+rcx*1-0x8]
   14000a405:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   14000a40a:	movnti QWORD PTR [rcx-0x8],r9
   14000a40f:	movnti QWORD PTR [rcx-0x10],r10
   14000a414:	mov    r9,QWORD PTR [rdx+rcx*1-0x18]
   14000a419:	mov    r10,QWORD PTR [rdx+rcx*1-0x20]
   14000a41e:	movnti QWORD PTR [rcx-0x18],r9
   14000a423:	movnti QWORD PTR [rcx-0x20],r10
   14000a428:	mov    r9,QWORD PTR [rdx+rcx*1-0x28]
   14000a42d:	mov    r10,QWORD PTR [rdx+rcx*1-0x30]
   14000a432:	sub    rcx,0x40
   14000a436:	movnti QWORD PTR [rcx+0x18],r9
   14000a43b:	movnti QWORD PTR [rcx+0x10],r10
   14000a440:	mov    r9,QWORD PTR [rdx+rcx*1+0x8]
   14000a445:	mov    r10,QWORD PTR [rdx+rcx*1]
   14000a449:	dec    eax
   14000a44b:	movnti QWORD PTR [rcx+0x8],r9
   14000a450:	movnti QWORD PTR [rcx],r10
   14000a454:	jne    0x14000a400
   14000a456:	sub    r8,0x1000
   14000a45d:	cmp    r8,0x1000
   14000a464:	jae    0x14000a3db
   14000a46a:	lock or BYTE PTR [rsp],0x0
   14000a46f:	jmp    0x14000a32e
   14000a474:	mov    QWORD PTR [rsp+0x10],rdx
   14000a479:	mov    QWORD PTR [rsp+0x18],r8
   14000a47e:	mov    QWORD PTR [rsp+0x20],r9
   14000a483:	push   rbp
   14000a484:	push   rbx
   14000a485:	push   rdi
   14000a486:	mov    rbp,rsp
   14000a489:	sub    rsp,0x50
   14000a48d:	and    QWORD PTR [rbp-0x30],0x0
   14000a492:	mov    rdi,rdx
   14000a495:	xor    edx,edx
   14000a497:	mov    rbx,rcx
   14000a49a:	lea    rcx,[rbp-0x28]
   14000a49e:	lea    r8d,[rdx+0x28]
   14000a4a2:	call   0x14000a530
   14000a4a7:	test   rdi,rdi
   14000a4aa:	jne    0x14000a4c1
   14000a4ac:	call   0x14000bdc0
   14000a4b1:	mov    DWORD PTR [rax],0x16
   14000a4b7:	call   0x14000d01c
   14000a4bc:	or     eax,0xffffffff
   14000a4bf:	jmp    0x14000a50c
   14000a4c1:	test   rbx,rbx
   14000a4c4:	je     0x14000a4ac
   14000a4c6:	lea    r9,[rbp+0x30]
   14000a4ca:	lea    rcx,[rbp-0x30]
   14000a4ce:	xor    r8d,r8d
   14000a4d1:	mov    rdx,rdi
   14000a4d4:	mov    DWORD PTR [rbp-0x28],0x7fffffff
   14000a4db:	mov    DWORD PTR [rbp-0x18],0x42
   14000a4e2:	mov    QWORD PTR [rbp-0x20],rbx
   14000a4e6:	mov    QWORD PTR [rbp-0x30],rbx
   14000a4ea:	call   0x14000de04
   14000a4ef:	dec    DWORD PTR [rbp-0x28]
   14000a4f2:	mov    ebx,eax
   14000a4f4:	js     0x14000a4ff
   14000a4f6:	mov    rcx,QWORD PTR [rbp-0x30]
   14000a4fa:	mov    BYTE PTR [rcx],0x0
   14000a4fd:	jmp    0x14000a50a
   14000a4ff:	lea    rdx,[rbp-0x30]
   14000a503:	xor    ecx,ecx
   14000a505:	call   0x1400107a0
   14000a50a:	mov    eax,ebx
   14000a50c:	add    rsp,0x50
   14000a510:	pop    rdi
   14000a511:	pop    rbx
   14000a512:	pop    rbp
   14000a513:	ret    
   14000a514:	int3   
   14000a515:	int3   
   14000a516:	int3   
   14000a517:	int3   
   14000a518:	int3   
   14000a519:	int3   
   14000a51a:	int3   
   14000a51b:	int3   
   14000a51c:	int3   
   14000a51d:	int3   
   14000a51e:	int3   
   14000a51f:	int3   
   14000a520:	int3   
   14000a521:	int3   
   14000a522:	int3   
   14000a523:	int3   
   14000a524:	int3   
   14000a525:	int3   
   14000a526:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000a530:	mov    rax,rcx
   14000a533:	cmp    r8,0x8
   14000a537:	jb     0x14000a58c
   14000a539:	movzx  edx,dl
   14000a53c:	movabs r9,0x101010101010101
   14000a546:	imul   rdx,r9
   14000a54a:	cmp    r8,0x40
   14000a54e:	jb     0x14000a56e
   14000a550:	neg    rcx
   14000a553:	and    ecx,0x7
   14000a556:	je     0x14000a55e
   14000a558:	sub    r8,rcx
   14000a55b:	mov    QWORD PTR [rax],rdx
   14000a55e:	add    rcx,rax
   14000a561:	mov    r9,r8
   14000a564:	and    r8,0x3f
   14000a568:	shr    r9,0x6
   14000a56c:	jne    0x14000a5a7
   14000a56e:	mov    r9,r8
   14000a571:	and    r8,0x7
   14000a575:	shr    r9,0x3
   14000a579:	je     0x14000a58c
   14000a57b:	data16 data16 xchg ax,ax
   14000a57f:	nop
   14000a580:	mov    QWORD PTR [rcx],rdx
   14000a583:	add    rcx,0x8
   14000a587:	dec    r9
   14000a58a:	jne    0x14000a580
   14000a58c:	test   r8,r8
   14000a58f:	je     0x14000a59b
   14000a591:	mov    BYTE PTR [rcx],dl
   14000a593:	inc    rcx
   14000a596:	dec    r8
   14000a599:	jne    0x14000a591
   14000a59b:	ret    
   14000a59c:	nop    DWORD PTR [rax+0x0]
   14000a5a0:	data16 data16 xchg ax,ax
   14000a5a4:	data16 xchg ax,ax
   14000a5a7:	cmp    r9,0x1c00
   14000a5ae:	jae    0x14000a5e0
   14000a5b0:	mov    QWORD PTR [rcx],rdx
   14000a5b3:	mov    QWORD PTR [rcx+0x8],rdx
   14000a5b7:	mov    QWORD PTR [rcx+0x10],rdx
   14000a5bb:	add    rcx,0x40
   14000a5bf:	mov    QWORD PTR [rcx-0x28],rdx
   14000a5c3:	mov    QWORD PTR [rcx-0x20],rdx
   14000a5c7:	dec    r9
   14000a5ca:	mov    QWORD PTR [rcx-0x18],rdx
   14000a5ce:	mov    QWORD PTR [rcx-0x10],rdx
   14000a5d2:	mov    QWORD PTR [rcx-0x8],rdx
   14000a5d6:	jne    0x14000a5b0
   14000a5d8:	jmp    0x14000a56e
   14000a5da:	nop    WORD PTR [rax+rax*1+0x0]
   14000a5e0:	movnti QWORD PTR [rcx],rdx
   14000a5e4:	movnti QWORD PTR [rcx+0x8],rdx
   14000a5e9:	movnti QWORD PTR [rcx+0x10],rdx
   14000a5ee:	add    rcx,0x40
   14000a5f2:	movnti QWORD PTR [rcx-0x28],rdx
   14000a5f7:	movnti QWORD PTR [rcx-0x20],rdx
   14000a5fc:	dec    r9
   14000a5ff:	movnti QWORD PTR [rcx-0x18],rdx
   14000a604:	movnti QWORD PTR [rcx-0x10],rdx
   14000a609:	movnti QWORD PTR [rcx-0x8],rdx
   14000a60e:	jne    0x14000a5e0
   14000a610:	lock or BYTE PTR [rsp],0x0
   14000a615:	jmp    0x14000a56e
   14000a61a:	int3   
   14000a61b:	int3   
   14000a61c:	rex push rbx
   14000a61e:	sub    rsp,0x20
   14000a622:	mov    r11d,DWORD PTR [r8]
   14000a625:	mov    rbx,rdx
   14000a628:	mov    r9,rcx
   14000a62b:	and    r11d,0xfffffff8
   14000a62f:	test   BYTE PTR [r8],0x4
   14000a633:	mov    r10,rcx
   14000a636:	je     0x14000a64b
   14000a638:	mov    eax,DWORD PTR [r8+0x8]
   14000a63c:	movsxd r10,DWORD PTR [r8+0x4]
   14000a640:	neg    eax
   14000a642:	add    r10,rcx
   14000a645:	movsxd rcx,eax
   14000a648:	and    r10,rcx
   14000a64b:	movsxd rax,r11d
   14000a64e:	mov    rdx,QWORD PTR [rax+r10*1]
   14000a652:	mov    rax,QWORD PTR [rbx+0x10]
   14000a656:	mov    ecx,DWORD PTR [rax+0x8]
   14000a659:	add    rcx,QWORD PTR [rbx+0x8]
   14000a65d:	test   BYTE PTR [rcx+0x3],0xf
   14000a661:	je     0x14000a66f
   14000a663:	movzx  eax,BYTE PTR [rcx+0x3]
   14000a667:	and    eax,0xfffffff0
   14000a66a:	cdqe   
   14000a66c:	add    r9,rax
   14000a66f:	xor    r9,rdx
   14000a672:	mov    rcx,r9
   14000a675:	add    rsp,0x20
   14000a679:	pop    rbx
   14000a67a:	jmp    0x14000a820
   14000a67f:	int3   
   14000a680:	sub    rsp,0x28
   14000a684:	mov    r8,QWORD PTR [r9+0x38]
   14000a688:	mov    rcx,rdx
   14000a68b:	mov    rdx,r9
   14000a68e:	call   0x14000a61c
   14000a693:	mov    eax,0x1
   14000a698:	add    rsp,0x28
   14000a69c:	ret    
   14000a69d:	int3   
   14000a69e:	int3   
   14000a69f:	int3   
   14000a6a0:	int3   
   14000a6a1:	int3   
   14000a6a2:	int3   
   14000a6a3:	int3   
   14000a6a4:	int3   
   14000a6a5:	int3   
   14000a6a6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000a6b0:	mov    r11,rcx
   14000a6b3:	test   cl,0x7
   14000a6b6:	je     0x14000a6ca
   14000a6b8:	mov    al,BYTE PTR [rcx]
   14000a6ba:	test   al,al
   14000a6bc:	je     0x14000a753
   14000a6c2:	inc    rcx
   14000a6c5:	test   cl,0x7
   14000a6c8:	jne    0x14000a6b8
   14000a6ca:	mov    rax,QWORD PTR [rcx]
   14000a6cd:	mov    r10,rax
   14000a6d0:	movabs r9,0x7efefefefefefeff
   14000a6da:	add    r9,r10
   14000a6dd:	xor    r10,0xffffffffffffffff
   14000a6e1:	xor    r10,r9
   14000a6e4:	add    rcx,0x8
   14000a6e8:	movabs r9,0x8101010101010100
   14000a6f2:	test   r9,r10
   14000a6f5:	je     0x14000a6ca
   14000a6f7:	sub    rcx,0x8
   14000a6fb:	test   al,al
   14000a6fd:	je     0x14000a753
   14000a6ff:	inc    rcx
   14000a702:	test   ah,ah
   14000a704:	je     0x14000a753
   14000a706:	inc    rcx
   14000a709:	shr    rax,0x10
   14000a70d:	test   al,al
   14000a70f:	je     0x14000a753
   14000a711:	inc    rcx
   14000a714:	test   ah,ah
   14000a716:	je     0x14000a753
   14000a718:	inc    rcx
   14000a71b:	shr    rax,0x10
   14000a71f:	test   al,al
   14000a721:	je     0x14000a753
   14000a723:	inc    rcx
   14000a726:	test   ah,ah
   14000a728:	je     0x14000a753
   14000a72a:	inc    rcx
   14000a72d:	shr    eax,0x10
   14000a730:	test   al,al
   14000a732:	je     0x14000a753
   14000a734:	inc    rcx
   14000a737:	test   ah,ah
   14000a739:	je     0x14000a753
   14000a73b:	inc    rcx
   14000a73e:	jmp    0x14000a6ca
   14000a740:	int3   
   14000a741:	int3   
   14000a742:	int3   
   14000a743:	int3   
   14000a744:	int3   
   14000a745:	int3   
   14000a746:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000a750:	mov    r11,rcx
   14000a753:	sub    rcx,rdx
   14000a756:	test   dl,0x7
   14000a759:	je     0x14000a77a
   14000a75b:	mov    al,BYTE PTR [rdx]
   14000a75d:	mov    BYTE PTR [rcx+rdx*1],al
   14000a760:	test   al,al
   14000a762:	je     0x14000a76e
   14000a764:	inc    rdx
   14000a767:	test   dl,0x7
   14000a76a:	jne    0x14000a75b
   14000a76c:	jmp    0x14000a77a
   14000a76e:	mov    rax,r11
   14000a771:	ret    
   14000a772:	mov    QWORD PTR [rcx+rdx*1],rax
   14000a776:	add    rdx,0x8
   14000a77a:	mov    rax,QWORD PTR [rdx]
   14000a77d:	movabs r9,0x7efefefefefefeff
   14000a787:	add    r9,rax
   14000a78a:	mov    r10,rax
   14000a78d:	xor    r10,0xffffffffffffffff
   14000a791:	xor    r10,r9
   14000a794:	movabs r9,0x8101010101010100
   14000a79e:	test   r9,r10
   14000a7a1:	je     0x14000a772
   14000a7a3:	test   al,al
   14000a7a5:	mov    BYTE PTR [rcx+rdx*1],al
   14000a7a8:	je     0x14000a803
   14000a7aa:	inc    rdx
   14000a7ad:	test   ah,ah
   14000a7af:	mov    BYTE PTR [rcx+rdx*1],ah
   14000a7b2:	je     0x14000a803
   14000a7b4:	inc    rdx
   14000a7b7:	shr    rax,0x10
   14000a7bb:	test   al,al
   14000a7bd:	mov    BYTE PTR [rcx+rdx*1],al
   14000a7c0:	je     0x14000a803
   14000a7c2:	inc    rdx
   14000a7c5:	test   ah,ah
   14000a7c7:	mov    BYTE PTR [rcx+rdx*1],ah
   14000a7ca:	je     0x14000a803
   14000a7cc:	inc    rdx
   14000a7cf:	shr    rax,0x10
   14000a7d3:	test   al,al
   14000a7d5:	mov    BYTE PTR [rcx+rdx*1],al
   14000a7d8:	je     0x14000a803
   14000a7da:	inc    rdx
   14000a7dd:	test   ah,ah
   14000a7df:	mov    BYTE PTR [rcx+rdx*1],ah
   14000a7e2:	je     0x14000a803
   14000a7e4:	inc    rdx
   14000a7e7:	shr    eax,0x10
   14000a7ea:	test   al,al
   14000a7ec:	mov    BYTE PTR [rcx+rdx*1],al
   14000a7ef:	je     0x14000a803
   14000a7f1:	inc    rdx
   14000a7f4:	test   ah,ah
   14000a7f6:	mov    BYTE PTR [rcx+rdx*1],ah
   14000a7f9:	je     0x14000a803
   14000a7fb:	inc    rdx
   14000a7fe:	jmp    0x14000a77a
   14000a803:	mov    rax,r11
   14000a806:	ret    
   14000a807:	int3   
   14000a808:	int3   
   14000a809:	int3   
   14000a80a:	int3   
   14000a80b:	int3   
   14000a80c:	int3   
   14000a80d:	int3   
   14000a80e:	int3   
   14000a80f:	int3   
   14000a810:	int3   
   14000a811:	int3   
   14000a812:	int3   
   14000a813:	int3   
   14000a814:	int3   
   14000a815:	int3   
   14000a816:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000a820:	cmp    rcx,QWORD PTR [rip+0x18899]        # 0x1400230c0
   14000a827:	jne    0x14000a83a
   14000a829:	rol    rcx,0x10
   14000a82d:	test   cx,0xffff
   14000a832:	jne    0x14000a836
   14000a834:	repz ret 
   14000a836:	ror    rcx,0x10
   14000a83a:	jmp    0x140010930
   14000a83f:	int3   
   14000a840:	int3   
   14000a841:	int3   
   14000a842:	int3   
   14000a843:	int3   
   14000a844:	int3   
   14000a845:	int3   
   14000a846:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000a850:	sub    rdx,rcx
   14000a853:	mov    r9,rdx
   14000a856:	test   cl,0x7
   14000a859:	je     0x14000a876
   14000a85b:	mov    al,BYTE PTR [rcx]
   14000a85d:	mov    dl,BYTE PTR [rcx+r9*1]
   14000a861:	cmp    al,dl
   14000a863:	jne    0x14000a8bb
   14000a865:	inc    rcx
   14000a868:	test   al,al
   14000a86a:	je     0x14000a8c3
   14000a86c:	test   rcx,0x7
   14000a873:	jne    0x14000a85b
   14000a875:	nop
   14000a876:	movabs r11,0x8101010101010100
   14000a880:	lea    rdx,[rcx+r9*1]
   14000a884:	and    dx,0xfff
   14000a889:	cmp    dx,0xff8
   14000a88e:	ja     0x14000a85b
   14000a890:	mov    rax,QWORD PTR [rcx]
   14000a893:	mov    rdx,QWORD PTR [rcx+r9*1]
   14000a897:	cmp    rax,rdx
   14000a89a:	jne    0x14000a85b
   14000a89c:	movabs r10,0x7efefefefefefeff
   14000a8a6:	add    r10,rdx
   14000a8a9:	xor    rax,0xffffffffffffffff
   14000a8ad:	add    rcx,0x8
   14000a8b1:	xor    rax,r10
   14000a8b4:	test   r11,rax
   14000a8b7:	je     0x14000a880
   14000a8b9:	jmp    0x14000a8ca
   14000a8bb:	sbb    rax,rax
   14000a8be:	sbb    rax,0xffffffffffffffff
   14000a8c2:	ret    
   14000a8c3:	xor    eax,eax
   14000a8c5:	ret    
   14000a8c6:	data16 data16 xchg ax,ax
   14000a8ca:	test   dl,dl
   14000a8cc:	je     0x14000a8f5
   14000a8ce:	test   dh,dh
   14000a8d0:	je     0x14000a8f5
   14000a8d2:	shr    rdx,0x10
   14000a8d6:	test   dl,dl
   14000a8d8:	je     0x14000a8f5
   14000a8da:	test   dh,dh
   14000a8dc:	je     0x14000a8f5
   14000a8de:	shr    rdx,0x10
   14000a8e2:	test   dl,dl
   14000a8e4:	je     0x14000a8f5
   14000a8e6:	test   dh,dh
   14000a8e8:	je     0x14000a8f5
   14000a8ea:	shr    edx,0x10
   14000a8ed:	test   dl,dl
   14000a8ef:	je     0x14000a8f5
   14000a8f1:	test   dh,dh
   14000a8f3:	jne    0x14000a880
   14000a8f5:	xor    eax,eax
   14000a8f7:	ret    
   14000a8f8:	sbb    rax,rax
   14000a8fb:	sbb    rax,0xffffffffffffffff
   14000a8ff:	ret    
   14000a900:	mov    rax,rsp
   14000a903:	mov    QWORD PTR [rax+0x10],rdx
   14000a907:	mov    QWORD PTR [rax+0x8],rcx
   14000a90b:	mov    QWORD PTR [rax+0x18],r8
   14000a90f:	mov    QWORD PTR [rax+0x20],r9
   14000a913:	push   rbx
   14000a914:	push   rsi
   14000a915:	push   rdi
   14000a916:	push   r12
   14000a918:	sub    rsp,0x28
   14000a91c:	mov    rdi,rcx
   14000a91f:	xor    esi,esi
   14000a921:	xor    eax,eax
   14000a923:	test   rcx,rcx
   14000a926:	setne  al
   14000a929:	test   eax,eax
   14000a92b:	jne    0x14000a945
   14000a92d:	call   0x14000bdc0
   14000a932:	mov    DWORD PTR [rax],0x16
   14000a938:	call   0x14000d01c
   14000a93d:	or     eax,0xffffffff
   14000a940:	jmp    0x14000aa24
   14000a945:	xor    eax,eax
   14000a947:	test   rdx,rdx
   14000a94a:	setne  al
   14000a94d:	test   eax,eax
   14000a94f:	je     0x14000a92d
   14000a951:	lea    r12,[rsp+0x60]
   14000a956:	call   0x14000aca8
   14000a95b:	nop
   14000a95c:	test   BYTE PTR [rdi+0x18],0x40
   14000a960:	jne    0x14000a9ec
   14000a966:	mov    rcx,rdi
   14000a969:	call   0x140010a7c
   14000a96e:	cmp    eax,0xffffffff
   14000a971:	je     0x14000a99d
   14000a973:	cmp    eax,0xfffffffe
   14000a976:	je     0x14000a99d
   14000a978:	movsxd rdx,eax
   14000a97b:	mov    rcx,rdx
   14000a97e:	sar    rcx,0x5
   14000a982:	lea    r8,[rip+0x1b0f7]        # 0x140025a80
   14000a989:	and    edx,0x1f
   14000a98c:	imul   rdx,rdx,0x58
   14000a990:	add    rdx,QWORD PTR [r8+rcx*8]
   14000a994:	lea    rcx,[rip+0x18f15]        # 0x1400238b0
   14000a99b:	jmp    0x14000a9ae
   14000a99d:	lea    rcx,[rip+0x18f0c]        # 0x1400238b0
   14000a9a4:	mov    rdx,rcx
   14000a9a7:	lea    r8,[rip+0x1b0d2]        # 0x140025a80
   14000a9ae:	test   BYTE PTR [rdx+0x38],0x7f
   14000a9b2:	jne    0x14000a9d9
   14000a9b4:	cmp    eax,0xffffffff
   14000a9b7:	je     0x14000a9d3
   14000a9b9:	cmp    eax,0xfffffffe
   14000a9bc:	je     0x14000a9d3
   14000a9be:	movsxd rcx,eax
   14000a9c1:	mov    rax,rcx
   14000a9c4:	sar    rax,0x5
   14000a9c8:	and    ecx,0x1f
   14000a9cb:	imul   rcx,rcx,0x58
   14000a9cf:	add    rcx,QWORD PTR [r8+rax*8]
   14000a9d3:	test   BYTE PTR [rcx+0x38],0x80
   14000a9d7:	je     0x14000a9ec
   14000a9d9:	call   0x14000bdc0
   14000a9de:	mov    DWORD PTR [rax],0x16
   14000a9e4:	call   0x14000d01c
   14000a9e9:	or     esi,0xffffffff
   14000a9ec:	test   esi,esi
   14000a9ee:	jne    0x14000aa1a
   14000a9f0:	mov    rcx,rdi
   14000a9f3:	call   0x14000dbc4
   14000a9f8:	mov    ebx,eax
   14000a9fa:	mov    r9,r12
   14000a9fd:	xor    r8d,r8d
   14000aa00:	mov    rdx,QWORD PTR [rsp+0x58]
   14000aa05:	mov    rcx,rdi
   14000aa08:	call   0x14000de04
   14000aa0d:	mov    esi,eax
   14000aa0f:	mov    rdx,rdi
   14000aa12:	mov    ecx,ebx
   14000aa14:	call   0x14000dc98
   14000aa19:	nop
   14000aa1a:	mov    rcx,rdi
   14000aa1d:	call   0x14000ad40
   14000aa22:	mov    eax,esi
   14000aa24:	add    rsp,0x28
   14000aa28:	pop    r12
   14000aa2a:	pop    rdi
   14000aa2b:	pop    rsi
   14000aa2c:	pop    rbx
   14000aa2d:	ret    
   14000aa2e:	int3   
   14000aa2f:	int3   
   14000aa30:	mov    rax,rsp
   14000aa33:	mov    QWORD PTR [rax+0x8],rbx
   14000aa37:	mov    QWORD PTR [rax+0x18],rsi
   14000aa3b:	mov    QWORD PTR [rax+0x20],rdi
   14000aa3f:	mov    QWORD PTR [rax+0x10],rdx
   14000aa43:	push   r12
   14000aa45:	push   r13
   14000aa47:	push   r14
   14000aa49:	sub    rsp,0x20
   14000aa4d:	mov    r13,r9
   14000aa50:	mov    r12,r8
   14000aa53:	mov    rdi,rdx
   14000aa56:	mov    r14,rcx
   14000aa59:	xor    esi,esi
   14000aa5b:	xor    eax,eax
   14000aa5d:	test   rdx,rdx
   14000aa60:	setne  al
   14000aa63:	test   eax,eax
   14000aa65:	jne    0x14000aa7f
   14000aa67:	call   0x14000bdc0
   14000aa6c:	mov    DWORD PTR [rax],0x16
   14000aa72:	call   0x14000d01c
   14000aa77:	or     eax,0xffffffff
   14000aa7a:	jmp    0x14000ab5a
   14000aa7f:	xor    eax,eax
   14000aa81:	test   r8,r8
   14000aa84:	setne  al
   14000aa87:	test   eax,eax
   14000aa89:	je     0x14000aa67
   14000aa8b:	mov    rcx,rdx
   14000aa8e:	call   0x14000aca8
   14000aa93:	nop
   14000aa94:	test   BYTE PTR [rdi+0x18],0x40
   14000aa98:	jne    0x14000ab24
   14000aa9e:	mov    rcx,rdi
   14000aaa1:	call   0x140010a7c
   14000aaa6:	cmp    eax,0xffffffff
   14000aaa9:	je     0x14000aad5
   14000aaab:	cmp    eax,0xfffffffe
   14000aaae:	je     0x14000aad5
   14000aab0:	movsxd rdx,eax
   14000aab3:	mov    rcx,rdx
   14000aab6:	sar    rcx,0x5
   14000aaba:	lea    r8,[rip+0x1afbf]        # 0x140025a80
   14000aac1:	and    edx,0x1f
   14000aac4:	imul   rdx,rdx,0x58
   14000aac8:	add    rdx,QWORD PTR [r8+rcx*8]
   14000aacc:	lea    rcx,[rip+0x18ddd]        # 0x1400238b0
   14000aad3:	jmp    0x14000aae6
   14000aad5:	lea    rcx,[rip+0x18dd4]        # 0x1400238b0
   14000aadc:	mov    rdx,rcx
   14000aadf:	lea    r8,[rip+0x1af9a]        # 0x140025a80
   14000aae6:	test   BYTE PTR [rdx+0x38],0x7f
   14000aaea:	jne    0x14000ab11
   14000aaec:	cmp    eax,0xffffffff
   14000aaef:	je     0x14000ab0b
   14000aaf1:	cmp    eax,0xfffffffe
   14000aaf4:	je     0x14000ab0b
   14000aaf6:	movsxd rcx,eax
   14000aaf9:	mov    rax,rcx
   14000aafc:	sar    rax,0x5
   14000ab00:	and    ecx,0x1f
   14000ab03:	imul   rcx,rcx,0x58
   14000ab07:	add    rcx,QWORD PTR [r8+rax*8]
   14000ab0b:	test   BYTE PTR [rcx+0x38],0x80
   14000ab0f:	je     0x14000ab24
   14000ab11:	call   0x14000bdc0
   14000ab16:	mov    DWORD PTR [rax],0x16
   14000ab1c:	call   0x14000d01c
   14000ab21:	or     esi,0xffffffff
   14000ab24:	test   esi,esi
   14000ab26:	jne    0x14000ab50
   14000ab28:	mov    rcx,rdi
   14000ab2b:	call   0x14000dbc4
   14000ab30:	mov    ebx,eax
   14000ab32:	mov    r9,QWORD PTR [rsp+0x60]
   14000ab37:	mov    r8,r13
   14000ab3a:	mov    rdx,r12
   14000ab3d:	mov    rcx,rdi
   14000ab40:	call   r14
   14000ab43:	mov    esi,eax
   14000ab45:	mov    rdx,rdi
   14000ab48:	mov    ecx,ebx
   14000ab4a:	call   0x14000dc98
   14000ab4f:	nop
   14000ab50:	mov    rcx,rdi
   14000ab53:	call   0x14000ad40
   14000ab58:	mov    eax,esi
   14000ab5a:	mov    rbx,QWORD PTR [rsp+0x40]
   14000ab5f:	mov    rsi,QWORD PTR [rsp+0x50]
   14000ab64:	mov    rdi,QWORD PTR [rsp+0x58]
   14000ab69:	add    rsp,0x20
   14000ab6d:	pop    r14
   14000ab6f:	pop    r13
   14000ab71:	pop    r12
   14000ab73:	ret    
   14000ab74:	sub    rsp,0x38
   14000ab78:	mov    QWORD PTR [rsp+0x20],r8
   14000ab7d:	mov    r8,rdx
   14000ab80:	mov    rdx,rcx
   14000ab83:	lea    rcx,[rip+0x327a]        # 0x14000de04
   14000ab8a:	xor    r9d,r9d
   14000ab8d:	call   0x14000aa30
   14000ab92:	add    rsp,0x38
   14000ab96:	ret    
   14000ab97:	int3   
   14000ab98:	lea    rax,[rip+0x18531]        # 0x1400230d0
   14000ab9f:	ret    
   14000aba0:	rex push rbx
   14000aba2:	sub    rsp,0x20
   14000aba6:	mov    eax,DWORD PTR [rip+0x1c0f4]        # 0x140026ca0
   14000abac:	mov    ebx,0x14
   14000abb1:	test   eax,eax
   14000abb3:	jne    0x14000abbc
   14000abb5:	mov    eax,0x200
   14000abba:	jmp    0x14000abc1
   14000abbc:	cmp    eax,ebx
   14000abbe:	cmovl  eax,ebx
   14000abc1:	movsxd rcx,eax
   14000abc4:	mov    edx,0x8
   14000abc9:	mov    DWORD PTR [rip+0x1c0d1],eax        # 0x140026ca0
   14000abcf:	call   0x140010b24
   14000abd4:	mov    QWORD PTR [rip+0x1b0ad],rax        # 0x140025c88
   14000abdb:	test   rax,rax
   14000abde:	jne    0x14000ac04
   14000abe0:	lea    edx,[rax+0x8]
   14000abe3:	mov    rcx,rbx
   14000abe6:	mov    DWORD PTR [rip+0x1c0b4],ebx        # 0x140026ca0
   14000abec:	call   0x140010b24
   14000abf1:	mov    QWORD PTR [rip+0x1b090],rax        # 0x140025c88
   14000abf8:	test   rax,rax
   14000abfb:	jne    0x14000ac04
   14000abfd:	mov    eax,0x1a
   14000ac02:	jmp    0x14000ac7a
   14000ac04:	xor    ecx,ecx
   14000ac06:	lea    rdx,[rip+0x184c3]        # 0x1400230d0
   14000ac0d:	mov    QWORD PTR [rcx+rax*1],rdx
   14000ac11:	add    rdx,0x30
   14000ac15:	add    rcx,0x8
   14000ac19:	dec    rbx
   14000ac1c:	je     0x14000ac27
   14000ac1e:	mov    rax,QWORD PTR [rip+0x1b063]        # 0x140025c88
   14000ac25:	jmp    0x14000ac0d
   14000ac27:	xor    r8d,r8d
   14000ac2a:	lea    rdx,[rip+0x184bb]        # 0x1400230ec
   14000ac31:	lea    r9d,[r8+0x3]
   14000ac35:	mov    rcx,r8
   14000ac38:	lea    r10,[rip+0x1ae41]        # 0x140025a80
   14000ac3f:	mov    rax,r8
   14000ac42:	sar    rax,0x5
   14000ac46:	and    ecx,0x1f
   14000ac49:	mov    rax,QWORD PTR [r10+rax*8]
   14000ac4d:	imul   rcx,rcx,0x58
   14000ac51:	mov    r10,QWORD PTR [rcx+rax*1]
   14000ac55:	cmp    r10,0xffffffffffffffff
   14000ac59:	je     0x14000ac66
   14000ac5b:	cmp    r10,0xfffffffffffffffe
   14000ac5f:	je     0x14000ac66
   14000ac61:	test   r10,r10
   14000ac64:	jne    0x14000ac6c
   14000ac66:	mov    DWORD PTR [rdx],0xfffffffe
   14000ac6c:	inc    r8
   14000ac6f:	add    rdx,0x30
   14000ac73:	dec    r9
   14000ac76:	jne    0x14000ac35
   14000ac78:	xor    eax,eax
   14000ac7a:	add    rsp,0x20
   14000ac7e:	pop    rbx
   14000ac7f:	ret    
   14000ac80:	sub    rsp,0x28
   14000ac84:	call   0x14000c040
   14000ac89:	cmp    BYTE PTR [rip+0x19d38],0x0        # 0x1400249c8
   14000ac90:	je     0x14000ac97
   14000ac92:	call   0x140010cb8
   14000ac97:	mov    rcx,QWORD PTR [rip+0x1afea]        # 0x140025c88
   14000ac9e:	add    rsp,0x28
   14000aca2:	jmp    0x14000b460
   14000aca7:	int3   
   14000aca8:	rex push rbx
   14000acaa:	sub    rsp,0x20
   14000acae:	mov    rbx,rcx
   14000acb1:	lea    rcx,[rip+0x18418]        # 0x1400230d0
   14000acb8:	cmp    rbx,rcx
   14000acbb:	jb     0x14000acfb
   14000acbd:	lea    rax,[rip+0x1879c]        # 0x140023460
   14000acc4:	cmp    rbx,rax
   14000acc7:	ja     0x14000acfb
   14000acc9:	mov    rdx,rbx
   14000accc:	movabs rax,0x2aaaaaaaaaaaaaab
   14000acd6:	sub    rdx,rcx
   14000acd9:	imul   rdx
   14000acdc:	sar    rdx,0x3
   14000ace0:	mov    rcx,rdx
   14000ace3:	shr    rcx,0x3f
   14000ace7:	lea    ecx,[rcx+rdx*1+0x10]
   14000aceb:	call   0x14000cb28
   14000acf0:	bts    DWORD PTR [rbx+0x18],0xf
   14000acf5:	add    rsp,0x20
   14000acf9:	pop    rbx
   14000acfa:	ret    
   14000acfb:	lea    rcx,[rbx+0x30]
   14000acff:	add    rsp,0x20
   14000ad03:	pop    rbx
   14000ad04:	rex.W jmp QWORD PTR [rip+0xf3dd]        # 0x14001a0e8
   14000ad0b:	int3   
   14000ad0c:	rex push rbx
   14000ad0e:	sub    rsp,0x20
   14000ad12:	mov    rbx,rdx
   14000ad15:	cmp    ecx,0x14
   14000ad18:	jge    0x14000ad2d
   14000ad1a:	add    ecx,0x10
   14000ad1d:	call   0x14000cb28
   14000ad22:	bts    DWORD PTR [rbx+0x18],0xf
   14000ad27:	add    rsp,0x20
   14000ad2b:	pop    rbx
   14000ad2c:	ret    
   14000ad2d:	lea    rcx,[rdx+0x30]
   14000ad31:	add    rsp,0x20
   14000ad35:	pop    rbx
   14000ad36:	rex.W jmp QWORD PTR [rip+0xf3ab]        # 0x14001a0e8
   14000ad3d:	int3   
   14000ad3e:	int3   
   14000ad3f:	int3   
   14000ad40:	lea    rdx,[rip+0x18389]        # 0x1400230d0
   14000ad47:	cmp    rcx,rdx
   14000ad4a:	jb     0x14000ad81
   14000ad4c:	lea    rax,[rip+0x1870d]        # 0x140023460
   14000ad53:	cmp    rcx,rax
   14000ad56:	ja     0x14000ad81
   14000ad58:	btr    DWORD PTR [rcx+0x18],0xf
   14000ad5d:	sub    rcx,rdx
   14000ad60:	movabs rax,0x2aaaaaaaaaaaaaab
   14000ad6a:	imul   rcx
   14000ad6d:	sar    rdx,0x3
   14000ad71:	mov    rcx,rdx
   14000ad74:	shr    rcx,0x3f
   14000ad78:	lea    ecx,[rcx+rdx*1+0x10]
   14000ad7c:	jmp    0x14000ca28
   14000ad81:	add    rcx,0x30
   14000ad85:	rex.W jmp QWORD PTR [rip+0xf364]        # 0x14001a0f0
   14000ad8c:	cmp    ecx,0x14
   14000ad8f:	jge    0x14000ad9e
   14000ad91:	btr    DWORD PTR [rdx+0x18],0xf
   14000ad96:	add    ecx,0x10
   14000ad99:	jmp    0x14000ca28
   14000ad9e:	lea    rcx,[rdx+0x30]
   14000ada2:	rex.W jmp QWORD PTR [rip+0xf347]        # 0x14001a0f0
   14000ada9:	int3   
   14000adaa:	int3   
   14000adab:	int3   
   14000adac:	mov    QWORD PTR [rsp+0x8],rbx
   14000adb1:	push   rdi
   14000adb2:	sub    rsp,0x20
   14000adb6:	or     edi,0xffffffff
   14000adb9:	mov    rbx,rcx
   14000adbc:	test   rcx,rcx
   14000adbf:	jne    0x14000add5
   14000adc1:	call   0x14000bdc0
   14000adc6:	mov    DWORD PTR [rax],0x16
   14000adcc:	call   0x14000d01c
   14000add1:	or     eax,edi
   14000add3:	jmp    0x14000ae1b
   14000add5:	test   BYTE PTR [rcx+0x18],0x83
   14000add9:	je     0x14000ae15
   14000addb:	call   0x14000be48
   14000ade0:	mov    rcx,rbx
   14000ade3:	mov    edi,eax
   14000ade5:	call   0x140010ee4
   14000adea:	mov    rcx,rbx
   14000aded:	call   0x140010a7c
   14000adf2:	mov    ecx,eax
   14000adf4:	call   0x140010e20
   14000adf9:	test   eax,eax
   14000adfb:	jns    0x14000ae02
   14000adfd:	or     edi,0xffffffff
   14000ae00:	jmp    0x14000ae15
   14000ae02:	mov    rcx,QWORD PTR [rbx+0x28]
   14000ae06:	test   rcx,rcx
   14000ae09:	je     0x14000ae15
   14000ae0b:	call   0x14000b460
   14000ae10:	and    QWORD PTR [rbx+0x28],0x0
   14000ae15:	and    DWORD PTR [rbx+0x18],0x0
   14000ae19:	mov    eax,edi
   14000ae1b:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ae20:	add    rsp,0x20
   14000ae24:	pop    rdi
   14000ae25:	ret    
   14000ae26:	int3   
   14000ae27:	int3   
   14000ae28:	mov    QWORD PTR [rsp+0x10],rbx
   14000ae2d:	mov    QWORD PTR [rsp+0x8],rcx
   14000ae32:	push   rdi
   14000ae33:	sub    rsp,0x20
   14000ae37:	mov    rbx,rcx
   14000ae3a:	or     edi,0xffffffff
   14000ae3d:	xor    eax,eax
   14000ae3f:	test   rcx,rcx
   14000ae42:	setne  al
   14000ae45:	test   eax,eax
   14000ae47:	jne    0x14000ae5d
   14000ae49:	call   0x14000bdc0
   14000ae4e:	mov    DWORD PTR [rax],0x16
   14000ae54:	call   0x14000d01c
   14000ae59:	mov    eax,edi
   14000ae5b:	jmp    0x14000ae83
   14000ae5d:	test   BYTE PTR [rcx+0x18],0x40
   14000ae61:	je     0x14000ae69
   14000ae63:	and    DWORD PTR [rcx+0x18],0x0
   14000ae67:	jmp    0x14000ae59
   14000ae69:	call   0x14000aca8
   14000ae6e:	nop
   14000ae6f:	mov    rcx,rbx
   14000ae72:	call   0x14000adac
   14000ae77:	mov    edi,eax
   14000ae79:	mov    rcx,rbx
   14000ae7c:	call   0x14000ad40
   14000ae81:	jmp    0x14000ae59
   14000ae83:	mov    rbx,QWORD PTR [rsp+0x38]
   14000ae88:	add    rsp,0x20
   14000ae8c:	pop    rdi
   14000ae8d:	ret    
   14000ae8e:	int3   
   14000ae8f:	int3   
   14000ae90:	sub    rsp,0x38
   14000ae94:	mov    rax,QWORD PTR [rip+0x18225]        # 0x1400230c0
   14000ae9b:	xor    rax,rsp
   14000ae9e:	mov    QWORD PTR [rsp+0x20],rax
   14000aea3:	mov    al,BYTE PTR [rdx]
   14000aea5:	xor    r9d,r9d
   14000aea8:	mov    r11,rdx
   14000aeab:	mov    QWORD PTR [rsp],r9
   14000aeaf:	mov    QWORD PTR [rsp+0x8],r9
   14000aeb4:	mov    QWORD PTR [rsp+0x10],r9
   14000aeb9:	mov    QWORD PTR [rsp+0x18],r9
   14000aebe:	mov    r10,rcx
   14000aec1:	jmp    0x14000aee4
   14000aec3:	movzx  r8d,al
   14000aec7:	movzx  eax,al
   14000aeca:	mov    edx,0x1
   14000aecf:	and    eax,0x7
   14000aed2:	shr    r8,0x3
   14000aed6:	mov    cl,al
   14000aed8:	shl    dl,cl
   14000aeda:	or     BYTE PTR [rsp+r8*1],dl
   14000aede:	inc    r11
   14000aee1:	mov    al,BYTE PTR [r11]
   14000aee4:	test   al,al
   14000aee6:	jne    0x14000aec3
   14000aee8:	cmp    BYTE PTR [r10],r9b
   14000aeeb:	je     0x14000af2e
   14000aeed:	movzx  ecx,BYTE PTR [r10]
   14000aef1:	movzx  eax,BYTE PTR [r10]
   14000aef5:	mov    edx,0x1
   14000aefa:	and    ecx,0x7
   14000aefd:	shr    rax,0x3
   14000af01:	shl    edx,cl
   14000af03:	test   BYTE PTR [rsp+rax*1],dl
   14000af06:	je     0x14000af29
   14000af08:	inc    r10
   14000af0b:	mov    edx,0x1
   14000af10:	inc    r9d
   14000af13:	movzx  r8d,BYTE PTR [r10]
   14000af17:	mov    ecx,r8d
   14000af1a:	shr    r8,0x3
   14000af1e:	and    ecx,0x7
   14000af21:	shl    edx,cl
   14000af23:	test   BYTE PTR [rsp+r8*1],dl
   14000af27:	jne    0x14000af08
   14000af29:	movsxd rax,r9d
   14000af2c:	jmp    0x14000af30
   14000af2e:	xor    eax,eax
   14000af30:	mov    rcx,QWORD PTR [rsp+0x20]
   14000af35:	xor    rcx,rsp
   14000af38:	call   0x14000a820
   14000af3d:	add    rsp,0x38
   14000af41:	ret    
   14000af42:	int3   
   14000af43:	int3   
   14000af44:	sub    rsp,0x38
   14000af48:	mov    rax,QWORD PTR [rip+0x18171]        # 0x1400230c0
   14000af4f:	xor    rax,rsp
   14000af52:	mov    QWORD PTR [rsp+0x20],rax
   14000af57:	mov    al,BYTE PTR [rdx]
   14000af59:	xor    r9d,r9d
   14000af5c:	mov    r11,rdx
   14000af5f:	mov    QWORD PTR [rsp],r9
   14000af63:	mov    QWORD PTR [rsp+0x8],r9
   14000af68:	mov    QWORD PTR [rsp+0x10],r9
   14000af6d:	mov    QWORD PTR [rsp+0x18],r9
   14000af72:	mov    r10,rcx
   14000af75:	jmp    0x14000af93
   14000af77:	movzx  r8d,al
   14000af7b:	movzx  eax,al
   14000af7e:	and    eax,0x7
   14000af81:	shr    r8,0x3
   14000af85:	mov    cl,al
   14000af87:	shl    dl,cl
   14000af89:	or     BYTE PTR [rsp+r8*1],dl
   14000af8d:	inc    r11
   14000af90:	mov    al,BYTE PTR [r11]
   14000af93:	mov    edx,0x1
   14000af98:	test   al,al
   14000af9a:	jne    0x14000af77
   14000af9c:	or     BYTE PTR [rsp],dl
   14000af9f:	jmp    0x14000afac
   14000afa1:	inc    r9d
   14000afa4:	mov    edx,0x1
   14000afa9:	inc    r10
   14000afac:	movzx  r8d,BYTE PTR [r10]
   14000afb0:	mov    ecx,r8d
   14000afb3:	shr    r8,0x3
   14000afb7:	and    ecx,0x7
   14000afba:	shl    edx,cl
   14000afbc:	test   BYTE PTR [rsp+r8*1],dl
   14000afc0:	je     0x14000afa1
   14000afc2:	movsxd rax,r9d
   14000afc5:	mov    rcx,QWORD PTR [rsp+0x20]
   14000afca:	xor    rcx,rsp
   14000afcd:	call   0x14000a820
   14000afd2:	add    rsp,0x38
   14000afd6:	ret    
   14000afd7:	int3   
   14000afd8:	rex push rbx
   14000afda:	push   rsi
   14000afdb:	push   rdi
   14000afdc:	push   r12
   14000afde:	push   r13
   14000afe0:	sub    rsp,0x30
   14000afe4:	mov    rbx,r8
   14000afe7:	mov    esi,edx
   14000afe9:	mov    r13,rcx
   14000afec:	mov    r12,rcx
   14000afef:	mov    rdi,rcx
   14000aff2:	test   rcx,rcx
   14000aff5:	jne    0x14000b012
   14000aff7:	test   edx,edx
   14000aff9:	je     0x14000b012
   14000affb:	call   0x14000bdc0
   14000b000:	mov    DWORD PTR [rax],0x16
   14000b006:	call   0x14000d01c
   14000b00b:	xor    eax,eax
   14000b00d:	jmp    0x14000b133
   14000b012:	xor    eax,eax
   14000b014:	test   edx,edx
   14000b016:	setns  al
   14000b019:	test   eax,eax
   14000b01b:	je     0x14000affb
   14000b01d:	xor    eax,eax
   14000b01f:	test   rbx,rbx
   14000b022:	setne  al
   14000b025:	test   eax,eax
   14000b027:	je     0x14000affb
   14000b029:	test   edx,edx
   14000b02b:	je     0x14000b00b
   14000b02d:	mov    QWORD PTR [rsp+0x78],rbx
   14000b032:	mov    rcx,rbx
   14000b035:	call   0x14000aca8
   14000b03a:	nop
   14000b03b:	test   BYTE PTR [rbx+0x18],0x40
   14000b03f:	jne    0x14000b0cf
   14000b045:	mov    rcx,rbx
   14000b048:	call   0x140010a7c
   14000b04d:	cmp    eax,0xffffffff
   14000b050:	je     0x14000b07c
   14000b052:	cmp    eax,0xfffffffe
   14000b055:	je     0x14000b07c
   14000b057:	movsxd rdx,eax
   14000b05a:	mov    rcx,rdx
   14000b05d:	sar    rcx,0x5
   14000b061:	lea    r8,[rip+0x1aa18]        # 0x140025a80
   14000b068:	and    edx,0x1f
   14000b06b:	imul   rdx,rdx,0x58
   14000b06f:	add    rdx,QWORD PTR [r8+rcx*8]
   14000b073:	lea    rcx,[rip+0x18836]        # 0x1400238b0
   14000b07a:	jmp    0x14000b08d
   14000b07c:	lea    rcx,[rip+0x1882d]        # 0x1400238b0
   14000b083:	mov    rdx,rcx
   14000b086:	lea    r8,[rip+0x1a9f3]        # 0x140025a80
   14000b08d:	test   BYTE PTR [rdx+0x38],0x7f
   14000b091:	jne    0x14000b0b8
   14000b093:	cmp    eax,0xffffffff
   14000b096:	je     0x14000b0b2
   14000b098:	cmp    eax,0xfffffffe
   14000b09b:	je     0x14000b0b2
   14000b09d:	movsxd rcx,eax
   14000b0a0:	mov    rax,rcx
   14000b0a3:	sar    rax,0x5
   14000b0a7:	and    ecx,0x1f
   14000b0aa:	imul   rcx,rcx,0x58
   14000b0ae:	add    rcx,QWORD PTR [r8+rax*8]
   14000b0b2:	test   BYTE PTR [rcx+0x38],0x80
   14000b0b6:	je     0x14000b0cf
   14000b0b8:	call   0x14000bdc0
   14000b0bd:	mov    DWORD PTR [rax],0x16
   14000b0c3:	call   0x14000d01c
   14000b0c8:	xor    edi,edi
   14000b0ca:	mov    QWORD PTR [rsp+0x20],rdi
   14000b0cf:	test   rdi,rdi
   14000b0d2:	je     0x14000b128
   14000b0d4:	dec    esi
   14000b0d6:	mov    DWORD PTR [rsp+0x68],esi
   14000b0da:	je     0x14000b123
   14000b0dc:	dec    DWORD PTR [rbx+0x8]
   14000b0df:	js     0x14000b0ef
   14000b0e1:	mov    rax,QWORD PTR [rbx]
   14000b0e4:	movzx  ecx,BYTE PTR [rax]
   14000b0e7:	inc    rax
   14000b0ea:	mov    QWORD PTR [rbx],rax
   14000b0ed:	jmp    0x14000b0f9
   14000b0ef:	mov    rcx,rbx
   14000b0f2:	call   0x140010f1c
   14000b0f7:	mov    ecx,eax
   14000b0f9:	mov    DWORD PTR [rsp+0x60],ecx
   14000b0fd:	cmp    ecx,0xffffffff
   14000b100:	jne    0x14000b110
   14000b102:	cmp    r12,r13
   14000b105:	jne    0x14000b123
   14000b107:	xor    edi,edi
   14000b109:	mov    QWORD PTR [rsp+0x20],rdi
   14000b10e:	jmp    0x14000b128
   14000b110:	mov    BYTE PTR [r12],cl
   14000b114:	inc    r12
   14000b117:	mov    QWORD PTR [rsp+0x28],r12
   14000b11c:	cmp    cl,0xa
   14000b11f:	je     0x14000b123
   14000b121:	jmp    0x14000b0d4
   14000b123:	mov    BYTE PTR [r12],0x0
   14000b128:	mov    rcx,rbx
   14000b12b:	call   0x14000ad40
   14000b130:	mov    rax,rdi
   14000b133:	add    rsp,0x30
   14000b137:	pop    r13
   14000b139:	pop    r12
   14000b13b:	pop    rdi
   14000b13c:	pop    rsi
   14000b13d:	pop    rbx
   14000b13e:	ret    
   14000b13f:	int3   
   14000b140:	mov    QWORD PTR [rsp+0x10],rbx
   14000b145:	mov    QWORD PTR [rsp+0x18],rsi
   14000b14a:	mov    QWORD PTR [rsp+0x20],rdi
   14000b14f:	push   r12
   14000b151:	sub    rsp,0x30
   14000b155:	mov    QWORD PTR [rsp+0x20],rsp
   14000b15a:	mov    r12d,r8d
   14000b15d:	mov    rdi,rdx
   14000b160:	mov    rsi,rcx
   14000b163:	xor    eax,eax
   14000b165:	test   rcx,rcx
   14000b168:	setne  al
   14000b16b:	test   eax,eax
   14000b16d:	jne    0x14000b183
   14000b16f:	call   0x14000bdc0
   14000b174:	mov    DWORD PTR [rax],0x16
   14000b17a:	call   0x14000d01c
   14000b17f:	xor    eax,eax
   14000b181:	jmp    0x14000b1ff
   14000b183:	xor    eax,eax
   14000b185:	test   rdx,rdx
   14000b188:	setne  al
   14000b18b:	test   eax,eax
   14000b18d:	je     0x14000b16f
   14000b18f:	xor    eax,eax
   14000b191:	cmp    BYTE PTR [rdx],al
   14000b193:	setne  al
   14000b196:	test   eax,eax
   14000b198:	je     0x14000b16f
   14000b19a:	call   0x140011328
   14000b19f:	mov    rbx,rax
   14000b1a2:	mov    QWORD PTR [rsp+0x40],rax
   14000b1a7:	test   rax,rax
   14000b1aa:	jne    0x14000b1b9
   14000b1ac:	call   0x14000bdc0
   14000b1b1:	mov    DWORD PTR [rax],0x18
   14000b1b7:	jmp    0x14000b17f
   14000b1b9:	cmp    BYTE PTR [rsi],0x0
   14000b1bc:	jne    0x14000b1e0
   14000b1be:	call   0x14000bdc0
   14000b1c3:	mov    DWORD PTR [rax],0x16
   14000b1c9:	lea    rdx,[rip+0xc]        # 0x14000b1dc
   14000b1d0:	mov    rcx,QWORD PTR [rsp+0x20]
   14000b1d5:	call   0x140011490
   14000b1da:	nop
   14000b1db:	nop
   14000b1dc:	xor    eax,eax
   14000b1de:	jmp    0x14000b1ff
   14000b1e0:	mov    r9,rax
   14000b1e3:	mov    r8d,r12d
   14000b1e6:	mov    rdx,rdi
   14000b1e9:	mov    rcx,rsi
   14000b1ec:	call   0x140011070
   14000b1f1:	mov    rdi,rax
   14000b1f4:	mov    rcx,rbx
   14000b1f7:	call   0x14000ad40
   14000b1fc:	mov    rax,rdi
   14000b1ff:	mov    rbx,QWORD PTR [rsp+0x48]
   14000b204:	mov    rsi,QWORD PTR [rsp+0x50]
   14000b209:	mov    rdi,QWORD PTR [rsp+0x58]
   14000b20e:	add    rsp,0x30
   14000b212:	pop    r12
   14000b214:	ret    
   14000b215:	int3   
   14000b216:	int3   
   14000b217:	int3   
   14000b218:	mov    r8d,0x40
   14000b21e:	jmp    0x14000b140
   14000b223:	int3   
   14000b224:	mov    QWORD PTR [rsp+0x8],rbx
   14000b229:	push   rdi
   14000b22a:	sub    rsp,0x20
   14000b22e:	mov    rbx,rcx
   14000b231:	mov    edi,0x2
   14000b236:	mov    ecx,edi
   14000b238:	call   0x1400116d4
   14000b23d:	nop
   14000b23e:	test   rbx,rbx
   14000b241:	je     0x14000b26e
   14000b243:	cmp    BYTE PTR [rbx],0x0
   14000b246:	je     0x14000b26e
   14000b248:	mov    rcx,rbx
   14000b24b:	call   0x140009fa0
   14000b250:	mov    r8,rax
   14000b253:	mov    rdx,rbx
   14000b256:	mov    ecx,edi
   14000b258:	call   0x1400119ac
   14000b25d:	mov    r8d,edi
   14000b260:	lea    rdx,[rip+0x137d1]        # 0x14001ea38
   14000b267:	mov    ecx,edi
   14000b269:	call   0x1400119ac
   14000b26e:	call   0x14000bdc0
   14000b273:	mov    ebx,DWORD PTR [rax]
   14000b275:	test   ebx,ebx
   14000b277:	js     0x14000b282
   14000b279:	call   0x1400114f4
   14000b27e:	cmp    ebx,DWORD PTR [rax]
   14000b280:	jl     0x14000b289
   14000b282:	call   0x1400114f4
   14000b287:	mov    ebx,DWORD PTR [rax]
   14000b289:	call   0x1400114fc
   14000b28e:	movsxd rcx,ebx
   14000b291:	mov    rbx,QWORD PTR [rax+rcx*8]
   14000b295:	mov    rcx,rbx
   14000b298:	call   0x140009fa0
   14000b29d:	mov    r8,rax
   14000b2a0:	mov    rdx,rbx
   14000b2a3:	mov    ecx,edi
   14000b2a5:	call   0x1400119ac
   14000b2aa:	mov    r8d,0x1
   14000b2b0:	lea    rdx,[rip+0xf76d]        # 0x14001aa24
   14000b2b7:	mov    ecx,edi
   14000b2b9:	call   0x1400119ac
   14000b2be:	nop
   14000b2bf:	mov    ecx,edi
   14000b2c1:	call   0x14001177c
   14000b2c6:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b2cb:	add    rsp,0x20
   14000b2cf:	pop    rdi
   14000b2d0:	ret    
   14000b2d1:	int3   
   14000b2d2:	int3   
   14000b2d3:	int3   
   14000b2d4:	mov    QWORD PTR [rsp+0x8],rbx
   14000b2d9:	mov    QWORD PTR [rsp+0x10],rsi
   14000b2de:	push   rdi
   14000b2df:	sub    rsp,0x20
   14000b2e3:	mov    rbx,rcx
   14000b2e6:	cmp    rcx,0xffffffffffffffe0
   14000b2ea:	ja     0x14000b368
   14000b2ec:	mov    edi,0x1
   14000b2f1:	test   rcx,rcx
   14000b2f4:	cmovne rdi,rcx
   14000b2f8:	mov    rcx,QWORD PTR [rip+0x1a0c9]        # 0x1400253c8
   14000b2ff:	test   rcx,rcx
   14000b302:	jne    0x14000b324
   14000b304:	call   0x14000db80
   14000b309:	mov    ecx,0x1e
   14000b30e:	call   0x14000d920
   14000b313:	mov    ecx,0xff
   14000b318:	call   0x1400098a8
   14000b31d:	mov    rcx,QWORD PTR [rip+0x1a0a4]        # 0x1400253c8
   14000b324:	mov    r8,rdi
   14000b327:	xor    edx,edx
   14000b329:	call   QWORD PTR [rip+0xedc9]        # 0x14001a0f8
   14000b32f:	mov    rsi,rax
   14000b332:	test   rax,rax
   14000b335:	jne    0x14000b363
   14000b337:	cmp    DWORD PTR [rip+0x1a607],eax        # 0x140025944
   14000b33d:	je     0x14000b34d
   14000b33f:	mov    rcx,rbx
   14000b342:	call   0x14000d044
   14000b347:	test   eax,eax
   14000b349:	je     0x14000b358
   14000b34b:	jmp    0x14000b2f8
   14000b34d:	call   0x14000bdc0
   14000b352:	mov    DWORD PTR [rax],0xc
   14000b358:	call   0x14000bdc0
   14000b35d:	mov    DWORD PTR [rax],0xc
   14000b363:	mov    rax,rsi
   14000b366:	jmp    0x14000b37a
   14000b368:	call   0x14000d044
   14000b36d:	call   0x14000bdc0
   14000b372:	mov    DWORD PTR [rax],0xc
   14000b378:	xor    eax,eax
   14000b37a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b37f:	mov    rsi,QWORD PTR [rsp+0x38]
   14000b384:	add    rsp,0x20
   14000b388:	pop    rdi
   14000b389:	ret    
   14000b38a:	int3   
   14000b38b:	int3   
   14000b38c:	mov    QWORD PTR [rsp+0x8],rbx
   14000b391:	mov    QWORD PTR [rsp+0x10],rsi
   14000b396:	push   rdi
   14000b397:	sub    rsp,0x20
   14000b39b:	mov    rbx,rdx
   14000b39e:	mov    rdi,rcx
   14000b3a1:	test   rcx,rcx
   14000b3a4:	jne    0x14000b3b0
   14000b3a6:	mov    rcx,rdx
   14000b3a9:	call   0x14000b2d4
   14000b3ae:	jmp    0x14000b41a
   14000b3b0:	test   rdx,rdx
   14000b3b3:	jne    0x14000b3bc
   14000b3b5:	call   0x14000b460
   14000b3ba:	jmp    0x14000b418
   14000b3bc:	cmp    rdx,0xffffffffffffffe0
   14000b3c0:	ja     0x14000b405
   14000b3c2:	mov    rcx,QWORD PTR [rip+0x19fff]        # 0x1400253c8
   14000b3c9:	mov    eax,0x1
   14000b3ce:	test   rbx,rbx
   14000b3d1:	cmove  rbx,rax
   14000b3d5:	mov    r8,rdi
   14000b3d8:	xor    edx,edx
   14000b3da:	mov    r9,rbx
   14000b3dd:	call   QWORD PTR [rip+0xed1d]        # 0x14001a100
   14000b3e3:	mov    rsi,rax
   14000b3e6:	test   rax,rax
   14000b3e9:	jne    0x14000b45a
   14000b3eb:	cmp    DWORD PTR [rip+0x1a553],eax        # 0x140025944
   14000b3f1:	je     0x14000b443
   14000b3f3:	mov    rcx,rbx
   14000b3f6:	call   0x14000d044
   14000b3fb:	test   eax,eax
   14000b3fd:	je     0x14000b42a
   14000b3ff:	cmp    rbx,0xffffffffffffffe0
   14000b403:	jbe    0x14000b3c2
   14000b405:	mov    rcx,rbx
   14000b408:	call   0x14000d044
   14000b40d:	call   0x14000bdc0
   14000b412:	mov    DWORD PTR [rax],0xc
   14000b418:	xor    eax,eax
   14000b41a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b41f:	mov    rsi,QWORD PTR [rsp+0x38]
   14000b424:	add    rsp,0x20
   14000b428:	pop    rdi
   14000b429:	ret    
   14000b42a:	call   0x14000bdc0
   14000b42f:	mov    rbx,rax
   14000b432:	call   QWORD PTR [rip+0xec38]        # 0x14001a070
   14000b438:	mov    ecx,eax
   14000b43a:	call   0x14000bd78
   14000b43f:	mov    DWORD PTR [rbx],eax
   14000b441:	jmp    0x14000b418
   14000b443:	call   0x14000bdc0
   14000b448:	mov    rbx,rax
   14000b44b:	call   QWORD PTR [rip+0xec1f]        # 0x14001a070
   14000b451:	mov    ecx,eax
   14000b453:	call   0x14000bd78
   14000b458:	mov    DWORD PTR [rbx],eax
   14000b45a:	mov    rax,rsi
   14000b45d:	jmp    0x14000b41a
   14000b45f:	int3   
   14000b460:	test   rcx,rcx
   14000b463:	je     0x14000b49c
   14000b465:	push   rbx
   14000b466:	sub    rsp,0x20
   14000b46a:	mov    r8,rcx
   14000b46d:	mov    rcx,QWORD PTR [rip+0x19f54]        # 0x1400253c8
   14000b474:	xor    edx,edx
   14000b476:	call   QWORD PTR [rip+0xec8c]        # 0x14001a108
   14000b47c:	test   eax,eax
   14000b47e:	jne    0x14000b497
   14000b480:	call   0x14000bdc0
   14000b485:	mov    rbx,rax
   14000b488:	call   QWORD PTR [rip+0xebe2]        # 0x14001a070
   14000b48e:	mov    ecx,eax
   14000b490:	call   0x14000bd78
   14000b495:	mov    DWORD PTR [rbx],eax
   14000b497:	add    rsp,0x20
   14000b49b:	pop    rbx
   14000b49c:	ret    
   14000b49d:	int3   
   14000b49e:	int3   
   14000b49f:	int3   
   14000b4a0:	mov    QWORD PTR [rsp+0x8],rbx
   14000b4a5:	mov    QWORD PTR [rsp+0x18],rsi
   14000b4aa:	mov    QWORD PTR [rsp+0x20],rdi
   14000b4af:	push   r12
   14000b4b1:	push   r13
   14000b4b3:	push   r14
   14000b4b5:	sub    rsp,0x20
   14000b4b9:	mov    r12,r9
   14000b4bc:	mov    r13,r8
   14000b4bf:	mov    rsi,rdx
   14000b4c2:	mov    r14,rcx
   14000b4c5:	call   0x14000ab98
   14000b4ca:	lea    rdi,[rax+0x30]
   14000b4ce:	mov    QWORD PTR [rsp+0x48],rdi
   14000b4d3:	xor    eax,eax
   14000b4d5:	test   rsi,rsi
   14000b4d8:	setne  al
   14000b4db:	test   eax,eax
   14000b4dd:	jne    0x14000b4f4
   14000b4df:	call   0x14000bdc0
   14000b4e4:	mov    DWORD PTR [rax],0x16
   14000b4ea:	call   0x14000d01c
   14000b4ef:	or     eax,0xffffffff
   14000b4f2:	jmp    0x14000b52d
   14000b4f4:	mov    rcx,rdi
   14000b4f7:	call   0x14000aca8
   14000b4fc:	nop
   14000b4fd:	mov    rcx,rdi
   14000b500:	call   0x14000dbc4
   14000b505:	mov    ebx,eax
   14000b507:	mov    r9,r12
   14000b50a:	mov    r8,r13
   14000b50d:	mov    rdx,rsi
   14000b510:	mov    rcx,rdi
   14000b513:	call   r14
   14000b516:	mov    esi,eax
   14000b518:	mov    rdx,rdi
   14000b51b:	mov    ecx,ebx
   14000b51d:	call   0x14000dc98
   14000b522:	nop
   14000b523:	mov    rcx,rdi
   14000b526:	call   0x14000ad40
   14000b52b:	mov    eax,esi
   14000b52d:	mov    rbx,QWORD PTR [rsp+0x40]
   14000b532:	mov    rsi,QWORD PTR [rsp+0x50]
   14000b537:	mov    rdi,QWORD PTR [rsp+0x58]
   14000b53c:	add    rsp,0x20
   14000b540:	pop    r14
   14000b542:	pop    r13
   14000b544:	pop    r12
   14000b546:	ret    
   14000b547:	int3   
   14000b548:	mov    r9,rdx
   14000b54b:	mov    rdx,rcx
   14000b54e:	lea    rcx,[rip+0x28af]        # 0x14000de04
   14000b555:	xor    r8d,r8d
   14000b558:	jmp    0x14000b4a0
   14000b55d:	int3   
   14000b55e:	int3   
   14000b55f:	int3   
   14000b560:	int3   
   14000b561:	int3   
   14000b562:	int3   
   14000b563:	int3   
   14000b564:	int3   
   14000b565:	int3   
   14000b566:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000b570:	test   r8,r8
   14000b573:	je     0x14000b5ea
   14000b575:	sub    rdx,rcx
   14000b578:	mov    r9,rdx
   14000b57b:	movabs r11,0x8101010101010100
   14000b585:	test   cl,0x7
   14000b588:	je     0x14000b5a9
   14000b58a:	mov    al,BYTE PTR [rcx]
   14000b58c:	mov    dl,BYTE PTR [rcx+r9*1]
   14000b590:	inc    rcx
   14000b593:	cmp    al,dl
   14000b595:	jne    0x14000b5ee
   14000b597:	dec    r8
   14000b59a:	je     0x14000b5ea
   14000b59c:	test   al,al
   14000b59e:	je     0x14000b5ea
   14000b5a0:	test   rcx,0x7
   14000b5a7:	jne    0x14000b58a
   14000b5a9:	lea    rdx,[rcx+r9*1]
   14000b5ad:	and    dx,0xfff
   14000b5b2:	cmp    dx,0xff8
   14000b5b7:	ja     0x14000b58a
   14000b5b9:	mov    rax,QWORD PTR [rcx]
   14000b5bc:	mov    rdx,QWORD PTR [rcx+r9*1]
   14000b5c0:	cmp    rax,rdx
   14000b5c3:	jne    0x14000b58a
   14000b5c5:	add    rcx,0x8
   14000b5c9:	sub    r8,0x8
   14000b5cd:	movabs r10,0x7efefefefefefeff
   14000b5d7:	jbe    0x14000b5ea
   14000b5d9:	xor    rax,0xffffffffffffffff
   14000b5dd:	add    r10,rdx
   14000b5e0:	xor    rax,r10
   14000b5e3:	test   r11,rax
   14000b5e6:	je     0x14000b5a9
   14000b5e8:	jmp    0x14000b5f6
   14000b5ea:	xor    rax,rax
   14000b5ed:	ret    
   14000b5ee:	sbb    rax,rax
   14000b5f1:	sbb    rax,0xffffffffffffffff
   14000b5f5:	ret    
   14000b5f6:	test   dl,dl
   14000b5f8:	je     0x14000b621
   14000b5fa:	test   dh,dh
   14000b5fc:	je     0x14000b621
   14000b5fe:	shr    rdx,0x10
   14000b602:	test   dl,dl
   14000b604:	je     0x14000b621
   14000b606:	test   dh,dh
   14000b608:	je     0x14000b621
   14000b60a:	shr    rdx,0x10
   14000b60e:	test   dl,dl
   14000b610:	je     0x14000b621
   14000b612:	test   dh,dh
   14000b614:	je     0x14000b621
   14000b616:	shr    edx,0x10
   14000b619:	test   dl,dl
   14000b61b:	je     0x14000b621
   14000b61d:	test   dh,dh
   14000b61f:	jne    0x14000b5a9
   14000b621:	xor    rax,rax
   14000b624:	ret    
   14000b625:	int3   
   14000b626:	int3   
   14000b627:	int3   
   14000b628:	mov    QWORD PTR [rsp+0x18],rbx
   14000b62d:	push   rbp
   14000b62e:	push   rsi
   14000b62f:	push   rdi
   14000b630:	push   r12
   14000b632:	push   r13
   14000b634:	push   r14
   14000b636:	push   r15
   14000b638:	lea    rbp,[rsp-0x1c0]
   14000b640:	sub    rsp,0x2c0
   14000b647:	mov    rax,QWORD PTR [rip+0x17a72]        # 0x1400230c0
   14000b64e:	xor    rax,rsp
   14000b651:	mov    QWORD PTR [rbp+0x1b0],rax
   14000b658:	xor    r14d,r14d
   14000b65b:	mov    rdi,rdx
   14000b65e:	mov    r12,rcx
   14000b661:	mov    r13d,r14d
   14000b664:	test   rcx,rcx
   14000b667:	jne    0x14000b689
   14000b669:	call   0x14000bde0
   14000b66e:	mov    DWORD PTR [rax],r14d
   14000b671:	call   0x14000bdc0
   14000b676:	mov    DWORD PTR [rax],0x16
   14000b67c:	call   0x14000d01c
   14000b681:	or     eax,0xffffffff
   14000b684:	jmp    0x14000bafc
   14000b689:	test   rdx,rdx
   14000b68c:	je     0x14000b669
   14000b68e:	lea    rdx,[rip+0x133ab]        # 0x14001ea40
   14000b695:	call   0x1400136d8
   14000b69a:	test   rax,rax
   14000b69d:	je     0x14000b6b4
   14000b69f:	call   0x14000bdc0
   14000b6a4:	mov    edi,0x2
   14000b6a9:	mov    DWORD PTR [rax],edi
   14000b6ab:	call   0x14000bde0
   14000b6b0:	mov    DWORD PTR [rax],edi
   14000b6b2:	jmp    0x14000b681
   14000b6b4:	cmp    BYTE PTR [r12+0x1],0x3a
   14000b6ba:	jne    0x14000b6d9
   14000b6bc:	cmp    BYTE PTR [r12],r14b
   14000b6c0:	je     0x14000b6c9
   14000b6c2:	cmp    BYTE PTR [r12+0x2],r14b
   14000b6c7:	je     0x14000b69f
   14000b6c9:	movsx  ecx,BYTE PTR [r12]
   14000b6ce:	call   0x1400135dc
   14000b6d3:	lea    r15d,[rax-0x60]
   14000b6d7:	jmp    0x14000b6e1
   14000b6d9:	call   0x140013408
   14000b6de:	mov    r15d,eax
   14000b6e1:	lea    r8,[rsp+0x60]
   14000b6e6:	xor    r9d,r9d
   14000b6e9:	xor    edx,edx
   14000b6eb:	mov    rcx,r12
   14000b6ee:	mov    DWORD PTR [rsp+0x28],r14d
   14000b6f3:	mov    QWORD PTR [rsp+0x20],r14
   14000b6f8:	call   QWORD PTR [rip+0xea2a]        # 0x14001a128
   14000b6fe:	or     rbx,0xffffffffffffffff
   14000b702:	mov    rsi,rax
   14000b705:	cmp    rax,rbx
   14000b708:	jne    0x14000b8cd
   14000b70e:	lea    rdx,[rip+0x13327]        # 0x14001ea3c
   14000b715:	mov    rcx,r12
   14000b718:	call   0x1400136d8
   14000b71d:	test   rax,rax
   14000b720:	je     0x14000b8b5
   14000b726:	call   0x14000bdc0
   14000b72b:	mov    r14d,DWORD PTR [rax]
   14000b72e:	call   0x14000bdc0
   14000b733:	lea    rcx,[rbp+0xa0]
   14000b73a:	and    DWORD PTR [rax],r13d
   14000b73d:	mov    r8d,0x104
   14000b743:	mov    rdx,r12
   14000b746:	call   0x1400121ec
   14000b74b:	mov    rsi,rax
   14000b74e:	test   rax,rax
   14000b751:	je     0x14000b75d
   14000b753:	call   0x14000bdc0
   14000b758:	mov    DWORD PTR [rax],r14d
   14000b75b:	jmp    0x14000b786
   14000b75d:	call   0x14000bdc0
   14000b762:	cmp    DWORD PTR [rax],0x22
   14000b765:	jne    0x14000b8b5
   14000b76b:	call   0x14000bdc0
   14000b770:	xor    r8d,r8d
   14000b773:	mov    rdx,r12
   14000b776:	xor    ecx,ecx
   14000b778:	mov    DWORD PTR [rax],r14d
   14000b77b:	call   0x1400121ec
   14000b780:	mov    r13,rax
   14000b783:	mov    rsi,rax
   14000b786:	xor    r14d,r14d
   14000b789:	test   rsi,rsi
   14000b78c:	je     0x14000b8a8
   14000b792:	mov    rcx,rsi
   14000b795:	call   0x140009fa0
   14000b79a:	cmp    rax,0x3
   14000b79e:	je     0x14000b844
   14000b7a4:	mov    rcx,rsi
   14000b7a7:	call   0x140009fa0
   14000b7ac:	cmp    rax,0x5
   14000b7b0:	jb     0x14000b8a8
   14000b7b6:	mov    r8b,0x5c
   14000b7b9:	mov    dl,0x2f
   14000b7bb:	cmp    BYTE PTR [rsi],r8b
   14000b7be:	je     0x14000b7c8
   14000b7c0:	cmp    BYTE PTR [rsi],dl
   14000b7c2:	jne    0x14000b8a8
   14000b7c8:	mov    al,BYTE PTR [rsi+0x1]
   14000b7cb:	cmp    al,r8b
   14000b7ce:	je     0x14000b7d8
   14000b7d0:	cmp    al,dl
   14000b7d2:	jne    0x14000b8a8
   14000b7d8:	mov    al,BYTE PTR [rsi+0x2]
   14000b7db:	cmp    al,r8b
   14000b7de:	je     0x14000b8a8
   14000b7e4:	cmp    al,dl
   14000b7e6:	je     0x14000b8a8
   14000b7ec:	lea    rax,[rsi+0x3]
   14000b7f0:	mov    cl,BYTE PTR [rax]
   14000b7f2:	test   cl,cl
   14000b7f4:	je     0x14000b8a8
   14000b7fa:	cmp    cl,r8b
   14000b7fd:	je     0x14000b80c
   14000b7ff:	cmp    cl,dl
   14000b801:	je     0x14000b80c
   14000b803:	inc    rax
   14000b806:	mov    cl,BYTE PTR [rax]
   14000b808:	test   cl,cl
   14000b80a:	jne    0x14000b7fa
   14000b80c:	cmp    BYTE PTR [rax],r14b
   14000b80f:	je     0x14000b8a8
   14000b815:	inc    rax
   14000b818:	cmp    BYTE PTR [rax],r14b
   14000b81b:	je     0x14000b8a8
   14000b821:	mov    cl,BYTE PTR [rax]
   14000b823:	test   cl,cl
   14000b825:	je     0x14000b844
   14000b827:	cmp    cl,r8b
   14000b82a:	je     0x14000b839
   14000b82c:	cmp    cl,dl
   14000b82e:	je     0x14000b839
   14000b830:	inc    rax
   14000b833:	mov    cl,BYTE PTR [rax]
   14000b835:	test   cl,cl
   14000b837:	jne    0x14000b827
   14000b839:	cmp    BYTE PTR [rax],r14b
   14000b83c:	je     0x14000b844
   14000b83e:	cmp    BYTE PTR [rax+0x1],r14b
   14000b842:	jne    0x14000b8a8
   14000b844:	mov    rcx,rsi
   14000b847:	call   QWORD PTR [rip+0xe8d3]        # 0x14001a120
   14000b84d:	mov    esi,0x1
   14000b852:	cmp    eax,esi
   14000b854:	jbe    0x14000b8a8
   14000b856:	test   r13,r13
   14000b859:	je     0x14000b863
   14000b85b:	mov    rcx,r13
   14000b85e:	call   0x14000b460
   14000b863:	mov    DWORD PTR [rsp+0x30],ebx
   14000b867:	xor    r9d,r9d
   14000b86a:	mov    r8d,esi
   14000b86d:	mov    edx,esi
   14000b86f:	mov    ecx,0x7bc
   14000b874:	mov    DWORD PTR [rsp+0x28],r14d
   14000b879:	mov    DWORD PTR [rsp+0x60],0x10
   14000b881:	mov    QWORD PTR [rsp+0x7c],r14
   14000b886:	mov    BYTE PTR [rbp-0x74],r14b
   14000b88a:	mov    DWORD PTR [rsp+0x20],r14d
   14000b88f:	call   0x14001313c
   14000b894:	mov    r13d,r14d
   14000b897:	mov    QWORD PTR [rdi+0x20],rax
   14000b89b:	mov    QWORD PTR [rdi+0x18],rax
   14000b89f:	mov    QWORD PTR [rdi+0x28],rax
   14000b8a3:	jmp    0x14000baa2
   14000b8a8:	test   r13,r13
   14000b8ab:	je     0x14000b8b5
   14000b8ad:	mov    rcx,r13
   14000b8b0:	call   0x14000b460
   14000b8b5:	call   0x14000bdc0
   14000b8ba:	mov    edi,0x2
   14000b8bf:	mov    DWORD PTR [rax],edi
   14000b8c1:	call   0x14000bde0
   14000b8c6:	mov    DWORD PTR [rax],edi
   14000b8c8:	jmp    0x14000bafa
   14000b8cd:	test   DWORD PTR [rsp+0x60],0x400
   14000b8d5:	je     0x14000b923
   14000b8d7:	cmp    DWORD PTR [rbp-0x7c],0xa000000c
   14000b8de:	jne    0x14000b923
   14000b8e0:	lea    rcx,[rsp+0x40]
   14000b8e5:	mov    r9d,0x40
   14000b8eb:	xor    r8d,r8d
   14000b8ee:	mov    rdx,r12
   14000b8f1:	mov    DWORD PTR [rsp+0x40],ebx
   14000b8f5:	mov    DWORD PTR [rsp+0x20],r14d
   14000b8fa:	call   0x140013108
   14000b8ff:	test   eax,eax
   14000b901:	jne    0x14000b8b5
   14000b903:	mov    ecx,DWORD PTR [rsp+0x40]
   14000b907:	cmp    ecx,ebx
   14000b909:	je     0x14000b8b5
   14000b90b:	mov    rdx,rdi
   14000b90e:	call   0x140012400
   14000b913:	mov    ecx,DWORD PTR [rsp+0x40]
   14000b917:	mov    ebx,eax
   14000b919:	call   0x140010e20
   14000b91e:	jmp    0x14000bafa
   14000b923:	cmp    DWORD PTR [rsp+0x74],r14d
   14000b928:	jne    0x14000b937
   14000b92a:	cmp    DWORD PTR [rsp+0x78],r14d
   14000b92f:	jne    0x14000b937
   14000b931:	mov    QWORD PTR [rdi+0x20],r14
   14000b935:	jmp    0x14000b99e
   14000b937:	lea    rdx,[rsp+0x40]
   14000b93c:	lea    rcx,[rsp+0x74]
   14000b941:	call   QWORD PTR [rip+0xe7d1]        # 0x14001a118
   14000b947:	test   eax,eax
   14000b949:	je     0x14000bae4
   14000b94f:	lea    rdx,[rsp+0x48]
   14000b954:	lea    rcx,[rsp+0x40]
   14000b959:	call   QWORD PTR [rip+0xe7b1]        # 0x14001a110
   14000b95f:	test   eax,eax
   14000b961:	je     0x14000bae4
   14000b967:	movzx  eax,WORD PTR [rsp+0x54]
   14000b96c:	movzx  r10d,WORD PTR [rsp+0x52]
   14000b972:	movzx  r9d,WORD PTR [rsp+0x50]
   14000b978:	movzx  r8d,WORD PTR [rsp+0x4e]
   14000b97e:	movzx  edx,WORD PTR [rsp+0x4a]
   14000b983:	movzx  ecx,WORD PTR [rsp+0x48]
   14000b988:	mov    DWORD PTR [rsp+0x30],ebx
   14000b98c:	mov    DWORD PTR [rsp+0x28],eax
   14000b990:	mov    DWORD PTR [rsp+0x20],r10d
   14000b995:	call   0x14001313c
   14000b99a:	mov    QWORD PTR [rdi+0x20],rax
   14000b99e:	cmp    DWORD PTR [rsp+0x6c],r14d
   14000b9a3:	jne    0x14000b9b2
   14000b9a5:	cmp    DWORD PTR [rsp+0x70],r14d
   14000b9aa:	jne    0x14000b9b2
   14000b9ac:	mov    rax,QWORD PTR [rdi+0x20]
   14000b9b0:	jmp    0x14000ba15
   14000b9b2:	lea    rdx,[rsp+0x40]
   14000b9b7:	lea    rcx,[rsp+0x6c]
   14000b9bc:	call   QWORD PTR [rip+0xe756]        # 0x14001a118
   14000b9c2:	test   eax,eax
   14000b9c4:	je     0x14000bae4
   14000b9ca:	lea    rdx,[rsp+0x48]
   14000b9cf:	lea    rcx,[rsp+0x40]
   14000b9d4:	call   QWORD PTR [rip+0xe736]        # 0x14001a110
   14000b9da:	test   eax,eax
   14000b9dc:	je     0x14000bae4
   14000b9e2:	movzx  eax,WORD PTR [rsp+0x54]
   14000b9e7:	movzx  r10d,WORD PTR [rsp+0x52]
   14000b9ed:	movzx  r9d,WORD PTR [rsp+0x50]
   14000b9f3:	movzx  r8d,WORD PTR [rsp+0x4e]
   14000b9f9:	movzx  edx,WORD PTR [rsp+0x4a]
   14000b9fe:	movzx  ecx,WORD PTR [rsp+0x48]
   14000ba03:	mov    DWORD PTR [rsp+0x30],ebx
   14000ba07:	mov    DWORD PTR [rsp+0x28],eax
   14000ba0b:	mov    DWORD PTR [rsp+0x20],r10d
   14000ba10:	call   0x14001313c
   14000ba15:	mov    QWORD PTR [rdi+0x18],rax
   14000ba19:	cmp    DWORD PTR [rsp+0x64],r14d
   14000ba1e:	jne    0x14000ba2d
   14000ba20:	cmp    DWORD PTR [rsp+0x68],r14d
   14000ba25:	jne    0x14000ba2d
   14000ba27:	mov    rax,QWORD PTR [rdi+0x20]
   14000ba2b:	jmp    0x14000ba90
   14000ba2d:	lea    rdx,[rsp+0x40]
   14000ba32:	lea    rcx,[rsp+0x64]
   14000ba37:	call   QWORD PTR [rip+0xe6db]        # 0x14001a118
   14000ba3d:	test   eax,eax
   14000ba3f:	je     0x14000bae4
   14000ba45:	lea    rdx,[rsp+0x48]
   14000ba4a:	lea    rcx,[rsp+0x40]
   14000ba4f:	call   QWORD PTR [rip+0xe6bb]        # 0x14001a110
   14000ba55:	test   eax,eax
   14000ba57:	je     0x14000bae4
   14000ba5d:	movzx  eax,WORD PTR [rsp+0x54]
   14000ba62:	movzx  r10d,WORD PTR [rsp+0x52]
   14000ba68:	movzx  r9d,WORD PTR [rsp+0x50]
   14000ba6e:	movzx  r8d,WORD PTR [rsp+0x4e]
   14000ba74:	movzx  edx,WORD PTR [rsp+0x4a]
   14000ba79:	movzx  ecx,WORD PTR [rsp+0x48]
   14000ba7e:	mov    DWORD PTR [rsp+0x30],ebx
   14000ba82:	mov    DWORD PTR [rsp+0x28],eax
   14000ba86:	mov    DWORD PTR [rsp+0x20],r10d
   14000ba8b:	call   0x14001313c
   14000ba90:	mov    rcx,rsi
   14000ba93:	mov    QWORD PTR [rdi+0x28],rax
   14000ba97:	call   QWORD PTR [rip+0xe62b]        # 0x14001a0c8
   14000ba9d:	mov    esi,0x1
   14000baa2:	mov    ecx,DWORD PTR [rsp+0x60]
   14000baa6:	mov    rdx,r12
   14000baa9:	call   0x140012318
   14000baae:	mov    WORD PTR [rdi+0x8],si
   14000bab2:	mov    WORD PTR [rdi+0x6],ax
   14000bab6:	mov    eax,DWORD PTR [rbp-0x80]
   14000bab9:	mov    DWORD PTR [rdi+0x14],eax
   14000babc:	cmp    DWORD PTR [rsp+0x7c],r14d
   14000bac1:	je     0x14000baca
   14000bac3:	mov    DWORD PTR [rdi+0x14],r14d
   14000bac7:	mov    r13d,ebx
   14000baca:	lea    ecx,[r15-0x1]
   14000bace:	mov    WORD PTR [rdi+0x4],r14w
   14000bad3:	mov    DWORD PTR [rdi+0xa],0x0
   14000bada:	mov    DWORD PTR [rdi],ecx
   14000badc:	mov    DWORD PTR [rdi+0x10],ecx
   14000badf:	mov    eax,r13d
   14000bae2:	jmp    0x14000bafc
   14000bae4:	call   QWORD PTR [rip+0xe586]        # 0x14001a070
   14000baea:	mov    ecx,eax
   14000baec:	call   0x14000be00
   14000baf1:	mov    rcx,rsi
   14000baf4:	call   QWORD PTR [rip+0xe5ce]        # 0x14001a0c8
   14000bafa:	mov    eax,ebx
   14000bafc:	mov    rcx,QWORD PTR [rbp+0x1b0]
   14000bb03:	xor    rcx,rsp
   14000bb06:	call   0x14000a820
   14000bb0b:	mov    rbx,QWORD PTR [rsp+0x310]
   14000bb13:	add    rsp,0x2c0
   14000bb1a:	pop    r15
   14000bb1c:	pop    r14
   14000bb1e:	pop    r13
   14000bb20:	pop    r12
   14000bb22:	pop    rdi
   14000bb23:	pop    rsi
   14000bb24:	pop    rbp
   14000bb25:	ret    
   14000bb26:	int3   
   14000bb27:	int3   
   14000bb28:	mov    r9,rcx
   14000bb2b:	xor    r8d,r8d
   14000bb2e:	mov    al,BYTE PTR [rcx]
   14000bb30:	inc    rcx
   14000bb33:	test   al,al
   14000bb35:	jne    0x14000bb2e
   14000bb37:	dec    rcx
   14000bb3a:	cmp    rcx,r9
   14000bb3d:	je     0x14000bb43
   14000bb3f:	cmp    BYTE PTR [rcx],dl
   14000bb41:	jne    0x14000bb37
   14000bb43:	cmp    BYTE PTR [rcx],dl
   14000bb45:	cmove  r8,rcx
   14000bb49:	mov    rax,r8
   14000bb4c:	ret    
   14000bb4d:	int3   
   14000bb4e:	int3   
   14000bb4f:	int3   
   14000bb50:	mov    rax,rsp
   14000bb53:	mov    QWORD PTR [rax+0x8],rbx
   14000bb57:	mov    QWORD PTR [rax+0x10],rbp
   14000bb5b:	mov    QWORD PTR [rax+0x18],rsi
   14000bb5f:	push   rdi
   14000bb60:	sub    rsp,0x50
   14000bb64:	and    QWORD PTR [rax-0x38],0x0
   14000bb69:	mov    rbx,rdx
   14000bb6c:	xor    edx,edx
   14000bb6e:	mov    rsi,r8
   14000bb71:	mov    rdi,rcx
   14000bb74:	lea    r8d,[rdx+0x28]
   14000bb78:	lea    rcx,[rax-0x30]
   14000bb7c:	mov    rbp,r9
   14000bb7f:	call   0x14000a530
   14000bb84:	test   rsi,rsi
   14000bb87:	jne    0x14000bb9e
   14000bb89:	call   0x14000bdc0
   14000bb8e:	mov    DWORD PTR [rax],0x16
   14000bb94:	call   0x14000d01c
   14000bb99:	or     eax,0xffffffff
   14000bb9c:	jmp    0x14000bc06
   14000bb9e:	test   rbx,rbx
   14000bba1:	je     0x14000bba8
   14000bba3:	test   rdi,rdi
   14000bba6:	je     0x14000bb89
   14000bba8:	mov    r9,QWORD PTR [rsp+0x80]
   14000bbb0:	mov    eax,0x7fffffff
   14000bbb5:	lea    rcx,[rsp+0x20]
   14000bbba:	cmp    rbx,rax
   14000bbbd:	mov    r8,rbp
   14000bbc0:	mov    rdx,rsi
   14000bbc3:	cmova  ebx,eax
   14000bbc6:	mov    DWORD PTR [rsp+0x38],0x42
   14000bbce:	mov    QWORD PTR [rsp+0x30],rdi
   14000bbd3:	mov    DWORD PTR [rsp+0x28],ebx
   14000bbd7:	mov    QWORD PTR [rsp+0x20],rdi
   14000bbdc:	call   0x14000de04
   14000bbe1:	mov    ebx,eax
   14000bbe3:	test   rdi,rdi
   14000bbe6:	je     0x14000bc06
   14000bbe8:	dec    DWORD PTR [rsp+0x28]
   14000bbec:	js     0x14000bbf8
   14000bbee:	mov    rax,QWORD PTR [rsp+0x20]
   14000bbf3:	mov    BYTE PTR [rax],0x0
   14000bbf6:	jmp    0x14000bc04
   14000bbf8:	lea    rdx,[rsp+0x20]
   14000bbfd:	xor    ecx,ecx
   14000bbff:	call   0x1400107a0
   14000bc04:	mov    eax,ebx
   14000bc06:	mov    rbx,QWORD PTR [rsp+0x60]
   14000bc0b:	mov    rbp,QWORD PTR [rsp+0x68]
   14000bc10:	mov    rsi,QWORD PTR [rsp+0x70]
   14000bc15:	add    rsp,0x50
   14000bc19:	pop    rdi
   14000bc1a:	ret    
   14000bc1b:	int3   
   14000bc1c:	sub    rsp,0x38
   14000bc20:	mov    QWORD PTR [rsp+0x20],r9
   14000bc25:	xor    r9d,r9d
   14000bc28:	call   0x14000bb50
   14000bc2d:	add    rsp,0x38
   14000bc31:	ret    
   14000bc32:	int3   
   14000bc33:	int3   
   14000bc34:	mov    rax,rsp
   14000bc37:	mov    QWORD PTR [rax+0x8],rbx
   14000bc3b:	mov    QWORD PTR [rax+0x10],rbp
   14000bc3f:	mov    QWORD PTR [rax+0x18],rsi
   14000bc43:	push   rdi
   14000bc44:	sub    rsp,0x50
   14000bc48:	and    QWORD PTR [rax-0x38],0x0
   14000bc4d:	mov    rbx,rdx
   14000bc50:	xor    edx,edx
   14000bc52:	mov    rsi,r8
   14000bc55:	mov    rbp,rcx
   14000bc58:	lea    r8d,[rdx+0x28]
   14000bc5c:	lea    rcx,[rax-0x30]
   14000bc60:	mov    rdi,r9
   14000bc63:	call   0x14000a530
   14000bc68:	test   rbx,rbx
   14000bc6b:	jne    0x14000bc82
   14000bc6d:	call   0x14000bdc0
   14000bc72:	mov    DWORD PTR [rax],0x16
   14000bc78:	call   0x14000d01c
   14000bc7d:	or     eax,0xffffffff
   14000bc80:	jmp    0x14000bcae
   14000bc82:	and    QWORD PTR [rsp+0x30],0x0
   14000bc88:	and    QWORD PTR [rsp+0x20],0x0
   14000bc8e:	lea    rcx,[rsp+0x20]
   14000bc93:	mov    r9,rdi
   14000bc96:	mov    r8,rsi
   14000bc99:	mov    rdx,rbx
   14000bc9c:	mov    DWORD PTR [rsp+0x28],0x7fffffff
   14000bca4:	mov    DWORD PTR [rsp+0x38],0x42
   14000bcac:	call   rbp
   14000bcae:	mov    rbx,QWORD PTR [rsp+0x60]
   14000bcb3:	mov    rbp,QWORD PTR [rsp+0x68]
   14000bcb8:	mov    rsi,QWORD PTR [rsp+0x70]
   14000bcbd:	add    rsp,0x50
   14000bcc1:	pop    rdi
   14000bcc2:	ret    
   14000bcc3:	int3   
   14000bcc4:	mov    r9,rdx
   14000bcc7:	mov    rdx,rcx
   14000bcca:	lea    rcx,[rip+0x2133]        # 0x14000de04
   14000bcd1:	xor    r8d,r8d
   14000bcd4:	jmp    0x14000bc34
   14000bcd9:	int3   
   14000bcda:	int3   
   14000bcdb:	int3   
   14000bcdc:	mov    QWORD PTR [rsp+0x8],rbx
   14000bce1:	push   rdi
   14000bce2:	sub    rsp,0x30
   14000bce6:	mov    edi,ecx
   14000bce8:	call   0x14000d180
   14000bced:	mov    rbx,rax
   14000bcf0:	test   rax,rax
   14000bcf3:	jne    0x14000bd07
   14000bcf5:	lea    rax,[rip+0x12d54]        # 0x14001ea50
   14000bcfc:	mov    rbx,QWORD PTR [rsp+0x40]
   14000bd01:	add    rsp,0x30
   14000bd05:	pop    rdi
   14000bd06:	ret    
   14000bd07:	cmp    QWORD PTR [rax+0x38],0x0
   14000bd0c:	jne    0x14000bd26
   14000bd0e:	mov    edx,0x1
   14000bd13:	mov    ecx,0x86
   14000bd18:	call   0x140010b24
   14000bd1d:	mov    QWORD PTR [rbx+0x38],rax
   14000bd21:	test   rax,rax
   14000bd24:	je     0x14000bcf5
   14000bd26:	mov    rbx,QWORD PTR [rbx+0x38]
   14000bd2a:	test   edi,edi
   14000bd2c:	js     0x14000bd37
   14000bd2e:	call   0x1400114f4
   14000bd33:	cmp    edi,DWORD PTR [rax]
   14000bd35:	jl     0x14000bd3e
   14000bd37:	call   0x1400114f4
   14000bd3c:	mov    edi,DWORD PTR [rax]
   14000bd3e:	call   0x1400114fc
   14000bd43:	movsxd rcx,edi
   14000bd46:	mov    edx,0x86
   14000bd4b:	mov    r8,QWORD PTR [rax+rcx*8]
   14000bd4f:	mov    rcx,rbx
   14000bd52:	call   0x14000eab0
   14000bd57:	test   eax,eax
   14000bd59:	jne    0x14000bd60
   14000bd5b:	mov    rax,rbx
   14000bd5e:	jmp    0x14000bcfc
   14000bd60:	and    QWORD PTR [rsp+0x20],0x0
   14000bd66:	xor    r9d,r9d
   14000bd69:	xor    r8d,r8d
   14000bd6c:	xor    edx,edx
   14000bd6e:	xor    ecx,ecx
   14000bd70:	call   0x14000cf78
   14000bd75:	int3   
   14000bd76:	int3   
   14000bd77:	int3   
   14000bd78:	lea    r9,[rip+0x17711]        # 0x140023490
   14000bd7f:	xor    eax,eax
   14000bd81:	mov    rdx,r9
   14000bd84:	lea    r8d,[rax+0x8]
   14000bd88:	cmp    ecx,DWORD PTR [rdx]
   14000bd8a:	je     0x14000bdb7
   14000bd8c:	inc    eax
   14000bd8e:	add    rdx,r8
   14000bd91:	cmp    eax,0x2d
   14000bd94:	jb     0x14000bd88
   14000bd96:	lea    eax,[rcx-0x13]
   14000bd99:	cmp    eax,0x11
   14000bd9c:	ja     0x14000bda4
   14000bd9e:	mov    eax,0xd
   14000bda3:	ret    
   14000bda4:	add    ecx,0xffffff44
   14000bdaa:	mov    eax,0x16
   14000bdaf:	cmp    ecx,0xe
   14000bdb2:	cmovbe eax,r8d
   14000bdb6:	ret    
   14000bdb7:	cdqe   
   14000bdb9:	mov    eax,DWORD PTR [r9+rax*8+0x4]
   14000bdbe:	ret    
   14000bdbf:	int3   
   14000bdc0:	sub    rsp,0x28
   14000bdc4:	call   0x14000d180
   14000bdc9:	test   rax,rax
   14000bdcc:	jne    0x14000bdd7
   14000bdce:	lea    rax,[rip+0x17823]        # 0x1400235f8
   14000bdd5:	jmp    0x14000bddb
   14000bdd7:	add    rax,0x10
   14000bddb:	add    rsp,0x28
   14000bddf:	ret    
   14000bde0:	sub    rsp,0x28
   14000bde4:	call   0x14000d180
   14000bde9:	test   rax,rax
   14000bdec:	jne    0x14000bdf7
   14000bdee:	lea    rax,[rip+0x17807]        # 0x1400235fc
   14000bdf5:	jmp    0x14000bdfb
   14000bdf7:	add    rax,0x14
   14000bdfb:	add    rsp,0x28
   14000bdff:	ret    
   14000be00:	rex push rbx
   14000be02:	sub    rsp,0x20
   14000be06:	mov    ebx,ecx
   14000be08:	call   0x14000d180
   14000be0d:	test   rax,rax
   14000be10:	jne    0x14000be1b
   14000be12:	lea    rax,[rip+0x177e3]        # 0x1400235fc
   14000be19:	jmp    0x14000be1f
   14000be1b:	add    rax,0x14
   14000be1f:	mov    DWORD PTR [rax],ebx
   14000be21:	call   0x14000d180
   14000be26:	lea    r10,[rip+0x177cb]        # 0x1400235f8
   14000be2d:	test   rax,rax
   14000be30:	je     0x14000be36
   14000be32:	lea    r10,[rax+0x10]
   14000be36:	mov    ecx,ebx
   14000be38:	call   0x14000bd78
   14000be3d:	mov    DWORD PTR [r10],eax
   14000be40:	add    rsp,0x20
   14000be44:	pop    rbx
   14000be45:	ret    
   14000be46:	int3   
   14000be47:	int3   
   14000be48:	mov    QWORD PTR [rsp+0x8],rbx
   14000be4d:	mov    QWORD PTR [rsp+0x10],rsi
   14000be52:	push   rdi
   14000be53:	sub    rsp,0x20
   14000be57:	mov    eax,DWORD PTR [rcx+0x18]
   14000be5a:	xor    esi,esi
   14000be5c:	mov    rbx,rcx
   14000be5f:	and    al,0x3
   14000be61:	cmp    al,0x2
   14000be63:	jne    0x14000bea4
   14000be65:	test   DWORD PTR [rcx+0x18],0x108
   14000be6c:	je     0x14000bea4
   14000be6e:	mov    edi,DWORD PTR [rcx]
   14000be70:	sub    edi,DWORD PTR [rcx+0x10]
   14000be73:	test   edi,edi
   14000be75:	jle    0x14000bea4
   14000be77:	call   0x140010a7c
   14000be7c:	mov    rdx,QWORD PTR [rbx+0x10]
   14000be80:	mov    r8d,edi
   14000be83:	mov    ecx,eax
   14000be85:	call   0x14001210c
   14000be8a:	cmp    eax,edi
   14000be8c:	jne    0x14000be9d
   14000be8e:	mov    eax,DWORD PTR [rbx+0x18]
   14000be91:	test   al,al
   14000be93:	jns    0x14000bea4
   14000be95:	and    eax,0xfffffffd
   14000be98:	mov    DWORD PTR [rbx+0x18],eax
   14000be9b:	jmp    0x14000bea4
   14000be9d:	or     DWORD PTR [rbx+0x18],0x20
   14000bea1:	or     esi,0xffffffff
   14000bea4:	mov    rcx,QWORD PTR [rbx+0x10]
   14000bea8:	and    DWORD PTR [rbx+0x8],0x0
   14000beac:	mov    eax,esi
   14000beae:	mov    rsi,QWORD PTR [rsp+0x38]
   14000beb3:	mov    QWORD PTR [rbx],rcx
   14000beb6:	mov    rbx,QWORD PTR [rsp+0x30]
   14000bebb:	add    rsp,0x20
   14000bebf:	pop    rdi
   14000bec0:	ret    
   14000bec1:	int3   
   14000bec2:	int3   
   14000bec3:	int3   
   14000bec4:	rex push rbx
   14000bec6:	sub    rsp,0x20
   14000beca:	mov    rbx,rcx
   14000becd:	test   rcx,rcx
   14000bed0:	jne    0x14000bedc
   14000bed2:	add    rsp,0x20
   14000bed6:	pop    rbx
   14000bed7:	jmp    0x14000bf10
   14000bedc:	call   0x14000be48
   14000bee1:	test   eax,eax
   14000bee3:	je     0x14000beea
   14000bee5:	or     eax,0xffffffff
   14000bee8:	jmp    0x14000bf0a
   14000beea:	test   DWORD PTR [rbx+0x18],0x4000
   14000bef1:	je     0x14000bf08
   14000bef3:	mov    rcx,rbx
   14000bef6:	call   0x140010a7c
   14000befb:	mov    ecx,eax
   14000befd:	call   0x1400137a0
   14000bf02:	neg    eax
   14000bf04:	sbb    eax,eax
   14000bf06:	jmp    0x14000bf0a
   14000bf08:	xor    eax,eax
   14000bf0a:	add    rsp,0x20
   14000bf0e:	pop    rbx
   14000bf0f:	ret    
   14000bf10:	mov    QWORD PTR [rsp+0x8],rbx
   14000bf15:	mov    QWORD PTR [rsp+0x10],rsi
   14000bf1a:	mov    QWORD PTR [rsp+0x18],rdi
   14000bf1f:	push   r12
   14000bf21:	push   r13
   14000bf23:	push   r15
   14000bf25:	sub    rsp,0x30
   14000bf29:	mov    r13d,ecx
   14000bf2c:	xor    esi,esi
   14000bf2e:	xor    edi,edi
   14000bf30:	lea    ecx,[rsi+0x1]
   14000bf33:	call   0x14000cb28
   14000bf38:	nop
   14000bf39:	xor    ebx,ebx
   14000bf3b:	or     r15d,0xffffffff
   14000bf3f:	mov    DWORD PTR [rsp+0x20],ebx
   14000bf43:	cmp    ebx,DWORD PTR [rip+0x1ad57]        # 0x140026ca0
   14000bf49:	jge    0x14000bfcf
   14000bf4f:	movsxd r12,ebx
   14000bf52:	mov    rax,QWORD PTR [rip+0x19d2f]        # 0x140025c88
   14000bf59:	cmp    QWORD PTR [rax+r12*8],0x0
   14000bf5e:	je     0x14000bfc8
   14000bf60:	mov    rdx,QWORD PTR [rax+r12*8]
   14000bf64:	test   BYTE PTR [rdx+0x18],0x83
   14000bf68:	je     0x14000bfc8
   14000bf6a:	mov    ecx,ebx
   14000bf6c:	call   0x14000ad0c
   14000bf71:	nop
   14000bf72:	mov    rax,QWORD PTR [rip+0x19d0f]        # 0x140025c88
   14000bf79:	mov    rcx,QWORD PTR [rax+r12*8]
   14000bf7d:	test   BYTE PTR [rcx+0x18],0x83
   14000bf81:	je     0x14000bfb6
   14000bf83:	cmp    r13d,0x1
   14000bf87:	jne    0x14000bf9b
   14000bf89:	call   0x14000bec4
   14000bf8e:	cmp    eax,r15d
   14000bf91:	je     0x14000bfb6
   14000bf93:	inc    esi
   14000bf95:	mov    DWORD PTR [rsp+0x24],esi
   14000bf99:	jmp    0x14000bfb6
   14000bf9b:	test   r13d,r13d
   14000bf9e:	jne    0x14000bfb6
   14000bfa0:	test   BYTE PTR [rcx+0x18],0x2
   14000bfa4:	je     0x14000bfb6
   14000bfa6:	call   0x14000bec4
   14000bfab:	cmp    eax,r15d
   14000bfae:	cmove  edi,r15d
   14000bfb2:	mov    DWORD PTR [rsp+0x28],edi
   14000bfb6:	mov    rdx,QWORD PTR [rip+0x19ccb]        # 0x140025c88
   14000bfbd:	mov    rdx,QWORD PTR [rdx+r12*8]
   14000bfc1:	mov    ecx,ebx
   14000bfc3:	call   0x14000ad8c
   14000bfc8:	inc    ebx
   14000bfca:	jmp    0x14000bf3f
   14000bfcf:	mov    ecx,0x1
   14000bfd4:	call   0x14000ca28
   14000bfd9:	cmp    r13d,0x1
   14000bfdd:	cmove  edi,esi
   14000bfe0:	mov    eax,edi
   14000bfe2:	mov    rbx,QWORD PTR [rsp+0x50]
   14000bfe7:	mov    rsi,QWORD PTR [rsp+0x58]
   14000bfec:	mov    rdi,QWORD PTR [rsp+0x60]
   14000bff1:	add    rsp,0x30
   14000bff5:	pop    r15
   14000bff7:	pop    r13
   14000bff9:	pop    r12
   14000bffb:	ret    
   14000bffc:	mov    QWORD PTR [rsp+0x10],rbx
   14000c001:	mov    QWORD PTR [rsp+0x8],rcx
   14000c006:	push   rdi
   14000c007:	sub    rsp,0x20
   14000c00b:	mov    rbx,rcx
   14000c00e:	test   rcx,rcx
   14000c011:	jne    0x14000c01a
   14000c013:	call   0x14000bf10
   14000c018:	jmp    0x14000c034
   14000c01a:	call   0x14000aca8
   14000c01f:	nop
   14000c020:	mov    rcx,rbx
   14000c023:	call   0x14000bec4
   14000c028:	mov    edi,eax
   14000c02a:	mov    rcx,rbx
   14000c02d:	call   0x14000ad40
   14000c032:	mov    eax,edi
   14000c034:	mov    rbx,QWORD PTR [rsp+0x38]
   14000c039:	add    rsp,0x20
   14000c03d:	pop    rdi
   14000c03e:	ret    
   14000c03f:	int3   
   14000c040:	mov    ecx,0x1
   14000c045:	jmp    0x14000bf10
   14000c04a:	int3   
   14000c04b:	int3   
   14000c04c:	jmp    0x14000c055
   14000c04e:	cmp    al,dl
   14000c050:	je     0x14000c05f
   14000c052:	inc    rcx
   14000c055:	mov    al,BYTE PTR [rcx]
   14000c057:	test   al,al
   14000c059:	jne    0x14000c04e
   14000c05b:	cmp    al,dl
   14000c05d:	jne    0x14000c063
   14000c05f:	mov    rax,rcx
   14000c062:	ret    
   14000c063:	xor    eax,eax
   14000c065:	ret    
   14000c066:	int3   
   14000c067:	int3   
   14000c068:	mov    QWORD PTR [rsp+0x8],rbx
   14000c06d:	push   rbp
   14000c06e:	push   rsi
   14000c06f:	push   rdi
   14000c070:	push   r12
   14000c072:	push   r14
   14000c074:	mov    rbp,rsp
   14000c077:	sub    rsp,0x30
   14000c07b:	and    QWORD PTR [rbp+0x48],0x0
   14000c080:	cmp    DWORD PTR [rip+0x1ac29],0x0        # 0x140026cb0
   14000c087:	mov    rsi,rdx
   14000c08a:	mov    rdi,rcx
   14000c08d:	jne    0x14000c097
   14000c08f:	or     eax,0xffffffff
   14000c092:	jmp    0x14000c2d7
   14000c097:	test   rcx,rcx
   14000c09a:	jne    0x14000c0ae
   14000c09c:	call   0x14000bdc0
   14000c0a1:	mov    DWORD PTR [rax],0x16
   14000c0a7:	call   0x14000d01c
   14000c0ac:	jmp    0x14000c08f
   14000c0ae:	test   rdx,rdx
   14000c0b1:	jne    0x14000c112
   14000c0b3:	lea    r14d,[rdx+0x3d]
   14000c0b7:	mov    edx,r14d
   14000c0ba:	call   0x1400140d8
   14000c0bf:	test   rax,rax
   14000c0c2:	je     0x14000c0e4
   14000c0c4:	mov    rcx,rax
   14000c0c7:	mov    ebx,0x7fff
   14000c0cc:	sub    rcx,rdi
   14000c0cf:	cmp    rcx,rbx
   14000c0d2:	jge    0x14000c09c
   14000c0d4:	lea    rcx,[rax+0x1]
   14000c0d8:	mov    edx,ebx
   14000c0da:	call   0x14000eb58
   14000c0df:	cmp    rax,rbx
   14000c0e2:	jae    0x14000c09c
   14000c0e4:	mov    rcx,rdi
   14000c0e7:	call   0x140009fa0
   14000c0ec:	mov    edx,0x1
   14000c0f1:	lea    rcx,[rax+0x1]
   14000c0f5:	mov    rbx,rax
   14000c0f8:	call   0x140010b24
   14000c0fd:	mov    QWORD PTR [rbp+0x48],rax
   14000c101:	test   rax,rax
   14000c104:	je     0x14000c08f
   14000c106:	mov    r8,rdi
   14000c109:	lea    rdx,[rbx+0x1]
   14000c10d:	mov    rcx,rax
   14000c110:	jmp    0x14000c18c
   14000c112:	mov    ebx,0x7fff
   14000c117:	mov    edx,ebx
   14000c119:	call   0x14000eb58
   14000c11e:	mov    edx,ebx
   14000c120:	mov    rcx,rsi
   14000c123:	mov    r12,rax
   14000c126:	call   0x14000eb58
   14000c12b:	cmp    r12,rbx
   14000c12e:	jae    0x14000c09c
   14000c134:	cmp    rax,rbx
   14000c137:	jae    0x14000c09c
   14000c13d:	lea    rbx,[rax+r12*1+0x2]
   14000c142:	mov    edx,0x1
   14000c147:	mov    rcx,rbx
   14000c14a:	call   0x140010b24
   14000c14f:	mov    QWORD PTR [rbp+0x48],rax
   14000c153:	test   rax,rax
   14000c156:	je     0x14000c08f
   14000c15c:	mov    r8,rdi
   14000c15f:	mov    rdx,rbx
   14000c162:	mov    rcx,rax
   14000c165:	call   0x14000eab0
   14000c16a:	mov    rax,QWORD PTR [rbp+0x48]
   14000c16e:	mov    r14d,0x3d
   14000c174:	mov    BYTE PTR [r12+rax*1],r14b
   14000c178:	mov    rax,QWORD PTR [rbp+0x48]
   14000c17c:	inc    r12
   14000c17f:	sub    rbx,r12
   14000c182:	mov    r8,rsi
   14000c185:	lea    rcx,[r12+rax*1]
   14000c189:	mov    rdx,rbx
   14000c18c:	call   0x14000eab0
   14000c191:	lea    rcx,[rbp+0x48]
   14000c195:	mov    edx,0x1
   14000c19a:	call   0x140013c50
   14000c19f:	test   eax,eax
   14000c1a1:	je     0x14000c1ba
   14000c1a3:	mov    rcx,QWORD PTR [rbp+0x48]
   14000c1a7:	test   rcx,rcx
   14000c1aa:	je     0x14000c08f
   14000c1b0:	call   0x14000b460
   14000c1b5:	jmp    0x14000c08f
   14000c1ba:	cmp    QWORD PTR [rip+0x187e6],0x0        # 0x1400249a8
   14000c1c2:	je     0x14000c2d5
   14000c1c8:	and    DWORD PTR [rsp+0x28],0x0
   14000c1cd:	and    QWORD PTR [rbp+0x40],0x0
   14000c1d2:	and    QWORD PTR [rsp+0x20],0x0
   14000c1d8:	or     ebx,0xffffffff
   14000c1db:	mov    r8,rdi
   14000c1de:	xor    edx,edx
   14000c1e0:	mov    r9d,ebx
   14000c1e3:	xor    ecx,ecx
   14000c1e5:	call   QWORD PTR [rip+0xdf45]        # 0x14001a130
   14000c1eb:	mov    r12d,eax
   14000c1ee:	test   eax,eax
   14000c1f0:	jne    0x14000c204
   14000c1f2:	call   0x14000bdc0
   14000c1f7:	mov    DWORD PTR [rax],0x2a
   14000c1fd:	mov    eax,ebx
   14000c1ff:	jmp    0x14000c2d7
   14000c204:	test   rsi,rsi
   14000c207:	je     0x14000c22d
   14000c209:	and    DWORD PTR [rsp+0x28],0x0
   14000c20e:	and    QWORD PTR [rsp+0x20],0x0
   14000c214:	mov    r9d,ebx
   14000c217:	mov    r8,rsi
   14000c21a:	xor    edx,edx
   14000c21c:	xor    ecx,ecx
   14000c21e:	call   QWORD PTR [rip+0xdf0c]        # 0x14001a130
   14000c224:	test   eax,eax
   14000c226:	je     0x14000c1f2
   14000c228:	lea    r12d,[r12+rax*1+0x1]
   14000c22d:	movsxd rcx,r12d
   14000c230:	mov    edx,0x2
   14000c235:	call   0x140010b24
   14000c23a:	mov    QWORD PTR [rbp+0x40],rax
   14000c23e:	test   rax,rax
   14000c241:	je     0x14000c1fd
   14000c243:	mov    r9d,ebx
   14000c246:	mov    r8,rdi
   14000c249:	xor    edx,edx
   14000c24b:	xor    ecx,ecx
   14000c24d:	mov    DWORD PTR [rsp+0x28],r12d
   14000c252:	mov    QWORD PTR [rsp+0x20],rax
   14000c257:	call   QWORD PTR [rip+0xded3]        # 0x14001a130
   14000c25d:	test   eax,eax
   14000c25f:	jne    0x14000c26c
   14000c261:	mov    rcx,QWORD PTR [rbp+0x40]
   14000c265:	call   0x14000b460
   14000c26a:	jmp    0x14000c1f2
   14000c26c:	test   rsi,rsi
   14000c26f:	je     0x14000c2af
   14000c271:	mov    rcx,QWORD PTR [rbp+0x40]
   14000c275:	call   0x140013c34
   14000c27a:	mov    rcx,QWORD PTR [rbp+0x40]
   14000c27e:	mov    r9d,ebx
   14000c281:	mov    WORD PTR [rcx+rax*2],r14w
   14000c286:	mov    rcx,QWORD PTR [rbp+0x40]
   14000c28a:	inc    rax
   14000c28d:	sub    r12d,eax
   14000c290:	lea    rax,[rcx+rax*2]
   14000c294:	mov    r8,rsi
   14000c297:	xor    edx,edx
   14000c299:	xor    ecx,ecx
   14000c29b:	mov    DWORD PTR [rsp+0x28],r12d
   14000c2a0:	mov    QWORD PTR [rsp+0x20],rax
   14000c2a5:	call   QWORD PTR [rip+0xde85]        # 0x14001a130
   14000c2ab:	test   eax,eax
   14000c2ad:	je     0x14000c261
   14000c2af:	lea    rcx,[rbp+0x40]
   14000c2b3:	xor    edx,edx
   14000c2b5:	call   0x140013878
   14000c2ba:	test   eax,eax
   14000c2bc:	je     0x14000c2d5
   14000c2be:	mov    rcx,QWORD PTR [rbp+0x40]
   14000c2c2:	test   rcx,rcx
   14000c2c5:	je     0x14000c1fd
   14000c2cb:	call   0x14000b460
   14000c2d0:	jmp    0x14000c1fd
   14000c2d5:	xor    eax,eax
   14000c2d7:	mov    rbx,QWORD PTR [rsp+0x60]
   14000c2dc:	add    rsp,0x30
   14000c2e0:	pop    r14
   14000c2e2:	pop    r12
   14000c2e4:	pop    rdi
   14000c2e5:	pop    rsi
   14000c2e6:	pop    rbp
   14000c2e7:	ret    
   14000c2e8:	rex push rbx
   14000c2ea:	sub    rsp,0x20
   14000c2ee:	mov    rbx,rcx
   14000c2f1:	mov    ecx,0x7
   14000c2f6:	call   0x14000cb28
   14000c2fb:	nop
   14000c2fc:	xor    edx,edx
   14000c2fe:	mov    rcx,rbx
   14000c301:	call   0x14000c068
   14000c306:	mov    ebx,eax
   14000c308:	mov    ecx,0x7
   14000c30d:	call   0x14000ca28
   14000c312:	mov    eax,ebx
   14000c314:	add    rsp,0x20
   14000c318:	pop    rbx
   14000c319:	ret    
   14000c31a:	int3   
   14000c31b:	int3   
   14000c31c:	rex push rbx
   14000c31e:	sub    rsp,0x20
   14000c322:	mov    ebx,edx
   14000c324:	test   rcx,rcx
   14000c327:	jne    0x14000c346
   14000c329:	call   0x14000bde0
   14000c32e:	and    DWORD PTR [rax],0x0
   14000c331:	call   0x14000bdc0
   14000c336:	mov    ebx,0x16
   14000c33b:	mov    DWORD PTR [rax],ebx
   14000c33d:	call   0x14000d01c
   14000c342:	mov    eax,ebx
   14000c344:	jmp    0x14000c396
   14000c346:	test   edx,0xfffffff9
   14000c34c:	jne    0x14000c329
   14000c34e:	call   QWORD PTR [rip+0xdde4]        # 0x14001a138
   14000c354:	cmp    eax,0xffffffff
   14000c357:	jne    0x14000c36f
   14000c359:	call   QWORD PTR [rip+0xdd11]        # 0x14001a070
   14000c35f:	mov    ecx,eax
   14000c361:	call   0x14000be00
   14000c366:	call   0x14000bdc0
   14000c36b:	mov    eax,DWORD PTR [rax]
   14000c36d:	jmp    0x14000c396
   14000c36f:	test   al,0x10
   14000c371:	jne    0x14000c394
   14000c373:	test   al,0x1
   14000c375:	je     0x14000c394
   14000c377:	test   bl,0x2
   14000c37a:	je     0x14000c394
   14000c37c:	call   0x14000bde0
   14000c381:	mov    DWORD PTR [rax],0x5
   14000c387:	call   0x14000bdc0
   14000c38c:	mov    DWORD PTR [rax],0xd
   14000c392:	jmp    0x14000c366
   14000c394:	xor    eax,eax
   14000c396:	add    rsp,0x20
   14000c39a:	pop    rbx
   14000c39b:	ret    
   14000c39c:	sub    rsp,0x28
   14000c3a0:	call   0x14000c31c
   14000c3a5:	neg    eax
   14000c3a7:	sbb    eax,eax
   14000c3a9:	add    rsp,0x28
   14000c3ad:	ret    
   14000c3ae:	int3   
   14000c3af:	int3   
   14000c3b0:	rex push rbx
   14000c3b2:	sub    rsp,0x20
   14000c3b6:	mov    ebx,ecx
   14000c3b8:	call   0x14000d180
   14000c3bd:	test   rax,rax
   14000c3c0:	je     0x14000c3ca
   14000c3c2:	mov    rcx,rax
   14000c3c5:	call   0x14000d35c
   14000c3ca:	mov    ecx,ebx
   14000c3cc:	call   QWORD PTR [rip+0xdd6e]        # 0x14001a140
   14000c3d2:	int3   
   14000c3d3:	int3   
   14000c3d4:	sub    rsp,0x28
   14000c3d8:	call   0x14000d204
   14000c3dd:	nop
   14000c3de:	mov    rcx,QWORD PTR [rax+0x98]
   14000c3e5:	call   QWORD PTR [rax+0x90]
   14000c3eb:	mov    ecx,eax
   14000c3ed:	call   0x14000c3b0
   14000c3f2:	nop
   14000c3f3:	mov    ecx,eax
   14000c3f5:	call   0x140009bd8
   14000c3fa:	nop
   14000c3fb:	add    rsp,0x28
   14000c3ff:	ret    
   14000c400:	rex push rbx
   14000c402:	sub    rsp,0x20
   14000c406:	mov    rbx,rcx
   14000c409:	call   0x14000d094
   14000c40e:	call   0x14000d08c
   14000c413:	mov    ecx,eax
   14000c415:	call   0x14000d084
   14000c41a:	mov    r11,rax
   14000c41d:	test   rax,rax
   14000c420:	jne    0x14000c44e
   14000c422:	call   0x14000d08c
   14000c427:	mov    rdx,rbx
   14000c42a:	mov    ecx,eax
   14000c42c:	call   0x14000d098
   14000c431:	test   eax,eax
   14000c433:	jne    0x14000c444
   14000c435:	call   QWORD PTR [rip+0xdc35]        # 0x14001a070
   14000c43b:	mov    ecx,eax
   14000c43d:	call   QWORD PTR [rip+0xdcfd]        # 0x14001a140
   14000c443:	int3   
   14000c444:	call   QWORD PTR [rip+0xdcfe]        # 0x14001a148
   14000c44a:	mov    DWORD PTR [rbx],eax
   14000c44c:	jmp    0x14000c47a
   14000c44e:	mov    rax,QWORD PTR [rbx+0x90]
   14000c455:	mov    rcx,rbx
   14000c458:	mov    QWORD PTR [r11+0x90],rax
   14000c45f:	mov    rax,QWORD PTR [rbx+0x98]
   14000c466:	mov    QWORD PTR [r11+0x98],rax
   14000c46d:	mov    rax,QWORD PTR [rbx+0x8]
   14000c471:	mov    QWORD PTR [r11+0x8],rax
   14000c475:	call   0x14000d228
   14000c47a:	call   0x14000c3d4
   14000c47f:	int3   
   14000c480:	mov    QWORD PTR [rsp+0x8],rbx
   14000c485:	mov    QWORD PTR [rsp+0x10],rbp
   14000c48a:	mov    QWORD PTR [rsp+0x20],rsi
   14000c48f:	push   rdi
   14000c490:	push   r12
   14000c492:	push   r13
   14000c494:	sub    rsp,0x30
   14000c498:	xor    ebx,ebx
   14000c49a:	mov    rbp,r9
   14000c49d:	mov    rsi,r8
   14000c4a0:	mov    r12d,edx
   14000c4a3:	mov    r13,rcx
   14000c4a6:	test   r8,r8
   14000c4a9:	jne    0x14000c4c0
   14000c4ab:	call   0x14000bdc0
   14000c4b0:	mov    DWORD PTR [rax],0x16
   14000c4b6:	call   0x14000d01c
   14000c4bb:	jmp    0x14000c557
   14000c4c0:	call   0x14000d094
   14000c4c5:	mov    edx,0x2c8
   14000c4ca:	mov    ecx,0x1
   14000c4cf:	call   0x140010b24
   14000c4d4:	mov    rdi,rax
   14000c4d7:	test   rax,rax
   14000c4da:	je     0x14000c544
   14000c4dc:	call   0x14000d204
   14000c4e1:	mov    rcx,rdi
   14000c4e4:	mov    rdx,QWORD PTR [rax+0xc0]
   14000c4eb:	call   0x14000d0c8
   14000c4f0:	mov    rcx,QWORD PTR [rsp+0x78]
   14000c4f5:	or     QWORD PTR [rdi+0x8],0xffffffffffffffff
   14000c4fa:	mov    eax,DWORD PTR [rsp+0x70]
   14000c4fe:	test   rcx,rcx
   14000c501:	lea    r8,[rsp+0x60]
   14000c506:	cmovne r8,rcx
   14000c50a:	mov    rdx,r12
   14000c50d:	mov    r9,rdi
   14000c510:	mov    QWORD PTR [rsp+0x28],r8
   14000c515:	lea    r8,[rip+0xfffffffffffffee4]        # 0x14000c400
   14000c51c:	mov    rcx,r13
   14000c51f:	mov    QWORD PTR [rdi+0x90],rsi
   14000c526:	mov    QWORD PTR [rdi+0x98],rbp
   14000c52d:	mov    DWORD PTR [rsp+0x20],eax
   14000c531:	call   QWORD PTR [rip+0xdc19]        # 0x14001a150
   14000c537:	test   rax,rax
   14000c53a:	jne    0x14000c559
   14000c53c:	call   QWORD PTR [rip+0xdb2e]        # 0x14001a070
   14000c542:	mov    ebx,eax
   14000c544:	mov    rcx,rdi
   14000c547:	call   0x14000b460
   14000c54c:	test   ebx,ebx
   14000c54e:	je     0x14000c557
   14000c550:	mov    ecx,ebx
   14000c552:	call   0x14000be00
   14000c557:	xor    eax,eax
   14000c559:	mov    rbx,QWORD PTR [rsp+0x50]
   14000c55e:	mov    rbp,QWORD PTR [rsp+0x58]
   14000c563:	mov    rsi,QWORD PTR [rsp+0x68]
   14000c568:	add    rsp,0x30
   14000c56c:	pop    r13
   14000c56e:	pop    r12
   14000c570:	pop    rdi
   14000c571:	ret    
   14000c572:	int3   
   14000c573:	int3   
   14000c574:	int3   
   14000c575:	int3   
   14000c576:	int3   
   14000c577:	int3   
   14000c578:	int3   
   14000c579:	int3   
   14000c57a:	int3   
   14000c57b:	int3   
   14000c57c:	int3   
   14000c57d:	int3   
   14000c57e:	int3   
   14000c57f:	int3   
   14000c580:	int3   
   14000c581:	int3   
   14000c582:	int3   
   14000c583:	int3   
   14000c584:	int3   
   14000c585:	int3   
   14000c586:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000c590:	sub    rdx,rcx
   14000c593:	cmp    r8,0x8
   14000c597:	jb     0x14000c5bb
   14000c599:	test   cl,0x7
   14000c59c:	je     0x14000c5b2
   14000c59e:	xchg   ax,ax
   14000c5a0:	mov    al,BYTE PTR [rcx]
   14000c5a2:	cmp    al,BYTE PTR [rdx+rcx*1]
   14000c5a5:	jne    0x14000c5d3
   14000c5a7:	inc    rcx
   14000c5aa:	dec    r8
   14000c5ad:	test   cl,0x7
   14000c5b0:	jne    0x14000c5a0
   14000c5b2:	mov    r9,r8
   14000c5b5:	shr    r9,0x3
   14000c5b9:	jne    0x14000c5da
   14000c5bb:	test   r8,r8
   14000c5be:	je     0x14000c5cf
   14000c5c0:	mov    al,BYTE PTR [rcx]
   14000c5c2:	cmp    al,BYTE PTR [rdx+rcx*1]
   14000c5c5:	jne    0x14000c5d3
   14000c5c7:	inc    rcx
   14000c5ca:	dec    r8
   14000c5cd:	jne    0x14000c5c0
   14000c5cf:	xor    rax,rax
   14000c5d2:	ret    
   14000c5d3:	sbb    eax,eax
   14000c5d5:	sbb    eax,0xffffffff
   14000c5d8:	ret    
   14000c5d9:	nop
   14000c5da:	shr    r9,0x2
   14000c5de:	je     0x14000c617
   14000c5e0:	mov    rax,QWORD PTR [rcx]
   14000c5e3:	cmp    rax,QWORD PTR [rdx+rcx*1]
   14000c5e7:	jne    0x14000c644
   14000c5e9:	mov    rax,QWORD PTR [rcx+0x8]
   14000c5ed:	cmp    rax,QWORD PTR [rdx+rcx*1+0x8]
   14000c5f2:	jne    0x14000c640
   14000c5f4:	mov    rax,QWORD PTR [rcx+0x10]
   14000c5f8:	cmp    rax,QWORD PTR [rdx+rcx*1+0x10]
   14000c5fd:	jne    0x14000c63c
   14000c5ff:	mov    rax,QWORD PTR [rcx+0x18]
   14000c603:	cmp    rax,QWORD PTR [rdx+rcx*1+0x18]
   14000c608:	jne    0x14000c638
   14000c60a:	add    rcx,0x20
   14000c60e:	dec    r9
   14000c611:	jne    0x14000c5e0
   14000c613:	and    r8,0x1f
   14000c617:	mov    r9,r8
   14000c61a:	shr    r9,0x3
   14000c61e:	je     0x14000c5bb
   14000c620:	mov    rax,QWORD PTR [rcx]
   14000c623:	cmp    rax,QWORD PTR [rdx+rcx*1]
   14000c627:	jne    0x14000c644
   14000c629:	add    rcx,0x8
   14000c62d:	dec    r9
   14000c630:	jne    0x14000c620
   14000c632:	and    r8,0x7
   14000c636:	jmp    0x14000c5bb
   14000c638:	add    rcx,0x8
   14000c63c:	add    rcx,0x8
   14000c640:	add    rcx,0x8
   14000c644:	mov    rcx,QWORD PTR [rcx+rdx*1]
   14000c648:	bswap  rax
   14000c64b:	bswap  rcx
   14000c64e:	cmp    rax,rcx
   14000c651:	sbb    eax,eax
   14000c653:	sbb    eax,0xffffffff
   14000c656:	ret    
   14000c657:	int3   
   14000c658:	sub    rsp,0x38
   14000c65c:	mov    rax,QWORD PTR [rip+0x16a5d]        # 0x1400230c0
   14000c663:	xor    rax,rsp
   14000c666:	mov    QWORD PTR [rsp+0x20],rax
   14000c66b:	mov    al,BYTE PTR [rdx]
   14000c66d:	xor    r11d,r11d
   14000c670:	mov    r10,rdx
   14000c673:	mov    QWORD PTR [rsp],r11
   14000c677:	mov    QWORD PTR [rsp+0x8],r11
   14000c67c:	mov    QWORD PTR [rsp+0x10],r11
   14000c681:	mov    QWORD PTR [rsp+0x18],r11
   14000c686:	mov    r9,rcx
   14000c689:	jmp    0x14000c6ac
   14000c68b:	movzx  r8d,al
   14000c68f:	movzx  eax,al
   14000c692:	mov    edx,0x1
   14000c697:	and    eax,0x7
   14000c69a:	shr    r8,0x3
   14000c69e:	mov    cl,al
   14000c6a0:	shl    dl,cl
   14000c6a2:	or     BYTE PTR [rsp+r8*1],dl
   14000c6a6:	inc    r10
   14000c6a9:	mov    al,BYTE PTR [r10]
   14000c6ac:	test   al,al
   14000c6ae:	jne    0x14000c68b
   14000c6b0:	jmp    0x14000c6d0
   14000c6b2:	movzx  ecx,r8b
   14000c6b6:	movzx  eax,r8b
   14000c6ba:	mov    edx,0x1
   14000c6bf:	and    ecx,0x7
   14000c6c2:	shr    rax,0x3
   14000c6c6:	shl    edx,cl
   14000c6c8:	test   BYTE PTR [rsp+rax*1],dl
   14000c6cb:	jne    0x14000c6ec
   14000c6cd:	inc    r9
   14000c6d0:	mov    r8b,BYTE PTR [r9]
   14000c6d3:	test   r8b,r8b
   14000c6d6:	jne    0x14000c6b2
   14000c6d8:	xor    eax,eax
   14000c6da:	mov    rcx,QWORD PTR [rsp+0x20]
   14000c6df:	xor    rcx,rsp
   14000c6e2:	call   0x14000a820
   14000c6e7:	add    rsp,0x38
   14000c6eb:	ret    
   14000c6ec:	mov    rax,r9
   14000c6ef:	jmp    0x14000c6da
   14000c6f1:	int3   
   14000c6f2:	int3   
   14000c6f3:	int3   
   14000c6f4:	rex push rbx
   14000c6f6:	sub    rsp,0x20
   14000c6fa:	mov    rbx,rcx
   14000c6fd:	mov    BYTE PTR [rcx+0x18],0x0
   14000c701:	test   rdx,rdx
   14000c704:	jne    0x14000c785
   14000c706:	call   0x14000d204
   14000c70b:	mov    QWORD PTR [rbx+0x10],rax
   14000c70f:	mov    rdx,QWORD PTR [rax+0xc0]
   14000c716:	mov    QWORD PTR [rbx],rdx
   14000c719:	mov    rcx,QWORD PTR [rax+0xb8]
   14000c720:	mov    QWORD PTR [rbx+0x8],rcx
   14000c724:	cmp    rdx,QWORD PTR [rip+0x17cb5]        # 0x1400243e0
   14000c72b:	je     0x14000c743
   14000c72d:	mov    eax,DWORD PTR [rax+0xc8]
   14000c733:	test   DWORD PTR [rip+0x17877],eax        # 0x140023fb0
   14000c739:	jne    0x14000c743
   14000c73b:	call   0x140014c2c
   14000c740:	mov    QWORD PTR [rbx],rax
   14000c743:	mov    rax,QWORD PTR [rip+0x17766]        # 0x140023eb0
   14000c74a:	cmp    QWORD PTR [rbx+0x8],rax
   14000c74e:	je     0x14000c76b
   14000c750:	mov    rax,QWORD PTR [rbx+0x10]
   14000c754:	mov    ecx,DWORD PTR [rax+0xc8]
   14000c75a:	test   DWORD PTR [rip+0x17850],ecx        # 0x140023fb0
   14000c760:	jne    0x14000c76b
   14000c762:	call   0x14001435c
   14000c767:	mov    QWORD PTR [rbx+0x8],rax
   14000c76b:	mov    rax,QWORD PTR [rbx+0x10]
   14000c76f:	test   BYTE PTR [rax+0xc8],0x2
   14000c776:	jne    0x14000c78c
   14000c778:	or     DWORD PTR [rax+0xc8],0x2
   14000c77f:	mov    BYTE PTR [rbx+0x18],0x1
   14000c783:	jmp    0x14000c78c
   14000c785:	movups xmm0,XMMWORD PTR [rdx]
   14000c788:	movdqu XMMWORD PTR [rcx],xmm0
   14000c78c:	mov    rax,rbx
   14000c78f:	add    rsp,0x20
   14000c793:	pop    rbx
   14000c794:	ret    
   14000c795:	int3   
   14000c796:	int3   
   14000c797:	int3   
   14000c798:	rex push rbx
   14000c79a:	sub    rsp,0x40
   14000c79e:	cmp    DWORD PTR [rip+0x191c3],0x0        # 0x140025968
   14000c7a5:	movsxd rbx,ecx
   14000c7a8:	jne    0x14000c7ba
   14000c7aa:	mov    rax,QWORD PTR [rip+0x17c0f]        # 0x1400243c0
   14000c7b1:	movzx  eax,WORD PTR [rax+rbx*2]
   14000c7b5:	and    eax,0x4
   14000c7b8:	jmp    0x14000c810
   14000c7ba:	lea    rcx,[rsp+0x20]
   14000c7bf:	xor    edx,edx
   14000c7c1:	call   0x14000c6f4
   14000c7c6:	mov    rax,QWORD PTR [rsp+0x20]
   14000c7cb:	cmp    DWORD PTR [rax+0x10c],0x1
   14000c7d2:	jle    0x14000c7ea
   14000c7d4:	lea    r8,[rsp+0x20]
   14000c7d9:	mov    edx,0x4
   14000c7de:	mov    ecx,ebx
   14000c7e0:	call   0x140014ca4
   14000c7e5:	mov    r11d,eax
   14000c7e8:	jmp    0x14000c7fa
   14000c7ea:	mov    rax,QWORD PTR [rax+0x140]
   14000c7f1:	movzx  r11d,WORD PTR [rax+rbx*2]
   14000c7f6:	and    r11d,0x4
   14000c7fa:	cmp    BYTE PTR [rsp+0x38],0x0
   14000c7ff:	je     0x14000c80d
   14000c801:	mov    rax,QWORD PTR [rsp+0x30]
   14000c806:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000c80d:	mov    eax,r11d
   14000c810:	add    rsp,0x40
   14000c814:	pop    rbx
   14000c815:	ret    
   14000c816:	int3   
   14000c817:	int3   
   14000c818:	rex push rbx
   14000c81a:	sub    rsp,0x40
   14000c81e:	cmp    DWORD PTR [rip+0x19143],0x0        # 0x140025968
   14000c825:	movsxd rbx,ecx
   14000c828:	jne    0x14000c83c
   14000c82a:	mov    rax,QWORD PTR [rip+0x17b8f]        # 0x1400243c0
   14000c831:	movzx  eax,WORD PTR [rax+rbx*2]
   14000c835:	and    eax,0x80
   14000c83a:	jmp    0x14000c895
   14000c83c:	lea    rcx,[rsp+0x20]
   14000c841:	xor    edx,edx
   14000c843:	call   0x14000c6f4
   14000c848:	mov    rax,QWORD PTR [rsp+0x20]
   14000c84d:	cmp    DWORD PTR [rax+0x10c],0x1
   14000c854:	jle    0x14000c86c
   14000c856:	lea    r8,[rsp+0x20]
   14000c85b:	mov    edx,0x80
   14000c860:	mov    ecx,ebx
   14000c862:	call   0x140014ca4
   14000c867:	mov    r11d,eax
   14000c86a:	jmp    0x14000c87f
   14000c86c:	mov    rax,QWORD PTR [rax+0x140]
   14000c873:	movzx  r11d,WORD PTR [rax+rbx*2]
   14000c878:	and    r11d,0x80
   14000c87f:	cmp    BYTE PTR [rsp+0x38],0x0
   14000c884:	je     0x14000c892
   14000c886:	mov    rax,QWORD PTR [rsp+0x30]
   14000c88b:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000c892:	mov    eax,r11d
   14000c895:	add    rsp,0x40
   14000c899:	pop    rbx
   14000c89a:	ret    
   14000c89b:	int3   
   14000c89c:	rex push rbx
   14000c89e:	sub    rsp,0x40
   14000c8a2:	cmp    DWORD PTR [rip+0x190bf],0x0        # 0x140025968
   14000c8a9:	movsxd rbx,ecx
   14000c8ac:	jne    0x14000c8be
   14000c8ae:	mov    rax,QWORD PTR [rip+0x17b0b]        # 0x1400243c0
   14000c8b5:	movzx  eax,WORD PTR [rax+rbx*2]
   14000c8b9:	and    eax,0x8
   14000c8bc:	jmp    0x14000c914
   14000c8be:	lea    rcx,[rsp+0x20]
   14000c8c3:	xor    edx,edx
   14000c8c5:	call   0x14000c6f4
   14000c8ca:	mov    rax,QWORD PTR [rsp+0x20]
   14000c8cf:	cmp    DWORD PTR [rax+0x10c],0x1
   14000c8d6:	jle    0x14000c8ee
   14000c8d8:	lea    r8,[rsp+0x20]
   14000c8dd:	mov    edx,0x8
   14000c8e2:	mov    ecx,ebx
   14000c8e4:	call   0x140014ca4
   14000c8e9:	mov    r11d,eax
   14000c8ec:	jmp    0x14000c8fe
   14000c8ee:	mov    rax,QWORD PTR [rax+0x140]
   14000c8f5:	movzx  r11d,WORD PTR [rax+rbx*2]
   14000c8fa:	and    r11d,0x8
   14000c8fe:	cmp    BYTE PTR [rsp+0x38],0x0
   14000c903:	je     0x14000c911
   14000c905:	mov    rax,QWORD PTR [rsp+0x30]
   14000c90a:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000c911:	mov    eax,r11d
   14000c914:	add    rsp,0x40
   14000c918:	pop    rbx
   14000c919:	ret    
   14000c91a:	int3   
   14000c91b:	int3   
   14000c91c:	mov    QWORD PTR [rsp+0x8],rbx
   14000c921:	mov    QWORD PTR [rsp+0x10],rsi
   14000c926:	mov    QWORD PTR [rsp+0x18],rdi
   14000c92b:	push   r12
   14000c92d:	sub    rsp,0x20
   14000c931:	lea    r12,[rip+0x16cc8]        # 0x140023600
   14000c938:	xor    esi,esi
   14000c93a:	xor    ebx,ebx
   14000c93c:	mov    rdi,r12
   14000c93f:	cmp    DWORD PTR [rdi+0x8],0x1
   14000c943:	jne    0x14000c96b
   14000c945:	movsxd rax,esi
   14000c948:	mov    edx,0xfa0
   14000c94d:	inc    esi
   14000c94f:	lea    rcx,[rax+rax*4]
   14000c953:	lea    rax,[rip+0x180a6]        # 0x140024a00
   14000c95a:	lea    rcx,[rax+rcx*8]
   14000c95e:	mov    QWORD PTR [rdi],rcx
   14000c961:	call   QWORD PTR [rip+0xd7f1]        # 0x14001a158
   14000c967:	test   eax,eax
   14000c969:	je     0x14000c991
   14000c96b:	inc    ebx
   14000c96d:	add    rdi,0x10
   14000c971:	cmp    ebx,0x24
   14000c974:	jl     0x14000c93f
   14000c976:	mov    eax,0x1
   14000c97b:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c980:	mov    rsi,QWORD PTR [rsp+0x38]
   14000c985:	mov    rdi,QWORD PTR [rsp+0x40]
   14000c98a:	add    rsp,0x20
   14000c98e:	pop    r12
   14000c990:	ret    
   14000c991:	movsxd rax,ebx
   14000c994:	add    rax,rax
   14000c997:	and    QWORD PTR [r12+rax*8],0x0
   14000c99c:	xor    eax,eax
   14000c99e:	jmp    0x14000c97b
   14000c9a0:	mov    QWORD PTR [rsp+0x8],rbx
   14000c9a5:	mov    QWORD PTR [rsp+0x10],rbp
   14000c9aa:	mov    QWORD PTR [rsp+0x18],rsi
   14000c9af:	push   rdi
   14000c9b0:	sub    rsp,0x20
   14000c9b4:	mov    edi,0x24
   14000c9b9:	lea    rbx,[rip+0x16c40]        # 0x140023600
   14000c9c0:	mov    esi,edi
   14000c9c2:	mov    rbp,QWORD PTR [rbx]
   14000c9c5:	test   rbp,rbp
   14000c9c8:	je     0x14000c9e5
   14000c9ca:	cmp    DWORD PTR [rbx+0x8],0x1
   14000c9ce:	je     0x14000c9e5
   14000c9d0:	mov    rcx,rbp
   14000c9d3:	call   QWORD PTR [rip+0xd787]        # 0x14001a160
   14000c9d9:	mov    rcx,rbp
   14000c9dc:	call   0x14000b460
   14000c9e1:	and    QWORD PTR [rbx],0x0
   14000c9e5:	add    rbx,0x10
   14000c9e9:	dec    rsi
   14000c9ec:	jne    0x14000c9c2
   14000c9ee:	lea    rbx,[rip+0x16c13]        # 0x140023608
   14000c9f5:	mov    rcx,QWORD PTR [rbx-0x8]
   14000c9f9:	test   rcx,rcx
   14000c9fc:	je     0x14000ca09
   14000c9fe:	cmp    DWORD PTR [rbx],0x1
   14000ca01:	jne    0x14000ca09
   14000ca03:	call   QWORD PTR [rip+0xd757]        # 0x14001a160
   14000ca09:	add    rbx,0x10
   14000ca0d:	dec    rdi
   14000ca10:	jne    0x14000c9f5
   14000ca12:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ca17:	mov    rbp,QWORD PTR [rsp+0x38]
   14000ca1c:	mov    rsi,QWORD PTR [rsp+0x40]
   14000ca21:	add    rsp,0x20
   14000ca25:	pop    rdi
   14000ca26:	ret    
   14000ca27:	int3   
   14000ca28:	movsxd rcx,ecx
   14000ca2b:	lea    rax,[rip+0x16bce]        # 0x140023600
   14000ca32:	add    rcx,rcx
   14000ca35:	mov    rcx,QWORD PTR [rax+rcx*8]
   14000ca39:	rex.W jmp QWORD PTR [rip+0xd6b0]        # 0x14001a0f0
   14000ca40:	mov    QWORD PTR [rsp+0x8],rbx
   14000ca45:	mov    QWORD PTR [rsp+0x10],rsi
   14000ca4a:	mov    QWORD PTR [rsp+0x18],rdi
   14000ca4f:	push   r13
   14000ca51:	sub    rsp,0x20
   14000ca55:	movsxd rbx,ecx
   14000ca58:	mov    esi,0x1
   14000ca5d:	cmp    QWORD PTR [rip+0x18963],0x0        # 0x1400253c8
   14000ca65:	jne    0x14000ca7e
   14000ca67:	call   0x14000db80
   14000ca6c:	lea    ecx,[rsi+0x1d]
   14000ca6f:	call   0x14000d920
   14000ca74:	mov    ecx,0xff
   14000ca79:	call   0x1400098a8
   14000ca7e:	mov    rdi,rbx
   14000ca81:	add    rdi,rdi
   14000ca84:	lea    r13,[rip+0x16b75]        # 0x140023600
   14000ca8b:	cmp    QWORD PTR [r13+rdi*8+0x0],0x0
   14000ca91:	je     0x14000ca97
   14000ca93:	mov    eax,esi
   14000ca95:	jmp    0x14000cb10
   14000ca97:	mov    ecx,0x28
   14000ca9c:	call   0x140010aa4
   14000caa1:	mov    rbx,rax
   14000caa4:	test   rax,rax
   14000caa7:	jne    0x14000cab8
   14000caa9:	call   0x14000bdc0
   14000caae:	mov    DWORD PTR [rax],0xc
   14000cab4:	xor    eax,eax
   14000cab6:	jmp    0x14000cb10
   14000cab8:	mov    ecx,0xa
   14000cabd:	call   0x14000cb28
   14000cac2:	nop
   14000cac3:	mov    rcx,rbx
   14000cac6:	cmp    QWORD PTR [r13+rdi*8+0x0],0x0
   14000cacc:	jne    0x14000cafb
   14000cace:	mov    edx,0xfa0
   14000cad3:	call   QWORD PTR [rip+0xd67f]        # 0x14001a158
   14000cad9:	test   eax,eax
   14000cadb:	jne    0x14000caf4
   14000cadd:	mov    rcx,rbx
   14000cae0:	call   0x14000b460
   14000cae5:	call   0x14000bdc0
   14000caea:	mov    DWORD PTR [rax],0xc
   14000caf0:	xor    esi,esi
   14000caf2:	jmp    0x14000cb01
   14000caf4:	mov    QWORD PTR [r13+rdi*8+0x0],rbx
   14000caf9:	jmp    0x14000cb01
   14000cafb:	call   0x14000b460
   14000cb00:	nop
   14000cb01:	mov    rcx,QWORD PTR [rip+0x16b98]        # 0x1400236a0
   14000cb08:	call   QWORD PTR [rip+0xd5e2]        # 0x14001a0f0
   14000cb0e:	jmp    0x14000ca93
   14000cb10:	mov    rbx,QWORD PTR [rsp+0x30]
   14000cb15:	mov    rsi,QWORD PTR [rsp+0x38]
   14000cb1a:	mov    rdi,QWORD PTR [rsp+0x40]
   14000cb1f:	add    rsp,0x20
   14000cb23:	pop    r13
   14000cb25:	ret    
   14000cb26:	int3   
   14000cb27:	int3   
   14000cb28:	mov    QWORD PTR [rsp+0x8],rbx
   14000cb2d:	push   rdi
   14000cb2e:	sub    rsp,0x20
   14000cb32:	movsxd rbx,ecx
   14000cb35:	lea    rdi,[rip+0x16ac4]        # 0x140023600
   14000cb3c:	add    rbx,rbx
   14000cb3f:	cmp    QWORD PTR [rdi+rbx*8],0x0
   14000cb44:	jne    0x14000cb57
   14000cb46:	call   0x14000ca40
   14000cb4b:	test   eax,eax
   14000cb4d:	jne    0x14000cb57
   14000cb4f:	lea    ecx,[rax+0x11]
   14000cb52:	call   0x140009c04
   14000cb57:	mov    rcx,QWORD PTR [rdi+rbx*8]
   14000cb5b:	mov    rbx,QWORD PTR [rsp+0x30]
   14000cb60:	add    rsp,0x20
   14000cb64:	pop    rdi
   14000cb65:	rex.W jmp QWORD PTR [rip+0xd57c]        # 0x14001a0e8
   14000cb6c:	sub    rsp,0x28
   14000cb70:	call   0x14000d204
   14000cb75:	mov    rcx,QWORD PTR [rax+0xd0]
   14000cb7c:	test   rcx,rcx
   14000cb7f:	je     0x14000cb85
   14000cb81:	call   rcx
   14000cb83:	jmp    0x14000cb85
   14000cb85:	call   0x140014d8c
   14000cb8a:	add    rsp,0x28
   14000cb8e:	ret    
   14000cb8f:	int3   
   14000cb90:	sub    rsp,0x28
   14000cb94:	lea    rcx,[rip+0xffffffffffffffd1]        # 0x14000cb6c
   14000cb9b:	call   QWORD PTR [rip+0xd5c7]        # 0x14001a168
   14000cba1:	mov    QWORD PTR [rip+0x18088],rax        # 0x140024c30
   14000cba8:	add    rsp,0x28
   14000cbac:	ret    
   14000cbad:	int3   
   14000cbae:	int3   
   14000cbaf:	int3   
   14000cbb0:	mov    QWORD PTR [rip+0x18081],rcx        # 0x140024c38
   14000cbb7:	mov    QWORD PTR [rip+0x18082],rcx        # 0x140024c40
   14000cbbe:	mov    QWORD PTR [rip+0x18083],rcx        # 0x140024c48
   14000cbc5:	mov    QWORD PTR [rip+0x18084],rcx        # 0x140024c50
   14000cbcc:	ret    
   14000cbcd:	int3   
   14000cbce:	int3   
   14000cbcf:	int3   
   14000cbd0:	mov    rcx,QWORD PTR [rip+0x18071]        # 0x140024c48
   14000cbd7:	rex.W jmp QWORD PTR [rip+0xd502]        # 0x14001a0e0
   14000cbde:	int3   
   14000cbdf:	int3   
   14000cbe0:	mov    QWORD PTR [rsp+0x10],rbx
   14000cbe5:	mov    QWORD PTR [rsp+0x18],rsi
   14000cbea:	push   rdi
   14000cbeb:	push   r12
   14000cbed:	push   r13
   14000cbef:	push   r14
   14000cbf1:	push   r15
   14000cbf3:	sub    rsp,0x30
   14000cbf7:	mov    ebx,ecx
   14000cbf9:	xor    edi,edi
   14000cbfb:	mov    DWORD PTR [rsp+0x60],edi
   14000cbff:	xor    esi,esi
   14000cc01:	mov    edx,ecx
   14000cc03:	sub    edx,0x2
   14000cc06:	je     0x14000ccd1
   14000cc0c:	sub    edx,0x2
   14000cc0f:	je     0x14000cc73
   14000cc11:	sub    edx,0x2
   14000cc14:	je     0x14000cc63
   14000cc16:	sub    edx,0x2
   14000cc19:	je     0x14000cc73
   14000cc1b:	sub    edx,0x3
   14000cc1e:	je     0x14000cc73
   14000cc20:	sub    edx,0x4
   14000cc23:	je     0x14000cc53
   14000cc25:	sub    edx,0x6
   14000cc28:	je     0x14000cc40
   14000cc2a:	dec    edx
   14000cc2c:	je     0x14000cc63
   14000cc2e:	call   0x14000bdc0
   14000cc33:	mov    DWORD PTR [rax],0x16
   14000cc39:	call   0x14000d01c
   14000cc3e:	jmp    0x14000cc80
   14000cc40:	lea    r12,[rip+0x17ff9]        # 0x140024c40
   14000cc47:	mov    rcx,QWORD PTR [rip+0x17ff2]        # 0x140024c40
   14000cc4e:	jmp    0x14000ccdf
   14000cc53:	lea    r12,[rip+0x17ff6]        # 0x140024c50
   14000cc5a:	mov    rcx,QWORD PTR [rip+0x17fef]        # 0x140024c50
   14000cc61:	jmp    0x14000ccdf
   14000cc63:	lea    r12,[rip+0x17fde]        # 0x140024c48
   14000cc6a:	mov    rcx,QWORD PTR [rip+0x17fd7]        # 0x140024c48
   14000cc71:	jmp    0x14000ccdf
   14000cc73:	call   0x14000d180
   14000cc78:	mov    rsi,rax
   14000cc7b:	test   rax,rax
   14000cc7e:	jne    0x14000cc88
   14000cc80:	or     eax,0xffffffff
   14000cc83:	jmp    0x14000cdfa
   14000cc88:	mov    rdx,QWORD PTR [rax+0xa0]
   14000cc8f:	mov    rcx,rdx
   14000cc92:	movsxd r8,DWORD PTR [rip+0x12a33]        # 0x14001f6cc
   14000cc99:	cmp    DWORD PTR [rcx+0x4],ebx
   14000cc9c:	je     0x14000ccb1
   14000cc9e:	add    rcx,0x10
   14000cca2:	mov    rax,r8
   14000cca5:	shl    rax,0x4
   14000cca9:	add    rax,rdx
   14000ccac:	cmp    rcx,rax
   14000ccaf:	jb     0x14000cc99
   14000ccb1:	mov    rax,r8
   14000ccb4:	shl    rax,0x4
   14000ccb8:	add    rax,rdx
   14000ccbb:	cmp    rcx,rax
   14000ccbe:	jae    0x14000ccc5
   14000ccc0:	cmp    DWORD PTR [rcx+0x4],ebx
   14000ccc3:	je     0x14000ccc7
   14000ccc5:	xor    ecx,ecx
   14000ccc7:	lea    r12,[rcx+0x8]
   14000cccb:	mov    r13,QWORD PTR [r12]
   14000cccf:	jmp    0x14000ccf1
   14000ccd1:	lea    r12,[rip+0x17f60]        # 0x140024c38
   14000ccd8:	mov    rcx,QWORD PTR [rip+0x17f59]        # 0x140024c38
   14000ccdf:	mov    edi,0x1
   14000cce4:	mov    DWORD PTR [rsp+0x60],edi
   14000cce8:	call   QWORD PTR [rip+0xd3f2]        # 0x14001a0e0
   14000ccee:	mov    r13,rax
   14000ccf1:	cmp    r13,0x1
   14000ccf5:	jne    0x14000ccfe
   14000ccf7:	xor    eax,eax
   14000ccf9:	jmp    0x14000cdfa
   14000ccfe:	test   r13,r13
   14000cd01:	jne    0x14000cd0d
   14000cd03:	lea    ecx,[r13+0x3]
   14000cd07:	call   0x140009bd8
   14000cd0c:	int3   
   14000cd0d:	test   edi,edi
   14000cd0f:	je     0x14000cd19
   14000cd11:	xor    ecx,ecx
   14000cd13:	call   0x14000cb28
   14000cd18:	nop
   14000cd19:	cmp    ebx,0x8
   14000cd1c:	je     0x14000cd2f
   14000cd1e:	cmp    ebx,0xb
   14000cd21:	je     0x14000cd2f
   14000cd23:	cmp    ebx,0x4
   14000cd26:	je     0x14000cd2f
   14000cd28:	mov    r15,QWORD PTR [rsp+0x28]
   14000cd2d:	jmp    0x14000cd5b
   14000cd2f:	mov    r15,QWORD PTR [rsi+0xa8]
   14000cd36:	mov    QWORD PTR [rsp+0x28],r15
   14000cd3b:	and    QWORD PTR [rsi+0xa8],0x0
   14000cd43:	cmp    ebx,0x8
   14000cd46:	jne    0x14000cd5b
   14000cd48:	mov    r14d,DWORD PTR [rsi+0xb0]
   14000cd4f:	mov    DWORD PTR [rsi+0xb0],0x8c
   14000cd59:	jmp    0x14000cd60
   14000cd5b:	mov    r14d,DWORD PTR [rsp+0x60]
   14000cd60:	cmp    ebx,0x8
   14000cd63:	jne    0x14000cd9e
   14000cd65:	mov    ecx,DWORD PTR [rip+0x12955]        # 0x14001f6c0
   14000cd6b:	mov    edx,ecx
   14000cd6d:	mov    DWORD PTR [rsp+0x20],ecx
   14000cd71:	mov    eax,DWORD PTR [rip+0x1294d]        # 0x14001f6c4
   14000cd77:	add    ecx,eax
   14000cd79:	cmp    edx,ecx
   14000cd7b:	jge    0x14000cda7
   14000cd7d:	movsxd rcx,edx
   14000cd80:	add    rcx,rcx
   14000cd83:	mov    rax,QWORD PTR [rsi+0xa0]
   14000cd8a:	and    QWORD PTR [rax+rcx*8+0x8],0x0
   14000cd90:	inc    edx
   14000cd92:	mov    DWORD PTR [rsp+0x20],edx
   14000cd96:	mov    ecx,DWORD PTR [rip+0x12924]        # 0x14001f6c0
   14000cd9c:	jmp    0x14000cd71
   14000cd9e:	call   0x14000d078
   14000cda3:	mov    QWORD PTR [r12],rax
   14000cda7:	test   edi,edi
   14000cda9:	je     0x14000cdb2
   14000cdab:	xor    ecx,ecx
   14000cdad:	call   0x14000ca28
   14000cdb2:	mov    edi,0x8
   14000cdb7:	cmp    ebx,edi
   14000cdb9:	jne    0x14000cdc8
   14000cdbb:	mov    edx,DWORD PTR [rsi+0xb0]
   14000cdc1:	mov    ecx,edi
   14000cdc3:	call   r13
   14000cdc6:	jmp    0x14000cdcd
   14000cdc8:	mov    ecx,ebx
   14000cdca:	call   r13
   14000cdcd:	cmp    ebx,edi
   14000cdcf:	je     0x14000cddf
   14000cdd1:	cmp    ebx,0xb
   14000cdd4:	je     0x14000cddf
   14000cdd6:	cmp    ebx,0x4
   14000cdd9:	jne    0x14000ccf7
   14000cddf:	mov    QWORD PTR [rsi+0xa8],r15
   14000cde6:	cmp    ebx,edi
   14000cde8:	jne    0x14000ccf7
   14000cdee:	mov    DWORD PTR [rsi+0xb0],r14d
   14000cdf5:	jmp    0x14000ccf7
   14000cdfa:	mov    rbx,QWORD PTR [rsp+0x68]
   14000cdff:	mov    rsi,QWORD PTR [rsp+0x70]
   14000ce04:	add    rsp,0x30
   14000ce08:	pop    r15
   14000ce0a:	pop    r14
   14000ce0c:	pop    r13
   14000ce0e:	pop    r12
   14000ce10:	pop    rdi
   14000ce11:	ret    
   14000ce12:	int3   
   14000ce13:	int3   
   14000ce14:	mov    QWORD PTR [rip+0x17e45],rcx        # 0x140024c60
   14000ce1b:	ret    
   14000ce1c:	mov    QWORD PTR [rip+0x17e45],rcx        # 0x140024c68
   14000ce23:	ret    
   14000ce24:	mov    QWORD PTR [rip+0x17e45],rcx        # 0x140024c70
   14000ce2b:	ret    
   14000ce2c:	mov    QWORD PTR [rsp+0x10],rbx
   14000ce31:	mov    QWORD PTR [rsp+0x18],rsi
   14000ce36:	push   rbp
   14000ce37:	push   rdi
   14000ce38:	push   r12
   14000ce3a:	lea    rbp,[rsp-0x4f0]
   14000ce42:	sub    rsp,0x5f0
   14000ce49:	mov    rax,QWORD PTR [rip+0x16270]        # 0x1400230c0
   14000ce50:	xor    rax,rsp
   14000ce53:	mov    QWORD PTR [rbp+0x4e0],rax
   14000ce5a:	mov    edi,r8d
   14000ce5d:	mov    esi,edx
   14000ce5f:	mov    ebx,ecx
   14000ce61:	cmp    ecx,0xffffffff
   14000ce64:	je     0x14000ce6b
   14000ce66:	call   0x140014dcc
   14000ce6b:	and    DWORD PTR [rsp+0x70],0x0
   14000ce70:	lea    rcx,[rsp+0x74]
   14000ce75:	xor    edx,edx
   14000ce77:	mov    r8d,0x94
   14000ce7d:	call   0x14000a530
   14000ce82:	lea    r11,[rsp+0x70]
   14000ce87:	lea    rax,[rbp+0x10]
   14000ce8b:	lea    rcx,[rbp+0x10]
   14000ce8f:	mov    QWORD PTR [rsp+0x48],r11
   14000ce94:	mov    QWORD PTR [rsp+0x50],rax
   14000ce99:	call   QWORD PTR [rip+0xd301]        # 0x14001a1a0
   14000ce9f:	mov    r12,QWORD PTR [rbp+0x108]
   14000cea6:	lea    rdx,[rsp+0x40]
   14000ceab:	mov    rcx,r12
   14000ceae:	xor    r8d,r8d
   14000ceb1:	call   0x140019912
   14000ceb6:	test   rax,rax
   14000ceb9:	je     0x14000cef2
   14000cebb:	and    QWORD PTR [rsp+0x38],0x0
   14000cec1:	mov    rdx,QWORD PTR [rsp+0x40]
   14000cec6:	lea    rcx,[rsp+0x60]
   14000cecb:	mov    QWORD PTR [rsp+0x30],rcx
   14000ced0:	lea    rcx,[rsp+0x58]
   14000ced5:	mov    r9,rax
   14000ced8:	mov    QWORD PTR [rsp+0x28],rcx
   14000cedd:	lea    rcx,[rbp+0x10]
   14000cee1:	mov    r8,r12
   14000cee4:	mov    QWORD PTR [rsp+0x20],rcx
   14000cee9:	xor    ecx,ecx
   14000ceeb:	call   0x14001990c
   14000cef0:	jmp    0x14000cf0e
   14000cef2:	mov    rax,QWORD PTR [rbp+0x508]
   14000cef9:	mov    QWORD PTR [rbp+0x108],rax
   14000cf00:	lea    rax,[rbp+0x508]
   14000cf07:	mov    QWORD PTR [rbp+0xa8],rax
   14000cf0e:	mov    rax,QWORD PTR [rbp+0x508]
   14000cf15:	mov    DWORD PTR [rsp+0x70],esi
   14000cf19:	mov    DWORD PTR [rsp+0x74],edi
   14000cf1d:	mov    QWORD PTR [rbp-0x80],rax
   14000cf21:	call   QWORD PTR [rip+0xd261]        # 0x14001a188
   14000cf27:	xor    ecx,ecx
   14000cf29:	mov    edi,eax
   14000cf2b:	call   QWORD PTR [rip+0xd24f]        # 0x14001a180
   14000cf31:	lea    rcx,[rsp+0x48]
   14000cf36:	call   QWORD PTR [rip+0xd23c]        # 0x14001a178
   14000cf3c:	test   eax,eax
   14000cf3e:	jne    0x14000cf50
   14000cf40:	test   edi,edi
   14000cf42:	jne    0x14000cf50
   14000cf44:	cmp    ebx,0xffffffff
   14000cf47:	je     0x14000cf50
   14000cf49:	mov    ecx,ebx
   14000cf4b:	call   0x140014dcc
   14000cf50:	mov    rcx,QWORD PTR [rbp+0x4e0]
   14000cf57:	xor    rcx,rsp
   14000cf5a:	call   0x14000a820
   14000cf5f:	lea    r11,[rsp+0x5f0]
   14000cf67:	mov    rbx,QWORD PTR [r11+0x28]
   14000cf6b:	mov    rsi,QWORD PTR [r11+0x30]
   14000cf6f:	mov    rsp,r11
   14000cf72:	pop    r12
   14000cf74:	pop    rdi
   14000cf75:	pop    rbp
   14000cf76:	ret    
   14000cf77:	int3   
   14000cf78:	sub    rsp,0x28
   14000cf7c:	mov    r8d,0x1
   14000cf82:	mov    edx,0xc0000417
   14000cf87:	lea    ecx,[r8+0x1]
   14000cf8b:	call   0x14000ce2c
   14000cf90:	call   QWORD PTR [rip+0xd21a]        # 0x14001a1b0
   14000cf96:	mov    edx,0xc0000417
   14000cf9b:	mov    rcx,rax
   14000cf9e:	add    rsp,0x28
   14000cfa2:	rex.W jmp QWORD PTR [rip+0xd1ff]        # 0x14001a1a8
   14000cfa9:	int3   
   14000cfaa:	int3   
   14000cfab:	int3   
   14000cfac:	mov    QWORD PTR [rsp+0x8],rbx
   14000cfb1:	mov    QWORD PTR [rsp+0x10],rbp
   14000cfb6:	mov    QWORD PTR [rsp+0x18],rsi
   14000cfbb:	push   rdi
   14000cfbc:	sub    rsp,0x30
   14000cfc0:	mov    rbp,rcx
   14000cfc3:	mov    rcx,QWORD PTR [rip+0x17ca6]        # 0x140024c70
   14000cfca:	mov    ebx,r9d
   14000cfcd:	mov    rdi,r8
   14000cfd0:	mov    rsi,rdx
   14000cfd3:	call   QWORD PTR [rip+0xd107]        # 0x14001a0e0
   14000cfd9:	mov    r9d,ebx
   14000cfdc:	mov    r8,rdi
   14000cfdf:	mov    rdx,rsi
   14000cfe2:	mov    rcx,rbp
   14000cfe5:	test   rax,rax
   14000cfe8:	je     0x14000d00b
   14000cfea:	mov    r10,QWORD PTR [rsp+0x60]
   14000cfef:	mov    QWORD PTR [rsp+0x20],r10
   14000cff4:	call   rax
   14000cff6:	mov    rbx,QWORD PTR [rsp+0x40]
   14000cffb:	mov    rbp,QWORD PTR [rsp+0x48]
   14000d000:	mov    rsi,QWORD PTR [rsp+0x50]
   14000d005:	add    rsp,0x30
   14000d009:	pop    rdi
   14000d00a:	ret    
   14000d00b:	mov    rax,QWORD PTR [rsp+0x60]
   14000d010:	mov    QWORD PTR [rsp+0x20],rax
   14000d015:	call   0x14000cf78
   14000d01a:	int3   
   14000d01b:	int3   
   14000d01c:	sub    rsp,0x38
   14000d020:	and    QWORD PTR [rsp+0x20],0x0
   14000d026:	xor    r9d,r9d
   14000d029:	xor    r8d,r8d
   14000d02c:	xor    edx,edx
   14000d02e:	xor    ecx,ecx
   14000d030:	call   0x14000cfac
   14000d035:	add    rsp,0x38
   14000d039:	ret    
   14000d03a:	int3   
   14000d03b:	int3   
   14000d03c:	mov    QWORD PTR [rip+0x17c35],rcx        # 0x140024c78
   14000d043:	ret    
   14000d044:	rex push rbx
   14000d046:	sub    rsp,0x20
   14000d04a:	mov    rbx,rcx
   14000d04d:	mov    rcx,QWORD PTR [rip+0x17c24]        # 0x140024c78
   14000d054:	call   QWORD PTR [rip+0xd086]        # 0x14001a0e0
   14000d05a:	test   rax,rax
   14000d05d:	je     0x14000d06f
   14000d05f:	mov    rcx,rbx
   14000d062:	call   rax
   14000d064:	test   eax,eax
   14000d066:	je     0x14000d06f
   14000d068:	mov    eax,0x1
   14000d06d:	jmp    0x14000d071
   14000d06f:	xor    eax,eax
   14000d071:	add    rsp,0x20
   14000d075:	pop    rbx
   14000d076:	ret    
   14000d077:	int3   
   14000d078:	xor    ecx,ecx
   14000d07a:	rex.W jmp QWORD PTR [rip+0xd0e7]        # 0x14001a168
   14000d081:	int3   
   14000d082:	int3   
   14000d083:	int3   
   14000d084:	rex.W jmp QWORD PTR [rip+0xd12d]        # 0x14001a1b8
   14000d08b:	int3   
   14000d08c:	mov    eax,DWORD PTR [rip+0x167ae]        # 0x140023840
   14000d092:	ret    
   14000d093:	int3   
   14000d094:	xor    eax,eax
   14000d096:	ret    
   14000d097:	int3   
   14000d098:	rex.W jmp QWORD PTR [rip+0xd121]        # 0x14001a1c0
   14000d09f:	int3   
   14000d0a0:	sub    rsp,0x28
   14000d0a4:	mov    ecx,DWORD PTR [rip+0x16796]        # 0x140023840
   14000d0aa:	cmp    ecx,0xffffffff
   14000d0ad:	je     0x14000d0bc
   14000d0af:	call   QWORD PTR [rip+0xd113]        # 0x14001a1c8
   14000d0b5:	or     DWORD PTR [rip+0x16784],0xffffffff        # 0x140023840
   14000d0bc:	add    rsp,0x28
   14000d0c0:	jmp    0x14000c9a0
   14000d0c5:	int3   
   14000d0c6:	int3   
   14000d0c7:	int3   
   14000d0c8:	mov    QWORD PTR [rsp+0x8],rbx
   14000d0cd:	push   rdi
   14000d0ce:	sub    rsp,0x20
   14000d0d2:	mov    rdi,rdx
   14000d0d5:	mov    rbx,rcx
   14000d0d8:	lea    rax,[rip+0x12521]        # 0x14001f600
   14000d0df:	mov    QWORD PTR [rcx+0xa0],rax
   14000d0e6:	and    DWORD PTR [rcx+0x10],0x0
   14000d0ea:	mov    DWORD PTR [rcx+0x1c],0x1
   14000d0f1:	mov    DWORD PTR [rcx+0xc8],0x1
   14000d0fb:	mov    BYTE PTR [rcx+0x174],0x43
   14000d102:	mov    BYTE PTR [rcx+0x1f7],0x43
   14000d109:	lea    rax,[rip+0x16970]        # 0x140023a80
   14000d110:	mov    QWORD PTR [rcx+0xb8],rax
   14000d117:	mov    ecx,0xd
   14000d11c:	call   0x14000cb28
   14000d121:	nop
   14000d122:	mov    rax,QWORD PTR [rbx+0xb8]
   14000d129:	lock inc DWORD PTR [rax]
   14000d12c:	mov    ecx,0xd
   14000d131:	call   0x14000ca28
   14000d136:	mov    ecx,0xc
   14000d13b:	call   0x14000cb28
   14000d140:	nop
   14000d141:	mov    QWORD PTR [rbx+0xc0],rdi
   14000d148:	test   rdi,rdi
   14000d14b:	jne    0x14000d15b
   14000d14d:	mov    rax,QWORD PTR [rip+0x1728c]        # 0x1400243e0
   14000d154:	mov    QWORD PTR [rbx+0xc0],rax
   14000d15b:	mov    rcx,QWORD PTR [rbx+0xc0]
   14000d162:	call   0x140014928
   14000d167:	nop
   14000d168:	mov    ecx,0xc
   14000d16d:	call   0x14000ca28
   14000d172:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d177:	add    rsp,0x20
   14000d17b:	pop    rdi
   14000d17c:	ret    
   14000d17d:	int3   
   14000d17e:	int3   
   14000d17f:	int3   
   14000d180:	mov    QWORD PTR [rsp+0x8],rbx
   14000d185:	push   rdi
   14000d186:	sub    rsp,0x20
   14000d18a:	call   QWORD PTR [rip+0xcee0]        # 0x14001a070
   14000d190:	mov    ecx,DWORD PTR [rip+0x166aa]        # 0x140023840
   14000d196:	mov    edi,eax
   14000d198:	call   QWORD PTR [rip+0xd01a]        # 0x14001a1b8
   14000d19e:	mov    rbx,rax
   14000d1a1:	test   rax,rax
   14000d1a4:	jne    0x14000d1ee
   14000d1a6:	lea    ecx,[rax+0x1]
   14000d1a9:	mov    edx,0x2c8
   14000d1ae:	call   0x140010b24
   14000d1b3:	mov    rbx,rax
   14000d1b6:	test   rax,rax
   14000d1b9:	je     0x14000d1ee
   14000d1bb:	mov    ecx,DWORD PTR [rip+0x1667f]        # 0x140023840
   14000d1c1:	mov    rdx,rax
   14000d1c4:	call   QWORD PTR [rip+0xcff6]        # 0x14001a1c0
   14000d1ca:	mov    rcx,rbx
   14000d1cd:	test   eax,eax
   14000d1cf:	je     0x14000d1e7
   14000d1d1:	xor    edx,edx
   14000d1d3:	call   0x14000d0c8
   14000d1d8:	call   QWORD PTR [rip+0xcf6a]        # 0x14001a148
   14000d1de:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   14000d1e3:	mov    DWORD PTR [rbx],eax
   14000d1e5:	jmp    0x14000d1ee
   14000d1e7:	call   0x14000b460
   14000d1ec:	xor    ebx,ebx
   14000d1ee:	mov    ecx,edi
   14000d1f0:	call   QWORD PTR [rip+0xcfda]        # 0x14001a1d0
   14000d1f6:	mov    rax,rbx
   14000d1f9:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d1fe:	add    rsp,0x20
   14000d202:	pop    rdi
   14000d203:	ret    
   14000d204:	rex push rbx
   14000d206:	sub    rsp,0x20
   14000d20a:	call   0x14000d180
   14000d20f:	mov    rbx,rax
   14000d212:	test   rax,rax
   14000d215:	jne    0x14000d21f
   14000d217:	lea    ecx,[rax+0x10]
   14000d21a:	call   0x140009c04
   14000d21f:	mov    rax,rbx
   14000d222:	add    rsp,0x20
   14000d226:	pop    rbx
   14000d227:	ret    
   14000d228:	test   rcx,rcx
   14000d22b:	je     0x14000d35a
   14000d231:	mov    QWORD PTR [rsp+0x10],rbx
   14000d236:	push   rdi
   14000d237:	sub    rsp,0x20
   14000d23b:	mov    rbx,rcx
   14000d23e:	mov    rcx,QWORD PTR [rcx+0x38]
   14000d242:	test   rcx,rcx
   14000d245:	je     0x14000d24c
   14000d247:	call   0x14000b460
   14000d24c:	mov    rcx,QWORD PTR [rbx+0x48]
   14000d250:	test   rcx,rcx
   14000d253:	je     0x14000d25a
   14000d255:	call   0x14000b460
   14000d25a:	mov    rcx,QWORD PTR [rbx+0x58]
   14000d25e:	test   rcx,rcx
   14000d261:	je     0x14000d268
   14000d263:	call   0x14000b460
   14000d268:	mov    rcx,QWORD PTR [rbx+0x68]
   14000d26c:	test   rcx,rcx
   14000d26f:	je     0x14000d276
   14000d271:	call   0x14000b460
   14000d276:	mov    rcx,QWORD PTR [rbx+0x70]
   14000d27a:	test   rcx,rcx
   14000d27d:	je     0x14000d284
   14000d27f:	call   0x14000b460
   14000d284:	mov    rcx,QWORD PTR [rbx+0x78]
   14000d288:	test   rcx,rcx
   14000d28b:	je     0x14000d292
   14000d28d:	call   0x14000b460
   14000d292:	mov    rcx,QWORD PTR [rbx+0x80]
   14000d299:	test   rcx,rcx
   14000d29c:	je     0x14000d2a3
   14000d29e:	call   0x14000b460
   14000d2a3:	mov    rcx,QWORD PTR [rbx+0xa0]
   14000d2aa:	lea    rax,[rip+0x1234f]        # 0x14001f600
   14000d2b1:	cmp    rcx,rax
   14000d2b4:	je     0x14000d2bb
   14000d2b6:	call   0x14000b460
   14000d2bb:	mov    edi,0xd
   14000d2c0:	mov    ecx,edi
   14000d2c2:	call   0x14000cb28
   14000d2c7:	nop
   14000d2c8:	mov    rcx,QWORD PTR [rbx+0xb8]
   14000d2cf:	mov    QWORD PTR [rsp+0x30],rcx
   14000d2d4:	test   rcx,rcx
   14000d2d7:	je     0x14000d2f5
   14000d2d9:	lock dec DWORD PTR [rcx]
   14000d2dc:	jne    0x14000d2f5
   14000d2de:	lea    rax,[rip+0x1679b]        # 0x140023a80
   14000d2e5:	mov    rcx,QWORD PTR [rsp+0x30]
   14000d2ea:	cmp    rcx,rax
   14000d2ed:	je     0x14000d2f5
   14000d2ef:	call   0x14000b460
   14000d2f4:	nop
   14000d2f5:	mov    ecx,edi
   14000d2f7:	call   0x14000ca28
   14000d2fc:	mov    ecx,0xc
   14000d301:	call   0x14000cb28
   14000d306:	nop
   14000d307:	mov    rdi,QWORD PTR [rbx+0xc0]
   14000d30e:	test   rdi,rdi
   14000d311:	je     0x14000d33e
   14000d313:	mov    rcx,rdi
   14000d316:	call   0x1400149b4
   14000d31b:	cmp    rdi,QWORD PTR [rip+0x170be]        # 0x1400243e0
   14000d322:	je     0x14000d33e
   14000d324:	lea    rax,[rip+0x16f55]        # 0x140024280
   14000d32b:	cmp    rdi,rax
   14000d32e:	je     0x14000d33e
   14000d330:	cmp    DWORD PTR [rdi],0x0
   14000d333:	jne    0x14000d33e
   14000d335:	mov    rcx,rdi
   14000d338:	call   0x140014a58
   14000d33d:	nop
   14000d33e:	mov    ecx,0xc
   14000d343:	call   0x14000ca28
   14000d348:	mov    rcx,rbx
   14000d34b:	call   0x14000b460
   14000d350:	mov    rbx,QWORD PTR [rsp+0x38]
   14000d355:	add    rsp,0x20
   14000d359:	pop    rdi
   14000d35a:	ret    
   14000d35b:	int3   
   14000d35c:	rex push rbx
   14000d35e:	sub    rsp,0x20
   14000d362:	mov    rbx,rcx
   14000d365:	mov    ecx,DWORD PTR [rip+0x164d5]        # 0x140023840
   14000d36b:	cmp    ecx,0xffffffff
   14000d36e:	je     0x14000d394
   14000d370:	test   rbx,rbx
   14000d373:	jne    0x14000d384
   14000d375:	call   QWORD PTR [rip+0xce3d]        # 0x14001a1b8
   14000d37b:	mov    ecx,DWORD PTR [rip+0x164bf]        # 0x140023840
   14000d381:	mov    rbx,rax
   14000d384:	xor    edx,edx
   14000d386:	call   QWORD PTR [rip+0xce34]        # 0x14001a1c0
   14000d38c:	mov    rcx,rbx
   14000d38f:	call   0x14000d228
   14000d394:	add    rsp,0x20
   14000d398:	pop    rbx
   14000d399:	ret    
   14000d39a:	int3   
   14000d39b:	int3   
   14000d39c:	rex push rbx
   14000d39e:	sub    rsp,0x20
   14000d3a2:	call   0x1400098d8
   14000d3a7:	call   0x14000c91c
   14000d3ac:	test   eax,eax
   14000d3ae:	je     0x14000d410
   14000d3b0:	lea    rcx,[rip+0xfffffffffffffe71]        # 0x14000d228
   14000d3b7:	call   QWORD PTR [rip+0xce1b]        # 0x14001a1d8
   14000d3bd:	mov    DWORD PTR [rip+0x1647d],eax        # 0x140023840
   14000d3c3:	cmp    eax,0xffffffff
   14000d3c6:	je     0x14000d410
   14000d3c8:	mov    edx,0x2c8
   14000d3cd:	mov    ecx,0x1
   14000d3d2:	call   0x140010b24
   14000d3d7:	mov    rbx,rax
   14000d3da:	test   rax,rax
   14000d3dd:	je     0x14000d410
   14000d3df:	mov    ecx,DWORD PTR [rip+0x1645b]        # 0x140023840
   14000d3e5:	mov    rdx,rax
   14000d3e8:	call   QWORD PTR [rip+0xcdd2]        # 0x14001a1c0
   14000d3ee:	test   eax,eax
   14000d3f0:	je     0x14000d410
   14000d3f2:	xor    edx,edx
   14000d3f4:	mov    rcx,rbx
   14000d3f7:	call   0x14000d0c8
   14000d3fc:	call   QWORD PTR [rip+0xcd46]        # 0x14001a148
   14000d402:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   14000d407:	mov    DWORD PTR [rbx],eax
   14000d409:	mov    eax,0x1
   14000d40e:	jmp    0x14000d417
   14000d410:	call   0x14000d0a0
   14000d415:	xor    eax,eax
   14000d417:	add    rsp,0x20
   14000d41b:	pop    rbx
   14000d41c:	ret    
   14000d41d:	int3   
   14000d41e:	int3   
   14000d41f:	int3   
   14000d420:	rex push rbx
   14000d422:	sub    rsp,0x20
   14000d426:	mov    edx,0x8
   14000d42b:	lea    ecx,[rdx+0x18]
   14000d42e:	call   0x140010b24
   14000d433:	mov    rcx,rax
   14000d436:	mov    rbx,rax
   14000d439:	call   QWORD PTR [rip+0xcd29]        # 0x14001a168
   14000d43f:	mov    QWORD PTR [rip+0x1987a],rax        # 0x140026cc0
   14000d446:	mov    QWORD PTR [rip+0x1986b],rax        # 0x140026cb8
   14000d44d:	test   rbx,rbx
   14000d450:	jne    0x14000d457
   14000d452:	lea    eax,[rbx+0x18]
   14000d455:	jmp    0x14000d45d
   14000d457:	and    QWORD PTR [rbx],0x0
   14000d45b:	xor    eax,eax
   14000d45d:	add    rsp,0x20
   14000d461:	pop    rbx
   14000d462:	ret    
   14000d463:	int3   
   14000d464:	mov    QWORD PTR [rsp+0x8],rbx
   14000d469:	mov    QWORD PTR [rsp+0x10],rsi
   14000d46e:	mov    QWORD PTR [rsp+0x18],rdi
   14000d473:	push   r12
   14000d475:	push   r13
   14000d477:	push   r14
   14000d479:	sub    rsp,0x20
   14000d47d:	mov    r14,rcx
   14000d480:	call   0x1400098c0
   14000d485:	nop
   14000d486:	mov    rcx,QWORD PTR [rip+0x19833]        # 0x140026cc0
   14000d48d:	call   QWORD PTR [rip+0xcc4d]        # 0x14001a0e0
   14000d493:	mov    r12,rax
   14000d496:	mov    rcx,QWORD PTR [rip+0x1981b]        # 0x140026cb8
   14000d49d:	call   QWORD PTR [rip+0xcc3d]        # 0x14001a0e0
   14000d4a3:	mov    rbx,rax
   14000d4a6:	cmp    rax,r12
   14000d4a9:	jb     0x14000d54a
   14000d4af:	mov    rdi,rax
   14000d4b2:	sub    rdi,r12
   14000d4b5:	lea    r13,[rdi+0x8]
   14000d4b9:	cmp    r13,0x8
   14000d4bd:	jb     0x14000d54a
   14000d4c3:	mov    rcx,r12
   14000d4c6:	call   0x140014dd4
   14000d4cb:	mov    rsi,rax
   14000d4ce:	cmp    rax,r13
   14000d4d1:	jae    0x14000d528
   14000d4d3:	mov    edx,0x1000
   14000d4d8:	cmp    rax,rdx
   14000d4db:	cmovb  rdx,rax
   14000d4df:	add    rdx,rax
   14000d4e2:	cmp    rdx,rax
   14000d4e5:	jb     0x14000d4f8
   14000d4e7:	mov    rcx,r12
   14000d4ea:	call   0x140010ba8
   14000d4ef:	xor    ebx,ebx
   14000d4f1:	test   rax,rax
   14000d4f4:	jne    0x14000d510
   14000d4f6:	jmp    0x14000d4fa
   14000d4f8:	xor    ebx,ebx
   14000d4fa:	lea    rdx,[rsi+0x20]
   14000d4fe:	cmp    rdx,rsi
   14000d501:	jb     0x14000d54c
   14000d503:	mov    rcx,r12
   14000d506:	call   0x140010ba8
   14000d50b:	test   rax,rax
   14000d50e:	je     0x14000d54c
   14000d510:	sar    rdi,0x3
   14000d514:	lea    rbx,[rax+rdi*8]
   14000d518:	mov    rcx,rax
   14000d51b:	call   QWORD PTR [rip+0xcc47]        # 0x14001a168
   14000d521:	mov    QWORD PTR [rip+0x19798],rax        # 0x140026cc0
   14000d528:	mov    rcx,r14
   14000d52b:	call   QWORD PTR [rip+0xcc37]        # 0x14001a168
   14000d531:	mov    QWORD PTR [rbx],rax
   14000d534:	lea    rcx,[rbx+0x8]
   14000d538:	call   QWORD PTR [rip+0xcc2a]        # 0x14001a168
   14000d53e:	mov    QWORD PTR [rip+0x19773],rax        # 0x140026cb8
   14000d545:	mov    rbx,r14
   14000d548:	jmp    0x14000d54c
   14000d54a:	xor    ebx,ebx
   14000d54c:	call   0x1400098cc
   14000d551:	mov    rax,rbx
   14000d554:	mov    rbx,QWORD PTR [rsp+0x40]
   14000d559:	mov    rsi,QWORD PTR [rsp+0x48]
   14000d55e:	mov    rdi,QWORD PTR [rsp+0x50]
   14000d563:	add    rsp,0x20
   14000d567:	pop    r14
   14000d569:	pop    r13
   14000d56b:	pop    r12
   14000d56d:	ret    
   14000d56e:	int3   
   14000d56f:	int3   
   14000d570:	sub    rsp,0x28
   14000d574:	call   0x14000d464
   14000d579:	neg    rax
   14000d57c:	sbb    eax,eax
   14000d57e:	neg    eax
   14000d580:	dec    eax
   14000d582:	add    rsp,0x28
   14000d586:	ret    
   14000d587:	int3   
   14000d588:	mov    QWORD PTR [rsp+0x8],rbx
   14000d58d:	push   rdi
   14000d58e:	sub    rsp,0x20
   14000d592:	lea    rbx,[rip+0x1330f]        # 0x1400208a8
   14000d599:	lea    rdi,[rip+0x13308]        # 0x1400208a8
   14000d5a0:	jmp    0x14000d5b0
   14000d5a2:	mov    rax,QWORD PTR [rbx]
   14000d5a5:	test   rax,rax
   14000d5a8:	je     0x14000d5ac
   14000d5aa:	call   rax
   14000d5ac:	add    rbx,0x8
   14000d5b0:	cmp    rbx,rdi
   14000d5b3:	jb     0x14000d5a2
   14000d5b5:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d5ba:	add    rsp,0x20
   14000d5be:	pop    rdi
   14000d5bf:	ret    
   14000d5c0:	mov    QWORD PTR [rsp+0x8],rbx
   14000d5c5:	push   rdi
   14000d5c6:	sub    rsp,0x20
   14000d5ca:	lea    rbx,[rip+0x132e7]        # 0x1400208b8
   14000d5d1:	lea    rdi,[rip+0x132e0]        # 0x1400208b8
   14000d5d8:	jmp    0x14000d5e8
   14000d5da:	mov    rax,QWORD PTR [rbx]
   14000d5dd:	test   rax,rax
   14000d5e0:	je     0x14000d5e4
   14000d5e2:	call   rax
   14000d5e4:	add    rbx,0x8
   14000d5e8:	cmp    rbx,rdi
   14000d5eb:	jb     0x14000d5da
   14000d5ed:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d5f2:	add    rsp,0x20
   14000d5f6:	pop    rdi
   14000d5f7:	ret    
   14000d5f8:	mov    QWORD PTR [rsp+0x8],rbx
   14000d5fd:	push   rdi
   14000d5fe:	sub    rsp,0x20
   14000d602:	lea    rbx,[rip+0x16247]        # 0x140023850
   14000d609:	mov    edi,0xa
   14000d60e:	mov    rcx,QWORD PTR [rbx]
   14000d611:	call   QWORD PTR [rip+0xcb51]        # 0x14001a168
   14000d617:	mov    QWORD PTR [rbx],rax
   14000d61a:	add    rbx,0x8
   14000d61e:	dec    rdi
   14000d621:	jne    0x14000d60e
   14000d623:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d628:	add    rsp,0x20
   14000d62c:	pop    rdi
   14000d62d:	ret    
   14000d62e:	int3   
   14000d62f:	int3   
   14000d630:	mov    rax,rcx
   14000d633:	mov    ecx,0x5a4d
   14000d638:	cmp    WORD PTR [rax],cx
   14000d63b:	je     0x14000d640
   14000d63d:	xor    eax,eax
   14000d63f:	ret    
   14000d640:	movsxd rcx,DWORD PTR [rax+0x3c]
   14000d644:	add    rcx,rax
   14000d647:	xor    eax,eax
   14000d649:	cmp    DWORD PTR [rcx],0x4550
   14000d64f:	jne    0x14000d65d
   14000d651:	mov    edx,0x20b
   14000d656:	cmp    WORD PTR [rcx+0x18],dx
   14000d65a:	sete   al
   14000d65d:	repz ret 
   14000d65f:	int3   
   14000d660:	movsxd r8,DWORD PTR [rcx+0x3c]
   14000d664:	xor    r9d,r9d
   14000d667:	mov    r10,rdx
   14000d66a:	add    r8,rcx
   14000d66d:	movzx  eax,WORD PTR [r8+0x14]
   14000d672:	movzx  r11d,WORD PTR [r8+0x6]
   14000d677:	lea    rcx,[rax+r8*1+0x18]
   14000d67c:	test   r11d,r11d
   14000d67f:	je     0x14000d69f
   14000d681:	mov    edx,DWORD PTR [rcx+0xc]
   14000d684:	cmp    r10,rdx
   14000d687:	jb     0x14000d693
   14000d689:	mov    eax,DWORD PTR [rcx+0x8]
   14000d68c:	add    eax,edx
   14000d68e:	cmp    r10,rax
   14000d691:	jb     0x14000d6a2
   14000d693:	inc    r9d
   14000d696:	add    rcx,0x28
   14000d69a:	cmp    r9d,r11d
   14000d69d:	jb     0x14000d681
   14000d69f:	xor    eax,eax
   14000d6a1:	ret    
   14000d6a2:	mov    rax,rcx
   14000d6a5:	ret    
   14000d6a6:	int3   
   14000d6a7:	int3   
   14000d6a8:	int3   
   14000d6a9:	int3   
   14000d6aa:	int3   
   14000d6ab:	int3   
   14000d6ac:	int3   
   14000d6ad:	int3   
   14000d6ae:	int3   
   14000d6af:	int3   
   14000d6b0:	sub    rsp,0x28
   14000d6b4:	mov    r8,rcx
   14000d6b7:	lea    r9,[rip+0xffffffffffff2942]        # 0x140000000
   14000d6be:	mov    rcx,r9
   14000d6c1:	call   0x14000d630
   14000d6c6:	test   eax,eax
   14000d6c8:	je     0x14000d6ec
   14000d6ca:	sub    r8,r9
   14000d6cd:	mov    rdx,r8
   14000d6d0:	mov    rcx,r9
   14000d6d3:	call   0x14000d660
   14000d6d8:	test   rax,rax
   14000d6db:	je     0x14000d6ec
   14000d6dd:	mov    eax,DWORD PTR [rax+0x24]
   14000d6e0:	shr    eax,0x1f
   14000d6e3:	not    eax
   14000d6e5:	and    eax,0x1
   14000d6e8:	jmp    0x14000d6ec
   14000d6ea:	xor    eax,eax
   14000d6ec:	add    rsp,0x28
   14000d6f0:	ret    
   14000d6f1:	int3   
   14000d6f2:	int3   
   14000d6f3:	int3   
   14000d6f4:	mov    r11,rsp
   14000d6f7:	mov    QWORD PTR [r11+0x8],rbx
   14000d6fb:	mov    QWORD PTR [r11+0x18],rbp
   14000d6ff:	mov    QWORD PTR [r11+0x20],rsi
   14000d703:	mov    QWORD PTR [r11+0x10],rdx
   14000d707:	push   rdi
   14000d708:	push   r12
   14000d70a:	push   r13
   14000d70c:	push   r14
   14000d70e:	push   r15
   14000d710:	sub    rsp,0x40
   14000d714:	mov    r15,QWORD PTR [r9+0x8]
   14000d718:	mov    r14,QWORD PTR [r9]
   14000d71b:	mov    eax,DWORD PTR [rcx+0x4]
   14000d71e:	mov    rdi,QWORD PTR [r9+0x38]
   14000d722:	sub    r14,r15
   14000d725:	mov    r12,r9
   14000d728:	mov    r13,rdx
   14000d72b:	mov    rbp,rcx
   14000d72e:	test   al,0x66
   14000d730:	jne    0x14000d823
   14000d736:	movsxd rsi,DWORD PTR [r9+0x48]
   14000d73a:	mov    QWORD PTR [r11-0x38],rcx
   14000d73e:	mov    QWORD PTR [r11-0x30],r8
   14000d742:	mov    rax,rsi
   14000d745:	cmp    esi,DWORD PTR [rdi]
   14000d747:	jae    0x14000d8ce
   14000d74d:	add    rax,rax
   14000d750:	lea    rbx,[rdi+rax*8+0xc]
   14000d755:	mov    eax,DWORD PTR [rbx-0x8]
   14000d758:	cmp    r14,rax
   14000d75b:	jb     0x14000d809
   14000d761:	mov    eax,DWORD PTR [rbx-0x4]
   14000d764:	cmp    r14,rax
   14000d767:	jae    0x14000d809
   14000d76d:	cmp    DWORD PTR [rbx+0x4],0x0
   14000d771:	je     0x14000d809
   14000d777:	cmp    DWORD PTR [rbx],0x1
   14000d77a:	je     0x14000d795
   14000d77c:	mov    eax,DWORD PTR [rbx]
   14000d77e:	lea    rcx,[rsp+0x30]
   14000d783:	mov    rdx,r13
   14000d786:	add    rax,r15
   14000d789:	call   rax
   14000d78b:	test   eax,eax
   14000d78d:	js     0x14000d81c
   14000d793:	jle    0x14000d809
   14000d795:	cmp    DWORD PTR [rbp+0x0],0xe06d7363
   14000d79c:	jne    0x14000d7c6
   14000d79e:	cmp    QWORD PTR [rip+0x184da],0x0        # 0x140025c80
   14000d7a6:	je     0x14000d7c6
   14000d7a8:	lea    rcx,[rip+0x184d1]        # 0x140025c80
   14000d7af:	call   0x14000d6b0
   14000d7b4:	test   eax,eax
   14000d7b6:	je     0x14000d7c6
   14000d7b8:	mov    edx,0x1
   14000d7bd:	mov    rcx,rbp
   14000d7c0:	call   QWORD PTR [rip+0x184ba]        # 0x140025c80
   14000d7c6:	mov    ecx,DWORD PTR [rbx+0x4]
   14000d7c9:	mov    r8d,0x1
   14000d7cf:	mov    rdx,r13
   14000d7d2:	add    rcx,r15
   14000d7d5:	call   0x1400114c0
   14000d7da:	mov    rax,QWORD PTR [r12+0x40]
   14000d7df:	mov    edx,DWORD PTR [rbx+0x4]
   14000d7e2:	movsxd r9,DWORD PTR [rbp+0x0]
   14000d7e6:	mov    QWORD PTR [rsp+0x28],rax
   14000d7eb:	mov    rax,QWORD PTR [r12+0x28]
   14000d7f0:	add    rdx,r15
   14000d7f3:	mov    r8,rbp
   14000d7f6:	mov    rcx,r13
   14000d7f9:	mov    QWORD PTR [rsp+0x20],rax
   14000d7fe:	call   QWORD PTR [rip+0xc9dc]        # 0x14001a1e0
   14000d804:	call   0x1400114f0
   14000d809:	inc    esi
   14000d80b:	add    rbx,0x10
   14000d80f:	cmp    esi,DWORD PTR [rdi]
   14000d811:	jae    0x14000d8ce
   14000d817:	jmp    0x14000d755
   14000d81c:	xor    eax,eax
   14000d81e:	jmp    0x14000d8d3
   14000d823:	mov    r8,QWORD PTR [r9+0x20]
   14000d827:	xor    ebp,ebp
   14000d829:	xor    r13d,r13d
   14000d82c:	sub    r8,r15
   14000d82f:	test   al,0x20
   14000d831:	je     0x14000d86e
   14000d833:	xor    edx,edx
   14000d835:	cmp    DWORD PTR [rdi],edx
   14000d837:	jbe    0x14000d86e
   14000d839:	lea    rcx,[rdi+0x8]
   14000d83d:	mov    eax,DWORD PTR [rcx-0x4]
   14000d840:	cmp    r8,rax
   14000d843:	jb     0x14000d84c
   14000d845:	mov    eax,DWORD PTR [rcx]
   14000d847:	cmp    r8,rax
   14000d84a:	jbe    0x14000d858
   14000d84c:	inc    edx
   14000d84e:	add    rcx,0x10
   14000d852:	cmp    edx,DWORD PTR [rdi]
   14000d854:	jae    0x14000d86e
   14000d856:	jmp    0x14000d83d
   14000d858:	mov    eax,edx
   14000d85a:	add    rax,rax
   14000d85d:	mov    ecx,DWORD PTR [rdi+rax*8+0x10]
   14000d861:	test   ecx,ecx
   14000d863:	jne    0x14000d86b
   14000d865:	mov    ebp,DWORD PTR [rdi+rax*8+0xc]
   14000d869:	jmp    0x14000d86e
   14000d86b:	mov    r13d,ecx
   14000d86e:	movsxd rsi,DWORD PTR [r9+0x48]
   14000d872:	mov    rbx,rsi
   14000d875:	cmp    esi,DWORD PTR [rdi]
   14000d877:	jae    0x14000d8ce
   14000d879:	inc    rbx
   14000d87c:	shl    rbx,0x4
   14000d880:	add    rbx,rdi
   14000d883:	mov    eax,DWORD PTR [rbx-0xc]
   14000d886:	cmp    r14,rax
   14000d889:	jb     0x14000d8c4
   14000d88b:	mov    eax,DWORD PTR [rbx-0x8]
   14000d88e:	cmp    r14,rax
   14000d891:	jae    0x14000d8c4
   14000d893:	test   r13d,r13d
   14000d896:	je     0x14000d89d
   14000d898:	cmp    r13d,DWORD PTR [rbx]
   14000d89b:	je     0x14000d8ce
   14000d89d:	test   ebp,ebp
   14000d89f:	je     0x14000d8a6
   14000d8a1:	cmp    ebp,DWORD PTR [rbx-0x4]
   14000d8a4:	je     0x14000d8ce
   14000d8a6:	cmp    DWORD PTR [rbx],0x0
   14000d8a9:	jne    0x14000d8c4
   14000d8ab:	mov    rdx,QWORD PTR [rsp+0x78]
   14000d8b0:	lea    eax,[rsi+0x1]
   14000d8b3:	mov    cl,0x1
   14000d8b5:	mov    DWORD PTR [r12+0x48],eax
   14000d8ba:	mov    r8d,DWORD PTR [rbx-0x4]
   14000d8be:	add    r8,r15
   14000d8c1:	call   r8
   14000d8c4:	inc    esi
   14000d8c6:	add    rbx,0x10
   14000d8ca:	cmp    esi,DWORD PTR [rdi]
   14000d8cc:	jb     0x14000d883
   14000d8ce:	mov    eax,0x1
   14000d8d3:	lea    r11,[rsp+0x40]
   14000d8d8:	mov    rbx,QWORD PTR [r11+0x30]
   14000d8dc:	mov    rbp,QWORD PTR [r11+0x40]
   14000d8e0:	mov    rsi,QWORD PTR [r11+0x48]
   14000d8e4:	mov    rsp,r11
   14000d8e7:	pop    r15
   14000d8e9:	pop    r14
   14000d8eb:	pop    r13
   14000d8ed:	pop    r12
   14000d8ef:	pop    rdi
   14000d8f0:	ret    
   14000d8f1:	int3   
   14000d8f2:	int3   
   14000d8f3:	int3   
   14000d8f4:	lea    r8,[rip+0x11a65]        # 0x14001f360
   14000d8fb:	xor    eax,eax
   14000d8fd:	mov    rdx,r8
   14000d900:	cmp    ecx,DWORD PTR [rdx]
   14000d902:	je     0x14000d912
   14000d904:	inc    eax
   14000d906:	add    rdx,0x10
   14000d90a:	cmp    eax,0x16
   14000d90d:	jb     0x14000d900
   14000d90f:	xor    eax,eax
   14000d911:	ret    
   14000d912:	cdqe   
   14000d914:	add    rax,rax
   14000d917:	mov    rax,QWORD PTR [r8+rax*8+0x8]
   14000d91c:	ret    
   14000d91d:	int3   
   14000d91e:	int3   
   14000d91f:	int3   
   14000d920:	mov    QWORD PTR [rsp+0x10],rbx
   14000d925:	mov    QWORD PTR [rsp+0x18],rbp
   14000d92a:	mov    QWORD PTR [rsp+0x20],rsi
   14000d92f:	push   rdi
   14000d930:	push   r12
   14000d932:	push   r13
   14000d934:	sub    rsp,0x250
   14000d93b:	mov    rax,QWORD PTR [rip+0x1577e]        # 0x1400230c0
   14000d942:	xor    rax,rsp
   14000d945:	mov    QWORD PTR [rsp+0x240],rax
   14000d94d:	mov    edi,ecx
   14000d94f:	call   0x14000d8f4
   14000d954:	xor    esi,esi
   14000d956:	mov    rbx,rax
   14000d959:	test   rax,rax
   14000d95c:	je     0x14000db50
   14000d962:	lea    ecx,[rsi+0x3]
   14000d965:	call   0x1400151e8
   14000d96a:	cmp    eax,0x1
   14000d96d:	je     0x14000dae8
   14000d973:	lea    ecx,[rsi+0x3]
   14000d976:	call   0x1400151e8
   14000d97b:	test   eax,eax
   14000d97d:	jne    0x14000d98c
   14000d97f:	cmp    DWORD PTR [rip+0x15732],0x1        # 0x1400230b8
   14000d986:	je     0x14000dae8
   14000d98c:	cmp    edi,0xfc
   14000d992:	je     0x14000db50
   14000d998:	lea    rbp,[rip+0x172e1]        # 0x140024c80
   14000d99f:	mov    r12d,0x314
   14000d9a5:	lea    r8,[rip+0x11ba4]        # 0x14001f550
   14000d9ac:	mov    rcx,rbp
   14000d9af:	mov    edx,r12d
   14000d9b2:	call   0x14001517c
   14000d9b7:	xor    ecx,ecx
   14000d9b9:	test   eax,eax
   14000d9bb:	jne    0x14000dad5
   14000d9c1:	lea    r13,[rip+0x172ea]        # 0x140024cb2
   14000d9c8:	mov    r8d,0x104
   14000d9ce:	mov    WORD PTR [rip+0x174e5],si        # 0x140024eba
   14000d9d5:	mov    rdx,r13
   14000d9d8:	call   QWORD PTR [rip+0xc81a]        # 0x14001a1f8
   14000d9de:	lea    edi,[r12-0x19]
   14000d9e3:	test   eax,eax
   14000d9e5:	jne    0x14000da11
   14000d9e7:	lea    r8,[rip+0x11b32]        # 0x14001f520
   14000d9ee:	mov    edx,edi
   14000d9f0:	mov    rcx,r13
   14000d9f3:	call   0x14001517c
   14000d9f8:	test   eax,eax
   14000d9fa:	je     0x14000da11
   14000d9fc:	xor    r9d,r9d
   14000d9ff:	xor    r8d,r8d
   14000da02:	xor    edx,edx
   14000da04:	xor    ecx,ecx
   14000da06:	mov    QWORD PTR [rsp+0x20],rsi
   14000da0b:	call   0x14000cf78
   14000da10:	int3   
   14000da11:	mov    rcx,r13
   14000da14:	call   0x140013c34
   14000da19:	inc    rax
   14000da1c:	cmp    rax,0x3c
   14000da20:	jbe    0x14000da69
   14000da22:	mov    rcx,r13
   14000da25:	call   0x140013c34
   14000da2a:	lea    r8,[rip+0x11ae7]        # 0x14001f518
   14000da31:	mov    r9d,0x3
   14000da37:	lea    rcx,[rbp+rax*2-0x44]
   14000da3c:	mov    rax,rcx
   14000da3f:	sub    rax,r13
   14000da42:	sar    rax,1
   14000da45:	sub    rdi,rax
   14000da48:	mov    rdx,rdi
   14000da4b:	call   0x1400150ac
   14000da50:	test   eax,eax
   14000da52:	je     0x14000da69
   14000da54:	xor    r9d,r9d
   14000da57:	xor    r8d,r8d
   14000da5a:	xor    edx,edx
   14000da5c:	xor    ecx,ecx
   14000da5e:	mov    QWORD PTR [rsp+0x20],rsi
   14000da63:	call   0x14000cf78
   14000da68:	int3   
   14000da69:	lea    r8,[rip+0x11a9c]        # 0x14001f50c
   14000da70:	mov    rdx,r12
   14000da73:	mov    rcx,rbp
   14000da76:	call   0x140015024
   14000da7b:	test   eax,eax
   14000da7d:	jne    0x14000dac0
   14000da7f:	mov    r8,rbx
   14000da82:	mov    rdx,r12
   14000da85:	mov    rcx,rbp
   14000da88:	call   0x140015024
   14000da8d:	test   eax,eax
   14000da8f:	jne    0x14000daab
   14000da91:	lea    rdx,[rip+0x11a28]        # 0x14001f4c0
   14000da98:	mov    r8d,0x12010
   14000da9e:	mov    rcx,rbp
   14000daa1:	call   0x140014e1c
   14000daa6:	jmp    0x14000db50
   14000daab:	xor    r9d,r9d
   14000daae:	xor    r8d,r8d
   14000dab1:	xor    edx,edx
   14000dab3:	xor    ecx,ecx
   14000dab5:	mov    QWORD PTR [rsp+0x20],rsi
   14000daba:	call   0x14000cf78
   14000dabf:	int3   
   14000dac0:	xor    r9d,r9d
   14000dac3:	xor    r8d,r8d
   14000dac6:	xor    edx,edx
   14000dac8:	xor    ecx,ecx
   14000daca:	mov    QWORD PTR [rsp+0x20],rsi
   14000dacf:	call   0x14000cf78
   14000dad4:	int3   
   14000dad5:	xor    r9d,r9d
   14000dad8:	xor    r8d,r8d
   14000dadb:	xor    edx,edx
   14000dadd:	mov    QWORD PTR [rsp+0x20],rsi
   14000dae2:	call   0x14000cf78
   14000dae7:	int3   
   14000dae8:	mov    ecx,0xfffffff4
   14000daed:	call   QWORD PTR [rip+0xc6fd]        # 0x14001a1f0
   14000daf3:	mov    rdi,rax
   14000daf6:	test   rax,rax
   14000daf9:	je     0x14000db50
   14000dafb:	cmp    rax,0xffffffffffffffff
   14000daff:	je     0x14000db50
   14000db01:	mov    edx,esi
   14000db03:	lea    r8,[rsp+0x40]
   14000db08:	mov    cl,BYTE PTR [rbx]
   14000db0a:	mov    BYTE PTR [r8],cl
   14000db0d:	cmp    WORD PTR [rbx],si
   14000db10:	je     0x14000db23
   14000db12:	inc    edx
   14000db14:	inc    r8
   14000db17:	add    rbx,0x2
   14000db1b:	cmp    edx,0x1f4
   14000db21:	jb     0x14000db08
   14000db23:	lea    rcx,[rsp+0x40]
   14000db28:	mov    BYTE PTR [rsp+0x233],sil
   14000db30:	call   0x140009fa0
   14000db35:	lea    r9,[rsp+0x30]
   14000db3a:	lea    rdx,[rsp+0x40]
   14000db3f:	mov    rcx,rdi
   14000db42:	mov    r8,rax
   14000db45:	mov    QWORD PTR [rsp+0x20],rsi
   14000db4a:	call   QWORD PTR [rip+0xc698]        # 0x14001a1e8
   14000db50:	mov    rcx,QWORD PTR [rsp+0x240]
   14000db58:	xor    rcx,rsp
   14000db5b:	call   0x14000a820
   14000db60:	lea    r11,[rsp+0x250]
   14000db68:	mov    rbx,QWORD PTR [r11+0x28]
   14000db6c:	mov    rbp,QWORD PTR [r11+0x30]
   14000db70:	mov    rsi,QWORD PTR [r11+0x38]
   14000db74:	mov    rsp,r11
   14000db77:	pop    r13
   14000db79:	pop    r12
   14000db7b:	pop    rdi
   14000db7c:	ret    
   14000db7d:	int3   
   14000db7e:	int3   
   14000db7f:	int3   
   14000db80:	sub    rsp,0x28
   14000db84:	mov    ecx,0x3
   14000db89:	call   0x1400151e8
   14000db8e:	cmp    eax,0x1
   14000db91:	je     0x14000dbaa
   14000db93:	mov    ecx,0x3
   14000db98:	call   0x1400151e8
   14000db9d:	test   eax,eax
   14000db9f:	jne    0x14000dbbe
   14000dba1:	cmp    DWORD PTR [rip+0x15510],0x1        # 0x1400230b8
   14000dba8:	jne    0x14000dbbe
   14000dbaa:	mov    ecx,0xfc
   14000dbaf:	call   0x14000d920
   14000dbb4:	mov    ecx,0xff
   14000dbb9:	call   0x14000d920
   14000dbbe:	add    rsp,0x28
   14000dbc2:	ret    
   14000dbc3:	int3   
   14000dbc4:	mov    QWORD PTR [rsp+0x8],rbx
   14000dbc9:	mov    QWORD PTR [rsp+0x10],rdi
   14000dbce:	push   r12
   14000dbd0:	sub    rsp,0x20
   14000dbd4:	mov    rbx,rcx
   14000dbd7:	call   0x140010a7c
   14000dbdc:	mov    ecx,eax
   14000dbde:	call   0x140015228
   14000dbe3:	test   eax,eax
   14000dbe5:	je     0x14000dc82
   14000dbeb:	call   0x14000ab98
   14000dbf0:	add    rax,0x30
   14000dbf4:	cmp    rbx,rax
   14000dbf7:	jne    0x14000dbfd
   14000dbf9:	xor    eax,eax
   14000dbfb:	jmp    0x14000dc10
   14000dbfd:	call   0x14000ab98
   14000dc02:	add    rax,0x60
   14000dc06:	cmp    rbx,rax
   14000dc09:	jne    0x14000dc82
   14000dc0b:	mov    eax,0x1
   14000dc10:	inc    DWORD PTR [rip+0x16dde]        # 0x1400249f4
   14000dc16:	test   DWORD PTR [rbx+0x18],0x10c
   14000dc1d:	jne    0x14000dc82
   14000dc1f:	lea    r12,[rip+0x17682]        # 0x1400252a8
   14000dc26:	movsxd rdi,eax
   14000dc29:	cmp    QWORD PTR [r12+rdi*8],0x0
   14000dc2e:	jne    0x14000dc5b
   14000dc30:	mov    ecx,0x1000
   14000dc35:	call   0x140010aa4
   14000dc3a:	mov    QWORD PTR [r12+rdi*8],rax
   14000dc3e:	test   rax,rax
   14000dc41:	jne    0x14000dc5b
   14000dc43:	lea    rax,[rbx+0x20]
   14000dc47:	mov    QWORD PTR [rbx+0x10],rax
   14000dc4b:	mov    QWORD PTR [rbx],rax
   14000dc4e:	mov    eax,0x2
   14000dc53:	mov    DWORD PTR [rbx+0x24],eax
   14000dc56:	mov    DWORD PTR [rbx+0x8],eax
   14000dc59:	jmp    0x14000dc74
   14000dc5b:	mov    rcx,QWORD PTR [r12+rdi*8]
   14000dc5f:	mov    DWORD PTR [rbx+0x24],0x1000
   14000dc66:	mov    DWORD PTR [rbx+0x8],0x1000
   14000dc6d:	mov    QWORD PTR [rbx+0x10],rcx
   14000dc71:	mov    QWORD PTR [rbx],rcx
   14000dc74:	or     DWORD PTR [rbx+0x18],0x1102
   14000dc7b:	mov    eax,0x1
   14000dc80:	jmp    0x14000dc84
   14000dc82:	xor    eax,eax
   14000dc84:	mov    rbx,QWORD PTR [rsp+0x30]
   14000dc89:	mov    rdi,QWORD PTR [rsp+0x38]
   14000dc8e:	add    rsp,0x20
   14000dc92:	pop    r12
   14000dc94:	ret    
   14000dc95:	int3   
   14000dc96:	int3   
   14000dc97:	int3   
   14000dc98:	test   ecx,ecx
   14000dc9a:	je     0x14000dcce
   14000dc9c:	push   rbx
   14000dc9d:	sub    rsp,0x20
   14000dca1:	test   DWORD PTR [rdx+0x18],0x1000
   14000dca8:	mov    rbx,rdx
   14000dcab:	je     0x14000dcc9
   14000dcad:	mov    rcx,rdx
   14000dcb0:	call   0x14000be48
   14000dcb5:	and    DWORD PTR [rbx+0x18],0xffffeeff
   14000dcbc:	and    DWORD PTR [rbx+0x24],0x0
   14000dcc0:	and    QWORD PTR [rbx],0x0
   14000dcc4:	and    QWORD PTR [rbx+0x10],0x0
   14000dcc9:	add    rsp,0x20
   14000dccd:	pop    rbx
   14000dcce:	ret    
   14000dccf:	int3   
   14000dcd0:	rex push rbx
   14000dcd2:	sub    rsp,0x20
   14000dcd6:	test   BYTE PTR [rdx+0x18],0x40
   14000dcda:	mov    rbx,r8
   14000dcdd:	je     0x14000dceb
   14000dcdf:	cmp    QWORD PTR [rdx+0x10],0x0
   14000dce4:	jne    0x14000dceb
   14000dce6:	inc    DWORD PTR [r8]
   14000dce9:	jmp    0x14000dd10
   14000dceb:	dec    DWORD PTR [rdx+0x8]
   14000dcee:	js     0x14000dcfd
   14000dcf0:	mov    rax,QWORD PTR [rdx]
   14000dcf3:	mov    BYTE PTR [rax],cl
   14000dcf5:	inc    QWORD PTR [rdx]
   14000dcf8:	movzx  eax,cl
   14000dcfb:	jmp    0x14000dd05
   14000dcfd:	movsx  ecx,cl
   14000dd00:	call   0x1400107a0
   14000dd05:	cmp    eax,0xffffffff
   14000dd08:	jne    0x14000dd0e
   14000dd0a:	or     DWORD PTR [rbx],eax
   14000dd0c:	jmp    0x14000dd10
   14000dd0e:	inc    DWORD PTR [rbx]
   14000dd10:	add    rsp,0x20
   14000dd14:	pop    rbx
   14000dd15:	ret    
   14000dd16:	int3   
   14000dd17:	int3   
   14000dd18:	test   edx,edx
   14000dd1a:	jle    0x14000dd68
   14000dd1c:	mov    QWORD PTR [rsp+0x8],rbx
   14000dd21:	mov    QWORD PTR [rsp+0x10],rbp
   14000dd26:	mov    QWORD PTR [rsp+0x18],rsi
   14000dd2b:	push   rdi
   14000dd2c:	sub    rsp,0x20
   14000dd30:	mov    rdi,r9
   14000dd33:	mov    rsi,r8
   14000dd36:	mov    ebx,edx
   14000dd38:	mov    bpl,cl
   14000dd3b:	mov    r8,rdi
   14000dd3e:	mov    rdx,rsi
   14000dd41:	mov    cl,bpl
   14000dd44:	dec    ebx
   14000dd46:	call   0x14000dcd0
   14000dd4b:	cmp    DWORD PTR [rdi],0xffffffff
   14000dd4e:	je     0x14000dd54
   14000dd50:	test   ebx,ebx
   14000dd52:	jg     0x14000dd3b
   14000dd54:	mov    rbx,QWORD PTR [rsp+0x30]
   14000dd59:	mov    rbp,QWORD PTR [rsp+0x38]
   14000dd5e:	mov    rsi,QWORD PTR [rsp+0x40]
   14000dd63:	add    rsp,0x20
   14000dd67:	pop    rdi
   14000dd68:	ret    
   14000dd69:	int3   
   14000dd6a:	int3   
   14000dd6b:	int3   
   14000dd6c:	mov    QWORD PTR [rsp+0x8],rbx
   14000dd71:	mov    QWORD PTR [rsp+0x10],rbp
   14000dd76:	mov    QWORD PTR [rsp+0x18],rsi
   14000dd7b:	push   rdi
   14000dd7c:	push   r12
   14000dd7e:	push   r13
   14000dd80:	sub    rsp,0x20
   14000dd84:	test   BYTE PTR [r8+0x18],0x40
   14000dd89:	mov    rbx,QWORD PTR [rsp+0x60]
   14000dd8e:	mov    rdi,r9
   14000dd91:	mov    r12d,DWORD PTR [rbx]
   14000dd94:	mov    rbp,r8
   14000dd97:	mov    esi,edx
   14000dd99:	mov    r13,rcx
   14000dd9c:	je     0x14000ddaa
   14000dd9e:	cmp    QWORD PTR [r8+0x10],0x0
   14000dda3:	jne    0x14000ddaa
   14000dda5:	add    DWORD PTR [r9],edx
   14000dda8:	jmp    0x14000dde8
   14000ddaa:	and    DWORD PTR [rbx],0x0
   14000ddad:	test   edx,edx
   14000ddaf:	jle    0x14000dde5
   14000ddb1:	mov    cl,BYTE PTR [r13+0x0]
   14000ddb5:	mov    r8,rdi
   14000ddb8:	mov    rdx,rbp
   14000ddbb:	dec    esi
   14000ddbd:	call   0x14000dcd0
   14000ddc2:	inc    r13
   14000ddc5:	cmp    DWORD PTR [rdi],0xffffffff
   14000ddc8:	jne    0x14000dddc
   14000ddca:	cmp    DWORD PTR [rbx],0x2a
   14000ddcd:	jne    0x14000dde0
   14000ddcf:	mov    r8,rdi
   14000ddd2:	mov    rdx,rbp
   14000ddd5:	mov    cl,0x3f
   14000ddd7:	call   0x14000dcd0
   14000dddc:	test   esi,esi
   14000ddde:	jg     0x14000ddb1
   14000dde0:	cmp    DWORD PTR [rbx],0x0
   14000dde3:	jne    0x14000dde8
   14000dde5:	mov    DWORD PTR [rbx],r12d
   14000dde8:	mov    rbx,QWORD PTR [rsp+0x40]
   14000dded:	mov    rbp,QWORD PTR [rsp+0x48]
   14000ddf2:	mov    rsi,QWORD PTR [rsp+0x50]
   14000ddf7:	add    rsp,0x20
   14000ddfb:	pop    r13
   14000ddfd:	pop    r12
   14000ddff:	pop    rdi
   14000de00:	ret    
   14000de01:	int3   
   14000de02:	int3   
   14000de03:	int3   
   14000de04:	mov    QWORD PTR [rsp+0x18],rbx
   14000de09:	push   rbp
   14000de0a:	push   rsi
   14000de0b:	push   rdi
   14000de0c:	push   r12
   14000de0e:	push   r13
   14000de10:	push   r14
   14000de12:	push   r15
   14000de14:	lea    rbp,[rsp-0x1d0]
   14000de1c:	sub    rsp,0x2d0
   14000de23:	mov    rax,QWORD PTR [rip+0x15296]        # 0x1400230c0
   14000de2a:	xor    rax,rsp
   14000de2d:	mov    QWORD PTR [rbp+0x1c8],rax
   14000de34:	xor    eax,eax
   14000de36:	mov    rbx,rcx
   14000de39:	mov    QWORD PTR [rsp+0x70],rcx
   14000de3e:	mov    QWORD PTR [rsp+0x68],rdx
   14000de43:	lea    rcx,[rbp-0x80]
   14000de47:	mov    rdx,r8
   14000de4a:	mov    r14,r9
   14000de4d:	mov    DWORD PTR [rsp+0x64],eax
   14000de51:	mov    r13d,eax
   14000de54:	mov    DWORD PTR [rsp+0x58],eax
   14000de58:	mov    edi,eax
   14000de5a:	mov    DWORD PTR [rsp+0x44],eax
   14000de5e:	mov    DWORD PTR [rsp+0x4c],eax
   14000de62:	mov    DWORD PTR [rsp+0x5c],eax
   14000de66:	mov    DWORD PTR [rsp+0x54],eax
   14000de6a:	call   0x14000c6f4
   14000de6f:	call   0x14000bdc0
   14000de74:	xor    r10d,r10d
   14000de77:	mov    QWORD PTR [rbp-0x60],rax
   14000de7b:	test   rbx,rbx
   14000de7e:	jne    0x14000deac
   14000de80:	call   0x14000bdc0
   14000de85:	mov    DWORD PTR [rax],0x16
   14000de8b:	call   0x14000d01c
   14000de90:	xor    r11d,r11d
   14000de93:	cmp    BYTE PTR [rbp-0x68],r11b
   14000de97:	je     0x14000dea4
   14000de99:	mov    rax,QWORD PTR [rbp-0x70]
   14000de9d:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000dea4:	or     eax,0xffffffff
   14000dea7:	jmp    0x14000e666
   14000deac:	or     r15d,0xffffffff
   14000deb0:	test   BYTE PTR [rbx+0x18],0x40
   14000deb4:	lea    r9,[rip+0xffffffffffff2145]        # 0x140000000
   14000debb:	jne    0x14000df66
   14000dec1:	mov    rcx,rbx
   14000dec4:	call   0x140010a7c
   14000dec9:	lea    rdx,[rip+0x159e0]        # 0x1400238b0
   14000ded0:	cmp    eax,r15d
   14000ded3:	je     0x14000defd
   14000ded5:	cmp    eax,0xfffffffe
   14000ded8:	je     0x14000defd
   14000deda:	movsxd r8,eax
   14000dedd:	lea    r9,[rip+0xffffffffffff211c]        # 0x140000000
   14000dee4:	mov    rcx,r8
   14000dee7:	and    r8d,0x1f
   14000deeb:	sar    rcx,0x5
   14000deef:	imul   r8,r8,0x58
   14000def3:	add    r8,QWORD PTR [r9+rcx*8+0x25a80]
   14000defb:	jmp    0x14000df07
   14000defd:	mov    r8,rdx
   14000df00:	lea    r9,[rip+0xffffffffffff20f9]        # 0x140000000
   14000df07:	test   BYTE PTR [r8+0x38],0x7f
   14000df0c:	jne    0x14000df37
   14000df0e:	cmp    eax,r15d
   14000df11:	je     0x14000df31
   14000df13:	cmp    eax,0xfffffffe
   14000df16:	je     0x14000df31
   14000df18:	movsxd rdx,eax
   14000df1b:	mov    rax,rdx
   14000df1e:	and    edx,0x1f
   14000df21:	sar    rax,0x5
   14000df25:	imul   rdx,rdx,0x58
   14000df29:	add    rdx,QWORD PTR [r9+rax*8+0x25a80]
   14000df31:	test   BYTE PTR [rdx+0x38],0x80
   14000df35:	je     0x14000df63
   14000df37:	call   0x14000bdc0
   14000df3c:	mov    DWORD PTR [rax],0x16
   14000df42:	call   0x14000d01c
   14000df47:	xor    r11d,r11d
   14000df4a:	cmp    BYTE PTR [rbp-0x68],r11b
   14000df4e:	je     0x14000df5b
   14000df50:	mov    rax,QWORD PTR [rbp-0x70]
   14000df54:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000df5b:	mov    eax,r15d
   14000df5e:	jmp    0x14000e666
   14000df63:	xor    r10d,r10d
   14000df66:	mov    r8,QWORD PTR [rsp+0x68]
   14000df6b:	test   r8,r8
   14000df6e:	je     0x14000df37
   14000df70:	mov    r12b,BYTE PTR [r8]
   14000df73:	mov    esi,r10d
   14000df76:	mov    DWORD PTR [rsp+0x40],r10d
   14000df7b:	mov    DWORD PTR [rsp+0x48],r10d
   14000df80:	mov    edx,r10d
   14000df83:	mov    QWORD PTR [rbp-0x50],r10
   14000df87:	test   r12b,r12b
   14000df8a:	je     0x14000e653
   14000df90:	mov    rbx,QWORD PTR [rbp-0x48]
   14000df94:	mov    r11d,0x200
   14000df9a:	inc    r8
   14000df9d:	mov    QWORD PTR [rsp+0x68],r8
   14000dfa2:	test   esi,esi
   14000dfa4:	js     0x14000e653
   14000dfaa:	lea    eax,[r12-0x20]
   14000dfaf:	cmp    al,0x58
   14000dfb1:	ja     0x14000dfc5
   14000dfb3:	movsx  rax,r12b
   14000dfb7:	movsx  ecx,BYTE PTR [rax+r9*1+0x1f580]
   14000dfc0:	and    ecx,0xf
   14000dfc3:	jmp    0x14000dfc8
   14000dfc5:	mov    ecx,r10d
   14000dfc8:	movsxd rax,edx
   14000dfcb:	movsxd rcx,ecx
   14000dfce:	lea    rdx,[rax+rcx*8]
   14000dfd2:	movsx  edx,BYTE PTR [rdx+r9*1+0x1f5a0]
   14000dfdb:	sar    edx,0x4
   14000dfde:	mov    DWORD PTR [rsp+0x60],edx
   14000dfe2:	mov    ecx,edx
   14000dfe4:	test   edx,edx
   14000dfe6:	je     0x14000e73d
   14000dfec:	dec    ecx
   14000dfee:	je     0x14000e86e
   14000dff4:	dec    ecx
   14000dff6:	je     0x14000e81e
   14000dffc:	dec    ecx
   14000dffe:	je     0x14000e7e5
   14000e004:	dec    ecx
   14000e006:	je     0x14000e7d8
   14000e00c:	dec    ecx
   14000e00e:	je     0x14000e79e
   14000e014:	dec    ecx
   14000e016:	je     0x14000e690
   14000e01c:	dec    ecx
   14000e01e:	jne    0x14000e647
   14000e024:	movsx  eax,r12b
   14000e028:	cmp    eax,0x64
   14000e02b:	jg     0x14000e1a4
   14000e031:	je     0x14000e2a5
   14000e037:	cmp    eax,0x41
   14000e03a:	je     0x14000e178
   14000e040:	cmp    eax,0x43
   14000e043:	je     0x14000e11e
   14000e049:	cmp    eax,0x45
   14000e04c:	je     0x14000e178
   14000e052:	cmp    eax,0x47
   14000e055:	je     0x14000e178
   14000e05b:	cmp    eax,0x53
   14000e05e:	je     0x14000e0d4
   14000e060:	cmp    eax,0x58
   14000e063:	je     0x14000e23f
   14000e069:	cmp    eax,0x5a
   14000e06c:	je     0x14000e085
   14000e06e:	cmp    eax,0x61
   14000e071:	je     0x14000e184
   14000e077:	cmp    eax,0x63
   14000e07a:	je     0x14000e12c
   14000e080:	jmp    0x14000e4b0
   14000e085:	mov    rax,QWORD PTR [r14]
   14000e088:	add    r14,0x8
   14000e08c:	test   rax,rax
   14000e08f:	je     0x14000e0c0
   14000e091:	mov    rbx,QWORD PTR [rax+0x8]
   14000e095:	test   rbx,rbx
   14000e098:	je     0x14000e0c0
   14000e09a:	movsx  eax,WORD PTR [rax]
   14000e09d:	bt     r13d,0xb
   14000e0a2:	jae    0x14000e0b6
   14000e0a4:	cdq    
   14000e0a5:	mov    DWORD PTR [rsp+0x54],0x1
   14000e0ad:	sub    eax,edx
   14000e0af:	sar    eax,1
   14000e0b1:	jmp    0x14000e4ac
   14000e0b6:	mov    DWORD PTR [rsp+0x54],r10d
   14000e0bb:	jmp    0x14000e4ac
   14000e0c0:	mov    rbx,QWORD PTR [rip+0x157d9]        # 0x1400238a0
   14000e0c7:	mov    rcx,rbx
   14000e0ca:	call   0x140009fa0
   14000e0cf:	jmp    0x14000e4a9
   14000e0d4:	test   r13d,0x830
   14000e0db:	jne    0x14000e0e2
   14000e0dd:	bts    r13d,0xb
   14000e0e2:	mov    rbx,QWORD PTR [r14]
   14000e0e5:	cmp    edi,r15d
   14000e0e8:	mov    eax,edi
   14000e0ea:	mov    ecx,0x7fffffff
   14000e0ef:	cmove  eax,ecx
   14000e0f2:	add    r14,0x8
   14000e0f6:	test   r13d,0x810
   14000e0fd:	je     0x14000e20c
   14000e103:	test   rbx,rbx
   14000e106:	mov    DWORD PTR [rsp+0x54],0x1
   14000e10e:	cmove  rbx,QWORD PTR [rip+0x15792]        # 0x1400238a8
   14000e116:	mov    rcx,rbx
   14000e119:	jmp    0x14000e200
   14000e11e:	test   r13d,0x830
   14000e125:	jne    0x14000e12c
   14000e127:	bts    r13d,0xb
   14000e12c:	add    r14,0x8
   14000e130:	test   r13d,0x810
   14000e137:	je     0x14000e160
   14000e139:	movzx  r9d,WORD PTR [r14-0x8]
   14000e13e:	lea    rdx,[rbp-0x40]
   14000e142:	lea    rcx,[rsp+0x48]
   14000e147:	mov    r8,r11
   14000e14a:	call   0x1400154dc
   14000e14f:	xor    r10d,r10d
   14000e152:	test   eax,eax
   14000e154:	je     0x14000e16f
   14000e156:	mov    DWORD PTR [rsp+0x5c],0x1
   14000e15e:	jmp    0x14000e16f
   14000e160:	mov    al,BYTE PTR [r14-0x8]
   14000e164:	mov    DWORD PTR [rsp+0x48],0x1
   14000e16c:	mov    BYTE PTR [rbp-0x40],al
   14000e16f:	lea    rbx,[rbp-0x40]
   14000e173:	jmp    0x14000e4b0
   14000e178:	mov    DWORD PTR [rsp+0x78],0x1
   14000e180:	add    r12b,0x20
   14000e184:	or     r13d,0x40
   14000e188:	lea    rbx,[rbp-0x40]
   14000e18c:	mov    esi,r11d
   14000e18f:	test   edi,edi
   14000e191:	jns    0x14000e3b5
   14000e197:	mov    DWORD PTR [rsp+0x44],0x6
   14000e19f:	jmp    0x14000e400
   14000e1a4:	cmp    eax,0x65
   14000e1a7:	jl     0x14000e4b0
   14000e1ad:	cmp    eax,0x67
   14000e1b0:	jle    0x14000e184
   14000e1b2:	cmp    eax,0x69
   14000e1b5:	je     0x14000e2a5
   14000e1bb:	cmp    eax,0x6e
   14000e1be:	je     0x14000e274
   14000e1c4:	cmp    eax,0x6f
   14000e1c7:	je     0x14000e264
   14000e1cd:	cmp    eax,0x70
   14000e1d0:	je     0x14000e235
   14000e1d2:	cmp    eax,0x73
   14000e1d5:	je     0x14000e0e2
   14000e1db:	cmp    eax,0x75
   14000e1de:	je     0x14000e2a9
   14000e1e4:	cmp    eax,0x78
   14000e1e7:	jne    0x14000e4b0
   14000e1ed:	mov    eax,0x27
   14000e1f2:	jmp    0x14000e244
   14000e1f4:	dec    eax
   14000e1f6:	cmp    WORD PTR [rcx],r10w
   14000e1fa:	je     0x14000e204
   14000e1fc:	add    rcx,0x2
   14000e200:	test   eax,eax
   14000e202:	jne    0x14000e1f4
   14000e204:	sub    rcx,rbx
   14000e207:	sar    rcx,1
   14000e20a:	jmp    0x14000e22c
   14000e20c:	test   rbx,rbx
   14000e20f:	cmove  rbx,QWORD PTR [rip+0x15689]        # 0x1400238a0
   14000e217:	mov    rcx,rbx
   14000e21a:	jmp    0x14000e226
   14000e21c:	dec    eax
   14000e21e:	cmp    BYTE PTR [rcx],r10b
   14000e221:	je     0x14000e22a
   14000e223:	inc    rcx
   14000e226:	test   eax,eax
   14000e228:	jne    0x14000e21c
   14000e22a:	sub    ecx,ebx
   14000e22c:	mov    DWORD PTR [rsp+0x48],ecx
   14000e230:	jmp    0x14000e4b0
   14000e235:	mov    edi,0x10
   14000e23a:	bts    r13d,0xf
   14000e23f:	mov    eax,0x7
   14000e244:	mov    DWORD PTR [rsp+0x64],eax
   14000e248:	mov    r9d,0x10
   14000e24e:	test   r13b,r13b
   14000e251:	jns    0x14000e2af
   14000e253:	add    al,0x51
   14000e255:	mov    BYTE PTR [rsp+0x50],0x30
   14000e25a:	lea    edx,[r9-0xe]
   14000e25e:	mov    BYTE PTR [rsp+0x51],al
   14000e262:	jmp    0x14000e2b3
   14000e264:	mov    r9d,0x8
   14000e26a:	test   r13b,r13b
   14000e26d:	jns    0x14000e2af
   14000e26f:	or     r13d,r11d
   14000e272:	jmp    0x14000e2af
   14000e274:	mov    rdi,QWORD PTR [r14]
   14000e277:	add    r14,0x8
   14000e27b:	call   0x140009cd8
   14000e280:	xor    r10d,r10d
   14000e283:	test   eax,eax
   14000e285:	je     0x14000df37
   14000e28b:	test   r13b,0x20
   14000e28f:	je     0x14000e296
   14000e291:	mov    WORD PTR [rdi],si
   14000e294:	jmp    0x14000e298
   14000e296:	mov    DWORD PTR [rdi],esi
   14000e298:	mov    DWORD PTR [rsp+0x5c],0x1
   14000e2a0:	jmp    0x14000e615
   14000e2a5:	or     r13d,0x40
   14000e2a9:	mov    r9d,0xa
   14000e2af:	mov    edx,DWORD PTR [rsp+0x4c]
   14000e2b3:	mov    eax,0x8000
   14000e2b8:	test   eax,r13d
   14000e2bb:	jne    0x14000e2c4
   14000e2bd:	bt     r13d,0xc
   14000e2c2:	jae    0x14000e2cd
   14000e2c4:	mov    r8,QWORD PTR [r14]
   14000e2c7:	add    r14,0x8
   14000e2cb:	jmp    0x14000e2fb
   14000e2cd:	add    r14,0x8
   14000e2d1:	test   r13b,0x20
   14000e2d5:	je     0x14000e2eb
   14000e2d7:	test   r13b,0x40
   14000e2db:	je     0x14000e2e4
   14000e2dd:	movsx  r8,WORD PTR [r14-0x8]
   14000e2e2:	jmp    0x14000e2fb
   14000e2e4:	movzx  r8d,WORD PTR [r14-0x8]
   14000e2e9:	jmp    0x14000e2fb
   14000e2eb:	test   r13b,0x40
   14000e2ef:	je     0x14000e2f7
   14000e2f1:	movsxd r8,DWORD PTR [r14-0x8]
   14000e2f5:	jmp    0x14000e2fb
   14000e2f7:	mov    r8d,DWORD PTR [r14-0x8]
   14000e2fb:	test   r13b,0x40
   14000e2ff:	je     0x14000e30e
   14000e301:	test   r8,r8
   14000e304:	jns    0x14000e30e
   14000e306:	neg    r8
   14000e309:	bts    r13d,0x8
   14000e30e:	test   eax,r13d
   14000e311:	jne    0x14000e31d
   14000e313:	bt     r13d,0xc
   14000e318:	jb     0x14000e31d
   14000e31a:	mov    r8d,r8d
   14000e31d:	test   edi,edi
   14000e31f:	jns    0x14000e328
   14000e321:	mov    edi,0x1
   14000e326:	jmp    0x14000e333
   14000e328:	and    r13d,0xfffffff7
   14000e32c:	cmp    edi,r11d
   14000e32f:	cmovg  edi,r11d
   14000e333:	mov    esi,DWORD PTR [rsp+0x64]
   14000e337:	mov    rax,r8
   14000e33a:	lea    rbx,[rbp+0x1bf]
   14000e341:	neg    rax
   14000e344:	sbb    ecx,ecx
   14000e346:	and    ecx,edx
   14000e348:	mov    DWORD PTR [rsp+0x4c],ecx
   14000e34c:	mov    ecx,edi
   14000e34e:	dec    edi
   14000e350:	test   ecx,ecx
   14000e352:	jg     0x14000e359
   14000e354:	test   r8,r8
   14000e357:	je     0x14000e378
   14000e359:	xor    edx,edx
   14000e35b:	mov    rax,r8
   14000e35e:	movsxd rcx,r9d
   14000e361:	div    rcx
   14000e364:	mov    r8,rax
   14000e367:	lea    eax,[rdx+0x30]
   14000e36a:	cmp    eax,0x39
   14000e36d:	jle    0x14000e371
   14000e36f:	add    eax,esi
   14000e371:	mov    BYTE PTR [rbx],al
   14000e373:	dec    rbx
   14000e376:	jmp    0x14000e34c
   14000e378:	mov    esi,DWORD PTR [rsp+0x40]
   14000e37c:	lea    rax,[rbp+0x1bf]
   14000e383:	mov    DWORD PTR [rsp+0x44],edi
   14000e387:	sub    eax,ebx
   14000e389:	inc    rbx
   14000e38c:	mov    DWORD PTR [rsp+0x48],eax
   14000e390:	test   r11d,r13d
   14000e393:	je     0x14000e4b0
   14000e399:	test   eax,eax
   14000e39b:	je     0x14000e3a6
   14000e39d:	cmp    BYTE PTR [rbx],0x30
   14000e3a0:	je     0x14000e4b0
   14000e3a6:	dec    rbx
   14000e3a9:	inc    DWORD PTR [rsp+0x48]
   14000e3ad:	mov    BYTE PTR [rbx],0x30
   14000e3b0:	jmp    0x14000e4b0
   14000e3b5:	jne    0x14000e3c7
   14000e3b7:	cmp    r12b,0x67
   14000e3bb:	jne    0x14000e400
   14000e3bd:	mov    DWORD PTR [rsp+0x44],0x1
   14000e3c5:	jmp    0x14000e400
   14000e3c7:	cmp    edi,r11d
   14000e3ca:	cmovg  edi,r11d
   14000e3ce:	mov    DWORD PTR [rsp+0x44],edi
   14000e3d2:	cmp    edi,0xa3
   14000e3d8:	jle    0x14000e400
   14000e3da:	add    edi,0x15d
   14000e3e0:	movsxd rcx,edi
   14000e3e3:	call   0x140010aa4
   14000e3e8:	mov    QWORD PTR [rbp-0x50],rax
   14000e3ec:	test   rax,rax
   14000e3ef:	je     0x14000e3f8
   14000e3f1:	mov    rbx,rax
   14000e3f4:	mov    esi,edi
   14000e3f6:	jmp    0x14000e400
   14000e3f8:	mov    DWORD PTR [rsp+0x44],0xa3
   14000e400:	mov    rax,QWORD PTR [r14]
   14000e403:	mov    rcx,QWORD PTR [rip+0x15476]        # 0x140023880
   14000e40a:	add    r14,0x8
   14000e40e:	movsx  edi,r12b
   14000e412:	movsxd rsi,esi
   14000e415:	mov    QWORD PTR [rbp-0x48],rax
   14000e419:	call   QWORD PTR [rip+0xbcc1]        # 0x14001a0e0
   14000e41f:	lea    rcx,[rbp-0x80]
   14000e423:	mov    r9d,edi
   14000e426:	mov    QWORD PTR [rsp+0x30],rcx
   14000e42b:	mov    ecx,DWORD PTR [rsp+0x78]
   14000e42f:	mov    r8,rsi
   14000e432:	mov    DWORD PTR [rsp+0x28],ecx
   14000e436:	mov    ecx,DWORD PTR [rsp+0x44]
   14000e43a:	mov    rdx,rbx
   14000e43d:	mov    DWORD PTR [rsp+0x20],ecx
   14000e441:	lea    rcx,[rbp-0x48]
   14000e445:	call   rax
   14000e447:	mov    edi,r13d
   14000e44a:	and    edi,0x80
   14000e450:	je     0x14000e470
   14000e452:	xor    eax,eax
   14000e454:	cmp    DWORD PTR [rsp+0x44],eax
   14000e458:	jne    0x14000e470
   14000e45a:	mov    rcx,QWORD PTR [rip+0x15437]        # 0x140023898
   14000e461:	call   QWORD PTR [rip+0xbc79]        # 0x14001a0e0
   14000e467:	lea    rdx,[rbp-0x80]
   14000e46b:	mov    rcx,rbx
   14000e46e:	call   rax
   14000e470:	cmp    r12b,0x67
   14000e474:	jne    0x14000e490
   14000e476:	test   edi,edi
   14000e478:	jne    0x14000e490
   14000e47a:	mov    rcx,QWORD PTR [rip+0x1540f]        # 0x140023890
   14000e481:	call   QWORD PTR [rip+0xbc59]        # 0x14001a0e0
   14000e487:	lea    rdx,[rbp-0x80]
   14000e48b:	mov    rcx,rbx
   14000e48e:	call   rax
   14000e490:	cmp    BYTE PTR [rbx],0x2d
   14000e493:	jne    0x14000e49d
   14000e495:	bts    r13d,0x8
   14000e49a:	inc    rbx
   14000e49d:	mov    rcx,rbx
   14000e4a0:	call   0x140009fa0
   14000e4a5:	mov    esi,DWORD PTR [rsp+0x40]
   14000e4a9:	xor    r10d,r10d
   14000e4ac:	mov    DWORD PTR [rsp+0x48],eax
   14000e4b0:	cmp    DWORD PTR [rsp+0x5c],r10d
   14000e4b5:	jne    0x14000e615
   14000e4bb:	test   r13b,0x40
   14000e4bf:	je     0x14000e4f2
   14000e4c1:	bt     r13d,0x8
   14000e4c6:	jae    0x14000e4cf
   14000e4c8:	mov    BYTE PTR [rsp+0x50],0x2d
   14000e4cd:	jmp    0x14000e4da
   14000e4cf:	test   r13b,0x1
   14000e4d3:	je     0x14000e4e5
   14000e4d5:	mov    BYTE PTR [rsp+0x50],0x2b
   14000e4da:	mov    edi,0x1
   14000e4df:	mov    DWORD PTR [rsp+0x4c],edi
   14000e4e3:	jmp    0x14000e4f6
   14000e4e5:	test   r13b,0x2
   14000e4e9:	je     0x14000e4f2
   14000e4eb:	mov    BYTE PTR [rsp+0x50],0x20
   14000e4f0:	jmp    0x14000e4da
   14000e4f2:	mov    edi,DWORD PTR [rsp+0x4c]
   14000e4f6:	mov    r12d,DWORD PTR [rsp+0x58]
   14000e4fb:	mov    rsi,QWORD PTR [rsp+0x70]
   14000e500:	sub    r12d,DWORD PTR [rsp+0x48]
   14000e505:	sub    r12d,edi
   14000e508:	test   r13b,0xc
   14000e50c:	jne    0x14000e520
   14000e50e:	lea    r9,[rsp+0x40]
   14000e513:	mov    r8,rsi
   14000e516:	mov    edx,r12d
   14000e519:	mov    cl,0x20
   14000e51b:	call   0x14000dd18
   14000e520:	mov    rax,QWORD PTR [rbp-0x60]
   14000e524:	lea    r9,[rsp+0x40]
   14000e529:	lea    rcx,[rsp+0x50]
   14000e52e:	mov    r8,rsi
   14000e531:	mov    edx,edi
   14000e533:	mov    QWORD PTR [rsp+0x20],rax
   14000e538:	call   0x14000dd6c
   14000e53d:	test   r13b,0x8
   14000e541:	je     0x14000e55b
   14000e543:	test   r13b,0x4
   14000e547:	jne    0x14000e55b
   14000e549:	lea    r9,[rsp+0x40]
   14000e54e:	mov    r8,rsi
   14000e551:	mov    edx,r12d
   14000e554:	mov    cl,0x30
   14000e556:	call   0x14000dd18
   14000e55b:	mov    edi,DWORD PTR [rsp+0x48]
   14000e55f:	xor    eax,eax
   14000e561:	cmp    DWORD PTR [rsp+0x54],eax
   14000e565:	je     0x14000e5ce
   14000e567:	test   edi,edi
   14000e569:	jle    0x14000e5ce
   14000e56b:	mov    rsi,rbx
   14000e56e:	movzx  r9d,WORD PTR [rsi]
   14000e572:	lea    rdx,[rbp+0x1c0]
   14000e579:	lea    rcx,[rbp-0x58]
   14000e57d:	mov    r8d,0x6
   14000e583:	dec    edi
   14000e585:	add    rsi,0x2
   14000e589:	call   0x1400154dc
   14000e58e:	xor    r10d,r10d
   14000e591:	test   eax,eax
   14000e593:	jne    0x14000e5c4
   14000e595:	mov    edx,DWORD PTR [rbp-0x58]
   14000e598:	test   edx,edx
   14000e59a:	je     0x14000e5c4
   14000e59c:	mov    rax,QWORD PTR [rbp-0x60]
   14000e5a0:	mov    r8,QWORD PTR [rsp+0x70]
   14000e5a5:	lea    r9,[rsp+0x40]
   14000e5aa:	lea    rcx,[rbp+0x1c0]
   14000e5b1:	mov    QWORD PTR [rsp+0x20],rax
   14000e5b6:	call   0x14000dd6c
   14000e5bb:	xor    r10d,r10d
   14000e5be:	test   edi,edi
   14000e5c0:	jne    0x14000e56e
   14000e5c2:	jmp    0x14000e5ec
   14000e5c4:	mov    esi,r15d
   14000e5c7:	mov    DWORD PTR [rsp+0x40],r15d
   14000e5cc:	jmp    0x14000e5f0
   14000e5ce:	mov    rax,QWORD PTR [rbp-0x60]
   14000e5d2:	lea    r9,[rsp+0x40]
   14000e5d7:	mov    r8,rsi
   14000e5da:	mov    edx,edi
   14000e5dc:	mov    rcx,rbx
   14000e5df:	mov    QWORD PTR [rsp+0x20],rax
   14000e5e4:	call   0x14000dd6c
   14000e5e9:	xor    r10d,r10d
   14000e5ec:	mov    esi,DWORD PTR [rsp+0x40]
   14000e5f0:	test   esi,esi
   14000e5f2:	js     0x14000e615
   14000e5f4:	test   r13b,0x4
   14000e5f8:	je     0x14000e615
   14000e5fa:	mov    r8,QWORD PTR [rsp+0x70]
   14000e5ff:	lea    r9,[rsp+0x40]
   14000e604:	mov    edx,r12d
   14000e607:	mov    cl,0x20
   14000e609:	call   0x14000dd18
   14000e60e:	mov    esi,DWORD PTR [rsp+0x40]
   14000e612:	xor    r10d,r10d
   14000e615:	mov    rax,QWORD PTR [rbp-0x50]
   14000e619:	test   rax,rax
   14000e61c:	je     0x14000e62d
   14000e61e:	mov    rcx,rax
   14000e621:	call   0x14000b460
   14000e626:	xor    r10d,r10d
   14000e629:	mov    QWORD PTR [rbp-0x50],r10
   14000e62d:	mov    edi,DWORD PTR [rsp+0x44]
   14000e631:	mov    r8,QWORD PTR [rsp+0x68]
   14000e636:	mov    edx,DWORD PTR [rsp+0x60]
   14000e63a:	mov    r11d,0x200
   14000e640:	lea    r9,[rip+0xffffffffffff19b9]        # 0x140000000
   14000e647:	mov    r12b,BYTE PTR [r8]
   14000e64a:	test   r12b,r12b
   14000e64d:	jne    0x14000df9a
   14000e653:	cmp    BYTE PTR [rbp-0x68],r10b
   14000e657:	je     0x14000e664
   14000e659:	mov    rcx,QWORD PTR [rbp-0x70]
   14000e65d:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000e664:	mov    eax,esi
   14000e666:	mov    rcx,QWORD PTR [rbp+0x1c8]
   14000e66d:	xor    rcx,rsp
   14000e670:	call   0x14000a820
   14000e675:	mov    rbx,QWORD PTR [rsp+0x320]
   14000e67d:	add    rsp,0x2d0
   14000e684:	pop    r15
   14000e686:	pop    r14
   14000e688:	pop    r13
   14000e68a:	pop    r12
   14000e68c:	pop    rdi
   14000e68d:	pop    rsi
   14000e68e:	pop    rbp
   14000e68f:	ret    
   14000e690:	cmp    r12b,0x49
   14000e694:	je     0x14000e6ce
   14000e696:	cmp    r12b,0x68
   14000e69a:	je     0x14000e6c5
   14000e69c:	cmp    r12b,0x6c
   14000e6a0:	je     0x14000e6af
   14000e6a2:	cmp    r12b,0x77
   14000e6a6:	jne    0x14000e647
   14000e6a8:	bts    r13d,0xb
   14000e6ad:	jmp    0x14000e647
   14000e6af:	cmp    BYTE PTR [r8],0x6c
   14000e6b3:	jne    0x14000e6bf
   14000e6b5:	inc    r8
   14000e6b8:	bts    r13d,0xc
   14000e6bd:	jmp    0x14000e647
   14000e6bf:	or     r13d,0x10
   14000e6c3:	jmp    0x14000e647
   14000e6c5:	or     r13d,0x20
   14000e6c9:	jmp    0x14000e647
   14000e6ce:	mov    al,BYTE PTR [r8]
   14000e6d1:	bts    r13d,0xf
   14000e6d6:	cmp    al,0x36
   14000e6d8:	jne    0x14000e6ef
   14000e6da:	cmp    BYTE PTR [r8+0x1],0x34
   14000e6df:	jne    0x14000e6ef
   14000e6e1:	add    r8,0x2
   14000e6e5:	bts    r13d,0xf
   14000e6ea:	jmp    0x14000e647
   14000e6ef:	cmp    al,0x33
   14000e6f1:	jne    0x14000e708
   14000e6f3:	cmp    BYTE PTR [r8+0x1],0x32
   14000e6f8:	jne    0x14000e708
   14000e6fa:	add    r8,0x2
   14000e6fe:	btr    r13d,0xf
   14000e703:	jmp    0x14000e647
   14000e708:	cmp    al,0x64
   14000e70a:	je     0x14000e647
   14000e710:	cmp    al,0x69
   14000e712:	je     0x14000e647
   14000e718:	cmp    al,0x6f
   14000e71a:	je     0x14000e647
   14000e720:	cmp    al,0x75
   14000e722:	je     0x14000e647
   14000e728:	cmp    al,0x78
   14000e72a:	je     0x14000e647
   14000e730:	cmp    al,0x58
   14000e732:	je     0x14000e647
   14000e738:	mov    DWORD PTR [rsp+0x60],r10d
   14000e73d:	lea    rdx,[rbp-0x80]
   14000e741:	movzx  ecx,r12b
   14000e745:	mov    DWORD PTR [rsp+0x54],r10d
   14000e74a:	call   0x140015288
   14000e74f:	xor    esi,esi
   14000e751:	test   eax,eax
   14000e753:	je     0x14000e780
   14000e755:	mov    rdx,QWORD PTR [rsp+0x70]
   14000e75a:	lea    r8,[rsp+0x40]
   14000e75f:	mov    cl,r12b
   14000e762:	call   0x14000dcd0
   14000e767:	mov    rdx,QWORD PTR [rsp+0x68]
   14000e76c:	mov    r12b,BYTE PTR [rdx]
   14000e76f:	inc    rdx
   14000e772:	mov    QWORD PTR [rsp+0x68],rdx
   14000e777:	test   r12b,r12b
   14000e77a:	je     0x14000e897
   14000e780:	mov    rdx,QWORD PTR [rsp+0x70]
   14000e785:	lea    r8,[rsp+0x40]
   14000e78a:	mov    cl,r12b
   14000e78d:	call   0x14000dcd0
   14000e792:	mov    esi,DWORD PTR [rsp+0x40]
   14000e796:	xor    r10d,r10d
   14000e799:	jmp    0x14000e631
   14000e79e:	cmp    r12b,0x2a
   14000e7a2:	jne    0x14000e7c4
   14000e7a4:	mov    edi,DWORD PTR [r14]
   14000e7a7:	add    r14,0x8
   14000e7ab:	mov    DWORD PTR [rsp+0x44],edi
   14000e7af:	test   edi,edi
   14000e7b1:	jns    0x14000e647
   14000e7b7:	mov    edi,r15d
   14000e7ba:	mov    DWORD PTR [rsp+0x44],r15d
   14000e7bf:	jmp    0x14000e647
   14000e7c4:	lea    ecx,[rdi+rdi*4]
   14000e7c7:	movsx  eax,r12b
   14000e7cb:	lea    edi,[rax+rcx*2-0x30]
   14000e7cf:	mov    DWORD PTR [rsp+0x44],edi
   14000e7d3:	jmp    0x14000e647
   14000e7d8:	mov    edi,r10d
   14000e7db:	mov    DWORD PTR [rsp+0x44],r10d
   14000e7e0:	jmp    0x14000e647
   14000e7e5:	cmp    r12b,0x2a
   14000e7e9:	jne    0x14000e806
   14000e7eb:	mov    eax,DWORD PTR [r14]
   14000e7ee:	add    r14,0x8
   14000e7f2:	mov    DWORD PTR [rsp+0x58],eax
   14000e7f6:	test   eax,eax
   14000e7f8:	jns    0x14000e647
   14000e7fe:	or     r13d,0x4
   14000e802:	neg    eax
   14000e804:	jmp    0x14000e815
   14000e806:	mov    eax,DWORD PTR [rsp+0x58]
   14000e80a:	lea    ecx,[rax+rax*4]
   14000e80d:	movsx  eax,r12b
   14000e811:	lea    eax,[rax+rcx*2-0x30]
   14000e815:	mov    DWORD PTR [rsp+0x58],eax
   14000e819:	jmp    0x14000e647
   14000e81e:	cmp    r12b,0x20
   14000e822:	je     0x14000e865
   14000e824:	cmp    r12b,0x23
   14000e828:	je     0x14000e85b
   14000e82a:	cmp    r12b,0x2b
   14000e82e:	je     0x14000e852
   14000e830:	cmp    r12b,0x2d
   14000e834:	je     0x14000e849
   14000e836:	cmp    r12b,0x30
   14000e83a:	jne    0x14000e647
   14000e840:	or     r13d,0x8
   14000e844:	jmp    0x14000e647
   14000e849:	or     r13d,0x4
   14000e84d:	jmp    0x14000e647
   14000e852:	or     r13d,0x1
   14000e856:	jmp    0x14000e647
   14000e85b:	bts    r13d,0x7
   14000e860:	jmp    0x14000e647
   14000e865:	or     r13d,0x2
   14000e869:	jmp    0x14000e647
   14000e86e:	mov    DWORD PTR [rsp+0x78],r10d
   14000e873:	mov    DWORD PTR [rsp+0x5c],r10d
   14000e878:	mov    DWORD PTR [rsp+0x58],r10d
   14000e87d:	mov    DWORD PTR [rsp+0x4c],r10d
   14000e882:	mov    r13d,r10d
   14000e885:	mov    edi,r15d
   14000e888:	mov    DWORD PTR [rsp+0x44],r15d
   14000e88d:	mov    DWORD PTR [rsp+0x54],r10d
   14000e892:	jmp    0x14000e647
   14000e897:	call   0x14000bdc0
   14000e89c:	mov    DWORD PTR [rax],0x16
   14000e8a2:	call   0x14000d01c
   14000e8a7:	cmp    BYTE PTR [rbp-0x68],sil
   14000e8ab:	jmp    0x14000df4e
   14000e8b0:	mov    rax,rsp
   14000e8b3:	mov    QWORD PTR [rax+0x8],rbx
   14000e8b7:	mov    QWORD PTR [rax+0x10],rsi
   14000e8bb:	mov    QWORD PTR [rax+0x18],rdi
   14000e8bf:	mov    QWORD PTR [rax+0x20],r12
   14000e8c3:	push   rbp
   14000e8c4:	mov    rbp,rsp
   14000e8c7:	sub    rsp,0x60
   14000e8cb:	mov    rsi,rcx
   14000e8ce:	mov    rdi,rdx
   14000e8d1:	lea    rcx,[rbp-0x20]
   14000e8d5:	mov    rdx,r9
   14000e8d8:	mov    r12,r9
   14000e8db:	mov    rbx,r8
   14000e8de:	call   0x14000c6f4
   14000e8e3:	test   rbx,rbx
   14000e8e6:	jne    0x14000e8ff
   14000e8e8:	cmp    BYTE PTR [rbp-0x8],bl
   14000e8eb:	je     0x14000e8f8
   14000e8ed:	mov    rax,QWORD PTR [rbp-0x10]
   14000e8f1:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000e8f8:	xor    eax,eax
   14000e8fa:	jmp    0x14000e998
   14000e8ff:	test   rsi,rsi
   14000e902:	jne    0x14000e92c
   14000e904:	call   0x14000bdc0
   14000e909:	mov    DWORD PTR [rax],0x16
   14000e90f:	call   0x14000d01c
   14000e914:	cmp    BYTE PTR [rbp-0x8],0x0
   14000e918:	je     0x14000e925
   14000e91a:	mov    rax,QWORD PTR [rbp-0x10]
   14000e91e:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000e925:	mov    eax,0x7fffffff
   14000e92a:	jmp    0x14000e998
   14000e92c:	test   rdi,rdi
   14000e92f:	je     0x14000e904
   14000e931:	cmp    rbx,0x7fffffff
   14000e938:	ja     0x14000e904
   14000e93a:	mov    rcx,QWORD PTR [rbp-0x18]
   14000e93e:	cmp    DWORD PTR [rcx+0x8],0x0
   14000e942:	jne    0x14000e957
   14000e944:	mov    r9,r12
   14000e947:	mov    r8,rbx
   14000e94a:	mov    rdx,rdi
   14000e94d:	mov    rcx,rsi
   14000e950:	call   0x1400158c0
   14000e955:	jmp    0x14000e987
   14000e957:	mov    eax,DWORD PTR [rcx+0x4]
   14000e95a:	mov    edx,DWORD PTR [rcx+0xc]
   14000e95d:	lea    rcx,[rbp-0x20]
   14000e961:	mov    DWORD PTR [rsp+0x38],eax
   14000e965:	mov    DWORD PTR [rsp+0x30],ebx
   14000e969:	mov    r9,rsi
   14000e96c:	mov    r8d,0x1001
   14000e972:	mov    QWORD PTR [rsp+0x28],rdi
   14000e977:	mov    DWORD PTR [rsp+0x20],ebx
   14000e97b:	call   0x140015834
   14000e980:	test   eax,eax
   14000e982:	je     0x14000e914
   14000e984:	add    eax,0xfffffffe
   14000e987:	cmp    BYTE PTR [rbp-0x8],0x0
   14000e98b:	je     0x14000e998
   14000e98d:	mov    rcx,QWORD PTR [rbp-0x10]
   14000e991:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000e998:	lea    r11,[rsp+0x60]
   14000e99d:	mov    rbx,QWORD PTR [r11+0x10]
   14000e9a1:	mov    rsi,QWORD PTR [r11+0x18]
   14000e9a5:	mov    rdi,QWORD PTR [r11+0x20]
   14000e9a9:	mov    r12,QWORD PTR [r11+0x28]
   14000e9ad:	mov    rsp,r11
   14000e9b0:	pop    rbp
   14000e9b1:	ret    
   14000e9b2:	int3   
   14000e9b3:	int3   
   14000e9b4:	xor    r9d,r9d
   14000e9b7:	jmp    0x14000e8b0
   14000e9bc:	mov    QWORD PTR [rsp+0x10],rbx
   14000e9c1:	mov    QWORD PTR [rsp+0x18],rbp
   14000e9c6:	push   rdi
   14000e9c7:	sub    rsp,0x40
   14000e9cb:	and    QWORD PTR [rsp+0x50],0x0
   14000e9d1:	mov    rbx,QWORD PTR [rip+0x15fd0]        # 0x1400249a8
   14000e9d8:	mov    rax,QWORD PTR [rbx]
   14000e9db:	test   rax,rax
   14000e9de:	je     0x14000ea8e
   14000e9e4:	or     ebp,0xffffffff
   14000e9e7:	and    QWORD PTR [rsp+0x38],0x0
   14000e9ed:	and    QWORD PTR [rsp+0x30],0x0
   14000e9f3:	and    DWORD PTR [rsp+0x28],0x0
   14000e9f8:	and    QWORD PTR [rsp+0x20],0x0
   14000e9fe:	mov    r9d,ebp
   14000ea01:	mov    r8,rax
   14000ea04:	xor    edx,edx
   14000ea06:	xor    ecx,ecx
   14000ea08:	call   QWORD PTR [rip+0xb7f2]        # 0x14001a200
   14000ea0e:	movsxd rdi,eax
   14000ea11:	test   eax,eax
   14000ea13:	je     0x14000eaaa
   14000ea19:	mov    rcx,rdi
   14000ea1c:	mov    edx,0x1
   14000ea21:	call   0x140010b24
   14000ea26:	mov    QWORD PTR [rsp+0x50],rax
   14000ea2b:	test   rax,rax
   14000ea2e:	je     0x14000eaaa
   14000ea30:	and    QWORD PTR [rsp+0x38],0x0
   14000ea36:	and    QWORD PTR [rsp+0x30],0x0
   14000ea3c:	mov    r8,QWORD PTR [rbx]
   14000ea3f:	mov    r9d,ebp
   14000ea42:	xor    edx,edx
   14000ea44:	xor    ecx,ecx
   14000ea46:	mov    DWORD PTR [rsp+0x28],edi
   14000ea4a:	mov    QWORD PTR [rsp+0x20],rax
   14000ea4f:	call   QWORD PTR [rip+0xb7ab]        # 0x14001a200
   14000ea55:	test   eax,eax
   14000ea57:	je     0x14000eaa0
   14000ea59:	lea    rcx,[rsp+0x50]
   14000ea5e:	xor    edx,edx
   14000ea60:	call   0x140013c50
   14000ea65:	test   eax,eax
   14000ea67:	jns    0x14000ea7e
   14000ea69:	mov    rcx,QWORD PTR [rsp+0x50]
   14000ea6e:	test   rcx,rcx
   14000ea71:	je     0x14000ea7e
   14000ea73:	call   0x14000b460
   14000ea78:	and    QWORD PTR [rsp+0x50],0x0
   14000ea7e:	add    rbx,0x8
   14000ea82:	mov    rax,QWORD PTR [rbx]
   14000ea85:	test   rax,rax
   14000ea88:	jne    0x14000e9e7
   14000ea8e:	xor    eax,eax
   14000ea90:	mov    rbx,QWORD PTR [rsp+0x58]
   14000ea95:	mov    rbp,QWORD PTR [rsp+0x60]
   14000ea9a:	add    rsp,0x40
   14000ea9e:	pop    rdi
   14000ea9f:	ret    
   14000eaa0:	mov    rcx,QWORD PTR [rsp+0x50]
   14000eaa5:	call   0x14000b460
   14000eaaa:	mov    eax,ebp
   14000eaac:	jmp    0x14000ea90
   14000eaae:	int3   
   14000eaaf:	int3   
   14000eab0:	rex push rbx
   14000eab2:	sub    rsp,0x20
   14000eab6:	test   rcx,rcx
   14000eab9:	je     0x14000eac8
   14000eabb:	test   rdx,rdx
   14000eabe:	je     0x14000eac8
   14000eac0:	test   r8,r8
   14000eac3:	jne    0x14000eae1
   14000eac5:	mov    BYTE PTR [rcx],r8b
   14000eac8:	call   0x14000bdc0
   14000eacd:	mov    ebx,0x16
   14000ead2:	mov    DWORD PTR [rax],ebx
   14000ead4:	call   0x14000d01c
   14000ead9:	mov    eax,ebx
   14000eadb:	add    rsp,0x20
   14000eadf:	pop    rbx
   14000eae0:	ret    
   14000eae1:	mov    r9,rcx
   14000eae4:	sub    r9,r8
   14000eae7:	mov    al,BYTE PTR [r8]
   14000eaea:	mov    BYTE PTR [r9+r8*1],al
   14000eaee:	inc    r8
   14000eaf1:	test   al,al
   14000eaf3:	je     0x14000eafa
   14000eaf5:	dec    rdx
   14000eaf8:	jne    0x14000eae7
   14000eafa:	test   rdx,rdx
   14000eafd:	jne    0x14000eb0d
   14000eaff:	mov    BYTE PTR [rcx],dl
   14000eb01:	call   0x14000bdc0
   14000eb06:	mov    ebx,0x22
   14000eb0b:	jmp    0x14000ead2
   14000eb0d:	xor    eax,eax
   14000eb0f:	jmp    0x14000eadb
   14000eb11:	int3   
   14000eb12:	int3   
   14000eb13:	int3   
   14000eb14:	rex push rbx
   14000eb16:	sub    rsp,0x20
   14000eb1a:	and    DWORD PTR [rsp+0x40],0x0
   14000eb1f:	lea    r8,[rsp+0x40]
   14000eb24:	call   0x1400159c4
   14000eb29:	mov    rbx,rax
   14000eb2c:	test   rax,rax
   14000eb2f:	jne    0x14000eb4c
   14000eb31:	cmp    DWORD PTR [rsp+0x40],eax
   14000eb35:	je     0x14000eb4c
   14000eb37:	call   0x14000bdc0
   14000eb3c:	test   rax,rax
   14000eb3f:	je     0x14000eb4c
   14000eb41:	call   0x14000bdc0
   14000eb46:	mov    ecx,DWORD PTR [rsp+0x40]
   14000eb4a:	mov    DWORD PTR [rax],ecx
   14000eb4c:	mov    rax,rbx
   14000eb4f:	add    rsp,0x20
   14000eb53:	pop    rbx
   14000eb54:	ret    
   14000eb55:	int3   
   14000eb56:	int3   
   14000eb57:	int3   
   14000eb58:	xor    eax,eax
   14000eb5a:	test   rdx,rdx
   14000eb5d:	je     0x14000eb6f
   14000eb5f:	cmp    BYTE PTR [rcx],0x0
   14000eb62:	je     0x14000eb6f
   14000eb64:	inc    rax
   14000eb67:	inc    rcx
   14000eb6a:	cmp    rax,rdx
   14000eb6d:	jb     0x14000eb5f
   14000eb6f:	repz ret 
   14000eb71:	int3   
   14000eb72:	int3   
   14000eb73:	int3   
   14000eb74:	sub    rsp,0x28
   14000eb78:	mov    rax,QWORD PTR [rcx]
   14000eb7b:	cmp    DWORD PTR [rax],0xe06d7363
   14000eb81:	jne    0x14000ebae
   14000eb83:	cmp    DWORD PTR [rax+0x18],0x4
   14000eb87:	jne    0x14000ebae
   14000eb89:	mov    eax,DWORD PTR [rax+0x20]
   14000eb8c:	cmp    eax,0x19930520
   14000eb91:	je     0x14000eba8
   14000eb93:	cmp    eax,0x19930521
   14000eb98:	je     0x14000eba8
   14000eb9a:	cmp    eax,0x19930522
   14000eb9f:	je     0x14000eba8
   14000eba1:	cmp    eax,0x1994000
   14000eba6:	jne    0x14000ebae
   14000eba8:	call   0x14000cb6c
   14000ebad:	int3   
   14000ebae:	xor    eax,eax
   14000ebb0:	add    rsp,0x28
   14000ebb4:	ret    
   14000ebb5:	int3   
   14000ebb6:	int3   
   14000ebb7:	int3   
   14000ebb8:	sub    rsp,0x28
   14000ebbc:	lea    rcx,[rip+0xffffffffffffffb1]        # 0x14000eb74
   14000ebc3:	call   QWORD PTR [rip+0xb5b7]        # 0x14001a180
   14000ebc9:	xor    eax,eax
   14000ebcb:	add    rsp,0x28
   14000ebcf:	ret    
   14000ebd0:	mov    QWORD PTR [rsp+0x8],rbx
   14000ebd5:	mov    QWORD PTR [rsp+0x10],rbp
   14000ebda:	mov    QWORD PTR [rsp+0x18],rsi
   14000ebdf:	push   rdi
   14000ebe0:	sub    rsp,0x20
   14000ebe4:	mov    rsi,rdx
   14000ebe7:	mov    edi,ecx
   14000ebe9:	call   0x14000d180
   14000ebee:	xor    r9d,r9d
   14000ebf1:	mov    rbx,rax
   14000ebf4:	test   rax,rax
   14000ebf7:	je     0x14000ed89
   14000ebfd:	mov    rdx,QWORD PTR [rax+0xa0]
   14000ec04:	mov    rcx,rdx
   14000ec07:	cmp    DWORD PTR [rcx],edi
   14000ec09:	je     0x14000ec1b
   14000ec0b:	lea    rax,[rdx+0xc0]
   14000ec12:	add    rcx,0x10
   14000ec16:	cmp    rcx,rax
   14000ec19:	jb     0x14000ec07
   14000ec1b:	lea    rax,[rdx+0xc0]
   14000ec22:	cmp    rcx,rax
   14000ec25:	jae    0x14000ec2b
   14000ec27:	cmp    DWORD PTR [rcx],edi
   14000ec29:	je     0x14000ec2e
   14000ec2b:	mov    rcx,r9
   14000ec2e:	test   rcx,rcx
   14000ec31:	je     0x14000ed89
   14000ec37:	mov    r8,QWORD PTR [rcx+0x8]
   14000ec3b:	test   r8,r8
   14000ec3e:	je     0x14000ed89
   14000ec44:	cmp    r8,0x5
   14000ec48:	jne    0x14000ec57
   14000ec4a:	mov    QWORD PTR [rcx+0x8],r9
   14000ec4e:	lea    eax,[r8-0x4]
   14000ec52:	jmp    0x14000ed8b
   14000ec57:	cmp    r8,0x1
   14000ec5b:	jne    0x14000ec65
   14000ec5d:	or     eax,0xffffffff
   14000ec60:	jmp    0x14000ed8b
   14000ec65:	mov    rbp,QWORD PTR [rbx+0xa8]
   14000ec6c:	mov    QWORD PTR [rbx+0xa8],rsi
   14000ec73:	cmp    DWORD PTR [rcx+0x4],0x8
   14000ec77:	jne    0x14000ed73
   14000ec7d:	mov    edx,0x30
   14000ec82:	mov    rax,QWORD PTR [rbx+0xa0]
   14000ec89:	add    rdx,0x10
   14000ec8d:	mov    QWORD PTR [rdx+rax*1-0x8],r9
   14000ec92:	cmp    rdx,0xc0
   14000ec99:	jl     0x14000ec82
   14000ec9b:	cmp    DWORD PTR [rcx],0xc000008e
   14000eca1:	mov    edi,DWORD PTR [rbx+0xb0]
   14000eca7:	jne    0x14000ecb8
   14000eca9:	mov    DWORD PTR [rbx+0xb0],0x83
   14000ecb3:	jmp    0x14000ed5d
   14000ecb8:	cmp    DWORD PTR [rcx],0xc0000090
   14000ecbe:	jne    0x14000eccf
   14000ecc0:	mov    DWORD PTR [rbx+0xb0],0x81
   14000ecca:	jmp    0x14000ed5d
   14000eccf:	cmp    DWORD PTR [rcx],0xc0000091
   14000ecd5:	jne    0x14000ece3
   14000ecd7:	mov    DWORD PTR [rbx+0xb0],0x84
   14000ece1:	jmp    0x14000ed5d
   14000ece3:	cmp    DWORD PTR [rcx],0xc0000093
   14000ece9:	jne    0x14000ecf7
   14000eceb:	mov    DWORD PTR [rbx+0xb0],0x85
   14000ecf5:	jmp    0x14000ed5d
   14000ecf7:	cmp    DWORD PTR [rcx],0xc000008d
   14000ecfd:	jne    0x14000ed0b
   14000ecff:	mov    DWORD PTR [rbx+0xb0],0x82
   14000ed09:	jmp    0x14000ed5d
   14000ed0b:	cmp    DWORD PTR [rcx],0xc000008f
   14000ed11:	jne    0x14000ed1f
   14000ed13:	mov    DWORD PTR [rbx+0xb0],0x86
   14000ed1d:	jmp    0x14000ed5d
   14000ed1f:	cmp    DWORD PTR [rcx],0xc0000092
   14000ed25:	jne    0x14000ed33
   14000ed27:	mov    DWORD PTR [rbx+0xb0],0x8a
   14000ed31:	jmp    0x14000ed5d
   14000ed33:	cmp    DWORD PTR [rcx],0xc00002b5
   14000ed39:	jne    0x14000ed47
   14000ed3b:	mov    DWORD PTR [rbx+0xb0],0x8d
   14000ed45:	jmp    0x14000ed5d
   14000ed47:	cmp    DWORD PTR [rcx],0xc00002b4
   14000ed4d:	mov    eax,edi
   14000ed4f:	mov    edx,0x8e
   14000ed54:	cmove  eax,edx
   14000ed57:	mov    DWORD PTR [rbx+0xb0],eax
   14000ed5d:	mov    edx,DWORD PTR [rbx+0xb0]
   14000ed63:	mov    ecx,0x8
   14000ed68:	call   r8
   14000ed6b:	mov    DWORD PTR [rbx+0xb0],edi
   14000ed71:	jmp    0x14000ed7d
   14000ed73:	mov    QWORD PTR [rcx+0x8],r9
   14000ed77:	mov    ecx,DWORD PTR [rcx+0x4]
   14000ed7a:	call   r8
   14000ed7d:	mov    QWORD PTR [rbx+0xa8],rbp
   14000ed84:	jmp    0x14000ec5d
   14000ed89:	xor    eax,eax
   14000ed8b:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ed90:	mov    rbp,QWORD PTR [rsp+0x38]
   14000ed95:	mov    rsi,QWORD PTR [rsp+0x40]
   14000ed9a:	add    rsp,0x20
   14000ed9e:	pop    rdi
   14000ed9f:	ret    
   14000eda0:	mov    QWORD PTR [rsp+0x8],rbx
   14000eda5:	mov    QWORD PTR [rsp+0x10],rbp
   14000edaa:	mov    QWORD PTR [rsp+0x18],rsi
   14000edaf:	push   rdi
   14000edb0:	sub    rsp,0x30
   14000edb4:	cmp    DWORD PTR [rip+0x17f0d],0x0        # 0x140026cc8
   14000edbb:	jne    0x14000edc2
   14000edbd:	call   0x140014900
   14000edc2:	mov    rbx,QWORD PTR [rip+0x15c17]        # 0x1400249e0
   14000edc9:	xor    edi,edi
   14000edcb:	test   rbx,rbx
   14000edce:	jne    0x14000edeb
   14000edd0:	or     eax,0xffffffff
   14000edd3:	jmp    0x14000ee8c
   14000edd8:	cmp    al,0x3d
   14000edda:	je     0x14000edde
   14000eddc:	inc    edi
   14000edde:	mov    rcx,rbx
   14000ede1:	call   0x140009fa0
   14000ede6:	lea    rbx,[rbx+rax*1+0x1]
   14000edeb:	mov    al,BYTE PTR [rbx]
   14000eded:	test   al,al
   14000edef:	jne    0x14000edd8
   14000edf1:	lea    eax,[rdi+0x1]
   14000edf4:	mov    edx,0x8
   14000edf9:	movsxd rcx,eax
   14000edfc:	call   0x140010b24
   14000ee01:	mov    rdi,rax
   14000ee04:	mov    QWORD PTR [rip+0x15b8d],rax        # 0x140024998
   14000ee0b:	test   rax,rax
   14000ee0e:	je     0x14000edd0
   14000ee10:	mov    rbx,QWORD PTR [rip+0x15bc9]        # 0x1400249e0
   14000ee17:	cmp    BYTE PTR [rbx],0x0
   14000ee1a:	je     0x14000ee6c
   14000ee1c:	mov    rcx,rbx
   14000ee1f:	call   0x140009fa0
   14000ee24:	cmp    BYTE PTR [rbx],0x3d
   14000ee27:	lea    esi,[rax+0x1]
   14000ee2a:	je     0x14000ee5a
   14000ee2c:	movsxd rbp,esi
   14000ee2f:	mov    edx,0x1
   14000ee34:	mov    rcx,rbp
   14000ee37:	call   0x140010b24
   14000ee3c:	mov    QWORD PTR [rdi],rax
   14000ee3f:	test   rax,rax
   14000ee42:	je     0x14000eeb7
   14000ee44:	mov    r8,rbx
   14000ee47:	mov    rdx,rbp
   14000ee4a:	mov    rcx,rax
   14000ee4d:	call   0x14000eab0
   14000ee52:	test   eax,eax
   14000ee54:	jne    0x14000eea1
   14000ee56:	add    rdi,0x8
   14000ee5a:	movsxd rax,esi
   14000ee5d:	add    rbx,rax
   14000ee60:	cmp    BYTE PTR [rbx],0x0
   14000ee63:	jne    0x14000ee1c
   14000ee65:	mov    rbx,QWORD PTR [rip+0x15b74]        # 0x1400249e0
   14000ee6c:	mov    rcx,rbx
   14000ee6f:	call   0x14000b460
   14000ee74:	and    QWORD PTR [rip+0x15b64],0x0        # 0x1400249e0
   14000ee7c:	and    QWORD PTR [rdi],0x0
   14000ee80:	mov    DWORD PTR [rip+0x17e26],0x1        # 0x140026cb0
   14000ee8a:	xor    eax,eax
   14000ee8c:	mov    rbx,QWORD PTR [rsp+0x40]
   14000ee91:	mov    rbp,QWORD PTR [rsp+0x48]
   14000ee96:	mov    rsi,QWORD PTR [rsp+0x50]
   14000ee9b:	add    rsp,0x30
   14000ee9f:	pop    rdi
   14000eea0:	ret    
   14000eea1:	and    QWORD PTR [rsp+0x20],0x0
   14000eea7:	xor    r9d,r9d
   14000eeaa:	xor    r8d,r8d
   14000eead:	xor    edx,edx
   14000eeaf:	xor    ecx,ecx
   14000eeb1:	call   0x14000cf78
   14000eeb6:	int3   
   14000eeb7:	mov    rcx,QWORD PTR [rip+0x15ada]        # 0x140024998
   14000eebe:	call   0x14000b460
   14000eec3:	and    QWORD PTR [rip+0x15acd],0x0        # 0x140024998
   14000eecb:	jmp    0x14000edd0
   14000eed0:	mov    rax,rsp
   14000eed3:	mov    QWORD PTR [rax+0x8],rbx
   14000eed7:	mov    QWORD PTR [rax+0x10],rbp
   14000eedb:	mov    QWORD PTR [rax+0x18],rsi
   14000eedf:	mov    QWORD PTR [rax+0x20],rdi
   14000eee3:	push   r12
   14000eee5:	push   r13
   14000eee7:	push   r14
   14000eee9:	sub    rsp,0x20
   14000eeed:	mov    r13,QWORD PTR [rsp+0x60]
   14000eef2:	mov    r14,r9
   14000eef5:	mov    rdi,r8
   14000eef8:	and    DWORD PTR [r13+0x0],0x0
   14000eefd:	mov    r12,rdx
   14000ef00:	mov    rbx,rcx
   14000ef03:	mov    DWORD PTR [r9],0x1
   14000ef0a:	test   rdx,rdx
   14000ef0d:	je     0x14000ef16
   14000ef0f:	mov    QWORD PTR [rdx],r8
   14000ef12:	add    r12,0x8
   14000ef16:	xor    ebp,ebp
   14000ef18:	cmp    BYTE PTR [rbx],0x22
   14000ef1b:	jne    0x14000ef2e
   14000ef1d:	xor    eax,eax
   14000ef1f:	test   ebp,ebp
   14000ef21:	mov    sil,0x22
   14000ef24:	sete   al
   14000ef27:	inc    rbx
   14000ef2a:	mov    ebp,eax
   14000ef2c:	jmp    0x14000ef67
   14000ef2e:	inc    DWORD PTR [r13+0x0]
   14000ef32:	test   rdi,rdi
   14000ef35:	je     0x14000ef3e
   14000ef37:	mov    al,BYTE PTR [rbx]
   14000ef39:	mov    BYTE PTR [rdi],al
   14000ef3b:	inc    rdi
   14000ef3e:	movzx  esi,BYTE PTR [rbx]
   14000ef41:	inc    rbx
   14000ef44:	mov    ecx,esi
   14000ef46:	call   0x140015adc
   14000ef4b:	test   eax,eax
   14000ef4d:	je     0x14000ef62
   14000ef4f:	inc    DWORD PTR [r13+0x0]
   14000ef53:	test   rdi,rdi
   14000ef56:	je     0x14000ef5f
   14000ef58:	mov    al,BYTE PTR [rbx]
   14000ef5a:	mov    BYTE PTR [rdi],al
   14000ef5c:	inc    rdi
   14000ef5f:	inc    rbx
   14000ef62:	test   sil,sil
   14000ef65:	je     0x14000ef82
   14000ef67:	test   ebp,ebp
   14000ef69:	jne    0x14000ef18
   14000ef6b:	cmp    sil,0x20
   14000ef6f:	je     0x14000ef77
   14000ef71:	cmp    sil,0x9
   14000ef75:	jne    0x14000ef18
   14000ef77:	test   rdi,rdi
   14000ef7a:	je     0x14000ef85
   14000ef7c:	mov    BYTE PTR [rdi-0x1],0x0
   14000ef80:	jmp    0x14000ef85
   14000ef82:	dec    rbx
   14000ef85:	xor    esi,esi
   14000ef87:	cmp    BYTE PTR [rbx],0x0
   14000ef8a:	je     0x14000f073
   14000ef90:	cmp    BYTE PTR [rbx],0x20
   14000ef93:	je     0x14000ef9a
   14000ef95:	cmp    BYTE PTR [rbx],0x9
   14000ef98:	jne    0x14000ef9f
   14000ef9a:	inc    rbx
   14000ef9d:	jmp    0x14000ef90
   14000ef9f:	cmp    BYTE PTR [rbx],0x0
   14000efa2:	je     0x14000f073
   14000efa8:	test   r12,r12
   14000efab:	je     0x14000efb5
   14000efad:	mov    QWORD PTR [r12],rdi
   14000efb1:	add    r12,0x8
   14000efb5:	inc    DWORD PTR [r14]
   14000efb8:	mov    edx,0x1
   14000efbd:	xor    ecx,ecx
   14000efbf:	jmp    0x14000efc6
   14000efc1:	inc    rbx
   14000efc4:	inc    ecx
   14000efc6:	cmp    BYTE PTR [rbx],0x5c
   14000efc9:	je     0x14000efc1
   14000efcb:	cmp    BYTE PTR [rbx],0x22
   14000efce:	jne    0x14000f006
   14000efd0:	test   dl,cl
   14000efd2:	jne    0x14000eff1
   14000efd4:	test   esi,esi
   14000efd6:	je     0x14000efe6
   14000efd8:	lea    rax,[rbx+0x1]
   14000efdc:	cmp    BYTE PTR [rax],0x22
   14000efdf:	jne    0x14000efe6
   14000efe1:	mov    rbx,rax
   14000efe4:	jmp    0x14000eff1
   14000efe6:	xor    eax,eax
   14000efe8:	xor    edx,edx
   14000efea:	test   esi,esi
   14000efec:	sete   al
   14000efef:	mov    esi,eax
   14000eff1:	shr    ecx,1
   14000eff3:	jmp    0x14000f006
   14000eff5:	dec    ecx
   14000eff7:	test   rdi,rdi
   14000effa:	je     0x14000f002
   14000effc:	mov    BYTE PTR [rdi],0x5c
   14000efff:	inc    rdi
   14000f002:	inc    DWORD PTR [r13+0x0]
   14000f006:	test   ecx,ecx
   14000f008:	jne    0x14000eff5
   14000f00a:	mov    al,BYTE PTR [rbx]
   14000f00c:	test   al,al
   14000f00e:	je     0x14000f05f
   14000f010:	test   esi,esi
   14000f012:	jne    0x14000f01c
   14000f014:	cmp    al,0x20
   14000f016:	je     0x14000f05f
   14000f018:	cmp    al,0x9
   14000f01a:	je     0x14000f05f
   14000f01c:	test   edx,edx
   14000f01e:	je     0x14000f057
   14000f020:	movsx  ecx,al
   14000f023:	call   0x140015adc
   14000f028:	test   rdi,rdi
   14000f02b:	je     0x14000f048
   14000f02d:	test   eax,eax
   14000f02f:	je     0x14000f03f
   14000f031:	mov    al,BYTE PTR [rbx]
   14000f033:	inc    rbx
   14000f036:	mov    BYTE PTR [rdi],al
   14000f038:	inc    rdi
   14000f03b:	inc    DWORD PTR [r13+0x0]
   14000f03f:	mov    al,BYTE PTR [rbx]
   14000f041:	mov    BYTE PTR [rdi],al
   14000f043:	inc    rdi
   14000f046:	jmp    0x14000f053
   14000f048:	test   eax,eax
   14000f04a:	je     0x14000f053
   14000f04c:	inc    rbx
   14000f04f:	inc    DWORD PTR [r13+0x0]
   14000f053:	inc    DWORD PTR [r13+0x0]
   14000f057:	inc    rbx
   14000f05a:	jmp    0x14000efb8
   14000f05f:	test   rdi,rdi
   14000f062:	je     0x14000f06a
   14000f064:	mov    BYTE PTR [rdi],0x0
   14000f067:	inc    rdi
   14000f06a:	inc    DWORD PTR [r13+0x0]
   14000f06e:	jmp    0x14000ef87
   14000f073:	test   r12,r12
   14000f076:	je     0x14000f07d
   14000f078:	and    QWORD PTR [r12],0x0
   14000f07d:	inc    DWORD PTR [r14]
   14000f080:	mov    rbx,QWORD PTR [rsp+0x40]
   14000f085:	mov    rbp,QWORD PTR [rsp+0x48]
   14000f08a:	mov    rsi,QWORD PTR [rsp+0x50]
   14000f08f:	mov    rdi,QWORD PTR [rsp+0x58]
   14000f094:	add    rsp,0x20
   14000f098:	pop    r14
   14000f09a:	pop    r13
   14000f09c:	pop    r12
   14000f09e:	ret    
   14000f09f:	int3   
   14000f0a0:	mov    QWORD PTR [rsp+0x18],rbx
   14000f0a5:	mov    QWORD PTR [rsp+0x20],rsi
   14000f0aa:	push   rdi
   14000f0ab:	sub    rsp,0x30
   14000f0af:	cmp    DWORD PTR [rip+0x17c12],0x0        # 0x140026cc8
   14000f0b6:	jne    0x14000f0bd
   14000f0b8:	call   0x140014900
   14000f0bd:	lea    rdi,[rip+0x161fc]        # 0x1400252c0
   14000f0c4:	mov    r8d,0x104
   14000f0ca:	xor    ecx,ecx
   14000f0cc:	mov    rdx,rdi
   14000f0cf:	mov    BYTE PTR [rip+0x162ee],0x0        # 0x1400253c4
   14000f0d6:	call   QWORD PTR [rip+0xaf6c]        # 0x14001a048
   14000f0dc:	mov    rbx,QWORD PTR [rip+0x17bc5]        # 0x140026ca8
   14000f0e3:	mov    QWORD PTR [rip+0x158ce],rdi        # 0x1400249b8
   14000f0ea:	test   rbx,rbx
   14000f0ed:	je     0x14000f0f4
   14000f0ef:	cmp    BYTE PTR [rbx],0x0
   14000f0f2:	jne    0x14000f0f7
   14000f0f4:	mov    rbx,rdi
   14000f0f7:	lea    rax,[rsp+0x48]
   14000f0fc:	lea    r9,[rsp+0x40]
   14000f101:	xor    r8d,r8d
   14000f104:	xor    edx,edx
   14000f106:	mov    rcx,rbx
   14000f109:	mov    QWORD PTR [rsp+0x20],rax
   14000f10e:	call   0x14000eed0
   14000f113:	movsxd rsi,DWORD PTR [rsp+0x40]
   14000f118:	movabs rcx,0x1fffffffffffffff
   14000f122:	cmp    rsi,rcx
   14000f125:	jae    0x14000f183
   14000f127:	movsxd rcx,DWORD PTR [rsp+0x48]
   14000f12c:	cmp    rcx,0xffffffffffffffff
   14000f130:	jae    0x14000f183
   14000f132:	lea    rdx,[rcx+rsi*8]
   14000f136:	cmp    rdx,rcx
   14000f139:	jb     0x14000f183
   14000f13b:	mov    rcx,rdx
   14000f13e:	call   0x140010aa4
   14000f143:	mov    rdi,rax
   14000f146:	test   rax,rax
   14000f149:	je     0x14000f183
   14000f14b:	lea    r8,[rax+rsi*8]
   14000f14f:	lea    rax,[rsp+0x48]
   14000f154:	lea    r9,[rsp+0x40]
   14000f159:	mov    rdx,rdi
   14000f15c:	mov    rcx,rbx
   14000f15f:	mov    QWORD PTR [rsp+0x20],rax
   14000f164:	call   0x14000eed0
   14000f169:	mov    r11d,DWORD PTR [rsp+0x40]
   14000f16e:	mov    QWORD PTR [rip+0x15813],rdi        # 0x140024988
   14000f175:	dec    r11d
   14000f178:	xor    eax,eax
   14000f17a:	mov    DWORD PTR [rip+0x15803],r11d        # 0x140024984
   14000f181:	jmp    0x14000f186
   14000f183:	or     eax,0xffffffff
   14000f186:	mov    rbx,QWORD PTR [rsp+0x50]
   14000f18b:	mov    rsi,QWORD PTR [rsp+0x58]
   14000f190:	add    rsp,0x30
   14000f194:	pop    rdi
   14000f195:	ret    
   14000f196:	int3   
   14000f197:	int3   
   14000f198:	mov    rax,rsp
   14000f19b:	mov    QWORD PTR [rax+0x8],rbx
   14000f19f:	mov    QWORD PTR [rax+0x10],rbp
   14000f1a3:	mov    QWORD PTR [rax+0x18],rsi
   14000f1a7:	mov    QWORD PTR [rax+0x20],rdi
   14000f1ab:	push   r12
   14000f1ad:	sub    rsp,0x40
   14000f1b1:	call   QWORD PTR [rip+0xb059]        # 0x14001a210
   14000f1b7:	xor    r12d,r12d
   14000f1ba:	mov    rdi,rax
   14000f1bd:	test   rax,rax
   14000f1c0:	je     0x14000f26f
   14000f1c6:	mov    rbx,rax
   14000f1c9:	cmp    WORD PTR [rax],r12w
   14000f1cd:	je     0x14000f1e3
   14000f1cf:	add    rbx,0x2
   14000f1d3:	cmp    WORD PTR [rbx],r12w
   14000f1d7:	jne    0x14000f1cf
   14000f1d9:	add    rbx,0x2
   14000f1dd:	cmp    WORD PTR [rbx],r12w
   14000f1e1:	jne    0x14000f1cf
   14000f1e3:	mov    QWORD PTR [rsp+0x38],r12
   14000f1e8:	sub    rbx,rax
   14000f1eb:	mov    QWORD PTR [rsp+0x30],r12
   14000f1f0:	sar    rbx,1
   14000f1f3:	mov    r8,rax
   14000f1f6:	xor    edx,edx
   14000f1f8:	lea    r9d,[rbx+0x1]
   14000f1fc:	xor    ecx,ecx
   14000f1fe:	mov    DWORD PTR [rsp+0x28],r12d
   14000f203:	mov    QWORD PTR [rsp+0x20],r12
   14000f208:	call   QWORD PTR [rip+0xaff2]        # 0x14001a200
   14000f20e:	movsxd rbp,eax
   14000f211:	test   eax,eax
   14000f213:	je     0x14000f266
   14000f215:	mov    rcx,rbp
   14000f218:	call   0x140010aa4
   14000f21d:	mov    rsi,rax
   14000f220:	test   rax,rax
   14000f223:	je     0x14000f266
   14000f225:	mov    QWORD PTR [rsp+0x38],r12
   14000f22a:	mov    QWORD PTR [rsp+0x30],r12
   14000f22f:	lea    r9d,[rbx+0x1]
   14000f233:	mov    r8,rdi
   14000f236:	xor    edx,edx
   14000f238:	xor    ecx,ecx
   14000f23a:	mov    DWORD PTR [rsp+0x28],ebp
   14000f23e:	mov    QWORD PTR [rsp+0x20],rax
   14000f243:	call   QWORD PTR [rip+0xafb7]        # 0x14001a200
   14000f249:	test   eax,eax
   14000f24b:	jne    0x14000f258
   14000f24d:	mov    rcx,rsi
   14000f250:	call   0x14000b460
   14000f255:	mov    rsi,r12
   14000f258:	mov    rcx,rdi
   14000f25b:	call   QWORD PTR [rip+0xafa7]        # 0x14001a208
   14000f261:	mov    rax,rsi
   14000f264:	jmp    0x14000f271
   14000f266:	mov    rcx,rdi
   14000f269:	call   QWORD PTR [rip+0xaf99]        # 0x14001a208
   14000f26f:	xor    eax,eax
   14000f271:	mov    rbx,QWORD PTR [rsp+0x50]
   14000f276:	mov    rbp,QWORD PTR [rsp+0x58]
   14000f27b:	mov    rsi,QWORD PTR [rsp+0x60]
   14000f280:	mov    rdi,QWORD PTR [rsp+0x68]
   14000f285:	add    rsp,0x40
   14000f289:	pop    r12
   14000f28b:	ret    
   14000f28c:	mov    QWORD PTR [rsp+0x8],rbx
   14000f291:	mov    QWORD PTR [rsp+0x10],rbp
   14000f296:	mov    QWORD PTR [rsp+0x18],rdi
   14000f29b:	push   r12
   14000f29d:	push   r13
   14000f29f:	push   r14
   14000f2a1:	sub    rsp,0x90
   14000f2a8:	lea    rcx,[rsp+0x20]
   14000f2ad:	call   QWORD PTR [rip+0xaf75]        # 0x14001a228
   14000f2b3:	mov    edx,0x58
   14000f2b8:	lea    ebp,[rdx-0x38]
   14000f2bb:	mov    ecx,ebp
   14000f2bd:	call   0x140010b24
   14000f2c2:	xor    r14d,r14d
   14000f2c5:	mov    rdx,rax
   14000f2c8:	test   rax,rax
   14000f2cb:	jne    0x14000f2d5
   14000f2cd:	or     eax,0xffffffff
   14000f2d0:	jmp    0x14000f540
   14000f2d5:	mov    QWORD PTR [rip+0x167a4],rax        # 0x140025a80
   14000f2dc:	add    rax,0xb00
   14000f2e2:	mov    ecx,ebp
   14000f2e4:	mov    DWORD PTR [rip+0x16782],ecx        # 0x140025a6c
   14000f2ea:	cmp    rdx,rax
   14000f2ed:	jae    0x14000f334
   14000f2ef:	add    rdx,0x9
   14000f2f3:	or     QWORD PTR [rdx-0x9],0xffffffffffffffff
   14000f2f8:	mov    WORD PTR [rdx-0x1],0xa00
   14000f2fe:	mov    DWORD PTR [rdx+0x3],r14d
   14000f302:	mov    WORD PTR [rdx+0x2f],0xa00
   14000f308:	mov    BYTE PTR [rdx+0x31],0xa
   14000f30c:	mov    DWORD PTR [rdx+0x47],r14d
   14000f310:	mov    BYTE PTR [rdx+0x43],r14b
   14000f314:	mov    rax,QWORD PTR [rip+0x16765]        # 0x140025a80
   14000f31b:	add    rdx,0x58
   14000f31f:	lea    rcx,[rdx-0x9]
   14000f323:	add    rax,0xb00
   14000f329:	cmp    rcx,rax
   14000f32c:	jb     0x14000f2f3
   14000f32e:	mov    ecx,DWORD PTR [rip+0x16738]        # 0x140025a6c
   14000f334:	cmp    WORD PTR [rsp+0x62],r14w
   14000f33a:	je     0x14000f474
   14000f340:	mov    rax,QWORD PTR [rsp+0x68]
   14000f345:	test   rax,rax
   14000f348:	je     0x14000f474
   14000f34e:	movsxd r12,DWORD PTR [rax]
   14000f351:	mov    ebx,0x800
   14000f356:	lea    r13,[rax+0x4]
   14000f35a:	add    r12,r13
   14000f35d:	cmp    DWORD PTR [rax],ebx
   14000f35f:	cmovl  ebx,DWORD PTR [rax]
   14000f362:	cmp    ecx,ebx
   14000f364:	jge    0x14000f3f1
   14000f36a:	lea    rdi,[rip+0x16717]        # 0x140025a88
   14000f371:	mov    edx,0x58
   14000f376:	mov    rcx,rbp
   14000f379:	call   0x140010b24
   14000f37e:	test   rax,rax
   14000f381:	je     0x14000f3eb
   14000f383:	mov    edx,DWORD PTR [rip+0x166e3]        # 0x140025a6c
   14000f389:	lea    rcx,[rax+0xb00]
   14000f390:	mov    QWORD PTR [rdi],rax
   14000f393:	add    edx,ebp
   14000f395:	mov    DWORD PTR [rip+0x166d1],edx        # 0x140025a6c
   14000f39b:	cmp    rax,rcx
   14000f39e:	jae    0x14000f3e1
   14000f3a0:	lea    rdx,[rax+0x9]
   14000f3a4:	or     QWORD PTR [rdx-0x9],0xffffffffffffffff
   14000f3a9:	and    BYTE PTR [rdx+0x2f],0x80
   14000f3ad:	mov    WORD PTR [rdx-0x1],0xa00
   14000f3b3:	mov    DWORD PTR [rdx+0x3],r14d
   14000f3b7:	mov    WORD PTR [rdx+0x30],0xa0a
   14000f3bd:	mov    DWORD PTR [rdx+0x47],r14d
   14000f3c1:	mov    BYTE PTR [rdx+0x43],r14b
   14000f3c5:	mov    rax,QWORD PTR [rdi]
   14000f3c8:	add    rdx,0x58
   14000f3cc:	lea    rcx,[rdx-0x9]
   14000f3d0:	add    rax,0xb00
   14000f3d6:	cmp    rcx,rax
   14000f3d9:	jb     0x14000f3a4
   14000f3db:	mov    edx,DWORD PTR [rip+0x1668b]        # 0x140025a6c
   14000f3e1:	add    rdi,0x8
   14000f3e5:	cmp    edx,ebx
   14000f3e7:	jl     0x14000f371
   14000f3e9:	jmp    0x14000f3f1
   14000f3eb:	mov    ebx,DWORD PTR [rip+0x1667b]        # 0x140025a6c
   14000f3f1:	mov    edi,r14d
   14000f3f4:	test   ebx,ebx
   14000f3f6:	jle    0x14000f474
   14000f3f8:	cmp    QWORD PTR [r12],0xffffffffffffffff
   14000f3fd:	je     0x14000f467
   14000f3ff:	cmp    QWORD PTR [r12],0xfffffffffffffffe
   14000f404:	je     0x14000f467
   14000f406:	test   BYTE PTR [r13+0x0],0x1
   14000f40b:	je     0x14000f467
   14000f40d:	test   BYTE PTR [r13+0x0],0x8
   14000f412:	jne    0x14000f422
   14000f414:	mov    rcx,QWORD PTR [r12]
   14000f418:	call   QWORD PTR [rip+0xae02]        # 0x14001a220
   14000f41e:	test   eax,eax
   14000f420:	je     0x14000f467
   14000f422:	movsxd rbp,edi
   14000f425:	lea    rcx,[rip+0x16654]        # 0x140025a80
   14000f42c:	mov    edx,0xfa0
   14000f431:	mov    rax,rbp
   14000f434:	and    ebp,0x1f
   14000f437:	sar    rax,0x5
   14000f43b:	imul   rbp,rbp,0x58
   14000f43f:	add    rbp,QWORD PTR [rcx+rax*8]
   14000f443:	mov    rax,QWORD PTR [r12]
   14000f447:	mov    QWORD PTR [rbp+0x0],rax
   14000f44b:	mov    al,BYTE PTR [r13+0x0]
   14000f44f:	lea    rcx,[rbp+0x10]
   14000f453:	mov    BYTE PTR [rbp+0x8],al
   14000f456:	call   QWORD PTR [rip+0xacfc]        # 0x14001a158
   14000f45c:	test   eax,eax
   14000f45e:	je     0x14000f2cd
   14000f464:	inc    DWORD PTR [rbp+0xc]
   14000f467:	inc    edi
   14000f469:	inc    r13
   14000f46c:	add    r12,0x8
   14000f470:	cmp    edi,ebx
   14000f472:	jl     0x14000f3f8
   14000f474:	mov    r12d,r14d
   14000f477:	mov    rbx,r14
   14000f47a:	mov    rdi,QWORD PTR [rip+0x165ff]        # 0x140025a80
   14000f481:	cmp    QWORD PTR [rbx+rdi*1],0xffffffffffffffff
   14000f486:	je     0x14000f499
   14000f488:	cmp    QWORD PTR [rbx+rdi*1],0xfffffffffffffffe
   14000f48d:	je     0x14000f499
   14000f48f:	or     BYTE PTR [rbx+rdi*1+0x8],0x80
   14000f494:	jmp    0x14000f51e
   14000f499:	lea    eax,[r12-0x1]
   14000f49e:	mov    BYTE PTR [rbx+rdi*1+0x8],0x81
   14000f4a3:	neg    eax
   14000f4a5:	mov    eax,0xfffffff6
   14000f4aa:	sbb    ecx,ecx
   14000f4ac:	add    ecx,0xfffffff5
   14000f4af:	test   r12d,r12d
   14000f4b2:	cmove  ecx,eax
   14000f4b5:	call   QWORD PTR [rip+0xad35]        # 0x14001a1f0
   14000f4bb:	mov    rbp,rax
   14000f4be:	cmp    rax,0xffffffffffffffff
   14000f4c2:	je     0x14000f511
   14000f4c4:	test   rax,rax
   14000f4c7:	je     0x14000f511
   14000f4c9:	mov    rcx,rax
   14000f4cc:	call   QWORD PTR [rip+0xad4e]        # 0x14001a220
   14000f4d2:	test   eax,eax
   14000f4d4:	je     0x14000f511
   14000f4d6:	movzx  eax,al
   14000f4d9:	mov    QWORD PTR [rbx+rdi*1],rbp
   14000f4dd:	cmp    eax,0x2
   14000f4e0:	jne    0x14000f4e9
   14000f4e2:	or     BYTE PTR [rbx+rdi*1+0x8],0x40
   14000f4e7:	jmp    0x14000f4f3
   14000f4e9:	cmp    eax,0x3
   14000f4ec:	jne    0x14000f4f3
   14000f4ee:	or     BYTE PTR [rbx+rdi*1+0x8],0x8
   14000f4f3:	lea    rcx,[rbx+rdi*1+0x10]
   14000f4f8:	mov    edx,0xfa0
   14000f4fd:	call   QWORD PTR [rip+0xac55]        # 0x14001a158
   14000f503:	test   eax,eax
   14000f505:	je     0x14000f2cd
   14000f50b:	inc    DWORD PTR [rbx+rdi*1+0xc]
   14000f50f:	jmp    0x14000f51e
   14000f511:	or     BYTE PTR [rbx+rdi*1+0x8],0x40
   14000f516:	mov    QWORD PTR [rbx+rdi*1],0xfffffffffffffffe
   14000f51e:	add    rbx,0x58
   14000f522:	inc    r12d
   14000f525:	cmp    rbx,0x108
   14000f52c:	jl     0x14000f47a
   14000f532:	mov    ecx,DWORD PTR [rip+0x16534]        # 0x140025a6c
   14000f538:	call   QWORD PTR [rip+0xacda]        # 0x14001a218
   14000f53e:	xor    eax,eax
   14000f540:	lea    r11,[rsp+0x90]
   14000f548:	mov    rbx,QWORD PTR [r11+0x20]
   14000f54c:	mov    rbp,QWORD PTR [r11+0x28]
   14000f550:	mov    rdi,QWORD PTR [r11+0x30]
   14000f554:	mov    rsp,r11
   14000f557:	pop    r14
   14000f559:	pop    r13
   14000f55b:	pop    r12
   14000f55d:	ret    
   14000f55e:	int3   
   14000f55f:	int3   
   14000f560:	sub    rsp,0x28
   14000f564:	xor    r8d,r8d
   14000f567:	mov    edx,0x1000
   14000f56c:	xor    ecx,ecx
   14000f56e:	mov    DWORD PTR [rsp+0x30],0x2
   14000f576:	call   QWORD PTR [rip+0xacc4]        # 0x14001a240
   14000f57c:	mov    QWORD PTR [rip+0x15e45],rax        # 0x1400253c8
   14000f583:	test   rax,rax
   14000f586:	je     0x14000f5b1
   14000f588:	call   QWORD PTR [rip+0xacaa]        # 0x14001a238
   14000f58e:	cmp    al,0x6
   14000f590:	jae    0x14000f5ac
   14000f592:	mov    rcx,QWORD PTR [rip+0x15e2f]        # 0x1400253c8
   14000f599:	lea    r8,[rsp+0x30]
   14000f59e:	mov    r9d,0x4
   14000f5a4:	xor    edx,edx
   14000f5a6:	call   QWORD PTR [rip+0xac84]        # 0x14001a230
   14000f5ac:	mov    eax,0x1
   14000f5b1:	add    rsp,0x28
   14000f5b5:	ret    
   14000f5b6:	int3   
   14000f5b7:	int3   
   14000f5b8:	mov    QWORD PTR [rsp+0x18],rbx
   14000f5bd:	push   rdi
   14000f5be:	sub    rsp,0x20
   14000f5c2:	mov    rax,QWORD PTR [rip+0x13af7]        # 0x1400230c0
   14000f5c9:	and    QWORD PTR [rsp+0x30],0x0
   14000f5cf:	movabs rdi,0x2b992ddfa232
   14000f5d9:	cmp    rax,rdi
   14000f5dc:	je     0x14000f5ea
   14000f5de:	not    rax
   14000f5e1:	mov    QWORD PTR [rip+0x13ae0],rax        # 0x1400230c8
   14000f5e8:	jmp    0x14000f660
   14000f5ea:	lea    rcx,[rsp+0x30]
   14000f5ef:	call   QWORD PTR [rip+0xac63]        # 0x14001a258
   14000f5f5:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f5fa:	call   QWORD PTR [rip+0xac50]        # 0x14001a250
   14000f600:	mov    r11d,eax
   14000f603:	xor    rbx,r11
   14000f606:	call   QWORD PTR [rip+0xab3c]        # 0x14001a148
   14000f60c:	mov    r11d,eax
   14000f60f:	xor    rbx,r11
   14000f612:	call   QWORD PTR [rip+0xac30]        # 0x14001a248
   14000f618:	lea    rcx,[rsp+0x38]
   14000f61d:	mov    r11d,eax
   14000f620:	xor    rbx,r11
   14000f623:	call   QWORD PTR [rip+0xaa27]        # 0x14001a050
   14000f629:	mov    r11,QWORD PTR [rsp+0x38]
   14000f62e:	xor    r11,rbx
   14000f631:	movabs rax,0xffffffffffff
   14000f63b:	and    r11,rax
   14000f63e:	movabs rax,0x2b992ddfa233
   14000f648:	cmp    r11,rdi
   14000f64b:	cmove  r11,rax
   14000f64f:	mov    QWORD PTR [rip+0x13a6a],r11        # 0x1400230c0
   14000f656:	not    r11
   14000f659:	mov    QWORD PTR [rip+0x13a68],r11        # 0x1400230c8
   14000f660:	mov    rbx,QWORD PTR [rsp+0x40]
   14000f665:	add    rsp,0x20
   14000f669:	pop    rdi
   14000f66a:	ret    
   14000f66b:	int3   
   14000f66c:	mov    QWORD PTR [rsp+0x8],rbx
   14000f671:	mov    QWORD PTR [rsp+0x10],rsi
   14000f676:	push   rdi
   14000f677:	sub    rsp,0x20
   14000f67b:	mov    rsi,r9
   14000f67e:	mov    rdi,r8
   14000f681:	mov    rbx,rdx
   14000f684:	cmp    rcx,QWORD PTR [rdx]
   14000f687:	jne    0x14000f6ed
   14000f689:	cmp    QWORD PTR [r8],r9
   14000f68c:	jne    0x14000f6cb
   14000f68e:	mov    rcx,QWORD PTR [rbx]
   14000f691:	mov    edx,0x2
   14000f696:	call   0x140010b24
   14000f69b:	mov    QWORD PTR [rdi],rax
   14000f69e:	test   rax,rax
   14000f6a1:	jne    0x14000f6a7
   14000f6a3:	xor    eax,eax
   14000f6a5:	jmp    0x14000f6f2
   14000f6a7:	mov    rax,QWORD PTR [rsp+0x50]
   14000f6ac:	mov    rdx,rsi
   14000f6af:	mov    DWORD PTR [rax],0x1
   14000f6b5:	mov    r8,QWORD PTR [rbx]
   14000f6b8:	mov    rcx,QWORD PTR [rdi]
   14000f6bb:	call   0x14000a140
   14000f6c0:	mov    r11,QWORD PTR [rbx]
   14000f6c3:	add    r11,r11
   14000f6c6:	mov    QWORD PTR [rbx],r11
   14000f6c9:	jmp    0x14000f6ed
   14000f6cb:	mov    rdx,QWORD PTR [rdx]
   14000f6ce:	mov    rcx,QWORD PTR [rdi]
   14000f6d1:	mov    r8d,0x2
   14000f6d7:	call   0x140010c30
   14000f6dc:	test   rax,rax
   14000f6df:	je     0x14000f6a3
   14000f6e1:	mov    QWORD PTR [rdi],rax
   14000f6e4:	mov    rcx,QWORD PTR [rbx]
   14000f6e7:	add    rcx,rcx
   14000f6ea:	mov    QWORD PTR [rbx],rcx
   14000f6ed:	mov    eax,0x1
   14000f6f2:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f6f7:	mov    rsi,QWORD PTR [rsp+0x38]
   14000f6fc:	add    rsp,0x20
   14000f700:	pop    rdi
   14000f701:	ret    
   14000f702:	int3   
   14000f703:	int3   
   14000f704:	sub    rsp,0x28
   14000f708:	dec    DWORD PTR [rcx+0x8]
   14000f70b:	js     0x14000f71b
   14000f70d:	mov    rax,QWORD PTR [rcx]
   14000f710:	movzx  edx,BYTE PTR [rax]
   14000f713:	inc    rax
   14000f716:	mov    QWORD PTR [rcx],rax
   14000f719:	jmp    0x14000f722
   14000f71b:	call   0x140010f1c
   14000f720:	mov    edx,eax
   14000f722:	mov    eax,edx
   14000f724:	add    rsp,0x28
   14000f728:	ret    
   14000f729:	int3   
   14000f72a:	int3   
   14000f72b:	int3   
   14000f72c:	mov    QWORD PTR [rsp+0x18],rbx
   14000f731:	push   rbp
   14000f732:	push   rsi
   14000f733:	push   rdi
   14000f734:	push   r12
   14000f736:	push   r13
   14000f738:	push   r14
   14000f73a:	push   r15
   14000f73c:	lea    rbp,[rsp-0x180]
   14000f744:	sub    rsp,0x280
   14000f74b:	mov    rax,QWORD PTR [rip+0x1396e]        # 0x1400230c0
   14000f752:	xor    rax,rsp
   14000f755:	mov    QWORD PTR [rbp+0x170],rax
   14000f75c:	xor    eax,eax
   14000f75e:	lea    r13,[rbp+0x10]
   14000f762:	mov    QWORD PTR [rbp-0x48],r9
   14000f766:	mov    rbx,r8
   14000f769:	mov    r12,rdx
   14000f76c:	mov    QWORD PTR [rsp+0x50],rdx
   14000f771:	mov    QWORD PTR [rsp+0x78],r13
   14000f776:	mov    rsi,rcx
   14000f779:	mov    QWORD PTR [rsp+0x68],rcx
   14000f77e:	mov    QWORD PTR [rbp-0x50],0x15e
   14000f786:	mov    DWORD PTR [rbp-0x7c],eax
   14000f789:	mov    WORD PTR [rbp-0x78],ax
   14000f78d:	mov    edi,eax
   14000f78f:	mov    DWORD PTR [rsp+0x3c],eax
   14000f793:	test   rdx,rdx
   14000f796:	jne    0x14000f7b0
   14000f798:	call   0x14000bdc0
   14000f79d:	mov    DWORD PTR [rax],0x16
   14000f7a3:	call   0x14000d01c
   14000f7a8:	or     eax,0xffffffff
   14000f7ab:	jmp    0x140010776
   14000f7b0:	test   rcx,rcx
   14000f7b3:	je     0x14000f798
   14000f7b5:	or     r15d,0xffffffff
   14000f7b9:	test   BYTE PTR [rcx+0x18],0x40
   14000f7bd:	jne    0x14000f83b
   14000f7bf:	call   0x140010a7c
   14000f7c4:	lea    rdx,[rip+0x140e5]        # 0x1400238b0
   14000f7cb:	lea    r9,[rip+0x162ae]        # 0x140025a80
   14000f7d2:	cmp    eax,r15d
   14000f7d5:	je     0x14000f7f4
   14000f7d7:	cmp    eax,0xfffffffe
   14000f7da:	je     0x14000f7f4
   14000f7dc:	movsxd r8,eax
   14000f7df:	mov    rcx,r8
   14000f7e2:	and    r8d,0x1f
   14000f7e6:	sar    rcx,0x5
   14000f7ea:	imul   r8,r8,0x58
   14000f7ee:	add    r8,QWORD PTR [r9+rcx*8]
   14000f7f2:	jmp    0x14000f7f7
   14000f7f4:	mov    r8,rdx
   14000f7f7:	test   BYTE PTR [r8+0x38],0x7f
   14000f7fc:	jne    0x14000f823
   14000f7fe:	cmp    eax,r15d
   14000f801:	je     0x14000f81d
   14000f803:	cmp    eax,0xfffffffe
   14000f806:	je     0x14000f81d
   14000f808:	movsxd rdx,eax
   14000f80b:	mov    rax,rdx
   14000f80e:	and    edx,0x1f
   14000f811:	sar    rax,0x5
   14000f815:	imul   rdx,rdx,0x58
   14000f819:	add    rdx,QWORD PTR [r9+rax*8]
   14000f81d:	test   BYTE PTR [rdx+0x38],0x80
   14000f821:	je     0x14000f83b
   14000f823:	call   0x14000bdc0
   14000f828:	mov    DWORD PTR [rax],0x16
   14000f82e:	call   0x14000d01c
   14000f833:	mov    eax,r15d
   14000f836:	jmp    0x140010776
   14000f83b:	lea    rcx,[rbp-0x38]
   14000f83f:	mov    rdx,rbx
   14000f842:	call   0x14000c6f4
   14000f847:	mov    al,BYTE PTR [r12]
   14000f84b:	xor    ebx,ebx
   14000f84d:	mov    BYTE PTR [rsp+0x39],bl
   14000f851:	mov    r14d,ebx
   14000f854:	mov    DWORD PTR [rsp+0x34],ebx
   14000f858:	mov    r13d,ebx
   14000f85b:	mov    DWORD PTR [rsp+0x70],ebx
   14000f85f:	test   al,al
   14000f861:	je     0x140010763
   14000f867:	lea    r13d,[rbx+0x1]
   14000f86b:	movzx  ecx,al
   14000f86e:	call   0x14000c89c
   14000f873:	test   eax,eax
   14000f875:	je     0x14000f8c7
   14000f877:	sub    r14d,r13d
   14000f87a:	add    r14d,r13d
   14000f87d:	mov    rcx,rsi
   14000f880:	mov    DWORD PTR [rsp+0x34],r14d
   14000f885:	call   0x14000f704
   14000f88a:	mov    ebx,eax
   14000f88c:	cmp    eax,r15d
   14000f88f:	je     0x14000f8a7
   14000f891:	movzx  ecx,al
   14000f894:	call   0x14000c89c
   14000f899:	test   eax,eax
   14000f89b:	jne    0x14000f87a
   14000f89d:	mov    rdx,rsi
   14000f8a0:	mov    ecx,ebx
   14000f8a2:	call   0x140015af0
   14000f8a7:	add    r12,r13
   14000f8aa:	movzx  ecx,BYTE PTR [r12]
   14000f8af:	call   0x14000c89c
   14000f8b4:	test   eax,eax
   14000f8b6:	jne    0x14000f8a7
   14000f8b8:	mov    rsi,QWORD PTR [rsp+0x68]
   14000f8bd:	mov    QWORD PTR [rsp+0x50],r12
   14000f8c2:	jmp    0x1400106fc
   14000f8c7:	mov    cl,0x25
   14000f8c9:	cmp    BYTE PTR [r12],cl
   14000f8cd:	jne    0x14001068f
   14000f8d3:	cmp    BYTE PTR [r12+0x1],cl
   14000f8d8:	je     0x14001067e
   14000f8de:	mov    r13,QWORD PTR [rsp+0x50]
   14000f8e3:	mov    edx,0x1
   14000f8e8:	mov    DWORD PTR [rsp+0x5c],ebx
   14000f8ec:	mov    BYTE PTR [rsp+0x38],dl
   14000f8f0:	mov    BYTE PTR [rbp-0x80],bl
   14000f8f3:	mov    DWORD PTR [rsp+0x4c],ebx
   14000f8f7:	mov    DWORD PTR [rsp+0x60],ebx
   14000f8fb:	mov    r14d,ebx
   14000f8fe:	mov    BYTE PTR [rsp+0x58],bl
   14000f902:	mov    BYTE PTR [rsp+0x40],bl
   14000f906:	mov    BYTE PTR [rsp+0x30],bl
   14000f90a:	mov    sil,bl
   14000f90d:	mov    BYTE PTR [rbp-0x58],bl
   14000f910:	mov    r12b,bl
   14000f913:	mov    edi,ebx
   14000f915:	add    r13,rdx
   14000f918:	movzx  ebx,BYTE PTR [r13+0x0]
   14000f91d:	mov    ecx,ebx
   14000f91f:	call   0x14000c798
   14000f924:	xor    r8d,r8d
   14000f927:	test   eax,eax
   14000f929:	je     0x14000f93e
   14000f92b:	lea    eax,[r14+r14*4]
   14000f92f:	lea    edx,[r8+0x1]
   14000f933:	add    DWORD PTR [rsp+0x60],edx
   14000f937:	lea    r14d,[rbx+rax*2-0x30]
   14000f93c:	jmp    0x14000f9a4
   14000f93e:	cmp    ebx,0x2a
   14000f941:	je     0x14000fa4e
   14000f947:	cmp    ebx,0x46
   14000f94a:	je     0x14000f99f
   14000f94c:	cmp    ebx,0x49
   14000f94f:	je     0x14000f9f4
   14000f955:	cmp    ebx,0x4c
   14000f958:	je     0x14000f9e9
   14000f95e:	cmp    ebx,0x4e
   14000f961:	je     0x14000f99f
   14000f963:	cmp    ebx,0x68
   14000f966:	je     0x14000f997
   14000f968:	mov    edx,0x1
   14000f96d:	cmp    ebx,0x6c
   14000f970:	je     0x14000f97c
   14000f972:	cmp    ebx,0x77
   14000f975:	je     0x14000f992
   14000f977:	jmp    0x14000fa46
   14000f97c:	cmp    BYTE PTR [r13+0x1],0x6c
   14000f981:	jne    0x14000f98e
   14000f983:	inc    r13
   14000f986:	add    edi,edx
   14000f988:	mov    QWORD PTR [rbp-0x70],r8
   14000f98c:	jmp    0x14000f9a4
   14000f98e:	add    BYTE PTR [rsp+0x38],dl
   14000f992:	add    r12b,dl
   14000f995:	jmp    0x14000f9a4
   14000f997:	add    BYTE PTR [rsp+0x38],r15b
   14000f99c:	add    r12b,r15b
   14000f99f:	mov    edx,0x1
   14000f9a4:	mov    cl,BYTE PTR [rsp+0x30]
   14000f9a8:	test   sil,sil
   14000f9ab:	je     0x14000f915
   14000f9b1:	mov    DWORD PTR [rsp+0x48],edi
   14000f9b5:	mov    edi,DWORD PTR [rsp+0x3c]
   14000f9b9:	mov    QWORD PTR [rsp+0x50],r13
   14000f9be:	mov    r13b,BYTE PTR [rbp-0x80]
   14000f9c2:	mov    DWORD PTR [rsp+0x44],r14d
   14000f9c7:	test   cl,cl
   14000f9c9:	jne    0x14000fa62
   14000f9cf:	mov    rax,QWORD PTR [rbp-0x48]
   14000f9d3:	mov    QWORD PTR [rbp-0x18],rax
   14000f9d7:	add    rax,0x8
   14000f9db:	mov    QWORD PTR [rbp-0x48],rax
   14000f9df:	mov    rax,QWORD PTR [rax-0x8]
   14000f9e3:	mov    QWORD PTR [rbp-0x60],rax
   14000f9e7:	jmp    0x14000fa66
   14000f9e9:	mov    edx,0x1
   14000f9ee:	add    BYTE PTR [rsp+0x38],dl
   14000f9f2:	jmp    0x14000f9a4
   14000f9f4:	mov    al,BYTE PTR [r13+0x1]
   14000f9f8:	cmp    al,0x36
   14000f9fa:	jne    0x14000fa12
   14000f9fc:	lea    rcx,[r13+0x2]
   14000fa00:	cmp    BYTE PTR [rcx],0x34
   14000fa03:	jne    0x14000fa12
   14000fa05:	mov    r13,rcx
   14000fa08:	mov    edx,0x1
   14000fa0d:	jmp    0x14000f986
   14000fa12:	cmp    al,0x33
   14000fa14:	jne    0x14000fa27
   14000fa16:	lea    rcx,[r13+0x2]
   14000fa1a:	cmp    BYTE PTR [rcx],0x32
   14000fa1d:	jne    0x14000fa27
   14000fa1f:	mov    r13,rcx
   14000fa22:	jmp    0x14000f99f
   14000fa27:	cmp    al,0x64
   14000fa29:	je     0x14000fa08
   14000fa2b:	cmp    al,0x69
   14000fa2d:	je     0x14000fa08
   14000fa2f:	cmp    al,0x6f
   14000fa31:	je     0x14000fa08
   14000fa33:	cmp    al,0x78
   14000fa35:	je     0x14000fa08
   14000fa37:	cmp    al,0x58
   14000fa39:	je     0x14000fa08
   14000fa3b:	mov    edx,0x1
   14000fa40:	mov    QWORD PTR [rbp-0x70],r8
   14000fa44:	add    edi,edx
   14000fa46:	add    sil,dl
   14000fa49:	jmp    0x14000f9a4
   14000fa4e:	mov    cl,BYTE PTR [rsp+0x30]
   14000fa52:	mov    edx,0x1
   14000fa57:	add    cl,dl
   14000fa59:	mov    BYTE PTR [rsp+0x30],cl
   14000fa5d:	jmp    0x14000f9a8
   14000fa62:	mov    QWORD PTR [rbp-0x60],r8
   14000fa66:	mov    rax,QWORD PTR [rsp+0x50]
   14000fa6b:	mov    bl,r8b
   14000fa6e:	test   r12b,r12b
   14000fa71:	jne    0x14000fa83
   14000fa73:	cmp    BYTE PTR [rax],0x53
   14000fa76:	je     0x14000fa80
   14000fa78:	cmp    BYTE PTR [rax],0x43
   14000fa7b:	mov    r12b,r15b
   14000fa7e:	jne    0x14000fa83
   14000fa80:	mov    r12b,dl
   14000fa83:	movzx  r14d,BYTE PTR [rax]
   14000fa87:	or     r14d,0x20
   14000fa8b:	mov    DWORD PTR [rbp-0x40],r14d
   14000fa8f:	cmp    r14d,0x6e
   14000fa93:	je     0x14000fb01
   14000fa95:	cmp    r14d,0x63
   14000fa99:	je     0x14000fadd
   14000fa9b:	cmp    r14d,0x7b
   14000fa9f:	je     0x14000fadd
   14000faa1:	mov    rsi,QWORD PTR [rsp+0x68]
   14000faa6:	mov    r14d,DWORD PTR [rsp+0x34]
   14000faab:	mov    rcx,rsi
   14000faae:	add    r14d,edx
   14000fab1:	call   0x14000f704
   14000fab6:	mov    edi,eax
   14000fab8:	mov    DWORD PTR [rsp+0x3c],eax
   14000fabc:	cmp    eax,r15d
   14000fabf:	je     0x14000fad2
   14000fac1:	movzx  ecx,al
   14000fac4:	call   0x14000c89c
   14000fac9:	mov    edx,0x1
   14000face:	test   eax,eax
   14000fad0:	jne    0x14000faab
   14000fad2:	mov    DWORD PTR [rsp+0x34],r14d
   14000fad7:	mov    r14d,DWORD PTR [rbp-0x40]
   14000fadb:	jmp    0x14000faf1
   14000fadd:	mov    rcx,QWORD PTR [rsp+0x68]
   14000fae2:	add    DWORD PTR [rsp+0x34],edx
   14000fae6:	call   0x14000f704
   14000faeb:	mov    edi,eax
   14000faed:	mov    DWORD PTR [rsp+0x3c],eax
   14000faf1:	cmp    edi,r15d
   14000faf4:	je     0x14000fdc2
   14000fafa:	mov    cl,BYTE PTR [rsp+0x30]
   14000fafe:	xor    r8d,r8d
   14000fb01:	mov    eax,DWORD PTR [rsp+0x60]
   14000fb05:	mov    esi,DWORD PTR [rsp+0x44]
   14000fb09:	test   eax,eax
   14000fb0b:	je     0x14000fb15
   14000fb0d:	test   esi,esi
   14000fb0f:	je     0x14001070f
   14000fb15:	cmp    r14d,0x6f
   14000fb19:	jg     0x14000ff42
   14000fb1f:	je     0x140010415
   14000fb25:	cmp    r14d,0x63
   14000fb29:	je     0x14000ff16
   14000fb2f:	cmp    r14d,0x64
   14000fb33:	je     0x140010415
   14000fb39:	jle    0x14000ff70
   14000fb3f:	cmp    r14d,0x67
   14000fb43:	jle    0x14000fb8b
   14000fb45:	cmp    r14d,0x69
   14000fb49:	je     0x14000fb6e
   14000fb4b:	cmp    r14d,0x6e
   14000fb4f:	jne    0x14000ff70
   14000fb55:	mov    eax,DWORD PTR [rsp+0x34]
   14000fb59:	test   cl,cl
   14000fb5b:	je     0x14001062b
   14000fb61:	mov    r12,QWORD PTR [rsp+0x50]
   14000fb66:	mov    r14d,eax
   14000fb69:	jmp    0x140010664
   14000fb6e:	mov    r14d,0x64
   14000fb74:	mov    ecx,0x1
   14000fb79:	cmp    edi,0x2d
   14000fb7c:	jne    0x1400100ab
   14000fb82:	mov    BYTE PTR [rsp+0x40],cl
   14000fb86:	jmp    0x1400100b0
   14000fb8b:	mov    rbx,r8
   14000fb8e:	mov    esi,0x1
   14000fb93:	cmp    edi,0x2d
   14000fb96:	jne    0x14000fba4
   14000fb98:	mov    rax,QWORD PTR [rsp+0x78]
   14000fb9d:	mov    ebx,esi
   14000fb9f:	mov    BYTE PTR [rax],dil
   14000fba2:	jmp    0x14000fba9
   14000fba4:	cmp    edi,0x2b
   14000fba7:	jne    0x14000fbd2
   14000fba9:	mov    r13,QWORD PTR [rsp+0x68]
   14000fbae:	mov    r12d,DWORD PTR [rsp+0x44]
   14000fbb3:	mov    r14d,DWORD PTR [rsp+0x34]
   14000fbb8:	mov    rcx,r13
   14000fbbb:	sub    r12d,esi
   14000fbbe:	add    r14d,esi
   14000fbc1:	call   0x14000f704
   14000fbc6:	mov    edi,eax
   14000fbc8:	mov    DWORD PTR [rsp+0x3c],eax
   14000fbcc:	mov    eax,DWORD PTR [rsp+0x60]
   14000fbd0:	jmp    0x14000fbe1
   14000fbd2:	mov    r12d,DWORD PTR [rsp+0x44]
   14000fbd7:	mov    r13,QWORD PTR [rsp+0x68]
   14000fbdc:	mov    r14d,DWORD PTR [rsp+0x34]
   14000fbe1:	test   eax,eax
   14000fbe3:	movzx  ecx,dil
   14000fbe7:	cmove  r12d,r15d
   14000fbeb:	jmp    0x14000fc41
   14000fbed:	mov    eax,r12d
   14000fbf0:	sub    r12d,esi
   14000fbf3:	test   eax,eax
   14000fbf5:	je     0x14000fc4a
   14000fbf7:	mov    rax,QWORD PTR [rsp+0x78]
   14000fbfc:	add    DWORD PTR [rsp+0x4c],esi
   14000fc00:	lea    r9,[rbp+0x10]
   14000fc04:	mov    BYTE PTR [rbx+rax*1],dil
   14000fc08:	lea    rax,[rbp-0x7c]
   14000fc0c:	add    rbx,rsi
   14000fc0f:	lea    r8,[rsp+0x78]
   14000fc14:	lea    rdx,[rbp-0x50]
   14000fc18:	mov    rcx,rbx
   14000fc1b:	mov    QWORD PTR [rsp+0x20],rax
   14000fc20:	call   0x14000f66c
   14000fc25:	test   eax,eax
   14000fc27:	je     0x14000fdc2
   14000fc2d:	mov    rcx,r13
   14000fc30:	add    r14d,esi
   14000fc33:	call   0x14000f704
   14000fc38:	mov    edi,eax
   14000fc3a:	mov    DWORD PTR [rsp+0x3c],eax
   14000fc3e:	movzx  ecx,al
   14000fc41:	call   0x14000c798
   14000fc46:	test   eax,eax
   14000fc48:	jne    0x14000fbed
   14000fc4a:	mov    rax,QWORD PTR [rbp-0x38]
   14000fc4e:	mov    rcx,QWORD PTR [rax+0x128]
   14000fc55:	mov    rax,QWORD PTR [rcx]
   14000fc58:	mov    ecx,0x1
   14000fc5d:	mov    sil,BYTE PTR [rax]
   14000fc60:	cmp    sil,dil
   14000fc63:	jne    0x14000fd25
   14000fc69:	mov    eax,r12d
   14000fc6c:	sub    r12d,ecx
   14000fc6f:	test   eax,eax
   14000fc71:	je     0x14000fd25
   14000fc77:	add    r14d,ecx
   14000fc7a:	mov    rcx,r13
   14000fc7d:	call   0x14000f704
   14000fc82:	lea    r9,[rbp+0x10]
   14000fc86:	lea    r8,[rsp+0x78]
   14000fc8b:	mov    edi,eax
   14000fc8d:	mov    DWORD PTR [rsp+0x3c],eax
   14000fc91:	mov    rax,QWORD PTR [rsp+0x78]
   14000fc96:	mov    BYTE PTR [rbx+rax*1],sil
   14000fc9a:	lea    rax,[rbp-0x7c]
   14000fc9e:	mov    esi,0x1
   14000fca3:	add    rbx,rsi
   14000fca6:	lea    rdx,[rbp-0x50]
   14000fcaa:	mov    QWORD PTR [rsp+0x20],rax
   14000fcaf:	mov    rcx,rbx
   14000fcb2:	call   0x14000f66c
   14000fcb7:	test   eax,eax
   14000fcb9:	je     0x14000fdc2
   14000fcbf:	movzx  ecx,dil
   14000fcc3:	jmp    0x14000fd19
   14000fcc5:	mov    eax,r12d
   14000fcc8:	sub    r12d,esi
   14000fccb:	test   eax,eax
   14000fccd:	je     0x14000fd22
   14000fccf:	mov    rax,QWORD PTR [rsp+0x78]
   14000fcd4:	add    DWORD PTR [rsp+0x4c],esi
   14000fcd8:	lea    r9,[rbp+0x10]
   14000fcdc:	mov    BYTE PTR [rbx+rax*1],dil
   14000fce0:	lea    rax,[rbp-0x7c]
   14000fce4:	add    rbx,rsi
   14000fce7:	lea    r8,[rsp+0x78]
   14000fcec:	lea    rdx,[rbp-0x50]
   14000fcf0:	mov    rcx,rbx
   14000fcf3:	mov    QWORD PTR [rsp+0x20],rax
   14000fcf8:	call   0x14000f66c
   14000fcfd:	test   eax,eax
   14000fcff:	je     0x14000fdc2
   14000fd05:	mov    rcx,r13
   14000fd08:	add    r14d,esi
   14000fd0b:	call   0x14000f704
   14000fd10:	mov    edi,eax
   14000fd12:	mov    DWORD PTR [rsp+0x3c],eax
   14000fd16:	movzx  ecx,al
   14000fd19:	call   0x14000c798
   14000fd1e:	test   eax,eax
   14000fd20:	jne    0x14000fcc5
   14000fd22:	mov    rcx,rsi
   14000fd25:	mov    esi,DWORD PTR [rsp+0x4c]
   14000fd29:	test   esi,esi
   14000fd2b:	je     0x14000fea0
   14000fd31:	cmp    edi,0x65
   14000fd34:	je     0x14000fd3f
   14000fd36:	cmp    edi,0x45
   14000fd39:	jne    0x14000fea0
   14000fd3f:	mov    eax,r12d
   14000fd42:	sub    r12d,ecx
   14000fd45:	test   eax,eax
   14000fd47:	je     0x14000fea0
   14000fd4d:	mov    rax,QWORD PTR [rsp+0x78]
   14000fd52:	lea    r9,[rbp+0x10]
   14000fd56:	lea    r8,[rsp+0x78]
   14000fd5b:	mov    BYTE PTR [rbx+rax*1],0x65
   14000fd5f:	add    rbx,rcx
   14000fd62:	lea    rax,[rbp-0x7c]
   14000fd66:	lea    rdx,[rbp-0x50]
   14000fd6a:	mov    rcx,rbx
   14000fd6d:	mov    QWORD PTR [rsp+0x20],rax
   14000fd72:	call   0x14000f66c
   14000fd77:	test   eax,eax
   14000fd79:	je     0x14000fdc2
   14000fd7b:	mov    rcx,r13
   14000fd7e:	inc    r14d
   14000fd81:	call   0x14000f704
   14000fd86:	mov    edi,eax
   14000fd88:	mov    DWORD PTR [rsp+0x3c],eax
   14000fd8c:	cmp    eax,0x2d
   14000fd8f:	jne    0x14000fe0d
   14000fd91:	mov    rax,QWORD PTR [rsp+0x78]
   14000fd96:	lea    r9,[rbp+0x10]
   14000fd9a:	lea    r8,[rsp+0x78]
   14000fd9f:	mov    BYTE PTR [rbx+rax*1],dil
   14000fda3:	lea    rax,[rbp-0x7c]
   14000fda7:	inc    rbx
   14000fdaa:	lea    rdx,[rbp-0x50]
   14000fdae:	mov    rcx,rbx
   14000fdb1:	mov    QWORD PTR [rsp+0x20],rax
   14000fdb6:	call   0x14000f66c
   14000fdbb:	xor    r8d,r8d
   14000fdbe:	test   eax,eax
   14000fdc0:	jne    0x14000fe15
   14000fdc2:	xor    ebx,ebx
   14000fdc4:	mov    eax,0x1
   14000fdc9:	cmp    DWORD PTR [rbp-0x7c],eax
   14000fdcc:	jne    0x14000fdd8
   14000fdce:	mov    rcx,QWORD PTR [rsp+0x78]
   14000fdd3:	call   0x14000b460
   14000fdd8:	cmp    edi,r15d
   14000fddb:	jne    0x14001075e
   14000fde1:	mov    eax,DWORD PTR [rsp+0x70]
   14000fde5:	test   eax,eax
   14000fde7:	jne    0x14000fdf1
   14000fde9:	mov    dl,BYTE PTR [rsp+0x39]
   14000fded:	test   dl,dl
   14000fdef:	je     0x14000fdf4
   14000fdf1:	mov    r15d,eax
   14000fdf4:	cmp    BYTE PTR [rbp-0x20],bl
   14000fdf7:	je     0x14000f833
   14000fdfd:	mov    rcx,QWORD PTR [rbp-0x28]
   14000fe01:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000fe08:	jmp    0x14000f833
   14000fe0d:	cmp    eax,0x2b
   14000fe10:	jne    0x14000fe3a
   14000fe12:	xor    r8d,r8d
   14000fe15:	mov    eax,r12d
   14000fe18:	mov    ecx,0x1
   14000fe1d:	sub    r12d,ecx
   14000fe20:	test   eax,eax
   14000fe22:	jne    0x14000fe29
   14000fe24:	mov    r12d,r8d
   14000fe27:	jmp    0x14000fe3a
   14000fe29:	add    r14d,ecx
   14000fe2c:	mov    rcx,r13
   14000fe2f:	call   0x14000f704
   14000fe34:	mov    edi,eax
   14000fe36:	mov    DWORD PTR [rsp+0x3c],eax
   14000fe3a:	movzx  ecx,dil
   14000fe3e:	jmp    0x14000fe97
   14000fe40:	mov    eax,r12d
   14000fe43:	mov    ecx,0x1
   14000fe48:	sub    r12d,ecx
   14000fe4b:	test   eax,eax
   14000fe4d:	je     0x14000fea0
   14000fe4f:	mov    rax,QWORD PTR [rsp+0x78]
   14000fe54:	add    esi,ecx
   14000fe56:	lea    r9,[rbp+0x10]
   14000fe5a:	mov    BYTE PTR [rbx+rax*1],dil
   14000fe5e:	add    rbx,rcx
   14000fe61:	lea    rax,[rbp-0x7c]
   14000fe65:	lea    r8,[rsp+0x78]
   14000fe6a:	lea    rdx,[rbp-0x50]
   14000fe6e:	mov    rcx,rbx
   14000fe71:	mov    QWORD PTR [rsp+0x20],rax
   14000fe76:	call   0x14000f66c
   14000fe7b:	test   eax,eax
   14000fe7d:	je     0x14000fdc2
   14000fe83:	mov    rcx,r13
   14000fe86:	inc    r14d
   14000fe89:	call   0x14000f704
   14000fe8e:	mov    edi,eax
   14000fe90:	mov    DWORD PTR [rsp+0x3c],eax
   14000fe94:	movzx  ecx,al
   14000fe97:	call   0x14000c798
   14000fe9c:	test   eax,eax
   14000fe9e:	jne    0x14000fe40
   14000fea0:	mov    eax,0x1
   14000fea5:	sub    r14d,eax
   14000fea8:	mov    DWORD PTR [rsp+0x34],r14d
   14000fead:	cmp    edi,r15d
   14000feb0:	je     0x14000fec1
   14000feb2:	mov    rdx,r13
   14000feb5:	mov    ecx,edi
   14000feb7:	call   0x140015af0
   14000febc:	mov    eax,0x1
   14000fec1:	xor    r8d,r8d
   14000fec4:	test   esi,esi
   14000fec6:	je     0x14000fdc2
   14000fecc:	cmp    BYTE PTR [rsp+0x30],r8b
   14000fed1:	jne    0x14000ff0c
   14000fed3:	mov    r13d,DWORD PTR [rsp+0x70]
   14000fed8:	mov    rsi,QWORD PTR [rsp+0x78]
   14000fedd:	mov    BYTE PTR [rbx+rsi*1],r8b
   14000fee1:	movsx  ebx,BYTE PTR [rsp+0x38]
   14000fee6:	mov    rcx,QWORD PTR [rip+0x1399b]        # 0x140023888
   14000feed:	add    r13d,eax
   14000fef0:	sub    ebx,eax
   14000fef2:	mov    DWORD PTR [rsp+0x70],r13d
   14000fef7:	call   QWORD PTR [rip+0xa1e3]        # 0x14001a0e0
   14000fefd:	mov    rdx,QWORD PTR [rbp-0x60]
   14000ff01:	lea    r9,[rbp-0x38]
   14000ff05:	mov    r8,rsi
   14000ff08:	mov    ecx,ebx
   14000ff0a:	call   rax
   14000ff0c:	mov    r12,QWORD PTR [rsp+0x50]
   14000ff11:	jmp    0x140010664
   14000ff16:	mov    r11d,0x1
   14000ff1c:	test   eax,eax
   14000ff1e:	jne    0x14000ff2c
   14000ff20:	add    esi,r11d
   14000ff23:	mov    DWORD PTR [rsp+0x60],r11d
   14000ff28:	mov    DWORD PTR [rsp+0x44],esi
   14000ff2c:	test   r12b,r12b
   14000ff2f:	mov    r12,QWORD PTR [rsp+0x50]
   14000ff34:	jle    0x14001023c
   14000ff3a:	mov    sil,r11b
   14000ff3d:	jmp    0x14001023f
   14000ff42:	cmp    r14d,0x70
   14000ff46:	je     0x1400103fe
   14000ff4c:	cmp    r14d,0x73
   14000ff50:	je     0x140010224
   14000ff56:	cmp    r14d,0x75
   14000ff5a:	je     0x140010415
   14000ff60:	cmp    r14d,0x78
   14000ff64:	je     0x14000fb74
   14000ff6a:	cmp    r14d,0x7b
   14000ff6e:	je     0x14000ffa7
   14000ff70:	mov    r12,QWORD PTR [rsp+0x50]
   14000ff75:	movzx  eax,BYTE PTR [r12]
   14000ff7a:	cmp    eax,edi
   14000ff7c:	jne    0x14001070f
   14000ff82:	mov    dl,BYTE PTR [rsp+0x39]
   14000ff86:	mov    r14d,DWORD PTR [rsp+0x34]
   14000ff8b:	add    dl,r15b
   14000ff8e:	mov    BYTE PTR [rsp+0x39],dl
   14000ff92:	test   cl,cl
   14000ff94:	jne    0x140010664
   14000ff9a:	mov    r9,QWORD PTR [rbp-0x18]
   14000ff9e:	mov    QWORD PTR [rbp-0x48],r9
   14000ffa2:	jmp    0x140010664
   14000ffa7:	mov    esi,DWORD PTR [rbp-0x58]
   14000ffaa:	test   r12b,r12b
   14000ffad:	mov    r12,QWORD PTR [rsp+0x50]
   14000ffb2:	mov    eax,0x1
   14000ffb7:	movzx  esi,sil
   14000ffbb:	cmovg  esi,eax
   14000ffbe:	add    r12,rax
   14000ffc1:	cmp    BYTE PTR [r12],0x5e
   14000ffc6:	jne    0x14000ffd0
   14000ffc8:	inc    r12
   14000ffcb:	mov    BYTE PTR [rsp+0x58],r15b
   14000ffd0:	xor    edx,edx
   14000ffd2:	lea    rcx,[rbp-0x10]
   14000ffd6:	lea    r8d,[rdx+0x20]
   14000ffda:	call   0x14000a530
   14000ffdf:	cmp    BYTE PTR [r12],0x5d
   14000ffe4:	mov    r11d,0x1
   14000ffea:	jne    0x140010090
   14000fff0:	mov    r13b,0x5d
   14000fff3:	add    r12,r11
   14000fff6:	mov    BYTE PTR [rbp-0x5],0x20
   14000fffa:	jmp    0x140010090
   14000ffff:	add    r12,r11
   140010002:	cmp    al,0x2d
   140010004:	jne    0x140010073
   140010006:	test   r13b,r13b
   140010009:	je     0x140010073
   14001000b:	mov    cl,BYTE PTR [r12]
   14001000f:	cmp    cl,0x5d
   140010012:	je     0x140010073
   140010014:	add    r12,r11
   140010017:	cmp    r13b,cl
   14001001a:	jae    0x140010021
   14001001c:	mov    r9b,cl
   14001001f:	jmp    0x140010027
   140010021:	mov    r9b,r13b
   140010024:	mov    r13b,cl
   140010027:	cmp    r13b,r9b
   14001002a:	jae    0x140010053
   14001002c:	movzx  r10d,r13b
   140010030:	movzx  ecx,r13b
   140010034:	mov    r8,r10
   140010037:	mov    edx,r11d
   14001003a:	and    ecx,0x7
   14001003d:	shr    r8,0x3
   140010041:	add    r13b,r11b
   140010044:	shl    dl,cl
   140010046:	add    r10,r11
   140010049:	or     BYTE PTR [rbp+r8*1-0x10],dl
   14001004e:	cmp    r13b,r9b
   140010051:	jb     0x140010030
   140010053:	movzx  eax,r9b
   140010057:	movzx  r8d,r9b
   14001005b:	mov    edx,r11d
   14001005e:	and    eax,0x7
   140010061:	shr    r8,0x3
   140010065:	mov    cl,al
   140010067:	shl    dl,cl
   140010069:	or     BYTE PTR [rbp+r8*1-0x10],dl
   14001006e:	xor    r13b,r13b
   140010071:	jmp    0x140010090
   140010073:	movzx  r8d,al
   140010077:	mov    r13b,al
   14001007a:	movzx  eax,al
   14001007d:	and    eax,0x7
   140010080:	mov    edx,r11d
   140010083:	shr    r8,0x3
   140010087:	mov    cl,al
   140010089:	shl    dl,cl
   14001008b:	or     BYTE PTR [rbp+r8*1-0x10],dl
   140010090:	mov    al,BYTE PTR [r12]
   140010094:	cmp    al,0x5d
   140010096:	jne    0x14000ffff
   14001009c:	xor    ebx,ebx
   14001009e:	cmp    al,bl
   1400100a0:	je     0x14000fdc4
   1400100a6:	jmp    0x14001023f
   1400100ab:	cmp    edi,0x2b
   1400100ae:	jne    0x1400100c6
   1400100b0:	sub    esi,ecx
   1400100b2:	mov    DWORD PTR [rsp+0x44],esi
   1400100b6:	jne    0x140010190
   1400100bc:	test   eax,eax
   1400100be:	je     0x140010190
   1400100c4:	mov    bl,cl
   1400100c6:	mov    r13d,DWORD PTR [rsp+0x34]
   1400100cb:	mov    r12,QWORD PTR [rsp+0x68]
   1400100d0:	cmp    edi,0x30
   1400100d3:	jne    0x140010128
   1400100d5:	add    r13d,ecx
   1400100d8:	mov    rcx,r12
   1400100db:	mov    DWORD PTR [rsp+0x34],r13d
   1400100e0:	call   0x14000f704
   1400100e5:	mov    edi,eax
   1400100e7:	mov    DWORD PTR [rsp+0x3c],eax
   1400100eb:	cmp    al,0x78
   1400100ed:	je     0x1400101e4
   1400100f3:	cmp    al,0x58
   1400100f5:	je     0x1400101e4
   1400100fb:	mov    eax,0x1
   140010100:	mov    DWORD PTR [rsp+0x4c],eax
   140010104:	cmp    r14d,0x78
   140010108:	je     0x1400101bc
   14001010e:	xor    r8d,r8d
   140010111:	cmp    DWORD PTR [rsp+0x60],r8d
   140010116:	je     0x140010122
   140010118:	sub    esi,eax
   14001011a:	mov    DWORD PTR [rsp+0x44],esi
   14001011e:	jne    0x140010122
   140010120:	add    bl,al
   140010122:	mov    r14d,0x6f
   140010128:	mov    r12d,DWORD PTR [rsp+0x48]
   14001012d:	test   r12d,r12d
   140010130:	je     0x140010514
   140010136:	mov    rsi,QWORD PTR [rbp-0x70]
   14001013a:	test   bl,bl
   14001013c:	jne    0x1400104fd
   140010142:	mov    r13d,DWORD PTR [rsp+0x44]
   140010147:	mov    rbx,QWORD PTR [rsp+0x68]
   14001014c:	cmp    r14d,0x78
   140010150:	je     0x14001046b
   140010156:	cmp    r14d,0x70
   14001015a:	je     0x14001046b
   140010160:	movzx  ecx,dil
   140010164:	call   0x14000c798
   140010169:	xor    r8d,r8d
   14001016c:	test   eax,eax
   14001016e:	je     0x1400104e3
   140010174:	cmp    r14d,0x6f
   140010178:	jne    0x140010462
   14001017e:	cmp    edi,0x38
   140010181:	jge    0x1400104e3
   140010187:	shl    rsi,0x3
   14001018b:	jmp    0x1400104a5
   140010190:	mov    r13d,DWORD PTR [rsp+0x34]
   140010195:	mov    r12,QWORD PTR [rsp+0x68]
   14001019a:	add    r13d,ecx
   14001019d:	mov    rcx,r12
   1400101a0:	mov    DWORD PTR [rsp+0x34],r13d
   1400101a5:	call   0x14000f704
   1400101aa:	xor    r8d,r8d
   1400101ad:	mov    edi,eax
   1400101af:	mov    DWORD PTR [rsp+0x3c],eax
   1400101b3:	lea    ecx,[r8+0x1]
   1400101b7:	jmp    0x1400100d0
   1400101bc:	sub    r13d,eax
   1400101bf:	mov    DWORD PTR [rsp+0x34],r13d
   1400101c4:	cmp    edi,r15d
   1400101c7:	je     0x1400101d3
   1400101c9:	mov    rdx,r12
   1400101cc:	mov    ecx,edi
   1400101ce:	call   0x140015af0
   1400101d3:	mov    edi,0x30
   1400101d8:	xor    r8d,r8d
   1400101db:	mov    DWORD PTR [rsp+0x3c],edi
   1400101df:	jmp    0x140010128
   1400101e4:	mov    r14d,0x1
   1400101ea:	mov    rcx,r12
   1400101ed:	add    r13d,r14d
   1400101f0:	mov    DWORD PTR [rsp+0x34],r13d
   1400101f5:	call   0x14000f704
   1400101fa:	xor    r8d,r8d
   1400101fd:	mov    edi,eax
   1400101ff:	mov    DWORD PTR [rsp+0x3c],eax
   140010203:	cmp    DWORD PTR [rsp+0x60],r8d
   140010208:	je     0x140010219
   14001020a:	sub    esi,0x2
   14001020d:	mov    DWORD PTR [rsp+0x44],esi
   140010211:	cmp    esi,r14d
   140010214:	jge    0x140010219
   140010216:	add    bl,r14b
   140010219:	mov    r14d,0x78
   14001021f:	jmp    0x140010128
   140010224:	movzx  esi,BYTE PTR [rbp-0x58]
   140010228:	test   r12b,r12b
   14001022b:	mov    r12,QWORD PTR [rsp+0x50]
   140010230:	mov    r11d,0x1
   140010236:	cmovg  esi,r11d
   14001023a:	jmp    0x14001023f
   14001023c:	mov    esi,DWORD PTR [rbp-0x58]
   14001023f:	mov    ecx,DWORD PTR [rsp+0x34]
   140010243:	mov    rbx,QWORD PTR [rbp-0x60]
   140010247:	sub    ecx,r11d
   14001024a:	mov    DWORD PTR [rsp+0x34],ecx
   14001024e:	cmp    edi,r15d
   140010251:	je     0x140010269
   140010253:	mov    rdx,QWORD PTR [rsp+0x68]
   140010258:	mov    ecx,edi
   14001025a:	call   0x140015af0
   14001025f:	mov    ecx,DWORD PTR [rsp+0x34]
   140010263:	mov    r11d,0x1
   140010269:	mov    r13d,DWORD PTR [rsp+0x44]
   14001026e:	xor    r8d,r8d
   140010271:	cmp    DWORD PTR [rsp+0x60],r8d
   140010276:	je     0x140010286
   140010278:	mov    eax,r13d
   14001027b:	sub    r13d,r11d
   14001027e:	test   eax,eax
   140010280:	je     0x1400103bc
   140010286:	add    ecx,r11d
   140010289:	mov    DWORD PTR [rsp+0x34],ecx
   14001028d:	mov    rcx,QWORD PTR [rsp+0x68]
   140010292:	call   0x14000f704
   140010297:	movsxd rdi,eax
   14001029a:	mov    DWORD PTR [rsp+0x3c],edi
   14001029e:	cmp    edi,r15d
   1400102a1:	je     0x140010397
   1400102a7:	cmp    r14d,0x63
   1400102ab:	je     0x1400102f1
   1400102ad:	cmp    r14d,0x73
   1400102b1:	jne    0x1400102c6
   1400102b3:	cmp    edi,0x9
   1400102b6:	jl     0x1400102c1
   1400102b8:	cmp    edi,0xd
   1400102bb:	jle    0x140010397
   1400102c1:	cmp    edi,0x20
   1400102c4:	jne    0x1400102f1
   1400102c6:	cmp    r14d,0x7b
   1400102ca:	jne    0x140010397
   1400102d0:	mov    rax,rdi
   1400102d3:	mov    edx,edi
   1400102d5:	sar    rax,0x3
   1400102d9:	and    edx,0x7
   1400102dc:	movsx  ecx,BYTE PTR [rbp+rax*1-0x10]
   1400102e1:	movsx  eax,BYTE PTR [rsp+0x58]
   1400102e6:	xor    ecx,eax
   1400102e8:	bt     ecx,edx
   1400102eb:	jae    0x140010397
   1400102f1:	xor    r8d,r8d
   1400102f4:	cmp    BYTE PTR [rsp+0x30],r8b
   1400102f9:	jne    0x140010385
   1400102ff:	test   sil,sil
   140010302:	je     0x14001036f
   140010304:	movzx  ecx,dil
   140010308:	mov    BYTE PTR [rbp-0x68],dil
   14001030c:	call   0x1400152d0
   140010311:	test   eax,eax
   140010313:	je     0x140010326
   140010315:	mov    rcx,QWORD PTR [rsp+0x68]
   14001031a:	inc    DWORD PTR [rsp+0x34]
   14001031e:	call   0x14000f704
   140010323:	mov    BYTE PTR [rbp-0x67],al
   140010326:	mov    eax,0x3f
   14001032b:	lea    r9,[rbp-0x38]
   14001032f:	lea    rdx,[rbp-0x68]
   140010333:	mov    WORD PTR [rbp-0x78],ax
   140010337:	mov    rax,QWORD PTR [rbp-0x38]
   14001033b:	lea    rcx,[rbp-0x78]
   14001033f:	movsxd r8,DWORD PTR [rax+0x10c]
   140010346:	call   0x140015bfc
   14001034b:	mov    rax,QWORD PTR [rbp-0x60]
   14001034f:	movzx  r11d,WORD PTR [rbp-0x78]
   140010354:	mov    ecx,DWORD PTR [rsp+0x34]
   140010358:	mov    WORD PTR [rax],r11w
   14001035c:	add    rax,0x2
   140010360:	mov    QWORD PTR [rbp-0x60],rax
   140010364:	mov    r11d,0x1
   14001036a:	jmp    0x14001026e
   14001036f:	mov    rax,QWORD PTR [rbp-0x60]
   140010373:	mov    r11d,0x1
   140010379:	mov    BYTE PTR [rax],dil
   14001037c:	add    rax,r11
   14001037f:	mov    QWORD PTR [rbp-0x60],rax
   140010383:	jmp    0x14001038e
   140010385:	mov    r11d,0x1
   14001038b:	add    rbx,r11
   14001038e:	mov    ecx,DWORD PTR [rsp+0x34]
   140010392:	jmp    0x140010271
   140010397:	mov    r11d,0x1
   14001039d:	sub    DWORD PTR [rsp+0x34],r11d
   1400103a2:	cmp    edi,r15d
   1400103a5:	je     0x1400103b9
   1400103a7:	mov    rdx,QWORD PTR [rsp+0x68]
   1400103ac:	mov    ecx,edi
   1400103ae:	call   0x140015af0
   1400103b3:	mov    r11d,0x1
   1400103b9:	xor    r8d,r8d
   1400103bc:	mov    rax,QWORD PTR [rbp-0x60]
   1400103c0:	cmp    rbx,rax
   1400103c3:	je     0x14000fdc2
   1400103c9:	cmp    BYTE PTR [rsp+0x30],r8b
   1400103ce:	jne    0x140010645
   1400103d4:	add    DWORD PTR [rsp+0x70],r11d
   1400103d9:	cmp    r14d,0x63
   1400103dd:	mov    r14d,DWORD PTR [rsp+0x34]
   1400103e2:	je     0x140010664
   1400103e8:	test   sil,sil
   1400103eb:	je     0x1400103f6
   1400103ed:	mov    WORD PTR [rax],r8w
   1400103f1:	jmp    0x140010664
   1400103f6:	mov    BYTE PTR [rax],r8b
   1400103f9:	jmp    0x140010664
   1400103fe:	mov    r12d,DWORD PTR [rsp+0x48]
   140010403:	mov    ecx,0x1
   140010408:	mov    QWORD PTR [rbp-0x70],r8
   14001040c:	add    r12d,ecx
   14001040f:	mov    BYTE PTR [rsp+0x38],cl
   140010413:	jmp    0x14001041f
   140010415:	mov    r12d,DWORD PTR [rsp+0x48]
   14001041a:	mov    ecx,0x1
   14001041f:	cmp    edi,0x2d
   140010422:	jne    0x14001042a
   140010424:	mov    BYTE PTR [rsp+0x40],cl
   140010428:	jmp    0x140010433
   14001042a:	cmp    edi,0x2b
   14001042d:	jne    0x14001012d
   140010433:	sub    esi,ecx
   140010435:	mov    DWORD PTR [rsp+0x44],esi
   140010439:	jne    0x140010446
   14001043b:	test   eax,eax
   14001043d:	je     0x140010446
   14001043f:	mov    bl,cl
   140010441:	jmp    0x14001012d
   140010446:	add    DWORD PTR [rsp+0x34],ecx
   14001044a:	mov    rcx,QWORD PTR [rsp+0x68]
   14001044f:	call   0x14000f704
   140010454:	xor    r8d,r8d
   140010457:	mov    edi,eax
   140010459:	mov    DWORD PTR [rsp+0x3c],eax
   14001045d:	jmp    0x14001012d
   140010462:	lea    rsi,[rsi+rsi*4]
   140010466:	add    rsi,rsi
   140010469:	jmp    0x1400104a5
   14001046b:	movzx  esi,dil
   14001046f:	mov    ecx,esi
   140010471:	call   0x14000c818
   140010476:	xor    r8d,r8d
   140010479:	test   eax,eax
   14001047b:	je     0x1400104e3
   14001047d:	shl    QWORD PTR [rbp-0x70],0x4
   140010482:	mov    ecx,esi
   140010484:	movsx  ebx,dil
   140010488:	call   0x14000c798
   14001048d:	mov    rsi,QWORD PTR [rbp-0x70]
   140010491:	mov    edi,ebx
   140010493:	and    edi,0xffffffdf
   140010496:	xor    r8d,r8d
   140010499:	sub    edi,0x7
   14001049c:	test   eax,eax
   14001049e:	cmovne edi,ebx
   1400104a1:	mov    DWORD PTR [rsp+0x3c],edi
   1400104a5:	lea    eax,[rdi-0x30]
   1400104a8:	mov    edx,0x1
   1400104ad:	add    DWORD PTR [rsp+0x4c],edx
   1400104b1:	movsxd rcx,eax
   1400104b4:	add    rsi,rcx
   1400104b7:	mov    QWORD PTR [rbp-0x70],rsi
   1400104bb:	cmp    DWORD PTR [rsp+0x60],r8d
   1400104c0:	je     0x1400104c7
   1400104c2:	sub    r13d,edx
   1400104c5:	je     0x1400104fd
   1400104c7:	mov    rbx,QWORD PTR [rsp+0x68]
   1400104cc:	add    DWORD PTR [rsp+0x34],edx
   1400104d0:	mov    rcx,rbx
   1400104d3:	call   0x14000f704
   1400104d8:	mov    edi,eax
   1400104da:	mov    DWORD PTR [rsp+0x3c],eax
   1400104de:	jmp    0x14001014c
   1400104e3:	dec    DWORD PTR [rsp+0x34]
   1400104e7:	cmp    edi,r15d
   1400104ea:	je     0x1400104f9
   1400104ec:	mov    rdx,rbx
   1400104ef:	mov    ecx,edi
   1400104f1:	call   0x140015af0
   1400104f6:	xor    r8d,r8d
   1400104f9:	mov    rsi,QWORD PTR [rbp-0x70]
   1400104fd:	cmp    BYTE PTR [rsp+0x40],r8b
   140010502:	je     0x140010606
   140010508:	neg    rsi
   14001050b:	mov    QWORD PTR [rbp-0x70],rsi
   14001050f:	jmp    0x140010606
   140010514:	mov    esi,DWORD PTR [rsp+0x5c]
   140010518:	test   bl,bl
   14001051a:	jne    0x1400105f9
   140010520:	mov    r13d,DWORD PTR [rsp+0x44]
   140010525:	mov    rbx,QWORD PTR [rsp+0x68]
   14001052a:	cmp    r14d,0x78
   14001052e:	je     0x140010566
   140010530:	cmp    r14d,0x70
   140010534:	je     0x140010566
   140010536:	movzx  ecx,dil
   14001053a:	call   0x14000c798
   14001053f:	xor    r8d,r8d
   140010542:	test   eax,eax
   140010544:	je     0x1400105df
   14001054a:	cmp    r14d,0x6f
   14001054e:	jne    0x14001055e
   140010550:	cmp    edi,0x38
   140010553:	jge    0x1400105df
   140010559:	shl    esi,0x3
   14001055c:	jmp    0x1400105a6
   14001055e:	lea    eax,[rsi+rsi*4]
   140010561:	lea    esi,[rax+rax*1]
   140010564:	jmp    0x1400105a6
   140010566:	movzx  esi,dil
   14001056a:	mov    ecx,esi
   14001056c:	call   0x14000c818
   140010571:	xor    r8d,r8d
   140010574:	test   eax,eax
   140010576:	je     0x1400105df
   140010578:	mov    eax,DWORD PTR [rsp+0x5c]
   14001057c:	mov    ecx,esi
   14001057e:	movsx  ebx,dil
   140010582:	shl    eax,0x4
   140010585:	mov    DWORD PTR [rsp+0x5c],eax
   140010589:	call   0x14000c798
   14001058e:	mov    esi,DWORD PTR [rsp+0x5c]
   140010592:	mov    edi,ebx
   140010594:	xor    r8d,r8d
   140010597:	and    edi,0xffffffdf
   14001059a:	sub    edi,0x7
   14001059d:	test   eax,eax
   14001059f:	cmovne edi,ebx
   1400105a2:	mov    DWORD PTR [rsp+0x3c],edi
   1400105a6:	mov    eax,0x1
   1400105ab:	lea    esi,[rsi+rdi*1-0x30]
   1400105af:	add    DWORD PTR [rsp+0x4c],eax
   1400105b3:	mov    DWORD PTR [rsp+0x5c],esi
   1400105b7:	cmp    DWORD PTR [rsp+0x60],r8d
   1400105bc:	je     0x1400105c3
   1400105be:	sub    r13d,eax
   1400105c1:	je     0x1400105f9
   1400105c3:	mov    rbx,QWORD PTR [rsp+0x68]
   1400105c8:	add    DWORD PTR [rsp+0x34],eax
   1400105cc:	mov    rcx,rbx
   1400105cf:	call   0x14000f704
   1400105d4:	mov    edi,eax
   1400105d6:	mov    DWORD PTR [rsp+0x3c],eax
   1400105da:	jmp    0x14001052a
   1400105df:	dec    DWORD PTR [rsp+0x34]
   1400105e3:	cmp    edi,r15d
   1400105e6:	je     0x1400105f5
   1400105e8:	mov    rdx,rbx
   1400105eb:	mov    ecx,edi
   1400105ed:	call   0x140015af0
   1400105f2:	xor    r8d,r8d
   1400105f5:	mov    esi,DWORD PTR [rsp+0x5c]
   1400105f9:	cmp    BYTE PTR [rsp+0x40],r8b
   1400105fe:	je     0x140010606
   140010600:	neg    esi
   140010602:	mov    DWORD PTR [rsp+0x5c],esi
   140010606:	mov    eax,DWORD PTR [rsp+0x4c]
   14001060a:	cmp    r14d,0x46
   14001060e:	cmove  eax,r8d
   140010612:	test   eax,eax
   140010614:	je     0x14000fdc2
   14001061a:	cmp    BYTE PTR [rsp+0x30],r8b
   14001061f:	jne    0x140010640
   140010621:	inc    DWORD PTR [rsp+0x70]
   140010625:	mov    eax,DWORD PTR [rsp+0x5c]
   140010629:	jmp    0x140010630
   14001062b:	mov    r12d,DWORD PTR [rsp+0x48]
   140010630:	mov    rcx,QWORD PTR [rbp-0x60]
   140010634:	test   r12d,r12d
   140010637:	je     0x14001064c
   140010639:	mov    rax,QWORD PTR [rbp-0x70]
   14001063d:	mov    QWORD PTR [rcx],rax
   140010640:	mov    r12,QWORD PTR [rsp+0x50]
   140010645:	mov    r14d,DWORD PTR [rsp+0x34]
   14001064a:	jmp    0x140010664
   14001064c:	mov    r12,QWORD PTR [rsp+0x50]
   140010651:	mov    r14d,DWORD PTR [rsp+0x34]
   140010656:	cmp    BYTE PTR [rsp+0x38],r8b
   14001065b:	je     0x140010661
   14001065d:	mov    DWORD PTR [rcx],eax
   14001065f:	jmp    0x140010664
   140010661:	mov    WORD PTR [rcx],ax
   140010664:	mov    rsi,QWORD PTR [rsp+0x68]
   140010669:	mov    r13d,0x1
   14001066f:	add    BYTE PTR [rsp+0x39],r13b
   140010674:	add    r12,r13
   140010677:	mov    QWORD PTR [rsp+0x50],r12
   14001067c:	jmp    0x1400106e0
   14001067e:	cmp    BYTE PTR [r12],cl
   140010682:	jne    0x14001068f
   140010684:	lea    rax,[r12+0x1]
   140010689:	cmp    BYTE PTR [rax],cl
   14001068b:	cmove  r12,rax
   14001068f:	add    r14d,r13d
   140010692:	mov    rcx,rsi
   140010695:	mov    DWORD PTR [rsp+0x34],r14d
   14001069a:	call   0x14000f704
   14001069f:	mov    edi,eax
   1400106a1:	mov    DWORD PTR [rsp+0x3c],eax
   1400106a5:	movzx  eax,BYTE PTR [r12]
   1400106aa:	add    r12,r13
   1400106ad:	mov    QWORD PTR [rsp+0x50],r12
   1400106b2:	cmp    eax,edi
   1400106b4:	jne    0x140010746
   1400106ba:	movzx  ecx,dil
   1400106be:	call   0x1400152d0
   1400106c3:	test   eax,eax
   1400106c5:	je     0x1400106e0
   1400106c7:	mov    rcx,rsi
   1400106ca:	call   0x14000f704
   1400106cf:	movzx  ecx,BYTE PTR [r12]
   1400106d4:	add    r12,r13
   1400106d7:	mov    QWORD PTR [rsp+0x50],r12
   1400106dc:	cmp    ecx,eax
   1400106de:	jne    0x140010729
   1400106e0:	cmp    edi,r15d
   1400106e3:	jne    0x1400106fc
   1400106e5:	cmp    BYTE PTR [r12],0x25
   1400106ea:	jne    0x14000fdc2
   1400106f0:	cmp    BYTE PTR [r12+0x1],0x6e
   1400106f6:	jne    0x14000fdc2
   1400106fc:	mov    al,BYTE PTR [r12]
   140010700:	xor    ebx,ebx
   140010702:	test   al,al
   140010704:	je     0x14000fdc4
   14001070a:	jmp    0x14000f86b
   14001070f:	cmp    edi,r15d
   140010712:	je     0x14000fdc2
   140010718:	mov    rdx,QWORD PTR [rsp+0x68]
   14001071d:	mov    ecx,edi
   14001071f:	call   0x140015af0
   140010724:	jmp    0x14000fdc2
   140010729:	cmp    eax,r15d
   14001072c:	je     0x140010738
   14001072e:	mov    rdx,rsi
   140010731:	mov    ecx,eax
   140010733:	call   0x140015af0
   140010738:	cmp    edi,r15d
   14001073b:	je     0x14000fdc2
   140010741:	mov    rdx,rsi
   140010744:	jmp    0x14001071d
   140010746:	cmp    edi,r15d
   140010749:	je     0x14000fdc4
   14001074f:	mov    rdx,rsi
   140010752:	mov    ecx,edi
   140010754:	call   0x140015af0
   140010759:	jmp    0x14000fdc4
   14001075e:	mov    r13d,DWORD PTR [rsp+0x70]
   140010763:	cmp    BYTE PTR [rbp-0x20],bl
   140010766:	je     0x140010773
   140010768:	mov    rcx,QWORD PTR [rbp-0x28]
   14001076c:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140010773:	mov    eax,r13d
   140010776:	mov    rcx,QWORD PTR [rbp+0x170]
   14001077d:	xor    rcx,rsp
   140010780:	call   0x14000a820
   140010785:	mov    rbx,QWORD PTR [rsp+0x2d0]
   14001078d:	add    rsp,0x280
   140010794:	pop    r15
   140010796:	pop    r14
   140010798:	pop    r13
   14001079a:	pop    r12
   14001079c:	pop    rdi
   14001079d:	pop    rsi
   14001079e:	pop    rbp
   14001079f:	ret    
   1400107a0:	mov    rax,rsp
   1400107a3:	mov    QWORD PTR [rax+0x10],rbx
   1400107a7:	mov    QWORD PTR [rax+0x18],rbp
   1400107ab:	mov    QWORD PTR [rax+0x20],rsi
   1400107af:	mov    DWORD PTR [rax+0x8],ecx
   1400107b2:	push   rdi
   1400107b3:	sub    rsp,0x20
   1400107b7:	mov    rcx,rdx
   1400107ba:	mov    rbx,rdx
   1400107bd:	call   0x140010a7c
   1400107c2:	mov    ecx,DWORD PTR [rbx+0x18]
   1400107c5:	movsxd rsi,eax
   1400107c8:	test   cl,0x82
   1400107cb:	jne    0x1400107e4
   1400107cd:	call   0x14000bdc0
   1400107d2:	mov    DWORD PTR [rax],0x9
   1400107d8:	or     DWORD PTR [rbx+0x18],0x20
   1400107dc:	or     eax,0xffffffff
   1400107df:	jmp    0x140010918
   1400107e4:	test   cl,0x40
   1400107e7:	je     0x1400107f6
   1400107e9:	call   0x14000bdc0
   1400107ee:	mov    DWORD PTR [rax],0x22
   1400107f4:	jmp    0x1400107d8
   1400107f6:	xor    edi,edi
   1400107f8:	test   cl,0x1
   1400107fb:	je     0x140010816
   1400107fd:	mov    DWORD PTR [rbx+0x8],edi
   140010800:	test   cl,0x10
   140010803:	je     0x140010892
   140010809:	mov    rax,QWORD PTR [rbx+0x10]
   14001080d:	and    ecx,0xfffffffe
   140010810:	mov    QWORD PTR [rbx],rax
   140010813:	mov    DWORD PTR [rbx+0x18],ecx
   140010816:	mov    eax,DWORD PTR [rbx+0x18]
   140010819:	mov    DWORD PTR [rbx+0x8],edi
   14001081c:	and    eax,0xffffffef
   14001081f:	or     eax,0x2
   140010822:	mov    DWORD PTR [rbx+0x18],eax
   140010825:	test   eax,0x10c
   14001082a:	jne    0x14001085b
   14001082c:	call   0x14000ab98
   140010831:	add    rax,0x30
   140010835:	cmp    rbx,rax
   140010838:	je     0x140010848
   14001083a:	call   0x14000ab98
   14001083f:	add    rax,0x60
   140010843:	cmp    rbx,rax
   140010846:	jne    0x140010853
   140010848:	mov    ecx,esi
   14001084a:	call   0x140015228
   14001084f:	test   eax,eax
   140010851:	jne    0x14001085b
   140010853:	mov    rcx,rbx
   140010856:	call   0x140015ef8
   14001085b:	test   DWORD PTR [rbx+0x18],0x108
   140010862:	je     0x1400108f5
   140010868:	mov    ebp,DWORD PTR [rbx]
   14001086a:	mov    rdx,QWORD PTR [rbx+0x10]
   14001086e:	sub    ebp,DWORD PTR [rbx+0x10]
   140010871:	lea    rax,[rdx+0x1]
   140010875:	mov    QWORD PTR [rbx],rax
   140010878:	mov    eax,DWORD PTR [rbx+0x24]
   14001087b:	dec    eax
   14001087d:	mov    DWORD PTR [rbx+0x8],eax
   140010880:	test   ebp,ebp
   140010882:	jle    0x14001089d
   140010884:	mov    r8d,ebp
   140010887:	mov    ecx,esi
   140010889:	call   0x14001210c
   14001088e:	mov    edi,eax
   140010890:	jmp    0x1400108e9
   140010892:	or     ecx,0x20
   140010895:	mov    DWORD PTR [rbx+0x18],ecx
   140010898:	jmp    0x1400107dc
   14001089d:	cmp    esi,0xffffffff
   1400108a0:	je     0x1400108c5
   1400108a2:	cmp    esi,0xfffffffe
   1400108a5:	je     0x1400108c5
   1400108a7:	mov    rcx,rsi
   1400108aa:	mov    rax,rsi
   1400108ad:	lea    rdx,[rip+0x151cc]        # 0x140025a80
   1400108b4:	and    ecx,0x1f
   1400108b7:	sar    rax,0x5
   1400108bb:	imul   rcx,rcx,0x58
   1400108bf:	add    rcx,QWORD PTR [rdx+rax*8]
   1400108c3:	jmp    0x1400108cc
   1400108c5:	lea    rcx,[rip+0x12fe4]        # 0x1400238b0
   1400108cc:	test   BYTE PTR [rcx+0x8],0x20
   1400108d0:	je     0x1400108e9
   1400108d2:	xor    edx,edx
   1400108d4:	mov    ecx,esi
   1400108d6:	lea    r8d,[rdx+0x2]
   1400108da:	call   0x140015e14
   1400108df:	cmp    rax,0xffffffffffffffff
   1400108e3:	je     0x1400107d8
   1400108e9:	mov    rcx,QWORD PTR [rbx+0x10]
   1400108ed:	mov    al,BYTE PTR [rsp+0x30]
   1400108f1:	mov    BYTE PTR [rcx],al
   1400108f3:	jmp    0x14001090b
   1400108f5:	mov    ebp,0x1
   1400108fa:	lea    rdx,[rsp+0x30]
   1400108ff:	mov    ecx,esi
   140010901:	mov    r8d,ebp
   140010904:	call   0x14001210c
   140010909:	mov    edi,eax
   14001090b:	cmp    edi,ebp
   14001090d:	jne    0x1400107d8
   140010913:	movzx  eax,BYTE PTR [rsp+0x30]
   140010918:	mov    rbx,QWORD PTR [rsp+0x38]
   14001091d:	mov    rbp,QWORD PTR [rsp+0x40]
   140010922:	mov    rsi,QWORD PTR [rsp+0x48]
   140010927:	add    rsp,0x20
   14001092b:	pop    rdi
   14001092c:	ret    
   14001092d:	int3   
   14001092e:	int3   
   14001092f:	int3   
   140010930:	mov    QWORD PTR [rsp+0x8],rcx
   140010935:	sub    rsp,0x88
   14001093c:	lea    rcx,[rip+0x14b2d]        # 0x140025470
   140010943:	call   QWORD PTR [rip+0x9857]        # 0x14001a1a0
   140010949:	mov    rax,QWORD PTR [rip+0x14c18]        # 0x140025568
   140010950:	mov    QWORD PTR [rsp+0x58],rax
   140010955:	xor    r8d,r8d
   140010958:	lea    rdx,[rsp+0x60]
   14001095d:	mov    rcx,QWORD PTR [rsp+0x58]
   140010962:	call   0x140019912
   140010967:	mov    QWORD PTR [rsp+0x50],rax
   14001096c:	cmp    QWORD PTR [rsp+0x50],0x0
   140010972:	je     0x1400109b5
   140010974:	mov    QWORD PTR [rsp+0x38],0x0
   14001097d:	lea    rax,[rsp+0x48]
   140010982:	mov    QWORD PTR [rsp+0x30],rax
   140010987:	lea    rax,[rsp+0x40]
   14001098c:	mov    QWORD PTR [rsp+0x28],rax
   140010991:	lea    rax,[rip+0x14ad8]        # 0x140025470
   140010998:	mov    QWORD PTR [rsp+0x20],rax
   14001099d:	mov    r9,QWORD PTR [rsp+0x50]
   1400109a2:	mov    r8,QWORD PTR [rsp+0x58]
   1400109a7:	mov    rdx,QWORD PTR [rsp+0x60]
   1400109ac:	xor    ecx,ecx
   1400109ae:	call   0x14001990c
   1400109b3:	jmp    0x1400109d7
   1400109b5:	mov    rax,QWORD PTR [rsp+0x88]
   1400109bd:	mov    QWORD PTR [rip+0x14ba4],rax        # 0x140025568
   1400109c4:	lea    rax,[rsp+0x88]
   1400109cc:	add    rax,0x8
   1400109d0:	mov    QWORD PTR [rip+0x14b31],rax        # 0x140025508
   1400109d7:	mov    rax,QWORD PTR [rip+0x14b8a]        # 0x140025568
   1400109de:	mov    QWORD PTR [rip+0x149fb],rax        # 0x1400253e0
   1400109e5:	mov    rax,QWORD PTR [rsp+0x90]
   1400109ed:	mov    QWORD PTR [rip+0x14afc],rax        # 0x1400254f0
   1400109f4:	mov    DWORD PTR [rip+0x149d2],0xc0000409        # 0x1400253d0
   1400109fe:	mov    DWORD PTR [rip+0x149cc],0x1        # 0x1400253d4
   140010a08:	mov    rax,QWORD PTR [rip+0x126b1]        # 0x1400230c0
   140010a0f:	mov    QWORD PTR [rsp+0x68],rax
   140010a14:	mov    rax,QWORD PTR [rip+0x126ad]        # 0x1400230c8
   140010a1b:	mov    QWORD PTR [rsp+0x70],rax
   140010a20:	call   QWORD PTR [rip+0x9762]        # 0x14001a188
   140010a26:	mov    DWORD PTR [rip+0x14a3c],eax        # 0x140025468
   140010a2c:	mov    ecx,0x1
   140010a31:	call   0x140014dcc
   140010a36:	xor    ecx,ecx
   140010a38:	call   QWORD PTR [rip+0x9742]        # 0x14001a180
   140010a3e:	lea    rcx,[rip+0xec8b]        # 0x14001f6d0
   140010a45:	call   QWORD PTR [rip+0x972d]        # 0x14001a178
   140010a4b:	cmp    DWORD PTR [rip+0x14a16],0x0        # 0x140025468
   140010a52:	jne    0x140010a5e
   140010a54:	mov    ecx,0x1
   140010a59:	call   0x140014dcc
   140010a5e:	call   QWORD PTR [rip+0x974c]        # 0x14001a1b0
   140010a64:	mov    edx,0xc0000409
   140010a69:	mov    rcx,rax
   140010a6c:	call   QWORD PTR [rip+0x9736]        # 0x14001a1a8
   140010a72:	add    rsp,0x88
   140010a79:	ret    
   140010a7a:	int3   
   140010a7b:	int3   
   140010a7c:	sub    rsp,0x28
   140010a80:	test   rcx,rcx
   140010a83:	jne    0x140010a9a
   140010a85:	call   0x14000bdc0
   140010a8a:	mov    DWORD PTR [rax],0x16
   140010a90:	call   0x14000d01c
   140010a95:	or     eax,0xffffffff
   140010a98:	jmp    0x140010a9d
   140010a9a:	mov    eax,DWORD PTR [rcx+0x1c]
   140010a9d:	add    rsp,0x28
   140010aa1:	ret    
   140010aa2:	int3   
   140010aa3:	int3   
   140010aa4:	mov    rax,rsp
   140010aa7:	mov    QWORD PTR [rax+0x8],rbx
   140010aab:	mov    QWORD PTR [rax+0x10],rbp
   140010aaf:	mov    QWORD PTR [rax+0x18],rsi
   140010ab3:	mov    QWORD PTR [rax+0x20],rdi
   140010ab7:	push   r12
   140010ab9:	sub    rsp,0x20
   140010abd:	mov    edi,DWORD PTR [rip+0x14e7d]        # 0x140025940
   140010ac3:	xor    ebp,ebp
   140010ac5:	mov    rsi,rcx
   140010ac8:	or     r12d,0xffffffff
   140010acc:	mov    rcx,rsi
   140010acf:	call   0x14000b2d4
   140010ad4:	mov    rbx,rax
   140010ad7:	test   rax,rax
   140010ada:	jne    0x140010b04
   140010adc:	test   edi,edi
   140010ade:	je     0x140010b04
   140010ae0:	mov    ecx,ebp
   140010ae2:	call   QWORD PTR [rip+0x9778]        # 0x14001a260
   140010ae8:	mov    edi,DWORD PTR [rip+0x14e52]        # 0x140025940
   140010aee:	lea    r11d,[rbp+0x3e8]
   140010af5:	cmp    r11d,edi
   140010af8:	mov    ebp,r11d
   140010afb:	cmova  ebp,r12d
   140010aff:	cmp    ebp,r12d
   140010b02:	jne    0x140010acc
   140010b04:	mov    rbp,QWORD PTR [rsp+0x38]
   140010b09:	mov    rsi,QWORD PTR [rsp+0x40]
   140010b0e:	mov    rdi,QWORD PTR [rsp+0x48]
   140010b13:	mov    rax,rbx
   140010b16:	mov    rbx,QWORD PTR [rsp+0x30]
   140010b1b:	add    rsp,0x20
   140010b1f:	pop    r12
   140010b21:	ret    
   140010b22:	int3   
   140010b23:	int3   
   140010b24:	mov    rax,rsp
   140010b27:	mov    QWORD PTR [rax+0x8],rbx
   140010b2b:	mov    QWORD PTR [rax+0x10],rbp
   140010b2f:	mov    QWORD PTR [rax+0x18],rsi
   140010b33:	mov    QWORD PTR [rax+0x20],rdi
   140010b37:	push   r12
   140010b39:	sub    rsp,0x20
   140010b3d:	xor    edi,edi
   140010b3f:	mov    rsi,rdx
   140010b42:	mov    rbp,rcx
   140010b45:	or     r12d,0xffffffff
   140010b49:	xor    r8d,r8d
   140010b4c:	mov    rdx,rsi
   140010b4f:	mov    rcx,rbp
   140010b52:	call   0x1400159c4
   140010b57:	mov    rbx,rax
   140010b5a:	test   rax,rax
   140010b5d:	jne    0x140010b89
   140010b5f:	cmp    DWORD PTR [rip+0x14ddb],eax        # 0x140025940
   140010b65:	jbe    0x140010b89
   140010b67:	mov    ecx,edi
   140010b69:	call   QWORD PTR [rip+0x96f1]        # 0x14001a260
   140010b6f:	lea    r11d,[rdi+0x3e8]
   140010b76:	cmp    r11d,DWORD PTR [rip+0x14dc3]        # 0x140025940
   140010b7d:	mov    edi,r11d
   140010b80:	cmova  edi,r12d
   140010b84:	cmp    edi,r12d
   140010b87:	jne    0x140010b49
   140010b89:	mov    rbp,QWORD PTR [rsp+0x38]
   140010b8e:	mov    rsi,QWORD PTR [rsp+0x40]
   140010b93:	mov    rdi,QWORD PTR [rsp+0x48]
   140010b98:	mov    rax,rbx
   140010b9b:	mov    rbx,QWORD PTR [rsp+0x30]
   140010ba0:	add    rsp,0x20
   140010ba4:	pop    r12
   140010ba6:	ret    
   140010ba7:	int3   
   140010ba8:	mov    rax,rsp
   140010bab:	mov    QWORD PTR [rax+0x8],rbx
   140010baf:	mov    QWORD PTR [rax+0x10],rbp
   140010bb3:	mov    QWORD PTR [rax+0x18],rsi
   140010bb7:	mov    QWORD PTR [rax+0x20],rdi
   140010bbb:	push   r12
   140010bbd:	sub    rsp,0x20
   140010bc1:	xor    esi,esi
   140010bc3:	mov    rdi,rdx
   140010bc6:	mov    rbp,rcx
   140010bc9:	or     r12d,0xffffffff
   140010bcd:	mov    rdx,rdi
   140010bd0:	mov    rcx,rbp
   140010bd3:	call   0x14000b38c
   140010bd8:	mov    rbx,rax
   140010bdb:	test   rax,rax
   140010bde:	jne    0x140010c0f
   140010be0:	test   rdi,rdi
   140010be3:	je     0x140010c0f
   140010be5:	cmp    DWORD PTR [rip+0x14d55],eax        # 0x140025940
   140010beb:	jbe    0x140010c0f
   140010bed:	mov    ecx,esi
   140010bef:	call   QWORD PTR [rip+0x966b]        # 0x14001a260
   140010bf5:	lea    r11d,[rsi+0x3e8]
   140010bfc:	cmp    r11d,DWORD PTR [rip+0x14d3d]        # 0x140025940
   140010c03:	mov    esi,r11d
   140010c06:	cmova  esi,r12d
   140010c0a:	cmp    esi,r12d
   140010c0d:	jne    0x140010bcd
   140010c0f:	mov    rbp,QWORD PTR [rsp+0x38]
   140010c14:	mov    rsi,QWORD PTR [rsp+0x40]
   140010c19:	mov    rdi,QWORD PTR [rsp+0x48]
   140010c1e:	mov    rax,rbx
   140010c21:	mov    rbx,QWORD PTR [rsp+0x30]
   140010c26:	add    rsp,0x20
   140010c2a:	pop    r12
   140010c2c:	ret    
   140010c2d:	int3   
   140010c2e:	int3   
   140010c2f:	int3   
   140010c30:	mov    QWORD PTR [rsp+0x8],rbx
   140010c35:	mov    QWORD PTR [rsp+0x10],rbp
   140010c3a:	mov    QWORD PTR [rsp+0x18],rsi
   140010c3f:	push   rdi
   140010c40:	push   r12
   140010c42:	push   r13
   140010c44:	sub    rsp,0x20
   140010c48:	xor    esi,esi
   140010c4a:	mov    rdi,r8
   140010c4d:	mov    rbp,rdx
   140010c50:	or     r13d,0xffffffff
   140010c54:	mov    r12,rcx
   140010c57:	mov    r8,rdi
   140010c5a:	mov    rdx,rbp
   140010c5d:	mov    rcx,r12
   140010c60:	call   0x1400161e8
   140010c65:	mov    rbx,rax
   140010c68:	test   rax,rax
   140010c6b:	jne    0x140010c9c
   140010c6d:	test   rdi,rdi
   140010c70:	je     0x140010c9c
   140010c72:	cmp    DWORD PTR [rip+0x14cc8],eax        # 0x140025940
   140010c78:	jbe    0x140010c9c
   140010c7a:	mov    ecx,esi
   140010c7c:	call   QWORD PTR [rip+0x95de]        # 0x14001a260
   140010c82:	lea    r11d,[rsi+0x3e8]
   140010c89:	cmp    r11d,DWORD PTR [rip+0x14cb0]        # 0x140025940
   140010c90:	mov    esi,r11d
   140010c93:	cmova  esi,r13d
   140010c97:	cmp    esi,r13d
   140010c9a:	jne    0x140010c57
   140010c9c:	mov    rbp,QWORD PTR [rsp+0x48]
   140010ca1:	mov    rsi,QWORD PTR [rsp+0x50]
   140010ca6:	mov    rax,rbx
   140010ca9:	mov    rbx,QWORD PTR [rsp+0x40]
   140010cae:	add    rsp,0x20
   140010cb2:	pop    r13
   140010cb4:	pop    r12
   140010cb6:	pop    rdi
   140010cb7:	ret    
   140010cb8:	mov    QWORD PTR [rsp+0x8],rbx
   140010cbd:	mov    QWORD PTR [rsp+0x10],rsi
   140010cc2:	push   rdi
   140010cc3:	sub    rsp,0x30
   140010cc7:	xor    edi,edi
   140010cc9:	lea    ecx,[rdi+0x1]
   140010ccc:	call   0x14000cb28
   140010cd1:	nop
   140010cd2:	lea    ebx,[rdi+0x3]
   140010cd5:	mov    DWORD PTR [rsp+0x20],ebx
   140010cd9:	cmp    ebx,DWORD PTR [rip+0x15fc1]        # 0x140026ca0
   140010cdf:	jge    0x140010d46
   140010ce1:	movsxd rsi,ebx
   140010ce4:	mov    rax,QWORD PTR [rip+0x14f9d]        # 0x140025c88
   140010ceb:	cmp    QWORD PTR [rax+rsi*8],0x0
   140010cf0:	je     0x140010d42
   140010cf2:	mov    rcx,QWORD PTR [rax+rsi*8]
   140010cf6:	test   BYTE PTR [rcx+0x18],0x83
   140010cfa:	je     0x140010d0c
   140010cfc:	call   0x14000ae28
   140010d01:	cmp    eax,0xffffffff
   140010d04:	je     0x140010d0c
   140010d06:	inc    edi
   140010d08:	mov    DWORD PTR [rsp+0x24],edi
   140010d0c:	cmp    ebx,0x14
   140010d0f:	jl     0x140010d42
   140010d11:	mov    rax,QWORD PTR [rip+0x14f70]        # 0x140025c88
   140010d18:	mov    rcx,QWORD PTR [rax+rsi*8]
   140010d1c:	add    rcx,0x30
   140010d20:	call   QWORD PTR [rip+0x943a]        # 0x14001a160
   140010d26:	mov    rcx,QWORD PTR [rip+0x14f5b]        # 0x140025c88
   140010d2d:	mov    rcx,QWORD PTR [rcx+rsi*8]
   140010d31:	call   0x14000b460
   140010d36:	mov    r11,QWORD PTR [rip+0x14f4b]        # 0x140025c88
   140010d3d:	and    QWORD PTR [r11+rsi*8],0x0
   140010d42:	inc    ebx
   140010d44:	jmp    0x140010cd5
   140010d46:	mov    ecx,0x1
   140010d4b:	call   0x14000ca28
   140010d50:	mov    eax,edi
   140010d52:	mov    rbx,QWORD PTR [rsp+0x40]
   140010d57:	mov    rsi,QWORD PTR [rsp+0x48]
   140010d5c:	add    rsp,0x30
   140010d60:	pop    rdi
   140010d61:	ret    
   140010d62:	int3   
   140010d63:	int3   
   140010d64:	mov    QWORD PTR [rsp+0x8],rbx
   140010d69:	push   rdi
   140010d6a:	sub    rsp,0x20
   140010d6e:	movsxd rdi,ecx
   140010d71:	mov    ecx,edi
   140010d73:	call   0x140011660
   140010d78:	cmp    rax,0xffffffffffffffff
   140010d7c:	je     0x140010dd7
   140010d7e:	mov    rax,QWORD PTR [rip+0x14cfb]        # 0x140025a80
   140010d85:	mov    ecx,0x2
   140010d8a:	cmp    edi,0x1
   140010d8d:	jne    0x140010d98
   140010d8f:	test   BYTE PTR [rax+0xb8],dil
   140010d96:	jne    0x140010da2
   140010d98:	cmp    edi,ecx
   140010d9a:	jne    0x140010db9
   140010d9c:	test   BYTE PTR [rax+0x60],0x1
   140010da0:	je     0x140010db9
   140010da2:	call   0x140011660
   140010da7:	mov    ecx,0x1
   140010dac:	mov    rbx,rax
   140010daf:	call   0x140011660
   140010db4:	cmp    rax,rbx
   140010db7:	je     0x140010dd7
   140010db9:	mov    ecx,edi
   140010dbb:	call   0x140011660
   140010dc0:	mov    rcx,rax
   140010dc3:	call   QWORD PTR [rip+0x92af]        # 0x14001a078
   140010dc9:	test   eax,eax
   140010dcb:	jne    0x140010dd7
   140010dcd:	call   QWORD PTR [rip+0x929d]        # 0x14001a070
   140010dd3:	mov    ebx,eax
   140010dd5:	jmp    0x140010dd9
   140010dd7:	xor    ebx,ebx
   140010dd9:	mov    ecx,edi
   140010ddb:	call   0x1400115b4
   140010de0:	mov    r11,rdi
   140010de3:	mov    rcx,rdi
   140010de6:	sar    rcx,0x5
   140010dea:	and    r11d,0x1f
   140010dee:	lea    rdx,[rip+0x14c8b]        # 0x140025a80
   140010df5:	mov    rcx,QWORD PTR [rdx+rcx*8]
   140010df9:	imul   r11,r11,0x58
   140010dfd:	mov    BYTE PTR [rcx+r11*1+0x8],0x0
   140010e03:	test   ebx,ebx
   140010e05:	je     0x140010e13
   140010e07:	mov    ecx,ebx
   140010e09:	call   0x14000be00
   140010e0e:	or     eax,0xffffffff
   140010e11:	jmp    0x140010e15
   140010e13:	xor    eax,eax
   140010e15:	mov    rbx,QWORD PTR [rsp+0x30]
   140010e1a:	add    rsp,0x20
   140010e1e:	pop    rdi
   140010e1f:	ret    
   140010e20:	mov    QWORD PTR [rsp+0x18],rbx
   140010e25:	mov    DWORD PTR [rsp+0x8],ecx
   140010e29:	push   rsi
   140010e2a:	push   rdi
   140010e2b:	push   r12
   140010e2d:	sub    rsp,0x20
   140010e31:	movsxd rbx,ecx
   140010e34:	cmp    ebx,0xfffffffe
   140010e37:	jne    0x140010e51
   140010e39:	call   0x14000bde0
   140010e3e:	and    DWORD PTR [rax],0x0
   140010e41:	call   0x14000bdc0
   140010e46:	mov    DWORD PTR [rax],0x9
   140010e4c:	jmp    0x140010ed2
   140010e51:	test   ecx,ecx
   140010e53:	js     0x140010eba
   140010e55:	cmp    ebx,DWORD PTR [rip+0x14c11]        # 0x140025a6c
   140010e5b:	jae    0x140010eba
   140010e5d:	mov    rdi,rbx
   140010e60:	mov    rsi,rbx
   140010e63:	sar    rsi,0x5
   140010e67:	lea    r12,[rip+0x14c12]        # 0x140025a80
   140010e6e:	and    edi,0x1f
   140010e71:	imul   rdi,rdi,0x58
   140010e75:	mov    rax,QWORD PTR [r12+rsi*8]
   140010e79:	movsx  ecx,BYTE PTR [rax+rdi*1+0x8]
   140010e7e:	and    ecx,0x1
   140010e81:	je     0x140010eba
   140010e83:	mov    ecx,ebx
   140010e85:	call   0x1400116d4
   140010e8a:	nop
   140010e8b:	mov    rax,QWORD PTR [r12+rsi*8]
   140010e8f:	test   BYTE PTR [rax+rdi*1+0x8],0x1
   140010e94:	je     0x140010ea1
   140010e96:	mov    ecx,ebx
   140010e98:	call   0x140010d64
   140010e9d:	mov    edi,eax
   140010e9f:	jmp    0x140010eaf
   140010ea1:	call   0x14000bdc0
   140010ea6:	mov    DWORD PTR [rax],0x9
   140010eac:	or     edi,0xffffffff
   140010eaf:	mov    ecx,ebx
   140010eb1:	call   0x14001177c
   140010eb6:	mov    eax,edi
   140010eb8:	jmp    0x140010ed5
   140010eba:	call   0x14000bde0
   140010ebf:	and    DWORD PTR [rax],0x0
   140010ec2:	call   0x14000bdc0
   140010ec7:	mov    DWORD PTR [rax],0x9
   140010ecd:	call   0x14000d01c
   140010ed2:	or     eax,0xffffffff
   140010ed5:	mov    rbx,QWORD PTR [rsp+0x50]
   140010eda:	add    rsp,0x20
   140010ede:	pop    r12
   140010ee0:	pop    rdi
   140010ee1:	pop    rsi
   140010ee2:	ret    
   140010ee3:	int3   
   140010ee4:	rex push rbx
   140010ee6:	sub    rsp,0x20
   140010eea:	test   BYTE PTR [rcx+0x18],0x83
   140010eee:	mov    rbx,rcx
   140010ef1:	je     0x140010f15
   140010ef3:	test   BYTE PTR [rcx+0x18],0x8
   140010ef7:	je     0x140010f15
   140010ef9:	mov    rcx,QWORD PTR [rcx+0x10]
   140010efd:	call   0x14000b460
   140010f02:	and    DWORD PTR [rbx+0x18],0xfffffbf7
   140010f09:	xor    eax,eax
   140010f0b:	mov    QWORD PTR [rbx],rax
   140010f0e:	mov    QWORD PTR [rbx+0x10],rax
   140010f12:	mov    DWORD PTR [rbx+0x8],eax
   140010f15:	add    rsp,0x20
   140010f19:	pop    rbx
   140010f1a:	ret    
   140010f1b:	int3   
   140010f1c:	mov    QWORD PTR [rsp+0x8],rbx
   140010f21:	mov    QWORD PTR [rsp+0x10],rsi
   140010f26:	push   rdi
   140010f27:	sub    rsp,0x20
   140010f2b:	mov    rdi,rcx
   140010f2e:	test   rcx,rcx
   140010f31:	jne    0x140010f48
   140010f33:	call   0x14000bdc0
   140010f38:	mov    DWORD PTR [rax],0x16
   140010f3e:	call   0x14000d01c
   140010f43:	jmp    0x14001105b
   140010f48:	mov    eax,DWORD PTR [rcx+0x18]
   140010f4b:	test   al,0x83
   140010f4d:	je     0x14001105b
   140010f53:	test   al,0x40
   140010f55:	jne    0x14001105b
   140010f5b:	test   al,0x2
   140010f5d:	je     0x140010f6a
   140010f5f:	or     eax,0x20
   140010f62:	mov    DWORD PTR [rcx+0x18],eax
   140010f65:	jmp    0x14001105b
   140010f6a:	or     eax,0x1
   140010f6d:	mov    DWORD PTR [rcx+0x18],eax
   140010f70:	test   eax,0x10c
   140010f75:	jne    0x140010f7e
   140010f77:	call   0x140015ef8
   140010f7c:	jmp    0x140010f85
   140010f7e:	mov    rax,QWORD PTR [rcx+0x10]
   140010f82:	mov    QWORD PTR [rcx],rax
   140010f85:	mov    rcx,rdi
   140010f88:	call   0x140010a7c
   140010f8d:	mov    r8d,DWORD PTR [rdi+0x24]
   140010f91:	mov    rdx,QWORD PTR [rdi+0x10]
   140010f95:	mov    ecx,eax
   140010f97:	call   0x140016994
   140010f9c:	mov    DWORD PTR [rdi+0x8],eax
   140010f9f:	test   eax,eax
   140010fa1:	je     0x14001104a
   140010fa7:	cmp    eax,0xffffffff
   140010faa:	je     0x14001104a
   140010fb0:	test   BYTE PTR [rdi+0x18],0x82
   140010fb4:	jne    0x140011015
   140010fb6:	mov    rcx,rdi
   140010fb9:	call   0x140010a7c
   140010fbe:	cmp    eax,0xffffffff
   140010fc1:	je     0x140010fff
   140010fc3:	mov    rcx,rdi
   140010fc6:	call   0x140010a7c
   140010fcb:	cmp    eax,0xfffffffe
   140010fce:	je     0x140010fff
   140010fd0:	mov    rcx,rdi
   140010fd3:	call   0x140010a7c
   140010fd8:	mov    rcx,rdi
   140010fdb:	lea    rsi,[rip+0x14a9e]        # 0x140025a80
   140010fe2:	movsxd rbx,eax
   140010fe5:	sar    rbx,0x5
   140010fe9:	call   0x140010a7c
   140010fee:	mov    r11d,eax
   140010ff1:	and    r11d,0x1f
   140010ff5:	imul   r11,r11,0x58
   140010ff9:	add    r11,QWORD PTR [rsi+rbx*8]
   140010ffd:	jmp    0x140011006
   140010fff:	lea    r11,[rip+0x128aa]        # 0x1400238b0
   140011006:	mov    al,BYTE PTR [r11+0x8]
   14001100a:	and    al,0x82
   14001100c:	cmp    al,0x82
   14001100e:	jne    0x140011015
   140011010:	bts    DWORD PTR [rdi+0x18],0xd
   140011015:	cmp    DWORD PTR [rdi+0x24],0x200
   14001101c:	jne    0x140011039
   14001101e:	test   BYTE PTR [rdi+0x18],0x8
   140011022:	je     0x140011039
   140011024:	mov    eax,DWORD PTR [rdi+0x24]
   140011027:	test   DWORD PTR [rdi+0x18],0x400
   14001102e:	mov    ecx,0x1000
   140011033:	cmove  eax,ecx
   140011036:	mov    DWORD PTR [rdi+0x24],eax
   140011039:	mov    rcx,QWORD PTR [rdi]
   14001103c:	dec    DWORD PTR [rdi+0x8]
   14001103f:	movzx  eax,BYTE PTR [rcx]
   140011042:	inc    rcx
   140011045:	mov    QWORD PTR [rdi],rcx
   140011048:	jmp    0x14001105e
   14001104a:	neg    eax
   14001104c:	sbb    eax,eax
   14001104e:	and    eax,0x10
   140011051:	add    eax,0x10
   140011054:	or     DWORD PTR [rdi+0x18],eax
   140011057:	and    DWORD PTR [rdi+0x8],0x0
   14001105b:	or     eax,0xffffffff
   14001105e:	mov    rbx,QWORD PTR [rsp+0x30]
   140011063:	mov    rsi,QWORD PTR [rsp+0x38]
   140011068:	add    rsp,0x20
   14001106c:	pop    rdi
   14001106d:	ret    
   14001106e:	int3   
   14001106f:	int3   
   140011070:	mov    QWORD PTR [rsp+0x8],rbx
   140011075:	mov    QWORD PTR [rsp+0x18],rbp
   14001107a:	push   rsi
   14001107b:	push   rdi
   14001107c:	push   r12
   14001107e:	push   r13
   140011080:	push   r15
   140011082:	sub    rsp,0x30
   140011086:	mov    ebp,DWORD PTR [rip+0x1490c]        # 0x140025998
   14001108c:	mov    rsi,r9
   14001108f:	xor    r9d,r9d
   140011092:	xor    r10d,r10d
   140011095:	xor    r11d,r11d
   140011098:	cmp    BYTE PTR [rdx],0x20
   14001109b:	lea    r15d,[r9+0x1]
   14001109f:	mov    r12d,r8d
   1400110a2:	mov    rbx,rdx
   1400110a5:	mov    r13,rcx
   1400110a8:	jne    0x1400110b2
   1400110aa:	add    rbx,r15
   1400110ad:	cmp    BYTE PTR [rbx],0x20
   1400110b0:	je     0x1400110aa
   1400110b2:	cmp    BYTE PTR [rbx],0x61
   1400110b5:	je     0x1400110e6
   1400110b7:	cmp    BYTE PTR [rbx],0x72
   1400110ba:	je     0x1400110df
   1400110bc:	cmp    BYTE PTR [rbx],0x77
   1400110bf:	je     0x1400110d8
   1400110c1:	call   0x14000bdc0
   1400110c6:	mov    DWORD PTR [rax],0x16
   1400110cc:	call   0x14000d01c
   1400110d1:	xor    eax,eax
   1400110d3:	jmp    0x14001130f
   1400110d8:	mov    edi,0x301
   1400110dd:	jmp    0x1400110eb
   1400110df:	xor    edi,edi
   1400110e1:	or     ebp,r15d
   1400110e4:	jmp    0x1400110ee
   1400110e6:	mov    edi,0x109
   1400110eb:	or     ebp,0x2
   1400110ee:	add    rbx,r15
   1400110f1:	mov    edx,r15d
   1400110f4:	mov    al,BYTE PTR [rbx]
   1400110f6:	test   al,al
   1400110f8:	je     0x1400112b9
   1400110fe:	mov    r8d,0x4000
   140011104:	test   edx,edx
   140011106:	je     0x1400111fa
   14001110c:	movsx  ecx,al
   14001110f:	cmp    ecx,0x53
   140011112:	jg     0x14001118d
   140011114:	je     0x140011180
   140011116:	sub    ecx,0x20
   140011119:	je     0x1400111ed
   14001111f:	sub    ecx,0xb
   140011122:	je     0x14001116b
   140011124:	dec    ecx
   140011126:	je     0x140011166
   140011128:	sub    ecx,0x18
   14001112b:	je     0x140011154
   14001112d:	sub    ecx,0xa
   140011130:	je     0x14001114b
   140011132:	cmp    ecx,0x4
   140011135:	jne    0x1400110c1
   140011137:	test   r10d,r10d
   14001113a:	jne    0x1400111e5
   140011140:	mov    r10d,r15d
   140011143:	or     edi,0x10
   140011146:	jmp    0x1400111ed
   14001114b:	bts    edi,0x7
   14001114f:	jmp    0x1400111ed
   140011154:	test   dil,0x40
   140011158:	jne    0x1400111e5
   14001115e:	or     edi,0x40
   140011161:	jmp    0x1400111ed
   140011166:	mov    r11d,r15d
   140011169:	jmp    0x1400111e5
   14001116b:	test   dil,0x2
   14001116f:	jne    0x1400111e5
   140011171:	and    edi,0xfffffffe
   140011174:	and    ebp,0xfffffffc
   140011177:	or     edi,0x2
   14001117a:	bts    ebp,0x7
   14001117e:	jmp    0x1400111ed
   140011180:	test   r10d,r10d
   140011183:	jne    0x1400111e5
   140011185:	mov    r10d,r15d
   140011188:	or     edi,0x20
   14001118b:	jmp    0x1400111ed
   14001118d:	sub    ecx,0x54
   140011190:	je     0x1400111df
   140011192:	sub    ecx,0xe
   140011195:	je     0x1400111d1
   140011197:	dec    ecx
   140011199:	je     0x1400111c4
   14001119b:	sub    ecx,0xb
   14001119e:	je     0x1400111b6
   1400111a0:	cmp    ecx,0x6
   1400111a3:	jne    0x1400110c1
   1400111a9:	test   edi,0xc000
   1400111af:	jne    0x1400111e5
   1400111b1:	or     edi,r8d
   1400111b4:	jmp    0x1400111ed
   1400111b6:	test   r9d,r9d
   1400111b9:	jne    0x1400111e5
   1400111bb:	mov    r9d,r15d
   1400111be:	btr    ebp,0xe
   1400111c2:	jmp    0x1400111ed
   1400111c4:	test   r9d,r9d
   1400111c7:	jne    0x1400111e5
   1400111c9:	mov    r9d,r15d
   1400111cc:	or     ebp,r8d
   1400111cf:	jmp    0x1400111ed
   1400111d1:	test   edi,0xc000
   1400111d7:	jne    0x1400111e5
   1400111d9:	bts    edi,0xf
   1400111dd:	jmp    0x1400111ed
   1400111df:	bt     edi,0xc
   1400111e3:	jae    0x1400111e9
   1400111e5:	xor    edx,edx
   1400111e7:	jmp    0x1400111ed
   1400111e9:	bts    edi,0xc
   1400111ed:	add    rbx,r15
   1400111f0:	mov    al,BYTE PTR [rbx]
   1400111f2:	test   al,al
   1400111f4:	jne    0x140011104
   1400111fa:	test   r11d,r11d
   1400111fd:	je     0x1400112b9
   140011203:	jmp    0x140011208
   140011205:	add    rbx,r15
   140011208:	cmp    BYTE PTR [rbx],0x20
   14001120b:	je     0x140011205
   14001120d:	lea    rcx,[rip+0xe52c]        # 0x14001f740
   140011214:	mov    r8d,0x3
   14001121a:	mov    rdx,rbx
   14001121d:	call   0x140016e00
   140011222:	test   eax,eax
   140011224:	jne    0x1400110c1
   14001122a:	add    rbx,0x3
   14001122e:	jmp    0x140011233
   140011230:	add    rbx,r15
   140011233:	cmp    BYTE PTR [rbx],0x20
   140011236:	je     0x140011230
   140011238:	cmp    BYTE PTR [rbx],0x3d
   14001123b:	jne    0x1400110c1
   140011241:	add    rbx,r15
   140011244:	cmp    BYTE PTR [rbx],0x20
   140011247:	je     0x140011241
   140011249:	lea    rdx,[rip+0xe4f4]        # 0x14001f744
   140011250:	mov    r8d,0x5
   140011256:	mov    rcx,rbx
   140011259:	call   0x140016c98
   14001125e:	test   eax,eax
   140011260:	jne    0x14001126c
   140011262:	add    rbx,0x5
   140011266:	bts    edi,0x12
   14001126a:	jmp    0x1400112b9
   14001126c:	lea    rdx,[rip+0xe4dd]        # 0x14001f750
   140011273:	mov    r8d,0x8
   140011279:	mov    rcx,rbx
   14001127c:	call   0x140016c98
   140011281:	test   eax,eax
   140011283:	jne    0x14001128f
   140011285:	add    rbx,0x8
   140011289:	bts    edi,0x11
   14001128d:	jmp    0x1400112b9
   14001128f:	lea    rdx,[rip+0xe4ca]        # 0x14001f760
   140011296:	mov    r8d,0x7
   14001129c:	mov    rcx,rbx
   14001129f:	call   0x140016c98
   1400112a4:	test   eax,eax
   1400112a6:	jne    0x1400110c1
   1400112ac:	add    rbx,0x7
   1400112b0:	bts    edi,0x10
   1400112b4:	jmp    0x1400112b9
   1400112b6:	add    rbx,r15
   1400112b9:	cmp    BYTE PTR [rbx],0x20
   1400112bc:	je     0x1400112b6
   1400112be:	cmp    BYTE PTR [rbx],0x0
   1400112c1:	jne    0x1400110c1
   1400112c7:	lea    rcx,[rsp+0x68]
   1400112cc:	mov    r9d,r12d
   1400112cf:	mov    r8d,edi
   1400112d2:	mov    rdx,r13
   1400112d5:	mov    DWORD PTR [rsp+0x20],0x180
   1400112dd:	call   0x140013108
   1400112e2:	test   eax,eax
   1400112e4:	jne    0x1400110d1
   1400112ea:	add    DWORD PTR [rip+0x13703],r15d        # 0x1400249f4
   1400112f1:	and    DWORD PTR [rsi+0x8],eax
   1400112f4:	mov    eax,DWORD PTR [rsp+0x68]
   1400112f8:	and    QWORD PTR [rsi],0x0
   1400112fc:	and    QWORD PTR [rsi+0x10],0x0
   140011301:	and    QWORD PTR [rsi+0x28],0x0
   140011306:	mov    DWORD PTR [rsi+0x1c],eax
   140011309:	mov    DWORD PTR [rsi+0x18],ebp
   14001130c:	mov    rax,rsi
   14001130f:	mov    rbx,QWORD PTR [rsp+0x60]
   140011314:	mov    rbp,QWORD PTR [rsp+0x70]
   140011319:	add    rsp,0x30
   14001131d:	pop    r15
   14001131f:	pop    r13
   140011321:	pop    r12
   140011323:	pop    rdi
   140011324:	pop    rsi
   140011325:	ret    
   140011326:	int3   
   140011327:	int3   
   140011328:	mov    QWORD PTR [rsp+0x8],rbx
   14001132d:	mov    QWORD PTR [rsp+0x10],rsi
   140011332:	push   rdi
   140011333:	sub    rsp,0x30
   140011337:	xor    ebx,ebx
   140011339:	lea    ecx,[rbx+0x1]
   14001133c:	call   0x14000cb28
   140011341:	nop
   140011342:	xor    edi,edi
   140011344:	mov    DWORD PTR [rsp+0x20],edi
   140011348:	cmp    edi,DWORD PTR [rip+0x15952]        # 0x140026ca0
   14001134e:	jge    0x140011440
   140011354:	movsxd rsi,edi
   140011357:	mov    rax,QWORD PTR [rip+0x1492a]        # 0x140025c88
   14001135e:	cmp    QWORD PTR [rax+rsi*8],0x0
   140011363:	je     0x1400113cb
   140011365:	mov    rax,QWORD PTR [rax+rsi*8]
   140011369:	test   BYTE PTR [rax+0x18],0x83
   14001136d:	jne    0x1400113c4
   14001136f:	test   DWORD PTR [rax+0x18],0x8000
   140011376:	jne    0x1400113c4
   140011378:	lea    eax,[rdi-0x3]
   14001137b:	cmp    eax,0x10
   14001137e:	ja     0x140011390
   140011380:	lea    ecx,[rdi+0x10]
   140011383:	call   0x14000ca40
   140011388:	test   eax,eax
   14001138a:	je     0x140011440
   140011390:	mov    rdx,QWORD PTR [rip+0x148f1]        # 0x140025c88
   140011397:	mov    rdx,QWORD PTR [rdx+rsi*8]
   14001139b:	mov    ecx,edi
   14001139d:	call   0x14000ad0c
   1400113a2:	mov    r11,QWORD PTR [rip+0x148df]        # 0x140025c88
   1400113a9:	mov    rax,QWORD PTR [r11+rsi*8]
   1400113ad:	test   BYTE PTR [rax+0x18],0x83
   1400113b1:	je     0x1400113bf
   1400113b3:	mov    rdx,rax
   1400113b6:	mov    ecx,edi
   1400113b8:	call   0x14000ad8c
   1400113bd:	jmp    0x1400113c4
   1400113bf:	mov    rbx,rax
   1400113c2:	jmp    0x140011440
   1400113c4:	inc    edi
   1400113c6:	jmp    0x140011344
   1400113cb:	mov    ecx,0x58
   1400113d0:	call   0x140010aa4
   1400113d5:	mov    rcx,rax
   1400113d8:	movsxd rdi,edi
   1400113db:	mov    rax,QWORD PTR [rip+0x148a6]        # 0x140025c88
   1400113e2:	mov    QWORD PTR [rax+rdi*8],rcx
   1400113e6:	test   rcx,rcx
   1400113e9:	je     0x140011440
   1400113eb:	add    rcx,0x30
   1400113ef:	mov    edx,0xfa0
   1400113f4:	call   QWORD PTR [rip+0x8d5e]        # 0x14001a158
   1400113fa:	test   eax,eax
   1400113fc:	jne    0x14001141c
   1400113fe:	mov    rcx,QWORD PTR [rip+0x14883]        # 0x140025c88
   140011405:	mov    rcx,QWORD PTR [rcx+rdi*8]
   140011409:	call   0x14000b460
   14001140e:	mov    r11,QWORD PTR [rip+0x14873]        # 0x140025c88
   140011415:	and    QWORD PTR [r11+rdi*8],0x0
   14001141a:	jmp    0x140011440
   14001141c:	mov    rax,QWORD PTR [rip+0x14865]        # 0x140025c88
   140011423:	mov    rcx,QWORD PTR [rax+rdi*8]
   140011427:	add    rcx,0x30
   14001142b:	call   QWORD PTR [rip+0x8cb7]        # 0x14001a0e8
   140011431:	mov    r11,QWORD PTR [rip+0x14850]        # 0x140025c88
   140011438:	mov    rbx,QWORD PTR [r11+rdi*8]
   14001143c:	and    DWORD PTR [rbx+0x18],0x0
   140011440:	test   rbx,rbx
   140011443:	je     0x140011462
   140011445:	and    DWORD PTR [rbx+0x18],0x8000
   14001144c:	and    DWORD PTR [rbx+0x8],0x0
   140011450:	and    QWORD PTR [rbx+0x10],0x0
   140011455:	and    QWORD PTR [rbx],0x0
   140011459:	and    QWORD PTR [rbx+0x28],0x0
   14001145e:	or     DWORD PTR [rbx+0x1c],0xffffffff
   140011462:	mov    ecx,0x1
   140011467:	call   0x14000ca28
   14001146c:	mov    rax,rbx
   14001146f:	mov    rbx,QWORD PTR [rsp+0x40]
   140011474:	mov    rsi,QWORD PTR [rsp+0x48]
   140011479:	add    rsp,0x30
   14001147d:	pop    rdi
   14001147e:	ret    
   14001147f:	int3   
   140011480:	int3   
   140011481:	int3   
   140011482:	int3   
   140011483:	int3   
   140011484:	int3   
   140011485:	int3   
   140011486:	data16 nop WORD PTR [rax+rax*1+0x0]
   140011490:	sub    rsp,0x4d8
   140011497:	xor    r8,r8
   14001149a:	xor    r9,r9
   14001149d:	mov    QWORD PTR [rsp+0x20],rsp
   1400114a2:	mov    QWORD PTR [rsp+0x28],r8
   1400114a7:	call   0x140019918
   1400114ac:	add    rsp,0x4d8
   1400114b3:	ret    
   1400114b4:	int3   
   1400114b5:	int3   
   1400114b6:	int3   
   1400114b7:	int3   
   1400114b8:	int3   
   1400114b9:	int3   
   1400114ba:	nop    WORD PTR [rax+rax*1+0x0]
   1400114c0:	mov    QWORD PTR [rsp+0x8],rcx
   1400114c5:	mov    QWORD PTR [rsp+0x18],rdx
   1400114ca:	mov    DWORD PTR [rsp+0x10],r8d
   1400114cf:	mov    r9,0x19930520
   1400114d6:	jmp    0x1400114e0
   1400114d8:	int3   
   1400114d9:	int3   
   1400114da:	int3   
   1400114db:	int3   
   1400114dc:	int3   
   1400114dd:	int3   
   1400114de:	xchg   ax,ax
   1400114e0:	ret    
   1400114e1:	int3   
   1400114e2:	int3   
   1400114e3:	int3   
   1400114e4:	int3   
   1400114e5:	int3   
   1400114e6:	int3   
   1400114e7:	nop    WORD PTR [rax+rax*1+0x0]
   1400114f0:	ret    
   1400114f1:	int3   
   1400114f2:	int3   
   1400114f3:	int3   
   1400114f4:	lea    rax,[rip+0x12575]        # 0x140023a70
   1400114fb:	ret    
   1400114fc:	lea    rax,[rip+0x1240d]        # 0x140023910
   140011503:	ret    
   140011504:	mov    QWORD PTR [rsp+0x8],rbx
   140011509:	mov    QWORD PTR [rsp+0x10],rbp
   14001150e:	mov    QWORD PTR [rsp+0x18],rsi
   140011513:	push   rdi
   140011514:	sub    rsp,0x20
   140011518:	mov    rbx,rdx
   14001151b:	test   ecx,ecx
   14001151d:	js     0x140011586
   14001151f:	cmp    ecx,DWORD PTR [rip+0x14547]        # 0x140025a6c
   140011525:	jae    0x140011586
   140011527:	movsxd rdi,ecx
   14001152a:	lea    rbp,[rip+0x1454f]        # 0x140025a80
   140011531:	mov    rsi,rdi
   140011534:	and    edi,0x1f
   140011537:	sar    rsi,0x5
   14001153b:	imul   rdi,rdi,0x58
   14001153f:	mov    rax,QWORD PTR [rbp+rsi*8+0x0]
   140011544:	cmp    QWORD PTR [rdi+rax*1],0xffffffffffffffff
   140011549:	jne    0x140011586
   14001154b:	cmp    DWORD PTR [rip+0x11b66],0x1        # 0x1400230b8
   140011552:	jne    0x140011579
   140011554:	test   ecx,ecx
   140011556:	je     0x14001156e
   140011558:	dec    ecx
   14001155a:	je     0x140011567
   14001155c:	dec    ecx
   14001155e:	jne    0x140011579
   140011560:	mov    ecx,0xfffffff4
   140011565:	jmp    0x140011573
   140011567:	mov    ecx,0xfffffff5
   14001156c:	jmp    0x140011573
   14001156e:	mov    ecx,0xfffffff6
   140011573:	call   QWORD PTR [rip+0x8cef]        # 0x14001a268
   140011579:	mov    rax,QWORD PTR [rbp+rsi*8+0x0]
   14001157e:	mov    QWORD PTR [rdi+rax*1],rbx
   140011582:	xor    eax,eax
   140011584:	jmp    0x14001159c
   140011586:	call   0x14000bdc0
   14001158b:	mov    DWORD PTR [rax],0x9
   140011591:	call   0x14000bde0
   140011596:	and    DWORD PTR [rax],0x0
   140011599:	or     eax,0xffffffff
   14001159c:	mov    rbx,QWORD PTR [rsp+0x30]
   1400115a1:	mov    rbp,QWORD PTR [rsp+0x38]
   1400115a6:	mov    rsi,QWORD PTR [rsp+0x40]
   1400115ab:	add    rsp,0x20
   1400115af:	pop    rdi
   1400115b0:	ret    
   1400115b1:	int3   
   1400115b2:	int3   
   1400115b3:	int3   
   1400115b4:	mov    QWORD PTR [rsp+0x8],rbx
   1400115b9:	mov    QWORD PTR [rsp+0x10],rbp
   1400115be:	push   rdi
   1400115bf:	sub    rsp,0x20
   1400115c3:	test   ecx,ecx
   1400115c5:	js     0x140011638
   1400115c7:	cmp    ecx,DWORD PTR [rip+0x1449f]        # 0x140025a6c
   1400115cd:	jae    0x140011638
   1400115cf:	movsxd rbx,ecx
   1400115d2:	lea    rbp,[rip+0x144a7]        # 0x140025a80
   1400115d9:	mov    rdi,rbx
   1400115dc:	and    ebx,0x1f
   1400115df:	sar    rdi,0x5
   1400115e3:	imul   rbx,rbx,0x58
   1400115e7:	mov    rax,QWORD PTR [rbp+rdi*8+0x0]
   1400115ec:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   1400115f1:	je     0x140011638
   1400115f3:	cmp    QWORD PTR [rax+rbx*1],0xffffffffffffffff
   1400115f8:	je     0x140011638
   1400115fa:	cmp    DWORD PTR [rip+0x11ab7],0x1        # 0x1400230b8
   140011601:	jne    0x14001162a
   140011603:	test   ecx,ecx
   140011605:	je     0x14001161d
   140011607:	dec    ecx
   140011609:	je     0x140011616
   14001160b:	dec    ecx
   14001160d:	jne    0x14001162a
   14001160f:	mov    ecx,0xfffffff4
   140011614:	jmp    0x140011622
   140011616:	mov    ecx,0xfffffff5
   14001161b:	jmp    0x140011622
   14001161d:	mov    ecx,0xfffffff6
   140011622:	xor    edx,edx
   140011624:	call   QWORD PTR [rip+0x8c3e]        # 0x14001a268
   14001162a:	mov    rax,QWORD PTR [rbp+rdi*8+0x0]
   14001162f:	or     QWORD PTR [rbx+rax*1],0xffffffffffffffff
   140011634:	xor    eax,eax
   140011636:	jmp    0x14001164e
   140011638:	call   0x14000bdc0
   14001163d:	mov    DWORD PTR [rax],0x9
   140011643:	call   0x14000bde0
   140011648:	and    DWORD PTR [rax],0x0
   14001164b:	or     eax,0xffffffff
   14001164e:	mov    rbx,QWORD PTR [rsp+0x30]
   140011653:	mov    rbp,QWORD PTR [rsp+0x38]
   140011658:	add    rsp,0x20
   14001165c:	pop    rdi
   14001165d:	ret    
   14001165e:	int3   
   14001165f:	int3   
   140011660:	sub    rsp,0x28
   140011664:	cmp    ecx,0xfffffffe
   140011667:	jne    0x14001167e
   140011669:	call   0x14000bde0
   14001166e:	and    DWORD PTR [rax],0x0
   140011671:	call   0x14000bdc0
   140011676:	mov    DWORD PTR [rax],0x9
   14001167c:	jmp    0x1400116cb
   14001167e:	test   ecx,ecx
   140011680:	js     0x1400116b3
   140011682:	cmp    ecx,DWORD PTR [rip+0x143e4]        # 0x140025a6c
   140011688:	jae    0x1400116b3
   14001168a:	movsxd rdx,ecx
   14001168d:	lea    rcx,[rip+0x143ec]        # 0x140025a80
   140011694:	mov    rax,rdx
   140011697:	and    edx,0x1f
   14001169a:	sar    rax,0x5
   14001169e:	imul   rdx,rdx,0x58
   1400116a2:	mov    rax,QWORD PTR [rcx+rax*8]
   1400116a6:	test   BYTE PTR [rax+rdx*1+0x8],0x1
   1400116ab:	je     0x1400116b3
   1400116ad:	mov    rax,QWORD PTR [rax+rdx*1]
   1400116b1:	jmp    0x1400116cf
   1400116b3:	call   0x14000bde0
   1400116b8:	and    DWORD PTR [rax],0x0
   1400116bb:	call   0x14000bdc0
   1400116c0:	mov    DWORD PTR [rax],0x9
   1400116c6:	call   0x14000d01c
   1400116cb:	or     rax,0xffffffffffffffff
   1400116cf:	add    rsp,0x28
   1400116d3:	ret    
   1400116d4:	mov    rax,rsp
   1400116d7:	mov    QWORD PTR [rax+0x8],rbx
   1400116db:	mov    QWORD PTR [rax+0x10],rsi
   1400116df:	mov    QWORD PTR [rax+0x18],rdi
   1400116e3:	mov    QWORD PTR [rax+0x20],r12
   1400116e7:	push   r14
   1400116e9:	sub    rsp,0x20
   1400116ed:	movsxd rbx,ecx
   1400116f0:	mov    r12,rbx
   1400116f3:	sar    r12,0x5
   1400116f7:	lea    r14,[rip+0x14382]        # 0x140025a80
   1400116fe:	and    ebx,0x1f
   140011701:	imul   rbx,rbx,0x58
   140011705:	mov    rsi,QWORD PTR [r14+r12*8]
   140011709:	mov    edi,0x1
   14001170e:	cmp    DWORD PTR [rbx+rsi*1+0xc],0x0
   140011713:	jne    0x140011749
   140011715:	lea    ecx,[rdi+0x9]
   140011718:	call   0x14000cb28
   14001171d:	nop
   14001171e:	cmp    DWORD PTR [rbx+rsi*1+0xc],0x0
   140011723:	jne    0x14001173f
   140011725:	lea    rcx,[rbx+rsi*1+0x10]
   14001172a:	mov    edx,0xfa0
   14001172f:	call   QWORD PTR [rip+0x8a23]        # 0x14001a158
   140011735:	neg    eax
   140011737:	sbb    edx,edx
   140011739:	and    edi,edx
   14001173b:	inc    DWORD PTR [rbx+rsi*1+0xc]
   14001173f:	mov    ecx,0xa
   140011744:	call   0x14000ca28
   140011749:	test   edi,edi
   14001174b:	je     0x14001175c
   14001174d:	mov    rcx,QWORD PTR [r14+r12*8]
   140011751:	lea    rcx,[rcx+rbx*1+0x10]
   140011756:	call   QWORD PTR [rip+0x898c]        # 0x14001a0e8
   14001175c:	mov    eax,edi
   14001175e:	mov    rbx,QWORD PTR [rsp+0x30]
   140011763:	mov    rsi,QWORD PTR [rsp+0x38]
   140011768:	mov    rdi,QWORD PTR [rsp+0x40]
   14001176d:	mov    r12,QWORD PTR [rsp+0x48]
   140011772:	add    rsp,0x20
   140011776:	pop    r14
   140011778:	ret    
   140011779:	int3   
   14001177a:	int3   
   14001177b:	int3   
   14001177c:	movsxd rdx,ecx
   14001177f:	lea    rcx,[rip+0x142fa]        # 0x140025a80
   140011786:	mov    rax,rdx
   140011789:	and    edx,0x1f
   14001178c:	sar    rax,0x5
   140011790:	imul   rdx,rdx,0x58
   140011794:	mov    rax,QWORD PTR [rcx+rax*8]
   140011798:	lea    rcx,[rax+rdx*1+0x10]
   14001179d:	rex.W jmp QWORD PTR [rip+0x894c]        # 0x14001a0f0
   1400117a4:	mov    QWORD PTR [rsp+0x8],rbx
   1400117a9:	mov    QWORD PTR [rsp+0x10],rsi
   1400117ae:	mov    QWORD PTR [rsp+0x18],rdi
   1400117b3:	push   r12
   1400117b5:	push   r13
   1400117b7:	push   r14
   1400117b9:	sub    rsp,0x40
   1400117bd:	or     rsi,0xffffffffffffffff
   1400117c1:	mov    r12d,esi
   1400117c4:	xor    r13d,r13d
   1400117c7:	lea    ebx,[rsi+0xc]
   1400117ca:	mov    ecx,ebx
   1400117cc:	call   0x14000ca40
   1400117d1:	test   eax,eax
   1400117d3:	jne    0x1400117dc
   1400117d5:	mov    eax,esi
   1400117d7:	jmp    0x140011992
   1400117dc:	mov    ecx,ebx
   1400117de:	call   0x14000cb28
   1400117e3:	nop
   1400117e4:	xor    edi,edi
   1400117e6:	lea    rax,[rip+0x14293]        # 0x140025a80
   1400117ed:	mov    DWORD PTR [rsp+0x24],edi
   1400117f1:	cmp    edi,0x40
   1400117f4:	jge    0x140011985
   1400117fa:	movsxd r14,edi
   1400117fd:	mov    rbx,QWORD PTR [rax+r14*8]
   140011801:	test   rbx,rbx
   140011804:	je     0x1400118fb
   14001180a:	mov    QWORD PTR [rsp+0x30],rbx
   14001180f:	mov    rax,QWORD PTR [rax+r14*8]
   140011813:	add    rax,0xb00
   140011819:	cmp    rbx,rax
   14001181c:	jae    0x1400118eb
   140011822:	test   BYTE PTR [rbx+0x8],0x1
   140011826:	jne    0x1400118d7
   14001182c:	cmp    DWORD PTR [rbx+0xc],0x0
   140011830:	jne    0x14001186e
   140011832:	mov    ecx,0xa
   140011837:	call   0x14000cb28
   14001183c:	nop
   14001183d:	cmp    DWORD PTR [rbx+0xc],0x0
   140011841:	jne    0x140011864
   140011843:	lea    rcx,[rbx+0x10]
   140011847:	mov    edx,0xfa0
   14001184c:	call   QWORD PTR [rip+0x8906]        # 0x14001a158
   140011852:	test   eax,eax
   140011854:	jne    0x140011861
   140011856:	lea    r13d,[rax+0x1]
   14001185a:	mov    DWORD PTR [rsp+0x28],r13d
   14001185f:	jmp    0x140011864
   140011861:	inc    DWORD PTR [rbx+0xc]
   140011864:	mov    ecx,0xa
   140011869:	call   0x14000ca28
   14001186e:	test   r13d,r13d
   140011871:	jne    0x1400118d7
   140011873:	lea    rcx,[rbx+0x10]
   140011877:	call   QWORD PTR [rip+0x886b]        # 0x14001a0e8
   14001187d:	test   BYTE PTR [rbx+0x8],0x1
   140011881:	je     0x14001188f
   140011883:	lea    rcx,[rbx+0x10]
   140011887:	call   QWORD PTR [rip+0x8863]        # 0x14001a0f0
   14001188d:	jmp    0x1400118d7
   14001188f:	or     rsi,0xffffffffffffffff
   140011893:	test   r13d,r13d
   140011896:	jne    0x1400118d7
   140011898:	mov    BYTE PTR [rbx+0x8],0x1
   14001189c:	mov    QWORD PTR [rbx],rsi
   14001189f:	lea    r8,[rip+0x141da]        # 0x140025a80
   1400118a6:	sub    rbx,QWORD PTR [r8+r14*8]
   1400118aa:	movabs rax,0x2e8ba2e8ba2e8ba3
   1400118b4:	imul   rbx
   1400118b7:	mov    r12,rdx
   1400118ba:	sar    r12,0x4
   1400118be:	mov    rax,r12
   1400118c1:	shr    rax,0x3f
   1400118c5:	add    r12,rax
   1400118c8:	mov    eax,edi
   1400118ca:	shl    eax,0x5
   1400118cd:	add    r12d,eax
   1400118d0:	mov    DWORD PTR [rsp+0x20],r12d
   1400118d5:	jmp    0x1400118eb
   1400118d7:	add    rbx,0x58
   1400118db:	or     rsi,0xffffffffffffffff
   1400118df:	lea    rax,[rip+0x1419a]        # 0x140025a80
   1400118e6:	jmp    0x14001180a
   1400118eb:	cmp    r12d,esi
   1400118ee:	jne    0x140011985
   1400118f4:	inc    edi
   1400118f6:	jmp    0x1400117e6
   1400118fb:	mov    edx,0x58
   140011900:	lea    ecx,[rdx-0x38]
   140011903:	call   0x140010b24
   140011908:	mov    QWORD PTR [rsp+0x30],rax
   14001190d:	test   rax,rax
   140011910:	je     0x140011985
   140011912:	movsxd rdx,edi
   140011915:	lea    r8,[rip+0x14164]        # 0x140025a80
   14001191c:	mov    QWORD PTR [r8+rdx*8],rax
   140011920:	add    DWORD PTR [rip+0x14145],0x20        # 0x140025a6c
   140011927:	mov    rcx,QWORD PTR [r8+rdx*8]
   14001192b:	add    rcx,0xb00
   140011932:	cmp    rax,rcx
   140011935:	jae    0x140011951
   140011937:	mov    BYTE PTR [rax+0x8],0x0
   14001193b:	mov    QWORD PTR [rax],rsi
   14001193e:	mov    BYTE PTR [rax+0x9],0xa
   140011942:	and    DWORD PTR [rax+0xc],0x0
   140011946:	add    rax,0x58
   14001194a:	mov    QWORD PTR [rsp+0x30],rax
   14001194f:	jmp    0x140011927
   140011951:	shl    edi,0x5
   140011954:	mov    DWORD PTR [rsp+0x20],edi
   140011958:	movsxd rcx,edi
   14001195b:	mov    rax,rcx
   14001195e:	sar    rax,0x5
   140011962:	and    ecx,0x1f
   140011965:	imul   rcx,rcx,0x58
   140011969:	mov    rax,QWORD PTR [r8+rax*8]
   14001196d:	mov    BYTE PTR [rax+rcx*1+0x8],0x1
   140011972:	mov    ecx,edi
   140011974:	call   0x1400116d4
   140011979:	test   eax,eax
   14001197b:	cmove  edi,esi
   14001197e:	mov    r12d,edi
   140011981:	mov    DWORD PTR [rsp+0x20],edi
   140011985:	mov    ecx,0xb
   14001198a:	call   0x14000ca28
   14001198f:	mov    eax,r12d
   140011992:	mov    rbx,QWORD PTR [rsp+0x60]
   140011997:	mov    rsi,QWORD PTR [rsp+0x68]
   14001199c:	mov    rdi,QWORD PTR [rsp+0x70]
   1400119a1:	add    rsp,0x40
   1400119a5:	pop    r14
   1400119a7:	pop    r13
   1400119a9:	pop    r12
   1400119ab:	ret    
   1400119ac:	mov    QWORD PTR [rsp+0x20],rbx
   1400119b1:	push   rbp
   1400119b2:	push   rsi
   1400119b3:	push   rdi
   1400119b4:	push   r12
   1400119b6:	push   r13
   1400119b8:	push   r14
   1400119ba:	push   r15
   1400119bc:	lea    rbp,[rsp-0x1a30]
   1400119c4:	mov    eax,0x1b30
   1400119c9:	call   0x140016e80
   1400119ce:	sub    rsp,rax
   1400119d1:	mov    rax,QWORD PTR [rip+0x116e8]        # 0x1400230c0
   1400119d8:	xor    rax,rsp
   1400119db:	mov    QWORD PTR [rbp+0x1a20],rax
   1400119e2:	xor    edi,edi
   1400119e4:	mov    r14d,r8d
   1400119e7:	mov    r13,rdx
   1400119ea:	and    DWORD PTR [rsp+0x44],edi
   1400119ee:	movsxd rbx,ecx
   1400119f1:	test   r8d,r8d
   1400119f4:	jne    0x1400119fd
   1400119f6:	xor    eax,eax
   1400119f8:	jmp    0x1400120e2
   1400119fd:	test   rdx,rdx
   140011a00:	jne    0x140011a21
   140011a02:	call   0x14000bde0
   140011a07:	and    DWORD PTR [rax],edi
   140011a09:	call   0x14000bdc0
   140011a0e:	mov    DWORD PTR [rax],0x16
   140011a14:	call   0x14000d01c
   140011a19:	or     eax,0xffffffff
   140011a1c:	jmp    0x1400120e2
   140011a21:	mov    r15,rbx
   140011a24:	mov    r12,rbx
   140011a27:	lea    rax,[rip+0x14052]        # 0x140025a80
   140011a2e:	sar    r12,0x5
   140011a32:	and    r15d,0x1f
   140011a36:	mov    rcx,QWORD PTR [rax+r12*8]
   140011a3a:	mov    QWORD PTR [rsp+0x50],r12
   140011a3f:	imul   r15,r15,0x58
   140011a43:	mov    sil,BYTE PTR [r15+rcx*1+0x38]
   140011a48:	mov    QWORD PTR [rsp+0x60],r15
   140011a4d:	add    sil,sil
   140011a50:	sar    sil,1
   140011a53:	cmp    sil,0x2
   140011a57:	je     0x140011a5f
   140011a59:	cmp    sil,0x1
   140011a5d:	jne    0x140011a68
   140011a5f:	mov    eax,r14d
   140011a62:	not    eax
   140011a64:	test   al,0x1
   140011a66:	je     0x140011a02
   140011a68:	test   BYTE PTR [r15+rcx*1+0x8],0x20
   140011a6e:	je     0x140011a7d
   140011a70:	xor    edx,edx
   140011a72:	mov    ecx,ebx
   140011a74:	lea    r8d,[rdx+0x2]
   140011a78:	call   0x140015d7c
   140011a7d:	mov    ecx,ebx
   140011a7f:	call   0x140015228
   140011a84:	test   eax,eax
   140011a86:	je     0x140011d56
   140011a8c:	lea    rax,[rip+0x13fed]        # 0x140025a80
   140011a93:	mov    rax,QWORD PTR [rax+r12*8]
   140011a97:	test   BYTE PTR [r15+rax*1+0x8],0x80
   140011a9d:	je     0x140011d56
   140011aa3:	call   0x14000d204
   140011aa8:	xor    ebx,ebx
   140011aaa:	lea    rdx,[rsp+0x5c]
   140011aaf:	mov    rcx,QWORD PTR [rax+0xc0]
   140011ab6:	lea    rax,[rip+0x13fc3]        # 0x140025a80
   140011abd:	cmp    DWORD PTR [rcx+0x14],ebx
   140011ac0:	mov    rcx,QWORD PTR [rax+r12*8]
   140011ac4:	mov    rcx,QWORD PTR [r15+rcx*1]
   140011ac8:	sete   bl
   140011acb:	call   QWORD PTR [rip+0x87a7]        # 0x14001a278
   140011ad1:	test   eax,eax
   140011ad3:	je     0x140011d56
   140011ad9:	test   ebx,ebx
   140011adb:	je     0x140011ae6
   140011add:	test   sil,sil
   140011ae0:	je     0x140011d56
   140011ae6:	call   QWORD PTR [rip+0x8784]        # 0x14001a270
   140011aec:	and    DWORD PTR [rsp+0x58],edi
   140011af0:	mov    rbx,r13
   140011af3:	mov    DWORD PTR [rsp+0x5c],eax
   140011af7:	test   r14d,r14d
   140011afa:	je     0x140011d4d
   140011b00:	test   sil,sil
   140011b03:	jne    0x140011c8d
   140011b09:	mov    cl,BYTE PTR [rbx]
   140011b0b:	xor    eax,eax
   140011b0d:	cmp    cl,0xa
   140011b10:	sete   al
   140011b13:	mov    DWORD PTR [rsp+0x4c],eax
   140011b17:	lea    rax,[rip+0x13f62]        # 0x140025a80
   140011b1e:	mov    rdx,QWORD PTR [rax+r12*8]
   140011b22:	cmp    DWORD PTR [r15+rdx*1+0x50],0x0
   140011b28:	je     0x140011b4a
   140011b2a:	mov    al,BYTE PTR [r15+rdx*1+0x4c]
   140011b2f:	mov    BYTE PTR [rsp+0x61],cl
   140011b33:	mov    r8d,0x2
   140011b39:	mov    BYTE PTR [rsp+0x60],al
   140011b3d:	and    DWORD PTR [r15+rdx*1+0x50],0x0
   140011b43:	lea    rdx,[rsp+0x60]
   140011b48:	jmp    0x140011b93
   140011b4a:	movsx  ecx,cl
   140011b4d:	call   0x1400152d0
   140011b52:	test   eax,eax
   140011b54:	je     0x140011b8a
   140011b56:	mov    rax,r14
   140011b59:	sub    rax,rbx
   140011b5c:	add    rax,r13
   140011b5f:	cmp    rax,0x1
   140011b63:	jle    0x140011d16
   140011b69:	lea    rcx,[rsp+0x40]
   140011b6e:	mov    r8d,0x2
   140011b74:	mov    rdx,rbx
   140011b77:	call   0x140015d74
   140011b7c:	cmp    eax,0xffffffff
   140011b7f:	je     0x140011d37
   140011b85:	inc    rbx
   140011b88:	jmp    0x140011ba6
   140011b8a:	mov    r8d,0x1
   140011b90:	mov    rdx,rbx
   140011b93:	lea    rcx,[rsp+0x40]
   140011b98:	call   0x140015d74
   140011b9d:	cmp    eax,0xffffffff
   140011ba0:	je     0x140011d37
   140011ba6:	and    QWORD PTR [rsp+0x38],0x0
   140011bac:	and    QWORD PTR [rsp+0x30],0x0
   140011bb2:	mov    ecx,DWORD PTR [rsp+0x5c]
   140011bb6:	lea    rax,[rsp+0x60]
   140011bbb:	lea    r8,[rsp+0x40]
   140011bc0:	mov    r9d,0x1
   140011bc6:	xor    edx,edx
   140011bc8:	mov    DWORD PTR [rsp+0x28],0x5
   140011bd0:	inc    rbx
   140011bd3:	mov    QWORD PTR [rsp+0x20],rax
   140011bd8:	call   QWORD PTR [rip+0x8622]        # 0x14001a200
   140011bde:	mov    r12d,eax
   140011be1:	test   eax,eax
   140011be3:	je     0x140011d37
   140011be9:	mov    rcx,QWORD PTR [rsp+0x50]
   140011bee:	and    QWORD PTR [rsp+0x20],0x0
   140011bf4:	lea    rax,[rip+0x13e85]        # 0x140025a80
   140011bfb:	mov    rcx,QWORD PTR [rax+rcx*8]
   140011bff:	lea    r9,[rsp+0x58]
   140011c04:	lea    rdx,[rsp+0x60]
   140011c09:	mov    rcx,QWORD PTR [r15+rcx*1]
   140011c0d:	mov    r8d,r12d
   140011c10:	call   QWORD PTR [rip+0x85d2]        # 0x14001a1e8
   140011c16:	test   eax,eax
   140011c18:	je     0x140011d40
   140011c1e:	mov    edi,ebx
   140011c20:	sub    edi,r13d
   140011c23:	add    edi,DWORD PTR [rsp+0x44]
   140011c27:	cmp    DWORD PTR [rsp+0x58],r12d
   140011c2c:	jl     0x140011d37
   140011c32:	cmp    DWORD PTR [rsp+0x4c],0x0
   140011c37:	mov    r12,QWORD PTR [rsp+0x50]
   140011c3c:	je     0x140011d07
   140011c42:	and    QWORD PTR [rsp+0x20],0x0
   140011c48:	lea    rax,[rip+0x13e31]        # 0x140025a80
   140011c4f:	mov    BYTE PTR [rsp+0x60],0xd
   140011c54:	mov    rcx,QWORD PTR [rax+r12*8]
   140011c58:	lea    r9,[rsp+0x58]
   140011c5d:	lea    rdx,[rsp+0x60]
   140011c62:	mov    rcx,QWORD PTR [r15+rcx*1]
   140011c66:	mov    r8d,0x1
   140011c6c:	call   QWORD PTR [rip+0x8576]        # 0x14001a1e8
   140011c72:	test   eax,eax
   140011c74:	je     0x140011d40
   140011c7a:	cmp    DWORD PTR [rsp+0x58],0x1
   140011c7f:	jl     0x140011d37
   140011c85:	inc    DWORD PTR [rsp+0x44]
   140011c89:	inc    edi
   140011c8b:	jmp    0x140011d07
   140011c8d:	cmp    sil,0x1
   140011c91:	je     0x140011c99
   140011c93:	cmp    sil,0x2
   140011c97:	jne    0x140011cb7
   140011c99:	movzx  eax,WORD PTR [rbx]
   140011c9c:	xor    r12d,r12d
   140011c9f:	cmp    ax,0xa
   140011ca3:	mov    WORD PTR [rsp+0x40],ax
   140011ca8:	sete   r12b
   140011cac:	add    rbx,0x2
   140011cb0:	mov    DWORD PTR [rsp+0x4c],r12d
   140011cb5:	jmp    0x140011cbc
   140011cb7:	mov    r12d,DWORD PTR [rsp+0x4c]
   140011cbc:	cmp    sil,0x1
   140011cc0:	je     0x140011cc8
   140011cc2:	cmp    sil,0x2
   140011cc6:	jne    0x140011d02
   140011cc8:	movzx  ecx,WORD PTR [rsp+0x40]
   140011ccd:	call   0x140016e08
   140011cd2:	cmp    ax,WORD PTR [rsp+0x40]
   140011cd7:	jne    0x140011d40
   140011cd9:	add    edi,0x2
   140011cdc:	test   r12d,r12d
   140011cdf:	je     0x140011d02
   140011ce1:	mov    r12d,0xd
   140011ce7:	mov    ecx,r12d
   140011cea:	mov    WORD PTR [rsp+0x40],r12w
   140011cf0:	call   0x140016e08
   140011cf5:	cmp    ax,WORD PTR [rsp+0x40]
   140011cfa:	jne    0x140011d40
   140011cfc:	inc    edi
   140011cfe:	inc    DWORD PTR [rsp+0x44]
   140011d02:	mov    r12,QWORD PTR [rsp+0x50]
   140011d07:	mov    eax,ebx
   140011d09:	sub    eax,r13d
   140011d0c:	cmp    eax,r14d
   140011d0f:	jae    0x140011d37
   140011d11:	jmp    0x140011b00
   140011d16:	mov    al,BYTE PTR [rbx]
   140011d18:	lea    rdx,[rip+0x13d61]        # 0x140025a80
   140011d1f:	inc    edi
   140011d21:	mov    rcx,QWORD PTR [rdx+r12*8]
   140011d25:	mov    BYTE PTR [r15+rcx*1+0x4c],al
   140011d2a:	mov    rax,QWORD PTR [rdx+r12*8]
   140011d2e:	mov    DWORD PTR [r15+rax*1+0x50],0x1
   140011d37:	mov    ebx,DWORD PTR [rsp+0x4c]
   140011d3b:	jmp    0x140012039
   140011d40:	call   QWORD PTR [rip+0x832a]        # 0x14001a070
   140011d46:	mov    ebx,eax
   140011d48:	jmp    0x140012039
   140011d4d:	mov    ebx,DWORD PTR [rsp+0x4c]
   140011d51:	jmp    0x140012041
   140011d56:	lea    rax,[rip+0x13d23]        # 0x140025a80
   140011d5d:	mov    rcx,QWORD PTR [rax+r12*8]
   140011d61:	test   BYTE PTR [r15+rcx*1+0x8],0x80
   140011d67:	je     0x14001206b
   140011d6d:	xor    ebx,ebx
   140011d6f:	mov    r12,r13
   140011d72:	test   sil,sil
   140011d75:	jne    0x140011e46
   140011d7b:	test   r14d,r14d
   140011d7e:	je     0x1400120a1
   140011d84:	lea    edx,[rbx+0xd]
   140011d87:	mov    r15d,DWORD PTR [rsp+0x44]
   140011d8c:	lea    rsi,[rbp+0x620]
   140011d93:	xor    ecx,ecx
   140011d95:	mov    eax,r12d
   140011d98:	sub    eax,r13d
   140011d9b:	cmp    eax,r14d
   140011d9e:	jae    0x140011dc7
   140011da0:	mov    al,BYTE PTR [r12]
   140011da4:	inc    r12
   140011da7:	cmp    al,0xa
   140011da9:	jne    0x140011db6
   140011dab:	mov    BYTE PTR [rsi],dl
   140011dad:	inc    r15d
   140011db0:	inc    rsi
   140011db3:	inc    rcx
   140011db6:	inc    rcx
   140011db9:	mov    BYTE PTR [rsi],al
   140011dbb:	inc    rsi
   140011dbe:	cmp    rcx,0x13ff
   140011dc5:	jb     0x140011d95
   140011dc7:	and    QWORD PTR [rsp+0x20],rbx
   140011dcc:	lea    rax,[rbp+0x620]
   140011dd3:	mov    r8d,esi
   140011dd6:	sub    r8d,eax
   140011dd9:	mov    rax,QWORD PTR [rsp+0x50]
   140011dde:	lea    rcx,[rip+0x13c9b]        # 0x140025a80
   140011de5:	mov    rcx,QWORD PTR [rcx+rax*8]
   140011de9:	mov    DWORD PTR [rsp+0x44],r15d
   140011dee:	mov    r15,QWORD PTR [rsp+0x60]
   140011df3:	mov    rcx,QWORD PTR [r15+rcx*1]
   140011df7:	lea    r9,[rsp+0x48]
   140011dfc:	lea    rdx,[rbp+0x620]
   140011e03:	call   QWORD PTR [rip+0x83df]        # 0x14001a1e8
   140011e09:	test   eax,eax
   140011e0b:	je     0x140011d40
   140011e11:	add    edi,DWORD PTR [rsp+0x48]
   140011e15:	lea    rax,[rbp+0x620]
   140011e1c:	sub    rsi,rax
   140011e1f:	movsxd rax,DWORD PTR [rsp+0x48]
   140011e24:	cmp    rax,rsi
   140011e27:	jl     0x140012039
   140011e2d:	mov    eax,r12d
   140011e30:	mov    edx,0xd
   140011e35:	sub    eax,r13d
   140011e38:	cmp    eax,r14d
   140011e3b:	jb     0x140011d87
   140011e41:	jmp    0x140012039
   140011e46:	cmp    sil,0x2
   140011e4a:	jne    0x140011f28
   140011e50:	test   r14d,r14d
   140011e53:	je     0x1400120a1
   140011e59:	mov    edx,0xd
   140011e5e:	mov    r15d,DWORD PTR [rsp+0x44]
   140011e63:	lea    rsi,[rbp+0x620]
   140011e6a:	xor    ecx,ecx
   140011e6c:	mov    eax,r12d
   140011e6f:	sub    eax,r13d
   140011e72:	cmp    eax,r14d
   140011e75:	jae    0x140011ea9
   140011e77:	movzx  eax,WORD PTR [r12]
   140011e7c:	add    r12,0x2
   140011e80:	cmp    ax,0xa
   140011e84:	jne    0x140011e95
   140011e86:	mov    WORD PTR [rsi],dx
   140011e89:	add    r15d,0x2
   140011e8d:	add    rsi,0x2
   140011e91:	add    rcx,0x2
   140011e95:	add    rcx,0x2
   140011e99:	mov    WORD PTR [rsi],ax
   140011e9c:	add    rsi,0x2
   140011ea0:	cmp    rcx,0x13fe
   140011ea7:	jb     0x140011e6c
   140011ea9:	and    QWORD PTR [rsp+0x20],rbx
   140011eae:	lea    rax,[rbp+0x620]
   140011eb5:	mov    r8d,esi
   140011eb8:	sub    r8d,eax
   140011ebb:	mov    rax,QWORD PTR [rsp+0x50]
   140011ec0:	lea    rcx,[rip+0x13bb9]        # 0x140025a80
   140011ec7:	mov    rcx,QWORD PTR [rcx+rax*8]
   140011ecb:	mov    DWORD PTR [rsp+0x44],r15d
   140011ed0:	mov    r15,QWORD PTR [rsp+0x60]
   140011ed5:	mov    rcx,QWORD PTR [r15+rcx*1]
   140011ed9:	lea    r9,[rsp+0x48]
   140011ede:	lea    rdx,[rbp+0x620]
   140011ee5:	call   QWORD PTR [rip+0x82fd]        # 0x14001a1e8
   140011eeb:	test   eax,eax
   140011eed:	je     0x140011d40
   140011ef3:	add    edi,DWORD PTR [rsp+0x48]
   140011ef7:	lea    rax,[rbp+0x620]
   140011efe:	sub    rsi,rax
   140011f01:	movsxd rax,DWORD PTR [rsp+0x48]
   140011f06:	cmp    rax,rsi
   140011f09:	jl     0x140012039
   140011f0f:	mov    eax,r12d
   140011f12:	mov    edx,0xd
   140011f17:	sub    eax,r13d
   140011f1a:	cmp    eax,r14d
   140011f1d:	jb     0x140011e5e
   140011f23:	jmp    0x140012039
   140011f28:	test   r14d,r14d
   140011f2b:	je     0x1400120a1
   140011f31:	mov    r8d,0xd
   140011f37:	lea    rcx,[rsp+0x70]
   140011f3c:	xor    edx,edx
   140011f3e:	mov    eax,r12d
   140011f41:	sub    eax,r13d
   140011f44:	cmp    eax,r14d
   140011f47:	jae    0x140011f78
   140011f49:	movzx  eax,WORD PTR [r12]
   140011f4e:	add    r12,0x2
   140011f52:	cmp    ax,0xa
   140011f56:	jne    0x140011f64
   140011f58:	mov    WORD PTR [rcx],r8w
   140011f5c:	add    rcx,0x2
   140011f60:	add    rdx,0x2
   140011f64:	add    rdx,0x2
   140011f68:	mov    WORD PTR [rcx],ax
   140011f6b:	add    rcx,0x2
   140011f6f:	cmp    rdx,0x6a8
   140011f76:	jb     0x140011f3e
   140011f78:	and    QWORD PTR [rsp+0x38],0x0
   140011f7e:	and    QWORD PTR [rsp+0x30],0x0
   140011f84:	lea    rax,[rsp+0x70]
   140011f89:	sub    ecx,eax
   140011f8b:	lea    r8,[rsp+0x70]
   140011f90:	mov    DWORD PTR [rsp+0x28],0xd55
   140011f98:	mov    eax,ecx
   140011f9a:	mov    ecx,0xfde9
   140011f9f:	cdq    
   140011fa0:	sub    eax,edx
   140011fa2:	xor    edx,edx
   140011fa4:	sar    eax,1
   140011fa6:	mov    r9d,eax
   140011fa9:	lea    rax,[rbp+0x620]
   140011fb0:	mov    QWORD PTR [rsp+0x20],rax
   140011fb5:	call   QWORD PTR [rip+0x8245]        # 0x14001a200
   140011fbb:	mov    r15d,eax
   140011fbe:	test   eax,eax
   140011fc0:	je     0x140012061
   140011fc6:	xor    esi,esi
   140011fc8:	mov    rax,QWORD PTR [rsp+0x50]
   140011fcd:	and    QWORD PTR [rsp+0x20],0x0
   140011fd3:	movsxd rcx,esi
   140011fd6:	lea    rdx,[rbp+rcx*1+0x620]
   140011fde:	mov    r8d,r15d
   140011fe1:	lea    rcx,[rip+0x13a98]        # 0x140025a80
   140011fe8:	mov    rcx,QWORD PTR [rcx+rax*8]
   140011fec:	mov    rax,QWORD PTR [rsp+0x60]
   140011ff1:	lea    r9,[rsp+0x48]
   140011ff6:	mov    rcx,QWORD PTR [rax+rcx*1]
   140011ffa:	sub    r8d,esi
   140011ffd:	call   QWORD PTR [rip+0x81e5]        # 0x14001a1e8
   140012003:	test   eax,eax
   140012005:	je     0x140012012
   140012007:	add    esi,DWORD PTR [rsp+0x48]
   14001200b:	cmp    r15d,esi
   14001200e:	jg     0x140011fc8
   140012010:	jmp    0x14001201a
   140012012:	call   QWORD PTR [rip+0x8058]        # 0x14001a070
   140012018:	mov    ebx,eax
   14001201a:	cmp    r15d,esi
   14001201d:	jg     0x140012034
   14001201f:	mov    edi,r12d
   140012022:	mov    r8d,0xd
   140012028:	sub    edi,r13d
   14001202b:	cmp    edi,r14d
   14001202e:	jb     0x140011f37
   140012034:	mov    r15,QWORD PTR [rsp+0x60]
   140012039:	test   edi,edi
   14001203b:	jne    0x1400120dc
   140012041:	test   ebx,ebx
   140012043:	je     0x1400120a1
   140012045:	cmp    ebx,0x5
   140012048:	jne    0x140012095
   14001204a:	call   0x14000bdc0
   14001204f:	mov    DWORD PTR [rax],0x9
   140012055:	call   0x14000bde0
   14001205a:	mov    DWORD PTR [rax],ebx
   14001205c:	jmp    0x140011a19
   140012061:	call   QWORD PTR [rip+0x8009]        # 0x14001a070
   140012067:	mov    ebx,eax
   140012069:	jmp    0x140012034
   14001206b:	mov    rcx,QWORD PTR [r15+rcx*1]
   14001206f:	and    QWORD PTR [rsp+0x20],rdi
   140012074:	lea    r9,[rsp+0x48]
   140012079:	mov    r8d,r14d
   14001207c:	mov    rdx,r13
   14001207f:	call   QWORD PTR [rip+0x8163]        # 0x14001a1e8
   140012085:	test   eax,eax
   140012087:	je     0x140011d40
   14001208d:	mov    edi,DWORD PTR [rsp+0x48]
   140012091:	xor    ebx,ebx
   140012093:	jmp    0x140012039
   140012095:	mov    ecx,ebx
   140012097:	call   0x14000be00
   14001209c:	jmp    0x140011a19
   1400120a1:	mov    rax,QWORD PTR [rsp+0x50]
   1400120a6:	lea    rcx,[rip+0x139d3]        # 0x140025a80
   1400120ad:	mov    rax,QWORD PTR [rcx+rax*8]
   1400120b1:	test   BYTE PTR [r15+rax*1+0x8],0x40
   1400120b7:	je     0x1400120c4
   1400120b9:	cmp    BYTE PTR [r13+0x0],0x1a
   1400120be:	je     0x1400119f6
   1400120c4:	call   0x14000bdc0
   1400120c9:	mov    DWORD PTR [rax],0x1c
   1400120cf:	call   0x14000bde0
   1400120d4:	and    DWORD PTR [rax],0x0
   1400120d7:	jmp    0x140011a19
   1400120dc:	sub    edi,DWORD PTR [rsp+0x44]
   1400120e0:	mov    eax,edi
   1400120e2:	mov    rcx,QWORD PTR [rbp+0x1a20]
   1400120e9:	xor    rcx,rsp
   1400120ec:	call   0x14000a820
   1400120f1:	mov    rbx,QWORD PTR [rsp+0x1b88]
   1400120f9:	add    rsp,0x1b30
   140012100:	pop    r15
   140012102:	pop    r14
   140012104:	pop    r13
   140012106:	pop    r12
   140012108:	pop    rdi
   140012109:	pop    rsi
   14001210a:	pop    rbp
   14001210b:	ret    
   14001210c:	mov    QWORD PTR [rsp+0x10],rbx
   140012111:	mov    DWORD PTR [rsp+0x8],ecx
   140012115:	push   rsi
   140012116:	push   rdi
   140012117:	push   r12
   140012119:	push   r13
   14001211b:	push   r14
   14001211d:	sub    rsp,0x20
   140012121:	mov    esi,r8d
   140012124:	mov    r12,rdx
   140012127:	movsxd rdi,ecx
   14001212a:	cmp    edi,0xfffffffe
   14001212d:	jne    0x140012147
   14001212f:	call   0x14000bde0
   140012134:	and    DWORD PTR [rax],0x0
   140012137:	call   0x14000bdc0
   14001213c:	mov    DWORD PTR [rax],0x9
   140012142:	jmp    0x1400121d6
   140012147:	test   ecx,ecx
   140012149:	js     0x1400121be
   14001214b:	cmp    edi,DWORD PTR [rip+0x1391b]        # 0x140025a6c
   140012151:	jae    0x1400121be
   140012153:	mov    rbx,rdi
   140012156:	mov    r13,rdi
   140012159:	sar    r13,0x5
   14001215d:	lea    r14,[rip+0x1391c]        # 0x140025a80
   140012164:	and    ebx,0x1f
   140012167:	imul   rbx,rbx,0x58
   14001216b:	mov    rax,QWORD PTR [r14+r13*8]
   14001216f:	movsx  ecx,BYTE PTR [rax+rbx*1+0x8]
   140012174:	and    ecx,0x1
   140012177:	je     0x1400121be
   140012179:	mov    ecx,edi
   14001217b:	call   0x1400116d4
   140012180:	nop
   140012181:	mov    rax,QWORD PTR [r14+r13*8]
   140012185:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   14001218a:	je     0x14001219d
   14001218c:	mov    r8d,esi
   14001218f:	mov    rdx,r12
   140012192:	mov    ecx,edi
   140012194:	call   0x1400119ac
   140012199:	mov    ebx,eax
   14001219b:	jmp    0x1400121b3
   14001219d:	call   0x14000bdc0
   1400121a2:	mov    DWORD PTR [rax],0x9
   1400121a8:	call   0x14000bde0
   1400121ad:	and    DWORD PTR [rax],0x0
   1400121b0:	or     ebx,0xffffffff
   1400121b3:	mov    ecx,edi
   1400121b5:	call   0x14001177c
   1400121ba:	mov    eax,ebx
   1400121bc:	jmp    0x1400121d9
   1400121be:	call   0x14000bde0
   1400121c3:	and    DWORD PTR [rax],0x0
   1400121c6:	call   0x14000bdc0
   1400121cb:	mov    DWORD PTR [rax],0x9
   1400121d1:	call   0x14000d01c
   1400121d6:	or     eax,0xffffffff
   1400121d9:	mov    rbx,QWORD PTR [rsp+0x58]
   1400121de:	add    rsp,0x20
   1400121e2:	pop    r14
   1400121e4:	pop    r13
   1400121e6:	pop    r12
   1400121e8:	pop    rdi
   1400121e9:	pop    rsi
   1400121ea:	ret    
   1400121eb:	int3   
   1400121ec:	mov    QWORD PTR [rsp+0x8],rbx
   1400121f1:	mov    QWORD PTR [rsp+0x18],rbp
   1400121f6:	mov    QWORD PTR [rsp+0x20],rsi
   1400121fb:	push   rdi
   1400121fc:	sub    rsp,0x20
   140012200:	mov    rsi,r8
   140012203:	mov    rbp,rdx
   140012206:	mov    rdi,rcx
   140012209:	test   rdx,rdx
   14001220c:	je     0x1400122fa
   140012212:	cmp    BYTE PTR [rdx],0x0
   140012215:	je     0x1400122fa
   14001221b:	test   rcx,rcx
   14001221e:	jne    0x14001228a
   140012220:	xor    r9d,r9d
   140012223:	xor    r8d,r8d
   140012226:	xor    edx,edx
   140012228:	mov    rcx,rbp
   14001222b:	call   QWORD PTR [rip+0x804f]        # 0x14001a280
   140012231:	test   eax,eax
   140012233:	jne    0x140012249
   140012235:	call   QWORD PTR [rip+0x7e35]        # 0x14001a070
   14001223b:	mov    ecx,eax
   14001223d:	call   0x14000be00
   140012242:	xor    eax,eax
   140012244:	jmp    0x140012302
   140012249:	mov    eax,eax
   14001224b:	cmp    rsi,rax
   14001224e:	cmova  rax,rsi
   140012252:	mov    rsi,rax
   140012255:	cmp    rax,0xffffffffffffffff
   140012259:	jbe    0x140012268
   14001225b:	call   0x14000bdc0
   140012260:	mov    DWORD PTR [rax],0x16
   140012266:	jmp    0x140012242
   140012268:	mov    edx,0x1
   14001226d:	mov    rcx,rax
   140012270:	call   0x14000eb14
   140012275:	mov    rbx,rax
   140012278:	test   rax,rax
   14001227b:	jne    0x1400122a4
   14001227d:	call   0x14000bdc0
   140012282:	mov    DWORD PTR [rax],0xc
   140012288:	jmp    0x140012242
   14001228a:	test   r8,r8
   14001228d:	jne    0x1400122a1
   14001228f:	call   0x14000bdc0
   140012294:	mov    DWORD PTR [rax],0x16
   14001229a:	call   0x14000d01c
   14001229f:	jmp    0x140012242
   1400122a1:	mov    rbx,rcx
   1400122a4:	lea    r9,[rsp+0x38]
   1400122a9:	mov    r8,rbx
   1400122ac:	mov    edx,esi
   1400122ae:	mov    rcx,rbp
   1400122b1:	call   QWORD PTR [rip+0x7fc9]        # 0x14001a280
   1400122b7:	mov    ecx,eax
   1400122b9:	cmp    rcx,rsi
   1400122bc:	jb     0x1400122db
   1400122be:	test   rdi,rdi
   1400122c1:	jne    0x1400122cb
   1400122c3:	mov    rcx,rbx
   1400122c6:	call   0x14000b460
   1400122cb:	call   0x14000bdc0
   1400122d0:	mov    DWORD PTR [rax],0x22
   1400122d6:	jmp    0x140012242
   1400122db:	test   eax,eax
   1400122dd:	jne    0x1400122f5
   1400122df:	test   rdi,rdi
   1400122e2:	jne    0x140012235
   1400122e8:	mov    rcx,rbx
   1400122eb:	call   0x14000b460
   1400122f0:	jmp    0x140012235
   1400122f5:	mov    rax,rbx
   1400122f8:	jmp    0x140012302
   1400122fa:	mov    edx,r8d
   1400122fd:	call   0x140017060
   140012302:	mov    rbx,QWORD PTR [rsp+0x30]
   140012307:	mov    rbp,QWORD PTR [rsp+0x40]
   14001230c:	mov    rsi,QWORD PTR [rsp+0x48]
   140012311:	add    rsp,0x20
   140012315:	pop    rdi
   140012316:	ret    
   140012317:	int3   
   140012318:	mov    QWORD PTR [rsp+0x8],rbx
   14001231d:	push   rdi
   14001231e:	sub    rsp,0x20
   140012322:	mov    r8,rdx
   140012325:	movzx  edx,cl
   140012328:	cmp    BYTE PTR [r8+0x1],0x3a
   14001232d:	mov    rcx,r8
   140012330:	jne    0x140012336
   140012332:	lea    rcx,[r8+0x2]
   140012336:	mov    al,BYTE PTR [rcx]
   140012338:	cmp    al,0x5c
   14001233a:	je     0x140012340
   14001233c:	cmp    al,0x2f
   14001233e:	jne    0x140012346
   140012340:	cmp    BYTE PTR [rcx+0x1],0x0
   140012344:	je     0x140012354
   140012346:	test   dl,0x10
   140012349:	jne    0x140012354
   14001234b:	mov    ebx,0x8000
   140012350:	test   al,al
   140012352:	jne    0x140012359
   140012354:	mov    ebx,0x4040
   140012359:	shl    dx,0x7
   14001235d:	mov    eax,0x80
   140012362:	mov    rcx,r8
   140012365:	not    dx
   140012368:	and    dx,ax
   14001236b:	mov    eax,0x100
   140012370:	or     dx,ax
   140012373:	or     bx,dx
   140012376:	mov    edx,0x2e
   14001237b:	call   0x140017398
   140012380:	mov    rdi,rax
   140012383:	test   rax,rax
   140012386:	je     0x1400123d8
   140012388:	lea    rdx,[rip+0xd785]        # 0x14001fb14
   14001238f:	mov    rcx,rax
   140012392:	call   0x1400172b0
   140012397:	test   eax,eax
   140012399:	je     0x1400123d4
   14001239b:	lea    rdx,[rip+0xd76a]        # 0x14001fb0c
   1400123a2:	mov    rcx,rdi
   1400123a5:	call   0x1400172b0
   1400123aa:	test   eax,eax
   1400123ac:	je     0x1400123d4
   1400123ae:	lea    rdx,[rip+0xd74f]        # 0x14001fb04
   1400123b5:	mov    rcx,rdi
   1400123b8:	call   0x1400172b0
   1400123bd:	test   eax,eax
   1400123bf:	je     0x1400123d4
   1400123c1:	lea    rdx,[rip+0xd734]        # 0x14001fafc
   1400123c8:	mov    rcx,rdi
   1400123cb:	call   0x1400172b0
   1400123d0:	test   eax,eax
   1400123d2:	jne    0x1400123d8
   1400123d4:	or     bx,0x40
   1400123d8:	movzx  eax,bx
   1400123db:	shr    ax,0x3
   1400123df:	and    ax,0x38
   1400123e3:	or     bx,ax
   1400123e6:	movzx  eax,bx
   1400123e9:	shr    ax,0x6
   1400123ed:	and    ax,0x7
   1400123f1:	or     ax,bx
   1400123f4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400123f9:	add    rsp,0x20
   1400123fd:	pop    rdi
   1400123fe:	ret    
   1400123ff:	int3   
   140012400:	mov    QWORD PTR [rsp+0x18],rbx
   140012405:	mov    QWORD PTR [rsp+0x20],rsi
   14001240a:	push   rdi
   14001240b:	push   r12
   14001240d:	push   r13
   14001240f:	push   r14
   140012411:	push   r15
   140012413:	sub    rsp,0xa0
   14001241a:	mov    rax,QWORD PTR [rip+0x10c9f]        # 0x1400230c0
   140012421:	xor    rax,rsp
   140012424:	mov    QWORD PTR [rsp+0x98],rax
   14001242c:	mov    rdi,rdx
   14001242f:	movsxd rsi,ecx
   140012432:	mov    DWORD PTR [rsp+0x4c],esi
   140012436:	xor    ebx,ebx
   140012438:	mov    eax,ebx
   14001243a:	test   rdx,rdx
   14001243d:	setne  al
   140012440:	test   eax,eax
   140012442:	jne    0x14001245b
   140012444:	call   0x14000bde0
   140012449:	mov    DWORD PTR [rax],ebx
   14001244b:	call   0x14000bdc0
   140012450:	mov    DWORD PTR [rax],0x16
   140012456:	jmp    0x14001277d
   14001245b:	xor    edx,edx
   14001245d:	lea    r8d,[rdx+0x30]
   140012461:	mov    rcx,rdi
   140012464:	call   0x14000a530
   140012469:	cmp    esi,0xfffffffe
   14001246c:	jne    0x140012485
   14001246e:	call   0x14000bde0
   140012473:	mov    DWORD PTR [rax],ebx
   140012475:	call   0x14000bdc0
   14001247a:	mov    DWORD PTR [rax],0x9
   140012480:	jmp    0x140012782
   140012485:	test   esi,esi
   140012487:	js     0x14001276b
   14001248d:	cmp    esi,DWORD PTR [rip+0x135d9]        # 0x140025a6c
   140012493:	jae    0x14001276b
   140012499:	mov    r12,rsi
   14001249c:	mov    r13,rsi
   14001249f:	sar    r13,0x5
   1400124a3:	lea    r15,[rip+0x135d6]        # 0x140025a80
   1400124aa:	and    r12d,0x1f
   1400124ae:	imul   r12,r12,0x58
   1400124b2:	mov    rax,QWORD PTR [r15+r13*8]
   1400124b6:	movsx  ecx,BYTE PTR [rax+r12*1+0x8]
   1400124bc:	mov    r14d,0x1
   1400124c2:	and    ecx,r14d
   1400124c5:	je     0x14001276b
   1400124cb:	mov    ecx,esi
   1400124cd:	call   0x1400116d4
   1400124d2:	nop
   1400124d3:	mov    rcx,QWORD PTR [r15+r13*8]
   1400124d7:	test   BYTE PTR [rcx+r12*1+0x8],r14b
   1400124dc:	jne    0x1400124ee
   1400124de:	call   0x14000bdc0
   1400124e3:	mov    DWORD PTR [rax],0x9
   1400124e9:	jmp    0x14001275d
   1400124ee:	mov    rcx,QWORD PTR [rcx+r12*1]
   1400124f2:	call   QWORD PTR [rip+0x7d28]        # 0x14001a220
   1400124f8:	btr    eax,0xf
   1400124fc:	cmp    eax,r14d
   1400124ff:	je     0x140012599
   140012505:	cmp    eax,0x2
   140012508:	je     0x14001252a
   14001250a:	cmp    eax,0x3
   14001250d:	je     0x140012525
   14001250f:	test   eax,eax
   140012511:	je     0x1400124de
   140012513:	call   QWORD PTR [rip+0x7b57]        # 0x14001a070
   140012519:	mov    ecx,eax
   14001251b:	call   0x14000be00
   140012520:	jmp    0x14001275d
   140012525:	cmp    eax,0x2
   140012528:	jne    0x140012531
   14001252a:	mov    ecx,0x2000
   14001252f:	jmp    0x140012536
   140012531:	mov    ecx,0x1000
   140012536:	mov    WORD PTR [rdi+0x6],cx
   14001253a:	mov    DWORD PTR [rdi],esi
   14001253c:	mov    DWORD PTR [rdi+0x10],esi
   14001253f:	mov    WORD PTR [rdi+0x8],r14w
   140012544:	mov    WORD PTR [rdi+0x4],bx
   140012548:	mov    DWORD PTR [rdi+0xa],ebx
   14001254b:	mov    QWORD PTR [rdi+0x28],rbx
   14001254f:	mov    QWORD PTR [rdi+0x20],rbx
   140012553:	mov    QWORD PTR [rdi+0x18],rbx
   140012557:	cmp    eax,0x2
   14001255a:	jne    0x140012564
   14001255c:	mov    DWORD PTR [rdi+0x14],ebx
   14001255f:	jmp    0x140012760
   140012564:	mov    rcx,QWORD PTR [r15+r13*8]
   140012568:	mov    QWORD PTR [rsp+0x28],rbx
   14001256d:	lea    rax,[rsp+0x48]
   140012572:	mov    QWORD PTR [rsp+0x20],rax
   140012577:	xor    r9d,r9d
   14001257a:	xor    r8d,r8d
   14001257d:	xor    edx,edx
   14001257f:	mov    rcx,QWORD PTR [rcx+r12*1]
   140012583:	call   QWORD PTR [rip+0x7d07]        # 0x14001a290
   140012589:	neg    eax
   14001258b:	sbb    ecx,ecx
   14001258d:	and    ecx,DWORD PTR [rsp+0x48]
   140012591:	mov    DWORD PTR [rdi+0x14],ecx
   140012594:	jmp    0x140012760
   140012599:	mov    DWORD PTR [rdi+0xa],ebx
   14001259c:	mov    DWORD PTR [rdi+0x4],ebx
   14001259f:	mov    WORD PTR [rdi+0x8],r14w
   1400125a4:	mov    rcx,QWORD PTR [r15+r13*8]
   1400125a8:	lea    rdx,[rsp+0x60]
   1400125ad:	mov    rcx,QWORD PTR [rcx+r12*1]
   1400125b1:	call   QWORD PTR [rip+0x7cd1]        # 0x14001a288
   1400125b7:	test   eax,eax
   1400125b9:	je     0x140012513
   1400125bf:	movzx  eax,WORD PTR [rdi+0x6]
   1400125c3:	test   BYTE PTR [rsp+0x60],r14b
   1400125c8:	je     0x1400125d1
   1400125ca:	or     eax,0x124
   1400125cf:	jmp    0x1400125d6
   1400125d1:	or     eax,0x1b6
   1400125d6:	mov    WORD PTR [rdi+0x6],ax
   1400125da:	cmp    DWORD PTR [rsp+0x74],ebx
   1400125de:	jne    0x1400125ec
   1400125e0:	cmp    DWORD PTR [rsp+0x78],ebx
   1400125e4:	jne    0x1400125ec
   1400125e6:	mov    QWORD PTR [rdi+0x20],rbx
   1400125ea:	jmp    0x140012654
   1400125ec:	lea    rdx,[rsp+0x40]
   1400125f1:	lea    rcx,[rsp+0x74]
   1400125f6:	call   QWORD PTR [rip+0x7b1c]        # 0x14001a118
   1400125fc:	test   eax,eax
   1400125fe:	je     0x14001275d
   140012604:	lea    rdx,[rsp+0x50]
   140012609:	lea    rcx,[rsp+0x40]
   14001260e:	call   QWORD PTR [rip+0x7afc]        # 0x14001a110
   140012614:	test   eax,eax
   140012616:	je     0x14001275d
   14001261c:	movzx  eax,WORD PTR [rsp+0x5c]
   140012621:	movzx  r10d,WORD PTR [rsp+0x5a]
   140012627:	movzx  r9d,WORD PTR [rsp+0x58]
   14001262d:	movzx  r8d,WORD PTR [rsp+0x56]
   140012633:	movzx  edx,WORD PTR [rsp+0x52]
   140012638:	movzx  ecx,WORD PTR [rsp+0x50]
   14001263d:	or     DWORD PTR [rsp+0x30],0xffffffff
   140012642:	mov    DWORD PTR [rsp+0x28],eax
   140012646:	mov    DWORD PTR [rsp+0x20],r10d
   14001264b:	call   0x14001313c
   140012650:	mov    QWORD PTR [rdi+0x20],rax
   140012654:	cmp    DWORD PTR [rsp+0x6c],ebx
   140012658:	jne    0x140012666
   14001265a:	cmp    DWORD PTR [rsp+0x70],ebx
   14001265e:	jne    0x140012666
   140012660:	mov    rax,QWORD PTR [rdi+0x20]
   140012664:	jmp    0x1400126ca
   140012666:	lea    rdx,[rsp+0x40]
   14001266b:	lea    rcx,[rsp+0x6c]
   140012670:	call   QWORD PTR [rip+0x7aa2]        # 0x14001a118
   140012676:	test   eax,eax
   140012678:	je     0x14001275d
   14001267e:	lea    rdx,[rsp+0x50]
   140012683:	lea    rcx,[rsp+0x40]
   140012688:	call   QWORD PTR [rip+0x7a82]        # 0x14001a110
   14001268e:	test   eax,eax
   140012690:	je     0x14001275d
   140012696:	movzx  eax,WORD PTR [rsp+0x5c]
   14001269b:	movzx  r10d,WORD PTR [rsp+0x5a]
   1400126a1:	movzx  r9d,WORD PTR [rsp+0x58]
   1400126a7:	movzx  r8d,WORD PTR [rsp+0x56]
   1400126ad:	movzx  edx,WORD PTR [rsp+0x52]
   1400126b2:	movzx  ecx,WORD PTR [rsp+0x50]
   1400126b7:	or     DWORD PTR [rsp+0x30],0xffffffff
   1400126bc:	mov    DWORD PTR [rsp+0x28],eax
   1400126c0:	mov    DWORD PTR [rsp+0x20],r10d
   1400126c5:	call   0x14001313c
   1400126ca:	mov    QWORD PTR [rdi+0x18],rax
   1400126ce:	cmp    DWORD PTR [rsp+0x64],ebx
   1400126d2:	jne    0x1400126e0
   1400126d4:	cmp    DWORD PTR [rsp+0x68],ebx
   1400126d8:	jne    0x1400126e0
   1400126da:	mov    rax,QWORD PTR [rdi+0x20]
   1400126de:	jmp    0x14001273c
   1400126e0:	lea    rdx,[rsp+0x40]
   1400126e5:	lea    rcx,[rsp+0x64]
   1400126ea:	call   QWORD PTR [rip+0x7a28]        # 0x14001a118
   1400126f0:	test   eax,eax
   1400126f2:	je     0x14001275d
   1400126f4:	lea    rdx,[rsp+0x50]
   1400126f9:	lea    rcx,[rsp+0x40]
   1400126fe:	call   QWORD PTR [rip+0x7a0c]        # 0x14001a110
   140012704:	test   eax,eax
   140012706:	je     0x14001275d
   140012708:	movzx  eax,WORD PTR [rsp+0x5c]
   14001270d:	movzx  r10d,WORD PTR [rsp+0x5a]
   140012713:	movzx  r9d,WORD PTR [rsp+0x58]
   140012719:	movzx  r8d,WORD PTR [rsp+0x56]
   14001271f:	movzx  edx,WORD PTR [rsp+0x52]
   140012724:	movzx  ecx,WORD PTR [rsp+0x50]
   140012729:	or     DWORD PTR [rsp+0x30],0xffffffff
   14001272e:	mov    DWORD PTR [rsp+0x28],eax
   140012732:	mov    DWORD PTR [rsp+0x20],r10d
   140012737:	call   0x14001313c
   14001273c:	mov    QWORD PTR [rdi+0x28],rax
   140012740:	mov    eax,DWORD PTR [rsp+0x84]
   140012747:	mov    DWORD PTR [rdi+0x14],eax
   14001274a:	movzx  eax,WORD PTR [rdi+0x6]
   14001274e:	bts    eax,0xf
   140012752:	mov    WORD PTR [rdi+0x6],ax
   140012756:	mov    DWORD PTR [rdi],ebx
   140012758:	mov    DWORD PTR [rdi+0x10],ebx
   14001275b:	jmp    0x140012760
   14001275d:	or     ebx,0xffffffff
   140012760:	mov    ecx,esi
   140012762:	call   0x14001177c
   140012767:	mov    eax,ebx
   140012769:	jmp    0x140012785
   14001276b:	call   0x14000bde0
   140012770:	mov    DWORD PTR [rax],ebx
   140012772:	call   0x14000bdc0
   140012777:	mov    DWORD PTR [rax],0x9
   14001277d:	call   0x14000d01c
   140012782:	or     eax,0xffffffff
   140012785:	mov    rcx,QWORD PTR [rsp+0x98]
   14001278d:	xor    rcx,rsp
   140012790:	call   0x14000a820
   140012795:	lea    r11,[rsp+0xa0]
   14001279d:	mov    rbx,QWORD PTR [r11+0x40]
   1400127a1:	mov    rsi,QWORD PTR [r11+0x48]
   1400127a5:	mov    rsp,r11
   1400127a8:	pop    r15
   1400127aa:	pop    r14
   1400127ac:	pop    r13
   1400127ae:	pop    r12
   1400127b0:	pop    rdi
   1400127b1:	ret    
   1400127b2:	int3   
   1400127b3:	int3   
   1400127b4:	mov    QWORD PTR [rsp+0x10],rbx
   1400127b9:	mov    QWORD PTR [rsp+0x18],r8
   1400127be:	mov    QWORD PTR [rsp+0x8],rcx
   1400127c3:	push   rbp
   1400127c4:	push   rsi
   1400127c5:	push   rdi
   1400127c6:	push   r12
   1400127c8:	push   r13
   1400127ca:	push   r14
   1400127cc:	push   r15
   1400127ce:	mov    rbp,rsp
   1400127d1:	sub    rsp,0x80
   1400127d8:	xor    edi,edi
   1400127da:	mov    r13b,0x80
   1400127dd:	mov    esi,r9d
   1400127e0:	mov    rbx,rdx
   1400127e3:	mov    DWORD PTR [rbp-0x18],0x18
   1400127ea:	lea    r12d,[rdi+0x1]
   1400127ee:	mov    DWORD PTR [rbp-0x28],edi
   1400127f1:	mov    BYTE PTR [rbp+0x58],dil
   1400127f5:	mov    QWORD PTR [rbp-0x10],rdi
   1400127f9:	test   r13b,r9b
   1400127fc:	je     0x140012806
   1400127fe:	mov    DWORD PTR [rbp-0x8],edi
   140012801:	mov    r15b,0x10
   140012804:	jmp    0x14001280d
   140012806:	mov    DWORD PTR [rbp-0x8],r12d
   14001280a:	mov    r15b,dil
   14001280d:	lea    rcx,[rbp-0x28]
   140012811:	call   0x140017814
   140012816:	test   eax,eax
   140012818:	jne    0x140012f46
   14001281e:	mov    eax,0x8000
   140012823:	test   eax,esi
   140012825:	jne    0x140012837
   140012827:	test   esi,0x74000
   14001282d:	jne    0x140012834
   14001282f:	cmp    DWORD PTR [rbp-0x28],eax
   140012832:	je     0x140012837
   140012834:	or     r15b,r13b
   140012837:	mov    ecx,esi
   140012839:	mov    r9d,0x3
   14001283f:	mov    eax,0xc0000000
   140012844:	and    ecx,r9d
   140012847:	mov    r8d,0x80000000
   14001284d:	je     0x1400128aa
   14001284f:	dec    ecx
   140012851:	je     0x140012894
   140012853:	dec    ecx
   140012855:	je     0x14001288f
   140012857:	call   0x14000bde0
   14001285c:	mov    DWORD PTR [rax],edi
   14001285e:	or     DWORD PTR [rbx],0xffffffff
   140012861:	call   0x14000bdc0
   140012866:	mov    ebx,0x16
   14001286b:	mov    DWORD PTR [rax],ebx
   14001286d:	call   0x14000d01c
   140012872:	mov    eax,ebx
   140012874:	mov    rbx,QWORD PTR [rsp+0xc8]
   14001287c:	add    rsp,0x80
   140012883:	pop    r15
   140012885:	pop    r14
   140012887:	pop    r13
   140012889:	pop    r12
   14001288b:	pop    rdi
   14001288c:	pop    rsi
   14001288d:	pop    rbp
   14001288e:	ret    
   14001288f:	mov    r14d,eax
   140012892:	jmp    0x1400128ad
   140012894:	test   sil,0x8
   140012898:	je     0x1400128a2
   14001289a:	test   esi,0x70000
   1400128a0:	jne    0x14001288f
   1400128a2:	mov    r14d,0x40000000
   1400128a8:	jmp    0x1400128ad
   1400128aa:	mov    r14d,r8d
   1400128ad:	mov    ecx,DWORD PTR [rbp+0x60]
   1400128b0:	mov    DWORD PTR [rbp-0x3c],r14d
   1400128b4:	mov    r13d,0x2
   1400128ba:	sub    ecx,0x10
   1400128bd:	je     0x1400128ec
   1400128bf:	sub    ecx,0x10
   1400128c2:	je     0x1400128e7
   1400128c4:	sub    ecx,0x10
   1400128c7:	je     0x1400128e2
   1400128c9:	sub    ecx,0x10
   1400128cc:	je     0x1400128dd
   1400128ce:	cmp    ecx,0x40
   1400128d1:	jne    0x140012857
   1400128d3:	cmp    r14d,r8d
   1400128d6:	mov    edx,edi
   1400128d8:	sete   dl
   1400128db:	jmp    0x1400128ee
   1400128dd:	mov    edx,r9d
   1400128e0:	jmp    0x1400128ee
   1400128e2:	mov    edx,r13d
   1400128e5:	jmp    0x1400128ee
   1400128e7:	mov    edx,r12d
   1400128ea:	jmp    0x1400128ee
   1400128ec:	mov    edx,edi
   1400128ee:	mov    eax,esi
   1400128f0:	mov    ecx,0x700
   1400128f5:	mov    DWORD PTR [rbp-0x38],edx
   1400128f8:	and    eax,ecx
   1400128fa:	mov    r8d,0x100
   140012900:	je     0x140012948
   140012902:	cmp    eax,r8d
   140012905:	je     0x140012940
   140012907:	cmp    eax,0x200
   14001290c:	je     0x140012938
   14001290e:	cmp    eax,0x300
   140012913:	je     0x140012933
   140012915:	cmp    eax,0x400
   14001291a:	je     0x140012948
   14001291c:	cmp    eax,0x500
   140012921:	je     0x14001294b
   140012923:	cmp    eax,0x600
   140012928:	je     0x140012938
   14001292a:	cmp    eax,ecx
   14001292c:	je     0x14001294b
   14001292e:	jmp    0x140012857
   140012933:	mov    r12d,r13d
   140012936:	jmp    0x14001294b
   140012938:	mov    r12d,0x5
   14001293e:	jmp    0x14001294b
   140012940:	mov    r12d,0x4
   140012946:	jmp    0x14001294b
   140012948:	mov    r12d,r9d
   14001294b:	mov    ecx,0x80
   140012950:	mov    DWORD PTR [rbp-0x30],ecx
   140012953:	test   r8d,esi
   140012956:	je     0x14001296e
   140012958:	mov    al,BYTE PTR [rip+0x12022]        # 0x140024980
   14001295e:	not    al
   140012960:	and    al,BYTE PTR [rbp+0x68]
   140012963:	test   al,0x80
   140012965:	lea    eax,[rcx-0x7f]
   140012968:	cmove  ecx,eax
   14001296b:	mov    DWORD PTR [rbp-0x30],ecx
   14001296e:	test   sil,0x40
   140012972:	je     0x14001298a
   140012974:	bts    ecx,0x1a
   140012978:	bts    r14d,0x10
   14001297d:	or     edx,0x4
   140012980:	mov    DWORD PTR [rbp-0x38],edx
   140012983:	mov    DWORD PTR [rbp-0x30],ecx
   140012986:	mov    DWORD PTR [rbp-0x3c],r14d
   14001298a:	bt     esi,0xc
   14001298e:	jae    0x140012996
   140012990:	or     ecx,r8d
   140012993:	mov    DWORD PTR [rbp-0x30],ecx
   140012996:	test   sil,0x20
   14001299a:	je     0x1400129a2
   14001299c:	bts    ecx,0x1b
   1400129a0:	jmp    0x1400129ac
   1400129a2:	test   sil,0x10
   1400129a6:	je     0x1400129af
   1400129a8:	bts    ecx,0x1c
   1400129ac:	mov    DWORD PTR [rbp-0x30],ecx
   1400129af:	call   0x1400117a4
   1400129b4:	mov    DWORD PTR [rbx],eax
   1400129b6:	cmp    eax,0xffffffff
   1400129b9:	jne    0x1400129dc
   1400129bb:	call   0x14000bde0
   1400129c0:	mov    DWORD PTR [rax],edi
   1400129c2:	or     DWORD PTR [rbx],0xffffffff
   1400129c5:	call   0x14000bdc0
   1400129ca:	mov    DWORD PTR [rax],0x18
   1400129d0:	call   0x14000bdc0
   1400129d5:	mov    eax,DWORD PTR [rax]
   1400129d7:	jmp    0x140012874
   1400129dc:	mov    rax,QWORD PTR [rbp+0x40]
   1400129e0:	mov    r8d,DWORD PTR [rbp-0x38]
   1400129e4:	mov    rcx,QWORD PTR [rbp+0x50]
   1400129e8:	mov    DWORD PTR [rax],0x1
   1400129ee:	mov    eax,DWORD PTR [rbp-0x30]
   1400129f1:	mov    QWORD PTR [rsp+0x30],rdi
   1400129f6:	mov    DWORD PTR [rsp+0x28],eax
   1400129fa:	lea    r9,[rbp-0x18]
   1400129fe:	mov    edx,r14d
   140012a01:	mov    DWORD PTR [rsp+0x20],r12d
   140012a06:	call   QWORD PTR [rip+0x788c]        # 0x14001a298
   140012a0c:	mov    QWORD PTR [rbp-0x20],rax
   140012a10:	cmp    rax,0xffffffffffffffff
   140012a14:	jne    0x140012aa5
   140012a1a:	mov    ecx,0xc0000000
   140012a1f:	mov    eax,r14d
   140012a22:	and    eax,ecx
   140012a24:	cmp    eax,ecx
   140012a26:	jne    0x140012a6b
   140012a28:	mov    eax,0x1
   140012a2d:	test   al,sil
   140012a30:	je     0x140012a6b
   140012a32:	mov    eax,DWORD PTR [rbp-0x30]
   140012a35:	mov    r8d,DWORD PTR [rbp-0x38]
   140012a39:	mov    rcx,QWORD PTR [rbp+0x50]
   140012a3d:	btr    r14d,0x1f
   140012a42:	mov    QWORD PTR [rsp+0x30],rdi
   140012a47:	mov    DWORD PTR [rsp+0x28],eax
   140012a4b:	lea    r9,[rbp-0x18]
   140012a4f:	mov    edx,r14d
   140012a52:	mov    DWORD PTR [rsp+0x20],r12d
   140012a57:	mov    DWORD PTR [rbp-0x3c],r14d
   140012a5b:	call   QWORD PTR [rip+0x7837]        # 0x14001a298
   140012a61:	mov    QWORD PTR [rbp-0x20],rax
   140012a65:	cmp    rax,0xffffffffffffffff
   140012a69:	jne    0x140012aa5
   140012a6b:	movsxd rcx,DWORD PTR [rbx]
   140012a6e:	lea    r14,[rip+0x1300b]        # 0x140025a80
   140012a75:	mov    rax,rcx
   140012a78:	and    ecx,0x1f
   140012a7b:	sar    rax,0x5
   140012a7f:	imul   rcx,rcx,0x58
   140012a83:	mov    rax,QWORD PTR [r14+rax*8]
   140012a87:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   140012a8c:	call   QWORD PTR [rip+0x75de]        # 0x14001a070
   140012a92:	mov    ecx,eax
   140012a94:	call   0x14000be00
   140012a99:	call   0x14000bdc0
   140012a9e:	mov    edi,DWORD PTR [rax]
   140012aa0:	jmp    0x140012f3f
   140012aa5:	mov    rcx,rax
   140012aa8:	call   QWORD PTR [rip+0x7772]        # 0x14001a220
   140012aae:	test   eax,eax
   140012ab0:	jne    0x140012afd
   140012ab2:	movsxd rcx,DWORD PTR [rbx]
   140012ab5:	lea    r14,[rip+0x12fc4]        # 0x140025a80
   140012abc:	mov    rax,rcx
   140012abf:	and    ecx,0x1f
   140012ac2:	sar    rax,0x5
   140012ac6:	imul   rcx,rcx,0x58
   140012aca:	mov    rax,QWORD PTR [r14+rax*8]
   140012ace:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   140012ad3:	call   QWORD PTR [rip+0x7597]        # 0x14001a070
   140012ad9:	mov    ecx,eax
   140012adb:	mov    ebx,eax
   140012add:	call   0x14000be00
   140012ae2:	mov    rcx,QWORD PTR [rbp-0x20]
   140012ae6:	call   QWORD PTR [rip+0x758c]        # 0x14001a078
   140012aec:	test   ebx,ebx
   140012aee:	jne    0x140012a99
   140012af0:	call   0x14000bdc0
   140012af5:	mov    DWORD PTR [rax],0xd
   140012afb:	jmp    0x140012a99
   140012afd:	cmp    eax,r13d
   140012b00:	jne    0x140012b08
   140012b02:	or     r15b,0x40
   140012b06:	jmp    0x140012b11
   140012b08:	cmp    eax,0x3
   140012b0b:	jne    0x140012b11
   140012b0d:	or     r15b,0x8
   140012b11:	mov    rdx,QWORD PTR [rbp-0x20]
   140012b15:	mov    ecx,DWORD PTR [rbx]
   140012b17:	call   0x140011504
   140012b1c:	movsxd rcx,DWORD PTR [rbx]
   140012b1f:	lea    r14,[rip+0x12f5a]        # 0x140025a80
   140012b26:	mov    rax,rcx
   140012b29:	and    ecx,0x1f
   140012b2c:	mov    r8d,0x1
   140012b32:	sar    rax,0x5
   140012b36:	or     r15b,r8b
   140012b39:	mov    rax,QWORD PTR [r14+rax*8]
   140012b3d:	imul   rcx,rcx,0x58
   140012b41:	mov    BYTE PTR [rax+rcx*1+0x8],r15b
   140012b46:	movsxd rcx,DWORD PTR [rbx]
   140012b49:	mov    rax,rcx
   140012b4c:	and    ecx,0x1f
   140012b4f:	sar    rax,0x5
   140012b53:	imul   rcx,rcx,0x58
   140012b57:	mov    rax,QWORD PTR [r14+rax*8]
   140012b5b:	and    BYTE PTR [rax+rcx*1+0x38],0x80
   140012b60:	mov    al,r15b
   140012b63:	and    al,0x48
   140012b65:	mov    BYTE PTR [rbp-0x2c],al
   140012b68:	jne    0x140012bf0
   140012b6e:	test   r15b,r15b
   140012b71:	jns    0x140012e1b
   140012b77:	test   r13b,sil
   140012b7a:	je     0x140012bf0
   140012b7c:	mov    ecx,DWORD PTR [rbx]
   140012b7e:	mov    r8d,r13d
   140012b81:	or     edx,0xffffffff
   140012b84:	call   0x1400175cc
   140012b89:	mov    DWORD PTR [rbp-0x34],eax
   140012b8c:	cmp    eax,0xffffffff
   140012b8f:	jne    0x140012baa
   140012b91:	call   0x14000bde0
   140012b96:	cmp    DWORD PTR [rax],0x83
   140012b9c:	je     0x140012bea
   140012b9e:	mov    ecx,DWORD PTR [rbx]
   140012ba0:	call   0x140010d64
   140012ba5:	jmp    0x140012a99
   140012baa:	mov    ecx,DWORD PTR [rbx]
   140012bac:	lea    rdx,[rbp-0x40]
   140012bb0:	mov    r8d,0x1
   140012bb6:	mov    BYTE PTR [rbp-0x40],dil
   140012bba:	call   0x140016270
   140012bbf:	test   eax,eax
   140012bc1:	jne    0x140012bd9
   140012bc3:	cmp    BYTE PTR [rbp-0x40],0x1a
   140012bc7:	jne    0x140012bd9
   140012bc9:	movsxd rdx,DWORD PTR [rbp-0x34]
   140012bcd:	mov    ecx,DWORD PTR [rbx]
   140012bcf:	call   0x140017434
   140012bd4:	cmp    eax,0xffffffff
   140012bd7:	je     0x140012b9e
   140012bd9:	mov    ecx,DWORD PTR [rbx]
   140012bdb:	xor    r8d,r8d
   140012bde:	xor    edx,edx
   140012be0:	call   0x1400175cc
   140012be5:	cmp    eax,0xffffffff
   140012be8:	je     0x140012b9e
   140012bea:	mov    r8d,0x1
   140012bf0:	test   r15b,r15b
   140012bf3:	jns    0x140012e1b
   140012bf9:	mov    edx,0x74000
   140012bfe:	mov    ecx,0x4000
   140012c03:	test   edx,esi
   140012c05:	jne    0x140012c14
   140012c07:	mov    eax,DWORD PTR [rbp-0x28]
   140012c0a:	and    eax,edx
   140012c0c:	jne    0x140012c12
   140012c0e:	or     esi,ecx
   140012c10:	jmp    0x140012c14
   140012c12:	or     esi,eax
   140012c14:	mov    eax,esi
   140012c16:	and    eax,edx
   140012c18:	cmp    eax,ecx
   140012c1a:	je     0x140012c5f
   140012c1c:	cmp    eax,0x10000
   140012c21:	je     0x140012c4c
   140012c23:	cmp    eax,0x14000
   140012c28:	je     0x140012c4c
   140012c2a:	cmp    eax,0x20000
   140012c2f:	je     0x140012c59
   140012c31:	cmp    eax,0x24000
   140012c36:	je     0x140012c59
   140012c38:	cmp    eax,0x40000
   140012c3d:	je     0x140012c46
   140012c3f:	cmp    eax,0x44000
   140012c44:	jne    0x140012c63
   140012c46:	mov    BYTE PTR [rbp+0x58],r8b
   140012c4a:	jmp    0x140012c63
   140012c4c:	mov    ecx,0x301
   140012c51:	mov    eax,esi
   140012c53:	and    eax,ecx
   140012c55:	cmp    eax,ecx
   140012c57:	jne    0x140012c63
   140012c59:	mov    BYTE PTR [rbp+0x58],r13b
   140012c5d:	jmp    0x140012c63
   140012c5f:	mov    BYTE PTR [rbp+0x58],dil
   140012c63:	test   esi,0x70000
   140012c69:	je     0x140012e1b
   140012c6f:	test   r15b,0x40
   140012c73:	mov    r15d,DWORD PTR [rbp-0x3c]
   140012c77:	mov    DWORD PTR [rbp-0x34],edi
   140012c7a:	jne    0x140012e1f
   140012c80:	mov    eax,r15d
   140012c83:	mov    ecx,0xc0000000
   140012c88:	and    eax,ecx
   140012c8a:	cmp    eax,0x40000000
   140012c8f:	je     0x140012da2
   140012c95:	cmp    eax,0x80000000
   140012c9a:	je     0x140012d0c
   140012c9c:	cmp    eax,ecx
   140012c9e:	jne    0x140012e1f
   140012ca4:	test   r12d,r12d
   140012ca7:	je     0x140012e1f
   140012cad:	cmp    r12d,r13d
   140012cb0:	jbe    0x140012cc2
   140012cb2:	cmp    r12d,0x4
   140012cb6:	jbe    0x140012ce5
   140012cb8:	cmp    r12d,0x5
   140012cbc:	jne    0x140012e1f
   140012cc2:	movsx  ecx,BYTE PTR [rbp+0x58]
   140012cc6:	mov    r12d,edi
   140012cc9:	dec    ecx
   140012ccb:	je     0x140012de6
   140012cd1:	dec    ecx
   140012cd3:	jne    0x140012e1f
   140012cd9:	mov    DWORD PTR [rbp-0x34],0xfeff
   140012ce0:	jmp    0x140012df3
   140012ce5:	mov    ecx,DWORD PTR [rbx]
   140012ce7:	mov    r8d,r13d
   140012cea:	xor    edx,edx
   140012cec:	call   0x140015d7c
   140012cf1:	test   rax,rax
   140012cf4:	je     0x140012cc2
   140012cf6:	mov    ecx,DWORD PTR [rbx]
   140012cf8:	xor    r8d,r8d
   140012cfb:	xor    edx,edx
   140012cfd:	call   0x140015d7c
   140012d02:	cmp    rax,0xffffffffffffffff
   140012d06:	je     0x140012b9e
   140012d0c:	mov    ecx,DWORD PTR [rbx]
   140012d0e:	lea    rdx,[rbp-0x34]
   140012d12:	mov    r8d,0x3
   140012d18:	call   0x140016270
   140012d1d:	cmp    eax,0xffffffff
   140012d20:	je     0x140012b9e
   140012d26:	cmp    eax,r13d
   140012d29:	je     0x140012d46
   140012d2b:	cmp    eax,0x3
   140012d2e:	jne    0x140012d91
   140012d30:	cmp    DWORD PTR [rbp-0x34],0xbfbbef
   140012d37:	jne    0x140012d46
   140012d39:	lea    r8d,[rax-0x2]
   140012d3d:	mov    BYTE PTR [rbp+0x58],r8b
   140012d41:	jmp    0x140012e25
   140012d46:	movzx  eax,WORD PTR [rbp-0x34]
   140012d4a:	cmp    eax,0xfffe
   140012d4f:	jne    0x140012d6b
   140012d51:	mov    ecx,DWORD PTR [rbx]
   140012d53:	call   0x140010d64
   140012d58:	call   0x14000bdc0
   140012d5d:	mov    ebx,0x16
   140012d62:	mov    DWORD PTR [rax],ebx
   140012d64:	mov    edi,ebx
   140012d66:	jmp    0x140012f3f
   140012d6b:	cmp    eax,0xfeff
   140012d70:	jne    0x140012d91
   140012d72:	mov    ecx,DWORD PTR [rbx]
   140012d74:	xor    r8d,r8d
   140012d77:	mov    edx,r13d
   140012d7a:	call   0x1400175cc
   140012d7f:	cmp    eax,0xffffffff
   140012d82:	je     0x140012b9e
   140012d88:	mov    BYTE PTR [rbp+0x58],r13b
   140012d8c:	jmp    0x140012e1f
   140012d91:	mov    ecx,DWORD PTR [rbx]
   140012d93:	xor    r8d,r8d
   140012d96:	xor    edx,edx
   140012d98:	call   0x1400175cc
   140012d9d:	cmp    eax,0xffffffff
   140012da0:	jmp    0x140012ddf
   140012da2:	test   r12d,r12d
   140012da5:	je     0x140012e1f
   140012da7:	cmp    r12d,r13d
   140012daa:	jbe    0x140012cc2
   140012db0:	cmp    r12d,0x4
   140012db4:	ja     0x140012cb8
   140012dba:	mov    ecx,DWORD PTR [rbx]
   140012dbc:	mov    r8d,r13d
   140012dbf:	xor    edx,edx
   140012dc1:	call   0x140015d7c
   140012dc6:	test   rax,rax
   140012dc9:	je     0x140012cc2
   140012dcf:	mov    ecx,DWORD PTR [rbx]
   140012dd1:	xor    r8d,r8d
   140012dd4:	xor    edx,edx
   140012dd6:	call   0x140015d7c
   140012ddb:	cmp    rax,0xffffffffffffffff
   140012ddf:	jne    0x140012e1f
   140012de1:	jmp    0x140012b9e
   140012de6:	mov    DWORD PTR [rbp-0x34],0xbfbbef
   140012ded:	mov    r13d,0x3
   140012df3:	mov    ecx,DWORD PTR [rbx]
   140012df5:	movsxd rax,r12d
   140012df8:	mov    r8d,r13d
   140012dfb:	lea    rdx,[rbp+rax*1-0x34]
   140012e00:	sub    r8d,r12d
   140012e03:	call   0x14001210c
   140012e08:	cmp    eax,0xffffffff
   140012e0b:	je     0x140012b9e
   140012e11:	add    r12d,eax
   140012e14:	cmp    r13d,r12d
   140012e17:	jg     0x140012df3
   140012e19:	jmp    0x140012e1f
   140012e1b:	mov    r15d,DWORD PTR [rbp-0x3c]
   140012e1f:	mov    r8d,0x1
   140012e25:	movsxd rcx,DWORD PTR [rbx]
   140012e28:	mov    r12b,BYTE PTR [rbp+0x58]
   140012e2c:	mov    rax,rcx
   140012e2f:	and    ecx,0x1f
   140012e32:	and    r12b,0x7f
   140012e36:	sar    rax,0x5
   140012e3a:	imul   rcx,rcx,0x58
   140012e3e:	mov    rax,QWORD PTR [r14+rax*8]
   140012e42:	and    BYTE PTR [rax+rcx*1+0x38],0x80
   140012e47:	or     BYTE PTR [rax+rcx*1+0x38],r12b
   140012e4c:	movsxd rdx,DWORD PTR [rbx]
   140012e4f:	mov    rax,rdx
   140012e52:	and    edx,0x1f
   140012e55:	sar    rax,0x5
   140012e59:	imul   rdx,rdx,0x58
   140012e5d:	mov    rcx,QWORD PTR [r14+rax*8]
   140012e61:	mov    eax,esi
   140012e63:	and    BYTE PTR [rcx+rdx*1+0x38],0x7f
   140012e68:	shr    eax,0x10
   140012e6b:	shl    al,0x7
   140012e6e:	or     BYTE PTR [rcx+rdx*1+0x38],al
   140012e72:	cmp    BYTE PTR [rbp-0x2c],dil
   140012e76:	jne    0x140012e98
   140012e78:	test   sil,0x8
   140012e7c:	je     0x140012e98
   140012e7e:	movsxd rcx,DWORD PTR [rbx]
   140012e81:	mov    rax,rcx
   140012e84:	and    ecx,0x1f
   140012e87:	sar    rax,0x5
   140012e8b:	imul   rcx,rcx,0x58
   140012e8f:	mov    rax,QWORD PTR [r14+rax*8]
   140012e93:	or     BYTE PTR [rax+rcx*1+0x8],0x20
   140012e98:	mov    ecx,0xc0000000
   140012e9d:	mov    eax,r15d
   140012ea0:	and    eax,ecx
   140012ea2:	cmp    eax,ecx
   140012ea4:	jne    0x140012f3f
   140012eaa:	test   r8b,sil
   140012ead:	je     0x140012f3f
   140012eb3:	mov    rcx,QWORD PTR [rbp-0x20]
   140012eb7:	call   QWORD PTR [rip+0x71bb]        # 0x14001a078
   140012ebd:	mov    eax,DWORD PTR [rbp-0x30]
   140012ec0:	mov    r8d,DWORD PTR [rbp-0x38]
   140012ec4:	mov    rcx,QWORD PTR [rbp+0x50]
   140012ec8:	mov    QWORD PTR [rsp+0x30],rdi
   140012ecd:	mov    DWORD PTR [rsp+0x28],eax
   140012ed1:	btr    r15d,0x1f
   140012ed6:	lea    r9,[rbp-0x18]
   140012eda:	mov    DWORD PTR [rsp+0x20],0x3
   140012ee2:	mov    edx,r15d
   140012ee5:	call   QWORD PTR [rip+0x73ad]        # 0x14001a298
   140012eeb:	cmp    rax,0xffffffffffffffff
   140012eef:	jne    0x140012f26
   140012ef1:	call   QWORD PTR [rip+0x7179]        # 0x14001a070
   140012ef7:	mov    ecx,eax
   140012ef9:	call   0x14000be00
   140012efe:	movsxd r11,DWORD PTR [rbx]
   140012f01:	mov    rax,r11
   140012f04:	and    r11d,0x1f
   140012f08:	sar    rax,0x5
   140012f0c:	imul   r11,r11,0x58
   140012f10:	mov    rax,QWORD PTR [r14+rax*8]
   140012f14:	and    BYTE PTR [rax+r11*1+0x8],0xfe
   140012f1a:	mov    ecx,DWORD PTR [rbx]
   140012f1c:	call   0x1400115b4
   140012f21:	jmp    0x140012a99
   140012f26:	movsxd rdx,DWORD PTR [rbx]
   140012f29:	mov    rcx,rdx
   140012f2c:	and    edx,0x1f
   140012f2f:	sar    rcx,0x5
   140012f33:	imul   rdx,rdx,0x58
   140012f37:	mov    rcx,QWORD PTR [r14+rcx*8]
   140012f3b:	mov    QWORD PTR [rdx+rcx*1],rax
   140012f3f:	mov    eax,edi
   140012f41:	jmp    0x140012874
   140012f46:	xor    r9d,r9d
   140012f49:	xor    r8d,r8d
   140012f4c:	xor    edx,edx
   140012f4e:	xor    ecx,ecx
   140012f50:	mov    QWORD PTR [rsp+0x20],rdi
   140012f55:	call   0x14000cf78
   140012f5a:	int3   
   140012f5b:	int3   
   140012f5c:	mov    rax,rsp
   140012f5f:	mov    DWORD PTR [rax+0x10],edx
   140012f62:	mov    QWORD PTR [rax+0x18],r8
   140012f66:	mov    QWORD PTR [rax+0x20],r9
   140012f6a:	push   rbx
   140012f6b:	push   rdi
   140012f6c:	sub    rsp,0x48
   140012f70:	or     DWORD PTR [rax-0x28],0xffffffff
   140012f74:	and    DWORD PTR [rax-0x24],0x0
   140012f78:	xor    r8d,r8d
   140012f7b:	test   rcx,rcx
   140012f7e:	setne  r8b
   140012f82:	test   r8d,r8d
   140012f85:	jne    0x140012f9f
   140012f87:	call   0x14000bdc0
   140012f8c:	mov    DWORD PTR [rax],0x16
   140012f92:	call   0x14000d01c
   140012f97:	or     eax,0xffffffff
   140012f9a:	jmp    0x14001302a
   140012f9f:	lea    rax,[rsp+0x70]
   140012fa4:	add    rax,0x8
   140012fa8:	mov    r8d,DWORD PTR [rax-0x8]
   140012fac:	mov    DWORD PTR [rsp+0x28],r8d
   140012fb1:	mov    DWORD PTR [rsp+0x20],0x40
   140012fb9:	mov    r9d,edx
   140012fbc:	mov    r8,rcx
   140012fbf:	lea    rdx,[rsp+0x30]
   140012fc4:	lea    rcx,[rsp+0x34]
   140012fc9:	call   0x1400127b4
   140012fce:	mov    edi,eax
   140012fd0:	mov    DWORD PTR [rsp+0x38],eax
   140012fd4:	cmp    DWORD PTR [rsp+0x34],0x0
   140012fd9:	je     0x140013014
   140012fdb:	test   eax,eax
   140012fdd:	je     0x140013007
   140012fdf:	movsxd rbx,DWORD PTR [rsp+0x30]
   140012fe4:	mov    rcx,rbx
   140012fe7:	mov    rax,rbx
   140012fea:	sar    rax,0x5
   140012fee:	lea    rdx,[rip+0x12a8b]        # 0x140025a80
   140012ff5:	and    ecx,0x1f
   140012ff8:	imul   rcx,rcx,0x58
   140012ffc:	mov    rax,QWORD PTR [rdx+rax*8]
   140013000:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   140013005:	jmp    0x14001300b
   140013007:	mov    ebx,DWORD PTR [rsp+0x30]
   14001300b:	mov    ecx,ebx
   14001300d:	call   0x14001177c
   140013012:	jmp    0x140013018
   140013014:	mov    ebx,DWORD PTR [rsp+0x30]
   140013018:	test   edi,edi
   14001301a:	je     0x140013028
   14001301c:	call   0x14000bdc0
   140013021:	mov    DWORD PTR [rax],edi
   140013023:	jmp    0x140012f97
   140013028:	mov    eax,ebx
   14001302a:	add    rsp,0x48
   14001302e:	pop    rdi
   14001302f:	pop    rbx
   140013030:	ret    
   140013031:	int3   
   140013032:	int3   
   140013033:	int3   
   140013034:	mov    QWORD PTR [rsp+0x8],rbx
   140013039:	push   rdi
   14001303a:	sub    rsp,0x40
   14001303e:	and    DWORD PTR [rsp+0x30],0x0
   140013043:	xor    eax,eax
   140013045:	mov    rdi,QWORD PTR [rsp+0x70]
   14001304a:	test   rdi,rdi
   14001304d:	setne  al
   140013050:	test   eax,eax
   140013052:	jne    0x14001306c
   140013054:	call   0x14000bdc0
   140013059:	mov    ebx,0x16
   14001305e:	mov    DWORD PTR [rax],ebx
   140013060:	call   0x14000d01c
   140013065:	mov    eax,ebx
   140013067:	jmp    0x1400130fb
   14001306c:	or     DWORD PTR [rdi],0xffffffff
   14001306f:	xor    eax,eax
   140013071:	test   rcx,rcx
   140013074:	setne  al
   140013077:	test   eax,eax
   140013079:	je     0x140013054
   14001307b:	cmp    DWORD PTR [rsp+0x78],0x0
   140013080:	je     0x140013095
   140013082:	test   r9d,0xfffffe7f
   140013089:	mov    eax,0x0
   14001308e:	sete   al
   140013091:	test   eax,eax
   140013093:	je     0x140013054
   140013095:	mov    DWORD PTR [rsp+0x28],r9d
   14001309a:	mov    DWORD PTR [rsp+0x20],r8d
   14001309f:	mov    r9d,edx
   1400130a2:	mov    r8,rcx
   1400130a5:	mov    rdx,rdi
   1400130a8:	lea    rcx,[rsp+0x30]
   1400130ad:	call   0x1400127b4
   1400130b2:	mov    ebx,eax
   1400130b4:	mov    DWORD PTR [rsp+0x34],eax
   1400130b8:	cmp    DWORD PTR [rsp+0x30],0x0
   1400130bd:	je     0x1400130eb
   1400130bf:	test   eax,eax
   1400130c1:	je     0x1400130e4
   1400130c3:	movsxd rcx,DWORD PTR [rdi]
   1400130c6:	mov    rax,rcx
   1400130c9:	sar    rax,0x5
   1400130cd:	lea    rdx,[rip+0x129ac]        # 0x140025a80
   1400130d4:	and    ecx,0x1f
   1400130d7:	imul   rcx,rcx,0x58
   1400130db:	mov    rax,QWORD PTR [rdx+rax*8]
   1400130df:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   1400130e4:	mov    ecx,DWORD PTR [rdi]
   1400130e6:	call   0x14001177c
   1400130eb:	test   ebx,ebx
   1400130ed:	je     0x140013065
   1400130f3:	or     DWORD PTR [rdi],0xffffffff
   1400130f6:	jmp    0x140013065
   1400130fb:	mov    rbx,QWORD PTR [rsp+0x50]
   140013100:	add    rsp,0x40
   140013104:	pop    rdi
   140013105:	ret    
   140013106:	int3   
   140013107:	int3   
   140013108:	sub    rsp,0x38
   14001310c:	mov    eax,r9d
   14001310f:	mov    r9d,DWORD PTR [rsp+0x60]
   140013114:	mov    r10d,r8d
   140013117:	mov    r11,rdx
   14001311a:	mov    DWORD PTR [rsp+0x28],0x1
   140013122:	mov    QWORD PTR [rsp+0x20],rcx
   140013127:	mov    r8d,eax
   14001312a:	mov    edx,r10d
   14001312d:	mov    rcx,r11
   140013130:	call   0x140013034
   140013135:	add    rsp,0x38
   140013139:	ret    
   14001313a:	int3   
   14001313b:	int3   
   14001313c:	rex push rbp
   14001313e:	push   rbx
   14001313f:	push   rsi
   140013140:	push   rdi
   140013141:	push   r12
   140013143:	push   r13
   140013145:	push   r14
   140013147:	push   r15
   140013149:	mov    rbp,rsp
   14001314c:	sub    rsp,0x78
   140013150:	mov    rax,QWORD PTR [rip+0xff69]        # 0x1400230c0
   140013157:	xor    rax,rsp
   14001315a:	mov    QWORD PTR [rbp-0x10],rax
   14001315e:	xor    edi,edi
   140013160:	lea    ebx,[rcx-0x76c]
   140013166:	movsxd r15,r9d
   140013169:	movsxd rsi,edx
   14001316c:	mov    DWORD PTR [rbp-0x48],edi
   14001316f:	mov    DWORD PTR [rbp-0x44],edi
   140013172:	mov    DWORD PTR [rbp-0x40],edi
   140013175:	cmp    ebx,0x46
   140013178:	jl     0x1400133da
   14001317e:	cmp    ebx,0x44c
   140013184:	jg     0x1400133da
   14001318a:	lea    eax,[rsi-0x1]
   14001318d:	cmp    eax,0xb
   140013190:	ja     0x1400133da
   140013196:	cmp    r15d,0x17
   14001319a:	ja     0x1400133da
   1400131a0:	movsxd r13,DWORD PTR [rbp+0x68]
   1400131a4:	cmp    r13d,0x3b
   1400131a8:	ja     0x1400133da
   1400131ae:	movsxd r14,DWORD PTR [rbp+0x70]
   1400131b2:	cmp    r14d,0x3b
   1400131b6:	ja     0x1400133da
   1400131bc:	lea    r10d,[rdi+0x1]
   1400131c0:	cmp    r8d,r10d
   1400131c3:	jl     0x1400133da
   1400131c9:	lea    rcx,[rip+0x11438]        # 0x140024608
   1400131d0:	mov    r11d,0x51eb851f
   1400131d6:	mov    r9d,DWORD PTR [rcx+rsi*4-0x4]
   1400131db:	mov    ecx,DWORD PTR [rcx+rsi*4]
   1400131de:	sub    ecx,r9d
   1400131e1:	cmp    ecx,r8d
   1400131e4:	jge    0x140013248
   1400131e6:	mov    eax,ebx
   1400131e8:	and    eax,0x80000003
   1400131ed:	jge    0x1400131f8
   1400131ef:	sub    eax,r10d
   1400131f2:	or     eax,0xfffffffc
   1400131f5:	add    eax,r10d
   1400131f8:	test   eax,eax
   1400131fa:	jne    0x140013212
   1400131fc:	mov    eax,r11d
   1400131ff:	imul   ebx
   140013201:	sar    edx,0x5
   140013204:	mov    eax,edx
   140013206:	shr    eax,0x1f
   140013209:	add    edx,eax
   14001320b:	imul   edx,edx,0x64
   14001320e:	cmp    ebx,edx
   140013210:	jne    0x140013235
   140013212:	lea    ecx,[rbx+0x76c]
   140013218:	mov    eax,r11d
   14001321b:	imul   ecx
   14001321d:	sar    edx,0x7
   140013220:	mov    eax,edx
   140013222:	shr    eax,0x1f
   140013225:	add    edx,eax
   140013227:	imul   edx,edx,0x190
   14001322d:	cmp    ecx,edx
   14001322f:	jne    0x1400133da
   140013235:	cmp    esi,0x2
   140013238:	jne    0x1400133da
   14001323e:	cmp    r8d,0x1d
   140013242:	jg     0x1400133da
   140013248:	mov    eax,ebx
   14001324a:	lea    r12d,[r9+r8*1]
   14001324e:	and    eax,0x80000003
   140013253:	jge    0x14001325e
   140013255:	sub    eax,r10d
   140013258:	or     eax,0xfffffffc
   14001325b:	add    eax,r10d
   14001325e:	test   eax,eax
   140013260:	jne    0x140013278
   140013262:	mov    eax,r11d
   140013265:	imul   ebx
   140013267:	sar    edx,0x5
   14001326a:	mov    eax,edx
   14001326c:	shr    eax,0x1f
   14001326f:	add    edx,eax
   140013271:	imul   edx,edx,0x64
   140013274:	cmp    ebx,edx
   140013276:	jne    0x140013297
   140013278:	lea    ecx,[rbx+0x76c]
   14001327e:	mov    eax,r11d
   140013281:	imul   ecx
   140013283:	sar    edx,0x7
   140013286:	mov    eax,edx
   140013288:	shr    eax,0x1f
   14001328b:	add    edx,eax
   14001328d:	imul   edx,edx,0x190
   140013293:	cmp    ecx,edx
   140013295:	jne    0x14001329f
   140013297:	cmp    esi,0x2
   14001329a:	jle    0x14001329f
   14001329c:	add    r12d,r10d
   14001329f:	call   0x140018244
   1400132a4:	lea    rcx,[rbp-0x48]
   1400132a8:	call   0x1400182b0
   1400132ad:	test   eax,eax
   1400132af:	jne    0x1400133c5
   1400132b5:	lea    rcx,[rbp-0x44]
   1400132b9:	call   0x1400182e0
   1400132be:	test   eax,eax
   1400132c0:	jne    0x1400133b0
   1400132c6:	lea    rcx,[rbp-0x40]
   1400132ca:	call   0x140018310
   1400132cf:	test   eax,eax
   1400132d1:	jne    0x14001339b
   1400132d7:	lea    ecx,[rbx+0x12b]
   1400132dd:	mov    r10d,0x51eb851f
   1400132e3:	lea    r8d,[rbx-0x1]
   1400132e7:	mov    eax,r10d
   1400132ea:	mov    DWORD PTR [rbp-0x1c],r12d
   1400132ee:	mov    DWORD PTR [rbp-0x24],ebx
   1400132f1:	mov    DWORD PTR [rbp-0x30],r15d
   1400132f5:	mov    DWORD PTR [rbp-0x34],r13d
   1400132f9:	mov    DWORD PTR [rbp-0x38],r14d
   1400132fd:	imul   ecx
   1400132ff:	mov    r9d,edx
   140013302:	mov    eax,r10d
   140013305:	sar    r9d,0x7
   140013309:	mov    ecx,r9d
   14001330c:	shr    ecx,0x1f
   14001330f:	add    r9d,ecx
   140013312:	imul   r8d
   140013315:	sar    edx,0x5
   140013318:	mov    eax,r8d
   14001331b:	mov    ecx,edx
   14001331d:	shr    ecx,0x1f
   140013320:	add    edx,ecx
   140013322:	sub    r9d,edx
   140013325:	cdq    
   140013326:	and    edx,0x3
   140013329:	add    eax,edx
   14001332b:	sar    eax,0x2
   14001332e:	lea    ecx,[r9+rax*1-0x11]
   140013333:	movsxd rax,ebx
   140013336:	sub    rax,0x46
   14001333a:	movsxd rdx,ecx
   14001333d:	imul   rax,rax,0x16d
   140013344:	add    rdx,rax
   140013347:	movsxd rax,r12d
   14001334a:	add    rdx,rax
   14001334d:	movsxd rax,DWORD PTR [rbp-0x40]
   140013351:	lea    rcx,[rdx+rdx*2]
   140013355:	lea    rdi,[r15+rcx*8]
   140013359:	imul   rdi,rdi,0x3c
   14001335d:	add    rdi,r13
   140013360:	imul   rdi,rdi,0x3c
   140013364:	add    rdi,rax
   140013367:	lea    eax,[rsi-0x1]
   14001336a:	add    rdi,r14
   14001336d:	cmp    DWORD PTR [rbp+0x78],0x1
   140013371:	mov    DWORD PTR [rbp-0x28],eax
   140013374:	je     0x14001338f
   140013376:	cmp    DWORD PTR [rbp+0x78],0xffffffff
   14001337a:	jne    0x140013396
   14001337c:	cmp    DWORD PTR [rbp-0x48],0x0
   140013380:	je     0x140013396
   140013382:	lea    rcx,[rbp-0x38]
   140013386:	call   0x140018280
   14001338b:	test   eax,eax
   14001338d:	je     0x140013396
   14001338f:	movsxd rcx,DWORD PTR [rbp-0x44]
   140013393:	add    rdi,rcx
   140013396:	mov    rax,rdi
   140013399:	jmp    0x1400133e9
   14001339b:	xor    r9d,r9d
   14001339e:	xor    r8d,r8d
   1400133a1:	xor    edx,edx
   1400133a3:	xor    ecx,ecx
   1400133a5:	mov    QWORD PTR [rsp+0x20],rdi
   1400133aa:	call   0x14000cf78
   1400133af:	int3   
   1400133b0:	xor    r9d,r9d
   1400133b3:	xor    r8d,r8d
   1400133b6:	xor    edx,edx
   1400133b8:	xor    ecx,ecx
   1400133ba:	mov    QWORD PTR [rsp+0x20],rdi
   1400133bf:	call   0x14000cf78
   1400133c4:	int3   
   1400133c5:	xor    r9d,r9d
   1400133c8:	xor    r8d,r8d
   1400133cb:	xor    edx,edx
   1400133cd:	xor    ecx,ecx
   1400133cf:	mov    QWORD PTR [rsp+0x20],rdi
   1400133d4:	call   0x14000cf78
   1400133d9:	int3   
   1400133da:	call   0x14000bdc0
   1400133df:	mov    DWORD PTR [rax],0x16
   1400133e5:	or     rax,0xffffffffffffffff
   1400133e9:	mov    rcx,QWORD PTR [rbp-0x10]
   1400133ed:	xor    rcx,rsp
   1400133f0:	call   0x14000a820
   1400133f5:	add    rsp,0x78
   1400133f9:	pop    r15
   1400133fb:	pop    r14
   1400133fd:	pop    r13
   1400133ff:	pop    r12
   140013401:	pop    rdi
   140013402:	pop    rsi
   140013403:	pop    rbx
   140013404:	pop    rbp
   140013405:	ret    
   140013406:	int3   
   140013407:	int3   
   140013408:	mov    QWORD PTR [rsp+0x8],rbx
   14001340d:	mov    QWORD PTR [rsp+0x10],rbp
   140013412:	mov    QWORD PTR [rsp+0x18],rsi
   140013417:	push   rdi
   140013418:	sub    rsp,0x240
   14001341f:	mov    rax,QWORD PTR [rip+0xfc9a]        # 0x1400230c0
   140013426:	xor    rax,rsp
   140013429:	mov    QWORD PTR [rsp+0x230],rax
   140013431:	lea    rdx,[rsp+0x20]
   140013436:	mov    ecx,0x105
   14001343b:	lea    rbx,[rsp+0x20]
   140013440:	xor    ebp,ebp
   140013442:	call   QWORD PTR [rip+0x6e58]        # 0x14001a2a0
   140013448:	mov    edi,eax
   14001344a:	cmp    eax,0x104
   14001344f:	jle    0x14001348c
   140013451:	lea    esi,[rax+0x1]
   140013454:	lea    edx,[rbp+0x2]
   140013457:	movsxd rcx,esi
   14001345a:	call   0x140010b24
   14001345f:	mov    rbx,rax
   140013462:	test   rax,rax
   140013465:	jne    0x140013476
   140013467:	call   0x14000bdc0
   14001346c:	xor    edi,edi
   14001346e:	mov    DWORD PTR [rax],0xc
   140013474:	jmp    0x14001348c
   140013476:	mov    ebp,0x1
   14001347b:	test   edi,edi
   14001347d:	je     0x14001348c
   14001347f:	mov    rdx,rax
   140013482:	mov    ecx,esi
   140013484:	call   QWORD PTR [rip+0x6e16]        # 0x14001a2a0
   14001348a:	mov    edi,eax
   14001348c:	xor    esi,esi
   14001348e:	test   edi,edi
   140013490:	je     0x1400134b5
   140013492:	cmp    WORD PTR [rbx+0x2],0x3a
   140013497:	jne    0x1400134c0
   140013499:	cmp    WORD PTR [rbx],0x61
   14001349d:	jb     0x1400134ad
   14001349f:	cmp    WORD PTR [rbx],0x7a
   1400134a3:	ja     0x1400134ad
   1400134a5:	movzx  eax,WORD PTR [rbx]
   1400134a8:	sub    eax,0x20
   1400134ab:	jmp    0x1400134b0
   1400134ad:	movzx  eax,WORD PTR [rbx]
   1400134b0:	lea    esi,[rax-0x40]
   1400134b3:	jmp    0x1400134c0
   1400134b5:	call   0x14000bdc0
   1400134ba:	mov    DWORD PTR [rax],0xc
   1400134c0:	test   ebp,ebp
   1400134c2:	je     0x1400134cc
   1400134c4:	mov    rcx,rbx
   1400134c7:	call   0x14000b460
   1400134cc:	mov    eax,esi
   1400134ce:	mov    rcx,QWORD PTR [rsp+0x230]
   1400134d6:	xor    rcx,rsp
   1400134d9:	call   0x14000a820
   1400134de:	lea    r11,[rsp+0x240]
   1400134e6:	mov    rbx,QWORD PTR [r11+0x10]
   1400134ea:	mov    rbp,QWORD PTR [r11+0x18]
   1400134ee:	mov    rsi,QWORD PTR [r11+0x20]
   1400134f2:	mov    rsp,r11
   1400134f5:	pop    rdi
   1400134f6:	ret    
   1400134f7:	int3   
   1400134f8:	mov    QWORD PTR [rsp+0x10],rbx
   1400134fd:	push   rbp
   1400134fe:	mov    rbp,rsp
   140013501:	sub    rsp,0x70
   140013505:	movsxd rbx,ecx
   140013508:	lea    rcx,[rbp-0x20]
   14001350c:	call   0x14000c6f4
   140013511:	mov    rcx,QWORD PTR [rbp-0x18]
   140013515:	cmp    ebx,0xff
   14001351b:	jbe    0x1400135ac
   140013521:	mov    eax,ebx
   140013523:	mov    BYTE PTR [rbp+0x11],bl
   140013526:	shr    eax,0x8
   140013529:	mov    BYTE PTR [rbp+0x10],al
   14001352c:	movzx  eax,al
   14001352f:	test   BYTE PTR [rax+rcx*1+0x1d],0x4
   140013534:	jne    0x14001354d
   140013536:	cmp    BYTE PTR [rbp-0x8],0x0
   14001353a:	je     0x1400135cc
   140013540:	mov    rax,QWORD PTR [rbp-0x10]
   140013544:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001354b:	jmp    0x1400135cc
   14001354d:	mov    eax,DWORD PTR [rcx+0x4]
   140013550:	mov    DWORD PTR [rsp+0x40],0x1
   140013558:	mov    edx,0x2
   14001355d:	mov    DWORD PTR [rsp+0x38],eax
   140013561:	mov    DWORD PTR [rsp+0x30],edx
   140013565:	lea    rax,[rbp+0x20]
   140013569:	mov    QWORD PTR [rsp+0x28],rax
   14001356e:	mov    DWORD PTR [rsp+0x20],edx
   140013572:	mov    edx,DWORD PTR [rcx+0xc]
   140013575:	lea    rcx,[rbp-0x20]
   140013579:	lea    r9,[rbp+0x10]
   14001357d:	mov    r8d,0x100
   140013583:	call   0x14001862c
   140013588:	test   eax,eax
   14001358a:	je     0x140013536
   14001358c:	movzx  eax,BYTE PTR [rbp+0x20]
   140013590:	movzx  ecx,BYTE PTR [rbp+0x21]
   140013594:	shl    eax,0x8
   140013597:	add    eax,ecx
   140013599:	cmp    BYTE PTR [rbp-0x8],0x0
   14001359d:	je     0x1400135ce
   14001359f:	mov    rcx,QWORD PTR [rbp-0x10]
   1400135a3:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400135aa:	jmp    0x1400135ce
   1400135ac:	test   BYTE PTR [rbx+rcx*1+0x1d],0x10
   1400135b1:	je     0x1400135bb
   1400135b3:	movzx  ebx,BYTE PTR [rbx+rcx*1+0x11d]
   1400135bb:	cmp    BYTE PTR [rbp-0x8],0x0
   1400135bf:	je     0x1400135cc
   1400135c1:	mov    rcx,QWORD PTR [rbp-0x10]
   1400135c5:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400135cc:	mov    eax,ebx
   1400135ce:	mov    rbx,QWORD PTR [rsp+0x88]
   1400135d6:	add    rsp,0x70
   1400135da:	pop    rbp
   1400135db:	ret    
   1400135dc:	xor    edx,edx
   1400135de:	jmp    0x1400134f8
   1400135e3:	int3   
   1400135e4:	mov    QWORD PTR [rsp+0x8],rbx
   1400135e9:	mov    QWORD PTR [rsp+0x10],rsi
   1400135ee:	push   rdi
   1400135ef:	sub    rsp,0x40
   1400135f3:	mov    rbx,rcx
   1400135f6:	mov    rdi,rdx
   1400135f9:	lea    rcx,[rsp+0x20]
   1400135fe:	mov    rdx,r8
   140013601:	call   0x14000c6f4
   140013606:	mov    rdx,QWORD PTR [rsp+0x28]
   14001360b:	xor    esi,esi
   14001360d:	cmp    DWORD PTR [rdx+0x8],esi
   140013610:	jne    0x140013622
   140013612:	mov    rdx,rdi
   140013615:	mov    rcx,rbx
   140013618:	call   0x14000c658
   14001361d:	jmp    0x1400136b3
   140013622:	test   rbx,rbx
   140013625:	jne    0x14001364e
   140013627:	call   0x14000bdc0
   14001362c:	mov    DWORD PTR [rax],0x16
   140013632:	call   0x14000d01c
   140013637:	cmp    BYTE PTR [rsp+0x38],sil
   14001363c:	je     0x14001364a
   14001363e:	mov    rax,QWORD PTR [rsp+0x30]
   140013643:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001364a:	xor    eax,eax
   14001364c:	jmp    0x1400136c6
   14001364e:	test   rdi,rdi
   140013651:	je     0x140013627
   140013653:	jmp    0x1400136a4
   140013655:	mov    rcx,rdi
   140013658:	cmp    BYTE PTR [rdi],sil
   14001365b:	je     0x14001368a
   14001365d:	movzx  eax,BYTE PTR [rcx]
   140013660:	test   BYTE PTR [rax+rdx*1+0x1d],0x4
   140013665:	je     0x14001367e
   140013667:	cmp    al,BYTE PTR [rbx]
   140013669:	jne    0x140013673
   14001366b:	mov    al,BYTE PTR [rbx+0x1]
   14001366e:	cmp    BYTE PTR [rcx+0x1],al
   140013671:	je     0x14001368a
   140013673:	cmp    BYTE PTR [rcx+0x1],sil
   140013677:	je     0x14001368a
   140013679:	inc    rcx
   14001367c:	jmp    0x140013682
   14001367e:	cmp    al,BYTE PTR [rbx]
   140013680:	je     0x14001368a
   140013682:	inc    rcx
   140013685:	cmp    BYTE PTR [rcx],sil
   140013688:	jne    0x14001365d
   14001368a:	cmp    BYTE PTR [rcx],sil
   14001368d:	jne    0x1400136a9
   14001368f:	movzx  eax,BYTE PTR [rbx]
   140013692:	test   BYTE PTR [rax+rdx*1+0x1d],0x4
   140013697:	je     0x1400136a1
   140013699:	inc    rbx
   14001369c:	cmp    BYTE PTR [rbx],sil
   14001369f:	je     0x1400136a9
   1400136a1:	inc    rbx
   1400136a4:	cmp    BYTE PTR [rbx],sil
   1400136a7:	jne    0x140013655
   1400136a9:	mov    al,BYTE PTR [rbx]
   1400136ab:	neg    al
   1400136ad:	sbb    rax,rax
   1400136b0:	and    rax,rbx
   1400136b3:	cmp    BYTE PTR [rsp+0x38],sil
   1400136b8:	je     0x1400136c6
   1400136ba:	mov    rcx,QWORD PTR [rsp+0x30]
   1400136bf:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400136c6:	mov    rbx,QWORD PTR [rsp+0x50]
   1400136cb:	mov    rsi,QWORD PTR [rsp+0x58]
   1400136d0:	add    rsp,0x40
   1400136d4:	pop    rdi
   1400136d5:	ret    
   1400136d6:	int3   
   1400136d7:	int3   
   1400136d8:	xor    r8d,r8d
   1400136db:	jmp    0x1400135e4
   1400136e0:	rex push rbx
   1400136e2:	sub    rsp,0x20
   1400136e6:	xor    ebx,ebx
   1400136e8:	mov    r10,r8
   1400136eb:	test   r9,r9
   1400136ee:	jne    0x1400136fe
   1400136f0:	test   rcx,rcx
   1400136f3:	jne    0x140013703
   1400136f5:	test   rdx,rdx
   1400136f8:	jne    0x140013718
   1400136fa:	xor    eax,eax
   1400136fc:	jmp    0x14001372b
   1400136fe:	test   rcx,rcx
   140013701:	je     0x140013718
   140013703:	test   rdx,rdx
   140013706:	je     0x140013718
   140013708:	test   r9,r9
   14001370b:	jne    0x140013711
   14001370d:	mov    BYTE PTR [rcx],bl
   14001370f:	jmp    0x1400136fa
   140013711:	test   r8,r8
   140013714:	jne    0x140013731
   140013716:	mov    BYTE PTR [rcx],bl
   140013718:	call   0x14000bdc0
   14001371d:	mov    ebx,0x16
   140013722:	mov    DWORD PTR [rax],ebx
   140013724:	call   0x14000d01c
   140013729:	mov    eax,ebx
   14001372b:	add    rsp,0x20
   14001372f:	pop    rbx
   140013730:	ret    
   140013731:	mov    r11,rcx
   140013734:	mov    r8,rdx
   140013737:	cmp    r9,0xffffffffffffffff
   14001373b:	jne    0x140013755
   14001373d:	sub    r11,r10
   140013740:	mov    al,BYTE PTR [r10]
   140013743:	mov    BYTE PTR [r11+r10*1],al
   140013747:	inc    r10
   14001374a:	test   al,al
   14001374c:	je     0x140013778
   14001374e:	dec    r8
   140013751:	jne    0x140013740
   140013753:	jmp    0x140013778
   140013755:	sub    r10,rcx
   140013758:	mov    al,BYTE PTR [r10+r11*1]
   14001375c:	mov    BYTE PTR [r11],al
   14001375f:	inc    r11
   140013762:	test   al,al
   140013764:	je     0x140013770
   140013766:	dec    r8
   140013769:	je     0x140013770
   14001376b:	dec    r9
   14001376e:	jne    0x140013758
   140013770:	test   r9,r9
   140013773:	jne    0x140013778
   140013775:	mov    BYTE PTR [r11],bl
   140013778:	test   r8,r8
   14001377b:	jne    0x1400136fa
   140013781:	cmp    r9,0xffffffffffffffff
   140013785:	jne    0x140013791
   140013787:	mov    BYTE PTR [rcx+rdx*1-0x1],bl
   14001378b:	lea    eax,[r8+0x50]
   14001378f:	jmp    0x14001372b
   140013791:	mov    BYTE PTR [rcx],bl
   140013793:	call   0x14000bdc0
   140013798:	mov    ebx,0x22
   14001379d:	jmp    0x140013722
   14001379f:	int3   
   1400137a0:	mov    QWORD PTR [rsp+0x18],rbx
   1400137a5:	mov    DWORD PTR [rsp+0x8],ecx
   1400137a9:	push   rsi
   1400137aa:	push   rdi
   1400137ab:	push   r12
   1400137ad:	sub    rsp,0x20
   1400137b1:	movsxd rdi,ecx
   1400137b4:	cmp    edi,0xfffffffe
   1400137b7:	jne    0x1400137c9
   1400137b9:	call   0x14000bdc0
   1400137be:	mov    DWORD PTR [rax],0x9
   1400137c4:	jmp    0x140013866
   1400137c9:	test   ecx,ecx
   1400137cb:	js     0x140013856
   1400137d1:	cmp    edi,DWORD PTR [rip+0x12295]        # 0x140025a6c
   1400137d7:	jae    0x140013856
   1400137d9:	mov    rbx,rdi
   1400137dc:	mov    rsi,rdi
   1400137df:	sar    rsi,0x5
   1400137e3:	lea    r12,[rip+0x12296]        # 0x140025a80
   1400137ea:	and    ebx,0x1f
   1400137ed:	imul   rbx,rbx,0x58
   1400137f1:	mov    rax,QWORD PTR [r12+rsi*8]
   1400137f5:	movsx  ecx,BYTE PTR [rax+rbx*1+0x8]
   1400137fa:	and    ecx,0x1
   1400137fd:	je     0x140013856
   1400137ff:	mov    ecx,edi
   140013801:	call   0x1400116d4
   140013806:	nop
   140013807:	mov    rax,QWORD PTR [r12+rsi*8]
   14001380b:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   140013810:	je     0x14001383d
   140013812:	mov    ecx,edi
   140013814:	call   0x140011660
   140013819:	mov    rcx,rax
   14001381c:	call   QWORD PTR [rip+0x6a86]        # 0x14001a2a8
   140013822:	test   eax,eax
   140013824:	jne    0x140013830
   140013826:	call   QWORD PTR [rip+0x6844]        # 0x14001a070
   14001382c:	mov    ebx,eax
   14001382e:	jmp    0x140013832
   140013830:	xor    ebx,ebx
   140013832:	test   ebx,ebx
   140013834:	je     0x14001384b
   140013836:	call   0x14000bde0
   14001383b:	mov    DWORD PTR [rax],ebx
   14001383d:	call   0x14000bdc0
   140013842:	mov    DWORD PTR [rax],0x9
   140013848:	or     ebx,0xffffffff
   14001384b:	mov    ecx,edi
   14001384d:	call   0x14001177c
   140013852:	mov    eax,ebx
   140013854:	jmp    0x140013869
   140013856:	call   0x14000bdc0
   14001385b:	mov    DWORD PTR [rax],0x9
   140013861:	call   0x14000d01c
   140013866:	or     eax,0xffffffff
   140013869:	mov    rbx,QWORD PTR [rsp+0x50]
   14001386e:	add    rsp,0x20
   140013872:	pop    r12
   140013874:	pop    rdi
   140013875:	pop    rsi
   140013876:	ret    
   140013877:	int3   
   140013878:	mov    QWORD PTR [rsp+0x18],rbx
   14001387d:	mov    DWORD PTR [rsp+0x10],edx
   140013881:	push   rbp
   140013882:	push   rsi
   140013883:	push   rdi
   140013884:	push   r12
   140013886:	push   r13
   140013888:	push   r14
   14001388a:	push   r15
   14001388c:	sub    rsp,0x30
   140013890:	xor    ebp,ebp
   140013892:	mov    edi,edx
   140013894:	mov    r14,rcx
   140013897:	mov    ebx,ebp
   140013899:	test   rcx,rcx
   14001389c:	jne    0x1400138b3
   14001389e:	call   0x14000bdc0
   1400138a3:	mov    DWORD PTR [rax],0x16
   1400138a9:	call   0x14000d01c
   1400138ae:	jmp    0x1400139ad
   1400138b3:	mov    r12,QWORD PTR [rcx]
   1400138b6:	test   r12,r12
   1400138b9:	je     0x1400139a2
   1400138bf:	mov    edx,0x3d
   1400138c4:	mov    rcx,r12
   1400138c7:	call   0x140018b80
   1400138cc:	mov    r13,rax
   1400138cf:	test   rax,rax
   1400138d2:	je     0x1400139a2
   1400138d8:	cmp    r12,rax
   1400138db:	je     0x1400139a2
   1400138e1:	cmp    WORD PTR [rax+0x2],bp
   1400138e5:	mov    rsi,QWORD PTR [rip+0x110bc]        # 0x1400249a8
   1400138ec:	mov    r15d,ebp
   1400138ef:	sete   r15b
   1400138f3:	cmp    rsi,QWORD PTR [rip+0x110b6]        # 0x1400249b0
   1400138fa:	jne    0x14001396b
   1400138fc:	xor    ecx,ecx
   1400138fe:	mov    rbp,rsi
   140013901:	mov    eax,ecx
   140013903:	test   rsi,rsi
   140013906:	jne    0x140013910
   140013908:	jmp    0x140013964
   14001390a:	add    rsi,0x8
   14001390e:	inc    eax
   140013910:	cmp    QWORD PTR [rsi],rcx
   140013913:	jne    0x14001390a
   140013915:	inc    eax
   140013917:	mov    edx,0x8
   14001391c:	movsxd rcx,eax
   14001391f:	call   0x140010b24
   140013924:	mov    rdi,rax
   140013927:	mov    rsi,rax
   14001392a:	test   rax,rax
   14001392d:	jne    0x140013937
   14001392f:	lea    ecx,[rax+0x9]
   140013932:	call   0x140009c04
   140013937:	mov    rax,QWORD PTR [rbp+0x0]
   14001393b:	test   rax,rax
   14001393e:	je     0x14001395b
   140013940:	sub    rbp,rdi
   140013943:	mov    rcx,rax
   140013946:	call   0x140018880
   14001394b:	mov    QWORD PTR [rdi],rax
   14001394e:	add    rdi,0x8
   140013952:	mov    rax,QWORD PTR [rdi+rbp*1]
   140013956:	test   rax,rax
   140013959:	jne    0x140013943
   14001395b:	xor    ebp,ebp
   14001395d:	mov    QWORD PTR [rdi],rbp
   140013960:	mov    edi,DWORD PTR [rsp+0x78]
   140013964:	mov    QWORD PTR [rip+0x1103d],rsi        # 0x1400249a8
   14001396b:	test   rsi,rsi
   14001396e:	jne    0x140013a19
   140013974:	mov    rax,QWORD PTR [rip+0x1101d]        # 0x140024998
   14001397b:	test   edi,edi
   14001397d:	je     0x1400139c8
   14001397f:	test   rax,rax
   140013982:	je     0x1400139c8
   140013984:	call   0x140018af8
   140013989:	mov    QWORD PTR [rip+0x11058],rax        # 0x1400249e8
   140013990:	call   0x1400189c0
   140013995:	test   eax,eax
   140013997:	jns    0x140013a12
   140013999:	call   0x1400188f8
   14001399e:	test   eax,eax
   1400139a0:	je     0x140013a12
   1400139a2:	call   0x14000bdc0
   1400139a7:	mov    DWORD PTR [rax],0x16
   1400139ad:	or     eax,0xffffffff
   1400139b0:	mov    rbx,QWORD PTR [rsp+0x80]
   1400139b8:	add    rsp,0x30
   1400139bc:	pop    r15
   1400139be:	pop    r14
   1400139c0:	pop    r13
   1400139c2:	pop    r12
   1400139c4:	pop    rdi
   1400139c5:	pop    rsi
   1400139c6:	pop    rbp
   1400139c7:	ret    
   1400139c8:	test   r15d,r15d
   1400139cb:	je     0x1400139d1
   1400139cd:	xor    eax,eax
   1400139cf:	jmp    0x1400139b0
   1400139d1:	test   rax,rax
   1400139d4:	jne    0x1400139f9
   1400139d6:	lea    ecx,[rax+0x8]
   1400139d9:	call   0x140010aa4
   1400139de:	mov    QWORD PTR [rip+0x10fb3],rax        # 0x140024998
   1400139e5:	test   rax,rax
   1400139e8:	je     0x1400139ad
   1400139ea:	mov    QWORD PTR [rax],rbp
   1400139ed:	mov    rsi,QWORD PTR [rip+0x10fb4]        # 0x1400249a8
   1400139f4:	test   rsi,rsi
   1400139f7:	jne    0x140013a19
   1400139f9:	mov    ecx,0x8
   1400139fe:	call   0x140010aa4
   140013a03:	mov    QWORD PTR [rip+0x10f9e],rax        # 0x1400249a8
   140013a0a:	test   rax,rax
   140013a0d:	je     0x1400139ad
   140013a0f:	mov    QWORD PTR [rax],rbp
   140013a12:	mov    rsi,QWORD PTR [rip+0x10f8f]        # 0x1400249a8
   140013a19:	mov    rbp,rsi
   140013a1c:	test   rsi,rsi
   140013a1f:	je     0x1400139ad
   140013a21:	mov    rax,QWORD PTR [rsi]
   140013a24:	sub    r13,r12
   140013a27:	mov    rdi,rsi
   140013a2a:	sar    r13,1
   140013a2d:	mov    QWORD PTR [rsp+0x70],r13
   140013a32:	movsxd r13,r13d
   140013a35:	test   rax,rax
   140013a38:	je     0x140013a7f
   140013a3a:	mov    esi,0x3d
   140013a3f:	mov    r8,r13
   140013a42:	mov    rdx,rax
   140013a45:	mov    rcx,r12
   140013a48:	call   0x1400187ec
   140013a4d:	xor    ecx,ecx
   140013a4f:	test   eax,eax
   140013a51:	jne    0x140013a6c
   140013a53:	mov    rax,QWORD PTR [rdi]
   140013a56:	cmp    WORD PTR [rax+r13*2],si
   140013a5b:	je     0x140013b02
   140013a61:	cmp    WORD PTR [rax+r13*2],cx
   140013a66:	je     0x140013b02
   140013a6c:	add    rdi,0x8
   140013a70:	mov    rax,QWORD PTR [rdi]
   140013a73:	test   rax,rax
   140013a76:	jne    0x140013a3f
   140013a78:	mov    rsi,QWORD PTR [rip+0x10f29]        # 0x1400249a8
   140013a7f:	sub    rdi,rsi
   140013a82:	sar    rdi,0x3
   140013a86:	neg    edi
   140013a88:	xor    r13d,r13d
   140013a8b:	test   edi,edi
   140013a8d:	js     0x140013b1f
   140013a93:	cmp    QWORD PTR [rbp+0x0],r13
   140013a97:	je     0x140013b1f
   140013a9d:	movsxd rsi,edi
   140013aa0:	mov    rcx,QWORD PTR [rbp+rsi*8+0x0]
   140013aa5:	call   0x14000b460
   140013aaa:	test   r15d,r15d
   140013aad:	je     0x140013b15
   140013aaf:	cmp    QWORD PTR [rbp+rsi*8+0x0],r13
   140013ab4:	je     0x140013ad3
   140013ab6:	lea    rcx,[rbp+rsi*8+0x8]
   140013abb:	mov    rax,QWORD PTR [rcx]
   140013abe:	inc    edi
   140013ac0:	add    rcx,0x8
   140013ac4:	mov    QWORD PTR [rbp+rsi*8+0x0],rax
   140013ac9:	inc    rsi
   140013acc:	cmp    QWORD PTR [rbp+rsi*8+0x0],r13
   140013ad1:	jne    0x140013abb
   140013ad3:	movsxd rdx,edi
   140013ad6:	movabs rax,0x1fffffffffffffff
   140013ae0:	cmp    rdx,rax
   140013ae3:	jae    0x140013b7b
   140013ae9:	mov    rcx,QWORD PTR [rip+0x10eb8]        # 0x1400249a8
   140013af0:	mov    r8d,0x8
   140013af6:	call   0x140010c30
   140013afb:	test   rax,rax
   140013afe:	je     0x140013b7b
   140013b00:	jmp    0x140013b74
   140013b02:	mov    rsi,QWORD PTR [rip+0x10e9f]        # 0x1400249a8
   140013b09:	sub    rdi,rsi
   140013b0c:	sar    rdi,0x3
   140013b10:	jmp    0x140013a88
   140013b15:	mov    QWORD PTR [rbp+rsi*8+0x0],r12
   140013b1a:	mov    QWORD PTR [r14],r13
   140013b1d:	jmp    0x140013b7b
   140013b1f:	test   r15d,r15d
   140013b22:	jne    0x140013c23
   140013b28:	test   edi,edi
   140013b2a:	jns    0x140013b2e
   140013b2c:	neg    edi
   140013b2e:	lea    eax,[rdi+0x2]
   140013b31:	cmp    eax,edi
   140013b33:	jl     0x1400139ad
   140013b39:	movsxd r8,eax
   140013b3c:	movabs rax,0x1fffffffffffffff
   140013b46:	cmp    r8,rax
   140013b49:	jae    0x1400139ad
   140013b4f:	mov    edx,0x8
   140013b54:	mov    rcx,rsi
   140013b57:	call   0x140010c30
   140013b5c:	test   rax,rax
   140013b5f:	je     0x1400139ad
   140013b65:	movsxd rcx,edi
   140013b68:	mov    QWORD PTR [rax+rcx*8],r12
   140013b6c:	mov    QWORD PTR [rax+rcx*8+0x8],r13
   140013b71:	mov    QWORD PTR [r14],r13
   140013b74:	mov    QWORD PTR [rip+0x10e2d],rax        # 0x1400249a8
   140013b7b:	cmp    DWORD PTR [rsp+0x78],r13d
   140013b80:	je     0x140013bf7
   140013b82:	mov    rcx,r12
   140013b85:	call   0x140013c34
   140013b8a:	mov    esi,0x2
   140013b8f:	lea    rcx,[rsi+rax*1]
   140013b93:	mov    edx,esi
   140013b95:	call   0x140010b24
   140013b9a:	mov    rdi,rax
   140013b9d:	test   rax,rax
   140013ba0:	je     0x140013bf7
   140013ba2:	mov    rcx,r12
   140013ba5:	call   0x140013c34
   140013baa:	mov    r8,r12
   140013bad:	mov    rcx,rdi
   140013bb0:	lea    rdx,[rsi+rax*1]
   140013bb4:	call   0x14001517c
   140013bb9:	test   eax,eax
   140013bbb:	jne    0x140013c0e
   140013bbd:	mov    rax,QWORD PTR [rsp+0x70]
   140013bc2:	mov    rcx,rdi
   140013bc5:	lea    rdx,[rdi+rax*2]
   140013bc9:	mov    WORD PTR [rdx],r13w
   140013bcd:	add    rdx,rsi
   140013bd0:	test   r15d,r15d
   140013bd3:	cmovne rdx,r13
   140013bd7:	call   QWORD PTR [rip+0x66d3]        # 0x14001a2b0
   140013bdd:	test   eax,eax
   140013bdf:	jne    0x140013bef
   140013be1:	or     ebx,0xffffffff
   140013be4:	call   0x14000bdc0
   140013be9:	mov    DWORD PTR [rax],0x2a
   140013bef:	mov    rcx,rdi
   140013bf2:	call   0x14000b460
   140013bf7:	test   r15d,r15d
   140013bfa:	je     0x140013c07
   140013bfc:	mov    rcx,r12
   140013bff:	call   0x14000b460
   140013c04:	mov    QWORD PTR [r14],r13
   140013c07:	mov    eax,ebx
   140013c09:	jmp    0x1400139b0
   140013c0e:	xor    r9d,r9d
   140013c11:	xor    r8d,r8d
   140013c14:	xor    edx,edx
   140013c16:	xor    ecx,ecx
   140013c18:	mov    QWORD PTR [rsp+0x20],r13
   140013c1d:	call   0x14000cf78
   140013c22:	int3   
   140013c23:	mov    rcx,r12
   140013c26:	call   0x14000b460
   140013c2b:	mov    QWORD PTR [r14],r13
   140013c2e:	jmp    0x1400139cd
   140013c33:	int3   
   140013c34:	mov    rax,rcx
   140013c37:	movzx  edx,WORD PTR [rax]
   140013c3a:	add    rax,0x2
   140013c3e:	test   dx,dx
   140013c41:	jne    0x140013c37
   140013c43:	sub    rax,rcx
   140013c46:	sar    rax,1
   140013c49:	dec    rax
   140013c4c:	ret    
   140013c4d:	int3   
   140013c4e:	int3   
   140013c4f:	int3   
   140013c50:	mov    QWORD PTR [rsp+0x18],rbx
   140013c55:	mov    DWORD PTR [rsp+0x10],edx
   140013c59:	push   rbp
   140013c5a:	push   rsi
   140013c5b:	push   rdi
   140013c5c:	push   r12
   140013c5e:	push   r13
   140013c60:	push   r14
   140013c62:	push   r15
   140013c64:	sub    rsp,0x30
   140013c68:	xor    r13d,r13d
   140013c6b:	mov    ebp,edx
   140013c6d:	mov    r14,rcx
   140013c70:	mov    ebx,r13d
   140013c73:	test   rcx,rcx
   140013c76:	jne    0x140013c8d
   140013c78:	call   0x14000bdc0
   140013c7d:	mov    DWORD PTR [rax],0x16
   140013c83:	call   0x14000d01c
   140013c88:	jmp    0x140013d79
   140013c8d:	mov    r12,QWORD PTR [rcx]
   140013c90:	test   r12,r12
   140013c93:	je     0x140013d6e
   140013c99:	mov    edx,0x3d
   140013c9e:	mov    rcx,r12
   140013ca1:	call   0x1400140d8
   140013ca6:	mov    rdi,rax
   140013ca9:	mov    QWORD PTR [rsp+0x70],rax
   140013cae:	test   rax,rax
   140013cb1:	je     0x140013d6e
   140013cb7:	cmp    r12,rax
   140013cba:	je     0x140013d6e
   140013cc0:	cmp    BYTE PTR [rax+0x1],r13b
   140013cc4:	mov    rsi,QWORD PTR [rip+0x10ccd]        # 0x140024998
   140013ccb:	mov    r15d,r13d
   140013cce:	sete   r15b
   140013cd2:	cmp    rsi,QWORD PTR [rip+0x10cc7]        # 0x1400249a0
   140013cd9:	jne    0x140013d4f
   140013cdb:	mov    rbp,rsi
   140013cde:	mov    eax,r13d
   140013ce1:	test   rsi,rsi
   140013ce4:	jne    0x140013cf1
   140013ce6:	mov    rsi,r13
   140013ce9:	jmp    0x140013d44
   140013ceb:	add    rsi,0x8
   140013cef:	inc    eax
   140013cf1:	cmp    QWORD PTR [rsi],r13
   140013cf4:	jne    0x140013ceb
   140013cf6:	inc    eax
   140013cf8:	mov    edx,0x8
   140013cfd:	movsxd rcx,eax
   140013d00:	call   0x140010b24
   140013d05:	mov    rdi,rax
   140013d08:	mov    rsi,rax
   140013d0b:	test   rax,rax
   140013d0e:	jne    0x140013d18
   140013d10:	lea    ecx,[rax+0x9]
   140013d13:	call   0x140009c04
   140013d18:	mov    rax,QWORD PTR [rbp+0x0]
   140013d1c:	test   rax,rax
   140013d1f:	je     0x140013d3c
   140013d21:	sub    rbp,rdi
   140013d24:	mov    rcx,rax
   140013d27:	call   0x140018ba0
   140013d2c:	mov    QWORD PTR [rdi],rax
   140013d2f:	add    rdi,0x8
   140013d33:	mov    rax,QWORD PTR [rdi+rbp*1]
   140013d37:	test   rax,rax
   140013d3a:	jne    0x140013d24
   140013d3c:	mov    QWORD PTR [rdi],r13
   140013d3f:	mov    rdi,QWORD PTR [rsp+0x70]
   140013d44:	mov    ebp,DWORD PTR [rsp+0x78]
   140013d48:	mov    QWORD PTR [rip+0x10c49],rsi        # 0x140024998
   140013d4f:	test   rsi,rsi
   140013d52:	jne    0x140013ddf
   140013d58:	test   ebp,ebp
   140013d5a:	je     0x140013d94
   140013d5c:	cmp    QWORD PTR [rip+0x10c45],r13        # 0x1400249a8
   140013d63:	je     0x140013d94
   140013d65:	call   0x14000e9bc
   140013d6a:	test   eax,eax
   140013d6c:	je     0x140013dd8
   140013d6e:	call   0x14000bdc0
   140013d73:	mov    DWORD PTR [rax],0x16
   140013d79:	or     eax,0xffffffff
   140013d7c:	mov    rbx,QWORD PTR [rsp+0x80]
   140013d84:	add    rsp,0x30
   140013d88:	pop    r15
   140013d8a:	pop    r14
   140013d8c:	pop    r13
   140013d8e:	pop    r12
   140013d90:	pop    rdi
   140013d91:	pop    rsi
   140013d92:	pop    rbp
   140013d93:	ret    
   140013d94:	test   r15d,r15d
   140013d97:	je     0x140013d9d
   140013d99:	xor    eax,eax
   140013d9b:	jmp    0x140013d7c
   140013d9d:	mov    ecx,0x8
   140013da2:	call   0x140010aa4
   140013da7:	mov    QWORD PTR [rip+0x10bea],rax        # 0x140024998
   140013dae:	test   rax,rax
   140013db1:	je     0x140013d79
   140013db3:	mov    QWORD PTR [rax],r13
   140013db6:	cmp    QWORD PTR [rip+0x10beb],r13        # 0x1400249a8
   140013dbd:	jne    0x140013dd8
   140013dbf:	mov    ecx,0x8
   140013dc4:	call   0x140010aa4
   140013dc9:	mov    QWORD PTR [rip+0x10bd8],rax        # 0x1400249a8
   140013dd0:	test   rax,rax
   140013dd3:	je     0x140013d79
   140013dd5:	mov    QWORD PTR [rax],r13
   140013dd8:	mov    rsi,QWORD PTR [rip+0x10bb9]        # 0x140024998
   140013ddf:	mov    rbp,rsi
   140013de2:	test   rsi,rsi
   140013de5:	je     0x140013d79
   140013de7:	mov    rcx,QWORD PTR [rsi]
   140013dea:	mov    eax,edi
   140013dec:	mov    rdi,rsi
   140013def:	sub    eax,r12d
   140013df2:	movsxd r13,eax
   140013df5:	test   rcx,rcx
   140013df8:	je     0x140013e39
   140013dfa:	mov    rdx,rcx
   140013dfd:	mov    r8,r13
   140013e00:	mov    rcx,r12
   140013e03:	call   0x14000e9b4
   140013e08:	test   eax,eax
   140013e0a:	jne    0x140013e26
   140013e0c:	mov    rax,QWORD PTR [rdi]
   140013e0f:	cmp    BYTE PTR [r13+rax*1+0x0],0x3d
   140013e15:	je     0x140013ebc
   140013e1b:	cmp    BYTE PTR [r13+rax*1+0x0],bl
   140013e20:	je     0x140013ebc
   140013e26:	add    rdi,0x8
   140013e2a:	mov    rcx,QWORD PTR [rdi]
   140013e2d:	test   rcx,rcx
   140013e30:	jne    0x140013dfa
   140013e32:	mov    rsi,QWORD PTR [rip+0x10b5f]        # 0x140024998
   140013e39:	sub    rdi,rsi
   140013e3c:	sar    rdi,0x3
   140013e40:	neg    edi
   140013e42:	xor    r13d,r13d
   140013e45:	test   edi,edi
   140013e47:	js     0x140013ed9
   140013e4d:	cmp    QWORD PTR [rbp+0x0],r13
   140013e51:	je     0x140013ed9
   140013e57:	movsxd rsi,edi
   140013e5a:	mov    rcx,QWORD PTR [rbp+rsi*8+0x0]
   140013e5f:	call   0x14000b460
   140013e64:	test   r15d,r15d
   140013e67:	je     0x140013ecf
   140013e69:	cmp    QWORD PTR [rbp+rsi*8+0x0],r13
   140013e6e:	je     0x140013e8d
   140013e70:	lea    rcx,[rbp+rsi*8+0x8]
   140013e75:	mov    rax,QWORD PTR [rcx]
   140013e78:	inc    edi
   140013e7a:	add    rcx,0x8
   140013e7e:	mov    QWORD PTR [rbp+rsi*8+0x0],rax
   140013e83:	inc    rsi
   140013e86:	cmp    QWORD PTR [rbp+rsi*8+0x0],r13
   140013e8b:	jne    0x140013e75
   140013e8d:	movsxd rdx,edi
   140013e90:	movabs rax,0x1fffffffffffffff
   140013e9a:	cmp    rdx,rax
   140013e9d:	jae    0x140013f35
   140013ea3:	mov    rcx,QWORD PTR [rip+0x10aee]        # 0x140024998
   140013eaa:	mov    r8d,0x8
   140013eb0:	call   0x140010c30
   140013eb5:	test   rax,rax
   140013eb8:	je     0x140013f35
   140013eba:	jmp    0x140013f2e
   140013ebc:	mov    rsi,QWORD PTR [rip+0x10ad5]        # 0x140024998
   140013ec3:	sub    rdi,rsi
   140013ec6:	sar    rdi,0x3
   140013eca:	jmp    0x140013e42
   140013ecf:	mov    QWORD PTR [rbp+rsi*8+0x0],r12
   140013ed4:	mov    QWORD PTR [r14],r13
   140013ed7:	jmp    0x140013f35
   140013ed9:	test   r15d,r15d
   140013edc:	jne    0x140013fdc
   140013ee2:	test   edi,edi
   140013ee4:	jns    0x140013ee8
   140013ee6:	neg    edi
   140013ee8:	lea    eax,[rdi+0x2]
   140013eeb:	cmp    eax,edi
   140013eed:	jl     0x140013d79
   140013ef3:	movsxd r8,eax
   140013ef6:	movabs rax,0x1fffffffffffffff
   140013f00:	cmp    r8,rax
   140013f03:	jae    0x140013d79
   140013f09:	mov    edx,0x8
   140013f0e:	mov    rcx,rsi
   140013f11:	call   0x140010c30
   140013f16:	test   rax,rax
   140013f19:	je     0x140013d79
   140013f1f:	movsxd rcx,edi
   140013f22:	mov    QWORD PTR [rax+rcx*8],r12
   140013f26:	mov    QWORD PTR [rax+rcx*8+0x8],r13
   140013f2b:	mov    QWORD PTR [r14],r13
   140013f2e:	mov    QWORD PTR [rip+0x10a63],rax        # 0x140024998
   140013f35:	cmp    DWORD PTR [rsp+0x78],r13d
   140013f3a:	je     0x140013fb0
   140013f3c:	mov    rcx,r12
   140013f3f:	call   0x140009fa0
   140013f44:	mov    edx,0x1
   140013f49:	lea    rcx,[rax+0x2]
   140013f4d:	call   0x140010b24
   140013f52:	mov    rdi,rax
   140013f55:	test   rax,rax
   140013f58:	je     0x140013fb0
   140013f5a:	mov    rcx,r12
   140013f5d:	call   0x140009fa0
   140013f62:	mov    r8,r12
   140013f65:	mov    rcx,rdi
   140013f68:	lea    rdx,[rax+0x2]
   140013f6c:	call   0x14000eab0
   140013f71:	test   eax,eax
   140013f73:	jne    0x140013fc7
   140013f75:	mov    rdx,rdi
   140013f78:	mov    rcx,rdi
   140013f7b:	sub    rdx,r12
   140013f7e:	add    rdx,QWORD PTR [rsp+0x70]
   140013f83:	mov    BYTE PTR [rdx],r13b
   140013f86:	inc    rdx
   140013f89:	test   r15d,r15d
   140013f8c:	cmovne rdx,r13
   140013f90:	call   QWORD PTR [rip+0x6322]        # 0x14001a2b8
   140013f96:	test   eax,eax
   140013f98:	jne    0x140013fa8
   140013f9a:	or     ebx,0xffffffff
   140013f9d:	call   0x14000bdc0
   140013fa2:	mov    DWORD PTR [rax],0x2a
   140013fa8:	mov    rcx,rdi
   140013fab:	call   0x14000b460
   140013fb0:	test   r15d,r15d
   140013fb3:	je     0x140013fc0
   140013fb5:	mov    rcx,r12
   140013fb8:	call   0x14000b460
   140013fbd:	mov    QWORD PTR [r14],r13
   140013fc0:	mov    eax,ebx
   140013fc2:	jmp    0x140013d7c
   140013fc7:	xor    r9d,r9d
   140013fca:	xor    r8d,r8d
   140013fcd:	xor    edx,edx
   140013fcf:	xor    ecx,ecx
   140013fd1:	mov    QWORD PTR [rsp+0x20],r13
   140013fd6:	call   0x14000cf78
   140013fdb:	int3   
   140013fdc:	mov    rcx,r12
   140013fdf:	call   0x14000b460
   140013fe4:	mov    QWORD PTR [r14],r13
   140013fe7:	jmp    0x140013d99
   140013fec:	mov    QWORD PTR [rsp+0x8],rbx
   140013ff1:	mov    QWORD PTR [rsp+0x10],rsi
   140013ff6:	mov    QWORD PTR [rsp+0x18],rdi
   140013ffb:	push   rbp
   140013ffc:	mov    rbp,rsp
   140013fff:	sub    rsp,0x40
   140014003:	mov    rbx,rcx
   140014006:	mov    edi,edx
   140014008:	lea    rcx,[rbp-0x20]
   14001400c:	mov    rdx,r8
   14001400f:	call   0x14000c6f4
   140014014:	xor    esi,esi
   140014016:	test   rbx,rbx
   140014019:	jne    0x140014053
   14001401b:	call   0x14000bdc0
   140014020:	mov    DWORD PTR [rax],0x16
   140014026:	call   0x14000d01c
   14001402b:	cmp    BYTE PTR [rbp-0x8],sil
   14001402f:	je     0x14001403c
   140014031:	mov    rax,QWORD PTR [rbp-0x10]
   140014035:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001403c:	xor    eax,eax
   14001403e:	mov    rbx,QWORD PTR [rsp+0x50]
   140014043:	mov    rsi,QWORD PTR [rsp+0x58]
   140014048:	mov    rdi,QWORD PTR [rsp+0x60]
   14001404d:	add    rsp,0x40
   140014051:	pop    rbp
   140014052:	ret    
   140014053:	mov    rdx,QWORD PTR [rbp-0x18]
   140014057:	cmp    DWORD PTR [rdx+0x8],esi
   14001405a:	jne    0x140014079
   14001405c:	mov    edx,edi
   14001405e:	mov    rcx,rbx
   140014061:	call   0x14000c04c
   140014066:	cmp    BYTE PTR [rbp-0x8],sil
   14001406a:	je     0x14001403e
   14001406c:	mov    rcx,QWORD PTR [rbp-0x10]
   140014070:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140014077:	jmp    0x14001403e
   140014079:	movzx  ecx,BYTE PTR [rbx]
   14001407c:	test   cx,cx
   14001407f:	je     0x1400140b4
   140014081:	movzx  eax,cl
   140014084:	test   BYTE PTR [rax+rdx*1+0x1d],0x4
   140014089:	je     0x1400140a8
   14001408b:	inc    rbx
   14001408e:	cmp    BYTE PTR [rbx],sil
   140014091:	je     0x14001402b
   140014093:	movzx  eax,BYTE PTR [rbx]
   140014096:	movzx  ecx,cx
   140014099:	shl    ecx,0x8
   14001409c:	or     ecx,eax
   14001409e:	cmp    edi,ecx
   1400140a0:	jne    0x1400140af
   1400140a2:	lea    rax,[rbx-0x1]
   1400140a6:	jmp    0x140014066
   1400140a8:	movzx  eax,cx
   1400140ab:	cmp    edi,eax
   1400140ad:	je     0x1400140b4
   1400140af:	inc    rbx
   1400140b2:	jmp    0x140014079
   1400140b4:	movzx  eax,cx
   1400140b7:	cmp    edi,eax
   1400140b9:	jne    0x14001402b
   1400140bf:	cmp    BYTE PTR [rbp-0x8],sil
   1400140c3:	je     0x1400140d0
   1400140c5:	mov    rax,QWORD PTR [rbp-0x10]
   1400140c9:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400140d0:	mov    rax,rbx
   1400140d3:	jmp    0x14001403e
   1400140d8:	xor    r8d,r8d
   1400140db:	jmp    0x140013fec
   1400140e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400140e5:	mov    QWORD PTR [rsp+0x10],rbp
   1400140ea:	mov    QWORD PTR [rsp+0x18],rsi
   1400140ef:	push   rdi
   1400140f0:	sub    rsp,0x20
   1400140f4:	lea    rbx,[rcx+0x1c]
   1400140f8:	mov    rbp,rcx
   1400140fb:	mov    esi,0x101
   140014100:	mov    rcx,rbx
   140014103:	mov    r8d,esi
   140014106:	xor    edx,edx
   140014108:	call   0x14000a530
   14001410d:	xor    r11d,r11d
   140014110:	lea    rdi,[rbp+0x10]
   140014114:	lea    ecx,[r11+0x6]
   140014118:	movzx  eax,r11w
   14001411c:	mov    DWORD PTR [rbp+0xc],r11d
   140014120:	mov    QWORD PTR [rbp+0x4],r11
   140014124:	rep stos WORD PTR es:[rdi],ax
   140014127:	lea    rdi,[rip+0xf952]        # 0x140023a80
   14001412e:	sub    rdi,rbp
   140014131:	mov    al,BYTE PTR [rdi+rbx*1]
   140014134:	mov    BYTE PTR [rbx],al
   140014136:	inc    rbx
   140014139:	dec    rsi
   14001413c:	jne    0x140014131
   14001413e:	lea    rcx,[rbp+0x11d]
   140014145:	mov    edx,0x100
   14001414a:	mov    al,BYTE PTR [rcx+rdi*1]
   14001414d:	mov    BYTE PTR [rcx],al
   14001414f:	inc    rcx
   140014152:	dec    rdx
   140014155:	jne    0x14001414a
   140014157:	mov    rbx,QWORD PTR [rsp+0x30]
   14001415c:	mov    rbp,QWORD PTR [rsp+0x38]
   140014161:	mov    rsi,QWORD PTR [rsp+0x40]
   140014166:	add    rsp,0x20
   14001416a:	pop    rdi
   14001416b:	ret    
   14001416c:	mov    rax,rsp
   14001416f:	mov    QWORD PTR [rax+0x10],rbx
   140014173:	mov    QWORD PTR [rax+0x18],rsi
   140014177:	mov    QWORD PTR [rax+0x20],rdi
   14001417b:	push   rbp
   14001417c:	lea    rbp,[rax-0x488]
   140014183:	sub    rsp,0x580
   14001418a:	mov    rax,QWORD PTR [rip+0xef2f]        # 0x1400230c0
   140014191:	xor    rax,rsp
   140014194:	mov    QWORD PTR [rbp+0x470],rax
   14001419b:	mov    rsi,rcx
   14001419e:	mov    ecx,DWORD PTR [rcx+0x4]
   1400141a1:	lea    rdx,[rsp+0x50]
   1400141a6:	call   QWORD PTR [rip+0x6114]        # 0x14001a2c0
   1400141ac:	mov    ebx,0x100
   1400141b1:	test   eax,eax
   1400141b3:	je     0x1400142f5
   1400141b9:	xor    eax,eax
   1400141bb:	lea    rcx,[rsp+0x70]
   1400141c0:	mov    BYTE PTR [rcx],al
   1400141c2:	inc    eax
   1400141c4:	inc    rcx
   1400141c7:	cmp    eax,ebx
   1400141c9:	jb     0x1400141c0
   1400141cb:	mov    al,BYTE PTR [rsp+0x56]
   1400141cf:	mov    BYTE PTR [rsp+0x70],0x20
   1400141d4:	lea    rdi,[rsp+0x56]
   1400141d9:	jmp    0x140014204
   1400141db:	movzx  edx,BYTE PTR [rdi+0x1]
   1400141df:	movzx  r8d,al
   1400141e3:	cmp    r8d,edx
   1400141e6:	ja     0x1400141fe
   1400141e8:	sub    edx,r8d
   1400141eb:	mov    eax,r8d
   1400141ee:	lea    rcx,[rsp+r8*1+0x70]
   1400141f3:	lea    r8d,[rdx+0x1]
   1400141f7:	mov    dl,0x20
   1400141f9:	call   0x14000a530
   1400141fe:	add    rdi,0x2
   140014202:	mov    al,BYTE PTR [rdi]
   140014204:	test   al,al
   140014206:	jne    0x1400141db
   140014208:	mov    eax,DWORD PTR [rsi+0xc]
   14001420b:	and    DWORD PTR [rsp+0x38],0x0
   140014210:	lea    r8,[rsp+0x70]
   140014215:	mov    DWORD PTR [rsp+0x30],eax
   140014219:	mov    eax,DWORD PTR [rsi+0x4]
   14001421c:	mov    r9d,ebx
   14001421f:	mov    DWORD PTR [rsp+0x28],eax
   140014223:	lea    rax,[rbp+0x270]
   14001422a:	mov    edx,0x1
   14001422f:	xor    ecx,ecx
   140014231:	mov    QWORD PTR [rsp+0x20],rax
   140014236:	call   0x140018d70
   14001423b:	and    DWORD PTR [rsp+0x40],0x0
   140014240:	mov    eax,DWORD PTR [rsi+0x4]
   140014243:	mov    edx,DWORD PTR [rsi+0xc]
   140014246:	mov    DWORD PTR [rsp+0x38],eax
   14001424a:	lea    rax,[rbp+0x70]
   14001424e:	mov    DWORD PTR [rsp+0x30],ebx
   140014252:	mov    QWORD PTR [rsp+0x28],rax
   140014257:	lea    r9,[rsp+0x70]
   14001425c:	mov    r8d,ebx
   14001425f:	xor    ecx,ecx
   140014261:	mov    DWORD PTR [rsp+0x20],ebx
   140014265:	call   0x14001862c
   14001426a:	and    DWORD PTR [rsp+0x40],0x0
   14001426f:	mov    eax,DWORD PTR [rsi+0x4]
   140014272:	mov    edx,DWORD PTR [rsi+0xc]
   140014275:	mov    DWORD PTR [rsp+0x38],eax
   140014279:	lea    rax,[rbp+0x170]
   140014280:	mov    DWORD PTR [rsp+0x30],ebx
   140014284:	mov    QWORD PTR [rsp+0x28],rax
   140014289:	lea    r9,[rsp+0x70]
   14001428e:	mov    r8d,0x200
   140014294:	xor    ecx,ecx
   140014296:	mov    DWORD PTR [rsp+0x20],ebx
   14001429a:	call   0x14001862c
   14001429f:	lea    rdx,[rbp+0x70]
   1400142a3:	lea    r8,[rbp+0x170]
   1400142aa:	sub    rdx,rsi
   1400142ad:	lea    r11,[rbp+0x270]
   1400142b4:	lea    rcx,[rsi+0x1d]
   1400142b8:	sub    r8,rsi
   1400142bb:	test   BYTE PTR [r11],0x1
   1400142bf:	je     0x1400142ca
   1400142c1:	or     BYTE PTR [rcx],0x10
   1400142c4:	mov    al,BYTE PTR [rdx+rcx*1-0x1d]
   1400142c8:	jmp    0x1400142d8
   1400142ca:	test   BYTE PTR [r11],0x2
   1400142ce:	je     0x1400142e0
   1400142d0:	or     BYTE PTR [rcx],0x20
   1400142d3:	mov    al,BYTE PTR [r8+rcx*1-0x1d]
   1400142d8:	mov    BYTE PTR [rcx+0x100],al
   1400142de:	jmp    0x1400142e7
   1400142e0:	mov    BYTE PTR [rcx+0x100],0x0
   1400142e7:	inc    rcx
   1400142ea:	add    r11,0x2
   1400142ee:	dec    rbx
   1400142f1:	jne    0x1400142bb
   1400142f3:	jmp    0x140014334
   1400142f5:	xor    edx,edx
   1400142f7:	lea    rcx,[rsi+0x1d]
   1400142fb:	lea    r8d,[rdx-0x61]
   1400142ff:	lea    eax,[r8+0x20]
   140014303:	cmp    eax,0x19
   140014306:	ja     0x140014310
   140014308:	or     BYTE PTR [rcx],0x10
   14001430b:	lea    eax,[rdx+0x20]
   14001430e:	jmp    0x14001431c
   140014310:	cmp    r8d,0x19
   140014314:	ja     0x140014324
   140014316:	or     BYTE PTR [rcx],0x20
   140014319:	lea    eax,[rdx-0x20]
   14001431c:	mov    BYTE PTR [rcx+0x100],al
   140014322:	jmp    0x14001432b
   140014324:	mov    BYTE PTR [rcx+0x100],0x0
   14001432b:	inc    edx
   14001432d:	inc    rcx
   140014330:	cmp    edx,ebx
   140014332:	jb     0x1400142fb
   140014334:	mov    rcx,QWORD PTR [rbp+0x470]
   14001433b:	xor    rcx,rsp
   14001433e:	call   0x14000a820
   140014343:	lea    r11,[rsp+0x580]
   14001434b:	mov    rbx,QWORD PTR [r11+0x18]
   14001434f:	mov    rsi,QWORD PTR [r11+0x20]
   140014353:	mov    rdi,QWORD PTR [r11+0x28]
   140014357:	mov    rsp,r11
   14001435a:	pop    rbp
   14001435b:	ret    
   14001435c:	mov    QWORD PTR [rsp+0x10],rbx
   140014361:	push   rdi
   140014362:	sub    rsp,0x20
   140014366:	call   0x14000d204
   14001436b:	mov    rdi,rax
   14001436e:	mov    ecx,DWORD PTR [rax+0xc8]
   140014374:	test   DWORD PTR [rip+0xfc36],ecx        # 0x140023fb0
   14001437a:	je     0x14001438f
   14001437c:	cmp    QWORD PTR [rax+0xc0],0x0
   140014384:	je     0x14001438f
   140014386:	mov    rbx,QWORD PTR [rax+0xb8]
   14001438d:	jmp    0x1400143fb
   14001438f:	mov    ecx,0xd
   140014394:	call   0x14000cb28
   140014399:	nop
   14001439a:	mov    rbx,QWORD PTR [rdi+0xb8]
   1400143a1:	mov    QWORD PTR [rsp+0x30],rbx
   1400143a6:	cmp    rbx,QWORD PTR [rip+0xfb03]        # 0x140023eb0
   1400143ad:	je     0x1400143f1
   1400143af:	test   rbx,rbx
   1400143b2:	je     0x1400143cf
   1400143b4:	lock dec DWORD PTR [rbx]
   1400143b7:	jne    0x1400143cf
   1400143b9:	lea    rax,[rip+0xf6c0]        # 0x140023a80
   1400143c0:	mov    rcx,QWORD PTR [rsp+0x30]
   1400143c5:	cmp    rcx,rax
   1400143c8:	je     0x1400143cf
   1400143ca:	call   0x14000b460
   1400143cf:	mov    rax,QWORD PTR [rip+0xfada]        # 0x140023eb0
   1400143d6:	mov    QWORD PTR [rdi+0xb8],rax
   1400143dd:	mov    rax,QWORD PTR [rip+0xfacc]        # 0x140023eb0
   1400143e4:	mov    QWORD PTR [rsp+0x30],rax
   1400143e9:	lock inc DWORD PTR [rax]
   1400143ec:	mov    rbx,QWORD PTR [rsp+0x30]
   1400143f1:	mov    ecx,0xd
   1400143f6:	call   0x14000ca28
   1400143fb:	test   rbx,rbx
   1400143fe:	jne    0x140014408
   140014400:	lea    ecx,[rbx+0x20]
   140014403:	call   0x140009c04
   140014408:	mov    rax,rbx
   14001440b:	mov    rbx,QWORD PTR [rsp+0x38]
   140014410:	add    rsp,0x20
   140014414:	pop    rdi
   140014415:	ret    
   140014416:	int3   
   140014417:	int3   
   140014418:	rex push rbx
   14001441a:	sub    rsp,0x40
   14001441e:	mov    ebx,ecx
   140014420:	lea    rcx,[rsp+0x20]
   140014425:	xor    edx,edx
   140014427:	call   0x14000c6f4
   14001442c:	and    DWORD PTR [rip+0x11515],0x0        # 0x140025948
   140014433:	cmp    ebx,0xfffffffe
   140014436:	jne    0x14001445d
   140014438:	mov    DWORD PTR [rip+0x11506],0x1        # 0x140025948
   140014442:	call   QWORD PTR [rip+0x5e88]        # 0x14001a2d0
   140014448:	cmp    BYTE PTR [rsp+0x38],0x0
   14001444d:	je     0x1400144a2
   14001444f:	mov    rcx,QWORD PTR [rsp+0x30]
   140014454:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001445b:	jmp    0x1400144a2
   14001445d:	cmp    ebx,0xfffffffd
   140014460:	jne    0x140014474
   140014462:	mov    DWORD PTR [rip+0x114dc],0x1        # 0x140025948
   14001446c:	call   QWORD PTR [rip+0x5e56]        # 0x14001a2c8
   140014472:	jmp    0x140014448
   140014474:	cmp    ebx,0xfffffffc
   140014477:	jne    0x14001448d
   140014479:	mov    rax,QWORD PTR [rsp+0x20]
   14001447e:	mov    DWORD PTR [rip+0x114c0],0x1        # 0x140025948
   140014488:	mov    eax,DWORD PTR [rax+0x4]
   14001448b:	jmp    0x140014448
   14001448d:	cmp    BYTE PTR [rsp+0x38],0x0
   140014492:	je     0x1400144a0
   140014494:	mov    rax,QWORD PTR [rsp+0x30]
   140014499:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400144a0:	mov    eax,ebx
   1400144a2:	add    rsp,0x40
   1400144a6:	pop    rbx
   1400144a7:	ret    
   1400144a8:	mov    QWORD PTR [rsp+0x18],rbx
   1400144ad:	push   rbp
   1400144ae:	push   rsi
   1400144af:	push   rdi
   1400144b0:	push   r12
   1400144b2:	push   r13
   1400144b4:	sub    rsp,0x40
   1400144b8:	mov    rax,QWORD PTR [rip+0xec01]        # 0x1400230c0
   1400144bf:	xor    rax,rsp
   1400144c2:	mov    QWORD PTR [rsp+0x38],rax
   1400144c7:	mov    rsi,rdx
   1400144ca:	call   0x140014418
   1400144cf:	xor    ebx,ebx
   1400144d1:	mov    edi,eax
   1400144d3:	test   eax,eax
   1400144d5:	jne    0x1400144e4
   1400144d7:	mov    rcx,rsi
   1400144da:	call   0x1400140e0
   1400144df:	jmp    0x1400146fa
   1400144e4:	lea    r13,[rip+0xf9d5]        # 0x140023ec0
   1400144eb:	mov    ecx,ebx
   1400144ed:	mov    rbp,rbx
   1400144f0:	mov    rax,r13
   1400144f3:	mov    r12d,0x1
   1400144f9:	cmp    DWORD PTR [rax],edi
   1400144fb:	je     0x140014627
   140014501:	add    ecx,r12d
   140014504:	add    rbp,r12
   140014507:	add    rax,0x30
   14001450b:	cmp    ecx,0x5
   14001450e:	jb     0x1400144f9
   140014510:	cmp    edi,0xfde8
   140014516:	je     0x14001461f
   14001451c:	cmp    edi,0xfde9
   140014522:	je     0x14001461f
   140014528:	movzx  ecx,di
   14001452b:	call   QWORD PTR [rip+0x5da7]        # 0x14001a2d8
   140014531:	test   eax,eax
   140014533:	je     0x14001461f
   140014539:	lea    rdx,[rsp+0x20]
   14001453e:	mov    ecx,edi
   140014540:	call   QWORD PTR [rip+0x5d7a]        # 0x14001a2c0
   140014546:	test   eax,eax
   140014548:	je     0x140014613
   14001454e:	lea    rcx,[rsi+0x1c]
   140014552:	xor    edx,edx
   140014554:	mov    r8d,0x101
   14001455a:	call   0x14000a530
   14001455f:	mov    DWORD PTR [rsi+0x4],edi
   140014562:	mov    DWORD PTR [rsi+0xc],ebx
   140014565:	cmp    DWORD PTR [rsp+0x20],r12d
   14001456a:	jbe    0x1400145fc
   140014570:	lea    rax,[rsp+0x26]
   140014575:	cmp    BYTE PTR [rsp+0x26],bl
   140014579:	je     0x1400145a8
   14001457b:	cmp    BYTE PTR [rax+0x1],bl
   14001457e:	je     0x1400145a8
   140014580:	movzx  edi,BYTE PTR [rax]
   140014583:	movzx  ecx,BYTE PTR [rax+0x1]
   140014587:	cmp    edi,ecx
   140014589:	ja     0x1400145a0
   14001458b:	sub    ecx,edi
   14001458d:	lea    rdx,[rdi+rsi*1+0x1d]
   140014592:	add    ecx,r12d
   140014595:	or     BYTE PTR [rdx],0x4
   140014598:	add    rdx,r12
   14001459b:	sub    rcx,r12
   14001459e:	jne    0x140014595
   1400145a0:	add    rax,0x2
   1400145a4:	cmp    BYTE PTR [rax],bl
   1400145a6:	jne    0x14001457b
   1400145a8:	lea    rax,[rsi+0x1e]
   1400145ac:	mov    ecx,0xfe
   1400145b1:	or     BYTE PTR [rax],0x8
   1400145b4:	add    rax,r12
   1400145b7:	sub    rcx,r12
   1400145ba:	jne    0x1400145b1
   1400145bc:	mov    ecx,DWORD PTR [rsi+0x4]
   1400145bf:	sub    ecx,0x3a4
   1400145c5:	je     0x1400145ee
   1400145c7:	sub    ecx,0x4
   1400145ca:	je     0x1400145e7
   1400145cc:	sub    ecx,0xd
   1400145cf:	je     0x1400145e0
   1400145d1:	dec    ecx
   1400145d3:	je     0x1400145d9
   1400145d5:	mov    eax,ebx
   1400145d7:	jmp    0x1400145f3
   1400145d9:	mov    eax,0x404
   1400145de:	jmp    0x1400145f3
   1400145e0:	mov    eax,0x412
   1400145e5:	jmp    0x1400145f3
   1400145e7:	mov    eax,0x804
   1400145ec:	jmp    0x1400145f3
   1400145ee:	mov    eax,0x411
   1400145f3:	mov    DWORD PTR [rsi+0xc],eax
   1400145f6:	mov    DWORD PTR [rsi+0x8],r12d
   1400145fa:	jmp    0x1400145ff
   1400145fc:	mov    DWORD PTR [rsi+0x8],ebx
   1400145ff:	lea    rdi,[rsi+0x10]
   140014603:	movzx  eax,bx
   140014606:	mov    ecx,0x6
   14001460b:	rep stos WORD PTR es:[rdi],ax
   14001460e:	jmp    0x1400146f2
   140014613:	cmp    DWORD PTR [rip+0x1132f],ebx        # 0x140025948
   140014619:	jne    0x1400144d7
   14001461f:	or     eax,0xffffffff
   140014622:	jmp    0x1400146fc
   140014627:	lea    rcx,[rsi+0x1c]
   14001462b:	xor    edx,edx
   14001462d:	mov    r8d,0x101
   140014633:	call   0x14000a530
   140014638:	lea    r10,[rbp+rbp*2+0x0]
   14001463d:	lea    r11,[rip+0xf874]        # 0x140023eb8
   140014644:	shl    r10,0x4
   140014648:	mov    ebp,0x4
   14001464d:	lea    r8,[r10+r13*1+0x10]
   140014652:	mov    rcx,r8
   140014655:	cmp    BYTE PTR [r8],bl
   140014658:	je     0x14001468b
   14001465a:	cmp    BYTE PTR [rcx+0x1],bl
   14001465d:	je     0x14001468b
   14001465f:	movzx  edx,BYTE PTR [rcx]
   140014662:	movzx  eax,BYTE PTR [rcx+0x1]
   140014666:	cmp    edx,eax
   140014668:	ja     0x140014683
   14001466a:	lea    r9,[rdx+rsi*1+0x1d]
   14001466f:	mov    al,BYTE PTR [r11]
   140014672:	add    edx,r12d
   140014675:	or     BYTE PTR [r9],al
   140014678:	movzx  eax,BYTE PTR [rcx+0x1]
   14001467c:	add    r9,r12
   14001467f:	cmp    edx,eax
   140014681:	jbe    0x14001466f
   140014683:	add    rcx,0x2
   140014687:	cmp    BYTE PTR [rcx],bl
   140014689:	jne    0x14001465a
   14001468b:	add    r8,0x8
   14001468f:	add    r11,r12
   140014692:	sub    rbp,r12
   140014695:	jne    0x140014652
   140014697:	mov    DWORD PTR [rsi+0x4],edi
   14001469a:	sub    edi,0x3a4
   1400146a0:	mov    DWORD PTR [rsi+0x8],r12d
   1400146a4:	je     0x1400146c9
   1400146a6:	sub    edi,0x4
   1400146a9:	je     0x1400146c2
   1400146ab:	sub    edi,0xd
   1400146ae:	je     0x1400146bb
   1400146b0:	dec    edi
   1400146b2:	jne    0x1400146ce
   1400146b4:	mov    ebx,0x404
   1400146b9:	jmp    0x1400146ce
   1400146bb:	mov    ebx,0x412
   1400146c0:	jmp    0x1400146ce
   1400146c2:	mov    ebx,0x804
   1400146c7:	jmp    0x1400146ce
   1400146c9:	mov    ebx,0x411
   1400146ce:	sub    r10,rsi
   1400146d1:	mov    DWORD PTR [rsi+0xc],ebx
   1400146d4:	lea    rcx,[rsi+0x10]
   1400146d8:	lea    rdi,[r10+r13*1-0xc]
   1400146dd:	mov    edx,0x6
   1400146e2:	movzx  eax,WORD PTR [rdi+rcx*1]
   1400146e6:	mov    WORD PTR [rcx],ax
   1400146e9:	add    rcx,0x2
   1400146ed:	sub    rdx,r12
   1400146f0:	jne    0x1400146e2
   1400146f2:	mov    rcx,rsi
   1400146f5:	call   0x14001416c
   1400146fa:	xor    eax,eax
   1400146fc:	mov    rcx,QWORD PTR [rsp+0x38]
   140014701:	xor    rcx,rsp
   140014704:	call   0x14000a820
   140014709:	mov    rbx,QWORD PTR [rsp+0x80]
   140014711:	add    rsp,0x40
   140014715:	pop    r13
   140014717:	pop    r12
   140014719:	pop    rdi
   14001471a:	pop    rsi
   14001471b:	pop    rbp
   14001471c:	ret    
   14001471d:	int3   
   14001471e:	int3   
   14001471f:	int3   
   140014720:	mov    rax,rsp
   140014723:	mov    QWORD PTR [rax+0x8],rbx
   140014727:	mov    QWORD PTR [rax+0x10],rsi
   14001472b:	mov    QWORD PTR [rax+0x18],rdi
   14001472f:	mov    QWORD PTR [rax+0x20],r12
   140014733:	push   r13
   140014735:	sub    rsp,0x30
   140014739:	mov    edi,ecx
   14001473b:	or     r13d,0xffffffff
   14001473f:	call   0x14000d204
   140014744:	mov    rsi,rax
   140014747:	call   0x14001435c
   14001474c:	mov    rbx,QWORD PTR [rsi+0xb8]
   140014753:	mov    ecx,edi
   140014755:	call   0x140014418
   14001475a:	mov    r12d,eax
   14001475d:	cmp    eax,DWORD PTR [rbx+0x4]
   140014760:	je     0x1400148db
   140014766:	mov    ecx,0x220
   14001476b:	call   0x140010aa4
   140014770:	mov    rbx,rax
   140014773:	xor    edi,edi
   140014775:	test   rax,rax
   140014778:	je     0x1400148e0
   14001477e:	mov    rdx,QWORD PTR [rsi+0xb8]
   140014785:	mov    rcx,rax
   140014788:	mov    r8d,0x220
   14001478e:	call   0x14000a140
   140014793:	mov    DWORD PTR [rbx],edi
   140014795:	mov    rdx,rbx
   140014798:	mov    ecx,r12d
   14001479b:	call   0x1400144a8
   1400147a0:	mov    r13d,eax
   1400147a3:	test   eax,eax
   1400147a5:	jne    0x1400148b5
   1400147ab:	mov    rcx,QWORD PTR [rsi+0xb8]
   1400147b2:	lea    r12,[rip+0xf2c7]        # 0x140023a80
   1400147b9:	lock dec DWORD PTR [rcx]
   1400147bc:	jne    0x1400147cf
   1400147be:	mov    rcx,QWORD PTR [rsi+0xb8]
   1400147c5:	cmp    rcx,r12
   1400147c8:	je     0x1400147cf
   1400147ca:	call   0x14000b460
   1400147cf:	mov    QWORD PTR [rsi+0xb8],rbx
   1400147d6:	lock inc DWORD PTR [rbx]
   1400147d9:	test   BYTE PTR [rsi+0xc8],0x2
   1400147e0:	jne    0x1400148e0
   1400147e6:	test   BYTE PTR [rip+0xf7c3],0x1        # 0x140023fb0
   1400147ed:	jne    0x1400148e0
   1400147f3:	mov    esi,0xd
   1400147f8:	mov    ecx,esi
   1400147fa:	call   0x14000cb28
   1400147ff:	nop
   140014800:	mov    eax,DWORD PTR [rbx+0x4]
   140014803:	mov    DWORD PTR [rip+0x11153],eax        # 0x14002595c
   140014809:	mov    eax,DWORD PTR [rbx+0x8]
   14001480c:	mov    DWORD PTR [rip+0x1114e],eax        # 0x140025960
   140014812:	mov    eax,DWORD PTR [rbx+0xc]
   140014815:	mov    DWORD PTR [rip+0x11149],eax        # 0x140025964
   14001481b:	mov    edx,edi
   14001481d:	lea    r8,[rip+0xfffffffffffeb7dc]        # 0x140000000
   140014824:	mov    DWORD PTR [rsp+0x20],edx
   140014828:	cmp    edx,0x5
   14001482b:	jge    0x140014842
   14001482d:	movsxd rcx,edx
   140014830:	movzx  eax,WORD PTR [rbx+rcx*2+0x10]
   140014835:	mov    WORD PTR [r8+rcx*2+0x25950],ax
   14001483e:	inc    edx
   140014840:	jmp    0x140014824
   140014842:	mov    edx,edi
   140014844:	mov    DWORD PTR [rsp+0x20],edx
   140014848:	cmp    edx,0x101
   14001484e:	jge    0x140014863
   140014850:	movsxd rcx,edx
   140014853:	mov    al,BYTE PTR [rcx+rbx*1+0x1c]
   140014857:	mov    BYTE PTR [rcx+r8*1+0x23ca0],al
   14001485f:	inc    edx
   140014861:	jmp    0x140014844
   140014863:	mov    DWORD PTR [rsp+0x20],edi
   140014867:	cmp    edi,0x100
   14001486d:	jge    0x140014885
   14001486f:	movsxd rcx,edi
   140014872:	mov    al,BYTE PTR [rcx+rbx*1+0x11d]
   140014879:	mov    BYTE PTR [rcx+r8*1+0x23db0],al
   140014881:	inc    edi
   140014883:	jmp    0x140014863
   140014885:	mov    rax,QWORD PTR [rip+0xf624]        # 0x140023eb0
   14001488c:	lock dec DWORD PTR [rax]
   14001488f:	jne    0x1400148a2
   140014891:	mov    rcx,QWORD PTR [rip+0xf618]        # 0x140023eb0
   140014898:	cmp    rcx,r12
   14001489b:	je     0x1400148a2
   14001489d:	call   0x14000b460
   1400148a2:	mov    QWORD PTR [rip+0xf607],rbx        # 0x140023eb0
   1400148a9:	lock inc DWORD PTR [rbx]
   1400148ac:	mov    ecx,esi
   1400148ae:	call   0x14000ca28
   1400148b3:	jmp    0x1400148e0
   1400148b5:	cmp    eax,0xffffffff
   1400148b8:	jne    0x1400148e0
   1400148ba:	lea    r12,[rip+0xf1bf]        # 0x140023a80
   1400148c1:	cmp    rbx,r12
   1400148c4:	je     0x1400148ce
   1400148c6:	mov    rcx,rbx
   1400148c9:	call   0x14000b460
   1400148ce:	call   0x14000bdc0
   1400148d3:	mov    DWORD PTR [rax],0x16
   1400148d9:	jmp    0x1400148e0
   1400148db:	xor    edi,edi
   1400148dd:	mov    r13d,edi
   1400148e0:	mov    eax,r13d
   1400148e3:	mov    rbx,QWORD PTR [rsp+0x40]
   1400148e8:	mov    rsi,QWORD PTR [rsp+0x48]
   1400148ed:	mov    rdi,QWORD PTR [rsp+0x50]
   1400148f2:	mov    r12,QWORD PTR [rsp+0x58]
   1400148f7:	add    rsp,0x30
   1400148fb:	pop    r13
   1400148fd:	ret    
   1400148fe:	int3   
   1400148ff:	int3   
   140014900:	sub    rsp,0x28
   140014904:	cmp    DWORD PTR [rip+0x123bd],0x0        # 0x140026cc8
   14001490b:	jne    0x140014921
   14001490d:	mov    ecx,0xfffffffd
   140014912:	call   0x140014720
   140014917:	mov    DWORD PTR [rip+0x123a7],0x1        # 0x140026cc8
   140014921:	xor    eax,eax
   140014923:	add    rsp,0x28
   140014927:	ret    
   140014928:	lock inc DWORD PTR [rcx]
   14001492b:	mov    rax,QWORD PTR [rcx+0x110]
   140014932:	test   rax,rax
   140014935:	je     0x14001493a
   140014937:	lock inc DWORD PTR [rax]
   14001493a:	mov    rax,QWORD PTR [rcx+0x120]
   140014941:	test   rax,rax
   140014944:	je     0x140014949
   140014946:	lock inc DWORD PTR [rax]
   140014949:	mov    rax,QWORD PTR [rcx+0x118]
   140014950:	test   rax,rax
   140014953:	je     0x140014958
   140014955:	lock inc DWORD PTR [rax]
   140014958:	mov    rax,QWORD PTR [rcx+0x130]
   14001495f:	test   rax,rax
   140014962:	je     0x140014967
   140014964:	lock inc DWORD PTR [rax]
   140014967:	lea    rax,[rcx+0x58]
   14001496b:	mov    r8d,0x6
   140014971:	lea    rdx,[rip+0xf63c]        # 0x140023fb4
   140014978:	cmp    QWORD PTR [rax-0x10],rdx
   14001497c:	je     0x140014989
   14001497e:	mov    rdx,QWORD PTR [rax]
   140014981:	test   rdx,rdx
   140014984:	je     0x140014989
   140014986:	lock inc DWORD PTR [rdx]
   140014989:	cmp    QWORD PTR [rax-0x8],0x0
   14001498e:	je     0x14001499c
   140014990:	mov    rdx,QWORD PTR [rax+0x8]
   140014994:	test   rdx,rdx
   140014997:	je     0x14001499c
   140014999:	lock inc DWORD PTR [rdx]
   14001499c:	add    rax,0x20
   1400149a0:	dec    r8
   1400149a3:	jne    0x140014971
   1400149a5:	mov    rax,QWORD PTR [rcx+0x158]
   1400149ac:	lock inc DWORD PTR [rax+0x160]
   1400149b3:	ret    
   1400149b4:	test   rcx,rcx
   1400149b7:	je     0x140014a54
   1400149bd:	or     r9d,0xffffffff
   1400149c1:	lock add DWORD PTR [rcx],r9d
   1400149c5:	mov    rax,QWORD PTR [rcx+0x110]
   1400149cc:	test   rax,rax
   1400149cf:	je     0x1400149d5
   1400149d1:	lock add DWORD PTR [rax],r9d
   1400149d5:	mov    rax,QWORD PTR [rcx+0x120]
   1400149dc:	test   rax,rax
   1400149df:	je     0x1400149e5
   1400149e1:	lock add DWORD PTR [rax],r9d
   1400149e5:	mov    rax,QWORD PTR [rcx+0x118]
   1400149ec:	test   rax,rax
   1400149ef:	je     0x1400149f5
   1400149f1:	lock add DWORD PTR [rax],r9d
   1400149f5:	mov    rax,QWORD PTR [rcx+0x130]
   1400149fc:	test   rax,rax
   1400149ff:	je     0x140014a05
   140014a01:	lock add DWORD PTR [rax],r9d
   140014a05:	lea    rax,[rcx+0x58]
   140014a09:	mov    r8d,0x6
   140014a0f:	lea    rdx,[rip+0xf59e]        # 0x140023fb4
   140014a16:	cmp    QWORD PTR [rax-0x10],rdx
   140014a1a:	je     0x140014a28
   140014a1c:	mov    rdx,QWORD PTR [rax]
   140014a1f:	test   rdx,rdx
   140014a22:	je     0x140014a28
   140014a24:	lock add DWORD PTR [rdx],r9d
   140014a28:	cmp    QWORD PTR [rax-0x8],0x0
   140014a2d:	je     0x140014a3c
   140014a2f:	mov    rdx,QWORD PTR [rax+0x8]
   140014a33:	test   rdx,rdx
   140014a36:	je     0x140014a3c
   140014a38:	lock add DWORD PTR [rdx],r9d
   140014a3c:	add    rax,0x20
   140014a40:	dec    r8
   140014a43:	jne    0x140014a0f
   140014a45:	mov    rax,QWORD PTR [rcx+0x158]
   140014a4c:	lock add DWORD PTR [rax+0x160],r9d
   140014a54:	mov    rax,rcx
   140014a57:	ret    
   140014a58:	mov    QWORD PTR [rsp+0x8],rbx
   140014a5d:	mov    QWORD PTR [rsp+0x10],rsi
   140014a62:	push   rdi
   140014a63:	sub    rsp,0x20
   140014a67:	mov    rax,QWORD PTR [rcx+0x128]
   140014a6e:	mov    rbx,rcx
   140014a71:	test   rax,rax
   140014a74:	je     0x140014aef
   140014a76:	lea    rcx,[rip+0xfbd3]        # 0x140024650
   140014a7d:	cmp    rax,rcx
   140014a80:	je     0x140014aef
   140014a82:	mov    rax,QWORD PTR [rbx+0x110]
   140014a89:	test   rax,rax
   140014a8c:	je     0x140014aef
   140014a8e:	cmp    DWORD PTR [rax],0x0
   140014a91:	jne    0x140014aef
   140014a93:	mov    rcx,QWORD PTR [rbx+0x120]
   140014a9a:	test   rcx,rcx
   140014a9d:	je     0x140014ab5
   140014a9f:	cmp    DWORD PTR [rcx],0x0
   140014aa2:	jne    0x140014ab5
   140014aa4:	call   0x14000b460
   140014aa9:	mov    rcx,QWORD PTR [rbx+0x128]
   140014ab0:	call   0x14001924c
   140014ab5:	mov    rcx,QWORD PTR [rbx+0x118]
   140014abc:	test   rcx,rcx
   140014abf:	je     0x140014ad7
   140014ac1:	cmp    DWORD PTR [rcx],0x0
   140014ac4:	jne    0x140014ad7
   140014ac6:	call   0x14000b460
   140014acb:	mov    rcx,QWORD PTR [rbx+0x128]
   140014ad2:	call   0x1400191e0
   140014ad7:	mov    rcx,QWORD PTR [rbx+0x110]
   140014ade:	call   0x14000b460
   140014ae3:	mov    rcx,QWORD PTR [rbx+0x128]
   140014aea:	call   0x14000b460
   140014aef:	mov    rax,QWORD PTR [rbx+0x130]
   140014af6:	test   rax,rax
   140014af9:	je     0x140014b42
   140014afb:	cmp    DWORD PTR [rax],0x0
   140014afe:	jne    0x140014b42
   140014b00:	mov    rcx,QWORD PTR [rbx+0x138]
   140014b07:	sub    rcx,0xfe
   140014b0e:	call   0x14000b460
   140014b13:	mov    rcx,QWORD PTR [rbx+0x148]
   140014b1a:	mov    edi,0x80
   140014b1f:	sub    rcx,rdi
   140014b22:	call   0x14000b460
   140014b27:	mov    rcx,QWORD PTR [rbx+0x150]
   140014b2e:	sub    rcx,rdi
   140014b31:	call   0x14000b460
   140014b36:	mov    rcx,QWORD PTR [rbx+0x130]
   140014b3d:	call   0x14000b460
   140014b42:	mov    rcx,QWORD PTR [rbx+0x158]
   140014b49:	lea    rax,[rip+0xf470]        # 0x140023fc0
   140014b50:	cmp    rcx,rax
   140014b53:	je     0x140014b6f
   140014b55:	cmp    DWORD PTR [rcx+0x160],0x0
   140014b5c:	jne    0x140014b6f
   140014b5e:	call   0x140018df0
   140014b63:	mov    rcx,QWORD PTR [rbx+0x158]
   140014b6a:	call   0x14000b460
   140014b6f:	lea    rdi,[rbx+0x58]
   140014b73:	mov    esi,0x6
   140014b78:	lea    rax,[rip+0xf435]        # 0x140023fb4
   140014b7f:	cmp    QWORD PTR [rdi-0x10],rax
   140014b83:	je     0x140014b97
   140014b85:	mov    rcx,QWORD PTR [rdi]
   140014b88:	test   rcx,rcx
   140014b8b:	je     0x140014b97
   140014b8d:	cmp    DWORD PTR [rcx],0x0
   140014b90:	jne    0x140014b97
   140014b92:	call   0x14000b460
   140014b97:	cmp    QWORD PTR [rdi-0x8],0x0
   140014b9c:	je     0x140014bb1
   140014b9e:	mov    rcx,QWORD PTR [rdi+0x8]
   140014ba2:	test   rcx,rcx
   140014ba5:	je     0x140014bb1
   140014ba7:	cmp    DWORD PTR [rcx],0x0
   140014baa:	jne    0x140014bb1
   140014bac:	call   0x14000b460
   140014bb1:	add    rdi,0x20
   140014bb5:	dec    rsi
   140014bb8:	jne    0x140014b78
   140014bba:	mov    rcx,rbx
   140014bbd:	mov    rbx,QWORD PTR [rsp+0x30]
   140014bc2:	mov    rsi,QWORD PTR [rsp+0x38]
   140014bc7:	add    rsp,0x20
   140014bcb:	pop    rdi
   140014bcc:	jmp    0x14000b460
   140014bd1:	int3   
   140014bd2:	int3   
   140014bd3:	int3   
   140014bd4:	rex push rbx
   140014bd6:	sub    rsp,0x20
   140014bda:	mov    rbx,rdx
   140014bdd:	test   rdx,rdx
   140014be0:	je     0x140014c23
   140014be2:	test   rcx,rcx
   140014be5:	je     0x140014c23
   140014be7:	mov    r10,QWORD PTR [rcx]
   140014bea:	cmp    r10,rdx
   140014bed:	je     0x140014c1e
   140014bef:	mov    QWORD PTR [rcx],rdx
   140014bf2:	mov    rcx,rdx
   140014bf5:	call   0x140014928
   140014bfa:	test   r10,r10
   140014bfd:	je     0x140014c1e
   140014bff:	mov    rcx,r10
   140014c02:	call   0x1400149b4
   140014c07:	cmp    DWORD PTR [r10],0x0
   140014c0b:	jne    0x140014c1e
   140014c0d:	lea    rax,[rip+0xf66c]        # 0x140024280
   140014c14:	cmp    r10,rax
   140014c17:	je     0x140014c1e
   140014c19:	call   0x140014a58
   140014c1e:	mov    rax,rbx
   140014c21:	jmp    0x140014c25
   140014c23:	xor    eax,eax
   140014c25:	add    rsp,0x20
   140014c29:	pop    rbx
   140014c2a:	ret    
   140014c2b:	int3   
   140014c2c:	rex push rbx
   140014c2e:	sub    rsp,0x20
   140014c32:	call   0x14000d204
   140014c37:	mov    rbx,rax
   140014c3a:	mov    ecx,DWORD PTR [rax+0xc8]
   140014c40:	test   DWORD PTR [rip+0xf36a],ecx        # 0x140023fb0
   140014c46:	je     0x140014c60
   140014c48:	cmp    QWORD PTR [rax+0xc0],0x0
   140014c50:	je     0x140014c60
   140014c52:	call   0x14000d204
   140014c57:	mov    rbx,QWORD PTR [rax+0xc0]
   140014c5e:	jmp    0x140014c8b
   140014c60:	mov    ecx,0xc
   140014c65:	call   0x14000cb28
   140014c6a:	nop
   140014c6b:	lea    rcx,[rbx+0xc0]
   140014c72:	mov    rdx,QWORD PTR [rip+0xf767]        # 0x1400243e0
   140014c79:	call   0x140014bd4
   140014c7e:	mov    rbx,rax
   140014c81:	mov    ecx,0xc
   140014c86:	call   0x14000ca28
   140014c8b:	test   rbx,rbx
   140014c8e:	jne    0x140014c98
   140014c90:	lea    ecx,[rbx+0x20]
   140014c93:	call   0x140009c04
   140014c98:	mov    rax,rbx
   140014c9b:	add    rsp,0x20
   140014c9f:	pop    rbx
   140014ca0:	ret    
   140014ca1:	int3   
   140014ca2:	int3   
   140014ca3:	int3   
   140014ca4:	mov    QWORD PTR [rsp+0x10],rsi
   140014ca9:	push   rbp
   140014caa:	push   rdi
   140014cab:	push   r12
   140014cad:	mov    rbp,rsp
   140014cb0:	sub    rsp,0x60
   140014cb4:	movsxd rdi,ecx
   140014cb7:	mov    r12d,edx
   140014cba:	lea    rcx,[rbp-0x20]
   140014cbe:	mov    rdx,r8
   140014cc1:	call   0x14000c6f4
   140014cc6:	lea    r11d,[rdi+0x1]
   140014cca:	cmp    r11d,0x100
   140014cd1:	ja     0x140014ce7
   140014cd3:	mov    rax,QWORD PTR [rbp-0x20]
   140014cd7:	mov    rcx,QWORD PTR [rax+0x140]
   140014cde:	movzx  eax,WORD PTR [rcx+rdi*2]
   140014ce2:	jmp    0x140014d67
   140014ce7:	mov    esi,edi
   140014ce9:	lea    rdx,[rbp-0x20]
   140014ced:	sar    esi,0x8
   140014cf0:	movzx  ecx,sil
   140014cf4:	call   0x140015288
   140014cf9:	mov    edx,0x1
   140014cfe:	test   eax,eax
   140014d00:	je     0x140014d14
   140014d02:	mov    BYTE PTR [rbp+0x38],sil
   140014d06:	mov    BYTE PTR [rbp+0x39],dil
   140014d0a:	mov    BYTE PTR [rbp+0x3a],0x0
   140014d0e:	lea    r9d,[rdx+0x1]
   140014d12:	jmp    0x140014d1f
   140014d14:	mov    BYTE PTR [rbp+0x38],dil
   140014d18:	mov    BYTE PTR [rbp+0x39],0x0
   140014d1c:	mov    r9d,edx
   140014d1f:	mov    rcx,QWORD PTR [rbp-0x20]
   140014d23:	mov    DWORD PTR [rsp+0x38],edx
   140014d27:	lea    r8,[rbp+0x38]
   140014d2b:	mov    eax,DWORD PTR [rcx+0x14]
   140014d2e:	mov    DWORD PTR [rsp+0x30],eax
   140014d32:	mov    eax,DWORD PTR [rcx+0x4]
   140014d35:	lea    rcx,[rbp-0x20]
   140014d39:	mov    DWORD PTR [rsp+0x28],eax
   140014d3d:	lea    rax,[rbp+0x20]
   140014d41:	mov    QWORD PTR [rsp+0x20],rax
   140014d46:	call   0x140018d70
   140014d4b:	test   eax,eax
   140014d4d:	jne    0x140014d63
   140014d4f:	cmp    BYTE PTR [rbp-0x8],al
   140014d52:	je     0x140014d5f
   140014d54:	mov    rax,QWORD PTR [rbp-0x10]
   140014d58:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140014d5f:	xor    eax,eax
   140014d61:	jmp    0x140014d7b
   140014d63:	movzx  eax,WORD PTR [rbp+0x20]
   140014d67:	and    eax,r12d
   140014d6a:	cmp    BYTE PTR [rbp-0x8],0x0
   140014d6e:	je     0x140014d7b
   140014d70:	mov    rcx,QWORD PTR [rbp-0x10]
   140014d74:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140014d7b:	mov    rsi,QWORD PTR [rsp+0x88]
   140014d83:	add    rsp,0x60
   140014d87:	pop    r12
   140014d89:	pop    rdi
   140014d8a:	pop    rbp
   140014d8b:	ret    
   140014d8c:	sub    rsp,0x28
   140014d90:	call   0x14000cbd0
   140014d95:	test   rax,rax
   140014d98:	je     0x140014da4
   140014d9a:	mov    ecx,0x16
   140014d9f:	call   0x14000cbe0
   140014da4:	test   BYTE PTR [rip+0xf655],0x2        # 0x140024400
   140014dab:	je     0x140014dc1
   140014dad:	mov    r8d,0x1
   140014db3:	mov    edx,0x40000015
   140014db8:	lea    ecx,[r8+0x2]
   140014dbc:	call   0x14000ce2c
   140014dc1:	mov    ecx,0x3
   140014dc6:	call   0x140009bd8
   140014dcb:	int3   
   140014dcc:	and    DWORD PTR [rip+0x10c95],0x0        # 0x140025a68
   140014dd3:	ret    
   140014dd4:	sub    rsp,0x28
   140014dd8:	test   rcx,rcx
   140014ddb:	jne    0x140014df6
   140014ddd:	call   0x14000bdc0
   140014de2:	mov    DWORD PTR [rax],0x16
   140014de8:	call   0x14000d01c
   140014ded:	or     rax,0xffffffffffffffff
   140014df1:	add    rsp,0x28
   140014df5:	ret    
   140014df6:	mov    r8,rcx
   140014df9:	mov    rcx,QWORD PTR [rip+0x105c8]        # 0x1400253c8
   140014e00:	xor    edx,edx
   140014e02:	add    rsp,0x28
   140014e06:	rex.W jmp QWORD PTR [rip+0x54d3]        # 0x14001a2e0
   140014e0d:	int3   
   140014e0e:	int3   
   140014e0f:	int3   
   140014e10:	mov    ecx,0x2
   140014e15:	jmp    0x140009c04
   140014e1a:	int3   
   140014e1b:	int3   
   140014e1c:	rex push rbx
   140014e1e:	push   rbp
   140014e1f:	push   rsi
   140014e20:	push   rdi
   140014e21:	push   r12
   140014e23:	push   r13
   140014e25:	push   r14
   140014e27:	sub    rsp,0x50
   140014e2b:	mov    rax,QWORD PTR [rip+0xe28e]        # 0x1400230c0
   140014e32:	xor    rax,rsp
   140014e35:	mov    QWORD PTR [rsp+0x48],rax
   140014e3a:	mov    ebp,r8d
   140014e3d:	mov    r14,rdx
   140014e40:	mov    r13,rcx
   140014e43:	call   0x14000d078
   140014e48:	xor    ebx,ebx
   140014e4a:	cmp    QWORD PTR [rip+0x10b1f],rbx        # 0x140025970
   140014e51:	mov    rdi,rax
   140014e54:	jne    0x140014f2f
   140014e5a:	lea    rcx,[rip+0xb15f]        # 0x14001ffc0
   140014e61:	call   QWORD PTR [rip+0x5309]        # 0x14001a170
   140014e67:	mov    rsi,rax
   140014e6a:	test   rax,rax
   140014e6d:	je     0x140015006
   140014e73:	lea    rdx,[rip+0xb136]        # 0x14001ffb0
   140014e7a:	mov    rcx,rax
   140014e7d:	call   QWORD PTR [rip+0x5215]        # 0x14001a098
   140014e83:	test   rax,rax
   140014e86:	je     0x140015006
   140014e8c:	mov    rcx,rax
   140014e8f:	call   QWORD PTR [rip+0x52d3]        # 0x14001a168
   140014e95:	lea    rdx,[rip+0xb104]        # 0x14001ffa0
   140014e9c:	mov    rcx,rsi
   140014e9f:	mov    QWORD PTR [rip+0x10aca],rax        # 0x140025970
   140014ea6:	call   QWORD PTR [rip+0x51ec]        # 0x14001a098
   140014eac:	mov    rcx,rax
   140014eaf:	call   QWORD PTR [rip+0x52b3]        # 0x14001a168
   140014eb5:	lea    rdx,[rip+0xb0cc]        # 0x14001ff88
   140014ebc:	mov    rcx,rsi
   140014ebf:	mov    QWORD PTR [rip+0x10ab2],rax        # 0x140025978
   140014ec6:	call   QWORD PTR [rip+0x51cc]        # 0x14001a098
   140014ecc:	mov    rcx,rax
   140014ecf:	call   QWORD PTR [rip+0x5293]        # 0x14001a168
   140014ed5:	lea    rdx,[rip+0xb08c]        # 0x14001ff68
   140014edc:	mov    rcx,rsi
   140014edf:	mov    QWORD PTR [rip+0x10a9a],rax        # 0x140025980
   140014ee6:	call   QWORD PTR [rip+0x51ac]        # 0x14001a098
   140014eec:	mov    rcx,rax
   140014eef:	call   QWORD PTR [rip+0x5273]        # 0x14001a168
   140014ef5:	mov    r11,rax
   140014ef8:	mov    QWORD PTR [rip+0x10a91],rax        # 0x140025990
   140014eff:	test   rax,rax
   140014f02:	je     0x140014f26
   140014f04:	lea    rdx,[rip+0xb045]        # 0x14001ff50
   140014f0b:	mov    rcx,rsi
   140014f0e:	call   QWORD PTR [rip+0x5184]        # 0x14001a098
   140014f14:	mov    rcx,rax
   140014f17:	call   QWORD PTR [rip+0x524b]        # 0x14001a168
   140014f1d:	mov    QWORD PTR [rip+0x10a64],rax        # 0x140025988
   140014f24:	jmp    0x140014f36
   140014f26:	mov    rax,QWORD PTR [rip+0x10a5b]        # 0x140025988
   140014f2d:	jmp    0x140014f3d
   140014f2f:	mov    rax,QWORD PTR [rip+0x10a52]        # 0x140025988
   140014f36:	mov    r11,QWORD PTR [rip+0x10a53]        # 0x140025990
   140014f3d:	cmp    rax,rdi
   140014f40:	je     0x140014fa4
   140014f42:	cmp    r11,rdi
   140014f45:	je     0x140014fa4
   140014f47:	mov    rcx,rax
   140014f4a:	call   QWORD PTR [rip+0x5190]        # 0x14001a0e0
   140014f50:	mov    rcx,QWORD PTR [rip+0x10a39]        # 0x140025990
   140014f57:	mov    rsi,rax
   140014f5a:	call   QWORD PTR [rip+0x5180]        # 0x14001a0e0
   140014f60:	mov    r12,rax
   140014f63:	test   rsi,rsi
   140014f66:	je     0x140014fa4
   140014f68:	test   rax,rax
   140014f6b:	je     0x140014fa4
   140014f6d:	call   rsi
   140014f6f:	test   rax,rax
   140014f72:	je     0x140014f9e
   140014f74:	lea    rcx,[rsp+0x30]
   140014f79:	mov    r9d,0xc
   140014f7f:	lea    r8,[rsp+0x38]
   140014f84:	mov    QWORD PTR [rsp+0x20],rcx
   140014f89:	lea    edx,[r9-0xb]
   140014f8d:	mov    rcx,rax
   140014f90:	call   r12
   140014f93:	test   eax,eax
   140014f95:	je     0x140014f9e
   140014f97:	test   BYTE PTR [rsp+0x40],0x1
   140014f9c:	jne    0x140014fa4
   140014f9e:	bts    ebp,0x15
   140014fa2:	jmp    0x140014fe4
   140014fa4:	mov    rcx,QWORD PTR [rip+0x109cd]        # 0x140025978
   140014fab:	cmp    rcx,rdi
   140014fae:	je     0x140014fe4
   140014fb0:	call   QWORD PTR [rip+0x512a]        # 0x14001a0e0
   140014fb6:	test   rax,rax
   140014fb9:	je     0x140014fe4
   140014fbb:	call   rax
   140014fbd:	mov    rbx,rax
   140014fc0:	test   rax,rax
   140014fc3:	je     0x140014fe4
   140014fc5:	mov    rcx,QWORD PTR [rip+0x109b4]        # 0x140025980
   140014fcc:	cmp    rcx,rdi
   140014fcf:	je     0x140014fe4
   140014fd1:	call   QWORD PTR [rip+0x5109]        # 0x14001a0e0
   140014fd7:	test   rax,rax
   140014fda:	je     0x140014fe4
   140014fdc:	mov    rcx,rbx
   140014fdf:	call   rax
   140014fe1:	mov    rbx,rax
   140014fe4:	mov    rcx,QWORD PTR [rip+0x10985]        # 0x140025970
   140014feb:	call   QWORD PTR [rip+0x50ef]        # 0x14001a0e0
   140014ff1:	test   rax,rax
   140014ff4:	je     0x140015006
   140014ff6:	mov    r9d,ebp
   140014ff9:	mov    r8,r14
   140014ffc:	mov    rdx,r13
   140014fff:	mov    rcx,rbx
   140015002:	call   rax
   140015004:	jmp    0x140015008
   140015006:	xor    eax,eax
   140015008:	mov    rcx,QWORD PTR [rsp+0x48]
   14001500d:	xor    rcx,rsp
   140015010:	call   0x14000a820
   140015015:	add    rsp,0x50
   140015019:	pop    r14
   14001501b:	pop    r13
   14001501d:	pop    r12
   14001501f:	pop    rdi
   140015020:	pop    rsi
   140015021:	pop    rbp
   140015022:	pop    rbx
   140015023:	ret    
   140015024:	rex push rbx
   140015026:	sub    rsp,0x20
   14001502a:	xor    r10d,r10d
   14001502d:	mov    r9,rcx
   140015030:	test   rcx,rcx
   140015033:	je     0x140015043
   140015035:	test   rdx,rdx
   140015038:	je     0x140015043
   14001503a:	test   r8,r8
   14001503d:	jne    0x14001505c
   14001503f:	mov    WORD PTR [rcx],r10w
   140015043:	call   0x14000bdc0
   140015048:	mov    ebx,0x16
   14001504d:	mov    DWORD PTR [rax],ebx
   14001504f:	call   0x14000d01c
   140015054:	mov    eax,ebx
   140015056:	add    rsp,0x20
   14001505a:	pop    rbx
   14001505b:	ret    
   14001505c:	cmp    WORD PTR [rcx],r10w
   140015060:	je     0x14001506b
   140015062:	add    rcx,0x2
   140015066:	dec    rdx
   140015069:	jne    0x14001505c
   14001506b:	test   rdx,rdx
   14001506e:	jne    0x140015076
   140015070:	mov    WORD PTR [r9],r10w
   140015074:	jmp    0x140015043
   140015076:	sub    rcx,r8
   140015079:	movzx  eax,WORD PTR [r8]
   14001507d:	mov    WORD PTR [rcx+r8*1],ax
   140015082:	add    r8,0x2
   140015086:	test   ax,ax
   140015089:	je     0x140015090
   14001508b:	dec    rdx
   14001508e:	jne    0x140015079
   140015090:	test   rdx,rdx
   140015093:	jne    0x1400150a5
   140015095:	mov    WORD PTR [r9],r10w
   140015099:	call   0x14000bdc0
   14001509e:	mov    ebx,0x22
   1400150a3:	jmp    0x14001504d
   1400150a5:	xor    eax,eax
   1400150a7:	jmp    0x140015056
   1400150a9:	int3   
   1400150aa:	int3   
   1400150ab:	int3   
   1400150ac:	rex push rbx
   1400150ae:	sub    rsp,0x20
   1400150b2:	xor    ebx,ebx
   1400150b4:	mov    r10,r8
   1400150b7:	test   r9,r9
   1400150ba:	jne    0x1400150ca
   1400150bc:	test   rcx,rcx
   1400150bf:	jne    0x1400150cf
   1400150c1:	test   rdx,rdx
   1400150c4:	jne    0x1400150e6
   1400150c6:	xor    eax,eax
   1400150c8:	jmp    0x1400150f9
   1400150ca:	test   rcx,rcx
   1400150cd:	je     0x1400150e6
   1400150cf:	test   rdx,rdx
   1400150d2:	je     0x1400150e6
   1400150d4:	test   r9,r9
   1400150d7:	jne    0x1400150de
   1400150d9:	mov    WORD PTR [rcx],bx
   1400150dc:	jmp    0x1400150c6
   1400150de:	test   r8,r8
   1400150e1:	jne    0x1400150ff
   1400150e3:	mov    WORD PTR [rcx],bx
   1400150e6:	call   0x14000bdc0
   1400150eb:	mov    ebx,0x16
   1400150f0:	mov    DWORD PTR [rax],ebx
   1400150f2:	call   0x14000d01c
   1400150f7:	mov    eax,ebx
   1400150f9:	add    rsp,0x20
   1400150fd:	pop    rbx
   1400150fe:	ret    
   1400150ff:	mov    r11,rcx
   140015102:	mov    r8,rdx
   140015105:	cmp    r9,0xffffffffffffffff
   140015109:	jne    0x140015127
   14001510b:	sub    r11,r10
   14001510e:	movzx  eax,WORD PTR [r10]
   140015112:	mov    WORD PTR [r11+r10*1],ax
   140015117:	add    r10,0x2
   14001511b:	test   ax,ax
   14001511e:	je     0x14001514f
   140015120:	dec    r8
   140015123:	jne    0x14001510e
   140015125:	jmp    0x14001514f
   140015127:	sub    r10,rcx
   14001512a:	movzx  eax,WORD PTR [r10+r11*1]
   14001512f:	mov    WORD PTR [r11],ax
   140015133:	add    r11,0x2
   140015137:	test   ax,ax
   14001513a:	je     0x140015146
   14001513c:	dec    r8
   14001513f:	je     0x140015146
   140015141:	dec    r9
   140015144:	jne    0x14001512a
   140015146:	test   r9,r9
   140015149:	jne    0x14001514f
   14001514b:	mov    WORD PTR [r11],bx
   14001514f:	test   r8,r8
   140015152:	jne    0x1400150c6
   140015158:	cmp    r9,0xffffffffffffffff
   14001515c:	jne    0x140015169
   14001515e:	mov    WORD PTR [rcx+rdx*2-0x2],bx
   140015163:	lea    eax,[r8+0x50]
   140015167:	jmp    0x1400150f9
   140015169:	mov    WORD PTR [rcx],bx
   14001516c:	call   0x14000bdc0
   140015171:	mov    ebx,0x22
   140015176:	jmp    0x1400150f0
   14001517b:	int3   
   14001517c:	rex push rbx
   14001517e:	sub    rsp,0x20
   140015182:	xor    r10d,r10d
   140015185:	mov    r9,rcx
   140015188:	test   rcx,rcx
   14001518b:	je     0x14001519b
   14001518d:	test   rdx,rdx
   140015190:	je     0x14001519b
   140015192:	test   r8,r8
   140015195:	jne    0x1400151b4
   140015197:	mov    WORD PTR [rcx],r10w
   14001519b:	call   0x14000bdc0
   1400151a0:	mov    ebx,0x16
   1400151a5:	mov    DWORD PTR [rax],ebx
   1400151a7:	call   0x14000d01c
   1400151ac:	mov    eax,ebx
   1400151ae:	add    rsp,0x20
   1400151b2:	pop    rbx
   1400151b3:	ret    
   1400151b4:	sub    rcx,r8
   1400151b7:	movzx  eax,WORD PTR [r8]
   1400151bb:	mov    WORD PTR [rcx+r8*1],ax
   1400151c0:	add    r8,0x2
   1400151c4:	test   ax,ax
   1400151c7:	je     0x1400151ce
   1400151c9:	dec    rdx
   1400151cc:	jne    0x1400151b7
   1400151ce:	test   rdx,rdx
   1400151d1:	jne    0x1400151e3
   1400151d3:	mov    WORD PTR [r9],r10w
   1400151d7:	call   0x14000bdc0
   1400151dc:	mov    ebx,0x22
   1400151e1:	jmp    0x1400151a5
   1400151e3:	xor    eax,eax
   1400151e5:	jmp    0x1400151ae
   1400151e7:	int3   
   1400151e8:	sub    rsp,0x28
   1400151ec:	test   ecx,ecx
   1400151ee:	js     0x140015210
   1400151f0:	cmp    ecx,0x2
   1400151f3:	jle    0x140015202
   1400151f5:	cmp    ecx,0x3
   1400151f8:	jne    0x140015210
   1400151fa:	mov    eax,DWORD PTR [rip+0xf7f0]        # 0x1400249f0
   140015200:	jmp    0x140015223
   140015202:	mov    eax,DWORD PTR [rip+0xf7e8]        # 0x1400249f0
   140015208:	mov    DWORD PTR [rip+0xf7e2],ecx        # 0x1400249f0
   14001520e:	jmp    0x140015223
   140015210:	call   0x14000bdc0
   140015215:	mov    DWORD PTR [rax],0x16
   14001521b:	call   0x14000d01c
   140015220:	or     eax,0xffffffff
   140015223:	add    rsp,0x28
   140015227:	ret    
   140015228:	sub    rsp,0x28
   14001522c:	cmp    ecx,0xfffffffe
   14001522f:	jne    0x14001523e
   140015231:	call   0x14000bdc0
   140015236:	mov    DWORD PTR [rax],0x9
   14001523c:	jmp    0x140015280
   14001523e:	test   ecx,ecx
   140015240:	js     0x140015270
   140015242:	cmp    ecx,DWORD PTR [rip+0x10824]        # 0x140025a6c
   140015248:	jae    0x140015270
   14001524a:	movsxd rcx,ecx
   14001524d:	lea    rdx,[rip+0x1082c]        # 0x140025a80
   140015254:	mov    rax,rcx
   140015257:	and    ecx,0x1f
   14001525a:	sar    rax,0x5
   14001525e:	imul   rcx,rcx,0x58
   140015262:	mov    rax,QWORD PTR [rdx+rax*8]
   140015266:	movsx  eax,BYTE PTR [rax+rcx*1+0x8]
   14001526b:	and    eax,0x40
   14001526e:	jmp    0x140015282
   140015270:	call   0x14000bdc0
   140015275:	mov    DWORD PTR [rax],0x9
   14001527b:	call   0x14000d01c
   140015280:	xor    eax,eax
   140015282:	add    rsp,0x28
   140015286:	ret    
   140015287:	int3   
   140015288:	rex push rbx
   14001528a:	sub    rsp,0x40
   14001528e:	mov    ebx,ecx
   140015290:	lea    rcx,[rsp+0x20]
   140015295:	call   0x14000c6f4
   14001529a:	mov    rax,QWORD PTR [rsp+0x20]
   14001529f:	movzx  r11d,bl
   1400152a3:	mov    rcx,QWORD PTR [rax+0x140]
   1400152aa:	movzx  eax,WORD PTR [rcx+r11*2]
   1400152af:	and    eax,0x8000
   1400152b4:	cmp    BYTE PTR [rsp+0x38],0x0
   1400152b9:	je     0x1400152c7
   1400152bb:	mov    rcx,QWORD PTR [rsp+0x30]
   1400152c0:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400152c7:	add    rsp,0x40
   1400152cb:	pop    rbx
   1400152cc:	ret    
   1400152cd:	int3   
   1400152ce:	int3   
   1400152cf:	int3   
   1400152d0:	rex push rbx
   1400152d2:	sub    rsp,0x40
   1400152d6:	mov    ebx,ecx
   1400152d8:	lea    rcx,[rsp+0x20]
   1400152dd:	xor    edx,edx
   1400152df:	call   0x14000c6f4
   1400152e4:	mov    rax,QWORD PTR [rsp+0x20]
   1400152e9:	movzx  r11d,bl
   1400152ed:	mov    rcx,QWORD PTR [rax+0x140]
   1400152f4:	movzx  eax,WORD PTR [rcx+r11*2]
   1400152f9:	and    eax,0x8000
   1400152fe:	cmp    BYTE PTR [rsp+0x38],0x0
   140015303:	je     0x140015311
   140015305:	mov    rcx,QWORD PTR [rsp+0x30]
   14001530a:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140015311:	add    rsp,0x40
   140015315:	pop    rbx
   140015316:	ret    
   140015317:	int3   
   140015318:	mov    QWORD PTR [rsp+0x8],rbx
   14001531d:	mov    WORD PTR [rsp+0x20],r9w
   140015323:	push   rbp
   140015324:	push   rsi
   140015325:	push   rdi
   140015326:	mov    rbp,rsp
   140015329:	sub    rsp,0x60
   14001532d:	mov    rdi,r8
   140015330:	mov    rsi,rdx
   140015333:	mov    rbx,rcx
   140015336:	test   rdx,rdx
   140015339:	jne    0x14001534e
   14001533b:	test   r8,r8
   14001533e:	je     0x14001534e
   140015340:	test   rcx,rcx
   140015343:	je     0x140015347
   140015345:	and    DWORD PTR [rcx],edx
   140015347:	xor    eax,eax
   140015349:	jmp    0x1400153d8
   14001534e:	test   rcx,rcx
   140015351:	je     0x140015356
   140015353:	or     DWORD PTR [rcx],0xffffffff
   140015356:	cmp    r8,0x7fffffff
   14001535d:	jbe    0x140015374
   14001535f:	call   0x14000bdc0
   140015364:	mov    ebx,0x16
   140015369:	mov    DWORD PTR [rax],ebx
   14001536b:	call   0x14000d01c
   140015370:	mov    eax,ebx
   140015372:	jmp    0x1400153d8
   140015374:	mov    rdx,QWORD PTR [rbp+0x40]
   140015378:	lea    rcx,[rbp-0x20]
   14001537c:	call   0x14000c6f4
   140015381:	mov    r11,QWORD PTR [rbp-0x20]
   140015385:	cmp    DWORD PTR [r11+0x14],0x0
   14001538a:	jne    0x140015442
   140015390:	movzx  eax,WORD PTR [rbp+0x38]
   140015394:	mov    ecx,0xff
   140015399:	cmp    ax,cx
   14001539c:	jbe    0x1400153e8
   14001539e:	test   rsi,rsi
   1400153a1:	je     0x1400153b5
   1400153a3:	test   rdi,rdi
   1400153a6:	je     0x1400153b5
   1400153a8:	mov    r8,rdi
   1400153ab:	xor    edx,edx
   1400153ad:	mov    rcx,rsi
   1400153b0:	call   0x14000a530
   1400153b5:	call   0x14000bdc0
   1400153ba:	mov    DWORD PTR [rax],0x2a
   1400153c0:	call   0x14000bdc0
   1400153c5:	cmp    BYTE PTR [rbp-0x8],0x0
   1400153c9:	mov    eax,DWORD PTR [rax]
   1400153cb:	je     0x1400153d8
   1400153cd:	mov    rcx,QWORD PTR [rbp-0x10]
   1400153d1:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400153d8:	mov    rbx,QWORD PTR [rsp+0x80]
   1400153e0:	add    rsp,0x60
   1400153e4:	pop    rdi
   1400153e5:	pop    rsi
   1400153e6:	pop    rbp
   1400153e7:	ret    
   1400153e8:	test   rsi,rsi
   1400153eb:	je     0x14001541d
   1400153ed:	test   rdi,rdi
   1400153f0:	jne    0x14001541b
   1400153f2:	call   0x14000bdc0
   1400153f7:	lea    ebx,[rdi+0x22]
   1400153fa:	mov    DWORD PTR [rax],ebx
   1400153fc:	call   0x14000d01c
   140015401:	cmp    BYTE PTR [rbp-0x8],dil
   140015405:	je     0x140015370
   14001540b:	mov    rcx,QWORD PTR [rbp-0x10]
   14001540f:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140015416:	jmp    0x140015370
   14001541b:	mov    BYTE PTR [rsi],al
   14001541d:	test   rbx,rbx
   140015420:	je     0x140015428
   140015422:	mov    DWORD PTR [rbx],0x1
   140015428:	cmp    BYTE PTR [rbp-0x8],0x0
   14001542c:	je     0x140015347
   140015432:	mov    rax,QWORD PTR [rbp-0x10]
   140015436:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001543d:	jmp    0x140015347
   140015442:	and    DWORD PTR [rbp+0x28],0x0
   140015446:	mov    ecx,DWORD PTR [r11+0x4]
   14001544a:	lea    rax,[rbp+0x28]
   14001544e:	mov    QWORD PTR [rsp+0x38],rax
   140015453:	and    QWORD PTR [rsp+0x30],0x0
   140015459:	lea    r8,[rbp+0x38]
   14001545d:	mov    r9d,0x1
   140015463:	xor    edx,edx
   140015465:	mov    DWORD PTR [rsp+0x28],edi
   140015469:	mov    QWORD PTR [rsp+0x20],rsi
   14001546e:	call   QWORD PTR [rip+0x4d8c]        # 0x14001a200
   140015474:	test   eax,eax
   140015476:	je     0x14001548b
   140015478:	cmp    DWORD PTR [rbp+0x28],0x0
   14001547c:	jne    0x1400153b5
   140015482:	test   rbx,rbx
   140015485:	je     0x140015428
   140015487:	mov    DWORD PTR [rbx],eax
   140015489:	jmp    0x140015428
   14001548b:	call   QWORD PTR [rip+0x4bdf]        # 0x14001a070
   140015491:	cmp    eax,0x7a
   140015494:	jne    0x1400153b5
   14001549a:	test   rsi,rsi
   14001549d:	je     0x1400154b1
   14001549f:	test   rdi,rdi
   1400154a2:	je     0x1400154b1
   1400154a4:	mov    r8,rdi
   1400154a7:	xor    edx,edx
   1400154a9:	mov    rcx,rsi
   1400154ac:	call   0x14000a530
   1400154b1:	call   0x14000bdc0
   1400154b6:	mov    ebx,0x22
   1400154bb:	mov    DWORD PTR [rax],ebx
   1400154bd:	call   0x14000d01c
   1400154c2:	cmp    BYTE PTR [rbp-0x8],0x0
   1400154c6:	je     0x140015370
   1400154cc:	mov    rax,QWORD PTR [rbp-0x10]
   1400154d0:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400154d7:	jmp    0x140015370
   1400154dc:	sub    rsp,0x38
   1400154e0:	and    QWORD PTR [rsp+0x20],0x0
   1400154e6:	call   0x140015318
   1400154eb:	add    rsp,0x38
   1400154ef:	ret    
   1400154f0:	rex push rbp
   1400154f2:	push   rbx
   1400154f3:	push   rsi
   1400154f4:	push   rdi
   1400154f5:	push   r12
   1400154f7:	push   r13
   1400154f9:	push   r14
   1400154fb:	push   r15
   1400154fd:	sub    rsp,0x68
   140015501:	lea    rbp,[rsp+0x30]
   140015506:	mov    rax,QWORD PTR [rip+0xdbb3]        # 0x1400230c0
   14001550d:	xor    rax,rbp
   140015510:	mov    QWORD PTR [rbp+0x28],rax
   140015514:	mov    edi,DWORD PTR [rbp+0xa0]
   14001551a:	mov    r12,QWORD PTR [rbp+0xa8]
   140015521:	xor    ebx,ebx
   140015523:	mov    DWORD PTR [rbp+0x4],r8d
   140015527:	mov    r13,r9
   14001552a:	mov    DWORD PTR [rbp+0x0],edx
   14001552d:	mov    r8,rcx
   140015530:	mov    QWORD PTR [rbp+0x8],r12
   140015534:	mov    r15d,0x1
   14001553a:	test   edi,edi
   14001553c:	jle    0x140015581
   14001553e:	mov    edx,edi
   140015540:	mov    rax,r9
   140015543:	sub    edx,r15d
   140015546:	or     ecx,0xffffffff
   140015549:	cmp    BYTE PTR [rax],bl
   14001554b:	je     0x140015556
   14001554d:	add    rax,r15
   140015550:	test   edx,edx
   140015552:	jne    0x140015543
   140015554:	mov    edx,ecx
   140015556:	mov    eax,ecx
   140015558:	sub    eax,edx
   14001555a:	add    edi,eax
   14001555c:	mov    esi,DWORD PTR [rbp+0xb0]
   140015562:	test   esi,esi
   140015564:	jle    0x14001558f
   140015566:	mov    eax,esi
   140015568:	mov    rdx,r12
   14001556b:	sub    eax,r15d
   14001556e:	cmp    BYTE PTR [rdx],bl
   140015570:	je     0x14001557b
   140015572:	add    rdx,r15
   140015575:	test   eax,eax
   140015577:	jne    0x14001556b
   140015579:	mov    eax,ecx
   14001557b:	sub    ecx,eax
   14001557d:	add    esi,ecx
   14001557f:	jmp    0x140015593
   140015581:	or     ecx,0xffffffff
   140015584:	cmp    edi,ecx
   140015586:	jge    0x14001555c
   140015588:	xor    eax,eax
   14001558a:	jmp    0x140015817
   14001558f:	cmp    esi,ecx
   140015591:	jl     0x140015588
   140015593:	mov    r14d,DWORD PTR [rbp+0xb8]
   14001559a:	test   r14d,r14d
   14001559d:	jne    0x1400155a6
   14001559f:	mov    rax,QWORD PTR [r8]
   1400155a2:	mov    r14d,DWORD PTR [rax+0x4]
   1400155a6:	test   edi,edi
   1400155a8:	je     0x1400155b2
   1400155aa:	test   esi,esi
   1400155ac:	jne    0x14001564b
   1400155b2:	cmp    edi,esi
   1400155b4:	jne    0x1400155c0
   1400155b6:	mov    eax,0x2
   1400155bb:	jmp    0x140015817
   1400155c0:	cmp    esi,r15d
   1400155c3:	jle    0x1400155cd
   1400155c5:	mov    eax,r15d
   1400155c8:	jmp    0x140015817
   1400155cd:	cmp    edi,r15d
   1400155d0:	jle    0x1400155dc
   1400155d2:	mov    eax,0x3
   1400155d7:	jmp    0x140015817
   1400155dc:	lea    rdx,[rbp+0x10]
   1400155e0:	mov    ecx,r14d
   1400155e3:	call   QWORD PTR [rip+0x4cd7]        # 0x14001a2c0
   1400155e9:	test   eax,eax
   1400155eb:	je     0x140015588
   1400155ed:	test   edi,edi
   1400155ef:	jle    0x14001561a
   1400155f1:	cmp    DWORD PTR [rbp+0x10],0x2
   1400155f5:	jb     0x1400155d2
   1400155f7:	cmp    BYTE PTR [rbp+0x16],bl
   1400155fa:	lea    rax,[rbp+0x16]
   1400155fe:	je     0x1400155d2
   140015600:	cmp    BYTE PTR [rax+0x1],bl
   140015603:	je     0x1400155d2
   140015605:	mov    cl,BYTE PTR [r13+0x0]
   140015609:	cmp    cl,BYTE PTR [rax]
   14001560b:	jb     0x140015612
   14001560d:	cmp    cl,BYTE PTR [rax+0x1]
   140015610:	jbe    0x1400155b6
   140015612:	add    rax,0x2
   140015616:	cmp    BYTE PTR [rax],bl
   140015618:	jmp    0x1400155fe
   14001561a:	test   esi,esi
   14001561c:	jle    0x14001564b
   14001561e:	cmp    DWORD PTR [rbp+0x10],0x2
   140015622:	jb     0x1400155c5
   140015624:	cmp    BYTE PTR [rbp+0x16],bl
   140015627:	lea    rax,[rbp+0x16]
   14001562b:	je     0x1400155c5
   14001562d:	cmp    BYTE PTR [rax+0x1],bl
   140015630:	je     0x1400155c5
   140015632:	mov    cl,BYTE PTR [r12]
   140015636:	cmp    cl,BYTE PTR [rax]
   140015638:	jb     0x140015643
   14001563a:	cmp    cl,BYTE PTR [rax+0x1]
   14001563d:	jbe    0x1400155b6
   140015643:	add    rax,0x2
   140015647:	cmp    BYTE PTR [rax],bl
   140015649:	jmp    0x14001562b
   14001564b:	mov    r9d,edi
   14001564e:	mov    r8,r13
   140015651:	mov    edx,0x9
   140015656:	mov    ecx,r14d
   140015659:	mov    DWORD PTR [rsp+0x28],ebx
   14001565d:	mov    QWORD PTR [rsp+0x20],rbx
   140015662:	call   QWORD PTR [rip+0x4ac8]        # 0x14001a130
   140015668:	movsxd r15,eax
   14001566b:	test   eax,eax
   14001566d:	je     0x140015588
   140015673:	movabs r8,0xffffffffffffff0
   14001567d:	jle    0x1400156e5
   14001567f:	xor    edx,edx
   140015681:	lea    rax,[rdx-0x20]
   140015685:	div    r15
   140015688:	cmp    rax,0x2
   14001568c:	jb     0x1400156e5
   14001568e:	lea    rcx,[r15+r15*1+0x10]
   140015693:	cmp    rcx,0x400
   14001569a:	ja     0x1400156cc
   14001569c:	lea    rax,[rcx+0xf]
   1400156a0:	cmp    rax,rcx
   1400156a3:	ja     0x1400156a8
   1400156a5:	mov    rax,r8
   1400156a8:	and    rax,0xfffffffffffffff0
   1400156ac:	call   0x140016e80
   1400156b1:	sub    rsp,rax
   1400156b4:	lea    r12,[rsp+0x30]
   1400156b9:	test   r12,r12
   1400156bc:	je     0x140015588
   1400156c2:	mov    DWORD PTR [r12],0xcccc
   1400156ca:	jmp    0x1400156df
   1400156cc:	call   0x14000b2d4
   1400156d1:	mov    r12,rax
   1400156d4:	test   rax,rax
   1400156d7:	je     0x1400156e8
   1400156d9:	mov    DWORD PTR [rax],0xdddd
   1400156df:	add    r12,0x10
   1400156e3:	jmp    0x1400156e8
   1400156e5:	mov    r12,rbx
   1400156e8:	test   r12,r12
   1400156eb:	je     0x140015588
   1400156f1:	mov    r9d,edi
   1400156f4:	mov    r8,r13
   1400156f7:	mov    edx,0x1
   1400156fc:	mov    ecx,r14d
   1400156ff:	mov    DWORD PTR [rsp+0x28],r15d
   140015704:	mov    QWORD PTR [rsp+0x20],r12
   140015709:	call   QWORD PTR [rip+0x4a21]        # 0x14001a130
   14001570f:	test   eax,eax
   140015711:	je     0x140015803
   140015717:	mov    r8,QWORD PTR [rbp+0x8]
   14001571b:	mov    r9d,esi
   14001571e:	mov    edx,0x9
   140015723:	mov    ecx,r14d
   140015726:	mov    DWORD PTR [rsp+0x28],ebx
   14001572a:	mov    QWORD PTR [rsp+0x20],rbx
   14001572f:	call   QWORD PTR [rip+0x49fb]        # 0x14001a130
   140015735:	movsxd r13,eax
   140015738:	test   eax,eax
   14001573a:	je     0x140015803
   140015740:	jle    0x1400157a9
   140015742:	xor    edx,edx
   140015744:	lea    rax,[rdx-0x20]
   140015748:	div    r13
   14001574b:	cmp    rax,0x2
   14001574f:	jb     0x1400157a9
   140015751:	lea    rcx,[r13+r13*1+0x10]
   140015756:	cmp    rcx,0x400
   14001575d:	ja     0x140015790
   14001575f:	lea    rax,[rcx+0xf]
   140015763:	cmp    rax,rcx
   140015766:	ja     0x140015772
   140015768:	movabs rax,0xffffffffffffff0
   140015772:	and    rax,0xfffffffffffffff0
   140015776:	call   0x140016e80
   14001577b:	sub    rsp,rax
   14001577e:	lea    rdi,[rsp+0x30]
   140015783:	test   rdi,rdi
   140015786:	je     0x140015803
   140015788:	mov    DWORD PTR [rdi],0xcccc
   14001578e:	jmp    0x1400157a3
   140015790:	call   0x14000b2d4
   140015795:	mov    rdi,rax
   140015798:	test   rax,rax
   14001579b:	je     0x1400157ac
   14001579d:	mov    DWORD PTR [rax],0xdddd
   1400157a3:	add    rdi,0x10
   1400157a7:	jmp    0x1400157ac
   1400157a9:	mov    rdi,rbx
   1400157ac:	test   rdi,rdi
   1400157af:	je     0x140015803
   1400157b1:	mov    r8,QWORD PTR [rbp+0x8]
   1400157b5:	mov    r9d,esi
   1400157b8:	mov    edx,0x1
   1400157bd:	mov    ecx,r14d
   1400157c0:	mov    DWORD PTR [rsp+0x28],r13d
   1400157c5:	mov    QWORD PTR [rsp+0x20],rdi
   1400157ca:	call   QWORD PTR [rip+0x4960]        # 0x14001a130
   1400157d0:	test   eax,eax
   1400157d2:	je     0x1400157f2
   1400157d4:	mov    edx,DWORD PTR [rbp+0x4]
   1400157d7:	mov    ecx,DWORD PTR [rbp+0x0]
   1400157da:	mov    r9d,r15d
   1400157dd:	mov    r8,r12
   1400157e0:	mov    DWORD PTR [rsp+0x28],r13d
   1400157e5:	mov    QWORD PTR [rsp+0x20],rdi
   1400157ea:	call   QWORD PTR [rip+0x4af8]        # 0x14001a2e8
   1400157f0:	mov    ebx,eax
   1400157f2:	lea    rcx,[rdi-0x10]
   1400157f6:	cmp    DWORD PTR [rcx],0xdddd
   1400157fc:	jne    0x140015803
   1400157fe:	call   0x14000b460
   140015803:	lea    rcx,[r12-0x10]
   140015808:	cmp    DWORD PTR [rcx],0xdddd
   14001580e:	jne    0x140015815
   140015810:	call   0x14000b460
   140015815:	mov    eax,ebx
   140015817:	mov    rcx,QWORD PTR [rbp+0x28]
   14001581b:	xor    rcx,rbp
   14001581e:	call   0x14000a820
   140015823:	lea    rsp,[rbp+0x38]
   140015827:	pop    r15
   140015829:	pop    r14
   14001582b:	pop    r13
   14001582d:	pop    r12
   14001582f:	pop    rdi
   140015830:	pop    rsi
   140015831:	pop    rbx
   140015832:	pop    rbp
   140015833:	ret    
   140015834:	mov    QWORD PTR [rsp+0x8],rbx
   140015839:	mov    QWORD PTR [rsp+0x10],rsi
   14001583e:	push   rdi
   14001583f:	sub    rsp,0x60
   140015843:	mov    esi,edx
   140015845:	mov    rdx,rcx
   140015848:	lea    rcx,[rsp+0x40]
   14001584d:	mov    rbx,r9
   140015850:	mov    edi,r8d
   140015853:	call   0x14000c6f4
   140015858:	mov    r11d,DWORD PTR [rsp+0xa8]
   140015860:	mov    eax,DWORD PTR [rsp+0xa0]
   140015867:	lea    rcx,[rsp+0x40]
   14001586c:	mov    DWORD PTR [rsp+0x38],r11d
   140015871:	mov    DWORD PTR [rsp+0x30],eax
   140015875:	mov    rax,QWORD PTR [rsp+0x98]
   14001587d:	mov    QWORD PTR [rsp+0x28],rax
   140015882:	mov    eax,DWORD PTR [rsp+0x90]
   140015889:	mov    r9,rbx
   14001588c:	mov    r8d,edi
   14001588f:	mov    edx,esi
   140015891:	mov    DWORD PTR [rsp+0x20],eax
   140015895:	call   0x1400154f0
   14001589a:	cmp    BYTE PTR [rsp+0x58],0x0
   14001589f:	je     0x1400158ad
   1400158a1:	mov    rcx,QWORD PTR [rsp+0x50]
   1400158a6:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400158ad:	mov    rbx,QWORD PTR [rsp+0x70]
   1400158b2:	mov    rsi,QWORD PTR [rsp+0x78]
   1400158b7:	add    rsp,0x60
   1400158bb:	pop    rdi
   1400158bc:	ret    
   1400158bd:	int3   
   1400158be:	int3   
   1400158bf:	int3   
   1400158c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400158c5:	mov    QWORD PTR [rsp+0x10],rsi
   1400158ca:	mov    QWORD PTR [rsp+0x18],rdi
   1400158cf:	push   rbp
   1400158d0:	mov    rbp,rsp
   1400158d3:	sub    rsp,0x60
   1400158d7:	mov    rsi,rcx
   1400158da:	mov    rdi,rdx
   1400158dd:	lea    rcx,[rbp-0x20]
   1400158e1:	mov    rdx,r9
   1400158e4:	mov    rbx,r8
   1400158e7:	call   0x14000c6f4
   1400158ec:	test   rbx,rbx
   1400158ef:	jne    0x140015908
   1400158f1:	cmp    BYTE PTR [rbp-0x8],bl
   1400158f4:	je     0x140015901
   1400158f6:	mov    rax,QWORD PTR [rbp-0x10]
   1400158fa:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140015901:	xor    eax,eax
   140015903:	jmp    0x1400159ad
   140015908:	test   rsi,rsi
   14001590b:	jne    0x140015935
   14001590d:	call   0x14000bdc0
   140015912:	mov    DWORD PTR [rax],0x16
   140015918:	call   0x14000d01c
   14001591d:	cmp    BYTE PTR [rbp-0x8],0x0
   140015921:	je     0x14001592e
   140015923:	mov    rax,QWORD PTR [rbp-0x10]
   140015927:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001592e:	mov    eax,0x7fffffff
   140015933:	jmp    0x1400159ad
   140015935:	test   rdi,rdi
   140015938:	je     0x14001590d
   14001593a:	cmp    rbx,0x7fffffff
   140015941:	ja     0x14001590d
   140015943:	mov    rax,QWORD PTR [rbp-0x20]
   140015947:	mov    edx,DWORD PTR [rax+0x10]
   14001594a:	test   edx,edx
   14001594c:	jne    0x140015962
   14001594e:	lea    r9,[rbp-0x20]
   140015952:	mov    r8,rbx
   140015955:	mov    rdx,rdi
   140015958:	mov    rcx,rsi
   14001595b:	call   0x1400193d8
   140015960:	jmp    0x14001599c
   140015962:	mov    eax,DWORD PTR [rax+0x8]
   140015965:	lea    rcx,[rbp-0x20]
   140015969:	mov    r9,rsi
   14001596c:	mov    DWORD PTR [rsp+0x38],eax
   140015970:	mov    DWORD PTR [rsp+0x30],ebx
   140015974:	mov    r8d,0x1001
   14001597a:	mov    QWORD PTR [rsp+0x28],rdi
   14001597f:	mov    DWORD PTR [rsp+0x20],ebx
   140015983:	call   0x140015834
   140015988:	test   eax,eax
   14001598a:	jne    0x140015999
   14001598c:	call   0x14000bdc0
   140015991:	mov    DWORD PTR [rax],0x16
   140015997:	jmp    0x14001591d
   140015999:	add    eax,0xfffffffe
   14001599c:	cmp    BYTE PTR [rbp-0x8],0x0
   1400159a0:	je     0x1400159ad
   1400159a2:	mov    rcx,QWORD PTR [rbp-0x10]
   1400159a6:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400159ad:	lea    r11,[rsp+0x60]
   1400159b2:	mov    rbx,QWORD PTR [r11+0x10]
   1400159b6:	mov    rsi,QWORD PTR [r11+0x18]
   1400159ba:	mov    rdi,QWORD PTR [r11+0x20]
   1400159be:	mov    rsp,r11
   1400159c1:	pop    rbp
   1400159c2:	ret    
   1400159c3:	int3   
   1400159c4:	mov    QWORD PTR [rsp+0x8],rbx
   1400159c9:	push   rdi
   1400159ca:	sub    rsp,0x20
   1400159ce:	mov    rbx,r8
   1400159d1:	mov    rdi,rdx
   1400159d4:	test   rcx,rcx
   1400159d7:	je     0x1400159f6
   1400159d9:	xor    edx,edx
   1400159db:	lea    rax,[rdx-0x20]
   1400159df:	div    rcx
   1400159e2:	cmp    rax,rdi
   1400159e5:	jae    0x1400159f6
   1400159e7:	call   0x14000bdc0
   1400159ec:	mov    DWORD PTR [rax],0xc
   1400159f2:	xor    eax,eax
   1400159f4:	jmp    0x140015a53
   1400159f6:	imul   rdi,rcx
   1400159fa:	mov    eax,0x1
   1400159ff:	test   rdi,rdi
   140015a02:	cmove  rdi,rax
   140015a06:	xor    eax,eax
   140015a08:	cmp    rdi,0xffffffffffffffe0
   140015a0c:	ja     0x140015a26
   140015a0e:	mov    rcx,QWORD PTR [rip+0xf9b3]        # 0x1400253c8
   140015a15:	lea    edx,[rax+0x8]
   140015a18:	mov    r8,rdi
   140015a1b:	call   QWORD PTR [rip+0x46d7]        # 0x14001a0f8
   140015a21:	test   rax,rax
   140015a24:	jne    0x140015a53
   140015a26:	cmp    DWORD PTR [rip+0xff17],0x0        # 0x140025944
   140015a2d:	je     0x140015a48
   140015a2f:	mov    rcx,rdi
   140015a32:	call   0x14000d044
   140015a37:	test   eax,eax
   140015a39:	jne    0x140015a06
   140015a3b:	test   rbx,rbx
   140015a3e:	je     0x1400159f2
   140015a40:	mov    DWORD PTR [rbx],0xc
   140015a46:	jmp    0x1400159f2
   140015a48:	test   rbx,rbx
   140015a4b:	je     0x140015a53
   140015a4d:	mov    DWORD PTR [rbx],0xc
   140015a53:	mov    rbx,QWORD PTR [rsp+0x30]
   140015a58:	add    rsp,0x20
   140015a5c:	pop    rdi
   140015a5d:	ret    
   140015a5e:	int3   
   140015a5f:	int3   
   140015a60:	mov    QWORD PTR [rsp+0x8],rbx
   140015a65:	mov    QWORD PTR [rsp+0x10],rsi
   140015a6a:	push   rdi
   140015a6b:	sub    rsp,0x40
   140015a6f:	mov    ebx,edx
   140015a71:	mov    rdx,rcx
   140015a74:	lea    rcx,[rsp+0x20]
   140015a79:	mov    edi,r9d
   140015a7c:	mov    esi,r8d
   140015a7f:	call   0x14000c6f4
   140015a84:	mov    rax,QWORD PTR [rsp+0x28]
   140015a89:	movzx  r11d,bl
   140015a8d:	test   BYTE PTR [r11+rax*1+0x1d],dil
   140015a92:	jne    0x140015ab3
   140015a94:	test   esi,esi
   140015a96:	je     0x140015aad
   140015a98:	mov    rax,QWORD PTR [rsp+0x20]
   140015a9d:	mov    rcx,QWORD PTR [rax+0x140]
   140015aa4:	movzx  eax,WORD PTR [rcx+r11*2]
   140015aa9:	and    eax,esi
   140015aab:	jmp    0x140015aaf
   140015aad:	xor    eax,eax
   140015aaf:	test   eax,eax
   140015ab1:	je     0x140015ab8
   140015ab3:	mov    eax,0x1
   140015ab8:	cmp    BYTE PTR [rsp+0x38],0x0
   140015abd:	je     0x140015acb
   140015abf:	mov    rcx,QWORD PTR [rsp+0x30]
   140015ac4:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140015acb:	mov    rbx,QWORD PTR [rsp+0x50]
   140015ad0:	mov    rsi,QWORD PTR [rsp+0x58]
   140015ad5:	add    rsp,0x40
   140015ad9:	pop    rdi
   140015ada:	ret    
   140015adb:	int3   
   140015adc:	mov    edx,ecx
   140015ade:	mov    r9d,0x4
   140015ae4:	xor    r8d,r8d
   140015ae7:	xor    ecx,ecx
   140015ae9:	jmp    0x140015a60
   140015aee:	int3   
   140015aef:	int3   
   140015af0:	mov    QWORD PTR [rsp+0x8],rbx
   140015af5:	push   rdi
   140015af6:	sub    rsp,0x20
   140015afa:	test   BYTE PTR [rdx+0x18],0x40
   140015afe:	mov    rbx,rdx
   140015b01:	mov    edi,ecx
   140015b03:	jne    0x140015b93
   140015b09:	mov    rcx,rdx
   140015b0c:	call   0x140010a7c
   140015b11:	lea    rdx,[rip+0xdd98]        # 0x1400238b0
   140015b18:	lea    r8,[rip+0xff61]        # 0x140025a80
   140015b1f:	movsxd r11,eax
   140015b22:	cmp    r11d,0xffffffff
   140015b26:	je     0x140015b45
   140015b28:	cmp    r11d,0xfffffffe
   140015b2c:	je     0x140015b45
   140015b2e:	mov    rcx,r11
   140015b31:	mov    rax,r11
   140015b34:	and    ecx,0x1f
   140015b37:	sar    rax,0x5
   140015b3b:	imul   rcx,rcx,0x58
   140015b3f:	add    rcx,QWORD PTR [r8+rax*8]
   140015b43:	jmp    0x140015b48
   140015b45:	mov    rcx,rdx
   140015b48:	test   BYTE PTR [rcx+0x38],0x7f
   140015b4c:	jne    0x140015b75
   140015b4e:	cmp    r11d,0xffffffff
   140015b52:	je     0x140015b6f
   140015b54:	cmp    r11d,0xfffffffe
   140015b58:	je     0x140015b6f
   140015b5a:	mov    rdx,r11
   140015b5d:	mov    rax,r11
   140015b60:	and    edx,0x1f
   140015b63:	sar    rax,0x5
   140015b67:	imul   rdx,rdx,0x58
   140015b6b:	add    rdx,QWORD PTR [r8+rax*8]
   140015b6f:	test   BYTE PTR [rdx+0x38],0x80
   140015b73:	je     0x140015b93
   140015b75:	call   0x14000bdc0
   140015b7a:	mov    DWORD PTR [rax],0x16
   140015b80:	call   0x14000d01c
   140015b85:	or     eax,0xffffffff
   140015b88:	mov    rbx,QWORD PTR [rsp+0x30]
   140015b8d:	add    rsp,0x20
   140015b91:	pop    rdi
   140015b92:	ret    
   140015b93:	cmp    edi,0xffffffff
   140015b96:	je     0x140015b85
   140015b98:	test   BYTE PTR [rbx+0x18],0x1
   140015b9c:	jne    0x140015baa
   140015b9e:	test   BYTE PTR [rbx+0x18],0x80
   140015ba2:	je     0x140015b85
   140015ba4:	test   BYTE PTR [rbx+0x18],0x2
   140015ba8:	jne    0x140015b85
   140015baa:	cmp    QWORD PTR [rbx+0x10],0x0
   140015baf:	jne    0x140015bb9
   140015bb1:	mov    rcx,rbx
   140015bb4:	call   0x140015ef8
   140015bb9:	mov    rax,QWORD PTR [rbx]
   140015bbc:	cmp    rax,QWORD PTR [rbx+0x10]
   140015bc0:	jne    0x140015bce
   140015bc2:	cmp    DWORD PTR [rbx+0x8],0x0
   140015bc6:	jne    0x140015b85
   140015bc8:	inc    rax
   140015bcb:	mov    QWORD PTR [rbx],rax
   140015bce:	dec    QWORD PTR [rbx]
   140015bd1:	test   BYTE PTR [rbx+0x18],0x40
   140015bd5:	mov    rax,QWORD PTR [rbx]
   140015bd8:	je     0x140015be7
   140015bda:	cmp    BYTE PTR [rax],dil
   140015bdd:	je     0x140015bea
   140015bdf:	inc    rax
   140015be2:	mov    QWORD PTR [rbx],rax
   140015be5:	jmp    0x140015b85
   140015be7:	mov    BYTE PTR [rax],dil
   140015bea:	inc    DWORD PTR [rbx+0x8]
   140015bed:	and    DWORD PTR [rbx+0x18],0xffffffef
   140015bf1:	or     DWORD PTR [rbx+0x18],0x1
   140015bf5:	movzx  eax,dil
   140015bf9:	jmp    0x140015b88
   140015bfb:	int3   
   140015bfc:	mov    rax,rsp
   140015bff:	mov    QWORD PTR [rax+0x8],rbx
   140015c03:	mov    QWORD PTR [rax+0x10],rsi
   140015c07:	mov    QWORD PTR [rax+0x18],rdi
   140015c0b:	mov    QWORD PTR [rax+0x20],r12
   140015c0f:	push   rbp
   140015c10:	mov    rbp,rsp
   140015c13:	sub    rsp,0x50
   140015c17:	xor    r12d,r12d
   140015c1a:	mov    rsi,r8
   140015c1d:	mov    rdi,rdx
   140015c20:	mov    rbx,rcx
   140015c23:	test   rdx,rdx
   140015c26:	je     0x140015c3b
   140015c28:	test   r8,r8
   140015c2b:	je     0x140015c3b
   140015c2d:	cmp    BYTE PTR [rdx],r12b
   140015c30:	jne    0x140015c57
   140015c32:	test   rcx,rcx
   140015c35:	je     0x140015c3b
   140015c37:	mov    WORD PTR [rcx],r12w
   140015c3b:	xor    eax,eax
   140015c3d:	mov    rbx,QWORD PTR [rsp+0x60]
   140015c42:	mov    rsi,QWORD PTR [rsp+0x68]
   140015c47:	mov    rdi,QWORD PTR [rsp+0x70]
   140015c4c:	mov    r12,QWORD PTR [rsp+0x78]
   140015c51:	add    rsp,0x50
   140015c55:	pop    rbp
   140015c56:	ret    
   140015c57:	lea    rcx,[rbp-0x20]
   140015c5b:	mov    rdx,r9
   140015c5e:	call   0x14000c6f4
   140015c63:	mov    r11,QWORD PTR [rbp-0x20]
   140015c67:	cmp    DWORD PTR [r11+0x14],r12d
   140015c6b:	jne    0x140015c90
   140015c6d:	test   rbx,rbx
   140015c70:	je     0x140015c78
   140015c72:	movzx  eax,BYTE PTR [rdi]
   140015c75:	mov    WORD PTR [rbx],ax
   140015c78:	cmp    BYTE PTR [rbp-0x8],r12b
   140015c7c:	je     0x140015c89
   140015c7e:	mov    rax,QWORD PTR [rbp-0x10]
   140015c82:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140015c89:	mov    eax,0x1
   140015c8e:	jmp    0x140015c3d
   140015c90:	movzx  ecx,BYTE PTR [rdi]
   140015c93:	lea    rdx,[rbp-0x20]
   140015c97:	call   0x140015288
   140015c9c:	test   eax,eax
   140015c9e:	je     0x140015d3b
   140015ca4:	mov    rcx,QWORD PTR [rbp-0x20]
   140015ca8:	mov    r9d,DWORD PTR [rcx+0x10c]
   140015caf:	cmp    r9d,0x1
   140015cb3:	jle    0x140015ce5
   140015cb5:	cmp    esi,r9d
   140015cb8:	jl     0x140015ce5
   140015cba:	mov    ecx,DWORD PTR [rcx+0x4]
   140015cbd:	mov    eax,r12d
   140015cc0:	test   rbx,rbx
   140015cc3:	setne  al
   140015cc6:	mov    r8,rdi
   140015cc9:	mov    edx,0x9
   140015cce:	mov    DWORD PTR [rsp+0x28],eax
   140015cd2:	mov    QWORD PTR [rsp+0x20],rbx
   140015cd7:	call   QWORD PTR [rip+0x4453]        # 0x14001a130
   140015cdd:	mov    rcx,QWORD PTR [rbp-0x20]
   140015ce1:	test   eax,eax
   140015ce3:	jne    0x140015cf7
   140015ce5:	movsxd rax,DWORD PTR [rcx+0x10c]
   140015cec:	cmp    rsi,rax
   140015cef:	jb     0x140015d17
   140015cf1:	cmp    BYTE PTR [rdi+0x1],r12b
   140015cf5:	je     0x140015d17
   140015cf7:	mov    eax,DWORD PTR [rcx+0x10c]
   140015cfd:	cmp    BYTE PTR [rbp-0x8],r12b
   140015d01:	je     0x140015c3d
   140015d07:	mov    rcx,QWORD PTR [rbp-0x10]
   140015d0b:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140015d12:	jmp    0x140015c3d
   140015d17:	call   0x14000bdc0
   140015d1c:	mov    DWORD PTR [rax],0x2a
   140015d22:	cmp    BYTE PTR [rbp-0x8],r12b
   140015d26:	je     0x140015d33
   140015d28:	mov    rax,QWORD PTR [rbp-0x10]
   140015d2c:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140015d33:	or     eax,0xffffffff
   140015d36:	jmp    0x140015c3d
   140015d3b:	mov    eax,r12d
   140015d3e:	mov    r9d,0x1
   140015d44:	test   rbx,rbx
   140015d47:	setne  al
   140015d4a:	lea    edx,[r9+0x8]
   140015d4e:	mov    r8,rdi
   140015d51:	mov    DWORD PTR [rsp+0x28],eax
   140015d55:	mov    rax,QWORD PTR [rbp-0x20]
   140015d59:	mov    QWORD PTR [rsp+0x20],rbx
   140015d5e:	mov    ecx,DWORD PTR [rax+0x4]
   140015d61:	call   QWORD PTR [rip+0x43c9]        # 0x14001a130
   140015d67:	test   eax,eax
   140015d69:	jne    0x140015c78
   140015d6f:	jmp    0x140015d17
   140015d71:	int3   
   140015d72:	int3   
   140015d73:	int3   
   140015d74:	xor    r9d,r9d
   140015d77:	jmp    0x140015bfc
   140015d7c:	mov    QWORD PTR [rsp+0x8],rbx
   140015d81:	push   rdi
   140015d82:	sub    rsp,0x20
   140015d86:	movsxd rbx,ecx
   140015d89:	mov    edi,r8d
   140015d8c:	mov    QWORD PTR [rsp+0x38],rdx
   140015d91:	mov    ecx,ebx
   140015d93:	call   0x140011660
   140015d98:	cmp    rax,0xffffffffffffffff
   140015d9c:	jne    0x140015daf
   140015d9e:	call   0x14000bdc0
   140015da3:	mov    DWORD PTR [rax],0x9
   140015da9:	or     rax,0xffffffffffffffff
   140015dad:	jmp    0x140015e06
   140015daf:	mov    edx,DWORD PTR [rsp+0x38]
   140015db3:	lea    r8,[rsp+0x3c]
   140015db8:	mov    r9d,edi
   140015dbb:	mov    rcx,rax
   140015dbe:	call   QWORD PTR [rip+0x452c]        # 0x14001a2f0
   140015dc4:	mov    DWORD PTR [rsp+0x38],eax
   140015dc8:	cmp    eax,0xffffffff
   140015dcb:	jne    0x140015de0
   140015dcd:	call   QWORD PTR [rip+0x429d]        # 0x14001a070
   140015dd3:	test   eax,eax
   140015dd5:	je     0x140015de0
   140015dd7:	mov    ecx,eax
   140015dd9:	call   0x14000be00
   140015dde:	jmp    0x140015da9
   140015de0:	mov    rcx,rbx
   140015de3:	mov    rax,rbx
   140015de6:	lea    rdx,[rip+0xfc93]        # 0x140025a80
   140015ded:	sar    rax,0x5
   140015df1:	and    ecx,0x1f
   140015df4:	mov    rax,QWORD PTR [rdx+rax*8]
   140015df8:	imul   rcx,rcx,0x58
   140015dfc:	and    BYTE PTR [rax+rcx*1+0x8],0xfd
   140015e01:	mov    rax,QWORD PTR [rsp+0x38]
   140015e06:	mov    rbx,QWORD PTR [rsp+0x30]
   140015e0b:	add    rsp,0x20
   140015e0f:	pop    rdi
   140015e10:	ret    
   140015e11:	int3   
   140015e12:	int3   
   140015e13:	int3   
   140015e14:	mov    QWORD PTR [rsp+0x10],rbx
   140015e19:	mov    DWORD PTR [rsp+0x8],ecx
   140015e1d:	push   rsi
   140015e1e:	push   rdi
   140015e1f:	push   r12
   140015e21:	push   r13
   140015e23:	push   r14
   140015e25:	sub    rsp,0x20
   140015e29:	mov    esi,r8d
   140015e2c:	mov    r12,rdx
   140015e2f:	movsxd rdi,ecx
   140015e32:	cmp    edi,0xfffffffe
   140015e35:	jne    0x140015e4f
   140015e37:	call   0x14000bde0
   140015e3c:	and    DWORD PTR [rax],0x0
   140015e3f:	call   0x14000bdc0
   140015e44:	mov    DWORD PTR [rax],0x9
   140015e4a:	jmp    0x140015ee1
   140015e4f:	test   ecx,ecx
   140015e51:	js     0x140015ec9
   140015e53:	cmp    edi,DWORD PTR [rip+0xfc13]        # 0x140025a6c
   140015e59:	jae    0x140015ec9
   140015e5b:	mov    rbx,rdi
   140015e5e:	mov    r13,rdi
   140015e61:	sar    r13,0x5
   140015e65:	lea    r14,[rip+0xfc14]        # 0x140025a80
   140015e6c:	and    ebx,0x1f
   140015e6f:	imul   rbx,rbx,0x58
   140015e73:	mov    rax,QWORD PTR [r14+r13*8]
   140015e77:	movsx  ecx,BYTE PTR [rax+rbx*1+0x8]
   140015e7c:	and    ecx,0x1
   140015e7f:	je     0x140015ec9
   140015e81:	mov    ecx,edi
   140015e83:	call   0x1400116d4
   140015e88:	nop
   140015e89:	mov    rax,QWORD PTR [r14+r13*8]
   140015e8d:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   140015e92:	je     0x140015ea6
   140015e94:	mov    r8d,esi
   140015e97:	mov    rdx,r12
   140015e9a:	mov    ecx,edi
   140015e9c:	call   0x140015d7c
   140015ea1:	mov    rbx,rax
   140015ea4:	jmp    0x140015ebd
   140015ea6:	call   0x14000bdc0
   140015eab:	mov    DWORD PTR [rax],0x9
   140015eb1:	call   0x14000bde0
   140015eb6:	and    DWORD PTR [rax],0x0
   140015eb9:	or     rbx,0xffffffffffffffff
   140015ebd:	mov    ecx,edi
   140015ebf:	call   0x14001177c
   140015ec4:	mov    rax,rbx
   140015ec7:	jmp    0x140015ee5
   140015ec9:	call   0x14000bde0
   140015ece:	and    DWORD PTR [rax],0x0
   140015ed1:	call   0x14000bdc0
   140015ed6:	mov    DWORD PTR [rax],0x9
   140015edc:	call   0x14000d01c
   140015ee1:	or     rax,0xffffffffffffffff
   140015ee5:	mov    rbx,QWORD PTR [rsp+0x58]
   140015eea:	add    rsp,0x20
   140015eee:	pop    r14
   140015ef0:	pop    r13
   140015ef2:	pop    r12
   140015ef4:	pop    rdi
   140015ef5:	pop    rsi
   140015ef6:	ret    
   140015ef7:	int3   
   140015ef8:	rex push rbx
   140015efa:	sub    rsp,0x20
   140015efe:	inc    DWORD PTR [rip+0xeaf0]        # 0x1400249f4
   140015f04:	mov    rbx,rcx
   140015f07:	mov    ecx,0x1000
   140015f0c:	call   0x140010aa4
   140015f11:	mov    QWORD PTR [rbx+0x10],rax
   140015f15:	test   rax,rax
   140015f18:	je     0x140015f27
   140015f1a:	or     DWORD PTR [rbx+0x18],0x8
   140015f1e:	mov    DWORD PTR [rbx+0x24],0x1000
   140015f25:	jmp    0x140015f3a
   140015f27:	or     DWORD PTR [rbx+0x18],0x4
   140015f2b:	lea    rax,[rbx+0x20]
   140015f2f:	mov    DWORD PTR [rbx+0x24],0x2
   140015f36:	mov    QWORD PTR [rbx+0x10],rax
   140015f3a:	mov    rax,QWORD PTR [rbx+0x10]
   140015f3e:	and    DWORD PTR [rbx+0x8],0x0
   140015f42:	mov    QWORD PTR [rbx],rax
   140015f45:	add    rsp,0x20
   140015f49:	pop    rbx
   140015f4a:	ret    
   140015f4b:	int3   
   140015f4c:	mov    QWORD PTR [rsp+0x8],rbx
   140015f51:	mov    QWORD PTR [rsp+0x18],rsi
   140015f56:	mov    QWORD PTR [rsp+0x20],rdi
   140015f5b:	push   rbp
   140015f5c:	push   r12
   140015f5e:	push   r13
   140015f60:	push   r14
   140015f62:	push   r15
   140015f64:	mov    rbp,rsp
   140015f67:	sub    rsp,0x40
   140015f6b:	mov    r15,rdx
   140015f6e:	mov    rdx,rcx
   140015f71:	lea    rcx,[rbp-0x20]
   140015f75:	mov    r13d,r9d
   140015f78:	mov    r14,r8
   140015f7b:	call   0x14000c6f4
   140015f80:	test   r14,r14
   140015f83:	je     0x140015f88
   140015f85:	mov    QWORD PTR [r14],r15
   140015f88:	test   r15,r15
   140015f8b:	jne    0x140015fa6
   140015f8d:	call   0x14000bdc0
   140015f92:	mov    DWORD PTR [rax],0x16
   140015f98:	call   0x14000d01c
   140015f9d:	cmp    BYTE PTR [rbp-0x8],0x0
   140015fa1:	jmp    0x14001618a
   140015fa6:	test   r13d,r13d
   140015fa9:	je     0x140015fb7
   140015fab:	cmp    r13d,0x2
   140015faf:	jl     0x140015f8d
   140015fb1:	cmp    r13d,0x24
   140015fb5:	jg     0x140015f8d
   140015fb7:	mov    r12b,BYTE PTR [r15]
   140015fba:	mov    r8,QWORD PTR [rbp-0x20]
   140015fbe:	xor    edi,edi
   140015fc0:	lea    rbx,[r15+0x1]
   140015fc4:	cmp    DWORD PTR [r8+0x10c],0x1
   140015fcc:	jle    0x140015fe6
   140015fce:	lea    r8,[rbp-0x20]
   140015fd2:	movzx  ecx,r12b
   140015fd6:	mov    edx,0x8
   140015fdb:	call   0x140014ca4
   140015fe0:	mov    r8,QWORD PTR [rbp-0x20]
   140015fe4:	jmp    0x140015ff8
   140015fe6:	mov    rax,QWORD PTR [r8+0x140]
   140015fed:	movzx  ecx,r12b
   140015ff1:	movzx  eax,WORD PTR [rax+rcx*2]
   140015ff5:	and    eax,0x8
   140015ff8:	test   eax,eax
   140015ffa:	je     0x140016004
   140015ffc:	mov    r12b,BYTE PTR [rbx]
   140015fff:	inc    rbx
   140016002:	jmp    0x140015fc4
   140016004:	mov    esi,DWORD PTR [rbp+0x50]
   140016007:	cmp    r12b,0x2d
   14001600b:	jne    0x140016012
   14001600d:	or     esi,0x2
   140016010:	jmp    0x140016018
   140016012:	cmp    r12b,0x2b
   140016016:	jne    0x14001601e
   140016018:	mov    r12b,BYTE PTR [rbx]
   14001601b:	inc    rbx
   14001601e:	test   r13d,r13d
   140016021:	js     0x14001617e
   140016027:	cmp    r13d,0x1
   14001602b:	je     0x14001617e
   140016031:	cmp    r13d,0x24
   140016035:	jg     0x14001617e
   14001603b:	test   r13d,r13d
   14001603e:	jne    0x140016068
   140016040:	cmp    r12b,0x30
   140016044:	je     0x14001604e
   140016046:	mov    r13d,0xa
   14001604c:	jmp    0x140016086
   14001604e:	cmp    BYTE PTR [rbx],0x78
   140016051:	je     0x140016060
   140016053:	cmp    BYTE PTR [rbx],0x58
   140016056:	je     0x140016060
   140016058:	mov    r13d,0x8
   14001605e:	jmp    0x140016086
   140016060:	mov    r13d,0x10
   140016066:	jmp    0x140016074
   140016068:	cmp    r13d,0x10
   14001606c:	jne    0x140016086
   14001606e:	cmp    r12b,0x30
   140016072:	jne    0x140016086
   140016074:	cmp    BYTE PTR [rbx],0x78
   140016077:	je     0x14001607e
   140016079:	cmp    BYTE PTR [rbx],0x58
   14001607c:	jne    0x140016086
   14001607e:	mov    r12b,BYTE PTR [rbx+0x1]
   140016082:	add    rbx,0x2
   140016086:	mov    r10,QWORD PTR [r8+0x140]
   14001608d:	xor    edx,edx
   14001608f:	or     eax,0xffffffff
   140016092:	div    r13d
   140016095:	mov    r9d,eax
   140016098:	movzx  ecx,r12b
   14001609c:	movzx  r8d,WORD PTR [r10+rcx*2]
   1400160a1:	mov    ecx,r8d
   1400160a4:	and    ecx,0x4
   1400160a7:	je     0x1400160b2
   1400160a9:	movsx  ecx,r12b
   1400160ad:	sub    ecx,0x30
   1400160b0:	jmp    0x1400160ce
   1400160b2:	and    r8d,0x103
   1400160b9:	je     0x1400160e9
   1400160bb:	lea    eax,[r12-0x61]
   1400160c0:	movsx  ecx,r12b
   1400160c4:	cmp    al,0x19
   1400160c6:	ja     0x1400160cb
   1400160c8:	sub    ecx,0x20
   1400160cb:	add    ecx,0xffffffc9
   1400160ce:	cmp    ecx,r13d
   1400160d1:	jae    0x1400160e9
   1400160d3:	or     esi,0x8
   1400160d6:	cmp    edi,r9d
   1400160d9:	jb     0x1400160fd
   1400160db:	jne    0x1400160e1
   1400160dd:	cmp    ecx,edx
   1400160df:	jbe    0x1400160fd
   1400160e1:	or     esi,0x4
   1400160e4:	test   r14,r14
   1400160e7:	jne    0x140016103
   1400160e9:	dec    rbx
   1400160ec:	test   sil,0x8
   1400160f0:	jne    0x14001610b
   1400160f2:	test   r14,r14
   1400160f5:	cmovne rbx,r15
   1400160f9:	xor    edi,edi
   1400160fb:	jmp    0x140016159
   1400160fd:	imul   edi,r13d
   140016101:	add    edi,ecx
   140016103:	mov    r12b,BYTE PTR [rbx]
   140016106:	inc    rbx
   140016109:	jmp    0x140016098
   14001610b:	mov    r12d,0x7fffffff
   140016111:	test   sil,0x4
   140016115:	jne    0x140016135
   140016117:	test   sil,0x1
   14001611b:	jne    0x140016159
   14001611d:	mov    eax,esi
   14001611f:	and    eax,0x2
   140016122:	je     0x14001612c
   140016124:	cmp    edi,0x80000000
   14001612a:	ja     0x140016135
   14001612c:	test   eax,eax
   14001612e:	jne    0x140016159
   140016130:	cmp    edi,r12d
   140016133:	jbe    0x140016159
   140016135:	call   0x14000bdc0
   14001613a:	mov    DWORD PTR [rax],0x22
   140016140:	test   sil,0x1
   140016144:	je     0x14001614b
   140016146:	or     edi,0xffffffff
   140016149:	jmp    0x140016159
   14001614b:	mov    al,sil
   14001614e:	and    al,0x2
   140016150:	neg    al
   140016152:	sbb    edi,edi
   140016154:	neg    edi
   140016156:	add    edi,r12d
   140016159:	test   r14,r14
   14001615c:	je     0x140016161
   14001615e:	mov    QWORD PTR [r14],rbx
   140016161:	test   sil,0x2
   140016165:	je     0x140016169
   140016167:	neg    edi
   140016169:	cmp    BYTE PTR [rbp-0x8],0x0
   14001616d:	je     0x14001617a
   14001616f:	mov    rcx,QWORD PTR [rbp-0x10]
   140016173:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001617a:	mov    eax,edi
   14001617c:	jmp    0x140016199
   14001617e:	test   r14,r14
   140016181:	je     0x140016186
   140016183:	mov    QWORD PTR [r14],r15
   140016186:	cmp    BYTE PTR [rbp-0x8],dil
   14001618a:	je     0x140016197
   14001618c:	mov    rax,QWORD PTR [rbp-0x10]
   140016190:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140016197:	xor    eax,eax
   140016199:	lea    r11,[rsp+0x40]
   14001619e:	mov    rbx,QWORD PTR [r11+0x30]
   1400161a2:	mov    rsi,QWORD PTR [r11+0x40]
   1400161a6:	mov    rdi,QWORD PTR [r11+0x48]
   1400161aa:	mov    rsp,r11
   1400161ad:	pop    r15
   1400161af:	pop    r14
   1400161b1:	pop    r13
   1400161b3:	pop    r12
   1400161b5:	pop    rbp
   1400161b6:	ret    
   1400161b7:	int3   
   1400161b8:	sub    rsp,0x38
   1400161bc:	xor    eax,eax
   1400161be:	mov    r9d,r8d
   1400161c1:	mov    r8,rdx
   1400161c4:	cmp    DWORD PTR [rip+0xf79e],eax        # 0x140025968
   1400161ca:	mov    DWORD PTR [rsp+0x20],eax
   1400161ce:	mov    rdx,rcx
   1400161d1:	jne    0x1400161dc
   1400161d3:	lea    rcx,[rip+0xe20e]        # 0x1400243e8
   1400161da:	jmp    0x1400161de
   1400161dc:	xor    ecx,ecx
   1400161de:	call   0x140015f4c
   1400161e3:	add    rsp,0x38
   1400161e7:	ret    
   1400161e8:	mov    QWORD PTR [rsp+0x8],rbx
   1400161ed:	mov    QWORD PTR [rsp+0x10],rsi
   1400161f2:	push   rdi
   1400161f3:	sub    rsp,0x20
   1400161f7:	xor    edi,edi
   1400161f9:	mov    rbx,rdx
   1400161fc:	mov    rsi,rcx
   1400161ff:	test   rdx,rdx
   140016202:	je     0x140016221
   140016204:	xor    edx,edx
   140016206:	lea    rax,[rdi-0x20]
   14001620a:	div    rbx
   14001620d:	cmp    rax,r8
   140016210:	jae    0x140016221
   140016212:	call   0x14000bdc0
   140016217:	mov    DWORD PTR [rax],0xc
   14001621d:	xor    eax,eax
   14001621f:	jmp    0x14001625e
   140016221:	imul   rbx,r8
   140016225:	test   rcx,rcx
   140016228:	je     0x140016232
   14001622a:	call   0x140014dd4
   14001622f:	mov    rdi,rax
   140016232:	mov    rdx,rbx
   140016235:	mov    rcx,rsi
   140016238:	call   0x14000b38c
   14001623d:	mov    rsi,rax
   140016240:	test   rax,rax
   140016243:	je     0x14001625b
   140016245:	cmp    rdi,rbx
   140016248:	jae    0x14001625b
   14001624a:	sub    rbx,rdi
   14001624d:	lea    rcx,[rdi+rax*1]
   140016251:	xor    edx,edx
   140016253:	mov    r8,rbx
   140016256:	call   0x14000a530
   14001625b:	mov    rax,rsi
   14001625e:	mov    rbx,QWORD PTR [rsp+0x30]
   140016263:	mov    rsi,QWORD PTR [rsp+0x38]
   140016268:	add    rsp,0x20
   14001626c:	pop    rdi
   14001626d:	ret    
   14001626e:	int3   
   14001626f:	int3   
   140016270:	mov    QWORD PTR [rsp+0x10],rdx
   140016275:	mov    DWORD PTR [rsp+0x8],ecx
   140016279:	push   rbp
   14001627a:	push   rbx
   14001627b:	push   rsi
   14001627c:	push   rdi
   14001627d:	push   r12
   14001627f:	push   r13
   140016281:	push   r14
   140016283:	push   r15
   140016285:	mov    rbp,rsp
   140016288:	sub    rsp,0x58
   14001628c:	movsxd rax,ecx
   14001628f:	mov    ebx,r8d
   140016292:	mov    DWORD PTR [rbp-0x20],0xfffffffe
   140016299:	mov    DWORD PTR [rbp-0x1c],ebx
   14001629c:	cmp    eax,0xfffffffe
   14001629f:	jne    0x1400162ba
   1400162a1:	call   0x14000bde0
   1400162a6:	xor    edi,edi
   1400162a8:	mov    DWORD PTR [rax],edi
   1400162aa:	call   0x14000bdc0
   1400162af:	mov    DWORD PTR [rax],0x9
   1400162b5:	jmp    0x14001697f
   1400162ba:	xor    edi,edi
   1400162bc:	test   ecx,ecx
   1400162be:	js     0x140016968
   1400162c4:	cmp    eax,DWORD PTR [rip+0xf7a2]        # 0x140025a6c
   1400162ca:	jae    0x140016968
   1400162d0:	mov    rsi,rax
   1400162d3:	mov    r15,rax
   1400162d6:	lea    r9,[rip+0xfffffffffffe9d23]        # 0x140000000
   1400162dd:	sar    r15,0x5
   1400162e1:	and    esi,0x1f
   1400162e4:	mov    rcx,QWORD PTR [r9+r15*8+0x25a80]
   1400162ec:	imul   rsi,rsi,0x58
   1400162f0:	mov    al,BYTE PTR [rcx+rsi*1+0x8]
   1400162f4:	test   al,0x1
   1400162f6:	je     0x140016968
   1400162fc:	cmp    ebx,0x7fffffff
   140016302:	jbe    0x14001631b
   140016304:	call   0x14000bde0
   140016309:	mov    DWORD PTR [rax],edi
   14001630b:	call   0x14000bdc0
   140016310:	mov    DWORD PTR [rax],0x16
   140016316:	jmp    0x14001697a
   14001631b:	mov    r12d,edi
   14001631e:	test   ebx,ebx
   140016320:	je     0x140016964
   140016326:	test   al,0x2
   140016328:	jne    0x140016964
   14001632e:	test   rdx,rdx
   140016331:	je     0x140016304
   140016333:	mov    r13b,BYTE PTR [rcx+rsi*1+0x38]
   140016338:	mov    r8d,0x4
   14001633e:	add    r13b,r13b
   140016341:	sar    r13b,1
   140016344:	movsx  ecx,r13b
   140016348:	mov    BYTE PTR [rbp+0x60],r13b
   14001634c:	dec    ecx
   14001634e:	je     0x140016364
   140016350:	dec    ecx
   140016352:	jne    0x14001635f
   140016354:	mov    eax,ebx
   140016356:	not    eax
   140016358:	test   al,0x1
   14001635a:	je     0x140016304
   14001635c:	and    ebx,0xfffffffe
   14001635f:	mov    r14,rdx
   140016362:	jmp    0x1400163c4
   140016364:	mov    eax,ebx
   140016366:	not    eax
   140016368:	test   al,0x1
   14001636a:	je     0x140016304
   14001636c:	shr    ebx,1
   14001636e:	cmp    ebx,r8d
   140016371:	cmovb  ebx,r8d
   140016375:	mov    ecx,ebx
   140016377:	call   0x140010aa4
   14001637c:	mov    r14,rax
   14001637f:	test   rax,rax
   140016382:	jne    0x14001639f
   140016384:	call   0x14000bdc0
   140016389:	mov    DWORD PTR [rax],0xc
   14001638f:	call   0x14000bde0
   140016394:	mov    DWORD PTR [rax],0x8
   14001639a:	jmp    0x14001697f
   14001639f:	mov    ecx,DWORD PTR [rbp+0x48]
   1400163a2:	xor    edx,edx
   1400163a4:	lea    r8d,[rdx+0x1]
   1400163a8:	call   0x140015d7c
   1400163ad:	lea    r9,[rip+0xfffffffffffe9c4c]        # 0x140000000
   1400163b4:	mov    r11,rax
   1400163b7:	mov    rax,QWORD PTR [r9+r15*8+0x25a80]
   1400163bf:	mov    QWORD PTR [rax+rsi*1+0x40],r11
   1400163c4:	mov    rax,QWORD PTR [r9+r15*8+0x25a80]
   1400163cc:	mov    rdx,r14
   1400163cf:	mov    r8d,0xa
   1400163d5:	test   BYTE PTR [rax+rsi*1+0x8],0x48
   1400163da:	je     0x14001647b
   1400163e0:	mov    cl,BYTE PTR [rax+rsi*1+0x9]
   1400163e4:	cmp    cl,r8b
   1400163e7:	je     0x14001647b
   1400163ed:	test   ebx,ebx
   1400163ef:	je     0x14001647b
   1400163f5:	mov    BYTE PTR [r14],cl
   1400163f8:	mov    rax,QWORD PTR [r9+r15*8+0x25a80]
   140016400:	or     r10d,0xffffffff
   140016404:	add    ebx,r10d
   140016407:	lea    rdx,[r14+0x1]
   14001640b:	lea    r12d,[r8-0x9]
   14001640f:	mov    BYTE PTR [rax+rsi*1+0x9],r8b
   140016414:	test   r13b,r13b
   140016417:	je     0x14001647b
   140016419:	mov    rax,QWORD PTR [r9+r15*8+0x25a80]
   140016421:	mov    cl,BYTE PTR [rax+rsi*1+0x39]
   140016425:	cmp    cl,r8b
   140016428:	je     0x14001647b
   14001642a:	test   ebx,ebx
   14001642c:	je     0x14001647b
   14001642e:	mov    BYTE PTR [rdx],cl
   140016430:	mov    rax,QWORD PTR [r9+r15*8+0x25a80]
   140016438:	add    ebx,r10d
   14001643b:	inc    rdx
   14001643e:	lea    r12d,[r8-0x8]
   140016442:	mov    BYTE PTR [rax+rsi*1+0x39],r8b
   140016447:	cmp    r13b,0x1
   14001644b:	jne    0x14001647b
   14001644d:	mov    rax,QWORD PTR [r9+r15*8+0x25a80]
   140016455:	mov    cl,BYTE PTR [rax+rsi*1+0x3a]
   140016459:	cmp    cl,r8b
   14001645c:	je     0x14001647b
   14001645e:	test   ebx,ebx
   140016460:	je     0x14001647b
   140016462:	mov    BYTE PTR [rdx],cl
   140016464:	mov    rax,QWORD PTR [r9+r15*8+0x25a80]
   14001646c:	inc    rdx
   14001646f:	lea    r12d,[r8-0x7]
   140016473:	add    ebx,r10d
   140016476:	mov    BYTE PTR [rax+rsi*1+0x3a],r8b
   14001647b:	mov    rcx,QWORD PTR [r9+r15*8+0x25a80]
   140016483:	lea    r9,[rbp-0x24]
   140016487:	mov    r8d,ebx
   14001648a:	mov    rcx,QWORD PTR [rcx+rsi*1]
   14001648e:	mov    QWORD PTR [rsp+0x20],rdi
   140016493:	call   QWORD PTR [rip+0x3e5f]        # 0x14001a2f8
   140016499:	test   eax,eax
   14001649b:	je     0x140016929
   1400164a1:	movsxd rdx,DWORD PTR [rbp-0x24]
   1400164a5:	test   edx,edx
   1400164a7:	js     0x140016929
   1400164ad:	mov    eax,ebx
   1400164af:	cmp    rdx,rax
   1400164b2:	ja     0x140016929
   1400164b8:	lea    r8,[rip+0xfffffffffffe9b41]        # 0x140000000
   1400164bf:	add    r12d,edx
   1400164c2:	mov    rax,QWORD PTR [r8+r15*8+0x25a80]
   1400164ca:	test   BYTE PTR [rax+rsi*1+0x8],0x80
   1400164cf:	je     0x14001690a
   1400164d5:	cmp    r13b,0x2
   1400164d9:	je     0x14001676b
   1400164df:	test   edx,edx
   1400164e1:	je     0x1400164f0
   1400164e3:	cmp    BYTE PTR [r14],0xa
   1400164e7:	jne    0x1400164f0
   1400164e9:	or     BYTE PTR [rax+rsi*1+0x8],0x4
   1400164ee:	jmp    0x1400164f5
   1400164f0:	and    BYTE PTR [rax+rsi*1+0x8],0xfb
   1400164f5:	movsxd rax,r12d
   1400164f8:	mov    rbx,r14
   1400164fb:	mov    r13,r14
   1400164fe:	add    rax,r14
   140016501:	mov    QWORD PTR [rbp-0x18],rax
   140016505:	cmp    r14,rax
   140016508:	jae    0x140016629
   14001650e:	mov    r12d,0xd
   140016514:	mov    al,BYTE PTR [r13+0x0]
   140016518:	cmp    al,0x1a
   14001651a:	je     0x14001660a
   140016520:	cmp    al,r12b
   140016523:	je     0x140016532
   140016525:	mov    BYTE PTR [rbx],al
   140016527:	inc    rbx
   14001652a:	inc    r13
   14001652d:	jmp    0x1400165fe
   140016532:	mov    rax,QWORD PTR [rbp-0x18]
   140016536:	dec    rax
   140016539:	cmp    r13,rax
   14001653c:	jae    0x140016555
   14001653e:	lea    rax,[r13+0x1]
   140016542:	cmp    BYTE PTR [rax],0xa
   140016545:	jne    0x14001654d
   140016547:	add    r13,0x2
   14001654b:	jmp    0x1400165cb
   14001654d:	mov    r13,rax
   140016550:	jmp    0x1400165f8
   140016555:	mov    rcx,QWORD PTR [r8+r15*8+0x25a80]
   14001655d:	lea    r9,[rbp-0x24]
   140016561:	lea    rdx,[rbp+0x58]
   140016565:	mov    rcx,QWORD PTR [rcx+rsi*1]
   140016569:	mov    r8d,0x1
   14001656f:	inc    r13
   140016572:	mov    QWORD PTR [rsp+0x20],rdi
   140016577:	call   QWORD PTR [rip+0x3d7b]        # 0x14001a2f8
   14001657d:	test   eax,eax
   14001657f:	jne    0x14001658b
   140016581:	call   QWORD PTR [rip+0x3ae9]        # 0x14001a070
   140016587:	test   eax,eax
   140016589:	jne    0x1400165f1
   14001658b:	cmp    DWORD PTR [rbp-0x24],edi
   14001658e:	je     0x1400165f1
   140016590:	lea    r8,[rip+0xfffffffffffe9a69]        # 0x140000000
   140016597:	mov    rax,QWORD PTR [r8+r15*8+0x25a80]
   14001659f:	test   BYTE PTR [rax+rsi*1+0x8],0x48
   1400165a4:	je     0x1400165c0
   1400165a6:	cmp    BYTE PTR [rbp+0x58],0xa
   1400165aa:	je     0x1400165cb
   1400165ac:	mov    BYTE PTR [rbx],r12b
   1400165af:	mov    rcx,QWORD PTR [r8+r15*8+0x25a80]
   1400165b7:	mov    al,BYTE PTR [rbp+0x58]
   1400165ba:	mov    BYTE PTR [rcx+rsi*1+0x9],al
   1400165be:	jmp    0x1400165fb
   1400165c0:	cmp    rbx,r14
   1400165c3:	jne    0x1400165d0
   1400165c5:	cmp    BYTE PTR [rbp+0x58],0xa
   1400165c9:	jne    0x1400165d0
   1400165cb:	mov    BYTE PTR [rbx],0xa
   1400165ce:	jmp    0x1400165fb
   1400165d0:	mov    ecx,DWORD PTR [rbp+0x48]
   1400165d3:	mov    r8d,0x1
   1400165d9:	or     rdx,0xffffffffffffffff
   1400165dd:	call   0x140015d7c
   1400165e2:	cmp    BYTE PTR [rbp+0x58],0xa
   1400165e6:	lea    r8,[rip+0xfffffffffffe9a13]        # 0x140000000
   1400165ed:	je     0x1400165fe
   1400165ef:	jmp    0x1400165f8
   1400165f1:	lea    r8,[rip+0xfffffffffffe9a08]        # 0x140000000
   1400165f8:	mov    BYTE PTR [rbx],r12b
   1400165fb:	inc    rbx
   1400165fe:	cmp    r13,QWORD PTR [rbp-0x18]
   140016602:	jb     0x140016514
   140016608:	jmp    0x140016629
   14001660a:	mov    rax,QWORD PTR [r8+r15*8+0x25a80]
   140016612:	test   BYTE PTR [rax+rsi*1+0x8],0x40
   140016617:	jne    0x140016620
   140016619:	or     BYTE PTR [rax+rsi*1+0x8],0x2
   14001661e:	jmp    0x140016629
   140016620:	mov    al,BYTE PTR [r13+0x0]
   140016624:	mov    BYTE PTR [rbx],al
   140016626:	inc    rbx
   140016629:	mov    r12d,ebx
   14001662c:	sub    r12d,r14d
   14001662f:	cmp    BYTE PTR [rbp+0x60],0x1
   140016633:	jne    0x14001690a
   140016639:	test   r12d,r12d
   14001663c:	je     0x14001690a
   140016642:	dec    rbx
   140016645:	test   BYTE PTR [rbx],0x80
   140016648:	jne    0x140016652
   14001664a:	inc    rbx
   14001664d:	jmp    0x140016703
   140016652:	mov    edx,0x1
   140016657:	jmp    0x140016668
   140016659:	cmp    edx,0x4
   14001665c:	jg     0x140016675
   14001665e:	cmp    rbx,r14
   140016661:	jb     0x140016675
   140016663:	dec    rbx
   140016666:	inc    edx
   140016668:	movzx  eax,BYTE PTR [rbx]
   14001666b:	cmp    BYTE PTR [rax+r8*1+0x24410],dil
   140016673:	je     0x140016659
   140016675:	movzx  ecx,BYTE PTR [rbx]
   140016678:	movsx  eax,BYTE PTR [rcx+r8*1+0x24410]
   140016681:	test   eax,eax
   140016683:	jne    0x140016698
   140016685:	call   0x14000bdc0
   14001668a:	mov    DWORD PTR [rax],0x2a
   140016690:	or     ebx,0xffffffff
   140016693:	jmp    0x14001690d
   140016698:	inc    eax
   14001669a:	cmp    eax,edx
   14001669c:	jne    0x1400166a6
   14001669e:	movsxd rax,edx
   1400166a1:	add    rbx,rax
   1400166a4:	jmp    0x140016703
   1400166a6:	mov    rax,QWORD PTR [r8+r15*8+0x25a80]
   1400166ae:	test   BYTE PTR [rax+rsi*1+0x8],0x48
   1400166b3:	je     0x1400166f0
   1400166b5:	inc    rbx
   1400166b8:	mov    BYTE PTR [rax+rsi*1+0x9],cl
   1400166bc:	cmp    edx,0x2
   1400166bf:	jl     0x1400166d2
   1400166c1:	mov    al,BYTE PTR [rbx]
   1400166c3:	mov    rcx,QWORD PTR [r8+r15*8+0x25a80]
   1400166cb:	inc    rbx
   1400166ce:	mov    BYTE PTR [rcx+rsi*1+0x39],al
   1400166d2:	cmp    edx,0x3
   1400166d5:	jne    0x1400166e8
   1400166d7:	mov    al,BYTE PTR [rbx]
   1400166d9:	mov    rcx,QWORD PTR [r8+r15*8+0x25a80]
   1400166e1:	inc    rbx
   1400166e4:	mov    BYTE PTR [rcx+rsi*1+0x3a],al
   1400166e8:	movsxd rax,edx
   1400166eb:	sub    rbx,rax
   1400166ee:	jmp    0x140016703
   1400166f0:	mov    ecx,DWORD PTR [rbp+0x48]
   1400166f3:	neg    edx
   1400166f5:	mov    r8d,0x1
   1400166fb:	movsxd rdx,edx
   1400166fe:	call   0x140015d7c
   140016703:	mov    eax,DWORD PTR [rbp-0x1c]
   140016706:	mov    r13,QWORD PTR [rbp+0x50]
   14001670a:	sub    ebx,r14d
   14001670d:	shr    eax,1
   14001670f:	mov    r9d,ebx
   140016712:	mov    r8,r14
   140016715:	mov    DWORD PTR [rsp+0x28],eax
   140016719:	xor    edx,edx
   14001671b:	mov    ecx,0xfde9
   140016720:	mov    QWORD PTR [rsp+0x20],r13
   140016725:	call   QWORD PTR [rip+0x3a05]        # 0x14001a130
   14001672b:	mov    r12d,eax
   14001672e:	test   eax,eax
   140016730:	jne    0x140016747
   140016732:	call   QWORD PTR [rip+0x3938]        # 0x14001a070
   140016738:	mov    ecx,eax
   14001673a:	call   0x14000be00
   14001673f:	or     ebx,0xffffffff
   140016742:	jmp    0x140016911
   140016747:	cmp    eax,ebx
   140016749:	mov    ebx,DWORD PTR [rbp-0x20]
   14001674c:	lea    rax,[rip+0xfffffffffffe98ad]        # 0x140000000
   140016753:	mov    rax,QWORD PTR [rax+r15*8+0x25a80]
   14001675b:	setne  dil
   14001675f:	add    r12d,r12d
   140016762:	mov    DWORD PTR [rax+rsi*1+0x48],edi
   140016766:	jmp    0x140016911
   14001676b:	test   edx,edx
   14001676d:	mov    edx,0xa
   140016772:	je     0x140016781
   140016774:	cmp    WORD PTR [r14],dx
   140016778:	jne    0x140016781
   14001677a:	or     BYTE PTR [rax+rsi*1+0x8],0x4
   14001677f:	jmp    0x140016786
   140016781:	and    BYTE PTR [rax+rsi*1+0x8],0xfb
   140016786:	movsxd rax,r12d
   140016789:	mov    rbx,r14
   14001678c:	mov    r13,r14
   14001678f:	add    rax,r14
   140016792:	mov    QWORD PTR [rbp+0x60],rax
   140016796:	cmp    r14,rax
   140016799:	jae    0x140016904
   14001679f:	mov    r12d,0xd
   1400167a5:	movzx  eax,WORD PTR [r13+0x0]
   1400167aa:	cmp    ax,0x1a
   1400167ae:	je     0x1400168e2
   1400167b4:	cmp    ax,r12w
   1400167b8:	je     0x1400167ca
   1400167ba:	mov    WORD PTR [rbx],ax
   1400167bd:	add    rbx,0x2
   1400167c1:	add    r13,0x2
   1400167c5:	jmp    0x1400168d6
   1400167ca:	mov    rax,QWORD PTR [rbp+0x60]
   1400167ce:	add    rax,0xfffffffffffffffe
   1400167d2:	cmp    r13,rax
   1400167d5:	jae    0x1400167f1
   1400167d7:	lea    rax,[r13+0x2]
   1400167db:	cmp    WORD PTR [rax],dx
   1400167de:	jne    0x1400167e9
   1400167e0:	add    r13,0x4
   1400167e4:	jmp    0x140016896
   1400167e9:	mov    r13,rax
   1400167ec:	jmp    0x1400168ce
   1400167f1:	mov    rcx,QWORD PTR [r8+r15*8+0x25a80]
   1400167f9:	lea    r9,[rbp-0x24]
   1400167fd:	lea    rdx,[rbp-0x28]
   140016801:	mov    rcx,QWORD PTR [rcx+rsi*1]
   140016805:	mov    r8d,0x2
   14001680b:	add    r13,0x2
   14001680f:	mov    QWORD PTR [rsp+0x20],rdi
   140016814:	call   QWORD PTR [rip+0x3ade]        # 0x14001a2f8
   14001681a:	test   eax,eax
   14001681c:	jne    0x14001682c
   14001681e:	call   QWORD PTR [rip+0x384c]        # 0x14001a070
   140016824:	test   eax,eax
   140016826:	jne    0x1400168c2
   14001682c:	cmp    DWORD PTR [rbp-0x24],edi
   14001682f:	je     0x1400168c2
   140016835:	lea    r8,[rip+0xfffffffffffe97c4]        # 0x140000000
   14001683c:	mov    rax,QWORD PTR [r8+r15*8+0x25a80]
   140016844:	test   BYTE PTR [rax+rsi*1+0x8],0x48
   140016849:	je     0x140016886
   14001684b:	mov    edx,0xa
   140016850:	cmp    WORD PTR [rbp-0x28],dx
   140016854:	je     0x140016896
   140016856:	mov    WORD PTR [rbx],r12w
   14001685a:	mov    al,BYTE PTR [rbp-0x28]
   14001685d:	mov    rcx,QWORD PTR [r8+r15*8+0x25a80]
   140016865:	mov    BYTE PTR [rcx+rsi*1+0x9],al
   140016869:	mov    al,BYTE PTR [rbp-0x27]
   14001686c:	mov    rcx,QWORD PTR [r8+r15*8+0x25a80]
   140016874:	mov    BYTE PTR [rcx+rsi*1+0x39],al
   140016878:	mov    rax,QWORD PTR [r8+r15*8+0x25a80]
   140016880:	mov    BYTE PTR [rax+rsi*1+0x3a],dl
   140016884:	jmp    0x1400168d2
   140016886:	cmp    rbx,r14
   140016889:	jne    0x14001689b
   14001688b:	mov    edx,0xa
   140016890:	cmp    WORD PTR [rbp-0x28],dx
   140016894:	jne    0x14001689b
   140016896:	mov    WORD PTR [rbx],dx
   140016899:	jmp    0x1400168d2
   14001689b:	mov    ecx,DWORD PTR [rbp+0x48]
   14001689e:	mov    rdx,0xfffffffffffffffe
   1400168a5:	lea    r8d,[rdx+0x3]
   1400168a9:	call   0x140015d7c
   1400168ae:	mov    edx,0xa
   1400168b3:	lea    r8,[rip+0xfffffffffffe9746]        # 0x140000000
   1400168ba:	cmp    WORD PTR [rbp-0x28],dx
   1400168be:	je     0x1400168d6
   1400168c0:	jmp    0x1400168ce
   1400168c2:	mov    edx,0xa
   1400168c7:	lea    r8,[rip+0xfffffffffffe9732]        # 0x140000000
   1400168ce:	mov    WORD PTR [rbx],r12w
   1400168d2:	add    rbx,0x2
   1400168d6:	cmp    r13,QWORD PTR [rbp+0x60]
   1400168da:	jb     0x1400167a5
   1400168e0:	jmp    0x140016904
   1400168e2:	mov    rax,QWORD PTR [r8+r15*8+0x25a80]
   1400168ea:	test   BYTE PTR [rax+rsi*1+0x8],0x40
   1400168ef:	jne    0x1400168f8
   1400168f1:	or     BYTE PTR [rax+rsi*1+0x8],0x2
   1400168f6:	jmp    0x140016904
   1400168f8:	movzx  eax,WORD PTR [r13+0x0]
   1400168fd:	mov    WORD PTR [rbx],ax
   140016900:	add    rbx,0x2
   140016904:	mov    r12d,ebx
   140016907:	sub    r12d,r14d
   14001690a:	mov    ebx,DWORD PTR [rbp-0x20]
   14001690d:	mov    r13,QWORD PTR [rbp+0x50]
   140016911:	cmp    r14,r13
   140016914:	je     0x14001691e
   140016916:	mov    rcx,r14
   140016919:	call   0x14000b460
   14001691e:	cmp    ebx,0xfffffffe
   140016921:	cmove  ebx,r12d
   140016925:	mov    eax,ebx
   140016927:	jmp    0x140016982
   140016929:	call   QWORD PTR [rip+0x3741]        # 0x14001a070
   14001692f:	cmp    eax,0x5
   140016932:	jne    0x14001694f
   140016934:	call   0x14000bdc0
   140016939:	mov    DWORD PTR [rax],0x9
   14001693f:	call   0x14000bde0
   140016944:	mov    DWORD PTR [rax],0x5
   14001694a:	jmp    0x140016690
   14001694f:	cmp    eax,0x6d
   140016952:	jne    0x140016958
   140016954:	mov    ebx,edi
   140016956:	jmp    0x14001690d
   140016958:	mov    ecx,eax
   14001695a:	call   0x14000be00
   14001695f:	jmp    0x140016690
   140016964:	xor    eax,eax
   140016966:	jmp    0x140016982
   140016968:	call   0x14000bde0
   14001696d:	mov    DWORD PTR [rax],edi
   14001696f:	call   0x14000bdc0
   140016974:	mov    DWORD PTR [rax],0x9
   14001697a:	call   0x14000d01c
   14001697f:	or     eax,0xffffffff
   140016982:	add    rsp,0x58
   140016986:	pop    r15
   140016988:	pop    r14
   14001698a:	pop    r13
   14001698c:	pop    r12
   14001698e:	pop    rdi
   14001698f:	pop    rsi
   140016990:	pop    rbx
   140016991:	pop    rbp
   140016992:	ret    
   140016993:	int3   
   140016994:	mov    QWORD PTR [rsp+0x10],rbx
   140016999:	mov    QWORD PTR [rsp+0x18],rsi
   14001699e:	mov    DWORD PTR [rsp+0x8],ecx
   1400169a2:	push   rdi
   1400169a3:	push   r12
   1400169a5:	push   r13
   1400169a7:	push   r14
   1400169a9:	push   r15
   1400169ab:	sub    rsp,0x20
   1400169af:	mov    esi,r8d
   1400169b2:	mov    r13,rdx
   1400169b5:	movsxd rdi,ecx
   1400169b8:	cmp    edi,0xfffffffe
   1400169bb:	jne    0x1400169d6
   1400169bd:	call   0x14000bde0
   1400169c2:	xor    ebx,ebx
   1400169c4:	mov    DWORD PTR [rax],ebx
   1400169c6:	call   0x14000bdc0
   1400169cb:	mov    DWORD PTR [rax],0x9
   1400169d1:	jmp    0x140016a94
   1400169d6:	xor    ebx,ebx
   1400169d8:	test   ecx,ecx
   1400169da:	js     0x140016a7d
   1400169e0:	cmp    edi,DWORD PTR [rip+0xf086]        # 0x140025a6c
   1400169e6:	jae    0x140016a7d
   1400169ec:	mov    r12,rdi
   1400169ef:	mov    r14,rdi
   1400169f2:	sar    r14,0x5
   1400169f6:	lea    r15,[rip+0xf083]        # 0x140025a80
   1400169fd:	and    r12d,0x1f
   140016a01:	imul   r12,r12,0x58
   140016a05:	mov    rax,QWORD PTR [r15+r14*8]
   140016a09:	movsx  ecx,BYTE PTR [rax+r12*1+0x8]
   140016a0f:	and    ecx,0x1
   140016a12:	je     0x140016a7d
   140016a14:	mov    eax,ebx
   140016a16:	cmp    r8d,0x7fffffff
   140016a1d:	setbe  al
   140016a20:	test   eax,eax
   140016a22:	jne    0x140016a38
   140016a24:	call   0x14000bde0
   140016a29:	mov    DWORD PTR [rax],ebx
   140016a2b:	call   0x14000bdc0
   140016a30:	mov    DWORD PTR [rax],0x16
   140016a36:	jmp    0x140016a8f
   140016a38:	mov    ecx,edi
   140016a3a:	call   0x1400116d4
   140016a3f:	nop
   140016a40:	mov    rax,QWORD PTR [r15+r14*8]
   140016a44:	test   BYTE PTR [rax+r12*1+0x8],0x1
   140016a4a:	je     0x140016a5d
   140016a4c:	mov    r8d,esi
   140016a4f:	mov    rdx,r13
   140016a52:	mov    ecx,edi
   140016a54:	call   0x140016270
   140016a59:	mov    ebx,eax
   140016a5b:	jmp    0x140016a72
   140016a5d:	call   0x14000bdc0
   140016a62:	mov    DWORD PTR [rax],0x9
   140016a68:	call   0x14000bde0
   140016a6d:	mov    DWORD PTR [rax],ebx
   140016a6f:	or     ebx,0xffffffff
   140016a72:	mov    ecx,edi
   140016a74:	call   0x14001177c
   140016a79:	mov    eax,ebx
   140016a7b:	jmp    0x140016a97
   140016a7d:	call   0x14000bde0
   140016a82:	mov    DWORD PTR [rax],ebx
   140016a84:	call   0x14000bdc0
   140016a89:	mov    DWORD PTR [rax],0x9
   140016a8f:	call   0x14000d01c
   140016a94:	or     eax,0xffffffff
   140016a97:	mov    rbx,QWORD PTR [rsp+0x58]
   140016a9c:	mov    rsi,QWORD PTR [rsp+0x60]
   140016aa1:	add    rsp,0x20
   140016aa5:	pop    r15
   140016aa7:	pop    r14
   140016aa9:	pop    r13
   140016aab:	pop    r12
   140016aad:	pop    rdi
   140016aae:	ret    
   140016aaf:	int3   
   140016ab0:	mov    rax,rsp
   140016ab3:	mov    QWORD PTR [rax+0x8],rbx
   140016ab7:	mov    QWORD PTR [rax+0x10],rsi
   140016abb:	mov    QWORD PTR [rax+0x18],rdi
   140016abf:	mov    QWORD PTR [rax+0x20],r12
   140016ac3:	push   rbp
   140016ac4:	mov    rbp,rsp
   140016ac7:	sub    rsp,0x40
   140016acb:	mov    rdi,rcx
   140016ace:	mov    rsi,rdx
   140016ad1:	lea    rcx,[rbp-0x20]
   140016ad5:	mov    rdx,r9
   140016ad8:	mov    rbx,r8
   140016adb:	call   0x14000c6f4
   140016ae0:	xor    r12d,r12d
   140016ae3:	test   rbx,rbx
   140016ae6:	jne    0x140016b00
   140016ae8:	cmp    BYTE PTR [rbp-0x8],r12b
   140016aec:	je     0x140016af9
   140016aee:	mov    rax,QWORD PTR [rbp-0x10]
   140016af2:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140016af9:	xor    eax,eax
   140016afb:	jmp    0x140016c7c
   140016b00:	mov    rcx,QWORD PTR [rbp-0x18]
   140016b04:	cmp    DWORD PTR [rcx+0x8],r12d
   140016b08:	jne    0x140016b1d
   140016b0a:	mov    r8,rbx
   140016b0d:	mov    rdx,rsi
   140016b10:	mov    rcx,rdi
   140016b13:	call   0x1400194dc
   140016b18:	jmp    0x140016c6b
   140016b1d:	test   rdi,rdi
   140016b20:	jne    0x140016b4d
   140016b22:	call   0x14000bdc0
   140016b27:	mov    DWORD PTR [rax],0x16
   140016b2d:	call   0x14000d01c
   140016b32:	cmp    BYTE PTR [rbp-0x8],r12b
   140016b36:	je     0x140016b43
   140016b38:	mov    rax,QWORD PTR [rbp-0x10]
   140016b3c:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140016b43:	mov    eax,0x7fffffff
   140016b48:	jmp    0x140016c7c
   140016b4d:	test   rsi,rsi
   140016b50:	je     0x140016b22
   140016b52:	mov    r9b,0x4
   140016b55:	movzx  edx,BYTE PTR [rdi]
   140016b58:	dec    rbx
   140016b5b:	inc    rdi
   140016b5e:	test   BYTE PTR [rdx+rcx*1+0x1d],r9b
   140016b63:	je     0x140016bbc
   140016b65:	test   rbx,rbx
   140016b68:	jne    0x140016b81
   140016b6a:	movzx  eax,BYTE PTR [rsi]
   140016b6d:	movzx  edx,r12w
   140016b71:	test   BYTE PTR [rax+rcx*1+0x1d],r9b
   140016b76:	jne    0x140016ae8
   140016b7c:	jmp    0x140016c48
   140016b81:	cmp    BYTE PTR [rdi],r12b
   140016b84:	jne    0x140016b8b
   140016b86:	mov    edx,r12d
   140016b89:	jmp    0x140016bce
   140016b8b:	movzx  eax,BYTE PTR [rdi]
   140016b8e:	shl    dx,0x8
   140016b92:	inc    rdi
   140016b95:	or     dx,ax
   140016b98:	cmp    dx,WORD PTR [rcx+0x10]
   140016b9c:	jb     0x140016baa
   140016b9e:	cmp    dx,WORD PTR [rcx+0x12]
   140016ba2:	ja     0x140016baa
   140016ba4:	add    dx,WORD PTR [rcx+0x14]
   140016ba8:	jmp    0x140016bce
   140016baa:	cmp    dx,WORD PTR [rcx+0x16]
   140016bae:	jb     0x140016bce
   140016bb0:	cmp    dx,WORD PTR [rcx+0x18]
   140016bb4:	ja     0x140016bce
   140016bb6:	add    dx,WORD PTR [rcx+0x1a]
   140016bba:	jmp    0x140016bce
   140016bbc:	movzx  eax,dx
   140016bbf:	test   BYTE PTR [rax+rcx*1+0x1d],0x10
   140016bc4:	je     0x140016bce
   140016bc6:	movzx  edx,BYTE PTR [rax+rcx*1+0x11d]
   140016bce:	movzx  r8d,BYTE PTR [rsi]
   140016bd2:	inc    rsi
   140016bd5:	mov    eax,r8d
   140016bd8:	test   BYTE PTR [r8+rcx*1+0x1d],r9b
   140016bdd:	je     0x140016c2f
   140016bdf:	test   rbx,rbx
   140016be2:	jne    0x140016be9
   140016be4:	mov    eax,r12d
   140016be7:	jmp    0x140016c48
   140016be9:	dec    rbx
   140016bec:	cmp    BYTE PTR [rsi],r12b
   140016bef:	jne    0x140016bf7
   140016bf1:	movzx  eax,r12w
   140016bf5:	jmp    0x140016c48
   140016bf7:	movzx  eax,BYTE PTR [rsi]
   140016bfa:	shl    r8w,0x8
   140016bff:	inc    rsi
   140016c02:	or     r8w,ax
   140016c06:	movzx  eax,r8w
   140016c0a:	cmp    r8w,WORD PTR [rcx+0x10]
   140016c0f:	jb     0x140016c1d
   140016c11:	cmp    ax,WORD PTR [rcx+0x12]
   140016c15:	ja     0x140016c1d
   140016c17:	add    ax,WORD PTR [rcx+0x14]
   140016c1b:	jmp    0x140016c48
   140016c1d:	cmp    ax,WORD PTR [rcx+0x16]
   140016c21:	jb     0x140016c48
   140016c23:	cmp    ax,WORD PTR [rcx+0x18]
   140016c27:	ja     0x140016c48
   140016c29:	add    ax,WORD PTR [rcx+0x1a]
   140016c2d:	jmp    0x140016c48
   140016c2f:	movzx  eax,r8w
   140016c33:	test   BYTE PTR [rax+rcx*1+0x1d],0x10
   140016c38:	je     0x140016c44
   140016c3a:	movzx  eax,BYTE PTR [rax+rcx*1+0x11d]
   140016c42:	jmp    0x140016c48
   140016c44:	movzx  eax,r8w
   140016c48:	cmp    ax,dx
   140016c4b:	jne    0x140016c64
   140016c4d:	test   dx,dx
   140016c50:	je     0x140016ae8
   140016c56:	test   rbx,rbx
   140016c59:	jne    0x140016b55
   140016c5f:	jmp    0x140016ae8
   140016c64:	sbb    eax,eax
   140016c66:	and    eax,0x2
   140016c69:	dec    eax
   140016c6b:	cmp    BYTE PTR [rbp-0x8],r12b
   140016c6f:	je     0x140016c7c
   140016c71:	mov    rcx,QWORD PTR [rbp-0x10]
   140016c75:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140016c7c:	mov    rbx,QWORD PTR [rsp+0x50]
   140016c81:	mov    rsi,QWORD PTR [rsp+0x58]
   140016c86:	mov    rdi,QWORD PTR [rsp+0x60]
   140016c8b:	mov    r12,QWORD PTR [rsp+0x68]
   140016c90:	add    rsp,0x40
   140016c94:	pop    rbp
   140016c95:	ret    
   140016c96:	int3   
   140016c97:	int3   
   140016c98:	xor    r9d,r9d
   140016c9b:	jmp    0x140016ab0
   140016ca0:	mov    rax,rsp
   140016ca3:	mov    QWORD PTR [rax+0x8],rbx
   140016ca7:	mov    QWORD PTR [rax+0x10],rsi
   140016cab:	mov    QWORD PTR [rax+0x18],rdi
   140016caf:	mov    QWORD PTR [rax+0x20],r12
   140016cb3:	push   rbp
   140016cb4:	mov    rbp,rsp
   140016cb7:	sub    rsp,0x40
   140016cbb:	xor    r12d,r12d
   140016cbe:	mov    rbx,r8
   140016cc1:	mov    rsi,rdx
   140016cc4:	mov    rdi,rcx
   140016cc7:	test   r8,r8
   140016cca:	jne    0x140016cd3
   140016ccc:	xor    eax,eax
   140016cce:	jmp    0x140016de6
   140016cd3:	lea    rcx,[rbp-0x20]
   140016cd7:	mov    rdx,r9
   140016cda:	call   0x14000c6f4
   140016cdf:	mov    r11,QWORD PTR [rbp-0x18]
   140016ce3:	cmp    DWORD PTR [r11+0x8],r12d
   140016ce7:	jne    0x140016cfc
   140016ce9:	mov    r8,rbx
   140016cec:	mov    rdx,rsi
   140016cef:	mov    rcx,rdi
   140016cf2:	call   0x14000b570
   140016cf7:	jmp    0x140016dd5
   140016cfc:	test   rdi,rdi
   140016cff:	jne    0x140016d2c
   140016d01:	call   0x14000bdc0
   140016d06:	mov    DWORD PTR [rax],0x16
   140016d0c:	call   0x14000d01c
   140016d11:	cmp    BYTE PTR [rbp-0x8],r12b
   140016d15:	je     0x140016d22
   140016d17:	mov    rax,QWORD PTR [rbp-0x10]
   140016d1b:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140016d22:	mov    eax,0x7fffffff
   140016d27:	jmp    0x140016de6
   140016d2c:	test   rsi,rsi
   140016d2f:	je     0x140016d01
   140016d31:	mov    r8b,0x4
   140016d34:	movzx  ecx,BYTE PTR [rdi]
   140016d37:	dec    rbx
   140016d3a:	inc    rdi
   140016d3d:	test   BYTE PTR [rcx+r11*1+0x1d],r8b
   140016d42:	je     0x140016d73
   140016d44:	test   rbx,rbx
   140016d47:	jne    0x140016d5b
   140016d49:	movzx  eax,BYTE PTR [rsi]
   140016d4c:	mov    ecx,r12d
   140016d4f:	test   BYTE PTR [rax+r11*1+0x1d],r8b
   140016d54:	jne    0x140016db4
   140016d56:	movzx  edx,ax
   140016d59:	jmp    0x140016da5
   140016d5b:	cmp    BYTE PTR [rdi],r12b
   140016d5e:	jne    0x140016d66
   140016d60:	movzx  ecx,r12w
   140016d64:	jmp    0x140016d73
   140016d66:	movzx  eax,BYTE PTR [rdi]
   140016d69:	shl    cx,0x8
   140016d6d:	or     cx,ax
   140016d70:	inc    rdi
   140016d73:	movzx  edx,BYTE PTR [rsi]
   140016d76:	inc    rsi
   140016d79:	test   BYTE PTR [rdx+r11*1+0x1d],r8b
   140016d7e:	je     0x140016da5
   140016d80:	test   rbx,rbx
   140016d83:	jne    0x140016d8a
   140016d85:	mov    edx,r12d
   140016d88:	jmp    0x140016da5
   140016d8a:	dec    rbx
   140016d8d:	cmp    BYTE PTR [rsi],r12b
   140016d90:	jne    0x140016d98
   140016d92:	movzx  edx,r12w
   140016d96:	jmp    0x140016da5
   140016d98:	movzx  eax,BYTE PTR [rsi]
   140016d9b:	shl    dx,0x8
   140016d9f:	or     dx,ax
   140016da2:	inc    rsi
   140016da5:	cmp    dx,cx
   140016da8:	jne    0x140016dce
   140016daa:	test   cx,cx
   140016dad:	je     0x140016db4
   140016daf:	test   rbx,rbx
   140016db2:	jne    0x140016d34
   140016db4:	cmp    BYTE PTR [rbp-0x8],r12b
   140016db8:	je     0x140016ccc
   140016dbe:	mov    rax,QWORD PTR [rbp-0x10]
   140016dc2:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140016dc9:	jmp    0x140016ccc
   140016dce:	sbb    eax,eax
   140016dd0:	and    eax,0x2
   140016dd3:	dec    eax
   140016dd5:	cmp    BYTE PTR [rbp-0x8],r12b
   140016dd9:	je     0x140016de6
   140016ddb:	mov    rcx,QWORD PTR [rbp-0x10]
   140016ddf:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140016de6:	mov    rbx,QWORD PTR [rsp+0x50]
   140016deb:	mov    rsi,QWORD PTR [rsp+0x58]
   140016df0:	mov    rdi,QWORD PTR [rsp+0x60]
   140016df5:	mov    r12,QWORD PTR [rsp+0x68]
   140016dfa:	add    rsp,0x40
   140016dfe:	pop    rbp
   140016dff:	ret    
   140016e00:	xor    r9d,r9d
   140016e03:	jmp    0x140016ca0
   140016e08:	mov    WORD PTR [rsp+0x8],cx
   140016e0d:	sub    rsp,0x38
   140016e11:	mov    rcx,QWORD PTR [rip+0xd8f0]        # 0x140024708
   140016e18:	cmp    rcx,0xfffffffffffffffe
   140016e1c:	jne    0x140016e2a
   140016e1e:	call   0x14001952c
   140016e23:	mov    rcx,QWORD PTR [rip+0xd8de]        # 0x140024708
   140016e2a:	cmp    rcx,0xffffffffffffffff
   140016e2e:	jne    0x140016e37
   140016e30:	mov    eax,0xffff
   140016e35:	jmp    0x140016e5c
   140016e37:	and    QWORD PTR [rsp+0x20],0x0
   140016e3d:	lea    r9,[rsp+0x48]
   140016e42:	lea    rdx,[rsp+0x40]
   140016e47:	mov    r8d,0x1
   140016e4d:	call   QWORD PTR [rip+0x34ad]        # 0x14001a300
   140016e53:	test   eax,eax
   140016e55:	je     0x140016e30
   140016e57:	movzx  eax,WORD PTR [rsp+0x40]
   140016e5c:	add    rsp,0x38
   140016e60:	ret    
   140016e61:	int3   
   140016e62:	int3   
   140016e63:	int3   
   140016e64:	int3   
   140016e65:	int3   
   140016e66:	int3   
   140016e67:	int3   
   140016e68:	int3   
   140016e69:	int3   
   140016e6a:	int3   
   140016e6b:	int3   
   140016e6c:	int3   
   140016e6d:	int3   
   140016e6e:	int3   
   140016e6f:	int3   
   140016e70:	int3   
   140016e71:	int3   
   140016e72:	int3   
   140016e73:	int3   
   140016e74:	int3   
   140016e75:	int3   
   140016e76:	data16 nop WORD PTR [rax+rax*1+0x0]
   140016e80:	sub    rsp,0x10
   140016e84:	mov    QWORD PTR [rsp],r10
   140016e88:	mov    QWORD PTR [rsp+0x8],r11
   140016e8d:	xor    r11,r11
   140016e90:	lea    r10,[rsp+0x18]
   140016e95:	sub    r10,rax
   140016e98:	cmovb  r10,r11
   140016e9c:	mov    r11,QWORD PTR gs:0x10
   140016ea5:	cmp    r10,r11
   140016ea8:	jae    0x140016ec0
   140016eaa:	and    r10w,0xf000
   140016eb0:	lea    r11,[r11-0x1000]
   140016eb7:	mov    BYTE PTR [r11],0x0
   140016ebb:	cmp    r10,r11
   140016ebe:	jne    0x140016eb0
   140016ec0:	mov    r10,QWORD PTR [rsp]
   140016ec4:	mov    r11,QWORD PTR [rsp+0x8]
   140016ec9:	add    rsp,0x10
   140016ecd:	ret    
   140016ece:	int3   
   140016ecf:	int3   
   140016ed0:	rex push rbx
   140016ed2:	sub    rsp,0x30
   140016ed6:	mov    rax,QWORD PTR [rip+0xc1e3]        # 0x1400230c0
   140016edd:	xor    rax,rsp
   140016ee0:	mov    QWORD PTR [rsp+0x28],rax
   140016ee5:	test   ecx,ecx
   140016ee7:	jne    0x140016ef0
   140016ee9:	mov    eax,0x1
   140016eee:	jmp    0x140016f21
   140016ef0:	add    cx,0x40
   140016ef4:	mov    eax,0x3a
   140016ef9:	mov    DWORD PTR [rsp+0x24],0x5c
   140016f01:	mov    WORD PTR [rsp+0x20],cx
   140016f06:	lea    rcx,[rsp+0x20]
   140016f0b:	mov    WORD PTR [rsp+0x22],ax
   140016f10:	call   QWORD PTR [rip+0x33f2]        # 0x14001a308
   140016f16:	test   eax,eax
   140016f18:	je     0x140016f1f
   140016f1a:	cmp    eax,0x1
   140016f1d:	jne    0x140016ee9
   140016f1f:	xor    eax,eax
   140016f21:	mov    rcx,QWORD PTR [rsp+0x28]
   140016f26:	xor    rcx,rsp
   140016f29:	call   0x14000a820
   140016f2e:	add    rsp,0x30
   140016f32:	pop    rbx
   140016f33:	ret    
   140016f34:	mov    QWORD PTR [rsp+0x10],rbx
   140016f39:	push   rbp
   140016f3a:	push   rsi
   140016f3b:	push   rdi
   140016f3c:	sub    rsp,0x20
   140016f40:	mov    esi,r8d
   140016f43:	mov    rbx,rdx
   140016f46:	mov    edi,ecx
   140016f48:	test   ecx,ecx
   140016f4a:	je     0x140016f75
   140016f4c:	call   0x140016ed0
   140016f51:	test   eax,eax
   140016f53:	jne    0x140016f7c
   140016f55:	call   0x14000bde0
   140016f5a:	mov    DWORD PTR [rax],0xf
   140016f60:	call   0x14000bdc0
   140016f65:	mov    DWORD PTR [rax],0xd
   140016f6b:	call   0x14000d01c
   140016f70:	jmp    0x140017050
   140016f75:	call   0x140013408
   140016f7a:	mov    edi,eax
   140016f7c:	test   rbx,rbx
   140016f7f:	je     0x140016f99
   140016f81:	test   esi,esi
   140016f83:	jg     0x140016f92
   140016f85:	call   0x14000bdc0
   140016f8a:	mov    DWORD PTR [rax],0x16
   140016f90:	jmp    0x140016f6b
   140016f92:	mov    ebp,esi
   140016f94:	mov    BYTE PTR [rbx],0x0
   140016f97:	jmp    0x140016f9b
   140016f99:	xor    ebp,ebp
   140016f9b:	test   edi,edi
   140016f9d:	je     0x140016fb6
   140016f9f:	add    dil,0x40
   140016fa3:	mov    WORD PTR [rsp+0x41],0x2e3a
   140016faa:	mov    BYTE PTR [rsp+0x43],0x0
   140016faf:	mov    BYTE PTR [rsp+0x40],dil
   140016fb4:	jmp    0x140016fbd
   140016fb6:	mov    WORD PTR [rsp+0x40],0x2e
   140016fbd:	lea    r9,[rsp+0x58]
   140016fc2:	lea    rcx,[rsp+0x40]
   140016fc7:	mov    r8,rbx
   140016fca:	mov    edx,ebp
   140016fcc:	call   QWORD PTR [rip+0x32ae]        # 0x14001a280
   140016fd2:	test   eax,eax
   140016fd4:	je     0x140017043
   140016fd6:	test   rbx,rbx
   140016fd9:	je     0x140016ff4
   140016fdb:	cmp    eax,ebp
   140016fdd:	jge    0x140016fe4
   140016fdf:	mov    rax,rbx
   140016fe2:	jmp    0x140017052
   140016fe4:	call   0x14000bdc0
   140016fe9:	mov    DWORD PTR [rax],0x22
   140016fef:	mov    BYTE PTR [rbx],0x0
   140016ff2:	jmp    0x140017050
   140016ff4:	cmp    eax,esi
   140016ff6:	mov    edx,0x1
   140016ffb:	cmovg  esi,eax
   140016ffe:	movsxd rcx,esi
   140017001:	call   0x14000eb14
   140017006:	mov    rbx,rax
   140017009:	test   rax,rax
   14001700c:	jne    0x140017026
   14001700e:	call   0x14000bdc0
   140017013:	mov    DWORD PTR [rax],0xc
   140017019:	call   0x14000bde0
   14001701e:	mov    DWORD PTR [rax],0x8
   140017024:	jmp    0x140017050
   140017026:	lea    r9,[rsp+0x58]
   14001702b:	lea    rcx,[rsp+0x40]
   140017030:	mov    r8,rax
   140017033:	mov    edx,esi
   140017035:	call   QWORD PTR [rip+0x3245]        # 0x14001a280
   14001703b:	test   eax,eax
   14001703d:	je     0x140017043
   14001703f:	cmp    eax,esi
   140017041:	jl     0x140016fdf
   140017043:	call   QWORD PTR [rip+0x3027]        # 0x14001a070
   140017049:	mov    ecx,eax
   14001704b:	call   0x14000be00
   140017050:	xor    eax,eax
   140017052:	mov    rbx,QWORD PTR [rsp+0x48]
   140017057:	add    rsp,0x20
   14001705b:	pop    rdi
   14001705c:	pop    rsi
   14001705d:	pop    rbp
   14001705e:	ret    
   14001705f:	int3   
   140017060:	mov    QWORD PTR [rsp+0x8],rbx
   140017065:	push   rdi
   140017066:	sub    rsp,0x20
   14001706a:	mov    ebx,edx
   14001706c:	mov    rdi,rcx
   14001706f:	mov    ecx,0x7
   140017074:	call   0x14000cb28
   140017079:	nop
   14001707a:	mov    r8d,ebx
   14001707d:	mov    rdx,rdi
   140017080:	xor    ecx,ecx
   140017082:	call   0x140016f34
   140017087:	mov    rbx,rax
   14001708a:	mov    ecx,0x7
   14001708f:	call   0x14000ca28
   140017094:	mov    rax,rbx
   140017097:	mov    rbx,QWORD PTR [rsp+0x30]
   14001709c:	add    rsp,0x20
   1400170a0:	pop    rdi
   1400170a1:	ret    
   1400170a2:	int3   
   1400170a3:	int3   
   1400170a4:	mov    QWORD PTR [rsp+0x10],rbx
   1400170a9:	mov    QWORD PTR [rsp+0x18],rsi
   1400170ae:	push   rbp
   1400170af:	push   rdi
   1400170b0:	push   r12
   1400170b2:	push   r14
   1400170b4:	push   r15
   1400170b6:	mov    rbp,rsp
   1400170b9:	sub    rsp,0x70
   1400170bd:	mov    rdi,rcx
   1400170c0:	mov    rsi,rdx
   1400170c3:	lea    rcx,[rbp-0x20]
   1400170c7:	mov    rdx,r8
   1400170ca:	call   0x14000c6f4
   1400170cf:	xor    r12d,r12d
   1400170d2:	test   rdi,rdi
   1400170d5:	jne    0x140017102
   1400170d7:	call   0x14000bdc0
   1400170dc:	mov    DWORD PTR [rax],0x16
   1400170e2:	call   0x14000d01c
   1400170e7:	cmp    BYTE PTR [rbp-0x8],r12b
   1400170eb:	je     0x1400170f8
   1400170ed:	mov    rax,QWORD PTR [rbp-0x10]
   1400170f1:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400170f8:	mov    eax,0x7fffffff
   1400170fd:	jmp    0x140017296
   140017102:	test   rsi,rsi
   140017105:	je     0x1400170d7
   140017107:	mov    rdx,QWORD PTR [rbp-0x18]
   14001710b:	cmp    DWORD PTR [rdx+0x8],r12d
   14001710f:	jne    0x140017125
   140017111:	lea    r8,[rbp-0x20]
   140017115:	mov    rdx,rsi
   140017118:	mov    rcx,rdi
   14001711b:	call   0x1400195c8
   140017120:	jmp    0x140017285
   140017125:	mov    r14d,0x2
   14001712b:	mov    r15d,0x100
   140017131:	movzx  ebx,BYTE PTR [rdi]
   140017134:	inc    rdi
   140017137:	test   BYTE PTR [rbx+rdx*1+0x1d],0x4
   14001713c:	je     0x1400171ae
   14001713e:	cmp    BYTE PTR [rdi],r12b
   140017141:	jne    0x140017149
   140017143:	movzx  ebx,r12w
   140017147:	jmp    0x1400171c0
   140017149:	mov    eax,DWORD PTR [rdx+0x4]
   14001714c:	mov    edx,DWORD PTR [rdx+0xc]
   14001714f:	mov    DWORD PTR [rsp+0x40],0x1
   140017157:	mov    DWORD PTR [rsp+0x38],eax
   14001715b:	lea    rax,[rbp+0x30]
   14001715f:	mov    DWORD PTR [rsp+0x30],r14d
   140017164:	mov    QWORD PTR [rsp+0x28],rax
   140017169:	lea    r9,[rdi-0x1]
   14001716d:	lea    rcx,[rbp-0x20]
   140017171:	mov    r8d,0x200
   140017177:	mov    DWORD PTR [rsp+0x20],r14d
   14001717c:	call   0x14001862c
   140017181:	cmp    eax,0x1
   140017184:	jne    0x14001718c
   140017186:	movzx  ebx,BYTE PTR [rbp+0x30]
   14001718a:	jmp    0x1400171a5
   14001718c:	cmp    eax,r14d
   14001718f:	jne    0x14001726e
   140017195:	movzx  ebx,BYTE PTR [rbp+0x30]
   140017199:	movzx  eax,BYTE PTR [rbp+0x31]
   14001719d:	imul   bx,r15w
   1400171a2:	add    bx,ax
   1400171a5:	mov    rdx,QWORD PTR [rbp-0x18]
   1400171a9:	inc    rdi
   1400171ac:	jmp    0x1400171c0
   1400171ae:	movzx  eax,bx
   1400171b1:	test   BYTE PTR [rax+rdx*1+0x1d],0x10
   1400171b6:	je     0x1400171c0
   1400171b8:	movzx  ebx,BYTE PTR [rax+rdx*1+0x11d]
   1400171c0:	movzx  ecx,BYTE PTR [rsi]
   1400171c3:	inc    rsi
   1400171c6:	test   BYTE PTR [rcx+rdx*1+0x1d],0x4
   1400171cb:	je     0x140017239
   1400171cd:	cmp    BYTE PTR [rsi],r12b
   1400171d0:	jne    0x1400171d8
   1400171d2:	movzx  ecx,r12w
   1400171d6:	jmp    0x14001724b
   1400171d8:	mov    eax,DWORD PTR [rdx+0x4]
   1400171db:	mov    edx,DWORD PTR [rdx+0xc]
   1400171de:	mov    DWORD PTR [rsp+0x40],0x1
   1400171e6:	mov    DWORD PTR [rsp+0x38],eax
   1400171ea:	lea    rax,[rbp+0x30]
   1400171ee:	mov    DWORD PTR [rsp+0x30],r14d
   1400171f3:	mov    QWORD PTR [rsp+0x28],rax
   1400171f8:	lea    r9,[rsi-0x1]
   1400171fc:	lea    rcx,[rbp-0x20]
   140017200:	mov    r8d,0x200
   140017206:	mov    DWORD PTR [rsp+0x20],r14d
   14001720b:	call   0x14001862c
   140017210:	cmp    eax,0x1
   140017213:	jne    0x14001721b
   140017215:	movzx  ecx,BYTE PTR [rbp+0x30]
   140017219:	jmp    0x140017230
   14001721b:	cmp    eax,r14d
   14001721e:	jne    0x14001726e
   140017220:	movzx  ecx,BYTE PTR [rbp+0x30]
   140017224:	movzx  eax,BYTE PTR [rbp+0x31]
   140017228:	imul   cx,r15w
   14001722d:	add    cx,ax
   140017230:	mov    rdx,QWORD PTR [rbp-0x18]
   140017234:	inc    rsi
   140017237:	jmp    0x14001724b
   140017239:	movzx  eax,cx
   14001723c:	test   BYTE PTR [rax+rdx*1+0x1d],0x10
   140017241:	je     0x14001724b
   140017243:	movzx  ecx,BYTE PTR [rax+rdx*1+0x11d]
   14001724b:	cmp    cx,bx
   14001724e:	jne    0x14001727e
   140017250:	test   bx,bx
   140017253:	jne    0x140017131
   140017259:	cmp    BYTE PTR [rbp-0x8],r12b
   14001725d:	je     0x14001726a
   14001725f:	mov    rax,QWORD PTR [rbp-0x10]
   140017263:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001726a:	xor    eax,eax
   14001726c:	jmp    0x140017296
   14001726e:	call   0x14000bdc0
   140017273:	mov    DWORD PTR [rax],0x16
   140017279:	jmp    0x1400170e7
   14001727e:	sbb    eax,eax
   140017280:	and    eax,r14d
   140017283:	dec    eax
   140017285:	cmp    BYTE PTR [rbp-0x8],r12b
   140017289:	je     0x140017296
   14001728b:	mov    rcx,QWORD PTR [rbp-0x10]
   14001728f:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140017296:	lea    r11,[rsp+0x70]
   14001729b:	mov    rbx,QWORD PTR [r11+0x38]
   14001729f:	mov    rsi,QWORD PTR [r11+0x40]
   1400172a3:	mov    rsp,r11
   1400172a6:	pop    r15
   1400172a8:	pop    r14
   1400172aa:	pop    r12
   1400172ac:	pop    rdi
   1400172ad:	pop    rbp
   1400172ae:	ret    
   1400172af:	int3   
   1400172b0:	xor    r8d,r8d
   1400172b3:	jmp    0x1400170a4
   1400172b8:	mov    QWORD PTR [rsp+0x8],rbx
   1400172bd:	mov    QWORD PTR [rsp+0x10],rsi
   1400172c2:	push   rdi
   1400172c3:	sub    rsp,0x40
   1400172c7:	mov    rbx,rcx
   1400172ca:	mov    esi,edx
   1400172cc:	lea    rcx,[rsp+0x20]
   1400172d1:	mov    rdx,r8
   1400172d4:	xor    edi,edi
   1400172d6:	call   0x14000c6f4
   1400172db:	test   rbx,rbx
   1400172de:	jne    0x140017307
   1400172e0:	call   0x14000bdc0
   1400172e5:	mov    DWORD PTR [rax],0x16
   1400172eb:	call   0x14000d01c
   1400172f0:	cmp    BYTE PTR [rsp+0x38],dil
   1400172f5:	je     0x140017303
   1400172f7:	mov    rax,QWORD PTR [rsp+0x30]
   1400172fc:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140017303:	xor    eax,eax
   140017305:	jmp    0x140017385
   140017307:	mov    r8,QWORD PTR [rsp+0x28]
   14001730c:	cmp    DWORD PTR [r8+0x8],edi
   140017310:	jne    0x140017331
   140017312:	mov    edx,esi
   140017314:	mov    rcx,rbx
   140017317:	call   0x14000bb28
   14001731c:	cmp    BYTE PTR [rsp+0x38],dil
   140017321:	je     0x140017385
   140017323:	mov    rcx,QWORD PTR [rsp+0x30]
   140017328:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001732f:	jmp    0x140017385
   140017331:	movzx  ecx,BYTE PTR [rbx]
   140017334:	mov    edx,ecx
   140017336:	test   BYTE PTR [rcx+r8*1+0x1d],0x4
   14001733c:	je     0x140017363
   14001733e:	inc    rbx
   140017341:	mov    cl,BYTE PTR [rbx]
   140017343:	test   cl,cl
   140017345:	je     0x140017359
   140017347:	shl    edx,0x8
   14001734a:	movzx  eax,cl
   14001734d:	or     edx,eax
   14001734f:	cmp    esi,edx
   140017351:	jne    0x140017369
   140017353:	lea    rdi,[rbx-0x1]
   140017357:	jmp    0x140017369
   140017359:	test   rdi,rdi
   14001735c:	jne    0x140017369
   14001735e:	mov    rdi,rbx
   140017361:	jmp    0x140017369
   140017363:	cmp    esi,ecx
   140017365:	cmove  rdi,rbx
   140017369:	inc    rbx
   14001736c:	test   cl,cl
   14001736e:	jne    0x140017331
   140017370:	cmp    BYTE PTR [rsp+0x38],cl
   140017374:	je     0x140017382
   140017376:	mov    rcx,QWORD PTR [rsp+0x30]
   14001737b:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140017382:	mov    rax,rdi
   140017385:	mov    rbx,QWORD PTR [rsp+0x50]
   14001738a:	mov    rsi,QWORD PTR [rsp+0x58]
   14001738f:	add    rsp,0x40
   140017393:	pop    rdi
   140017394:	ret    
   140017395:	int3   
   140017396:	int3   
   140017397:	int3   
   140017398:	xor    r8d,r8d
   14001739b:	jmp    0x1400172b8
   1400173a0:	mov    rax,rsp
   1400173a3:	mov    QWORD PTR [rax+0x8],rbx
   1400173a7:	mov    QWORD PTR [rax+0x10],rbp
   1400173ab:	mov    QWORD PTR [rax+0x18],rsi
   1400173af:	mov    QWORD PTR [rax+0x20],rdi
   1400173b3:	push   r12
   1400173b5:	sub    rsp,0x20
   1400173b9:	mov    r10,QWORD PTR [r9+0x38]
   1400173bd:	mov    rsi,rdx
   1400173c0:	mov    r12,r8
   1400173c3:	mov    eax,DWORD PTR [r10]
   1400173c6:	mov    rbp,rcx
   1400173c9:	mov    rdx,r9
   1400173cc:	add    rax,rax
   1400173cf:	mov    rcx,rsi
   1400173d2:	mov    rdi,r9
   1400173d5:	lea    rbx,[r10+rax*8+0x4]
   1400173da:	mov    r8,rbx
   1400173dd:	call   0x14000a61c
   1400173e2:	mov    r11d,DWORD PTR [rbx]
   1400173e5:	mov    r10d,DWORD PTR [rbp+0x4]
   1400173e9:	mov    eax,r11d
   1400173ec:	and    r11d,0x2
   1400173f0:	mov    edx,0x1
   1400173f5:	and    eax,edx
   1400173f7:	and    r10b,0x66
   1400173fb:	cmove  r11d,eax
   1400173ff:	test   r11d,r11d
   140017402:	je     0x140017417
   140017404:	mov    r9,rdi
   140017407:	mov    r8,r12
   14001740a:	mov    rdx,rsi
   14001740d:	mov    rcx,rbp
   140017410:	call   0x14000d6f4
   140017415:	mov    edx,eax
   140017417:	mov    rbx,QWORD PTR [rsp+0x30]
   14001741c:	mov    rbp,QWORD PTR [rsp+0x38]
   140017421:	mov    rsi,QWORD PTR [rsp+0x40]
   140017426:	mov    rdi,QWORD PTR [rsp+0x48]
   14001742b:	mov    eax,edx
   14001742d:	add    rsp,0x20
   140017431:	pop    r12
   140017433:	ret    
   140017434:	mov    rax,rsp
   140017437:	mov    QWORD PTR [rax+0x8],rbx
   14001743b:	mov    QWORD PTR [rax+0x10],rbp
   14001743f:	mov    QWORD PTR [rax+0x18],rsi
   140017443:	mov    QWORD PTR [rax+0x20],rdi
   140017447:	push   r12
   140017449:	push   r13
   14001744b:	push   r15
   14001744d:	sub    rsp,0x20
   140017451:	mov    rbp,rdx
   140017454:	xor    edi,edi
   140017456:	xor    edx,edx
   140017458:	lea    r8d,[rdi+0x1]
   14001745c:	mov    esi,ecx
   14001745e:	call   0x140015d7c
   140017463:	mov    r13,rax
   140017466:	cmp    rax,0xffffffffffffffff
   14001746a:	je     0x1400174bc
   14001746c:	lea    r8d,[rdi+0x2]
   140017470:	xor    edx,edx
   140017472:	mov    ecx,esi
   140017474:	call   0x140015d7c
   140017479:	cmp    rax,0xffffffffffffffff
   14001747d:	je     0x1400174bc
   14001747f:	mov    rbx,rbp
   140017482:	sub    rbx,rax
   140017485:	test   rbx,rbx
   140017488:	jle    0x14001754f
   14001748e:	call   QWORD PTR [rip+0x2e84]        # 0x14001a318
   140017494:	mov    r15d,0x1000
   14001749a:	lea    edx,[rdi+0x8]
   14001749d:	mov    rcx,rax
   1400174a0:	mov    r8d,r15d
   1400174a3:	call   QWORD PTR [rip+0x2c4f]        # 0x14001a0f8
   1400174a9:	mov    rbp,rax
   1400174ac:	test   rax,rax
   1400174af:	jne    0x1400174e2
   1400174b1:	call   0x14000bdc0
   1400174b6:	mov    DWORD PTR [rax],0xc
   1400174bc:	call   0x14000bdc0
   1400174c1:	mov    eax,DWORD PTR [rax]
   1400174c3:	mov    rbx,QWORD PTR [rsp+0x40]
   1400174c8:	mov    rbp,QWORD PTR [rsp+0x48]
   1400174cd:	mov    rsi,QWORD PTR [rsp+0x50]
   1400174d2:	mov    rdi,QWORD PTR [rsp+0x58]
   1400174d7:	add    rsp,0x20
   1400174db:	pop    r15
   1400174dd:	pop    r13
   1400174df:	pop    r12
   1400174e1:	ret    
   1400174e2:	mov    edx,0x8000
   1400174e7:	mov    ecx,esi
   1400174e9:	call   0x140017744
   1400174ee:	mov    r12d,eax
   1400174f1:	mov    r8d,ebx
   1400174f4:	cmp    rbx,r15
   1400174f7:	mov    rdx,rbp
   1400174fa:	cmovge r8d,r15d
   1400174fe:	mov    ecx,esi
   140017500:	call   0x1400119ac
   140017505:	cmp    eax,0xffffffff
   140017508:	je     0x140017516
   14001750a:	cdqe   
   14001750c:	sub    rbx,rax
   14001750f:	test   rbx,rbx
   140017512:	jle    0x14001752f
   140017514:	jmp    0x1400174f1
   140017516:	call   0x14000bde0
   14001751b:	cmp    DWORD PTR [rax],0x5
   14001751e:	jne    0x14001752b
   140017520:	call   0x14000bdc0
   140017525:	mov    DWORD PTR [rax],0xd
   14001752b:	or     rdi,0xffffffffffffffff
   14001752f:	mov    edx,r12d
   140017532:	mov    ecx,esi
   140017534:	call   0x140017744
   140017539:	call   QWORD PTR [rip+0x2dd9]        # 0x14001a318
   14001753f:	mov    r8,rbp
   140017542:	mov    rcx,rax
   140017545:	xor    edx,edx
   140017547:	call   QWORD PTR [rip+0x2bbb]        # 0x14001a108
   14001754d:	jmp    0x1400175a4
   14001754f:	jns    0x1400175ae
   140017551:	xor    r8d,r8d
   140017554:	mov    rdx,rbp
   140017557:	mov    ecx,esi
   140017559:	call   0x140015d7c
   14001755e:	cmp    rax,0xffffffffffffffff
   140017562:	je     0x1400174bc
   140017568:	mov    ecx,esi
   14001756a:	call   0x140011660
   14001756f:	mov    rcx,rax
   140017572:	call   QWORD PTR [rip+0x2d98]        # 0x14001a310
   140017578:	neg    eax
   14001757a:	sbb    rdi,rdi
   14001757d:	neg    rdi
   140017580:	dec    rdi
   140017583:	cmp    rdi,0xffffffffffffffff
   140017587:	jne    0x1400175ae
   140017589:	call   0x14000bdc0
   14001758e:	mov    DWORD PTR [rax],0xd
   140017594:	call   0x14000bde0
   140017599:	mov    rbx,rax
   14001759c:	call   QWORD PTR [rip+0x2ace]        # 0x14001a070
   1400175a2:	mov    DWORD PTR [rbx],eax
   1400175a4:	cmp    rdi,0xffffffffffffffff
   1400175a8:	je     0x1400174bc
   1400175ae:	xor    r8d,r8d
   1400175b1:	mov    rdx,r13
   1400175b4:	mov    ecx,esi
   1400175b6:	call   0x140015d7c
   1400175bb:	cmp    rax,0xffffffffffffffff
   1400175bf:	je     0x1400174bc
   1400175c5:	xor    eax,eax
   1400175c7:	jmp    0x1400174c3
   1400175cc:	mov    QWORD PTR [rsp+0x8],rbx
   1400175d1:	mov    QWORD PTR [rsp+0x10],rsi
   1400175d6:	push   rdi
   1400175d7:	sub    rsp,0x20
   1400175db:	movsxd rbx,ecx
   1400175de:	mov    edi,r8d
   1400175e1:	mov    esi,edx
   1400175e3:	mov    ecx,ebx
   1400175e5:	call   0x140011660
   1400175ea:	cmp    rax,0xffffffffffffffff
   1400175ee:	jne    0x140017600
   1400175f0:	call   0x14000bdc0
   1400175f5:	mov    DWORD PTR [rax],0x9
   1400175fb:	or     eax,0xffffffff
   1400175fe:	jmp    0x140017652
   140017600:	mov    r9d,edi
   140017603:	xor    r8d,r8d
   140017606:	mov    edx,esi
   140017608:	mov    rcx,rax
   14001760b:	call   QWORD PTR [rip+0x2cdf]        # 0x14001a2f0
   140017611:	mov    edi,eax
   140017613:	cmp    eax,0xffffffff
   140017616:	jne    0x140017620
   140017618:	call   QWORD PTR [rip+0x2a52]        # 0x14001a070
   14001761e:	jmp    0x140017622
   140017620:	xor    eax,eax
   140017622:	test   eax,eax
   140017624:	je     0x14001762f
   140017626:	mov    ecx,eax
   140017628:	call   0x14000be00
   14001762d:	jmp    0x1400175fb
   14001762f:	mov    rcx,rbx
   140017632:	mov    rax,rbx
   140017635:	lea    rdx,[rip+0xe444]        # 0x140025a80
   14001763c:	sar    rax,0x5
   140017640:	and    ecx,0x1f
   140017643:	mov    rax,QWORD PTR [rdx+rax*8]
   140017647:	imul   rcx,rcx,0x58
   14001764b:	and    BYTE PTR [rax+rcx*1+0x8],0xfd
   140017650:	mov    eax,edi
   140017652:	mov    rbx,QWORD PTR [rsp+0x30]
   140017657:	mov    rsi,QWORD PTR [rsp+0x38]
   14001765c:	add    rsp,0x20
   140017660:	pop    rdi
   140017661:	ret    
   140017662:	int3   
   140017663:	int3   
   140017664:	mov    QWORD PTR [rsp+0x10],rbx
   140017669:	mov    DWORD PTR [rsp+0x8],ecx
   14001766d:	push   rsi
   14001766e:	push   rdi
   14001766f:	push   r12
   140017671:	push   r13
   140017673:	push   r14
   140017675:	sub    rsp,0x20
   140017679:	mov    esi,r8d
   14001767c:	mov    r12d,edx
   14001767f:	movsxd rdi,ecx
   140017682:	cmp    edi,0xfffffffe
   140017685:	jne    0x14001769f
   140017687:	call   0x14000bde0
   14001768c:	and    DWORD PTR [rax],0x0
   14001768f:	call   0x14000bdc0
   140017694:	mov    DWORD PTR [rax],0x9
   14001769a:	jmp    0x14001772e
   14001769f:	test   ecx,ecx
   1400176a1:	js     0x140017716
   1400176a3:	cmp    edi,DWORD PTR [rip+0xe3c3]        # 0x140025a6c
   1400176a9:	jae    0x140017716
   1400176ab:	mov    rbx,rdi
   1400176ae:	mov    r13,rdi
   1400176b1:	sar    r13,0x5
   1400176b5:	lea    r14,[rip+0xe3c4]        # 0x140025a80
   1400176bc:	and    ebx,0x1f
   1400176bf:	imul   rbx,rbx,0x58
   1400176c3:	mov    rax,QWORD PTR [r14+r13*8]
   1400176c7:	movsx  ecx,BYTE PTR [rax+rbx*1+0x8]
   1400176cc:	and    ecx,0x1
   1400176cf:	je     0x140017716
   1400176d1:	mov    ecx,edi
   1400176d3:	call   0x1400116d4
   1400176d8:	nop
   1400176d9:	mov    rax,QWORD PTR [r14+r13*8]
   1400176dd:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   1400176e2:	je     0x1400176f5
   1400176e4:	mov    r8d,esi
   1400176e7:	mov    edx,r12d
   1400176ea:	mov    ecx,edi
   1400176ec:	call   0x1400175cc
   1400176f1:	mov    ebx,eax
   1400176f3:	jmp    0x14001770b
   1400176f5:	call   0x14000bdc0
   1400176fa:	mov    DWORD PTR [rax],0x9
   140017700:	call   0x14000bde0
   140017705:	and    DWORD PTR [rax],0x0
   140017708:	or     ebx,0xffffffff
   14001770b:	mov    ecx,edi
   14001770d:	call   0x14001177c
   140017712:	mov    eax,ebx
   140017714:	jmp    0x140017731
   140017716:	call   0x14000bde0
   14001771b:	and    DWORD PTR [rax],0x0
   14001771e:	call   0x14000bdc0
   140017723:	mov    DWORD PTR [rax],0x9
   140017729:	call   0x14000d01c
   14001772e:	or     eax,0xffffffff
   140017731:	mov    rbx,QWORD PTR [rsp+0x58]
   140017736:	add    rsp,0x20
   14001773a:	pop    r14
   14001773c:	pop    r13
   14001773e:	pop    r12
   140017740:	pop    rdi
   140017741:	pop    rsi
   140017742:	ret    
   140017743:	int3   
   140017744:	mov    QWORD PTR [rsp+0x8],rbx
   140017749:	movsxd r8,ecx
   14001774c:	lea    rbx,[rip+0xe32d]        # 0x140025a80
   140017753:	mov    r9,r8
   140017756:	and    r8d,0x1f
   14001775a:	sar    r9,0x5
   14001775e:	imul   r8,r8,0x58
   140017762:	mov    rcx,QWORD PTR [rbx+r9*8]
   140017766:	mov    al,BYTE PTR [rcx+r8*1+0x38]
   14001776b:	movzx  r11d,BYTE PTR [rcx+r8*1+0x8]
   140017771:	add    al,al
   140017773:	and    r11d,0x80
   14001777a:	movsx  r10d,al
   14001777e:	sar    r10d,1
   140017781:	cmp    edx,0x4000
   140017787:	je     0x1400177e1
   140017789:	cmp    edx,0x8000
   14001778f:	je     0x1400177d9
   140017791:	cmp    edx,0x10000
   140017797:	je     0x1400177c1
   140017799:	cmp    edx,0x20000
   14001779f:	je     0x1400177c1
   1400177a1:	cmp    edx,0x40000
   1400177a7:	jne    0x1400177f1
   1400177a9:	or     BYTE PTR [rcx+r8*1+0x8],0x80
   1400177af:	mov    rax,QWORD PTR [rbx+r9*8]
   1400177b3:	and    BYTE PTR [rax+r8*1+0x38],0x81
   1400177b9:	or     BYTE PTR [rax+r8*1+0x38],0x1
   1400177bf:	jmp    0x1400177f1
   1400177c1:	or     BYTE PTR [rcx+r8*1+0x8],0x80
   1400177c7:	mov    rax,QWORD PTR [rbx+r9*8]
   1400177cb:	and    BYTE PTR [rax+r8*1+0x38],0x82
   1400177d1:	or     BYTE PTR [rax+r8*1+0x38],0x2
   1400177d7:	jmp    0x1400177f1
   1400177d9:	and    BYTE PTR [rcx+r8*1+0x8],0x7f
   1400177df:	jmp    0x1400177f1
   1400177e1:	or     BYTE PTR [rcx+r8*1+0x8],0x80
   1400177e7:	mov    rcx,QWORD PTR [rbx+r9*8]
   1400177eb:	and    BYTE PTR [rcx+r8*1+0x38],0x80
   1400177f1:	test   r11d,r11d
   1400177f4:	jne    0x1400177fd
   1400177f6:	mov    eax,0x8000
   1400177fb:	jmp    0x14001780c
   1400177fd:	neg    r10d
   140017800:	sbb    eax,eax
   140017802:	and    eax,0xc000
   140017807:	add    eax,0x4000
   14001780c:	mov    rbx,QWORD PTR [rsp+0x8]
   140017811:	ret    
   140017812:	int3   
   140017813:	int3   
   140017814:	sub    rsp,0x28
   140017818:	test   rcx,rcx
   14001781b:	jne    0x140017834
   14001781d:	call   0x14000bdc0
   140017822:	mov    DWORD PTR [rax],0x16
   140017828:	call   0x14000d01c
   14001782d:	mov    eax,0x16
   140017832:	jmp    0x14001783e
   140017834:	mov    eax,DWORD PTR [rip+0xe22a]        # 0x140025a64
   14001783a:	mov    DWORD PTR [rcx],eax
   14001783c:	xor    eax,eax
   14001783e:	add    rsp,0x28
   140017842:	ret    
   140017843:	int3   
   140017844:	mov    rax,rsp
   140017847:	push   rbx
   140017848:	push   rsi
   140017849:	push   rdi
   14001784a:	push   r12
   14001784c:	push   r13
   14001784e:	push   r14
   140017850:	push   r15
   140017852:	sub    rsp,0x50
   140017856:	xor    r14d,r14d
   140017859:	mov    r13d,r14d
   14001785c:	mov    esi,r14d
   14001785f:	mov    DWORD PTR [rax+0x8],r14d
   140017863:	mov    DWORD PTR [rax+0x10],r14d
   140017867:	mov    DWORD PTR [rax+0x18],r14d
   14001786b:	lea    ecx,[r14+0x7]
   14001786f:	call   0x14000cb28
   140017874:	nop
   140017875:	call   0x140018358
   14001787a:	mov    r12,rax
   14001787d:	lea    rcx,[rsp+0x90]
   140017885:	call   0x140018310
   14001788a:	test   eax,eax
   14001788c:	jne    0x140017c9d
   140017892:	lea    rcx,[rsp+0x98]
   14001789a:	call   0x1400182b0
   14001789f:	test   eax,eax
   1400178a1:	jne    0x140017c89
   1400178a7:	lea    rcx,[rsp+0xa0]
   1400178af:	call   0x1400182e0
   1400178b4:	test   eax,eax
   1400178b6:	jne    0x140017c75
   1400178bc:	call   0x140019358
   1400178c1:	mov    ebx,eax
   1400178c3:	mov    DWORD PTR [rip+0xe182],r14d        # 0x140025a4c
   1400178ca:	or     r15d,0xffffffff
   1400178ce:	mov    DWORD PTR [rip+0xcc4b],r15d        # 0x140024520
   1400178d5:	mov    DWORD PTR [rip+0xcc34],r15d        # 0x140024510
   1400178dc:	lea    rcx,[rip+0x86f5]        # 0x14001ffd8
   1400178e3:	call   0x140009cf0
   1400178e8:	mov    rdi,rax
   1400178eb:	mov    QWORD PTR [rsp+0x40],rax
   1400178f0:	test   rax,rax
   1400178f3:	je     0x14001798a
   1400178f9:	cmp    BYTE PTR [rax],r14b
   1400178fc:	je     0x14001798a
   140017902:	mov    rcx,QWORD PTR [rip+0xe147]        # 0x140025a50
   140017909:	test   rcx,rcx
   14001790c:	je     0x140017932
   14001790e:	mov    rdx,rcx
   140017911:	mov    rcx,rax
   140017914:	call   0x14000a850
   140017919:	test   eax,eax
   14001791b:	je     0x140017ad9
   140017921:	mov    rcx,QWORD PTR [rip+0xe128]        # 0x140025a50
   140017928:	test   rcx,rcx
   14001792b:	je     0x140017932
   14001792d:	call   0x14000b460
   140017932:	mov    rcx,rdi
   140017935:	call   0x140009fa0
   14001793a:	lea    rcx,[rax+0x1]
   14001793e:	call   0x140010aa4
   140017943:	mov    QWORD PTR [rip+0xe106],rax        # 0x140025a50
   14001794a:	test   rax,rax
   14001794d:	je     0x140017ad9
   140017953:	mov    rcx,rdi
   140017956:	call   0x140009fa0
   14001795b:	mov    r8,rdi
   14001795e:	lea    rdx,[rax+0x1]
   140017962:	mov    rcx,QWORD PTR [rip+0xe0e7]        # 0x140025a50
   140017969:	call   0x14000eab0
   14001796e:	test   eax,eax
   140017970:	je     0x140017ade
   140017976:	mov    QWORD PTR [rsp+0x20],r14
   14001797b:	xor    r9d,r9d
   14001797e:	xor    r8d,r8d
   140017981:	xor    edx,edx
   140017983:	xor    ecx,ecx
   140017985:	call   0x14000cf78
   14001798a:	mov    rcx,QWORD PTR [rip+0xe0bf]        # 0x140025a50
   140017991:	test   rcx,rcx
   140017994:	je     0x1400179a2
   140017996:	call   0x14000b460
   14001799b:	mov    QWORD PTR [rip+0xe0ae],r14        # 0x140025a50
   1400179a2:	lea    rcx,[rip+0xdff7]        # 0x1400259a0
   1400179a9:	call   QWORD PTR [rip+0x2971]        # 0x14001a320
   1400179af:	cmp    eax,0xffffffff
   1400179b2:	je     0x140017ad9
   1400179b8:	mov    DWORD PTR [rip+0xe08a],0x1        # 0x140025a4c
   1400179c2:	mov    ecx,DWORD PTR [rip+0xdfd8]        # 0x1400259a0
   1400179c8:	imul   ecx,ecx,0x3c
   1400179cb:	mov    DWORD PTR [rsp+0x90],ecx
   1400179d2:	mov    edx,DWORD PTR [rip+0xe01c]        # 0x1400259f4
   1400179d8:	cmp    WORD PTR [rip+0xe006],r14w        # 0x1400259e6
   1400179e0:	je     0x1400179f0
   1400179e2:	mov    eax,edx
   1400179e4:	imul   eax,eax,0x3c
   1400179e7:	add    ecx,eax
   1400179e9:	mov    DWORD PTR [rsp+0x90],ecx
   1400179f0:	cmp    WORD PTR [rip+0xe042],r14w        # 0x140025a3a
   1400179f8:	je     0x140017a1d
   1400179fa:	mov    eax,DWORD PTR [rip+0xe048]        # 0x140025a48
   140017a00:	test   eax,eax
   140017a02:	je     0x140017a1d
   140017a04:	mov    DWORD PTR [rsp+0x98],0x1
   140017a0f:	sub    eax,edx
   140017a11:	imul   eax,eax,0x3c
   140017a14:	mov    DWORD PTR [rsp+0xa0],eax
   140017a1b:	jmp    0x140017a2d
   140017a1d:	mov    DWORD PTR [rsp+0x98],r14d
   140017a25:	mov    DWORD PTR [rsp+0xa0],r14d
   140017a2d:	lea    rax,[rsp+0xa8]
   140017a35:	mov    QWORD PTR [rsp+0x38],rax
   140017a3a:	mov    QWORD PTR [rsp+0x30],r14
   140017a3f:	mov    esi,0x3f
   140017a44:	mov    DWORD PTR [rsp+0x28],esi
   140017a48:	mov    rax,QWORD PTR [r12]
   140017a4c:	mov    QWORD PTR [rsp+0x20],rax
   140017a51:	mov    r9d,r15d
   140017a54:	lea    r8,[rip+0xdf49]        # 0x1400259a4
   140017a5b:	xor    edx,edx
   140017a5d:	mov    ecx,ebx
   140017a5f:	call   QWORD PTR [rip+0x279b]        # 0x14001a200
   140017a65:	test   eax,eax
   140017a67:	je     0x140017a7d
   140017a69:	cmp    DWORD PTR [rsp+0xa8],r14d
   140017a71:	jne    0x140017a7d
   140017a73:	mov    rax,QWORD PTR [r12]
   140017a77:	mov    BYTE PTR [rax+0x3f],r14b
   140017a7b:	jmp    0x140017a84
   140017a7d:	mov    rax,QWORD PTR [r12]
   140017a81:	mov    BYTE PTR [rax],r14b
   140017a84:	lea    rax,[rsp+0xa8]
   140017a8c:	mov    QWORD PTR [rsp+0x38],rax
   140017a91:	mov    QWORD PTR [rsp+0x30],r14
   140017a96:	mov    DWORD PTR [rsp+0x28],esi
   140017a9a:	mov    rax,QWORD PTR [r12+0x8]
   140017a9f:	mov    QWORD PTR [rsp+0x20],rax
   140017aa4:	mov    r9d,r15d
   140017aa7:	lea    r8,[rip+0xdf4a]        # 0x1400259f8
   140017aae:	xor    edx,edx
   140017ab0:	mov    ecx,ebx
   140017ab2:	call   QWORD PTR [rip+0x2748]        # 0x14001a200
   140017ab8:	test   eax,eax
   140017aba:	je     0x140017ad1
   140017abc:	cmp    DWORD PTR [rsp+0xa8],r14d
   140017ac4:	jne    0x140017ad1
   140017ac6:	mov    rax,QWORD PTR [r12+0x8]
   140017acb:	mov    BYTE PTR [rax+0x3f],r14b
   140017acf:	jmp    0x140017ad9
   140017ad1:	mov    rax,QWORD PTR [r12+0x8]
   140017ad6:	mov    BYTE PTR [rax],r14b
   140017ad9:	mov    esi,0x1
   140017ade:	mov    ebx,DWORD PTR [rsp+0x90]
   140017ae5:	call   0x140018350
   140017aea:	mov    DWORD PTR [rax],ebx
   140017aec:	mov    ebx,DWORD PTR [rsp+0x98]
   140017af3:	call   0x140018340
   140017af8:	mov    DWORD PTR [rax],ebx
   140017afa:	mov    ebx,DWORD PTR [rsp+0xa0]
   140017b01:	call   0x140018348
   140017b06:	mov    DWORD PTR [rax],ebx
   140017b08:	mov    ecx,0x7
   140017b0d:	call   0x14000ca28
   140017b12:	test   esi,esi
   140017b14:	jne    0x140017cb2
   140017b1a:	lea    r15d,[rsi+0x3]
   140017b1e:	mov    r9d,r15d
   140017b21:	mov    r8,rdi
   140017b24:	lea    edx,[rsi+0x40]
   140017b27:	mov    rcx,QWORD PTR [r12]
   140017b2b:	call   0x1400136e0
   140017b30:	test   eax,eax
   140017b32:	jne    0x140017c60
   140017b38:	add    rdi,r15
   140017b3b:	cmp    BYTE PTR [rdi],0x2d
   140017b3e:	jne    0x140017b47
   140017b40:	lea    r13d,[rsi+0x1]
   140017b44:	inc    rdi
   140017b47:	mov    rcx,rdi
   140017b4a:	call   0x1400196e8
   140017b4f:	mov    r11d,eax
   140017b52:	imul   r11d,r11d,0xe10
   140017b59:	mov    DWORD PTR [rsp+0x90],r11d
   140017b61:	mov    bl,0x30
   140017b63:	mov    sil,0x39
   140017b66:	mov    al,BYTE PTR [rdi]
   140017b68:	cmp    al,0x2b
   140017b6a:	je     0x140017c58
   140017b70:	cmp    al,bl
   140017b72:	jl     0x140017b7d
   140017b74:	cmp    al,sil
   140017b77:	jle    0x140017c58
   140017b7d:	cmp    BYTE PTR [rdi],0x3a
   140017b80:	jne    0x140017be6
   140017b82:	inc    rdi
   140017b85:	mov    rcx,rdi
   140017b88:	call   0x1400196e8
   140017b8d:	imul   eax,eax,0x3c
   140017b90:	mov    r11d,DWORD PTR [rsp+0x90]
   140017b98:	add    r11d,eax
   140017b9b:	mov    DWORD PTR [rsp+0x90],r11d
   140017ba3:	jmp    0x140017bad
   140017ba5:	cmp    al,sil
   140017ba8:	jg     0x140017bb3
   140017baa:	inc    rdi
   140017bad:	mov    al,BYTE PTR [rdi]
   140017baf:	cmp    al,bl
   140017bb1:	jge    0x140017ba5
   140017bb3:	cmp    BYTE PTR [rdi],0x3a
   140017bb6:	jne    0x140017be6
   140017bb8:	inc    rdi
   140017bbb:	mov    rcx,rdi
   140017bbe:	call   0x1400196e8
   140017bc3:	mov    r11d,DWORD PTR [rsp+0x90]
   140017bcb:	add    r11d,eax
   140017bce:	mov    DWORD PTR [rsp+0x90],r11d
   140017bd6:	jmp    0x140017be0
   140017bd8:	cmp    al,sil
   140017bdb:	jg     0x140017be6
   140017bdd:	inc    rdi
   140017be0:	mov    al,BYTE PTR [rdi]
   140017be2:	cmp    al,bl
   140017be4:	jge    0x140017bd8
   140017be6:	test   r13d,r13d
   140017be9:	je     0x140017bf6
   140017beb:	neg    r11d
   140017bee:	mov    DWORD PTR [rsp+0x90],r11d
   140017bf6:	movsx  eax,BYTE PTR [rdi]
   140017bf9:	mov    DWORD PTR [rsp+0x98],eax
   140017c00:	test   eax,eax
   140017c02:	je     0x140017c32
   140017c04:	mov    r9,r15
   140017c07:	mov    r8,rdi
   140017c0a:	mov    edx,0x40
   140017c0f:	mov    rcx,QWORD PTR [r12+0x8]
   140017c14:	call   0x1400136e0
   140017c19:	test   eax,eax
   140017c1b:	je     0x140017c3a
   140017c1d:	mov    QWORD PTR [rsp+0x20],r14
   140017c22:	xor    r9d,r9d
   140017c25:	xor    r8d,r8d
   140017c28:	xor    edx,edx
   140017c2a:	xor    ecx,ecx
   140017c2c:	call   0x14000cf78
   140017c31:	int3   
   140017c32:	mov    rax,QWORD PTR [r12+0x8]
   140017c37:	mov    BYTE PTR [rax],r14b
   140017c3a:	mov    ebx,DWORD PTR [rsp+0x90]
   140017c41:	call   0x140018350
   140017c46:	mov    DWORD PTR [rax],ebx
   140017c48:	mov    ebx,DWORD PTR [rsp+0x98]
   140017c4f:	call   0x140018340
   140017c54:	mov    DWORD PTR [rax],ebx
   140017c56:	jmp    0x140017cb2
   140017c58:	inc    rdi
   140017c5b:	jmp    0x140017b66
   140017c60:	mov    QWORD PTR [rsp+0x20],r14
   140017c65:	xor    r9d,r9d
   140017c68:	xor    r8d,r8d
   140017c6b:	xor    edx,edx
   140017c6d:	xor    ecx,ecx
   140017c6f:	call   0x14000cf78
   140017c74:	nop
   140017c75:	mov    QWORD PTR [rsp+0x20],r14
   140017c7a:	xor    r9d,r9d
   140017c7d:	xor    r8d,r8d
   140017c80:	xor    edx,edx
   140017c82:	xor    ecx,ecx
   140017c84:	call   0x14000cf78
   140017c89:	mov    QWORD PTR [rsp+0x20],r14
   140017c8e:	xor    r9d,r9d
   140017c91:	xor    r8d,r8d
   140017c94:	xor    edx,edx
   140017c96:	xor    ecx,ecx
   140017c98:	call   0x14000cf78
   140017c9d:	mov    QWORD PTR [rsp+0x20],r14
   140017ca2:	xor    r9d,r9d
   140017ca5:	xor    r8d,r8d
   140017ca8:	xor    edx,edx
   140017caa:	xor    ecx,ecx
   140017cac:	call   0x14000cf78
   140017cb1:	nop
   140017cb2:	add    rsp,0x50
   140017cb6:	pop    r15
   140017cb8:	pop    r14
   140017cba:	pop    r13
   140017cbc:	pop    r12
   140017cbe:	pop    rdi
   140017cbf:	pop    rsi
   140017cc0:	pop    rbx
   140017cc1:	ret    
   140017cc2:	int3   
   140017cc3:	int3   
   140017cc4:	mov    QWORD PTR [rsp+0x10],rbx
   140017cc9:	mov    QWORD PTR [rsp+0x18],rbp
   140017cce:	push   rsi
   140017ccf:	push   rdi
   140017cd0:	push   r12
   140017cd2:	sub    rsp,0x30
   140017cd6:	and    DWORD PTR [rsp+0x50],0x0
   140017cdb:	mov    ebx,r8d
   140017cde:	mov    r12d,ecx
   140017ce1:	cmp    edx,0x1
   140017ce4:	jne    0x140017e55
   140017cea:	mov    r11d,ebx
   140017ced:	and    r11d,0x80000003
   140017cf4:	jge    0x140017d00
   140017cf6:	dec    r11d
   140017cf9:	or     r11d,0xfffffffc
   140017cfd:	inc    r11d
   140017d00:	mov    esi,0x51eb851f
   140017d05:	test   r11d,r11d
   140017d08:	jne    0x140017d1f
   140017d0a:	mov    eax,esi
   140017d0c:	imul   ebx
   140017d0e:	sar    edx,0x5
   140017d11:	mov    eax,edx
   140017d13:	shr    eax,0x1f
   140017d16:	add    edx,eax
   140017d18:	imul   edx,edx,0x64
   140017d1b:	cmp    ebx,edx
   140017d1d:	jne    0x140017d52
   140017d1f:	lea    ecx,[r8+0x76c]
   140017d26:	mov    eax,esi
   140017d28:	imul   ecx
   140017d2a:	sar    edx,0x7
   140017d2d:	mov    eax,edx
   140017d2f:	shr    eax,0x1f
   140017d32:	add    edx,eax
   140017d34:	imul   edx,edx,0x190
   140017d3a:	cmp    ecx,edx
   140017d3c:	je     0x140017d52
   140017d3e:	lea    rdi,[rip+0xfffffffffffe82bb]        # 0x140000000
   140017d45:	movsxd rbp,r9d
   140017d48:	mov    r10d,DWORD PTR [rdi+rbp*4+0x24604]
   140017d50:	jmp    0x140017d64
   140017d52:	lea    rdi,[rip+0xfffffffffffe82a7]        # 0x140000000
   140017d59:	movsxd rbp,r9d
   140017d5c:	mov    r10d,DWORD PTR [rdi+rbp*4+0x245cc]
   140017d64:	dec    r8d
   140017d67:	lea    ecx,[rbx+0x12b]
   140017d6d:	mov    eax,esi
   140017d6f:	inc    r10d
   140017d72:	imul   ecx
   140017d74:	mov    r9d,edx
   140017d77:	sar    r9d,0x7
   140017d7b:	mov    eax,r9d
   140017d7e:	shr    eax,0x1f
   140017d81:	add    r9d,eax
   140017d84:	mov    eax,esi
   140017d86:	imul   r8d
   140017d89:	sar    edx,0x5
   140017d8c:	mov    eax,edx
   140017d8e:	shr    eax,0x1f
   140017d91:	add    edx,eax
   140017d93:	mov    eax,r8d
   140017d96:	sub    r9d,edx
   140017d99:	cdq    
   140017d9a:	and    edx,0x3
   140017d9d:	add    eax,edx
   140017d9f:	sar    eax,0x2
   140017da2:	lea    ecx,[r10+rax*1]
   140017da6:	mov    eax,ebx
   140017da8:	add    ecx,r9d
   140017dab:	imul   eax,eax,0x16d
   140017db1:	lea    r8d,[rax+rcx*1-0x63db]
   140017db9:	mov    ecx,DWORD PTR [rsp+0x70]
   140017dbd:	mov    eax,0x92492493
   140017dc2:	imul   r8d
   140017dc5:	add    edx,r8d
   140017dc8:	sar    edx,0x2
   140017dcb:	mov    eax,edx
   140017dcd:	shr    eax,0x1f
   140017dd0:	add    edx,eax
   140017dd2:	mov    eax,ecx
   140017dd4:	imul   edx,edx,0x7
   140017dd7:	imul   eax,eax,0x7
   140017dda:	sub    r8d,edx
   140017ddd:	mov    edx,DWORD PTR [rsp+0x78]
   140017de1:	sub    eax,r8d
   140017de4:	add    eax,edx
   140017de6:	cmp    r8d,edx
   140017de9:	jg     0x140017df2
   140017deb:	lea    r10d,[r10+rax*1-0x7]
   140017df0:	jmp    0x140017df5
   140017df2:	add    r10d,eax
   140017df5:	cmp    ecx,0x5
   140017df8:	jne    0x140017ed0
   140017dfe:	test   r11d,r11d
   140017e01:	jne    0x140017e18
   140017e03:	mov    eax,esi
   140017e05:	imul   ebx
   140017e07:	sar    edx,0x5
   140017e0a:	mov    ecx,edx
   140017e0c:	shr    ecx,0x1f
   140017e0f:	add    edx,ecx
   140017e11:	imul   edx,edx,0x64
   140017e14:	cmp    ebx,edx
   140017e16:	jne    0x140017e3f
   140017e18:	lea    ecx,[rbx+0x76c]
   140017e1e:	mov    eax,esi
   140017e20:	imul   ecx
   140017e22:	sar    edx,0x7
   140017e25:	mov    eax,edx
   140017e27:	shr    eax,0x1f
   140017e2a:	add    edx,eax
   140017e2c:	imul   edx,edx,0x190
   140017e32:	cmp    ecx,edx
   140017e34:	je     0x140017e3f
   140017e36:	mov    eax,DWORD PTR [rdi+rbp*4+0x24608]
   140017e3d:	jmp    0x140017e46
   140017e3f:	mov    eax,DWORD PTR [rdi+rbp*4+0x245d0]
   140017e46:	cmp    r10d,eax
   140017e49:	jle    0x140017ed0
   140017e4f:	sub    r10d,0x7
   140017e53:	jmp    0x140017ed0
   140017e55:	mov    eax,ebx
   140017e57:	and    eax,0x80000003
   140017e5c:	jge    0x140017e65
   140017e5e:	dec    eax
   140017e60:	or     eax,0xfffffffc
   140017e63:	inc    eax
   140017e65:	mov    esi,0x51eb851f
   140017e6a:	test   eax,eax
   140017e6c:	jne    0x140017e83
   140017e6e:	mov    eax,esi
   140017e70:	imul   ebx
   140017e72:	sar    edx,0x5
   140017e75:	mov    eax,edx
   140017e77:	shr    eax,0x1f
   140017e7a:	add    edx,eax
   140017e7c:	imul   edx,edx,0x64
   140017e7f:	cmp    ebx,edx
   140017e81:	jne    0x140017eb6
   140017e83:	lea    ecx,[r8+0x76c]
   140017e8a:	mov    eax,esi
   140017e8c:	imul   ecx
   140017e8e:	sar    edx,0x7
   140017e91:	mov    eax,edx
   140017e93:	shr    eax,0x1f
   140017e96:	add    edx,eax
   140017e98:	imul   edx,edx,0x190
   140017e9e:	cmp    ecx,edx
   140017ea0:	je     0x140017eb6
   140017ea2:	lea    rdi,[rip+0xfffffffffffe8157]        # 0x140000000
   140017ea9:	movsxd rax,r9d
   140017eac:	mov    r10d,DWORD PTR [rdi+rax*4+0x24604]
   140017eb4:	jmp    0x140017ec8
   140017eb6:	lea    rdi,[rip+0xfffffffffffe8143]        # 0x140000000
   140017ebd:	movsxd rax,r9d
   140017ec0:	mov    r10d,DWORD PTR [rdi+rax*4+0x245cc]
   140017ec8:	add    r10d,DWORD PTR [rsp+0x80]
   140017ed0:	mov    eax,DWORD PTR [rsp+0x88]
   140017ed7:	imul   eax,eax,0x3c
   140017eda:	add    eax,DWORD PTR [rsp+0x90]
   140017ee1:	imul   eax,eax,0x3c
   140017ee4:	add    eax,DWORD PTR [rsp+0x98]
   140017eeb:	imul   eax,eax,0x3e8
   140017ef1:	add    eax,DWORD PTR [rsp+0xa0]
   140017ef8:	cmp    r12d,0x1
   140017efc:	jne    0x140017f24
   140017efe:	mov    DWORD PTR [rip+0xc60f],r10d        # 0x140024514
   140017f05:	mov    DWORD PTR [rip+0xc60d],eax        # 0x140024518
   140017f0b:	mov    DWORD PTR [rip+0xc5ff],ebx        # 0x140024510
   140017f11:	mov    rbx,QWORD PTR [rsp+0x58]
   140017f16:	mov    rbp,QWORD PTR [rsp+0x60]
   140017f1b:	add    rsp,0x30
   140017f1f:	pop    r12
   140017f21:	pop    rdi
   140017f22:	pop    rsi
   140017f23:	ret    
   140017f24:	lea    rcx,[rsp+0x50]
   140017f29:	mov    DWORD PTR [rip+0xc5f4],r10d        # 0x140024524
   140017f30:	mov    DWORD PTR [rip+0xc5f2],eax        # 0x140024528
   140017f36:	call   0x1400182e0
   140017f3b:	test   eax,eax
   140017f3d:	jne    0x140017f82
   140017f3f:	mov    ecx,DWORD PTR [rip+0xc5e3]        # 0x140024528
   140017f45:	mov    eax,DWORD PTR [rsp+0x50]
   140017f49:	imul   eax,eax,0x3e8
   140017f4f:	add    ecx,eax
   140017f51:	mov    eax,0x5265c00
   140017f56:	mov    DWORD PTR [rip+0xc5cc],ecx        # 0x140024528
   140017f5c:	jns    0x140017f68
   140017f5e:	add    ecx,eax
   140017f60:	dec    DWORD PTR [rip+0xc5be]        # 0x140024524
   140017f66:	jmp    0x140017f74
   140017f68:	cmp    ecx,eax
   140017f6a:	jl     0x140017f7a
   140017f6c:	sub    ecx,eax
   140017f6e:	inc    DWORD PTR [rip+0xc5b0]        # 0x140024524
   140017f74:	mov    DWORD PTR [rip+0xc5ae],ecx        # 0x140024528
   140017f7a:	mov    DWORD PTR [rip+0xc5a0],ebx        # 0x140024520
   140017f80:	jmp    0x140017f11
   140017f82:	and    QWORD PTR [rsp+0x20],0x0
   140017f88:	xor    r9d,r9d
   140017f8b:	xor    r8d,r8d
   140017f8e:	xor    edx,edx
   140017f90:	xor    ecx,ecx
   140017f92:	call   0x14000cf78
   140017f97:	int3   
   140017f98:	mov    rax,rsp
   140017f9b:	mov    QWORD PTR [rax+0x8],rbx
   140017f9f:	mov    QWORD PTR [rax+0x18],rbp
   140017fa3:	mov    QWORD PTR [rax+0x20],rsi
   140017fa7:	push   rdi
   140017fa8:	push   r12
   140017faa:	push   r13
   140017fac:	sub    rsp,0x60
   140017fb0:	mov    rdi,rcx
   140017fb3:	lea    rcx,[rax+0x10]
   140017fb7:	xor    ebx,ebx
   140017fb9:	mov    DWORD PTR [rax+0x10],ebx
   140017fbc:	call   0x1400182b0
   140017fc1:	test   eax,eax
   140017fc3:	jne    0x14001822c
   140017fc9:	cmp    DWORD PTR [rsp+0x88],ebx
   140017fd0:	jne    0x140017fee
   140017fd2:	xor    eax,eax
   140017fd4:	lea    r11,[rsp+0x60]
   140017fd9:	mov    rbx,QWORD PTR [r11+0x20]
   140017fdd:	mov    rbp,QWORD PTR [r11+0x30]
   140017fe1:	mov    rsi,QWORD PTR [r11+0x38]
   140017fe5:	mov    rsp,r11
   140017fe8:	pop    r13
   140017fea:	pop    r12
   140017fec:	pop    rdi
   140017fed:	ret    
   140017fee:	mov    esi,DWORD PTR [rdi+0x14]
   140017ff1:	mov    r13d,0x1
   140017ff7:	cmp    esi,DWORD PTR [rip+0xc513]        # 0x140024510
   140017ffd:	jne    0x14001800b
   140017fff:	cmp    esi,DWORD PTR [rip+0xc51b]        # 0x140024520
   140018005:	je     0x1400181ac
   14001800b:	cmp    DWORD PTR [rip+0xda3b],ebx        # 0x140025a4c
   140018011:	je     0x140018129
   140018017:	cmp    WORD PTR [rip+0xda1a],bx        # 0x140025a38
   14001801e:	movzx  ecx,WORD PTR [rip+0xda1f]        # 0x140025a44
   140018025:	movzx  eax,WORD PTR [rip+0xda1a]        # 0x140025a46
   14001802c:	movzx  edx,WORD PTR [rip+0xda0f]        # 0x140025a42
   140018033:	movzx  r9d,WORD PTR [rip+0xd9ff]        # 0x140025a3a
   14001803b:	mov    DWORD PTR [rsp+0x50],eax
   14001803f:	mov    DWORD PTR [rsp+0x48],ecx
   140018043:	mov    DWORD PTR [rsp+0x40],edx
   140018047:	mov    ecx,r13d
   14001804a:	jne    0x14001807c
   14001804c:	movzx  r10d,WORD PTR [rip+0xd9ec]        # 0x140025a40
   140018054:	movzx  r11d,WORD PTR [rip+0xd9e0]        # 0x140025a3c
   14001805c:	movzx  r8d,WORD PTR [rip+0xd9da]        # 0x140025a3e
   140018064:	mov    DWORD PTR [rsp+0x38],r10d
   140018069:	mov    DWORD PTR [rsp+0x30],ebx
   14001806d:	mov    DWORD PTR [rsp+0x28],r11d
   140018072:	mov    DWORD PTR [rsp+0x20],r8d
   140018077:	mov    edx,r13d
   14001807a:	jmp    0x1400180a0
   14001807c:	movzx  r8d,WORD PTR [rip+0xd9bc]        # 0x140025a40
   140018084:	movzx  r10d,WORD PTR [rip+0xd9b2]        # 0x140025a3e
   14001808c:	xor    edx,edx
   14001808e:	mov    DWORD PTR [rsp+0x38],r8d
   140018093:	mov    DWORD PTR [rsp+0x30],r10d
   140018098:	mov    DWORD PTR [rsp+0x28],ebx
   14001809c:	mov    DWORD PTR [rsp+0x20],ebx
   1400180a0:	mov    r8d,esi
   1400180a3:	call   0x140017cc4
   1400180a8:	movzx  ecx,WORD PTR [rip+0xd941]        # 0x1400259f0
   1400180af:	movzx  r8d,WORD PTR [rip+0xd935]        # 0x1400259ec
   1400180b7:	movzx  eax,WORD PTR [rip+0xd934]        # 0x1400259f2
   1400180be:	movzx  edx,WORD PTR [rip+0xd929]        # 0x1400259ee
   1400180c5:	movzx  r9d,WORD PTR [rip+0xd919]        # 0x1400259e6
   1400180cd:	mov    DWORD PTR [rsp+0x50],eax
   1400180d1:	mov    DWORD PTR [rsp+0x48],ecx
   1400180d5:	mov    DWORD PTR [rsp+0x40],edx
   1400180d9:	xor    ecx,ecx
   1400180db:	cmp    WORD PTR [rip+0xd902],bx        # 0x1400259e4
   1400180e2:	mov    DWORD PTR [rsp+0x38],r8d
   1400180e7:	mov    r8d,DWORD PTR [rdi+0x14]
   1400180eb:	jne    0x140018110
   1400180ed:	movzx  r10d,WORD PTR [rip+0xd8f3]        # 0x1400259e8
   1400180f5:	movzx  r11d,WORD PTR [rip+0xd8ed]        # 0x1400259ea
   1400180fd:	mov    DWORD PTR [rsp+0x30],ebx
   140018101:	mov    DWORD PTR [rsp+0x28],r10d
   140018106:	mov    DWORD PTR [rsp+0x20],r11d
   14001810b:	jmp    0x1400181a4
   140018110:	movzx  r10d,WORD PTR [rip+0xd8d2]        # 0x1400259ea
   140018118:	xor    edx,edx
   14001811a:	mov    DWORD PTR [rsp+0x30],r10d
   14001811f:	mov    DWORD PTR [rsp+0x28],ebx
   140018123:	mov    DWORD PTR [rsp+0x20],ebx
   140018127:	jmp    0x1400181a7
   140018129:	mov    eax,0x2
   14001812e:	mov    r12d,r13d
   140018131:	lea    ebp,[rax+0x9]
   140018134:	lea    r9d,[rax+0x1]
   140018138:	cmp    esi,0x6b
   14001813b:	jge    0x14001814c
   14001813d:	lea    r9d,[rax+0x2]
   140018141:	mov    eax,r13d
   140018144:	lea    ebp,[r9+0x6]
   140018148:	lea    r12d,[r9+0x1]
   14001814c:	mov    DWORD PTR [rsp+0x50],ebx
   140018150:	mov    DWORD PTR [rsp+0x48],ebx
   140018154:	mov    DWORD PTR [rsp+0x40],ebx
   140018158:	mov    DWORD PTR [rsp+0x38],0x2
   140018160:	mov    DWORD PTR [rsp+0x30],ebx
   140018164:	mov    r8d,esi
   140018167:	mov    edx,r13d
   14001816a:	mov    ecx,r13d
   14001816d:	mov    DWORD PTR [rsp+0x28],ebx
   140018171:	mov    DWORD PTR [rsp+0x20],eax
   140018175:	call   0x140017cc4
   14001817a:	mov    r8d,DWORD PTR [rdi+0x14]
   14001817e:	mov    DWORD PTR [rsp+0x50],ebx
   140018182:	mov    DWORD PTR [rsp+0x48],ebx
   140018186:	mov    DWORD PTR [rsp+0x40],ebx
   14001818a:	mov    DWORD PTR [rsp+0x38],0x2
   140018192:	mov    DWORD PTR [rsp+0x30],ebx
   140018196:	mov    DWORD PTR [rsp+0x28],ebx
   14001819a:	mov    DWORD PTR [rsp+0x20],r12d
   14001819f:	mov    r9d,ebp
   1400181a2:	xor    ecx,ecx
   1400181a4:	mov    edx,r13d
   1400181a7:	call   0x140017cc4
   1400181ac:	mov    edx,DWORD PTR [rip+0xc362]        # 0x140024514
   1400181b2:	mov    r8d,DWORD PTR [rip+0xc36b]        # 0x140024524
   1400181b9:	mov    ecx,DWORD PTR [rdi+0x1c]
   1400181bc:	cmp    edx,r8d
   1400181bf:	jge    0x1400181e3
   1400181c1:	cmp    ecx,edx
   1400181c3:	jl     0x140017fd2
   1400181c9:	cmp    ecx,r8d
   1400181cc:	jg     0x140017fd2
   1400181d2:	cmp    ecx,edx
   1400181d4:	jle    0x1400181f9
   1400181d6:	cmp    ecx,r8d
   1400181d9:	jge    0x1400181f9
   1400181db:	mov    eax,r13d
   1400181de:	jmp    0x140017fd4
   1400181e3:	cmp    ecx,r8d
   1400181e6:	jl     0x1400181db
   1400181e8:	cmp    ecx,edx
   1400181ea:	jg     0x1400181db
   1400181ec:	cmp    ecx,r8d
   1400181ef:	jle    0x1400181f9
   1400181f1:	cmp    ecx,edx
   1400181f3:	jl     0x140017fd2
   1400181f9:	mov    eax,DWORD PTR [rdi+0x8]
   1400181fc:	imul   eax,eax,0x3c
   1400181ff:	add    eax,DWORD PTR [rdi+0x4]
   140018202:	imul   eax,eax,0x3c
   140018205:	add    eax,DWORD PTR [rdi]
   140018207:	imul   eax,eax,0x3e8
   14001820d:	cmp    ecx,edx
   14001820f:	jne    0x140018221
   140018211:	cmp    eax,DWORD PTR [rip+0xc301]        # 0x140024518
   140018217:	setge  bl
   14001821a:	mov    eax,ebx
   14001821c:	jmp    0x140017fd4
   140018221:	cmp    eax,DWORD PTR [rip+0xc301]        # 0x140024528
   140018227:	setl   bl
   14001822a:	jmp    0x14001821a
   14001822c:	xor    r9d,r9d
   14001822f:	xor    r8d,r8d
   140018232:	xor    edx,edx
   140018234:	xor    ecx,ecx
   140018236:	mov    QWORD PTR [rsp+0x20],rbx
   14001823b:	call   0x14000cf78
   140018240:	int3   
   140018241:	int3   
   140018242:	int3   
   140018243:	int3   
   140018244:	sub    rsp,0x28
   140018248:	cmp    DWORD PTR [rip+0xd809],0x0        # 0x140025a58
   14001824f:	jne    0x14001827a
   140018251:	mov    ecx,0x6
   140018256:	call   0x14000cb28
   14001825b:	nop
   14001825c:	cmp    DWORD PTR [rip+0xd7f5],0x0        # 0x140025a58
   140018263:	jne    0x140018270
   140018265:	call   0x140017844
   14001826a:	inc    DWORD PTR [rip+0xd7e8]        # 0x140025a58
   140018270:	mov    ecx,0x6
   140018275:	call   0x14000ca28
   14001827a:	add    rsp,0x28
   14001827e:	ret    
   14001827f:	int3   
   140018280:	rex push rbx
   140018282:	sub    rsp,0x20
   140018286:	mov    rbx,rcx
   140018289:	mov    ecx,0x6
   14001828e:	call   0x14000cb28
   140018293:	nop
   140018294:	mov    rcx,rbx
   140018297:	call   0x140017f98
   14001829c:	mov    ebx,eax
   14001829e:	mov    ecx,0x6
   1400182a3:	call   0x14000ca28
   1400182a8:	mov    eax,ebx
   1400182aa:	add    rsp,0x20
   1400182ae:	pop    rbx
   1400182af:	ret    
   1400182b0:	sub    rsp,0x28
   1400182b4:	test   rcx,rcx
   1400182b7:	jne    0x1400182d0
   1400182b9:	call   0x14000bdc0
   1400182be:	mov    DWORD PTR [rax],0x16
   1400182c4:	call   0x14000d01c
   1400182c9:	mov    eax,0x16
   1400182ce:	jmp    0x1400182da
   1400182d0:	mov    eax,DWORD PTR [rip+0xc25e]        # 0x140024534
   1400182d6:	mov    DWORD PTR [rcx],eax
   1400182d8:	xor    eax,eax
   1400182da:	add    rsp,0x28
   1400182de:	ret    
   1400182df:	int3   
   1400182e0:	sub    rsp,0x28
   1400182e4:	test   rcx,rcx
   1400182e7:	jne    0x140018300
   1400182e9:	call   0x14000bdc0
   1400182ee:	mov    DWORD PTR [rax],0x16
   1400182f4:	call   0x14000d01c
   1400182f9:	mov    eax,0x16
   1400182fe:	jmp    0x14001830a
   140018300:	mov    eax,DWORD PTR [rip+0xc232]        # 0x140024538
   140018306:	mov    DWORD PTR [rcx],eax
   140018308:	xor    eax,eax
   14001830a:	add    rsp,0x28
   14001830e:	ret    
   14001830f:	int3   
   140018310:	sub    rsp,0x28
   140018314:	test   rcx,rcx
   140018317:	jne    0x140018330
   140018319:	call   0x14000bdc0
   14001831e:	mov    DWORD PTR [rax],0x16
   140018324:	call   0x14000d01c
   140018329:	mov    eax,0x16
   14001832e:	jmp    0x14001833a
   140018330:	mov    eax,DWORD PTR [rip+0xc1fa]        # 0x140024530
   140018336:	mov    DWORD PTR [rcx],eax
   140018338:	xor    eax,eax
   14001833a:	add    rsp,0x28
   14001833e:	ret    
   14001833f:	int3   
   140018340:	lea    rax,[rip+0xc1ed]        # 0x140024534
   140018347:	ret    
   140018348:	lea    rax,[rip+0xc1e9]        # 0x140024538
   14001834f:	ret    
   140018350:	lea    rax,[rip+0xc1d9]        # 0x140024530
   140018357:	ret    
   140018358:	lea    rax,[rip+0xc261]        # 0x1400245c0
   14001835f:	ret    
   140018360:	rex push rbp
   140018362:	push   r12
   140018364:	push   r13
   140018366:	push   r14
   140018368:	push   r15
   14001836a:	sub    rsp,0x50
   14001836e:	lea    rbp,[rsp+0x40]
   140018373:	mov    QWORD PTR [rbp+0x40],rbx
   140018377:	mov    QWORD PTR [rbp+0x48],rsi
   14001837b:	mov    QWORD PTR [rbp+0x50],rdi
   14001837f:	mov    rax,QWORD PTR [rip+0xad3a]        # 0x1400230c0
   140018386:	xor    rax,rbp
   140018389:	mov    QWORD PTR [rbp+0x8],rax
   14001838d:	mov    ebx,DWORD PTR [rbp+0x60]
   140018390:	xor    edi,edi
   140018392:	mov    r14,r9
   140018395:	mov    r15d,r8d
   140018398:	mov    DWORD PTR [rbp+0x0],edx
   14001839b:	test   ebx,ebx
   14001839d:	jle    0x1400183c9
   14001839f:	mov    r10d,ebx
   1400183a2:	mov    rax,r9
   1400183a5:	dec    r10d
   1400183a8:	cmp    BYTE PTR [rax],dil
   1400183ab:	je     0x1400183b9
   1400183ad:	inc    rax
   1400183b0:	test   r10d,r10d
   1400183b3:	jne    0x1400183a5
   1400183b5:	or     r10d,0xffffffff
   1400183b9:	mov    eax,ebx
   1400183bb:	sub    eax,r10d
   1400183be:	dec    eax
   1400183c0:	cmp    eax,ebx
   1400183c2:	lea    ebx,[rax+0x1]
   1400183c5:	jl     0x1400183c9
   1400183c7:	mov    ebx,eax
   1400183c9:	mov    r12d,DWORD PTR [rbp+0x78]
   1400183cd:	mov    esi,edi
   1400183cf:	test   r12d,r12d
   1400183d2:	jne    0x1400183db
   1400183d4:	mov    rax,QWORD PTR [rcx]
   1400183d7:	mov    r12d,DWORD PTR [rax+0x4]
   1400183db:	neg    DWORD PTR [rbp+0x80]
   1400183e1:	mov    r9d,ebx
   1400183e4:	mov    r8,r14
   1400183e7:	sbb    edx,edx
   1400183e9:	mov    ecx,r12d
   1400183ec:	mov    DWORD PTR [rsp+0x28],edi
   1400183f0:	and    edx,0x8
   1400183f3:	mov    QWORD PTR [rsp+0x20],rdi
   1400183f8:	inc    edx
   1400183fa:	call   QWORD PTR [rip+0x1d30]        # 0x14001a130
   140018400:	movsxd r13,eax
   140018403:	test   eax,eax
   140018405:	jne    0x14001840e
   140018407:	xor    eax,eax
   140018409:	jmp    0x140018604
   14001840e:	movabs r8,0xffffffffffffff0
   140018418:	test   eax,eax
   14001841a:	jle    0x14001847a
   14001841c:	xor    edx,edx
   14001841e:	lea    rax,[rdx-0x20]
   140018422:	div    r13
   140018425:	cmp    rax,0x2
   140018429:	jb     0x14001847a
   14001842b:	lea    rcx,[r13+r13*1+0x10]
   140018430:	cmp    rcx,0x400
   140018437:	ja     0x140018463
   140018439:	lea    rax,[rcx+0xf]
   14001843d:	cmp    rax,rcx
   140018440:	ja     0x140018445
   140018442:	mov    rax,r8
   140018445:	and    rax,0xfffffffffffffff0
   140018449:	call   0x140016e80
   14001844e:	sub    rsp,rax
   140018451:	lea    rdi,[rsp+0x40]
   140018456:	test   rdi,rdi
   140018459:	je     0x140018407
   14001845b:	mov    DWORD PTR [rdi],0xcccc
   140018461:	jmp    0x140018476
   140018463:	call   0x14000b2d4
   140018468:	mov    rdi,rax
   14001846b:	test   rax,rax
   14001846e:	je     0x14001847a
   140018470:	mov    DWORD PTR [rax],0xdddd
   140018476:	add    rdi,0x10
   14001847a:	test   rdi,rdi
   14001847d:	je     0x140018407
   14001847f:	mov    r9d,ebx
   140018482:	mov    r8,r14
   140018485:	mov    edx,0x1
   14001848a:	mov    ecx,r12d
   14001848d:	mov    DWORD PTR [rsp+0x28],r13d
   140018492:	mov    QWORD PTR [rsp+0x20],rdi
   140018497:	call   QWORD PTR [rip+0x1c93]        # 0x14001a130
   14001849d:	test   eax,eax
   14001849f:	je     0x1400185f1
   1400184a5:	mov    r14d,DWORD PTR [rbp+0x0]
   1400184a9:	and    DWORD PTR [rsp+0x28],esi
   1400184ad:	and    QWORD PTR [rsp+0x20],rsi
   1400184b2:	mov    ecx,r14d
   1400184b5:	mov    r9d,r13d
   1400184b8:	mov    r8,rdi
   1400184bb:	mov    edx,r15d
   1400184be:	call   QWORD PTR [rip+0x1e64]        # 0x14001a328
   1400184c4:	movsxd rsi,eax
   1400184c7:	test   eax,eax
   1400184c9:	je     0x1400185f1
   1400184cf:	mov    r8d,0x400
   1400184d5:	test   r8d,r15d
   1400184d8:	je     0x140018511
   1400184da:	mov    ecx,DWORD PTR [rbp+0x70]
   1400184dd:	test   ecx,ecx
   1400184df:	je     0x1400185f1
   1400184e5:	cmp    esi,ecx
   1400184e7:	jg     0x1400185f1
   1400184ed:	mov    rax,QWORD PTR [rbp+0x68]
   1400184f1:	mov    DWORD PTR [rsp+0x28],ecx
   1400184f5:	mov    r9d,r13d
   1400184f8:	mov    r8,rdi
   1400184fb:	mov    edx,r15d
   1400184fe:	mov    ecx,r14d
   140018501:	mov    QWORD PTR [rsp+0x20],rax
   140018506:	call   QWORD PTR [rip+0x1e1c]        # 0x14001a328
   14001850c:	jmp    0x1400185f1
   140018511:	test   eax,eax
   140018513:	jle    0x14001857c
   140018515:	xor    edx,edx
   140018517:	lea    rax,[rdx-0x20]
   14001851b:	div    rsi
   14001851e:	cmp    rax,0x2
   140018522:	jb     0x14001857c
   140018524:	lea    rcx,[rsi+rsi*1+0x10]
   140018529:	cmp    rcx,r8
   14001852c:	ja     0x140018563
   14001852e:	lea    rax,[rcx+0xf]
   140018532:	cmp    rax,rcx
   140018535:	ja     0x140018541
   140018537:	movabs rax,0xffffffffffffff0
   140018541:	and    rax,0xfffffffffffffff0
   140018545:	call   0x140016e80
   14001854a:	sub    rsp,rax
   14001854d:	lea    rbx,[rsp+0x40]
   140018552:	test   rbx,rbx
   140018555:	je     0x1400185f1
   14001855b:	mov    DWORD PTR [rbx],0xcccc
   140018561:	jmp    0x140018576
   140018563:	call   0x14000b2d4
   140018568:	mov    rbx,rax
   14001856b:	test   rax,rax
   14001856e:	je     0x14001857e
   140018570:	mov    DWORD PTR [rax],0xdddd
   140018576:	add    rbx,0x10
   14001857a:	jmp    0x14001857e
   14001857c:	xor    ebx,ebx
   14001857e:	test   rbx,rbx
   140018581:	je     0x1400185f1
   140018583:	mov    r9d,r13d
   140018586:	mov    r8,rdi
   140018589:	mov    edx,r15d
   14001858c:	mov    ecx,r14d
   14001858f:	mov    DWORD PTR [rsp+0x28],esi
   140018593:	mov    QWORD PTR [rsp+0x20],rbx
   140018598:	call   QWORD PTR [rip+0x1d8a]        # 0x14001a328
   14001859e:	xor    ecx,ecx
   1400185a0:	test   eax,eax
   1400185a2:	je     0x1400185e0
   1400185a4:	mov    eax,DWORD PTR [rbp+0x70]
   1400185a7:	xor    edx,edx
   1400185a9:	mov    QWORD PTR [rsp+0x38],rcx
   1400185ae:	mov    r9d,esi
   1400185b1:	mov    r8,rbx
   1400185b4:	mov    QWORD PTR [rsp+0x30],rcx
   1400185b9:	test   eax,eax
   1400185bb:	jne    0x1400185c8
   1400185bd:	mov    DWORD PTR [rsp+0x28],ecx
   1400185c1:	mov    QWORD PTR [rsp+0x20],rcx
   1400185c6:	jmp    0x1400185d5
   1400185c8:	mov    DWORD PTR [rsp+0x28],eax
   1400185cc:	mov    rax,QWORD PTR [rbp+0x68]
   1400185d0:	mov    QWORD PTR [rsp+0x20],rax
   1400185d5:	mov    ecx,r12d
   1400185d8:	call   QWORD PTR [rip+0x1c22]        # 0x14001a200
   1400185de:	mov    esi,eax
   1400185e0:	lea    rcx,[rbx-0x10]
   1400185e4:	cmp    DWORD PTR [rcx],0xdddd
   1400185ea:	jne    0x1400185f1
   1400185ec:	call   0x14000b460
   1400185f1:	lea    rcx,[rdi-0x10]
   1400185f5:	cmp    DWORD PTR [rcx],0xdddd
   1400185fb:	jne    0x140018602
   1400185fd:	call   0x14000b460
   140018602:	mov    eax,esi
   140018604:	mov    rcx,QWORD PTR [rbp+0x8]
   140018608:	xor    rcx,rbp
   14001860b:	call   0x14000a820
   140018610:	mov    rbx,QWORD PTR [rbp+0x40]
   140018614:	mov    rsi,QWORD PTR [rbp+0x48]
   140018618:	mov    rdi,QWORD PTR [rbp+0x50]
   14001861c:	lea    rsp,[rbp+0x10]
   140018620:	pop    r15
   140018622:	pop    r14
   140018624:	pop    r13
   140018626:	pop    r12
   140018628:	pop    rbp
   140018629:	ret    
   14001862a:	int3   
   14001862b:	int3   
   14001862c:	mov    QWORD PTR [rsp+0x8],rbx
   140018631:	mov    QWORD PTR [rsp+0x10],rsi
   140018636:	push   rdi
   140018637:	sub    rsp,0x70
   14001863b:	mov    esi,edx
   14001863d:	mov    rdx,rcx
   140018640:	lea    rcx,[rsp+0x50]
   140018645:	mov    rbx,r9
   140018648:	mov    edi,r8d
   14001864b:	call   0x14000c6f4
   140018650:	mov    eax,DWORD PTR [rsp+0xb8]
   140018657:	mov    r11d,DWORD PTR [rsp+0xc0]
   14001865f:	lea    rcx,[rsp+0x50]
   140018664:	mov    DWORD PTR [rsp+0x40],r11d
   140018669:	mov    DWORD PTR [rsp+0x38],eax
   14001866d:	mov    eax,DWORD PTR [rsp+0xb0]
   140018674:	mov    DWORD PTR [rsp+0x30],eax
   140018678:	mov    rax,QWORD PTR [rsp+0xa8]
   140018680:	mov    r9,rbx
   140018683:	mov    QWORD PTR [rsp+0x28],rax
   140018688:	mov    eax,DWORD PTR [rsp+0xa0]
   14001868f:	mov    r8d,edi
   140018692:	mov    edx,esi
   140018694:	mov    DWORD PTR [rsp+0x20],eax
   140018698:	call   0x140018360
   14001869d:	cmp    BYTE PTR [rsp+0x68],0x0
   1400186a2:	je     0x1400186b0
   1400186a4:	mov    rcx,QWORD PTR [rsp+0x60]
   1400186a9:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400186b0:	lea    r11,[rsp+0x70]
   1400186b5:	mov    rbx,QWORD PTR [r11+0x10]
   1400186b9:	mov    rsi,QWORD PTR [r11+0x18]
   1400186bd:	mov    rsp,r11
   1400186c0:	pop    rdi
   1400186c1:	ret    
   1400186c2:	int3   
   1400186c3:	int3   
   1400186c4:	mov    QWORD PTR [rsp+0x8],rbx
   1400186c9:	mov    QWORD PTR [rsp+0x10],rbp
   1400186ce:	mov    QWORD PTR [rsp+0x18],rsi
   1400186d3:	push   rdi
   1400186d4:	sub    rsp,0x50
   1400186d8:	xor    ebp,ebp
   1400186da:	mov    rsi,r8
   1400186dd:	mov    rbx,rdx
   1400186e0:	mov    rdi,rcx
   1400186e3:	test   r8,r8
   1400186e6:	jne    0x1400186ef
   1400186e8:	xor    eax,eax
   1400186ea:	jmp    0x1400187d7
   1400186ef:	test   rcx,rcx
   1400186f2:	jne    0x14001870e
   1400186f4:	call   0x14000bdc0
   1400186f9:	mov    DWORD PTR [rax],0x16
   1400186ff:	call   0x14000d01c
   140018704:	mov    eax,0x7fffffff
   140018709:	jmp    0x1400187d7
   14001870e:	test   rdx,rdx
   140018711:	je     0x1400186f4
   140018713:	cmp    r8,0x7fffffff
   14001871a:	ja     0x1400186f4
   14001871c:	lea    rcx,[rsp+0x30]
   140018721:	mov    rdx,r9
   140018724:	call   0x14000c6f4
   140018729:	mov    r11,QWORD PTR [rsp+0x30]
   14001872e:	mov    ecx,DWORD PTR [r11+0x10]
   140018732:	test   ecx,ecx
   140018734:	jne    0x14001877d
   140018736:	sub    rdi,rbx
   140018739:	movzx  eax,WORD PTR [rdi+rbx*1]
   14001873d:	cmp    ax,0x41
   140018741:	jb     0x14001874d
   140018743:	cmp    ax,0x5a
   140018747:	ja     0x14001874d
   140018749:	add    ax,0x20
   14001874d:	movzx  ecx,WORD PTR [rbx]
   140018750:	cmp    cx,0x41
   140018754:	jb     0x140018760
   140018756:	cmp    cx,0x5a
   14001875a:	ja     0x140018760
   14001875c:	add    cx,0x20
   140018760:	add    rbx,0x2
   140018764:	dec    rsi
   140018767:	je     0x140018773
   140018769:	test   ax,ax
   14001876c:	je     0x140018773
   14001876e:	cmp    ax,cx
   140018771:	je     0x140018739
   140018773:	movzx  ecx,cx
   140018776:	movzx  eax,ax
   140018779:	sub    eax,ecx
   14001877b:	jmp    0x1400187c4
   14001877d:	mov    r9d,esi
   140018780:	mov    r8,rdi
   140018783:	mov    edx,0x1001
   140018788:	mov    DWORD PTR [rsp+0x28],esi
   14001878c:	mov    QWORD PTR [rsp+0x20],rbx
   140018791:	call   0x1400196f4
   140018796:	test   eax,eax
   140018798:	jne    0x1400187c1
   14001879a:	call   0x14000bdc0
   14001879f:	mov    DWORD PTR [rax],0x16
   1400187a5:	cmp    BYTE PTR [rsp+0x48],bpl
   1400187aa:	je     0x140018704
   1400187b0:	mov    rax,QWORD PTR [rsp+0x40]
   1400187b5:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400187bc:	jmp    0x140018704
   1400187c1:	add    eax,0xfffffffe
   1400187c4:	cmp    BYTE PTR [rsp+0x48],bpl
   1400187c9:	je     0x1400187d7
   1400187cb:	mov    rcx,QWORD PTR [rsp+0x40]
   1400187d0:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400187d7:	mov    rbx,QWORD PTR [rsp+0x60]
   1400187dc:	mov    rbp,QWORD PTR [rsp+0x68]
   1400187e1:	mov    rsi,QWORD PTR [rsp+0x70]
   1400187e6:	add    rsp,0x50
   1400187ea:	pop    rdi
   1400187eb:	ret    
   1400187ec:	sub    rsp,0x28
   1400187f0:	xor    r9d,r9d
   1400187f3:	mov    r10,rcx
   1400187f6:	cmp    DWORD PTR [rip+0xd16b],r9d        # 0x140025968
   1400187fd:	jne    0x140018877
   1400187ff:	test   rcx,rcx
   140018802:	jne    0x14001881e
   140018804:	call   0x14000bdc0
   140018809:	mov    DWORD PTR [rax],0x16
   14001880f:	call   0x14000d01c
   140018814:	mov    eax,0x7fffffff
   140018819:	add    rsp,0x28
   14001881d:	ret    
   14001881e:	test   rdx,rdx
   140018821:	je     0x140018804
   140018823:	cmp    r8,0x7fffffff
   14001882a:	ja     0x140018804
   14001882c:	sub    r10,rdx
   14001882f:	movzx  eax,WORD PTR [r10+rdx*1]
   140018834:	cmp    ax,0x41
   140018838:	jb     0x140018844
   14001883a:	cmp    ax,0x5a
   14001883e:	ja     0x140018844
   140018840:	add    ax,0x20
   140018844:	movzx  ecx,WORD PTR [rdx]
   140018847:	cmp    cx,0x41
   14001884b:	jb     0x140018857
   14001884d:	cmp    cx,0x5a
   140018851:	ja     0x140018857
   140018853:	add    cx,0x20
   140018857:	add    rdx,0x2
   14001885b:	dec    r8
   14001885e:	je     0x14001886a
   140018860:	test   ax,ax
   140018863:	je     0x14001886a
   140018865:	cmp    ax,cx
   140018868:	je     0x14001882f
   14001886a:	movzx  ecx,cx
   14001886d:	movzx  eax,ax
   140018870:	sub    eax,ecx
   140018872:	add    rsp,0x28
   140018876:	ret    
   140018877:	add    rsp,0x28
   14001887b:	jmp    0x1400186c4
   140018880:	mov    QWORD PTR [rsp+0x8],rbx
   140018885:	mov    QWORD PTR [rsp+0x10],rsi
   14001888a:	push   rdi
   14001888b:	sub    rsp,0x30
   14001888f:	mov    rbx,rcx
   140018892:	test   rcx,rcx
   140018895:	je     0x1400188e3
   140018897:	call   0x140013c34
   14001889c:	mov    edx,0x2
   1400188a1:	lea    rcx,[rax+0x1]
   1400188a5:	mov    rsi,rax
   1400188a8:	call   0x14000eb14
   1400188ad:	mov    rdi,rax
   1400188b0:	test   rax,rax
   1400188b3:	je     0x1400188e3
   1400188b5:	lea    rdx,[rsi+0x1]
   1400188b9:	mov    r8,rbx
   1400188bc:	mov    rcx,rax
   1400188bf:	call   0x14001517c
   1400188c4:	test   eax,eax
   1400188c6:	jne    0x1400188cd
   1400188c8:	mov    rax,rdi
   1400188cb:	jmp    0x1400188e5
   1400188cd:	and    QWORD PTR [rsp+0x20],0x0
   1400188d3:	xor    r9d,r9d
   1400188d6:	xor    r8d,r8d
   1400188d9:	xor    edx,edx
   1400188db:	xor    ecx,ecx
   1400188dd:	call   0x14000cf78
   1400188e2:	int3   
   1400188e3:	xor    eax,eax
   1400188e5:	mov    rbx,QWORD PTR [rsp+0x40]
   1400188ea:	mov    rsi,QWORD PTR [rsp+0x48]
   1400188ef:	add    rsp,0x30
   1400188f3:	pop    rdi
   1400188f4:	ret    
   1400188f5:	int3   
   1400188f6:	int3   
   1400188f7:	int3   
   1400188f8:	mov    QWORD PTR [rsp+0x10],rbx
   1400188fd:	mov    QWORD PTR [rsp+0x18],rbp
   140018902:	push   rdi
   140018903:	sub    rsp,0x30
   140018907:	and    QWORD PTR [rsp+0x40],0x0
   14001890d:	mov    rbx,QWORD PTR [rip+0xc084]        # 0x140024998
   140018914:	mov    rax,QWORD PTR [rbx]
   140018917:	test   rax,rax
   14001891a:	je     0x140018991
   14001891c:	or     ebp,0xffffffff
   14001891f:	and    DWORD PTR [rsp+0x28],0x0
   140018924:	and    QWORD PTR [rsp+0x20],0x0
   14001892a:	mov    r9d,ebp
   14001892d:	mov    r8,rax
   140018930:	xor    edx,edx
   140018932:	xor    ecx,ecx
   140018934:	call   QWORD PTR [rip+0x17f6]        # 0x14001a130
   14001893a:	movsxd rdi,eax
   14001893d:	test   eax,eax
   14001893f:	je     0x1400189b9
   140018941:	mov    rcx,rdi
   140018944:	mov    edx,0x2
   140018949:	call   0x140010b24
   14001894e:	mov    QWORD PTR [rsp+0x40],rax
   140018953:	test   rax,rax
   140018956:	je     0x1400189b9
   140018958:	mov    r8,QWORD PTR [rbx]
   14001895b:	mov    r9d,ebp
   14001895e:	xor    edx,edx
   140018960:	xor    ecx,ecx
   140018962:	mov    DWORD PTR [rsp+0x28],edi
   140018966:	mov    QWORD PTR [rsp+0x20],rax
   14001896b:	call   QWORD PTR [rip+0x17bf]        # 0x14001a130
   140018971:	test   eax,eax
   140018973:	je     0x1400189af
   140018975:	lea    rcx,[rsp+0x40]
   14001897a:	xor    edx,edx
   14001897c:	call   0x140013878
   140018981:	test   eax,eax
   140018983:	js     0x1400189a3
   140018985:	add    rbx,0x8
   140018989:	mov    rax,QWORD PTR [rbx]
   14001898c:	test   rax,rax
   14001898f:	jne    0x14001891f
   140018991:	xor    eax,eax
   140018993:	mov    rbx,QWORD PTR [rsp+0x48]
   140018998:	mov    rbp,QWORD PTR [rsp+0x50]
   14001899d:	add    rsp,0x30
   1400189a1:	pop    rdi
   1400189a2:	ret    
   1400189a3:	mov    rcx,QWORD PTR [rsp+0x40]
   1400189a8:	test   rcx,rcx
   1400189ab:	je     0x1400189b9
   1400189ad:	jmp    0x1400189b4
   1400189af:	mov    rcx,QWORD PTR [rsp+0x40]
   1400189b4:	call   0x14000b460
   1400189b9:	mov    eax,ebp
   1400189bb:	jmp    0x140018993
   1400189bd:	int3   
   1400189be:	int3   
   1400189bf:	int3   
   1400189c0:	mov    rax,rsp
   1400189c3:	mov    QWORD PTR [rax+0x8],rbx
   1400189c7:	mov    QWORD PTR [rax+0x10],rbp
   1400189cb:	mov    QWORD PTR [rax+0x18],rsi
   1400189cf:	mov    QWORD PTR [rax+0x20],rdi
   1400189d3:	push   r12
   1400189d5:	sub    rsp,0x30
   1400189d9:	mov    rbx,QWORD PTR [rip+0xc008]        # 0x1400249e8
   1400189e0:	xor    r12d,r12d
   1400189e3:	mov    edi,r12d
   1400189e6:	test   rbx,rbx
   1400189e9:	jne    0x140018a08
   1400189eb:	or     eax,0xffffffff
   1400189ee:	jmp    0x140018aad
   1400189f3:	cmp    ax,0x3d
   1400189f7:	je     0x1400189fb
   1400189f9:	inc    edi
   1400189fb:	mov    rcx,rbx
   1400189fe:	call   0x140013c34
   140018a03:	lea    rbx,[rbx+rax*2+0x2]
   140018a08:	movzx  eax,WORD PTR [rbx]
   140018a0b:	test   ax,ax
   140018a0e:	jne    0x1400189f3
   140018a10:	lea    eax,[rdi+0x1]
   140018a13:	mov    edx,0x8
   140018a18:	movsxd rcx,eax
   140018a1b:	call   0x140010b24
   140018a20:	mov    rdi,rax
   140018a23:	mov    QWORD PTR [rip+0xbf7e],rax        # 0x1400249a8
   140018a2a:	test   rax,rax
   140018a2d:	je     0x1400189eb
   140018a2f:	mov    rbx,QWORD PTR [rip+0xbfb2]        # 0x1400249e8
   140018a36:	cmp    WORD PTR [rbx],r12w
   140018a3a:	je     0x140018a8f
   140018a3c:	mov    rcx,rbx
   140018a3f:	call   0x140013c34
   140018a44:	cmp    WORD PTR [rbx],0x3d
   140018a48:	lea    esi,[rax+0x1]
   140018a4b:	je     0x140018a7b
   140018a4d:	movsxd rbp,esi
   140018a50:	mov    edx,0x2
   140018a55:	mov    rcx,rbp
   140018a58:	call   0x140010b24
   140018a5d:	mov    QWORD PTR [rdi],rax
   140018a60:	test   rax,rax
   140018a63:	je     0x140018add
   140018a65:	mov    r8,rbx
   140018a68:	mov    rdx,rbp
   140018a6b:	mov    rcx,rax
   140018a6e:	call   0x14001517c
   140018a73:	test   eax,eax
   140018a75:	jne    0x140018ac8
   140018a77:	add    rdi,0x8
   140018a7b:	movsxd rax,esi
   140018a7e:	lea    rbx,[rbx+rax*2]
   140018a82:	cmp    WORD PTR [rbx],r12w
   140018a86:	jne    0x140018a3c
   140018a88:	mov    rbx,QWORD PTR [rip+0xbf59]        # 0x1400249e8
   140018a8f:	mov    rcx,rbx
   140018a92:	call   0x14000b460
   140018a97:	mov    QWORD PTR [rip+0xbf4a],r12        # 0x1400249e8
   140018a9e:	mov    QWORD PTR [rdi],r12
   140018aa1:	mov    DWORD PTR [rip+0xe205],0x1        # 0x140026cb0
   140018aab:	xor    eax,eax
   140018aad:	mov    rbx,QWORD PTR [rsp+0x40]
   140018ab2:	mov    rbp,QWORD PTR [rsp+0x48]
   140018ab7:	mov    rsi,QWORD PTR [rsp+0x50]
   140018abc:	mov    rdi,QWORD PTR [rsp+0x58]
   140018ac1:	add    rsp,0x30
   140018ac5:	pop    r12
   140018ac7:	ret    
   140018ac8:	xor    r9d,r9d
   140018acb:	xor    r8d,r8d
   140018ace:	xor    edx,edx
   140018ad0:	xor    ecx,ecx
   140018ad2:	mov    QWORD PTR [rsp+0x20],r12
   140018ad7:	call   0x14000cf78
   140018adc:	int3   
   140018add:	mov    rcx,QWORD PTR [rip+0xbec4]        # 0x1400249a8
   140018ae4:	call   0x14000b460
   140018ae9:	mov    QWORD PTR [rip+0xbeb8],r12        # 0x1400249a8
   140018af0:	jmp    0x1400189eb
   140018af5:	int3   
   140018af6:	int3   
   140018af7:	int3   
   140018af8:	mov    QWORD PTR [rsp+0x8],rbx
   140018afd:	mov    QWORD PTR [rsp+0x10],rbp
   140018b02:	mov    QWORD PTR [rsp+0x18],rsi
   140018b07:	push   rdi
   140018b08:	sub    rsp,0x20
   140018b0c:	call   QWORD PTR [rip+0x16fe]        # 0x14001a210
   140018b12:	xor    ebx,ebx
   140018b14:	mov    rdi,rax
   140018b17:	test   rax,rax
   140018b1a:	je     0x140018b68
   140018b1c:	cmp    WORD PTR [rdi],bx
   140018b1f:	je     0x140018b33
   140018b21:	add    rax,0x2
   140018b25:	cmp    WORD PTR [rax],bx
   140018b28:	jne    0x140018b21
   140018b2a:	add    rax,0x2
   140018b2e:	cmp    WORD PTR [rax],bx
   140018b31:	jne    0x140018b21
   140018b33:	sub    eax,edi
   140018b35:	add    eax,0x2
   140018b38:	movsxd rbp,eax
   140018b3b:	mov    rcx,rbp
   140018b3e:	call   0x140010aa4
   140018b43:	mov    rsi,rax
   140018b46:	test   rax,rax
   140018b49:	je     0x140018b5c
   140018b4b:	mov    r8,rbp
   140018b4e:	mov    rdx,rdi
   140018b51:	mov    rcx,rax
   140018b54:	call   0x14000a140
   140018b59:	mov    rbx,rsi
   140018b5c:	mov    rcx,rdi
   140018b5f:	call   QWORD PTR [rip+0x16a3]        # 0x14001a208
   140018b65:	mov    rax,rbx
   140018b68:	mov    rbx,QWORD PTR [rsp+0x30]
   140018b6d:	mov    rbp,QWORD PTR [rsp+0x38]
   140018b72:	mov    rsi,QWORD PTR [rsp+0x40]
   140018b77:	add    rsp,0x20
   140018b7b:	pop    rdi
   140018b7c:	ret    
   140018b7d:	int3   
   140018b7e:	int3   
   140018b7f:	int3   
   140018b80:	jmp    0x140018b8b
   140018b82:	cmp    ax,dx
   140018b85:	je     0x140018b98
   140018b87:	add    rcx,0x2
   140018b8b:	movzx  eax,WORD PTR [rcx]
   140018b8e:	test   ax,ax
   140018b91:	jne    0x140018b82
   140018b93:	cmp    ax,dx
   140018b96:	jne    0x140018b9c
   140018b98:	mov    rax,rcx
   140018b9b:	ret    
   140018b9c:	xor    eax,eax
   140018b9e:	ret    
   140018b9f:	int3   
   140018ba0:	mov    QWORD PTR [rsp+0x8],rbx
   140018ba5:	mov    QWORD PTR [rsp+0x10],rsi
   140018baa:	push   rdi
   140018bab:	sub    rsp,0x30
   140018baf:	mov    rbx,rcx
   140018bb2:	test   rcx,rcx
   140018bb5:	je     0x140018bfe
   140018bb7:	call   0x140009fa0
   140018bbc:	mov    rsi,rax
   140018bbf:	lea    rcx,[rax+0x1]
   140018bc3:	call   0x14000b2d4
   140018bc8:	mov    rdi,rax
   140018bcb:	test   rax,rax
   140018bce:	je     0x140018bfe
   140018bd0:	lea    rdx,[rsi+0x1]
   140018bd4:	mov    r8,rbx
   140018bd7:	mov    rcx,rax
   140018bda:	call   0x14000eab0
   140018bdf:	test   eax,eax
   140018be1:	jne    0x140018be8
   140018be3:	mov    rax,rdi
   140018be6:	jmp    0x140018c00
   140018be8:	and    QWORD PTR [rsp+0x20],0x0
   140018bee:	xor    r9d,r9d
   140018bf1:	xor    r8d,r8d
   140018bf4:	xor    edx,edx
   140018bf6:	xor    ecx,ecx
   140018bf8:	call   0x14000cf78
   140018bfd:	int3   
   140018bfe:	xor    eax,eax
   140018c00:	mov    rbx,QWORD PTR [rsp+0x40]
   140018c05:	mov    rsi,QWORD PTR [rsp+0x48]
   140018c0a:	add    rsp,0x30
   140018c0e:	pop    rdi
   140018c0f:	ret    
   140018c10:	rex push rbp
   140018c12:	push   r12
   140018c14:	push   r13
   140018c16:	push   r14
   140018c18:	push   r15
   140018c1a:	sub    rsp,0x40
   140018c1e:	lea    rbp,[rsp+0x30]
   140018c23:	mov    QWORD PTR [rbp+0x40],rbx
   140018c27:	mov    QWORD PTR [rbp+0x48],rsi
   140018c2b:	mov    QWORD PTR [rbp+0x50],rdi
   140018c2f:	mov    rax,QWORD PTR [rip+0xa48a]        # 0x1400230c0
   140018c36:	xor    rax,rbp
   140018c39:	mov    QWORD PTR [rbp+0x0],rax
   140018c3d:	mov    esi,DWORD PTR [rbp+0x68]
   140018c40:	xor    edi,edi
   140018c42:	mov    r13d,r9d
   140018c45:	mov    r14,r8
   140018c48:	mov    r15d,edx
   140018c4b:	test   esi,esi
   140018c4d:	jne    0x140018c55
   140018c4f:	mov    rax,QWORD PTR [rcx]
   140018c52:	mov    esi,DWORD PTR [rax+0x4]
   140018c55:	neg    DWORD PTR [rbp+0x70]
   140018c58:	mov    ecx,esi
   140018c5a:	mov    DWORD PTR [rsp+0x28],edi
   140018c5e:	sbb    edx,edx
   140018c60:	mov    QWORD PTR [rsp+0x20],rdi
   140018c65:	and    edx,0x8
   140018c68:	inc    edx
   140018c6a:	call   QWORD PTR [rip+0x14c0]        # 0x14001a130
   140018c70:	movsxd r12,eax
   140018c73:	test   eax,eax
   140018c75:	jne    0x140018c7e
   140018c77:	xor    eax,eax
   140018c79:	jmp    0x140018d48
   140018c7e:	jle    0x140018ce7
   140018c80:	movabs rax,0x7ffffffffffffff0
   140018c8a:	cmp    r12,rax
   140018c8d:	ja     0x140018ce7
   140018c8f:	lea    rcx,[r12+r12*1+0x10]
   140018c94:	cmp    rcx,0x400
   140018c9b:	ja     0x140018cce
   140018c9d:	lea    rax,[rcx+0xf]
   140018ca1:	cmp    rax,rcx
   140018ca4:	ja     0x140018cb0
   140018ca6:	movabs rax,0xffffffffffffff0
   140018cb0:	and    rax,0xfffffffffffffff0
   140018cb4:	call   0x140016e80
   140018cb9:	sub    rsp,rax
   140018cbc:	lea    rbx,[rsp+0x30]
   140018cc1:	test   rbx,rbx
   140018cc4:	je     0x140018c77
   140018cc6:	mov    DWORD PTR [rbx],0xcccc
   140018ccc:	jmp    0x140018ce1
   140018cce:	call   0x14000b2d4
   140018cd3:	mov    rbx,rax
   140018cd6:	test   rax,rax
   140018cd9:	je     0x140018cea
   140018cdb:	mov    DWORD PTR [rax],0xdddd
   140018ce1:	add    rbx,0x10
   140018ce5:	jmp    0x140018cea
   140018ce7:	mov    rbx,rdi
   140018cea:	test   rbx,rbx
   140018ced:	je     0x140018c77
   140018cef:	mov    r8,r12
   140018cf2:	xor    edx,edx
   140018cf4:	mov    rcx,rbx
   140018cf7:	add    r8,r8
   140018cfa:	call   0x14000a530
   140018cff:	mov    r9d,r13d
   140018d02:	mov    r8,r14
   140018d05:	mov    edx,0x1
   140018d0a:	mov    ecx,esi
   140018d0c:	mov    DWORD PTR [rsp+0x28],r12d
   140018d11:	mov    QWORD PTR [rsp+0x20],rbx
   140018d16:	call   QWORD PTR [rip+0x1414]        # 0x14001a130
   140018d1c:	test   eax,eax
   140018d1e:	je     0x140018d35
   140018d20:	mov    r9,QWORD PTR [rbp+0x60]
   140018d24:	mov    r8d,eax
   140018d27:	mov    rdx,rbx
   140018d2a:	mov    ecx,r15d
   140018d2d:	call   QWORD PTR [rip+0x15fd]        # 0x14001a330
   140018d33:	mov    edi,eax
   140018d35:	lea    rcx,[rbx-0x10]
   140018d39:	cmp    DWORD PTR [rcx],0xdddd
   140018d3f:	jne    0x140018d46
   140018d41:	call   0x14000b460
   140018d46:	mov    eax,edi
   140018d48:	mov    rcx,QWORD PTR [rbp+0x0]
   140018d4c:	xor    rcx,rbp
   140018d4f:	call   0x14000a820
   140018d54:	mov    rbx,QWORD PTR [rbp+0x40]
   140018d58:	mov    rsi,QWORD PTR [rbp+0x48]
   140018d5c:	mov    rdi,QWORD PTR [rbp+0x50]
   140018d60:	lea    rsp,[rbp+0x10]
   140018d64:	pop    r15
   140018d66:	pop    r14
   140018d68:	pop    r13
   140018d6a:	pop    r12
   140018d6c:	pop    rbp
   140018d6d:	ret    
   140018d6e:	int3   
   140018d6f:	int3   
   140018d70:	mov    QWORD PTR [rsp+0x8],rbx
   140018d75:	mov    QWORD PTR [rsp+0x10],rsi
   140018d7a:	push   rdi
   140018d7b:	sub    rsp,0x60
   140018d7f:	mov    esi,edx
   140018d81:	mov    rdx,rcx
   140018d84:	lea    rcx,[rsp+0x40]
   140018d89:	mov    ebx,r9d
   140018d8c:	mov    rdi,r8
   140018d8f:	call   0x14000c6f4
   140018d94:	mov    r11d,DWORD PTR [rsp+0xa8]
   140018d9c:	mov    eax,DWORD PTR [rsp+0x98]
   140018da3:	lea    rcx,[rsp+0x40]
   140018da8:	mov    DWORD PTR [rsp+0x30],r11d
   140018dad:	mov    DWORD PTR [rsp+0x28],eax
   140018db1:	mov    rax,QWORD PTR [rsp+0x90]
   140018db9:	mov    r9d,ebx
   140018dbc:	mov    r8,rdi
   140018dbf:	mov    edx,esi
   140018dc1:	mov    QWORD PTR [rsp+0x20],rax
   140018dc6:	call   0x140018c10
   140018dcb:	cmp    BYTE PTR [rsp+0x58],0x0
   140018dd0:	je     0x140018dde
   140018dd2:	mov    rcx,QWORD PTR [rsp+0x50]
   140018dd7:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140018dde:	mov    rbx,QWORD PTR [rsp+0x70]
   140018de3:	mov    rsi,QWORD PTR [rsp+0x78]
   140018de8:	add    rsp,0x60
   140018dec:	pop    rdi
   140018ded:	ret    
   140018dee:	int3   
   140018def:	int3   
   140018df0:	test   rcx,rcx
   140018df3:	je     0x1400191dd
   140018df9:	push   rbx
   140018dfa:	sub    rsp,0x20
   140018dfe:	mov    rbx,rcx
   140018e01:	mov    rcx,QWORD PTR [rcx+0x8]
   140018e05:	call   0x14000b460
   140018e0a:	mov    rcx,QWORD PTR [rbx+0x10]
   140018e0e:	call   0x14000b460
   140018e13:	mov    rcx,QWORD PTR [rbx+0x18]
   140018e17:	call   0x14000b460
   140018e1c:	mov    rcx,QWORD PTR [rbx+0x20]
   140018e20:	call   0x14000b460
   140018e25:	mov    rcx,QWORD PTR [rbx+0x28]
   140018e29:	call   0x14000b460
   140018e2e:	mov    rcx,QWORD PTR [rbx+0x30]
   140018e32:	call   0x14000b460
   140018e37:	mov    rcx,QWORD PTR [rbx]
   140018e3a:	call   0x14000b460
   140018e3f:	mov    rcx,QWORD PTR [rbx+0x40]
   140018e43:	call   0x14000b460
   140018e48:	mov    rcx,QWORD PTR [rbx+0x48]
   140018e4c:	call   0x14000b460
   140018e51:	mov    rcx,QWORD PTR [rbx+0x50]
   140018e55:	call   0x14000b460
   140018e5a:	mov    rcx,QWORD PTR [rbx+0x58]
   140018e5e:	call   0x14000b460
   140018e63:	mov    rcx,QWORD PTR [rbx+0x60]
   140018e67:	call   0x14000b460
   140018e6c:	mov    rcx,QWORD PTR [rbx+0x68]
   140018e70:	call   0x14000b460
   140018e75:	mov    rcx,QWORD PTR [rbx+0x38]
   140018e79:	call   0x14000b460
   140018e7e:	mov    rcx,QWORD PTR [rbx+0x70]
   140018e82:	call   0x14000b460
   140018e87:	mov    rcx,QWORD PTR [rbx+0x78]
   140018e8b:	call   0x14000b460
   140018e90:	mov    rcx,QWORD PTR [rbx+0x80]
   140018e97:	call   0x14000b460
   140018e9c:	mov    rcx,QWORD PTR [rbx+0x88]
   140018ea3:	call   0x14000b460
   140018ea8:	mov    rcx,QWORD PTR [rbx+0x90]
   140018eaf:	call   0x14000b460
   140018eb4:	mov    rcx,QWORD PTR [rbx+0x98]
   140018ebb:	call   0x14000b460
   140018ec0:	mov    rcx,QWORD PTR [rbx+0xa0]
   140018ec7:	call   0x14000b460
   140018ecc:	mov    rcx,QWORD PTR [rbx+0xa8]
   140018ed3:	call   0x14000b460
   140018ed8:	mov    rcx,QWORD PTR [rbx+0xb0]
   140018edf:	call   0x14000b460
   140018ee4:	mov    rcx,QWORD PTR [rbx+0xb8]
   140018eeb:	call   0x14000b460
   140018ef0:	mov    rcx,QWORD PTR [rbx+0xc0]
   140018ef7:	call   0x14000b460
   140018efc:	mov    rcx,QWORD PTR [rbx+0xc8]
   140018f03:	call   0x14000b460
   140018f08:	mov    rcx,QWORD PTR [rbx+0xd0]
   140018f0f:	call   0x14000b460
   140018f14:	mov    rcx,QWORD PTR [rbx+0xd8]
   140018f1b:	call   0x14000b460
   140018f20:	mov    rcx,QWORD PTR [rbx+0xe0]
   140018f27:	call   0x14000b460
   140018f2c:	mov    rcx,QWORD PTR [rbx+0xe8]
   140018f33:	call   0x14000b460
   140018f38:	mov    rcx,QWORD PTR [rbx+0xf0]
   140018f3f:	call   0x14000b460
   140018f44:	mov    rcx,QWORD PTR [rbx+0xf8]
   140018f4b:	call   0x14000b460
   140018f50:	mov    rcx,QWORD PTR [rbx+0x100]
   140018f57:	call   0x14000b460
   140018f5c:	mov    rcx,QWORD PTR [rbx+0x108]
   140018f63:	call   0x14000b460
   140018f68:	mov    rcx,QWORD PTR [rbx+0x110]
   140018f6f:	call   0x14000b460
   140018f74:	mov    rcx,QWORD PTR [rbx+0x118]
   140018f7b:	call   0x14000b460
   140018f80:	mov    rcx,QWORD PTR [rbx+0x120]
   140018f87:	call   0x14000b460
   140018f8c:	mov    rcx,QWORD PTR [rbx+0x128]
   140018f93:	call   0x14000b460
   140018f98:	mov    rcx,QWORD PTR [rbx+0x130]
   140018f9f:	call   0x14000b460
   140018fa4:	mov    rcx,QWORD PTR [rbx+0x138]
   140018fab:	call   0x14000b460
   140018fb0:	mov    rcx,QWORD PTR [rbx+0x140]
   140018fb7:	call   0x14000b460
   140018fbc:	mov    rcx,QWORD PTR [rbx+0x148]
   140018fc3:	call   0x14000b460
   140018fc8:	mov    rcx,QWORD PTR [rbx+0x150]
   140018fcf:	call   0x14000b460
   140018fd4:	mov    rcx,QWORD PTR [rbx+0x170]
   140018fdb:	call   0x14000b460
   140018fe0:	mov    rcx,QWORD PTR [rbx+0x178]
   140018fe7:	call   0x14000b460
   140018fec:	mov    rcx,QWORD PTR [rbx+0x180]
   140018ff3:	call   0x14000b460
   140018ff8:	mov    rcx,QWORD PTR [rbx+0x188]
   140018fff:	call   0x14000b460
   140019004:	mov    rcx,QWORD PTR [rbx+0x190]
   14001900b:	call   0x14000b460
   140019010:	mov    rcx,QWORD PTR [rbx+0x198]
   140019017:	call   0x14000b460
   14001901c:	mov    rcx,QWORD PTR [rbx+0x168]
   140019023:	call   0x14000b460
   140019028:	mov    rcx,QWORD PTR [rbx+0x1a8]
   14001902f:	call   0x14000b460
   140019034:	mov    rcx,QWORD PTR [rbx+0x1b0]
   14001903b:	call   0x14000b460
   140019040:	mov    rcx,QWORD PTR [rbx+0x1b8]
   140019047:	call   0x14000b460
   14001904c:	mov    rcx,QWORD PTR [rbx+0x1c0]
   140019053:	call   0x14000b460
   140019058:	mov    rcx,QWORD PTR [rbx+0x1c8]
   14001905f:	call   0x14000b460
   140019064:	mov    rcx,QWORD PTR [rbx+0x1d0]
   14001906b:	call   0x14000b460
   140019070:	mov    rcx,QWORD PTR [rbx+0x1a0]
   140019077:	call   0x14000b460
   14001907c:	mov    rcx,QWORD PTR [rbx+0x1d8]
   140019083:	call   0x14000b460
   140019088:	mov    rcx,QWORD PTR [rbx+0x1e0]
   14001908f:	call   0x14000b460
   140019094:	mov    rcx,QWORD PTR [rbx+0x1e8]
   14001909b:	call   0x14000b460
   1400190a0:	mov    rcx,QWORD PTR [rbx+0x1f0]
   1400190a7:	call   0x14000b460
   1400190ac:	mov    rcx,QWORD PTR [rbx+0x1f8]
   1400190b3:	call   0x14000b460
   1400190b8:	mov    rcx,QWORD PTR [rbx+0x200]
   1400190bf:	call   0x14000b460
   1400190c4:	mov    rcx,QWORD PTR [rbx+0x208]
   1400190cb:	call   0x14000b460
   1400190d0:	mov    rcx,QWORD PTR [rbx+0x210]
   1400190d7:	call   0x14000b460
   1400190dc:	mov    rcx,QWORD PTR [rbx+0x218]
   1400190e3:	call   0x14000b460
   1400190e8:	mov    rcx,QWORD PTR [rbx+0x220]
   1400190ef:	call   0x14000b460
   1400190f4:	mov    rcx,QWORD PTR [rbx+0x228]
   1400190fb:	call   0x14000b460
   140019100:	mov    rcx,QWORD PTR [rbx+0x230]
   140019107:	call   0x14000b460
   14001910c:	mov    rcx,QWORD PTR [rbx+0x238]
   140019113:	call   0x14000b460
   140019118:	mov    rcx,QWORD PTR [rbx+0x240]
   14001911f:	call   0x14000b460
   140019124:	mov    rcx,QWORD PTR [rbx+0x248]
   14001912b:	call   0x14000b460
   140019130:	mov    rcx,QWORD PTR [rbx+0x250]
   140019137:	call   0x14000b460
   14001913c:	mov    rcx,QWORD PTR [rbx+0x258]
   140019143:	call   0x14000b460
   140019148:	mov    rcx,QWORD PTR [rbx+0x260]
   14001914f:	call   0x14000b460
   140019154:	mov    rcx,QWORD PTR [rbx+0x268]
   14001915b:	call   0x14000b460
   140019160:	mov    rcx,QWORD PTR [rbx+0x270]
   140019167:	call   0x14000b460
   14001916c:	mov    rcx,QWORD PTR [rbx+0x278]
   140019173:	call   0x14000b460
   140019178:	mov    rcx,QWORD PTR [rbx+0x280]
   14001917f:	call   0x14000b460
   140019184:	mov    rcx,QWORD PTR [rbx+0x288]
   14001918b:	call   0x14000b460
   140019190:	mov    rcx,QWORD PTR [rbx+0x290]
   140019197:	call   0x14000b460
   14001919c:	mov    rcx,QWORD PTR [rbx+0x298]
   1400191a3:	call   0x14000b460
   1400191a8:	mov    rcx,QWORD PTR [rbx+0x2a0]
   1400191af:	call   0x14000b460
   1400191b4:	mov    rcx,QWORD PTR [rbx+0x2a8]
   1400191bb:	call   0x14000b460
   1400191c0:	mov    rcx,QWORD PTR [rbx+0x2b0]
   1400191c7:	call   0x14000b460
   1400191cc:	mov    rcx,QWORD PTR [rbx+0x2b8]
   1400191d3:	call   0x14000b460
   1400191d8:	add    rsp,0x20
   1400191dc:	pop    rbx
   1400191dd:	ret    
   1400191de:	int3   
   1400191df:	int3   
   1400191e0:	test   rcx,rcx
   1400191e3:	je     0x14001924b
   1400191e5:	push   rbx
   1400191e6:	sub    rsp,0x20
   1400191ea:	mov    rbx,rcx
   1400191ed:	mov    rcx,QWORD PTR [rcx]
   1400191f0:	cmp    rcx,QWORD PTR [rip+0xb459]        # 0x140024650
   1400191f7:	je     0x1400191fe
   1400191f9:	call   0x14000b460
   1400191fe:	mov    rcx,QWORD PTR [rbx+0x8]
   140019202:	cmp    rcx,QWORD PTR [rip+0xb44f]        # 0x140024658
   140019209:	je     0x140019210
   14001920b:	call   0x14000b460
   140019210:	mov    rcx,QWORD PTR [rbx+0x10]
   140019214:	cmp    rcx,QWORD PTR [rip+0xb445]        # 0x140024660
   14001921b:	je     0x140019222
   14001921d:	call   0x14000b460
   140019222:	mov    rcx,QWORD PTR [rbx+0x58]
   140019226:	cmp    rcx,QWORD PTR [rip+0xb47b]        # 0x1400246a8
   14001922d:	je     0x140019234
   14001922f:	call   0x14000b460
   140019234:	mov    rcx,QWORD PTR [rbx+0x60]
   140019238:	cmp    rcx,QWORD PTR [rip+0xb471]        # 0x1400246b0
   14001923f:	je     0x140019246
   140019241:	call   0x14000b460
   140019246:	add    rsp,0x20
   14001924a:	pop    rbx
   14001924b:	ret    
   14001924c:	test   rcx,rcx
   14001924f:	je     0x140019355
   140019255:	push   rbx
   140019256:	sub    rsp,0x20
   14001925a:	mov    rbx,rcx
   14001925d:	mov    rcx,QWORD PTR [rcx+0x18]
   140019261:	cmp    rcx,QWORD PTR [rip+0xb400]        # 0x140024668
   140019268:	je     0x14001926f
   14001926a:	call   0x14000b460
   14001926f:	mov    rcx,QWORD PTR [rbx+0x20]
   140019273:	cmp    rcx,QWORD PTR [rip+0xb3f6]        # 0x140024670
   14001927a:	je     0x140019281
   14001927c:	call   0x14000b460
   140019281:	mov    rcx,QWORD PTR [rbx+0x28]
   140019285:	cmp    rcx,QWORD PTR [rip+0xb3ec]        # 0x140024678
   14001928c:	je     0x140019293
   14001928e:	call   0x14000b460
   140019293:	mov    rcx,QWORD PTR [rbx+0x30]
   140019297:	cmp    rcx,QWORD PTR [rip+0xb3e2]        # 0x140024680
   14001929e:	je     0x1400192a5
   1400192a0:	call   0x14000b460
   1400192a5:	mov    rcx,QWORD PTR [rbx+0x38]
   1400192a9:	cmp    rcx,QWORD PTR [rip+0xb3d8]        # 0x140024688
   1400192b0:	je     0x1400192b7
   1400192b2:	call   0x14000b460
   1400192b7:	mov    rcx,QWORD PTR [rbx+0x40]
   1400192bb:	cmp    rcx,QWORD PTR [rip+0xb3ce]        # 0x140024690
   1400192c2:	je     0x1400192c9
   1400192c4:	call   0x14000b460
   1400192c9:	mov    rcx,QWORD PTR [rbx+0x48]
   1400192cd:	cmp    rcx,QWORD PTR [rip+0xb3c4]        # 0x140024698
   1400192d4:	je     0x1400192db
   1400192d6:	call   0x14000b460
   1400192db:	mov    rcx,QWORD PTR [rbx+0x68]
   1400192df:	cmp    rcx,QWORD PTR [rip+0xb3d2]        # 0x1400246b8
   1400192e6:	je     0x1400192ed
   1400192e8:	call   0x14000b460
   1400192ed:	mov    rcx,QWORD PTR [rbx+0x70]
   1400192f1:	cmp    rcx,QWORD PTR [rip+0xb3c8]        # 0x1400246c0
   1400192f8:	je     0x1400192ff
   1400192fa:	call   0x14000b460
   1400192ff:	mov    rcx,QWORD PTR [rbx+0x78]
   140019303:	cmp    rcx,QWORD PTR [rip+0xb3be]        # 0x1400246c8
   14001930a:	je     0x140019311
   14001930c:	call   0x14000b460
   140019311:	mov    rcx,QWORD PTR [rbx+0x80]
   140019318:	cmp    rcx,QWORD PTR [rip+0xb3b1]        # 0x1400246d0
   14001931f:	je     0x140019326
   140019321:	call   0x14000b460
   140019326:	mov    rcx,QWORD PTR [rbx+0x88]
   14001932d:	cmp    rcx,QWORD PTR [rip+0xb3a4]        # 0x1400246d8
   140019334:	je     0x14001933b
   140019336:	call   0x14000b460
   14001933b:	mov    rcx,QWORD PTR [rbx+0x90]
   140019342:	cmp    rcx,QWORD PTR [rip+0xb397]        # 0x1400246e0
   140019349:	je     0x140019350
   14001934b:	call   0x14000b460
   140019350:	add    rsp,0x20
   140019354:	pop    rbx
   140019355:	ret    
   140019356:	int3   
   140019357:	int3   
   140019358:	sub    rsp,0x28
   14001935c:	call   0x14000d204
   140019361:	mov    rcx,QWORD PTR [rax+0xc0]
   140019368:	cmp    rcx,QWORD PTR [rip+0xb071]        # 0x1400243e0
   14001936f:	je     0x140019387
   140019371:	mov    eax,DWORD PTR [rax+0xc8]
   140019377:	test   DWORD PTR [rip+0xac33],eax        # 0x140023fb0
   14001937d:	jne    0x140019387
   14001937f:	call   0x140014c2c
   140019384:	mov    rcx,rax
   140019387:	mov    eax,DWORD PTR [rcx+0x4]
   14001938a:	add    rsp,0x28
   14001938e:	ret    
   14001938f:	int3   
   140019390:	mov    r10,rcx
   140019393:	test   r8,r8
   140019396:	je     0x1400193d3
   140019398:	movzx  r9d,BYTE PTR [r10]
   14001939c:	inc    r10
   14001939f:	lea    eax,[r9-0x41]
   1400193a3:	cmp    eax,0x19
   1400193a6:	ja     0x1400193ac
   1400193a8:	add    r9d,0x20
   1400193ac:	movzx  ecx,BYTE PTR [rdx]
   1400193af:	inc    rdx
   1400193b2:	lea    eax,[rcx-0x41]
   1400193b5:	cmp    eax,0x19
   1400193b8:	ja     0x1400193bd
   1400193ba:	add    ecx,0x20
   1400193bd:	dec    r8
   1400193c0:	je     0x1400193cc
   1400193c2:	test   r9d,r9d
   1400193c5:	je     0x1400193cc
   1400193c7:	cmp    r9d,ecx
   1400193ca:	je     0x140019398
   1400193cc:	sub    r9d,ecx
   1400193cf:	mov    eax,r9d
   1400193d2:	ret    
   1400193d3:	xor    eax,eax
   1400193d5:	ret    
   1400193d6:	int3   
   1400193d7:	int3   
   1400193d8:	mov    rax,rsp
   1400193db:	mov    QWORD PTR [rax+0x8],rbx
   1400193df:	mov    QWORD PTR [rax+0x10],rsi
   1400193e3:	mov    QWORD PTR [rax+0x18],rdi
   1400193e7:	mov    QWORD PTR [rax+0x20],r12
   1400193eb:	push   rbp
   1400193ec:	mov    rbp,rsp
   1400193ef:	sub    rsp,0x40
   1400193f3:	mov    r12,r8
   1400193f6:	mov    rsi,rdx
   1400193f9:	mov    rdi,rcx
   1400193fc:	test   r8,r8
   1400193ff:	je     0x1400194bf
   140019405:	lea    rcx,[rbp-0x20]
   140019409:	mov    rdx,r9
   14001940c:	call   0x14000c6f4
   140019411:	test   rdi,rdi
   140019414:	jne    0x140019441
   140019416:	call   0x14000bdc0
   14001941b:	mov    DWORD PTR [rax],0x16
   140019421:	call   0x14000d01c
   140019426:	cmp    BYTE PTR [rbp-0x8],0x0
   14001942a:	je     0x140019437
   14001942c:	mov    rax,QWORD PTR [rbp-0x10]
   140019430:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140019437:	mov    eax,0x7fffffff
   14001943c:	jmp    0x1400194c1
   140019441:	test   rsi,rsi
   140019444:	je     0x140019416
   140019446:	cmp    r12,0x7fffffff
   14001944d:	ja     0x140019416
   14001944f:	mov    rax,QWORD PTR [rbp-0x20]
   140019453:	cmp    DWORD PTR [rax+0x14],0x0
   140019457:	jne    0x14001947a
   140019459:	mov    r8,r12
   14001945c:	mov    rdx,rsi
   14001945f:	mov    rcx,rdi
   140019462:	call   0x140019390
   140019467:	cmp    BYTE PTR [rbp-0x8],0x0
   14001946b:	je     0x1400194c1
   14001946d:	mov    rcx,QWORD PTR [rbp-0x10]
   140019471:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140019478:	jmp    0x1400194c1
   14001947a:	sub    rdi,rsi
   14001947d:	movzx  ecx,BYTE PTR [rdi+rsi*1]
   140019481:	lea    rdx,[rbp-0x20]
   140019485:	call   0x14001979c
   14001948a:	movzx  ecx,BYTE PTR [rsi]
   14001948d:	lea    rdx,[rbp-0x20]
   140019491:	mov    ebx,eax
   140019493:	call   0x14001979c
   140019498:	inc    rsi
   14001949b:	dec    r12
   14001949e:	je     0x1400194a8
   1400194a0:	test   ebx,ebx
   1400194a2:	je     0x1400194a8
   1400194a4:	cmp    ebx,eax
   1400194a6:	je     0x14001947d
   1400194a8:	sub    ebx,eax
   1400194aa:	cmp    BYTE PTR [rbp-0x8],0x0
   1400194ae:	je     0x1400194bb
   1400194b0:	mov    rcx,QWORD PTR [rbp-0x10]
   1400194b4:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400194bb:	mov    eax,ebx
   1400194bd:	jmp    0x1400194c1
   1400194bf:	xor    eax,eax
   1400194c1:	mov    rbx,QWORD PTR [rsp+0x50]
   1400194c6:	mov    rsi,QWORD PTR [rsp+0x58]
   1400194cb:	mov    rdi,QWORD PTR [rsp+0x60]
   1400194d0:	mov    r12,QWORD PTR [rsp+0x68]
   1400194d5:	add    rsp,0x40
   1400194d9:	pop    rbp
   1400194da:	ret    
   1400194db:	int3   
   1400194dc:	sub    rsp,0x28
   1400194e0:	cmp    DWORD PTR [rip+0xc481],0x0        # 0x140025968
   1400194e7:	jne    0x14001951f
   1400194e9:	test   rcx,rcx
   1400194ec:	jne    0x140019508
   1400194ee:	call   0x14000bdc0
   1400194f3:	mov    DWORD PTR [rax],0x16
   1400194f9:	call   0x14000d01c
   1400194fe:	mov    eax,0x7fffffff
   140019503:	add    rsp,0x28
   140019507:	ret    
   140019508:	test   rdx,rdx
   14001950b:	je     0x1400194ee
   14001950d:	cmp    r8,0x7fffffff
   140019514:	ja     0x1400194ee
   140019516:	add    rsp,0x28
   14001951a:	jmp    0x140019390
   14001951f:	xor    r9d,r9d
   140019522:	add    rsp,0x28
   140019526:	jmp    0x1400193d8
   14001952b:	int3   
   14001952c:	sub    rsp,0x48
   140019530:	and    QWORD PTR [rsp+0x30],0x0
   140019536:	and    DWORD PTR [rsp+0x28],0x0
   14001953b:	mov    r8d,0x3
   140019541:	lea    rcx,[rip+0x72e8]        # 0x140020830
   140019548:	xor    r9d,r9d
   14001954b:	mov    edx,0x40000000
   140019550:	mov    DWORD PTR [rsp+0x20],r8d
   140019555:	call   QWORD PTR [rip+0xadd]        # 0x14001a038
   14001955b:	mov    QWORD PTR [rip+0xb1a6],rax        # 0x140024708
   140019562:	add    rsp,0x48
   140019566:	ret    
   140019567:	int3   
   140019568:	sub    rsp,0x28
   14001956c:	mov    rcx,QWORD PTR [rip+0xb195]        # 0x140024708
   140019573:	cmp    rcx,0xffffffffffffffff
   140019577:	je     0x140019585
   140019579:	cmp    rcx,0xfffffffffffffffe
   14001957d:	je     0x140019585
   14001957f:	call   QWORD PTR [rip+0xaf3]        # 0x14001a078
   140019585:	add    rsp,0x28
   140019589:	ret    
   14001958a:	int3   
   14001958b:	int3   
   14001958c:	mov    r9,rcx
   14001958f:	movzx  r8d,BYTE PTR [r9]
   140019593:	inc    r9
   140019596:	lea    eax,[r8-0x41]
   14001959a:	cmp    eax,0x19
   14001959d:	ja     0x1400195a3
   14001959f:	add    r8d,0x20
   1400195a3:	movzx  ecx,BYTE PTR [rdx]
   1400195a6:	inc    rdx
   1400195a9:	lea    eax,[rcx-0x41]
   1400195ac:	cmp    eax,0x19
   1400195af:	ja     0x1400195b4
   1400195b1:	add    ecx,0x20
   1400195b4:	test   r8d,r8d
   1400195b7:	je     0x1400195be
   1400195b9:	cmp    r8d,ecx
   1400195bc:	je     0x14001958f
   1400195be:	sub    r8d,ecx
   1400195c1:	mov    eax,r8d
   1400195c4:	ret    
   1400195c5:	int3   
   1400195c6:	int3   
   1400195c7:	int3   
   1400195c8:	mov    QWORD PTR [rsp+0x8],rbx
   1400195cd:	mov    QWORD PTR [rsp+0x10],rsi
   1400195d2:	mov    QWORD PTR [rsp+0x18],rdi
   1400195d7:	push   rbp
   1400195d8:	mov    rbp,rsp
   1400195db:	sub    rsp,0x40
   1400195df:	mov    rsi,rcx
   1400195e2:	mov    rdi,rdx
   1400195e5:	lea    rcx,[rbp-0x20]
   1400195e9:	mov    rdx,r8
   1400195ec:	call   0x14000c6f4
   1400195f1:	test   rsi,rsi
   1400195f4:	jne    0x14001961e
   1400195f6:	call   0x14000bdc0
   1400195fb:	mov    DWORD PTR [rax],0x16
   140019601:	call   0x14000d01c
   140019606:	cmp    BYTE PTR [rbp-0x8],0x0
   14001960a:	je     0x140019617
   14001960c:	mov    rax,QWORD PTR [rbp-0x10]
   140019610:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140019617:	mov    eax,0x7fffffff
   14001961c:	jmp    0x140019689
   14001961e:	test   rdi,rdi
   140019621:	je     0x1400195f6
   140019623:	mov    rax,QWORD PTR [rbp-0x20]
   140019627:	cmp    DWORD PTR [rax+0x14],0x0
   14001962b:	jne    0x14001964b
   14001962d:	mov    rdx,rdi
   140019630:	mov    rcx,rsi
   140019633:	call   0x14001958c
   140019638:	cmp    BYTE PTR [rbp-0x8],0x0
   14001963c:	je     0x140019689
   14001963e:	mov    rcx,QWORD PTR [rbp-0x10]
   140019642:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140019649:	jmp    0x140019689
   14001964b:	sub    rsi,rdi
   14001964e:	movzx  ecx,BYTE PTR [rsi+rdi*1]
   140019652:	lea    rdx,[rbp-0x20]
   140019656:	call   0x14001979c
   14001965b:	movzx  ecx,BYTE PTR [rdi]
   14001965e:	lea    rdx,[rbp-0x20]
   140019662:	mov    ebx,eax
   140019664:	call   0x14001979c
   140019669:	inc    rdi
   14001966c:	test   ebx,ebx
   14001966e:	je     0x140019674
   140019670:	cmp    ebx,eax
   140019672:	je     0x14001964e
   140019674:	sub    ebx,eax
   140019676:	cmp    BYTE PTR [rbp-0x8],0x0
   14001967a:	je     0x140019687
   14001967c:	mov    rcx,QWORD PTR [rbp-0x10]
   140019680:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140019687:	mov    eax,ebx
   140019689:	mov    rbx,QWORD PTR [rsp+0x50]
   14001968e:	mov    rsi,QWORD PTR [rsp+0x58]
   140019693:	mov    rdi,QWORD PTR [rsp+0x60]
   140019698:	add    rsp,0x40
   14001969c:	pop    rbp
   14001969d:	ret    
   14001969e:	int3   
   14001969f:	int3   
   1400196a0:	sub    rsp,0x28
   1400196a4:	cmp    DWORD PTR [rip+0xc2bd],0x0        # 0x140025968
   1400196ab:	jne    0x1400196da
   1400196ad:	test   rcx,rcx
   1400196b0:	jne    0x1400196cc
   1400196b2:	call   0x14000bdc0
   1400196b7:	mov    DWORD PTR [rax],0x16
   1400196bd:	call   0x14000d01c
   1400196c2:	mov    eax,0x7fffffff
   1400196c7:	add    rsp,0x28
   1400196cb:	ret    
   1400196cc:	test   rdx,rdx
   1400196cf:	je     0x1400196b2
   1400196d1:	add    rsp,0x28
   1400196d5:	jmp    0x14001958c
   1400196da:	xor    r8d,r8d
   1400196dd:	add    rsp,0x28
   1400196e1:	jmp    0x1400195c8
   1400196e6:	int3   
   1400196e7:	int3   
   1400196e8:	xor    edx,edx
   1400196ea:	lea    r8d,[rdx+0xa]
   1400196ee:	jmp    0x1400161b8
   1400196f3:	int3   
   1400196f4:	mov    rax,rsp
   1400196f7:	mov    QWORD PTR [rax+0x8],rbx
   1400196fb:	mov    QWORD PTR [rax+0x10],rbp
   1400196ff:	mov    QWORD PTR [rax+0x18],rsi
   140019703:	mov    QWORD PTR [rax+0x20],rdi
   140019707:	push   r12
   140019709:	sub    rsp,0x30
   14001970d:	movsxd rbx,r9d
   140019710:	mov    rsi,r8
   140019713:	mov    ebp,edx
   140019715:	mov    r12d,ecx
   140019718:	test   r9d,r9d
   14001971b:	jle    0x14001972b
   14001971d:	mov    rdx,rbx
   140019720:	mov    rcx,r8
   140019723:	call   0x1400198ec
   140019728:	mov    rbx,rax
   14001972b:	movsxd rax,DWORD PTR [rsp+0x68]
   140019730:	mov    rdi,QWORD PTR [rsp+0x60]
   140019735:	test   eax,eax
   140019737:	jle    0x140019744
   140019739:	mov    rdx,rax
   14001973c:	mov    rcx,rdi
   14001973f:	call   0x1400198ec
   140019744:	test   ebx,ebx
   140019746:	je     0x140019768
   140019748:	test   eax,eax
   14001974a:	je     0x140019768
   14001974c:	mov    DWORD PTR [rsp+0x28],eax
   140019750:	mov    r9d,ebx
   140019753:	mov    r8,rsi
   140019756:	mov    edx,ebp
   140019758:	mov    ecx,r12d
   14001975b:	mov    QWORD PTR [rsp+0x20],rdi
   140019760:	call   QWORD PTR [rip+0xb82]        # 0x14001a2e8
   140019766:	jmp    0x14001977f
   140019768:	sub    ebx,eax
   14001976a:	mov    eax,0x3
   14001976f:	lea    ecx,[rax-0x2]
   140019772:	cmovs  eax,ecx
   140019775:	mov    ecx,0x2
   14001977a:	test   ebx,ebx
   14001977c:	cmove  eax,ecx
   14001977f:	mov    rbx,QWORD PTR [rsp+0x40]
   140019784:	mov    rbp,QWORD PTR [rsp+0x48]
   140019789:	mov    rsi,QWORD PTR [rsp+0x50]
   14001978e:	mov    rdi,QWORD PTR [rsp+0x58]
   140019793:	add    rsp,0x30
   140019797:	pop    r12
   140019799:	ret    
   14001979a:	int3   
   14001979b:	int3   
   14001979c:	mov    QWORD PTR [rsp+0x10],rdi
   1400197a1:	mov    QWORD PTR [rsp+0x20],r12
   1400197a6:	push   rbp
   1400197a7:	mov    rbp,rsp
   1400197aa:	sub    rsp,0x70
   1400197ae:	movsxd rdi,ecx
   1400197b1:	lea    rcx,[rbp-0x20]
   1400197b5:	call   0x14000c6f4
   1400197ba:	cmp    edi,0x100
   1400197c0:	jae    0x14001981f
   1400197c2:	mov    rdx,QWORD PTR [rbp-0x20]
   1400197c6:	cmp    DWORD PTR [rdx+0x10c],0x1
   1400197cd:	jle    0x1400197e5
   1400197cf:	lea    r8,[rbp-0x20]
   1400197d3:	mov    edx,0x1
   1400197d8:	mov    ecx,edi
   1400197da:	call   0x140014ca4
   1400197df:	mov    rdx,QWORD PTR [rbp-0x20]
   1400197e3:	jmp    0x1400197f3
   1400197e5:	mov    rax,QWORD PTR [rdx+0x140]
   1400197ec:	movzx  eax,WORD PTR [rax+rdi*2]
   1400197f0:	and    eax,0x1
   1400197f3:	test   eax,eax
   1400197f5:	je     0x140019807
   1400197f7:	mov    rax,QWORD PTR [rdx+0x148]
   1400197fe:	movzx  eax,BYTE PTR [rax+rdi*1]
   140019802:	jmp    0x1400198c7
   140019807:	cmp    BYTE PTR [rbp-0x8],0x0
   14001980b:	je     0x140019818
   14001980d:	mov    rax,QWORD PTR [rbp-0x10]
   140019811:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140019818:	mov    eax,edi
   14001981a:	jmp    0x1400198d8
   14001981f:	mov    rax,QWORD PTR [rbp-0x20]
   140019823:	cmp    DWORD PTR [rax+0x10c],0x1
   14001982a:	jle    0x140019857
   14001982c:	mov    r12d,edi
   14001982f:	lea    rdx,[rbp-0x20]
   140019833:	sar    r12d,0x8
   140019837:	movzx  ecx,r12b
   14001983b:	call   0x140015288
   140019840:	test   eax,eax
   140019842:	je     0x140019857
   140019844:	mov    BYTE PTR [rbp+0x10],r12b
   140019848:	mov    BYTE PTR [rbp+0x11],dil
   14001984c:	mov    BYTE PTR [rbp+0x12],0x0
   140019850:	mov    edx,0x2
   140019855:	jmp    0x14001986f
   140019857:	call   0x14000bdc0
   14001985c:	mov    edx,0x1
   140019861:	mov    DWORD PTR [rax],0x2a
   140019867:	mov    BYTE PTR [rbp+0x10],dil
   14001986b:	mov    BYTE PTR [rbp+0x11],0x0
   14001986f:	mov    rcx,QWORD PTR [rbp-0x20]
   140019873:	mov    DWORD PTR [rsp+0x40],0x1
   14001987b:	lea    r9,[rbp+0x10]
   14001987f:	mov    eax,DWORD PTR [rcx+0x4]
   140019882:	mov    r8d,0x100
   140019888:	mov    DWORD PTR [rsp+0x38],eax
   14001988c:	lea    rax,[rbp+0x20]
   140019890:	mov    DWORD PTR [rsp+0x30],0x3
   140019898:	mov    QWORD PTR [rsp+0x28],rax
   14001989d:	mov    DWORD PTR [rsp+0x20],edx
   1400198a1:	mov    edx,DWORD PTR [rcx+0x14]
   1400198a4:	lea    rcx,[rbp-0x20]
   1400198a8:	call   0x14001862c
   1400198ad:	test   eax,eax
   1400198af:	je     0x140019807
   1400198b5:	cmp    eax,0x1
   1400198b8:	movzx  eax,BYTE PTR [rbp+0x20]
   1400198bc:	je     0x1400198c7
   1400198be:	movzx  ecx,BYTE PTR [rbp+0x21]
   1400198c2:	shl    eax,0x8
   1400198c5:	or     eax,ecx
   1400198c7:	cmp    BYTE PTR [rbp-0x8],0x0
   1400198cb:	je     0x1400198d8
   1400198cd:	mov    rcx,QWORD PTR [rbp-0x10]
   1400198d1:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400198d8:	lea    r11,[rsp+0x70]
   1400198dd:	mov    rdi,QWORD PTR [r11+0x18]
   1400198e1:	mov    r12,QWORD PTR [r11+0x28]
   1400198e5:	mov    rsp,r11
   1400198e8:	pop    rbp
   1400198e9:	ret    
   1400198ea:	int3   
   1400198eb:	int3   
   1400198ec:	xor    r8d,r8d
   1400198ef:	mov    eax,r8d
   1400198f2:	test   rdx,rdx
   1400198f5:	je     0x140019909
   1400198f7:	cmp    WORD PTR [rcx],r8w
   1400198fb:	je     0x140019909
   1400198fd:	inc    rax
   140019900:	add    rcx,0x2
   140019904:	cmp    rax,rdx
   140019907:	jb     0x1400198f7
   140019909:	repz ret 
   14001990b:	int3   
   14001990c:	jmp    QWORD PTR [rip+0x87e]        # 0x14001a190
   140019912:	jmp    QWORD PTR [rip+0x880]        # 0x14001a198
   140019918:	jmp    QWORD PTR [rip+0x8c2]        # 0x14001a1e0
   14001991e:	int3   
   14001991f:	int3   
   140019920:	rex push rbp
   140019922:	sub    rsp,0x20
   140019926:	mov    rbp,rdx
   140019929:	cmp    DWORD PTR [rbp+0x80],0x0
   140019930:	je     0x14001993d
   140019932:	mov    ecx,0x8
   140019937:	call   0x14000ca28
   14001993c:	nop
   14001993d:	add    rsp,0x20
   140019941:	pop    rbp
   140019942:	ret    
   140019943:	int3   
   140019944:	rex push rbp
   140019946:	sub    rsp,0x20
   14001994a:	mov    rbp,rdx
   14001994d:	call   0x14000ab98
   140019952:	add    rax,0x30
   140019956:	mov    rdx,rax
   140019959:	mov    ecx,0x1
   14001995e:	call   0x14000ad8c
   140019963:	nop
   140019964:	add    rsp,0x20
   140019968:	pop    rbp
   140019969:	ret    
   14001996a:	int3   
   14001996b:	rex push rbp
   14001996d:	sub    rsp,0x20
   140019971:	mov    rbp,rdx
   140019974:	mov    rcx,QWORD PTR [rbp+0x50]
   140019978:	call   0x14000ad40
   14001997d:	nop
   14001997e:	add    rsp,0x20
   140019982:	pop    rbp
   140019983:	ret    
   140019984:	int3   
   140019985:	rex push rbp
   140019987:	sub    rsp,0x20
   14001998b:	mov    rbp,rdx
   14001998e:	mov    rcx,QWORD PTR [rbp+0x78]
   140019992:	call   0x14000ad40
   140019997:	nop
   140019998:	add    rsp,0x20
   14001999c:	pop    rbp
   14001999d:	ret    
   14001999e:	int3   
   14001999f:	rex push rbp
   1400199a1:	sub    rsp,0x20
   1400199a5:	mov    rbp,rdx
   1400199a8:	mov    rcx,QWORD PTR [rbp+0x40]
   1400199ac:	call   0x14000ad40
   1400199b1:	nop
   1400199b2:	add    rsp,0x20
   1400199b6:	pop    rbp
   1400199b7:	ret    
   1400199b8:	int3   
   1400199b9:	rex push rbp
   1400199bb:	sub    rsp,0x20
   1400199bf:	mov    rbp,rdx
   1400199c2:	mov    ecx,0x2
   1400199c7:	call   0x14001177c
   1400199cc:	nop
   1400199cd:	add    rsp,0x20
   1400199d1:	pop    rbp
   1400199d2:	ret    
   1400199d3:	int3   
   1400199d4:	rex push rbp
   1400199d6:	sub    rsp,0x20
   1400199da:	mov    rbp,rdx
   1400199dd:	mov    rcx,QWORD PTR [rbp+0x48]
   1400199e1:	call   0x14000ad40
   1400199e6:	nop
   1400199e7:	add    rsp,0x20
   1400199eb:	pop    rbp
   1400199ec:	ret    
   1400199ed:	int3   
   1400199ee:	rex push rbp
   1400199f0:	sub    rsp,0x20
   1400199f4:	mov    rbp,rdx
   1400199f7:	movsxd rcx,DWORD PTR [rbp+0x20]
   1400199fb:	mov    rax,rcx
   1400199fe:	mov    rdx,QWORD PTR [rip+0xc283]        # 0x140025c88
   140019a05:	mov    rdx,QWORD PTR [rdx+rcx*8]
   140019a09:	call   0x14000ad8c
   140019a0e:	nop
   140019a0f:	add    rsp,0x20
   140019a13:	pop    rbp
   140019a14:	ret    
   140019a15:	int3   
   140019a16:	int3   
   140019a17:	int3   
   140019a18:	int3   
   140019a19:	int3   
   140019a1a:	int3   
   140019a1b:	int3   
   140019a1c:	int3   
   140019a1d:	int3   
   140019a1e:	rex push rbp
   140019a20:	sub    rsp,0x20
   140019a24:	mov    rbp,rdx
   140019a27:	mov    ecx,0x1
   140019a2c:	call   0x14000ca28
   140019a31:	nop
   140019a32:	add    rsp,0x20
   140019a36:	pop    rbp
   140019a37:	ret    
   140019a38:	int3   
   140019a39:	rex push rbp
   140019a3b:	sub    rsp,0x20
   140019a3f:	mov    rbp,rdx
   140019a42:	mov    rcx,QWORD PTR [rbp+0x30]
   140019a46:	call   0x14000ad40
   140019a4b:	nop
   140019a4c:	add    rsp,0x20
   140019a50:	pop    rbp
   140019a51:	ret    
   140019a52:	int3   
   140019a53:	rex push rbp
   140019a55:	sub    rsp,0x20
   140019a59:	mov    rbp,rdx
   140019a5c:	mov    ecx,0x7
   140019a61:	call   0x14000ca28
   140019a66:	nop
   140019a67:	add    rsp,0x20
   140019a6b:	pop    rbp
   140019a6c:	ret    
   140019a6d:	int3   
   140019a6e:	rex push rbp
   140019a70:	sub    rsp,0x20
   140019a74:	mov    rbp,rdx
   140019a77:	mov    rax,QWORD PTR [rcx]
   140019a7a:	mov    rdx,rcx
   140019a7d:	mov    ecx,DWORD PTR [rax]
   140019a7f:	call   0x14000ebd0
   140019a84:	nop
   140019a85:	add    rsp,0x20
   140019a89:	pop    rbp
   140019a8a:	ret    
   140019a8b:	int3   
   140019a8c:	rex push rbp
   140019a8e:	sub    rsp,0x20
   140019a92:	mov    rbp,rdx
   140019a95:	mov    rcx,QWORD PTR [rip+0x9c04]        # 0x1400236a0
   140019a9c:	call   QWORD PTR [rip+0x64e]        # 0x14001a0f0
   140019aa2:	nop
   140019aa3:	add    rsp,0x20
   140019aa7:	pop    rbp
   140019aa8:	ret    
   140019aa9:	int3   
   140019aaa:	rex push rbp
   140019aac:	sub    rsp,0x20
   140019ab0:	mov    rbp,rdx
   140019ab3:	cmp    DWORD PTR [rbp+0x60],0x0
   140019ab7:	je     0x140019ac1
   140019ab9:	xor    ecx,ecx
   140019abb:	call   0x14000ca28
   140019ac0:	nop
   140019ac1:	add    rsp,0x20
   140019ac5:	pop    rbp
   140019ac6:	ret    
   140019ac7:	int3   
   140019ac8:	rex push rbp
   140019aca:	sub    rsp,0x20
   140019ace:	mov    rbp,rdx
   140019ad1:	mov    ecx,0xd
   140019ad6:	call   0x14000ca28
   140019adb:	nop
   140019adc:	add    rsp,0x20
   140019ae0:	pop    rbp
   140019ae1:	ret    
   140019ae2:	int3   
   140019ae3:	int3   
   140019ae4:	int3   
   140019ae5:	int3   
   140019ae6:	int3   
   140019ae7:	int3   
   140019ae8:	rex push rbp
   140019aea:	sub    rsp,0x20
   140019aee:	mov    rbp,rdx
   140019af1:	mov    ecx,0xc
   140019af6:	call   0x14000ca28
   140019afb:	nop
   140019afc:	add    rsp,0x20
   140019b00:	pop    rbp
   140019b01:	ret    
   140019b02:	int3   
   140019b03:	rex push rbp
   140019b05:	sub    rsp,0x20
   140019b09:	mov    rbp,rdx
   140019b0c:	call   0x1400098cc
   140019b11:	nop
   140019b12:	add    rsp,0x20
   140019b16:	pop    rbp
   140019b17:	ret    
   140019b18:	int3   
   140019b19:	int3   
   140019b1a:	int3   
   140019b1b:	int3   
   140019b1c:	int3   
   140019b1d:	int3   
   140019b1e:	int3   
   140019b1f:	int3   
   140019b20:	rex push rbp
   140019b22:	sub    rsp,0x20
   140019b26:	mov    rbp,rdx
   140019b29:	mov    rax,QWORD PTR [rcx]
   140019b2c:	xor    ecx,ecx
   140019b2e:	cmp    DWORD PTR [rax],0xc0000005
   140019b34:	sete   cl
   140019b37:	mov    eax,ecx
   140019b39:	mov    eax,ecx
   140019b3b:	add    rsp,0x20
   140019b3f:	pop    rbp
   140019b40:	ret    
   140019b41:	int3   
   140019b42:	rex push rbp
   140019b44:	sub    rsp,0x20
   140019b48:	mov    rbp,rdx
   140019b4b:	mov    ecx,0x1
   140019b50:	call   0x14000ca28
   140019b55:	nop
   140019b56:	add    rsp,0x20
   140019b5a:	pop    rbp
   140019b5b:	ret    
   140019b5c:	int3   
   140019b5d:	rex push rbp
   140019b5f:	sub    rsp,0x20
   140019b63:	mov    rbp,rdx
   140019b66:	mov    ecx,DWORD PTR [rbp+0x40]
   140019b69:	call   0x14001177c
   140019b6e:	nop
   140019b6f:	add    rsp,0x20
   140019b73:	pop    rbp
   140019b74:	ret    
   140019b75:	int3   
   140019b76:	rex push rbp
   140019b78:	sub    rsp,0x20
   140019b7c:	mov    rbp,rdx
   140019b7f:	mov    ecx,0xa
   140019b84:	call   0x14000ca28
   140019b89:	nop
   140019b8a:	add    rsp,0x20
   140019b8e:	pop    rbp
   140019b8f:	ret    
   140019b90:	int3   
   140019b91:	rex push rbp
   140019b93:	sub    rsp,0x20
   140019b97:	mov    rbp,rdx
   140019b9a:	mov    ecx,0xa
   140019b9f:	call   0x14000ca28
   140019ba4:	nop
   140019ba5:	add    rsp,0x20
   140019ba9:	pop    rbp
   140019baa:	ret    
   140019bab:	int3   
   140019bac:	int3   
   140019bad:	int3   
   140019bae:	int3   
   140019baf:	int3   
   140019bb0:	int3   
   140019bb1:	rex push rbp
   140019bb3:	sub    rsp,0x20
   140019bb7:	mov    rbp,rdx
   140019bba:	mov    ecx,0xb
   140019bbf:	call   0x14000ca28
   140019bc4:	nop
   140019bc5:	add    rsp,0x20
   140019bc9:	pop    rbp
   140019bca:	ret    
   140019bcb:	int3   
   140019bcc:	rex push rbp
   140019bce:	sub    rsp,0x40
   140019bd2:	mov    rbp,rdx
   140019bd5:	mov    ecx,DWORD PTR [rbp+0x4c]
   140019bd8:	call   0x14001177c
   140019bdd:	nop
   140019bde:	add    rsp,0x40
   140019be2:	pop    rbp
   140019be3:	ret    
   140019be4:	int3   
   140019be5:	rex push rbp
   140019be7:	sub    rsp,0x30
   140019beb:	mov    rbp,rdx
   140019bee:	cmp    DWORD PTR [rbp+0x34],0x0
   140019bf2:	je     0x140019c2c
   140019bf4:	cmp    DWORD PTR [rbp+0x38],0x0
   140019bf8:	je     0x140019c21
   140019bfa:	movsxd rdx,DWORD PTR [rbp+0x30]
   140019bfe:	mov    rcx,rdx
   140019c01:	mov    rax,rdx
   140019c04:	sar    rax,0x5
   140019c08:	lea    r8,[rip+0xbe71]        # 0x140025a80
   140019c0f:	and    ecx,0x1f
   140019c12:	imul   rcx,rcx,0x58
   140019c16:	mov    rax,QWORD PTR [r8+rax*8]
   140019c1a:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   140019c1f:	jmp    0x140019c24
   140019c21:	mov    edx,DWORD PTR [rbp+0x30]
   140019c24:	mov    ecx,edx
   140019c26:	call   0x14001177c
   140019c2b:	nop
   140019c2c:	add    rsp,0x30
   140019c30:	pop    rbp
   140019c31:	ret    
   140019c32:	int3   
   140019c33:	rex push rbp
   140019c35:	sub    rsp,0x30
   140019c39:	mov    rbp,rdx
   140019c3c:	cmp    DWORD PTR [rbp+0x30],0x0
   140019c40:	je     0x140019c75
   140019c42:	mov    rdx,QWORD PTR [rbp+0x70]
   140019c46:	cmp    DWORD PTR [rbp+0x34],0x0
   140019c4a:	je     0x140019c6d
   140019c4c:	movsxd rcx,DWORD PTR [rdx]
   140019c4f:	mov    rax,rcx
   140019c52:	sar    rax,0x5
   140019c56:	lea    r8,[rip+0xbe23]        # 0x140025a80
   140019c5d:	and    ecx,0x1f
   140019c60:	imul   rcx,rcx,0x58
   140019c64:	mov    rax,QWORD PTR [r8+rax*8]
   140019c68:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   140019c6d:	mov    ecx,DWORD PTR [rdx]
   140019c6f:	call   0x14001177c
   140019c74:	nop
   140019c75:	add    rsp,0x30
   140019c79:	pop    rbp
   140019c7a:	ret    
   140019c7b:	int3   
   140019c7c:	rex push rbp
   140019c7e:	sub    rsp,0x20
   140019c82:	mov    rbp,rdx
   140019c85:	mov    ecx,0xd
   140019c8a:	call   0x14000ca28
   140019c8f:	nop
   140019c90:	add    rsp,0x20
   140019c94:	pop    rbp
   140019c95:	ret    
   140019c96:	int3   
   140019c97:	rex push rbp
   140019c99:	sub    rsp,0x20
   140019c9d:	mov    rbp,rdx
   140019ca0:	mov    ecx,0xc
   140019ca5:	call   0x14000ca28
   140019caa:	nop
   140019cab:	add    rsp,0x20
   140019caf:	pop    rbp
   140019cb0:	ret    
   140019cb1:	int3   
   140019cb2:	rex push rbp
   140019cb4:	sub    rsp,0x20
   140019cb8:	mov    rbp,rdx
   140019cbb:	mov    ecx,DWORD PTR [rbp+0x50]
   140019cbe:	call   0x14001177c
   140019cc3:	nop
   140019cc4:	add    rsp,0x20
   140019cc8:	pop    rbp
   140019cc9:	ret    
   140019cca:	int3   
   140019ccb:	rex push rbp
   140019ccd:	sub    rsp,0x40
   140019cd1:	mov    rbp,rdx
   140019cd4:	mov    ecx,0x7
   140019cd9:	call   0x14000ca28
   140019cde:	nop
   140019cdf:	add    rsp,0x40
   140019ce3:	pop    rbp
   140019ce4:	ret    
   140019ce5:	int3   
   140019ce6:	rex push rbp
   140019ce8:	sub    rsp,0x20
   140019cec:	mov    rbp,rdx
   140019cef:	mov    ecx,0x6
   140019cf4:	call   0x14000ca28
   140019cf9:	nop
   140019cfa:	add    rsp,0x20
   140019cfe:	pop    rbp
   140019cff:	ret    
   140019d00:	int3   
