
88e0b47230be821a1794097aa74dd569c2ae2b3c71ce3e1165deb6e8de0447b0.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x48b5]        # 0x4058d0
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x48b6]        # 0x4058e0
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x48b9]        # 0x4058f0
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x487c]        # 0x4058c0
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x471f]        # 0x405770
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x4851]        # 0x4058b0
  40105f:	mov    DWORD PTR [rip+0x6fa3],edx        # 0x408008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x4034b0
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x402440
  401081:	mov    rdx,QWORD PTR [rip+0x4788]        # 0x405810
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x476e]        # 0x405800
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x47d4]        # 0x405870
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x470b]        # 0x4057b0
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x402020
  4010af:	mov    rax,QWORD PTR [rip+0x466a]        # 0x405720
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x4034b0
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x11f9]        # 0x402320
  401127:	call   0x402310
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x4735]        # 0x4058a0
  40116b:	lea    r8,[rip+0x6ea6]        # 0x408018
  401172:	lea    rdx,[rip+0x6ea7]        # 0x408020
  401179:	lea    rcx,[rip+0x6ea8]        # 0x408028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x6e78],eax        # 0x408000
  401188:	lea    rax,[rip+0x6e71]        # 0x408000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x46c5]        # 0x405860
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x4034c8
  4011a3:	mov    DWORD PTR [rip+0x6e67],eax        # 0x408010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x46ea]        # 0x4058b0
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x45eb]        # 0x4057e0
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x817e]        # 0x409380
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x45c7]        # 0x4057f0
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x6dba],0x1        # 0x408004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x44fc]        # 0x405760
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x402630
  40127d:	lea    rcx,[rip+0x194c]        # 0x402bd0
  401284:	call   QWORD PTR [rip+0x80ee]        # 0x409378
  40128a:	mov    rdx,QWORD PTR [rip+0x453f]        # 0x4057d0
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x402ae0
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x4034f0
  4012a5:	call   0x402420
  4012aa:	mov    rax,QWORD PTR [rip+0x44bf]        # 0x405770
  4012b1:	mov    QWORD PTR [rip+0x7750],rax        # 0x408a08
  4012b8:	mov    rax,QWORD PTR [rip+0x44d1]        # 0x405790
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x76e9],rax        # 0x408a00
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x2cca],eax        # 0x404000
  401336:	mov    r12d,DWORD PTR [rip+0x6ceb]        # 0x408028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x403420
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x6cc2]        # 0x408020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x4033f8
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x403420
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x403418
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x6c6a],rbp        # 0x408020
  4013b6:	call   0x401ff0
  4013bb:	mov    rax,QWORD PTR [rip+0x43be]        # 0x405780
  4013c2:	mov    rdx,QWORD PTR [rip+0x6c4f]        # 0x408018
  4013c9:	mov    ecx,DWORD PTR [rip+0x6c59]        # 0x408028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x6c3c]        # 0x408018
  4013dc:	mov    rdx,QWORD PTR [rip+0x6c3d]        # 0x408020
  4013e3:	call   0x4015c5
  4013e8:	mov    ecx,DWORD PTR [rip+0x6c1a]        # 0x408008
  4013ee:	mov    DWORD PTR [rip+0x6c18],eax        # 0x40800c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x6c02]        # 0x408004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x403498
  40140b:	mov    eax,DWORD PTR [rip+0x6bfb]        # 0x40800c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x43b9]        # 0x4057f0
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x4034a0
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x43cd]        # 0x405830
  401463:	mov    rcx,QWORD PTR [rip+0x43b6]        # 0x405820
  40146a:	call   0x403488
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x7e8f]        # 0x409328
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x43a9]        # 0x405850
  4014a7:	mov    rcx,QWORD PTR [rip+0x4392]        # 0x405840
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x403488
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x403450
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x43d5]        # 0x4058b0
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x402030
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x43a5]        # 0x4058b0
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x402030
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	push   rbp
  401531:	push   rbx
  401532:	sub    rsp,0x38
  401536:	lea    rbp,[rsp+0x80]
  40153e:	mov    QWORD PTR [rbp-0x28],rdx
  401542:	mov    QWORD PTR [rbp-0x20],r8
  401546:	mov    QWORD PTR [rbp-0x18],r9
  40154a:	mov    QWORD PTR [rbp-0x30],rcx
  40154e:	mov    eax,DWORD PTR [rip+0x6adc]        # 0x408030
  401554:	test   eax,eax
  401556:	je     0x4015be
  401558:	mov    rax,QWORD PTR [rip+0x7e79]        # 0x4093d8
  40155f:	call   rax
  401561:	add    rax,0x60
  401565:	lea    r8,[rip+0x3a94]        # 0x405000
  40156c:	lea    rdx,[rip+0x3ab0]        # 0x405023
  401573:	mov    rcx,rax
  401576:	call   0x403448
  40157b:	lea    rax,[rbp-0x28]
  40157f:	mov    QWORD PTR [rbp-0x58],rax
  401583:	mov    rbx,QWORD PTR [rbp-0x58]
  401587:	mov    rax,QWORD PTR [rip+0x7e4a]        # 0x4093d8
  40158e:	call   rax
  401590:	add    rax,0x60
  401594:	mov    r8,rbx
  401597:	mov    rdx,QWORD PTR [rbp-0x30]
  40159b:	mov    rcx,rax
  40159e:	call   0x4033e8
  4015a3:	mov    rax,QWORD PTR [rip+0x7e2e]        # 0x4093d8
  4015aa:	call   rax
  4015ac:	add    rax,0x60
  4015b0:	mov    rdx,rax
  4015b3:	mov    ecx,0xa
  4015b8:	call   0x403440
  4015bd:	nop
  4015be:	add    rsp,0x38
  4015c2:	pop    rbx
  4015c3:	pop    rbp
  4015c4:	ret    
  4015c5:	push   rbp
  4015c6:	push   rsi
  4015c7:	push   rbx
  4015c8:	sub    rsp,0x190
  4015cf:	lea    rbp,[rsp+0x80]
  4015d7:	mov    DWORD PTR [rbp+0x130],ecx
  4015dd:	mov    QWORD PTR [rbp+0x138],rdx
  4015e4:	call   0x401ff0
  4015e9:	mov    QWORD PTR [rbp+0xb0],0x0
  4015f4:	mov    QWORD PTR [rbp+0xb8],0x0
  4015ff:	mov    QWORD PTR [rbp+0xc0],0x0
  40160a:	mov    QWORD PTR [rbp+0xc8],0x0
  401615:	movzx  eax,BYTE PTR [rbp+0xc0]
  40161c:	or     eax,0x1
  40161f:	mov    BYTE PTR [rbp+0xc0],al
  401625:	mov    eax,DWORD PTR [rbp+0x130]
  40162b:	mov    DWORD PTR [rbp+0x108],eax
  401631:	mov    DWORD PTR [rbp+0x104],0x0
  40163b:	mov    DWORD PTR [rbp+0x10c],0x1
  401645:	jmp    0x4017b0
  40164a:	mov    eax,DWORD PTR [rbp+0x10c]
  401650:	cdqe   
  401652:	lea    rdx,[rax*8+0x0]
  40165a:	mov    rax,QWORD PTR [rbp+0x138]
  401661:	add    rax,rdx
  401664:	mov    rax,QWORD PTR [rax]
  401667:	movzx  eax,BYTE PTR [rax]
  40166a:	cmp    al,0x2d
  40166c:	je     0x40167f
  40166e:	mov    eax,DWORD PTR [rbp+0x10c]
  401674:	mov    DWORD PTR [rbp+0x108],eax
  40167a:	jmp    0x4017c2
  40167f:	mov    eax,DWORD PTR [rbp+0x10c]
  401685:	cdqe   
  401687:	lea    rdx,[rax*8+0x0]
  40168f:	mov    rax,QWORD PTR [rbp+0x138]
  401696:	add    rax,rdx
  401699:	mov    rax,QWORD PTR [rax]
  40169c:	lea    rdx,[rip+0x3985]        # 0x405028
  4016a3:	mov    rcx,rax
  4016a6:	call   0x403400
  4016ab:	test   eax,eax
  4016ad:	jne    0x4016c3
  4016af:	mov    eax,DWORD PTR [rbp+0x10c]
  4016b5:	add    eax,0x1
  4016b8:	mov    DWORD PTR [rbp+0x108],eax
  4016be:	jmp    0x4017c2
  4016c3:	mov    eax,DWORD PTR [rbp+0x10c]
  4016c9:	cdqe   
  4016cb:	lea    rdx,[rax*8+0x0]
  4016d3:	mov    rax,QWORD PTR [rbp+0x138]
  4016da:	add    rax,rdx
  4016dd:	mov    rax,QWORD PTR [rax]
  4016e0:	lea    rdx,[rip+0x3944]        # 0x40502b
  4016e7:	mov    rcx,rax
  4016ea:	call   0x403400
  4016ef:	test   eax,eax
  4016f1:	jne    0x401702
  4016f3:	mov    DWORD PTR [rbp+0x104],0x1
  4016fd:	jmp    0x4017a9
  401702:	mov    eax,DWORD PTR [rbp+0x10c]
  401708:	cdqe   
  40170a:	lea    rdx,[rax*8+0x0]
  401712:	mov    rax,QWORD PTR [rbp+0x138]
  401719:	add    rax,rdx
  40171c:	mov    rax,QWORD PTR [rax]
  40171f:	lea    rdx,[rip+0x390b]        # 0x405031
  401726:	mov    rcx,rax
  401729:	call   0x403400
  40172e:	test   eax,eax
  401730:	jne    0x401740
  401732:	lea    rcx,[rip+0x3907]        # 0x405040
  401739:	call   0x401530
  40173e:	jmp    0x4017a9
  401740:	mov    eax,DWORD PTR [rbp+0x10c]
  401746:	cdqe   
  401748:	lea    rdx,[rax*8+0x0]
  401750:	mov    rax,QWORD PTR [rbp+0x138]
  401757:	add    rax,rdx
  40175a:	mov    rax,QWORD PTR [rax]
  40175d:	lea    rdx,[rip+0x3906]        # 0x40506a
  401764:	mov    rcx,rax
  401767:	call   0x403400
  40176c:	test   eax,eax
  40176e:	jne    0x40177c
  401770:	mov    DWORD PTR [rip+0x68b6],0x1        # 0x408030
  40177a:	jmp    0x4017a9
  40177c:	mov    rax,QWORD PTR [rip+0x7c55]        # 0x4093d8
  401783:	call   rax
  401785:	add    rax,0x60
  401789:	lea    r8,[rip+0x3870]        # 0x405000
  401790:	lea    rdx,[rip+0x38e1]        # 0x405078
  401797:	mov    rcx,rax
  40179a:	call   0x403448
  40179f:	mov    ecx,0x40
  4017a4:	call   0x403450
  4017a9:	add    DWORD PTR [rbp+0x10c],0x1
  4017b0:	mov    eax,DWORD PTR [rbp+0x10c]
  4017b6:	cmp    eax,DWORD PTR [rbp+0x130]
  4017bc:	jl     0x40164a
  4017c2:	cmp    DWORD PTR [rbp+0x104],0x0
  4017c9:	je     0x401806
  4017cb:	mov    eax,DWORD PTR [rbp+0x108]
  4017d1:	cmp    eax,DWORD PTR [rbp+0x130]
  4017d7:	jge    0x401806
  4017d9:	mov    rax,QWORD PTR [rip+0x7bf8]        # 0x4093d8
  4017e0:	call   rax
  4017e2:	add    rax,0x60
  4017e6:	lea    r8,[rip+0x3813]        # 0x405000
  4017ed:	lea    rdx,[rip+0x3aac]        # 0x4052a0
  4017f4:	mov    rcx,rax
  4017f7:	call   0x403448
  4017fc:	mov    ecx,0x40
  401801:	call   0x403450
  401806:	lea    rax,[rbp+0xb0]
  40180d:	mov    rdx,rax
  401810:	mov    ecx,0x0
  401815:	mov    rax,QWORD PTR [rip+0x7a7c]        # 0x409298
  40181c:	call   rax
  40181e:	mov    QWORD PTR [rbp+0xf0],rax
  401825:	cmp    QWORD PTR [rbp+0xf0],0x0
  40182d:	jne    0x401866
  40182f:	mov    rbx,QWORD PTR [rbp+0xb8]
  401836:	mov    rax,QWORD PTR [rip+0x7b9b]        # 0x4093d8
  40183d:	call   rax
  40183f:	add    rax,0x60
  401843:	mov    r9,rbx
  401846:	lea    r8,[rip+0x37b3]        # 0x405000
  40184d:	lea    rdx,[rip+0x3a8c]        # 0x4052e0
  401854:	mov    rcx,rax
  401857:	call   0x403448
  40185c:	mov    ecx,0x47
  401861:	call   0x403450
  401866:	lea    r9,[rip+0x3a9e]        # 0x40530b
  40186d:	lea    r8,[rip+0x3ab3]        # 0x405327
  401874:	lea    rdx,[rip+0x3ac1]        # 0x40533c
  40187b:	lea    rcx,[rip+0x3aa5]        # 0x405327
  401882:	mov    rax,QWORD PTR [rip+0x7a4f]        # 0x4092d8
  401889:	call   rax
  40188b:	mov    QWORD PTR [rbp+0xe8],rax
  401892:	cmp    QWORD PTR [rbp+0xe8],0x0
  40189a:	jne    0x4018a8
  40189c:	lea    rcx,[rip+0x3aaf]        # 0x405352
  4018a3:	call   0x401d50
  4018a8:	lea    rdx,[rbp+0x60]
  4018ac:	mov    rax,QWORD PTR [rbp+0xe8]
  4018b3:	mov    rcx,rax
  4018b6:	mov    rax,QWORD PTR [rip+0x7a0b]        # 0x4092c8
  4018bd:	call   rax
  4018bf:	lea    rdx,[rbp+0x10]
  4018c3:	lea    rax,[rbp+0x60]
  4018c7:	mov    r9,rdx
  4018ca:	lea    r8,[rip+0x3a96]        # 0x405367
  4018d1:	mov    edx,0x61
  4018d6:	mov    rcx,rax
  4018d9:	mov    rax,QWORD PTR [rip+0x79f0]        # 0x4092d0
  4018e0:	call   rax
  4018e2:	test   eax,eax
  4018e4:	jne    0x4018f2
  4018e6:	lea    rcx,[rip+0x3a65]        # 0x405352
  4018ed:	call   0x401d50
  4018f2:	cmp    DWORD PTR [rbp+0x104],0x0
  4018f9:	jne    0x401903
  4018fb:	mov    eax,DWORD PTR [rbp+0x108]
  401901:	jmp    0x401908
  401903:	mov    eax,0x0
  401908:	mov    DWORD PTR [rbp+0x10c],eax
  40190e:	jmp    0x401ba8
  401913:	cmp    DWORD PTR [rbp+0x104],0x0
  40191a:	je     0x401945
  40191c:	mov    rax,QWORD PTR [rip+0x3e7d]        # 0x4057a0
  401923:	mov    rax,QWORD PTR [rax]
  401926:	mov    rax,QWORD PTR [rax]
  401929:	mov    edx,DWORD PTR [rbp+0x10c]
  40192f:	movsxd rdx,edx
  401932:	shl    rdx,0x3
  401936:	add    rax,rdx
  401939:	mov    rax,QWORD PTR [rax]
  40193c:	mov    QWORD PTR [rbp+0xf8],rax
  401943:	jmp    0x401969
  401945:	mov    eax,DWORD PTR [rbp+0x10c]
  40194b:	cdqe   
  40194d:	lea    rdx,[rax*8+0x0]
  401955:	mov    rax,QWORD PTR [rbp+0x138]
  40195c:	add    rax,rdx
  40195f:	mov    rax,QWORD PTR [rax]
  401962:	mov    QWORD PTR [rbp+0xf8],rax
  401969:	mov    rax,QWORD PTR [rbp+0xf8]
  401970:	mov    rcx,rax
  401973:	call   0x4033e0
  401978:	mov    QWORD PTR [rbp+0x8],rax
  40197c:	mov    rax,QWORD PTR [rbp+0x8]
  401980:	test   rax,rax
  401983:	jne    0x401991
  401985:	lea    rcx,[rip+0x39c6]        # 0x405352
  40198c:	call   0x401d50
  401991:	mov    rax,QWORD PTR [rbp+0xf8]
  401998:	mov    edx,0x0
  40199d:	mov    rcx,rax
  4019a0:	mov    rax,QWORD PTR [rip+0x7941]        # 0x4092e8
  4019a7:	call   rax
  4019a9:	test   eax,eax
  4019ab:	jne    0x4019df
  4019ad:	mov    rax,QWORD PTR [rip+0x7a24]        # 0x4093d8
  4019b4:	call   rax
  4019b6:	add    rax,0x60
  4019ba:	mov    rdx,QWORD PTR [rbp+0xf8]
  4019c1:	mov    r9,rdx
  4019c4:	lea    r8,[rip+0x3635]        # 0x405000
  4019cb:	lea    rdx,[rip+0x399e]        # 0x405370
  4019d2:	mov    rcx,rax
  4019d5:	call   0x403448
  4019da:	jmp    0x401b95
  4019df:	mov    rax,QWORD PTR [rbp+0x8]
  4019e3:	mov    edx,0x3d
  4019e8:	mov    rcx,rax
  4019eb:	call   0x403408
  4019f0:	mov    QWORD PTR [rbp+0xe0],rax
  4019f7:	cmp    QWORD PTR [rbp+0xe0],0x0
  4019ff:	jne    0x401ab5
  401a05:	cmp    DWORD PTR [rbp+0x104],0x0
  401a0c:	je     0x401a40
  401a0e:	mov    rax,QWORD PTR [rip+0x79c3]        # 0x4093d8
  401a15:	call   rax
  401a17:	add    rax,0x60
  401a1b:	mov    rdx,QWORD PTR [rbp+0xf8]
  401a22:	mov    r9,rdx
  401a25:	lea    r8,[rip+0x35d4]        # 0x405000
  401a2c:	lea    rdx,[rip+0x3975]        # 0x4053a8
  401a33:	mov    rcx,rax
  401a36:	call   0x403448
  401a3b:	jmp    0x401b95
  401a40:	mov    rax,QWORD PTR [rbp+0xf8]
  401a47:	mov    rcx,rax
  401a4a:	call   0x403428
  401a4f:	mov    QWORD PTR [rbp+0x0],rax
  401a53:	mov    rax,QWORD PTR [rbp+0x0]
  401a57:	test   rax,rax
  401a5a:	jne    0x401a61
  401a5c:	jmp    0x401b95
  401a61:	mov    rax,QWORD PTR [rbp+0x0]
  401a65:	mov    edx,0x0
  401a6a:	mov    rcx,rax
  401a6d:	mov    rax,QWORD PTR [rip+0x7874]        # 0x4092e8
  401a74:	call   rax
  401a76:	test   eax,eax
  401a78:	jne    0x401ace
  401a7a:	mov    rbx,QWORD PTR [rbp+0x0]
  401a7e:	mov    rax,QWORD PTR [rip+0x7953]        # 0x4093d8
  401a85:	call   rax
  401a87:	add    rax,0x60
  401a8b:	mov    rdx,QWORD PTR [rbp+0xf8]
  401a92:	mov    QWORD PTR [rsp+0x20],rbx
  401a97:	mov    r9,rdx
  401a9a:	lea    r8,[rip+0x355f]        # 0x405000
  401aa1:	lea    rdx,[rip+0x3938]        # 0x4053e0
  401aa8:	mov    rcx,rax
  401aab:	call   0x403448
  401ab0:	jmp    0x401b95
  401ab5:	mov    rax,QWORD PTR [rbp+0xe0]
  401abc:	mov    BYTE PTR [rax],0x0
  401abf:	mov    rax,QWORD PTR [rbp+0xe0]
  401ac6:	add    rax,0x1
  401aca:	mov    QWORD PTR [rbp+0x0],rax
  401ace:	lea    rdx,[rbp-0x50]
  401ad2:	lea    rax,[rbp+0x10]
  401ad6:	mov    r9,rdx
  401ad9:	mov    r8d,0x0
  401adf:	mov    edx,0x65
  401ae4:	mov    rcx,rax
  401ae7:	mov    rax,QWORD PTR [rip+0x77e2]        # 0x4092d0
  401aee:	call   rax
  401af0:	test   eax,eax
  401af2:	jne    0x401b00
  401af4:	lea    rcx,[rip+0x3857]        # 0x405352
  401afb:	call   0x401d50
  401b00:	mov    rdx,QWORD PTR [rbp+0x0]
  401b04:	mov    rax,QWORD PTR [rbp+0x8]
  401b08:	mov    r8,rdx
  401b0b:	mov    rdx,rax
  401b0e:	lea    rcx,[rip+0x38ff]        # 0x405414
  401b15:	call   0x401530
  401b1a:	lea    rdx,[rbp+0x8]
  401b1e:	lea    rax,[rbp-0x50]
  401b22:	mov    r8,rdx
  401b25:	mov    edx,0x73
  401b2a:	mov    rcx,rax
  401b2d:	mov    rax,QWORD PTR [rip+0x7784]        # 0x4092b8
  401b34:	call   rax
  401b36:	test   eax,eax
  401b38:	jne    0x401b46
  401b3a:	lea    rcx,[rip+0x3811]        # 0x405352
  401b41:	call   0x401d50
  401b46:	mov    rdx,rbp
  401b49:	lea    rax,[rbp-0x50]
  401b4d:	mov    r8,rdx
  401b50:	mov    edx,0x73
  401b55:	mov    rcx,rax
  401b58:	mov    rax,QWORD PTR [rip+0x7759]        # 0x4092b8
  401b5f:	call   rax
  401b61:	test   eax,eax
  401b63:	jne    0x401b71
  401b65:	lea    rcx,[rip+0x37e6]        # 0x405352
  401b6c:	call   0x401d50
  401b71:	lea    rdx,[rbp-0x50]
  401b75:	lea    rax,[rbp+0x10]
  401b79:	mov    rcx,rax
  401b7c:	mov    rax,QWORD PTR [rip+0x773d]        # 0x4092c0
  401b83:	call   rax
  401b85:	test   eax,eax
  401b87:	jne    0x401b95
  401b89:	lea    rcx,[rip+0x37c2]        # 0x405352
  401b90:	call   0x401d50
  401b95:	mov    rax,QWORD PTR [rbp+0x8]
  401b99:	mov    rcx,rax
  401b9c:	call   0x403438
  401ba1:	add    DWORD PTR [rbp+0x10c],0x1
  401ba8:	cmp    DWORD PTR [rbp+0x104],0x0
  401baf:	je     0x401bd9
  401bb1:	mov    rax,QWORD PTR [rip+0x3be8]        # 0x4057a0
  401bb8:	mov    rax,QWORD PTR [rax]
  401bbb:	mov    rax,QWORD PTR [rax]
  401bbe:	mov    edx,DWORD PTR [rbp+0x10c]
  401bc4:	movsxd rdx,edx
  401bc7:	shl    rdx,0x3
  401bcb:	add    rax,rdx
  401bce:	mov    rax,QWORD PTR [rax]
  401bd1:	test   rax,rax
  401bd4:	setne  al
  401bd7:	jmp    0x401be8
  401bd9:	mov    eax,DWORD PTR [rbp+0x10c]
  401bdf:	cmp    eax,DWORD PTR [rbp+0x130]
  401be5:	setl   al
  401be8:	test   al,al
  401bea:	jne    0x401913
  401bf0:	lea    rdx,[rbp+0x10]
  401bf4:	lea    rax,[rbp+0x60]
  401bf8:	mov    rcx,rax
  401bfb:	mov    rax,QWORD PTR [rip+0x76be]        # 0x4092c0
  401c02:	call   rax
  401c04:	test   eax,eax
  401c06:	jne    0x401c14
  401c08:	lea    rcx,[rip+0x3743]        # 0x405352
  401c0f:	call   0x401d50
  401c14:	lea    rcx,[rbp+0xb0]
  401c1b:	mov    rdx,QWORD PTR [rbp+0xe8]
  401c22:	mov    rax,QWORD PTR [rbp+0xf0]
  401c29:	mov    r9,rcx
  401c2c:	mov    r8d,0xffffffff
  401c32:	mov    rcx,rax
  401c35:	mov    rax,QWORD PTR [rip+0x7664]        # 0x4092a0
  401c3c:	call   rax
  401c3e:	mov    QWORD PTR [rbp+0xd8],rax
  401c45:	cmp    QWORD PTR [rbp+0xd8],0x0
  401c4d:	jne    0x401c92
  401c4f:	mov    rbx,QWORD PTR [rbp+0xb8]
  401c56:	mov    rsi,QWORD PTR [rbp+0xb0]
  401c5d:	mov    rax,QWORD PTR [rip+0x7774]        # 0x4093d8
  401c64:	call   rax
  401c66:	add    rax,0x60
  401c6a:	mov    QWORD PTR [rsp+0x20],rbx
  401c6f:	mov    r9,rsi
  401c72:	lea    r8,[rip+0x3387]        # 0x405000
  401c79:	lea    rdx,[rip+0x37a8]        # 0x405428
  401c80:	mov    rcx,rax
  401c83:	call   0x403448
  401c88:	mov    ecx,0x45
  401c8d:	call   0x403450
  401c92:	lea    rdx,[rbp+0xb0]
  401c99:	mov    rax,QWORD PTR [rbp+0xe8]
  401ca0:	mov    r8d,0x0
  401ca6:	mov    rcx,rax
  401ca9:	mov    rax,QWORD PTR [rip+0x7600]        # 0x4092b0
  401cb0:	call   rax
  401cb2:	test   eax,eax
  401cb4:	jne    0x401cf9
  401cb6:	mov    rbx,QWORD PTR [rbp+0xb8]
  401cbd:	mov    rsi,QWORD PTR [rbp+0xb0]
  401cc4:	mov    rax,QWORD PTR [rip+0x770d]        # 0x4093d8
  401ccb:	call   rax
  401ccd:	add    rax,0x60
  401cd1:	mov    QWORD PTR [rsp+0x20],rbx
  401cd6:	mov    r9,rsi
  401cd9:	lea    r8,[rip+0x3320]        # 0x405000
  401ce0:	lea    rdx,[rip+0x3771]        # 0x405458
  401ce7:	mov    rcx,rax
  401cea:	call   0x403448
  401cef:	mov    ecx,0x45
  401cf4:	call   0x403450
  401cf9:	mov    rax,QWORD PTR [rbp+0xd8]
  401d00:	mov    rcx,rax
  401d03:	mov    rax,QWORD PTR [rip+0x75d6]        # 0x4092e0
  401d0a:	call   rax
  401d0c:	mov    rax,QWORD PTR [rbp+0xe8]
  401d13:	mov    rcx,rax
  401d16:	mov    rax,QWORD PTR [rip+0x75c3]        # 0x4092e0
  401d1d:	call   rax
  401d1f:	mov    rax,QWORD PTR [rbp+0xf0]
  401d26:	mov    rcx,rax
  401d29:	mov    rax,QWORD PTR [rip+0x7578]        # 0x4092a8
  401d30:	call   rax
  401d32:	mov    eax,0x0
  401d37:	add    rsp,0x190
  401d3e:	pop    rbx
  401d3f:	pop    rsi
  401d40:	pop    rbp
  401d41:	ret    
  401d42:	nop
  401d43:	nop
  401d44:	nop
  401d45:	nop
  401d46:	nop
  401d47:	nop
  401d48:	nop
  401d49:	nop
  401d4a:	nop
  401d4b:	nop
  401d4c:	nop
  401d4d:	nop
  401d4e:	nop
  401d4f:	nop
  401d50:	push   rbp
  401d51:	mov    rbp,rsp
  401d54:	sub    rsp,0x20
  401d58:	mov    QWORD PTR [rbp+0x10],rcx
  401d5c:	mov    rax,QWORD PTR [rip+0x7675]        # 0x4093d8
  401d63:	call   rax
  401d65:	add    rax,0x60
  401d69:	mov    r8,QWORD PTR [rbp+0x10]
  401d6d:	lea    rdx,[rip+0x370c]        # 0x405480
  401d74:	mov    rcx,rax
  401d77:	call   0x403448
  401d7c:	mov    ecx,0x1
  401d81:	call   0x403450
  401d86:	nop
  401d87:	push   rbp
  401d88:	mov    rbp,rsp
  401d8b:	sub    rsp,0x40
  401d8f:	mov    DWORD PTR [rbp+0x10],ecx
  401d92:	mov    QWORD PTR [rbp+0x18],rdx
  401d96:	mov    QWORD PTR [rbp+0x20],r8
  401d9a:	mov    rax,QWORD PTR [rbp+0x18]
  401d9e:	mov    QWORD PTR [rbp-0x8],rax
  401da2:	mov    QWORD PTR [rbp-0x10],0x0
  401daa:	jmp    0x401e09
  401dac:	mov    rax,QWORD PTR [rbp+0x20]
  401db0:	mov    edx,eax
  401db2:	mov    rax,QWORD PTR [rbp-0x10]
  401db6:	sub    edx,eax
  401db8:	mov    rax,QWORD PTR [rbp-0x8]
  401dbc:	mov    r8d,edx
  401dbf:	mov    rdx,rax
  401dc2:	mov    ecx,DWORD PTR [rbp+0x10]
  401dc5:	mov    rax,QWORD PTR [rip+0x767c]        # 0x409448
  401dcc:	call   rax
  401dce:	mov    DWORD PTR [rbp-0x14],eax
  401dd1:	cmp    DWORD PTR [rbp-0x14],0x0
  401dd5:	jns    0x401df0
  401dd7:	mov    rax,QWORD PTR [rip+0x763a]        # 0x409418
  401dde:	call   rax
  401de0:	mov    eax,DWORD PTR [rax]
  401de2:	cmp    eax,0x4
  401de5:	jne    0x401de9
  401de7:	jmp    0x401e09
  401de9:	mov    eax,0x0
  401dee:	jmp    0x401e18
  401df0:	mov    eax,DWORD PTR [rbp-0x14]
  401df3:	cdqe   
  401df5:	mov    QWORD PTR [rbp-0x20],rax
  401df9:	mov    rax,QWORD PTR [rbp-0x20]
  401dfd:	add    QWORD PTR [rbp-0x8],rax
  401e01:	mov    rax,QWORD PTR [rbp-0x20]
  401e05:	add    QWORD PTR [rbp-0x10],rax
  401e09:	mov    rax,QWORD PTR [rbp+0x20]
  401e0d:	cmp    rax,QWORD PTR [rbp-0x10]
  401e11:	ja     0x401dac
  401e13:	mov    eax,0x1
  401e18:	add    rsp,0x40
  401e1c:	pop    rbp
  401e1d:	ret    
  401e1e:	nop
  401e1f:	nop
  401e20:	jmp    QWORD PTR [rip+0x74c2]        # 0x4092e8
  401e26:	nop
  401e27:	nop
  401e28:	jmp    QWORD PTR [rip+0x74b2]        # 0x4092e0
  401e2e:	nop
  401e2f:	nop
  401e30:	jmp    QWORD PTR [rip+0x74a2]        # 0x4092d8
  401e36:	nop
  401e37:	nop
  401e38:	jmp    QWORD PTR [rip+0x7492]        # 0x4092d0
  401e3e:	nop
  401e3f:	nop
  401e40:	jmp    QWORD PTR [rip+0x7482]        # 0x4092c8
  401e46:	nop
  401e47:	nop
  401e48:	jmp    QWORD PTR [rip+0x7472]        # 0x4092c0
  401e4e:	nop
  401e4f:	nop
  401e50:	jmp    QWORD PTR [rip+0x7462]        # 0x4092b8
  401e56:	nop
  401e57:	nop
  401e58:	jmp    QWORD PTR [rip+0x7452]        # 0x4092b0
  401e5e:	nop
  401e5f:	nop
  401e60:	jmp    QWORD PTR [rip+0x7442]        # 0x4092a8
  401e66:	nop
  401e67:	nop
  401e68:	jmp    QWORD PTR [rip+0x7432]        # 0x4092a0
  401e6e:	nop
  401e6f:	nop
  401e70:	jmp    QWORD PTR [rip+0x7422]        # 0x409298
  401e76:	nop
  401e77:	nop
  401e78:	nop    DWORD PTR [rax+rax*1+0x0]
  401e80:	push   rbx
  401e81:	sub    rsp,0x30
  401e85:	mov    rbx,rcx
  401e88:	mov    rcx,QWORD PTR [rip+0x6b81]        # 0x408a10
  401e8f:	call   0x402430
  401e94:	cmp    rax,0xffffffffffffffff
  401e98:	mov    QWORD PTR [rsp+0x20],rax
  401e9d:	je     0x401f15
  401e9f:	mov    ecx,0x8
  401ea4:	call   0x403480
  401ea9:	mov    rcx,QWORD PTR [rip+0x6b60]        # 0x408a10
  401eb0:	call   0x402430
  401eb5:	mov    rcx,QWORD PTR [rip+0x6b5c]        # 0x408a18
  401ebc:	mov    QWORD PTR [rsp+0x20],rax
  401ec1:	call   0x402430
  401ec6:	lea    rdx,[rsp+0x20]
  401ecb:	lea    r8,[rsp+0x28]
  401ed0:	mov    rcx,rbx
  401ed3:	mov    QWORD PTR [rsp+0x28],rax
  401ed8:	call   0x4034d0
  401edd:	mov    rcx,QWORD PTR [rsp+0x20]
  401ee2:	mov    rbx,rax
  401ee5:	call   0x402440
  401eea:	mov    rcx,QWORD PTR [rsp+0x28]
  401eef:	mov    QWORD PTR [rip+0x6b1a],rax        # 0x408a10
  401ef6:	call   0x402440
  401efb:	mov    ecx,0x8
  401f00:	mov    QWORD PTR [rip+0x6b11],rax        # 0x408a18
  401f07:	call   0x403470
  401f0c:	mov    rax,rbx
  401f0f:	add    rsp,0x30
  401f13:	pop    rbx
  401f14:	ret    
  401f15:	mov    rax,QWORD PTR [rip+0x38a4]        # 0x4057c0
  401f1c:	mov    rcx,rbx
  401f1f:	call   QWORD PTR [rax]
  401f21:	add    rsp,0x30
  401f25:	pop    rbx
  401f26:	ret    
  401f27:	nop    WORD PTR [rax+rax*1+0x0]
  401f30:	sub    rsp,0x28
  401f34:	call   0x401e80
  401f39:	test   rax,rax
  401f3c:	sete   al
  401f3f:	movzx  eax,al
  401f42:	neg    eax
  401f44:	add    rsp,0x28
  401f48:	ret    
  401f49:	nop
  401f4a:	nop
  401f4b:	nop
  401f4c:	nop
  401f4d:	nop
  401f4e:	nop
  401f4f:	nop
  401f50:	sub    rsp,0x28
  401f54:	mov    rax,QWORD PTR [rip+0x20b5]        # 0x404010
  401f5b:	mov    rax,QWORD PTR [rax]
  401f5e:	test   rax,rax
  401f61:	je     0x401f80
  401f63:	call   rax
  401f65:	mov    rax,QWORD PTR [rip+0x20a4]        # 0x404010
  401f6c:	lea    rdx,[rax+0x8]
  401f70:	mov    rax,QWORD PTR [rax+0x8]
  401f74:	mov    QWORD PTR [rip+0x2095],rdx        # 0x404010
  401f7b:	test   rax,rax
  401f7e:	jne    0x401f63
  401f80:	add    rsp,0x28
  401f84:	ret    
  401f85:	nop
  401f86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401f90:	push   rsi
  401f91:	push   rbx
  401f92:	sub    rsp,0x28
  401f96:	mov    rsi,QWORD PTR [rip+0x3793]        # 0x405730
  401f9d:	mov    rax,QWORD PTR [rsi]
  401fa0:	cmp    eax,0xffffffff
  401fa3:	mov    ebx,eax
  401fa5:	je     0x401fd0
  401fa7:	test   ebx,ebx
  401fa9:	je     0x401fba
  401fab:	nop    DWORD PTR [rax+rax*1+0x0]
  401fb0:	mov    eax,ebx
  401fb2:	call   QWORD PTR [rsi+rax*8]
  401fb5:	sub    ebx,0x1
  401fb8:	jne    0x401fb0
  401fba:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x401f50
  401fc1:	add    rsp,0x28
  401fc5:	pop    rbx
  401fc6:	pop    rsi
  401fc7:	jmp    0x401f30
  401fcc:	nop    DWORD PTR [rax+0x0]
  401fd0:	xor    ebx,ebx
  401fd2:	jmp    0x401fd6
  401fd4:	mov    ebx,eax
  401fd6:	lea    edx,[rbx+0x1]
  401fd9:	cmp    QWORD PTR [rsi+rdx*8],0x0
  401fde:	mov    rax,rdx
  401fe1:	jne    0x401fd4
  401fe3:	jmp    0x401fa7
  401fe5:	nop
  401fe6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401ff0:	mov    eax,DWORD PTR [rip+0x604a]        # 0x408040
  401ff6:	test   eax,eax
  401ff8:	je     0x402000
  401ffa:	repz ret 
  401ffc:	nop    DWORD PTR [rax+0x0]
  402000:	mov    DWORD PTR [rip+0x6036],0x1        # 0x408040
  40200a:	jmp    0x401f90
  40200c:	nop
  40200d:	nop
  40200e:	nop
  40200f:	nop
  402010:	mov    rax,QWORD PTR [rip+0x73c9]        # 0x4093e0
  402017:	rex.W jmp rax
  40201a:	nop
  40201b:	nop
  40201c:	nop
  40201d:	nop
  40201e:	nop
  40201f:	nop
  402020:	xor    eax,eax
  402022:	ret    
  402023:	nop
  402024:	nop
  402025:	nop
  402026:	nop
  402027:	nop
  402028:	nop
  402029:	nop
  40202a:	nop
  40202b:	nop
  40202c:	nop
  40202d:	nop
  40202e:	nop
  40202f:	nop
  402030:	push   r12
  402032:	push   rbp
  402033:	push   rdi
  402034:	push   rsi
  402035:	push   rbx
  402036:	sub    rsp,0x40
  40203a:	mov    rbx,QWORD PTR [rip+0x202f]        # 0x404070
  402041:	movabs rax,0x2b992ddfa232
  40204b:	mov    QWORD PTR [rsp+0x20],0x0
  402054:	cmp    rbx,rax
  402057:	je     0x402070
  402059:	not    rbx
  40205c:	mov    QWORD PTR [rip+0x201d],rbx        # 0x404080
  402063:	add    rsp,0x40
  402067:	pop    rbx
  402068:	pop    rsi
  402069:	pop    rdi
  40206a:	pop    rbp
  40206b:	pop    r12
  40206d:	ret    
  40206e:	xchg   ax,ax
  402070:	lea    rcx,[rsp+0x20]
  402075:	call   QWORD PTR [rip+0x72b5]        # 0x409330
  40207b:	mov    r12,QWORD PTR [rsp+0x20]
  402080:	call   QWORD PTR [rip+0x728a]        # 0x409310
  402086:	mov    ebp,eax
  402088:	call   QWORD PTR [rip+0x728a]        # 0x409318
  40208e:	mov    edi,eax
  402090:	call   QWORD PTR [rip+0x72a2]        # 0x409338
  402096:	lea    rcx,[rsp+0x30]
  40209b:	mov    esi,eax
  40209d:	call   QWORD PTR [rip+0x72ad]        # 0x409350
  4020a3:	xor    r12,QWORD PTR [rsp+0x30]
  4020a8:	mov    edx,edi
  4020aa:	movabs rax,0xffffffffffff
  4020b4:	xor    rbp,r12
  4020b7:	mov    rdi,rbp
  4020ba:	xor    rdi,rdx
  4020bd:	mov    edx,esi
  4020bf:	xor    rdi,rdx
  4020c2:	mov    rsi,rdi
  4020c5:	and    rsi,rax
  4020c8:	cmp    rsi,rbx
  4020cb:	je     0x4020f0
  4020cd:	mov    rax,rsi
  4020d0:	not    rax
  4020d3:	mov    QWORD PTR [rip+0x1f96],rsi        # 0x404070
  4020da:	mov    QWORD PTR [rip+0x1f9f],rax        # 0x404080
  4020e1:	add    rsp,0x40
  4020e5:	pop    rbx
  4020e6:	pop    rsi
  4020e7:	pop    rdi
  4020e8:	pop    rbp
  4020e9:	pop    r12
  4020eb:	ret    
  4020ec:	nop    DWORD PTR [rax+0x0]
  4020f0:	movabs rax,0xffffd466d2205dcc
  4020fa:	movabs rsi,0x2b992ddfa233
  402104:	jmp    0x4020d3
  402106:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402110:	push   rbp
  402111:	push   rsi
  402112:	push   rbx
  402113:	mov    rbp,rsp
  402116:	sub    rsp,0x70
  40211a:	mov    rsi,rcx
  40211d:	lea    rcx,[rip+0x5f5c]        # 0x408080
  402124:	call   QWORD PTR [rip+0x7236]        # 0x409360
  40212a:	mov    rbx,QWORD PTR [rip+0x6047]        # 0x408178
  402131:	xor    r8d,r8d
  402134:	lea    rdx,[rbp-0x28]
  402138:	mov    rcx,rbx
  40213b:	call   QWORD PTR [rip+0x7227]        # 0x409368
  402141:	test   rax,rax
  402144:	mov    r9,rax
  402147:	je     0x4021f0
  40214d:	lea    rax,[rbp-0x20]
  402151:	mov    QWORD PTR [rsp+0x38],0x0
  40215a:	mov    r8,rbx
  40215d:	mov    rdx,QWORD PTR [rbp-0x28]
  402161:	xor    ecx,ecx
  402163:	mov    QWORD PTR [rsp+0x30],rax
  402168:	lea    rax,[rbp-0x18]
  40216c:	mov    QWORD PTR [rsp+0x28],rax
  402171:	lea    rax,[rip+0x5f08]        # 0x408080
  402178:	mov    QWORD PTR [rsp+0x20],rax
  40217d:	call   QWORD PTR [rip+0x71ed]        # 0x409370
  402183:	mov    rax,QWORD PTR [rip+0x5fee]        # 0x408178
  40218a:	xor    ecx,ecx
  40218c:	mov    QWORD PTR [rip+0x5f6d],rsi        # 0x408100
  402193:	mov    DWORD PTR [rip+0x63e3],0xc0000409        # 0x408580
  40219d:	mov    DWORD PTR [rip+0x63dd],0x1        # 0x408584
  4021a7:	mov    QWORD PTR [rip+0x63e2],rax        # 0x408590
  4021ae:	mov    rax,QWORD PTR [rip+0x1ebb]        # 0x404070
  4021b5:	mov    QWORD PTR [rbp-0x10],rax
  4021b9:	mov    rax,QWORD PTR [rip+0x1ec0]        # 0x404080
  4021c0:	mov    QWORD PTR [rbp-0x8],rax
  4021c4:	call   QWORD PTR [rip+0x71ae]        # 0x409378
  4021ca:	lea    rcx,[rip+0x32bf]        # 0x405490
  4021d1:	call   QWORD PTR [rip+0x71c1]        # 0x409398
  4021d7:	call   QWORD PTR [rip+0x712b]        # 0x409308
  4021dd:	mov    edx,0xc0000409
  4021e2:	mov    rcx,rax
  4021e5:	call   QWORD PTR [rip+0x719d]        # 0x409388
  4021eb:	call   0x403460
  4021f0:	mov    rax,QWORD PTR [rbp+0x18]
  4021f4:	mov    QWORD PTR [rip+0x5f7d],rax        # 0x408178
  4021fb:	lea    rax,[rbp+0x8]
  4021ff:	mov    QWORD PTR [rip+0x5f12],rax        # 0x408118
  402206:	jmp    0x402183
  40220b:	nop
  40220c:	nop
  40220d:	nop
  40220e:	nop
  40220f:	nop
  402210:	sub    rsp,0x28
  402214:	test   edx,edx
  402216:	je     0x402230
  402218:	cmp    edx,0x3
  40221b:	je     0x402230
  40221d:	mov    eax,0x1
  402222:	add    rsp,0x28
  402226:	ret    
  402227:	nop    WORD PTR [rax+rax*1+0x0]
  402230:	call   0x402f20
  402235:	mov    eax,0x1
  40223a:	add    rsp,0x28
  40223e:	ret    
  40223f:	nop
  402240:	push   rsi
  402241:	push   rbx
  402242:	sub    rsp,0x28
  402246:	mov    rax,QWORD PTR [rip+0x34c3]        # 0x405710
  40224d:	cmp    DWORD PTR [rax],0x2
  402250:	je     0x402258
  402252:	mov    DWORD PTR [rax],0x2
  402258:	cmp    edx,0x2
  40225b:	je     0x402270
  40225d:	cmp    edx,0x1
  402260:	je     0x4022a2
  402262:	mov    eax,0x1
  402267:	add    rsp,0x28
  40226b:	pop    rbx
  40226c:	pop    rsi
  40226d:	ret    
  40226e:	xchg   ax,ax
  402270:	lea    rbx,[rip+0x7de9]        # 0x40a060
  402277:	lea    rsi,[rip+0x7de2]        # 0x40a060
  40227e:	cmp    rbx,rsi
  402281:	je     0x402262
  402283:	mov    rax,QWORD PTR [rbx]
  402286:	test   rax,rax
  402289:	je     0x40228d
  40228b:	call   rax
  40228d:	add    rbx,0x8
  402291:	cmp    rbx,rsi
  402294:	jne    0x402283
  402296:	mov    eax,0x1
  40229b:	add    rsp,0x28
  40229f:	pop    rbx
  4022a0:	pop    rsi
  4022a1:	ret    
  4022a2:	call   0x402f20
  4022a7:	jmp    0x402262
  4022a9:	nop    DWORD PTR [rax+0x0]
  4022b0:	xor    eax,eax
  4022b2:	ret    
  4022b3:	nop
  4022b4:	nop
  4022b5:	nop
  4022b6:	nop
  4022b7:	nop
  4022b8:	nop
  4022b9:	nop
  4022ba:	nop
  4022bb:	nop
  4022bc:	nop
  4022bd:	nop
  4022be:	nop
  4022bf:	nop
  4022c0:	sub    rsp,0x58
  4022c4:	mov    rax,QWORD PTR [rip+0x6395]        # 0x408660
  4022cb:	test   rax,rax
  4022ce:	je     0x4022fc
  4022d0:	movsd  xmm0,QWORD PTR [rsp+0x80]
  4022d9:	mov    DWORD PTR [rsp+0x20],ecx
  4022dd:	lea    rcx,[rsp+0x20]
  4022e2:	mov    QWORD PTR [rsp+0x28],rdx
  4022e7:	movsd  QWORD PTR [rsp+0x30],xmm2
  4022ed:	movsd  QWORD PTR [rsp+0x38],xmm3
  4022f3:	movsd  QWORD PTR [rsp+0x40],xmm0
  4022f9:	call   rax
  4022fb:	nop
  4022fc:	add    rsp,0x58
  402300:	ret    
  402301:	nop    DWORD PTR [rax+rax*1+0x0]
  402306:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402310:	mov    QWORD PTR [rip+0x6349],rcx        # 0x408660
  402317:	jmp    0x4034a8
  40231c:	nop    DWORD PTR [rax+0x0]
  402320:	push   rsi
  402321:	push   rbx
  402322:	sub    rsp,0x78
  402326:	movaps XMMWORD PTR [rsp+0x40],xmm6
  40232b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  402330:	movaps XMMWORD PTR [rsp+0x60],xmm8
  402336:	cmp    DWORD PTR [rcx],0x6
  402339:	ja     0x402410
  40233f:	mov    edx,DWORD PTR [rcx]
  402341:	lea    rax,[rip+0x328c]        # 0x4055d4
  402348:	movsxd rdx,DWORD PTR [rax+rdx*4]
  40234c:	add    rax,rdx
  40234f:	jmp    rax
  402351:	lea    rbx,[rip+0x3158]        # 0x4054b0
  402358:	nop    DWORD PTR [rax+rax*1+0x0]
  402360:	movsd  xmm8,QWORD PTR [rcx+0x20]
  402366:	mov    rsi,QWORD PTR [rcx+0x8]
  40236a:	movsd  xmm7,QWORD PTR [rcx+0x18]
  40236f:	movsd  xmm6,QWORD PTR [rcx+0x10]
  402374:	call   0x4034c0
  402379:	movsd  QWORD PTR [rsp+0x30],xmm8
  402380:	lea    rcx,[rax+0x60]
  402384:	lea    rdx,[rip+0x321d]        # 0x4055a8
  40238b:	movsd  QWORD PTR [rsp+0x28],xmm7
  402391:	mov    r9,rsi
  402394:	mov    r8,rbx
  402397:	movsd  QWORD PTR [rsp+0x20],xmm6
  40239d:	call   0x403448
  4023a2:	nop
  4023a3:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  4023a8:	xor    eax,eax
  4023aa:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  4023af:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  4023b5:	add    rsp,0x78
  4023b9:	pop    rbx
  4023ba:	pop    rsi
  4023bb:	ret    
  4023bc:	nop    DWORD PTR [rax+0x0]
  4023c0:	lea    rbx,[rip+0x3108]        # 0x4054cf
  4023c7:	jmp    0x402360
  4023c9:	nop    DWORD PTR [rax+0x0]
  4023d0:	lea    rbx,[rip+0x3119]        # 0x4054f0
  4023d7:	jmp    0x402360
  4023d9:	nop    DWORD PTR [rax+0x0]
  4023e0:	lea    rbx,[rip+0x3179]        # 0x405560
  4023e7:	jmp    0x402360
  4023ec:	nop    DWORD PTR [rax+0x0]
  4023f0:	lea    rbx,[rip+0x3141]        # 0x405538
  4023f7:	jmp    0x402360
  4023fc:	nop    DWORD PTR [rax+0x0]
  402400:	lea    rbx,[rip+0x3109]        # 0x405510
  402407:	jmp    0x402360
  40240c:	nop    DWORD PTR [rax+0x0]
  402410:	lea    rbx,[rip+0x317f]        # 0x405596
  402417:	jmp    0x402360
  40241c:	nop
  40241d:	nop
  40241e:	nop
  40241f:	nop
  402420:	fninit 
  402422:	ret    
  402423:	nop
  402424:	nop
  402425:	nop
  402426:	nop
  402427:	nop
  402428:	nop
  402429:	nop
  40242a:	nop
  40242b:	nop
  40242c:	nop
  40242d:	nop
  40242e:	nop
  40242f:	nop
  402430:	mov    rax,rcx
  402433:	ret    
  402434:	xchg   ax,ax
  402436:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402440:	mov    rax,rcx
  402443:	ret    
  402444:	nop
  402445:	nop
  402446:	nop
  402447:	nop
  402448:	nop
  402449:	nop
  40244a:	nop
  40244b:	nop
  40244c:	nop
  40244d:	nop
  40244e:	nop
  40244f:	nop
  402450:	push   rsi
  402451:	push   rbx
  402452:	sub    rsp,0x38
  402456:	lea    rax,[rsp+0x58]
  40245b:	mov    rbx,rcx
  40245e:	mov    QWORD PTR [rsp+0x58],rdx
  402463:	mov    QWORD PTR [rsp+0x60],r8
  402468:	mov    QWORD PTR [rsp+0x68],r9
  40246d:	mov    QWORD PTR [rsp+0x28],rax
  402472:	call   0x4034c0
  402477:	lea    rcx,[rip+0x3172]        # 0x4055f0
  40247e:	lea    r9,[rax+0x60]
  402482:	mov    r8d,0x1b
  402488:	mov    edx,0x1
  40248d:	call   0x403430
  402492:	mov    rsi,QWORD PTR [rsp+0x28]
  402497:	call   0x4034c0
  40249c:	lea    rcx,[rax+0x60]
  4024a0:	mov    rdx,rbx
  4024a3:	mov    r8,rsi
  4024a6:	call   0x4033e8
  4024ab:	call   0x403460
  4024b0:	nop
  4024b1:	nop    DWORD PTR [rax+rax*1+0x0]
  4024b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4024c0:	push   r13
  4024c2:	push   r12
  4024c4:	push   rbp
  4024c5:	push   rdi
  4024c6:	push   rsi
  4024c7:	push   rbx
  4024c8:	sub    rsp,0x58
  4024cc:	movsxd rbp,DWORD PTR [rip+0x61b1]        # 0x408684
  4024d3:	mov    rbx,rcx
  4024d6:	mov    rsi,rdx
  4024d9:	mov    rdi,r8
  4024dc:	test   ebp,ebp
  4024de:	jle    0x4025da
  4024e4:	mov    rax,QWORD PTR [rip+0x619d]        # 0x408688
  4024eb:	xor    r9d,r9d
  4024ee:	add    rax,0x8
  4024f2:	mov    r10,QWORD PTR [rax]
  4024f5:	cmp    rbx,r10
  4024f8:	jb     0x40250e
  4024fa:	mov    rdx,QWORD PTR [rax+0x8]
  4024fe:	mov    r11d,DWORD PTR [rdx+0x8]
  402502:	add    r10,r11
  402505:	cmp    rbx,r10
  402508:	jb     0x4025c0
  40250e:	add    r9d,0x1
  402512:	add    rax,0x18
  402516:	cmp    r9d,ebp
  402519:	jne    0x4024f2
  40251b:	mov    rcx,rbx
  40251e:	call   0x403130
  402523:	test   rax,rax
  402526:	mov    r12,rax
  402529:	je     0x402612
  40252f:	lea    rbp,[rbp+rbp*2+0x0]
  402534:	shl    rbp,0x3
  402538:	mov    r13,rbp
  40253b:	add    r13,QWORD PTR [rip+0x6146]        # 0x408688
  402542:	mov    QWORD PTR [r13+0x10],rax
  402546:	mov    DWORD PTR [r13+0x0],0x0
  40254e:	call   0x403250
  402553:	mov    edx,DWORD PTR [r12+0xc]
  402558:	mov    r8d,0x30
  40255e:	add    rax,rdx
  402561:	lea    rdx,[rsp+0x20]
  402566:	mov    QWORD PTR [r13+0x8],rax
  40256a:	mov    rax,QWORD PTR [rip+0x6117]        # 0x408688
  402571:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  402576:	call   QWORD PTR [rip+0x6e2c]        # 0x4093a8
  40257c:	test   rax,rax
  40257f:	je     0x4025f5
  402581:	mov    eax,DWORD PTR [rsp+0x44]
  402585:	lea    edx,[rax-0x4]
  402588:	and    edx,0xfffffffb
  40258b:	je     0x4025b9
  40258d:	sub    eax,0x40
  402590:	and    eax,0xffffffbf
  402593:	je     0x4025b9
  402595:	mov    r9,rbp
  402598:	add    r9,QWORD PTR [rip+0x60e9]        # 0x408688
  40259f:	mov    r8d,0x40
  4025a5:	mov    rdx,QWORD PTR [rsp+0x38]
  4025aa:	mov    rcx,QWORD PTR [rsp+0x20]
  4025af:	call   QWORD PTR [rip+0x6deb]        # 0x4093a0
  4025b5:	test   eax,eax
  4025b7:	je     0x4025e1
  4025b9:	add    DWORD PTR [rip+0x60c4],0x1        # 0x408684
  4025c0:	mov    r8,rdi
  4025c3:	mov    rdx,rsi
  4025c6:	mov    rcx,rbx
  4025c9:	add    rsp,0x58
  4025cd:	pop    rbx
  4025ce:	pop    rsi
  4025cf:	pop    rdi
  4025d0:	pop    rbp
  4025d1:	pop    r12
  4025d3:	pop    r13
  4025d5:	jmp    0x403418
  4025da:	xor    ebp,ebp
  4025dc:	jmp    0x40251b
  4025e1:	call   QWORD PTR [rip+0x6d39]        # 0x409320
  4025e7:	lea    rcx,[rip+0x307a]        # 0x405668
  4025ee:	mov    edx,eax
  4025f0:	call   0x402450
  4025f5:	mov    rax,QWORD PTR [rip+0x608c]        # 0x408688
  4025fc:	mov    edx,DWORD PTR [r12+0x8]
  402601:	lea    rcx,[rip+0x3028]        # 0x405630
  402608:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  40260d:	call   0x402450
  402612:	lea    rcx,[rip+0x2ff7]        # 0x405610
  402619:	mov    rdx,rbx
  40261c:	call   0x402450
  402621:	nop
  402622:	nop    DWORD PTR [rax+0x0]
  402626:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402630:	push   rbp
  402631:	push   r14
  402633:	push   r13
  402635:	push   r12
  402637:	push   rdi
  402638:	push   rsi
  402639:	push   rbx
  40263a:	mov    rbp,rsp
  40263d:	sub    rsp,0x60
  402641:	mov    ebx,DWORD PTR [rip+0x6039]        # 0x408680
  402647:	test   ebx,ebx
  402649:	je     0x402660
  40264b:	mov    rsp,rbp
  40264e:	pop    rbx
  40264f:	pop    rsi
  402650:	pop    rdi
  402651:	pop    r12
  402653:	pop    r13
  402655:	pop    r14
  402657:	pop    rbp
  402658:	ret    
  402659:	nop    DWORD PTR [rax+0x0]
  402660:	mov    DWORD PTR [rip+0x6016],0x1        # 0x408680
  40266a:	call   0x403180
  40266f:	cdqe   
  402671:	lea    rax,[rax+rax*2]
  402675:	lea    rax,[rax*8+0x1e]
  40267d:	and    rax,0xfffffffffffffff0
  402681:	call   0x4033a0
  402686:	mov    rsi,QWORD PTR [rip+0x30b3]        # 0x405740
  40268d:	mov    rbx,QWORD PTR [rip+0x30bc]        # 0x405750
  402694:	sub    rsp,rax
  402697:	mov    DWORD PTR [rip+0x5fe3],0x0        # 0x408684
  4026a1:	lea    rax,[rsp+0x20]
  4026a6:	mov    QWORD PTR [rip+0x5fdb],rax        # 0x408688
  4026ad:	mov    rax,rsi
  4026b0:	sub    rax,rbx
  4026b3:	cmp    rax,0x7
  4026b7:	jle    0x40264b
  4026b9:	cmp    rax,0xb
  4026bd:	jle    0x4026e5
  4026bf:	mov    r11d,DWORD PTR [rbx]
  4026c2:	test   r11d,r11d
  4026c5:	jne    0x402810
  4026cb:	mov    r10d,DWORD PTR [rbx+0x4]
  4026cf:	test   r10d,r10d
  4026d2:	jne    0x402810
  4026d8:	mov    r9d,DWORD PTR [rbx+0x8]
  4026dc:	test   r9d,r9d
  4026df:	jne    0x4026fc
  4026e1:	add    rbx,0xc
  4026e5:	mov    r8d,DWORD PTR [rbx]
  4026e8:	test   r8d,r8d
  4026eb:	jne    0x402810
  4026f1:	mov    ecx,DWORD PTR [rbx+0x4]
  4026f4:	test   ecx,ecx
  4026f6:	jne    0x402810
  4026fc:	mov    edx,DWORD PTR [rbx+0x8]
  4026ff:	cmp    edx,0x1
  402702:	jne    0x40291c
  402708:	add    rbx,0xc
  40270c:	cmp    rbx,rsi
  40270f:	jae    0x40264b
  402715:	mov    r12,QWORD PTR [rip+0x3054]        # 0x405770
  40271c:	lea    r13,[rbp-0x30]
  402720:	movabs r14,0xffffffff00000000
  40272a:	mov    ecx,DWORD PTR [rbx+0x4]
  40272d:	mov    eax,DWORD PTR [rbx]
  40272f:	movzx  edx,BYTE PTR [rbx+0x8]
  402733:	add    rax,r12
  402736:	add    rcx,r12
  402739:	cmp    edx,0x10
  40273c:	mov    r8,QWORD PTR [rax]
  40273f:	je     0x402886
  402745:	jbe    0x40284d
  40274b:	cmp    edx,0x20
  40274e:	je     0x4028cf
  402754:	cmp    edx,0x40
  402757:	jne    0x4028bb
  40275d:	sub    r8,rax
  402760:	mov    rdx,r13
  402763:	mov    rdi,r13
  402766:	mov    rax,r8
  402769:	add    rax,QWORD PTR [rcx]
  40276c:	mov    r8d,0x8
  402772:	mov    QWORD PTR [rbp-0x30],rax
  402776:	call   0x4024c0
  40277b:	add    rbx,0xc
  40277f:	cmp    rbx,rsi
  402782:	jb     0x40272a
  402784:	mov    eax,DWORD PTR [rip+0x5efa]        # 0x408684
  40278a:	xor    ebx,ebx
  40278c:	xor    esi,esi
  40278e:	test   eax,eax
  402790:	jle    0x40264b
  402796:	mov    r14,QWORD PTR [rip+0x6c0b]        # 0x4093a8
  40279d:	lea    r13,[rbp-0x34]
  4027a1:	mov    r12,QWORD PTR [rip+0x6bf8]        # 0x4093a0
  4027a8:	jmp    0x4027c3
  4027aa:	nop    WORD PTR [rax+rax*1+0x0]
  4027b0:	add    esi,0x1
  4027b3:	add    rbx,0x18
  4027b7:	cmp    esi,DWORD PTR [rip+0x5ec7]        # 0x408684
  4027bd:	jge    0x40264b
  4027c3:	mov    rax,rbx
  4027c6:	add    rax,QWORD PTR [rip+0x5ebb]        # 0x408688
  4027cd:	mov    edx,DWORD PTR [rax]
  4027cf:	test   edx,edx
  4027d1:	je     0x4027b0
  4027d3:	mov    rcx,QWORD PTR [rax+0x8]
  4027d7:	mov    r8d,0x30
  4027dd:	mov    rdx,rdi
  4027e0:	call   r14
  4027e3:	test   rax,rax
  4027e6:	je     0x4028fe
  4027ec:	mov    rax,QWORD PTR [rip+0x5e95]        # 0x408688
  4027f3:	mov    r9,r13
  4027f6:	mov    rdx,QWORD PTR [rbp-0x18]
  4027fa:	mov    rcx,QWORD PTR [rbp-0x30]
  4027fe:	mov    r8d,DWORD PTR [rax+rbx*1]
  402802:	call   r12
  402805:	jmp    0x4027b0
  402807:	nop    WORD PTR [rax+rax*1+0x0]
  402810:	cmp    rbx,rsi
  402813:	jae    0x40264b
  402819:	mov    r12,QWORD PTR [rip+0x2f50]        # 0x405770
  402820:	lea    rdi,[rbp-0x30]
  402824:	mov    ecx,DWORD PTR [rbx+0x4]
  402827:	mov    eax,DWORD PTR [rbx]
  402829:	mov    r8d,0x4
  40282f:	mov    rdx,rdi
  402832:	add    rbx,0x8
  402836:	add    rcx,r12
  402839:	add    eax,DWORD PTR [rcx]
  40283b:	mov    DWORD PTR [rbp-0x30],eax
  40283e:	call   0x4024c0
  402843:	cmp    rbx,rsi
  402846:	jb     0x402824
  402848:	jmp    0x402784
  40284d:	cmp    edx,0x8
  402850:	jne    0x4028bb
  402852:	movzx  edx,BYTE PTR [rcx]
  402855:	mov    rdi,r13
  402858:	mov    r10,rdx
  40285b:	or     r10,0xffffffffffffff00
  402862:	test   dl,dl
  402864:	cmovs  rdx,r10
  402868:	sub    rdx,rax
  40286b:	lea    rax,[r8+rdx*1]
  40286f:	mov    r8d,0x1
  402875:	mov    rdx,r13
  402878:	mov    QWORD PTR [rbp-0x30],rax
  40287c:	call   0x4024c0
  402881:	jmp    0x40277b
  402886:	movzx  edx,WORD PTR [rcx]
  402889:	mov    rdi,r13
  40288c:	mov    r10,rdx
  40288f:	or     r10,0xffffffffffff0000
  402896:	test   dx,dx
  402899:	cmovs  rdx,r10
  40289d:	sub    rdx,rax
  4028a0:	lea    rax,[r8+rdx*1]
  4028a4:	mov    r8d,0x2
  4028aa:	mov    rdx,r13
  4028ad:	mov    QWORD PTR [rbp-0x30],rax
  4028b1:	call   0x4024c0
  4028b6:	jmp    0x40277b
  4028bb:	lea    rcx,[rip+0x2e06]        # 0x4056c8
  4028c2:	mov    QWORD PTR [rbp-0x30],0x0
  4028ca:	call   0x402450
  4028cf:	mov    edx,DWORD PTR [rcx]
  4028d1:	mov    rdi,r13
  4028d4:	mov    r10,rdx
  4028d7:	or     r10,r14
  4028da:	test   edx,edx
  4028dc:	cmovs  rdx,r10
  4028e0:	sub    rdx,rax
  4028e3:	lea    rax,[r8+rdx*1]
  4028e7:	mov    r8d,0x4
  4028ed:	mov    rdx,r13
  4028f0:	mov    QWORD PTR [rbp-0x30],rax
  4028f4:	call   0x4024c0
  4028f9:	jmp    0x40277b
  4028fe:	add    rbx,QWORD PTR [rip+0x5d83]        # 0x408688
  402905:	lea    rcx,[rip+0x2d24]        # 0x405630
  40290c:	mov    rax,QWORD PTR [rbx+0x10]
  402910:	mov    r8,QWORD PTR [rbx+0x8]
  402914:	mov    edx,DWORD PTR [rax+0x8]
  402917:	call   0x402450
  40291c:	lea    rcx,[rip+0x2d6d]        # 0x405690
  402923:	call   0x402450
  402928:	nop
  402929:	nop
  40292a:	nop
  40292b:	nop
  40292c:	nop
  40292d:	nop
  40292e:	nop
  40292f:	nop
  402930:	sub    rsp,0x28
  402934:	mov    eax,DWORD PTR [rcx]
  402936:	cmp    eax,0xc0000091
  40293b:	ja     0x4029a0
  40293d:	cmp    eax,0xc000008d
  402942:	jae    0x4029bf
  402944:	cmp    eax,0xc0000008
  402949:	je     0x402a60
  40294f:	ja     0x402a30
  402955:	cmp    eax,0x80000002
  40295a:	je     0x402a60
  402960:	cmp    eax,0xc0000005
  402965:	jne    0x402a3e
  40296b:	xor    edx,edx
  40296d:	mov    ecx,0xb
  402972:	call   0x403410
  402977:	cmp    rax,0x1
  40297b:	je     0x402ac0
  402981:	test   rax,rax
  402984:	je     0x402aa0
  40298a:	mov    ecx,0xb
  40298f:	call   rax
  402991:	xor    eax,eax
  402993:	add    rsp,0x28
  402997:	ret    
  402998:	nop    DWORD PTR [rax+rax*1+0x0]
  4029a0:	cmp    eax,0xc0000094
  4029a5:	je     0x402a70
  4029ab:	ja     0x4029f0
  4029ad:	cmp    eax,0xc0000092
  4029b2:	je     0x402a60
  4029b8:	cmp    eax,0xc0000093
  4029bd:	jne    0x402a3e
  4029bf:	xor    edx,edx
  4029c1:	mov    ecx,0x8
  4029c6:	call   0x403410
  4029cb:	cmp    rax,0x1
  4029cf:	mov    rdx,rax
  4029d2:	je     0x402a48
  4029d4:	test   rdx,rdx
  4029d7:	mov    eax,0x1
  4029dc:	je     0x402993
  4029de:	mov    ecx,0x8
  4029e3:	call   rdx
  4029e5:	xor    eax,eax
  4029e7:	add    rsp,0x28
  4029eb:	ret    
  4029ec:	nop    DWORD PTR [rax+0x0]
  4029f0:	cmp    eax,0xc0000095
  4029f5:	je     0x402a60
  4029f7:	cmp    eax,0xc0000096
  4029fc:	jne    0x402a3e
  4029fe:	xor    edx,edx
  402a00:	mov    ecx,0x4
  402a05:	call   0x403410
  402a0a:	cmp    rax,0x1
  402a0e:	je     0x402aaa
  402a14:	test   rax,rax
  402a17:	je     0x402aa0
  402a1d:	mov    ecx,0x4
  402a22:	call   rax
  402a24:	xor    eax,eax
  402a26:	jmp    0x402993
  402a2b:	nop    DWORD PTR [rax+rax*1+0x0]
  402a30:	cmp    eax,0xc000001d
  402a35:	je     0x4029fe
  402a37:	cmp    eax,0xc000008c
  402a3c:	je     0x402a60
  402a3e:	mov    eax,0x1
  402a43:	add    rsp,0x28
  402a47:	ret    
  402a48:	mov    edx,0x1
  402a4d:	mov    ecx,0x8
  402a52:	call   0x403410
  402a57:	call   0x402420
  402a5c:	nop    DWORD PTR [rax+0x0]
  402a60:	xor    eax,eax
  402a62:	add    rsp,0x28
  402a66:	ret    
  402a67:	nop    WORD PTR [rax+rax*1+0x0]
  402a70:	xor    edx,edx
  402a72:	mov    ecx,0x8
  402a77:	call   0x403410
  402a7c:	cmp    rax,0x1
  402a80:	mov    rdx,rax
  402a83:	jne    0x4029d4
  402a89:	mov    edx,0x1
  402a8e:	mov    ecx,0x8
  402a93:	call   0x403410
  402a98:	xor    eax,eax
  402a9a:	jmp    0x402993
  402a9f:	nop
  402aa0:	mov    eax,0x4
  402aa5:	add    rsp,0x28
  402aa9:	ret    
  402aaa:	mov    edx,0x1
  402aaf:	mov    ecx,0x4
  402ab4:	call   0x403410
  402ab9:	xor    eax,eax
  402abb:	jmp    0x402993
  402ac0:	mov    edx,0x1
  402ac5:	mov    ecx,0xb
  402aca:	call   0x403410
  402acf:	xor    eax,eax
  402ad1:	jmp    0x402993
  402ad6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402ae0:	push   r12
  402ae2:	push   rbp
  402ae3:	push   rdi
  402ae4:	push   rsi
  402ae5:	push   rbx
  402ae6:	sub    rsp,0x20
  402aea:	call   0x403250
  402aef:	mov    rbp,rax
  402af2:	mov    eax,DWORD PTR [rip+0x5bd0]        # 0x4086c8
  402af8:	test   eax,eax
  402afa:	jne    0x402b21
  402afc:	test   rbp,rbp
  402aff:	je     0x402b21
  402b01:	lea    rcx,[rip+0x2bf8]        # 0x405700
  402b08:	mov    DWORD PTR [rip+0x5bb6],0x1        # 0x4086c8
  402b12:	call   0x403090
  402b17:	test   rax,rax
  402b1a:	je     0x402b30
  402b1c:	mov    eax,0x1
  402b21:	add    rsp,0x20
  402b25:	pop    rbx
  402b26:	pop    rsi
  402b27:	pop    rdi
  402b28:	pop    rbp
  402b29:	pop    r12
  402b2b:	ret    
  402b2c:	nop    DWORD PTR [rax+0x0]
  402b30:	lea    rbx,[rip+0x5cc9]        # 0x408800
  402b37:	mov    ecx,0x30
  402b3c:	lea    rdx,[rip+0x5bbd]        # 0x408700
  402b43:	lea    r12,[rip+0xfffffffffffffde6]        # 0x402930
  402b4a:	xor    esi,esi
  402b4c:	mov    rdi,rbx
  402b4f:	rep stos QWORD PTR es:[rdi],rax
  402b52:	mov    rdi,rdx
  402b55:	sub    r12,rbp
  402b58:	mov    cl,0x20
  402b5a:	rep stos QWORD PTR es:[rdi],rax
  402b5d:	mov    rdi,rdx
  402b60:	jmp    0x402b90
  402b62:	mov    BYTE PTR [rdi],0x9
  402b65:	mov    DWORD PTR [rdi+0x4],r12d
  402b69:	add    rsi,0x1
  402b6d:	mov    edx,DWORD PTR [rax+0xc]
  402b70:	add    rbx,0xc
  402b74:	mov    DWORD PTR [rbx-0xc],edx
  402b77:	add    edx,DWORD PTR [rax+0x8]
  402b7a:	mov    rax,rdi
  402b7d:	sub    rax,rbp
  402b80:	add    rdi,0x8
  402b84:	mov    DWORD PTR [rbx-0x4],eax
  402b87:	mov    DWORD PTR [rbx-0x8],edx
  402b8a:	cmp    rsi,0x20
  402b8e:	je     0x402bc5
  402b90:	mov    rcx,rsi
  402b93:	call   0x4031c0
  402b98:	test   rax,rax
  402b9b:	jne    0x402b62
  402b9d:	test   rsi,rsi
  402ba0:	je     0x402b1c
  402ba6:	mov    edx,esi
  402ba8:	nop    DWORD PTR [rax+rax*1+0x0]
  402bb0:	mov    r8,rbp
  402bb3:	lea    rcx,[rip+0x5c46]        # 0x408800
  402bba:	call   QWORD PTR [rip+0x6798]        # 0x409358
  402bc0:	jmp    0x402b1c
  402bc5:	mov    edx,0x20
  402bca:	jmp    0x402bb0
  402bcc:	nop    DWORD PTR [rax+0x0]
  402bd0:	push   rbx
  402bd1:	sub    rsp,0x20
  402bd5:	mov    rdx,QWORD PTR [rcx]
  402bd8:	mov    eax,DWORD PTR [rdx]
  402bda:	mov    r8d,eax
  402bdd:	and    r8d,0x20ffffff
  402be4:	cmp    r8d,0x20474343
  402beb:	je     0x402cf0
  402bf1:	cmp    eax,0xc0000091
  402bf6:	mov    rbx,rcx
  402bf9:	ja     0x402c80
  402bff:	cmp    eax,0xc000008d
  402c04:	jae    0x402c97
  402c0a:	cmp    eax,0xc0000008
  402c0f:	je     0x402c43
  402c11:	ja     0x402c50
  402c13:	cmp    eax,0x80000002
  402c18:	je     0x402c43
  402c1a:	cmp    eax,0xc0000005
  402c1f:	jne    0x402c62
  402c21:	xor    edx,edx
  402c23:	mov    ecx,0xb
  402c28:	call   0x403410
  402c2d:	cmp    rax,0x1
  402c31:	je     0x402d60
  402c37:	test   rax,rax
  402c3a:	je     0x402c62
  402c3c:	mov    ecx,0xb
  402c41:	call   rax
  402c43:	mov    eax,0xffffffff
  402c48:	add    rsp,0x20
  402c4c:	pop    rbx
  402c4d:	ret    
  402c4e:	xchg   ax,ax
  402c50:	cmp    eax,0xc000001d
  402c55:	je     0x402d16
  402c5b:	cmp    eax,0xc000008c
  402c60:	je     0x402c43
  402c62:	mov    rax,QWORD PTR [rip+0x5a57]        # 0x4086c0
  402c69:	test   rax,rax
  402c6c:	je     0x402c48
  402c6e:	mov    rcx,rbx
  402c71:	add    rsp,0x20
  402c75:	pop    rbx
  402c76:	rex.W jmp rax
  402c79:	nop    DWORD PTR [rax+0x0]
  402c80:	cmp    eax,0xc0000094
  402c85:	je     0x402cc2
  402c87:	ja     0x402d00
  402c89:	cmp    eax,0xc0000092
  402c8e:	je     0x402c43
  402c90:	cmp    eax,0xc0000093
  402c95:	jne    0x402c62
  402c97:	xor    edx,edx
  402c99:	mov    ecx,0x8
  402c9e:	call   0x403410
  402ca3:	cmp    rax,0x1
  402ca7:	jne    0x402cd4
  402ca9:	mov    edx,0x1
  402cae:	mov    ecx,0x8
  402cb3:	call   0x403410
  402cb8:	call   0x402420
  402cbd:	jmp    0x402c43
  402cc2:	xor    edx,edx
  402cc4:	mov    ecx,0x8
  402cc9:	call   0x403410
  402cce:	cmp    rax,0x1
  402cd2:	je     0x402d42
  402cd4:	test   rax,rax
  402cd7:	je     0x402c62
  402cd9:	mov    ecx,0x8
  402cde:	call   rax
  402ce0:	mov    eax,0xffffffff
  402ce5:	jmp    0x402c48
  402cea:	nop    WORD PTR [rax+rax*1+0x0]
  402cf0:	test   BYTE PTR [rdx+0x4],0x1
  402cf4:	jne    0x402bf1
  402cfa:	jmp    0x402c43
  402cff:	nop
  402d00:	cmp    eax,0xc0000095
  402d05:	je     0x402c43
  402d0b:	cmp    eax,0xc0000096
  402d10:	jne    0x402c62
  402d16:	xor    edx,edx
  402d18:	mov    ecx,0x4
  402d1d:	call   0x403410
  402d22:	cmp    rax,0x1
  402d26:	je     0x402d74
  402d28:	test   rax,rax
  402d2b:	je     0x402c62
  402d31:	mov    ecx,0x4
  402d36:	call   rax
  402d38:	mov    eax,0xffffffff
  402d3d:	jmp    0x402c48
  402d42:	mov    edx,0x1
  402d47:	mov    ecx,0x8
  402d4c:	call   0x403410
  402d51:	jmp    0x402c43
  402d56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402d60:	mov    edx,0x1
  402d65:	mov    ecx,0xb
  402d6a:	call   0x403410
  402d6f:	jmp    0x402c43
  402d74:	mov    edx,0x1
  402d79:	mov    ecx,0x4
  402d7e:	call   0x403410
  402d83:	jmp    0x402c43
  402d88:	nop
  402d89:	nop
  402d8a:	nop
  402d8b:	nop
  402d8c:	nop
  402d8d:	nop
  402d8e:	nop
  402d8f:	nop
  402d90:	push   rbp
  402d91:	push   rdi
  402d92:	push   rsi
  402d93:	push   rbx
  402d94:	sub    rsp,0x28
  402d98:	lea    rcx,[rip+0x5c01]        # 0x4089a0
  402d9f:	call   QWORD PTR [rip+0x655b]        # 0x409300
  402da5:	mov    rbx,QWORD PTR [rip+0x5bd4]        # 0x408980
  402dac:	test   rbx,rbx
  402daf:	je     0x402de4
  402db1:	mov    rbp,QWORD PTR [rip+0x65d8]        # 0x409390
  402db8:	mov    rdi,QWORD PTR [rip+0x6561]        # 0x409320
  402dbf:	nop
  402dc0:	mov    ecx,DWORD PTR [rbx]
  402dc2:	call   rbp
  402dc4:	mov    rsi,rax
  402dc7:	call   rdi
  402dc9:	test   eax,eax
  402dcb:	jne    0x402ddb
  402dcd:	test   rsi,rsi
  402dd0:	je     0x402ddb
  402dd2:	mov    rax,QWORD PTR [rbx+0x8]
  402dd6:	mov    rcx,rsi
  402dd9:	call   rax
  402ddb:	mov    rbx,QWORD PTR [rbx+0x10]
  402ddf:	test   rbx,rbx
  402de2:	jne    0x402dc0
  402de4:	mov    rax,QWORD PTR [rip+0x655d]        # 0x409348
  402deb:	lea    rcx,[rip+0x5bae]        # 0x4089a0
  402df2:	add    rsp,0x28
  402df6:	pop    rbx
  402df7:	pop    rsi
  402df8:	pop    rdi
  402df9:	pop    rbp
  402dfa:	rex.W jmp rax
  402dfd:	nop    DWORD PTR [rax]
  402e00:	push   rdi
  402e01:	push   rsi
  402e02:	push   rbx
  402e03:	sub    rsp,0x20
  402e07:	mov    eax,DWORD PTR [rip+0x5b7b]        # 0x408988
  402e0d:	test   eax,eax
  402e0f:	jne    0x402e20
  402e11:	add    rsp,0x20
  402e15:	pop    rbx
  402e16:	pop    rsi
  402e17:	pop    rdi
  402e18:	ret    
  402e19:	nop    DWORD PTR [rax+0x0]
  402e20:	mov    rsi,rdx
  402e23:	mov    edi,ecx
  402e25:	mov    edx,0x18
  402e2a:	mov    ecx,0x1
  402e2f:	call   0x403458
  402e34:	test   rax,rax
  402e37:	mov    rbx,rax
  402e3a:	je     0x402e78
  402e3c:	mov    DWORD PTR [rax],edi
  402e3e:	mov    QWORD PTR [rax+0x8],rsi
  402e42:	lea    rcx,[rip+0x5b57]        # 0x4089a0
  402e49:	call   QWORD PTR [rip+0x64b1]        # 0x409300
  402e4f:	mov    rax,QWORD PTR [rip+0x5b2a]        # 0x408980
  402e56:	lea    rcx,[rip+0x5b43]        # 0x4089a0
  402e5d:	mov    QWORD PTR [rip+0x5b1c],rbx        # 0x408980
  402e64:	mov    QWORD PTR [rbx+0x10],rax
  402e68:	call   QWORD PTR [rip+0x64da]        # 0x409348
  402e6e:	xor    eax,eax
  402e70:	add    rsp,0x20
  402e74:	pop    rbx
  402e75:	pop    rsi
  402e76:	pop    rdi
  402e77:	ret    
  402e78:	mov    eax,0xffffffff
  402e7d:	jmp    0x402e11
  402e7f:	nop
  402e80:	push   rbx
  402e81:	sub    rsp,0x20
  402e85:	mov    eax,DWORD PTR [rip+0x5afd]        # 0x408988
  402e8b:	test   eax,eax
  402e8d:	jne    0x402ea0
  402e8f:	xor    eax,eax
  402e91:	add    rsp,0x20
  402e95:	pop    rbx
  402e96:	ret    
  402e97:	nop    WORD PTR [rax+rax*1+0x0]
  402ea0:	mov    ebx,ecx
  402ea2:	lea    rcx,[rip+0x5af7]        # 0x4089a0
  402ea9:	call   QWORD PTR [rip+0x6451]        # 0x409300
  402eaf:	mov    rdx,QWORD PTR [rip+0x5aca]        # 0x408980
  402eb6:	test   rdx,rdx
  402eb9:	je     0x402ed7
  402ebb:	mov    eax,DWORD PTR [rdx]
  402ebd:	cmp    eax,ebx
  402ebf:	jne    0x402ece
  402ec1:	jmp    0x402f0f
  402ec3:	mov    r8d,DWORD PTR [rax]
  402ec6:	cmp    r8d,ebx
  402ec9:	je     0x402ef0
  402ecb:	mov    rdx,rax
  402ece:	mov    rax,QWORD PTR [rdx+0x10]
  402ed2:	test   rax,rax
  402ed5:	jne    0x402ec3
  402ed7:	lea    rcx,[rip+0x5ac2]        # 0x4089a0
  402ede:	call   QWORD PTR [rip+0x6464]        # 0x409348
  402ee4:	xor    eax,eax
  402ee6:	add    rsp,0x20
  402eea:	pop    rbx
  402eeb:	ret    
  402eec:	nop    DWORD PTR [rax+0x0]
  402ef0:	mov    rcx,rax
  402ef3:	mov    rax,QWORD PTR [rax+0x10]
  402ef7:	mov    QWORD PTR [rdx+0x10],rax
  402efb:	call   0x403438
  402f00:	lea    rcx,[rip+0x5a99]        # 0x4089a0
  402f07:	call   QWORD PTR [rip+0x643b]        # 0x409348
  402f0d:	jmp    0x402ee4
  402f0f:	mov    rax,QWORD PTR [rdx+0x10]
  402f13:	mov    rcx,rdx
  402f16:	mov    QWORD PTR [rip+0x5a63],rax        # 0x408980
  402f1d:	jmp    0x402efb
  402f1f:	nop
  402f20:	push   rbx
  402f21:	sub    rsp,0x20
  402f25:	cmp    edx,0x1
  402f28:	je     0x402fc0
  402f2e:	jb     0x402f60
  402f30:	cmp    edx,0x2
  402f33:	je     0x402f50
  402f35:	cmp    edx,0x3
  402f38:	jne    0x402f55
  402f3a:	mov    eax,DWORD PTR [rip+0x5a48]        # 0x408988
  402f40:	test   eax,eax
  402f42:	je     0x402f55
  402f44:	call   0x402d90
  402f49:	jmp    0x402f55
  402f4b:	nop    DWORD PTR [rax+rax*1+0x0]
  402f50:	call   0x402420
  402f55:	mov    eax,0x1
  402f5a:	add    rsp,0x20
  402f5e:	pop    rbx
  402f5f:	ret    
  402f60:	mov    eax,DWORD PTR [rip+0x5a22]        # 0x408988
  402f66:	test   eax,eax
  402f68:	jne    0x402ff0
  402f6e:	mov    eax,DWORD PTR [rip+0x5a14]        # 0x408988
  402f74:	cmp    eax,0x1
  402f77:	jne    0x402f55
  402f79:	mov    rcx,QWORD PTR [rip+0x5a00]        # 0x408980
  402f80:	test   rcx,rcx
  402f83:	je     0x402f96
  402f85:	mov    rbx,QWORD PTR [rcx+0x10]
  402f89:	call   0x403438
  402f8e:	test   rbx,rbx
  402f91:	mov    rcx,rbx
  402f94:	jne    0x402f85
  402f96:	lea    rcx,[rip+0x5a03]        # 0x4089a0
  402f9d:	mov    QWORD PTR [rip+0x59d8],0x0        # 0x408980
  402fa8:	mov    DWORD PTR [rip+0x59d6],0x0        # 0x408988
  402fb2:	call   QWORD PTR [rip+0x6340]        # 0x4092f8
  402fb8:	jmp    0x402f55
  402fba:	nop    WORD PTR [rax+rax*1+0x0]
  402fc0:	mov    eax,DWORD PTR [rip+0x59c2]        # 0x408988
  402fc6:	test   eax,eax
  402fc8:	je     0x402fe0
  402fca:	mov    eax,0x1
  402fcf:	mov    DWORD PTR [rip+0x59af],0x1        # 0x408988
  402fd9:	add    rsp,0x20
  402fdd:	pop    rbx
  402fde:	ret    
  402fdf:	nop
  402fe0:	lea    rcx,[rip+0x59b9]        # 0x4089a0
  402fe7:	call   QWORD PTR [rip+0x6353]        # 0x409340
  402fed:	jmp    0x402fca
  402fef:	nop
  402ff0:	call   0x402d90
  402ff5:	jmp    0x402f6e
  402ffa:	nop
  402ffb:	nop
  402ffc:	nop
  402ffd:	nop
  402ffe:	nop
  402fff:	nop
  403000:	movsxd rax,DWORD PTR [rcx+0x3c]
  403004:	add    rcx,rax
  403007:	xor    eax,eax
  403009:	cmp    DWORD PTR [rcx],0x4550
  40300f:	je     0x403013
  403011:	repz ret 
  403013:	xor    eax,eax
  403015:	cmp    WORD PTR [rcx+0x18],0x20b
  40301b:	sete   al
  40301e:	ret    
  40301f:	nop
  403020:	cmp    WORD PTR [rcx],0x5a4d
  403025:	je     0x403030
  403027:	xor    eax,eax
  403029:	ret    
  40302a:	nop    WORD PTR [rax+rax*1+0x0]
  403030:	jmp    0x403000
  403032:	nop    DWORD PTR [rax+0x0]
  403036:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403040:	movsxd rax,DWORD PTR [rcx+0x3c]
  403044:	add    rcx,rax
  403047:	movzx  eax,WORD PTR [rcx+0x14]
  40304b:	lea    rax,[rcx+rax*1+0x18]
  403050:	movzx  ecx,WORD PTR [rcx+0x6]
  403054:	test   ecx,ecx
  403056:	je     0x403081
  403058:	sub    ecx,0x1
  40305b:	lea    rcx,[rcx+rcx*4]
  40305f:	lea    r9,[rax+rcx*8+0x28]
  403064:	mov    r8d,DWORD PTR [rax+0xc]
  403068:	cmp    r8,rdx
  40306b:	mov    rcx,r8
  40306e:	ja     0x403078
  403070:	add    ecx,DWORD PTR [rax+0x8]
  403073:	cmp    rdx,rcx
  403076:	jb     0x403083
  403078:	add    rax,0x28
  40307c:	cmp    rax,r9
  40307f:	jne    0x403064
  403081:	xor    eax,eax
  403083:	repz ret 
  403085:	nop
  403086:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403090:	push   rdi
  403091:	push   rsi
  403092:	push   rbx
  403093:	sub    rsp,0x20
  403097:	mov    rsi,rcx
  40309a:	call   0x4033f8
  40309f:	cmp    rax,0x8
  4030a3:	ja     0x4030c0
  4030a5:	mov    rbx,QWORD PTR [rip+0x26c4]        # 0x405770
  4030ac:	xor    edi,edi
  4030ae:	cmp    WORD PTR [rbx],0x5a4d
  4030b3:	je     0x4030d0
  4030b5:	mov    rax,rdi
  4030b8:	add    rsp,0x20
  4030bc:	pop    rbx
  4030bd:	pop    rsi
  4030be:	pop    rdi
  4030bf:	ret    
  4030c0:	xor    edi,edi
  4030c2:	mov    rax,rdi
  4030c5:	add    rsp,0x20
  4030c9:	pop    rbx
  4030ca:	pop    rsi
  4030cb:	pop    rdi
  4030cc:	ret    
  4030cd:	nop    DWORD PTR [rax]
  4030d0:	mov    rcx,rbx
  4030d3:	call   0x403000
  4030d8:	test   eax,eax
  4030da:	je     0x4030b5
  4030dc:	movsxd rdx,DWORD PTR [rbx+0x3c]
  4030e0:	add    rdx,rbx
  4030e3:	movzx  eax,WORD PTR [rdx+0x14]
  4030e7:	lea    rbx,[rdx+rax*1+0x18]
  4030ec:	movzx  eax,WORD PTR [rdx+0x6]
  4030f0:	test   eax,eax
  4030f2:	je     0x4030b5
  4030f4:	sub    eax,0x1
  4030f7:	lea    rax,[rax+rax*4]
  4030fb:	lea    rdi,[rbx+rax*8+0x28]
  403100:	jmp    0x40310b
  403102:	add    rbx,0x28
  403106:	cmp    rbx,rdi
  403109:	je     0x4030c0
  40310b:	mov    r8d,0x8
  403111:	mov    rdx,rsi
  403114:	mov    rcx,rbx
  403117:	call   0x4033f0
  40311c:	test   eax,eax
  40311e:	jne    0x403102
  403120:	mov    rdi,rbx
  403123:	mov    rax,rdi
  403126:	add    rsp,0x20
  40312a:	pop    rbx
  40312b:	pop    rsi
  40312c:	pop    rdi
  40312d:	ret    
  40312e:	xchg   ax,ax
  403130:	push   rsi
  403131:	push   rbx
  403132:	sub    rsp,0x28
  403136:	mov    rbx,QWORD PTR [rip+0x2633]        # 0x405770
  40313d:	cmp    WORD PTR [rbx],0x5a4d
  403142:	je     0x403150
  403144:	xor    eax,eax
  403146:	add    rsp,0x28
  40314a:	pop    rbx
  40314b:	pop    rsi
  40314c:	ret    
  40314d:	nop    DWORD PTR [rax]
  403150:	mov    rsi,rcx
  403153:	mov    rcx,rbx
  403156:	call   0x403000
  40315b:	test   eax,eax
  40315d:	je     0x403144
  40315f:	sub    rsi,rbx
  403162:	mov    rcx,rbx
  403165:	mov    rdx,rsi
  403168:	add    rsp,0x28
  40316c:	pop    rbx
  40316d:	pop    rsi
  40316e:	jmp    0x403040
  403173:	nop    DWORD PTR [rax]
  403176:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403180:	push   rbx
  403181:	sub    rsp,0x20
  403185:	mov    rbx,QWORD PTR [rip+0x25e4]        # 0x405770
  40318c:	xor    eax,eax
  40318e:	cmp    WORD PTR [rbx],0x5a4d
  403193:	je     0x4031a0
  403195:	add    rsp,0x20
  403199:	pop    rbx
  40319a:	ret    
  40319b:	nop    DWORD PTR [rax+rax*1+0x0]
  4031a0:	mov    rcx,rbx
  4031a3:	call   0x403000
  4031a8:	test   eax,eax
  4031aa:	je     0x403195
  4031ac:	movsxd rax,DWORD PTR [rbx+0x3c]
  4031b0:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  4031b5:	add    rsp,0x20
  4031b9:	pop    rbx
  4031ba:	ret    
  4031bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4031c0:	push   rdi
  4031c1:	push   rsi
  4031c2:	push   rbx
  4031c3:	sub    rsp,0x20
  4031c7:	mov    rsi,QWORD PTR [rip+0x25a2]        # 0x405770
  4031ce:	xor    edi,edi
  4031d0:	mov    rbx,rcx
  4031d3:	cmp    WORD PTR [rsi],0x5a4d
  4031d8:	je     0x4031e5
  4031da:	mov    rax,rdi
  4031dd:	add    rsp,0x20
  4031e1:	pop    rbx
  4031e2:	pop    rsi
  4031e3:	pop    rdi
  4031e4:	ret    
  4031e5:	mov    rcx,rsi
  4031e8:	call   0x403000
  4031ed:	test   eax,eax
  4031ef:	je     0x4031da
  4031f1:	movsxd rax,DWORD PTR [rsi+0x3c]
  4031f5:	add    rsi,rax
  4031f8:	movzx  eax,WORD PTR [rsi+0x14]
  4031fc:	lea    rdx,[rsi+rax*1+0x18]
  403201:	movzx  eax,WORD PTR [rsi+0x6]
  403205:	test   eax,eax
  403207:	je     0x4031da
  403209:	sub    eax,0x1
  40320c:	lea    rax,[rax+rax*4]
  403210:	lea    rax,[rdx+rax*8+0x28]
  403215:	test   BYTE PTR [rdx+0x27],0x20
  403219:	je     0x403224
  40321b:	test   rbx,rbx
  40321e:	je     0x403240
  403220:	sub    rbx,0x1
  403224:	add    rdx,0x28
  403228:	cmp    rdx,rax
  40322b:	jne    0x403215
  40322d:	xor    edi,edi
  40322f:	mov    rax,rdi
  403232:	add    rsp,0x20
  403236:	pop    rbx
  403237:	pop    rsi
  403238:	pop    rdi
  403239:	ret    
  40323a:	nop    WORD PTR [rax+rax*1+0x0]
  403240:	mov    rdi,rdx
  403243:	mov    rax,rdi
  403246:	add    rsp,0x20
  40324a:	pop    rbx
  40324b:	pop    rsi
  40324c:	pop    rdi
  40324d:	ret    
  40324e:	xchg   ax,ax
  403250:	push   rsi
  403251:	push   rbx
  403252:	sub    rsp,0x28
  403256:	mov    rsi,QWORD PTR [rip+0x2513]        # 0x405770
  40325d:	xor    ebx,ebx
  40325f:	cmp    WORD PTR [rsi],0x5a4d
  403264:	je     0x403270
  403266:	mov    rax,rbx
  403269:	add    rsp,0x28
  40326d:	pop    rbx
  40326e:	pop    rsi
  40326f:	ret    
  403270:	mov    rcx,rsi
  403273:	call   0x403000
  403278:	test   eax,eax
  40327a:	cmovne rbx,rsi
  40327e:	mov    rax,rbx
  403281:	add    rsp,0x28
  403285:	pop    rbx
  403286:	pop    rsi
  403287:	ret    
  403288:	nop    DWORD PTR [rax+rax*1+0x0]
  403290:	push   rsi
  403291:	push   rbx
  403292:	sub    rsp,0x28
  403296:	mov    rbx,QWORD PTR [rip+0x24d3]        # 0x405770
  40329d:	xor    eax,eax
  40329f:	cmp    WORD PTR [rbx],0x5a4d
  4032a4:	je     0x4032b0
  4032a6:	add    rsp,0x28
  4032aa:	pop    rbx
  4032ab:	pop    rsi
  4032ac:	ret    
  4032ad:	nop    DWORD PTR [rax]
  4032b0:	mov    rsi,rcx
  4032b3:	mov    rcx,rbx
  4032b6:	call   0x403000
  4032bb:	test   eax,eax
  4032bd:	je     0x4032a6
  4032bf:	sub    rsi,rbx
  4032c2:	mov    rcx,rbx
  4032c5:	mov    rdx,rsi
  4032c8:	call   0x403040
  4032cd:	test   rax,rax
  4032d0:	je     0x4032e1
  4032d2:	mov    eax,DWORD PTR [rax+0x24]
  4032d5:	not    eax
  4032d7:	shr    eax,0x1f
  4032da:	add    rsp,0x28
  4032de:	pop    rbx
  4032df:	pop    rsi
  4032e0:	ret    
  4032e1:	xor    eax,eax
  4032e3:	jmp    0x4032a6
  4032e5:	nop
  4032e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4032f0:	push   rbp
  4032f1:	push   rdi
  4032f2:	push   rsi
  4032f3:	push   rbx
  4032f4:	sub    rsp,0x28
  4032f8:	mov    rdi,QWORD PTR [rip+0x2471]        # 0x405770
  4032ff:	xor    ebp,ebp
  403301:	mov    esi,ecx
  403303:	cmp    WORD PTR [rdi],0x5a4d
  403308:	je     0x403320
  40330a:	mov    rax,rbp
  40330d:	add    rsp,0x28
  403311:	pop    rbx
  403312:	pop    rsi
  403313:	pop    rdi
  403314:	pop    rbp
  403315:	ret    
  403316:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403320:	mov    rcx,rdi
  403323:	call   0x403000
  403328:	test   eax,eax
  40332a:	je     0x40330a
  40332c:	movsxd rax,DWORD PTR [rdi+0x3c]
  403330:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  403337:	test   edx,edx
  403339:	je     0x40330a
  40333b:	mov    ebx,edx
  40333d:	mov    rcx,rdi
  403340:	mov    rdx,rbx
  403343:	call   0x403040
  403348:	test   rax,rax
  40334b:	je     0x40330a
  40334d:	add    rbx,rdi
  403350:	mov    rdx,rbx
  403353:	jne    0x403367
  403355:	jmp    0x40330a
  403357:	nop    WORD PTR [rax+rax*1+0x0]
  403360:	sub    esi,0x1
  403363:	add    rdx,0x14
  403367:	mov    ecx,DWORD PTR [rdx+0x4]
  40336a:	test   ecx,ecx
  40336c:	jne    0x403375
  40336e:	mov    eax,DWORD PTR [rdx+0xc]
  403371:	test   eax,eax
  403373:	je     0x403390
  403375:	test   esi,esi
  403377:	jg     0x403360
  403379:	mov    ebp,DWORD PTR [rdx+0xc]
  40337c:	add    rbp,rdi
  40337f:	mov    rax,rbp
  403382:	add    rsp,0x28
  403386:	pop    rbx
  403387:	pop    rsi
  403388:	pop    rdi
  403389:	pop    rbp
  40338a:	ret    
  40338b:	nop    DWORD PTR [rax+rax*1+0x0]
  403390:	xor    ebp,ebp
  403392:	mov    rax,rbp
  403395:	add    rsp,0x28
  403399:	pop    rbx
  40339a:	pop    rsi
  40339b:	pop    rdi
  40339c:	pop    rbp
  40339d:	ret    
  40339e:	nop
  40339f:	nop
  4033a0:	push   rcx
  4033a1:	push   rax
  4033a2:	cmp    rax,0x1000
  4033a8:	lea    rcx,[rsp+0x18]
  4033ad:	jb     0x4033c8
  4033af:	sub    rcx,0x1000
  4033b6:	or     QWORD PTR [rcx],0x0
  4033ba:	sub    rax,0x1000
  4033c0:	cmp    rax,0x1000
  4033c6:	ja     0x4033af
  4033c8:	sub    rcx,rax
  4033cb:	or     QWORD PTR [rcx],0x0
  4033cf:	pop    rax
  4033d0:	pop    rcx
  4033d1:	ret    
  4033d2:	nop
  4033d3:	nop
  4033d4:	nop
  4033d5:	nop
  4033d6:	nop
  4033d7:	nop
  4033d8:	nop
  4033d9:	nop
  4033da:	nop
  4033db:	nop
  4033dc:	nop
  4033dd:	nop
  4033de:	nop
  4033df:	nop
  4033e0:	jmp    QWORD PTR [rip+0x60ea]        # 0x4094d0
  4033e6:	nop
  4033e7:	nop
  4033e8:	jmp    QWORD PTR [rip+0x60da]        # 0x4094c8
  4033ee:	nop
  4033ef:	nop
  4033f0:	jmp    QWORD PTR [rip+0x60ca]        # 0x4094c0
  4033f6:	nop
  4033f7:	nop
  4033f8:	jmp    QWORD PTR [rip+0x60ba]        # 0x4094b8
  4033fe:	nop
  4033ff:	nop
  403400:	jmp    QWORD PTR [rip+0x60aa]        # 0x4094b0
  403406:	nop
  403407:	nop
  403408:	jmp    QWORD PTR [rip+0x609a]        # 0x4094a8
  40340e:	nop
  40340f:	nop
  403410:	jmp    QWORD PTR [rip+0x608a]        # 0x4094a0
  403416:	nop
  403417:	nop
  403418:	jmp    QWORD PTR [rip+0x607a]        # 0x409498
  40341e:	nop
  40341f:	nop
  403420:	jmp    QWORD PTR [rip+0x606a]        # 0x409490
  403426:	nop
  403427:	nop
  403428:	jmp    QWORD PTR [rip+0x605a]        # 0x409488
  40342e:	nop
  40342f:	nop
  403430:	jmp    QWORD PTR [rip+0x604a]        # 0x409480
  403436:	nop
  403437:	nop
  403438:	jmp    QWORD PTR [rip+0x603a]        # 0x409478
  40343e:	nop
  40343f:	nop
  403440:	jmp    QWORD PTR [rip+0x602a]        # 0x409470
  403446:	nop
  403447:	nop
  403448:	jmp    QWORD PTR [rip+0x601a]        # 0x409468
  40344e:	nop
  40344f:	nop
  403450:	jmp    QWORD PTR [rip+0x600a]        # 0x409460
  403456:	nop
  403457:	nop
  403458:	jmp    QWORD PTR [rip+0x5ffa]        # 0x409458
  40345e:	nop
  40345f:	nop
  403460:	jmp    QWORD PTR [rip+0x5fea]        # 0x409450
  403466:	nop
  403467:	nop
  403468:	jmp    QWORD PTR [rip+0x5fda]        # 0x409448
  40346e:	nop
  40346f:	nop
  403470:	jmp    QWORD PTR [rip+0x5fca]        # 0x409440
  403476:	nop
  403477:	nop
  403478:	jmp    QWORD PTR [rip+0x5fba]        # 0x409438
  40347e:	nop
  40347f:	nop
  403480:	jmp    QWORD PTR [rip+0x5faa]        # 0x409430
  403486:	nop
  403487:	nop
  403488:	jmp    QWORD PTR [rip+0x5f9a]        # 0x409428
  40348e:	nop
  40348f:	nop
  403490:	jmp    QWORD PTR [rip+0x5f82]        # 0x409418
  403496:	nop
  403497:	nop
  403498:	jmp    QWORD PTR [rip+0x5f6a]        # 0x409408
  40349e:	nop
  40349f:	nop
  4034a0:	jmp    QWORD PTR [rip+0x5f5a]        # 0x409400
  4034a6:	nop
  4034a7:	nop
  4034a8:	jmp    QWORD PTR [rip+0x5f42]        # 0x4093f0
  4034ae:	nop
  4034af:	nop
  4034b0:	jmp    QWORD PTR [rip+0x5f32]        # 0x4093e8
  4034b6:	nop
  4034b7:	nop
  4034b8:	jmp    QWORD PTR [rip+0x5f22]        # 0x4093e0
  4034be:	nop
  4034bf:	nop
  4034c0:	jmp    QWORD PTR [rip+0x5f12]        # 0x4093d8
  4034c6:	nop
  4034c7:	nop
  4034c8:	jmp    QWORD PTR [rip+0x5efa]        # 0x4093c8
  4034ce:	nop
  4034cf:	nop
  4034d0:	jmp    QWORD PTR [rip+0x5eea]        # 0x4093c0
  4034d6:	nop
  4034d7:	nop
  4034d8:	jmp    QWORD PTR [rip+0x5eda]        # 0x4093b8
  4034de:	nop
  4034df:	nop
  4034e0:	mov    rax,QWORD PTR [rip+0x5509]        # 0x4089f0
  4034e7:	ret    
  4034e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4034f0:	mov    rax,rcx
  4034f3:	xchg   QWORD PTR [rip+0x54f6],rax        # 0x4089f0
  4034fa:	ret    
  4034fb:	nop
  4034fc:	nop
  4034fd:	nop
  4034fe:	nop
  4034ff:	nop
  403500:	jmp    QWORD PTR [rip+0x5ea2]        # 0x4093a8
  403506:	nop
  403507:	nop
  403508:	jmp    QWORD PTR [rip+0x5e92]        # 0x4093a0
  40350e:	nop
  40350f:	nop
  403510:	jmp    QWORD PTR [rip+0x5e82]        # 0x409398
  403516:	nop
  403517:	nop
  403518:	jmp    QWORD PTR [rip+0x5e72]        # 0x409390
  40351e:	nop
  40351f:	nop
  403520:	jmp    QWORD PTR [rip+0x5e62]        # 0x409388
  403526:	nop
  403527:	nop
  403528:	jmp    QWORD PTR [rip+0x5e52]        # 0x409380
  40352e:	nop
  40352f:	nop
  403530:	jmp    QWORD PTR [rip+0x5e42]        # 0x409378
  403536:	nop
  403537:	nop
  403538:	jmp    QWORD PTR [rip+0x5e32]        # 0x409370
  40353e:	nop
  40353f:	nop
  403540:	jmp    QWORD PTR [rip+0x5e22]        # 0x409368
  403546:	nop
  403547:	nop
  403548:	jmp    QWORD PTR [rip+0x5e12]        # 0x409360
  40354e:	nop
  40354f:	nop
  403550:	jmp    QWORD PTR [rip+0x5e02]        # 0x409358
  403556:	nop
  403557:	nop
  403558:	jmp    QWORD PTR [rip+0x5df2]        # 0x409350
  40355e:	nop
  40355f:	nop
  403560:	jmp    QWORD PTR [rip+0x5de2]        # 0x409348
  403566:	nop
  403567:	nop
  403568:	jmp    QWORD PTR [rip+0x5dd2]        # 0x409340
  40356e:	nop
  40356f:	nop
  403570:	jmp    QWORD PTR [rip+0x5dc2]        # 0x409338
  403576:	nop
  403577:	nop
  403578:	jmp    QWORD PTR [rip+0x5db2]        # 0x409330
  40357e:	nop
  40357f:	nop
  403580:	jmp    QWORD PTR [rip+0x5da2]        # 0x409328
  403586:	nop
  403587:	nop
  403588:	jmp    QWORD PTR [rip+0x5d92]        # 0x409320
  40358e:	nop
  40358f:	nop
  403590:	jmp    QWORD PTR [rip+0x5d82]        # 0x409318
  403596:	nop
  403597:	nop
  403598:	jmp    QWORD PTR [rip+0x5d72]        # 0x409310
  40359e:	nop
  40359f:	nop
  4035a0:	jmp    QWORD PTR [rip+0x5d62]        # 0x409308
  4035a6:	nop
  4035a7:	nop
  4035a8:	jmp    QWORD PTR [rip+0x5d52]        # 0x409300
  4035ae:	nop
  4035af:	nop
  4035b0:	jmp    QWORD PTR [rip+0x5d42]        # 0x4092f8
  4035b6:	nop
  4035b7:	nop
  4035b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4035c0:	(bad)  
  4035c1:	(bad)  
  4035c2:	(bad)  
  4035c3:	(bad)  
  4035c4:	(bad)  
  4035c5:	(bad)  
  4035c6:	(bad)  
  4035c7:	inc    DWORD PTR [rax]
  4035c9:	add    BYTE PTR [rax],al
  4035cb:	add    BYTE PTR [rax],al
  4035cd:	add    BYTE PTR [rax],al
  4035cf:	add    bh,bh
  4035d1:	(bad)  
  4035d2:	(bad)  
  4035d3:	(bad)  
  4035d4:	(bad)  
  4035d5:	(bad)  
  4035d6:	(bad)  
  4035d7:	inc    DWORD PTR [rax]
  4035d9:	add    BYTE PTR [rax],al
  4035db:	add    BYTE PTR [rax],al
  4035dd:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000404000 <.data>:
  404000:	or     al,BYTE PTR [rax]
	...
  40400e:	add    BYTE PTR [rax],al
  404010:	fdiv   DWORD PTR [rip+0x40]        # 0x404056
	...
  40401e:	add    BYTE PTR [rax],al
  404020:	(bad)  
  404021:	(bad)  
  404022:	(bad)  
  404023:	(bad)  
  404024:	(bad)  
  404025:	(bad)  
  404026:	(bad)  
  404027:	inc    DWORD PTR [rax]
  404029:	add    BYTE PTR [rax],al
  40402b:	add    BYTE PTR [rax],al
  40402d:	add    BYTE PTR [rax],al
  40402f:	add    bh,bh
	...
  40403d:	add    BYTE PTR [rax],al
  40403f:	add    BYTE PTR [rdx],al
	...
  40404d:	add    BYTE PTR [rax],al
  40404f:	add    bh,bh
  404051:	(bad)  
  404052:	(bad)  
  404053:	inc    DWORD PTR [rax]
	...
  40405d:	add    BYTE PTR [rax],al
  40405f:	add    al,ah
  404061:	xor    al,0x40
  404063:	add    BYTE PTR [rax],al
  404065:	add    BYTE PTR [rax],al
  404067:	add    al,dh
  404069:	xor    al,0x40
  40406b:	add    BYTE PTR [rax],al
  40406d:	add    BYTE PTR [rax],al
  40406f:	add    BYTE PTR [rdx],dh
  404071:	movabs ds:0x2b992ddf,al
  40407a:	add    BYTE PTR [rax],al
  40407c:	add    BYTE PTR [rax],al
  40407e:	add    BYTE PTR [rax],al
  404080:	int    0x5d
  404082:	and    dl,dl
  404084:	data16 (bad) 
  404086:	(bad)  
  404087:	inc    DWORD PTR [rax]
  404089:	add    BYTE PTR [rax],al
  40408b:	add    BYTE PTR [rax],al
  40408d:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000000405000 <.rdata>:
  405000:	fs (bad) 
  405002:	jne    0x405077
  405004:	sub    eax,0x61647075
  405009:	je     0x405070
  40500b:	sub    eax,0x69746361
  405010:	jbe    0x405073
  405012:	je     0x40507d
  405014:	outs   dx,DWORD PTR ds:[rsi]
  405015:	outs   dx,BYTE PTR ds:[rsi]
  405016:	sub    eax,0x69766e65
  40501b:	jb     0x40508c
  40501d:	outs   dx,BYTE PTR ds:[rsi]
  40501e:	ins    DWORD PTR es:[rdi],dx
  40501f:	outs   dx,BYTE PTR gs:[rsi]
  405021:	je     0x405023
  405023:	and    eax,0x203a73
  405028:	sub    eax,0x2d2d002d
  40502d:	(bad)  
  40502e:	ins    BYTE PTR es:[rdi],dx
  40502f:	ins    BYTE PTR es:[rdi],dx
  405030:	add    BYTE PTR [rip+0x7379732d],ch        # 0x73b9c363
  405036:	je     0x40509d
  405038:	ins    DWORD PTR es:[rdi],dx
  405039:	add    BYTE PTR fs:[rax],al
  40503c:	add    BYTE PTR [rax],al
  40503e:	add    BYTE PTR [rax],al
  405040:	outs   dx,BYTE PTR ds:[rsi]
  405041:	outs   dx,DWORD PTR ds:[rsi]
  405042:	je     0x405064
  405044:	outs   dx,DWORD PTR ds:[rsi]
  405045:	outs   dx,BYTE PTR ds:[rsi]
  405046:	and    BYTE PTR [rcx+rbp*2+0x6e],cl
  40504a:	jne    0x4050c4
  40504c:	sub    al,0x20
  40504e:	imul   esp,DWORD PTR [rdi+0x6e],0x6e69726f
  405055:	and    BYTE PTR [eip+0x7379732d],ch        # 0x73b9c389
  40505c:	je     0x4050c3
  40505e:	ins    DWORD PTR es:[rdi],dx
  40505f:	and    BYTE PTR fs:[rcx+0x72],ah
  405063:	addr32 jne 0x4050d3
  405066:	outs   dx,BYTE PTR gs:[rsi]
  405068:	je     0x40506a
  40506a:	sub    eax,0x7265762d
  40506f:	(bad)  
  405070:	outs   dx,DWORD PTR ds:[rsi]
  405071:	jae    0x4050d8
  405073:	add    BYTE PTR [rax],al
  405075:	add    BYTE PTR [rax],al
  405077:	add    BYTE PTR [rip+0x3a732431],ah        # 0x3ab374ae
  40507d:	and    BYTE PTR [rbp+0x70],dh
  405080:	fs (bad) 
  405082:	je     0x4050e9
  405084:	and    BYTE PTR [rbp+0x6e],ah
  405087:	jbe    0x4050f2
  405089:	jb     0x4050fa
  40508b:	outs   dx,BYTE PTR ds:[rsi]
  40508c:	ins    DWORD PTR es:[rdi],dx
  40508d:	outs   dx,BYTE PTR gs:[rsi]
  40508f:	je     0x4050b1
  405091:	jbe    0x4050f4
  405093:	jb     0x4050fe
  405095:	(bad)  
  405096:	(bad)  
  405097:	ins    BYTE PTR es:[rdi],dx
  405098:	gs jae 0x4050bb
  40509b:	je     0x405105
  40509d:	(bad)  
  40509e:	je     0x4050c0
  4050a0:	ja     0x40510b
  4050a2:	ins    BYTE PTR es:[rdi],dx
  4050a3:	ins    BYTE PTR es:[rdi],dx
  4050a4:	and    BYTE PTR [rdx+0x65],ah
  4050a7:	and    BYTE PTR [rbx+0x65],dh
  4050aa:	je     0x4050cc
  4050ac:	outs   dx,WORD PTR ds:[rsi]
  4050ae:	jb     0x4050d0
  4050b0:	rex.R sub eax,0xa737542
  4050b6:	and    BYTE PTR [rax],ah
  4050b8:	and    BYTE PTR [rax],ah
  4050ba:	jae    0x405121
  4050bc:	jae    0x405131
  4050be:	imul   ebp,DWORD PTR [rdi+0x6e],0x72657320
  4050c5:	jbe    0x405130
  4050c7:	movsxd esp,DWORD PTR [rbp+0x73]
  4050ca:	or     cl,BYTE PTR [rdx]
  4050cc:	and    eax,0x20732431
  4050d1:	pop    rbx
  4050d2:	outs   dx,DWORD PTR ds:[rsi]
  4050d3:	jo     0x405149
  4050d5:	imul   ebp,DWORD PTR [rdi+0x6e],0x56205d73
  4050dc:	push   r10
  4050de:	pop    rbx
  4050df:	cmp    eax,0x5d4c4156
  4050e4:	and    BYTE PTR [rbx+0x56],bl
  4050e7:	push   r10
  4050e9:	xor    bl,BYTE PTR [rbx+0x3d]
  4050ec:	push   rsi
  4050ed:	rex.B
  4050ee:	rex.WR xor r11b,BYTE PTR [rbp+0x20]
  4050f2:	cs cs cs pop rbp
  4050f6:	or     ah,BYTE PTR [rax]
  4050f8:	and    BYTE PTR [rax],ah
  4050fa:	and    BYTE PTR [rcx+0x64],al
  4050fd:	and    BYTE PTR fs:[rbx+0x70],dh
  405101:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  405105:	imul   esp,DWORD PTR [rbp+0x64],0x72617620
  40510c:	imul   esp,DWORD PTR [rcx+0x62],0x2073656c
  405113:	je     0x405184
  405115:	and    BYTE PTR [rbp+rbp*1+0x42],al
  405119:	jne    0x40518e
  40511b:	and    BYTE PTR [rcx+0x63],ah
  40511e:	je     0x405189
  405120:	jbe    0x405183
  405122:	je     0x40518d
  405124:	outs   dx,DWORD PTR ds:[rsi]
  405125:	outs   dx,BYTE PTR ds:[rsi]
  405126:	and    BYTE PTR [rbp+0x6e],ah
  405129:	jbe    0x405194
  40512b:	jb     0x40519c
  40512d:	outs   dx,BYTE PTR ds:[rsi]
  40512e:	ins    DWORD PTR es:[rdi],dx
  40512f:	outs   dx,BYTE PTR gs:[rsi]
  405131:	je     0x405161
  405133:	or     ah,BYTE PTR [rax]
  405135:	and    BYTE PTR [rax],ah
  405137:	and    BYTE PTR [rcx+0x66],cl
  40513a:	and    BYTE PTR [rdi+0x6d],ch
  40513d:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x76202c64
  405145:	(bad)  
  405146:	ins    BYTE PTR es:[rdi],dx
  405147:	jne    0x4051ae
  405149:	jae    0x40516b
  40514b:	(bad)  
  40514c:	jb     0x4051b3
  40514e:	and    BYTE PTR [rcx+riz*2+0x6b],dh
  405152:	outs   dx,BYTE PTR gs:[rsi]
  405154:	and    BYTE PTR [rsi+0x72],ah
  405157:	outs   dx,DWORD PTR ds:[rsi]
  405158:	ins    DWORD PTR es:[rdi],dx
  405159:	and    BYTE PTR [rbx+0x75],ah
  40515c:	jb     0x4051d0
  40515e:	outs   dx,BYTE PTR gs:[rsi]
  405160:	je     0x405182
  405162:	outs   dx,BYTE PTR gs:[rsi]
  405164:	jbe    0x4051cf
  405166:	jb     0x4051d7
  405168:	outs   dx,BYTE PTR ds:[rsi]
  405169:	ins    DWORD PTR es:[rdi],dx
  40516a:	outs   dx,BYTE PTR gs:[rsi]
  40516c:	je     0x4051a9
  40516e:	or     ah,BYTE PTR [rax]
  405170:	and    BYTE PTR [rax],ah
  405172:	and    BYTE PTR [rsi+0x61],dh
  405175:	jb     0x4051e0
  405177:	(bad)  
  405178:	(bad)  
  405179:	ins    BYTE PTR es:[rdi],dx
  40517a:	gs jae 0x40519d
  40517d:	outs   dx,BYTE PTR ds:[rsi]
  40517e:	outs   dx,DWORD PTR ds:[rsi]
  40517f:	je     0x4051a1
  405181:	outs   dx,WORD PTR ds:[rsi]
  405183:	jne    0x4051f3
  405185:	and    BYTE PTR fs:[rcx+0x6e],ch
  405189:	and    BYTE PTR [rax+rbp*2+0x65],dh
  40518d:	and    BYTE PTR [rbp+0x6e],ah
  405190:	jbe    0x4051fb
  405192:	jb     0x405203
  405194:	outs   dx,BYTE PTR ds:[rsi]
  405195:	ins    DWORD PTR es:[rdi],dx
  405196:	outs   dx,BYTE PTR gs:[rsi]
  405198:	je     0x4051ba
  40519a:	(bad)  
  40519b:	jb     0x405202
  40519d:	and    BYTE PTR [rcx+0x67],ch
  4051a0:	outs   dx,BYTE PTR ds:[rsi]
  4051a1:	outs   dx,DWORD PTR ds:[rsi]
  4051a2:	jb     0x405209
  4051a4:	fs or  ah,BYTE PTR cs:[rip+0x20732431]        # 0x20b375dd
  4051ac:	sub    eax,0x6c6c612d
  4051b1:	or     ah,BYTE PTR [rax]
  4051b3:	and    BYTE PTR [rax],ah
  4051b5:	and    BYTE PTR [rcx+0x64],al
  4051b8:	and    BYTE PTR fs:[rbp+0x6e],ah
  4051bc:	je     0x405227
  4051be:	jb     0x405225
  4051c0:	and    BYTE PTR [rbx+0x75],ah
  4051c3:	jb     0x405237
  4051c5:	outs   dx,BYTE PTR gs:[rsi]
  4051c7:	je     0x4051e9
  4051c9:	outs   dx,BYTE PTR gs:[rsi]
  4051cb:	jbe    0x405236
  4051cd:	jb     0x40523e
  4051cf:	outs   dx,BYTE PTR ds:[rsi]
  4051d0:	ins    DWORD PTR es:[rdi],dx
  4051d1:	outs   dx,BYTE PTR gs:[rsi]
  4051d3:	je     0x4051f5
  4051d5:	je     0x405246
  4051d7:	and    BYTE PTR [rbp+rbp*1+0x42],al
  4051db:	jne    0x405250
  4051dd:	and    BYTE PTR [rcx+0x63],ah
  4051e0:	je     0x40524b
  4051e2:	jbe    0x405245
  4051e4:	je     0x40524f
  4051e6:	outs   dx,DWORD PTR ds:[rsi]
  4051e7:	outs   dx,BYTE PTR ds:[rsi]
  4051e8:	or     ah,BYTE PTR [rax]
  4051ea:	and    BYTE PTR [rax],ah
  4051ec:	and    BYTE PTR [rbp+0x6e],ah
  4051ef:	jbe    0x40525a
  4051f1:	jb     0x405262
  4051f3:	outs   dx,BYTE PTR ds:[rsi]
  4051f4:	ins    DWORD PTR es:[rdi],dx
  4051f5:	outs   dx,BYTE PTR gs:[rsi]
  4051f7:	je     0x405227
  4051f9:	or     cl,BYTE PTR [rdx]
  4051fb:	rex.WRXB jo 0x405272
  4051fe:	imul   ebp,DWORD PTR [rdi+0x6e],0xa0a3a73
  405205:	sub    eax,0x6c6c612d
  40520a:	or     ah,BYTE PTR [rax]
  40520c:	and    BYTE PTR [rax],ah
  40520e:	and    BYTE PTR [rbp+0x70],dl
  405211:	ins    BYTE PTR es:[rdi],dx
  405212:	outs   dx,DWORD PTR ds:[rsi]
  405213:	(bad)  
  405214:	and    BYTE PTR fs:[rcx+0x6c],ah
  405218:	ins    BYTE PTR es:[rdi],dx
  405219:	and    BYTE PTR [rbp+0x6e],ah
  40521c:	jbe    0x405287
  40521e:	jb     0x40528f
  405220:	outs   dx,BYTE PTR ds:[rsi]
  405221:	ins    DWORD PTR es:[rdi],dx
  405222:	outs   dx,BYTE PTR gs:[rsi]
  405224:	je     0x405246
  405226:	jbe    0x405289
  405228:	jb     0x405293
  40522a:	(bad)  
  40522b:	(bad)  
  40522c:	ins    BYTE PTR es:[rdi],dx
  40522d:	gs jae 0x40525e
  405230:	or     ch,BYTE PTR [rip+0x7379732d]        # 0x73b9c563
  405236:	je     0x40529d
  405238:	ins    DWORD PTR es:[rdi],dx
  405239:	or     ah,BYTE PTR fs:[rax]
  40523c:	and    BYTE PTR [rax],ah
  40523e:	and    BYTE PTR [rcx+0x6c],al
  405241:	jae    0x4052b2
  405243:	and    BYTE PTR [rbp+0x70],dh
  405246:	fs (bad) 
  405248:	je     0x4052af
  40524a:	and    BYTE PTR [rax+rbp*2+0x65],dh
  40524e:	and    BYTE PTR [rdi],ah
  405250:	jae    0x4052cb
  405252:	jae    0x4052c8
  405254:	gs ins DWORD PTR es:[rdi],dx
  405256:	and    BYTE PTR fs:[rip+0x6573752d],ch        # 0x65b3c78a
  40525d:	jb     0x405286
  40525f:	and    BYTE PTR [rbp+0x6e],ah
  405262:	jbe    0x4052cd
  405264:	jb     0x4052d5
  405266:	outs   dx,BYTE PTR ds:[rsi]
  405267:	ins    DWORD PTR es:[rdi],dx
  405268:	outs   dx,BYTE PTR gs:[rsi]
  40526a:	je     0x405276
  40526c:	and    BYTE PTR [rax],ah
  40526e:	and    BYTE PTR [rax],ah
  405270:	imul   esp,DWORD PTR [rsi+0x20],0x73736f70
  405277:	imul   esp,DWORD PTR [rdx+0x6c],0x2d0a2e65
  40527e:	sub    eax,0x62726576
  405283:	outs   dx,DWORD PTR ds:[rsi]
  405284:	jae    0x4052eb
  405286:	or     ah,BYTE PTR [rax]
  405288:	and    BYTE PTR [rax],ah
  40528a:	and    BYTE PTR [rcx+riz*2+0x6c],dl
  40528e:	imul   esp,DWORD PTR [rax],0x61
  405291:	(bad)  
  405292:	outs   dx,DWORD PTR ds:[rsi]
  405293:	jne    0x405309
  405295:	and    BYTE PTR [rcx+0x74],ch
  405298:	or     al,BYTE PTR cs:[rax]
  40529b:	add    BYTE PTR [rax],al
  40529d:	add    BYTE PTR [rax],al
  40529f:	add    BYTE PTR [rip+0x65203a73],ah        # 0x65608d18
  4052a5:	jb     0x405319
  4052a7:	outs   dx,DWORD PTR ds:[rsi]
  4052a8:	jb     0x4052e4
  4052aa:	and    BYTE PTR [rip+0x6c6c612d],ch        # 0x6cacb3dd
  4052b0:	and    BYTE PTR [rbx+0x61],ah
  4052b3:	outs   dx,BYTE PTR ds:[rsi]
  4052b4:	outs   dx,BYTE PTR ds:[rsi]
  4052b5:	outs   dx,DWORD PTR ds:[rsi]
  4052b6:	je     0x4052d8
  4052b8:	(bad)  
  4052b9:	and    BYTE PTR gs:[rbp+0x73],dh
  4052bd:	gs and BYTE PTR fs:[rdi+0x69],dh
  4052c2:	je     0x40532c
  4052c4:	and    BYTE PTR [rsi+0x41],dl
  4052c7:	push   rdx
  4052c8:	and    BYTE PTR [rdi+0x72],ch
  4052cb:	and    BYTE PTR [rsi+0x41],dl
  4052ce:	push   rdx
  4052cf:	cmp    eax,0x204c4156
  4052d4:	(bad)  
  4052d5:	jb     0x40533e
  4052d7:	jne    0x405346
  4052d9:	outs   dx,BYTE PTR gs:[rsi]
  4052db:	je     0x405350
  4052dd:	or     al,BYTE PTR [rax]
  4052df:	add    BYTE PTR [rip+0x65203a73],ah        # 0x65608d58
  4052e5:	jb     0x405359
  4052e7:	outs   dx,DWORD PTR ds:[rsi]
  4052e8:	jb     0x405324
  4052ea:	and    BYTE PTR [rbp+0x6e],dh
  4052ed:	(bad)  
  4052ee:	(bad)  
  4052ef:	ins    BYTE PTR es:[rdi],dx
  4052f0:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  4052f5:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4052f8:	outs   dx,BYTE PTR ds:[rsi]
  4052f9:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x74]
  4052fe:	outs   dx,DWORD PTR ds:[rsi]
  4052ff:	and    BYTE PTR [rbp+rbp*1+0x42],al
  405303:	jne    0x405378
  405305:	cmp    ah,BYTE PTR [rax]
  405307:	and    eax,0x55000a73
  40530c:	jo     0x405372
  40530e:	(bad)  
  40530f:	je     0x405376
  405311:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
  405316:	(bad)  
  405317:	je     0x405382
  405319:	outs   dx,DWORD PTR ds:[rsi]
  40531a:	outs   dx,BYTE PTR ds:[rsi]
  40531b:	rex.RB outs dx,BYTE PTR ds:[rsi]
  40531d:	jbe    0x405388
  40531f:	jb     0x405390
  405321:	outs   dx,BYTE PTR ds:[rsi]
  405322:	ins    DWORD PTR es:[rdi],dx
  405323:	outs   dx,BYTE PTR gs:[rsi]
  405325:	je     0x405327
  405327:	outs   dx,DWORD PTR ds:[rsi]
  405328:	jb     0x405391
  40532a:	cs data16 jb 0x405393
  40532e:	gs fs gs jae 0x40539e
  405333:	je     0x4053a4
  405335:	jo     0x405365
  405337:	rex.R
  405338:	rex.X jne 0x4053ae
  40533b:	add    BYTE PTR [rdi],ch
  40533d:	outs   dx,DWORD PTR ds:[rsi]
  40533e:	jb     0x4053a7
  405340:	(bad)  
  405341:	data16 jb 0x4053a9
  405344:	gs fs gs jae 0x4053b4
  405349:	je     0x4053ba
  40534b:	jo     0x40537c
  40534d:	rex.R
  40534e:	rex.X jne 0x4053c4
  405351:	add    BYTE PTR [rbp+0x70],dh
  405354:	fs (bad) 
  405356:	je     0x4053c1
  405358:	outs   dx,BYTE PTR ds:[rsi]
  405359:	and    BYTE PTR [ebp+0x6e],ah
  40535d:	jbe    0x4053c8
  40535f:	jb     0x4053d0
  405361:	outs   dx,BYTE PTR ds:[rsi]
  405362:	ins    DWORD PTR es:[rdi],dx
  405363:	outs   dx,BYTE PTR gs:[rsi]
  405365:	je     0x405367
  405367:	jnp    0x4053dc
  405369:	jae    0x4053e8
  40536b:	add    BYTE PTR [rax],al
  40536d:	add    BYTE PTR [rax],al
  40536f:	add    BYTE PTR [rip+0x77203a73],ah        # 0x77608de8
  405375:	(bad)  
  405376:	jb     0x4053e6
  405378:	imul   ebp,DWORD PTR [rsi+0x67],0x6e65203a
  40537f:	jbe    0x4053ea
  405381:	jb     0x4053f2
  405383:	outs   dx,BYTE PTR ds:[rsi]
  405384:	ins    DWORD PTR es:[rdi],dx
  405385:	outs   dx,BYTE PTR gs:[rsi]
  405387:	je     0x4053a9
  405389:	jbe    0x4053ec
  40538b:	jb     0x4053f6
  40538d:	(bad)  
  40538e:	(bad)  
  40538f:	ins    BYTE PTR es:[rdi],dx
  405390:	and    BYTE PTR gs:[rsi+0x6f],ch
  405394:	je     0x4053b6
  405396:	push   rbp
  405397:	push   rsp
  405398:	rex.RX sub eax,0x25203a38
  40539e:	jae    0x4053aa
	...
  4053a8:	and    eax,0x77203a73
  4053ad:	(bad)  
  4053ae:	jb     0x40541e
  4053b0:	imul   ebp,DWORD PTR [rsi+0x67],0x6e65203a
  4053b7:	jbe    0x405422
  4053b9:	jb     0x40542a
  4053bb:	outs   dx,BYTE PTR ds:[rsi]
  4053bc:	ins    DWORD PTR es:[rdi],dx
  4053bd:	outs   dx,BYTE PTR gs:[rsi]
  4053bf:	je     0x4053e1
  4053c1:	jbe    0x405424
  4053c3:	jb     0x40542e
  4053c5:	(bad)  
  4053c6:	(bad)  
  4053c7:	ins    BYTE PTR es:[rdi],dx
  4053c8:	and    BYTE PTR gs:[rdi+0x69],dh
  4053cc:	je     0x405436
  4053ce:	outs   dx,DWORD PTR ds:[rsi]
  4053cf:	jne    0x405445
  4053d1:	and    BYTE PTR [rdi],ah
  4053d3:	cmp    eax,0x25203a27
  4053d8:	jae    0x4053e4
  4053da:	add    BYTE PTR [rax],al
  4053dc:	add    BYTE PTR [rax],al
  4053de:	add    BYTE PTR [rax],al
  4053e0:	and    eax,0x77203a73
  4053e5:	(bad)  
  4053e6:	jb     0x405456
  4053e8:	imul   ebp,DWORD PTR [rsi+0x67],0x6e65203a
  4053ef:	jbe    0x40545a
  4053f1:	jb     0x405462
  4053f3:	outs   dx,BYTE PTR ds:[rsi]
  4053f4:	ins    DWORD PTR es:[rdi],dx
  4053f5:	outs   dx,BYTE PTR gs:[rsi]
  4053f7:	je     0x405419
  4053f9:	jbe    0x40545c
  4053fb:	jb     0x405466
  4053fd:	(bad)  
  4053fe:	(bad)  
  4053ff:	ins    BYTE PTR es:[rdi],dx
  405400:	and    BYTE PTR gs:[rsi+0x6f],ch
  405404:	je     0x405426
  405406:	push   rbp
  405407:	push   rsp
  405408:	rex.RX sub eax,0x25203a38
  40540e:	jae    0x40544d
  405410:	and    eax,0x73000a73
  405415:	gs je  0x40548c
  405418:	imul   ebp,DWORD PTR [rsi+0x67],0x3d732520
  40541f:	and    eax,0x73
  405424:	add    BYTE PTR [rax],al
  405426:	add    BYTE PTR [rax],al
  405428:	and    eax,0x65203a73
  40542d:	jb     0x4054a1
  40542f:	outs   dx,DWORD PTR ds:[rsi]
  405430:	jb     0x405452
  405432:	jae    0x405499
  405434:	outs   dx,BYTE PTR ds:[rsi]
  405435:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x206f7420
  40543d:	fs (bad) 
  40543f:	jne    0x4054b4
  405441:	sub    eax,0x6d656164
  405446:	outs   dx,DWORD PTR ds:[rsi]
  405447:	outs   dx,BYTE PTR ds:[rsi]
  405448:	cmp    ah,BYTE PTR [rax]
  40544a:	and    eax,0x25203a73
  40544f:	jae    0x40545b
  405451:	add    BYTE PTR [rax],al
  405453:	add    BYTE PTR [rax],al
  405455:	add    BYTE PTR [rax],al
  405457:	add    BYTE PTR [rip+0x65203a73],ah        # 0x65608ed0
  40545d:	jb     0x4054d1
  40545f:	outs   dx,DWORD PTR ds:[rsi]
  405460:	jb     0x405482
  405462:	data16 jb 0x4054d4
  405465:	ins    DWORD PTR es:[rdi],dx
  405466:	and    BYTE PTR [rdx+riz*2+0x75],ah
  40546a:	jae    0x405499
  40546c:	fs (bad) 
  40546e:	gs ins DWORD PTR es:[rdi],dx
  405470:	outs   dx,DWORD PTR ds:[rsi]
  405471:	outs   dx,BYTE PTR ds:[rsi]
  405472:	cmp    ah,BYTE PTR [rax]
  405474:	and    eax,0x25203a73
  405479:	jae    0x405485
  40547b:	add    BYTE PTR [rax],al
  40547d:	add    BYTE PTR [rax],al
  40547f:	add    BYTE PTR [rdi+0x4f],cl
  405482:	rex.WRB and BYTE PTR [r15+0x68],r14b
  405486:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0xa7325
  40548e:	add    BYTE PTR [rax],al
  405490:	add    BYTE PTR [rbp+0x40],0x0
  405497:	add    BYTE PTR [rax+0x4080],al
  40549d:	add    BYTE PTR [rax],al
  40549f:	add    BYTE PTR [rax+0x22],al
  4054a2:	add    BYTE PTR [rax],al
	...
  4054ad:	add    BYTE PTR [rax],al
  4054af:	add    BYTE PTR [rcx+0x72],al
  4054b2:	addr32 jne 0x405522
  4054b5:	outs   dx,BYTE PTR gs:[rsi]
  4054b7:	je     0x4054d9
  4054b9:	outs   dx,DWORD PTR fs:[rsi]
  4054bb:	ins    DWORD PTR es:[rdi],dx
  4054bc:	(bad)  
  4054bd:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  4054c4:	jb     0x4054e6
  4054c6:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  4054ca:	rex.B
  4054cb:	rex.WB
  4054cc:	rex.WRX sub QWORD PTR [rax],r8
  4054cf:	rex.B jb 0x405539
  4054d2:	jne    0x405541
  4054d4:	outs   dx,BYTE PTR gs:[rsi]
  4054d6:	je     0x4054f8
  4054d8:	jae    0x405543
  4054da:	outs   dx,BYTE PTR ds:[rsi]
  4054db:	addr32 jne 0x40554a
  4054de:	(bad)  
  4054df:	jb     0x40554a
  4054e1:	je     0x40555c
  4054e3:	and    BYTE PTR [rax],ch
  4054e5:	push   rbx
  4054e6:	rex.WB
  4054e7:	rex.RXB
  4054e8:	rex.WRX sub QWORD PTR [rax],r8
  4054eb:	add    BYTE PTR [rax],al
  4054ed:	add    BYTE PTR [rax],al
  4054ef:	add    BYTE PTR [rdi+0x76],cl
  4054f2:	gs jb  0x40555b
  4054f5:	ins    BYTE PTR es:[rdi],dx
  4054f6:	outs   dx,DWORD PTR ds:[rsi]
  4054f7:	ja     0x405519
  4054f9:	jb     0x40555c
  4054fb:	outs   dx,BYTE PTR ds:[rsi]
  4054fc:	and    BYTE PTR gs:[ebp+0x72],ah
  405501:	jb     0x405572
  405503:	jb     0x405525
  405505:	sub    BYTE PTR [rdi+0x56],cl
  405508:	rex.RB push r10
  40550a:	rex.RX
  40550b:	rex.WR
  40550c:	rex.WRXB push r15
  40550e:	sub    DWORD PTR [rax],eax
  405510:	push   rax
  405511:	(bad)  
  405512:	jb     0x405588
  405514:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  40551b:	jae    0x40553d
  40551d:	outs   dx,DWORD PTR ds:[rsi]
  40551e:	data16 and BYTE PTR [rbx+0x69],dh
  405522:	outs   dx,BYTE PTR ds:[esi]
  405524:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  40552b:	and    BYTE PTR gs:[rax],ch
  40552e:	push   rax
  40552f:	rex.WR
  405530:	rex.WRXB push r11
  405532:	push   rbx
  405533:	sub    DWORD PTR [rax],eax
  405535:	add    BYTE PTR [rax],al
  405537:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  40553b:	(bad)  
  40553c:	ins    BYTE PTR es:[rdi],dx
  40553d:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  405541:	jae    0x405563
  405543:	outs   dx,DWORD PTR ds:[rsi]
  405544:	data16 and BYTE PTR [rbx+0x69],dh
  405548:	outs   dx,BYTE PTR ds:[esi]
  40554a:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  405551:	and    BYTE PTR gs:[rax],ch
  405554:	push   rsp
  405555:	rex.WR
  405556:	rex.WRXB push r11
  405558:	push   rbx
  405559:	sub    DWORD PTR [rax],eax
  40555b:	add    BYTE PTR [rax],al
  40555d:	add    BYTE PTR [rax],al
  40555f:	add    BYTE PTR [rax+rbp*2+0x65],dl
  405563:	and    BYTE PTR [rdx+0x65],dh
  405566:	jae    0x4055dd
  405568:	ins    BYTE PTR es:[rdi],dx
  405569:	je     0x40558b
  40556b:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  405572:	jae    0x4055e1
  405574:	(bad)  
  405575:	ins    BYTE PTR es:[rdi],dx
  405576:	ins    BYTE PTR es:[rdi],dx
  405577:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40557b:	(bad)  
  40557c:	and    BYTE PTR gs:[rdx+0x65],dh
  405580:	jo     0x4055f4
  405582:	gs jae 0x4055ea
  405585:	outs   dx,BYTE PTR ds:[rsi]
  405586:	je     0x4055ed
  405588:	and    BYTE PTR fs:[rax],ch
  40558b:	push   rbp
  40558c:	rex.WRX
  40558d:	rex.R
  40558e:	rex.RB push r10
  405590:	rex.RX
  405591:	rex.WR
  405592:	rex.WRXB push r15
  405594:	sub    DWORD PTR [rax],eax
  405596:	push   rbp
  405597:	outs   dx,BYTE PTR ds:[rsi]
  405598:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40559c:	outs   dx,BYTE PTR ds:[rsi]
  40559d:	and    BYTE PTR [rbp+0x72],ah
  4055a0:	jb     0x405611
  4055a2:	jb     0x4055a4
  4055a4:	add    BYTE PTR [rax],al
  4055a6:	add    BYTE PTR [rax],al
  4055a8:	pop    rdi
  4055a9:	ins    DWORD PTR es:[rdi],dx
  4055aa:	(bad)  
  4055ab:	je     0x405615
  4055ad:	gs jb  0x405622
  4055b0:	sub    BYTE PTR [rcx],ch
  4055b2:	cmp    ah,BYTE PTR [rax]
  4055b4:	and    eax,0x6e692073
  4055b9:	and    BYTE PTR [rip+0x67252873],ah        # 0x67657e32
  4055bf:	sub    al,0x20
  4055c1:	and    eax,0x20202967
  4055c6:	sub    BYTE PTR [rdx+0x65],dh
  4055c9:	je     0x405641
  4055cb:	(bad)  
  4055cc:	ins    BYTE PTR es:[rdi],dx
  4055cd:	cmp    eax,0xa296725
  4055d2:	add    BYTE PTR [rax],al
  4055d4:	cmp    al,0xce
  4055d6:	(bad)  
  4055d7:	(bad)  
  4055d8:	jge    0x4055a7
  4055da:	(bad)  
  4055db:	(bad)  
  4055dc:	in     al,dx
  4055dd:	int    0xff
  4055df:	(bad)  
  4055e0:	cld    
  4055e1:	int    0xff
  4055e3:	dec    DWORD PTR [rsi+rcx*8]
  4055e6:	(bad)  
  4055e7:	call   FWORD PTR [rsi+rcx*8]
  4055ea:	(bad)  
  4055eb:	jmp    FWORD PTR [rsi+rcx*8]
  4055ee:	(bad)  
  4055ef:	dec    DWORD PTR [rbp+0x69]
  4055f2:	outs   dx,BYTE PTR ds:[rsi]
  4055f3:	addr32 ja 0x405623
  4055f6:	ja     0x40562e
  4055f8:	xor    al,0x20
  4055fa:	jb     0x405671
  4055fc:	outs   dx,BYTE PTR ds:[rsi]
  4055fd:	je     0x405668
  4055ff:	ins    DWORD PTR es:[rdi],dx
  405600:	and    BYTE PTR gs:[rsi+0x61],ah
  405604:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  40560c:	add    BYTE PTR [rax],al
  40560e:	add    BYTE PTR [rax],al
  405610:	rex.B
  405611:	fs fs jb 0x40567a
  405615:	jae    0x40568a
  405617:	and    BYTE PTR [rip+0x61682070],ah        # 0x61a8768d
  40561d:	jae    0x40563f
  40561f:	outs   dx,BYTE PTR ds:[rsi]
  405620:	outs   dx,DWORD PTR ds:[rsi]
  405621:	and    BYTE PTR [rcx+0x6d],ch
  405624:	(bad)  
  405625:	addr32 gs sub eax,0x74636573
  40562c:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  405633:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40563a:	jne    0x4056a1
  40563c:	jb     0x4056b7
  40563e:	and    BYTE PTR [rsi+0x61],ah
  405641:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  405649:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a276b3
  40564f:	je     0x4056b6
  405651:	jae    0x405673
  405653:	(bad)  
  405654:	je     0x405676
  405656:	(bad)  
  405657:	fs fs jb 0x4056c0
  40565b:	jae    0x4056d0
  40565d:	and    BYTE PTR [rip+0x70],ah        # 0x4056d3
  405663:	add    BYTE PTR [rax],al
  405665:	add    BYTE PTR [rax],al
  405667:	add    BYTE PTR [rax],ah
  405669:	and    BYTE PTR [rsi+0x69],dl
  40566c:	jb     0x4056e2
  40566e:	jne    0x4056d1
  405670:	ins    BYTE PTR es:[rdi],dx
  405671:	push   rax
  405672:	jb     0x4056e3
  405674:	je     0x4056db
  405676:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  40567a:	(bad)  
  40567b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  405683:	push   0x646f6320
  405688:	and    BYTE PTR gs:[rax],dh
  40568b:	js     0x4056b2
  40568d:	js     0x40568f
  40568f:	add    BYTE PTR [rax],ah
  405691:	and    BYTE PTR [rbp+0x6e],dl
  405694:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  405698:	outs   dx,BYTE PTR ds:[rsi]
  405699:	and    BYTE PTR [rax+0x73],dh
  40569c:	gs jne 0x405703
  40569f:	outs   dx,DWORD PTR ds:[rsi]
  4056a0:	and    BYTE PTR [rdx+0x65],dh
  4056a3:	ins    BYTE PTR es:[rdi],dx
  4056a4:	outs   dx,DWORD PTR ds:[rsi]
  4056a5:	movsxd esp,DWORD PTR [rcx+0x74]
  4056a8:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  4056af:	je     0x405720
  4056b1:	movsxd ebp,DWORD PTR [rdi+0x6c]
  4056b4:	and    BYTE PTR [rsi+0x65],dh
  4056b7:	jb     0x40572c
  4056b9:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  4056c0:	or     al,BYTE PTR [rax]
  4056c2:	add    BYTE PTR [rax],al
  4056c4:	add    BYTE PTR [rax],al
  4056c6:	add    BYTE PTR [rax],al
  4056c8:	and    BYTE PTR [rax],ah
  4056ca:	push   rbp
  4056cb:	outs   dx,BYTE PTR ds:[rsi]
  4056cc:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4056d0:	outs   dx,BYTE PTR ds:[rsi]
  4056d1:	and    BYTE PTR [rax+0x73],dh
  4056d4:	gs jne 0x40573b
  4056d7:	outs   dx,DWORD PTR ds:[rsi]
  4056d8:	and    BYTE PTR [rdx+0x65],dh
  4056db:	ins    BYTE PTR es:[rdi],dx
  4056dc:	outs   dx,DWORD PTR ds:[rsi]
  4056dd:	movsxd esp,DWORD PTR [rcx+0x74]
  4056e0:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  4056e7:	and    BYTE PTR [rbx+0x69],dh
  4056ea:	jp     0x405751
  4056ec:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4a8556
	...
  4056fe:	add    BYTE PTR [rax],al
  405700:	cs jo  0x405767
  405703:	(bad)  
  405704:	je     0x405767
	...
  40570e:	add    BYTE PTR [rax],al
  405710:	rex
  405711:	rex
  405712:	add    BYTE PTR [rax],al
	...
  40571d:	add    BYTE PTR [rax],al
  40571f:	add    BYTE PTR [rax+0x40],dl
  405722:	add    BYTE PTR [rax],al
	...
  40572d:	add    BYTE PTR [rax],al
  40572f:	add    al,al
  405731:	xor    eax,0x40
	...
  40573e:	add    BYTE PTR [rax],al
  405740:	sbb    BYTE PTR [rax+rax*2+0x0],0x0
	...
  40574d:	add    BYTE PTR [rax],al
  40574f:	add    BYTE PTR [rax+0x405c],al
	...
  40575d:	add    BYTE PTR [rax],al
  40575f:	add    BYTE PTR [rax+0x4054],ah
	...
  405771:	add    BYTE PTR [rax+0x0],al
	...
  405780:	rcl    BYTE PTR [rbx+0x40],1
	...
  40578e:	add    BYTE PTR [rax],al
  405790:	clc    
  405791:	xchg   ebx,eax
  405792:	add    BYTE PTR [rax],al
	...
  40579d:	add    BYTE PTR [rax],al
  40579f:	add    BYTE PTR [rax],dl
  4057a1:	xchg   esp,eax
  4057a2:	add    BYTE PTR [rax],al
	...
  4057ad:	add    BYTE PTR [rax],al
  4057af:	add    BYTE PTR [rax],ah
  4057b1:	xchg   esp,eax
  4057b2:	add    BYTE PTR [rax],al
	...
  4057bd:	add    BYTE PTR [rax],al
  4057bf:	add    BYTE PTR [rax],bh
  4057c1:	xchg   esp,eax
  4057c2:	add    BYTE PTR [rax],al
	...
  4057cd:	add    BYTE PTR [rax],al
  4057cf:	add    al,al
  4057d1:	xchg   BYTE PTR [rax+0x0],al
	...
  4057e0:	sub    BYTE PTR [rdx+0x40],cl
	...
  4057ee:	add    BYTE PTR [rax],al
  4057f0:	and    BYTE PTR [rdx+0x40],cl
	...
  4057fe:	add    BYTE PTR [rax],al
  405800:	adc    BYTE PTR [rdx+0x40],cl
	...
  40580e:	add    BYTE PTR [rax],al
  405810:	sbb    BYTE PTR [rdx+0x40],cl
	...
  40581e:	add    BYTE PTR [rax],al
  405820:	add    BYTE PTR [rax+0x40],ah
	...
  40582e:	add    BYTE PTR [rax],al
  405830:	adc    BYTE PTR [rax+0x40],ah
	...
  40583e:	add    BYTE PTR [rax],al
  405840:	sbb    BYTE PTR [rax+0x40],ah
	...
  40584e:	add    BYTE PTR [rax],al
  405850:	xor    BYTE PTR [rax+0x40],ah
	...
  40585e:	add    BYTE PTR [rax],al
  405860:	push   rax
  405861:	add    BYTE PTR [rax+0x0],0x0
	...
  40586d:	add    BYTE PTR [rax],al
  40586f:	add    BYTE PTR [rax+0x4086],dl
	...
  40587d:	add    BYTE PTR [rax],al
  40587f:	add    al,dl
  405881:	sub    eax,DWORD PTR [rax+0x0]
	...
  405890:	and    BYTE PTR [rbx],ah
  405892:	add    BYTE PTR [rax],al
	...
  40589d:	add    BYTE PTR [rax],al
  40589f:	add    BYTE PTR [rax-0x7a],al
  4058a2:	add    BYTE PTR [rax],al
	...
  4058ad:	add    BYTE PTR [rax],al
  4058af:	add    BYTE PTR [rax-0x7a],dh
  4058b2:	add    BYTE PTR [rax],al
	...
  4058bd:	add    BYTE PTR [rax],al
  4058bf:	add    BYTE PTR [rax-0x80],ah
  4058c2:	add    BYTE PTR [rax],al
	...
  4058cd:	add    BYTE PTR [rax],al
  4058cf:	add    BYTE PTR [rax-0x7a],bl
  4058d2:	add    BYTE PTR [rax],al
	...
  4058dd:	add    BYTE PTR [rax],al
  4058df:	add    BYTE PTR [rsi+rax*4+0x40],dl
	...
  4058ef:	add    BYTE PTR [rax-0x7a],dl
  4058f2:	add    BYTE PTR [rax],al
	...
  4058fd:	add    BYTE PTR [rax],al
  4058ff:	add    BYTE PTR [rdi+0x43],al
  405902:	rex.XB cmp spl,BYTE PTR [r8]
  405905:	sub    BYTE PTR [rdi+0x4e],al
  405908:	push   rbp
  405909:	sub    DWORD PTR [rax],esp
  40590b:	xor    al,0x2e
  40590d:	cmp    DWORD PTR [rsi],ebp
  40590f:	xor    al,0x0
	...
  40591d:	add    BYTE PTR [rax],al
  40591f:	add    BYTE PTR [rdi+0x43],al
  405922:	rex.XB cmp spl,BYTE PTR [r8]
  405925:	sub    BYTE PTR [rdi+0x4e],al
  405928:	push   rbp
  405929:	sub    DWORD PTR [rax],esp
  40592b:	xor    al,0x2e
  40592d:	cmp    DWORD PTR [rsi],ebp
  40592f:	xor    al,0x0
	...
  40593d:	add    BYTE PTR [rax],al
  40593f:	add    BYTE PTR [rdi+0x43],al
  405942:	rex.XB cmp spl,BYTE PTR [r8]
  405945:	sub    BYTE PTR [rdi+0x4e],al
  405948:	push   rbp
  405949:	sub    DWORD PTR [rax],esp
  40594b:	xor    al,0x2e
  40594d:	cmp    DWORD PTR [rsi],ebp
  40594f:	xor    al,0x0
	...
  40595d:	add    BYTE PTR [rax],al
  40595f:	add    BYTE PTR [rdi+0x43],al
  405962:	rex.XB cmp spl,BYTE PTR [r8]
  405965:	sub    BYTE PTR [rdi+0x4e],al
  405968:	push   rbp
  405969:	sub    DWORD PTR [rax],esp
  40596b:	xor    al,0x2e
  40596d:	cmp    DWORD PTR [rsi],ebp
  40596f:	xor    al,0x0
	...
  40597d:	add    BYTE PTR [rax],al
  40597f:	add    BYTE PTR [rdi+0x43],al
  405982:	rex.XB cmp spl,BYTE PTR [r8]
  405985:	sub    BYTE PTR [rdi+0x4e],al
  405988:	push   rbp
  405989:	sub    DWORD PTR [rax],esp
  40598b:	xor    al,0x2e
  40598d:	cmp    DWORD PTR [rsi],ebp
  40598f:	xor    al,0x0
	...
  40599d:	add    BYTE PTR [rax],al
  40599f:	add    BYTE PTR [rdi+0x43],al
  4059a2:	rex.XB cmp spl,BYTE PTR [r8]
  4059a5:	sub    BYTE PTR [rdi+0x4e],al
  4059a8:	push   rbp
  4059a9:	sub    DWORD PTR [rax],esp
  4059ab:	xor    al,0x2e
  4059ad:	cmp    DWORD PTR [rsi],ebp
  4059af:	xor    al,0x0
	...
  4059bd:	add    BYTE PTR [rax],al
  4059bf:	add    BYTE PTR [rdi+0x43],al
  4059c2:	rex.XB cmp spl,BYTE PTR [r8]
  4059c5:	sub    BYTE PTR [rdi+0x4e],al
  4059c8:	push   rbp
  4059c9:	sub    DWORD PTR [rax],esp
  4059cb:	xor    al,0x2e
  4059cd:	cmp    DWORD PTR [rsi],ebp
  4059cf:	xor    al,0x0
	...
  4059dd:	add    BYTE PTR [rax],al
  4059df:	add    BYTE PTR [rdi+0x43],al
  4059e2:	rex.XB cmp spl,BYTE PTR [r8]
  4059e5:	sub    BYTE PTR [rdi+0x4e],al
  4059e8:	push   rbp
  4059e9:	sub    DWORD PTR [rax],esp
  4059eb:	xor    al,0x2e
  4059ed:	cmp    DWORD PTR [rsi],ebp
  4059ef:	xor    al,0x0
	...
  4059fd:	add    BYTE PTR [rax],al
  4059ff:	add    BYTE PTR [rdi+0x43],al
  405a02:	rex.XB cmp spl,BYTE PTR [r8]
  405a05:	sub    BYTE PTR [rdi+0x4e],al
  405a08:	push   rbp
  405a09:	sub    DWORD PTR [rax],esp
  405a0b:	xor    al,0x2e
  405a0d:	cmp    DWORD PTR [rsi],ebp
  405a0f:	xor    al,0x0
	...
  405a1d:	add    BYTE PTR [rax],al
  405a1f:	add    BYTE PTR [rdi+0x43],al
  405a22:	rex.XB cmp spl,BYTE PTR [r8]
  405a25:	sub    BYTE PTR [rdi+0x4e],al
  405a28:	push   rbp
  405a29:	sub    DWORD PTR [rax],esp
  405a2b:	xor    al,0x2e
  405a2d:	cmp    DWORD PTR [rsi],ebp
  405a2f:	xor    al,0x0
	...
  405a3d:	add    BYTE PTR [rax],al
  405a3f:	add    BYTE PTR [rdi+0x43],al
  405a42:	rex.XB cmp spl,BYTE PTR [r8]
  405a45:	sub    BYTE PTR [rdi+0x4e],al
  405a48:	push   rbp
  405a49:	sub    DWORD PTR [rax],esp
  405a4b:	xor    al,0x2e
  405a4d:	cmp    DWORD PTR [rsi],ebp
  405a4f:	xor    al,0x0
	...
  405a5d:	add    BYTE PTR [rax],al
  405a5f:	add    BYTE PTR [rdi+0x43],al
  405a62:	rex.XB cmp spl,BYTE PTR [r8]
  405a65:	sub    BYTE PTR [rdi+0x4e],al
  405a68:	push   rbp
  405a69:	sub    DWORD PTR [rax],esp
  405a6b:	xor    al,0x2e
  405a6d:	cmp    DWORD PTR [rsi],ebp
  405a6f:	xor    al,0x0
	...
  405a7d:	add    BYTE PTR [rax],al
  405a7f:	add    BYTE PTR [rdi+0x43],al
  405a82:	rex.XB cmp spl,BYTE PTR [r8]
  405a85:	sub    BYTE PTR [rdi+0x4e],al
  405a88:	push   rbp
  405a89:	sub    DWORD PTR [rax],esp
  405a8b:	xor    al,0x2e
  405a8d:	cmp    DWORD PTR [rsi],ebp
  405a8f:	xor    al,0x0
	...
  405a9d:	add    BYTE PTR [rax],al
  405a9f:	add    BYTE PTR [rdi+0x43],al
  405aa2:	rex.XB cmp spl,BYTE PTR [r8]
  405aa5:	sub    BYTE PTR [rdi+0x4e],al
  405aa8:	push   rbp
  405aa9:	sub    DWORD PTR [rax],esp
  405aab:	xor    al,0x2e
  405aad:	cmp    DWORD PTR [rsi],ebp
  405aaf:	xor    al,0x0
	...
  405abd:	add    BYTE PTR [rax],al
  405abf:	add    BYTE PTR [rdi+0x43],al
  405ac2:	rex.XB cmp spl,BYTE PTR [r8]
  405ac5:	sub    BYTE PTR [rdi+0x4e],al
  405ac8:	push   rbp
  405ac9:	sub    DWORD PTR [rax],esp
  405acb:	xor    al,0x2e
  405acd:	cmp    DWORD PTR [rsi],ebp
  405acf:	xor    al,0x0
	...
  405add:	add    BYTE PTR [rax],al
  405adf:	add    BYTE PTR [rdi+0x43],al
  405ae2:	rex.XB cmp spl,BYTE PTR [r8]
  405ae5:	sub    BYTE PTR [rdi+0x4e],al
  405ae8:	push   rbp
  405ae9:	sub    DWORD PTR [rax],esp
  405aeb:	xor    al,0x2e
  405aed:	cmp    DWORD PTR [rsi],ebp
  405aef:	xor    al,0x0
	...
  405afd:	add    BYTE PTR [rax],al
  405aff:	add    BYTE PTR [rdi+0x43],al
  405b02:	rex.XB cmp spl,BYTE PTR [r8]
  405b05:	sub    BYTE PTR [rdi+0x4e],al
  405b08:	push   rbp
  405b09:	sub    DWORD PTR [rax],esp
  405b0b:	xor    al,0x2e
  405b0d:	cmp    DWORD PTR [rsi],ebp
  405b0f:	xor    al,0x0
	...
  405b1d:	add    BYTE PTR [rax],al
  405b1f:	add    BYTE PTR [rdi+0x43],al
  405b22:	rex.XB cmp spl,BYTE PTR [r8]
  405b25:	sub    BYTE PTR [rdi+0x4e],al
  405b28:	push   rbp
  405b29:	sub    DWORD PTR [rax],esp
  405b2b:	xor    al,0x2e
  405b2d:	cmp    DWORD PTR [rsi],ebp
  405b2f:	xor    al,0x0
	...
  405b3d:	add    BYTE PTR [rax],al
  405b3f:	add    BYTE PTR [rdi+0x43],al
  405b42:	rex.XB cmp spl,BYTE PTR [r8]
  405b45:	sub    BYTE PTR [rdi+0x4e],al
  405b48:	push   rbp
  405b49:	sub    DWORD PTR [rax],esp
  405b4b:	xor    al,0x2e
  405b4d:	cmp    DWORD PTR [rsi],ebp
  405b4f:	xor    al,0x0
	...
  405b5d:	add    BYTE PTR [rax],al
  405b5f:	add    BYTE PTR [rdi+0x43],al
  405b62:	rex.XB cmp spl,BYTE PTR [r8]
  405b65:	sub    BYTE PTR [rdi+0x4e],al
  405b68:	push   rbp
  405b69:	sub    DWORD PTR [rax],esp
  405b6b:	xor    al,0x2e
  405b6d:	cmp    DWORD PTR [rsi],ebp
  405b6f:	xor    al,0x0
	...
  405b7d:	add    BYTE PTR [rax],al
  405b7f:	add    BYTE PTR [rdi+0x43],al
  405b82:	rex.XB cmp spl,BYTE PTR [r8]
  405b85:	sub    BYTE PTR [rdi+0x4e],al
  405b88:	push   rbp
  405b89:	sub    DWORD PTR [rax],esp
  405b8b:	xor    al,0x2e
  405b8d:	cmp    DWORD PTR [rsi],ebp
  405b8f:	xor    al,0x0
	...
  405b9d:	add    BYTE PTR [rax],al
  405b9f:	add    BYTE PTR [rdi+0x43],al
  405ba2:	rex.XB cmp spl,BYTE PTR [r8]
  405ba5:	sub    BYTE PTR [rdi+0x4e],al
  405ba8:	push   rbp
  405ba9:	sub    DWORD PTR [rax],esp
  405bab:	xor    al,0x2e
  405bad:	cmp    DWORD PTR [rsi],ebp
  405baf:	xor    al,0x0
	...
  405bbd:	add    BYTE PTR [rax],al
  405bbf:	add    BYTE PTR [rdi+0x43],al
  405bc2:	rex.XB cmp spl,BYTE PTR [r8]
  405bc5:	sub    BYTE PTR [rdi+0x4e],al
  405bc8:	push   rbp
  405bc9:	sub    DWORD PTR [rax],esp
  405bcb:	xor    al,0x2e
  405bcd:	cmp    DWORD PTR [rsi],ebp
  405bcf:	xor    al,0x0
	...
  405bdd:	add    BYTE PTR [rax],al
  405bdf:	add    BYTE PTR [rdi+0x43],al
  405be2:	rex.XB cmp spl,BYTE PTR [r8]
  405be5:	sub    BYTE PTR [rdi+0x4e],al
  405be8:	push   rbp
  405be9:	sub    DWORD PTR [rax],esp
  405beb:	xor    al,0x2e
  405bed:	cmp    DWORD PTR [rsi],ebp
  405bef:	xor    al,0x0
	...
  405bfd:	add    BYTE PTR [rax],al
  405bff:	add    BYTE PTR [rdi+0x43],al
  405c02:	rex.XB cmp spl,BYTE PTR [r8]
  405c05:	sub    BYTE PTR [rdi+0x4e],al
  405c08:	push   rbp
  405c09:	sub    DWORD PTR [rax],esp
  405c0b:	xor    al,0x2e
  405c0d:	cmp    DWORD PTR [rsi],ebp
  405c0f:	xor    al,0x0
	...
  405c1d:	add    BYTE PTR [rax],al
  405c1f:	add    BYTE PTR [rdi+0x43],al
  405c22:	rex.XB cmp spl,BYTE PTR [r8]
  405c25:	sub    BYTE PTR [rdi+0x4e],al
  405c28:	push   rbp
  405c29:	sub    DWORD PTR [rax],esp
  405c2b:	xor    al,0x2e
  405c2d:	cmp    DWORD PTR [rsi],ebp
  405c2f:	xor    al,0x0
	...
  405c3d:	add    BYTE PTR [rax],al
  405c3f:	add    BYTE PTR [rdi+0x43],al
  405c42:	rex.XB cmp spl,BYTE PTR [r8]
  405c45:	sub    BYTE PTR [rdi+0x4e],al
  405c48:	push   rbp
  405c49:	sub    DWORD PTR [rax],esp
  405c4b:	xor    al,0x2e
  405c4d:	cmp    DWORD PTR [rsi],ebp
  405c4f:	xor    al,0x0
	...
  405c5d:	add    BYTE PTR [rax],al
  405c5f:	add    BYTE PTR [rdi+0x43],al
  405c62:	rex.XB cmp spl,BYTE PTR [r8]
  405c65:	sub    BYTE PTR [rdi+0x4e],al
  405c68:	push   rbp
  405c69:	sub    DWORD PTR [rax],esp
  405c6b:	xor    al,0x2e
  405c6d:	cmp    DWORD PTR [rsi],ebp
  405c6f:	xor    al,0x0
	...

Disassembly of section .pdata:

0000000000406000 <.pdata>:
  406000:	add    BYTE PTR [rax],dl
  406002:	add    BYTE PTR [rax],al
  406004:	add    DWORD PTR [rax],edx
  406006:	add    BYTE PTR [rax],al
  406008:	add    BYTE PTR [rax+0x0],dh
  40600b:	add    BYTE PTR [rax],dl
  40600d:	adc    BYTE PTR [rax],al
  40600f:	add    BYTE PTR [rcx+0x11],dl
  406012:	add    BYTE PTR [rax],al
  406014:	add    al,0x70
  406016:	add    BYTE PTR [rax],al
  406018:	(bad)  
  406019:	adc    DWORD PTR [rax],eax
  40601b:	add    BYTE PTR [rsi+0xc000011],ch
  406021:	jo     0x406023
  406023:	add    BYTE PTR [rax-0x31ffffef],dh
  406029:	adc    al,0x0
  40602b:	add    BYTE PTR [rax+rsi*2],dl
  40602e:	add    BYTE PTR [rax],al
  406030:	rcl    BYTE PTR [rax+rax*1],1
  406033:	add    dl,dh
  406035:	adc    al,0x0
  406037:	add    BYTE PTR [rax],ch
  406039:	jo     0x40603b
  40603b:	add    BYTE PTR [rax],al
  40603d:	adc    eax,0x15220000
  406042:	add    BYTE PTR [rax],al
  406044:	rex.W jo 0x406047
  406047:	add    BYTE PTR [rax],dh
  406049:	adc    eax,0x15c50000
  40604e:	add    BYTE PTR [rax],al
  406050:	push   0xffffffffc5000070
  406055:	adc    eax,0x1d420000
  40605a:	add    BYTE PTR [rax],al
  40605c:	je     0x4060ce
  40605e:	add    BYTE PTR [rax],al
  406060:	push   rax
  406061:	sbb    eax,0x1d870000
  406066:	add    BYTE PTR [rax],al
  406068:	test   BYTE PTR [rax+0x0],dh
  40606b:	add    BYTE PTR [rdi+0x1e00001d],al
  406071:	(bad)  
  406072:	add    BYTE PTR [rax],al
  406074:	nop
  406075:	jo     0x406077
  406077:	add    BYTE PTR [rax+0x2700001e],al
  40607d:	(bad)  
  40607e:	add    BYTE PTR [rax],al
  406080:	pushf  
  406081:	jo     0x406083
  406083:	add    BYTE PTR [rax],dh
  406085:	(bad)  
  406086:	add    BYTE PTR [rax],al
  406088:	rex.WB (bad) 
  40608a:	add    BYTE PTR [rax],al
  40608c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40608d:	jo     0x40608f
  40608f:	add    BYTE PTR [rax+0x1f],dl
  406092:	add    BYTE PTR [rax],al
  406094:	test   DWORD PTR [rdi],ebx
  406096:	add    BYTE PTR [rax],al
  406098:	lods   al,BYTE PTR ds:[rsi]
  406099:	jo     0x40609b
  40609b:	add    BYTE PTR [rax-0x1affffe1],dl
  4060a1:	(bad)  
  4060a2:	add    BYTE PTR [rax],al
  4060a4:	mov    ah,0x70
  4060a6:	add    BYTE PTR [rax],al
  4060a8:	lock (bad) 
  4060aa:	add    BYTE PTR [rax],al
  4060ac:	or     al,0x20
  4060ae:	add    BYTE PTR [rax],al
  4060b0:	shl    BYTE PTR [rax+0x0],0x0
  4060b4:	adc    BYTE PTR [rax],ah
  4060b6:	add    BYTE PTR [rax],al
  4060b8:	sbb    ah,BYTE PTR [rax]
  4060ba:	add    BYTE PTR [rax],al
  4060bc:	(bad)  
  4060bd:	jo     0x4060bf
  4060bf:	add    BYTE PTR [rax],ah
  4060c1:	and    BYTE PTR [rax],al
  4060c3:	add    BYTE PTR [rbx],ah
  4060c5:	and    BYTE PTR [rax],al
  4060c7:	add    al,cl
  4060c9:	jo     0x4060cb
  4060cb:	add    BYTE PTR [rax],dh
  4060cd:	and    BYTE PTR [rax],al
  4060cf:	add    BYTE PTR [rsi],al
  4060d1:	and    DWORD PTR [rax],eax
  4060d3:	add    ah,cl
  4060d5:	jo     0x4060d7
  4060d7:	add    BYTE PTR [rax],dl
  4060d9:	and    DWORD PTR [rax],eax
  4060db:	add    BYTE PTR [rbx],cl
  4060dd:	and    al,BYTE PTR [rax]
  4060df:	add    ah,bl
  4060e1:	jo     0x4060e3
  4060e3:	add    BYTE PTR [rax],dl
  4060e5:	and    al,BYTE PTR [rax]
  4060e7:	add    BYTE PTR [rdi],bh
  4060e9:	and    al,BYTE PTR [rax]
  4060eb:	add    ah,ch
  4060ed:	jo     0x4060ef
  4060ef:	add    BYTE PTR [rax+0x22],al
  4060f2:	add    BYTE PTR [rax],al
  4060f4:	test   eax,0xf4000022
  4060f9:	jo     0x4060fb
  4060fb:	add    BYTE PTR [rax-0x4cffffde],dh
  406101:	and    al,BYTE PTR [rax]
  406103:	add    BYTE PTR [rax],al
  406105:	jno    0x406107
  406107:	add    al,al
  406109:	and    al,BYTE PTR [rax]
  40610b:	add    BYTE PTR [rcx],al
  40610d:	and    eax,DWORD PTR [rax]
  40610f:	add    BYTE PTR [rcx+rsi*2],al
  406112:	add    BYTE PTR [rax],al
  406114:	adc    BYTE PTR [rbx],ah
  406116:	add    BYTE PTR [rax],al
  406118:	sbb    al,0x23
  40611a:	add    BYTE PTR [rax],al
  40611c:	or     al,0x71
  40611e:	add    BYTE PTR [rax],al
  406120:	and    BYTE PTR [rbx],ah
  406122:	add    BYTE PTR [rax],al
  406124:	sbb    al,0x24
  406126:	add    BYTE PTR [rax],al
  406128:	adc    BYTE PTR [rcx+0x0],dh
  40612b:	add    BYTE PTR [rax],ah
  40612d:	and    al,0x0
  40612f:	add    BYTE PTR [rbx],ah
  406131:	and    al,0x0
  406133:	add    BYTE PTR [rax],ch
  406135:	jno    0x406137
  406137:	add    BYTE PTR [rax],dh
  406139:	and    al,0x0
  40613b:	add    BYTE PTR [rsp],dh
  40613e:	add    BYTE PTR [rax],al
  406140:	sub    al,0x71
  406142:	add    BYTE PTR [rax],al
  406144:	and    al,0x0
  406147:	add    BYTE PTR [rsp+0x0],al
  40614b:	add    BYTE PTR [rax],dh
  40614d:	jno    0x40614f
  40614f:	add    BYTE PTR [rax+0x24],dl
  406152:	add    BYTE PTR [rax],al
  406154:	mov    cl,0x24
  406156:	add    BYTE PTR [rax],al
  406158:	xor    al,0x71
  40615a:	add    BYTE PTR [rax],al
  40615c:	shl    BYTE PTR [rax+rax*1],0x0
  406160:	and    ah,BYTE PTR [rsi]
  406162:	add    BYTE PTR [rax],al
  406164:	rex jno 0x406167
  406167:	add    BYTE PTR [rax],dh
  406169:	add    BYTE PTR es:[rax],al
  40616c:	sub    DWORD PTR [rcx],ebp
  40616e:	add    BYTE PTR [rax],al
  406170:	push   rsp
  406171:	jno    0x406173
  406173:	add    BYTE PTR [rax],dh
  406175:	sub    DWORD PTR [rax],eax
  406177:	add    dh,dl
  406179:	sub    al,BYTE PTR [rax]
  40617b:	add    BYTE PTR [rcx+rsi*2+0x0],ch
  40617f:	add    al,ah
  406181:	sub    al,BYTE PTR [rax]
  406183:	add    ah,cl
  406185:	sub    eax,DWORD PTR [rax]
  406187:	add    BYTE PTR [rcx+rsi*2+0x0],dh
  40618b:	add    al,dl
  40618d:	sub    eax,DWORD PTR [rax]
  40618f:	add    BYTE PTR [rax-0x7bffffd3],cl
  406195:	jno    0x406197
  406197:	add    BYTE PTR [rax-0x2ffffd3],dl
  40619d:	sub    eax,0x718c0000
  4061a2:	add    BYTE PTR [rax],al
  4061a4:	add    BYTE PTR [rsi],ch
  4061a6:	add    BYTE PTR [rax],al
  4061a8:	jg     0x4061d8
  4061aa:	add    BYTE PTR [rax],al
  4061ac:	pushf  
  4061ad:	jno    0x4061af
  4061af:	add    BYTE PTR [rax+0x1f00002e],al
  4061b5:	(bad)  
  4061b6:	add    BYTE PTR [rax],al
  4061b8:	test   al,0x71
  4061ba:	add    BYTE PTR [rax],al
  4061bc:	and    BYTE PTR [rdi],ch
  4061be:	add    BYTE PTR [rax],al
  4061c0:	cli    
  4061c1:	(bad)  
  4061c2:	add    BYTE PTR [rax],al
  4061c4:	mov    al,0x71
  4061c6:	add    BYTE PTR [rax],al
  4061c8:	add    BYTE PTR [rax],dh
  4061ca:	add    BYTE PTR [rax],al
  4061cc:	(bad)  
  4061cd:	xor    BYTE PTR [rax],al
  4061cf:	add    BYTE PTR [rax+0x20000071],bh
  4061d5:	xor    BYTE PTR [rax],al
  4061d7:	add    BYTE PTR [rdx],dh
  4061d9:	xor    BYTE PTR [rax],al
  4061db:	add    BYTE PTR [rcx+rsi*2+0x30400000],bh
  4061e2:	add    BYTE PTR [rax],al
  4061e4:	test   DWORD PTR [rax],esi
  4061e6:	add    BYTE PTR [rax],al
  4061e8:	shl    BYTE PTR [rcx+0x0],0x0
  4061ec:	nop
  4061ed:	xor    BYTE PTR [rax],al
  4061ef:	add    BYTE PTR [rsi],ch
  4061f1:	xor    DWORD PTR [rax],eax
  4061f3:	add    ah,al
  4061f5:	jno    0x4061f7
  4061f7:	add    BYTE PTR [rax],dh
  4061f9:	xor    DWORD PTR [rax],eax
  4061fb:	add    BYTE PTR [rbx+0x31],dh
  4061fe:	add    BYTE PTR [rax],al
  406200:	shl    BYTE PTR [rcx+0x0],1
  406203:	add    BYTE PTR [rax-0x44ffffcf],al
  406209:	xor    DWORD PTR [rax],eax
  40620b:	add    ah,bl
  40620d:	jno    0x40620f
  40620f:	add    al,al
  406211:	xor    DWORD PTR [rax],eax
  406213:	add    BYTE PTR [rsi+0x32],cl
  406216:	add    BYTE PTR [rax],al
  406218:	in     al,0x71
  40621a:	add    BYTE PTR [rax],al
  40621c:	push   rax
  40621d:	xor    al,BYTE PTR [rax]
  40621f:	add    BYTE PTR [rax-0xfffffce],cl
  406225:	jno    0x406227
  406227:	add    BYTE PTR [rax-0x1affffce],dl
  40622d:	xor    al,BYTE PTR [rax]
  40622f:	add    ah,bh
  406231:	jno    0x406233
  406233:	add    al,dh
  406235:	xor    al,BYTE PTR [rax]
  406237:	add    BYTE PTR [rsi+0x8000033],bl
  40623d:	jb     0x40623f
  40623f:	add    al,ah
  406241:	xor    al,0x0
  406243:	add    al,ch
  406245:	xor    al,0x0
  406247:	add    BYTE PTR [rax],bl
  406249:	jb     0x40624b
  40624b:	add    al,dh
  40624d:	xor    al,0x0
  40624f:	add    bl,bh
  406251:	xor    al,0x0
  406253:	add    BYTE PTR [rdx+rsi*2],bl
	...

Disassembly of section .xdata:

0000000000407000 <.xdata>:
  407000:	add    DWORD PTR [rax],eax
  407002:	add    BYTE PTR [rax],al
  407004:	add    DWORD PTR [rcx+rax*1],eax
  407007:	add    BYTE PTR [rdx+rax*2],al
  40700a:	add    BYTE PTR [rax],al
  40700c:	add    DWORD PTR [rcx+rax*1],eax
  40700f:	add    BYTE PTR [rdx+riz*2],al
  407012:	add    BYTE PTR [rax],al
  407014:	add    DWORD PTR [rdi],ecx
  407016:	or     BYTE PTR [rax],al
  407018:	lgdt   [rbx]
  40701b:	add    BYTE PTR [rax],cl
  40701d:	xor    BYTE PTR [rdi],al
  40701f:	(bad)  
  407020:	(bad)  
  407021:	jo     0x407028
  407023:	push   rax
  407024:	add    al,0xc0
  407026:	add    dl,al
  407028:	or     DWORD PTR [rcx+rax*1],eax
  40702b:	add    BYTE PTR [rdx+rax*2],al
  40702e:	add    BYTE PTR [rax],al
  407030:	fdiv   DWORD PTR [rax+rax*1]
  407033:	add    BYTE PTR [rcx],al
  407035:	add    BYTE PTR [rax],al
  407037:	add    ah,dl
  407039:	adc    al,0x0
  40703b:	add    ah,ch
  40703d:	adc    al,0x0
  40703f:	add    al,dl
  407041:	sub    eax,DWORD PTR [rax]
  407043:	add    ah,ch
  407045:	adc    al,0x0
  407047:	add    BYTE PTR [rcx],cl
  407049:	add    al,0x1
  40704b:	add    BYTE PTR [rdx+rax*2],al
  40704e:	add    BYTE PTR [rax],al
  407050:	fdiv   DWORD PTR [rax+rax*1]
  407053:	add    BYTE PTR [rcx],al
  407055:	add    BYTE PTR [rax],al
  407057:	add    BYTE PTR [rdx*1+0x151c0000],al
  40705e:	add    BYTE PTR [rax],al
  407060:	shr    BYTE PTR [rbx],1
  407062:	add    BYTE PTR [rax],al
  407064:	sbb    al,0x15
  407066:	add    BYTE PTR [rax],al
  407068:	add    DWORD PTR [rsi],ecx
  40706a:	add    al,0x85
  40706c:	(bad)  
  40706d:	add    eax,DWORD PTR [rsi]
  40706f:	(bad)  
  407071:	xor    BYTE PTR [rcx],al
  407073:	push   rax
  407074:	add    DWORD PTR [rdx],edx
  407076:	(bad)  
  407077:	test   DWORD PTR [rdx],edx
  407079:	add    ecx,DWORD PTR [rdx]
  40707b:	add    DWORD PTR [rdx],esi
  40707d:	add    BYTE PTR [rbx],al
  40707f:	xor    BYTE PTR [rdx],al
  407081:	(bad)  
  407082:	add    DWORD PTR [rax+0x1],edx
  407085:	or     BYTE PTR [rbx],al
  407087:	add    eax,0x3043208
  40708c:	add    DWORD PTR [rax+0x0],edx
  40708f:	add    BYTE PTR [rcx],al
  407091:	or     BYTE PTR [rbx],al
  407093:	add    eax,0x3047208
  407098:	add    DWORD PTR [rax+0x0],edx
  40709b:	add    BYTE PTR [rcx],al
  40709d:	add    eax,0x52050002
  4070a2:	add    DWORD PTR [rax],esi
  4070a4:	add    DWORD PTR [rcx+rax*1],eax
  4070a7:	add    BYTE PTR [rdx+rax*2],al
  4070aa:	add    BYTE PTR [rax],al
  4070ac:	add    DWORD PTR [rcx+rax*1],eax
  4070af:	add    BYTE PTR [rdx+rax*2],al
  4070b2:	add    BYTE PTR [rax],al
  4070b4:	add    DWORD PTR [rsi],eax
  4070b6:	add    eax,DWORD PTR [rax]
  4070b8:	(bad)  
  4070b9:	rex.X add sil,BYTE PTR [rax]
  4070bc:	add    DWORD PTR [rax+0x0],esp
  4070bf:	add    BYTE PTR [rcx],al
  4070c1:	add    BYTE PTR [rax],al
  4070c3:	add    BYTE PTR [rcx],al
  4070c5:	add    BYTE PTR [rax],al
  4070c7:	add    BYTE PTR [rcx],al
  4070c9:	add    BYTE PTR [rax],al
  4070cb:	add    BYTE PTR [rcx],al
  4070cd:	or     al,BYTE PTR [rsi]
  4070cf:	add    BYTE PTR [rdx],cl
  4070d1:	jb     0x4070d9
  4070d3:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b07539
  4070d9:	push   rax
  4070da:	add    al,al
  4070dc:	add    DWORD PTR [rdx],ecx
  4070de:	add    eax,0x6d20a05
  4070e3:	add    eax,DWORD PTR [rbx]
  4070e5:	xor    BYTE PTR [rdx],al
  4070e7:	(bad)  
  4070e8:	add    DWORD PTR [rax+0x0],edx
  4070eb:	add    BYTE PTR [rcx],al
  4070ed:	add    al,0x1
  4070ef:	add    BYTE PTR [rdx+rax*2],al
  4070f2:	add    BYTE PTR [rax],al
  4070f4:	add    DWORD PTR [rsi],eax
  4070f6:	add    eax,DWORD PTR [rax]
  4070f8:	(bad)  
  4070f9:	rex.X add sil,BYTE PTR [rax]
  4070fc:	add    DWORD PTR [rax+0x0],esp
  4070ff:	add    BYTE PTR [rcx],al
  407101:	add    BYTE PTR [rax],al
  407103:	add    BYTE PTR [rcx],al
  407105:	add    al,0x1
  407107:	add    BYTE PTR [rdx+riz*4],al
  40710a:	add    BYTE PTR [rax],al
  40710c:	add    DWORD PTR [rax],eax
  40710e:	add    BYTE PTR [rax],al
  407110:	add    DWORD PTR [rsi],edx
  407112:	or     DWORD PTR [rax],eax
  407114:	(bad)  
  407115:	mov    BYTE PTR [rsi],al
  407117:	add    BYTE PTR [rax],dl
  407119:	js     0x407120
  40711b:	add    BYTE PTR [rbx],cl
  40711d:	push   0xffffffffe2060004
  407122:	add    dh,BYTE PTR [rax]
  407124:	add    DWORD PTR [rax+0x0],esp
  407127:	add    BYTE PTR [rcx],al
  407129:	add    BYTE PTR [rax],al
  40712b:	add    BYTE PTR [rcx],al
  40712d:	add    BYTE PTR [rax],al
  40712f:	add    BYTE PTR [rcx],al
  407131:	add    BYTE PTR [rax],al
  407133:	add    BYTE PTR [rcx],al
  407135:	(bad)  
  407136:	add    eax,DWORD PTR [rax]
  407138:	(bad)  
  407139:	(bad)  
  40713b:	xor    BYTE PTR [rcx],al
  40713d:	(bad)  
  40713e:	add    BYTE PTR [rax],al
  407140:	add    DWORD PTR [rdi+rax*1],ecx
  407143:	add    BYTE PTR [rdx+riz*4],cl
  407146:	or     BYTE PTR [rax],dh
  407148:	(bad)  
  407149:	(bad)  
  40714a:	(bad)  
  40714b:	jo     0x407152
  40714d:	push   rax
  40714e:	add    al,0xc0
  407150:	add    dl,al
  407152:	add    BYTE PTR [rax],al
  407154:	add    DWORD PTR [rcx],edx
  407156:	or     DWORD PTR [rip+0x30db211],eax        # 0x34e236d
  40715c:	or     dh,BYTE PTR [rax]
  40715e:	or     DWORD PTR [rax+0x8],esp
  407161:	jo     0x40716a
  407163:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x220753a
  40716a:	add    BYTE PTR [rax],al
  40716c:	add    DWORD PTR [rcx+rax*1],eax
  40716f:	add    BYTE PTR [rdx+rax*2],al
  407172:	add    BYTE PTR [rax],al
  407174:	add    DWORD PTR [rdx],ecx
  407176:	(bad)  
  407177:	add    BYTE PTR [rdx],cl
  407179:	xor    al,BYTE PTR [rsi]
  40717b:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b075e1
  407181:	push   rax
  407182:	add    al,al
  407184:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245718c
  40718a:	add    DWORD PTR [rax],esi
  40718c:	add    DWORD PTR [rax],ecx
  40718e:	add    eax,0x4420800
  407193:	xor    BYTE PTR [rbx],al
  407195:	(bad)  
  407196:	add    dh,BYTE PTR [rax+0x1]
  407199:	push   rax
  40719a:	add    BYTE PTR [rax],al
  40719c:	add    DWORD PTR [rdi],eax
  40719e:	add    al,0x0
  4071a0:	(bad)  
  4071a1:	xor    al,BYTE PTR [rbx]
  4071a3:	xor    BYTE PTR [rdx],al
  4071a5:	(bad)  
  4071a6:	add    DWORD PTR [rax+0x1],esi
  4071a9:	add    eax,0x32050002
  4071ae:	add    DWORD PTR [rax],esi
  4071b0:	add    DWORD PTR [rip+0x32050002],eax        # 0x324571b8
  4071b6:	add    DWORD PTR [rax],esi
  4071b8:	add    DWORD PTR [rax],eax
  4071ba:	add    BYTE PTR [rax],al
  4071bc:	add    DWORD PTR [rax],eax
  4071be:	add    BYTE PTR [rax],al
  4071c0:	add    DWORD PTR [rax],eax
  4071c2:	add    BYTE PTR [rax],al
  4071c4:	add    DWORD PTR [rdi],eax
  4071c6:	add    al,0x0
  4071c8:	(bad)  
  4071c9:	xor    al,BYTE PTR [rbx]
  4071cb:	xor    BYTE PTR [rdx],al
  4071cd:	(bad)  
  4071ce:	add    DWORD PTR [rax+0x1],esi
  4071d1:	(bad)  
  4071d2:	add    eax,DWORD PTR [rax]
  4071d4:	(bad)  
  4071d5:	rex.X add sil,BYTE PTR [rax]
  4071d8:	add    DWORD PTR [rax+0x0],esp
  4071db:	add    BYTE PTR [rcx],al
  4071dd:	add    eax,0x32050002
  4071e2:	add    DWORD PTR [rax],esi
  4071e4:	add    DWORD PTR [rdi],eax
  4071e6:	add    al,0x0
  4071e8:	(bad)  
  4071e9:	xor    al,BYTE PTR [rbx]
  4071eb:	xor    BYTE PTR [rdx],al
  4071ed:	(bad)  
  4071ee:	add    DWORD PTR [rax+0x1],esi
  4071f1:	(bad)  
  4071f2:	add    eax,DWORD PTR [rax]
  4071f4:	(bad)  
  4071f5:	rex.X add sil,BYTE PTR [rax]
  4071f8:	add    DWORD PTR [rax+0x0],esp
  4071fb:	add    BYTE PTR [rcx],al
  4071fd:	(bad)  
  4071fe:	add    eax,DWORD PTR [rax]
  407200:	(bad)  
  407201:	rex.X add sil,BYTE PTR [rax]
  407204:	add    DWORD PTR [rax+0x0],esp
  407207:	add    BYTE PTR [rcx],al
  407209:	or     BYTE PTR [rip+0x4420800],al        # 0x4827a0f
  40720f:	xor    BYTE PTR [rbx],al
  407211:	(bad)  
  407212:	add    dh,BYTE PTR [rax+0x1]
  407215:	push   rax
  407216:	add    BYTE PTR [rax],al
  407218:	add    DWORD PTR [rax],eax
  40721a:	add    BYTE PTR [rax],al
  40721c:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

0000000000408000 <.bss>:
	...

Disassembly of section .idata:

0000000000409000 <.idata>:
  409000:	push   rax
  409001:	nop
	...
  40900a:	add    BYTE PTR [rax],al
  40900c:	fcomp  QWORD PTR [rcx-0x6d680000]
  409012:	add    BYTE PTR [rax],al
  409014:	mov    al,0x90
	...
  40901e:	add    BYTE PTR [rax],al
  409020:	rex.W (bad) 
  409022:	add    BYTE PTR [rax],al
  409024:	clc    
  409025:	xchg   edx,eax
  409026:	add    BYTE PTR [rax],al
  409028:	jo     0x408fbb
	...
  409032:	add    BYTE PTR [rax],al
  409034:	call   0xffffffffb84090d3
  409039:	xchg   ebx,eax
	...
  40904e:	add    BYTE PTR [rax],al
  409050:	loopne 0x408fe6
  409052:	add    BYTE PTR [rax],al
  409054:	add    BYTE PTR [rax],al
  409056:	add    BYTE PTR [rax],al
  409058:	lock xchg esp,eax
  40905a:	add    BYTE PTR [rax],al
  40905c:	add    BYTE PTR [rax],al
  40905e:	add    BYTE PTR [rax],al
  409060:	sbb    al,0x95
  409062:	add    BYTE PTR [rax],al
  409064:	add    BYTE PTR [rax],al
  409066:	add    BYTE PTR [rax],al
  409068:	xor    al,0x95
  40906a:	add    BYTE PTR [rax],al
  40906c:	add    BYTE PTR [rax],al
  40906e:	add    BYTE PTR [rax],al
  409070:	rex.WR xchg rbp,rax
  409072:	add    BYTE PTR [rax],al
  409074:	add    BYTE PTR [rax],al
  409076:	add    BYTE PTR [rax],al
  409078:	jo     0x40900f
  40907a:	add    BYTE PTR [rax],al
  40907c:	add    BYTE PTR [rax],al
  40907e:	add    BYTE PTR [rax],al
  409080:	xchg   esp,eax
  409081:	xchg   ebp,eax
  409082:	add    BYTE PTR [rax],al
  409084:	add    BYTE PTR [rax],al
  409086:	add    BYTE PTR [rax],al
  409088:	mov    ah,0x95
  40908a:	add    BYTE PTR [rax],al
  40908c:	add    BYTE PTR [rax],al
  40908e:	add    BYTE PTR [rax],al
  409090:	fcom   DWORD PTR [rbp+0x0]
  409096:	add    BYTE PTR [rax],al
  409098:	clc    
  409099:	xchg   ebp,eax
  40909a:	add    BYTE PTR [rax],al
  40909c:	add    BYTE PTR [rax],al
  40909e:	add    BYTE PTR [rax],al
  4090a0:	adc    BYTE PTR [rsi+0x0],dl
	...
  4090ae:	add    BYTE PTR [rax],al
  4090b0:	sub    BYTE PTR [rsi+0x0],dl
  4090b6:	add    BYTE PTR [rax],al
  4090b8:	rex xchg esi,eax
  4090ba:	add    BYTE PTR [rax],al
  4090bc:	add    BYTE PTR [rax],al
  4090be:	add    BYTE PTR [rax],al
  4090c0:	pop    rax
  4090c1:	xchg   esi,eax
  4090c2:	add    BYTE PTR [rax],al
  4090c4:	add    BYTE PTR [rax],al
  4090c6:	add    BYTE PTR [rax],al
  4090c8:	ins    BYTE PTR es:[rdi],dx
  4090c9:	xchg   esi,eax
  4090ca:	add    BYTE PTR [rax],al
  4090cc:	add    BYTE PTR [rax],al
  4090ce:	add    BYTE PTR [rax],al
  4090d0:	(bad)  
  4090d1:	xchg   esi,eax
  4090d2:	add    BYTE PTR [rax],al
  4090d4:	add    BYTE PTR [rax],al
  4090d6:	add    BYTE PTR [rax],al
  4090d8:	cwde   
  4090d9:	xchg   esi,eax
  4090da:	add    BYTE PTR [rax],al
  4090dc:	add    BYTE PTR [rax],al
  4090de:	add    BYTE PTR [rax],al
  4090e0:	test   al,0x96
  4090e2:	add    BYTE PTR [rax],al
  4090e4:	add    BYTE PTR [rax],al
  4090e6:	add    BYTE PTR [rax],al
  4090e8:	mov    edx,0x96
  4090ed:	add    BYTE PTR [rax],al
  4090ef:	add    ah,dl
  4090f1:	xchg   esi,eax
  4090f2:	add    BYTE PTR [rax],al
  4090f4:	add    BYTE PTR [rax],al
  4090f6:	add    BYTE PTR [rax],al
  4090f8:	in     al,0x96
  4090fa:	add    BYTE PTR [rax],al
  4090fc:	add    BYTE PTR [rax],al
  4090fe:	add    BYTE PTR [rax],al
  409100:	add    BYTE PTR [rdi+0x0],dl
  409106:	add    BYTE PTR [rax],al
  409108:	sbb    BYTE PTR [rdi+0x0],dl
  40910e:	add    BYTE PTR [rax],al
  409110:	xor    dl,BYTE PTR [rdi+0x0]
  409116:	add    BYTE PTR [rax],al
  409118:	xchg   rdi,rax
  40911a:	add    BYTE PTR [rax],al
  40911c:	add    BYTE PTR [rax],al
  40911e:	add    BYTE PTR [rax],al
  409120:	pop    rsp
  409121:	xchg   edi,eax
  409122:	add    BYTE PTR [rax],al
  409124:	add    BYTE PTR [rax],al
  409126:	add    BYTE PTR [rax],al
  409128:	jbe    0x4090c1
  40912a:	add    BYTE PTR [rax],al
  40912c:	add    BYTE PTR [rax],al
  40912e:	add    BYTE PTR [rax],al
  409130:	mov    dl,BYTE PTR [rdi+0x0]
  409136:	add    BYTE PTR [rax],al
  409138:	test   al,0x97
  40913a:	add    BYTE PTR [rax],al
  40913c:	add    BYTE PTR [rax],al
  40913e:	add    BYTE PTR [rax],al
  409140:	mov    al,0x97
  409142:	add    BYTE PTR [rax],al
  409144:	add    BYTE PTR [rax],al
  409146:	add    BYTE PTR [rax],al
  409148:	(bad)  
  409149:	xchg   edi,eax
  40914a:	add    BYTE PTR [rax],al
  40914c:	add    BYTE PTR [rax],al
  40914e:	add    BYTE PTR [rax],al
  409150:	rcl    BYTE PTR [rdi+0x0],cl
  409156:	add    BYTE PTR [rax],al
  409158:	out    dx,al
  409159:	xchg   edi,eax
  40915a:	add    BYTE PTR [rax],al
  40915c:	add    BYTE PTR [rax],al
  40915e:	add    BYTE PTR [rax],al
  409160:	add    BYTE PTR [rax+0x0],bl
	...
  40916e:	add    BYTE PTR [rax],al
  409170:	adc    BYTE PTR [rax+0x0],bl
  409176:	add    BYTE PTR [rax],al
  409178:	sub    BYTE PTR [rax+0x0],bl
  40917e:	add    BYTE PTR [rax],al
  409180:	ss cwde 
  409182:	add    BYTE PTR [rax],al
  409184:	add    BYTE PTR [rax],al
  409186:	add    BYTE PTR [rax],al
  409188:	rex.RX cwde 
  40918a:	add    BYTE PTR [rax],al
  40918c:	add    BYTE PTR [rax],al
  40918e:	add    BYTE PTR [rax],al
  409190:	push   rdx
  409191:	cwde   
  409192:	add    BYTE PTR [rax],al
  409194:	add    BYTE PTR [rax],al
  409196:	add    BYTE PTR [rax],al
  409198:	(bad)  
  409199:	cwde   
  40919a:	add    BYTE PTR [rax],al
  40919c:	add    BYTE PTR [rax],al
  40919e:	add    BYTE PTR [rax],al
  4091a0:	jo     0x40913a
  4091a2:	add    BYTE PTR [rax],al
  4091a4:	add    BYTE PTR [rax],al
  4091a6:	add    BYTE PTR [rax],al
  4091a8:	(bad)  
  4091a9:	cwde   
  4091aa:	add    BYTE PTR [rax],al
  4091ac:	add    BYTE PTR [rax],al
  4091ae:	add    BYTE PTR [rax],al
  4091b0:	xchg   esi,eax
  4091b1:	cwde   
  4091b2:	add    BYTE PTR [rax],al
  4091b4:	add    BYTE PTR [rax],al
  4091b6:	add    BYTE PTR [rax],al
  4091b8:	movabs al,ds:0xae00000000000098
  4091c1:	cwde   
  4091c2:	add    BYTE PTR [rax],al
  4091c4:	add    BYTE PTR [rax],al
  4091c6:	add    BYTE PTR [rax],al
  4091c8:	mov    eax,0x98
  4091cd:	add    BYTE PTR [rax],al
  4091cf:	add    ah,al
  4091d1:	cwde   
  4091d2:	add    BYTE PTR [rax],al
  4091d4:	add    BYTE PTR [rax],al
  4091d6:	add    BYTE PTR [rax],al
  4091d8:	(bad)  
  4091d9:	cwde   
  4091da:	add    BYTE PTR [rax],al
  4091dc:	add    BYTE PTR [rax],al
  4091de:	add    BYTE PTR [rax],al
  4091e0:	fcomp  DWORD PTR [rax+0x0]
  4091e6:	add    BYTE PTR [rax],al
  4091e8:	in     al,0x98
  4091ea:	add    BYTE PTR [rax],al
  4091ec:	add    BYTE PTR [rax],al
  4091ee:	add    BYTE PTR [rax],al
  4091f0:	in     al,dx
  4091f1:	cwde   
  4091f2:	add    BYTE PTR [rax],al
  4091f4:	add    BYTE PTR [rax],al
  4091f6:	add    BYTE PTR [rax],al
  4091f8:	neg    BYTE PTR [rax+0x0]
  4091fe:	add    BYTE PTR [rax],al
  409200:	add    BYTE PTR [rcx+0x0],bl
  409206:	add    BYTE PTR [rax],al
  409208:	or     bl,BYTE PTR [rcx+0x0]
  40920e:	add    BYTE PTR [rax],al
  409210:	adc    bl,BYTE PTR [rcx+0x0]
  409216:	add    BYTE PTR [rax],al
  409218:	sbb    al,0x99
  40921a:	add    BYTE PTR [rax],al
  40921c:	add    BYTE PTR [rax],al
  40921e:	add    BYTE PTR [rax],al
  409220:	and    al,0x99
  409222:	add    BYTE PTR [rax],al
  409224:	add    BYTE PTR [rax],al
  409226:	add    BYTE PTR [rax],al
  409228:	cs cdq 
  40922a:	add    BYTE PTR [rax],al
  40922c:	add    BYTE PTR [rax],al
  40922e:	add    BYTE PTR [rax],al
  409230:	ss cdq 
  409232:	add    BYTE PTR [rax],al
  409234:	add    BYTE PTR [rax],al
  409236:	add    BYTE PTR [rax],al
  409238:	ds cdq 
  40923a:	add    BYTE PTR [rax],al
  40923c:	add    BYTE PTR [rax],al
  40923e:	add    BYTE PTR [rax],al
  409240:	cqo    
  409242:	add    BYTE PTR [rax],al
  409244:	add    BYTE PTR [rax],al
  409246:	add    BYTE PTR [rax],al
  409248:	push   rdx
  409249:	cdq    
  40924a:	add    BYTE PTR [rax],al
  40924c:	add    BYTE PTR [rax],al
  40924e:	add    BYTE PTR [rax],al
  409250:	pop    rsp
  409251:	cdq    
  409252:	add    BYTE PTR [rax],al
  409254:	add    BYTE PTR [rax],al
  409256:	add    BYTE PTR [rax],al
  409258:	cwd    
  40925a:	add    BYTE PTR [rax],al
  40925c:	add    BYTE PTR [rax],al
  40925e:	add    BYTE PTR [rax],al
  409260:	jo     0x4091fb
  409262:	add    BYTE PTR [rax],al
  409264:	add    BYTE PTR [rax],al
  409266:	add    BYTE PTR [rax],al
  409268:	jp     0x409203
  40926a:	add    BYTE PTR [rax],al
  40926c:	add    BYTE PTR [rax],al
  40926e:	add    BYTE PTR [rax],al
  409270:	test   BYTE PTR [rcx+0x0],bl
  409276:	add    BYTE PTR [rax],al
  409278:	mov    ds,WORD PTR [rcx+0x0]
  40927e:	add    BYTE PTR [rax],al
  409280:	cwde   
  409281:	cdq    
  409282:	add    BYTE PTR [rax],al
  409284:	add    BYTE PTR [rax],al
  409286:	add    BYTE PTR [rax],al
  409288:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  409289:	cdq    
	...
  409296:	add    BYTE PTR [rax],al
  409298:	loopne 0x40922e
  40929a:	add    BYTE PTR [rax],al
  40929c:	add    BYTE PTR [rax],al
  40929e:	add    BYTE PTR [rax],al
  4092a0:	lock xchg esp,eax
  4092a2:	add    BYTE PTR [rax],al
  4092a4:	add    BYTE PTR [rax],al
  4092a6:	add    BYTE PTR [rax],al
  4092a8:	sbb    al,0x95
  4092aa:	add    BYTE PTR [rax],al
  4092ac:	add    BYTE PTR [rax],al
  4092ae:	add    BYTE PTR [rax],al
  4092b0:	xor    al,0x95
  4092b2:	add    BYTE PTR [rax],al
  4092b4:	add    BYTE PTR [rax],al
  4092b6:	add    BYTE PTR [rax],al
  4092b8:	rex.WR xchg rbp,rax
  4092ba:	add    BYTE PTR [rax],al
  4092bc:	add    BYTE PTR [rax],al
  4092be:	add    BYTE PTR [rax],al
  4092c0:	jo     0x409257
  4092c2:	add    BYTE PTR [rax],al
  4092c4:	add    BYTE PTR [rax],al
  4092c6:	add    BYTE PTR [rax],al
  4092c8:	xchg   esp,eax
  4092c9:	xchg   ebp,eax
  4092ca:	add    BYTE PTR [rax],al
  4092cc:	add    BYTE PTR [rax],al
  4092ce:	add    BYTE PTR [rax],al
  4092d0:	mov    ah,0x95
  4092d2:	add    BYTE PTR [rax],al
  4092d4:	add    BYTE PTR [rax],al
  4092d6:	add    BYTE PTR [rax],al
  4092d8:	fcom   DWORD PTR [rbp+0x0]
  4092de:	add    BYTE PTR [rax],al
  4092e0:	clc    
  4092e1:	xchg   ebp,eax
  4092e2:	add    BYTE PTR [rax],al
  4092e4:	add    BYTE PTR [rax],al
  4092e6:	add    BYTE PTR [rax],al
  4092e8:	adc    BYTE PTR [rsi+0x0],dl
	...
  4092f6:	add    BYTE PTR [rax],al
  4092f8:	sub    BYTE PTR [rsi+0x0],dl
  4092fe:	add    BYTE PTR [rax],al
  409300:	rex xchg esi,eax
  409302:	add    BYTE PTR [rax],al
  409304:	add    BYTE PTR [rax],al
  409306:	add    BYTE PTR [rax],al
  409308:	pop    rax
  409309:	xchg   esi,eax
  40930a:	add    BYTE PTR [rax],al
  40930c:	add    BYTE PTR [rax],al
  40930e:	add    BYTE PTR [rax],al
  409310:	ins    BYTE PTR es:[rdi],dx
  409311:	xchg   esi,eax
  409312:	add    BYTE PTR [rax],al
  409314:	add    BYTE PTR [rax],al
  409316:	add    BYTE PTR [rax],al
  409318:	(bad)  
  409319:	xchg   esi,eax
  40931a:	add    BYTE PTR [rax],al
  40931c:	add    BYTE PTR [rax],al
  40931e:	add    BYTE PTR [rax],al
  409320:	cwde   
  409321:	xchg   esi,eax
  409322:	add    BYTE PTR [rax],al
  409324:	add    BYTE PTR [rax],al
  409326:	add    BYTE PTR [rax],al
  409328:	test   al,0x96
  40932a:	add    BYTE PTR [rax],al
  40932c:	add    BYTE PTR [rax],al
  40932e:	add    BYTE PTR [rax],al
  409330:	mov    edx,0x96
  409335:	add    BYTE PTR [rax],al
  409337:	add    ah,dl
  409339:	xchg   esi,eax
  40933a:	add    BYTE PTR [rax],al
  40933c:	add    BYTE PTR [rax],al
  40933e:	add    BYTE PTR [rax],al
  409340:	in     al,0x96
  409342:	add    BYTE PTR [rax],al
  409344:	add    BYTE PTR [rax],al
  409346:	add    BYTE PTR [rax],al
  409348:	add    BYTE PTR [rdi+0x0],dl
  40934e:	add    BYTE PTR [rax],al
  409350:	sbb    BYTE PTR [rdi+0x0],dl
  409356:	add    BYTE PTR [rax],al
  409358:	xor    dl,BYTE PTR [rdi+0x0]
  40935e:	add    BYTE PTR [rax],al
  409360:	xchg   rdi,rax
  409362:	add    BYTE PTR [rax],al
  409364:	add    BYTE PTR [rax],al
  409366:	add    BYTE PTR [rax],al
  409368:	pop    rsp
  409369:	xchg   edi,eax
  40936a:	add    BYTE PTR [rax],al
  40936c:	add    BYTE PTR [rax],al
  40936e:	add    BYTE PTR [rax],al
  409370:	jbe    0x409309
  409372:	add    BYTE PTR [rax],al
  409374:	add    BYTE PTR [rax],al
  409376:	add    BYTE PTR [rax],al
  409378:	mov    dl,BYTE PTR [rdi+0x0]
  40937e:	add    BYTE PTR [rax],al
  409380:	test   al,0x97
  409382:	add    BYTE PTR [rax],al
  409384:	add    BYTE PTR [rax],al
  409386:	add    BYTE PTR [rax],al
  409388:	mov    al,0x97
  40938a:	add    BYTE PTR [rax],al
  40938c:	add    BYTE PTR [rax],al
  40938e:	add    BYTE PTR [rax],al
  409390:	(bad)  
  409391:	xchg   edi,eax
  409392:	add    BYTE PTR [rax],al
  409394:	add    BYTE PTR [rax],al
  409396:	add    BYTE PTR [rax],al
  409398:	rcl    BYTE PTR [rdi+0x0],cl
  40939e:	add    BYTE PTR [rax],al
  4093a0:	out    dx,al
  4093a1:	xchg   edi,eax
  4093a2:	add    BYTE PTR [rax],al
  4093a4:	add    BYTE PTR [rax],al
  4093a6:	add    BYTE PTR [rax],al
  4093a8:	add    BYTE PTR [rax+0x0],bl
	...
  4093b6:	add    BYTE PTR [rax],al
  4093b8:	adc    BYTE PTR [rax+0x0],bl
  4093be:	add    BYTE PTR [rax],al
  4093c0:	sub    BYTE PTR [rax+0x0],bl
  4093c6:	add    BYTE PTR [rax],al
  4093c8:	ss cwde 
  4093ca:	add    BYTE PTR [rax],al
  4093cc:	add    BYTE PTR [rax],al
  4093ce:	add    BYTE PTR [rax],al
  4093d0:	rex.RX cwde 
  4093d2:	add    BYTE PTR [rax],al
  4093d4:	add    BYTE PTR [rax],al
  4093d6:	add    BYTE PTR [rax],al
  4093d8:	push   rdx
  4093d9:	cwde   
  4093da:	add    BYTE PTR [rax],al
  4093dc:	add    BYTE PTR [rax],al
  4093de:	add    BYTE PTR [rax],al
  4093e0:	(bad)  
  4093e1:	cwde   
  4093e2:	add    BYTE PTR [rax],al
  4093e4:	add    BYTE PTR [rax],al
  4093e6:	add    BYTE PTR [rax],al
  4093e8:	jo     0x409382
  4093ea:	add    BYTE PTR [rax],al
  4093ec:	add    BYTE PTR [rax],al
  4093ee:	add    BYTE PTR [rax],al
  4093f0:	(bad)  
  4093f1:	cwde   
  4093f2:	add    BYTE PTR [rax],al
  4093f4:	add    BYTE PTR [rax],al
  4093f6:	add    BYTE PTR [rax],al
  4093f8:	xchg   esi,eax
  4093f9:	cwde   
  4093fa:	add    BYTE PTR [rax],al
  4093fc:	add    BYTE PTR [rax],al
  4093fe:	add    BYTE PTR [rax],al
  409400:	movabs al,ds:0xae00000000000098
  409409:	cwde   
  40940a:	add    BYTE PTR [rax],al
  40940c:	add    BYTE PTR [rax],al
  40940e:	add    BYTE PTR [rax],al
  409410:	mov    eax,0x98
  409415:	add    BYTE PTR [rax],al
  409417:	add    ah,al
  409419:	cwde   
  40941a:	add    BYTE PTR [rax],al
  40941c:	add    BYTE PTR [rax],al
  40941e:	add    BYTE PTR [rax],al
  409420:	(bad)  
  409421:	cwde   
  409422:	add    BYTE PTR [rax],al
  409424:	add    BYTE PTR [rax],al
  409426:	add    BYTE PTR [rax],al
  409428:	fcomp  DWORD PTR [rax+0x0]
  40942e:	add    BYTE PTR [rax],al
  409430:	in     al,0x98
  409432:	add    BYTE PTR [rax],al
  409434:	add    BYTE PTR [rax],al
  409436:	add    BYTE PTR [rax],al
  409438:	in     al,dx
  409439:	cwde   
  40943a:	add    BYTE PTR [rax],al
  40943c:	add    BYTE PTR [rax],al
  40943e:	add    BYTE PTR [rax],al
  409440:	neg    BYTE PTR [rax+0x0]
  409446:	add    BYTE PTR [rax],al
  409448:	add    BYTE PTR [rcx+0x0],bl
  40944e:	add    BYTE PTR [rax],al
  409450:	or     bl,BYTE PTR [rcx+0x0]
  409456:	add    BYTE PTR [rax],al
  409458:	adc    bl,BYTE PTR [rcx+0x0]
  40945e:	add    BYTE PTR [rax],al
  409460:	sbb    al,0x99
  409462:	add    BYTE PTR [rax],al
  409464:	add    BYTE PTR [rax],al
  409466:	add    BYTE PTR [rax],al
  409468:	and    al,0x99
  40946a:	add    BYTE PTR [rax],al
  40946c:	add    BYTE PTR [rax],al
  40946e:	add    BYTE PTR [rax],al
  409470:	cs cdq 
  409472:	add    BYTE PTR [rax],al
  409474:	add    BYTE PTR [rax],al
  409476:	add    BYTE PTR [rax],al
  409478:	ss cdq 
  40947a:	add    BYTE PTR [rax],al
  40947c:	add    BYTE PTR [rax],al
  40947e:	add    BYTE PTR [rax],al
  409480:	ds cdq 
  409482:	add    BYTE PTR [rax],al
  409484:	add    BYTE PTR [rax],al
  409486:	add    BYTE PTR [rax],al
  409488:	cqo    
  40948a:	add    BYTE PTR [rax],al
  40948c:	add    BYTE PTR [rax],al
  40948e:	add    BYTE PTR [rax],al
  409490:	push   rdx
  409491:	cdq    
  409492:	add    BYTE PTR [rax],al
  409494:	add    BYTE PTR [rax],al
  409496:	add    BYTE PTR [rax],al
  409498:	pop    rsp
  409499:	cdq    
  40949a:	add    BYTE PTR [rax],al
  40949c:	add    BYTE PTR [rax],al
  40949e:	add    BYTE PTR [rax],al
  4094a0:	cwd    
  4094a2:	add    BYTE PTR [rax],al
  4094a4:	add    BYTE PTR [rax],al
  4094a6:	add    BYTE PTR [rax],al
  4094a8:	jo     0x409443
  4094aa:	add    BYTE PTR [rax],al
  4094ac:	add    BYTE PTR [rax],al
  4094ae:	add    BYTE PTR [rax],al
  4094b0:	jp     0x40944b
  4094b2:	add    BYTE PTR [rax],al
  4094b4:	add    BYTE PTR [rax],al
  4094b6:	add    BYTE PTR [rax],al
  4094b8:	test   BYTE PTR [rcx+0x0],bl
  4094be:	add    BYTE PTR [rax],al
  4094c0:	mov    ds,WORD PTR [rcx+0x0]
  4094c6:	add    BYTE PTR [rax],al
  4094c8:	cwde   
  4094c9:	cdq    
  4094ca:	add    BYTE PTR [rax],al
  4094cc:	add    BYTE PTR [rax],al
  4094ce:	add    BYTE PTR [rax],al
  4094d0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4094d1:	cdq    
	...
  4094de:	add    BYTE PTR [rax],al
  4094e0:	adc    eax,DWORD PTR [rcx]
  4094e2:	fs (bad) 
  4094e4:	jne    0x409559
  4094e6:	pop    rdi
  4094e7:	(bad)  
  4094e8:	jne    0x40955d
  4094ea:	pop    rdi
  4094eb:	addr32 gs je 0x4094ef
  4094ef:	add    BYTE PTR [rbx+0x1],cl
  4094f2:	fs (bad) 
  4094f4:	jne    0x409569
  4094f6:	pop    rdi
  4094f7:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4094fa:	outs   dx,BYTE PTR ds:[rsi]
  4094fb:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  409500:	outs   dx,BYTE PTR ds:[rsi]
  409501:	pop    rdi
  409502:	jae    0x409569
  409504:	outs   dx,BYTE PTR ds:[rsi]
  409505:	fs pop rdi
  409507:	ja     0x409572
  409509:	je     0x409573
  40950b:	pop    rdi
  40950c:	jb     0x409573
  40950e:	jo     0x40957c
  409510:	jns    0x409571
  409512:	(bad)  
  409513:	outs   dx,BYTE PTR ds:[rsi]
  409514:	fs pop rdi
  409516:	(bad)  
  409517:	ins    BYTE PTR es:[rdi],dx
  409518:	outs   dx,DWORD PTR ds:[rsi]
  409519:	movsxd ebp,DWORD PTR [rbx+0x0]
  40951c:	pop    rsi
  40951d:	add    DWORD PTR [rdx+riz*2+0x75],esp
  409521:	jae    0x409582
  409523:	movsxd ebp,DWORD PTR [rdi+0x6e]
  409526:	outs   dx,BYTE PTR ds:[rsi]
  409527:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40952c:	outs   dx,BYTE PTR ds:[rsi]
  40952d:	pop    rdi
  40952e:	jne    0x40959e
  409530:	jb     0x409597
  409532:	data16 add BYTE PTR [rbx+0x1],dh
  409536:	fs (bad) 
  409538:	jne    0x4095ad
  40953a:	pop    rdi
  40953b:	ins    DWORD PTR es:[rdi],dx
  40953c:	gs jae 0x4095b2
  40953f:	(bad)  
  409540:	addr32 gs pop rdi
  409543:	addr32 gs je 0x4095a6
  409547:	(bad)  
  409548:	jb     0x4095b1
  40954a:	jae    0x40954c
  40954c:	lea    eax,[rcx]
  40954e:	fs (bad) 
  409550:	jne    0x4095c5
  409552:	pop    rdi
  409553:	ins    DWORD PTR es:[rdi],dx
  409554:	gs jae 0x4095ca
  409557:	(bad)  
  409558:	addr32 gs pop rdi
  40955b:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x7070615f
  409563:	outs   dx,BYTE PTR gs:[rsi]
  409565:	fs pop rdi
  409567:	(bad)  
  409569:	jae    0x4095d4
  40956b:	movsxd eax,DWORD PTR [rax]
  40956d:	add    BYTE PTR [rax],al
  40956f:	add    BYTE PTR [rdi+0x75626401],cl
  409575:	jae    0x4095d6
  409577:	ins    DWORD PTR es:[rdi],dx
  409578:	gs jae 0x4095ee
  40957b:	(bad)  
  40957c:	addr32 gs pop rdi
  40957f:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x6f6c635f
  409587:	jae    0x4095ee
  409589:	pop    rdi
  40958a:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40958d:	je     0x4095f0
  40958f:	imul   ebp,DWORD PTR [rsi+0x65],0x1990072
  409596:	fs (bad) 
  409598:	jne    0x40960d
  40959a:	pop    rdi
  40959b:	ins    DWORD PTR es:[rdi],dx
  40959c:	gs jae 0x409612
  40959f:	(bad)  
  4095a0:	addr32 gs pop rdi
  4095a3:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x696e695f
  4095ab:	je     0x40960c
  4095ad:	(bad)  
  4095ae:	jo     0x409620
  4095b0:	outs   dx,BYTE PTR gs:[rsi]
  4095b2:	add    BYTE PTR fs:[rbx+0x75626401],bl
  4095b9:	jae    0x40961a
  4095bb:	ins    DWORD PTR es:[rdi],dx
  4095bc:	gs jae 0x409632
  4095bf:	(bad)  
  4095c0:	addr32 gs pop rdi
  4095c3:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x65706f5f
  4095cb:	outs   dx,BYTE PTR ds:[rsi]
  4095cc:	pop    rdi
  4095cd:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4095d0:	je     0x409633
  4095d2:	imul   ebp,DWORD PTR [rsi+0x65],0xa2000072
  4095d9:	add    DWORD PTR [rdx+riz*2+0x75],esp
  4095dd:	jae    0x40963e
  4095df:	ins    DWORD PTR es:[rdi],dx
  4095e0:	gs jae 0x409656
  4095e3:	(bad)  
  4095e4:	addr32 gs pop rdi
  4095e7:	outs   dx,BYTE PTR ds:[rsi]
  4095e8:	gs ja  0x40964a
  4095eb:	ins    DWORD PTR es:[rdi],dx
  4095ec:	gs je  0x409657
  4095ef:	outs   dx,DWORD PTR ds:[rsi]
  4095f0:	fs pop rdi
  4095f2:	movsxd esp,DWORD PTR [rcx+0x6c]
  4095f5:	ins    BYTE PTR es:[rdi],dx
  4095f6:	add    BYTE PTR [rax],al
  4095f8:	mov    ah,0x1
  4095fa:	fs (bad) 
  4095fc:	jne    0x409671
  4095fe:	pop    rdi
  4095ff:	ins    DWORD PTR es:[rdi],dx
  409600:	gs jae 0x409676
  409603:	(bad)  
  409604:	addr32 gs pop rdi
  409607:	jne    0x409677
  409609:	jb     0x409670
  40960b:	data16 add BYTE PTR [rax],al
  40960e:	add    BYTE PTR [rax],al
  409610:	out    dx,eax
  409611:	add    DWORD PTR [rdx+riz*2+0x75],esp
  409615:	jae    0x409676
  409617:	jbe    0x40967a
  409619:	ins    BYTE PTR es:[rdi],dx
  40961a:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x74755f65
  409622:	data16 cmp BYTE PTR [rax],al
  409625:	add    BYTE PTR [rax],al
  409627:	add    al,bl
  409629:	add    BYTE PTR [rbp+riz*2+0x6c],al
  40962d:	gs je  0x409695
  409630:	rex.XB jb 0x40969c
  409633:	je     0x40969e
  409635:	movsxd esp,DWORD PTR [rcx+0x6c]
  409638:	push   rbx
  409639:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40963e:	outs   dx,BYTE PTR ds:[rsi]
  40963f:	add    al,bh
  409641:	add    BYTE PTR [rbp+0x6e],al
  409644:	je     0x4096ab
  409646:	jb     0x40968b
  409648:	jb     0x4096b3
  40964a:	je     0x4096b5
  40964c:	movsxd esp,DWORD PTR [rcx+0x6c]
  40964f:	push   rbx
  409650:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  409655:	outs   dx,BYTE PTR ds:[rsi]
  409656:	add    BYTE PTR [rax],al
  409658:	int    0x1
  40965a:	rex.RXB
  40965b:	gs je  0x4096a1
  40965e:	jne    0x4096d2
  409660:	jb     0x4096c7
  409662:	outs   dx,BYTE PTR ds:[rsi]
  409663:	je     0x4096b5
  409665:	jb     0x4096d6
  409667:	movsxd esp,DWORD PTR [rbp+0x73]
  40966a:	jae    0x40966c
  40966c:	(bad)  
  40966d:	add    DWORD PTR [rdi+0x65],eax
  409670:	je     0x4096b5
  409672:	jne    0x4096e6
  409674:	jb     0x4096db
  409676:	outs   dx,BYTE PTR ds:[rsi]
  409677:	je     0x4096c9
  409679:	jb     0x4096ea
  40967b:	movsxd esp,DWORD PTR [rbp+0x73]
  40967e:	jae    0x4096c9
  409680:	fs add dl,dl
  409683:	add    DWORD PTR [rdi+0x65],eax
  409686:	je     0x4096cb
  409688:	jne    0x4096fc
  40968a:	jb     0x4096f1
  40968c:	outs   dx,BYTE PTR ds:[rsi]
  40968d:	je     0x4096e3
  40968f:	push   0x64616572
  409694:	rex.WB
  409695:	add    BYTE PTR fs:[rax],al
  409698:	adc    BYTE PTR [rdx],al
  40969a:	rex.RXB
  40969b:	gs je  0x4096ea
  40969e:	(bad)  
  40969f:	jae    0x409715
  4096a1:	rex.RB jb 0x409716
  4096a4:	outs   dx,DWORD PTR ds:[rsi]
  4096a5:	jb     0x4096a7
  4096a7:	add    BYTE PTR [rbx+0x2],dh
  4096aa:	rex.RXB
  4096ab:	gs je  0x409701
  4096ae:	je     0x409711
  4096b0:	jb     0x409726
  4096b2:	jne    0x409724
  4096b4:	rex.WB outs dx,BYTE PTR ds:[rsi]
  4096b6:	outs   dx,WORD PTR ds:[rsi]
  4096b8:	add    BYTE PTR [r10+0x74654702],cl
  4096bf:	push   rbx
  4096c0:	jns    0x409735
  4096c2:	je     0x409729
  4096c4:	ins    DWORD PTR es:[rdi],dx
  4096c5:	push   rsp
  4096c6:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  4096cd:	ins    BYTE PTR es:[rdi],dx
  4096ce:	gs push rsp
  4096d0:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  4096d7:	gs je  0x40972e
  4096da:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  4096e1:	je     0x4096e3
  4096e3:	add    cl,bh
  4096e5:	add    cl,BYTE PTR [rcx+0x6e]
  4096e8:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  4096f0:	rex.XB jb 0x40975c
  4096f3:	je     0x40975e
  4096f5:	movsxd esp,DWORD PTR [rcx+0x6c]
  4096f8:	push   rbx
  4096f9:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4096fe:	outs   dx,BYTE PTR ds:[rsi]
  4096ff:	add    BYTE PTR [rbx+0x3],cl
  409702:	rex.WR
  409703:	gs (bad) 
  409705:	jbe    0x40976c
  409707:	rex.XB jb 0x409773
  40970a:	je     0x409775
  40970c:	movsxd esp,DWORD PTR [rcx+0x6c]
  40970f:	push   rbx
  409710:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  409715:	outs   dx,BYTE PTR ds:[rsi]
  409716:	add    BYTE PTR [rax],al
  409718:	mov    ebx,0x65755103
  40971d:	jb     0x409798
  40971f:	push   rax
  409720:	gs jb  0x409789
  409723:	outs   dx,DWORD PTR ds:[rsi]
  409724:	jb     0x409793
  409726:	(bad)  
  409727:	outs   dx,BYTE PTR ds:[rsi]
  409728:	movsxd esp,DWORD PTR [rbp+0x43]
  40972b:	outs   dx,DWORD PTR ds:[rsi]
  40972c:	jne    0x40979c
  40972e:	je     0x409795
  409730:	jb     0x409732
  409732:	add    DWORD PTR [rdx+rdx*2],eax
  409735:	je     0x4097a3
  409737:	rex.B
  409738:	fs fs rex.RX jne 0x4097ab
  40973d:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  409741:	outs   dx,BYTE PTR ds:[rsi]
  409742:	push   rsp
  409743:	(bad)  
  409744:	(bad)  
  409745:	ins    BYTE PTR es:[rdi],dx
  409746:	add    BYTE PTR gs:[rdx],al
  409749:	add    al,0x52
  40974b:	je     0x4097b9
  40974d:	rex.XB (bad) 
  40974f:	jo     0x4097c5
  409751:	jne    0x4097c5
  409753:	rex.XB outs dx,DWORD PTR gs:[rsi]
  409756:	outs   dx,BYTE PTR ds:[rsi]
  409757:	je     0x4097be
  409759:	js     0x4097cf
  40975b:	add    BYTE PTR [rcx],cl
  40975d:	add    al,0x52
  40975f:	je     0x4097cd
  409761:	rex.WR outs dx,DWORD PTR ds:[rsi]
  409763:	outs   dx,DWORD PTR ds:[rsi]
  409764:	imul   esi,DWORD PTR [rbp+0x70],0x46
  409768:	jne    0x4097d8
  40976a:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40976e:	outs   dx,BYTE PTR ds:[rsi]
  40976f:	rex.RB outs dx,BYTE PTR ds:[rsi]
  409771:	je     0x4097e5
  409773:	jns    0x409775
  409775:	add    BYTE PTR [rax],dl
  409777:	add    al,0x52
  409779:	je     0x4097e7
  40977b:	push   rsi
  40977c:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  409783:	outs   dx,BYTE PTR ds:[rsi]
  409784:	ja     0x4097ef
  409786:	outs   dx,BYTE PTR ds:[rsi]
  409787:	add    BYTE PTR fs:[rax],al
  40978a:	lahf   
  40978b:	add    al,0x53
  40978d:	gs je  0x4097e5
  409790:	outs   dx,BYTE PTR ds:[rsi]
  409791:	push   0x6c646e61
  409796:	gs fs rex.RB js 0x4097fe
  40979b:	gs jo  0x409812
  40979e:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  4097a5:	gs jb  0x4097a8
  4097a8:	lods   al,BYTE PTR ds:[rsi]
  4097a9:	add    al,0x53
  4097ab:	ins    BYTE PTR es:[rdi],dx
  4097ac:	gs gs jo 0x4097b0
  4097b0:	mov    edx,0x72655404
  4097b5:	ins    DWORD PTR es:[rdi],dx
  4097b6:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  4097bd:	outs   dx,DWORD PTR ds:[rsi]
  4097be:	movsxd esp,DWORD PTR [rbp+0x73]
  4097c1:	jae    0x4097c3
  4097c3:	add    cl,al
  4097c5:	add    al,0x54
  4097c7:	ins    BYTE PTR es:[rdi],dx
  4097c8:	jae    0x409811
  4097ca:	gs je  0x409823
  4097cd:	(bad)  
  4097ce:	ins    BYTE PTR es:[rdi],dx
  4097cf:	jne    0x409836
  4097d1:	add    dh,cl
  4097d3:	add    al,0x55
  4097d5:	outs   dx,BYTE PTR ds:[rsi]
  4097d6:	push   0x6c646e61
  4097db:	gs fs rex.RB js 0x409843
  4097e0:	gs jo  0x409857
  4097e3:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  4097ea:	gs jb  0x4097ed
  4097ed:	add    ah,ch
  4097ef:	add    al,0x56
  4097f1:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  4097f8:	jb     0x409869
  4097fa:	je     0x409861
  4097fc:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  409800:	out    dx,al
  409801:	add    al,0x56
  409803:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40980a:	jne    0x409871
  40980c:	jb     0x409887
  40980e:	add    BYTE PTR [rax],al
  409810:	(bad)  
  409811:	add    BYTE PTR [rdi+0x5f],bl
  409814:	rex.XB pop r15
  409816:	jae    0x409888
  409818:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40981c:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  409823:	ins    BYTE PTR es:[rdi],dx
  409824:	gs jb  0x409827
  409827:	add    BYTE PTR [rsi+0x0],cl
  40982a:	pop    rdi
  40982b:	pop    rdi
  40982c:	fs ins BYTE PTR es:[rdi],dx
  40982e:	ins    BYTE PTR es:[rdi],dx
  40982f:	outs   dx,DWORD PTR ds:[rsi]
  409830:	outs   dx,BYTE PTR ds:[rsi]
  409831:	gs js  0x40989d
  409834:	je     0x409836
  409836:	push   rcx
  409837:	add    BYTE PTR [rdi+0x5f],bl
  40983a:	addr32 gs je 0x4098ab
  40983e:	(bad)  
  40983f:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  409846:	push   rdx
  409847:	add    BYTE PTR [rdi+0x5f],bl
  40984a:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  409851:	add    BYTE PTR [rbx+0x0],dl
  409854:	pop    rdi
  409855:	pop    rdi
  409856:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  40985d:	movsxd eax,DWORD PTR [rax]
  40985f:	add    BYTE PTR [rdx+0x0],bl
  409862:	pop    rdi
  409863:	pop    rdi
  409864:	ins    BYTE PTR es:[rdi],dx
  409865:	movsxd ebp,DWORD PTR [rdi+0x6e]
  409868:	jbe    0x4098c9
  40986a:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  409871:	add    BYTE PTR [rdi+0x5f],bl
  409874:	jae    0x4098db
  409876:	je     0x4098d7
  409878:	(bad)  
  409879:	jo     0x4098eb
  40987b:	pop    rdi
  40987c:	je     0x4098f7
  40987e:	jo     0x4098e5
  409880:	add    BYTE PTR [rax],al
  409882:	(bad)  
  409883:	add    BYTE PTR [rdi+0x5f],bl
  409886:	jae    0x4098ed
  409888:	je     0x4098ff
  40988a:	jae    0x4098f1
  40988c:	jb     0x4098fb
  40988e:	(bad)  
  40988f:	je     0x4098f9
  409891:	gs jb  0x409906
  409894:	add    BYTE PTR [rax],al
  409896:	jno    0x409898
  409898:	pop    rdi
  409899:	(bad)  
  40989a:	movsxd ebp,DWORD PTR [rbp+0x64]
  40989d:	ins    BYTE PTR es:[rdi],dx
  40989e:	outs   dx,BYTE PTR ds:[rsi]
  40989f:	add    BYTE PTR [rax+0x0],bh
  4098a2:	pop    rdi
  4098a3:	(bad)  
  4098a4:	ins    DWORD PTR es:[rdi],dx
  4098a5:	jae    0x40990e
  4098a7:	pop    rdi
  4098a8:	gs js  0x409914
  4098ab:	je     0x4098ad
  4098ad:	add    BYTE PTR [rdx+0x65635f00],cl
  4098b3:	js     0x40991e
  4098b5:	je     0x4098b7
  4098b7:	add    BYTE PTR [rax+0x6e655f00],bh
  4098bd:	jbe    0x409928
  4098bf:	jb     0x409930
  4098c1:	outs   dx,BYTE PTR ds:[rsi]
  4098c2:	add    BYTE PTR [rax],al
  4098c4:	mov    edx,0x72655f00
  4098c9:	jb     0x409939
  4098cb:	outs   dx,DWORD PTR ds:[rsi]
  4098cc:	add    BYTE PTR [rax],al
  4098ce:	fiadd  DWORD PTR [rax]
  4098d0:	pop    rdi
  4098d1:	ins    WORD PTR es:[rdi],dx
  4098d3:	outs   dx,DWORD PTR ds:[rsi]
  4098d4:	fs add BYTE PTR gs:[rax],al
  4098d8:	sbb    al,BYTE PTR [rcx]
  4098da:	pop    rdi
  4098db:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  4098e2:	ins    DWORD PTR es:[rdi],dx
  4098e3:	add    BYTE PTR [rax+0x6f6c5f01],al
  4098e9:	movsxd ebp,DWORD PTR [rbx+0x0]
  4098ec:	and    eax,0x6e6f5f02
  4098f1:	gs js  0x40995d
  4098f4:	je     0x4098f6
  4098f6:	(bad)
  4098fa:	outs   dx,BYTE PTR ds:[rsi]
  4098fb:	ins    BYTE PTR es:[rdi],dx
  4098fc:	outs   dx,DWORD PTR ds:[rsi]
  4098fd:	movsxd ebp,DWORD PTR [rbx+0x0]
  409900:	pop    rax
  409901:	add    ebx,DWORD PTR [rdi+0x77]
  409904:	jb     0x40996f
  409906:	je     0x40996d
  409908:	add    BYTE PTR [rax],al
  40990a:	jg     0x40990f
  40990c:	(bad)  
  40990d:	(bad)  
  40990e:	outs   dx,DWORD PTR ds:[rsi]
  40990f:	jb     0x409985
  409911:	add    BYTE PTR [rax+0x6c616303],dl
  409917:	ins    BYTE PTR es:[rdi],dx
  409918:	outs   dx,DWORD PTR ds:[rsi]
  409919:	movsxd eax,DWORD PTR [rax]
  40991b:	add    BYTE PTR [rbp+0x69786503],bl
  409921:	je     0x409923
  409923:	add    BYTE PTR [rax+0x72706603],dh
  409929:	imul   ebp,DWORD PTR [rsi+0x74],0x3b20066
  409930:	data16 jo 0x4099a8
  409933:	je     0x409998
  409935:	add    BYTE PTR [rdi+0x65726603],dh
  40993b:	add    BYTE PTR gs:[rax],al
  40993e:	ret    0x6603
  409941:	ja     0x4099b5
  409943:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6703c700
  40994b:	gs je  0x4099b3
  40994e:	outs   dx,BYTE PTR ds:[rsi]
  40994f:	jbe    0x409951
  409951:	add    al,dh
  409953:	add    ebp,DWORD PTR [rbp+0x61]
  409956:	ins    BYTE PTR es:[rdi],dx
  409957:	ins    BYTE PTR es:[rdi],dx
  409958:	outs   dx,DWORD PTR ds:[rsi]
  409959:	movsxd eax,DWORD PTR [rax]
  40995b:	add    al,bh
  40995d:	add    ebp,DWORD PTR [rbp+0x65]
  409960:	ins    DWORD PTR es:[rdi],dx
  409961:	movsxd esi,DWORD PTR [rax+0x79]
  409964:	add    BYTE PTR [rax],al
  409966:	(bad)  
  409967:	add    al,0x73
  409969:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  409970:	and    eax,DWORD PTR [rbx+rsi*2]
  409973:	je     0x4099e7
  409975:	movsxd ebp,DWORD PTR [rax+0x72]
  409978:	add    BYTE PTR [rax],al
  40997a:	and    al,0x4
  40997c:	jae    0x4099f2
  40997e:	jb     0x4099e3
  409980:	ins    DWORD PTR es:[rdi],dx
  409981:	jo     0x409983
  409983:	add    BYTE PTR [rbx],ch
  409985:	add    al,0x73
  409987:	je     0x4099fb
  409989:	ins    BYTE PTR es:[rdi],dx
  40998a:	outs   dx,BYTE PTR gs:[rsi]
  40998c:	add    BYTE PTR [rax],al
  40998e:	cs add al,0x73
  409991:	je     0x409a05
  409993:	outs   dx,BYTE PTR ds:[rsi]
  409994:	movsxd ebp,DWORD PTR [rbp+0x70]
  409997:	add    BYTE PTR [rsi+0x4],cl
  40999a:	jbe    0x409a02
  40999c:	jo     0x409a10
  40999e:	imul   ebp,DWORD PTR [rsi+0x74],0xbe000066
  4099a5:	add    al,0x5f
  4099a7:	jae    0x409a1d
  4099a9:	jb     0x409a0f
  4099ab:	jne    0x409a1d
  4099ad:	add    BYTE PTR [rax],al
  4099af:	add    BYTE PTR [rax],al
  4099b1:	nop
  4099b2:	add    BYTE PTR [rax],al
  4099b4:	add    BYTE PTR [rax-0x70000000],dl
  4099ba:	add    BYTE PTR [rax],al
  4099bc:	add    BYTE PTR [rax-0x70000000],dl
  4099c2:	add    BYTE PTR [rax],al
  4099c4:	add    BYTE PTR [rax-0x70000000],dl
  4099ca:	add    BYTE PTR [rax],al
  4099cc:	add    BYTE PTR [rax-0x70000000],dl
  4099d2:	add    BYTE PTR [rax],al
  4099d4:	add    BYTE PTR [rax-0x70000000],dl
  4099da:	add    BYTE PTR [rax],al
  4099dc:	ins    BYTE PTR es:[rdi],dx
  4099dd:	imul   esp,DWORD PTR [rdx+0x64],0x2d737562
  4099e4:	xor    DWORD PTR [rip+0x6c642e33],ebp        # 0x6ca4c81d
  4099ea:	ins    BYTE PTR es:[rdi],dx
  4099eb:	add    BYTE PTR [rax+rdx*4],dl
  4099ee:	add    BYTE PTR [rax],al
  4099f0:	adc    al,0x90
  4099f2:	add    BYTE PTR [rax],al
  4099f4:	adc    al,0x90
  4099f6:	add    BYTE PTR [rax],al
  4099f8:	adc    al,0x90
  4099fa:	add    BYTE PTR [rax],al
  4099fc:	adc    al,0x90
  4099fe:	add    BYTE PTR [rax],al
  409a00:	adc    al,0x90
  409a02:	add    BYTE PTR [rax],al
  409a04:	adc    al,0x90
  409a06:	add    BYTE PTR [rax],al
  409a08:	adc    al,0x90
  409a0a:	add    BYTE PTR [rax],al
  409a0c:	adc    al,0x90
  409a0e:	add    BYTE PTR [rax],al
  409a10:	adc    al,0x90
  409a12:	add    BYTE PTR [rax],al
  409a14:	adc    al,0x90
  409a16:	add    BYTE PTR [rax],al
  409a18:	adc    al,0x90
  409a1a:	add    BYTE PTR [rax],al
  409a1c:	adc    al,0x90
  409a1e:	add    BYTE PTR [rax],al
  409a20:	adc    al,0x90
  409a22:	add    BYTE PTR [rax],al
  409a24:	adc    al,0x90
  409a26:	add    BYTE PTR [rax],al
  409a28:	adc    al,0x90
  409a2a:	add    BYTE PTR [rax],al
  409a2c:	adc    al,0x90
  409a2e:	add    BYTE PTR [rax],al
  409a30:	adc    al,0x90
  409a32:	add    BYTE PTR [rax],al
  409a34:	adc    al,0x90
  409a36:	add    BYTE PTR [rax],al
  409a38:	adc    al,0x90
  409a3a:	add    BYTE PTR [rax],al
  409a3c:	adc    al,0x90
  409a3e:	add    BYTE PTR [rax],al
  409a40:	adc    al,0x90
  409a42:	add    BYTE PTR [rax],al
  409a44:	adc    al,0x90
  409a46:	add    BYTE PTR [rax],al
  409a48:	rex.WXB
  409a49:	rex.RB push r10
  409a4b:	rex.WRX
  409a4c:	rex.RB
  409a4d:	xor    r14,QWORD PTR [rdx]
  409a50:	cs fs ins BYTE PTR es:[rdi],dx
  409a53:	ins    BYTE PTR es:[rdi],dx
  409a54:	add    BYTE PTR [rax],al
  409a56:	add    BYTE PTR [rax],al
  409a58:	sub    BYTE PTR [rax-0x6fd80000],dl
  409a5e:	add    BYTE PTR [rax],al
  409a60:	sub    BYTE PTR [rax-0x6fd80000],dl
  409a66:	add    BYTE PTR [rax],al
  409a68:	sub    BYTE PTR [rax-0x6fd80000],dl
  409a6e:	add    BYTE PTR [rax],al
  409a70:	sub    BYTE PTR [rax-0x6fd80000],dl
  409a76:	add    BYTE PTR [rax],al
  409a78:	sub    BYTE PTR [rax-0x6fd80000],dl
  409a7e:	add    BYTE PTR [rax],al
  409a80:	sub    BYTE PTR [rax-0x6fd80000],dl
  409a86:	add    BYTE PTR [rax],al
  409a88:	sub    BYTE PTR [rax-0x6fd80000],dl
  409a8e:	add    BYTE PTR [rax],al
  409a90:	sub    BYTE PTR [rax-0x6fd80000],dl
  409a96:	add    BYTE PTR [rax],al
  409a98:	sub    BYTE PTR [rax-0x6fd80000],dl
  409a9e:	add    BYTE PTR [rax],al
  409aa0:	sub    BYTE PTR [rax-0x6fd80000],dl
  409aa6:	add    BYTE PTR [rax],al
  409aa8:	sub    BYTE PTR [rax-0x6fd80000],dl
  409aae:	add    BYTE PTR [rax],al
  409ab0:	sub    BYTE PTR [rax-0x6fd80000],dl
  409ab6:	add    BYTE PTR [rax],al
  409ab8:	sub    BYTE PTR [rax-0x6fd80000],dl
  409abe:	add    BYTE PTR [rax],al
  409ac0:	sub    BYTE PTR [rax-0x6fd80000],dl
  409ac6:	add    BYTE PTR [rax],al
  409ac8:	sub    BYTE PTR [rax-0x6fd80000],dl
  409ace:	add    BYTE PTR [rax],al
  409ad0:	sub    BYTE PTR [rax-0x6fd80000],dl
  409ad6:	add    BYTE PTR [rax],al
  409ad8:	sub    BYTE PTR [rax-0x6fd80000],dl
  409ade:	add    BYTE PTR [rax],al
  409ae0:	sub    BYTE PTR [rax-0x6fd80000],dl
  409ae6:	add    BYTE PTR [rax],al
  409ae8:	ins    DWORD PTR es:[rdi],dx
  409ae9:	jae    0x409b61
  409aeb:	movsxd esi,DWORD PTR [rdx+0x74]
  409aee:	cs fs ins BYTE PTR es:[rdi],dx
  409af1:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

000000000040a000 <.CRT>:
	...
  40a008:	(bad)  
  40a009:	adc    DWORD PTR [rax+0x0],eax
	...
  40a020:	adc    BYTE PTR [rax],dl
  40a022:	add    BYTE PTR [rax],al
  40a025:	add    BYTE PTR [rax],al
  40a027:	add    BYTE PTR [rax],dl
  40a029:	and    BYTE PTR [rax+0x0],al
	...
  40a040:	and    al,BYTE PTR [rax+0x0]
  40a044:	add    BYTE PTR [rax],al
  40a046:	add    BYTE PTR [rax],al
  40a048:	adc    BYTE PTR [rdx],ah
  40a04a:	add    BYTE PTR [rax],al
	...

Disassembly of section .tls:

000000000040b000 <.tls>:
	...
  40b020:	add    BYTE PTR [rax+0x40],dh
  40b026:	add    BYTE PTR [rax],al
  40b028:	(bad)  
  40b029:	mov    al,0x40
  40b02b:	add    BYTE PTR [rax],al
  40b02d:	add    BYTE PTR [rax],al
  40b02f:	add    BYTE PTR [rsi+rax*4+0x40],bl
  40b033:	add    BYTE PTR [rax],al
  40b035:	add    BYTE PTR [rax],al
  40b037:	add    BYTE PTR [rax-0x60],al
  40b03a:	add    BYTE PTR [rax],al
	...
