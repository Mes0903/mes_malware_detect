
fbe5548641d632402786dd2b8435d7fd312ed101c17554e69759b9f52bf52be6.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	sub    rsp,0x28
   140001004:	mov    r8,rcx
   140001007:	lea    rcx,[rip+0x45f02]        # 0x140046f10
   14000100e:	mov    edx,0x104
   140001013:	call   0x14000781c
   140001018:	mov    al,0x1
   14000101a:	add    rsp,0x28
   14000101e:	ret    
   14000101f:	int3   
   140001020:	sub    rsp,0x28
   140001024:	mov    r8,rcx
   140001027:	lea    rcx,[rip+0x45c52]        # 0x140046c80
   14000102e:	mov    edx,0x40
   140001033:	call   0x14000781c
   140001038:	mov    al,0x1
   14000103a:	add    rsp,0x28
   14000103e:	ret    
   14000103f:	int3   
   140001040:	sub    rsp,0x28
   140001044:	mov    r8,rcx
   140001047:	lea    rcx,[rip+0x45cb2]        # 0x140046d00
   14000104e:	mov    edx,0x104
   140001053:	call   0x14000781c
   140001058:	mov    al,0x1
   14000105a:	add    rsp,0x28
   14000105e:	ret    
   14000105f:	int3   
   140001060:	sub    rsp,0x28
   140001064:	mov    eax,DWORD PTR [rip+0x43f96]        # 0x140045000
   14000106a:	lea    r8,[rsp+0x38]
   14000106f:	lea    rdx,[rip+0x34a1e]        # 0x140035a94
   140001076:	mov    DWORD PTR [rsp+0x38],eax
   14000107a:	call   0x140007ad0
   14000107f:	cmp    eax,0x1
   140001082:	jne    0x140001099
   140001084:	mov    eax,DWORD PTR [rsp+0x38]
   140001088:	test   eax,eax
   14000108a:	js     0x140001099
   14000108c:	mov    DWORD PTR [rip+0x43f6e],eax        # 0x140045000
   140001092:	mov    al,0x1
   140001094:	add    rsp,0x28
   140001098:	ret    
   140001099:	xor    al,al
   14000109b:	add    rsp,0x28
   14000109f:	ret    
   1400010a0:	sub    rsp,0x28
   1400010a4:	lea    r8,[rip+0x43f59]        # 0x140045004
   1400010ab:	lea    rdx,[rip+0x349e2]        # 0x140035a94
   1400010b2:	call   0x140007ad0
   1400010b7:	cmp    eax,0x1
   1400010ba:	jne    0x1400010ca
   1400010bc:	cmp    DWORD PTR [rip+0x43f41],0x0        # 0x140045004
   1400010c3:	je     0x1400010ca
   1400010c5:	add    rsp,0x28
   1400010c9:	ret    
   1400010ca:	xor    al,al
   1400010cc:	add    rsp,0x28
   1400010d0:	ret    
   1400010d1:	int3   
   1400010d2:	int3   
   1400010d3:	int3   
   1400010d4:	int3   
   1400010d5:	int3   
   1400010d6:	int3   
   1400010d7:	int3   
   1400010d8:	int3   
   1400010d9:	int3   
   1400010da:	int3   
   1400010db:	int3   
   1400010dc:	int3   
   1400010dd:	int3   
   1400010de:	int3   
   1400010df:	int3   
   1400010e0:	or     DWORD PTR [rip+0x45e21],0x1        # 0x140046f08
   1400010e7:	mov    al,0x1
   1400010e9:	ret    
   1400010ea:	int3   
   1400010eb:	int3   
   1400010ec:	int3   
   1400010ed:	int3   
   1400010ee:	int3   
   1400010ef:	int3   
   1400010f0:	or     DWORD PTR [rip+0x45e11],0x2        # 0x140046f08
   1400010f7:	mov    al,0x1
   1400010f9:	ret    
   1400010fa:	int3   
   1400010fb:	int3   
   1400010fc:	int3   
   1400010fd:	int3   
   1400010fe:	int3   
   1400010ff:	int3   
   140001100:	or     DWORD PTR [rip+0x45e01],0x4        # 0x140046f08
   140001107:	mov    al,0x1
   140001109:	ret    
   14000110a:	int3   
   14000110b:	int3   
   14000110c:	int3   
   14000110d:	int3   
   14000110e:	int3   
   14000110f:	int3   
   140001110:	or     DWORD PTR [rip+0x45df1],0x8        # 0x140046f08
   140001117:	mov    al,0x1
   140001119:	ret    
   14000111a:	int3   
   14000111b:	int3   
   14000111c:	int3   
   14000111d:	int3   
   14000111e:	int3   
   14000111f:	int3   
   140001120:	sub    rsp,0x28
   140001124:	lea    r8,[rip+0x45de1]        # 0x140046f0c
   14000112b:	lea    rdx,[rip+0x34962]        # 0x140035a94
   140001132:	call   0x140007ad0
   140001137:	cmp    eax,0x1
   14000113a:	jne    0x14000114a
   14000113c:	cmp    DWORD PTR [rip+0x45dc9],0x0        # 0x140046f0c
   140001143:	je     0x14000114a
   140001145:	add    rsp,0x28
   140001149:	ret    
   14000114a:	xor    al,al
   14000114c:	add    rsp,0x28
   140001150:	ret    
   140001151:	int3   
   140001152:	int3   
   140001153:	int3   
   140001154:	int3   
   140001155:	int3   
   140001156:	int3   
   140001157:	int3   
   140001158:	int3   
   140001159:	int3   
   14000115a:	int3   
   14000115b:	int3   
   14000115c:	int3   
   14000115d:	int3   
   14000115e:	int3   
   14000115f:	int3   
   140001160:	mov    QWORD PTR [rsp+0x8],rbx
   140001165:	mov    QWORD PTR [rsp+0x10],rsi
   14000116a:	push   rdi
   14000116b:	sub    rsp,0x30
   14000116f:	lea    rcx,[rip+0x3492a]        # 0x140035aa0
   140001176:	call   0x14000795c
   14000117b:	xor    edi,edi
   14000117d:	lea    rbx,[rip+0x43eb4]        # 0x140045038
   140001184:	lea    rsi,[rip+0x3495d]        # 0x140035ae8
   14000118b:	nop    DWORD PTR [rax+rax*1+0x0]
   140001190:	cmp    BYTE PTR [rbx],0x0
   140001193:	mov    rax,QWORD PTR [rbx-0x10]
   140001197:	mov    r9,QWORD PTR [rbx-0x18]
   14000119b:	mov    r8,QWORD PTR [rbx-0x20]
   14000119f:	mov    rdx,QWORD PTR [rbx-0x28]
   1400011a3:	mov    QWORD PTR [rsp+0x28],rax
   1400011a8:	lea    rcx,[rip+0x34942]        # 0x140035af1
   1400011af:	cmovne rcx,rsi
   1400011b3:	mov    QWORD PTR [rsp+0x20],rcx
   1400011b8:	lea    rcx,[rip+0x34939]        # 0x140035af8
   1400011bf:	call   0x14000795c
   1400011c4:	inc    edi
   1400011c6:	lea    rbx,[rbx+0x30]
   1400011ca:	movsxd rax,edi
   1400011cd:	cmp    rax,0xb
   1400011d1:	jb     0x140001190
   1400011d3:	lea    rcx,[rip+0x34936]        # 0x140035b10
   1400011da:	mov    rbx,QWORD PTR [rsp+0x40]
   1400011df:	mov    rsi,QWORD PTR [rsp+0x48]
   1400011e4:	add    rsp,0x30
   1400011e8:	pop    rdi
   1400011e9:	jmp    0x14000795c
   1400011ee:	int3   
   1400011ef:	int3   
   1400011f0:	mov    DWORD PTR [rcx+0x8],edx
   1400011f3:	ret    
   1400011f4:	int3   
   1400011f5:	int3   
   1400011f6:	int3   
   1400011f7:	int3   
   1400011f8:	int3   
   1400011f9:	int3   
   1400011fa:	int3   
   1400011fb:	int3   
   1400011fc:	int3   
   1400011fd:	int3   
   1400011fe:	int3   
   1400011ff:	int3   
   140001200:	mov    DWORD PTR [rcx+0x360],edx
   140001206:	ret    
   140001207:	int3   
   140001208:	int3   
   140001209:	int3   
   14000120a:	int3   
   14000120b:	int3   
   14000120c:	int3   
   14000120d:	int3   
   14000120e:	int3   
   14000120f:	int3   
   140001210:	rex push rbx
   140001212:	push   r14
   140001214:	sub    rsp,0x48
   140001218:	lea    rdx,[rsp+0x30]
   14000121d:	xor    r14d,r14d
   140001220:	mov    rcx,r8
   140001223:	mov    DWORD PTR [rsp+0x30],r14d
   140001228:	call   QWORD PTR [rip+0x341c2]        # 0x1400353f0
   14000122e:	mov    rbx,rax
   140001231:	test   rax,rax
   140001234:	jne    0x140001241
   140001236:	lea    eax,[rbx+0x1]
   140001239:	add    rsp,0x48
   14000123d:	pop    r14
   14000123f:	pop    rbx
   140001240:	ret    
   140001241:	mov    QWORD PTR [rsp+0x60],rbp
   140001246:	mov    QWORD PTR [rsp+0x68],rsi
   14000124b:	mov    esi,DWORD PTR [rsp+0x30]
   14000124f:	cmp    esi,0x1
   140001252:	mov    QWORD PTR [rsp+0x70],rdi
   140001257:	mov    edi,r14d
   14000125a:	setle  bpl
   14000125e:	test   esi,esi
   140001260:	jle    0x140001361
   140001266:	mov    QWORD PTR [rsp+0x40],r15
   14000126b:	lea    r15,[rip+0x43dae]        # 0x140045020
   140001272:	test   bpl,bpl
   140001275:	jne    0x14000135c
   14000127b:	mov    r11,QWORD PTR [rbx]
   14000127e:	mov    r10d,r14d
   140001281:	mov    r9,r15
   140001284:	nop    DWORD PTR [rax+0x0]
   140001288:	nop    DWORD PTR [rax+rax*1+0x0]
   140001290:	mov    r8,QWORD PTR [r9-0x10]
   140001294:	mov    rax,r11
   140001297:	sub    r8,r11
   14000129a:	nop    WORD PTR [rax+rax*1+0x0]
   1400012a0:	movzx  edx,WORD PTR [rax]
   1400012a3:	movzx  ecx,WORD PTR [rax+r8*1]
   1400012a8:	sub    edx,ecx
   1400012aa:	jne    0x1400012b4
   1400012ac:	add    rax,0x2
   1400012b0:	test   ecx,ecx
   1400012b2:	jne    0x1400012a0
   1400012b4:	test   edx,edx
   1400012b6:	je     0x14000131e
   1400012b8:	mov    r8,QWORD PTR [r9-0x8]
   1400012bc:	mov    rax,r11
   1400012bf:	sub    r8,r11
   1400012c2:	movzx  edx,WORD PTR [rax]
   1400012c5:	movzx  ecx,WORD PTR [rax+r8*1]
   1400012ca:	sub    edx,ecx
   1400012cc:	jne    0x1400012d6
   1400012ce:	add    rax,0x2
   1400012d2:	test   ecx,ecx
   1400012d4:	jne    0x1400012c2
   1400012d6:	test   edx,edx
   1400012d8:	je     0x14000131e
   1400012da:	mov    r8,QWORD PTR [r9]
   1400012dd:	test   r8,r8
   1400012e0:	je     0x140001308
   1400012e2:	mov    rax,r11
   1400012e5:	sub    r8,r11
   1400012e8:	nop    DWORD PTR [rax+rax*1+0x0]
   1400012f0:	movzx  edx,WORD PTR [rax]
   1400012f3:	movzx  ecx,WORD PTR [rax+r8*1]
   1400012f8:	sub    edx,ecx
   1400012fa:	jne    0x140001304
   1400012fc:	add    rax,0x2
   140001300:	test   ecx,ecx
   140001302:	jne    0x1400012f0
   140001304:	test   edx,edx
   140001306:	je     0x14000131e
   140001308:	inc    r10d
   14000130b:	add    r9,0x30
   14000130f:	movsxd rax,r10d
   140001312:	cmp    rax,0xb
   140001316:	jb     0x140001290
   14000131c:	jmp    0x14000134b
   14000131e:	mov    rcx,r14
   140001321:	cmp    BYTE PTR [r9+0x18],cl
   140001325:	je     0x140001338
   140001327:	lea    eax,[rsi-0x1]
   14000132a:	cmp    edi,eax
   14000132c:	jge    0x14000134b
   14000132e:	mov    rcx,QWORD PTR [rbx+0x8]
   140001332:	inc    edi
   140001334:	add    rbx,0x8
   140001338:	mov    rax,QWORD PTR [r9+0x10]
   14000133c:	test   rax,rax
   14000133f:	je     0x14000134b
   140001341:	call   rax
   140001343:	mov    esi,DWORD PTR [rsp+0x30]
   140001347:	test   al,al
   140001349:	jne    0x14000134e
   14000134b:	mov    bpl,0x1
   14000134e:	inc    edi
   140001350:	add    rbx,0x8
   140001354:	cmp    edi,esi
   140001356:	jl     0x140001272
   14000135c:	mov    r15,QWORD PTR [rsp+0x40]
   140001361:	cmp    WORD PTR [rip+0x45ba7],r14w        # 0x140046f10
   140001369:	mov    rsi,QWORD PTR [rsp+0x68]
   14000136e:	je     0x140001468
   140001374:	test   bpl,bpl
   140001377:	jne    0x140001468
   14000137d:	cmp    WORD PTR [rip+0x458fb],r14w        # 0x140046c80
   140001385:	lea    rdx,[rip+0x45974]        # 0x140046d00
   14000138c:	setne  cl
   14000138f:	call   0x140006f90
   140001394:	lea    rdx,[rip+0x34795]        # 0x140035b30
   14000139b:	mov    r9d,0x3
   1400013a1:	mov    rdi,rax
   1400013a4:	mov    eax,DWORD PTR [rip+0x43c56]        # 0x140045000
   1400013aa:	mov    r8d,0x144
   1400013b0:	mov    DWORD PTR [rdi+0x8],eax
   1400013b3:	lea    rax,[rip+0x3475a]        # 0x140035b14
   1400013ba:	mov    rcx,rdi
   1400013bd:	mov    QWORD PTR [rsp+0x28],rax
   1400013c2:	lea    rax,[rip+0x3474f]        # 0x140035b18
   1400013c9:	mov    QWORD PTR [rsp+0x20],rax
   1400013ce:	call   0x140006ce0
   1400013d3:	mov    ecx,DWORD PTR [rip+0x45b2f]        # 0x140046f08
   1400013d9:	lea    rdx,[rip+0x458a0]        # 0x140046c80
   1400013e0:	mov    r8,rdi
   1400013e3:	call   0x140002150
   1400013e8:	lea    rdx,[rip+0x45b21]        # 0x140046f10
   1400013ef:	mov    rcx,rax
   1400013f2:	mov    eax,DWORD PTR [rip+0x45b14]        # 0x140046f0c
   1400013f8:	mov    DWORD PTR [rcx+0x360],eax
   1400013fe:	mov    r8d,DWORD PTR [rip+0x43bff]        # 0x140045004
   140001405:	call   0x140002600
   14000140a:	lea    rcx,[rip+0x34777]        # 0x140035b88
   140001411:	lea    rdx,[rip+0x34718]        # 0x140035b30
   140001418:	movzx  ebx,al
   14000141b:	lea    rax,[rip+0x3475e]        # 0x140035b80
   140001422:	mov    r9d,0x3
   140001428:	test   bl,bl
   14000142a:	mov    r8d,0x14d
   140001430:	cmovne rcx,rax
   140001434:	lea    rax,[rip+0x34755]        # 0x140035b90
   14000143b:	mov    QWORD PTR [rsp+0x28],rcx
   140001440:	mov    rcx,rdi
   140001443:	mov    QWORD PTR [rsp+0x20],rax
   140001448:	call   0x140006ce0
   14000144d:	mov    rbp,QWORD PTR [rsp+0x60]
   140001452:	mov    rdi,QWORD PTR [rsp+0x70]
   140001457:	test   bl,bl
   140001459:	sete   r14b
   14000145d:	mov    eax,r14d
   140001460:	add    rsp,0x48
   140001464:	pop    r14
   140001466:	pop    rbx
   140001467:	ret    
   140001468:	call   0x140001160
   14000146d:	mov    rbp,QWORD PTR [rsp+0x60]
   140001472:	mov    rdi,QWORD PTR [rsp+0x70]
   140001477:	mov    eax,0x2
   14000147c:	add    rsp,0x48
   140001480:	pop    r14
   140001482:	pop    rbx
   140001483:	ret    
   140001484:	int3   
   140001485:	int3   
   140001486:	int3   
   140001487:	int3   
   140001488:	int3   
   140001489:	int3   
   14000148a:	int3   
   14000148b:	int3   
   14000148c:	int3   
   14000148d:	int3   
   14000148e:	int3   
   14000148f:	int3   
   140001490:	mov    QWORD PTR [rsp+0x8],rbx
   140001495:	mov    QWORD PTR [rsp+0x10],rbp
   14000149a:	mov    QWORD PTR [rsp+0x18],rsi
   14000149f:	mov    QWORD PTR [rsp+0x20],rdi
   1400014a4:	push   r14
   1400014a6:	sub    rsp,0xb0
   1400014ad:	mov    rbx,rcx
   1400014b0:	xor    r14d,r14d
   1400014b3:	mov    rax,r8
   1400014b6:	lea    rcx,[rip+0x3498b]        # 0x140035e48
   1400014bd:	mov    DWORD PTR [rbx+0x8],edx
   1400014c0:	lea    r9d,[r14+0x4]
   1400014c4:	mov    QWORD PTR [rbx],rcx
   1400014c7:	lea    rcx,[rip+0x3499a]        # 0x140035e68
   1400014ce:	lea    r8d,[r14+0x26]
   1400014d2:	mov    QWORD PTR [rsp+0x20],rcx
   1400014d7:	lea    rdx,[rip+0x349a2]        # 0x140035e80
   1400014de:	mov    rcx,rax
   1400014e1:	mov    QWORD PTR [rbx+0x10],rax
   1400014e5:	mov    QWORD PTR [rbx+0x18],r14
   1400014e9:	mov    QWORD PTR [rbx+0x20],r14
   1400014ed:	mov    QWORD PTR [rbx+0x128],r14
   1400014f4:	mov    BYTE PTR [rbx+0x130],r14b
   1400014fb:	mov    QWORD PTR [rbx+0x138],r14
   140001502:	mov    QWORD PTR [rbx+0x140],r14
   140001509:	mov    BYTE PTR [rbx+0x148],r14b
   140001510:	mov    QWORD PTR [rbx+0x150],r14
   140001517:	mov    DWORD PTR [rbx+0x360],r14d
   14000151e:	mov    QWORD PTR [rbx+0x368],r14
   140001525:	call   0x140006ce0
   14000152a:	xor    ecx,ecx
   14000152c:	mov    WORD PTR [rbx+0x158],r14w
   140001534:	call   QWORD PTR [rip+0x33b3e]        # 0x140035078
   14000153a:	mov    sil,0x1
   14000153d:	lea    rdi,[rbx+0x28]
   140001541:	mov    rbp,rax
   140001544:	call   QWORD PTR [rip+0x33c6e]        # 0x1400351b8
   14000154a:	lea    r8,[rip+0x3497f]        # 0x140035ed0
   140001551:	mov    edx,0x80
   140001556:	mov    rcx,rdi
   140001559:	mov    r9d,eax
   14000155c:	call   0x140003f90
   140001561:	xor    eax,eax
   140001563:	lea    rcx,[rsp+0x60]
   140001568:	mov    QWORD PTR [rsp+0x68],rax
   14000156d:	mov    QWORD PTR [rsp+0x78],rax
   140001572:	mov    QWORD PTR [rsp+0xa0],rax
   14000157a:	mov    QWORD PTR [rsp+0x70],rax
   14000157f:	mov    QWORD PTR [rsp+0x80],rax
   140001587:	mov    QWORD PTR [rsp+0x88],rax
   14000158f:	mov    QWORD PTR [rsp+0x90],rax
   140001597:	mov    QWORD PTR [rsp+0x98],rax
   14000159f:	lea    rax,[rip+0x155a]        # 0x140002b00
   1400015a6:	mov    DWORD PTR [rsp+0x60],r14d
   1400015ab:	mov    QWORD PTR [rsp+0xa0],rdi
   1400015b3:	mov    QWORD PTR [rsp+0x78],rbp
   1400015b8:	mov    QWORD PTR [rsp+0x68],rax
   1400015bd:	call   QWORD PTR [rip+0x33e65]        # 0x140035428
   1400015c3:	test   ax,ax
   1400015c6:	jne    0x140001613
   1400015c8:	call   QWORD PTR [rip+0x33c1a]        # 0x1400351e8
   1400015ce:	mov    rcx,QWORD PTR [rbx+0x10]
   1400015d2:	lea    r9d,[r14+0x1]
   1400015d6:	mov    DWORD PTR [rsp+0x30],eax
   1400015da:	lea    rax,[rip+0x34927]        # 0x140035f08
   1400015e1:	lea    r8d,[r14+0x36]
   1400015e5:	lea    rdx,[rip+0x34894]        # 0x140035e80
   1400015ec:	mov    QWORD PTR [rsp+0x28],rdi
   1400015f1:	mov    QWORD PTR [rsp+0x20],rax
   1400015f6:	call   0x140006ce0
   1400015fb:	xor    edx,edx
   1400015fd:	mov    r8d,0x100
   140001603:	mov    rcx,rdi
   140001606:	xor    sil,sil
   140001609:	call   0x140009800
   14000160e:	jmp    0x14000169f
   140001613:	mov    QWORD PTR [rsp+0x58],r14
   140001618:	mov    QWORD PTR [rsp+0x50],rbp
   14000161d:	mov    QWORD PTR [rsp+0x48],r14
   140001622:	mov    QWORD PTR [rsp+0x40],r14
   140001627:	mov    DWORD PTR [rsp+0x38],0x80000000
   14000162f:	mov    DWORD PTR [rsp+0x30],0x80000000
   140001637:	mov    r9d,0x80000000
   14000163d:	mov    r8,rdi
   140001640:	mov    rdx,rdi
   140001643:	xor    ecx,ecx
   140001645:	mov    DWORD PTR [rsp+0x28],0x80000000
   14000164d:	mov    DWORD PTR [rsp+0x20],0x80000000
   140001655:	call   QWORD PTR [rip+0x33dc5]        # 0x140035420
   14000165b:	mov    QWORD PTR [rbx+0x128],rax
   140001662:	test   rax,rax
   140001665:	jne    0x1400016ba
   140001667:	call   QWORD PTR [rip+0x33b7b]        # 0x1400351e8
   14000166d:	mov    rcx,QWORD PTR [rbx+0x10]
   140001671:	mov    r9d,0x1
   140001677:	mov    DWORD PTR [rsp+0x30],eax
   14000167b:	lea    rax,[rip+0x348be]        # 0x140035f40
   140001682:	lea    r8d,[r9+0x4a]
   140001686:	lea    rdx,[rip+0x347f3]        # 0x140035e80
   14000168d:	mov    QWORD PTR [rsp+0x28],rdi
   140001692:	mov    QWORD PTR [rsp+0x20],rax
   140001697:	call   0x140006ce0
   14000169c:	xor    sil,sil
   14000169f:	mov    rcx,QWORD PTR [rbx+0x128]
   1400016a6:	test   rcx,rcx
   1400016a9:	je     0x1400016e0
   1400016ab:	call   QWORD PTR [rip+0x33d67]        # 0x140035418
   1400016b1:	mov    QWORD PTR [rbx+0x128],r14
   1400016b8:	jmp    0x1400016e0
   1400016ba:	mov    r8,rbx
   1400016bd:	mov    edx,0xffffffeb
   1400016c2:	mov    rcx,rax
   1400016c5:	call   QWORD PTR [rip+0x33d35]        # 0x140035400
   1400016cb:	test   BYTE PTR [rbx+0x8],0x1
   1400016cf:	je     0x1400016e0
   1400016d1:	mov    rcx,rbx
   1400016d4:	call   0x140001f30
   1400016d9:	mov    QWORD PTR [rbx+0x140],rax
   1400016e0:	lea    rcx,[rip+0x34891]        # 0x140035f78
   1400016e7:	test   sil,sil
   1400016ea:	mov    r9d,0x3
   1400016f0:	lea    rax,[rip+0x3489d]        # 0x140035f94
   1400016f7:	lea    rdx,[rip+0x34782]        # 0x140035e80
   1400016fe:	lea    r8d,[r9+0x61]
   140001702:	cmovne rax,rcx
   140001706:	mov    rcx,QWORD PTR [rbx+0x10]
   14000170a:	mov    QWORD PTR [rsp+0x28],rax
   14000170f:	lea    rax,[rip+0x3488a]        # 0x140035fa0
   140001716:	mov    QWORD PTR [rsp+0x20],rax
   14000171b:	call   0x140006ce0
   140001720:	lea    r11,[rsp+0xb0]
   140001728:	mov    rbp,QWORD PTR [r11+0x18]
   14000172c:	mov    rsi,QWORD PTR [r11+0x20]
   140001730:	mov    rdi,QWORD PTR [r11+0x28]
   140001734:	mov    rax,rbx
   140001737:	mov    rbx,QWORD PTR [r11+0x10]
   14000173b:	mov    rsp,r11
   14000173e:	pop    r14
   140001740:	ret    
   140001741:	int3   
   140001742:	int3   
   140001743:	int3   
   140001744:	int3   
   140001745:	int3   
   140001746:	int3   
   140001747:	int3   
   140001748:	int3   
   140001749:	int3   
   14000174a:	int3   
   14000174b:	int3   
   14000174c:	int3   
   14000174d:	int3   
   14000174e:	int3   
   14000174f:	int3   
   140001750:	lea    rax,[rip+0x346f1]        # 0x140035e48
   140001757:	mov    QWORD PTR [rcx],rax
   14000175a:	jmp    0x140001b90
   14000175f:	int3   
   140001760:	lea    rax,[rip+0x346e1]        # 0x140035e48
   140001767:	mov    QWORD PTR [rcx],rax
   14000176a:	jmp    0x140001b90
   14000176f:	int3   
   140001770:	mov    QWORD PTR [rsp+0x8],rbx
   140001775:	push   rdi
   140001776:	sub    rsp,0x20
   14000177a:	mov    ebx,edx
   14000177c:	mov    rdi,rcx
   14000177f:	call   0x140007150
   140001784:	test   bl,0x1
   140001787:	je     0x140001791
   140001789:	mov    rcx,rdi
   14000178c:	call   0x140007d8c
   140001791:	mov    rax,rdi
   140001794:	mov    rbx,QWORD PTR [rsp+0x30]
   140001799:	add    rsp,0x20
   14000179d:	pop    rdi
   14000179e:	ret    
   14000179f:	int3   
   1400017a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400017a5:	push   rdi
   1400017a6:	sub    rsp,0x20
   1400017aa:	lea    rax,[rip+0x34697]        # 0x140035e48
   1400017b1:	mov    ebx,edx
   1400017b3:	mov    rdi,rcx
   1400017b6:	mov    QWORD PTR [rcx],rax
   1400017b9:	call   0x140001b90
   1400017be:	test   bl,0x1
   1400017c1:	je     0x1400017cb
   1400017c3:	mov    rcx,rdi
   1400017c6:	call   0x140007d8c
   1400017cb:	mov    rax,rdi
   1400017ce:	mov    rbx,QWORD PTR [rsp+0x30]
   1400017d3:	add    rsp,0x20
   1400017d7:	pop    rdi
   1400017d8:	ret    
   1400017d9:	int3   
   1400017da:	int3   
   1400017db:	int3   
   1400017dc:	int3   
   1400017dd:	int3   
   1400017de:	int3   
   1400017df:	int3   
   1400017e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400017e5:	push   rdi
   1400017e6:	sub    rsp,0x20
   1400017ea:	mov    ebx,edx
   1400017ec:	mov    rdi,rcx
   1400017ef:	call   0x1400040a0
   1400017f4:	test   bl,0x1
   1400017f7:	je     0x140001801
   1400017f9:	mov    rcx,rdi
   1400017fc:	call   0x140007d8c
   140001801:	mov    rax,rdi
   140001804:	mov    rbx,QWORD PTR [rsp+0x30]
   140001809:	add    rsp,0x20
   14000180d:	pop    rdi
   14000180e:	ret    
   14000180f:	int3   
   140001810:	sub    rsp,0x28
   140001814:	mov    rax,rdx
   140001817:	lea    rdx,[rcx+0x10]
   14000181b:	mov    rcx,rax
   14000181e:	call   0x1400082d8
   140001823:	test   eax,eax
   140001825:	sete   al
   140001828:	add    rsp,0x28
   14000182c:	ret    
   14000182d:	int3   
   14000182e:	int3   
   14000182f:	int3   
   140001830:	mov    QWORD PTR [rsp+0x8],rbx
   140001835:	mov    QWORD PTR [rsp+0x10],rbp
   14000183a:	mov    QWORD PTR [rsp+0x18],rsi
   14000183f:	mov    QWORD PTR [rsp+0x20],rdi
   140001844:	push   r14
   140001846:	sub    rsp,0x30
   14000184a:	mov    r14d,edx
   14000184d:	mov    r9d,r8d
   140001850:	or     r8d,0xffffffff
   140001854:	xor    edx,edx
   140001856:	mov    rbp,rcx
   140001859:	call   0x140003900
   14000185e:	movzx  esi,al
   140001861:	test   al,al
   140001863:	je     0x1400018aa
   140001865:	mov    rbx,QWORD PTR [rbp+0x18]
   140001869:	test   rbx,rbx
   14000186c:	je     0x1400018f0
   140001872:	mov    edi,DWORD PTR [rbx+0x2b4]
   140001878:	lea    ecx,[rdi-0x3]
   14000187b:	cmp    ecx,0x1
   14000187e:	ja     0x140001899
   140001880:	mov    rdx,rbx
   140001883:	mov    rcx,rbp
   140001886:	call   0x140001a20
   14000188b:	cmp    edi,0x4
   14000188e:	jne    0x140001899
   140001890:	cmp    BYTE PTR [rbx+0x218],0x0
   140001897:	jne    0x1400018a7
   140001899:	mov    rbx,QWORD PTR [rbx+0x2c0]
   1400018a0:	test   rbx,rbx
   1400018a3:	jne    0x140001872
   1400018a5:	jmp    0x1400018f0
   1400018a7:	xor    sil,sil
   1400018aa:	cmp    r14d,0x8
   1400018ae:	ja     0x1400018bb
   1400018b0:	mov    eax,0x141
   1400018b5:	bt     eax,r14d
   1400018b9:	jb     0x1400018f0
   1400018bb:	mov    ecx,r14d
   1400018be:	call   0x140002b80
   1400018c3:	mov    rcx,QWORD PTR [rbp+0x10]
   1400018c7:	lea    rdx,[rip+0x345b2]        # 0x140035e80
   1400018ce:	mov    QWORD PTR [rsp+0x28],rax
   1400018d3:	lea    rax,[rip+0x34fde]        # 0x1400368b8
   1400018da:	mov    r9d,0x1
   1400018e0:	mov    r8d,0x3a9
   1400018e6:	mov    QWORD PTR [rsp+0x20],rax
   1400018eb:	call   0x140006ce0
   1400018f0:	mov    rbx,QWORD PTR [rsp+0x40]
   1400018f5:	mov    rbp,QWORD PTR [rsp+0x48]
   1400018fa:	mov    rdi,QWORD PTR [rsp+0x58]
   1400018ff:	movzx  eax,sil
   140001903:	mov    rsi,QWORD PTR [rsp+0x50]
   140001908:	add    rsp,0x30
   14000190c:	pop    r14
   14000190e:	ret    
   14000190f:	int3   
   140001910:	rex push rdi
   140001912:	sub    rsp,0x40
   140001916:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14000191f:	mov    QWORD PTR [rsp+0x50],rbx
   140001924:	mov    QWORD PTR [rsp+0x58],rsi
   140001929:	mov    rsi,rdx
   14000192c:	mov    rdi,rcx
   14000192f:	lea    rdx,[rip+0x45ff2]        # 0x140047928
   140001936:	mov    ecx,0x2d0
   14000193b:	call   0x140008af4
   140001940:	mov    QWORD PTR [rsp+0x60],rax
   140001945:	test   rax,rax
   140001948:	je     0x14000195a
   14000194a:	mov    rdx,rdi
   14000194d:	mov    rcx,rax
   140001950:	call   0x140003fc0
   140001955:	mov    rbx,rax
   140001958:	jmp    0x14000195c
   14000195a:	xor    ebx,ebx
   14000195c:	test   rbx,rbx
   14000195f:	jne    0x140001991
   140001961:	mov    QWORD PTR [rsp+0x28],rsi
   140001966:	lea    rax,[rip+0x34643]        # 0x140035fb0
   14000196d:	mov    QWORD PTR [rsp+0x20],rax
   140001972:	lea    r9d,[rbx+0x1]
   140001976:	mov    r8d,0xb3
   14000197c:	lea    rdx,[rip+0x344fd]        # 0x140035e80
   140001983:	mov    rcx,QWORD PTR [rdi+0x10]
   140001987:	call   0x140006ce0
   14000198c:	lea    eax,[rbx+0x1]
   14000198f:	jmp    0x140001a09
   140001991:	mov    rdx,rsi
   140001994:	mov    rcx,rbx
   140001997:	call   0x1400043b0
   14000199c:	test   al,al
   14000199e:	jne    0x1400019e4
   1400019a0:	mov    QWORD PTR [rsp+0x28],rsi
   1400019a5:	lea    rax,[rip+0x34634]        # 0x140035fe0
   1400019ac:	mov    QWORD PTR [rsp+0x20],rax
   1400019b1:	mov    r9d,0x2
   1400019b7:	mov    r8d,0xba
   1400019bd:	lea    rdx,[rip+0x344bc]        # 0x140035e80
   1400019c4:	mov    rcx,QWORD PTR [rdi+0x10]
   1400019c8:	call   0x140006ce0
   1400019cd:	mov    rcx,rbx
   1400019d0:	call   0x1400040a0
   1400019d5:	mov    rcx,rbx
   1400019d8:	call   0x140007d8c
   1400019dd:	mov    eax,0x2
   1400019e2:	jmp    0x140001a09
   1400019e4:	cmp    QWORD PTR [rdi+0x18],0x0
   1400019e9:	jne    0x1400019f1
   1400019eb:	mov    QWORD PTR [rdi+0x18],rbx
   1400019ef:	jmp    0x140001a03
   1400019f1:	mov    rax,QWORD PTR [rdi+0x20]
   1400019f5:	mov    QWORD PTR [rax+0x2c0],rbx
   1400019fc:	mov    QWORD PTR [rbx+0x2c8],rax
   140001a03:	mov    QWORD PTR [rdi+0x20],rbx
   140001a07:	xor    eax,eax
   140001a09:	mov    rbx,QWORD PTR [rsp+0x50]
   140001a0e:	mov    rsi,QWORD PTR [rsp+0x58]
   140001a13:	add    rsp,0x40
   140001a17:	pop    rdi
   140001a18:	ret    
   140001a19:	int3   
   140001a1a:	int3   
   140001a1b:	int3   
   140001a1c:	int3   
   140001a1d:	int3   
   140001a1e:	int3   
   140001a1f:	int3   
   140001a20:	mov    rax,rsp
   140001a23:	push   rdi
   140001a24:	sub    rsp,0x60
   140001a28:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   140001a30:	mov    QWORD PTR [rax+0x8],rbx
   140001a34:	mov    QWORD PTR [rax+0x10],rbp
   140001a38:	mov    QWORD PTR [rax+0x18],rsi
   140001a3c:	mov    rbx,rdx
   140001a3f:	mov    rdi,rcx
   140001a42:	cmp    DWORD PTR [rdx+0x2b0],0x1
   140001a49:	jl     0x140001b6a
   140001a4f:	mov    r8,QWORD PTR [rcx+0x10]
   140001a53:	mov    edx,DWORD PTR [rcx+0x360]
   140001a59:	lea    rcx,[rax-0x20]
   140001a5d:	call   0x1400054e0
   140001a62:	nop
   140001a63:	lea    rbp,[rbx+0x270]
   140001a6a:	mov    ecx,DWORD PTR [rbx+0x2b0]
   140001a70:	call   0x140002b80
   140001a75:	lea    rdx,[rip+0x34a84]        # 0x140036500
   140001a7c:	lea    rcx,[rip+0x34a8d]        # 0x140036510
   140001a83:	cmp    BYTE PTR [rbx+0x218],0x0
   140001a8a:	cmovne rcx,rdx
   140001a8e:	mov    QWORD PTR [rsp+0x38],rax
   140001a93:	mov    QWORD PTR [rsp+0x30],rbp
   140001a98:	mov    QWORD PTR [rsp+0x28],rcx
   140001a9d:	lea    rax,[rip+0x34a7c]        # 0x140036520
   140001aa4:	mov    QWORD PTR [rsp+0x20],rax
   140001aa9:	mov    r9d,0x3
   140001aaf:	mov    r8d,0x2ab
   140001ab5:	lea    rdx,[rip+0x343c4]        # 0x140035e80
   140001abc:	mov    rcx,QWORD PTR [rdi+0x10]
   140001ac0:	call   0x140006ce0
   140001ac5:	mov    r8,rbp
   140001ac8:	lea    rdx,[rip+0x34a79]        # 0x140036548
   140001acf:	mov    rcx,rdi
   140001ad2:	call   0x140001ce0
   140001ad7:	mov    rsi,QWORD PTR [rbx+0x2b8]
   140001ade:	cmp    DWORD PTR [rbx+0x2b0],0x3
   140001ae5:	jl     0x140001b16
   140001ae7:	mov    rcx,rbx
   140001aea:	call   0x140005170
   140001aef:	or     edx,0xffffffff
   140001af2:	mov    rcx,rsi
   140001af5:	call   QWORD PTR [rip+0x336d5]        # 0x1400351d0
   140001afb:	mov    rcx,rsi
   140001afe:	call   QWORD PTR [rip+0x336d4]        # 0x1400351d8
   140001b04:	mov    r8,rbp
   140001b07:	lea    rdx,[rip+0x34a62]        # 0x140036570
   140001b0e:	mov    rcx,rdi
   140001b11:	call   0x140001ce0
   140001b16:	mov    rcx,rbx
   140001b19:	call   0x140005340
   140001b1e:	or     edx,0xffffffff
   140001b21:	mov    rcx,rsi
   140001b24:	call   QWORD PTR [rip+0x336a6]        # 0x1400351d0
   140001b2a:	mov    rcx,rsi
   140001b2d:	call   QWORD PTR [rip+0x336a5]        # 0x1400351d8
   140001b33:	mov    r8,rbp
   140001b36:	lea    rdx,[rip+0x34a53]        # 0x140036590
   140001b3d:	mov    rcx,rdi
   140001b40:	call   0x140001ce0
   140001b45:	mov    rcx,rbx
   140001b48:	call   0x1400053e0
   140001b4d:	mov    r8,rbp
   140001b50:	lea    rdx,[rip+0x34a61]        # 0x1400365b8
   140001b57:	mov    rcx,rdi
   140001b5a:	call   0x140001ce0
   140001b5f:	nop
   140001b60:	lea    rcx,[rsp+0x48]
   140001b65:	call   0x1400055c0
   140001b6a:	mov    rbx,QWORD PTR [rsp+0x70]
   140001b6f:	mov    rbp,QWORD PTR [rsp+0x78]
   140001b74:	mov    rsi,QWORD PTR [rsp+0x80]
   140001b7c:	add    rsp,0x60
   140001b80:	pop    rdi
   140001b81:	ret    
   140001b82:	int3   
   140001b83:	int3   
   140001b84:	int3   
   140001b85:	int3   
   140001b86:	int3   
   140001b87:	int3   
   140001b88:	int3   
   140001b89:	int3   
   140001b8a:	int3   
   140001b8b:	int3   
   140001b8c:	int3   
   140001b8d:	int3   
   140001b8e:	int3   
   140001b8f:	int3   
   140001b90:	rex push rdi
   140001b92:	sub    rsp,0x40
   140001b96:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001b9f:	mov    QWORD PTR [rsp+0x50],rbx
   140001ba4:	mov    QWORD PTR [rsp+0x58],rbp
   140001ba9:	mov    QWORD PTR [rsp+0x60],rsi
   140001bae:	mov    rdi,rcx
   140001bb1:	mov    rbx,QWORD PTR [rcx+0x150]
   140001bb8:	test   rbx,rbx
   140001bbb:	je     0x140001bcd
   140001bbd:	mov    rcx,rbx
   140001bc0:	call   0x140007150
   140001bc5:	mov    rcx,rbx
   140001bc8:	call   0x140007d8c
   140001bcd:	xor    ebp,ebp
   140001bcf:	mov    QWORD PTR [rdi+0x150],rbp
   140001bd6:	mov    rcx,QWORD PTR [rdi+0x138]
   140001bdd:	test   rcx,rcx
   140001be0:	je     0x140001bef
   140001be2:	call   QWORD PTR [rip+0x33608]        # 0x1400351f0
   140001be8:	mov    QWORD PTR [rdi+0x138],rbp
   140001bef:	mov    rcx,QWORD PTR [rdi+0x140]
   140001bf6:	test   rcx,rcx
   140001bf9:	je     0x140001c08
   140001bfb:	call   QWORD PTR [rip+0x335ef]        # 0x1400351f0
   140001c01:	mov    QWORD PTR [rdi+0x140],rbp
   140001c08:	mov    rcx,QWORD PTR [rdi+0x368]
   140001c0f:	test   rcx,rcx
   140001c12:	je     0x140001c21
   140001c14:	call   QWORD PTR [rip+0x335d6]        # 0x1400351f0
   140001c1a:	mov    QWORD PTR [rdi+0x368],rbp
   140001c21:	cmp    BYTE PTR [rdi+0x130],bpl
   140001c28:	jne    0x140001c6f
   140001c2a:	mov    rcx,QWORD PTR [rdi+0x128]
   140001c31:	test   rcx,rcx
   140001c34:	je     0x140001c43
   140001c36:	call   QWORD PTR [rip+0x337dc]        # 0x140035418
   140001c3c:	mov    QWORD PTR [rdi+0x128],rbp
   140001c43:	cmp    WORD PTR [rdi+0x28],bp
   140001c47:	je     0x140001c6f
   140001c49:	xor    ecx,ecx
   140001c4b:	call   QWORD PTR [rip+0x33427]        # 0x140035078
   140001c51:	mov    rdx,rax
   140001c54:	lea    rcx,[rdi+0x28]
   140001c58:	call   QWORD PTR [rip+0x337fa]        # 0x140035458
   140001c5e:	xor    edx,edx
   140001c60:	mov    r8d,0x100
   140001c66:	lea    rcx,[rdi+0x28]
   140001c6a:	call   0x140009800
   140001c6f:	cmp    QWORD PTR [rdi+0x18],rbp
   140001c73:	je     0x140001cc4
   140001c75:	mov    r8,QWORD PTR [rdi+0x10]
   140001c79:	mov    edx,DWORD PTR [rdi+0x360]
   140001c7f:	lea    rcx,[rsp+0x28]
   140001c84:	call   0x1400054e0
   140001c89:	nop
   140001c8a:	mov    rsi,QWORD PTR [rdi+0x20]
   140001c8e:	test   rsi,rsi
   140001c91:	je     0x140001cb2
   140001c93:	mov    rbx,rsi
   140001c96:	mov    rsi,QWORD PTR [rsi+0x2c8]
   140001c9d:	mov    rcx,rbx
   140001ca0:	call   0x1400040a0
   140001ca5:	mov    rcx,rbx
   140001ca8:	call   0x140007d8c
   140001cad:	test   rsi,rsi
   140001cb0:	jne    0x140001c93
   140001cb2:	mov    QWORD PTR [rdi+0x20],rbp
   140001cb6:	mov    QWORD PTR [rdi+0x18],rbp
   140001cba:	lea    rcx,[rsp+0x28]
   140001cbf:	call   0x1400055c0
   140001cc4:	mov    rbx,QWORD PTR [rsp+0x50]
   140001cc9:	mov    rbp,QWORD PTR [rsp+0x58]
   140001cce:	mov    rsi,QWORD PTR [rsp+0x60]
   140001cd3:	add    rsp,0x40
   140001cd7:	pop    rdi
   140001cd8:	ret    
   140001cd9:	int3   
   140001cda:	int3   
   140001cdb:	int3   
   140001cdc:	int3   
   140001cdd:	int3   
   140001cde:	int3   
   140001cdf:	int3   
   140001ce0:	mov    r11,rsp
   140001ce3:	mov    QWORD PTR [r11+0x10],rdx
   140001ce7:	mov    QWORD PTR [r11+0x18],r8
   140001ceb:	mov    QWORD PTR [r11+0x20],r9
   140001cef:	push   rbx
   140001cf0:	push   rbp
   140001cf1:	push   rsi
   140001cf2:	push   r14
   140001cf4:	sub    rsp,0x178
   140001cfb:	mov    rax,QWORD PTR [rip+0x4356e]        # 0x140045270
   140001d02:	xor    rax,rsp
   140001d05:	mov    QWORD PTR [rsp+0x150],rax
   140001d0d:	mov    rbp,rcx
   140001d10:	lea    rax,[r11+0x18]
   140001d14:	mov    r9,rdx
   140001d17:	lea    rcx,[rsp+0x50]
   140001d1c:	or     r8,0xffffffffffffffff
   140001d20:	mov    edx,0x100
   140001d25:	mov    QWORD PTR [rsp+0x20],rax
   140001d2a:	call   0x140008c70
   140001d2f:	mov    rcx,QWORD PTR [rbp+0x138]
   140001d36:	xor    edx,edx
   140001d38:	lea    rbx,[rip+0x34b9d]        # 0x1400368dc
   140001d3f:	call   QWORD PTR [rip+0x3348b]        # 0x1400351d0
   140001d45:	cmp    eax,0x102
   140001d4a:	je     0x140001d55
   140001d4c:	lea    rax,[rip+0x34b95]        # 0x1400368e8
   140001d53:	jmp    0x140001d67
   140001d55:	cmp    BYTE PTR [rbp+0x130],0x0
   140001d5c:	lea    rax,[rip+0x34b8d]        # 0x1400368f0
   140001d63:	cmove  rax,rbx
   140001d67:	mov    rcx,QWORD PTR [rbp+0x10]
   140001d6b:	mov    QWORD PTR [rsp+0x30],rax
   140001d70:	lea    rax,[rsp+0x50]
   140001d75:	mov    QWORD PTR [rsp+0x28],rax
   140001d7a:	lea    rax,[rip+0x34b8f]        # 0x140036910
   140001d81:	lea    rdx,[rip+0x340f8]        # 0x140035e80
   140001d88:	mov    r9d,0x3
   140001d8e:	mov    r8d,0x3c0
   140001d94:	mov    QWORD PTR [rsp+0x20],rax
   140001d99:	call   0x140006ce0
   140001d9e:	mov    rcx,QWORD PTR [rbp+0x10]
   140001da2:	lea    rax,[rip+0x34b77]        # 0x140036920
   140001da9:	lea    rdx,[rip+0x340d0]        # 0x140035e80
   140001db0:	mov    r9d,0x4
   140001db6:	mov    r8d,0x3c2
   140001dbc:	mov    QWORD PTR [rsp+0x20],rax
   140001dc1:	call   0x140006ce0
   140001dc6:	mov    rsi,QWORD PTR [rbp+0x18]
   140001dca:	xor    r14d,r14d
   140001dcd:	test   rsi,rsi
   140001dd0:	je     0x140001e93
   140001dd6:	mov    QWORD PTR [rsp+0x170],rdi
   140001dde:	mov    QWORD PTR [rsp+0x168],r12
   140001de6:	mov    QWORD PTR [rsp+0x160],r15
   140001dee:	lea    r15,[rip+0x3470b]        # 0x140036500
   140001df5:	lea    r12,[rip+0x34b34]        # 0x140036930
   140001dfc:	nop    DWORD PTR [rax+0x0]
   140001e00:	cmp    BYTE PTR [rsi+0x218],0x0
   140001e07:	mov    ecx,DWORD PTR [rsi+0x2b0]
   140001e0d:	lea    rdi,[rip+0x346fc]        # 0x140036510
   140001e14:	cmovne rdi,r15
   140001e18:	call   0x140002b80
   140001e1d:	mov    ecx,DWORD PTR [rsi+0x2b4]
   140001e23:	mov    rbx,rax
   140001e26:	call   0x140002c40
   140001e2b:	mov    QWORD PTR [rsp+0x48],rdi
   140001e30:	mov    QWORD PTR [rsp+0x40],rbx
   140001e35:	mov    QWORD PTR [rsp+0x38],rax
   140001e3a:	lea    rcx,[rsi+0x270]
   140001e41:	mov    QWORD PTR [rsp+0x30],rcx
   140001e46:	mov    rcx,QWORD PTR [rbp+0x10]
   140001e4a:	lea    rdx,[rip+0x3402f]        # 0x140035e80
   140001e51:	mov    r9d,0x4
   140001e57:	mov    r8d,0x3cc
   140001e5d:	mov    DWORD PTR [rsp+0x28],r14d
   140001e62:	mov    QWORD PTR [rsp+0x20],r12
   140001e67:	call   0x140006ce0
   140001e6c:	mov    rsi,QWORD PTR [rsi+0x2c0]
   140001e73:	inc    r14d
   140001e76:	test   rsi,rsi
   140001e79:	jne    0x140001e00
   140001e7b:	mov    r15,QWORD PTR [rsp+0x160]
   140001e83:	mov    r12,QWORD PTR [rsp+0x168]
   140001e8b:	mov    rdi,QWORD PTR [rsp+0x170]
   140001e93:	mov    rcx,QWORD PTR [rsp+0x150]
   140001e9b:	xor    rcx,rsp
   140001e9e:	call   0x1400097d0
   140001ea3:	add    rsp,0x178
   140001eaa:	pop    r14
   140001eac:	pop    rsi
   140001ead:	pop    rbp
   140001eae:	pop    rbx
   140001eaf:	ret    
   140001eb0:	mov    QWORD PTR [rcx+0x2c0],rdx
   140001eb7:	mov    QWORD PTR [rdx+0x2c8],rcx
   140001ebe:	ret    
   140001ebf:	int3   
   140001ec0:	mov    QWORD PTR [rsp+0x8],rbx
   140001ec5:	push   rdi
   140001ec6:	sub    rsp,0x20
   140001eca:	mov    rbx,QWORD PTR [rcx+0x18]
   140001ece:	mov    rdi,rdx
   140001ed1:	test   rbx,rbx
   140001ed4:	je     0x140001efc
   140001ed6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140001ee0:	lea    rdx,[rbx+0x10]
   140001ee4:	mov    rcx,rdi
   140001ee7:	call   0x1400082d8
   140001eec:	test   eax,eax
   140001eee:	je     0x140001f09
   140001ef0:	mov    rbx,QWORD PTR [rbx+0x2c0]
   140001ef7:	test   rbx,rbx
   140001efa:	jne    0x140001ee0
   140001efc:	xor    eax,eax
   140001efe:	mov    rbx,QWORD PTR [rsp+0x30]
   140001f03:	add    rsp,0x20
   140001f07:	pop    rdi
   140001f08:	ret    
   140001f09:	mov    rax,rbx
   140001f0c:	mov    rbx,QWORD PTR [rsp+0x30]
   140001f11:	add    rsp,0x20
   140001f15:	pop    rdi
   140001f16:	ret    
   140001f17:	int3   
   140001f18:	int3   
   140001f19:	int3   
   140001f1a:	int3   
   140001f1b:	int3   
   140001f1c:	int3   
   140001f1d:	int3   
   140001f1e:	int3   
   140001f1f:	int3   
   140001f20:	lea    rax,[rcx+0x270]
   140001f27:	ret    
   140001f28:	int3   
   140001f29:	int3   
   140001f2a:	int3   
   140001f2b:	int3   
   140001f2c:	int3   
   140001f2d:	int3   
   140001f2e:	int3   
   140001f2f:	int3   
   140001f30:	rex push rbp
   140001f32:	push   rdi
   140001f33:	push   r14
   140001f35:	sub    rsp,0x290
   140001f3c:	mov    rax,QWORD PTR [rip+0x4332d]        # 0x140045270
   140001f43:	xor    rax,rsp
   140001f46:	mov    QWORD PTR [rsp+0x280],rax
   140001f4e:	mov    r14,rcx
   140001f51:	xor    ebp,ebp
   140001f53:	xor    edx,edx
   140001f55:	lea    ecx,[rbp+0x2]
   140001f58:	call   0x1400076fc
   140001f5d:	mov    rdi,rax
   140001f60:	cmp    rax,0xffffffffffffffff
   140001f64:	jne    0x140001f9b
   140001f66:	call   QWORD PTR [rip+0x3327c]        # 0x1400351e8
   140001f6c:	mov    rcx,QWORD PTR [r14+0x10]
   140001f70:	lea    r9d,[rbp+0x1]
   140001f74:	mov    DWORD PTR [rsp+0x28],eax
   140001f78:	lea    rax,[rip+0x34279]        # 0x1400361f8
   140001f7f:	lea    rdx,[rip+0x33efa]        # 0x140035e80
   140001f86:	mov    r8d,0x1b8
   140001f8c:	mov    QWORD PTR [rsp+0x20],rax
   140001f91:	call   0x140006ce0
   140001f96:	jmp    0x1400020e9
   140001f9b:	lea    rcx,[rsp+0x44]
   140001fa0:	xor    edx,edx
   140001fa2:	mov    r8d,0x234
   140001fa8:	call   0x140009800
   140001fad:	lea    rdx,[rsp+0x40]
   140001fb2:	mov    rcx,rdi
   140001fb5:	mov    DWORD PTR [rsp+0x40],0x238
   140001fbd:	call   0x140007702
   140001fc2:	test   eax,eax
   140001fc4:	jne    0x140001ffd
   140001fc6:	call   QWORD PTR [rip+0x3321c]        # 0x1400351e8
   140001fcc:	mov    rcx,QWORD PTR [r14+0x10]
   140001fd0:	lea    rdx,[rip+0x33ea9]        # 0x140035e80
   140001fd7:	mov    DWORD PTR [rsp+0x28],eax
   140001fdb:	lea    rax,[rip+0x34246]        # 0x140036228
   140001fe2:	mov    r9d,0x1
   140001fe8:	mov    r8d,0x1c1
   140001fee:	mov    QWORD PTR [rsp+0x20],rax
   140001ff3:	call   0x140006ce0
   140001ff8:	jmp    0x1400020e0
   140001ffd:	mov    QWORD PTR [rsp+0x2b8],rbx
   140002005:	call   QWORD PTR [rip+0x331ad]        # 0x1400351b8
   14000200b:	mov    QWORD PTR [rsp+0x2c0],rsi
   140002013:	mov    ebx,eax
   140002015:	cmp    DWORD PTR [rsp+0x48],ebx
   140002019:	je     0x14000202e
   14000201b:	lea    rdx,[rsp+0x40]
   140002020:	mov    rcx,rdi
   140002023:	call   0x140007708
   140002028:	test   eax,eax
   14000202a:	jne    0x140002015
   14000202c:	jmp    0x140002036
   14000202e:	mov    esi,DWORD PTR [rsp+0x60]
   140002032:	test   esi,esi
   140002034:	jne    0x140002064
   140002036:	mov    rcx,QWORD PTR [r14+0x10]
   14000203a:	lea    rax,[rip+0x3421f]        # 0x140036260
   140002041:	lea    rdx,[rip+0x33e38]        # 0x140035e80
   140002048:	mov    r9d,0x1
   14000204e:	mov    r8d,0x1d2
   140002054:	mov    DWORD PTR [rsp+0x28],ebx
   140002058:	mov    QWORD PTR [rsp+0x20],rax
   14000205d:	call   0x140006ce0
   140002062:	jmp    0x1400020d0
   140002064:	mov    r8d,esi
   140002067:	xor    edx,edx
   140002069:	mov    ecx,0x100000
   14000206e:	call   QWORD PTR [rip+0x3309c]        # 0x140035110
   140002074:	mov    rbp,rax
   140002077:	test   rax,rax
   14000207a:	je     0x14000209a
   14000207c:	mov    DWORD PTR [rsp+0x30],esi
   140002080:	mov    QWORD PTR [rsp+0x28],rax
   140002085:	mov    r9d,0x3
   14000208b:	lea    rax,[rip+0x341f6]        # 0x140036288
   140002092:	mov    r8d,0x1d9
   140002098:	jmp    0x1400020bb
   14000209a:	call   QWORD PTR [rip+0x33148]        # 0x1400351e8
   1400020a0:	mov    r9d,0x1
   1400020a6:	mov    r8d,0x1dd
   1400020ac:	mov    DWORD PTR [rsp+0x30],eax
   1400020b0:	mov    DWORD PTR [rsp+0x28],esi
   1400020b4:	lea    rax,[rip+0x341f5]        # 0x1400362b0
   1400020bb:	mov    rcx,QWORD PTR [r14+0x10]
   1400020bf:	lea    rdx,[rip+0x33dba]        # 0x140035e80
   1400020c6:	mov    QWORD PTR [rsp+0x20],rax
   1400020cb:	call   0x140006ce0
   1400020d0:	mov    rsi,QWORD PTR [rsp+0x2c0]
   1400020d8:	mov    rbx,QWORD PTR [rsp+0x2b8]
   1400020e0:	mov    rcx,rdi
   1400020e3:	call   QWORD PTR [rip+0x33107]        # 0x1400351f0
   1400020e9:	mov    rax,rbp
   1400020ec:	mov    rcx,QWORD PTR [rsp+0x280]
   1400020f4:	xor    rcx,rsp
   1400020f7:	call   0x1400097d0
   1400020fc:	add    rsp,0x290
   140002103:	pop    r14
   140002105:	pop    rdi
   140002106:	pop    rbp
   140002107:	ret    
   140002108:	int3   
   140002109:	int3   
   14000210a:	int3   
   14000210b:	int3   
   14000210c:	int3   
   14000210d:	int3   
   14000210e:	int3   
   14000210f:	int3   
   140002110:	xor    eax,eax
   140002112:	ret    
   140002113:	int3   
   140002114:	int3   
   140002115:	int3   
   140002116:	int3   
   140002117:	int3   
   140002118:	int3   
   140002119:	int3   
   14000211a:	int3   
   14000211b:	int3   
   14000211c:	int3   
   14000211d:	int3   
   14000211e:	int3   
   14000211f:	int3   
   140002120:	mov    eax,DWORD PTR [rcx+0x2b0]
   140002126:	ret    
   140002127:	int3   
   140002128:	int3   
   140002129:	int3   
   14000212a:	int3   
   14000212b:	int3   
   14000212c:	int3   
   14000212d:	int3   
   14000212e:	int3   
   14000212f:	int3   
   140002130:	mov    eax,DWORD PTR [rcx+0x2b4]
   140002136:	ret    
   140002137:	int3   
   140002138:	int3   
   140002139:	int3   
   14000213a:	int3   
   14000213b:	int3   
   14000213c:	int3   
   14000213d:	int3   
   14000213e:	int3   
   14000213f:	int3   
   140002140:	mov    rax,QWORD PTR [rcx+0x2b8]
   140002147:	ret    
   140002148:	int3   
   140002149:	int3   
   14000214a:	int3   
   14000214b:	int3   
   14000214c:	int3   
   14000214d:	int3   
   14000214e:	int3   
   14000214f:	int3   
   140002150:	sub    rsp,0x38
   140002154:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000215d:	mov    r10d,ecx
   140002160:	cmp    WORD PTR [rdx],0x0
   140002164:	je     0x1400021a8
   140002166:	mov    r9d,DWORD PTR [rip+0x453d3]        # 0x140047540
   14000216d:	test   r9b,0x1
   140002171:	jne    0x14000219f
   140002173:	or     r9d,0x1
   140002177:	mov    DWORD PTR [rip+0x453c2],r9d        # 0x140047540
   14000217e:	mov    r9,r8
   140002181:	mov    r8,rdx
   140002184:	mov    edx,ecx
   140002186:	lea    rcx,[rip+0x44f93]        # 0x140047120
   14000218d:	call   0x1400056a0
   140002192:	lea    rcx,[rip+0x324e7]        # 0x140034680
   140002199:	call   0x140007fd8
   14000219e:	nop
   14000219f:	lea    rax,[rip+0x44f7a]        # 0x140047120
   1400021a6:	jmp    0x1400021df
   1400021a8:	mov    ecx,DWORD PTR [rip+0x45392]        # 0x140047540
   1400021ae:	test   cl,0x2
   1400021b1:	jne    0x1400021d8
   1400021b3:	or     ecx,0x2
   1400021b6:	mov    DWORD PTR [rip+0x45384],ecx        # 0x140047540
   1400021bc:	mov    edx,r10d
   1400021bf:	lea    rcx,[rip+0x4538a]        # 0x140047550
   1400021c6:	call   0x140006360
   1400021cb:	lea    rcx,[rip+0x324be]        # 0x140034690
   1400021d2:	call   0x140007fd8
   1400021d7:	nop
   1400021d8:	lea    rax,[rip+0x45371]        # 0x140047550
   1400021df:	add    rsp,0x38
   1400021e3:	ret    
   1400021e4:	int3   
   1400021e5:	int3   
   1400021e6:	int3   
   1400021e7:	int3   
   1400021e8:	int3   
   1400021e9:	int3   
   1400021ea:	int3   
   1400021eb:	int3   
   1400021ec:	int3   
   1400021ed:	int3   
   1400021ee:	int3   
   1400021ef:	int3   
   1400021f0:	mov    r11,rsp
   1400021f3:	push   rdi
   1400021f4:	sub    rsp,0x60
   1400021f8:	mov    QWORD PTR [r11-0x28],0xfffffffffffffffe
   140002200:	mov    QWORD PTR [r11+0x10],rbx
   140002204:	mov    QWORD PTR [r11+0x18],rbp
   140002208:	mov    QWORD PTR [r11+0x20],rsi
   14000220c:	mov    rsi,rcx
   14000220f:	mov    dil,0x1
   140002212:	lea    rax,[rip+0x34737]        # 0x140036950
   140002219:	mov    QWORD PTR [r11-0x48],rax
   14000221d:	mov    r9d,0x3
   140002223:	mov    r8d,0x3e3
   140002229:	lea    rdx,[rip+0x33c50]        # 0x140035e80
   140002230:	mov    rcx,QWORD PTR [rcx+0x10]
   140002234:	call   0x140006ce0
   140002239:	mov    rbx,QWORD PTR [rsi+0x18]
   14000223d:	test   rbx,rbx
   140002240:	je     0x1400022b4
   140002242:	lea    rbp,[rip+0x34727]        # 0x140036970
   140002249:	nop    DWORD PTR [rax+0x0]
   140002250:	mov    ecx,DWORD PTR [rbx+0x2b4]
   140002256:	cmp    ecx,0x1
   140002259:	je     0x140002294
   14000225b:	call   0x140002c40
   140002260:	lea    rcx,[rbx+0x270]
   140002267:	mov    QWORD PTR [rsp+0x30],rax
   14000226c:	mov    QWORD PTR [rsp+0x28],rcx
   140002271:	mov    QWORD PTR [rsp+0x20],rbp
   140002276:	mov    r9d,0x5
   14000227c:	mov    r8d,0x3ea
   140002282:	lea    rdx,[rip+0x33bf7]        # 0x140035e80
   140002289:	mov    rcx,QWORD PTR [rsi+0x10]
   14000228d:	call   0x140006ce0
   140002292:	jmp    0x1400022a3
   140002294:	mov    rcx,rbx
   140002297:	call   0x140004150
   14000229c:	movzx  edi,al
   14000229f:	test   al,al
   1400022a1:	je     0x1400022c6
   1400022a3:	mov    rbx,QWORD PTR [rbx+0x2c0]
   1400022aa:	test   rbx,rbx
   1400022ad:	jne    0x140002250
   1400022af:	test   dil,dil
   1400022b2:	je     0x1400022c6
   1400022b4:	xor    r8d,r8d
   1400022b7:	lea    edx,[r8+0x2]
   1400022bb:	mov    rcx,rsi
   1400022be:	call   0x140001830
   1400022c3:	movzx  edi,al
   1400022c6:	movzx  r8d,dil
   1400022ca:	lea    rdx,[rip+0x346bf]        # 0x140036990
   1400022d1:	mov    rcx,rsi
   1400022d4:	call   0x140001ce0
   1400022d9:	test   dil,dil
   1400022dc:	jne    0x14000236f
   1400022e2:	mov    r8,QWORD PTR [rsi+0x10]
   1400022e6:	mov    edx,DWORD PTR [rsi+0x360]
   1400022ec:	lea    rcx,[rsp+0x48]
   1400022f1:	call   0x1400054e0
   1400022f6:	nop
   1400022f7:	lea    rax,[rip+0x33b0a]        # 0x140035e08
   1400022fe:	mov    QWORD PTR [rsp+0x28],rax
   140002303:	lea    rax,[rip+0x346ce]        # 0x1400369d8
   14000230a:	mov    QWORD PTR [rsp+0x20],rax
   14000230f:	mov    r9d,0x3
   140002315:	mov    r8d,0x40e
   14000231b:	lea    rdx,[rip+0x33b5e]        # 0x140035e80
   140002322:	mov    rcx,QWORD PTR [rsi+0x10]
   140002326:	call   0x140006ce0
   14000232b:	mov    rbx,QWORD PTR [rsi+0x20]
   14000232f:	test   rbx,rbx
   140002332:	je     0x140002348
   140002334:	mov    rcx,rbx
   140002337:	call   0x140005340
   14000233c:	mov    rbx,QWORD PTR [rbx+0x2c8]
   140002343:	test   rbx,rbx
   140002346:	jne    0x140002334
   140002348:	xor    r8d,r8d
   14000234b:	xor    edx,edx
   14000234d:	mov    rcx,rsi
   140002350:	call   0x140001830
   140002355:	lea    rdx,[rip+0x346c4]        # 0x140036a20
   14000235c:	mov    rcx,rsi
   14000235f:	call   0x140001ce0
   140002364:	nop
   140002365:	lea    rcx,[rsp+0x48]
   14000236a:	call   0x1400055c0
   14000236f:	movzx  eax,dil
   140002373:	lea    r11,[rsp+0x60]
   140002378:	mov    rbx,QWORD PTR [r11+0x18]
   14000237c:	mov    rbp,QWORD PTR [r11+0x20]
   140002380:	mov    rsi,QWORD PTR [r11+0x28]
   140002384:	mov    rsp,r11
   140002387:	pop    rdi
   140002388:	ret    
   140002389:	int3   
   14000238a:	int3   
   14000238b:	int3   
   14000238c:	int3   
   14000238d:	int3   
   14000238e:	int3   
   14000238f:	int3   
   140002390:	sub    rsp,0x38
   140002394:	mov    eax,edx
   140002396:	mov    rdx,rcx
   140002399:	mov    ecx,eax
   14000239b:	test   r8b,r8b
   14000239e:	je     0x1400023b1
   1400023a0:	mov    r8d,0x1
   1400023a6:	add    rsp,0x38
   1400023aa:	rex.W jmp QWORD PTR [rip+0x32ccf]        # 0x140035080
   1400023b1:	xor    r8d,r8d
   1400023b4:	mov    DWORD PTR [rsp+0x20],0x4ff
   1400023bc:	call   QWORD PTR [rip+0x3304e]        # 0x140035410
   1400023c2:	add    rsp,0x38
   1400023c6:	ret    
   1400023c7:	int3   
   1400023c8:	int3   
   1400023c9:	int3   
   1400023ca:	int3   
   1400023cb:	int3   
   1400023cc:	int3   
   1400023cd:	int3   
   1400023ce:	int3   
   1400023cf:	int3   
   1400023d0:	movzx  eax,BYTE PTR [rcx+0x218]
   1400023d7:	ret    
   1400023d8:	int3   
   1400023d9:	int3   
   1400023da:	int3   
   1400023db:	int3   
   1400023dc:	int3   
   1400023dd:	int3   
   1400023de:	int3   
   1400023df:	int3   
   1400023e0:	mov    QWORD PTR [rsp+0x20],rbx
   1400023e5:	push   rdi
   1400023e6:	sub    rsp,0x480
   1400023ed:	mov    rax,QWORD PTR [rip+0x42e7c]        # 0x140045270
   1400023f4:	xor    rax,rsp
   1400023f7:	mov    QWORD PTR [rsp+0x470],rax
   1400023ff:	mov    QWORD PTR [rsp+0x28],rdx
   140002404:	mov    rbx,rcx
   140002407:	mov    rcx,QWORD PTR [rcx+0x10]
   14000240b:	mov    rdi,rdx
   14000240e:	lea    rax,[rip+0x33cdb]        # 0x1400360f0
   140002415:	lea    rdx,[rip+0x33a64]        # 0x140035e80
   14000241c:	mov    r9d,0x3
   140002422:	mov    r8d,0x14d
   140002428:	mov    QWORD PTR [rsp+0x20],rax
   14000242d:	call   0x140006ce0
   140002432:	mov    rcx,rdi
   140002435:	call   QWORD PTR [rip+0x32dbd]        # 0x1400351f8
   14000243b:	cmp    eax,0xffffffff
   14000243e:	jne    0x14000247e
   140002440:	call   QWORD PTR [rip+0x32da2]        # 0x1400351e8
   140002446:	mov    rcx,QWORD PTR [rbx+0x10]
   14000244a:	lea    rdx,[rip+0x33a2f]        # 0x140035e80
   140002451:	mov    DWORD PTR [rsp+0x30],eax
   140002455:	lea    rax,[rip+0x33cac]        # 0x140036108
   14000245c:	mov    r9d,0x1
   140002462:	mov    r8d,0x152
   140002468:	mov    QWORD PTR [rsp+0x28],rdi
   14000246d:	mov    QWORD PTR [rsp+0x20],rax
   140002472:	call   0x140006ce0
   140002477:	xor    al,al
   140002479:	jmp    0x14000252f
   14000247e:	test   al,0x10
   140002480:	jne    0x140002566
   140002486:	mov    QWORD PTR [rsp+0x4a0],rsi
   14000248e:	lea    rcx,[rsp+0x262]
   140002496:	xor    esi,esi
   140002498:	xor    edx,edx
   14000249a:	mov    r8d,0x206
   1400024a0:	mov    WORD PTR [rsp+0x260],si
   1400024a8:	call   0x140009800
   1400024ad:	mov    QWORD PTR [rsp+0x40],0x104
   1400024b6:	lea    rax,[rsp+0x260]
   1400024be:	mov    QWORD PTR [rsp+0x38],rax
   1400024c3:	mov    QWORD PTR [rsp+0x30],rsi
   1400024c8:	xor    r9d,r9d
   1400024cb:	xor    r8d,r8d
   1400024ce:	xor    edx,edx
   1400024d0:	mov    rcx,rdi
   1400024d3:	mov    QWORD PTR [rsp+0x28],rsi
   1400024d8:	mov    QWORD PTR [rsp+0x20],rsi
   1400024dd:	call   0x14000844c
   1400024e2:	mov    rdx,QWORD PTR [rip+0x42d37]        # 0x140045220
   1400024e9:	lea    rcx,[rsp+0x260]
   1400024f1:	call   0x1400082d8
   1400024f6:	test   eax,eax
   1400024f8:	je     0x140002550
   1400024fa:	mov    rcx,QWORD PTR [rbx+0x10]
   1400024fe:	lea    rax,[rip+0x33c53]        # 0x140036158
   140002505:	lea    r9d,[rsi+0x1]
   140002509:	lea    rdx,[rip+0x33970]        # 0x140035e80
   140002510:	mov    r8d,0x15e
   140002516:	mov    QWORD PTR [rsp+0x28],rdi
   14000251b:	mov    QWORD PTR [rsp+0x20],rax
   140002520:	call   0x140006ce0
   140002525:	xor    al,al
   140002527:	mov    rsi,QWORD PTR [rsp+0x4a0]
   14000252f:	mov    rcx,QWORD PTR [rsp+0x470]
   140002537:	xor    rcx,rsp
   14000253a:	call   0x1400097d0
   14000253f:	mov    rbx,QWORD PTR [rsp+0x4a8]
   140002547:	add    rsp,0x480
   14000254e:	pop    rdi
   14000254f:	ret    
   140002550:	or     DWORD PTR [rbx+0x8],0x10
   140002554:	mov    rdx,rdi
   140002557:	mov    rcx,rbx
   14000255a:	call   0x140001910
   14000255f:	test   eax,eax
   140002561:	sete   al
   140002564:	jmp    0x140002527
   140002566:	lea    rcx,[rsp+0x50]
   14000256b:	mov    r8,rdi
   14000256e:	mov    edx,0x104
   140002573:	call   0x14000781c
   140002578:	lea    rcx,[rsp+0x50]
   14000257d:	or     rax,0xffffffffffffffff
   140002581:	inc    rax
   140002584:	cmp    WORD PTR [rcx+rax*2],0x0
   140002589:	jne    0x140002581
   14000258b:	test   rax,rax
   14000258e:	je     0x1400025b7
   140002590:	movzx  ecx,WORD PTR [rsp+rax*2+0x4e]
   140002595:	cmp    cx,0x5c
   140002599:	je     0x1400025b7
   14000259b:	cmp    cx,0x2f
   14000259f:	je     0x1400025b7
   1400025a1:	lea    r8,[rip+0x33bcc]        # 0x140036174
   1400025a8:	lea    rcx,[rsp+0x50]
   1400025ad:	mov    edx,0x104
   1400025b2:	call   0x140008184
   1400025b7:	lea    rdx,[rsp+0x50]
   1400025bc:	xor    r8d,r8d
   1400025bf:	mov    rcx,rbx
   1400025c2:	call   0x140002d30
   1400025c7:	test   al,al
   1400025c9:	je     0x14000252f
   1400025cf:	test   BYTE PTR [rbx+0x8],0x8
   1400025d3:	je     0x14000252f
   1400025d9:	lea    rdx,[rsp+0x50]
   1400025de:	mov    r8d,0x10
   1400025e4:	mov    rcx,rbx
   1400025e7:	call   0x140002d30
   1400025ec:	jmp    0x14000252f
   1400025f1:	int3   
   1400025f2:	int3   
   1400025f3:	int3   
   1400025f4:	int3   
   1400025f5:	int3   
   1400025f6:	int3   
   1400025f7:	int3   
   1400025f8:	int3   
   1400025f9:	int3   
   1400025fa:	int3   
   1400025fb:	int3   
   1400025fc:	int3   
   1400025fd:	int3   
   1400025fe:	int3   
   1400025ff:	int3   
   140002600:	rex push rbx
   140002602:	push   rbp
   140002603:	push   rsi
   140002604:	push   rdi
   140002605:	push   r12
   140002607:	push   r14
   140002609:	push   r15
   14000260b:	sub    rsp,0x480
   140002612:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   14000261b:	mov    rax,QWORD PTR [rip+0x42c4e]        # 0x140045270
   140002622:	xor    rax,rsp
   140002625:	mov    QWORD PTR [rsp+0x470],rax
   14000262d:	mov    r15d,r8d
   140002630:	mov    rbp,rdx
   140002633:	mov    rdi,rcx
   140002636:	cmp    QWORD PTR [rcx+0x128],0x0
   14000263e:	jne    0x140002676
   140002640:	lea    rax,[rcx+0x28]
   140002644:	mov    QWORD PTR [rsp+0x28],rax
   140002649:	lea    rax,[rip+0x33ca0]        # 0x1400362f0
   140002650:	mov    QWORD PTR [rsp+0x20],rax
   140002655:	mov    r9d,0x1
   14000265b:	mov    r8d,0x1ec
   140002661:	lea    rdx,[rip+0x33818]        # 0x140035e80
   140002668:	mov    rcx,QWORD PTR [rcx+0x10]
   14000266c:	call   0x140006ce0
   140002671:	jmp    0x1400029c4
   140002676:	lea    rbx,[rcx+0x158]
   14000267d:	or     r9,0xffffffffffffffff
   140002681:	mov    r8,rdx
   140002684:	mov    edx,0x104
   140002689:	mov    rcx,rbx
   14000268c:	call   0x14000820c
   140002691:	mov    rdx,rbx
   140002694:	mov    rcx,rdi
   140002697:	call   0x1400023e0
   14000269c:	test   al,al
   14000269e:	je     0x14000299c
   1400026a4:	cmp    QWORD PTR [rdi+0x18],0x0
   1400026a9:	je     0x14000299c
   1400026af:	xor    esi,esi
   1400026b1:	test   BYTE PTR [rdi+0x8],0x1
   1400026b5:	je     0x1400027f8
   1400026bb:	mov    WORD PTR [rsp+0x50],si
   1400026c0:	xor    edx,edx
   1400026c2:	mov    r8d,0x206
   1400026c8:	lea    rcx,[rsp+0x52]
   1400026cd:	call   0x140009800
   1400026d2:	mov    ebx,esi
   1400026d4:	lea    rcx,[rsp+0x50]
   1400026d9:	mov    r14,rdi
   1400026dc:	sub    r14,rcx
   1400026df:	add    r14,0x158
   1400026e6:	lea    r12d,[rsi+0x5f]
   1400026ea:	nop    WORD PTR [rax+rax*1+0x0]
   1400026f0:	lea    rax,[r14+rbx*2]
   1400026f4:	movzx  ecx,WORD PTR [rsp+rax*1+0x50]
   1400026f9:	test   cx,cx
   1400026fc:	je     0x140002722
   1400026fe:	cmp    cx,0x5c
   140002702:	jne    0x14000270c
   140002704:	mov    WORD PTR [rsp+rbx*2+0x50],r12w
   14000270a:	jmp    0x140002716
   14000270c:	call   0x14000817c
   140002711:	mov    WORD PTR [rsp+rbx*2+0x50],ax
   140002716:	inc    rbx
   140002719:	cmp    rbx,0x103
   140002720:	jb     0x1400026f0
   140002722:	mov    DWORD PTR [rsp+0x40],esi
   140002726:	call   QWORD PTR [rip+0x32a8c]        # 0x1400351b8
   14000272c:	mov    ecx,eax
   14000272e:	lea    rdx,[rsp+0x40]
   140002733:	call   QWORD PTR [rip+0x32a77]        # 0x1400351b0
   140002739:	lea    rax,[rsp+0x50]
   14000273e:	mov    QWORD PTR [rsp+0x20],rax
   140002743:	mov    r9d,DWORD PTR [rsp+0x40]
   140002748:	lea    r8,[rip+0x33bf9]        # 0x140036348
   14000274f:	mov    edx,0x104
   140002754:	lea    rcx,[rsp+0x260]
   14000275c:	call   0x140003f90
   140002761:	lea    r8,[rsp+0x260]
   140002769:	xor    edx,edx
   14000276b:	mov    ecx,0x100002
   140002770:	call   QWORD PTR [rip+0x32a4a]        # 0x1400351c0
   140002776:	mov    QWORD PTR [rdi+0x138],rax
   14000277d:	test   rax,rax
   140002780:	je     0x1400027b9
   140002782:	lea    rax,[rsp+0x260]
   14000278a:	mov    QWORD PTR [rsp+0x28],rax
   14000278f:	lea    rax,[rip+0x33bea]        # 0x140036380
   140002796:	mov    QWORD PTR [rsp+0x20],rax
   14000279b:	mov    r9d,0x3
   1400027a1:	mov    r8d,0x21a
   1400027a7:	lea    rdx,[rip+0x336d2]        # 0x140035e80
   1400027ae:	mov    rcx,QWORD PTR [rdi+0x10]
   1400027b2:	call   0x140006ce0
   1400027b7:	jmp    0x1400027f8
   1400027b9:	call   QWORD PTR [rip+0x32a29]        # 0x1400351e8
   1400027bf:	mov    DWORD PTR [rsp+0x30],eax
   1400027c3:	lea    rax,[rsp+0x260]
   1400027cb:	mov    QWORD PTR [rsp+0x28],rax
   1400027d0:	lea    rax,[rip+0x33bd9]        # 0x1400363b0
   1400027d7:	mov    QWORD PTR [rsp+0x20],rax
   1400027dc:	mov    r9d,0x2
   1400027e2:	mov    r8d,0x224
   1400027e8:	lea    rdx,[rip+0x33691]        # 0x140035e80
   1400027ef:	mov    rcx,QWORD PTR [rdi+0x10]
   1400027f3:	call   0x140006ce0
   1400027f8:	cmp    QWORD PTR [rdi+0x138],rsi
   1400027ff:	jne    0x140002856
   140002801:	xor    r9d,r9d
   140002804:	xor    r8d,r8d
   140002807:	lea    edx,[r9+0x1]
   14000280b:	xor    ecx,ecx
   14000280d:	call   QWORD PTR [rip+0x329b5]        # 0x1400351c8
   140002813:	mov    QWORD PTR [rdi+0x138],rax
   14000281a:	test   rax,rax
   14000281d:	jne    0x140002856
   14000281f:	call   QWORD PTR [rip+0x329c3]        # 0x1400351e8
   140002825:	mov    DWORD PTR [rsp+0x28],eax
   140002829:	lea    rax,[rip+0x33bd0]        # 0x140036400
   140002830:	mov    r8d,0x22d
   140002836:	mov    QWORD PTR [rsp+0x20],rax
   14000283b:	mov    r9d,0x1
   140002841:	lea    rdx,[rip+0x33638]        # 0x140035e80
   140002848:	mov    rcx,QWORD PTR [rdi+0x10]
   14000284c:	call   0x140006ce0
   140002851:	jmp    0x1400029c4
   140002856:	test   BYTE PTR [rdi+0x8],0x10
   14000285a:	jne    0x140002917
   140002860:	xor    r9d,r9d
   140002863:	xor    r8d,r8d
   140002866:	lea    edx,[r9+0x1]
   14000286a:	xor    ecx,ecx
   14000286c:	call   QWORD PTR [rip+0x32956]        # 0x1400351c8
   140002872:	mov    QWORD PTR [rdi+0x368],rax
   140002879:	test   rax,rax
   14000287c:	jne    0x140002897
   14000287e:	call   QWORD PTR [rip+0x32964]        # 0x1400351e8
   140002884:	mov    DWORD PTR [rsp+0x28],eax
   140002888:	lea    rax,[rip+0x33b99]        # 0x140036428
   14000288f:	mov    r8d,0x239
   140002895:	jmp    0x140002836
   140002897:	mov    ecx,0x228
   14000289c:	call   0x140007ce4
   1400028a1:	mov    QWORD PTR [rsp+0x40],rax
   1400028a6:	test   rax,rax
   1400028a9:	je     0x1400028c8
   1400028ab:	mov    r9,QWORD PTR [rdi+0x10]
   1400028af:	mov    r8,QWORD PTR [rdi+0x368]
   1400028b6:	mov    rdx,QWORD PTR [rdi+0x138]
   1400028bd:	mov    rcx,rax
   1400028c0:	call   0x140007100
   1400028c5:	mov    rsi,rax
   1400028c8:	mov    QWORD PTR [rdi+0x150],rsi
   1400028cf:	mov    rdx,rbp
   1400028d2:	mov    rcx,rsi
   1400028d5:	call   0x140007250
   1400028da:	test   al,al
   1400028dc:	jne    0x1400028f5
   1400028de:	mov    QWORD PTR [rsp+0x28],rbp
   1400028e3:	lea    rax,[rip+0x33b76]        # 0x140036460
   1400028ea:	mov    r8d,0x240
   1400028f0:	jmp    0x140002836
   1400028f5:	mov    rcx,QWORD PTR [rdi+0x150]
   1400028fc:	call   0x1400073c0
   140002901:	test   al,al
   140002903:	jne    0x140002917
   140002905:	lea    rax,[rip+0x33b84]        # 0x140036490
   14000290c:	mov    r8d,0x245
   140002912:	jmp    0x1400029a9
   140002917:	mov    rcx,rdi
   14000291a:	call   0x1400021f0
   14000291f:	movzx  ebx,al
   140002922:	test   al,al
   140002924:	je     0x14000296b
   140002926:	mov    rax,QWORD PTR [rdi]
   140002929:	mov    edx,r15d
   14000292c:	mov    rcx,rdi
   14000292f:	call   QWORD PTR [rax+0x8]
   140002932:	movzx  ebx,al
   140002935:	test   al,al
   140002937:	jne    0x140002961
   140002939:	lea    rax,[rip+0x33b80]        # 0x1400364c0
   140002940:	mov    QWORD PTR [rsp+0x20],rax
   140002945:	mov    r9d,0x1
   14000294b:	mov    r8d,0x252
   140002951:	lea    rdx,[rip+0x33528]        # 0x140035e80
   140002958:	mov    rcx,QWORD PTR [rdi+0x10]
   14000295c:	call   0x140006ce0
   140002961:	xor    edx,edx
   140002963:	mov    rcx,rdi
   140002966:	call   0x140003650
   14000296b:	mov    rcx,QWORD PTR [rdi+0x138]
   140002972:	call   QWORD PTR [rip+0x32868]        # 0x1400351e0
   140002978:	xor    r9d,r9d
   14000297b:	xor    r8d,r8d
   14000297e:	lea    edx,[r9+0x10]
   140002982:	mov    rcx,QWORD PTR [rdi+0x128]
   140002989:	call   QWORD PTR [rip+0x32aa9]        # 0x140035438
   14000298f:	mov    rcx,rdi
   140002992:	call   0x140001b90
   140002997:	movzx  eax,bl
   14000299a:	jmp    0x1400029c6
   14000299c:	lea    rax,[rip+0x33985]        # 0x140036328
   1400029a3:	mov    r8d,0x1f4
   1400029a9:	mov    QWORD PTR [rsp+0x20],rax
   1400029ae:	mov    r9d,0x1
   1400029b4:	lea    rdx,[rip+0x334c5]        # 0x140035e80
   1400029bb:	mov    rcx,QWORD PTR [rdi+0x10]
   1400029bf:	call   0x140006ce0
   1400029c4:	xor    al,al
   1400029c6:	mov    rcx,QWORD PTR [rsp+0x470]
   1400029ce:	xor    rcx,rsp
   1400029d1:	call   0x1400097d0
   1400029d6:	add    rsp,0x480
   1400029dd:	pop    r15
   1400029df:	pop    r14
   1400029e1:	pop    r12
   1400029e3:	pop    rdi
   1400029e4:	pop    rsi
   1400029e5:	pop    rbp
   1400029e6:	pop    rbx
   1400029e7:	ret    
   1400029e8:	int3   
   1400029e9:	int3   
   1400029ea:	int3   
   1400029eb:	int3   
   1400029ec:	int3   
   1400029ed:	int3   
   1400029ee:	int3   
   1400029ef:	int3   
   1400029f0:	cmp    DWORD PTR [rcx+0x2b4],0x1
   1400029f7:	jne    0x140002a03
   1400029f9:	mov    DWORD PTR [rcx+0x2b4],0x2
   140002a03:	ret    
   140002a04:	int3   
   140002a05:	int3   
   140002a06:	int3   
   140002a07:	int3   
   140002a08:	int3   
   140002a09:	int3   
   140002a0a:	int3   
   140002a0b:	int3   
   140002a0c:	int3   
   140002a0d:	int3   
   140002a0e:	int3   
   140002a0f:	int3   
   140002a10:	mov    DWORD PTR [rcx+0x2b4],0x1
   140002a1a:	ret    
   140002a1b:	int3   
   140002a1c:	int3   
   140002a1d:	int3   
   140002a1e:	int3   
   140002a1f:	int3   
   140002a20:	rex push rbx
   140002a22:	push   rbp
   140002a23:	push   rsi
   140002a24:	push   rdi
   140002a25:	sub    rsp,0x58
   140002a29:	mov    rax,QWORD PTR [rip+0x42840]        # 0x140045270
   140002a30:	xor    rax,rsp
   140002a33:	mov    QWORD PTR [rsp+0x48],rax
   140002a38:	mov    rbx,QWORD PTR [rcx+0x18]
   140002a3c:	mov    rsi,r8
   140002a3f:	mov    ebp,edx
   140002a41:	mov    rdi,rcx
   140002a44:	mov    DWORD PTR [rsp+0x30],edx
   140002a48:	mov    QWORD PTR [rsp+0x38],r8
   140002a4d:	mov    QWORD PTR [rsp+0x40],r9
   140002a52:	test   rbx,rbx
   140002a55:	je     0x140002a79
   140002a57:	nop    WORD PTR [rax+rax*1+0x0]
   140002a60:	lea    rdx,[rsp+0x30]
   140002a65:	mov    rcx,rbx
   140002a68:	call   0x1400052c0
   140002a6d:	mov    rbx,QWORD PTR [rbx+0x2c0]
   140002a74:	test   rbx,rbx
   140002a77:	jne    0x140002a60
   140002a79:	cmp    ebp,0x218
   140002a7f:	jne    0x140002ae8
   140002a81:	cmp    rsi,0x4
   140002a85:	jne    0x140002ab4
   140002a87:	mov    rcx,QWORD PTR [rdi+0x10]
   140002a8b:	lea    rax,[rip+0x33a3e]        # 0x1400364d0
   140002a92:	lea    r8d,[rbp+0x64]
   140002a96:	lea    rdx,[rip+0x333e3]        # 0x140035e80
   140002a9d:	mov    r9d,esi
   140002aa0:	mov    QWORD PTR [rsp+0x20],rax
   140002aa5:	call   0x140006ce0
   140002aaa:	mov    rcx,rdi
   140002aad:	call   0x1400034f0
   140002ab2:	jmp    0x140002ae8
   140002ab4:	cmp    rsi,0x12
   140002ab8:	jne    0x140002ae8
   140002aba:	mov    rcx,QWORD PTR [rdi+0x10]
   140002abe:	lea    rax,[rip+0x33a23]        # 0x1400364e8
   140002ac5:	lea    r9d,[rsi-0xe]
   140002ac9:	lea    rdx,[rip+0x333b0]        # 0x140035e80
   140002ad0:	mov    r8d,0x281
   140002ad6:	mov    QWORD PTR [rsp+0x20],rax
   140002adb:	call   0x140006ce0
   140002ae0:	mov    rcx,rdi
   140002ae3:	call   0x1400030b0
   140002ae8:	mov    rcx,QWORD PTR [rsp+0x48]
   140002aed:	xor    rcx,rsp
   140002af0:	call   0x1400097d0
   140002af5:	add    rsp,0x58
   140002af9:	pop    rdi
   140002afa:	pop    rsi
   140002afb:	pop    rbp
   140002afc:	pop    rbx
   140002afd:	ret    
   140002afe:	int3   
   140002aff:	int3   
   140002b00:	mov    QWORD PTR [rsp+0x8],rbx
   140002b05:	mov    QWORD PTR [rsp+0x10],rbp
   140002b0a:	mov    QWORD PTR [rsp+0x18],rsi
   140002b0f:	push   rdi
   140002b10:	sub    rsp,0x20
   140002b14:	mov    esi,edx
   140002b16:	mov    edx,0xffffffeb
   140002b1b:	mov    rbx,r9
   140002b1e:	mov    rdi,r8
   140002b21:	mov    rbp,rcx
   140002b24:	call   QWORD PTR [rip+0x328de]        # 0x140035408
   140002b2a:	test   rax,rax
   140002b2d:	je     0x140002b41
   140002b2f:	mov    r10,QWORD PTR [rax]
   140002b32:	mov    r9,rbx
   140002b35:	mov    r8,rdi
   140002b38:	mov    edx,esi
   140002b3a:	mov    rcx,rax
   140002b3d:	call   QWORD PTR [r10+0x18]
   140002b41:	mov    r9,rbx
   140002b44:	mov    r8,rdi
   140002b47:	mov    edx,esi
   140002b49:	mov    rcx,rbp
   140002b4c:	mov    rbx,QWORD PTR [rsp+0x30]
   140002b51:	mov    rbp,QWORD PTR [rsp+0x38]
   140002b56:	mov    rsi,QWORD PTR [rsp+0x40]
   140002b5b:	add    rsp,0x20
   140002b5f:	pop    rdi
   140002b60:	rex.W jmp QWORD PTR [rip+0x328c9]        # 0x140035430
   140002b67:	int3   
   140002b68:	int3   
   140002b69:	int3   
   140002b6a:	int3   
   140002b6b:	int3   
   140002b6c:	int3   
   140002b6d:	int3   
   140002b6e:	int3   
   140002b6f:	int3   
   140002b70:	mov    rax,QWORD PTR [rcx+0x2c0]
   140002b77:	ret    
   140002b78:	int3   
   140002b79:	int3   
   140002b7a:	int3   
   140002b7b:	int3   
   140002b7c:	int3   
   140002b7d:	int3   
   140002b7e:	int3   
   140002b7f:	int3   
   140002b80:	mov    r11,rsp
   140002b83:	sub    rsp,0x68
   140002b87:	mov    rax,QWORD PTR [rip+0x426e2]        # 0x140045270
   140002b8e:	xor    rax,rsp
   140002b91:	mov    QWORD PTR [rsp+0x50],rax
   140002b96:	lea    rax,[rip+0x331d3]        # 0x140035d70
   140002b9d:	mov    QWORD PTR [rsp],rax
   140002ba1:	lea    rax,[rip+0x331d8]        # 0x140035d80
   140002ba8:	mov    QWORD PTR [r11-0x60],rax
   140002bac:	lea    rax,[rip+0x331dd]        # 0x140035d90
   140002bb3:	mov    QWORD PTR [r11-0x58],rax
   140002bb7:	lea    rax,[rip+0x331e2]        # 0x140035da0
   140002bbe:	mov    QWORD PTR [r11-0x50],rax
   140002bc2:	lea    rax,[rip+0x331e7]        # 0x140035db0
   140002bc9:	mov    QWORD PTR [r11-0x48],rax
   140002bcd:	lea    rax,[rip+0x331e4]        # 0x140035db8
   140002bd4:	mov    QWORD PTR [r11-0x40],rax
   140002bd8:	lea    rax,[rip+0x331e9]        # 0x140035dc8
   140002bdf:	mov    QWORD PTR [r11-0x38],rax
   140002be3:	lea    rax,[rip+0x331ee]        # 0x140035dd8
   140002bea:	mov    QWORD PTR [r11-0x30],rax
   140002bee:	lea    rax,[rip+0x331f3]        # 0x140035de8
   140002bf5:	mov    QWORD PTR [r11-0x28],rax
   140002bf9:	lea    rax,[rip+0x331f0]        # 0x140035df0
   140002c00:	mov    QWORD PTR [r11-0x20],rax
   140002c04:	test   ecx,ecx
   140002c06:	js     0x140002c27
   140002c08:	movsxd rax,ecx
   140002c0b:	cmp    rax,0xa
   140002c0f:	jae    0x140002c27
   140002c11:	mov    rax,QWORD PTR [rsp+rax*8]
   140002c15:	mov    rcx,QWORD PTR [rsp+0x50]
   140002c1a:	xor    rcx,rsp
   140002c1d:	call   0x1400097d0
   140002c22:	add    rsp,0x68
   140002c26:	ret    
   140002c27:	lea    rax,[rip+0x331d2]        # 0x140035e00
   140002c2e:	mov    rcx,QWORD PTR [rsp+0x50]
   140002c33:	xor    rcx,rsp
   140002c36:	call   0x1400097d0
   140002c3b:	add    rsp,0x68
   140002c3f:	ret    
   140002c40:	sub    rsp,0x48
   140002c44:	mov    rax,QWORD PTR [rip+0x42625]        # 0x140045270
   140002c4b:	xor    rax,rsp
   140002c4e:	mov    QWORD PTR [rsp+0x30],rax
   140002c53:	lea    rax,[rip+0x331ae]        # 0x140035e08
   140002c5a:	mov    QWORD PTR [rsp],rax
   140002c5e:	lea    rax,[rip+0x331a7]        # 0x140035e0c
   140002c65:	mov    QWORD PTR [rsp+0x8],rax
   140002c6a:	lea    rax,[rip+0x331a7]        # 0x140035e18
   140002c71:	mov    QWORD PTR [rsp+0x10],rax
   140002c76:	lea    rax,[rip+0x331a7]        # 0x140035e24
   140002c7d:	mov    QWORD PTR [rsp+0x18],rax
   140002c82:	lea    rax,[rip+0x331a3]        # 0x140035e2c
   140002c89:	mov    QWORD PTR [rsp+0x20],rax
   140002c8e:	lea    rax,[rip+0x331a3]        # 0x140035e38
   140002c95:	mov    QWORD PTR [rsp+0x28],rax
   140002c9a:	test   ecx,ecx
   140002c9c:	js     0x140002cbd
   140002c9e:	movsxd rax,ecx
   140002ca1:	cmp    rax,0x6
   140002ca5:	jae    0x140002cbd
   140002ca7:	mov    rax,QWORD PTR [rsp+rax*8]
   140002cab:	mov    rcx,QWORD PTR [rsp+0x30]
   140002cb0:	xor    rcx,rsp
   140002cb3:	call   0x1400097d0
   140002cb8:	add    rsp,0x48
   140002cbc:	ret    
   140002cbd:	lea    rax,[rip+0x3313c]        # 0x140035e00
   140002cc4:	mov    rcx,QWORD PTR [rsp+0x30]
   140002cc9:	xor    rcx,rsp
   140002ccc:	call   0x1400097d0
   140002cd1:	add    rsp,0x48
   140002cd5:	ret    
   140002cd6:	int3   
   140002cd7:	int3   
   140002cd8:	int3   
   140002cd9:	int3   
   140002cda:	int3   
   140002cdb:	int3   
   140002cdc:	int3   
   140002cdd:	int3   
   140002cde:	int3   
   140002cdf:	int3   
   140002ce0:	mov    rax,QWORD PTR [rcx+0x2c8]
   140002ce7:	ret    
   140002ce8:	int3   
   140002ce9:	int3   
   140002cea:	int3   
   140002ceb:	int3   
   140002cec:	int3   
   140002ced:	int3   
   140002cee:	int3   
   140002cef:	int3   
   140002cf0:	mov    QWORD PTR [rsp+0x8],rbx
   140002cf5:	push   rdi
   140002cf6:	sub    rsp,0x20
   140002cfa:	xor    r8d,r8d
   140002cfd:	mov    rdi,rdx
   140002d00:	mov    rbx,rcx
   140002d03:	call   0x140002d30
   140002d08:	test   al,al
   140002d0a:	je     0x140002d23
   140002d0c:	test   BYTE PTR [rbx+0x8],0x8
   140002d10:	je     0x140002d23
   140002d12:	mov    r8d,0x10
   140002d18:	mov    rdx,rdi
   140002d1b:	mov    rcx,rbx
   140002d1e:	call   0x140002d30
   140002d23:	mov    rbx,QWORD PTR [rsp+0x30]
   140002d28:	add    rsp,0x20
   140002d2c:	pop    rdi
   140002d2d:	ret    
   140002d2e:	int3   
   140002d2f:	int3   
   140002d30:	rex push rbp
   140002d32:	push   rsi
   140002d33:	push   rdi
   140002d34:	push   r14
   140002d36:	sub    rsp,0x6d8
   140002d3d:	mov    rax,QWORD PTR [rip+0x4252c]        # 0x140045270
   140002d44:	xor    rax,rsp
   140002d47:	mov    QWORD PTR [rsp+0x6b0],rax
   140002d4f:	mov    esi,r8d
   140002d52:	mov    r14,rdx
   140002d55:	mov    rdi,rcx
   140002d58:	mov    r9,rdx
   140002d5b:	lea    rcx,[rsp+0x4a0]
   140002d63:	lea    r8,[rip+0x33296]        # 0x140036000
   140002d6a:	mov    edx,0x104
   140002d6f:	and    esi,0x10
   140002d72:	jne    0x140002d7b
   140002d74:	lea    r8,[rip+0x33295]        # 0x140036010
   140002d7b:	call   0x140003f90
   140002d80:	lea    rdx,[rsp+0x40]
   140002d85:	lea    rcx,[rsp+0x4a0]
   140002d8d:	call   QWORD PTR [rip+0x32475]        # 0x140035208
   140002d93:	mov    rbp,rax
   140002d96:	cmp    rax,0xffffffffffffffff
   140002d9a:	jne    0x140002de0
   140002d9c:	call   QWORD PTR [rip+0x32446]        # 0x1400351e8
   140002da2:	mov    rcx,QWORD PTR [rdi+0x10]
   140002da6:	lea    r9d,[rbp+0x4]
   140002daa:	mov    DWORD PTR [rsp+0x30],eax
   140002dae:	lea    rax,[rsp+0x4a0]
   140002db6:	lea    rdx,[rip+0x330c3]        # 0x140035e80
   140002dbd:	mov    QWORD PTR [rsp+0x28],rax
   140002dc2:	lea    rax,[rip+0x33257]        # 0x140036020
   140002dc9:	mov    r8d,0xe3
   140002dcf:	mov    QWORD PTR [rsp+0x20],rax
   140002dd4:	call   0x140006ce0
   140002dd9:	mov    al,0x1
   140002ddb:	jmp    0x140003093
   140002de0:	mov    QWORD PTR [rsp+0x710],rbx
   140002de8:	mov    QWORD PTR [rsp+0x6d0],r12
   140002df0:	mov    QWORD PTR [rsp+0x6c8],r13
   140002df8:	mov    QWORD PTR [rsp+0x6c0],r15
   140002e00:	lea    r12,[rip+0x33249]        # 0x140036050
   140002e07:	lea    r13,[rip+0x33282]        # 0x140036090
   140002e0e:	mov    r15b,0x1
   140002e11:	lea    rbx,[rip+0x332a0]        # 0x1400360b8
   140002e18:	test   esi,esi
   140002e1a:	je     0x140002edf
   140002e20:	test   BYTE PTR [rsp+0x40],0x10
   140002e25:	je     0x140002eaf
   140002e2b:	cmp    WORD PTR [rsp+0x6c],0x2e
   140002e31:	je     0x140002eaf
   140002e33:	lea    rax,[rsp+0x6c]
   140002e38:	lea    r8,[rip+0x33221]        # 0x140036060
   140002e3f:	lea    rcx,[rsp+0x290]
   140002e47:	mov    r9,r14
   140002e4a:	mov    edx,0x104
   140002e4f:	mov    QWORD PTR [rsp+0x20],rax
   140002e54:	call   0x140003f90
   140002e59:	mov    rcx,QWORD PTR [rdi+0x10]
   140002e5d:	lea    rax,[rsp+0x290]
   140002e65:	mov    QWORD PTR [rsp+0x28],rax
   140002e6a:	lea    rax,[rip+0x331ff]        # 0x140036070
   140002e71:	lea    rdx,[rip+0x33008]        # 0x140035e80
   140002e78:	mov    r9d,0x3
   140002e7e:	mov    r8d,0xf8
   140002e84:	mov    QWORD PTR [rsp+0x20],rax
   140002e89:	call   0x140006ce0
   140002e8e:	lea    rdx,[rsp+0x290]
   140002e96:	mov    rcx,rdi
   140002e99:	call   0x140002cf0
   140002e9e:	movzx  r15d,al
   140002ea2:	test   al,al
   140002ea4:	je     0x140003066
   140002eaa:	jmp    0x140002fa1
   140002eaf:	lea    rax,[rsp+0x6c]
   140002eb4:	mov    r8d,0xf2
   140002eba:	mov    QWORD PTR [rsp+0x28],rax
   140002ebf:	mov    QWORD PTR [rsp+0x20],r12
   140002ec4:	mov    rcx,QWORD PTR [rdi+0x10]
   140002ec8:	lea    rdx,[rip+0x32fb1]        # 0x140035e80
   140002ecf:	mov    r9d,0x5
   140002ed5:	call   0x140006ce0
   140002eda:	jmp    0x140002fa1
   140002edf:	test   BYTE PTR [rsp+0x40],0x10
   140002ee4:	lea    rax,[rsp+0x6c]
   140002ee9:	je     0x140002efd
   140002eeb:	mov    QWORD PTR [rsp+0x28],rax
   140002ef0:	mov    r8d,0x106
   140002ef6:	mov    QWORD PTR [rsp+0x20],r13
   140002efb:	jmp    0x140002ec4
   140002efd:	lea    r8,[rip+0x331a4]        # 0x1400360a8
   140002f04:	lea    rcx,[rsp+0x290]
   140002f0c:	mov    r9,r14
   140002f0f:	mov    edx,0x104
   140002f14:	mov    QWORD PTR [rsp+0x20],rax
   140002f19:	call   0x140003f90
   140002f1e:	mov    rcx,QWORD PTR [rdi+0x10]
   140002f22:	lea    rax,[rsp+0x290]
   140002f2a:	mov    QWORD PTR [rsp+0x28],rax
   140002f2f:	lea    rdx,[rip+0x32f4a]        # 0x140035e80
   140002f36:	mov    r9d,0x3
   140002f3c:	mov    r8d,0x10b
   140002f42:	mov    QWORD PTR [rsp+0x20],rbx
   140002f47:	call   0x140006ce0
   140002f4c:	mov    rbx,QWORD PTR [rdi+0x18]
   140002f50:	test   rbx,rbx
   140002f53:	je     0x140002f81
   140002f55:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140002f60:	lea    rdx,[rbx+0x10]
   140002f64:	lea    rcx,[rsp+0x290]
   140002f6c:	call   0x1400082d8
   140002f71:	test   eax,eax
   140002f73:	je     0x140002fbc
   140002f75:	mov    rbx,QWORD PTR [rbx+0x2c0]
   140002f7c:	test   rbx,rbx
   140002f7f:	jne    0x140002f60
   140002f81:	lea    rdx,[rsp+0x290]
   140002f89:	mov    rcx,rdi
   140002f8c:	call   0x140001910
   140002f91:	cmp    eax,0x1
   140002f94:	je     0x140003063
   140002f9a:	lea    rbx,[rip+0x33117]        # 0x1400360b8
   140002fa1:	lea    rdx,[rsp+0x40]
   140002fa6:	mov    rcx,rbp
   140002fa9:	call   QWORD PTR [rip+0x32251]        # 0x140035200
   140002faf:	test   eax,eax
   140002fb1:	jne    0x140002e18
   140002fb7:	jmp    0x140003066
   140002fbc:	test   rbx,rbx
   140002fbf:	je     0x140002f81
   140002fc1:	mov    eax,DWORD PTR [rbx+0x2b4]
   140002fc7:	cmp    eax,0x5
   140002fca:	jne    0x140003017
   140002fcc:	lea    rdx,[rsp+0x290]
   140002fd4:	mov    rcx,rbx
   140002fd7:	call   0x1400043b0
   140002fdc:	test   al,al
   140002fde:	jne    0x140002f9a
   140002fe0:	mov    rcx,QWORD PTR [rdi+0x10]
   140002fe4:	lea    rax,[rsp+0x290]
   140002fec:	lea    rdx,[rip+0x32e8d]        # 0x140035e80
   140002ff3:	mov    QWORD PTR [rsp+0x28],rax
   140002ff8:	lea    rax,[rip+0x32fe1]        # 0x140035fe0
   140002fff:	mov    r9d,0x2
   140003005:	mov    r8d,0x118
   14000300b:	mov    QWORD PTR [rsp+0x20],rax
   140003010:	call   0x140006ce0
   140003015:	jmp    0x140002f9a
   140003017:	cmp    eax,0x2
   14000301a:	jne    0x140002f9a
   140003020:	mov    rcx,QWORD PTR [rdi+0x10]
   140003024:	lea    rax,[rbx+0x270]
   14000302b:	lea    rdx,[rip+0x32e4e]        # 0x140035e80
   140003032:	mov    QWORD PTR [rsp+0x28],rax
   140003037:	lea    rax,[rip+0x33092]        # 0x1400360d0
   14000303e:	mov    r9d,0x3
   140003044:	mov    r8d,0x11d
   14000304a:	mov    QWORD PTR [rsp+0x20],rax
   14000304f:	call   0x140006ce0
   140003054:	mov    DWORD PTR [rbx+0x2b4],0x1
   14000305e:	jmp    0x140002f9a
   140003063:	xor    r15b,r15b
   140003066:	mov    rcx,rbp
   140003069:	call   QWORD PTR [rip+0x321a9]        # 0x140035218
   14000306f:	mov    r13,QWORD PTR [rsp+0x6c8]
   140003077:	mov    r12,QWORD PTR [rsp+0x6d0]
   14000307f:	mov    rbx,QWORD PTR [rsp+0x710]
   140003087:	movzx  eax,r15b
   14000308b:	mov    r15,QWORD PTR [rsp+0x6c0]
   140003093:	mov    rcx,QWORD PTR [rsp+0x6b0]
   14000309b:	xor    rcx,rsp
   14000309e:	call   0x1400097d0
   1400030a3:	add    rsp,0x6d8
   1400030aa:	pop    r14
   1400030ac:	pop    rdi
   1400030ad:	pop    rsi
   1400030ae:	pop    rbp
   1400030af:	ret    
   1400030b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400030b5:	mov    QWORD PTR [rsp+0x10],rbp
   1400030ba:	mov    QWORD PTR [rsp+0x18],rsi
   1400030bf:	push   rdi
   1400030c0:	sub    rsp,0x40
   1400030c4:	mov    rsi,rcx
   1400030c7:	mov    rcx,QWORD PTR [rcx+0x10]
   1400030cb:	lea    rax,[rip+0x339d6]        # 0x140036aa8
   1400030d2:	lea    rdx,[rip+0x32da7]        # 0x140035e80
   1400030d9:	mov    r9d,0x3
   1400030df:	mov    r8d,0x465
   1400030e5:	mov    dil,0x1
   1400030e8:	mov    QWORD PTR [rsp+0x20],rax
   1400030ed:	call   0x140006ce0
   1400030f2:	mov    rbx,QWORD PTR [rsi+0x18]
   1400030f6:	test   rbx,rbx
   1400030f9:	je     0x140003166
   1400030fb:	lea    rbp,[rip+0x3386e]        # 0x140036970
   140003102:	mov    ecx,DWORD PTR [rbx+0x2b4]
   140003108:	cmp    ecx,0x1
   14000310b:	je     0x140003146
   14000310d:	call   0x140002c40
   140003112:	lea    rcx,[rbx+0x270]
   140003119:	lea    rdx,[rip+0x32d60]        # 0x140035e80
   140003120:	mov    QWORD PTR [rsp+0x30],rax
   140003125:	mov    QWORD PTR [rsp+0x28],rcx
   14000312a:	mov    rcx,QWORD PTR [rsi+0x10]
   14000312e:	mov    r9d,0x5
   140003134:	mov    r8d,0x46c
   14000313a:	mov    QWORD PTR [rsp+0x20],rbp
   14000313f:	call   0x140006ce0
   140003144:	jmp    0x140003155
   140003146:	mov    rcx,rbx
   140003149:	call   0x140004d90
   14000314e:	movzx  edi,al
   140003151:	test   al,al
   140003153:	je     0x140003178
   140003155:	mov    rbx,QWORD PTR [rbx+0x2c0]
   14000315c:	test   rbx,rbx
   14000315f:	jne    0x140003102
   140003161:	test   dil,dil
   140003164:	je     0x140003178
   140003166:	xor    r8d,r8d
   140003169:	mov    rcx,rsi
   14000316c:	lea    edx,[r8+0x4]
   140003170:	call   0x140001830
   140003175:	movzx  edi,al
   140003178:	lea    rdx,[rip+0x33941]        # 0x140036ac0
   14000317f:	movzx  r8d,dil
   140003183:	mov    rcx,rsi
   140003186:	call   0x140001ce0
   14000318b:	mov    rbx,QWORD PTR [rsp+0x50]
   140003190:	mov    rbp,QWORD PTR [rsp+0x58]
   140003195:	mov    rsi,QWORD PTR [rsp+0x60]
   14000319a:	movzx  eax,dil
   14000319e:	add    rsp,0x40
   1400031a2:	pop    rdi
   1400031a3:	ret    
   1400031a4:	int3   
   1400031a5:	int3   
   1400031a6:	int3   
   1400031a7:	int3   
   1400031a8:	int3   
   1400031a9:	int3   
   1400031aa:	int3   
   1400031ab:	int3   
   1400031ac:	int3   
   1400031ad:	int3   
   1400031ae:	int3   
   1400031af:	int3   
   1400031b0:	mov    r11,rsp
   1400031b3:	push   rdi
   1400031b4:	sub    rsp,0x60
   1400031b8:	mov    QWORD PTR [r11-0x28],0xfffffffffffffffe
   1400031c0:	mov    QWORD PTR [r11+0x10],rbx
   1400031c4:	mov    QWORD PTR [r11+0x18],rbp
   1400031c8:	mov    QWORD PTR [r11+0x20],rsi
   1400031cc:	mov    rsi,rcx
   1400031cf:	mov    dil,0x1
   1400031d2:	lea    rax,[rip+0x33867]        # 0x140036a40
   1400031d9:	mov    QWORD PTR [r11-0x48],rax
   1400031dd:	mov    r9d,0x3
   1400031e3:	mov    r8d,0x42b
   1400031e9:	lea    rdx,[rip+0x32c90]        # 0x140035e80
   1400031f0:	mov    rcx,QWORD PTR [rcx+0x10]
   1400031f4:	call   0x140006ce0
   1400031f9:	mov    rbx,QWORD PTR [rsi+0x18]
   1400031fd:	test   rbx,rbx
   140003200:	je     0x14000327b
   140003202:	lea    rbp,[rip+0x33767]        # 0x140036970
   140003209:	nop    DWORD PTR [rax+0x0]
   140003210:	mov    ecx,DWORD PTR [rbx+0x2b4]
   140003216:	cmp    ecx,0x1
   140003219:	je     0x140003254
   14000321b:	call   0x140002c40
   140003220:	lea    rcx,[rbx+0x270]
   140003227:	mov    QWORD PTR [rsp+0x30],rax
   14000322c:	mov    QWORD PTR [rsp+0x28],rcx
   140003231:	mov    QWORD PTR [rsp+0x20],rbp
   140003236:	mov    r9d,0x5
   14000323c:	mov    r8d,0x432
   140003242:	lea    rdx,[rip+0x32c37]        # 0x140035e80
   140003249:	mov    rcx,QWORD PTR [rsi+0x10]
   14000324d:	call   0x140006ce0
   140003252:	jmp    0x14000326a
   140003254:	mov    rdx,QWORD PTR [rsi+0x128]
   14000325b:	mov    rcx,rbx
   14000325e:	call   0x140004e10
   140003263:	movzx  edi,al
   140003266:	test   al,al
   140003268:	je     0x14000328d
   14000326a:	mov    rbx,QWORD PTR [rbx+0x2c0]
   140003271:	test   rbx,rbx
   140003274:	jne    0x140003210
   140003276:	test   dil,dil
   140003279:	je     0x14000328d
   14000327b:	xor    r8d,r8d
   14000327e:	lea    edx,[r8+0x4]
   140003282:	mov    rcx,rsi
   140003285:	call   0x140001830
   14000328a:	movzx  edi,al
   14000328d:	movzx  r8d,dil
   140003291:	lea    rdx,[rip+0x337c0]        # 0x140036a58
   140003298:	mov    rcx,rsi
   14000329b:	call   0x140001ce0
   1400032a0:	test   dil,dil
   1400032a3:	jne    0x14000333d
   1400032a9:	mov    r8,QWORD PTR [rsi+0x10]
   1400032ad:	mov    edx,DWORD PTR [rsi+0x360]
   1400032b3:	lea    rcx,[rsp+0x48]
   1400032b8:	call   0x1400054e0
   1400032bd:	nop
   1400032be:	lea    rax,[rip+0x32b43]        # 0x140035e08
   1400032c5:	mov    QWORD PTR [rsp+0x28],rax
   1400032ca:	lea    rax,[rip+0x33827]        # 0x140036af8
   1400032d1:	mov    QWORD PTR [rsp+0x20],rax
   1400032d6:	mov    r9d,0x3
   1400032dc:	mov    r8d,0x48b
   1400032e2:	lea    rdx,[rip+0x32b97]        # 0x140035e80
   1400032e9:	mov    rcx,QWORD PTR [rsi+0x10]
   1400032ed:	call   0x140006ce0
   1400032f2:	mov    rbx,QWORD PTR [rsi+0x20]
   1400032f6:	test   rbx,rbx
   1400032f9:	je     0x140003314
   1400032fb:	nop    DWORD PTR [rax+rax*1+0x0]
   140003300:	mov    rcx,rbx
   140003303:	call   0x140005170
   140003308:	mov    rbx,QWORD PTR [rbx+0x2c8]
   14000330f:	test   rbx,rbx
   140003312:	jne    0x140003300
   140003314:	xor    r8d,r8d
   140003317:	lea    edx,[r8+0x8]
   14000331b:	mov    rcx,rsi
   14000331e:	call   0x140001830
   140003323:	lea    rdx,[rip+0x3380e]        # 0x140036b38
   14000332a:	mov    rcx,rsi
   14000332d:	call   0x140001ce0
   140003332:	nop
   140003333:	lea    rcx,[rsp+0x48]
   140003338:	call   0x1400055c0
   14000333d:	movzx  eax,dil
   140003341:	lea    r11,[rsp+0x60]
   140003346:	mov    rbx,QWORD PTR [r11+0x18]
   14000334a:	mov    rbp,QWORD PTR [r11+0x20]
   14000334e:	mov    rsi,QWORD PTR [r11+0x28]
   140003352:	mov    rsp,r11
   140003355:	pop    rdi
   140003356:	ret    
   140003357:	int3   
   140003358:	int3   
   140003359:	int3   
   14000335a:	int3   
   14000335b:	int3   
   14000335c:	int3   
   14000335d:	int3   
   14000335e:	int3   
   14000335f:	int3   
   140003360:	mov    rax,rsp
   140003363:	push   r12
   140003365:	push   r14
   140003367:	push   r15
   140003369:	sub    rsp,0x60
   14000336d:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   140003375:	mov    QWORD PTR [rax+0x8],rbx
   140003379:	mov    QWORD PTR [rax+0x10],rbp
   14000337d:	mov    QWORD PTR [rax+0x18],rsi
   140003381:	mov    QWORD PTR [rax+0x20],rdi
   140003385:	mov    esi,edx
   140003387:	mov    r14,rcx
   14000338a:	mov    r8,QWORD PTR [rcx+0x10]
   14000338e:	mov    edx,DWORD PTR [rcx+0x360]
   140003394:	lea    rcx,[rax-0x30]
   140003398:	call   0x1400054e0
   14000339d:	nop
   14000339e:	cmp    esi,0x1
   1400033a1:	sete   r15b
   1400033a5:	test   r15b,r15b
   1400033a8:	je     0x1400033d4
   1400033aa:	lea    rax,[rip+0x3372f]        # 0x140036ae0
   1400033b1:	mov    QWORD PTR [rsp+0x20],rax
   1400033b6:	mov    r9d,0x3
   1400033bc:	mov    r8d,0x487
   1400033c2:	lea    rdx,[rip+0x32ab7]        # 0x140035e80
   1400033c9:	mov    rcx,QWORD PTR [r14+0x10]
   1400033cd:	call   0x140006ce0
   1400033d2:	jmp    0x140003408
   1400033d4:	mov    ecx,esi
   1400033d6:	call   0x140002c40
   1400033db:	mov    QWORD PTR [rsp+0x28],rax
   1400033e0:	lea    rax,[rip+0x33711]        # 0x140036af8
   1400033e7:	mov    QWORD PTR [rsp+0x20],rax
   1400033ec:	mov    r9d,0x3
   1400033f2:	mov    r8d,0x48b
   1400033f8:	lea    rdx,[rip+0x32a81]        # 0x140035e80
   1400033ff:	mov    rcx,QWORD PTR [r14+0x10]
   140003403:	call   0x140006ce0
   140003408:	mov    rbx,QWORD PTR [r14+0x20]
   14000340c:	test   rbx,rbx
   14000340f:	je     0x14000348c
   140003411:	lea    r12,[rip+0x33298]        # 0x1400366b0
   140003418:	nop    DWORD PTR [rax+rax*1+0x0]
   140003420:	mov    ebp,DWORD PTR [rbx+0x2b4]
   140003426:	test   esi,esi
   140003428:	je     0x140003478
   14000342a:	cmp    esi,ebp
   14000342c:	je     0x140003478
   14000342e:	mov    ecx,esi
   140003430:	call   0x140002c40
   140003435:	mov    rdi,rax
   140003438:	mov    ecx,ebp
   14000343a:	call   0x140002c40
   14000343f:	lea    rcx,[rbx+0x270]
   140003446:	mov    QWORD PTR [rsp+0x38],rdi
   14000344b:	mov    QWORD PTR [rsp+0x30],rax
   140003450:	mov    QWORD PTR [rsp+0x28],rcx
   140003455:	mov    QWORD PTR [rsp+0x20],r12
   14000345a:	mov    r9d,0x5
   140003460:	mov    r8d,0x49b
   140003466:	lea    rdx,[rip+0x32a13]        # 0x140035e80
   14000346d:	mov    rcx,QWORD PTR [r14+0x10]
   140003471:	call   0x140006ce0
   140003476:	jmp    0x140003480
   140003478:	mov    rcx,rbx
   14000347b:	call   0x140005170
   140003480:	mov    rbx,QWORD PTR [rbx+0x2c8]
   140003487:	test   rbx,rbx
   14000348a:	jne    0x140003420
   14000348c:	mov    r8d,esi
   14000348f:	mov    edx,0x8
   140003494:	mov    rcx,r14
   140003497:	call   0x140001830
   14000349c:	lea    rax,[rip+0x3367d]        # 0x140036b20
   1400034a3:	lea    rdx,[rip+0x3368e]        # 0x140036b38
   1400034aa:	test   r15b,r15b
   1400034ad:	cmovne rdx,rax
   1400034b1:	mov    rcx,r14
   1400034b4:	call   0x140001ce0
   1400034b9:	nop
   1400034ba:	lea    rcx,[rsp+0x48]
   1400034bf:	call   0x1400055c0
   1400034c4:	lea    r11,[rsp+0x60]
   1400034c9:	mov    rbx,QWORD PTR [r11+0x20]
   1400034cd:	mov    rbp,QWORD PTR [r11+0x28]
   1400034d1:	mov    rsi,QWORD PTR [r11+0x30]
   1400034d5:	mov    rdi,QWORD PTR [r11+0x38]
   1400034d9:	mov    rsp,r11
   1400034dc:	pop    r15
   1400034de:	pop    r14
   1400034e0:	pop    r12
   1400034e2:	ret    
   1400034e3:	int3   
   1400034e4:	int3   
   1400034e5:	int3   
   1400034e6:	int3   
   1400034e7:	int3   
   1400034e8:	int3   
   1400034e9:	int3   
   1400034ea:	int3   
   1400034eb:	int3   
   1400034ec:	int3   
   1400034ed:	int3   
   1400034ee:	int3   
   1400034ef:	int3   
   1400034f0:	rex push rdi
   1400034f2:	sub    rsp,0x60
   1400034f6:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   1400034ff:	mov    QWORD PTR [rsp+0x70],rbx
   140003504:	mov    QWORD PTR [rsp+0x78],rsi
   140003509:	mov    rdi,rcx
   14000350c:	mov    r8,QWORD PTR [rcx+0x10]
   140003510:	mov    edx,DWORD PTR [rcx+0x360]
   140003516:	lea    rcx,[rsp+0x48]
   14000351b:	call   0x1400054e0
   140003520:	nop
   140003521:	lea    rax,[rip+0x33550]        # 0x140036a78
   140003528:	mov    QWORD PTR [rsp+0x20],rax
   14000352d:	mov    r9d,0x3
   140003533:	mov    r8d,0x44f
   140003539:	lea    rdx,[rip+0x32940]        # 0x140035e80
   140003540:	mov    rcx,QWORD PTR [rdi+0x10]
   140003544:	call   0x140006ce0
   140003549:	mov    rbx,QWORD PTR [rdi+0x20]
   14000354d:	test   rbx,rbx
   140003550:	je     0x1400035b8
   140003552:	lea    rsi,[rip+0x33417]        # 0x140036970
   140003559:	nop    DWORD PTR [rax+0x0]
   140003560:	mov    ecx,DWORD PTR [rbx+0x2b4]
   140003566:	cmp    ecx,0x1
   140003569:	je     0x1400035a4
   14000356b:	call   0x140002c40
   140003570:	lea    rcx,[rbx+0x270]
   140003577:	mov    QWORD PTR [rsp+0x30],rax
   14000357c:	mov    QWORD PTR [rsp+0x28],rcx
   140003581:	mov    QWORD PTR [rsp+0x20],rsi
   140003586:	mov    r9d,0x5
   14000358c:	mov    r8d,0x456
   140003592:	lea    rdx,[rip+0x328e7]        # 0x140035e80
   140003599:	mov    rcx,QWORD PTR [rdi+0x10]
   14000359d:	call   0x140006ce0
   1400035a2:	jmp    0x1400035ac
   1400035a4:	mov    rcx,rbx
   1400035a7:	call   0x140005220
   1400035ac:	mov    rbx,QWORD PTR [rbx+0x2c8]
   1400035b3:	test   rbx,rbx
   1400035b6:	jne    0x140003560
   1400035b8:	xor    r8d,r8d
   1400035bb:	lea    edx,[r8+0x6]
   1400035bf:	mov    rcx,rdi
   1400035c2:	call   0x140001830
   1400035c7:	lea    rdx,[rip+0x334c2]        # 0x140036a90
   1400035ce:	mov    rcx,rdi
   1400035d1:	call   0x140001ce0
   1400035d6:	nop
   1400035d7:	lea    rcx,[rsp+0x48]
   1400035dc:	call   0x1400055c0
   1400035e1:	mov    rbx,QWORD PTR [rsp+0x70]
   1400035e6:	mov    rsi,QWORD PTR [rsp+0x78]
   1400035eb:	add    rsp,0x60
   1400035ef:	pop    rdi
   1400035f0:	ret    
   1400035f1:	int3   
   1400035f2:	int3   
   1400035f3:	int3   
   1400035f4:	int3   
   1400035f5:	int3   
   1400035f6:	int3   
   1400035f7:	int3   
   1400035f8:	int3   
   1400035f9:	int3   
   1400035fa:	int3   
   1400035fb:	int3   
   1400035fc:	int3   
   1400035fd:	int3   
   1400035fe:	int3   
   1400035ff:	int3   
   140003600:	mov    QWORD PTR [rsp+0x8],rbx
   140003605:	push   rdi
   140003606:	sub    rsp,0x20
   14000360a:	mov    rbx,QWORD PTR [rcx+0x18]
   14000360e:	mov    rdi,rdx
   140003611:	test   rbx,rbx
   140003614:	je     0x140003637
   140003616:	data16 nop WORD PTR [rax+rax*1+0x0]
   140003620:	mov    rdx,rdi
   140003623:	mov    rcx,rbx
   140003626:	call   0x1400052c0
   14000362b:	mov    rbx,QWORD PTR [rbx+0x2c0]
   140003632:	test   rbx,rbx
   140003635:	jne    0x140003620
   140003637:	mov    rbx,QWORD PTR [rsp+0x30]
   14000363c:	add    rsp,0x20
   140003640:	pop    rdi
   140003641:	ret    
   140003642:	int3   
   140003643:	int3   
   140003644:	int3   
   140003645:	int3   
   140003646:	int3   
   140003647:	int3   
   140003648:	int3   
   140003649:	int3   
   14000364a:	int3   
   14000364b:	int3   
   14000364c:	int3   
   14000364d:	int3   
   14000364e:	int3   
   14000364f:	int3   
   140003650:	mov    rax,rsp
   140003653:	push   r12
   140003655:	push   r14
   140003657:	push   r15
   140003659:	sub    rsp,0x60
   14000365d:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   140003665:	mov    QWORD PTR [rax+0x8],rbx
   140003669:	mov    QWORD PTR [rax+0x10],rbp
   14000366d:	mov    QWORD PTR [rax+0x18],rsi
   140003671:	mov    QWORD PTR [rax+0x20],rdi
   140003675:	mov    esi,edx
   140003677:	mov    r14,rcx
   14000367a:	mov    r8,QWORD PTR [rcx+0x10]
   14000367e:	mov    edx,DWORD PTR [rcx+0x360]
   140003684:	lea    rcx,[rax-0x30]
   140003688:	call   0x1400054e0
   14000368d:	nop
   14000368e:	cmp    esi,0x1
   140003691:	sete   r15b
   140003695:	test   r15b,r15b
   140003698:	je     0x1400036c4
   14000369a:	lea    rax,[rip+0x33317]        # 0x1400369b8
   1400036a1:	mov    QWORD PTR [rsp+0x20],rax
   1400036a6:	mov    r9d,0x3
   1400036ac:	mov    r8d,0x40a
   1400036b2:	lea    rdx,[rip+0x327c7]        # 0x140035e80
   1400036b9:	mov    rcx,QWORD PTR [r14+0x10]
   1400036bd:	call   0x140006ce0
   1400036c2:	jmp    0x1400036f8
   1400036c4:	mov    ecx,esi
   1400036c6:	call   0x140002c40
   1400036cb:	mov    QWORD PTR [rsp+0x28],rax
   1400036d0:	lea    rax,[rip+0x33301]        # 0x1400369d8
   1400036d7:	mov    QWORD PTR [rsp+0x20],rax
   1400036dc:	mov    r9d,0x3
   1400036e2:	mov    r8d,0x40e
   1400036e8:	lea    rdx,[rip+0x32791]        # 0x140035e80
   1400036ef:	mov    rcx,QWORD PTR [r14+0x10]
   1400036f3:	call   0x140006ce0
   1400036f8:	mov    rbx,QWORD PTR [r14+0x20]
   1400036fc:	test   rbx,rbx
   1400036ff:	je     0x14000377c
   140003701:	lea    r12,[rip+0x32fa8]        # 0x1400366b0
   140003708:	nop    DWORD PTR [rax+rax*1+0x0]
   140003710:	mov    ebp,DWORD PTR [rbx+0x2b4]
   140003716:	test   esi,esi
   140003718:	je     0x140003768
   14000371a:	cmp    esi,ebp
   14000371c:	je     0x140003768
   14000371e:	mov    ecx,esi
   140003720:	call   0x140002c40
   140003725:	mov    rdi,rax
   140003728:	mov    ecx,ebp
   14000372a:	call   0x140002c40
   14000372f:	lea    rcx,[rbx+0x270]
   140003736:	mov    QWORD PTR [rsp+0x38],rdi
   14000373b:	mov    QWORD PTR [rsp+0x30],rax
   140003740:	mov    QWORD PTR [rsp+0x28],rcx
   140003745:	mov    QWORD PTR [rsp+0x20],r12
   14000374a:	mov    r9d,0x5
   140003750:	mov    r8d,0x41e
   140003756:	lea    rdx,[rip+0x32723]        # 0x140035e80
   14000375d:	mov    rcx,QWORD PTR [r14+0x10]
   140003761:	call   0x140006ce0
   140003766:	jmp    0x140003770
   140003768:	mov    rcx,rbx
   14000376b:	call   0x140005340
   140003770:	mov    rbx,QWORD PTR [rbx+0x2c8]
   140003777:	test   rbx,rbx
   14000377a:	jne    0x140003710
   14000377c:	mov    r8d,esi
   14000377f:	xor    edx,edx
   140003781:	mov    rcx,r14
   140003784:	call   0x140001830
   140003789:	lea    rax,[rip+0x33270]        # 0x140036a00
   140003790:	lea    rdx,[rip+0x33289]        # 0x140036a20
   140003797:	test   r15b,r15b
   14000379a:	cmovne rdx,rax
   14000379e:	mov    rcx,r14
   1400037a1:	call   0x140001ce0
   1400037a6:	nop
   1400037a7:	lea    rcx,[rsp+0x48]
   1400037ac:	call   0x1400055c0
   1400037b1:	lea    r11,[rsp+0x60]
   1400037b6:	mov    rbx,QWORD PTR [r11+0x20]
   1400037ba:	mov    rbp,QWORD PTR [r11+0x28]
   1400037be:	mov    rsi,QWORD PTR [r11+0x30]
   1400037c2:	mov    rdi,QWORD PTR [r11+0x38]
   1400037c6:	mov    rsp,r11
   1400037c9:	pop    r15
   1400037cb:	pop    r14
   1400037cd:	pop    r12
   1400037cf:	ret    
   1400037d0:	rex push rdi
   1400037d2:	sub    rsp,0x50
   1400037d6:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   1400037df:	mov    QWORD PTR [rsp+0x60],rbx
   1400037e4:	mov    rdi,rcx
   1400037e7:	lea    rax,[rip+0x3298a]        # 0x140036178
   1400037ee:	mov    QWORD PTR [rsp+0x20],rax
   1400037f3:	mov    r9d,0x3
   1400037f9:	mov    r8d,0x178
   1400037ff:	lea    rdx,[rip+0x3267a]        # 0x140035e80
   140003806:	mov    rcx,QWORD PTR [rcx+0x10]
   14000380a:	call   0x140006ce0
   14000380f:	mov    rax,QWORD PTR [rdi+0x18]
   140003813:	test   rax,rax
   140003816:	je     0x140003841
   140003818:	nop    DWORD PTR [rax+rax*1+0x0]
   140003820:	mov    ecx,DWORD PTR [rax+0x2b4]
   140003826:	cmp    ecx,0x1
   140003829:	jne    0x140003835
   14000382b:	mov    DWORD PTR [rax+0x2b4],0x2
   140003835:	mov    rax,QWORD PTR [rax+0x2c0]
   14000383c:	test   rax,rax
   14000383f:	jne    0x140003820
   140003841:	lea    rdx,[rip+0x32960]        # 0x1400361a8
   140003848:	mov    rcx,rdi
   14000384b:	call   0x140001ce0
   140003850:	lea    rdx,[rdi+0x158]
   140003857:	mov    rcx,rdi
   14000385a:	call   0x1400023e0
   14000385f:	test   al,al
   140003861:	je     0x1400038eb
   140003867:	mov    edx,0x2
   14000386c:	mov    rcx,rdi
   14000386f:	call   0x140003360
   140003874:	mov    edx,0x2
   140003879:	mov    rcx,rdi
   14000387c:	call   0x140003650
   140003881:	mov    r8,QWORD PTR [rdi+0x10]
   140003885:	mov    edx,DWORD PTR [rdi+0x360]
   14000388b:	lea    rcx,[rsp+0x38]
   140003890:	call   0x1400054e0
   140003895:	nop
   140003896:	mov    rbx,QWORD PTR [rdi+0x18]
   14000389a:	test   rbx,rbx
   14000389d:	je     0x1400038bd
   14000389f:	nop
   1400038a0:	cmp    DWORD PTR [rbx+0x2b4],0x2
   1400038a7:	jne    0x1400038b1
   1400038a9:	mov    rcx,rbx
   1400038ac:	call   0x1400040e0
   1400038b1:	mov    rbx,QWORD PTR [rbx+0x2c0]
   1400038b8:	test   rbx,rbx
   1400038bb:	jne    0x1400038a0
   1400038bd:	lea    rdx,[rip+0x3290c]        # 0x1400361d0
   1400038c4:	mov    rcx,rdi
   1400038c7:	call   0x140001ce0
   1400038cc:	nop
   1400038cd:	lea    rcx,[rsp+0x38]
   1400038d2:	call   0x1400055c0
   1400038d7:	mov    rcx,rdi
   1400038da:	call   0x1400021f0
   1400038df:	test   al,al
   1400038e1:	je     0x1400038eb
   1400038e3:	mov    rcx,rdi
   1400038e6:	call   0x1400031b0
   1400038eb:	mov    rbx,QWORD PTR [rsp+0x60]
   1400038f0:	add    rsp,0x50
   1400038f4:	pop    rdi
   1400038f5:	ret    
   1400038f6:	int3   
   1400038f7:	int3   
   1400038f8:	int3   
   1400038f9:	int3   
   1400038fa:	int3   
   1400038fb:	int3   
   1400038fc:	int3   
   1400038fd:	int3   
   1400038fe:	int3   
   1400038ff:	int3   
   140003900:	rex push rbx
   140003902:	push   rbp
   140003903:	push   rsi
   140003904:	push   rdi
   140003905:	push   r12
   140003907:	push   r13
   140003909:	push   r14
   14000390b:	push   r15
   14000390d:	sub    rsp,0x2a8
   140003914:	mov    rax,QWORD PTR [rip+0x41955]        # 0x140045270
   14000391b:	xor    rax,rsp
   14000391e:	mov    QWORD PTR [rsp+0x290],rax
   140003926:	mov    rsi,rcx
   140003929:	mov    r13d,r8d
   14000392c:	mov    rbx,rdx
   14000392f:	mov    QWORD PTR [rsp+0x58],rdx
   140003934:	lea    rcx,[rsp+0x98]
   14000393c:	xor    edi,edi
   14000393e:	xor    edx,edx
   140003940:	mov    r8d,0x1f8
   140003946:	mov    r12d,r9d
   140003949:	mov    QWORD PTR [rsp+0x90],rdi
   140003951:	call   0x140009800
   140003956:	test   rbx,rbx
   140003959:	sete   r14b
   14000395d:	mov    ebp,edi
   14000395f:	mov    r15d,edi
   140003962:	mov    DWORD PTR [rsp+0x44],edi
   140003966:	mov    DWORD PTR [rsp+0x48],0xffffffff
   14000396e:	mov    DWORD PTR [rsp+0x50],0xffffffff
   140003976:	mov    BYTE PTR [rsp+0x40],r14b
   14000397b:	mov    DWORD PTR [rsp+0x4c],0xffffffff
   140003983:	test   r14b,r14b
   140003986:	jne    0x140003a78
   14000398c:	mov    rax,QWORD PTR [rsi+0x138]
   140003993:	mov    rcx,QWORD PTR [rsi+0x10]
   140003997:	mov    r15d,0x1
   14000399d:	mov    QWORD PTR [rsp+0x90],rax
   1400039a5:	lea    rax,[rip+0x32c34]        # 0x1400365e0
   1400039ac:	lea    r9d,[rdi+0x5]
   1400039b0:	lea    rdx,[rip+0x324c9]        # 0x140035e80
   1400039b7:	mov    r8d,0x2d5
   1400039bd:	mov    DWORD PTR [rsp+0x28],r15d
   1400039c2:	mov    QWORD PTR [rsp+0x20],rax
   1400039c7:	mov    DWORD PTR [rsp+0x44],0x1
   1400039cf:	mov    DWORD PTR [rsp+0x48],edi
   1400039d3:	mov    ebp,r15d
   1400039d6:	call   0x140006ce0
   1400039db:	mov    rax,QWORD PTR [rsi+0x140]
   1400039e2:	test   rax,rax
   1400039e5:	je     0x140003a2d
   1400039e7:	mov    rcx,QWORD PTR [rsi+0x10]
   1400039eb:	mov    ebp,0x2
   1400039f0:	mov    QWORD PTR [rsp+0x98],rax
   1400039f8:	lea    rax,[rip+0x32c09]        # 0x140036608
   1400039ff:	lea    r9d,[rdi+0x5]
   140003a03:	lea    rdx,[rip+0x32476]        # 0x140035e80
   140003a0a:	mov    r8d,0x2de
   140003a10:	mov    DWORD PTR [rsp+0x28],ebp
   140003a14:	mov    DWORD PTR [rsp+0x44],ebp
   140003a18:	mov    QWORD PTR [rsp+0x20],rax
   140003a1d:	mov    r15d,ebp
   140003a20:	mov    DWORD PTR [rsp+0x50],0x1
   140003a28:	call   0x140006ce0
   140003a2d:	mov    rcx,QWORD PTR [rsi+0x368]
   140003a34:	test   rcx,rcx
   140003a37:	je     0x140003a78
   140003a39:	mov    eax,ebp
   140003a3b:	mov    DWORD PTR [rsp+0x4c],ebp
   140003a3f:	inc    ebp
   140003a41:	mov    QWORD PTR [rsp+rax*8+0x90],rcx
   140003a49:	mov    rcx,QWORD PTR [rsi+0x10]
   140003a4d:	lea    rax,[rip+0x32bdc]        # 0x140036630
   140003a54:	lea    rdx,[rip+0x32425]        # 0x140035e80
   140003a5b:	mov    r9d,0x5
   140003a61:	mov    r8d,0x2e7
   140003a67:	mov    DWORD PTR [rsp+0x28],ebp
   140003a6b:	inc    r15d
   140003a6e:	mov    QWORD PTR [rsp+0x20],rax
   140003a73:	call   0x140006ce0
   140003a78:	mov    rdi,QWORD PTR [rsi+0x18]
   140003a7c:	test   rdi,rdi
   140003a7f:	je     0x140003bbf
   140003a85:	lea    rbx,[rip+0x32bd4]        # 0x140036660
   140003a8c:	nop    DWORD PTR [rax+0x0]
   140003a90:	mov    r14d,DWORD PTR [rdi+0x2b4]
   140003a97:	lea    eax,[r14-0x3]
   140003a9b:	cmp    eax,0x1
   140003a9e:	jbe    0x140003b71
   140003aa4:	mov    rcx,QWORD PTR [rdi+0x2b8]
   140003aab:	test   rcx,rcx
   140003aae:	jne    0x140003af6
   140003ab0:	mov    ecx,r14d
   140003ab3:	call   0x140002c40
   140003ab8:	lea    rcx,[rdi+0x270]
   140003abf:	lea    rdx,[rip+0x323ba]        # 0x140035e80
   140003ac6:	mov    QWORD PTR [rsp+0x30],rax
   140003acb:	mov    QWORD PTR [rsp+0x28],rcx
   140003ad0:	mov    rcx,QWORD PTR [rsi+0x10]
   140003ad4:	lea    rax,[rip+0x32ba5]        # 0x140036680
   140003adb:	mov    r9d,0x5
   140003ae1:	mov    r8d,0x2fc
   140003ae7:	mov    QWORD PTR [rsp+0x20],rax
   140003aec:	call   0x140006ce0
   140003af1:	jmp    0x140003ba9
   140003af6:	test   r12d,r12d
   140003af9:	je     0x140003b5a
   140003afb:	cmp    r12d,r14d
   140003afe:	je     0x140003b5a
   140003b00:	mov    ecx,r12d
   140003b03:	call   0x140002c40
   140003b08:	mov    ecx,r14d
   140003b0b:	mov    rbx,rax
   140003b0e:	call   0x140002c40
   140003b13:	mov    QWORD PTR [rsp+0x38],rbx
   140003b18:	mov    QWORD PTR [rsp+0x30],rax
   140003b1d:	lea    rcx,[rdi+0x270]
   140003b24:	lea    rax,[rip+0x32b85]        # 0x1400366b0
   140003b2b:	mov    QWORD PTR [rsp+0x28],rcx
   140003b30:	mov    rcx,QWORD PTR [rsi+0x10]
   140003b34:	lea    rdx,[rip+0x32345]        # 0x140035e80
   140003b3b:	mov    r9d,0x5
   140003b41:	mov    r8d,0x306
   140003b47:	mov    QWORD PTR [rsp+0x20],rax
   140003b4c:	call   0x140006ce0
   140003b51:	lea    rbx,[rip+0x32b08]        # 0x140036660
   140003b58:	jmp    0x140003ba9
   140003b5a:	cmp    ebp,0x40
   140003b5d:	jae    0x140003bf5
   140003b63:	mov    eax,ebp
   140003b65:	inc    ebp
   140003b67:	mov    QWORD PTR [rsp+rax*8+0x90],rcx
   140003b6f:	jmp    0x140003ba9
   140003b71:	mov    rdx,rdi
   140003b74:	mov    rcx,rsi
   140003b77:	call   0x140001a20
   140003b7c:	mov    rcx,QWORD PTR [rsi+0x10]
   140003b80:	lea    rax,[rdi+0x270]
   140003b87:	mov    QWORD PTR [rsp+0x28],rax
   140003b8c:	lea    rdx,[rip+0x322ed]        # 0x140035e80
   140003b93:	mov    r9d,0x4
   140003b99:	mov    r8d,0x2f3
   140003b9f:	mov    QWORD PTR [rsp+0x20],rbx
   140003ba4:	call   0x140006ce0
   140003ba9:	mov    rdi,QWORD PTR [rdi+0x2c0]
   140003bb0:	test   rdi,rdi
   140003bb3:	jne    0x140003a90
   140003bb9:	movzx  r14d,BYTE PTR [rsp+0x40]
   140003bbf:	cmp    ebp,r15d
   140003bc2:	ja     0x140003c15
   140003bc4:	mov    rcx,QWORD PTR [rsi+0x10]
   140003bc8:	lea    rax,[rip+0x32b39]        # 0x140036708
   140003bcf:	lea    rdx,[rip+0x322aa]        # 0x140035e80
   140003bd6:	mov    r9d,0x3
   140003bdc:	mov    r8d,0x317
   140003be2:	mov    QWORD PTR [rsp+0x20],rax
   140003be7:	call   0x140006ce0
   140003bec:	movzx  eax,r14b
   140003bf0:	jmp    0x140003f6b
   140003bf5:	mov    DWORD PTR [rsp+0x28],0x40
   140003bfd:	lea    rax,[rip+0x32ad4]        # 0x1400366d8
   140003c04:	mov    r9d,0x1
   140003c0a:	mov    r8d,0x30c
   140003c10:	jmp    0x140003f54
   140003c15:	call   QWORD PTR [rip+0x31455]        # 0x140035070
   140003c1b:	mov    r12d,DWORD PTR [rsp+0x44]
   140003c20:	mov    rbx,rax
   140003c23:	nop    DWORD PTR [rax+0x0]
   140003c27:	nop    WORD PTR [rax+rax*1+0x0]
   140003c30:	mov    r9d,r13d
   140003c33:	lea    rdx,[rsp+0x90]
   140003c3b:	mov    ecx,ebp
   140003c3d:	test   r14b,r14b
   140003c40:	je     0x140003c50
   140003c42:	mov    r8d,0x1
   140003c48:	call   QWORD PTR [rip+0x31432]        # 0x140035080
   140003c4e:	jmp    0x140003c61
   140003c50:	xor    r8d,r8d
   140003c53:	mov    DWORD PTR [rsp+0x20],0x4ff
   140003c5b:	call   QWORD PTR [rip+0x317af]        # 0x140035410
   140003c61:	mov    rcx,QWORD PTR [rsi+0x10]
   140003c65:	mov    DWORD PTR [rsp+0x28],eax
   140003c69:	mov    edi,eax
   140003c6b:	lea    rax,[rip+0x32ab6]        # 0x140036728
   140003c72:	lea    rdx,[rip+0x32207]        # 0x140035e80
   140003c79:	mov    r9d,0x5
   140003c7f:	mov    r8d,0x324
   140003c85:	mov    QWORD PTR [rsp+0x20],rax
   140003c8a:	call   0x140006ce0
   140003c8f:	cmp    edi,r12d
   140003c92:	jb     0x140003ea8
   140003c98:	cmp    edi,ebp
   140003c9a:	ja     0x140003ea8
   140003ca0:	cmp    edi,DWORD PTR [rsp+0x4c]
   140003ca4:	je     0x140003e20
   140003caa:	cmp    edi,ebp
   140003cac:	jb     0x140003d66
   140003cb2:	lea    rcx,[rsp+0x60]
   140003cb7:	xor    r9d,r9d
   140003cba:	xor    r8d,r8d
   140003cbd:	xor    edx,edx
   140003cbf:	mov    DWORD PTR [rsp+0x20],0x1
   140003cc7:	call   QWORD PTR [rip+0x31773]        # 0x140035440
   140003ccd:	test   eax,eax
   140003ccf:	je     0x140003d3c
   140003cd1:	lea    r14,[rip+0x32bb8]        # 0x140036890
   140003cd8:	nop    DWORD PTR [rax+rax*1+0x0]
   140003ce0:	mov    rcx,QWORD PTR [rsi+0x10]
   140003ce4:	lea    rdx,[rip+0x32195]        # 0x140035e80
   140003ceb:	mov    r9d,0x5
   140003cf1:	mov    r8d,0x36f
   140003cf7:	mov    QWORD PTR [rsp+0x20],r14
   140003cfc:	call   0x140006ce0
   140003d01:	lea    rcx,[rsp+0x60]
   140003d06:	call   QWORD PTR [rip+0x31744]        # 0x140035450
   140003d0c:	lea    rcx,[rsp+0x60]
   140003d11:	call   QWORD PTR [rip+0x31731]        # 0x140035448
   140003d17:	lea    rcx,[rsp+0x60]
   140003d1c:	xor    r9d,r9d
   140003d1f:	xor    r8d,r8d
   140003d22:	xor    edx,edx
   140003d24:	mov    DWORD PTR [rsp+0x20],0x1
   140003d2c:	call   QWORD PTR [rip+0x3170e]        # 0x140035440
   140003d32:	test   eax,eax
   140003d34:	jne    0x140003ce0
   140003d36:	movzx  r14d,BYTE PTR [rsp+0x40]
   140003d3c:	cmp    r13d,0xffffffff
   140003d40:	je     0x140003c30
   140003d46:	call   QWORD PTR [rip+0x31324]        # 0x140035070
   140003d4c:	mov    ecx,r13d
   140003d4f:	mov    rdx,rax
   140003d52:	sub    rdx,rbx
   140003d55:	cmp    rdx,rcx
   140003d58:	jae    0x140003e19
   140003d5e:	sub    r13d,edx
   140003d61:	jmp    0x140003c20
   140003d66:	test   r14b,r14b
   140003d69:	jne    0x140003e19
   140003d6f:	mov    r14,QWORD PTR [rsp+0x58]
   140003d74:	mov    QWORD PTR [r14],0x0
   140003d7b:	mov    rbx,QWORD PTR [rsi+0x18]
   140003d7f:	test   rbx,rbx
   140003d82:	je     0x140003ded
   140003d84:	cmp    DWORD PTR [rbx+0x2b0],0x0
   140003d8b:	jle    0x140003d95
   140003d8d:	cmp    r15d,edi
   140003d90:	je     0x140003da3
   140003d92:	inc    r15d
   140003d95:	mov    rbx,QWORD PTR [rbx+0x2c0]
   140003d9c:	test   rbx,rbx
   140003d9f:	jne    0x140003d84
   140003da1:	jmp    0x140003ded
   140003da3:	mov    rcx,QWORD PTR [rbx+0x2b8]
   140003daa:	call   QWORD PTR [rip+0x31428]        # 0x1400351d8
   140003db0:	lea    rax,[rbx+0x270]
   140003db7:	mov    QWORD PTR [r14],rbx
   140003dba:	mov    rcx,QWORD PTR [rsi+0x10]
   140003dbe:	mov    QWORD PTR [rsp+0x28],rax
   140003dc3:	lea    rax,[rip+0x32a7e]        # 0x140036848
   140003dca:	lea    rdx,[rip+0x320af]        # 0x140035e80
   140003dd1:	mov    r9d,0x3
   140003dd7:	mov    r8d,0x35d
   140003ddd:	mov    QWORD PTR [rsp+0x20],rax
   140003de2:	call   0x140006ce0
   140003de7:	cmp    QWORD PTR [r14],0x0
   140003deb:	jne    0x140003e19
   140003ded:	mov    rcx,QWORD PTR [rsi+0x10]
   140003df1:	lea    rax,[rip+0x32a70]        # 0x140036868
   140003df8:	lea    rdx,[rip+0x32081]        # 0x140035e80
   140003dff:	mov    r9d,0x1
   140003e05:	mov    r8d,0x365
   140003e0b:	mov    DWORD PTR [rsp+0x28],edi
   140003e0f:	mov    QWORD PTR [rsp+0x20],rax
   140003e14:	call   0x140006ce0
   140003e19:	mov    al,0x1
   140003e1b:	jmp    0x140003f6b
   140003e20:	mov    rcx,QWORD PTR [rsi+0x10]
   140003e24:	lea    rax,[rip+0x329dd]        # 0x140036808
   140003e2b:	lea    rdx,[rip+0x3204e]        # 0x140035e80
   140003e32:	mov    r9d,0x4
   140003e38:	mov    r8d,0x33c
   140003e3e:	mov    QWORD PTR [rsp+0x20],rax
   140003e43:	call   0x140006ce0
   140003e48:	mov    rcx,QWORD PTR [rsi+0x368]
   140003e4f:	call   QWORD PTR [rip+0x31383]        # 0x1400351d8
   140003e55:	mov    rcx,rsi
   140003e58:	call   0x1400037d0
   140003e5d:	test   al,al
   140003e5f:	jne    0x140003e95
   140003e61:	mov    rcx,QWORD PTR [rsi+0x10]
   140003e65:	lea    rax,[rip+0x329b4]        # 0x140036820
   140003e6c:	lea    rdx,[rip+0x3200d]        # 0x140035e80
   140003e73:	mov    r9d,0x1
   140003e79:	mov    r8d,0x341
   140003e7f:	mov    QWORD PTR [rsp+0x20],rax
   140003e84:	call   0x140006ce0
   140003e89:	mov    BYTE PTR [rsi+0x148],0x1
   140003e90:	jmp    0x140003f69
   140003e95:	mov    r14,QWORD PTR [rsp+0x58]
   140003e9a:	mov    al,0x1
   140003e9c:	mov    QWORD PTR [r14],0x0
   140003ea3:	jmp    0x140003f6b
   140003ea8:	cmp    edi,0xffffffff
   140003eab:	jne    0x140003ee8
   140003ead:	call   QWORD PTR [rip+0x31335]        # 0x1400351e8
   140003eb3:	mov    rcx,QWORD PTR [rsi+0x10]
   140003eb7:	lea    rdx,[rip+0x31fc2]        # 0x140035e80
   140003ebe:	mov    DWORD PTR [rsp+0x30],eax
   140003ec2:	lea    rax,[rip+0x3287f]        # 0x140036748
   140003ec9:	mov    r9d,0x1
   140003ecf:	mov    r8d,0x32a
   140003ed5:	mov    DWORD PTR [rsp+0x28],ebp
   140003ed9:	mov    QWORD PTR [rsp+0x20],rax
   140003ede:	call   0x140006ce0
   140003ee3:	jmp    0x140003f69
   140003ee8:	cmp    edi,0x102
   140003eee:	jne    0x140003eff
   140003ef0:	lea    rax,[rip+0x32891]        # 0x140036788
   140003ef7:	mov    r8d,0x32e
   140003efd:	jmp    0x140003f12
   140003eff:	cmp    edi,DWORD PTR [rsp+0x48]
   140003f03:	jne    0x140003f2f
   140003f05:	lea    rax,[rip+0x328b4]        # 0x1400367c0
   140003f0c:	mov    r8d,0x332
   140003f12:	mov    rcx,QWORD PTR [rsi+0x10]
   140003f16:	lea    rdx,[rip+0x31f63]        # 0x140035e80
   140003f1d:	mov    r9d,0x3
   140003f23:	mov    QWORD PTR [rsp+0x20],rax
   140003f28:	call   0x140006ce0
   140003f2d:	jmp    0x140003f69
   140003f2f:	cmp    edi,DWORD PTR [rsp+0x50]
   140003f33:	jne    0x140003f69
   140003f35:	mov    rax,QWORD PTR [rsi+0x140]
   140003f3c:	mov    r9d,0x3
   140003f42:	mov    r8d,0x336
   140003f48:	mov    QWORD PTR [rsp+0x28],rax
   140003f4d:	lea    rax,[rip+0x32884]        # 0x1400367d8
   140003f54:	mov    rcx,QWORD PTR [rsi+0x10]
   140003f58:	lea    rdx,[rip+0x31f21]        # 0x140035e80
   140003f5f:	mov    QWORD PTR [rsp+0x20],rax
   140003f64:	call   0x140006ce0
   140003f69:	xor    al,al
   140003f6b:	mov    rcx,QWORD PTR [rsp+0x290]
   140003f73:	xor    rcx,rsp
   140003f76:	call   0x1400097d0
   140003f7b:	add    rsp,0x2a8
   140003f82:	pop    r15
   140003f84:	pop    r14
   140003f86:	pop    r13
   140003f88:	pop    r12
   140003f8a:	pop    rdi
   140003f8b:	pop    rsi
   140003f8c:	pop    rbp
   140003f8d:	pop    rbx
   140003f8e:	ret    
   140003f8f:	int3   
   140003f90:	mov    QWORD PTR [rsp+0x18],r8
   140003f95:	mov    QWORD PTR [rsp+0x20],r9
   140003f9a:	sub    rsp,0x38
   140003f9e:	lea    rax,[rsp+0x58]
   140003fa3:	xor    r9d,r9d
   140003fa6:	mov    QWORD PTR [rsp+0x20],rax
   140003fab:	call   0x1400088a0
   140003fb0:	add    rsp,0x38
   140003fb4:	ret    
   140003fb5:	int3   
   140003fb6:	int3   
   140003fb7:	int3   
   140003fb8:	int3   
   140003fb9:	int3   
   140003fba:	int3   
   140003fbb:	int3   
   140003fbc:	int3   
   140003fbd:	int3   
   140003fbe:	int3   
   140003fbf:	int3   
   140003fc0:	rex push rbx
   140003fc2:	sub    rsp,0x20
   140003fc6:	mov    rax,QWORD PTR [rdx+0x10]
   140003fca:	mov    QWORD PTR [rcx+0x8],rdx
   140003fce:	mov    rbx,rcx
   140003fd1:	mov    QWORD PTR [rcx],rax
   140003fd4:	xor    eax,eax
   140003fd6:	mov    BYTE PTR [rcx+0x218],0x1
   140003fdd:	mov    DWORD PTR [rcx+0x2b4],0x1
   140003fe7:	mov    QWORD PTR [rcx+0x220],rax
   140003fee:	mov    DWORD PTR [rcx+0x2b0],eax
   140003ff4:	mov    QWORD PTR [rcx+0x2b8],rax
   140003ffb:	mov    QWORD PTR [rcx+0x2c0],rax
   140004002:	mov    QWORD PTR [rcx+0x2c8],rax
   140004009:	add    rcx,0x10
   14000400d:	xor    edx,edx
   14000400f:	mov    r8d,0x208
   140004015:	call   0x140009800
   14000401a:	xor    eax,eax
   14000401c:	mov    QWORD PTR [rbx+0x228],rax
   140004023:	mov    QWORD PTR [rbx+0x230],rax
   14000402a:	mov    QWORD PTR [rbx+0x238],rax
   140004031:	mov    QWORD PTR [rbx+0x240],rax
   140004038:	mov    QWORD PTR [rbx+0x248],rax
   14000403f:	mov    QWORD PTR [rbx+0x250],rax
   140004046:	mov    QWORD PTR [rbx+0x258],rax
   14000404d:	mov    QWORD PTR [rbx+0x260],rax
   140004054:	mov    QWORD PTR [rbx+0x268],rax
   14000405b:	mov    QWORD PTR [rbx+0x270],rax
   140004062:	mov    QWORD PTR [rbx+0x278],rax
   140004069:	mov    QWORD PTR [rbx+0x280],rax
   140004070:	mov    QWORD PTR [rbx+0x288],rax
   140004077:	mov    QWORD PTR [rbx+0x290],rax
   14000407e:	mov    QWORD PTR [rbx+0x298],rax
   140004085:	mov    QWORD PTR [rbx+0x2a0],rax
   14000408c:	mov    QWORD PTR [rbx+0x2a8],rax
   140004093:	mov    rax,rbx
   140004096:	add    rsp,0x20
   14000409a:	pop    rbx
   14000409b:	ret    
   14000409c:	int3   
   14000409d:	int3   
   14000409e:	int3   
   14000409f:	int3   
   1400040a0:	rex push rbx
   1400040a2:	sub    rsp,0x20
   1400040a6:	cmp    DWORD PTR [rcx+0x228],0x0
   1400040ad:	mov    rbx,rcx
   1400040b0:	je     0x1400040c8
   1400040b2:	cmp    DWORD PTR [rcx+0x2b0],0x0
   1400040b9:	je     0x1400040c8
   1400040bb:	call   0x140005170
   1400040c0:	mov    rcx,rbx
   1400040c3:	call   0x140005340
   1400040c8:	mov    rcx,rbx
   1400040cb:	add    rsp,0x20
   1400040cf:	pop    rbx
   1400040d0:	jmp    0x1400053e0
   1400040d5:	int3   
   1400040d6:	int3   
   1400040d7:	int3   
   1400040d8:	int3   
   1400040d9:	int3   
   1400040da:	int3   
   1400040db:	int3   
   1400040dc:	int3   
   1400040dd:	int3   
   1400040de:	int3   
   1400040df:	int3   
   1400040e0:	rex push rbx
   1400040e2:	sub    rsp,0x30
   1400040e6:	lea    rax,[rcx+0x270]
   1400040ed:	mov    rbx,rcx
   1400040f0:	mov    rcx,QWORD PTR [rcx]
   1400040f3:	mov    QWORD PTR [rsp+0x28],rax
   1400040f8:	lea    rax,[rip+0x32e09]        # 0x140036f08
   1400040ff:	lea    rdx,[rip+0x32aaa]        # 0x140036bb0
   140004106:	mov    r9d,0x3
   14000410c:	mov    r8d,0xdb
   140004112:	mov    QWORD PTR [rsp+0x20],rax
   140004117:	call   0x140006ce0
   14000411c:	mov    rcx,rbx
   14000411f:	call   0x1400053e0
   140004124:	mov    DWORD PTR [rbx+0x2b4],0x5
   14000412e:	add    rsp,0x30
   140004132:	pop    rbx
   140004133:	ret    
   140004134:	int3   
   140004135:	int3   
   140004136:	int3   
   140004137:	int3   
   140004138:	int3   
   140004139:	int3   
   14000413a:	int3   
   14000413b:	int3   
   14000413c:	int3   
   14000413d:	int3   
   14000413e:	int3   
   14000413f:	int3   
   140004140:	mov    rax,QWORD PTR [rcx+0x10]
   140004144:	ret    
   140004145:	int3   
   140004146:	int3   
   140004147:	int3   
   140004148:	int3   
   140004149:	int3   
   14000414a:	int3   
   14000414b:	int3   
   14000414c:	int3   
   14000414d:	int3   
   14000414e:	int3   
   14000414f:	int3   
   140004150:	mov    QWORD PTR [rsp+0x18],rbx
   140004155:	push   rdi
   140004156:	sub    rsp,0x90
   14000415d:	mov    rax,QWORD PTR [rip+0x4110c]        # 0x140045270
   140004164:	xor    rax,rsp
   140004167:	mov    QWORD PTR [rsp+0x80],rax
   14000416f:	mov    r8,QWORD PTR [rcx+0x238]
   140004176:	mov    edx,0x2
   14000417b:	mov    rbx,rcx
   14000417e:	call   0x140004e90
   140004183:	mov    edi,eax
   140004185:	test   eax,eax
   140004187:	je     0x1400041df
   140004189:	cmp    eax,0x2
   14000418c:	jne    0x1400041a2
   14000418e:	mov    rcx,QWORD PTR [rbx+0x2b8]
   140004195:	call   QWORD PTR [rip+0x31045]        # 0x1400351e0
   14000419b:	mov    al,0x1
   14000419d:	jmp    0x1400042e4
   1400041a2:	cmp    QWORD PTR [rbx+0x2b8],0x0
   1400041aa:	je     0x1400041e6
   1400041ac:	lea    rax,[rbx+0x270]
   1400041b3:	mov    r8d,0x1f4
   1400041b9:	mov    QWORD PTR [rsp+0x28],rax
   1400041be:	lea    rax,[rip+0x3301b]        # 0x1400371e0
   1400041c5:	mov    rcx,QWORD PTR [rbx]
   1400041c8:	lea    rdx,[rip+0x329e1]        # 0x140036bb0
   1400041cf:	mov    r9d,0x1
   1400041d5:	mov    QWORD PTR [rsp+0x20],rax
   1400041da:	call   0x140006ce0
   1400041df:	xor    al,al
   1400041e1:	jmp    0x1400042e4
   1400041e6:	xor    r9d,r9d
   1400041e9:	xor    r8d,r8d
   1400041ec:	xor    ecx,ecx
   1400041ee:	lea    edx,[r9+0x1]
   1400041f2:	call   QWORD PTR [rip+0x30fd0]        # 0x1400351c8
   1400041f8:	mov    QWORD PTR [rbx+0x2b8],rax
   1400041ff:	test   rax,rax
   140004202:	jne    0x14000421f
   140004204:	lea    rax,[rbx+0x270]
   14000420b:	mov    r8d,0x1fe
   140004211:	mov    QWORD PTR [rsp+0x28],rax
   140004216:	lea    rax,[rip+0x32ffb]        # 0x140037218
   14000421d:	jmp    0x1400041c5
   14000421f:	cmp    edi,0x1
   140004222:	je     0x14000419b
   140004228:	mov    rcx,QWORD PTR [rbx+0x8]
   14000422c:	mov    QWORD PTR [rsp+0xa8],rsi
   140004234:	mov    rax,QWORD PTR [rcx]
   140004237:	call   QWORD PTR [rax+0x10]
   14000423a:	xor    edi,edi
   14000423c:	mov    rsi,rax
   14000423f:	test   rax,rax
   140004242:	je     0x1400042b2
   140004244:	mov    QWORD PTR [rsp+0x38],rdi
   140004249:	lea    rax,[rsp+0x40]
   14000424e:	mov    QWORD PTR [rsp+0x30],rdi
   140004253:	or     r9d,0xffffffff
   140004257:	mov    r8,rsi
   14000425a:	xor    edx,edx
   14000425c:	xor    ecx,ecx
   14000425e:	mov    DWORD PTR [rsp+0x28],0x40
   140004266:	mov    QWORD PTR [rsp+0x20],rax
   14000426b:	call   QWORD PTR [rip+0x30e5f]        # 0x1400350d0
   140004271:	test   eax,eax
   140004273:	jne    0x1400042ad
   140004275:	call   QWORD PTR [rip+0x30f6d]        # 0x1400351e8
   14000427b:	mov    rcx,QWORD PTR [rbx]
   14000427e:	lea    r9d,[rdi+0x1]
   140004282:	mov    DWORD PTR [rsp+0x30],eax
   140004286:	lea    rax,[rip+0x32fbb]        # 0x140037248
   14000428d:	lea    rdx,[rip+0x3291c]        # 0x140036bb0
   140004294:	mov    r8d,0x217
   14000429a:	mov    QWORD PTR [rsp+0x28],rsi
   14000429f:	mov    QWORD PTR [rsp+0x20],rax
   1400042a4:	call   0x140006ce0
   1400042a9:	xor    al,al
   1400042ab:	jmp    0x1400042dc
   1400042ad:	lea    rdi,[rsp+0x40]
   1400042b2:	mov    edx,0x1
   1400042b7:	mov    rcx,rbx
   1400042ba:	call   0x140004310
   1400042bf:	lea    rdx,[rip+0x6ca]        # 0x140004990
   1400042c6:	mov    r8,rbx
   1400042c9:	mov    rcx,rdi
   1400042cc:	call   QWORD PTR [rbx+0x238]
   1400042d2:	mov    rcx,rbx
   1400042d5:	mov    edx,eax
   1400042d7:	call   0x140004bd0
   1400042dc:	mov    rsi,QWORD PTR [rsp+0xa8]
   1400042e4:	mov    rcx,QWORD PTR [rsp+0x80]
   1400042ec:	xor    rcx,rsp
   1400042ef:	call   0x1400097d0
   1400042f4:	mov    rbx,QWORD PTR [rsp+0xb0]
   1400042fc:	add    rsp,0x90
   140004303:	pop    rdi
   140004304:	ret    
   140004305:	int3   
   140004306:	int3   
   140004307:	int3   
   140004308:	int3   
   140004309:	int3   
   14000430a:	int3   
   14000430b:	int3   
   14000430c:	int3   
   14000430d:	int3   
   14000430e:	int3   
   14000430f:	int3   
   140004310:	mov    QWORD PTR [rsp+0x8],rbx
   140004315:	mov    QWORD PTR [rsp+0x10],rsi
   14000431a:	push   rdi
   14000431b:	sub    rsp,0x40
   14000431f:	mov    rsi,rcx
   140004322:	lea    rbx,[rcx+0x270]
   140004329:	mov    ecx,edx
   14000432b:	mov    edi,edx
   14000432d:	call   0x140002b80
   140004332:	mov    rcx,QWORD PTR [rsi]
   140004335:	mov    QWORD PTR [rsp+0x30],rbx
   14000433a:	mov    QWORD PTR [rsp+0x28],rax
   14000433f:	lea    rax,[rip+0x32bda]        # 0x140036f20
   140004346:	lea    rdx,[rip+0x32863]        # 0x140036bb0
   14000434d:	mov    r9d,0x3
   140004353:	mov    r8d,0xe5
   140004359:	mov    QWORD PTR [rsp+0x20],rax
   14000435e:	call   0x140006ce0
   140004363:	mov    rcx,QWORD PTR [rsi+0x2b8]
   14000436a:	mov    DWORD PTR [rsi+0x2b0],edi
   140004370:	mov    rbx,QWORD PTR [rsp+0x50]
   140004375:	mov    rsi,QWORD PTR [rsp+0x58]
   14000437a:	add    rsp,0x40
   14000437e:	pop    rdi
   14000437f:	rex.W jmp QWORD PTR [rip+0x30e52]        # 0x1400351d8
   140004386:	int3   
   140004387:	int3   
   140004388:	int3   
   140004389:	int3   
   14000438a:	int3   
   14000438b:	int3   
   14000438c:	int3   
   14000438d:	int3   
   14000438e:	int3   
   14000438f:	int3   
   140004390:	xor    eax,eax
   140004392:	cmp    QWORD PTR [rcx+0x220],rax
   140004399:	setne  al
   14000439c:	ret    
   14000439d:	int3   
   14000439e:	int3   
   14000439f:	int3   
   1400043a0:	mov    eax,DWORD PTR [rcx+0x8]
   1400043a3:	shr    eax,0x2
   1400043a6:	and    eax,0x1
   1400043a9:	ret    
   1400043aa:	int3   
   1400043ab:	int3   
   1400043ac:	int3   
   1400043ad:	int3   
   1400043ae:	int3   
   1400043af:	int3   
   1400043b0:	mov    QWORD PTR [rsp+0x20],rbx
   1400043b5:	push   rbp
   1400043b6:	push   rdi
   1400043b7:	push   r14
   1400043b9:	lea    rbp,[rsp-0x560]
   1400043c1:	sub    rsp,0x660
   1400043c8:	mov    rax,QWORD PTR [rip+0x40ea1]        # 0x140045270
   1400043cf:	xor    rax,rsp
   1400043d2:	mov    QWORD PTR [rbp+0x550],rax
   1400043d9:	mov    QWORD PTR [rsp+0x28],rdx
   1400043de:	mov    r9d,0x3
   1400043e4:	mov    rdi,rcx
   1400043e7:	mov    rcx,QWORD PTR [rcx]
   1400043ea:	mov    rbx,rdx
   1400043ed:	lea    rax,[rip+0x327ac]        # 0x140036ba0
   1400043f4:	lea    r8d,[r9+0x33]
   1400043f8:	lea    rdx,[rip+0x327b1]        # 0x140036bb0
   1400043ff:	mov    QWORD PTR [rsp+0x20],rax
   140004404:	call   0x140006ce0
   140004409:	lea    rcx,[rdi+0x10]
   14000440d:	mov    r8,rbx
   140004410:	mov    edx,0x104
   140004415:	call   0x14000781c
   14000441a:	lea    rcx,[rbp+0x242]
   140004421:	xor    r14d,r14d
   140004424:	xor    edx,edx
   140004426:	mov    r8d,0x206
   14000442c:	mov    WORD PTR [rbp+0x240],r14w
   140004434:	call   0x140009800
   140004439:	mov    QWORD PTR [rsp+0x40],r14
   14000443e:	mov    QWORD PTR [rsp+0x38],r14
   140004443:	lea    rax,[rbp+0x240]
   14000444a:	mov    QWORD PTR [rsp+0x30],0x104
   140004453:	xor    r9d,r9d
   140004456:	mov    QWORD PTR [rsp+0x28],rax
   14000445b:	xor    r8d,r8d
   14000445e:	xor    edx,edx
   140004460:	mov    rcx,rbx
   140004463:	mov    QWORD PTR [rsp+0x20],r14
   140004468:	call   0x14000844c
   14000446d:	cmp    WORD PTR [rbp+0x240],0x5f
   140004475:	setne  al
   140004478:	mov    BYTE PTR [rdi+0x218],al
   14000447e:	test   al,al
   140004480:	jne    0x1400044c5
   140004482:	mov    rax,QWORD PTR [rdi+0x8]
   140004486:	mov    r8d,DWORD PTR [rax+0x8]
   14000448a:	shr    r8d,0x2
   14000448e:	test   r8b,0x1
   140004492:	je     0x1400044c5
   140004494:	lea    rax,[rip+0x3276d]        # 0x140036c08
   14000449b:	lea    r8d,[r14+0x41]
   14000449f:	mov    rcx,QWORD PTR [rdi]
   1400044a2:	lea    rdx,[rip+0x32707]        # 0x140036bb0
   1400044a9:	mov    r9d,0x2
   1400044af:	mov    QWORD PTR [rsp+0x28],rbx
   1400044b4:	mov    QWORD PTR [rsp+0x20],rax
   1400044b9:	call   0x140006ce0
   1400044be:	xor    al,al
   1400044c0:	jmp    0x140004927
   1400044c5:	movaps xmm0,XMMWORD PTR [rip+0x32764]        # 0x140036c30
   1400044cc:	movaps xmm1,XMMWORD PTR [rip+0x3276d]        # 0x140036c40
   1400044d3:	mov    eax,DWORD PTR [rip+0x327a7]        # 0x140036c80
   1400044d9:	mov    DWORD PTR [rbp-0x50],eax
   1400044dc:	movzx  eax,WORD PTR [rip+0x327a1]        # 0x140036c84
   1400044e3:	lea    r9,[rbp+0x240]
   1400044ea:	movaps XMMWORD PTR [rsp+0x60],xmm0
   1400044ef:	movaps xmm0,XMMWORD PTR [rip+0x3275a]        # 0x140036c50
   1400044f6:	movaps XMMWORD PTR [rsp+0x70],xmm1
   1400044fb:	lea    r8,[rsp+0x60]
   140004500:	lea    rcx,[rbp+0x450]
   140004507:	mov    edx,0x80
   14000450c:	movaps xmm1,XMMWORD PTR [rip+0x3274d]        # 0x140036c60
   140004513:	movaps XMMWORD PTR [rbp-0x80],xmm0
   140004517:	movaps xmm0,XMMWORD PTR [rip+0x32752]        # 0x140036c70
   14000451e:	mov    WORD PTR [rbp-0x4c],ax
   140004522:	movaps XMMWORD PTR [rbp-0x60],xmm0
   140004526:	movaps XMMWORD PTR [rbp-0x70],xmm1
   14000452a:	call   0x1400054b0
   14000452f:	lea    rax,[rsp+0x50]
   140004534:	lea    r8,[rip+0x3274d]        # 0x140036c88
   14000453b:	mov    QWORD PTR [rsp+0x30],rax
   140004540:	lea    rax,[rsp+0x54]
   140004545:	lea    rdx,[rbp+0x450]
   14000454c:	mov    QWORD PTR [rsp+0x28],rax
   140004551:	mov    r9d,0x10
   140004557:	mov    rcx,0xffffffff80000002
   14000455e:	mov    DWORD PTR [rsp+0x54],r14d
   140004563:	mov    DWORD PTR [rsp+0x50],0x4
   14000456b:	mov    QWORD PTR [rsp+0x20],r14
   140004570:	call   QWORD PTR [rip+0x30ae2]        # 0x140035058
   140004576:	test   eax,eax
   140004578:	jne    0x140004593
   14000457a:	cmp    DWORD PTR [rsp+0x54],r14d
   14000457f:	je     0x140004593
   140004581:	lea    rax,[rip+0x32718]        # 0x140036ca0
   140004588:	mov    r8d,0x54
   14000458e:	jmp    0x14000449f
   140004593:	mov    QWORD PTR [rsp+0x690],rsi
   14000459b:	call   QWORD PTR [rip+0x30aff]        # 0x1400350a0
   1400045a1:	mov    ecx,eax
   1400045a3:	mov    esi,eax
   1400045a5:	or     ecx,0x1
   1400045a8:	call   QWORD PTR [rip+0x30afa]        # 0x1400350a8
   1400045ae:	mov    eax,DWORD PTR [rip+0x32774]        # 0x140036d28
   1400045b4:	lea    rcx,[rbp+0x32]
   1400045b8:	movaps xmm0,XMMWORD PTR [rip+0x32701]        # 0x140036cc0
   1400045bf:	movaps xmm1,XMMWORD PTR [rip+0x3270a]        # 0x140036cd0
   1400045c6:	mov    DWORD PTR [rbp+0x28],eax
   1400045c9:	movzx  eax,WORD PTR [rip+0x3275c]        # 0x140036d2c
   1400045d0:	xor    edx,edx
   1400045d2:	movaps XMMWORD PTR [rbp-0x40],xmm0
   1400045d6:	movaps xmm0,XMMWORD PTR [rip+0x32703]        # 0x140036ce0
   1400045dd:	movaps XMMWORD PTR [rbp-0x30],xmm1
   1400045e1:	mov    r8d,0x206
   1400045e7:	mov    WORD PTR [rbp+0x30],r14w
   1400045ec:	mov    WORD PTR [rbp+0x2c],ax
   1400045f0:	movaps xmm1,XMMWORD PTR [rip+0x326f9]        # 0x140036cf0
   1400045f7:	movaps XMMWORD PTR [rbp-0x20],xmm0
   1400045fb:	movaps xmm0,XMMWORD PTR [rip+0x326fe]        # 0x140036d00
   140004602:	movaps XMMWORD PTR [rbp-0x10],xmm1
   140004606:	movaps xmm1,XMMWORD PTR [rip+0x32703]        # 0x140036d10
   14000460d:	movaps XMMWORD PTR [rbp+0x0],xmm0
   140004611:	movsd  xmm0,QWORD PTR [rip+0x32707]        # 0x140036d20
   140004619:	movsd  QWORD PTR [rbp+0x20],xmm0
   14000461e:	movaps XMMWORD PTR [rbp+0x10],xmm1
   140004622:	call   0x140009800
   140004627:	lea    rax,[rsp+0x50]
   14000462c:	lea    r8,[rbp+0x240]
   140004633:	mov    QWORD PTR [rsp+0x30],rax
   140004638:	lea    rax,[rbp+0x30]
   14000463c:	lea    rdx,[rbp-0x40]
   140004640:	mov    QWORD PTR [rsp+0x28],rax
   140004645:	mov    r9d,0x2
   14000464b:	mov    rcx,0xffffffff80000002
   140004652:	mov    QWORD PTR [rsp+0x20],r14
   140004657:	mov    DWORD PTR [rsp+0x50],0x208
   14000465f:	call   QWORD PTR [rip+0x309f3]        # 0x140035058
   140004665:	test   eax,eax
   140004667:	jne    0x1400046d4
   140004669:	cmp    WORD PTR [rbp+0x30],r14w
   14000466e:	je     0x1400046d4
   140004670:	lea    rcx,[rbp+0x30]
   140004674:	call   QWORD PTR [rip+0x30a4e]        # 0x1400350c8
   14000467a:	test   eax,eax
   14000467c:	je     0x14000469a
   14000467e:	lea    rax,[rbp+0x30]
   140004682:	mov    r9d,0x3
   140004688:	mov    QWORD PTR [rsp+0x28],rax
   14000468d:	lea    rax,[rip+0x3269c]        # 0x140036d30
   140004694:	lea    r8d,[r9+0x68]
   140004698:	jmp    0x1400046e9
   14000469a:	call   QWORD PTR [rip+0x30b48]        # 0x1400351e8
   1400046a0:	mov    rcx,QWORD PTR [rdi]
   1400046a3:	mov    r9d,0x1
   1400046a9:	mov    DWORD PTR [rsp+0x30],eax
   1400046ad:	lea    rax,[rbp+0x30]
   1400046b1:	lea    r8d,[r9+0x6e]
   1400046b5:	mov    QWORD PTR [rsp+0x28],rax
   1400046ba:	lea    rax,[rip+0x32697]        # 0x140036d58
   1400046c1:	lea    rdx,[rip+0x324e8]        # 0x140036bb0
   1400046c8:	mov    QWORD PTR [rsp+0x20],rax
   1400046cd:	call   0x140006ce0
   1400046d2:	jmp    0x1400046fd
   1400046d4:	mov    r9d,0x4
   1400046da:	mov    DWORD PTR [rsp+0x28],eax
   1400046de:	lea    rax,[rip+0x326b3]        # 0x140036d98
   1400046e5:	lea    r8d,[r9+0x70]
   1400046e9:	mov    rcx,QWORD PTR [rdi]
   1400046ec:	lea    rdx,[rip+0x324bd]        # 0x140036bb0
   1400046f3:	mov    QWORD PTR [rsp+0x20],rax
   1400046f8:	call   0x140006ce0
   1400046fd:	mov    rcx,QWORD PTR [rdi]
   140004700:	lea    rax,[rip+0x326c1]        # 0x140036dc8
   140004707:	lea    rdx,[rip+0x324a2]        # 0x140036bb0
   14000470e:	mov    r9d,0x3
   140004714:	mov    r8d,0x89
   14000471a:	mov    QWORD PTR [rsp+0x28],rbx
   14000471f:	mov    QWORD PTR [rsp+0x20],rax
   140004724:	call   0x140006ce0
   140004729:	mov    rcx,rbx
   14000472c:	call   QWORD PTR [rip+0x3098e]        # 0x1400350c0
   140004732:	xor    ecx,ecx
   140004734:	mov    QWORD PTR [rdi+0x220],rax
   14000473b:	call   QWORD PTR [rip+0x30987]        # 0x1400350c8
   140004741:	mov    ecx,esi
   140004743:	call   QWORD PTR [rip+0x3095f]        # 0x1400350a8
   140004749:	cmp    QWORD PTR [rdi+0x220],r14
   140004750:	jne    0x14000478f
   140004752:	call   QWORD PTR [rip+0x30a90]        # 0x1400351e8
   140004758:	mov    rcx,QWORD PTR [rdi]
   14000475b:	lea    rdx,[rip+0x3244e]        # 0x140036bb0
   140004762:	mov    DWORD PTR [rsp+0x30],eax
   140004766:	lea    rax,[rip+0x32673]        # 0x140036de0
   14000476d:	mov    r9d,0x1
   140004773:	mov    r8d,0x90
   140004779:	mov    QWORD PTR [rsp+0x28],rbx
   14000477e:	mov    QWORD PTR [rsp+0x20],rax
   140004783:	call   0x140006ce0
   140004788:	xor    al,al
   14000478a:	jmp    0x14000491f
   14000478f:	mov    rcx,QWORD PTR [rdi]
   140004792:	lea    rax,[rip+0x3266f]        # 0x140036e08
   140004799:	lea    rdx,[rip+0x32410]        # 0x140036bb0
   1400047a0:	mov    r9d,0x3
   1400047a6:	mov    r8d,0x94
   1400047ac:	mov    QWORD PTR [rsp+0x28],rbx
   1400047b1:	mov    QWORD PTR [rsp+0x20],rax
   1400047b6:	call   0x140006ce0
   1400047bb:	mov    rcx,QWORD PTR [rdi+0x220]
   1400047c2:	lea    rdx,[rip+0x3264f]        # 0x140036e18
   1400047c9:	mov    sil,0x1
   1400047cc:	call   QWORD PTR [rip+0x308e6]        # 0x1400350b8
   1400047d2:	mov    rcx,QWORD PTR [rdi]
   1400047d5:	mov    QWORD PTR [rsp+0x28],rbx
   1400047da:	mov    r14,rax
   1400047dd:	lea    rdx,[rip+0x323cc]        # 0x140036bb0
   1400047e4:	test   rax,rax
   1400047e7:	jne    0x1400047ff
   1400047e9:	lea    rax,[rip+0x32638]        # 0x140036e28
   1400047f0:	lea    r9d,[r14+0x2]
   1400047f4:	mov    r8d,0x9c
   1400047fa:	jmp    0x140004906
   1400047ff:	lea    rax,[rip+0x3264a]        # 0x140036e50
   140004806:	mov    r9d,0x4
   14000480c:	mov    r8d,0xa1
   140004812:	mov    QWORD PTR [rsp+0x20],rax
   140004817:	call   0x140006ce0
   14000481c:	call   r14
   14000481f:	test   rax,rax
   140004822:	je     0x1400048e4
   140004828:	cmp    DWORD PTR [rax],0x0
   14000482b:	je     0x1400048e4
   140004831:	movups xmm0,XMMWORD PTR [rax]
   140004834:	lea    rbx,[rdi+0x270]
   14000483b:	mov    edx,0x40
   140004840:	mov    rcx,rbx
   140004843:	movups XMMWORD PTR [rdi+0x228],xmm0
   14000484a:	movups xmm1,XMMWORD PTR [rax+0x10]
   14000484e:	movups XMMWORD PTR [rdi+0x238],xmm1
   140004855:	movups xmm0,XMMWORD PTR [rax+0x20]
   140004859:	movups XMMWORD PTR [rdi+0x248],xmm0
   140004860:	movups xmm1,XMMWORD PTR [rax+0x30]
   140004864:	movups XMMWORD PTR [rdi+0x258],xmm1
   14000486b:	movsd  xmm0,QWORD PTR [rax+0x40]
   140004870:	movsd  QWORD PTR [rdi+0x268],xmm0
   140004878:	mov    r8,QWORD PTR [rdi+0x230]
   14000487f:	call   0x140009b0c
   140004884:	cmp    BYTE PTR [rdi+0x218],0x0
   14000488b:	lea    rax,[rip+0x3261e]        # 0x140036eb0
   140004892:	lea    rcx,[rip+0x32627]        # 0x140036ec0
   140004899:	lea    rdx,[rip+0x32310]        # 0x140036bb0
   1400048a0:	mov    r9d,0x3
   1400048a6:	cmovne rcx,rax
   1400048aa:	mov    eax,DWORD PTR [rdi+0x228]
   1400048b0:	mov    r8d,0xba
   1400048b6:	mov    DWORD PTR [rsp+0x38],eax
   1400048ba:	mov    QWORD PTR [rsp+0x30],rbx
   1400048bf:	mov    QWORD PTR [rsp+0x28],rcx
   1400048c4:	mov    rcx,QWORD PTR [rdi]
   1400048c7:	lea    rax,[rip+0x32602]        # 0x140036ed0
   1400048ce:	mov    QWORD PTR [rsp+0x20],rax
   1400048d3:	call   0x140006ce0
   1400048d8:	mov    DWORD PTR [rdi+0x2b4],0x1
   1400048e2:	jmp    0x14000491b
   1400048e4:	mov    rcx,QWORD PTR [rdi]
   1400048e7:	mov    QWORD PTR [rsp+0x28],rbx
   1400048ec:	lea    rax,[rip+0x3257d]        # 0x140036e70
   1400048f3:	mov    r9d,0x1
   1400048f9:	mov    r8d,0xa8
   1400048ff:	lea    rdx,[rip+0x322aa]        # 0x140036bb0
   140004906:	mov    QWORD PTR [rsp+0x20],rax
   14000490b:	call   0x140006ce0
   140004910:	mov    rcx,rdi
   140004913:	xor    sil,sil
   140004916:	call   0x1400053e0
   14000491b:	movzx  eax,sil
   14000491f:	mov    rsi,QWORD PTR [rsp+0x690]
   140004927:	mov    rcx,QWORD PTR [rbp+0x550]
   14000492e:	xor    rcx,rsp
   140004931:	call   0x1400097d0
   140004936:	mov    rbx,QWORD PTR [rsp+0x698]
   14000493e:	add    rsp,0x660
   140004945:	pop    r14
   140004947:	pop    rdi
   140004948:	pop    rbp
   140004949:	ret    
   14000494a:	int3   
   14000494b:	int3   
   14000494c:	int3   
   14000494d:	int3   
   14000494e:	int3   
   14000494f:	int3   
   140004950:	mov    edx,DWORD PTR [rcx+0x2b0]
   140004956:	mov    ecx,edx
   140004958:	dec    ecx
   14000495a:	je     0x140004988
   14000495c:	sub    ecx,0x2
   14000495f:	je     0x140004982
   140004961:	sub    ecx,0x2
   140004964:	je     0x14000497c
   140004966:	sub    ecx,0x2
   140004969:	je     0x140004976
   14000496b:	cmp    ecx,0x2
   14000496e:	je     0x140004973
   140004970:	mov    eax,edx
   140004972:	ret    
   140004973:	xor    eax,eax
   140004975:	ret    
   140004976:	mov    eax,0x8
   14000497b:	ret    
   14000497c:	mov    eax,0x6
   140004981:	ret    
   140004982:	mov    eax,0x4
   140004987:	ret    
   140004988:	mov    eax,0x2
   14000498d:	ret    
   14000498e:	int3   
   14000498f:	int3   
   140004990:	mov    rax,r8
   140004993:	mov    r8,rdx
   140004996:	mov    edx,ecx
   140004998:	mov    rcx,rax
   14000499b:	jmp    0x1400049a0
   1400049a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400049a5:	mov    QWORD PTR [rsp+0x10],rsi
   1400049aa:	push   rdi
   1400049ab:	sub    rsp,0x40
   1400049af:	lea    rsi,[rcx+0x270]
   1400049b6:	mov    rbx,rcx
   1400049b9:	mov    rcx,QWORD PTR [rcx]
   1400049bc:	mov    QWORD PTR [rsp+0x38],rsi
   1400049c1:	mov    QWORD PTR [rsp+0x30],r8
   1400049c6:	mov    DWORD PTR [rsp+0x28],edx
   1400049ca:	mov    edi,edx
   1400049cc:	lea    rax,[rip+0x325fd]        # 0x140036fd0
   1400049d3:	lea    rdx,[rip+0x321d6]        # 0x140036bb0
   1400049da:	mov    r9d,0x3
   1400049e0:	mov    r8d,0x145
   1400049e6:	mov    QWORD PTR [rsp+0x20],rax
   1400049eb:	call   0x140006ce0
   1400049f0:	cmp    edi,0x1
   1400049f3:	je     0x140004aed
   1400049f9:	cmp    edi,0x2
   1400049fc:	jne    0x140004ab5
   140004a02:	cmp    BYTE PTR [rbx+0x218],0x0
   140004a09:	lea    rcx,[rip+0x324a0]        # 0x140036eb0
   140004a10:	mov    QWORD PTR [rsp+0x30],rsi
   140004a15:	lea    rax,[rip+0x324a4]        # 0x140036ec0
   140004a1c:	lea    r9d,[rdi-0x1]
   140004a20:	lea    rdx,[rip+0x32189]        # 0x140036bb0
   140004a27:	cmovne rax,rcx
   140004a2b:	mov    rcx,QWORD PTR [rbx]
   140004a2e:	mov    r8d,0x14d
   140004a34:	mov    QWORD PTR [rsp+0x28],rax
   140004a39:	lea    rax,[rip+0x325b0]        # 0x140036ff0
   140004a40:	mov    QWORD PTR [rsp+0x20],rax
   140004a45:	call   0x140006ce0
   140004a4a:	mov    edx,DWORD PTR [rbx+0x2b0]
   140004a50:	lea    eax,[rdx-0x5]
   140004a53:	xor    ecx,ecx
   140004a55:	test   eax,0xfffffff9
   140004a5a:	jne    0x140004a9c
   140004a5c:	cmp    edx,0xb
   140004a5f:	je     0x140004a9c
   140004a61:	mov    ecx,edx
   140004a63:	call   0x140002b80
   140004a68:	mov    rcx,QWORD PTR [rbx]
   140004a6b:	lea    r9d,[rdi-0x1]
   140004a6f:	mov    QWORD PTR [rsp+0x30],rax
   140004a74:	lea    rax,[rip+0x325a5]        # 0x140037020
   140004a7b:	lea    rdx,[rip+0x3212e]        # 0x140036bb0
   140004a82:	mov    r8d,0x158
   140004a88:	mov    QWORD PTR [rsp+0x28],rsi
   140004a8d:	mov    QWORD PTR [rsp+0x20],rax
   140004a92:	call   0x140006ce0
   140004a97:	mov    ecx,0x1
   140004a9c:	mov    edx,ecx
   140004a9e:	mov    rcx,rbx
   140004aa1:	mov    rbx,QWORD PTR [rsp+0x50]
   140004aa6:	mov    rsi,QWORD PTR [rsp+0x58]
   140004aab:	add    rsp,0x40
   140004aaf:	pop    rdi
   140004ab0:	jmp    0x140004bd0
   140004ab5:	cmp    edi,0x3
   140004ab8:	jne    0x140004b7a
   140004abe:	mov    rcx,QWORD PTR [rbx]
   140004ac1:	lea    rax,[rip+0x325b0]        # 0x140037078
   140004ac8:	lea    rdx,[rip+0x320e1]        # 0x140036bb0
   140004acf:	mov    r9d,edi
   140004ad2:	mov    r8d,0x15f
   140004ad8:	mov    QWORD PTR [rsp+0x28],rsi
   140004add:	mov    QWORD PTR [rsp+0x20],rax
   140004ae2:	call   0x140006ce0
   140004ae7:	mov    DWORD PTR [rbx+0x2b4],edi
   140004aed:	mov    ecx,DWORD PTR [rbx+0x2b0]
   140004af3:	mov    edx,ecx
   140004af5:	dec    edx
   140004af7:	je     0x140004b26
   140004af9:	sub    edx,0x2
   140004afc:	je     0x140004b1f
   140004afe:	sub    edx,0x2
   140004b01:	je     0x140004b18
   140004b03:	sub    edx,0x2
   140004b06:	je     0x140004b11
   140004b08:	cmp    edx,0x2
   140004b0b:	jne    0x140004b2b
   140004b0d:	xor    ecx,ecx
   140004b0f:	jmp    0x140004b2b
   140004b11:	mov    ecx,0x8
   140004b16:	jmp    0x140004b2b
   140004b18:	mov    ecx,0x6
   140004b1d:	jmp    0x140004b2b
   140004b1f:	mov    ecx,0x4
   140004b24:	jmp    0x140004b2b
   140004b26:	mov    ecx,0x2
   140004b2b:	mov    DWORD PTR [rbx+0x2b0],ecx
   140004b31:	mov    rcx,QWORD PTR [rbx+0x2b8]
   140004b38:	call   QWORD PTR [rip+0x306a2]        # 0x1400351e0
   140004b3e:	mov    ecx,DWORD PTR [rbx+0x2b0]
   140004b44:	call   0x140002b80
   140004b49:	mov    rcx,QWORD PTR [rbx]
   140004b4c:	mov    QWORD PTR [rsp+0x30],rsi
   140004b51:	mov    QWORD PTR [rsp+0x28],rax
   140004b56:	lea    rax,[rip+0x3241b]        # 0x140036f78
   140004b5d:	lea    rdx,[rip+0x3204c]        # 0x140036bb0
   140004b64:	mov    r9d,0x3
   140004b6a:	mov    r8d,0x103
   140004b70:	mov    QWORD PTR [rsp+0x20],rax
   140004b75:	call   0x140006ce0
   140004b7a:	mov    rbx,QWORD PTR [rsp+0x50]
   140004b7f:	mov    rsi,QWORD PTR [rsp+0x58]
   140004b84:	add    rsp,0x40
   140004b88:	pop    rdi
   140004b89:	ret    
   140004b8a:	int3   
   140004b8b:	int3   
   140004b8c:	int3   
   140004b8d:	int3   
   140004b8e:	int3   
   140004b8f:	int3   
   140004b90:	mov    edx,DWORD PTR [rcx+0x2b0]
   140004b96:	mov    ecx,edx
   140004b98:	dec    ecx
   140004b9a:	je     0x140004bbf
   140004b9c:	sub    ecx,0x2
   140004b9f:	je     0x140004bb9
   140004ba1:	sub    ecx,0x2
   140004ba4:	je     0x140004bb3
   140004ba6:	sub    ecx,0x2
   140004ba9:	je     0x140004bb9
   140004bab:	cmp    ecx,0x2
   140004bae:	je     0x140004bbf
   140004bb0:	mov    eax,edx
   140004bb2:	ret    
   140004bb3:	mov    eax,0x6
   140004bb8:	ret    
   140004bb9:	mov    eax,0x8
   140004bbe:	ret    
   140004bbf:	xor    eax,eax
   140004bc1:	ret    
   140004bc2:	int3   
   140004bc3:	int3   
   140004bc4:	int3   
   140004bc5:	int3   
   140004bc6:	int3   
   140004bc7:	int3   
   140004bc8:	int3   
   140004bc9:	int3   
   140004bca:	int3   
   140004bcb:	int3   
   140004bcc:	int3   
   140004bcd:	int3   
   140004bce:	int3   
   140004bcf:	int3   
   140004bd0:	mov    QWORD PTR [rsp+0x10],rbx
   140004bd5:	push   rsi
   140004bd6:	sub    rsp,0x40
   140004bda:	mov    rsi,rcx
   140004bdd:	test   edx,edx
   140004bdf:	jne    0x140004cb3
   140004be5:	cmp    BYTE PTR [rcx+0x218],dl
   140004beb:	lea    rax,[rip+0x322be]        # 0x140036eb0
   140004bf2:	mov    QWORD PTR [rsp+0x50],rdi
   140004bf7:	lea    rdi,[rcx+0x270]
   140004bfe:	mov    ecx,DWORD PTR [rcx+0x2b0]
   140004c04:	lea    rbx,[rip+0x322b5]        # 0x140036ec0
   140004c0b:	cmovne rbx,rax
   140004c0f:	call   0x140002b80
   140004c14:	mov    rcx,QWORD PTR [rsi]
   140004c17:	mov    QWORD PTR [rsp+0x38],rdi
   140004c1c:	mov    QWORD PTR [rsp+0x30],rbx
   140004c21:	mov    QWORD PTR [rsp+0x28],rax
   140004c26:	lea    rax,[rip+0x3231b]        # 0x140036f48
   140004c2d:	lea    rdx,[rip+0x31f7c]        # 0x140036bb0
   140004c34:	mov    r9d,0x1
   140004c3a:	mov    r8d,0xf4
   140004c40:	mov    QWORD PTR [rsp+0x20],rax
   140004c45:	call   0x140006ce0
   140004c4a:	mov    ecx,DWORD PTR [rsi+0x2b0]
   140004c50:	mov    rdi,QWORD PTR [rsp+0x50]
   140004c55:	mov    ebx,0x4
   140004c5a:	mov    edx,ecx
   140004c5c:	mov    DWORD PTR [rsi+0x2b4],ebx
   140004c62:	xor    ebx,ebx
   140004c64:	dec    edx
   140004c66:	je     0x140004c7c
   140004c68:	sub    edx,0x2
   140004c6b:	je     0x140004cac
   140004c6d:	sub    edx,0x2
   140004c70:	je     0x140004ca5
   140004c72:	sub    edx,0x2
   140004c75:	je     0x140004cac
   140004c77:	cmp    edx,0x2
   140004c7a:	jne    0x140004c7e
   140004c7c:	mov    ecx,ebx
   140004c7e:	mov    DWORD PTR [rsi+0x2b0],ecx
   140004c84:	mov    rcx,QWORD PTR [rsi+0x2b8]
   140004c8b:	call   QWORD PTR [rip+0x3054f]        # 0x1400351e0
   140004c91:	cmp    BYTE PTR [rsi+0x218],bl
   140004c97:	sete   al
   140004c9a:	mov    rbx,QWORD PTR [rsp+0x58]
   140004c9f:	add    rsp,0x40
   140004ca3:	pop    rsi
   140004ca4:	ret    
   140004ca5:	mov    ecx,0x6
   140004caa:	jmp    0x140004c7e
   140004cac:	mov    ecx,0x8
   140004cb1:	jmp    0x140004c7e
   140004cb3:	cmp    edx,0x1
   140004cb6:	jne    0x140004d34
   140004cb8:	mov    ebx,DWORD PTR [rcx+0x2b0]
   140004cbe:	mov    ecx,ebx
   140004cc0:	dec    ecx
   140004cc2:	je     0x140004cf1
   140004cc4:	sub    ecx,0x2
   140004cc7:	je     0x140004cea
   140004cc9:	sub    ecx,0x2
   140004ccc:	je     0x140004ce3
   140004cce:	sub    ecx,0x2
   140004cd1:	je     0x140004cdc
   140004cd3:	cmp    ecx,0x2
   140004cd6:	jne    0x140004cf6
   140004cd8:	xor    ebx,ebx
   140004cda:	jmp    0x140004cf6
   140004cdc:	mov    ebx,0x8
   140004ce1:	jmp    0x140004cf6
   140004ce3:	mov    ebx,0x6
   140004ce8:	jmp    0x140004cf6
   140004cea:	mov    ebx,0x4
   140004cef:	jmp    0x140004cf6
   140004cf1:	mov    ebx,0x2
   140004cf6:	mov    rcx,QWORD PTR [rsi+0x2b8]
   140004cfd:	mov    DWORD PTR [rsi+0x2b0],ebx
   140004d03:	call   QWORD PTR [rip+0x304d7]        # 0x1400351e0
   140004d09:	mov    ecx,DWORD PTR [rsi+0x2b0]
   140004d0f:	lea    rbx,[rsi+0x270]
   140004d16:	call   0x140002b80
   140004d1b:	mov    QWORD PTR [rsp+0x30],rbx
   140004d20:	mov    r8d,0x103
   140004d26:	mov    QWORD PTR [rsp+0x28],rax
   140004d2b:	lea    rax,[rip+0x32246]        # 0x140036f78
   140004d32:	jmp    0x140004d5d
   140004d34:	lea    rbx,[rcx+0x270]
   140004d3b:	mov    ecx,DWORD PTR [rcx+0x2b0]
   140004d41:	call   0x140002b80
   140004d46:	mov    QWORD PTR [rsp+0x30],rbx
   140004d4b:	mov    r8d,0x107
   140004d51:	mov    QWORD PTR [rsp+0x28],rax
   140004d56:	lea    rax,[rip+0x32243]        # 0x140036fa0
   140004d5d:	mov    rcx,QWORD PTR [rsi]
   140004d60:	lea    rdx,[rip+0x31e49]        # 0x140036bb0
   140004d67:	mov    r9d,0x3
   140004d6d:	mov    QWORD PTR [rsp+0x20],rax
   140004d72:	call   0x140006ce0
   140004d77:	mov    rbx,QWORD PTR [rsp+0x58]
   140004d7c:	mov    al,0x1
   140004d7e:	add    rsp,0x40
   140004d82:	pop    rsi
   140004d83:	ret    
   140004d84:	int3   
   140004d85:	int3   
   140004d86:	int3   
   140004d87:	int3   
   140004d88:	int3   
   140004d89:	int3   
   140004d8a:	int3   
   140004d8b:	int3   
   140004d8c:	int3   
   140004d8d:	int3   
   140004d8e:	int3   
   140004d8f:	int3   
   140004d90:	mov    QWORD PTR [rsp+0x10],rbx
   140004d95:	push   rdi
   140004d96:	sub    rsp,0x20
   140004d9a:	mov    r8,QWORD PTR [rcx+0x250]
   140004da1:	mov    edx,0x4
   140004da6:	mov    rbx,rcx
   140004da9:	call   0x140004e90
   140004dae:	mov    edi,eax
   140004db0:	test   eax,eax
   140004db2:	jne    0x140004dbf
   140004db4:	mov    rbx,QWORD PTR [rsp+0x38]
   140004db9:	add    rsp,0x20
   140004dbd:	pop    rdi
   140004dbe:	ret    
   140004dbf:	cmp    eax,0x1
   140004dc2:	jne    0x140004dcf
   140004dc4:	mov    rbx,QWORD PTR [rsp+0x38]
   140004dc9:	add    rsp,0x20
   140004dcd:	pop    rdi
   140004dce:	ret    
   140004dcf:	mov    QWORD PTR [rsp+0x30],rsi
   140004dd4:	mov    esi,0x1
   140004dd9:	mov    rcx,rbx
   140004ddc:	lea    edx,[rsi+0x2]
   140004ddf:	call   0x140004310
   140004de4:	cmp    edi,0x3
   140004de7:	jne    0x140004df1
   140004de9:	call   QWORD PTR [rbx+0x250]
   140004def:	mov    esi,eax
   140004df1:	mov    edx,esi
   140004df3:	mov    rcx,rbx
   140004df6:	mov    rsi,QWORD PTR [rsp+0x30]
   140004dfb:	mov    rbx,QWORD PTR [rsp+0x38]
   140004e00:	add    rsp,0x20
   140004e04:	pop    rdi
   140004e05:	jmp    0x140004bd0
   140004e0a:	int3   
   140004e0b:	int3   
   140004e0c:	int3   
   140004e0d:	int3   
   140004e0e:	int3   
   140004e0f:	int3   
   140004e10:	mov    QWORD PTR [rsp+0x8],rbx
   140004e15:	push   rdi
   140004e16:	sub    rsp,0x20
   140004e1a:	mov    r8,QWORD PTR [rcx+0x240]
   140004e21:	mov    rdi,rdx
   140004e24:	mov    edx,0x4
   140004e29:	mov    rbx,rcx
   140004e2c:	call   0x140004e90
   140004e31:	test   eax,eax
   140004e33:	jne    0x140004e40
   140004e35:	mov    rbx,QWORD PTR [rsp+0x30]
   140004e3a:	add    rsp,0x20
   140004e3e:	pop    rdi
   140004e3f:	ret    
   140004e40:	cmp    eax,0x1
   140004e43:	je     0x140004e57
   140004e45:	cmp    eax,0x2
   140004e48:	jne    0x140004e64
   140004e4a:	mov    rcx,QWORD PTR [rbx+0x2b8]
   140004e51:	call   QWORD PTR [rip+0x30389]        # 0x1400351e0
   140004e57:	mov    al,0x1
   140004e59:	mov    rbx,QWORD PTR [rsp+0x30]
   140004e5e:	add    rsp,0x20
   140004e62:	pop    rdi
   140004e63:	ret    
   140004e64:	mov    edx,0x3
   140004e69:	mov    rcx,rbx
   140004e6c:	call   0x140004310
   140004e71:	mov    rcx,rdi
   140004e74:	call   QWORD PTR [rbx+0x240]
   140004e7a:	mov    rcx,rbx
   140004e7d:	mov    edx,eax
   140004e7f:	mov    rbx,QWORD PTR [rsp+0x30]
   140004e84:	add    rsp,0x20
   140004e88:	pop    rdi
   140004e89:	jmp    0x140004bd0
   140004e8e:	int3   
   140004e8f:	int3   
   140004e90:	rex push rbp
   140004e92:	push   rdi
   140004e93:	push   r14
   140004e95:	sub    rsp,0x50
   140004e99:	mov    r14,rcx
   140004e9c:	mov    ebp,edx
   140004e9e:	lea    rdx,[rip+0x31cab]        # 0x140036b50
   140004ea5:	mov    edi,DWORD PTR [r14+0x2b0]
   140004eac:	xor    ecx,ecx
   140004eae:	mov    QWORD PTR [rsp+0x70],rbx
   140004eb3:	mov    rax,rdx
   140004eb6:	cmp    DWORD PTR [rax],edi
   140004eb8:	je     0x140004ec9
   140004eba:	inc    rcx
   140004ebd:	add    rax,0x10
   140004ec1:	cmp    rcx,0x5
   140004ec5:	jb     0x140004eb6
   140004ec7:	jmp    0x140004ed2
   140004ec9:	shl    rcx,0x4
   140004ecd:	add    rcx,rdx
   140004ed0:	jne    0x140004f24
   140004ed2:	mov    ecx,ebp
   140004ed4:	call   0x140002b80
   140004ed9:	mov    ecx,edi
   140004edb:	mov    rbx,rax
   140004ede:	call   0x140002b80
   140004ee3:	mov    rcx,QWORD PTR [r14]
   140004ee6:	mov    QWORD PTR [rsp+0x30],rbx
   140004eeb:	mov    QWORD PTR [rsp+0x28],rax
   140004ef0:	lea    rax,[rip+0x321a1]        # 0x140037098
   140004ef7:	lea    rdx,[rip+0x31cb2]        # 0x140036bb0
   140004efe:	mov    r9d,0x1
   140004f04:	mov    r8d,0x1a5
   140004f0a:	mov    QWORD PTR [rsp+0x20],rax
   140004f0f:	call   0x140006ce0
   140004f14:	xor    eax,eax
   140004f16:	mov    rbx,QWORD PTR [rsp+0x70]
   140004f1b:	add    rsp,0x50
   140004f1f:	pop    r14
   140004f21:	pop    rdi
   140004f22:	pop    rbp
   140004f23:	ret    
   140004f24:	cmp    QWORD PTR [r14+0x220],0x0
   140004f2c:	jne    0x140004f80
   140004f2e:	mov    ecx,ebp
   140004f30:	lea    rbx,[r14+0x270]
   140004f37:	call   0x140002b80
   140004f3c:	mov    rcx,QWORD PTR [r14]
   140004f3f:	mov    QWORD PTR [rsp+0x30],rbx
   140004f44:	mov    QWORD PTR [rsp+0x28],rax
   140004f49:	lea    rax,[rip+0x32170]        # 0x1400370c0
   140004f50:	lea    rdx,[rip+0x31c59]        # 0x140036bb0
   140004f57:	mov    r9d,0x4
   140004f5d:	mov    r8d,0x1af
   140004f63:	mov    QWORD PTR [rsp+0x20],rax
   140004f68:	call   0x140006ce0
   140004f6d:	mov    eax,0x1
   140004f72:	mov    rbx,QWORD PTR [rsp+0x70]
   140004f77:	add    rsp,0x50
   140004f7b:	pop    r14
   140004f7d:	pop    rdi
   140004f7e:	pop    rbp
   140004f7f:	ret    
   140004f80:	cmp    DWORD PTR [r14+0x2b4],0x4
   140004f88:	jne    0x140004ff0
   140004f8a:	cmp    BYTE PTR [r14+0x218],0x0
   140004f92:	jne    0x140004ff0
   140004f94:	lea    eax,[rbp-0x2]
   140004f97:	test   eax,0xfffffffd
   140004f9c:	jne    0x140004ff0
   140004f9e:	mov    ecx,ebp
   140004fa0:	lea    rbx,[r14+0x270]
   140004fa7:	call   0x140002b80
   140004fac:	mov    rcx,QWORD PTR [r14]
   140004faf:	mov    QWORD PTR [rsp+0x30],rbx
   140004fb4:	mov    QWORD PTR [rsp+0x28],rax
   140004fb9:	lea    rax,[rip+0x32138]        # 0x1400370f8
   140004fc0:	lea    rdx,[rip+0x31be9]        # 0x140036bb0
   140004fc7:	mov    r9d,0x4
   140004fcd:	mov    r8d,0x1b8
   140004fd3:	mov    QWORD PTR [rsp+0x20],rax
   140004fd8:	call   0x140006ce0
   140004fdd:	mov    eax,0x1
   140004fe2:	mov    rbx,QWORD PTR [rsp+0x70]
   140004fe7:	add    rsp,0x50
   140004feb:	pop    r14
   140004fed:	pop    rdi
   140004fee:	pop    rbp
   140004fef:	ret    
   140004ff0:	mov    QWORD PTR [rsp+0x78],rsi
   140004ff5:	cmp    ebp,edi
   140004ff7:	je     0x1400050fb
   140004ffd:	cmp    ebp,DWORD PTR [rcx+0xc]
   140005000:	je     0x1400050fb
   140005006:	mov    esi,DWORD PTR [rcx+0x4]
   140005009:	mov    QWORD PTR [rsp+0x80],r15
   140005011:	cmp    ebp,esi
   140005013:	je     0x140005092
   140005015:	mov    r15d,DWORD PTR [rcx+0x8]
   140005019:	cmp    ebp,r15d
   14000501c:	je     0x140005092
   14000501e:	mov    ecx,edi
   140005020:	call   0x140002b80
   140005025:	mov    ecx,ebp
   140005027:	lea    rdi,[r14+0x270]
   14000502e:	mov    rbx,rax
   140005031:	call   0x140002b80
   140005036:	mov    rcx,QWORD PTR [r14]
   140005039:	mov    DWORD PTR [rsp+0x48],r15d
   14000503e:	mov    DWORD PTR [rsp+0x40],esi
   140005042:	mov    QWORD PTR [rsp+0x38],rbx
   140005047:	mov    QWORD PTR [rsp+0x30],rdi
   14000504c:	mov    QWORD PTR [rsp+0x28],rax
   140005051:	lea    rax,[rip+0x32108]        # 0x140037160
   140005058:	lea    rdx,[rip+0x31b51]        # 0x140036bb0
   14000505f:	mov    r9d,0x5
   140005065:	mov    r8d,0x1d3
   14000506b:	mov    QWORD PTR [rsp+0x20],rax
   140005070:	call   0x140006ce0
   140005075:	xor    eax,eax
   140005077:	mov    r15,QWORD PTR [rsp+0x80]
   14000507f:	mov    rsi,QWORD PTR [rsp+0x78]
   140005084:	mov    rbx,QWORD PTR [rsp+0x70]
   140005089:	add    rsp,0x50
   14000508d:	pop    r14
   14000508f:	pop    rdi
   140005090:	pop    rbp
   140005091:	ret    
   140005092:	test   r8,r8
   140005095:	jne    0x1400050f1
   140005097:	mov    ecx,ebp
   140005099:	lea    rbx,[r14+0x270]
   1400050a0:	call   0x140002b80
   1400050a5:	mov    rcx,QWORD PTR [r14]
   1400050a8:	mov    QWORD PTR [rsp+0x30],rbx
   1400050ad:	mov    QWORD PTR [rsp+0x28],rax
   1400050b2:	lea    rax,[rip+0x32107]        # 0x1400371c0
   1400050b9:	lea    rdx,[rip+0x31af0]        # 0x140036bb0
   1400050c0:	mov    r9d,0x4
   1400050c6:	mov    r8d,0x1da
   1400050cc:	mov    QWORD PTR [rsp+0x20],rax
   1400050d1:	call   0x140006ce0
   1400050d6:	mov    edx,0x1
   1400050db:	mov    rcx,r14
   1400050de:	mov    DWORD PTR [r14+0x2b0],ebp
   1400050e5:	call   0x140004bd0
   1400050ea:	mov    eax,0x1
   1400050ef:	jmp    0x140005077
   1400050f1:	mov    eax,0x3
   1400050f6:	jmp    0x140005077
   1400050fb:	mov    ecx,DWORD PTR [rcx+0xc]
   1400050fe:	call   0x140002b80
   140005103:	mov    ecx,edi
   140005105:	mov    rsi,rax
   140005108:	call   0x140002b80
   14000510d:	mov    ecx,ebp
   14000510f:	mov    rbx,rax
   140005112:	lea    rdi,[r14+0x270]
   140005119:	call   0x140002b80
   14000511e:	mov    rcx,QWORD PTR [r14]
   140005121:	mov    QWORD PTR [rsp+0x40],rsi
   140005126:	mov    QWORD PTR [rsp+0x38],rbx
   14000512b:	mov    QWORD PTR [rsp+0x30],rdi
   140005130:	mov    QWORD PTR [rsp+0x28],rax
   140005135:	lea    rax,[rip+0x31fec]        # 0x140037128
   14000513c:	lea    rdx,[rip+0x31a6d]        # 0x140036bb0
   140005143:	mov    r9d,0x5
   140005149:	mov    r8d,0x1c5
   14000514f:	mov    QWORD PTR [rsp+0x20],rax
   140005154:	call   0x140006ce0
   140005159:	mov    eax,0x2
   14000515e:	jmp    0x14000507f
   140005163:	int3   
   140005164:	int3   
   140005165:	int3   
   140005166:	int3   
   140005167:	int3   
   140005168:	int3   
   140005169:	int3   
   14000516a:	int3   
   14000516b:	int3   
   14000516c:	int3   
   14000516d:	int3   
   14000516e:	int3   
   14000516f:	int3   
   140005170:	rex push rbx
   140005172:	sub    rsp,0x30
   140005176:	mov    r8,QWORD PTR [rcx+0x258]
   14000517d:	mov    edx,0x8
   140005182:	mov    rbx,rcx
   140005185:	call   0x140004e90
   14000518a:	cmp    eax,0x3
   14000518d:	jne    0x1400051f4
   14000518f:	lea    edx,[rax+0x4]
   140005192:	mov    rcx,rbx
   140005195:	mov    QWORD PTR [rsp+0x40],rdi
   14000519a:	call   0x140004310
   14000519f:	call   QWORD PTR [rbx+0x258]
   1400051a5:	mov    edi,eax
   1400051a7:	test   eax,eax
   1400051a9:	jne    0x1400051e0
   1400051ab:	mov    rcx,QWORD PTR [rbx]
   1400051ae:	lea    rax,[rbx+0x270]
   1400051b5:	mov    edi,0x1
   1400051ba:	mov    QWORD PTR [rsp+0x28],rax
   1400051bf:	lea    rax,[rip+0x320fa]        # 0x1400372c0
   1400051c6:	lea    rdx,[rip+0x319e3]        # 0x140036bb0
   1400051cd:	mov    r9d,edi
   1400051d0:	mov    r8d,0x26b
   1400051d6:	mov    QWORD PTR [rsp+0x20],rax
   1400051db:	call   0x140006ce0
   1400051e0:	mov    edx,edi
   1400051e2:	mov    rcx,rbx
   1400051e5:	mov    rdi,QWORD PTR [rsp+0x40]
   1400051ea:	add    rsp,0x30
   1400051ee:	pop    rbx
   1400051ef:	jmp    0x140004bd0
   1400051f4:	cmp    eax,0x2
   1400051f7:	jne    0x14000520c
   1400051f9:	mov    rcx,QWORD PTR [rbx+0x2b8]
   140005200:	add    rsp,0x30
   140005204:	pop    rbx
   140005205:	rex.W jmp QWORD PTR [rip+0x2ffd4]        # 0x1400351e0
   14000520c:	add    rsp,0x30
   140005210:	pop    rbx
   140005211:	ret    
   140005212:	int3   
   140005213:	int3   
   140005214:	int3   
   140005215:	int3   
   140005216:	int3   
   140005217:	int3   
   140005218:	int3   
   140005219:	int3   
   14000521a:	int3   
   14000521b:	int3   
   14000521c:	int3   
   14000521d:	int3   
   14000521e:	int3   
   14000521f:	int3   
   140005220:	mov    QWORD PTR [rsp+0x10],rbx
   140005225:	push   rsi
   140005226:	sub    rsp,0x30
   14000522a:	mov    r8,QWORD PTR [rcx+0x248]
   140005231:	mov    edx,0x6
   140005236:	mov    rbx,rcx
   140005239:	call   0x140004e90
   14000523e:	mov    esi,eax
   140005240:	cmp    eax,0x1
   140005243:	jbe    0x1400052b0
   140005245:	mov    QWORD PTR [rsp+0x40],rdi
   14000524a:	mov    edi,0x1
   14000524f:	mov    rcx,rbx
   140005252:	lea    edx,[rdi+0x4]
   140005255:	call   0x140004310
   14000525a:	cmp    esi,0x3
   14000525d:	jne    0x1400052a1
   14000525f:	call   QWORD PTR [rbx+0x248]
   140005265:	mov    edi,eax
   140005267:	test   eax,eax
   140005269:	jne    0x1400052a1
   14000526b:	mov    rcx,QWORD PTR [rbx]
   14000526e:	lea    rax,[rbx+0x270]
   140005275:	lea    r9d,[rsi-0x2]
   140005279:	mov    QWORD PTR [rsp+0x28],rax
   14000527e:	lea    rax,[rip+0x32003]        # 0x140037288
   140005285:	lea    rdx,[rip+0x31924]        # 0x140036bb0
   14000528c:	mov    r8d,0x245
   140005292:	mov    QWORD PTR [rsp+0x20],rax
   140005297:	call   0x140006ce0
   14000529c:	mov    edi,0x1
   1400052a1:	mov    edx,edi
   1400052a3:	mov    rcx,rbx
   1400052a6:	call   0x140004bd0
   1400052ab:	mov    rdi,QWORD PTR [rsp+0x40]
   1400052b0:	mov    rbx,QWORD PTR [rsp+0x48]
   1400052b5:	add    rsp,0x30
   1400052b9:	pop    rsi
   1400052ba:	ret    
   1400052bb:	int3   
   1400052bc:	int3   
   1400052bd:	int3   
   1400052be:	int3   
   1400052bf:	int3   
   1400052c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400052c5:	push   rdi
   1400052c6:	sub    rsp,0x40
   1400052ca:	cmp    DWORD PTR [rcx+0x2b4],0x1
   1400052d1:	mov    rdi,rdx
   1400052d4:	mov    rbx,rcx
   1400052d7:	jne    0x14000532e
   1400052d9:	cmp    DWORD PTR [rcx+0x2b0],0x0
   1400052e0:	je     0x14000532e
   1400052e2:	cmp    QWORD PTR [rcx+0x268],0x0
   1400052ea:	je     0x14000532e
   1400052ec:	mov    eax,DWORD PTR [rdx]
   1400052ee:	lea    r8,[rcx+0x270]
   1400052f5:	mov    rcx,QWORD PTR [rcx]
   1400052f8:	mov    DWORD PTR [rsp+0x30],eax
   1400052fc:	mov    QWORD PTR [rsp+0x28],r8
   140005301:	lea    rax,[rip+0x31fe8]        # 0x1400372f0
   140005308:	lea    rdx,[rip+0x318a1]        # 0x140036bb0
   14000530f:	mov    r9d,0x4
   140005315:	mov    r8d,0x290
   14000531b:	mov    QWORD PTR [rsp+0x20],rax
   140005320:	call   0x140006ce0
   140005325:	mov    rcx,rdi
   140005328:	call   QWORD PTR [rbx+0x268]
   14000532e:	mov    rbx,QWORD PTR [rsp+0x50]
   140005333:	add    rsp,0x40
   140005337:	pop    rdi
   140005338:	ret    
   140005339:	int3   
   14000533a:	int3   
   14000533b:	int3   
   14000533c:	int3   
   14000533d:	int3   
   14000533e:	int3   
   14000533f:	int3   
   140005340:	rex push rbx
   140005342:	sub    rsp,0x30
   140005346:	mov    r8,QWORD PTR [rcx+0x260]
   14000534d:	xor    edx,edx
   14000534f:	mov    rbx,rcx
   140005352:	call   0x140004e90
   140005357:	cmp    eax,0x3
   14000535a:	jne    0x1400053c1
   14000535c:	lea    edx,[rax+0x6]
   14000535f:	mov    rcx,rbx
   140005362:	mov    QWORD PTR [rsp+0x40],rdi
   140005367:	call   0x140004310
   14000536c:	call   QWORD PTR [rbx+0x260]
   140005372:	mov    edi,eax
   140005374:	test   eax,eax
   140005376:	jne    0x1400053ad
   140005378:	mov    rcx,QWORD PTR [rbx]
   14000537b:	lea    rax,[rbx+0x270]
   140005382:	mov    edi,0x1
   140005387:	mov    QWORD PTR [rsp+0x28],rax
   14000538c:	lea    rax,[rip+0x31ef5]        # 0x140037288
   140005393:	lea    rdx,[rip+0x31816]        # 0x140036bb0
   14000539a:	mov    r9d,edi
   14000539d:	mov    r8d,0x27f
   1400053a3:	mov    QWORD PTR [rsp+0x20],rax
   1400053a8:	call   0x140006ce0
   1400053ad:	mov    edx,edi
   1400053af:	mov    rcx,rbx
   1400053b2:	mov    rdi,QWORD PTR [rsp+0x40]
   1400053b7:	add    rsp,0x30
   1400053bb:	pop    rbx
   1400053bc:	jmp    0x140004bd0
   1400053c1:	cmp    eax,0x2
   1400053c4:	jne    0x1400053d9
   1400053c6:	mov    rcx,QWORD PTR [rbx+0x2b8]
   1400053cd:	add    rsp,0x30
   1400053d1:	pop    rbx
   1400053d2:	rex.W jmp QWORD PTR [rip+0x2fe07]        # 0x1400351e0
   1400053d9:	add    rsp,0x30
   1400053dd:	pop    rbx
   1400053de:	ret    
   1400053df:	int3   
   1400053e0:	rex push rbx
   1400053e2:	sub    rsp,0x40
   1400053e6:	lea    rax,[rcx+0x10]
   1400053ea:	lea    rdx,[rcx+0x270]
   1400053f1:	mov    rbx,rcx
   1400053f4:	mov    rcx,QWORD PTR [rcx]
   1400053f7:	mov    QWORD PTR [rsp+0x30],rax
   1400053fc:	mov    QWORD PTR [rsp+0x28],rdx
   140005401:	lea    rax,[rip+0x31ae8]        # 0x140036ef0
   140005408:	lea    rdx,[rip+0x317a1]        # 0x140036bb0
   14000540f:	mov    r9d,0x3
   140005415:	mov    r8d,0xc8
   14000541b:	mov    QWORD PTR [rsp+0x20],rax
   140005420:	call   0x140006ce0
   140005425:	mov    rcx,QWORD PTR [rbx+0x220]
   14000542c:	test   rcx,rcx
   14000542f:	je     0x140005442
   140005431:	call   QWORD PTR [rip+0x2fc79]        # 0x1400350b0
   140005437:	mov    QWORD PTR [rbx+0x220],0x0
   140005442:	mov    rcx,QWORD PTR [rbx+0x2b8]
   140005449:	test   rcx,rcx
   14000544c:	je     0x14000545f
   14000544e:	call   QWORD PTR [rip+0x2fd9c]        # 0x1400351f0
   140005454:	mov    QWORD PTR [rbx+0x2b8],0x0
   14000545f:	xor    eax,eax
   140005461:	mov    QWORD PTR [rbx+0x228],rax
   140005468:	mov    QWORD PTR [rbx+0x230],rax
   14000546f:	mov    QWORD PTR [rbx+0x238],rax
   140005476:	mov    QWORD PTR [rbx+0x240],rax
   14000547d:	mov    QWORD PTR [rbx+0x248],rax
   140005484:	mov    QWORD PTR [rbx+0x250],rax
   14000548b:	mov    QWORD PTR [rbx+0x258],rax
   140005492:	mov    QWORD PTR [rbx+0x260],rax
   140005499:	mov    QWORD PTR [rbx+0x268],rax
   1400054a0:	add    rsp,0x40
   1400054a4:	pop    rbx
   1400054a5:	ret    
   1400054a6:	int3   
   1400054a7:	int3   
   1400054a8:	int3   
   1400054a9:	int3   
   1400054aa:	int3   
   1400054ab:	int3   
   1400054ac:	int3   
   1400054ad:	int3   
   1400054ae:	int3   
   1400054af:	int3   
   1400054b0:	mov    QWORD PTR [rsp+0x18],r8
   1400054b5:	mov    QWORD PTR [rsp+0x20],r9
   1400054ba:	sub    rsp,0x38
   1400054be:	lea    rax,[rsp+0x58]
   1400054c3:	xor    r9d,r9d
   1400054c6:	mov    QWORD PTR [rsp+0x20],rax
   1400054cb:	call   0x1400088a0
   1400054d0:	add    rsp,0x38
   1400054d4:	ret    
   1400054d5:	int3   
   1400054d6:	int3   
   1400054d7:	int3   
   1400054d8:	int3   
   1400054d9:	int3   
   1400054da:	int3   
   1400054db:	int3   
   1400054dc:	int3   
   1400054dd:	int3   
   1400054de:	int3   
   1400054df:	int3   
   1400054e0:	rex push rbx
   1400054e2:	sub    rsp,0x40
   1400054e6:	mov    rbx,rcx
   1400054e9:	xor    ecx,ecx
   1400054eb:	mov    QWORD PTR [rbx],rcx
   1400054ee:	mov    QWORD PTR [rbx+0x8],r8
   1400054f2:	test   edx,edx
   1400054f4:	je     0x1400055ac
   1400054fa:	lea    edx,[rdx+rdx*8]
   1400054fd:	mov    eax,0xcccccccd
   140005502:	mov    QWORD PTR [rsp+0x50],rdi
   140005507:	mov    DWORD PTR [rsp+0x30],0x8
   14000550f:	mov    DWORD PTR [rsp+0x28],ecx
   140005513:	lea    r8,[rip+0x106]        # 0x140005620
   14000551a:	mul    edx
   14000551c:	mov    edi,edx
   14000551e:	mov    r9,rbx
   140005521:	mov    rcx,rbx
   140005524:	shr    edi,0x3
   140005527:	xor    edx,edx
   140005529:	mov    DWORD PTR [rsp+0x20],edi
   14000552d:	call   QWORD PTR [rip+0x2fbad]        # 0x1400350e0
   140005533:	test   eax,eax
   140005535:	jne    0x140005575
   140005537:	call   QWORD PTR [rip+0x2fcab]        # 0x1400351e8
   14000553d:	mov    rcx,QWORD PTR [rbx+0x8]
   140005541:	mov    r9d,0x1
   140005547:	mov    DWORD PTR [rsp+0x28],eax
   14000554b:	lea    rax,[rip+0x31dc6]        # 0x140037318
   140005552:	lea    r8d,[r9+0x20]
   140005556:	lea    rdx,[rip+0x31df3]        # 0x140037350
   14000555d:	mov    QWORD PTR [rsp+0x20],rax
   140005562:	call   0x140006ce0
   140005567:	mov    rdi,QWORD PTR [rsp+0x50]
   14000556c:	mov    rax,rbx
   14000556f:	add    rsp,0x40
   140005573:	pop    rbx
   140005574:	ret    
   140005575:	mov    rax,QWORD PTR [rbx]
   140005578:	mov    rcx,QWORD PTR [rbx+0x8]
   14000557c:	mov    r9d,0x4
   140005582:	mov    DWORD PTR [rsp+0x30],edi
   140005586:	mov    QWORD PTR [rsp+0x28],rax
   14000558b:	lea    rax,[rip+0x31e16]        # 0x1400373a8
   140005592:	lea    r8d,[r9+0x21]
   140005596:	lea    rdx,[rip+0x31db3]        # 0x140037350
   14000559d:	mov    QWORD PTR [rsp+0x20],rax
   1400055a2:	call   0x140006ce0
   1400055a7:	mov    rdi,QWORD PTR [rsp+0x50]
   1400055ac:	mov    rax,rbx
   1400055af:	add    rsp,0x40
   1400055b3:	pop    rbx
   1400055b4:	ret    
   1400055b5:	int3   
   1400055b6:	int3   
   1400055b7:	int3   
   1400055b8:	int3   
   1400055b9:	int3   
   1400055ba:	int3   
   1400055bb:	int3   
   1400055bc:	int3   
   1400055bd:	int3   
   1400055be:	int3   
   1400055bf:	int3   
   1400055c0:	rex push rbx
   1400055c2:	sub    rsp,0x30
   1400055c6:	mov    rax,QWORD PTR [rcx]
   1400055c9:	mov    rbx,rcx
   1400055cc:	test   rax,rax
   1400055cf:	je     0x140005612
   1400055d1:	mov    rcx,QWORD PTR [rcx+0x8]
   1400055d5:	mov    QWORD PTR [rsp+0x28],rax
   1400055da:	mov    r9d,0x4
   1400055e0:	lea    rax,[rip+0x31de9]        # 0x1400373d0
   1400055e7:	lea    rdx,[rip+0x31d62]        # 0x140037350
   1400055ee:	lea    r8d,[r9+0x2a]
   1400055f2:	mov    QWORD PTR [rsp+0x20],rax
   1400055f7:	call   0x140006ce0
   1400055fc:	mov    rdx,QWORD PTR [rbx]
   1400055ff:	or     r8,0xffffffffffffffff
   140005603:	xor    ecx,ecx
   140005605:	call   QWORD PTR [rip+0x2fadd]        # 0x1400350e8
   14000560b:	mov    QWORD PTR [rbx],0x0
   140005612:	add    rsp,0x30
   140005616:	pop    rbx
   140005617:	ret    
   140005618:	int3   
   140005619:	int3   
   14000561a:	int3   
   14000561b:	int3   
   14000561c:	int3   
   14000561d:	int3   
   14000561e:	int3   
   14000561f:	int3   
   140005620:	rex push rbx
   140005622:	sub    rsp,0x30
   140005626:	mov    rbx,QWORD PTR [rcx+0x8]
   14000562a:	call   QWORD PTR [rip+0x2fb88]        # 0x1400351b8
   140005630:	mov    r9d,0x1
   140005636:	mov    DWORD PTR [rsp+0x28],eax
   14000563a:	lea    rax,[rip+0x31daf]        # 0x1400373f0
   140005641:	lea    rdx,[rip+0x31d08]        # 0x140037350
   140005648:	lea    r8d,[r9+0x3e]
   14000564c:	mov    rcx,rbx
   14000564f:	mov    QWORD PTR [rsp+0x20],rax
   140005654:	call   0x140006ce0
   140005659:	mov    r9d,0x1
   14000565f:	lea    rax,[rip+0x31dd2]        # 0x140037438
   140005666:	lea    rdx,[rip+0x31ce3]        # 0x140037350
   14000566d:	lea    r8d,[r9+0x3f]
   140005671:	mov    rcx,rbx
   140005674:	mov    DWORD PTR [rsp+0x28],0x46b
   14000567c:	mov    QWORD PTR [rsp+0x20],rax
   140005681:	call   0x140006ce0
   140005686:	mov    ecx,0x46b
   14000568b:	call   QWORD PTR [rip+0x2fa47]        # 0x1400350d8
   140005691:	int3   
   140005692:	int3   
   140005693:	int3   
   140005694:	int3   
   140005695:	int3   
   140005696:	int3   
   140005697:	int3   
   140005698:	int3   
   140005699:	int3   
   14000569a:	int3   
   14000569b:	int3   
   14000569c:	int3   
   14000569d:	int3   
   14000569e:	int3   
   14000569f:	int3   
   1400056a0:	mov    QWORD PTR [rsp+0x8],rcx
   1400056a5:	push   rdi
   1400056a6:	sub    rsp,0x40
   1400056aa:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   1400056b3:	mov    QWORD PTR [rsp+0x58],rbx
   1400056b8:	mov    QWORD PTR [rsp+0x60],rbp
   1400056bd:	mov    QWORD PTR [rsp+0x68],rsi
   1400056c2:	mov    rbx,r8
   1400056c5:	mov    rdi,rcx
   1400056c8:	mov    r8,r9
   1400056cb:	call   0x140001490
   1400056d0:	nop
   1400056d1:	lea    rax,[rip+0x31dd8]        # 0x1400374b0
   1400056d8:	mov    QWORD PTR [rdi],rax
   1400056db:	xor    ebp,ebp
   1400056dd:	mov    QWORD PTR [rdi+0x390],rbp
   1400056e4:	mov    QWORD PTR [rdi+0x418],rbp
   1400056eb:	lea    rax,[rip+0x31dde]        # 0x1400374d0
   1400056f2:	mov    QWORD PTR [rsp+0x20],rax
   1400056f7:	lea    r9d,[rbp+0x4]
   1400056fb:	lea    r8d,[rbp+0x1d]
   1400056ff:	lea    rdx,[rip+0x31dda]        # 0x1400374e0
   140005706:	mov    rcx,QWORD PTR [rdi+0x10]
   14000570a:	call   0x140006ce0
   14000570f:	xor    eax,eax
   140005711:	mov    QWORD PTR [rdi+0x370],rax
   140005718:	mov    QWORD PTR [rdi+0x378],rax
   14000571f:	mov    QWORD PTR [rdi+0x380],rax
   140005726:	mov    DWORD PTR [rdi+0x388],eax
   14000572c:	mov    DWORD PTR [rdi+0x370],0x10
   140005736:	xor    r9d,r9d
   140005739:	xor    r8d,r8d
   14000573c:	lea    edx,[rbp+0x1]
   14000573f:	xor    ecx,ecx
   140005741:	call   QWORD PTR [rip+0x2fa81]        # 0x1400351c8
   140005747:	mov    QWORD PTR [rdi+0x418],rax
   14000574e:	mov    r8,rbx
   140005751:	lea    edx,[rbp+0x40]
   140005754:	lea    rcx,[rdi+0x398]
   14000575b:	call   0x14000781c
   140005760:	mov    edx,0x200
   140005765:	mov    rcx,rdi
   140005768:	call   0x140005f20
   14000576d:	test   al,al
   14000576f:	je     0x140005775
   140005771:	or     DWORD PTR [rdi+0x8],0x4
   140005775:	mov    edx,0x100
   14000577a:	mov    rcx,rdi
   14000577d:	call   0x140005f20
   140005782:	test   al,al
   140005784:	je     0x14000578a
   140005786:	or     DWORD PTR [rdi+0x8],0x4
   14000578a:	mov    QWORD PTR [rip+0x4212f],rdi        # 0x1400478c0
   140005791:	mov    QWORD PTR [rsp+0x28],rbp
   140005796:	mov    DWORD PTR [rsp+0x20],ebp
   14000579a:	xor    r9d,r9d
   14000579d:	lea    r8,[rip+0xb4c]        # 0x1400062f0
   1400057a4:	xor    edx,edx
   1400057a6:	xor    ecx,ecx
   1400057a8:	call   QWORD PTR [rip+0x2f942]        # 0x1400350f0
   1400057ae:	test   rax,rax
   1400057b1:	jne    0x1400057f9
   1400057b3:	call   QWORD PTR [rip+0x2fa2f]        # 0x1400351e8
   1400057b9:	mov    DWORD PTR [rsp+0x28],eax
   1400057bd:	lea    rax,[rip+0x31d74]        # 0x140037538
   1400057c4:	mov    QWORD PTR [rsp+0x20],rax
   1400057c9:	mov    r9d,0x1
   1400057cf:	lea    r8d,[r9+0x36]
   1400057d3:	lea    rdx,[rip+0x31d06]        # 0x1400374e0
   1400057da:	mov    rcx,QWORD PTR [rdi+0x10]
   1400057de:	call   0x140006ce0
   1400057e3:	xor    edx,edx
   1400057e5:	mov    r8d,0x80
   1400057eb:	lea    rcx,[rdi+0x398]
   1400057f2:	call   0x140009800
   1400057f7:	jmp    0x140005802
   1400057f9:	mov    rcx,rax
   1400057fc:	call   QWORD PTR [rip+0x2f9ee]        # 0x1400351f0
   140005802:	mov    rcx,QWORD PTR [rdi+0x418]
   140005809:	test   rcx,rcx
   14000580c:	je     0x140005845
   14000580e:	mov    edx,0x2710
   140005813:	call   QWORD PTR [rip+0x2f9b7]        # 0x1400351d0
   140005819:	mov    DWORD PTR [rsp+0x28],eax
   14000581d:	lea    rax,[rip+0x31d44]        # 0x140037568
   140005824:	mov    QWORD PTR [rsp+0x20],rax
   140005829:	mov    r9d,0x3
   14000582f:	lea    r8d,[r9+0x48]
   140005833:	lea    rdx,[rip+0x31ca6]        # 0x1400374e0
   14000583a:	mov    rcx,QWORD PTR [rdi+0x10]
   14000583e:	call   0x140006ce0
   140005843:	jmp    0x14000586c
   140005845:	lea    rax,[rip+0x31d44]        # 0x140037590
   14000584c:	mov    QWORD PTR [rsp+0x20],rax
   140005851:	mov    r9d,0x1
   140005857:	lea    r8d,[r9+0x4e]
   14000585b:	lea    rdx,[rip+0x31c7e]        # 0x1400374e0
   140005862:	mov    rcx,QWORD PTR [rdi+0x10]
   140005866:	call   0x140006ce0
   14000586b:	nop
   14000586c:	mov    rax,rdi
   14000586f:	mov    rbx,QWORD PTR [rsp+0x58]
   140005874:	mov    rbp,QWORD PTR [rsp+0x60]
   140005879:	mov    rsi,QWORD PTR [rsp+0x68]
   14000587e:	add    rsp,0x40
   140005882:	pop    rdi
   140005883:	ret    
   140005884:	int3   
   140005885:	int3   
   140005886:	int3   
   140005887:	int3   
   140005888:	int3   
   140005889:	int3   
   14000588a:	int3   
   14000588b:	int3   
   14000588c:	int3   
   14000588d:	int3   
   14000588e:	int3   
   14000588f:	int3   
   140005890:	mov    QWORD PTR [rsp+0x8],rcx
   140005895:	push   rbx
   140005896:	sub    rsp,0x30
   14000589a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400058a3:	mov    rbx,rcx
   1400058a6:	lea    rax,[rip+0x31c03]        # 0x1400374b0
   1400058ad:	mov    QWORD PTR [rcx],rax
   1400058b0:	mov    rcx,QWORD PTR [rcx+0x418]
   1400058b7:	test   rcx,rcx
   1400058ba:	je     0x1400058cd
   1400058bc:	call   QWORD PTR [rip+0x2f92e]        # 0x1400351f0
   1400058c2:	mov    QWORD PTR [rbx+0x418],0x0
   1400058cd:	cmp    QWORD PTR [rbx+0x390],0x0
   1400058d5:	je     0x140005903
   1400058d7:	mov    DWORD PTR [rbx+0x374],0x1
   1400058e1:	mov    DWORD PTR [rbx+0x388],0x0
   1400058eb:	mov    DWORD PTR [rbx+0x378],0x5
   1400058f5:	mov    edx,0x3
   1400058fa:	mov    rcx,rbx
   1400058fd:	call   0x140006020
   140005902:	nop
   140005903:	lea    rax,[rip+0x3053e]        # 0x140035e48
   14000590a:	mov    QWORD PTR [rbx],rax
   14000590d:	mov    rcx,rbx
   140005910:	add    rsp,0x30
   140005914:	pop    rbx
   140005915:	jmp    0x140001b90
   14000591a:	int3   
   14000591b:	int3   
   14000591c:	int3   
   14000591d:	int3   
   14000591e:	int3   
   14000591f:	int3   
   140005920:	mov    QWORD PTR [rsp+0x8],rbx
   140005925:	push   rdi
   140005926:	sub    rsp,0x20
   14000592a:	mov    ebx,edx
   14000592c:	mov    rdi,rcx
   14000592f:	call   0x140005890
   140005934:	test   bl,0x1
   140005937:	je     0x140005941
   140005939:	mov    rcx,rdi
   14000593c:	call   0x140007d8c
   140005941:	mov    rax,rdi
   140005944:	mov    rbx,QWORD PTR [rsp+0x30]
   140005949:	add    rsp,0x20
   14000594d:	pop    rdi
   14000594e:	ret    
   14000594f:	int3   
   140005950:	mov    QWORD PTR [rsp+0x8],rbx
   140005955:	push   rdi
   140005956:	sub    rsp,0x40
   14000595a:	mov    QWORD PTR [rsp+0x38],r9
   14000595f:	mov    DWORD PTR [rsp+0x30],r8d
   140005964:	mov    DWORD PTR [rsp+0x28],edx
   140005968:	mov    rbx,rcx
   14000596b:	mov    rcx,QWORD PTR [rcx+0x10]
   14000596f:	mov    edi,edx
   140005971:	lea    rax,[rip+0x31f50]        # 0x1400378c8
   140005978:	lea    rdx,[rip+0x31b61]        # 0x1400374e0
   14000597f:	mov    r9d,0x4
   140005985:	mov    r8d,0x189
   14000598b:	mov    QWORD PTR [rsp+0x20],rax
   140005990:	call   0x140006ce0
   140005995:	dec    edi
   140005997:	je     0x1400059a2
   140005999:	sub    edi,0x3
   14000599c:	je     0x1400059e5
   14000599e:	dec    edi
   1400059a0:	jne    0x1400059da
   1400059a2:	mov    edx,0x3
   1400059a7:	mov    rcx,rbx
   1400059aa:	mov    DWORD PTR [rbx+0x374],0x3
   1400059b4:	mov    DWORD PTR [rbx+0x388],0x7530
   1400059be:	mov    DWORD PTR [rbx+0x378],0x5
   1400059c8:	call   0x140006020
   1400059cd:	mov    rcx,QWORD PTR [rbx+0x138]
   1400059d4:	call   QWORD PTR [rip+0x2f806]        # 0x1400351e0
   1400059da:	mov    rbx,QWORD PTR [rsp+0x50]
   1400059df:	add    rsp,0x40
   1400059e3:	pop    rdi
   1400059e4:	ret    
   1400059e5:	mov    edx,0x4
   1400059ea:	mov    rcx,rbx
   1400059ed:	mov    rbx,QWORD PTR [rsp+0x50]
   1400059f2:	add    rsp,0x40
   1400059f6:	pop    rdi
   1400059f7:	jmp    0x140006020
   1400059fc:	int3   
   1400059fd:	int3   
   1400059fe:	int3   
   1400059ff:	int3   
   140005a00:	sub    rsp,0x28
   140005a04:	mov    rax,r9
   140005a07:	test   r9,r9
   140005a0a:	je     0x140005a1c
   140005a0c:	mov    r9,r8
   140005a0f:	mov    r8d,edx
   140005a12:	mov    edx,ecx
   140005a14:	mov    rcx,rax
   140005a17:	call   0x140005950
   140005a1c:	xor    eax,eax
   140005a1e:	add    rsp,0x28
   140005a22:	ret    
   140005a23:	int3   
   140005a24:	int3   
   140005a25:	int3   
   140005a26:	int3   
   140005a27:	int3   
   140005a28:	int3   
   140005a29:	int3   
   140005a2a:	int3   
   140005a2b:	int3   
   140005a2c:	int3   
   140005a2d:	int3   
   140005a2e:	int3   
   140005a2f:	int3   
   140005a30:	rex push rbx
   140005a32:	push   rdi
   140005a33:	push   r14
   140005a35:	mov    eax,0x2080
   140005a3a:	call   0x140009b80
   140005a3f:	sub    rsp,rax
   140005a42:	mov    rax,QWORD PTR [rip+0x3f827]        # 0x140045270
   140005a49:	xor    rax,rsp
   140005a4c:	mov    QWORD PTR [rsp+0x2070],rax
   140005a54:	lea    rdi,[rcx+0x398]
   140005a5b:	mov    rbx,rcx
   140005a5e:	mov    r8,rcx
   140005a61:	lea    rdx,[rip+0xffffffffffffff98]        # 0x140005a00
   140005a68:	mov    rcx,rdi
   140005a6b:	call   QWORD PTR [rip+0x2f597]        # 0x140035008
   140005a71:	xor    r14d,r14d
   140005a74:	mov    QWORD PTR [rbx+0x390],rax
   140005a7b:	test   rax,rax
   140005a7e:	jne    0x140005ac7
   140005a80:	call   QWORD PTR [rip+0x2f762]        # 0x1400351e8
   140005a86:	mov    rcx,QWORD PTR [rbx+0x10]
   140005a8a:	lea    r9d,[r14+0x1]
   140005a8e:	mov    DWORD PTR [rsp+0x30],eax
   140005a92:	lea    rax,[rip+0x31c37]        # 0x1400376d0
   140005a99:	lea    rdx,[rip+0x31a40]        # 0x1400374e0
   140005aa0:	mov    r8d,0xc9
   140005aa6:	mov    QWORD PTR [rsp+0x28],rdi
   140005aab:	mov    QWORD PTR [rsp+0x20],rax
   140005ab0:	call   0x140006ce0
   140005ab5:	xor    edx,edx
   140005ab7:	mov    r8d,0x80
   140005abd:	mov    rcx,rdi
   140005ac0:	call   0x140009800
   140005ac5:	jmp    0x140005ae9
   140005ac7:	mov    edx,0x3
   140005acc:	mov    rcx,rbx
   140005acf:	mov    QWORD PTR [rbx+0x374],0x2
   140005ada:	mov    DWORD PTR [rbx+0x388],0x7530
   140005ae4:	call   0x140006020
   140005ae9:	mov    rcx,QWORD PTR [rbx+0x418]
   140005af0:	test   rcx,rcx
   140005af3:	je     0x140005afb
   140005af5:	call   QWORD PTR [rip+0x2f6e5]        # 0x1400351e0
   140005afb:	test   BYTE PTR [rbx+0x8],0x2
   140005aff:	je     0x140005cf3
   140005b05:	xor    edx,edx
   140005b07:	xor    ecx,ecx
   140005b09:	mov    QWORD PTR [rsp+0x20a8],rbp
   140005b11:	lea    r8d,[rdx+0x1]
   140005b15:	call   QWORD PTR [rip+0x2f505]        # 0x140035020
   140005b1b:	mov    rbp,rax
   140005b1e:	test   rax,rax
   140005b21:	jne    0x140005b58
   140005b23:	call   QWORD PTR [rip+0x2f6bf]        # 0x1400351e8
   140005b29:	mov    rcx,QWORD PTR [rbx+0x10]
   140005b2d:	lea    r9d,[rbp+0x1]
   140005b31:	mov    DWORD PTR [rsp+0x28],eax
   140005b35:	lea    rax,[rip+0x31bcc]        # 0x140037708
   140005b3c:	lea    rdx,[rip+0x3199d]        # 0x1400374e0
   140005b43:	mov    r8d,0xe1
   140005b49:	mov    QWORD PTR [rsp+0x20],rax
   140005b4e:	call   0x140006ce0
   140005b53:	jmp    0x140005ceb
   140005b58:	mov    r8d,0x3
   140005b5e:	mov    rdx,rdi
   140005b61:	mov    rcx,rax
   140005b64:	mov    QWORD PTR [rsp+0x20b0],rsi
   140005b6c:	call   QWORD PTR [rip+0x2f4a6]        # 0x140035018
   140005b72:	mov    rsi,rax
   140005b75:	test   rax,rax
   140005b78:	jne    0x140005bb4
   140005b7a:	call   QWORD PTR [rip+0x2f668]        # 0x1400351e8
   140005b80:	mov    rcx,QWORD PTR [rbx+0x10]
   140005b84:	lea    r9d,[rsi+0x1]
   140005b88:	mov    DWORD PTR [rsp+0x30],eax
   140005b8c:	lea    rax,[rip+0x31b95]        # 0x140037728
   140005b93:	lea    rdx,[rip+0x31946]        # 0x1400374e0
   140005b9a:	mov    r8d,0xe8
   140005ba0:	mov    QWORD PTR [rsp+0x28],rdi
   140005ba5:	mov    QWORD PTR [rsp+0x20],rax
   140005baa:	call   0x140006ce0
   140005baf:	jmp    0x140005cda
   140005bb4:	lea    r9,[rsp+0x60]
   140005bb9:	lea    rdx,[rsp+0x70]
   140005bbe:	mov    r8d,0x2000
   140005bc4:	mov    rcx,rax
   140005bc7:	call   QWORD PTR [rip+0x2f443]        # 0x140035010
   140005bcd:	test   eax,eax
   140005bcf:	jne    0x140005bed
   140005bd1:	call   QWORD PTR [rip+0x2f611]        # 0x1400351e8
   140005bd7:	mov    r8d,0xf8
   140005bdd:	mov    DWORD PTR [rsp+0x30],eax
   140005be1:	lea    rax,[rip+0x31b68]        # 0x140037750
   140005be8:	jmp    0x140005cb1
   140005bed:	mov    eax,DWORD PTR [rsp+0x74]
   140005bf1:	cmp    eax,0x3
   140005bf4:	je     0x140005c12
   140005bf6:	mov    DWORD PTR [rsp+0x30],eax
   140005bfa:	mov    r9d,0x3
   140005c00:	mov    r8d,0x100
   140005c06:	lea    rax,[rip+0x31b7b]        # 0x140037788
   140005c0d:	jmp    0x140005cb7
   140005c12:	mov    r9d,DWORD PTR [rsp+0x78]
   140005c17:	mov    edx,DWORD PTR [rsp+0x70]
   140005c1b:	mov    QWORD PTR [rsp+0x50],r14
   140005c20:	mov    QWORD PTR [rsp+0x48],r14
   140005c25:	mov    QWORD PTR [rsp+0x40],r14
   140005c2a:	mov    QWORD PTR [rsp+0x38],r14
   140005c2f:	mov    QWORD PTR [rsp+0x30],r14
   140005c34:	mov    r8d,0x2
   140005c3a:	mov    rcx,rsi
   140005c3d:	mov    QWORD PTR [rsp+0x28],r14
   140005c42:	mov    QWORD PTR [rsp+0x20],r14
   140005c47:	call   QWORD PTR [rip+0x2f3e3]        # 0x140035030
   140005c4d:	test   eax,eax
   140005c4f:	je     0x140005c9a
   140005c51:	mov    rcx,QWORD PTR [rbx+0x10]
   140005c55:	lea    rax,[rip+0x31b5c]        # 0x1400377b8
   140005c5c:	lea    rdx,[rip+0x3187d]        # 0x1400374e0
   140005c63:	mov    r9d,0x3
   140005c69:	mov    r8d,0x112
   140005c6f:	mov    QWORD PTR [rsp+0x28],rdi
   140005c74:	mov    QWORD PTR [rsp+0x20],rax
   140005c79:	call   0x140006ce0
   140005c7e:	mov    edx,0x200
   140005c83:	mov    rcx,rbx
   140005c86:	call   0x1400061f0
   140005c8b:	mov    edx,0x100
   140005c90:	mov    rcx,rbx
   140005c93:	call   0x1400061f0
   140005c98:	jmp    0x140005cd1
   140005c9a:	call   QWORD PTR [rip+0x2f548]        # 0x1400351e8
   140005ca0:	mov    r8d,0x121
   140005ca6:	mov    DWORD PTR [rsp+0x30],eax
   140005caa:	lea    rax,[rip+0x31b37]        # 0x1400377e8
   140005cb1:	mov    r9d,0x1
   140005cb7:	mov    rcx,QWORD PTR [rbx+0x10]
   140005cbb:	lea    rdx,[rip+0x3181e]        # 0x1400374e0
   140005cc2:	mov    QWORD PTR [rsp+0x28],rdi
   140005cc7:	mov    QWORD PTR [rsp+0x20],rax
   140005ccc:	call   0x140006ce0
   140005cd1:	mov    rcx,rsi
   140005cd4:	call   QWORD PTR [rip+0x2f34e]        # 0x140035028
   140005cda:	mov    rcx,rbp
   140005cdd:	call   QWORD PTR [rip+0x2f345]        # 0x140035028
   140005ce3:	mov    rsi,QWORD PTR [rsp+0x20b0]
   140005ceb:	mov    rbp,QWORD PTR [rsp+0x20a8]
   140005cf3:	mov    rcx,QWORD PTR [rsp+0x2070]
   140005cfb:	xor    rcx,rsp
   140005cfe:	call   0x1400097d0
   140005d03:	add    rsp,0x2080
   140005d0a:	pop    r14
   140005d0c:	pop    rdi
   140005d0d:	pop    rbx
   140005d0e:	ret    
   140005d0f:	int3   
   140005d10:	mov    rcx,QWORD PTR [rip+0x41ba9]        # 0x1400478c0
   140005d17:	test   rcx,rcx
   140005d1a:	jne    0x140005a30
   140005d20:	ret    
   140005d21:	int3   
   140005d22:	int3   
   140005d23:	int3   
   140005d24:	int3   
   140005d25:	int3   
   140005d26:	int3   
   140005d27:	int3   
   140005d28:	int3   
   140005d29:	int3   
   140005d2a:	int3   
   140005d2b:	int3   
   140005d2c:	int3   
   140005d2d:	int3   
   140005d2e:	int3   
   140005d2f:	int3   
   140005d30:	lea    rax,[rcx+0x398]
   140005d37:	ret    
   140005d38:	int3   
   140005d39:	int3   
   140005d3a:	int3   
   140005d3b:	int3   
   140005d3c:	int3   
   140005d3d:	int3   
   140005d3e:	int3   
   140005d3f:	int3   
   140005d40:	mov    QWORD PTR [rsp+0x8],rbx
   140005d45:	push   rdi
   140005d46:	sub    rsp,0x30
   140005d4a:	lea    rdx,[rsp+0x48]
   140005d4f:	xor    r9d,r9d
   140005d52:	or     r8d,0xffffffff
   140005d56:	mov    rbx,rcx
   140005d59:	mov    QWORD PTR [rsp+0x48],0x0
   140005d62:	call   0x140003900
   140005d67:	test   al,al
   140005d69:	je     0x140005dd7
   140005d6b:	lea    rdi,[rip+0x31af6]        # 0x140037868
   140005d72:	mov    rax,QWORD PTR [rsp+0x48]
   140005d77:	test   rax,rax
   140005d7a:	je     0x140005dbf
   140005d7c:	mov    rcx,QWORD PTR [rbx+0x10]
   140005d80:	add    rax,0x270
   140005d86:	lea    rdx,[rip+0x31753]        # 0x1400374e0
   140005d8d:	mov    QWORD PTR [rsp+0x28],rax
   140005d92:	mov    r9d,0x3
   140005d98:	mov    r8d,0x168
   140005d9e:	mov    QWORD PTR [rsp+0x20],rdi
   140005da3:	call   0x140006ce0
   140005da8:	mov    rax,QWORD PTR [rsp+0x48]
   140005dad:	cmp    DWORD PTR [rax+0x2b4],0x4
   140005db4:	jne    0x140005dbf
   140005db6:	cmp    BYTE PTR [rax+0x218],0x0
   140005dbd:	jne    0x140005dec
   140005dbf:	lea    rdx,[rsp+0x48]
   140005dc4:	xor    r9d,r9d
   140005dc7:	or     r8d,0xffffffff
   140005dcb:	mov    rcx,rbx
   140005dce:	call   0x140003900
   140005dd3:	test   al,al
   140005dd5:	jne    0x140005d72
   140005dd7:	cmp    BYTE PTR [rbx+0x148],0x0
   140005dde:	sete   al
   140005de1:	mov    rbx,QWORD PTR [rsp+0x40]
   140005de6:	add    rsp,0x30
   140005dea:	pop    rdi
   140005deb:	ret    
   140005dec:	mov    rcx,QWORD PTR [rbx+0x10]
   140005df0:	add    rax,0x270
   140005df6:	lea    rdx,[rip+0x316e3]        # 0x1400374e0
   140005dfd:	mov    QWORD PTR [rsp+0x28],rax
   140005e02:	lea    rax,[rip+0x31a87]        # 0x140037890
   140005e09:	mov    r9d,0x1
   140005e0f:	mov    r8d,0x16d
   140005e15:	mov    QWORD PTR [rsp+0x20],rax
   140005e1a:	call   0x140006ce0
   140005e1f:	mov    rbx,QWORD PTR [rsp+0x40]
   140005e24:	xor    al,al
   140005e26:	add    rsp,0x30
   140005e2a:	pop    rdi
   140005e2b:	ret    
   140005e2c:	int3   
   140005e2d:	int3   
   140005e2e:	int3   
   140005e2f:	int3   
   140005e30:	mov    QWORD PTR [rsp+0x20],rbx
   140005e35:	push   rdi
   140005e36:	sub    rsp,0x2b0
   140005e3d:	mov    rax,QWORD PTR [rip+0x3f42c]        # 0x140045270
   140005e44:	xor    rax,rsp
   140005e47:	mov    QWORD PTR [rsp+0x2a0],rax
   140005e4f:	movaps xmm0,XMMWORD PTR [rip+0x3181a]        # 0x140037670
   140005e56:	movaps xmm1,XMMWORD PTR [rip+0x31823]        # 0x140037680
   140005e5d:	lea    rax,[rcx+0x398]
   140005e64:	mov    rbx,r8
   140005e67:	mov    edi,edx
   140005e69:	lea    r9,[rsp+0x50]
   140005e6e:	lea    r8,[rip+0x3184b]        # 0x1400376c0
   140005e75:	lea    rcx,[rsp+0xa0]
   140005e7d:	mov    edx,0x100
   140005e82:	movaps XMMWORD PTR [rsp+0x50],xmm0
   140005e87:	movaps xmm0,XMMWORD PTR [rip+0x31802]        # 0x140037690
   140005e8e:	movaps XMMWORD PTR [rsp+0x60],xmm1
   140005e93:	mov    QWORD PTR [rsp+0x20],rax
   140005e98:	movaps xmm1,XMMWORD PTR [rip+0x31801]        # 0x1400376a0
   140005e9f:	movaps XMMWORD PTR [rsp+0x70],xmm0
   140005ea4:	movaps xmm0,XMMWORD PTR [rip+0x31805]        # 0x1400376b0
   140005eab:	movaps XMMWORD PTR [rsp+0x90],xmm0
   140005eb3:	movaps XMMWORD PTR [rsp+0x80],xmm1
   140005ebb:	call   0x140006330
   140005ec0:	xor    eax,eax
   140005ec2:	lea    rdx,[rsp+0xa0]
   140005eca:	mov    QWORD PTR [rsp+0x40],rax
   140005ecf:	mov    QWORD PTR [rsp+0x38],rbx
   140005ed4:	mov    QWORD PTR [rsp+0x30],rax
   140005ed9:	xor    r9d,r9d
   140005edc:	xor    r8d,r8d
   140005edf:	mov    rcx,0xffffffff80000002
   140005ee6:	mov    DWORD PTR [rsp+0x28],edi
   140005eea:	mov    DWORD PTR [rsp+0x20],eax
   140005eee:	call   QWORD PTR [rip+0x2f154]        # 0x140035048
   140005ef4:	mov    rcx,QWORD PTR [rsp+0x2a0]
   140005efc:	xor    rcx,rsp
   140005eff:	call   0x1400097d0
   140005f04:	mov    rbx,QWORD PTR [rsp+0x2d8]
   140005f0c:	add    rsp,0x2b0
   140005f13:	pop    rdi
   140005f14:	ret    
   140005f15:	int3   
   140005f16:	int3   
   140005f17:	int3   
   140005f18:	int3   
   140005f19:	int3   
   140005f1a:	int3   
   140005f1b:	int3   
   140005f1c:	int3   
   140005f1d:	int3   
   140005f1e:	int3   
   140005f1f:	int3   
   140005f20:	rex push rbx
   140005f22:	sub    rsp,0x70
   140005f26:	mov    rax,QWORD PTR [rip+0x3f343]        # 0x140045270
   140005f2d:	xor    rax,rsp
   140005f30:	mov    QWORD PTR [rsp+0x68],rax
   140005f35:	lea    r8,[rsp+0x48]
   140005f3a:	or     edx,0x2001f
   140005f40:	mov    rbx,rcx
   140005f43:	call   0x140005e30
   140005f48:	test   eax,eax
   140005f4a:	jne    0x140006004
   140005f50:	movzx  eax,WORD PTR [rip+0x31661]        # 0x1400375b8
   140005f57:	movups xmm0,XMMWORD PTR [rip+0x3164a]        # 0x1400375a8
   140005f5e:	xor    ecx,ecx
   140005f60:	mov    WORD PTR [rsp+0x60],ax
   140005f65:	lea    rax,[rsp+0x44]
   140005f6a:	mov    DWORD PTR [rsp+0x40],ecx
   140005f6e:	movups XMMWORD PTR [rsp+0x50],xmm0
   140005f73:	mov    QWORD PTR [rsp+0x30],rax
   140005f78:	lea    rax,[rsp+0x40]
   140005f7d:	lea    r9d,[rcx+0x10]
   140005f81:	mov    QWORD PTR [rsp+0x28],rax
   140005f86:	mov    QWORD PTR [rsp+0x20],rcx
   140005f8b:	mov    rcx,QWORD PTR [rsp+0x48]
   140005f90:	lea    r8,[rsp+0x50]
   140005f95:	xor    edx,edx
   140005f97:	mov    DWORD PTR [rsp+0x44],0x4
   140005f9f:	call   QWORD PTR [rip+0x2f0b3]        # 0x140035058
   140005fa5:	mov    rcx,QWORD PTR [rsp+0x48]
   140005faa:	lea    rdx,[rsp+0x50]
   140005faf:	call   QWORD PTR [rip+0x2f08b]        # 0x140035040
   140005fb5:	mov    rcx,QWORD PTR [rsp+0x48]
   140005fba:	call   QWORD PTR [rip+0x2f090]        # 0x140035050
   140005fc0:	cmp    DWORD PTR [rsp+0x40],0x0
   140005fc5:	je     0x140006004
   140005fc7:	mov    rcx,QWORD PTR [rbx+0x10]
   140005fcb:	lea    rax,[rip+0x315ee]        # 0x1400375c0
   140005fd2:	lea    rdx,[rip+0x31507]        # 0x1400374e0
   140005fd9:	mov    r9d,0x2
   140005fdf:	mov    r8d,0x85
   140005fe5:	mov    QWORD PTR [rsp+0x20],rax
   140005fea:	call   0x140006ce0
   140005fef:	mov    al,0x1
   140005ff1:	mov    rcx,QWORD PTR [rsp+0x68]
   140005ff6:	xor    rcx,rsp
   140005ff9:	call   0x1400097d0
   140005ffe:	add    rsp,0x70
   140006002:	pop    rbx
   140006003:	ret    
   140006004:	xor    al,al
   140006006:	mov    rcx,QWORD PTR [rsp+0x68]
   14000600b:	xor    rcx,rsp
   14000600e:	call   0x1400097d0
   140006013:	add    rsp,0x70
   140006017:	pop    rbx
   140006018:	ret    
   140006019:	int3   
   14000601a:	int3   
   14000601b:	int3   
   14000601c:	int3   
   14000601d:	int3   
   14000601e:	int3   
   14000601f:	int3   
   140006020:	mov    QWORD PTR [rsp+0x8],rbx
   140006025:	mov    QWORD PTR [rsp+0x10],rsi
   14000602a:	push   rdi
   14000602b:	sub    rsp,0x40
   14000602f:	mov    eax,DWORD PTR [rcx+0x374]
   140006035:	mov    esi,edx
   140006037:	mov    rbx,rcx
   14000603a:	cmp    eax,0x8
   14000603d:	jb     0x140006048
   14000603f:	mov    rdi,QWORD PTR [rip+0x3f1ea]        # 0x140045230
   140006046:	jmp    0x140006053
   140006048:	lea    rdi,[rip+0x3f1e1]        # 0x140045230
   14000604f:	mov    rdi,QWORD PTR [rdi+rax*8]
   140006053:	lea    rdx,[rcx+0x370]
   14000605a:	mov    rcx,QWORD PTR [rcx+0x390]
   140006061:	call   QWORD PTR [rip+0x2ef99]        # 0x140035000
   140006067:	test   eax,eax
   140006069:	jne    0x1400060b2
   14000606b:	call   QWORD PTR [rip+0x2f177]        # 0x1400351e8
   140006071:	mov    rcx,QWORD PTR [rbx+0x10]
   140006075:	lea    rdx,[rip+0x31464]        # 0x1400374e0
   14000607c:	mov    DWORD PTR [rsp+0x30],eax
   140006080:	lea    rax,[rip+0x318c1]        # 0x140037948
   140006087:	mov    r9d,0x1
   14000608d:	mov    r8d,0x1ba
   140006093:	mov    QWORD PTR [rsp+0x28],rdi
   140006098:	mov    QWORD PTR [rsp+0x20],rax
   14000609d:	call   0x140006ce0
   1400060a2:	mov    rbx,QWORD PTR [rsp+0x50]
   1400060a7:	mov    rsi,QWORD PTR [rsp+0x58]
   1400060ac:	add    rsp,0x40
   1400060b0:	pop    rdi
   1400060b1:	ret    
   1400060b2:	mov    rcx,QWORD PTR [rbx+0x10]
   1400060b6:	lea    rax,[rip+0x318c3]        # 0x140037980
   1400060bd:	lea    rdx,[rip+0x3141c]        # 0x1400374e0
   1400060c4:	mov    r9d,esi
   1400060c7:	mov    r8d,0x1be
   1400060cd:	mov    QWORD PTR [rsp+0x28],rdi
   1400060d2:	mov    QWORD PTR [rsp+0x20],rax
   1400060d7:	call   0x140006ce0
   1400060dc:	mov    rbx,QWORD PTR [rsp+0x50]
   1400060e1:	mov    rsi,QWORD PTR [rsp+0x58]
   1400060e6:	add    rsp,0x40
   1400060ea:	pop    rdi
   1400060eb:	ret    
   1400060ec:	int3   
   1400060ed:	int3   
   1400060ee:	int3   
   1400060ef:	int3   
   1400060f0:	rex push rbx
   1400060f2:	sub    rsp,0x30
   1400060f6:	mov    rbx,rcx
   1400060f9:	mov    rcx,QWORD PTR [rcx+0x10]
   1400060fd:	lea    rax,[rip+0x31724]        # 0x140037828
   140006104:	lea    rdx,[rip+0x313d5]        # 0x1400374e0
   14000610b:	mov    r9d,0x4
   140006111:	mov    r8d,0x13c
   140006117:	mov    QWORD PTR [rsp+0x20],rax
   14000611c:	call   0x140006ce0
   140006121:	cmp    WORD PTR [rbx+0x398],0x0
   140006129:	jne    0x14000615b
   14000612b:	mov    rcx,QWORD PTR [rbx+0x10]
   14000612f:	lea    rax,[rip+0x31702]        # 0x140037838
   140006136:	lea    rdx,[rip+0x313a3]        # 0x1400374e0
   14000613d:	mov    r9d,0x1
   140006143:	mov    r8d,0x140
   140006149:	mov    QWORD PTR [rsp+0x20],rax
   14000614e:	call   0x140006ce0
   140006153:	xor    al,al
   140006155:	add    rsp,0x30
   140006159:	pop    rbx
   14000615a:	ret    
   14000615b:	mov    edx,0x3
   140006160:	mov    rcx,rbx
   140006163:	mov    QWORD PTR [rsp+0x40],rdi
   140006168:	mov    DWORD PTR [rbx+0x374],0x4
   140006172:	mov    DWORD PTR [rbx+0x388],0x0
   14000617c:	mov    DWORD PTR [rbx+0x378],0x5
   140006186:	call   0x140006020
   14000618b:	mov    rcx,rbx
   14000618e:	call   0x1400031b0
   140006193:	movzx  edi,al
   140006196:	test   al,al
   140006198:	je     0x1400061da
   14000619a:	mov    rcx,rbx
   14000619d:	call   0x140005d40
   1400061a2:	mov    edx,0x3
   1400061a7:	mov    rcx,rbx
   1400061aa:	mov    DWORD PTR [rbx+0x374],0x3
   1400061b4:	mov    DWORD PTR [rbx+0x388],0x7530
   1400061be:	mov    DWORD PTR [rbx+0x378],0x5
   1400061c8:	movzx  edi,al
   1400061cb:	call   0x140006020
   1400061d0:	xor    edx,edx
   1400061d2:	mov    rcx,rbx
   1400061d5:	call   0x140003360
   1400061da:	movzx  eax,dil
   1400061de:	mov    rdi,QWORD PTR [rsp+0x40]
   1400061e3:	add    rsp,0x30
   1400061e7:	pop    rbx
   1400061e8:	ret    
   1400061e9:	int3   
   1400061ea:	int3   
   1400061eb:	int3   
   1400061ec:	int3   
   1400061ed:	int3   
   1400061ee:	int3   
   1400061ef:	int3   
   1400061f0:	mov    QWORD PTR [rsp+0x18],rbx
   1400061f5:	push   rdi
   1400061f6:	sub    rsp,0x80
   1400061fd:	mov    rax,QWORD PTR [rip+0x3f06c]        # 0x140045270
   140006204:	xor    rax,rsp
   140006207:	mov    QWORD PTR [rsp+0x78],rax
   14000620c:	movups xmm0,XMMWORD PTR [rip+0x313e5]        # 0x1400375f8
   140006213:	movups xmm1,XMMWORD PTR [rip+0x313ee]        # 0x140037608
   14000621a:	movzx  eax,WORD PTR [rip+0x313f7]        # 0x140037618
   140006221:	lea    r8,[rsp+0x48]
   140006226:	or     edx,0x20006
   14000622c:	mov    rdi,rcx
   14000622f:	mov    WORD PTR [rsp+0x70],ax
   140006234:	movups XMMWORD PTR [rsp+0x50],xmm0
   140006239:	movups XMMWORD PTR [rsp+0x60],xmm1
   14000623e:	call   0x140005e30
   140006243:	mov    ebx,eax
   140006245:	test   eax,eax
   140006247:	jne    0x14000628b
   140006249:	mov    rcx,QWORD PTR [rsp+0x48]
   14000624e:	lea    rax,[rsp+0x40]
   140006253:	lea    r9d,[rbx+0x4]
   140006257:	lea    rdx,[rsp+0x50]
   14000625c:	xor    r8d,r8d
   14000625f:	mov    DWORD PTR [rsp+0x28],0x4
   140006267:	mov    QWORD PTR [rsp+0x20],rax
   14000626c:	mov    DWORD PTR [rsp+0x40],0x1
   140006274:	call   QWORD PTR [rip+0x2edbe]        # 0x140035038
   14000627a:	mov    rcx,QWORD PTR [rsp+0x48]
   14000627f:	mov    ebx,eax
   140006281:	call   QWORD PTR [rip+0x2edc9]        # 0x140035050
   140006287:	test   ebx,ebx
   140006289:	je     0x1400062cd
   14000628b:	mov    rcx,QWORD PTR [rdi+0x10]
   14000628f:	mov    DWORD PTR [rsp+0x38],ebx
   140006293:	lea    rax,[rdi+0x398]
   14000629a:	mov    QWORD PTR [rsp+0x30],rax
   14000629f:	lea    rax,[rsp+0x50]
   1400062a4:	lea    rdx,[rip+0x31235]        # 0x1400374e0
   1400062ab:	mov    QWORD PTR [rsp+0x28],rax
   1400062b0:	lea    rax,[rip+0x31369]        # 0x140037620
   1400062b7:	mov    r9d,0x1
   1400062bd:	mov    r8d,0xa8
   1400062c3:	mov    QWORD PTR [rsp+0x20],rax
   1400062c8:	call   0x140006ce0
   1400062cd:	mov    rcx,QWORD PTR [rsp+0x78]
   1400062d2:	xor    rcx,rsp
   1400062d5:	call   0x1400097d0
   1400062da:	mov    rbx,QWORD PTR [rsp+0xa0]
   1400062e2:	add    rsp,0x80
   1400062e9:	pop    rdi
   1400062ea:	ret    
   1400062eb:	int3   
   1400062ec:	int3   
   1400062ed:	int3   
   1400062ee:	int3   
   1400062ef:	int3   
   1400062f0:	sub    rsp,0x48
   1400062f4:	lea    rax,[rip+0x31529]        # 0x140037824
   1400062fb:	lea    rcx,[rsp+0x20]
   140006300:	mov    QWORD PTR [rsp+0x20],rax
   140006305:	lea    rax,[rip+0xfffffffffffffa04]        # 0x140005d10
   14000630c:	mov    QWORD PTR [rsp+0x28],rax
   140006311:	xor    eax,eax
   140006313:	mov    QWORD PTR [rsp+0x30],rax
   140006318:	mov    QWORD PTR [rsp+0x38],rax
   14000631d:	call   QWORD PTR [rip+0x2ed3d]        # 0x140035060
   140006323:	xor    eax,eax
   140006325:	add    rsp,0x48
   140006329:	ret    
   14000632a:	int3   
   14000632b:	int3   
   14000632c:	int3   
   14000632d:	int3   
   14000632e:	int3   
   14000632f:	int3   
   140006330:	mov    QWORD PTR [rsp+0x18],r8
   140006335:	mov    QWORD PTR [rsp+0x20],r9
   14000633a:	sub    rsp,0x38
   14000633e:	lea    rax,[rsp+0x58]
   140006343:	xor    r9d,r9d
   140006346:	mov    QWORD PTR [rsp+0x20],rax
   14000634b:	call   0x1400088a0
   140006350:	add    rsp,0x38
   140006354:	ret    
   140006355:	int3   
   140006356:	int3   
   140006357:	int3   
   140006358:	int3   
   140006359:	int3   
   14000635a:	int3   
   14000635b:	int3   
   14000635c:	int3   
   14000635d:	int3   
   14000635e:	int3   
   14000635f:	int3   
   140006360:	mov    QWORD PTR [rsp+0x8],rcx
   140006365:	push   rbx
   140006366:	sub    rsp,0x40
   14000636a:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140006373:	mov    rbx,rcx
   140006376:	call   0x140001490
   14000637b:	nop
   14000637c:	lea    rax,[rip+0x31655]        # 0x1400379d8
   140006383:	mov    QWORD PTR [rbx],rax
   140006386:	lea    rax,[rip+0x3166b]        # 0x1400379f8
   14000638d:	mov    QWORD PTR [rsp+0x20],rax
   140006392:	mov    r9d,0x4
   140006398:	lea    r8d,[r9+0x10]
   14000639c:	lea    rdx,[rip+0x3166d]        # 0x140037a10
   1400063a3:	mov    rcx,QWORD PTR [rbx+0x10]
   1400063a7:	call   0x140006ce0
   1400063ac:	nop
   1400063ad:	mov    rax,rbx
   1400063b0:	add    rsp,0x40
   1400063b4:	pop    rbx
   1400063b5:	ret    
   1400063b6:	int3   
   1400063b7:	int3   
   1400063b8:	int3   
   1400063b9:	int3   
   1400063ba:	int3   
   1400063bb:	int3   
   1400063bc:	int3   
   1400063bd:	int3   
   1400063be:	int3   
   1400063bf:	int3   
   1400063c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400063c5:	push   rdi
   1400063c6:	sub    rsp,0x20
   1400063ca:	lea    rax,[rip+0x2fa77]        # 0x140035e48
   1400063d1:	mov    ebx,edx
   1400063d3:	mov    rdi,rcx
   1400063d6:	mov    QWORD PTR [rcx],rax
   1400063d9:	call   0x140001b90
   1400063de:	test   bl,0x1
   1400063e1:	je     0x1400063eb
   1400063e3:	mov    rcx,rdi
   1400063e6:	call   0x140007d8c
   1400063eb:	mov    rax,rdi
   1400063ee:	mov    rbx,QWORD PTR [rsp+0x30]
   1400063f3:	add    rsp,0x20
   1400063f7:	pop    rdi
   1400063f8:	ret    
   1400063f9:	int3   
   1400063fa:	int3   
   1400063fb:	int3   
   1400063fc:	int3   
   1400063fd:	int3   
   1400063fe:	int3   
   1400063ff:	int3   
   140006400:	mov    QWORD PTR [rsp+0x8],rbx
   140006405:	mov    QWORD PTR [rsp+0x10],rbp
   14000640a:	mov    QWORD PTR [rsp+0x18],rsi
   14000640f:	push   rdi
   140006410:	sub    rsp,0x40
   140006414:	mov    rsi,r9
   140006417:	mov    rbp,r8
   14000641a:	mov    ebx,edx
   14000641c:	mov    rdi,rcx
   14000641f:	call   0x140002a20
   140006424:	cmp    ebx,0x16
   140006427:	je     0x14000643e
   140006429:	mov    rbx,QWORD PTR [rsp+0x50]
   14000642e:	mov    rbp,QWORD PTR [rsp+0x58]
   140006433:	mov    rsi,QWORD PTR [rsp+0x60]
   140006438:	add    rsp,0x40
   14000643c:	pop    rdi
   14000643d:	ret    
   14000643e:	mov    rcx,QWORD PTR [rdi+0x10]
   140006442:	mov    r9d,0x3
   140006448:	lea    rax,[rip+0x316b9]        # 0x140037b08
   14000644f:	mov    DWORD PTR [rsp+0x30],esi
   140006453:	lea    rdx,[rip+0x315b6]        # 0x140037a10
   14000645a:	lea    r8d,[r9+0x5a]
   14000645e:	mov    DWORD PTR [rsp+0x28],ebp
   140006462:	mov    QWORD PTR [rsp+0x20],rax
   140006467:	call   0x140006ce0
   14000646c:	mov    rcx,QWORD PTR [rdi+0x138]
   140006473:	mov    BYTE PTR [rdi+0x130],0x1
   14000647a:	call   QWORD PTR [rip+0x2ed60]        # 0x1400351e0
   140006480:	xor    edx,edx
   140006482:	mov    rcx,rdi
   140006485:	call   0x140003360
   14000648a:	xor    edx,edx
   14000648c:	mov    rcx,rdi
   14000648f:	call   0x140003650
   140006494:	mov    rcx,rdi
   140006497:	call   0x140001b90
   14000649c:	mov    rcx,QWORD PTR [rdi+0x10]
   1400064a0:	mov    r9d,0x3
   1400064a6:	lea    rax,[rip+0x31693]        # 0x140037b40
   1400064ad:	lea    rdx,[rip+0x3155c]        # 0x140037a10
   1400064b4:	lea    r8d,[r9+0x60]
   1400064b8:	mov    QWORD PTR [rsp+0x20],rax
   1400064bd:	call   0x140006ce0
   1400064c2:	xor    ecx,ecx
   1400064c4:	call   0x14000a38c
   1400064c9:	int3   
   1400064ca:	int3   
   1400064cb:	int3   
   1400064cc:	int3   
   1400064cd:	int3   
   1400064ce:	int3   
   1400064cf:	int3   
   1400064d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400064d5:	mov    QWORD PTR [rsp+0x10],rbp
   1400064da:	mov    QWORD PTR [rsp+0x20],rsi
   1400064df:	push   rdi
   1400064e0:	sub    rsp,0x30
   1400064e4:	mov    ebx,edx
   1400064e6:	mov    rdi,rcx
   1400064e9:	call   QWORD PTR [rip+0x2eb81]        # 0x140035070
   1400064ef:	lea    rdx,[rsp+0x50]
   1400064f4:	xor    r9d,r9d
   1400064f7:	mov    r8d,ebx
   1400064fa:	mov    rcx,rdi
   1400064fd:	mov    rsi,rax
   140006500:	call   0x140003900
   140006505:	test   al,al
   140006507:	je     0x1400065f0
   14000650d:	lea    rbp,[rip+0x31594]        # 0x140037aa8
   140006514:	mov    rax,QWORD PTR [rsp+0x50]
   140006519:	test   rax,rax
   14000651c:	je     0x14000655f
   14000651e:	mov    rcx,QWORD PTR [rdi+0x10]
   140006522:	mov    r9d,0x3
   140006528:	add    rax,0x270
   14000652e:	mov    QWORD PTR [rsp+0x28],rax
   140006533:	lea    r8d,[r9+0x31]
   140006537:	lea    rdx,[rip+0x314d2]        # 0x140037a10
   14000653e:	mov    QWORD PTR [rsp+0x20],rbp
   140006543:	call   0x140006ce0
   140006548:	mov    rax,QWORD PTR [rsp+0x50]
   14000654d:	cmp    DWORD PTR [rax+0x2b4],0x4
   140006554:	jne    0x14000655f
   140006556:	cmp    BYTE PTR [rax+0x218],0x0
   14000655d:	jne    0x140006595
   14000655f:	cmp    ebx,0xffffffff
   140006562:	je     0x14000657c
   140006564:	call   QWORD PTR [rip+0x2eb06]        # 0x140035070
   14000656a:	mov    ecx,ebx
   14000656c:	mov    rdx,rax
   14000656f:	sub    rdx,rsi
   140006572:	cmp    rdx,rcx
   140006575:	jae    0x1400065ca
   140006577:	sub    ebx,edx
   140006579:	mov    rsi,rax
   14000657c:	lea    rdx,[rsp+0x50]
   140006581:	xor    r9d,r9d
   140006584:	mov    r8d,ebx
   140006587:	mov    rcx,rdi
   14000658a:	call   0x140003900
   14000658f:	test   al,al
   140006591:	jne    0x140006514
   140006593:	jmp    0x1400065f0
   140006595:	mov    rcx,QWORD PTR [rdi+0x10]
   140006599:	add    rax,0x270
   14000659f:	mov    r9d,0x1
   1400065a5:	mov    QWORD PTR [rsp+0x28],rax
   1400065aa:	lea    rax,[rip+0x3151f]        # 0x140037ad0
   1400065b1:	lea    r8d,[r9+0x38]
   1400065b5:	lea    rdx,[rip+0x31454]        # 0x140037a10
   1400065bc:	mov    QWORD PTR [rsp+0x20],rax
   1400065c1:	call   0x140006ce0
   1400065c6:	xor    al,al
   1400065c8:	jmp    0x1400065fa
   1400065ca:	mov    rcx,QWORD PTR [rdi+0x10]
   1400065ce:	mov    r9d,0x3
   1400065d4:	lea    rax,[rip+0x301ad]        # 0x140036788
   1400065db:	lea    r8d,[r9+0x43]
   1400065df:	lea    rdx,[rip+0x3142a]        # 0x140037a10
   1400065e6:	mov    QWORD PTR [rsp+0x20],rax
   1400065eb:	call   0x140006ce0
   1400065f0:	cmp    BYTE PTR [rdi+0x148],0x0
   1400065f7:	sete   al
   1400065fa:	mov    rbx,QWORD PTR [rsp+0x40]
   1400065ff:	mov    rbp,QWORD PTR [rsp+0x48]
   140006604:	mov    rsi,QWORD PTR [rsp+0x58]
   140006609:	add    rsp,0x30
   14000660d:	pop    rdi
   14000660e:	ret    
   14000660f:	int3   
   140006610:	mov    QWORD PTR [rsp+0x8],rbx
   140006615:	mov    QWORD PTR [rsp+0x10],rsi
   14000661a:	push   rdi
   14000661b:	sub    rsp,0x30
   14000661f:	mov    DWORD PTR [rsp+0x28],edx
   140006623:	mov    r9d,0x3
   140006629:	mov    rbx,rcx
   14000662c:	mov    rcx,QWORD PTR [rcx+0x10]
   140006630:	mov    esi,edx
   140006632:	lea    rax,[rip+0x3142f]        # 0x140037a68
   140006639:	lea    r8d,[r9+0x16]
   14000663d:	lea    rdx,[rip+0x313cc]        # 0x140037a10
   140006644:	mov    QWORD PTR [rsp+0x20],rax
   140006649:	call   0x140006ce0
   14000664e:	mov    rcx,rbx
   140006651:	call   0x1400031b0
   140006656:	movzx  edi,al
   140006659:	test   al,al
   14000665b:	je     0x140006674
   14000665d:	mov    edx,esi
   14000665f:	mov    rcx,rbx
   140006662:	call   0x1400064d0
   140006667:	xor    edx,edx
   140006669:	mov    rcx,rbx
   14000666c:	movzx  edi,al
   14000666f:	call   0x140003360
   140006674:	mov    rcx,QWORD PTR [rbx+0x10]
   140006678:	movzx  eax,dil
   14000667c:	mov    r9d,0x3
   140006682:	mov    DWORD PTR [rsp+0x28],eax
   140006686:	lea    rax,[rip+0x313f3]        # 0x140037a80
   14000668d:	lea    r8d,[r9+0x1f]
   140006691:	lea    rdx,[rip+0x31378]        # 0x140037a10
   140006698:	mov    QWORD PTR [rsp+0x20],rax
   14000669d:	call   0x140006ce0
   1400066a2:	mov    rbx,QWORD PTR [rsp+0x40]
   1400066a7:	mov    rsi,QWORD PTR [rsp+0x48]
   1400066ac:	movzx  eax,dil
   1400066b0:	add    rsp,0x30
   1400066b4:	pop    rdi
   1400066b5:	ret    
   1400066b6:	int3   
   1400066b7:	int3   
   1400066b8:	int3   
   1400066b9:	int3   
   1400066ba:	int3   
   1400066bb:	int3   
   1400066bc:	int3   
   1400066bd:	int3   
   1400066be:	int3   
   1400066bf:	int3   
   1400066c0:	lea    rax,[rip+0x31531]        # 0x140037bf8
   1400066c7:	mov    DWORD PTR [rcx+0x8],0x1
   1400066ce:	mov    QWORD PTR [rcx],rax
   1400066d1:	mov    rax,rcx
   1400066d4:	ret    
   1400066d5:	int3   
   1400066d6:	int3   
   1400066d7:	int3   
   1400066d8:	int3   
   1400066d9:	int3   
   1400066da:	int3   
   1400066db:	int3   
   1400066dc:	int3   
   1400066dd:	int3   
   1400066de:	int3   
   1400066df:	int3   
   1400066e0:	lea    rax,[rip+0x31529]        # 0x140037c10
   1400066e7:	mov    DWORD PTR [rcx+0x8],0x1
   1400066ee:	mov    QWORD PTR [rcx],rax
   1400066f1:	mov    rax,rcx
   1400066f4:	ret    
   1400066f5:	int3   
   1400066f6:	int3   
   1400066f7:	int3   
   1400066f8:	int3   
   1400066f9:	int3   
   1400066fa:	int3   
   1400066fb:	int3   
   1400066fc:	int3   
   1400066fd:	int3   
   1400066fe:	int3   
   1400066ff:	int3   
   140006700:	lea    rax,[rip+0x31521]        # 0x140037c28
   140006707:	mov    DWORD PTR [rcx+0x8],0x1
   14000670e:	mov    QWORD PTR [rcx+0x10],0x0
   140006716:	mov    QWORD PTR [rcx],rax
   140006719:	mov    rax,rcx
   14000671c:	ret    
   14000671d:	int3   
   14000671e:	int3   
   14000671f:	int3   
   140006720:	lea    rax,[rip+0x31449]        # 0x140037b70
   140006727:	mov    DWORD PTR [rcx+0x8],0x1
   14000672e:	mov    QWORD PTR [rcx],rax
   140006731:	mov    rax,rcx
   140006734:	ret    
   140006735:	int3   
   140006736:	int3   
   140006737:	int3   
   140006738:	int3   
   140006739:	int3   
   14000673a:	int3   
   14000673b:	int3   
   14000673c:	int3   
   14000673d:	int3   
   14000673e:	int3   
   14000673f:	int3   
   140006740:	lea    rax,[rip+0x31499]        # 0x140037be0
   140006747:	mov    DWORD PTR [rcx+0x8],0x1
   14000674e:	mov    QWORD PTR [rcx],rax
   140006751:	mov    rax,rcx
   140006754:	ret    
   140006755:	int3   
   140006756:	int3   
   140006757:	int3   
   140006758:	int3   
   140006759:	int3   
   14000675a:	int3   
   14000675b:	int3   
   14000675c:	int3   
   14000675d:	int3   
   14000675e:	int3   
   14000675f:	int3   
   140006760:	lea    rax,[rip+0x31409]        # 0x140037b70
   140006767:	mov    QWORD PTR [rcx],rax
   14000676a:	ret    
   14000676b:	int3   
   14000676c:	int3   
   14000676d:	int3   
   14000676e:	int3   
   14000676f:	int3   
   140006770:	lea    rax,[rip+0x313f9]        # 0x140037b70
   140006777:	mov    QWORD PTR [rcx],rax
   14000677a:	ret    
   14000677b:	int3   
   14000677c:	int3   
   14000677d:	int3   
   14000677e:	int3   
   14000677f:	int3   
   140006780:	rex push rbx
   140006782:	sub    rsp,0x20
   140006786:	lea    rax,[rip+0x3149b]        # 0x140037c28
   14000678d:	mov    rbx,rcx
   140006790:	mov    QWORD PTR [rcx],rax
   140006793:	mov    rcx,QWORD PTR [rcx+0x10]
   140006797:	test   rcx,rcx
   14000679a:	je     0x1400067a9
   14000679c:	call   0x14000aaa8
   1400067a1:	mov    QWORD PTR [rbx+0x10],0x0
   1400067a9:	lea    rax,[rip+0x313c0]        # 0x140037b70
   1400067b0:	mov    QWORD PTR [rbx],rax
   1400067b3:	add    rsp,0x20
   1400067b7:	pop    rbx
   1400067b8:	ret    
   1400067b9:	int3   
   1400067ba:	int3   
   1400067bb:	int3   
   1400067bc:	int3   
   1400067bd:	int3   
   1400067be:	int3   
   1400067bf:	int3   
   1400067c0:	lea    rax,[rip+0x313a9]        # 0x140037b70
   1400067c7:	mov    QWORD PTR [rcx],rax
   1400067ca:	ret    
   1400067cb:	int3   
   1400067cc:	int3   
   1400067cd:	int3   
   1400067ce:	int3   
   1400067cf:	int3   
   1400067d0:	lea    rax,[rip+0x31399]        # 0x140037b70
   1400067d7:	mov    QWORD PTR [rcx],rax
   1400067da:	ret    
   1400067db:	int3   
   1400067dc:	int3   
   1400067dd:	int3   
   1400067de:	int3   
   1400067df:	int3   
   1400067e0:	rex push rbx
   1400067e2:	sub    rsp,0x20
   1400067e6:	lea    rax,[rip+0x31383]        # 0x140037b70
   1400067ed:	mov    rbx,rcx
   1400067f0:	mov    QWORD PTR [rcx],rax
   1400067f3:	test   dl,0x1
   1400067f6:	je     0x1400067fd
   1400067f8:	call   0x140007d8c
   1400067fd:	mov    rax,rbx
   140006800:	add    rsp,0x20
   140006804:	pop    rbx
   140006805:	ret    
   140006806:	int3   
   140006807:	int3   
   140006808:	int3   
   140006809:	int3   
   14000680a:	int3   
   14000680b:	int3   
   14000680c:	int3   
   14000680d:	int3   
   14000680e:	int3   
   14000680f:	int3   
   140006810:	rex push rbx
   140006812:	sub    rsp,0x20
   140006816:	lea    rax,[rip+0x31353]        # 0x140037b70
   14000681d:	mov    rbx,rcx
   140006820:	mov    QWORD PTR [rcx],rax
   140006823:	test   dl,0x1
   140006826:	je     0x14000682d
   140006828:	call   0x140007d8c
   14000682d:	mov    rax,rbx
   140006830:	add    rsp,0x20
   140006834:	pop    rbx
   140006835:	ret    
   140006836:	int3   
   140006837:	int3   
   140006838:	int3   
   140006839:	int3   
   14000683a:	int3   
   14000683b:	int3   
   14000683c:	int3   
   14000683d:	int3   
   14000683e:	int3   
   14000683f:	int3   
   140006840:	mov    QWORD PTR [rsp+0x8],rbx
   140006845:	push   rdi
   140006846:	sub    rsp,0x20
   14000684a:	lea    rax,[rip+0x313d7]        # 0x140037c28
   140006851:	mov    rbx,rcx
   140006854:	mov    edi,edx
   140006856:	mov    QWORD PTR [rcx],rax
   140006859:	mov    rcx,QWORD PTR [rcx+0x10]
   14000685d:	test   rcx,rcx
   140006860:	je     0x14000686f
   140006862:	call   0x14000aaa8
   140006867:	mov    QWORD PTR [rbx+0x10],0x0
   14000686f:	lea    rax,[rip+0x312fa]        # 0x140037b70
   140006876:	mov    QWORD PTR [rbx],rax
   140006879:	test   dil,0x1
   14000687d:	je     0x140006887
   14000687f:	mov    rcx,rbx
   140006882:	call   0x140007d8c
   140006887:	mov    rax,rbx
   14000688a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000688f:	add    rsp,0x20
   140006893:	pop    rdi
   140006894:	ret    
   140006895:	int3   
   140006896:	int3   
   140006897:	int3   
   140006898:	int3   
   140006899:	int3   
   14000689a:	int3   
   14000689b:	int3   
   14000689c:	int3   
   14000689d:	int3   
   14000689e:	int3   
   14000689f:	int3   
   1400068a0:	rex push rbx
   1400068a2:	sub    rsp,0x20
   1400068a6:	lea    rax,[rip+0x312c3]        # 0x140037b70
   1400068ad:	mov    rbx,rcx
   1400068b0:	mov    QWORD PTR [rcx],rax
   1400068b3:	test   dl,0x1
   1400068b6:	je     0x1400068bd
   1400068b8:	call   0x140007d8c
   1400068bd:	mov    rax,rbx
   1400068c0:	add    rsp,0x20
   1400068c4:	pop    rbx
   1400068c5:	ret    
   1400068c6:	int3   
   1400068c7:	int3   
   1400068c8:	int3   
   1400068c9:	int3   
   1400068ca:	int3   
   1400068cb:	int3   
   1400068cc:	int3   
   1400068cd:	int3   
   1400068ce:	int3   
   1400068cf:	int3   
   1400068d0:	rex push rbx
   1400068d2:	sub    rsp,0x20
   1400068d6:	lea    rax,[rip+0x31293]        # 0x140037b70
   1400068dd:	mov    rbx,rcx
   1400068e0:	mov    QWORD PTR [rcx],rax
   1400068e3:	test   dl,0x1
   1400068e6:	je     0x1400068ed
   1400068e8:	call   0x140007d8c
   1400068ed:	mov    rax,rbx
   1400068f0:	add    rsp,0x20
   1400068f4:	pop    rbx
   1400068f5:	ret    
   1400068f6:	int3   
   1400068f7:	int3   
   1400068f8:	int3   
   1400068f9:	int3   
   1400068fa:	int3   
   1400068fb:	int3   
   1400068fc:	int3   
   1400068fd:	int3   
   1400068fe:	int3   
   1400068ff:	int3   
   140006900:	sub    rsp,0x38
   140006904:	mov    eax,DWORD PTR [rip+0x40fbe]        # 0x1400478c8
   14000690a:	lea    r9,[rip+0x312af]        # 0x140037bc0
   140006911:	movsxd rdx,edx
   140006914:	or     r8,0xffffffffffffffff
   140006918:	mov    DWORD PTR [rsp+0x20],eax
   14000691c:	call   0x14000aed4
   140006921:	mov    r8d,DWORD PTR [rip+0x40fa0]        # 0x1400478c8
   140006928:	mov    r9d,eax
   14000692b:	inc    r8d
   14000692e:	mov    eax,0x66666667
   140006933:	imul   r8d
   140006936:	sar    edx,0x2
   140006939:	xor    eax,eax
   14000693b:	mov    ecx,edx
   14000693d:	shr    ecx,0x1f
   140006940:	add    edx,ecx
   140006942:	lea    ecx,[rdx+rdx*4]
   140006945:	add    ecx,ecx
   140006947:	sub    r8d,ecx
   14000694a:	test   r9d,r9d
   14000694d:	cmovg  eax,r9d
   140006951:	mov    DWORD PTR [rip+0x40f70],r8d        # 0x1400478c8
   140006958:	add    rsp,0x38
   14000695c:	ret    
   14000695d:	int3   
   14000695e:	int3   
   14000695f:	int3   
   140006960:	sub    rsp,0x28
   140006964:	mov    r10,rdx
   140006967:	lea    r9,[rip+0x31212]        # 0x140037b80
   14000696e:	dec    ecx
   140006970:	je     0x1400069a6
   140006972:	dec    ecx
   140006974:	je     0x14000699d
   140006976:	dec    ecx
   140006978:	je     0x140006994
   14000697a:	dec    ecx
   14000697c:	je     0x14000698b
   14000697e:	dec    ecx
   140006980:	jne    0x1400069ad
   140006982:	lea    r9,[rip+0x311fb]        # 0x140037b84
   140006989:	jmp    0x1400069ad
   14000698b:	lea    r9,[rip+0x311f6]        # 0x140037b88
   140006992:	jmp    0x1400069ad
   140006994:	lea    r9,[rip+0x311f1]        # 0x140037b8c
   14000699b:	jmp    0x1400069ad
   14000699d:	lea    r9,[rip+0x311ec]        # 0x140037b90
   1400069a4:	jmp    0x1400069ad
   1400069a6:	lea    r9,[rip+0x311e7]        # 0x140037b94
   1400069ad:	movsxd rdx,r8d
   1400069b0:	mov    rcx,r10
   1400069b3:	or     r8,0xffffffffffffffff
   1400069b7:	call   0x14000aed4
   1400069bc:	xor    ecx,ecx
   1400069be:	test   eax,eax
   1400069c0:	cmovg  ecx,eax
   1400069c3:	mov    eax,ecx
   1400069c5:	add    rsp,0x28
   1400069c9:	ret    
   1400069ca:	int3   
   1400069cb:	int3   
   1400069cc:	int3   
   1400069cd:	int3   
   1400069ce:	int3   
   1400069cf:	int3   
   1400069d0:	rex push rbx
   1400069d2:	push   rbp
   1400069d3:	push   rsi
   1400069d4:	sub    rsp,0x160
   1400069db:	mov    rax,QWORD PTR [rip+0x3e88e]        # 0x140045270
   1400069e2:	xor    rax,rsp
   1400069e5:	mov    QWORD PTR [rsp+0x150],rax
   1400069ed:	mov    rbp,rcx
   1400069f0:	xor    esi,esi
   1400069f2:	mov    rax,r8
   1400069f5:	mov    QWORD PTR [rsp+0x40],rsi
   1400069fa:	mov    QWORD PTR [rsp+0x38],rsi
   1400069ff:	lea    rcx,[rsp+0x50]
   140006a04:	mov    QWORD PTR [rsp+0x30],0x100
   140006a0d:	mov    QWORD PTR [rsp+0x28],rcx
   140006a12:	movsxd rbx,edx
   140006a15:	mov    rcx,rax
   140006a18:	xor    r9d,r9d
   140006a1b:	xor    r8d,r8d
   140006a1e:	xor    edx,edx
   140006a20:	mov    QWORD PTR [rsp+0x20],rsi
   140006a25:	call   0x14000a5b0
   140006a2a:	lea    rax,[rsp+0x50]
   140006a2f:	lea    r9,[rip+0x31196]        # 0x140037bcc
   140006a36:	mov    QWORD PTR [rsp+0x28],rax
   140006a3b:	mov    rdx,rbx
   140006a3e:	or     r8,0xffffffffffffffff
   140006a42:	mov    rcx,rbp
   140006a45:	mov    DWORD PTR [rsp+0x20],0x10
   140006a4d:	call   0x14000aed4
   140006a52:	movsxd rbx,eax
   140006a55:	test   eax,eax
   140006a57:	jle    0x140006a8c
   140006a59:	mov    QWORD PTR [rsp+0x198],rdi
   140006a61:	mov    edi,0x12
   140006a66:	sub    edi,ebx
   140006a68:	test   edi,edi
   140006a6a:	jle    0x140006a84
   140006a6c:	lea    rcx,[rbx+rbp*1]
   140006a70:	lea    edx,[rsi+0x20]
   140006a73:	movsxd r8,edi
   140006a76:	call   0x140009800
   140006a7b:	add    ebx,edi
   140006a7d:	movsxd rcx,ebx
   140006a80:	mov    BYTE PTR [rcx+rbp*1],sil
   140006a84:	mov    rdi,QWORD PTR [rsp+0x198]
   140006a8c:	test   ebx,ebx
   140006a8e:	cmovg  esi,ebx
   140006a91:	mov    eax,esi
   140006a93:	mov    rcx,QWORD PTR [rsp+0x150]
   140006a9b:	xor    rcx,rsp
   140006a9e:	call   0x1400097d0
   140006aa3:	add    rsp,0x160
   140006aaa:	pop    rsi
   140006aab:	pop    rbp
   140006aac:	pop    rbx
   140006aad:	ret    
   140006aae:	int3   
   140006aaf:	int3   
   140006ab0:	mov    QWORD PTR [rsp+0x8],rbx
   140006ab5:	push   rdi
   140006ab6:	sub    rsp,0x30
   140006aba:	movsxd rbx,edx
   140006abd:	mov    rdi,rcx
   140006ac0:	call   QWORD PTR [rip+0x2e642]        # 0x140035108
   140006ac6:	lea    r9,[rip+0x310f7]        # 0x140037bc4
   140006acd:	mov    rdx,rbx
   140006ad0:	or     r8,0xffffffffffffffff
   140006ad4:	mov    rcx,rdi
   140006ad7:	mov    DWORD PTR [rsp+0x20],eax
   140006adb:	call   0x14000aed4
   140006ae0:	mov    rbx,QWORD PTR [rsp+0x40]
   140006ae5:	xor    ecx,ecx
   140006ae7:	test   eax,eax
   140006ae9:	cmovg  ecx,eax
   140006aec:	mov    eax,ecx
   140006aee:	add    rsp,0x30
   140006af2:	pop    rdi
   140006af3:	ret    
   140006af4:	int3   
   140006af5:	int3   
   140006af6:	int3   
   140006af7:	int3   
   140006af8:	int3   
   140006af9:	int3   
   140006afa:	int3   
   140006afb:	int3   
   140006afc:	int3   
   140006afd:	int3   
   140006afe:	int3   
   140006aff:	int3   
   140006b00:	mov    QWORD PTR [rsp+0x18],rbx
   140006b05:	push   rbp
   140006b06:	push   rsi
   140006b07:	push   rdi
   140006b08:	sub    rsp,0x80
   140006b0f:	mov    rax,QWORD PTR [rip+0x3e75a]        # 0x140045270
   140006b16:	xor    rax,rsp
   140006b19:	mov    QWORD PTR [rsp+0x70],rax
   140006b1e:	mov    rbp,rcx
   140006b21:	lea    rcx,[rsp+0x60]
   140006b26:	movsxd rsi,edx
   140006b29:	call   QWORD PTR [rip+0x2e6e1]        # 0x140035210
   140006b2f:	movzx  r8d,WORD PTR [rsp+0x6c]
   140006b35:	movzx  r9d,WORD PTR [rsp+0x6a]
   140006b3b:	movzx  eax,WORD PTR [rsp+0x6e]
   140006b40:	movzx  r10d,WORD PTR [rsp+0x68]
   140006b46:	movzx  r11d,WORD PTR [rsp+0x66]
   140006b4c:	movzx  ebx,WORD PTR [rsp+0x62]
   140006b51:	movzx  edi,WORD PTR [rsp+0x60]
   140006b56:	mov    DWORD PTR [rsp+0x50],eax
   140006b5a:	mov    DWORD PTR [rsp+0x48],r8d
   140006b5f:	mov    DWORD PTR [rsp+0x40],r9d
   140006b64:	mov    DWORD PTR [rsp+0x38],r10d
   140006b69:	mov    DWORD PTR [rsp+0x30],r11d
   140006b6e:	lea    r9,[rip+0x31023]        # 0x140037b98
   140006b75:	mov    rdx,rsi
   140006b78:	or     r8,0xffffffffffffffff
   140006b7c:	mov    rcx,rbp
   140006b7f:	mov    DWORD PTR [rsp+0x28],ebx
   140006b83:	mov    DWORD PTR [rsp+0x20],edi
   140006b87:	call   0x14000aed4
   140006b8c:	xor    ecx,ecx
   140006b8e:	test   eax,eax
   140006b90:	cmovg  ecx,eax
   140006b93:	mov    eax,ecx
   140006b95:	mov    rcx,QWORD PTR [rsp+0x70]
   140006b9a:	xor    rcx,rsp
   140006b9d:	call   0x1400097d0
   140006ba2:	mov    rbx,QWORD PTR [rsp+0xb0]
   140006baa:	add    rsp,0x80
   140006bb1:	pop    rdi
   140006bb2:	pop    rsi
   140006bb3:	pop    rbp
   140006bb4:	ret    
   140006bb5:	int3   
   140006bb6:	int3   
   140006bb7:	int3   
   140006bb8:	int3   
   140006bb9:	int3   
   140006bba:	int3   
   140006bbb:	int3   
   140006bbc:	int3   
   140006bbd:	int3   
   140006bbe:	int3   
   140006bbf:	int3   
   140006bc0:	mov    QWORD PTR [rsp+0x18],rsi
   140006bc5:	push   rdi
   140006bc6:	sub    rsp,0x470
   140006bcd:	mov    rax,QWORD PTR [rip+0x3e69c]        # 0x140045270
   140006bd4:	xor    rax,rsp
   140006bd7:	mov    QWORD PTR [rsp+0x460],rax
   140006bdf:	cmp    QWORD PTR [rcx+0x10],0x0
   140006be4:	mov    rsi,rdx
   140006be7:	mov    rdi,rcx
   140006bea:	je     0x140006bf3
   140006bec:	mov    al,0x1
   140006bee:	jmp    0x140006cb7
   140006bf3:	mov    QWORD PTR [rsp+0x488],rbx
   140006bfb:	xor    ebx,ebx
   140006bfd:	mov    DWORD PTR [rsp+0x30],ebx
   140006c01:	call   QWORD PTR [rip+0x2e5b1]        # 0x1400351b8
   140006c07:	lea    rdx,[rsp+0x30]
   140006c0c:	mov    ecx,eax
   140006c0e:	call   QWORD PTR [rip+0x2e59c]        # 0x1400351b0
   140006c14:	mov    r9d,DWORD PTR [rsp+0x30]
   140006c19:	lea    rcx,[rsp+0x40]
   140006c1e:	mov    r8,rsi
   140006c21:	mov    edx,0x104
   140006c26:	call   0x1400070d0
   140006c2b:	lea    r9,[rsp+0x40]
   140006c30:	lea    r8,[rip+0x31001]        # 0x140037c38
   140006c37:	lea    rcx,[rsp+0x250]
   140006c3f:	mov    edx,0x104
   140006c44:	mov    DWORD PTR [rsp+0x20],0x1
   140006c4c:	call   0x1400070d0
   140006c51:	lea    rcx,[rsp+0x250]
   140006c59:	call   QWORD PTR [rip+0x2e499]        # 0x1400350f8
   140006c5f:	lea    r9,[rsp+0x40]
   140006c64:	lea    r8,[rip+0x30fe5]        # 0x140037c50
   140006c6b:	lea    rcx,[rsp+0x250]
   140006c73:	mov    edx,0x104
   140006c78:	call   0x1400070d0
   140006c7d:	lea    rdx,[rsp+0x250]
   140006c85:	lea    rcx,[rsp+0x40]
   140006c8a:	call   QWORD PTR [rip+0x2e488]        # 0x140035118
   140006c90:	lea    r8d,[rbx+0x20]
   140006c94:	lea    rdx,[rip+0x30fcd]        # 0x140037c68
   140006c9b:	lea    rcx,[rsp+0x40]
   140006ca0:	call   0x14000b0c4
   140006ca5:	mov    rbx,QWORD PTR [rsp+0x488]
   140006cad:	test   rax,rax
   140006cb0:	mov    QWORD PTR [rdi+0x10],rax
   140006cb4:	setne  al
   140006cb7:	mov    rcx,QWORD PTR [rsp+0x460]
   140006cbf:	xor    rcx,rsp
   140006cc2:	call   0x1400097d0
   140006cc7:	mov    rsi,QWORD PTR [rsp+0x490]
   140006ccf:	add    rsp,0x470
   140006cd6:	pop    rdi
   140006cd7:	ret    
   140006cd8:	int3   
   140006cd9:	int3   
   140006cda:	int3   
   140006cdb:	int3   
   140006cdc:	int3   
   140006cdd:	int3   
   140006cde:	int3   
   140006cdf:	int3   
   140006ce0:	mov    r11,rsp
   140006ce3:	push   rdi
   140006ce4:	push   r14
   140006ce6:	push   r15
   140006ce8:	sub    rsp,0x460
   140006cef:	mov    rax,QWORD PTR [rip+0x3e57a]        # 0x140045270
   140006cf6:	xor    rax,rsp
   140006cf9:	mov    QWORD PTR [rsp+0x430],rax
   140006d01:	mov    edi,r9d
   140006d04:	mov    r15,rdx
   140006d07:	mov    r14,rcx
   140006d0a:	cmp    r9d,DWORD PTR [rcx+0x8]
   140006d0e:	jg     0x140006efa
   140006d14:	mov    eax,DWORD PTR [rip+0x40bae]        # 0x1400478c8
   140006d1a:	mov    QWORD PTR [r11-0x20],rbx
   140006d1e:	mov    QWORD PTR [r11-0x28],rbp
   140006d22:	mov    QWORD PTR [r11-0x30],rsi
   140006d26:	mov    QWORD PTR [r11-0x38],r12
   140006d2a:	mov    esi,0x3ff
   140006d2f:	lea    r9,[rip+0x30e8a]        # 0x140037bc0
   140006d36:	lea    rcx,[rsp+0x30]
   140006d3b:	or     r8,0xffffffffffffffff
   140006d3f:	mov    edx,esi
   140006d41:	lea    r12,[r11+0x30]
   140006d45:	mov    DWORD PTR [rsp+0x20],eax
   140006d49:	call   0x14000aed4
   140006d4e:	mov    r8d,DWORD PTR [rip+0x40b73]        # 0x1400478c8
   140006d55:	xor    ebp,ebp
   140006d57:	mov    r9d,eax
   140006d5a:	inc    r8d
   140006d5d:	mov    eax,0x66666667
   140006d62:	mov    ebx,ebp
   140006d64:	imul   r8d
   140006d67:	sar    edx,0x2
   140006d6a:	mov    ecx,edx
   140006d6c:	shr    ecx,0x1f
   140006d6f:	add    edx,ecx
   140006d71:	lea    ecx,[rdx+rdx*4]
   140006d74:	add    ecx,ecx
   140006d76:	sub    r8d,ecx
   140006d79:	test   r9d,r9d
   140006d7c:	cmovg  ebx,r9d
   140006d80:	mov    DWORD PTR [rip+0x40b41],r8d        # 0x1400478c8
   140006d87:	lea    r9,[rip+0x30df2]        # 0x140037b80
   140006d8e:	dec    edi
   140006d90:	je     0x140006dc6
   140006d92:	dec    edi
   140006d94:	je     0x140006dbd
   140006d96:	dec    edi
   140006d98:	je     0x140006db4
   140006d9a:	dec    edi
   140006d9c:	je     0x140006dab
   140006d9e:	dec    edi
   140006da0:	jne    0x140006dcd
   140006da2:	lea    r9,[rip+0x30ddb]        # 0x140037b84
   140006da9:	jmp    0x140006dcd
   140006dab:	lea    r9,[rip+0x30dd6]        # 0x140037b88
   140006db2:	jmp    0x140006dcd
   140006db4:	lea    r9,[rip+0x30dd1]        # 0x140037b8c
   140006dbb:	jmp    0x140006dcd
   140006dbd:	lea    r9,[rip+0x30dcc]        # 0x140037b90
   140006dc4:	jmp    0x140006dcd
   140006dc6:	lea    r9,[rip+0x30dc7]        # 0x140037b94
   140006dcd:	mov    eax,esi
   140006dcf:	lea    rcx,[rsp+0x30]
   140006dd4:	or     r8,0xffffffffffffffff
   140006dd8:	sub    eax,ebx
   140006dda:	movsxd rdx,eax
   140006ddd:	movsxd rax,ebx
   140006de0:	add    rcx,rax
   140006de3:	call   0x14000aed4
   140006de8:	mov    ecx,ebp
   140006dea:	mov    edx,esi
   140006dec:	test   eax,eax
   140006dee:	cmovg  ecx,eax
   140006df1:	add    ebx,ecx
   140006df3:	lea    rcx,[rsp+0x30]
   140006df8:	movsxd rax,ebx
   140006dfb:	sub    edx,ebx
   140006dfd:	add    rcx,rax
   140006e00:	call   0x140006b00
   140006e05:	add    ebx,eax
   140006e07:	call   QWORD PTR [rip+0x2e2fb]        # 0x140035108
   140006e0d:	mov    ecx,esi
   140006e0f:	sub    ecx,ebx
   140006e11:	lea    r9,[rsp+0x30]
   140006e16:	or     r8,0xffffffffffffffff
   140006e1a:	movsxd rdx,ecx
   140006e1d:	movsxd rcx,ebx
   140006e20:	mov    DWORD PTR [rsp+0x20],eax
   140006e24:	add    rcx,r9
   140006e27:	lea    r9,[rip+0x30d96]        # 0x140037bc4
   140006e2e:	call   0x14000aed4
   140006e33:	mov    edx,esi
   140006e35:	lea    rcx,[rsp+0x30]
   140006e3a:	test   eax,eax
   140006e3c:	mov    r8,r15
   140006e3f:	cmovg  ebp,eax
   140006e42:	add    ebx,ebp
   140006e44:	movsxd rax,ebx
   140006e47:	sub    edx,ebx
   140006e49:	add    rcx,rax
   140006e4c:	call   0x1400069d0
   140006e51:	mov    rbp,QWORD PTR [rsp+0x450]
   140006e59:	add    ebx,eax
   140006e5b:	test   ebx,ebx
   140006e5d:	jle    0x140006e87
   140006e5f:	mov    eax,esi
   140006e61:	lea    rcx,[rsp+0x30]
   140006e66:	lea    r9,[rip+0x30d67]        # 0x140037bd4
   140006e6d:	sub    eax,ebx
   140006e6f:	or     r8,0xffffffffffffffff
   140006e73:	movsxd rdx,eax
   140006e76:	movsxd rax,ebx
   140006e79:	add    rcx,rax
   140006e7c:	call   0x14000aed4
   140006e81:	test   eax,eax
   140006e83:	jle    0x140006e87
   140006e85:	add    ebx,eax
   140006e87:	mov    r9,QWORD PTR [rsp+0x4a0]
   140006e8f:	mov    eax,esi
   140006e91:	lea    rcx,[rsp+0x30]
   140006e96:	sub    eax,ebx
   140006e98:	or     r8,0xffffffffffffffff
   140006e9c:	mov    QWORD PTR [rsp+0x20],r12
   140006ea1:	movsxd rdx,eax
   140006ea4:	movsxd rax,ebx
   140006ea7:	add    rcx,rax
   140006eaa:	call   0x140008c70
   140006eaf:	mov    r12,QWORD PTR [rsp+0x440]
   140006eb7:	test   eax,eax
   140006eb9:	jle    0x140006ebd
   140006ebb:	add    ebx,eax
   140006ebd:	movsxd rax,ebx
   140006ec0:	lea    rcx,[rsp+0x30]
   140006ec5:	sub    esi,ebx
   140006ec7:	lea    r9,[rip+0x2ec42]        # 0x140035b10
   140006ece:	or     r8,0xffffffffffffffff
   140006ed2:	add    rcx,rax
   140006ed5:	movsxd rdx,esi
   140006ed8:	call   0x14000aed4
   140006edd:	mov    rax,QWORD PTR [r14]
   140006ee0:	lea    rdx,[rsp+0x30]
   140006ee5:	mov    rcx,r14
   140006ee8:	call   QWORD PTR [rax]
   140006eea:	mov    rsi,QWORD PTR [rsp+0x448]
   140006ef2:	mov    rbx,QWORD PTR [rsp+0x458]
   140006efa:	mov    rcx,QWORD PTR [rsp+0x430]
   140006f02:	xor    rcx,rsp
   140006f05:	call   0x1400097d0
   140006f0a:	add    rsp,0x460
   140006f11:	pop    r15
   140006f13:	pop    r14
   140006f15:	pop    rdi
   140006f16:	ret    
   140006f17:	int3   
   140006f18:	int3   
   140006f19:	int3   
   140006f1a:	int3   
   140006f1b:	int3   
   140006f1c:	int3   
   140006f1d:	int3   
   140006f1e:	int3   
   140006f1f:	int3   
   140006f20:	sub    rsp,0x28
   140006f24:	mov    rcx,rdx
   140006f27:	call   0x14000795c
   140006f2c:	call   0x14000a918
   140006f31:	lea    rcx,[rax+0x30]
   140006f35:	add    rsp,0x28
   140006f39:	jmp    0x14000abe4
   140006f3e:	int3   
   140006f3f:	int3   
   140006f40:	mov    rcx,rdx
   140006f43:	rex.W jmp QWORD PTR [rip+0x2e1b6]        # 0x140035100
   140006f4a:	int3   
   140006f4b:	int3   
   140006f4c:	int3   
   140006f4d:	int3   
   140006f4e:	int3   
   140006f4f:	int3   
   140006f50:	rex push rbx
   140006f52:	sub    rsp,0x20
   140006f56:	mov    rax,rdx
   140006f59:	mov    rdx,QWORD PTR [rcx+0x10]
   140006f5d:	mov    rbx,rcx
   140006f60:	mov    rcx,rax
   140006f63:	call   0x14000ad10
   140006f68:	mov    rcx,QWORD PTR [rbx+0x10]
   140006f6c:	add    rsp,0x20
   140006f70:	pop    rbx
   140006f71:	jmp    0x14000abe4
   140006f76:	int3   
   140006f77:	int3   
   140006f78:	int3   
   140006f79:	int3   
   140006f7a:	int3   
   140006f7b:	int3   
   140006f7c:	int3   
   140006f7d:	int3   
   140006f7e:	int3   
   140006f7f:	int3   
   140006f80:	ret    0x0
   140006f83:	int3   
   140006f84:	int3   
   140006f85:	int3   
   140006f86:	int3   
   140006f87:	int3   
   140006f88:	int3   
   140006f89:	int3   
   140006f8a:	int3   
   140006f8b:	int3   
   140006f8c:	int3   
   140006f8d:	int3   
   140006f8e:	int3   
   140006f8f:	int3   
   140006f90:	rex push rbx
   140006f92:	sub    rsp,0x20
   140006f96:	cmp    WORD PTR [rdx],0x0
   140006f9a:	mov    eax,DWORD PTR [rip+0x40940]        # 0x1400478e0
   140006fa0:	mov    rbx,rdx
   140006fa3:	jne    0x140007029
   140006fa9:	test   cl,cl
   140006fab:	je     0x140006feb
   140006fad:	test   al,0x1
   140006faf:	jne    0x140006fde
   140006fb1:	or     eax,0x1
   140006fb4:	lea    rcx,[rip+0x2d705]        # 0x1400346c0
   140006fbb:	mov    DWORD PTR [rip+0x40913],0x1        # 0x1400478d8
   140006fc5:	mov    DWORD PTR [rip+0x40915],eax        # 0x1400478e0
   140006fcb:	lea    rax,[rip+0x30c3e]        # 0x140037c10
   140006fd2:	mov    QWORD PTR [rip+0x408f7],rax        # 0x1400478d0
   140006fd9:	call   0x140007fd8
   140006fde:	lea    rax,[rip+0x408eb]        # 0x1400478d0
   140006fe5:	add    rsp,0x20
   140006fe9:	pop    rbx
   140006fea:	ret    
   140006feb:	test   al,0x2
   140006fed:	jne    0x14000701c
   140006fef:	or     eax,0x2
   140006ff2:	lea    rcx,[rip+0x2d6b7]        # 0x1400346b0
   140006ff9:	mov    DWORD PTR [rip+0x408ed],0x1        # 0x1400478f0
   140007003:	mov    DWORD PTR [rip+0x408d7],eax        # 0x1400478e0
   140007009:	lea    rax,[rip+0x30be8]        # 0x140037bf8
   140007010:	mov    QWORD PTR [rip+0x408d1],rax        # 0x1400478e8
   140007017:	call   0x140007fd8
   14000701c:	lea    rax,[rip+0x408c5]        # 0x1400478e8
   140007023:	add    rsp,0x20
   140007027:	pop    rbx
   140007028:	ret    
   140007029:	test   al,0x4
   14000702b:	jne    0x140007065
   14000702d:	or     eax,0x4
   140007030:	lea    rcx,[rip+0x2d699]        # 0x1400346d0
   140007037:	mov    DWORD PTR [rip+0x408bf],0x1        # 0x140047900
   140007041:	mov    DWORD PTR [rip+0x40899],eax        # 0x1400478e0
   140007047:	lea    rax,[rip+0x30bda]        # 0x140037c28
   14000704e:	mov    QWORD PTR [rip+0x408af],0x0        # 0x140047908
   140007059:	mov    QWORD PTR [rip+0x40898],rax        # 0x1400478f8
   140007060:	call   0x140007fd8
   140007065:	lea    rcx,[rip+0x4088c]        # 0x1400478f8
   14000706c:	mov    rdx,rbx
   14000706f:	call   0x140006bc0
   140007074:	test   al,al
   140007076:	je     0x140007085
   140007078:	lea    rax,[rip+0x40879]        # 0x1400478f8
   14000707f:	add    rsp,0x20
   140007083:	pop    rbx
   140007084:	ret    
   140007085:	mov    eax,DWORD PTR [rip+0x40855]        # 0x1400478e0
   14000708b:	test   al,0x8
   14000708d:	jne    0x1400070bc
   14000708f:	or     eax,0x8
   140007092:	lea    rcx,[rip+0x2d687]        # 0x140034720
   140007099:	mov    DWORD PTR [rip+0x40875],0x1        # 0x140047918
   1400070a3:	mov    DWORD PTR [rip+0x40837],eax        # 0x1400478e0
   1400070a9:	lea    rax,[rip+0x30b30]        # 0x140037be0
   1400070b0:	mov    QWORD PTR [rip+0x40859],rax        # 0x140047910
   1400070b7:	call   0x140007fd8
   1400070bc:	lea    rax,[rip+0x4084d]        # 0x140047910
   1400070c3:	add    rsp,0x20
   1400070c7:	pop    rbx
   1400070c8:	ret    
   1400070c9:	int3   
   1400070ca:	int3   
   1400070cb:	int3   
   1400070cc:	int3   
   1400070cd:	int3   
   1400070ce:	int3   
   1400070cf:	int3   
   1400070d0:	mov    QWORD PTR [rsp+0x18],r8
   1400070d5:	mov    QWORD PTR [rsp+0x20],r9
   1400070da:	sub    rsp,0x38
   1400070de:	lea    rax,[rsp+0x58]
   1400070e3:	xor    r9d,r9d
   1400070e6:	mov    QWORD PTR [rsp+0x20],rax
   1400070eb:	call   0x1400088a0
   1400070f0:	add    rsp,0x38
   1400070f4:	ret    
   1400070f5:	int3   
   1400070f6:	int3   
   1400070f7:	int3   
   1400070f8:	int3   
   1400070f9:	int3   
   1400070fa:	int3   
   1400070fb:	int3   
   1400070fc:	int3   
   1400070fd:	int3   
   1400070fe:	int3   
   1400070ff:	int3   
   140007100:	rex push rbx
   140007102:	sub    rsp,0x20
   140007106:	xor    eax,eax
   140007108:	mov    QWORD PTR [rcx],rdx
   14000710b:	mov    QWORD PTR [rcx+0x8],r8
   14000710f:	mov    rbx,rcx
   140007112:	mov    QWORD PTR [rcx+0x210],r9
   140007119:	mov    DWORD PTR [rcx+0x208],eax
   14000711f:	mov    QWORD PTR [rcx+0x218],rax
   140007126:	mov    QWORD PTR [rcx+0x220],rax
   14000712d:	add    rcx,0x10
   140007131:	xor    edx,edx
   140007133:	mov    r8d,0x1f8
   140007139:	call   0x140009800
   14000713e:	mov    rax,rbx
   140007141:	add    rsp,0x20
   140007145:	pop    rbx
   140007146:	ret    
   140007147:	int3   
   140007148:	int3   
   140007149:	int3   
   14000714a:	int3   
   14000714b:	int3   
   14000714c:	int3   
   14000714d:	int3   
   14000714e:	int3   
   14000714f:	int3   
   140007150:	mov    QWORD PTR [rsp+0x10],rbx
   140007155:	mov    QWORD PTR [rsp+0x18],rbp
   14000715a:	push   rsi
   14000715b:	sub    rsp,0x30
   14000715f:	mov    rsi,rcx
   140007162:	mov    rcx,QWORD PTR [rcx+0x220]
   140007169:	xor    ebp,ebp
   14000716b:	test   rcx,rcx
   14000716e:	je     0x14000717d
   140007170:	call   QWORD PTR [rip+0x2e07a]        # 0x1400351f0
   140007176:	mov    QWORD PTR [rsi+0x220],rbp
   14000717d:	cmp    QWORD PTR [rsi+0x218],rbp
   140007184:	je     0x1400071fc
   140007186:	mov    rcx,QWORD PTR [rsi+0x210]
   14000718d:	mov    r9d,0x3
   140007193:	lea    rax,[rip+0x30ad6]        # 0x140037c70
   14000719a:	lea    r8d,[r9+0x20]
   14000719e:	lea    rdx,[rip+0x30afb]        # 0x140037ca0
   1400071a5:	mov    QWORD PTR [rsp+0x20],rax
   1400071aa:	call   0x140006ce0
   1400071af:	mov    rcx,QWORD PTR [rsi+0x218]
   1400071b6:	or     edx,0xffffffff
   1400071b9:	call   QWORD PTR [rip+0x2e011]        # 0x1400351d0
   1400071bf:	mov    rcx,QWORD PTR [rsi+0x218]
   1400071c6:	call   QWORD PTR [rip+0x2e024]        # 0x1400351f0
   1400071cc:	mov    rcx,QWORD PTR [rsi+0x210]
   1400071d3:	mov    r9d,0x3
   1400071d9:	lea    rax,[rip+0x30b18]        # 0x140037cf8
   1400071e0:	lea    rdx,[rip+0x30ab9]        # 0x140037ca0
   1400071e7:	lea    r8d,[r9+0x24]
   1400071eb:	mov    QWORD PTR [rsi+0x218],rbp
   1400071f2:	mov    QWORD PTR [rsp+0x20],rax
   1400071f7:	call   0x140006ce0
   1400071fc:	mov    ebx,ebp
   1400071fe:	cmp    DWORD PTR [rsi+0x208],ebx
   140007204:	jbe    0x140007233
   140007206:	mov    QWORD PTR [rsp+0x40],rdi
   14000720b:	nop    DWORD PTR [rax+rax*1+0x0]
   140007210:	mov    eax,ebx
   140007212:	lea    rdi,[rsi+rax*8]
   140007216:	mov    rcx,QWORD PTR [rdi+0x10]
   14000721a:	call   QWORD PTR [rip+0x2df00]        # 0x140035120
   140007220:	inc    ebx
   140007222:	mov    QWORD PTR [rdi+0x10],rbp
   140007226:	cmp    ebx,DWORD PTR [rsi+0x208]
   14000722c:	jb     0x140007210
   14000722e:	mov    rdi,QWORD PTR [rsp+0x40]
   140007233:	mov    rbx,QWORD PTR [rsp+0x48]
   140007238:	mov    rbp,QWORD PTR [rsp+0x50]
   14000723d:	add    rsp,0x30
   140007241:	pop    rsi
   140007242:	ret    
   140007243:	int3   
   140007244:	int3   
   140007245:	int3   
   140007246:	int3   
   140007247:	int3   
   140007248:	int3   
   140007249:	int3   
   14000724a:	int3   
   14000724b:	int3   
   14000724c:	int3   
   14000724d:	int3   
   14000724e:	int3   
   14000724f:	int3   
   140007250:	mov    QWORD PTR [rsp+0x8],rbx
   140007255:	push   rdi
   140007256:	sub    rsp,0x40
   14000725a:	cmp    QWORD PTR [rcx+0x218],0x0
   140007262:	mov    rdi,rdx
   140007265:	mov    rbx,rcx
   140007268:	je     0x1400072a0
   14000726a:	mov    rcx,QWORD PTR [rcx+0x210]
   140007271:	mov    r9d,0x1
   140007277:	lea    rax,[rip+0x30a9a]        # 0x140037d18
   14000727e:	lea    r8d,[r9+0x34]
   140007282:	lea    rdx,[rip+0x30a17]        # 0x140037ca0
   140007289:	mov    QWORD PTR [rsp+0x20],rax
   14000728e:	call   0x140006ce0
   140007293:	xor    al,al
   140007295:	mov    rbx,QWORD PTR [rsp+0x50]
   14000729a:	add    rsp,0x40
   14000729e:	pop    rdi
   14000729f:	ret    
   1400072a0:	cmp    DWORD PTR [rcx+0x208],0x3f
   1400072a7:	mov    rcx,QWORD PTR [rcx+0x210]
   1400072ae:	jb     0x1400072e7
   1400072b0:	mov    r9d,0x1
   1400072b6:	lea    rax,[rip+0x30a83]        # 0x140037d40
   1400072bd:	lea    rdx,[rip+0x309dc]        # 0x140037ca0
   1400072c4:	lea    r8d,[r9+0x3a]
   1400072c8:	mov    DWORD PTR [rsp+0x28],0x3f
   1400072d0:	mov    QWORD PTR [rsp+0x20],rax
   1400072d5:	call   0x140006ce0
   1400072da:	xor    al,al
   1400072dc:	mov    rbx,QWORD PTR [rsp+0x50]
   1400072e1:	add    rsp,0x40
   1400072e5:	pop    rdi
   1400072e6:	ret    
   1400072e7:	mov    QWORD PTR [rsp+0x28],rdx
   1400072ec:	mov    r9d,0x3
   1400072f2:	lea    rax,[rip+0x30a7f]        # 0x140037d78
   1400072f9:	lea    r8d,[r9+0x3c]
   1400072fd:	lea    rdx,[rip+0x3099c]        # 0x140037ca0
   140007304:	mov    QWORD PTR [rsp+0x20],rax
   140007309:	call   0x140006ce0
   14000730e:	mov    edx,0x1
   140007313:	mov    rcx,rdi
   140007316:	lea    r8d,[rdx+0x12]
   14000731a:	call   QWORD PTR [rip+0x2de08]        # 0x140035128
   140007320:	mov    rcx,rax
   140007323:	cmp    rax,0xffffffffffffffff
   140007327:	jne    0x14000736e
   140007329:	call   QWORD PTR [rip+0x2deb9]        # 0x1400351e8
   14000732f:	mov    rcx,QWORD PTR [rbx+0x210]
   140007336:	mov    r9d,0x1
   14000733c:	mov    DWORD PTR [rsp+0x30],eax
   140007340:	lea    rax,[rip+0x30a49]        # 0x140037d90
   140007347:	lea    r8d,[r9+0x45]
   14000734b:	lea    rdx,[rip+0x3094e]        # 0x140037ca0
   140007352:	mov    QWORD PTR [rsp+0x28],rdi
   140007357:	mov    QWORD PTR [rsp+0x20],rax
   14000735c:	call   0x140006ce0
   140007361:	xor    al,al
   140007363:	mov    rbx,QWORD PTR [rsp+0x50]
   140007368:	add    rsp,0x40
   14000736c:	pop    rdi
   14000736d:	ret    
   14000736e:	mov    eax,DWORD PTR [rbx+0x208]
   140007374:	mov    r9d,0x4
   14000737a:	lea    rdx,[rip+0x3091f]        # 0x140037ca0
   140007381:	mov    QWORD PTR [rbx+rax*8+0x10],rcx
   140007386:	inc    DWORD PTR [rbx+0x208]
   14000738c:	mov    eax,DWORD PTR [rbx+0x208]
   140007392:	mov    rcx,QWORD PTR [rbx+0x210]
   140007399:	mov    DWORD PTR [rsp+0x28],eax
   14000739d:	lea    rax,[rip+0x30a2c]        # 0x140037dd0
   1400073a4:	lea    r8d,[r9+0x47]
   1400073a8:	mov    QWORD PTR [rsp+0x20],rax
   1400073ad:	call   0x140006ce0
   1400073b2:	mov    rbx,QWORD PTR [rsp+0x50]
   1400073b7:	mov    al,0x1
   1400073b9:	add    rsp,0x40
   1400073bd:	pop    rdi
   1400073be:	ret    
   1400073bf:	int3   
   1400073c0:	rex push rbx
   1400073c2:	sub    rsp,0x30
   1400073c6:	cmp    DWORD PTR [rcx+0x208],0x0
   1400073cd:	mov    rbx,rcx
   1400073d0:	jne    0x140007405
   1400073d2:	lea    rax,[rip+0x30a27]        # 0x140037e00
   1400073d9:	mov    r8d,0x54
   1400073df:	mov    rcx,QWORD PTR [rcx+0x210]
   1400073e6:	lea    rdx,[rip+0x308b3]        # 0x140037ca0
   1400073ed:	mov    r9d,0x1
   1400073f3:	mov    QWORD PTR [rsp+0x20],rax
   1400073f8:	call   0x140006ce0
   1400073fd:	xor    al,al
   1400073ff:	add    rsp,0x30
   140007403:	pop    rbx
   140007404:	ret    
   140007405:	cmp    QWORD PTR [rcx+0x220],0x0
   14000740d:	je     0x14000741e
   14000740f:	lea    rax,[rip+0x30a1a]        # 0x140037e30
   140007416:	mov    r8d,0x5a
   14000741c:	jmp    0x1400073df
   14000741e:	xor    r9d,r9d
   140007421:	xor    r8d,r8d
   140007424:	xor    edx,edx
   140007426:	xor    ecx,ecx
   140007428:	call   QWORD PTR [rip+0x2dd9a]        # 0x1400351c8
   14000742e:	mov    QWORD PTR [rbx+0x220],rax
   140007435:	test   rax,rax
   140007438:	jne    0x140007450
   14000743a:	mov    rcx,QWORD PTR [rbx+0x210]
   140007441:	lea    rax,[rip+0x30a10]        # 0x140037e58
   140007448:	mov    r8d,0x61
   14000744e:	jmp    0x1400073e6
   140007450:	xor    eax,eax
   140007452:	lea    r8,[rip+0x237]        # 0x140007690
   140007459:	mov    r9,rbx
   14000745c:	mov    QWORD PTR [rsp+0x28],rax
   140007461:	xor    edx,edx
   140007463:	xor    ecx,ecx
   140007465:	mov    DWORD PTR [rsp+0x20],eax
   140007469:	call   QWORD PTR [rip+0x2dc81]        # 0x1400350f0
   14000746f:	mov    QWORD PTR [rbx+0x218],rax
   140007476:	test   rax,rax
   140007479:	jne    0x140007494
   14000747b:	mov    rcx,QWORD PTR [rbx+0x210]
   140007482:	lea    rax,[rip+0x30a07]        # 0x140037e90
   140007489:	mov    r8d,0x68
   14000748f:	jmp    0x1400073e6
   140007494:	mov    rcx,QWORD PTR [rbx+0x220]
   14000749b:	mov    edx,0x2710
   1400074a0:	call   QWORD PTR [rip+0x2dd2a]        # 0x1400351d0
   1400074a6:	mov    rcx,QWORD PTR [rbx+0x210]
   1400074ad:	lea    rdx,[rip+0x307ec]        # 0x140037ca0
   1400074b4:	test   eax,eax
   1400074b6:	je     0x1400074ca
   1400074b8:	lea    rax,[rip+0x30a01]        # 0x140037ec0
   1400074bf:	mov    r8d,0x6e
   1400074c5:	jmp    0x1400073ed
   1400074ca:	mov    r9d,0x4
   1400074d0:	lea    rax,[rip+0x30a19]        # 0x140037ef0
   1400074d7:	lea    r8d,[r9+0x6e]
   1400074db:	mov    QWORD PTR [rsp+0x20],rax
   1400074e0:	call   0x140006ce0
   1400074e5:	mov    al,0x1
   1400074e7:	add    rsp,0x30
   1400074eb:	pop    rbx
   1400074ec:	ret    
   1400074ed:	int3   
   1400074ee:	int3   
   1400074ef:	int3   
   1400074f0:	rex push rbx
   1400074f2:	sub    rsp,0x240
   1400074f9:	mov    rax,QWORD PTR [rip+0x3dd70]        # 0x140045270
   140007500:	xor    rax,rsp
   140007503:	mov    QWORD PTR [rsp+0x230],rax
   14000750b:	mov    r9d,0x4
   140007511:	mov    rbx,rcx
   140007514:	mov    rcx,QWORD PTR [rcx+0x210]
   14000751b:	lea    rax,[rip+0x309f6]        # 0x140037f18
   140007522:	lea    rdx,[rip+0x30777]        # 0x140037ca0
   140007529:	lea    r8d,[r9+0x7a]
   14000752d:	mov    QWORD PTR [rsp+0x20],rax
   140007532:	call   0x140006ce0
   140007537:	cmp    QWORD PTR [rbx],0x0
   14000753b:	jne    0x140007572
   14000753d:	lea    rax,[rip+0x30a04]        # 0x140037f48
   140007544:	mov    r8d,0x82
   14000754a:	mov    rcx,QWORD PTR [rbx+0x210]
   140007551:	lea    rdx,[rip+0x30748]        # 0x140037ca0
   140007558:	mov    r9d,0x1
   14000755e:	mov    QWORD PTR [rsp+0x20],rax
   140007563:	call   0x140006ce0
   140007568:	mov    eax,0x1
   14000756d:	jmp    0x14000766d
   140007572:	mov    rcx,QWORD PTR [rbx+0x220]
   140007579:	test   rcx,rcx
   14000757c:	jne    0x14000758d
   14000757e:	lea    rax,[rip+0x309fb]        # 0x140037f80
   140007585:	mov    r8d,0x88
   14000758b:	jmp    0x14000754a
   14000758d:	mov    QWORD PTR [rsp+0x258],rdi
   140007595:	call   QWORD PTR [rip+0x2dc45]        # 0x1400351e0
   14000759b:	mov    edi,DWORD PTR [rbx+0x208]
   1400075a1:	mov    rax,QWORD PTR [rbx]
   1400075a4:	mov    QWORD PTR [rsp+0x30],rax
   1400075a9:	test   edi,edi
   1400075ab:	je     0x1400075d0
   1400075ad:	mov    r8d,edi
   1400075b0:	lea    rdx,[rbx+0x10]
   1400075b4:	lea    rcx,[rsp+0x38]
   1400075b9:	shl    r8,0x3
   1400075bd:	call   0x14000b1c0
   1400075c2:	nop    DWORD PTR [rax+0x0]
   1400075c6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400075d0:	lea    rdx,[rsp+0x30]
   1400075d5:	lea    ecx,[rdi+0x1]
   1400075d8:	or     r9d,0xffffffff
   1400075dc:	xor    r8d,r8d
   1400075df:	call   QWORD PTR [rip+0x2da9b]        # 0x140035080
   1400075e5:	cmp    eax,0x1
   1400075e8:	jb     0x140007621
   1400075ea:	nop    WORD PTR [rax+rax*1+0x0]
   1400075f0:	cmp    eax,DWORD PTR [rbx+0x208]
   1400075f6:	ja     0x140007621
   1400075f8:	mov    ecx,eax
   1400075fa:	mov    rcx,QWORD PTR [rsp+rcx*8+0x30]
   1400075ff:	call   QWORD PTR [rip+0x2db2b]        # 0x140035130
   140007605:	lea    rdx,[rsp+0x30]
   14000760a:	lea    ecx,[rdi+0x1]
   14000760d:	mov    r9d,0x1f4
   140007613:	xor    r8d,r8d
   140007616:	call   QWORD PTR [rip+0x2da64]        # 0x140035080
   14000761c:	cmp    eax,0x1
   14000761f:	jae    0x1400075f0
   140007621:	cmp    eax,0x102
   140007626:	jne    0x140007634
   140007628:	mov    rcx,QWORD PTR [rbx+0x8]
   14000762c:	call   QWORD PTR [rip+0x2dbae]        # 0x1400351e0
   140007632:	jmp    0x1400075d0
   140007634:	test   eax,eax
   140007636:	jne    0x1400075d0
   140007638:	mov    rcx,QWORD PTR [rbx+0x210]
   14000763f:	lea    rax,[rip+0x3096a]        # 0x140037fb0
   140007646:	lea    rdx,[rip+0x30653]        # 0x140037ca0
   14000764d:	mov    r9d,0x3
   140007653:	mov    r8d,0xa8
   140007659:	mov    QWORD PTR [rsp+0x20],rax
   14000765e:	call   0x140006ce0
   140007663:	mov    rdi,QWORD PTR [rsp+0x258]
   14000766b:	xor    eax,eax
   14000766d:	mov    rcx,QWORD PTR [rsp+0x230]
   140007675:	xor    rcx,rsp
   140007678:	call   0x1400097d0
   14000767d:	add    rsp,0x240
   140007684:	pop    rbx
   140007685:	ret    
   140007686:	int3   
   140007687:	int3   
   140007688:	int3   
   140007689:	int3   
   14000768a:	int3   
   14000768b:	int3   
   14000768c:	int3   
   14000768d:	int3   
   14000768e:	int3   
   14000768f:	int3   
   140007690:	jmp    0x1400074f0
   140007695:	int3   
   140007696:	jmp    QWORD PTR [rip+0x2db7c]        # 0x140035218
   14000769c:	jmp    QWORD PTR [rip+0x2db66]        # 0x140035208
   1400076a2:	jmp    QWORD PTR [rip+0x2db58]        # 0x140035200
   1400076a8:	jmp    QWORD PTR [rip+0x2db4a]        # 0x1400351f8
   1400076ae:	jmp    QWORD PTR [rip+0x2db3c]        # 0x1400351f0
   1400076b4:	jmp    QWORD PTR [rip+0x2db2e]        # 0x1400351e8
   1400076ba:	jmp    QWORD PTR [rip+0x2db20]        # 0x1400351e0
   1400076c0:	jmp    QWORD PTR [rip+0x2db12]        # 0x1400351d8
   1400076c6:	jmp    QWORD PTR [rip+0x2db04]        # 0x1400351d0
   1400076cc:	jmp    QWORD PTR [rip+0x2daf6]        # 0x1400351c8
   1400076d2:	jmp    QWORD PTR [rip+0x2dae8]        # 0x1400351c0
   1400076d8:	jmp    QWORD PTR [rip+0x2dada]        # 0x1400351b8
   1400076de:	jmp    QWORD PTR [rip+0x2dacc]        # 0x1400351b0
   1400076e4:	jmp    QWORD PTR [rip+0x2da26]        # 0x140035110
   1400076ea:	jmp    QWORD PTR [rip+0x2d980]        # 0x140035070
   1400076f0:	jmp    QWORD PTR [rip+0x2d982]        # 0x140035078
   1400076f6:	jmp    QWORD PTR [rip+0x2d984]        # 0x140035080
   1400076fc:	jmp    QWORD PTR [rip+0x2d986]        # 0x140035088
   140007702:	jmp    QWORD PTR [rip+0x2d988]        # 0x140035090
   140007708:	jmp    QWORD PTR [rip+0x2d98a]        # 0x140035098
   14000770e:	jmp    QWORD PTR [rip+0x2d98c]        # 0x1400350a0
   140007714:	jmp    QWORD PTR [rip+0x2d98e]        # 0x1400350a8
   14000771a:	jmp    QWORD PTR [rip+0x2d990]        # 0x1400350b0
   140007720:	jmp    QWORD PTR [rip+0x2d992]        # 0x1400350b8
   140007726:	jmp    QWORD PTR [rip+0x2d994]        # 0x1400350c0
   14000772c:	jmp    QWORD PTR [rip+0x2d996]        # 0x1400350c8
   140007732:	jmp    QWORD PTR [rip+0x2d998]        # 0x1400350d0
   140007738:	jmp    QWORD PTR [rip+0x2d99a]        # 0x1400350d8
   14000773e:	jmp    QWORD PTR [rip+0x2d99c]        # 0x1400350e0
   140007744:	jmp    QWORD PTR [rip+0x2d99e]        # 0x1400350e8
   14000774a:	jmp    QWORD PTR [rip+0x2d9a0]        # 0x1400350f0
   140007750:	jmp    QWORD PTR [rip+0x2d9a2]        # 0x1400350f8
   140007756:	jmp    QWORD PTR [rip+0x2d9a4]        # 0x140035100
   14000775c:	jmp    QWORD PTR [rip+0x2d9a6]        # 0x140035108
   140007762:	jmp    QWORD PTR [rip+0x2daa8]        # 0x140035210
   140007768:	jmp    QWORD PTR [rip+0x2d9aa]        # 0x140035118
   14000776e:	jmp    QWORD PTR [rip+0x2d9ac]        # 0x140035120
   140007774:	jmp    QWORD PTR [rip+0x2d9ae]        # 0x140035128
   14000777a:	jmp    QWORD PTR [rip+0x2d9b0]        # 0x140035130
   140007780:	jmp    QWORD PTR [rip+0x2dcca]        # 0x140035450
   140007786:	jmp    QWORD PTR [rip+0x2dcbc]        # 0x140035448
   14000778c:	jmp    QWORD PTR [rip+0x2dcae]        # 0x140035440
   140007792:	jmp    QWORD PTR [rip+0x2dca0]        # 0x140035438
   140007798:	jmp    QWORD PTR [rip+0x2dc92]        # 0x140035430
   14000779e:	jmp    QWORD PTR [rip+0x2dc84]        # 0x140035428
   1400077a4:	jmp    QWORD PTR [rip+0x2dcae]        # 0x140035458
   1400077aa:	jmp    QWORD PTR [rip+0x2dc70]        # 0x140035420
   1400077b0:	jmp    QWORD PTR [rip+0x2dc62]        # 0x140035418
   1400077b6:	jmp    QWORD PTR [rip+0x2dc54]        # 0x140035410
   1400077bc:	jmp    QWORD PTR [rip+0x2dc46]        # 0x140035408
   1400077c2:	jmp    QWORD PTR [rip+0x2dc38]        # 0x140035400
   1400077c8:	jmp    QWORD PTR [rip+0x2dc22]        # 0x1400353f0
   1400077ce:	jmp    QWORD PTR [rip+0x2d884]        # 0x140035058
   1400077d4:	jmp    QWORD PTR [rip+0x2d876]        # 0x140035050
   1400077da:	jmp    QWORD PTR [rip+0x2d868]        # 0x140035048
   1400077e0:	jmp    QWORD PTR [rip+0x2d85a]        # 0x140035040
   1400077e6:	jmp    QWORD PTR [rip+0x2d84c]        # 0x140035038
   1400077ec:	jmp    QWORD PTR [rip+0x2d83e]        # 0x140035030
   1400077f2:	jmp    QWORD PTR [rip+0x2d830]        # 0x140035028
   1400077f8:	jmp    QWORD PTR [rip+0x2d822]        # 0x140035020
   1400077fe:	jmp    QWORD PTR [rip+0x2d814]        # 0x140035018
   140007804:	jmp    QWORD PTR [rip+0x2d806]        # 0x140035010
   14000780a:	jmp    QWORD PTR [rip+0x2d7f8]        # 0x140035008
   140007810:	jmp    QWORD PTR [rip+0x2d7ea]        # 0x140035000
   140007816:	jmp    QWORD PTR [rip+0x2d844]        # 0x140035060
   14000781c:	rex push rbx
   14000781e:	sub    rsp,0x20
   140007822:	xor    r10d,r10d
   140007825:	test   rcx,rcx
   140007828:	je     0x140007838
   14000782a:	test   rdx,rdx
   14000782d:	je     0x140007838
   14000782f:	test   r8,r8
   140007832:	jne    0x140007851
   140007834:	mov    WORD PTR [rcx],r10w
   140007838:	call   0x14000b9f0
   14000783d:	mov    ebx,0x16
   140007842:	mov    DWORD PTR [rax],ebx
   140007844:	call   0x14000b8b8
   140007849:	mov    eax,ebx
   14000784b:	add    rsp,0x20
   14000784f:	pop    rbx
   140007850:	ret    
   140007851:	mov    r9,rcx
   140007854:	sub    r9,r8
   140007857:	movzx  eax,WORD PTR [r8]
   14000785b:	mov    WORD PTR [r9+r8*1],ax
   140007860:	lea    r8,[r8+0x2]
   140007864:	test   ax,ax
   140007867:	je     0x14000786e
   140007869:	dec    rdx
   14000786c:	jne    0x140007857
   14000786e:	test   rdx,rdx
   140007871:	jne    0x140007883
   140007873:	mov    WORD PTR [rcx],r10w
   140007877:	call   0x14000b9f0
   14000787c:	mov    ebx,0x22
   140007881:	jmp    0x140007842
   140007883:	xor    eax,eax
   140007885:	jmp    0x14000784b
   140007887:	int3   
   140007888:	mov    rcx,QWORD PTR [rip+0x3d9e1]        # 0x140045270
   14000788f:	xor    eax,eax
   140007891:	or     rcx,0x1
   140007895:	cmp    QWORD PTR [rip+0x40084],rcx        # 0x140047920
   14000789c:	sete   al
   14000789f:	ret    
   1400078a0:	mov    rax,rsp
   1400078a3:	mov    QWORD PTR [rax+0x10],rdx
   1400078a7:	mov    QWORD PTR [rax+0x18],r8
   1400078ab:	mov    QWORD PTR [rax+0x20],r9
   1400078af:	sub    rsp,0x28
   1400078b3:	lea    r8,[rax+0x18]
   1400078b7:	call   0x14000bb50
   1400078bc:	add    rsp,0x28
   1400078c0:	ret    
   1400078c1:	int3   
   1400078c2:	int3   
   1400078c3:	int3   
   1400078c4:	mov    rax,rsp
   1400078c7:	mov    QWORD PTR [rax+0x8],rcx
   1400078cb:	mov    QWORD PTR [rax+0x10],rdx
   1400078cf:	mov    QWORD PTR [rax+0x18],r8
   1400078d3:	mov    QWORD PTR [rax+0x20],r9
   1400078d7:	sub    rsp,0x28
   1400078db:	lea    r8,[rax+0x10]
   1400078df:	xor    edx,edx
   1400078e1:	call   0x14000bb80
   1400078e6:	add    rsp,0x28
   1400078ea:	ret    
   1400078eb:	int3   
   1400078ec:	mov    rax,rsp
   1400078ef:	mov    QWORD PTR [rax+0x10],rdx
   1400078f3:	mov    QWORD PTR [rax+0x18],r8
   1400078f7:	mov    QWORD PTR [rax+0x20],r9
   1400078fb:	sub    rsp,0x28
   1400078ff:	lea    r8,[rax+0x18]
   140007903:	call   0x14000bb80
   140007908:	add    rsp,0x28
   14000790c:	ret    
   14000790d:	int3   
   14000790e:	int3   
   14000790f:	int3   
   140007910:	mov    rax,rsp
   140007913:	mov    QWORD PTR [rax+0x10],rdx
   140007917:	mov    QWORD PTR [rax+0x18],r8
   14000791b:	mov    QWORD PTR [rax+0x20],r9
   14000791f:	sub    rsp,0x28
   140007923:	lea    r8,[rax+0x18]
   140007927:	call   0x14000bb98
   14000792c:	add    rsp,0x28
   140007930:	ret    
   140007931:	int3   
   140007932:	int3   
   140007933:	int3   
   140007934:	mov    rdx,QWORD PTR [rip+0x3d935]        # 0x140045270
   14000793b:	xor    eax,eax
   14000793d:	or     rdx,0x1
   140007941:	cmp    QWORD PTR [rip+0x3ffd8],rdx        # 0x140047920
   140007948:	sete   al
   14000794b:	neg    ecx
   14000794d:	sbb    rcx,rcx
   140007950:	and    rcx,rdx
   140007953:	mov    QWORD PTR [rip+0x3ffc6],rcx        # 0x140047920
   14000795a:	ret    
   14000795b:	int3   
   14000795c:	mov    rax,rsp
   14000795f:	mov    QWORD PTR [rax+0x8],rcx
   140007963:	mov    QWORD PTR [rax+0x10],rdx
   140007967:	mov    QWORD PTR [rax+0x18],r8
   14000796b:	mov    QWORD PTR [rax+0x20],r9
   14000796f:	push   rbx
   140007970:	push   rdi
   140007971:	sub    rsp,0x28
   140007975:	xor    eax,eax
   140007977:	test   rcx,rcx
   14000797a:	setne  al
   14000797d:	test   eax,eax
   14000797f:	jne    0x140007996
   140007981:	call   0x14000b9f0
   140007986:	mov    DWORD PTR [rax],0x16
   14000798c:	call   0x14000b8b8
   140007991:	or     eax,0xffffffff
   140007994:	jmp    0x140007a00
   140007996:	lea    rdi,[rsp+0x48]
   14000799b:	call   0x14000a918
   1400079a0:	lea    rdx,[rax+0x30]
   1400079a4:	mov    ecx,0x1
   1400079a9:	call   0x14000a988
   1400079ae:	nop
   1400079af:	call   0x14000a918
   1400079b4:	lea    rcx,[rax+0x30]
   1400079b8:	call   0x14000bcc0
   1400079bd:	mov    ebx,eax
   1400079bf:	call   0x14000a918
   1400079c4:	lea    rcx,[rax+0x30]
   1400079c8:	mov    r9,rdi
   1400079cb:	xor    r8d,r8d
   1400079ce:	mov    rdx,QWORD PTR [rsp+0x40]
   1400079d3:	call   0x14000bd90
   1400079d8:	mov    edi,eax
   1400079da:	call   0x14000a918
   1400079df:	lea    rdx,[rax+0x30]
   1400079e3:	mov    ecx,ebx
   1400079e5:	call   0x14000bc88
   1400079ea:	nop
   1400079eb:	call   0x14000a918
   1400079f0:	lea    rdx,[rax+0x30]
   1400079f4:	mov    ecx,0x1
   1400079f9:	call   0x14000aa0c
   1400079fe:	mov    eax,edi
   140007a00:	add    rsp,0x28
   140007a04:	pop    rdi
   140007a05:	pop    rbx
   140007a06:	ret    
   140007a07:	int3   
   140007a08:	mov    rax,rsp
   140007a0b:	mov    QWORD PTR [rax+0x8],rcx
   140007a0f:	mov    QWORD PTR [rax+0x10],rdx
   140007a13:	mov    QWORD PTR [rax+0x18],r8
   140007a17:	mov    QWORD PTR [rax+0x20],r9
   140007a1b:	sub    rsp,0x28
   140007a1f:	lea    r8,[rax+0x10]
   140007a23:	xor    edx,edx
   140007a25:	call   0x14000bb98
   140007a2a:	add    rsp,0x28
   140007a2e:	ret    
   140007a2f:	int3   
   140007a30:	mov    r11,rsp
   140007a33:	mov    QWORD PTR [r11+0x18],r8
   140007a37:	mov    QWORD PTR [r11+0x20],r9
   140007a3b:	sub    rsp,0x38
   140007a3f:	mov    r9,r8
   140007a42:	mov    r8,rdx
   140007a45:	lea    rax,[r11+0x20]
   140007a49:	mov    rdx,rcx
   140007a4c:	lea    rcx,[rip+0x5239]        # 0x14000cc8c
   140007a53:	mov    QWORD PTR [r11-0x18],rax
   140007a57:	call   0x140007b08
   140007a5c:	add    rsp,0x38
   140007a60:	ret    
   140007a61:	int3   
   140007a62:	int3   
   140007a63:	int3   
   140007a64:	mov    r11,rsp
   140007a67:	mov    QWORD PTR [r11+0x18],r8
   140007a6b:	mov    QWORD PTR [r11+0x20],r9
   140007a6f:	sub    rsp,0x38
   140007a73:	mov    r9,r8
   140007a76:	mov    r8,rdx
   140007a79:	lea    rax,[r11+0x20]
   140007a7d:	mov    rdx,rcx
   140007a80:	lea    rcx,[rip+0x6535]        # 0x14000dfbc
   140007a87:	mov    QWORD PTR [r11-0x18],rax
   140007a8b:	call   0x140007b08
   140007a90:	add    rsp,0x38
   140007a94:	ret    
   140007a95:	int3   
   140007a96:	int3   
   140007a97:	int3   
   140007a98:	mov    r11,rsp
   140007a9b:	mov    QWORD PTR [r11+0x10],rdx
   140007a9f:	mov    QWORD PTR [r11+0x18],r8
   140007aa3:	mov    QWORD PTR [r11+0x20],r9
   140007aa7:	sub    rsp,0x38
   140007aab:	mov    r8,rdx
   140007aae:	lea    rax,[r11+0x18]
   140007ab2:	mov    rdx,rcx
   140007ab5:	lea    rcx,[rip+0x51d0]        # 0x14000cc8c
   140007abc:	xor    r9d,r9d
   140007abf:	mov    QWORD PTR [r11-0x18],rax
   140007ac3:	call   0x140007b08
   140007ac8:	add    rsp,0x38
   140007acc:	ret    
   140007acd:	int3   
   140007ace:	int3   
   140007acf:	int3   
   140007ad0:	mov    r11,rsp
   140007ad3:	mov    QWORD PTR [r11+0x10],rdx
   140007ad7:	mov    QWORD PTR [r11+0x18],r8
   140007adb:	mov    QWORD PTR [r11+0x20],r9
   140007adf:	sub    rsp,0x38
   140007ae3:	mov    r8,rdx
   140007ae6:	lea    rax,[r11+0x18]
   140007aea:	mov    rdx,rcx
   140007aed:	lea    rcx,[rip+0x64c8]        # 0x14000dfbc
   140007af4:	xor    r9d,r9d
   140007af7:	mov    QWORD PTR [r11-0x18],rax
   140007afb:	call   0x140007b08
   140007b00:	add    rsp,0x38
   140007b04:	ret    
   140007b05:	int3   
   140007b06:	int3   
   140007b07:	int3   
   140007b08:	mov    rax,rsp
   140007b0b:	mov    QWORD PTR [rax+0x8],rbx
   140007b0f:	mov    QWORD PTR [rax+0x10],rbp
   140007b13:	mov    QWORD PTR [rax+0x18],rsi
   140007b17:	push   rdi
   140007b18:	sub    rsp,0x50
   140007b1c:	and    QWORD PTR [rax-0x38],0x0
   140007b21:	mov    rbx,rdx
   140007b24:	xor    edx,edx
   140007b26:	mov    rdi,r8
   140007b29:	mov    rbp,rcx
   140007b2c:	lea    r8d,[rdx+0x28]
   140007b30:	lea    rcx,[rax-0x30]
   140007b34:	mov    rsi,r9
   140007b37:	call   0x140009800
   140007b3c:	test   rbx,rbx
   140007b3f:	jne    0x140007b56
   140007b41:	call   0x14000b9f0
   140007b46:	mov    DWORD PTR [rax],0x16
   140007b4c:	call   0x14000b8b8
   140007b51:	or     eax,0xffffffff
   140007b54:	jmp    0x140007ba2
   140007b56:	test   rdi,rdi
   140007b59:	je     0x140007b41
   140007b5b:	mov    rcx,rbx
   140007b5e:	call   0x14000cad8
   140007b63:	mov    DWORD PTR [rsp+0x38],0x49
   140007b6b:	mov    QWORD PTR [rsp+0x30],rbx
   140007b70:	mov    QWORD PTR [rsp+0x20],rbx
   140007b75:	cmp    rax,0x3fffffff
   140007b7b:	jbe    0x140007b87
   140007b7d:	mov    DWORD PTR [rsp+0x28],0x7fffffff
   140007b85:	jmp    0x140007b8d
   140007b87:	add    eax,eax
   140007b89:	mov    DWORD PTR [rsp+0x28],eax
   140007b8d:	mov    r9,QWORD PTR [rsp+0x80]
   140007b95:	lea    rcx,[rsp+0x20]
   140007b9a:	mov    r8,rsi
   140007b9d:	mov    rdx,rdi
   140007ba0:	call   rbp
   140007ba2:	mov    rbx,QWORD PTR [rsp+0x60]
   140007ba7:	mov    rbp,QWORD PTR [rsp+0x68]
   140007bac:	mov    rsi,QWORD PTR [rsp+0x70]
   140007bb1:	add    rsp,0x50
   140007bb5:	pop    rdi
   140007bb6:	ret    
   140007bb7:	int3   
   140007bb8:	sub    rsp,0x38
   140007bbc:	mov    QWORD PTR [rsp+0x20],r8
   140007bc1:	mov    r8,rdx
   140007bc4:	mov    rdx,rcx
   140007bc7:	lea    rcx,[rip+0x50be]        # 0x14000cc8c
   140007bce:	xor    r9d,r9d
   140007bd1:	call   0x140007b08
   140007bd6:	add    rsp,0x38
   140007bda:	ret    
   140007bdb:	int3   
   140007bdc:	sub    rsp,0x38
   140007be0:	mov    QWORD PTR [rsp+0x20],r8
   140007be5:	mov    r8,rdx
   140007be8:	mov    rdx,rcx
   140007beb:	lea    rcx,[rip+0x63ca]        # 0x14000dfbc
   140007bf2:	xor    r9d,r9d
   140007bf5:	call   0x140007b08
   140007bfa:	add    rsp,0x38
   140007bfe:	ret    
   140007bff:	int3   
   140007c00:	mov    rcx,QWORD PTR [rip+0x3fdb1]        # 0x1400479b8
   140007c07:	rex.W jmp QWORD PTR [rip+0x2d61a]        # 0x140035228
   140007c0e:	int3   
   140007c0f:	int3   
   140007c10:	sub    rsp,0x28
   140007c14:	mov    rcx,QWORD PTR [rip+0x3fd9d]        # 0x1400479b8
   140007c1b:	call   QWORD PTR [rip+0x2d607]        # 0x140035228
   140007c21:	test   rax,rax
   140007c24:	je     0x140007c28
   140007c26:	call   rax
   140007c28:	mov    edx,0x1
   140007c2d:	xor    ecx,ecx
   140007c2f:	call   0x14000f2c0
   140007c34:	call   0x14000f2dc
   140007c39:	int3   
   140007c3a:	int3   
   140007c3b:	int3   
   140007c3c:	mov    QWORD PTR [rsp+0x8],rbx
   140007c41:	push   rdi
   140007c42:	sub    rsp,0x20
   140007c46:	mov    rdi,rcx
   140007c49:	mov    rcx,QWORD PTR [rip+0x3fd68]        # 0x1400479b8
   140007c50:	call   QWORD PTR [rip+0x2d5d2]        # 0x140035228
   140007c56:	mov    rcx,rdi
   140007c59:	mov    rbx,rax
   140007c5c:	call   QWORD PTR [rip+0x2d5be]        # 0x140035220
   140007c62:	mov    QWORD PTR [rip+0x3fd4f],rax        # 0x1400479b8
   140007c69:	mov    rax,rbx
   140007c6c:	mov    rbx,QWORD PTR [rsp+0x30]
   140007c71:	add    rsp,0x20
   140007c75:	pop    rdi
   140007c76:	ret    
   140007c77:	int3   
   140007c78:	rex push rbx
   140007c7a:	sub    rsp,0x20
   140007c7e:	mov    rbx,rcx
   140007c81:	call   0x14000f794
   140007c86:	lea    rax,[rip+0x3035b]        # 0x140037fe8
   140007c8d:	mov    QWORD PTR [rbx],rax
   140007c90:	mov    rax,rbx
   140007c93:	add    rsp,0x20
   140007c97:	pop    rbx
   140007c98:	ret    
   140007c99:	int3   
   140007c9a:	int3   
   140007c9b:	int3   
   140007c9c:	rex push rbx
   140007c9e:	sub    rsp,0x20
   140007ca2:	lea    rax,[rip+0x3034f]        # 0x140037ff8
   140007ca9:	lea    rdx,[rsp+0x30]
   140007cae:	mov    r8d,0x1
   140007cb4:	mov    QWORD PTR [rsp+0x30],rax
   140007cb9:	mov    rbx,rcx
   140007cbc:	call   0x14000f778
   140007cc1:	lea    rax,[rip+0x30320]        # 0x140037fe8
   140007cc8:	mov    QWORD PTR [rbx],rax
   140007ccb:	mov    rax,rbx
   140007cce:	add    rsp,0x20
   140007cd2:	pop    rbx
   140007cd3:	ret    
   140007cd4:	lea    rax,[rip+0x3030d]        # 0x140037fe8
   140007cdb:	mov    QWORD PTR [rcx],rax
   140007cde:	jmp    0x14000f808
   140007ce3:	int3   
   140007ce4:	rex push rbx
   140007ce6:	sub    rsp,0x40
   140007cea:	mov    rbx,rcx
   140007ced:	jmp    0x140007cfe
   140007cef:	mov    rcx,rbx
   140007cf2:	call   0x14000fa4c
   140007cf7:	test   eax,eax
   140007cf9:	je     0x140007d0e
   140007cfb:	mov    rcx,rbx
   140007cfe:	call   0x14000f5a8
   140007d03:	test   rax,rax
   140007d06:	je     0x140007cef
   140007d08:	add    rsp,0x40
   140007d0c:	pop    rbx
   140007d0d:	ret    
   140007d0e:	lea    rax,[rip+0x302e3]        # 0x140037ff8
   140007d15:	lea    rdx,[rsp+0x58]
   140007d1a:	lea    rcx,[rsp+0x20]
   140007d1f:	mov    r8d,0x1
   140007d25:	mov    QWORD PTR [rsp+0x58],rax
   140007d2a:	call   0x14000f778
   140007d2f:	lea    rax,[rip+0x302b2]        # 0x140037fe8
   140007d36:	lea    rdx,[rip+0x3bba3]        # 0x1400438e0
   140007d3d:	lea    rcx,[rsp+0x20]
   140007d42:	mov    QWORD PTR [rsp+0x20],rax
   140007d47:	call   0x14000fa88
   140007d4c:	int3   
   140007d4d:	int3   
   140007d4e:	int3   
   140007d4f:	int3   
   140007d50:	mov    QWORD PTR [rsp+0x8],rbx
   140007d55:	push   rdi
   140007d56:	sub    rsp,0x20
   140007d5a:	lea    rax,[rip+0x30287]        # 0x140037fe8
   140007d61:	mov    ebx,edx
   140007d63:	mov    rdi,rcx
   140007d66:	mov    QWORD PTR [rcx],rax
   140007d69:	call   0x14000f808
   140007d6e:	test   bl,0x1
   140007d71:	je     0x140007d7b
   140007d73:	mov    rcx,rdi
   140007d76:	call   0x140007d8c
   140007d7b:	mov    rax,rdi
   140007d7e:	mov    rbx,QWORD PTR [rsp+0x30]
   140007d83:	add    rsp,0x20
   140007d87:	pop    rdi
   140007d88:	ret    
   140007d89:	int3   
   140007d8a:	int3   
   140007d8b:	int3   
   140007d8c:	jmp    0x14000fb50
   140007d91:	int3   
   140007d92:	int3   
   140007d93:	int3   
   140007d94:	rex push rbx
   140007d96:	sub    rsp,0x20
   140007d9a:	mov    edx,0x8
   140007d9f:	lea    ecx,[rdx+0x18]
   140007da2:	call   0x14000fbcc
   140007da7:	mov    rcx,rax
   140007daa:	mov    rbx,rax
   140007dad:	call   QWORD PTR [rip+0x2d46d]        # 0x140035220
   140007db3:	mov    QWORD PTR [rip+0x420fe],rax        # 0x140049eb8
   140007dba:	mov    QWORD PTR [rip+0x420ef],rax        # 0x140049eb0
   140007dc1:	test   rbx,rbx
   140007dc4:	jne    0x140007dcb
   140007dc6:	lea    eax,[rbx+0x18]
   140007dc9:	jmp    0x140007dd1
   140007dcb:	and    QWORD PTR [rbx],0x0
   140007dcf:	xor    eax,eax
   140007dd1:	add    rsp,0x20
   140007dd5:	pop    rbx
   140007dd6:	ret    
   140007dd7:	int3   
   140007dd8:	mov    QWORD PTR [rsp+0x8],rbx
   140007ddd:	mov    QWORD PTR [rsp+0x10],rsi
   140007de2:	mov    QWORD PTR [rsp+0x18],rdi
   140007de7:	push   r12
   140007de9:	push   r14
   140007deb:	push   r15
   140007ded:	sub    rsp,0x20
   140007df1:	mov    r12,rcx
   140007df4:	call   0x14000a1dc
   140007df9:	nop
   140007dfa:	mov    rcx,QWORD PTR [rip+0x420b7]        # 0x140049eb8
   140007e01:	call   QWORD PTR [rip+0x2d421]        # 0x140035228
   140007e07:	mov    r14,rax
   140007e0a:	mov    rcx,QWORD PTR [rip+0x4209f]        # 0x140049eb0
   140007e11:	call   QWORD PTR [rip+0x2d411]        # 0x140035228
   140007e17:	mov    rbx,rax
   140007e1a:	cmp    rax,r14
   140007e1d:	jb     0x140007ebe
   140007e23:	mov    rdi,rax
   140007e26:	sub    rdi,r14
   140007e29:	lea    r15,[rdi+0x8]
   140007e2d:	cmp    r15,0x8
   140007e31:	jb     0x140007ebe
   140007e37:	mov    rcx,r14
   140007e3a:	call   0x14000fb90
   140007e3f:	mov    rsi,rax
   140007e42:	cmp    rax,r15
   140007e45:	jae    0x140007e9c
   140007e47:	mov    edx,0x1000
   140007e4c:	cmp    rax,rdx
   140007e4f:	cmovb  rdx,rax
   140007e53:	add    rdx,rax
   140007e56:	cmp    rdx,rax
   140007e59:	jb     0x140007e6c
   140007e5b:	mov    rcx,r14
   140007e5e:	call   0x14000fcc8
   140007e63:	xor    ebx,ebx
   140007e65:	test   rax,rax
   140007e68:	jne    0x140007e84
   140007e6a:	jmp    0x140007e6e
   140007e6c:	xor    ebx,ebx
   140007e6e:	lea    rdx,[rsi+0x20]
   140007e72:	cmp    rdx,rsi
   140007e75:	jb     0x140007ec0
   140007e77:	mov    rcx,r14
   140007e7a:	call   0x14000fcc8
   140007e7f:	test   rax,rax
   140007e82:	je     0x140007ec0
   140007e84:	sar    rdi,0x3
   140007e88:	lea    rbx,[rax+rdi*8]
   140007e8c:	mov    rcx,rax
   140007e8f:	call   QWORD PTR [rip+0x2d38b]        # 0x140035220
   140007e95:	mov    QWORD PTR [rip+0x4201c],rax        # 0x140049eb8
   140007e9c:	mov    rcx,r12
   140007e9f:	call   QWORD PTR [rip+0x2d37b]        # 0x140035220
   140007ea5:	mov    QWORD PTR [rbx],rax
   140007ea8:	lea    rcx,[rbx+0x8]
   140007eac:	call   QWORD PTR [rip+0x2d36e]        # 0x140035220
   140007eb2:	mov    QWORD PTR [rip+0x41ff7],rax        # 0x140049eb0
   140007eb9:	mov    rbx,r12
   140007ebc:	jmp    0x140007ec0
   140007ebe:	xor    ebx,ebx
   140007ec0:	call   0x14000a1e8
   140007ec5:	mov    rax,rbx
   140007ec8:	mov    rbx,QWORD PTR [rsp+0x40]
   140007ecd:	mov    rsi,QWORD PTR [rsp+0x48]
   140007ed2:	mov    rdi,QWORD PTR [rsp+0x50]
   140007ed7:	add    rsp,0x20
   140007edb:	pop    r15
   140007edd:	pop    r14
   140007edf:	pop    r12
   140007ee1:	ret    
   140007ee2:	int3   
   140007ee3:	int3   
   140007ee4:	mov    QWORD PTR [rsp+0x8],rbx
   140007ee9:	mov    QWORD PTR [rsp+0x10],rbp
   140007eee:	mov    QWORD PTR [rsp+0x18],rsi
   140007ef3:	push   rdi
   140007ef4:	push   r14
   140007ef6:	push   r15
   140007ef8:	sub    rsp,0x20
   140007efc:	mov    r15,rcx
   140007eff:	mov    rcx,QWORD PTR [rip+0x41fb2]        # 0x140049eb8
   140007f06:	call   QWORD PTR [rip+0x2d31c]        # 0x140035228
   140007f0c:	mov    rcx,QWORD PTR [rip+0x41f9d]        # 0x140049eb0
   140007f13:	mov    rbp,rax
   140007f16:	call   QWORD PTR [rip+0x2d30c]        # 0x140035228
   140007f1c:	mov    rsi,rax
   140007f1f:	cmp    rax,rbp
   140007f22:	jb     0x140007fbd
   140007f28:	mov    rbx,rax
   140007f2b:	sub    rbx,rbp
   140007f2e:	lea    r14,[rbx+0x8]
   140007f32:	cmp    r14,0x8
   140007f36:	jb     0x140007fbd
   140007f3c:	mov    rcx,rbp
   140007f3f:	call   0x14000fb90
   140007f44:	mov    rdi,rax
   140007f47:	cmp    rax,r14
   140007f4a:	jae    0x140007f9b
   140007f4c:	mov    edx,0x1000
   140007f51:	cmp    rax,rdx
   140007f54:	cmovb  rdx,rax
   140007f58:	add    rdx,rax
   140007f5b:	cmp    rdx,rax
   140007f5e:	jb     0x140007f6d
   140007f60:	mov    rcx,rbp
   140007f63:	call   0x14000fcc8
   140007f68:	test   rax,rax
   140007f6b:	jne    0x140007f83
   140007f6d:	lea    rdx,[rdi+0x20]
   140007f71:	cmp    rdx,rdi
   140007f74:	jb     0x140007fbd
   140007f76:	mov    rcx,rbp
   140007f79:	call   0x14000fcc8
   140007f7e:	test   rax,rax
   140007f81:	je     0x140007fbd
   140007f83:	sar    rbx,0x3
   140007f87:	mov    rcx,rax
   140007f8a:	lea    rsi,[rax+rbx*8]
   140007f8e:	call   QWORD PTR [rip+0x2d28c]        # 0x140035220
   140007f94:	mov    QWORD PTR [rip+0x41f1d],rax        # 0x140049eb8
   140007f9b:	mov    rcx,r15
   140007f9e:	call   QWORD PTR [rip+0x2d27c]        # 0x140035220
   140007fa4:	lea    rcx,[rsi+0x8]
   140007fa8:	mov    QWORD PTR [rsi],rax
   140007fab:	call   QWORD PTR [rip+0x2d26f]        # 0x140035220
   140007fb1:	mov    QWORD PTR [rip+0x41ef8],rax        # 0x140049eb0
   140007fb8:	mov    rax,r15
   140007fbb:	jmp    0x140007fbf
   140007fbd:	xor    eax,eax
   140007fbf:	mov    rbx,QWORD PTR [rsp+0x40]
   140007fc4:	mov    rbp,QWORD PTR [rsp+0x48]
   140007fc9:	mov    rsi,QWORD PTR [rsp+0x50]
   140007fce:	add    rsp,0x20
   140007fd2:	pop    r15
   140007fd4:	pop    r14
   140007fd6:	pop    rdi
   140007fd7:	ret    
   140007fd8:	sub    rsp,0x28
   140007fdc:	call   0x140007dd8
   140007fe1:	neg    rax
   140007fe4:	sbb    eax,eax
   140007fe6:	neg    eax
   140007fe8:	dec    eax
   140007fea:	add    rsp,0x28
   140007fee:	ret    
   140007fef:	int3   
   140007ff0:	rex push rbx
   140007ff2:	sub    rsp,0x20
   140007ff6:	mov    rbx,rcx
   140007ff9:	mov    BYTE PTR [rcx+0x18],0x0
   140007ffd:	test   rdx,rdx
   140008000:	jne    0x140008088
   140008006:	call   0x140010d3c
   14000800b:	mov    QWORD PTR [rbx+0x10],rax
   14000800f:	mov    rdx,QWORD PTR [rax+0xc0]
   140008016:	mov    QWORD PTR [rbx],rdx
   140008019:	mov    rcx,QWORD PTR [rax+0xb8]
   140008020:	mov    QWORD PTR [rbx+0x8],rcx
   140008024:	cmp    rdx,QWORD PTR [rip+0x3dfb5]        # 0x140045fe0
   14000802b:	je     0x140008043
   14000802d:	mov    eax,DWORD PTR [rax+0xc8]
   140008033:	test   DWORD PTR [rip+0x3e11f],eax        # 0x140046158
   140008039:	jne    0x140008043
   14000803b:	call   0x1400100d0
   140008040:	mov    QWORD PTR [rbx],rax
   140008043:	mov    rax,QWORD PTR [rip+0x3dcb6]        # 0x140045d00
   14000804a:	cmp    QWORD PTR [rbx+0x8],rax
   14000804e:	je     0x14000806b
   140008050:	mov    rax,QWORD PTR [rbx+0x10]
   140008054:	mov    ecx,DWORD PTR [rax+0xc8]
   14000805a:	test   DWORD PTR [rip+0x3e0f8],ecx        # 0x140046158
   140008060:	jne    0x14000806b
   140008062:	call   0x140010504
   140008067:	mov    QWORD PTR [rbx+0x8],rax
   14000806b:	mov    rcx,QWORD PTR [rbx+0x10]
   14000806f:	mov    eax,DWORD PTR [rcx+0xc8]
   140008075:	test   al,0x2
   140008077:	jne    0x14000808f
   140008079:	or     eax,0x2
   14000807c:	mov    DWORD PTR [rcx+0xc8],eax
   140008082:	mov    BYTE PTR [rbx+0x18],0x1
   140008086:	jmp    0x14000808f
   140008088:	movups xmm0,XMMWORD PTR [rdx]
   14000808b:	movdqu XMMWORD PTR [rcx],xmm0
   14000808f:	mov    rax,rbx
   140008092:	add    rsp,0x20
   140008096:	pop    rbx
   140008097:	ret    
   140008098:	cmp    BYTE PTR [rcx+0x18],0x0
   14000809c:	je     0x1400080a9
   14000809e:	mov    rax,QWORD PTR [rcx+0x10]
   1400080a2:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400080a9:	ret    
   1400080aa:	int3   
   1400080ab:	int3   
   1400080ac:	mov    rax,rcx
   1400080af:	ret    
   1400080b0:	mov    QWORD PTR [rsp+0x10],rbx
   1400080b5:	mov    WORD PTR [rsp+0x8],cx
   1400080ba:	push   rbp
   1400080bb:	mov    rbp,rsp
   1400080be:	sub    rsp,0x50
   1400080c2:	mov    eax,0xffff
   1400080c7:	cmp    cx,ax
   1400080ca:	je     0x14000816f
   1400080d0:	lea    rcx,[rbp-0x20]
   1400080d4:	call   0x140007ff0
   1400080d9:	mov    rbx,QWORD PTR [rbp-0x20]
   1400080dd:	mov    rax,QWORD PTR [rbx+0x138]
   1400080e4:	test   rax,rax
   1400080e7:	jne    0x1400080fc
   1400080e9:	movzx  edx,WORD PTR [rbp+0x10]
   1400080ed:	lea    eax,[rdx-0x41]
   1400080f0:	cmp    ax,0x19
   1400080f4:	ja     0x14000815b
   1400080f6:	add    dx,0x20
   1400080fa:	jmp    0x14000815b
   1400080fc:	movzx  ecx,WORD PTR [rbp+0x10]
   140008100:	mov    edx,0x100
   140008105:	cmp    cx,dx
   140008108:	jae    0x14000812f
   14000810a:	mov    edx,0x1
   14000810f:	call   0x140010b00
   140008114:	test   eax,eax
   140008116:	jne    0x14000811e
   140008118:	movzx  edx,WORD PTR [rbp+0x10]
   14000811c:	jmp    0x14000815b
   14000811e:	movzx  ecx,WORD PTR [rbp+0x10]
   140008122:	mov    rax,QWORD PTR [rbx+0x110]
   140008129:	movzx  edx,BYTE PTR [rax+rcx*1]
   14000812d:	jmp    0x14000815b
   14000812f:	lea    rcx,[rbp+0x20]
   140008133:	mov    r9d,0x1
   140008139:	lea    r8,[rbp+0x10]
   14000813d:	mov    DWORD PTR [rsp+0x28],r9d
   140008142:	mov    QWORD PTR [rsp+0x20],rcx
   140008147:	mov    rcx,rax
   14000814a:	call   0x140010b68
   14000814f:	movzx  edx,WORD PTR [rbp+0x10]
   140008153:	test   eax,eax
   140008155:	je     0x14000815b
   140008157:	movzx  edx,WORD PTR [rbp+0x20]
   14000815b:	cmp    BYTE PTR [rbp-0x8],0x0
   14000815f:	je     0x14000816c
   140008161:	mov    rcx,QWORD PTR [rbp-0x10]
   140008165:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000816c:	movzx  eax,dx
   14000816f:	mov    rbx,QWORD PTR [rsp+0x68]
   140008174:	add    rsp,0x50
   140008178:	pop    rbp
   140008179:	ret    
   14000817a:	int3   
   14000817b:	int3   
   14000817c:	xor    edx,edx
   14000817e:	jmp    0x1400080b0
   140008183:	int3   
   140008184:	rex push rbx
   140008186:	sub    rsp,0x20
   14000818a:	xor    r10d,r10d
   14000818d:	mov    r9,rcx
   140008190:	test   rcx,rcx
   140008193:	je     0x1400081a3
   140008195:	test   rdx,rdx
   140008198:	je     0x1400081a3
   14000819a:	test   r8,r8
   14000819d:	jne    0x1400081bc
   14000819f:	mov    WORD PTR [rcx],r10w
   1400081a3:	call   0x14000b9f0
   1400081a8:	mov    ebx,0x16
   1400081ad:	mov    DWORD PTR [rax],ebx
   1400081af:	call   0x14000b8b8
   1400081b4:	mov    eax,ebx
   1400081b6:	add    rsp,0x20
   1400081ba:	pop    rbx
   1400081bb:	ret    
   1400081bc:	cmp    WORD PTR [rcx],r10w
   1400081c0:	je     0x1400081cb
   1400081c2:	add    rcx,0x2
   1400081c6:	dec    rdx
   1400081c9:	jne    0x1400081bc
   1400081cb:	test   rdx,rdx
   1400081ce:	jne    0x1400081d6
   1400081d0:	mov    WORD PTR [r9],r10w
   1400081d4:	jmp    0x1400081a3
   1400081d6:	sub    rcx,r8
   1400081d9:	movzx  eax,WORD PTR [r8]
   1400081dd:	mov    WORD PTR [rcx+r8*1],ax
   1400081e2:	lea    r8,[r8+0x2]
   1400081e6:	test   ax,ax
   1400081e9:	je     0x1400081f0
   1400081eb:	dec    rdx
   1400081ee:	jne    0x1400081d9
   1400081f0:	test   rdx,rdx
   1400081f3:	jne    0x140008205
   1400081f5:	mov    WORD PTR [r9],r10w
   1400081f9:	call   0x14000b9f0
   1400081fe:	mov    ebx,0x22
   140008203:	jmp    0x1400081ad
   140008205:	xor    eax,eax
   140008207:	jmp    0x1400081b6
   140008209:	int3   
   14000820a:	int3   
   14000820b:	int3   
   14000820c:	rex push rbx
   14000820e:	sub    rsp,0x20
   140008212:	xor    ebx,ebx
   140008214:	test   r9,r9
   140008217:	jne    0x140008227
   140008219:	test   rcx,rcx
   14000821c:	jne    0x14000822c
   14000821e:	test   rdx,rdx
   140008221:	jne    0x140008243
   140008223:	xor    eax,eax
   140008225:	jmp    0x140008256
   140008227:	test   rcx,rcx
   14000822a:	je     0x140008243
   14000822c:	test   rdx,rdx
   14000822f:	je     0x140008243
   140008231:	test   r9,r9
   140008234:	jne    0x14000823b
   140008236:	mov    WORD PTR [rcx],bx
   140008239:	jmp    0x140008223
   14000823b:	test   r8,r8
   14000823e:	jne    0x14000825c
   140008240:	mov    WORD PTR [rcx],bx
   140008243:	call   0x14000b9f0
   140008248:	mov    ebx,0x16
   14000824d:	mov    DWORD PTR [rax],ebx
   14000824f:	call   0x14000b8b8
   140008254:	mov    eax,ebx
   140008256:	add    rsp,0x20
   14000825a:	pop    rbx
   14000825b:	ret    
   14000825c:	mov    r11,rcx
   14000825f:	mov    r10,rdx
   140008262:	cmp    r9,0xffffffffffffffff
   140008266:	jne    0x140008284
   140008268:	sub    r11,r8
   14000826b:	movzx  eax,WORD PTR [r8]
   14000826f:	mov    WORD PTR [r11+r8*1],ax
   140008274:	lea    r8,[r8+0x2]
   140008278:	test   ax,ax
   14000827b:	je     0x1400082ac
   14000827d:	dec    r10
   140008280:	jne    0x14000826b
   140008282:	jmp    0x1400082ac
   140008284:	sub    r8,rcx
   140008287:	movzx  eax,WORD PTR [r8+r11*1]
   14000828c:	mov    WORD PTR [r11],ax
   140008290:	lea    r11,[r11+0x2]
   140008294:	test   ax,ax
   140008297:	je     0x1400082a3
   140008299:	dec    r10
   14000829c:	je     0x1400082a3
   14000829e:	dec    r9
   1400082a1:	jne    0x140008287
   1400082a3:	test   r9,r9
   1400082a6:	jne    0x1400082ac
   1400082a8:	mov    WORD PTR [r11],bx
   1400082ac:	test   r10,r10
   1400082af:	jne    0x140008223
   1400082b5:	cmp    r9,0xffffffffffffffff
   1400082b9:	jne    0x1400082c6
   1400082bb:	mov    WORD PTR [rcx+rdx*2-0x2],bx
   1400082c0:	lea    eax,[r10+0x50]
   1400082c4:	jmp    0x140008256
   1400082c6:	mov    WORD PTR [rcx],bx
   1400082c9:	call   0x14000b9f0
   1400082ce:	mov    ebx,0x22
   1400082d3:	jmp    0x14000824d
   1400082d8:	sub    rsp,0x28
   1400082dc:	xor    r8d,r8d
   1400082df:	mov    r9,rdx
   1400082e2:	mov    r10,rcx
   1400082e5:	cmp    DWORD PTR [rip+0x3f708],r8d        # 0x1400479f4
   1400082ec:	jne    0x140008353
   1400082ee:	test   rcx,rcx
   1400082f1:	jne    0x14000830d
   1400082f3:	call   0x14000b9f0
   1400082f8:	mov    DWORD PTR [rax],0x16
   1400082fe:	call   0x14000b8b8
   140008303:	mov    eax,0x7fffffff
   140008308:	add    rsp,0x28
   14000830c:	ret    
   14000830d:	test   rdx,rdx
   140008310:	je     0x1400082f3
   140008312:	sub    r10,rdx
   140008315:	movzx  edx,WORD PTR [r10+r9*1]
   14000831a:	lea    eax,[rdx-0x41]
   14000831d:	cmp    ax,0x19
   140008321:	ja     0x140008327
   140008323:	add    dx,0x20
   140008327:	movzx  ecx,WORD PTR [r9]
   14000832b:	lea    eax,[rcx-0x41]
   14000832e:	cmp    ax,0x19
   140008332:	ja     0x140008338
   140008334:	add    cx,0x20
   140008338:	add    r9,0x2
   14000833c:	test   dx,dx
   14000833f:	je     0x140008346
   140008341:	cmp    dx,cx
   140008344:	je     0x140008315
   140008346:	movzx  ecx,cx
   140008349:	movzx  eax,dx
   14000834c:	sub    eax,ecx
   14000834e:	add    rsp,0x28
   140008352:	ret    
   140008353:	add    rsp,0x28
   140008357:	jmp    0x14000835c
   14000835c:	mov    rax,rsp
   14000835f:	mov    QWORD PTR [rax+0x8],rbx
   140008363:	mov    QWORD PTR [rax+0x10],rbp
   140008367:	mov    QWORD PTR [rax+0x18],rsi
   14000836b:	push   rdi
   14000836c:	sub    rsp,0x40
   140008370:	mov    rsi,rcx
   140008373:	mov    rdi,rdx
   140008376:	lea    rcx,[rax-0x28]
   14000837a:	mov    rdx,r8
   14000837d:	call   0x140007ff0
   140008382:	xor    ebp,ebp
   140008384:	test   rsi,rsi
   140008387:	je     0x14000838e
   140008389:	test   rdi,rdi
   14000838c:	jne    0x1400083a5
   14000838e:	call   0x14000b9f0
   140008393:	mov    DWORD PTR [rax],0x16
   140008399:	call   0x14000b8b8
   14000839e:	mov    eax,0x7fffffff
   1400083a3:	jmp    0x140008421
   1400083a5:	mov    rax,QWORD PTR [rsp+0x20]
   1400083aa:	cmp    QWORD PTR [rax+0x138],rbp
   1400083b1:	jne    0x1400083e7
   1400083b3:	sub    rsi,rdi
   1400083b6:	movzx  ebx,WORD PTR [rsi+rdi*1]
   1400083ba:	lea    eax,[rbx-0x41]
   1400083bd:	cmp    ax,0x19
   1400083c1:	ja     0x1400083c7
   1400083c3:	add    bx,0x20
   1400083c7:	movzx  ecx,WORD PTR [rdi]
   1400083ca:	lea    eax,[rcx-0x41]
   1400083cd:	cmp    ax,0x19
   1400083d1:	ja     0x1400083d7
   1400083d3:	add    cx,0x20
   1400083d7:	add    rdi,0x2
   1400083db:	test   bx,bx
   1400083de:	je     0x140008419
   1400083e0:	cmp    bx,cx
   1400083e3:	je     0x1400083b6
   1400083e5:	jmp    0x140008419
   1400083e7:	movzx  ecx,WORD PTR [rsi]
   1400083ea:	lea    rdx,[rsp+0x20]
   1400083ef:	call   0x1400080b0
   1400083f4:	movzx  ecx,WORD PTR [rdi]
   1400083f7:	lea    rdx,[rsp+0x20]
   1400083fc:	movzx  ebx,ax
   1400083ff:	lea    rsi,[rsi+0x2]
   140008403:	call   0x1400080b0
   140008408:	lea    rdi,[rdi+0x2]
   14000840c:	movzx  ecx,ax
   14000840f:	test   bx,bx
   140008412:	je     0x140008419
   140008414:	cmp    bx,ax
   140008417:	je     0x1400083e7
   140008419:	movzx  ecx,cx
   14000841c:	movzx  eax,bx
   14000841f:	sub    eax,ecx
   140008421:	cmp    BYTE PTR [rsp+0x38],bpl
   140008426:	je     0x140008434
   140008428:	mov    rcx,QWORD PTR [rsp+0x30]
   14000842d:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140008434:	mov    rbx,QWORD PTR [rsp+0x50]
   140008439:	mov    rbp,QWORD PTR [rsp+0x58]
   14000843e:	mov    rsi,QWORD PTR [rsp+0x60]
   140008443:	add    rsp,0x40
   140008447:	pop    rdi
   140008448:	ret    
   140008449:	int3   
   14000844a:	int3   
   14000844b:	int3   
   14000844c:	mov    QWORD PTR [rsp+0x10],rbx
   140008451:	mov    QWORD PTR [rsp+0x18],r8
   140008456:	push   rbp
   140008457:	push   rsi
   140008458:	push   rdi
   140008459:	push   r12
   14000845b:	push   r13
   14000845d:	push   r14
   14000845f:	push   r15
   140008461:	sub    rsp,0x20
   140008465:	mov    r14,QWORD PTR [rsp+0x98]
   14000846d:	mov    r15,QWORD PTR [rsp+0x88]
   140008475:	mov    rdi,rcx
   140008478:	xor    ecx,ecx
   14000847a:	mov    r13,r9
   14000847d:	mov    rsi,r8
   140008480:	mov    r9d,ecx
   140008483:	mov    DWORD PTR [rsp+0x60],ecx
   140008487:	mov    r12,rdx
   14000848a:	test   rdi,rdi
   14000848d:	je     0x140008499
   14000848f:	test   rdx,rdx
   140008492:	jne    0x1400084a4
   140008494:	test   r8,r8
   140008497:	je     0x1400084a9
   140008499:	mov    r9d,0x1
   14000849f:	jmp    0x140008671
   1400084a4:	test   r8,r8
   1400084a7:	je     0x140008499
   1400084a9:	test   r13,r13
   1400084ac:	jne    0x1400084ba
   1400084ae:	cmp    QWORD PTR [rsp+0x80],rcx
   1400084b6:	jne    0x140008499
   1400084b8:	jmp    0x1400084c4
   1400084ba:	cmp    QWORD PTR [rsp+0x80],rcx
   1400084c2:	je     0x140008499
   1400084c4:	test   r15,r15
   1400084c7:	jne    0x1400084d5
   1400084c9:	cmp    QWORD PTR [rsp+0x90],rcx
   1400084d1:	jne    0x140008499
   1400084d3:	jmp    0x1400084df
   1400084d5:	cmp    QWORD PTR [rsp+0x90],rcx
   1400084dd:	je     0x140008499
   1400084df:	test   r14,r14
   1400084e2:	jne    0x1400084f0
   1400084e4:	cmp    QWORD PTR [rsp+0xa0],rcx
   1400084ec:	jne    0x140008499
   1400084ee:	jmp    0x1400084fa
   1400084f0:	cmp    QWORD PTR [rsp+0xa0],rcx
   1400084f8:	je     0x140008499
   1400084fa:	mov    eax,0x1
   1400084ff:	mov    rbx,rdi
   140008502:	cmp    WORD PTR [rbx],cx
   140008505:	je     0x140008510
   140008507:	add    rbx,0x2
   14000850b:	dec    rax
   14000850e:	jne    0x140008502
   140008510:	cmp    WORD PTR [rbx],0x3a
   140008514:	jne    0x140008541
   140008516:	test   rdx,rdx
   140008519:	je     0x14000853b
   14000851b:	cmp    r8,0x3
   14000851f:	jb     0x140008671
   140008525:	mov    r9d,0x2
   14000852b:	mov    r8,rdi
   14000852e:	mov    rdx,rsi
   140008531:	mov    rcx,r12
   140008534:	call   0x14000820c
   140008539:	xor    ecx,ecx
   14000853b:	lea    rdi,[rbx+0x2]
   14000853f:	jmp    0x140008549
   140008541:	test   rdx,rdx
   140008544:	je     0x140008549
   140008546:	mov    WORD PTR [rdx],cx
   140008549:	movzx  eax,WORD PTR [rdi]
   14000854c:	mov    rbp,rcx
   14000854f:	mov    rsi,rcx
   140008552:	mov    rbx,rdi
   140008555:	test   ax,ax
   140008558:	je     0x1400085bc
   14000855a:	cmp    ax,0x2f
   14000855e:	je     0x140008571
   140008560:	cmp    ax,0x5c
   140008564:	je     0x140008571
   140008566:	cmp    ax,0x2e
   14000856a:	jne    0x140008575
   14000856c:	mov    rsi,rbx
   14000856f:	jmp    0x140008575
   140008571:	lea    rbp,[rbx+0x2]
   140008575:	add    rbx,0x2
   140008579:	movzx  eax,WORD PTR [rbx]
   14000857c:	test   ax,ax
   14000857f:	jne    0x14000855a
   140008581:	test   rbp,rbp
   140008584:	je     0x1400085bc
   140008586:	test   r13,r13
   140008589:	je     0x1400085b7
   14000858b:	mov    r9,rbp
   14000858e:	sub    r9,rdi
   140008591:	sar    r9,1
   140008594:	cmp    QWORD PTR [rsp+0x80],r9
   14000859c:	jbe    0x140008667
   1400085a2:	mov    rdx,QWORD PTR [rsp+0x80]
   1400085aa:	mov    r8,rdi
   1400085ad:	mov    rcx,r13
   1400085b0:	call   0x14000820c
   1400085b5:	xor    ecx,ecx
   1400085b7:	mov    rdi,rbp
   1400085ba:	jmp    0x1400085c6
   1400085bc:	test   r13,r13
   1400085bf:	je     0x1400085c6
   1400085c1:	mov    WORD PTR [r13+0x0],cx
   1400085c6:	test   rsi,rsi
   1400085c9:	je     0x14000862a
   1400085cb:	cmp    rsi,rdi
   1400085ce:	jb     0x14000862a
   1400085d0:	test   r15,r15
   1400085d3:	je     0x1400085fd
   1400085d5:	mov    r9,rsi
   1400085d8:	sub    r9,rdi
   1400085db:	sar    r9,1
   1400085de:	cmp    QWORD PTR [rsp+0x90],r9
   1400085e6:	jbe    0x140008667
   1400085e8:	mov    rdx,QWORD PTR [rsp+0x90]
   1400085f0:	mov    r8,rdi
   1400085f3:	mov    rcx,r15
   1400085f6:	call   0x14000820c
   1400085fb:	xor    ecx,ecx
   1400085fd:	test   r14,r14
   140008600:	je     0x140008660
   140008602:	sub    rbx,rsi
   140008605:	sar    rbx,1
   140008608:	cmp    QWORD PTR [rsp+0xa0],rbx
   140008610:	jbe    0x140008667
   140008612:	mov    rdx,QWORD PTR [rsp+0xa0]
   14000861a:	mov    r9,rbx
   14000861d:	mov    r8,rsi
   140008620:	mov    rcx,r14
   140008623:	call   0x14000820c
   140008628:	jmp    0x140008660
   14000862a:	test   r15,r15
   14000862d:	je     0x140008657
   14000862f:	sub    rbx,rdi
   140008632:	sar    rbx,1
   140008635:	cmp    QWORD PTR [rsp+0x90],rbx
   14000863d:	jbe    0x140008667
   14000863f:	mov    rdx,QWORD PTR [rsp+0x90]
   140008647:	mov    r9,rbx
   14000864a:	mov    r8,rdi
   14000864d:	mov    rcx,r15
   140008650:	call   0x14000820c
   140008655:	xor    ecx,ecx
   140008657:	test   r14,r14
   14000865a:	je     0x140008660
   14000865c:	mov    WORD PTR [r14],cx
   140008660:	xor    eax,eax
   140008662:	jmp    0x1400086e7
   140008667:	mov    r9d,DWORD PTR [rsp+0x60]
   14000866c:	mov    rsi,QWORD PTR [rsp+0x70]
   140008671:	test   r12,r12
   140008674:	je     0x140008680
   140008676:	test   rsi,rsi
   140008679:	je     0x140008680
   14000867b:	mov    WORD PTR [r12],cx
   140008680:	test   r13,r13
   140008683:	je     0x140008694
   140008685:	cmp    QWORD PTR [rsp+0x80],rcx
   14000868d:	jbe    0x140008694
   14000868f:	mov    WORD PTR [r13+0x0],cx
   140008694:	test   r15,r15
   140008697:	je     0x1400086a7
   140008699:	cmp    QWORD PTR [rsp+0x90],rcx
   1400086a1:	jbe    0x1400086a7
   1400086a3:	mov    WORD PTR [r15],cx
   1400086a7:	test   r14,r14
   1400086aa:	je     0x1400086ba
   1400086ac:	cmp    QWORD PTR [rsp+0xa0],rcx
   1400086b4:	jbe    0x1400086ba
   1400086b6:	mov    WORD PTR [r14],cx
   1400086ba:	test   rdi,rdi
   1400086bd:	jne    0x1400086d4
   1400086bf:	call   0x14000b9f0
   1400086c4:	mov    ebx,0x16
   1400086c9:	mov    DWORD PTR [rax],ebx
   1400086cb:	call   0x14000b8b8
   1400086d0:	mov    eax,ebx
   1400086d2:	jmp    0x1400086e7
   1400086d4:	test   r9d,r9d
   1400086d7:	jne    0x1400086bf
   1400086d9:	call   0x14000b9f0
   1400086de:	mov    ecx,0x22
   1400086e3:	mov    DWORD PTR [rax],ecx
   1400086e5:	mov    eax,ecx
   1400086e7:	mov    rbx,QWORD PTR [rsp+0x68]
   1400086ec:	add    rsp,0x20
   1400086f0:	pop    r15
   1400086f2:	pop    r14
   1400086f4:	pop    r13
   1400086f6:	pop    r12
   1400086f8:	pop    rdi
   1400086f9:	pop    rsi
   1400086fa:	pop    rbp
   1400086fb:	ret    
   1400086fc:	sub    rsp,0x38
   140008700:	mov    rax,QWORD PTR [rsp+0x60]
   140008705:	mov    QWORD PTR [rsp+0x28],rax
   14000870a:	and    QWORD PTR [rsp+0x20],0x0
   140008710:	call   0x14000871c
   140008715:	add    rsp,0x38
   140008719:	ret    
   14000871a:	int3   
   14000871b:	int3   
   14000871c:	mov    QWORD PTR [rsp+0x8],rbx
   140008721:	mov    QWORD PTR [rsp+0x10],rbp
   140008726:	mov    QWORD PTR [rsp+0x18],rsi
   14000872b:	push   rdi
   14000872c:	push   r14
   14000872e:	push   r15
   140008730:	sub    rsp,0x30
   140008734:	xor    r15d,r15d
   140008737:	mov    rbp,r9
   14000873a:	mov    rsi,r8
   14000873d:	mov    rdi,rdx
   140008740:	mov    rbx,rcx
   140008743:	test   r9,r9
   140008746:	je     0x14000883d
   14000874c:	test   r8,r8
   14000874f:	jne    0x140008766
   140008751:	test   rcx,rcx
   140008754:	jne    0x14000876f
   140008756:	test   rdx,rdx
   140008759:	jne    0x14000883d
   14000875f:	xor    eax,eax
   140008761:	jmp    0x140008850
   140008766:	test   rcx,rcx
   140008769:	je     0x14000883d
   14000876f:	test   rdx,rdx
   140008772:	je     0x14000883d
   140008778:	cmp    rdx,r8
   14000877b:	jbe    0x1400087cd
   14000877d:	call   0x14000b9f0
   140008782:	lea    r8,[rsi+0x1]
   140008786:	lea    rcx,[rip+0xa98f]        # 0x14001311c
   14000878d:	mov    edi,DWORD PTR [rax]
   14000878f:	mov    rax,QWORD PTR [rsp+0x78]
   140008794:	mov    r9,rbp
   140008797:	mov    QWORD PTR [rsp+0x28],rax
   14000879c:	mov    rax,QWORD PTR [rsp+0x70]
   1400087a1:	mov    rdx,rbx
   1400087a4:	mov    QWORD PTR [rsp+0x20],rax
   1400087a9:	call   0x1400088d8
   1400087ae:	cmp    eax,0xfffffffe
   1400087b1:	jne    0x140008823
   1400087b3:	call   0x14000b9f0
   1400087b8:	cmp    DWORD PTR [rax],0x22
   1400087bb:	jne    0x14000884d
   1400087c1:	call   0x14000b9f0
   1400087c6:	mov    DWORD PTR [rax],edi
   1400087c8:	jmp    0x14000884d
   1400087cd:	call   0x14000b9f0
   1400087d2:	lea    rcx,[rip+0xa943]        # 0x14001311c
   1400087d9:	mov    r9,rbp
   1400087dc:	mov    r14d,DWORD PTR [rax]
   1400087df:	mov    rax,QWORD PTR [rsp+0x78]
   1400087e4:	mov    r8,rdi
   1400087e7:	mov    QWORD PTR [rsp+0x28],rax
   1400087ec:	mov    rax,QWORD PTR [rsp+0x70]
   1400087f1:	mov    rdx,rbx
   1400087f4:	mov    QWORD PTR [rsp+0x20],rax
   1400087f9:	call   0x1400088d8
   1400087fe:	mov    WORD PTR [rbx+rdi*2-0x2],r15w
   140008804:	cmp    eax,0xfffffffe
   140008807:	jne    0x140008823
   140008809:	cmp    rsi,0xffffffffffffffff
   14000880d:	jne    0x140008827
   14000880f:	call   0x14000b9f0
   140008814:	cmp    DWORD PTR [rax],0x22
   140008817:	jne    0x14000884d
   140008819:	call   0x14000b9f0
   14000881e:	mov    DWORD PTR [rax],r14d
   140008821:	jmp    0x14000884d
   140008823:	test   eax,eax
   140008825:	jns    0x140008850
   140008827:	mov    WORD PTR [rbx],r15w
   14000882b:	cmp    eax,0xfffffffe
   14000882e:	jne    0x14000884d
   140008830:	call   0x14000b9f0
   140008835:	mov    DWORD PTR [rax],0x22
   14000883b:	jmp    0x140008848
   14000883d:	call   0x14000b9f0
   140008842:	mov    DWORD PTR [rax],0x16
   140008848:	call   0x14000b8b8
   14000884d:	or     eax,0xffffffff
   140008850:	mov    rbx,QWORD PTR [rsp+0x50]
   140008855:	mov    rbp,QWORD PTR [rsp+0x58]
   14000885a:	mov    rsi,QWORD PTR [rsp+0x60]
   14000885f:	add    rsp,0x30
   140008863:	pop    r15
   140008865:	pop    r14
   140008867:	pop    rdi
   140008868:	ret    
   140008869:	int3   
   14000886a:	int3   
   14000886b:	int3   
   14000886c:	sub    rsp,0x38
   140008870:	mov    QWORD PTR [rsp+0x28],r9
   140008875:	and    QWORD PTR [rsp+0x20],0x0
   14000887b:	mov    r9,r8
   14000887e:	mov    r8,rdx
   140008881:	mov    rdx,rcx
   140008884:	lea    rcx,[rip+0x9cd1]        # 0x14001255c
   14000888b:	call   0x1400088d8
   140008890:	or     ecx,0xffffffff
   140008893:	test   eax,eax
   140008895:	cmovs  eax,ecx
   140008898:	add    rsp,0x38
   14000889c:	ret    
   14000889d:	int3   
   14000889e:	int3   
   14000889f:	int3   
   1400088a0:	sub    rsp,0x38
   1400088a4:	mov    rax,QWORD PTR [rsp+0x60]
   1400088a9:	mov    QWORD PTR [rsp+0x28],rax
   1400088ae:	mov    QWORD PTR [rsp+0x20],r9
   1400088b3:	mov    r9,r8
   1400088b6:	mov    r8,rdx
   1400088b9:	mov    rdx,rcx
   1400088bc:	lea    rcx,[rip+0x9c99]        # 0x14001255c
   1400088c3:	call   0x1400088d8
   1400088c8:	or     ecx,0xffffffff
   1400088cb:	test   eax,eax
   1400088cd:	cmovs  eax,ecx
   1400088d0:	add    rsp,0x38
   1400088d4:	ret    
   1400088d5:	int3   
   1400088d6:	int3   
   1400088d7:	int3   
   1400088d8:	mov    QWORD PTR [rsp+0x8],rbx
   1400088dd:	mov    QWORD PTR [rsp+0x10],rsi
   1400088e2:	mov    QWORD PTR [rsp+0x18],rdi
   1400088e7:	push   rbp
   1400088e8:	push   r14
   1400088ea:	push   r15
   1400088ec:	mov    rbp,rsp
   1400088ef:	sub    rsp,0x50
   1400088f3:	xor    ebx,ebx
   1400088f5:	mov    r14,r8
   1400088f8:	mov    r15,rcx
   1400088fb:	mov    rdi,rdx
   1400088fe:	lea    rcx,[rbp-0x28]
   140008902:	lea    r8d,[rbx+0x28]
   140008906:	xor    edx,edx
   140008908:	mov    rsi,r9
   14000890b:	mov    QWORD PTR [rbp-0x30],rbx
   14000890f:	call   0x140009800
   140008914:	test   rsi,rsi
   140008917:	jne    0x140008931
   140008919:	call   0x14000b9f0
   14000891e:	mov    DWORD PTR [rax],0x16
   140008924:	call   0x14000b8b8
   140008929:	or     eax,0xffffffff
   14000892c:	jmp    0x1400089d8
   140008931:	test   r14,r14
   140008934:	je     0x14000893b
   140008936:	test   rdi,rdi
   140008939:	je     0x140008919
   14000893b:	mov    DWORD PTR [rbp-0x18],0x42
   140008942:	mov    QWORD PTR [rbp-0x20],rdi
   140008946:	mov    QWORD PTR [rbp-0x30],rdi
   14000894a:	cmp    r14,0x3fffffff
   140008951:	jbe    0x14000895c
   140008953:	mov    DWORD PTR [rbp-0x28],0x7fffffff
   14000895a:	jmp    0x140008963
   14000895c:	lea    eax,[r14+r14*1]
   140008960:	mov    DWORD PTR [rbp-0x28],eax
   140008963:	mov    r9,QWORD PTR [rbp+0x48]
   140008967:	mov    r8,QWORD PTR [rbp+0x40]
   14000896b:	lea    rcx,[rbp-0x30]
   14000896f:	mov    rdx,rsi
   140008972:	call   r15
   140008975:	mov    esi,eax
   140008977:	test   rdi,rdi
   14000897a:	je     0x1400089d8
   14000897c:	test   eax,eax
   14000897e:	js     0x1400089c9
   140008980:	dec    DWORD PTR [rbp-0x28]
   140008983:	js     0x140008998
   140008985:	mov    rax,QWORD PTR [rbp-0x30]
   140008989:	mov    BYTE PTR [rax],bl
   14000898b:	mov    rax,QWORD PTR [rbp-0x30]
   14000898f:	inc    rax
   140008992:	mov    QWORD PTR [rbp-0x30],rax
   140008996:	jmp    0x1400089ac
   140008998:	lea    rdx,[rbp-0x30]
   14000899c:	xor    ecx,ecx
   14000899e:	call   0x1400123d0
   1400089a3:	cmp    eax,0xffffffff
   1400089a6:	je     0x1400089c9
   1400089a8:	mov    rax,QWORD PTR [rbp-0x30]
   1400089ac:	dec    DWORD PTR [rbp-0x28]
   1400089af:	js     0x1400089b5
   1400089b1:	mov    BYTE PTR [rax],bl
   1400089b3:	jmp    0x1400089c5
   1400089b5:	lea    rdx,[rbp-0x30]
   1400089b9:	xor    ecx,ecx
   1400089bb:	call   0x1400123d0
   1400089c0:	cmp    eax,0xffffffff
   1400089c3:	je     0x1400089c9
   1400089c5:	mov    eax,esi
   1400089c7:	jmp    0x1400089d8
   1400089c9:	cmp    DWORD PTR [rbp-0x28],ebx
   1400089cc:	mov    WORD PTR [rdi+r14*2-0x2],bx
   1400089d2:	setge  bl
   1400089d5:	lea    eax,[rbx-0x2]
   1400089d8:	lea    r11,[rsp+0x50]
   1400089dd:	mov    rbx,QWORD PTR [r11+0x20]
   1400089e1:	mov    rsi,QWORD PTR [r11+0x28]
   1400089e5:	mov    rdi,QWORD PTR [r11+0x30]
   1400089e9:	mov    rsp,r11
   1400089ec:	pop    r15
   1400089ee:	pop    r14
   1400089f0:	pop    rbp
   1400089f1:	ret    
   1400089f2:	int3   
   1400089f3:	int3   
   1400089f4:	sub    rsp,0x38
   1400089f8:	mov    QWORD PTR [rsp+0x28],r9
   1400089fd:	and    QWORD PTR [rsp+0x20],0x0
   140008a03:	mov    r9,r8
   140008a06:	mov    r8,rdx
   140008a09:	mov    rdx,rcx
   140008a0c:	lea    rcx,[rip+0xb44d]        # 0x140013e60
   140008a13:	call   0x1400088d8
   140008a18:	or     ecx,0xffffffff
   140008a1b:	test   eax,eax
   140008a1d:	cmovs  eax,ecx
   140008a20:	add    rsp,0x38
   140008a24:	ret    
   140008a25:	int3   
   140008a26:	int3   
   140008a27:	int3   
   140008a28:	sub    rsp,0x38
   140008a2c:	mov    rax,QWORD PTR [rsp+0x60]
   140008a31:	mov    QWORD PTR [rsp+0x28],rax
   140008a36:	mov    QWORD PTR [rsp+0x20],r9
   140008a3b:	mov    r9,r8
   140008a3e:	mov    r8,rdx
   140008a41:	mov    rdx,rcx
   140008a44:	lea    rcx,[rip+0xb415]        # 0x140013e60
   140008a4b:	call   0x1400088d8
   140008a50:	or     ecx,0xffffffff
   140008a53:	test   eax,eax
   140008a55:	cmovs  eax,ecx
   140008a58:	add    rsp,0x38
   140008a5c:	ret    
   140008a5d:	int3   
   140008a5e:	int3   
   140008a5f:	int3   
   140008a60:	mov    QWORD PTR [rsp+0x8],rbx
   140008a65:	push   rdi
   140008a66:	sub    rsp,0x30
   140008a6a:	xor    edi,edi
   140008a6c:	mov    rbx,rcx
   140008a6f:	test   r8,r8
   140008a72:	je     0x140008abb
   140008a74:	test   rcx,rcx
   140008a77:	je     0x140008abb
   140008a79:	test   rdx,rdx
   140008a7c:	je     0x140008abb
   140008a7e:	mov    rax,QWORD PTR [rsp+0x60]
   140008a83:	mov    QWORD PTR [rsp+0x28],rax
   140008a88:	mov    QWORD PTR [rsp+0x20],r9
   140008a8d:	mov    r9,r8
   140008a90:	mov    r8,rdx
   140008a93:	mov    rdx,rcx
   140008a96:	lea    rcx,[rip+0xa67f]        # 0x14001311c
   140008a9d:	call   0x1400088d8
   140008aa2:	test   eax,eax
   140008aa4:	jns    0x140008aa9
   140008aa6:	mov    WORD PTR [rbx],di
   140008aa9:	cmp    eax,0xfffffffe
   140008aac:	jne    0x140008ace
   140008aae:	call   0x14000b9f0
   140008ab3:	mov    DWORD PTR [rax],0x22
   140008ab9:	jmp    0x140008ac6
   140008abb:	call   0x14000b9f0
   140008ac0:	mov    DWORD PTR [rax],0x16
   140008ac6:	call   0x14000b8b8
   140008acb:	or     eax,0xffffffff
   140008ace:	mov    rbx,QWORD PTR [rsp+0x40]
   140008ad3:	add    rsp,0x30
   140008ad7:	pop    rdi
   140008ad8:	ret    
   140008ad9:	int3   
   140008ada:	int3   
   140008adb:	int3   
   140008adc:	sub    rsp,0x38
   140008ae0:	mov    QWORD PTR [rsp+0x20],r9
   140008ae5:	xor    r9d,r9d
   140008ae8:	call   0x140008a60
   140008aed:	add    rsp,0x38
   140008af1:	ret    
   140008af2:	int3   
   140008af3:	int3   
   140008af4:	sub    rsp,0x38
   140008af8:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140008b01:	call   0x140007ce4
   140008b06:	nop
   140008b07:	jmp    0x140008b0e
   140008b09:	mov    rax,QWORD PTR [rsp+0x50]
   140008b0e:	add    rsp,0x38
   140008b12:	ret    
   140008b13:	int3   
   140008b14:	jmp    0x140007d8c
   140008b19:	int3   
   140008b1a:	int3   
   140008b1b:	int3   
   140008b1c:	sub    rsp,0x38
   140008b20:	mov    QWORD PTR [rsp+0x28],r9
   140008b25:	and    QWORD PTR [rsp+0x20],0x0
   140008b2b:	mov    r9,r8
   140008b2e:	mov    r8,rdx
   140008b31:	mov    rdx,rcx
   140008b34:	lea    rcx,[rip+0x3255]        # 0x14000bd90
   140008b3b:	call   0x140008b88
   140008b40:	or     ecx,0xffffffff
   140008b43:	test   eax,eax
   140008b45:	cmovs  eax,ecx
   140008b48:	add    rsp,0x38
   140008b4c:	ret    
   140008b4d:	int3   
   140008b4e:	int3   
   140008b4f:	int3   
   140008b50:	sub    rsp,0x38
   140008b54:	mov    rax,QWORD PTR [rsp+0x60]
   140008b59:	mov    QWORD PTR [rsp+0x28],rax
   140008b5e:	mov    QWORD PTR [rsp+0x20],r9
   140008b63:	mov    r9,r8
   140008b66:	mov    r8,rdx
   140008b69:	mov    rdx,rcx
   140008b6c:	lea    rcx,[rip+0x321d]        # 0x14000bd90
   140008b73:	call   0x140008b88
   140008b78:	or     ecx,0xffffffff
   140008b7b:	test   eax,eax
   140008b7d:	cmovs  eax,ecx
   140008b80:	add    rsp,0x38
   140008b84:	ret    
   140008b85:	int3   
   140008b86:	int3   
   140008b87:	int3   
   140008b88:	mov    QWORD PTR [rsp+0x8],rbx
   140008b8d:	mov    QWORD PTR [rsp+0x10],rsi
   140008b92:	mov    QWORD PTR [rsp+0x18],rdi
   140008b97:	push   rbp
   140008b98:	push   r14
   140008b9a:	push   r15
   140008b9c:	mov    rbp,rsp
   140008b9f:	sub    rsp,0x50
   140008ba3:	xor    ebx,ebx
   140008ba5:	mov    r14,r8
   140008ba8:	mov    r15,rcx
   140008bab:	mov    rsi,rdx
   140008bae:	lea    rcx,[rbp-0x28]
   140008bb2:	lea    r8d,[rbx+0x28]
   140008bb6:	xor    edx,edx
   140008bb8:	mov    rdi,r9
   140008bbb:	mov    QWORD PTR [rbp-0x30],rbx
   140008bbf:	call   0x140009800
   140008bc4:	test   rdi,rdi
   140008bc7:	jne    0x140008bde
   140008bc9:	call   0x14000b9f0
   140008bce:	mov    DWORD PTR [rax],0x16
   140008bd4:	call   0x14000b8b8
   140008bd9:	or     eax,0xffffffff
   140008bdc:	jmp    0x140008c54
   140008bde:	test   r14,r14
   140008be1:	je     0x140008be8
   140008be3:	test   rsi,rsi
   140008be6:	je     0x140008bc9
   140008be8:	mov    r9,QWORD PTR [rbp+0x48]
   140008bec:	mov    r8,QWORD PTR [rbp+0x40]
   140008bf0:	mov    ecx,0x7fffffff
   140008bf5:	cmp    r14,rcx
   140008bf8:	mov    eax,r14d
   140008bfb:	mov    rdx,rdi
   140008bfe:	cmova  eax,ecx
   140008c01:	lea    rcx,[rbp-0x30]
   140008c05:	mov    DWORD PTR [rbp-0x18],0x42
   140008c0c:	mov    QWORD PTR [rbp-0x20],rsi
   140008c10:	mov    QWORD PTR [rbp-0x30],rsi
   140008c14:	mov    DWORD PTR [rbp-0x28],eax
   140008c17:	call   r15
   140008c1a:	mov    edi,eax
   140008c1c:	test   rsi,rsi
   140008c1f:	je     0x140008c54
   140008c21:	test   eax,eax
   140008c23:	js     0x140008c46
   140008c25:	dec    DWORD PTR [rbp-0x28]
   140008c28:	js     0x140008c32
   140008c2a:	mov    rax,QWORD PTR [rbp-0x30]
   140008c2e:	mov    BYTE PTR [rax],bl
   140008c30:	jmp    0x140008c42
   140008c32:	lea    rdx,[rbp-0x30]
   140008c36:	xor    ecx,ecx
   140008c38:	call   0x1400123d0
   140008c3d:	cmp    eax,0xffffffff
   140008c40:	je     0x140008c46
   140008c42:	mov    eax,edi
   140008c44:	jmp    0x140008c54
   140008c46:	cmp    DWORD PTR [rbp-0x28],ebx
   140008c49:	mov    BYTE PTR [rsi+r14*1-0x1],bl
   140008c4e:	setge  bl
   140008c51:	lea    eax,[rbx-0x2]
   140008c54:	lea    r11,[rsp+0x50]
   140008c59:	mov    rbx,QWORD PTR [r11+0x20]
   140008c5d:	mov    rsi,QWORD PTR [r11+0x28]
   140008c61:	mov    rdi,QWORD PTR [r11+0x30]
   140008c65:	mov    rsp,r11
   140008c68:	pop    r15
   140008c6a:	pop    r14
   140008c6c:	pop    rbp
   140008c6d:	ret    
   140008c6e:	int3   
   140008c6f:	int3   
   140008c70:	sub    rsp,0x38
   140008c74:	mov    rax,QWORD PTR [rsp+0x60]
   140008c79:	mov    QWORD PTR [rsp+0x28],rax
   140008c7e:	and    QWORD PTR [rsp+0x20],0x0
   140008c84:	call   0x140008c90
   140008c89:	add    rsp,0x38
   140008c8d:	ret    
   140008c8e:	int3   
   140008c8f:	int3   
   140008c90:	mov    rax,rsp
   140008c93:	mov    QWORD PTR [rax+0x8],rbx
   140008c97:	mov    QWORD PTR [rax+0x10],rbp
   140008c9b:	mov    QWORD PTR [rax+0x18],rsi
   140008c9f:	mov    QWORD PTR [rax+0x20],rdi
   140008ca3:	push   r14
   140008ca5:	sub    rsp,0x30
   140008ca9:	mov    rbp,r9
   140008cac:	mov    rsi,r8
   140008caf:	mov    rdi,rdx
   140008cb2:	mov    rbx,rcx
   140008cb5:	test   r9,r9
   140008cb8:	je     0x140008daa
   140008cbe:	test   r8,r8
   140008cc1:	jne    0x140008cd8
   140008cc3:	test   rcx,rcx
   140008cc6:	jne    0x140008ce1
   140008cc8:	test   rdx,rdx
   140008ccb:	jne    0x140008daa
   140008cd1:	xor    eax,eax
   140008cd3:	jmp    0x140008dbd
   140008cd8:	test   rcx,rcx
   140008cdb:	je     0x140008daa
   140008ce1:	test   rdx,rdx
   140008ce4:	je     0x140008daa
   140008cea:	cmp    rdx,r8
   140008ced:	jbe    0x140008d3c
   140008cef:	call   0x14000b9f0
   140008cf4:	lea    r8,[rsi+0x1]
   140008cf8:	lea    rcx,[rip+0xc45d]        # 0x14001515c
   140008cff:	mov    edi,DWORD PTR [rax]
   140008d01:	mov    rax,QWORD PTR [rsp+0x68]
   140008d06:	mov    r9,rbp
   140008d09:	mov    QWORD PTR [rsp+0x28],rax
   140008d0e:	mov    rax,QWORD PTR [rsp+0x60]
   140008d13:	mov    rdx,rbx
   140008d16:	mov    QWORD PTR [rsp+0x20],rax
   140008d1b:	call   0x140008b88
   140008d20:	cmp    eax,0xfffffffe
   140008d23:	jne    0x140008d91
   140008d25:	call   0x14000b9f0
   140008d2a:	cmp    DWORD PTR [rax],0x22
   140008d2d:	jne    0x140008dba
   140008d33:	call   0x14000b9f0
   140008d38:	mov    DWORD PTR [rax],edi
   140008d3a:	jmp    0x140008dba
   140008d3c:	call   0x14000b9f0
   140008d41:	lea    rcx,[rip+0xc414]        # 0x14001515c
   140008d48:	mov    r9,rbp
   140008d4b:	mov    r14d,DWORD PTR [rax]
   140008d4e:	mov    rax,QWORD PTR [rsp+0x68]
   140008d53:	mov    r8,rdi
   140008d56:	mov    QWORD PTR [rsp+0x28],rax
   140008d5b:	mov    rax,QWORD PTR [rsp+0x60]
   140008d60:	mov    rdx,rbx
   140008d63:	mov    QWORD PTR [rsp+0x20],rax
   140008d68:	call   0x140008b88
   140008d6d:	mov    BYTE PTR [rbx+rdi*1-0x1],0x0
   140008d72:	cmp    eax,0xfffffffe
   140008d75:	jne    0x140008d91
   140008d77:	cmp    rsi,0xffffffffffffffff
   140008d7b:	jne    0x140008d95
   140008d7d:	call   0x14000b9f0
   140008d82:	cmp    DWORD PTR [rax],0x22
   140008d85:	jne    0x140008dba
   140008d87:	call   0x14000b9f0
   140008d8c:	mov    DWORD PTR [rax],r14d
   140008d8f:	jmp    0x140008dba
   140008d91:	test   eax,eax
   140008d93:	jns    0x140008dbd
   140008d95:	mov    BYTE PTR [rbx],0x0
   140008d98:	cmp    eax,0xfffffffe
   140008d9b:	jne    0x140008dba
   140008d9d:	call   0x14000b9f0
   140008da2:	mov    DWORD PTR [rax],0x22
   140008da8:	jmp    0x140008db5
   140008daa:	call   0x14000b9f0
   140008daf:	mov    DWORD PTR [rax],0x16
   140008db5:	call   0x14000b8b8
   140008dba:	or     eax,0xffffffff
   140008dbd:	mov    rbx,QWORD PTR [rsp+0x40]
   140008dc2:	mov    rbp,QWORD PTR [rsp+0x48]
   140008dc7:	mov    rsi,QWORD PTR [rsp+0x50]
   140008dcc:	mov    rdi,QWORD PTR [rsp+0x58]
   140008dd1:	add    rsp,0x30
   140008dd5:	pop    r14
   140008dd7:	ret    
   140008dd8:	sub    rsp,0x38
   140008ddc:	mov    QWORD PTR [rsp+0x28],r9
   140008de1:	and    QWORD PTR [rsp+0x20],0x0
   140008de7:	mov    r9,r8
   140008dea:	mov    r8,rdx
   140008ded:	mov    rdx,rcx
   140008df0:	lea    rcx,[rip+0xcebd]        # 0x140015cb4
   140008df7:	call   0x140008b88
   140008dfc:	or     ecx,0xffffffff
   140008dff:	test   eax,eax
   140008e01:	cmovs  eax,ecx
   140008e04:	add    rsp,0x38
   140008e08:	ret    
   140008e09:	int3   
   140008e0a:	int3   
   140008e0b:	int3   
   140008e0c:	sub    rsp,0x38
   140008e10:	mov    rax,QWORD PTR [rsp+0x60]
   140008e15:	mov    QWORD PTR [rsp+0x28],rax
   140008e1a:	mov    QWORD PTR [rsp+0x20],r9
   140008e1f:	mov    r9,r8
   140008e22:	mov    r8,rdx
   140008e25:	mov    rdx,rcx
   140008e28:	lea    rcx,[rip+0xce85]        # 0x140015cb4
   140008e2f:	call   0x140008b88
   140008e34:	or     ecx,0xffffffff
   140008e37:	test   eax,eax
   140008e39:	cmovs  eax,ecx
   140008e3c:	add    rsp,0x38
   140008e40:	ret    
   140008e41:	int3   
   140008e42:	int3   
   140008e43:	int3   
   140008e44:	rex push rbx
   140008e46:	sub    rsp,0x30
   140008e4a:	mov    rbx,rcx
   140008e4d:	test   r8,r8
   140008e50:	je     0x140008e99
   140008e52:	test   rcx,rcx
   140008e55:	je     0x140008e99
   140008e57:	test   rdx,rdx
   140008e5a:	je     0x140008e99
   140008e5c:	mov    rax,QWORD PTR [rsp+0x60]
   140008e61:	mov    QWORD PTR [rsp+0x28],rax
   140008e66:	mov    QWORD PTR [rsp+0x20],r9
   140008e6b:	mov    r9,r8
   140008e6e:	mov    r8,rdx
   140008e71:	mov    rdx,rcx
   140008e74:	lea    rcx,[rip+0xc2e1]        # 0x14001515c
   140008e7b:	call   0x140008b88
   140008e80:	test   eax,eax
   140008e82:	jns    0x140008e87
   140008e84:	mov    BYTE PTR [rbx],0x0
   140008e87:	cmp    eax,0xfffffffe
   140008e8a:	jne    0x140008eac
   140008e8c:	call   0x14000b9f0
   140008e91:	mov    DWORD PTR [rax],0x22
   140008e97:	jmp    0x140008ea4
   140008e99:	call   0x14000b9f0
   140008e9e:	mov    DWORD PTR [rax],0x16
   140008ea4:	call   0x14000b8b8
   140008ea9:	or     eax,0xffffffff
   140008eac:	add    rsp,0x30
   140008eb0:	pop    rbx
   140008eb1:	ret    
   140008eb2:	int3   
   140008eb3:	int3   
   140008eb4:	sub    rsp,0x38
   140008eb8:	mov    QWORD PTR [rsp+0x20],r9
   140008ebd:	xor    r9d,r9d
   140008ec0:	call   0x140008e44
   140008ec5:	add    rsp,0x38
   140008ec9:	ret    
   140008eca:	int3   
   140008ecb:	int3   
   140008ecc:	mov    QWORD PTR [rsp+0x8],rbx
   140008ed1:	mov    QWORD PTR [rsp+0x10],rsi
   140008ed6:	push   rdi
   140008ed7:	sub    rsp,0x20
   140008edb:	mov    ebx,DWORD PTR [rcx+0xc]
   140008ede:	mov    edi,edx
   140008ee0:	mov    rsi,rcx
   140008ee3:	test   ebx,ebx
   140008ee5:	je     0x140008f13
   140008ee7:	dec    ebx
   140008ee9:	call   0x140010d3c
   140008eee:	lea    rcx,[rbx+rbx*4]
   140008ef2:	mov    rax,QWORD PTR [rax+0x128]
   140008ef9:	lea    rdx,[rax+rcx*4]
   140008efd:	movsxd rax,DWORD PTR [rsi+0x10]
   140008f01:	add    rdx,rax
   140008f04:	cmp    edi,DWORD PTR [rdx+0x4]
   140008f07:	jle    0x140008ee3
   140008f09:	cmp    edi,DWORD PTR [rdx+0x8]
   140008f0c:	jg     0x140008ee3
   140008f0e:	mov    rax,rdx
   140008f11:	jmp    0x140008f15
   140008f13:	xor    eax,eax
   140008f15:	mov    rbx,QWORD PTR [rsp+0x30]
   140008f1a:	mov    rsi,QWORD PTR [rsp+0x38]
   140008f1f:	add    rsp,0x20
   140008f23:	pop    rdi
   140008f24:	ret    
   140008f25:	int3   
   140008f26:	int3   
   140008f27:	int3   
   140008f28:	mov    QWORD PTR [rsp+0x8],rbx
   140008f2d:	mov    QWORD PTR [rsp+0x10],rbp
   140008f32:	mov    QWORD PTR [rsp+0x18],rsi
   140008f37:	push   rdi
   140008f38:	sub    rsp,0x20
   140008f3c:	mov    rsi,rdx
   140008f3f:	mov    rdx,rcx
   140008f42:	mov    rcx,rsi
   140008f45:	call   0x140018bb8
   140008f4a:	mov    edi,DWORD PTR [rsi+0xc]
   140008f4d:	xor    ebx,ebx
   140008f4f:	mov    ebp,eax
   140008f51:	jmp    0x140008f7a
   140008f53:	dec    edi
   140008f55:	call   0x140010d3c
   140008f5a:	lea    rdx,[rdi+rdi*4]
   140008f5e:	mov    rax,QWORD PTR [rax+0x128]
   140008f65:	lea    rcx,[rax+rdx*4]
   140008f69:	movsxd rax,DWORD PTR [rsi+0x10]
   140008f6d:	add    rcx,rax
   140008f70:	cmp    ebp,DWORD PTR [rcx+0x4]
   140008f73:	jle    0x140008f7a
   140008f75:	cmp    ebp,DWORD PTR [rcx+0x8]
   140008f78:	jle    0x140008f81
   140008f7a:	test   edi,edi
   140008f7c:	jne    0x140008f53
   140008f7e:	mov    rcx,rbx
   140008f81:	mov    rbp,QWORD PTR [rsp+0x38]
   140008f86:	mov    rsi,QWORD PTR [rsp+0x40]
   140008f8b:	test   rcx,rcx
   140008f8e:	setne  bl
   140008f91:	mov    eax,ebx
   140008f93:	mov    rbx,QWORD PTR [rsp+0x30]
   140008f98:	add    rsp,0x20
   140008f9c:	pop    rdi
   140008f9d:	ret    
   140008f9e:	int3   
   140008f9f:	int3   
   140008fa0:	mov    QWORD PTR [rsp+0x10],rbx
   140008fa5:	mov    QWORD PTR [rsp+0x18],rbp
   140008faa:	push   rsi
   140008fab:	push   rdi
   140008fac:	push   r12
   140008fae:	push   r14
   140008fb0:	push   r15
   140008fb2:	sub    rsp,0x20
   140008fb6:	mov    edi,DWORD PTR [r8+0xc]
   140008fba:	mov    r12,rcx
   140008fbd:	mov    rcx,r8
   140008fc0:	mov    rsi,r9
   140008fc3:	mov    r14,r8
   140008fc6:	mov    r15,rdx
   140008fc9:	call   0x140018bb8
   140008fce:	mov    r10,QWORD PTR [r12]
   140008fd2:	mov    QWORD PTR [rsi],r10
   140008fd5:	mov    ebp,eax
   140008fd7:	test   edi,edi
   140008fd9:	je     0x14000904f
   140008fdb:	movsxd rax,DWORD PTR [r14+0x10]
   140008fdf:	dec    edi
   140008fe1:	lea    rdx,[rdi+rdi*4]
   140008fe5:	lea    rbx,[rax+rdx*4]
   140008fe9:	add    rbx,QWORD PTR [r15+0x8]
   140008fed:	cmp    ebp,DWORD PTR [rbx+0x4]
   140008ff0:	jle    0x140008fd7
   140008ff2:	cmp    ebp,DWORD PTR [rbx+0x8]
   140008ff5:	jg     0x140008fd7
   140008ff7:	mov    rcx,QWORD PTR [r15]
   140008ffa:	lea    rdx,[rsp+0x50]
   140008fff:	xor    r8d,r8d
   140009002:	call   QWORD PTR [rip+0x2c228]        # 0x140035230
   140009008:	movsxd r8,DWORD PTR [rbx+0x10]
   14000900c:	mov    r9d,DWORD PTR [rbx+0xc]
   140009010:	add    r8,QWORD PTR [rsp+0x50]
   140009015:	mov    r10d,DWORD PTR [rax]
   140009018:	xor    ecx,ecx
   14000901a:	test   r9d,r9d
   14000901d:	je     0x140009036
   14000901f:	lea    rdx,[r8+0xc]
   140009023:	movsxd rax,DWORD PTR [rdx]
   140009026:	cmp    rax,r10
   140009029:	je     0x140009036
   14000902b:	inc    ecx
   14000902d:	add    rdx,0x14
   140009031:	cmp    ecx,r9d
   140009034:	jb     0x140009023
   140009036:	cmp    ecx,r9d
   140009039:	jae    0x140008fd7
   14000903b:	mov    rax,QWORD PTR [r12]
   14000903f:	lea    rcx,[rcx+rcx*4]
   140009043:	movsxd rcx,DWORD PTR [r8+rcx*4+0x10]
   140009048:	mov    rcx,QWORD PTR [rcx+rax*1]
   14000904c:	mov    QWORD PTR [rsi],rcx
   14000904f:	mov    rbx,QWORD PTR [rsp+0x58]
   140009054:	mov    rbp,QWORD PTR [rsp+0x60]
   140009059:	mov    rax,rsi
   14000905c:	add    rsp,0x20
   140009060:	pop    r15
   140009062:	pop    r14
   140009064:	pop    r12
   140009066:	pop    rdi
   140009067:	pop    rsi
   140009068:	ret    
   140009069:	int3   
   14000906a:	int3   
   14000906b:	int3   
   14000906c:	mov    rax,rsp
   14000906f:	mov    QWORD PTR [rax+0x8],rbx
   140009073:	mov    QWORD PTR [rax+0x10],rbp
   140009077:	mov    QWORD PTR [rax+0x18],rsi
   14000907b:	mov    QWORD PTR [rax+0x20],rdi
   14000907f:	push   r12
   140009081:	push   r14
   140009083:	push   r15
   140009085:	sub    rsp,0x20
   140009089:	mov    edi,DWORD PTR [rdx+0xc]
   14000908c:	mov    rbp,QWORD PTR [rsp+0x70]
   140009091:	mov    rbx,rdx
   140009094:	mov    rcx,rbx
   140009097:	mov    rdx,rbp
   14000909a:	mov    r12d,r9d
   14000909d:	xor    esi,esi
   14000909f:	call   0x140018bb8
   1400090a4:	mov    r14d,eax
   1400090a7:	test   edi,edi
   1400090a9:	jne    0x1400090b0
   1400090ab:	call   0x140018c4c
   1400090b0:	mov    r10,QWORD PTR [rsp+0x68]
   1400090b5:	mov    r8,QWORD PTR [rsp+0x60]
   1400090ba:	mov    edx,edi
   1400090bc:	or     DWORD PTR [r10],0xffffffff
   1400090c0:	or     DWORD PTR [r8],0xffffffff
   1400090c4:	test   edi,edi
   1400090c6:	je     0x1400090f2
   1400090c8:	mov    r11,QWORD PTR [rbp+0x8]
   1400090cc:	movsxd r15,DWORD PTR [rbx+0x10]
   1400090d0:	lea    r9d,[rdx-0x1]
   1400090d4:	lea    rcx,[r9+r9*4]
   1400090d8:	lea    rax,[r11+rcx*4]
   1400090dc:	cmp    r14d,DWORD PTR [rax+r15*1+0x4]
   1400090e1:	jle    0x1400090ea
   1400090e3:	cmp    r14d,DWORD PTR [rax+r15*1+0x8]
   1400090e8:	jle    0x1400090f2
   1400090ea:	mov    edx,r9d
   1400090ed:	test   r9d,r9d
   1400090f0:	jne    0x1400090d0
   1400090f2:	test   edx,edx
   1400090f4:	je     0x140009109
   1400090f6:	lea    eax,[rdx-0x1]
   1400090f9:	lea    rdx,[rax+rax*4]
   1400090fd:	movsxd rax,DWORD PTR [rbx+0x10]
   140009101:	lea    rsi,[rax+rdx*4]
   140009105:	add    rsi,QWORD PTR [rbp+0x8]
   140009109:	xor    edx,edx
   14000910b:	test   edi,edi
   14000910d:	je     0x14000916f
   14000910f:	xor    r9d,r9d
   140009112:	movsxd rcx,DWORD PTR [rbx+0x10]
   140009116:	add    rcx,r9
   140009119:	add    rcx,QWORD PTR [rbp+0x8]
   14000911d:	test   rsi,rsi
   140009120:	je     0x140009131
   140009122:	mov    eax,DWORD PTR [rsi+0x4]
   140009125:	cmp    DWORD PTR [rcx],eax
   140009127:	jle    0x14000914b
   140009129:	mov    eax,DWORD PTR [rsi+0x8]
   14000912c:	cmp    DWORD PTR [rcx+0x4],eax
   14000912f:	jg     0x14000914b
   140009131:	cmp    r12d,DWORD PTR [rcx]
   140009134:	jl     0x14000914b
   140009136:	cmp    r12d,DWORD PTR [rcx+0x4]
   14000913a:	jg     0x14000914b
   14000913c:	cmp    DWORD PTR [r8],0xffffffff
   140009140:	jne    0x140009145
   140009142:	mov    DWORD PTR [r8],edx
   140009145:	lea    eax,[rdx+0x1]
   140009148:	mov    DWORD PTR [r10],eax
   14000914b:	inc    edx
   14000914d:	add    r9,0x14
   140009151:	cmp    edx,edi
   140009153:	jb     0x140009112
   140009155:	mov    eax,DWORD PTR [r8]
   140009158:	cmp    eax,0xffffffff
   14000915b:	je     0x14000916f
   14000915d:	lea    rcx,[rax+rax*4]
   140009161:	movsxd rax,DWORD PTR [rbx+0x10]
   140009165:	lea    rax,[rax+rcx*4]
   140009169:	add    rax,QWORD PTR [rbp+0x8]
   14000916d:	jmp    0x140009179
   14000916f:	and    DWORD PTR [r8],0x0
   140009173:	and    DWORD PTR [r10],0x0
   140009177:	xor    eax,eax
   140009179:	mov    rbx,QWORD PTR [rsp+0x40]
   14000917e:	mov    rbp,QWORD PTR [rsp+0x48]
   140009183:	mov    rsi,QWORD PTR [rsp+0x50]
   140009188:	mov    rdi,QWORD PTR [rsp+0x58]
   14000918d:	add    rsp,0x20
   140009191:	pop    r15
   140009193:	pop    r14
   140009195:	pop    r12
   140009197:	ret    
   140009198:	mov    QWORD PTR [rsp+0x8],rbx
   14000919d:	mov    QWORD PTR [rsp+0x10],rbp
   1400091a2:	push   rsi
   1400091a3:	push   rdi
   1400091a4:	push   r14
   1400091a6:	sub    rsp,0x20
   1400091aa:	lea    r9,[rsp+0x50]
   1400091af:	mov    rdi,r8
   1400091b2:	mov    rbp,rdx
   1400091b5:	call   0x140008fa0
   1400091ba:	mov    rdx,rbp
   1400091bd:	mov    rcx,rdi
   1400091c0:	mov    r14,rax
   1400091c3:	call   0x140018bb8
   1400091c8:	mov    ebx,DWORD PTR [rdi+0xc]
   1400091cb:	mov    esi,eax
   1400091cd:	jmp    0x1400091f6
   1400091cf:	dec    ebx
   1400091d1:	call   0x140010d3c
   1400091d6:	lea    rdx,[rbx+rbx*4]
   1400091da:	mov    rax,QWORD PTR [rax+0x128]
   1400091e1:	lea    rcx,[rax+rdx*4]
   1400091e5:	movsxd rax,DWORD PTR [rdi+0x10]
   1400091e9:	add    rcx,rax
   1400091ec:	cmp    esi,DWORD PTR [rcx+0x4]
   1400091ef:	jle    0x1400091f6
   1400091f1:	cmp    esi,DWORD PTR [rcx+0x8]
   1400091f4:	jle    0x1400091fc
   1400091f6:	test   ebx,ebx
   1400091f8:	jne    0x1400091cf
   1400091fa:	xor    ecx,ecx
   1400091fc:	test   rcx,rcx
   1400091ff:	jne    0x140009207
   140009201:	or     r9d,0xffffffff
   140009205:	jmp    0x14000920b
   140009207:	mov    r9d,DWORD PTR [rcx+0x4]
   14000920b:	mov    r8,rdi
   14000920e:	mov    rdx,rbp
   140009211:	mov    rcx,r14
   140009214:	call   0x1400185a0
   140009219:	mov    rbx,QWORD PTR [rsp+0x40]
   14000921e:	mov    rbp,QWORD PTR [rsp+0x48]
   140009223:	add    rsp,0x20
   140009227:	pop    r14
   140009229:	pop    rdi
   14000922a:	pop    rsi
   14000922b:	ret    
   14000922c:	mov    QWORD PTR [rsp+0x8],rbx
   140009231:	mov    QWORD PTR [rsp+0x10],rbp
   140009236:	mov    QWORD PTR [rsp+0x18],rsi
   14000923b:	push   rdi
   14000923c:	sub    rsp,0x40
   140009240:	mov    rsi,r9
   140009243:	mov    rbp,r8
   140009246:	mov    rbx,rdx
   140009249:	mov    rdi,rcx
   14000924c:	call   0x140010d3c
   140009251:	mov    QWORD PTR [rax+0x138],rbx
   140009258:	mov    rbx,QWORD PTR [rdi]
   14000925b:	call   0x140010d3c
   140009260:	mov    rdx,QWORD PTR [rbx+0x38]
   140009264:	mov    rcx,QWORD PTR [rsp+0x78]
   140009269:	mov    r9,QWORD PTR [rsp+0x70]
   14000926e:	mov    DWORD PTR [rsp+0x38],0x1
   140009276:	mov    QWORD PTR [rax+0x130],rdx
   14000927d:	xor    ebx,ebx
   14000927f:	mov    QWORD PTR [rsp+0x30],rbx
   140009284:	mov    DWORD PTR [rsp+0x28],ebx
   140009288:	mov    QWORD PTR [rsp+0x20],rcx
   14000928d:	mov    rcx,QWORD PTR [rdi]
   140009290:	mov    r8,rsi
   140009293:	mov    rdx,rbp
   140009296:	call   0x1400187c8
   14000929b:	call   0x140010d3c
   1400092a0:	mov    rcx,QWORD PTR [rsp+0x80]
   1400092a8:	mov    rbp,QWORD PTR [rsp+0x58]
   1400092ad:	mov    rsi,QWORD PTR [rsp+0x60]
   1400092b2:	mov    QWORD PTR [rax+0x138],rbx
   1400092b9:	lea    eax,[rbx+0x1]
   1400092bc:	mov    rbx,QWORD PTR [rsp+0x50]
   1400092c1:	mov    DWORD PTR [rcx],0x1
   1400092c7:	add    rsp,0x40
   1400092cb:	pop    rdi
   1400092cc:	ret    
   1400092cd:	int3   
   1400092ce:	int3   
   1400092cf:	int3   
   1400092d0:	mov    rax,rsp
   1400092d3:	mov    QWORD PTR [rax+0x20],r9
   1400092d7:	mov    QWORD PTR [rax+0x18],r8
   1400092db:	mov    QWORD PTR [rax+0x10],rdx
   1400092df:	mov    QWORD PTR [rax+0x8],rcx
   1400092e3:	push   rbx
   1400092e4:	sub    rsp,0x60
   1400092e8:	mov    rbx,rcx
   1400092eb:	and    DWORD PTR [rax-0x28],0x0
   1400092ef:	mov    QWORD PTR [rax-0x20],rcx
   1400092f3:	mov    QWORD PTR [rax-0x18],r8
   1400092f7:	call   0x140010d3c
   1400092fc:	mov    r8,QWORD PTR [rax+0xe0]
   140009303:	lea    rdx,[rsp+0x48]
   140009308:	mov    ecx,DWORD PTR [rbx]
   14000930a:	call   r8
   14000930d:	mov    DWORD PTR [rsp+0x40],0x0
   140009315:	jmp    0x140009317
   140009317:	mov    eax,DWORD PTR [rsp+0x40]
   14000931b:	add    rsp,0x60
   14000931f:	pop    rbx
   140009320:	ret    
   140009321:	int3   
   140009322:	int3   
   140009323:	int3   
   140009324:	rex push rbx
   140009326:	sub    rsp,0x20
   14000932a:	mov    rbx,rcx
   14000932d:	mov    QWORD PTR [rcx],rdx
   140009330:	call   0x140010d3c
   140009335:	cmp    rbx,QWORD PTR [rax+0x120]
   14000933c:	jae    0x14000934c
   14000933e:	call   0x140010d3c
   140009343:	mov    rcx,QWORD PTR [rax+0x120]
   14000934a:	jmp    0x14000934e
   14000934c:	xor    ecx,ecx
   14000934e:	mov    QWORD PTR [rbx+0x8],rcx
   140009352:	call   0x140010d3c
   140009357:	mov    QWORD PTR [rax+0x120],rbx
   14000935e:	mov    rax,rbx
   140009361:	add    rsp,0x20
   140009365:	pop    rbx
   140009366:	ret    
   140009367:	int3   
   140009368:	mov    QWORD PTR [rsp+0x8],rbx
   14000936d:	push   rdi
   14000936e:	sub    rsp,0x20
   140009372:	mov    rdi,rcx
   140009375:	call   0x140010d3c
   14000937a:	cmp    rdi,QWORD PTR [rax+0x120]
   140009381:	je     0x140009388
   140009383:	call   0x140018c4c
   140009388:	call   0x140010d3c
   14000938d:	mov    rbx,QWORD PTR [rax+0x120]
   140009394:	jmp    0x14000939f
   140009396:	cmp    rdi,rbx
   140009399:	je     0x1400093b4
   14000939b:	mov    rbx,QWORD PTR [rbx+0x8]
   14000939f:	test   rbx,rbx
   1400093a2:	jne    0x140009396
   1400093a4:	call   0x140018c4c
   1400093a9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400093ae:	add    rsp,0x20
   1400093b2:	pop    rdi
   1400093b3:	ret    
   1400093b4:	call   0x140010d3c
   1400093b9:	mov    rcx,QWORD PTR [rbx+0x8]
   1400093bd:	mov    QWORD PTR [rax+0x120],rcx
   1400093c4:	jmp    0x1400093a9
   1400093c6:	int3   
   1400093c7:	int3   
   1400093c8:	sub    rsp,0x28
   1400093cc:	call   0x140010d3c
   1400093d1:	mov    rax,QWORD PTR [rax+0x128]
   1400093d8:	add    rsp,0x28
   1400093dc:	ret    
   1400093dd:	int3   
   1400093de:	int3   
   1400093df:	int3   
   1400093e0:	sub    rsp,0x28
   1400093e4:	call   0x140010d3c
   1400093e9:	mov    rax,QWORD PTR [rax+0x130]
   1400093f0:	add    rsp,0x28
   1400093f4:	ret    
   1400093f5:	int3   
   1400093f6:	int3   
   1400093f7:	int3   
   1400093f8:	rex push rbx
   1400093fa:	sub    rsp,0x20
   1400093fe:	mov    rbx,rcx
   140009401:	call   0x140010d3c
   140009406:	mov    rdx,QWORD PTR [rax+0x120]
   14000940d:	jmp    0x140009418
   14000940f:	cmp    QWORD PTR [rdx],rbx
   140009412:	je     0x140009426
   140009414:	mov    rdx,QWORD PTR [rdx+0x8]
   140009418:	test   rdx,rdx
   14000941b:	jne    0x14000940f
   14000941d:	lea    eax,[rdx+0x1]
   140009420:	add    rsp,0x20
   140009424:	pop    rbx
   140009425:	ret    
   140009426:	xor    eax,eax
   140009428:	jmp    0x140009420
   14000942a:	int3   
   14000942b:	int3   
   14000942c:	mov    r8d,0x4d0
   140009432:	jmp    0x14000b1c0
   140009437:	int3   
   140009438:	rex push rbx
   14000943a:	sub    rsp,0x20
   14000943e:	mov    rbx,rcx
   140009441:	call   0x140010d3c
   140009446:	mov    QWORD PTR [rax+0x128],rbx
   14000944d:	add    rsp,0x20
   140009451:	pop    rbx
   140009452:	ret    
   140009453:	int3   
   140009454:	rex push rbx
   140009456:	sub    rsp,0x20
   14000945a:	mov    rbx,rcx
   14000945d:	call   0x140010d3c
   140009462:	mov    QWORD PTR [rax+0x130],rbx
   140009469:	add    rsp,0x20
   14000946d:	pop    rbx
   14000946e:	ret    
   14000946f:	int3   
   140009470:	rex push rbp
   140009472:	lea    rbp,[rsp-0x4b0]
   14000947a:	sub    rsp,0x5b0
   140009481:	mov    rax,QWORD PTR [rip+0x3bde8]        # 0x140045270
   140009488:	xor    rax,rsp
   14000948b:	mov    QWORD PTR [rbp+0x4a0],rax
   140009492:	mov    r10,QWORD PTR [rbp+0x4f8]
   140009499:	lea    rax,[rip+0x2ebb0]        # 0x140038050
   1400094a0:	mov    r11,rcx
   1400094a3:	lea    rcx,[rsp+0x30]
   1400094a8:	movups xmm0,XMMWORD PTR [rax]
   1400094ab:	movups xmm1,XMMWORD PTR [rax+0x10]
   1400094af:	movups XMMWORD PTR [rcx],xmm0
   1400094b2:	movups xmm0,XMMWORD PTR [rax+0x20]
   1400094b6:	movups XMMWORD PTR [rcx+0x10],xmm1
   1400094ba:	movups xmm1,XMMWORD PTR [rax+0x30]
   1400094be:	movups XMMWORD PTR [rcx+0x20],xmm0
   1400094c2:	movups xmm0,XMMWORD PTR [rax+0x40]
   1400094c6:	movups XMMWORD PTR [rcx+0x30],xmm1
   1400094ca:	movups xmm1,XMMWORD PTR [rax+0x50]
   1400094ce:	movups XMMWORD PTR [rcx+0x40],xmm0
   1400094d2:	movups xmm0,XMMWORD PTR [rax+0x60]
   1400094d6:	movups XMMWORD PTR [rcx+0x50],xmm1
   1400094da:	movups xmm1,XMMWORD PTR [rax+0x80]
   1400094e1:	movups XMMWORD PTR [rcx+0x60],xmm0
   1400094e5:	movups xmm0,XMMWORD PTR [rax+0x70]
   1400094e9:	mov    rax,QWORD PTR [rax+0x90]
   1400094f0:	movups XMMWORD PTR [rcx+0x70],xmm0
   1400094f4:	movups XMMWORD PTR [rcx+0x80],xmm1
   1400094fb:	mov    QWORD PTR [rcx+0x90],rax
   140009502:	mov    rcx,QWORD PTR [r11]
   140009505:	lea    rax,[rip+0xe9d8]        # 0x140017ee4
   14000950c:	mov    QWORD PTR [rsp+0x50],rax
   140009511:	mov    rax,QWORD PTR [rbp+0x4e0]
   140009518:	mov    QWORD PTR [rbp-0x80],rdx
   14000951c:	mov    rdx,QWORD PTR [r10]
   14000951f:	mov    QWORD PTR [rsp+0x60],rax
   140009524:	movsxd rax,DWORD PTR [rbp+0x4e8]
   14000952b:	mov    QWORD PTR [rsp+0x68],rax
   140009530:	mov    rax,QWORD PTR [rbp+0x4f0]
   140009537:	mov    QWORD PTR [rsp+0x70],r8
   14000953c:	mov    QWORD PTR [rsp+0x78],rax
   140009541:	movzx  eax,BYTE PTR [rbp+0x500]
   140009548:	mov    QWORD PTR [rsp+0x58],r9
   14000954d:	mov    QWORD PTR [rbp-0x78],rax
   140009551:	mov    rax,QWORD PTR [r10+0x40]
   140009555:	lea    r8,[rsp+0x30]
   14000955a:	mov    QWORD PTR [rsp+0x28],rax
   14000955f:	lea    rax,[rbp-0x30]
   140009563:	xor    r9d,r9d
   140009566:	mov    QWORD PTR [rsp+0x20],rax
   14000956b:	mov    QWORD PTR [rbp-0x70],0x19930520
   140009573:	call   QWORD PTR [rip+0x2bcbf]        # 0x140035238
   140009579:	mov    rcx,QWORD PTR [rbp+0x4a0]
   140009580:	xor    rcx,rsp
   140009583:	call   0x1400097d0
   140009588:	add    rsp,0x5b0
   14000958f:	pop    rbp
   140009590:	ret    
   140009591:	int3   
   140009592:	int3   
   140009593:	int3   
   140009594:	mov    QWORD PTR [rsp+0x10],rbx
   140009599:	mov    QWORD PTR [rsp+0x18],rsi
   14000959e:	push   rdi
   14000959f:	sub    rsp,0x40
   1400095a3:	mov    rbx,r9
   1400095a6:	mov    rdi,r8
   1400095a9:	mov    rsi,rcx
   1400095ac:	mov    QWORD PTR [rsp+0x50],rdx
   1400095b1:	call   0x140010d3c
   1400095b6:	mov    rdx,QWORD PTR [rbx+0x8]
   1400095ba:	mov    QWORD PTR [rax+0x128],rdx
   1400095c1:	call   0x140010d3c
   1400095c6:	mov    rdx,QWORD PTR [rsi+0x38]
   1400095ca:	mov    QWORD PTR [rax+0x130],rdx
   1400095d1:	call   0x140010d3c
   1400095d6:	mov    rdx,QWORD PTR [rbx+0x38]
   1400095da:	mov    r8d,DWORD PTR [rdx]
   1400095dd:	lea    rdx,[rsp+0x50]
   1400095e2:	mov    r9,rbx
   1400095e5:	add    r8,QWORD PTR [rax+0x128]
   1400095ec:	xor    eax,eax
   1400095ee:	mov    rcx,rsi
   1400095f1:	mov    DWORD PTR [rsp+0x38],eax
   1400095f5:	mov    QWORD PTR [rsp+0x30],rax
   1400095fa:	mov    DWORD PTR [rsp+0x28],eax
   1400095fe:	mov    QWORD PTR [rsp+0x20],r8
   140009603:	mov    r8,rdi
   140009606:	call   0x1400187c8
   14000960b:	mov    rbx,QWORD PTR [rsp+0x58]
   140009610:	mov    rsi,QWORD PTR [rsp+0x60]
   140009615:	add    rsp,0x40
   140009619:	pop    rdi
   14000961a:	ret    
   14000961b:	int3   
   14000961c:	jmp    0x140009624
   140009621:	int3   
   140009622:	int3   
   140009623:	int3   
   140009624:	mov    QWORD PTR [rsp+0x10],rbx
   140009629:	mov    QWORD PTR [rsp+0x18],rsi
   14000962e:	push   rdi
   14000962f:	sub    rsp,0x40
   140009633:	mov    rbx,r9
   140009636:	mov    rdi,r8
   140009639:	mov    rsi,rcx
   14000963c:	mov    QWORD PTR [rsp+0x50],rdx
   140009641:	call   0x140010d3c
   140009646:	mov    rdx,QWORD PTR [rbx+0x8]
   14000964a:	mov    QWORD PTR [rax+0x128],rdx
   140009651:	call   0x140010d3c
   140009656:	mov    rdx,QWORD PTR [rsi+0x38]
   14000965a:	mov    QWORD PTR [rax+0x130],rdx
   140009661:	call   0x140010d3c
   140009666:	mov    rdx,QWORD PTR [rbx+0x38]
   14000966a:	mov    r8d,DWORD PTR [rdx]
   14000966d:	lea    rdx,[rsp+0x50]
   140009672:	mov    r9,rbx
   140009675:	add    r8,QWORD PTR [rax+0x128]
   14000967c:	xor    eax,eax
   14000967e:	mov    rcx,rsi
   140009681:	mov    DWORD PTR [rsp+0x38],eax
   140009685:	mov    QWORD PTR [rsp+0x30],rax
   14000968a:	mov    DWORD PTR [rsp+0x28],eax
   14000968e:	mov    QWORD PTR [rsp+0x20],r8
   140009693:	mov    r8,rdi
   140009696:	call   0x1400187c8
   14000969b:	mov    rbx,QWORD PTR [rsp+0x58]
   1400096a0:	mov    rsi,QWORD PTR [rsp+0x60]
   1400096a5:	add    rsp,0x40
   1400096a9:	pop    rdi
   1400096aa:	ret    
   1400096ab:	int3   
   1400096ac:	sub    rsp,0x28
   1400096b0:	mov    r8,QWORD PTR [r9+0x38]
   1400096b4:	mov    rcx,rdx
   1400096b7:	mov    rdx,r9
   1400096ba:	call   0x1400096cc
   1400096bf:	mov    eax,0x1
   1400096c4:	add    rsp,0x28
   1400096c8:	ret    
   1400096c9:	int3   
   1400096ca:	int3   
   1400096cb:	int3   
   1400096cc:	rex push rbx
   1400096ce:	sub    rsp,0x20
   1400096d2:	mov    r11d,DWORD PTR [r8]
   1400096d5:	mov    rbx,rdx
   1400096d8:	mov    r9,rcx
   1400096db:	and    r11d,0xfffffff8
   1400096df:	test   BYTE PTR [r8],0x4
   1400096e3:	mov    r10,rcx
   1400096e6:	je     0x1400096fb
   1400096e8:	mov    eax,DWORD PTR [r8+0x8]
   1400096ec:	movsxd r10,DWORD PTR [r8+0x4]
   1400096f0:	neg    eax
   1400096f2:	add    r10,rcx
   1400096f5:	movsxd rcx,eax
   1400096f8:	and    r10,rcx
   1400096fb:	movsxd rax,r11d
   1400096fe:	mov    rdx,QWORD PTR [rax+r10*1]
   140009702:	mov    rax,QWORD PTR [rbx+0x10]
   140009706:	mov    ecx,DWORD PTR [rax+0x8]
   140009709:	add    rcx,QWORD PTR [rbx+0x8]
   14000970d:	test   BYTE PTR [rcx+0x3],0xf
   140009711:	je     0x14000971f
   140009713:	movzx  eax,BYTE PTR [rcx+0x3]
   140009717:	and    eax,0xfffffff0
   14000971a:	cdqe   
   14000971c:	add    r9,rax
   14000971f:	xor    r9,rdx
   140009722:	mov    rcx,r9
   140009725:	add    rsp,0x20
   140009729:	pop    rbx
   14000972a:	jmp    0x1400097d0
   14000972f:	int3   
   140009730:	mov    rax,rsp
   140009733:	mov    QWORD PTR [rax+0x8],rbx
   140009737:	mov    QWORD PTR [rax+0x10],rbp
   14000973b:	mov    QWORD PTR [rax+0x18],rsi
   14000973f:	mov    QWORD PTR [rax+0x20],rdi
   140009743:	push   r14
   140009745:	sub    rsp,0x20
   140009749:	mov    rbx,QWORD PTR [r9+0x38]
   14000974d:	mov    rsi,rdx
   140009750:	mov    r14,r8
   140009753:	mov    rbp,rcx
   140009756:	lea    r8,[rbx+0x4]
   14000975a:	mov    rdx,r9
   14000975d:	mov    rcx,rsi
   140009760:	mov    rdi,r9
   140009763:	call   0x1400096cc
   140009768:	mov    r11d,DWORD PTR [rbx+0x4]
   14000976c:	mov    r10d,DWORD PTR [rbp+0x4]
   140009770:	mov    eax,r11d
   140009773:	and    r11d,0x2
   140009777:	mov    r8d,0x1
   14000977d:	and    eax,r8d
   140009780:	and    r10b,0x66
   140009784:	cmove  r11d,eax
   140009788:	test   r11d,r11d
   14000978b:	je     0x1400097a1
   14000978d:	mov    r9,rdi
   140009790:	mov    r8,r14
   140009793:	mov    rdx,rsi
   140009796:	mov    rcx,rbp
   140009799:	call   0x140009624
   14000979e:	mov    r8d,eax
   1400097a1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400097a6:	mov    rbp,QWORD PTR [rsp+0x38]
   1400097ab:	mov    rsi,QWORD PTR [rsp+0x40]
   1400097b0:	mov    rdi,QWORD PTR [rsp+0x48]
   1400097b5:	mov    eax,r8d
   1400097b8:	add    rsp,0x20
   1400097bc:	pop    r14
   1400097be:	ret    
   1400097bf:	int3   
   1400097c0:	int3   
   1400097c1:	int3   
   1400097c2:	int3   
   1400097c3:	int3   
   1400097c4:	int3   
   1400097c5:	int3   
   1400097c6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400097d0:	cmp    rcx,QWORD PTR [rip+0x3ba99]        # 0x140045270
   1400097d7:	jne    0x1400097ea
   1400097d9:	rol    rcx,0x10
   1400097dd:	test   cx,0xffff
   1400097e2:	jne    0x1400097e6
   1400097e4:	repz ret 
   1400097e6:	ror    rcx,0x10
   1400097ea:	jmp    0x140018d18
   1400097ef:	int3   
   1400097f0:	int3   
   1400097f1:	int3   
   1400097f2:	int3   
   1400097f3:	int3   
   1400097f4:	int3   
   1400097f5:	int3   
   1400097f6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140009800:	mov    r11,rcx
   140009803:	movzx  edx,dl
   140009806:	cmp    r8,0x10
   14000980a:	jb     0x14000996c
   140009810:	bt     DWORD PTR [rip+0x3e76c],0x1        # 0x140047f84
   140009818:	jae    0x140009828
   14000981a:	push   rdi
   14000981b:	mov    rdi,rcx
   14000981e:	mov    eax,edx
   140009820:	mov    rcx,r8
   140009823:	rep stos BYTE PTR es:[rdi],al
   140009825:	pop    rdi
   140009826:	jmp    0x140009895
   140009828:	movabs r9,0x101010101010101
   140009832:	imul   rdx,r9
   140009836:	bt     DWORD PTR [rip+0x3e746],0x2        # 0x140047f84
   14000983e:	jb     0x1400098e0
   140009844:	cmp    r8,0x40
   140009848:	jb     0x140009868
   14000984a:	neg    rcx
   14000984d:	and    ecx,0x7
   140009850:	je     0x140009858
   140009852:	sub    r8,rcx
   140009855:	mov    QWORD PTR [r11],rdx
   140009858:	add    rcx,r11
   14000985b:	mov    r9,r8
   14000985e:	and    r8,0x3f
   140009862:	shr    r9,0x6
   140009866:	jne    0x1400098a7
   140009868:	mov    r9,r8
   14000986b:	and    r8,0x7
   14000986f:	shr    r9,0x3
   140009873:	je     0x140009886
   140009875:	data16 data16 xchg ax,ax
   140009879:	nop
   14000987a:	mov    QWORD PTR [rcx],rdx
   14000987d:	add    rcx,0x8
   140009881:	dec    r9
   140009884:	jne    0x14000987a
   140009886:	test   r8,r8
   140009889:	je     0x140009895
   14000988b:	mov    BYTE PTR [rcx],dl
   14000988d:	inc    rcx
   140009890:	dec    r8
   140009893:	jne    0x14000988b
   140009895:	mov    rax,r11
   140009898:	ret    
   140009899:	nop    DWORD PTR [rax+0x0]
   1400098a0:	data16 data16 xchg ax,ax
   1400098a4:	data16 xchg ax,ax
   1400098a7:	mov    QWORD PTR [rcx],rdx
   1400098aa:	mov    QWORD PTR [rcx+0x8],rdx
   1400098ae:	mov    QWORD PTR [rcx+0x10],rdx
   1400098b2:	add    rcx,0x40
   1400098b6:	mov    QWORD PTR [rcx-0x28],rdx
   1400098ba:	mov    QWORD PTR [rcx-0x20],rdx
   1400098be:	dec    r9
   1400098c1:	mov    QWORD PTR [rcx-0x18],rdx
   1400098c5:	mov    QWORD PTR [rcx-0x10],rdx
   1400098c9:	mov    QWORD PTR [rcx-0x8],rdx
   1400098cd:	jne    0x1400098a7
   1400098cf:	jmp    0x140009868
   1400098d1:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400098e0:	movq   xmm0,rdx
   1400098e5:	punpcklbw xmm0,xmm0
   1400098e9:	test   cl,0xf
   1400098ec:	je     0x140009904
   1400098ee:	movups XMMWORD PTR [rcx],xmm0
   1400098f1:	mov    rax,rcx
   1400098f4:	and    rax,0xf
   1400098f8:	add    rcx,0x10
   1400098fc:	sub    rcx,rax
   1400098ff:	lea    r8,[rax+r8*1-0x10]
   140009904:	mov    r9,r8
   140009907:	shr    r9,0x7
   14000990b:	je     0x14000993f
   14000990d:	jmp    0x140009910
   14000990f:	nop
   140009910:	movaps XMMWORD PTR [rcx],xmm0
   140009913:	movaps XMMWORD PTR [rcx+0x10],xmm0
   140009917:	add    rcx,0x80
   14000991e:	movaps XMMWORD PTR [rcx-0x60],xmm0
   140009922:	movaps XMMWORD PTR [rcx-0x50],xmm0
   140009926:	dec    r9
   140009929:	movaps XMMWORD PTR [rcx-0x40],xmm0
   14000992d:	movaps XMMWORD PTR [rcx-0x30],xmm0
   140009931:	movaps XMMWORD PTR [rcx-0x20],xmm0
   140009935:	movaps XMMWORD PTR [rcx-0x10],xmm0
   140009939:	jne    0x140009910
   14000993b:	and    r8,0x7f
   14000993f:	mov    r9,r8
   140009942:	shr    r9,0x4
   140009946:	je     0x14000995c
   140009948:	nop    DWORD PTR [rax+rax*1+0x0]
   140009950:	movaps XMMWORD PTR [rcx],xmm0
   140009953:	add    rcx,0x10
   140009957:	dec    r9
   14000995a:	jne    0x140009950
   14000995c:	and    r8,0xf
   140009960:	je     0x140009968
   140009962:	movups XMMWORD PTR [r8+rcx*1-0x10],xmm0
   140009968:	mov    rax,r11
   14000996b:	ret    
   14000996c:	movabs r9,0x101010101010101
   140009976:	imul   rdx,r9
   14000997a:	lea    r9,[rip+0xffffffffffff667f]        # 0x140000000
   140009981:	mov    eax,DWORD PTR [r9+r8*4+0x9995]
   140009989:	add    r9,rax
   14000998c:	add    rcx,r8
   14000998f:	mov    rax,r11
   140009992:	jmp    r9
   140009995:	out    dx,al
   140009996:	cdq    
   140009997:	add    BYTE PTR [rax],al
   140009999:	jmp    0x140009934
   14000999b:	add    BYTE PTR [rax],al
   14000999d:	cld    
   14000999e:	cdq    
   14000999f:	add    BYTE PTR [rax],al
   1400099a1:	out    0x99,eax
   1400099a3:	add    BYTE PTR [rax],al
   1400099a5:	adc    BYTE PTR [rdx-0x65fb0000],bl
   1400099ab:	add    BYTE PTR [rax],al
   1400099ad:	stc    
   1400099ae:	cdq    
   1400099af:	add    BYTE PTR [rax],al
   1400099b1:	in     al,0x99
   1400099b3:	add    BYTE PTR [rax],al
   1400099b5:	and    eax,0x1d00009a
   1400099ba:	(bad)  
   1400099bb:	add    BYTE PTR [rax],al
   1400099bd:	adc    al,0x9a
   1400099bf:	add    BYTE PTR [rax],al
   1400099c1:	out    dx,eax
   1400099c2:	cdq    
   1400099c3:	add    BYTE PTR [rax],al
   1400099c5:	or     al,0x9a
   1400099c7:	add    BYTE PTR [rax],al
   1400099c9:	add    DWORD PTR [rdx-0x660b0000],ebx
   1400099cf:	add    BYTE PTR [rax],al
   1400099d1:	loopne 0x14000996c
   1400099d3:	add    BYTE PTR [rax],al
   1400099d5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400099e0:	mov    QWORD PTR [rcx-0xf],rdx
   1400099e4:	mov    DWORD PTR [rcx-0x7],edx
   1400099e7:	mov    WORD PTR [rcx-0x3],dx
   1400099eb:	mov    BYTE PTR [rcx-0x1],dl
   1400099ee:	ret    
   1400099ef:	mov    QWORD PTR [rcx-0xb],rdx
   1400099f3:	jmp    0x1400099e7
   1400099f5:	mov    QWORD PTR [rcx-0xe],rdx
   1400099f9:	mov    DWORD PTR [rcx-0x6],edx
   1400099fc:	mov    WORD PTR [rcx-0x2],dx
   140009a00:	ret    
   140009a01:	mov    QWORD PTR [rcx-0xd],rdx
   140009a05:	mov    DWORD PTR [rcx-0x5],edx
   140009a08:	mov    BYTE PTR [rcx-0x1],dl
   140009a0b:	ret    
   140009a0c:	mov    QWORD PTR [rcx-0xc],rdx
   140009a10:	mov    DWORD PTR [rcx-0x4],edx
   140009a13:	ret    
   140009a14:	mov    QWORD PTR [rcx-0xa],rdx
   140009a18:	mov    WORD PTR [rcx-0x2],dx
   140009a1c:	ret    
   140009a1d:	mov    QWORD PTR [rcx-0x9],rdx
   140009a21:	mov    BYTE PTR [rcx-0x1],dl
   140009a24:	ret    
   140009a25:	mov    QWORD PTR [rcx-0x8],rdx
   140009a29:	ret    
   140009a2a:	int3   
   140009a2b:	int3   
   140009a2c:	lea    rax,[rip+0x2e6bd]        # 0x1400380f0
   140009a33:	mov    QWORD PTR [rcx],rax
   140009a36:	mov    rax,rcx
   140009a39:	ret    
   140009a3a:	int3   
   140009a3b:	int3   
   140009a3c:	lea    rax,[rip+0x2e6ad]        # 0x1400380f0
   140009a43:	mov    QWORD PTR [rcx],rax
   140009a46:	jmp    0x140019458
   140009a4b:	int3   
   140009a4c:	mov    rax,rcx
   140009a4f:	ret    
   140009a50:	sub    rsp,0x28
   140009a54:	mov    rax,rdx
   140009a57:	lea    rdx,[rcx+0x11]
   140009a5b:	lea    rcx,[rax+0x11]
   140009a5f:	call   0x140019160
   140009a64:	test   eax,eax
   140009a66:	sete   al
   140009a69:	add    rsp,0x28
   140009a6d:	ret    
   140009a6e:	int3   
   140009a6f:	int3   
   140009a70:	sub    rsp,0x28
   140009a74:	mov    rax,rdx
   140009a77:	lea    rdx,[rcx+0x11]
   140009a7b:	lea    rcx,[rax+0x11]
   140009a7f:	call   0x140019160
   140009a84:	test   eax,eax
   140009a86:	setne  al
   140009a89:	add    rsp,0x28
   140009a8d:	ret    
   140009a8e:	int3   
   140009a8f:	int3   
   140009a90:	mov    QWORD PTR [rsp+0x8],rbx
   140009a95:	push   rdi
   140009a96:	sub    rsp,0x20
   140009a9a:	lea    rax,[rip+0x2e64f]        # 0x1400380f0
   140009aa1:	mov    ebx,edx
   140009aa3:	mov    rdi,rcx
   140009aa6:	mov    QWORD PTR [rcx],rax
   140009aa9:	call   0x140019458
   140009aae:	test   bl,0x1
   140009ab1:	je     0x140009abb
   140009ab3:	mov    rcx,rdi
   140009ab6:	call   0x140007d8c
   140009abb:	mov    rax,rdi
   140009abe:	mov    rbx,QWORD PTR [rsp+0x30]
   140009ac3:	add    rsp,0x20
   140009ac7:	pop    rdi
   140009ac8:	ret    
   140009ac9:	int3   
   140009aca:	int3   
   140009acb:	int3   
   140009acc:	jmp    0x1400192fc
   140009ad1:	int3   
   140009ad2:	int3   
   140009ad3:	int3   
   140009ad4:	jmp    0x1400194c4
   140009ad9:	int3   
   140009ada:	int3   
   140009adb:	int3   
   140009adc:	sub    rsp,0x28
   140009ae0:	mov    rax,rdx
   140009ae3:	lea    rdx,[rcx+0x11]
   140009ae7:	lea    rcx,[rax+0x11]
   140009aeb:	call   0x140019160
   140009af0:	test   eax,eax
   140009af2:	setg   al
   140009af5:	add    rsp,0x28
   140009af9:	ret    
   140009afa:	int3   
   140009afb:	int3   
   140009afc:	jmp    0x1400191c8
   140009b01:	int3   
   140009b02:	int3   
   140009b03:	int3   
   140009b04:	lea    rax,[rcx+0x10]
   140009b08:	ret    
   140009b09:	int3   
   140009b0a:	int3   
   140009b0b:	int3   
   140009b0c:	rex push rbx
   140009b0e:	sub    rsp,0x20
   140009b12:	test   rcx,rcx
   140009b15:	je     0x140009b24
   140009b17:	test   rdx,rdx
   140009b1a:	je     0x140009b24
   140009b1c:	test   r8,r8
   140009b1f:	jne    0x140009b3d
   140009b21:	mov    BYTE PTR [rcx],r8b
   140009b24:	call   0x14000b9f0
   140009b29:	mov    ebx,0x16
   140009b2e:	mov    DWORD PTR [rax],ebx
   140009b30:	call   0x14000b8b8
   140009b35:	mov    eax,ebx
   140009b37:	add    rsp,0x20
   140009b3b:	pop    rbx
   140009b3c:	ret    
   140009b3d:	mov    r9,rcx
   140009b40:	sub    r9,r8
   140009b43:	mov    al,BYTE PTR [r8]
   140009b46:	mov    BYTE PTR [r9+r8*1],al
   140009b4a:	inc    r8
   140009b4d:	test   al,al
   140009b4f:	je     0x140009b56
   140009b51:	dec    rdx
   140009b54:	jne    0x140009b43
   140009b56:	test   rdx,rdx
   140009b59:	jne    0x140009b69
   140009b5b:	mov    BYTE PTR [rcx],dl
   140009b5d:	call   0x14000b9f0
   140009b62:	mov    ebx,0x22
   140009b67:	jmp    0x140009b2e
   140009b69:	xor    eax,eax
   140009b6b:	jmp    0x140009b37
   140009b6d:	int3   
   140009b6e:	int3   
   140009b6f:	int3   
   140009b70:	int3   
   140009b71:	int3   
   140009b72:	int3   
   140009b73:	int3   
   140009b74:	int3   
   140009b75:	int3   
   140009b76:	data16 nop WORD PTR [rax+rax*1+0x0]
   140009b80:	sub    rsp,0x10
   140009b84:	mov    QWORD PTR [rsp],r10
   140009b88:	mov    QWORD PTR [rsp+0x8],r11
   140009b8d:	xor    r11,r11
   140009b90:	lea    r10,[rsp+0x18]
   140009b95:	sub    r10,rax
   140009b98:	cmovb  r10,r11
   140009b9c:	mov    r11,QWORD PTR gs:0x10
   140009ba5:	cmp    r10,r11
   140009ba8:	jae    0x140009bc0
   140009baa:	and    r10w,0xf000
   140009bb0:	lea    r11,[r11-0x1000]
   140009bb7:	mov    BYTE PTR [r11],0x0
   140009bbb:	cmp    r10,r11
   140009bbe:	jne    0x140009bb0
   140009bc0:	mov    r10,QWORD PTR [rsp]
   140009bc4:	mov    r11,QWORD PTR [rsp+0x8]
   140009bc9:	add    rsp,0x10
   140009bcd:	ret    
   140009bce:	int3   
   140009bcf:	int3   
   140009bd0:	mov    rax,rsp
   140009bd3:	mov    QWORD PTR [rax+0x8],rbx
   140009bd7:	mov    QWORD PTR [rax+0x10],rbp
   140009bdb:	mov    QWORD PTR [rax+0x18],rsi
   140009bdf:	mov    QWORD PTR [rax+0x20],rdi
   140009be3:	push   r15
   140009be5:	sub    rsp,0x30
   140009be9:	xor    edi,edi
   140009beb:	mov    rbx,rdx
   140009bee:	mov    rsi,rcx
   140009bf1:	test   rcx,rcx
   140009bf4:	jne    0x140009c0e
   140009bf6:	call   0x14000b9f0
   140009bfb:	mov    ebx,0x16
   140009c00:	mov    DWORD PTR [rax],ebx
   140009c02:	call   0x14000b8b8
   140009c07:	mov    eax,ebx
   140009c09:	jmp    0x140009cb5
   140009c0e:	test   rdx,rdx
   140009c11:	je     0x140009bf6
   140009c13:	call   0x140019bf8
   140009c18:	mov    r15d,0x1
   140009c1e:	test   eax,eax
   140009c20:	jne    0x140009c2e
   140009c22:	call   QWORD PTR [rip+0x2b620]        # 0x140035248
   140009c28:	test   eax,eax
   140009c2a:	cmove  edi,r15d
   140009c2e:	and    DWORD PTR [rsp+0x28],0x0
   140009c33:	and    QWORD PTR [rbx],0x0
   140009c37:	and    QWORD PTR [rsp+0x20],0x0
   140009c3d:	or     r9d,0xffffffff
   140009c41:	mov    r8,rsi
   140009c44:	xor    edx,edx
   140009c46:	mov    ecx,edi
   140009c48:	call   QWORD PTR [rip+0x2b602]        # 0x140035250
   140009c4e:	movsxd rbp,eax
   140009c51:	test   eax,eax
   140009c53:	jne    0x140009c66
   140009c55:	call   QWORD PTR [rip+0x2b58d]        # 0x1400351e8
   140009c5b:	mov    ecx,eax
   140009c5d:	call   0x14000b9a0
   140009c62:	xor    eax,eax
   140009c64:	jmp    0x140009cb5
   140009c66:	mov    rcx,rbp
   140009c69:	add    rcx,rcx
   140009c6c:	call   0x14000fc4c
   140009c71:	mov    QWORD PTR [rbx],rax
   140009c74:	test   rax,rax
   140009c77:	je     0x140009c62
   140009c79:	or     r9d,0xffffffff
   140009c7d:	mov    r8,rsi
   140009c80:	xor    edx,edx
   140009c82:	mov    ecx,edi
   140009c84:	mov    DWORD PTR [rsp+0x28],ebp
   140009c88:	mov    QWORD PTR [rsp+0x20],rax
   140009c8d:	call   QWORD PTR [rip+0x2b5bd]        # 0x140035250
   140009c93:	test   eax,eax
   140009c95:	jne    0x140009cb2
   140009c97:	call   QWORD PTR [rip+0x2b54b]        # 0x1400351e8
   140009c9d:	mov    ecx,eax
   140009c9f:	call   0x14000b9a0
   140009ca4:	mov    rcx,QWORD PTR [rbx]
   140009ca7:	call   0x14000fb50
   140009cac:	and    QWORD PTR [rbx],0x0
   140009cb0:	jmp    0x140009c62
   140009cb2:	mov    eax,r15d
   140009cb5:	mov    rbx,QWORD PTR [rsp+0x40]
   140009cba:	mov    rbp,QWORD PTR [rsp+0x48]
   140009cbf:	mov    rsi,QWORD PTR [rsp+0x50]
   140009cc4:	mov    rdi,QWORD PTR [rsp+0x58]
   140009cc9:	add    rsp,0x30
   140009ccd:	pop    r15
   140009ccf:	ret    
   140009cd0:	mov    rax,rsp
   140009cd3:	mov    QWORD PTR [rax+0x8],rbx
   140009cd7:	mov    QWORD PTR [rax+0x10],rbp
   140009cdb:	mov    QWORD PTR [rax+0x18],rsi
   140009cdf:	mov    QWORD PTR [rax+0x20],rdi
   140009ce3:	push   r15
   140009ce5:	sub    rsp,0x40
   140009ce9:	xor    edi,edi
   140009ceb:	mov    rbx,rdx
   140009cee:	mov    rsi,rcx
   140009cf1:	test   rcx,rcx
   140009cf4:	jne    0x140009d0e
   140009cf6:	call   0x14000b9f0
   140009cfb:	mov    ebx,0x16
   140009d00:	mov    DWORD PTR [rax],ebx
   140009d02:	call   0x14000b8b8
   140009d07:	mov    eax,ebx
   140009d09:	jmp    0x140009dca
   140009d0e:	test   rdx,rdx
   140009d11:	je     0x140009cf6
   140009d13:	call   0x140019bf8
   140009d18:	mov    r15d,0x1
   140009d1e:	test   eax,eax
   140009d20:	jne    0x140009d2e
   140009d22:	call   QWORD PTR [rip+0x2b520]        # 0x140035248
   140009d28:	test   eax,eax
   140009d2a:	cmove  edi,r15d
   140009d2e:	and    QWORD PTR [rsp+0x38],0x0
   140009d34:	and    QWORD PTR [rsp+0x30],0x0
   140009d3a:	and    DWORD PTR [rsp+0x28],0x0
   140009d3f:	and    QWORD PTR [rsp+0x20],0x0
   140009d45:	and    QWORD PTR [rbx],0x0
   140009d49:	or     r9d,0xffffffff
   140009d4d:	mov    r8,rsi
   140009d50:	xor    edx,edx
   140009d52:	mov    ecx,edi
   140009d54:	call   QWORD PTR [rip+0x2b376]        # 0x1400350d0
   140009d5a:	movsxd rbp,eax
   140009d5d:	test   eax,eax
   140009d5f:	jne    0x140009d72
   140009d61:	call   QWORD PTR [rip+0x2b481]        # 0x1400351e8
   140009d67:	mov    ecx,eax
   140009d69:	call   0x14000b9a0
   140009d6e:	xor    eax,eax
   140009d70:	jmp    0x140009dca
   140009d72:	mov    rcx,rbp
   140009d75:	call   0x14000fc4c
   140009d7a:	mov    QWORD PTR [rbx],rax
   140009d7d:	test   rax,rax
   140009d80:	je     0x140009d6e
   140009d82:	and    QWORD PTR [rsp+0x38],0x0
   140009d88:	and    QWORD PTR [rsp+0x30],0x0
   140009d8e:	or     r9d,0xffffffff
   140009d92:	mov    r8,rsi
   140009d95:	xor    edx,edx
   140009d97:	mov    ecx,edi
   140009d99:	mov    DWORD PTR [rsp+0x28],ebp
   140009d9d:	mov    QWORD PTR [rsp+0x20],rax
   140009da2:	call   QWORD PTR [rip+0x2b328]        # 0x1400350d0
   140009da8:	test   eax,eax
   140009daa:	jne    0x140009dc7
   140009dac:	call   QWORD PTR [rip+0x2b436]        # 0x1400351e8
   140009db2:	mov    ecx,eax
   140009db4:	call   0x14000b9a0
   140009db9:	mov    rcx,QWORD PTR [rbx]
   140009dbc:	call   0x14000fb50
   140009dc1:	and    QWORD PTR [rbx],0x0
   140009dc5:	jmp    0x140009d6e
   140009dc7:	mov    eax,r15d
   140009dca:	mov    rbx,QWORD PTR [rsp+0x50]
   140009dcf:	mov    rbp,QWORD PTR [rsp+0x58]
   140009dd4:	mov    rsi,QWORD PTR [rsp+0x60]
   140009dd9:	mov    rdi,QWORD PTR [rsp+0x68]
   140009dde:	add    rsp,0x40
   140009de2:	pop    r15
   140009de4:	ret    
   140009de5:	int3   
   140009de6:	int3   
   140009de7:	int3   
   140009de8:	rex push rbx
   140009dea:	sub    rsp,0x20
   140009dee:	mov    ebx,ecx
   140009df0:	lea    r8,[rsp+0x38]
   140009df5:	lea    rdx,[rip+0x2e2fc]        # 0x1400380f8
   140009dfc:	xor    ecx,ecx
   140009dfe:	call   QWORD PTR [rip+0x2b43c]        # 0x140035240
   140009e04:	test   eax,eax
   140009e06:	je     0x140009e23
   140009e08:	mov    rcx,QWORD PTR [rsp+0x38]
   140009e0d:	lea    rdx,[rip+0x2e2fc]        # 0x140038110
   140009e14:	call   QWORD PTR [rip+0x2b29e]        # 0x1400350b8
   140009e1a:	test   rax,rax
   140009e1d:	je     0x140009e23
   140009e1f:	mov    ecx,ebx
   140009e21:	call   rax
   140009e23:	add    rsp,0x20
   140009e27:	pop    rbx
   140009e28:	ret    
   140009e29:	int3   
   140009e2a:	int3   
   140009e2b:	int3   
   140009e2c:	rex push rbx
   140009e2e:	sub    rsp,0x20
   140009e32:	mov    ebx,ecx
   140009e34:	call   0x140009de8
   140009e39:	mov    ecx,ebx
   140009e3b:	call   QWORD PTR [rip+0x2b297]        # 0x1400350d8
   140009e41:	int3   
   140009e42:	int3   
   140009e43:	int3   
   140009e44:	mov    QWORD PTR [rsp+0x8],rbx
   140009e49:	push   rdi
   140009e4a:	sub    rsp,0x20
   140009e4e:	mov    rcx,QWORD PTR [rip+0x40063]        # 0x140049eb8
   140009e55:	call   QWORD PTR [rip+0x2b3cd]        # 0x140035228
   140009e5b:	mov    rbx,QWORD PTR [rip+0x3daee]        # 0x140047950
   140009e62:	mov    rdi,rax
   140009e65:	test   rbx,rbx
   140009e68:	je     0x140009e84
   140009e6a:	mov    rcx,QWORD PTR [rbx]
   140009e6d:	test   rcx,rcx
   140009e70:	je     0x140009e7d
   140009e72:	call   0x14000fb50
   140009e77:	add    rbx,0x8
   140009e7b:	jne    0x140009e6a
   140009e7d:	mov    rbx,QWORD PTR [rip+0x3dacc]        # 0x140047950
   140009e84:	mov    rcx,rbx
   140009e87:	call   0x14000fb50
   140009e8c:	mov    rbx,QWORD PTR [rip+0x3dab5]        # 0x140047948
   140009e93:	and    QWORD PTR [rip+0x3dab5],0x0        # 0x140047950
   140009e9b:	test   rbx,rbx
   140009e9e:	je     0x140009eba
   140009ea0:	mov    rcx,QWORD PTR [rbx]
   140009ea3:	test   rcx,rcx
   140009ea6:	je     0x140009eb3
   140009ea8:	call   0x14000fb50
   140009ead:	add    rbx,0x8
   140009eb1:	jne    0x140009ea0
   140009eb3:	mov    rbx,QWORD PTR [rip+0x3da8e]        # 0x140047948
   140009eba:	mov    rcx,rbx
   140009ebd:	call   0x14000fb50
   140009ec2:	mov    rcx,QWORD PTR [rip+0x3da77]        # 0x140047940
   140009ec9:	and    QWORD PTR [rip+0x3da77],0x0        # 0x140047948
   140009ed1:	call   0x14000fb50
   140009ed6:	mov    rcx,QWORD PTR [rip+0x3da5b]        # 0x140047938
   140009edd:	call   0x14000fb50
   140009ee2:	and    QWORD PTR [rip+0x3da56],0x0        # 0x140047940
   140009eea:	and    QWORD PTR [rip+0x3da46],0x0        # 0x140047938
   140009ef2:	or     rbx,0xffffffffffffffff
   140009ef6:	cmp    rdi,rbx
   140009ef9:	je     0x140009f0d
   140009efb:	cmp    QWORD PTR [rip+0x3ffb5],0x0        # 0x140049eb8
   140009f03:	je     0x140009f0d
   140009f05:	mov    rcx,rdi
   140009f08:	call   0x14000fb50
   140009f0d:	mov    rcx,rbx
   140009f10:	call   QWORD PTR [rip+0x2b30a]        # 0x140035220
   140009f16:	mov    rcx,QWORD PTR [rip+0x3da8b]        # 0x1400479a8
   140009f1d:	mov    QWORD PTR [rip+0x3ff94],rax        # 0x140049eb8
   140009f24:	test   rcx,rcx
   140009f27:	je     0x140009f36
   140009f29:	call   0x14000fb50
   140009f2e:	and    QWORD PTR [rip+0x3da72],0x0        # 0x1400479a8
   140009f36:	mov    rcx,QWORD PTR [rip+0x3da73]        # 0x1400479b0
   140009f3d:	test   rcx,rcx
   140009f40:	je     0x140009f4f
   140009f42:	call   0x14000fb50
   140009f47:	and    QWORD PTR [rip+0x3da61],0x0        # 0x1400479b0
   140009f4f:	mov    rax,QWORD PTR [rip+0x3bdaa]        # 0x140045d00
   140009f56:	mov    ecx,ebx
   140009f58:	lock xadd DWORD PTR [rax],ecx
   140009f5c:	add    ecx,ebx
   140009f5e:	jne    0x140009f7f
   140009f60:	mov    rcx,QWORD PTR [rip+0x3bd99]        # 0x140045d00
   140009f67:	lea    rbx,[rip+0x3ba72]        # 0x1400459e0
   140009f6e:	cmp    rcx,rbx
   140009f71:	je     0x140009f7f
   140009f73:	call   0x14000fb50
   140009f78:	mov    QWORD PTR [rip+0x3bd81],rbx        # 0x140045d00
   140009f7f:	mov    rbx,QWORD PTR [rsp+0x30]
   140009f84:	add    rsp,0x20
   140009f88:	pop    rdi
   140009f89:	ret    
   140009f8a:	int3   
   140009f8b:	int3   
   140009f8c:	rex push rbx
   140009f8e:	sub    rsp,0x20
   140009f92:	mov    ebx,ecx
   140009f94:	call   0x14001a12c
   140009f99:	mov    ecx,ebx
   140009f9b:	call   0x14001a1a0
   140009fa0:	xor    r8d,r8d
   140009fa3:	mov    ecx,0xff
   140009fa8:	lea    edx,[r8+0x1]
   140009fac:	call   0x14000a1f4
   140009fb1:	int3   
   140009fb2:	int3   
   140009fb3:	int3   
   140009fb4:	mov    edx,0x1
   140009fb9:	xor    ecx,ecx
   140009fbb:	mov    r8d,edx
   140009fbe:	jmp    0x14000a1f4
   140009fc3:	int3   
   140009fc4:	xor    edx,edx
   140009fc6:	xor    ecx,ecx
   140009fc8:	lea    r8d,[rdx+0x1]
   140009fcc:	jmp    0x14000a1f4
   140009fd1:	int3   
   140009fd2:	int3   
   140009fd3:	int3   
   140009fd4:	rex push rbx
   140009fd6:	sub    rsp,0x20
   140009fda:	cmp    QWORD PTR [rip+0x3523e],0x0        # 0x14003f220
   140009fe2:	mov    ebx,ecx
   140009fe4:	je     0x140009ffe
   140009fe6:	lea    rcx,[rip+0x35233]        # 0x14003f220
   140009fed:	call   0x14001a460
   140009ff2:	test   eax,eax
   140009ff4:	je     0x140009ffe
   140009ff6:	mov    ecx,ebx
   140009ff8:	call   QWORD PTR [rip+0x35222]        # 0x14003f220
   140009ffe:	call   0x14001a4e0
   14000a003:	lea    rdx,[rip+0x2b49e]        # 0x1400354a8
   14000a00a:	lea    rcx,[rip+0x2b467]        # 0x140035478
   14000a011:	call   0x14000a1a0
   14000a016:	test   eax,eax
   14000a018:	jne    0x14000a064
   14000a01a:	lea    rcx,[rip+0xf5cf]        # 0x1400195f0
   14000a021:	call   0x140007fd8
   14000a026:	lea    rdx,[rip+0x2b443]        # 0x140035470
   14000a02d:	lea    rcx,[rip+0x2b434]        # 0x140035468
   14000a034:	call   0x14000a140
   14000a039:	cmp    QWORD PTR [rip+0x3fe67],0x0        # 0x140049ea8
   14000a041:	je     0x14000a062
   14000a043:	lea    rcx,[rip+0x3fe5e]        # 0x140049ea8
   14000a04a:	call   0x14001a460
   14000a04f:	test   eax,eax
   14000a051:	je     0x14000a062
   14000a053:	xor    r8d,r8d
   14000a056:	xor    ecx,ecx
   14000a058:	lea    edx,[r8+0x2]
   14000a05c:	call   QWORD PTR [rip+0x3fe46]        # 0x140049ea8
   14000a062:	xor    eax,eax
   14000a064:	add    rsp,0x20
   14000a068:	pop    rbx
   14000a069:	ret    
   14000a06a:	int3   
   14000a06b:	int3   
   14000a06c:	xor    r8d,r8d
   14000a06f:	lea    edx,[r8+0x1]
   14000a073:	jmp    0x14000a1f4
   14000a078:	xor    r8d,r8d
   14000a07b:	xor    edx,edx
   14000a07d:	xor    ecx,ecx
   14000a07f:	jmp    0x14000a1f4
   14000a084:	sub    rsp,0x28
   14000a088:	test   rcx,rcx
   14000a08b:	jne    0x14000a0a4
   14000a08d:	call   0x14000b9f0
   14000a092:	mov    DWORD PTR [rax],0x16
   14000a098:	call   0x14000b8b8
   14000a09d:	mov    eax,0x16
   14000a0a2:	jmp    0x14000a0b5
   14000a0a4:	mov    rax,QWORD PTR [rip+0x3d8ad]        # 0x140047958
   14000a0ab:	test   rax,rax
   14000a0ae:	je     0x14000a08d
   14000a0b0:	mov    QWORD PTR [rcx],rax
   14000a0b3:	xor    eax,eax
   14000a0b5:	add    rsp,0x28
   14000a0b9:	ret    
   14000a0ba:	int3   
   14000a0bb:	int3   
   14000a0bc:	sub    rsp,0x28
   14000a0c0:	test   rcx,rcx
   14000a0c3:	jne    0x14000a0dc
   14000a0c5:	call   0x14000b9f0
   14000a0ca:	mov    DWORD PTR [rax],0x16
   14000a0d0:	call   0x14000b8b8
   14000a0d5:	mov    eax,0x16
   14000a0da:	jmp    0x14000a0ed
   14000a0dc:	mov    rax,QWORD PTR [rip+0x3d87d]        # 0x140047960
   14000a0e3:	test   rax,rax
   14000a0e6:	je     0x14000a0c5
   14000a0e8:	mov    QWORD PTR [rcx],rax
   14000a0eb:	xor    eax,eax
   14000a0ed:	add    rsp,0x28
   14000a0f1:	ret    
   14000a0f2:	int3   
   14000a0f3:	int3   
   14000a0f4:	rex push rbx
   14000a0f6:	sub    rsp,0x20
   14000a0fa:	xor    ecx,ecx
   14000a0fc:	call   QWORD PTR [rip+0x2b11e]        # 0x140035220
   14000a102:	mov    rcx,rax
   14000a105:	mov    rbx,rax
   14000a108:	call   0x14000fa80
   14000a10d:	mov    rcx,rbx
   14000a110:	call   0x14000b848
   14000a115:	mov    rcx,rbx
   14000a118:	call   0x14000f51c
   14000a11d:	mov    rcx,rbx
   14000a120:	call   0x14001a554
   14000a125:	mov    rcx,rbx
   14000a128:	call   0x140018cac
   14000a12d:	mov    rcx,rbx
   14000a130:	call   0x14001ab04
   14000a135:	add    rsp,0x20
   14000a139:	pop    rbx
   14000a13a:	jmp    0x140019c44
   14000a13f:	int3   
   14000a140:	mov    QWORD PTR [rsp+0x8],rbx
   14000a145:	mov    QWORD PTR [rsp+0x10],rbp
   14000a14a:	mov    QWORD PTR [rsp+0x18],rsi
   14000a14f:	push   rdi
   14000a150:	sub    rsp,0x20
   14000a154:	xor    ebp,ebp
   14000a156:	mov    rbx,rdx
   14000a159:	mov    rdi,rcx
   14000a15c:	sub    rbx,rcx
   14000a15f:	mov    esi,ebp
   14000a161:	add    rbx,0x7
   14000a165:	shr    rbx,0x3
   14000a169:	cmp    rcx,rdx
   14000a16c:	cmova  rbx,rbp
   14000a170:	test   rbx,rbx
   14000a173:	je     0x14000a18b
   14000a175:	mov    rax,QWORD PTR [rdi]
   14000a178:	test   rax,rax
   14000a17b:	je     0x14000a17f
   14000a17d:	call   rax
   14000a17f:	inc    rsi
   14000a182:	add    rdi,0x8
   14000a186:	cmp    rsi,rbx
   14000a189:	jb     0x14000a175
   14000a18b:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a190:	mov    rbp,QWORD PTR [rsp+0x38]
   14000a195:	mov    rsi,QWORD PTR [rsp+0x40]
   14000a19a:	add    rsp,0x20
   14000a19e:	pop    rdi
   14000a19f:	ret    
   14000a1a0:	mov    QWORD PTR [rsp+0x8],rbx
   14000a1a5:	push   rdi
   14000a1a6:	sub    rsp,0x20
   14000a1aa:	xor    eax,eax
   14000a1ac:	mov    rdi,rdx
   14000a1af:	mov    rbx,rcx
   14000a1b2:	cmp    rcx,rdx
   14000a1b5:	jae    0x14000a1ce
   14000a1b7:	test   eax,eax
   14000a1b9:	jne    0x14000a1ce
   14000a1bb:	mov    rcx,QWORD PTR [rbx]
   14000a1be:	test   rcx,rcx
   14000a1c1:	je     0x14000a1c5
   14000a1c3:	call   rcx
   14000a1c5:	add    rbx,0x8
   14000a1c9:	cmp    rbx,rdi
   14000a1cc:	jb     0x14000a1b7
   14000a1ce:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a1d3:	add    rsp,0x20
   14000a1d7:	pop    rdi
   14000a1d8:	ret    
   14000a1d9:	int3   
   14000a1da:	int3   
   14000a1db:	int3   
   14000a1dc:	mov    ecx,0x8
   14000a1e1:	jmp    0x140019628
   14000a1e6:	int3   
   14000a1e7:	int3   
   14000a1e8:	mov    ecx,0x8
   14000a1ed:	jmp    0x140019844
   14000a1f2:	int3   
   14000a1f3:	int3   
   14000a1f4:	mov    QWORD PTR [rsp+0x8],rbx
   14000a1f9:	mov    QWORD PTR [rsp+0x10],rsi
   14000a1fe:	mov    DWORD PTR [rsp+0x18],r8d
   14000a203:	push   rdi
   14000a204:	push   r12
   14000a206:	push   r13
   14000a208:	push   r14
   14000a20a:	push   r15
   14000a20c:	sub    rsp,0x40
   14000a210:	mov    r14d,r8d
   14000a213:	mov    ebx,edx
   14000a215:	mov    r13d,ecx
   14000a218:	mov    ecx,0x8
   14000a21d:	call   0x140019628
   14000a222:	nop
   14000a223:	cmp    DWORD PTR [rip+0x3d706],0x1        # 0x140047930
   14000a22a:	je     0x14000a337
   14000a230:	mov    DWORD PTR [rip+0x3d736],0x1        # 0x140047970
   14000a23a:	mov    BYTE PTR [rip+0x3d72b],r14b        # 0x14004796c
   14000a241:	test   ebx,ebx
   14000a243:	jne    0x14000a323
   14000a249:	mov    rcx,QWORD PTR [rip+0x3fc68]        # 0x140049eb8
   14000a250:	call   QWORD PTR [rip+0x2afd2]        # 0x140035228
   14000a256:	mov    rsi,rax
   14000a259:	mov    QWORD PTR [rsp+0x30],rax
   14000a25e:	test   rax,rax
   14000a261:	je     0x14000a310
   14000a267:	mov    rcx,QWORD PTR [rip+0x3fc42]        # 0x140049eb0
   14000a26e:	call   QWORD PTR [rip+0x2afb4]        # 0x140035228
   14000a274:	mov    rdi,rax
   14000a277:	mov    QWORD PTR [rsp+0x20],rax
   14000a27c:	mov    r12,rsi
   14000a27f:	mov    QWORD PTR [rsp+0x28],rsi
   14000a284:	mov    r15,rax
   14000a287:	mov    QWORD PTR [rsp+0x38],rax
   14000a28c:	sub    rdi,0x8
   14000a290:	mov    QWORD PTR [rsp+0x20],rdi
   14000a295:	cmp    rdi,rsi
   14000a298:	jb     0x14000a310
   14000a29a:	xor    ecx,ecx
   14000a29c:	call   QWORD PTR [rip+0x2af7e]        # 0x140035220
   14000a2a2:	cmp    QWORD PTR [rdi],rax
   14000a2a5:	jne    0x14000a2a9
   14000a2a7:	jmp    0x14000a28c
   14000a2a9:	cmp    rdi,rsi
   14000a2ac:	jb     0x14000a310
   14000a2ae:	mov    rcx,QWORD PTR [rdi]
   14000a2b1:	call   QWORD PTR [rip+0x2af71]        # 0x140035228
   14000a2b7:	mov    rbx,rax
   14000a2ba:	xor    ecx,ecx
   14000a2bc:	call   QWORD PTR [rip+0x2af5e]        # 0x140035220
   14000a2c2:	mov    QWORD PTR [rdi],rax
   14000a2c5:	call   rbx
   14000a2c7:	mov    rcx,QWORD PTR [rip+0x3fbea]        # 0x140049eb8
   14000a2ce:	call   QWORD PTR [rip+0x2af54]        # 0x140035228
   14000a2d4:	mov    rbx,rax
   14000a2d7:	mov    rcx,QWORD PTR [rip+0x3fbd2]        # 0x140049eb0
   14000a2de:	call   QWORD PTR [rip+0x2af44]        # 0x140035228
   14000a2e4:	cmp    r12,rbx
   14000a2e7:	jne    0x14000a2ee
   14000a2e9:	cmp    r15,rax
   14000a2ec:	je     0x14000a2a7
   14000a2ee:	mov    r12,rbx
   14000a2f1:	mov    QWORD PTR [rsp+0x28],rbx
   14000a2f6:	mov    rsi,rbx
   14000a2f9:	mov    QWORD PTR [rsp+0x30],rbx
   14000a2fe:	mov    r15,rax
   14000a301:	mov    QWORD PTR [rsp+0x38],rax
   14000a306:	mov    rdi,rax
   14000a309:	mov    QWORD PTR [rsp+0x20],rax
   14000a30e:	jmp    0x14000a2a7
   14000a310:	lea    rdx,[rip+0x2b1b9]        # 0x1400354d0
   14000a317:	lea    rcx,[rip+0x2b192]        # 0x1400354b0
   14000a31e:	call   0x14000a140
   14000a323:	lea    rdx,[rip+0x2b1b6]        # 0x1400354e0
   14000a32a:	lea    rcx,[rip+0x2b1a7]        # 0x1400354d8
   14000a331:	call   0x14000a140
   14000a336:	nop
   14000a337:	test   r14d,r14d
   14000a33a:	je     0x14000a34b
   14000a33c:	mov    ecx,0x8
   14000a341:	call   0x140019844
   14000a346:	test   r14d,r14d
   14000a349:	jne    0x14000a371
   14000a34b:	mov    DWORD PTR [rip+0x3d5db],0x1        # 0x140047930
   14000a355:	mov    ecx,0x8
   14000a35a:	call   0x140019844
   14000a35f:	mov    ecx,r13d
   14000a362:	call   0x140009de8
   14000a367:	mov    ecx,r13d
   14000a36a:	call   QWORD PTR [rip+0x2ad68]        # 0x1400350d8
   14000a370:	int3   
   14000a371:	mov    rbx,QWORD PTR [rsp+0x70]
   14000a376:	mov    rsi,QWORD PTR [rsp+0x78]
   14000a37b:	add    rsp,0x40
   14000a37f:	pop    r15
   14000a381:	pop    r14
   14000a383:	pop    r13
   14000a385:	pop    r12
   14000a387:	pop    rdi
   14000a388:	ret    
   14000a389:	int3   
   14000a38a:	int3   
   14000a38b:	int3   
   14000a38c:	xor    r8d,r8d
   14000a38f:	xor    edx,edx
   14000a391:	jmp    0x14000a1f4
   14000a396:	int3   
   14000a397:	int3   
   14000a398:	mov    QWORD PTR [rsp+0x10],rbx
   14000a39d:	mov    QWORD PTR [rsp+0x18],rsi
   14000a3a2:	push   rdi
   14000a3a3:	sub    rsp,0x30
   14000a3a7:	call   0x140019b78
   14000a3ac:	movzx  esi,ax
   14000a3af:	mov    ecx,0x2
   14000a3b4:	call   0x14001b648
   14000a3b9:	mov    eax,0x5a4d
   14000a3be:	lea    rdi,[rip+0xffffffffffff5c3b]        # 0x140000000
   14000a3c5:	cmp    WORD PTR [rip+0xffffffffffff5c34],ax        # 0x140000000
   14000a3cc:	je     0x14000a3d2
   14000a3ce:	xor    ebx,ebx
   14000a3d0:	jmp    0x14000a403
   14000a3d2:	movsxd rax,DWORD PTR [rip+0xffffffffffff5c63]        # 0x14000003c
   14000a3d9:	add    rax,rdi
   14000a3dc:	cmp    DWORD PTR [rax],0x4550
   14000a3e2:	jne    0x14000a3ce
   14000a3e4:	mov    ecx,0x20b
   14000a3e9:	cmp    WORD PTR [rax+0x18],cx
   14000a3ed:	jne    0x14000a3ce
   14000a3ef:	xor    ebx,ebx
   14000a3f1:	cmp    DWORD PTR [rax+0x84],0xe
   14000a3f8:	jbe    0x14000a403
   14000a3fa:	cmp    DWORD PTR [rax+0xf8],ebx
   14000a400:	setne  bl
   14000a403:	mov    DWORD PTR [rsp+0x40],ebx
   14000a407:	call   0x14001aeb0
   14000a40c:	test   eax,eax
   14000a40e:	jne    0x14000a432
   14000a410:	cmp    DWORD PTR [rip+0x3e835],0x1        # 0x140048c4c
   14000a417:	jne    0x14000a41e
   14000a419:	call   0x14001a12c
   14000a41e:	mov    ecx,0x1c
   14000a423:	call   0x14001a1a0
   14000a428:	mov    ecx,0xff
   14000a42d:	call   0x140009e2c
   14000a432:	call   0x140010ea8
   14000a437:	test   eax,eax
   14000a439:	jne    0x14000a45d
   14000a43b:	cmp    DWORD PTR [rip+0x3e80a],0x1        # 0x140048c4c
   14000a442:	jne    0x14000a449
   14000a444:	call   0x14001a12c
   14000a449:	mov    ecx,0x10
   14000a44e:	call   0x14001a1a0
   14000a453:	mov    ecx,0xff
   14000a458:	call   0x140009e2c
   14000a45d:	call   0x1400195b8
   14000a462:	nop
   14000a463:	call   0x14001aedc
   14000a468:	test   eax,eax
   14000a46a:	jns    0x14000a476
   14000a46c:	mov    ecx,0x1b
   14000a471:	call   0x14000a570
   14000a476:	call   QWORD PTR [rip+0x2addc]        # 0x140035258
   14000a47c:	mov    QWORD PTR [rip+0x3fa1d],rax        # 0x140049ea0
   14000a483:	call   0x14001b73c
   14000a488:	mov    QWORD PTR [rip+0x3d501],rax        # 0x140047990
   14000a48f:	call   0x14001b288
   14000a494:	test   eax,eax
   14000a496:	jns    0x14000a4a2
   14000a498:	mov    ecx,0x8
   14000a49d:	call   0x140009f8c
   14000a4a2:	call   0x14001b510
   14000a4a7:	test   eax,eax
   14000a4a9:	jns    0x14000a4b5
   14000a4ab:	mov    ecx,0x9
   14000a4b0:	call   0x140009f8c
   14000a4b5:	mov    ecx,0x1
   14000a4ba:	call   0x140009fd4
   14000a4bf:	test   eax,eax
   14000a4c1:	je     0x14000a4ca
   14000a4c3:	mov    ecx,eax
   14000a4c5:	call   0x140009f8c
   14000a4ca:	call   0x14001b7c0
   14000a4cf:	movzx  r9d,si
   14000a4d3:	mov    r8,rax
   14000a4d6:	xor    edx,edx
   14000a4d8:	mov    rcx,rdi
   14000a4db:	call   0x140001210
   14000a4e0:	mov    edi,eax
   14000a4e2:	mov    DWORD PTR [rsp+0x20],eax
   14000a4e6:	test   ebx,ebx
   14000a4e8:	jne    0x14000a4f1
   14000a4ea:	mov    ecx,eax
   14000a4ec:	call   0x14000a38c
   14000a4f1:	call   0x140009fc4
   14000a4f6:	jmp    0x14000a50f
   14000a4f8:	mov    edi,eax
   14000a4fa:	cmp    DWORD PTR [rsp+0x40],0x0
   14000a4ff:	jne    0x14000a509
   14000a501:	mov    ecx,eax
   14000a503:	call   0x14000a06c
   14000a508:	int3   
   14000a509:	call   0x140009fb4
   14000a50e:	nop
   14000a50f:	mov    eax,edi
   14000a511:	mov    rbx,QWORD PTR [rsp+0x48]
   14000a516:	mov    rsi,QWORD PTR [rsp+0x50]
   14000a51b:	add    rsp,0x30
   14000a51f:	pop    rdi
   14000a520:	ret    
   14000a521:	int3   
   14000a522:	int3   
   14000a523:	int3   
   14000a524:	mov    eax,0x5a4d
   14000a529:	cmp    WORD PTR [rip+0xffffffffffff5ad0],ax        # 0x140000000
   14000a530:	je     0x14000a535
   14000a532:	xor    eax,eax
   14000a534:	ret    
   14000a535:	movsxd rcx,DWORD PTR [rip+0xffffffffffff5b00]        # 0x14000003c
   14000a53c:	lea    rax,[rip+0xffffffffffff5abd]        # 0x140000000
   14000a543:	add    rcx,rax
   14000a546:	cmp    DWORD PTR [rcx],0x4550
   14000a54c:	jne    0x14000a532
   14000a54e:	mov    eax,0x20b
   14000a553:	cmp    WORD PTR [rcx+0x18],ax
   14000a557:	jne    0x14000a532
   14000a559:	xor    eax,eax
   14000a55b:	cmp    DWORD PTR [rcx+0x84],0xe
   14000a562:	jbe    0x14000a56d
   14000a564:	cmp    DWORD PTR [rcx+0xf8],eax
   14000a56a:	setne  al
   14000a56d:	ret    
   14000a56e:	int3   
   14000a56f:	int3   
   14000a570:	rex push rbx
   14000a572:	sub    rsp,0x20
   14000a576:	cmp    DWORD PTR [rip+0x3e6cf],0x1        # 0x140048c4c
   14000a57d:	mov    ebx,ecx
   14000a57f:	jne    0x14000a586
   14000a581:	call   0x14001a12c
   14000a586:	mov    ecx,ebx
   14000a588:	call   0x14001a1a0
   14000a58d:	mov    ecx,0xff
   14000a592:	add    rsp,0x20
   14000a596:	pop    rbx
   14000a597:	jmp    0x140009e2c
   14000a59c:	sub    rsp,0x28
   14000a5a0:	call   0x14001b690
   14000a5a5:	add    rsp,0x28
   14000a5a9:	jmp    0x14000a398
   14000a5ae:	int3   
   14000a5af:	int3   
   14000a5b0:	mov    QWORD PTR [rsp+0x10],rbx
   14000a5b5:	mov    QWORD PTR [rsp+0x18],r8
   14000a5ba:	push   rbp
   14000a5bb:	push   rsi
   14000a5bc:	push   rdi
   14000a5bd:	push   r12
   14000a5bf:	push   r13
   14000a5c1:	push   r14
   14000a5c3:	push   r15
   14000a5c5:	sub    rsp,0x20
   14000a5c9:	mov    r14,QWORD PTR [rsp+0x98]
   14000a5d1:	mov    r15,QWORD PTR [rsp+0x88]
   14000a5d9:	mov    rdi,rcx
   14000a5dc:	mov    r12,rdx
   14000a5df:	xor    edx,edx
   14000a5e1:	mov    r13,r9
   14000a5e4:	mov    ecx,edx
   14000a5e6:	mov    DWORD PTR [rsp+0x60],edx
   14000a5ea:	mov    r10,r8
   14000a5ed:	test   rdi,rdi
   14000a5f0:	je     0x14000a5fc
   14000a5f2:	test   r12,r12
   14000a5f5:	jne    0x14000a606
   14000a5f7:	test   r8,r8
   14000a5fa:	je     0x14000a60b
   14000a5fc:	mov    ecx,0x1
   14000a601:	jmp    0x14000a7c9
   14000a606:	test   r8,r8
   14000a609:	je     0x14000a5fc
   14000a60b:	test   r9,r9
   14000a60e:	jne    0x14000a61c
   14000a610:	cmp    QWORD PTR [rsp+0x80],rdx
   14000a618:	jne    0x14000a5fc
   14000a61a:	jmp    0x14000a626
   14000a61c:	cmp    QWORD PTR [rsp+0x80],rdx
   14000a624:	je     0x14000a5fc
   14000a626:	test   r15,r15
   14000a629:	jne    0x14000a637
   14000a62b:	cmp    QWORD PTR [rsp+0x90],rdx
   14000a633:	jne    0x14000a5fc
   14000a635:	jmp    0x14000a641
   14000a637:	cmp    QWORD PTR [rsp+0x90],rdx
   14000a63f:	je     0x14000a5fc
   14000a641:	test   r14,r14
   14000a644:	jne    0x14000a652
   14000a646:	cmp    QWORD PTR [rsp+0xa0],rdx
   14000a64e:	jne    0x14000a5fc
   14000a650:	jmp    0x14000a65c
   14000a652:	cmp    QWORD PTR [rsp+0xa0],rdx
   14000a65a:	je     0x14000a5fc
   14000a65c:	mov    eax,0x1
   14000a661:	mov    rbx,rdi
   14000a664:	cmp    BYTE PTR [rbx],dl
   14000a666:	je     0x14000a670
   14000a668:	inc    rbx
   14000a66b:	dec    rax
   14000a66e:	jne    0x14000a664
   14000a670:	cmp    BYTE PTR [rbx],0x3a
   14000a673:	jne    0x14000a6a0
   14000a675:	test   r12,r12
   14000a678:	je     0x14000a69a
   14000a67a:	cmp    r8,0x3
   14000a67e:	jb     0x14000a7c9
   14000a684:	mov    r9d,0x2
   14000a68a:	mov    r8,rdi
   14000a68d:	mov    rdx,r10
   14000a690:	mov    rcx,r12
   14000a693:	call   0x14001bb18
   14000a698:	xor    edx,edx
   14000a69a:	lea    rdi,[rbx+0x1]
   14000a69e:	jmp    0x14000a6a9
   14000a6a0:	test   r12,r12
   14000a6a3:	je     0x14000a6a9
   14000a6a5:	mov    BYTE PTR [r12],dl
   14000a6a9:	mov    rbp,rdx
   14000a6ac:	mov    rsi,rdx
   14000a6af:	mov    rbx,rdi
   14000a6b2:	cmp    BYTE PTR [rdi],dl
   14000a6b4:	je     0x14000a71f
   14000a6b6:	movsx  ecx,BYTE PTR [rbx]
   14000a6b9:	call   0x14001ba60
   14000a6be:	xor    edx,edx
   14000a6c0:	test   eax,eax
   14000a6c2:	je     0x14000a6c9
   14000a6c4:	inc    rbx
   14000a6c7:	jmp    0x14000a6e0
   14000a6c9:	mov    al,BYTE PTR [rbx]
   14000a6cb:	cmp    al,0x2f
   14000a6cd:	je     0x14000a6dc
   14000a6cf:	cmp    al,0x5c
   14000a6d1:	je     0x14000a6dc
   14000a6d3:	cmp    al,0x2e
   14000a6d5:	jne    0x14000a6e0
   14000a6d7:	mov    rsi,rbx
   14000a6da:	jmp    0x14000a6e0
   14000a6dc:	lea    rbp,[rbx+0x1]
   14000a6e0:	inc    rbx
   14000a6e3:	cmp    BYTE PTR [rbx],dl
   14000a6e5:	jne    0x14000a6b6
   14000a6e7:	test   rbp,rbp
   14000a6ea:	je     0x14000a71f
   14000a6ec:	test   r13,r13
   14000a6ef:	je     0x14000a71a
   14000a6f1:	mov    r9,rbp
   14000a6f4:	sub    r9,rdi
   14000a6f7:	cmp    QWORD PTR [rsp+0x80],r9
   14000a6ff:	jbe    0x14000a7c2
   14000a705:	mov    rdx,QWORD PTR [rsp+0x80]
   14000a70d:	mov    r8,rdi
   14000a710:	mov    rcx,r13
   14000a713:	call   0x14001bb18
   14000a718:	xor    edx,edx
   14000a71a:	mov    rdi,rbp
   14000a71d:	jmp    0x14000a728
   14000a71f:	test   r13,r13
   14000a722:	je     0x14000a728
   14000a724:	mov    BYTE PTR [r13+0x0],dl
   14000a728:	test   rsi,rsi
   14000a72b:	je     0x14000a786
   14000a72d:	cmp    rsi,rdi
   14000a730:	jb     0x14000a786
   14000a732:	test   r15,r15
   14000a735:	je     0x14000a75c
   14000a737:	mov    r9,rsi
   14000a73a:	sub    r9,rdi
   14000a73d:	cmp    QWORD PTR [rsp+0x90],r9
   14000a745:	jbe    0x14000a7bc
   14000a747:	mov    rdx,QWORD PTR [rsp+0x90]
   14000a74f:	mov    r8,rdi
   14000a752:	mov    rcx,r15
   14000a755:	call   0x14001bb18
   14000a75a:	xor    edx,edx
   14000a75c:	test   r14,r14
   14000a75f:	je     0x14000a7b8
   14000a761:	sub    rbx,rsi
   14000a764:	cmp    QWORD PTR [rsp+0xa0],rbx
   14000a76c:	jbe    0x14000a7bc
   14000a76e:	mov    rdx,QWORD PTR [rsp+0xa0]
   14000a776:	mov    r9,rbx
   14000a779:	mov    r8,rsi
   14000a77c:	mov    rcx,r14
   14000a77f:	call   0x14001bb18
   14000a784:	jmp    0x14000a7b8
   14000a786:	test   r15,r15
   14000a789:	je     0x14000a7b0
   14000a78b:	sub    rbx,rdi
   14000a78e:	cmp    QWORD PTR [rsp+0x90],rbx
   14000a796:	jbe    0x14000a7bc
   14000a798:	mov    rdx,QWORD PTR [rsp+0x90]
   14000a7a0:	mov    r9,rbx
   14000a7a3:	mov    r8,rdi
   14000a7a6:	mov    rcx,r15
   14000a7a9:	call   0x14001bb18
   14000a7ae:	xor    edx,edx
   14000a7b0:	test   r14,r14
   14000a7b3:	je     0x14000a7b8
   14000a7b5:	mov    BYTE PTR [r14],dl
   14000a7b8:	xor    eax,eax
   14000a7ba:	jmp    0x14000a83a
   14000a7bc:	mov    ecx,DWORD PTR [rsp+0x60]
   14000a7c0:	jmp    0x14000a7c4
   14000a7c2:	mov    ecx,edx
   14000a7c4:	mov    r10,QWORD PTR [rsp+0x70]
   14000a7c9:	test   r12,r12
   14000a7cc:	je     0x14000a7d7
   14000a7ce:	test   r10,r10
   14000a7d1:	je     0x14000a7d7
   14000a7d3:	mov    BYTE PTR [r12],dl
   14000a7d7:	test   r13,r13
   14000a7da:	je     0x14000a7ea
   14000a7dc:	cmp    QWORD PTR [rsp+0x80],rdx
   14000a7e4:	jbe    0x14000a7ea
   14000a7e6:	mov    BYTE PTR [r13+0x0],dl
   14000a7ea:	test   r15,r15
   14000a7ed:	je     0x14000a7fc
   14000a7ef:	cmp    QWORD PTR [rsp+0x90],rdx
   14000a7f7:	jbe    0x14000a7fc
   14000a7f9:	mov    BYTE PTR [r15],dl
   14000a7fc:	test   r14,r14
   14000a7ff:	je     0x14000a80e
   14000a801:	cmp    QWORD PTR [rsp+0xa0],rdx
   14000a809:	jbe    0x14000a80e
   14000a80b:	mov    BYTE PTR [r14],dl
   14000a80e:	test   rdi,rdi
   14000a811:	jne    0x14000a828
   14000a813:	call   0x14000b9f0
   14000a818:	mov    ebx,0x16
   14000a81d:	mov    DWORD PTR [rax],ebx
   14000a81f:	call   0x14000b8b8
   14000a824:	mov    eax,ebx
   14000a826:	jmp    0x14000a83a
   14000a828:	test   ecx,ecx
   14000a82a:	jne    0x14000a813
   14000a82c:	call   0x14000b9f0
   14000a831:	mov    ecx,0x22
   14000a836:	mov    DWORD PTR [rax],ecx
   14000a838:	mov    eax,ecx
   14000a83a:	mov    rbx,QWORD PTR [rsp+0x68]
   14000a83f:	add    rsp,0x20
   14000a843:	pop    r15
   14000a845:	pop    r14
   14000a847:	pop    r13
   14000a849:	pop    r12
   14000a84b:	pop    rdi
   14000a84c:	pop    rsi
   14000a84d:	pop    rbp
   14000a84e:	ret    
   14000a84f:	int3   
   14000a850:	mov    QWORD PTR [rsp+0x8],rbx
   14000a855:	push   rdi
   14000a856:	sub    rsp,0x20
   14000a85a:	mov    eax,DWORD PTR [rip+0x3e638]        # 0x140048e98
   14000a860:	xor    ebx,ebx
   14000a862:	mov    edi,0x14
   14000a867:	test   eax,eax
   14000a869:	jne    0x14000a872
   14000a86b:	mov    eax,0x200
   14000a870:	jmp    0x14000a877
   14000a872:	cmp    eax,edi
   14000a874:	cmovl  eax,edi
   14000a877:	movsxd rcx,eax
   14000a87a:	mov    edx,0x8
   14000a87f:	mov    DWORD PTR [rip+0x3e613],eax        # 0x140048e98
   14000a885:	call   0x14000fbcc
   14000a88a:	mov    QWORD PTR [rip+0x3e5ff],rax        # 0x140048e90
   14000a891:	test   rax,rax
   14000a894:	jne    0x14000a8ba
   14000a896:	lea    edx,[rax+0x8]
   14000a899:	mov    rcx,rdi
   14000a89c:	mov    DWORD PTR [rip+0x3e5f6],edi        # 0x140048e98
   14000a8a2:	call   0x14000fbcc
   14000a8a7:	mov    QWORD PTR [rip+0x3e5e2],rax        # 0x140048e90
   14000a8ae:	test   rax,rax
   14000a8b1:	jne    0x14000a8ba
   14000a8b3:	mov    eax,0x1a
   14000a8b8:	jmp    0x14000a8dd
   14000a8ba:	lea    rcx,[rip+0x3a9bf]        # 0x140045280
   14000a8c1:	mov    QWORD PTR [rbx+rax*1],rcx
   14000a8c5:	add    rcx,0x30
   14000a8c9:	lea    rbx,[rbx+0x8]
   14000a8cd:	dec    rdi
   14000a8d0:	je     0x14000a8db
   14000a8d2:	mov    rax,QWORD PTR [rip+0x3e5b7]        # 0x140048e90
   14000a8d9:	jmp    0x14000a8c1
   14000a8db:	xor    eax,eax
   14000a8dd:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a8e2:	add    rsp,0x20
   14000a8e6:	pop    rdi
   14000a8e7:	ret    
   14000a8e8:	sub    rsp,0x28
   14000a8ec:	call   0x14000abd8
   14000a8f1:	cmp    BYTE PTR [rip+0x3d074],0x0        # 0x14004796c
   14000a8f8:	je     0x14000a8ff
   14000a8fa:	call   0x14001bbd4
   14000a8ff:	mov    rcx,QWORD PTR [rip+0x3e58a]        # 0x140048e90
   14000a906:	call   0x14000fb50
   14000a90b:	and    QWORD PTR [rip+0x3e57d],0x0        # 0x140048e90
   14000a913:	add    rsp,0x28
   14000a917:	ret    
   14000a918:	lea    rax,[rip+0x3a961]        # 0x140045280
   14000a91f:	ret    
   14000a920:	rex push rbx
   14000a922:	sub    rsp,0x20
   14000a926:	mov    rbx,rcx
   14000a929:	lea    rcx,[rip+0x3a950]        # 0x140045280
   14000a930:	cmp    rbx,rcx
   14000a933:	jb     0x14000a975
   14000a935:	lea    rax,[rip+0x3acd4]        # 0x140045610
   14000a93c:	cmp    rbx,rax
   14000a93f:	ja     0x14000a975
   14000a941:	mov    rdx,rbx
   14000a944:	movabs rax,0x2aaaaaaaaaaaaaab
   14000a94e:	sub    rdx,rcx
   14000a951:	imul   rdx
   14000a954:	sar    rdx,0x3
   14000a958:	mov    rcx,rdx
   14000a95b:	shr    rcx,0x3f
   14000a95f:	add    rcx,rdx
   14000a962:	add    ecx,0x10
   14000a965:	call   0x140019628
   14000a96a:	bts    DWORD PTR [rbx+0x18],0xf
   14000a96f:	add    rsp,0x20
   14000a973:	pop    rbx
   14000a974:	ret    
   14000a975:	lea    rcx,[rbx+0x30]
   14000a979:	add    rsp,0x20
   14000a97d:	pop    rbx
   14000a97e:	rex.W jmp QWORD PTR [rip+0x2a8db]        # 0x140035260
   14000a985:	int3   
   14000a986:	int3   
   14000a987:	int3   
   14000a988:	rex push rbx
   14000a98a:	sub    rsp,0x20
   14000a98e:	mov    rbx,rdx
   14000a991:	cmp    ecx,0x14
   14000a994:	jge    0x14000a9a9
   14000a996:	add    ecx,0x10
   14000a999:	call   0x140019628
   14000a99e:	bts    DWORD PTR [rbx+0x18],0xf
   14000a9a3:	add    rsp,0x20
   14000a9a7:	pop    rbx
   14000a9a8:	ret    
   14000a9a9:	lea    rcx,[rdx+0x30]
   14000a9ad:	add    rsp,0x20
   14000a9b1:	pop    rbx
   14000a9b2:	rex.W jmp QWORD PTR [rip+0x2a8a7]        # 0x140035260
   14000a9b9:	int3   
   14000a9ba:	int3   
   14000a9bb:	int3   
   14000a9bc:	lea    rdx,[rip+0x3a8bd]        # 0x140045280
   14000a9c3:	cmp    rcx,rdx
   14000a9c6:	jb     0x14000a9ff
   14000a9c8:	lea    rax,[rip+0x3ac41]        # 0x140045610
   14000a9cf:	cmp    rcx,rax
   14000a9d2:	ja     0x14000a9ff
   14000a9d4:	btr    DWORD PTR [rcx+0x18],0xf
   14000a9d9:	sub    rcx,rdx
   14000a9dc:	movabs rax,0x2aaaaaaaaaaaaaab
   14000a9e6:	imul   rcx
   14000a9e9:	sar    rdx,0x3
   14000a9ed:	mov    rcx,rdx
   14000a9f0:	shr    rcx,0x3f
   14000a9f4:	add    rcx,rdx
   14000a9f7:	add    ecx,0x10
   14000a9fa:	jmp    0x140019844
   14000a9ff:	add    rcx,0x30
   14000aa03:	rex.W jmp QWORD PTR [rip+0x2a85e]        # 0x140035268
   14000aa0a:	int3   
   14000aa0b:	int3   
   14000aa0c:	cmp    ecx,0x14
   14000aa0f:	jge    0x14000aa1e
   14000aa11:	btr    DWORD PTR [rdx+0x18],0xf
   14000aa16:	add    ecx,0x10
   14000aa19:	jmp    0x140019844
   14000aa1e:	lea    rcx,[rdx+0x30]
   14000aa22:	rex.W jmp QWORD PTR [rip+0x2a83f]        # 0x140035268
   14000aa29:	int3   
   14000aa2a:	int3   
   14000aa2b:	int3   
   14000aa2c:	mov    QWORD PTR [rsp+0x8],rbx
   14000aa31:	push   rdi
   14000aa32:	sub    rsp,0x20
   14000aa36:	or     edi,0xffffffff
   14000aa39:	mov    rbx,rcx
   14000aa3c:	test   rcx,rcx
   14000aa3f:	jne    0x14000aa55
   14000aa41:	call   0x14000b9f0
   14000aa46:	mov    DWORD PTR [rax],0x16
   14000aa4c:	call   0x14000b8b8
   14000aa51:	or     eax,edi
   14000aa53:	jmp    0x14000aa9b
   14000aa55:	test   BYTE PTR [rcx+0x18],0x83
   14000aa59:	je     0x14000aa95
   14000aa5b:	call   0x14000ab5c
   14000aa60:	mov    rcx,rbx
   14000aa63:	mov    edi,eax
   14000aa65:	call   0x14001be24
   14000aa6a:	mov    rcx,rbx
   14000aa6d:	call   0x14001bc7c
   14000aa72:	mov    ecx,eax
   14000aa74:	call   0x14001bca4
   14000aa79:	test   eax,eax
   14000aa7b:	jns    0x14000aa82
   14000aa7d:	or     edi,0xffffffff
   14000aa80:	jmp    0x14000aa95
   14000aa82:	mov    rcx,QWORD PTR [rbx+0x28]
   14000aa86:	test   rcx,rcx
   14000aa89:	je     0x14000aa95
   14000aa8b:	call   0x14000fb50
   14000aa90:	and    QWORD PTR [rbx+0x28],0x0
   14000aa95:	and    DWORD PTR [rbx+0x18],0x0
   14000aa99:	mov    eax,edi
   14000aa9b:	mov    rbx,QWORD PTR [rsp+0x30]
   14000aaa0:	add    rsp,0x20
   14000aaa4:	pop    rdi
   14000aaa5:	ret    
   14000aaa6:	int3   
   14000aaa7:	int3   
   14000aaa8:	mov    QWORD PTR [rsp+0x10],rbx
   14000aaad:	mov    QWORD PTR [rsp+0x8],rcx
   14000aab2:	push   rdi
   14000aab3:	sub    rsp,0x20
   14000aab7:	mov    rbx,rcx
   14000aaba:	or     edi,0xffffffff
   14000aabd:	xor    eax,eax
   14000aabf:	test   rcx,rcx
   14000aac2:	setne  al
   14000aac5:	test   eax,eax
   14000aac7:	jne    0x14000aadd
   14000aac9:	call   0x14000b9f0
   14000aace:	mov    DWORD PTR [rax],0x16
   14000aad4:	call   0x14000b8b8
   14000aad9:	mov    eax,edi
   14000aadb:	jmp    0x14000ab03
   14000aadd:	test   BYTE PTR [rcx+0x18],0x40
   14000aae1:	je     0x14000aae9
   14000aae3:	and    DWORD PTR [rcx+0x18],0x0
   14000aae7:	jmp    0x14000aad9
   14000aae9:	call   0x14000a920
   14000aaee:	nop
   14000aaef:	mov    rcx,rbx
   14000aaf2:	call   0x14000aa2c
   14000aaf7:	mov    edi,eax
   14000aaf9:	mov    rcx,rbx
   14000aafc:	call   0x14000a9bc
   14000ab01:	jmp    0x14000aad9
   14000ab03:	mov    rbx,QWORD PTR [rsp+0x38]
   14000ab08:	add    rsp,0x20
   14000ab0c:	pop    rdi
   14000ab0d:	ret    
   14000ab0e:	int3   
   14000ab0f:	int3   
   14000ab10:	rex push rbx
   14000ab12:	sub    rsp,0x20
   14000ab16:	mov    rbx,rcx
   14000ab19:	test   rcx,rcx
   14000ab1c:	jne    0x14000ab28
   14000ab1e:	add    rsp,0x20
   14000ab22:	pop    rbx
   14000ab23:	jmp    0x14000ac28
   14000ab28:	call   0x14000ab5c
   14000ab2d:	test   eax,eax
   14000ab2f:	je     0x14000ab36
   14000ab31:	or     eax,0xffffffff
   14000ab34:	jmp    0x14000ab56
   14000ab36:	test   DWORD PTR [rbx+0x18],0x4000
   14000ab3d:	je     0x14000ab54
   14000ab3f:	mov    rcx,rbx
   14000ab42:	call   0x14001bc7c
   14000ab47:	mov    ecx,eax
   14000ab49:	call   0x14001be5c
   14000ab4e:	neg    eax
   14000ab50:	sbb    eax,eax
   14000ab52:	jmp    0x14000ab56
   14000ab54:	xor    eax,eax
   14000ab56:	add    rsp,0x20
   14000ab5a:	pop    rbx
   14000ab5b:	ret    
   14000ab5c:	mov    QWORD PTR [rsp+0x8],rbx
   14000ab61:	mov    QWORD PTR [rsp+0x10],rsi
   14000ab66:	push   rdi
   14000ab67:	sub    rsp,0x20
   14000ab6b:	mov    eax,DWORD PTR [rcx+0x18]
   14000ab6e:	xor    esi,esi
   14000ab70:	mov    rbx,rcx
   14000ab73:	and    al,0x3
   14000ab75:	cmp    al,0x2
   14000ab77:	jne    0x14000abb8
   14000ab79:	test   DWORD PTR [rcx+0x18],0x108
   14000ab80:	je     0x14000abb8
   14000ab82:	mov    edi,DWORD PTR [rcx]
   14000ab84:	sub    edi,DWORD PTR [rcx+0x10]
   14000ab87:	test   edi,edi
   14000ab89:	jle    0x14000abb8
   14000ab8b:	call   0x14001bc7c
   14000ab90:	mov    rdx,QWORD PTR [rbx+0x10]
   14000ab94:	mov    r8d,edi
   14000ab97:	mov    ecx,eax
   14000ab99:	call   0x14001bf34
   14000ab9e:	cmp    eax,edi
   14000aba0:	jne    0x14000abb1
   14000aba2:	mov    eax,DWORD PTR [rbx+0x18]
   14000aba5:	test   al,al
   14000aba7:	jns    0x14000abb8
   14000aba9:	and    eax,0xfffffffd
   14000abac:	mov    DWORD PTR [rbx+0x18],eax
   14000abaf:	jmp    0x14000abb8
   14000abb1:	or     DWORD PTR [rbx+0x18],0x20
   14000abb5:	or     esi,0xffffffff
   14000abb8:	mov    rcx,QWORD PTR [rbx+0x10]
   14000abbc:	and    DWORD PTR [rbx+0x8],0x0
   14000abc0:	mov    eax,esi
   14000abc2:	mov    rsi,QWORD PTR [rsp+0x38]
   14000abc7:	mov    QWORD PTR [rbx],rcx
   14000abca:	mov    rbx,QWORD PTR [rsp+0x30]
   14000abcf:	add    rsp,0x20
   14000abd3:	pop    rdi
   14000abd4:	ret    
   14000abd5:	int3   
   14000abd6:	int3   
   14000abd7:	int3   
   14000abd8:	mov    ecx,0x1
   14000abdd:	jmp    0x14000ac28
   14000abe2:	int3   
   14000abe3:	int3   
   14000abe4:	mov    QWORD PTR [rsp+0x10],rbx
   14000abe9:	mov    QWORD PTR [rsp+0x8],rcx
   14000abee:	push   rdi
   14000abef:	sub    rsp,0x20
   14000abf3:	mov    rbx,rcx
   14000abf6:	test   rcx,rcx
   14000abf9:	jne    0x14000ac02
   14000abfb:	call   0x14000ac28
   14000ac00:	jmp    0x14000ac1c
   14000ac02:	call   0x14000a920
   14000ac07:	nop
   14000ac08:	mov    rcx,rbx
   14000ac0b:	call   0x14000ab10
   14000ac10:	mov    edi,eax
   14000ac12:	mov    rcx,rbx
   14000ac15:	call   0x14000a9bc
   14000ac1a:	mov    eax,edi
   14000ac1c:	mov    rbx,QWORD PTR [rsp+0x38]
   14000ac21:	add    rsp,0x20
   14000ac25:	pop    rdi
   14000ac26:	ret    
   14000ac27:	int3   
   14000ac28:	mov    QWORD PTR [rsp+0x8],rbx
   14000ac2d:	mov    QWORD PTR [rsp+0x10],rsi
   14000ac32:	mov    QWORD PTR [rsp+0x18],rdi
   14000ac37:	push   r13
   14000ac39:	push   r14
   14000ac3b:	push   r15
   14000ac3d:	sub    rsp,0x30
   14000ac41:	mov    r14d,ecx
   14000ac44:	xor    esi,esi
   14000ac46:	xor    edi,edi
   14000ac48:	lea    ecx,[rsi+0x1]
   14000ac4b:	call   0x140019628
   14000ac50:	nop
   14000ac51:	xor    ebx,ebx
   14000ac53:	or     r13d,0xffffffff
   14000ac57:	mov    DWORD PTR [rsp+0x20],ebx
   14000ac5b:	cmp    ebx,DWORD PTR [rip+0x3e237]        # 0x140048e98
   14000ac61:	jge    0x14000ace1
   14000ac63:	movsxd r15,ebx
   14000ac66:	mov    rax,QWORD PTR [rip+0x3e223]        # 0x140048e90
   14000ac6d:	mov    rdx,QWORD PTR [rax+r15*8]
   14000ac71:	test   rdx,rdx
   14000ac74:	je     0x14000acda
   14000ac76:	test   BYTE PTR [rdx+0x18],0x83
   14000ac7a:	je     0x14000acda
   14000ac7c:	mov    ecx,ebx
   14000ac7e:	call   0x14000a988
   14000ac83:	nop
   14000ac84:	mov    rax,QWORD PTR [rip+0x3e205]        # 0x140048e90
   14000ac8b:	mov    rcx,QWORD PTR [rax+r15*8]
   14000ac8f:	test   BYTE PTR [rcx+0x18],0x83
   14000ac93:	je     0x14000acc8
   14000ac95:	cmp    r14d,0x1
   14000ac99:	jne    0x14000acad
   14000ac9b:	call   0x14000ab10
   14000aca0:	cmp    eax,r13d
   14000aca3:	je     0x14000acc8
   14000aca5:	inc    esi
   14000aca7:	mov    DWORD PTR [rsp+0x24],esi
   14000acab:	jmp    0x14000acc8
   14000acad:	test   r14d,r14d
   14000acb0:	jne    0x14000acc8
   14000acb2:	test   BYTE PTR [rcx+0x18],0x2
   14000acb6:	je     0x14000acc8
   14000acb8:	call   0x14000ab10
   14000acbd:	cmp    eax,r13d
   14000acc0:	cmove  edi,r13d
   14000acc4:	mov    DWORD PTR [rsp+0x28],edi
   14000acc8:	mov    rdx,QWORD PTR [rip+0x3e1c1]        # 0x140048e90
   14000accf:	mov    rdx,QWORD PTR [rdx+r15*8]
   14000acd3:	mov    ecx,ebx
   14000acd5:	call   0x14000aa0c
   14000acda:	inc    ebx
   14000acdc:	jmp    0x14000ac57
   14000ace1:	mov    ecx,0x1
   14000ace6:	call   0x140019844
   14000aceb:	cmp    r14d,0x1
   14000acef:	cmove  edi,esi
   14000acf2:	mov    eax,edi
   14000acf4:	mov    rbx,QWORD PTR [rsp+0x50]
   14000acf9:	mov    rsi,QWORD PTR [rsp+0x58]
   14000acfe:	mov    rdi,QWORD PTR [rsp+0x60]
   14000ad03:	add    rsp,0x30
   14000ad07:	pop    r15
   14000ad09:	pop    r14
   14000ad0b:	pop    r13
   14000ad0d:	ret    
   14000ad0e:	int3   
   14000ad0f:	int3   
   14000ad10:	mov    rax,rsp
   14000ad13:	mov    QWORD PTR [rax+0x8],rbx
   14000ad17:	mov    QWORD PTR [rax+0x18],rsi
   14000ad1b:	mov    QWORD PTR [rax+0x20],rdi
   14000ad1f:	mov    QWORD PTR [rax+0x10],rdx
   14000ad23:	push   r14
   14000ad25:	sub    rsp,0x20
   14000ad29:	mov    rdi,rdx
   14000ad2c:	mov    rsi,rcx
   14000ad2f:	xor    eax,eax
   14000ad31:	test   rcx,rcx
   14000ad34:	setne  al
   14000ad37:	test   eax,eax
   14000ad39:	jne    0x14000ad53
   14000ad3b:	call   0x14000b9f0
   14000ad40:	mov    DWORD PTR [rax],0x16
   14000ad46:	call   0x14000b8b8
   14000ad4b:	or     eax,0xffffffff
   14000ad4e:	jmp    0x14000ae25
   14000ad53:	xor    eax,eax
   14000ad55:	test   rdx,rdx
   14000ad58:	setne  al
   14000ad5b:	test   eax,eax
   14000ad5d:	je     0x14000ad3b
   14000ad5f:	test   BYTE PTR [rdx+0x18],0x40
   14000ad63:	jne    0x14000add6
   14000ad65:	mov    rcx,rdx
   14000ad68:	call   0x14001bc7c
   14000ad6d:	movsxd r8,eax
   14000ad70:	lea    ecx,[r8+0x2]
   14000ad74:	lea    r9,[rip+0x3dac5]        # 0x140048840
   14000ad7b:	cmp    ecx,0x1
   14000ad7e:	jbe    0x14000ad9e
   14000ad80:	mov    rdx,r8
   14000ad83:	mov    rcx,r8
   14000ad86:	sar    rcx,0x5
   14000ad8a:	and    edx,0x1f
   14000ad8d:	imul   rax,rdx,0x58
   14000ad91:	add    rax,QWORD PTR [r9+rcx*8]
   14000ad95:	lea    rcx,[rip+0x3b674]        # 0x140046410
   14000ad9c:	jmp    0x14000ada8
   14000ad9e:	lea    rcx,[rip+0x3b66b]        # 0x140046410
   14000ada5:	mov    rax,rcx
   14000ada8:	test   BYTE PTR [rax+0x38],0x7f
   14000adac:	jne    0x14000ad3b
   14000adae:	lea    eax,[r8+0x2]
   14000adb2:	cmp    eax,0x1
   14000adb5:	jbe    0x14000adcc
   14000adb7:	mov    rcx,r8
   14000adba:	mov    rax,r8
   14000adbd:	sar    rax,0x5
   14000adc1:	and    ecx,0x1f
   14000adc4:	imul   rcx,rcx,0x58
   14000adc8:	add    rcx,QWORD PTR [r9+rax*8]
   14000adcc:	test   BYTE PTR [rcx+0x38],0x80
   14000add0:	jne    0x14000ad3b
   14000add6:	mov    rcx,rsi
   14000add9:	call   0x14001ca40
   14000adde:	mov    r14,rax
   14000ade1:	mov    rcx,rdi
   14000ade4:	call   0x14000a920
   14000ade9:	nop
   14000adea:	mov    rcx,rdi
   14000aded:	call   0x14000bcc0
   14000adf2:	mov    ebx,eax
   14000adf4:	mov    r9,rdi
   14000adf7:	mov    r8,r14
   14000adfa:	mov    edx,0x1
   14000adff:	mov    rcx,rsi
   14000ae02:	call   0x14001c80c
   14000ae07:	mov    rsi,rax
   14000ae0a:	mov    rdx,rdi
   14000ae0d:	mov    ecx,ebx
   14000ae0f:	call   0x14000bc88
   14000ae14:	nop
   14000ae15:	mov    rcx,rdi
   14000ae18:	call   0x14000a9bc
   14000ae1d:	sub    rsi,r14
   14000ae20:	neg    rsi
   14000ae23:	sbb    eax,eax
   14000ae25:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ae2a:	mov    rsi,QWORD PTR [rsp+0x40]
   14000ae2f:	mov    rdi,QWORD PTR [rsp+0x48]
   14000ae34:	add    rsp,0x20
   14000ae38:	pop    r14
   14000ae3a:	ret    
   14000ae3b:	int3   
   14000ae3c:	mov    rax,rsp
   14000ae3f:	mov    QWORD PTR [rax+0x8],rcx
   14000ae43:	mov    QWORD PTR [rax+0x10],rdx
   14000ae47:	mov    QWORD PTR [rax+0x18],r8
   14000ae4b:	mov    QWORD PTR [rax+0x20],r9
   14000ae4f:	sub    rsp,0x28
   14000ae53:	lea    rdx,[rax+0x10]
   14000ae57:	call   0x14001cae8
   14000ae5c:	add    rsp,0x28
   14000ae60:	ret    
   14000ae61:	int3   
   14000ae62:	int3   
   14000ae63:	int3   
   14000ae64:	mov    rax,rsp
   14000ae67:	mov    QWORD PTR [rax+0x10],rdx
   14000ae6b:	mov    QWORD PTR [rax+0x18],r8
   14000ae6f:	mov    QWORD PTR [rax+0x20],r9
   14000ae73:	sub    rsp,0x28
   14000ae77:	lea    r8,[rax+0x18]
   14000ae7b:	call   0x14001cb90
   14000ae80:	add    rsp,0x28
   14000ae84:	ret    
   14000ae85:	int3   
   14000ae86:	int3   
   14000ae87:	int3   
   14000ae88:	mov    rax,rsp
   14000ae8b:	mov    QWORD PTR [rax+0x8],rcx
   14000ae8f:	mov    QWORD PTR [rax+0x10],rdx
   14000ae93:	mov    QWORD PTR [rax+0x18],r8
   14000ae97:	mov    QWORD PTR [rax+0x20],r9
   14000ae9b:	sub    rsp,0x28
   14000ae9f:	lea    rdx,[rax+0x10]
   14000aea3:	call   0x14001cba8
   14000aea8:	add    rsp,0x28
   14000aeac:	ret    
   14000aead:	int3   
   14000aeae:	int3   
   14000aeaf:	int3   
   14000aeb0:	mov    rax,rsp
   14000aeb3:	mov    QWORD PTR [rax+0x10],rdx
   14000aeb7:	mov    QWORD PTR [rax+0x18],r8
   14000aebb:	mov    QWORD PTR [rax+0x20],r9
   14000aebf:	sub    rsp,0x28
   14000aec3:	lea    r8,[rax+0x18]
   14000aec7:	call   0x14001cbc0
   14000aecc:	add    rsp,0x28
   14000aed0:	ret    
   14000aed1:	int3   
   14000aed2:	int3   
   14000aed3:	int3   
   14000aed4:	mov    r11,rsp
   14000aed7:	mov    QWORD PTR [r11+0x20],r9
   14000aedb:	sub    rsp,0x38
   14000aedf:	lea    rax,[r11+0x28]
   14000aee3:	mov    QWORD PTR [r11-0x10],rax
   14000aee7:	and    QWORD PTR [r11-0x18],0x0
   14000aeec:	call   0x140008c90
   14000aef1:	add    rsp,0x38
   14000aef5:	ret    
   14000aef6:	int3   
   14000aef7:	int3   
   14000aef8:	mov    r11,rsp
   14000aefb:	sub    rsp,0x38
   14000aeff:	lea    rax,[r11+0x30]
   14000af03:	mov    QWORD PTR [r11-0x10],rax
   14000af07:	mov    rax,QWORD PTR [r11+0x28]
   14000af0b:	mov    QWORD PTR [r11-0x18],rax
   14000af0f:	call   0x140008c90
   14000af14:	add    rsp,0x38
   14000af18:	ret    
   14000af19:	int3   
   14000af1a:	int3   
   14000af1b:	int3   
   14000af1c:	mov    QWORD PTR [rsp+0x18],r8
   14000af21:	mov    QWORD PTR [rsp+0x20],r9
   14000af26:	sub    rsp,0x28
   14000af2a:	lea    r9,[rsp+0x48]
   14000af2f:	call   0x14001cbd8
   14000af34:	add    rsp,0x28
   14000af38:	ret    
   14000af39:	int3   
   14000af3a:	int3   
   14000af3b:	int3   
   14000af3c:	mov    r11,rsp
   14000af3f:	mov    QWORD PTR [r11+0x18],r8
   14000af43:	mov    QWORD PTR [r11+0x20],r9
   14000af47:	sub    rsp,0x38
   14000af4b:	lea    rax,[r11+0x20]
   14000af4f:	xor    r9d,r9d
   14000af52:	mov    QWORD PTR [r11-0x18],rax
   14000af56:	call   0x140008e0c
   14000af5b:	add    rsp,0x38
   14000af5f:	ret    
   14000af60:	mov    QWORD PTR [rsp+0x20],r9
   14000af65:	sub    rsp,0x38
   14000af69:	lea    rax,[rsp+0x60]
   14000af6e:	mov    QWORD PTR [rsp+0x20],rax
   14000af73:	call   0x140008e0c
   14000af78:	add    rsp,0x38
   14000af7c:	ret    
   14000af7d:	int3   
   14000af7e:	int3   
   14000af7f:	int3   
   14000af80:	mov    QWORD PTR [rsp+0x20],r9
   14000af85:	sub    rsp,0x38
   14000af89:	lea    rax,[rsp+0x60]
   14000af8e:	mov    QWORD PTR [rsp+0x20],rax
   14000af93:	call   0x140008e44
   14000af98:	add    rsp,0x38
   14000af9c:	ret    
   14000af9d:	int3   
   14000af9e:	int3   
   14000af9f:	int3   
   14000afa0:	mov    QWORD PTR [rsp+0x10],rdx
   14000afa5:	mov    QWORD PTR [rsp+0x18],r8
   14000afaa:	mov    QWORD PTR [rsp+0x20],r9
   14000afaf:	push   rbp
   14000afb0:	push   rbx
   14000afb1:	push   rdi
   14000afb2:	mov    rbp,rsp
   14000afb5:	sub    rsp,0x50
   14000afb9:	and    QWORD PTR [rbp-0x30],0x0
   14000afbe:	mov    rdi,rdx
   14000afc1:	xor    edx,edx
   14000afc3:	mov    rbx,rcx
   14000afc6:	lea    rcx,[rbp-0x28]
   14000afca:	lea    r8d,[rdx+0x28]
   14000afce:	call   0x140009800
   14000afd3:	test   rdi,rdi
   14000afd6:	jne    0x14000afed
   14000afd8:	call   0x14000b9f0
   14000afdd:	mov    DWORD PTR [rax],0x16
   14000afe3:	call   0x14000b8b8
   14000afe8:	or     eax,0xffffffff
   14000afeb:	jmp    0x14000b038
   14000afed:	test   rbx,rbx
   14000aff0:	je     0x14000afd8
   14000aff2:	lea    r9,[rbp+0x30]
   14000aff6:	lea    rcx,[rbp-0x30]
   14000affa:	xor    r8d,r8d
   14000affd:	mov    rdx,rdi
   14000b000:	mov    DWORD PTR [rbp-0x28],0x7fffffff
   14000b007:	mov    DWORD PTR [rbp-0x18],0x42
   14000b00e:	mov    QWORD PTR [rbp-0x20],rbx
   14000b012:	mov    QWORD PTR [rbp-0x30],rbx
   14000b016:	call   0x14000bd90
   14000b01b:	dec    DWORD PTR [rbp-0x28]
   14000b01e:	mov    ebx,eax
   14000b020:	js     0x14000b02b
   14000b022:	mov    rcx,QWORD PTR [rbp-0x30]
   14000b026:	mov    BYTE PTR [rcx],0x0
   14000b029:	jmp    0x14000b036
   14000b02b:	lea    rdx,[rbp-0x30]
   14000b02f:	xor    ecx,ecx
   14000b031:	call   0x1400123d0
   14000b036:	mov    eax,ebx
   14000b038:	add    rsp,0x50
   14000b03c:	pop    rdi
   14000b03d:	pop    rbx
   14000b03e:	pop    rbp
   14000b03f:	ret    
   14000b040:	mov    r11,rsp
   14000b043:	mov    QWORD PTR [r11+0x18],r8
   14000b047:	mov    QWORD PTR [r11+0x20],r9
   14000b04b:	sub    rsp,0x38
   14000b04f:	lea    rax,[r11+0x20]
   14000b053:	xor    r9d,r9d
   14000b056:	mov    QWORD PTR [r11-0x18],rax
   14000b05a:	call   0x140008e44
   14000b05f:	add    rsp,0x38
   14000b063:	ret    
   14000b064:	mov    r8d,0x40
   14000b06a:	jmp    0x14000b0c4
   14000b06f:	int3   
   14000b070:	rex push rbx
   14000b072:	sub    rsp,0x20
   14000b076:	mov    rax,r8
   14000b079:	mov    r9,rdx
   14000b07c:	mov    rbx,rcx
   14000b07f:	test   rcx,rcx
   14000b082:	jne    0x14000b099
   14000b084:	call   0x14000b9f0
   14000b089:	mov    ebx,0x16
   14000b08e:	mov    DWORD PTR [rax],ebx
   14000b090:	call   0x14000b8b8
   14000b095:	mov    eax,ebx
   14000b097:	jmp    0x14000b0bd
   14000b099:	mov    r8d,0x80
   14000b09f:	mov    rdx,rax
   14000b0a2:	mov    rcx,r9
   14000b0a5:	call   0x14000b0c4
   14000b0aa:	mov    QWORD PTR [rbx],rax
   14000b0ad:	test   rax,rax
   14000b0b0:	je     0x14000b0b6
   14000b0b2:	xor    eax,eax
   14000b0b4:	jmp    0x14000b0bd
   14000b0b6:	call   0x14000b9f0
   14000b0bb:	mov    eax,DWORD PTR [rax]
   14000b0bd:	add    rsp,0x20
   14000b0c1:	pop    rbx
   14000b0c2:	ret    
   14000b0c3:	int3   
   14000b0c4:	mov    QWORD PTR [rsp+0x10],rbx
   14000b0c9:	mov    QWORD PTR [rsp+0x18],rsi
   14000b0ce:	push   rdi
   14000b0cf:	push   r14
   14000b0d1:	push   r15
   14000b0d3:	sub    rsp,0x30
   14000b0d7:	mov    QWORD PTR [rsp+0x20],rsp
   14000b0dc:	mov    r14d,r8d
   14000b0df:	mov    rdi,rdx
   14000b0e2:	mov    rsi,rcx
   14000b0e5:	xor    r15d,r15d
   14000b0e8:	mov    eax,r15d
   14000b0eb:	test   rcx,rcx
   14000b0ee:	setne  al
   14000b0f1:	test   eax,eax
   14000b0f3:	jne    0x14000b10c
   14000b0f5:	call   0x14000b9f0
   14000b0fa:	mov    DWORD PTR [rax],0x16
   14000b100:	call   0x14000b8b8
   14000b105:	xor    eax,eax
   14000b107:	jmp    0x14000b18d
   14000b10c:	mov    eax,r15d
   14000b10f:	test   rdx,rdx
   14000b112:	setne  al
   14000b115:	test   eax,eax
   14000b117:	je     0x14000b0f5
   14000b119:	mov    eax,r15d
   14000b11c:	cmp    WORD PTR [rdx],r15w
   14000b120:	setne  al
   14000b123:	test   eax,eax
   14000b125:	je     0x14000b0f5
   14000b127:	call   0x14001cc9c
   14000b12c:	mov    rbx,rax
   14000b12f:	mov    QWORD PTR [rsp+0x50],rax
   14000b134:	test   rax,rax
   14000b137:	jne    0x14000b146
   14000b139:	call   0x14000b9f0
   14000b13e:	mov    DWORD PTR [rax],0x18
   14000b144:	jmp    0x14000b105
   14000b146:	cmp    WORD PTR [rsi],r15w
   14000b14a:	jne    0x14000b16e
   14000b14c:	call   0x14000b9f0
   14000b151:	mov    DWORD PTR [rax],0x16
   14000b157:	lea    rdx,[rip+0xc]        # 0x14000b16a
   14000b15e:	mov    rcx,QWORD PTR [rsp+0x20]
   14000b163:	call   0x14001d0d0
   14000b168:	nop
   14000b169:	nop
   14000b16a:	xor    eax,eax
   14000b16c:	jmp    0x14000b18d
   14000b16e:	mov    r9,rax
   14000b171:	mov    r8d,r14d
   14000b174:	mov    rdx,rdi
   14000b177:	mov    rcx,rsi
   14000b17a:	call   0x14001cdd4
   14000b17f:	mov    rdi,rax
   14000b182:	mov    rcx,rbx
   14000b185:	call   0x14000a9bc
   14000b18a:	mov    rax,rdi
   14000b18d:	mov    rbx,QWORD PTR [rsp+0x58]
   14000b192:	mov    rsi,QWORD PTR [rsp+0x60]
   14000b197:	add    rsp,0x30
   14000b19b:	pop    r15
   14000b19d:	pop    r14
   14000b19f:	pop    rdi
   14000b1a0:	ret    
   14000b1a1:	int3   
   14000b1a2:	int3   
   14000b1a3:	int3   
   14000b1a4:	int3   
   14000b1a5:	int3   
   14000b1a6:	int3   
   14000b1a7:	int3   
   14000b1a8:	int3   
   14000b1a9:	int3   
   14000b1aa:	int3   
   14000b1ab:	int3   
   14000b1ac:	int3   
   14000b1ad:	int3   
   14000b1ae:	int3   
   14000b1af:	int3   
   14000b1b0:	int3   
   14000b1b1:	int3   
   14000b1b2:	int3   
   14000b1b3:	int3   
   14000b1b4:	int3   
   14000b1b5:	int3   
   14000b1b6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000b1c0:	mov    r11,rcx
   14000b1c3:	mov    r10,rdx
   14000b1c6:	cmp    r8,0x10
   14000b1ca:	jbe    0x14000b289
   14000b1d0:	sub    rdx,rcx
   14000b1d3:	jae    0x14000b1e4
   14000b1d5:	mov    rax,r10
   14000b1d8:	add    rax,r8
   14000b1db:	cmp    rcx,rax
   14000b1de:	jl     0x14000b57a
   14000b1e4:	bt     DWORD PTR [rip+0x3cd98],0x1        # 0x140047f84
   14000b1ec:	jae    0x14000b201
   14000b1ee:	push   rdi
   14000b1ef:	push   rsi
   14000b1f0:	mov    rdi,rcx
   14000b1f3:	mov    rsi,r10
   14000b1f6:	mov    rcx,r8
   14000b1f9:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b1fb:	pop    rsi
   14000b1fc:	pop    rdi
   14000b1fd:	mov    rax,r11
   14000b200:	ret    
   14000b201:	bt     DWORD PTR [rip+0x3cd7b],0x2        # 0x140047f84
   14000b209:	jb     0x14000b465
   14000b20f:	test   cl,0x7
   14000b212:	je     0x14000b24a
   14000b214:	test   cl,0x1
   14000b217:	je     0x14000b224
   14000b219:	mov    al,BYTE PTR [rdx+rcx*1]
   14000b21c:	dec    r8
   14000b21f:	mov    BYTE PTR [rcx],al
   14000b221:	inc    rcx
   14000b224:	test   cl,0x2
   14000b227:	je     0x14000b238
   14000b229:	mov    ax,WORD PTR [rdx+rcx*1]
   14000b22d:	sub    r8,0x2
   14000b231:	mov    WORD PTR [rcx],ax
   14000b234:	add    rcx,0x2
   14000b238:	test   cl,0x4
   14000b23b:	je     0x14000b24a
   14000b23d:	mov    eax,DWORD PTR [rdx+rcx*1]
   14000b240:	sub    r8,0x4
   14000b244:	mov    DWORD PTR [rcx],eax
   14000b246:	add    rcx,0x4
   14000b24a:	mov    r9,r8
   14000b24d:	shr    r9,0x5
   14000b251:	jne    0x14000b430
   14000b257:	mov    r9,r8
   14000b25a:	shr    r9,0x3
   14000b25e:	je     0x14000b274
   14000b260:	mov    rax,QWORD PTR [rdx+rcx*1]
   14000b264:	mov    QWORD PTR [rcx],rax
   14000b267:	add    rcx,0x8
   14000b26b:	dec    r9
   14000b26e:	jne    0x14000b260
   14000b270:	and    r8,0x7
   14000b274:	test   r8,r8
   14000b277:	jne    0x14000b280
   14000b279:	mov    rax,r11
   14000b27c:	ret    
   14000b27d:	nop    DWORD PTR [rax]
   14000b280:	lea    rdx,[rdx+rcx*1]
   14000b284:	mov    r10,rcx
   14000b287:	jmp    0x14000b28c
   14000b289:	mov    r10,r11
   14000b28c:	lea    r9,[rip+0xffffffffffff4d6d]        # 0x140000000
   14000b293:	mov    eax,DWORD PTR [r9+r8*4+0xb2a0]
   14000b29b:	add    rax,r9
   14000b29e:	jmp    rax
   14000b2a0:	in     al,0xb2
   14000b2a2:	add    BYTE PTR [rax],al
   14000b2a4:	call   0x13300b35b
   14000b2a9:	mov    dl,0x0
   14000b2ab:	add    bh,bh
   14000b2ad:	mov    dl,0x0
   14000b2af:	add    BYTE PTR [rbx+rsi*4],dl
   14000b2b2:	add    BYTE PTR [rax],al
   14000b2b4:	sbb    eax,0x2f0000b3
   14000b2b9:	mov    bl,0x0
   14000b2bb:	add    BYTE PTR [rdx-0x4d],al
   14000b2be:	add    BYTE PTR [rax],al
   14000b2c0:	pop    rsi
   14000b2c1:	mov    bl,0x0
   14000b2c3:	add    BYTE PTR [rax-0x4d],ch
   14000b2c6:	add    BYTE PTR [rax],al
   14000b2c8:	jnp    0x14000b27d
   14000b2ca:	add    BYTE PTR [rax],al
   14000b2cc:	(bad)  
   14000b2cd:	mov    bl,0x0
   14000b2cf:	add    BYTE PTR [rbx+rsi*4-0x4c430000],ch
   14000b2d6:	add    BYTE PTR [rax],al
   14000b2d8:	xlat   BYTE PTR ds:[rbx]
   14000b2d9:	mov    bl,0x0
   14000b2db:	add    dl,dh
   14000b2dd:	mov    bl,0x0
   14000b2df:	add    BYTE PTR [rsi],dl
   14000b2e1:	mov    ah,0x0
   14000b2e3:	add    BYTE PTR [rcx-0x75],cl
   14000b2e6:	ret    
   14000b2e7:	ret    
   14000b2e8:	movzx  rax,BYTE PTR [rdx]
   14000b2ec:	mov    BYTE PTR [r10],al
   14000b2ef:	mov    rax,r11
   14000b2f2:	ret    
   14000b2f3:	movzx  rax,WORD PTR [rdx]
   14000b2f7:	mov    WORD PTR [r10],ax
   14000b2fb:	mov    rax,r11
   14000b2fe:	ret    
   14000b2ff:	movzx  rax,BYTE PTR [rdx]
   14000b303:	movzx  rcx,WORD PTR [rdx+0x1]
   14000b308:	mov    BYTE PTR [r10],al
   14000b30b:	mov    WORD PTR [r10+0x1],cx
   14000b310:	mov    rax,r11
   14000b313:	ret    
   14000b314:	mov    eax,DWORD PTR [rdx]
   14000b316:	mov    DWORD PTR [r10],eax
   14000b319:	mov    rax,r11
   14000b31c:	ret    
   14000b31d:	movzx  rax,BYTE PTR [rdx]
   14000b321:	mov    ecx,DWORD PTR [rdx+0x1]
   14000b324:	mov    BYTE PTR [r10],al
   14000b327:	mov    DWORD PTR [r10+0x1],ecx
   14000b32b:	mov    rax,r11
   14000b32e:	ret    
   14000b32f:	movzx  rax,WORD PTR [rdx]
   14000b333:	mov    ecx,DWORD PTR [rdx+0x2]
   14000b336:	mov    WORD PTR [r10],ax
   14000b33a:	mov    DWORD PTR [r10+0x2],ecx
   14000b33e:	mov    rax,r11
   14000b341:	ret    
   14000b342:	movzx  rax,BYTE PTR [rdx]
   14000b346:	movzx  rcx,WORD PTR [rdx+0x1]
   14000b34b:	mov    edx,DWORD PTR [rdx+0x3]
   14000b34e:	mov    BYTE PTR [r10],al
   14000b351:	mov    WORD PTR [r10+0x1],cx
   14000b356:	mov    DWORD PTR [r10+0x3],edx
   14000b35a:	mov    rax,r11
   14000b35d:	ret    
   14000b35e:	mov    rax,QWORD PTR [rdx]
   14000b361:	mov    QWORD PTR [r10],rax
   14000b364:	mov    rax,r11
   14000b367:	ret    
   14000b368:	movzx  rax,BYTE PTR [rdx]
   14000b36c:	mov    rcx,QWORD PTR [rdx+0x1]
   14000b370:	mov    BYTE PTR [r10],al
   14000b373:	mov    QWORD PTR [r10+0x1],rcx
   14000b377:	mov    rax,r11
   14000b37a:	ret    
   14000b37b:	movzx  rax,WORD PTR [rdx]
   14000b37f:	mov    rcx,QWORD PTR [rdx+0x2]
   14000b383:	mov    WORD PTR [r10],ax
   14000b387:	mov    QWORD PTR [r10+0x2],rcx
   14000b38b:	mov    rax,r11
   14000b38e:	ret    
   14000b38f:	movzx  rax,BYTE PTR [rdx]
   14000b393:	movzx  rcx,WORD PTR [rdx+0x1]
   14000b398:	mov    rdx,QWORD PTR [rdx+0x3]
   14000b39c:	mov    BYTE PTR [r10],al
   14000b39f:	mov    WORD PTR [r10+0x1],cx
   14000b3a4:	mov    QWORD PTR [r10+0x3],rdx
   14000b3a8:	mov    rax,r11
   14000b3ab:	ret    
   14000b3ac:	mov    eax,DWORD PTR [rdx]
   14000b3ae:	mov    rcx,QWORD PTR [rdx+0x4]
   14000b3b2:	mov    DWORD PTR [r10],eax
   14000b3b5:	mov    QWORD PTR [r10+0x4],rcx
   14000b3b9:	mov    rax,r11
   14000b3bc:	ret    
   14000b3bd:	movzx  rax,BYTE PTR [rdx]
   14000b3c1:	mov    ecx,DWORD PTR [rdx+0x1]
   14000b3c4:	mov    rdx,QWORD PTR [rdx+0x5]
   14000b3c8:	mov    BYTE PTR [r10],al
   14000b3cb:	mov    DWORD PTR [r10+0x1],ecx
   14000b3cf:	mov    QWORD PTR [r10+0x5],rdx
   14000b3d3:	mov    rax,r11
   14000b3d6:	ret    
   14000b3d7:	movzx  rax,WORD PTR [rdx]
   14000b3db:	mov    ecx,DWORD PTR [rdx+0x2]
   14000b3de:	mov    rdx,QWORD PTR [rdx+0x6]
   14000b3e2:	mov    WORD PTR [r10],ax
   14000b3e6:	mov    DWORD PTR [r10+0x2],ecx
   14000b3ea:	mov    QWORD PTR [r10+0x6],rdx
   14000b3ee:	mov    rax,r11
   14000b3f1:	ret    
   14000b3f2:	movzx  r8,BYTE PTR [rdx]
   14000b3f6:	movzx  rax,WORD PTR [rdx+0x1]
   14000b3fb:	mov    ecx,DWORD PTR [rdx+0x3]
   14000b3fe:	mov    rdx,QWORD PTR [rdx+0x7]
   14000b402:	mov    BYTE PTR [r10],r8b
   14000b405:	mov    WORD PTR [r10+0x1],ax
   14000b40a:	mov    DWORD PTR [r10+0x3],ecx
   14000b40e:	mov    QWORD PTR [r10+0x7],rdx
   14000b412:	mov    rax,r11
   14000b415:	ret    
   14000b416:	movdqu xmm0,XMMWORD PTR [rdx]
   14000b41a:	movdqu XMMWORD PTR [r10],xmm0
   14000b41f:	mov    rax,r11
   14000b422:	ret    
   14000b423:	data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000b430:	mov    rax,QWORD PTR [rdx+rcx*1]
   14000b434:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   14000b439:	add    rcx,0x20
   14000b43d:	mov    QWORD PTR [rcx-0x20],rax
   14000b441:	mov    QWORD PTR [rcx-0x18],r10
   14000b445:	mov    rax,QWORD PTR [rdx+rcx*1-0x10]
   14000b44a:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   14000b44f:	dec    r9
   14000b452:	mov    QWORD PTR [rcx-0x10],rax
   14000b456:	mov    QWORD PTR [rcx-0x8],r10
   14000b45a:	jne    0x14000b430
   14000b45c:	and    r8,0x1f
   14000b460:	jmp    0x14000b257
   14000b465:	cmp    r8,0x20
   14000b469:	jbe    0x14000b550
   14000b46f:	test   cl,0xf
   14000b472:	jne    0x14000b482
   14000b474:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   14000b478:	add    rcx,0x10
   14000b47c:	sub    r8,0x10
   14000b480:	jmp    0x14000b49f
   14000b482:	movups xmm1,XMMWORD PTR [rdx+rcx*1]
   14000b486:	add    rcx,0x20
   14000b48a:	and    cl,0xf0
   14000b48d:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x10]
   14000b492:	movups XMMWORD PTR [r11],xmm1
   14000b496:	mov    rax,rcx
   14000b499:	sub    rax,r11
   14000b49c:	sub    r8,rax
   14000b49f:	mov    r9,r8
   14000b4a2:	shr    r9,0x7
   14000b4a6:	je     0x14000b50e
   14000b4a8:	movaps XMMWORD PTR [rcx-0x10],xmm0
   14000b4ac:	jmp    0x14000b4b8
   14000b4ae:	xchg   ax,ax
   14000b4b0:	movaps XMMWORD PTR [rcx-0x20],xmm0
   14000b4b4:	movaps XMMWORD PTR [rcx-0x10],xmm1
   14000b4b8:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   14000b4bc:	movups xmm1,XMMWORD PTR [rdx+rcx*1+0x10]
   14000b4c1:	add    rcx,0x80
   14000b4c8:	movaps XMMWORD PTR [rcx-0x80],xmm0
   14000b4cc:	movaps XMMWORD PTR [rcx-0x70],xmm1
   14000b4d0:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x60]
   14000b4d5:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x50]
   14000b4da:	dec    r9
   14000b4dd:	movaps XMMWORD PTR [rcx-0x60],xmm0
   14000b4e1:	movaps XMMWORD PTR [rcx-0x50],xmm1
   14000b4e5:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x40]
   14000b4ea:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x30]
   14000b4ef:	movaps XMMWORD PTR [rcx-0x40],xmm0
   14000b4f3:	movaps XMMWORD PTR [rcx-0x30],xmm1
   14000b4f7:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x20]
   14000b4fc:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x10]
   14000b501:	jne    0x14000b4b0
   14000b503:	movaps XMMWORD PTR [rcx-0x20],xmm0
   14000b507:	and    r8,0x7f
   14000b50b:	movaps xmm0,xmm1
   14000b50e:	mov    r9,r8
   14000b511:	shr    r9,0x4
   14000b515:	je     0x14000b531
   14000b517:	nop    WORD PTR [rax+rax*1+0x0]
   14000b520:	movaps XMMWORD PTR [rcx-0x10],xmm0
   14000b524:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   14000b528:	add    rcx,0x10
   14000b52c:	dec    r9
   14000b52f:	jne    0x14000b520
   14000b531:	and    r8,0xf
   14000b535:	je     0x14000b544
   14000b537:	lea    rax,[r8+rcx*1]
   14000b53b:	movups xmm1,XMMWORD PTR [rdx+rax*1-0x10]
   14000b540:	movups XMMWORD PTR [rax-0x10],xmm1
   14000b544:	movaps XMMWORD PTR [rcx-0x10],xmm0
   14000b548:	mov    rax,r11
   14000b54b:	ret    
   14000b54c:	nop    DWORD PTR [rax+0x0]
   14000b550:	movups xmm0,XMMWORD PTR [r10]
   14000b554:	lea    rcx,[r8+rcx*1-0x10]
   14000b559:	movups xmm1,XMMWORD PTR [rdx+rcx*1]
   14000b55d:	movups XMMWORD PTR [r11],xmm0
   14000b561:	movups XMMWORD PTR [rcx],xmm1
   14000b564:	mov    rax,r11
   14000b567:	ret    
   14000b568:	nop    DWORD PTR [rax+rax*1+0x0]
   14000b570:	data16 data16 xchg ax,ax
   14000b574:	data16 data16 xchg ax,ax
   14000b578:	xchg   ax,ax
   14000b57a:	bt     DWORD PTR [rip+0x3ca02],0x2        # 0x140047f84
   14000b582:	jb     0x14000b641
   14000b588:	add    rcx,r8
   14000b58b:	test   cl,0x7
   14000b58e:	je     0x14000b5c6
   14000b590:	test   cl,0x1
   14000b593:	je     0x14000b5a0
   14000b595:	dec    rcx
   14000b598:	mov    al,BYTE PTR [rdx+rcx*1]
   14000b59b:	dec    r8
   14000b59e:	mov    BYTE PTR [rcx],al
   14000b5a0:	test   cl,0x2
   14000b5a3:	je     0x14000b5b4
   14000b5a5:	sub    rcx,0x2
   14000b5a9:	mov    ax,WORD PTR [rdx+rcx*1]
   14000b5ad:	sub    r8,0x2
   14000b5b1:	mov    WORD PTR [rcx],ax
   14000b5b4:	test   cl,0x4
   14000b5b7:	je     0x14000b5c6
   14000b5b9:	sub    rcx,0x4
   14000b5bd:	mov    eax,DWORD PTR [rdx+rcx*1]
   14000b5c0:	sub    r8,0x4
   14000b5c4:	mov    DWORD PTR [rcx],eax
   14000b5c6:	mov    r9,r8
   14000b5c9:	shr    r9,0x5
   14000b5cd:	jne    0x14000b610
   14000b5cf:	mov    r9,r8
   14000b5d2:	shr    r9,0x3
   14000b5d6:	je     0x14000b5ec
   14000b5d8:	sub    rcx,0x8
   14000b5dc:	mov    rax,QWORD PTR [rdx+rcx*1]
   14000b5e0:	dec    r9
   14000b5e3:	mov    QWORD PTR [rcx],rax
   14000b5e6:	jne    0x14000b5d8
   14000b5e8:	and    r8,0x7
   14000b5ec:	test   r8,r8
   14000b5ef:	jne    0x14000b600
   14000b5f1:	mov    rax,r11
   14000b5f4:	ret    
   14000b5f5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000b600:	sub    rcx,r8
   14000b603:	mov    r10,rcx
   14000b606:	lea    rdx,[rdx+rcx*1]
   14000b60a:	jmp    0x14000b28c
   14000b60f:	nop
   14000b610:	mov    rax,QWORD PTR [rdx+rcx*1-0x8]
   14000b615:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   14000b61a:	sub    rcx,0x20
   14000b61e:	mov    QWORD PTR [rcx+0x18],rax
   14000b622:	mov    QWORD PTR [rcx+0x10],r10
   14000b626:	mov    rax,QWORD PTR [rdx+rcx*1+0x8]
   14000b62b:	mov    r10,QWORD PTR [rdx+rcx*1]
   14000b62f:	dec    r9
   14000b632:	mov    QWORD PTR [rcx+0x8],rax
   14000b636:	mov    QWORD PTR [rcx],r10
   14000b639:	jne    0x14000b610
   14000b63b:	and    r8,0x1f
   14000b63f:	jmp    0x14000b5cf
   14000b641:	cmp    r8,0x20
   14000b645:	jbe    0x14000b550
   14000b64b:	add    rcx,r8
   14000b64e:	test   cl,0xf
   14000b651:	jne    0x14000b661
   14000b653:	sub    rcx,0x10
   14000b657:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   14000b65b:	sub    r8,0x10
   14000b65f:	jmp    0x14000b67c
   14000b661:	sub    rcx,0x10
   14000b665:	movups xmm1,XMMWORD PTR [rdx+rcx*1]
   14000b669:	mov    rax,rcx
   14000b66c:	and    cl,0xf0
   14000b66f:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   14000b673:	movups XMMWORD PTR [rax],xmm1
   14000b676:	mov    r8,rcx
   14000b679:	sub    r8,r11
   14000b67c:	mov    r9,r8
   14000b67f:	shr    r9,0x7
   14000b683:	je     0x14000b6ed
   14000b685:	movaps XMMWORD PTR [rcx],xmm0
   14000b688:	jmp    0x14000b697
   14000b68a:	nop    WORD PTR [rax+rax*1+0x0]
   14000b690:	movaps XMMWORD PTR [rcx+0x10],xmm0
   14000b694:	movaps XMMWORD PTR [rcx],xmm1
   14000b697:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x10]
   14000b69c:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x20]
   14000b6a1:	sub    rcx,0x80
   14000b6a8:	movaps XMMWORD PTR [rcx+0x70],xmm0
   14000b6ac:	movaps XMMWORD PTR [rcx+0x60],xmm1
   14000b6b0:	movups xmm0,XMMWORD PTR [rdx+rcx*1+0x50]
   14000b6b5:	movups xmm1,XMMWORD PTR [rdx+rcx*1+0x40]
   14000b6ba:	dec    r9
   14000b6bd:	movaps XMMWORD PTR [rcx+0x50],xmm0
   14000b6c1:	movaps XMMWORD PTR [rcx+0x40],xmm1
   14000b6c5:	movups xmm0,XMMWORD PTR [rdx+rcx*1+0x30]
   14000b6ca:	movups xmm1,XMMWORD PTR [rdx+rcx*1+0x20]
   14000b6cf:	movaps XMMWORD PTR [rcx+0x30],xmm0
   14000b6d3:	movaps XMMWORD PTR [rcx+0x20],xmm1
   14000b6d7:	movups xmm0,XMMWORD PTR [rdx+rcx*1+0x10]
   14000b6dc:	movups xmm1,XMMWORD PTR [rdx+rcx*1]
   14000b6e0:	jne    0x14000b690
   14000b6e2:	movaps XMMWORD PTR [rcx+0x10],xmm0
   14000b6e6:	and    r8,0x7f
   14000b6ea:	movaps xmm0,xmm1
   14000b6ed:	mov    r9,r8
   14000b6f0:	shr    r9,0x4
   14000b6f4:	je     0x14000b710
   14000b6f6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000b700:	movaps XMMWORD PTR [rcx],xmm0
   14000b703:	sub    rcx,0x10
   14000b707:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   14000b70b:	dec    r9
   14000b70e:	jne    0x14000b700
   14000b710:	and    r8,0xf
   14000b714:	je     0x14000b71e
   14000b716:	movups xmm1,XMMWORD PTR [r10]
   14000b71a:	movups XMMWORD PTR [r11],xmm1
   14000b71e:	movaps XMMWORD PTR [rcx],xmm0
   14000b721:	mov    rax,r11
   14000b724:	ret    
   14000b725:	int3   
   14000b726:	int3   
   14000b727:	int3   
   14000b728:	jmp    0x14000b850
   14000b72d:	int3   
   14000b72e:	int3   
   14000b72f:	int3   
   14000b730:	sub    rsp,0x38
   14000b734:	mov    rax,QWORD PTR [rsp+0x60]
   14000b739:	mov    QWORD PTR [rsp+0x20],rax
   14000b73e:	call   0x14000b908
   14000b743:	int3   
   14000b744:	mov    rax,rsp
   14000b747:	mov    QWORD PTR [rax+0x10],rbx
   14000b74b:	mov    QWORD PTR [rax+0x18],rsi
   14000b74f:	mov    QWORD PTR [rax+0x20],rdi
   14000b753:	push   rbp
   14000b754:	lea    rbp,[rax-0x4b8]
   14000b75b:	sub    rsp,0x5b0
   14000b762:	mov    rax,QWORD PTR [rip+0x39b07]        # 0x140045270
   14000b769:	xor    rax,rsp
   14000b76c:	mov    QWORD PTR [rbp+0x4a0],rax
   14000b773:	mov    edi,r8d
   14000b776:	mov    esi,edx
   14000b778:	mov    ebx,ecx
   14000b77a:	cmp    ecx,0xffffffff
   14000b77d:	je     0x14000b784
   14000b77f:	call   0x14001d134
   14000b784:	and    DWORD PTR [rsp+0x30],0x0
   14000b789:	lea    rcx,[rsp+0x34]
   14000b78e:	xor    edx,edx
   14000b790:	mov    r8d,0x94
   14000b796:	call   0x140009800
   14000b79b:	lea    rax,[rsp+0x30]
   14000b7a0:	lea    rcx,[rbp-0x30]
   14000b7a4:	mov    QWORD PTR [rsp+0x20],rax
   14000b7a9:	lea    rax,[rbp-0x30]
   14000b7ad:	mov    QWORD PTR [rsp+0x28],rax
   14000b7b2:	call   0x140019894
   14000b7b7:	mov    rax,QWORD PTR [rbp+0x4b8]
   14000b7be:	mov    QWORD PTR [rbp+0xc8],rax
   14000b7c5:	lea    rax,[rbp+0x4b8]
   14000b7cc:	mov    DWORD PTR [rsp+0x30],esi
   14000b7d0:	add    rax,0x8
   14000b7d4:	mov    DWORD PTR [rsp+0x34],edi
   14000b7d8:	mov    QWORD PTR [rbp+0x68],rax
   14000b7dc:	mov    rax,QWORD PTR [rbp+0x4b8]
   14000b7e3:	mov    QWORD PTR [rsp+0x40],rax
   14000b7e8:	call   QWORD PTR [rip+0x29a82]        # 0x140035270
   14000b7ee:	lea    rcx,[rsp+0x20]
   14000b7f3:	mov    edi,eax
   14000b7f5:	call   0x14001a0f0
   14000b7fa:	test   eax,eax
   14000b7fc:	jne    0x14000b80e
   14000b7fe:	test   edi,edi
   14000b800:	jne    0x14000b80e
   14000b802:	cmp    ebx,0xffffffff
   14000b805:	je     0x14000b80e
   14000b807:	mov    ecx,ebx
   14000b809:	call   0x14001d134
   14000b80e:	mov    rcx,QWORD PTR [rbp+0x4a0]
   14000b815:	xor    rcx,rsp
   14000b818:	call   0x1400097d0
   14000b81d:	lea    r11,[rsp+0x5b0]
   14000b825:	mov    rbx,QWORD PTR [r11+0x18]
   14000b829:	mov    rsi,QWORD PTR [r11+0x20]
   14000b82d:	mov    rdi,QWORD PTR [r11+0x28]
   14000b831:	mov    rsp,r11
   14000b834:	pop    rbp
   14000b835:	ret    
   14000b836:	int3   
   14000b837:	int3   
   14000b838:	mov    rcx,QWORD PTR [rip+0x3c161]        # 0x1400479a0
   14000b83f:	rex.W jmp QWORD PTR [rip+0x299e2]        # 0x140035228
   14000b846:	int3   
   14000b847:	int3   
   14000b848:	mov    QWORD PTR [rip+0x3c151],rcx        # 0x1400479a0
   14000b84f:	ret    
   14000b850:	mov    QWORD PTR [rsp+0x8],rbx
   14000b855:	mov    QWORD PTR [rsp+0x10],rbp
   14000b85a:	mov    QWORD PTR [rsp+0x18],rsi
   14000b85f:	push   rdi
   14000b860:	sub    rsp,0x30
   14000b864:	mov    rbp,rcx
   14000b867:	mov    rcx,QWORD PTR [rip+0x3c132]        # 0x1400479a0
   14000b86e:	mov    ebx,r9d
   14000b871:	mov    rdi,r8
   14000b874:	mov    rsi,rdx
   14000b877:	call   QWORD PTR [rip+0x299ab]        # 0x140035228
   14000b87d:	mov    r9d,ebx
   14000b880:	mov    r8,rdi
   14000b883:	mov    rdx,rsi
   14000b886:	mov    rcx,rbp
   14000b889:	test   rax,rax
   14000b88c:	je     0x14000b8a5
   14000b88e:	mov    rbx,QWORD PTR [rsp+0x40]
   14000b893:	mov    rbp,QWORD PTR [rsp+0x48]
   14000b898:	mov    rsi,QWORD PTR [rsp+0x50]
   14000b89d:	add    rsp,0x30
   14000b8a1:	pop    rdi
   14000b8a2:	rex.W jmp rax
   14000b8a5:	mov    rax,QWORD PTR [rsp+0x60]
   14000b8aa:	mov    QWORD PTR [rsp+0x20],rax
   14000b8af:	call   0x14000b908
   14000b8b4:	int3   
   14000b8b5:	int3   
   14000b8b6:	int3   
   14000b8b7:	int3   
   14000b8b8:	sub    rsp,0x38
   14000b8bc:	and    QWORD PTR [rsp+0x20],0x0
   14000b8c2:	xor    r9d,r9d
   14000b8c5:	xor    r8d,r8d
   14000b8c8:	xor    edx,edx
   14000b8ca:	xor    ecx,ecx
   14000b8cc:	call   0x14000b850
   14000b8d1:	add    rsp,0x38
   14000b8d5:	ret    
   14000b8d6:	int3   
   14000b8d7:	int3   
   14000b8d8:	sub    rsp,0x38
   14000b8dc:	and    QWORD PTR [rsp+0x20],0x0
   14000b8e2:	xor    r9d,r9d
   14000b8e5:	xor    r8d,r8d
   14000b8e8:	xor    edx,edx
   14000b8ea:	xor    ecx,ecx
   14000b8ec:	call   0x14000b850
   14000b8f1:	and    QWORD PTR [rsp+0x20],0x0
   14000b8f7:	xor    r9d,r9d
   14000b8fa:	xor    r8d,r8d
   14000b8fd:	xor    edx,edx
   14000b8ff:	xor    ecx,ecx
   14000b901:	call   0x14000b908
   14000b906:	int3   
   14000b907:	int3   
   14000b908:	sub    rsp,0x28
   14000b90c:	mov    ecx,0x17
   14000b911:	call   0x140033b0e
   14000b916:	test   eax,eax
   14000b918:	je     0x14000b921
   14000b91a:	mov    ecx,0x5
   14000b91f:	int    0x29
   14000b921:	mov    r8d,0x1
   14000b927:	mov    edx,0xc0000417
   14000b92c:	lea    ecx,[r8+0x1]
   14000b930:	call   0x14000b744
   14000b935:	mov    ecx,0xc0000417
   14000b93a:	add    rsp,0x28
   14000b93e:	jmp    0x14001a0d0
   14000b943:	int3   
   14000b944:	mov    QWORD PTR [rsp+0x8],rbx
   14000b949:	push   rdi
   14000b94a:	sub    rsp,0x20
   14000b94e:	mov    rdi,rcx
   14000b951:	mov    rcx,QWORD PTR [rip+0x3c048]        # 0x1400479a0
   14000b958:	call   QWORD PTR [rip+0x298ca]        # 0x140035228
   14000b95e:	mov    rcx,rdi
   14000b961:	mov    rbx,rax
   14000b964:	call   QWORD PTR [rip+0x298b6]        # 0x140035220
   14000b96a:	mov    QWORD PTR [rip+0x3c02f],rax        # 0x1400479a0
   14000b971:	mov    rax,rbx
   14000b974:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b979:	add    rsp,0x20
   14000b97d:	pop    rdi
   14000b97e:	ret    
   14000b97f:	int3   
   14000b980:	sub    rsp,0x28
   14000b984:	call   0x140010d60
   14000b989:	test   rax,rax
   14000b98c:	jne    0x14000b997
   14000b98e:	lea    rax,[rip+0x39e17]        # 0x1400457ac
   14000b995:	jmp    0x14000b99b
   14000b997:	add    rax,0x14
   14000b99b:	add    rsp,0x28
   14000b99f:	ret    
   14000b9a0:	mov    QWORD PTR [rsp+0x8],rbx
   14000b9a5:	push   rdi
   14000b9a6:	sub    rsp,0x20
   14000b9aa:	mov    edi,ecx
   14000b9ac:	call   0x140010d60
   14000b9b1:	test   rax,rax
   14000b9b4:	jne    0x14000b9bf
   14000b9b6:	lea    rax,[rip+0x39def]        # 0x1400457ac
   14000b9bd:	jmp    0x14000b9c3
   14000b9bf:	add    rax,0x14
   14000b9c3:	mov    DWORD PTR [rax],edi
   14000b9c5:	call   0x140010d60
   14000b9ca:	lea    rbx,[rip+0x39dd7]        # 0x1400457a8
   14000b9d1:	test   rax,rax
   14000b9d4:	je     0x14000b9da
   14000b9d6:	lea    rbx,[rax+0x10]
   14000b9da:	mov    ecx,edi
   14000b9dc:	call   0x14000ba88
   14000b9e1:	mov    DWORD PTR [rbx],eax
   14000b9e3:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b9e8:	add    rsp,0x20
   14000b9ec:	pop    rdi
   14000b9ed:	ret    
   14000b9ee:	int3   
   14000b9ef:	int3   
   14000b9f0:	sub    rsp,0x28
   14000b9f4:	call   0x140010d60
   14000b9f9:	test   rax,rax
   14000b9fc:	jne    0x14000ba07
   14000b9fe:	lea    rax,[rip+0x39da3]        # 0x1400457a8
   14000ba05:	jmp    0x14000ba0b
   14000ba07:	add    rax,0x10
   14000ba0b:	add    rsp,0x28
   14000ba0f:	ret    
   14000ba10:	rex push rbx
   14000ba12:	sub    rsp,0x20
   14000ba16:	mov    rbx,rcx
   14000ba19:	test   rcx,rcx
   14000ba1c:	jne    0x14000ba28
   14000ba1e:	call   0x14000b8b8
   14000ba23:	lea    eax,[rbx+0x16]
   14000ba26:	jmp    0x14000ba45
   14000ba28:	call   0x140010d60
   14000ba2d:	test   rax,rax
   14000ba30:	jne    0x14000ba3b
   14000ba32:	lea    rax,[rip+0x39d73]        # 0x1400457ac
   14000ba39:	jmp    0x14000ba3f
   14000ba3b:	add    rax,0x14
   14000ba3f:	mov    eax,DWORD PTR [rax]
   14000ba41:	mov    DWORD PTR [rbx],eax
   14000ba43:	xor    eax,eax
   14000ba45:	add    rsp,0x20
   14000ba49:	pop    rbx
   14000ba4a:	ret    
   14000ba4b:	int3   
   14000ba4c:	rex push rbx
   14000ba4e:	sub    rsp,0x20
   14000ba52:	mov    rbx,rcx
   14000ba55:	test   rcx,rcx
   14000ba58:	jne    0x14000ba64
   14000ba5a:	call   0x14000b8b8
   14000ba5f:	lea    eax,[rbx+0x16]
   14000ba62:	jmp    0x14000ba81
   14000ba64:	call   0x140010d60
   14000ba69:	test   rax,rax
   14000ba6c:	jne    0x14000ba77
   14000ba6e:	lea    rax,[rip+0x39d33]        # 0x1400457a8
   14000ba75:	jmp    0x14000ba7b
   14000ba77:	add    rax,0x10
   14000ba7b:	mov    eax,DWORD PTR [rax]
   14000ba7d:	mov    DWORD PTR [rbx],eax
   14000ba7f:	xor    eax,eax
   14000ba81:	add    rsp,0x20
   14000ba85:	pop    rbx
   14000ba86:	ret    
   14000ba87:	int3   
   14000ba88:	lea    r10,[rip+0x39bb1]        # 0x140045640
   14000ba8f:	xor    edx,edx
   14000ba91:	mov    r8,r10
   14000ba94:	lea    r9d,[rdx+0x8]
   14000ba98:	cmp    ecx,DWORD PTR [r8]
   14000ba9b:	je     0x14000bacc
   14000ba9d:	inc    edx
   14000ba9f:	add    r8,r9
   14000baa2:	movsxd rax,edx
   14000baa5:	cmp    rax,0x2d
   14000baa9:	jb     0x14000ba98
   14000baab:	lea    eax,[rcx-0x13]
   14000baae:	cmp    eax,0x11
   14000bab1:	ja     0x14000bab9
   14000bab3:	mov    eax,0xd
   14000bab8:	ret    
   14000bab9:	add    ecx,0xffffff44
   14000babf:	mov    eax,0x16
   14000bac4:	cmp    ecx,0xe
   14000bac7:	cmovbe eax,r9d
   14000bacb:	ret    
   14000bacc:	movsxd rax,edx
   14000bacf:	mov    eax,DWORD PTR [r10+rax*8+0x4]
   14000bad4:	ret    
   14000bad5:	int3   
   14000bad6:	int3   
   14000bad7:	int3   
   14000bad8:	rex push rbx
   14000bada:	sub    rsp,0x20
   14000bade:	mov    ebx,ecx
   14000bae0:	call   0x140010d60
   14000bae5:	test   rax,rax
   14000bae8:	jne    0x14000baf1
   14000baea:	mov    eax,0xc
   14000baef:	jmp    0x14000bb0c
   14000baf1:	call   0x140010d60
   14000baf6:	test   rax,rax
   14000baf9:	jne    0x14000bb04
   14000bafb:	lea    rax,[rip+0x39caa]        # 0x1400457ac
   14000bb02:	jmp    0x14000bb08
   14000bb04:	add    rax,0x14
   14000bb08:	mov    DWORD PTR [rax],ebx
   14000bb0a:	xor    eax,eax
   14000bb0c:	add    rsp,0x20
   14000bb10:	pop    rbx
   14000bb11:	ret    
   14000bb12:	int3   
   14000bb13:	int3   
   14000bb14:	rex push rbx
   14000bb16:	sub    rsp,0x20
   14000bb1a:	mov    ebx,ecx
   14000bb1c:	call   0x140010d60
   14000bb21:	test   rax,rax
   14000bb24:	jne    0x14000bb2d
   14000bb26:	mov    eax,0xc
   14000bb2b:	jmp    0x14000bb48
   14000bb2d:	call   0x140010d60
   14000bb32:	test   rax,rax
   14000bb35:	jne    0x14000bb40
   14000bb37:	lea    rax,[rip+0x39c6a]        # 0x1400457a8
   14000bb3e:	jmp    0x14000bb44
   14000bb40:	add    rax,0x10
   14000bb44:	mov    DWORD PTR [rax],ebx
   14000bb46:	xor    eax,eax
   14000bb48:	add    rsp,0x20
   14000bb4c:	pop    rbx
   14000bb4d:	ret    
   14000bb4e:	int3   
   14000bb4f:	int3   
   14000bb50:	mov    r9,r8
   14000bb53:	mov    r8,rdx
   14000bb56:	mov    rdx,rcx
   14000bb59:	lea    rcx,[rip+0x230]        # 0x14000bd90
   14000bb60:	jmp    0x14000bbc8
   14000bb65:	int3   
   14000bb66:	int3   
   14000bb67:	int3   
   14000bb68:	mov    r9,rdx
   14000bb6b:	mov    rdx,rcx
   14000bb6e:	lea    rcx,[rip+0xa13f]        # 0x140015cb4
   14000bb75:	xor    r8d,r8d
   14000bb78:	jmp    0x14000bbc8
   14000bb7d:	int3   
   14000bb7e:	int3   
   14000bb7f:	int3   
   14000bb80:	mov    r9,r8
   14000bb83:	mov    r8,rdx
   14000bb86:	mov    rdx,rcx
   14000bb89:	lea    rcx,[rip+0xa124]        # 0x140015cb4
   14000bb90:	jmp    0x14000bbc8
   14000bb95:	int3   
   14000bb96:	int3   
   14000bb97:	int3   
   14000bb98:	mov    r9,r8
   14000bb9b:	mov    r8,rdx
   14000bb9e:	mov    rdx,rcx
   14000bba1:	lea    rcx,[rip+0x95b4]        # 0x14001515c
   14000bba8:	jmp    0x14000bbc8
   14000bbad:	int3   
   14000bbae:	int3   
   14000bbaf:	int3   
   14000bbb0:	mov    r9,rdx
   14000bbb3:	mov    rdx,rcx
   14000bbb6:	lea    rcx,[rip+0x1d3]        # 0x14000bd90
   14000bbbd:	xor    r8d,r8d
   14000bbc0:	jmp    0x14000bbc8
   14000bbc5:	int3   
   14000bbc6:	int3   
   14000bbc7:	int3   
   14000bbc8:	mov    QWORD PTR [rsp+0x8],rbx
   14000bbcd:	mov    QWORD PTR [rsp+0x18],rsi
   14000bbd2:	mov    QWORD PTR [rsp+0x20],rdi
   14000bbd7:	push   r12
   14000bbd9:	push   r14
   14000bbdb:	push   r15
   14000bbdd:	sub    rsp,0x20
   14000bbe1:	mov    r14,r9
   14000bbe4:	mov    r15,r8
   14000bbe7:	mov    rsi,rdx
   14000bbea:	mov    r12,rcx
   14000bbed:	call   0x14000a918
   14000bbf2:	lea    rdi,[rax+0x30]
   14000bbf6:	mov    QWORD PTR [rsp+0x48],rdi
   14000bbfb:	xor    eax,eax
   14000bbfd:	test   rsi,rsi
   14000bc00:	setne  al
   14000bc03:	test   eax,eax
   14000bc05:	jne    0x14000bc1c
   14000bc07:	call   0x14000b9f0
   14000bc0c:	mov    DWORD PTR [rax],0x16
   14000bc12:	call   0x14000b8b8
   14000bc17:	or     eax,0xffffffff
   14000bc1a:	jmp    0x14000bc55
   14000bc1c:	mov    rcx,rdi
   14000bc1f:	call   0x14000a920
   14000bc24:	nop
   14000bc25:	mov    rcx,rdi
   14000bc28:	call   0x14000bcc0
   14000bc2d:	mov    ebx,eax
   14000bc2f:	mov    r9,r14
   14000bc32:	mov    r8,r15
   14000bc35:	mov    rdx,rsi
   14000bc38:	mov    rcx,rdi
   14000bc3b:	call   r12
   14000bc3e:	mov    esi,eax
   14000bc40:	mov    rdx,rdi
   14000bc43:	mov    ecx,ebx
   14000bc45:	call   0x14000bc88
   14000bc4a:	nop
   14000bc4b:	mov    rcx,rdi
   14000bc4e:	call   0x14000a9bc
   14000bc53:	mov    eax,esi
   14000bc55:	mov    rbx,QWORD PTR [rsp+0x40]
   14000bc5a:	mov    rsi,QWORD PTR [rsp+0x50]
   14000bc5f:	mov    rdi,QWORD PTR [rsp+0x58]
   14000bc64:	add    rsp,0x20
   14000bc68:	pop    r15
   14000bc6a:	pop    r14
   14000bc6c:	pop    r12
   14000bc6e:	ret    
   14000bc6f:	int3   
   14000bc70:	mov    r9,rdx
   14000bc73:	mov    rdx,rcx
   14000bc76:	lea    rcx,[rip+0x94df]        # 0x14001515c
   14000bc7d:	xor    r8d,r8d
   14000bc80:	jmp    0x14000bbc8
   14000bc85:	int3   
   14000bc86:	int3   
   14000bc87:	int3   
   14000bc88:	test   ecx,ecx
   14000bc8a:	je     0x14000bcbe
   14000bc8c:	push   rbx
   14000bc8d:	sub    rsp,0x20
   14000bc91:	test   DWORD PTR [rdx+0x18],0x1000
   14000bc98:	mov    rbx,rdx
   14000bc9b:	je     0x14000bcb9
   14000bc9d:	mov    rcx,rdx
   14000bca0:	call   0x14000ab5c
   14000bca5:	and    DWORD PTR [rbx+0x18],0xffffeeff
   14000bcac:	and    DWORD PTR [rbx+0x24],0x0
   14000bcb0:	and    QWORD PTR [rbx],0x0
   14000bcb4:	and    QWORD PTR [rbx+0x10],0x0
   14000bcb9:	add    rsp,0x20
   14000bcbd:	pop    rbx
   14000bcbe:	ret    
   14000bcbf:	int3   
   14000bcc0:	mov    QWORD PTR [rsp+0x8],rbx
   14000bcc5:	mov    QWORD PTR [rsp+0x10],rdi
   14000bcca:	push   r14
   14000bccc:	sub    rsp,0x20
   14000bcd0:	mov    rbx,rcx
   14000bcd3:	call   0x14001bc7c
   14000bcd8:	mov    ecx,eax
   14000bcda:	call   0x14001d13c
   14000bcdf:	test   eax,eax
   14000bce1:	je     0x14000bd7c
   14000bce7:	call   0x14000a918
   14000bcec:	add    rax,0x30
   14000bcf0:	cmp    rbx,rax
   14000bcf3:	jne    0x14000bcf9
   14000bcf5:	xor    eax,eax
   14000bcf7:	jmp    0x14000bd0c
   14000bcf9:	call   0x14000a918
   14000bcfe:	add    rax,0x60
   14000bd02:	cmp    rbx,rax
   14000bd05:	jne    0x14000bd7c
   14000bd07:	mov    eax,0x1
   14000bd0c:	inc    DWORD PTR [rip+0x3bc86]        # 0x140047998
   14000bd12:	test   DWORD PTR [rbx+0x18],0x10c
   14000bd19:	jne    0x14000bd7c
   14000bd1b:	lea    r14,[rip+0x3bc86]        # 0x1400479a8
   14000bd22:	movsxd rdi,eax
   14000bd25:	mov    rax,QWORD PTR [r14+rdi*8]
   14000bd29:	test   rax,rax
   14000bd2c:	jne    0x14000bd59
   14000bd2e:	mov    ecx,0x1000
   14000bd33:	call   0x14000fc4c
   14000bd38:	mov    QWORD PTR [r14+rdi*8],rax
   14000bd3c:	test   rax,rax
   14000bd3f:	jne    0x14000bd59
   14000bd41:	lea    rax,[rbx+0x20]
   14000bd45:	mov    QWORD PTR [rbx+0x10],rax
   14000bd49:	mov    QWORD PTR [rbx],rax
   14000bd4c:	mov    eax,0x2
   14000bd51:	mov    DWORD PTR [rbx+0x24],eax
   14000bd54:	mov    DWORD PTR [rbx+0x8],eax
   14000bd57:	jmp    0x14000bd6e
   14000bd59:	mov    QWORD PTR [rbx+0x10],rax
   14000bd5d:	mov    QWORD PTR [rbx],rax
   14000bd60:	mov    DWORD PTR [rbx+0x24],0x1000
   14000bd67:	mov    DWORD PTR [rbx+0x8],0x1000
   14000bd6e:	or     DWORD PTR [rbx+0x18],0x1102
   14000bd75:	mov    eax,0x1
   14000bd7a:	jmp    0x14000bd7e
   14000bd7c:	xor    eax,eax
   14000bd7e:	mov    rbx,QWORD PTR [rsp+0x30]
   14000bd83:	mov    rdi,QWORD PTR [rsp+0x38]
   14000bd88:	add    rsp,0x20
   14000bd8c:	pop    r14
   14000bd8e:	ret    
   14000bd8f:	int3   
   14000bd90:	mov    QWORD PTR [rsp+0x18],rbx
   14000bd95:	push   rbp
   14000bd96:	push   rsi
   14000bd97:	push   rdi
   14000bd98:	push   r12
   14000bd9a:	push   r13
   14000bd9c:	push   r14
   14000bd9e:	push   r15
   14000bda0:	lea    rbp,[rsp-0x1e0]
   14000bda8:	sub    rsp,0x2e0
   14000bdaf:	mov    rax,QWORD PTR [rip+0x394ba]        # 0x140045270
   14000bdb6:	xor    rax,rsp
   14000bdb9:	mov    QWORD PTR [rbp+0x1d8],rax
   14000bdc0:	xor    eax,eax
   14000bdc2:	mov    rsi,rcx
   14000bdc5:	mov    QWORD PTR [rsp+0x68],rcx
   14000bdca:	mov    rdi,rdx
   14000bdcd:	lea    rcx,[rbp-0x58]
   14000bdd1:	mov    rdx,r8
   14000bdd4:	mov    r13,r9
   14000bdd7:	mov    DWORD PTR [rsp+0x70],eax
   14000bddb:	mov    r14d,eax
   14000bdde:	mov    DWORD PTR [rsp+0x54],eax
   14000bde2:	mov    r12d,eax
   14000bde5:	mov    DWORD PTR [rsp+0x48],eax
   14000bde9:	mov    DWORD PTR [rsp+0x60],eax
   14000bded:	mov    DWORD PTR [rsp+0x58],eax
   14000bdf1:	mov    ebx,eax
   14000bdf3:	mov    DWORD PTR [rsp+0x50],eax
   14000bdf7:	call   0x140007ff0
   14000bdfc:	call   0x14000b9f0
   14000be01:	or     r8d,0xffffffff
   14000be05:	xor    r10d,r10d
   14000be08:	mov    QWORD PTR [rbp-0x80],rax
   14000be0c:	test   rsi,rsi
   14000be0f:	je     0x14000c74b
   14000be15:	test   BYTE PTR [rsi+0x18],0x40
   14000be19:	lea    r9,[rip+0xffffffffffff41e0]        # 0x140000000
   14000be20:	jne    0x14000beac
   14000be26:	mov    rcx,rsi
   14000be29:	call   0x14001bc7c
   14000be2e:	lea    r8,[rip+0x3a5db]        # 0x140046410
   14000be35:	movsxd r10,eax
   14000be38:	lea    ecx,[r10+0x2]
   14000be3c:	cmp    ecx,0x1
   14000be3f:	jbe    0x14000be63
   14000be41:	mov    rdx,r10
   14000be44:	mov    rcx,r10
   14000be47:	lea    rax,[rip+0xffffffffffff41b2]        # 0x140000000
   14000be4e:	and    edx,0x1f
   14000be51:	sar    rcx,0x5
   14000be55:	imul   r9,rdx,0x58
   14000be59:	add    r9,QWORD PTR [rax+rcx*8+0x48840]
   14000be61:	jmp    0x14000be66
   14000be63:	mov    r9,r8
   14000be66:	test   BYTE PTR [r9+0x38],0x7f
   14000be6b:	jne    0x14000c74b
   14000be71:	lea    eax,[r10+0x2]
   14000be75:	lea    r9,[rip+0xffffffffffff4184]        # 0x140000000
   14000be7c:	cmp    eax,0x1
   14000be7f:	jbe    0x14000be9a
   14000be81:	mov    rcx,r10
   14000be84:	mov    rax,r10
   14000be87:	and    ecx,0x1f
   14000be8a:	sar    rax,0x5
   14000be8e:	imul   r8,rcx,0x58
   14000be92:	add    r8,QWORD PTR [r9+rax*8+0x48840]
   14000be9a:	test   BYTE PTR [r8+0x38],0x80
   14000be9f:	jne    0x14000c74b
   14000bea5:	or     r8d,0xffffffff
   14000bea9:	xor    r10d,r10d
   14000beac:	test   rdi,rdi
   14000beaf:	je     0x14000c74b
   14000beb5:	mov    r15b,BYTE PTR [rdi]
   14000beb8:	mov    esi,r10d
   14000bebb:	mov    DWORD PTR [rsp+0x40],r10d
   14000bec0:	mov    DWORD PTR [rsp+0x44],r10d
   14000bec5:	mov    edx,r10d
   14000bec8:	mov    QWORD PTR [rbp-0x78],r10
   14000becc:	test   r15b,r15b
   14000becf:	je     0x14000c763
   14000bed5:	mov    r11d,0x200
   14000bedb:	inc    rdi
   14000bede:	mov    QWORD PTR [rbp-0x68],rdi
   14000bee2:	test   esi,esi
   14000bee4:	js     0x14000c763
   14000beea:	lea    eax,[r15-0x20]
   14000beee:	cmp    al,0x58
   14000bef0:	ja     0x14000bf04
   14000bef2:	movsx  rax,r15b
   14000bef6:	movsx  ecx,BYTE PTR [rax+r9*1+0x38120]
   14000beff:	and    ecx,0xf
   14000bf02:	jmp    0x14000bf07
   14000bf04:	mov    ecx,r10d
   14000bf07:	movsxd rax,edx
   14000bf0a:	movsxd rcx,ecx
   14000bf0d:	lea    rdx,[rax+rcx*8]
   14000bf11:	movsx  edx,BYTE PTR [rdx+r9*1+0x38140]
   14000bf1a:	sar    edx,0x4
   14000bf1d:	mov    DWORD PTR [rsp+0x5c],edx
   14000bf21:	mov    ecx,edx
   14000bf23:	test   edx,edx
   14000bf25:	je     0x14000c60d
   14000bf2b:	dec    ecx
   14000bf2d:	je     0x14000c727
   14000bf33:	dec    ecx
   14000bf35:	je     0x14000c6d7
   14000bf3b:	dec    ecx
   14000bf3d:	je     0x14000c69b
   14000bf43:	dec    ecx
   14000bf45:	je     0x14000c693
   14000bf4b:	dec    ecx
   14000bf4d:	je     0x14000c65e
   14000bf53:	dec    ecx
   14000bf55:	je     0x14000c583
   14000bf5b:	dec    ecx
   14000bf5d:	jne    0x14000c56e
   14000bf63:	movsx  ecx,r15b
   14000bf67:	cmp    ecx,0x64
   14000bf6a:	jg     0x14000c0d9
   14000bf70:	je     0x14000c1d1
   14000bf76:	cmp    ecx,0x41
   14000bf79:	je     0x14000c0ae
   14000bf7f:	cmp    ecx,0x43
   14000bf82:	je     0x14000c054
   14000bf88:	lea    eax,[rcx-0x45]
   14000bf8b:	test   eax,0xfffffffd
   14000bf90:	je     0x14000c0ae
   14000bf96:	cmp    ecx,0x53
   14000bf99:	je     0x14000c008
   14000bf9b:	cmp    ecx,0x58
   14000bf9e:	je     0x14000c16a
   14000bfa4:	cmp    ecx,0x5a
   14000bfa7:	je     0x14000bfc0
   14000bfa9:	cmp    ecx,0x61
   14000bfac:	je     0x14000c0ba
   14000bfb2:	cmp    ecx,0x63
   14000bfb5:	je     0x14000c062
   14000bfbb:	jmp    0x14000c3dc
   14000bfc0:	mov    rax,QWORD PTR [r13+0x0]
   14000bfc4:	add    r13,0x8
   14000bfc8:	test   rax,rax
   14000bfcb:	je     0x14000bffc
   14000bfcd:	mov    rbx,QWORD PTR [rax+0x8]
   14000bfd1:	test   rbx,rbx
   14000bfd4:	je     0x14000bffc
   14000bfd6:	movsx  eax,WORD PTR [rax]
   14000bfd9:	bt     r14d,0xb
   14000bfde:	jae    0x14000bff2
   14000bfe0:	cdq    
   14000bfe1:	mov    DWORD PTR [rsp+0x50],0x1
   14000bfe9:	sub    eax,edx
   14000bfeb:	sar    eax,1
   14000bfed:	jmp    0x14000c3d8
   14000bff2:	mov    DWORD PTR [rsp+0x50],r10d
   14000bff7:	jmp    0x14000c3d8
   14000bffc:	mov    rbx,QWORD PTR [rip+0x397ad]        # 0x1400457b0
   14000c003:	jmp    0x14000c3cd
   14000c008:	test   r14d,0x830
   14000c00f:	jne    0x14000c016
   14000c011:	bts    r14d,0xb
   14000c016:	mov    rbx,QWORD PTR [r13+0x0]
   14000c01a:	cmp    r12d,r8d
   14000c01d:	mov    eax,r12d
   14000c020:	mov    ecx,0x7fffffff
   14000c025:	cmove  eax,ecx
   14000c028:	add    r13,0x8
   14000c02c:	test   r14d,0x810
   14000c033:	je     0x14000c136
   14000c039:	test   rbx,rbx
   14000c03c:	mov    DWORD PTR [rsp+0x50],0x1
   14000c044:	cmove  rbx,QWORD PTR [rip+0x3976c]        # 0x1400457b8
   14000c04c:	mov    rcx,rbx
   14000c04f:	jmp    0x14000c12a
   14000c054:	test   r14d,0x830
   14000c05b:	jne    0x14000c062
   14000c05d:	bts    r14d,0xb
   14000c062:	add    r13,0x8
   14000c066:	test   r14d,0x810
   14000c06d:	je     0x14000c096
   14000c06f:	movzx  r9d,WORD PTR [r13-0x8]
   14000c074:	lea    rdx,[rbp-0x30]
   14000c078:	lea    rcx,[rsp+0x44]
   14000c07d:	mov    r8,r11
   14000c080:	call   0x14001d67c
   14000c085:	xor    r10d,r10d
   14000c088:	test   eax,eax
   14000c08a:	je     0x14000c0a5
   14000c08c:	mov    DWORD PTR [rsp+0x58],0x1
   14000c094:	jmp    0x14000c0a5
   14000c096:	mov    al,BYTE PTR [r13-0x8]
   14000c09a:	mov    DWORD PTR [rsp+0x44],0x1
   14000c0a2:	mov    BYTE PTR [rbp-0x30],al
   14000c0a5:	lea    rbx,[rbp-0x30]
   14000c0a9:	jmp    0x14000c3dc
   14000c0ae:	mov    DWORD PTR [rsp+0x60],0x1
   14000c0b6:	add    r15b,0x20
   14000c0ba:	or     r14d,0x40
   14000c0be:	lea    rbx,[rbp-0x30]
   14000c0c2:	mov    esi,r11d
   14000c0c5:	test   r12d,r12d
   14000c0c8:	jns    0x14000c2ef
   14000c0ce:	mov    r12d,0x6
   14000c0d4:	jmp    0x14000c335
   14000c0d9:	cmp    ecx,0x67
   14000c0dc:	jle    0x14000c0ba
   14000c0de:	cmp    ecx,0x69
   14000c0e1:	je     0x14000c1d1
   14000c0e7:	cmp    ecx,0x6e
   14000c0ea:	je     0x14000c19f
   14000c0f0:	cmp    ecx,0x6f
   14000c0f3:	je     0x14000c18f
   14000c0f9:	cmp    ecx,0x70
   14000c0fc:	je     0x14000c15f
   14000c0fe:	cmp    ecx,0x73
   14000c101:	je     0x14000c016
   14000c107:	cmp    ecx,0x75
   14000c10a:	je     0x14000c1d5
   14000c110:	cmp    ecx,0x78
   14000c113:	jne    0x14000c3dc
   14000c119:	lea    eax,[rcx-0x51]
   14000c11c:	jmp    0x14000c16f
   14000c11e:	dec    eax
   14000c120:	cmp    WORD PTR [rcx],r10w
   14000c124:	je     0x14000c12e
   14000c126:	add    rcx,0x2
   14000c12a:	test   eax,eax
   14000c12c:	jne    0x14000c11e
   14000c12e:	sub    rcx,rbx
   14000c131:	sar    rcx,1
   14000c134:	jmp    0x14000c156
   14000c136:	test   rbx,rbx
   14000c139:	cmove  rbx,QWORD PTR [rip+0x3966f]        # 0x1400457b0
   14000c141:	mov    rcx,rbx
   14000c144:	jmp    0x14000c150
   14000c146:	dec    eax
   14000c148:	cmp    BYTE PTR [rcx],r10b
   14000c14b:	je     0x14000c154
   14000c14d:	inc    rcx
   14000c150:	test   eax,eax
   14000c152:	jne    0x14000c146
   14000c154:	sub    ecx,ebx
   14000c156:	mov    DWORD PTR [rsp+0x44],ecx
   14000c15a:	jmp    0x14000c3dc
   14000c15f:	mov    r12d,0x10
   14000c165:	bts    r14d,0xf
   14000c16a:	mov    eax,0x7
   14000c16f:	mov    DWORD PTR [rsp+0x70],eax
   14000c173:	mov    r9d,0x10
   14000c179:	test   r14b,r14b
   14000c17c:	jns    0x14000c1db
   14000c17e:	add    al,0x51
   14000c180:	mov    BYTE PTR [rsp+0x4c],0x30
   14000c185:	lea    edx,[r9-0xe]
   14000c189:	mov    BYTE PTR [rsp+0x4d],al
   14000c18d:	jmp    0x14000c1df
   14000c18f:	mov    r9d,0x8
   14000c195:	test   r14b,r14b
   14000c198:	jns    0x14000c1db
   14000c19a:	or     r14d,r11d
   14000c19d:	jmp    0x14000c1db
   14000c19f:	mov    rdi,QWORD PTR [r13+0x0]
   14000c1a3:	add    r13,0x8
   14000c1a7:	call   0x140007888
   14000c1ac:	xor    r10d,r10d
   14000c1af:	test   eax,eax
   14000c1b1:	je     0x14000c74b
   14000c1b7:	test   r14b,0x20
   14000c1bb:	je     0x14000c1c2
   14000c1bd:	mov    WORD PTR [rdi],si
   14000c1c0:	jmp    0x14000c1c4
   14000c1c2:	mov    DWORD PTR [rdi],esi
   14000c1c4:	mov    DWORD PTR [rsp+0x58],0x1
   14000c1cc:	jmp    0x14000c53d
   14000c1d1:	or     r14d,0x40
   14000c1d5:	mov    r9d,0xa
   14000c1db:	mov    edx,DWORD PTR [rsp+0x48]
   14000c1df:	mov    eax,0x8000
   14000c1e4:	test   eax,r14d
   14000c1e7:	je     0x14000c1f3
   14000c1e9:	mov    r8,QWORD PTR [r13+0x0]
   14000c1ed:	add    r13,0x8
   14000c1f1:	jmp    0x14000c22d
   14000c1f3:	bt     r14d,0xc
   14000c1f8:	jb     0x14000c1e9
   14000c1fa:	add    r13,0x8
   14000c1fe:	test   r14b,0x20
   14000c202:	je     0x14000c21d
   14000c204:	mov    QWORD PTR [rsp+0x78],r13
   14000c209:	test   r14b,0x40
   14000c20d:	je     0x14000c216
   14000c20f:	movsx  r8,WORD PTR [r13-0x8]
   14000c214:	jmp    0x14000c232
   14000c216:	movzx  r8d,WORD PTR [r13-0x8]
   14000c21b:	jmp    0x14000c232
   14000c21d:	test   r14b,0x40
   14000c221:	je     0x14000c229
   14000c223:	movsxd r8,DWORD PTR [r13-0x8]
   14000c227:	jmp    0x14000c22d
   14000c229:	mov    r8d,DWORD PTR [r13-0x8]
   14000c22d:	mov    QWORD PTR [rsp+0x78],r13
   14000c232:	test   r14b,0x40
   14000c236:	je     0x14000c245
   14000c238:	test   r8,r8
   14000c23b:	jns    0x14000c245
   14000c23d:	neg    r8
   14000c240:	bts    r14d,0x8
   14000c245:	test   eax,r14d
   14000c248:	jne    0x14000c254
   14000c24a:	bt     r14d,0xc
   14000c24f:	jb     0x14000c254
   14000c251:	mov    r8d,r8d
   14000c254:	test   r12d,r12d
   14000c257:	jns    0x14000c261
   14000c259:	mov    r12d,0x1
   14000c25f:	jmp    0x14000c26c
   14000c261:	and    r14d,0xfffffff7
   14000c265:	cmp    r12d,r11d
   14000c268:	cmovg  r12d,r11d
   14000c26c:	mov    r13d,DWORD PTR [rsp+0x70]
   14000c271:	mov    rax,r8
   14000c274:	lea    rbx,[rbp+0x1cf]
   14000c27b:	neg    rax
   14000c27e:	sbb    ecx,ecx
   14000c280:	and    ecx,edx
   14000c282:	mov    DWORD PTR [rsp+0x48],ecx
   14000c286:	mov    ecx,r12d
   14000c289:	dec    r12d
   14000c28c:	test   ecx,ecx
   14000c28e:	jg     0x14000c295
   14000c290:	test   r8,r8
   14000c293:	je     0x14000c2b5
   14000c295:	xor    edx,edx
   14000c297:	mov    rax,r8
   14000c29a:	movsxd rcx,r9d
   14000c29d:	div    rcx
   14000c2a0:	mov    r8,rax
   14000c2a3:	lea    eax,[rdx+0x30]
   14000c2a6:	cmp    eax,0x39
   14000c2a9:	jle    0x14000c2ae
   14000c2ab:	add    eax,r13d
   14000c2ae:	mov    BYTE PTR [rbx],al
   14000c2b0:	dec    rbx
   14000c2b3:	jmp    0x14000c286
   14000c2b5:	mov    r13,QWORD PTR [rsp+0x78]
   14000c2ba:	lea    rax,[rbp+0x1cf]
   14000c2c1:	sub    eax,ebx
   14000c2c3:	inc    rbx
   14000c2c6:	mov    DWORD PTR [rsp+0x44],eax
   14000c2ca:	test   r11d,r14d
   14000c2cd:	je     0x14000c3dc
   14000c2d3:	test   eax,eax
   14000c2d5:	je     0x14000c2e0
   14000c2d7:	cmp    BYTE PTR [rbx],0x30
   14000c2da:	je     0x14000c3dc
   14000c2e0:	dec    rbx
   14000c2e3:	inc    DWORD PTR [rsp+0x44]
   14000c2e7:	mov    BYTE PTR [rbx],0x30
   14000c2ea:	jmp    0x14000c3dc
   14000c2ef:	jne    0x14000c2ff
   14000c2f1:	cmp    r15b,0x67
   14000c2f5:	jne    0x14000c335
   14000c2f7:	mov    r12d,0x1
   14000c2fd:	jmp    0x14000c335
   14000c2ff:	cmp    r12d,r11d
   14000c302:	cmovg  r12d,r11d
   14000c306:	cmp    r12d,0xa3
   14000c30d:	jle    0x14000c335
   14000c30f:	lea    edi,[r12+0x15d]
   14000c317:	movsxd rcx,edi
   14000c31a:	call   0x14000fc4c
   14000c31f:	mov    QWORD PTR [rbp-0x78],rax
   14000c323:	test   rax,rax
   14000c326:	je     0x14000c32f
   14000c328:	mov    rbx,rax
   14000c32b:	mov    esi,edi
   14000c32d:	jmp    0x14000c335
   14000c32f:	mov    r12d,0xa3
   14000c335:	mov    rax,QWORD PTR [r13+0x0]
   14000c339:	mov    rcx,QWORD PTR [rip+0x3a0b0]        # 0x1400463f0
   14000c340:	add    r13,0x8
   14000c344:	movsx  edi,r15b
   14000c348:	movsxd rsi,esi
   14000c34b:	mov    QWORD PTR [rbp-0x60],rax
   14000c34f:	call   QWORD PTR [rip+0x28ed3]        # 0x140035228
   14000c355:	lea    rcx,[rbp-0x58]
   14000c359:	mov    r9d,edi
   14000c35c:	mov    QWORD PTR [rsp+0x30],rcx
   14000c361:	mov    ecx,DWORD PTR [rsp+0x60]
   14000c365:	mov    r8,rsi
   14000c368:	mov    DWORD PTR [rsp+0x28],ecx
   14000c36c:	lea    rcx,[rbp-0x60]
   14000c370:	mov    rdx,rbx
   14000c373:	mov    DWORD PTR [rsp+0x20],r12d
   14000c378:	call   rax
   14000c37a:	mov    edi,r14d
   14000c37d:	and    edi,0x80
   14000c383:	je     0x14000c3a0
   14000c385:	test   r12d,r12d
   14000c388:	jne    0x14000c3a0
   14000c38a:	mov    rcx,QWORD PTR [rip+0x3a077]        # 0x140046408
   14000c391:	call   QWORD PTR [rip+0x28e91]        # 0x140035228
   14000c397:	lea    rdx,[rbp-0x58]
   14000c39b:	mov    rcx,rbx
   14000c39e:	call   rax
   14000c3a0:	cmp    r15b,0x67
   14000c3a4:	jne    0x14000c3c0
   14000c3a6:	test   edi,edi
   14000c3a8:	jne    0x14000c3c0
   14000c3aa:	mov    rcx,QWORD PTR [rip+0x3a04f]        # 0x140046400
   14000c3b1:	call   QWORD PTR [rip+0x28e71]        # 0x140035228
   14000c3b7:	lea    rdx,[rbp-0x58]
   14000c3bb:	mov    rcx,rbx
   14000c3be:	call   rax
   14000c3c0:	cmp    BYTE PTR [rbx],0x2d
   14000c3c3:	jne    0x14000c3cd
   14000c3c5:	bts    r14d,0x8
   14000c3ca:	inc    rbx
   14000c3cd:	mov    rcx,rbx
   14000c3d0:	call   0x14001ca40
   14000c3d5:	xor    r10d,r10d
   14000c3d8:	mov    DWORD PTR [rsp+0x44],eax
   14000c3dc:	cmp    DWORD PTR [rsp+0x58],r10d
   14000c3e1:	jne    0x14000c53d
   14000c3e7:	test   r14b,0x40
   14000c3eb:	je     0x14000c41e
   14000c3ed:	bt     r14d,0x8
   14000c3f2:	jae    0x14000c3fb
   14000c3f4:	mov    BYTE PTR [rsp+0x4c],0x2d
   14000c3f9:	jmp    0x14000c406
   14000c3fb:	test   r14b,0x1
   14000c3ff:	je     0x14000c411
   14000c401:	mov    BYTE PTR [rsp+0x4c],0x2b
   14000c406:	mov    edi,0x1
   14000c40b:	mov    DWORD PTR [rsp+0x48],edi
   14000c40f:	jmp    0x14000c422
   14000c411:	test   r14b,0x2
   14000c415:	je     0x14000c41e
   14000c417:	mov    BYTE PTR [rsp+0x4c],0x20
   14000c41c:	jmp    0x14000c406
   14000c41e:	mov    edi,DWORD PTR [rsp+0x48]
   14000c422:	mov    esi,DWORD PTR [rsp+0x54]
   14000c426:	mov    r15,QWORD PTR [rsp+0x68]
   14000c42b:	sub    esi,DWORD PTR [rsp+0x44]
   14000c42f:	sub    esi,edi
   14000c431:	test   r14b,0xc
   14000c435:	jne    0x14000c448
   14000c437:	lea    r9,[rsp+0x40]
   14000c43c:	mov    r8,r15
   14000c43f:	mov    edx,esi
   14000c441:	mov    cl,0x20
   14000c443:	call   0x14000c80c
   14000c448:	mov    rax,QWORD PTR [rbp-0x80]
   14000c44c:	lea    r9,[rsp+0x40]
   14000c451:	lea    rcx,[rsp+0x4c]
   14000c456:	mov    r8,r15
   14000c459:	mov    edx,edi
   14000c45b:	mov    QWORD PTR [rsp+0x20],rax
   14000c460:	call   0x14000c860
   14000c465:	test   r14b,0x8
   14000c469:	je     0x14000c482
   14000c46b:	test   r14b,0x4
   14000c46f:	jne    0x14000c482
   14000c471:	lea    r9,[rsp+0x40]
   14000c476:	mov    r8,r15
   14000c479:	mov    edx,esi
   14000c47b:	mov    cl,0x30
   14000c47d:	call   0x14000c80c
   14000c482:	cmp    DWORD PTR [rsp+0x50],0x0
   14000c487:	mov    edi,DWORD PTR [rsp+0x44]
   14000c48b:	je     0x14000c4fd
   14000c48d:	test   edi,edi
   14000c48f:	jle    0x14000c4fd
   14000c491:	mov    r15,rbx
   14000c494:	movzx  r9d,WORD PTR [r15]
   14000c498:	lea    rdx,[rbp+0x1d0]
   14000c49f:	lea    rcx,[rbp-0x70]
   14000c4a3:	mov    r8d,0x6
   14000c4a9:	dec    edi
   14000c4ab:	lea    r15,[r15+0x2]
   14000c4af:	call   0x14001d67c
   14000c4b4:	xor    r10d,r10d
   14000c4b7:	test   eax,eax
   14000c4b9:	jne    0x14000c4ef
   14000c4bb:	mov    edx,DWORD PTR [rbp-0x70]
   14000c4be:	test   edx,edx
   14000c4c0:	je     0x14000c4ef
   14000c4c2:	mov    rax,QWORD PTR [rbp-0x80]
   14000c4c6:	mov    r8,QWORD PTR [rsp+0x68]
   14000c4cb:	lea    r9,[rsp+0x40]
   14000c4d0:	lea    rcx,[rbp+0x1d0]
   14000c4d7:	mov    QWORD PTR [rsp+0x20],rax
   14000c4dc:	call   0x14000c860
   14000c4e1:	xor    r10d,r10d
   14000c4e4:	test   edi,edi
   14000c4e6:	jne    0x14000c494
   14000c4e8:	mov    r15,QWORD PTR [rsp+0x68]
   14000c4ed:	jmp    0x14000c51b
   14000c4ef:	mov    r15,QWORD PTR [rsp+0x68]
   14000c4f4:	or     eax,0xffffffff
   14000c4f7:	mov    DWORD PTR [rsp+0x40],eax
   14000c4fb:	jmp    0x14000c51f
   14000c4fd:	mov    rax,QWORD PTR [rbp-0x80]
   14000c501:	lea    r9,[rsp+0x40]
   14000c506:	mov    r8,r15
   14000c509:	mov    edx,edi
   14000c50b:	mov    rcx,rbx
   14000c50e:	mov    QWORD PTR [rsp+0x20],rax
   14000c513:	call   0x14000c860
   14000c518:	xor    r10d,r10d
   14000c51b:	mov    eax,DWORD PTR [rsp+0x40]
   14000c51f:	test   eax,eax
   14000c521:	js     0x14000c53d
   14000c523:	test   r14b,0x4
   14000c527:	je     0x14000c53d
   14000c529:	lea    r9,[rsp+0x40]
   14000c52e:	mov    r8,r15
   14000c531:	mov    edx,esi
   14000c533:	mov    cl,0x20
   14000c535:	call   0x14000c80c
   14000c53a:	xor    r10d,r10d
   14000c53d:	mov    rax,QWORD PTR [rbp-0x78]
   14000c541:	test   rax,rax
   14000c544:	je     0x14000c555
   14000c546:	mov    rcx,rax
   14000c549:	call   0x14000fb50
   14000c54e:	xor    r10d,r10d
   14000c551:	mov    QWORD PTR [rbp-0x78],r10
   14000c555:	mov    rdi,QWORD PTR [rbp-0x68]
   14000c559:	mov    esi,DWORD PTR [rsp+0x40]
   14000c55d:	mov    edx,DWORD PTR [rsp+0x5c]
   14000c561:	mov    r11d,0x200
   14000c567:	lea    r9,[rip+0xffffffffffff3a92]        # 0x140000000
   14000c56e:	mov    r15b,BYTE PTR [rdi]
   14000c571:	test   r15b,r15b
   14000c574:	je     0x14000c763
   14000c57a:	or     r8d,0xffffffff
   14000c57e:	jmp    0x14000bedb
   14000c583:	cmp    r15b,0x49
   14000c587:	je     0x14000c5bd
   14000c589:	cmp    r15b,0x68
   14000c58d:	je     0x14000c5b7
   14000c58f:	cmp    r15b,0x6c
   14000c593:	je     0x14000c5a2
   14000c595:	cmp    r15b,0x77
   14000c599:	jne    0x14000c56e
   14000c59b:	bts    r14d,0xb
   14000c5a0:	jmp    0x14000c56e
   14000c5a2:	cmp    BYTE PTR [rdi],0x6c
   14000c5a5:	jne    0x14000c5b1
   14000c5a7:	inc    rdi
   14000c5aa:	bts    r14d,0xc
   14000c5af:	jmp    0x14000c56e
   14000c5b1:	or     r14d,0x10
   14000c5b5:	jmp    0x14000c56e
   14000c5b7:	or     r14d,0x20
   14000c5bb:	jmp    0x14000c56e
   14000c5bd:	mov    al,BYTE PTR [rdi]
   14000c5bf:	bts    r14d,0xf
   14000c5c4:	cmp    al,0x36
   14000c5c6:	jne    0x14000c5d9
   14000c5c8:	cmp    BYTE PTR [rdi+0x1],0x34
   14000c5cc:	jne    0x14000c5d9
   14000c5ce:	add    rdi,0x2
   14000c5d2:	bts    r14d,0xf
   14000c5d7:	jmp    0x14000c56e
   14000c5d9:	cmp    al,0x33
   14000c5db:	jne    0x14000c5ee
   14000c5dd:	cmp    BYTE PTR [rdi+0x1],0x32
   14000c5e1:	jne    0x14000c5ee
   14000c5e3:	add    rdi,0x2
   14000c5e7:	btr    r14d,0xf
   14000c5ec:	jmp    0x14000c56e
   14000c5ee:	sub    al,0x58
   14000c5f0:	cmp    al,0x20
   14000c5f2:	ja     0x14000c608
   14000c5f4:	movabs rcx,0x120821001
   14000c5fe:	bt     rcx,rax
   14000c602:	jb     0x14000c56e
   14000c608:	mov    DWORD PTR [rsp+0x5c],r10d
   14000c60d:	lea    rdx,[rbp-0x58]
   14000c611:	movzx  ecx,r15b
   14000c615:	mov    DWORD PTR [rsp+0x50],r10d
   14000c61a:	call   0x14001d1f4
   14000c61f:	test   eax,eax
   14000c621:	je     0x14000c644
   14000c623:	mov    rdx,QWORD PTR [rsp+0x68]
   14000c628:	lea    r8,[rsp+0x40]
   14000c62d:	mov    cl,r15b
   14000c630:	call   0x14000c7c4
   14000c635:	mov    r15b,BYTE PTR [rdi]
   14000c638:	inc    rdi
   14000c63b:	test   r15b,r15b
   14000c63e:	je     0x14000c74b
   14000c644:	mov    rdx,QWORD PTR [rsp+0x68]
   14000c649:	lea    r8,[rsp+0x40]
   14000c64e:	mov    cl,r15b
   14000c651:	call   0x14000c7c4
   14000c656:	xor    r10d,r10d
   14000c659:	jmp    0x14000c559
   14000c65e:	cmp    r15b,0x2a
   14000c662:	jne    0x14000c67d
   14000c664:	mov    r12d,DWORD PTR [r13+0x0]
   14000c668:	add    r13,0x8
   14000c66c:	test   r12d,r12d
   14000c66f:	jns    0x14000c56e
   14000c675:	mov    r12d,r8d
   14000c678:	jmp    0x14000c56e
   14000c67d:	lea    r12d,[r12+r12*4]
   14000c681:	movsx  eax,r15b
   14000c685:	lea    r12d,[r12-0x18]
   14000c68a:	lea    r12d,[rax+r12*2]
   14000c68e:	jmp    0x14000c56e
   14000c693:	mov    r12d,r10d
   14000c696:	jmp    0x14000c56e
   14000c69b:	cmp    r15b,0x2a
   14000c69f:	jne    0x14000c6bd
   14000c6a1:	mov    eax,DWORD PTR [r13+0x0]
   14000c6a5:	add    r13,0x8
   14000c6a9:	mov    DWORD PTR [rsp+0x54],eax
   14000c6ad:	test   eax,eax
   14000c6af:	jns    0x14000c56e
   14000c6b5:	or     r14d,0x4
   14000c6b9:	neg    eax
   14000c6bb:	jmp    0x14000c6ce
   14000c6bd:	mov    eax,DWORD PTR [rsp+0x54]
   14000c6c1:	lea    ecx,[rax+rax*4]
   14000c6c4:	movsx  eax,r15b
   14000c6c8:	lea    eax,[rax+rcx*2]
   14000c6cb:	add    eax,0xffffffd0
   14000c6ce:	mov    DWORD PTR [rsp+0x54],eax
   14000c6d2:	jmp    0x14000c56e
   14000c6d7:	cmp    r15b,0x20
   14000c6db:	je     0x14000c71e
   14000c6dd:	cmp    r15b,0x23
   14000c6e1:	je     0x14000c714
   14000c6e3:	cmp    r15b,0x2b
   14000c6e7:	je     0x14000c70b
   14000c6e9:	cmp    r15b,0x2d
   14000c6ed:	je     0x14000c702
   14000c6ef:	cmp    r15b,0x30
   14000c6f3:	jne    0x14000c56e
   14000c6f9:	or     r14d,0x8
   14000c6fd:	jmp    0x14000c56e
   14000c702:	or     r14d,0x4
   14000c706:	jmp    0x14000c56e
   14000c70b:	or     r14d,0x1
   14000c70f:	jmp    0x14000c56e
   14000c714:	bts    r14d,0x7
   14000c719:	jmp    0x14000c56e
   14000c71e:	or     r14d,0x2
   14000c722:	jmp    0x14000c56e
   14000c727:	mov    DWORD PTR [rsp+0x60],r10d
   14000c72c:	mov    DWORD PTR [rsp+0x58],r10d
   14000c731:	mov    DWORD PTR [rsp+0x54],r10d
   14000c736:	mov    DWORD PTR [rsp+0x48],r10d
   14000c73b:	mov    r14d,r10d
   14000c73e:	mov    r12d,r8d
   14000c741:	mov    DWORD PTR [rsp+0x50],r10d
   14000c746:	jmp    0x14000c56e
   14000c74b:	call   0x14000b9f0
   14000c750:	mov    DWORD PTR [rax],0x16
   14000c756:	call   0x14000b8b8
   14000c75b:	or     eax,0xffffffff
   14000c75e:	xor    r10d,r10d
   14000c761:	jmp    0x14000c765
   14000c763:	mov    eax,esi
   14000c765:	cmp    BYTE PTR [rbp-0x40],r10b
   14000c769:	je     0x14000c776
   14000c76b:	mov    rcx,QWORD PTR [rbp-0x48]
   14000c76f:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000c776:	mov    rcx,QWORD PTR [rbp+0x1d8]
   14000c77d:	xor    rcx,rsp
   14000c780:	call   0x1400097d0
   14000c785:	mov    rbx,QWORD PTR [rsp+0x330]
   14000c78d:	add    rsp,0x2e0
   14000c794:	pop    r15
   14000c796:	pop    r14
   14000c798:	pop    r13
   14000c79a:	pop    r12
   14000c79c:	pop    rdi
   14000c79d:	pop    rsi
   14000c79e:	pop    rbp
   14000c79f:	ret    
   14000c7a0:	add    QWORD PTR [rcx],0x8
   14000c7a4:	mov    rax,QWORD PTR [rcx]
   14000c7a7:	mov    rax,QWORD PTR [rax-0x8]
   14000c7ab:	ret    
   14000c7ac:	add    QWORD PTR [rcx],0x8
   14000c7b0:	mov    rax,QWORD PTR [rcx]
   14000c7b3:	mov    eax,DWORD PTR [rax-0x8]
   14000c7b6:	ret    
   14000c7b7:	int3   
   14000c7b8:	add    QWORD PTR [rcx],0x8
   14000c7bc:	mov    rax,QWORD PTR [rcx]
   14000c7bf:	movzx  eax,WORD PTR [rax-0x8]
   14000c7c3:	ret    
   14000c7c4:	rex push rbx
   14000c7c6:	sub    rsp,0x20
   14000c7ca:	test   BYTE PTR [rdx+0x18],0x40
   14000c7ce:	mov    rbx,r8
   14000c7d1:	je     0x14000c7df
   14000c7d3:	cmp    QWORD PTR [rdx+0x10],0x0
   14000c7d8:	jne    0x14000c7df
   14000c7da:	inc    DWORD PTR [r8]
   14000c7dd:	jmp    0x14000c804
   14000c7df:	dec    DWORD PTR [rdx+0x8]
   14000c7e2:	js     0x14000c7f1
   14000c7e4:	mov    rax,QWORD PTR [rdx]
   14000c7e7:	mov    BYTE PTR [rax],cl
   14000c7e9:	inc    QWORD PTR [rdx]
   14000c7ec:	movzx  eax,cl
   14000c7ef:	jmp    0x14000c7f9
   14000c7f1:	movsx  ecx,cl
   14000c7f4:	call   0x1400123d0
   14000c7f9:	cmp    eax,0xffffffff
   14000c7fc:	jne    0x14000c802
   14000c7fe:	or     DWORD PTR [rbx],eax
   14000c800:	jmp    0x14000c804
   14000c802:	inc    DWORD PTR [rbx]
   14000c804:	add    rsp,0x20
   14000c808:	pop    rbx
   14000c809:	ret    
   14000c80a:	int3   
   14000c80b:	int3   
   14000c80c:	test   edx,edx
   14000c80e:	jle    0x14000c85c
   14000c810:	mov    QWORD PTR [rsp+0x8],rbx
   14000c815:	mov    QWORD PTR [rsp+0x10],rbp
   14000c81a:	mov    QWORD PTR [rsp+0x18],rsi
   14000c81f:	push   rdi
   14000c820:	sub    rsp,0x20
   14000c824:	mov    rdi,r9
   14000c827:	mov    rsi,r8
   14000c82a:	mov    ebx,edx
   14000c82c:	mov    bpl,cl
   14000c82f:	mov    r8,rdi
   14000c832:	mov    rdx,rsi
   14000c835:	mov    cl,bpl
   14000c838:	dec    ebx
   14000c83a:	call   0x14000c7c4
   14000c83f:	cmp    DWORD PTR [rdi],0xffffffff
   14000c842:	je     0x14000c848
   14000c844:	test   ebx,ebx
   14000c846:	jg     0x14000c82f
   14000c848:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c84d:	mov    rbp,QWORD PTR [rsp+0x38]
   14000c852:	mov    rsi,QWORD PTR [rsp+0x40]
   14000c857:	add    rsp,0x20
   14000c85b:	pop    rdi
   14000c85c:	ret    
   14000c85d:	int3   
   14000c85e:	int3   
   14000c85f:	int3   
   14000c860:	mov    QWORD PTR [rsp+0x8],rbx
   14000c865:	mov    QWORD PTR [rsp+0x10],rbp
   14000c86a:	mov    QWORD PTR [rsp+0x18],rsi
   14000c86f:	push   rdi
   14000c870:	push   r14
   14000c872:	push   r15
   14000c874:	sub    rsp,0x20
   14000c878:	test   BYTE PTR [r8+0x18],0x40
   14000c87d:	mov    rbx,QWORD PTR [rsp+0x60]
   14000c882:	mov    rdi,r9
   14000c885:	mov    r15d,DWORD PTR [rbx]
   14000c888:	mov    rbp,r8
   14000c88b:	mov    esi,edx
   14000c88d:	mov    r14,rcx
   14000c890:	je     0x14000c89e
   14000c892:	cmp    QWORD PTR [r8+0x10],0x0
   14000c897:	jne    0x14000c89e
   14000c899:	add    DWORD PTR [r9],edx
   14000c89c:	jmp    0x14000c8db
   14000c89e:	and    DWORD PTR [rbx],0x0
   14000c8a1:	test   edx,edx
   14000c8a3:	jle    0x14000c8d8
   14000c8a5:	mov    cl,BYTE PTR [r14]
   14000c8a8:	mov    r8,rdi
   14000c8ab:	mov    rdx,rbp
   14000c8ae:	dec    esi
   14000c8b0:	call   0x14000c7c4
   14000c8b5:	inc    r14
   14000c8b8:	cmp    DWORD PTR [rdi],0xffffffff
   14000c8bb:	jne    0x14000c8cf
   14000c8bd:	cmp    DWORD PTR [rbx],0x2a
   14000c8c0:	jne    0x14000c8d3
   14000c8c2:	mov    r8,rdi
   14000c8c5:	mov    rdx,rbp
   14000c8c8:	mov    cl,0x3f
   14000c8ca:	call   0x14000c7c4
   14000c8cf:	test   esi,esi
   14000c8d1:	jg     0x14000c8a5
   14000c8d3:	cmp    DWORD PTR [rbx],0x0
   14000c8d6:	jne    0x14000c8db
   14000c8d8:	mov    DWORD PTR [rbx],r15d
   14000c8db:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c8e0:	mov    rbp,QWORD PTR [rsp+0x48]
   14000c8e5:	mov    rsi,QWORD PTR [rsp+0x50]
   14000c8ea:	add    rsp,0x20
   14000c8ee:	pop    r15
   14000c8f0:	pop    r14
   14000c8f2:	pop    rdi
   14000c8f3:	ret    
   14000c8f4:	mov    rax,rsp
   14000c8f7:	mov    QWORD PTR [rax+0x8],rbx
   14000c8fb:	mov    QWORD PTR [rax+0x10],rbp
   14000c8ff:	mov    QWORD PTR [rax+0x18],rsi
   14000c903:	push   rdi
   14000c904:	push   r12
   14000c906:	push   r13
   14000c908:	push   r14
   14000c90a:	push   r15
   14000c90c:	sub    rsp,0x40
   14000c910:	mov    r12,QWORD PTR [r9+0x8]
   14000c914:	mov    r15,QWORD PTR [r9]
   14000c917:	mov    rbx,QWORD PTR [r9+0x38]
   14000c91b:	sub    r15,r12
   14000c91e:	test   BYTE PTR [rcx+0x4],0x66
   14000c922:	mov    r14,r9
   14000c925:	mov    r13,rdx
   14000c928:	mov    rbp,rcx
   14000c92b:	jne    0x14000ca0f
   14000c931:	mov    esi,DWORD PTR [r9+0x48]
   14000c935:	mov    QWORD PTR [rax-0x38],rcx
   14000c939:	mov    QWORD PTR [rax-0x30],r8
   14000c93d:	cmp    esi,DWORD PTR [rbx]
   14000c93f:	jae    0x14000cab2
   14000c945:	mov    edi,esi
   14000c947:	add    rdi,rdi
   14000c94a:	mov    eax,DWORD PTR [rbx+rdi*8+0x4]
   14000c94e:	cmp    r15,rax
   14000c951:	jb     0x14000ca01
   14000c957:	mov    eax,DWORD PTR [rbx+rdi*8+0x8]
   14000c95b:	cmp    r15,rax
   14000c95e:	jae    0x14000ca01
   14000c964:	cmp    DWORD PTR [rbx+rdi*8+0x10],0x0
   14000c969:	je     0x14000ca01
   14000c96f:	cmp    DWORD PTR [rbx+rdi*8+0xc],0x1
   14000c974:	je     0x14000c98d
   14000c976:	mov    eax,DWORD PTR [rbx+rdi*8+0xc]
   14000c97a:	lea    rcx,[rsp+0x30]
   14000c97f:	mov    rdx,r13
   14000c982:	add    rax,r12
   14000c985:	call   rax
   14000c987:	test   eax,eax
   14000c989:	js     0x14000ca08
   14000c98b:	jle    0x14000ca01
   14000c98d:	cmp    DWORD PTR [rbp+0x0],0xe06d7363
   14000c994:	jne    0x14000c9be
   14000c996:	cmp    QWORD PTR [rip+0x2bf02],0x0        # 0x1400388a0
   14000c99e:	je     0x14000c9be
   14000c9a0:	lea    rcx,[rip+0x2bef9]        # 0x1400388a0
   14000c9a7:	call   0x14001a460
   14000c9ac:	test   eax,eax
   14000c9ae:	je     0x14000c9be
   14000c9b0:	mov    edx,0x1
   14000c9b5:	mov    rcx,rbp
   14000c9b8:	call   QWORD PTR [rip+0x2bee2]        # 0x1400388a0
   14000c9be:	mov    ecx,DWORD PTR [rbx+rdi*8+0x10]
   14000c9c2:	mov    r8d,0x1
   14000c9c8:	mov    rdx,r13
   14000c9cb:	add    rcx,r12
   14000c9ce:	call   0x14001d100
   14000c9d3:	mov    rax,QWORD PTR [r14+0x40]
   14000c9d7:	mov    edx,DWORD PTR [rbx+rdi*8+0x10]
   14000c9db:	mov    r9d,DWORD PTR [rbp+0x0]
   14000c9df:	mov    QWORD PTR [rsp+0x28],rax
   14000c9e4:	mov    rax,QWORD PTR [r14+0x28]
   14000c9e8:	add    rdx,r12
   14000c9eb:	mov    r8,rbp
   14000c9ee:	mov    rcx,r13
   14000c9f1:	mov    QWORD PTR [rsp+0x20],rax
   14000c9f6:	call   QWORD PTR [rip+0x2883c]        # 0x140035238
   14000c9fc:	call   0x14001d130
   14000ca01:	inc    esi
   14000ca03:	jmp    0x14000c93d
   14000ca08:	xor    eax,eax
   14000ca0a:	jmp    0x14000cab7
   14000ca0f:	mov    rsi,QWORD PTR [r9+0x20]
   14000ca13:	mov    edi,DWORD PTR [r9+0x48]
   14000ca17:	sub    rsi,r12
   14000ca1a:	jmp    0x14000caa8
   14000ca1f:	mov    ecx,edi
   14000ca21:	add    rcx,rcx
   14000ca24:	mov    eax,DWORD PTR [rbx+rcx*8+0x4]
   14000ca28:	cmp    r15,rax
   14000ca2b:	jb     0x14000caa6
   14000ca2d:	mov    eax,DWORD PTR [rbx+rcx*8+0x8]
   14000ca31:	cmp    r15,rax
   14000ca34:	jae    0x14000caa6
   14000ca36:	test   BYTE PTR [rbp+0x4],0x20
   14000ca3a:	je     0x14000ca80
   14000ca3c:	xor    r9d,r9d
   14000ca3f:	test   edx,edx
   14000ca41:	je     0x14000ca7b
   14000ca43:	mov    r8d,r9d
   14000ca46:	add    r8,r8
   14000ca49:	mov    eax,DWORD PTR [rbx+r8*8+0x4]
   14000ca4e:	cmp    rsi,rax
   14000ca51:	jb     0x14000ca73
   14000ca53:	mov    eax,DWORD PTR [rbx+r8*8+0x8]
   14000ca58:	cmp    rsi,rax
   14000ca5b:	jae    0x14000ca73
   14000ca5d:	mov    eax,DWORD PTR [rbx+rcx*8+0x10]
   14000ca61:	cmp    DWORD PTR [rbx+r8*8+0x10],eax
   14000ca66:	jne    0x14000ca73
   14000ca68:	mov    eax,DWORD PTR [rbx+rcx*8+0xc]
   14000ca6c:	cmp    DWORD PTR [rbx+r8*8+0xc],eax
   14000ca71:	je     0x14000ca7b
   14000ca73:	inc    r9d
   14000ca76:	cmp    r9d,edx
   14000ca79:	jb     0x14000ca43
   14000ca7b:	cmp    r9d,edx
   14000ca7e:	jne    0x14000cab2
   14000ca80:	mov    eax,DWORD PTR [rbx+rcx*8+0x10]
   14000ca84:	test   eax,eax
   14000ca86:	je     0x14000ca8f
   14000ca88:	cmp    rsi,rax
   14000ca8b:	je     0x14000cab2
   14000ca8d:	jmp    0x14000caa6
   14000ca8f:	lea    eax,[rdi+0x1]
   14000ca92:	mov    rdx,r13
   14000ca95:	mov    DWORD PTR [r14+0x48],eax
   14000ca99:	mov    r8d,DWORD PTR [rbx+rcx*8+0xc]
   14000ca9e:	mov    cl,0x1
   14000caa0:	add    r8,r12
   14000caa3:	call   r8
   14000caa6:	inc    edi
   14000caa8:	mov    edx,DWORD PTR [rbx]
   14000caaa:	cmp    edi,edx
   14000caac:	jb     0x14000ca1f
   14000cab2:	mov    eax,0x1
   14000cab7:	lea    r11,[rsp+0x40]
   14000cabc:	mov    rbx,QWORD PTR [r11+0x30]
   14000cac0:	mov    rbp,QWORD PTR [r11+0x38]
   14000cac4:	mov    rsi,QWORD PTR [r11+0x40]
   14000cac8:	mov    rsp,r11
   14000cacb:	pop    r15
   14000cacd:	pop    r14
   14000cacf:	pop    r13
   14000cad1:	pop    r12
   14000cad3:	pop    rdi
   14000cad4:	ret    
   14000cad5:	int3   
   14000cad6:	int3   
   14000cad7:	int3   
   14000cad8:	mov    rax,rcx
   14000cadb:	movzx  edx,WORD PTR [rax]
   14000cade:	add    rax,0x2
   14000cae2:	test   dx,dx
   14000cae5:	jne    0x14000cadb
   14000cae7:	sub    rax,rcx
   14000caea:	sar    rax,1
   14000caed:	dec    rax
   14000caf0:	ret    
   14000caf1:	int3   
   14000caf2:	int3   
   14000caf3:	int3   
   14000caf4:	mov    rax,QWORD PTR [rcx]
   14000caf7:	mov    rax,QWORD PTR [rax+0xf0]
   14000cafe:	ret    
   14000caff:	int3   
   14000cb00:	mov    QWORD PTR [rsp+0x8],rbx
   14000cb05:	mov    QWORD PTR [rsp+0x10],rsi
   14000cb0a:	push   rdi
   14000cb0b:	sub    rsp,0x20
   14000cb0f:	mov    rsi,r9
   14000cb12:	mov    rdi,r8
   14000cb15:	mov    rbx,rdx
   14000cb18:	cmp    rcx,QWORD PTR [rdx]
   14000cb1b:	jne    0x14000cb84
   14000cb1d:	cmp    QWORD PTR [r8],r9
   14000cb20:	jne    0x14000cb62
   14000cb22:	mov    rcx,QWORD PTR [rbx]
   14000cb25:	mov    edx,0x4
   14000cb2a:	call   0x14000fbcc
   14000cb2f:	mov    QWORD PTR [rdi],rax
   14000cb32:	test   rax,rax
   14000cb35:	jne    0x14000cb3b
   14000cb37:	xor    eax,eax
   14000cb39:	jmp    0x14000cb89
   14000cb3b:	mov    rax,QWORD PTR [rsp+0x50]
   14000cb40:	mov    rdx,rsi
   14000cb43:	mov    DWORD PTR [rax],0x1
   14000cb49:	mov    r8,QWORD PTR [rbx]
   14000cb4c:	mov    rcx,QWORD PTR [rdi]
   14000cb4f:	add    r8,r8
   14000cb52:	call   0x14000b1c0
   14000cb57:	mov    rax,QWORD PTR [rbx]
   14000cb5a:	add    rax,rax
   14000cb5d:	mov    QWORD PTR [rbx],rax
   14000cb60:	jmp    0x14000cb84
   14000cb62:	mov    rdx,QWORD PTR [rdx]
   14000cb65:	mov    rcx,QWORD PTR [rdi]
   14000cb68:	mov    r8d,0x4
   14000cb6e:	call   0x14000fd4c
   14000cb73:	test   rax,rax
   14000cb76:	je     0x14000cb37
   14000cb78:	mov    QWORD PTR [rdi],rax
   14000cb7b:	mov    rcx,QWORD PTR [rbx]
   14000cb7e:	add    rcx,rcx
   14000cb81:	mov    QWORD PTR [rbx],rcx
   14000cb84:	mov    eax,0x1
   14000cb89:	mov    rbx,QWORD PTR [rsp+0x30]
   14000cb8e:	mov    rsi,QWORD PTR [rsp+0x38]
   14000cb93:	add    rsp,0x20
   14000cb97:	pop    rdi
   14000cb98:	ret    
   14000cb99:	int3   
   14000cb9a:	int3   
   14000cb9b:	int3   
   14000cb9c:	mov    QWORD PTR [rsp+0x8],rbx
   14000cba1:	push   rdi
   14000cba2:	sub    rsp,0x20
   14000cba6:	mov    eax,0xff00
   14000cbab:	movzx  edi,cx
   14000cbae:	test   ax,cx
   14000cbb1:	jne    0x14000cbc2
   14000cbb3:	movzx  ebx,cx
   14000cbb6:	movzx  ecx,bl
   14000cbb9:	call   0x14001e2f0
   14000cbbe:	test   eax,eax
   14000cbc0:	jne    0x14000cbcb
   14000cbc2:	movzx  ebx,di
   14000cbc5:	and    ebx,0xffffffdf
   14000cbc8:	sub    ebx,0x7
   14000cbcb:	movzx  eax,bx
   14000cbce:	mov    rbx,QWORD PTR [rsp+0x30]
   14000cbd3:	add    rsp,0x20
   14000cbd7:	pop    rdi
   14000cbd8:	ret    
   14000cbd9:	int3   
   14000cbda:	int3   
   14000cbdb:	int3   
   14000cbdc:	jmp    0x14001d690
   14000cbe1:	int3   
   14000cbe2:	int3   
   14000cbe3:	int3   
   14000cbe4:	sub    rsp,0x38
   14000cbe8:	mov    r10,r9
   14000cbeb:	test   ecx,ecx
   14000cbed:	je     0x14000cbf8
   14000cbef:	cmp    ecx,edx
   14000cbf1:	je     0x14000cbff
   14000cbf3:	cmp    ecx,r8d
   14000cbf6:	je     0x14000cbff
   14000cbf8:	mov    eax,ecx
   14000cbfa:	add    rsp,0x38
   14000cbfe:	ret    
   14000cbff:	mov    rax,QWORD PTR [rsp+0x78]
   14000cc04:	mov    r9d,DWORD PTR [rsp+0x70]
   14000cc09:	mov    r8,QWORD PTR [rsp+0x68]
   14000cc0e:	mov    rdx,QWORD PTR [rsp+0x60]
   14000cc13:	mov    rcx,r10
   14000cc16:	mov    QWORD PTR [rsp+0x20],rax
   14000cc1b:	call   0x14000b908
   14000cc20:	int3   
   14000cc21:	int3   
   14000cc22:	int3   
   14000cc23:	int3   
   14000cc24:	sub    rsp,0x28
   14000cc28:	mov    eax,0xffff
   14000cc2d:	cmp    ax,cx
   14000cc30:	je     0x14000cc37
   14000cc32:	call   0x14001d8ec
   14000cc37:	add    rsp,0x28
   14000cc3b:	ret    
   14000cc3c:	mov    QWORD PTR [rsp+0x8],rbx
   14000cc41:	mov    QWORD PTR [rsp+0x10],rsi
   14000cc46:	push   rdi
   14000cc47:	sub    rsp,0x20
   14000cc4b:	mov    rsi,rdx
   14000cc4e:	mov    rdi,rcx
   14000cc51:	inc    DWORD PTR [rdi]
   14000cc53:	mov    rcx,rsi
   14000cc56:	call   0x14001d690
   14000cc5b:	movzx  ebx,ax
   14000cc5e:	mov    eax,0xffff
   14000cc63:	cmp    bx,ax
   14000cc66:	je     0x14000cc79
   14000cc68:	mov    edx,0x8
   14000cc6d:	movzx  ecx,bx
   14000cc70:	call   0x140010b00
   14000cc75:	test   eax,eax
   14000cc77:	jne    0x14000cc51
   14000cc79:	mov    rsi,QWORD PTR [rsp+0x38]
   14000cc7e:	movzx  eax,bx
   14000cc81:	mov    rbx,QWORD PTR [rsp+0x30]
   14000cc86:	add    rsp,0x20
   14000cc8a:	pop    rdi
   14000cc8b:	ret    
   14000cc8c:	mov    QWORD PTR [rsp+0x18],rbx
   14000cc91:	push   rbp
   14000cc92:	push   rsi
   14000cc93:	push   rdi
   14000cc94:	push   r12
   14000cc96:	push   r13
   14000cc98:	push   r14
   14000cc9a:	push   r15
   14000cc9c:	lea    rbp,[rsp-0x2c0]
   14000cca4:	sub    rsp,0x3c0
   14000ccab:	mov    rax,QWORD PTR [rip+0x385be]        # 0x140045270
   14000ccb2:	xor    rax,rsp
   14000ccb5:	mov    QWORD PTR [rbp+0x2b0],rax
   14000ccbc:	xor    r13d,r13d
   14000ccbf:	lea    r14,[rbp-0x10]
   14000ccc3:	mov    QWORD PTR [rbp-0x50],r9
   14000ccc7:	mov    eax,r13d
   14000ccca:	movzx  edi,r13w
   14000ccce:	mov    rbx,rdx
   14000ccd1:	mov    QWORD PTR [rsp+0x60],rdx
   14000ccd6:	mov    rsi,rcx
   14000ccd9:	mov    QWORD PTR [rsp+0x70],rcx
   14000ccde:	mov    DWORD PTR [rbp-0x58],eax
   14000cce1:	mov    DWORD PTR [rsp+0x3c],edi
   14000cce5:	mov    QWORD PTR [rbp-0x78],r14
   14000cce9:	mov    QWORD PTR [rbp-0x60],0x15e
   14000ccf1:	mov    DWORD PTR [rbp-0x80],r13d
   14000ccf5:	mov    QWORD PTR [rsp+0x68],r13
   14000ccfa:	mov    QWORD PTR [rsp+0x78],r13
   14000ccff:	mov    QWORD PTR [rbp-0x40],r13
   14000cd03:	test   rdx,rdx
   14000cd06:	jne    0x14000cd20
   14000cd08:	call   0x14000b9f0
   14000cd0d:	mov    DWORD PTR [rax],0x16
   14000cd13:	call   0x14000b8b8
   14000cd18:	or     eax,0xffffffff
   14000cd1b:	jmp    0x14000de1c
   14000cd20:	test   rcx,rcx
   14000cd23:	je     0x14000cd08
   14000cd25:	lea    rcx,[rbp-0x38]
   14000cd29:	mov    rdx,r8
   14000cd2c:	call   0x140007ff0
   14000cd31:	movzx  eax,WORD PTR [rbx]
   14000cd34:	mov    BYTE PTR [rsp+0x36],r13b
   14000cd39:	mov    r15d,r13d
   14000cd3c:	mov    DWORD PTR [rsp+0x30],r13d
   14000cd41:	mov    DWORD PTR [rsp+0x44],r13d
   14000cd46:	mov    r14d,r13d
   14000cd49:	mov    DWORD PTR [rsp+0x38],r13d
   14000cd4e:	test   ax,ax
   14000cd51:	je     0x14000de08
   14000cd57:	mov    r14d,0xffff
   14000cd5d:	mov    r12d,0x25
   14000cd63:	mov    edx,0x8
   14000cd68:	movzx  ecx,ax
   14000cd6b:	call   0x140010b00
   14000cd70:	test   eax,eax
   14000cd72:	je     0x14000cdc3
   14000cd74:	lea    rcx,[rsp+0x44]
   14000cd79:	dec    r15d
   14000cd7c:	mov    rdx,rsi
   14000cd7f:	mov    DWORD PTR [rsp+0x44],r15d
   14000cd84:	call   0x14000cc3c
   14000cd89:	cmp    r14w,ax
   14000cd8d:	je     0x14000cd9a
   14000cd8f:	mov    rdx,rsi
   14000cd92:	movzx  ecx,ax
   14000cd95:	call   0x14001d8ec
   14000cd9a:	add    rbx,0x2
   14000cd9e:	mov    edx,0x8
   14000cda3:	movzx  ecx,WORD PTR [rbx]
   14000cda6:	call   0x140010b00
   14000cdab:	test   eax,eax
   14000cdad:	jne    0x14000cd9a
   14000cdaf:	mov    r15d,DWORD PTR [rsp+0x44]
   14000cdb4:	mov    QWORD PTR [rsp+0x60],rbx
   14000cdb9:	mov    DWORD PTR [rsp+0x30],r15d
   14000cdbe:	jmp    0x14000dd82
   14000cdc3:	mov    r10,QWORD PTR [rsp+0x60]
   14000cdc8:	cmp    r12w,WORD PTR [r10]
   14000cdcc:	jne    0x14000dd39
   14000cdd2:	cmp    r12w,WORD PTR [r10+0x2]
   14000cdd7:	je     0x14000dd22
   14000cddd:	xor    r11d,r11d
   14000cde0:	mov    DWORD PTR [rbp-0x70],r13d
   14000cde4:	movzx  r15d,r11w
   14000cde8:	mov    r12b,r11b
   14000cdeb:	lea    r9d,[r11+0x1]
   14000cdef:	mov    edx,r11d
   14000cdf2:	mov    DWORD PTR [rbp-0x48],r15d
   14000cdf6:	mov    DWORD PTR [rbp-0x68],r12d
   14000cdfa:	mov    r13b,r9b
   14000cdfd:	mov    DWORD PTR [rsp+0x58],r11d
   14000ce02:	mov    r8d,r11d
   14000ce05:	mov    DWORD PTR [rsp+0x50],r11d
   14000ce0a:	mov    DWORD PTR [rsp+0x40],edx
   14000ce0e:	mov    BYTE PTR [rsp+0x54],r11b
   14000ce13:	mov    BYTE PTR [rsp+0x48],r11b
   14000ce18:	mov    dil,r11b
   14000ce1b:	mov    sil,r11b
   14000ce1e:	mov    r14b,r11b
   14000ce21:	mov    r12d,r11d
   14000ce24:	or     r15d,0xffffffff
   14000ce28:	add    r10,0x2
   14000ce2c:	mov    eax,0xff00
   14000ce31:	movzx  ebx,WORD PTR [r10]
   14000ce35:	mov    QWORD PTR [rsp+0x60],r10
   14000ce3a:	test   ax,bx
   14000ce3d:	jne    0x14000ce7a
   14000ce3f:	movzx  ecx,bl
   14000ce42:	call   0x14001e2f0
   14000ce47:	mov    r8d,DWORD PTR [rsp+0x50]
   14000ce4c:	mov    edx,DWORD PTR [rsp+0x40]
   14000ce50:	mov    r10,QWORD PTR [rsp+0x60]
   14000ce55:	xor    r11d,r11d
   14000ce58:	lea    r9d,[r11+0x1]
   14000ce5c:	test   eax,eax
   14000ce5e:	je     0x14000ce7a
   14000ce60:	lea    edx,[rdx+rdx*4]
   14000ce63:	add    r8d,r9d
   14000ce66:	lea    edx,[rdx-0x18]
   14000ce69:	mov    DWORD PTR [rsp+0x50],r8d
   14000ce6e:	lea    edx,[rbx+rdx*2]
   14000ce71:	mov    DWORD PTR [rsp+0x40],edx
   14000ce75:	jmp    0x14000cf51
   14000ce7a:	cmp    ebx,0x2a
   14000ce7d:	je     0x14000cf4e
   14000ce83:	cmp    ebx,0x46
   14000ce86:	je     0x14000cf51
   14000ce8c:	cmp    ebx,0x49
   14000ce8f:	je     0x14000cedf
   14000ce91:	cmp    ebx,0x4c
   14000ce94:	je     0x14000ceda
   14000ce96:	cmp    ebx,0x4e
   14000ce99:	je     0x14000cf51
   14000ce9f:	cmp    ebx,0x68
   14000cea2:	je     0x14000ced2
   14000cea4:	mov    ecx,0x6c
   14000cea9:	cmp    ebx,ecx
   14000ceab:	je     0x14000ceb7
   14000cead:	cmp    ebx,0x77
   14000ceb0:	je     0x14000cecd
   14000ceb2:	jmp    0x14000cf49
   14000ceb7:	lea    rax,[r10+0x2]
   14000cebb:	cmp    WORD PTR [rax],cx
   14000cebe:	jne    0x14000ceca
   14000cec0:	mov    r10,rax
   14000cec3:	mov    QWORD PTR [rsp+0x60],rax
   14000cec8:	jmp    0x14000cefc
   14000ceca:	add    r13b,r9b
   14000cecd:	add    r14b,r9b
   14000ced0:	jmp    0x14000cf51
   14000ced2:	add    r13b,r15b
   14000ced5:	add    r14b,r15b
   14000ced8:	jmp    0x14000cf51
   14000ceda:	add    r13b,r9b
   14000cedd:	jmp    0x14000cf51
   14000cedf:	movzx  eax,WORD PTR [r10+0x2]
   14000cee4:	cmp    ax,0x36
   14000cee8:	jne    0x14000cf06
   14000ceea:	lea    rcx,[r10+0x4]
   14000ceee:	cmp    WORD PTR [rcx],0x34
   14000cef2:	jne    0x14000cf06
   14000cef4:	mov    r10,rcx
   14000cef7:	mov    QWORD PTR [rsp+0x60],rcx
   14000cefc:	add    r12d,r9d
   14000ceff:	mov    QWORD PTR [rsp+0x78],r11
   14000cf04:	jmp    0x14000cf51
   14000cf06:	cmp    ax,0x33
   14000cf0a:	jne    0x14000cf20
   14000cf0c:	lea    rcx,[r10+0x4]
   14000cf10:	cmp    WORD PTR [rcx],0x32
   14000cf14:	jne    0x14000cf20
   14000cf16:	mov    r10,rcx
   14000cf19:	mov    QWORD PTR [rsp+0x60],rcx
   14000cf1e:	jmp    0x14000cf51
   14000cf20:	sub    ax,0x58
   14000cf24:	mov    ecx,0x20
   14000cf29:	cmp    ax,cx
   14000cf2c:	ja     0x14000cf41
   14000cf2e:	movzx  eax,ax
   14000cf31:	movabs rcx,0x100821001
   14000cf3b:	bt     rcx,rax
   14000cf3f:	jb     0x14000cefc
   14000cf41:	add    r12d,r9d
   14000cf44:	mov    QWORD PTR [rsp+0x78],r11
   14000cf49:	add    sil,r9b
   14000cf4c:	jmp    0x14000cf51
   14000cf4e:	add    dil,r9b
   14000cf51:	test   sil,sil
   14000cf54:	je     0x14000ce28
   14000cf5a:	mov    r15d,DWORD PTR [rbp-0x48]
   14000cf5e:	mov    BYTE PTR [rsp+0x34],dil
   14000cf63:	mov    edi,DWORD PTR [rsp+0x3c]
   14000cf67:	mov    cl,BYTE PTR [rsp+0x34]
   14000cf6b:	mov    BYTE PTR [rsp+0x35],r13b
   14000cf70:	mov    r13d,DWORD PTR [rbp-0x70]
   14000cf74:	mov    DWORD PTR [rsp+0x4c],r12d
   14000cf79:	mov    r12d,DWORD PTR [rbp-0x68]
   14000cf7d:	test   cl,cl
   14000cf7f:	jne    0x14000cf9b
   14000cf81:	mov    rax,QWORD PTR [rbp-0x50]
   14000cf85:	mov    QWORD PTR [rbp-0x40],rax
   14000cf89:	add    rax,0x8
   14000cf8d:	mov    QWORD PTR [rbp-0x50],rax
   14000cf91:	mov    rax,QWORD PTR [rax-0x8]
   14000cf95:	mov    QWORD PTR [rbp-0x70],rax
   14000cf99:	jmp    0x14000cf9f
   14000cf9b:	mov    QWORD PTR [rbp-0x70],r11
   14000cf9f:	mov    bl,r11b
   14000cfa2:	test   r14b,r14b
   14000cfa5:	jne    0x14000cfcc
   14000cfa7:	movzx  eax,WORD PTR [r10]
   14000cfab:	mov    r9d,0xffef
   14000cfb1:	sub    ax,0x43
   14000cfb5:	and    ax,r9w
   14000cfb9:	mov    r9d,0x1
   14000cfbf:	neg    ax
   14000cfc2:	sbb    r14b,r14b
   14000cfc5:	and    r14b,0x2
   14000cfc9:	dec    r14b
   14000cfcc:	movzx  esi,WORD PTR [r10]
   14000cfd0:	mov    eax,0x6e
   14000cfd5:	or     esi,0x20
   14000cfd8:	cmp    esi,eax
   14000cfda:	je     0x14000d049
   14000cfdc:	cmp    esi,0x63
   14000cfdf:	je     0x14000d002
   14000cfe1:	cmp    esi,0x7b
   14000cfe4:	je     0x14000d002
   14000cfe6:	mov    rdx,QWORD PTR [rsp+0x70]
   14000cfeb:	lea    rcx,[rsp+0x44]
   14000cff0:	call   0x14000cc3c
   14000cff5:	movzx  edi,ax
   14000cff8:	mov    eax,DWORD PTR [rsp+0x44]
   14000cffc:	mov    DWORD PTR [rsp+0x30],eax
   14000d000:	jmp    0x14000d01e
   14000d002:	mov    eax,DWORD PTR [rsp+0x30]
   14000d006:	mov    rcx,QWORD PTR [rsp+0x70]
   14000d00b:	add    eax,r9d
   14000d00e:	mov    DWORD PTR [rsp+0x30],eax
   14000d012:	mov    DWORD PTR [rsp+0x44],eax
   14000d016:	call   0x14001d690
   14000d01b:	movzx  edi,ax
   14000d01e:	mov    eax,0xffff
   14000d023:	mov    DWORD PTR [rsp+0x3c],edi
   14000d027:	cmp    ax,di
   14000d02a:	je     0x14000ddee
   14000d030:	mov    edx,DWORD PTR [rsp+0x40]
   14000d034:	mov    r10,QWORD PTR [rsp+0x60]
   14000d039:	mov    r8d,DWORD PTR [rsp+0x50]
   14000d03e:	mov    cl,BYTE PTR [rsp+0x34]
   14000d042:	xor    r11d,r11d
   14000d045:	lea    eax,[r11+0x6e]
   14000d049:	test   r8d,r8d
   14000d04c:	je     0x14000d056
   14000d04e:	test   edx,edx
   14000d050:	je     0x14000dd98
   14000d056:	cmp    esi,0x6f
   14000d059:	jg     0x14000d53a
   14000d05f:	je     0x14000da75
   14000d065:	cmp    esi,0x63
   14000d068:	je     0x14000d515
   14000d06e:	cmp    esi,0x64
   14000d071:	je     0x14000da75
   14000d077:	jle    0x14000d563
   14000d07d:	cmp    esi,0x67
   14000d080:	jle    0x14000d0ee
   14000d082:	cmp    esi,0x69
   14000d085:	je     0x14000d0cd
   14000d087:	cmp    esi,eax
   14000d089:	jne    0x14000d563
   14000d08f:	mov    r15d,DWORD PTR [rsp+0x30]
   14000d094:	mov    r13d,r15d
   14000d097:	test   cl,cl
   14000d099:	je     0x14000dce9
   14000d09f:	xor    r13d,r13d
   14000d0a2:	mov    r14d,0xffff
   14000d0a8:	mov    rbx,QWORD PTR [rsp+0x60]
   14000d0ad:	mov    rsi,QWORD PTR [rsp+0x70]
   14000d0b2:	mov    eax,0x1
   14000d0b7:	add    BYTE PTR [rsp+0x36],al
   14000d0bb:	add    rbx,0x2
   14000d0bf:	lea    r12d,[rax+0x24]
   14000d0c3:	mov    QWORD PTR [rsp+0x60],rbx
   14000d0c8:	jmp    0x14000dd6b
   14000d0cd:	mov    esi,0x64
   14000d0d2:	mov    eax,0x2d
   14000d0d7:	lea    r12d,[rax-0x2c]
   14000d0db:	cmp    ax,di
   14000d0de:	jne    0x14000d701
   14000d0e4:	mov    BYTE PTR [rsp+0x48],r12b
   14000d0e9:	jmp    0x14000d70b
   14000d0ee:	xor    r13d,r13d
   14000d0f1:	mov    esi,r13d
   14000d0f4:	lea    ecx,[r13+0x2d]
   14000d0f8:	lea    ebx,[rcx-0x2c]
   14000d0fb:	cmp    cx,di
   14000d0fe:	jne    0x14000d10b
   14000d100:	mov    rax,QWORD PTR [rbp-0x78]
   14000d104:	mov    esi,ebx
   14000d106:	mov    WORD PTR [rax],cx
   14000d109:	jmp    0x14000d115
   14000d10b:	mov    eax,0x2b
   14000d110:	cmp    ax,di
   14000d113:	jne    0x14000d140
   14000d115:	mov    r12,QWORD PTR [rsp+0x70]
   14000d11a:	mov    r14d,DWORD PTR [rsp+0x40]
   14000d11f:	mov    r15d,DWORD PTR [rsp+0x30]
   14000d124:	mov    rcx,r12
   14000d127:	sub    r14d,ebx
   14000d12a:	add    r15d,ebx
   14000d12d:	call   0x14001d690
   14000d132:	mov    r8d,DWORD PTR [rsp+0x50]
   14000d137:	movzx  edi,ax
   14000d13a:	mov    DWORD PTR [rsp+0x3c],edi
   14000d13e:	jmp    0x14000d14f
   14000d140:	mov    r15d,DWORD PTR [rsp+0x30]
   14000d145:	mov    r14d,DWORD PTR [rsp+0x40]
   14000d14a:	mov    r12,QWORD PTR [rsp+0x70]
   14000d14f:	test   r8d,r8d
   14000d152:	mov    eax,0xffffffff
   14000d157:	cmove  r14d,eax
   14000d15b:	jmp    0x14000d1c0
   14000d15d:	movzx  eax,di
   14000d160:	movzx  ecx,al
   14000d163:	call   0x14001e2f0
   14000d168:	test   eax,eax
   14000d16a:	je     0x14000d1ca
   14000d16c:	mov    eax,r14d
   14000d16f:	sub    r14d,ebx
   14000d172:	test   eax,eax
   14000d174:	je     0x14000d1ca
   14000d176:	mov    rcx,QWORD PTR [rbp-0x78]
   14000d17a:	add    DWORD PTR [rsp+0x58],ebx
   14000d17e:	movsx  eax,dil
   14000d182:	mov    WORD PTR [rcx+rsi*2],ax
   14000d186:	lea    rax,[rbp-0x80]
   14000d18a:	add    rsi,rbx
   14000d18d:	lea    r9,[rbp-0x10]
   14000d191:	lea    r8,[rbp-0x78]
   14000d195:	lea    rdx,[rbp-0x60]
   14000d199:	mov    rcx,rsi
   14000d19c:	mov    QWORD PTR [rsp+0x20],rax
   14000d1a1:	call   0x14000cb00
   14000d1a6:	test   eax,eax
   14000d1a8:	je     0x14000d244
   14000d1ae:	mov    rcx,r12
   14000d1b1:	add    r15d,ebx
   14000d1b4:	call   0x14001d690
   14000d1b9:	movzx  edi,ax
   14000d1bc:	mov    DWORD PTR [rsp+0x3c],edi
   14000d1c0:	mov    eax,0xff00
   14000d1c5:	test   ax,di
   14000d1c8:	je     0x14000d15d
   14000d1ca:	mov    rax,QWORD PTR [rbp-0x38]
   14000d1ce:	mov    edx,0x1
   14000d1d3:	mov    rcx,QWORD PTR [rax+0xf0]
   14000d1da:	mov    rax,QWORD PTR [rcx+0x58]
   14000d1de:	movzx  ebx,WORD PTR [rax]
   14000d1e1:	movsx  eax,dil
   14000d1e5:	mov    ecx,ebx
   14000d1e7:	cmp    ebx,eax
   14000d1e9:	jne    0x14000d307
   14000d1ef:	mov    eax,r14d
   14000d1f2:	sub    r14d,edx
   14000d1f5:	test   eax,eax
   14000d1f7:	je     0x14000d307
   14000d1fd:	mov    rcx,r12
   14000d200:	add    r15d,edx
   14000d203:	call   0x14001d690
   14000d208:	lea    r9,[rbp-0x10]
   14000d20c:	lea    r8,[rbp-0x78]
   14000d210:	movzx  edi,ax
   14000d213:	mov    rax,QWORD PTR [rbp-0x78]
   14000d217:	lea    rdx,[rbp-0x60]
   14000d21b:	mov    WORD PTR [rax+rsi*2],bx
   14000d21f:	lea    rax,[rbp-0x80]
   14000d223:	mov    ebx,0x1
   14000d228:	add    rsi,rbx
   14000d22b:	mov    DWORD PTR [rsp+0x3c],edi
   14000d22f:	mov    QWORD PTR [rsp+0x20],rax
   14000d234:	mov    rcx,rsi
   14000d237:	call   0x14000cb00
   14000d23c:	test   eax,eax
   14000d23e:	jne    0x14000d2fa
   14000d244:	mov    r12d,DWORD PTR [rsp+0x38]
   14000d249:	mov    r14d,0xffff
   14000d24f:	mov    rbx,QWORD PTR [rsp+0x68]
   14000d254:	mov    esi,0x1
   14000d259:	cmp    DWORD PTR [rbp-0x58],esi
   14000d25c:	jne    0x14000d266
   14000d25e:	mov    rcx,rbx
   14000d261:	call   0x14000fb50
   14000d266:	cmp    DWORD PTR [rbp-0x80],esi
   14000d269:	jne    0x14000d274
   14000d26b:	mov    rcx,QWORD PTR [rbp-0x78]
   14000d26f:	call   0x14000fb50
   14000d274:	cmp    r14w,di
   14000d278:	jne    0x14000de03
   14000d27e:	test   r12d,r12d
   14000d281:	jne    0x14000ddfe
   14000d287:	mov    al,BYTE PTR [rsp+0x36]
   14000d28b:	test   al,al
   14000d28d:	jne    0x14000ddfe
   14000d293:	or     eax,0xffffffff
   14000d296:	jmp    0x14000de0b
   14000d29b:	movzx  eax,di
   14000d29e:	movzx  ecx,al
   14000d2a1:	call   0x14001e2f0
   14000d2a6:	test   eax,eax
   14000d2a8:	je     0x14000d304
   14000d2aa:	mov    eax,r14d
   14000d2ad:	sub    r14d,ebx
   14000d2b0:	test   eax,eax
   14000d2b2:	je     0x14000d304
   14000d2b4:	mov    rax,QWORD PTR [rbp-0x78]
   14000d2b8:	add    DWORD PTR [rsp+0x58],ebx
   14000d2bc:	lea    r9,[rbp-0x10]
   14000d2c0:	mov    WORD PTR [rax+rsi*2],di
   14000d2c4:	lea    rax,[rbp-0x80]
   14000d2c8:	add    rsi,rbx
   14000d2cb:	lea    r8,[rbp-0x78]
   14000d2cf:	lea    rdx,[rbp-0x60]
   14000d2d3:	mov    rcx,rsi
   14000d2d6:	mov    QWORD PTR [rsp+0x20],rax
   14000d2db:	call   0x14000cb00
   14000d2e0:	test   eax,eax
   14000d2e2:	je     0x14000d244
   14000d2e8:	mov    rcx,r12
   14000d2eb:	add    r15d,ebx
   14000d2ee:	call   0x14001d690
   14000d2f3:	movzx  edi,ax
   14000d2f6:	mov    DWORD PTR [rsp+0x3c],edi
   14000d2fa:	mov    eax,0xff00
   14000d2ff:	test   ax,di
   14000d302:	je     0x14000d29b
   14000d304:	mov    rdx,rbx
   14000d307:	mov    ebx,DWORD PTR [rsp+0x58]
   14000d30b:	test   ebx,ebx
   14000d30d:	je     0x14000d444
   14000d313:	lea    eax,[rdi-0x45]
   14000d316:	mov    ecx,0xffdf
   14000d31b:	test   cx,ax
   14000d31e:	jne    0x14000d444
   14000d324:	mov    eax,r14d
   14000d327:	sub    r14d,edx
   14000d32a:	test   eax,eax
   14000d32c:	je     0x14000d444
   14000d332:	mov    rax,QWORD PTR [rbp-0x78]
   14000d336:	mov    ecx,0x65
   14000d33b:	lea    r9,[rbp-0x10]
   14000d33f:	mov    WORD PTR [rax+rsi*2],cx
   14000d343:	add    rsi,rdx
   14000d346:	lea    rax,[rbp-0x80]
   14000d34a:	lea    rdx,[rbp-0x60]
   14000d34e:	lea    r8,[rbp-0x78]
   14000d352:	mov    rcx,rsi
   14000d355:	mov    QWORD PTR [rsp+0x20],rax
   14000d35a:	call   0x14000cb00
   14000d35f:	test   eax,eax
   14000d361:	je     0x14000d244
   14000d367:	mov    rcx,r12
   14000d36a:	inc    r15d
   14000d36d:	call   0x14001d690
   14000d372:	mov    ecx,0x2d
   14000d377:	movzx  edi,ax
   14000d37a:	mov    DWORD PTR [rsp+0x3c],edi
   14000d37e:	cmp    cx,ax
   14000d381:	jne    0x14000d3b5
   14000d383:	mov    rax,QWORD PTR [rbp-0x78]
   14000d387:	lea    r9,[rbp-0x10]
   14000d38b:	lea    r8,[rbp-0x78]
   14000d38f:	mov    WORD PTR [rax+rsi*2],cx
   14000d393:	lea    rax,[rbp-0x80]
   14000d397:	inc    rsi
   14000d39a:	lea    rdx,[rbp-0x60]
   14000d39e:	mov    rcx,rsi
   14000d3a1:	mov    QWORD PTR [rsp+0x20],rax
   14000d3a6:	call   0x14000cb00
   14000d3ab:	test   eax,eax
   14000d3ad:	je     0x14000d244
   14000d3b3:	jmp    0x14000d3bf
   14000d3b5:	mov    eax,0x2b
   14000d3ba:	cmp    ax,di
   14000d3bd:	jne    0x14000d43a
   14000d3bf:	mov    eax,r14d
   14000d3c2:	mov    ecx,0x1
   14000d3c7:	sub    r14d,ecx
   14000d3ca:	test   eax,eax
   14000d3cc:	jne    0x14000d3d3
   14000d3ce:	mov    r14d,r13d
   14000d3d1:	jmp    0x14000d43a
   14000d3d3:	add    r15d,ecx
   14000d3d6:	jmp    0x14000d42b
   14000d3d8:	movzx  eax,di
   14000d3db:	movzx  ecx,al
   14000d3de:	call   0x14001e2f0
   14000d3e3:	test   eax,eax
   14000d3e5:	je     0x14000d444
   14000d3e7:	mov    eax,r14d
   14000d3ea:	mov    ecx,0x1
   14000d3ef:	sub    r14d,ecx
   14000d3f2:	test   eax,eax
   14000d3f4:	je     0x14000d444
   14000d3f6:	mov    rax,QWORD PTR [rbp-0x78]
   14000d3fa:	add    ebx,ecx
   14000d3fc:	lea    r9,[rbp-0x10]
   14000d400:	mov    WORD PTR [rax+rsi*2],di
   14000d404:	add    rsi,rcx
   14000d407:	lea    rax,[rbp-0x80]
   14000d40b:	lea    r8,[rbp-0x78]
   14000d40f:	lea    rdx,[rbp-0x60]
   14000d413:	mov    rcx,rsi
   14000d416:	mov    QWORD PTR [rsp+0x20],rax
   14000d41b:	call   0x14000cb00
   14000d420:	test   eax,eax
   14000d422:	je     0x14000d244
   14000d428:	inc    r15d
   14000d42b:	mov    rcx,r12
   14000d42e:	call   0x14001d690
   14000d433:	movzx  edi,ax
   14000d436:	mov    DWORD PTR [rsp+0x3c],edi
   14000d43a:	mov    eax,0xff00
   14000d43f:	test   ax,di
   14000d442:	je     0x14000d3d8
   14000d444:	mov    eax,0x1
   14000d449:	mov    r14d,0xffff
   14000d44f:	sub    r15d,eax
   14000d452:	mov    DWORD PTR [rsp+0x30],r15d
   14000d457:	mov    DWORD PTR [rsp+0x44],r15d
   14000d45c:	cmp    r14w,di
   14000d460:	je     0x14000d472
   14000d462:	mov    rdx,r12
   14000d465:	movzx  ecx,di
   14000d468:	call   0x14001d8ec
   14000d46d:	mov    eax,0x1
   14000d472:	test   ebx,ebx
   14000d474:	je     0x14000dd8e
   14000d47a:	cmp    BYTE PTR [rsp+0x34],r13b
   14000d47f:	jne    0x14000d0a8
   14000d485:	mov    r12d,DWORD PTR [rsp+0x38]
   14000d48a:	mov    r14,QWORD PTR [rbp-0x78]
   14000d48e:	add    r12d,eax
   14000d491:	mov    rax,QWORD PTR [rbp-0x60]
   14000d495:	mov    WORD PTR [r14+rsi*2],r13w
   14000d49a:	lea    rbx,[rax*2+0x2]
   14000d4a2:	mov    DWORD PTR [rsp+0x38],r12d
   14000d4a7:	mov    rcx,rbx
   14000d4aa:	call   0x14000fc4c
   14000d4af:	mov    rsi,rax
   14000d4b2:	test   rax,rax
   14000d4b5:	je     0x14000d249
   14000d4bb:	lea    rax,[rbx-0x1]
   14000d4bf:	mov    r9,r14
   14000d4c2:	mov    r8,rbx
   14000d4c5:	mov    rdx,rsi
   14000d4c8:	xor    ecx,ecx
   14000d4ca:	mov    QWORD PTR [rsp+0x20],rax
   14000d4cf:	call   0x14001eb40
   14000d4d4:	cmp    eax,0x16
   14000d4d7:	je     0x14000de59
   14000d4dd:	cmp    eax,0x22
   14000d4e0:	je     0x14000de59
   14000d4e6:	mov    rcx,QWORD PTR [rip+0x38f0b]        # 0x1400463f8
   14000d4ed:	movsx  ebx,BYTE PTR [rsp+0x35]
   14000d4f2:	call   QWORD PTR [rip+0x27d30]        # 0x140035228
   14000d4f8:	mov    rdx,QWORD PTR [rbp-0x70]
   14000d4fc:	lea    r9,[rbp-0x38]
   14000d500:	lea    ecx,[rbx-0x1]
   14000d503:	mov    r8,rsi
   14000d506:	call   rax
   14000d508:	mov    rcx,rsi
   14000d50b:	call   0x14000fb50
   14000d510:	jmp    0x14000d0a2
   14000d515:	mov    eax,0x1
   14000d51a:	test   r8d,r8d
   14000d51d:	jne    0x14000d529
   14000d51f:	add    edx,eax
   14000d521:	mov    DWORD PTR [rsp+0x50],eax
   14000d525:	mov    DWORD PTR [rsp+0x40],edx
   14000d529:	test   r14b,r14b
   14000d52c:	jle    0x14000d8b1
   14000d532:	mov    r12b,al
   14000d535:	jmp    0x14000d8b1
   14000d53a:	cmp    esi,0x70
   14000d53d:	je     0x14000da5d
   14000d543:	cmp    esi,0x73
   14000d546:	je     0x14000d8a0
   14000d54c:	cmp    esi,0x75
   14000d54f:	je     0x14000da75
   14000d555:	cmp    esi,0x78
   14000d558:	je     0x14000d0d2
   14000d55e:	cmp    esi,0x7b
   14000d561:	je     0x14000d594
   14000d563:	mov    r14d,0xffff
   14000d569:	cmp    WORD PTR [r10],di
   14000d56d:	jne    0x14000dd9e
   14000d573:	dec    BYTE PTR [rsp+0x36]
   14000d577:	mov    r15d,DWORD PTR [rsp+0x30]
   14000d57c:	xor    r13d,r13d
   14000d57f:	test   cl,cl
   14000d581:	jne    0x14000d0a8
   14000d587:	mov    r9,QWORD PTR [rbp-0x40]
   14000d58b:	mov    QWORD PTR [rbp-0x50],r9
   14000d58f:	jmp    0x14000d0a8
   14000d594:	xor    r13d,r13d
   14000d597:	test   r14b,r14b
   14000d59a:	movzx  r12d,r12b
   14000d59e:	lea    r14d,[r13+0x1]
   14000d5a2:	lea    eax,[r13+0x5e]
   14000d5a6:	cmovg  r12d,r14d
   14000d5aa:	add    r10,0x2
   14000d5ae:	mov    DWORD PTR [rbp-0x68],r12d
   14000d5b2:	mov    QWORD PTR [rsp+0x60],r10
   14000d5b7:	cmp    ax,WORD PTR [r10]
   14000d5bb:	jne    0x14000d5cb
   14000d5bd:	add    r10,0x2
   14000d5c1:	mov    BYTE PTR [rsp+0x54],0xff
   14000d5c6:	mov    QWORD PTR [rsp+0x60],r10
   14000d5cb:	mov    rbx,QWORD PTR [rsp+0x68]
   14000d5d0:	test   rbx,rbx
   14000d5d3:	jne    0x14000d5f4
   14000d5d5:	mov    ecx,0x2000
   14000d5da:	call   0x14000fc4c
   14000d5df:	mov    rbx,rax
   14000d5e2:	mov    QWORD PTR [rsp+0x68],rax
   14000d5e7:	test   rax,rax
   14000d5ea:	je     0x14000ddde
   14000d5f0:	mov    DWORD PTR [rbp-0x58],r14d
   14000d5f4:	xor    edx,edx
   14000d5f6:	mov    r8d,0x2000
   14000d5fc:	mov    rcx,rbx
   14000d5ff:	call   0x140009800
   14000d604:	mov    r10,QWORD PTR [rsp+0x60]
   14000d609:	mov    edx,0x5d
   14000d60e:	cmp    dx,WORD PTR [r10]
   14000d612:	jne    0x14000d621
   14000d614:	lea    eax,[rdx-0x3d]
   14000d617:	mov    r15d,edx
   14000d61a:	add    r10,0x2
   14000d61e:	mov    BYTE PTR [rbx+0xb],al
   14000d621:	movzx  eax,WORD PTR [r10]
   14000d625:	cmp    dx,ax
   14000d628:	je     0x14000d6ed
   14000d62e:	mov    r12d,0x2d
   14000d634:	add    r10,0x2
   14000d638:	cmp    r12w,ax
   14000d63c:	jne    0x14000d6ba
   14000d63e:	test   r15w,r15w
   14000d642:	je     0x14000d6ba
   14000d644:	movzx  ecx,WORD PTR [r10]
   14000d648:	cmp    dx,cx
   14000d64b:	je     0x14000d6ba
   14000d64d:	add    r10,0x2
   14000d651:	mov    QWORD PTR [rsp+0x60],r10
   14000d656:	cmp    r15w,cx
   14000d65a:	jae    0x14000d662
   14000d65c:	movzx  r9d,cx
   14000d660:	jmp    0x14000d66a
   14000d662:	movzx  r9d,r15w
   14000d666:	movzx  r15d,cx
   14000d66a:	mov    r11d,0x1
   14000d670:	cmp    r15w,r9w
   14000d674:	jae    0x14000d6a3
   14000d676:	movzx  r10d,r15w
   14000d67a:	movzx  ecx,r15w
   14000d67e:	mov    r8,r10
   14000d681:	mov    edx,r11d
   14000d684:	and    ecx,0x7
   14000d687:	shr    r8,0x3
   14000d68b:	add    r15w,r11w
   14000d68f:	shl    dl,cl
   14000d691:	add    r10,r11
   14000d694:	or     BYTE PTR [r8+rbx*1],dl
   14000d698:	cmp    r15w,r9w
   14000d69c:	jb     0x14000d67a
   14000d69e:	mov    r10,QWORD PTR [rsp+0x60]
   14000d6a3:	movzx  r8d,r9w
   14000d6a7:	movzx  eax,r9w
   14000d6ab:	mov    edx,r11d
   14000d6ae:	movzx  r15d,r13w
   14000d6b2:	mov    r14d,0x1
   14000d6b8:	jmp    0x14000d6c8
   14000d6ba:	movzx  r15d,ax
   14000d6be:	movzx  r8d,ax
   14000d6c2:	mov    edx,r14d
   14000d6c5:	movzx  eax,ax
   14000d6c8:	and    eax,0x7
   14000d6cb:	shr    r8,0x3
   14000d6cf:	mov    cl,al
   14000d6d1:	shl    dl,cl
   14000d6d3:	or     BYTE PTR [r8+rbx*1],dl
   14000d6d7:	movzx  eax,WORD PTR [r10]
   14000d6db:	mov    edx,0x5d
   14000d6e0:	cmp    dx,ax
   14000d6e3:	jne    0x14000d634
   14000d6e9:	mov    r12d,DWORD PTR [rbp-0x68]
   14000d6ed:	cmp    WORD PTR [r10],r13w
   14000d6f1:	je     0x14000ddde
   14000d6f7:	mov    QWORD PTR [rsp+0x60],r10
   14000d6fc:	jmp    0x14000d8b1
   14000d701:	mov    eax,0x2b
   14000d706:	cmp    ax,di
   14000d709:	jne    0x14000d71c
   14000d70b:	sub    edx,r12d
   14000d70e:	mov    DWORD PTR [rsp+0x40],edx
   14000d712:	jne    0x14000d78c
   14000d714:	test   r8d,r8d
   14000d717:	je     0x14000d78c
   14000d719:	mov    bl,r12b
   14000d71c:	mov    r15,QWORD PTR [rsp+0x70]
   14000d721:	mov    r14d,DWORD PTR [rsp+0x30]
   14000d726:	mov    eax,0x30
   14000d72b:	cmp    ax,di
   14000d72e:	jne    0x14000d7e4
   14000d734:	add    r14d,r12d
   14000d737:	mov    rcx,r15
   14000d73a:	mov    DWORD PTR [rsp+0x30],r14d
   14000d73f:	mov    DWORD PTR [rsp+0x44],r14d
   14000d744:	call   0x14001d690
   14000d749:	movzx  edi,ax
   14000d74c:	mov    ecx,0xffdf
   14000d751:	lea    eax,[rdi-0x58]
   14000d754:	mov    DWORD PTR [rsp+0x3c],edi
   14000d758:	test   cx,ax
   14000d75b:	je     0x14000d85a
   14000d761:	mov    DWORD PTR [rsp+0x58],r12d
   14000d766:	cmp    esi,0x78
   14000d769:	je     0x14000d7b7
   14000d76b:	mov    r14d,DWORD PTR [rsp+0x40]
   14000d770:	xor    ecx,ecx
   14000d772:	cmp    DWORD PTR [rsp+0x50],ecx
   14000d776:	je     0x14000d780
   14000d778:	sub    r14d,r12d
   14000d77b:	jne    0x14000d780
   14000d77d:	add    bl,r12b
   14000d780:	mov    r12d,DWORD PTR [rsp+0x4c]
   14000d785:	mov    esi,0x6f
   14000d78a:	jmp    0x14000d7f0
   14000d78c:	mov    r14d,DWORD PTR [rsp+0x30]
   14000d791:	mov    r15,QWORD PTR [rsp+0x70]
   14000d796:	add    r14d,r12d
   14000d799:	mov    rcx,r15
   14000d79c:	mov    DWORD PTR [rsp+0x30],r14d
   14000d7a1:	mov    DWORD PTR [rsp+0x44],r14d
   14000d7a6:	call   0x14001d690
   14000d7ab:	movzx  edi,ax
   14000d7ae:	mov    DWORD PTR [rsp+0x3c],edi
   14000d7b2:	jmp    0x14000d726
   14000d7b7:	sub    r14d,r12d
   14000d7ba:	mov    eax,0xffff
   14000d7bf:	mov    DWORD PTR [rsp+0x30],r14d
   14000d7c4:	mov    DWORD PTR [rsp+0x44],r14d
   14000d7c9:	cmp    ax,di
   14000d7cc:	je     0x14000d7d9
   14000d7ce:	mov    rdx,r15
   14000d7d1:	movzx  ecx,di
   14000d7d4:	call   0x14001d8ec
   14000d7d9:	mov    eax,0x30
   14000d7de:	mov    edi,eax
   14000d7e0:	mov    DWORD PTR [rsp+0x3c],eax
   14000d7e4:	mov    r12d,DWORD PTR [rsp+0x4c]
   14000d7e9:	xor    ecx,ecx
   14000d7eb:	mov    r14d,DWORD PTR [rsp+0x40]
   14000d7f0:	mov    r15d,DWORD PTR [rsp+0x30]
   14000d7f5:	test   r12d,r12d
   14000d7f8:	je     0x14000dbbd
   14000d7fe:	test   bl,bl
   14000d800:	mov    rbx,QWORD PTR [rsp+0x78]
   14000d805:	jne    0x14000dba2
   14000d80b:	lea    eax,[rsi-0x70]
   14000d80e:	test   eax,0xfffffff7
   14000d813:	mov    eax,0xff00
   14000d818:	je     0x14000daee
   14000d81e:	test   ax,di
   14000d821:	jne    0x14000db79
   14000d827:	movzx  eax,di
   14000d82a:	movzx  ecx,al
   14000d82d:	call   0x14001e2f0
   14000d832:	xor    ecx,ecx
   14000d834:	test   eax,eax
   14000d836:	je     0x14000db79
   14000d83c:	cmp    esi,0x6f
   14000d83f:	jne    0x14000dae5
   14000d845:	lea    eax,[rcx+0x38]
   14000d848:	cmp    ax,di
   14000d84b:	jbe    0x14000db79
   14000d851:	shl    rbx,0x3
   14000d855:	jmp    0x14000db30
   14000d85a:	add    r14d,r12d
   14000d85d:	mov    rcx,r15
   14000d860:	mov    DWORD PTR [rsp+0x30],r14d
   14000d865:	mov    DWORD PTR [rsp+0x44],r14d
   14000d86a:	call   0x14001d690
   14000d86f:	xor    ecx,ecx
   14000d871:	movzx  edi,ax
   14000d874:	mov    DWORD PTR [rsp+0x3c],edi
   14000d878:	cmp    DWORD PTR [rsp+0x50],ecx
   14000d87c:	je     0x14000d891
   14000d87e:	mov    eax,DWORD PTR [rsp+0x40]
   14000d882:	sub    eax,0x2
   14000d885:	mov    DWORD PTR [rsp+0x40],eax
   14000d889:	cmp    eax,r12d
   14000d88c:	jge    0x14000d891
   14000d88e:	add    bl,r12b
   14000d891:	mov    r12d,DWORD PTR [rsp+0x4c]
   14000d896:	mov    esi,0x78
   14000d89b:	jmp    0x14000d7eb
   14000d8a0:	movzx  r12d,r12b
   14000d8a4:	test   r14b,r14b
   14000d8a7:	mov    r8d,0x1
   14000d8ad:	cmovg  r12d,r8d
   14000d8b1:	mov    r15d,DWORD PTR [rsp+0x30]
   14000d8b6:	mov    rbx,QWORD PTR [rbp-0x70]
   14000d8ba:	mov    r13,QWORD PTR [rsp+0x70]
   14000d8bf:	dec    r15d
   14000d8c2:	mov    eax,0xffff
   14000d8c7:	mov    DWORD PTR [rsp+0x30],r15d
   14000d8cc:	mov    DWORD PTR [rsp+0x44],r15d
   14000d8d1:	cmp    ax,di
   14000d8d4:	je     0x14000d8e1
   14000d8d6:	mov    rdx,r13
   14000d8d9:	movzx  ecx,di
   14000d8dc:	call   0x14001d8ec
   14000d8e1:	mov    r14b,BYTE PTR [rsp+0x54]
   14000d8e6:	xor    edx,edx
   14000d8e8:	cmp    DWORD PTR [rsp+0x50],edx
   14000d8ec:	je     0x14000d902
   14000d8ee:	mov    ecx,DWORD PTR [rsp+0x40]
   14000d8f2:	mov    eax,ecx
   14000d8f4:	dec    ecx
   14000d8f6:	mov    DWORD PTR [rsp+0x40],ecx
   14000d8fa:	test   eax,eax
   14000d8fc:	je     0x14000da0e
   14000d902:	inc    r15d
   14000d905:	mov    rcx,r13
   14000d908:	mov    DWORD PTR [rsp+0x30],r15d
   14000d90d:	mov    DWORD PTR [rsp+0x44],r15d
   14000d912:	call   0x14001d690
   14000d917:	movzx  edi,ax
   14000d91a:	mov    eax,0xffff
   14000d91f:	mov    DWORD PTR [rsp+0x3c],edi
   14000d923:	cmp    ax,di
   14000d926:	je     0x14000d9e3
   14000d92c:	cmp    esi,0x63
   14000d92f:	je     0x14000d975
   14000d931:	cmp    esi,0x73
   14000d934:	jne    0x14000d94b
   14000d936:	lea    eax,[rdi-0x9]
   14000d939:	cmp    ax,0x4
   14000d93d:	jbe    0x14000d9e3
   14000d943:	lea    eax,[rsi-0x53]
   14000d946:	cmp    di,ax
   14000d949:	jne    0x14000d975
   14000d94b:	cmp    esi,0x7b
   14000d94e:	jne    0x14000d9e3
   14000d954:	mov    rcx,QWORD PTR [rsp+0x68]
   14000d959:	movzx  eax,di
   14000d95c:	movzx  edx,di
   14000d95f:	shr    rax,0x3
   14000d963:	and    edx,0x7
   14000d966:	movsx  ecx,BYTE PTR [rax+rcx*1]
   14000d96a:	movsx  eax,r14b
   14000d96e:	xor    ecx,eax
   14000d970:	bt     ecx,edx
   14000d973:	jae    0x14000d9e3
   14000d975:	xor    edx,edx
   14000d977:	cmp    BYTE PTR [rsp+0x34],dl
   14000d97b:	jne    0x14000d9da
   14000d97d:	test   r12b,r12b
   14000d980:	je     0x14000d996
   14000d982:	mov    rcx,QWORD PTR [rbp-0x70]
   14000d986:	mov    WORD PTR [rcx],di
   14000d989:	add    rcx,0x2
   14000d98d:	mov    QWORD PTR [rbp-0x70],rcx
   14000d991:	jmp    0x14000d8e8
   14000d996:	mov    DWORD PTR [rbp-0x68],edx
   14000d999:	mov    rdx,QWORD PTR [rbp-0x70]
   14000d99d:	lea    rcx,[rbp-0x68]
   14000d9a1:	movzx  r9d,di
   14000d9a5:	mov    r8d,0x5
   14000d9ab:	call   0x14001d67c
   14000d9b0:	xor    edx,edx
   14000d9b2:	test   eax,eax
   14000d9b4:	je     0x14000d9cd
   14000d9b6:	cmp    eax,0x16
   14000d9b9:	je     0x14000de46
   14000d9bf:	cmp    eax,0x22
   14000d9c2:	jne    0x14000d8e8
   14000d9c8:	jmp    0x14000de46
   14000d9cd:	movsxd rax,DWORD PTR [rbp-0x68]
   14000d9d1:	add    QWORD PTR [rbp-0x70],rax
   14000d9d5:	jmp    0x14000d8e8
   14000d9da:	add    rbx,0x2
   14000d9de:	jmp    0x14000d8e8
   14000d9e3:	mov    ecx,0x1
   14000d9e8:	mov    r14d,0xffff
   14000d9ee:	sub    r15d,ecx
   14000d9f1:	mov    DWORD PTR [rsp+0x30],r15d
   14000d9f6:	mov    DWORD PTR [rsp+0x44],r15d
   14000d9fb:	cmp    r14w,di
   14000d9ff:	je     0x14000da19
   14000da01:	mov    rdx,r13
   14000da04:	movzx  ecx,di
   14000da07:	call   0x14001d8ec
   14000da0c:	jmp    0x14000da14
   14000da0e:	mov    r14d,0xffff
   14000da14:	mov    ecx,0x1
   14000da19:	mov    rax,QWORD PTR [rbp-0x70]
   14000da1d:	xor    r13d,r13d
   14000da20:	cmp    rbx,rax
   14000da23:	je     0x14000dd8e
   14000da29:	cmp    BYTE PTR [rsp+0x34],r13b
   14000da2e:	jne    0x14000d0a8
   14000da34:	add    DWORD PTR [rsp+0x38],ecx
   14000da38:	cmp    esi,0x63
   14000da3b:	je     0x14000d0a2
   14000da41:	mov    r14d,0xffff
   14000da47:	test   r12b,r12b
   14000da4a:	je     0x14000da55
   14000da4c:	mov    WORD PTR [rax],r13w
   14000da50:	jmp    0x14000d0a8
   14000da55:	mov    BYTE PTR [rax],r13b
   14000da58:	jmp    0x14000d0a8
   14000da5d:	mov    r12d,DWORD PTR [rsp+0x4c]
   14000da62:	mov    eax,0x1
   14000da67:	mov    QWORD PTR [rsp+0x78],r11
   14000da6c:	add    r12d,eax
   14000da6f:	mov    BYTE PTR [rsp+0x35],al
   14000da73:	jmp    0x14000da7f
   14000da75:	mov    r12d,DWORD PTR [rsp+0x4c]
   14000da7a:	mov    eax,0x1
   14000da7f:	mov    ecx,0x2d
   14000da84:	cmp    cx,di
   14000da87:	jne    0x14000da8f
   14000da89:	mov    BYTE PTR [rsp+0x48],al
   14000da8d:	jmp    0x14000da9d
   14000da8f:	mov    ecx,0x2b
   14000da94:	cmp    cx,di
   14000da97:	jne    0x14000d7e9
   14000da9d:	sub    edx,eax
   14000da9f:	mov    DWORD PTR [rsp+0x40],edx
   14000daa3:	jne    0x14000dab6
   14000daa5:	test   r8d,r8d
   14000daa8:	je     0x14000dab6
   14000daaa:	mov    bl,al
   14000daac:	mov    r14d,edx
   14000daaf:	xor    ecx,ecx
   14000dab1:	jmp    0x14000d7f0
   14000dab6:	mov    r15d,DWORD PTR [rsp+0x30]
   14000dabb:	mov    rcx,QWORD PTR [rsp+0x70]
   14000dac0:	add    r15d,eax
   14000dac3:	mov    DWORD PTR [rsp+0x30],r15d
   14000dac8:	mov    DWORD PTR [rsp+0x44],r15d
   14000dacd:	call   0x14001d690
   14000dad2:	mov    r14d,DWORD PTR [rsp+0x40]
   14000dad7:	movzx  edi,ax
   14000dada:	xor    ecx,ecx
   14000dadc:	mov    DWORD PTR [rsp+0x3c],edi
   14000dae0:	jmp    0x14000d7f5
   14000dae5:	lea    rbx,[rbx+rbx*4]
   14000dae9:	add    rbx,rbx
   14000daec:	jmp    0x14000db30
   14000daee:	test   ax,di
   14000daf1:	jne    0x14000db79
   14000daf7:	movzx  eax,di
   14000dafa:	movzx  ebx,al
   14000dafd:	mov    ecx,ebx
   14000daff:	call   0x14001e65c
   14000db04:	xor    ecx,ecx
   14000db06:	test   eax,eax
   14000db08:	je     0x14000db79
   14000db0a:	shl    QWORD PTR [rsp+0x78],0x4
   14000db10:	mov    ecx,ebx
   14000db12:	call   0x14001e2f0
   14000db17:	mov    rbx,QWORD PTR [rsp+0x78]
   14000db1c:	test   eax,eax
   14000db1e:	jne    0x14000db30
   14000db20:	mov    eax,0xffdf
   14000db25:	and    di,ax
   14000db28:	sub    di,0x7
   14000db2c:	mov    DWORD PTR [rsp+0x3c],edi
   14000db30:	movzx  eax,di
   14000db33:	mov    ecx,0x1
   14000db38:	add    DWORD PTR [rsp+0x58],ecx
   14000db3c:	sub    eax,0x30
   14000db3f:	cdqe   
   14000db41:	add    rbx,rax
   14000db44:	xor    eax,eax
   14000db46:	mov    QWORD PTR [rsp+0x78],rbx
   14000db4b:	cmp    DWORD PTR [rsp+0x50],eax
   14000db4f:	je     0x14000db56
   14000db51:	sub    r14d,ecx
   14000db54:	je     0x14000dba2
   14000db56:	add    r15d,ecx
   14000db59:	mov    rcx,QWORD PTR [rsp+0x70]
   14000db5e:	mov    DWORD PTR [rsp+0x30],r15d
   14000db63:	mov    DWORD PTR [rsp+0x44],r15d
   14000db68:	call   0x14001d690
   14000db6d:	movzx  edi,ax
   14000db70:	mov    DWORD PTR [rsp+0x3c],edi
   14000db74:	jmp    0x14000d80b
   14000db79:	dec    r15d
   14000db7c:	mov    eax,0xffff
   14000db81:	mov    DWORD PTR [rsp+0x30],r15d
   14000db86:	mov    DWORD PTR [rsp+0x44],r15d
   14000db8b:	cmp    ax,di
   14000db8e:	je     0x14000db9d
   14000db90:	mov    rdx,QWORD PTR [rsp+0x70]
   14000db95:	movzx  ecx,di
   14000db98:	call   0x14001d8ec
   14000db9d:	mov    rbx,QWORD PTR [rsp+0x78]
   14000dba2:	xor    r11d,r11d
   14000dba5:	cmp    BYTE PTR [rsp+0x48],r11b
   14000dbaa:	je     0x14000dcc5
   14000dbb0:	neg    rbx
   14000dbb3:	mov    QWORD PTR [rsp+0x78],rbx
   14000dbb8:	jmp    0x14000dcc5
   14000dbbd:	test   bl,bl
   14000dbbf:	jne    0x14000dcb8
   14000dbc5:	lea    eax,[rsi-0x70]
   14000dbc8:	test   eax,0xfffffff7
   14000dbcd:	mov    eax,0xff00
   14000dbd2:	je     0x14000dc1a
   14000dbd4:	test   ax,di
   14000dbd7:	jne    0x14000dc94
   14000dbdd:	movzx  eax,di
   14000dbe0:	movzx  ecx,al
   14000dbe3:	call   0x14001e2f0
   14000dbe8:	xor    ecx,ecx
   14000dbea:	test   eax,eax
   14000dbec:	je     0x14000dc94
   14000dbf2:	cmp    esi,0x6f
   14000dbf5:	jne    0x14000dc09
   14000dbf7:	lea    eax,[rcx+0x38]
   14000dbfa:	cmp    ax,di
   14000dbfd:	jbe    0x14000dc94
   14000dc03:	shl    r13d,0x3
   14000dc07:	jmp    0x14000dc51
   14000dc09:	lea    eax,[r13*4+0x0]
   14000dc11:	add    eax,r13d
   14000dc14:	lea    r13d,[rax+rax*1]
   14000dc18:	jmp    0x14000dc51
   14000dc1a:	test   ax,di
   14000dc1d:	jne    0x14000dc94
   14000dc1f:	movzx  eax,di
   14000dc22:	movzx  ebx,al
   14000dc25:	mov    ecx,ebx
   14000dc27:	call   0x14001e65c
   14000dc2c:	xor    ecx,ecx
   14000dc2e:	test   eax,eax
   14000dc30:	je     0x14000dc94
   14000dc32:	mov    ecx,ebx
   14000dc34:	shl    r13d,0x4
   14000dc38:	call   0x14001e2f0
   14000dc3d:	test   eax,eax
   14000dc3f:	jne    0x14000dc51
   14000dc41:	mov    eax,0xffdf
   14000dc46:	and    di,ax
   14000dc49:	sub    di,0x7
   14000dc4d:	mov    DWORD PTR [rsp+0x3c],edi
   14000dc51:	movzx  eax,di
   14000dc54:	add    r13d,0xffffffd0
   14000dc58:	mov    ecx,0x1
   14000dc5d:	add    DWORD PTR [rsp+0x58],ecx
   14000dc61:	add    r13d,eax
   14000dc64:	xor    eax,eax
   14000dc66:	cmp    DWORD PTR [rsp+0x50],eax
   14000dc6a:	je     0x14000dc71
   14000dc6c:	sub    r14d,ecx
   14000dc6f:	je     0x14000dcb8
   14000dc71:	add    r15d,ecx
   14000dc74:	mov    rcx,QWORD PTR [rsp+0x70]
   14000dc79:	mov    DWORD PTR [rsp+0x30],r15d
   14000dc7e:	mov    DWORD PTR [rsp+0x44],r15d
   14000dc83:	call   0x14001d690
   14000dc88:	movzx  edi,ax
   14000dc8b:	mov    DWORD PTR [rsp+0x3c],edi
   14000dc8f:	jmp    0x14000dbc5
   14000dc94:	dec    r15d
   14000dc97:	mov    eax,0xffff
   14000dc9c:	mov    DWORD PTR [rsp+0x30],r15d
   14000dca1:	mov    DWORD PTR [rsp+0x44],r15d
   14000dca6:	cmp    ax,di
   14000dca9:	je     0x14000dcb8
   14000dcab:	mov    rdx,QWORD PTR [rsp+0x70]
   14000dcb0:	movzx  ecx,di
   14000dcb3:	call   0x14001d8ec
   14000dcb8:	xor    r11d,r11d
   14000dcbb:	cmp    BYTE PTR [rsp+0x48],r11b
   14000dcc0:	je     0x14000dcc5
   14000dcc2:	neg    r13d
   14000dcc5:	mov    eax,DWORD PTR [rsp+0x58]
   14000dcc9:	cmp    esi,0x46
   14000dccc:	cmove  eax,r11d
   14000dcd0:	test   eax,eax
   14000dcd2:	je     0x14000ddd1
   14000dcd8:	cmp    BYTE PTR [rsp+0x34],r11b
   14000dcdd:	jne    0x14000d09f
   14000dce3:	inc    DWORD PTR [rsp+0x38]
   14000dce7:	jmp    0x14000dcee
   14000dce9:	mov    r12d,DWORD PTR [rsp+0x4c]
   14000dcee:	mov    rax,QWORD PTR [rbp-0x70]
   14000dcf2:	test   r12d,r12d
   14000dcf5:	je     0x14000dd04
   14000dcf7:	mov    rcx,QWORD PTR [rsp+0x78]
   14000dcfc:	mov    QWORD PTR [rax],rcx
   14000dcff:	jmp    0x14000d09f
   14000dd04:	mov    r14d,0xffff
   14000dd0a:	cmp    BYTE PTR [rsp+0x35],r11b
   14000dd0f:	je     0x14000dd1c
   14000dd11:	mov    DWORD PTR [rax],r13d
   14000dd14:	xor    r13d,r13d
   14000dd17:	jmp    0x14000d0a8
   14000dd1c:	mov    WORD PTR [rax],r13w
   14000dd20:	jmp    0x14000dd14
   14000dd22:	cmp    r12w,WORD PTR [r10]
   14000dd26:	jne    0x14000dd39
   14000dd28:	lea    rax,[r10+0x2]
   14000dd2c:	cmp    r12w,WORD PTR [rax]
   14000dd30:	cmove  r10,rax
   14000dd34:	mov    QWORD PTR [rsp+0x60],r10
   14000dd39:	inc    r15d
   14000dd3c:	mov    rcx,rsi
   14000dd3f:	mov    DWORD PTR [rsp+0x30],r15d
   14000dd44:	mov    DWORD PTR [rsp+0x44],r15d
   14000dd49:	call   0x14001d690
   14000dd4e:	mov    rbx,QWORD PTR [rsp+0x60]
   14000dd53:	movzx  edi,ax
   14000dd56:	movzx  eax,WORD PTR [rbx]
   14000dd59:	add    rbx,0x2
   14000dd5d:	mov    DWORD PTR [rsp+0x3c],edi
   14000dd61:	mov    QWORD PTR [rsp+0x60],rbx
   14000dd66:	cmp    ax,di
   14000dd69:	jne    0x14000ddbe
   14000dd6b:	cmp    r14w,di
   14000dd6f:	jne    0x14000dd82
   14000dd71:	cmp    WORD PTR [rbx],r12w
   14000dd75:	jne    0x14000dd8e
   14000dd77:	mov    eax,0x6e
   14000dd7c:	cmp    WORD PTR [rbx+0x2],ax
   14000dd80:	jne    0x14000dd8e
   14000dd82:	movzx  eax,WORD PTR [rbx]
   14000dd85:	test   ax,ax
   14000dd88:	jne    0x14000cd63
   14000dd8e:	mov    r12d,DWORD PTR [rsp+0x38]
   14000dd93:	jmp    0x14000d24f
   14000dd98:	mov    r14d,0xffff
   14000dd9e:	cmp    r14w,di
   14000dda2:	je     0x14000ddb1
   14000dda4:	mov    rdx,QWORD PTR [rsp+0x70]
   14000dda9:	movzx  ecx,di
   14000ddac:	call   0x14001d8ec
   14000ddb1:	mov    r12d,DWORD PTR [rsp+0x38]
   14000ddb6:	xor    r13d,r13d
   14000ddb9:	jmp    0x14000d24f
   14000ddbe:	cmp    r14w,di
   14000ddc2:	je     0x14000dd8e
   14000ddc4:	mov    rdx,rsi
   14000ddc7:	movzx  ecx,di
   14000ddca:	call   0x14001d8ec
   14000ddcf:	jmp    0x14000dd8e
   14000ddd1:	mov    r12d,DWORD PTR [rsp+0x38]
   14000ddd6:	xor    r13d,r13d
   14000ddd9:	jmp    0x14000d249
   14000ddde:	mov    r12d,DWORD PTR [rsp+0x38]
   14000dde3:	mov    r14d,0xffff
   14000dde9:	jmp    0x14000d254
   14000ddee:	mov    r12d,DWORD PTR [rsp+0x38]
   14000ddf3:	xor    r13d,r13d
   14000ddf6:	mov    r14d,eax
   14000ddf9:	jmp    0x14000d24f
   14000ddfe:	mov    eax,r12d
   14000de01:	jmp    0x14000de0b
   14000de03:	mov    r14d,DWORD PTR [rsp+0x38]
   14000de08:	mov    eax,r14d
   14000de0b:	cmp    BYTE PTR [rbp-0x20],r13b
   14000de0f:	je     0x14000de1c
   14000de11:	mov    rcx,QWORD PTR [rbp-0x28]
   14000de15:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000de1c:	mov    rcx,QWORD PTR [rbp+0x2b0]
   14000de23:	xor    rcx,rsp
   14000de26:	call   0x1400097d0
   14000de2b:	mov    rbx,QWORD PTR [rsp+0x410]
   14000de33:	add    rsp,0x3c0
   14000de3a:	pop    r15
   14000de3c:	pop    r14
   14000de3e:	pop    r13
   14000de40:	pop    r12
   14000de42:	pop    rdi
   14000de43:	pop    rsi
   14000de44:	pop    rbp
   14000de45:	ret    
   14000de46:	xor    r9d,r9d
   14000de49:	xor    r8d,r8d
   14000de4c:	xor    ecx,ecx
   14000de4e:	mov    QWORD PTR [rsp+0x20],rdx
   14000de53:	call   0x14000b908
   14000de58:	int3   
   14000de59:	xor    r9d,r9d
   14000de5c:	xor    r8d,r8d
   14000de5f:	xor    edx,edx
   14000de61:	xor    ecx,ecx
   14000de63:	mov    QWORD PTR [rsp+0x20],r13
   14000de68:	call   0x14000b908
   14000de6d:	int3   
   14000de6e:	int3   
   14000de6f:	int3   
   14000de70:	mov    QWORD PTR [rsp+0x8],rbx
   14000de75:	mov    QWORD PTR [rsp+0x10],rsi
   14000de7a:	push   rdi
   14000de7b:	sub    rsp,0x20
   14000de7f:	mov    rsi,r9
   14000de82:	mov    rdi,r8
   14000de85:	mov    rbx,rdx
   14000de88:	cmp    rcx,QWORD PTR [rdx]
   14000de8b:	jne    0x14000def4
   14000de8d:	cmp    QWORD PTR [r8],r9
   14000de90:	jne    0x14000ded2
   14000de92:	mov    rcx,QWORD PTR [rbx]
   14000de95:	mov    edx,0x4
   14000de9a:	call   0x14000fbcc
   14000de9f:	mov    QWORD PTR [rdi],rax
   14000dea2:	test   rax,rax
   14000dea5:	jne    0x14000deab
   14000dea7:	xor    eax,eax
   14000dea9:	jmp    0x14000def9
   14000deab:	mov    rax,QWORD PTR [rsp+0x50]
   14000deb0:	mov    rdx,rsi
   14000deb3:	mov    DWORD PTR [rax],0x1
   14000deb9:	mov    r8,QWORD PTR [rbx]
   14000debc:	mov    rcx,QWORD PTR [rdi]
   14000debf:	add    r8,r8
   14000dec2:	call   0x14000b1c0
   14000dec7:	mov    rax,QWORD PTR [rbx]
   14000deca:	add    rax,rax
   14000decd:	mov    QWORD PTR [rbx],rax
   14000ded0:	jmp    0x14000def4
   14000ded2:	mov    rdx,QWORD PTR [rdx]
   14000ded5:	mov    rcx,QWORD PTR [rdi]
   14000ded8:	mov    r8d,0x4
   14000dede:	call   0x14000fd4c
   14000dee3:	test   rax,rax
   14000dee6:	je     0x14000dea7
   14000dee8:	mov    QWORD PTR [rdi],rax
   14000deeb:	mov    rcx,QWORD PTR [rbx]
   14000deee:	add    rcx,rcx
   14000def1:	mov    QWORD PTR [rbx],rcx
   14000def4:	mov    eax,0x1
   14000def9:	mov    rbx,QWORD PTR [rsp+0x30]
   14000defe:	mov    rsi,QWORD PTR [rsp+0x38]
   14000df03:	add    rsp,0x20
   14000df07:	pop    rdi
   14000df08:	ret    
   14000df09:	int3   
   14000df0a:	int3   
   14000df0b:	int3   
   14000df0c:	mov    QWORD PTR [rsp+0x8],rbx
   14000df11:	push   rdi
   14000df12:	sub    rsp,0x20
   14000df16:	mov    eax,0xff00
   14000df1b:	movzx  edi,cx
   14000df1e:	test   ax,cx
   14000df21:	jne    0x14000df32
   14000df23:	movzx  ebx,cx
   14000df26:	movzx  ecx,bl
   14000df29:	call   0x14001e2f0
   14000df2e:	test   eax,eax
   14000df30:	jne    0x14000df3b
   14000df32:	movzx  ebx,di
   14000df35:	and    ebx,0xffffffdf
   14000df38:	sub    ebx,0x7
   14000df3b:	movzx  eax,bx
   14000df3e:	mov    rbx,QWORD PTR [rsp+0x30]
   14000df43:	add    rsp,0x20
   14000df47:	pop    rdi
   14000df48:	ret    
   14000df49:	int3   
   14000df4a:	int3   
   14000df4b:	int3   
   14000df4c:	jmp    0x14001d690
   14000df51:	int3   
   14000df52:	int3   
   14000df53:	int3   
   14000df54:	sub    rsp,0x28
   14000df58:	mov    eax,0xffff
   14000df5d:	cmp    ax,cx
   14000df60:	je     0x14000df67
   14000df62:	call   0x14001d8ec
   14000df67:	add    rsp,0x28
   14000df6b:	ret    
   14000df6c:	mov    QWORD PTR [rsp+0x8],rbx
   14000df71:	mov    QWORD PTR [rsp+0x10],rsi
   14000df76:	push   rdi
   14000df77:	sub    rsp,0x20
   14000df7b:	mov    rsi,rdx
   14000df7e:	mov    rdi,rcx
   14000df81:	inc    DWORD PTR [rdi]
   14000df83:	mov    rcx,rsi
   14000df86:	call   0x14001d690
   14000df8b:	movzx  ebx,ax
   14000df8e:	mov    eax,0xffff
   14000df93:	cmp    bx,ax
   14000df96:	je     0x14000dfa9
   14000df98:	mov    edx,0x8
   14000df9d:	movzx  ecx,bx
   14000dfa0:	call   0x140010b00
   14000dfa5:	test   eax,eax
   14000dfa7:	jne    0x14000df81
   14000dfa9:	mov    rsi,QWORD PTR [rsp+0x38]
   14000dfae:	movzx  eax,bx
   14000dfb1:	mov    rbx,QWORD PTR [rsp+0x30]
   14000dfb6:	add    rsp,0x20
   14000dfba:	pop    rdi
   14000dfbb:	ret    
   14000dfbc:	mov    QWORD PTR [rsp+0x18],rbx
   14000dfc1:	push   rbp
   14000dfc2:	push   rsi
   14000dfc3:	push   rdi
   14000dfc4:	push   r12
   14000dfc6:	push   r13
   14000dfc8:	push   r14
   14000dfca:	push   r15
   14000dfcc:	lea    rbp,[rsp-0x2c0]
   14000dfd4:	sub    rsp,0x3c0
   14000dfdb:	mov    rax,QWORD PTR [rip+0x3728e]        # 0x140045270
   14000dfe2:	xor    rax,rsp
   14000dfe5:	mov    QWORD PTR [rbp+0x2b0],rax
   14000dfec:	xor    r13d,r13d
   14000dfef:	lea    r15,[rbp-0x10]
   14000dff3:	mov    QWORD PTR [rbp-0x40],r9
   14000dff7:	mov    eax,r13d
   14000dffa:	movzx  edi,r13w
   14000dffe:	mov    rbx,rdx
   14000e001:	mov    QWORD PTR [rsp+0x68],rdx
   14000e006:	mov    rsi,rcx
   14000e009:	mov    QWORD PTR [rsp+0x78],rcx
   14000e00e:	mov    DWORD PTR [rbp-0x48],eax
   14000e011:	mov    DWORD PTR [rsp+0x40],edi
   14000e015:	mov    QWORD PTR [rbp-0x68],r15
   14000e019:	mov    QWORD PTR [rbp-0x58],0x15e
   14000e021:	mov    DWORD PTR [rbp-0x70],r13d
   14000e025:	mov    QWORD PTR [rsp+0x70],r13
   14000e02a:	mov    QWORD PTR [rbp-0x80],r13
   14000e02e:	mov    DWORD PTR [rsp+0x50],r13d
   14000e033:	mov    QWORD PTR [rbp-0x50],r13
   14000e037:	test   rdx,rdx
   14000e03a:	jne    0x14000e054
   14000e03c:	call   0x14000b9f0
   14000e041:	mov    DWORD PTR [rax],0x16
   14000e047:	call   0x14000b8b8
   14000e04c:	or     eax,0xffffffff
   14000e04f:	jmp    0x14000f27f
   14000e054:	test   rcx,rcx
   14000e057:	je     0x14000e03c
   14000e059:	lea    rcx,[rbp-0x30]
   14000e05d:	mov    rdx,r8
   14000e060:	call   0x140007ff0
   14000e065:	movzx  eax,WORD PTR [rbx]
   14000e068:	mov    BYTE PTR [rsp+0x3c],r13b
   14000e06d:	mov    r14d,r13d
   14000e070:	mov    DWORD PTR [rsp+0x30],r13d
   14000e075:	mov    DWORD PTR [rsp+0x48],r13d
   14000e07a:	mov    r15d,r13d
   14000e07d:	mov    DWORD PTR [rsp+0x38],r13d
   14000e082:	test   ax,ax
   14000e085:	je     0x14000f26a
   14000e08b:	mov    r15d,0xffff
   14000e091:	mov    r12d,0x25
   14000e097:	mov    edx,0x8
   14000e09c:	movzx  ecx,ax
   14000e09f:	call   0x140010b00
   14000e0a4:	test   eax,eax
   14000e0a6:	je     0x14000e0f7
   14000e0a8:	lea    rcx,[rsp+0x48]
   14000e0ad:	dec    r14d
   14000e0b0:	mov    rdx,rsi
   14000e0b3:	mov    DWORD PTR [rsp+0x48],r14d
   14000e0b8:	call   0x14000df6c
   14000e0bd:	cmp    r15w,ax
   14000e0c1:	je     0x14000e0ce
   14000e0c3:	mov    rdx,rsi
   14000e0c6:	movzx  ecx,ax
   14000e0c9:	call   0x14001d8ec
   14000e0ce:	add    rbx,0x2
   14000e0d2:	mov    edx,0x8
   14000e0d7:	movzx  ecx,WORD PTR [rbx]
   14000e0da:	call   0x140010b00
   14000e0df:	test   eax,eax
   14000e0e1:	jne    0x14000e0ce
   14000e0e3:	mov    r14d,DWORD PTR [rsp+0x48]
   14000e0e8:	mov    QWORD PTR [rsp+0x68],rbx
   14000e0ed:	mov    DWORD PTR [rsp+0x30],r14d
   14000e0f2:	jmp    0x14000f11d
   14000e0f7:	mov    r10,QWORD PTR [rsp+0x68]
   14000e0fc:	cmp    r12w,WORD PTR [r10]
   14000e100:	jne    0x14000f0d0
   14000e106:	cmp    r12w,WORD PTR [r10+0x2]
   14000e10b:	je     0x14000f0b9
   14000e111:	xor    r11d,r11d
   14000e114:	movzx  r15d,r13w
   14000e118:	mov    edx,r13d
   14000e11b:	mov    r12,r13
   14000e11e:	lea    r9d,[r11+0x1]
   14000e122:	mov    DWORD PTR [rsp+0x60],r13d
   14000e127:	mov    DWORD PTR [rbp-0x78],r15d
   14000e12b:	mov    DWORD PTR [rsp+0x64],r13d
   14000e130:	mov    r8d,r13d
   14000e133:	mov    DWORD PTR [rsp+0x58],r13d
   14000e138:	mov    QWORD PTR [rbp-0x38],r13
   14000e13c:	mov    BYTE PTR [rsp+0x5c],r13b
   14000e141:	mov    BYTE PTR [rsp+0x4c],r13b
   14000e146:	mov    dil,r13b
   14000e149:	mov    sil,r13b
   14000e14c:	mov    DWORD PTR [rbp-0x60],r13d
   14000e150:	mov    r12b,r9b
   14000e153:	mov    DWORD PTR [rsp+0x44],edx
   14000e157:	mov    r14b,r11b
   14000e15a:	mov    r13d,r11d
   14000e15d:	or     r15d,0xffffffff
   14000e161:	add    r10,0x2
   14000e165:	mov    eax,0xff00
   14000e16a:	movzx  ebx,WORD PTR [r10]
   14000e16e:	mov    QWORD PTR [rsp+0x68],r10
   14000e173:	test   ax,bx
   14000e176:	jne    0x14000e1b3
   14000e178:	movzx  ecx,bl
   14000e17b:	call   0x14001e2f0
   14000e180:	mov    r8d,DWORD PTR [rsp+0x58]
   14000e185:	mov    edx,DWORD PTR [rsp+0x44]
   14000e189:	mov    r10,QWORD PTR [rsp+0x68]
   14000e18e:	xor    r11d,r11d
   14000e191:	lea    r9d,[r11+0x1]
   14000e195:	test   eax,eax
   14000e197:	je     0x14000e1b3
   14000e199:	lea    edx,[rdx+rdx*4]
   14000e19c:	add    r8d,r9d
   14000e19f:	lea    edx,[rdx-0x18]
   14000e1a2:	mov    DWORD PTR [rsp+0x58],r8d
   14000e1a7:	lea    edx,[rbx+rdx*2]
   14000e1aa:	mov    DWORD PTR [rsp+0x44],edx
   14000e1ae:	jmp    0x14000e288
   14000e1b3:	cmp    ebx,0x2a
   14000e1b6:	je     0x14000e285
   14000e1bc:	cmp    ebx,0x46
   14000e1bf:	je     0x14000e288
   14000e1c5:	cmp    ebx,0x49
   14000e1c8:	je     0x14000e218
   14000e1ca:	cmp    ebx,0x4c
   14000e1cd:	je     0x14000e213
   14000e1cf:	cmp    ebx,0x4e
   14000e1d2:	je     0x14000e288
   14000e1d8:	cmp    ebx,0x68
   14000e1db:	je     0x14000e20b
   14000e1dd:	mov    ecx,0x6c
   14000e1e2:	cmp    ebx,ecx
   14000e1e4:	je     0x14000e1f0
   14000e1e6:	cmp    ebx,0x77
   14000e1e9:	je     0x14000e206
   14000e1eb:	jmp    0x14000e280
   14000e1f0:	lea    rax,[r10+0x2]
   14000e1f4:	cmp    WORD PTR [rax],cx
   14000e1f7:	jne    0x14000e203
   14000e1f9:	mov    r10,rax
   14000e1fc:	mov    QWORD PTR [rsp+0x68],rax
   14000e201:	jmp    0x14000e235
   14000e203:	add    r12b,r9b
   14000e206:	add    r14b,r9b
   14000e209:	jmp    0x14000e288
   14000e20b:	add    r12b,r15b
   14000e20e:	add    r14b,r15b
   14000e211:	jmp    0x14000e288
   14000e213:	add    r12b,r9b
   14000e216:	jmp    0x14000e288
   14000e218:	movzx  eax,WORD PTR [r10+0x2]
   14000e21d:	cmp    ax,0x36
   14000e221:	jne    0x14000e23e
   14000e223:	lea    rcx,[r10+0x4]
   14000e227:	cmp    WORD PTR [rcx],0x34
   14000e22b:	jne    0x14000e23e
   14000e22d:	mov    r10,rcx
   14000e230:	mov    QWORD PTR [rsp+0x68],rcx
   14000e235:	add    r13d,r9d
   14000e238:	mov    QWORD PTR [rbp-0x80],r11
   14000e23c:	jmp    0x14000e288
   14000e23e:	cmp    ax,0x33
   14000e242:	jne    0x14000e258
   14000e244:	lea    rcx,[r10+0x4]
   14000e248:	cmp    WORD PTR [rcx],0x32
   14000e24c:	jne    0x14000e258
   14000e24e:	mov    r10,rcx
   14000e251:	mov    QWORD PTR [rsp+0x68],rcx
   14000e256:	jmp    0x14000e288
   14000e258:	sub    ax,0x58
   14000e25c:	mov    ecx,0x20
   14000e261:	cmp    ax,cx
   14000e264:	ja     0x14000e279
   14000e266:	movzx  eax,ax
   14000e269:	movabs rcx,0x100821001
   14000e273:	bt     rcx,rax
   14000e277:	jb     0x14000e235
   14000e279:	add    r13d,r9d
   14000e27c:	mov    QWORD PTR [rbp-0x80],r11
   14000e280:	add    sil,r9b
   14000e283:	jmp    0x14000e288
   14000e285:	add    dil,r9b
   14000e288:	test   sil,sil
   14000e28b:	je     0x14000e161
   14000e291:	mov    r15d,DWORD PTR [rbp-0x78]
   14000e295:	mov    BYTE PTR [rsp+0x34],dil
   14000e29a:	mov    edi,DWORD PTR [rsp+0x40]
   14000e29e:	mov    cl,BYTE PTR [rsp+0x34]
   14000e2a2:	mov    BYTE PTR [rsp+0x35],r12b
   14000e2a7:	mov    r12,QWORD PTR [rbp-0x38]
   14000e2ab:	mov    DWORD PTR [rsp+0x54],r13d
   14000e2b0:	mov    r13d,DWORD PTR [rbp-0x60]
   14000e2b4:	test   cl,cl
   14000e2b6:	jne    0x14000e2d2
   14000e2b8:	mov    rax,QWORD PTR [rbp-0x40]
   14000e2bc:	mov    QWORD PTR [rbp-0x50],rax
   14000e2c0:	add    rax,0x8
   14000e2c4:	mov    QWORD PTR [rbp-0x40],rax
   14000e2c8:	mov    rax,QWORD PTR [rax-0x8]
   14000e2cc:	mov    QWORD PTR [rbp-0x78],rax
   14000e2d0:	jmp    0x14000e2d6
   14000e2d2:	mov    QWORD PTR [rbp-0x78],r11
   14000e2d6:	mov    bl,r11b
   14000e2d9:	test   r14b,r14b
   14000e2dc:	jne    0x14000e303
   14000e2de:	movzx  eax,WORD PTR [r10]
   14000e2e2:	mov    r9d,0xffef
   14000e2e8:	sub    ax,0x43
   14000e2ec:	and    ax,r9w
   14000e2f0:	mov    r9d,0x1
   14000e2f6:	neg    ax
   14000e2f9:	sbb    r14b,r14b
   14000e2fc:	and    r14b,0x2
   14000e300:	dec    r14b
   14000e303:	movzx  esi,WORD PTR [r10]
   14000e307:	mov    eax,0x6e
   14000e30c:	or     esi,0x20
   14000e30f:	cmp    esi,eax
   14000e311:	je     0x14000e379
   14000e313:	cmp    esi,0x63
   14000e316:	je     0x14000e339
   14000e318:	cmp    esi,0x7b
   14000e31b:	je     0x14000e339
   14000e31d:	mov    rdx,QWORD PTR [rsp+0x78]
   14000e322:	lea    rcx,[rsp+0x48]
   14000e327:	call   0x14000df6c
   14000e32c:	movzx  edi,ax
   14000e32f:	mov    eax,DWORD PTR [rsp+0x48]
   14000e333:	mov    DWORD PTR [rsp+0x30],eax
   14000e337:	jmp    0x14000e355
   14000e339:	mov    eax,DWORD PTR [rsp+0x30]
   14000e33d:	mov    rcx,QWORD PTR [rsp+0x78]
   14000e342:	add    eax,r9d
   14000e345:	mov    DWORD PTR [rsp+0x30],eax
   14000e349:	mov    DWORD PTR [rsp+0x48],eax
   14000e34d:	call   0x14001d690
   14000e352:	movzx  edi,ax
   14000e355:	mov    eax,0xffff
   14000e35a:	mov    DWORD PTR [rsp+0x40],edi
   14000e35e:	cmp    ax,di
   14000e361:	je     0x14000f1ed
   14000e367:	mov    edx,DWORD PTR [rsp+0x44]
   14000e36b:	mov    r10,QWORD PTR [rsp+0x68]
   14000e370:	mov    r8d,DWORD PTR [rsp+0x58]
   14000e375:	mov    cl,BYTE PTR [rsp+0x34]
   14000e379:	test   r8d,r8d
   14000e37c:	je     0x14000e386
   14000e37e:	test   edx,edx
   14000e380:	je     0x14000f12a
   14000e386:	test   cl,cl
   14000e388:	jne    0x14000e3da
   14000e38a:	lea    eax,[rsi-0x63]
   14000e38d:	test   eax,0xffffffe7
   14000e392:	jne    0x14000e3da
   14000e394:	cmp    esi,0x6b
   14000e397:	je     0x14000e3da
   14000e399:	mov    r9,QWORD PTR [rbp-0x50]
   14000e39d:	mov    rax,QWORD PTR [r9]
   14000e3a0:	add    r9,0x8
   14000e3a4:	mov    r12d,DWORD PTR [r9]
   14000e3a7:	mov    r11,r9
   14000e3aa:	mov    QWORD PTR [rbp-0x50],r9
   14000e3ae:	add    r9,0x8
   14000e3b2:	mov    QWORD PTR [rbp-0x78],rax
   14000e3b6:	mov    QWORD PTR [rbp-0x40],r9
   14000e3ba:	mov    r9d,0x1
   14000e3c0:	cmp    r12,r9
   14000e3c3:	jae    0x14000e3e4
   14000e3c5:	test   r14b,r14b
   14000e3c8:	jle    0x14000f152
   14000e3ce:	xor    r14d,r14d
   14000e3d1:	mov    WORD PTR [rax],r14w
   14000e3d5:	jmp    0x14000f158
   14000e3da:	mov    r11,QWORD PTR [rbp-0x50]
   14000e3de:	mov    r9d,0x1
   14000e3e4:	cmp    esi,0x6f
   14000e3e7:	jg     0x14000e89b
   14000e3ed:	je     0x14000eda2
   14000e3f3:	cmp    esi,0x63
   14000e3f6:	je     0x14000e879
   14000e3fc:	cmp    esi,0x64
   14000e3ff:	je     0x14000eda2
   14000e405:	jle    0x14000e8c4
   14000e40b:	cmp    esi,0x67
   14000e40e:	jle    0x14000e470
   14000e410:	cmp    esi,0x69
   14000e413:	je     0x14000e453
   14000e415:	mov    eax,0x6e
   14000e41a:	cmp    esi,eax
   14000e41c:	jne    0x14000e8c4
   14000e422:	mov    r14d,DWORD PTR [rsp+0x30]
   14000e427:	xor    r13d,r13d
   14000e42a:	mov    eax,r14d
   14000e42d:	test   cl,cl
   14000e42f:	jne    0x14000e84e
   14000e435:	mov    r12d,DWORD PTR [rsp+0x54]
   14000e43a:	test   r12d,r12d
   14000e43d:	je     0x14000f091
   14000e443:	mov    rax,QWORD PTR [rbp-0x78]
   14000e447:	mov    rcx,QWORD PTR [rbp-0x80]
   14000e44b:	mov    QWORD PTR [rax],rcx
   14000e44e:	jmp    0x14000e84e
   14000e453:	mov    esi,0x64
   14000e458:	mov    eax,0x2d
   14000e45d:	cmp    ax,di
   14000e460:	jne    0x14000ea62
   14000e466:	mov    BYTE PTR [rsp+0x4c],r9b
   14000e46b:	jmp    0x14000ea6c
   14000e470:	xor    r13d,r13d
   14000e473:	mov    ebx,r13d
   14000e476:	lea    ecx,[r13+0x2d]
   14000e47a:	cmp    cx,di
   14000e47d:	jne    0x14000e48b
   14000e47f:	mov    rax,QWORD PTR [rbp-0x68]
   14000e483:	mov    rbx,r9
   14000e486:	mov    WORD PTR [rax],cx
   14000e489:	jmp    0x14000e495
   14000e48b:	mov    eax,0x2b
   14000e490:	cmp    ax,di
   14000e493:	jne    0x14000e4c0
   14000e495:	mov    r12,QWORD PTR [rsp+0x78]
   14000e49a:	mov    r15d,DWORD PTR [rsp+0x44]
   14000e49f:	mov    r14d,DWORD PTR [rsp+0x30]
   14000e4a4:	mov    rcx,r12
   14000e4a7:	sub    r15d,r9d
   14000e4aa:	add    r14d,r9d
   14000e4ad:	call   0x14001d690
   14000e4b2:	mov    r8d,DWORD PTR [rsp+0x58]
   14000e4b7:	movzx  edi,ax
   14000e4ba:	mov    DWORD PTR [rsp+0x40],edi
   14000e4be:	jmp    0x14000e4cf
   14000e4c0:	mov    r14d,DWORD PTR [rsp+0x30]
   14000e4c5:	mov    r15d,DWORD PTR [rsp+0x44]
   14000e4ca:	mov    r12,QWORD PTR [rsp+0x78]
   14000e4cf:	test   r8d,r8d
   14000e4d2:	mov    eax,0xffffffff
   14000e4d7:	cmove  r15d,eax
   14000e4db:	mov    eax,0xff00
   14000e4e0:	test   ax,di
   14000e4e3:	jne    0x14000e557
   14000e4e5:	mov    esi,0x1
   14000e4ea:	movzx  eax,di
   14000e4ed:	movzx  ecx,al
   14000e4f0:	call   0x14001e2f0
   14000e4f5:	test   eax,eax
   14000e4f7:	je     0x14000e557
   14000e4f9:	mov    eax,r15d
   14000e4fc:	sub    r15d,esi
   14000e4ff:	test   eax,eax
   14000e501:	je     0x14000e557
   14000e503:	mov    rcx,QWORD PTR [rbp-0x68]
   14000e507:	add    DWORD PTR [rsp+0x64],esi
   14000e50b:	movsx  eax,dil
   14000e50f:	mov    WORD PTR [rcx+rbx*2],ax
   14000e513:	lea    rax,[rbp-0x70]
   14000e517:	add    rbx,rsi
   14000e51a:	lea    r9,[rbp-0x10]
   14000e51e:	lea    r8,[rbp-0x68]
   14000e522:	lea    rdx,[rbp-0x58]
   14000e526:	mov    rcx,rbx
   14000e529:	mov    QWORD PTR [rsp+0x20],rax
   14000e52e:	call   0x14000de70
   14000e533:	test   eax,eax
   14000e535:	je     0x14000f163
   14000e53b:	mov    rcx,r12
   14000e53e:	add    r14d,esi
   14000e541:	call   0x14001d690
   14000e546:	movzx  edi,ax
   14000e549:	mov    eax,0xff00
   14000e54e:	mov    DWORD PTR [rsp+0x40],edi
   14000e552:	test   ax,di
   14000e555:	je     0x14000e4ea
   14000e557:	mov    rax,QWORD PTR [rbp-0x30]
   14000e55b:	mov    edx,0x1
   14000e560:	mov    rcx,QWORD PTR [rax+0xf0]
   14000e567:	mov    rax,QWORD PTR [rcx+0x58]
   14000e56b:	movzx  esi,WORD PTR [rax]
   14000e56e:	movsx  eax,dil
   14000e572:	mov    ecx,esi
   14000e574:	cmp    esi,eax
   14000e576:	jne    0x14000e63f
   14000e57c:	mov    eax,r15d
   14000e57f:	sub    r15d,edx
   14000e582:	test   eax,eax
   14000e584:	je     0x14000e63f
   14000e58a:	mov    rcx,r12
   14000e58d:	add    r14d,edx
   14000e590:	call   0x14001d690
   14000e595:	lea    r9,[rbp-0x10]
   14000e599:	lea    r8,[rbp-0x68]
   14000e59d:	movzx  edi,ax
   14000e5a0:	mov    rax,QWORD PTR [rbp-0x68]
   14000e5a4:	lea    rdx,[rbp-0x58]
   14000e5a8:	mov    WORD PTR [rax+rbx*2],si
   14000e5ac:	lea    rax,[rbp-0x70]
   14000e5b0:	mov    esi,0x1
   14000e5b5:	add    rbx,rsi
   14000e5b8:	mov    DWORD PTR [rsp+0x40],edi
   14000e5bc:	mov    QWORD PTR [rsp+0x20],rax
   14000e5c1:	mov    rcx,rbx
   14000e5c4:	call   0x14000de70
   14000e5c9:	test   eax,eax
   14000e5cb:	je     0x14000f163
   14000e5d1:	jmp    0x14000e632
   14000e5d3:	movzx  eax,di
   14000e5d6:	movzx  ecx,al
   14000e5d9:	call   0x14001e2f0
   14000e5de:	test   eax,eax
   14000e5e0:	je     0x14000e63c
   14000e5e2:	mov    eax,r15d
   14000e5e5:	sub    r15d,esi
   14000e5e8:	test   eax,eax
   14000e5ea:	je     0x14000e63c
   14000e5ec:	mov    rax,QWORD PTR [rbp-0x68]
   14000e5f0:	add    DWORD PTR [rsp+0x64],esi
   14000e5f4:	lea    r9,[rbp-0x10]
   14000e5f8:	mov    WORD PTR [rax+rbx*2],di
   14000e5fc:	lea    rax,[rbp-0x70]
   14000e600:	add    rbx,rsi
   14000e603:	lea    r8,[rbp-0x68]
   14000e607:	lea    rdx,[rbp-0x58]
   14000e60b:	mov    rcx,rbx
   14000e60e:	mov    QWORD PTR [rsp+0x20],rax
   14000e613:	call   0x14000de70
   14000e618:	test   eax,eax
   14000e61a:	je     0x14000f163
   14000e620:	mov    rcx,r12
   14000e623:	add    r14d,esi
   14000e626:	call   0x14001d690
   14000e62b:	movzx  edi,ax
   14000e62e:	mov    DWORD PTR [rsp+0x40],edi
   14000e632:	mov    eax,0xff00
   14000e637:	test   ax,di
   14000e63a:	je     0x14000e5d3
   14000e63c:	mov    rdx,rsi
   14000e63f:	mov    esi,DWORD PTR [rsp+0x64]
   14000e643:	test   esi,esi
   14000e645:	je     0x14000e77c
   14000e64b:	lea    eax,[rdi-0x45]
   14000e64e:	mov    ecx,0xffdf
   14000e653:	test   cx,ax
   14000e656:	jne    0x14000e77c
   14000e65c:	mov    eax,r15d
   14000e65f:	sub    r15d,edx
   14000e662:	test   eax,eax
   14000e664:	je     0x14000e77c
   14000e66a:	mov    rax,QWORD PTR [rbp-0x68]
   14000e66e:	mov    ecx,0x65
   14000e673:	lea    r9,[rbp-0x10]
   14000e677:	mov    WORD PTR [rax+rbx*2],cx
   14000e67b:	add    rbx,rdx
   14000e67e:	lea    rax,[rbp-0x70]
   14000e682:	lea    rdx,[rbp-0x58]
   14000e686:	lea    r8,[rbp-0x68]
   14000e68a:	mov    rcx,rbx
   14000e68d:	mov    QWORD PTR [rsp+0x20],rax
   14000e692:	call   0x14000de70
   14000e697:	test   eax,eax
   14000e699:	je     0x14000f163
   14000e69f:	mov    rcx,r12
   14000e6a2:	inc    r14d
   14000e6a5:	call   0x14001d690
   14000e6aa:	mov    ecx,0x2d
   14000e6af:	movzx  edi,ax
   14000e6b2:	mov    DWORD PTR [rsp+0x40],edi
   14000e6b6:	cmp    cx,ax
   14000e6b9:	jne    0x14000e6ed
   14000e6bb:	mov    rax,QWORD PTR [rbp-0x68]
   14000e6bf:	lea    r9,[rbp-0x10]
   14000e6c3:	lea    r8,[rbp-0x68]
   14000e6c7:	mov    WORD PTR [rax+rbx*2],cx
   14000e6cb:	lea    rax,[rbp-0x70]
   14000e6cf:	inc    rbx
   14000e6d2:	lea    rdx,[rbp-0x58]
   14000e6d6:	mov    rcx,rbx
   14000e6d9:	mov    QWORD PTR [rsp+0x20],rax
   14000e6de:	call   0x14000de70
   14000e6e3:	test   eax,eax
   14000e6e5:	je     0x14000f163
   14000e6eb:	jmp    0x14000e6f7
   14000e6ed:	mov    eax,0x2b
   14000e6f2:	cmp    ax,di
   14000e6f5:	jne    0x14000e772
   14000e6f7:	mov    eax,r15d
   14000e6fa:	mov    ecx,0x1
   14000e6ff:	sub    r15d,ecx
   14000e702:	test   eax,eax
   14000e704:	jne    0x14000e70b
   14000e706:	mov    r15d,r13d
   14000e709:	jmp    0x14000e772
   14000e70b:	add    r14d,ecx
   14000e70e:	jmp    0x14000e763
   14000e710:	movzx  eax,di
   14000e713:	movzx  ecx,al
   14000e716:	call   0x14001e2f0
   14000e71b:	test   eax,eax
   14000e71d:	je     0x14000e77c
   14000e71f:	mov    eax,r15d
   14000e722:	mov    ecx,0x1
   14000e727:	sub    r15d,ecx
   14000e72a:	test   eax,eax
   14000e72c:	je     0x14000e77c
   14000e72e:	mov    rax,QWORD PTR [rbp-0x68]
   14000e732:	add    esi,ecx
   14000e734:	lea    r9,[rbp-0x10]
   14000e738:	mov    WORD PTR [rax+rbx*2],di
   14000e73c:	add    rbx,rcx
   14000e73f:	lea    rax,[rbp-0x70]
   14000e743:	lea    r8,[rbp-0x68]
   14000e747:	lea    rdx,[rbp-0x58]
   14000e74b:	mov    rcx,rbx
   14000e74e:	mov    QWORD PTR [rsp+0x20],rax
   14000e753:	call   0x14000de70
   14000e758:	test   eax,eax
   14000e75a:	je     0x14000f163
   14000e760:	inc    r14d
   14000e763:	mov    rcx,r12
   14000e766:	call   0x14001d690
   14000e76b:	movzx  edi,ax
   14000e76e:	mov    DWORD PTR [rsp+0x40],edi
   14000e772:	mov    eax,0xff00
   14000e777:	test   ax,di
   14000e77a:	je     0x14000e710
   14000e77c:	mov    eax,0x1
   14000e781:	mov    r15d,0xffff
   14000e787:	sub    r14d,eax
   14000e78a:	mov    DWORD PTR [rsp+0x30],r14d
   14000e78f:	mov    DWORD PTR [rsp+0x48],r14d
   14000e794:	cmp    r15w,di
   14000e798:	je     0x14000e7aa
   14000e79a:	mov    rdx,r12
   14000e79d:	movzx  ecx,di
   14000e7a0:	call   0x14001d8ec
   14000e7a5:	mov    eax,0x1
   14000e7aa:	test   esi,esi
   14000e7ac:	je     0x14000f143
   14000e7b2:	cmp    BYTE PTR [rsp+0x34],r13b
   14000e7b7:	jne    0x14000e854
   14000e7bd:	mov    r13d,DWORD PTR [rsp+0x38]
   14000e7c2:	mov    r15,QWORD PTR [rbp-0x68]
   14000e7c6:	xor    r12d,r12d
   14000e7c9:	add    r13d,eax
   14000e7cc:	mov    rax,QWORD PTR [rbp-0x58]
   14000e7d0:	mov    WORD PTR [r15+rbx*2],r12w
   14000e7d5:	lea    rbx,[rax*2+0x2]
   14000e7dd:	mov    DWORD PTR [rsp+0x38],r13d
   14000e7e2:	mov    rcx,rbx
   14000e7e5:	call   0x14000fc4c
   14000e7ea:	mov    rsi,rax
   14000e7ed:	test   rax,rax
   14000e7f0:	je     0x14000f1fc
   14000e7f6:	lea    rax,[rbx-0x1]
   14000e7fa:	mov    r9,r15
   14000e7fd:	mov    r8,rbx
   14000e800:	mov    rdx,rsi
   14000e803:	xor    ecx,ecx
   14000e805:	mov    QWORD PTR [rsp+0x20],rax
   14000e80a:	call   0x14001eb40
   14000e80f:	cmp    eax,0x16
   14000e812:	je     0x14000f2a9
   14000e818:	cmp    eax,0x22
   14000e81b:	je     0x14000f2a9
   14000e821:	mov    rcx,QWORD PTR [rip+0x37bd0]        # 0x1400463f8
   14000e828:	movsx  ebx,BYTE PTR [rsp+0x35]
   14000e82d:	call   QWORD PTR [rip+0x269f5]        # 0x140035228
   14000e833:	mov    rdx,QWORD PTR [rbp-0x78]
   14000e837:	lea    r9,[rbp-0x30]
   14000e83b:	lea    ecx,[rbx-0x1]
   14000e83e:	mov    r8,rsi
   14000e841:	call   rax
   14000e843:	mov    rcx,rsi
   14000e846:	call   0x14000fb50
   14000e84b:	xor    r13d,r13d
   14000e84e:	mov    r15d,0xffff
   14000e854:	mov    rbx,QWORD PTR [rsp+0x68]
   14000e859:	mov    rsi,QWORD PTR [rsp+0x78]
   14000e85e:	mov    eax,0x1
   14000e863:	add    BYTE PTR [rsp+0x3c],al
   14000e867:	add    rbx,0x2
   14000e86b:	lea    r12d,[rax+0x24]
   14000e86f:	mov    QWORD PTR [rsp+0x68],rbx
   14000e874:	jmp    0x14000f106
   14000e879:	test   r8d,r8d
   14000e87c:	jne    0x14000e88a
   14000e87e:	add    edx,r9d
   14000e881:	mov    DWORD PTR [rsp+0x58],r9d
   14000e886:	mov    DWORD PTR [rsp+0x44],edx
   14000e88a:	test   r14b,r14b
   14000e88d:	jle    0x14000ebaa
   14000e893:	mov    r13b,r9b
   14000e896:	jmp    0x14000ebaa
   14000e89b:	cmp    esi,0x70
   14000e89e:	je     0x14000ed8c
   14000e8a4:	cmp    esi,0x73
   14000e8a7:	je     0x14000eb9f
   14000e8ad:	cmp    esi,0x75
   14000e8b0:	je     0x14000eda2
   14000e8b6:	cmp    esi,0x78
   14000e8b9:	je     0x14000e458
   14000e8bf:	cmp    esi,0x7b
   14000e8c2:	je     0x14000e8f1
   14000e8c4:	mov    r15d,0xffff
   14000e8ca:	cmp    WORD PTR [r10],di
   14000e8ce:	jne    0x14000f172
   14000e8d4:	dec    BYTE PTR [rsp+0x3c]
   14000e8d8:	mov    r14d,DWORD PTR [rsp+0x30]
   14000e8dd:	xor    r13d,r13d
   14000e8e0:	test   cl,cl
   14000e8e2:	jne    0x14000e854
   14000e8e8:	mov    QWORD PTR [rbp-0x40],r11
   14000e8ec:	jmp    0x14000e854
   14000e8f1:	test   r14b,r14b
   14000e8f4:	movzx  r13d,r13b
   14000e8f8:	mov    eax,0x5e
   14000e8fd:	cmovg  r13d,r9d
   14000e901:	add    r10,0x2
   14000e905:	mov    DWORD PTR [rbp-0x60],r13d
   14000e909:	mov    QWORD PTR [rsp+0x68],r10
   14000e90e:	cmp    ax,WORD PTR [r10]
   14000e912:	jne    0x14000e922
   14000e914:	add    r10,0x2
   14000e918:	mov    BYTE PTR [rsp+0x5c],0xff
   14000e91d:	mov    QWORD PTR [rsp+0x68],r10
   14000e922:	mov    rbx,QWORD PTR [rsp+0x70]
   14000e927:	xor    r14d,r14d
   14000e92a:	test   rbx,rbx
   14000e92d:	jne    0x14000e951
   14000e92f:	mov    ecx,0x2000
   14000e934:	call   0x14000fc4c
   14000e939:	mov    rbx,rax
   14000e93c:	mov    QWORD PTR [rsp+0x70],rax
   14000e941:	test   rax,rax
   14000e944:	je     0x14000f1d7
   14000e94a:	lea    eax,[r14+0x1]
   14000e94e:	mov    DWORD PTR [rbp-0x48],eax
   14000e951:	xor    edx,edx
   14000e953:	mov    r8d,0x2000
   14000e959:	mov    rcx,rbx
   14000e95c:	call   0x140009800
   14000e961:	mov    r10,QWORD PTR [rsp+0x68]
   14000e966:	mov    edx,0x5d
   14000e96b:	cmp    dx,WORD PTR [r10]
   14000e96f:	jne    0x14000e97e
   14000e971:	lea    eax,[rdx-0x3d]
   14000e974:	mov    r15d,edx
   14000e977:	add    r10,0x2
   14000e97b:	mov    BYTE PTR [rbx+0xb],al
   14000e97e:	movzx  eax,WORD PTR [r10]
   14000e982:	mov    r9d,0x1
   14000e988:	cmp    dx,ax
   14000e98b:	je     0x14000ea4e
   14000e991:	lea    r13d,[r9+0x2c]
   14000e995:	add    r10,0x2
   14000e999:	cmp    r13w,ax
   14000e99d:	jne    0x14000ea1b
   14000e99f:	test   r15w,r15w
   14000e9a3:	je     0x14000ea1b
   14000e9a5:	movzx  ecx,WORD PTR [r10]
   14000e9a9:	cmp    dx,cx
   14000e9ac:	je     0x14000ea1b
   14000e9ae:	add    r10,0x2
   14000e9b2:	mov    QWORD PTR [rsp+0x68],r10
   14000e9b7:	cmp    r15w,cx
   14000e9bb:	jae    0x14000e9c3
   14000e9bd:	movzx  r9d,cx
   14000e9c1:	jmp    0x14000e9cb
   14000e9c3:	movzx  r9d,r15w
   14000e9c7:	movzx  r15d,cx
   14000e9cb:	mov    r11d,0x1
   14000e9d1:	cmp    r15w,r9w
   14000e9d5:	jae    0x14000ea04
   14000e9d7:	movzx  r10d,r15w
   14000e9db:	movzx  ecx,r15w
   14000e9df:	mov    r8,r10
   14000e9e2:	mov    edx,r11d
   14000e9e5:	and    ecx,0x7
   14000e9e8:	shr    r8,0x3
   14000e9ec:	add    r15w,r11w
   14000e9f0:	shl    dl,cl
   14000e9f2:	add    r10,r11
   14000e9f5:	or     BYTE PTR [r8+rbx*1],dl
   14000e9f9:	cmp    r15w,r9w
   14000e9fd:	jb     0x14000e9db
   14000e9ff:	mov    r10,QWORD PTR [rsp+0x68]
   14000ea04:	movzx  r8d,r9w
   14000ea08:	movzx  eax,r9w
   14000ea0c:	mov    edx,r11d
   14000ea0f:	mov    r9d,0x1
   14000ea15:	movzx  r15d,r14w
   14000ea19:	jmp    0x14000ea29
   14000ea1b:	movzx  r15d,ax
   14000ea1f:	movzx  r8d,ax
   14000ea23:	mov    edx,r9d
   14000ea26:	movzx  eax,ax
   14000ea29:	and    eax,0x7
   14000ea2c:	shr    r8,0x3
   14000ea30:	mov    cl,al
   14000ea32:	shl    dl,cl
   14000ea34:	or     BYTE PTR [r8+rbx*1],dl
   14000ea38:	movzx  eax,WORD PTR [r10]
   14000ea3c:	mov    edx,0x5d
   14000ea41:	cmp    dx,ax
   14000ea44:	jne    0x14000e995
   14000ea4a:	mov    r13d,DWORD PTR [rbp-0x60]
   14000ea4e:	cmp    WORD PTR [r10],r14w
   14000ea52:	je     0x14000f1dd
   14000ea58:	mov    QWORD PTR [rsp+0x68],r10
   14000ea5d:	jmp    0x14000ebaa
   14000ea62:	mov    eax,0x2b
   14000ea67:	cmp    ax,di
   14000ea6a:	jne    0x14000ea7d
   14000ea6c:	sub    edx,r9d
   14000ea6f:	mov    DWORD PTR [rsp+0x44],edx
   14000ea73:	jne    0x14000eaf2
   14000ea75:	test   r8d,r8d
   14000ea78:	je     0x14000eaf2
   14000ea7a:	mov    bl,r9b
   14000ea7d:	mov    r15,QWORD PTR [rsp+0x78]
   14000ea82:	mov    r14d,DWORD PTR [rsp+0x30]
   14000ea87:	mov    eax,0x30
   14000ea8c:	cmp    ax,di
   14000ea8f:	jne    0x14000ee10
   14000ea95:	lea    r12d,[rax-0x2f]
   14000ea99:	mov    rcx,r15
   14000ea9c:	add    r14d,r12d
   14000ea9f:	mov    DWORD PTR [rsp+0x30],r14d
   14000eaa4:	mov    DWORD PTR [rsp+0x48],r14d
   14000eaa9:	call   0x14001d690
   14000eaae:	movzx  edi,ax
   14000eab1:	mov    ecx,0xffdf
   14000eab6:	lea    eax,[rdi-0x58]
   14000eab9:	mov    DWORD PTR [rsp+0x40],edi
   14000eabd:	test   cx,ax
   14000eac0:	je     0x14000eb54
   14000eac6:	mov    r13d,r12d
   14000eac9:	cmp    esi,0x78
   14000eacc:	je     0x14000eb1d
   14000eace:	mov    r15d,DWORD PTR [rsp+0x44]
   14000ead3:	xor    ecx,ecx
   14000ead5:	cmp    DWORD PTR [rsp+0x58],ecx
   14000ead9:	je     0x14000eae3
   14000eadb:	sub    r15d,r12d
   14000eade:	jne    0x14000eae3
   14000eae0:	add    bl,r12b
   14000eae3:	mov    r12d,DWORD PTR [rsp+0x54]
   14000eae8:	mov    esi,0x6f
   14000eaed:	jmp    0x14000ee21
   14000eaf2:	mov    r14d,DWORD PTR [rsp+0x30]
   14000eaf7:	mov    r15,QWORD PTR [rsp+0x78]
   14000eafc:	add    r14d,r9d
   14000eaff:	mov    rcx,r15
   14000eb02:	mov    DWORD PTR [rsp+0x30],r14d
   14000eb07:	mov    DWORD PTR [rsp+0x48],r14d
   14000eb0c:	call   0x14001d690
   14000eb11:	movzx  edi,ax
   14000eb14:	mov    DWORD PTR [rsp+0x40],edi
   14000eb18:	jmp    0x14000ea87
   14000eb1d:	sub    r14d,r12d
   14000eb20:	mov    eax,0xffff
   14000eb25:	mov    DWORD PTR [rsp+0x30],r14d
   14000eb2a:	mov    DWORD PTR [rsp+0x48],r14d
   14000eb2f:	cmp    ax,di
   14000eb32:	je     0x14000eb3f
   14000eb34:	mov    rdx,r15
   14000eb37:	movzx  ecx,di
   14000eb3a:	call   0x14001d8ec
   14000eb3f:	mov    r12d,DWORD PTR [rsp+0x54]
   14000eb44:	mov    eax,0x30
   14000eb49:	mov    edi,eax
   14000eb4b:	mov    DWORD PTR [rsp+0x40],eax
   14000eb4f:	jmp    0x14000ee1a
   14000eb54:	add    r14d,r12d
   14000eb57:	mov    rcx,r15
   14000eb5a:	mov    DWORD PTR [rsp+0x30],r14d
   14000eb5f:	mov    DWORD PTR [rsp+0x48],r14d
   14000eb64:	call   0x14001d690
   14000eb69:	xor    ecx,ecx
   14000eb6b:	movzx  edi,ax
   14000eb6e:	mov    DWORD PTR [rsp+0x40],edi
   14000eb72:	cmp    DWORD PTR [rsp+0x58],ecx
   14000eb76:	je     0x14000eb8b
   14000eb78:	mov    eax,DWORD PTR [rsp+0x44]
   14000eb7c:	sub    eax,0x2
   14000eb7f:	mov    DWORD PTR [rsp+0x44],eax
   14000eb83:	cmp    eax,r12d
   14000eb86:	jge    0x14000eb8b
   14000eb88:	add    bl,r12b
   14000eb8b:	mov    r12d,DWORD PTR [rsp+0x54]
   14000eb90:	mov    r13d,DWORD PTR [rsp+0x64]
   14000eb95:	mov    esi,0x78
   14000eb9a:	jmp    0x14000ee1c
   14000eb9f:	movzx  r13d,r13b
   14000eba3:	test   r14b,r14b
   14000eba6:	cmovg  r13d,r9d
   14000ebaa:	mov    r14d,DWORD PTR [rsp+0x30]
   14000ebaf:	mov    rbx,QWORD PTR [rbp-0x78]
   14000ebb3:	mov    edx,0x1
   14000ebb8:	sub    r14d,edx
   14000ebbb:	mov    eax,0xffff
   14000ebc0:	mov    DWORD PTR [rsp+0x30],r14d
   14000ebc5:	mov    DWORD PTR [rsp+0x48],r14d
   14000ebca:	cmp    ax,di
   14000ebcd:	je     0x14000ebe1
   14000ebcf:	mov    rdx,QWORD PTR [rsp+0x78]
   14000ebd4:	movzx  ecx,di
   14000ebd7:	call   0x14001d8ec
   14000ebdc:	mov    edx,0x1
   14000ebe1:	cmp    esi,0x63
   14000ebe4:	je     0x14000ebe9
   14000ebe6:	sub    r12,rdx
   14000ebe9:	mov    r15b,BYTE PTR [rsp+0x5c]
   14000ebee:	xor    r11d,r11d
   14000ebf1:	cmp    DWORD PTR [rsp+0x58],r11d
   14000ebf6:	je     0x14000ec0c
   14000ebf8:	mov    ecx,DWORD PTR [rsp+0x44]
   14000ebfc:	mov    eax,ecx
   14000ebfe:	sub    ecx,edx
   14000ec00:	mov    DWORD PTR [rsp+0x44],ecx
   14000ec04:	test   eax,eax
   14000ec06:	je     0x14000ed3f
   14000ec0c:	mov    rcx,QWORD PTR [rsp+0x78]
   14000ec11:	add    r14d,edx
   14000ec14:	mov    DWORD PTR [rsp+0x30],r14d
   14000ec19:	mov    DWORD PTR [rsp+0x48],r14d
   14000ec1e:	call   0x14001d690
   14000ec23:	movzx  edi,ax
   14000ec26:	mov    eax,0xffff
   14000ec2b:	mov    DWORD PTR [rsp+0x40],edi
   14000ec2f:	cmp    ax,di
   14000ec32:	je     0x14000ed06
   14000ec38:	cmp    esi,0x63
   14000ec3b:	je     0x14000ec85
   14000ec3d:	cmp    esi,0x73
   14000ec40:	jne    0x14000ec57
   14000ec42:	lea    eax,[rdi-0x9]
   14000ec45:	cmp    ax,0x4
   14000ec49:	jbe    0x14000ed06
   14000ec4f:	lea    eax,[rsi-0x53]
   14000ec52:	cmp    di,ax
   14000ec55:	jne    0x14000ec85
   14000ec57:	cmp    esi,0x7b
   14000ec5a:	jne    0x14000ed06
   14000ec60:	mov    rcx,QWORD PTR [rsp+0x70]
   14000ec65:	movzx  eax,di
   14000ec68:	movzx  edx,di
   14000ec6b:	shr    rax,0x3
   14000ec6f:	and    edx,0x7
   14000ec72:	movsx  ecx,BYTE PTR [rax+rcx*1]
   14000ec76:	movsx  eax,r15b
   14000ec7a:	xor    ecx,eax
   14000ec7c:	bt     ecx,edx
   14000ec7f:	jae    0x14000ed06
   14000ec85:	xor    r11d,r11d
   14000ec88:	cmp    BYTE PTR [rsp+0x34],r11b
   14000ec8d:	jne    0x14000ecf8
   14000ec8f:	test   r12,r12
   14000ec92:	je     0x14000f195
   14000ec98:	test   r13b,r13b
   14000ec9b:	je     0x14000ecb8
   14000ec9d:	mov    rcx,QWORD PTR [rbp-0x78]
   14000eca1:	lea    edx,[r11+0x1]
   14000eca5:	mov    WORD PTR [rcx],di
   14000eca8:	add    rcx,0x2
   14000ecac:	sub    r12,rdx
   14000ecaf:	mov    QWORD PTR [rbp-0x78],rcx
   14000ecb3:	jmp    0x14000ebf1
   14000ecb8:	mov    rdx,QWORD PTR [rbp-0x78]
   14000ecbc:	lea    rcx,[rbp-0x60]
   14000ecc0:	movzx  r9d,di
   14000ecc4:	mov    r8,r12
   14000ecc7:	mov    DWORD PTR [rbp-0x60],r11d
   14000eccb:	call   0x14001d67c
   14000ecd0:	cmp    eax,0x22
   14000ecd3:	je     0x14000f195
   14000ecd9:	movsxd rax,DWORD PTR [rbp-0x60]
   14000ecdd:	xor    r11d,r11d
   14000ece0:	lea    edx,[r11+0x1]
   14000ece4:	test   eax,eax
   14000ece6:	jle    0x14000ebf1
   14000ecec:	add    QWORD PTR [rbp-0x78],rax
   14000ecf0:	sub    r12,rax
   14000ecf3:	jmp    0x14000ebf1
   14000ecf8:	add    rbx,0x2
   14000ecfc:	mov    edx,0x1
   14000ed01:	jmp    0x14000ebf1
   14000ed06:	mov    edx,0x1
   14000ed0b:	mov    r15d,0xffff
   14000ed11:	sub    r14d,edx
   14000ed14:	mov    DWORD PTR [rsp+0x30],r14d
   14000ed19:	mov    DWORD PTR [rsp+0x48],r14d
   14000ed1e:	cmp    r15w,di
   14000ed22:	je     0x14000ed3a
   14000ed24:	mov    rdx,QWORD PTR [rsp+0x78]
   14000ed29:	movzx  ecx,di
   14000ed2c:	call   0x14001d8ec
   14000ed31:	xor    r11d,r11d
   14000ed34:	lea    edx,[r11+0x1]
   14000ed38:	jmp    0x14000ed45
   14000ed3a:	xor    r11d,r11d
   14000ed3d:	jmp    0x14000ed45
   14000ed3f:	mov    r15d,0xffff
   14000ed45:	mov    rax,QWORD PTR [rbp-0x78]
   14000ed49:	cmp    rbx,rax
   14000ed4c:	je     0x14000f143
   14000ed52:	cmp    BYTE PTR [rsp+0x34],r11b
   14000ed57:	jne    0x14000f0b1
   14000ed5d:	add    DWORD PTR [rsp+0x38],edx
   14000ed61:	cmp    esi,0x63
   14000ed64:	je     0x14000e84b
   14000ed6a:	mov    r15d,0xffff
   14000ed70:	test   r13b,r13b
   14000ed73:	je     0x14000ed81
   14000ed75:	xor    r13d,r13d
   14000ed78:	mov    WORD PTR [rax],r13w
   14000ed7c:	jmp    0x14000e854
   14000ed81:	xor    r13d,r13d
   14000ed84:	mov    BYTE PTR [rax],r13b
   14000ed87:	jmp    0x14000e854
   14000ed8c:	mov    r12d,DWORD PTR [rsp+0x54]
   14000ed91:	mov    BYTE PTR [rsp+0x35],r9b
   14000ed96:	add    r12d,r9d
   14000ed99:	xor    r14d,r14d
   14000ed9c:	mov    QWORD PTR [rbp-0x80],r14
   14000eda0:	jmp    0x14000eda7
   14000eda2:	mov    r12d,DWORD PTR [rsp+0x54]
   14000eda7:	mov    eax,0x2d
   14000edac:	cmp    ax,di
   14000edaf:	jne    0x14000edb8
   14000edb1:	mov    BYTE PTR [rsp+0x4c],r9b
   14000edb6:	jmp    0x14000edc2
   14000edb8:	mov    eax,0x2b
   14000edbd:	cmp    ax,di
   14000edc0:	jne    0x14000ee15
   14000edc2:	sub    edx,r9d
   14000edc5:	mov    DWORD PTR [rsp+0x44],edx
   14000edc9:	jne    0x14000eddf
   14000edcb:	test   r8d,r8d
   14000edce:	je     0x14000eddf
   14000edd0:	mov    r13d,DWORD PTR [rsp+0x64]
   14000edd5:	mov    bl,r9b
   14000edd8:	mov    r15d,edx
   14000eddb:	xor    ecx,ecx
   14000eddd:	jmp    0x14000ee21
   14000eddf:	mov    r14d,DWORD PTR [rsp+0x30]
   14000ede4:	mov    rcx,QWORD PTR [rsp+0x78]
   14000ede9:	add    r14d,r9d
   14000edec:	mov    DWORD PTR [rsp+0x30],r14d
   14000edf1:	mov    DWORD PTR [rsp+0x48],r14d
   14000edf6:	call   0x14001d690
   14000edfb:	mov    r15d,DWORD PTR [rsp+0x44]
   14000ee00:	mov    r13d,DWORD PTR [rsp+0x64]
   14000ee05:	movzx  edi,ax
   14000ee08:	mov    DWORD PTR [rsp+0x40],edi
   14000ee0c:	xor    ecx,ecx
   14000ee0e:	jmp    0x14000ee26
   14000ee10:	mov    r12d,DWORD PTR [rsp+0x54]
   14000ee15:	mov    r13d,DWORD PTR [rsp+0x64]
   14000ee1a:	xor    ecx,ecx
   14000ee1c:	mov    r15d,DWORD PTR [rsp+0x44]
   14000ee21:	mov    r14d,DWORD PTR [rsp+0x30]
   14000ee26:	test   r12d,r12d
   14000ee29:	je     0x14000ef4d
   14000ee2f:	test   bl,bl
   14000ee31:	mov    rbx,QWORD PTR [rbp-0x80]
   14000ee35:	jne    0x14000ef33
   14000ee3b:	lea    eax,[rsi-0x70]
   14000ee3e:	test   eax,0xfffffff7
   14000ee43:	mov    eax,0xff00
   14000ee48:	je     0x14000ee88
   14000ee4a:	test   ax,di
   14000ee4d:	jne    0x14000ef0b
   14000ee53:	movzx  eax,di
   14000ee56:	movzx  ecx,al
   14000ee59:	call   0x14001e2f0
   14000ee5e:	xor    ecx,ecx
   14000ee60:	test   eax,eax
   14000ee62:	je     0x14000ef0b
   14000ee68:	cmp    esi,0x6f
   14000ee6b:	jne    0x14000ee7f
   14000ee6d:	lea    eax,[rcx+0x38]
   14000ee70:	cmp    ax,di
   14000ee73:	jbe    0x14000ef0b
   14000ee79:	shl    rbx,0x3
   14000ee7d:	jmp    0x14000eec4
   14000ee7f:	lea    rbx,[rbx+rbx*4]
   14000ee83:	add    rbx,rbx
   14000ee86:	jmp    0x14000eec4
   14000ee88:	test   ax,di
   14000ee8b:	jne    0x14000ef0b
   14000ee8d:	movzx  eax,di
   14000ee90:	movzx  ebx,al
   14000ee93:	mov    ecx,ebx
   14000ee95:	call   0x14001e65c
   14000ee9a:	xor    ecx,ecx
   14000ee9c:	test   eax,eax
   14000ee9e:	je     0x14000ef0b
   14000eea0:	shl    QWORD PTR [rbp-0x80],0x4
   14000eea5:	mov    ecx,ebx
   14000eea7:	call   0x14001e2f0
   14000eeac:	mov    rbx,QWORD PTR [rbp-0x80]
   14000eeb0:	test   eax,eax
   14000eeb2:	jne    0x14000eec4
   14000eeb4:	mov    eax,0xffdf
   14000eeb9:	and    di,ax
   14000eebc:	sub    di,0x7
   14000eec0:	mov    DWORD PTR [rsp+0x40],edi
   14000eec4:	movzx  eax,di
   14000eec7:	mov    ecx,0x1
   14000eecc:	sub    eax,0x30
   14000eecf:	add    r13d,ecx
   14000eed2:	cdqe   
   14000eed4:	add    rbx,rax
   14000eed7:	xor    eax,eax
   14000eed9:	mov    QWORD PTR [rbp-0x80],rbx
   14000eedd:	cmp    DWORD PTR [rsp+0x58],eax
   14000eee1:	je     0x14000eee8
   14000eee3:	sub    r15d,ecx
   14000eee6:	je     0x14000ef33
   14000eee8:	add    r14d,ecx
   14000eeeb:	mov    rcx,QWORD PTR [rsp+0x78]
   14000eef0:	mov    DWORD PTR [rsp+0x30],r14d
   14000eef5:	mov    DWORD PTR [rsp+0x48],r14d
   14000eefa:	call   0x14001d690
   14000eeff:	movzx  edi,ax
   14000ef02:	mov    DWORD PTR [rsp+0x40],edi
   14000ef06:	jmp    0x14000ee3b
   14000ef0b:	dec    r14d
   14000ef0e:	mov    eax,0xffff
   14000ef13:	mov    DWORD PTR [rsp+0x30],r14d
   14000ef18:	mov    DWORD PTR [rsp+0x48],r14d
   14000ef1d:	cmp    ax,di
   14000ef20:	je     0x14000ef2f
   14000ef22:	mov    rdx,QWORD PTR [rsp+0x78]
   14000ef27:	movzx  ecx,di
   14000ef2a:	call   0x14001d8ec
   14000ef2f:	mov    rbx,QWORD PTR [rbp-0x80]
   14000ef33:	xor    r11d,r11d
   14000ef36:	cmp    BYTE PTR [rsp+0x4c],r11b
   14000ef3b:	je     0x14000f066
   14000ef41:	neg    rbx
   14000ef44:	mov    QWORD PTR [rbp-0x80],rbx
   14000ef48:	jmp    0x14000f066
   14000ef4d:	test   bl,bl
   14000ef4f:	mov    ebx,DWORD PTR [rsp+0x60]
   14000ef53:	jne    0x14000f056
   14000ef59:	lea    eax,[rsi-0x70]
   14000ef5c:	test   eax,0xfffffff7
   14000ef61:	mov    eax,0xff00
   14000ef66:	je     0x14000efa4
   14000ef68:	test   ax,di
   14000ef6b:	jne    0x14000f02e
   14000ef71:	movzx  eax,di
   14000ef74:	movzx  ecx,al
   14000ef77:	call   0x14001e2f0
   14000ef7c:	xor    ecx,ecx
   14000ef7e:	test   eax,eax
   14000ef80:	je     0x14000f02e
   14000ef86:	cmp    esi,0x6f
   14000ef89:	jne    0x14000ef9c
   14000ef8b:	lea    eax,[rcx+0x38]
   14000ef8e:	cmp    ax,di
   14000ef91:	jbe    0x14000f02e
   14000ef97:	shl    ebx,0x3
   14000ef9a:	jmp    0x14000efea
   14000ef9c:	lea    eax,[rbx+rbx*4]
   14000ef9f:	lea    ebx,[rax+rax*1]
   14000efa2:	jmp    0x14000efea
   14000efa4:	test   ax,di
   14000efa7:	jne    0x14000f02e
   14000efad:	movzx  eax,di
   14000efb0:	movzx  ebx,al
   14000efb3:	mov    ecx,ebx
   14000efb5:	call   0x14001e65c
   14000efba:	xor    ecx,ecx
   14000efbc:	test   eax,eax
   14000efbe:	je     0x14000f02e
   14000efc0:	mov    eax,DWORD PTR [rsp+0x60]
   14000efc4:	mov    ecx,ebx
   14000efc6:	shl    eax,0x4
   14000efc9:	mov    DWORD PTR [rsp+0x60],eax
   14000efcd:	call   0x14001e2f0
   14000efd2:	mov    ebx,DWORD PTR [rsp+0x60]
   14000efd6:	test   eax,eax
   14000efd8:	jne    0x14000efea
   14000efda:	mov    eax,0xffdf
   14000efdf:	and    di,ax
   14000efe2:	sub    di,0x7
   14000efe6:	mov    DWORD PTR [rsp+0x40],edi
   14000efea:	movzx  eax,di
   14000efed:	add    ebx,0xffffffd0
   14000eff0:	mov    ecx,0x1
   14000eff5:	add    ebx,eax
   14000eff7:	xor    eax,eax
   14000eff9:	add    r13d,ecx
   14000effc:	mov    DWORD PTR [rsp+0x60],ebx
   14000f000:	cmp    DWORD PTR [rsp+0x58],eax
   14000f004:	je     0x14000f00b
   14000f006:	sub    r15d,ecx
   14000f009:	je     0x14000f056
   14000f00b:	add    r14d,ecx
   14000f00e:	mov    rcx,QWORD PTR [rsp+0x78]
   14000f013:	mov    DWORD PTR [rsp+0x30],r14d
   14000f018:	mov    DWORD PTR [rsp+0x48],r14d
   14000f01d:	call   0x14001d690
   14000f022:	movzx  edi,ax
   14000f025:	mov    DWORD PTR [rsp+0x40],edi
   14000f029:	jmp    0x14000ef59
   14000f02e:	dec    r14d
   14000f031:	mov    eax,0xffff
   14000f036:	mov    DWORD PTR [rsp+0x30],r14d
   14000f03b:	mov    DWORD PTR [rsp+0x48],r14d
   14000f040:	cmp    ax,di
   14000f043:	je     0x14000f052
   14000f045:	mov    rdx,QWORD PTR [rsp+0x78]
   14000f04a:	movzx  ecx,di
   14000f04d:	call   0x14001d8ec
   14000f052:	mov    ebx,DWORD PTR [rsp+0x60]
   14000f056:	xor    r11d,r11d
   14000f059:	cmp    BYTE PTR [rsp+0x4c],r11b
   14000f05e:	je     0x14000f066
   14000f060:	neg    ebx
   14000f062:	mov    DWORD PTR [rsp+0x60],ebx
   14000f066:	cmp    esi,0x46
   14000f069:	cmove  r13d,r11d
   14000f06d:	test   r13d,r13d
   14000f070:	je     0x14000f163
   14000f076:	xor    r13d,r13d
   14000f079:	cmp    BYTE PTR [rsp+0x34],r13b
   14000f07e:	jne    0x14000e84e
   14000f084:	inc    DWORD PTR [rsp+0x38]
   14000f088:	mov    eax,DWORD PTR [rsp+0x60]
   14000f08c:	jmp    0x14000e43a
   14000f091:	mov    rcx,QWORD PTR [rbp-0x78]
   14000f095:	mov    r15d,0xffff
   14000f09b:	cmp    BYTE PTR [rsp+0x35],r13b
   14000f0a0:	je     0x14000f0a9
   14000f0a2:	mov    DWORD PTR [rcx],eax
   14000f0a4:	jmp    0x14000e854
   14000f0a9:	mov    WORD PTR [rcx],ax
   14000f0ac:	jmp    0x14000e854
   14000f0b1:	xor    r13d,r13d
   14000f0b4:	jmp    0x14000e854
   14000f0b9:	cmp    r12w,WORD PTR [r10]
   14000f0bd:	jne    0x14000f0d0
   14000f0bf:	lea    rax,[r10+0x2]
   14000f0c3:	cmp    r12w,WORD PTR [rax]
   14000f0c7:	cmove  r10,rax
   14000f0cb:	mov    QWORD PTR [rsp+0x68],r10
   14000f0d0:	inc    r14d
   14000f0d3:	mov    rcx,rsi
   14000f0d6:	mov    DWORD PTR [rsp+0x30],r14d
   14000f0db:	mov    DWORD PTR [rsp+0x48],r14d
   14000f0e0:	call   0x14001d690
   14000f0e5:	mov    rbx,QWORD PTR [rsp+0x68]
   14000f0ea:	movzx  edi,ax
   14000f0ed:	movzx  eax,WORD PTR [rbx]
   14000f0f0:	add    rbx,0x2
   14000f0f4:	mov    DWORD PTR [rsp+0x40],edi
   14000f0f8:	mov    QWORD PTR [rsp+0x68],rbx
   14000f0fd:	cmp    ax,di
   14000f100:	jne    0x14000f1c5
   14000f106:	cmp    r15w,di
   14000f10a:	jne    0x14000f11d
   14000f10c:	cmp    WORD PTR [rbx],r12w
   14000f110:	jne    0x14000f143
   14000f112:	mov    eax,0x6e
   14000f117:	cmp    WORD PTR [rbx+0x2],ax
   14000f11b:	jne    0x14000f143
   14000f11d:	movzx  eax,WORD PTR [rbx]
   14000f120:	test   ax,ax
   14000f123:	je     0x14000f143
   14000f125:	jmp    0x14000e097
   14000f12a:	mov    r15d,0xffff
   14000f130:	cmp    r15w,di
   14000f134:	je     0x14000f143
   14000f136:	mov    rdx,QWORD PTR [rsp+0x78]
   14000f13b:	movzx  ecx,di
   14000f13e:	call   0x14001d8ec
   14000f143:	mov    r13d,DWORD PTR [rsp+0x38]
   14000f148:	mov    r12d,DWORD PTR [rsp+0x50]
   14000f14d:	jmp    0x14000f202
   14000f152:	xor    r14d,r14d
   14000f155:	mov    BYTE PTR [rax],r14b
   14000f158:	call   0x14000b9f0
   14000f15d:	mov    DWORD PTR [rax],0xc
   14000f163:	mov    r13d,DWORD PTR [rsp+0x38]
   14000f168:	mov    r12d,DWORD PTR [rsp+0x50]
   14000f16d:	jmp    0x14000f1fc
   14000f172:	cmp    r15w,di
   14000f176:	je     0x14000f185
   14000f178:	mov    rdx,QWORD PTR [rsp+0x78]
   14000f17d:	movzx  ecx,di
   14000f180:	call   0x14001d8ec
   14000f185:	mov    r13d,DWORD PTR [rsp+0x38]
   14000f18a:	mov    r12d,0x1
   14000f190:	mov    r9d,r12d
   14000f193:	jmp    0x14000f208
   14000f195:	call   0x14000b9f0
   14000f19a:	xor    r11d,r11d
   14000f19d:	test   r13b,r13b
   14000f1a0:	mov    r13d,DWORD PTR [rsp+0x38]
   14000f1a5:	mov    r15d,0xffff
   14000f1ab:	mov    DWORD PTR [rax],0xc
   14000f1b1:	mov    r12d,r11d
   14000f1b4:	lea    r9d,[r11+0x1]
   14000f1b8:	je     0x14000f1c0
   14000f1ba:	mov    WORD PTR [rbx],r11w
   14000f1be:	jmp    0x14000f208
   14000f1c0:	mov    BYTE PTR [rbx],r11b
   14000f1c3:	jmp    0x14000f208
   14000f1c5:	cmp    r15w,di
   14000f1c9:	je     0x14000f143
   14000f1cf:	mov    rdx,rsi
   14000f1d2:	jmp    0x14000f13b
   14000f1d7:	mov    r9d,0x1
   14000f1dd:	mov    r13d,DWORD PTR [rsp+0x38]
   14000f1e2:	mov    r12d,r14d
   14000f1e5:	mov    r15d,0xffff
   14000f1eb:	jmp    0x14000f20d
   14000f1ed:	mov    r13d,DWORD PTR [rsp+0x38]
   14000f1f2:	mov    r12d,DWORD PTR [rsp+0x50]
   14000f1f7:	mov    r15d,eax
   14000f1fa:	jmp    0x14000f202
   14000f1fc:	mov    r15d,0xffff
   14000f202:	mov    r9d,0x1
   14000f208:	mov    rbx,QWORD PTR [rsp+0x70]
   14000f20d:	cmp    DWORD PTR [rbp-0x48],r9d
   14000f211:	jne    0x14000f21b
   14000f213:	mov    rcx,rbx
   14000f216:	call   0x14000fb50
   14000f21b:	mov    eax,0x1
   14000f220:	cmp    DWORD PTR [rbp-0x70],eax
   14000f223:	jne    0x14000f233
   14000f225:	mov    rcx,QWORD PTR [rbp-0x68]
   14000f229:	call   0x14000fb50
   14000f22e:	mov    eax,0x1
   14000f233:	cmp    r15w,di
   14000f237:	jne    0x14000f24b
   14000f239:	test   r13d,r13d
   14000f23c:	jne    0x14000f260
   14000f23e:	mov    al,BYTE PTR [rsp+0x3c]
   14000f242:	test   al,al
   14000f244:	jne    0x14000f260
   14000f246:	or     eax,0xffffffff
   14000f249:	jmp    0x14000f26d
   14000f24b:	cmp    r12d,eax
   14000f24e:	jne    0x14000f265
   14000f250:	call   0x14000b9f0
   14000f255:	mov    DWORD PTR [rax],0x16
   14000f25b:	call   0x14000b8b8
   14000f260:	mov    eax,r13d
   14000f263:	jmp    0x14000f26d
   14000f265:	mov    r15d,DWORD PTR [rsp+0x38]
   14000f26a:	mov    eax,r15d
   14000f26d:	xor    ecx,ecx
   14000f26f:	cmp    BYTE PTR [rbp-0x18],cl
   14000f272:	je     0x14000f27f
   14000f274:	mov    rcx,QWORD PTR [rbp-0x20]
   14000f278:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000f27f:	mov    rcx,QWORD PTR [rbp+0x2b0]
   14000f286:	xor    rcx,rsp
   14000f289:	call   0x1400097d0
   14000f28e:	mov    rbx,QWORD PTR [rsp+0x410]
   14000f296:	add    rsp,0x3c0
   14000f29d:	pop    r15
   14000f29f:	pop    r14
   14000f2a1:	pop    r13
   14000f2a3:	pop    r12
   14000f2a5:	pop    rdi
   14000f2a6:	pop    rsi
   14000f2a7:	pop    rbp
   14000f2a8:	ret    
   14000f2a9:	xor    r9d,r9d
   14000f2ac:	xor    r8d,r8d
   14000f2af:	xor    edx,edx
   14000f2b1:	xor    ecx,ecx
   14000f2b3:	mov    QWORD PTR [rsp+0x20],r12
   14000f2b8:	call   0x14000b908
   14000f2bd:	int3   
   14000f2be:	int3   
   14000f2bf:	int3   
   14000f2c0:	mov    eax,DWORD PTR [rip+0x364fa]        # 0x1400457c0
   14000f2c6:	mov    r8d,edx
   14000f2c9:	and    ecx,edx
   14000f2cb:	not    r8d
   14000f2ce:	and    r8d,eax
   14000f2d1:	or     r8d,ecx
   14000f2d4:	mov    DWORD PTR [rip+0x364e5],r8d        # 0x1400457c0
   14000f2db:	ret    
   14000f2dc:	sub    rsp,0x28
   14000f2e0:	call   0x14001a530
   14000f2e5:	test   rax,rax
   14000f2e8:	je     0x14000f2f4
   14000f2ea:	mov    ecx,0x16
   14000f2ef:	call   0x14001a608
   14000f2f4:	test   BYTE PTR [rip+0x364c5],0x2        # 0x1400457c0
   14000f2fb:	je     0x14000f326
   14000f2fd:	mov    ecx,0x17
   14000f302:	call   0x140033b0e
   14000f307:	test   eax,eax
   14000f309:	je     0x14000f312
   14000f30b:	mov    ecx,0x7
   14000f310:	int    0x29
   14000f312:	mov    r8d,0x1
   14000f318:	mov    edx,0x40000015
   14000f31d:	lea    ecx,[r8+0x2]
   14000f321:	call   0x14000b744
   14000f326:	mov    ecx,0x3
   14000f32b:	call   0x14000a06c
   14000f330:	int3   
   14000f331:	int3   
   14000f332:	int3   
   14000f333:	int3   
   14000f334:	rex push rbx
   14000f336:	push   rbp
   14000f337:	push   rsi
   14000f338:	push   rdi
   14000f339:	push   r12
   14000f33b:	push   r14
   14000f33d:	push   r15
   14000f33f:	sub    rsp,0xd0
   14000f346:	mov    rax,QWORD PTR [rip+0x35f23]        # 0x140045270
   14000f34d:	xor    rax,rsp
   14000f350:	mov    QWORD PTR [rsp+0xc0],rax
   14000f358:	mov    rbx,QWORD PTR [rsp+0x130]
   14000f360:	mov    esi,r9d
   14000f363:	mov    rbp,r8
   14000f366:	mov    r12,rcx
   14000f369:	cmp    edx,0x1
   14000f36c:	jne    0x14000f470
   14000f372:	lea    r9,[rsp+0x40]
   14000f377:	mov    r8d,esi
   14000f37a:	mov    rdx,rbp
   14000f37d:	lea    rdi,[rsp+0x40]
   14000f382:	xor    r14d,r14d
   14000f385:	mov    DWORD PTR [rsp+0x20],0x80
   14000f38d:	call   0x14001ecec
   14000f392:	mov    r15d,eax
   14000f395:	test   eax,eax
   14000f397:	jne    0x14000f3f8
   14000f399:	call   QWORD PTR [rip+0x25e49]        # 0x1400351e8
   14000f39f:	cmp    eax,0x7a
   14000f3a2:	jne    0x14000f420
   14000f3a4:	and    DWORD PTR [rsp+0x20],r14d
   14000f3a9:	xor    r9d,r9d
   14000f3ac:	mov    r8d,esi
   14000f3af:	mov    rdx,rbp
   14000f3b2:	mov    rcx,r12
   14000f3b5:	call   0x14001ecec
   14000f3ba:	movsxd r15,eax
   14000f3bd:	test   eax,eax
   14000f3bf:	je     0x14000f420
   14000f3c1:	lea    edx,[r14+0x1]
   14000f3c5:	mov    rcx,r15
   14000f3c8:	call   0x14000fbcc
   14000f3cd:	mov    rdi,rax
   14000f3d0:	test   rax,rax
   14000f3d3:	je     0x14000f420
   14000f3d5:	mov    r9,rax
   14000f3d8:	mov    r8d,esi
   14000f3db:	mov    rdx,rbp
   14000f3de:	mov    rcx,r12
   14000f3e1:	mov    r14d,0x1
   14000f3e7:	mov    DWORD PTR [rsp+0x20],r15d
   14000f3ec:	call   0x14001ecec
   14000f3f1:	mov    r15d,eax
   14000f3f4:	test   eax,eax
   14000f3f6:	je     0x14000f418
   14000f3f8:	movsxd rsi,r15d
   14000f3fb:	mov    edx,0x1
   14000f400:	mov    rcx,rsi
   14000f403:	call   0x14000fbcc
   14000f408:	mov    rcx,rax
   14000f40b:	mov    QWORD PTR [rbx],rax
   14000f40e:	test   rax,rax
   14000f411:	jne    0x14000f445
   14000f413:	test   r14d,r14d
   14000f416:	je     0x14000f420
   14000f418:	mov    rcx,rdi
   14000f41b:	call   0x14000fb50
   14000f420:	or     eax,0xffffffff
   14000f423:	mov    rcx,QWORD PTR [rsp+0xc0]
   14000f42b:	xor    rcx,rsp
   14000f42e:	call   0x1400097d0
   14000f433:	add    rsp,0xd0
   14000f43a:	pop    r15
   14000f43c:	pop    r14
   14000f43e:	pop    r12
   14000f440:	pop    rdi
   14000f441:	pop    rsi
   14000f442:	pop    rbp
   14000f443:	pop    rbx
   14000f444:	ret    
   14000f445:	lea    eax,[r15-0x1]
   14000f449:	mov    r8,rdi
   14000f44c:	mov    rdx,rsi
   14000f44f:	movsxd r9,eax
   14000f452:	call   0x14001bb18
   14000f457:	test   eax,eax
   14000f459:	jne    0x14000f503
   14000f45f:	test   r14d,r14d
   14000f462:	je     0x14000f46c
   14000f464:	mov    rcx,rdi
   14000f467:	call   0x14000fb50
   14000f46c:	xor    eax,eax
   14000f46e:	jmp    0x14000f423
   14000f470:	mov    r14d,0x2
   14000f476:	cmp    edx,r14d
   14000f479:	jne    0x14000f4ce
   14000f47b:	and    QWORD PTR [rbx],0x0
   14000f47f:	xor    r9d,r9d
   14000f482:	xor    r8d,r8d
   14000f485:	mov    edx,esi
   14000f487:	mov    rcx,rbp
   14000f48a:	call   0x14001f084
   14000f48f:	movsxd rdi,eax
   14000f492:	test   eax,eax
   14000f494:	je     0x14000f4bd
   14000f496:	mov    rcx,rdi
   14000f499:	mov    edx,r14d
   14000f49c:	call   0x14000fbcc
   14000f4a1:	mov    QWORD PTR [rbx],rax
   14000f4a4:	test   rax,rax
   14000f4a7:	je     0x14000f4bd
   14000f4a9:	mov    r9d,edi
   14000f4ac:	mov    r8,rax
   14000f4af:	mov    edx,esi
   14000f4b1:	mov    rcx,rbp
   14000f4b4:	call   0x14001f084
   14000f4b9:	test   eax,eax
   14000f4bb:	jne    0x14000f46c
   14000f4bd:	mov    rcx,QWORD PTR [rbx]
   14000f4c0:	call   0x14000fb50
   14000f4c5:	and    QWORD PTR [rbx],0x0
   14000f4c9:	jmp    0x14000f420
   14000f4ce:	test   edx,edx
   14000f4d0:	jne    0x14000f420
   14000f4d6:	and    DWORD PTR [rsp+0x30],edx
   14000f4da:	bts    esi,0x1d
   14000f4de:	lea    r8,[rsp+0x30]
   14000f4e3:	mov    edx,esi
   14000f4e5:	mov    r9d,r14d
   14000f4e8:	mov    rcx,rbp
   14000f4eb:	call   0x14001f084
   14000f4f0:	test   eax,eax
   14000f4f2:	je     0x14000f420
   14000f4f8:	mov    al,BYTE PTR [rsp+0x30]
   14000f4fc:	mov    BYTE PTR [rbx],al
   14000f4fe:	jmp    0x14000f46c
   14000f503:	and    QWORD PTR [rsp+0x20],0x0
   14000f509:	xor    r9d,r9d
   14000f50c:	xor    r8d,r8d
   14000f50f:	xor    edx,edx
   14000f511:	xor    ecx,ecx
   14000f513:	call   0x14000b908
   14000f518:	int3   
   14000f519:	int3   
   14000f51a:	int3   
   14000f51b:	int3   
   14000f51c:	mov    QWORD PTR [rip+0x38495],rcx        # 0x1400479b8
   14000f523:	ret    
   14000f524:	test   ecx,ecx
   14000f526:	jne    0x14000f529
   14000f528:	ret    
   14000f529:	push   rbx
   14000f52a:	sub    rsp,0x30
   14000f52e:	mov    rax,QWORD PTR [rsp+0x68]
   14000f533:	mov    r10,r9
   14000f536:	mov    r9d,DWORD PTR [rsp+0x60]
   14000f53b:	mov    r11,r8
   14000f53e:	mov    rbx,rdx
   14000f541:	mov    r8,r10
   14000f544:	mov    rdx,r11
   14000f547:	mov    rcx,rbx
   14000f54a:	mov    QWORD PTR [rsp+0x20],rax
   14000f54f:	call   0x14000b908
   14000f554:	int3   
   14000f555:	int3   
   14000f556:	int3   
   14000f557:	int3   
   14000f558:	rex push rbx
   14000f55a:	sub    rsp,0x20
   14000f55e:	mov    rbx,rcx
   14000f561:	mov    rcx,QWORD PTR [rip+0x392d0]        # 0x140048838
   14000f568:	test   rcx,rcx
   14000f56b:	jne    0x14000f58d
   14000f56d:	call   0x14001a12c
   14000f572:	mov    ecx,0x1e
   14000f577:	call   0x14001a1a0
   14000f57c:	mov    ecx,0xff
   14000f581:	call   0x140009e2c
   14000f586:	mov    rcx,QWORD PTR [rip+0x392ab]        # 0x140048838
   14000f58d:	test   rbx,rbx
   14000f590:	mov    r8d,0x1
   14000f596:	cmovne r8,rbx
   14000f59a:	xor    edx,edx
   14000f59c:	add    rsp,0x20
   14000f5a0:	pop    rbx
   14000f5a1:	rex.W jmp QWORD PTR [rip+0x25cd8]        # 0x140035280
   14000f5a8:	mov    QWORD PTR [rsp+0x8],rbx
   14000f5ad:	mov    QWORD PTR [rsp+0x10],rsi
   14000f5b2:	push   rdi
   14000f5b3:	sub    rsp,0x20
   14000f5b7:	mov    rbx,rcx
   14000f5ba:	cmp    rcx,0xffffffffffffffe0
   14000f5be:	ja     0x14000f63c
   14000f5c0:	mov    edi,0x1
   14000f5c5:	test   rcx,rcx
   14000f5c8:	cmovne rdi,rcx
   14000f5cc:	mov    rcx,QWORD PTR [rip+0x39265]        # 0x140048838
   14000f5d3:	test   rcx,rcx
   14000f5d6:	jne    0x14000f5f8
   14000f5d8:	call   0x14001a12c
   14000f5dd:	mov    ecx,0x1e
   14000f5e2:	call   0x14001a1a0
   14000f5e7:	mov    ecx,0xff
   14000f5ec:	call   0x140009e2c
   14000f5f1:	mov    rcx,QWORD PTR [rip+0x39240]        # 0x140048838
   14000f5f8:	mov    r8,rdi
   14000f5fb:	xor    edx,edx
   14000f5fd:	call   QWORD PTR [rip+0x25c7d]        # 0x140035280
   14000f603:	mov    rsi,rax
   14000f606:	test   rax,rax
   14000f609:	jne    0x14000f637
   14000f60b:	cmp    DWORD PTR [rip+0x39647],eax        # 0x140048c58
   14000f611:	je     0x14000f621
   14000f613:	mov    rcx,rbx
   14000f616:	call   0x14000fa4c
   14000f61b:	test   eax,eax
   14000f61d:	je     0x14000f62c
   14000f61f:	jmp    0x14000f5cc
   14000f621:	call   0x14000b9f0
   14000f626:	mov    DWORD PTR [rax],0xc
   14000f62c:	call   0x14000b9f0
   14000f631:	mov    DWORD PTR [rax],0xc
   14000f637:	mov    rax,rsi
   14000f63a:	jmp    0x14000f64e
   14000f63c:	call   0x14000fa4c
   14000f641:	call   0x14000b9f0
   14000f646:	mov    DWORD PTR [rax],0xc
   14000f64c:	xor    eax,eax
   14000f64e:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f653:	mov    rsi,QWORD PTR [rsp+0x38]
   14000f658:	add    rsp,0x20
   14000f65c:	pop    rdi
   14000f65d:	ret    
   14000f65e:	int3   
   14000f65f:	int3   
   14000f660:	rex push rbx
   14000f662:	sub    rsp,0x20
   14000f666:	mov    rbx,rcx
   14000f669:	call   0x14000f794
   14000f66e:	lea    rax,[rip+0x28b93]        # 0x140038208
   14000f675:	mov    QWORD PTR [rbx],rax
   14000f678:	mov    rax,rbx
   14000f67b:	add    rsp,0x20
   14000f67f:	pop    rbx
   14000f680:	ret    
   14000f681:	int3   
   14000f682:	int3   
   14000f683:	int3   
   14000f684:	rex push rbx
   14000f686:	sub    rsp,0x20
   14000f68a:	mov    rbx,rcx
   14000f68d:	call   0x14000f71c
   14000f692:	lea    rax,[rip+0x28b6f]        # 0x140038208
   14000f699:	mov    QWORD PTR [rbx],rax
   14000f69c:	mov    rax,rbx
   14000f69f:	add    rsp,0x20
   14000f6a3:	pop    rbx
   14000f6a4:	ret    
   14000f6a5:	int3   
   14000f6a6:	int3   
   14000f6a7:	int3   
   14000f6a8:	rex push rbx
   14000f6aa:	sub    rsp,0x20
   14000f6ae:	mov    rbx,rcx
   14000f6b1:	call   0x14000f794
   14000f6b6:	lea    rax,[rip+0x28b1b]        # 0x1400381d8
   14000f6bd:	mov    QWORD PTR [rbx],rax
   14000f6c0:	mov    rax,rbx
   14000f6c3:	add    rsp,0x20
   14000f6c7:	pop    rbx
   14000f6c8:	ret    
   14000f6c9:	int3   
   14000f6ca:	int3   
   14000f6cb:	int3   
   14000f6cc:	mov    QWORD PTR [rsp+0x10],rdx
   14000f6d1:	push   rbx
   14000f6d2:	sub    rsp,0x20
   14000f6d6:	lea    rdx,[rsp+0x38]
   14000f6db:	mov    rbx,rcx
   14000f6de:	call   0x14000f748
   14000f6e3:	lea    rax,[rip+0x28aee]        # 0x1400381d8
   14000f6ea:	mov    QWORD PTR [rbx],rax
   14000f6ed:	mov    rax,rbx
   14000f6f0:	add    rsp,0x20
   14000f6f4:	pop    rbx
   14000f6f5:	ret    
   14000f6f6:	int3   
   14000f6f7:	int3   
   14000f6f8:	rex push rbx
   14000f6fa:	sub    rsp,0x20
   14000f6fe:	mov    rbx,rcx
   14000f701:	call   0x14000f794
   14000f706:	lea    rax,[rip+0x28ae3]        # 0x1400381f0
   14000f70d:	mov    QWORD PTR [rbx],rax
   14000f710:	mov    rax,rbx
   14000f713:	add    rsp,0x20
   14000f717:	pop    rbx
   14000f718:	ret    
   14000f719:	int3   
   14000f71a:	int3   
   14000f71b:	int3   
   14000f71c:	mov    QWORD PTR [rsp+0x10],rdx
   14000f721:	push   rbx
   14000f722:	sub    rsp,0x20
   14000f726:	lea    rdx,[rsp+0x38]
   14000f72b:	mov    rbx,rcx
   14000f72e:	call   0x14000f748
   14000f733:	lea    rax,[rip+0x28ab6]        # 0x1400381f0
   14000f73a:	mov    QWORD PTR [rbx],rax
   14000f73d:	mov    rax,rbx
   14000f740:	add    rsp,0x20
   14000f744:	pop    rbx
   14000f745:	ret    
   14000f746:	int3   
   14000f747:	int3   
   14000f748:	rex push rbx
   14000f74a:	sub    rsp,0x20
   14000f74e:	and    QWORD PTR [rcx+0x8],0x0
   14000f753:	lea    rax,[rip+0x28a4e]        # 0x1400381a8
   14000f75a:	mov    BYTE PTR [rcx+0x10],0x0
   14000f75e:	mov    QWORD PTR [rcx],rax
   14000f761:	mov    rdx,QWORD PTR [rdx]
   14000f764:	mov    rbx,rcx
   14000f767:	call   0x14000f94c
   14000f76c:	mov    rax,rbx
   14000f76f:	add    rsp,0x20
   14000f773:	pop    rbx
   14000f774:	ret    
   14000f775:	int3   
   14000f776:	int3   
   14000f777:	int3   
   14000f778:	lea    rax,[rip+0x28a29]        # 0x1400381a8
   14000f77f:	mov    QWORD PTR [rcx],rax
   14000f782:	mov    rax,QWORD PTR [rdx]
   14000f785:	mov    BYTE PTR [rcx+0x10],0x0
   14000f789:	mov    QWORD PTR [rcx+0x8],rax
   14000f78d:	mov    rax,rcx
   14000f790:	ret    
   14000f791:	int3   
   14000f792:	int3   
   14000f793:	int3   
   14000f794:	rex push rbx
   14000f796:	sub    rsp,0x20
   14000f79a:	and    QWORD PTR [rcx+0x8],0x0
   14000f79f:	lea    rax,[rip+0x28a02]        # 0x1400381a8
   14000f7a6:	mov    rbx,rcx
   14000f7a9:	mov    QWORD PTR [rcx],rax
   14000f7ac:	mov    BYTE PTR [rcx+0x10],0x0
   14000f7b0:	call   0x14000f818
   14000f7b5:	mov    rax,rbx
   14000f7b8:	add    rsp,0x20
   14000f7bc:	pop    rbx
   14000f7bd:	ret    
   14000f7be:	int3   
   14000f7bf:	int3   
   14000f7c0:	and    QWORD PTR [rcx+0x8],0x0
   14000f7c5:	lea    rax,[rip+0x289dc]        # 0x1400381a8
   14000f7cc:	mov    BYTE PTR [rcx+0x10],0x0
   14000f7d0:	mov    QWORD PTR [rcx],rax
   14000f7d3:	mov    rax,rcx
   14000f7d6:	ret    
   14000f7d7:	int3   
   14000f7d8:	lea    rax,[rip+0x289c9]        # 0x1400381a8
   14000f7df:	mov    QWORD PTR [rcx],rax
   14000f7e2:	jmp    0x14000f9a8
   14000f7e7:	int3   
   14000f7e8:	lea    rax,[rip+0x289b9]        # 0x1400381a8
   14000f7ef:	mov    QWORD PTR [rcx],rax
   14000f7f2:	jmp    0x14000f9a8
   14000f7f7:	int3   
   14000f7f8:	lea    rax,[rip+0x289a9]        # 0x1400381a8
   14000f7ff:	mov    QWORD PTR [rcx],rax
   14000f802:	jmp    0x14000f9a8
   14000f807:	int3   
   14000f808:	lea    rax,[rip+0x28999]        # 0x1400381a8
   14000f80f:	mov    QWORD PTR [rcx],rax
   14000f812:	jmp    0x14000f9a8
   14000f817:	int3   
   14000f818:	mov    QWORD PTR [rsp+0x8],rbx
   14000f81d:	push   rdi
   14000f81e:	sub    rsp,0x20
   14000f822:	mov    rdi,rdx
   14000f825:	mov    rbx,rcx
   14000f828:	cmp    rcx,rdx
   14000f82b:	je     0x14000f84e
   14000f82d:	call   0x14000f9a8
   14000f832:	cmp    BYTE PTR [rdi+0x10],0x0
   14000f836:	je     0x14000f846
   14000f838:	mov    rdx,QWORD PTR [rdi+0x8]
   14000f83c:	mov    rcx,rbx
   14000f83f:	call   0x14000f94c
   14000f844:	jmp    0x14000f84e
   14000f846:	mov    rax,QWORD PTR [rdi+0x8]
   14000f84a:	mov    QWORD PTR [rbx+0x8],rax
   14000f84e:	mov    rax,rbx
   14000f851:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f856:	add    rsp,0x20
   14000f85a:	pop    rdi
   14000f85b:	ret    
   14000f85c:	mov    QWORD PTR [rsp+0x8],rbx
   14000f861:	push   rdi
   14000f862:	sub    rsp,0x20
   14000f866:	lea    rax,[rip+0x2893b]        # 0x1400381a8
   14000f86d:	mov    ebx,edx
   14000f86f:	mov    rdi,rcx
   14000f872:	mov    QWORD PTR [rcx],rax
   14000f875:	call   0x14000f9a8
   14000f87a:	test   bl,0x1
   14000f87d:	je     0x14000f887
   14000f87f:	mov    rcx,rdi
   14000f882:	call   0x140007d8c
   14000f887:	mov    rax,rdi
   14000f88a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f88f:	add    rsp,0x20
   14000f893:	pop    rdi
   14000f894:	ret    
   14000f895:	int3   
   14000f896:	int3   
   14000f897:	int3   
   14000f898:	mov    QWORD PTR [rsp+0x8],rbx
   14000f89d:	push   rdi
   14000f89e:	sub    rsp,0x20
   14000f8a2:	lea    rax,[rip+0x288ff]        # 0x1400381a8
   14000f8a9:	mov    ebx,edx
   14000f8ab:	mov    rdi,rcx
   14000f8ae:	mov    QWORD PTR [rcx],rax
   14000f8b1:	call   0x14000f9a8
   14000f8b6:	test   bl,0x1
   14000f8b9:	je     0x14000f8c3
   14000f8bb:	mov    rcx,rdi
   14000f8be:	call   0x140007d8c
   14000f8c3:	mov    rax,rdi
   14000f8c6:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f8cb:	add    rsp,0x20
   14000f8cf:	pop    rdi
   14000f8d0:	ret    
   14000f8d1:	int3   
   14000f8d2:	int3   
   14000f8d3:	int3   
   14000f8d4:	mov    QWORD PTR [rsp+0x8],rbx
   14000f8d9:	push   rdi
   14000f8da:	sub    rsp,0x20
   14000f8de:	lea    rax,[rip+0x288c3]        # 0x1400381a8
   14000f8e5:	mov    ebx,edx
   14000f8e7:	mov    rdi,rcx
   14000f8ea:	mov    QWORD PTR [rcx],rax
   14000f8ed:	call   0x14000f9a8
   14000f8f2:	test   bl,0x1
   14000f8f5:	je     0x14000f8ff
   14000f8f7:	mov    rcx,rdi
   14000f8fa:	call   0x140007d8c
   14000f8ff:	mov    rax,rdi
   14000f902:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f907:	add    rsp,0x20
   14000f90b:	pop    rdi
   14000f90c:	ret    
   14000f90d:	int3   
   14000f90e:	int3   
   14000f90f:	int3   
   14000f910:	mov    QWORD PTR [rsp+0x8],rbx
   14000f915:	push   rdi
   14000f916:	sub    rsp,0x20
   14000f91a:	lea    rax,[rip+0x28887]        # 0x1400381a8
   14000f921:	mov    ebx,edx
   14000f923:	mov    rdi,rcx
   14000f926:	mov    QWORD PTR [rcx],rax
   14000f929:	call   0x14000f9a8
   14000f92e:	test   bl,0x1
   14000f931:	je     0x14000f93b
   14000f933:	mov    rcx,rdi
   14000f936:	call   0x140007d8c
   14000f93b:	mov    rax,rdi
   14000f93e:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f943:	add    rsp,0x20
   14000f947:	pop    rdi
   14000f948:	ret    
   14000f949:	int3   
   14000f94a:	int3   
   14000f94b:	int3   
   14000f94c:	test   rdx,rdx
   14000f94f:	je     0x14000f9a5
   14000f951:	mov    QWORD PTR [rsp+0x8],rbx
   14000f956:	mov    QWORD PTR [rsp+0x10],rsi
   14000f95b:	push   rdi
   14000f95c:	sub    rsp,0x20
   14000f960:	mov    rsi,rcx
   14000f963:	mov    rcx,rdx
   14000f966:	mov    rbx,rdx
   14000f969:	call   0x14001ca40
   14000f96e:	mov    rdi,rax
   14000f971:	lea    rcx,[rax+0x1]
   14000f975:	call   0x14000f5a8
   14000f97a:	mov    QWORD PTR [rsi+0x8],rax
   14000f97e:	test   rax,rax
   14000f981:	je     0x14000f996
   14000f983:	lea    rdx,[rdi+0x1]
   14000f987:	mov    r8,rbx
   14000f98a:	mov    rcx,rax
   14000f98d:	call   0x140009b0c
   14000f992:	mov    BYTE PTR [rsi+0x10],0x1
   14000f996:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f99b:	mov    rsi,QWORD PTR [rsp+0x38]
   14000f9a0:	add    rsp,0x20
   14000f9a4:	pop    rdi
   14000f9a5:	ret    
   14000f9a6:	int3   
   14000f9a7:	int3   
   14000f9a8:	rex push rbx
   14000f9aa:	sub    rsp,0x20
   14000f9ae:	cmp    BYTE PTR [rcx+0x10],0x0
   14000f9b2:	mov    rbx,rcx
   14000f9b5:	je     0x14000f9c0
   14000f9b7:	mov    rcx,QWORD PTR [rcx+0x8]
   14000f9bb:	call   0x14000fb50
   14000f9c0:	and    QWORD PTR [rbx+0x8],0x0
   14000f9c5:	mov    BYTE PTR [rbx+0x10],0x0
   14000f9c9:	add    rsp,0x20
   14000f9cd:	pop    rbx
   14000f9ce:	ret    
   14000f9cf:	int3   
   14000f9d0:	cmp    QWORD PTR [rcx+0x8],0x0
   14000f9d5:	lea    rax,[rip+0x287dc]        # 0x1400381b8
   14000f9dc:	cmovne rax,QWORD PTR [rcx+0x8]
   14000f9e1:	ret    
   14000f9e2:	int3   
   14000f9e3:	int3   
   14000f9e4:	mov    rcx,QWORD PTR [rip+0x37fd5]        # 0x1400479c0
   14000f9eb:	rex.W jmp QWORD PTR [rip+0x25836]        # 0x140035228
   14000f9f2:	int3   
   14000f9f3:	int3   
   14000f9f4:	xor    ecx,ecx
   14000f9f6:	jmp    0x14000f9fc
   14000f9fb:	int3   
   14000f9fc:	mov    QWORD PTR [rsp+0x8],rbx
   14000fa01:	push   rdi
   14000fa02:	sub    rsp,0x20
   14000fa06:	mov    rdi,rcx
   14000fa09:	mov    ecx,0x4
   14000fa0e:	call   0x140019628
   14000fa13:	mov    rcx,QWORD PTR [rip+0x37fa6]        # 0x1400479c0
   14000fa1a:	call   QWORD PTR [rip+0x25808]        # 0x140035228
   14000fa20:	mov    rcx,rdi
   14000fa23:	mov    rbx,rax
   14000fa26:	call   QWORD PTR [rip+0x257f4]        # 0x140035220
   14000fa2c:	mov    ecx,0x4
   14000fa31:	mov    QWORD PTR [rip+0x37f88],rax        # 0x1400479c0
   14000fa38:	call   0x140019844
   14000fa3d:	mov    rax,rbx
   14000fa40:	mov    rbx,QWORD PTR [rsp+0x30]
   14000fa45:	add    rsp,0x20
   14000fa49:	pop    rdi
   14000fa4a:	ret    
   14000fa4b:	int3   
   14000fa4c:	rex push rbx
   14000fa4e:	sub    rsp,0x20
   14000fa52:	mov    rbx,rcx
   14000fa55:	mov    rcx,QWORD PTR [rip+0x37f64]        # 0x1400479c0
   14000fa5c:	call   QWORD PTR [rip+0x257c6]        # 0x140035228
   14000fa62:	test   rax,rax
   14000fa65:	je     0x14000fa77
   14000fa67:	mov    rcx,rbx
   14000fa6a:	call   rax
   14000fa6c:	test   eax,eax
   14000fa6e:	je     0x14000fa77
   14000fa70:	mov    eax,0x1
   14000fa75:	jmp    0x14000fa79
   14000fa77:	xor    eax,eax
   14000fa79:	add    rsp,0x20
   14000fa7d:	pop    rbx
   14000fa7e:	ret    
   14000fa7f:	int3   
   14000fa80:	mov    QWORD PTR [rip+0x37f39],rcx        # 0x1400479c0
   14000fa87:	ret    
   14000fa88:	mov    QWORD PTR [rsp+0x10],rbx
   14000fa8d:	mov    QWORD PTR [rsp+0x18],rdi
   14000fa92:	push   rbp
   14000fa93:	mov    rbp,rsp
   14000fa96:	sub    rsp,0x60
   14000fa9a:	movaps xmm0,XMMWORD PTR [rip+0x2877f]        # 0x140038220
   14000faa1:	movaps xmm1,XMMWORD PTR [rip+0x28788]        # 0x140038230
   14000faa8:	mov    rbx,rdx
   14000faab:	mov    rdi,rcx
   14000faae:	movaps XMMWORD PTR [rbp-0x40],xmm0
   14000fab2:	movaps xmm0,XMMWORD PTR [rip+0x28787]        # 0x140038240
   14000fab9:	movaps XMMWORD PTR [rbp-0x30],xmm1
   14000fabd:	movaps xmm1,XMMWORD PTR [rip+0x2878c]        # 0x140038250
   14000fac4:	movaps XMMWORD PTR [rbp-0x20],xmm0
   14000fac8:	movaps XMMWORD PTR [rbp-0x10],xmm1
   14000facc:	test   rdx,rdx
   14000facf:	je     0x14000fae7
   14000fad1:	test   BYTE PTR [rdx],0x10
   14000fad4:	je     0x14000fae7
   14000fad6:	mov    rcx,QWORD PTR [rcx]
   14000fad9:	sub    rcx,0x8
   14000fadd:	mov    rax,QWORD PTR [rcx]
   14000fae0:	mov    rbx,QWORD PTR [rax+0x30]
   14000fae4:	call   QWORD PTR [rax+0x40]
   14000fae7:	lea    rdx,[rbp+0x10]
   14000faeb:	mov    rcx,rbx
   14000faee:	mov    QWORD PTR [rbp-0x18],rdi
   14000faf2:	mov    QWORD PTR [rbp-0x10],rbx
   14000faf6:	call   QWORD PTR [rip+0x2578c]        # 0x140035288
   14000fafc:	mov    rdx,rax
   14000faff:	mov    QWORD PTR [rbp+0x10],rax
   14000fb03:	mov    QWORD PTR [rbp-0x8],rax
   14000fb07:	test   rbx,rbx
   14000fb0a:	je     0x14000fb27
   14000fb0c:	test   BYTE PTR [rbx],0x8
   14000fb0f:	mov    ecx,0x1994000
   14000fb14:	je     0x14000fb1b
   14000fb16:	mov    DWORD PTR [rbp-0x20],ecx
   14000fb19:	jmp    0x14000fb27
   14000fb1b:	mov    eax,DWORD PTR [rbp-0x20]
   14000fb1e:	test   rdx,rdx
   14000fb21:	cmove  eax,ecx
   14000fb24:	mov    DWORD PTR [rbp-0x20],eax
   14000fb27:	mov    r8d,DWORD PTR [rbp-0x28]
   14000fb2b:	mov    edx,DWORD PTR [rbp-0x3c]
   14000fb2e:	mov    ecx,DWORD PTR [rbp-0x40]
   14000fb31:	lea    r9,[rbp-0x20]
   14000fb35:	call   QWORD PTR [rip+0x25755]        # 0x140035290
   14000fb3b:	lea    r11,[rsp+0x60]
   14000fb40:	mov    rbx,QWORD PTR [r11+0x18]
   14000fb44:	mov    rdi,QWORD PTR [r11+0x20]
   14000fb48:	mov    rsp,r11
   14000fb4b:	pop    rbp
   14000fb4c:	ret    
   14000fb4d:	int3   
   14000fb4e:	int3   
   14000fb4f:	int3   
   14000fb50:	test   rcx,rcx
   14000fb53:	je     0x14000fb8c
   14000fb55:	push   rbx
   14000fb56:	sub    rsp,0x20
   14000fb5a:	mov    r8,rcx
   14000fb5d:	mov    rcx,QWORD PTR [rip+0x38cd4]        # 0x140048838
   14000fb64:	xor    edx,edx
   14000fb66:	call   QWORD PTR [rip+0x2572c]        # 0x140035298
   14000fb6c:	test   eax,eax
   14000fb6e:	jne    0x14000fb87
   14000fb70:	call   0x14000b9f0
   14000fb75:	mov    rbx,rax
   14000fb78:	call   QWORD PTR [rip+0x2566a]        # 0x1400351e8
   14000fb7e:	mov    ecx,eax
   14000fb80:	call   0x14000ba88
   14000fb85:	mov    DWORD PTR [rbx],eax
   14000fb87:	add    rsp,0x20
   14000fb8b:	pop    rbx
   14000fb8c:	ret    
   14000fb8d:	int3   
   14000fb8e:	int3   
   14000fb8f:	int3   
   14000fb90:	sub    rsp,0x28
   14000fb94:	test   rcx,rcx
   14000fb97:	jne    0x14000fbb2
   14000fb99:	call   0x14000b9f0
   14000fb9e:	mov    DWORD PTR [rax],0x16
   14000fba4:	call   0x14000b8b8
   14000fba9:	or     rax,0xffffffffffffffff
   14000fbad:	add    rsp,0x28
   14000fbb1:	ret    
   14000fbb2:	mov    r8,rcx
   14000fbb5:	mov    rcx,QWORD PTR [rip+0x38c7c]        # 0x140048838
   14000fbbc:	xor    edx,edx
   14000fbbe:	add    rsp,0x28
   14000fbc2:	rex.W jmp QWORD PTR [rip+0x256d7]        # 0x1400352a0
   14000fbc9:	int3   
   14000fbca:	int3   
   14000fbcb:	int3   
   14000fbcc:	mov    rax,rsp
   14000fbcf:	mov    QWORD PTR [rax+0x8],rbx
   14000fbd3:	mov    QWORD PTR [rax+0x10],rbp
   14000fbd7:	mov    QWORD PTR [rax+0x18],rsi
   14000fbdb:	mov    QWORD PTR [rax+0x20],rdi
   14000fbdf:	push   r14
   14000fbe1:	sub    rsp,0x20
   14000fbe5:	xor    ebx,ebx
   14000fbe7:	mov    rsi,rdx
   14000fbea:	mov    rbp,rcx
   14000fbed:	or     r14d,0xffffffff
   14000fbf1:	xor    r8d,r8d
   14000fbf4:	mov    rdx,rsi
   14000fbf7:	mov    rcx,rbp
   14000fbfa:	call   0x14001f408
   14000fbff:	mov    rdi,rax
   14000fc02:	test   rax,rax
   14000fc05:	jne    0x14000fc2d
   14000fc07:	cmp    DWORD PTR [rip+0x37dbb],eax        # 0x1400479c8
   14000fc0d:	jbe    0x14000fc2d
   14000fc0f:	mov    ecx,ebx
   14000fc11:	call   0x14001a0c8
   14000fc16:	lea    ecx,[rbx+0x3e8]
   14000fc1c:	cmp    ecx,DWORD PTR [rip+0x37da6]        # 0x1400479c8
   14000fc22:	mov    ebx,ecx
   14000fc24:	cmova  ebx,r14d
   14000fc28:	cmp    ebx,r14d
   14000fc2b:	jne    0x14000fbf1
   14000fc2d:	mov    rbx,QWORD PTR [rsp+0x30]
   14000fc32:	mov    rbp,QWORD PTR [rsp+0x38]
   14000fc37:	mov    rsi,QWORD PTR [rsp+0x40]
   14000fc3c:	mov    rax,rdi
   14000fc3f:	mov    rdi,QWORD PTR [rsp+0x48]
   14000fc44:	add    rsp,0x20
   14000fc48:	pop    r14
   14000fc4a:	ret    
   14000fc4b:	int3   
   14000fc4c:	mov    rax,rsp
   14000fc4f:	mov    QWORD PTR [rax+0x8],rbx
   14000fc53:	mov    QWORD PTR [rax+0x10],rbp
   14000fc57:	mov    QWORD PTR [rax+0x18],rsi
   14000fc5b:	mov    QWORD PTR [rax+0x20],rdi
   14000fc5f:	push   r14
   14000fc61:	sub    rsp,0x20
   14000fc65:	mov    esi,DWORD PTR [rip+0x37d5d]        # 0x1400479c8
   14000fc6b:	xor    ebx,ebx
   14000fc6d:	mov    rbp,rcx
   14000fc70:	or     r14d,0xffffffff
   14000fc74:	mov    rcx,rbp
   14000fc77:	call   0x14000f5a8
   14000fc7c:	mov    rdi,rax
   14000fc7f:	test   rax,rax
   14000fc82:	jne    0x14000fca8
   14000fc84:	test   esi,esi
   14000fc86:	je     0x14000fca8
   14000fc88:	mov    ecx,ebx
   14000fc8a:	call   0x14001a0c8
   14000fc8f:	mov    esi,DWORD PTR [rip+0x37d33]        # 0x1400479c8
   14000fc95:	lea    ecx,[rbx+0x3e8]
   14000fc9b:	cmp    ecx,esi
   14000fc9d:	mov    ebx,ecx
   14000fc9f:	cmova  ebx,r14d
   14000fca3:	cmp    ebx,r14d
   14000fca6:	jne    0x14000fc74
   14000fca8:	mov    rbx,QWORD PTR [rsp+0x30]
   14000fcad:	mov    rbp,QWORD PTR [rsp+0x38]
   14000fcb2:	mov    rsi,QWORD PTR [rsp+0x40]
   14000fcb7:	mov    rax,rdi
   14000fcba:	mov    rdi,QWORD PTR [rsp+0x48]
   14000fcbf:	add    rsp,0x20
   14000fcc3:	pop    r14
   14000fcc5:	ret    
   14000fcc6:	int3   
   14000fcc7:	int3   
   14000fcc8:	mov    rax,rsp
   14000fccb:	mov    QWORD PTR [rax+0x8],rbx
   14000fccf:	mov    QWORD PTR [rax+0x10],rbp
   14000fcd3:	mov    QWORD PTR [rax+0x18],rsi
   14000fcd7:	mov    QWORD PTR [rax+0x20],rdi
   14000fcdb:	push   r14
   14000fcdd:	sub    rsp,0x20
   14000fce1:	xor    ebx,ebx
   14000fce3:	mov    rsi,rdx
   14000fce6:	mov    rbp,rcx
   14000fce9:	or     r14d,0xffffffff
   14000fced:	mov    rdx,rsi
   14000fcf0:	mov    rcx,rbp
   14000fcf3:	call   0x14001f2ac
   14000fcf8:	mov    rdi,rax
   14000fcfb:	test   rax,rax
   14000fcfe:	jne    0x14000fd2b
   14000fd00:	test   rsi,rsi
   14000fd03:	je     0x14000fd2b
   14000fd05:	cmp    DWORD PTR [rip+0x37cbd],eax        # 0x1400479c8
   14000fd0b:	jbe    0x14000fd2b
   14000fd0d:	mov    ecx,ebx
   14000fd0f:	call   0x14001a0c8
   14000fd14:	lea    ecx,[rbx+0x3e8]
   14000fd1a:	cmp    ecx,DWORD PTR [rip+0x37ca8]        # 0x1400479c8
   14000fd20:	mov    ebx,ecx
   14000fd22:	cmova  ebx,r14d
   14000fd26:	cmp    ebx,r14d
   14000fd29:	jne    0x14000fced
   14000fd2b:	mov    rbx,QWORD PTR [rsp+0x30]
   14000fd30:	mov    rbp,QWORD PTR [rsp+0x38]
   14000fd35:	mov    rsi,QWORD PTR [rsp+0x40]
   14000fd3a:	mov    rax,rdi
   14000fd3d:	mov    rdi,QWORD PTR [rsp+0x48]
   14000fd42:	add    rsp,0x20
   14000fd46:	pop    r14
   14000fd48:	ret    
   14000fd49:	int3   
   14000fd4a:	int3   
   14000fd4b:	int3   
   14000fd4c:	mov    QWORD PTR [rsp+0x8],rbx
   14000fd51:	mov    QWORD PTR [rsp+0x10],rbp
   14000fd56:	mov    QWORD PTR [rsp+0x18],rsi
   14000fd5b:	push   rdi
   14000fd5c:	push   r14
   14000fd5e:	push   r15
   14000fd60:	sub    rsp,0x20
   14000fd64:	xor    ebx,ebx
   14000fd66:	mov    rsi,r8
   14000fd69:	mov    rbp,rdx
   14000fd6c:	or     r15d,0xffffffff
   14000fd70:	mov    r14,rcx
   14000fd73:	mov    r8,rsi
   14000fd76:	mov    rdx,rbp
   14000fd79:	mov    rcx,r14
   14000fd7c:	call   0x14001f380
   14000fd81:	mov    rdi,rax
   14000fd84:	test   rax,rax
   14000fd87:	jne    0x14000fdb4
   14000fd89:	test   rsi,rsi
   14000fd8c:	je     0x14000fdb4
   14000fd8e:	cmp    DWORD PTR [rip+0x37c34],eax        # 0x1400479c8
   14000fd94:	jbe    0x14000fdb4
   14000fd96:	mov    ecx,ebx
   14000fd98:	call   0x14001a0c8
   14000fd9d:	lea    ecx,[rbx+0x3e8]
   14000fda3:	cmp    ecx,DWORD PTR [rip+0x37c1f]        # 0x1400479c8
   14000fda9:	mov    ebx,ecx
   14000fdab:	cmova  ebx,r15d
   14000fdaf:	cmp    ebx,r15d
   14000fdb2:	jne    0x14000fd73
   14000fdb4:	mov    rbx,QWORD PTR [rsp+0x40]
   14000fdb9:	mov    rbp,QWORD PTR [rsp+0x48]
   14000fdbe:	mov    rsi,QWORD PTR [rsp+0x50]
   14000fdc3:	mov    rax,rdi
   14000fdc6:	add    rsp,0x20
   14000fdca:	pop    r15
   14000fdcc:	pop    r14
   14000fdce:	pop    rdi
   14000fdcf:	ret    
   14000fdd0:	mov    eax,DWORD PTR [rip+0x37bf2]        # 0x1400479c8
   14000fdd6:	mov    DWORD PTR [rip+0x37bec],ecx        # 0x1400479c8
   14000fddc:	ret    
   14000fddd:	int3   
   14000fdde:	int3   
   14000fddf:	int3   
   14000fde0:	rex push rbx
   14000fde2:	sub    rsp,0x20
   14000fde6:	mov    ebx,ecx
   14000fde8:	call   0x14001a0c8
   14000fded:	or     eax,0xffffffff
   14000fdf0:	add    ebx,0x3e8
   14000fdf6:	cmp    ebx,DWORD PTR [rip+0x37bcc]        # 0x1400479c8
   14000fdfc:	cmova  ebx,eax
   14000fdff:	mov    eax,ebx
   14000fe01:	add    rsp,0x20
   14000fe05:	pop    rbx
   14000fe06:	ret    
   14000fe07:	int3   
   14000fe08:	lock inc DWORD PTR [rcx]
   14000fe0b:	mov    rax,QWORD PTR [rcx+0xd8]
   14000fe12:	test   rax,rax
   14000fe15:	je     0x14000fe1a
   14000fe17:	lock inc DWORD PTR [rax]
   14000fe1a:	mov    rax,QWORD PTR [rcx+0xe8]
   14000fe21:	test   rax,rax
   14000fe24:	je     0x14000fe29
   14000fe26:	lock inc DWORD PTR [rax]
   14000fe29:	mov    rax,QWORD PTR [rcx+0xe0]
   14000fe30:	test   rax,rax
   14000fe33:	je     0x14000fe38
   14000fe35:	lock inc DWORD PTR [rax]
   14000fe38:	mov    rax,QWORD PTR [rcx+0xf8]
   14000fe3f:	test   rax,rax
   14000fe42:	je     0x14000fe47
   14000fe44:	lock inc DWORD PTR [rax]
   14000fe47:	lea    rax,[rcx+0x28]
   14000fe4b:	mov    r8d,0x6
   14000fe51:	lea    rdx,[rip+0x35eb8]        # 0x140045d10
   14000fe58:	cmp    QWORD PTR [rax-0x10],rdx
   14000fe5c:	je     0x14000fe69
   14000fe5e:	mov    rdx,QWORD PTR [rax]
   14000fe61:	test   rdx,rdx
   14000fe64:	je     0x14000fe69
   14000fe66:	lock inc DWORD PTR [rdx]
   14000fe69:	cmp    QWORD PTR [rax-0x18],0x0
   14000fe6e:	je     0x14000fe7c
   14000fe70:	mov    rdx,QWORD PTR [rax-0x8]
   14000fe74:	test   rdx,rdx
   14000fe77:	je     0x14000fe7c
   14000fe79:	lock inc DWORD PTR [rdx]
   14000fe7c:	add    rax,0x20
   14000fe80:	dec    r8
   14000fe83:	jne    0x14000fe51
   14000fe85:	mov    rax,QWORD PTR [rcx+0x120]
   14000fe8c:	lock inc DWORD PTR [rax+0x15c]
   14000fe93:	ret    
   14000fe94:	mov    QWORD PTR [rsp+0x8],rbx
   14000fe99:	mov    QWORD PTR [rsp+0x10],rbp
   14000fe9e:	mov    QWORD PTR [rsp+0x18],rsi
   14000fea3:	push   rdi
   14000fea4:	sub    rsp,0x20
   14000fea8:	mov    rax,QWORD PTR [rcx+0xf0]
   14000feaf:	mov    rbx,rcx
   14000feb2:	test   rax,rax
   14000feb5:	je     0x14000ff30
   14000feb7:	lea    rcx,[rip+0x365b2]        # 0x140046470
   14000febe:	cmp    rax,rcx
   14000fec1:	je     0x14000ff30
   14000fec3:	mov    rax,QWORD PTR [rbx+0xd8]
   14000feca:	test   rax,rax
   14000fecd:	je     0x14000ff30
   14000fecf:	cmp    DWORD PTR [rax],0x0
   14000fed2:	jne    0x14000ff30
   14000fed4:	mov    rcx,QWORD PTR [rbx+0xe8]
   14000fedb:	test   rcx,rcx
   14000fede:	je     0x14000fef6
   14000fee0:	cmp    DWORD PTR [rcx],0x0
   14000fee3:	jne    0x14000fef6
   14000fee5:	call   0x14000fb50
   14000feea:	mov    rcx,QWORD PTR [rbx+0xf0]
   14000fef1:	call   0x14001f4a4
   14000fef6:	mov    rcx,QWORD PTR [rbx+0xe0]
   14000fefd:	test   rcx,rcx
   14000ff00:	je     0x14000ff18
   14000ff02:	cmp    DWORD PTR [rcx],0x0
   14000ff05:	jne    0x14000ff18
   14000ff07:	call   0x14000fb50
   14000ff0c:	mov    rcx,QWORD PTR [rbx+0xf0]
   14000ff13:	call   0x14001faec
   14000ff18:	mov    rcx,QWORD PTR [rbx+0xd8]
   14000ff1f:	call   0x14000fb50
   14000ff24:	mov    rcx,QWORD PTR [rbx+0xf0]
   14000ff2b:	call   0x14000fb50
   14000ff30:	mov    rax,QWORD PTR [rbx+0xf8]
   14000ff37:	test   rax,rax
   14000ff3a:	je     0x14000ff83
   14000ff3c:	cmp    DWORD PTR [rax],0x0
   14000ff3f:	jne    0x14000ff83
   14000ff41:	mov    rcx,QWORD PTR [rbx+0x100]
   14000ff48:	sub    rcx,0xfe
   14000ff4f:	call   0x14000fb50
   14000ff54:	mov    rcx,QWORD PTR [rbx+0x110]
   14000ff5b:	mov    edi,0x80
   14000ff60:	sub    rcx,rdi
   14000ff63:	call   0x14000fb50
   14000ff68:	mov    rcx,QWORD PTR [rbx+0x118]
   14000ff6f:	sub    rcx,rdi
   14000ff72:	call   0x14000fb50
   14000ff77:	mov    rcx,QWORD PTR [rbx+0xf8]
   14000ff7e:	call   0x14000fb50
   14000ff83:	mov    rcx,QWORD PTR [rbx+0x120]
   14000ff8a:	lea    rax,[rip+0x35d8f]        # 0x140045d20
   14000ff91:	cmp    rcx,rax
   14000ff94:	je     0x14000ffb0
   14000ff96:	cmp    DWORD PTR [rcx+0x15c],0x0
   14000ff9d:	jne    0x14000ffb0
   14000ff9f:	call   0x14001fe5c
   14000ffa4:	mov    rcx,QWORD PTR [rbx+0x120]
   14000ffab:	call   0x14000fb50
   14000ffb0:	lea    rsi,[rbx+0x128]
   14000ffb7:	lea    rdi,[rbx+0x28]
   14000ffbb:	mov    ebp,0x6
   14000ffc0:	lea    rax,[rip+0x35d49]        # 0x140045d10
   14000ffc7:	cmp    QWORD PTR [rdi-0x10],rax
   14000ffcb:	je     0x14000ffe7
   14000ffcd:	mov    rcx,QWORD PTR [rdi]
   14000ffd0:	test   rcx,rcx
   14000ffd3:	je     0x14000ffe7
   14000ffd5:	cmp    DWORD PTR [rcx],0x0
   14000ffd8:	jne    0x14000ffe7
   14000ffda:	call   0x14000fb50
   14000ffdf:	mov    rcx,QWORD PTR [rsi]
   14000ffe2:	call   0x14000fb50
   14000ffe7:	cmp    QWORD PTR [rdi-0x18],0x0
   14000ffec:	je     0x140010001
   14000ffee:	mov    rcx,QWORD PTR [rdi-0x8]
   14000fff2:	test   rcx,rcx
   14000fff5:	je     0x140010001
   14000fff7:	cmp    DWORD PTR [rcx],0x0
   14000fffa:	jne    0x140010001
   14000fffc:	call   0x14000fb50
   140010001:	add    rsi,0x8
   140010005:	add    rdi,0x20
   140010009:	dec    rbp
   14001000c:	jne    0x14000ffc0
   14001000e:	mov    rcx,rbx
   140010011:	mov    rbx,QWORD PTR [rsp+0x30]
   140010016:	mov    rbp,QWORD PTR [rsp+0x38]
   14001001b:	mov    rsi,QWORD PTR [rsp+0x40]
   140010020:	add    rsp,0x20
   140010024:	pop    rdi
   140010025:	jmp    0x14000fb50
   14001002a:	int3   
   14001002b:	int3   
   14001002c:	test   rcx,rcx
   14001002f:	je     0x1400100cc
   140010035:	or     r9d,0xffffffff
   140010039:	lock add DWORD PTR [rcx],r9d
   14001003d:	mov    rax,QWORD PTR [rcx+0xd8]
   140010044:	test   rax,rax
   140010047:	je     0x14001004d
   140010049:	lock add DWORD PTR [rax],r9d
   14001004d:	mov    rax,QWORD PTR [rcx+0xe8]
   140010054:	test   rax,rax
   140010057:	je     0x14001005d
   140010059:	lock add DWORD PTR [rax],r9d
   14001005d:	mov    rax,QWORD PTR [rcx+0xe0]
   140010064:	test   rax,rax
   140010067:	je     0x14001006d
   140010069:	lock add DWORD PTR [rax],r9d
   14001006d:	mov    rax,QWORD PTR [rcx+0xf8]
   140010074:	test   rax,rax
   140010077:	je     0x14001007d
   140010079:	lock add DWORD PTR [rax],r9d
   14001007d:	lea    rax,[rcx+0x28]
   140010081:	mov    r8d,0x6
   140010087:	lea    rdx,[rip+0x35c82]        # 0x140045d10
   14001008e:	cmp    QWORD PTR [rax-0x10],rdx
   140010092:	je     0x1400100a0
   140010094:	mov    rdx,QWORD PTR [rax]
   140010097:	test   rdx,rdx
   14001009a:	je     0x1400100a0
   14001009c:	lock add DWORD PTR [rdx],r9d
   1400100a0:	cmp    QWORD PTR [rax-0x18],0x0
   1400100a5:	je     0x1400100b4
   1400100a7:	mov    rdx,QWORD PTR [rax-0x8]
   1400100ab:	test   rdx,rdx
   1400100ae:	je     0x1400100b4
   1400100b0:	lock add DWORD PTR [rdx],r9d
   1400100b4:	add    rax,0x20
   1400100b8:	dec    r8
   1400100bb:	jne    0x140010087
   1400100bd:	mov    rax,QWORD PTR [rcx+0x120]
   1400100c4:	lock add DWORD PTR [rax+0x15c],r9d
   1400100cc:	mov    rax,rcx
   1400100cf:	ret    
   1400100d0:	rex push rbx
   1400100d2:	sub    rsp,0x20
   1400100d6:	call   0x140010d3c
   1400100db:	mov    rbx,rax
   1400100de:	mov    ecx,DWORD PTR [rip+0x36074]        # 0x140046158
   1400100e4:	test   DWORD PTR [rax+0xc8],ecx
   1400100ea:	je     0x140010104
   1400100ec:	cmp    QWORD PTR [rax+0xc0],0x0
   1400100f4:	je     0x140010104
   1400100f6:	call   0x140010d3c
   1400100fb:	mov    rbx,QWORD PTR [rax+0xc0]
   140010102:	jmp    0x14001012f
   140010104:	mov    ecx,0xc
   140010109:	call   0x140019628
   14001010e:	nop
   14001010f:	lea    rcx,[rbx+0xc0]
   140010116:	mov    rdx,QWORD PTR [rip+0x35ec3]        # 0x140045fe0
   14001011d:	call   0x140010148
   140010122:	mov    rbx,rax
   140010125:	mov    ecx,0xc
   14001012a:	call   0x140019844
   14001012f:	test   rbx,rbx
   140010132:	jne    0x14001013c
   140010134:	lea    ecx,[rbx+0x20]
   140010137:	call   0x140009f8c
   14001013c:	mov    rax,rbx
   14001013f:	add    rsp,0x20
   140010143:	pop    rbx
   140010144:	ret    
   140010145:	int3   
   140010146:	int3   
   140010147:	int3   
   140010148:	mov    QWORD PTR [rsp+0x8],rbx
   14001014d:	push   rdi
   14001014e:	sub    rsp,0x20
   140010152:	mov    rdi,rdx
   140010155:	test   rdx,rdx
   140010158:	je     0x14001019d
   14001015a:	test   rcx,rcx
   14001015d:	je     0x14001019d
   14001015f:	mov    rbx,QWORD PTR [rcx]
   140010162:	cmp    rbx,rdx
   140010165:	je     0x140010198
   140010167:	mov    QWORD PTR [rcx],rdx
   14001016a:	mov    rcx,rdx
   14001016d:	call   0x14000fe08
   140010172:	test   rbx,rbx
   140010175:	je     0x140010198
   140010177:	mov    rcx,rbx
   14001017a:	call   0x14001002c
   14001017f:	cmp    DWORD PTR [rbx],0x0
   140010182:	jne    0x140010198
   140010184:	lea    rax,[rip+0x35e65]        # 0x140045ff0
   14001018b:	cmp    rbx,rax
   14001018e:	je     0x140010198
   140010190:	mov    rcx,rbx
   140010193:	call   0x14000fe94
   140010198:	mov    rax,rdi
   14001019b:	jmp    0x14001019f
   14001019d:	xor    eax,eax
   14001019f:	mov    rbx,QWORD PTR [rsp+0x30]
   1400101a4:	add    rsp,0x20
   1400101a8:	pop    rdi
   1400101a9:	ret    
   1400101aa:	int3   
   1400101ab:	int3   
   1400101ac:	sub    rsp,0x28
   1400101b0:	cmp    DWORD PTR [rip+0x39d09],0x0        # 0x140049ec0
   1400101b7:	jne    0x1400101cd
   1400101b9:	mov    ecx,0xfffffffd
   1400101be:	call   0x1400105fc
   1400101c3:	mov    DWORD PTR [rip+0x39cf3],0x1        # 0x140049ec0
   1400101cd:	xor    eax,eax
   1400101cf:	add    rsp,0x28
   1400101d3:	ret    
   1400101d4:	sub    ecx,0x3a4
   1400101da:	je     0x140010205
   1400101dc:	sub    ecx,0x4
   1400101df:	je     0x1400101fd
   1400101e1:	sub    ecx,0xd
   1400101e4:	je     0x1400101f5
   1400101e6:	dec    ecx
   1400101e8:	je     0x1400101ed
   1400101ea:	xor    eax,eax
   1400101ec:	ret    
   1400101ed:	mov    rax,QWORD PTR [rip+0x28084]        # 0x140038278
   1400101f4:	ret    
   1400101f5:	mov    rax,QWORD PTR [rip+0x28074]        # 0x140038270
   1400101fc:	ret    
   1400101fd:	mov    rax,QWORD PTR [rip+0x28064]        # 0x140038268
   140010204:	ret    
   140010205:	mov    rax,QWORD PTR [rip+0x28054]        # 0x140038260
   14001020c:	ret    
   14001020d:	int3   
   14001020e:	int3   
   14001020f:	int3   
   140010210:	rex push rbx
   140010212:	sub    rsp,0x40
   140010216:	mov    ebx,ecx
   140010218:	lea    rcx,[rsp+0x20]
   14001021d:	xor    edx,edx
   14001021f:	call   0x140007ff0
   140010224:	and    DWORD PTR [rip+0x377c5],0x0        # 0x1400479f0
   14001022b:	cmp    ebx,0xfffffffe
   14001022e:	jne    0x140010242
   140010230:	mov    DWORD PTR [rip+0x377b6],0x1        # 0x1400479f0
   14001023a:	call   QWORD PTR [rip+0x25078]        # 0x1400352b8
   140010240:	jmp    0x140010257
   140010242:	cmp    ebx,0xfffffffd
   140010245:	jne    0x14001025b
   140010247:	mov    DWORD PTR [rip+0x3779f],0x1        # 0x1400479f0
   140010251:	call   QWORD PTR [rip+0x25059]        # 0x1400352b0
   140010257:	mov    ebx,eax
   140010259:	jmp    0x140010272
   14001025b:	cmp    ebx,0xfffffffc
   14001025e:	jne    0x140010272
   140010260:	mov    rax,QWORD PTR [rsp+0x20]
   140010265:	mov    DWORD PTR [rip+0x37781],0x1        # 0x1400479f0
   14001026f:	mov    ebx,DWORD PTR [rax+0x4]
   140010272:	cmp    BYTE PTR [rsp+0x38],0x0
   140010277:	je     0x140010285
   140010279:	mov    rcx,QWORD PTR [rsp+0x30]
   14001027e:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140010285:	mov    eax,ebx
   140010287:	add    rsp,0x40
   14001028b:	pop    rbx
   14001028c:	ret    
   14001028d:	int3   
   14001028e:	int3   
   14001028f:	int3   
   140010290:	mov    QWORD PTR [rsp+0x8],rbx
   140010295:	mov    QWORD PTR [rsp+0x10],rbp
   14001029a:	mov    QWORD PTR [rsp+0x18],rsi
   14001029f:	push   rdi
   1400102a0:	sub    rsp,0x20
   1400102a4:	lea    rbx,[rcx+0x18]
   1400102a8:	mov    rsi,rcx
   1400102ab:	mov    ebp,0x101
   1400102b0:	mov    rcx,rbx
   1400102b3:	mov    r8d,ebp
   1400102b6:	xor    edx,edx
   1400102b8:	call   0x140009800
   1400102bd:	xor    eax,eax
   1400102bf:	lea    rdi,[rsi+0xc]
   1400102c3:	mov    QWORD PTR [rsi+0x4],rax
   1400102c7:	mov    QWORD PTR [rsi+0x220],rax
   1400102ce:	mov    ecx,0x6
   1400102d3:	movzx  eax,ax
   1400102d6:	rep stos WORD PTR es:[rdi],ax
   1400102d9:	lea    rdi,[rip+0x35700]        # 0x1400459e0
   1400102e0:	sub    rdi,rsi
   1400102e3:	mov    al,BYTE PTR [rdi+rbx*1]
   1400102e6:	mov    BYTE PTR [rbx],al
   1400102e8:	inc    rbx
   1400102eb:	dec    rbp
   1400102ee:	jne    0x1400102e3
   1400102f0:	lea    rcx,[rsi+0x119]
   1400102f7:	mov    edx,0x100
   1400102fc:	mov    al,BYTE PTR [rcx+rdi*1]
   1400102ff:	mov    BYTE PTR [rcx],al
   140010301:	inc    rcx
   140010304:	dec    rdx
   140010307:	jne    0x1400102fc
   140010309:	mov    rbx,QWORD PTR [rsp+0x30]
   14001030e:	mov    rbp,QWORD PTR [rsp+0x38]
   140010313:	mov    rsi,QWORD PTR [rsp+0x40]
   140010318:	add    rsp,0x20
   14001031c:	pop    rdi
   14001031d:	ret    
   14001031e:	int3   
   14001031f:	int3   
   140010320:	mov    QWORD PTR [rsp+0x10],rbx
   140010325:	mov    QWORD PTR [rsp+0x18],rdi
   14001032a:	push   rbp
   14001032b:	lea    rbp,[rsp-0x480]
   140010333:	sub    rsp,0x580
   14001033a:	mov    rax,QWORD PTR [rip+0x34f2f]        # 0x140045270
   140010341:	xor    rax,rsp
   140010344:	mov    QWORD PTR [rbp+0x470],rax
   14001034b:	mov    rdi,rcx
   14001034e:	mov    ecx,DWORD PTR [rcx+0x4]
   140010351:	lea    rdx,[rsp+0x50]
   140010356:	call   QWORD PTR [rip+0x24f64]        # 0x1400352c0
   14001035c:	mov    ebx,0x100
   140010361:	test   eax,eax
   140010363:	je     0x14001049e
   140010369:	xor    eax,eax
   14001036b:	lea    rcx,[rsp+0x70]
   140010370:	mov    BYTE PTR [rcx],al
   140010372:	inc    eax
   140010374:	inc    rcx
   140010377:	cmp    eax,ebx
   140010379:	jb     0x140010370
   14001037b:	mov    al,BYTE PTR [rsp+0x56]
   14001037f:	mov    BYTE PTR [rsp+0x70],0x20
   140010384:	lea    rdx,[rsp+0x56]
   140010389:	jmp    0x1400103ad
   14001038b:	movzx  r8d,BYTE PTR [rdx+0x1]
   140010390:	movzx  ecx,al
   140010393:	jmp    0x1400103a2
   140010395:	cmp    ecx,ebx
   140010397:	jae    0x1400103a7
   140010399:	mov    eax,ecx
   14001039b:	mov    BYTE PTR [rsp+rcx*1+0x70],0x20
   1400103a0:	inc    ecx
   1400103a2:	cmp    ecx,r8d
   1400103a5:	jbe    0x140010395
   1400103a7:	add    rdx,0x2
   1400103ab:	mov    al,BYTE PTR [rdx]
   1400103ad:	test   al,al
   1400103af:	jne    0x14001038b
   1400103b1:	mov    eax,DWORD PTR [rdi+0x4]
   1400103b4:	and    DWORD PTR [rsp+0x30],0x0
   1400103b9:	lea    r8,[rsp+0x70]
   1400103be:	mov    DWORD PTR [rsp+0x28],eax
   1400103c2:	lea    rax,[rbp+0x270]
   1400103c9:	mov    r9d,ebx
   1400103cc:	mov    edx,0x1
   1400103d1:	xor    ecx,ecx
   1400103d3:	mov    QWORD PTR [rsp+0x20],rax
   1400103d8:	call   0x1400213c4
   1400103dd:	and    DWORD PTR [rsp+0x40],0x0
   1400103e2:	mov    eax,DWORD PTR [rdi+0x4]
   1400103e5:	mov    rdx,QWORD PTR [rdi+0x220]
   1400103ec:	mov    DWORD PTR [rsp+0x38],eax
   1400103f0:	lea    rax,[rbp+0x70]
   1400103f4:	mov    DWORD PTR [rsp+0x30],ebx
   1400103f8:	mov    QWORD PTR [rsp+0x28],rax
   1400103fd:	lea    r9,[rsp+0x70]
   140010402:	mov    r8d,ebx
   140010405:	xor    ecx,ecx
   140010407:	mov    DWORD PTR [rsp+0x20],ebx
   14001040b:	call   0x1400211b4
   140010410:	and    DWORD PTR [rsp+0x40],0x0
   140010415:	mov    eax,DWORD PTR [rdi+0x4]
   140010418:	mov    rdx,QWORD PTR [rdi+0x220]
   14001041f:	mov    DWORD PTR [rsp+0x38],eax
   140010423:	lea    rax,[rbp+0x170]
   14001042a:	mov    DWORD PTR [rsp+0x30],ebx
   14001042e:	mov    QWORD PTR [rsp+0x28],rax
   140010433:	lea    r9,[rsp+0x70]
   140010438:	mov    r8d,0x200
   14001043e:	xor    ecx,ecx
   140010440:	mov    DWORD PTR [rsp+0x20],ebx
   140010444:	call   0x1400211b4
   140010449:	lea    r8,[rbp+0x70]
   14001044d:	lea    r9,[rbp+0x170]
   140010454:	sub    r8,rdi
   140010457:	lea    rdx,[rbp+0x270]
   14001045e:	lea    rcx,[rdi+0x19]
   140010462:	sub    r9,rdi
   140010465:	test   BYTE PTR [rdx],0x1
   140010468:	je     0x140010474
   14001046a:	or     BYTE PTR [rcx],0x10
   14001046d:	mov    al,BYTE PTR [r8+rcx*1-0x19]
   140010472:	jmp    0x140010481
   140010474:	test   BYTE PTR [rdx],0x2
   140010477:	je     0x140010489
   140010479:	or     BYTE PTR [rcx],0x20
   14001047c:	mov    al,BYTE PTR [r9+rcx*1-0x19]
   140010481:	mov    BYTE PTR [rcx+0x100],al
   140010487:	jmp    0x140010490
   140010489:	mov    BYTE PTR [rcx+0x100],0x0
   140010490:	inc    rcx
   140010493:	add    rdx,0x2
   140010497:	dec    rbx
   14001049a:	jne    0x140010465
   14001049c:	jmp    0x1400104dd
   14001049e:	xor    edx,edx
   1400104a0:	lea    rcx,[rdi+0x19]
   1400104a4:	lea    r8d,[rdx-0x61]
   1400104a8:	lea    eax,[r8+0x20]
   1400104ac:	cmp    eax,0x19
   1400104af:	ja     0x1400104b9
   1400104b1:	or     BYTE PTR [rcx],0x10
   1400104b4:	lea    eax,[rdx+0x20]
   1400104b7:	jmp    0x1400104c5
   1400104b9:	cmp    r8d,0x19
   1400104bd:	ja     0x1400104cd
   1400104bf:	or     BYTE PTR [rcx],0x20
   1400104c2:	lea    eax,[rdx-0x20]
   1400104c5:	mov    BYTE PTR [rcx+0x100],al
   1400104cb:	jmp    0x1400104d4
   1400104cd:	mov    BYTE PTR [rcx+0x100],0x0
   1400104d4:	inc    edx
   1400104d6:	inc    rcx
   1400104d9:	cmp    edx,ebx
   1400104db:	jb     0x1400104a4
   1400104dd:	mov    rcx,QWORD PTR [rbp+0x470]
   1400104e4:	xor    rcx,rsp
   1400104e7:	call   0x1400097d0
   1400104ec:	lea    r11,[rsp+0x580]
   1400104f4:	mov    rbx,QWORD PTR [r11+0x18]
   1400104f8:	mov    rdi,QWORD PTR [r11+0x20]
   1400104fc:	mov    rsp,r11
   1400104ff:	pop    rbp
   140010500:	ret    
   140010501:	int3   
   140010502:	int3   
   140010503:	int3   
   140010504:	mov    QWORD PTR [rsp+0x10],rbx
   140010509:	push   rdi
   14001050a:	sub    rsp,0x20
   14001050e:	call   0x140010d3c
   140010513:	mov    rdi,rax
   140010516:	mov    ecx,DWORD PTR [rip+0x35c3c]        # 0x140046158
   14001051c:	test   DWORD PTR [rax+0xc8],ecx
   140010522:	je     0x140010537
   140010524:	cmp    QWORD PTR [rax+0xc0],0x0
   14001052c:	je     0x140010537
   14001052e:	mov    rbx,QWORD PTR [rax+0xb8]
   140010535:	jmp    0x1400105a3
   140010537:	mov    ecx,0xd
   14001053c:	call   0x140019628
   140010541:	nop
   140010542:	mov    rbx,QWORD PTR [rdi+0xb8]
   140010549:	mov    QWORD PTR [rsp+0x30],rbx
   14001054e:	cmp    rbx,QWORD PTR [rip+0x357ab]        # 0x140045d00
   140010555:	je     0x140010599
   140010557:	test   rbx,rbx
   14001055a:	je     0x140010577
   14001055c:	lock dec DWORD PTR [rbx]
   14001055f:	jne    0x140010577
   140010561:	lea    rax,[rip+0x35478]        # 0x1400459e0
   140010568:	mov    rcx,QWORD PTR [rsp+0x30]
   14001056d:	cmp    rcx,rax
   140010570:	je     0x140010577
   140010572:	call   0x14000fb50
   140010577:	mov    rax,QWORD PTR [rip+0x35782]        # 0x140045d00
   14001057e:	mov    QWORD PTR [rdi+0xb8],rax
   140010585:	mov    rax,QWORD PTR [rip+0x35774]        # 0x140045d00
   14001058c:	mov    QWORD PTR [rsp+0x30],rax
   140010591:	lock inc DWORD PTR [rax]
   140010594:	mov    rbx,QWORD PTR [rsp+0x30]
   140010599:	mov    ecx,0xd
   14001059e:	call   0x140019844
   1400105a3:	test   rbx,rbx
   1400105a6:	jne    0x1400105b0
   1400105a8:	lea    ecx,[rbx+0x20]
   1400105ab:	call   0x140009f8c
   1400105b0:	mov    rax,rbx
   1400105b3:	mov    rbx,QWORD PTR [rsp+0x38]
   1400105b8:	add    rsp,0x20
   1400105bc:	pop    rdi
   1400105bd:	ret    
   1400105be:	int3   
   1400105bf:	int3   
   1400105c0:	sub    rsp,0x48
   1400105c4:	lea    rcx,[rsp+0x20]
   1400105c9:	xor    edx,edx
   1400105cb:	call   0x140007ff0
   1400105d0:	mov    rax,QWORD PTR [rsp+0x28]
   1400105d5:	cmp    DWORD PTR [rax+0x8],0x0
   1400105d9:	je     0x1400105e0
   1400105db:	mov    eax,DWORD PTR [rax+0x4]
   1400105de:	jmp    0x1400105e2
   1400105e0:	xor    eax,eax
   1400105e2:	cmp    BYTE PTR [rsp+0x38],0x0
   1400105e7:	je     0x1400105f5
   1400105e9:	mov    rcx,QWORD PTR [rsp+0x30]
   1400105ee:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400105f5:	add    rsp,0x48
   1400105f9:	ret    
   1400105fa:	int3   
   1400105fb:	int3   
   1400105fc:	mov    rax,rsp
   1400105ff:	mov    QWORD PTR [rax+0x8],rbx
   140010603:	mov    QWORD PTR [rax+0x10],rsi
   140010607:	mov    QWORD PTR [rax+0x18],rdi
   14001060b:	mov    QWORD PTR [rax+0x20],r14
   14001060f:	push   r15
   140010611:	sub    rsp,0x30
   140010615:	mov    edi,ecx
   140010617:	or     r15d,0xffffffff
   14001061b:	call   0x140010d3c
   140010620:	mov    rsi,rax
   140010623:	call   0x140010504
   140010628:	mov    rbx,QWORD PTR [rsi+0xb8]
   14001062f:	mov    ecx,edi
   140010631:	call   0x140010210
   140010636:	mov    r14d,eax
   140010639:	cmp    eax,DWORD PTR [rbx+0x4]
   14001063c:	je     0x14001081d
   140010642:	mov    ecx,0x228
   140010647:	call   0x14000fc4c
   14001064c:	mov    rbx,rax
   14001064f:	xor    edi,edi
   140010651:	test   rax,rax
   140010654:	je     0x140010822
   14001065a:	mov    rax,QWORD PTR [rsi+0xb8]
   140010661:	mov    rcx,rbx
   140010664:	lea    edx,[rdi+0x4]
   140010667:	lea    r8d,[rdx+0x7c]
   14001066b:	movups xmm0,XMMWORD PTR [rax]
   14001066e:	movups XMMWORD PTR [rcx],xmm0
   140010671:	movups xmm1,XMMWORD PTR [rax+0x10]
   140010675:	movups XMMWORD PTR [rcx+0x10],xmm1
   140010679:	movups xmm0,XMMWORD PTR [rax+0x20]
   14001067d:	movups XMMWORD PTR [rcx+0x20],xmm0
   140010681:	movups xmm1,XMMWORD PTR [rax+0x30]
   140010685:	movups XMMWORD PTR [rcx+0x30],xmm1
   140010689:	movups xmm0,XMMWORD PTR [rax+0x40]
   14001068d:	movups XMMWORD PTR [rcx+0x40],xmm0
   140010691:	movups xmm1,XMMWORD PTR [rax+0x50]
   140010695:	movups XMMWORD PTR [rcx+0x50],xmm1
   140010699:	movups xmm0,XMMWORD PTR [rax+0x60]
   14001069d:	movups XMMWORD PTR [rcx+0x60],xmm0
   1400106a1:	add    rcx,r8
   1400106a4:	movups xmm1,XMMWORD PTR [rax+0x70]
   1400106a8:	movups XMMWORD PTR [rcx-0x10],xmm1
   1400106ac:	add    rax,r8
   1400106af:	dec    rdx
   1400106b2:	jne    0x14001066b
   1400106b4:	movups xmm0,XMMWORD PTR [rax]
   1400106b7:	movups XMMWORD PTR [rcx],xmm0
   1400106ba:	movups xmm1,XMMWORD PTR [rax+0x10]
   1400106be:	movups XMMWORD PTR [rcx+0x10],xmm1
   1400106c2:	mov    rax,QWORD PTR [rax+0x20]
   1400106c6:	mov    QWORD PTR [rcx+0x20],rax
   1400106ca:	mov    DWORD PTR [rbx],edi
   1400106cc:	mov    rdx,rbx
   1400106cf:	mov    ecx,r14d
   1400106d2:	call   0x140010840
   1400106d7:	mov    r15d,eax
   1400106da:	test   eax,eax
   1400106dc:	jne    0x1400107f7
   1400106e2:	mov    rcx,QWORD PTR [rsi+0xb8]
   1400106e9:	lea    r14,[rip+0x352f0]        # 0x1400459e0
   1400106f0:	lock dec DWORD PTR [rcx]
   1400106f3:	jne    0x140010706
   1400106f5:	mov    rcx,QWORD PTR [rsi+0xb8]
   1400106fc:	cmp    rcx,r14
   1400106ff:	je     0x140010706
   140010701:	call   0x14000fb50
   140010706:	mov    QWORD PTR [rsi+0xb8],rbx
   14001070d:	lock inc DWORD PTR [rbx]
   140010710:	test   BYTE PTR [rsi+0xc8],0x2
   140010717:	jne    0x140010822
   14001071d:	test   BYTE PTR [rip+0x35a34],0x1        # 0x140046158
   140010724:	jne    0x140010822
   14001072a:	mov    esi,0xd
   14001072f:	mov    ecx,esi
   140010731:	call   0x140019628
   140010736:	nop
   140010737:	mov    eax,DWORD PTR [rbx+0x4]
   14001073a:	mov    DWORD PTR [rip+0x37290],eax        # 0x1400479d0
   140010740:	mov    eax,DWORD PTR [rbx+0x8]
   140010743:	mov    DWORD PTR [rip+0x3728b],eax        # 0x1400479d4
   140010749:	mov    rax,QWORD PTR [rbx+0x220]
   140010750:	mov    QWORD PTR [rip+0x37291],rax        # 0x1400479e8
   140010757:	mov    edx,edi
   140010759:	lea    r8,[rip+0xfffffffffffef8a0]        # 0x140000000
   140010760:	mov    DWORD PTR [rsp+0x20],edx
   140010764:	cmp    edx,0x5
   140010767:	jge    0x14001077e
   140010769:	movsxd rcx,edx
   14001076c:	movzx  eax,WORD PTR [rbx+rcx*2+0xc]
   140010771:	mov    WORD PTR [r8+rcx*2+0x479d8],ax
   14001077a:	inc    edx
   14001077c:	jmp    0x140010760
   14001077e:	mov    edx,edi
   140010780:	mov    DWORD PTR [rsp+0x20],edx
   140010784:	cmp    edx,0x101
   14001078a:	jge    0x14001079f
   14001078c:	movsxd rcx,edx
   14001078f:	mov    al,BYTE PTR [rcx+rbx*1+0x18]
   140010793:	mov    BYTE PTR [rcx+r8*1+0x457d0],al
   14001079b:	inc    edx
   14001079d:	jmp    0x140010780
   14001079f:	mov    DWORD PTR [rsp+0x20],edi
   1400107a3:	cmp    edi,0x100
   1400107a9:	jge    0x1400107c1
   1400107ab:	movsxd rcx,edi
   1400107ae:	mov    al,BYTE PTR [rcx+rbx*1+0x119]
   1400107b5:	mov    BYTE PTR [rcx+r8*1+0x458e0],al
   1400107bd:	inc    edi
   1400107bf:	jmp    0x14001079f
   1400107c1:	mov    rcx,QWORD PTR [rip+0x35538]        # 0x140045d00
   1400107c8:	or     eax,0xffffffff
   1400107cb:	lock xadd DWORD PTR [rcx],eax
   1400107cf:	dec    eax
   1400107d1:	jne    0x1400107e4
   1400107d3:	mov    rcx,QWORD PTR [rip+0x35526]        # 0x140045d00
   1400107da:	cmp    rcx,r14
   1400107dd:	je     0x1400107e4
   1400107df:	call   0x14000fb50
   1400107e4:	mov    QWORD PTR [rip+0x35515],rbx        # 0x140045d00
   1400107eb:	lock inc DWORD PTR [rbx]
   1400107ee:	mov    ecx,esi
   1400107f0:	call   0x140019844
   1400107f5:	jmp    0x140010822
   1400107f7:	cmp    eax,0xffffffff
   1400107fa:	jne    0x140010822
   1400107fc:	lea    r14,[rip+0x351dd]        # 0x1400459e0
   140010803:	cmp    rbx,r14
   140010806:	je     0x140010810
   140010808:	mov    rcx,rbx
   14001080b:	call   0x14000fb50
   140010810:	call   0x14000b9f0
   140010815:	mov    DWORD PTR [rax],0x16
   14001081b:	jmp    0x140010822
   14001081d:	xor    edi,edi
   14001081f:	mov    r15d,edi
   140010822:	mov    eax,r15d
   140010825:	mov    rbx,QWORD PTR [rsp+0x40]
   14001082a:	mov    rsi,QWORD PTR [rsp+0x48]
   14001082f:	mov    rdi,QWORD PTR [rsp+0x50]
   140010834:	mov    r14,QWORD PTR [rsp+0x58]
   140010839:	add    rsp,0x30
   14001083d:	pop    r15
   14001083f:	ret    
   140010840:	mov    QWORD PTR [rsp+0x18],rbx
   140010845:	mov    QWORD PTR [rsp+0x20],rbp
   14001084a:	push   rsi
   14001084b:	push   rdi
   14001084c:	push   r12
   14001084e:	push   r14
   140010850:	push   r15
   140010852:	sub    rsp,0x40
   140010856:	mov    rax,QWORD PTR [rip+0x34a13]        # 0x140045270
   14001085d:	xor    rax,rsp
   140010860:	mov    QWORD PTR [rsp+0x38],rax
   140010865:	mov    rbx,rdx
   140010868:	call   0x140010210
   14001086d:	xor    esi,esi
   14001086f:	mov    edi,eax
   140010871:	test   eax,eax
   140010873:	jne    0x140010882
   140010875:	mov    rcx,rbx
   140010878:	call   0x140010290
   14001087d:	jmp    0x140010ac6
   140010882:	lea    r12,[rip+0x35387]        # 0x140045c10
   140010889:	mov    ebp,esi
   14001088b:	mov    r15d,0x1
   140010891:	mov    rax,r12
   140010894:	cmp    DWORD PTR [rax],edi
   140010896:	je     0x1400109d4
   14001089c:	add    ebp,r15d
   14001089f:	add    rax,0x30
   1400108a3:	cmp    ebp,0x5
   1400108a6:	jb     0x140010894
   1400108a8:	lea    eax,[rdi-0xfde8]
   1400108ae:	cmp    eax,r15d
   1400108b1:	jbe    0x1400109cc
   1400108b7:	movzx  ecx,di
   1400108ba:	call   QWORD PTR [rip+0x249e8]        # 0x1400352a8
   1400108c0:	test   eax,eax
   1400108c2:	je     0x1400109cc
   1400108c8:	lea    rdx,[rsp+0x20]
   1400108cd:	mov    ecx,edi
   1400108cf:	call   QWORD PTR [rip+0x249eb]        # 0x1400352c0
   1400108d5:	test   eax,eax
   1400108d7:	je     0x1400109c0
   1400108dd:	lea    rcx,[rbx+0x18]
   1400108e1:	xor    edx,edx
   1400108e3:	mov    r8d,0x101
   1400108e9:	call   0x140009800
   1400108ee:	mov    DWORD PTR [rbx+0x4],edi
   1400108f1:	mov    QWORD PTR [rbx+0x220],rsi
   1400108f8:	cmp    DWORD PTR [rsp+0x20],r15d
   1400108fd:	jbe    0x1400109a9
   140010903:	lea    rdx,[rsp+0x26]
   140010908:	cmp    BYTE PTR [rsp+0x26],sil
   14001090d:	je     0x140010948
   14001090f:	cmp    BYTE PTR [rdx+0x1],sil
   140010913:	je     0x140010948
   140010915:	movzx  edi,BYTE PTR [rdx+0x1]
   140010919:	movzx  r8d,BYTE PTR [rdx]
   14001091d:	cmp    r8d,edi
   140010920:	ja     0x14001093f
   140010922:	lea    ecx,[r8+0x1]
   140010926:	lea    rax,[rbx+0x18]
   14001092a:	add    rax,rcx
   14001092d:	sub    edi,r8d
   140010930:	lea    ecx,[r15+rdi*1]
   140010934:	or     BYTE PTR [rax],0x4
   140010937:	add    rax,r15
   14001093a:	sub    rcx,r15
   14001093d:	jne    0x140010934
   14001093f:	add    rdx,0x2
   140010943:	cmp    BYTE PTR [rdx],sil
   140010946:	jne    0x14001090f
   140010948:	lea    rax,[rbx+0x1a]
   14001094c:	mov    ecx,0xfe
   140010951:	or     BYTE PTR [rax],0x8
   140010954:	add    rax,r15
   140010957:	sub    rcx,r15
   14001095a:	jne    0x140010951
   14001095c:	mov    ecx,DWORD PTR [rbx+0x4]
   14001095f:	sub    ecx,0x3a4
   140010965:	je     0x140010995
   140010967:	sub    ecx,0x4
   14001096a:	je     0x14001098c
   14001096c:	sub    ecx,0xd
   14001096f:	je     0x140010983
   140010971:	dec    ecx
   140010973:	je     0x14001097a
   140010975:	mov    rax,rsi
   140010978:	jmp    0x14001099c
   14001097a:	mov    rax,QWORD PTR [rip+0x278f7]        # 0x140038278
   140010981:	jmp    0x14001099c
   140010983:	mov    rax,QWORD PTR [rip+0x278e6]        # 0x140038270
   14001098a:	jmp    0x14001099c
   14001098c:	mov    rax,QWORD PTR [rip+0x278d5]        # 0x140038268
   140010993:	jmp    0x14001099c
   140010995:	mov    rax,QWORD PTR [rip+0x278c4]        # 0x140038260
   14001099c:	mov    QWORD PTR [rbx+0x220],rax
   1400109a3:	mov    DWORD PTR [rbx+0x8],r15d
   1400109a7:	jmp    0x1400109ac
   1400109a9:	mov    DWORD PTR [rbx+0x8],esi
   1400109ac:	lea    rdi,[rbx+0xc]
   1400109b0:	movzx  eax,si
   1400109b3:	mov    ecx,0x6
   1400109b8:	rep stos WORD PTR es:[rdi],ax
   1400109bb:	jmp    0x140010abe
   1400109c0:	cmp    DWORD PTR [rip+0x3702a],esi        # 0x1400479f0
   1400109c6:	jne    0x140010875
   1400109cc:	or     eax,0xffffffff
   1400109cf:	jmp    0x140010ac8
   1400109d4:	lea    rcx,[rbx+0x18]
   1400109d8:	xor    edx,edx
   1400109da:	mov    r8d,0x101
   1400109e0:	call   0x140009800
   1400109e5:	mov    eax,ebp
   1400109e7:	lea    r9,[r12+0x10]
   1400109ec:	lea    r11,[rax+rax*2]
   1400109f0:	lea    r14,[rip+0x35211]        # 0x140045c08
   1400109f7:	mov    ebp,0x4
   1400109fc:	shl    r11,0x4
   140010a00:	add    r9,r11
   140010a03:	mov    rdx,r9
   140010a06:	cmp    BYTE PTR [r9],sil
   140010a09:	je     0x140010a4b
   140010a0b:	cmp    BYTE PTR [rdx+0x1],sil
   140010a0f:	je     0x140010a4b
   140010a11:	movzx  r8d,BYTE PTR [rdx]
   140010a15:	movzx  eax,BYTE PTR [rdx+0x1]
   140010a19:	cmp    r8d,eax
   140010a1c:	ja     0x140010a42
   140010a1e:	lea    r10d,[r8+0x1]
   140010a22:	cmp    r10d,0x101
   140010a29:	jae    0x140010a42
   140010a2b:	mov    al,BYTE PTR [r14]
   140010a2e:	add    r8d,r15d
   140010a31:	or     BYTE PTR [r10+rbx*1+0x18],al
   140010a36:	movzx  eax,BYTE PTR [rdx+0x1]
   140010a3a:	add    r10d,r15d
   140010a3d:	cmp    r8d,eax
   140010a40:	jbe    0x140010a22
   140010a42:	add    rdx,0x2
   140010a46:	cmp    BYTE PTR [rdx],sil
   140010a49:	jne    0x140010a0b
   140010a4b:	add    r9,0x8
   140010a4f:	add    r14,r15
   140010a52:	sub    rbp,r15
   140010a55:	jne    0x140010a03
   140010a57:	mov    DWORD PTR [rbx+0x4],edi
   140010a5a:	mov    DWORD PTR [rbx+0x8],r15d
   140010a5e:	sub    edi,0x3a4
   140010a64:	je     0x140010a8f
   140010a66:	sub    edi,0x4
   140010a69:	je     0x140010a86
   140010a6b:	sub    edi,0xd
   140010a6e:	je     0x140010a7d
   140010a70:	dec    edi
   140010a72:	jne    0x140010a96
   140010a74:	mov    rsi,QWORD PTR [rip+0x277fd]        # 0x140038278
   140010a7b:	jmp    0x140010a96
   140010a7d:	mov    rsi,QWORD PTR [rip+0x277ec]        # 0x140038270
   140010a84:	jmp    0x140010a96
   140010a86:	mov    rsi,QWORD PTR [rip+0x277db]        # 0x140038268
   140010a8d:	jmp    0x140010a96
   140010a8f:	mov    rsi,QWORD PTR [rip+0x277ca]        # 0x140038260
   140010a96:	sub    r11,rbx
   140010a99:	mov    QWORD PTR [rbx+0x220],rsi
   140010aa0:	lea    rcx,[rbx+0xc]
   140010aa4:	lea    rdi,[r11+r12*1]
   140010aa8:	mov    edx,0x6
   140010aad:	movzx  eax,WORD PTR [rdi+rcx*1-0x8]
   140010ab2:	mov    WORD PTR [rcx],ax
   140010ab5:	lea    rcx,[rcx+0x2]
   140010ab9:	sub    rdx,r15
   140010abc:	jne    0x140010aad
   140010abe:	mov    rcx,rbx
   140010ac1:	call   0x140010320
   140010ac6:	xor    eax,eax
   140010ac8:	mov    rcx,QWORD PTR [rsp+0x38]
   140010acd:	xor    rcx,rsp
   140010ad0:	call   0x1400097d0
   140010ad5:	lea    r11,[rsp+0x40]
   140010ada:	mov    rbx,QWORD PTR [r11+0x40]
   140010ade:	mov    rbp,QWORD PTR [r11+0x48]
   140010ae2:	mov    rsp,r11
   140010ae5:	pop    r15
   140010ae7:	pop    r14
   140010ae9:	pop    r12
   140010aeb:	pop    rdi
   140010aec:	pop    rsi
   140010aed:	ret    
   140010aee:	int3   
   140010aef:	int3   
   140010af0:	jmp    0x140010b00
   140010af5:	int3   
   140010af6:	int3   
   140010af7:	int3   
   140010af8:	jmp    0x140010b00
   140010afd:	int3   
   140010afe:	int3   
   140010aff:	int3   
   140010b00:	mov    WORD PTR [rsp+0x8],cx
   140010b05:	push   rbx
   140010b06:	sub    rsp,0x20
   140010b0a:	mov    eax,0xffff
   140010b0f:	movzx  ebx,dx
   140010b12:	cmp    cx,ax
   140010b15:	jne    0x140010b1b
   140010b17:	xor    eax,eax
   140010b19:	jmp    0x140010b60
   140010b1b:	mov    eax,0x100
   140010b20:	cmp    cx,ax
   140010b23:	jae    0x140010b35
   140010b25:	mov    rax,QWORD PTR [rip+0x359f4]        # 0x140046520
   140010b2c:	movzx  ecx,cx
   140010b2f:	movzx  eax,WORD PTR [rax+rcx*2]
   140010b33:	jmp    0x140010b5b
   140010b35:	mov    ecx,0x1
   140010b3a:	lea    r9,[rsp+0x40]
   140010b3f:	lea    rdx,[rsp+0x30]
   140010b44:	mov    r8d,ecx
   140010b47:	call   QWORD PTR [rip+0x2477b]        # 0x1400352c8
   140010b4d:	xor    ecx,ecx
   140010b4f:	test   eax,eax
   140010b51:	je     0x140010b58
   140010b53:	movzx  ecx,WORD PTR [rsp+0x40]
   140010b58:	movzx  eax,cx
   140010b5b:	movzx  ecx,bx
   140010b5e:	and    eax,ecx
   140010b60:	add    rsp,0x20
   140010b64:	pop    rbx
   140010b65:	ret    
   140010b66:	int3   
   140010b67:	int3   
   140010b68:	mov    QWORD PTR [rsp+0x8],rbx
   140010b6d:	mov    QWORD PTR [rsp+0x10],rsi
   140010b72:	push   rdi
   140010b73:	sub    rsp,0x30
   140010b77:	movsxd rax,r9d
   140010b7a:	mov    rbx,r8
   140010b7d:	mov    edi,edx
   140010b7f:	mov    rsi,rcx
   140010b82:	test   r9d,r9d
   140010b85:	jle    0x140010b92
   140010b87:	mov    rdx,rax
   140010b8a:	mov    rcx,rbx
   140010b8d:	call   0x140021484
   140010b92:	mov    r8,rbx
   140010b95:	mov    edx,edi
   140010b97:	mov    r9d,eax
   140010b9a:	mov    rcx,rsi
   140010b9d:	mov    rbx,QWORD PTR [rsp+0x40]
   140010ba2:	mov    rsi,QWORD PTR [rsp+0x48]
   140010ba7:	add    rsp,0x30
   140010bab:	pop    rdi
   140010bac:	jmp    0x14001f1c4
   140010bb1:	int3   
   140010bb2:	int3   
   140010bb3:	int3   
   140010bb4:	mov    eax,DWORD PTR [rip+0x3514e]        # 0x140045d08
   140010bba:	ret    
   140010bbb:	int3   
   140010bbc:	rex.W jmp QWORD PTR [rip+0x24715]        # 0x1400352d8
   140010bc3:	int3   
   140010bc4:	rex.W jmp QWORD PTR [rip+0x2453d]        # 0x140035108
   140010bcb:	int3   
   140010bcc:	test   rcx,rcx
   140010bcf:	je     0x140010cfe
   140010bd5:	mov    QWORD PTR [rsp+0x10],rbx
   140010bda:	push   rdi
   140010bdb:	sub    rsp,0x20
   140010bdf:	mov    rbx,rcx
   140010be2:	mov    rcx,QWORD PTR [rcx+0x38]
   140010be6:	test   rcx,rcx
   140010be9:	je     0x140010bf0
   140010beb:	call   0x14000fb50
   140010bf0:	mov    rcx,QWORD PTR [rbx+0x48]
   140010bf4:	test   rcx,rcx
   140010bf7:	je     0x140010bfe
   140010bf9:	call   0x14000fb50
   140010bfe:	mov    rcx,QWORD PTR [rbx+0x58]
   140010c02:	test   rcx,rcx
   140010c05:	je     0x140010c0c
   140010c07:	call   0x14000fb50
   140010c0c:	mov    rcx,QWORD PTR [rbx+0x68]
   140010c10:	test   rcx,rcx
   140010c13:	je     0x140010c1a
   140010c15:	call   0x14000fb50
   140010c1a:	mov    rcx,QWORD PTR [rbx+0x70]
   140010c1e:	test   rcx,rcx
   140010c21:	je     0x140010c28
   140010c23:	call   0x14000fb50
   140010c28:	mov    rcx,QWORD PTR [rbx+0x78]
   140010c2c:	test   rcx,rcx
   140010c2f:	je     0x140010c36
   140010c31:	call   0x14000fb50
   140010c36:	mov    rcx,QWORD PTR [rbx+0x80]
   140010c3d:	test   rcx,rcx
   140010c40:	je     0x140010c47
   140010c42:	call   0x14000fb50
   140010c47:	mov    rcx,QWORD PTR [rbx+0xa0]
   140010c4e:	lea    rax,[rip+0x28b6b]        # 0x1400397c0
   140010c55:	cmp    rcx,rax
   140010c58:	je     0x140010c5f
   140010c5a:	call   0x14000fb50
   140010c5f:	mov    edi,0xd
   140010c64:	mov    ecx,edi
   140010c66:	call   0x140019628
   140010c6b:	nop
   140010c6c:	mov    rcx,QWORD PTR [rbx+0xb8]
   140010c73:	mov    QWORD PTR [rsp+0x30],rcx
   140010c78:	test   rcx,rcx
   140010c7b:	je     0x140010c99
   140010c7d:	lock dec DWORD PTR [rcx]
   140010c80:	jne    0x140010c99
   140010c82:	lea    rax,[rip+0x34d57]        # 0x1400459e0
   140010c89:	mov    rcx,QWORD PTR [rsp+0x30]
   140010c8e:	cmp    rcx,rax
   140010c91:	je     0x140010c99
   140010c93:	call   0x14000fb50
   140010c98:	nop
   140010c99:	mov    ecx,edi
   140010c9b:	call   0x140019844
   140010ca0:	mov    ecx,0xc
   140010ca5:	call   0x140019628
   140010caa:	nop
   140010cab:	mov    rdi,QWORD PTR [rbx+0xc0]
   140010cb2:	test   rdi,rdi
   140010cb5:	je     0x140010ce2
   140010cb7:	mov    rcx,rdi
   140010cba:	call   0x14001002c
   140010cbf:	cmp    rdi,QWORD PTR [rip+0x3531a]        # 0x140045fe0
   140010cc6:	je     0x140010ce2
   140010cc8:	lea    rax,[rip+0x35321]        # 0x140045ff0
   140010ccf:	cmp    rdi,rax
   140010cd2:	je     0x140010ce2
   140010cd4:	cmp    DWORD PTR [rdi],0x0
   140010cd7:	jne    0x140010ce2
   140010cd9:	mov    rcx,rdi
   140010cdc:	call   0x14000fe94
   140010ce1:	nop
   140010ce2:	mov    ecx,0xc
   140010ce7:	call   0x140019844
   140010cec:	mov    rcx,rbx
   140010cef:	call   0x14000fb50
   140010cf4:	mov    rbx,QWORD PTR [rsp+0x38]
   140010cf9:	add    rsp,0x20
   140010cfd:	pop    rdi
   140010cfe:	ret    
   140010cff:	int3   
   140010d00:	rex push rbx
   140010d02:	sub    rsp,0x20
   140010d06:	mov    rbx,rcx
   140010d09:	mov    ecx,DWORD PTR [rip+0x34ff9]        # 0x140045d08
   140010d0f:	cmp    ecx,0xffffffff
   140010d12:	je     0x140010d36
   140010d14:	test   rbx,rbx
   140010d17:	jne    0x140010d27
   140010d19:	call   0x140019a90
   140010d1e:	mov    ecx,DWORD PTR [rip+0x34fe4]        # 0x140045d08
   140010d24:	mov    rbx,rax
   140010d27:	xor    edx,edx
   140010d29:	call   0x140019aac
   140010d2e:	mov    rcx,rbx
   140010d31:	call   0x140010bcc
   140010d36:	add    rsp,0x20
   140010d3a:	pop    rbx
   140010d3b:	ret    
   140010d3c:	rex push rbx
   140010d3e:	sub    rsp,0x20
   140010d42:	call   0x140010d60
   140010d47:	mov    rbx,rax
   140010d4a:	test   rax,rax
   140010d4d:	jne    0x140010d57
   140010d4f:	lea    ecx,[rax+0x10]
   140010d52:	call   0x140009f8c
   140010d57:	mov    rax,rbx
   140010d5a:	add    rsp,0x20
   140010d5e:	pop    rbx
   140010d5f:	ret    
   140010d60:	mov    QWORD PTR [rsp+0x8],rbx
   140010d65:	push   rdi
   140010d66:	sub    rsp,0x20
   140010d6a:	call   QWORD PTR [rip+0x24478]        # 0x1400351e8
   140010d70:	mov    ecx,DWORD PTR [rip+0x34f92]        # 0x140045d08
   140010d76:	mov    edi,eax
   140010d78:	call   0x140019a90
   140010d7d:	mov    rbx,rax
   140010d80:	test   rax,rax
   140010d83:	jne    0x140010dcc
   140010d85:	lea    ecx,[rax+0x1]
   140010d88:	mov    edx,0x478
   140010d8d:	call   0x14000fbcc
   140010d92:	mov    rbx,rax
   140010d95:	test   rax,rax
   140010d98:	je     0x140010dcc
   140010d9a:	mov    ecx,DWORD PTR [rip+0x34f68]        # 0x140045d08
   140010da0:	mov    rdx,rax
   140010da3:	call   0x140019aac
   140010da8:	mov    rcx,rbx
   140010dab:	test   eax,eax
   140010dad:	je     0x140010dc5
   140010daf:	xor    edx,edx
   140010db1:	call   0x140010de4
   140010db6:	call   QWORD PTR [rip+0x2434c]        # 0x140035108
   140010dbc:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   140010dc1:	mov    DWORD PTR [rbx],eax
   140010dc3:	jmp    0x140010dcc
   140010dc5:	call   0x14000fb50
   140010dca:	xor    ebx,ebx
   140010dcc:	mov    ecx,edi
   140010dce:	call   QWORD PTR [rip+0x244fc]        # 0x1400352d0
   140010dd4:	mov    rax,rbx
   140010dd7:	mov    rbx,QWORD PTR [rsp+0x30]
   140010ddc:	add    rsp,0x20
   140010de0:	pop    rdi
   140010de1:	ret    
   140010de2:	int3   
   140010de3:	int3   
   140010de4:	mov    QWORD PTR [rsp+0x8],rbx
   140010de9:	push   rdi
   140010dea:	sub    rsp,0x20
   140010dee:	mov    rdi,rdx
   140010df1:	mov    rbx,rcx
   140010df4:	lea    rax,[rip+0x289c5]        # 0x1400397c0
   140010dfb:	mov    QWORD PTR [rcx+0xa0],rax
   140010e02:	and    DWORD PTR [rcx+0x10],0x0
   140010e06:	mov    DWORD PTR [rcx+0x1c],0x1
   140010e0d:	mov    DWORD PTR [rcx+0xc8],0x1
   140010e17:	mov    eax,0x43
   140010e1c:	mov    WORD PTR [rcx+0x164],ax
   140010e23:	mov    WORD PTR [rcx+0x26a],ax
   140010e2a:	lea    rax,[rip+0x34baf]        # 0x1400459e0
   140010e31:	mov    QWORD PTR [rcx+0xb8],rax
   140010e38:	and    QWORD PTR [rcx+0x470],0x0
   140010e40:	mov    ecx,0xd
   140010e45:	call   0x140019628
   140010e4a:	nop
   140010e4b:	mov    rax,QWORD PTR [rbx+0xb8]
   140010e52:	lock inc DWORD PTR [rax]
   140010e55:	mov    ecx,0xd
   140010e5a:	call   0x140019844
   140010e5f:	mov    ecx,0xc
   140010e64:	call   0x140019628
   140010e69:	nop
   140010e6a:	mov    QWORD PTR [rbx+0xc0],rdi
   140010e71:	test   rdi,rdi
   140010e74:	jne    0x140010e84
   140010e76:	mov    rax,QWORD PTR [rip+0x35163]        # 0x140045fe0
   140010e7d:	mov    QWORD PTR [rbx+0xc0],rax
   140010e84:	mov    rcx,QWORD PTR [rbx+0xc0]
   140010e8b:	call   0x14000fe08
   140010e90:	nop
   140010e91:	mov    ecx,0xc
   140010e96:	call   0x140019844
   140010e9b:	mov    rbx,QWORD PTR [rsp+0x30]
   140010ea0:	add    rsp,0x20
   140010ea4:	pop    rdi
   140010ea5:	ret    
   140010ea6:	int3   
   140010ea7:	int3   
   140010ea8:	rex push rbx
   140010eaa:	sub    rsp,0x20
   140010eae:	call   0x14000a0f4
   140010eb3:	call   0x1400197e0
   140010eb8:	test   eax,eax
   140010eba:	je     0x140010f1a
   140010ebc:	lea    rcx,[rip+0xfffffffffffffd09]        # 0x140010bcc
   140010ec3:	call   0x140019a58
   140010ec8:	mov    DWORD PTR [rip+0x34e3a],eax        # 0x140045d08
   140010ece:	cmp    eax,0xffffffff
   140010ed1:	je     0x140010f1a
   140010ed3:	mov    edx,0x478
   140010ed8:	mov    ecx,0x1
   140010edd:	call   0x14000fbcc
   140010ee2:	mov    rbx,rax
   140010ee5:	test   rax,rax
   140010ee8:	je     0x140010f1a
   140010eea:	mov    ecx,DWORD PTR [rip+0x34e18]        # 0x140045d08
   140010ef0:	mov    rdx,rax
   140010ef3:	call   0x140019aac
   140010ef8:	test   eax,eax
   140010efa:	je     0x140010f1a
   140010efc:	xor    edx,edx
   140010efe:	mov    rcx,rbx
   140010f01:	call   0x140010de4
   140010f06:	call   QWORD PTR [rip+0x241fc]        # 0x140035108
   140010f0c:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   140010f11:	mov    DWORD PTR [rbx],eax
   140010f13:	mov    eax,0x1
   140010f18:	jmp    0x140010f21
   140010f1a:	call   0x140010f28
   140010f1f:	xor    eax,eax
   140010f21:	add    rsp,0x20
   140010f25:	pop    rbx
   140010f26:	ret    
   140010f27:	int3   
   140010f28:	sub    rsp,0x28
   140010f2c:	mov    ecx,DWORD PTR [rip+0x34dd6]        # 0x140045d08
   140010f32:	cmp    ecx,0xffffffff
   140010f35:	je     0x140010f43
   140010f37:	call   0x140019a74
   140010f3c:	or     DWORD PTR [rip+0x34dc5],0xffffffff        # 0x140045d08
   140010f43:	add    rsp,0x28
   140010f47:	jmp    0x140019698
   140010f4c:	xor    eax,eax
   140010f4e:	ret    
   140010f4f:	int3   
   140010f50:	rex push rdi
   140010f52:	sub    rsp,0x20
   140010f56:	lea    rdi,[rip+0x35093]        # 0x140045ff0
   140010f5d:	cmp    QWORD PTR [rip+0x3507c],rdi        # 0x140045fe0
   140010f64:	je     0x140010f91
   140010f66:	mov    ecx,0xc
   140010f6b:	call   0x140019628
   140010f70:	nop
   140010f71:	mov    rdx,rdi
   140010f74:	lea    rcx,[rip+0x35065]        # 0x140045fe0
   140010f7b:	call   0x140010148
   140010f80:	mov    QWORD PTR [rip+0x35059],rax        # 0x140045fe0
   140010f87:	mov    ecx,0xc
   140010f8c:	call   0x140019844
   140010f91:	add    rsp,0x20
   140010f95:	pop    rdi
   140010f96:	ret    
   140010f97:	int3   
   140010f98:	mov    eax,DWORD PTR [rip+0x37eee]        # 0x140048e8c
   140010f9e:	ret    
   140010f9f:	int3   
   140010fa0:	lea    rax,[rip+0x37ee1]        # 0x140048e88
   140010fa7:	ret    
   140010fa8:	mov    QWORD PTR [rsp+0x8],rbx
   140010fad:	mov    QWORD PTR [rsp+0x10],rsi
   140010fb2:	push   rdi
   140010fb3:	sub    rsp,0x30
   140010fb7:	mov    rdi,rcx
   140010fba:	test   rcx,rcx
   140010fbd:	jne    0x140010fd1
   140010fbf:	xor    eax,eax
   140010fc1:	mov    rbx,QWORD PTR [rsp+0x40]
   140010fc6:	mov    rsi,QWORD PTR [rsp+0x48]
   140010fcb:	add    rsp,0x30
   140010fcf:	pop    rdi
   140010fd0:	ret    
   140010fd1:	mov    edx,0x55
   140010fd6:	call   0x140021484
   140010fdb:	mov    rsi,rax
   140010fde:	cmp    rax,0x55
   140010fe2:	jae    0x140010fbf
   140010fe4:	lea    rcx,[rax*2+0x2]
   140010fec:	call   0x14000fc4c
   140010ff1:	mov    rbx,rax
   140010ff4:	test   rax,rax
   140010ff7:	je     0x140010fbf
   140010ff9:	lea    rdx,[rsi+0x1]
   140010ffd:	mov    r8,rdi
   140011000:	mov    rcx,rax
   140011003:	mov    r9,rdx
   140011006:	call   0x14000820c
   14001100b:	test   eax,eax
   14001100d:	jne    0x140011014
   14001100f:	mov    rax,rbx
   140011012:	jmp    0x140010fc1
   140011014:	and    QWORD PTR [rsp+0x20],0x0
   14001101a:	xor    r9d,r9d
   14001101d:	xor    r8d,r8d
   140011020:	xor    edx,edx
   140011022:	xor    ecx,ecx
   140011024:	call   0x14000b908
   140011029:	int3   
   14001102a:	int3   
   14001102b:	int3   
   14001102c:	jmp    0x1400113c8
   140011031:	int3   
   140011032:	int3   
   140011033:	int3   
   140011034:	jmp    0x140011814
   140011039:	int3   
   14001103a:	int3   
   14001103b:	int3   
   14001103c:	jmp    0x1400118b0
   140011041:	int3   
   140011042:	int3   
   140011043:	int3   
   140011044:	mov    QWORD PTR [rsp+0x8],rbx
   140011049:	mov    QWORD PTR [rsp+0x10],rbp
   14001104e:	mov    QWORD PTR [rsp+0x18],rsi
   140011053:	push   rdi
   140011054:	sub    rsp,0x30
   140011058:	mov    rbx,r8
   14001105b:	mov    rdi,rdx
   14001105e:	mov    rsi,rcx
   140011061:	call   0x14000781c
   140011066:	xor    ebp,ebp
   140011068:	test   eax,eax
   14001106a:	jne    0x1400110d1
   14001106c:	lea    rax,[rbx+0x80]
   140011073:	cmp    WORD PTR [rax],bp
   140011076:	je     0x140011093
   140011078:	lea    r9,[rip+0x277b1]        # 0x140038830
   14001107f:	lea    r8d,[rbp+0x2]
   140011083:	mov    rdx,rdi
   140011086:	mov    rcx,rsi
   140011089:	mov    QWORD PTR [rsp+0x20],rax
   14001108e:	call   0x140011a4c
   140011093:	lea    rax,[rbx+0x100]
   14001109a:	cmp    WORD PTR [rax],bp
   14001109d:	je     0x1400110bc
   14001109f:	lea    r9,[rip+0x2778e]        # 0x140038834
   1400110a6:	mov    r8d,0x2
   1400110ac:	mov    rdx,rdi
   1400110af:	mov    rcx,rsi
   1400110b2:	mov    QWORD PTR [rsp+0x20],rax
   1400110b7:	call   0x140011a4c
   1400110bc:	mov    rbx,QWORD PTR [rsp+0x40]
   1400110c1:	mov    rbp,QWORD PTR [rsp+0x48]
   1400110c6:	mov    rsi,QWORD PTR [rsp+0x50]
   1400110cb:	add    rsp,0x30
   1400110cf:	pop    rdi
   1400110d0:	ret    
   1400110d1:	xor    r9d,r9d
   1400110d4:	xor    r8d,r8d
   1400110d7:	xor    edx,edx
   1400110d9:	xor    ecx,ecx
   1400110db:	mov    QWORD PTR [rsp+0x20],rbp
   1400110e0:	call   0x14000b908
   1400110e5:	int3   
   1400110e6:	int3   
   1400110e7:	int3   
   1400110e8:	mov    QWORD PTR [rsp+0x8],rbx
   1400110ed:	mov    QWORD PTR [rsp+0x10],rbp
   1400110f2:	mov    QWORD PTR [rsp+0x18],rsi
   1400110f7:	push   rdi
   1400110f8:	push   r14
   1400110fa:	push   r15
   1400110fc:	sub    rsp,0x30
   140011100:	mov    rbx,rdx
   140011103:	mov    r8d,0x1ca
   140011109:	xor    edx,edx
   14001110b:	mov    rsi,rcx
   14001110e:	call   0x140009800
   140011113:	xor    r15d,r15d
   140011116:	cmp    WORD PTR [rbx],r15w
   14001111a:	jne    0x140011123
   14001111c:	xor    eax,eax
   14001111e:	jmp    0x140011230
   140011123:	cmp    WORD PTR [rbx],0x2e
   140011127:	jne    0x14001115a
   140011129:	lea    r8,[rbx+0x2]
   14001112d:	cmp    WORD PTR [r8],r15w
   140011131:	je     0x14001115a
   140011133:	mov    edx,0x10
   140011138:	lea    rcx,[rsi+0x100]
   14001113f:	lea    r9d,[rdx-0x1]
   140011143:	call   0x14000820c
   140011148:	test   eax,eax
   14001114a:	jne    0x140011249
   140011150:	mov    WORD PTR [rsi+0x11e],r15w
   140011158:	jmp    0x14001111c
   14001115a:	mov    ebp,r15d
   14001115d:	lea    rdx,[rip+0x276c4]        # 0x140038828
   140011164:	mov    rcx,rbx
   140011167:	call   0x140021ae4
   14001116c:	test   rax,rax
   14001116f:	je     0x14001122d
   140011175:	lea    r14,[rbx+rax*2]
   140011179:	movzx  edi,WORD PTR [r14]
   14001117d:	test   ebp,ebp
   14001117f:	jne    0x1400111af
   140011181:	cmp    rax,0x40
   140011185:	jae    0x14001122d
   14001118b:	cmp    di,0x2e
   14001118f:	je     0x14001122d
   140011195:	lea    edx,[rbp+0x40]
   140011198:	mov    r9,rax
   14001119b:	mov    r8,rbx
   14001119e:	mov    rcx,rsi
   1400111a1:	call   0x14000820c
   1400111a6:	test   eax,eax
   1400111a8:	je     0x14001120f
   1400111aa:	jmp    0x14001125e
   1400111af:	cmp    ebp,0x1
   1400111b2:	jne    0x1400111de
   1400111b4:	cmp    rax,0x40
   1400111b8:	jae    0x14001122d
   1400111ba:	cmp    di,0x5f
   1400111be:	je     0x14001122d
   1400111c0:	lea    rcx,[rsi+0x80]
   1400111c7:	lea    edx,[rbp+0x3f]
   1400111ca:	mov    r9,rax
   1400111cd:	mov    r8,rbx
   1400111d0:	call   0x14000820c
   1400111d5:	test   eax,eax
   1400111d7:	je     0x14001120f
   1400111d9:	jmp    0x140011273
   1400111de:	cmp    ebp,0x2
   1400111e1:	jne    0x14001122d
   1400111e3:	cmp    rax,0x10
   1400111e7:	jae    0x14001122d
   1400111e9:	test   di,di
   1400111ec:	je     0x1400111f4
   1400111ee:	cmp    di,0x2c
   1400111f2:	jne    0x14001122d
   1400111f4:	lea    rcx,[rsi+0x100]
   1400111fb:	mov    r9,rax
   1400111fe:	mov    r8,rbx
   140011201:	mov    edx,0x10
   140011206:	call   0x14000820c
   14001120b:	test   eax,eax
   14001120d:	jne    0x140011288
   14001120f:	cmp    di,0x2c
   140011213:	je     0x14001111c
   140011219:	test   di,di
   14001121c:	je     0x14001111c
   140011222:	lea    rbx,[r14+0x2]
   140011226:	inc    ebp
   140011228:	jmp    0x14001115d
   14001122d:	or     eax,0xffffffff
   140011230:	mov    rbx,QWORD PTR [rsp+0x50]
   140011235:	mov    rbp,QWORD PTR [rsp+0x58]
   14001123a:	mov    rsi,QWORD PTR [rsp+0x60]
   14001123f:	add    rsp,0x30
   140011243:	pop    r15
   140011245:	pop    r14
   140011247:	pop    rdi
   140011248:	ret    
   140011249:	xor    r9d,r9d
   14001124c:	xor    r8d,r8d
   14001124f:	xor    edx,edx
   140011251:	xor    ecx,ecx
   140011253:	mov    QWORD PTR [rsp+0x20],r15
   140011258:	call   0x14000b908
   14001125d:	int3   
   14001125e:	xor    r9d,r9d
   140011261:	xor    r8d,r8d
   140011264:	xor    edx,edx
   140011266:	xor    ecx,ecx
   140011268:	mov    QWORD PTR [rsp+0x20],r15
   14001126d:	call   0x14000b908
   140011272:	int3   
   140011273:	xor    r9d,r9d
   140011276:	xor    r8d,r8d
   140011279:	xor    edx,edx
   14001127b:	xor    ecx,ecx
   14001127d:	mov    QWORD PTR [rsp+0x20],r15
   140011282:	call   0x14000b908
   140011287:	int3   
   140011288:	xor    r9d,r9d
   14001128b:	xor    r8d,r8d
   14001128e:	xor    edx,edx
   140011290:	xor    ecx,ecx
   140011292:	mov    QWORD PTR [rsp+0x20],r15
   140011297:	call   0x14000b908
   14001129c:	int3   
   14001129d:	int3   
   14001129e:	int3   
   14001129f:	int3   
   1400112a0:	rex push rbx
   1400112a2:	sub    rsp,0x20
   1400112a6:	mov    ebx,ecx
   1400112a8:	call   0x140010d3c
   1400112ad:	mov    r8d,DWORD PTR [rax+0xc8]
   1400112b4:	mov    edx,r8d
   1400112b7:	and    dl,0x2
   1400112ba:	neg    dl
   1400112bc:	sbb    ecx,ecx
   1400112be:	cmp    ebx,0xffffffff
   1400112c1:	je     0x1400112f9
   1400112c3:	test   ebx,ebx
   1400112c5:	je     0x140011300
   1400112c7:	cmp    ebx,0x1
   1400112ca:	je     0x1400112ec
   1400112cc:	cmp    ebx,0x2
   1400112cf:	je     0x1400112e6
   1400112d1:	call   0x14000b9f0
   1400112d6:	mov    DWORD PTR [rax],0x16
   1400112dc:	call   0x14000b8b8
   1400112e1:	or     eax,0xffffffff
   1400112e4:	jmp    0x140011303
   1400112e6:	and    r8d,0xfffffffd
   1400112ea:	jmp    0x1400112f0
   1400112ec:	or     r8d,0x2
   1400112f0:	mov    DWORD PTR [rax+0xc8],r8d
   1400112f7:	jmp    0x140011300
   1400112f9:	or     DWORD PTR [rip+0x34e58],0xffffffff        # 0x140046158
   140011300:	lea    eax,[rcx+0x2]
   140011303:	add    rsp,0x20
   140011307:	pop    rbx
   140011308:	ret    
   140011309:	int3   
   14001130a:	int3   
   14001130b:	int3   
   14001130c:	sub    rsp,0x28
   140011310:	test   rdx,rdx
   140011313:	je     0x1400113c3
   140011319:	test   rcx,rcx
   14001131c:	je     0x1400113c3
   140011322:	cmp    rcx,rdx
   140011325:	je     0x1400113c3
   14001132b:	mov    eax,0x2
   140011330:	mov    r8,rcx
   140011333:	lea    r9d,[rax+0x7e]
   140011337:	movups xmm0,XMMWORD PTR [rdx]
   14001133a:	movups XMMWORD PTR [r8],xmm0
   14001133e:	movups xmm1,XMMWORD PTR [rdx+0x10]
   140011342:	movups XMMWORD PTR [r8+0x10],xmm1
   140011347:	movups xmm0,XMMWORD PTR [rdx+0x20]
   14001134b:	movups XMMWORD PTR [r8+0x20],xmm0
   140011350:	movups xmm1,XMMWORD PTR [rdx+0x30]
   140011354:	movups XMMWORD PTR [r8+0x30],xmm1
   140011359:	movups xmm0,XMMWORD PTR [rdx+0x40]
   14001135d:	movups XMMWORD PTR [r8+0x40],xmm0
   140011362:	movups xmm1,XMMWORD PTR [rdx+0x50]
   140011366:	movups XMMWORD PTR [r8+0x50],xmm1
   14001136b:	movups xmm0,XMMWORD PTR [rdx+0x60]
   14001136f:	movups XMMWORD PTR [r8+0x60],xmm0
   140011374:	movups xmm1,XMMWORD PTR [rdx+0x70]
   140011378:	add    r8,r9
   14001137b:	add    rdx,r9
   14001137e:	movups XMMWORD PTR [r8-0x10],xmm1
   140011383:	dec    rax
   140011386:	jne    0x140011337
   140011388:	movups xmm0,XMMWORD PTR [rdx]
   14001138b:	movups XMMWORD PTR [r8],xmm0
   14001138f:	movups xmm1,XMMWORD PTR [rdx+0x10]
   140011393:	movups XMMWORD PTR [r8+0x10],xmm1
   140011398:	movups xmm0,XMMWORD PTR [rdx+0x20]
   14001139c:	movups XMMWORD PTR [r8+0x20],xmm0
   1400113a1:	movups xmm1,XMMWORD PTR [rdx+0x30]
   1400113a5:	movups XMMWORD PTR [r8+0x30],xmm1
   1400113aa:	movups xmm0,XMMWORD PTR [rdx+0x40]
   1400113ae:	movups XMMWORD PTR [r8+0x40],xmm0
   1400113b3:	mov    rax,QWORD PTR [rdx+0x50]
   1400113b7:	mov    QWORD PTR [r8+0x50],rax
   1400113bb:	and    DWORD PTR [rcx],0x0
   1400113be:	call   0x14000fe08
   1400113c3:	add    rsp,0x28
   1400113c7:	ret    
   1400113c8:	rex push rbx
   1400113ca:	sub    rsp,0x150
   1400113d1:	mov    rax,QWORD PTR [rip+0x33e98]        # 0x140045270
   1400113d8:	xor    rax,rsp
   1400113db:	mov    QWORD PTR [rsp+0x140],rax
   1400113e3:	mov    ebx,ecx
   1400113e5:	cmp    ecx,0x5
   1400113e8:	ja     0x140011424
   1400113ea:	test   rdx,rdx
   1400113ed:	je     0x140011424
   1400113ef:	lea    rax,[rsp+0x30]
   1400113f4:	mov    r8,rdx
   1400113f7:	or     r9d,0xffffffff
   1400113fb:	xor    edx,edx
   1400113fd:	xor    ecx,ecx
   1400113ff:	mov    DWORD PTR [rsp+0x28],0x83
   140011407:	mov    QWORD PTR [rsp+0x20],rax
   14001140c:	call   QWORD PTR [rip+0x23e3e]        # 0x140035250
   140011412:	test   eax,eax
   140011414:	je     0x140011424
   140011416:	lea    rdx,[rsp+0x30]
   14001141b:	mov    ecx,ebx
   14001141d:	call   0x14001194c
   140011422:	jmp    0x140011426
   140011424:	xor    eax,eax
   140011426:	mov    rcx,QWORD PTR [rsp+0x140]
   14001142e:	xor    rcx,rsp
   140011431:	call   0x1400097d0
   140011436:	add    rsp,0x150
   14001143d:	pop    rbx
   14001143e:	ret    
   14001143f:	int3   
   140011440:	rex push rbp
   140011442:	push   rbx
   140011443:	push   rsi
   140011444:	push   rdi
   140011445:	push   r12
   140011447:	push   r13
   140011449:	push   r14
   14001144b:	push   r15
   14001144d:	lea    rbp,[rsp-0x148]
   140011455:	sub    rsp,0x248
   14001145c:	mov    rax,QWORD PTR [rip+0x33e0d]        # 0x140045270
   140011463:	xor    rax,rsp
   140011466:	mov    QWORD PTR [rbp+0x130],rax
   14001146d:	mov    rdi,QWORD PTR [rbp+0x1b8]
   140011474:	mov    rsi,r9
   140011477:	mov    r13,r8
   14001147a:	mov    QWORD PTR [rsp+0x50],r8
   14001147f:	mov    r12,rdx
   140011482:	mov    rbx,rcx
   140011485:	call   0x140010d3c
   14001148a:	lea    rcx,[rax+0x160]
   140011491:	lea    r15,[rax+0x164]
   140011498:	lea    r14,[rax+0x26a]
   14001149f:	mov    QWORD PTR [rsp+0x38],rcx
   1400114a4:	xor    ecx,ecx
   1400114a6:	mov    QWORD PTR [rsp+0x40],r15
   1400114ab:	mov    DWORD PTR [rsp+0x30],ecx
   1400114af:	test   rbx,rbx
   1400114b2:	jne    0x1400114d9
   1400114b4:	xor    eax,eax
   1400114b6:	mov    rcx,QWORD PTR [rbp+0x130]
   1400114bd:	xor    rcx,rsp
   1400114c0:	call   0x1400097d0
   1400114c5:	add    rsp,0x248
   1400114cc:	pop    r15
   1400114ce:	pop    r14
   1400114d0:	pop    r13
   1400114d2:	pop    r12
   1400114d4:	pop    rdi
   1400114d5:	pop    rsi
   1400114d6:	pop    rbx
   1400114d7:	pop    rbp
   1400114d8:	ret    
   1400114d9:	mov    rdx,QWORD PTR [rbp+0x1b0]
   1400114e0:	add    rax,0x398
   1400114e6:	mov    r9d,0x55
   1400114ec:	mov    r8,rax
   1400114ef:	mov    rcx,rsi
   1400114f2:	mov    QWORD PTR [rsp+0x48],rax
   1400114f7:	call   0x14000820c
   1400114fc:	xor    ecx,ecx
   1400114fe:	test   eax,eax
   140011500:	jne    0x1400117ff
   140011506:	cmp    WORD PTR [rbx],0x43
   14001150a:	jne    0x14001153d
   14001150c:	cmp    WORD PTR [rbx+0x2],cx
   140011510:	jne    0x14001153d
   140011512:	lea    r8,[rip+0x27307]        # 0x140038820
   140011519:	mov    rdx,r13
   14001151c:	mov    rcx,r12
   14001151f:	call   0x14000781c
   140011524:	xor    ecx,ecx
   140011526:	test   eax,eax
   140011528:	jne    0x14001175d
   14001152e:	test   rdi,rdi
   140011531:	je     0x140011535
   140011533:	mov    DWORD PTR [rdi],ecx
   140011535:	mov    rax,r12
   140011538:	jmp    0x1400114b6
   14001153d:	mov    rcx,rbx
   140011540:	call   0x14000cad8
   140011545:	mov    r13,rax
   140011548:	cmp    rax,0x83
   14001154e:	jae    0x140011576
   140011550:	mov    rdx,rbx
   140011553:	mov    rcx,r14
   140011556:	call   0x140021aa8
   14001155b:	test   eax,eax
   14001155d:	je     0x1400116fa
   140011563:	mov    rdx,rbx
   140011566:	mov    rcx,r15
   140011569:	call   0x140021aa8
   14001156e:	test   eax,eax
   140011570:	je     0x1400116fa
   140011576:	mov    rax,QWORD PTR [rip+0x378b3]        # 0x140048e30
   14001157d:	lea    rcx,[rsp+0x60]
   140011582:	mov    rdx,rbx
   140011585:	xor    rax,QWORD PTR [rip+0x33ce4]        # 0x140045270
   14001158c:	mov    eax,0x0
   140011591:	lea    r15d,[rax+0x1]
   140011595:	cmovne r15d,eax
   140011599:	call   0x1400110e8
   14001159e:	test   eax,eax
   1400115a0:	jne    0x14001161d
   1400115a2:	test   r15d,r15d
   1400115a5:	mov    r15,QWORD PTR [rsp+0x38]
   1400115aa:	lea    r8,[rsp+0x60]
   1400115af:	mov    rdx,r15
   1400115b2:	lea    rcx,[rsp+0x60]
   1400115b7:	je     0x1400115c0
   1400115b9:	call   0x140022f10
   1400115be:	jmp    0x1400115c5
   1400115c0:	call   0x140022414
   1400115c5:	test   eax,eax
   1400115c7:	je     0x140011622
   1400115c9:	mov    r15d,0x83
   1400115cf:	lea    r8,[rsp+0x60]
   1400115d4:	mov    rcx,r14
   1400115d7:	mov    edx,r15d
   1400115da:	call   0x140011044
   1400115df:	test   rsi,rsi
   1400115e2:	je     0x1400116ee
   1400115e8:	lea    rcx,[rbp+0x80]
   1400115ef:	call   0x14000cad8
   1400115f4:	mov    rdx,QWORD PTR [rbp+0x1b0]
   1400115fb:	lea    r8,[rbp+0x80]
   140011602:	lea    r9,[rax+0x1]
   140011606:	mov    rcx,rsi
   140011609:	call   0x14000820c
   14001160e:	xor    esi,esi
   140011610:	test   eax,eax
   140011612:	je     0x1400116c7
   140011618:	jmp    0x140011770
   14001161d:	mov    r15,QWORD PTR [rsp+0x38]
   140011622:	mov    rcx,rbx
   140011625:	call   0x14001f190
   14001162a:	test   eax,eax
   14001162c:	je     0x140011730
   140011632:	lea    r8,[rsp+0x30]
   140011637:	mov    r9d,0x2
   14001163d:	mov    edx,0x20001004
   140011642:	mov    rcx,rbx
   140011645:	call   0x14001f084
   14001164a:	test   eax,eax
   14001164c:	je     0x140011656
   14001164e:	mov    eax,DWORD PTR [rsp+0x30]
   140011652:	test   eax,eax
   140011654:	jne    0x140011660
   140011656:	call   QWORD PTR [rip+0x23c54]        # 0x1400352b0
   14001165c:	mov    DWORD PTR [rsp+0x30],eax
   140011660:	movzx  eax,ax
   140011663:	mov    r8,rbx
   140011666:	mov    edx,0x83
   14001166b:	mov    DWORD PTR [r15],eax
   14001166e:	lea    r15,[r13+0x1]
   140011672:	mov    rcx,r14
   140011675:	mov    r9,r15
   140011678:	call   0x14000820c
   14001167d:	xor    ecx,ecx
   14001167f:	test   eax,eax
   140011681:	jne    0x1400117d9
   140011687:	mov    rdx,QWORD PTR [rbp+0x1b0]
   14001168e:	mov    r9,r15
   140011691:	mov    r8,rbx
   140011694:	mov    rcx,rsi
   140011697:	call   0x14000820c
   14001169c:	xor    esi,esi
   14001169e:	test   eax,eax
   1400116a0:	jne    0x1400117c4
   1400116a6:	mov    rcx,QWORD PTR [rsp+0x48]
   1400116ab:	lea    edx,[rsi+0x55]
   1400116ae:	mov    r9,r15
   1400116b1:	mov    r8,rbx
   1400116b4:	call   0x14000820c
   1400116b9:	test   eax,eax
   1400116bb:	jne    0x1400117af
   1400116c1:	mov    r15d,0x83
   1400116c7:	cmp    WORD PTR [rbx],si
   1400116ca:	je     0x1400116f0
   1400116cc:	cmp    r13,r15
   1400116cf:	jae    0x1400116f0
   1400116d1:	mov    rcx,QWORD PTR [rsp+0x40]
   1400116d6:	lea    r9,[r13+0x1]
   1400116da:	mov    r8,rbx
   1400116dd:	mov    rdx,r15
   1400116e0:	call   0x14000820c
   1400116e5:	test   eax,eax
   1400116e7:	je     0x1400116fc
   1400116e9:	jmp    0x140011785
   1400116ee:	jmp    0x1400116c7
   1400116f0:	mov    rax,QWORD PTR [rsp+0x40]
   1400116f5:	mov    WORD PTR [rax],si
   1400116f8:	jmp    0x1400116fc
   1400116fa:	xor    esi,esi
   1400116fc:	test   rdi,rdi
   1400116ff:	je     0x140011714
   140011701:	mov    rdx,QWORD PTR [rsp+0x38]
   140011706:	mov    r8d,0x4
   14001170c:	mov    rcx,rdi
   14001170f:	call   0x14000b1c0
   140011714:	mov    rdx,QWORD PTR [rsp+0x50]
   140011719:	mov    r8,r14
   14001171c:	mov    rcx,r12
   14001171f:	call   0x14000781c
   140011724:	test   eax,eax
   140011726:	jne    0x14001179a
   140011728:	mov    rax,r14
   14001172b:	jmp    0x1400114b6
   140011730:	mov    rcx,rsi
   140011733:	call   0x14000cad8
   140011738:	mov    rcx,QWORD PTR [rsp+0x48]
   14001173d:	mov    r8,rsi
   140011740:	lea    r9,[rax+0x1]
   140011744:	mov    edx,0x55
   140011749:	call   0x14000820c
   14001174e:	xor    ecx,ecx
   140011750:	test   eax,eax
   140011752:	je     0x1400114b4
   140011758:	jmp    0x1400117ec
   14001175d:	xor    r9d,r9d
   140011760:	xor    r8d,r8d
   140011763:	xor    edx,edx
   140011765:	mov    QWORD PTR [rsp+0x20],rcx
   14001176a:	call   0x14000b908
   14001176f:	int3   
   140011770:	xor    r9d,r9d
   140011773:	xor    r8d,r8d
   140011776:	xor    edx,edx
   140011778:	xor    ecx,ecx
   14001177a:	mov    QWORD PTR [rsp+0x20],rsi
   14001177f:	call   0x14000b908
   140011784:	int3   
   140011785:	xor    r9d,r9d
   140011788:	xor    r8d,r8d
   14001178b:	xor    edx,edx
   14001178d:	xor    ecx,ecx
   14001178f:	mov    QWORD PTR [rsp+0x20],rsi
   140011794:	call   0x14000b908
   140011799:	int3   
   14001179a:	xor    r9d,r9d
   14001179d:	xor    r8d,r8d
   1400117a0:	xor    edx,edx
   1400117a2:	xor    ecx,ecx
   1400117a4:	mov    QWORD PTR [rsp+0x20],rsi
   1400117a9:	call   0x14000b908
   1400117ae:	int3   
   1400117af:	xor    r9d,r9d
   1400117b2:	xor    r8d,r8d
   1400117b5:	xor    edx,edx
   1400117b7:	xor    ecx,ecx
   1400117b9:	mov    QWORD PTR [rsp+0x20],rsi
   1400117be:	call   0x14000b908
   1400117c3:	int3   
   1400117c4:	xor    r9d,r9d
   1400117c7:	xor    r8d,r8d
   1400117ca:	xor    edx,edx
   1400117cc:	xor    ecx,ecx
   1400117ce:	mov    QWORD PTR [rsp+0x20],rsi
   1400117d3:	call   0x14000b908
   1400117d8:	int3   
   1400117d9:	xor    r9d,r9d
   1400117dc:	xor    r8d,r8d
   1400117df:	xor    edx,edx
   1400117e1:	mov    QWORD PTR [rsp+0x20],rcx
   1400117e6:	call   0x14000b908
   1400117eb:	int3   
   1400117ec:	xor    r9d,r9d
   1400117ef:	xor    r8d,r8d
   1400117f2:	xor    edx,edx
   1400117f4:	mov    QWORD PTR [rsp+0x20],rcx
   1400117f9:	call   0x14000b908
   1400117fe:	int3   
   1400117ff:	xor    r9d,r9d
   140011802:	xor    r8d,r8d
   140011805:	xor    edx,edx
   140011807:	mov    QWORD PTR [rsp+0x20],rcx
   14001180c:	call   0x14000b908
   140011811:	int3   
   140011812:	int3   
   140011813:	int3   
   140011814:	test   rcx,rcx
   140011817:	je     0x1400118ad
   14001181d:	push   rbx
   14001181e:	sub    rsp,0x20
   140011822:	mov    rbx,rcx
   140011825:	mov    ecx,0xd
   14001182a:	call   0x140019628
   14001182f:	nop
   140011830:	mov    rcx,QWORD PTR [rbx+0x8]
   140011834:	test   rcx,rcx
   140011837:	je     0x140011854
   140011839:	lock dec DWORD PTR [rcx]
   14001183c:	jne    0x140011854
   14001183e:	mov    rcx,QWORD PTR [rbx+0x8]
   140011842:	lea    rax,[rip+0x34197]        # 0x1400459e0
   140011849:	cmp    rcx,rax
   14001184c:	je     0x140011854
   14001184e:	call   0x14000fb50
   140011853:	nop
   140011854:	mov    ecx,0xd
   140011859:	call   0x140019844
   14001185e:	cmp    QWORD PTR [rbx],0x0
   140011862:	je     0x1400118a0
   140011864:	mov    ecx,0xc
   140011869:	call   0x140019628
   14001186e:	nop
   14001186f:	mov    rcx,QWORD PTR [rbx]
   140011872:	call   0x14001002c
   140011877:	mov    rcx,QWORD PTR [rbx]
   14001187a:	test   rcx,rcx
   14001187d:	je     0x140011896
   14001187f:	cmp    DWORD PTR [rcx],0x0
   140011882:	jne    0x140011896
   140011884:	lea    rax,[rip+0x34765]        # 0x140045ff0
   14001188b:	cmp    rcx,rax
   14001188e:	je     0x140011896
   140011890:	call   0x14000fe94
   140011895:	nop
   140011896:	mov    ecx,0xc
   14001189b:	call   0x140019844
   1400118a0:	mov    rcx,rbx
   1400118a3:	call   0x14000fb50
   1400118a8:	add    rsp,0x20
   1400118ac:	pop    rbx
   1400118ad:	ret    
   1400118ae:	int3   
   1400118af:	int3   
   1400118b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400118b5:	push   rdi
   1400118b6:	sub    rsp,0x20
   1400118ba:	call   0x140010d3c
   1400118bf:	mov    rdi,rax
   1400118c2:	mov    edx,0x1
   1400118c7:	lea    ecx,[rdx+0xf]
   1400118ca:	call   0x14000fbcc
   1400118cf:	mov    rbx,rax
   1400118d2:	test   rax,rax
   1400118d5:	jne    0x1400118e6
   1400118d7:	call   0x14000b9f0
   1400118dc:	mov    DWORD PTR [rax],0xc
   1400118e2:	xor    eax,eax
   1400118e4:	jmp    0x140011941
   1400118e6:	call   0x1400100d0
   1400118eb:	call   0x140010504
   1400118f0:	mov    rax,QWORD PTR [rdi+0xc0]
   1400118f7:	mov    QWORD PTR [rbx],rax
   1400118fa:	mov    rax,QWORD PTR [rdi+0xb8]
   140011901:	mov    QWORD PTR [rbx+0x8],rax
   140011905:	mov    ecx,0xc
   14001190a:	call   0x140019628
   14001190f:	nop
   140011910:	mov    rcx,QWORD PTR [rbx]
   140011913:	call   0x14000fe08
   140011918:	nop
   140011919:	mov    ecx,0xc
   14001191e:	call   0x140019844
   140011923:	mov    edi,0xd
   140011928:	mov    ecx,edi
   14001192a:	call   0x140019628
   14001192f:	nop
   140011930:	mov    rax,QWORD PTR [rbx+0x8]
   140011934:	lock inc DWORD PTR [rax]
   140011937:	mov    ecx,edi
   140011939:	call   0x140019844
   14001193e:	mov    rax,rbx
   140011941:	mov    rbx,QWORD PTR [rsp+0x30]
   140011946:	add    rsp,0x20
   14001194a:	pop    rdi
   14001194b:	ret    
   14001194c:	mov    QWORD PTR [rsp+0x8],rbx
   140011951:	mov    QWORD PTR [rsp+0x10],rbp
   140011956:	mov    QWORD PTR [rsp+0x18],rsi
   14001195b:	push   rdi
   14001195c:	sub    rsp,0x20
   140011960:	mov    rdi,rdx
   140011963:	mov    esi,ecx
   140011965:	cmp    ecx,0x5
   140011968:	ja     0x140011991
   14001196a:	test   rdx,rdx
   14001196d:	je     0x140011991
   14001196f:	mov    ebp,0x1
   140011974:	mov    edx,ebp
   140011976:	lea    ecx,[rbp+0xf]
   140011979:	call   0x14000fbcc
   14001197e:	mov    rbx,rax
   140011981:	test   rax,rax
   140011984:	jne    0x1400119a8
   140011986:	call   0x14000b9f0
   14001198b:	mov    DWORD PTR [rax],0xc
   140011991:	xor    eax,eax
   140011993:	mov    rbx,QWORD PTR [rsp+0x30]
   140011998:	mov    rbp,QWORD PTR [rsp+0x38]
   14001199d:	mov    rsi,QWORD PTR [rsp+0x40]
   1400119a2:	add    rsp,0x20
   1400119a6:	pop    rdi
   1400119a7:	ret    
   1400119a8:	mov    rdx,rbp
   1400119ab:	mov    ecx,0x158
   1400119b0:	call   0x14000fbcc
   1400119b5:	mov    QWORD PTR [rbx],rax
   1400119b8:	test   rax,rax
   1400119bb:	jne    0x1400119c7
   1400119bd:	mov    rcx,rbx
   1400119c0:	call   0x14000fb50
   1400119c5:	jmp    0x140011986
   1400119c7:	mov    rdx,rbp
   1400119ca:	mov    ecx,0x228
   1400119cf:	call   0x14000fbcc
   1400119d4:	mov    rcx,QWORD PTR [rbx]
   1400119d7:	mov    QWORD PTR [rbx+0x8],rax
   1400119db:	test   rax,rax
   1400119de:	jne    0x1400119e7
   1400119e0:	call   0x14000fb50
   1400119e5:	jmp    0x1400119bd
   1400119e7:	lea    rdx,[rip+0x34602]        # 0x140045ff0
   1400119ee:	call   0x14001130c
   1400119f3:	mov    rcx,QWORD PTR [rbx]
   1400119f6:	mov    r8,rdi
   1400119f9:	mov    edx,esi
   1400119fb:	call   0x140011e24
   140011a00:	test   rax,rax
   140011a03:	je     0x140011a18
   140011a05:	mov    rax,QWORD PTR [rbx]
   140011a08:	mov    rdx,QWORD PTR [rbx+0x8]
   140011a0c:	mov    ecx,DWORD PTR [rax+0x4]
   140011a0f:	call   0x140010840
   140011a14:	test   eax,eax
   140011a16:	je     0x140011a3d
   140011a18:	mov    rcx,QWORD PTR [rbx+0x8]
   140011a1c:	call   0x14000fb50
   140011a21:	mov    rcx,QWORD PTR [rbx]
   140011a24:	call   0x14001002c
   140011a29:	mov    rcx,QWORD PTR [rbx]
   140011a2c:	call   0x14000fe94
   140011a31:	mov    rcx,rbx
   140011a34:	call   0x14000fb50
   140011a39:	xor    ebx,ebx
   140011a3b:	jmp    0x140011a43
   140011a3d:	mov    rax,QWORD PTR [rbx+0x8]
   140011a41:	mov    DWORD PTR [rax],ebp
   140011a43:	mov    rax,rbx
   140011a46:	jmp    0x140011993
   140011a4b:	int3   
   140011a4c:	test   r8d,r8d
   140011a4f:	jle    0x140011a9a
   140011a51:	mov    DWORD PTR [rsp+0x18],r8d
   140011a56:	mov    QWORD PTR [rsp+0x20],r9
   140011a5b:	push   rbx
   140011a5c:	push   rbp
   140011a5d:	push   rsi
   140011a5e:	push   rdi
   140011a5f:	sub    rsp,0x38
   140011a63:	lea    rdi,[rsp+0x78]
   140011a68:	xor    ebx,ebx
   140011a6a:	mov    rsi,rdx
   140011a6d:	add    rdi,0xfffffffffffffff8
   140011a71:	mov    rbp,rcx
   140011a74:	lea    rdi,[rdi+0x8]
   140011a78:	mov    rdx,rsi
   140011a7b:	mov    rcx,rbp
   140011a7e:	mov    r8,QWORD PTR [rdi]
   140011a81:	call   0x140008184
   140011a86:	test   eax,eax
   140011a88:	jne    0x140011a9b
   140011a8a:	inc    ebx
   140011a8c:	cmp    ebx,DWORD PTR [rsp+0x70]
   140011a90:	jl     0x140011a74
   140011a92:	add    rsp,0x38
   140011a96:	pop    rdi
   140011a97:	pop    rsi
   140011a98:	pop    rbp
   140011a99:	pop    rbx
   140011a9a:	ret    
   140011a9b:	and    QWORD PTR [rsp+0x20],0x0
   140011aa1:	xor    r9d,r9d
   140011aa4:	xor    r8d,r8d
   140011aa7:	xor    edx,edx
   140011aa9:	xor    ecx,ecx
   140011aab:	call   0x14000b908
   140011ab0:	int3   
   140011ab1:	int3   
   140011ab2:	int3   
   140011ab3:	int3   
   140011ab4:	mov    QWORD PTR [rsp+0x8],rbx
   140011ab9:	mov    QWORD PTR [rsp+0x10],rsi
   140011abe:	mov    QWORD PTR [rsp+0x20],rdi
   140011ac3:	push   r12
   140011ac5:	push   r14
   140011ac7:	push   r15
   140011ac9:	sub    rsp,0x30
   140011acd:	mov    r14,rdx
   140011ad0:	mov    r12d,ecx
   140011ad3:	xor    esi,esi
   140011ad5:	cmp    ecx,0x5
   140011ad8:	jbe    0x140011af1
   140011ada:	call   0x14000b9f0
   140011adf:	mov    DWORD PTR [rax],0x16
   140011ae5:	call   0x14000b8b8
   140011aea:	xor    eax,eax
   140011aec:	jmp    0x140011c35
   140011af1:	call   0x140010d3c
   140011af6:	mov    rbx,rax
   140011af9:	mov    QWORD PTR [rsp+0x60],rax
   140011afe:	call   0x1400100d0
   140011b03:	or     DWORD PTR [rbx+0xc8],0x10
   140011b0a:	mov    edx,0x1
   140011b0f:	mov    ecx,0x158
   140011b14:	call   0x14000fbcc
   140011b19:	mov    rdi,rax
   140011b1c:	test   rax,rax
   140011b1f:	je     0x140011c2b
   140011b25:	mov    ecx,0xc
   140011b2a:	call   0x140019628
   140011b2f:	nop
   140011b30:	lea    r15,[rbx+0xc0]
   140011b37:	mov    rdx,QWORD PTR [r15]
   140011b3a:	mov    rcx,rdi
   140011b3d:	call   0x14001130c
   140011b42:	nop
   140011b43:	mov    ecx,0xc
   140011b48:	call   0x140019844
   140011b4d:	mov    r8,r14
   140011b50:	mov    edx,r12d
   140011b53:	mov    rcx,rdi
   140011b56:	call   0x140011e24
   140011b5b:	mov    rsi,rax
   140011b5e:	mov    QWORD PTR [rsp+0x20],rax
   140011b63:	test   rax,rax
   140011b66:	je     0x140011c1a
   140011b6c:	test   r14,r14
   140011b6f:	je     0x140011b9a
   140011b71:	lea    rdx,[rip+0x34198]        # 0x140045d10
   140011b78:	mov    rcx,r14
   140011b7b:	call   0x140021aa8
   140011b80:	mov    ecx,DWORD PTR [rip+0x35e6e]        # 0x1400479f4
   140011b86:	test   eax,eax
   140011b88:	mov    r14d,0x1
   140011b8e:	cmovne ecx,r14d
   140011b92:	mov    DWORD PTR [rip+0x35e5c],ecx        # 0x1400479f4
   140011b98:	jmp    0x140011ba0
   140011b9a:	mov    r14d,0x1
   140011ba0:	mov    ecx,0xc
   140011ba5:	call   0x140019628
   140011baa:	nop
   140011bab:	mov    rdx,rdi
   140011bae:	mov    rcx,r15
   140011bb1:	call   0x140010148
   140011bb6:	mov    rcx,rdi
   140011bb9:	call   0x14001002c
   140011bbe:	test   BYTE PTR [rbx+0xc8],0x2
   140011bc5:	jne    0x140011c0e
   140011bc7:	test   BYTE PTR [rip+0x3458a],r14b        # 0x140046158
   140011bce:	jne    0x140011c0e
   140011bd0:	mov    rdx,QWORD PTR [r15]
   140011bd3:	lea    rcx,[rip+0x34406]        # 0x140045fe0
   140011bda:	call   0x140010148
   140011bdf:	mov    rdx,QWORD PTR [rip+0x343fa]        # 0x140045fe0
   140011be6:	mov    rax,QWORD PTR [rdx+0xf0]
   140011bed:	mov    QWORD PTR [rip+0x3491c],rax        # 0x140046510
   140011bf4:	mov    rax,QWORD PTR [rdx+0x108]
   140011bfb:	mov    QWORD PTR [rip+0x34916],rax        # 0x140046518
   140011c02:	mov    eax,DWORD PTR [rdx+0xd4]
   140011c08:	mov    DWORD PTR [rip+0x340fe],eax        # 0x140045d0c
   140011c0e:	mov    ecx,0xc
   140011c13:	call   0x140019844
   140011c18:	jmp    0x140011c2b
   140011c1a:	mov    rcx,rdi
   140011c1d:	call   0x14001002c
   140011c22:	mov    rcx,rdi
   140011c25:	call   0x14000fe94
   140011c2a:	nop
   140011c2b:	and    DWORD PTR [rbx+0xc8],0xffffffef
   140011c32:	mov    rax,rsi
   140011c35:	mov    rbx,QWORD PTR [rsp+0x50]
   140011c3a:	mov    rsi,QWORD PTR [rsp+0x58]
   140011c3f:	mov    rdi,QWORD PTR [rsp+0x68]
   140011c44:	add    rsp,0x30
   140011c48:	pop    r15
   140011c4a:	pop    r14
   140011c4c:	pop    r12
   140011c4e:	ret    
   140011c4f:	int3   
   140011c50:	mov    QWORD PTR [rsp+0x8],rbx
   140011c55:	mov    QWORD PTR [rsp+0x10],rbp
   140011c5a:	mov    QWORD PTR [rsp+0x18],rsi
   140011c5f:	push   rdi
   140011c60:	push   r12
   140011c62:	push   r13
   140011c64:	push   r14
   140011c66:	push   r15
   140011c68:	sub    rsp,0x30
   140011c6c:	mov    rdi,rcx
   140011c6f:	mov    ecx,0x6a6
   140011c74:	mov    ebp,0x1
   140011c79:	call   0x14000fc4c
   140011c7e:	xor    r13d,r13d
   140011c81:	mov    rsi,rax
   140011c84:	test   rax,rax
   140011c87:	jne    0x140011ca6
   140011c89:	mov    rbx,QWORD PTR [rsp+0x60]
   140011c8e:	mov    rbp,QWORD PTR [rsp+0x68]
   140011c93:	mov    rsi,QWORD PTR [rsp+0x70]
   140011c98:	add    rsp,0x30
   140011c9c:	pop    r15
   140011c9e:	pop    r14
   140011ca0:	pop    r13
   140011ca2:	pop    r12
   140011ca4:	pop    rdi
   140011ca5:	ret    
   140011ca6:	lea    r14,[rax+0x4]
   140011caa:	mov    ebx,0x351
   140011caf:	mov    r8d,0x3
   140011cb5:	mov    WORD PTR [r14],r13w
   140011cb9:	mov    DWORD PTR [rax],ebp
   140011cbb:	mov    rax,QWORD PTR [rdi+0x38]
   140011cbf:	mov    r9,QWORD PTR [rip+0x269d2]        # 0x140038698
   140011cc6:	mov    QWORD PTR [rsp+0x28],rax
   140011ccb:	lea    rax,[rip+0x26b4a]        # 0x14003881c
   140011cd2:	mov    edx,ebx
   140011cd4:	mov    rcx,r14
   140011cd7:	mov    QWORD PTR [rsp+0x20],rax
   140011cdc:	call   0x140011a4c
   140011ce1:	lea    r15,[rip+0x269b0]        # 0x140038698
   140011ce8:	lea    r12,[rdi+0x38]
   140011cec:	lea    r8,[rip+0x26b25]        # 0x140038818
   140011cf3:	mov    rdx,rbx
   140011cf6:	mov    rcx,r14
   140011cf9:	call   0x140008184
   140011cfe:	test   eax,eax
   140011d00:	jne    0x140011e0f
   140011d06:	mov    rcx,QWORD PTR [r12]
   140011d0a:	lea    rbx,[r12+0x20]
   140011d0f:	mov    rdx,QWORD PTR [rbx]
   140011d12:	call   0x140021aa8
   140011d17:	mov    r12,rbx
   140011d1a:	mov    r8d,0x3
   140011d20:	test   eax,eax
   140011d22:	mov    rax,QWORD PTR [rbx]
   140011d25:	mov    ebx,0x351
   140011d2a:	mov    QWORD PTR [rsp+0x28],rax
   140011d2f:	cmovne ebp,r13d
   140011d33:	lea    rax,[rip+0x26ae2]        # 0x14003881c
   140011d3a:	add    r15,0x18
   140011d3e:	mov    edx,ebx
   140011d40:	mov    rcx,r14
   140011d43:	mov    r9,QWORD PTR [r15]
   140011d46:	mov    QWORD PTR [rsp+0x20],rax
   140011d4b:	call   0x140011a4c
   140011d50:	lea    rax,[rip+0x269a1]        # 0x1400386f8
   140011d57:	cmp    r15,rax
   140011d5a:	jl     0x140011cec
   140011d5c:	test   ebp,ebp
   140011d5e:	jne    0x140011db3
   140011d60:	mov    rcx,QWORD PTR [rdi+0x28]
   140011d64:	or     ebx,0xffffffff
   140011d67:	test   rcx,rcx
   140011d6a:	je     0x140011d7f
   140011d6c:	mov    eax,ebx
   140011d6e:	lock xadd DWORD PTR [rcx],eax
   140011d72:	add    eax,ebx
   140011d74:	jne    0x140011d7f
   140011d76:	mov    rcx,QWORD PTR [rdi+0x28]
   140011d7a:	call   0x14000fb50
   140011d7f:	mov    rax,QWORD PTR [rdi+0x20]
   140011d83:	test   rax,rax
   140011d86:	je     0x140011d9b
   140011d88:	mov    ecx,ebx
   140011d8a:	lock xadd DWORD PTR [rax],ecx
   140011d8e:	add    ecx,ebx
   140011d90:	jne    0x140011d9b
   140011d92:	mov    rcx,QWORD PTR [rdi+0x20]
   140011d96:	call   0x14000fb50
   140011d9b:	mov    QWORD PTR [rdi+0x20],r13
   140011d9f:	mov    QWORD PTR [rdi+0x10],r13
   140011da3:	mov    QWORD PTR [rdi+0x28],rsi
   140011da7:	mov    QWORD PTR [rdi+0x18],r14
   140011dab:	mov    rax,r14
   140011dae:	jmp    0x140011c89
   140011db3:	mov    rcx,rsi
   140011db6:	call   0x14000fb50
   140011dbb:	mov    rcx,QWORD PTR [rdi+0x28]
   140011dbf:	or     ebx,0xffffffff
   140011dc2:	test   rcx,rcx
   140011dc5:	je     0x140011dda
   140011dc7:	mov    eax,ebx
   140011dc9:	lock xadd DWORD PTR [rcx],eax
   140011dcd:	add    eax,ebx
   140011dcf:	jne    0x140011dda
   140011dd1:	mov    rcx,QWORD PTR [rdi+0x28]
   140011dd5:	call   0x14000fb50
   140011dda:	mov    rcx,QWORD PTR [rdi+0x20]
   140011dde:	test   rcx,rcx
   140011de1:	je     0x140011df6
   140011de3:	mov    eax,ebx
   140011de5:	lock xadd DWORD PTR [rcx],eax
   140011de9:	add    eax,ebx
   140011deb:	jne    0x140011df6
   140011ded:	mov    rcx,QWORD PTR [rdi+0x20]
   140011df1:	call   0x14000fb50
   140011df6:	mov    rax,QWORD PTR [rdi+0x58]
   140011dfa:	mov    QWORD PTR [rdi+0x20],r13
   140011dfe:	mov    QWORD PTR [rdi+0x10],r13
   140011e02:	mov    QWORD PTR [rdi+0x28],r13
   140011e06:	mov    QWORD PTR [rdi+0x18],r13
   140011e0a:	jmp    0x140011c89
   140011e0f:	xor    r9d,r9d
   140011e12:	xor    r8d,r8d
   140011e15:	xor    edx,edx
   140011e17:	xor    ecx,ecx
   140011e19:	mov    QWORD PTR [rsp+0x20],r13
   140011e1e:	call   0x14000b908
   140011e23:	int3   
   140011e24:	mov    QWORD PTR [rsp+0x20],rbx
   140011e29:	push   rbp
   140011e2a:	push   rsi
   140011e2b:	push   rdi
   140011e2c:	push   r12
   140011e2e:	push   r13
   140011e30:	push   r14
   140011e32:	push   r15
   140011e34:	sub    rsp,0x200
   140011e3b:	mov    rax,QWORD PTR [rip+0x3342e]        # 0x140045270
   140011e42:	xor    rax,rsp
   140011e45:	mov    QWORD PTR [rsp+0x1f0],rax
   140011e4d:	xor    r13d,r13d
   140011e50:	mov    rbx,r8
   140011e53:	mov    rdi,rcx
   140011e56:	test   edx,edx
   140011e58:	je     0x140011e7a
   140011e5a:	test   rbx,rbx
   140011e5d:	je     0x140011e69
   140011e5f:	call   0x140012090
   140011e64:	jmp    0x140011fbf
   140011e69:	movsxd rax,edx
   140011e6c:	shl    rax,0x5
   140011e70:	mov    rax,QWORD PTR [rax+rcx*1+0x18]
   140011e75:	jmp    0x140011fbf
   140011e7a:	mov    ebp,0x1
   140011e7f:	mov    esi,r13d
   140011e82:	test   rbx,rbx
   140011e85:	je     0x140011fba
   140011e8b:	cmp    WORD PTR [r8],0x4c
   140011e90:	jne    0x140011fee
   140011e96:	cmp    WORD PTR [r8+0x2],0x43
   140011e9c:	jne    0x140011fee
   140011ea2:	cmp    WORD PTR [r8+0x4],0x5f
   140011ea8:	jne    0x140011fee
   140011eae:	lea    rdx,[rip+0x2695b]        # 0x140038810
   140011eb5:	mov    rcx,rbx
   140011eb8:	call   0x140021b50
   140011ebd:	mov    r14,rax
   140011ec0:	test   rax,rax
   140011ec3:	je     0x140011fea
   140011ec9:	mov    rbp,rax
   140011ecc:	sub    rbp,rbx
   140011ecf:	sar    rbp,1
   140011ed2:	je     0x140011fea
   140011ed8:	cmp    WORD PTR [rax],0x3b
   140011edc:	je     0x140011fea
   140011ee2:	mov    r12d,0x1
   140011ee8:	lea    r15,[rip+0x267a9]        # 0x140038698
   140011eef:	mov    rcx,QWORD PTR [r15]
   140011ef2:	mov    r8,rbp
   140011ef5:	mov    rdx,rbx
   140011ef8:	call   0x140021b24
   140011efd:	test   eax,eax
   140011eff:	jne    0x140011f0e
   140011f01:	mov    rcx,QWORD PTR [r15]
   140011f04:	call   0x14000cad8
   140011f09:	cmp    rbp,rax
   140011f0c:	je     0x140011f21
   140011f0e:	lea    rax,[rip+0x267e3]        # 0x1400386f8
   140011f15:	add    r15,0x18
   140011f19:	inc    r12d
   140011f1c:	cmp    r15,rax
   140011f1f:	jle    0x140011eef
   140011f21:	add    r14,0x2
   140011f25:	lea    rdx,[rip+0x268ec]        # 0x140038818
   140011f2c:	mov    rcx,r14
   140011f2f:	call   0x140021ae4
   140011f34:	mov    rbx,rax
   140011f37:	test   rax,rax
   140011f3a:	jne    0x140011f47
   140011f3c:	cmp    WORD PTR [r14],0x3b
   140011f41:	jne    0x140011fea
   140011f47:	cmp    r12d,0x5
   140011f4b:	jg     0x140011f97
   140011f4d:	lea    rcx,[rsp+0x30]
   140011f52:	mov    r9,rax
   140011f55:	mov    r8,r14
   140011f58:	mov    edx,0x83
   140011f5d:	call   0x14000820c
   140011f62:	test   eax,eax
   140011f64:	jne    0x140012079
   140011f6a:	lea    rax,[rbx+rbx*1]
   140011f6e:	cmp    rax,0x106
   140011f74:	jae    0x140012073
   140011f7a:	lea    r8,[rsp+0x30]
   140011f7f:	mov    edx,r12d
   140011f82:	mov    rcx,rdi
   140011f85:	mov    WORD PTR [rsp+rax*1+0x30],r13w
   140011f8b:	call   0x140012090
   140011f90:	test   rax,rax
   140011f93:	je     0x140011f97
   140011f95:	inc    esi
   140011f97:	lea    rbx,[r14+rbx*2]
   140011f9b:	cmp    WORD PTR [rbx],r13w
   140011f9f:	je     0x140011faf
   140011fa1:	add    rbx,0x2
   140011fa5:	cmp    WORD PTR [rbx],r13w
   140011fa9:	jne    0x140011eae
   140011faf:	test   esi,esi
   140011fb1:	je     0x14001206b
   140011fb7:	mov    rcx,rdi
   140011fba:	call   0x140011c50
   140011fbf:	mov    rcx,QWORD PTR [rsp+0x1f0]
   140011fc7:	xor    rcx,rsp
   140011fca:	call   0x1400097d0
   140011fcf:	mov    rbx,QWORD PTR [rsp+0x258]
   140011fd7:	add    rsp,0x200
   140011fde:	pop    r15
   140011fe0:	pop    r14
   140011fe2:	pop    r13
   140011fe4:	pop    r12
   140011fe6:	pop    rdi
   140011fe7:	pop    rsi
   140011fe8:	pop    rbp
   140011fe9:	ret    
   140011fea:	xor    eax,eax
   140011fec:	jmp    0x140011fbf
   140011fee:	lea    r9,[rsp+0x140]
   140011ff6:	lea    rdx,[rsp+0x30]
   140011ffb:	mov    r8d,0x83
   140012001:	mov    rcx,rbx
   140012004:	mov    QWORD PTR [rsp+0x28],r13
   140012009:	mov    QWORD PTR [rsp+0x20],0x55
   140012012:	call   0x140011440
   140012017:	test   rax,rax
   14001201a:	je     0x140011fbf
   14001201c:	mov    ebx,r13d
   14001201f:	lea    r14,[rdi+0x18]
   140012023:	test   ebx,ebx
   140012025:	je     0x140012053
   140012027:	mov    rdx,QWORD PTR [r14]
   14001202a:	lea    rcx,[rsp+0x30]
   14001202f:	call   0x140021aa8
   140012034:	test   eax,eax
   140012036:	je     0x140012051
   140012038:	lea    r8,[rsp+0x30]
   14001203d:	mov    edx,ebx
   14001203f:	mov    rcx,rdi
   140012042:	call   0x140012090
   140012047:	test   rax,rax
   14001204a:	jne    0x140012051
   14001204c:	mov    ebp,r13d
   14001204f:	jmp    0x140012053
   140012051:	inc    esi
   140012053:	inc    ebx
   140012055:	add    r14,0x20
   140012059:	cmp    ebx,0x5
   14001205c:	jle    0x140012023
   14001205e:	test   ebp,ebp
   140012060:	jne    0x140011fb7
   140012066:	jmp    0x140011faf
   14001206b:	mov    rax,r13
   14001206e:	jmp    0x140011fbf
   140012073:	call   0x140018dec
   140012078:	int3   
   140012079:	xor    r9d,r9d
   14001207c:	xor    r8d,r8d
   14001207f:	xor    edx,edx
   140012081:	xor    ecx,ecx
   140012083:	mov    QWORD PTR [rsp+0x20],r13
   140012088:	call   0x14000b908
   14001208d:	int3   
   14001208e:	int3   
   14001208f:	int3   
   140012090:	mov    QWORD PTR [rsp+0x20],rbx
   140012095:	push   rbp
   140012096:	push   rsi
   140012097:	push   rdi
   140012098:	push   r12
   14001209a:	push   r13
   14001209c:	push   r14
   14001209e:	push   r15
   1400120a0:	lea    rbp,[rsp-0x230]
   1400120a8:	sub    rsp,0x330
   1400120af:	mov    rax,QWORD PTR [rip+0x331ba]        # 0x140045270
   1400120b6:	xor    rax,rsp
   1400120b9:	mov    QWORD PTR [rbp+0x220],rax
   1400120c0:	mov    rbx,r8
   1400120c3:	movsxd r12,edx
   1400120c6:	mov    rdi,rcx
   1400120c9:	call   0x140010d3c
   1400120ce:	lea    r9,[rbp+0x170]
   1400120d5:	lea    rdx,[rsp+0x60]
   1400120da:	lea    r14,[rax+0x370]
   1400120e1:	lea    rax,[rsp+0x40]
   1400120e6:	mov    r8d,0x83
   1400120ec:	mov    QWORD PTR [rsp+0x28],rax
   1400120f1:	mov    rcx,rbx
   1400120f4:	mov    QWORD PTR [rsp+0x20],0x55
   1400120fd:	call   0x140011440
   140012102:	test   rax,rax
   140012105:	jne    0x140012133
   140012107:	xor    eax,eax
   140012109:	mov    rcx,QWORD PTR [rbp+0x220]
   140012110:	xor    rcx,rsp
   140012113:	call   0x1400097d0
   140012118:	mov    rbx,QWORD PTR [rsp+0x388]
   140012120:	add    rsp,0x330
   140012127:	pop    r15
   140012129:	pop    r14
   14001212b:	pop    r13
   14001212d:	pop    r12
   14001212f:	pop    rdi
   140012130:	pop    rsi
   140012131:	pop    rbp
   140012132:	ret    
   140012133:	mov    rbx,r12
   140012136:	lea    rcx,[rsp+0x60]
   14001213b:	shl    rbx,0x5
   14001213f:	mov    rdx,QWORD PTR [rbx+rdi*1+0x18]
   140012144:	call   0x140021aa8
   140012149:	test   eax,eax
   14001214b:	jne    0x140012154
   14001214d:	mov    rax,QWORD PTR [rbx+rdi*1+0x18]
   140012152:	jmp    0x140012109
   140012154:	lea    rcx,[rsp+0x60]
   140012159:	call   0x14000cad8
   14001215e:	mov    r15,rax
   140012161:	lea    rcx,[rax*2+0x6]
   140012169:	call   0x14000fc4c
   14001216e:	mov    r13,rax
   140012171:	test   rax,rax
   140012174:	je     0x140012107
   140012176:	mov    rcx,QWORD PTR [rbx+rdi*1+0x18]
   14001217b:	lea    r8,[rsp+0x60]
   140012180:	lea    rdx,[r15+0x1]
   140012184:	mov    QWORD PTR [rsp+0x48],rcx
   140012189:	mov    rcx,QWORD PTR [rdi+r12*8+0x128]
   140012191:	mov    QWORD PTR [rsp+0x50],rcx
   140012196:	mov    ecx,DWORD PTR [rdi+0x4]
   140012199:	mov    DWORD PTR [rsp+0x44],ecx
   14001219d:	lea    rcx,[rax+0x4]
   1400121a1:	call   0x14000781c
   1400121a6:	xor    r15d,r15d
   1400121a9:	test   eax,eax
   1400121ab:	jne    0x140012389
   1400121b1:	cmp    WORD PTR [rsp+0x60],0x43
   1400121b7:	lea    rax,[r13+0x4]
   1400121bb:	mov    QWORD PTR [rbx+rdi*1+0x18],rax
   1400121c0:	jne    0x1400121d4
   1400121c2:	cmp    WORD PTR [rsp+0x62],r15w
   1400121c8:	jne    0x1400121d4
   1400121ca:	mov    QWORD PTR [rdi+r12*8+0x128],r15
   1400121d2:	jmp    0x1400121e8
   1400121d4:	lea    rcx,[rbp+0x170]
   1400121db:	call   0x140010fa8
   1400121e0:	mov    QWORD PTR [rdi+r12*8+0x128],rax
   1400121e8:	cmp    r12d,0x2
   1400121ec:	jne    0x1400122c8
   1400121f2:	mov    eax,DWORD PTR [rsp+0x40]
   1400121f6:	mov    r8d,r15d
   1400121f9:	mov    rdx,r15
   1400121fc:	mov    DWORD PTR [rdi+0x4],eax
   1400121ff:	mov    rcx,QWORD PTR [r14+0x20]
   140012203:	mov    eax,DWORD PTR [r14+rdx*8]
   140012207:	cmp    DWORD PTR [rdi+0x4],eax
   14001220a:	je     0x140012225
   14001220c:	mov    rax,QWORD PTR [r14+rdx*8]
   140012210:	mov    QWORD PTR [r14+rdx*8],rcx
   140012214:	inc    rdx
   140012217:	inc    r8d
   14001221a:	mov    rcx,rax
   14001221d:	cmp    rdx,0x5
   140012221:	jl     0x140012203
   140012223:	jmp    0x140012238
   140012225:	test   r8d,r8d
   140012228:	je     0x140012238
   14001222a:	movsxd rdx,r8d
   14001222d:	mov    rax,QWORD PTR [r14+rdx*8]
   140012231:	mov    QWORD PTR [r14],rax
   140012234:	mov    QWORD PTR [r14+rdx*8],rcx
   140012238:	cmp    r8d,0x5
   14001223c:	jne    0x1400122bc
   14001223e:	mov    eax,DWORD PTR [rdi+0x4]
   140012241:	lea    r9d,[r8+0x7a]
   140012245:	mov    DWORD PTR [rsp+0x30],0x1
   14001224d:	mov    DWORD PTR [rsp+0x28],eax
   140012251:	lea    rax,[rbp+0x70]
   140012255:	lea    r8,[rip+0x26534]        # 0x140038790
   14001225c:	lea    edx,[r9-0x7e]
   140012260:	xor    ecx,ecx
   140012262:	mov    QWORD PTR [rsp+0x20],rax
   140012267:	call   0x1400213c4
   14001226c:	test   eax,eax
   14001226e:	je     0x1400122b2
   140012270:	mov    edx,r15d
   140012273:	lea    rcx,[rbp+0x70]
   140012277:	mov    eax,0x1ff
   14001227c:	inc    edx
   14001227e:	and    WORD PTR [rcx],ax
   140012281:	movsxd rax,edx
   140012284:	lea    rcx,[rcx+0x2]
   140012288:	cmp    rax,0x7f
   14001228c:	jb     0x140012277
   14001228e:	mov    rdx,QWORD PTR [rip+0x33ecb]        # 0x140046160
   140012295:	lea    rcx,[rbp+0x70]
   140012299:	mov    r8d,0xfe
   14001229f:	call   0x1400219e0
   1400122a4:	mov    ecx,r15d
   1400122a7:	test   eax,eax
   1400122a9:	sete   cl
   1400122ac:	mov    DWORD PTR [r14+0x4],ecx
   1400122b0:	jmp    0x1400122b6
   1400122b2:	mov    DWORD PTR [r14+0x4],r15d
   1400122b6:	mov    eax,DWORD PTR [rdi+0x4]
   1400122b9:	mov    DWORD PTR [r14],eax
   1400122bc:	mov    eax,DWORD PTR [r14+0x4]
   1400122c0:	mov    DWORD PTR [rdi+0xd0],eax
   1400122c6:	jmp    0x1400122e4
   1400122c8:	cmp    r12d,0x1
   1400122cc:	jne    0x1400122d7
   1400122ce:	mov    eax,DWORD PTR [rsp+0x40]
   1400122d2:	mov    DWORD PTR [rdi+0x8],eax
   1400122d5:	jmp    0x1400122e4
   1400122d7:	cmp    r12d,0x5
   1400122db:	jne    0x1400122e4
   1400122dd:	mov    eax,DWORD PTR [rsp+0x40]
   1400122e1:	mov    DWORD PTR [rdi+0xc],eax
   1400122e4:	lea    rax,[r12+r12*2]
   1400122e8:	lea    rdx,[rip+0x263a1]        # 0x140038690
   1400122ef:	mov    rcx,rdi
   1400122f2:	call   QWORD PTR [rdx+rax*8]
   1400122f5:	test   eax,eax
   1400122f7:	je     0x140012331
   1400122f9:	mov    rax,QWORD PTR [rsp+0x48]
   1400122fe:	mov    QWORD PTR [rbx+rdi*1+0x18],rax
   140012303:	mov    rcx,QWORD PTR [rdi+r12*8+0x128]
   14001230b:	call   0x14000fb50
   140012310:	mov    rax,QWORD PTR [rsp+0x50]
   140012315:	mov    rcx,r13
   140012318:	mov    QWORD PTR [rdi+r12*8+0x128],rax
   140012320:	call   0x14000fb50
   140012325:	mov    eax,DWORD PTR [rsp+0x44]
   140012329:	mov    DWORD PTR [rdi+0x4],eax
   14001232c:	jmp    0x140012107
   140012331:	lea    rcx,[rip+0x339d8]        # 0x140045d10
   140012338:	cmp    QWORD PTR [rsp+0x48],rcx
   14001233d:	je     0x140012377
   14001233f:	mov    rcx,QWORD PTR [rbx+rdi*1+0x28]
   140012344:	lock dec DWORD PTR [rcx]
   140012347:	jne    0x140012377
   140012349:	mov    rcx,QWORD PTR [rbx+rdi*1+0x28]
   14001234e:	call   0x14000fb50
   140012353:	mov    rcx,QWORD PTR [rbx+rdi*1+0x20]
   140012358:	call   0x14000fb50
   14001235d:	mov    rcx,QWORD PTR [rdi+r12*8+0x128]
   140012365:	call   0x14000fb50
   14001236a:	mov    QWORD PTR [rbx+rdi*1+0x18],r15
   14001236f:	mov    QWORD PTR [rdi+r12*8+0x128],r15
   140012377:	mov    DWORD PTR [r13+0x0],0x1
   14001237f:	mov    QWORD PTR [rbx+rdi*1+0x28],r13
   140012384:	jmp    0x14001214d
   140012389:	xor    r9d,r9d
   14001238c:	xor    r8d,r8d
   14001238f:	xor    edx,edx
   140012391:	xor    ecx,ecx
   140012393:	mov    QWORD PTR [rsp+0x20],r15
   140012398:	call   0x14000b908
   14001239d:	int3   
   14001239e:	int3   
   14001239f:	int3   
   1400123a0:	mov    rcx,QWORD PTR [rip+0x33c39]        # 0x140045fe0
   1400123a7:	mov    rax,QWORD PTR [rcx+0xf0]
   1400123ae:	mov    QWORD PTR [rip+0x3415b],rax        # 0x140046510
   1400123b5:	mov    rax,QWORD PTR [rcx+0x108]
   1400123bc:	mov    QWORD PTR [rip+0x34155],rax        # 0x140046518
   1400123c3:	mov    eax,DWORD PTR [rcx+0xd4]
   1400123c9:	mov    DWORD PTR [rip+0x3393d],eax        # 0x140045d0c
   1400123cf:	ret    
   1400123d0:	mov    rax,rsp
   1400123d3:	mov    QWORD PTR [rax+0x10],rbx
   1400123d7:	mov    QWORD PTR [rax+0x18],rbp
   1400123db:	mov    QWORD PTR [rax+0x20],rsi
   1400123df:	mov    DWORD PTR [rax+0x8],ecx
   1400123e2:	push   rdi
   1400123e3:	sub    rsp,0x20
   1400123e7:	mov    rcx,rdx
   1400123ea:	mov    rbx,rdx
   1400123ed:	call   0x14001bc7c
   1400123f2:	mov    ecx,DWORD PTR [rbx+0x18]
   1400123f5:	movsxd rsi,eax
   1400123f8:	test   cl,0x82
   1400123fb:	jne    0x140012414
   1400123fd:	call   0x14000b9f0
   140012402:	mov    DWORD PTR [rax],0x9
   140012408:	or     DWORD PTR [rbx+0x18],0x20
   14001240c:	or     eax,0xffffffff
   14001240f:	jmp    0x140012546
   140012414:	test   cl,0x40
   140012417:	je     0x140012426
   140012419:	call   0x14000b9f0
   14001241e:	mov    DWORD PTR [rax],0x22
   140012424:	jmp    0x140012408
   140012426:	xor    edi,edi
   140012428:	test   cl,0x1
   14001242b:	je     0x140012446
   14001242d:	mov    DWORD PTR [rbx+0x8],edi
   140012430:	test   cl,0x10
   140012433:	je     0x1400124c2
   140012439:	mov    rax,QWORD PTR [rbx+0x10]
   14001243d:	and    ecx,0xfffffffe
   140012440:	mov    QWORD PTR [rbx],rax
   140012443:	mov    DWORD PTR [rbx+0x18],ecx
   140012446:	mov    eax,DWORD PTR [rbx+0x18]
   140012449:	mov    DWORD PTR [rbx+0x8],edi
   14001244c:	and    eax,0xffffffef
   14001244f:	or     eax,0x2
   140012452:	mov    DWORD PTR [rbx+0x18],eax
   140012455:	test   eax,0x10c
   14001245a:	jne    0x14001248b
   14001245c:	call   0x14000a918
   140012461:	add    rax,0x30
   140012465:	cmp    rbx,rax
   140012468:	je     0x140012478
   14001246a:	call   0x14000a918
   14001246f:	add    rax,0x60
   140012473:	cmp    rbx,rax
   140012476:	jne    0x140012483
   140012478:	mov    ecx,esi
   14001247a:	call   0x14001d13c
   14001247f:	test   eax,eax
   140012481:	jne    0x14001248b
   140012483:	mov    rcx,rbx
   140012486:	call   0x140023324
   14001248b:	test   DWORD PTR [rbx+0x18],0x108
   140012492:	je     0x140012523
   140012498:	mov    ebp,DWORD PTR [rbx]
   14001249a:	mov    rdx,QWORD PTR [rbx+0x10]
   14001249e:	sub    ebp,DWORD PTR [rbx+0x10]
   1400124a1:	lea    rax,[rdx+0x1]
   1400124a5:	mov    QWORD PTR [rbx],rax
   1400124a8:	mov    eax,DWORD PTR [rbx+0x24]
   1400124ab:	dec    eax
   1400124ad:	mov    DWORD PTR [rbx+0x8],eax
   1400124b0:	test   ebp,ebp
   1400124b2:	jle    0x1400124cd
   1400124b4:	mov    r8d,ebp
   1400124b7:	mov    ecx,esi
   1400124b9:	call   0x14001bf34
   1400124be:	mov    edi,eax
   1400124c0:	jmp    0x140012517
   1400124c2:	or     ecx,0x20
   1400124c5:	mov    DWORD PTR [rbx+0x18],ecx
   1400124c8:	jmp    0x14001240c
   1400124cd:	lea    eax,[rsi+0x2]
   1400124d0:	cmp    eax,0x1
   1400124d3:	jbe    0x1400124f3
   1400124d5:	mov    rcx,rsi
   1400124d8:	mov    rax,rsi
   1400124db:	lea    r8,[rip+0x3635e]        # 0x140048840
   1400124e2:	and    ecx,0x1f
   1400124e5:	sar    rax,0x5
   1400124e9:	imul   rdx,rcx,0x58
   1400124ed:	add    rdx,QWORD PTR [r8+rax*8]
   1400124f1:	jmp    0x1400124fa
   1400124f3:	lea    rdx,[rip+0x33f16]        # 0x140046410
   1400124fa:	test   BYTE PTR [rdx+0x8],0x20
   1400124fe:	je     0x140012517
   140012500:	xor    edx,edx
   140012502:	mov    ecx,esi
   140012504:	lea    r8d,[rdx+0x2]
   140012508:	call   0x1400231a8
   14001250d:	cmp    rax,0xffffffffffffffff
   140012511:	je     0x140012408
   140012517:	mov    rcx,QWORD PTR [rbx+0x10]
   14001251b:	mov    al,BYTE PTR [rsp+0x30]
   14001251f:	mov    BYTE PTR [rcx],al
   140012521:	jmp    0x140012539
   140012523:	mov    ebp,0x1
   140012528:	lea    rdx,[rsp+0x30]
   14001252d:	mov    ecx,esi
   14001252f:	mov    r8d,ebp
   140012532:	call   0x14001bf34
   140012537:	mov    edi,eax
   140012539:	cmp    edi,ebp
   14001253b:	jne    0x140012408
   140012541:	movzx  eax,BYTE PTR [rsp+0x30]
   140012546:	mov    rbx,QWORD PTR [rsp+0x38]
   14001254b:	mov    rbp,QWORD PTR [rsp+0x40]
   140012550:	mov    rsi,QWORD PTR [rsp+0x48]
   140012555:	add    rsp,0x20
   140012559:	pop    rdi
   14001255a:	ret    
   14001255b:	int3   
   14001255c:	mov    QWORD PTR [rsp+0x18],rbx
   140012561:	push   rbp
   140012562:	push   rsi
   140012563:	push   rdi
   140012564:	push   r12
   140012566:	push   r13
   140012568:	push   r14
   14001256a:	push   r15
   14001256c:	lea    rbp,[rsp-0x3e0]
   140012574:	sub    rsp,0x4e0
   14001257b:	mov    rax,QWORD PTR [rip+0x32cee]        # 0x140045270
   140012582:	xor    rax,rsp
   140012585:	mov    QWORD PTR [rbp+0x3d0],rax
   14001258c:	xor    eax,eax
   14001258e:	mov    rsi,rcx
   140012591:	mov    QWORD PTR [rsp+0x70],rcx
   140012596:	mov    QWORD PTR [rbp-0x78],rdx
   14001259a:	lea    rcx,[rbp-0x70]
   14001259e:	mov    rdx,r8
   1400125a1:	mov    r12,r9
   1400125a4:	mov    QWORD PTR [rsp+0x50],r9
   1400125a9:	mov    DWORD PTR [rbp-0x80],eax
   1400125ac:	mov    r14d,eax
   1400125af:	mov    DWORD PTR [rsp+0x58],eax
   1400125b3:	mov    edi,eax
   1400125b5:	mov    DWORD PTR [rsp+0x44],eax
   1400125b9:	mov    DWORD PTR [rsp+0x48],eax
   1400125bd:	mov    DWORD PTR [rsp+0x7c],eax
   1400125c1:	mov    DWORD PTR [rsp+0x78],eax
   1400125c5:	mov    ebx,eax
   1400125c7:	mov    DWORD PTR [rsp+0x4c],eax
   1400125cb:	call   0x140007ff0
   1400125d0:	call   0x14000b9f0
   1400125d5:	xor    r10d,r10d
   1400125d8:	mov    QWORD PTR [rbp-0x48],rax
   1400125dc:	test   rsi,rsi
   1400125df:	jne    0x14001260b
   1400125e1:	call   0x14000b9f0
   1400125e6:	mov    DWORD PTR [rax],0x16
   1400125ec:	call   0x14000b8b8
   1400125f1:	xor    ecx,ecx
   1400125f3:	cmp    BYTE PTR [rbp-0x58],cl
   1400125f6:	je     0x140012603
   1400125f8:	mov    rax,QWORD PTR [rbp-0x60]
   1400125fc:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140012603:	or     eax,0xffffffff
   140012606:	jmp    0x140012de7
   14001260b:	mov    r8,QWORD PTR [rbp-0x78]
   14001260f:	test   r8,r8
   140012612:	je     0x1400125e1
   140012614:	movzx  r15d,WORD PTR [r8]
   140012618:	mov    esi,r10d
   14001261b:	mov    DWORD PTR [rsp+0x40],r10d
   140012620:	mov    r13d,r10d
   140012623:	mov    edx,r10d
   140012626:	mov    QWORD PTR [rbp-0x50],r10
   14001262a:	test   r15w,r15w
   14001262e:	je     0x140012dd4
   140012634:	mov    r11d,0x20
   14001263a:	mov    r9d,0x200
   140012640:	add    r8,0x2
   140012644:	mov    QWORD PTR [rbp-0x78],r8
   140012648:	test   esi,esi
   14001264a:	js     0x140012dd4
   140012650:	movzx  eax,r15w
   140012654:	mov    ecx,0x58
   140012659:	sub    ax,r11w
   14001265d:	cmp    ax,cx
   140012660:	ja     0x140012677
   140012662:	lea    rcx,[rip+0x25ad7]        # 0x140038140
   140012669:	movzx  eax,r15w
   14001266d:	movsx  ecx,BYTE PTR [rax+rcx*1-0x20]
   140012672:	and    ecx,0xf
   140012675:	jmp    0x14001267a
   140012677:	mov    ecx,r10d
   14001267a:	movsxd rax,edx
   14001267d:	movsxd rcx,ecx
   140012680:	lea    rdx,[rax+rcx*8]
   140012684:	lea    rax,[rip+0x25ab5]        # 0x140038140
   14001268b:	movsx  edx,BYTE PTR [rdx+rax*1]
   14001268f:	sar    edx,0x4
   140012692:	mov    DWORD PTR [rsp+0x68],edx
   140012696:	mov    ecx,edx
   140012698:	test   edx,edx
   14001269a:	je     0x140012eba
   1400126a0:	dec    ecx
   1400126a2:	je     0x140012fca
   1400126a8:	dec    ecx
   1400126aa:	je     0x140012f6f
   1400126b0:	dec    ecx
   1400126b2:	je     0x140012f2d
   1400126b8:	dec    ecx
   1400126ba:	je     0x140012f20
   1400126c0:	dec    ecx
   1400126c2:	je     0x140012ee5
   1400126c8:	dec    ecx
   1400126ca:	je     0x140012e11
   1400126d0:	dec    ecx
   1400126d2:	jne    0x140012dc6
   1400126d8:	movzx  ecx,r15w
   1400126dc:	cmp    ecx,0x64
   1400126df:	jg     0x1400128f1
   1400126e5:	je     0x1400129fa
   1400126eb:	cmp    ecx,0x41
   1400126ee:	je     0x1400128bd
   1400126f4:	cmp    ecx,0x43
   1400126f7:	je     0x140012847
   1400126fd:	lea    eax,[rcx-0x45]
   140012700:	test   eax,0xfffffffd
   140012705:	je     0x1400128bd
   14001270b:	cmp    ecx,0x53
   14001270e:	je     0x1400127a1
   140012714:	mov    eax,0x58
   140012719:	cmp    ecx,eax
   14001271b:	je     0x14001297a
   140012721:	cmp    ecx,0x5a
   140012724:	je     0x14001273d
   140012726:	cmp    ecx,0x61
   140012729:	je     0x1400128c9
   14001272f:	cmp    ecx,0x63
   140012732:	je     0x140012853
   140012738:	jmp    0x14001280f
   14001273d:	mov    rax,QWORD PTR [r12]
   140012741:	add    r12,0x8
   140012745:	mov    QWORD PTR [rsp+0x50],r12
   14001274a:	test   rax,rax
   14001274d:	je     0x14001278a
   14001274f:	mov    rbx,QWORD PTR [rax+0x8]
   140012753:	test   rbx,rbx
   140012756:	je     0x14001278a
   140012758:	mov    edi,0x2d
   14001275d:	bt     r14d,0xb
   140012762:	jae    0x14001277c
   140012764:	movsx  eax,WORD PTR [rax]
   140012767:	mov    DWORD PTR [rsp+0x4c],0x1
   14001276f:	cdq    
   140012770:	sub    eax,edx
   140012772:	sar    eax,1
   140012774:	mov    r13d,eax
   140012777:	jmp    0x140012814
   14001277c:	movsx  r13d,WORD PTR [rax]
   140012780:	mov    DWORD PTR [rsp+0x4c],r10d
   140012785:	jmp    0x140012814
   14001278a:	mov    rbx,QWORD PTR [rip+0x3301f]        # 0x1400457b0
   140012791:	mov    rcx,rbx
   140012794:	call   0x14001ca40
   140012799:	xor    r10d,r10d
   14001279c:	mov    r13,rax
   14001279f:	jmp    0x14001280f
   1400127a1:	test   r14d,0x830
   1400127a8:	jne    0x1400127ad
   1400127aa:	or     r14d,r11d
   1400127ad:	cmp    DWORD PTR [rsp+0x44],0xffffffff
   1400127b2:	mov    rbx,QWORD PTR [r12]
   1400127b6:	mov    eax,0x7fffffff
   1400127bb:	cmove  edi,eax
   1400127be:	add    r12,0x8
   1400127c2:	mov    QWORD PTR [rsp+0x50],r12
   1400127c7:	test   r11b,r14b
   1400127ca:	je     0x14001293a
   1400127d0:	test   rbx,rbx
   1400127d3:	mov    r13d,r10d
   1400127d6:	cmove  rbx,QWORD PTR [rip+0x32fd2]        # 0x1400457b0
   1400127de:	mov    rsi,rbx
   1400127e1:	test   edi,edi
   1400127e3:	jle    0x14001280b
   1400127e5:	cmp    BYTE PTR [rsi],r10b
   1400127e8:	je     0x14001280b
   1400127ea:	movzx  ecx,BYTE PTR [rsi]
   1400127ed:	lea    rdx,[rbp-0x70]
   1400127f1:	call   0x14001d1f4
   1400127f6:	xor    r10d,r10d
   1400127f9:	test   eax,eax
   1400127fb:	je     0x140012800
   1400127fd:	inc    rsi
   140012800:	inc    r13d
   140012803:	inc    rsi
   140012806:	cmp    r13d,edi
   140012809:	jl     0x1400127e5
   14001280b:	mov    esi,DWORD PTR [rsp+0x40]
   14001280f:	mov    edi,0x2d
   140012814:	cmp    DWORD PTR [rsp+0x78],r10d
   140012819:	jne    0x140012d92
   14001281f:	test   r14b,0x40
   140012823:	je     0x140012c5d
   140012829:	bt     r14d,0x8
   14001282e:	jae    0x140012c2f
   140012834:	mov    WORD PTR [rsp+0x5c],di
   140012839:	mov    edi,0x1
   14001283e:	mov    DWORD PTR [rsp+0x48],edi
   140012842:	jmp    0x140012c61
   140012847:	test   r14d,0x830
   14001284e:	jne    0x140012853
   140012850:	or     r14d,r11d
   140012853:	movzx  eax,WORD PTR [r12]
   140012858:	add    r12,0x8
   14001285c:	mov    DWORD PTR [rsp+0x4c],0x1
   140012864:	mov    QWORD PTR [rsp+0x50],r12
   140012869:	mov    WORD PTR [rsp+0x60],ax
   14001286e:	test   r11b,r14b
   140012871:	je     0x1400128aa
   140012873:	mov    BYTE PTR [rsp+0x64],al
   140012877:	mov    rax,QWORD PTR [rbp-0x70]
   14001287b:	mov    BYTE PTR [rsp+0x65],r10b
   140012880:	movsxd r8,DWORD PTR [rax+0xd4]
   140012887:	lea    r9,[rbp-0x70]
   14001288b:	lea    rdx,[rsp+0x64]
   140012890:	lea    rcx,[rbp-0x30]
   140012894:	call   0x1400235dc
   140012899:	xor    r10d,r10d
   14001289c:	test   eax,eax
   14001289e:	jns    0x1400128ae
   1400128a0:	mov    DWORD PTR [rsp+0x78],0x1
   1400128a8:	jmp    0x1400128ae
   1400128aa:	mov    WORD PTR [rbp-0x30],ax
   1400128ae:	lea    rbx,[rbp-0x30]
   1400128b2:	mov    r13d,0x1
   1400128b8:	jmp    0x14001280f
   1400128bd:	mov    DWORD PTR [rsp+0x7c],0x1
   1400128c5:	add    r15w,r11w
   1400128c9:	mov    eax,0x67
   1400128ce:	or     r14d,0x40
   1400128d2:	lea    rbx,[rbp-0x30]
   1400128d6:	mov    esi,r9d
   1400128d9:	test   edi,edi
   1400128db:	jns    0x140012b1e
   1400128e1:	mov    r13d,0x6
   1400128e7:	mov    DWORD PTR [rsp+0x44],r13d
   1400128ec:	jmp    0x140012b71
   1400128f1:	mov    eax,0x67
   1400128f6:	cmp    ecx,eax
   1400128f8:	jle    0x1400128ce
   1400128fa:	cmp    ecx,0x69
   1400128fd:	je     0x1400129fa
   140012903:	cmp    ecx,0x6e
   140012906:	je     0x1400129c0
   14001290c:	cmp    ecx,0x6f
   14001290f:	je     0x1400129aa
   140012915:	cmp    ecx,0x70
   140012918:	je     0x140012970
   14001291a:	cmp    ecx,0x73
   14001291d:	je     0x1400127ad
   140012923:	cmp    ecx,0x75
   140012926:	je     0x1400129fe
   14001292c:	cmp    ecx,0x78
   14001292f:	jne    0x14001280f
   140012935:	lea    eax,[rcx-0x51]
   140012938:	jmp    0x14001297f
   14001293a:	test   rbx,rbx
   14001293d:	mov    DWORD PTR [rsp+0x4c],0x1
   140012945:	cmove  rbx,QWORD PTR [rip+0x32e6b]        # 0x1400457b8
   14001294d:	mov    rax,rbx
   140012950:	jmp    0x14001295e
   140012952:	dec    edi
   140012954:	cmp    WORD PTR [rax],r10w
   140012958:	je     0x140012962
   14001295a:	add    rax,0x2
   14001295e:	test   edi,edi
   140012960:	jne    0x140012952
   140012962:	sub    rax,rbx
   140012965:	sar    rax,1
   140012968:	mov    r13d,eax
   14001296b:	jmp    0x14001280f
   140012970:	mov    edi,0x10
   140012975:	bts    r14d,0xf
   14001297a:	mov    eax,0x7
   14001297f:	mov    DWORD PTR [rbp-0x80],eax
   140012982:	mov    r9d,0x10
   140012988:	mov    r15d,0x200
   14001298e:	test   r14b,r14b
   140012991:	jns    0x140012a0a
   140012993:	lea    ecx,[r9+0x20]
   140012997:	add    ax,0x51
   14001299b:	lea    edx,[rcx-0x2e]
   14001299e:	mov    WORD PTR [rsp+0x5c],cx
   1400129a3:	mov    WORD PTR [rsp+0x5e],ax
   1400129a8:	jmp    0x140012a0e
   1400129aa:	mov    r9d,0x8
   1400129b0:	test   r14b,r14b
   1400129b3:	jns    0x140012a04
   1400129b5:	mov    r15d,0x200
   1400129bb:	or     r14d,r15d
   1400129be:	jmp    0x140012a0a
   1400129c0:	mov    rdi,QWORD PTR [r12]
   1400129c4:	add    r12,0x8
   1400129c8:	mov    QWORD PTR [rsp+0x50],r12
   1400129cd:	call   0x140007888
   1400129d2:	xor    r10d,r10d
   1400129d5:	test   eax,eax
   1400129d7:	je     0x1400125e1
   1400129dd:	lea    r11d,[r10+0x20]
   1400129e1:	test   r11b,r14b
   1400129e4:	je     0x1400129eb
   1400129e6:	mov    WORD PTR [rdi],si
   1400129e9:	jmp    0x1400129ed
   1400129eb:	mov    DWORD PTR [rdi],esi
   1400129ed:	mov    DWORD PTR [rsp+0x78],0x1
   1400129f5:	jmp    0x140012d98
   1400129fa:	or     r14d,0x40
   1400129fe:	mov    r9d,0xa
   140012a04:	mov    r15d,0x200
   140012a0a:	mov    edx,DWORD PTR [rsp+0x48]
   140012a0e:	mov    eax,0x8000
   140012a13:	test   eax,r14d
   140012a16:	je     0x140012a22
   140012a18:	mov    r8,QWORD PTR [r12]
   140012a1c:	add    r12,0x8
   140012a20:	jmp    0x140012a5f
   140012a22:	bt     r14d,0xc
   140012a27:	jb     0x140012a18
   140012a29:	add    r12,0x8
   140012a2d:	test   r11b,r14b
   140012a30:	je     0x140012a4d
   140012a32:	mov    QWORD PTR [rsp+0x50],r12
   140012a37:	test   r14b,0x40
   140012a3b:	je     0x140012a45
   140012a3d:	movsx  r8,WORD PTR [r12-0x8]
   140012a43:	jmp    0x140012a64
   140012a45:	movzx  r8d,WORD PTR [r12-0x8]
   140012a4b:	jmp    0x140012a64
   140012a4d:	test   r14b,0x40
   140012a51:	je     0x140012a5a
   140012a53:	movsxd r8,DWORD PTR [r12-0x8]
   140012a58:	jmp    0x140012a5f
   140012a5a:	mov    r8d,DWORD PTR [r12-0x8]
   140012a5f:	mov    QWORD PTR [rsp+0x50],r12
   140012a64:	test   r14b,0x40
   140012a68:	je     0x140012a77
   140012a6a:	test   r8,r8
   140012a6d:	jns    0x140012a77
   140012a6f:	neg    r8
   140012a72:	bts    r14d,0x8
   140012a77:	test   eax,r14d
   140012a7a:	jne    0x140012a86
   140012a7c:	bt     r14d,0xc
   140012a81:	jb     0x140012a86
   140012a83:	mov    r8d,r8d
   140012a86:	test   edi,edi
   140012a88:	jns    0x140012a91
   140012a8a:	mov    edi,0x1
   140012a8f:	jmp    0x140012a9c
   140012a91:	and    r14d,0xfffffff7
   140012a95:	cmp    edi,r15d
   140012a98:	cmovg  edi,r15d
   140012a9c:	mov    esi,DWORD PTR [rbp-0x80]
   140012a9f:	mov    rax,r8
   140012aa2:	lea    rbx,[rbp+0x1cf]
   140012aa9:	neg    rax
   140012aac:	sbb    ecx,ecx
   140012aae:	and    ecx,edx
   140012ab0:	mov    DWORD PTR [rsp+0x48],ecx
   140012ab4:	mov    ecx,edi
   140012ab6:	dec    edi
   140012ab8:	test   ecx,ecx
   140012aba:	jg     0x140012ac1
   140012abc:	test   r8,r8
   140012abf:	je     0x140012ae0
   140012ac1:	xor    edx,edx
   140012ac3:	mov    rax,r8
   140012ac6:	movsxd rcx,r9d
   140012ac9:	div    rcx
   140012acc:	mov    r8,rax
   140012acf:	lea    eax,[rdx+0x30]
   140012ad2:	cmp    eax,0x39
   140012ad5:	jle    0x140012ad9
   140012ad7:	add    eax,esi
   140012ad9:	mov    BYTE PTR [rbx],al
   140012adb:	dec    rbx
   140012ade:	jmp    0x140012ab4
   140012ae0:	mov    esi,DWORD PTR [rsp+0x40]
   140012ae4:	lea    rax,[rbp+0x1cf]
   140012aeb:	mov    DWORD PTR [rsp+0x44],edi
   140012aef:	sub    eax,ebx
   140012af1:	inc    rbx
   140012af4:	mov    r13d,eax
   140012af7:	test   r15d,r14d
   140012afa:	je     0x14001280f
   140012b00:	test   eax,eax
   140012b02:	mov    eax,0x30
   140012b07:	je     0x140012b11
   140012b09:	cmp    BYTE PTR [rbx],al
   140012b0b:	je     0x14001280f
   140012b11:	dec    rbx
   140012b14:	inc    r13d
   140012b17:	mov    BYTE PTR [rbx],al
   140012b19:	jmp    0x14001280f
   140012b1e:	jne    0x140012b31
   140012b20:	cmp    r15w,ax
   140012b24:	jne    0x140012b67
   140012b26:	mov    r13d,0x1
   140012b2c:	jmp    0x1400128e7
   140012b31:	cmp    edi,r9d
   140012b34:	mov    r13d,0xa3
   140012b3a:	cmovg  edi,r9d
   140012b3e:	mov    DWORD PTR [rsp+0x44],edi
   140012b42:	cmp    edi,r13d
   140012b45:	jle    0x140012b6e
   140012b47:	add    edi,0x15d
   140012b4d:	movsxd rcx,edi
   140012b50:	call   0x14000fc4c
   140012b55:	mov    QWORD PTR [rbp-0x50],rax
   140012b59:	test   rax,rax
   140012b5c:	je     0x1400128e7
   140012b62:	mov    rbx,rax
   140012b65:	mov    esi,edi
   140012b67:	mov    r13d,DWORD PTR [rsp+0x44]
   140012b6c:	jmp    0x140012b71
   140012b6e:	mov    r13d,edi
   140012b71:	mov    rax,QWORD PTR [r12]
   140012b75:	mov    rcx,QWORD PTR [rip+0x33874]        # 0x1400463f0
   140012b7c:	add    r12,0x8
   140012b80:	mov    QWORD PTR [rsp+0x50],r12
   140012b85:	movsx  edi,r15b
   140012b89:	movsxd rsi,esi
   140012b8c:	mov    QWORD PTR [rbp-0x40],rax
   140012b90:	call   QWORD PTR [rip+0x22692]        # 0x140035228
   140012b96:	lea    rcx,[rbp-0x70]
   140012b9a:	mov    QWORD PTR [rsp+0x30],rcx
   140012b9f:	mov    ecx,DWORD PTR [rsp+0x7c]
   140012ba3:	mov    r9d,edi
   140012ba6:	mov    DWORD PTR [rsp+0x28],ecx
   140012baa:	lea    rcx,[rbp-0x40]
   140012bae:	mov    r8,rsi
   140012bb1:	mov    rdx,rbx
   140012bb4:	mov    DWORD PTR [rsp+0x20],r13d
   140012bb9:	call   rax
   140012bbb:	mov    edi,r14d
   140012bbe:	and    edi,0x80
   140012bc4:	je     0x140012be1
   140012bc6:	test   r13d,r13d
   140012bc9:	jne    0x140012be1
   140012bcb:	mov    rcx,QWORD PTR [rip+0x33836]        # 0x140046408
   140012bd2:	call   QWORD PTR [rip+0x22650]        # 0x140035228
   140012bd8:	lea    rdx,[rbp-0x70]
   140012bdc:	mov    rcx,rbx
   140012bdf:	call   rax
   140012be1:	mov    ecx,0x67
   140012be6:	cmp    r15w,cx
   140012bea:	jne    0x140012c06
   140012bec:	test   edi,edi
   140012bee:	jne    0x140012c06
   140012bf0:	mov    rcx,QWORD PTR [rip+0x33809]        # 0x140046400
   140012bf7:	call   QWORD PTR [rip+0x2262b]        # 0x140035228
   140012bfd:	lea    rdx,[rbp-0x70]
   140012c01:	mov    rcx,rbx
   140012c04:	call   rax
   140012c06:	mov    edi,0x2d
   140012c0b:	cmp    BYTE PTR [rbx],dil
   140012c0e:	jne    0x140012c18
   140012c10:	bts    r14d,0x8
   140012c15:	inc    rbx
   140012c18:	mov    rcx,rbx
   140012c1b:	call   0x14001ca40
   140012c20:	mov    esi,DWORD PTR [rsp+0x40]
   140012c24:	xor    r10d,r10d
   140012c27:	mov    r13d,eax
   140012c2a:	jmp    0x140012814
   140012c2f:	test   r14b,0x1
   140012c33:	je     0x140012c44
   140012c35:	mov    eax,0x2b
   140012c3a:	mov    WORD PTR [rsp+0x5c],ax
   140012c3f:	jmp    0x140012839
   140012c44:	test   r14b,0x2
   140012c48:	je     0x140012c5d
   140012c4a:	mov    eax,0x20
   140012c4f:	mov    WORD PTR [rsp+0x5c],ax
   140012c54:	lea    edi,[rax-0x1f]
   140012c57:	mov    DWORD PTR [rsp+0x48],edi
   140012c5b:	jmp    0x140012c66
   140012c5d:	mov    edi,DWORD PTR [rsp+0x48]
   140012c61:	mov    eax,0x20
   140012c66:	mov    r15d,DWORD PTR [rsp+0x58]
   140012c6b:	mov    rsi,QWORD PTR [rsp+0x70]
   140012c70:	sub    r15d,r13d
   140012c73:	sub    r15d,edi
   140012c76:	test   r14b,0xc
   140012c7a:	jne    0x140012c8e
   140012c7c:	lea    r9,[rsp+0x40]
   140012c81:	mov    ecx,eax
   140012c83:	mov    r8,rsi
   140012c86:	mov    edx,r15d
   140012c89:	call   0x14001302c
   140012c8e:	mov    rax,QWORD PTR [rbp-0x48]
   140012c92:	lea    r9,[rsp+0x40]
   140012c97:	lea    rcx,[rsp+0x5c]
   140012c9c:	mov    r8,rsi
   140012c9f:	mov    edx,edi
   140012ca1:	mov    QWORD PTR [rsp+0x20],rax
   140012ca6:	call   0x140013080
   140012cab:	mov    rdi,QWORD PTR [rsp+0x70]
   140012cb0:	test   r14b,0x8
   140012cb4:	je     0x140012cd1
   140012cb6:	test   r14b,0x4
   140012cba:	jne    0x140012cd1
   140012cbc:	lea    r9,[rsp+0x40]
   140012cc1:	mov    ecx,0x30
   140012cc6:	mov    r8,rdi
   140012cc9:	mov    edx,r15d
   140012ccc:	call   0x14001302c
   140012cd1:	xor    eax,eax
   140012cd3:	cmp    DWORD PTR [rsp+0x4c],eax
   140012cd7:	jne    0x140012d49
   140012cd9:	test   r13d,r13d
   140012cdc:	jle    0x140012d49
   140012cde:	mov    rdi,rbx
   140012ce1:	mov    esi,r13d
   140012ce4:	mov    rax,QWORD PTR [rbp-0x70]
   140012ce8:	lea    r9,[rbp-0x70]
   140012cec:	lea    rcx,[rsp+0x60]
   140012cf1:	movsxd r8,DWORD PTR [rax+0xd4]
   140012cf8:	mov    rdx,rdi
   140012cfb:	dec    esi
   140012cfd:	call   0x1400235dc
   140012d02:	xor    r10d,r10d
   140012d05:	movsxd r12,eax
   140012d08:	test   eax,eax
   140012d0a:	jle    0x140012d36
   140012d0c:	mov    rdx,QWORD PTR [rsp+0x70]
   140012d11:	movzx  ecx,WORD PTR [rsp+0x60]
   140012d16:	lea    r8,[rsp+0x40]
   140012d1b:	call   0x140012ff4
   140012d20:	add    rdi,r12
   140012d23:	xor    r10d,r10d
   140012d26:	test   esi,esi
   140012d28:	jg     0x140012ce4
   140012d2a:	mov    r12,QWORD PTR [rsp+0x50]
   140012d2f:	mov    rdi,QWORD PTR [rsp+0x70]
   140012d34:	jmp    0x140012d68
   140012d36:	mov    r12,QWORD PTR [rsp+0x50]
   140012d3b:	mov    rdi,QWORD PTR [rsp+0x70]
   140012d40:	or     esi,0xffffffff
   140012d43:	mov    DWORD PTR [rsp+0x40],esi
   140012d47:	jmp    0x140012d6c
   140012d49:	mov    rax,QWORD PTR [rbp-0x48]
   140012d4d:	lea    r9,[rsp+0x40]
   140012d52:	mov    r8,rdi
   140012d55:	mov    edx,r13d
   140012d58:	mov    rcx,rbx
   140012d5b:	mov    QWORD PTR [rsp+0x20],rax
   140012d60:	call   0x140013080
   140012d65:	xor    r10d,r10d
   140012d68:	mov    esi,DWORD PTR [rsp+0x40]
   140012d6c:	test   esi,esi
   140012d6e:	js     0x140012d92
   140012d70:	test   r14b,0x4
   140012d74:	je     0x140012d92
   140012d76:	lea    r9,[rsp+0x40]
   140012d7b:	mov    ecx,0x20
   140012d80:	mov    r8,rdi
   140012d83:	mov    edx,r15d
   140012d86:	call   0x14001302c
   140012d8b:	mov    esi,DWORD PTR [rsp+0x40]
   140012d8f:	xor    r10d,r10d
   140012d92:	mov    r11d,0x20
   140012d98:	mov    rax,QWORD PTR [rbp-0x50]
   140012d9c:	test   rax,rax
   140012d9f:	je     0x140012db4
   140012da1:	mov    rcx,rax
   140012da4:	call   0x14000fb50
   140012da9:	xor    r10d,r10d
   140012dac:	lea    r11d,[r10+0x20]
   140012db0:	mov    QWORD PTR [rbp-0x50],r10
   140012db4:	mov    edi,DWORD PTR [rsp+0x44]
   140012db8:	mov    r8,QWORD PTR [rbp-0x78]
   140012dbc:	mov    edx,DWORD PTR [rsp+0x68]
   140012dc0:	mov    r9d,0x200
   140012dc6:	movzx  r15d,WORD PTR [r8]
   140012dca:	test   r15w,r15w
   140012dce:	jne    0x140012640
   140012dd4:	cmp    BYTE PTR [rbp-0x58],r10b
   140012dd8:	je     0x140012de5
   140012dda:	mov    rcx,QWORD PTR [rbp-0x60]
   140012dde:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140012de5:	mov    eax,esi
   140012de7:	mov    rcx,QWORD PTR [rbp+0x3d0]
   140012dee:	xor    rcx,rsp
   140012df1:	call   0x1400097d0
   140012df6:	mov    rbx,QWORD PTR [rsp+0x530]
   140012dfe:	add    rsp,0x4e0
   140012e05:	pop    r15
   140012e07:	pop    r14
   140012e09:	pop    r13
   140012e0b:	pop    r12
   140012e0d:	pop    rdi
   140012e0e:	pop    rsi
   140012e0f:	pop    rbp
   140012e10:	ret    
   140012e11:	movzx  eax,r15w
   140012e15:	cmp    eax,0x49
   140012e18:	je     0x140012e56
   140012e1a:	cmp    eax,0x68
   140012e1d:	je     0x140012e4e
   140012e1f:	mov    ecx,0x6c
   140012e24:	cmp    eax,ecx
   140012e26:	je     0x140012e34
   140012e28:	cmp    eax,0x77
   140012e2b:	jne    0x140012dc6
   140012e2d:	bts    r14d,0xb
   140012e32:	jmp    0x140012dc6
   140012e34:	cmp    WORD PTR [r8],cx
   140012e38:	jne    0x140012e45
   140012e3a:	add    r8,0x2
   140012e3e:	bts    r14d,0xc
   140012e43:	jmp    0x140012dc6
   140012e45:	or     r14d,0x10
   140012e49:	jmp    0x140012dc6
   140012e4e:	or     r14d,r11d
   140012e51:	jmp    0x140012dc6
   140012e56:	movzx  eax,WORD PTR [r8]
   140012e5a:	bts    r14d,0xf
   140012e5f:	cmp    ax,0x36
   140012e63:	jne    0x140012e7b
   140012e65:	cmp    WORD PTR [r8+0x2],0x34
   140012e6b:	jne    0x140012e7b
   140012e6d:	add    r8,0x4
   140012e71:	bts    r14d,0xf
   140012e76:	jmp    0x140012dc6
   140012e7b:	cmp    ax,0x33
   140012e7f:	jne    0x140012e97
   140012e81:	cmp    WORD PTR [r8+0x2],0x32
   140012e87:	jne    0x140012e97
   140012e89:	add    r8,0x4
   140012e8d:	btr    r14d,0xf
   140012e92:	jmp    0x140012dc6
   140012e97:	sub    ax,0x58
   140012e9b:	cmp    ax,r11w
   140012e9f:	ja     0x140012eb5
   140012ea1:	movabs rcx,0x120821001
   140012eab:	bt     rcx,rax
   140012eaf:	jb     0x140012dc6
   140012eb5:	mov    DWORD PTR [rsp+0x68],r10d
   140012eba:	mov    rdx,QWORD PTR [rsp+0x70]
   140012ebf:	lea    r8,[rsp+0x40]
   140012ec4:	movzx  ecx,r15w
   140012ec8:	mov    DWORD PTR [rsp+0x4c],0x1
   140012ed0:	call   0x140012ff4
   140012ed5:	mov    esi,DWORD PTR [rsp+0x40]
   140012ed9:	xor    r10d,r10d
   140012edc:	lea    r11d,[r10+0x20]
   140012ee0:	jmp    0x140012db8
   140012ee5:	cmp    r15w,0x2a
   140012eea:	jne    0x140012f0a
   140012eec:	mov    edi,DWORD PTR [r12]
   140012ef0:	add    r12,0x8
   140012ef4:	mov    QWORD PTR [rsp+0x50],r12
   140012ef9:	mov    DWORD PTR [rsp+0x44],edi
   140012efd:	test   edi,edi
   140012eff:	jns    0x140012dc6
   140012f05:	or     edi,0xffffffff
   140012f08:	jmp    0x140012f17
   140012f0a:	lea    edi,[rdi+rdi*4]
   140012f0d:	movzx  eax,r15w
   140012f11:	lea    edi,[rdi-0x18]
   140012f14:	lea    edi,[rax+rdi*2]
   140012f17:	mov    DWORD PTR [rsp+0x44],edi
   140012f1b:	jmp    0x140012dc6
   140012f20:	mov    edi,r10d
   140012f23:	mov    DWORD PTR [rsp+0x44],r10d
   140012f28:	jmp    0x140012dc6
   140012f2d:	cmp    r15w,0x2a
   140012f32:	jne    0x140012f55
   140012f34:	mov    eax,DWORD PTR [r12]
   140012f38:	add    r12,0x8
   140012f3c:	mov    QWORD PTR [rsp+0x50],r12
   140012f41:	mov    DWORD PTR [rsp+0x58],eax
   140012f45:	test   eax,eax
   140012f47:	jns    0x140012dc6
   140012f4d:	or     r14d,0x4
   140012f51:	neg    eax
   140012f53:	jmp    0x140012f66
   140012f55:	mov    eax,DWORD PTR [rsp+0x58]
   140012f59:	lea    ecx,[rax+rax*4]
   140012f5c:	movzx  eax,r15w
   140012f60:	lea    eax,[rax+rcx*2]
   140012f63:	add    eax,0xffffffd0
   140012f66:	mov    DWORD PTR [rsp+0x58],eax
   140012f6a:	jmp    0x140012dc6
   140012f6f:	movzx  eax,r15w
   140012f73:	cmp    eax,r11d
   140012f76:	je     0x140012fc1
   140012f78:	cmp    eax,0x23
   140012f7b:	je     0x140012fb7
   140012f7d:	mov    ecx,0x2b
   140012f82:	cmp    eax,ecx
   140012f84:	je     0x140012fae
   140012f86:	mov    ecx,0x2d
   140012f8b:	cmp    eax,ecx
   140012f8d:	je     0x140012fa5
   140012f8f:	mov    ecx,0x30
   140012f94:	cmp    eax,ecx
   140012f96:	jne    0x140012dc6
   140012f9c:	or     r14d,0x8
   140012fa0:	jmp    0x140012dc6
   140012fa5:	or     r14d,0x4
   140012fa9:	jmp    0x140012dc6
   140012fae:	or     r14d,0x1
   140012fb2:	jmp    0x140012dc6
   140012fb7:	bts    r14d,0x7
   140012fbc:	jmp    0x140012dc6
   140012fc1:	or     r14d,0x2
   140012fc5:	jmp    0x140012dc6
   140012fca:	or     edi,0xffffffff
   140012fcd:	mov    DWORD PTR [rsp+0x7c],r10d
   140012fd2:	mov    DWORD PTR [rsp+0x78],r10d
   140012fd7:	mov    DWORD PTR [rsp+0x58],r10d
   140012fdc:	mov    DWORD PTR [rsp+0x48],r10d
   140012fe1:	mov    r14d,r10d
   140012fe4:	mov    DWORD PTR [rsp+0x44],edi
   140012fe8:	mov    DWORD PTR [rsp+0x4c],r10d
   140012fed:	jmp    0x140012dc6
   140012ff2:	int3   
   140012ff3:	int3   
   140012ff4:	rex push rbx
   140012ff6:	sub    rsp,0x20
   140012ffa:	test   BYTE PTR [rdx+0x18],0x40
   140012ffe:	mov    rbx,r8
   140013001:	je     0x14001300f
   140013003:	cmp    QWORD PTR [rdx+0x10],0x0
   140013008:	jne    0x14001300f
   14001300a:	inc    DWORD PTR [r8]
   14001300d:	jmp    0x140013025
   14001300f:	call   0x140023378
   140013014:	mov    ecx,0xffff
   140013019:	cmp    ax,cx
   14001301c:	jne    0x140013023
   14001301e:	or     DWORD PTR [rbx],0xffffffff
   140013021:	jmp    0x140013025
   140013023:	inc    DWORD PTR [rbx]
   140013025:	add    rsp,0x20
   140013029:	pop    rbx
   14001302a:	ret    
   14001302b:	int3   
   14001302c:	test   edx,edx
   14001302e:	jle    0x14001307c
   140013030:	mov    QWORD PTR [rsp+0x8],rbx
   140013035:	mov    QWORD PTR [rsp+0x10],rbp
   14001303a:	mov    QWORD PTR [rsp+0x18],rsi
   14001303f:	push   rdi
   140013040:	sub    rsp,0x20
   140013044:	mov    rdi,r9
   140013047:	mov    rsi,r8
   14001304a:	mov    ebx,edx
   14001304c:	movzx  ebp,cx
   14001304f:	mov    r8,rdi
   140013052:	mov    rdx,rsi
   140013055:	movzx  ecx,bp
   140013058:	dec    ebx
   14001305a:	call   0x140012ff4
   14001305f:	cmp    DWORD PTR [rdi],0xffffffff
   140013062:	je     0x140013068
   140013064:	test   ebx,ebx
   140013066:	jg     0x14001304f
   140013068:	mov    rbx,QWORD PTR [rsp+0x30]
   14001306d:	mov    rbp,QWORD PTR [rsp+0x38]
   140013072:	mov    rsi,QWORD PTR [rsp+0x40]
   140013077:	add    rsp,0x20
   14001307b:	pop    rdi
   14001307c:	ret    
   14001307d:	int3   
   14001307e:	int3   
   14001307f:	int3   
   140013080:	mov    QWORD PTR [rsp+0x8],rbx
   140013085:	mov    QWORD PTR [rsp+0x10],rbp
   14001308a:	mov    QWORD PTR [rsp+0x18],rsi
   14001308f:	push   rdi
   140013090:	push   r14
   140013092:	push   r15
   140013094:	sub    rsp,0x20
   140013098:	test   BYTE PTR [r8+0x18],0x40
   14001309d:	mov    rbx,QWORD PTR [rsp+0x60]
   1400130a2:	mov    rdi,r9
   1400130a5:	mov    r15d,DWORD PTR [rbx]
   1400130a8:	mov    rbp,r8
   1400130ab:	mov    esi,edx
   1400130ad:	mov    r14,rcx
   1400130b0:	je     0x1400130be
   1400130b2:	cmp    QWORD PTR [r8+0x10],0x0
   1400130b7:	jne    0x1400130be
   1400130b9:	add    DWORD PTR [r9],edx
   1400130bc:	jmp    0x140013100
   1400130be:	and    DWORD PTR [rbx],0x0
   1400130c1:	test   edx,edx
   1400130c3:	jle    0x1400130fd
   1400130c5:	movzx  ecx,WORD PTR [r14]
   1400130c9:	mov    r8,rdi
   1400130cc:	mov    rdx,rbp
   1400130cf:	dec    esi
   1400130d1:	call   0x140012ff4
   1400130d6:	cmp    DWORD PTR [rdi],0xffffffff
   1400130d9:	lea    r14,[r14+0x2]
   1400130dd:	jne    0x1400130f4
   1400130df:	cmp    DWORD PTR [rbx],0x2a
   1400130e2:	jne    0x1400130f8
   1400130e4:	mov    ecx,0x3f
   1400130e9:	mov    r8,rdi
   1400130ec:	mov    rdx,rbp
   1400130ef:	call   0x140012ff4
   1400130f4:	test   esi,esi
   1400130f6:	jg     0x1400130c5
   1400130f8:	cmp    DWORD PTR [rbx],0x0
   1400130fb:	jne    0x140013100
   1400130fd:	mov    DWORD PTR [rbx],r15d
   140013100:	mov    rbx,QWORD PTR [rsp+0x40]
   140013105:	mov    rbp,QWORD PTR [rsp+0x48]
   14001310a:	mov    rsi,QWORD PTR [rsp+0x50]
   14001310f:	add    rsp,0x20
   140013113:	pop    r15
   140013115:	pop    r14
   140013117:	pop    rdi
   140013118:	ret    
   140013119:	int3   
   14001311a:	int3   
   14001311b:	int3   
   14001311c:	mov    QWORD PTR [rsp+0x18],rbx
   140013121:	push   rbp
   140013122:	push   rsi
   140013123:	push   rdi
   140013124:	push   r12
   140013126:	push   r13
   140013128:	push   r14
   14001312a:	push   r15
   14001312c:	lea    rbp,[rsp-0x3e0]
   140013134:	sub    rsp,0x4e0
   14001313b:	mov    rax,QWORD PTR [rip+0x3212e]        # 0x140045270
   140013142:	xor    rax,rsp
   140013145:	mov    QWORD PTR [rbp+0x3d0],rax
   14001314c:	xor    eax,eax
   14001314e:	mov    rsi,rcx
   140013151:	mov    QWORD PTR [rbp-0x80],rcx
   140013155:	mov    QWORD PTR [rbp-0x78],rdx
   140013159:	lea    rcx,[rbp-0x70]
   14001315d:	mov    rdx,r8
   140013160:	mov    r12,r9
   140013163:	mov    QWORD PTR [rsp+0x50],r9
   140013168:	mov    DWORD PTR [rsp+0x78],eax
   14001316c:	mov    r14d,eax
   14001316f:	mov    DWORD PTR [rsp+0x5c],eax
   140013173:	mov    edi,eax
   140013175:	mov    DWORD PTR [rsp+0x44],eax
   140013179:	mov    DWORD PTR [rsp+0x48],eax
   14001317d:	mov    DWORD PTR [rsp+0x74],eax
   140013181:	mov    DWORD PTR [rsp+0x70],eax
   140013185:	mov    ebx,eax
   140013187:	mov    DWORD PTR [rsp+0x58],eax
   14001318b:	call   0x140007ff0
   140013190:	call   0x14000b9f0
   140013195:	xor    r10d,r10d
   140013198:	mov    QWORD PTR [rbp-0x48],rax
   14001319c:	test   rsi,rsi
   14001319f:	jne    0x1400131cb
   1400131a1:	call   0x14000b9f0
   1400131a6:	mov    DWORD PTR [rax],0x16
   1400131ac:	call   0x14000b8b8
   1400131b1:	xor    ecx,ecx
   1400131b3:	cmp    BYTE PTR [rbp-0x58],cl
   1400131b6:	je     0x1400131c3
   1400131b8:	mov    rax,QWORD PTR [rbp-0x60]
   1400131bc:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400131c3:	or     eax,0xffffffff
   1400131c6:	jmp    0x1400139ca
   1400131cb:	mov    r8,QWORD PTR [rbp-0x78]
   1400131cf:	test   r8,r8
   1400131d2:	je     0x1400131a1
   1400131d4:	movzx  r15d,WORD PTR [r8]
   1400131d8:	mov    edx,r10d
   1400131db:	mov    r13d,r10d
   1400131de:	mov    r9d,r10d
   1400131e1:	mov    QWORD PTR [rbp-0x50],r10
   1400131e5:	mov    DWORD PTR [rsp+0x40],edx
   1400131e9:	test   r15w,r15w
   1400131ed:	je     0x1400139b7
   1400131f3:	or     esi,0xffffffff
   1400131f6:	lea    r11d,[rsi+0x21]
   1400131fa:	add    r8,0x2
   1400131fe:	mov    ecx,0x58
   140013203:	mov    QWORD PTR [rbp-0x78],r8
   140013207:	test   edx,edx
   140013209:	js     0x1400139a8
   14001320f:	movzx  eax,r15w
   140013213:	sub    ax,r11w
   140013217:	cmp    ax,cx
   14001321a:	ja     0x140013231
   14001321c:	lea    rcx,[rip+0x2561d]        # 0x140038840
   140013223:	movzx  eax,r15w
   140013227:	movzx  ecx,BYTE PTR [rax+rcx*1-0x20]
   14001322c:	and    ecx,0xf
   14001322f:	jmp    0x140013234
   140013231:	mov    ecx,r10d
   140013234:	movsxd rax,ecx
   140013237:	lea    rcx,[rax+rax*8]
   14001323b:	movsxd rax,r9d
   14001323e:	add    rcx,rax
   140013241:	lea    rax,[rip+0x255f8]        # 0x140038840
   140013248:	movzx  r9d,BYTE PTR [rcx+rax*1]
   14001324d:	shr    r9d,0x4
   140013251:	mov    DWORD PTR [rsp+0x6c],r9d
   140013256:	cmp    r9d,0x8
   14001325a:	je     0x140013bdc
   140013260:	mov    ecx,r9d
   140013263:	test   r9d,r9d
   140013266:	je     0x140013aa0
   14001326c:	dec    ecx
   14001326e:	je     0x140013bb5
   140013274:	dec    ecx
   140013276:	je     0x140013b5a
   14001327c:	dec    ecx
   14001327e:	je     0x140013b18
   140013284:	dec    ecx
   140013286:	je     0x140013b0b
   14001328c:	dec    ecx
   14001328e:	je     0x140013aca
   140013294:	dec    ecx
   140013296:	je     0x1400139f4
   14001329c:	dec    ecx
   14001329e:	jne    0x14001399a
   1400132a4:	movzx  ecx,r15w
   1400132a8:	cmp    ecx,0x64
   1400132ab:	jg     0x1400134c1
   1400132b1:	je     0x1400135d7
   1400132b7:	cmp    ecx,0x41
   1400132ba:	je     0x140013489
   1400132c0:	cmp    ecx,0x43
   1400132c3:	je     0x140013413
   1400132c9:	lea    eax,[rcx-0x45]
   1400132cc:	test   eax,0xfffffffd
   1400132d1:	je     0x140013489
   1400132d7:	cmp    ecx,0x53
   1400132da:	je     0x14001339d
   1400132e0:	mov    eax,0x58
   1400132e5:	cmp    ecx,eax
   1400132e7:	je     0x14001354a
   1400132ed:	cmp    ecx,0x5a
   1400132f0:	je     0x14001333c
   1400132f2:	cmp    ecx,0x61
   1400132f5:	je     0x140013495
   1400132fb:	cmp    ecx,0x63
   1400132fe:	je     0x14001341f
   140013304:	mov    edi,0x2d
   140013309:	cmp    DWORD PTR [rsp+0x70],r10d
   14001330e:	jne    0x140013960
   140013314:	test   r14b,0x40
   140013318:	je     0x140013838
   14001331e:	bt     r14d,0x8
   140013323:	jae    0x14001380a
   140013329:	mov    WORD PTR [rsp+0x60],di
   14001332e:	mov    edi,0x1
   140013333:	mov    DWORD PTR [rsp+0x48],edi
   140013337:	jmp    0x14001383c
   14001333c:	mov    rax,QWORD PTR [r12]
   140013340:	add    r12,0x8
   140013344:	mov    QWORD PTR [rsp+0x50],r12
   140013349:	test   rax,rax
   14001334c:	je     0x140013383
   14001334e:	mov    rbx,QWORD PTR [rax+0x8]
   140013352:	test   rbx,rbx
   140013355:	je     0x140013383
   140013357:	mov    edi,0x2d
   14001335c:	bt     r14d,0xb
   140013361:	jae    0x140013378
   140013363:	movsx  eax,WORD PTR [rax]
   140013366:	mov    DWORD PTR [rsp+0x58],0x1
   14001336e:	cdq    
   14001336f:	sub    eax,edx
   140013371:	sar    eax,1
   140013373:	mov    r13d,eax
   140013376:	jmp    0x140013309
   140013378:	movsx  r13d,WORD PTR [rax]
   14001337c:	mov    DWORD PTR [rsp+0x58],r10d
   140013381:	jmp    0x140013309
   140013383:	mov    rbx,QWORD PTR [rip+0x32426]        # 0x1400457b0
   14001338a:	mov    rcx,rbx
   14001338d:	call   0x14001ca40
   140013392:	xor    r10d,r10d
   140013395:	mov    r13,rax
   140013398:	jmp    0x140013304
   14001339d:	test   r14d,0x830
   1400133a4:	jne    0x1400133a9
   1400133a6:	or     r14d,r11d
   1400133a9:	cmp    DWORD PTR [rsp+0x44],esi
   1400133ad:	mov    rbx,QWORD PTR [r12]
   1400133b1:	mov    eax,0x7fffffff
   1400133b6:	cmove  edi,eax
   1400133b9:	add    r12,0x8
   1400133bd:	mov    QWORD PTR [rsp+0x50],r12
   1400133c2:	test   r11b,r14b
   1400133c5:	je     0x14001350a
   1400133cb:	test   rbx,rbx
   1400133ce:	mov    r13d,r10d
   1400133d1:	cmove  rbx,QWORD PTR [rip+0x323d7]        # 0x1400457b0
   1400133d9:	mov    rsi,rbx
   1400133dc:	test   edi,edi
   1400133de:	jle    0x140013304
   1400133e4:	cmp    BYTE PTR [rsi],r10b
   1400133e7:	je     0x140013304
   1400133ed:	movzx  ecx,BYTE PTR [rsi]
   1400133f0:	lea    rdx,[rbp-0x70]
   1400133f4:	call   0x14001d1f4
   1400133f9:	xor    r10d,r10d
   1400133fc:	test   eax,eax
   1400133fe:	je     0x140013403
   140013400:	inc    rsi
   140013403:	inc    r13d
   140013406:	inc    rsi
   140013409:	cmp    r13d,edi
   14001340c:	jl     0x1400133e4
   14001340e:	jmp    0x140013304
   140013413:	test   r14d,0x830
   14001341a:	jne    0x14001341f
   14001341c:	or     r14d,r11d
   14001341f:	movzx  eax,WORD PTR [r12]
   140013424:	add    r12,0x8
   140013428:	mov    DWORD PTR [rsp+0x58],0x1
   140013430:	mov    QWORD PTR [rsp+0x50],r12
   140013435:	mov    WORD PTR [rsp+0x64],ax
   14001343a:	test   r11b,r14b
   14001343d:	je     0x140013476
   14001343f:	mov    BYTE PTR [rsp+0x68],al
   140013443:	mov    rax,QWORD PTR [rbp-0x70]
   140013447:	mov    BYTE PTR [rsp+0x69],r10b
   14001344c:	movsxd r8,DWORD PTR [rax+0xd4]
   140013453:	lea    r9,[rbp-0x70]
   140013457:	lea    rdx,[rsp+0x68]
   14001345c:	lea    rcx,[rbp-0x30]
   140013460:	call   0x1400235dc
   140013465:	xor    r10d,r10d
   140013468:	test   eax,eax
   14001346a:	jns    0x14001347a
   14001346c:	mov    DWORD PTR [rsp+0x70],0x1
   140013474:	jmp    0x14001347a
   140013476:	mov    WORD PTR [rbp-0x30],ax
   14001347a:	lea    rbx,[rbp-0x30]
   14001347e:	mov    r13d,0x1
   140013484:	jmp    0x140013304
   140013489:	mov    DWORD PTR [rsp+0x74],0x1
   140013491:	add    r15w,r11w
   140013495:	mov    edx,0x67
   14001349a:	mov    eax,0x200
   14001349f:	or     r14d,0x40
   1400134a3:	lea    rbx,[rbp-0x30]
   1400134a7:	mov    esi,eax
   1400134a9:	test   edi,edi
   1400134ab:	jns    0x1400136ff
   1400134b1:	mov    r13d,0x6
   1400134b7:	mov    DWORD PTR [rsp+0x44],r13d
   1400134bc:	jmp    0x140013750
   1400134c1:	mov    edx,0x67
   1400134c6:	cmp    ecx,edx
   1400134c8:	jle    0x14001349a
   1400134ca:	cmp    ecx,0x69
   1400134cd:	je     0x1400135d7
   1400134d3:	cmp    ecx,0x6e
   1400134d6:	je     0x140013595
   1400134dc:	cmp    ecx,0x6f
   1400134df:	je     0x140013580
   1400134e5:	cmp    ecx,0x70
   1400134e8:	je     0x140013540
   1400134ea:	cmp    ecx,0x73
   1400134ed:	je     0x1400133a9
   1400134f3:	cmp    ecx,0x75
   1400134f6:	je     0x1400135db
   1400134fc:	cmp    ecx,0x78
   1400134ff:	jne    0x140013304
   140013505:	lea    eax,[rdx-0x40]
   140013508:	jmp    0x14001354f
   14001350a:	test   rbx,rbx
   14001350d:	mov    DWORD PTR [rsp+0x58],0x1
   140013515:	cmove  rbx,QWORD PTR [rip+0x3229b]        # 0x1400457b8
   14001351d:	mov    rax,rbx
   140013520:	jmp    0x14001352e
   140013522:	dec    edi
   140013524:	cmp    WORD PTR [rax],r10w
   140013528:	je     0x140013532
   14001352a:	add    rax,0x2
   14001352e:	test   edi,edi
   140013530:	jne    0x140013522
   140013532:	sub    rax,rbx
   140013535:	sar    rax,1
   140013538:	mov    r13d,eax
   14001353b:	jmp    0x140013304
   140013540:	mov    edi,0x10
   140013545:	bts    r14d,0xf
   14001354a:	mov    eax,0x7
   14001354f:	mov    r9d,0x10
   140013555:	mov    DWORD PTR [rsp+0x78],eax
   140013559:	mov    esi,0x200
   14001355e:	lea    r15d,[r9+0x20]
   140013562:	test   r14b,r14b
   140013565:	jns    0x1400135ec
   14001356b:	add    ax,0x51
   14001356f:	mov    WORD PTR [rsp+0x60],r15w
   140013575:	lea    edx,[r9-0xe]
   140013579:	mov    WORD PTR [rsp+0x62],ax
   14001357e:	jmp    0x1400135f0
   140013580:	mov    r9d,0x8
   140013586:	test   r14b,r14b
   140013589:	jns    0x1400135e1
   14001358b:	mov    esi,0x200
   140013590:	or     r14d,esi
   140013593:	jmp    0x1400135e6
   140013595:	mov    rdi,QWORD PTR [r12]
   140013599:	add    r12,0x8
   14001359d:	mov    QWORD PTR [rsp+0x50],r12
   1400135a2:	call   0x140007888
   1400135a7:	xor    r10d,r10d
   1400135aa:	test   eax,eax
   1400135ac:	je     0x140013bdc
   1400135b2:	mov    eax,DWORD PTR [rsp+0x40]
   1400135b6:	lea    r11d,[r10+0x20]
   1400135ba:	test   r11b,r14b
   1400135bd:	je     0x1400135c4
   1400135bf:	mov    WORD PTR [rdi],ax
   1400135c2:	jmp    0x1400135c6
   1400135c4:	mov    DWORD PTR [rdi],eax
   1400135c6:	mov    edx,DWORD PTR [rsp+0x40]
   1400135ca:	mov    DWORD PTR [rsp+0x70],0x1
   1400135d2:	jmp    0x14001396a
   1400135d7:	or     r14d,0x40
   1400135db:	mov    r9d,0xa
   1400135e1:	mov    esi,0x200
   1400135e6:	mov    r15d,0x30
   1400135ec:	mov    edx,DWORD PTR [rsp+0x48]
   1400135f0:	mov    eax,0x8000
   1400135f5:	test   eax,r14d
   1400135f8:	je     0x140013604
   1400135fa:	mov    r8,QWORD PTR [r12]
   1400135fe:	add    r12,0x8
   140013602:	jmp    0x140013641
   140013604:	bt     r14d,0xc
   140013609:	jb     0x1400135fa
   14001360b:	add    r12,0x8
   14001360f:	test   r11b,r14b
   140013612:	je     0x14001362f
   140013614:	mov    QWORD PTR [rsp+0x50],r12
   140013619:	test   r14b,0x40
   14001361d:	je     0x140013627
   14001361f:	movsx  r8,WORD PTR [r12-0x8]
   140013625:	jmp    0x140013646
   140013627:	movzx  r8d,WORD PTR [r12-0x8]
   14001362d:	jmp    0x140013646
   14001362f:	test   r14b,0x40
   140013633:	je     0x14001363c
   140013635:	movsxd r8,DWORD PTR [r12-0x8]
   14001363a:	jmp    0x140013641
   14001363c:	mov    r8d,DWORD PTR [r12-0x8]
   140013641:	mov    QWORD PTR [rsp+0x50],r12
   140013646:	test   r14b,0x40
   14001364a:	je     0x140013659
   14001364c:	test   r8,r8
   14001364f:	jns    0x140013659
   140013651:	neg    r8
   140013654:	bts    r14d,0x8
   140013659:	test   eax,r14d
   14001365c:	jne    0x140013668
   14001365e:	bt     r14d,0xc
   140013663:	jb     0x140013668
   140013665:	mov    r8d,r8d
   140013668:	test   edi,edi
   14001366a:	jns    0x140013673
   14001366c:	mov    edi,0x1
   140013671:	jmp    0x14001367c
   140013673:	and    r14d,0xfffffff7
   140013677:	cmp    edi,esi
   140013679:	cmovg  edi,esi
   14001367c:	mov    r12d,DWORD PTR [rsp+0x78]
   140013681:	mov    rax,r8
   140013684:	lea    rbx,[rbp+0x1cf]
   14001368b:	neg    rax
   14001368e:	sbb    ecx,ecx
   140013690:	and    ecx,edx
   140013692:	mov    DWORD PTR [rsp+0x48],ecx
   140013696:	mov    ecx,edi
   140013698:	dec    edi
   14001369a:	test   ecx,ecx
   14001369c:	jg     0x1400136a3
   14001369e:	test   r8,r8
   1400136a1:	je     0x1400136c3
   1400136a3:	xor    edx,edx
   1400136a5:	mov    rax,r8
   1400136a8:	movsxd rcx,r9d
   1400136ab:	div    rcx
   1400136ae:	mov    r8,rax
   1400136b1:	lea    eax,[rdx+0x30]
   1400136b4:	cmp    eax,0x39
   1400136b7:	jle    0x1400136bc
   1400136b9:	add    eax,r12d
   1400136bc:	mov    BYTE PTR [rbx],al
   1400136be:	dec    rbx
   1400136c1:	jmp    0x140013696
   1400136c3:	mov    r12,QWORD PTR [rsp+0x50]
   1400136c8:	lea    rax,[rbp+0x1cf]
   1400136cf:	mov    DWORD PTR [rsp+0x44],edi
   1400136d3:	sub    eax,ebx
   1400136d5:	inc    rbx
   1400136d8:	mov    r13d,eax
   1400136db:	test   esi,r14d
   1400136de:	je     0x140013304
   1400136e4:	test   eax,eax
   1400136e6:	je     0x1400136f1
   1400136e8:	cmp    BYTE PTR [rbx],r15b
   1400136eb:	je     0x140013304
   1400136f1:	dec    rbx
   1400136f4:	inc    r13d
   1400136f7:	mov    BYTE PTR [rbx],r15b
   1400136fa:	jmp    0x140013304
   1400136ff:	jne    0x140013712
   140013701:	cmp    r15w,dx
   140013705:	jne    0x140013746
   140013707:	mov    r13d,0x1
   14001370d:	jmp    0x1400134b7
   140013712:	cmp    edi,eax
   140013714:	mov    r13d,0xa3
   14001371a:	cmovg  edi,eax
   14001371d:	mov    DWORD PTR [rsp+0x44],edi
   140013721:	cmp    edi,r13d
   140013724:	jle    0x14001374d
   140013726:	add    edi,0x15d
   14001372c:	movsxd rcx,edi
   14001372f:	call   0x14000fc4c
   140013734:	mov    QWORD PTR [rbp-0x50],rax
   140013738:	test   rax,rax
   14001373b:	je     0x1400134b7
   140013741:	mov    rbx,rax
   140013744:	mov    esi,edi
   140013746:	mov    r13d,DWORD PTR [rsp+0x44]
   14001374b:	jmp    0x140013750
   14001374d:	mov    r13d,edi
   140013750:	mov    rax,QWORD PTR [r12]
   140013754:	mov    rcx,QWORD PTR [rip+0x32c95]        # 0x1400463f0
   14001375b:	add    r12,0x8
   14001375f:	mov    QWORD PTR [rsp+0x50],r12
   140013764:	movsx  edi,r15b
   140013768:	movsxd rsi,esi
   14001376b:	mov    QWORD PTR [rbp-0x40],rax
   14001376f:	call   QWORD PTR [rip+0x21ab3]        # 0x140035228
   140013775:	lea    rcx,[rbp-0x70]
   140013779:	mov    QWORD PTR [rsp+0x30],rcx
   14001377e:	mov    ecx,DWORD PTR [rsp+0x74]
   140013782:	mov    r9d,edi
   140013785:	mov    DWORD PTR [rsp+0x28],ecx
   140013789:	lea    rcx,[rbp-0x40]
   14001378d:	mov    r8,rsi
   140013790:	mov    rdx,rbx
   140013793:	mov    DWORD PTR [rsp+0x20],r13d
   140013798:	call   rax
   14001379a:	mov    edi,r14d
   14001379d:	and    edi,0x80
   1400137a3:	je     0x1400137c0
   1400137a5:	test   r13d,r13d
   1400137a8:	jne    0x1400137c0
   1400137aa:	mov    rcx,QWORD PTR [rip+0x32c57]        # 0x140046408
   1400137b1:	call   QWORD PTR [rip+0x21a71]        # 0x140035228
   1400137b7:	lea    rdx,[rbp-0x70]
   1400137bb:	mov    rcx,rbx
   1400137be:	call   rax
   1400137c0:	mov    ecx,0x67
   1400137c5:	cmp    r15w,cx
   1400137c9:	jne    0x1400137e5
   1400137cb:	test   edi,edi
   1400137cd:	jne    0x1400137e5
   1400137cf:	mov    rcx,QWORD PTR [rip+0x32c2a]        # 0x140046400
   1400137d6:	call   QWORD PTR [rip+0x21a4c]        # 0x140035228
   1400137dc:	lea    rdx,[rbp-0x70]
   1400137e0:	mov    rcx,rbx
   1400137e3:	call   rax
   1400137e5:	mov    edi,0x2d
   1400137ea:	cmp    BYTE PTR [rbx],dil
   1400137ed:	jne    0x1400137f7
   1400137ef:	bts    r14d,0x8
   1400137f4:	inc    rbx
   1400137f7:	mov    rcx,rbx
   1400137fa:	call   0x14001ca40
   1400137ff:	xor    r10d,r10d
   140013802:	mov    r13d,eax
   140013805:	jmp    0x140013309
   14001380a:	test   r14b,0x1
   14001380e:	je     0x14001381f
   140013810:	mov    eax,0x2b
   140013815:	mov    WORD PTR [rsp+0x60],ax
   14001381a:	jmp    0x14001332e
   14001381f:	test   r14b,0x2
   140013823:	je     0x140013838
   140013825:	mov    eax,0x20
   14001382a:	mov    WORD PTR [rsp+0x60],ax
   14001382f:	lea    edi,[rax-0x1f]
   140013832:	mov    DWORD PTR [rsp+0x48],edi
   140013836:	jmp    0x140013841
   140013838:	mov    edi,DWORD PTR [rsp+0x48]
   14001383c:	mov    eax,0x20
   140013841:	mov    r15d,DWORD PTR [rsp+0x5c]
   140013846:	mov    rsi,QWORD PTR [rbp-0x80]
   14001384a:	sub    r15d,r13d
   14001384d:	sub    r15d,edi
   140013850:	test   r14b,0xc
   140013854:	jne    0x140013868
   140013856:	lea    r9,[rsp+0x40]
   14001385b:	mov    ecx,eax
   14001385d:	mov    r8,rsi
   140013860:	mov    edx,r15d
   140013863:	call   0x140013c40
   140013868:	mov    rax,QWORD PTR [rbp-0x48]
   14001386c:	lea    r9,[rsp+0x40]
   140013871:	lea    rcx,[rsp+0x60]
   140013876:	mov    r8,rsi
   140013879:	mov    edx,edi
   14001387b:	mov    QWORD PTR [rsp+0x20],rax
   140013880:	call   0x140013c94
   140013885:	test   r14b,0x8
   140013889:	je     0x1400138a6
   14001388b:	test   r14b,0x4
   14001388f:	jne    0x1400138a6
   140013891:	lea    r9,[rsp+0x40]
   140013896:	mov    ecx,0x30
   14001389b:	mov    r8,rsi
   14001389e:	mov    edx,r15d
   1400138a1:	call   0x140013c40
   1400138a6:	xor    eax,eax
   1400138a8:	cmp    DWORD PTR [rsp+0x58],eax
   1400138ac:	jne    0x14001391b
   1400138ae:	test   r13d,r13d
   1400138b1:	jle    0x14001391b
   1400138b3:	mov    rdi,rbx
   1400138b6:	mov    esi,r13d
   1400138b9:	mov    rax,QWORD PTR [rbp-0x70]
   1400138bd:	lea    r9,[rbp-0x70]
   1400138c1:	lea    rcx,[rsp+0x64]
   1400138c6:	movsxd r8,DWORD PTR [rax+0xd4]
   1400138cd:	mov    rdx,rdi
   1400138d0:	dec    esi
   1400138d2:	call   0x1400235dc
   1400138d7:	xor    r10d,r10d
   1400138da:	movsxd r12,eax
   1400138dd:	test   eax,eax
   1400138df:	jle    0x140013909
   1400138e1:	mov    rdx,QWORD PTR [rbp-0x80]
   1400138e5:	movzx  ecx,WORD PTR [rsp+0x64]
   1400138ea:	lea    r8,[rsp+0x40]
   1400138ef:	call   0x140013c08
   1400138f4:	add    rdi,r12
   1400138f7:	xor    r10d,r10d
   1400138fa:	test   esi,esi
   1400138fc:	jg     0x1400138b9
   1400138fe:	mov    r12,QWORD PTR [rsp+0x50]
   140013903:	mov    rsi,QWORD PTR [rbp-0x80]
   140013907:	jmp    0x14001393a
   140013909:	mov    r12,QWORD PTR [rsp+0x50]
   14001390e:	mov    rsi,QWORD PTR [rbp-0x80]
   140013912:	or     edx,0xffffffff
   140013915:	mov    DWORD PTR [rsp+0x40],edx
   140013919:	jmp    0x14001393e
   14001391b:	mov    rax,QWORD PTR [rbp-0x48]
   14001391f:	lea    r9,[rsp+0x40]
   140013924:	mov    r8,rsi
   140013927:	mov    edx,r13d
   14001392a:	mov    rcx,rbx
   14001392d:	mov    QWORD PTR [rsp+0x20],rax
   140013932:	call   0x140013c94
   140013937:	xor    r10d,r10d
   14001393a:	mov    edx,DWORD PTR [rsp+0x40]
   14001393e:	test   edx,edx
   140013940:	js     0x140013964
   140013942:	test   r14b,0x4
   140013946:	je     0x140013964
   140013948:	lea    r9,[rsp+0x40]
   14001394d:	mov    ecx,0x20
   140013952:	mov    r8,rsi
   140013955:	mov    edx,r15d
   140013958:	call   0x140013c40
   14001395d:	xor    r10d,r10d
   140013960:	mov    edx,DWORD PTR [rsp+0x40]
   140013964:	mov    r11d,0x20
   14001396a:	mov    rax,QWORD PTR [rbp-0x50]
   14001396e:	test   rax,rax
   140013971:	je     0x14001398a
   140013973:	mov    rcx,rax
   140013976:	call   0x14000fb50
   14001397b:	mov    edx,DWORD PTR [rsp+0x40]
   14001397f:	xor    r10d,r10d
   140013982:	lea    r11d,[r10+0x20]
   140013986:	mov    QWORD PTR [rbp-0x50],r10
   14001398a:	mov    edi,DWORD PTR [rsp+0x44]
   14001398e:	or     esi,0xffffffff
   140013991:	mov    r8,QWORD PTR [rbp-0x78]
   140013995:	mov    r9d,DWORD PTR [rsp+0x6c]
   14001399a:	movzx  r15d,WORD PTR [r8]
   14001399e:	test   r15w,r15w
   1400139a2:	jne    0x1400131fa
   1400139a8:	test   r9d,r9d
   1400139ab:	je     0x1400139b7
   1400139ad:	cmp    r9d,0x7
   1400139b1:	jne    0x140013bdc
   1400139b7:	cmp    BYTE PTR [rbp-0x58],r10b
   1400139bb:	je     0x1400139c8
   1400139bd:	mov    rcx,QWORD PTR [rbp-0x60]
   1400139c1:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400139c8:	mov    eax,edx
   1400139ca:	mov    rcx,QWORD PTR [rbp+0x3d0]
   1400139d1:	xor    rcx,rsp
   1400139d4:	call   0x1400097d0
   1400139d9:	mov    rbx,QWORD PTR [rsp+0x530]
   1400139e1:	add    rsp,0x4e0
   1400139e8:	pop    r15
   1400139ea:	pop    r14
   1400139ec:	pop    r13
   1400139ee:	pop    r12
   1400139f0:	pop    rdi
   1400139f1:	pop    rsi
   1400139f2:	pop    rbp
   1400139f3:	ret    
   1400139f4:	movzx  eax,r15w
   1400139f8:	cmp    eax,0x49
   1400139fb:	je     0x140013a3c
   1400139fd:	cmp    eax,0x68
   140013a00:	je     0x140013a34
   140013a02:	mov    ecx,0x6c
   140013a07:	cmp    eax,ecx
   140013a09:	je     0x140013a17
   140013a0b:	cmp    eax,0x77
   140013a0e:	jne    0x14001399a
   140013a10:	bts    r14d,0xb
   140013a15:	jmp    0x14001399a
   140013a17:	cmp    WORD PTR [r8],cx
   140013a1b:	jne    0x140013a2b
   140013a1d:	add    r8,0x2
   140013a21:	bts    r14d,0xc
   140013a26:	jmp    0x14001399a
   140013a2b:	or     r14d,0x10
   140013a2f:	jmp    0x14001399a
   140013a34:	or     r14d,r11d
   140013a37:	jmp    0x14001399a
   140013a3c:	movzx  eax,WORD PTR [r8]
   140013a40:	bts    r14d,0xf
   140013a45:	cmp    ax,0x36
   140013a49:	jne    0x140013a61
   140013a4b:	cmp    WORD PTR [r8+0x2],0x34
   140013a51:	jne    0x140013a61
   140013a53:	add    r8,0x4
   140013a57:	bts    r14d,0xf
   140013a5c:	jmp    0x14001399a
   140013a61:	cmp    ax,0x33
   140013a65:	jne    0x140013a7d
   140013a67:	cmp    WORD PTR [r8+0x2],0x32
   140013a6d:	jne    0x140013a7d
   140013a6f:	add    r8,0x4
   140013a73:	btr    r14d,0xf
   140013a78:	jmp    0x14001399a
   140013a7d:	sub    ax,0x58
   140013a81:	cmp    ax,r11w
   140013a85:	ja     0x140013a9b
   140013a87:	movabs rcx,0x120821001
   140013a91:	bt     rcx,rax
   140013a95:	jb     0x14001399a
   140013a9b:	mov    DWORD PTR [rsp+0x6c],r10d
   140013aa0:	mov    rdx,QWORD PTR [rbp-0x80]
   140013aa4:	lea    r8,[rsp+0x40]
   140013aa9:	movzx  ecx,r15w
   140013aad:	mov    DWORD PTR [rsp+0x58],0x1
   140013ab5:	call   0x140013c08
   140013aba:	mov    edx,DWORD PTR [rsp+0x40]
   140013abe:	xor    r10d,r10d
   140013ac1:	lea    r11d,[r10+0x20]
   140013ac5:	jmp    0x140013991
   140013aca:	cmp    r15w,0x2a
   140013acf:	jne    0x140013af5
   140013ad1:	mov    edi,DWORD PTR [r12]
   140013ad5:	add    r12,0x8
   140013ad9:	mov    QWORD PTR [rsp+0x50],r12
   140013ade:	mov    DWORD PTR [rsp+0x44],edi
   140013ae2:	test   edi,edi
   140013ae4:	jns    0x14001399a
   140013aea:	mov    edi,esi
   140013aec:	mov    DWORD PTR [rsp+0x44],esi
   140013af0:	jmp    0x14001399a
   140013af5:	lea    edi,[rdi+rdi*4]
   140013af8:	movzx  eax,r15w
   140013afc:	lea    edi,[rdi-0x18]
   140013aff:	lea    edi,[rax+rdi*2]
   140013b02:	mov    DWORD PTR [rsp+0x44],edi
   140013b06:	jmp    0x14001399a
   140013b0b:	mov    edi,r10d
   140013b0e:	mov    DWORD PTR [rsp+0x44],r10d
   140013b13:	jmp    0x14001399a
   140013b18:	cmp    r15w,0x2a
   140013b1d:	jne    0x140013b40
   140013b1f:	mov    eax,DWORD PTR [r12]
   140013b23:	add    r12,0x8
   140013b27:	mov    QWORD PTR [rsp+0x50],r12
   140013b2c:	mov    DWORD PTR [rsp+0x5c],eax
   140013b30:	test   eax,eax
   140013b32:	jns    0x14001399a
   140013b38:	or     r14d,0x4
   140013b3c:	neg    eax
   140013b3e:	jmp    0x140013b51
   140013b40:	mov    eax,DWORD PTR [rsp+0x5c]
   140013b44:	lea    ecx,[rax+rax*4]
   140013b47:	movzx  eax,r15w
   140013b4b:	lea    eax,[rax+rcx*2]
   140013b4e:	add    eax,0xffffffd0
   140013b51:	mov    DWORD PTR [rsp+0x5c],eax
   140013b55:	jmp    0x14001399a
   140013b5a:	movzx  eax,r15w
   140013b5e:	cmp    eax,r11d
   140013b61:	je     0x140013bac
   140013b63:	cmp    eax,0x23
   140013b66:	je     0x140013ba2
   140013b68:	mov    ecx,0x2b
   140013b6d:	cmp    eax,ecx
   140013b6f:	je     0x140013b99
   140013b71:	mov    ecx,0x2d
   140013b76:	cmp    eax,ecx
   140013b78:	je     0x140013b90
   140013b7a:	mov    ecx,0x30
   140013b7f:	cmp    eax,ecx
   140013b81:	jne    0x14001399a
   140013b87:	or     r14d,0x8
   140013b8b:	jmp    0x14001399a
   140013b90:	or     r14d,0x4
   140013b94:	jmp    0x14001399a
   140013b99:	or     r14d,0x1
   140013b9d:	jmp    0x14001399a
   140013ba2:	bts    r14d,0x7
   140013ba7:	jmp    0x14001399a
   140013bac:	or     r14d,0x2
   140013bb0:	jmp    0x14001399a
   140013bb5:	mov    DWORD PTR [rsp+0x74],r10d
   140013bba:	mov    DWORD PTR [rsp+0x70],r10d
   140013bbf:	mov    DWORD PTR [rsp+0x5c],r10d
   140013bc4:	mov    DWORD PTR [rsp+0x48],r10d
   140013bc9:	mov    r14d,r10d
   140013bcc:	mov    edi,esi
   140013bce:	mov    DWORD PTR [rsp+0x44],esi
   140013bd2:	mov    DWORD PTR [rsp+0x58],r10d
   140013bd7:	jmp    0x14001399a
   140013bdc:	call   0x14000b9f0
   140013be1:	mov    DWORD PTR [rax],0x16
   140013be7:	call   0x14000b8b8
   140013bec:	xor    ecx,ecx
   140013bee:	cmp    BYTE PTR [rbp-0x58],cl
   140013bf1:	je     0x140013bfe
   140013bf3:	mov    rax,QWORD PTR [rbp-0x60]
   140013bf7:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140013bfe:	mov    eax,esi
   140013c00:	jmp    0x1400139ca
   140013c05:	int3   
   140013c06:	int3   
   140013c07:	int3   
   140013c08:	rex push rbx
   140013c0a:	sub    rsp,0x20
   140013c0e:	test   BYTE PTR [rdx+0x18],0x40
   140013c12:	mov    rbx,r8
   140013c15:	je     0x140013c23
   140013c17:	cmp    QWORD PTR [rdx+0x10],0x0
   140013c1c:	jne    0x140013c23
   140013c1e:	inc    DWORD PTR [r8]
   140013c21:	jmp    0x140013c39
   140013c23:	call   0x140023378
   140013c28:	mov    ecx,0xffff
   140013c2d:	cmp    ax,cx
   140013c30:	jne    0x140013c37
   140013c32:	or     DWORD PTR [rbx],0xffffffff
   140013c35:	jmp    0x140013c39
   140013c37:	inc    DWORD PTR [rbx]
   140013c39:	add    rsp,0x20
   140013c3d:	pop    rbx
   140013c3e:	ret    
   140013c3f:	int3   
   140013c40:	test   edx,edx
   140013c42:	jle    0x140013c90
   140013c44:	mov    QWORD PTR [rsp+0x8],rbx
   140013c49:	mov    QWORD PTR [rsp+0x10],rbp
   140013c4e:	mov    QWORD PTR [rsp+0x18],rsi
   140013c53:	push   rdi
   140013c54:	sub    rsp,0x20
   140013c58:	mov    rdi,r9
   140013c5b:	mov    rsi,r8
   140013c5e:	mov    ebx,edx
   140013c60:	movzx  ebp,cx
   140013c63:	mov    r8,rdi
   140013c66:	mov    rdx,rsi
   140013c69:	movzx  ecx,bp
   140013c6c:	dec    ebx
   140013c6e:	call   0x140013c08
   140013c73:	cmp    DWORD PTR [rdi],0xffffffff
   140013c76:	je     0x140013c7c
   140013c78:	test   ebx,ebx
   140013c7a:	jg     0x140013c63
   140013c7c:	mov    rbx,QWORD PTR [rsp+0x30]
   140013c81:	mov    rbp,QWORD PTR [rsp+0x38]
   140013c86:	mov    rsi,QWORD PTR [rsp+0x40]
   140013c8b:	add    rsp,0x20
   140013c8f:	pop    rdi
   140013c90:	ret    
   140013c91:	int3   
   140013c92:	int3   
   140013c93:	int3   
   140013c94:	mov    QWORD PTR [rsp+0x8],rbx
   140013c99:	mov    QWORD PTR [rsp+0x10],rbp
   140013c9e:	mov    QWORD PTR [rsp+0x18],rsi
   140013ca3:	push   rdi
   140013ca4:	push   r14
   140013ca6:	push   r15
   140013ca8:	sub    rsp,0x20
   140013cac:	test   BYTE PTR [r8+0x18],0x40
   140013cb1:	mov    rbx,QWORD PTR [rsp+0x60]
   140013cb6:	mov    rdi,r9
   140013cb9:	mov    r15d,DWORD PTR [rbx]
   140013cbc:	mov    rbp,r8
   140013cbf:	mov    esi,edx
   140013cc1:	mov    r14,rcx
   140013cc4:	je     0x140013cd2
   140013cc6:	cmp    QWORD PTR [r8+0x10],0x0
   140013ccb:	jne    0x140013cd2
   140013ccd:	add    DWORD PTR [r9],edx
   140013cd0:	jmp    0x140013d14
   140013cd2:	and    DWORD PTR [rbx],0x0
   140013cd5:	test   edx,edx
   140013cd7:	jle    0x140013d11
   140013cd9:	movzx  ecx,WORD PTR [r14]
   140013cdd:	mov    r8,rdi
   140013ce0:	mov    rdx,rbp
   140013ce3:	dec    esi
   140013ce5:	call   0x140013c08
   140013cea:	cmp    DWORD PTR [rdi],0xffffffff
   140013ced:	lea    r14,[r14+0x2]
   140013cf1:	jne    0x140013d08
   140013cf3:	cmp    DWORD PTR [rbx],0x2a
   140013cf6:	jne    0x140013d0c
   140013cf8:	mov    ecx,0x3f
   140013cfd:	mov    r8,rdi
   140013d00:	mov    rdx,rbp
   140013d03:	call   0x140013c08
   140013d08:	test   esi,esi
   140013d0a:	jg     0x140013cd9
   140013d0c:	cmp    DWORD PTR [rbx],0x0
   140013d0f:	jne    0x140013d14
   140013d11:	mov    DWORD PTR [rbx],r15d
   140013d14:	mov    rbx,QWORD PTR [rsp+0x40]
   140013d19:	mov    rbp,QWORD PTR [rsp+0x48]
   140013d1e:	mov    rsi,QWORD PTR [rsp+0x50]
   140013d23:	add    rsp,0x20
   140013d27:	pop    r15
   140013d29:	pop    r14
   140013d2b:	pop    rdi
   140013d2c:	ret    
   140013d2d:	int3   
   140013d2e:	int3   
   140013d2f:	int3   
   140013d30:	mov    QWORD PTR [rsp+0x8],rbx
   140013d35:	mov    QWORD PTR [rsp+0x10],rbp
   140013d3a:	mov    QWORD PTR [rsp+0x18],rdi
   140013d3f:	movzx  r10d,WORD PTR [rcx+0x10]
   140013d44:	mov    ebx,edx
   140013d46:	mov    r11,rcx
   140013d49:	cmp    r10w,0x70
   140013d4e:	je     0x140013e45
   140013d54:	cmp    r8w,0x70
   140013d59:	je     0x140013e45
   140013d5f:	lea    eax,[r10-0x53]
   140013d63:	mov    edi,0xffdf
   140013d68:	mov    ecx,0x0
   140013d6d:	test   di,ax
   140013d70:	lea    eax,[r8-0x53]
   140013d74:	mov    edx,ecx
   140013d76:	sete   dl
   140013d79:	test   di,ax
   140013d7c:	mov    eax,ecx
   140013d7e:	sete   al
   140013d81:	test   edx,edx
   140013d83:	jne    0x140013e1f
   140013d89:	test   eax,eax
   140013d8b:	jne    0x140013e3f
   140013d91:	lea    eax,[r10-0x58]
   140013d95:	mov    di,0x20
   140013d99:	movabs rbp,0x120821001
   140013da3:	cmp    ax,di
   140013da6:	ja     0x140013db1
   140013da8:	movzx  eax,ax
   140013dab:	bt     rbp,rax
   140013daf:	jb     0x140013dc3
   140013db1:	lea    eax,[r8-0x58]
   140013db5:	cmp    ax,di
   140013db8:	ja     0x140013e1a
   140013dba:	movzx  eax,ax
   140013dbd:	bt     rbp,rax
   140013dc1:	jae    0x140013e1a
   140013dc3:	sub    r10w,0x58
   140013dc8:	mov    edx,0x1
   140013dcd:	cmp    r10w,di
   140013dd1:	ja     0x140013de0
   140013dd3:	movzx  eax,r10w
   140013dd7:	mov    r10d,edx
   140013dda:	bt     rbp,rax
   140013dde:	jb     0x140013de3
   140013de0:	mov    r10d,ecx
   140013de3:	sub    r8w,0x58
   140013de8:	cmp    r8w,di
   140013dec:	ja     0x140013df8
   140013dee:	movzx  eax,r8w
   140013df2:	bt     rbp,rax
   140013df6:	jb     0x140013dfa
   140013df8:	mov    edx,ecx
   140013dfa:	cmp    r10d,edx
   140013dfd:	je     0x140013e03
   140013dff:	xor    eax,eax
   140013e01:	jmp    0x140013e50
   140013e03:	mov    edx,DWORD PTR [r11+0x14]
   140013e07:	mov    eax,edx
   140013e09:	xor    eax,r9d
   140013e0c:	bt     eax,0x10
   140013e10:	jb     0x140013dff
   140013e12:	xor    edx,r9d
   140013e15:	test   dil,dl
   140013e18:	jne    0x140013dff
   140013e1a:	cmp    DWORD PTR [r11],ebx
   140013e1d:	jmp    0x140013e4b
   140013e1f:	cmp    edx,eax
   140013e21:	jne    0x140013e3f
   140013e23:	mov    eax,DWORD PTR [r11+0x14]
   140013e27:	shr    r9d,0x5
   140013e2b:	mov    edx,0x1
   140013e30:	shr    eax,0x5
   140013e33:	not    r9d
   140013e36:	not    eax
   140013e38:	xor    eax,r9d
   140013e3b:	test   dl,al
   140013e3d:	je     0x140013e41
   140013e3f:	mov    edx,ecx
   140013e41:	mov    eax,edx
   140013e43:	jmp    0x140013e50
   140013e45:	xor    ecx,ecx
   140013e47:	cmp    r10w,r8w
   140013e4b:	sete   cl
   140013e4e:	mov    eax,ecx
   140013e50:	mov    rbx,QWORD PTR [rsp+0x8]
   140013e55:	mov    rbp,QWORD PTR [rsp+0x10]
   140013e5a:	mov    rdi,QWORD PTR [rsp+0x18]
   140013e5f:	ret    
   140013e60:	mov    QWORD PTR [rsp+0x18],rbx
   140013e65:	push   rbp
   140013e66:	push   rsi
   140013e67:	push   rdi
   140013e68:	push   r12
   140013e6a:	push   r13
   140013e6c:	push   r14
   140013e6e:	push   r15
   140013e70:	lea    rbp,[rsp-0xd70]
   140013e78:	sub    rsp,0xe70
   140013e7f:	mov    rax,QWORD PTR [rip+0x313ea]        # 0x140045270
   140013e86:	xor    rax,rsp
   140013e89:	mov    QWORD PTR [rbp+0xd60],rax
   140013e90:	xor    r13d,r13d
   140013e93:	mov    rdi,rcx
   140013e96:	mov    QWORD PTR [rbp-0x30],rcx
   140013e9a:	mov    r14,rdx
   140013e9d:	mov    QWORD PTR [rbp-0x8],rdx
   140013ea1:	lea    rcx,[rsp+0x68]
   140013ea6:	mov    rdx,r8
   140013ea9:	mov    QWORD PTR [rsp+0x48],r9
   140013eae:	mov    DWORD PTR [rbp-0x38],r13d
   140013eb2:	mov    r12d,r13d
   140013eb5:	mov    DWORD PTR [rsp+0x64],r13d
   140013eba:	mov    DWORD PTR [rbp-0x3c],r13d
   140013ebe:	mov    DWORD PTR [rsp+0x44],r13d
   140013ec3:	mov    ebx,r13d
   140013ec6:	mov    DWORD PTR [rbp-0x6c],r13d
   140013eca:	call   0x140007ff0
   140013ecf:	or     r15d,0xffffffff
   140013ed3:	mov    QWORD PTR [rbp-0x48],r13
   140013ed7:	mov    esi,r15d
   140013eda:	call   0x14000b9f0
   140013edf:	mov    QWORD PTR [rbp-0x10],rax
   140013ee3:	test   rdi,rdi
   140013ee6:	jne    0x140013f12
   140013ee8:	call   0x14000b9f0
   140013eed:	mov    DWORD PTR [rax],0x16
   140013ef3:	call   0x14000b8b8
   140013ef8:	cmp    BYTE PTR [rbp-0x80],r13b
   140013efc:	je     0x140013f0a
   140013efe:	mov    rcx,QWORD PTR [rsp+0x78]
   140013f03:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140013f0a:	mov    eax,r15d
   140013f0d:	jmp    0x140015008
   140013f12:	test   r14,r14
   140013f15:	jne    0x140013f3b
   140013f17:	call   0x14000b9f0
   140013f1c:	mov    DWORD PTR [rax],0x16
   140013f22:	call   0x14000b8b8
   140013f27:	cmp    BYTE PTR [rbp-0x80],r13b
   140013f2b:	je     0x140013f0a
   140013f2d:	mov    rax,QWORD PTR [rsp+0x78]
   140013f32:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140013f39:	jmp    0x140013f0a
   140013f3b:	mov    r15,QWORD PTR [rsp+0x48]
   140013f40:	mov    eax,r13d
   140013f43:	mov    r11d,r13d
   140013f46:	mov    DWORD PTR [rsp+0x60],eax
   140013f4a:	mov    DWORD PTR [rbp-0x50],r13d
   140013f4e:	cmp    r11d,0x1
   140013f52:	jne    0x140013f5c
   140013f54:	test   esi,esi
   140013f56:	je     0x140014ff6
   140013f5c:	or     ecx,0xffffffff
   140013f5f:	mov    r9,r14
   140013f62:	movzx  r14d,WORD PTR [r14]
   140013f66:	mov    DWORD PTR [rsp+0x58],r13d
   140013f6b:	mov    r10d,r13d
   140013f6e:	mov    QWORD PTR [rbp-0x20],r13
   140013f72:	mov    DWORD PTR [rbp-0x74],r13d
   140013f76:	mov    edi,r13d
   140013f79:	mov    DWORD PTR [rsp+0x50],r13d
   140013f7e:	mov    r8d,ecx
   140013f81:	mov    DWORD PTR [rsp+0x40],ecx
   140013f85:	mov    r13d,ecx
   140013f88:	mov    DWORD PTR [rbp-0x28],ecx
   140013f8b:	mov    esi,ecx
   140013f8d:	mov    DWORD PTR [rbp-0x78],ecx
   140013f90:	test   r14w,r14w
   140013f94:	je     0x140014fa7
   140013f9a:	movsxd rdx,r11d
   140013f9d:	mov    QWORD PTR [rbp-0x60],rdx
   140013fa1:	add    r9,0x2
   140013fa5:	mov    QWORD PTR [rbp-0x68],r9
   140013fa9:	test   eax,eax
   140013fab:	js     0x140014f1f
   140013fb1:	lea    eax,[r14-0x20]
   140013fb5:	mov    ecx,0x58
   140013fba:	cmp    ax,cx
   140013fbd:	ja     0x140013fd7
   140013fbf:	lea    rcx,[rip+0x2487a]        # 0x140038840
   140013fc6:	movzx  eax,r14w
   140013fca:	movzx  ecx,BYTE PTR [rax+rcx*1-0x20]
   140013fcf:	and    ecx,0xf
   140013fd2:	xor    r8d,r8d
   140013fd5:	jmp    0x140013fdd
   140013fd7:	xor    r8d,r8d
   140013fda:	mov    ecx,r8d
   140013fdd:	movsxd rax,ecx
   140013fe0:	mov    r11d,0x1
   140013fe6:	lea    rcx,[rax+rax*8]
   140013fea:	movsxd rax,r10d
   140013fed:	add    rcx,rax
   140013ff0:	lea    rax,[rip+0x24849]        # 0x140038840
   140013ff7:	movzx  eax,BYTE PTR [rcx+rax*1]
   140013ffb:	shr    eax,0x4
   140013ffe:	mov    DWORD PTR [rbp-0x40],eax
   140014001:	cmp    eax,r11d
   140014004:	jne    0x1400140ec
   14001400a:	cmp    WORD PTR [r9],0x25
   14001400f:	je     0x1400140f5
   140014015:	cmp    esi,0xffffffff
   140014018:	jne    0x140014079
   14001401a:	lea    r8d,[r11+0x9]
   14001401e:	lea    rdx,[rbp-0x48]
   140014022:	mov    rcx,r9
   140014025:	call   0x140023934
   14001402a:	xor    r8d,r8d
   14001402d:	test   eax,eax
   14001402f:	jle    0x14001405f
   140014031:	mov    rax,QWORD PTR [rbp-0x48]
   140014035:	cmp    WORD PTR [rax],0x24
   140014039:	jne    0x14001405f
   14001403b:	cmp    QWORD PTR [rbp-0x60],r8
   14001403f:	jne    0x140014055
   140014041:	lea    rcx,[rbp+0x400]
   140014048:	xor    edx,edx
   14001404a:	mov    r8d,0x960
   140014050:	call   0x140009800
   140014055:	mov    esi,0x1
   14001405a:	mov    DWORD PTR [rbp-0x78],esi
   14001405d:	jmp    0x14001407e
   14001405f:	mov    r15,QWORD PTR [rsp+0x48]
   140014064:	mov    rdx,QWORD PTR [rbp-0x60]
   140014068:	mov    r9,QWORD PTR [rbp-0x68]
   14001406c:	mov    esi,r8d
   14001406f:	mov    DWORD PTR [rbp-0x78],r8d
   140014073:	mov    r11d,0x1
   140014079:	cmp    esi,r11d
   14001407c:	jne    0x1400140f5
   14001407e:	mov    rcx,QWORD PTR [rbp-0x68]
   140014082:	lea    rdx,[rbp-0x48]
   140014086:	mov    r8d,0xa
   14001408c:	call   0x140023934
   140014091:	mov    rcx,QWORD PTR [rbp-0x48]
   140014095:	mov    rdx,QWORD PTR [rbp-0x60]
   140014099:	mov    r13d,eax
   14001409c:	mov    r11d,0x1
   1400140a2:	lea    r9,[rcx+0x2]
   1400140a6:	sub    r13d,r11d
   1400140a9:	xor    r8d,r8d
   1400140ac:	mov    QWORD PTR [rbp-0x68],r9
   1400140b0:	mov    DWORD PTR [rbp-0x28],r13d
   1400140b4:	test   rdx,rdx
   1400140b7:	jne    0x1400140e5
   1400140b9:	test   r13d,r13d
   1400140bc:	js     0x140014254
   1400140c2:	cmp    WORD PTR [rcx],0x24
   1400140c6:	jne    0x140014254
   1400140cc:	cmp    r13d,0x64
   1400140d0:	jge    0x140014254
   1400140d6:	mov    eax,DWORD PTR [rsp+0x40]
   1400140da:	cmp    r13d,eax
   1400140dd:	cmovg  eax,r13d
   1400140e1:	mov    DWORD PTR [rsp+0x40],eax
   1400140e5:	mov    r15,QWORD PTR [rsp+0x48]
   1400140ea:	jmp    0x1400140f5
   1400140ec:	cmp    eax,0x8
   1400140ef:	je     0x140014254
   1400140f5:	mov    ecx,DWORD PTR [rbp-0x40]
   1400140f8:	test   ecx,ecx
   1400140fa:	je     0x140014eca
   140014100:	dec    ecx
   140014102:	je     0x140014ea8
   140014108:	dec    ecx
   14001410a:	je     0x140014e58
   140014110:	dec    ecx
   140014112:	je     0x140014d69
   140014118:	dec    ecx
   14001411a:	je     0x140014d5c
   140014120:	dec    ecx
   140014122:	je     0x140014c76
   140014128:	dec    ecx
   14001412a:	je     0x140014bae
   140014130:	dec    ecx
   140014132:	jne    0x140014f01
   140014138:	movzx  ecx,r14w
   14001413c:	cmp    ecx,0x64
   14001413f:	jg     0x14001445b
   140014145:	je     0x14001463c
   14001414b:	cmp    ecx,0x41
   14001414e:	je     0x1400143f5
   140014154:	cmp    ecx,0x43
   140014157:	je     0x140014329
   14001415d:	lea    eax,[rcx-0x45]
   140014160:	test   eax,0xfffffffd
   140014165:	je     0x1400143f5
   14001416b:	cmp    ecx,0x53
   14001416e:	je     0x1400142f3
   140014174:	mov    eax,0x58
   140014179:	cmp    ecx,eax
   14001417b:	je     0x140014579
   140014181:	cmp    ecx,0x5a
   140014184:	je     0x1400141e4
   140014186:	cmp    ecx,0x61
   140014189:	je     0x1400143fe
   14001418f:	cmp    ecx,0x63
   140014192:	je     0x14001433d
   140014198:	mov    r14,QWORD PTR [rsp+0x58]
   14001419d:	mov    ecx,0x20
   1400141a2:	mov    edi,0x2d
   1400141a7:	mov    eax,DWORD PTR [rsp+0x44]
   1400141ab:	cmp    DWORD PTR [rbp-0x78],0x1
   1400141af:	jne    0x1400141be
   1400141b1:	mov    rdx,QWORD PTR [rbp-0x60]
   1400141b5:	test   rdx,rdx
   1400141b8:	je     0x140014ef9
   1400141be:	test   eax,eax
   1400141c0:	jne    0x140014b8c
   1400141c6:	test   r12b,0x40
   1400141ca:	je     0x140014a7f
   1400141d0:	bt     r12d,0x8
   1400141d5:	jae    0x140014a59
   1400141db:	mov    WORD PTR [rbp-0x54],di
   1400141df:	jmp    0x140014a68
   1400141e4:	test   esi,esi
   1400141e6:	jne    0x1400141fa
   1400141e8:	add    r15,0x8
   1400141ec:	mov    QWORD PTR [rsp+0x48],r15
   1400141f1:	mov    rax,QWORD PTR [r15-0x8]
   1400141f5:	jmp    0x14001428a
   1400141fa:	cmp    r13d,0x63
   1400141fe:	ja     0x140014254
   140014200:	movsxd rax,r13d
   140014203:	lea    rcx,[rax+rax*2]
   140014207:	test   rdx,rdx
   14001420a:	jne    0x14001427f
   14001420c:	lea    rax,[rbp+0x400]
   140014213:	lea    rax,[rax+rcx*8]
   140014217:	cmp    DWORD PTR [rax],r8d
   14001421a:	jne    0x140014238
   14001421c:	mov    DWORD PTR [rax],0x2
   140014222:	mov    WORD PTR [rbp+rcx*8+0x410],r14w
   14001422b:	mov    DWORD PTR [rbp+rcx*8+0x414],r12d
   140014233:	jmp    0x140014198
   140014238:	mov    edx,0x2
   14001423d:	movzx  r8d,r14w
   140014241:	mov    r9d,r12d
   140014244:	mov    rcx,rax
   140014247:	call   0x140013d30
   14001424c:	test   eax,eax
   14001424e:	jne    0x140014198
   140014254:	call   0x14000b9f0
   140014259:	mov    DWORD PTR [rax],0x16
   14001425f:	call   0x14000b8b8
   140014264:	xor    ecx,ecx
   140014266:	cmp    BYTE PTR [rbp-0x80],cl
   140014269:	je     0x140014277
   14001426b:	mov    rax,QWORD PTR [rsp+0x78]
   140014270:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140014277:	or     eax,0xffffffff
   14001427a:	jmp    0x140015008
   14001427f:	mov    rax,QWORD PTR [rbp+rcx*8+0x408]
   140014287:	mov    rax,QWORD PTR [rax]
   14001428a:	test   rax,rax
   14001428d:	je     0x1400142d2
   14001428f:	mov    rbx,QWORD PTR [rax+0x8]
   140014293:	test   rbx,rbx
   140014296:	je     0x1400142d2
   140014298:	mov    ecx,0x20
   14001429d:	lea    edi,[rcx+0xd]
   1400142a0:	bt     r12d,0xb
   1400142a5:	jae    0x1400142c0
   1400142a7:	movsx  eax,WORD PTR [rax]
   1400142aa:	mov    DWORD PTR [rbp-0x6c],r11d
   1400142ae:	cdq    
   1400142af:	sub    eax,edx
   1400142b1:	sar    eax,1
   1400142b3:	mov    r14d,eax
   1400142b6:	mov    QWORD PTR [rsp+0x58],r14
   1400142bb:	jmp    0x1400141a7
   1400142c0:	movsx  r14d,WORD PTR [rax]
   1400142c4:	mov    DWORD PTR [rbp-0x6c],r8d
   1400142c8:	mov    QWORD PTR [rsp+0x58],r14
   1400142cd:	jmp    0x1400141a7
   1400142d2:	mov    rbx,QWORD PTR [rip+0x314d7]        # 0x1400457b0
   1400142d9:	mov    rcx,rbx
   1400142dc:	call   0x14001ca40
   1400142e1:	mov    r14,rax
   1400142e4:	mov    QWORD PTR [rsp+0x58],rax
   1400142e9:	mov    r15,QWORD PTR [rsp+0x48]
   1400142ee:	jmp    0x14001419d
   1400142f3:	test   r12d,0x830
   1400142fa:	jne    0x140014300
   1400142fc:	or     r12d,0x20
   140014300:	cmp    edi,0xffffffff
   140014303:	mov    esi,edi
   140014305:	mov    eax,0x7fffffff
   14001430a:	cmove  esi,eax
   14001430d:	cmp    DWORD PTR [rbp-0x78],r8d
   140014311:	jne    0x1400144ad
   140014317:	add    r15,0x8
   14001431b:	mov    QWORD PTR [rsp+0x48],r15
   140014320:	mov    rbx,QWORD PTR [r15-0x8]
   140014324:	jmp    0x1400144d2
   140014329:	mov    r9d,0x20
   14001432f:	test   r12d,0x830
   140014336:	jne    0x140014343
   140014338:	or     r12d,r9d
   14001433b:	jmp    0x140014343
   14001433d:	mov    r9d,0x20
   140014343:	mov    DWORD PTR [rbp-0x6c],r11d
   140014347:	test   esi,esi
   140014349:	jne    0x14001435b
   14001434b:	add    r15,0x8
   14001434f:	mov    QWORD PTR [rsp+0x48],r15
   140014354:	movzx  eax,WORD PTR [r15-0x8]
   140014359:	jmp    0x14001439c
   14001435b:	cmp    r13d,0x63
   14001435f:	ja     0x140014254
   140014365:	movsxd rax,r13d
   140014368:	lea    rcx,[rax+rax*2]
   14001436c:	test   rdx,rdx
   14001436f:	jne    0x140014391
   140014371:	lea    rax,[rbp+0x400]
   140014378:	lea    rax,[rax+rcx*8]
   14001437c:	cmp    DWORD PTR [rax],r8d
   14001437f:	jne    0x140014389
   140014381:	mov    DWORD PTR [rax],r11d
   140014384:	jmp    0x140014222
   140014389:	mov    edx,r11d
   14001438c:	jmp    0x14001423d
   140014391:	mov    rax,QWORD PTR [rbp+rcx*8+0x408]
   140014399:	movzx  eax,WORD PTR [rax]
   14001439c:	mov    WORD PTR [rbp-0x70],ax
   1400143a0:	test   r9b,r12b
   1400143a3:	je     0x1400143e0
   1400143a5:	mov    BYTE PTR [rbp-0x58],al
   1400143a8:	mov    rax,QWORD PTR [rsp+0x68]
   1400143ad:	mov    BYTE PTR [rbp-0x57],r8b
   1400143b1:	movsxd r8,DWORD PTR [rax+0xd4]
   1400143b8:	lea    r9,[rsp+0x68]
   1400143bd:	lea    rdx,[rbp-0x58]
   1400143c1:	lea    rcx,[rbp+0x0]
   1400143c5:	call   0x1400235dc
   1400143ca:	mov    r15,QWORD PTR [rsp+0x48]
   1400143cf:	mov    r11d,0x1
   1400143d5:	test   eax,eax
   1400143d7:	jns    0x1400143e4
   1400143d9:	mov    DWORD PTR [rsp+0x44],r11d
   1400143de:	jmp    0x1400143e4
   1400143e0:	mov    WORD PTR [rbp+0x0],ax
   1400143e4:	lea    rbx,[rbp+0x0]
   1400143e8:	mov    r14d,r11d
   1400143eb:	mov    QWORD PTR [rsp+0x58],r14
   1400143f0:	jmp    0x14001419d
   1400143f5:	mov    DWORD PTR [rbp-0x3c],r11d
   1400143f9:	add    r14w,0x20
   1400143fe:	mov    r10d,0x67
   140014404:	or     r12d,0x40
   140014408:	cmp    esi,r11d
   14001440b:	jne    0x1400148fd
   140014411:	test   rdx,rdx
   140014414:	jne    0x1400148fd
   14001441a:	cmp    r13d,0x63
   14001441e:	ja     0x140014254
   140014424:	movsxd rax,r13d
   140014427:	lea    rcx,[rax+rax*2]
   14001442b:	lea    rax,[rbp+0x400]
   140014432:	lea    rax,[rax+rcx*8]
   140014436:	cmp    DWORD PTR [rax],r8d
   140014439:	jne    0x1400148d5
   14001443f:	mov    DWORD PTR [rax],0x7
   140014445:	mov    WORD PTR [rbp+rcx*8+0x410],r14w
   14001444e:	mov    DWORD PTR [rbp+rcx*8+0x414],r12d
   140014456:	jmp    0x140014f01
   14001445b:	mov    r10d,0x67
   140014461:	cmp    ecx,r10d
   140014464:	jle    0x140014404
   140014466:	cmp    ecx,0x69
   140014469:	je     0x14001463c
   14001446f:	cmp    ecx,0x6e
   140014472:	je     0x1400145c7
   140014478:	cmp    ecx,0x6f
   14001447b:	je     0x1400145ae
   140014481:	cmp    ecx,0x70
   140014484:	je     0x14001456b
   14001448a:	cmp    ecx,0x73
   14001448d:	je     0x140014300
   140014493:	cmp    ecx,0x75
   140014496:	je     0x140014640
   14001449c:	cmp    ecx,0x78
   14001449f:	jne    0x140014198
   1400144a5:	lea    eax,[rcx-0x51]
   1400144a8:	jmp    0x14001457e
   1400144ad:	cmp    r13d,0x63
   1400144b1:	ja     0x140014254
   1400144b7:	movsxd rax,r13d
   1400144ba:	lea    rcx,[rax+rax*2]
   1400144be:	test   rdx,rdx
   1400144c1:	je     0x14001420c
   1400144c7:	mov    rbx,QWORD PTR [rbp+rcx*8+0x408]
   1400144cf:	mov    rbx,QWORD PTR [rbx]
   1400144d2:	mov    ecx,0x20
   1400144d7:	test   cl,r12b
   1400144da:	je     0x140014533
   1400144dc:	test   rbx,rbx
   1400144df:	mov    r14d,r8d
   1400144e2:	cmove  rbx,QWORD PTR [rip+0x312c6]        # 0x1400457b0
   1400144ea:	mov    QWORD PTR [rsp+0x58],r14
   1400144ef:	mov    rdi,rbx
   1400144f2:	test   esi,esi
   1400144f4:	jle    0x1400141a2
   1400144fa:	cmp    BYTE PTR [rdi],r8b
   1400144fd:	je     0x1400142e9
   140014503:	movzx  ecx,BYTE PTR [rdi]
   140014506:	lea    rdx,[rsp+0x68]
   14001450b:	call   0x14001d1f4
   140014510:	xor    r8d,r8d
   140014513:	lea    r11d,[r8+0x1]
   140014517:	test   eax,eax
   140014519:	je     0x14001451e
   14001451b:	add    rdi,r11
   14001451e:	add    r14d,r11d
   140014521:	add    rdi,r11
   140014524:	mov    QWORD PTR [rsp+0x58],r14
   140014529:	cmp    r14d,esi
   14001452c:	jl     0x1400144fa
   14001452e:	jmp    0x1400142e9
   140014533:	test   rbx,rbx
   140014536:	mov    DWORD PTR [rbp-0x6c],r11d
   14001453a:	cmove  rbx,QWORD PTR [rip+0x31276]        # 0x1400457b8
   140014542:	mov    rax,rbx
   140014545:	jmp    0x140014554
   140014547:	sub    esi,r11d
   14001454a:	cmp    WORD PTR [rax],r8w
   14001454e:	je     0x140014558
   140014550:	add    rax,0x2
   140014554:	test   esi,esi
   140014556:	jne    0x140014547
   140014558:	sub    rax,rbx
   14001455b:	sar    rax,1
   14001455e:	mov    r14d,eax
   140014561:	mov    QWORD PTR [rsp+0x58],r14
   140014566:	jmp    0x1400141a2
   14001456b:	mov    edi,0x10
   140014570:	bts    r12d,0xf
   140014575:	mov    DWORD PTR [rsp+0x50],edi
   140014579:	mov    eax,0x7
   14001457e:	mov    DWORD PTR [rbp-0x38],eax
   140014581:	mov    r9d,0x10
   140014587:	test   r12b,r12b
   14001458a:	jns    0x140014646
   140014590:	lea    ecx,[r9+0x20]
   140014594:	lea    r10d,[r9-0xe]
   140014598:	add    ax,0x51
   14001459c:	mov    WORD PTR [rbp-0x54],cx
   1400145a0:	mov    DWORD PTR [rsp+0x64],r10d
   1400145a5:	mov    WORD PTR [rbp-0x52],ax
   1400145a9:	jmp    0x14001464b
   1400145ae:	mov    r9d,0x8
   1400145b4:	test   r12b,r12b
   1400145b7:	jns    0x140014646
   1400145bd:	mov    eax,0x200
   1400145c2:	or     r12d,eax
   1400145c5:	jmp    0x140014646
   1400145c7:	test   esi,esi
   1400145c9:	jne    0x1400145da
   1400145cb:	add    r15,0x8
   1400145cf:	mov    QWORD PTR [rsp+0x48],r15
   1400145d4:	mov    rdi,QWORD PTR [r15-0x8]
   1400145d8:	jmp    0x1400145ff
   1400145da:	cmp    r13d,0x63
   1400145de:	ja     0x140014254
   1400145e4:	movsxd rax,r13d
   1400145e7:	lea    rcx,[rax+rax*2]
   1400145eb:	test   rdx,rdx
   1400145ee:	je     0x14001420c
   1400145f4:	mov    rax,QWORD PTR [rbp+rcx*8+0x408]
   1400145fc:	mov    rdi,QWORD PTR [rax]
   1400145ff:	call   0x140007888
   140014604:	test   eax,eax
   140014606:	je     0x140014254
   14001460c:	mov    eax,DWORD PTR [rsp+0x60]
   140014610:	mov    ecx,0x20
   140014615:	test   cl,r12b
   140014618:	je     0x14001461f
   14001461a:	mov    WORD PTR [rdi],ax
   14001461d:	jmp    0x140014621
   14001461f:	mov    DWORD PTR [rdi],eax
   140014621:	mov    r15,QWORD PTR [rsp+0x48]
   140014626:	mov    r14,QWORD PTR [rsp+0x58]
   14001462b:	mov    eax,0x1
   140014630:	lea    edi,[rax+0x2c]
   140014633:	mov    DWORD PTR [rsp+0x44],eax
   140014637:	jmp    0x1400141ab
   14001463c:	or     r12d,0x40
   140014640:	mov    r9d,0xa
   140014646:	mov    r10d,DWORD PTR [rsp+0x64]
   14001464b:	bt     r12d,0xf
   140014650:	jae    0x1400146a3
   140014652:	test   esi,esi
   140014654:	jne    0x140014668
   140014656:	add    r15,0x8
   14001465a:	mov    QWORD PTR [rsp+0x48],r15
   14001465f:	mov    r8,QWORD PTR [r15-0x8]
   140014663:	jmp    0x140014806
   140014668:	cmp    r13d,0x63
   14001466c:	ja     0x140014254
   140014672:	movsxd rax,r13d
   140014675:	lea    rcx,[rax+rax*2]
   140014679:	test   rdx,rdx
   14001467c:	jne    0x1400146e9
   14001467e:	lea    rax,[rbp+0x400]
   140014685:	lea    rax,[rax+rcx*8]
   140014689:	cmp    DWORD PTR [rax],r8d
   14001468c:	jne    0x140014699
   14001468e:	mov    DWORD PTR [rax],0x3
   140014694:	jmp    0x140014222
   140014699:	mov    edx,0x3
   14001469e:	jmp    0x14001423d
   1400146a3:	bt     r12d,0xc
   1400146a8:	jae    0x1400146f9
   1400146aa:	test   esi,esi
   1400146ac:	je     0x140014656
   1400146ae:	cmp    r13d,0x63
   1400146b2:	ja     0x140014254
   1400146b8:	movsxd rax,r13d
   1400146bb:	lea    rcx,[rax+rax*2]
   1400146bf:	test   rdx,rdx
   1400146c2:	jne    0x1400146e9
   1400146c4:	lea    rax,[rbp+0x400]
   1400146cb:	lea    rax,[rax+rcx*8]
   1400146cf:	cmp    DWORD PTR [rax],r8d
   1400146d2:	jne    0x1400146df
   1400146d4:	mov    DWORD PTR [rax],0x4
   1400146da:	jmp    0x140014222
   1400146df:	mov    edx,0x4
   1400146e4:	jmp    0x14001423d
   1400146e9:	mov    rax,QWORD PTR [rbp+rcx*8+0x408]
   1400146f1:	mov    r8,QWORD PTR [rax]
   1400146f4:	jmp    0x140014806
   1400146f9:	mov    eax,0x20
   1400146fe:	test   al,r12b
   140014701:	je     0x14001478e
   140014707:	test   r12b,0x40
   14001470b:	je     0x14001474f
   14001470d:	test   esi,esi
   14001470f:	jne    0x140014724
   140014711:	add    r15,0x8
   140014715:	mov    QWORD PTR [rsp+0x48],r15
   14001471a:	movsx  r8,WORD PTR [r15-0x8]
   14001471f:	jmp    0x140014806
   140014724:	cmp    r13d,0x63
   140014728:	ja     0x140014254
   14001472e:	movsxd rax,r13d
   140014731:	lea    rcx,[rax+rax*2]
   140014735:	test   rdx,rdx
   140014738:	je     0x140014371
   14001473e:	mov    rax,QWORD PTR [rbp+rcx*8+0x408]
   140014746:	movsx  r8,WORD PTR [rax]
   14001474a:	jmp    0x140014806
   14001474f:	test   esi,esi
   140014751:	jne    0x140014766
   140014753:	add    r15,0x8
   140014757:	mov    QWORD PTR [rsp+0x48],r15
   14001475c:	movzx  r8d,WORD PTR [r15-0x8]
   140014761:	jmp    0x140014806
   140014766:	cmp    r13d,0x63
   14001476a:	ja     0x140014254
   140014770:	movsxd rax,r13d
   140014773:	lea    rcx,[rax+rax*2]
   140014777:	test   rdx,rdx
   14001477a:	je     0x140014371
   140014780:	mov    rax,QWORD PTR [rbp+rcx*8+0x408]
   140014788:	movzx  r8d,WORD PTR [rax]
   14001478c:	jmp    0x140014806
   14001478e:	test   r12b,0x40
   140014792:	je     0x1400147ce
   140014794:	test   esi,esi
   140014796:	jne    0x1400147a7
   140014798:	add    r15,0x8
   14001479c:	mov    QWORD PTR [rsp+0x48],r15
   1400147a1:	movsxd r8,DWORD PTR [r15-0x8]
   1400147a5:	jmp    0x140014806
   1400147a7:	cmp    r13d,0x63
   1400147ab:	ja     0x140014254
   1400147b1:	movsxd rax,r13d
   1400147b4:	lea    rcx,[rax+rax*2]
   1400147b8:	test   rdx,rdx
   1400147bb:	je     0x140014371
   1400147c1:	mov    rax,QWORD PTR [rbp+rcx*8+0x408]
   1400147c9:	movsxd r8,DWORD PTR [rax]
   1400147cc:	jmp    0x140014806
   1400147ce:	test   esi,esi
   1400147d0:	jne    0x1400147e1
   1400147d2:	add    r15,0x8
   1400147d6:	mov    QWORD PTR [rsp+0x48],r15
   1400147db:	mov    r8d,DWORD PTR [r15-0x8]
   1400147df:	jmp    0x140014806
   1400147e1:	cmp    r13d,0x63
   1400147e5:	ja     0x140014254
   1400147eb:	movsxd rax,r13d
   1400147ee:	lea    rcx,[rax+rax*2]
   1400147f2:	test   rdx,rdx
   1400147f5:	je     0x140014371
   1400147fb:	mov    rax,QWORD PTR [rbp+rcx*8+0x408]
   140014803:	mov    r8d,DWORD PTR [rax]
   140014806:	test   r12b,0x40
   14001480a:	je     0x140014819
   14001480c:	test   r8,r8
   14001480f:	jns    0x140014819
   140014811:	neg    r8
   140014814:	bts    r12d,0x8
   140014819:	bt     r12d,0xf
   14001481e:	jb     0x14001482a
   140014820:	bt     r12d,0xc
   140014825:	jb     0x14001482a
   140014827:	mov    r8d,r8d
   14001482a:	test   edi,edi
   14001482c:	jns    0x140014833
   14001482e:	mov    edi,r11d
   140014831:	jmp    0x140014841
   140014833:	mov    edx,0x200
   140014838:	and    r12d,0xfffffff7
   14001483c:	cmp    edi,edx
   14001483e:	cmovg  edi,edx
   140014841:	mov    r13d,DWORD PTR [rbp-0x38]
   140014845:	mov    rax,r8
   140014848:	lea    rbx,[rbp+0x1ff]
   14001484f:	neg    rax
   140014852:	sbb    ecx,ecx
   140014854:	and    ecx,r10d
   140014857:	mov    DWORD PTR [rsp+0x64],ecx
   14001485b:	mov    ecx,edi
   14001485d:	sub    edi,r11d
   140014860:	test   ecx,ecx
   140014862:	jg     0x140014869
   140014864:	test   r8,r8
   140014867:	je     0x140014889
   140014869:	xor    edx,edx
   14001486b:	mov    rax,r8
   14001486e:	movsxd rcx,r9d
   140014871:	div    rcx
   140014874:	mov    r8,rax
   140014877:	lea    eax,[rdx+0x30]
   14001487a:	cmp    eax,0x39
   14001487d:	jle    0x140014882
   14001487f:	add    eax,r13d
   140014882:	mov    BYTE PTR [rbx],al
   140014884:	sub    rbx,r11
   140014887:	jmp    0x14001485b
   140014889:	mov    r15,QWORD PTR [rsp+0x48]
   14001488e:	mov    r13d,DWORD PTR [rbp-0x28]
   140014892:	lea    r14,[rbp+0x1ff]
   140014899:	sub    r14d,ebx
   14001489c:	mov    eax,0x200
   1400148a1:	add    rbx,r11
   1400148a4:	mov    QWORD PTR [rsp+0x58],r14
   1400148a9:	mov    DWORD PTR [rsp+0x50],edi
   1400148ad:	test   eax,r12d
   1400148b0:	je     0x14001419d
   1400148b6:	mov    eax,0x30
   1400148bb:	test   r14d,r14d
   1400148be:	je     0x1400148c8
   1400148c0:	cmp    BYTE PTR [rbx],al
   1400148c2:	je     0x14001419d
   1400148c8:	sub    rbx,r11
   1400148cb:	add    r14d,r11d
   1400148ce:	mov    BYTE PTR [rbx],al
   1400148d0:	jmp    0x1400143eb
   1400148d5:	mov    r9d,r12d
   1400148d8:	movzx  r8d,r14w
   1400148dc:	mov    edx,0x7
   1400148e1:	mov    rcx,rax
   1400148e4:	call   0x140013d30
   1400148e9:	xor    r14d,r14d
   1400148ec:	test   eax,eax
   1400148ee:	je     0x140014fc4
   1400148f4:	mov    rdx,QWORD PTR [rbp-0x60]
   1400148f8:	jmp    0x140014efd
   1400148fd:	mov    eax,0x200
   140014902:	lea    rbx,[rbp+0x0]
   140014906:	mov    esi,eax
   140014908:	test   edi,edi
   14001490a:	jns    0x140014916
   14001490c:	mov    DWORD PTR [rsp+0x50],0x6
   140014914:	jmp    0x140014964
   140014916:	jne    0x140014925
   140014918:	cmp    r14w,r10w
   14001491c:	jne    0x140014964
   14001491e:	mov    DWORD PTR [rsp+0x50],r11d
   140014923:	jmp    0x140014964
   140014925:	cmp    edi,eax
   140014927:	cmovg  edi,eax
   14001492a:	mov    DWORD PTR [rsp+0x50],edi
   14001492e:	cmp    edi,0xa3
   140014934:	jle    0x140014964
   140014936:	add    edi,0x15d
   14001493c:	movsxd rcx,edi
   14001493f:	call   0x14000fc4c
   140014944:	mov    r15,QWORD PTR [rsp+0x48]
   140014949:	xor    r8d,r8d
   14001494c:	mov    QWORD PTR [rbp-0x20],rax
   140014950:	test   rax,rax
   140014953:	je     0x14001495c
   140014955:	mov    rbx,rax
   140014958:	mov    esi,edi
   14001495a:	jmp    0x140014964
   14001495c:	mov    DWORD PTR [rsp+0x50],0xa3
   140014964:	cmp    DWORD PTR [rbp-0x78],r8d
   140014968:	jne    0x14001497d
   14001496a:	add    r15,0x8
   14001496e:	mov    QWORD PTR [rsp+0x48],r15
   140014973:	mov    rax,QWORD PTR [r15-0x8]
   140014977:	mov    QWORD PTR [rbp-0x18],rax
   14001497b:	jmp    0x14001499d
   14001497d:	cmp    r13d,0x63
   140014981:	ja     0x140014254
   140014987:	movsxd rax,r13d
   14001498a:	lea    rcx,[rax+rax*2]
   14001498e:	mov    rax,QWORD PTR [rbp+rcx*8+0x408]
   140014996:	mov    rcx,QWORD PTR [rax]
   140014999:	mov    QWORD PTR [rbp-0x18],rcx
   14001499d:	mov    rcx,QWORD PTR [rip+0x31a4c]        # 0x1400463f0
   1400149a4:	movsx  edi,r14b
   1400149a8:	movsxd rsi,esi
   1400149ab:	call   QWORD PTR [rip+0x20877]        # 0x140035228
   1400149b1:	mov    r15d,DWORD PTR [rsp+0x50]
   1400149b6:	lea    rcx,[rsp+0x68]
   1400149bb:	mov    QWORD PTR [rsp+0x30],rcx
   1400149c0:	mov    ecx,DWORD PTR [rbp-0x3c]
   1400149c3:	mov    r9d,edi
   1400149c6:	mov    DWORD PTR [rsp+0x28],ecx
   1400149ca:	lea    rcx,[rbp-0x18]
   1400149ce:	mov    r8,rsi
   1400149d1:	mov    rdx,rbx
   1400149d4:	mov    DWORD PTR [rsp+0x20],r15d
   1400149d9:	call   rax
   1400149db:	mov    edi,r12d
   1400149de:	and    edi,0x80
   1400149e4:	je     0x140014a02
   1400149e6:	test   r15d,r15d
   1400149e9:	jne    0x140014a02
   1400149eb:	mov    rcx,QWORD PTR [rip+0x31a16]        # 0x140046408
   1400149f2:	call   QWORD PTR [rip+0x20830]        # 0x140035228
   1400149f8:	lea    rdx,[rsp+0x68]
   1400149fd:	mov    rcx,rbx
   140014a00:	call   rax
   140014a02:	mov    ecx,0x67
   140014a07:	cmp    r14w,cx
   140014a0b:	jne    0x140014a28
   140014a0d:	test   edi,edi
   140014a0f:	jne    0x140014a28
   140014a11:	mov    rcx,QWORD PTR [rip+0x319e8]        # 0x140046400
   140014a18:	call   QWORD PTR [rip+0x2080a]        # 0x140035228
   140014a1e:	lea    rdx,[rsp+0x68]
   140014a23:	mov    rcx,rbx
   140014a26:	call   rax
   140014a28:	mov    edi,0x2d
   140014a2d:	cmp    BYTE PTR [rbx],dil
   140014a30:	jne    0x140014a3a
   140014a32:	bts    r12d,0x8
   140014a37:	inc    rbx
   140014a3a:	mov    rcx,rbx
   140014a3d:	call   0x14001ca40
   140014a42:	mov    r15,QWORD PTR [rsp+0x48]
   140014a47:	mov    ecx,0x20
   140014a4c:	mov    r14d,eax
   140014a4f:	mov    QWORD PTR [rsp+0x58],r14
   140014a54:	jmp    0x1400141a7
   140014a59:	test   r12b,0x1
   140014a5d:	je     0x140014a73
   140014a5f:	mov    eax,0x2b
   140014a64:	mov    WORD PTR [rbp-0x54],ax
   140014a68:	mov    esi,0x1
   140014a6d:	mov    DWORD PTR [rsp+0x64],esi
   140014a71:	jmp    0x140014a83
   140014a73:	test   r12b,0x2
   140014a77:	je     0x140014a7f
   140014a79:	mov    WORD PTR [rbp-0x54],cx
   140014a7d:	jmp    0x140014a68
   140014a7f:	mov    esi,DWORD PTR [rsp+0x64]
   140014a83:	mov    r15d,DWORD PTR [rbp-0x74]
   140014a87:	mov    rdi,QWORD PTR [rbp-0x30]
   140014a8b:	sub    r15d,r14d
   140014a8e:	sub    r15d,esi
   140014a91:	test   r12b,0xc
   140014a95:	jne    0x140014aa7
   140014a97:	lea    r9,[rsp+0x60]
   140014a9c:	mov    r8,rdi
   140014a9f:	mov    edx,r15d
   140014aa2:	call   0x14001506c
   140014aa7:	mov    rax,QWORD PTR [rbp-0x10]
   140014aab:	lea    r9,[rsp+0x60]
   140014ab0:	lea    rcx,[rbp-0x54]
   140014ab4:	mov    r8,rdi
   140014ab7:	mov    edx,esi
   140014ab9:	mov    QWORD PTR [rsp+0x20],rax
   140014abe:	call   0x1400150c0
   140014ac3:	test   r12b,0x8
   140014ac7:	je     0x140014ae4
   140014ac9:	test   r12b,0x4
   140014acd:	jne    0x140014ae4
   140014acf:	lea    r9,[rsp+0x60]
   140014ad4:	mov    ecx,0x30
   140014ad9:	mov    r8,rdi
   140014adc:	mov    edx,r15d
   140014adf:	call   0x14001506c
   140014ae4:	xor    eax,eax
   140014ae6:	cmp    DWORD PTR [rbp-0x6c],eax
   140014ae9:	jne    0x140014b48
   140014aeb:	test   r14d,r14d
   140014aee:	jle    0x140014b48
   140014af0:	mov    rdi,rbx
   140014af3:	mov    esi,r14d
   140014af6:	mov    rax,QWORD PTR [rsp+0x68]
   140014afb:	lea    r9,[rsp+0x68]
   140014b00:	lea    rcx,[rbp-0x70]
   140014b04:	movsxd r8,DWORD PTR [rax+0xd4]
   140014b0b:	mov    rdx,rdi
   140014b0e:	dec    esi
   140014b10:	call   0x1400235dc
   140014b15:	movsxd r14,eax
   140014b18:	test   eax,eax
   140014b1a:	jle    0x140014b3b
   140014b1c:	mov    rdx,QWORD PTR [rbp-0x30]
   140014b20:	movzx  ecx,WORD PTR [rbp-0x70]
   140014b24:	lea    r8,[rsp+0x60]
   140014b29:	call   0x140015034
   140014b2e:	add    rdi,r14
   140014b31:	test   esi,esi
   140014b33:	jg     0x140014af6
   140014b35:	mov    rdi,QWORD PTR [rbp-0x30]
   140014b39:	jmp    0x140014b64
   140014b3b:	mov    rdi,QWORD PTR [rbp-0x30]
   140014b3f:	or     eax,0xffffffff
   140014b42:	mov    DWORD PTR [rsp+0x60],eax
   140014b46:	jmp    0x140014b68
   140014b48:	mov    rax,QWORD PTR [rbp-0x10]
   140014b4c:	lea    r9,[rsp+0x60]
   140014b51:	mov    r8,rdi
   140014b54:	mov    edx,r14d
   140014b57:	mov    rcx,rbx
   140014b5a:	mov    QWORD PTR [rsp+0x20],rax
   140014b5f:	call   0x1400150c0
   140014b64:	mov    eax,DWORD PTR [rsp+0x60]
   140014b68:	test   eax,eax
   140014b6a:	js     0x140014b87
   140014b6c:	test   r12b,0x4
   140014b70:	je     0x140014b87
   140014b72:	lea    r9,[rsp+0x60]
   140014b77:	mov    ecx,0x20
   140014b7c:	mov    r8,rdi
   140014b7f:	mov    edx,r15d
   140014b82:	call   0x14001506c
   140014b87:	mov    r15,QWORD PTR [rsp+0x48]
   140014b8c:	mov    rcx,QWORD PTR [rbp-0x20]
   140014b90:	test   rcx,rcx
   140014b93:	je     0x140014ba5
   140014b95:	call   0x14000fb50
   140014b9a:	mov    r15,QWORD PTR [rsp+0x48]
   140014b9f:	xor    ecx,ecx
   140014ba1:	mov    QWORD PTR [rbp-0x20],rcx
   140014ba5:	mov    edi,DWORD PTR [rsp+0x50]
   140014ba9:	jmp    0x1400148f4
   140014bae:	movzx  eax,r14w
   140014bb2:	cmp    eax,0x49
   140014bb5:	je     0x140014c03
   140014bb7:	cmp    eax,0x68
   140014bba:	je     0x140014bfa
   140014bbc:	mov    ecx,0x6c
   140014bc1:	cmp    eax,ecx
   140014bc3:	je     0x140014bd8
   140014bc5:	cmp    eax,0x77
   140014bc8:	jne    0x140014f01
   140014bce:	bts    r12d,0xb
   140014bd3:	jmp    0x140014f01
   140014bd8:	mov    r8d,DWORD PTR [rsp+0x40]
   140014bdd:	cmp    WORD PTR [r9],cx
   140014be1:	jne    0x140014bf1
   140014be3:	add    r9,0x2
   140014be7:	bts    r12d,0xc
   140014bec:	jmp    0x140014f06
   140014bf1:	or     r12d,0x10
   140014bf5:	jmp    0x140014f06
   140014bfa:	or     r12d,0x20
   140014bfe:	jmp    0x140014f01
   140014c03:	movzx  eax,WORD PTR [r9]
   140014c07:	mov    ecx,0x8000
   140014c0c:	or     r12d,ecx
   140014c0f:	cmp    ax,0x36
   140014c13:	jne    0x140014c29
   140014c15:	cmp    WORD PTR [r9+0x2],0x34
   140014c1b:	jne    0x140014c29
   140014c1d:	add    r9,0x4
   140014c21:	or     r12d,ecx
   140014c24:	jmp    0x140014f01
   140014c29:	cmp    ax,0x33
   140014c2d:	jne    0x140014c45
   140014c2f:	cmp    WORD PTR [r9+0x2],0x32
   140014c35:	jne    0x140014c45
   140014c37:	add    r9,0x4
   140014c3b:	btr    r12d,0xf
   140014c40:	jmp    0x140014f01
   140014c45:	sub    ax,0x58
   140014c49:	mov    ecx,0x20
   140014c4e:	cmp    ax,cx
   140014c51:	ja     0x140014c6d
   140014c53:	movabs rcx,0x120821001
   140014c5d:	bt     rcx,rax
   140014c61:	jae    0x140014c6d
   140014c63:	bts    r12d,0x10
   140014c68:	jmp    0x140014f01
   140014c6d:	mov    DWORD PTR [rbp-0x40],r8d
   140014c71:	jmp    0x140014ede
   140014c76:	mov    eax,0x2a
   140014c7b:	cmp    r14w,ax
   140014c7f:	jne    0x140014d46
   140014c85:	test   esi,esi
   140014c87:	jne    0x140014c98
   140014c89:	add    r15,0x8
   140014c8d:	mov    QWORD PTR [rsp+0x48],r15
   140014c92:	mov    edi,DWORD PTR [r15-0x8]
   140014c96:	jmp    0x140014ce1
   140014c98:	lea    rdx,[rbp-0x48]
   140014c9c:	mov    r8d,0xa
   140014ca2:	mov    rcx,r9
   140014ca5:	call   0x140023934
   140014caa:	mov    rcx,QWORD PTR [rbp-0x48]
   140014cae:	mov    rdx,QWORD PTR [rbp-0x60]
   140014cb2:	lea    r9,[rcx+0x2]
   140014cb6:	mov    r11d,0x1
   140014cbc:	sub    eax,r11d
   140014cbf:	mov    QWORD PTR [rbp-0x68],r9
   140014cc3:	test   rdx,rdx
   140014cc6:	je     0x140014dbe
   140014ccc:	mov    r15,QWORD PTR [rsp+0x48]
   140014cd1:	cdqe   
   140014cd3:	lea    rcx,[rax+rax*2]
   140014cd7:	mov    rax,QWORD PTR [rbp+rcx*8+0x408]
   140014cdf:	mov    edi,DWORD PTR [rax]
   140014ce1:	mov    r8d,DWORD PTR [rsp+0x40]
   140014ce6:	mov    DWORD PTR [rsp+0x50],edi
   140014cea:	test   edi,edi
   140014cec:	jns    0x140014f06
   140014cf2:	or     edi,0xffffffff
   140014cf5:	mov    DWORD PTR [rsp+0x50],edi
   140014cf9:	jmp    0x140014f06
   140014cfe:	mov    r15,QWORD PTR [rsp+0x48]
   140014d03:	mov    DWORD PTR [rax],r11d
   140014d06:	mov    eax,0x2a
   140014d0b:	mov    WORD PTR [rbp+rcx*8+0x410],ax
   140014d13:	mov    DWORD PTR [rbp+rcx*8+0x414],r12d
   140014d1b:	jmp    0x140014f06
   140014d20:	mov    r9d,r12d
   140014d23:	mov    r8d,0x2a
   140014d29:	mov    edx,r11d
   140014d2c:	mov    rcx,rax
   140014d2f:	call   0x140013d30
   140014d34:	test   eax,eax
   140014d36:	je     0x140014fc4
   140014d3c:	mov    r15,QWORD PTR [rsp+0x48]
   140014d41:	jmp    0x1400148f4
   140014d46:	lea    edi,[rdi+rdi*4]
   140014d49:	movzx  eax,r14w
   140014d4d:	lea    edi,[rdi-0x18]
   140014d50:	lea    edi,[rax+rdi*2]
   140014d53:	mov    DWORD PTR [rsp+0x50],edi
   140014d57:	jmp    0x140014f01
   140014d5c:	mov    edi,r8d
   140014d5f:	mov    DWORD PTR [rsp+0x50],r8d
   140014d64:	jmp    0x140014f01
   140014d69:	mov    eax,0x2a
   140014d6e:	cmp    r14w,ax
   140014d72:	jne    0x140014e40
   140014d78:	test   esi,esi
   140014d7a:	jne    0x140014d8e
   140014d7c:	add    r15,0x8
   140014d80:	mov    QWORD PTR [rsp+0x48],r15
   140014d85:	mov    ecx,DWORD PTR [r15-0x8]
   140014d89:	jmp    0x140014e22
   140014d8e:	lea    rdx,[rbp-0x48]
   140014d92:	mov    r8d,0xa
   140014d98:	mov    rcx,r9
   140014d9b:	call   0x140023934
   140014da0:	mov    rcx,QWORD PTR [rbp-0x48]
   140014da4:	mov    rdx,QWORD PTR [rbp-0x60]
   140014da8:	lea    r9,[rcx+0x2]
   140014dac:	mov    r11d,0x1
   140014db2:	sub    eax,r11d
   140014db5:	mov    QWORD PTR [rbp-0x68],r9
   140014db9:	test   rdx,rdx
   140014dbc:	jne    0x140014e0d
   140014dbe:	test   eax,eax
   140014dc0:	js     0x140014254
   140014dc6:	cmp    WORD PTR [rcx],0x24
   140014dca:	jne    0x140014254
   140014dd0:	cmp    r13d,0x64
   140014dd4:	jge    0x140014254
   140014dda:	mov    r8d,DWORD PTR [rsp+0x40]
   140014ddf:	cmp    eax,r8d
   140014de2:	cmovg  r8d,eax
   140014de6:	cdqe   
   140014de8:	xor    r14d,r14d
   140014deb:	lea    rcx,[rax+rax*2]
   140014def:	lea    rax,[rbp+0x400]
   140014df6:	mov    DWORD PTR [rsp+0x40],r8d
   140014dfb:	lea    rax,[rax+rcx*8]
   140014dff:	cmp    DWORD PTR [rax],r14d
   140014e02:	je     0x140014cfe
   140014e08:	jmp    0x140014d20
   140014e0d:	mov    r15,QWORD PTR [rsp+0x48]
   140014e12:	cdqe   
   140014e14:	lea    rcx,[rax+rax*2]
   140014e18:	mov    rax,QWORD PTR [rbp+rcx*8+0x408]
   140014e20:	mov    ecx,DWORD PTR [rax]
   140014e22:	mov    r8d,DWORD PTR [rsp+0x40]
   140014e27:	mov    DWORD PTR [rbp-0x74],ecx
   140014e2a:	test   ecx,ecx
   140014e2c:	jns    0x140014f06
   140014e32:	or     r12d,0x4
   140014e36:	neg    ecx
   140014e38:	mov    DWORD PTR [rbp-0x74],ecx
   140014e3b:	jmp    0x140014f06
   140014e40:	mov    eax,DWORD PTR [rbp-0x74]
   140014e43:	lea    ecx,[rax+rax*4]
   140014e46:	movzx  eax,r14w
   140014e4a:	lea    ecx,[rcx-0x18]
   140014e4d:	lea    ecx,[rax+rcx*2]
   140014e50:	mov    DWORD PTR [rbp-0x74],ecx
   140014e53:	jmp    0x140014f01
   140014e58:	movzx  eax,r14w
   140014e5c:	mov    ecx,0x20
   140014e61:	cmp    eax,ecx
   140014e63:	je     0x140014ea2
   140014e65:	cmp    eax,0x23
   140014e68:	je     0x140014e9b
   140014e6a:	mov    ecx,0x2b
   140014e6f:	cmp    eax,ecx
   140014e71:	je     0x140014e96
   140014e73:	mov    ecx,0x2d
   140014e78:	cmp    eax,ecx
   140014e7a:	je     0x140014e90
   140014e7c:	mov    r8d,DWORD PTR [rsp+0x40]
   140014e81:	mov    ecx,0x30
   140014e86:	cmp    eax,ecx
   140014e88:	jne    0x140014f06
   140014e8a:	or     r12d,0x8
   140014e8e:	jmp    0x140014f06
   140014e90:	or     r12d,0x4
   140014e94:	jmp    0x140014f01
   140014e96:	or     r12d,r11d
   140014e99:	jmp    0x140014f01
   140014e9b:	bts    r12d,0x7
   140014ea0:	jmp    0x140014f01
   140014ea2:	or     r12d,0x2
   140014ea6:	jmp    0x140014f01
   140014ea8:	or     edi,0xffffffff
   140014eab:	mov    DWORD PTR [rbp-0x3c],r8d
   140014eaf:	mov    DWORD PTR [rsp+0x44],r8d
   140014eb4:	mov    DWORD PTR [rbp-0x74],r8d
   140014eb8:	mov    DWORD PTR [rsp+0x64],r8d
   140014ebd:	mov    r12d,r8d
   140014ec0:	mov    DWORD PTR [rsp+0x50],edi
   140014ec4:	mov    DWORD PTR [rbp-0x6c],r8d
   140014ec8:	jmp    0x140014f01
   140014eca:	test   rdx,rdx
   140014ecd:	jne    0x140014ed4
   140014ecf:	cmp    esi,r11d
   140014ed2:	je     0x140014f01
   140014ed4:	cmp    rdx,r11
   140014ed7:	jne    0x140014ede
   140014ed9:	cmp    esi,0xffffffff
   140014edc:	je     0x140014f01
   140014ede:	mov    rdx,QWORD PTR [rbp-0x30]
   140014ee2:	lea    r8,[rsp+0x60]
   140014ee7:	movzx  ecx,r14w
   140014eeb:	mov    DWORD PTR [rbp-0x6c],r11d
   140014eef:	call   0x140015034
   140014ef4:	jmp    0x140014d3c
   140014ef9:	mov    edi,DWORD PTR [rsp+0x50]
   140014efd:	mov    r9,QWORD PTR [rbp-0x68]
   140014f01:	mov    r8d,DWORD PTR [rsp+0x40]
   140014f06:	movzx  r14d,WORD PTR [r9]
   140014f0a:	mov    esi,DWORD PTR [rbp-0x78]
   140014f0d:	mov    eax,DWORD PTR [rsp+0x60]
   140014f11:	mov    r10d,DWORD PTR [rbp-0x40]
   140014f15:	test   r14w,r14w
   140014f19:	jne    0x140013fa1
   140014f1f:	xor    r13d,r13d
   140014f22:	test   r10d,r10d
   140014f25:	je     0x140014f31
   140014f27:	cmp    r10d,0x7
   140014f2b:	jne    0x140014fdd
   140014f31:	mov    r11d,DWORD PTR [rbp-0x50]
   140014f35:	cmp    esi,0x1
   140014f38:	jne    0x140014faa
   140014f3a:	test   r11d,r11d
   140014f3d:	jne    0x140014faa
   140014f3f:	mov    rsi,r13
   140014f42:	movsxd r14,r8d
   140014f45:	test   r8d,r8d
   140014f48:	js     0x140014fa2
   140014f4a:	lea    rdi,[rbp+0x408]
   140014f51:	mov    ecx,DWORD PTR [rdi-0x8]
   140014f54:	dec    ecx
   140014f56:	je     0x140014f81
   140014f58:	dec    ecx
   140014f5a:	je     0x140014f81
   140014f5c:	dec    ecx
   140014f5e:	je     0x140014f81
   140014f60:	dec    ecx
   140014f62:	je     0x140014f81
   140014f64:	dec    ecx
   140014f66:	je     0x140014f81
   140014f68:	cmp    ecx,0x2
   140014f6b:	jne    0x140014fdd
   140014f6d:	lea    rcx,[rsp+0x48]
   140014f72:	mov    QWORD PTR [rdi],r15
   140014f75:	call   0x140016eac
   140014f7a:	mov    r15,QWORD PTR [rsp+0x48]
   140014f7f:	jmp    0x140014f8d
   140014f81:	mov    QWORD PTR [rdi],r15
   140014f84:	add    r15,0x8
   140014f88:	mov    QWORD PTR [rsp+0x48],r15
   140014f8d:	inc    rsi
   140014f90:	add    rdi,0x18
   140014f94:	cmp    rsi,r14
   140014f97:	jle    0x140014f51
   140014f99:	mov    esi,DWORD PTR [rbp-0x78]
   140014f9c:	mov    r11d,DWORD PTR [rbp-0x50]
   140014fa0:	jmp    0x140014faa
   140014fa2:	mov    esi,DWORD PTR [rbp-0x78]
   140014fa5:	jmp    0x140014faa
   140014fa7:	xor    r13d,r13d
   140014faa:	mov    eax,DWORD PTR [rsp+0x60]
   140014fae:	inc    r11d
   140014fb1:	mov    DWORD PTR [rbp-0x50],r11d
   140014fb5:	cmp    r11d,0x2
   140014fb9:	jge    0x140014ff6
   140014fbb:	mov    r14,QWORD PTR [rbp-0x8]
   140014fbf:	jmp    0x140013f4e
   140014fc4:	call   0x14000b9f0
   140014fc9:	mov    DWORD PTR [rax],0x16
   140014fcf:	call   0x14000b8b8
   140014fd4:	cmp    BYTE PTR [rbp-0x80],r14b
   140014fd8:	jmp    0x140014269
   140014fdd:	call   0x14000b9f0
   140014fe2:	mov    DWORD PTR [rax],0x16
   140014fe8:	call   0x14000b8b8
   140014fed:	cmp    BYTE PTR [rbp-0x80],r13b
   140014ff1:	jmp    0x140014269
   140014ff6:	cmp    BYTE PTR [rbp-0x80],r13b
   140014ffa:	je     0x140015008
   140014ffc:	mov    rcx,QWORD PTR [rsp+0x78]
   140015001:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140015008:	mov    rcx,QWORD PTR [rbp+0xd60]
   14001500f:	xor    rcx,rsp
   140015012:	call   0x1400097d0
   140015017:	mov    rbx,QWORD PTR [rsp+0xec0]
   14001501f:	add    rsp,0xe70
   140015026:	pop    r15
   140015028:	pop    r14
   14001502a:	pop    r13
   14001502c:	pop    r12
   14001502e:	pop    rdi
   14001502f:	pop    rsi
   140015030:	pop    rbp
   140015031:	ret    
   140015032:	int3   
   140015033:	int3   
   140015034:	rex push rbx
   140015036:	sub    rsp,0x20
   14001503a:	test   BYTE PTR [rdx+0x18],0x40
   14001503e:	mov    rbx,r8
   140015041:	je     0x14001504f
   140015043:	cmp    QWORD PTR [rdx+0x10],0x0
   140015048:	jne    0x14001504f
   14001504a:	inc    DWORD PTR [r8]
   14001504d:	jmp    0x140015065
   14001504f:	call   0x140023378
   140015054:	mov    ecx,0xffff
   140015059:	cmp    ax,cx
   14001505c:	jne    0x140015063
   14001505e:	or     DWORD PTR [rbx],0xffffffff
   140015061:	jmp    0x140015065
   140015063:	inc    DWORD PTR [rbx]
   140015065:	add    rsp,0x20
   140015069:	pop    rbx
   14001506a:	ret    
   14001506b:	int3   
   14001506c:	test   edx,edx
   14001506e:	jle    0x1400150bc
   140015070:	mov    QWORD PTR [rsp+0x8],rbx
   140015075:	mov    QWORD PTR [rsp+0x10],rbp
   14001507a:	mov    QWORD PTR [rsp+0x18],rsi
   14001507f:	push   rdi
   140015080:	sub    rsp,0x20
   140015084:	mov    rdi,r9
   140015087:	mov    rsi,r8
   14001508a:	mov    ebx,edx
   14001508c:	movzx  ebp,cx
   14001508f:	mov    r8,rdi
   140015092:	mov    rdx,rsi
   140015095:	movzx  ecx,bp
   140015098:	dec    ebx
   14001509a:	call   0x140015034
   14001509f:	cmp    DWORD PTR [rdi],0xffffffff
   1400150a2:	je     0x1400150a8
   1400150a4:	test   ebx,ebx
   1400150a6:	jg     0x14001508f
   1400150a8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400150ad:	mov    rbp,QWORD PTR [rsp+0x38]
   1400150b2:	mov    rsi,QWORD PTR [rsp+0x40]
   1400150b7:	add    rsp,0x20
   1400150bb:	pop    rdi
   1400150bc:	ret    
   1400150bd:	int3   
   1400150be:	int3   
   1400150bf:	int3   
   1400150c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400150c5:	mov    QWORD PTR [rsp+0x10],rbp
   1400150ca:	mov    QWORD PTR [rsp+0x18],rsi
   1400150cf:	push   rdi
   1400150d0:	push   r14
   1400150d2:	push   r15
   1400150d4:	sub    rsp,0x20
   1400150d8:	test   BYTE PTR [r8+0x18],0x40
   1400150dd:	mov    rbx,QWORD PTR [rsp+0x60]
   1400150e2:	mov    rdi,r9
   1400150e5:	mov    r15d,DWORD PTR [rbx]
   1400150e8:	mov    rbp,r8
   1400150eb:	mov    esi,edx
   1400150ed:	mov    r14,rcx
   1400150f0:	je     0x1400150fe
   1400150f2:	cmp    QWORD PTR [r8+0x10],0x0
   1400150f7:	jne    0x1400150fe
   1400150f9:	add    DWORD PTR [r9],edx
   1400150fc:	jmp    0x140015140
   1400150fe:	and    DWORD PTR [rbx],0x0
   140015101:	test   edx,edx
   140015103:	jle    0x14001513d
   140015105:	movzx  ecx,WORD PTR [r14]
   140015109:	mov    r8,rdi
   14001510c:	mov    rdx,rbp
   14001510f:	dec    esi
   140015111:	call   0x140015034
   140015116:	cmp    DWORD PTR [rdi],0xffffffff
   140015119:	lea    r14,[r14+0x2]
   14001511d:	jne    0x140015134
   14001511f:	cmp    DWORD PTR [rbx],0x2a
   140015122:	jne    0x140015138
   140015124:	mov    ecx,0x3f
   140015129:	mov    r8,rdi
   14001512c:	mov    rdx,rbp
   14001512f:	call   0x140015034
   140015134:	test   esi,esi
   140015136:	jg     0x140015105
   140015138:	cmp    DWORD PTR [rbx],0x0
   14001513b:	jne    0x140015140
   14001513d:	mov    DWORD PTR [rbx],r15d
   140015140:	mov    rbx,QWORD PTR [rsp+0x40]
   140015145:	mov    rbp,QWORD PTR [rsp+0x48]
   14001514a:	mov    rsi,QWORD PTR [rsp+0x50]
   14001514f:	add    rsp,0x20
   140015153:	pop    r15
   140015155:	pop    r14
   140015157:	pop    rdi
   140015158:	ret    
   140015159:	int3   
   14001515a:	int3   
   14001515b:	int3   
   14001515c:	mov    QWORD PTR [rsp+0x18],rbx
   140015161:	push   rbp
   140015162:	push   rsi
   140015163:	push   rdi
   140015164:	push   r12
   140015166:	push   r13
   140015168:	push   r14
   14001516a:	push   r15
   14001516c:	lea    rbp,[rsp-0x1e0]
   140015174:	sub    rsp,0x2e0
   14001517b:	mov    rax,QWORD PTR [rip+0x300ee]        # 0x140045270
   140015182:	xor    rax,rsp
   140015185:	mov    QWORD PTR [rbp+0x1d8],rax
   14001518c:	xor    eax,eax
   14001518e:	mov    rsi,rcx
   140015191:	mov    QWORD PTR [rsp+0x68],rcx
   140015196:	mov    rdi,rdx
   140015199:	lea    rcx,[rbp-0x58]
   14001519d:	mov    rdx,r8
   1400151a0:	mov    r13,r9
   1400151a3:	mov    DWORD PTR [rsp+0x70],eax
   1400151a7:	mov    r14d,eax
   1400151aa:	mov    DWORD PTR [rsp+0x54],eax
   1400151ae:	mov    r12d,eax
   1400151b1:	mov    DWORD PTR [rsp+0x48],eax
   1400151b5:	mov    DWORD PTR [rsp+0x60],eax
   1400151b9:	mov    DWORD PTR [rsp+0x58],eax
   1400151bd:	mov    ebx,eax
   1400151bf:	mov    DWORD PTR [rsp+0x50],eax
   1400151c3:	call   0x140007ff0
   1400151c8:	call   0x14000b9f0
   1400151cd:	or     r8d,0xffffffff
   1400151d1:	xor    r10d,r10d
   1400151d4:	mov    QWORD PTR [rbp-0x80],rax
   1400151d8:	test   rsi,rsi
   1400151db:	je     0x140015b2c
   1400151e1:	test   BYTE PTR [rsi+0x18],0x40
   1400151e5:	lea    r9,[rip+0xfffffffffffeae14]        # 0x140000000
   1400151ec:	jne    0x140015278
   1400151f2:	mov    rcx,rsi
   1400151f5:	call   0x14001bc7c
   1400151fa:	lea    r8,[rip+0x3120f]        # 0x140046410
   140015201:	movsxd r10,eax
   140015204:	lea    ecx,[r10+0x2]
   140015208:	cmp    ecx,0x1
   14001520b:	jbe    0x14001522f
   14001520d:	mov    rdx,r10
   140015210:	mov    rcx,r10
   140015213:	lea    rax,[rip+0xfffffffffffeade6]        # 0x140000000
   14001521a:	and    edx,0x1f
   14001521d:	sar    rcx,0x5
   140015221:	imul   r9,rdx,0x58
   140015225:	add    r9,QWORD PTR [rax+rcx*8+0x48840]
   14001522d:	jmp    0x140015232
   14001522f:	mov    r9,r8
   140015232:	test   BYTE PTR [r9+0x38],0x7f
   140015237:	jne    0x140015b2c
   14001523d:	lea    eax,[r10+0x2]
   140015241:	lea    r9,[rip+0xfffffffffffeadb8]        # 0x140000000
   140015248:	cmp    eax,0x1
   14001524b:	jbe    0x140015266
   14001524d:	mov    rcx,r10
   140015250:	mov    rax,r10
   140015253:	and    ecx,0x1f
   140015256:	sar    rax,0x5
   14001525a:	imul   r8,rcx,0x58
   14001525e:	add    r8,QWORD PTR [r9+rax*8+0x48840]
   140015266:	test   BYTE PTR [r8+0x38],0x80
   14001526b:	jne    0x140015b2c
   140015271:	or     r8d,0xffffffff
   140015275:	xor    r10d,r10d
   140015278:	test   rdi,rdi
   14001527b:	je     0x140015b2c
   140015281:	mov    r15b,BYTE PTR [rdi]
   140015284:	mov    esi,r10d
   140015287:	mov    DWORD PTR [rsp+0x40],r10d
   14001528c:	mov    DWORD PTR [rsp+0x44],r10d
   140015291:	mov    edx,r10d
   140015294:	mov    QWORD PTR [rbp-0x78],r10
   140015298:	test   r15b,r15b
   14001529b:	je     0x140015b44
   1400152a1:	mov    r11d,0x200
   1400152a7:	inc    rdi
   1400152aa:	mov    QWORD PTR [rbp-0x68],rdi
   1400152ae:	test   esi,esi
   1400152b0:	js     0x140015b23
   1400152b6:	lea    eax,[r15-0x20]
   1400152ba:	cmp    al,0x58
   1400152bc:	ja     0x1400152d0
   1400152be:	movsx  rax,r15b
   1400152c2:	movzx  ecx,BYTE PTR [rax+r9*1+0x38820]
   1400152cb:	and    ecx,0xf
   1400152ce:	jmp    0x1400152d3
   1400152d0:	mov    ecx,r10d
   1400152d3:	movsxd rax,ecx
   1400152d6:	lea    rcx,[rax+rax*8]
   1400152da:	movsxd rax,edx
   1400152dd:	add    rcx,rax
   1400152e0:	movzx  edx,BYTE PTR [rcx+r9*1+0x38840]
   1400152e9:	shr    edx,0x4
   1400152ec:	mov    DWORD PTR [rsp+0x5c],edx
   1400152f0:	cmp    edx,0x8
   1400152f3:	je     0x140015b2c
   1400152f9:	mov    ecx,edx
   1400152fb:	test   edx,edx
   1400152fd:	je     0x1400159e5
   140015303:	dec    ecx
   140015305:	je     0x140015aff
   14001530b:	dec    ecx
   14001530d:	je     0x140015aaf
   140015313:	dec    ecx
   140015315:	je     0x140015a73
   14001531b:	dec    ecx
   14001531d:	je     0x140015a6b
   140015323:	dec    ecx
   140015325:	je     0x140015a36
   14001532b:	dec    ecx
   14001532d:	je     0x14001595b
   140015333:	dec    ecx
   140015335:	jne    0x140015946
   14001533b:	movsx  ecx,r15b
   14001533f:	cmp    ecx,0x64
   140015342:	jg     0x1400154b1
   140015348:	je     0x1400155a9
   14001534e:	cmp    ecx,0x41
   140015351:	je     0x140015486
   140015357:	cmp    ecx,0x43
   14001535a:	je     0x14001542c
   140015360:	lea    eax,[rcx-0x45]
   140015363:	test   eax,0xfffffffd
   140015368:	je     0x140015486
   14001536e:	cmp    ecx,0x53
   140015371:	je     0x1400153e0
   140015373:	cmp    ecx,0x58
   140015376:	je     0x140015542
   14001537c:	cmp    ecx,0x5a
   14001537f:	je     0x140015398
   140015381:	cmp    ecx,0x61
   140015384:	je     0x140015492
   14001538a:	cmp    ecx,0x63
   14001538d:	je     0x14001543a
   140015393:	jmp    0x1400157b4
   140015398:	mov    rax,QWORD PTR [r13+0x0]
   14001539c:	add    r13,0x8
   1400153a0:	test   rax,rax
   1400153a3:	je     0x1400153d4
   1400153a5:	mov    rbx,QWORD PTR [rax+0x8]
   1400153a9:	test   rbx,rbx
   1400153ac:	je     0x1400153d4
   1400153ae:	movsx  eax,WORD PTR [rax]
   1400153b1:	bt     r14d,0xb
   1400153b6:	jae    0x1400153ca
   1400153b8:	cdq    
   1400153b9:	mov    DWORD PTR [rsp+0x50],0x1
   1400153c1:	sub    eax,edx
   1400153c3:	sar    eax,1
   1400153c5:	jmp    0x1400157b0
   1400153ca:	mov    DWORD PTR [rsp+0x50],r10d
   1400153cf:	jmp    0x1400157b0
   1400153d4:	mov    rbx,QWORD PTR [rip+0x303d5]        # 0x1400457b0
   1400153db:	jmp    0x1400157a5
   1400153e0:	test   r14d,0x830
   1400153e7:	jne    0x1400153ee
   1400153e9:	bts    r14d,0xb
   1400153ee:	mov    rbx,QWORD PTR [r13+0x0]
   1400153f2:	cmp    r12d,r8d
   1400153f5:	mov    eax,r12d
   1400153f8:	mov    ecx,0x7fffffff
   1400153fd:	cmove  eax,ecx
   140015400:	add    r13,0x8
   140015404:	test   r14d,0x810
   14001540b:	je     0x14001550e
   140015411:	test   rbx,rbx
   140015414:	mov    DWORD PTR [rsp+0x50],0x1
   14001541c:	cmove  rbx,QWORD PTR [rip+0x30394]        # 0x1400457b8
   140015424:	mov    rcx,rbx
   140015427:	jmp    0x140015502
   14001542c:	test   r14d,0x830
   140015433:	jne    0x14001543a
   140015435:	bts    r14d,0xb
   14001543a:	add    r13,0x8
   14001543e:	test   r14d,0x810
   140015445:	je     0x14001546e
   140015447:	movzx  r9d,WORD PTR [r13-0x8]
   14001544c:	lea    rdx,[rbp-0x30]
   140015450:	lea    rcx,[rsp+0x44]
   140015455:	mov    r8,r11
   140015458:	call   0x14001d67c
   14001545d:	xor    r10d,r10d
   140015460:	test   eax,eax
   140015462:	je     0x14001547d
   140015464:	mov    DWORD PTR [rsp+0x58],0x1
   14001546c:	jmp    0x14001547d
   14001546e:	mov    al,BYTE PTR [r13-0x8]
   140015472:	mov    DWORD PTR [rsp+0x44],0x1
   14001547a:	mov    BYTE PTR [rbp-0x30],al
   14001547d:	lea    rbx,[rbp-0x30]
   140015481:	jmp    0x1400157b4
   140015486:	mov    DWORD PTR [rsp+0x60],0x1
   14001548e:	add    r15b,0x20
   140015492:	or     r14d,0x40
   140015496:	lea    rbx,[rbp-0x30]
   14001549a:	mov    esi,r11d
   14001549d:	test   r12d,r12d
   1400154a0:	jns    0x1400156c7
   1400154a6:	mov    r12d,0x6
   1400154ac:	jmp    0x14001570d
   1400154b1:	cmp    ecx,0x67
   1400154b4:	jle    0x140015492
   1400154b6:	cmp    ecx,0x69
   1400154b9:	je     0x1400155a9
   1400154bf:	cmp    ecx,0x6e
   1400154c2:	je     0x140015577
   1400154c8:	cmp    ecx,0x6f
   1400154cb:	je     0x140015567
   1400154d1:	cmp    ecx,0x70
   1400154d4:	je     0x140015537
   1400154d6:	cmp    ecx,0x73
   1400154d9:	je     0x1400153ee
   1400154df:	cmp    ecx,0x75
   1400154e2:	je     0x1400155ad
   1400154e8:	cmp    ecx,0x78
   1400154eb:	jne    0x1400157b4
   1400154f1:	lea    eax,[rcx-0x51]
   1400154f4:	jmp    0x140015547
   1400154f6:	dec    eax
   1400154f8:	cmp    WORD PTR [rcx],r10w
   1400154fc:	je     0x140015506
   1400154fe:	add    rcx,0x2
   140015502:	test   eax,eax
   140015504:	jne    0x1400154f6
   140015506:	sub    rcx,rbx
   140015509:	sar    rcx,1
   14001550c:	jmp    0x14001552e
   14001550e:	test   rbx,rbx
   140015511:	cmove  rbx,QWORD PTR [rip+0x30297]        # 0x1400457b0
   140015519:	mov    rcx,rbx
   14001551c:	jmp    0x140015528
   14001551e:	dec    eax
   140015520:	cmp    BYTE PTR [rcx],r10b
   140015523:	je     0x14001552c
   140015525:	inc    rcx
   140015528:	test   eax,eax
   14001552a:	jne    0x14001551e
   14001552c:	sub    ecx,ebx
   14001552e:	mov    DWORD PTR [rsp+0x44],ecx
   140015532:	jmp    0x1400157b4
   140015537:	mov    r12d,0x10
   14001553d:	bts    r14d,0xf
   140015542:	mov    eax,0x7
   140015547:	mov    DWORD PTR [rsp+0x70],eax
   14001554b:	mov    r9d,0x10
   140015551:	test   r14b,r14b
   140015554:	jns    0x1400155b3
   140015556:	add    al,0x51
   140015558:	mov    BYTE PTR [rsp+0x4c],0x30
   14001555d:	lea    edx,[r9-0xe]
   140015561:	mov    BYTE PTR [rsp+0x4d],al
   140015565:	jmp    0x1400155b7
   140015567:	mov    r9d,0x8
   14001556d:	test   r14b,r14b
   140015570:	jns    0x1400155b3
   140015572:	or     r14d,r11d
   140015575:	jmp    0x1400155b3
   140015577:	mov    rdi,QWORD PTR [r13+0x0]
   14001557b:	add    r13,0x8
   14001557f:	call   0x140007888
   140015584:	xor    r10d,r10d
   140015587:	test   eax,eax
   140015589:	je     0x140015b2c
   14001558f:	test   r14b,0x20
   140015593:	je     0x14001559a
   140015595:	mov    WORD PTR [rdi],si
   140015598:	jmp    0x14001559c
   14001559a:	mov    DWORD PTR [rdi],esi
   14001559c:	mov    DWORD PTR [rsp+0x58],0x1
   1400155a4:	jmp    0x140015915
   1400155a9:	or     r14d,0x40
   1400155ad:	mov    r9d,0xa
   1400155b3:	mov    edx,DWORD PTR [rsp+0x48]
   1400155b7:	mov    eax,0x8000
   1400155bc:	test   eax,r14d
   1400155bf:	je     0x1400155cb
   1400155c1:	mov    r8,QWORD PTR [r13+0x0]
   1400155c5:	add    r13,0x8
   1400155c9:	jmp    0x140015605
   1400155cb:	bt     r14d,0xc
   1400155d0:	jb     0x1400155c1
   1400155d2:	add    r13,0x8
   1400155d6:	test   r14b,0x20
   1400155da:	je     0x1400155f5
   1400155dc:	mov    QWORD PTR [rsp+0x78],r13
   1400155e1:	test   r14b,0x40
   1400155e5:	je     0x1400155ee
   1400155e7:	movsx  r8,WORD PTR [r13-0x8]
   1400155ec:	jmp    0x14001560a
   1400155ee:	movzx  r8d,WORD PTR [r13-0x8]
   1400155f3:	jmp    0x14001560a
   1400155f5:	test   r14b,0x40
   1400155f9:	je     0x140015601
   1400155fb:	movsxd r8,DWORD PTR [r13-0x8]
   1400155ff:	jmp    0x140015605
   140015601:	mov    r8d,DWORD PTR [r13-0x8]
   140015605:	mov    QWORD PTR [rsp+0x78],r13
   14001560a:	test   r14b,0x40
   14001560e:	je     0x14001561d
   140015610:	test   r8,r8
   140015613:	jns    0x14001561d
   140015615:	neg    r8
   140015618:	bts    r14d,0x8
   14001561d:	test   eax,r14d
   140015620:	jne    0x14001562c
   140015622:	bt     r14d,0xc
   140015627:	jb     0x14001562c
   140015629:	mov    r8d,r8d
   14001562c:	test   r12d,r12d
   14001562f:	jns    0x140015639
   140015631:	mov    r12d,0x1
   140015637:	jmp    0x140015644
   140015639:	and    r14d,0xfffffff7
   14001563d:	cmp    r12d,r11d
   140015640:	cmovg  r12d,r11d
   140015644:	mov    r13d,DWORD PTR [rsp+0x70]
   140015649:	mov    rax,r8
   14001564c:	lea    rbx,[rbp+0x1cf]
   140015653:	neg    rax
   140015656:	sbb    ecx,ecx
   140015658:	and    ecx,edx
   14001565a:	mov    DWORD PTR [rsp+0x48],ecx
   14001565e:	mov    ecx,r12d
   140015661:	dec    r12d
   140015664:	test   ecx,ecx
   140015666:	jg     0x14001566d
   140015668:	test   r8,r8
   14001566b:	je     0x14001568d
   14001566d:	xor    edx,edx
   14001566f:	mov    rax,r8
   140015672:	movsxd rcx,r9d
   140015675:	div    rcx
   140015678:	mov    r8,rax
   14001567b:	lea    eax,[rdx+0x30]
   14001567e:	cmp    eax,0x39
   140015681:	jle    0x140015686
   140015683:	add    eax,r13d
   140015686:	mov    BYTE PTR [rbx],al
   140015688:	dec    rbx
   14001568b:	jmp    0x14001565e
   14001568d:	mov    r13,QWORD PTR [rsp+0x78]
   140015692:	lea    rax,[rbp+0x1cf]
   140015699:	sub    eax,ebx
   14001569b:	inc    rbx
   14001569e:	mov    DWORD PTR [rsp+0x44],eax
   1400156a2:	test   r11d,r14d
   1400156a5:	je     0x1400157b4
   1400156ab:	test   eax,eax
   1400156ad:	je     0x1400156b8
   1400156af:	cmp    BYTE PTR [rbx],0x30
   1400156b2:	je     0x1400157b4
   1400156b8:	dec    rbx
   1400156bb:	inc    DWORD PTR [rsp+0x44]
   1400156bf:	mov    BYTE PTR [rbx],0x30
   1400156c2:	jmp    0x1400157b4
   1400156c7:	jne    0x1400156d7
   1400156c9:	cmp    r15b,0x67
   1400156cd:	jne    0x14001570d
   1400156cf:	mov    r12d,0x1
   1400156d5:	jmp    0x14001570d
   1400156d7:	cmp    r12d,r11d
   1400156da:	cmovg  r12d,r11d
   1400156de:	cmp    r12d,0xa3
   1400156e5:	jle    0x14001570d
   1400156e7:	lea    edi,[r12+0x15d]
   1400156ef:	movsxd rcx,edi
   1400156f2:	call   0x14000fc4c
   1400156f7:	mov    QWORD PTR [rbp-0x78],rax
   1400156fb:	test   rax,rax
   1400156fe:	je     0x140015707
   140015700:	mov    rbx,rax
   140015703:	mov    esi,edi
   140015705:	jmp    0x14001570d
   140015707:	mov    r12d,0xa3
   14001570d:	mov    rax,QWORD PTR [r13+0x0]
   140015711:	mov    rcx,QWORD PTR [rip+0x30cd8]        # 0x1400463f0
   140015718:	add    r13,0x8
   14001571c:	movsx  edi,r15b
   140015720:	movsxd rsi,esi
   140015723:	mov    QWORD PTR [rbp-0x60],rax
   140015727:	call   QWORD PTR [rip+0x1fafb]        # 0x140035228
   14001572d:	lea    rcx,[rbp-0x58]
   140015731:	mov    r9d,edi
   140015734:	mov    QWORD PTR [rsp+0x30],rcx
   140015739:	mov    ecx,DWORD PTR [rsp+0x60]
   14001573d:	mov    r8,rsi
   140015740:	mov    DWORD PTR [rsp+0x28],ecx
   140015744:	lea    rcx,[rbp-0x60]
   140015748:	mov    rdx,rbx
   14001574b:	mov    DWORD PTR [rsp+0x20],r12d
   140015750:	call   rax
   140015752:	mov    edi,r14d
   140015755:	and    edi,0x80
   14001575b:	je     0x140015778
   14001575d:	test   r12d,r12d
   140015760:	jne    0x140015778
   140015762:	mov    rcx,QWORD PTR [rip+0x30c9f]        # 0x140046408
   140015769:	call   QWORD PTR [rip+0x1fab9]        # 0x140035228
   14001576f:	lea    rdx,[rbp-0x58]
   140015773:	mov    rcx,rbx
   140015776:	call   rax
   140015778:	cmp    r15b,0x67
   14001577c:	jne    0x140015798
   14001577e:	test   edi,edi
   140015780:	jne    0x140015798
   140015782:	mov    rcx,QWORD PTR [rip+0x30c77]        # 0x140046400
   140015789:	call   QWORD PTR [rip+0x1fa99]        # 0x140035228
   14001578f:	lea    rdx,[rbp-0x58]
   140015793:	mov    rcx,rbx
   140015796:	call   rax
   140015798:	cmp    BYTE PTR [rbx],0x2d
   14001579b:	jne    0x1400157a5
   14001579d:	bts    r14d,0x8
   1400157a2:	inc    rbx
   1400157a5:	mov    rcx,rbx
   1400157a8:	call   0x14001ca40
   1400157ad:	xor    r10d,r10d
   1400157b0:	mov    DWORD PTR [rsp+0x44],eax
   1400157b4:	cmp    DWORD PTR [rsp+0x58],r10d
   1400157b9:	jne    0x140015915
   1400157bf:	test   r14b,0x40
   1400157c3:	je     0x1400157f6
   1400157c5:	bt     r14d,0x8
   1400157ca:	jae    0x1400157d3
   1400157cc:	mov    BYTE PTR [rsp+0x4c],0x2d
   1400157d1:	jmp    0x1400157de
   1400157d3:	test   r14b,0x1
   1400157d7:	je     0x1400157e9
   1400157d9:	mov    BYTE PTR [rsp+0x4c],0x2b
   1400157de:	mov    edi,0x1
   1400157e3:	mov    DWORD PTR [rsp+0x48],edi
   1400157e7:	jmp    0x1400157fa
   1400157e9:	test   r14b,0x2
   1400157ed:	je     0x1400157f6
   1400157ef:	mov    BYTE PTR [rsp+0x4c],0x20
   1400157f4:	jmp    0x1400157de
   1400157f6:	mov    edi,DWORD PTR [rsp+0x48]
   1400157fa:	mov    esi,DWORD PTR [rsp+0x54]
   1400157fe:	mov    r15,QWORD PTR [rsp+0x68]
   140015803:	sub    esi,DWORD PTR [rsp+0x44]
   140015807:	sub    esi,edi
   140015809:	test   r14b,0xc
   14001580d:	jne    0x140015820
   14001580f:	lea    r9,[rsp+0x40]
   140015814:	mov    r8,r15
   140015817:	mov    edx,esi
   140015819:	mov    cl,0x20
   14001581b:	call   0x140015bcc
   140015820:	mov    rax,QWORD PTR [rbp-0x80]
   140015824:	lea    r9,[rsp+0x40]
   140015829:	lea    rcx,[rsp+0x4c]
   14001582e:	mov    r8,r15
   140015831:	mov    edx,edi
   140015833:	mov    QWORD PTR [rsp+0x20],rax
   140015838:	call   0x140015c20
   14001583d:	test   r14b,0x8
   140015841:	je     0x14001585a
   140015843:	test   r14b,0x4
   140015847:	jne    0x14001585a
   140015849:	lea    r9,[rsp+0x40]
   14001584e:	mov    r8,r15
   140015851:	mov    edx,esi
   140015853:	mov    cl,0x30
   140015855:	call   0x140015bcc
   14001585a:	cmp    DWORD PTR [rsp+0x50],0x0
   14001585f:	mov    edi,DWORD PTR [rsp+0x44]
   140015863:	je     0x1400158d5
   140015865:	test   edi,edi
   140015867:	jle    0x1400158d5
   140015869:	mov    r15,rbx
   14001586c:	movzx  r9d,WORD PTR [r15]
   140015870:	lea    rdx,[rbp+0x1d0]
   140015877:	lea    rcx,[rbp-0x70]
   14001587b:	mov    r8d,0x6
   140015881:	dec    edi
   140015883:	lea    r15,[r15+0x2]
   140015887:	call   0x14001d67c
   14001588c:	xor    r10d,r10d
   14001588f:	test   eax,eax
   140015891:	jne    0x1400158c7
   140015893:	mov    edx,DWORD PTR [rbp-0x70]
   140015896:	test   edx,edx
   140015898:	je     0x1400158c7
   14001589a:	mov    rax,QWORD PTR [rbp-0x80]
   14001589e:	mov    r8,QWORD PTR [rsp+0x68]
   1400158a3:	lea    r9,[rsp+0x40]
   1400158a8:	lea    rcx,[rbp+0x1d0]
   1400158af:	mov    QWORD PTR [rsp+0x20],rax
   1400158b4:	call   0x140015c20
   1400158b9:	xor    r10d,r10d
   1400158bc:	test   edi,edi
   1400158be:	jne    0x14001586c
   1400158c0:	mov    r15,QWORD PTR [rsp+0x68]
   1400158c5:	jmp    0x1400158f3
   1400158c7:	mov    r15,QWORD PTR [rsp+0x68]
   1400158cc:	or     eax,0xffffffff
   1400158cf:	mov    DWORD PTR [rsp+0x40],eax
   1400158d3:	jmp    0x1400158f7
   1400158d5:	mov    rax,QWORD PTR [rbp-0x80]
   1400158d9:	lea    r9,[rsp+0x40]
   1400158de:	mov    r8,r15
   1400158e1:	mov    edx,edi
   1400158e3:	mov    rcx,rbx
   1400158e6:	mov    QWORD PTR [rsp+0x20],rax
   1400158eb:	call   0x140015c20
   1400158f0:	xor    r10d,r10d
   1400158f3:	mov    eax,DWORD PTR [rsp+0x40]
   1400158f7:	test   eax,eax
   1400158f9:	js     0x140015915
   1400158fb:	test   r14b,0x4
   1400158ff:	je     0x140015915
   140015901:	lea    r9,[rsp+0x40]
   140015906:	mov    r8,r15
   140015909:	mov    edx,esi
   14001590b:	mov    cl,0x20
   14001590d:	call   0x140015bcc
   140015912:	xor    r10d,r10d
   140015915:	mov    rax,QWORD PTR [rbp-0x78]
   140015919:	test   rax,rax
   14001591c:	je     0x14001592d
   14001591e:	mov    rcx,rax
   140015921:	call   0x14000fb50
   140015926:	xor    r10d,r10d
   140015929:	mov    QWORD PTR [rbp-0x78],r10
   14001592d:	mov    rdi,QWORD PTR [rbp-0x68]
   140015931:	mov    esi,DWORD PTR [rsp+0x40]
   140015935:	mov    edx,DWORD PTR [rsp+0x5c]
   140015939:	mov    r11d,0x200
   14001593f:	lea    r9,[rip+0xfffffffffffea6ba]        # 0x140000000
   140015946:	mov    r15b,BYTE PTR [rdi]
   140015949:	test   r15b,r15b
   14001594c:	je     0x140015b23
   140015952:	or     r8d,0xffffffff
   140015956:	jmp    0x1400152a7
   14001595b:	cmp    r15b,0x49
   14001595f:	je     0x140015995
   140015961:	cmp    r15b,0x68
   140015965:	je     0x14001598f
   140015967:	cmp    r15b,0x6c
   14001596b:	je     0x14001597a
   14001596d:	cmp    r15b,0x77
   140015971:	jne    0x140015946
   140015973:	bts    r14d,0xb
   140015978:	jmp    0x140015946
   14001597a:	cmp    BYTE PTR [rdi],0x6c
   14001597d:	jne    0x140015989
   14001597f:	inc    rdi
   140015982:	bts    r14d,0xc
   140015987:	jmp    0x140015946
   140015989:	or     r14d,0x10
   14001598d:	jmp    0x140015946
   14001598f:	or     r14d,0x20
   140015993:	jmp    0x140015946
   140015995:	mov    al,BYTE PTR [rdi]
   140015997:	bts    r14d,0xf
   14001599c:	cmp    al,0x36
   14001599e:	jne    0x1400159b1
   1400159a0:	cmp    BYTE PTR [rdi+0x1],0x34
   1400159a4:	jne    0x1400159b1
   1400159a6:	add    rdi,0x2
   1400159aa:	bts    r14d,0xf
   1400159af:	jmp    0x140015946
   1400159b1:	cmp    al,0x33
   1400159b3:	jne    0x1400159c6
   1400159b5:	cmp    BYTE PTR [rdi+0x1],0x32
   1400159b9:	jne    0x1400159c6
   1400159bb:	add    rdi,0x2
   1400159bf:	btr    r14d,0xf
   1400159c4:	jmp    0x140015946
   1400159c6:	sub    al,0x58
   1400159c8:	cmp    al,0x20
   1400159ca:	ja     0x1400159e0
   1400159cc:	movabs rcx,0x120821001
   1400159d6:	bt     rcx,rax
   1400159da:	jb     0x140015946
   1400159e0:	mov    DWORD PTR [rsp+0x5c],r10d
   1400159e5:	lea    rdx,[rbp-0x58]
   1400159e9:	movzx  ecx,r15b
   1400159ed:	mov    DWORD PTR [rsp+0x50],r10d
   1400159f2:	call   0x14001d1f4
   1400159f7:	test   eax,eax
   1400159f9:	je     0x140015a1c
   1400159fb:	mov    rdx,QWORD PTR [rsp+0x68]
   140015a00:	lea    r8,[rsp+0x40]
   140015a05:	mov    cl,r15b
   140015a08:	call   0x140015b84
   140015a0d:	mov    r15b,BYTE PTR [rdi]
   140015a10:	inc    rdi
   140015a13:	test   r15b,r15b
   140015a16:	je     0x140015b2c
   140015a1c:	mov    rdx,QWORD PTR [rsp+0x68]
   140015a21:	lea    r8,[rsp+0x40]
   140015a26:	mov    cl,r15b
   140015a29:	call   0x140015b84
   140015a2e:	xor    r10d,r10d
   140015a31:	jmp    0x140015931
   140015a36:	cmp    r15b,0x2a
   140015a3a:	jne    0x140015a55
   140015a3c:	mov    r12d,DWORD PTR [r13+0x0]
   140015a40:	add    r13,0x8
   140015a44:	test   r12d,r12d
   140015a47:	jns    0x140015946
   140015a4d:	mov    r12d,r8d
   140015a50:	jmp    0x140015946
   140015a55:	lea    r12d,[r12+r12*4]
   140015a59:	movsx  eax,r15b
   140015a5d:	lea    r12d,[r12-0x18]
   140015a62:	lea    r12d,[rax+r12*2]
   140015a66:	jmp    0x140015946
   140015a6b:	mov    r12d,r10d
   140015a6e:	jmp    0x140015946
   140015a73:	cmp    r15b,0x2a
   140015a77:	jne    0x140015a95
   140015a79:	mov    eax,DWORD PTR [r13+0x0]
   140015a7d:	add    r13,0x8
   140015a81:	mov    DWORD PTR [rsp+0x54],eax
   140015a85:	test   eax,eax
   140015a87:	jns    0x140015946
   140015a8d:	or     r14d,0x4
   140015a91:	neg    eax
   140015a93:	jmp    0x140015aa6
   140015a95:	mov    eax,DWORD PTR [rsp+0x54]
   140015a99:	lea    ecx,[rax+rax*4]
   140015a9c:	movsx  eax,r15b
   140015aa0:	lea    eax,[rax+rcx*2]
   140015aa3:	add    eax,0xffffffd0
   140015aa6:	mov    DWORD PTR [rsp+0x54],eax
   140015aaa:	jmp    0x140015946
   140015aaf:	cmp    r15b,0x20
   140015ab3:	je     0x140015af6
   140015ab5:	cmp    r15b,0x23
   140015ab9:	je     0x140015aec
   140015abb:	cmp    r15b,0x2b
   140015abf:	je     0x140015ae3
   140015ac1:	cmp    r15b,0x2d
   140015ac5:	je     0x140015ada
   140015ac7:	cmp    r15b,0x30
   140015acb:	jne    0x140015946
   140015ad1:	or     r14d,0x8
   140015ad5:	jmp    0x140015946
   140015ada:	or     r14d,0x4
   140015ade:	jmp    0x140015946
   140015ae3:	or     r14d,0x1
   140015ae7:	jmp    0x140015946
   140015aec:	bts    r14d,0x7
   140015af1:	jmp    0x140015946
   140015af6:	or     r14d,0x2
   140015afa:	jmp    0x140015946
   140015aff:	mov    DWORD PTR [rsp+0x60],r10d
   140015b04:	mov    DWORD PTR [rsp+0x58],r10d
   140015b09:	mov    DWORD PTR [rsp+0x54],r10d
   140015b0e:	mov    DWORD PTR [rsp+0x48],r10d
   140015b13:	mov    r14d,r10d
   140015b16:	mov    r12d,r8d
   140015b19:	mov    DWORD PTR [rsp+0x50],r10d
   140015b1e:	jmp    0x140015946
   140015b23:	test   edx,edx
   140015b25:	je     0x140015b44
   140015b27:	cmp    edx,0x7
   140015b2a:	je     0x140015b44
   140015b2c:	call   0x14000b9f0
   140015b31:	mov    DWORD PTR [rax],0x16
   140015b37:	call   0x14000b8b8
   140015b3c:	or     eax,0xffffffff
   140015b3f:	xor    r10d,r10d
   140015b42:	jmp    0x140015b46
   140015b44:	mov    eax,esi
   140015b46:	cmp    BYTE PTR [rbp-0x40],r10b
   140015b4a:	je     0x140015b57
   140015b4c:	mov    rcx,QWORD PTR [rbp-0x48]
   140015b50:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140015b57:	mov    rcx,QWORD PTR [rbp+0x1d8]
   140015b5e:	xor    rcx,rsp
   140015b61:	call   0x1400097d0
   140015b66:	mov    rbx,QWORD PTR [rsp+0x330]
   140015b6e:	add    rsp,0x2e0
   140015b75:	pop    r15
   140015b77:	pop    r14
   140015b79:	pop    r13
   140015b7b:	pop    r12
   140015b7d:	pop    rdi
   140015b7e:	pop    rsi
   140015b7f:	pop    rbp
   140015b80:	ret    
   140015b81:	int3   
   140015b82:	int3   
   140015b83:	int3   
   140015b84:	rex push rbx
   140015b86:	sub    rsp,0x20
   140015b8a:	test   BYTE PTR [rdx+0x18],0x40
   140015b8e:	mov    rbx,r8
   140015b91:	je     0x140015b9f
   140015b93:	cmp    QWORD PTR [rdx+0x10],0x0
   140015b98:	jne    0x140015b9f
   140015b9a:	inc    DWORD PTR [r8]
   140015b9d:	jmp    0x140015bc4
   140015b9f:	dec    DWORD PTR [rdx+0x8]
   140015ba2:	js     0x140015bb1
   140015ba4:	mov    rax,QWORD PTR [rdx]
   140015ba7:	mov    BYTE PTR [rax],cl
   140015ba9:	inc    QWORD PTR [rdx]
   140015bac:	movzx  eax,cl
   140015baf:	jmp    0x140015bb9
   140015bb1:	movsx  ecx,cl
   140015bb4:	call   0x1400123d0
   140015bb9:	cmp    eax,0xffffffff
   140015bbc:	jne    0x140015bc2
   140015bbe:	or     DWORD PTR [rbx],eax
   140015bc0:	jmp    0x140015bc4
   140015bc2:	inc    DWORD PTR [rbx]
   140015bc4:	add    rsp,0x20
   140015bc8:	pop    rbx
   140015bc9:	ret    
   140015bca:	int3   
   140015bcb:	int3   
   140015bcc:	test   edx,edx
   140015bce:	jle    0x140015c1c
   140015bd0:	mov    QWORD PTR [rsp+0x8],rbx
   140015bd5:	mov    QWORD PTR [rsp+0x10],rbp
   140015bda:	mov    QWORD PTR [rsp+0x18],rsi
   140015bdf:	push   rdi
   140015be0:	sub    rsp,0x20
   140015be4:	mov    rdi,r9
   140015be7:	mov    rsi,r8
   140015bea:	mov    ebx,edx
   140015bec:	mov    bpl,cl
   140015bef:	mov    r8,rdi
   140015bf2:	mov    rdx,rsi
   140015bf5:	mov    cl,bpl
   140015bf8:	dec    ebx
   140015bfa:	call   0x140015b84
   140015bff:	cmp    DWORD PTR [rdi],0xffffffff
   140015c02:	je     0x140015c08
   140015c04:	test   ebx,ebx
   140015c06:	jg     0x140015bef
   140015c08:	mov    rbx,QWORD PTR [rsp+0x30]
   140015c0d:	mov    rbp,QWORD PTR [rsp+0x38]
   140015c12:	mov    rsi,QWORD PTR [rsp+0x40]
   140015c17:	add    rsp,0x20
   140015c1b:	pop    rdi
   140015c1c:	ret    
   140015c1d:	int3   
   140015c1e:	int3   
   140015c1f:	int3   
   140015c20:	mov    QWORD PTR [rsp+0x8],rbx
   140015c25:	mov    QWORD PTR [rsp+0x10],rbp
   140015c2a:	mov    QWORD PTR [rsp+0x18],rsi
   140015c2f:	push   rdi
   140015c30:	push   r14
   140015c32:	push   r15
   140015c34:	sub    rsp,0x20
   140015c38:	test   BYTE PTR [r8+0x18],0x40
   140015c3d:	mov    rbx,QWORD PTR [rsp+0x60]
   140015c42:	mov    rdi,r9
   140015c45:	mov    r15d,DWORD PTR [rbx]
   140015c48:	mov    rbp,r8
   140015c4b:	mov    esi,edx
   140015c4d:	mov    r14,rcx
   140015c50:	je     0x140015c5e
   140015c52:	cmp    QWORD PTR [r8+0x10],0x0
   140015c57:	jne    0x140015c5e
   140015c59:	add    DWORD PTR [r9],edx
   140015c5c:	jmp    0x140015c9b
   140015c5e:	and    DWORD PTR [rbx],0x0
   140015c61:	test   edx,edx
   140015c63:	jle    0x140015c98
   140015c65:	mov    cl,BYTE PTR [r14]
   140015c68:	mov    r8,rdi
   140015c6b:	mov    rdx,rbp
   140015c6e:	dec    esi
   140015c70:	call   0x140015b84
   140015c75:	inc    r14
   140015c78:	cmp    DWORD PTR [rdi],0xffffffff
   140015c7b:	jne    0x140015c8f
   140015c7d:	cmp    DWORD PTR [rbx],0x2a
   140015c80:	jne    0x140015c93
   140015c82:	mov    r8,rdi
   140015c85:	mov    rdx,rbp
   140015c88:	mov    cl,0x3f
   140015c8a:	call   0x140015b84
   140015c8f:	test   esi,esi
   140015c91:	jg     0x140015c65
   140015c93:	cmp    DWORD PTR [rbx],0x0
   140015c96:	jne    0x140015c9b
   140015c98:	mov    DWORD PTR [rbx],r15d
   140015c9b:	mov    rbx,QWORD PTR [rsp+0x40]
   140015ca0:	mov    rbp,QWORD PTR [rsp+0x48]
   140015ca5:	mov    rsi,QWORD PTR [rsp+0x50]
   140015caa:	add    rsp,0x20
   140015cae:	pop    r15
   140015cb0:	pop    r14
   140015cb2:	pop    rdi
   140015cb3:	ret    
   140015cb4:	mov    QWORD PTR [rsp+0x18],rbx
   140015cb9:	push   rbp
   140015cba:	push   rsi
   140015cbb:	push   rdi
   140015cbc:	push   r12
   140015cbe:	push   r13
   140015cc0:	push   r14
   140015cc2:	push   r15
   140015cc4:	lea    rbp,[rsp-0xb60]
   140015ccc:	sub    rsp,0xc60
   140015cd3:	mov    rax,QWORD PTR [rip+0x2f596]        # 0x140045270
   140015cda:	xor    rax,rsp
   140015cdd:	mov    QWORD PTR [rbp+0xb58],rax
   140015ce4:	xor    esi,esi
   140015ce6:	mov    rdi,rcx
   140015ce9:	mov    QWORD PTR [rbp-0x68],rcx
   140015ced:	mov    r12,rdx
   140015cf0:	mov    QWORD PTR [rbp-0x38],rdx
   140015cf4:	lea    rcx,[rbp-0x30]
   140015cf8:	mov    rdx,r8
   140015cfb:	mov    r13,r9
   140015cfe:	mov    DWORD PTR [rbp-0x70],esi
   140015d01:	mov    r15d,esi
   140015d04:	mov    DWORD PTR [rsp+0x50],esi
   140015d08:	mov    DWORD PTR [rbp-0x74],esi
   140015d0b:	mov    DWORD PTR [rsp+0x44],esi
   140015d0f:	mov    ebx,esi
   140015d11:	mov    DWORD PTR [rsp+0x68],esi
   140015d15:	call   0x140007ff0
   140015d1a:	mov    QWORD PTR [rbp-0x80],rsi
   140015d1e:	or     r14d,0xffffffff
   140015d22:	mov    esi,r14d
   140015d25:	call   0x14000b9f0
   140015d2a:	mov    QWORD PTR [rbp-0x58],rax
   140015d2e:	test   rdi,rdi
   140015d31:	je     0x140015db8
   140015d37:	test   BYTE PTR [rdi+0x18],0x40
   140015d3b:	jne    0x140015dcd
   140015d41:	mov    rcx,rdi
   140015d44:	call   0x14001bc7c
   140015d49:	lea    r8,[rip+0x306c0]        # 0x140046410
   140015d50:	movsxd r10,eax
   140015d53:	lea    ecx,[r10+0x2]
   140015d57:	cmp    ecx,0x1
   140015d5a:	jbe    0x140015d7e
   140015d5c:	mov    rdx,r10
   140015d5f:	mov    rcx,r10
   140015d62:	and    edx,0x1f
   140015d65:	sar    rcx,0x5
   140015d69:	imul   r9,rdx,0x58
   140015d6d:	lea    rdx,[rip+0xfffffffffffea28c]        # 0x140000000
   140015d74:	add    r9,QWORD PTR [rdx+rcx*8+0x48840]
   140015d7c:	jmp    0x140015d88
   140015d7e:	mov    r9,r8
   140015d81:	lea    rdx,[rip+0xfffffffffffea278]        # 0x140000000
   140015d88:	test   BYTE PTR [r9+0x38],0x7f
   140015d8d:	jne    0x140015db8
   140015d8f:	lea    eax,[r10+0x2]
   140015d93:	cmp    eax,0x1
   140015d96:	jbe    0x140015db1
   140015d98:	mov    rcx,r10
   140015d9b:	mov    rax,r10
   140015d9e:	and    ecx,0x1f
   140015da1:	sar    rax,0x5
   140015da5:	imul   r8,rcx,0x58
   140015da9:	add    r8,QWORD PTR [rdx+rax*8+0x48840]
   140015db1:	test   BYTE PTR [r8+0x38],0x80
   140015db6:	je     0x140015dcd
   140015db8:	call   0x14000b9f0
   140015dbd:	mov    DWORD PTR [rax],0x16
   140015dc3:	call   0x14000b8b8
   140015dc8:	jmp    0x1400160dc
   140015dcd:	xor    edi,edi
   140015dcf:	test   r12,r12
   140015dd2:	jne    0x140015de9
   140015dd4:	call   0x14000b9f0
   140015dd9:	mov    DWORD PTR [rax],0x16
   140015ddf:	call   0x14000b8b8
   140015de4:	jmp    0x140016d49
   140015de9:	mov    ecx,edi
   140015deb:	mov    r10d,edi
   140015dee:	mov    DWORD PTR [rsp+0x4c],edi
   140015df2:	mov    DWORD PTR [rsp+0x7c],ecx
   140015df6:	cmp    ecx,0x1
   140015df9:	jne    0x140015e03
   140015dfb:	test   esi,esi
   140015dfd:	je     0x140016d46
   140015e03:	mov    rax,QWORD PTR [rbp-0x38]
   140015e07:	mov    edx,r14d
   140015e0a:	mov    r9,r12
   140015e0d:	mov    DWORD PTR [rsp+0x54],edi
   140015e11:	mov    r12d,r14d
   140015e14:	mov    DWORD PTR [rbp-0x60],r14d
   140015e18:	mov    esi,r14d
   140015e1b:	mov    DWORD PTR [rsp+0x78],r14d
   140015e20:	mov    r14b,BYTE PTR [rax]
   140015e23:	mov    r11d,edi
   140015e26:	mov    QWORD PTR [rbp-0x50],rdi
   140015e2a:	mov    DWORD PTR [rsp+0x40],edx
   140015e2e:	mov    DWORD PTR [rsp+0x5c],edi
   140015e32:	mov    DWORD PTR [rsp+0x48],edi
   140015e36:	test   r14b,r14b
   140015e39:	je     0x140016d16
   140015e3f:	movsxd r8,ecx
   140015e42:	mov    QWORD PTR [rsp+0x70],r8
   140015e47:	inc    r9
   140015e4a:	mov    QWORD PTR [rsp+0x60],r9
   140015e4f:	test   r10d,r10d
   140015e52:	js     0x140016cb2
   140015e58:	lea    eax,[r14-0x20]
   140015e5c:	cmp    al,0x58
   140015e5e:	ja     0x140015e7b
   140015e60:	lea    rcx,[rip+0xfffffffffffea199]        # 0x140000000
   140015e67:	movsx  rax,r14b
   140015e6b:	movzx  ecx,BYTE PTR [rax+rcx*1+0x38820]
   140015e73:	and    ecx,0xf
   140015e76:	xor    r10d,r10d
   140015e79:	jmp    0x140015e81
   140015e7b:	xor    r10d,r10d
   140015e7e:	mov    ecx,r10d
   140015e81:	movsxd rax,ecx
   140015e84:	lea    rcx,[rax+rax*8]
   140015e88:	movsxd rax,r11d
   140015e8b:	mov    r11d,0x1
   140015e91:	add    rcx,rax
   140015e94:	lea    rax,[rip+0xfffffffffffea165]        # 0x140000000
   140015e9b:	movzx  eax,BYTE PTR [rcx+rax*1+0x38840]
   140015ea3:	shr    eax,0x4
   140015ea6:	mov    DWORD PTR [rbp-0x78],eax
   140015ea9:	cmp    eax,r11d
   140015eac:	jne    0x140015f8f
   140015eb2:	cmp    BYTE PTR [r9],0x25
   140015eb6:	je     0x140015f98
   140015ebc:	cmp    esi,0xffffffff
   140015ebf:	jne    0x140015f1f
   140015ec1:	lea    r8d,[r11+0x9]
   140015ec5:	lea    rdx,[rbp-0x80]
   140015ec9:	mov    rcx,r9
   140015ecc:	call   0x140023bd0
   140015ed1:	xor    r10d,r10d
   140015ed4:	test   eax,eax
   140015ed6:	jle    0x140015f07
   140015ed8:	mov    rax,QWORD PTR [rbp-0x80]
   140015edc:	cmp    BYTE PTR [rax],0x24
   140015edf:	jne    0x140015f07
   140015ee1:	cmp    QWORD PTR [rsp+0x70],r10
   140015ee6:	jne    0x140015efc
   140015ee8:	lea    rcx,[rbp+0x1f0]
   140015eef:	xor    edx,edx
   140015ef1:	mov    r8d,0x960
   140015ef7:	call   0x140009800
   140015efc:	mov    esi,0x1
   140015f01:	mov    DWORD PTR [rsp+0x78],esi
   140015f05:	jmp    0x140015f24
   140015f07:	mov    r8,QWORD PTR [rsp+0x70]
   140015f0c:	mov    r9,QWORD PTR [rsp+0x60]
   140015f11:	mov    esi,r10d
   140015f14:	mov    DWORD PTR [rsp+0x78],r10d
   140015f19:	mov    r11d,0x1
   140015f1f:	cmp    esi,r11d
   140015f22:	jne    0x140015f98
   140015f24:	mov    rcx,QWORD PTR [rsp+0x60]
   140015f29:	lea    rdx,[rbp-0x80]
   140015f2d:	mov    r8d,0xa
   140015f33:	call   0x140023bd0
   140015f38:	mov    rcx,QWORD PTR [rbp-0x80]
   140015f3c:	mov    r8,QWORD PTR [rsp+0x70]
   140015f41:	mov    r12d,eax
   140015f44:	mov    r11d,0x1
   140015f4a:	lea    r9,[rcx+0x1]
   140015f4e:	sub    r12d,r11d
   140015f51:	xor    r10d,r10d
   140015f54:	mov    QWORD PTR [rsp+0x60],r9
   140015f59:	mov    DWORD PTR [rbp-0x60],r12d
   140015f5d:	test   r8,r8
   140015f60:	jne    0x140015f98
   140015f62:	test   r12d,r12d
   140015f65:	js     0x1400160c8
   140015f6b:	cmp    BYTE PTR [rcx],0x24
   140015f6e:	jne    0x1400160c8
   140015f74:	cmp    r12d,0x64
   140015f78:	jge    0x1400160c8
   140015f7e:	mov    eax,DWORD PTR [rsp+0x40]
   140015f82:	cmp    r12d,eax
   140015f85:	cmovg  eax,r12d
   140015f89:	mov    DWORD PTR [rsp+0x40],eax
   140015f8d:	jmp    0x140015f98
   140015f8f:	cmp    eax,0x8
   140015f92:	je     0x1400160c8
   140015f98:	mov    ecx,DWORD PTR [rbp-0x78]
   140015f9b:	test   ecx,ecx
   140015f9d:	je     0x140016c22
   140015fa3:	dec    ecx
   140015fa5:	je     0x140016bfe
   140015fab:	dec    ecx
   140015fad:	je     0x140016bab
   140015fb3:	dec    ecx
   140015fb5:	je     0x140016b15
   140015fbb:	dec    ecx
   140015fbd:	je     0x140016b08
   140015fc3:	dec    ecx
   140015fc5:	je     0x140016a15
   140015fcb:	dec    ecx
   140015fcd:	je     0x140016962
   140015fd3:	dec    ecx
   140015fd5:	jne    0x140016c95
   140015fdb:	movsx  ecx,r14b
   140015fdf:	cmp    ecx,0x64
   140015fe2:	jg     0x140016263
   140015fe8:	je     0x1400163fa
   140015fee:	cmp    ecx,0x41
   140015ff1:	je     0x140016205
   140015ff7:	cmp    ecx,0x43
   140015ffa:	je     0x140016129
   140016000:	lea    eax,[rcx-0x45]
   140016003:	test   eax,0xfffffffd
   140016008:	je     0x140016205
   14001600e:	cmp    ecx,0x53
   140016011:	je     0x1400160f9
   140016017:	cmp    ecx,0x58
   14001601a:	je     0x140016357
   140016020:	cmp    ecx,0x5a
   140016023:	je     0x14001603c
   140016025:	cmp    ecx,0x61
   140016028:	je     0x14001620d
   14001602e:	cmp    ecx,0x63
   140016031:	je     0x140016137
   140016037:	jmp    0x1400167d3
   14001603c:	test   esi,esi
   14001603e:	jne    0x14001604a
   140016040:	mov    rax,QWORD PTR [r13+0x0]
   140016044:	add    r13,0x8
   140016048:	jmp    0x14001606b
   14001604a:	cmp    r12d,0x63
   14001604e:	ja     0x1400160c8
   140016050:	movsxd rax,r12d
   140016053:	lea    rcx,[rax+rax*2]
   140016057:	test   r8,r8
   14001605a:	je     0x1400162c5
   140016060:	mov    rax,QWORD PTR [rbp+rcx*8+0x1f8]
   140016068:	mov    rax,QWORD PTR [rax]
   14001606b:	test   rax,rax
   14001606e:	je     0x1400160ed
   140016070:	mov    rbx,QWORD PTR [rax+0x8]
   140016074:	test   rbx,rbx
   140016077:	je     0x1400160ed
   140016079:	movsx  eax,WORD PTR [rax]
   14001607c:	bt     r15d,0xb
   140016081:	jae    0x1400160e3
   140016083:	cdq    
   140016084:	mov    DWORD PTR [rsp+0x68],r11d
   140016089:	sub    eax,edx
   14001608b:	sar    eax,1
   14001608d:	jmp    0x1400167cf
   140016092:	mov    DWORD PTR [rax],0x3
   140016098:	mov    BYTE PTR [rbp+rcx*8+0x200],r14b
   1400160a0:	mov    DWORD PTR [rbp+rcx*8+0x204],r15d
   1400160a8:	jmp    0x1400167d3
   1400160ad:	mov    edx,0x3
   1400160b2:	mov    r9d,r15d
   1400160b5:	mov    r8b,r14b
   1400160b8:	mov    rcx,rax
   1400160bb:	call   0x140016d88
   1400160c0:	test   eax,eax
   1400160c2:	jne    0x1400167d3
   1400160c8:	call   0x14000b9f0
   1400160cd:	mov    DWORD PTR [rax],0x16
   1400160d3:	call   0x14000b8b8
   1400160d8:	or     r14d,0xffffffff
   1400160dc:	xor    edi,edi
   1400160de:	jmp    0x140016d49
   1400160e3:	mov    DWORD PTR [rsp+0x68],r10d
   1400160e8:	jmp    0x1400167cf
   1400160ed:	mov    rbx,QWORD PTR [rip+0x2f6bc]        # 0x1400457b0
   1400160f4:	jmp    0x1400167c7
   1400160f9:	test   r15d,0x830
   140016100:	jne    0x140016107
   140016102:	bts    r15d,0xb
   140016107:	cmp    edi,0xffffffff
   14001610a:	mov    edx,edi
   14001610c:	mov    eax,0x7fffffff
   140016111:	cmove  edx,eax
   140016114:	test   esi,esi
   140016116:	jne    0x1400162af
   14001611c:	mov    rbx,QWORD PTR [r13+0x0]
   140016120:	add    r13,0x8
   140016124:	jmp    0x1400162e9
   140016129:	test   r15d,0x830
   140016130:	jne    0x140016137
   140016132:	bts    r15d,0xb
   140016137:	test   r15d,0x810
   14001613e:	je     0x1400161b8
   140016140:	test   esi,esi
   140016142:	jne    0x14001614f
   140016144:	movzx  r9d,WORD PTR [r13+0x0]
   140016149:	add    r13,0x8
   14001614d:	jmp    0x140016196
   14001614f:	cmp    r12d,0x63
   140016153:	ja     0x1400160c8
   140016159:	movsxd rax,r12d
   14001615c:	lea    rcx,[rax+rax*2]
   140016160:	test   r8,r8
   140016163:	jne    0x14001618a
   140016165:	lea    rax,[rbp+0x1f0]
   14001616c:	lea    rax,[rax+rcx*8]
   140016170:	cmp    DWORD PTR [rax],r10d
   140016173:	jne    0x140016180
   140016175:	mov    DWORD PTR [rax],0x2
   14001617b:	jmp    0x140016098
   140016180:	mov    edx,0x2
   140016185:	jmp    0x1400160b2
   14001618a:	mov    rax,QWORD PTR [rbp+rcx*8+0x1f8]
   140016192:	movzx  r9d,WORD PTR [rax]
   140016196:	lea    rdx,[rbp-0x10]
   14001619a:	lea    rcx,[rsp+0x54]
   14001619f:	mov    r8d,0x200
   1400161a5:	call   0x14001d67c
   1400161aa:	test   eax,eax
   1400161ac:	je     0x1400161f4
   1400161ae:	mov    DWORD PTR [rsp+0x44],0x1
   1400161b6:	jmp    0x1400161f4
   1400161b8:	test   esi,esi
   1400161ba:	jne    0x1400161c7
   1400161bc:	movzx  eax,WORD PTR [r13+0x0]
   1400161c1:	add    r13,0x8
   1400161c5:	jmp    0x1400161ec
   1400161c7:	cmp    r12d,0x63
   1400161cb:	ja     0x1400160c8
   1400161d1:	movsxd rax,r12d
   1400161d4:	lea    rcx,[rax+rax*2]
   1400161d8:	test   r8,r8
   1400161db:	je     0x1400164e9
   1400161e1:	mov    rax,QWORD PTR [rbp+rcx*8+0x1f8]
   1400161e9:	movzx  eax,WORD PTR [rax]
   1400161ec:	mov    BYTE PTR [rbp-0x10],al
   1400161ef:	mov    DWORD PTR [rsp+0x54],r11d
   1400161f4:	lea    rbx,[rbp-0x10]
   1400161f8:	jmp    0x1400167d3
   1400161fd:	mov    DWORD PTR [rax],r11d
   140016200:	jmp    0x140016098
   140016205:	mov    DWORD PTR [rbp-0x74],r11d
   140016209:	add    r14b,0x20
   14001620d:	or     r15d,0x40
   140016211:	cmp    esi,r11d
   140016214:	jne    0x14001669f
   14001621a:	test   r8,r8
   14001621d:	jne    0x14001669f
   140016223:	cmp    r12d,0x63
   140016227:	ja     0x1400160c8
   14001622d:	movsxd rax,r12d
   140016230:	lea    rcx,[rax+rax*2]
   140016234:	lea    rax,[rbp+0x1f0]
   14001623b:	lea    rax,[rax+rcx*8]
   14001623f:	cmp    DWORD PTR [rax],r10d
   140016242:	jne    0x14001667a
   140016248:	mov    DWORD PTR [rax],0x8
   14001624e:	mov    BYTE PTR [rbp+rcx*8+0x200],r14b
   140016256:	mov    DWORD PTR [rbp+rcx*8+0x204],r15d
   14001625e:	jmp    0x140016c95
   140016263:	cmp    ecx,0x67
   140016266:	jle    0x14001620d
   140016268:	cmp    ecx,0x69
   14001626b:	je     0x1400163fa
   140016271:	cmp    ecx,0x6e
   140016274:	je     0x14001639b
   14001627a:	cmp    ecx,0x6f
   14001627d:	je     0x140016386
   140016283:	cmp    ecx,0x70
   140016286:	je     0x140016349
   14001628c:	cmp    ecx,0x73
   14001628f:	je     0x140016107
   140016295:	cmp    ecx,0x75
   140016298:	je     0x1400163fe
   14001629e:	cmp    ecx,0x78
   1400162a1:	jne    0x1400167d3
   1400162a7:	lea    eax,[rcx-0x51]
   1400162aa:	jmp    0x14001635c
   1400162af:	cmp    r12d,0x63
   1400162b3:	ja     0x1400160c8
   1400162b9:	movsxd rax,r12d
   1400162bc:	lea    rcx,[rax+rax*2]
   1400162c0:	test   r8,r8
   1400162c3:	jne    0x1400162de
   1400162c5:	lea    rax,[rbp+0x1f0]
   1400162cc:	lea    rax,[rax+rcx*8]
   1400162d0:	cmp    DWORD PTR [rax],r10d
   1400162d3:	je     0x140016092
   1400162d9:	jmp    0x1400160ad
   1400162de:	mov    rbx,QWORD PTR [rbp+rcx*8+0x1f8]
   1400162e6:	mov    rbx,QWORD PTR [rbx]
   1400162e9:	test   r15d,0x810
   1400162f0:	je     0x140016323
   1400162f2:	test   rbx,rbx
   1400162f5:	mov    DWORD PTR [rsp+0x68],r11d
   1400162fa:	cmove  rbx,QWORD PTR [rip+0x2f4b6]        # 0x1400457b8
   140016302:	mov    rax,rbx
   140016305:	jmp    0x140016314
   140016307:	sub    edx,r11d
   14001630a:	cmp    WORD PTR [rax],r10w
   14001630e:	je     0x140016318
   140016310:	add    rax,0x2
   140016314:	test   edx,edx
   140016316:	jne    0x140016307
   140016318:	sub    rax,rbx
   14001631b:	sar    rax,1
   14001631e:	jmp    0x1400167cf
   140016323:	test   rbx,rbx
   140016326:	cmove  rbx,QWORD PTR [rip+0x2f482]        # 0x1400457b0
   14001632e:	mov    rax,rbx
   140016331:	jmp    0x14001633e
   140016333:	sub    edx,r11d
   140016336:	cmp    BYTE PTR [rax],r10b
   140016339:	je     0x140016342
   14001633b:	add    rax,r11
   14001633e:	test   edx,edx
   140016340:	jne    0x140016333
   140016342:	sub    eax,ebx
   140016344:	jmp    0x1400167cf
   140016349:	mov    edi,0x10
   14001634e:	bts    r15d,0xf
   140016353:	mov    DWORD PTR [rsp+0x48],edi
   140016357:	mov    eax,0x7
   14001635c:	mov    DWORD PTR [rbp-0x70],eax
   14001635f:	mov    r9d,0x10
   140016365:	test   r15b,r15b
   140016368:	jns    0x140016404
   14001636e:	lea    edx,[r9-0xe]
   140016372:	add    al,0x51
   140016374:	mov    BYTE PTR [rsp+0x58],0x30
   140016379:	mov    DWORD PTR [rsp+0x50],edx
   14001637d:	mov    BYTE PTR [rsp+0x59],al
   140016381:	jmp    0x140016408
   140016386:	mov    r9d,0x8
   14001638c:	test   r15b,r15b
   14001638f:	jns    0x140016404
   140016391:	mov    eax,0x200
   140016396:	or     r15d,eax
   140016399:	jmp    0x140016404
   14001639b:	test   esi,esi
   14001639d:	jne    0x1400163a9
   14001639f:	mov    rdi,QWORD PTR [r13+0x0]
   1400163a3:	add    r13,0x8
   1400163a7:	jmp    0x1400163ce
   1400163a9:	cmp    r12d,0x63
   1400163ad:	ja     0x1400160c8
   1400163b3:	movsxd rax,r12d
   1400163b6:	lea    rcx,[rax+rax*2]
   1400163ba:	test   r8,r8
   1400163bd:	je     0x1400162c5
   1400163c3:	mov    rax,QWORD PTR [rbp+rcx*8+0x1f8]
   1400163cb:	mov    rdi,QWORD PTR [rax]
   1400163ce:	call   0x140007888
   1400163d3:	test   eax,eax
   1400163d5:	je     0x1400160c8
   1400163db:	mov    eax,DWORD PTR [rsp+0x4c]
   1400163df:	test   r15b,0x20
   1400163e3:	je     0x1400163ea
   1400163e5:	mov    WORD PTR [rdi],ax
   1400163e8:	jmp    0x1400163ec
   1400163ea:	mov    DWORD PTR [rdi],eax
   1400163ec:	mov    eax,0x1
   1400163f1:	mov    DWORD PTR [rsp+0x44],eax
   1400163f5:	jmp    0x1400167d7
   1400163fa:	or     r15d,0x40
   1400163fe:	mov    r9d,0xa
   140016404:	mov    edx,DWORD PTR [rsp+0x50]
   140016408:	bt     r15d,0xf
   14001640d:	jae    0x14001645b
   14001640f:	test   esi,esi
   140016411:	jne    0x140016420
   140016413:	mov    r8,QWORD PTR [r13+0x0]
   140016417:	add    r13,0x8
   14001641b:	jmp    0x1400165ba
   140016420:	cmp    r12d,0x63
   140016424:	ja     0x1400160c8
   14001642a:	movsxd rax,r12d
   14001642d:	lea    rcx,[rax+rax*2]
   140016431:	test   r8,r8
   140016434:	jne    0x1400164a1
   140016436:	lea    rax,[rbp+0x1f0]
   14001643d:	lea    rax,[rax+rcx*8]
   140016441:	cmp    DWORD PTR [rax],r10d
   140016444:	jne    0x140016451
   140016446:	mov    DWORD PTR [rax],0x4
   14001644c:	jmp    0x140016098
   140016451:	mov    edx,0x4
   140016456:	jmp    0x1400160b2
   14001645b:	bt     r15d,0xc
   140016460:	jae    0x1400164b1
   140016462:	test   esi,esi
   140016464:	je     0x140016413
   140016466:	cmp    r12d,0x63
   14001646a:	ja     0x1400160c8
   140016470:	movsxd rax,r12d
   140016473:	lea    rcx,[rax+rax*2]
   140016477:	test   r8,r8
   14001647a:	jne    0x1400164a1
   14001647c:	lea    rax,[rbp+0x1f0]
   140016483:	lea    rax,[rax+rcx*8]
   140016487:	cmp    DWORD PTR [rax],r10d
   14001648a:	jne    0x140016497
   14001648c:	mov    DWORD PTR [rax],0x5
   140016492:	jmp    0x140016098
   140016497:	mov    edx,0x5
   14001649c:	jmp    0x1400160b2
   1400164a1:	mov    rax,QWORD PTR [rbp+rcx*8+0x1f8]
   1400164a9:	mov    r8,QWORD PTR [rax]
   1400164ac:	jmp    0x1400165ba
   1400164b1:	test   r15b,0x20
   1400164b5:	je     0x14001654c
   1400164bb:	test   r15b,0x40
   1400164bf:	je     0x140016516
   1400164c1:	test   esi,esi
   1400164c3:	jne    0x1400164d3
   1400164c5:	movsx  r8,WORD PTR [r13+0x0]
   1400164ca:	add    r13,0x8
   1400164ce:	jmp    0x1400165ba
   1400164d3:	cmp    r12d,0x63
   1400164d7:	ja     0x1400160c8
   1400164dd:	movsxd rax,r12d
   1400164e0:	lea    rcx,[rax+rax*2]
   1400164e4:	test   r8,r8
   1400164e7:	jne    0x140016505
   1400164e9:	lea    rax,[rbp+0x1f0]
   1400164f0:	lea    rax,[rax+rcx*8]
   1400164f4:	cmp    DWORD PTR [rax],r10d
   1400164f7:	je     0x1400161fd
   1400164fd:	mov    edx,r11d
   140016500:	jmp    0x1400160b2
   140016505:	mov    rax,QWORD PTR [rbp+rcx*8+0x1f8]
   14001650d:	movsx  r8,WORD PTR [rax]
   140016511:	jmp    0x1400165ba
   140016516:	test   esi,esi
   140016518:	jne    0x140016528
   14001651a:	movzx  r8d,WORD PTR [r13+0x0]
   14001651f:	add    r13,0x8
   140016523:	jmp    0x1400165ba
   140016528:	cmp    r12d,0x63
   14001652c:	ja     0x1400160c8
   140016532:	movsxd rax,r12d
   140016535:	lea    rcx,[rax+rax*2]
   140016539:	test   r8,r8
   14001653c:	je     0x1400164e9
   14001653e:	mov    rax,QWORD PTR [rbp+rcx*8+0x1f8]
   140016546:	movzx  r8d,WORD PTR [rax]
   14001654a:	jmp    0x1400165ba
   14001654c:	test   r15b,0x40
   140016550:	je     0x140016587
   140016552:	test   esi,esi
   140016554:	jne    0x140016560
   140016556:	movsxd r8,DWORD PTR [r13+0x0]
   14001655a:	add    r13,0x8
   14001655e:	jmp    0x1400165ba
   140016560:	cmp    r12d,0x63
   140016564:	ja     0x1400160c8
   14001656a:	movsxd rax,r12d
   14001656d:	lea    rcx,[rax+rax*2]
   140016571:	test   r8,r8
   140016574:	je     0x1400164e9
   14001657a:	mov    rax,QWORD PTR [rbp+rcx*8+0x1f8]
   140016582:	movsxd r8,DWORD PTR [rax]
   140016585:	jmp    0x1400165ba
   140016587:	test   esi,esi
   140016589:	jne    0x140016595
   14001658b:	mov    r8d,DWORD PTR [r13+0x0]
   14001658f:	add    r13,0x8
   140016593:	jmp    0x1400165ba
   140016595:	cmp    r12d,0x63
   140016599:	ja     0x1400160c8
   14001659f:	movsxd rax,r12d
   1400165a2:	lea    rcx,[rax+rax*2]
   1400165a6:	test   r8,r8
   1400165a9:	je     0x1400164e9
   1400165af:	mov    rax,QWORD PTR [rbp+rcx*8+0x1f8]
   1400165b7:	mov    r8d,DWORD PTR [rax]
   1400165ba:	test   r15b,0x40
   1400165be:	je     0x1400165cd
   1400165c0:	test   r8,r8
   1400165c3:	jns    0x1400165cd
   1400165c5:	neg    r8
   1400165c8:	bts    r15d,0x8
   1400165cd:	bt     r15d,0xf
   1400165d2:	jb     0x1400165de
   1400165d4:	bt     r15d,0xc
   1400165d9:	jb     0x1400165de
   1400165db:	mov    r8d,r8d
   1400165de:	mov    esi,0x200
   1400165e3:	test   edi,edi
   1400165e5:	jns    0x1400165ec
   1400165e7:	mov    edi,r11d
   1400165ea:	jmp    0x1400165f5
   1400165ec:	and    r15d,0xfffffff7
   1400165f0:	cmp    edi,esi
   1400165f2:	cmovg  edi,esi
   1400165f5:	mov    r12d,DWORD PTR [rbp-0x70]
   1400165f9:	mov    rax,r8
   1400165fc:	lea    rbx,[rbp+0x1ef]
   140016603:	neg    rax
   140016606:	sbb    ecx,ecx
   140016608:	and    ecx,edx
   14001660a:	mov    DWORD PTR [rsp+0x50],ecx
   14001660e:	mov    ecx,edi
   140016610:	sub    edi,r11d
   140016613:	test   ecx,ecx
   140016615:	jg     0x14001661c
   140016617:	test   r8,r8
   14001661a:	je     0x14001663c
   14001661c:	xor    edx,edx
   14001661e:	mov    rax,r8
   140016621:	movsxd rcx,r9d
   140016624:	div    rcx
   140016627:	mov    r8,rax
   14001662a:	lea    eax,[rdx+0x30]
   14001662d:	cmp    eax,0x39
   140016630:	jle    0x140016635
   140016632:	add    eax,r12d
   140016635:	mov    BYTE PTR [rbx],al
   140016637:	sub    rbx,r11
   14001663a:	jmp    0x14001660e
   14001663c:	mov    r12d,DWORD PTR [rbp-0x60]
   140016640:	lea    rax,[rbp+0x1ef]
   140016647:	mov    DWORD PTR [rsp+0x48],edi
   14001664b:	sub    eax,ebx
   14001664d:	add    rbx,r11
   140016650:	mov    DWORD PTR [rsp+0x54],eax
   140016654:	test   esi,r15d
   140016657:	je     0x1400167d3
   14001665d:	test   eax,eax
   14001665f:	je     0x14001666a
   140016661:	cmp    BYTE PTR [rbx],0x30
   140016664:	je     0x1400167d3
   14001666a:	sub    rbx,r11
   14001666d:	add    DWORD PTR [rsp+0x54],r11d
   140016672:	mov    BYTE PTR [rbx],0x30
   140016675:	jmp    0x1400167d3
   14001667a:	mov    r8b,r14b
   14001667d:	mov    edx,0x8
   140016682:	mov    r9d,r15d
   140016685:	mov    rcx,rax
   140016688:	call   0x140016d88
   14001668d:	test   eax,eax
   14001668f:	je     0x1400160c8
   140016695:	mov    r8,QWORD PTR [rsp+0x70]
   14001669a:	jmp    0x140016c90
   14001669f:	mov    eax,0x200
   1400166a4:	lea    rbx,[rbp-0x10]
   1400166a8:	mov    esi,eax
   1400166aa:	test   edi,edi
   1400166ac:	jns    0x1400166b8
   1400166ae:	mov    DWORD PTR [rsp+0x48],0x6
   1400166b6:	jmp    0x140016701
   1400166b8:	jne    0x1400166c7
   1400166ba:	cmp    r14b,0x67
   1400166be:	jne    0x140016701
   1400166c0:	mov    DWORD PTR [rsp+0x48],r11d
   1400166c5:	jmp    0x140016701
   1400166c7:	cmp    edi,eax
   1400166c9:	cmovg  edi,eax
   1400166cc:	mov    DWORD PTR [rsp+0x48],edi
   1400166d0:	cmp    edi,0xa3
   1400166d6:	jle    0x140016701
   1400166d8:	add    edi,0x15d
   1400166de:	movsxd rcx,edi
   1400166e1:	call   0x14000fc4c
   1400166e6:	xor    r10d,r10d
   1400166e9:	mov    QWORD PTR [rbp-0x50],rax
   1400166ed:	test   rax,rax
   1400166f0:	je     0x1400166f9
   1400166f2:	mov    rbx,rax
   1400166f5:	mov    esi,edi
   1400166f7:	jmp    0x140016701
   1400166f9:	mov    DWORD PTR [rsp+0x48],0xa3
   140016701:	cmp    DWORD PTR [rsp+0x78],r10d
   140016706:	jne    0x140016716
   140016708:	mov    rax,QWORD PTR [r13+0x0]
   14001670c:	add    r13,0x8
   140016710:	mov    QWORD PTR [rbp-0x40],rax
   140016714:	jmp    0x140016736
   140016716:	cmp    r12d,0x63
   14001671a:	ja     0x1400160c8
   140016720:	movsxd rax,r12d
   140016723:	lea    rcx,[rax+rax*2]
   140016727:	mov    rax,QWORD PTR [rbp+rcx*8+0x1f8]
   14001672f:	mov    rcx,QWORD PTR [rax]
   140016732:	mov    QWORD PTR [rbp-0x40],rcx
   140016736:	mov    rcx,QWORD PTR [rip+0x2fcb3]        # 0x1400463f0
   14001673d:	movsx  edi,r14b
   140016741:	movsxd rsi,esi
   140016744:	call   QWORD PTR [rip+0x1eade]        # 0x140035228
   14001674a:	lea    rcx,[rbp-0x30]
   14001674e:	mov    r9d,edi
   140016751:	mov    QWORD PTR [rsp+0x30],rcx
   140016756:	mov    ecx,DWORD PTR [rbp-0x74]
   140016759:	mov    r8,rsi
   14001675c:	mov    DWORD PTR [rsp+0x28],ecx
   140016760:	mov    ecx,DWORD PTR [rsp+0x48]
   140016764:	mov    rdx,rbx
   140016767:	mov    DWORD PTR [rsp+0x20],ecx
   14001676b:	lea    rcx,[rbp-0x40]
   14001676f:	call   rax
   140016771:	mov    edi,r15d
   140016774:	and    edi,0x80
   14001677a:	je     0x14001679a
   14001677c:	xor    eax,eax
   14001677e:	cmp    DWORD PTR [rsp+0x48],eax
   140016782:	jne    0x14001679a
   140016784:	mov    rcx,QWORD PTR [rip+0x2fc7d]        # 0x140046408
   14001678b:	call   QWORD PTR [rip+0x1ea97]        # 0x140035228
   140016791:	lea    rdx,[rbp-0x30]
   140016795:	mov    rcx,rbx
   140016798:	call   rax
   14001679a:	cmp    r14b,0x67
   14001679e:	jne    0x1400167ba
   1400167a0:	test   edi,edi
   1400167a2:	jne    0x1400167ba
   1400167a4:	mov    rcx,QWORD PTR [rip+0x2fc55]        # 0x140046400
   1400167ab:	call   QWORD PTR [rip+0x1ea77]        # 0x140035228
   1400167b1:	lea    rdx,[rbp-0x30]
   1400167b5:	mov    rcx,rbx
   1400167b8:	call   rax
   1400167ba:	cmp    BYTE PTR [rbx],0x2d
   1400167bd:	jne    0x1400167c7
   1400167bf:	bts    r15d,0x8
   1400167c4:	inc    rbx
   1400167c7:	mov    rcx,rbx
   1400167ca:	call   0x14001ca40
   1400167cf:	mov    DWORD PTR [rsp+0x54],eax
   1400167d3:	mov    eax,DWORD PTR [rsp+0x44]
   1400167d7:	cmp    DWORD PTR [rsp+0x78],0x1
   1400167dc:	jne    0x1400167ec
   1400167de:	mov    r8,QWORD PTR [rsp+0x70]
   1400167e3:	test   r8,r8
   1400167e6:	je     0x140016c8c
   1400167ec:	test   eax,eax
   1400167ee:	jne    0x140016941
   1400167f4:	test   r15b,0x40
   1400167f8:	je     0x14001682b
   1400167fa:	bt     r15d,0x8
   1400167ff:	jae    0x140016808
   140016801:	mov    BYTE PTR [rsp+0x58],0x2d
   140016806:	jmp    0x140016813
   140016808:	test   r15b,0x1
   14001680c:	je     0x14001681e
   14001680e:	mov    BYTE PTR [rsp+0x58],0x2b
   140016813:	mov    edi,0x1
   140016818:	mov    DWORD PTR [rsp+0x50],edi
   14001681c:	jmp    0x14001682f
   14001681e:	test   r15b,0x2
   140016822:	je     0x14001682b
   140016824:	mov    BYTE PTR [rsp+0x58],0x20
   140016829:	jmp    0x140016813
   14001682b:	mov    edi,DWORD PTR [rsp+0x50]
   14001682f:	mov    r14d,DWORD PTR [rsp+0x5c]
   140016834:	mov    rsi,QWORD PTR [rbp-0x68]
   140016838:	sub    r14d,DWORD PTR [rsp+0x54]
   14001683d:	sub    r14d,edi
   140016840:	test   r15b,0xc
   140016844:	jne    0x140016858
   140016846:	lea    r9,[rsp+0x4c]
   14001684b:	mov    r8,rsi
   14001684e:	mov    edx,r14d
   140016851:	mov    cl,0x20
   140016853:	call   0x140016f00
   140016858:	mov    rax,QWORD PTR [rbp-0x58]
   14001685c:	lea    r9,[rsp+0x4c]
   140016861:	lea    rcx,[rsp+0x58]
   140016866:	mov    r8,rsi
   140016869:	mov    edx,edi
   14001686b:	mov    QWORD PTR [rsp+0x20],rax
   140016870:	call   0x140016f54
   140016875:	test   r15b,0x8
   140016879:	je     0x140016893
   14001687b:	test   r15b,0x4
   14001687f:	jne    0x140016893
   140016881:	lea    r9,[rsp+0x4c]
   140016886:	mov    r8,rsi
   140016889:	mov    edx,r14d
   14001688c:	mov    cl,0x30
   14001688e:	call   0x140016f00
   140016893:	mov    edi,DWORD PTR [rsp+0x54]
   140016897:	xor    eax,eax
   140016899:	cmp    DWORD PTR [rsp+0x68],eax
   14001689d:	je     0x140016906
   14001689f:	test   edi,edi
   1400168a1:	jle    0x140016906
   1400168a3:	mov    rsi,rbx
   1400168a6:	movzx  r9d,WORD PTR [rsi]
   1400168aa:	lea    rdx,[rbp+0xb50]
   1400168b1:	lea    rcx,[rbp-0x48]
   1400168b5:	mov    r8d,0x6
   1400168bb:	dec    edi
   1400168bd:	lea    rsi,[rsi+0x2]
   1400168c1:	call   0x14001d67c
   1400168c6:	test   eax,eax
   1400168c8:	jne    0x1400168f9
   1400168ca:	mov    edx,DWORD PTR [rbp-0x48]
   1400168cd:	test   edx,edx
   1400168cf:	je     0x1400168f9
   1400168d1:	mov    rax,QWORD PTR [rbp-0x58]
   1400168d5:	mov    r8,QWORD PTR [rbp-0x68]
   1400168d9:	lea    r9,[rsp+0x4c]
   1400168de:	lea    rcx,[rbp+0xb50]
   1400168e5:	mov    QWORD PTR [rsp+0x20],rax
   1400168ea:	call   0x140016f54
   1400168ef:	test   edi,edi
   1400168f1:	jne    0x1400168a6
   1400168f3:	mov    rsi,QWORD PTR [rbp-0x68]
   1400168f7:	jmp    0x140016921
   1400168f9:	mov    rsi,QWORD PTR [rbp-0x68]
   1400168fd:	or     eax,0xffffffff
   140016900:	mov    DWORD PTR [rsp+0x4c],eax
   140016904:	jmp    0x140016925
   140016906:	mov    rax,QWORD PTR [rbp-0x58]
   14001690a:	lea    r9,[rsp+0x4c]
   14001690f:	mov    r8,rsi
   140016912:	mov    edx,edi
   140016914:	mov    rcx,rbx
   140016917:	mov    QWORD PTR [rsp+0x20],rax
   14001691c:	call   0x140016f54
   140016921:	mov    eax,DWORD PTR [rsp+0x4c]
   140016925:	test   eax,eax
   140016927:	js     0x140016941
   140016929:	test   r15b,0x4
   14001692d:	je     0x140016941
   14001692f:	lea    r9,[rsp+0x4c]
   140016934:	mov    r8,rsi
   140016937:	mov    edx,r14d
   14001693a:	mov    cl,0x20
   14001693c:	call   0x140016f00
   140016941:	mov    rax,QWORD PTR [rbp-0x50]
   140016945:	test   rax,rax
   140016948:	je     0x140016959
   14001694a:	mov    rcx,rax
   14001694d:	call   0x14000fb50
   140016952:	xor    r10d,r10d
   140016955:	mov    QWORD PTR [rbp-0x50],r10
   140016959:	mov    edi,DWORD PTR [rsp+0x48]
   14001695d:	jmp    0x140016695
   140016962:	cmp    r14b,0x49
   140016966:	je     0x1400169b1
   140016968:	cmp    r14b,0x68
   14001696c:	je     0x1400169a8
   14001696e:	cmp    r14b,0x6c
   140016972:	je     0x140016988
   140016974:	cmp    r14b,0x77
   140016978:	jne    0x140016c95
   14001697e:	bts    r15d,0xb
   140016983:	jmp    0x140016c95
   140016988:	cmp    BYTE PTR [r9],0x6c
   14001698c:	mov    edx,DWORD PTR [rsp+0x40]
   140016990:	jne    0x14001699f
   140016992:	add    r9,r11
   140016995:	bts    r15d,0xc
   14001699a:	jmp    0x140016c99
   14001699f:	or     r15d,0x10
   1400169a3:	jmp    0x140016c99
   1400169a8:	or     r15d,0x20
   1400169ac:	jmp    0x140016c95
   1400169b1:	mov    al,BYTE PTR [r9]
   1400169b4:	mov    ecx,0x8000
   1400169b9:	or     r15d,ecx
   1400169bc:	cmp    al,0x36
   1400169be:	jne    0x1400169d3
   1400169c0:	cmp    BYTE PTR [r9+0x1],0x34
   1400169c5:	jne    0x1400169d3
   1400169c7:	add    r9,0x2
   1400169cb:	or     r15d,ecx
   1400169ce:	jmp    0x140016c95
   1400169d3:	cmp    al,0x33
   1400169d5:	jne    0x1400169ec
   1400169d7:	cmp    BYTE PTR [r9+0x1],0x32
   1400169dc:	jne    0x1400169ec
   1400169de:	add    r9,0x2
   1400169e2:	btr    r15d,0xf
   1400169e7:	jmp    0x140016c95
   1400169ec:	sub    al,0x58
   1400169ee:	cmp    al,0x20
   1400169f0:	ja     0x140016a0c
   1400169f2:	movabs rcx,0x120821001
   1400169fc:	bt     rcx,rax
   140016a00:	jae    0x140016a0c
   140016a02:	bts    r15d,0x10
   140016a07:	jmp    0x140016c95
   140016a0c:	mov    DWORD PTR [rbp-0x78],r10d
   140016a10:	jmp    0x140016c36
   140016a15:	cmp    r14b,0x2a
   140016a19:	jne    0x140016af2
   140016a1f:	test   esi,esi
   140016a21:	jne    0x140016a30
   140016a23:	mov    edi,DWORD PTR [r13+0x0]
   140016a27:	add    r13,0x8
   140016a2b:	jmp    0x140016ad6
   140016a30:	lea    rdx,[rbp-0x80]
   140016a34:	mov    r8d,0xa
   140016a3a:	mov    rcx,r9
   140016a3d:	call   0x140023bd0
   140016a42:	mov    rcx,QWORD PTR [rbp-0x80]
   140016a46:	mov    r8,QWORD PTR [rsp+0x70]
   140016a4b:	lea    r9,[rcx+0x1]
   140016a4f:	mov    r11d,0x1
   140016a55:	xor    r10d,r10d
   140016a58:	sub    eax,r11d
   140016a5b:	mov    QWORD PTR [rsp+0x60],r9
   140016a60:	test   r8,r8
   140016a63:	jne    0x140016ac6
   140016a65:	test   eax,eax
   140016a67:	js     0x1400160c8
   140016a6d:	cmp    BYTE PTR [rcx],0x24
   140016a70:	jne    0x1400160c8
   140016a76:	cmp    r12d,0x64
   140016a7a:	jge    0x1400160c8
   140016a80:	mov    edx,DWORD PTR [rsp+0x40]
   140016a84:	cmp    eax,edx
   140016a86:	cmovg  edx,eax
   140016a89:	cdqe   
   140016a8b:	lea    rcx,[rax+rax*2]
   140016a8f:	lea    rax,[rbp+0x1f0]
   140016a96:	mov    DWORD PTR [rsp+0x40],edx
   140016a9a:	lea    rax,[rax+rcx*8]
   140016a9e:	cmp    DWORD PTR [rax],r10d
   140016aa1:	jne    0x140016abb
   140016aa3:	mov    DWORD PTR [rax],r11d
   140016aa6:	mov    BYTE PTR [rbp+rcx*8+0x200],0x2a
   140016aae:	mov    DWORD PTR [rbp+rcx*8+0x204],r15d
   140016ab6:	jmp    0x140016c99
   140016abb:	mov    r8b,0x2a
   140016abe:	mov    edx,r11d
   140016ac1:	jmp    0x140016682
   140016ac6:	cdqe   
   140016ac8:	lea    rcx,[rax+rax*2]
   140016acc:	mov    rax,QWORD PTR [rbp+rcx*8+0x1f8]
   140016ad4:	mov    edi,DWORD PTR [rax]
   140016ad6:	mov    edx,DWORD PTR [rsp+0x40]
   140016ada:	mov    DWORD PTR [rsp+0x48],edi
   140016ade:	test   edi,edi
   140016ae0:	jns    0x140016c99
   140016ae6:	or     edi,0xffffffff
   140016ae9:	mov    DWORD PTR [rsp+0x48],edi
   140016aed:	jmp    0x140016c99
   140016af2:	lea    edi,[rdi+rdi*4]
   140016af5:	movsx  eax,r14b
   140016af9:	lea    edi,[rdi-0x18]
   140016afc:	lea    edi,[rax+rdi*2]
   140016aff:	mov    DWORD PTR [rsp+0x48],edi
   140016b03:	jmp    0x140016c95
   140016b08:	mov    edi,r10d
   140016b0b:	mov    DWORD PTR [rsp+0x48],r10d
   140016b10:	jmp    0x140016c95
   140016b15:	cmp    r14b,0x2a
   140016b19:	jne    0x140016b91
   140016b1b:	test   esi,esi
   140016b1d:	jne    0x140016b29
   140016b1f:	mov    eax,DWORD PTR [r13+0x0]
   140016b23:	add    r13,0x8
   140016b27:	jmp    0x140016b72
   140016b29:	lea    rdx,[rbp-0x80]
   140016b2d:	mov    r8d,0xa
   140016b33:	mov    rcx,r9
   140016b36:	call   0x140023bd0
   140016b3b:	mov    rcx,QWORD PTR [rbp-0x80]
   140016b3f:	mov    r8,QWORD PTR [rsp+0x70]
   140016b44:	lea    r9,[rcx+0x1]
   140016b48:	mov    r11d,0x1
   140016b4e:	xor    r10d,r10d
   140016b51:	sub    eax,r11d
   140016b54:	mov    QWORD PTR [rsp+0x60],r9
   140016b59:	test   r8,r8
   140016b5c:	je     0x140016a65
   140016b62:	cdqe   
   140016b64:	lea    rcx,[rax+rax*2]
   140016b68:	mov    rax,QWORD PTR [rbp+rcx*8+0x1f8]
   140016b70:	mov    eax,DWORD PTR [rax]
   140016b72:	mov    edx,DWORD PTR [rsp+0x40]
   140016b76:	mov    DWORD PTR [rsp+0x5c],eax
   140016b7a:	test   eax,eax
   140016b7c:	jns    0x140016c99
   140016b82:	or     r15d,0x4
   140016b86:	neg    eax
   140016b88:	mov    DWORD PTR [rsp+0x5c],eax
   140016b8c:	jmp    0x140016c99
   140016b91:	mov    eax,DWORD PTR [rsp+0x5c]
   140016b95:	lea    ecx,[rax+rax*4]
   140016b98:	movsx  eax,r14b
   140016b9c:	lea    eax,[rax+rcx*2]
   140016b9f:	add    eax,0xffffffd0
   140016ba2:	mov    DWORD PTR [rsp+0x5c],eax
   140016ba6:	jmp    0x140016c95
   140016bab:	cmp    r14b,0x20
   140016baf:	je     0x140016bf5
   140016bb1:	cmp    r14b,0x23
   140016bb5:	je     0x140016beb
   140016bb7:	cmp    r14b,0x2b
   140016bbb:	je     0x140016be3
   140016bbd:	cmp    r14b,0x2d
   140016bc1:	je     0x140016bda
   140016bc3:	mov    edx,DWORD PTR [rsp+0x40]
   140016bc7:	cmp    r14b,0x30
   140016bcb:	jne    0x140016c99
   140016bd1:	or     r15d,0x8
   140016bd5:	jmp    0x140016c99
   140016bda:	or     r15d,0x4
   140016bde:	jmp    0x140016c95
   140016be3:	or     r15d,r11d
   140016be6:	jmp    0x140016c95
   140016beb:	bts    r15d,0x7
   140016bf0:	jmp    0x140016c95
   140016bf5:	or     r15d,0x2
   140016bf9:	jmp    0x140016c95
   140016bfe:	or     edi,0xffffffff
   140016c01:	mov    DWORD PTR [rbp-0x74],r10d
   140016c05:	mov    DWORD PTR [rsp+0x44],r10d
   140016c0a:	mov    DWORD PTR [rsp+0x5c],r10d
   140016c0f:	mov    DWORD PTR [rsp+0x50],r10d
   140016c14:	mov    r15d,r10d
   140016c17:	mov    DWORD PTR [rsp+0x48],edi
   140016c1b:	mov    DWORD PTR [rsp+0x68],r10d
   140016c20:	jmp    0x140016c95
   140016c22:	test   r8,r8
   140016c25:	jne    0x140016c2c
   140016c27:	cmp    esi,r11d
   140016c2a:	je     0x140016c95
   140016c2c:	cmp    r8,r11
   140016c2f:	jne    0x140016c36
   140016c31:	cmp    esi,0xffffffff
   140016c34:	je     0x140016c95
   140016c36:	lea    rdx,[rbp-0x30]
   140016c3a:	movzx  ecx,r14b
   140016c3e:	mov    DWORD PTR [rsp+0x68],r10d
   140016c43:	call   0x14001d1f4
   140016c48:	test   eax,eax
   140016c4a:	je     0x140016c76
   140016c4c:	mov    rdx,QWORD PTR [rbp-0x68]
   140016c50:	lea    r8,[rsp+0x4c]
   140016c55:	mov    cl,r14b
   140016c58:	call   0x140016eb8
   140016c5d:	mov    rax,QWORD PTR [rsp+0x60]
   140016c62:	mov    r14b,BYTE PTR [rax]
   140016c65:	inc    rax
   140016c68:	mov    QWORD PTR [rsp+0x60],rax
   140016c6d:	test   r14b,r14b
   140016c70:	je     0x1400160c8
   140016c76:	mov    rdx,QWORD PTR [rbp-0x68]
   140016c7a:	lea    r8,[rsp+0x4c]
   140016c7f:	mov    cl,r14b
   140016c82:	call   0x140016eb8
   140016c87:	jmp    0x140016695
   140016c8c:	mov    edi,DWORD PTR [rsp+0x48]
   140016c90:	mov    r9,QWORD PTR [rsp+0x60]
   140016c95:	mov    edx,DWORD PTR [rsp+0x40]
   140016c99:	mov    r14b,BYTE PTR [r9]
   140016c9c:	mov    esi,DWORD PTR [rsp+0x78]
   140016ca0:	mov    r10d,DWORD PTR [rsp+0x4c]
   140016ca5:	mov    r11d,DWORD PTR [rbp-0x78]
   140016ca9:	test   r14b,r14b
   140016cac:	jne    0x140015e47
   140016cb2:	xor    edi,edi
   140016cb4:	test   r11d,r11d
   140016cb7:	je     0x140016cbf
   140016cb9:	cmp    r11d,0x7
   140016cbd:	jne    0x140016d30
   140016cbf:	mov    ecx,DWORD PTR [rsp+0x7c]
   140016cc3:	cmp    esi,0x1
   140016cc6:	jne    0x140016d18
   140016cc8:	test   ecx,ecx
   140016cca:	jne    0x140016d18
   140016ccc:	mov    r8,rdi
   140016ccf:	movsxd r9,edx
   140016cd2:	test   edx,edx
   140016cd4:	js     0x140016d18
   140016cd6:	lea    rdx,[rbp+0x1f8]
   140016cdd:	mov    ecx,DWORD PTR [rdx-0x8]
   140016ce0:	dec    ecx
   140016ce2:	je     0x140016cfd
   140016ce4:	dec    ecx
   140016ce6:	je     0x140016cfd
   140016ce8:	dec    ecx
   140016cea:	je     0x140016cfd
   140016cec:	dec    ecx
   140016cee:	je     0x140016cfd
   140016cf0:	dec    ecx
   140016cf2:	je     0x140016cfd
   140016cf4:	dec    ecx
   140016cf6:	je     0x140016cfd
   140016cf8:	cmp    ecx,0x2
   140016cfb:	jne    0x140016d30
   140016cfd:	mov    QWORD PTR [rdx],r13
   140016d00:	inc    r8
   140016d03:	add    r13,0x8
   140016d07:	add    rdx,0x18
   140016d0b:	cmp    r8,r9
   140016d0e:	jle    0x140016cdd
   140016d10:	mov    ecx,DWORD PTR [rsp+0x7c]
   140016d14:	jmp    0x140016d18
   140016d16:	xor    edi,edi
   140016d18:	inc    ecx
   140016d1a:	mov    DWORD PTR [rsp+0x7c],ecx
   140016d1e:	cmp    ecx,0x2
   140016d21:	jge    0x140016d46
   140016d23:	mov    r12,QWORD PTR [rbp-0x38]
   140016d27:	or     r14d,0xffffffff
   140016d2b:	jmp    0x140015df6
   140016d30:	call   0x14000b9f0
   140016d35:	mov    DWORD PTR [rax],0x16
   140016d3b:	call   0x14000b8b8
   140016d40:	or     r14d,0xffffffff
   140016d44:	jmp    0x140016d49
   140016d46:	mov    r14d,r10d
   140016d49:	cmp    BYTE PTR [rbp-0x18],dil
   140016d4d:	je     0x140016d5a
   140016d4f:	mov    rcx,QWORD PTR [rbp-0x20]
   140016d53:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140016d5a:	mov    eax,r14d
   140016d5d:	mov    rcx,QWORD PTR [rbp+0xb58]
   140016d64:	xor    rcx,rsp
   140016d67:	call   0x1400097d0
   140016d6c:	mov    rbx,QWORD PTR [rsp+0xcb0]
   140016d74:	add    rsp,0xc60
   140016d7b:	pop    r15
   140016d7d:	pop    r14
   140016d7f:	pop    r13
   140016d81:	pop    r12
   140016d83:	pop    rdi
   140016d84:	pop    rsi
   140016d85:	pop    rbp
   140016d86:	ret    
   140016d87:	int3   
   140016d88:	mov    QWORD PTR [rsp+0x8],rbx
   140016d8d:	mov    QWORD PTR [rsp+0x10],rdi
   140016d92:	mov    QWORD PTR [rsp+0x18],r14
   140016d97:	mov    r10b,BYTE PTR [rcx+0x10]
   140016d9b:	mov    ebx,r9d
   140016d9e:	mov    edi,edx
   140016da0:	mov    r11,rcx
   140016da3:	cmp    r10b,0x70
   140016da7:	je     0x140016e90
   140016dad:	cmp    r8b,0x70
   140016db1:	je     0x140016e90
   140016db7:	lea    eax,[r10-0x53]
   140016dbb:	mov    edx,0x0
   140016dc0:	test   al,0xdf
   140016dc2:	lea    eax,[r8-0x53]
   140016dc6:	mov    ecx,edx
   140016dc8:	sete   cl
   140016dcb:	test   al,0xdf
   140016dcd:	mov    eax,edx
   140016dcf:	sete   al
   140016dd2:	test   ecx,ecx
   140016dd4:	jne    0x140016e68
   140016dda:	test   eax,eax
   140016ddc:	jne    0x140016e8a
   140016de2:	lea    eax,[r10-0x58]
   140016de6:	movabs r14,0x120821001
   140016df0:	cmp    al,0x20
   140016df2:	ja     0x140016dfe
   140016df4:	movsx  rax,al
   140016df8:	bt     r14,rax
   140016dfc:	jb     0x140016e10
   140016dfe:	lea    eax,[r8-0x58]
   140016e02:	cmp    al,0x20
   140016e04:	ja     0x140016e63
   140016e06:	movsx  rax,al
   140016e0a:	bt     r14,rax
   140016e0e:	jae    0x140016e63
   140016e10:	sub    r10b,0x58
   140016e14:	mov    ecx,0x1
   140016e19:	cmp    r10b,0x20
   140016e1d:	ja     0x140016e2c
   140016e1f:	movsx  rax,r10b
   140016e23:	mov    r9d,ecx
   140016e26:	bt     r14,rax
   140016e2a:	jb     0x140016e2f
   140016e2c:	mov    r9d,edx
   140016e2f:	sub    r8b,0x58
   140016e33:	cmp    r8b,0x20
   140016e37:	ja     0x140016e43
   140016e39:	movsx  rax,r8b
   140016e3d:	bt     r14,rax
   140016e41:	jb     0x140016e45
   140016e43:	mov    ecx,edx
   140016e45:	cmp    r9d,ecx
   140016e48:	je     0x140016e4e
   140016e4a:	xor    eax,eax
   140016e4c:	jmp    0x140016e9a
   140016e4e:	mov    ecx,DWORD PTR [r11+0x14]
   140016e52:	mov    eax,ecx
   140016e54:	xor    eax,ebx
   140016e56:	bt     eax,0x10
   140016e5a:	jb     0x140016e4a
   140016e5c:	xor    ecx,ebx
   140016e5e:	test   cl,0x20
   140016e61:	jne    0x140016e4a
   140016e63:	cmp    DWORD PTR [r11],edi
   140016e66:	jmp    0x140016e95
   140016e68:	cmp    ecx,eax
   140016e6a:	jne    0x140016e8a
   140016e6c:	mov    eax,0x810
   140016e71:	mov    ecx,edx
   140016e73:	test   DWORD PTR [r11+0x14],eax
   140016e77:	setne  cl
   140016e7a:	test   eax,ebx
   140016e7c:	mov    eax,edx
   140016e7e:	setne  al
   140016e81:	cmp    ecx,eax
   140016e83:	mov    ecx,0x1
   140016e88:	je     0x140016e8c
   140016e8a:	mov    ecx,edx
   140016e8c:	mov    eax,ecx
   140016e8e:	jmp    0x140016e9a
   140016e90:	xor    edx,edx
   140016e92:	cmp    r10b,r8b
   140016e95:	sete   dl
   140016e98:	mov    eax,edx
   140016e9a:	mov    rbx,QWORD PTR [rsp+0x8]
   140016e9f:	mov    rdi,QWORD PTR [rsp+0x10]
   140016ea4:	mov    r14,QWORD PTR [rsp+0x18]
   140016ea9:	ret    
   140016eaa:	int3   
   140016eab:	int3   
   140016eac:	add    QWORD PTR [rcx],0x8
   140016eb0:	mov    rax,QWORD PTR [rcx]
   140016eb3:	mov    rax,QWORD PTR [rax-0x8]
   140016eb7:	ret    
   140016eb8:	rex push rbx
   140016eba:	sub    rsp,0x20
   140016ebe:	test   BYTE PTR [rdx+0x18],0x40
   140016ec2:	mov    rbx,r8
   140016ec5:	je     0x140016ed3
   140016ec7:	cmp    QWORD PTR [rdx+0x10],0x0
   140016ecc:	jne    0x140016ed3
   140016ece:	inc    DWORD PTR [r8]
   140016ed1:	jmp    0x140016ef8
   140016ed3:	dec    DWORD PTR [rdx+0x8]
   140016ed6:	js     0x140016ee5
   140016ed8:	mov    rax,QWORD PTR [rdx]
   140016edb:	mov    BYTE PTR [rax],cl
   140016edd:	inc    QWORD PTR [rdx]
   140016ee0:	movzx  eax,cl
   140016ee3:	jmp    0x140016eed
   140016ee5:	movsx  ecx,cl
   140016ee8:	call   0x1400123d0
   140016eed:	cmp    eax,0xffffffff
   140016ef0:	jne    0x140016ef6
   140016ef2:	or     DWORD PTR [rbx],eax
   140016ef4:	jmp    0x140016ef8
   140016ef6:	inc    DWORD PTR [rbx]
   140016ef8:	add    rsp,0x20
   140016efc:	pop    rbx
   140016efd:	ret    
   140016efe:	int3   
   140016eff:	int3   
   140016f00:	test   edx,edx
   140016f02:	jle    0x140016f50
   140016f04:	mov    QWORD PTR [rsp+0x8],rbx
   140016f09:	mov    QWORD PTR [rsp+0x10],rbp
   140016f0e:	mov    QWORD PTR [rsp+0x18],rsi
   140016f13:	push   rdi
   140016f14:	sub    rsp,0x20
   140016f18:	mov    rdi,r9
   140016f1b:	mov    rsi,r8
   140016f1e:	mov    ebx,edx
   140016f20:	mov    bpl,cl
   140016f23:	mov    r8,rdi
   140016f26:	mov    rdx,rsi
   140016f29:	mov    cl,bpl
   140016f2c:	dec    ebx
   140016f2e:	call   0x140016eb8
   140016f33:	cmp    DWORD PTR [rdi],0xffffffff
   140016f36:	je     0x140016f3c
   140016f38:	test   ebx,ebx
   140016f3a:	jg     0x140016f23
   140016f3c:	mov    rbx,QWORD PTR [rsp+0x30]
   140016f41:	mov    rbp,QWORD PTR [rsp+0x38]
   140016f46:	mov    rsi,QWORD PTR [rsp+0x40]
   140016f4b:	add    rsp,0x20
   140016f4f:	pop    rdi
   140016f50:	ret    
   140016f51:	int3   
   140016f52:	int3   
   140016f53:	int3   
   140016f54:	mov    QWORD PTR [rsp+0x8],rbx
   140016f59:	mov    QWORD PTR [rsp+0x10],rbp
   140016f5e:	mov    QWORD PTR [rsp+0x18],rsi
   140016f63:	push   rdi
   140016f64:	push   r14
   140016f66:	push   r15
   140016f68:	sub    rsp,0x20
   140016f6c:	test   BYTE PTR [r8+0x18],0x40
   140016f71:	mov    rbx,QWORD PTR [rsp+0x60]
   140016f76:	mov    rdi,r9
   140016f79:	mov    r15d,DWORD PTR [rbx]
   140016f7c:	mov    rbp,r8
   140016f7f:	mov    esi,edx
   140016f81:	mov    r14,rcx
   140016f84:	je     0x140016f92
   140016f86:	cmp    QWORD PTR [r8+0x10],0x0
   140016f8b:	jne    0x140016f92
   140016f8d:	add    DWORD PTR [r9],edx
   140016f90:	jmp    0x140016fcf
   140016f92:	and    DWORD PTR [rbx],0x0
   140016f95:	test   edx,edx
   140016f97:	jle    0x140016fcc
   140016f99:	mov    cl,BYTE PTR [r14]
   140016f9c:	mov    r8,rdi
   140016f9f:	mov    rdx,rbp
   140016fa2:	dec    esi
   140016fa4:	call   0x140016eb8
   140016fa9:	inc    r14
   140016fac:	cmp    DWORD PTR [rdi],0xffffffff
   140016faf:	jne    0x140016fc3
   140016fb1:	cmp    DWORD PTR [rbx],0x2a
   140016fb4:	jne    0x140016fc7
   140016fb6:	mov    r8,rdi
   140016fb9:	mov    rdx,rbp
   140016fbc:	mov    cl,0x3f
   140016fbe:	call   0x140016eb8
   140016fc3:	test   esi,esi
   140016fc5:	jg     0x140016f99
   140016fc7:	cmp    DWORD PTR [rbx],0x0
   140016fca:	jne    0x140016fcf
   140016fcc:	mov    DWORD PTR [rbx],r15d
   140016fcf:	mov    rbx,QWORD PTR [rsp+0x40]
   140016fd4:	mov    rbp,QWORD PTR [rsp+0x48]
   140016fd9:	mov    rsi,QWORD PTR [rsp+0x50]
   140016fde:	add    rsp,0x20
   140016fe2:	pop    r15
   140016fe4:	pop    r14
   140016fe6:	pop    rdi
   140016fe7:	ret    
   140016fe8:	test   rcx,rcx
   140016feb:	je     0x140017055
   140016fed:	mov    BYTE PTR [rsp+0x10],dl
   140016ff1:	sub    rsp,0x28
   140016ff5:	cmp    DWORD PTR [rcx],0xe06d7363
   140016ffb:	jne    0x140017051
   140016ffd:	cmp    DWORD PTR [rcx+0x18],0x4
   140017001:	jne    0x140017051
   140017003:	mov    eax,DWORD PTR [rcx+0x20]
   140017006:	sub    eax,0x19930520
   14001700b:	cmp    eax,0x2
   14001700e:	ja     0x140017051
   140017010:	mov    rax,QWORD PTR [rcx+0x30]
   140017014:	test   rax,rax
   140017017:	je     0x140017051
   140017019:	movsxd rdx,DWORD PTR [rax+0x4]
   14001701d:	test   edx,edx
   14001701f:	je     0x14001703a
   140017021:	mov    rax,rdx
   140017024:	mov    rdx,QWORD PTR [rcx+0x38]
   140017028:	add    rdx,rax
   14001702b:	mov    rcx,QWORD PTR [rcx+0x28]
   14001702f:	call   rdx
   140017031:	nop
   140017032:	jmp    0x140017051
   140017034:	call   0x140018c6c
   140017039:	nop
   14001703a:	test   BYTE PTR [rax],0x10
   14001703d:	je     0x140017051
   14001703f:	mov    rax,QWORD PTR [rcx+0x28]
   140017043:	mov    rcx,QWORD PTR [rax]
   140017046:	test   rcx,rcx
   140017049:	je     0x140017051
   14001704b:	mov    rax,QWORD PTR [rcx]
   14001704e:	call   QWORD PTR [rax+0x10]
   140017051:	add    rsp,0x28
   140017055:	ret    
   140017056:	int3   
   140017057:	int3   
   140017058:	rex push rbx
   14001705a:	sub    rsp,0x20
   14001705e:	mov    rbx,rcx
   140017061:	call   0x14000f794
   140017066:	lea    rax,[rip+0x21843]        # 0x1400388b0
   14001706d:	mov    QWORD PTR [rbx],rax
   140017070:	mov    rax,rbx
   140017073:	add    rsp,0x20
   140017077:	pop    rbx
   140017078:	ret    
   140017079:	int3   
   14001707a:	int3   
   14001707b:	int3   
   14001707c:	mov    QWORD PTR [rsp+0x10],rdx
   140017081:	push   rbx
   140017082:	sub    rsp,0x20
   140017086:	lea    rdx,[rsp+0x38]
   14001708b:	mov    rbx,rcx
   14001708e:	call   0x14000f748
   140017093:	lea    rax,[rip+0x21816]        # 0x1400388b0
   14001709a:	mov    QWORD PTR [rbx],rax
   14001709d:	mov    rax,rbx
   1400170a0:	add    rsp,0x20
   1400170a4:	pop    rbx
   1400170a5:	ret    
   1400170a6:	int3   
   1400170a7:	int3   
   1400170a8:	lea    rax,[rip+0x21801]        # 0x1400388b0
   1400170af:	mov    QWORD PTR [rcx],rax
   1400170b2:	jmp    0x14000f808
   1400170b7:	int3   
   1400170b8:	mov    QWORD PTR [rsp+0x8],rbx
   1400170bd:	push   rdi
   1400170be:	sub    rsp,0x20
   1400170c2:	lea    rax,[rip+0x217e7]        # 0x1400388b0
   1400170c9:	mov    ebx,edx
   1400170cb:	mov    rdi,rcx
   1400170ce:	mov    QWORD PTR [rcx],rax
   1400170d1:	call   0x14000f808
   1400170d6:	test   bl,0x1
   1400170d9:	je     0x1400170e3
   1400170db:	mov    rcx,rdi
   1400170de:	call   0x140007d8c
   1400170e3:	mov    rax,rdi
   1400170e6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400170eb:	add    rsp,0x20
   1400170ef:	pop    rdi
   1400170f0:	ret    
   1400170f1:	int3   
   1400170f2:	int3   
   1400170f3:	int3   
   1400170f4:	mov    rax,rsp
   1400170f7:	mov    QWORD PTR [rax+0x8],rbx
   1400170fb:	mov    QWORD PTR [rax+0x18],rbp
   1400170ff:	push   rsi
   140017100:	push   rdi
   140017101:	push   r12
   140017103:	push   r14
   140017105:	push   r15
   140017107:	sub    rsp,0x50
   14001710b:	mov    r15,QWORD PTR [rsp+0xa0]
   140017113:	mov    rbp,r9
   140017116:	mov    r14,rdx
   140017119:	mov    r12,r8
   14001711c:	mov    rbx,rcx
   14001711f:	lea    r9,[rax+0x10]
   140017123:	mov    r8,r15
   140017126:	mov    rdx,rbp
   140017129:	mov    rcx,r14
   14001712c:	call   0x140008fa0
   140017131:	mov    r9,QWORD PTR [rsp+0xb0]
   140017139:	mov    rsi,QWORD PTR [rsp+0xa8]
   140017141:	mov    rdi,rax
   140017144:	test   r9,r9
   140017147:	je     0x140017157
   140017149:	mov    r8,rsi
   14001714c:	mov    rdx,rax
   14001714f:	mov    rcx,rbx
   140017152:	call   0x140017bdc
   140017157:	call   0x1400093c8
   14001715c:	movsxd rcx,DWORD PTR [rsi+0xc]
   140017160:	mov    r9,rdi
   140017163:	add    rax,rcx
   140017166:	mov    cl,BYTE PTR [rsp+0xd8]
   14001716d:	mov    r8,r12
   140017170:	mov    BYTE PTR [rsp+0x40],cl
   140017174:	mov    rcx,QWORD PTR [rsp+0xb8]
   14001717c:	mov    QWORD PTR [rsp+0x38],rbp
   140017181:	mov    edx,DWORD PTR [rcx]
   140017183:	mov    QWORD PTR [rsp+0x30],r15
   140017188:	mov    rcx,r14
   14001718b:	mov    DWORD PTR [rsp+0x28],edx
   14001718f:	mov    rdx,rbx
   140017192:	mov    QWORD PTR [rsp+0x20],rax
   140017197:	call   0x140009470
   14001719c:	lea    r11,[rsp+0x50]
   1400171a1:	mov    rbx,QWORD PTR [r11+0x30]
   1400171a5:	mov    rbp,QWORD PTR [r11+0x40]
   1400171a9:	mov    rsp,r11
   1400171ac:	pop    r15
   1400171ae:	pop    r14
   1400171b0:	pop    r12
   1400171b2:	pop    rdi
   1400171b3:	pop    rsi
   1400171b4:	ret    
   1400171b5:	int3   
   1400171b6:	int3   
   1400171b7:	int3   
   1400171b8:	mov    QWORD PTR [rsp+0x8],rbx
   1400171bd:	push   rdi
   1400171be:	sub    rsp,0x20
   1400171c2:	mov    r9,QWORD PTR [rcx]
   1400171c5:	and    DWORD PTR [r8],0x0
   1400171c9:	mov    rbx,r8
   1400171cc:	mov    r8d,0xe06d7363
   1400171d2:	cmp    DWORD PTR [r9],r8d
   1400171d5:	jne    0x140017234
   1400171d7:	cmp    DWORD PTR [r9+0x18],0x4
   1400171dc:	mov    edi,0x1
   1400171e1:	mov    r10d,0x19930520
   1400171e7:	jne    0x140017204
   1400171e9:	mov    eax,DWORD PTR [r9+0x20]
   1400171ed:	sub    eax,r10d
   1400171f0:	cmp    eax,0x2
   1400171f3:	ja     0x140017204
   1400171f5:	mov    rax,QWORD PTR [rdx+0x28]
   1400171f9:	mov    ecx,DWORD PTR [rbx]
   1400171fb:	cmp    QWORD PTR [r9+0x28],rax
   1400171ff:	cmove  ecx,edi
   140017202:	mov    DWORD PTR [rbx],ecx
   140017204:	cmp    DWORD PTR [r9],r8d
   140017207:	jne    0x140017234
   140017209:	cmp    DWORD PTR [r9+0x18],0x4
   14001720e:	jne    0x140017234
   140017210:	mov    ecx,DWORD PTR [r9+0x20]
   140017214:	sub    ecx,r10d
   140017217:	cmp    ecx,0x2
   14001721a:	ja     0x140017234
   14001721c:	cmp    QWORD PTR [r9+0x30],0x0
   140017221:	jne    0x140017234
   140017223:	call   0x140010d3c
   140017228:	mov    DWORD PTR [rax+0x460],edi
   14001722e:	mov    DWORD PTR [rbx],edi
   140017230:	mov    eax,edi
   140017232:	jmp    0x140017236
   140017234:	xor    eax,eax
   140017236:	mov    rbx,QWORD PTR [rsp+0x30]
   14001723b:	add    rsp,0x20
   14001723f:	pop    rdi
   140017240:	ret    
   140017241:	int3   
   140017242:	int3   
   140017243:	int3   
   140017244:	mov    QWORD PTR [rsp+0x10],rbx
   140017249:	mov    QWORD PTR [rsp+0x18],r8
   14001724e:	push   rbp
   14001724f:	push   rsi
   140017250:	push   rdi
   140017251:	push   r12
   140017253:	push   r13
   140017255:	push   r14
   140017257:	push   r15
   140017259:	lea    rbp,[rsp-0x7]
   14001725e:	sub    rsp,0xb0
   140017265:	mov    rbx,QWORD PTR [rbp+0x67]
   140017269:	mov    r13,rdx
   14001726c:	mov    rdi,rcx
   14001726f:	xor    r12d,r12d
   140017272:	mov    rdx,r9
   140017275:	mov    rcx,rbx
   140017278:	mov    r15,r9
   14001727b:	mov    r14,r8
   14001727e:	mov    BYTE PTR [rbp+0x47],r12b
   140017282:	mov    BYTE PTR [rbp-0x49],r12b
   140017286:	call   0x140018bb8
   14001728b:	lea    r9,[rbp-0x21]
   14001728f:	mov    r8,rbx
   140017292:	mov    rdx,r15
   140017295:	mov    rcx,r13
   140017298:	mov    esi,eax
   14001729a:	call   0x140008fa0
   14001729f:	mov    r8,rbx
   1400172a2:	mov    rdx,r15
   1400172a5:	mov    rcx,r13
   1400172a8:	call   0x140018b44
   1400172ad:	mov    r8,rbx
   1400172b0:	mov    rdx,r15
   1400172b3:	cmp    esi,eax
   1400172b5:	jle    0x1400172d6
   1400172b7:	lea    rcx,[rbp-0x21]
   1400172bb:	mov    r9d,esi
   1400172be:	call   0x140018b70
   1400172c3:	mov    r9d,esi
   1400172c6:	mov    r8,rbx
   1400172c9:	mov    rdx,r15
   1400172cc:	mov    rcx,r13
   1400172cf:	call   0x140018b7c
   1400172d4:	jmp    0x1400172e0
   1400172d6:	mov    rcx,r13
   1400172d9:	call   0x140018b44
   1400172de:	mov    esi,eax
   1400172e0:	cmp    esi,0xffffffff
   1400172e3:	jl     0x1400172ea
   1400172e5:	cmp    esi,DWORD PTR [rbx+0x4]
   1400172e8:	jl     0x1400172ef
   1400172ea:	call   0x140018c4c
   1400172ef:	cmp    DWORD PTR [rdi],0xe06d7363
   1400172f5:	jne    0x140017676
   1400172fb:	cmp    DWORD PTR [rdi+0x18],0x4
   1400172ff:	jne    0x14001743c
   140017305:	mov    eax,DWORD PTR [rdi+0x20]
   140017308:	sub    eax,0x19930520
   14001730d:	cmp    eax,0x2
   140017310:	ja     0x14001743c
   140017316:	cmp    QWORD PTR [rdi+0x30],r12
   14001731a:	jne    0x14001743c
   140017320:	call   0x140010d3c
   140017325:	cmp    QWORD PTR [rax+0xf0],r12
   14001732c:	je     0x14001765b
   140017332:	call   0x140010d3c
   140017337:	mov    rdi,QWORD PTR [rax+0xf0]
   14001733e:	call   0x140010d3c
   140017343:	mov    rcx,QWORD PTR [rdi+0x38]
   140017347:	mov    r14,QWORD PTR [rax+0xf8]
   14001734e:	mov    BYTE PTR [rbp+0x47],0x1
   140017352:	mov    QWORD PTR [rbp+0x57],r14
   140017356:	call   0x140009454
   14001735b:	mov    edx,0x1
   140017360:	mov    rcx,rdi
   140017363:	call   0x140023c40
   140017368:	test   eax,eax
   14001736a:	jne    0x140017371
   14001736c:	call   0x140018c4c
   140017371:	cmp    DWORD PTR [rdi],0xe06d7363
   140017377:	jne    0x140017397
   140017379:	cmp    DWORD PTR [rdi+0x18],0x4
   14001737d:	jne    0x140017397
   14001737f:	mov    eax,DWORD PTR [rdi+0x20]
   140017382:	sub    eax,0x19930520
   140017387:	cmp    eax,0x2
   14001738a:	ja     0x140017397
   14001738c:	cmp    QWORD PTR [rdi+0x30],r12
   140017390:	jne    0x140017397
   140017392:	call   0x140018c4c
   140017397:	call   0x140010d3c
   14001739c:	cmp    QWORD PTR [rax+0x108],r12
   1400173a3:	je     0x14001743c
   1400173a9:	call   0x140010d3c
   1400173ae:	mov    r14,QWORD PTR [rax+0x108]
   1400173b5:	call   0x140010d3c
   1400173ba:	mov    rdx,r14
   1400173bd:	mov    rcx,rdi
   1400173c0:	mov    QWORD PTR [rax+0x108],r12
   1400173c7:	call   0x140017960
   1400173cc:	test   al,al
   1400173ce:	jne    0x140017438
   1400173d0:	mov    r15d,r12d
   1400173d3:	cmp    DWORD PTR [r14],r12d
   1400173d6:	jle    0x1400176ae
   1400173dc:	mov    rsi,r12
   1400173df:	call   0x1400093c8
   1400173e4:	movsxd rcx,DWORD PTR [r14+0x4]
   1400173e8:	add    rax,rsi
   1400173eb:	cmp    DWORD PTR [rcx+rax*1+0x4],r12d
   1400173f0:	je     0x14001740d
   1400173f2:	call   0x1400093c8
   1400173f7:	movsxd rcx,DWORD PTR [r14+0x4]
   1400173fb:	add    rax,rsi
   1400173fe:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   140017403:	call   0x1400093c8
   140017408:	add    rax,rbx
   14001740b:	jmp    0x140017410
   14001740d:	mov    rax,r12
   140017410:	lea    rdx,[rip+0x2f761]        # 0x140046b78
   140017417:	mov    rcx,rax
   14001741a:	call   0x140009a50
   14001741f:	test   al,al
   140017421:	jne    0x1400176b4
   140017427:	inc    r15d
   14001742a:	add    rsi,0x14
   14001742e:	cmp    r15d,DWORD PTR [r14]
   140017431:	jl     0x1400173df
   140017433:	jmp    0x1400176ae
   140017438:	mov    r14,QWORD PTR [rbp+0x57]
   14001743c:	cmp    DWORD PTR [rdi],0xe06d7363
   140017442:	jne    0x140017676
   140017448:	cmp    DWORD PTR [rdi+0x18],0x4
   14001744c:	jne    0x140017676
   140017452:	mov    eax,DWORD PTR [rdi+0x20]
   140017455:	sub    eax,0x19930520
   14001745a:	cmp    eax,0x2
   14001745d:	ja     0x140017676
   140017463:	cmp    DWORD PTR [rbx+0xc],r12d
   140017467:	jbe    0x1400175bb
   14001746d:	mov    r8d,DWORD PTR [rbp+0x77]
   140017471:	lea    rax,[rbp-0x41]
   140017475:	mov    QWORD PTR [rsp+0x30],r15
   14001747a:	mov    QWORD PTR [rsp+0x28],rax
   14001747f:	lea    rax,[rbp-0x45]
   140017483:	mov    r9d,esi
   140017486:	mov    rdx,rbx
   140017489:	mov    rcx,r13
   14001748c:	mov    QWORD PTR [rsp+0x20],rax
   140017491:	call   0x14000906c
   140017496:	mov    ecx,DWORD PTR [rbp-0x45]
   140017499:	mov    edx,DWORD PTR [rbp-0x41]
   14001749c:	cmp    ecx,edx
   14001749e:	jae    0x1400175bb
   1400174a4:	lea    r14,[rax+0x10]
   1400174a8:	cmp    DWORD PTR [r14-0x10],esi
   1400174ac:	jg     0x14001759d
   1400174b2:	cmp    esi,DWORD PTR [r14-0xc]
   1400174b6:	jg     0x14001759d
   1400174bc:	call   0x1400093c8
   1400174c1:	movsxd r12,DWORD PTR [r14]
   1400174c4:	add    r12,rax
   1400174c7:	mov    eax,DWORD PTR [r14-0x4]
   1400174cb:	mov    DWORD PTR [rbp-0x3d],eax
   1400174ce:	test   eax,eax
   1400174d0:	jle    0x140017597
   1400174d6:	call   0x1400093e0
   1400174db:	mov    rcx,QWORD PTR [rdi+0x30]
   1400174df:	movsxd rdx,DWORD PTR [rcx+0xc]
   1400174e3:	add    rax,0x4
   1400174e7:	add    rax,rdx
   1400174ea:	mov    QWORD PTR [rbp-0x31],rax
   1400174ee:	call   0x1400093e0
   1400174f3:	mov    rcx,QWORD PTR [rdi+0x30]
   1400174f7:	movsxd rdx,DWORD PTR [rcx+0xc]
   1400174fb:	mov    ecx,DWORD PTR [rax+rdx*1]
   1400174fe:	mov    DWORD PTR [rbp-0x39],ecx
   140017501:	test   ecx,ecx
   140017503:	jle    0x14001753c
   140017505:	call   0x1400093e0
   14001750a:	mov    rcx,QWORD PTR [rbp-0x31]
   14001750e:	mov    r8,QWORD PTR [rdi+0x30]
   140017512:	movsxd rcx,DWORD PTR [rcx]
   140017515:	add    rax,rcx
   140017518:	mov    rcx,r12
   14001751b:	mov    rdx,rax
   14001751e:	mov    QWORD PTR [rbp-0x29],rax
   140017522:	call   0x1400189ec
   140017527:	test   eax,eax
   140017529:	jne    0x140017547
   14001752b:	mov    eax,DWORD PTR [rbp-0x39]
   14001752e:	add    QWORD PTR [rbp-0x31],0x4
   140017533:	dec    eax
   140017535:	mov    DWORD PTR [rbp-0x39],eax
   140017538:	test   eax,eax
   14001753a:	jg     0x140017505
   14001753c:	mov    eax,DWORD PTR [rbp-0x3d]
   14001753f:	dec    eax
   140017541:	add    r12,0x14
   140017545:	jmp    0x1400174cb
   140017547:	mov    al,BYTE PTR [rbp+0x6f]
   14001754a:	mov    r8,QWORD PTR [rbp+0x57]
   14001754e:	mov    r9,r15
   140017551:	mov    BYTE PTR [rsp+0x58],al
   140017555:	mov    al,BYTE PTR [rbp+0x47]
   140017558:	mov    rdx,r13
   14001755b:	mov    BYTE PTR [rsp+0x50],al
   14001755f:	mov    rax,QWORD PTR [rbp+0x7f]
   140017563:	mov    rcx,rdi
   140017566:	mov    QWORD PTR [rsp+0x48],rax
   14001756b:	mov    eax,DWORD PTR [rbp+0x77]
   14001756e:	mov    BYTE PTR [rbp-0x49],0x1
   140017572:	mov    DWORD PTR [rsp+0x40],eax
   140017576:	lea    rax,[r14-0x10]
   14001757a:	mov    QWORD PTR [rsp+0x38],rax
   14001757f:	mov    rax,QWORD PTR [rbp-0x29]
   140017583:	mov    QWORD PTR [rsp+0x30],rax
   140017588:	mov    QWORD PTR [rsp+0x28],r12
   14001758d:	mov    QWORD PTR [rsp+0x20],rbx
   140017592:	call   0x1400170f4
   140017597:	mov    edx,DWORD PTR [rbp-0x41]
   14001759a:	mov    ecx,DWORD PTR [rbp-0x45]
   14001759d:	inc    ecx
   14001759f:	add    r14,0x14
   1400175a3:	mov    DWORD PTR [rbp-0x45],ecx
   1400175a6:	cmp    ecx,edx
   1400175a8:	jb     0x1400174a8
   1400175ae:	xor    r12d,r12d
   1400175b1:	cmp    BYTE PTR [rbp-0x49],r12b
   1400175b5:	jne    0x140017648
   1400175bb:	mov    eax,DWORD PTR [rbx]
   1400175bd:	and    eax,0x1fffffff
   1400175c2:	cmp    eax,0x19930521
   1400175c7:	jb     0x140017648
   1400175c9:	mov    esi,DWORD PTR [rbx+0x20]
   1400175cc:	test   esi,esi
   1400175ce:	je     0x1400175dd
   1400175d0:	movsxd rsi,esi
   1400175d3:	call   0x1400093c8
   1400175d8:	add    rax,rsi
   1400175db:	jmp    0x1400175e0
   1400175dd:	mov    rax,r12
   1400175e0:	test   rax,rax
   1400175e3:	je     0x140017648
   1400175e5:	test   esi,esi
   1400175e7:	je     0x1400175fa
   1400175e9:	call   0x1400093c8
   1400175ee:	mov    rdx,rax
   1400175f1:	movsxd rax,DWORD PTR [rbx+0x20]
   1400175f5:	add    rdx,rax
   1400175f8:	jmp    0x1400175fd
   1400175fa:	mov    rdx,r12
   1400175fd:	mov    rcx,rdi
   140017600:	call   0x140017960
   140017605:	test   al,al
   140017607:	jne    0x140017648
   140017609:	lea    r9,[rbp+0x47]
   14001760d:	mov    r8,rbx
   140017610:	mov    rdx,r15
   140017613:	mov    rcx,r13
   140017616:	call   0x140008fa0
   14001761b:	mov    cl,BYTE PTR [rbp+0x6f]
   14001761e:	mov    r8,QWORD PTR [rbp+0x57]
   140017622:	mov    BYTE PTR [rsp+0x40],cl
   140017626:	mov    QWORD PTR [rsp+0x38],r15
   14001762b:	mov    QWORD PTR [rsp+0x30],rbx
   140017630:	or     DWORD PTR [rsp+0x28],0xffffffff
   140017635:	mov    r9,rax
   140017638:	mov    rdx,rdi
   14001763b:	mov    rcx,r13
   14001763e:	mov    QWORD PTR [rsp+0x20],r12
   140017643:	call   0x140009470
   140017648:	call   0x140010d3c
   14001764d:	cmp    QWORD PTR [rax+0x108],r12
   140017654:	je     0x14001765b
   140017656:	call   0x140018c4c
   14001765b:	mov    rbx,QWORD PTR [rsp+0xf8]
   140017663:	add    rsp,0xb0
   14001766a:	pop    r15
   14001766c:	pop    r14
   14001766e:	pop    r13
   140017670:	pop    r12
   140017672:	pop    rdi
   140017673:	pop    rsi
   140017674:	pop    rbp
   140017675:	ret    
   140017676:	cmp    DWORD PTR [rbx+0xc],r12d
   14001767a:	jbe    0x140017648
   14001767c:	cmp    BYTE PTR [rbp+0x6f],r12b
   140017680:	jne    0x1400176f2
   140017682:	mov    rax,QWORD PTR [rbp+0x7f]
   140017686:	mov    r9,r15
   140017689:	mov    r8,r14
   14001768c:	mov    QWORD PTR [rsp+0x38],rax
   140017691:	mov    eax,DWORD PTR [rbp+0x77]
   140017694:	mov    rdx,r13
   140017697:	mov    DWORD PTR [rsp+0x30],eax
   14001769b:	mov    rcx,rdi
   14001769e:	mov    DWORD PTR [rsp+0x28],esi
   1400176a2:	mov    QWORD PTR [rsp+0x20],rbx
   1400176a7:	call   0x1400176f8
   1400176ac:	jmp    0x140017648
   1400176ae:	call   0x140018c6c
   1400176b3:	int3   
   1400176b4:	mov    dl,0x1
   1400176b6:	mov    rcx,rdi
   1400176b9:	call   0x140016fe8
   1400176be:	lea    rax,[rip+0x211fb]        # 0x1400388c0
   1400176c5:	lea    rdx,[rbp+0x47]
   1400176c9:	lea    rcx,[rbp-0x19]
   1400176cd:	mov    QWORD PTR [rbp+0x47],rax
   1400176d1:	call   0x14000f748
   1400176d6:	lea    rax,[rip+0x211d3]        # 0x1400388b0
   1400176dd:	lea    rdx,[rip+0x2c284]        # 0x140043968
   1400176e4:	lea    rcx,[rbp-0x19]
   1400176e8:	mov    QWORD PTR [rbp-0x19],rax
   1400176ec:	call   0x14000fa88
   1400176f1:	int3   
   1400176f2:	call   0x140018c6c
   1400176f7:	int3   
   1400176f8:	mov    QWORD PTR [rsp+0x10],rbx
   1400176fd:	mov    QWORD PTR [rsp+0x18],r8
   140017702:	push   rbp
   140017703:	push   rsi
   140017704:	push   rdi
   140017705:	push   r12
   140017707:	push   r13
   140017709:	push   r14
   14001770b:	push   r15
   14001770d:	sub    rsp,0x70
   140017711:	cmp    DWORD PTR [rcx],0x80000003
   140017717:	mov    r15,r9
   14001771a:	mov    rdi,r8
   14001771d:	mov    r12,rdx
   140017720:	mov    rsi,rcx
   140017723:	je     0x140017945
   140017729:	call   0x140010d3c
   14001772e:	mov    rbp,QWORD PTR [rsp+0xd0]
   140017736:	cmp    QWORD PTR [rax+0xe0],0x0
   14001773e:	je     0x1400177a1
   140017740:	xor    ecx,ecx
   140017742:	call   QWORD PTR [rip+0x1dad8]        # 0x140035220
   140017748:	mov    rbx,rax
   14001774b:	call   0x140010d3c
   140017750:	cmp    QWORD PTR [rax+0xe0],rbx
   140017757:	je     0x1400177a1
   140017759:	cmp    DWORD PTR [rsi],0xe0434f4d
   14001775f:	je     0x1400177a1
   140017761:	cmp    DWORD PTR [rsi],0xe0434352
   140017767:	mov    ebx,DWORD PTR [rsp+0xe0]
   14001776e:	je     0x1400177a8
   140017770:	mov    rax,QWORD PTR [rsp+0xe8]
   140017778:	mov    r9,r15
   14001777b:	mov    r8,rdi
   14001777e:	mov    QWORD PTR [rsp+0x30],rax
   140017783:	mov    rdx,r12
   140017786:	mov    rcx,rsi
   140017789:	mov    DWORD PTR [rsp+0x28],ebx
   14001778d:	mov    QWORD PTR [rsp+0x20],rbp
   140017792:	call   0x1400092d0
   140017797:	test   eax,eax
   140017799:	jne    0x140017945
   14001779f:	jmp    0x1400177a8
   1400177a1:	mov    ebx,DWORD PTR [rsp+0xe0]
   1400177a8:	cmp    DWORD PTR [rbp+0xc],0x0
   1400177ac:	jne    0x1400177b3
   1400177ae:	call   0x140018c4c
   1400177b3:	mov    r14d,DWORD PTR [rsp+0xd8]
   1400177bb:	lea    rax,[rsp+0x60]
   1400177c0:	mov    QWORD PTR [rsp+0x30],r15
   1400177c5:	mov    QWORD PTR [rsp+0x28],rax
   1400177ca:	lea    rax,[rsp+0xb0]
   1400177d2:	mov    r8d,ebx
   1400177d5:	mov    r9d,r14d
   1400177d8:	mov    rdx,rbp
   1400177db:	mov    rcx,r12
   1400177de:	mov    QWORD PTR [rsp+0x20],rax
   1400177e3:	call   0x14000906c
   1400177e8:	mov    ecx,DWORD PTR [rsp+0xb0]
   1400177ef:	cmp    ecx,DWORD PTR [rsp+0x60]
   1400177f3:	jae    0x140017945
   1400177f9:	lea    rdi,[rax+0xc]
   1400177fd:	lea    r13,[rdi-0xc]
   140017801:	cmp    r14d,DWORD PTR [r13+0x0]
   140017805:	jl     0x14001792e
   14001780b:	cmp    r14d,DWORD PTR [rdi-0x8]
   14001780f:	jg     0x14001792e
   140017815:	call   0x1400093c8
   14001781a:	movsxd rcx,DWORD PTR [rdi]
   14001781d:	lea    rdx,[rcx+rcx*4]
   140017821:	movsxd rcx,DWORD PTR [rdi+0x4]
   140017825:	lea    rdx,[rcx+rdx*4]
   140017829:	cmp    DWORD PTR [rax+rdx*1-0x10],0x0
   14001782e:	je     0x140017853
   140017830:	call   0x1400093c8
   140017835:	movsxd rcx,DWORD PTR [rdi]
   140017838:	lea    rdx,[rcx+rcx*4]
   14001783c:	movsxd rcx,DWORD PTR [rdi+0x4]
   140017840:	lea    rdx,[rcx+rdx*4]
   140017844:	movsxd rbx,DWORD PTR [rax+rdx*1-0x10]
   140017849:	call   0x1400093c8
   14001784e:	add    rax,rbx
   140017851:	jmp    0x140017855
   140017853:	xor    eax,eax
   140017855:	test   rax,rax
   140017858:	je     0x1400178a4
   14001785a:	call   0x1400093c8
   14001785f:	movsxd rcx,DWORD PTR [rdi]
   140017862:	lea    rdx,[rcx+rcx*4]
   140017866:	movsxd rcx,DWORD PTR [rdi+0x4]
   14001786a:	lea    rdx,[rcx+rdx*4]
   14001786e:	cmp    DWORD PTR [rax+rdx*1-0x10],0x0
   140017873:	je     0x140017898
   140017875:	call   0x1400093c8
   14001787a:	movsxd rcx,DWORD PTR [rdi]
   14001787d:	lea    rdx,[rcx+rcx*4]
   140017881:	movsxd rcx,DWORD PTR [rdi+0x4]
   140017885:	lea    rdx,[rcx+rdx*4]
   140017889:	movsxd rbx,DWORD PTR [rax+rdx*1-0x10]
   14001788e:	call   0x1400093c8
   140017893:	add    rax,rbx
   140017896:	jmp    0x14001789a
   140017898:	xor    eax,eax
   14001789a:	cmp    BYTE PTR [rax+0x10],0x0
   14001789e:	jne    0x140017927
   1400178a4:	call   0x1400093c8
   1400178a9:	movsxd rcx,DWORD PTR [rdi]
   1400178ac:	lea    rdx,[rcx+rcx*4]
   1400178b0:	movsxd rcx,DWORD PTR [rdi+0x4]
   1400178b4:	lea    rdx,[rcx+rdx*4]
   1400178b8:	test   BYTE PTR [rax+rdx*1-0x14],0x40
   1400178bd:	jne    0x140017927
   1400178bf:	call   0x1400093c8
   1400178c4:	mov    ecx,DWORD PTR [rdi]
   1400178c6:	mov    r8,QWORD PTR [rsp+0xc0]
   1400178ce:	mov    BYTE PTR [rsp+0x58],0x0
   1400178d3:	mov    BYTE PTR [rsp+0x50],0x1
   1400178d8:	dec    ecx
   1400178da:	movsxd rcx,ecx
   1400178dd:	mov    r9,r15
   1400178e0:	lea    rdx,[rcx+rcx*4]
   1400178e4:	lea    rcx,[rax+rdx*4]
   1400178e8:	movsxd rax,DWORD PTR [rdi+0x4]
   1400178ec:	mov    rdx,r12
   1400178ef:	add    rcx,rax
   1400178f2:	mov    rax,QWORD PTR [rsp+0xe8]
   1400178fa:	mov    QWORD PTR [rsp+0x48],rax
   1400178ff:	mov    eax,DWORD PTR [rsp+0xe0]
   140017906:	mov    DWORD PTR [rsp+0x40],eax
   14001790a:	mov    QWORD PTR [rsp+0x38],r13
   14001790f:	and    QWORD PTR [rsp+0x30],0x0
   140017915:	mov    QWORD PTR [rsp+0x28],rcx
   14001791a:	mov    rcx,rsi
   14001791d:	mov    QWORD PTR [rsp+0x20],rbp
   140017922:	call   0x1400170f4
   140017927:	mov    ecx,DWORD PTR [rsp+0xb0]
   14001792e:	inc    ecx
   140017930:	add    rdi,0x14
   140017934:	mov    DWORD PTR [rsp+0xb0],ecx
   14001793b:	cmp    ecx,DWORD PTR [rsp+0x60]
   14001793f:	jb     0x1400177fd
   140017945:	mov    rbx,QWORD PTR [rsp+0xb8]
   14001794d:	add    rsp,0x70
   140017951:	pop    r15
   140017953:	pop    r14
   140017955:	pop    r13
   140017957:	pop    r12
   140017959:	pop    rdi
   14001795a:	pop    rsi
   14001795b:	pop    rbp
   14001795c:	ret    
   14001795d:	int3   
   14001795e:	int3   
   14001795f:	int3   
   140017960:	mov    QWORD PTR [rsp+0x8],rbx
   140017965:	mov    QWORD PTR [rsp+0x10],rbp
   14001796a:	mov    QWORD PTR [rsp+0x18],rsi
   14001796f:	push   rdi
   140017970:	push   r12
   140017972:	push   r13
   140017974:	push   r14
   140017976:	push   r15
   140017978:	sub    rsp,0x20
   14001797c:	mov    rsi,rdx
   14001797f:	mov    r13,rcx
   140017982:	test   rdx,rdx
   140017985:	je     0x140017a2c
   14001798b:	xor    edi,edi
   14001798d:	xor    r14b,r14b
   140017990:	cmp    DWORD PTR [rdx],edi
   140017992:	jle    0x140017a0c
   140017994:	call   0x1400093e0
   140017999:	mov    rdx,rax
   14001799c:	mov    rax,QWORD PTR [r13+0x30]
   1400179a0:	movsxd r15,DWORD PTR [rax+0xc]
   1400179a4:	add    r15,0x4
   1400179a8:	add    r15,rdx
   1400179ab:	call   0x1400093e0
   1400179b0:	mov    rdx,rax
   1400179b3:	mov    rax,QWORD PTR [r13+0x30]
   1400179b7:	movsxd rcx,DWORD PTR [rax+0xc]
   1400179bb:	mov    ebp,DWORD PTR [rdx+rcx*1]
   1400179be:	test   ebp,ebp
   1400179c0:	jle    0x140017a06
   1400179c2:	movsxd rax,edi
   1400179c5:	lea    r12,[rax+rax*4]
   1400179c9:	call   0x1400093e0
   1400179ce:	mov    rbx,rax
   1400179d1:	movsxd rax,DWORD PTR [r15]
   1400179d4:	add    rbx,rax
   1400179d7:	call   0x1400093c8
   1400179dc:	movsxd rcx,DWORD PTR [rsi+0x4]
   1400179e0:	mov    r8,QWORD PTR [r13+0x30]
   1400179e4:	lea    rax,[rax+r12*4]
   1400179e8:	mov    rdx,rbx
   1400179eb:	add    rcx,rax
   1400179ee:	call   0x1400189ec
   1400179f3:	test   eax,eax
   1400179f5:	jne    0x140017a03
   1400179f7:	dec    ebp
   1400179f9:	add    r15,0x4
   1400179fd:	test   ebp,ebp
   1400179ff:	jg     0x1400179c9
   140017a01:	jmp    0x140017a06
   140017a03:	mov    r14b,0x1
   140017a06:	inc    edi
   140017a08:	cmp    edi,DWORD PTR [rsi]
   140017a0a:	jl     0x140017994
   140017a0c:	mov    rbx,QWORD PTR [rsp+0x50]
   140017a11:	mov    rbp,QWORD PTR [rsp+0x58]
   140017a16:	mov    rsi,QWORD PTR [rsp+0x60]
   140017a1b:	mov    al,r14b
   140017a1e:	add    rsp,0x20
   140017a22:	pop    r15
   140017a24:	pop    r14
   140017a26:	pop    r13
   140017a28:	pop    r12
   140017a2a:	pop    rdi
   140017a2b:	ret    
   140017a2c:	call   0x140018c4c
   140017a31:	call   0x140018c6c
   140017a36:	int3   
   140017a37:	int3   
   140017a38:	mov    QWORD PTR [rsp+0x8],rbx
   140017a3d:	mov    QWORD PTR [rsp+0x10],rbp
   140017a42:	mov    QWORD PTR [rsp+0x18],rsi
   140017a47:	push   rdi
   140017a48:	sub    rsp,0x20
   140017a4c:	xor    ebp,ebp
   140017a4e:	mov    rdi,rcx
   140017a51:	cmp    DWORD PTR [rcx],ebp
   140017a53:	jle    0x140017aa4
   140017a55:	xor    esi,esi
   140017a57:	call   0x1400093c8
   140017a5c:	movsxd rcx,DWORD PTR [rdi+0x4]
   140017a60:	add    rax,rsi
   140017a63:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   140017a68:	je     0x140017a85
   140017a6a:	call   0x1400093c8
   140017a6f:	movsxd rcx,DWORD PTR [rdi+0x4]
   140017a73:	add    rax,rsi
   140017a76:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   140017a7b:	call   0x1400093c8
   140017a80:	add    rax,rbx
   140017a83:	jmp    0x140017a87
   140017a85:	xor    eax,eax
   140017a87:	lea    rdx,[rip+0x2f0ea]        # 0x140046b78
   140017a8e:	mov    rcx,rax
   140017a91:	call   0x140009a50
   140017a96:	test   al,al
   140017a98:	jne    0x140017abb
   140017a9a:	inc    ebp
   140017a9c:	add    rsi,0x14
   140017aa0:	cmp    ebp,DWORD PTR [rdi]
   140017aa2:	jl     0x140017a57
   140017aa4:	xor    al,al
   140017aa6:	mov    rbx,QWORD PTR [rsp+0x30]
   140017aab:	mov    rbp,QWORD PTR [rsp+0x38]
   140017ab0:	mov    rsi,QWORD PTR [rsp+0x40]
   140017ab5:	add    rsp,0x20
   140017ab9:	pop    rdi
   140017aba:	ret    
   140017abb:	mov    al,0x1
   140017abd:	jmp    0x140017aa6
   140017abf:	int3   
   140017ac0:	mov    r8d,DWORD PTR [rcx+0x18]
   140017ac4:	mov    edx,DWORD PTR [rcx+0x4]
   140017ac7:	lea    r9,[rcx+0x20]
   140017acb:	mov    ecx,DWORD PTR [rcx]
   140017acd:	rex.W jmp QWORD PTR [rip+0x1d7bc]        # 0x140035290
   140017ad4:	sub    rsp,0x28
   140017ad8:	call   0x140010d3c
   140017add:	xor    ecx,ecx
   140017adf:	cmp    DWORD PTR [rax+0x100],ecx
   140017ae5:	setne  al
   140017ae8:	add    rsp,0x28
   140017aec:	ret    
   140017aed:	int3   
   140017aee:	int3   
   140017aef:	int3   
   140017af0:	mov    rax,rsp
   140017af3:	mov    QWORD PTR [rax+0x8],rbx
   140017af7:	mov    QWORD PTR [rax+0x10],rbp
   140017afb:	mov    QWORD PTR [rax+0x18],rsi
   140017aff:	mov    QWORD PTR [rax+0x20],rdi
   140017b03:	push   r14
   140017b05:	sub    rsp,0x20
   140017b09:	mov    rbx,rdx
   140017b0c:	mov    r14,rcx
   140017b0f:	test   rdx,rdx
   140017b12:	jne    0x140017b19
   140017b14:	call   0x140018c4c
   140017b19:	mov    rbx,QWORD PTR [rbx]
   140017b1c:	test   rbx,rbx
   140017b1f:	jne    0x140017b26
   140017b21:	call   0x140018c4c
   140017b26:	cmp    DWORD PTR [rbx],0xe06d7363
   140017b2c:	jne    0x140017b41
   140017b2e:	cmp    DWORD PTR [rbx+0x18],0x4
   140017b32:	jne    0x140017b41
   140017b34:	mov    eax,DWORD PTR [rbx+0x20]
   140017b37:	sub    eax,0x19930520
   140017b3c:	cmp    eax,0x2
   140017b3f:	jbe    0x140017b46
   140017b41:	call   0x140018c4c
   140017b46:	mov    rbp,QWORD PTR [rbx+0x38]
   140017b4a:	mov    rax,QWORD PTR [rbx+0x30]
   140017b4e:	movsxd rcx,DWORD PTR [rax+0xc]
   140017b52:	lea    rsi,[rbp+0x4]
   140017b56:	mov    edi,DWORD PTR [rcx+rbp*1]
   140017b59:	add    rsi,rcx
   140017b5c:	jmp    0x140017b87
   140017b5e:	movsxd rax,DWORD PTR [rsi]
   140017b61:	mov    rcx,r14
   140017b64:	movsxd rbx,DWORD PTR [rax+rbp*1+0x4]
   140017b69:	call   0x140009b04
   140017b6e:	lea    rdx,[rbp+0x10]
   140017b72:	mov    rcx,rax
   140017b75:	add    rdx,rbx
   140017b78:	call   0x140019160
   140017b7d:	test   eax,eax
   140017b7f:	je     0x140017ba8
   140017b81:	dec    edi
   140017b83:	add    rsi,0x4
   140017b87:	test   edi,edi
   140017b89:	jg     0x140017b5e
   140017b8b:	xor    eax,eax
   140017b8d:	mov    rbx,QWORD PTR [rsp+0x30]
   140017b92:	mov    rbp,QWORD PTR [rsp+0x38]
   140017b97:	mov    rsi,QWORD PTR [rsp+0x40]
   140017b9c:	mov    rdi,QWORD PTR [rsp+0x48]
   140017ba1:	add    rsp,0x20
   140017ba5:	pop    r14
   140017ba7:	ret    
   140017ba8:	mov    eax,0x1
   140017bad:	jmp    0x140017b8d
   140017baf:	int3   
   140017bb0:	mov    QWORD PTR [rip+0x2fe41],rcx        # 0x1400479f8
   140017bb7:	ret    
   140017bb8:	movsxd rax,DWORD PTR [rdx]
   140017bbb:	add    rax,rcx
   140017bbe:	cmp    DWORD PTR [rdx+0x4],0x0
   140017bc2:	jl     0x140017bda
   140017bc4:	movsxd r9,DWORD PTR [rdx+0x4]
   140017bc8:	movsxd rdx,DWORD PTR [rdx+0x8]
   140017bcc:	mov    rcx,QWORD PTR [r9+rcx*1]
   140017bd0:	movsxd r8,DWORD PTR [rdx+rcx*1]
   140017bd4:	add    r8,r9
   140017bd7:	add    rax,r8
   140017bda:	ret    
   140017bdb:	int3   
   140017bdc:	mov    QWORD PTR [rsp+0x8],rbx
   140017be1:	mov    QWORD PTR [rsp+0x10],rsi
   140017be6:	mov    QWORD PTR [rsp+0x18],rdi
   140017beb:	push   r14
   140017bed:	sub    rsp,0x20
   140017bf1:	mov    rdi,r9
   140017bf4:	mov    r14,rcx
   140017bf7:	test   DWORD PTR [r8],0x80000000
   140017bfe:	je     0x140017c05
   140017c00:	mov    rsi,rdx
   140017c03:	jmp    0x140017c0c
   140017c05:	movsxd rsi,DWORD PTR [r8+0x8]
   140017c09:	add    rsi,QWORD PTR [rdx]
   140017c0c:	call   0x140017c94
   140017c11:	dec    eax
   140017c13:	je     0x140017c4c
   140017c15:	dec    eax
   140017c17:	jne    0x140017c74
   140017c19:	xor    ebx,ebx
   140017c1b:	cmp    DWORD PTR [rdi+0x18],ebx
   140017c1e:	je     0x140017c2f
   140017c20:	call   0x1400093e0
   140017c25:	mov    rbx,rax
   140017c28:	movsxd rax,DWORD PTR [rdi+0x18]
   140017c2c:	add    rbx,rax
   140017c2f:	lea    rdx,[rdi+0x8]
   140017c33:	mov    rcx,QWORD PTR [r14+0x28]
   140017c37:	call   0x140017bb8
   140017c3c:	mov    rdx,rax
   140017c3f:	mov    r8d,0x1
   140017c45:	mov    rcx,rsi
   140017c48:	call   rbx
   140017c4a:	jmp    0x140017c74
   140017c4c:	xor    ebx,ebx
   140017c4e:	cmp    DWORD PTR [rdi+0x18],ebx
   140017c51:	je     0x140017c5f
   140017c53:	call   0x1400093e0
   140017c58:	movsxd rbx,DWORD PTR [rdi+0x18]
   140017c5c:	add    rbx,rax
   140017c5f:	lea    rdx,[rdi+0x8]
   140017c63:	mov    rcx,QWORD PTR [r14+0x28]
   140017c67:	call   0x140017bb8
   140017c6c:	mov    rdx,rax
   140017c6f:	mov    rcx,rsi
   140017c72:	call   rbx
   140017c74:	jmp    0x140017c7c
   140017c76:	call   0x140018c6c
   140017c7b:	nop
   140017c7c:	mov    rbx,QWORD PTR [rsp+0x30]
   140017c81:	mov    rsi,QWORD PTR [rsp+0x38]
   140017c86:	mov    rdi,QWORD PTR [rsp+0x40]
   140017c8b:	add    rsp,0x20
   140017c8f:	pop    r14
   140017c91:	ret    
   140017c92:	int3   
   140017c93:	int3   
   140017c94:	mov    QWORD PTR [rsp+0x8],rbx
   140017c99:	mov    QWORD PTR [rsp+0x10],rsi
   140017c9e:	mov    QWORD PTR [rsp+0x18],rdi
   140017ca3:	push   r13
   140017ca5:	push   r14
   140017ca7:	push   r15
   140017ca9:	sub    rsp,0x30
   140017cad:	mov    r14,r9
   140017cb0:	mov    rbx,r8
   140017cb3:	mov    rsi,rdx
   140017cb6:	mov    r13,rcx
   140017cb9:	xor    edi,edi
   140017cbb:	mov    r15d,DWORD PTR [r8+0x4]
   140017cbf:	test   r15d,r15d
   140017cc2:	je     0x140017cd2
   140017cc4:	movsxd r15,r15d
   140017cc7:	call   0x1400093c8
   140017ccc:	lea    rdx,[r15+rax*1]
   140017cd0:	jmp    0x140017cd5
   140017cd2:	mov    rdx,rdi
   140017cd5:	test   rdx,rdx
   140017cd8:	je     0x140017ec7
   140017cde:	test   r15d,r15d
   140017ce1:	je     0x140017cf4
   140017ce3:	call   0x1400093c8
   140017ce8:	mov    rcx,rax
   140017ceb:	movsxd rax,DWORD PTR [rbx+0x4]
   140017cef:	add    rcx,rax
   140017cf2:	jmp    0x140017cf7
   140017cf4:	mov    rcx,rdi
   140017cf7:	cmp    BYTE PTR [rcx+0x10],dil
   140017cfb:	je     0x140017ec7
   140017d01:	cmp    DWORD PTR [rbx+0x8],edi
   140017d04:	jne    0x140017d12
   140017d06:	test   DWORD PTR [rbx],0x80000000
   140017d0c:	je     0x140017ec7
   140017d12:	mov    ecx,DWORD PTR [rbx]
   140017d14:	test   ecx,ecx
   140017d16:	js     0x140017d22
   140017d18:	movsxd rax,DWORD PTR [rbx+0x8]
   140017d1c:	add    rax,QWORD PTR [rsi]
   140017d1f:	mov    rsi,rax
   140017d22:	test   cl,cl
   140017d24:	jns    0x140017d7d
   140017d26:	test   BYTE PTR [r14],0x10
   140017d2a:	je     0x140017d7d
   140017d2c:	mov    rax,QWORD PTR [rip+0x2fcc5]        # 0x1400479f8
   140017d33:	test   rax,rax
   140017d36:	je     0x140017d7d
   140017d38:	call   rax
   140017d3a:	mov    r15,rax
   140017d3d:	mov    ebx,0x1
   140017d42:	mov    edx,ebx
   140017d44:	mov    rcx,rax
   140017d47:	call   0x140023c40
   140017d4c:	test   eax,eax
   140017d4e:	je     0x140017eb7
   140017d54:	mov    edx,ebx
   140017d56:	mov    rcx,rsi
   140017d59:	call   0x140023c4c
   140017d5e:	test   eax,eax
   140017d60:	je     0x140017eb7
   140017d66:	mov    QWORD PTR [rsi],r15
   140017d69:	mov    rcx,r15
   140017d6c:	lea    rdx,[r14+0x8]
   140017d70:	call   0x140017bb8
   140017d75:	mov    QWORD PTR [rsi],rax
   140017d78:	jmp    0x140017ebd
   140017d7d:	mov    ebx,0x1
   140017d82:	test   cl,0x8
   140017d85:	je     0x140017db5
   140017d87:	mov    edx,ebx
   140017d89:	mov    rcx,QWORD PTR [r13+0x28]
   140017d8d:	call   0x140023c40
   140017d92:	test   eax,eax
   140017d94:	je     0x140017eb7
   140017d9a:	mov    edx,ebx
   140017d9c:	mov    rcx,rsi
   140017d9f:	call   0x140023c4c
   140017da4:	test   eax,eax
   140017da6:	je     0x140017eb7
   140017dac:	mov    rcx,QWORD PTR [r13+0x28]
   140017db0:	mov    QWORD PTR [rsi],rcx
   140017db3:	jmp    0x140017d6c
   140017db5:	test   BYTE PTR [r14],bl
   140017db8:	je     0x140017e0b
   140017dba:	mov    edx,ebx
   140017dbc:	mov    rcx,QWORD PTR [r13+0x28]
   140017dc0:	call   0x140023c40
   140017dc5:	test   eax,eax
   140017dc7:	je     0x140017eb7
   140017dcd:	mov    edx,ebx
   140017dcf:	mov    rcx,rsi
   140017dd2:	call   0x140023c4c
   140017dd7:	test   eax,eax
   140017dd9:	je     0x140017eb7
   140017ddf:	movsxd r8,DWORD PTR [r14+0x14]
   140017de3:	mov    rdx,QWORD PTR [r13+0x28]
   140017de7:	mov    rcx,rsi
   140017dea:	call   0x14000b1c0
   140017def:	cmp    DWORD PTR [r14+0x14],0x8
   140017df4:	jne    0x140017ebd
   140017dfa:	cmp    QWORD PTR [rsi],rdi
   140017dfd:	je     0x140017ebd
   140017e03:	mov    rcx,QWORD PTR [rsi]
   140017e06:	jmp    0x140017d6c
   140017e0b:	cmp    DWORD PTR [r14+0x18],edi
   140017e0f:	je     0x140017e22
   140017e11:	call   0x1400093e0
   140017e16:	mov    rcx,rax
   140017e19:	movsxd rax,DWORD PTR [r14+0x18]
   140017e1d:	add    rcx,rax
   140017e20:	jmp    0x140017e25
   140017e22:	mov    rcx,rdi
   140017e25:	mov    edx,ebx
   140017e27:	test   rcx,rcx
   140017e2a:	mov    rcx,QWORD PTR [r13+0x28]
   140017e2e:	jne    0x140017e68
   140017e30:	call   0x140023c40
   140017e35:	test   eax,eax
   140017e37:	je     0x140017eb7
   140017e39:	mov    edx,ebx
   140017e3b:	mov    rcx,rsi
   140017e3e:	call   0x140023c4c
   140017e43:	test   eax,eax
   140017e45:	je     0x140017eb7
   140017e47:	movsxd rbx,DWORD PTR [r14+0x14]
   140017e4b:	lea    rdx,[r14+0x8]
   140017e4f:	mov    rcx,QWORD PTR [r13+0x28]
   140017e53:	call   0x140017bb8
   140017e58:	mov    rdx,rax
   140017e5b:	mov    r8,rbx
   140017e5e:	mov    rcx,rsi
   140017e61:	call   0x14000b1c0
   140017e66:	jmp    0x140017ebd
   140017e68:	call   0x140023c40
   140017e6d:	test   eax,eax
   140017e6f:	je     0x140017eb7
   140017e71:	mov    edx,ebx
   140017e73:	mov    rcx,rsi
   140017e76:	call   0x140023c4c
   140017e7b:	test   eax,eax
   140017e7d:	je     0x140017eb7
   140017e7f:	cmp    DWORD PTR [r14+0x18],edi
   140017e83:	je     0x140017e96
   140017e85:	call   0x1400093e0
   140017e8a:	mov    rcx,rax
   140017e8d:	movsxd rax,DWORD PTR [r14+0x18]
   140017e91:	add    rcx,rax
   140017e94:	jmp    0x140017e99
   140017e96:	mov    rcx,rdi
   140017e99:	call   0x140023c34
   140017e9e:	test   eax,eax
   140017ea0:	je     0x140017eb7
   140017ea2:	mov    al,BYTE PTR [r14]
   140017ea5:	and    al,0x4
   140017ea7:	neg    al
   140017ea9:	sbb    ecx,ecx
   140017eab:	neg    ecx
   140017ead:	add    ecx,ebx
   140017eaf:	mov    edi,ecx
   140017eb1:	mov    DWORD PTR [rsp+0x20],ecx
   140017eb5:	jmp    0x140017ebd
   140017eb7:	call   0x140018c4c
   140017ebc:	nop
   140017ebd:	mov    eax,edi
   140017ebf:	jmp    0x140017ec9
   140017ec1:	call   0x140018c6c
   140017ec6:	nop
   140017ec7:	xor    eax,eax
   140017ec9:	mov    rbx,QWORD PTR [rsp+0x50]
   140017ece:	mov    rsi,QWORD PTR [rsp+0x58]
   140017ed3:	mov    rdi,QWORD PTR [rsp+0x60]
   140017ed8:	add    rsp,0x30
   140017edc:	pop    r15
   140017ede:	pop    r14
   140017ee0:	pop    r13
   140017ee2:	ret    
   140017ee3:	int3   
   140017ee4:	rex push rbx
   140017ee6:	push   rsi
   140017ee7:	push   rdi
   140017ee8:	push   r12
   140017eea:	push   r13
   140017eec:	push   r14
   140017eee:	push   r15
   140017ef0:	sub    rsp,0x90
   140017ef7:	mov    rdi,rcx
   140017efa:	xor    r15d,r15d
   140017efd:	mov    DWORD PTR [rsp+0x20],r15d
   140017f02:	and    DWORD PTR [rsp+0xd0],r15d
   140017f0a:	and    QWORD PTR [rsp+0x40],r15
   140017f0f:	and    QWORD PTR [rsp+0xe8],r15
   140017f17:	call   0x140010d3c
   140017f1c:	mov    r13,QWORD PTR [rax+0xf8]
   140017f23:	mov    QWORD PTR [rsp+0x50],r13
   140017f28:	call   0x140010d3c
   140017f2d:	mov    rax,QWORD PTR [rax+0xf0]
   140017f34:	mov    QWORD PTR [rsp+0xe0],rax
   140017f3c:	mov    rsi,QWORD PTR [rdi+0x50]
   140017f40:	mov    QWORD PTR [rsp+0xd8],rsi
   140017f48:	mov    rax,QWORD PTR [rdi+0x48]
   140017f4c:	mov    QWORD PTR [rsp+0x48],rax
   140017f51:	mov    rbx,QWORD PTR [rdi+0x40]
   140017f55:	mov    rax,QWORD PTR [rdi+0x30]
   140017f59:	mov    QWORD PTR [rsp+0x58],rax
   140017f5e:	mov    r14,QWORD PTR [rdi+0x28]
   140017f62:	mov    QWORD PTR [rsp+0x60],r14
   140017f67:	call   0x140010d3c
   140017f6c:	mov    QWORD PTR [rax+0xf0],rsi
   140017f73:	call   0x140010d3c
   140017f78:	mov    QWORD PTR [rax+0xf8],rbx
   140017f7f:	call   0x140010d3c
   140017f84:	mov    rdx,QWORD PTR [rax+0xf0]
   140017f8b:	mov    rdx,QWORD PTR [rdx+0x28]
   140017f8f:	lea    rcx,[rsp+0x78]
   140017f94:	call   0x140009324
   140017f99:	mov    r12,rax
   140017f9c:	mov    QWORD PTR [rsp+0x38],rax
   140017fa1:	cmp    QWORD PTR [rdi+0x58],r15
   140017fa5:	je     0x140017fc6
   140017fa7:	mov    DWORD PTR [rsp+0xd0],0x1
   140017fb2:	call   0x140010d3c
   140017fb7:	mov    rcx,QWORD PTR [rax+0x138]
   140017fbe:	mov    QWORD PTR [rsp+0xe8],rcx
   140017fc6:	mov    r8d,0x100
   140017fcc:	mov    rdx,r14
   140017fcf:	mov    rcx,QWORD PTR [rsp+0x58]
   140017fd4:	call   0x140023c70
   140017fd9:	mov    rbx,rax
   140017fdc:	mov    QWORD PTR [rsp+0x40],rax
   140017fe1:	mov    rdi,QWORD PTR [rsp+0xe0]
   140017fe9:	jmp    0x140018066
   140017feb:	mov    DWORD PTR [rsp+0x20],0x1
   140017ff3:	call   0x140010d3c
   140017ff8:	and    DWORD PTR [rax+0x460],0x0
   140017fff:	mov    rsi,QWORD PTR [rsp+0xd8]
   140018007:	cmp    DWORD PTR [rsp+0xd0],0x0
   14001800f:	je     0x140018032
   140018011:	mov    dl,0x1
   140018013:	mov    rcx,rsi
   140018016:	call   0x140016fe8
   14001801b:	mov    rax,QWORD PTR [rsp+0xe8]
   140018023:	lea    r9,[rax+0x20]
   140018027:	mov    r8d,DWORD PTR [rax+0x18]
   14001802b:	mov    edx,DWORD PTR [rax+0x4]
   14001802e:	mov    ecx,DWORD PTR [rax]
   140018030:	jmp    0x14001803f
   140018032:	lea    r9,[rsi+0x20]
   140018036:	mov    r8d,DWORD PTR [rsi+0x18]
   14001803a:	mov    edx,DWORD PTR [rsi+0x4]
   14001803d:	mov    ecx,DWORD PTR [rsi]
   14001803f:	call   QWORD PTR [rip+0x1d24b]        # 0x140035290
   140018045:	mov    r15d,DWORD PTR [rsp+0x20]
   14001804a:	mov    rbx,QWORD PTR [rsp+0x40]
   14001804f:	mov    r13,QWORD PTR [rsp+0x50]
   140018054:	mov    rdi,QWORD PTR [rsp+0xe0]
   14001805c:	mov    r14,QWORD PTR [rsp+0x60]
   140018061:	mov    r12,QWORD PTR [rsp+0x38]
   140018066:	mov    rcx,r12
   140018069:	call   0x140009368
   14001806e:	test   r15d,r15d
   140018071:	jne    0x1400180a5
   140018073:	cmp    DWORD PTR [rsi],0xe06d7363
   140018079:	jne    0x1400180a5
   14001807b:	cmp    DWORD PTR [rsi+0x18],0x4
   14001807f:	jne    0x1400180a5
   140018081:	mov    eax,DWORD PTR [rsi+0x20]
   140018084:	sub    eax,0x19930520
   140018089:	cmp    eax,0x2
   14001808c:	ja     0x1400180a5
   14001808e:	mov    rcx,QWORD PTR [rsi+0x28]
   140018092:	call   0x1400093f8
   140018097:	test   eax,eax
   140018099:	je     0x1400180a5
   14001809b:	mov    dl,0x1
   14001809d:	mov    rcx,rsi
   1400180a0:	call   0x140016fe8
   1400180a5:	call   0x140010d3c
   1400180aa:	mov    QWORD PTR [rax+0xf0],rdi
   1400180b1:	call   0x140010d3c
   1400180b6:	mov    QWORD PTR [rax+0xf8],r13
   1400180bd:	mov    rax,QWORD PTR [rsp+0x48]
   1400180c2:	movsxd rcx,DWORD PTR [rax+0x1c]
   1400180c6:	mov    rax,QWORD PTR [r14]
   1400180c9:	mov    QWORD PTR [rcx+rax*1],0xfffffffffffffffe
   1400180d1:	mov    rax,rbx
   1400180d4:	add    rsp,0x90
   1400180db:	pop    r15
   1400180dd:	pop    r14
   1400180df:	pop    r13
   1400180e1:	pop    r12
   1400180e3:	pop    rdi
   1400180e4:	pop    rsi
   1400180e5:	pop    rbx
   1400180e6:	ret    
   1400180e7:	int3   
   1400180e8:	sub    rsp,0x28
   1400180ec:	test   rcx,rcx
   1400180ef:	je     0x140018128
   1400180f1:	mov    rcx,QWORD PTR [rcx]
   1400180f4:	cmp    DWORD PTR [rcx],0xe06d7363
   1400180fa:	jne    0x140018128
   1400180fc:	cmp    DWORD PTR [rcx+0x18],0x4
   140018100:	jne    0x140018128
   140018102:	mov    eax,DWORD PTR [rcx+0x20]
   140018105:	sub    eax,0x19930520
   14001810a:	cmp    eax,0x2
   14001810d:	ja     0x140018128
   14001810f:	cmp    QWORD PTR [rcx+0x30],0x0
   140018114:	jne    0x140018128
   140018116:	call   0x140010d3c
   14001811b:	inc    DWORD PTR [rax+0x100]
   140018121:	mov    eax,0x1
   140018126:	jmp    0x14001812a
   140018128:	xor    eax,eax
   14001812a:	add    rsp,0x28
   14001812e:	ret    
   14001812f:	int3   
   140018130:	mov    QWORD PTR [rsp+0x10],rbx
   140018135:	mov    QWORD PTR [rsp+0x18],rsi
   14001813a:	mov    QWORD PTR [rsp+0x20],rdi
   14001813f:	push   r12
   140018141:	push   r14
   140018143:	push   r15
   140018145:	sub    rsp,0x60
   140018149:	mov    QWORD PTR [rsp+0x38],rsp
   14001814e:	mov    r12,r9
   140018151:	mov    esi,r8d
   140018154:	mov    rdi,rdx
   140018157:	test   rcx,rcx
   14001815a:	jne    0x140018163
   14001815c:	xor    eax,eax
   14001815e:	jmp    0x14001830b
   140018163:	mov    rbx,QWORD PTR [rcx]
   140018166:	test   rdx,rdx
   140018169:	je     0x140018171
   14001816b:	cmp    BYTE PTR [rdx+0x10],0x0
   14001816f:	jne    0x140018193
   140018171:	cmp    DWORD PTR [rbx],0xe0434f4d
   140018177:	je     0x1400182c6
   14001817d:	cmp    DWORD PTR [rbx],0xe0434352
   140018183:	je     0x1400182c6
   140018189:	test   sil,0x40
   14001818d:	je     0x1400182c6
   140018193:	cmp    DWORD PTR [rbx],0xe06d7363
   140018199:	jne    0x14001815c
   14001819b:	cmp    DWORD PTR [rbx+0x18],0x4
   14001819f:	jne    0x14001815c
   1400181a1:	mov    eax,DWORD PTR [rbx+0x20]
   1400181a4:	sub    eax,0x19930520
   1400181a9:	cmp    eax,0x2
   1400181ac:	ja     0x14001815c
   1400181ae:	cmp    QWORD PTR [rbx+0x30],0x0
   1400181b3:	jne    0x1400181d0
   1400181b5:	call   0x140010d3c
   1400181ba:	cmp    QWORD PTR [rax+0xf0],0x0
   1400181c2:	je     0x14001815c
   1400181c4:	call   0x140010d3c
   1400181c9:	mov    rbx,QWORD PTR [rax+0xf0]
   1400181d0:	call   0x1400093c8
   1400181d5:	mov    r15,rax
   1400181d8:	mov    QWORD PTR [rsp+0x30],rax
   1400181dd:	mov    rcx,QWORD PTR [rbx+0x38]
   1400181e1:	call   0x140009454
   1400181e6:	nop
   1400181e7:	lea    rdx,[rsp+0x80]
   1400181ef:	mov    rcx,rdi
   1400181f2:	call   QWORD PTR [rip+0x1d090]        # 0x140035288
   1400181f8:	mov    QWORD PTR [rsp+0x80],rax
   140018200:	mov    rcx,rax
   140018203:	call   0x140009438
   140018208:	sub    rdi,QWORD PTR [rsp+0x80]
   140018210:	mov    DWORD PTR [rsp+0x44],edi
   140018214:	mov    DWORD PTR [rsp+0x40],esi
   140018218:	bts    esi,0x1f
   14001821c:	mov    DWORD PTR [rsp+0x40],esi
   140018220:	call   0x1400093e0
   140018225:	mov    rcx,QWORD PTR [rbx+0x30]
   140018229:	movsxd rsi,DWORD PTR [rcx+0xc]
   14001822d:	add    rax,0x4
   140018231:	add    rsi,rax
   140018234:	mov    QWORD PTR [rsp+0x28],rsi
   140018239:	call   0x1400093e0
   14001823e:	mov    rcx,QWORD PTR [rbx+0x30]
   140018242:	movsxd rdx,DWORD PTR [rcx+0xc]
   140018246:	mov    edi,DWORD PTR [rax+rdx*1]
   140018249:	mov    DWORD PTR [rsp+0x20],edi
   14001824d:	test   edi,edi
   14001824f:	jle    0x1400182b9
   140018251:	call   0x1400093e0
   140018256:	mov    r14,rax
   140018259:	movsxd rax,DWORD PTR [rsi]
   14001825c:	add    r14,rax
   14001825f:	mov    r8,QWORD PTR [rbx+0x30]
   140018263:	mov    rdx,r14
   140018266:	lea    rcx,[rsp+0x40]
   14001826b:	call   0x1400189ec
   140018270:	test   eax,eax
   140018272:	je     0x1400182a8
   140018274:	call   0x140010d3c
   140018279:	inc    DWORD PTR [rax+0x100]
   14001827f:	test   r12,r12
   140018282:	je     0x140018297
   140018284:	mov    r9,r14
   140018287:	lea    r8,[rsp+0x40]
   14001828c:	mov    rdx,r12
   14001828f:	mov    rcx,rbx
   140018292:	call   0x140017bdc
   140018297:	lea    rdx,[rip+0x68]        # 0x140018306
   14001829e:	mov    rcx,QWORD PTR [rsp+0x38]
   1400182a3:	call   0x14001d0d0
   1400182a8:	dec    edi
   1400182aa:	mov    DWORD PTR [rsp+0x20],edi
   1400182ae:	add    rsi,0x4
   1400182b2:	mov    QWORD PTR [rsp+0x28],rsi
   1400182b7:	jmp    0x14001824d
   1400182b9:	mov    rcx,r15
   1400182bc:	call   0x140009438
   1400182c1:	jmp    0x14001815c
   1400182c6:	cmp    DWORD PTR [rbx],0xe06d7363
   1400182cc:	jne    0x1400182fb
   1400182ce:	cmp    DWORD PTR [rbx+0x18],0x4
   1400182d2:	jne    0x1400182fb
   1400182d4:	mov    eax,DWORD PTR [rbx+0x20]
   1400182d7:	sub    eax,0x19930520
   1400182dc:	cmp    eax,0x2
   1400182df:	ja     0x1400182fb
   1400182e1:	cmp    QWORD PTR [rbx+0x30],0x0
   1400182e6:	jne    0x1400182fb
   1400182e8:	call   0x140010d3c
   1400182ed:	cmp    QWORD PTR [rax+0xf0],0x0
   1400182f5:	je     0x14001815c
   1400182fb:	call   0x140010d3c
   140018300:	inc    DWORD PTR [rax+0x100]
   140018306:	mov    eax,0x1
   14001830b:	lea    r11,[rsp+0x60]
   140018310:	mov    rbx,QWORD PTR [r11+0x28]
   140018314:	mov    rsi,QWORD PTR [r11+0x30]
   140018318:	mov    rdi,QWORD PTR [r11+0x38]
   14001831c:	mov    rsp,r11
   14001831f:	pop    r15
   140018321:	pop    r14
   140018323:	pop    r12
   140018325:	ret    
   140018326:	int3   
   140018327:	int3   
   140018328:	mov    eax,0x20
   14001832d:	ret    
   14001832e:	int3   
   14001832f:	int3   
   140018330:	mov    QWORD PTR [rsp+0x8],rbx
   140018335:	push   rdi
   140018336:	sub    rsp,0x20
   14001833a:	mov    rdi,rdx
   14001833d:	test   rcx,rcx
   140018340:	je     0x1400183b2
   140018342:	mov    rbx,QWORD PTR [rcx]
   140018345:	test   rbx,rbx
   140018348:	je     0x1400183b2
   14001834a:	cmp    DWORD PTR [rbx],0xe06d7363
   140018350:	jne    0x140018378
   140018352:	cmp    DWORD PTR [rbx+0x18],0x4
   140018356:	jne    0x140018378
   140018358:	mov    eax,DWORD PTR [rbx+0x20]
   14001835b:	sub    eax,0x19930520
   140018360:	cmp    eax,0x2
   140018363:	ja     0x140018378
   140018365:	cmp    QWORD PTR [rbx+0x30],0x0
   14001836a:	jne    0x140018378
   14001836c:	call   0x140010d3c
   140018371:	mov    rbx,QWORD PTR [rax+0xf0]
   140018378:	mov    rdx,QWORD PTR [rbx+0x28]
   14001837c:	mov    rcx,rdi
   14001837f:	call   0x140009324
   140018384:	call   0x140010d3c
   140018389:	mov    rcx,QWORD PTR [rax+0xf0]
   140018390:	mov    QWORD PTR [rdi+0x10],rcx
   140018394:	call   0x140010d3c
   140018399:	mov    rcx,QWORD PTR [rax+0xf8]
   1400183a0:	mov    QWORD PTR [rdi+0x18],rcx
   1400183a4:	call   0x140010d3c
   1400183a9:	mov    QWORD PTR [rax+0xf0],rbx
   1400183b0:	jmp    0x1400183bc
   1400183b2:	or     QWORD PTR [rdx+0x10],0xffffffffffffffff
   1400183b7:	or     QWORD PTR [rdx+0x18],0xffffffffffffffff
   1400183bc:	call   0x140010d3c
   1400183c1:	dec    DWORD PTR [rax+0x100]
   1400183c7:	call   0x140010d3c
   1400183cc:	cmp    DWORD PTR [rax+0x100],0x0
   1400183d3:	jge    0x1400183e1
   1400183d5:	call   0x140010d3c
   1400183da:	and    DWORD PTR [rax+0x100],0x0
   1400183e1:	mov    eax,0x1
   1400183e6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400183eb:	add    rsp,0x20
   1400183ef:	pop    rdi
   1400183f0:	ret    
   1400183f1:	int3   
   1400183f2:	int3   
   1400183f3:	int3   
   1400183f4:	mov    QWORD PTR [rsp+0x8],rbx
   1400183f9:	push   rdi
   1400183fa:	sub    rsp,0x20
   1400183fe:	cmp    QWORD PTR [rcx+0x10],0xffffffffffffffff
   140018403:	mov    edi,edx
   140018405:	mov    rbx,rcx
   140018408:	je     0x140018540
   14001840e:	call   0x140009368
   140018413:	test   edi,edi
   140018415:	jne    0x1400184ac
   14001841b:	call   0x140010d3c
   140018420:	mov    rcx,QWORD PTR [rax+0xf0]
   140018427:	cmp    DWORD PTR [rcx],0xe06d7363
   14001842d:	jne    0x1400184ac
   14001842f:	call   0x140010d3c
   140018434:	mov    rcx,QWORD PTR [rax+0xf0]
   14001843b:	cmp    DWORD PTR [rcx+0x18],0x4
   14001843f:	jne    0x1400184ac
   140018441:	call   0x140010d3c
   140018446:	mov    rcx,QWORD PTR [rax+0xf0]
   14001844d:	cmp    DWORD PTR [rcx+0x20],0x19930520
   140018454:	je     0x140018480
   140018456:	call   0x140010d3c
   14001845b:	mov    rcx,QWORD PTR [rax+0xf0]
   140018462:	cmp    DWORD PTR [rcx+0x20],0x19930521
   140018469:	je     0x140018480
   14001846b:	call   0x140010d3c
   140018470:	mov    rcx,QWORD PTR [rax+0xf0]
   140018477:	cmp    DWORD PTR [rcx+0x20],0x19930522
   14001847e:	jne    0x1400184ac
   140018480:	call   0x140010d3c
   140018485:	mov    rcx,QWORD PTR [rax+0xf0]
   14001848c:	mov    rcx,QWORD PTR [rcx+0x28]
   140018490:	call   0x1400093f8
   140018495:	test   eax,eax
   140018497:	je     0x1400184ac
   140018499:	call   0x140010d3c
   14001849e:	mov    dl,0x1
   1400184a0:	mov    rcx,QWORD PTR [rax+0xf0]
   1400184a7:	call   0x140016fe8
   1400184ac:	call   0x140010d3c
   1400184b1:	mov    rcx,QWORD PTR [rax+0xf0]
   1400184b8:	cmp    DWORD PTR [rcx],0xe06d7363
   1400184be:	jne    0x140018520
   1400184c0:	call   0x140010d3c
   1400184c5:	mov    rcx,QWORD PTR [rax+0xf0]
   1400184cc:	cmp    DWORD PTR [rcx+0x18],0x4
   1400184d0:	jne    0x140018520
   1400184d2:	call   0x140010d3c
   1400184d7:	mov    rcx,QWORD PTR [rax+0xf0]
   1400184de:	cmp    DWORD PTR [rcx+0x20],0x19930520
   1400184e5:	je     0x140018511
   1400184e7:	call   0x140010d3c
   1400184ec:	mov    rcx,QWORD PTR [rax+0xf0]
   1400184f3:	cmp    DWORD PTR [rcx+0x20],0x19930521
   1400184fa:	je     0x140018511
   1400184fc:	call   0x140010d3c
   140018501:	mov    rcx,QWORD PTR [rax+0xf0]
   140018508:	cmp    DWORD PTR [rcx+0x20],0x19930522
   14001850f:	jne    0x140018520
   140018511:	test   edi,edi
   140018513:	je     0x140018520
   140018515:	call   0x140010d3c
   14001851a:	dec    DWORD PTR [rax+0x100]
   140018520:	call   0x140010d3c
   140018525:	mov    rcx,QWORD PTR [rbx+0x10]
   140018529:	mov    QWORD PTR [rax+0xf0],rcx
   140018530:	call   0x140010d3c
   140018535:	mov    rcx,QWORD PTR [rbx+0x18]
   140018539:	mov    QWORD PTR [rax+0xf8],rcx
   140018540:	mov    rbx,QWORD PTR [rsp+0x30]
   140018545:	add    rsp,0x20
   140018549:	pop    rdi
   14001854a:	ret    
   14001854b:	int3   
   14001854c:	sub    rsp,0x28
   140018550:	mov    rax,QWORD PTR [rcx]
   140018553:	cmp    DWORD PTR [rax],0xe0434352
   140018559:	je     0x14001856d
   14001855b:	cmp    DWORD PTR [rax],0xe0434f4d
   140018561:	je     0x14001856d
   140018563:	cmp    DWORD PTR [rax],0xe06d7363
   140018569:	jne    0x140018586
   14001856b:	jmp    0x14001858d
   14001856d:	call   0x140010d3c
   140018572:	cmp    DWORD PTR [rax+0x100],0x0
   140018579:	jle    0x140018586
   14001857b:	call   0x140010d3c
   140018580:	dec    DWORD PTR [rax+0x100]
   140018586:	xor    eax,eax
   140018588:	add    rsp,0x28
   14001858c:	ret    
   14001858d:	call   0x140010d3c
   140018592:	and    DWORD PTR [rax+0x100],0x0
   140018599:	call   0x140018c6c
   14001859e:	int3   
   14001859f:	int3   
   1400185a0:	mov    rax,rsp
   1400185a3:	mov    DWORD PTR [rax+0x20],r9d
   1400185a7:	mov    QWORD PTR [rax+0x18],r8
   1400185ab:	mov    QWORD PTR [rax+0x10],rdx
   1400185af:	mov    QWORD PTR [rax+0x8],rcx
   1400185b3:	push   rbx
   1400185b4:	push   rsi
   1400185b5:	push   rdi
   1400185b6:	push   r12
   1400185b8:	push   r13
   1400185ba:	push   r14
   1400185bc:	push   r15
   1400185be:	sub    rsp,0x30
   1400185c2:	mov    r12d,r9d
   1400185c5:	mov    rsi,r8
   1400185c8:	mov    r13,rdx
   1400185cb:	mov    r15,rcx
   1400185ce:	call   0x1400093c8
   1400185d3:	mov    QWORD PTR [rsp+0x28],rax
   1400185d8:	mov    r8,rsi
   1400185db:	mov    rdx,r13
   1400185de:	mov    rcx,r15
   1400185e1:	call   0x140018b1c
   1400185e6:	mov    edi,eax
   1400185e8:	call   0x140010d3c
   1400185ed:	inc    DWORD PTR [rax+0x100]
   1400185f3:	cmp    edi,0xffffffff
   1400185f6:	je     0x1400186e9
   1400185fc:	cmp    edi,r12d
   1400185ff:	jle    0x1400186e9
   140018605:	cmp    edi,0xffffffff
   140018608:	jle    0x14001860f
   14001860a:	cmp    edi,DWORD PTR [rsi+0x4]
   14001860d:	jl     0x140018614
   14001860f:	call   0x140018c4c
   140018614:	movsxd r14,edi
   140018617:	call   0x1400093c8
   14001861c:	movsxd rcx,DWORD PTR [rsi+0x8]
   140018620:	lea    rax,[rax+r14*8]
   140018624:	mov    edi,DWORD PTR [rcx+rax*1]
   140018627:	mov    DWORD PTR [rsp+0x20],edi
   14001862b:	call   0x1400093c8
   140018630:	movsxd rcx,DWORD PTR [rsi+0x8]
   140018634:	lea    rax,[rax+r14*8]
   140018638:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   14001863d:	je     0x14001865b
   14001863f:	call   0x1400093c8
   140018644:	movsxd rcx,DWORD PTR [rsi+0x8]
   140018648:	lea    rax,[rax+r14*8]
   14001864c:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   140018651:	call   0x1400093c8
   140018656:	add    rax,rbx
   140018659:	jmp    0x14001865d
   14001865b:	xor    eax,eax
   14001865d:	test   rax,rax
   140018660:	je     0x1400186c0
   140018662:	mov    r9d,edi
   140018665:	mov    r8,rsi
   140018668:	mov    rdx,r13
   14001866b:	mov    rcx,r15
   14001866e:	call   0x140018b70
   140018673:	call   0x1400093c8
   140018678:	movsxd rcx,DWORD PTR [rsi+0x8]
   14001867c:	lea    rax,[rax+r14*8]
   140018680:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   140018685:	je     0x1400186a3
   140018687:	call   0x1400093c8
   14001868c:	movsxd rcx,DWORD PTR [rsi+0x8]
   140018690:	lea    rax,[rax+r14*8]
   140018694:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   140018699:	call   0x1400093c8
   14001869e:	add    rax,rbx
   1400186a1:	jmp    0x1400186a5
   1400186a3:	xor    eax,eax
   1400186a5:	mov    r8d,0x103
   1400186ab:	mov    rdx,r15
   1400186ae:	mov    rcx,rax
   1400186b1:	call   0x140023c70
   1400186b6:	mov    rcx,QWORD PTR [rsp+0x28]
   1400186bb:	call   0x140009438
   1400186c0:	jmp    0x1400186e0
   1400186c2:	mov    r12d,DWORD PTR [rsp+0x88]
   1400186ca:	mov    rsi,QWORD PTR [rsp+0x80]
   1400186d2:	mov    r13,QWORD PTR [rsp+0x78]
   1400186d7:	mov    r15,QWORD PTR [rsp+0x70]
   1400186dc:	mov    edi,DWORD PTR [rsp+0x20]
   1400186e0:	mov    DWORD PTR [rsp+0x24],edi
   1400186e4:	jmp    0x1400185f3
   1400186e9:	call   0x140010d3c
   1400186ee:	cmp    DWORD PTR [rax+0x100],0x0
   1400186f5:	jle    0x140018702
   1400186f7:	call   0x140010d3c
   1400186fc:	dec    DWORD PTR [rax+0x100]
   140018702:	cmp    edi,0xffffffff
   140018705:	je     0x140018711
   140018707:	cmp    edi,r12d
   14001870a:	jle    0x140018711
   14001870c:	call   0x140018c4c
   140018711:	mov    r9d,edi
   140018714:	mov    r8,rsi
   140018717:	mov    rdx,r13
   14001871a:	mov    rcx,r15
   14001871d:	call   0x140018b70
   140018722:	add    rsp,0x30
   140018726:	pop    r15
   140018728:	pop    r14
   14001872a:	pop    r13
   14001872c:	pop    r12
   14001872e:	pop    rdi
   14001872f:	pop    rsi
   140018730:	pop    rbx
   140018731:	ret    
   140018732:	int3   
   140018733:	int3   
   140018734:	mov    QWORD PTR [rsp+0x8],rbx
   140018739:	mov    QWORD PTR [rsp+0x10],rsi
   14001873e:	push   rdi
   14001873f:	sub    rsp,0x20
   140018743:	and    DWORD PTR [rcx],0x0
   140018746:	mov    rsi,rcx
   140018749:	call   0x140010d3c
   14001874e:	mov    rax,QWORD PTR [rax+0xf0]
   140018755:	test   rax,rax
   140018758:	je     0x1400187b3
   14001875a:	mov    rbx,QWORD PTR [rax+0x30]
   14001875e:	test   rbx,rbx
   140018761:	je     0x140018775
   140018763:	test   BYTE PTR [rbx],0x10
   140018766:	je     0x140018775
   140018768:	mov    rax,QWORD PTR [rax+0x28]
   14001876c:	mov    rax,QWORD PTR [rax]
   14001876f:	mov    rax,QWORD PTR [rax-0x8]
   140018773:	jmp    0x1400187b5
   140018775:	call   0x1400093e0
   14001877a:	movsxd rdi,DWORD PTR [rbx+0xc]
   14001877e:	add    rax,0x4
   140018782:	add    rdi,rax
   140018785:	call   0x1400093e0
   14001878a:	movsxd rcx,DWORD PTR [rbx+0xc]
   14001878e:	mov    ebx,DWORD PTR [rax+rcx*1]
   140018791:	jmp    0x1400187a7
   140018793:	call   0x1400093e0
   140018798:	movsxd rcx,DWORD PTR [rdi]
   14001879b:	test   BYTE PTR [rax+rcx*1],0x10
   14001879f:	jne    0x1400187ad
   1400187a1:	dec    ebx
   1400187a3:	add    rdi,0x4
   1400187a7:	test   ebx,ebx
   1400187a9:	jg     0x140018793
   1400187ab:	jmp    0x1400187b3
   1400187ad:	mov    DWORD PTR [rsi],0x1
   1400187b3:	xor    eax,eax
   1400187b5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400187ba:	mov    rsi,QWORD PTR [rsp+0x38]
   1400187bf:	add    rsp,0x20
   1400187c3:	pop    rdi
   1400187c4:	ret    
   1400187c5:	int3   
   1400187c6:	int3   
   1400187c7:	int3   
   1400187c8:	mov    QWORD PTR [rsp+0x8],rbx
   1400187cd:	mov    QWORD PTR [rsp+0x10],rbp
   1400187d2:	mov    QWORD PTR [rsp+0x18],rsi
   1400187d7:	push   rdi
   1400187d8:	push   r12
   1400187da:	push   r14
   1400187dc:	sub    rsp,0x40
   1400187e0:	mov    rbp,r9
   1400187e3:	mov    r14,r8
   1400187e6:	mov    rsi,rdx
   1400187e9:	mov    rbx,rcx
   1400187ec:	call   0x140010d3c
   1400187f1:	mov    rdi,QWORD PTR [rsp+0x80]
   1400187f9:	cmp    DWORD PTR [rax+0x460],0x0
   140018800:	mov    edx,0x1fffffff
   140018805:	mov    r8d,0x80000029
   14001880b:	mov    r9d,0x80000026
   140018811:	mov    r12d,0x1
   140018817:	jne    0x140018851
   140018819:	cmp    DWORD PTR [rbx],0xe06d7363
   14001881f:	je     0x140018851
   140018821:	cmp    DWORD PTR [rbx],r8d
   140018824:	jne    0x140018836
   140018826:	cmp    DWORD PTR [rbx+0x18],0xf
   14001882a:	jne    0x140018836
   14001882c:	cmp    QWORD PTR [rbx+0x60],0x19930520
   140018834:	je     0x140018851
   140018836:	cmp    DWORD PTR [rbx],r9d
   140018839:	je     0x140018851
   14001883b:	mov    ecx,DWORD PTR [rdi]
   14001883d:	and    ecx,edx
   14001883f:	cmp    ecx,0x19930522
   140018845:	jb     0x140018851
   140018847:	test   BYTE PTR [rdi+0x24],r12b
   14001884b:	jne    0x1400189d0
   140018851:	mov    eax,DWORD PTR [rbx+0x4]
   140018854:	test   al,0x66
   140018856:	je     0x1400188ee
   14001885c:	cmp    DWORD PTR [rdi+0x4],0x0
   140018860:	je     0x1400189d0
   140018866:	cmp    DWORD PTR [rsp+0x88],0x0
   14001886e:	jne    0x1400189d0
   140018874:	and    eax,0x20
   140018877:	je     0x1400188b7
   140018879:	cmp    DWORD PTR [rbx],r9d
   14001887c:	jne    0x1400188b7
   14001887e:	mov    r8,QWORD PTR [r14+0xf8]
   140018885:	mov    rdx,rbp
   140018888:	mov    rcx,rdi
   14001888b:	call   0x140018bc0
   140018890:	mov    ebx,eax
   140018892:	cmp    eax,0xffffffff
   140018895:	jl     0x14001889c
   140018897:	cmp    eax,DWORD PTR [rdi+0x4]
   14001889a:	jl     0x1400188a1
   14001889c:	call   0x140018c4c
   1400188a1:	mov    r9d,ebx
   1400188a4:	mov    rcx,rsi
   1400188a7:	mov    rdx,rbp
   1400188aa:	mov    r8,rdi
   1400188ad:	call   0x1400185a0
   1400188b2:	jmp    0x1400189d0
   1400188b7:	test   eax,eax
   1400188b9:	je     0x1400188db
   1400188bb:	cmp    DWORD PTR [rbx],r8d
   1400188be:	jne    0x1400188db
   1400188c0:	mov    esi,DWORD PTR [rbx+0x38]
   1400188c3:	cmp    esi,0xffffffff
   1400188c6:	jl     0x1400188cd
   1400188c8:	cmp    esi,DWORD PTR [rdi+0x4]
   1400188cb:	jl     0x1400188d2
   1400188cd:	call   0x140018c4c
   1400188d2:	mov    rcx,QWORD PTR [rbx+0x28]
   1400188d6:	mov    r9d,esi
   1400188d9:	jmp    0x1400188a7
   1400188db:	mov    r8,rdi
   1400188de:	mov    rdx,rbp
   1400188e1:	mov    rcx,rsi
   1400188e4:	call   0x140009198
   1400188e9:	jmp    0x1400189d0
   1400188ee:	cmp    DWORD PTR [rdi+0xc],0x0
   1400188f2:	jne    0x140018922
   1400188f4:	mov    eax,DWORD PTR [rdi]
   1400188f6:	and    eax,edx
   1400188f8:	cmp    eax,0x19930521
   1400188fd:	jb     0x1400189d0
   140018903:	cmp    DWORD PTR [rdi+0x20],0x0
   140018907:	je     0x140018917
   140018909:	call   0x1400093c8
   14001890e:	movsxd rcx,DWORD PTR [rdi+0x20]
   140018912:	add    rax,rcx
   140018915:	jmp    0x140018919
   140018917:	xor    eax,eax
   140018919:	test   rax,rax
   14001891c:	je     0x1400189d0
   140018922:	cmp    DWORD PTR [rbx],0xe06d7363
   140018928:	jne    0x140018997
   14001892a:	cmp    DWORD PTR [rbx+0x18],0x3
   14001892e:	jb     0x140018997
   140018930:	cmp    DWORD PTR [rbx+0x20],0x19930522
   140018937:	jbe    0x140018997
   140018939:	mov    rax,QWORD PTR [rbx+0x30]
   14001893d:	cmp    DWORD PTR [rax+0x8],0x0
   140018941:	je     0x140018955
   140018943:	call   0x1400093e0
   140018948:	mov    rcx,QWORD PTR [rbx+0x30]
   14001894c:	movsxd r10,DWORD PTR [rcx+0x8]
   140018950:	add    r10,rax
   140018953:	jmp    0x140018958
   140018955:	xor    r10d,r10d
   140018958:	test   r10,r10
   14001895b:	je     0x140018997
   14001895d:	movzx  eax,BYTE PTR [rsp+0x98]
   140018965:	mov    r9,rbp
   140018968:	mov    r8,r14
   14001896b:	mov    DWORD PTR [rsp+0x38],eax
   14001896f:	mov    rax,QWORD PTR [rsp+0x90]
   140018977:	mov    rdx,rsi
   14001897a:	mov    QWORD PTR [rsp+0x30],rax
   14001897f:	mov    eax,DWORD PTR [rsp+0x88]
   140018986:	mov    rcx,rbx
   140018989:	mov    DWORD PTR [rsp+0x28],eax
   14001898d:	mov    QWORD PTR [rsp+0x20],rdi
   140018992:	call   r10
   140018995:	jmp    0x1400189d3
   140018997:	mov    rax,QWORD PTR [rsp+0x90]
   14001899f:	mov    r9,rbp
   1400189a2:	mov    r8,r14
   1400189a5:	mov    QWORD PTR [rsp+0x38],rax
   1400189aa:	mov    eax,DWORD PTR [rsp+0x88]
   1400189b1:	mov    rdx,rsi
   1400189b4:	mov    DWORD PTR [rsp+0x30],eax
   1400189b8:	mov    al,BYTE PTR [rsp+0x98]
   1400189bf:	mov    rcx,rbx
   1400189c2:	mov    BYTE PTR [rsp+0x28],al
   1400189c6:	mov    QWORD PTR [rsp+0x20],rdi
   1400189cb:	call   0x140017244
   1400189d0:	mov    eax,r12d
   1400189d3:	mov    rbx,QWORD PTR [rsp+0x60]
   1400189d8:	mov    rbp,QWORD PTR [rsp+0x68]
   1400189dd:	mov    rsi,QWORD PTR [rsp+0x70]
   1400189e2:	add    rsp,0x40
   1400189e6:	pop    r14
   1400189e8:	pop    r12
   1400189ea:	pop    rdi
   1400189eb:	ret    
   1400189ec:	mov    rax,rsp
   1400189ef:	mov    QWORD PTR [rax+0x8],rbx
   1400189f3:	mov    QWORD PTR [rax+0x10],rbp
   1400189f7:	mov    QWORD PTR [rax+0x18],rsi
   1400189fb:	mov    QWORD PTR [rax+0x20],rdi
   1400189ff:	push   r14
   140018a01:	sub    rsp,0x20
   140018a05:	mov    esi,DWORD PTR [rcx+0x4]
   140018a08:	xor    ebx,ebx
   140018a0a:	mov    r14,r8
   140018a0d:	mov    rbp,rdx
   140018a10:	mov    rdi,rcx
   140018a13:	test   esi,esi
   140018a15:	je     0x140018a25
   140018a17:	movsxd rsi,esi
   140018a1a:	call   0x1400093c8
   140018a1f:	lea    rcx,[rsi+rax*1]
   140018a23:	jmp    0x140018a28
   140018a25:	mov    rcx,rbx
   140018a28:	test   rcx,rcx
   140018a2b:	je     0x140018af9
   140018a31:	test   esi,esi
   140018a33:	je     0x140018a44
   140018a35:	movsxd rsi,DWORD PTR [rdi+0x4]
   140018a39:	call   0x1400093c8
   140018a3e:	lea    rcx,[rsi+rax*1]
   140018a42:	jmp    0x140018a47
   140018a44:	mov    rcx,rbx
   140018a47:	cmp    BYTE PTR [rcx+0x10],bl
   140018a4a:	je     0x140018af9
   140018a50:	test   BYTE PTR [rdi],0x80
   140018a53:	je     0x140018a5f
   140018a55:	test   BYTE PTR [rbp+0x0],0x10
   140018a59:	jne    0x140018af9
   140018a5f:	test   esi,esi
   140018a61:	je     0x140018a74
   140018a63:	call   0x1400093c8
   140018a68:	mov    rsi,rax
   140018a6b:	movsxd rax,DWORD PTR [rdi+0x4]
   140018a6f:	add    rsi,rax
   140018a72:	jmp    0x140018a77
   140018a74:	mov    rsi,rbx
   140018a77:	call   0x1400093e0
   140018a7c:	mov    rcx,rax
   140018a7f:	movsxd rax,DWORD PTR [rbp+0x4]
   140018a83:	add    rcx,rax
   140018a86:	cmp    rsi,rcx
   140018a89:	je     0x140018ac5
   140018a8b:	cmp    DWORD PTR [rdi+0x4],ebx
   140018a8e:	je     0x140018aa1
   140018a90:	call   0x1400093c8
   140018a95:	mov    rsi,rax
   140018a98:	movsxd rax,DWORD PTR [rdi+0x4]
   140018a9c:	add    rsi,rax
   140018a9f:	jmp    0x140018aa4
   140018aa1:	mov    rsi,rbx
   140018aa4:	call   0x1400093e0
   140018aa9:	movsxd rdx,DWORD PTR [rbp+0x4]
   140018aad:	lea    rcx,[rsi+0x10]
   140018ab1:	add    rdx,0x10
   140018ab5:	add    rdx,rax
   140018ab8:	call   0x140019160
   140018abd:	test   eax,eax
   140018abf:	je     0x140018ac5
   140018ac1:	xor    eax,eax
   140018ac3:	jmp    0x140018afe
   140018ac5:	mov    al,0x2
   140018ac7:	test   BYTE PTR [rbp+0x0],al
   140018aca:	je     0x140018ad1
   140018acc:	test   BYTE PTR [rdi],0x8
   140018acf:	je     0x140018af5
   140018ad1:	test   BYTE PTR [r14],0x1
   140018ad5:	je     0x140018adc
   140018ad7:	test   BYTE PTR [rdi],0x1
   140018ada:	je     0x140018af5
   140018adc:	test   BYTE PTR [r14],0x4
   140018ae0:	je     0x140018ae7
   140018ae2:	test   BYTE PTR [rdi],0x4
   140018ae5:	je     0x140018af5
   140018ae7:	test   BYTE PTR [r14],al
   140018aea:	je     0x140018af0
   140018aec:	test   BYTE PTR [rdi],al
   140018aee:	je     0x140018af5
   140018af0:	mov    ebx,0x1
   140018af5:	mov    eax,ebx
   140018af7:	jmp    0x140018afe
   140018af9:	mov    eax,0x1
   140018afe:	mov    rbx,QWORD PTR [rsp+0x30]
   140018b03:	mov    rbp,QWORD PTR [rsp+0x38]
   140018b08:	mov    rsi,QWORD PTR [rsp+0x40]
   140018b0d:	mov    rdi,QWORD PTR [rsp+0x48]
   140018b12:	add    rsp,0x20
   140018b16:	pop    r14
   140018b18:	ret    
   140018b19:	int3   
   140018b1a:	int3   
   140018b1b:	int3   
   140018b1c:	sub    rsp,0x28
   140018b20:	movsxd r9,DWORD PTR [r8+0x1c]
   140018b24:	mov    rax,QWORD PTR [rcx]
   140018b27:	mov    r10,r8
   140018b2a:	mov    eax,DWORD PTR [r9+rax*1]
   140018b2e:	cmp    eax,0xfffffffe
   140018b31:	jne    0x140018b3e
   140018b33:	mov    r8,QWORD PTR [rdx]
   140018b36:	mov    rcx,r10
   140018b39:	call   0x140018bc0
   140018b3e:	add    rsp,0x28
   140018b42:	ret    
   140018b43:	int3   
   140018b44:	rex push rbx
   140018b46:	sub    rsp,0x20
   140018b4a:	lea    r9,[rsp+0x40]
   140018b4f:	mov    rbx,r8
   140018b52:	call   0x140008fa0
   140018b57:	mov    rcx,QWORD PTR [rax]
   140018b5a:	movsxd rax,DWORD PTR [rbx+0x1c]
   140018b5e:	mov    QWORD PTR [rsp+0x40],rcx
   140018b63:	mov    eax,DWORD PTR [rax+rcx*1+0x4]
   140018b67:	add    rsp,0x20
   140018b6b:	pop    rbx
   140018b6c:	ret    
   140018b6d:	int3   
   140018b6e:	int3   
   140018b6f:	int3   
   140018b70:	movsxd rdx,DWORD PTR [r8+0x1c]
   140018b74:	mov    rax,QWORD PTR [rcx]
   140018b77:	mov    DWORD PTR [rdx+rax*1],r9d
   140018b7b:	ret    
   140018b7c:	mov    QWORD PTR [rsp+0x8],rbx
   140018b81:	push   rdi
   140018b82:	sub    rsp,0x20
   140018b86:	mov    edi,r9d
   140018b89:	lea    r9,[rsp+0x40]
   140018b8e:	mov    rbx,r8
   140018b91:	call   0x140008fa0
   140018b96:	mov    rcx,QWORD PTR [rax]
   140018b99:	movsxd rax,DWORD PTR [rbx+0x1c]
   140018b9d:	mov    QWORD PTR [rsp+0x40],rcx
   140018ba2:	cmp    edi,DWORD PTR [rax+rcx*1+0x4]
   140018ba6:	jle    0x140018bac
   140018ba8:	mov    DWORD PTR [rax+rcx*1+0x4],edi
   140018bac:	mov    rbx,QWORD PTR [rsp+0x30]
   140018bb1:	add    rsp,0x20
   140018bb5:	pop    rdi
   140018bb6:	ret    
   140018bb7:	int3   
   140018bb8:	mov    r8,QWORD PTR [rdx]
   140018bbb:	jmp    0x140018bc0
   140018bc0:	mov    QWORD PTR [rsp+0x8],rbx
   140018bc5:	mov    QWORD PTR [rsp+0x10],rbp
   140018bca:	mov    QWORD PTR [rsp+0x18],rsi
   140018bcf:	push   rdi
   140018bd0:	sub    rsp,0x20
   140018bd4:	mov    rbp,r8
   140018bd7:	mov    rsi,rdx
   140018bda:	mov    rbx,rcx
   140018bdd:	test   rcx,rcx
   140018be0:	jne    0x140018be7
   140018be2:	call   0x140018c4c
   140018be7:	movsxd rax,DWORD PTR [rbx+0x18]
   140018beb:	mov    edi,DWORD PTR [rbx+0x14]
   140018bee:	add    rax,QWORD PTR [rsi+0x8]
   140018bf2:	jne    0x140018bf9
   140018bf4:	call   0x140018c4c
   140018bf9:	xor    r8d,r8d
   140018bfc:	test   edi,edi
   140018bfe:	je     0x140018c34
   140018c00:	mov    r9,QWORD PTR [rsi+0x8]
   140018c04:	movsxd r10,DWORD PTR [rbx+0x18]
   140018c08:	lea    rcx,[r9+r8*8]
   140018c0c:	movsxd rdx,DWORD PTR [rcx+r10*1]
   140018c10:	add    rdx,r9
   140018c13:	cmp    rbp,rdx
   140018c16:	jl     0x140018c20
   140018c18:	inc    r8d
   140018c1b:	cmp    r8d,edi
   140018c1e:	jb     0x140018c08
   140018c20:	test   r8d,r8d
   140018c23:	je     0x140018c34
   140018c25:	lea    ecx,[r8-0x1]
   140018c29:	lea    rax,[r9+rcx*8]
   140018c2d:	mov    eax,DWORD PTR [rax+r10*1+0x4]
   140018c32:	jmp    0x140018c37
   140018c34:	or     eax,0xffffffff
   140018c37:	mov    rbx,QWORD PTR [rsp+0x30]
   140018c3c:	mov    rbp,QWORD PTR [rsp+0x38]
   140018c41:	mov    rsi,QWORD PTR [rsp+0x40]
   140018c46:	add    rsp,0x20
   140018c4a:	pop    rdi
   140018c4b:	ret    
   140018c4c:	sub    rsp,0x28
   140018c50:	mov    rcx,QWORD PTR [rip+0x2eda9]        # 0x140047a00
   140018c57:	call   QWORD PTR [rip+0x1c5cb]        # 0x140035228
   140018c5d:	test   rax,rax
   140018c60:	je     0x140018c66
   140018c62:	call   rax
   140018c64:	jmp    0x140018c66
   140018c66:	call   0x140018c6c
   140018c6b:	nop
   140018c6c:	sub    rsp,0x28
   140018c70:	call   0x140010d3c
   140018c75:	mov    rcx,QWORD PTR [rax+0xd0]
   140018c7c:	test   rcx,rcx
   140018c7f:	je     0x140018c85
   140018c81:	call   rcx
   140018c83:	jmp    0x140018c85
   140018c85:	call   0x14000f2dc
   140018c8a:	nop
   140018c8b:	int3   
   140018c8c:	sub    rsp,0x28
   140018c90:	call   0x140010d3c
   140018c95:	mov    rcx,QWORD PTR [rax+0xd8]
   140018c9c:	test   rcx,rcx
   140018c9f:	je     0x140018ca3
   140018ca1:	call   rcx
   140018ca3:	call   0x140018c6c
   140018ca8:	int3   
   140018ca9:	int3   
   140018caa:	int3   
   140018cab:	int3   
   140018cac:	sub    rsp,0x28
   140018cb0:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x140018c6c
   140018cb7:	call   QWORD PTR [rip+0x1c563]        # 0x140035220
   140018cbd:	mov    QWORD PTR [rip+0x2ed3c],rax        # 0x140047a00
   140018cc4:	add    rsp,0x28
   140018cc8:	ret    
   140018cc9:	int3   
   140018cca:	int3   
   140018ccb:	int3   
   140018ccc:	rex push rbx
   140018cce:	sub    rsp,0x20
   140018cd2:	mov    rbx,rcx
   140018cd5:	call   QWORD PTR [rip+0x1c595]        # 0x140035270
   140018cdb:	mov    ecx,0x1
   140018ce0:	mov    DWORD PTR [rip+0x2f29a],eax        # 0x140047f80
   140018ce6:	call   0x14001d134
   140018ceb:	mov    rcx,rbx
   140018cee:	call   0x14001a0f0
   140018cf3:	cmp    DWORD PTR [rip+0x2f286],0x0        # 0x140047f80
   140018cfa:	jne    0x140018d06
   140018cfc:	mov    ecx,0x1
   140018d01:	call   0x14001d134
   140018d06:	mov    ecx,0xc0000409
   140018d0b:	add    rsp,0x20
   140018d0f:	pop    rbx
   140018d10:	jmp    0x14001a0d0
   140018d15:	int3   
   140018d16:	int3   
   140018d17:	int3   
   140018d18:	mov    QWORD PTR [rsp+0x8],rcx
   140018d1d:	sub    rsp,0x38
   140018d21:	mov    ecx,0x17
   140018d26:	call   0x140033b0e
   140018d2b:	test   eax,eax
   140018d2d:	je     0x140018d36
   140018d2f:	mov    ecx,0x2
   140018d34:	int    0x29
   140018d36:	lea    rcx,[rip+0x2ed73]        # 0x140047ab0
   140018d3d:	call   0x140019904
   140018d42:	mov    rax,QWORD PTR [rsp+0x38]
   140018d47:	mov    QWORD PTR [rip+0x2ee5a],rax        # 0x140047ba8
   140018d4e:	lea    rax,[rsp+0x38]
   140018d53:	add    rax,0x8
   140018d57:	mov    QWORD PTR [rip+0x2edea],rax        # 0x140047b48
   140018d5e:	mov    rax,QWORD PTR [rip+0x2ee43]        # 0x140047ba8
   140018d65:	mov    QWORD PTR [rip+0x2ecb4],rax        # 0x140047a20
   140018d6c:	mov    rax,QWORD PTR [rsp+0x40]
   140018d71:	mov    QWORD PTR [rip+0x2edb8],rax        # 0x140047b30
   140018d78:	mov    DWORD PTR [rip+0x2ec8e],0xc0000409        # 0x140047a10
   140018d82:	mov    DWORD PTR [rip+0x2ec88],0x1        # 0x140047a14
   140018d8c:	mov    DWORD PTR [rip+0x2ec92],0x1        # 0x140047a28
   140018d96:	mov    eax,0x8
   140018d9b:	imul   rax,rax,0x0
   140018d9f:	lea    rcx,[rip+0x2ec8a]        # 0x140047a30
   140018da6:	mov    QWORD PTR [rcx+rax*1],0x2
   140018dae:	mov    eax,0x8
   140018db3:	imul   rax,rax,0x0
   140018db7:	mov    rcx,QWORD PTR [rip+0x2c4b2]        # 0x140045270
   140018dbe:	mov    QWORD PTR [rsp+rax*1+0x20],rcx
   140018dc3:	mov    eax,0x8
   140018dc8:	imul   rax,rax,0x1
   140018dcc:	mov    rcx,QWORD PTR [rip+0x2c4a5]        # 0x140045278
   140018dd3:	mov    QWORD PTR [rsp+rax*1+0x20],rcx
   140018dd8:	lea    rcx,[rip+0x1faf1]        # 0x1400388d0
   140018ddf:	call   0x140018ccc
   140018de4:	add    rsp,0x38
   140018de8:	ret    
   140018de9:	int3   
   140018dea:	int3   
   140018deb:	int3   
   140018dec:	sub    rsp,0x28
   140018df0:	mov    ecx,0x8
   140018df5:	call   0x140018e00
   140018dfa:	add    rsp,0x28
   140018dfe:	ret    
   140018dff:	int3   
   140018e00:	mov    DWORD PTR [rsp+0x8],ecx
   140018e04:	sub    rsp,0x28
   140018e08:	mov    ecx,0x17
   140018e0d:	call   0x140033b0e
   140018e12:	test   eax,eax
   140018e14:	je     0x140018e1e
   140018e16:	mov    eax,DWORD PTR [rsp+0x30]
   140018e1a:	mov    ecx,eax
   140018e1c:	int    0x29
   140018e1e:	lea    rcx,[rip+0x2ec8b]        # 0x140047ab0
   140018e25:	call   0x140019894
   140018e2a:	mov    rax,QWORD PTR [rsp+0x28]
   140018e2f:	mov    QWORD PTR [rip+0x2ed72],rax        # 0x140047ba8
   140018e36:	lea    rax,[rsp+0x28]
   140018e3b:	add    rax,0x8
   140018e3f:	mov    QWORD PTR [rip+0x2ed02],rax        # 0x140047b48
   140018e46:	mov    rax,QWORD PTR [rip+0x2ed5b]        # 0x140047ba8
   140018e4d:	mov    QWORD PTR [rip+0x2ebcc],rax        # 0x140047a20
   140018e54:	mov    DWORD PTR [rip+0x2ebb2],0xc0000409        # 0x140047a10
   140018e5e:	mov    DWORD PTR [rip+0x2ebac],0x1        # 0x140047a14
   140018e68:	mov    DWORD PTR [rip+0x2ebb6],0x1        # 0x140047a28
   140018e72:	mov    eax,0x8
   140018e77:	imul   rax,rax,0x0
   140018e7b:	lea    rcx,[rip+0x2ebae]        # 0x140047a30
   140018e82:	mov    edx,DWORD PTR [rsp+0x30]
   140018e86:	mov    QWORD PTR [rcx+rax*1],rdx
   140018e8a:	lea    rcx,[rip+0x1fa3f]        # 0x1400388d0
   140018e91:	call   0x140018ccc
   140018e96:	add    rsp,0x28
   140018e9a:	ret    
   140018e9b:	int3   
   140018e9c:	mov    QWORD PTR [rsp+0x18],r8
   140018ea1:	mov    DWORD PTR [rsp+0x10],edx
   140018ea5:	mov    DWORD PTR [rsp+0x8],ecx
   140018ea9:	sub    rsp,0x38
   140018ead:	mov    ecx,0x17
   140018eb2:	call   0x140033b0e
   140018eb7:	test   eax,eax
   140018eb9:	je     0x140018ec3
   140018ebb:	mov    eax,DWORD PTR [rsp+0x40]
   140018ebf:	mov    ecx,eax
   140018ec1:	int    0x29
   140018ec3:	lea    rcx,[rip+0x2ebe6]        # 0x140047ab0
   140018eca:	call   0x140019894
   140018ecf:	mov    rax,QWORD PTR [rsp+0x38]
   140018ed4:	mov    QWORD PTR [rip+0x2eccd],rax        # 0x140047ba8
   140018edb:	lea    rax,[rsp+0x38]
   140018ee0:	add    rax,0x8
   140018ee4:	mov    QWORD PTR [rip+0x2ec5d],rax        # 0x140047b48
   140018eeb:	mov    rax,QWORD PTR [rip+0x2ecb6]        # 0x140047ba8
   140018ef2:	mov    QWORD PTR [rip+0x2eb27],rax        # 0x140047a20
   140018ef9:	mov    DWORD PTR [rip+0x2eb0d],0xc0000409        # 0x140047a10
   140018f03:	mov    DWORD PTR [rip+0x2eb07],0x1        # 0x140047a14
   140018f0d:	cmp    DWORD PTR [rsp+0x48],0x0
   140018f12:	jbe    0x140018f24
   140018f14:	cmp    QWORD PTR [rsp+0x50],0x0
   140018f1a:	jne    0x140018f24
   140018f1c:	mov    DWORD PTR [rsp+0x48],0x0
   140018f24:	cmp    DWORD PTR [rsp+0x48],0xe
   140018f29:	jbe    0x140018f35
   140018f2b:	mov    eax,DWORD PTR [rsp+0x48]
   140018f2f:	dec    eax
   140018f31:	mov    DWORD PTR [rsp+0x48],eax
   140018f35:	mov    eax,DWORD PTR [rsp+0x48]
   140018f39:	inc    eax
   140018f3b:	mov    DWORD PTR [rip+0x2eae7],eax        # 0x140047a28
   140018f41:	mov    eax,0x8
   140018f46:	imul   rax,rax,0x0
   140018f4a:	lea    rcx,[rip+0x2eadf]        # 0x140047a30
   140018f51:	mov    edx,DWORD PTR [rsp+0x40]
   140018f55:	mov    QWORD PTR [rcx+rax*1],rdx
   140018f59:	mov    DWORD PTR [rsp+0x20],0x0
   140018f61:	jmp    0x140018f6d
   140018f63:	mov    eax,DWORD PTR [rsp+0x20]
   140018f67:	inc    eax
   140018f69:	mov    DWORD PTR [rsp+0x20],eax
   140018f6d:	mov    eax,DWORD PTR [rsp+0x48]
   140018f71:	cmp    DWORD PTR [rsp+0x20],eax
   140018f75:	jae    0x140018f99
   140018f77:	mov    eax,DWORD PTR [rsp+0x20]
   140018f7b:	mov    ecx,DWORD PTR [rsp+0x20]
   140018f7f:	inc    ecx
   140018f81:	mov    ecx,ecx
   140018f83:	lea    rdx,[rip+0x2eaa6]        # 0x140047a30
   140018f8a:	mov    r8,QWORD PTR [rsp+0x50]
   140018f8f:	mov    rax,QWORD PTR [r8+rax*8]
   140018f93:	mov    QWORD PTR [rdx+rcx*8],rax
   140018f97:	jmp    0x140018f63
   140018f99:	lea    rcx,[rip+0x1f930]        # 0x1400388d0
   140018fa0:	call   0x140018ccc
   140018fa5:	add    rsp,0x38
   140018fa9:	ret    
   140018faa:	int3   
   140018fab:	int3   
   140018fac:	mov    QWORD PTR [rsp+0x8],rbx
   140018fb1:	mov    QWORD PTR [rsp+0x10],rbp
   140018fb6:	mov    QWORD PTR [rsp+0x18],rsi
   140018fbb:	push   rdi
   140018fbc:	sub    rsp,0x10
   140018fc0:	xor    ecx,ecx
   140018fc2:	xor    eax,eax
   140018fc4:	xor    edi,edi
   140018fc6:	cpuid  
   140018fc8:	mov    DWORD PTR [rip+0x2d19a],0x2        # 0x14004616c
   140018fd2:	mov    DWORD PTR [rip+0x2d18c],0x1        # 0x140046168
   140018fdc:	mov    r11d,ebx
   140018fdf:	mov    ebx,ecx
   140018fe1:	mov    r8d,edx
   140018fe4:	xor    ebx,0x6c65746e
   140018fea:	mov    r9d,edx
   140018fed:	mov    edx,r11d
   140018ff0:	xor    r8d,0x49656e69
   140018ff7:	xor    edx,0x756e6547
   140018ffd:	mov    ebp,eax
   140018fff:	or     r8d,ebx
   140019002:	lea    eax,[rdi+0x1]
   140019005:	or     r8d,edx
   140019008:	sete   r10b
   14001900c:	xor    r11d,0x68747541
   140019013:	xor    r9d,0x69746e65
   14001901a:	or     r11d,r9d
   14001901d:	xor    ecx,0x444d4163
   140019023:	or     r11d,ecx
   140019026:	sete   sil
   14001902a:	xor    ecx,ecx
   14001902c:	cpuid  
   14001902e:	mov    r11d,ecx
   140019031:	mov    r9d,eax
   140019034:	mov    DWORD PTR [rsp+0x4],ebx
   140019038:	mov    DWORD PTR [rsp+0xc],edx
   14001903c:	test   r10b,r10b
   14001903f:	je     0x140019090
   140019041:	mov    edx,eax
   140019043:	and    edx,0xfff3ff0
   140019049:	cmp    edx,0x106c0
   14001904f:	je     0x14001907c
   140019051:	cmp    edx,0x20660
   140019057:	je     0x14001907c
   140019059:	cmp    edx,0x20670
   14001905f:	je     0x14001907c
   140019061:	add    edx,0xfffcf9b0
   140019067:	cmp    edx,0x20
   14001906a:	ja     0x140019090
   14001906c:	movabs rcx,0x100010001
   140019076:	bt     rcx,rdx
   14001907a:	jae    0x140019090
   14001907c:	mov    r8d,DWORD PTR [rip+0x2ef01]        # 0x140047f84
   140019083:	or     r8d,0x1
   140019087:	mov    DWORD PTR [rip+0x2eef6],r8d        # 0x140047f84
   14001908e:	jmp    0x140019097
   140019090:	mov    r8d,DWORD PTR [rip+0x2eeed]        # 0x140047f84
   140019097:	test   sil,sil
   14001909a:	je     0x1400190b7
   14001909c:	and    r9d,0xff00f00
   1400190a3:	cmp    r9d,0x600f00
   1400190aa:	jl     0x1400190b7
   1400190ac:	or     r8d,0x4
   1400190b0:	mov    DWORD PTR [rip+0x2eecd],r8d        # 0x140047f84
   1400190b7:	mov    eax,0x7
   1400190bc:	cmp    ebp,eax
   1400190be:	jl     0x1400190e2
   1400190c0:	xor    ecx,ecx
   1400190c2:	cpuid  
   1400190c4:	mov    edi,ebx
   1400190c6:	mov    DWORD PTR [rsp],eax
   1400190c9:	mov    DWORD PTR [rsp+0x8],ecx
   1400190cd:	mov    DWORD PTR [rsp+0xc],edx
   1400190d1:	bt     ebx,0x9
   1400190d5:	jae    0x1400190e2
   1400190d7:	or     r8d,0x2
   1400190db:	mov    DWORD PTR [rip+0x2eea2],r8d        # 0x140047f84
   1400190e2:	bt     r11d,0x14
   1400190e7:	jae    0x140019139
   1400190e9:	mov    DWORD PTR [rip+0x2d075],0x2        # 0x140046168
   1400190f3:	mov    DWORD PTR [rip+0x2d06f],0x6        # 0x14004616c
   1400190fd:	bt     r11d,0x1b
   140019102:	jae    0x140019139
   140019104:	bt     r11d,0x1c
   140019109:	jae    0x140019139
   14001910b:	mov    DWORD PTR [rip+0x2d053],0x3        # 0x140046168
   140019115:	mov    DWORD PTR [rip+0x2d04d],0xe        # 0x14004616c
   14001911f:	test   dil,0x20
   140019123:	je     0x140019139
   140019125:	mov    DWORD PTR [rip+0x2d039],0x5        # 0x140046168
   14001912f:	mov    DWORD PTR [rip+0x2d033],0x2e        # 0x14004616c
   140019139:	mov    rbx,QWORD PTR [rsp+0x20]
   14001913e:	mov    rbp,QWORD PTR [rsp+0x28]
   140019143:	mov    rsi,QWORD PTR [rsp+0x30]
   140019148:	xor    eax,eax
   14001914a:	add    rsp,0x10
   14001914e:	pop    rdi
   14001914f:	ret    
   140019150:	int3   
   140019151:	int3   
   140019152:	int3   
   140019153:	int3   
   140019154:	int3   
   140019155:	int3   
   140019156:	data16 nop WORD PTR [rax+rax*1+0x0]
   140019160:	sub    rdx,rcx
   140019163:	test   cl,0x7
   140019166:	je     0x14001917c
   140019168:	movzx  eax,BYTE PTR [rcx]
   14001916b:	cmp    al,BYTE PTR [rcx+rdx*1]
   14001916e:	jne    0x1400191bf
   140019170:	inc    rcx
   140019173:	test   al,al
   140019175:	je     0x1400191bc
   140019177:	test   cl,0x7
   14001917a:	jne    0x140019168
   14001917c:	movabs r11,0x8080808080808080
   140019186:	movabs r10,0xfefefefefefefeff
   140019190:	lea    eax,[ecx+edx*1]
   140019194:	and    eax,0xfff
   140019199:	cmp    eax,0xff8
   14001919e:	ja     0x140019168
   1400191a0:	mov    rax,QWORD PTR [rcx]
   1400191a3:	cmp    rax,QWORD PTR [rcx+rdx*1]
   1400191a7:	jne    0x140019168
   1400191a9:	lea    r9,[r10+rax*1]
   1400191ad:	not    rax
   1400191b0:	add    rcx,0x8
   1400191b4:	and    rax,r9
   1400191b7:	test   r11,rax
   1400191ba:	je     0x140019190
   1400191bc:	xor    eax,eax
   1400191be:	ret    
   1400191bf:	sbb    rax,rax
   1400191c2:	or     rax,0x1
   1400191c6:	ret    
   1400191c7:	int3   
   1400191c8:	mov    r11,rsp
   1400191cb:	mov    QWORD PTR [r11+0x8],rbx
   1400191cf:	mov    QWORD PTR [r11+0x10],rsi
   1400191d3:	mov    QWORD PTR [r11+0x18],rdi
   1400191d7:	mov    QWORD PTR [r11+0x20],r14
   1400191db:	push   r15
   1400191dd:	sub    rsp,0x30
   1400191e1:	mov    r15,rdx
   1400191e4:	mov    rdi,rcx
   1400191e7:	cmp    QWORD PTR [rcx+0x8],0x0
   1400191ec:	jne    0x1400192dd
   1400191f2:	mov    eax,0x2800
   1400191f7:	lea    rdx,[rcx+0x11]
   1400191fb:	mov    WORD PTR [rsp+0x28],ax
   140019200:	lea    rax,[rip+0xffffffffffff6949]        # 0x14000fb50
   140019207:	mov    QWORD PTR [r11-0x18],rax
   14001920b:	lea    r9,[rip+0xffffffffffff6396]        # 0x14000f5a8
   140019212:	xor    r8d,r8d
   140019215:	xor    ecx,ecx
   140019217:	call   0x14002a918
   14001921c:	mov    r14,rax
   14001921f:	test   rax,rax
   140019222:	je     0x1400192e1
   140019228:	mov    rcx,rax
   14001922b:	call   0x14001ca40
   140019230:	mov    rbx,rax
   140019233:	test   rax,rax
   140019236:	je     0x14001924c
   140019238:	dec    rbx
   14001923b:	cmp    BYTE PTR [rbx+r14*1],0x20
   140019240:	jne    0x14001924f
   140019242:	mov    BYTE PTR [rbx+r14*1],0x0
   140019247:	test   rbx,rbx
   14001924a:	jne    0x140019238
   14001924c:	dec    rbx
   14001924f:	mov    ecx,0xe
   140019254:	call   0x140019628
   140019259:	nop
   14001925a:	cmp    QWORD PTR [rdi+0x8],0x0
   14001925f:	jne    0x1400192ca
   140019261:	mov    ecx,0x10
   140019266:	call   0x14000f5a8
   14001926b:	mov    rsi,rax
   14001926e:	test   rax,rax
   140019271:	je     0x1400192ca
   140019273:	lea    rcx,[rbx+0x2]
   140019277:	call   0x14000f5a8
   14001927c:	mov    QWORD PTR [rdi+0x8],rax
   140019280:	test   rax,rax
   140019283:	je     0x1400192c2
   140019285:	mov    r8,r14
   140019288:	lea    rdx,[rbx+0x2]
   14001928c:	mov    rcx,rax
   14001928f:	call   0x140009b0c
   140019294:	test   eax,eax
   140019296:	jne    0x1400192ad
   140019298:	mov    rax,QWORD PTR [rdi+0x8]
   14001929c:	mov    QWORD PTR [rsi],rax
   14001929f:	mov    rax,QWORD PTR [r15+0x8]
   1400192a3:	mov    QWORD PTR [rsi+0x8],rax
   1400192a7:	mov    QWORD PTR [r15+0x8],rsi
   1400192ab:	jmp    0x1400192ca
   1400192ad:	and    QWORD PTR [rsp+0x20],0x0
   1400192b3:	xor    r9d,r9d
   1400192b6:	xor    r8d,r8d
   1400192b9:	xor    edx,edx
   1400192bb:	xor    ecx,ecx
   1400192bd:	call   0x14000b908
   1400192c2:	mov    rcx,rsi
   1400192c5:	call   0x14000fb50
   1400192ca:	mov    rcx,r14
   1400192cd:	call   0x14000fb50
   1400192d2:	nop
   1400192d3:	mov    ecx,0xe
   1400192d8:	call   0x140019844
   1400192dd:	mov    rax,QWORD PTR [rdi+0x8]
   1400192e1:	mov    rbx,QWORD PTR [rsp+0x40]
   1400192e6:	mov    rsi,QWORD PTR [rsp+0x48]
   1400192eb:	mov    rdi,QWORD PTR [rsp+0x50]
   1400192f0:	mov    r14,QWORD PTR [rsp+0x58]
   1400192f5:	add    rsp,0x30
   1400192f9:	pop    r15
   1400192fb:	ret    
   1400192fc:	mov    QWORD PTR [rsp+0x8],rbx
   140019301:	mov    QWORD PTR [rsp+0x10],rsi
   140019306:	mov    QWORD PTR [rsp+0x18],rdi
   14001930b:	push   r12
   14001930d:	push   r14
   14001930f:	push   r15
   140019311:	sub    rsp,0x40
   140019315:	mov    QWORD PTR [rsp+0x38],rsp
   14001931a:	mov    r15,rdx
   14001931d:	mov    rsi,rcx
   140019320:	cmp    QWORD PTR [rcx+0x8],0x0
   140019325:	jne    0x140019437
   14001932b:	mov    ecx,0xe
   140019330:	call   0x140019628
   140019335:	nop
   140019336:	cmp    QWORD PTR [rsi+0x8],0x0
   14001933b:	jne    0x14001942d
   140019341:	mov    eax,0x2800
   140019346:	lea    rdx,[rsi+0x11]
   14001934a:	mov    WORD PTR [rsp+0x28],ax
   14001934f:	lea    rax,[rip+0xffffffffffff67fa]        # 0x14000fb50
   140019356:	mov    QWORD PTR [rsp+0x20],rax
   14001935b:	lea    r9,[rip+0xffffffffffff6246]        # 0x14000f5a8
   140019362:	xor    r8d,r8d
   140019365:	xor    ecx,ecx
   140019367:	call   0x14002a918
   14001936c:	mov    r14,rax
   14001936f:	test   rax,rax
   140019372:	jne    0x14001938c
   140019374:	lea    rdx,[rip+0xa]        # 0x140019385
   14001937b:	mov    rcx,rsp
   14001937e:	call   0x14001d0d0
   140019383:	nop
   140019384:	nop
   140019385:	xor    eax,eax
   140019387:	jmp    0x14001943b
   14001938c:	mov    rcx,rax
   14001938f:	call   0x14001ca40
   140019394:	mov    rbx,rax
   140019397:	mov    QWORD PTR [rsp+0x30],rax
   14001939c:	mov    rcx,rbx
   14001939f:	dec    rbx
   1400193a2:	mov    QWORD PTR [rsp+0x30],rbx
   1400193a7:	test   rcx,rcx
   1400193aa:	je     0x1400193ba
   1400193ac:	cmp    BYTE PTR [rbx+r14*1],0x20
   1400193b1:	jne    0x1400193ba
   1400193b3:	mov    BYTE PTR [rbx+r14*1],0x0
   1400193b8:	jmp    0x14001939c
   1400193ba:	mov    ecx,0x10
   1400193bf:	call   0x14000f5a8
   1400193c4:	mov    rdi,rax
   1400193c7:	test   rax,rax
   1400193ca:	je     0x140019424
   1400193cc:	lea    r12,[rbx+0x2]
   1400193d0:	mov    rcx,r12
   1400193d3:	call   0x14000f5a8
   1400193d8:	mov    rbx,rax
   1400193db:	test   rax,rax
   1400193de:	je     0x14001941c
   1400193e0:	mov    r8,r14
   1400193e3:	mov    rdx,r12
   1400193e6:	mov    rcx,rax
   1400193e9:	call   0x140009b0c
   1400193ee:	test   eax,eax
   1400193f0:	jne    0x140019407
   1400193f2:	mov    QWORD PTR [rsi+0x8],rbx
   1400193f6:	mov    QWORD PTR [rdi],rbx
   1400193f9:	mov    rax,QWORD PTR [r15+0x8]
   1400193fd:	mov    QWORD PTR [rdi+0x8],rax
   140019401:	mov    QWORD PTR [r15+0x8],rdi
   140019405:	jmp    0x140019424
   140019407:	and    QWORD PTR [rsp+0x20],0x0
   14001940d:	xor    r9d,r9d
   140019410:	xor    r8d,r8d
   140019413:	xor    edx,edx
   140019415:	xor    ecx,ecx
   140019417:	call   0x14000b908
   14001941c:	mov    rcx,rdi
   14001941f:	call   0x14000fb50
   140019424:	mov    rcx,r14
   140019427:	call   0x14000fb50
   14001942c:	nop
   14001942d:	mov    ecx,0xe
   140019432:	call   0x140019844
   140019437:	mov    rax,QWORD PTR [rsi+0x8]
   14001943b:	mov    rbx,QWORD PTR [rsp+0x60]
   140019440:	mov    rsi,QWORD PTR [rsp+0x68]
   140019445:	mov    rdi,QWORD PTR [rsp+0x70]
   14001944a:	add    rsp,0x40
   14001944e:	pop    r15
   140019450:	pop    r14
   140019452:	pop    r12
   140019454:	ret    
   140019455:	int3   
   140019456:	int3   
   140019457:	int3   
   140019458:	rex push rbx
   14001945a:	sub    rsp,0x30
   14001945e:	mov    rbx,rcx
   140019461:	mov    ecx,0xe
   140019466:	call   0x140019628
   14001946b:	nop
   14001946c:	mov    rax,QWORD PTR [rbx+0x8]
   140019470:	test   rax,rax
   140019473:	je     0x1400194b4
   140019475:	mov    rcx,QWORD PTR [rip+0x2eb14]        # 0x140047f90
   14001947c:	lea    rdx,[rip+0x2eb05]        # 0x140047f88
   140019483:	mov    QWORD PTR [rsp+0x20],rcx
   140019488:	test   rcx,rcx
   14001948b:	je     0x1400194a6
   14001948d:	cmp    QWORD PTR [rcx],rax
   140019490:	jne    0x1400194a1
   140019492:	mov    rax,QWORD PTR [rcx+0x8]
   140019496:	mov    QWORD PTR [rdx+0x8],rax
   14001949a:	call   0x14000fb50
   14001949f:	jmp    0x1400194a6
   1400194a1:	mov    rdx,rcx
   1400194a4:	jmp    0x140019483
   1400194a6:	mov    rcx,QWORD PTR [rbx+0x8]
   1400194aa:	call   0x14000fb50
   1400194af:	and    QWORD PTR [rbx+0x8],0x0
   1400194b4:	mov    ecx,0xe
   1400194b9:	call   0x140019844
   1400194be:	add    rsp,0x30
   1400194c2:	pop    rbx
   1400194c3:	ret    
   1400194c4:	rex push rbx
   1400194c6:	sub    rsp,0x30
   1400194ca:	mov    rbx,rcx
   1400194cd:	mov    ecx,0xe
   1400194d2:	call   0x140019628
   1400194d7:	nop
   1400194d8:	mov    rax,QWORD PTR [rbx+0x8]
   1400194dc:	test   rax,rax
   1400194df:	je     0x140019520
   1400194e1:	mov    rcx,QWORD PTR [rip+0x2eaa8]        # 0x140047f90
   1400194e8:	lea    rdx,[rip+0x2ea99]        # 0x140047f88
   1400194ef:	mov    QWORD PTR [rsp+0x20],rcx
   1400194f4:	test   rcx,rcx
   1400194f7:	je     0x140019512
   1400194f9:	cmp    QWORD PTR [rcx],rax
   1400194fc:	jne    0x14001950d
   1400194fe:	mov    rax,QWORD PTR [rcx+0x8]
   140019502:	mov    QWORD PTR [rdx+0x8],rax
   140019506:	call   0x14000fb50
   14001950b:	jmp    0x140019512
   14001950d:	mov    rdx,rcx
   140019510:	jmp    0x1400194ef
   140019512:	mov    rcx,QWORD PTR [rbx+0x8]
   140019516:	call   0x14000fb50
   14001951b:	and    QWORD PTR [rbx+0x8],0x0
   140019520:	mov    ecx,0xe
   140019525:	call   0x140019844
   14001952a:	add    rsp,0x30
   14001952e:	pop    rbx
   14001952f:	ret    
   140019530:	mov    QWORD PTR [rsp+0x8],rbx
   140019535:	push   rdi
   140019536:	sub    rsp,0x20
   14001953a:	mov    rbx,rcx
   14001953d:	mov    ecx,0xe
   140019542:	call   0x140019628
   140019547:	nop
   140019548:	mov    rbx,QWORD PTR [rbx+0x8]
   14001954c:	test   rbx,rbx
   14001954f:	je     0x14001956a
   140019551:	mov    rdi,QWORD PTR [rbx+0x8]
   140019555:	mov    rcx,QWORD PTR [rbx]
   140019558:	call   0x14000fb50
   14001955d:	mov    rcx,rbx
   140019560:	call   0x14000fb50
   140019565:	mov    rbx,rdi
   140019568:	jmp    0x14001954c
   14001956a:	mov    ecx,0xe
   14001956f:	call   0x140019844
   140019574:	mov    rbx,QWORD PTR [rsp+0x30]
   140019579:	add    rsp,0x20
   14001957d:	pop    rdi
   14001957e:	ret    
   14001957f:	int3   
   140019580:	sub    rsp,0x38
   140019584:	movzx  eax,r9w
   140019588:	test   r9w,r9w
   14001958c:	jne    0x140019593
   14001958e:	mov    eax,0x2800
   140019593:	mov    WORD PTR [rsp+0x28],ax
   140019598:	lea    rax,[rip+0xffffffffffff65b1]        # 0x14000fb50
   14001959f:	lea    r9,[rip+0xffffffffffff6002]        # 0x14000f5a8
   1400195a6:	mov    QWORD PTR [rsp+0x20],rax
   1400195ab:	call   0x14002a918
   1400195b0:	add    rsp,0x38
   1400195b4:	ret    
   1400195b5:	int3   
   1400195b6:	int3   
   1400195b7:	int3   
   1400195b8:	mov    QWORD PTR [rsp+0x8],rbx
   1400195bd:	push   rdi
   1400195be:	sub    rsp,0x20
   1400195c2:	lea    rbx,[rip+0x267ff]        # 0x14003fdc8
   1400195c9:	lea    rdi,[rip+0x267f8]        # 0x14003fdc8
   1400195d0:	jmp    0x1400195e0
   1400195d2:	mov    rax,QWORD PTR [rbx]
   1400195d5:	test   rax,rax
   1400195d8:	je     0x1400195dc
   1400195da:	call   rax
   1400195dc:	add    rbx,0x8
   1400195e0:	cmp    rbx,rdi
   1400195e3:	jb     0x1400195d2
   1400195e5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400195ea:	add    rsp,0x20
   1400195ee:	pop    rdi
   1400195ef:	ret    
   1400195f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400195f5:	push   rdi
   1400195f6:	sub    rsp,0x20
   1400195fa:	lea    rbx,[rip+0x267d7]        # 0x14003fdd8
   140019601:	lea    rdi,[rip+0x267d0]        # 0x14003fdd8
   140019608:	jmp    0x140019618
   14001960a:	mov    rax,QWORD PTR [rbx]
   14001960d:	test   rax,rax
   140019610:	je     0x140019614
   140019612:	call   rax
   140019614:	add    rbx,0x8
   140019618:	cmp    rbx,rdi
   14001961b:	jb     0x14001960a
   14001961d:	mov    rbx,QWORD PTR [rsp+0x30]
   140019622:	add    rsp,0x20
   140019626:	pop    rdi
   140019627:	ret    
   140019628:	mov    QWORD PTR [rsp+0x8],rbx
   14001962d:	push   rdi
   14001962e:	sub    rsp,0x20
   140019632:	movsxd rbx,ecx
   140019635:	lea    rdi,[rip+0x2cb34]        # 0x140046170
   14001963c:	add    rbx,rbx
   14001963f:	cmp    QWORD PTR [rdi+rbx*8],0x0
   140019644:	jne    0x140019657
   140019646:	call   0x140019720
   14001964b:	test   eax,eax
   14001964d:	jne    0x140019657
   14001964f:	lea    ecx,[rax+0x11]
   140019652:	call   0x140009f8c
   140019657:	mov    rcx,QWORD PTR [rdi+rbx*8]
   14001965b:	mov    rbx,QWORD PTR [rsp+0x30]
   140019660:	add    rsp,0x20
   140019664:	pop    rdi
   140019665:	rex.W jmp QWORD PTR [rip+0x1bbf4]        # 0x140035260
   14001966c:	rex push rbx
   14001966e:	sub    rsp,0x20
   140019672:	mov    rbx,rcx
   140019675:	call   0x140019bf8
   14001967a:	test   eax,eax
   14001967c:	jne    0x140019689
   14001967e:	mov    rdx,rbx
   140019681:	xor    ecx,ecx
   140019683:	call   QWORD PTR [rip+0x1bc5f]        # 0x1400352e8
   140019689:	mov    ecx,0xff
   14001968e:	add    rsp,0x20
   140019692:	pop    rbx
   140019693:	jmp    0x140009e2c
   140019698:	mov    QWORD PTR [rsp+0x8],rbx
   14001969d:	mov    QWORD PTR [rsp+0x10],rbp
   1400196a2:	mov    QWORD PTR [rsp+0x18],rsi
   1400196a7:	push   rdi
   1400196a8:	sub    rsp,0x20
   1400196ac:	mov    edi,0x24
   1400196b1:	lea    rbx,[rip+0x2cab8]        # 0x140046170
   1400196b8:	mov    ebp,edi
   1400196ba:	mov    rsi,QWORD PTR [rbx]
   1400196bd:	test   rsi,rsi
   1400196c0:	je     0x1400196dd
   1400196c2:	cmp    DWORD PTR [rbx+0x8],0x1
   1400196c6:	je     0x1400196dd
   1400196c8:	mov    rcx,rsi
   1400196cb:	call   QWORD PTR [rip+0x1bc0f]        # 0x1400352e0
   1400196d1:	mov    rcx,rsi
   1400196d4:	call   0x14000fb50
   1400196d9:	and    QWORD PTR [rbx],0x0
   1400196dd:	add    rbx,0x10
   1400196e1:	dec    rbp
   1400196e4:	jne    0x1400196ba
   1400196e6:	lea    rbx,[rip+0x2ca8b]        # 0x140046178
   1400196ed:	mov    rcx,QWORD PTR [rbx-0x8]
   1400196f1:	test   rcx,rcx
   1400196f4:	je     0x140019701
   1400196f6:	cmp    DWORD PTR [rbx],0x1
   1400196f9:	jne    0x140019701
   1400196fb:	call   QWORD PTR [rip+0x1bbdf]        # 0x1400352e0
   140019701:	add    rbx,0x10
   140019705:	dec    rdi
   140019708:	jne    0x1400196ed
   14001970a:	mov    rbx,QWORD PTR [rsp+0x30]
   14001970f:	mov    rbp,QWORD PTR [rsp+0x38]
   140019714:	mov    rsi,QWORD PTR [rsp+0x40]
   140019719:	add    rsp,0x20
   14001971d:	pop    rdi
   14001971e:	ret    
   14001971f:	int3   
   140019720:	mov    QWORD PTR [rsp+0x8],rbx
   140019725:	mov    QWORD PTR [rsp+0x10],rdi
   14001972a:	push   r14
   14001972c:	sub    rsp,0x20
   140019730:	movsxd rbx,ecx
   140019733:	cmp    QWORD PTR [rip+0x2f0fd],0x0        # 0x140048838
   14001973b:	jne    0x140019756
   14001973d:	call   0x14001a12c
   140019742:	mov    ecx,0x1e
   140019747:	call   0x14001a1a0
   14001974c:	mov    ecx,0xff
   140019751:	call   0x140009e2c
   140019756:	add    rbx,rbx
   140019759:	lea    r14,[rip+0x2ca10]        # 0x140046170
   140019760:	cmp    QWORD PTR [r14+rbx*8],0x0
   140019765:	je     0x14001976e
   140019767:	mov    eax,0x1
   14001976c:	jmp    0x1400197cc
   14001976e:	mov    ecx,0x28
   140019773:	call   0x14000fc4c
   140019778:	mov    rdi,rax
   14001977b:	test   rax,rax
   14001977e:	jne    0x14001978f
   140019780:	call   0x14000b9f0
   140019785:	mov    DWORD PTR [rax],0xc
   14001978b:	xor    eax,eax
   14001978d:	jmp    0x1400197cc
   14001978f:	mov    ecx,0xa
   140019794:	call   0x140019628
   140019799:	nop
   14001979a:	mov    rcx,rdi
   14001979d:	cmp    QWORD PTR [r14+rbx*8],0x0
   1400197a2:	jne    0x1400197b7
   1400197a4:	xor    r8d,r8d
   1400197a7:	mov    edx,0xfa0
   1400197ac:	call   0x140019bcc
   1400197b1:	mov    QWORD PTR [r14+rbx*8],rdi
   1400197b5:	jmp    0x1400197bd
   1400197b7:	call   0x14000fb50
   1400197bc:	nop
   1400197bd:	mov    rcx,QWORD PTR [rip+0x2ca4c]        # 0x140046210
   1400197c4:	call   QWORD PTR [rip+0x1ba9e]        # 0x140035268
   1400197ca:	jmp    0x140019767
   1400197cc:	mov    rbx,QWORD PTR [rsp+0x30]
   1400197d1:	mov    rdi,QWORD PTR [rsp+0x38]
   1400197d6:	add    rsp,0x20
   1400197da:	pop    r14
   1400197dc:	ret    
   1400197dd:	int3   
   1400197de:	int3   
   1400197df:	int3   
   1400197e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400197e5:	mov    QWORD PTR [rsp+0x10],rsi
   1400197ea:	push   rdi
   1400197eb:	sub    rsp,0x20
   1400197ef:	xor    esi,esi
   1400197f1:	lea    rbx,[rip+0x2c978]        # 0x140046170
   1400197f8:	lea    edi,[rsi+0x24]
   1400197fb:	cmp    DWORD PTR [rbx+0x8],0x1
   1400197ff:	jne    0x140019825
   140019801:	movsxd rax,esi
   140019804:	lea    rdx,[rip+0x2e795]        # 0x140047fa0
   14001980b:	xor    r8d,r8d
   14001980e:	lea    rcx,[rax+rax*4]
   140019812:	inc    esi
   140019814:	lea    rcx,[rdx+rcx*8]
   140019818:	mov    edx,0xfa0
   14001981d:	mov    QWORD PTR [rbx],rcx
   140019820:	call   0x140019bcc
   140019825:	add    rbx,0x10
   140019829:	dec    rdi
   14001982c:	jne    0x1400197fb
   14001982e:	mov    rbx,QWORD PTR [rsp+0x30]
   140019833:	mov    rsi,QWORD PTR [rsp+0x38]
   140019838:	lea    eax,[rdi+0x1]
   14001983b:	add    rsp,0x20
   14001983f:	pop    rdi
   140019840:	ret    
   140019841:	int3   
   140019842:	int3   
   140019843:	int3   
   140019844:	movsxd rcx,ecx
   140019847:	lea    rax,[rip+0x2c922]        # 0x140046170
   14001984e:	add    rcx,rcx
   140019851:	mov    rcx,QWORD PTR [rax+rcx*8]
   140019855:	rex.W jmp QWORD PTR [rip+0x1ba0c]        # 0x140035268
   14001985c:	sub    rsp,0x28
   140019860:	mov    rax,QWORD PTR [rip+0x2f601]        # 0x140048e68
   140019867:	and    DWORD PTR [rsp+0x30],0x0
   14001986c:	xor    rax,QWORD PTR [rip+0x2b9fd]        # 0x140045270
   140019873:	je     0x14001988a
   140019875:	lea    rcx,[rsp+0x30]
   14001987a:	xor    edx,edx
   14001987c:	call   rax
   14001987e:	cmp    eax,0x7a
   140019881:	jne    0x14001988a
   140019883:	mov    eax,0x1
   140019888:	jmp    0x14001988c
   14001988a:	xor    eax,eax
   14001988c:	add    rsp,0x28
   140019890:	ret    
   140019891:	int3   
   140019892:	int3   
   140019893:	int3   
   140019894:	mov    QWORD PTR [rsp+0x20],rbx
   140019899:	push   rdi
   14001989a:	sub    rsp,0x40
   14001989e:	mov    rbx,rcx
   1400198a1:	call   QWORD PTR [rip+0x1ba49]        # 0x1400352f0
   1400198a7:	mov    rdi,QWORD PTR [rbx+0xf8]
   1400198ae:	lea    rdx,[rsp+0x50]
   1400198b3:	xor    r8d,r8d
   1400198b6:	mov    rcx,rdi
   1400198b9:	call   QWORD PTR [rip+0x1b971]        # 0x140035230
   1400198bf:	test   rax,rax
   1400198c2:	je     0x1400198f6
   1400198c4:	and    QWORD PTR [rsp+0x38],0x0
   1400198ca:	mov    rdx,QWORD PTR [rsp+0x50]
   1400198cf:	lea    rcx,[rsp+0x58]
   1400198d4:	mov    QWORD PTR [rsp+0x30],rcx
   1400198d9:	lea    rcx,[rsp+0x60]
   1400198de:	mov    r9,rax
   1400198e1:	mov    QWORD PTR [rsp+0x28],rcx
   1400198e6:	xor    ecx,ecx
   1400198e8:	mov    r8,rdi
   1400198eb:	mov    QWORD PTR [rsp+0x20],rbx
   1400198f0:	call   QWORD PTR [rip+0x1ba02]        # 0x1400352f8
   1400198f6:	mov    rbx,QWORD PTR [rsp+0x68]
   1400198fb:	add    rsp,0x40
   1400198ff:	pop    rdi
   140019900:	ret    
   140019901:	int3   
   140019902:	int3   
   140019903:	int3   
   140019904:	rex push rbx
   140019906:	push   rsi
   140019907:	push   rdi
   140019908:	sub    rsp,0x40
   14001990c:	mov    rbx,rcx
   14001990f:	call   QWORD PTR [rip+0x1b9db]        # 0x1400352f0
   140019915:	mov    rsi,QWORD PTR [rbx+0xf8]
   14001991c:	xor    edi,edi
   14001991e:	lea    rdx,[rsp+0x60]
   140019923:	xor    r8d,r8d
   140019926:	mov    rcx,rsi
   140019929:	call   QWORD PTR [rip+0x1b901]        # 0x140035230
   14001992f:	test   rax,rax
   140019932:	je     0x14001996d
   140019934:	and    QWORD PTR [rsp+0x38],0x0
   14001993a:	mov    rdx,QWORD PTR [rsp+0x60]
   14001993f:	lea    rcx,[rsp+0x68]
   140019944:	mov    QWORD PTR [rsp+0x30],rcx
   140019949:	lea    rcx,[rsp+0x70]
   14001994e:	mov    r9,rax
   140019951:	mov    QWORD PTR [rsp+0x28],rcx
   140019956:	xor    ecx,ecx
   140019958:	mov    r8,rsi
   14001995b:	mov    QWORD PTR [rsp+0x20],rbx
   140019960:	call   QWORD PTR [rip+0x1b992]        # 0x1400352f8
   140019966:	inc    edi
   140019968:	cmp    edi,0x2
   14001996b:	jl     0x14001991e
   14001996d:	add    rsp,0x40
   140019971:	pop    rdi
   140019972:	pop    rsi
   140019973:	pop    rbx
   140019974:	ret    
   140019975:	int3   
   140019976:	int3   
   140019977:	int3   
   140019978:	sub    rsp,0x28
   14001997c:	mov    rax,QWORD PTR [rip+0x2f455]        # 0x140048dd8
   140019983:	xor    rax,QWORD PTR [rip+0x2b8e6]        # 0x140045270
   14001998a:	je     0x14001998e
   14001998c:	call   rax
   14001998e:	add    rsp,0x28
   140019992:	ret    
   140019993:	int3   
   140019994:	sub    rsp,0x28
   140019998:	mov    rax,QWORD PTR [rip+0x2f451]        # 0x140048df0
   14001999f:	xor    rax,QWORD PTR [rip+0x2b8ca]        # 0x140045270
   1400199a6:	je     0x1400199aa
   1400199a8:	call   rax
   1400199aa:	add    rsp,0x28
   1400199ae:	ret    
   1400199af:	int3   
   1400199b0:	mov    r10,QWORD PTR [rip+0x2f3f1]        # 0x140048da8
   1400199b7:	mov    eax,r8d
   1400199ba:	xor    r10,QWORD PTR [rip+0x2b8af]        # 0x140045270
   1400199c1:	je     0x1400199c6
   1400199c3:	rex.WB jmp r10
   1400199c6:	and    eax,0x1
   1400199c9:	mov    r9,rdx
   1400199cc:	and    r8d,0x2
   1400199d0:	mov    edx,eax
   1400199d2:	rex.W jmp QWORD PTR [rip+0x1b7ef]        # 0x1400351c8
   1400199d9:	int3   
   1400199da:	int3   
   1400199db:	int3   
   1400199dc:	mov    r10,QWORD PTR [rip+0x2f3cd]        # 0x140048db0
   1400199e3:	xor    r10,QWORD PTR [rip+0x2b886]        # 0x140045270
   1400199ea:	je     0x1400199ef
   1400199ec:	rex.WB jmp r10
   1400199ef:	rex.W jmp QWORD PTR [rip+0x1b96a]        # 0x140035360
   1400199f6:	int3   
   1400199f7:	int3   
   1400199f8:	sub    rsp,0x28
   1400199fc:	mov    rax,QWORD PTR [rip+0x2f415]        # 0x140048e18
   140019a03:	xor    rax,QWORD PTR [rip+0x2b866]        # 0x140045270
   140019a0a:	je     0x140019a13
   140019a0c:	add    rsp,0x28
   140019a10:	rex.W jmp rax
   140019a13:	mov    ecx,0x78
   140019a18:	call   QWORD PTR [rip+0x1b8b2]        # 0x1400352d0
   140019a1e:	xor    al,al
   140019a20:	add    rsp,0x28
   140019a24:	ret    
   140019a25:	int3   
   140019a26:	int3   
   140019a27:	int3   
   140019a28:	mov    rax,QWORD PTR [rip+0x2f391]        # 0x140048dc0
   140019a2f:	xor    rax,QWORD PTR [rip+0x2b83a]        # 0x140045270
   140019a36:	je     0x140019a3b
   140019a38:	rex.W jmp rax
   140019a3b:	xor    eax,eax
   140019a3d:	ret    
   140019a3e:	int3   
   140019a3f:	int3   
   140019a40:	mov    rax,QWORD PTR [rip+0x2f399]        # 0x140048de0
   140019a47:	xor    rax,QWORD PTR [rip+0x2b822]        # 0x140045270
   140019a4e:	je     0x140019a53
   140019a50:	rex.W jmp rax
   140019a53:	xor    eax,eax
   140019a55:	ret    
   140019a56:	int3   
   140019a57:	int3   
   140019a58:	mov    rax,QWORD PTR [rip+0x2f321]        # 0x140048d80
   140019a5f:	xor    rax,QWORD PTR [rip+0x2b80a]        # 0x140045270
   140019a66:	je     0x140019a6b
   140019a68:	rex.W jmp rax
   140019a6b:	rex.W jmp QWORD PTR [rip+0x1b8be]        # 0x140035330
   140019a72:	int3   
   140019a73:	int3   
   140019a74:	mov    rax,QWORD PTR [rip+0x2f30d]        # 0x140048d88
   140019a7b:	xor    rax,QWORD PTR [rip+0x2b7ee]        # 0x140045270
   140019a82:	je     0x140019a87
   140019a84:	rex.W jmp rax
   140019a87:	rex.W jmp QWORD PTR [rip+0x1b8ba]        # 0x140035348
   140019a8e:	int3   
   140019a8f:	int3   
   140019a90:	mov    rax,QWORD PTR [rip+0x2f2f9]        # 0x140048d90
   140019a97:	xor    rax,QWORD PTR [rip+0x2b7d2]        # 0x140045270
   140019a9e:	je     0x140019aa3
   140019aa0:	rex.W jmp rax
   140019aa3:	rex.W jmp QWORD PTR [rip+0x1b88e]        # 0x140035338
   140019aaa:	int3   
   140019aab:	int3   
   140019aac:	mov    rax,QWORD PTR [rip+0x2f2e5]        # 0x140048d98
   140019ab3:	xor    rax,QWORD PTR [rip+0x2b7b6]        # 0x140045270
   140019aba:	je     0x140019abf
   140019abc:	rex.W jmp rax
   140019abf:	rex.W jmp QWORD PTR [rip+0x1b87a]        # 0x140035340
   140019ac6:	int3   
   140019ac7:	int3   
   140019ac8:	sub    rsp,0x28
   140019acc:	mov    rax,QWORD PTR [rip+0x2f325]        # 0x140048df8
   140019ad3:	xor    rax,QWORD PTR [rip+0x2b796]        # 0x140045270
   140019ada:	je     0x140019ade
   140019adc:	call   rax
   140019ade:	add    rsp,0x28
   140019ae2:	ret    
   140019ae3:	int3   
   140019ae4:	sub    rsp,0x28
   140019ae8:	mov    rax,QWORD PTR [rip+0x2f311]        # 0x140048e00
   140019aef:	xor    rax,QWORD PTR [rip+0x2b77a]        # 0x140045270
   140019af6:	je     0x140019afa
   140019af8:	call   rax
   140019afa:	add    rsp,0x28
   140019afe:	ret    
   140019aff:	int3   
   140019b00:	mov    rax,QWORD PTR [rip+0x2f301]        # 0x140048e08
   140019b07:	xor    rax,QWORD PTR [rip+0x2b762]        # 0x140045270
   140019b0e:	je     0x140019b13
   140019b10:	rex.W jmp rax
   140019b13:	xor    eax,eax
   140019b15:	ret    
   140019b16:	int3   
   140019b17:	int3   
   140019b18:	sub    rsp,0x28
   140019b1c:	mov    rax,QWORD PTR [rip+0x2f355]        # 0x140048e78
   140019b23:	xor    rax,QWORD PTR [rip+0x2b746]        # 0x140045270
   140019b2a:	je     0x140019b33
   140019b2c:	add    rsp,0x28
   140019b30:	rex.W jmp rax
   140019b33:	mov    ecx,0x78
   140019b38:	call   QWORD PTR [rip+0x1b792]        # 0x1400352d0
   140019b3e:	xor    eax,eax
   140019b40:	add    rsp,0x28
   140019b44:	ret    
   140019b45:	int3   
   140019b46:	int3   
   140019b47:	int3   
   140019b48:	sub    rsp,0x28
   140019b4c:	mov    rax,QWORD PTR [rip+0x2f2bd]        # 0x140048e10
   140019b53:	xor    rax,QWORD PTR [rip+0x2b716]        # 0x140045270
   140019b5a:	je     0x140019b63
   140019b5c:	add    rsp,0x28
   140019b60:	rex.W jmp rax
   140019b63:	mov    ecx,0x78
   140019b68:	call   QWORD PTR [rip+0x1b762]        # 0x1400352d0
   140019b6e:	xor    eax,eax
   140019b70:	add    rsp,0x28
   140019b74:	ret    
   140019b75:	int3   
   140019b76:	int3   
   140019b77:	int3   
   140019b78:	sub    rsp,0x98
   140019b7f:	lea    rcx,[rsp+0x20]
   140019b84:	call   QWORD PTR [rip+0x1b7c6]        # 0x140035350
   140019b8a:	test   BYTE PTR [rsp+0x5c],0x1
   140019b8f:	movzx  ecx,WORD PTR [rsp+0x60]
   140019b94:	mov    eax,0xa
   140019b99:	cmovne eax,ecx
   140019b9c:	add    rsp,0x98
   140019ba3:	ret    
   140019ba4:	sub    rsp,0x28
   140019ba8:	mov    rax,QWORD PTR [rip+0x2f2c1]        # 0x140048e70
   140019baf:	xor    rax,QWORD PTR [rip+0x2b6ba]        # 0x140045270
   140019bb6:	je     0x140019bbf
   140019bb8:	add    rsp,0x28
   140019bbc:	rex.W jmp rax
   140019bbf:	call   QWORD PTR [rip+0x1b793]        # 0x140035358
   140019bc5:	mov    eax,eax
   140019bc7:	add    rsp,0x28
   140019bcb:	ret    
   140019bcc:	sub    rsp,0x28
   140019bd0:	mov    rax,QWORD PTR [rip+0x2f1c9]        # 0x140048da0
   140019bd7:	xor    rax,QWORD PTR [rip+0x2b692]        # 0x140045270
   140019bde:	je     0x140019be7
   140019be0:	add    rsp,0x28
   140019be4:	rex.W jmp rax
   140019be7:	call   QWORD PTR [rip+0x1b723]        # 0x140035310
   140019bed:	mov    eax,0x1
   140019bf2:	add    rsp,0x28
   140019bf6:	ret    
   140019bf7:	int3   
   140019bf8:	rex push rbx
   140019bfa:	sub    rsp,0x20
   140019bfe:	mov    eax,DWORD PTR [rip+0x2c7ac]        # 0x1400463b0
   140019c04:	xor    ebx,ebx
   140019c06:	test   eax,eax
   140019c08:	jns    0x140019c39
   140019c0a:	mov    rax,QWORD PTR [rip+0x2f257]        # 0x140048e68
   140019c11:	mov    DWORD PTR [rsp+0x30],ebx
   140019c15:	xor    rax,QWORD PTR [rip+0x2b654]        # 0x140045270
   140019c1c:	je     0x140019c2f
   140019c1e:	lea    rcx,[rsp+0x30]
   140019c23:	xor    edx,edx
   140019c25:	call   rax
   140019c27:	cmp    eax,0x7a
   140019c2a:	lea    eax,[rbx+0x1]
   140019c2d:	je     0x140019c31
   140019c2f:	mov    eax,ebx
   140019c31:	mov    DWORD PTR [rip+0x2c779],eax        # 0x1400463b0
   140019c37:	test   eax,eax
   140019c39:	setg   bl
   140019c3c:	mov    eax,ebx
   140019c3e:	add    rsp,0x20
   140019c42:	pop    rbx
   140019c43:	ret    
   140019c44:	rex push rbx
   140019c46:	sub    rsp,0x20
   140019c4a:	lea    rcx,[rip+0x1ec8f]        # 0x1400388e0
   140019c51:	call   QWORD PTR [rip+0x1b421]        # 0x140035078
   140019c57:	lea    rdx,[rip+0x1eca2]        # 0x140038900
   140019c5e:	mov    rcx,rax
   140019c61:	mov    rbx,rax
   140019c64:	call   QWORD PTR [rip+0x1b44e]        # 0x1400350b8
   140019c6a:	lea    rdx,[rip+0x1ec9f]        # 0x140038910
   140019c71:	mov    rcx,rbx
   140019c74:	xor    rax,QWORD PTR [rip+0x2b5f5]        # 0x140045270
   140019c7b:	mov    QWORD PTR [rip+0x2f0fe],rax        # 0x140048d80
   140019c82:	call   QWORD PTR [rip+0x1b430]        # 0x1400350b8
   140019c88:	lea    rdx,[rip+0x1ec89]        # 0x140038918
   140019c8f:	xor    rax,QWORD PTR [rip+0x2b5da]        # 0x140045270
   140019c96:	mov    rcx,rbx
   140019c99:	mov    QWORD PTR [rip+0x2f0e8],rax        # 0x140048d88
   140019ca0:	call   QWORD PTR [rip+0x1b412]        # 0x1400350b8
   140019ca6:	lea    rdx,[rip+0x1ec7b]        # 0x140038928
   140019cad:	xor    rax,QWORD PTR [rip+0x2b5bc]        # 0x140045270
   140019cb4:	mov    rcx,rbx
   140019cb7:	mov    QWORD PTR [rip+0x2f0d2],rax        # 0x140048d90
   140019cbe:	call   QWORD PTR [rip+0x1b3f4]        # 0x1400350b8
   140019cc4:	lea    rdx,[rip+0x1ec6d]        # 0x140038938
   140019ccb:	xor    rax,QWORD PTR [rip+0x2b59e]        # 0x140045270
   140019cd2:	mov    rcx,rbx
   140019cd5:	mov    QWORD PTR [rip+0x2f0bc],rax        # 0x140048d98
   140019cdc:	call   QWORD PTR [rip+0x1b3d6]        # 0x1400350b8
   140019ce2:	lea    rdx,[rip+0x1ec6f]        # 0x140038958
   140019ce9:	xor    rax,QWORD PTR [rip+0x2b580]        # 0x140045270
   140019cf0:	mov    rcx,rbx
   140019cf3:	mov    QWORD PTR [rip+0x2f0a6],rax        # 0x140048da0
   140019cfa:	call   QWORD PTR [rip+0x1b3b8]        # 0x1400350b8
   140019d00:	lea    rdx,[rip+0x1ec61]        # 0x140038968
   140019d07:	xor    rax,QWORD PTR [rip+0x2b562]        # 0x140045270
   140019d0e:	mov    rcx,rbx
   140019d11:	mov    QWORD PTR [rip+0x2f090],rax        # 0x140048da8
   140019d18:	call   QWORD PTR [rip+0x1b39a]        # 0x1400350b8
   140019d1e:	lea    rdx,[rip+0x1ec5b]        # 0x140038980
   140019d25:	xor    rax,QWORD PTR [rip+0x2b544]        # 0x140045270
   140019d2c:	mov    rcx,rbx
   140019d2f:	mov    QWORD PTR [rip+0x2f07a],rax        # 0x140048db0
   140019d36:	call   QWORD PTR [rip+0x1b37c]        # 0x1400350b8
   140019d3c:	lea    rdx,[rip+0x1ec55]        # 0x140038998
   140019d43:	xor    rax,QWORD PTR [rip+0x2b526]        # 0x140045270
   140019d4a:	mov    rcx,rbx
   140019d4d:	mov    QWORD PTR [rip+0x2f064],rax        # 0x140048db8
   140019d54:	call   QWORD PTR [rip+0x1b35e]        # 0x1400350b8
   140019d5a:	lea    rdx,[rip+0x1ec4f]        # 0x1400389b0
   140019d61:	xor    rax,QWORD PTR [rip+0x2b508]        # 0x140045270
   140019d68:	mov    rcx,rbx
   140019d6b:	mov    QWORD PTR [rip+0x2f04e],rax        # 0x140048dc0
   140019d72:	call   QWORD PTR [rip+0x1b340]        # 0x1400350b8
   140019d78:	lea    rdx,[rip+0x1ec49]        # 0x1400389c8
   140019d7f:	xor    rax,QWORD PTR [rip+0x2b4ea]        # 0x140045270
   140019d86:	mov    rcx,rbx
   140019d89:	mov    QWORD PTR [rip+0x2f038],rax        # 0x140048dc8
   140019d90:	call   QWORD PTR [rip+0x1b322]        # 0x1400350b8
   140019d96:	lea    rdx,[rip+0x1ec4b]        # 0x1400389e8
   140019d9d:	xor    rax,QWORD PTR [rip+0x2b4cc]        # 0x140045270
   140019da4:	mov    rcx,rbx
   140019da7:	mov    QWORD PTR [rip+0x2f022],rax        # 0x140048dd0
   140019dae:	call   QWORD PTR [rip+0x1b304]        # 0x1400350b8
   140019db4:	lea    rdx,[rip+0x1ec45]        # 0x140038a00
   140019dbb:	xor    rax,QWORD PTR [rip+0x2b4ae]        # 0x140045270
   140019dc2:	mov    rcx,rbx
   140019dc5:	mov    QWORD PTR [rip+0x2f00c],rax        # 0x140048dd8
   140019dcc:	call   QWORD PTR [rip+0x1b2e6]        # 0x1400350b8
   140019dd2:	lea    rdx,[rip+0x1ec3f]        # 0x140038a18
   140019dd9:	xor    rax,QWORD PTR [rip+0x2b490]        # 0x140045270
   140019de0:	mov    rcx,rbx
   140019de3:	mov    QWORD PTR [rip+0x2eff6],rax        # 0x140048de0
   140019dea:	call   QWORD PTR [rip+0x1b2c8]        # 0x1400350b8
   140019df0:	lea    rdx,[rip+0x1ec39]        # 0x140038a30
   140019df7:	xor    rax,QWORD PTR [rip+0x2b472]        # 0x140045270
   140019dfe:	mov    rcx,rbx
   140019e01:	mov    QWORD PTR [rip+0x2efe0],rax        # 0x140048de8
   140019e08:	call   QWORD PTR [rip+0x1b2aa]        # 0x1400350b8
   140019e0e:	lea    rdx,[rip+0x1ec33]        # 0x140038a48
   140019e15:	xor    rax,QWORD PTR [rip+0x2b454]        # 0x140045270
   140019e1c:	mov    rcx,rbx
   140019e1f:	mov    QWORD PTR [rip+0x2efca],rax        # 0x140048df0
   140019e26:	call   QWORD PTR [rip+0x1b28c]        # 0x1400350b8
   140019e2c:	xor    rax,QWORD PTR [rip+0x2b43d]        # 0x140045270
   140019e33:	lea    rdx,[rip+0x1ec2e]        # 0x140038a68
   140019e3a:	mov    rcx,rbx
   140019e3d:	mov    QWORD PTR [rip+0x2efb4],rax        # 0x140048df8
   140019e44:	call   QWORD PTR [rip+0x1b26e]        # 0x1400350b8
   140019e4a:	lea    rdx,[rip+0x1ec37]        # 0x140038a88
   140019e51:	xor    rax,QWORD PTR [rip+0x2b418]        # 0x140045270
   140019e58:	mov    rcx,rbx
   140019e5b:	mov    QWORD PTR [rip+0x2ef9e],rax        # 0x140048e00
   140019e62:	call   QWORD PTR [rip+0x1b250]        # 0x1400350b8
   140019e68:	lea    rdx,[rip+0x1ec39]        # 0x140038aa8
   140019e6f:	xor    rax,QWORD PTR [rip+0x2b3fa]        # 0x140045270
   140019e76:	mov    rcx,rbx
   140019e79:	mov    QWORD PTR [rip+0x2ef88],rax        # 0x140048e08
   140019e80:	call   QWORD PTR [rip+0x1b232]        # 0x1400350b8
   140019e86:	lea    rdx,[rip+0x1ec3b]        # 0x140038ac8
   140019e8d:	xor    rax,QWORD PTR [rip+0x2b3dc]        # 0x140045270
   140019e94:	mov    rcx,rbx
   140019e97:	mov    QWORD PTR [rip+0x2ef72],rax        # 0x140048e10
   140019e9e:	call   QWORD PTR [rip+0x1b214]        # 0x1400350b8
   140019ea4:	lea    rdx,[rip+0x1ec35]        # 0x140038ae0
   140019eab:	xor    rax,QWORD PTR [rip+0x2b3be]        # 0x140045270
   140019eb2:	mov    rcx,rbx
   140019eb5:	mov    QWORD PTR [rip+0x2ef5c],rax        # 0x140048e18
   140019ebc:	call   QWORD PTR [rip+0x1b1f6]        # 0x1400350b8
   140019ec2:	lea    rdx,[rip+0x1ec37]        # 0x140038b00
   140019ec9:	xor    rax,QWORD PTR [rip+0x2b3a0]        # 0x140045270
   140019ed0:	mov    rcx,rbx
   140019ed3:	mov    QWORD PTR [rip+0x2ef46],rax        # 0x140048e20
   140019eda:	call   QWORD PTR [rip+0x1b1d8]        # 0x1400350b8
   140019ee0:	lea    rdx,[rip+0x1ec31]        # 0x140038b18
   140019ee7:	xor    rax,QWORD PTR [rip+0x2b382]        # 0x140045270
   140019eee:	mov    rcx,rbx
   140019ef1:	mov    QWORD PTR [rip+0x2ef38],rax        # 0x140048e30
   140019ef8:	call   QWORD PTR [rip+0x1b1ba]        # 0x1400350b8
   140019efe:	lea    rdx,[rip+0x1ec23]        # 0x140038b28
   140019f05:	xor    rax,QWORD PTR [rip+0x2b364]        # 0x140045270
   140019f0c:	mov    rcx,rbx
   140019f0f:	mov    QWORD PTR [rip+0x2ef12],rax        # 0x140048e28
   140019f16:	call   QWORD PTR [rip+0x1b19c]        # 0x1400350b8
   140019f1c:	lea    rdx,[rip+0x1ec15]        # 0x140038b38
   140019f23:	xor    rax,QWORD PTR [rip+0x2b346]        # 0x140045270
   140019f2a:	mov    rcx,rbx
   140019f2d:	mov    QWORD PTR [rip+0x2ef04],rax        # 0x140048e38
   140019f34:	call   QWORD PTR [rip+0x1b17e]        # 0x1400350b8
   140019f3a:	lea    rdx,[rip+0x1ec07]        # 0x140038b48
   140019f41:	xor    rax,QWORD PTR [rip+0x2b328]        # 0x140045270
   140019f48:	mov    rcx,rbx
   140019f4b:	mov    QWORD PTR [rip+0x2eeee],rax        # 0x140048e40
   140019f52:	call   QWORD PTR [rip+0x1b160]        # 0x1400350b8
   140019f58:	lea    rdx,[rip+0x1ebf9]        # 0x140038b58
   140019f5f:	xor    rax,QWORD PTR [rip+0x2b30a]        # 0x140045270
   140019f66:	mov    rcx,rbx
   140019f69:	mov    QWORD PTR [rip+0x2eed8],rax        # 0x140048e48
   140019f70:	call   QWORD PTR [rip+0x1b142]        # 0x1400350b8
   140019f76:	lea    rdx,[rip+0x1ebfb]        # 0x140038b78
   140019f7d:	xor    rax,QWORD PTR [rip+0x2b2ec]        # 0x140045270
   140019f84:	mov    rcx,rbx
   140019f87:	mov    QWORD PTR [rip+0x2eec2],rax        # 0x140048e50
   140019f8e:	call   QWORD PTR [rip+0x1b124]        # 0x1400350b8
   140019f94:	lea    rdx,[rip+0x1ebf5]        # 0x140038b90
   140019f9b:	xor    rax,QWORD PTR [rip+0x2b2ce]        # 0x140045270
   140019fa2:	mov    rcx,rbx
   140019fa5:	mov    QWORD PTR [rip+0x2eeac],rax        # 0x140048e58
   140019fac:	call   QWORD PTR [rip+0x1b106]        # 0x1400350b8
   140019fb2:	lea    rdx,[rip+0x1ebe7]        # 0x140038ba0
   140019fb9:	xor    rax,QWORD PTR [rip+0x2b2b0]        # 0x140045270
   140019fc0:	mov    rcx,rbx
   140019fc3:	mov    QWORD PTR [rip+0x2ee96],rax        # 0x140048e60
   140019fca:	call   QWORD PTR [rip+0x1b0e8]        # 0x1400350b8
   140019fd0:	lea    rdx,[rip+0x1ebe1]        # 0x140038bb8
   140019fd7:	xor    rax,QWORD PTR [rip+0x2b292]        # 0x140045270
   140019fde:	mov    rcx,rbx
   140019fe1:	mov    QWORD PTR [rip+0x2ee80],rax        # 0x140048e68
   140019fe8:	call   QWORD PTR [rip+0x1b0ca]        # 0x1400350b8
   140019fee:	lea    rdx,[rip+0x1ebd3]        # 0x140038bc8
   140019ff5:	xor    rax,QWORD PTR [rip+0x2b274]        # 0x140045270
   140019ffc:	mov    rcx,rbx
   140019fff:	mov    QWORD PTR [rip+0x2ee6a],rax        # 0x140048e70
   14001a006:	call   QWORD PTR [rip+0x1b0ac]        # 0x1400350b8
   14001a00c:	xor    rax,QWORD PTR [rip+0x2b25d]        # 0x140045270
   14001a013:	lea    rdx,[rip+0x1ebce]        # 0x140038be8
   14001a01a:	mov    rcx,rbx
   14001a01d:	mov    QWORD PTR [rip+0x2ee54],rax        # 0x140048e78
   14001a024:	call   QWORD PTR [rip+0x1b08e]        # 0x1400350b8
   14001a02a:	xor    rax,QWORD PTR [rip+0x2b23f]        # 0x140045270
   14001a031:	mov    QWORD PTR [rip+0x2ee48],rax        # 0x140048e80
   14001a038:	add    rsp,0x20
   14001a03c:	pop    rbx
   14001a03d:	ret    
   14001a03e:	int3   
   14001a03f:	int3   
   14001a040:	sub    rsp,0x28
   14001a044:	mov    rax,QWORD PTR [rip+0x2ee35]        # 0x140048e80
   14001a04b:	xor    rax,QWORD PTR [rip+0x2b21e]        # 0x140045270
   14001a052:	je     0x14001a05b
   14001a054:	add    rsp,0x28
   14001a058:	rex.W jmp rax
   14001a05b:	mov    ecx,0x78
   14001a060:	call   QWORD PTR [rip+0x1b26a]        # 0x1400352d0
   14001a066:	xor    eax,eax
   14001a068:	add    rsp,0x28
   14001a06c:	ret    
   14001a06d:	int3   
   14001a06e:	int3   
   14001a06f:	int3   
   14001a070:	mov    rax,QWORD PTR [rip+0x2ed41]        # 0x140048db8
   14001a077:	xor    rax,QWORD PTR [rip+0x2b1f2]        # 0x140045270
   14001a07e:	je     0x14001a083
   14001a080:	rex.W jmp rax
   14001a083:	xor    eax,eax
   14001a085:	ret    
   14001a086:	int3   
   14001a087:	int3   
   14001a088:	sub    rsp,0x28
   14001a08c:	mov    rax,QWORD PTR [rip+0x2ed35]        # 0x140048dc8
   14001a093:	xor    rax,QWORD PTR [rip+0x2b1d6]        # 0x140045270
   14001a09a:	je     0x14001a09e
   14001a09c:	call   rax
   14001a09e:	add    rsp,0x28
   14001a0a2:	ret    
   14001a0a3:	int3   
   14001a0a4:	sub    rsp,0x28
   14001a0a8:	mov    rax,QWORD PTR [rip+0x2ed39]        # 0x140048de8
   14001a0af:	xor    rax,QWORD PTR [rip+0x2b1ba]        # 0x140045270
   14001a0b6:	je     0x14001a0ba
   14001a0b8:	call   rax
   14001a0ba:	add    rsp,0x28
   14001a0be:	ret    
   14001a0bf:	int3   
   14001a0c0:	rex.W jmp QWORD PTR [rip+0x1b241]        # 0x140035308
   14001a0c7:	int3   
   14001a0c8:	rex.W jmp QWORD PTR [rip+0x1b249]        # 0x140035318
   14001a0cf:	int3   
   14001a0d0:	rex push rbx
   14001a0d2:	sub    rsp,0x20
   14001a0d6:	mov    ebx,ecx
   14001a0d8:	call   QWORD PTR [rip+0x1b242]        # 0x140035320
   14001a0de:	mov    edx,ebx
   14001a0e0:	mov    rcx,rax
   14001a0e3:	add    rsp,0x20
   14001a0e7:	pop    rbx
   14001a0e8:	rex.W jmp QWORD PTR [rip+0x1b239]        # 0x140035328
   14001a0ef:	int3   
   14001a0f0:	rex push rbx
   14001a0f2:	sub    rsp,0x20
   14001a0f6:	mov    rbx,rcx
   14001a0f9:	xor    ecx,ecx
   14001a0fb:	call   QWORD PTR [rip+0x1b207]        # 0x140035308
   14001a101:	mov    rcx,rbx
   14001a104:	add    rsp,0x20
   14001a108:	pop    rbx
   14001a109:	rex.W jmp QWORD PTR [rip+0x1b1f0]        # 0x140035300
   14001a110:	sub    rsp,0x28
   14001a114:	mov    rax,QWORD PTR [rip+0x2ecb5]        # 0x140048dd0
   14001a11b:	xor    rax,QWORD PTR [rip+0x2b14e]        # 0x140045270
   14001a122:	je     0x14001a126
   14001a124:	call   rax
   14001a126:	add    rsp,0x28
   14001a12a:	ret    
   14001a12b:	int3   
   14001a12c:	sub    rsp,0x28
   14001a130:	mov    ecx,0x3
   14001a135:	call   0x14001b650
   14001a13a:	cmp    eax,0x1
   14001a13d:	je     0x14001a156
   14001a13f:	mov    ecx,0x3
   14001a144:	call   0x14001b650
   14001a149:	test   eax,eax
   14001a14b:	jne    0x14001a16a
   14001a14d:	cmp    DWORD PTR [rip+0x2e07c],0x1        # 0x1400481d0
   14001a154:	jne    0x14001a16a
   14001a156:	mov    ecx,0xfc
   14001a15b:	call   0x14001a1a0
   14001a160:	mov    ecx,0xff
   14001a165:	call   0x14001a1a0
   14001a16a:	add    rsp,0x28
   14001a16e:	ret    
   14001a16f:	int3   
   14001a170:	lea    r9,[rip+0x1ea99]        # 0x140038c10
   14001a177:	xor    edx,edx
   14001a179:	mov    r8,r9
   14001a17c:	cmp    ecx,DWORD PTR [r8]
   14001a17f:	je     0x14001a193
   14001a181:	inc    edx
   14001a183:	add    r8,0x10
   14001a187:	movsxd rax,edx
   14001a18a:	cmp    rax,0x17
   14001a18e:	jb     0x14001a17c
   14001a190:	xor    eax,eax
   14001a192:	ret    
   14001a193:	movsxd rax,edx
   14001a196:	add    rax,rax
   14001a199:	mov    rax,QWORD PTR [r9+rax*8+0x8]
   14001a19e:	ret    
   14001a19f:	int3   
   14001a1a0:	mov    QWORD PTR [rsp+0x10],rbx
   14001a1a5:	mov    QWORD PTR [rsp+0x18],rbp
   14001a1aa:	mov    QWORD PTR [rsp+0x20],rsi
   14001a1af:	push   rdi
   14001a1b0:	push   r14
   14001a1b2:	push   r15
   14001a1b4:	sub    rsp,0x250
   14001a1bb:	mov    rax,QWORD PTR [rip+0x2b0ae]        # 0x140045270
   14001a1c2:	xor    rax,rsp
   14001a1c5:	mov    QWORD PTR [rsp+0x240],rax
   14001a1cd:	mov    edi,ecx
   14001a1cf:	call   0x14001a170
   14001a1d4:	xor    esi,esi
   14001a1d6:	mov    rbx,rax
   14001a1d9:	test   rax,rax
   14001a1dc:	je     0x14001a37b
   14001a1e2:	lea    ecx,[rsi+0x3]
   14001a1e5:	call   0x14001b650
   14001a1ea:	cmp    eax,0x1
   14001a1ed:	je     0x14001a310
   14001a1f3:	lea    ecx,[rsi+0x3]
   14001a1f6:	call   0x14001b650
   14001a1fb:	test   eax,eax
   14001a1fd:	jne    0x14001a20c
   14001a1ff:	cmp    DWORD PTR [rip+0x2dfca],0x1        # 0x1400481d0
   14001a206:	je     0x14001a310
   14001a20c:	cmp    edi,0xfc
   14001a212:	je     0x14001a37b
   14001a218:	lea    rbp,[rip+0x2dfc1]        # 0x1400481e0
   14001a21f:	mov    r15d,0x314
   14001a225:	lea    r8,[rip+0x1f484]        # 0x1400396b0
   14001a22c:	mov    rcx,rbp
   14001a22f:	mov    edx,r15d
   14001a232:	call   0x14000781c
   14001a237:	xor    ecx,ecx
   14001a239:	test   eax,eax
   14001a23b:	jne    0x14001a3fc
   14001a241:	lea    r14,[rip+0x2dfca]        # 0x140048212
   14001a248:	mov    r8d,0x104
   14001a24e:	mov    WORD PTR [rip+0x2e1c5],si        # 0x14004841a
   14001a255:	mov    rdx,r14
   14001a258:	call   QWORD PTR [rip+0x1b11a]        # 0x140035378
   14001a25e:	lea    edi,[r15-0x19]
   14001a262:	test   eax,eax
   14001a264:	jne    0x14001a27f
   14001a266:	lea    r8,[rip+0x1f47b]        # 0x1400396e8
   14001a26d:	mov    edx,edi
   14001a26f:	mov    rcx,r14
   14001a272:	call   0x14000781c
   14001a277:	test   eax,eax
   14001a279:	jne    0x14001a3a8
   14001a27f:	mov    rcx,r14
   14001a282:	call   0x14000cad8
   14001a287:	inc    rax
   14001a28a:	cmp    rax,0x3c
   14001a28e:	jbe    0x14001a2c9
   14001a290:	mov    rcx,r14
   14001a293:	call   0x14000cad8
   14001a298:	lea    rcx,[rbp-0x44]
   14001a29c:	lea    r8,[rip+0x1f475]        # 0x140039718
   14001a2a3:	lea    rcx,[rcx+rax*2]
   14001a2a7:	mov    r9d,0x3
   14001a2ad:	mov    rax,rcx
   14001a2b0:	sub    rax,r14
   14001a2b3:	sar    rax,1
   14001a2b6:	sub    rdi,rax
   14001a2b9:	mov    rdx,rdi
   14001a2bc:	call   0x14000820c
   14001a2c1:	test   eax,eax
   14001a2c3:	jne    0x14001a3bd
   14001a2c9:	lea    r8,[rip+0x1f450]        # 0x140039720
   14001a2d0:	mov    rdx,r15
   14001a2d3:	mov    rcx,rbp
   14001a2d6:	call   0x140008184
   14001a2db:	test   eax,eax
   14001a2dd:	jne    0x14001a3e7
   14001a2e3:	mov    r8,rbx
   14001a2e6:	mov    rdx,r15
   14001a2e9:	mov    rcx,rbp
   14001a2ec:	call   0x140008184
   14001a2f1:	test   eax,eax
   14001a2f3:	jne    0x14001a3d2
   14001a2f9:	lea    rdx,[rip+0x1f430]        # 0x140039730
   14001a300:	mov    r8d,0x12010
   14001a306:	mov    rcx,rbp
   14001a309:	call   0x14002ab20
   14001a30e:	jmp    0x14001a37b
   14001a310:	mov    ecx,0xfffffff4
   14001a315:	call   QWORD PTR [rip+0x1b04d]        # 0x140035368
   14001a31b:	mov    rdi,rax
   14001a31e:	lea    rcx,[rax-0x1]
   14001a322:	cmp    rcx,0xfffffffffffffffd
   14001a326:	ja     0x14001a37b
   14001a328:	mov    r8d,esi
   14001a32b:	lea    rdx,[rsp+0x40]
   14001a330:	mov    cl,BYTE PTR [rbx]
   14001a332:	mov    BYTE PTR [rdx],cl
   14001a334:	cmp    WORD PTR [rbx],si
   14001a337:	je     0x14001a34e
   14001a339:	inc    r8d
   14001a33c:	inc    rdx
   14001a33f:	add    rbx,0x2
   14001a343:	movsxd rax,r8d
   14001a346:	cmp    rax,0x1f4
   14001a34c:	jb     0x14001a330
   14001a34e:	lea    rcx,[rsp+0x40]
   14001a353:	mov    BYTE PTR [rsp+0x233],sil
   14001a35b:	call   0x14001ca40
   14001a360:	lea    r9,[rsp+0x30]
   14001a365:	lea    rdx,[rsp+0x40]
   14001a36a:	mov    rcx,rdi
   14001a36d:	mov    r8,rax
   14001a370:	mov    QWORD PTR [rsp+0x20],rsi
   14001a375:	call   QWORD PTR [rip+0x1aff5]        # 0x140035370
   14001a37b:	mov    rcx,QWORD PTR [rsp+0x240]
   14001a383:	xor    rcx,rsp
   14001a386:	call   0x1400097d0
   14001a38b:	lea    r11,[rsp+0x250]
   14001a393:	mov    rbx,QWORD PTR [r11+0x28]
   14001a397:	mov    rbp,QWORD PTR [r11+0x30]
   14001a39b:	mov    rsi,QWORD PTR [r11+0x38]
   14001a39f:	mov    rsp,r11
   14001a3a2:	pop    r15
   14001a3a4:	pop    r14
   14001a3a6:	pop    rdi
   14001a3a7:	ret    
   14001a3a8:	xor    r9d,r9d
   14001a3ab:	xor    r8d,r8d
   14001a3ae:	xor    edx,edx
   14001a3b0:	xor    ecx,ecx
   14001a3b2:	mov    QWORD PTR [rsp+0x20],rsi
   14001a3b7:	call   0x14000b908
   14001a3bc:	int3   
   14001a3bd:	xor    r9d,r9d
   14001a3c0:	xor    r8d,r8d
   14001a3c3:	xor    edx,edx
   14001a3c5:	xor    ecx,ecx
   14001a3c7:	mov    QWORD PTR [rsp+0x20],rsi
   14001a3cc:	call   0x14000b908
   14001a3d1:	int3   
   14001a3d2:	xor    r9d,r9d
   14001a3d5:	xor    r8d,r8d
   14001a3d8:	xor    edx,edx
   14001a3da:	xor    ecx,ecx
   14001a3dc:	mov    QWORD PTR [rsp+0x20],rsi
   14001a3e1:	call   0x14000b908
   14001a3e6:	int3   
   14001a3e7:	xor    r9d,r9d
   14001a3ea:	xor    r8d,r8d
   14001a3ed:	xor    edx,edx
   14001a3ef:	xor    ecx,ecx
   14001a3f1:	mov    QWORD PTR [rsp+0x20],rsi
   14001a3f6:	call   0x14000b908
   14001a3fb:	int3   
   14001a3fc:	xor    r9d,r9d
   14001a3ff:	xor    r8d,r8d
   14001a402:	xor    edx,edx
   14001a404:	mov    QWORD PTR [rsp+0x20],rsi
   14001a409:	call   0x14000b908
   14001a40e:	int3   
   14001a40f:	int3   
   14001a410:	movsxd r8,DWORD PTR [rcx+0x3c]
   14001a414:	xor    r9d,r9d
   14001a417:	mov    r10,rdx
   14001a41a:	add    r8,rcx
   14001a41d:	movzx  eax,WORD PTR [r8+0x14]
   14001a422:	movzx  r11d,WORD PTR [r8+0x6]
   14001a427:	add    rax,0x18
   14001a42b:	add    rax,r8
   14001a42e:	test   r11d,r11d
   14001a431:	je     0x14001a451
   14001a433:	mov    edx,DWORD PTR [rax+0xc]
   14001a436:	cmp    r10,rdx
   14001a439:	jb     0x14001a445
   14001a43b:	mov    ecx,DWORD PTR [rax+0x8]
   14001a43e:	add    ecx,edx
   14001a440:	cmp    r10,rcx
   14001a443:	jb     0x14001a453
   14001a445:	inc    r9d
   14001a448:	add    rax,0x28
   14001a44c:	cmp    r9d,r11d
   14001a44f:	jb     0x14001a433
   14001a451:	xor    eax,eax
   14001a453:	ret    
   14001a454:	int3   
   14001a455:	int3   
   14001a456:	int3   
   14001a457:	int3   
   14001a458:	int3   
   14001a459:	int3   
   14001a45a:	int3   
   14001a45b:	int3   
   14001a45c:	int3   
   14001a45d:	int3   
   14001a45e:	int3   
   14001a45f:	int3   
   14001a460:	mov    QWORD PTR [rsp+0x8],rbx
   14001a465:	push   rdi
   14001a466:	sub    rsp,0x20
   14001a46a:	mov    rbx,rcx
   14001a46d:	lea    rdi,[rip+0xfffffffffffe5b8c]        # 0x140000000
   14001a474:	mov    rcx,rdi
   14001a477:	call   0x14001a4b0
   14001a47c:	test   eax,eax
   14001a47e:	je     0x14001a4a2
   14001a480:	sub    rbx,rdi
   14001a483:	mov    rdx,rbx
   14001a486:	mov    rcx,rdi
   14001a489:	call   0x14001a410
   14001a48e:	test   rax,rax
   14001a491:	je     0x14001a4a2
   14001a493:	mov    eax,DWORD PTR [rax+0x24]
   14001a496:	shr    eax,0x1f
   14001a499:	not    eax
   14001a49b:	and    eax,0x1
   14001a49e:	jmp    0x14001a4a2
   14001a4a0:	xor    eax,eax
   14001a4a2:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a4a7:	add    rsp,0x20
   14001a4ab:	pop    rdi
   14001a4ac:	ret    
   14001a4ad:	int3   
   14001a4ae:	int3   
   14001a4af:	int3   
   14001a4b0:	mov    rax,rcx
   14001a4b3:	mov    ecx,0x5a4d
   14001a4b8:	cmp    WORD PTR [rax],cx
   14001a4bb:	je     0x14001a4c0
   14001a4bd:	xor    eax,eax
   14001a4bf:	ret    
   14001a4c0:	movsxd rcx,DWORD PTR [rax+0x3c]
   14001a4c4:	add    rcx,rax
   14001a4c7:	xor    eax,eax
   14001a4c9:	cmp    DWORD PTR [rcx],0x4550
   14001a4cf:	jne    0x14001a4dd
   14001a4d1:	mov    edx,0x20b
   14001a4d6:	cmp    WORD PTR [rcx+0x18],dx
   14001a4da:	sete   al
   14001a4dd:	ret    
   14001a4de:	int3   
   14001a4df:	int3   
   14001a4e0:	mov    QWORD PTR [rsp+0x8],rbx
   14001a4e5:	push   rdi
   14001a4e6:	sub    rsp,0x20
   14001a4ea:	xor    edi,edi
   14001a4ec:	lea    rbx,[rip+0x2becd]        # 0x1400463c0
   14001a4f3:	mov    rcx,QWORD PTR [rbx]
   14001a4f6:	call   QWORD PTR [rip+0x1ad24]        # 0x140035220
   14001a4fc:	inc    edi
   14001a4fe:	mov    QWORD PTR [rbx],rax
   14001a501:	movsxd rax,edi
   14001a504:	lea    rbx,[rbx+0x8]
   14001a508:	cmp    rax,0xa
   14001a50c:	jb     0x14001a4f3
   14001a50e:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a513:	add    rsp,0x20
   14001a517:	pop    rdi
   14001a518:	ret    
   14001a519:	int3   
   14001a51a:	int3   
   14001a51b:	int3   
   14001a51c:	sub    rsp,0x28
   14001a520:	call   0x140010d3c
   14001a525:	add    rax,0xb0
   14001a52b:	add    rsp,0x28
   14001a52f:	ret    
   14001a530:	mov    rcx,QWORD PTR [rip+0x2e2e1]        # 0x140048818
   14001a537:	rex.W jmp QWORD PTR [rip+0x1acea]        # 0x140035228
   14001a53e:	int3   
   14001a53f:	int3   
   14001a540:	sub    rsp,0x28
   14001a544:	call   0x140010d3c
   14001a549:	add    rax,0xa8
   14001a54f:	add    rsp,0x28
   14001a553:	ret    
   14001a554:	mov    QWORD PTR [rip+0x2e2ad],rcx        # 0x140048808
   14001a55b:	mov    QWORD PTR [rip+0x2e2ae],rcx        # 0x140048810
   14001a562:	mov    QWORD PTR [rip+0x2e2af],rcx        # 0x140048818
   14001a569:	mov    QWORD PTR [rip+0x2e2b0],rcx        # 0x140048820
   14001a570:	ret    
   14001a571:	int3   
   14001a572:	int3   
   14001a573:	int3   
   14001a574:	mov    QWORD PTR [rsp+0x8],rbx
   14001a579:	mov    QWORD PTR [rsp+0x10],rsi
   14001a57e:	push   rdi
   14001a57f:	sub    rsp,0x20
   14001a583:	mov    ebx,ecx
   14001a585:	xor    ecx,ecx
   14001a587:	call   0x140019628
   14001a58c:	nop
   14001a58d:	test   ebx,ebx
   14001a58f:	jne    0x14001a5aa
   14001a591:	lea    rdi,[rip+0x2e270]        # 0x140048808
   14001a598:	mov    rcx,QWORD PTR [rip+0x2e269]        # 0x140048808
   14001a59f:	call   QWORD PTR [rip+0x1ac83]        # 0x140035228
   14001a5a5:	lea    esi,[rbx+0x2]
   14001a5a8:	jmp    0x14001a5c3
   14001a5aa:	lea    rdi,[rip+0x2e25f]        # 0x140048810
   14001a5b1:	mov    rcx,QWORD PTR [rip+0x2e258]        # 0x140048810
   14001a5b8:	call   QWORD PTR [rip+0x1ac6a]        # 0x140035228
   14001a5be:	mov    esi,0x15
   14001a5c3:	mov    rbx,rax
   14001a5c6:	cmp    rax,0x2
   14001a5ca:	jb     0x14001a5d7
   14001a5cc:	xor    ecx,ecx
   14001a5ce:	call   QWORD PTR [rip+0x1ac4c]        # 0x140035220
   14001a5d4:	mov    QWORD PTR [rdi],rax
   14001a5d7:	xor    ecx,ecx
   14001a5d9:	call   0x140019844
   14001a5de:	test   rbx,rbx
   14001a5e1:	jne    0x14001a5e7
   14001a5e3:	xor    eax,eax
   14001a5e5:	jmp    0x14001a5f6
   14001a5e7:	cmp    rbx,0x1
   14001a5eb:	je     0x14001a5f1
   14001a5ed:	mov    ecx,esi
   14001a5ef:	call   rbx
   14001a5f1:	mov    eax,0x1
   14001a5f6:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a5fb:	mov    rsi,QWORD PTR [rsp+0x38]
   14001a600:	add    rsp,0x20
   14001a604:	pop    rdi
   14001a605:	ret    
   14001a606:	int3   
   14001a607:	int3   
   14001a608:	mov    QWORD PTR [rsp+0x18],rbx
   14001a60d:	mov    QWORD PTR [rsp+0x20],rsi
   14001a612:	push   rdi
   14001a613:	push   r12
   14001a615:	push   r13
   14001a617:	push   r14
   14001a619:	push   r15
   14001a61b:	sub    rsp,0x30
   14001a61f:	mov    ebx,ecx
   14001a621:	xor    r13d,r13d
   14001a624:	and    DWORD PTR [rsp+0x68],r13d
   14001a629:	xor    edi,edi
   14001a62b:	mov    DWORD PTR [rsp+0x60],edi
   14001a62f:	xor    esi,esi
   14001a631:	mov    edx,ecx
   14001a633:	sub    edx,0x2
   14001a636:	je     0x14001a700
   14001a63c:	sub    edx,0x2
   14001a63f:	je     0x14001a6a3
   14001a641:	sub    edx,0x2
   14001a644:	je     0x14001a693
   14001a646:	sub    edx,0x2
   14001a649:	je     0x14001a6a3
   14001a64b:	sub    edx,0x3
   14001a64e:	je     0x14001a6a3
   14001a650:	sub    edx,0x4
   14001a653:	je     0x14001a683
   14001a655:	sub    edx,0x6
   14001a658:	je     0x14001a670
   14001a65a:	dec    edx
   14001a65c:	je     0x14001a693
   14001a65e:	call   0x14000b9f0
   14001a663:	mov    DWORD PTR [rax],0x16
   14001a669:	call   0x14000b8b8
   14001a66e:	jmp    0x14001a6b0
   14001a670:	lea    r14,[rip+0x2e199]        # 0x140048810
   14001a677:	mov    rcx,QWORD PTR [rip+0x2e192]        # 0x140048810
   14001a67e:	jmp    0x14001a70e
   14001a683:	lea    r14,[rip+0x2e196]        # 0x140048820
   14001a68a:	mov    rcx,QWORD PTR [rip+0x2e18f]        # 0x140048820
   14001a691:	jmp    0x14001a70e
   14001a693:	lea    r14,[rip+0x2e17e]        # 0x140048818
   14001a69a:	mov    rcx,QWORD PTR [rip+0x2e177]        # 0x140048818
   14001a6a1:	jmp    0x14001a70e
   14001a6a3:	call   0x140010d60
   14001a6a8:	mov    rsi,rax
   14001a6ab:	test   rax,rax
   14001a6ae:	jne    0x14001a6b8
   14001a6b0:	or     eax,0xffffffff
   14001a6b3:	jmp    0x14001a823
   14001a6b8:	mov    rdx,QWORD PTR [rax+0xa0]
   14001a6bf:	mov    rcx,rdx
   14001a6c2:	movsxd r8,DWORD PTR [rip+0x1f1b7]        # 0x140039880
   14001a6c9:	cmp    DWORD PTR [rcx+0x4],ebx
   14001a6cc:	je     0x14001a6e1
   14001a6ce:	add    rcx,0x10
   14001a6d2:	mov    rax,r8
   14001a6d5:	shl    rax,0x4
   14001a6d9:	add    rax,rdx
   14001a6dc:	cmp    rcx,rax
   14001a6df:	jb     0x14001a6c9
   14001a6e1:	mov    rax,r8
   14001a6e4:	shl    rax,0x4
   14001a6e8:	add    rax,rdx
   14001a6eb:	cmp    rcx,rax
   14001a6ee:	jae    0x14001a6f5
   14001a6f0:	cmp    DWORD PTR [rcx+0x4],ebx
   14001a6f3:	je     0x14001a6f7
   14001a6f5:	xor    ecx,ecx
   14001a6f7:	lea    r14,[rcx+0x8]
   14001a6fb:	mov    r15,QWORD PTR [r14]
   14001a6fe:	jmp    0x14001a720
   14001a700:	lea    r14,[rip+0x2e101]        # 0x140048808
   14001a707:	mov    rcx,QWORD PTR [rip+0x2e0fa]        # 0x140048808
   14001a70e:	mov    edi,0x1
   14001a713:	mov    DWORD PTR [rsp+0x60],edi
   14001a717:	call   QWORD PTR [rip+0x1ab0b]        # 0x140035228
   14001a71d:	mov    r15,rax
   14001a720:	cmp    r15,0x1
   14001a724:	jne    0x14001a72d
   14001a726:	xor    eax,eax
   14001a728:	jmp    0x14001a823
   14001a72d:	test   r15,r15
   14001a730:	jne    0x14001a73c
   14001a732:	lea    ecx,[r15+0x3]
   14001a736:	call   0x14000a06c
   14001a73b:	int3   
   14001a73c:	test   edi,edi
   14001a73e:	je     0x14001a748
   14001a740:	xor    ecx,ecx
   14001a742:	call   0x140019628
   14001a747:	nop
   14001a748:	mov    r12d,0x910
   14001a74e:	cmp    ebx,0xb
   14001a751:	ja     0x14001a786
   14001a753:	bt     r12d,ebx
   14001a757:	jae    0x14001a786
   14001a759:	mov    r13,QWORD PTR [rsi+0xa8]
   14001a760:	mov    QWORD PTR [rsp+0x28],r13
   14001a765:	and    QWORD PTR [rsi+0xa8],0x0
   14001a76d:	cmp    ebx,0x8
   14001a770:	jne    0x14001a7c4
   14001a772:	mov    eax,DWORD PTR [rsi+0xb0]
   14001a778:	mov    DWORD PTR [rsp+0x68],eax
   14001a77c:	mov    DWORD PTR [rsi+0xb0],0x8c
   14001a786:	cmp    ebx,0x8
   14001a789:	jne    0x14001a7c4
   14001a78b:	mov    ecx,DWORD PTR [rip+0x1f0f7]        # 0x140039888
   14001a791:	mov    edx,ecx
   14001a793:	mov    DWORD PTR [rsp+0x20],ecx
   14001a797:	mov    eax,DWORD PTR [rip+0x1f0ef]        # 0x14003988c
   14001a79d:	add    ecx,eax
   14001a79f:	cmp    edx,ecx
   14001a7a1:	jge    0x14001a7cf
   14001a7a3:	movsxd rcx,edx
   14001a7a6:	add    rcx,rcx
   14001a7a9:	mov    rax,QWORD PTR [rsi+0xa0]
   14001a7b0:	and    QWORD PTR [rax+rcx*8+0x8],0x0
   14001a7b6:	inc    edx
   14001a7b8:	mov    DWORD PTR [rsp+0x20],edx
   14001a7bc:	mov    ecx,DWORD PTR [rip+0x1f0c6]        # 0x140039888
   14001a7c2:	jmp    0x14001a797
   14001a7c4:	xor    ecx,ecx
   14001a7c6:	call   QWORD PTR [rip+0x1aa54]        # 0x140035220
   14001a7cc:	mov    QWORD PTR [r14],rax
   14001a7cf:	test   edi,edi
   14001a7d1:	je     0x14001a7da
   14001a7d3:	xor    ecx,ecx
   14001a7d5:	call   0x140019844
   14001a7da:	cmp    ebx,0x8
   14001a7dd:	jne    0x14001a7ec
   14001a7df:	mov    edx,DWORD PTR [rsi+0xb0]
   14001a7e5:	mov    ecx,ebx
   14001a7e7:	call   r15
   14001a7ea:	jmp    0x14001a7f1
   14001a7ec:	mov    ecx,ebx
   14001a7ee:	call   r15
   14001a7f1:	cmp    ebx,0xb
   14001a7f4:	ja     0x14001a726
   14001a7fa:	bt     r12d,ebx
   14001a7fe:	jae    0x14001a726
   14001a804:	mov    QWORD PTR [rsi+0xa8],r13
   14001a80b:	cmp    ebx,0x8
   14001a80e:	jne    0x14001a726
   14001a814:	mov    eax,DWORD PTR [rsp+0x68]
   14001a818:	mov    DWORD PTR [rsi+0xb0],eax
   14001a81e:	jmp    0x14001a726
   14001a823:	mov    rbx,QWORD PTR [rsp+0x70]
   14001a828:	mov    rsi,QWORD PTR [rsp+0x78]
   14001a82d:	add    rsp,0x30
   14001a831:	pop    r15
   14001a833:	pop    r14
   14001a835:	pop    r13
   14001a837:	pop    r12
   14001a839:	pop    rdi
   14001a83a:	ret    
   14001a83b:	int3   
   14001a83c:	mov    r9d,ecx
   14001a83f:	movsxd rcx,DWORD PTR [rip+0x1f03a]        # 0x140039880
   14001a846:	mov    rax,rdx
   14001a849:	cmp    DWORD PTR [rax+0x4],r9d
   14001a84d:	je     0x14001a862
   14001a84f:	mov    r8,rcx
   14001a852:	add    rax,0x10
   14001a856:	shl    r8,0x4
   14001a85a:	add    r8,rdx
   14001a85d:	cmp    rax,r8
   14001a860:	jb     0x14001a849
   14001a862:	shl    rcx,0x4
   14001a866:	add    rcx,rdx
   14001a869:	cmp    rax,rcx
   14001a86c:	jae    0x14001a874
   14001a86e:	cmp    DWORD PTR [rax+0x4],r9d
   14001a872:	je     0x14001a876
   14001a874:	xor    eax,eax
   14001a876:	ret    
   14001a877:	int3   
   14001a878:	mov    QWORD PTR [rsp+0x8],rbx
   14001a87d:	mov    QWORD PTR [rsp+0x10],rsi
   14001a882:	mov    QWORD PTR [rsp+0x18],rdi
   14001a887:	push   r14
   14001a889:	sub    rsp,0x20
   14001a88d:	mov    rsi,rdx
   14001a890:	mov    edi,ecx
   14001a892:	xor    r14d,r14d
   14001a895:	xor    ebx,ebx
   14001a897:	lea    rax,[rdx-0x3]
   14001a89b:	cmp    rax,0x1
   14001a89f:	jbe    0x14001aaca
   14001a8a5:	cmp    ecx,0x16
   14001a8a8:	ja     0x14001a9e4
   14001a8ae:	mov    eax,0x608044
   14001a8b3:	bt     eax,ecx
   14001a8b6:	jae    0x14001a9e4
   14001a8bc:	xor    ecx,ecx
   14001a8be:	call   0x140019628
   14001a8c3:	nop
   14001a8c4:	cmp    edi,0x2
   14001a8c7:	je     0x14001a8ce
   14001a8c9:	cmp    edi,0x15
   14001a8cc:	jne    0x14001a90b
   14001a8ce:	cmp    DWORD PTR [rip+0x2df53],0x0        # 0x140048828
   14001a8d5:	jne    0x14001a90b
   14001a8d7:	mov    edx,0x1
   14001a8dc:	lea    rcx,[rip+0xfffffffffffffc91]        # 0x14001a574
   14001a8e3:	call   QWORD PTR [rip+0x1aa97]        # 0x140035380
   14001a8e9:	cmp    eax,0x1
   14001a8ec:	jne    0x14001a8f6
   14001a8ee:	mov    DWORD PTR [rip+0x2df34],eax        # 0x140048828
   14001a8f4:	jmp    0x14001a90b
   14001a8f6:	call   0x14000b980
   14001a8fb:	mov    rbx,rax
   14001a8fe:	call   QWORD PTR [rip+0x1a8e4]        # 0x1400351e8
   14001a904:	mov    DWORD PTR [rbx],eax
   14001a906:	mov    ebx,0x1
   14001a90b:	mov    ecx,edi
   14001a90d:	sub    ecx,0x2
   14001a910:	je     0x14001a9aa
   14001a916:	sub    ecx,0x4
   14001a919:	je     0x14001a982
   14001a91b:	sub    ecx,0x9
   14001a91e:	je     0x14001a95a
   14001a920:	sub    ecx,0x6
   14001a923:	je     0x14001a92e
   14001a925:	dec    ecx
   14001a927:	je     0x14001a982
   14001a929:	jmp    0x14001a9d0
   14001a92e:	mov    rcx,QWORD PTR [rip+0x2dedb]        # 0x140048810
   14001a935:	call   QWORD PTR [rip+0x1a8ed]        # 0x140035228
   14001a93b:	mov    r14,rax
   14001a93e:	cmp    rsi,0x2
   14001a942:	je     0x14001a9d0
   14001a948:	mov    rcx,rsi
   14001a94b:	call   QWORD PTR [rip+0x1a8cf]        # 0x140035220
   14001a951:	mov    QWORD PTR [rip+0x2deb8],rax        # 0x140048810
   14001a958:	jmp    0x14001a9d0
   14001a95a:	mov    rcx,QWORD PTR [rip+0x2debf]        # 0x140048820
   14001a961:	call   QWORD PTR [rip+0x1a8c1]        # 0x140035228
   14001a967:	mov    r14,rax
   14001a96a:	cmp    rsi,0x2
   14001a96e:	je     0x14001a9d0
   14001a970:	mov    rcx,rsi
   14001a973:	call   QWORD PTR [rip+0x1a8a7]        # 0x140035220
   14001a979:	mov    QWORD PTR [rip+0x2dea0],rax        # 0x140048820
   14001a980:	jmp    0x14001a9d0
   14001a982:	mov    rcx,QWORD PTR [rip+0x2de8f]        # 0x140048818
   14001a989:	call   QWORD PTR [rip+0x1a899]        # 0x140035228
   14001a98f:	mov    r14,rax
   14001a992:	cmp    rsi,0x2
   14001a996:	je     0x14001a9d0
   14001a998:	mov    rcx,rsi
   14001a99b:	call   QWORD PTR [rip+0x1a87f]        # 0x140035220
   14001a9a1:	mov    QWORD PTR [rip+0x2de70],rax        # 0x140048818
   14001a9a8:	jmp    0x14001a9d0
   14001a9aa:	mov    rcx,QWORD PTR [rip+0x2de57]        # 0x140048808
   14001a9b1:	call   QWORD PTR [rip+0x1a871]        # 0x140035228
   14001a9b7:	mov    r14,rax
   14001a9ba:	cmp    rsi,0x2
   14001a9be:	je     0x14001a9d0
   14001a9c0:	mov    rcx,rsi
   14001a9c3:	call   QWORD PTR [rip+0x1a857]        # 0x140035220
   14001a9c9:	mov    QWORD PTR [rip+0x2de38],rax        # 0x140048808
   14001a9d0:	xor    ecx,ecx
   14001a9d2:	call   0x140019844
   14001a9d7:	test   ebx,ebx
   14001a9d9:	jne    0x14001aaca
   14001a9df:	jmp    0x14001aac5
   14001a9e4:	cmp    ecx,0xb
   14001a9e7:	ja     0x14001aaca
   14001a9ed:	mov    eax,0x910
   14001a9f2:	bt     eax,ecx
   14001a9f5:	jae    0x14001aaca
   14001a9fb:	call   0x140010d60
   14001aa00:	mov    rbx,rax
   14001aa03:	test   rax,rax
   14001aa06:	je     0x14001aaca
   14001aa0c:	lea    r14,[rip+0x1edad]        # 0x1400397c0
   14001aa13:	cmp    QWORD PTR [rax+0xa0],r14
   14001aa1a:	jne    0x14001aa4a
   14001aa1c:	movsxd rcx,DWORD PTR [rip+0x1ee61]        # 0x140039884
   14001aa23:	call   0x14000fc4c
   14001aa28:	mov    QWORD PTR [rbx+0xa0],rax
   14001aa2f:	test   rax,rax
   14001aa32:	je     0x14001aaca
   14001aa38:	movsxd r8,DWORD PTR [rip+0x1ee45]        # 0x140039884
   14001aa3f:	mov    rdx,r14
   14001aa42:	mov    rcx,rax
   14001aa45:	call   0x14000b1c0
   14001aa4a:	mov    rdx,QWORD PTR [rbx+0xa0]
   14001aa51:	mov    rcx,rdx
   14001aa54:	movsxd r8,DWORD PTR [rip+0x1ee25]        # 0x140039880
   14001aa5b:	cmp    DWORD PTR [rcx+0x4],edi
   14001aa5e:	je     0x14001aa73
   14001aa60:	add    rcx,0x10
   14001aa64:	mov    rax,r8
   14001aa67:	shl    rax,0x4
   14001aa6b:	add    rax,rdx
   14001aa6e:	cmp    rcx,rax
   14001aa71:	jb     0x14001aa5b
   14001aa73:	mov    rax,r8
   14001aa76:	shl    rax,0x4
   14001aa7a:	add    rax,rdx
   14001aa7d:	cmp    rcx,rax
   14001aa80:	jae    0x14001aa87
   14001aa82:	cmp    DWORD PTR [rcx+0x4],edi
   14001aa85:	je     0x14001aa89
   14001aa87:	xor    ecx,ecx
   14001aa89:	test   rcx,rcx
   14001aa8c:	je     0x14001aaca
   14001aa8e:	mov    r14,QWORD PTR [rcx+0x8]
   14001aa92:	cmp    rsi,0x2
   14001aa96:	je     0x14001aac5
   14001aa98:	lea    rdx,[rcx+0x4]
   14001aa9c:	jmp    0x14001aac1
   14001aa9e:	mov    QWORD PTR [rdx+0x4],rsi
   14001aaa2:	lea    rdx,[rdx+0x10]
   14001aaa6:	movsxd rcx,DWORD PTR [rip+0x1edd3]        # 0x140039880
   14001aaad:	shl    rcx,0x4
   14001aab1:	add    rcx,QWORD PTR [rbx+0xa0]
   14001aab8:	lea    rax,[rdx-0x4]
   14001aabc:	cmp    rax,rcx
   14001aabf:	jae    0x14001aac5
   14001aac1:	cmp    DWORD PTR [rdx],edi
   14001aac3:	je     0x14001aa9e
   14001aac5:	mov    rax,r14
   14001aac8:	jmp    0x14001aaed
   14001aaca:	cmp    edi,0x11
   14001aacd:	ja     0x14001aad9
   14001aacf:	mov    eax,0x3200a
   14001aad4:	bt     eax,edi
   14001aad7:	jb     0x14001aae9
   14001aad9:	call   0x14000b9f0
   14001aade:	mov    DWORD PTR [rax],0x16
   14001aae4:	call   0x14000b8b8
   14001aae9:	or     rax,0xffffffffffffffff
   14001aaed:	mov    rbx,QWORD PTR [rsp+0x30]
   14001aaf2:	mov    rsi,QWORD PTR [rsp+0x38]
   14001aaf7:	mov    rdi,QWORD PTR [rsp+0x40]
   14001aafc:	add    rsp,0x20
   14001ab00:	pop    r14
   14001ab02:	ret    
   14001ab03:	int3   
   14001ab04:	mov    QWORD PTR [rip+0x2dd25],rcx        # 0x140048830
   14001ab0b:	ret    
   14001ab0c:	mov    QWORD PTR [rsp+0x8],rbx
   14001ab11:	mov    QWORD PTR [rsp+0x10],rsi
   14001ab16:	mov    QWORD PTR [rsp+0x18],rdi
   14001ab1b:	push   r14
   14001ab1d:	sub    rsp,0x20
   14001ab21:	mov    r14,rcx
   14001ab24:	mov    rcx,QWORD PTR [rip+0x2dd05]        # 0x140048830
   14001ab2b:	call   QWORD PTR [rip+0x1a6f7]        # 0x140035228
   14001ab31:	mov    rdi,rax
   14001ab34:	test   r14,r14
   14001ab37:	jne    0x14001ab51
   14001ab39:	call   0x14000b9f0
   14001ab3e:	mov    ebx,0x16
   14001ab43:	mov    DWORD PTR [rax],ebx
   14001ab45:	call   0x14000b8b8
   14001ab4a:	mov    eax,ebx
   14001ab4c:	jmp    0x14001ac30
   14001ab51:	and    DWORD PTR [r14],0x0
   14001ab55:	test   rax,rax
   14001ab58:	jne    0x14001ac0c
   14001ab5e:	lea    rcx,[rip+0x1ec1b]        # 0x140039780
   14001ab65:	xor    edx,edx
   14001ab67:	mov    r8d,0x800
   14001ab6d:	call   QWORD PTR [rip+0x1a815]        # 0x140035388
   14001ab73:	mov    rsi,rax
   14001ab76:	test   rax,rax
   14001ab79:	jne    0x14001aba0
   14001ab7b:	call   QWORD PTR [rip+0x1a667]        # 0x1400351e8
   14001ab81:	cmp    eax,0x57
   14001ab84:	jne    0x14001ab39
   14001ab86:	lea    rcx,[rip+0x1ebf3]        # 0x140039780
   14001ab8d:	xor    r8d,r8d
   14001ab90:	xor    edx,edx
   14001ab92:	call   QWORD PTR [rip+0x1a7f0]        # 0x140035388
   14001ab98:	mov    rsi,rax
   14001ab9b:	test   rax,rax
   14001ab9e:	je     0x14001ab39
   14001aba0:	lea    rdx,[rip+0x1ebf9]        # 0x1400397a0
   14001aba7:	mov    rcx,rsi
   14001abaa:	call   QWORD PTR [rip+0x1a508]        # 0x1400350b8
   14001abb0:	mov    rdi,rax
   14001abb3:	test   rax,rax
   14001abb6:	jne    0x14001abe3
   14001abb8:	call   0x14000b9f0
   14001abbd:	mov    rbx,rax
   14001abc0:	call   QWORD PTR [rip+0x1a622]        # 0x1400351e8
   14001abc6:	mov    ecx,eax
   14001abc8:	call   0x14000ba88
   14001abcd:	mov    DWORD PTR [rbx],eax
   14001abcf:	call   0x14000b8b8
   14001abd4:	call   QWORD PTR [rip+0x1a60e]        # 0x1400351e8
   14001abda:	mov    ecx,eax
   14001abdc:	call   0x14000ba88
   14001abe1:	jmp    0x14001ac30
   14001abe3:	mov    rcx,rax
   14001abe6:	call   QWORD PTR [rip+0x1a634]        # 0x140035220
   14001abec:	xor    ecx,ecx
   14001abee:	mov    rbx,rax
   14001abf1:	call   QWORD PTR [rip+0x1a629]        # 0x140035220
   14001abf7:	xchg   QWORD PTR [rip+0x2dc32],rbx        # 0x140048830
   14001abfe:	cmp    rbx,rax
   14001ac01:	je     0x14001ac0c
   14001ac03:	mov    rcx,rsi
   14001ac06:	call   QWORD PTR [rip+0x1a4a4]        # 0x1400350b0
   14001ac0c:	mov    edx,0x4
   14001ac11:	mov    rcx,r14
   14001ac14:	call   rdi
   14001ac16:	test   eax,eax
   14001ac18:	jne    0x14001ac2e
   14001ac1a:	call   0x14000b9f0
   14001ac1f:	mov    DWORD PTR [rax],0xc
   14001ac25:	call   0x14000b9f0
   14001ac2a:	mov    eax,DWORD PTR [rax]
   14001ac2c:	jmp    0x14001ac30
   14001ac2e:	xor    eax,eax
   14001ac30:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ac35:	mov    rsi,QWORD PTR [rsp+0x38]
   14001ac3a:	mov    rdi,QWORD PTR [rsp+0x40]
   14001ac3f:	add    rsp,0x20
   14001ac43:	pop    r14
   14001ac45:	ret    
   14001ac46:	int3   
   14001ac47:	int3   
   14001ac48:	sub    rsp,0x28
   14001ac4c:	mov    rax,QWORD PTR [rcx]
   14001ac4f:	cmp    DWORD PTR [rax],0xe06d7363
   14001ac55:	jne    0x14001ac73
   14001ac57:	cmp    DWORD PTR [rax+0x18],0x4
   14001ac5b:	jne    0x14001ac73
   14001ac5d:	mov    ecx,DWORD PTR [rax+0x20]
   14001ac60:	lea    eax,[rcx-0x19930520]
   14001ac66:	cmp    eax,0x2
   14001ac69:	jbe    0x14001ac7a
   14001ac6b:	cmp    ecx,0x1994000
   14001ac71:	je     0x14001ac7a
   14001ac73:	xor    eax,eax
   14001ac75:	add    rsp,0x28
   14001ac79:	ret    
   14001ac7a:	call   0x140018c6c
   14001ac7f:	int3   
   14001ac80:	sub    rsp,0x28
   14001ac84:	lea    rcx,[rip+0xffffffffffffffbd]        # 0x14001ac48
   14001ac8b:	call   0x14001a0c0
   14001ac90:	xor    eax,eax
   14001ac92:	add    rsp,0x28
   14001ac96:	ret    
   14001ac97:	int3   
   14001ac98:	mov    QWORD PTR [rsp+0x8],rbx
   14001ac9d:	mov    QWORD PTR [rsp+0x10],rbp
   14001aca2:	mov    QWORD PTR [rsp+0x18],rsi
   14001aca7:	push   rdi
   14001aca8:	sub    rsp,0x20
   14001acac:	mov    rsi,rdx
   14001acaf:	mov    edi,ecx
   14001acb1:	call   0x140010d60
   14001acb6:	xor    r9d,r9d
   14001acb9:	mov    rbx,rax
   14001acbc:	test   rax,rax
   14001acbf:	je     0x14001ae4d
   14001acc5:	mov    rdx,QWORD PTR [rax+0xa0]
   14001accc:	mov    rcx,rdx
   14001accf:	cmp    DWORD PTR [rcx],edi
   14001acd1:	je     0x14001ace3
   14001acd3:	lea    rax,[rdx+0xc0]
   14001acda:	add    rcx,0x10
   14001acde:	cmp    rcx,rax
   14001ace1:	jb     0x14001accf
   14001ace3:	lea    rax,[rdx+0xc0]
   14001acea:	cmp    rcx,rax
   14001aced:	jae    0x14001acf3
   14001acef:	cmp    DWORD PTR [rcx],edi
   14001acf1:	je     0x14001acf6
   14001acf3:	mov    rcx,r9
   14001acf6:	test   rcx,rcx
   14001acf9:	je     0x14001ae4d
   14001acff:	mov    r8,QWORD PTR [rcx+0x8]
   14001ad03:	test   r8,r8
   14001ad06:	je     0x14001ae4d
   14001ad0c:	cmp    r8,0x5
   14001ad10:	jne    0x14001ad1f
   14001ad12:	mov    QWORD PTR [rcx+0x8],r9
   14001ad16:	lea    eax,[r8-0x4]
   14001ad1a:	jmp    0x14001ae4f
   14001ad1f:	cmp    r8,0x1
   14001ad23:	jne    0x14001ad2d
   14001ad25:	or     eax,0xffffffff
   14001ad28:	jmp    0x14001ae4f
   14001ad2d:	mov    rbp,QWORD PTR [rbx+0xa8]
   14001ad34:	mov    QWORD PTR [rbx+0xa8],rsi
   14001ad3b:	cmp    DWORD PTR [rcx+0x4],0x8
   14001ad3f:	jne    0x14001ae37
   14001ad45:	mov    edx,0x30
   14001ad4a:	mov    rax,QWORD PTR [rbx+0xa0]
   14001ad51:	add    rdx,0x10
   14001ad55:	mov    QWORD PTR [rdx+rax*1-0x8],r9
   14001ad5a:	cmp    rdx,0xc0
   14001ad61:	jl     0x14001ad4a
   14001ad63:	cmp    DWORD PTR [rcx],0xc000008e
   14001ad69:	mov    edi,DWORD PTR [rbx+0xb0]
   14001ad6f:	jne    0x14001ad80
   14001ad71:	mov    DWORD PTR [rbx+0xb0],0x83
   14001ad7b:	jmp    0x14001ae21
   14001ad80:	cmp    DWORD PTR [rcx],0xc0000090
   14001ad86:	jne    0x14001ad97
   14001ad88:	mov    DWORD PTR [rbx+0xb0],0x81
   14001ad92:	jmp    0x14001ae21
   14001ad97:	cmp    DWORD PTR [rcx],0xc0000091
   14001ad9d:	jne    0x14001adab
   14001ad9f:	mov    DWORD PTR [rbx+0xb0],0x84
   14001ada9:	jmp    0x14001ae21
   14001adab:	cmp    DWORD PTR [rcx],0xc0000093
   14001adb1:	jne    0x14001adbf
   14001adb3:	mov    DWORD PTR [rbx+0xb0],0x85
   14001adbd:	jmp    0x14001ae21
   14001adbf:	cmp    DWORD PTR [rcx],0xc000008d
   14001adc5:	jne    0x14001add3
   14001adc7:	mov    DWORD PTR [rbx+0xb0],0x82
   14001add1:	jmp    0x14001ae21
   14001add3:	cmp    DWORD PTR [rcx],0xc000008f
   14001add9:	jne    0x14001ade7
   14001addb:	mov    DWORD PTR [rbx+0xb0],0x86
   14001ade5:	jmp    0x14001ae21
   14001ade7:	cmp    DWORD PTR [rcx],0xc0000092
   14001aded:	jne    0x14001adfb
   14001adef:	mov    DWORD PTR [rbx+0xb0],0x8a
   14001adf9:	jmp    0x14001ae21
   14001adfb:	cmp    DWORD PTR [rcx],0xc00002b5
   14001ae01:	jne    0x14001ae0f
   14001ae03:	mov    DWORD PTR [rbx+0xb0],0x8d
   14001ae0d:	jmp    0x14001ae21
   14001ae0f:	cmp    DWORD PTR [rcx],0xc00002b4
   14001ae15:	jne    0x14001ae21
   14001ae17:	mov    DWORD PTR [rbx+0xb0],0x8e
   14001ae21:	mov    edx,DWORD PTR [rbx+0xb0]
   14001ae27:	mov    ecx,0x8
   14001ae2c:	call   r8
   14001ae2f:	mov    DWORD PTR [rbx+0xb0],edi
   14001ae35:	jmp    0x14001ae41
   14001ae37:	mov    QWORD PTR [rcx+0x8],r9
   14001ae3b:	mov    ecx,DWORD PTR [rcx+0x4]
   14001ae3e:	call   r8
   14001ae41:	mov    QWORD PTR [rbx+0xa8],rbp
   14001ae48:	jmp    0x14001ad25
   14001ae4d:	xor    eax,eax
   14001ae4f:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ae54:	mov    rbp,QWORD PTR [rsp+0x38]
   14001ae59:	mov    rsi,QWORD PTR [rsp+0x40]
   14001ae5e:	add    rsp,0x20
   14001ae62:	pop    rdi
   14001ae63:	ret    
   14001ae64:	mov    eax,0xe06d7363
   14001ae69:	cmp    ecx,eax
   14001ae6b:	jne    0x14001ae74
   14001ae6d:	mov    ecx,eax
   14001ae6f:	jmp    0x14001ac98
   14001ae74:	xor    eax,eax
   14001ae76:	ret    
   14001ae77:	int3   
   14001ae78:	mov    r9d,ecx
   14001ae7b:	mov    rax,rdx
   14001ae7e:	cmp    DWORD PTR [rax],ecx
   14001ae80:	je     0x14001ae92
   14001ae82:	lea    r8,[rdx+0xc0]
   14001ae89:	add    rax,0x10
   14001ae8d:	cmp    rax,r8
   14001ae90:	jb     0x14001ae7e
   14001ae92:	lea    rcx,[rdx+0xc0]
   14001ae99:	cmp    rax,rcx
   14001ae9c:	jae    0x14001aea3
   14001ae9e:	cmp    DWORD PTR [rax],r9d
   14001aea1:	je     0x14001aea5
   14001aea3:	xor    eax,eax
   14001aea5:	ret    
   14001aea6:	int3   
   14001aea7:	int3   
   14001aea8:	mov    rax,QWORD PTR [rip+0x2d989]        # 0x140048838
   14001aeaf:	ret    
   14001aeb0:	sub    rsp,0x28
   14001aeb4:	call   QWORD PTR [rip+0x1a4d6]        # 0x140035390
   14001aeba:	xor    ecx,ecx
   14001aebc:	test   rax,rax
   14001aebf:	mov    QWORD PTR [rip+0x2d972],rax        # 0x140048838
   14001aec6:	setne  cl
   14001aec9:	mov    eax,ecx
   14001aecb:	add    rsp,0x28
   14001aecf:	ret    
   14001aed0:	and    QWORD PTR [rip+0x2d960],0x0        # 0x140048838
   14001aed8:	ret    
   14001aed9:	int3   
   14001aeda:	int3   
   14001aedb:	int3   
   14001aedc:	mov    rax,rsp
   14001aedf:	mov    QWORD PTR [rax+0x8],rbx
   14001aee3:	mov    QWORD PTR [rax+0x10],rsi
   14001aee7:	mov    QWORD PTR [rax+0x18],rdi
   14001aeeb:	mov    QWORD PTR [rax+0x20],r12
   14001aeef:	push   r13
   14001aef1:	push   r14
   14001aef3:	push   r15
   14001aef5:	sub    rsp,0xc0
   14001aefc:	mov    QWORD PTR [rsp+0x48],rsp
   14001af01:	mov    ecx,0xb
   14001af06:	call   0x140019628
   14001af0b:	nop
   14001af0c:	mov    edi,0x58
   14001af11:	mov    edx,edi
   14001af13:	lea    r13d,[rdi-0x38]
   14001af17:	mov    ecx,r13d
   14001af1a:	call   0x14000fbcc
   14001af1f:	mov    rcx,rax
   14001af22:	mov    QWORD PTR [rsp+0x28],rax
   14001af27:	xor    r12d,r12d
   14001af2a:	test   rax,rax
   14001af2d:	jne    0x14001af48
   14001af2f:	lea    rdx,[rip+0xa]        # 0x14001af40
   14001af36:	mov    rcx,rsp
   14001af39:	call   0x14001d0d0
   14001af3e:	nop
   14001af3f:	nop
   14001af40:	or     eax,0xffffffff
   14001af43:	jmp    0x14001b1e7
   14001af48:	mov    QWORD PTR [rip+0x2d8f1],rax        # 0x140048840
   14001af4f:	mov    DWORD PTR [rip+0x2de0e],r13d        # 0x140048d64
   14001af56:	add    rax,0xb00
   14001af5c:	cmp    rcx,rax
   14001af5f:	jae    0x14001af9a
   14001af61:	mov    WORD PTR [rcx+0x8],0xa00
   14001af67:	or     QWORD PTR [rcx],0xffffffffffffffff
   14001af6b:	mov    DWORD PTR [rcx+0xc],r12d
   14001af6f:	and    BYTE PTR [rcx+0x38],0x80
   14001af73:	mov    al,BYTE PTR [rcx+0x38]
   14001af76:	and    al,0x7f
   14001af78:	mov    BYTE PTR [rcx+0x38],al
   14001af7b:	mov    WORD PTR [rcx+0x39],0xa0a
   14001af81:	mov    DWORD PTR [rcx+0x50],r12d
   14001af85:	mov    BYTE PTR [rcx+0x4c],r12b
   14001af89:	add    rcx,rdi
   14001af8c:	mov    QWORD PTR [rsp+0x28],rcx
   14001af91:	mov    rax,QWORD PTR [rip+0x2d8a8]        # 0x140048840
   14001af98:	jmp    0x14001af56
   14001af9a:	lea    rcx,[rsp+0x50]
   14001af9f:	call   QWORD PTR [rip+0x1a3ab]        # 0x140035350
   14001afa5:	cmp    WORD PTR [rsp+0x92],r12w
   14001afae:	je     0x14001b0f6
   14001afb4:	mov    rax,QWORD PTR [rsp+0x98]
   14001afbc:	test   rax,rax
   14001afbf:	je     0x14001b0f6
   14001afc5:	lea    r14,[rax+0x4]
   14001afc9:	mov    QWORD PTR [rsp+0x38],r14
   14001afce:	movsxd rsi,DWORD PTR [rax]
   14001afd1:	add    rsi,r14
   14001afd4:	mov    QWORD PTR [rsp+0x40],rsi
   14001afd9:	mov    r15d,0x800
   14001afdf:	cmp    DWORD PTR [rax],r15d
   14001afe2:	cmovl  r15d,DWORD PTR [rax]
   14001afe6:	mov    ebx,0x1
   14001afeb:	mov    DWORD PTR [rsp+0x30],ebx
   14001afef:	cmp    DWORD PTR [rip+0x2dd6e],r15d        # 0x140048d64
   14001aff6:	jge    0x14001b06b
   14001aff8:	mov    rdx,rdi
   14001affb:	mov    rcx,r13
   14001affe:	call   0x14000fbcc
   14001b003:	mov    rcx,rax
   14001b006:	mov    QWORD PTR [rsp+0x28],rax
   14001b00b:	test   rax,rax
   14001b00e:	jne    0x14001b019
   14001b010:	mov    r15d,DWORD PTR [rip+0x2dd4d]        # 0x140048d64
   14001b017:	jmp    0x14001b06b
   14001b019:	movsxd rdx,ebx
   14001b01c:	lea    r8,[rip+0x2d81d]        # 0x140048840
   14001b023:	mov    QWORD PTR [r8+rdx*8],rax
   14001b027:	add    DWORD PTR [rip+0x2dd36],r13d        # 0x140048d64
   14001b02e:	mov    rax,QWORD PTR [r8+rdx*8]
   14001b032:	add    rax,0xb00
   14001b038:	cmp    rcx,rax
   14001b03b:	jae    0x14001b067
   14001b03d:	mov    WORD PTR [rcx+0x8],0xa00
   14001b043:	or     QWORD PTR [rcx],0xffffffffffffffff
   14001b047:	mov    DWORD PTR [rcx+0xc],r12d
   14001b04b:	and    BYTE PTR [rcx+0x38],0x80
   14001b04f:	mov    WORD PTR [rcx+0x39],0xa0a
   14001b055:	mov    DWORD PTR [rcx+0x50],r12d
   14001b059:	mov    BYTE PTR [rcx+0x4c],r12b
   14001b05d:	add    rcx,rdi
   14001b060:	mov    QWORD PTR [rsp+0x28],rcx
   14001b065:	jmp    0x14001b02e
   14001b067:	inc    ebx
   14001b069:	jmp    0x14001afeb
   14001b06b:	mov    edi,r12d
   14001b06e:	mov    DWORD PTR [rsp+0x20],r12d
   14001b073:	lea    r13,[rip+0x2d7c6]        # 0x140048840
   14001b07a:	cmp    edi,r15d
   14001b07d:	jge    0x14001b0f6
   14001b07f:	mov    rcx,QWORD PTR [rsi]
   14001b082:	lea    rax,[rcx+0x2]
   14001b086:	cmp    rax,0x1
   14001b08a:	jbe    0x14001b0dd
   14001b08c:	test   BYTE PTR [r14],0x1
   14001b090:	je     0x14001b0dd
   14001b092:	test   BYTE PTR [r14],0x8
   14001b096:	jne    0x14001b0a2
   14001b098:	call   QWORD PTR [rip+0x1a2fa]        # 0x140035398
   14001b09e:	test   eax,eax
   14001b0a0:	je     0x14001b0dd
   14001b0a2:	movsxd rcx,edi
   14001b0a5:	mov    rax,rcx
   14001b0a8:	sar    rax,0x5
   14001b0ac:	and    ecx,0x1f
   14001b0af:	imul   rbx,rcx,0x58
   14001b0b3:	add    rbx,QWORD PTR [r13+rax*8+0x0]
   14001b0b8:	mov    QWORD PTR [rsp+0x28],rbx
   14001b0bd:	mov    rax,QWORD PTR [rsi]
   14001b0c0:	mov    QWORD PTR [rbx],rax
   14001b0c3:	mov    al,BYTE PTR [r14]
   14001b0c6:	mov    BYTE PTR [rbx+0x8],al
   14001b0c9:	lea    rcx,[rbx+0x10]
   14001b0cd:	xor    r8d,r8d
   14001b0d0:	mov    edx,0xfa0
   14001b0d5:	call   0x140019bcc
   14001b0da:	inc    DWORD PTR [rbx+0xc]
   14001b0dd:	inc    edi
   14001b0df:	mov    DWORD PTR [rsp+0x20],edi
   14001b0e3:	inc    r14
   14001b0e6:	mov    QWORD PTR [rsp+0x38],r14
   14001b0eb:	add    rsi,0x8
   14001b0ef:	mov    QWORD PTR [rsp+0x40],rsi
   14001b0f4:	jmp    0x14001b07a
   14001b0f6:	mov    edi,r12d
   14001b0f9:	mov    DWORD PTR [rsp+0x20],r12d
   14001b0fe:	mov    r15,0xfffffffffffffffe
   14001b105:	cmp    edi,0x3
   14001b108:	jge    0x14001b1db
   14001b10e:	movsxd rsi,edi
   14001b111:	imul   rbx,rsi,0x58
   14001b115:	add    rbx,QWORD PTR [rip+0x2d724]        # 0x140048840
   14001b11c:	mov    QWORD PTR [rsp+0x28],rbx
   14001b121:	mov    rax,QWORD PTR [rbx]
   14001b124:	add    rax,0x2
   14001b128:	cmp    rax,0x1
   14001b12c:	jbe    0x14001b13e
   14001b12e:	movsx  eax,BYTE PTR [rbx+0x8]
   14001b132:	bts    eax,0x7
   14001b136:	mov    BYTE PTR [rbx+0x8],al
   14001b139:	jmp    0x14001b1d0
   14001b13e:	mov    BYTE PTR [rbx+0x8],0x81
   14001b142:	lea    eax,[rdi-0x1]
   14001b145:	neg    eax
   14001b147:	sbb    ecx,ecx
   14001b149:	add    ecx,0xfffffff5
   14001b14c:	mov    eax,0xfffffff6
   14001b151:	test   edi,edi
   14001b153:	cmove  ecx,eax
   14001b156:	call   QWORD PTR [rip+0x1a20c]        # 0x140035368
   14001b15c:	mov    r14,rax
   14001b15f:	lea    rcx,[rax+0x1]
   14001b163:	cmp    rcx,0x1
   14001b167:	jbe    0x14001b1af
   14001b169:	mov    rcx,rax
   14001b16c:	call   QWORD PTR [rip+0x1a226]        # 0x140035398
   14001b172:	test   eax,eax
   14001b174:	je     0x14001b1af
   14001b176:	mov    QWORD PTR [rbx],r14
   14001b179:	movzx  eax,al
   14001b17c:	cmp    eax,0x2
   14001b17f:	jne    0x14001b18a
   14001b181:	movsx  eax,BYTE PTR [rbx+0x8]
   14001b185:	or     eax,0x40
   14001b188:	jmp    0x14001b196
   14001b18a:	cmp    eax,0x3
   14001b18d:	jne    0x14001b199
   14001b18f:	movsx  eax,BYTE PTR [rbx+0x8]
   14001b193:	or     eax,0x8
   14001b196:	mov    BYTE PTR [rbx+0x8],al
   14001b199:	lea    rcx,[rbx+0x10]
   14001b19d:	xor    r8d,r8d
   14001b1a0:	mov    edx,0xfa0
   14001b1a5:	call   0x140019bcc
   14001b1aa:	inc    DWORD PTR [rbx+0xc]
   14001b1ad:	jmp    0x14001b1d0
   14001b1af:	movsx  eax,BYTE PTR [rbx+0x8]
   14001b1b3:	or     eax,0x40
   14001b1b6:	mov    BYTE PTR [rbx+0x8],al
   14001b1b9:	mov    QWORD PTR [rbx],r15
   14001b1bc:	mov    rax,QWORD PTR [rip+0x2dccd]        # 0x140048e90
   14001b1c3:	test   rax,rax
   14001b1c6:	je     0x14001b1d0
   14001b1c8:	mov    rax,QWORD PTR [rax+rsi*8]
   14001b1cc:	mov    DWORD PTR [rax+0x1c],r15d
   14001b1d0:	inc    edi
   14001b1d2:	mov    DWORD PTR [rsp+0x20],edi
   14001b1d6:	jmp    0x14001b105
   14001b1db:	mov    ecx,0xb
   14001b1e0:	call   0x140019844
   14001b1e5:	xor    eax,eax
   14001b1e7:	lea    r11,[rsp+0xc0]
   14001b1ef:	mov    rbx,QWORD PTR [r11+0x20]
   14001b1f3:	mov    rsi,QWORD PTR [r11+0x28]
   14001b1f7:	mov    rdi,QWORD PTR [r11+0x30]
   14001b1fb:	mov    r12,QWORD PTR [r11+0x38]
   14001b1ff:	mov    rsp,r11
   14001b202:	pop    r15
   14001b204:	pop    r14
   14001b206:	pop    r13
   14001b208:	ret    
   14001b209:	int3   
   14001b20a:	int3   
   14001b20b:	int3   
   14001b20c:	mov    QWORD PTR [rsp+0x8],rbx
   14001b211:	mov    QWORD PTR [rsp+0x10],rsi
   14001b216:	push   rdi
   14001b217:	sub    rsp,0x20
   14001b21b:	lea    rdi,[rip+0x2d61e]        # 0x140048840
   14001b222:	mov    esi,0x40
   14001b227:	mov    rbx,QWORD PTR [rdi]
   14001b22a:	test   rbx,rbx
   14001b22d:	je     0x14001b266
   14001b22f:	lea    rax,[rbx+0xb00]
   14001b236:	jmp    0x14001b255
   14001b238:	cmp    DWORD PTR [rbx+0xc],0x0
   14001b23c:	je     0x14001b248
   14001b23e:	lea    rcx,[rbx+0x10]
   14001b242:	call   QWORD PTR [rip+0x1a098]        # 0x1400352e0
   14001b248:	mov    rax,QWORD PTR [rdi]
   14001b24b:	add    rbx,0x58
   14001b24f:	add    rax,0xb00
   14001b255:	cmp    rbx,rax
   14001b258:	jb     0x14001b238
   14001b25a:	mov    rcx,QWORD PTR [rdi]
   14001b25d:	call   0x14000fb50
   14001b262:	and    QWORD PTR [rdi],0x0
   14001b266:	add    rdi,0x8
   14001b26a:	dec    rsi
   14001b26d:	jne    0x14001b227
   14001b26f:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b274:	mov    rsi,QWORD PTR [rsp+0x38]
   14001b279:	add    rsp,0x20
   14001b27d:	pop    rdi
   14001b27e:	ret    
   14001b27f:	int3   
   14001b280:	mov    QWORD PTR [rip+0x2c6d9],rcx        # 0x140047960
   14001b287:	ret    
   14001b288:	mov    QWORD PTR [rsp+0x18],rbx
   14001b28d:	push   rbp
   14001b28e:	push   rsi
   14001b28f:	push   rdi
   14001b290:	sub    rsp,0x30
   14001b294:	lea    rdi,[rip+0x2d7a5]        # 0x140048a40
   14001b29b:	xor    ebp,ebp
   14001b29d:	mov    r8d,0x104
   14001b2a3:	mov    rdx,rdi
   14001b2a6:	xor    ecx,ecx
   14001b2a8:	mov    WORD PTR [rip+0x2d999],bp        # 0x140048c48
   14001b2af:	call   QWORD PTR [rip+0x1a0c3]        # 0x140035378
   14001b2b5:	mov    rbx,QWORD PTR [rip+0x2ebe4]        # 0x140049ea0
   14001b2bc:	mov    QWORD PTR [rip+0x2c69d],rdi        # 0x140047960
   14001b2c3:	test   rbx,rbx
   14001b2c6:	je     0x14001b2cd
   14001b2c8:	cmp    WORD PTR [rbx],bp
   14001b2cb:	jne    0x14001b2d0
   14001b2cd:	mov    rbx,rdi
   14001b2d0:	lea    rax,[rsp+0x58]
   14001b2d5:	lea    r9,[rsp+0x50]
   14001b2da:	xor    r8d,r8d
   14001b2dd:	xor    edx,edx
   14001b2df:	mov    rcx,rbx
   14001b2e2:	mov    QWORD PTR [rsp+0x20],rax
   14001b2e7:	call   0x14001b378
   14001b2ec:	movsxd rsi,DWORD PTR [rsp+0x50]
   14001b2f1:	movabs rax,0x1fffffffffffffff
   14001b2fb:	cmp    rsi,rax
   14001b2fe:	jae    0x14001b365
   14001b300:	movsxd rax,DWORD PTR [rsp+0x58]
   14001b305:	movabs rcx,0x7fffffffffffffff
   14001b30f:	cmp    rax,rcx
   14001b312:	jae    0x14001b365
   14001b314:	lea    rcx,[rax+rsi*4]
   14001b318:	add    rax,rax
   14001b31b:	add    rcx,rcx
   14001b31e:	cmp    rcx,rax
   14001b321:	jb     0x14001b365
   14001b323:	call   0x14000fc4c
   14001b328:	mov    rdi,rax
   14001b32b:	test   rax,rax
   14001b32e:	je     0x14001b365
   14001b330:	lea    r8,[rax+rsi*8]
   14001b334:	lea    rax,[rsp+0x58]
   14001b339:	lea    r9,[rsp+0x50]
   14001b33e:	mov    rdx,rdi
   14001b341:	mov    rcx,rbx
   14001b344:	mov    QWORD PTR [rsp+0x20],rax
   14001b349:	call   0x14001b378
   14001b34e:	mov    eax,DWORD PTR [rsp+0x50]
   14001b352:	mov    QWORD PTR [rip+0x2c5e7],rdi        # 0x140047940
   14001b359:	dec    eax
   14001b35b:	mov    DWORD PTR [rip+0x2c5d3],eax        # 0x140047934
   14001b361:	xor    eax,eax
   14001b363:	jmp    0x14001b368
   14001b365:	or     eax,0xffffffff
   14001b368:	mov    rbx,QWORD PTR [rsp+0x60]
   14001b36d:	add    rsp,0x30
   14001b371:	pop    rdi
   14001b372:	pop    rsi
   14001b373:	pop    rbp
   14001b374:	ret    
   14001b375:	int3   
   14001b376:	int3   
   14001b377:	int3   
   14001b378:	mov    rax,rsp
   14001b37b:	mov    QWORD PTR [rax+0x8],rbx
   14001b37f:	mov    QWORD PTR [rax+0x10],rsi
   14001b383:	mov    QWORD PTR [rax+0x18],rdi
   14001b387:	mov    QWORD PTR [rax+0x20],r12
   14001b38b:	push   r15
   14001b38d:	mov    r11,QWORD PTR [rsp+0x30]
   14001b392:	xor    esi,esi
   14001b394:	mov    rbx,r9
   14001b397:	mov    DWORD PTR [r11],esi
   14001b39a:	mov    r10,rdx
   14001b39d:	mov    DWORD PTR [r9],0x1
   14001b3a4:	test   rdx,rdx
   14001b3a7:	je     0x14001b3b0
   14001b3a9:	mov    QWORD PTR [rdx],r8
   14001b3ac:	add    r10,0x8
   14001b3b0:	mov    edx,esi
   14001b3b2:	mov    r12d,0x22
   14001b3b8:	cmp    WORD PTR [rcx],r12w
   14001b3bc:	jne    0x14001b3d1
   14001b3be:	test   edx,edx
   14001b3c0:	mov    eax,esi
   14001b3c2:	sete   al
   14001b3c5:	add    rcx,0x2
   14001b3c9:	mov    edx,eax
   14001b3cb:	movzx  eax,r12w
   14001b3cf:	jmp    0x14001b3f0
   14001b3d1:	inc    DWORD PTR [r11]
   14001b3d4:	test   r8,r8
   14001b3d7:	je     0x14001b3e4
   14001b3d9:	movzx  eax,WORD PTR [rcx]
   14001b3dc:	mov    WORD PTR [r8],ax
   14001b3e0:	add    r8,0x2
   14001b3e4:	movzx  eax,WORD PTR [rcx]
   14001b3e7:	add    rcx,0x2
   14001b3eb:	test   ax,ax
   14001b3ee:	je     0x14001b40c
   14001b3f0:	test   edx,edx
   14001b3f2:	jne    0x14001b3b8
   14001b3f4:	cmp    ax,0x20
   14001b3f8:	je     0x14001b400
   14001b3fa:	cmp    ax,0x9
   14001b3fe:	jne    0x14001b3b8
   14001b400:	test   r8,r8
   14001b403:	je     0x14001b410
   14001b405:	mov    WORD PTR [r8-0x2],si
   14001b40a:	jmp    0x14001b410
   14001b40c:	sub    rcx,0x2
   14001b410:	mov    edi,esi
   14001b412:	mov    r15d,0x5c
   14001b418:	cmp    WORD PTR [rcx],si
   14001b41b:	je     0x14001b4ef
   14001b421:	cmp    WORD PTR [rcx],0x20
   14001b425:	je     0x14001b42d
   14001b427:	cmp    WORD PTR [rcx],0x9
   14001b42b:	jne    0x14001b433
   14001b42d:	add    rcx,0x2
   14001b431:	jmp    0x14001b421
   14001b433:	cmp    WORD PTR [rcx],si
   14001b436:	je     0x14001b4ef
   14001b43c:	test   r10,r10
   14001b43f:	je     0x14001b448
   14001b441:	mov    QWORD PTR [r10],r8
   14001b444:	add    r10,0x8
   14001b448:	inc    DWORD PTR [rbx]
   14001b44a:	mov    r9d,0x1
   14001b450:	mov    edx,esi
   14001b452:	jmp    0x14001b45a
   14001b454:	add    rcx,0x2
   14001b458:	inc    edx
   14001b45a:	cmp    WORD PTR [rcx],r15w
   14001b45e:	je     0x14001b454
   14001b460:	cmp    WORD PTR [rcx],r12w
   14001b464:	jne    0x14001b4a0
   14001b466:	test   r9b,dl
   14001b469:	jne    0x14001b48a
   14001b46b:	test   edi,edi
   14001b46d:	je     0x14001b47e
   14001b46f:	lea    rax,[rcx+0x2]
   14001b473:	cmp    WORD PTR [rax],r12w
   14001b477:	jne    0x14001b47e
   14001b479:	mov    rcx,rax
   14001b47c:	jmp    0x14001b48a
   14001b47e:	test   edi,edi
   14001b480:	mov    eax,esi
   14001b482:	mov    r9d,esi
   14001b485:	sete   al
   14001b488:	mov    edi,eax
   14001b48a:	shr    edx,1
   14001b48c:	jmp    0x14001b4a0
   14001b48e:	dec    edx
   14001b490:	test   r8,r8
   14001b493:	je     0x14001b49d
   14001b495:	mov    WORD PTR [r8],r15w
   14001b499:	add    r8,0x2
   14001b49d:	inc    DWORD PTR [r11]
   14001b4a0:	test   edx,edx
   14001b4a2:	jne    0x14001b48e
   14001b4a4:	movzx  eax,WORD PTR [rcx]
   14001b4a7:	test   ax,ax
   14001b4aa:	je     0x14001b4da
   14001b4ac:	test   edi,edi
   14001b4ae:	jne    0x14001b4bc
   14001b4b0:	cmp    ax,0x20
   14001b4b4:	je     0x14001b4da
   14001b4b6:	cmp    ax,0x9
   14001b4ba:	je     0x14001b4da
   14001b4bc:	test   r9d,r9d
   14001b4bf:	je     0x14001b4d1
   14001b4c1:	test   r8,r8
   14001b4c4:	je     0x14001b4ce
   14001b4c6:	mov    WORD PTR [r8],ax
   14001b4ca:	add    r8,0x2
   14001b4ce:	inc    DWORD PTR [r11]
   14001b4d1:	add    rcx,0x2
   14001b4d5:	jmp    0x14001b44a
   14001b4da:	test   r8,r8
   14001b4dd:	je     0x14001b4e7
   14001b4df:	mov    WORD PTR [r8],si
   14001b4e3:	add    r8,0x2
   14001b4e7:	inc    DWORD PTR [r11]
   14001b4ea:	jmp    0x14001b418
   14001b4ef:	test   r10,r10
   14001b4f2:	je     0x14001b4f7
   14001b4f4:	mov    QWORD PTR [r10],rsi
   14001b4f7:	inc    DWORD PTR [rbx]
   14001b4f9:	mov    rsi,QWORD PTR [rsp+0x18]
   14001b4fe:	mov    rdi,QWORD PTR [rsp+0x20]
   14001b503:	mov    rbx,QWORD PTR [rsp+0x10]
   14001b508:	mov    r12,QWORD PTR [rsp+0x28]
   14001b50d:	pop    r15
   14001b50f:	ret    
   14001b510:	mov    rax,rsp
   14001b513:	mov    QWORD PTR [rax+0x8],rbx
   14001b517:	mov    QWORD PTR [rax+0x10],rbp
   14001b51b:	mov    QWORD PTR [rax+0x18],rsi
   14001b51f:	mov    QWORD PTR [rax+0x20],rdi
   14001b523:	push   r14
   14001b525:	sub    rsp,0x30
   14001b529:	mov    rbx,QWORD PTR [rip+0x2c460]        # 0x140047990
   14001b530:	xor    r14d,r14d
   14001b533:	mov    edi,r14d
   14001b536:	test   rbx,rbx
   14001b539:	jne    0x14001b55b
   14001b53b:	or     eax,0xffffffff
   14001b53e:	jmp    0x14001b600
   14001b543:	cmp    ax,0x3d
   14001b547:	je     0x14001b54b
   14001b549:	inc    edi
   14001b54b:	mov    rcx,rbx
   14001b54e:	call   0x14000cad8
   14001b553:	lea    rbx,[rbx+rax*2]
   14001b557:	add    rbx,0x2
   14001b55b:	movzx  eax,WORD PTR [rbx]
   14001b55e:	test   ax,ax
   14001b561:	jne    0x14001b543
   14001b563:	lea    eax,[rdi+0x1]
   14001b566:	mov    edx,0x8
   14001b56b:	movsxd rcx,eax
   14001b56e:	call   0x14000fbcc
   14001b573:	mov    rdi,rax
   14001b576:	mov    QWORD PTR [rip+0x2c3d3],rax        # 0x140047950
   14001b57d:	test   rax,rax
   14001b580:	je     0x14001b53b
   14001b582:	mov    rbx,QWORD PTR [rip+0x2c407]        # 0x140047990
   14001b589:	cmp    WORD PTR [rbx],r14w
   14001b58d:	je     0x14001b5e2
   14001b58f:	mov    rcx,rbx
   14001b592:	call   0x14000cad8
   14001b597:	cmp    WORD PTR [rbx],0x3d
   14001b59b:	lea    esi,[rax+0x1]
   14001b59e:	je     0x14001b5ce
   14001b5a0:	movsxd rbp,esi
   14001b5a3:	mov    edx,0x2
   14001b5a8:	mov    rcx,rbp
   14001b5ab:	call   0x14000fbcc
   14001b5b0:	mov    QWORD PTR [rdi],rax
   14001b5b3:	test   rax,rax
   14001b5b6:	je     0x14001b61b
   14001b5b8:	mov    r8,rbx
   14001b5bb:	mov    rdx,rbp
   14001b5be:	mov    rcx,rax
   14001b5c1:	call   0x14000781c
   14001b5c6:	test   eax,eax
   14001b5c8:	jne    0x14001b633
   14001b5ca:	add    rdi,0x8
   14001b5ce:	movsxd rax,esi
   14001b5d1:	lea    rbx,[rbx+rax*2]
   14001b5d5:	cmp    WORD PTR [rbx],r14w
   14001b5d9:	jne    0x14001b58f
   14001b5db:	mov    rbx,QWORD PTR [rip+0x2c3ae]        # 0x140047990
   14001b5e2:	mov    rcx,rbx
   14001b5e5:	call   0x14000fb50
   14001b5ea:	mov    QWORD PTR [rip+0x2c39f],r14        # 0x140047990
   14001b5f1:	mov    QWORD PTR [rdi],r14
   14001b5f4:	mov    DWORD PTR [rip+0x2e8c6],0x1        # 0x140049ec4
   14001b5fe:	xor    eax,eax
   14001b600:	mov    rbx,QWORD PTR [rsp+0x40]
   14001b605:	mov    rbp,QWORD PTR [rsp+0x48]
   14001b60a:	mov    rsi,QWORD PTR [rsp+0x50]
   14001b60f:	mov    rdi,QWORD PTR [rsp+0x58]
   14001b614:	add    rsp,0x30
   14001b618:	pop    r14
   14001b61a:	ret    
   14001b61b:	mov    rcx,QWORD PTR [rip+0x2c32e]        # 0x140047950
   14001b622:	call   0x14000fb50
   14001b627:	mov    QWORD PTR [rip+0x2c322],r14        # 0x140047950
   14001b62e:	jmp    0x14001b53b
   14001b633:	xor    r9d,r9d
   14001b636:	xor    r8d,r8d
   14001b639:	xor    edx,edx
   14001b63b:	xor    ecx,ecx
   14001b63d:	mov    QWORD PTR [rsp+0x20],r14
   14001b642:	call   0x14000b908
   14001b647:	int3   
   14001b648:	mov    DWORD PTR [rip+0x2cb82],ecx        # 0x1400481d0
   14001b64e:	ret    
   14001b64f:	int3   
   14001b650:	sub    rsp,0x28
   14001b654:	test   ecx,ecx
   14001b656:	js     0x14001b678
   14001b658:	cmp    ecx,0x2
   14001b65b:	jle    0x14001b66a
   14001b65d:	cmp    ecx,0x3
   14001b660:	jne    0x14001b678
   14001b662:	mov    eax,DWORD PTR [rip+0x2d5e4]        # 0x140048c4c
   14001b668:	jmp    0x14001b68b
   14001b66a:	mov    eax,DWORD PTR [rip+0x2d5dc]        # 0x140048c4c
   14001b670:	mov    DWORD PTR [rip+0x2d5d6],ecx        # 0x140048c4c
   14001b676:	jmp    0x14001b68b
   14001b678:	call   0x14000b9f0
   14001b67d:	mov    DWORD PTR [rax],0x16
   14001b683:	call   0x14000b8b8
   14001b688:	or     eax,0xffffffff
   14001b68b:	add    rsp,0x28
   14001b68f:	ret    
   14001b690:	mov    QWORD PTR [rsp+0x20],rbx
   14001b695:	push   rbp
   14001b696:	mov    rbp,rsp
   14001b699:	sub    rsp,0x20
   14001b69d:	mov    rax,QWORD PTR [rip+0x29bcc]        # 0x140045270
   14001b6a4:	and    QWORD PTR [rbp+0x18],0x0
   14001b6a9:	movabs rbx,0x2b992ddfa232
   14001b6b3:	cmp    rax,rbx
   14001b6b6:	jne    0x14001b727
   14001b6b8:	lea    rcx,[rbp+0x18]
   14001b6bc:	call   QWORD PTR [rip+0x19ce6]        # 0x1400353a8
   14001b6c2:	mov    rax,QWORD PTR [rbp+0x18]
   14001b6c6:	mov    QWORD PTR [rbp+0x10],rax
   14001b6ca:	call   QWORD PTR [rip+0x19a38]        # 0x140035108
   14001b6d0:	mov    eax,eax
   14001b6d2:	xor    QWORD PTR [rbp+0x10],rax
   14001b6d6:	call   QWORD PTR [rip+0x19adc]        # 0x1400351b8
   14001b6dc:	lea    rcx,[rbp+0x20]
   14001b6e0:	mov    eax,eax
   14001b6e2:	xor    QWORD PTR [rbp+0x10],rax
   14001b6e6:	call   QWORD PTR [rip+0x19cb4]        # 0x1400353a0
   14001b6ec:	mov    eax,DWORD PTR [rbp+0x20]
   14001b6ef:	shl    rax,0x20
   14001b6f3:	lea    rcx,[rbp+0x10]
   14001b6f7:	xor    rax,QWORD PTR [rbp+0x20]
   14001b6fb:	xor    rax,QWORD PTR [rbp+0x10]
   14001b6ff:	xor    rax,rcx
   14001b702:	movabs rcx,0xffffffffffff
   14001b70c:	and    rax,rcx
   14001b70f:	movabs rcx,0x2b992ddfa233
   14001b719:	cmp    rax,rbx
   14001b71c:	cmove  rax,rcx
   14001b720:	mov    QWORD PTR [rip+0x29b49],rax        # 0x140045270
   14001b727:	mov    rbx,QWORD PTR [rsp+0x48]
   14001b72c:	not    rax
   14001b72f:	mov    QWORD PTR [rip+0x29b42],rax        # 0x140045278
   14001b736:	add    rsp,0x20
   14001b73a:	pop    rbp
   14001b73b:	ret    
   14001b73c:	mov    QWORD PTR [rsp+0x8],rbx
   14001b741:	mov    QWORD PTR [rsp+0x10],rbp
   14001b746:	mov    QWORD PTR [rsp+0x18],rsi
   14001b74b:	push   rdi
   14001b74c:	sub    rsp,0x20
   14001b750:	call   QWORD PTR [rip+0x19c5a]        # 0x1400353b0
   14001b756:	xor    ebx,ebx
   14001b758:	mov    rdi,rax
   14001b75b:	test   rax,rax
   14001b75e:	jne    0x14001b76f
   14001b760:	jmp    0x14001b7a9
   14001b762:	add    rax,0x2
   14001b766:	cmp    WORD PTR [rax],bx
   14001b769:	jne    0x14001b762
   14001b76b:	add    rax,0x2
   14001b76f:	cmp    WORD PTR [rax],bx
   14001b772:	jne    0x14001b762
   14001b774:	sub    eax,edi
   14001b776:	add    eax,0x2
   14001b779:	movsxd rbp,eax
   14001b77c:	mov    rcx,rbp
   14001b77f:	call   0x14000fc4c
   14001b784:	mov    rsi,rax
   14001b787:	test   rax,rax
   14001b78a:	je     0x14001b79d
   14001b78c:	mov    r8,rbp
   14001b78f:	mov    rdx,rdi
   14001b792:	mov    rcx,rax
   14001b795:	call   0x14000b1c0
   14001b79a:	mov    rbx,rsi
   14001b79d:	mov    rcx,rdi
   14001b7a0:	call   QWORD PTR [rip+0x19c12]        # 0x1400353b8
   14001b7a6:	mov    rax,rbx
   14001b7a9:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b7ae:	mov    rbp,QWORD PTR [rsp+0x38]
   14001b7b3:	mov    rsi,QWORD PTR [rsp+0x40]
   14001b7b8:	add    rsp,0x20
   14001b7bc:	pop    rdi
   14001b7bd:	ret    
   14001b7be:	int3   
   14001b7bf:	int3   
   14001b7c0:	mov    rcx,QWORD PTR [rip+0x2e6d9]        # 0x140049ea0
   14001b7c7:	xor    r8d,r8d
   14001b7ca:	lea    rax,[rip+0x1c053]        # 0x140037824
   14001b7d1:	test   rcx,rcx
   14001b7d4:	mov    edx,r8d
   14001b7d7:	cmove  rcx,rax
   14001b7db:	cmp    WORD PTR [rcx],0x20
   14001b7df:	ja     0x14001b7eb
   14001b7e1:	cmp    WORD PTR [rcx],r8w
   14001b7e5:	je     0x14001b813
   14001b7e7:	test   edx,edx
   14001b7e9:	je     0x14001b80b
   14001b7eb:	cmp    WORD PTR [rcx],0x22
   14001b7ef:	jne    0x14001b7fb
   14001b7f1:	test   edx,edx
   14001b7f3:	mov    eax,r8d
   14001b7f6:	sete   al
   14001b7f9:	mov    edx,eax
   14001b7fb:	add    rcx,0x2
   14001b7ff:	jmp    0x14001b7db
   14001b801:	cmp    ax,0x20
   14001b805:	ja     0x14001b813
   14001b807:	add    rcx,0x2
   14001b80b:	movzx  eax,WORD PTR [rcx]
   14001b80e:	test   ax,ax
   14001b811:	jne    0x14001b801
   14001b813:	mov    rax,rcx
   14001b816:	ret    
   14001b817:	int3   
   14001b818:	mov    QWORD PTR [rsp+0x8],rbx
   14001b81d:	mov    QWORD PTR [rsp+0x10],rsi
   14001b822:	push   rdi
   14001b823:	sub    rsp,0x40
   14001b827:	mov    ebx,edx
   14001b829:	mov    rdx,rcx
   14001b82c:	lea    rcx,[rsp+0x20]
   14001b831:	mov    edi,r9d
   14001b834:	mov    esi,r8d
   14001b837:	call   0x140007ff0
   14001b83c:	mov    rax,QWORD PTR [rsp+0x28]
   14001b841:	movzx  edx,bl
   14001b844:	test   BYTE PTR [rdx+rax*1+0x19],dil
   14001b849:	jne    0x14001b869
   14001b84b:	test   esi,esi
   14001b84d:	je     0x14001b863
   14001b84f:	mov    rax,QWORD PTR [rsp+0x20]
   14001b854:	mov    rcx,QWORD PTR [rax+0x108]
   14001b85b:	movzx  eax,WORD PTR [rcx+rdx*2]
   14001b85f:	and    eax,esi
   14001b861:	jmp    0x14001b865
   14001b863:	xor    eax,eax
   14001b865:	test   eax,eax
   14001b867:	je     0x14001b86e
   14001b869:	mov    eax,0x1
   14001b86e:	cmp    BYTE PTR [rsp+0x38],0x0
   14001b873:	je     0x14001b881
   14001b875:	mov    rcx,QWORD PTR [rsp+0x30]
   14001b87a:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001b881:	mov    rbx,QWORD PTR [rsp+0x50]
   14001b886:	mov    rsi,QWORD PTR [rsp+0x58]
   14001b88b:	add    rsp,0x40
   14001b88f:	pop    rdi
   14001b890:	ret    
   14001b891:	int3   
   14001b892:	int3   
   14001b893:	int3   
   14001b894:	mov    edx,ecx
   14001b896:	mov    r9d,0x1
   14001b89c:	mov    r8d,0x107
   14001b8a2:	xor    ecx,ecx
   14001b8a4:	jmp    0x14001b818
   14001b8a9:	int3   
   14001b8aa:	int3   
   14001b8ab:	int3   
   14001b8ac:	mov    rax,rdx
   14001b8af:	mov    edx,ecx
   14001b8b1:	mov    r9d,0x1
   14001b8b7:	mov    rcx,rax
   14001b8ba:	mov    r8d,0x107
   14001b8c0:	jmp    0x14001b818
   14001b8c5:	int3   
   14001b8c6:	int3   
   14001b8c7:	int3   
   14001b8c8:	mov    edx,ecx
   14001b8ca:	mov    r9d,0x1
   14001b8d0:	mov    r8d,0x103
   14001b8d6:	xor    ecx,ecx
   14001b8d8:	jmp    0x14001b818
   14001b8dd:	int3   
   14001b8de:	int3   
   14001b8df:	int3   
   14001b8e0:	mov    rax,rdx
   14001b8e3:	mov    edx,ecx
   14001b8e5:	mov    r9d,0x1
   14001b8eb:	mov    rcx,rax
   14001b8ee:	mov    r8d,0x103
   14001b8f4:	jmp    0x14001b818
   14001b8f9:	int3   
   14001b8fa:	int3   
   14001b8fb:	int3   
   14001b8fc:	cmp    ecx,0x9
   14001b8ff:	jne    0x14001b905
   14001b901:	lea    eax,[rcx+0x37]
   14001b904:	ret    
   14001b905:	mov    r9d,0x2
   14001b90b:	mov    edx,ecx
   14001b90d:	xor    ecx,ecx
   14001b90f:	lea    r8d,[r9+0x3e]
   14001b913:	jmp    0x14001b818
   14001b918:	mov    r10,rdx
   14001b91b:	cmp    ecx,0x9
   14001b91e:	jne    0x14001b924
   14001b920:	lea    eax,[rcx+0x37]
   14001b923:	ret    
   14001b924:	mov    r9d,0x2
   14001b92a:	mov    edx,ecx
   14001b92c:	mov    rcx,r10
   14001b92f:	lea    r8d,[r9+0x3e]
   14001b933:	jmp    0x14001b818
   14001b938:	mov    edx,ecx
   14001b93a:	mov    r9d,0x3
   14001b940:	mov    r8d,0x117
   14001b946:	xor    ecx,ecx
   14001b948:	jmp    0x14001b818
   14001b94d:	int3   
   14001b94e:	int3   
   14001b94f:	int3   
   14001b950:	mov    rax,rdx
   14001b953:	mov    edx,ecx
   14001b955:	mov    r9d,0x3
   14001b95b:	mov    rcx,rax
   14001b95e:	mov    r8d,0x117
   14001b964:	jmp    0x14001b818
   14001b969:	int3   
   14001b96a:	int3   
   14001b96b:	int3   
   14001b96c:	mov    edx,ecx
   14001b96e:	mov    r9d,0x1
   14001b974:	xor    r8d,r8d
   14001b977:	xor    ecx,ecx
   14001b979:	jmp    0x14001b818
   14001b97e:	int3   
   14001b97f:	int3   
   14001b980:	mov    rax,rdx
   14001b983:	mov    edx,ecx
   14001b985:	mov    r9d,0x1
   14001b98b:	mov    rcx,rax
   14001b98e:	xor    r8d,r8d
   14001b991:	jmp    0x14001b818
   14001b996:	int3   
   14001b997:	int3   
   14001b998:	xor    edx,edx
   14001b99a:	jmp    0x14001b9a0
   14001b99f:	int3   
   14001b9a0:	mov    QWORD PTR [rsp+0x8],rbx
   14001b9a5:	push   rdi
   14001b9a6:	sub    rsp,0x40
   14001b9aa:	mov    edi,ecx
   14001b9ac:	lea    rcx,[rsp+0x20]
   14001b9b1:	mov    rbx,rdx
   14001b9b4:	call   0x140007ff0
   14001b9b9:	mov    rax,QWORD PTR [rsp+0x28]
   14001b9be:	test   rax,rax
   14001b9c1:	je     0x14001b9e3
   14001b9c3:	cmp    DWORD PTR [rax+0x4],0x3a4
   14001b9ca:	jne    0x14001b9e3
   14001b9cc:	mov    r9d,0x3
   14001b9d2:	xor    r8d,r8d
   14001b9d5:	mov    edx,edi
   14001b9d7:	mov    rcx,rbx
   14001b9da:	call   0x14001b818
   14001b9df:	mov    ecx,eax
   14001b9e1:	jmp    0x14001b9e5
   14001b9e3:	xor    ecx,ecx
   14001b9e5:	cmp    BYTE PTR [rsp+0x38],0x0
   14001b9ea:	je     0x14001b9f8
   14001b9ec:	mov    rax,QWORD PTR [rsp+0x30]
   14001b9f1:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001b9f8:	mov    eax,ecx
   14001b9fa:	mov    rbx,QWORD PTR [rsp+0x50]
   14001b9ff:	add    rsp,0x40
   14001ba03:	pop    rdi
   14001ba04:	ret    
   14001ba05:	int3   
   14001ba06:	int3   
   14001ba07:	int3   
   14001ba08:	mov    edx,ecx
   14001ba0a:	mov    r9d,0x3
   14001ba10:	xor    r8d,r8d
   14001ba13:	xor    ecx,ecx
   14001ba15:	jmp    0x14001b818
   14001ba1a:	int3   
   14001ba1b:	int3   
   14001ba1c:	mov    rax,rdx
   14001ba1f:	mov    edx,ecx
   14001ba21:	mov    r9d,0x3
   14001ba27:	mov    rcx,rax
   14001ba2a:	xor    r8d,r8d
   14001ba2d:	jmp    0x14001b818
   14001ba32:	int3   
   14001ba33:	int3   
   14001ba34:	mov    edx,ecx
   14001ba36:	mov    r9d,0x2
   14001ba3c:	xor    r8d,r8d
   14001ba3f:	xor    ecx,ecx
   14001ba41:	jmp    0x14001b818
   14001ba46:	int3   
   14001ba47:	int3   
   14001ba48:	mov    rax,rdx
   14001ba4b:	mov    edx,ecx
   14001ba4d:	mov    r9d,0x2
   14001ba53:	mov    rcx,rax
   14001ba56:	xor    r8d,r8d
   14001ba59:	jmp    0x14001b818
   14001ba5e:	int3   
   14001ba5f:	int3   
   14001ba60:	mov    edx,ecx
   14001ba62:	mov    r9d,0x4
   14001ba68:	xor    r8d,r8d
   14001ba6b:	xor    ecx,ecx
   14001ba6d:	jmp    0x14001b818
   14001ba72:	int3   
   14001ba73:	int3   
   14001ba74:	mov    rax,rdx
   14001ba77:	mov    edx,ecx
   14001ba79:	mov    r9d,0x4
   14001ba7f:	mov    rcx,rax
   14001ba82:	xor    r8d,r8d
   14001ba85:	jmp    0x14001b818
   14001ba8a:	int3   
   14001ba8b:	int3   
   14001ba8c:	mov    edx,ecx
   14001ba8e:	mov    r9d,0x3
   14001ba94:	mov    r8d,0x157
   14001ba9a:	xor    ecx,ecx
   14001ba9c:	jmp    0x14001b818
   14001baa1:	int3   
   14001baa2:	int3   
   14001baa3:	int3   
   14001baa4:	mov    rax,rdx
   14001baa7:	mov    edx,ecx
   14001baa9:	mov    r9d,0x3
   14001baaf:	mov    rcx,rax
   14001bab2:	mov    r8d,0x157
   14001bab8:	jmp    0x14001b818
   14001babd:	int3   
   14001babe:	int3   
   14001babf:	int3   
   14001bac0:	mov    r9d,0x2
   14001bac6:	mov    edx,ecx
   14001bac8:	xor    ecx,ecx
   14001baca:	lea    r8d,[r9+0xe]
   14001bace:	jmp    0x14001b818
   14001bad3:	int3   
   14001bad4:	mov    rax,rdx
   14001bad7:	mov    r9d,0x2
   14001badd:	mov    edx,ecx
   14001badf:	lea    r8d,[r9+0xe]
   14001bae3:	mov    rcx,rax
   14001bae6:	jmp    0x14001b818
   14001baeb:	int3   
   14001baec:	mov    edx,ecx
   14001baee:	mov    r9d,0x8
   14001baf4:	xor    r8d,r8d
   14001baf7:	xor    ecx,ecx
   14001baf9:	jmp    0x14001b818
   14001bafe:	int3   
   14001baff:	int3   
   14001bb00:	mov    rax,rdx
   14001bb03:	mov    edx,ecx
   14001bb05:	mov    r9d,0x8
   14001bb0b:	mov    rcx,rax
   14001bb0e:	xor    r8d,r8d
   14001bb11:	jmp    0x14001b818
   14001bb16:	int3   
   14001bb17:	int3   
   14001bb18:	rex push rbx
   14001bb1a:	sub    rsp,0x20
   14001bb1e:	xor    ebx,ebx
   14001bb20:	test   r9,r9
   14001bb23:	jne    0x14001bb33
   14001bb25:	test   rcx,rcx
   14001bb28:	jne    0x14001bb38
   14001bb2a:	test   rdx,rdx
   14001bb2d:	jne    0x14001bb4d
   14001bb2f:	xor    eax,eax
   14001bb31:	jmp    0x14001bb60
   14001bb33:	test   rcx,rcx
   14001bb36:	je     0x14001bb4d
   14001bb38:	test   rdx,rdx
   14001bb3b:	je     0x14001bb4d
   14001bb3d:	test   r9,r9
   14001bb40:	jne    0x14001bb46
   14001bb42:	mov    BYTE PTR [rcx],bl
   14001bb44:	jmp    0x14001bb2f
   14001bb46:	test   r8,r8
   14001bb49:	jne    0x14001bb66
   14001bb4b:	mov    BYTE PTR [rcx],bl
   14001bb4d:	call   0x14000b9f0
   14001bb52:	mov    ebx,0x16
   14001bb57:	mov    DWORD PTR [rax],ebx
   14001bb59:	call   0x14000b8b8
   14001bb5e:	mov    eax,ebx
   14001bb60:	add    rsp,0x20
   14001bb64:	pop    rbx
   14001bb65:	ret    
   14001bb66:	mov    r11,rcx
   14001bb69:	mov    r10,rdx
   14001bb6c:	cmp    r9,0xffffffffffffffff
   14001bb70:	jne    0x14001bb8a
   14001bb72:	sub    r11,r8
   14001bb75:	mov    al,BYTE PTR [r8]
   14001bb78:	mov    BYTE PTR [r11+r8*1],al
   14001bb7c:	inc    r8
   14001bb7f:	test   al,al
   14001bb81:	je     0x14001bbad
   14001bb83:	dec    r10
   14001bb86:	jne    0x14001bb75
   14001bb88:	jmp    0x14001bbad
   14001bb8a:	sub    r8,rcx
   14001bb8d:	mov    al,BYTE PTR [r8+r11*1]
   14001bb91:	mov    BYTE PTR [r11],al
   14001bb94:	inc    r11
   14001bb97:	test   al,al
   14001bb99:	je     0x14001bba5
   14001bb9b:	dec    r10
   14001bb9e:	je     0x14001bba5
   14001bba0:	dec    r9
   14001bba3:	jne    0x14001bb8d
   14001bba5:	test   r9,r9
   14001bba8:	jne    0x14001bbad
   14001bbaa:	mov    BYTE PTR [r11],bl
   14001bbad:	test   r10,r10
   14001bbb0:	jne    0x14001bb2f
   14001bbb6:	cmp    r9,0xffffffffffffffff
   14001bbba:	jne    0x14001bbc6
   14001bbbc:	mov    BYTE PTR [rcx+rdx*1-0x1],bl
   14001bbc0:	lea    eax,[r10+0x50]
   14001bbc4:	jmp    0x14001bb60
   14001bbc6:	mov    BYTE PTR [rcx],bl
   14001bbc8:	call   0x14000b9f0
   14001bbcd:	mov    ebx,0x22
   14001bbd2:	jmp    0x14001bb57
   14001bbd4:	mov    QWORD PTR [rsp+0x8],rbx
   14001bbd9:	mov    QWORD PTR [rsp+0x10],rsi
   14001bbde:	push   rdi
   14001bbdf:	sub    rsp,0x30
   14001bbe3:	xor    edi,edi
   14001bbe5:	lea    ecx,[rdi+0x1]
   14001bbe8:	call   0x140019628
   14001bbed:	nop
   14001bbee:	lea    ebx,[rdi+0x3]
   14001bbf1:	mov    DWORD PTR [rsp+0x20],ebx
   14001bbf5:	cmp    ebx,DWORD PTR [rip+0x2d29d]        # 0x140048e98
   14001bbfb:	jge    0x14001bc60
   14001bbfd:	movsxd rsi,ebx
   14001bc00:	mov    rax,QWORD PTR [rip+0x2d289]        # 0x140048e90
   14001bc07:	mov    rcx,QWORD PTR [rax+rsi*8]
   14001bc0b:	test   rcx,rcx
   14001bc0e:	je     0x14001bc5c
   14001bc10:	test   BYTE PTR [rcx+0x18],0x83
   14001bc14:	je     0x14001bc26
   14001bc16:	call   0x14000aaa8
   14001bc1b:	cmp    eax,0xffffffff
   14001bc1e:	je     0x14001bc26
   14001bc20:	inc    edi
   14001bc22:	mov    DWORD PTR [rsp+0x24],edi
   14001bc26:	cmp    ebx,0x14
   14001bc29:	jl     0x14001bc5c
   14001bc2b:	mov    rax,QWORD PTR [rip+0x2d25e]        # 0x140048e90
   14001bc32:	mov    rcx,QWORD PTR [rax+rsi*8]
   14001bc36:	add    rcx,0x30
   14001bc3a:	call   QWORD PTR [rip+0x196a0]        # 0x1400352e0
   14001bc40:	mov    rcx,QWORD PTR [rip+0x2d249]        # 0x140048e90
   14001bc47:	mov    rcx,QWORD PTR [rcx+rsi*8]
   14001bc4b:	call   0x14000fb50
   14001bc50:	mov    rax,QWORD PTR [rip+0x2d239]        # 0x140048e90
   14001bc57:	and    QWORD PTR [rax+rsi*8],0x0
   14001bc5c:	inc    ebx
   14001bc5e:	jmp    0x14001bbf1
   14001bc60:	mov    ecx,0x1
   14001bc65:	call   0x140019844
   14001bc6a:	mov    eax,edi
   14001bc6c:	mov    rbx,QWORD PTR [rsp+0x40]
   14001bc71:	mov    rsi,QWORD PTR [rsp+0x48]
   14001bc76:	add    rsp,0x30
   14001bc7a:	pop    rdi
   14001bc7b:	ret    
   14001bc7c:	sub    rsp,0x28
   14001bc80:	test   rcx,rcx
   14001bc83:	jne    0x14001bc9a
   14001bc85:	call   0x14000b9f0
   14001bc8a:	mov    DWORD PTR [rax],0x16
   14001bc90:	call   0x14000b8b8
   14001bc95:	or     eax,0xffffffff
   14001bc98:	jmp    0x14001bc9d
   14001bc9a:	mov    eax,DWORD PTR [rcx+0x1c]
   14001bc9d:	add    rsp,0x28
   14001bca1:	ret    
   14001bca2:	int3   
   14001bca3:	int3   
   14001bca4:	mov    QWORD PTR [rsp+0x18],rbx
   14001bca9:	mov    DWORD PTR [rsp+0x8],ecx
   14001bcad:	push   rsi
   14001bcae:	push   rdi
   14001bcaf:	push   r14
   14001bcb1:	sub    rsp,0x20
   14001bcb5:	movsxd rbx,ecx
   14001bcb8:	cmp    ebx,0xfffffffe
   14001bcbb:	jne    0x14001bcd5
   14001bcbd:	call   0x14000b980
   14001bcc2:	and    DWORD PTR [rax],0x0
   14001bcc5:	call   0x14000b9f0
   14001bcca:	mov    DWORD PTR [rax],0x9
   14001bcd0:	jmp    0x14001bd56
   14001bcd5:	test   ecx,ecx
   14001bcd7:	js     0x14001bd3e
   14001bcd9:	cmp    ebx,DWORD PTR [rip+0x2d085]        # 0x140048d64
   14001bcdf:	jae    0x14001bd3e
   14001bce1:	mov    rax,rbx
   14001bce4:	mov    rdi,rbx
   14001bce7:	sar    rdi,0x5
   14001bceb:	lea    r14,[rip+0x2cb4e]        # 0x140048840
   14001bcf2:	and    eax,0x1f
   14001bcf5:	imul   rsi,rax,0x58
   14001bcf9:	mov    rax,QWORD PTR [r14+rdi*8]
   14001bcfd:	movsx  ecx,BYTE PTR [rax+rsi*1+0x8]
   14001bd02:	and    ecx,0x1
   14001bd05:	je     0x14001bd3e
   14001bd07:	mov    ecx,ebx
   14001bd09:	call   0x14002adc4
   14001bd0e:	nop
   14001bd0f:	mov    rax,QWORD PTR [r14+rdi*8]
   14001bd13:	test   BYTE PTR [rax+rsi*1+0x8],0x1
   14001bd18:	je     0x14001bd25
   14001bd1a:	mov    ecx,ebx
   14001bd1c:	call   0x14001bd68
   14001bd21:	mov    edi,eax
   14001bd23:	jmp    0x14001bd33
   14001bd25:	call   0x14000b9f0
   14001bd2a:	mov    DWORD PTR [rax],0x9
   14001bd30:	or     edi,0xffffffff
   14001bd33:	mov    ecx,ebx
   14001bd35:	call   0x14002b320
   14001bd3a:	mov    eax,edi
   14001bd3c:	jmp    0x14001bd59
   14001bd3e:	call   0x14000b980
   14001bd43:	and    DWORD PTR [rax],0x0
   14001bd46:	call   0x14000b9f0
   14001bd4b:	mov    DWORD PTR [rax],0x9
   14001bd51:	call   0x14000b8b8
   14001bd56:	or     eax,0xffffffff
   14001bd59:	mov    rbx,QWORD PTR [rsp+0x50]
   14001bd5e:	add    rsp,0x20
   14001bd62:	pop    r14
   14001bd64:	pop    rdi
   14001bd65:	pop    rsi
   14001bd66:	ret    
   14001bd67:	int3   
   14001bd68:	mov    QWORD PTR [rsp+0x8],rbx
   14001bd6d:	push   rdi
   14001bd6e:	sub    rsp,0x20
   14001bd72:	movsxd rdi,ecx
   14001bd75:	mov    ecx,edi
   14001bd77:	call   0x14002b100
   14001bd7c:	cmp    rax,0xffffffffffffffff
   14001bd80:	je     0x14001bddb
   14001bd82:	mov    rax,QWORD PTR [rip+0x2cab7]        # 0x140048840
   14001bd89:	mov    ecx,0x2
   14001bd8e:	cmp    edi,0x1
   14001bd91:	jne    0x14001bd9c
   14001bd93:	test   BYTE PTR [rax+0xb8],dil
   14001bd9a:	jne    0x14001bda6
   14001bd9c:	cmp    edi,ecx
   14001bd9e:	jne    0x14001bdbd
   14001bda0:	test   BYTE PTR [rax+0x60],0x1
   14001bda4:	je     0x14001bdbd
   14001bda6:	call   0x14002b100
   14001bdab:	mov    ecx,0x1
   14001bdb0:	mov    rbx,rax
   14001bdb3:	call   0x14002b100
   14001bdb8:	cmp    rax,rbx
   14001bdbb:	je     0x14001bddb
   14001bdbd:	mov    ecx,edi
   14001bdbf:	call   0x14002b100
   14001bdc4:	mov    rcx,rax
   14001bdc7:	call   QWORD PTR [rip+0x19423]        # 0x1400351f0
   14001bdcd:	test   eax,eax
   14001bdcf:	jne    0x14001bddb
   14001bdd1:	call   QWORD PTR [rip+0x19411]        # 0x1400351e8
   14001bdd7:	mov    ebx,eax
   14001bdd9:	jmp    0x14001bddd
   14001bddb:	xor    ebx,ebx
   14001bddd:	mov    ecx,edi
   14001bddf:	call   0x14002b054
   14001bde4:	mov    rdx,rdi
   14001bde7:	mov    rcx,rdi
   14001bdea:	sar    rcx,0x5
   14001bdee:	and    edx,0x1f
   14001bdf1:	lea    r8,[rip+0x2ca48]        # 0x140048840
   14001bdf8:	mov    rcx,QWORD PTR [r8+rcx*8]
   14001bdfc:	imul   rdx,rdx,0x58
   14001be00:	mov    BYTE PTR [rcx+rdx*1+0x8],0x0
   14001be05:	test   ebx,ebx
   14001be07:	je     0x14001be15
   14001be09:	mov    ecx,ebx
   14001be0b:	call   0x14000b9a0
   14001be10:	or     eax,0xffffffff
   14001be13:	jmp    0x14001be17
   14001be15:	xor    eax,eax
   14001be17:	mov    rbx,QWORD PTR [rsp+0x30]
   14001be1c:	add    rsp,0x20
   14001be20:	pop    rdi
   14001be21:	ret    
   14001be22:	int3   
   14001be23:	int3   
   14001be24:	rex push rbx
   14001be26:	sub    rsp,0x20
   14001be2a:	test   BYTE PTR [rcx+0x18],0x83
   14001be2e:	mov    rbx,rcx
   14001be31:	je     0x14001be55
   14001be33:	test   BYTE PTR [rcx+0x18],0x8
   14001be37:	je     0x14001be55
   14001be39:	mov    rcx,QWORD PTR [rcx+0x10]
   14001be3d:	call   0x14000fb50
   14001be42:	and    DWORD PTR [rbx+0x18],0xfffffbf7
   14001be49:	xor    eax,eax
   14001be4b:	mov    QWORD PTR [rbx],rax
   14001be4e:	mov    QWORD PTR [rbx+0x10],rax
   14001be52:	mov    DWORD PTR [rbx+0x8],eax
   14001be55:	add    rsp,0x20
   14001be59:	pop    rbx
   14001be5a:	ret    
   14001be5b:	int3   
   14001be5c:	mov    QWORD PTR [rsp+0x18],rbx
   14001be61:	mov    DWORD PTR [rsp+0x8],ecx
   14001be65:	push   rsi
   14001be66:	push   rdi
   14001be67:	push   r14
   14001be69:	sub    rsp,0x20
   14001be6d:	movsxd rdi,ecx
   14001be70:	cmp    edi,0xfffffffe
   14001be73:	jne    0x14001be85
   14001be75:	call   0x14000b9f0
   14001be7a:	mov    DWORD PTR [rax],0x9
   14001be80:	jmp    0x14001bf22
   14001be85:	test   ecx,ecx
   14001be87:	js     0x14001bf12
   14001be8d:	cmp    edi,DWORD PTR [rip+0x2ced1]        # 0x140048d64
   14001be93:	jae    0x14001bf12
   14001be95:	mov    rax,rdi
   14001be98:	mov    rbx,rdi
   14001be9b:	sar    rbx,0x5
   14001be9f:	lea    r14,[rip+0x2c99a]        # 0x140048840
   14001bea6:	and    eax,0x1f
   14001bea9:	imul   rsi,rax,0x58
   14001bead:	mov    rax,QWORD PTR [r14+rbx*8]
   14001beb1:	movsx  ecx,BYTE PTR [rax+rsi*1+0x8]
   14001beb6:	and    ecx,0x1
   14001beb9:	je     0x14001bf12
   14001bebb:	mov    ecx,edi
   14001bebd:	call   0x14002adc4
   14001bec2:	nop
   14001bec3:	mov    rax,QWORD PTR [r14+rbx*8]
   14001bec7:	test   BYTE PTR [rax+rsi*1+0x8],0x1
   14001becc:	je     0x14001bef9
   14001bece:	mov    ecx,edi
   14001bed0:	call   0x14002b100
   14001bed5:	mov    rcx,rax
   14001bed8:	call   QWORD PTR [rip+0x194e2]        # 0x1400353c0
   14001bede:	test   eax,eax
   14001bee0:	jne    0x14001beec
   14001bee2:	call   QWORD PTR [rip+0x19300]        # 0x1400351e8
   14001bee8:	mov    ebx,eax
   14001beea:	jmp    0x14001beee
   14001beec:	xor    ebx,ebx
   14001beee:	test   ebx,ebx
   14001bef0:	je     0x14001bf07
   14001bef2:	call   0x14000b980
   14001bef7:	mov    DWORD PTR [rax],ebx
   14001bef9:	call   0x14000b9f0
   14001befe:	mov    DWORD PTR [rax],0x9
   14001bf04:	or     ebx,0xffffffff
   14001bf07:	mov    ecx,edi
   14001bf09:	call   0x14002b320
   14001bf0e:	mov    eax,ebx
   14001bf10:	jmp    0x14001bf25
   14001bf12:	call   0x14000b9f0
   14001bf17:	mov    DWORD PTR [rax],0x9
   14001bf1d:	call   0x14000b8b8
   14001bf22:	or     eax,0xffffffff
   14001bf25:	mov    rbx,QWORD PTR [rsp+0x50]
   14001bf2a:	add    rsp,0x20
   14001bf2e:	pop    r14
   14001bf30:	pop    rdi
   14001bf31:	pop    rsi
   14001bf32:	ret    
   14001bf33:	int3   
   14001bf34:	mov    QWORD PTR [rsp+0x10],rbx
   14001bf39:	mov    DWORD PTR [rsp+0x8],ecx
   14001bf3d:	push   rsi
   14001bf3e:	push   rdi
   14001bf3f:	push   r12
   14001bf41:	push   r14
   14001bf43:	push   r15
   14001bf45:	sub    rsp,0x20
   14001bf49:	mov    esi,r8d
   14001bf4c:	mov    r14,rdx
   14001bf4f:	movsxd rbx,ecx
   14001bf52:	cmp    ebx,0xfffffffe
   14001bf55:	jne    0x14001bf6f
   14001bf57:	call   0x14000b980
   14001bf5c:	and    DWORD PTR [rax],0x0
   14001bf5f:	call   0x14000b9f0
   14001bf64:	mov    DWORD PTR [rax],0x9
   14001bf6a:	jmp    0x14001c000
   14001bf6f:	test   ecx,ecx
   14001bf71:	js     0x14001bfe8
   14001bf73:	cmp    ebx,DWORD PTR [rip+0x2cdeb]        # 0x140048d64
   14001bf79:	jae    0x14001bfe8
   14001bf7b:	mov    rax,rbx
   14001bf7e:	mov    rdi,rbx
   14001bf81:	sar    rdi,0x5
   14001bf85:	lea    r12,[rip+0x2c8b4]        # 0x140048840
   14001bf8c:	and    eax,0x1f
   14001bf8f:	imul   r15,rax,0x58
   14001bf93:	mov    rax,QWORD PTR [r12+rdi*8]
   14001bf97:	movsx  ecx,BYTE PTR [rax+r15*1+0x8]
   14001bf9d:	and    ecx,0x1
   14001bfa0:	je     0x14001bfe8
   14001bfa2:	mov    ecx,ebx
   14001bfa4:	call   0x14002adc4
   14001bfa9:	nop
   14001bfaa:	mov    rax,QWORD PTR [r12+rdi*8]
   14001bfae:	test   BYTE PTR [rax+r15*1+0x8],0x1
   14001bfb4:	je     0x14001bfc7
   14001bfb6:	mov    r8d,esi
   14001bfb9:	mov    rdx,r14
   14001bfbc:	mov    ecx,ebx
   14001bfbe:	call   0x14001c018
   14001bfc3:	mov    edi,eax
   14001bfc5:	jmp    0x14001bfdd
   14001bfc7:	call   0x14000b9f0
   14001bfcc:	mov    DWORD PTR [rax],0x9
   14001bfd2:	call   0x14000b980
   14001bfd7:	and    DWORD PTR [rax],0x0
   14001bfda:	or     edi,0xffffffff
   14001bfdd:	mov    ecx,ebx
   14001bfdf:	call   0x14002b320
   14001bfe4:	mov    eax,edi
   14001bfe6:	jmp    0x14001c003
   14001bfe8:	call   0x14000b980
   14001bfed:	and    DWORD PTR [rax],0x0
   14001bff0:	call   0x14000b9f0
   14001bff5:	mov    DWORD PTR [rax],0x9
   14001bffb:	call   0x14000b8b8
   14001c000:	or     eax,0xffffffff
   14001c003:	mov    rbx,QWORD PTR [rsp+0x58]
   14001c008:	add    rsp,0x20
   14001c00c:	pop    r15
   14001c00e:	pop    r14
   14001c010:	pop    r12
   14001c012:	pop    rdi
   14001c013:	pop    rsi
   14001c014:	ret    
   14001c015:	int3   
   14001c016:	int3   
   14001c017:	int3   
   14001c018:	mov    QWORD PTR [rsp+0x20],rbx
   14001c01d:	push   rbp
   14001c01e:	push   rsi
   14001c01f:	push   rdi
   14001c020:	push   r12
   14001c022:	push   r13
   14001c024:	push   r14
   14001c026:	push   r15
   14001c028:	lea    rbp,[rsp-0x1a40]
   14001c030:	mov    eax,0x1b40
   14001c035:	call   0x140009b80
   14001c03a:	sub    rsp,rax
   14001c03d:	mov    rax,QWORD PTR [rip+0x2922c]        # 0x140045270
   14001c044:	xor    rax,rsp
   14001c047:	mov    QWORD PTR [rbp+0x1a30],rax
   14001c04e:	xor    r12d,r12d
   14001c051:	mov    r15d,r8d
   14001c054:	mov    r14,rdx
   14001c057:	movsxd rdi,ecx
   14001c05a:	mov    DWORD PTR [rsp+0x40],r12d
   14001c05f:	mov    ebx,r12d
   14001c062:	mov    esi,r12d
   14001c065:	test   r8d,r8d
   14001c068:	jne    0x14001c071
   14001c06a:	xor    eax,eax
   14001c06c:	jmp    0x14001c7df
   14001c071:	test   rdx,rdx
   14001c074:	jne    0x14001c096
   14001c076:	call   0x14000b980
   14001c07b:	mov    DWORD PTR [rax],r12d
   14001c07e:	call   0x14000b9f0
   14001c083:	mov    DWORD PTR [rax],0x16
   14001c089:	call   0x14000b8b8
   14001c08e:	or     eax,0xffffffff
   14001c091:	jmp    0x14001c7df
   14001c096:	mov    rax,rdi
   14001c099:	mov    rcx,rdi
   14001c09c:	lea    rdx,[rip+0x2c79d]        # 0x140048840
   14001c0a3:	sar    rcx,0x5
   14001c0a7:	and    eax,0x1f
   14001c0aa:	mov    QWORD PTR [rsp+0x48],rcx
   14001c0af:	mov    rcx,QWORD PTR [rdx+rcx*8]
   14001c0b3:	imul   r13,rax,0x58
   14001c0b7:	mov    r12b,BYTE PTR [r13+rcx*1+0x38]
   14001c0bc:	mov    QWORD PTR [rsp+0x58],r13
   14001c0c1:	add    r12b,r12b
   14001c0c4:	sar    r12b,1
   14001c0c7:	lea    eax,[r12-0x1]
   14001c0cc:	cmp    al,0x1
   14001c0ce:	ja     0x14001c0e4
   14001c0d0:	mov    eax,r15d
   14001c0d3:	not    eax
   14001c0d5:	test   al,0x1
   14001c0d7:	jne    0x14001c0e4
   14001c0d9:	call   0x14000b980
   14001c0de:	xor    ecx,ecx
   14001c0e0:	mov    DWORD PTR [rax],ecx
   14001c0e2:	jmp    0x14001c07e
   14001c0e4:	test   BYTE PTR [r13+rcx*1+0x8],0x20
   14001c0ea:	je     0x14001c0f9
   14001c0ec:	xor    edx,edx
   14001c0ee:	mov    ecx,edi
   14001c0f0:	lea    r8d,[rdx+0x2]
   14001c0f4:	call   0x140023290
   14001c0f9:	mov    ecx,edi
   14001c0fb:	call   0x14001d13c
   14001c100:	mov    rdi,QWORD PTR [rsp+0x48]
   14001c105:	test   eax,eax
   14001c107:	je     0x14001c44d
   14001c10d:	lea    rax,[rip+0x2c72c]        # 0x140048840
   14001c114:	mov    rax,QWORD PTR [rax+rdi*8]
   14001c118:	test   BYTE PTR [r13+rax*1+0x8],0x80
   14001c11e:	je     0x14001c44d
   14001c124:	call   0x140010d3c
   14001c129:	lea    rdx,[rsp+0x64]
   14001c12e:	mov    rcx,QWORD PTR [rax+0xc0]
   14001c135:	xor    eax,eax
   14001c137:	cmp    QWORD PTR [rcx+0x138],rax
   14001c13e:	mov    edi,eax
   14001c140:	mov    rax,QWORD PTR [rsp+0x48]
   14001c145:	lea    rcx,[rip+0x2c6f4]        # 0x140048840
   14001c14c:	sete   dil
   14001c150:	mov    rcx,QWORD PTR [rcx+rax*8]
   14001c154:	mov    rcx,QWORD PTR [r13+rcx*1+0x0]
   14001c159:	call   QWORD PTR [rip+0x19271]        # 0x1400353d0
   14001c15f:	xor    ecx,ecx
   14001c161:	test   eax,eax
   14001c163:	je     0x14001c448
   14001c169:	xor    eax,eax
   14001c16b:	test   edi,edi
   14001c16d:	je     0x14001c178
   14001c16f:	test   r12b,r12b
   14001c172:	je     0x14001c441
   14001c178:	call   QWORD PTR [rip+0x1924a]        # 0x1400353c8
   14001c17e:	mov    rdi,r14
   14001c181:	mov    DWORD PTR [rsp+0x68],eax
   14001c185:	xor    eax,eax
   14001c187:	movzx  ecx,ax
   14001c18a:	mov    WORD PTR [rsp+0x44],ax
   14001c18f:	mov    DWORD PTR [rsp+0x60],eax
   14001c193:	test   r15d,r15d
   14001c196:	je     0x14001c7a2
   14001c19c:	mov    r13d,eax
   14001c19f:	test   r12b,r12b
   14001c1a2:	jne    0x14001c34b
   14001c1a8:	mov    cl,BYTE PTR [rdi]
   14001c1aa:	mov    r13,QWORD PTR [rsp+0x58]
   14001c1af:	lea    rdx,[rip+0x2c68a]        # 0x140048840
   14001c1b6:	cmp    cl,0xa
   14001c1b9:	sete   al
   14001c1bc:	xor    r8d,r8d
   14001c1bf:	mov    DWORD PTR [rsp+0x64],eax
   14001c1c3:	mov    rax,QWORD PTR [rsp+0x48]
   14001c1c8:	mov    rdx,QWORD PTR [rdx+rax*8]
   14001c1cc:	cmp    DWORD PTR [r13+rdx*1+0x50],r8d
   14001c1d1:	je     0x14001c1f2
   14001c1d3:	mov    al,BYTE PTR [r13+rdx*1+0x4c]
   14001c1d8:	mov    BYTE PTR [rsp+0x6d],cl
   14001c1dc:	mov    BYTE PTR [rsp+0x6c],al
   14001c1e0:	mov    DWORD PTR [r13+rdx*1+0x50],r8d
   14001c1e5:	mov    r8d,0x2
   14001c1eb:	lea    rdx,[rsp+0x6c]
   14001c1f0:	jmp    0x14001c23b
   14001c1f2:	movsx  ecx,cl
   14001c1f5:	call   0x14001d32c
   14001c1fa:	test   eax,eax
   14001c1fc:	je     0x14001c232
   14001c1fe:	mov    rax,r15
   14001c201:	sub    rax,rdi
   14001c204:	add    rax,r14
   14001c207:	cmp    rax,0x1
   14001c20b:	jle    0x14001c3c4
   14001c211:	lea    rcx,[rsp+0x44]
   14001c216:	mov    r8d,0x2
   14001c21c:	mov    rdx,rdi
   14001c21f:	call   0x140023730
   14001c224:	cmp    eax,0xffffffff
   14001c227:	je     0x14001c406
   14001c22d:	inc    rdi
   14001c230:	jmp    0x14001c24e
   14001c232:	mov    r8d,0x1
   14001c238:	mov    rdx,rdi
   14001c23b:	lea    rcx,[rsp+0x44]
   14001c240:	call   0x140023730
   14001c245:	cmp    eax,0xffffffff
   14001c248:	je     0x14001c406
   14001c24e:	mov    ecx,DWORD PTR [rsp+0x68]
   14001c252:	xor    eax,eax
   14001c254:	lea    r8,[rsp+0x44]
   14001c259:	mov    QWORD PTR [rsp+0x38],rax
   14001c25e:	mov    QWORD PTR [rsp+0x30],rax
   14001c263:	lea    rax,[rsp+0x6c]
   14001c268:	mov    r9d,0x1
   14001c26e:	xor    edx,edx
   14001c270:	mov    DWORD PTR [rsp+0x28],0x5
   14001c278:	mov    QWORD PTR [rsp+0x20],rax
   14001c27d:	inc    rdi
   14001c280:	call   QWORD PTR [rip+0x18e4a]        # 0x1400350d0
   14001c286:	mov    r13d,eax
   14001c289:	test   eax,eax
   14001c28b:	je     0x14001c401
   14001c291:	mov    rax,QWORD PTR [rsp+0x48]
   14001c296:	lea    rcx,[rip+0x2c5a3]        # 0x140048840
   14001c29d:	lea    r9,[rsp+0x60]
   14001c2a2:	mov    rcx,QWORD PTR [rcx+rax*8]
   14001c2a6:	xor    eax,eax
   14001c2a8:	lea    rdx,[rsp+0x6c]
   14001c2ad:	mov    QWORD PTR [rsp+0x20],rax
   14001c2b2:	mov    rax,QWORD PTR [rsp+0x58]
   14001c2b7:	mov    r8d,r13d
   14001c2ba:	mov    rcx,QWORD PTR [rax+rcx*1]
   14001c2be:	call   QWORD PTR [rip+0x190ac]        # 0x140035370
   14001c2c4:	test   eax,eax
   14001c2c6:	je     0x14001c3f9
   14001c2cc:	mov    eax,DWORD PTR [rsp+0x40]
   14001c2d0:	mov    ebx,edi
   14001c2d2:	sub    ebx,r14d
   14001c2d5:	add    ebx,eax
   14001c2d7:	cmp    DWORD PTR [rsp+0x60],r13d
   14001c2dc:	jl     0x14001c787
   14001c2e2:	xor    r13d,r13d
   14001c2e5:	cmp    DWORD PTR [rsp+0x64],r13d
   14001c2ea:	je     0x14001c344
   14001c2ec:	mov    rax,QWORD PTR [rsp+0x48]
   14001c2f1:	lea    r8d,[r13+0x1]
   14001c2f5:	mov    BYTE PTR [rsp+0x6c],0xd
   14001c2fa:	lea    rcx,[rip+0x2c53f]        # 0x140048840
   14001c301:	mov    QWORD PTR [rsp+0x20],r13
   14001c306:	mov    r13,QWORD PTR [rsp+0x58]
   14001c30b:	mov    rcx,QWORD PTR [rcx+rax*8]
   14001c30f:	lea    r9,[rsp+0x60]
   14001c314:	lea    rdx,[rsp+0x6c]
   14001c319:	mov    rcx,QWORD PTR [r13+rcx*1+0x0]
   14001c31e:	call   QWORD PTR [rip+0x1904c]        # 0x140035370
   14001c324:	test   eax,eax
   14001c326:	je     0x14001c3ef
   14001c32c:	cmp    DWORD PTR [rsp+0x60],0x1
   14001c331:	jl     0x14001c406
   14001c337:	inc    DWORD PTR [rsp+0x40]
   14001c33b:	movzx  ecx,WORD PTR [rsp+0x44]
   14001c340:	inc    ebx
   14001c342:	jmp    0x14001c3b3
   14001c344:	movzx  ecx,WORD PTR [rsp+0x44]
   14001c349:	jmp    0x14001c3ae
   14001c34b:	lea    eax,[r12-0x1]
   14001c350:	cmp    al,0x1
   14001c352:	ja     0x14001c36d
   14001c354:	movzx  ecx,WORD PTR [rdi]
   14001c357:	xor    eax,eax
   14001c359:	cmp    cx,0xa
   14001c35d:	mov    r13d,eax
   14001c360:	mov    WORD PTR [rsp+0x44],cx
   14001c365:	sete   r13b
   14001c369:	add    rdi,0x2
   14001c36d:	lea    eax,[r12-0x1]
   14001c372:	cmp    al,0x1
   14001c374:	ja     0x14001c3ae
   14001c376:	call   0x14002b380
   14001c37b:	movzx  ecx,WORD PTR [rsp+0x44]
   14001c380:	cmp    ax,cx
   14001c383:	jne    0x14001c3f9
   14001c385:	add    ebx,0x2
   14001c388:	test   r13d,r13d
   14001c38b:	je     0x14001c3ae
   14001c38d:	mov    eax,0xd
   14001c392:	mov    ecx,eax
   14001c394:	mov    WORD PTR [rsp+0x44],ax
   14001c399:	call   0x14002b380
   14001c39e:	movzx  ecx,WORD PTR [rsp+0x44]
   14001c3a3:	cmp    ax,cx
   14001c3a6:	jne    0x14001c3f9
   14001c3a8:	inc    ebx
   14001c3aa:	inc    DWORD PTR [rsp+0x40]
   14001c3ae:	mov    r13,QWORD PTR [rsp+0x58]
   14001c3b3:	mov    eax,edi
   14001c3b5:	sub    eax,r14d
   14001c3b8:	cmp    eax,r15d
   14001c3bb:	jae    0x14001c406
   14001c3bd:	xor    eax,eax
   14001c3bf:	jmp    0x14001c19c
   14001c3c4:	mov    al,BYTE PTR [rdi]
   14001c3c6:	mov    r15,QWORD PTR [rsp+0x48]
   14001c3cb:	lea    r12,[rip+0x2c46e]        # 0x140048840
   14001c3d2:	mov    rcx,QWORD PTR [r12+r15*8]
   14001c3d6:	inc    ebx
   14001c3d8:	mov    rdi,r15
   14001c3db:	mov    BYTE PTR [r13+rcx*1+0x4c],al
   14001c3e0:	mov    rax,QWORD PTR [r12+r15*8]
   14001c3e4:	mov    DWORD PTR [r13+rax*1+0x50],0x1
   14001c3ed:	jmp    0x14001c40b
   14001c3ef:	call   QWORD PTR [rip+0x18df3]        # 0x1400351e8
   14001c3f5:	mov    esi,eax
   14001c3f7:	jmp    0x14001c406
   14001c3f9:	call   QWORD PTR [rip+0x18de9]        # 0x1400351e8
   14001c3ff:	mov    esi,eax
   14001c401:	mov    r13,QWORD PTR [rsp+0x58]
   14001c406:	mov    rdi,QWORD PTR [rsp+0x48]
   14001c40b:	mov    eax,DWORD PTR [rsp+0x40]
   14001c40f:	test   ebx,ebx
   14001c411:	jne    0x14001c7db
   14001c417:	xor    ebx,ebx
   14001c419:	test   esi,esi
   14001c41b:	je     0x14001c7a7
   14001c421:	cmp    esi,0x5
   14001c424:	jne    0x14001c796
   14001c42a:	call   0x14000b9f0
   14001c42f:	mov    DWORD PTR [rax],0x9
   14001c435:	call   0x14000b980
   14001c43a:	mov    DWORD PTR [rax],esi
   14001c43c:	jmp    0x14001c08e
   14001c441:	mov    rdi,QWORD PTR [rsp+0x48]
   14001c446:	jmp    0x14001c44f
   14001c448:	mov    rdi,QWORD PTR [rsp+0x48]
   14001c44d:	xor    eax,eax
   14001c44f:	lea    r9,[rip+0x2c3ea]        # 0x140048840
   14001c456:	mov    rcx,QWORD PTR [r9+rdi*8]
   14001c45a:	test   BYTE PTR [r13+rcx*1+0x8],0x80
   14001c460:	je     0x14001c74e
   14001c466:	mov    esi,eax
   14001c468:	test   r12b,r12b
   14001c46b:	jne    0x14001c549
   14001c471:	mov    r12,r14
   14001c474:	test   r15d,r15d
   14001c477:	je     0x14001c7a7
   14001c47d:	mov    edx,0xd
   14001c482:	jmp    0x14001c486
   14001c484:	xor    eax,eax
   14001c486:	mov    r13d,DWORD PTR [rsp+0x40]
   14001c48b:	lea    rdi,[rbp+0x630]
   14001c492:	mov    rcx,rax
   14001c495:	mov    eax,r12d
   14001c498:	sub    eax,r14d
   14001c49b:	cmp    eax,r15d
   14001c49e:	jae    0x14001c4c7
   14001c4a0:	mov    al,BYTE PTR [r12]
   14001c4a4:	inc    r12
   14001c4a7:	cmp    al,0xa
   14001c4a9:	jne    0x14001c4b6
   14001c4ab:	mov    BYTE PTR [rdi],dl
   14001c4ad:	inc    r13d
   14001c4b0:	inc    rdi
   14001c4b3:	inc    rcx
   14001c4b6:	inc    rcx
   14001c4b9:	mov    BYTE PTR [rdi],al
   14001c4bb:	inc    rdi
   14001c4be:	cmp    rcx,0x13ff
   14001c4c5:	jb     0x14001c495
   14001c4c7:	lea    rax,[rbp+0x630]
   14001c4ce:	mov    r8d,edi
   14001c4d1:	mov    DWORD PTR [rsp+0x40],r13d
   14001c4d6:	mov    r13,QWORD PTR [rsp+0x58]
   14001c4db:	sub    r8d,eax
   14001c4de:	mov    rax,QWORD PTR [rsp+0x48]
   14001c4e3:	mov    rcx,QWORD PTR [r9+rax*8]
   14001c4e7:	xor    eax,eax
   14001c4e9:	lea    r9,[rsp+0x50]
   14001c4ee:	mov    rcx,QWORD PTR [r13+rcx*1+0x0]
   14001c4f3:	lea    rdx,[rbp+0x630]
   14001c4fa:	mov    QWORD PTR [rsp+0x20],rax
   14001c4ff:	call   QWORD PTR [rip+0x18e6b]        # 0x140035370
   14001c505:	test   eax,eax
   14001c507:	je     0x14001c3ef
   14001c50d:	add    ebx,DWORD PTR [rsp+0x50]
   14001c511:	lea    rax,[rbp+0x630]
   14001c518:	sub    rdi,rax
   14001c51b:	movsxd rax,DWORD PTR [rsp+0x50]
   14001c520:	cmp    rax,rdi
   14001c523:	jl     0x14001c406
   14001c529:	mov    eax,r12d
   14001c52c:	mov    edx,0xd
   14001c531:	lea    r9,[rip+0x2c308]        # 0x140048840
   14001c538:	sub    eax,r14d
   14001c53b:	cmp    eax,r15d
   14001c53e:	jb     0x14001c484
   14001c544:	jmp    0x14001c406
   14001c549:	cmp    r12b,0x2
   14001c54d:	mov    r12,r14
   14001c550:	jne    0x14001c636
   14001c556:	test   r15d,r15d
   14001c559:	je     0x14001c7a7
   14001c55f:	mov    edx,0xd
   14001c564:	jmp    0x14001c568
   14001c566:	xor    eax,eax
   14001c568:	mov    r13d,DWORD PTR [rsp+0x40]
   14001c56d:	lea    rdi,[rbp+0x630]
   14001c574:	mov    rcx,rax
   14001c577:	mov    eax,r12d
   14001c57a:	sub    eax,r14d
   14001c57d:	cmp    eax,r15d
   14001c580:	jae    0x14001c5b4
   14001c582:	movzx  eax,WORD PTR [r12]
   14001c587:	add    r12,0x2
   14001c58b:	cmp    ax,0xa
   14001c58f:	jne    0x14001c5a0
   14001c591:	mov    WORD PTR [rdi],dx
   14001c594:	add    r13d,0x2
   14001c598:	add    rdi,0x2
   14001c59c:	add    rcx,0x2
   14001c5a0:	add    rcx,0x2
   14001c5a4:	mov    WORD PTR [rdi],ax
   14001c5a7:	add    rdi,0x2
   14001c5ab:	cmp    rcx,0x13fe
   14001c5b2:	jb     0x14001c577
   14001c5b4:	lea    rax,[rbp+0x630]
   14001c5bb:	mov    r8d,edi
   14001c5be:	mov    DWORD PTR [rsp+0x40],r13d
   14001c5c3:	mov    r13,QWORD PTR [rsp+0x58]
   14001c5c8:	sub    r8d,eax
   14001c5cb:	mov    rax,QWORD PTR [rsp+0x48]
   14001c5d0:	mov    rcx,QWORD PTR [r9+rax*8]
   14001c5d4:	xor    eax,eax
   14001c5d6:	lea    r9,[rsp+0x50]
   14001c5db:	mov    rcx,QWORD PTR [r13+rcx*1+0x0]
   14001c5e0:	lea    rdx,[rbp+0x630]
   14001c5e7:	mov    QWORD PTR [rsp+0x20],rax
   14001c5ec:	call   QWORD PTR [rip+0x18d7e]        # 0x140035370
   14001c5f2:	test   eax,eax
   14001c5f4:	je     0x14001c3ef
   14001c5fa:	add    ebx,DWORD PTR [rsp+0x50]
   14001c5fe:	lea    rax,[rbp+0x630]
   14001c605:	sub    rdi,rax
   14001c608:	movsxd rax,DWORD PTR [rsp+0x50]
   14001c60d:	cmp    rax,rdi
   14001c610:	jl     0x14001c406
   14001c616:	mov    eax,r12d
   14001c619:	mov    edx,0xd
   14001c61e:	lea    r9,[rip+0x2c21b]        # 0x140048840
   14001c625:	sub    eax,r14d
   14001c628:	cmp    eax,r15d
   14001c62b:	jb     0x14001c566
   14001c631:	jmp    0x14001c406
   14001c636:	test   r15d,r15d
   14001c639:	je     0x14001c7a7
   14001c63f:	mov    r8d,0xd
   14001c645:	jmp    0x14001c649
   14001c647:	xor    eax,eax
   14001c649:	lea    rcx,[rbp-0x80]
   14001c64d:	mov    rdx,rax
   14001c650:	mov    eax,r12d
   14001c653:	sub    eax,r14d
   14001c656:	cmp    eax,r15d
   14001c659:	jae    0x14001c68a
   14001c65b:	movzx  eax,WORD PTR [r12]
   14001c660:	add    r12,0x2
   14001c664:	cmp    ax,0xa
   14001c668:	jne    0x14001c676
   14001c66a:	mov    WORD PTR [rcx],r8w
   14001c66e:	add    rcx,0x2
   14001c672:	add    rdx,0x2
   14001c676:	add    rdx,0x2
   14001c67a:	mov    WORD PTR [rcx],ax
   14001c67d:	add    rcx,0x2
   14001c681:	cmp    rdx,0x6a8
   14001c688:	jb     0x14001c650
   14001c68a:	lea    rax,[rbp-0x80]
   14001c68e:	xor    edi,edi
   14001c690:	lea    r8,[rbp-0x80]
   14001c694:	sub    ecx,eax
   14001c696:	mov    QWORD PTR [rsp+0x38],rdi
   14001c69b:	mov    QWORD PTR [rsp+0x30],rdi
   14001c6a0:	mov    eax,ecx
   14001c6a2:	mov    ecx,0xfde9
   14001c6a7:	mov    DWORD PTR [rsp+0x28],0xd55
   14001c6af:	cdq    
   14001c6b0:	sub    eax,edx
   14001c6b2:	xor    edx,edx
   14001c6b4:	sar    eax,1
   14001c6b6:	mov    r9d,eax
   14001c6b9:	lea    rax,[rbp+0x630]
   14001c6c0:	mov    QWORD PTR [rsp+0x20],rax
   14001c6c5:	call   QWORD PTR [rip+0x18a05]        # 0x1400350d0
   14001c6cb:	mov    r13d,eax
   14001c6ce:	test   eax,eax
   14001c6d0:	je     0x14001c3f9
   14001c6d6:	movsxd rax,edi
   14001c6d9:	mov    r8d,r13d
   14001c6dc:	lea    rdx,[rbp+0x630]
   14001c6e3:	add    rdx,rax
   14001c6e6:	mov    rax,QWORD PTR [rsp+0x48]
   14001c6eb:	lea    rcx,[rip+0x2c14e]        # 0x140048840
   14001c6f2:	mov    rcx,QWORD PTR [rcx+rax*8]
   14001c6f6:	xor    eax,eax
   14001c6f8:	lea    r9,[rsp+0x50]
   14001c6fd:	mov    QWORD PTR [rsp+0x20],rax
   14001c702:	mov    rax,QWORD PTR [rsp+0x58]
   14001c707:	sub    r8d,edi
   14001c70a:	mov    rcx,QWORD PTR [rax+rcx*1]
   14001c70e:	call   QWORD PTR [rip+0x18c5c]        # 0x140035370
   14001c714:	test   eax,eax
   14001c716:	je     0x14001c723
   14001c718:	add    edi,DWORD PTR [rsp+0x50]
   14001c71c:	cmp    r13d,edi
   14001c71f:	jg     0x14001c6d6
   14001c721:	jmp    0x14001c72b
   14001c723:	call   QWORD PTR [rip+0x18abf]        # 0x1400351e8
   14001c729:	mov    esi,eax
   14001c72b:	cmp    r13d,edi
   14001c72e:	jg     0x14001c401
   14001c734:	mov    ebx,r12d
   14001c737:	mov    r8d,0xd
   14001c73d:	sub    ebx,r14d
   14001c740:	cmp    ebx,r15d
   14001c743:	jb     0x14001c647
   14001c749:	jmp    0x14001c401
   14001c74e:	mov    rcx,QWORD PTR [r13+rcx*1+0x0]
   14001c753:	lea    r9,[rsp+0x50]
   14001c758:	mov    r8d,r15d
   14001c75b:	mov    rdx,r14
   14001c75e:	mov    QWORD PTR [rsp+0x20],rax
   14001c763:	call   QWORD PTR [rip+0x18c07]        # 0x140035370
   14001c769:	test   eax,eax
   14001c76b:	je     0x14001c778
   14001c76d:	mov    ebx,DWORD PTR [rsp+0x50]
   14001c771:	mov    eax,esi
   14001c773:	jmp    0x14001c40f
   14001c778:	call   QWORD PTR [rip+0x18a6a]        # 0x1400351e8
   14001c77e:	mov    esi,eax
   14001c780:	mov    eax,ebx
   14001c782:	jmp    0x14001c40f
   14001c787:	mov    r13,QWORD PTR [rsp+0x58]
   14001c78c:	mov    rdi,QWORD PTR [rsp+0x48]
   14001c791:	jmp    0x14001c40f
   14001c796:	mov    ecx,esi
   14001c798:	call   0x14000b9a0
   14001c79d:	jmp    0x14001c08e
   14001c7a2:	mov    rdi,QWORD PTR [rsp+0x48]
   14001c7a7:	lea    rax,[rip+0x2c092]        # 0x140048840
   14001c7ae:	mov    rax,QWORD PTR [rax+rdi*8]
   14001c7b2:	test   BYTE PTR [r13+rax*1+0x8],0x40
   14001c7b8:	je     0x14001c7c4
   14001c7ba:	cmp    BYTE PTR [r14],0x1a
   14001c7be:	je     0x14001c06a
   14001c7c4:	call   0x14000b9f0
   14001c7c9:	mov    DWORD PTR [rax],0x1c
   14001c7cf:	call   0x14000b980
   14001c7d4:	mov    DWORD PTR [rax],ebx
   14001c7d6:	jmp    0x14001c08e
   14001c7db:	sub    ebx,eax
   14001c7dd:	mov    eax,ebx
   14001c7df:	mov    rcx,QWORD PTR [rbp+0x1a30]
   14001c7e6:	xor    rcx,rsp
   14001c7e9:	call   0x1400097d0
   14001c7ee:	mov    rbx,QWORD PTR [rsp+0x1b98]
   14001c7f6:	add    rsp,0x1b40
   14001c7fd:	pop    r15
   14001c7ff:	pop    r14
   14001c801:	pop    r13
   14001c803:	pop    r12
   14001c805:	pop    rdi
   14001c806:	pop    rsi
   14001c807:	pop    rbp
   14001c808:	ret    
   14001c809:	int3   
   14001c80a:	int3   
   14001c80b:	int3   
   14001c80c:	mov    rax,rsp
   14001c80f:	mov    QWORD PTR [rax+0x8],rbx
   14001c813:	mov    QWORD PTR [rax+0x10],rbp
   14001c817:	mov    QWORD PTR [rax+0x20],rsi
   14001c81b:	mov    QWORD PTR [rax+0x18],r8
   14001c81f:	push   rdi
   14001c820:	push   r12
   14001c822:	push   r13
   14001c824:	push   r14
   14001c826:	push   r15
   14001c828:	sub    rsp,0x20
   14001c82c:	mov    rsi,r9
   14001c82f:	mov    r14,rdx
   14001c832:	mov    r15,rcx
   14001c835:	test   rdx,rdx
   14001c838:	je     0x14001c854
   14001c83a:	test   r8,r8
   14001c83d:	je     0x14001c854
   14001c83f:	test   r9,r9
   14001c842:	jne    0x14001c873
   14001c844:	call   0x14000b9f0
   14001c849:	mov    DWORD PTR [rax],0x16
   14001c84f:	call   0x14000b8b8
   14001c854:	xor    eax,eax
   14001c856:	mov    rbx,QWORD PTR [rsp+0x50]
   14001c85b:	mov    rbp,QWORD PTR [rsp+0x58]
   14001c860:	mov    rsi,QWORD PTR [rsp+0x68]
   14001c865:	add    rsp,0x20
   14001c869:	pop    r15
   14001c86b:	pop    r14
   14001c86d:	pop    r13
   14001c86f:	pop    r12
   14001c871:	pop    rdi
   14001c872:	ret    
   14001c873:	test   rcx,rcx
   14001c876:	je     0x14001c844
   14001c878:	xor    edx,edx
   14001c87a:	or     rax,0xffffffffffffffff
   14001c87e:	div    r14
   14001c881:	cmp    r8,rax
   14001c884:	ja     0x14001c844
   14001c886:	mov    rdi,r14
   14001c889:	imul   rdi,r8
   14001c88d:	test   DWORD PTR [r9+0x18],0x10c
   14001c895:	mov    rbp,rdi
   14001c898:	je     0x14001c8a0
   14001c89a:	mov    r12d,DWORD PTR [r9+0x24]
   14001c89e:	jmp    0x14001c8a6
   14001c8a0:	mov    r12d,0x1000
   14001c8a6:	test   rdi,rdi
   14001c8a9:	je     0x14001c992
   14001c8af:	mov    eax,DWORD PTR [rsi+0x18]
   14001c8b2:	and    eax,0x108
   14001c8b7:	je     0x14001c8f2
   14001c8b9:	mov    r13d,DWORD PTR [rsi+0x8]
   14001c8bd:	test   r13d,r13d
   14001c8c0:	je     0x14001c8f2
   14001c8c2:	js     0x14001c94a
   14001c8c8:	mov    rcx,QWORD PTR [rsi]
   14001c8cb:	cmp    rbp,r13
   14001c8ce:	mov    rdx,r15
   14001c8d1:	cmovb  r13d,ebp
   14001c8d5:	mov    r8d,r13d
   14001c8d8:	mov    ebx,r13d
   14001c8db:	call   0x14000b1c0
   14001c8e0:	sub    DWORD PTR [rsi+0x8],r13d
   14001c8e4:	add    QWORD PTR [rsi],rbx
   14001c8e7:	sub    rbp,rbx
   14001c8ea:	add    r15,rbx
   14001c8ed:	jmp    0x14001c984
   14001c8f2:	mov    ebx,r12d
   14001c8f5:	cmp    rbp,rbx
   14001c8f8:	jb     0x14001c95e
   14001c8fa:	test   eax,eax
   14001c8fc:	je     0x14001c90a
   14001c8fe:	mov    rcx,rsi
   14001c901:	call   0x14000ab5c
   14001c906:	test   eax,eax
   14001c908:	jne    0x14001c94e
   14001c90a:	test   r12d,r12d
   14001c90d:	je     0x14001c91d
   14001c90f:	xor    edx,edx
   14001c911:	mov    rax,rbp
   14001c914:	div    rbx
   14001c917:	mov    ebx,ebp
   14001c919:	sub    ebx,edx
   14001c91b:	jmp    0x14001c91f
   14001c91d:	mov    ebx,ebp
   14001c91f:	mov    rcx,rsi
   14001c922:	call   0x14001bc7c
   14001c927:	mov    r8d,ebx
   14001c92a:	mov    rdx,r15
   14001c92d:	mov    ecx,eax
   14001c92f:	call   0x14001bf34
   14001c934:	cmp    eax,0xffffffff
   14001c937:	je     0x14001c94a
   14001c939:	mov    ecx,eax
   14001c93b:	cmp    eax,ebx
   14001c93d:	cmova  ecx,ebx
   14001c940:	sub    rbp,rcx
   14001c943:	add    r15,rcx
   14001c946:	cmp    eax,ebx
   14001c948:	jae    0x14001c984
   14001c94a:	or     DWORD PTR [rsi+0x18],0x20
   14001c94e:	sub    rdi,rbp
   14001c951:	xor    edx,edx
   14001c953:	mov    rax,rdi
   14001c956:	div    r14
   14001c959:	jmp    0x14001c856
   14001c95e:	movsx  ecx,BYTE PTR [r15]
   14001c962:	mov    rdx,rsi
   14001c965:	call   0x1400123d0
   14001c96a:	cmp    eax,0xffffffff
   14001c96d:	je     0x14001c94e
   14001c96f:	inc    r15
   14001c972:	dec    rbp
   14001c975:	cmp    DWORD PTR [rsi+0x24],0x0
   14001c979:	mov    r12d,0x1
   14001c97f:	cmovg  r12d,DWORD PTR [rsi+0x24]
   14001c984:	test   rbp,rbp
   14001c987:	jne    0x14001c8af
   14001c98d:	mov    r8,QWORD PTR [rsp+0x60]
   14001c992:	mov    rax,r8
   14001c995:	jmp    0x14001c856
   14001c99a:	int3   
   14001c99b:	int3   
   14001c99c:	mov    rax,rsp
   14001c99f:	mov    QWORD PTR [rax+0x8],rbx
   14001c9a3:	mov    QWORD PTR [rax+0x10],rsi
   14001c9a7:	mov    QWORD PTR [rax+0x18],rdi
   14001c9ab:	mov    QWORD PTR [rax+0x20],r9
   14001c9af:	push   r14
   14001c9b1:	sub    rsp,0x20
   14001c9b5:	mov    rbx,r9
   14001c9b8:	mov    rdi,r8
   14001c9bb:	mov    rsi,rdx
   14001c9be:	mov    r14,rcx
   14001c9c1:	test   rdx,rdx
   14001c9c4:	je     0x14001ca13
   14001c9c6:	test   r8,r8
   14001c9c9:	je     0x14001ca13
   14001c9cb:	xor    eax,eax
   14001c9cd:	test   rbx,rbx
   14001c9d0:	setne  al
   14001c9d3:	test   eax,eax
   14001c9d5:	jne    0x14001c9e9
   14001c9d7:	call   0x14000b9f0
   14001c9dc:	mov    DWORD PTR [rax],0x16
   14001c9e2:	call   0x14000b8b8
   14001c9e7:	jmp    0x14001ca13
   14001c9e9:	mov    rcx,rbx
   14001c9ec:	call   0x14000a920
   14001c9f1:	nop
   14001c9f2:	mov    r9,rbx
   14001c9f5:	mov    r8,rdi
   14001c9f8:	mov    rdx,rsi
   14001c9fb:	mov    rcx,r14
   14001c9fe:	call   0x14001c80c
   14001ca03:	mov    rdi,rax
   14001ca06:	mov    rcx,rbx
   14001ca09:	call   0x14000a9bc
   14001ca0e:	mov    rax,rdi
   14001ca11:	jmp    0x14001ca15
   14001ca13:	xor    eax,eax
   14001ca15:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ca1a:	mov    rsi,QWORD PTR [rsp+0x38]
   14001ca1f:	mov    rdi,QWORD PTR [rsp+0x40]
   14001ca24:	add    rsp,0x20
   14001ca28:	pop    r14
   14001ca2a:	ret    
   14001ca2b:	int3   
   14001ca2c:	int3   
   14001ca2d:	int3   
   14001ca2e:	int3   
   14001ca2f:	int3   
   14001ca30:	int3   
   14001ca31:	int3   
   14001ca32:	int3   
   14001ca33:	int3   
   14001ca34:	int3   
   14001ca35:	int3   
   14001ca36:	data16 nop WORD PTR [rax+rax*1+0x0]
   14001ca40:	mov    rax,rcx
   14001ca43:	neg    rcx
   14001ca46:	test   rax,0x7
   14001ca4c:	je     0x14001ca5d
   14001ca4e:	xchg   ax,ax
   14001ca50:	mov    dl,BYTE PTR [rax]
   14001ca52:	inc    rax
   14001ca55:	test   dl,dl
   14001ca57:	je     0x14001cab8
   14001ca59:	test   al,0x7
   14001ca5b:	jne    0x14001ca50
   14001ca5d:	movabs r8,0x7efefefefefefeff
   14001ca67:	movabs r11,0x8101010101010100
   14001ca71:	mov    rdx,QWORD PTR [rax]
   14001ca74:	mov    r9,r8
   14001ca77:	add    rax,0x8
   14001ca7b:	add    r9,rdx
   14001ca7e:	not    rdx
   14001ca81:	xor    rdx,r9
   14001ca84:	and    rdx,r11
   14001ca87:	je     0x14001ca71
   14001ca89:	mov    rdx,QWORD PTR [rax-0x8]
   14001ca8d:	test   dl,dl
   14001ca8f:	je     0x14001cae2
   14001ca91:	test   dh,dh
   14001ca93:	je     0x14001cadc
   14001ca95:	shr    rdx,0x10
   14001ca99:	test   dl,dl
   14001ca9b:	je     0x14001cad6
   14001ca9d:	test   dh,dh
   14001ca9f:	je     0x14001cad0
   14001caa1:	shr    rdx,0x10
   14001caa5:	test   dl,dl
   14001caa7:	je     0x14001caca
   14001caa9:	test   dh,dh
   14001caab:	je     0x14001cac4
   14001caad:	shr    edx,0x10
   14001cab0:	test   dl,dl
   14001cab2:	je     0x14001cabe
   14001cab4:	test   dh,dh
   14001cab6:	jne    0x14001ca71
   14001cab8:	lea    rax,[rcx+rax*1-0x1]
   14001cabd:	ret    
   14001cabe:	lea    rax,[rcx+rax*1-0x2]
   14001cac3:	ret    
   14001cac4:	lea    rax,[rcx+rax*1-0x3]
   14001cac9:	ret    
   14001caca:	lea    rax,[rcx+rax*1-0x4]
   14001cacf:	ret    
   14001cad0:	lea    rax,[rcx+rax*1-0x5]
   14001cad5:	ret    
   14001cad6:	lea    rax,[rcx+rax*1-0x6]
   14001cadb:	ret    
   14001cadc:	lea    rax,[rcx+rax*1-0x7]
   14001cae1:	ret    
   14001cae2:	lea    rax,[rcx+rax*1-0x8]
   14001cae7:	ret    
   14001cae8:	mov    r9,rdx
   14001caeb:	mov    rdx,rcx
   14001caee:	lea    rcx,[rip+0xfffffffffffef29b]        # 0x14000bd90
   14001caf5:	xor    r8d,r8d
   14001caf8:	jmp    0x14001cb00
   14001cafd:	int3   
   14001cafe:	int3   
   14001caff:	int3   
   14001cb00:	mov    rax,rsp
   14001cb03:	mov    QWORD PTR [rax+0x8],rbx
   14001cb07:	mov    QWORD PTR [rax+0x10],rbp
   14001cb0b:	mov    QWORD PTR [rax+0x18],rsi
   14001cb0f:	push   rdi
   14001cb10:	sub    rsp,0x50
   14001cb14:	and    QWORD PTR [rax-0x38],0x0
   14001cb19:	mov    rbx,rdx
   14001cb1c:	xor    edx,edx
   14001cb1e:	mov    rsi,r8
   14001cb21:	mov    rbp,rcx
   14001cb24:	lea    r8d,[rdx+0x28]
   14001cb28:	lea    rcx,[rax-0x30]
   14001cb2c:	mov    rdi,r9
   14001cb2f:	call   0x140009800
   14001cb34:	test   rbx,rbx
   14001cb37:	jne    0x14001cb4e
   14001cb39:	call   0x14000b9f0
   14001cb3e:	mov    DWORD PTR [rax],0x16
   14001cb44:	call   0x14000b8b8
   14001cb49:	or     eax,0xffffffff
   14001cb4c:	jmp    0x14001cb7a
   14001cb4e:	and    QWORD PTR [rsp+0x30],0x0
   14001cb54:	and    QWORD PTR [rsp+0x20],0x0
   14001cb5a:	lea    rcx,[rsp+0x20]
   14001cb5f:	mov    r9,rdi
   14001cb62:	mov    r8,rsi
   14001cb65:	mov    rdx,rbx
   14001cb68:	mov    DWORD PTR [rsp+0x28],0x7fffffff
   14001cb70:	mov    DWORD PTR [rsp+0x38],0x42
   14001cb78:	call   rbp
   14001cb7a:	mov    rbx,QWORD PTR [rsp+0x60]
   14001cb7f:	mov    rbp,QWORD PTR [rsp+0x68]
   14001cb84:	mov    rsi,QWORD PTR [rsp+0x70]
   14001cb89:	add    rsp,0x50
   14001cb8d:	pop    rdi
   14001cb8e:	ret    
   14001cb8f:	int3   
   14001cb90:	mov    r9,r8
   14001cb93:	mov    r8,rdx
   14001cb96:	mov    rdx,rcx
   14001cb99:	lea    rcx,[rip+0xfffffffffffef1f0]        # 0x14000bd90
   14001cba0:	jmp    0x14001cb00
   14001cba5:	int3   
   14001cba6:	int3   
   14001cba7:	int3   
   14001cba8:	mov    r9,rdx
   14001cbab:	mov    rdx,rcx
   14001cbae:	lea    rcx,[rip+0xffffffffffff90ff]        # 0x140015cb4
   14001cbb5:	xor    r8d,r8d
   14001cbb8:	jmp    0x14001cb00
   14001cbbd:	int3   
   14001cbbe:	int3   
   14001cbbf:	int3   
   14001cbc0:	mov    r9,r8
   14001cbc3:	mov    r8,rdx
   14001cbc6:	mov    rdx,rcx
   14001cbc9:	lea    rcx,[rip+0xffffffffffff90e4]        # 0x140015cb4
   14001cbd0:	jmp    0x14001cb00
   14001cbd5:	int3   
   14001cbd6:	int3   
   14001cbd7:	int3   
   14001cbd8:	mov    rax,rsp
   14001cbdb:	mov    QWORD PTR [rax+0x8],rbx
   14001cbdf:	mov    QWORD PTR [rax+0x10],rbp
   14001cbe3:	mov    QWORD PTR [rax+0x18],rsi
   14001cbe7:	push   rdi
   14001cbe8:	sub    rsp,0x50
   14001cbec:	and    QWORD PTR [rax-0x38],0x0
   14001cbf1:	mov    rdi,rdx
   14001cbf4:	xor    edx,edx
   14001cbf6:	mov    rbp,r8
   14001cbf9:	mov    rbx,rcx
   14001cbfc:	lea    r8d,[rdx+0x28]
   14001cc00:	lea    rcx,[rax-0x30]
   14001cc04:	mov    rsi,r9
   14001cc07:	call   0x140009800
   14001cc0c:	test   rdi,rdi
   14001cc0f:	jne    0x14001cc26
   14001cc11:	call   0x14000b9f0
   14001cc16:	mov    DWORD PTR [rax],0x16
   14001cc1c:	call   0x14000b8b8
   14001cc21:	or     eax,0xffffffff
   14001cc24:	jmp    0x14001cc78
   14001cc26:	test   rbx,rbx
   14001cc29:	je     0x14001cc11
   14001cc2b:	lea    rcx,[rsp+0x20]
   14001cc30:	mov    r9,rsi
   14001cc33:	mov    r8,rbp
   14001cc36:	mov    rdx,rdi
   14001cc39:	mov    DWORD PTR [rsp+0x28],0x7fffffff
   14001cc41:	mov    DWORD PTR [rsp+0x38],0x42
   14001cc49:	mov    QWORD PTR [rsp+0x30],rbx
   14001cc4e:	mov    QWORD PTR [rsp+0x20],rbx
   14001cc53:	call   0x14000bd90
   14001cc58:	dec    DWORD PTR [rsp+0x28]
   14001cc5c:	mov    ebx,eax
   14001cc5e:	js     0x14001cc6a
   14001cc60:	mov    rcx,QWORD PTR [rsp+0x20]
   14001cc65:	mov    BYTE PTR [rcx],0x0
   14001cc68:	jmp    0x14001cc76
   14001cc6a:	lea    rdx,[rsp+0x20]
   14001cc6f:	xor    ecx,ecx
   14001cc71:	call   0x1400123d0
   14001cc76:	mov    eax,ebx
   14001cc78:	mov    rbx,QWORD PTR [rsp+0x60]
   14001cc7d:	mov    rbp,QWORD PTR [rsp+0x68]
   14001cc82:	mov    rsi,QWORD PTR [rsp+0x70]
   14001cc87:	add    rsp,0x50
   14001cc8b:	pop    rdi
   14001cc8c:	ret    
   14001cc8d:	int3   
   14001cc8e:	int3   
   14001cc8f:	int3   
   14001cc90:	mov    r9,r8
   14001cc93:	xor    r8d,r8d
   14001cc96:	jmp    0x14001cbd8
   14001cc9b:	int3   
   14001cc9c:	mov    QWORD PTR [rsp+0x8],rbx
   14001cca1:	mov    QWORD PTR [rsp+0x10],rsi
   14001cca6:	push   rdi
   14001cca7:	sub    rsp,0x30
   14001ccab:	xor    ebx,ebx
   14001ccad:	lea    ecx,[rbx+0x1]
   14001ccb0:	call   0x140019628
   14001ccb5:	nop
   14001ccb6:	xor    edi,edi
   14001ccb8:	mov    DWORD PTR [rsp+0x20],edi
   14001ccbc:	cmp    edi,DWORD PTR [rip+0x2c1d6]        # 0x140048e98
   14001ccc2:	jge    0x14001cd92
   14001ccc8:	movsxd rsi,edi
   14001cccb:	mov    rax,QWORD PTR [rip+0x2c1be]        # 0x140048e90
   14001ccd2:	mov    rcx,QWORD PTR [rax+rsi*8]
   14001ccd6:	test   rcx,rcx
   14001ccd9:	je     0x14001cd3d
   14001ccdb:	test   BYTE PTR [rcx+0x18],0x83
   14001ccdf:	jne    0x14001cd36
   14001cce1:	test   DWORD PTR [rcx+0x18],0x8000
   14001cce8:	jne    0x14001cd36
   14001ccea:	lea    eax,[rdi-0x3]
   14001cced:	cmp    eax,0x10
   14001ccf0:	ja     0x14001cd02
   14001ccf2:	lea    ecx,[rdi+0x10]
   14001ccf5:	call   0x140019720
   14001ccfa:	test   eax,eax
   14001ccfc:	je     0x14001cd92
   14001cd02:	mov    rdx,QWORD PTR [rip+0x2c187]        # 0x140048e90
   14001cd09:	mov    rdx,QWORD PTR [rdx+rsi*8]
   14001cd0d:	mov    ecx,edi
   14001cd0f:	call   0x14000a988
   14001cd14:	mov    rax,QWORD PTR [rip+0x2c175]        # 0x140048e90
   14001cd1b:	mov    rcx,QWORD PTR [rax+rsi*8]
   14001cd1f:	test   BYTE PTR [rcx+0x18],0x83
   14001cd23:	je     0x14001cd31
   14001cd25:	mov    rdx,rcx
   14001cd28:	mov    ecx,edi
   14001cd2a:	call   0x14000aa0c
   14001cd2f:	jmp    0x14001cd36
   14001cd31:	mov    rbx,rcx
   14001cd34:	jmp    0x14001cd92
   14001cd36:	inc    edi
   14001cd38:	jmp    0x14001ccb8
   14001cd3d:	mov    ecx,0x58
   14001cd42:	call   0x14000fc4c
   14001cd47:	mov    rcx,rax
   14001cd4a:	movsxd rdi,edi
   14001cd4d:	mov    rax,QWORD PTR [rip+0x2c13c]        # 0x140048e90
   14001cd54:	mov    QWORD PTR [rax+rdi*8],rcx
   14001cd58:	test   rcx,rcx
   14001cd5b:	je     0x14001cd92
   14001cd5d:	add    rcx,0x30
   14001cd61:	xor    r8d,r8d
   14001cd64:	mov    edx,0xfa0
   14001cd69:	call   0x140019bcc
   14001cd6e:	mov    rax,QWORD PTR [rip+0x2c11b]        # 0x140048e90
   14001cd75:	mov    rcx,QWORD PTR [rax+rdi*8]
   14001cd79:	add    rcx,0x30
   14001cd7d:	call   QWORD PTR [rip+0x184dd]        # 0x140035260
   14001cd83:	mov    rax,QWORD PTR [rip+0x2c106]        # 0x140048e90
   14001cd8a:	mov    rbx,QWORD PTR [rax+rdi*8]
   14001cd8e:	and    DWORD PTR [rbx+0x18],0x0
   14001cd92:	test   rbx,rbx
   14001cd95:	je     0x14001cdb4
   14001cd97:	and    DWORD PTR [rbx+0x18],0x8000
   14001cd9e:	and    DWORD PTR [rbx+0x8],0x0
   14001cda2:	and    QWORD PTR [rbx+0x10],0x0
   14001cda7:	and    QWORD PTR [rbx],0x0
   14001cdab:	and    QWORD PTR [rbx+0x28],0x0
   14001cdb0:	or     DWORD PTR [rbx+0x1c],0xffffffff
   14001cdb4:	mov    ecx,0x1
   14001cdb9:	call   0x140019844
   14001cdbe:	mov    rax,rbx
   14001cdc1:	mov    rbx,QWORD PTR [rsp+0x40]
   14001cdc6:	mov    rsi,QWORD PTR [rsp+0x48]
   14001cdcb:	add    rsp,0x30
   14001cdcf:	pop    rdi
   14001cdd0:	ret    
   14001cdd1:	int3   
   14001cdd2:	int3   
   14001cdd3:	int3   
   14001cdd4:	mov    QWORD PTR [rsp+0x8],rbx
   14001cdd9:	mov    QWORD PTR [rsp+0x18],rbp
   14001cdde:	mov    QWORD PTR [rsp+0x20],rsi
   14001cde3:	push   rdi
   14001cde4:	push   r12
   14001cde6:	push   r13
   14001cde8:	push   r14
   14001cdea:	push   r15
   14001cdec:	sub    rsp,0x30
   14001cdf0:	mov    esi,DWORD PTR [rip+0x2bf5a]        # 0x140048d50
   14001cdf6:	xor    r12d,r12d
   14001cdf9:	mov    r14,r9
   14001cdfc:	lea    r13d,[r12+0x20]
   14001ce01:	mov    ebp,r8d
   14001ce04:	mov    rbx,rdx
   14001ce07:	mov    r15,rcx
   14001ce0a:	mov    r9d,r12d
   14001ce0d:	mov    r10d,r12d
   14001ce10:	mov    r11d,r12d
   14001ce13:	cmp    WORD PTR [rdx],r13w
   14001ce17:	jne    0x14001ce23
   14001ce19:	add    rbx,0x2
   14001ce1d:	cmp    WORD PTR [rbx],r13w
   14001ce21:	je     0x14001ce19
   14001ce23:	movzx  eax,WORD PTR [rbx]
   14001ce26:	mov    r8d,0x1
   14001ce2c:	cmp    eax,0x61
   14001ce2f:	je     0x14001ce61
   14001ce31:	cmp    eax,0x72
   14001ce34:	je     0x14001ce59
   14001ce36:	cmp    eax,0x77
   14001ce39:	je     0x14001ce52
   14001ce3b:	call   0x14000b9f0
   14001ce40:	mov    DWORD PTR [rax],0x16
   14001ce46:	call   0x14000b8b8
   14001ce4b:	xor    eax,eax
   14001ce4d:	jmp    0x14001d096
   14001ce52:	mov    edi,0x301
   14001ce57:	jmp    0x14001ce66
   14001ce59:	mov    edi,r12d
   14001ce5c:	or     esi,r8d
   14001ce5f:	jmp    0x14001ce69
   14001ce61:	mov    edi,0x109
   14001ce66:	or     esi,0x2
   14001ce69:	add    rbx,0x2
   14001ce6d:	mov    edx,r8d
   14001ce70:	movzx  eax,WORD PTR [rbx]
   14001ce73:	test   ax,ax
   14001ce76:	je     0x14001d03f
   14001ce7c:	test   edx,edx
   14001ce7e:	je     0x14001cf78
   14001ce84:	movzx  ecx,ax
   14001ce87:	cmp    ecx,0x53
   14001ce8a:	jg     0x14001cf05
   14001ce8c:	je     0x14001cef8
   14001ce8e:	sub    ecx,r13d
   14001ce91:	je     0x14001cf68
   14001ce97:	sub    ecx,0xb
   14001ce9a:	je     0x14001cee3
   14001ce9c:	dec    ecx
   14001ce9e:	je     0x14001cede
   14001cea0:	sub    ecx,0x18
   14001cea3:	je     0x14001cecc
   14001cea5:	sub    ecx,0xa
   14001cea8:	je     0x14001cec3
   14001ceaa:	cmp    ecx,0x4
   14001cead:	jne    0x14001ce3b
   14001ceaf:	test   r10d,r10d
   14001ceb2:	jne    0x14001cf5f
   14001ceb8:	mov    r10d,r8d
   14001cebb:	or     edi,0x10
   14001cebe:	jmp    0x14001cf68
   14001cec3:	bts    edi,0x7
   14001cec7:	jmp    0x14001cf68
   14001cecc:	test   dil,0x40
   14001ced0:	jne    0x14001cf5f
   14001ced6:	or     edi,0x40
   14001ced9:	jmp    0x14001cf68
   14001cede:	mov    r11d,r8d
   14001cee1:	jmp    0x14001cf5f
   14001cee3:	test   dil,0x2
   14001cee7:	jne    0x14001cf5f
   14001cee9:	and    edi,0xfffffffe
   14001ceec:	and    esi,0xfffffffc
   14001ceef:	or     edi,0x2
   14001cef2:	bts    esi,0x7
   14001cef6:	jmp    0x14001cf68
   14001cef8:	test   r10d,r10d
   14001cefb:	jne    0x14001cf5f
   14001cefd:	mov    r10d,r8d
   14001cf00:	or     edi,r13d
   14001cf03:	jmp    0x14001cf68
   14001cf05:	sub    ecx,0x54
   14001cf08:	je     0x14001cf59
   14001cf0a:	sub    ecx,0xe
   14001cf0d:	je     0x14001cf4b
   14001cf0f:	dec    ecx
   14001cf11:	je     0x14001cf3d
   14001cf13:	sub    ecx,0xb
   14001cf16:	je     0x14001cf2f
   14001cf18:	cmp    ecx,0x6
   14001cf1b:	jne    0x14001ce3b
   14001cf21:	test   edi,0xc000
   14001cf27:	jne    0x14001cf5f
   14001cf29:	bts    edi,0xe
   14001cf2d:	jmp    0x14001cf68
   14001cf2f:	test   r9d,r9d
   14001cf32:	jne    0x14001cf5f
   14001cf34:	mov    r9d,r8d
   14001cf37:	btr    esi,0xe
   14001cf3b:	jmp    0x14001cf68
   14001cf3d:	test   r9d,r9d
   14001cf40:	jne    0x14001cf5f
   14001cf42:	mov    r9d,r8d
   14001cf45:	bts    esi,0xe
   14001cf49:	jmp    0x14001cf68
   14001cf4b:	test   edi,0xc000
   14001cf51:	jne    0x14001cf5f
   14001cf53:	bts    edi,0xf
   14001cf57:	jmp    0x14001cf68
   14001cf59:	bt     edi,0xc
   14001cf5d:	jae    0x14001cf64
   14001cf5f:	mov    edx,r12d
   14001cf62:	jmp    0x14001cf68
   14001cf64:	bts    edi,0xc
   14001cf68:	add    rbx,0x2
   14001cf6c:	movzx  eax,WORD PTR [rbx]
   14001cf6f:	test   ax,ax
   14001cf72:	jne    0x14001ce7c
   14001cf78:	test   r11d,r11d
   14001cf7b:	je     0x14001d03f
   14001cf81:	jmp    0x14001cf87
   14001cf83:	add    rbx,0x2
   14001cf87:	cmp    WORD PTR [rbx],r13w
   14001cf8b:	je     0x14001cf83
   14001cf8d:	lea    rcx,[rip+0x1c8fc]        # 0x140039890
   14001cf94:	mov    r8d,0x3
   14001cf9a:	mov    rdx,rbx
   14001cf9d:	call   0x140021b24
   14001cfa2:	test   eax,eax
   14001cfa4:	jne    0x14001ce3b
   14001cfaa:	add    rbx,0x6
   14001cfae:	jmp    0x14001cfb4
   14001cfb0:	add    rbx,0x2
   14001cfb4:	cmp    WORD PTR [rbx],r13w
   14001cfb8:	je     0x14001cfb0
   14001cfba:	cmp    WORD PTR [rbx],0x3d
   14001cfbe:	jne    0x14001ce3b
   14001cfc4:	add    rbx,0x2
   14001cfc8:	cmp    WORD PTR [rbx],r13w
   14001cfcc:	je     0x14001cfc4
   14001cfce:	lea    rdx,[rip+0x1c8c3]        # 0x140039898
   14001cfd5:	mov    r8d,0x5
   14001cfdb:	mov    rcx,rbx
   14001cfde:	call   0x14002beb0
   14001cfe3:	test   eax,eax
   14001cfe5:	jne    0x14001cff1
   14001cfe7:	add    rbx,0xa
   14001cfeb:	bts    edi,0x12
   14001cfef:	jmp    0x14001d03f
   14001cff1:	lea    rdx,[rip+0x1c8b0]        # 0x1400398a8
   14001cff8:	mov    r8d,0x8
   14001cffe:	mov    rcx,rbx
   14001d001:	call   0x14002beb0
   14001d006:	test   eax,eax
   14001d008:	jne    0x14001d014
   14001d00a:	add    rbx,0x10
   14001d00e:	bts    edi,0x11
   14001d012:	jmp    0x14001d03f
   14001d014:	lea    rdx,[rip+0x1c8a5]        # 0x1400398c0
   14001d01b:	mov    r8d,0x7
   14001d021:	mov    rcx,rbx
   14001d024:	call   0x14002beb0
   14001d029:	test   eax,eax
   14001d02b:	jne    0x14001ce3b
   14001d031:	add    rbx,0xe
   14001d035:	bts    edi,0x10
   14001d039:	jmp    0x14001d03f
   14001d03b:	add    rbx,0x2
   14001d03f:	cmp    WORD PTR [rbx],r13w
   14001d043:	je     0x14001d03b
   14001d045:	cmp    WORD PTR [rbx],r12w
   14001d049:	jne    0x14001ce3b
   14001d04f:	lea    rcx,[rsp+0x68]
   14001d054:	mov    r9d,ebp
   14001d057:	mov    r8d,edi
   14001d05a:	mov    rdx,r15
   14001d05d:	mov    DWORD PTR [rsp+0x20],0x180
   14001d065:	call   0x14002be7c
   14001d06a:	test   eax,eax
   14001d06c:	jne    0x14001ce4b
   14001d072:	inc    DWORD PTR [rip+0x2a920]        # 0x140047998
   14001d078:	mov    eax,DWORD PTR [rsp+0x68]
   14001d07c:	mov    DWORD PTR [r14+0x18],esi
   14001d080:	mov    DWORD PTR [r14+0x1c],eax
   14001d084:	mov    DWORD PTR [r14+0x8],r12d
   14001d088:	mov    QWORD PTR [r14],r12
   14001d08b:	mov    rax,r14
   14001d08e:	mov    QWORD PTR [r14+0x10],r12
   14001d092:	mov    QWORD PTR [r14+0x28],r12
   14001d096:	mov    rbx,QWORD PTR [rsp+0x60]
   14001d09b:	mov    rbp,QWORD PTR [rsp+0x70]
   14001d0a0:	mov    rsi,QWORD PTR [rsp+0x78]
   14001d0a5:	add    rsp,0x30
   14001d0a9:	pop    r15
   14001d0ab:	pop    r14
   14001d0ad:	pop    r13
   14001d0af:	pop    r12
   14001d0b1:	pop    rdi
   14001d0b2:	ret    
   14001d0b3:	int3   
   14001d0b4:	int3   
   14001d0b5:	int3   
   14001d0b6:	int3   
   14001d0b7:	int3   
   14001d0b8:	int3   
   14001d0b9:	int3   
   14001d0ba:	int3   
   14001d0bb:	int3   
   14001d0bc:	int3   
   14001d0bd:	int3   
   14001d0be:	int3   
   14001d0bf:	int3   
   14001d0c0:	int3   
   14001d0c1:	int3   
   14001d0c2:	int3   
   14001d0c3:	int3   
   14001d0c4:	int3   
   14001d0c5:	int3   
   14001d0c6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14001d0d0:	sub    rsp,0x4d8
   14001d0d7:	xor    r8,r8
   14001d0da:	xor    r9,r9
   14001d0dd:	mov    QWORD PTR [rsp+0x20],rsp
   14001d0e2:	mov    QWORD PTR [rsp+0x28],r8
   14001d0e7:	call   0x140033ade
   14001d0ec:	add    rsp,0x4d8
   14001d0f3:	ret    
   14001d0f4:	int3   
   14001d0f5:	int3   
   14001d0f6:	int3   
   14001d0f7:	int3   
   14001d0f8:	int3   
   14001d0f9:	int3   
   14001d0fa:	nop    WORD PTR [rax+rax*1+0x0]
   14001d100:	mov    QWORD PTR [rsp+0x8],rcx
   14001d105:	mov    QWORD PTR [rsp+0x18],rdx
   14001d10a:	mov    DWORD PTR [rsp+0x10],r8d
   14001d10f:	mov    r9,0x19930520
   14001d116:	jmp    0x14001d120
   14001d118:	int3   
   14001d119:	int3   
   14001d11a:	int3   
   14001d11b:	int3   
   14001d11c:	int3   
   14001d11d:	int3   
   14001d11e:	xchg   ax,ax
   14001d120:	ret    
   14001d121:	int3   
   14001d122:	int3   
   14001d123:	int3   
   14001d124:	int3   
   14001d125:	int3   
   14001d126:	int3   
   14001d127:	nop    WORD PTR [rax+rax*1+0x0]
   14001d130:	ret    
   14001d131:	int3   
   14001d132:	int3   
   14001d133:	int3   
   14001d134:	and    DWORD PTR [rip+0x2bc25],0x0        # 0x140048d60
   14001d13b:	ret    
   14001d13c:	sub    rsp,0x28
   14001d140:	cmp    ecx,0xfffffffe
   14001d143:	jne    0x14001d152
   14001d145:	call   0x14000b9f0
   14001d14a:	mov    DWORD PTR [rax],0x9
   14001d150:	jmp    0x14001d194
   14001d152:	test   ecx,ecx
   14001d154:	js     0x14001d184
   14001d156:	cmp    ecx,DWORD PTR [rip+0x2bc08]        # 0x140048d64
   14001d15c:	jae    0x14001d184
   14001d15e:	movsxd rcx,ecx
   14001d161:	lea    rdx,[rip+0x2b6d8]        # 0x140048840
   14001d168:	mov    rax,rcx
   14001d16b:	and    ecx,0x1f
   14001d16e:	sar    rax,0x5
   14001d172:	imul   rcx,rcx,0x58
   14001d176:	mov    rax,QWORD PTR [rdx+rax*8]
   14001d17a:	movsx  eax,BYTE PTR [rax+rcx*1+0x8]
   14001d17f:	and    eax,0x40
   14001d182:	jmp    0x14001d196
   14001d184:	call   0x14000b9f0
   14001d189:	mov    DWORD PTR [rax],0x9
   14001d18f:	call   0x14000b8b8
   14001d194:	xor    eax,eax
   14001d196:	add    rsp,0x28
   14001d19a:	ret    
   14001d19b:	int3   
   14001d19c:	rex push rbx
   14001d19e:	sub    rsp,0x20
   14001d1a2:	mov    edx,0x107
   14001d1a7:	movzx  ebx,cx
   14001d1aa:	call   0x140010b00
   14001d1af:	xor    edx,edx
   14001d1b1:	test   eax,eax
   14001d1b3:	jne    0x14001d1bb
   14001d1b5:	cmp    bx,0x5f
   14001d1b9:	jne    0x14001d1c0
   14001d1bb:	mov    edx,0x1
   14001d1c0:	mov    eax,edx
   14001d1c2:	add    rsp,0x20
   14001d1c6:	pop    rbx
   14001d1c7:	ret    
   14001d1c8:	rex push rbx
   14001d1ca:	sub    rsp,0x20
   14001d1ce:	mov    edx,0x103
   14001d1d3:	movzx  ebx,cx
   14001d1d6:	call   0x140010b00
   14001d1db:	xor    edx,edx
   14001d1dd:	test   eax,eax
   14001d1df:	jne    0x14001d1e7
   14001d1e1:	cmp    bx,0x5f
   14001d1e5:	jne    0x14001d1ec
   14001d1e7:	mov    edx,0x1
   14001d1ec:	mov    eax,edx
   14001d1ee:	add    rsp,0x20
   14001d1f2:	pop    rbx
   14001d1f3:	ret    
   14001d1f4:	rex push rbx
   14001d1f6:	sub    rsp,0x40
   14001d1fa:	mov    ebx,ecx
   14001d1fc:	lea    rcx,[rsp+0x20]
   14001d201:	call   0x140007ff0
   14001d206:	mov    rax,QWORD PTR [rsp+0x20]
   14001d20b:	movzx  edx,bl
   14001d20e:	mov    rcx,QWORD PTR [rax+0x108]
   14001d215:	movzx  eax,WORD PTR [rcx+rdx*2]
   14001d219:	and    eax,0x8000
   14001d21e:	cmp    BYTE PTR [rsp+0x38],0x0
   14001d223:	je     0x14001d231
   14001d225:	mov    rcx,QWORD PTR [rsp+0x30]
   14001d22a:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001d231:	add    rsp,0x40
   14001d235:	pop    rbx
   14001d236:	ret    
   14001d237:	int3   
   14001d238:	mov    edx,0x107
   14001d23d:	jmp    0x140010b00
   14001d242:	int3   
   14001d243:	int3   
   14001d244:	mov    edx,0x103
   14001d249:	jmp    0x140010b00
   14001d24e:	int3   
   14001d24f:	int3   
   14001d250:	cmp    cx,0x9
   14001d254:	jne    0x14001d25c
   14001d256:	mov    eax,0x40
   14001d25b:	ret    
   14001d25c:	mov    edx,0x40
   14001d261:	jmp    0x140010b00
   14001d266:	int3   
   14001d267:	int3   
   14001d268:	mov    edx,0x20
   14001d26d:	jmp    0x140010b00
   14001d272:	int3   
   14001d273:	int3   
   14001d274:	rex push rbx
   14001d276:	sub    rsp,0x20
   14001d27a:	mov    edx,0x107
   14001d27f:	movzx  ebx,cx
   14001d282:	call   0x140010b00
   14001d287:	xor    edx,edx
   14001d289:	test   eax,eax
   14001d28b:	jne    0x14001d293
   14001d28d:	cmp    bx,0x5f
   14001d291:	jne    0x14001d298
   14001d293:	mov    edx,0x1
   14001d298:	mov    eax,edx
   14001d29a:	add    rsp,0x20
   14001d29e:	pop    rbx
   14001d29f:	ret    
   14001d2a0:	rex push rbx
   14001d2a2:	sub    rsp,0x20
   14001d2a6:	mov    edx,0x103
   14001d2ab:	movzx  ebx,cx
   14001d2ae:	call   0x140010b00
   14001d2b3:	xor    edx,edx
   14001d2b5:	test   eax,eax
   14001d2b7:	jne    0x14001d2bf
   14001d2b9:	cmp    bx,0x5f
   14001d2bd:	jne    0x14001d2c4
   14001d2bf:	mov    edx,0x1
   14001d2c4:	mov    eax,edx
   14001d2c6:	add    rsp,0x20
   14001d2ca:	pop    rbx
   14001d2cb:	ret    
   14001d2cc:	mov    edx,0x4
   14001d2d1:	jmp    0x140010b00
   14001d2d6:	int3   
   14001d2d7:	int3   
   14001d2d8:	mov    edx,0x117
   14001d2dd:	jmp    0x140010b00
   14001d2e2:	int3   
   14001d2e3:	int3   
   14001d2e4:	mov    edx,0x2
   14001d2e9:	jmp    0x140010b00
   14001d2ee:	int3   
   14001d2ef:	int3   
   14001d2f0:	mov    edx,0x157
   14001d2f5:	jmp    0x140010b00
   14001d2fa:	int3   
   14001d2fb:	int3   
   14001d2fc:	mov    edx,0x10
   14001d301:	jmp    0x140010b00
   14001d306:	int3   
   14001d307:	int3   
   14001d308:	mov    edx,0x8
   14001d30d:	jmp    0x140010b00
   14001d312:	int3   
   14001d313:	int3   
   14001d314:	mov    edx,0x1
   14001d319:	jmp    0x140010b00
   14001d31e:	int3   
   14001d31f:	int3   
   14001d320:	mov    edx,0x80
   14001d325:	jmp    0x140010b00
   14001d32a:	int3   
   14001d32b:	int3   
   14001d32c:	rex push rbx
   14001d32e:	sub    rsp,0x40
   14001d332:	mov    ebx,ecx
   14001d334:	lea    rcx,[rsp+0x20]
   14001d339:	xor    edx,edx
   14001d33b:	call   0x140007ff0
   14001d340:	mov    rax,QWORD PTR [rsp+0x20]
   14001d345:	movzx  edx,bl
   14001d348:	mov    rcx,QWORD PTR [rax+0x108]
   14001d34f:	movzx  eax,WORD PTR [rcx+rdx*2]
   14001d353:	and    eax,0x8000
   14001d358:	cmp    BYTE PTR [rsp+0x38],0x0
   14001d35d:	je     0x14001d36b
   14001d35f:	mov    rcx,QWORD PTR [rsp+0x30]
   14001d364:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001d36b:	add    rsp,0x40
   14001d36f:	pop    rbx
   14001d370:	ret    
   14001d371:	int3   
   14001d372:	int3   
   14001d373:	int3   
   14001d374:	mov    edx,0x107
   14001d379:	jmp    0x140010b00
   14001d37e:	int3   
   14001d37f:	int3   
   14001d380:	mov    edx,0x103
   14001d385:	jmp    0x140010b00
   14001d38a:	int3   
   14001d38b:	int3   
   14001d38c:	xor    eax,eax
   14001d38e:	mov    edx,0x80
   14001d393:	cmp    cx,dx
   14001d396:	setb   al
   14001d399:	ret    
   14001d39a:	int3   
   14001d39b:	int3   
   14001d39c:	cmp    cx,0x9
   14001d3a0:	jne    0x14001d3a8
   14001d3a2:	mov    eax,0x40
   14001d3a7:	ret    
   14001d3a8:	mov    edx,0x40
   14001d3ad:	jmp    0x140010b00
   14001d3b2:	int3   
   14001d3b3:	int3   
   14001d3b4:	mov    edx,0x20
   14001d3b9:	jmp    0x140010b00
   14001d3be:	int3   
   14001d3bf:	int3   
   14001d3c0:	mov    edx,0x4
   14001d3c5:	jmp    0x140010b00
   14001d3ca:	int3   
   14001d3cb:	int3   
   14001d3cc:	mov    edx,0x117
   14001d3d1:	jmp    0x140010b00
   14001d3d6:	int3   
   14001d3d7:	int3   
   14001d3d8:	mov    edx,0x2
   14001d3dd:	jmp    0x140010b00
   14001d3e2:	int3   
   14001d3e3:	int3   
   14001d3e4:	mov    edx,0x157
   14001d3e9:	jmp    0x140010b00
   14001d3ee:	int3   
   14001d3ef:	int3   
   14001d3f0:	mov    edx,0x10
   14001d3f5:	jmp    0x140010b00
   14001d3fa:	int3   
   14001d3fb:	int3   
   14001d3fc:	mov    edx,0x8
   14001d401:	jmp    0x140010b00
   14001d406:	int3   
   14001d407:	int3   
   14001d408:	mov    edx,0x1
   14001d40d:	jmp    0x140010b00
   14001d412:	int3   
   14001d413:	int3   
   14001d414:	mov    edx,0x80
   14001d419:	jmp    0x140010b00
   14001d41e:	int3   
   14001d41f:	int3   
   14001d420:	mov    rax,rsp
   14001d423:	mov    QWORD PTR [rax+0x8],rbx
   14001d427:	mov    QWORD PTR [rax+0x10],rsi
   14001d42b:	push   rdi
   14001d42c:	sub    rsp,0x50
   14001d430:	mov    rdi,rcx
   14001d433:	movzx  ebx,dx
   14001d436:	lea    rcx,[rax-0x28]
   14001d43a:	or     esi,0xffffffff
   14001d43d:	mov    rdx,r8
   14001d440:	mov    DWORD PTR [rax+0x20],esi
   14001d443:	call   0x140007ff0
   14001d448:	mov    rax,QWORD PTR [rsp+0x30]
   14001d44d:	movsxd r8,DWORD PTR [rax+0xd4]
   14001d454:	lea    rax,[rsp+0x30]
   14001d459:	lea    rcx,[rsp+0x78]
   14001d45e:	movzx  r9d,bx
   14001d462:	mov    rdx,rdi
   14001d465:	mov    QWORD PTR [rsp+0x20],rax
   14001d46a:	call   0x14001d49c
   14001d46f:	test   eax,eax
   14001d471:	cmove  esi,DWORD PTR [rsp+0x78]
   14001d476:	cmp    BYTE PTR [rsp+0x48],0x0
   14001d47b:	je     0x14001d489
   14001d47d:	mov    rax,QWORD PTR [rsp+0x40]
   14001d482:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001d489:	mov    rbx,QWORD PTR [rsp+0x60]
   14001d48e:	mov    eax,esi
   14001d490:	mov    rsi,QWORD PTR [rsp+0x68]
   14001d495:	add    rsp,0x50
   14001d499:	pop    rdi
   14001d49a:	ret    
   14001d49b:	int3   
   14001d49c:	mov    QWORD PTR [rsp+0x8],rbx
   14001d4a1:	mov    QWORD PTR [rsp+0x18],rsi
   14001d4a6:	mov    WORD PTR [rsp+0x20],r9w
   14001d4ac:	push   rdi
   14001d4ad:	sub    rsp,0x60
   14001d4b1:	mov    rdi,r8
   14001d4b4:	mov    rsi,rdx
   14001d4b7:	mov    rbx,rcx
   14001d4ba:	test   rdx,rdx
   14001d4bd:	jne    0x14001d4d2
   14001d4bf:	test   r8,r8
   14001d4c2:	je     0x14001d4d2
   14001d4c4:	test   rcx,rcx
   14001d4c7:	je     0x14001d4cb
   14001d4c9:	and    DWORD PTR [rcx],edx
   14001d4cb:	xor    eax,eax
   14001d4cd:	jmp    0x14001d567
   14001d4d2:	test   rcx,rcx
   14001d4d5:	je     0x14001d4da
   14001d4d7:	or     DWORD PTR [rcx],0xffffffff
   14001d4da:	cmp    r8,0x7fffffff
   14001d4e1:	jbe    0x14001d4f6
   14001d4e3:	call   0x14000b9f0
   14001d4e8:	mov    ebx,0x16
   14001d4ed:	mov    DWORD PTR [rax],ebx
   14001d4ef:	call   0x14000b8b8
   14001d4f4:	jmp    0x14001d565
   14001d4f6:	mov    rdx,QWORD PTR [rsp+0x90]
   14001d4fe:	lea    rcx,[rsp+0x40]
   14001d503:	call   0x140007ff0
   14001d508:	mov    rax,QWORD PTR [rsp+0x40]
   14001d50d:	cmp    QWORD PTR [rax+0x138],0x0
   14001d515:	jne    0x14001d596
   14001d517:	movzx  eax,WORD PTR [rsp+0x88]
   14001d51f:	mov    ecx,0xff
   14001d524:	cmp    ax,cx
   14001d527:	jbe    0x14001d579
   14001d529:	test   rsi,rsi
   14001d52c:	je     0x14001d540
   14001d52e:	test   rdi,rdi
   14001d531:	je     0x14001d540
   14001d533:	mov    r8,rdi
   14001d536:	xor    edx,edx
   14001d538:	mov    rcx,rsi
   14001d53b:	call   0x140009800
   14001d540:	call   0x14000b9f0
   14001d545:	mov    DWORD PTR [rax],0x2a
   14001d54b:	call   0x14000b9f0
   14001d550:	mov    ebx,DWORD PTR [rax]
   14001d552:	cmp    BYTE PTR [rsp+0x58],0x0
   14001d557:	je     0x14001d565
   14001d559:	mov    rcx,QWORD PTR [rsp+0x50]
   14001d55e:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001d565:	mov    eax,ebx
   14001d567:	lea    r11,[rsp+0x60]
   14001d56c:	mov    rbx,QWORD PTR [r11+0x10]
   14001d570:	mov    rsi,QWORD PTR [r11+0x20]
   14001d574:	mov    rsp,r11
   14001d577:	pop    rdi
   14001d578:	ret    
   14001d579:	test   rsi,rsi
   14001d57c:	je     0x14001d589
   14001d57e:	test   rdi,rdi
   14001d581:	je     0x14001d610
   14001d587:	mov    BYTE PTR [rsi],al
   14001d589:	test   rbx,rbx
   14001d58c:	je     0x14001d5e3
   14001d58e:	mov    DWORD PTR [rbx],0x1
   14001d594:	jmp    0x14001d5e3
   14001d596:	and    DWORD PTR [rsp+0x78],0x0
   14001d59b:	lea    rcx,[rsp+0x78]
   14001d5a0:	lea    r8,[rsp+0x88]
   14001d5a8:	mov    QWORD PTR [rsp+0x38],rcx
   14001d5ad:	and    QWORD PTR [rsp+0x30],0x0
   14001d5b3:	mov    ecx,DWORD PTR [rax+0x4]
   14001d5b6:	mov    r9d,0x1
   14001d5bc:	xor    edx,edx
   14001d5be:	mov    DWORD PTR [rsp+0x28],edi
   14001d5c2:	mov    QWORD PTR [rsp+0x20],rsi
   14001d5c7:	call   QWORD PTR [rip+0x17b03]        # 0x1400350d0
   14001d5cd:	test   eax,eax
   14001d5cf:	je     0x14001d5ea
   14001d5d1:	cmp    DWORD PTR [rsp+0x78],0x0
   14001d5d6:	jne    0x14001d540
   14001d5dc:	test   rbx,rbx
   14001d5df:	je     0x14001d5e3
   14001d5e1:	mov    DWORD PTR [rbx],eax
   14001d5e3:	xor    ebx,ebx
   14001d5e5:	jmp    0x14001d552
   14001d5ea:	call   QWORD PTR [rip+0x17bf8]        # 0x1400351e8
   14001d5f0:	cmp    eax,0x7a
   14001d5f3:	jne    0x14001d540
   14001d5f9:	test   rsi,rsi
   14001d5fc:	je     0x14001d610
   14001d5fe:	test   rdi,rdi
   14001d601:	je     0x14001d610
   14001d603:	mov    r8,rdi
   14001d606:	xor    edx,edx
   14001d608:	mov    rcx,rsi
   14001d60b:	call   0x140009800
   14001d610:	call   0x14000b9f0
   14001d615:	mov    ebx,0x22
   14001d61a:	mov    DWORD PTR [rax],ebx
   14001d61c:	call   0x14000b8b8
   14001d621:	jmp    0x14001d552
   14001d626:	int3   
   14001d627:	int3   
   14001d628:	mov    QWORD PTR [rsp+0x8],rbx
   14001d62d:	mov    QWORD PTR [rsp+0x10],rsi
   14001d632:	push   rdi
   14001d633:	sub    rsp,0x30
   14001d637:	or     esi,0xffffffff
   14001d63a:	movzx  ebx,dx
   14001d63d:	mov    rdi,rcx
   14001d640:	mov    DWORD PTR [rsp+0x50],esi
   14001d644:	call   0x140021554
   14001d649:	and    QWORD PTR [rsp+0x20],0x0
   14001d64f:	lea    rcx,[rsp+0x50]
   14001d654:	movsxd r8,eax
   14001d657:	movzx  r9d,bx
   14001d65b:	mov    rdx,rdi
   14001d65e:	call   0x14001d49c
   14001d663:	mov    rbx,QWORD PTR [rsp+0x40]
   14001d668:	test   eax,eax
   14001d66a:	cmove  esi,DWORD PTR [rsp+0x50]
   14001d66f:	mov    eax,esi
   14001d671:	mov    rsi,QWORD PTR [rsp+0x48]
   14001d676:	add    rsp,0x30
   14001d67a:	pop    rdi
   14001d67b:	ret    
   14001d67c:	sub    rsp,0x38
   14001d680:	and    QWORD PTR [rsp+0x20],0x0
   14001d686:	call   0x14001d49c
   14001d68b:	add    rsp,0x38
   14001d68f:	ret    
   14001d690:	mov    QWORD PTR [rsp+0x18],rbx
   14001d695:	push   rsi
   14001d696:	push   rdi
   14001d697:	push   r14
   14001d699:	sub    rsp,0x20
   14001d69d:	test   BYTE PTR [rcx+0x18],0x40
   14001d6a1:	mov    rdi,rcx
   14001d6a4:	lea    r14,[rip+0x2b195]        # 0x140048840
   14001d6ab:	lea    rsi,[rip+0x28d5e]        # 0x140046410
   14001d6b2:	jne    0x14001d75c
   14001d6b8:	call   0x14001bc7c
   14001d6bd:	cmp    eax,0xffffffff
   14001d6c0:	je     0x14001d6f3
   14001d6c2:	mov    rcx,rdi
   14001d6c5:	call   0x14001bc7c
   14001d6ca:	cmp    eax,0xfffffffe
   14001d6cd:	je     0x14001d6f3
   14001d6cf:	mov    rcx,rdi
   14001d6d2:	call   0x14001bc7c
   14001d6d7:	mov    rcx,rdi
   14001d6da:	movsxd rbx,eax
   14001d6dd:	sar    rbx,0x5
   14001d6e1:	call   0x14001bc7c
   14001d6e6:	and    eax,0x1f
   14001d6e9:	imul   rcx,rax,0x58
   14001d6ed:	add    rcx,QWORD PTR [r14+rbx*8]
   14001d6f1:	jmp    0x14001d6f6
   14001d6f3:	mov    rcx,rsi
   14001d6f6:	test   BYTE PTR [rcx+0x38],0x7f
   14001d6fa:	je     0x14001d75c
   14001d6fc:	dec    DWORD PTR [rdi+0x8]
   14001d6ff:	js     0x14001d70f
   14001d701:	mov    rax,QWORD PTR [rdi]
   14001d704:	movzx  ecx,BYTE PTR [rax]
   14001d707:	inc    rax
   14001d70a:	mov    QWORD PTR [rdi],rax
   14001d70d:	jmp    0x14001d719
   14001d70f:	mov    rcx,rdi
   14001d712:	call   0x14002c060
   14001d717:	mov    ecx,eax
   14001d719:	cmp    ecx,0xffffffff
   14001d71c:	jne    0x14001d728
   14001d71e:	mov    eax,0xffff
   14001d723:	jmp    0x14001d877
   14001d728:	dec    DWORD PTR [rdi+0x8]
   14001d72b:	mov    BYTE PTR [rsp+0x40],cl
   14001d72f:	js     0x14001d73f
   14001d731:	mov    rax,QWORD PTR [rdi]
   14001d734:	movzx  ecx,BYTE PTR [rax]
   14001d737:	inc    rax
   14001d73a:	mov    QWORD PTR [rdi],rax
   14001d73d:	jmp    0x14001d749
   14001d73f:	mov    rcx,rdi
   14001d742:	call   0x14002c060
   14001d747:	mov    ecx,eax
   14001d749:	cmp    ecx,0xffffffff
   14001d74c:	je     0x14001d71e
   14001d74e:	mov    BYTE PTR [rsp+0x41],cl
   14001d752:	movzx  eax,WORD PTR [rsp+0x40]
   14001d757:	jmp    0x14001d877
   14001d75c:	test   BYTE PTR [rdi+0x18],0x40
   14001d760:	jne    0x14001d84f
   14001d766:	mov    rcx,rdi
   14001d769:	call   0x14001bc7c
   14001d76e:	cmp    eax,0xffffffff
   14001d771:	je     0x14001d7a2
   14001d773:	mov    rcx,rdi
   14001d776:	call   0x14001bc7c
   14001d77b:	cmp    eax,0xfffffffe
   14001d77e:	je     0x14001d7a2
   14001d780:	mov    rcx,rdi
   14001d783:	call   0x14001bc7c
   14001d788:	mov    rcx,rdi
   14001d78b:	movsxd rbx,eax
   14001d78e:	sar    rbx,0x5
   14001d792:	call   0x14001bc7c
   14001d797:	and    eax,0x1f
   14001d79a:	imul   rsi,rax,0x58
   14001d79e:	add    rsi,QWORD PTR [r14+rbx*8]
   14001d7a2:	test   BYTE PTR [rsi+0x8],0x80
   14001d7a6:	je     0x14001d84f
   14001d7ac:	dec    DWORD PTR [rdi+0x8]
   14001d7af:	mov    ebx,0x1
   14001d7b4:	js     0x14001d7c4
   14001d7b6:	mov    rax,QWORD PTR [rdi]
   14001d7b9:	movzx  ecx,BYTE PTR [rax]
   14001d7bc:	inc    rax
   14001d7bf:	mov    QWORD PTR [rdi],rax
   14001d7c2:	jmp    0x14001d7ce
   14001d7c4:	mov    rcx,rdi
   14001d7c7:	call   0x14002c060
   14001d7cc:	mov    ecx,eax
   14001d7ce:	cmp    ecx,0xffffffff
   14001d7d1:	je     0x14001d71e
   14001d7d7:	mov    BYTE PTR [rsp+0x48],cl
   14001d7db:	movzx  ecx,cl
   14001d7de:	call   0x14001d32c
   14001d7e3:	test   eax,eax
   14001d7e5:	je     0x14001d824
   14001d7e7:	dec    DWORD PTR [rdi+0x8]
   14001d7ea:	js     0x14001d7fa
   14001d7ec:	mov    rax,QWORD PTR [rdi]
   14001d7ef:	movzx  ecx,BYTE PTR [rax]
   14001d7f2:	inc    rax
   14001d7f5:	mov    QWORD PTR [rdi],rax
   14001d7f8:	jmp    0x14001d804
   14001d7fa:	mov    rcx,rdi
   14001d7fd:	call   0x14002c060
   14001d802:	mov    ecx,eax
   14001d804:	cmp    ecx,0xffffffff
   14001d807:	jne    0x14001d81b
   14001d809:	movsx  ecx,BYTE PTR [rsp+0x48]
   14001d80e:	mov    rdx,rdi
   14001d811:	call   0x14002c2ac
   14001d816:	jmp    0x14001d71e
   14001d81b:	mov    BYTE PTR [rsp+0x49],cl
   14001d81f:	mov    ebx,0x2
   14001d824:	lea    rdx,[rsp+0x48]
   14001d829:	lea    rcx,[rsp+0x40]
   14001d82e:	movsxd r8,ebx
   14001d831:	call   0x140023730
   14001d836:	cmp    eax,0xffffffff
   14001d839:	jne    0x14001d752
   14001d83f:	call   0x14000b9f0
   14001d844:	mov    DWORD PTR [rax],0x2a
   14001d84a:	jmp    0x14001d71e
   14001d84f:	mov    eax,DWORD PTR [rdi+0x8]
   14001d852:	mov    ebx,0x2
   14001d857:	cmp    eax,ebx
   14001d859:	jl     0x14001d86f
   14001d85b:	mov    rcx,QWORD PTR [rdi]
   14001d85e:	add    eax,0xfffffffe
   14001d861:	mov    DWORD PTR [rdi+0x8],eax
   14001d864:	movzx  eax,WORD PTR [rcx]
   14001d867:	add    rcx,rbx
   14001d86a:	mov    QWORD PTR [rdi],rcx
   14001d86d:	jmp    0x14001d877
   14001d86f:	mov    rcx,rdi
   14001d872:	call   0x14002c30c
   14001d877:	mov    rbx,QWORD PTR [rsp+0x50]
   14001d87c:	add    rsp,0x20
   14001d880:	pop    r14
   14001d882:	pop    rdi
   14001d883:	pop    rsi
   14001d884:	ret    
   14001d885:	int3   
   14001d886:	int3   
   14001d887:	int3   
   14001d888:	mov    QWORD PTR [rsp+0x10],rbx
   14001d88d:	mov    QWORD PTR [rsp+0x8],rcx
   14001d892:	push   rdi
   14001d893:	sub    rsp,0x20
   14001d897:	mov    rbx,rcx
   14001d89a:	xor    eax,eax
   14001d89c:	test   rcx,rcx
   14001d89f:	setne  al
   14001d8a2:	test   eax,eax
   14001d8a4:	jne    0x14001d8bd
   14001d8a6:	call   0x14000b9f0
   14001d8ab:	mov    DWORD PTR [rax],0x16
   14001d8b1:	call   0x14000b8b8
   14001d8b6:	mov    eax,0xffff
   14001d8bb:	jmp    0x14001d8d9
   14001d8bd:	call   0x14000a920
   14001d8c2:	nop
   14001d8c3:	mov    rcx,rbx
   14001d8c6:	call   0x14001d690
   14001d8cb:	movzx  edi,ax
   14001d8ce:	mov    rcx,rbx
   14001d8d1:	call   0x14000a9bc
   14001d8d6:	movzx  eax,di
   14001d8d9:	mov    rbx,QWORD PTR [rsp+0x38]
   14001d8de:	add    rsp,0x20
   14001d8e2:	pop    rdi
   14001d8e3:	ret    
   14001d8e4:	jmp    0x14001d888
   14001d8e9:	int3   
   14001d8ea:	int3   
   14001d8eb:	int3   
   14001d8ec:	mov    QWORD PTR [rsp+0x18],rbx
   14001d8f1:	mov    QWORD PTR [rsp+0x20],rbp
   14001d8f6:	push   rsi
   14001d8f7:	push   rdi
   14001d8f8:	push   r13
   14001d8fa:	push   r14
   14001d8fc:	push   r15
   14001d8fe:	sub    rsp,0x40
   14001d902:	mov    rax,QWORD PTR [rip+0x27967]        # 0x140045270
   14001d909:	xor    rax,rsp
   14001d90c:	mov    QWORD PTR [rsp+0x38],rax
   14001d911:	mov    r15d,0xffff
   14001d917:	mov    rdi,rdx
   14001d91a:	movzx  ebp,cx
   14001d91d:	mov    WORD PTR [rsp+0x28],cx
   14001d922:	cmp    cx,r15w
   14001d926:	je     0x14001dabd
   14001d92c:	test   BYTE PTR [rdx+0x18],0x1
   14001d930:	mov    esi,0x2
   14001d935:	jne    0x14001d94b
   14001d937:	test   BYTE PTR [rdx+0x18],0x80
   14001d93b:	je     0x14001dabd
   14001d941:	test   BYTE PTR [rdx+0x18],sil
   14001d945:	jne    0x14001dabd
   14001d94b:	cmp    QWORD PTR [rdx+0x10],0x0
   14001d950:	jne    0x14001d95a
   14001d952:	mov    rcx,rdx
   14001d955:	call   0x140023324
   14001d95a:	test   BYTE PTR [rdi+0x18],0x40
   14001d95e:	jne    0x14001da86
   14001d964:	mov    rcx,rdi
   14001d967:	call   0x14001bc7c
   14001d96c:	lea    r14,[rip+0x28a9d]        # 0x140046410
   14001d973:	lea    r13,[rip+0x2aec6]        # 0x140048840
   14001d97a:	cmp    eax,0xffffffff
   14001d97d:	je     0x14001d9b1
   14001d97f:	mov    rcx,rdi
   14001d982:	call   0x14001bc7c
   14001d987:	cmp    eax,0xfffffffe
   14001d98a:	je     0x14001d9b1
   14001d98c:	mov    rcx,rdi
   14001d98f:	call   0x14001bc7c
   14001d994:	mov    rcx,rdi
   14001d997:	movsxd rbx,eax
   14001d99a:	sar    rbx,0x5
   14001d99e:	call   0x14001bc7c
   14001d9a3:	and    eax,0x1f
   14001d9a6:	imul   rcx,rax,0x58
   14001d9aa:	add    rcx,QWORD PTR [r13+rbx*8+0x0]
   14001d9af:	jmp    0x14001d9b4
   14001d9b1:	mov    rcx,r14
   14001d9b4:	test   BYTE PTR [rcx+0x8],0x80
   14001d9b8:	je     0x14001da86
   14001d9be:	mov    rcx,rdi
   14001d9c1:	call   0x14001bc7c
   14001d9c6:	cmp    eax,0xffffffff
   14001d9c9:	je     0x14001d9fb
   14001d9cb:	mov    rcx,rdi
   14001d9ce:	call   0x14001bc7c
   14001d9d3:	cmp    eax,0xfffffffe
   14001d9d6:	je     0x14001d9fb
   14001d9d8:	mov    rcx,rdi
   14001d9db:	call   0x14001bc7c
   14001d9e0:	mov    rcx,rdi
   14001d9e3:	movsxd rbx,eax
   14001d9e6:	sar    rbx,0x5
   14001d9ea:	call   0x14001bc7c
   14001d9ef:	and    eax,0x1f
   14001d9f2:	imul   r14,rax,0x58
   14001d9f6:	add    r14,QWORD PTR [r13+rbx*8+0x0]
   14001d9fb:	test   BYTE PTR [r14+0x38],0x7f
   14001da00:	je     0x14001da15
   14001da02:	mov    al,BYTE PTR [rsp+0x29]
   14001da06:	mov    BYTE PTR [rsp+0x30],bpl
   14001da0b:	mov    DWORD PTR [rsp+0x20],esi
   14001da0f:	mov    BYTE PTR [rsp+0x31],al
   14001da13:	jmp    0x14001da3a
   14001da15:	lea    rdx,[rsp+0x30]
   14001da1a:	lea    rcx,[rsp+0x20]
   14001da1f:	movzx  r9d,bp
   14001da23:	mov    r8d,0x5
   14001da29:	call   0x14001d67c
   14001da2e:	test   eax,eax
   14001da30:	jne    0x14001dabd
   14001da36:	mov    esi,DWORD PTR [rsp+0x20]
   14001da3a:	mov    rax,QWORD PTR [rdi+0x10]
   14001da3e:	movsxd rdx,esi
   14001da41:	add    rdx,rax
   14001da44:	cmp    QWORD PTR [rdi],rdx
   14001da47:	jae    0x14001da57
   14001da49:	cmp    DWORD PTR [rdi+0x8],0x0
   14001da4d:	jne    0x14001dabd
   14001da4f:	cmp    esi,DWORD PTR [rdi+0x24]
   14001da52:	jg     0x14001dabd
   14001da54:	mov    QWORD PTR [rdi],rdx
   14001da57:	lea    eax,[rsi-0x1]
   14001da5a:	movsxd rdx,eax
   14001da5d:	test   eax,eax
   14001da5f:	js     0x14001da76
   14001da61:	dec    QWORD PTR [rdi]
   14001da64:	mov    al,BYTE PTR [rsp+rdx*1+0x30]
   14001da68:	dec    rdx
   14001da6b:	mov    rcx,QWORD PTR [rdi]
   14001da6e:	mov    BYTE PTR [rcx],al
   14001da70:	jns    0x14001da61
   14001da72:	mov    esi,DWORD PTR [rsp+0x20]
   14001da76:	add    DWORD PTR [rdi+0x8],esi
   14001da79:	and    DWORD PTR [rdi+0x18],0xffffffef
   14001da7d:	or     DWORD PTR [rdi+0x18],0x1
   14001da81:	movzx  eax,bp
   14001da84:	jmp    0x14001dac1
   14001da86:	mov    rax,QWORD PTR [rdi+0x10]
   14001da8a:	lea    rcx,[rax+0x2]
   14001da8e:	cmp    QWORD PTR [rdi],rcx
   14001da91:	jae    0x14001daa5
   14001da93:	cmp    DWORD PTR [rdi+0x8],0x0
   14001da97:	jne    0x14001dabd
   14001da99:	movsxd rax,DWORD PTR [rdi+0x24]
   14001da9d:	cmp    rax,rsi
   14001daa0:	jb     0x14001dabd
   14001daa2:	mov    QWORD PTR [rdi],rcx
   14001daa5:	add    QWORD PTR [rdi],0xfffffffffffffffe
   14001daa9:	test   BYTE PTR [rdi+0x18],0x40
   14001daad:	mov    rax,QWORD PTR [rdi]
   14001dab0:	je     0x14001dae7
   14001dab2:	cmp    WORD PTR [rax],bp
   14001dab5:	je     0x14001da76
   14001dab7:	add    rax,rsi
   14001daba:	mov    QWORD PTR [rdi],rax
   14001dabd:	movzx  eax,r15w
   14001dac1:	mov    rcx,QWORD PTR [rsp+0x38]
   14001dac6:	xor    rcx,rsp
   14001dac9:	call   0x1400097d0
   14001dace:	lea    r11,[rsp+0x40]
   14001dad3:	mov    rbx,QWORD PTR [r11+0x40]
   14001dad7:	mov    rbp,QWORD PTR [r11+0x48]
   14001dadb:	mov    rsp,r11
   14001dade:	pop    r15
   14001dae0:	pop    r14
   14001dae2:	pop    r13
   14001dae4:	pop    rdi
   14001dae5:	pop    rsi
   14001dae6:	ret    
   14001dae7:	mov    WORD PTR [rax],bp
   14001daea:	jmp    0x14001da76
   14001daec:	mov    QWORD PTR [rsp+0x8],rbx
   14001daf1:	mov    QWORD PTR [rsp+0x10],rdx
   14001daf6:	push   rdi
   14001daf7:	sub    rsp,0x20
   14001dafb:	mov    rbx,rdx
   14001dafe:	movzx  edi,cx
   14001db01:	xor    eax,eax
   14001db03:	test   rdx,rdx
   14001db06:	setne  al
   14001db09:	test   eax,eax
   14001db0b:	jne    0x14001db24
   14001db0d:	call   0x14000b9f0
   14001db12:	mov    DWORD PTR [rax],0x16
   14001db18:	call   0x14000b8b8
   14001db1d:	mov    eax,0xffff
   14001db22:	jmp    0x14001db46
   14001db24:	mov    rcx,rdx
   14001db27:	call   0x14000a920
   14001db2c:	nop
   14001db2d:	mov    rdx,rbx
   14001db30:	movzx  ecx,di
   14001db33:	call   0x14001d8ec
   14001db38:	movzx  edi,ax
   14001db3b:	mov    rcx,rbx
   14001db3e:	call   0x14000a9bc
   14001db43:	movzx  eax,di
   14001db46:	mov    rbx,QWORD PTR [rsp+0x30]
   14001db4b:	add    rsp,0x20
   14001db4f:	pop    rdi
   14001db50:	ret    
   14001db51:	int3   
   14001db52:	int3   
   14001db53:	int3   
   14001db54:	xor    eax,eax
   14001db56:	cmp    ecx,0x80
   14001db5c:	setb   al
   14001db5f:	ret    
   14001db60:	rex push rbx
   14001db62:	sub    rsp,0x20
   14001db66:	mov    ebx,ecx
   14001db68:	movzx  ecx,cl
   14001db6b:	call   0x14001e144
   14001db70:	xor    edx,edx
   14001db72:	test   eax,eax
   14001db74:	jne    0x14001db7b
   14001db76:	cmp    bl,0x5f
   14001db79:	jne    0x14001db80
   14001db7b:	mov    edx,0x1
   14001db80:	mov    eax,edx
   14001db82:	add    rsp,0x20
   14001db86:	pop    rbx
   14001db87:	ret    
   14001db88:	rex push rbx
   14001db8a:	sub    rsp,0x20
   14001db8e:	mov    ebx,ecx
   14001db90:	call   0x14001e1c4
   14001db95:	xor    edx,edx
   14001db97:	test   eax,eax
   14001db99:	jne    0x14001dba0
   14001db9b:	cmp    ebx,0x5f
   14001db9e:	jne    0x14001dba5
   14001dba0:	mov    edx,0x1
   14001dba5:	mov    eax,edx
   14001dba7:	add    rsp,0x20
   14001dbab:	pop    rbx
   14001dbac:	ret    
   14001dbad:	int3   
   14001dbae:	int3   
   14001dbaf:	int3   
   14001dbb0:	and    ecx,0x7f
   14001dbb3:	mov    eax,ecx
   14001dbb5:	ret    
   14001dbb6:	int3   
   14001dbb7:	int3   
   14001dbb8:	rex push rbx
   14001dbba:	sub    rsp,0x40
   14001dbbe:	movsxd rbx,ecx
   14001dbc1:	lea    rcx,[rsp+0x20]
   14001dbc6:	call   0x140007ff0
   14001dbcb:	mov    rax,QWORD PTR [rsp+0x20]
   14001dbd0:	cmp    DWORD PTR [rax+0xd4],0x1
   14001dbd7:	jle    0x14001dbee
   14001dbd9:	lea    r8,[rsp+0x20]
   14001dbde:	mov    edx,0x107
   14001dbe3:	mov    ecx,ebx
   14001dbe5:	call   0x14002c4c4
   14001dbea:	mov    ecx,eax
   14001dbec:	jmp    0x14001dbff
   14001dbee:	mov    rax,QWORD PTR [rax+0x108]
   14001dbf5:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001dbf9:	and    ecx,0x107
   14001dbff:	cmp    BYTE PTR [rsp+0x38],0x0
   14001dc04:	je     0x14001dc12
   14001dc06:	mov    rax,QWORD PTR [rsp+0x30]
   14001dc0b:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001dc12:	mov    eax,ecx
   14001dc14:	add    rsp,0x40
   14001dc18:	pop    rbx
   14001dc19:	ret    
   14001dc1a:	int3   
   14001dc1b:	int3   
   14001dc1c:	rex push rbx
   14001dc1e:	sub    rsp,0x40
   14001dc22:	movsxd rbx,ecx
   14001dc25:	lea    rcx,[rsp+0x20]
   14001dc2a:	call   0x140007ff0
   14001dc2f:	mov    rax,QWORD PTR [rsp+0x20]
   14001dc34:	cmp    DWORD PTR [rax+0xd4],0x1
   14001dc3b:	jle    0x14001dc52
   14001dc3d:	lea    r8,[rsp+0x20]
   14001dc42:	mov    edx,0x103
   14001dc47:	mov    ecx,ebx
   14001dc49:	call   0x14002c4c4
   14001dc4e:	mov    ecx,eax
   14001dc50:	jmp    0x14001dc63
   14001dc52:	mov    rax,QWORD PTR [rax+0x108]
   14001dc59:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001dc5d:	and    ecx,0x103
   14001dc63:	cmp    BYTE PTR [rsp+0x38],0x0
   14001dc68:	je     0x14001dc76
   14001dc6a:	mov    rax,QWORD PTR [rsp+0x30]
   14001dc6f:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001dc76:	mov    eax,ecx
   14001dc78:	add    rsp,0x40
   14001dc7c:	pop    rbx
   14001dc7d:	ret    
   14001dc7e:	int3   
   14001dc7f:	int3   
   14001dc80:	rex push rbx
   14001dc82:	sub    rsp,0x40
   14001dc86:	movsxd rbx,ecx
   14001dc89:	lea    rcx,[rsp+0x20]
   14001dc8e:	call   0x140007ff0
   14001dc93:	cmp    ebx,0x9
   14001dc96:	jne    0x14001dc9d
   14001dc98:	lea    ecx,[rbx+0x37]
   14001dc9b:	jmp    0x14001dcd2
   14001dc9d:	mov    rax,QWORD PTR [rsp+0x20]
   14001dca2:	cmp    DWORD PTR [rax+0xd4],0x1
   14001dca9:	jle    0x14001dcc0
   14001dcab:	lea    r8,[rsp+0x20]
   14001dcb0:	mov    edx,0x40
   14001dcb5:	mov    ecx,ebx
   14001dcb7:	call   0x14002c4c4
   14001dcbc:	mov    ecx,eax
   14001dcbe:	jmp    0x14001dcd2
   14001dcc0:	mov    rax,QWORD PTR [rax+0x108]
   14001dcc7:	mov    ecx,0x40
   14001dccc:	movzx  edx,WORD PTR [rax+rbx*2]
   14001dcd0:	and    ecx,edx
   14001dcd2:	cmp    BYTE PTR [rsp+0x38],0x0
   14001dcd7:	je     0x14001dce5
   14001dcd9:	mov    rax,QWORD PTR [rsp+0x30]
   14001dcde:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001dce5:	mov    eax,ecx
   14001dce7:	add    rsp,0x40
   14001dceb:	pop    rbx
   14001dcec:	ret    
   14001dced:	int3   
   14001dcee:	int3   
   14001dcef:	int3   
   14001dcf0:	rex push rbx
   14001dcf2:	sub    rsp,0x40
   14001dcf6:	movsxd rbx,ecx
   14001dcf9:	lea    rcx,[rsp+0x20]
   14001dcfe:	call   0x140007ff0
   14001dd03:	mov    rax,QWORD PTR [rsp+0x20]
   14001dd08:	cmp    DWORD PTR [rax+0xd4],0x1
   14001dd0f:	jle    0x14001dd26
   14001dd11:	lea    r8,[rsp+0x20]
   14001dd16:	mov    edx,0x20
   14001dd1b:	mov    ecx,ebx
   14001dd1d:	call   0x14002c4c4
   14001dd22:	mov    ecx,eax
   14001dd24:	jmp    0x14001dd34
   14001dd26:	mov    rax,QWORD PTR [rax+0x108]
   14001dd2d:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001dd31:	and    ecx,0x20
   14001dd34:	cmp    BYTE PTR [rsp+0x38],0x0
   14001dd39:	je     0x14001dd47
   14001dd3b:	mov    rax,QWORD PTR [rsp+0x30]
   14001dd40:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001dd47:	mov    eax,ecx
   14001dd49:	add    rsp,0x40
   14001dd4d:	pop    rbx
   14001dd4e:	ret    
   14001dd4f:	int3   
   14001dd50:	rex push rbx
   14001dd52:	sub    rsp,0x40
   14001dd56:	movsxd rbx,ecx
   14001dd59:	lea    rcx,[rsp+0x20]
   14001dd5e:	call   0x140007ff0
   14001dd63:	mov    rax,QWORD PTR [rsp+0x20]
   14001dd68:	cmp    DWORD PTR [rax+0xd4],0x1
   14001dd6f:	jle    0x14001dd86
   14001dd71:	lea    r8,[rsp+0x20]
   14001dd76:	mov    edx,0x107
   14001dd7b:	mov    ecx,ebx
   14001dd7d:	call   0x14002c4c4
   14001dd82:	mov    edx,eax
   14001dd84:	jmp    0x14001dd97
   14001dd86:	mov    rax,QWORD PTR [rax+0x108]
   14001dd8d:	movzx  edx,WORD PTR [rax+rbx*2]
   14001dd91:	and    edx,0x107
   14001dd97:	xor    ecx,ecx
   14001dd99:	cmp    BYTE PTR [rsp+0x38],cl
   14001dd9d:	je     0x14001ddab
   14001dd9f:	mov    rax,QWORD PTR [rsp+0x30]
   14001dda4:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001ddab:	test   edx,edx
   14001ddad:	jne    0x14001ddb4
   14001ddaf:	cmp    ebx,0x5f
   14001ddb2:	jne    0x14001ddb9
   14001ddb4:	mov    ecx,0x1
   14001ddb9:	mov    eax,ecx
   14001ddbb:	add    rsp,0x40
   14001ddbf:	pop    rbx
   14001ddc0:	ret    
   14001ddc1:	int3   
   14001ddc2:	int3   
   14001ddc3:	int3   
   14001ddc4:	rex push rbx
   14001ddc6:	sub    rsp,0x40
   14001ddca:	movsxd rbx,ecx
   14001ddcd:	lea    rcx,[rsp+0x20]
   14001ddd2:	call   0x140007ff0
   14001ddd7:	mov    rax,QWORD PTR [rsp+0x20]
   14001dddc:	cmp    DWORD PTR [rax+0xd4],0x1
   14001dde3:	jle    0x14001ddfa
   14001dde5:	lea    r8,[rsp+0x20]
   14001ddea:	mov    edx,0x103
   14001ddef:	mov    ecx,ebx
   14001ddf1:	call   0x14002c4c4
   14001ddf6:	mov    edx,eax
   14001ddf8:	jmp    0x14001de0b
   14001ddfa:	mov    rax,QWORD PTR [rax+0x108]
   14001de01:	movzx  edx,WORD PTR [rax+rbx*2]
   14001de05:	and    edx,0x103
   14001de0b:	xor    ecx,ecx
   14001de0d:	cmp    BYTE PTR [rsp+0x38],cl
   14001de11:	je     0x14001de1f
   14001de13:	mov    rax,QWORD PTR [rsp+0x30]
   14001de18:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001de1f:	test   edx,edx
   14001de21:	jne    0x14001de28
   14001de23:	cmp    ebx,0x5f
   14001de26:	jne    0x14001de2d
   14001de28:	mov    ecx,0x1
   14001de2d:	mov    eax,ecx
   14001de2f:	add    rsp,0x40
   14001de33:	pop    rbx
   14001de34:	ret    
   14001de35:	int3   
   14001de36:	int3   
   14001de37:	int3   
   14001de38:	rex push rbx
   14001de3a:	sub    rsp,0x40
   14001de3e:	movsxd rbx,ecx
   14001de41:	lea    rcx,[rsp+0x20]
   14001de46:	call   0x140007ff0
   14001de4b:	mov    rax,QWORD PTR [rsp+0x20]
   14001de50:	cmp    DWORD PTR [rax+0xd4],0x1
   14001de57:	jle    0x14001de6e
   14001de59:	lea    r8,[rsp+0x20]
   14001de5e:	mov    edx,0x4
   14001de63:	mov    ecx,ebx
   14001de65:	call   0x14002c4c4
   14001de6a:	mov    ecx,eax
   14001de6c:	jmp    0x14001de7c
   14001de6e:	mov    rax,QWORD PTR [rax+0x108]
   14001de75:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001de79:	and    ecx,0x4
   14001de7c:	cmp    BYTE PTR [rsp+0x38],0x0
   14001de81:	je     0x14001de8f
   14001de83:	mov    rax,QWORD PTR [rsp+0x30]
   14001de88:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001de8f:	mov    eax,ecx
   14001de91:	add    rsp,0x40
   14001de95:	pop    rbx
   14001de96:	ret    
   14001de97:	int3   
   14001de98:	rex push rbx
   14001de9a:	sub    rsp,0x40
   14001de9e:	movsxd rbx,ecx
   14001dea1:	lea    rcx,[rsp+0x20]
   14001dea6:	call   0x140007ff0
   14001deab:	mov    rax,QWORD PTR [rsp+0x20]
   14001deb0:	cmp    DWORD PTR [rax+0xd4],0x1
   14001deb7:	jle    0x14001dece
   14001deb9:	lea    r8,[rsp+0x20]
   14001debe:	mov    edx,0x117
   14001dec3:	mov    ecx,ebx
   14001dec5:	call   0x14002c4c4
   14001deca:	mov    ecx,eax
   14001decc:	jmp    0x14001dedf
   14001dece:	mov    rax,QWORD PTR [rax+0x108]
   14001ded5:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001ded9:	and    ecx,0x117
   14001dedf:	cmp    BYTE PTR [rsp+0x38],0x0
   14001dee4:	je     0x14001def2
   14001dee6:	mov    rax,QWORD PTR [rsp+0x30]
   14001deeb:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001def2:	mov    eax,ecx
   14001def4:	add    rsp,0x40
   14001def8:	pop    rbx
   14001def9:	ret    
   14001defa:	int3   
   14001defb:	int3   
   14001defc:	rex push rbx
   14001defe:	sub    rsp,0x40
   14001df02:	movsxd rbx,ecx
   14001df05:	lea    rcx,[rsp+0x20]
   14001df0a:	call   0x140007ff0
   14001df0f:	mov    rax,QWORD PTR [rsp+0x20]
   14001df14:	cmp    DWORD PTR [rax+0xd4],0x1
   14001df1b:	jle    0x14001df32
   14001df1d:	lea    r8,[rsp+0x20]
   14001df22:	mov    edx,0x2
   14001df27:	mov    ecx,ebx
   14001df29:	call   0x14002c4c4
   14001df2e:	mov    ecx,eax
   14001df30:	jmp    0x14001df40
   14001df32:	mov    rax,QWORD PTR [rax+0x108]
   14001df39:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001df3d:	and    ecx,0x2
   14001df40:	cmp    BYTE PTR [rsp+0x38],0x0
   14001df45:	je     0x14001df53
   14001df47:	mov    rax,QWORD PTR [rsp+0x30]
   14001df4c:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001df53:	mov    eax,ecx
   14001df55:	add    rsp,0x40
   14001df59:	pop    rbx
   14001df5a:	ret    
   14001df5b:	int3   
   14001df5c:	rex push rbx
   14001df5e:	sub    rsp,0x40
   14001df62:	movsxd rbx,ecx
   14001df65:	lea    rcx,[rsp+0x20]
   14001df6a:	call   0x140007ff0
   14001df6f:	mov    rax,QWORD PTR [rsp+0x20]
   14001df74:	cmp    DWORD PTR [rax+0xd4],0x1
   14001df7b:	jle    0x14001df92
   14001df7d:	lea    r8,[rsp+0x20]
   14001df82:	mov    edx,0x157
   14001df87:	mov    ecx,ebx
   14001df89:	call   0x14002c4c4
   14001df8e:	mov    ecx,eax
   14001df90:	jmp    0x14001dfa3
   14001df92:	mov    rax,QWORD PTR [rax+0x108]
   14001df99:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001df9d:	and    ecx,0x157
   14001dfa3:	cmp    BYTE PTR [rsp+0x38],0x0
   14001dfa8:	je     0x14001dfb6
   14001dfaa:	mov    rax,QWORD PTR [rsp+0x30]
   14001dfaf:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001dfb6:	mov    eax,ecx
   14001dfb8:	add    rsp,0x40
   14001dfbc:	pop    rbx
   14001dfbd:	ret    
   14001dfbe:	int3   
   14001dfbf:	int3   
   14001dfc0:	rex push rbx
   14001dfc2:	sub    rsp,0x40
   14001dfc6:	movsxd rbx,ecx
   14001dfc9:	lea    rcx,[rsp+0x20]
   14001dfce:	call   0x140007ff0
   14001dfd3:	mov    rax,QWORD PTR [rsp+0x20]
   14001dfd8:	cmp    DWORD PTR [rax+0xd4],0x1
   14001dfdf:	jle    0x14001dff6
   14001dfe1:	lea    r8,[rsp+0x20]
   14001dfe6:	mov    edx,0x10
   14001dfeb:	mov    ecx,ebx
   14001dfed:	call   0x14002c4c4
   14001dff2:	mov    ecx,eax
   14001dff4:	jmp    0x14001e004
   14001dff6:	mov    rax,QWORD PTR [rax+0x108]
   14001dffd:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001e001:	and    ecx,0x10
   14001e004:	cmp    BYTE PTR [rsp+0x38],0x0
   14001e009:	je     0x14001e017
   14001e00b:	mov    rax,QWORD PTR [rsp+0x30]
   14001e010:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001e017:	mov    eax,ecx
   14001e019:	add    rsp,0x40
   14001e01d:	pop    rbx
   14001e01e:	ret    
   14001e01f:	int3   
   14001e020:	rex push rbx
   14001e022:	sub    rsp,0x40
   14001e026:	movsxd rbx,ecx
   14001e029:	lea    rcx,[rsp+0x20]
   14001e02e:	call   0x140007ff0
   14001e033:	mov    rax,QWORD PTR [rsp+0x20]
   14001e038:	cmp    DWORD PTR [rax+0xd4],0x1
   14001e03f:	jle    0x14001e056
   14001e041:	lea    r8,[rsp+0x20]
   14001e046:	mov    edx,0x8
   14001e04b:	mov    ecx,ebx
   14001e04d:	call   0x14002c4c4
   14001e052:	mov    ecx,eax
   14001e054:	jmp    0x14001e064
   14001e056:	mov    rax,QWORD PTR [rax+0x108]
   14001e05d:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001e061:	and    ecx,0x8
   14001e064:	cmp    BYTE PTR [rsp+0x38],0x0
   14001e069:	je     0x14001e077
   14001e06b:	mov    rax,QWORD PTR [rsp+0x30]
   14001e070:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001e077:	mov    eax,ecx
   14001e079:	add    rsp,0x40
   14001e07d:	pop    rbx
   14001e07e:	ret    
   14001e07f:	int3   
   14001e080:	rex push rbx
   14001e082:	sub    rsp,0x40
   14001e086:	movsxd rbx,ecx
   14001e089:	lea    rcx,[rsp+0x20]
   14001e08e:	call   0x140007ff0
   14001e093:	mov    rax,QWORD PTR [rsp+0x20]
   14001e098:	cmp    DWORD PTR [rax+0xd4],0x1
   14001e09f:	jle    0x14001e0b6
   14001e0a1:	lea    r8,[rsp+0x20]
   14001e0a6:	mov    edx,0x1
   14001e0ab:	mov    ecx,ebx
   14001e0ad:	call   0x14002c4c4
   14001e0b2:	mov    ecx,eax
   14001e0b4:	jmp    0x14001e0c4
   14001e0b6:	mov    rax,QWORD PTR [rax+0x108]
   14001e0bd:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001e0c1:	and    ecx,0x1
   14001e0c4:	cmp    BYTE PTR [rsp+0x38],0x0
   14001e0c9:	je     0x14001e0d7
   14001e0cb:	mov    rax,QWORD PTR [rsp+0x30]
   14001e0d0:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001e0d7:	mov    eax,ecx
   14001e0d9:	add    rsp,0x40
   14001e0dd:	pop    rbx
   14001e0de:	ret    
   14001e0df:	int3   
   14001e0e0:	rex push rbx
   14001e0e2:	sub    rsp,0x40
   14001e0e6:	movsxd rbx,ecx
   14001e0e9:	lea    rcx,[rsp+0x20]
   14001e0ee:	call   0x140007ff0
   14001e0f3:	mov    rax,QWORD PTR [rsp+0x20]
   14001e0f8:	cmp    DWORD PTR [rax+0xd4],0x1
   14001e0ff:	jle    0x14001e116
   14001e101:	lea    r8,[rsp+0x20]
   14001e106:	mov    edx,0x80
   14001e10b:	mov    ecx,ebx
   14001e10d:	call   0x14002c4c4
   14001e112:	mov    ecx,eax
   14001e114:	jmp    0x14001e127
   14001e116:	mov    rax,QWORD PTR [rax+0x108]
   14001e11d:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001e121:	and    ecx,0x80
   14001e127:	cmp    BYTE PTR [rsp+0x38],0x0
   14001e12c:	je     0x14001e13a
   14001e12e:	mov    rax,QWORD PTR [rsp+0x30]
   14001e133:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001e13a:	mov    eax,ecx
   14001e13c:	add    rsp,0x40
   14001e140:	pop    rbx
   14001e141:	ret    
   14001e142:	int3   
   14001e143:	int3   
   14001e144:	rex push rbx
   14001e146:	sub    rsp,0x40
   14001e14a:	cmp    DWORD PTR [rip+0x298a3],0x0        # 0x1400479f4
   14001e151:	movsxd rbx,ecx
   14001e154:	jne    0x14001e168
   14001e156:	mov    rax,QWORD PTR [rip+0x27f9b]        # 0x1400460f8
   14001e15d:	movzx  eax,WORD PTR [rax+rbx*2]
   14001e161:	and    eax,0x107
   14001e166:	jmp    0x14001e1bd
   14001e168:	lea    rcx,[rsp+0x20]
   14001e16d:	xor    edx,edx
   14001e16f:	call   0x140007ff0
   14001e174:	mov    rax,QWORD PTR [rsp+0x20]
   14001e179:	cmp    DWORD PTR [rax+0xd4],0x1
   14001e180:	jle    0x14001e197
   14001e182:	lea    r8,[rsp+0x20]
   14001e187:	mov    edx,0x107
   14001e18c:	mov    ecx,ebx
   14001e18e:	call   0x14002c4c4
   14001e193:	mov    ecx,eax
   14001e195:	jmp    0x14001e1a8
   14001e197:	mov    rax,QWORD PTR [rax+0x108]
   14001e19e:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001e1a2:	and    ecx,0x107
   14001e1a8:	cmp    BYTE PTR [rsp+0x38],0x0
   14001e1ad:	je     0x14001e1bb
   14001e1af:	mov    rax,QWORD PTR [rsp+0x30]
   14001e1b4:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001e1bb:	mov    eax,ecx
   14001e1bd:	add    rsp,0x40
   14001e1c1:	pop    rbx
   14001e1c2:	ret    
   14001e1c3:	int3   
   14001e1c4:	rex push rbx
   14001e1c6:	sub    rsp,0x40
   14001e1ca:	cmp    DWORD PTR [rip+0x29823],0x0        # 0x1400479f4
   14001e1d1:	movsxd rbx,ecx
   14001e1d4:	jne    0x14001e1e8
   14001e1d6:	mov    rax,QWORD PTR [rip+0x27f1b]        # 0x1400460f8
   14001e1dd:	movzx  eax,WORD PTR [rax+rbx*2]
   14001e1e1:	and    eax,0x103
   14001e1e6:	jmp    0x14001e23d
   14001e1e8:	lea    rcx,[rsp+0x20]
   14001e1ed:	xor    edx,edx
   14001e1ef:	call   0x140007ff0
   14001e1f4:	mov    rax,QWORD PTR [rsp+0x20]
   14001e1f9:	cmp    DWORD PTR [rax+0xd4],0x1
   14001e200:	jle    0x14001e217
   14001e202:	lea    r8,[rsp+0x20]
   14001e207:	mov    edx,0x103
   14001e20c:	mov    ecx,ebx
   14001e20e:	call   0x14002c4c4
   14001e213:	mov    ecx,eax
   14001e215:	jmp    0x14001e228
   14001e217:	mov    rax,QWORD PTR [rax+0x108]
   14001e21e:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001e222:	and    ecx,0x103
   14001e228:	cmp    BYTE PTR [rsp+0x38],0x0
   14001e22d:	je     0x14001e23b
   14001e22f:	mov    rax,QWORD PTR [rsp+0x30]
   14001e234:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001e23b:	mov    eax,ecx
   14001e23d:	add    rsp,0x40
   14001e241:	pop    rbx
   14001e242:	ret    
   14001e243:	int3   
   14001e244:	cmp    DWORD PTR [rip+0x297a9],0x0        # 0x1400479f4
   14001e24b:	jne    0x14001e26c
   14001e24d:	cmp    ecx,0x9
   14001e250:	jne    0x14001e256
   14001e252:	lea    eax,[rcx+0x37]
   14001e255:	ret    
   14001e256:	mov    rax,QWORD PTR [rip+0x27e9b]        # 0x1400460f8
   14001e25d:	movsxd rcx,ecx
   14001e260:	movzx  edx,WORD PTR [rax+rcx*2]
   14001e264:	mov    eax,0x40
   14001e269:	and    eax,edx
   14001e26b:	ret    
   14001e26c:	xor    edx,edx
   14001e26e:	jmp    0x14001dc80
   14001e273:	int3   
   14001e274:	rex push rbx
   14001e276:	sub    rsp,0x40
   14001e27a:	cmp    DWORD PTR [rip+0x29773],0x0        # 0x1400479f4
   14001e281:	movsxd rbx,ecx
   14001e284:	jne    0x14001e296
   14001e286:	mov    rax,QWORD PTR [rip+0x27e6b]        # 0x1400460f8
   14001e28d:	movzx  eax,WORD PTR [rax+rbx*2]
   14001e291:	and    eax,0x20
   14001e294:	jmp    0x14001e2e8
   14001e296:	lea    rcx,[rsp+0x20]
   14001e29b:	xor    edx,edx
   14001e29d:	call   0x140007ff0
   14001e2a2:	mov    rax,QWORD PTR [rsp+0x20]
   14001e2a7:	cmp    DWORD PTR [rax+0xd4],0x1
   14001e2ae:	jle    0x14001e2c5
   14001e2b0:	lea    r8,[rsp+0x20]
   14001e2b5:	mov    edx,0x20
   14001e2ba:	mov    ecx,ebx
   14001e2bc:	call   0x14002c4c4
   14001e2c1:	mov    ecx,eax
   14001e2c3:	jmp    0x14001e2d3
   14001e2c5:	mov    rax,QWORD PTR [rax+0x108]
   14001e2cc:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001e2d0:	and    ecx,0x20
   14001e2d3:	cmp    BYTE PTR [rsp+0x38],0x0
   14001e2d8:	je     0x14001e2e6
   14001e2da:	mov    rax,QWORD PTR [rsp+0x30]
   14001e2df:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001e2e6:	mov    eax,ecx
   14001e2e8:	add    rsp,0x40
   14001e2ec:	pop    rbx
   14001e2ed:	ret    
   14001e2ee:	int3   
   14001e2ef:	int3   
   14001e2f0:	rex push rbx
   14001e2f2:	sub    rsp,0x40
   14001e2f6:	cmp    DWORD PTR [rip+0x296f7],0x0        # 0x1400479f4
   14001e2fd:	movsxd rbx,ecx
   14001e300:	jne    0x14001e312
   14001e302:	mov    rax,QWORD PTR [rip+0x27def]        # 0x1400460f8
   14001e309:	movzx  eax,WORD PTR [rax+rbx*2]
   14001e30d:	and    eax,0x4
   14001e310:	jmp    0x14001e364
   14001e312:	lea    rcx,[rsp+0x20]
   14001e317:	xor    edx,edx
   14001e319:	call   0x140007ff0
   14001e31e:	mov    rax,QWORD PTR [rsp+0x20]
   14001e323:	cmp    DWORD PTR [rax+0xd4],0x1
   14001e32a:	jle    0x14001e341
   14001e32c:	lea    r8,[rsp+0x20]
   14001e331:	mov    edx,0x4
   14001e336:	mov    ecx,ebx
   14001e338:	call   0x14002c4c4
   14001e33d:	mov    ecx,eax
   14001e33f:	jmp    0x14001e34f
   14001e341:	mov    rax,QWORD PTR [rax+0x108]
   14001e348:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001e34c:	and    ecx,0x4
   14001e34f:	cmp    BYTE PTR [rsp+0x38],0x0
   14001e354:	je     0x14001e362
   14001e356:	mov    rax,QWORD PTR [rsp+0x30]
   14001e35b:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001e362:	mov    eax,ecx
   14001e364:	add    rsp,0x40
   14001e368:	pop    rbx
   14001e369:	ret    
   14001e36a:	int3   
   14001e36b:	int3   
   14001e36c:	rex push rbx
   14001e36e:	sub    rsp,0x40
   14001e372:	cmp    DWORD PTR [rip+0x2967b],0x0        # 0x1400479f4
   14001e379:	movsxd rbx,ecx
   14001e37c:	jne    0x14001e390
   14001e37e:	mov    rax,QWORD PTR [rip+0x27d73]        # 0x1400460f8
   14001e385:	movzx  eax,WORD PTR [rax+rbx*2]
   14001e389:	and    eax,0x117
   14001e38e:	jmp    0x14001e3e5
   14001e390:	lea    rcx,[rsp+0x20]
   14001e395:	xor    edx,edx
   14001e397:	call   0x140007ff0
   14001e39c:	mov    rax,QWORD PTR [rsp+0x20]
   14001e3a1:	cmp    DWORD PTR [rax+0xd4],0x1
   14001e3a8:	jle    0x14001e3bf
   14001e3aa:	lea    r8,[rsp+0x20]
   14001e3af:	mov    edx,0x117
   14001e3b4:	mov    ecx,ebx
   14001e3b6:	call   0x14002c4c4
   14001e3bb:	mov    ecx,eax
   14001e3bd:	jmp    0x14001e3d0
   14001e3bf:	mov    rax,QWORD PTR [rax+0x108]
   14001e3c6:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001e3ca:	and    ecx,0x117
   14001e3d0:	cmp    BYTE PTR [rsp+0x38],0x0
   14001e3d5:	je     0x14001e3e3
   14001e3d7:	mov    rax,QWORD PTR [rsp+0x30]
   14001e3dc:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001e3e3:	mov    eax,ecx
   14001e3e5:	add    rsp,0x40
   14001e3e9:	pop    rbx
   14001e3ea:	ret    
   14001e3eb:	int3   
   14001e3ec:	rex push rbx
   14001e3ee:	sub    rsp,0x40
   14001e3f2:	cmp    DWORD PTR [rip+0x295fb],0x0        # 0x1400479f4
   14001e3f9:	movsxd rbx,ecx
   14001e3fc:	jne    0x14001e40e
   14001e3fe:	mov    rax,QWORD PTR [rip+0x27cf3]        # 0x1400460f8
   14001e405:	movzx  eax,WORD PTR [rax+rbx*2]
   14001e409:	and    eax,0x2
   14001e40c:	jmp    0x14001e460
   14001e40e:	lea    rcx,[rsp+0x20]
   14001e413:	xor    edx,edx
   14001e415:	call   0x140007ff0
   14001e41a:	mov    rax,QWORD PTR [rsp+0x20]
   14001e41f:	cmp    DWORD PTR [rax+0xd4],0x1
   14001e426:	jle    0x14001e43d
   14001e428:	lea    r8,[rsp+0x20]
   14001e42d:	mov    edx,0x2
   14001e432:	mov    ecx,ebx
   14001e434:	call   0x14002c4c4
   14001e439:	mov    ecx,eax
   14001e43b:	jmp    0x14001e44b
   14001e43d:	mov    rax,QWORD PTR [rax+0x108]
   14001e444:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001e448:	and    ecx,0x2
   14001e44b:	cmp    BYTE PTR [rsp+0x38],0x0
   14001e450:	je     0x14001e45e
   14001e452:	mov    rax,QWORD PTR [rsp+0x30]
   14001e457:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001e45e:	mov    eax,ecx
   14001e460:	add    rsp,0x40
   14001e464:	pop    rbx
   14001e465:	ret    
   14001e466:	int3   
   14001e467:	int3   
   14001e468:	rex push rbx
   14001e46a:	sub    rsp,0x40
   14001e46e:	cmp    DWORD PTR [rip+0x2957f],0x0        # 0x1400479f4
   14001e475:	movsxd rbx,ecx
   14001e478:	jne    0x14001e48c
   14001e47a:	mov    rax,QWORD PTR [rip+0x27c77]        # 0x1400460f8
   14001e481:	movzx  eax,WORD PTR [rax+rbx*2]
   14001e485:	and    eax,0x157
   14001e48a:	jmp    0x14001e4e1
   14001e48c:	lea    rcx,[rsp+0x20]
   14001e491:	xor    edx,edx
   14001e493:	call   0x140007ff0
   14001e498:	mov    rax,QWORD PTR [rsp+0x20]
   14001e49d:	cmp    DWORD PTR [rax+0xd4],0x1
   14001e4a4:	jle    0x14001e4bb
   14001e4a6:	lea    r8,[rsp+0x20]
   14001e4ab:	mov    edx,0x157
   14001e4b0:	mov    ecx,ebx
   14001e4b2:	call   0x14002c4c4
   14001e4b7:	mov    ecx,eax
   14001e4b9:	jmp    0x14001e4cc
   14001e4bb:	mov    rax,QWORD PTR [rax+0x108]
   14001e4c2:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001e4c6:	and    ecx,0x157
   14001e4cc:	cmp    BYTE PTR [rsp+0x38],0x0
   14001e4d1:	je     0x14001e4df
   14001e4d3:	mov    rax,QWORD PTR [rsp+0x30]
   14001e4d8:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001e4df:	mov    eax,ecx
   14001e4e1:	add    rsp,0x40
   14001e4e5:	pop    rbx
   14001e4e6:	ret    
   14001e4e7:	int3   
   14001e4e8:	rex push rbx
   14001e4ea:	sub    rsp,0x40
   14001e4ee:	cmp    DWORD PTR [rip+0x294ff],0x0        # 0x1400479f4
   14001e4f5:	movsxd rbx,ecx
   14001e4f8:	jne    0x14001e50a
   14001e4fa:	mov    rax,QWORD PTR [rip+0x27bf7]        # 0x1400460f8
   14001e501:	movzx  eax,WORD PTR [rax+rbx*2]
   14001e505:	and    eax,0x10
   14001e508:	jmp    0x14001e55c
   14001e50a:	lea    rcx,[rsp+0x20]
   14001e50f:	xor    edx,edx
   14001e511:	call   0x140007ff0
   14001e516:	mov    rax,QWORD PTR [rsp+0x20]
   14001e51b:	cmp    DWORD PTR [rax+0xd4],0x1
   14001e522:	jle    0x14001e539
   14001e524:	lea    r8,[rsp+0x20]
   14001e529:	mov    edx,0x10
   14001e52e:	mov    ecx,ebx
   14001e530:	call   0x14002c4c4
   14001e535:	mov    ecx,eax
   14001e537:	jmp    0x14001e547
   14001e539:	mov    rax,QWORD PTR [rax+0x108]
   14001e540:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001e544:	and    ecx,0x10
   14001e547:	cmp    BYTE PTR [rsp+0x38],0x0
   14001e54c:	je     0x14001e55a
   14001e54e:	mov    rax,QWORD PTR [rsp+0x30]
   14001e553:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001e55a:	mov    eax,ecx
   14001e55c:	add    rsp,0x40
   14001e560:	pop    rbx
   14001e561:	ret    
   14001e562:	int3   
   14001e563:	int3   
   14001e564:	rex push rbx
   14001e566:	sub    rsp,0x40
   14001e56a:	cmp    DWORD PTR [rip+0x29483],0x0        # 0x1400479f4
   14001e571:	movsxd rbx,ecx
   14001e574:	jne    0x14001e586
   14001e576:	mov    rax,QWORD PTR [rip+0x27b7b]        # 0x1400460f8
   14001e57d:	movzx  eax,WORD PTR [rax+rbx*2]
   14001e581:	and    eax,0x8
   14001e584:	jmp    0x14001e5d8
   14001e586:	lea    rcx,[rsp+0x20]
   14001e58b:	xor    edx,edx
   14001e58d:	call   0x140007ff0
   14001e592:	mov    rax,QWORD PTR [rsp+0x20]
   14001e597:	cmp    DWORD PTR [rax+0xd4],0x1
   14001e59e:	jle    0x14001e5b5
   14001e5a0:	lea    r8,[rsp+0x20]
   14001e5a5:	mov    edx,0x8
   14001e5aa:	mov    ecx,ebx
   14001e5ac:	call   0x14002c4c4
   14001e5b1:	mov    ecx,eax
   14001e5b3:	jmp    0x14001e5c3
   14001e5b5:	mov    rax,QWORD PTR [rax+0x108]
   14001e5bc:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001e5c0:	and    ecx,0x8
   14001e5c3:	cmp    BYTE PTR [rsp+0x38],0x0
   14001e5c8:	je     0x14001e5d6
   14001e5ca:	mov    rax,QWORD PTR [rsp+0x30]
   14001e5cf:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001e5d6:	mov    eax,ecx
   14001e5d8:	add    rsp,0x40
   14001e5dc:	pop    rbx
   14001e5dd:	ret    
   14001e5de:	int3   
   14001e5df:	int3   
   14001e5e0:	rex push rbx
   14001e5e2:	sub    rsp,0x40
   14001e5e6:	cmp    DWORD PTR [rip+0x29407],0x0        # 0x1400479f4
   14001e5ed:	movsxd rbx,ecx
   14001e5f0:	jne    0x14001e602
   14001e5f2:	mov    rax,QWORD PTR [rip+0x27aff]        # 0x1400460f8
   14001e5f9:	movzx  eax,WORD PTR [rax+rbx*2]
   14001e5fd:	and    eax,0x1
   14001e600:	jmp    0x14001e654
   14001e602:	lea    rcx,[rsp+0x20]
   14001e607:	xor    edx,edx
   14001e609:	call   0x140007ff0
   14001e60e:	mov    rax,QWORD PTR [rsp+0x20]
   14001e613:	cmp    DWORD PTR [rax+0xd4],0x1
   14001e61a:	jle    0x14001e631
   14001e61c:	lea    r8,[rsp+0x20]
   14001e621:	mov    edx,0x1
   14001e626:	mov    ecx,ebx
   14001e628:	call   0x14002c4c4
   14001e62d:	mov    ecx,eax
   14001e62f:	jmp    0x14001e63f
   14001e631:	mov    rax,QWORD PTR [rax+0x108]
   14001e638:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001e63c:	and    ecx,0x1
   14001e63f:	cmp    BYTE PTR [rsp+0x38],0x0
   14001e644:	je     0x14001e652
   14001e646:	mov    rax,QWORD PTR [rsp+0x30]
   14001e64b:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001e652:	mov    eax,ecx
   14001e654:	add    rsp,0x40
   14001e658:	pop    rbx
   14001e659:	ret    
   14001e65a:	int3   
   14001e65b:	int3   
   14001e65c:	rex push rbx
   14001e65e:	sub    rsp,0x40
   14001e662:	cmp    DWORD PTR [rip+0x2938b],0x0        # 0x1400479f4
   14001e669:	movsxd rbx,ecx
   14001e66c:	jne    0x14001e680
   14001e66e:	mov    rax,QWORD PTR [rip+0x27a83]        # 0x1400460f8
   14001e675:	movzx  eax,WORD PTR [rax+rbx*2]
   14001e679:	and    eax,0x80
   14001e67e:	jmp    0x14001e6d5
   14001e680:	lea    rcx,[rsp+0x20]
   14001e685:	xor    edx,edx
   14001e687:	call   0x140007ff0
   14001e68c:	mov    rax,QWORD PTR [rsp+0x20]
   14001e691:	cmp    DWORD PTR [rax+0xd4],0x1
   14001e698:	jle    0x14001e6af
   14001e69a:	lea    r8,[rsp+0x20]
   14001e69f:	mov    edx,0x80
   14001e6a4:	mov    ecx,ebx
   14001e6a6:	call   0x14002c4c4
   14001e6ab:	mov    ecx,eax
   14001e6ad:	jmp    0x14001e6c0
   14001e6af:	mov    rax,QWORD PTR [rax+0x108]
   14001e6b6:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001e6ba:	and    ecx,0x80
   14001e6c0:	cmp    BYTE PTR [rsp+0x38],0x0
   14001e6c5:	je     0x14001e6d3
   14001e6c7:	mov    rax,QWORD PTR [rsp+0x30]
   14001e6cc:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001e6d3:	mov    eax,ecx
   14001e6d5:	add    rsp,0x40
   14001e6d9:	pop    rbx
   14001e6da:	ret    
   14001e6db:	int3   
   14001e6dc:	xor    r9d,r9d
   14001e6df:	mov    rax,rcx
   14001e6e2:	mov    r8,rdx
   14001e6e5:	test   rdx,rdx
   14001e6e8:	je     0x14001e70e
   14001e6ea:	cmp    WORD PTR [rax],r9w
   14001e6ee:	je     0x14001e6f9
   14001e6f0:	add    rax,0x2
   14001e6f4:	dec    r8
   14001e6f7:	jne    0x14001e6ea
   14001e6f9:	test   r8,r8
   14001e6fc:	je     0x14001e70e
   14001e6fe:	cmp    WORD PTR [rax],r9w
   14001e702:	jne    0x14001e70e
   14001e704:	sub    rax,rcx
   14001e707:	sar    rax,1
   14001e70a:	inc    rax
   14001e70d:	ret    
   14001e70e:	mov    rax,rdx
   14001e711:	ret    
   14001e712:	int3   
   14001e713:	int3   
   14001e714:	jmp    0x14001e71c
   14001e719:	int3   
   14001e71a:	int3   
   14001e71b:	int3   
   14001e71c:	mov    QWORD PTR [rsp+0x20],rbx
   14001e721:	push   rbp
   14001e722:	push   rsi
   14001e723:	push   rdi
   14001e724:	push   r12
   14001e726:	push   r13
   14001e728:	push   r14
   14001e72a:	push   r15
   14001e72c:	mov    rbp,rsp
   14001e72f:	sub    rsp,0x80
   14001e736:	mov    rax,QWORD PTR [rip+0x26b33]        # 0x140045270
   14001e73d:	xor    rax,rsp
   14001e740:	mov    QWORD PTR [rbp-0x10],rax
   14001e744:	xor    r12d,r12d
   14001e747:	mov    rsi,r8
   14001e74a:	mov    r14,rdx
   14001e74d:	mov    r15,rcx
   14001e750:	mov    ebx,r12d
   14001e753:	mov    DWORD PTR [rbp-0x40],r12d
   14001e757:	test   rcx,rcx
   14001e75a:	je     0x14001e768
   14001e75c:	test   r8,r8
   14001e75f:	jne    0x14001e768
   14001e761:	xor    eax,eax
   14001e763:	jmp    0x14001ea23
   14001e768:	test   rdx,rdx
   14001e76b:	jne    0x14001e786
   14001e76d:	call   0x14000b9f0
   14001e772:	mov    DWORD PTR [rax],0x16
   14001e778:	call   0x14000b8b8
   14001e77d:	or     rax,0xffffffffffffffff
   14001e781:	jmp    0x14001ea23
   14001e786:	lea    rcx,[rbp-0x38]
   14001e78a:	mov    rdx,r9
   14001e78d:	call   0x140007ff0
   14001e792:	test   r15,r15
   14001e795:	je     0x14001e97c
   14001e79b:	mov    r13,QWORD PTR [rbp-0x38]
   14001e79f:	cmp    QWORD PTR [r13+0x138],r12
   14001e7a6:	jne    0x14001e7ef
   14001e7a8:	test   rsi,rsi
   14001e7ab:	je     0x14001ea0c
   14001e7b1:	mov    ecx,0xff
   14001e7b6:	cmp    WORD PTR [r14],cx
   14001e7ba:	ja     0x14001e7e1
   14001e7bc:	mov    al,BYTE PTR [r14]
   14001e7bf:	mov    BYTE PTR [r15+rbx*1],al
   14001e7c3:	movzx  eax,WORD PTR [r14]
   14001e7c7:	add    r14,0x2
   14001e7cb:	test   ax,ax
   14001e7ce:	je     0x14001ea0c
   14001e7d4:	inc    rbx
   14001e7d7:	cmp    rbx,rsi
   14001e7da:	jb     0x14001e7b6
   14001e7dc:	jmp    0x14001ea0c
   14001e7e1:	call   0x14000b9f0
   14001e7e6:	or     rbx,0xffffffffffffffff
   14001e7ea:	jmp    0x14001ea06
   14001e7ef:	cmp    DWORD PTR [r13+0xd4],0x1
   14001e7f7:	jne    0x14001e873
   14001e7f9:	test   rsi,rsi
   14001e7fc:	je     0x14001e82a
   14001e7fe:	mov    rax,r14
   14001e801:	mov    rcx,rsi
   14001e804:	cmp    WORD PTR [rax],r12w
   14001e808:	je     0x14001e813
   14001e80a:	add    rax,0x2
   14001e80e:	dec    rcx
   14001e811:	jne    0x14001e804
   14001e813:	test   rcx,rcx
   14001e816:	je     0x14001e82a
   14001e818:	cmp    WORD PTR [rax],r12w
   14001e81c:	jne    0x14001e82a
   14001e81e:	mov    rsi,rax
   14001e821:	sub    rsi,r14
   14001e824:	sar    rsi,1
   14001e827:	inc    rsi
   14001e82a:	mov    ecx,DWORD PTR [r13+0x4]
   14001e82e:	lea    rax,[rbp-0x40]
   14001e832:	mov    r9d,esi
   14001e835:	mov    QWORD PTR [rsp+0x38],rax
   14001e83a:	mov    QWORD PTR [rsp+0x30],r12
   14001e83f:	mov    r8,r14
   14001e842:	xor    edx,edx
   14001e844:	mov    DWORD PTR [rsp+0x28],esi
   14001e848:	mov    QWORD PTR [rsp+0x20],r15
   14001e84d:	call   QWORD PTR [rip+0x1687d]        # 0x1400350d0
   14001e853:	movsxd rbx,eax
   14001e856:	test   eax,eax
   14001e858:	je     0x14001e7e1
   14001e85a:	cmp    DWORD PTR [rbp-0x40],r12d
   14001e85e:	jne    0x14001e7e1
   14001e860:	cmp    BYTE PTR [r15+rbx*1-0x1],r12b
   14001e865:	jne    0x14001ea0c
   14001e86b:	dec    rbx
   14001e86e:	jmp    0x14001ea0c
   14001e873:	mov    ecx,DWORD PTR [r13+0x4]
   14001e877:	lea    rax,[rbp-0x40]
   14001e87b:	or     rbx,0xffffffffffffffff
   14001e87f:	mov    QWORD PTR [rsp+0x38],rax
   14001e884:	mov    QWORD PTR [rsp+0x30],r12
   14001e889:	mov    r9d,ebx
   14001e88c:	mov    r8,r14
   14001e88f:	xor    edx,edx
   14001e891:	mov    DWORD PTR [rsp+0x28],esi
   14001e895:	mov    QWORD PTR [rsp+0x20],r15
   14001e89a:	call   QWORD PTR [rip+0x16830]        # 0x1400350d0
   14001e8a0:	movsxd rdi,eax
   14001e8a3:	test   eax,eax
   14001e8a5:	je     0x14001e8ba
   14001e8a7:	cmp    DWORD PTR [rbp-0x40],r12d
   14001e8ab:	jne    0x14001ea01
   14001e8b1:	lea    rbx,[rdi-0x1]
   14001e8b5:	jmp    0x14001ea0c
   14001e8ba:	cmp    DWORD PTR [rbp-0x40],r12d
   14001e8be:	jne    0x14001ea01
   14001e8c4:	call   QWORD PTR [rip+0x1691e]        # 0x1400351e8
   14001e8ca:	cmp    eax,0x7a
   14001e8cd:	jne    0x14001ea01
   14001e8d3:	test   rsi,rsi
   14001e8d6:	je     0x14001ea0f
   14001e8dc:	mov    ecx,DWORD PTR [r13+0x4]
   14001e8e0:	lea    rax,[rbp-0x40]
   14001e8e4:	mov    r9d,0x1
   14001e8ea:	mov    QWORD PTR [rsp+0x38],rax
   14001e8ef:	mov    eax,DWORD PTR [r13+0xd4]
   14001e8f6:	mov    QWORD PTR [rsp+0x30],r12
   14001e8fb:	mov    DWORD PTR [rsp+0x28],eax
   14001e8ff:	lea    rax,[rbp-0x18]
   14001e903:	mov    r8,r14
   14001e906:	xor    edx,edx
   14001e908:	mov    QWORD PTR [rsp+0x20],rax
   14001e90d:	call   QWORD PTR [rip+0x167bd]        # 0x1400350d0
   14001e913:	test   eax,eax
   14001e915:	je     0x14001ea01
   14001e91b:	cmp    DWORD PTR [rbp-0x40],r12d
   14001e91f:	jne    0x14001ea01
   14001e925:	test   eax,eax
   14001e927:	js     0x14001ea01
   14001e92d:	movsxd rdx,eax
   14001e930:	cmp    rdx,0x5
   14001e934:	ja     0x14001ea01
   14001e93a:	lea    rax,[rdx+rdi*1]
   14001e93e:	cmp    rax,rsi
   14001e941:	ja     0x14001ea0f
   14001e947:	mov    rcx,r12
   14001e94a:	test   rdx,rdx
   14001e94d:	jle    0x14001e96a
   14001e94f:	mov    al,BYTE PTR [rbp+rcx*1-0x18]
   14001e953:	mov    BYTE PTR [r15+rdi*1],al
   14001e957:	test   al,al
   14001e959:	je     0x14001ea0f
   14001e95f:	inc    rcx
   14001e962:	inc    rdi
   14001e965:	cmp    rcx,rdx
   14001e968:	jl     0x14001e94f
   14001e96a:	add    r14,0x2
   14001e96e:	cmp    rdi,rsi
   14001e971:	jae    0x14001ea0f
   14001e977:	jmp    0x14001e8dc
   14001e97c:	mov    rax,QWORD PTR [rbp-0x38]
   14001e980:	cmp    QWORD PTR [rax+0x138],r12
   14001e987:	jne    0x14001e9c2
   14001e989:	movzx  eax,WORD PTR [r14]
   14001e98d:	mov    rdi,r12
   14001e990:	test   ax,ax
   14001e993:	je     0x14001ea0f
   14001e995:	mov    ecx,0xff
   14001e99a:	cmp    ax,cx
   14001e99d:	ja     0x14001e9b1
   14001e99f:	add    r14,0x2
   14001e9a3:	inc    rdi
   14001e9a6:	movzx  eax,WORD PTR [r14]
   14001e9aa:	test   ax,ax
   14001e9ad:	jne    0x14001e99a
   14001e9af:	jmp    0x14001ea0f
   14001e9b1:	call   0x14000b9f0
   14001e9b6:	or     rdi,0xffffffffffffffff
   14001e9ba:	mov    DWORD PTR [rax],0x2a
   14001e9c0:	jmp    0x14001ea0f
   14001e9c2:	lea    rcx,[rbp-0x40]
   14001e9c6:	or     rbx,0xffffffffffffffff
   14001e9ca:	mov    r8,r14
   14001e9cd:	mov    QWORD PTR [rsp+0x38],rcx
   14001e9d2:	mov    ecx,DWORD PTR [rax+0x4]
   14001e9d5:	mov    QWORD PTR [rsp+0x30],r12
   14001e9da:	mov    r9d,ebx
   14001e9dd:	xor    edx,edx
   14001e9df:	mov    DWORD PTR [rsp+0x28],r12d
   14001e9e4:	mov    QWORD PTR [rsp+0x20],r12
   14001e9e9:	call   QWORD PTR [rip+0x166e1]        # 0x1400350d0
   14001e9ef:	movsxd rdi,eax
   14001e9f2:	test   eax,eax
   14001e9f4:	je     0x14001ea01
   14001e9f6:	cmp    DWORD PTR [rbp-0x40],r12d
   14001e9fa:	jne    0x14001ea01
   14001e9fc:	dec    rdi
   14001e9ff:	jmp    0x14001ea0f
   14001ea01:	call   0x14000b9f0
   14001ea06:	mov    DWORD PTR [rax],0x2a
   14001ea0c:	mov    rdi,rbx
   14001ea0f:	cmp    BYTE PTR [rbp-0x20],r12b
   14001ea13:	je     0x14001ea20
   14001ea15:	mov    rcx,QWORD PTR [rbp-0x28]
   14001ea19:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001ea20:	mov    rax,rdi
   14001ea23:	mov    rcx,QWORD PTR [rbp-0x10]
   14001ea27:	xor    rcx,rsp
   14001ea2a:	call   0x1400097d0
   14001ea2f:	mov    rbx,QWORD PTR [rsp+0xd8]
   14001ea37:	add    rsp,0x80
   14001ea3e:	pop    r15
   14001ea40:	pop    r14
   14001ea42:	pop    r13
   14001ea44:	pop    r12
   14001ea46:	pop    rdi
   14001ea47:	pop    rsi
   14001ea48:	pop    rbp
   14001ea49:	ret    
   14001ea4a:	int3   
   14001ea4b:	int3   
   14001ea4c:	mov    QWORD PTR [rsp+0x8],rbx
   14001ea51:	mov    QWORD PTR [rsp+0x10],rsi
   14001ea56:	mov    QWORD PTR [rsp+0x18],rdi
   14001ea5b:	push   r14
   14001ea5d:	sub    rsp,0x20
   14001ea61:	xor    r14d,r14d
   14001ea64:	mov    rax,r9
   14001ea67:	mov    rdi,r8
   14001ea6a:	mov    rbx,rdx
   14001ea6d:	mov    rsi,rcx
   14001ea70:	test   rdx,rdx
   14001ea73:	je     0x14001eac6
   14001ea75:	test   r8,r8
   14001ea78:	je     0x14001eacb
   14001ea7a:	test   rdx,rdx
   14001ea7d:	je     0x14001ea82
   14001ea7f:	mov    BYTE PTR [rdx],r14b
   14001ea82:	test   rcx,rcx
   14001ea85:	je     0x14001ea8a
   14001ea87:	and    QWORD PTR [rcx],r14
   14001ea8a:	mov    r8,QWORD PTR [rsp+0x50]
   14001ea8f:	cmp    r8,rdi
   14001ea92:	cmova  r8,rdi
   14001ea96:	cmp    r8,0x7fffffff
   14001ea9d:	ja     0x14001eacb
   14001ea9f:	mov    r9,QWORD PTR [rsp+0x58]
   14001eaa4:	mov    rdx,rax
   14001eaa7:	mov    rcx,rbx
   14001eaaa:	call   0x14001e71c
   14001eaaf:	cmp    rax,0xffffffffffffffff
   14001eab3:	jne    0x14001eae0
   14001eab5:	test   rbx,rbx
   14001eab8:	je     0x14001eabd
   14001eaba:	mov    BYTE PTR [rbx],r14b
   14001eabd:	call   0x14000b9f0
   14001eac2:	mov    eax,DWORD PTR [rax]
   14001eac4:	jmp    0x14001eb22
   14001eac6:	test   r8,r8
   14001eac9:	je     0x14001ea7a
   14001eacb:	call   0x14000b9f0
   14001ead0:	mov    ebx,0x16
   14001ead5:	mov    DWORD PTR [rax],ebx
   14001ead7:	call   0x14000b8b8
   14001eadc:	mov    eax,ebx
   14001eade:	jmp    0x14001eb22
   14001eae0:	inc    rax
   14001eae3:	test   rbx,rbx
   14001eae6:	je     0x14001eb17
   14001eae8:	cmp    rax,rdi
   14001eaeb:	jbe    0x14001eb12
   14001eaed:	cmp    QWORD PTR [rsp+0x50],0xffffffffffffffff
   14001eaf3:	je     0x14001eb09
   14001eaf5:	mov    BYTE PTR [rbx],r14b
   14001eaf8:	cmp    rdi,rax
   14001eafb:	ja     0x14001eb09
   14001eafd:	call   0x14000b9f0
   14001eb02:	mov    ebx,0x22
   14001eb07:	jmp    0x14001ead5
   14001eb09:	mov    rax,rdi
   14001eb0c:	mov    r14d,0x50
   14001eb12:	mov    BYTE PTR [rax+rbx*1-0x1],0x0
   14001eb17:	test   rsi,rsi
   14001eb1a:	je     0x14001eb1f
   14001eb1c:	mov    QWORD PTR [rsi],rax
   14001eb1f:	mov    eax,r14d
   14001eb22:	mov    rbx,QWORD PTR [rsp+0x30]
   14001eb27:	mov    rsi,QWORD PTR [rsp+0x38]
   14001eb2c:	mov    rdi,QWORD PTR [rsp+0x40]
   14001eb31:	add    rsp,0x20
   14001eb35:	pop    r14
   14001eb37:	ret    
   14001eb38:	xor    r9d,r9d
   14001eb3b:	jmp    0x14001e71c
   14001eb40:	sub    rsp,0x38
   14001eb44:	mov    rax,QWORD PTR [rsp+0x60]
   14001eb49:	and    QWORD PTR [rsp+0x28],0x0
   14001eb4f:	mov    QWORD PTR [rsp+0x20],rax
   14001eb54:	call   0x14001ea4c
   14001eb59:	add    rsp,0x38
   14001eb5d:	ret    
   14001eb5e:	int3   
   14001eb5f:	int3   
   14001eb60:	rex push rbp
   14001eb62:	push   r12
   14001eb64:	push   r13
   14001eb66:	push   r14
   14001eb68:	push   r15
   14001eb6a:	sub    rsp,0x50
   14001eb6e:	lea    rbp,[rsp+0x40]
   14001eb73:	mov    QWORD PTR [rbp+0x40],rbx
   14001eb77:	mov    QWORD PTR [rbp+0x48],rsi
   14001eb7b:	mov    QWORD PTR [rbp+0x50],rdi
   14001eb7f:	mov    rax,QWORD PTR [rip+0x266ea]        # 0x140045270
   14001eb86:	xor    rax,rbp
   14001eb89:	mov    QWORD PTR [rbp+0x0],rax
   14001eb8d:	mov    rax,QWORD PTR [rcx]
   14001eb90:	mov    r15d,r8d
   14001eb93:	mov    r12,rdx
   14001eb96:	mov    r14d,DWORD PTR [rax+0x4]
   14001eb9a:	mov    r13,r9
   14001eb9d:	xor    r8d,r8d
   14001eba0:	xor    r9d,r9d
   14001eba3:	mov    edx,r15d
   14001eba6:	mov    rcx,r12
   14001eba9:	xor    edi,edi
   14001ebab:	call   0x14001f084
   14001ebb0:	movsxd rsi,eax
   14001ebb3:	test   eax,eax
   14001ebb5:	jne    0x14001ebbe
   14001ebb7:	xor    eax,eax
   14001ebb9:	jmp    0x14001eca4
   14001ebbe:	jle    0x14001ec37
   14001ebc0:	xor    edx,edx
   14001ebc2:	lea    rax,[rdx-0x20]
   14001ebc6:	div    rsi
   14001ebc9:	cmp    rax,0x2
   14001ebcd:	jb     0x14001ec37
   14001ebcf:	lea    rcx,[rsi+rsi*1]
   14001ebd3:	lea    rax,[rcx+0x10]
   14001ebd7:	cmp    rax,rcx
   14001ebda:	jbe    0x14001ec37
   14001ebdc:	lea    rcx,[rsi*2+0x10]
   14001ebe4:	cmp    rcx,0x400
   14001ebeb:	ja     0x14001ec1e
   14001ebed:	lea    rax,[rcx+0xf]
   14001ebf1:	cmp    rax,rcx
   14001ebf4:	ja     0x14001ec00
   14001ebf6:	movabs rax,0xffffffffffffff0
   14001ec00:	and    rax,0xfffffffffffffff0
   14001ec04:	call   0x140009b80
   14001ec09:	sub    rsp,rax
   14001ec0c:	lea    rbx,[rsp+0x40]
   14001ec11:	test   rbx,rbx
   14001ec14:	je     0x14001ebb7
   14001ec16:	mov    DWORD PTR [rbx],0xcccc
   14001ec1c:	jmp    0x14001ec31
   14001ec1e:	call   0x14000f5a8
   14001ec23:	mov    rbx,rax
   14001ec26:	test   rax,rax
   14001ec29:	je     0x14001ec3a
   14001ec2b:	mov    DWORD PTR [rax],0xdddd
   14001ec31:	add    rbx,0x10
   14001ec35:	jmp    0x14001ec3a
   14001ec37:	mov    rbx,rdi
   14001ec3a:	test   rbx,rbx
   14001ec3d:	je     0x14001ebb7
   14001ec43:	mov    r9d,esi
   14001ec46:	mov    r8,rbx
   14001ec49:	mov    edx,r15d
   14001ec4c:	mov    rcx,r12
   14001ec4f:	call   0x14001f084
   14001ec54:	test   eax,eax
   14001ec56:	je     0x14001ec91
   14001ec58:	mov    eax,DWORD PTR [rbp+0x60]
   14001ec5b:	or     r9d,0xffffffff
   14001ec5f:	xor    edx,edx
   14001ec61:	mov    QWORD PTR [rsp+0x38],rdi
   14001ec66:	mov    r8,rbx
   14001ec69:	mov    ecx,r14d
   14001ec6c:	mov    QWORD PTR [rsp+0x30],rdi
   14001ec71:	test   eax,eax
   14001ec73:	jne    0x14001ec80
   14001ec75:	mov    DWORD PTR [rsp+0x28],edi
   14001ec79:	mov    QWORD PTR [rsp+0x20],rdi
   14001ec7e:	jmp    0x14001ec89
   14001ec80:	mov    DWORD PTR [rsp+0x28],eax
   14001ec84:	mov    QWORD PTR [rsp+0x20],r13
   14001ec89:	call   QWORD PTR [rip+0x16441]        # 0x1400350d0
   14001ec8f:	mov    edi,eax
   14001ec91:	lea    rcx,[rbx-0x10]
   14001ec95:	cmp    DWORD PTR [rcx],0xdddd
   14001ec9b:	jne    0x14001eca2
   14001ec9d:	call   0x14000fb50
   14001eca2:	mov    eax,edi
   14001eca4:	mov    rcx,QWORD PTR [rbp+0x0]
   14001eca8:	xor    rcx,rbp
   14001ecab:	call   0x1400097d0
   14001ecb0:	mov    rbx,QWORD PTR [rbp+0x40]
   14001ecb4:	mov    rsi,QWORD PTR [rbp+0x48]
   14001ecb8:	mov    rdi,QWORD PTR [rbp+0x50]
   14001ecbc:	lea    rsp,[rbp+0x10]
   14001ecc0:	pop    r15
   14001ecc2:	pop    r14
   14001ecc4:	pop    r13
   14001ecc6:	pop    r12
   14001ecc8:	pop    rbp
   14001ecc9:	ret    
   14001ecca:	int3   
   14001eccb:	int3   
   14001eccc:	xor    eax,eax
   14001ecce:	lea    rdx,[rcx+0x10]
   14001ecd2:	cmp    rdx,rcx
   14001ecd5:	seta   al
   14001ecd8:	ret    
   14001ecd9:	int3   
   14001ecda:	int3   
   14001ecdb:	int3   
   14001ecdc:	test   rcx,rcx
   14001ecdf:	je     0x14001ece7
   14001ece1:	mov    DWORD PTR [rcx],edx
   14001ece3:	add    rcx,0x10
   14001ece7:	mov    rax,rcx
   14001ecea:	ret    
   14001eceb:	int3   
   14001ecec:	mov    QWORD PTR [rsp+0x8],rbx
   14001ecf1:	mov    QWORD PTR [rsp+0x10],rsi
   14001ecf6:	push   rdi
   14001ecf7:	sub    rsp,0x50
   14001ecfb:	mov    rsi,rdx
   14001ecfe:	mov    rdx,rcx
   14001ed01:	lea    rcx,[rsp+0x30]
   14001ed06:	mov    rbx,r9
   14001ed09:	mov    edi,r8d
   14001ed0c:	call   0x140007ff0
   14001ed11:	mov    eax,DWORD PTR [rsp+0x80]
   14001ed18:	lea    rcx,[rsp+0x30]
   14001ed1d:	mov    r9,rbx
   14001ed20:	mov    r8d,edi
   14001ed23:	mov    rdx,rsi
   14001ed26:	mov    DWORD PTR [rsp+0x20],eax
   14001ed2a:	call   0x14001eb60
   14001ed2f:	cmp    BYTE PTR [rsp+0x48],0x0
   14001ed34:	je     0x14001ed42
   14001ed36:	mov    rcx,QWORD PTR [rsp+0x40]
   14001ed3b:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001ed42:	mov    rbx,QWORD PTR [rsp+0x60]
   14001ed47:	mov    rsi,QWORD PTR [rsp+0x68]
   14001ed4c:	add    rsp,0x50
   14001ed50:	pop    rdi
   14001ed51:	ret    
   14001ed52:	int3   
   14001ed53:	int3   
   14001ed54:	sub    rsp,0x28
   14001ed58:	test   rcx,rcx
   14001ed5b:	je     0x14001ed6e
   14001ed5d:	sub    rcx,0x10
   14001ed61:	cmp    DWORD PTR [rcx],0xdddd
   14001ed67:	jne    0x14001ed6e
   14001ed69:	call   0x14000fb50
   14001ed6e:	add    rsp,0x28
   14001ed72:	ret    
   14001ed73:	int3   
   14001ed74:	mov    r10d,ecx
   14001ed77:	xor    r8d,r8d
   14001ed7a:	mov    r9d,0xe3
   14001ed80:	lea    eax,[r9+r8*1]
   14001ed84:	lea    r11,[rip+0x1ab45]        # 0x1400398d0
   14001ed8b:	mov    ecx,r10d
   14001ed8e:	cdq    
   14001ed8f:	sub    eax,edx
   14001ed91:	sar    eax,1
   14001ed93:	movsxd rdx,eax
   14001ed96:	shl    rdx,0x4
   14001ed9a:	sub    ecx,DWORD PTR [rdx+r11*1]
   14001ed9e:	je     0x14001edb6
   14001eda0:	test   ecx,ecx
   14001eda2:	jns    0x14001edaa
   14001eda4:	lea    r9d,[rax-0x1]
   14001eda8:	jmp    0x14001edae
   14001edaa:	lea    r8d,[rax+0x1]
   14001edae:	cmp    r8d,r9d
   14001edb1:	jle    0x14001ed80
   14001edb3:	or     eax,0xffffffff
   14001edb6:	ret    
   14001edb7:	int3   
   14001edb8:	mov    rax,rsp
   14001edbb:	mov    QWORD PTR [rax+0x8],rbx
   14001edbf:	mov    QWORD PTR [rax+0x10],rbp
   14001edc3:	mov    QWORD PTR [rax+0x18],rsi
   14001edc7:	mov    QWORD PTR [rax+0x20],rdi
   14001edcb:	push   r14
   14001edcd:	sub    rsp,0x20
   14001edd1:	mov    rbp,rcx
   14001edd4:	xor    edi,edi
   14001edd6:	mov    esi,0xe3
   14001eddb:	lea    r14,[rip+0x1b92e]        # 0x14003a710
   14001ede2:	lea    eax,[rsi+rdi*1]
   14001ede5:	mov    r8d,0x55
   14001edeb:	mov    rcx,rbp
   14001edee:	cdq    
   14001edef:	sub    eax,edx
   14001edf1:	sar    eax,1
   14001edf3:	movsxd rbx,eax
   14001edf6:	mov    rdx,rbx
   14001edf9:	add    rdx,rdx
   14001edfc:	mov    rdx,QWORD PTR [r14+rdx*8]
   14001ee00:	call   0x14001f254
   14001ee05:	test   eax,eax
   14001ee07:	je     0x14001ee1c
   14001ee09:	jns    0x14001ee10
   14001ee0b:	lea    esi,[rbx-0x1]
   14001ee0e:	jmp    0x14001ee13
   14001ee10:	lea    edi,[rbx+0x1]
   14001ee13:	cmp    edi,esi
   14001ee15:	jle    0x14001ede2
   14001ee17:	or     eax,0xffffffff
   14001ee1a:	jmp    0x14001ee27
   14001ee1c:	mov    rax,rbx
   14001ee1f:	add    rax,rax
   14001ee22:	mov    eax,DWORD PTR [r14+rax*8+0x8]
   14001ee27:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ee2c:	mov    rbp,QWORD PTR [rsp+0x38]
   14001ee31:	mov    rsi,QWORD PTR [rsp+0x40]
   14001ee36:	mov    rdi,QWORD PTR [rsp+0x48]
   14001ee3b:	add    rsp,0x20
   14001ee3f:	pop    r14
   14001ee41:	ret    
   14001ee42:	int3   
   14001ee43:	int3   
   14001ee44:	mov    r11,rsp
   14001ee47:	mov    QWORD PTR [r11+0x8],rbx
   14001ee4b:	mov    QWORD PTR [r11+0x10],rsi
   14001ee4f:	push   rdi
   14001ee50:	sub    rsp,0x50
   14001ee54:	mov    r10,QWORD PTR [rip+0x29fcd]        # 0x140048e28
   14001ee5b:	mov    ebx,r9d
   14001ee5e:	mov    rdi,r8
   14001ee61:	xor    r10,QWORD PTR [rip+0x26408]        # 0x140045270
   14001ee68:	mov    esi,edx
   14001ee6a:	je     0x14001ee96
   14001ee6c:	xor    eax,eax
   14001ee6e:	mov    QWORD PTR [r11-0x18],rax
   14001ee72:	mov    QWORD PTR [r11-0x20],rax
   14001ee76:	mov    QWORD PTR [r11-0x28],rax
   14001ee7a:	mov    eax,DWORD PTR [rsp+0x88]
   14001ee81:	mov    DWORD PTR [rsp+0x28],eax
   14001ee85:	mov    rax,QWORD PTR [rsp+0x80]
   14001ee8d:	mov    QWORD PTR [r11-0x38],rax
   14001ee91:	call   r10
   14001ee94:	jmp    0x14001eec3
   14001ee96:	call   0x14001ef84
   14001ee9b:	mov    r9d,ebx
   14001ee9e:	mov    r8,rdi
   14001eea1:	mov    ecx,eax
   14001eea3:	mov    eax,DWORD PTR [rsp+0x88]
   14001eeaa:	mov    edx,esi
   14001eeac:	mov    DWORD PTR [rsp+0x28],eax
   14001eeb0:	mov    rax,QWORD PTR [rsp+0x80]
   14001eeb8:	mov    QWORD PTR [rsp+0x20],rax
   14001eebd:	call   QWORD PTR [rip+0x162dd]        # 0x1400351a0
   14001eec3:	mov    rbx,QWORD PTR [rsp+0x60]
   14001eec8:	mov    rsi,QWORD PTR [rsp+0x68]
   14001eecd:	add    rsp,0x50
   14001eed1:	pop    rdi
   14001eed2:	ret    
   14001eed3:	int3   
   14001eed4:	mov    QWORD PTR [rsp+0x8],rbx
   14001eed9:	mov    QWORD PTR [rsp+0x10],rbp
   14001eede:	mov    QWORD PTR [rsp+0x18],rsi
   14001eee3:	push   rdi
   14001eee4:	sub    rsp,0x30
   14001eee8:	movsxd rbx,r8d
   14001eeeb:	mov    rsi,rdx
   14001eeee:	test   ecx,0xfffff3ff
   14001eef4:	jne    0x14001eefe
   14001eef6:	cmp    ecx,0xc00
   14001eefc:	jne    0x14001ef0d
   14001eefe:	test   rdx,rdx
   14001ef01:	jne    0x14001ef08
   14001ef03:	test   r8d,r8d
   14001ef06:	jg     0x14001ef0d
   14001ef08:	test   r8d,r8d
   14001ef0b:	jns    0x14001ef11
   14001ef0d:	xor    eax,eax
   14001ef0f:	jmp    0x14001ef58
   14001ef11:	call   0x14001ed74
   14001ef16:	test   eax,eax
   14001ef18:	js     0x14001ef0d
   14001ef1a:	cdqe   
   14001ef1c:	lea    rbp,[rip+0x1a9b5]        # 0x1400398d8
   14001ef23:	mov    edx,0x55
   14001ef28:	add    rax,rax
   14001ef2b:	mov    rbp,QWORD PTR [rbp+rax*8+0x0]
   14001ef30:	mov    rcx,rbp
   14001ef33:	call   0x140021484
   14001ef38:	mov    rdi,rax
   14001ef3b:	test   ebx,ebx
   14001ef3d:	jle    0x14001ef55
   14001ef3f:	cmp    eax,ebx
   14001ef41:	jge    0x14001ef0d
   14001ef43:	mov    rdx,rbx
   14001ef46:	mov    r8,rbp
   14001ef49:	mov    rcx,rsi
   14001ef4c:	call   0x14000781c
   14001ef51:	test   eax,eax
   14001ef53:	jne    0x14001ef6d
   14001ef55:	lea    eax,[rdi+0x1]
   14001ef58:	mov    rbx,QWORD PTR [rsp+0x40]
   14001ef5d:	mov    rbp,QWORD PTR [rsp+0x48]
   14001ef62:	mov    rsi,QWORD PTR [rsp+0x50]
   14001ef67:	add    rsp,0x30
   14001ef6b:	pop    rdi
   14001ef6c:	ret    
   14001ef6d:	and    QWORD PTR [rsp+0x20],0x0
   14001ef73:	xor    r9d,r9d
   14001ef76:	xor    r8d,r8d
   14001ef79:	xor    edx,edx
   14001ef7b:	xor    ecx,ecx
   14001ef7d:	call   0x14000b908
   14001ef82:	int3   
   14001ef83:	int3   
   14001ef84:	sub    rsp,0x28
   14001ef88:	test   rcx,rcx
   14001ef8b:	je     0x14001efaf
   14001ef8d:	call   0x14001edb8
   14001ef92:	test   eax,eax
   14001ef94:	js     0x14001efaf
   14001ef96:	cdqe   
   14001ef98:	cmp    rax,0xe4
   14001ef9e:	jae    0x14001efaf
   14001efa0:	lea    rcx,[rip+0x1a929]        # 0x1400398d0
   14001efa7:	add    rax,rax
   14001efaa:	mov    eax,DWORD PTR [rcx+rax*8]
   14001efad:	jmp    0x14001efb1
   14001efaf:	xor    eax,eax
   14001efb1:	add    rsp,0x28
   14001efb5:	ret    
   14001efb6:	int3   
   14001efb7:	int3   
   14001efb8:	xor    r8d,r8d
   14001efbb:	xor    edx,edx
   14001efbd:	rex.W jmp QWORD PTR [rip+0x29c8c]        # 0x140048c50
   14001efc4:	sub    rsp,0x28
   14001efc8:	mov    rax,QWORD PTR [rip+0x29e61]        # 0x140048e30
   14001efcf:	xor    rax,QWORD PTR [rip+0x2629a]        # 0x140045270
   14001efd6:	je     0x14001efe2
   14001efd8:	xor    r9d,r9d
   14001efdb:	add    rsp,0x28
   14001efdf:	rex.W jmp rax
   14001efe2:	mov    QWORD PTR [rip+0x29c67],rcx        # 0x140048c50
   14001efe9:	lea    rcx,[rip+0xffffffffffffffc8]        # 0x14001efb8
   14001eff0:	mov    edx,0x1
   14001eff5:	call   QWORD PTR [rip+0x1617d]        # 0x140035178
   14001effb:	and    QWORD PTR [rip+0x29c4d],0x0        # 0x140048c50
   14001f003:	add    rsp,0x28
   14001f007:	ret    
   14001f008:	mov    r11,rsp
   14001f00b:	mov    QWORD PTR [r11+0x8],rbx
   14001f00f:	mov    QWORD PTR [r11+0x10],rsi
   14001f013:	push   rdi
   14001f014:	sub    rsp,0x40
   14001f018:	mov    r10,QWORD PTR [rip+0x29e19]        # 0x140048e38
   14001f01f:	mov    rbx,r9
   14001f022:	mov    rdi,r8
   14001f025:	xor    r10,QWORD PTR [rip+0x26244]        # 0x140045270
   14001f02c:	mov    esi,edx
   14001f02e:	je     0x14001f04b
   14001f030:	and    QWORD PTR [r11-0x18],0x0
   14001f035:	mov    eax,DWORD PTR [rsp+0x78]
   14001f039:	mov    DWORD PTR [rsp+0x28],eax
   14001f03d:	mov    rax,QWORD PTR [rsp+0x70]
   14001f042:	mov    QWORD PTR [r11-0x28],rax
   14001f046:	call   r10
   14001f049:	jmp    0x14001f072
   14001f04b:	call   0x14001ef84
   14001f050:	mov    r9,rbx
   14001f053:	mov    r8,rdi
   14001f056:	mov    ecx,eax
   14001f058:	mov    eax,DWORD PTR [rsp+0x78]
   14001f05c:	mov    edx,esi
   14001f05e:	mov    DWORD PTR [rsp+0x28],eax
   14001f062:	mov    rax,QWORD PTR [rsp+0x70]
   14001f067:	mov    QWORD PTR [rsp+0x20],rax
   14001f06c:	call   QWORD PTR [rip+0x16366]        # 0x1400353d8
   14001f072:	mov    rbx,QWORD PTR [rsp+0x50]
   14001f077:	mov    rsi,QWORD PTR [rsp+0x58]
   14001f07c:	add    rsp,0x40
   14001f080:	pop    rdi
   14001f081:	ret    
   14001f082:	int3   
   14001f083:	int3   
   14001f084:	mov    QWORD PTR [rsp+0x8],rbx
   14001f089:	mov    QWORD PTR [rsp+0x10],rsi
   14001f08e:	push   rdi
   14001f08f:	sub    rsp,0x20
   14001f093:	mov    rax,QWORD PTR [rip+0x29da6]        # 0x140048e40
   14001f09a:	mov    ebx,r9d
   14001f09d:	mov    rdi,r8
   14001f0a0:	xor    rax,QWORD PTR [rip+0x261c9]        # 0x140045270
   14001f0a7:	mov    esi,edx
   14001f0a9:	je     0x14001f0af
   14001f0ab:	call   rax
   14001f0ad:	jmp    0x14001f0c4
   14001f0af:	call   0x14001ef84
   14001f0b4:	mov    r9d,ebx
   14001f0b7:	mov    r8,rdi
   14001f0ba:	mov    ecx,eax
   14001f0bc:	mov    edx,esi
   14001f0be:	call   QWORD PTR [rip+0x160cc]        # 0x140035190
   14001f0c4:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f0c9:	mov    rsi,QWORD PTR [rsp+0x38]
   14001f0ce:	add    rsp,0x20
   14001f0d2:	pop    rdi
   14001f0d3:	ret    
   14001f0d4:	mov    QWORD PTR [rsp+0x8],rbx
   14001f0d9:	mov    QWORD PTR [rsp+0x10],rsi
   14001f0de:	push   rdi
   14001f0df:	sub    rsp,0x30
   14001f0e3:	mov    r10,QWORD PTR [rip+0x29d5e]        # 0x140048e48
   14001f0ea:	mov    rbx,r9
   14001f0ed:	mov    rdi,r8
   14001f0f0:	xor    r10,QWORD PTR [rip+0x26179]        # 0x140045270
   14001f0f7:	mov    esi,edx
   14001f0f9:	je     0x14001f112
   14001f0fb:	mov    eax,DWORD PTR [rsp+0x68]
   14001f0ff:	mov    DWORD PTR [rsp+0x28],eax
   14001f103:	mov    rax,QWORD PTR [rsp+0x60]
   14001f108:	mov    QWORD PTR [rsp+0x20],rax
   14001f10d:	call   r10
   14001f110:	jmp    0x14001f139
   14001f112:	call   0x14001ef84
   14001f117:	mov    r9,rbx
   14001f11a:	mov    r8,rdi
   14001f11d:	mov    ecx,eax
   14001f11f:	mov    eax,DWORD PTR [rsp+0x68]
   14001f123:	mov    edx,esi
   14001f125:	mov    DWORD PTR [rsp+0x28],eax
   14001f129:	mov    rax,QWORD PTR [rsp+0x60]
   14001f12e:	mov    QWORD PTR [rsp+0x20],rax
   14001f133:	call   QWORD PTR [rip+0x1606f]        # 0x1400351a8
   14001f139:	mov    rbx,QWORD PTR [rsp+0x40]
   14001f13e:	mov    rsi,QWORD PTR [rsp+0x48]
   14001f143:	add    rsp,0x30
   14001f147:	pop    rdi
   14001f148:	ret    
   14001f149:	int3   
   14001f14a:	int3   
   14001f14b:	int3   
   14001f14c:	mov    QWORD PTR [rsp+0x8],rbx
   14001f151:	push   rdi
   14001f152:	sub    rsp,0x20
   14001f156:	mov    rax,QWORD PTR [rip+0x29cf3]        # 0x140048e50
   14001f15d:	mov    ebx,edx
   14001f15f:	mov    rdi,rcx
   14001f162:	xor    rax,QWORD PTR [rip+0x26107]        # 0x140045270
   14001f169:	je     0x14001f16f
   14001f16b:	call   rax
   14001f16d:	jmp    0x14001f182
   14001f16f:	call   QWORD PTR [rip+0x1600b]        # 0x140035180
   14001f175:	mov    r8d,ebx
   14001f178:	mov    rdx,rdi
   14001f17b:	mov    ecx,eax
   14001f17d:	call   0x14001eed4
   14001f182:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f187:	add    rsp,0x20
   14001f18b:	pop    rdi
   14001f18c:	ret    
   14001f18d:	int3   
   14001f18e:	int3   
   14001f18f:	int3   
   14001f190:	sub    rsp,0x28
   14001f194:	mov    rax,QWORD PTR [rip+0x29cbd]        # 0x140048e58
   14001f19b:	xor    rax,QWORD PTR [rip+0x260ce]        # 0x140045270
   14001f1a2:	je     0x14001f1ab
   14001f1a4:	add    rsp,0x28
   14001f1a8:	rex.W jmp rax
   14001f1ab:	call   0x14001ef84
   14001f1b0:	mov    edx,0x1
   14001f1b5:	mov    ecx,eax
   14001f1b7:	add    rsp,0x28
   14001f1bb:	rex.W jmp QWORD PTR [rip+0x15fc6]        # 0x140035188
   14001f1c2:	int3   
   14001f1c3:	int3   
   14001f1c4:	mov    r11,rsp
   14001f1c7:	mov    QWORD PTR [r11+0x8],rbx
   14001f1cb:	mov    QWORD PTR [r11+0x10],rsi
   14001f1cf:	push   rdi
   14001f1d0:	sub    rsp,0x50
   14001f1d4:	mov    r10,QWORD PTR [rip+0x29c85]        # 0x140048e60
   14001f1db:	mov    ebx,r9d
   14001f1de:	mov    rdi,r8
   14001f1e1:	xor    r10,QWORD PTR [rip+0x26088]        # 0x140045270
   14001f1e8:	mov    esi,edx
   14001f1ea:	je     0x14001f216
   14001f1ec:	xor    eax,eax
   14001f1ee:	mov    QWORD PTR [r11-0x18],rax
   14001f1f2:	mov    QWORD PTR [r11-0x20],rax
   14001f1f6:	mov    QWORD PTR [r11-0x28],rax
   14001f1fa:	mov    eax,DWORD PTR [rsp+0x88]
   14001f201:	mov    DWORD PTR [rsp+0x28],eax
   14001f205:	mov    rax,QWORD PTR [rsp+0x80]
   14001f20d:	mov    QWORD PTR [r11-0x38],rax
   14001f211:	call   r10
   14001f214:	jmp    0x14001f243
   14001f216:	call   0x14001ef84
   14001f21b:	mov    r9d,ebx
   14001f21e:	mov    r8,rdi
   14001f221:	mov    ecx,eax
   14001f223:	mov    eax,DWORD PTR [rsp+0x88]
   14001f22a:	mov    edx,esi
   14001f22c:	mov    DWORD PTR [rsp+0x28],eax
   14001f230:	mov    rax,QWORD PTR [rsp+0x80]
   14001f238:	mov    QWORD PTR [rsp+0x20],rax
   14001f23d:	call   QWORD PTR [rip+0x15f55]        # 0x140035198
   14001f243:	mov    rbx,QWORD PTR [rsp+0x60]
   14001f248:	mov    rsi,QWORD PTR [rsp+0x68]
   14001f24d:	add    rsp,0x50
   14001f251:	pop    rdi
   14001f252:	ret    
   14001f253:	int3   
   14001f254:	xor    r9d,r9d
   14001f257:	mov    r10,rdx
   14001f25a:	mov    r11,rcx
   14001f25d:	test   r8,r8
   14001f260:	je     0x14001f2a5
   14001f262:	sub    r11,rdx
   14001f265:	movzx  ecx,WORD PTR [r11+r10*1]
   14001f26a:	lea    eax,[rcx-0x41]
   14001f26d:	cmp    ax,0x19
   14001f271:	ja     0x14001f277
   14001f273:	add    cx,0x20
   14001f277:	movzx  edx,WORD PTR [r10]
   14001f27b:	lea    eax,[rdx-0x41]
   14001f27e:	cmp    ax,0x19
   14001f282:	ja     0x14001f288
   14001f284:	add    dx,0x20
   14001f288:	add    r10,0x2
   14001f28c:	dec    r8
   14001f28f:	je     0x14001f29b
   14001f291:	test   cx,cx
   14001f294:	je     0x14001f29b
   14001f296:	cmp    cx,dx
   14001f299:	je     0x14001f265
   14001f29b:	movzx  eax,dx
   14001f29e:	movzx  r9d,cx
   14001f2a2:	sub    r9d,eax
   14001f2a5:	mov    eax,r9d
   14001f2a8:	ret    
   14001f2a9:	int3   
   14001f2aa:	int3   
   14001f2ab:	int3   
   14001f2ac:	mov    QWORD PTR [rsp+0x8],rbx
   14001f2b1:	mov    QWORD PTR [rsp+0x10],rsi
   14001f2b6:	push   rdi
   14001f2b7:	sub    rsp,0x20
   14001f2bb:	mov    rbx,rdx
   14001f2be:	mov    rdi,rcx
   14001f2c1:	test   rcx,rcx
   14001f2c4:	jne    0x14001f2d0
   14001f2c6:	mov    rcx,rdx
   14001f2c9:	call   0x14000f5a8
   14001f2ce:	jmp    0x14001f33a
   14001f2d0:	test   rdx,rdx
   14001f2d3:	jne    0x14001f2dc
   14001f2d5:	call   0x14000fb50
   14001f2da:	jmp    0x14001f338
   14001f2dc:	cmp    rdx,0xffffffffffffffe0
   14001f2e0:	ja     0x14001f325
   14001f2e2:	mov    rcx,QWORD PTR [rip+0x2954f]        # 0x140048838
   14001f2e9:	mov    eax,0x1
   14001f2ee:	test   rbx,rbx
   14001f2f1:	cmove  rbx,rax
   14001f2f5:	mov    r8,rdi
   14001f2f8:	xor    edx,edx
   14001f2fa:	mov    r9,rbx
   14001f2fd:	call   QWORD PTR [rip+0x15e6d]        # 0x140035170
   14001f303:	mov    rsi,rax
   14001f306:	test   rax,rax
   14001f309:	jne    0x14001f37a
   14001f30b:	cmp    DWORD PTR [rip+0x29947],eax        # 0x140048c58
   14001f311:	je     0x14001f363
   14001f313:	mov    rcx,rbx
   14001f316:	call   0x14000fa4c
   14001f31b:	test   eax,eax
   14001f31d:	je     0x14001f34a
   14001f31f:	cmp    rbx,0xffffffffffffffe0
   14001f323:	jbe    0x14001f2e2
   14001f325:	mov    rcx,rbx
   14001f328:	call   0x14000fa4c
   14001f32d:	call   0x14000b9f0
   14001f332:	mov    DWORD PTR [rax],0xc
   14001f338:	xor    eax,eax
   14001f33a:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f33f:	mov    rsi,QWORD PTR [rsp+0x38]
   14001f344:	add    rsp,0x20
   14001f348:	pop    rdi
   14001f349:	ret    
   14001f34a:	call   0x14000b9f0
   14001f34f:	mov    rbx,rax
   14001f352:	call   QWORD PTR [rip+0x15e90]        # 0x1400351e8
   14001f358:	mov    ecx,eax
   14001f35a:	call   0x14000ba88
   14001f35f:	mov    DWORD PTR [rbx],eax
   14001f361:	jmp    0x14001f338
   14001f363:	call   0x14000b9f0
   14001f368:	mov    rbx,rax
   14001f36b:	call   QWORD PTR [rip+0x15e77]        # 0x1400351e8
   14001f371:	mov    ecx,eax
   14001f373:	call   0x14000ba88
   14001f378:	mov    DWORD PTR [rbx],eax
   14001f37a:	mov    rax,rsi
   14001f37d:	jmp    0x14001f33a
   14001f37f:	int3   
   14001f380:	mov    QWORD PTR [rsp+0x8],rbx
   14001f385:	mov    QWORD PTR [rsp+0x10],rsi
   14001f38a:	push   rdi
   14001f38b:	sub    rsp,0x20
   14001f38f:	xor    edi,edi
   14001f391:	mov    rbx,rdx
   14001f394:	mov    rsi,rcx
   14001f397:	test   rdx,rdx
   14001f39a:	je     0x14001f3b9
   14001f39c:	xor    edx,edx
   14001f39e:	lea    rax,[rdi-0x20]
   14001f3a2:	div    rbx
   14001f3a5:	cmp    rax,r8
   14001f3a8:	jae    0x14001f3b9
   14001f3aa:	call   0x14000b9f0
   14001f3af:	mov    DWORD PTR [rax],0xc
   14001f3b5:	xor    eax,eax
   14001f3b7:	jmp    0x14001f3f6
   14001f3b9:	imul   rbx,r8
   14001f3bd:	test   rcx,rcx
   14001f3c0:	je     0x14001f3ca
   14001f3c2:	call   0x14000fb90
   14001f3c7:	mov    rdi,rax
   14001f3ca:	mov    rdx,rbx
   14001f3cd:	mov    rcx,rsi
   14001f3d0:	call   0x14001f2ac
   14001f3d5:	mov    rsi,rax
   14001f3d8:	test   rax,rax
   14001f3db:	je     0x14001f3f3
   14001f3dd:	cmp    rdi,rbx
   14001f3e0:	jae    0x14001f3f3
   14001f3e2:	sub    rbx,rdi
   14001f3e5:	lea    rcx,[rdi+rax*1]
   14001f3e9:	xor    edx,edx
   14001f3eb:	mov    r8,rbx
   14001f3ee:	call   0x140009800
   14001f3f3:	mov    rax,rsi
   14001f3f6:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f3fb:	mov    rsi,QWORD PTR [rsp+0x38]
   14001f400:	add    rsp,0x20
   14001f404:	pop    rdi
   14001f405:	ret    
   14001f406:	int3   
   14001f407:	int3   
   14001f408:	mov    QWORD PTR [rsp+0x8],rbx
   14001f40d:	push   rdi
   14001f40e:	sub    rsp,0x20
   14001f412:	mov    rdi,r8
   14001f415:	mov    rbx,rdx
   14001f418:	test   rcx,rcx
   14001f41b:	je     0x14001f43a
   14001f41d:	xor    edx,edx
   14001f41f:	lea    rax,[rdx-0x20]
   14001f423:	div    rcx
   14001f426:	cmp    rax,rbx
   14001f429:	jae    0x14001f43a
   14001f42b:	call   0x14000b9f0
   14001f430:	mov    DWORD PTR [rax],0xc
   14001f436:	xor    eax,eax
   14001f438:	jmp    0x14001f497
   14001f43a:	imul   rbx,rcx
   14001f43e:	mov    eax,0x1
   14001f443:	test   rbx,rbx
   14001f446:	cmove  rbx,rax
   14001f44a:	xor    eax,eax
   14001f44c:	cmp    rbx,0xffffffffffffffe0
   14001f450:	ja     0x14001f46a
   14001f452:	mov    rcx,QWORD PTR [rip+0x293df]        # 0x140048838
   14001f459:	lea    edx,[rax+0x8]
   14001f45c:	mov    r8,rbx
   14001f45f:	call   QWORD PTR [rip+0x15e1b]        # 0x140035280
   14001f465:	test   rax,rax
   14001f468:	jne    0x14001f497
   14001f46a:	cmp    DWORD PTR [rip+0x297e7],0x0        # 0x140048c58
   14001f471:	je     0x14001f48c
   14001f473:	mov    rcx,rbx
   14001f476:	call   0x14000fa4c
   14001f47b:	test   eax,eax
   14001f47d:	jne    0x14001f44a
   14001f47f:	test   rdi,rdi
   14001f482:	je     0x14001f436
   14001f484:	mov    DWORD PTR [rdi],0xc
   14001f48a:	jmp    0x14001f436
   14001f48c:	test   rdi,rdi
   14001f48f:	je     0x14001f497
   14001f491:	mov    DWORD PTR [rdi],0xc
   14001f497:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f49c:	add    rsp,0x20
   14001f4a0:	pop    rdi
   14001f4a1:	ret    
   14001f4a2:	int3   
   14001f4a3:	int3   
   14001f4a4:	test   rcx,rcx
   14001f4a7:	je     0x14001f5ad
   14001f4ad:	push   rbx
   14001f4ae:	sub    rsp,0x20
   14001f4b2:	mov    rbx,rcx
   14001f4b5:	mov    rcx,QWORD PTR [rcx+0x18]
   14001f4b9:	cmp    rcx,QWORD PTR [rip+0x26fc8]        # 0x140046488
   14001f4c0:	je     0x14001f4c7
   14001f4c2:	call   0x14000fb50
   14001f4c7:	mov    rcx,QWORD PTR [rbx+0x20]
   14001f4cb:	cmp    rcx,QWORD PTR [rip+0x26fbe]        # 0x140046490
   14001f4d2:	je     0x14001f4d9
   14001f4d4:	call   0x14000fb50
   14001f4d9:	mov    rcx,QWORD PTR [rbx+0x28]
   14001f4dd:	cmp    rcx,QWORD PTR [rip+0x26fb4]        # 0x140046498
   14001f4e4:	je     0x14001f4eb
   14001f4e6:	call   0x14000fb50
   14001f4eb:	mov    rcx,QWORD PTR [rbx+0x30]
   14001f4ef:	cmp    rcx,QWORD PTR [rip+0x26faa]        # 0x1400464a0
   14001f4f6:	je     0x14001f4fd
   14001f4f8:	call   0x14000fb50
   14001f4fd:	mov    rcx,QWORD PTR [rbx+0x38]
   14001f501:	cmp    rcx,QWORD PTR [rip+0x26fa0]        # 0x1400464a8
   14001f508:	je     0x14001f50f
   14001f50a:	call   0x14000fb50
   14001f50f:	mov    rcx,QWORD PTR [rbx+0x40]
   14001f513:	cmp    rcx,QWORD PTR [rip+0x26f96]        # 0x1400464b0
   14001f51a:	je     0x14001f521
   14001f51c:	call   0x14000fb50
   14001f521:	mov    rcx,QWORD PTR [rbx+0x48]
   14001f525:	cmp    rcx,QWORD PTR [rip+0x26f8c]        # 0x1400464b8
   14001f52c:	je     0x14001f533
   14001f52e:	call   0x14000fb50
   14001f533:	mov    rcx,QWORD PTR [rbx+0x68]
   14001f537:	cmp    rcx,QWORD PTR [rip+0x26f9a]        # 0x1400464d8
   14001f53e:	je     0x14001f545
   14001f540:	call   0x14000fb50
   14001f545:	mov    rcx,QWORD PTR [rbx+0x70]
   14001f549:	cmp    rcx,QWORD PTR [rip+0x26f90]        # 0x1400464e0
   14001f550:	je     0x14001f557
   14001f552:	call   0x14000fb50
   14001f557:	mov    rcx,QWORD PTR [rbx+0x78]
   14001f55b:	cmp    rcx,QWORD PTR [rip+0x26f86]        # 0x1400464e8
   14001f562:	je     0x14001f569
   14001f564:	call   0x14000fb50
   14001f569:	mov    rcx,QWORD PTR [rbx+0x80]
   14001f570:	cmp    rcx,QWORD PTR [rip+0x26f79]        # 0x1400464f0
   14001f577:	je     0x14001f57e
   14001f579:	call   0x14000fb50
   14001f57e:	mov    rcx,QWORD PTR [rbx+0x88]
   14001f585:	cmp    rcx,QWORD PTR [rip+0x26f6c]        # 0x1400464f8
   14001f58c:	je     0x14001f593
   14001f58e:	call   0x14000fb50
   14001f593:	mov    rcx,QWORD PTR [rbx+0x90]
   14001f59a:	cmp    rcx,QWORD PTR [rip+0x26f5f]        # 0x140046500
   14001f5a1:	je     0x14001f5a8
   14001f5a3:	call   0x14000fb50
   14001f5a8:	add    rsp,0x20
   14001f5ac:	pop    rbx
   14001f5ad:	ret    
   14001f5ae:	int3   
   14001f5af:	int3   
   14001f5b0:	mov    QWORD PTR [rsp+0x8],rbx
   14001f5b5:	mov    QWORD PTR [rsp+0x10],rsi
   14001f5ba:	mov    QWORD PTR [rsp+0x18],rdi
   14001f5bf:	push   rbp
   14001f5c0:	push   r12
   14001f5c2:	push   r13
   14001f5c4:	push   r14
   14001f5c6:	push   r15
   14001f5c8:	mov    rbp,rsp
   14001f5cb:	sub    rsp,0x40
   14001f5cf:	xor    ebx,ebx
   14001f5d1:	mov    rsi,rcx
   14001f5d4:	mov    QWORD PTR [rbp-0x10],rcx
   14001f5d8:	mov    r15d,ebx
   14001f5db:	mov    QWORD PTR [rbp-0x8],rbx
   14001f5df:	cmp    QWORD PTR [rcx+0x140],rbx
   14001f5e6:	jne    0x14001f600
   14001f5e8:	cmp    QWORD PTR [rcx+0x148],rbx
   14001f5ef:	jne    0x14001f600
   14001f5f1:	mov    r12d,ebx
   14001f5f4:	lea    r14,[rip+0x26e75]        # 0x140046470
   14001f5fb:	jmp    0x14001fa43
   14001f600:	mov    edx,0x98
   14001f605:	mov    ecx,0x1
   14001f60a:	call   0x14000fbcc
   14001f60f:	mov    r14,rax
   14001f612:	test   rax,rax
   14001f615:	jne    0x14001f621
   14001f617:	mov    eax,0x1
   14001f61c:	jmp    0x14001fa92
   14001f621:	mov    edi,0x4
   14001f626:	mov    ecx,edi
   14001f628:	call   0x14000fc4c
   14001f62d:	mov    r12,rax
   14001f630:	test   rax,rax
   14001f633:	jne    0x14001f63f
   14001f635:	mov    rcx,r14
   14001f638:	call   0x14000fb50
   14001f63d:	jmp    0x14001f617
   14001f63f:	mov    DWORD PTR [rax],ebx
   14001f641:	cmp    QWORD PTR [rsi+0x140],rbx
   14001f648:	je     0x14001f980
   14001f64e:	mov    rcx,rdi
   14001f651:	call   0x14000fc4c
   14001f656:	mov    r15,rax
   14001f659:	test   rax,rax
   14001f65c:	jne    0x14001f66b
   14001f65e:	mov    rcx,r14
   14001f661:	call   0x14000fb50
   14001f666:	mov    rcx,r12
   14001f669:	jmp    0x14001f638
   14001f66b:	mov    DWORD PTR [rax],ebx
   14001f66d:	mov    rdi,QWORD PTR [rsi+0x140]
   14001f674:	mov    r9d,0x15
   14001f67a:	lea    rax,[r14+0x18]
   14001f67e:	lea    rcx,[rbp-0x10]
   14001f682:	lea    edx,[r9-0x14]
   14001f686:	mov    r8,rdi
   14001f689:	mov    QWORD PTR [rsp+0x20],rax
   14001f68e:	call   0x14000f334
   14001f693:	lea    rcx,[r14+0x20]
   14001f697:	mov    r9d,0x14
   14001f69d:	mov    QWORD PTR [rsp+0x20],rcx
   14001f6a2:	lea    edx,[r9-0x13]
   14001f6a6:	lea    rcx,[rbp-0x10]
   14001f6aa:	mov    r8,rdi
   14001f6ad:	mov    ebx,eax
   14001f6af:	call   0x14000f334
   14001f6b4:	lea    rcx,[r14+0x28]
   14001f6b8:	mov    r9d,0x16
   14001f6be:	mov    QWORD PTR [rsp+0x20],rcx
   14001f6c3:	lea    edx,[r9-0x15]
   14001f6c7:	lea    rcx,[rbp-0x10]
   14001f6cb:	mov    r8,rdi
   14001f6ce:	or     ebx,eax
   14001f6d0:	call   0x14000f334
   14001f6d5:	mov    r9d,0x17
   14001f6db:	lea    rcx,[rbp-0x10]
   14001f6df:	or     ebx,eax
   14001f6e1:	lea    rax,[r14+0x30]
   14001f6e5:	lea    edx,[r9-0x16]
   14001f6e9:	mov    r8,rdi
   14001f6ec:	mov    QWORD PTR [rsp+0x20],rax
   14001f6f1:	call   0x14000f334
   14001f6f6:	mov    r9d,0x18
   14001f6fc:	lea    r13,[r14+0x38]
   14001f700:	lea    rcx,[rbp-0x10]
   14001f704:	lea    edx,[r9-0x17]
   14001f708:	mov    r8,rdi
   14001f70b:	or     ebx,eax
   14001f70d:	mov    QWORD PTR [rsp+0x20],r13
   14001f712:	call   0x14000f334
   14001f717:	mov    r9d,0x50
   14001f71d:	or     ebx,eax
   14001f71f:	lea    rax,[r14+0x40]
   14001f723:	lea    rcx,[rbp-0x10]
   14001f727:	lea    edx,[r9-0x4f]
   14001f72b:	mov    r8,rdi
   14001f72e:	mov    QWORD PTR [rsp+0x20],rax
   14001f733:	call   0x14000f334
   14001f738:	mov    r9d,0x51
   14001f73e:	or     ebx,eax
   14001f740:	lea    rax,[r14+0x48]
   14001f744:	lea    rcx,[rbp-0x10]
   14001f748:	lea    edx,[r9-0x50]
   14001f74c:	mov    r8,rdi
   14001f74f:	mov    QWORD PTR [rsp+0x20],rax
   14001f754:	call   0x14000f334
   14001f759:	lea    rcx,[rbp-0x10]
   14001f75d:	mov    r9d,0x1a
   14001f763:	or     ebx,eax
   14001f765:	lea    rax,[r14+0x50]
   14001f769:	mov    r8,rdi
   14001f76c:	xor    edx,edx
   14001f76e:	mov    QWORD PTR [rsp+0x20],rax
   14001f773:	call   0x14000f334
   14001f778:	lea    rcx,[rbp-0x10]
   14001f77c:	mov    r9d,0x19
   14001f782:	or     ebx,eax
   14001f784:	lea    rax,[r14+0x51]
   14001f788:	mov    r8,rdi
   14001f78b:	xor    edx,edx
   14001f78d:	mov    QWORD PTR [rsp+0x20],rax
   14001f792:	call   0x14000f334
   14001f797:	lea    rcx,[rbp-0x10]
   14001f79b:	mov    r9d,0x54
   14001f7a1:	or     ebx,eax
   14001f7a3:	lea    rax,[r14+0x52]
   14001f7a7:	mov    r8,rdi
   14001f7aa:	xor    edx,edx
   14001f7ac:	mov    QWORD PTR [rsp+0x20],rax
   14001f7b1:	call   0x14000f334
   14001f7b6:	or     ebx,eax
   14001f7b8:	lea    rax,[r14+0x53]
   14001f7bc:	lea    rcx,[rbp-0x10]
   14001f7c0:	mov    r9d,0x55
   14001f7c6:	mov    r8,rdi
   14001f7c9:	xor    edx,edx
   14001f7cb:	mov    QWORD PTR [rsp+0x20],rax
   14001f7d0:	call   0x14000f334
   14001f7d5:	lea    rcx,[rbp-0x10]
   14001f7d9:	or     ebx,eax
   14001f7db:	lea    rax,[r14+0x54]
   14001f7df:	mov    r9d,0x56
   14001f7e5:	mov    r8,rdi
   14001f7e8:	xor    edx,edx
   14001f7ea:	mov    QWORD PTR [rsp+0x20],rax
   14001f7ef:	call   0x14000f334
   14001f7f4:	lea    rcx,[rbp-0x10]
   14001f7f8:	mov    r9d,0x57
   14001f7fe:	or     ebx,eax
   14001f800:	lea    rax,[r14+0x55]
   14001f804:	mov    r8,rdi
   14001f807:	xor    edx,edx
   14001f809:	mov    QWORD PTR [rsp+0x20],rax
   14001f80e:	call   0x14000f334
   14001f813:	lea    rcx,[rbp-0x10]
   14001f817:	mov    r9d,0x52
   14001f81d:	or     ebx,eax
   14001f81f:	lea    rax,[r14+0x56]
   14001f823:	mov    r8,rdi
   14001f826:	xor    edx,edx
   14001f828:	mov    QWORD PTR [rsp+0x20],rax
   14001f82d:	call   0x14000f334
   14001f832:	lea    rcx,[rbp-0x10]
   14001f836:	mov    r9d,0x53
   14001f83c:	or     ebx,eax
   14001f83e:	lea    rax,[r14+0x57]
   14001f842:	mov    r8,rdi
   14001f845:	xor    edx,edx
   14001f847:	mov    QWORD PTR [rsp+0x20],rax
   14001f84c:	call   0x14000f334
   14001f851:	mov    r9d,0x15
   14001f857:	lea    rcx,[rbp-0x10]
   14001f85b:	or     ebx,eax
   14001f85d:	lea    rax,[r14+0x68]
   14001f861:	lea    edx,[r9-0x13]
   14001f865:	mov    r8,rdi
   14001f868:	mov    QWORD PTR [rsp+0x20],rax
   14001f86d:	call   0x14000f334
   14001f872:	mov    r9d,0x14
   14001f878:	lea    rcx,[rbp-0x10]
   14001f87c:	or     ebx,eax
   14001f87e:	lea    rax,[r14+0x70]
   14001f882:	lea    edx,[r9-0x12]
   14001f886:	mov    r8,rdi
   14001f889:	mov    QWORD PTR [rsp+0x20],rax
   14001f88e:	call   0x14000f334
   14001f893:	mov    r9d,0x16
   14001f899:	lea    rcx,[rbp-0x10]
   14001f89d:	or     ebx,eax
   14001f89f:	lea    rax,[r14+0x78]
   14001f8a3:	lea    edx,[r9-0x14]
   14001f8a7:	mov    r8,rdi
   14001f8aa:	mov    QWORD PTR [rsp+0x20],rax
   14001f8af:	call   0x14000f334
   14001f8b4:	mov    r9d,0x17
   14001f8ba:	lea    rcx,[rbp-0x10]
   14001f8be:	or     ebx,eax
   14001f8c0:	lea    rax,[r14+0x80]
   14001f8c7:	lea    edx,[r9-0x15]
   14001f8cb:	mov    r8,rdi
   14001f8ce:	mov    QWORD PTR [rsp+0x20],rax
   14001f8d3:	call   0x14000f334
   14001f8d8:	mov    r9d,0x50
   14001f8de:	lea    rcx,[rbp-0x10]
   14001f8e2:	or     ebx,eax
   14001f8e4:	lea    rax,[r14+0x88]
   14001f8eb:	lea    edx,[r9-0x4e]
   14001f8ef:	mov    r8,rdi
   14001f8f2:	mov    QWORD PTR [rsp+0x20],rax
   14001f8f7:	call   0x14000f334
   14001f8fc:	or     ebx,eax
   14001f8fe:	mov    r9d,0x51
   14001f904:	lea    rax,[r14+0x90]
   14001f90b:	lea    rcx,[rbp-0x10]
   14001f90f:	lea    edx,[r9-0x4f]
   14001f913:	mov    r8,rdi
   14001f916:	mov    QWORD PTR [rsp+0x20],rax
   14001f91b:	call   0x14000f334
   14001f920:	or     eax,ebx
   14001f922:	je     0x14001f944
   14001f924:	mov    rcx,r14
   14001f927:	call   0x14001f4a4
   14001f92c:	mov    rcx,r14
   14001f92f:	call   0x14000fb50
   14001f934:	mov    rcx,r12
   14001f937:	call   0x14000fb50
   14001f93c:	mov    rcx,r15
   14001f93f:	jmp    0x14001f638
   14001f944:	mov    rdx,QWORD PTR [r13+0x0]
   14001f948:	xor    ebx,ebx
   14001f94a:	jmp    0x14001f95d
   14001f94c:	mov    cl,BYTE PTR [rdx]
   14001f94e:	lea    eax,[rcx-0x30]
   14001f951:	cmp    al,0x9
   14001f953:	ja     0x14001f966
   14001f955:	sub    cl,0x30
   14001f958:	mov    BYTE PTR [rdx],cl
   14001f95a:	inc    rdx
   14001f95d:	cmp    BYTE PTR [rdx],bl
   14001f95f:	jne    0x14001f94c
   14001f961:	jmp    0x14001f9e6
   14001f966:	cmp    cl,0x3b
   14001f969:	jne    0x14001f95a
   14001f96b:	mov    r8,rdx
   14001f96e:	lea    rcx,[r8+0x1]
   14001f972:	mov    al,BYTE PTR [rcx]
   14001f974:	mov    BYTE PTR [r8],al
   14001f977:	mov    r8,rcx
   14001f97a:	test   al,al
   14001f97c:	jne    0x14001f96e
   14001f97e:	jmp    0x14001f95d
   14001f980:	lea    rax,[rip+0x26ae9]        # 0x140046470
   14001f987:	mov    edx,0x80
   14001f98c:	movups xmm0,XMMWORD PTR [rax]
   14001f98f:	movups XMMWORD PTR [r14],xmm0
   14001f993:	movups xmm1,XMMWORD PTR [rax+0x10]
   14001f997:	movups XMMWORD PTR [r14+0x10],xmm1
   14001f99c:	movups xmm0,XMMWORD PTR [rax+0x20]
   14001f9a0:	movups XMMWORD PTR [r14+0x20],xmm0
   14001f9a5:	movups xmm1,XMMWORD PTR [rax+0x30]
   14001f9a9:	movups XMMWORD PTR [r14+0x30],xmm1
   14001f9ae:	movups xmm0,XMMWORD PTR [rax+0x40]
   14001f9b2:	movups XMMWORD PTR [r14+0x40],xmm0
   14001f9b7:	movups xmm1,XMMWORD PTR [rax+0x50]
   14001f9bb:	movups XMMWORD PTR [r14+0x50],xmm1
   14001f9c0:	movups xmm0,XMMWORD PTR [rax+0x60]
   14001f9c4:	movups XMMWORD PTR [r14+0x60],xmm0
   14001f9c9:	movups xmm0,XMMWORD PTR [rax+0x70]
   14001f9cd:	movups XMMWORD PTR [r14+rdx*1-0x10],xmm0
   14001f9d3:	movups xmm1,XMMWORD PTR [rax+rdx*1]
   14001f9d7:	movups XMMWORD PTR [r14+rdx*1],xmm1
   14001f9dc:	mov    rax,QWORD PTR [rax+rdx*1+0x10]
   14001f9e1:	mov    QWORD PTR [r14+rdx*1+0x10],rax
   14001f9e6:	mov    rax,QWORD PTR [rsi+0xf0]
   14001f9ed:	mov    rcx,QWORD PTR [rax]
   14001f9f0:	mov    QWORD PTR [r14],rcx
   14001f9f3:	mov    rax,QWORD PTR [rsi+0xf0]
   14001f9fa:	mov    rcx,QWORD PTR [rax+0x8]
   14001f9fe:	mov    QWORD PTR [r14+0x8],rcx
   14001fa02:	mov    rax,QWORD PTR [rsi+0xf0]
   14001fa09:	mov    rcx,QWORD PTR [rax+0x10]
   14001fa0d:	mov    QWORD PTR [r14+0x10],rcx
   14001fa11:	mov    rax,QWORD PTR [rsi+0xf0]
   14001fa18:	mov    rcx,QWORD PTR [rax+0x58]
   14001fa1c:	mov    QWORD PTR [r14+0x58],rcx
   14001fa20:	mov    rax,QWORD PTR [rsi+0xf0]
   14001fa27:	mov    rcx,QWORD PTR [rax+0x60]
   14001fa2b:	mov    QWORD PTR [r14+0x60],rcx
   14001fa2f:	mov    DWORD PTR [r12],0x1
   14001fa37:	test   r15,r15
   14001fa3a:	je     0x14001fa43
   14001fa3c:	mov    DWORD PTR [r15],0x1
   14001fa43:	mov    rax,QWORD PTR [rsi+0xe8]
   14001fa4a:	test   rax,rax
   14001fa4d:	je     0x14001fa52
   14001fa4f:	lock dec DWORD PTR [rax]
   14001fa52:	mov    rcx,QWORD PTR [rsi+0xd8]
   14001fa59:	test   rcx,rcx
   14001fa5c:	je     0x14001fa7b
   14001fa5e:	lock dec DWORD PTR [rcx]
   14001fa61:	jne    0x14001fa7b
   14001fa63:	mov    rcx,QWORD PTR [rsi+0xf0]
   14001fa6a:	call   0x14000fb50
   14001fa6f:	mov    rcx,QWORD PTR [rsi+0xd8]
   14001fa76:	call   0x14000fb50
   14001fa7b:	mov    QWORD PTR [rsi+0xe8],r15
   14001fa82:	mov    QWORD PTR [rsi+0xd8],r12
   14001fa89:	mov    QWORD PTR [rsi+0xf0],r14
   14001fa90:	xor    eax,eax
   14001fa92:	lea    r11,[rsp+0x40]
   14001fa97:	mov    rbx,QWORD PTR [r11+0x30]
   14001fa9b:	mov    rsi,QWORD PTR [r11+0x38]
   14001fa9f:	mov    rdi,QWORD PTR [r11+0x40]
   14001faa3:	mov    rsp,r11
   14001faa6:	pop    r15
   14001faa8:	pop    r14
   14001faaa:	pop    r13
   14001faac:	pop    r12
   14001faae:	pop    rbp
   14001faaf:	ret    
   14001fab0:	xor    r9d,r9d
   14001fab3:	mov    rdx,rcx
   14001fab6:	cmp    BYTE PTR [rcx],r9b
   14001fab9:	je     0x14001fad1
   14001fabb:	mov    cl,BYTE PTR [rdx]
   14001fabd:	lea    eax,[rcx-0x30]
   14001fac0:	cmp    al,0x9
   14001fac2:	ja     0x14001fad2
   14001fac4:	sub    cl,0x30
   14001fac7:	mov    BYTE PTR [rdx],cl
   14001fac9:	inc    rdx
   14001facc:	cmp    BYTE PTR [rdx],r9b
   14001facf:	jne    0x14001fabb
   14001fad1:	ret    
   14001fad2:	cmp    cl,0x3b
   14001fad5:	jne    0x14001fac9
   14001fad7:	mov    r8,rdx
   14001fada:	lea    rcx,[r8+0x1]
   14001fade:	mov    al,BYTE PTR [rcx]
   14001fae0:	mov    BYTE PTR [r8],al
   14001fae3:	mov    r8,rcx
   14001fae6:	test   al,al
   14001fae8:	jne    0x14001fada
   14001faea:	jmp    0x14001facc
   14001faec:	test   rcx,rcx
   14001faef:	je     0x14001fb57
   14001faf1:	push   rbx
   14001faf2:	sub    rsp,0x20
   14001faf6:	mov    rbx,rcx
   14001faf9:	mov    rcx,QWORD PTR [rcx]
   14001fafc:	cmp    rcx,QWORD PTR [rip+0x2696d]        # 0x140046470
   14001fb03:	je     0x14001fb0a
   14001fb05:	call   0x14000fb50
   14001fb0a:	mov    rcx,QWORD PTR [rbx+0x8]
   14001fb0e:	cmp    rcx,QWORD PTR [rip+0x26963]        # 0x140046478
   14001fb15:	je     0x14001fb1c
   14001fb17:	call   0x14000fb50
   14001fb1c:	mov    rcx,QWORD PTR [rbx+0x10]
   14001fb20:	cmp    rcx,QWORD PTR [rip+0x26959]        # 0x140046480
   14001fb27:	je     0x14001fb2e
   14001fb29:	call   0x14000fb50
   14001fb2e:	mov    rcx,QWORD PTR [rbx+0x58]
   14001fb32:	cmp    rcx,QWORD PTR [rip+0x2698f]        # 0x1400464c8
   14001fb39:	je     0x14001fb40
   14001fb3b:	call   0x14000fb50
   14001fb40:	mov    rcx,QWORD PTR [rbx+0x60]
   14001fb44:	cmp    rcx,QWORD PTR [rip+0x26985]        # 0x1400464d0
   14001fb4b:	je     0x14001fb52
   14001fb4d:	call   0x14000fb50
   14001fb52:	add    rsp,0x20
   14001fb56:	pop    rbx
   14001fb57:	ret    
   14001fb58:	mov    rax,rsp
   14001fb5b:	mov    QWORD PTR [rax+0x8],rbx
   14001fb5f:	mov    QWORD PTR [rax+0x10],rbp
   14001fb63:	mov    QWORD PTR [rax+0x18],rsi
   14001fb67:	push   rdi
   14001fb68:	push   r12
   14001fb6a:	push   r13
   14001fb6c:	push   r14
   14001fb6e:	push   r15
   14001fb70:	sub    rsp,0x40
   14001fb74:	xor    ebx,ebx
   14001fb76:	mov    rsi,rcx
   14001fb79:	mov    QWORD PTR [rax-0x38],rcx
   14001fb7d:	mov    QWORD PTR [rax-0x30],rbx
   14001fb81:	cmp    QWORD PTR [rcx+0x148],rbx
   14001fb88:	jne    0x14001fba5
   14001fb8a:	cmp    QWORD PTR [rcx+0x140],rbx
   14001fb91:	jne    0x14001fba5
   14001fb93:	mov    r15d,ebx
   14001fb96:	mov    r12d,ebx
   14001fb99:	lea    r14,[rip+0x268d0]        # 0x140046470
   14001fba0:	jmp    0x14001fdb1
   14001fba5:	mov    ebp,0x1
   14001fbaa:	mov    edx,0x98
   14001fbaf:	mov    ecx,ebp
   14001fbb1:	call   0x14000fbcc
   14001fbb6:	mov    r14,rax
   14001fbb9:	test   rax,rax
   14001fbbc:	jne    0x14001fbc5
   14001fbbe:	mov    eax,ebp
   14001fbc0:	jmp    0x14001fe00
   14001fbc5:	mov    rax,QWORD PTR [rsi+0xf0]
   14001fbcc:	mov    edx,0x80
   14001fbd1:	lea    edi,[rdx-0x7c]
   14001fbd4:	mov    ecx,edi
   14001fbd6:	movups xmm0,XMMWORD PTR [rax]
   14001fbd9:	movups XMMWORD PTR [r14],xmm0
   14001fbdd:	movups xmm1,XMMWORD PTR [rax+0x10]
   14001fbe1:	movups XMMWORD PTR [r14+0x10],xmm1
   14001fbe6:	movups xmm0,XMMWORD PTR [rax+0x20]
   14001fbea:	movups XMMWORD PTR [r14+0x20],xmm0
   14001fbef:	movups xmm1,XMMWORD PTR [rax+0x30]
   14001fbf3:	movups XMMWORD PTR [r14+0x30],xmm1
   14001fbf8:	movups xmm0,XMMWORD PTR [rax+0x40]
   14001fbfc:	movups XMMWORD PTR [r14+0x40],xmm0
   14001fc01:	movups xmm1,XMMWORD PTR [rax+0x50]
   14001fc05:	movups XMMWORD PTR [r14+0x50],xmm1
   14001fc0a:	movups xmm0,XMMWORD PTR [rax+0x60]
   14001fc0e:	movups XMMWORD PTR [r14+0x60],xmm0
   14001fc13:	movups xmm0,XMMWORD PTR [rax+0x70]
   14001fc17:	movups XMMWORD PTR [r14+rdx*1-0x10],xmm0
   14001fc1d:	movups xmm1,XMMWORD PTR [rax+rdx*1]
   14001fc21:	movups XMMWORD PTR [r14+rdx*1],xmm1
   14001fc26:	mov    rax,QWORD PTR [rax+rdx*1+0x10]
   14001fc2b:	mov    QWORD PTR [r14+rdx*1+0x10],rax
   14001fc30:	call   0x14000fc4c
   14001fc35:	mov    r12,rax
   14001fc38:	test   rax,rax
   14001fc3b:	jne    0x14001fc4a
   14001fc3d:	mov    rcx,r14
   14001fc40:	call   0x14000fb50
   14001fc45:	jmp    0x14001fbbe
   14001fc4a:	mov    DWORD PTR [rax],ebx
   14001fc4c:	cmp    QWORD PTR [rsi+0x148],rbx
   14001fc53:	je     0x14001fd6c
   14001fc59:	mov    rcx,rdi
   14001fc5c:	call   0x14000fc4c
   14001fc61:	mov    r15,rax
   14001fc64:	test   rax,rax
   14001fc67:	je     0x14001fd23
   14001fc6d:	mov    DWORD PTR [rax],ebx
   14001fc6f:	mov    rdi,QWORD PTR [rsi+0x148]
   14001fc76:	lea    rcx,[rsp+0x30]
   14001fc7b:	mov    r9d,0xe
   14001fc81:	mov    edx,ebp
   14001fc83:	mov    r8,rdi
   14001fc86:	mov    QWORD PTR [rsp+0x20],r14
   14001fc8b:	call   0x14000f334
   14001fc90:	lea    rcx,[r14+0x8]
   14001fc94:	mov    QWORD PTR [rsp+0x20],rcx
   14001fc99:	lea    rcx,[rsp+0x30]
   14001fc9e:	mov    r9d,0xf
   14001fca4:	mov    r8,rdi
   14001fca7:	mov    edx,ebp
   14001fca9:	mov    ebx,eax
   14001fcab:	call   0x14000f334
   14001fcb0:	lea    r13,[r14+0x10]
   14001fcb4:	lea    rcx,[rsp+0x30]
   14001fcb9:	mov    r9d,0x10
   14001fcbf:	mov    r8,rdi
   14001fcc2:	mov    edx,ebp
   14001fcc4:	or     ebx,eax
   14001fcc6:	mov    QWORD PTR [rsp+0x20],r13
   14001fccb:	call   0x14000f334
   14001fcd0:	mov    r9d,0xe
   14001fcd6:	or     ebx,eax
   14001fcd8:	lea    rax,[r14+0x58]
   14001fcdc:	lea    rcx,[rsp+0x30]
   14001fce1:	lea    edx,[r9-0xc]
   14001fce5:	mov    r8,rdi
   14001fce8:	mov    QWORD PTR [rsp+0x20],rax
   14001fced:	call   0x14000f334
   14001fcf2:	mov    r9d,0xf
   14001fcf8:	or     ebx,eax
   14001fcfa:	lea    rax,[r14+0x60]
   14001fcfe:	lea    rcx,[rsp+0x30]
   14001fd03:	lea    edx,[r9-0xd]
   14001fd07:	mov    r8,rdi
   14001fd0a:	mov    QWORD PTR [rsp+0x20],rax
   14001fd0f:	call   0x14000f334
   14001fd14:	or     eax,ebx
   14001fd16:	je     0x14001fd33
   14001fd18:	mov    rcx,r14
   14001fd1b:	call   0x14001faec
   14001fd20:	or     ebp,0xffffffff
   14001fd23:	mov    rcx,r14
   14001fd26:	call   0x14000fb50
   14001fd2b:	mov    rcx,r12
   14001fd2e:	jmp    0x14001fc40
   14001fd33:	mov    rdx,QWORD PTR [r13+0x0]
   14001fd37:	xor    ebx,ebx
   14001fd39:	jmp    0x14001fd4c
   14001fd3b:	mov    cl,BYTE PTR [rdx]
   14001fd3d:	lea    eax,[rcx-0x30]
   14001fd40:	cmp    al,0x9
   14001fd42:	ja     0x14001fd52
   14001fd44:	sub    cl,0x30
   14001fd47:	mov    BYTE PTR [rdx],cl
   14001fd49:	add    rdx,rbp
   14001fd4c:	cmp    BYTE PTR [rdx],bl
   14001fd4e:	jne    0x14001fd3b
   14001fd50:	jmp    0x14001fda5
   14001fd52:	cmp    cl,0x3b
   14001fd55:	jne    0x14001fd49
   14001fd57:	mov    r8,rdx
   14001fd5a:	lea    rcx,[r8+0x1]
   14001fd5e:	mov    al,BYTE PTR [rcx]
   14001fd60:	mov    BYTE PTR [r8],al
   14001fd63:	mov    r8,rcx
   14001fd66:	test   al,al
   14001fd68:	jne    0x14001fd5a
   14001fd6a:	jmp    0x14001fd4c
   14001fd6c:	mov    rax,QWORD PTR [rip+0x266fd]        # 0x140046470
   14001fd73:	mov    r15,rbx
   14001fd76:	mov    QWORD PTR [r14],rax
   14001fd79:	mov    rax,QWORD PTR [rip+0x266f8]        # 0x140046478
   14001fd80:	mov    QWORD PTR [r14+0x8],rax
   14001fd84:	mov    rax,QWORD PTR [rip+0x266f5]        # 0x140046480
   14001fd8b:	mov    QWORD PTR [r14+0x10],rax
   14001fd8f:	mov    rax,QWORD PTR [rip+0x26732]        # 0x1400464c8
   14001fd96:	mov    QWORD PTR [r14+0x58],rax
   14001fd9a:	mov    rax,QWORD PTR [rip+0x2672f]        # 0x1400464d0
   14001fda1:	mov    QWORD PTR [r14+0x60],rax
   14001fda5:	mov    DWORD PTR [r12],ebp
   14001fda9:	test   r15,r15
   14001fdac:	je     0x14001fdb1
   14001fdae:	mov    DWORD PTR [r15],ebp
   14001fdb1:	mov    rax,QWORD PTR [rsi+0xe0]
   14001fdb8:	test   rax,rax
   14001fdbb:	je     0x14001fdc0
   14001fdbd:	lock dec DWORD PTR [rax]
   14001fdc0:	mov    rcx,QWORD PTR [rsi+0xd8]
   14001fdc7:	test   rcx,rcx
   14001fdca:	je     0x14001fde9
   14001fdcc:	lock dec DWORD PTR [rcx]
   14001fdcf:	jne    0x14001fde9
   14001fdd1:	mov    rcx,QWORD PTR [rsi+0xd8]
   14001fdd8:	call   0x14000fb50
   14001fddd:	mov    rcx,QWORD PTR [rsi+0xf0]
   14001fde4:	call   0x14000fb50
   14001fde9:	mov    QWORD PTR [rsi+0xe0],r15
   14001fdf0:	mov    QWORD PTR [rsi+0xd8],r12
   14001fdf7:	mov    QWORD PTR [rsi+0xf0],r14
   14001fdfe:	xor    eax,eax
   14001fe00:	lea    r11,[rsp+0x40]
   14001fe05:	mov    rbx,QWORD PTR [r11+0x30]
   14001fe09:	mov    rbp,QWORD PTR [r11+0x38]
   14001fe0d:	mov    rsi,QWORD PTR [r11+0x40]
   14001fe11:	mov    rsp,r11
   14001fe14:	pop    r15
   14001fe16:	pop    r14
   14001fe18:	pop    r13
   14001fe1a:	pop    r12
   14001fe1c:	pop    rdi
   14001fe1d:	ret    
   14001fe1e:	int3   
   14001fe1f:	int3   
   14001fe20:	xor    r9d,r9d
   14001fe23:	mov    rdx,rcx
   14001fe26:	cmp    BYTE PTR [rcx],r9b
   14001fe29:	je     0x14001fe41
   14001fe2b:	mov    cl,BYTE PTR [rdx]
   14001fe2d:	lea    eax,[rcx-0x30]
   14001fe30:	cmp    al,0x9
   14001fe32:	ja     0x14001fe42
   14001fe34:	sub    cl,0x30
   14001fe37:	mov    BYTE PTR [rdx],cl
   14001fe39:	inc    rdx
   14001fe3c:	cmp    BYTE PTR [rdx],r9b
   14001fe3f:	jne    0x14001fe2b
   14001fe41:	ret    
   14001fe42:	cmp    cl,0x3b
   14001fe45:	jne    0x14001fe39
   14001fe47:	mov    r8,rdx
   14001fe4a:	lea    rcx,[r8+0x1]
   14001fe4e:	mov    al,BYTE PTR [rcx]
   14001fe50:	mov    BYTE PTR [r8],al
   14001fe53:	mov    r8,rcx
   14001fe56:	test   al,al
   14001fe58:	jne    0x14001fe4a
   14001fe5a:	jmp    0x14001fe3c
   14001fe5c:	test   rcx,rcx
   14001fe5f:	je     0x140020255
   14001fe65:	push   rbx
   14001fe66:	sub    rsp,0x20
   14001fe6a:	mov    rbx,rcx
   14001fe6d:	mov    rcx,QWORD PTR [rcx+0x8]
   14001fe71:	call   0x14000fb50
   14001fe76:	mov    rcx,QWORD PTR [rbx+0x10]
   14001fe7a:	call   0x14000fb50
   14001fe7f:	mov    rcx,QWORD PTR [rbx+0x18]
   14001fe83:	call   0x14000fb50
   14001fe88:	mov    rcx,QWORD PTR [rbx+0x20]
   14001fe8c:	call   0x14000fb50
   14001fe91:	mov    rcx,QWORD PTR [rbx+0x28]
   14001fe95:	call   0x14000fb50
   14001fe9a:	mov    rcx,QWORD PTR [rbx+0x30]
   14001fe9e:	call   0x14000fb50
   14001fea3:	mov    rcx,QWORD PTR [rbx]
   14001fea6:	call   0x14000fb50
   14001feab:	mov    rcx,QWORD PTR [rbx+0x40]
   14001feaf:	call   0x14000fb50
   14001feb4:	mov    rcx,QWORD PTR [rbx+0x48]
   14001feb8:	call   0x14000fb50
   14001febd:	mov    rcx,QWORD PTR [rbx+0x50]
   14001fec1:	call   0x14000fb50
   14001fec6:	mov    rcx,QWORD PTR [rbx+0x58]
   14001feca:	call   0x14000fb50
   14001fecf:	mov    rcx,QWORD PTR [rbx+0x60]
   14001fed3:	call   0x14000fb50
   14001fed8:	mov    rcx,QWORD PTR [rbx+0x68]
   14001fedc:	call   0x14000fb50
   14001fee1:	mov    rcx,QWORD PTR [rbx+0x38]
   14001fee5:	call   0x14000fb50
   14001feea:	mov    rcx,QWORD PTR [rbx+0x70]
   14001feee:	call   0x14000fb50
   14001fef3:	mov    rcx,QWORD PTR [rbx+0x78]
   14001fef7:	call   0x14000fb50
   14001fefc:	mov    rcx,QWORD PTR [rbx+0x80]
   14001ff03:	call   0x14000fb50
   14001ff08:	mov    rcx,QWORD PTR [rbx+0x88]
   14001ff0f:	call   0x14000fb50
   14001ff14:	mov    rcx,QWORD PTR [rbx+0x90]
   14001ff1b:	call   0x14000fb50
   14001ff20:	mov    rcx,QWORD PTR [rbx+0x98]
   14001ff27:	call   0x14000fb50
   14001ff2c:	mov    rcx,QWORD PTR [rbx+0xa0]
   14001ff33:	call   0x14000fb50
   14001ff38:	mov    rcx,QWORD PTR [rbx+0xa8]
   14001ff3f:	call   0x14000fb50
   14001ff44:	mov    rcx,QWORD PTR [rbx+0xb0]
   14001ff4b:	call   0x14000fb50
   14001ff50:	mov    rcx,QWORD PTR [rbx+0xb8]
   14001ff57:	call   0x14000fb50
   14001ff5c:	mov    rcx,QWORD PTR [rbx+0xc0]
   14001ff63:	call   0x14000fb50
   14001ff68:	mov    rcx,QWORD PTR [rbx+0xc8]
   14001ff6f:	call   0x14000fb50
   14001ff74:	mov    rcx,QWORD PTR [rbx+0xd0]
   14001ff7b:	call   0x14000fb50
   14001ff80:	mov    rcx,QWORD PTR [rbx+0xd8]
   14001ff87:	call   0x14000fb50
   14001ff8c:	mov    rcx,QWORD PTR [rbx+0xe0]
   14001ff93:	call   0x14000fb50
   14001ff98:	mov    rcx,QWORD PTR [rbx+0xe8]
   14001ff9f:	call   0x14000fb50
   14001ffa4:	mov    rcx,QWORD PTR [rbx+0xf0]
   14001ffab:	call   0x14000fb50
   14001ffb0:	mov    rcx,QWORD PTR [rbx+0xf8]
   14001ffb7:	call   0x14000fb50
   14001ffbc:	mov    rcx,QWORD PTR [rbx+0x100]
   14001ffc3:	call   0x14000fb50
   14001ffc8:	mov    rcx,QWORD PTR [rbx+0x108]
   14001ffcf:	call   0x14000fb50
   14001ffd4:	mov    rcx,QWORD PTR [rbx+0x110]
   14001ffdb:	call   0x14000fb50
   14001ffe0:	mov    rcx,QWORD PTR [rbx+0x118]
   14001ffe7:	call   0x14000fb50
   14001ffec:	mov    rcx,QWORD PTR [rbx+0x120]
   14001fff3:	call   0x14000fb50
   14001fff8:	mov    rcx,QWORD PTR [rbx+0x128]
   14001ffff:	call   0x14000fb50
   140020004:	mov    rcx,QWORD PTR [rbx+0x130]
   14002000b:	call   0x14000fb50
   140020010:	mov    rcx,QWORD PTR [rbx+0x138]
   140020017:	call   0x14000fb50
   14002001c:	mov    rcx,QWORD PTR [rbx+0x140]
   140020023:	call   0x14000fb50
   140020028:	mov    rcx,QWORD PTR [rbx+0x148]
   14002002f:	call   0x14000fb50
   140020034:	mov    rcx,QWORD PTR [rbx+0x150]
   14002003b:	call   0x14000fb50
   140020040:	mov    rcx,QWORD PTR [rbx+0x168]
   140020047:	call   0x14000fb50
   14002004c:	mov    rcx,QWORD PTR [rbx+0x170]
   140020053:	call   0x14000fb50
   140020058:	mov    rcx,QWORD PTR [rbx+0x178]
   14002005f:	call   0x14000fb50
   140020064:	mov    rcx,QWORD PTR [rbx+0x180]
   14002006b:	call   0x14000fb50
   140020070:	mov    rcx,QWORD PTR [rbx+0x188]
   140020077:	call   0x14000fb50
   14002007c:	mov    rcx,QWORD PTR [rbx+0x190]
   140020083:	call   0x14000fb50
   140020088:	mov    rcx,QWORD PTR [rbx+0x160]
   14002008f:	call   0x14000fb50
   140020094:	mov    rcx,QWORD PTR [rbx+0x1a0]
   14002009b:	call   0x14000fb50
   1400200a0:	mov    rcx,QWORD PTR [rbx+0x1a8]
   1400200a7:	call   0x14000fb50
   1400200ac:	mov    rcx,QWORD PTR [rbx+0x1b0]
   1400200b3:	call   0x14000fb50
   1400200b8:	mov    rcx,QWORD PTR [rbx+0x1b8]
   1400200bf:	call   0x14000fb50
   1400200c4:	mov    rcx,QWORD PTR [rbx+0x1c0]
   1400200cb:	call   0x14000fb50
   1400200d0:	mov    rcx,QWORD PTR [rbx+0x1c8]
   1400200d7:	call   0x14000fb50
   1400200dc:	mov    rcx,QWORD PTR [rbx+0x198]
   1400200e3:	call   0x14000fb50
   1400200e8:	mov    rcx,QWORD PTR [rbx+0x1d0]
   1400200ef:	call   0x14000fb50
   1400200f4:	mov    rcx,QWORD PTR [rbx+0x1d8]
   1400200fb:	call   0x14000fb50
   140020100:	mov    rcx,QWORD PTR [rbx+0x1e0]
   140020107:	call   0x14000fb50
   14002010c:	mov    rcx,QWORD PTR [rbx+0x1e8]
   140020113:	call   0x14000fb50
   140020118:	mov    rcx,QWORD PTR [rbx+0x1f0]
   14002011f:	call   0x14000fb50
   140020124:	mov    rcx,QWORD PTR [rbx+0x1f8]
   14002012b:	call   0x14000fb50
   140020130:	mov    rcx,QWORD PTR [rbx+0x200]
   140020137:	call   0x14000fb50
   14002013c:	mov    rcx,QWORD PTR [rbx+0x208]
   140020143:	call   0x14000fb50
   140020148:	mov    rcx,QWORD PTR [rbx+0x210]
   14002014f:	call   0x14000fb50
   140020154:	mov    rcx,QWORD PTR [rbx+0x218]
   14002015b:	call   0x14000fb50
   140020160:	mov    rcx,QWORD PTR [rbx+0x220]
   140020167:	call   0x14000fb50
   14002016c:	mov    rcx,QWORD PTR [rbx+0x228]
   140020173:	call   0x14000fb50
   140020178:	mov    rcx,QWORD PTR [rbx+0x230]
   14002017f:	call   0x14000fb50
   140020184:	mov    rcx,QWORD PTR [rbx+0x238]
   14002018b:	call   0x14000fb50
   140020190:	mov    rcx,QWORD PTR [rbx+0x240]
   140020197:	call   0x14000fb50
   14002019c:	mov    rcx,QWORD PTR [rbx+0x248]
   1400201a3:	call   0x14000fb50
   1400201a8:	mov    rcx,QWORD PTR [rbx+0x250]
   1400201af:	call   0x14000fb50
   1400201b4:	mov    rcx,QWORD PTR [rbx+0x258]
   1400201bb:	call   0x14000fb50
   1400201c0:	mov    rcx,QWORD PTR [rbx+0x260]
   1400201c7:	call   0x14000fb50
   1400201cc:	mov    rcx,QWORD PTR [rbx+0x268]
   1400201d3:	call   0x14000fb50
   1400201d8:	mov    rcx,QWORD PTR [rbx+0x270]
   1400201df:	call   0x14000fb50
   1400201e4:	mov    rcx,QWORD PTR [rbx+0x278]
   1400201eb:	call   0x14000fb50
   1400201f0:	mov    rcx,QWORD PTR [rbx+0x280]
   1400201f7:	call   0x14000fb50
   1400201fc:	mov    rcx,QWORD PTR [rbx+0x288]
   140020203:	call   0x14000fb50
   140020208:	mov    rcx,QWORD PTR [rbx+0x290]
   14002020f:	call   0x14000fb50
   140020214:	mov    rcx,QWORD PTR [rbx+0x298]
   14002021b:	call   0x14000fb50
   140020220:	mov    rcx,QWORD PTR [rbx+0x2a0]
   140020227:	call   0x14000fb50
   14002022c:	mov    rcx,QWORD PTR [rbx+0x2a8]
   140020233:	call   0x14000fb50
   140020238:	mov    rcx,QWORD PTR [rbx+0x2b0]
   14002023f:	call   0x14000fb50
   140020244:	mov    rcx,QWORD PTR [rbx+0x2b8]
   14002024b:	call   0x14000fb50
   140020250:	add    rsp,0x20
   140020254:	pop    rbx
   140020255:	ret    
   140020256:	int3   
   140020257:	int3   
   140020258:	mov    QWORD PTR [rsp+0x8],rbx
   14002025d:	mov    QWORD PTR [rsp+0x10],rbp
   140020262:	push   rdi
   140020263:	sub    rsp,0x20
   140020267:	cmp    QWORD PTR [rcx+0x150],0x0
   14002026f:	mov    rdi,rcx
   140020272:	lea    rbp,[rip+0x25aa7]        # 0x140045d20
   140020279:	je     0x1400202c6
   14002027b:	mov    edx,0x2c0
   140020280:	mov    ecx,0x1
   140020285:	call   0x14000fbcc
   14002028a:	mov    rbx,rax
   14002028d:	test   rax,rax
   140020290:	jne    0x140020299
   140020292:	mov    eax,0x1
   140020297:	jmp    0x1400202e5
   140020299:	mov    rdx,rdi
   14002029c:	mov    rcx,rax
   14002029f:	call   0x1400202f8
   1400202a4:	test   eax,eax
   1400202a6:	je     0x1400202ba
   1400202a8:	mov    rcx,rbx
   1400202ab:	call   0x14001fe5c
   1400202b0:	mov    rcx,rbx
   1400202b3:	call   0x14000fb50
   1400202b8:	jmp    0x140020292
   1400202ba:	mov    DWORD PTR [rbx+0x15c],0x1
   1400202c4:	jmp    0x1400202c9
   1400202c6:	mov    rbx,rbp
   1400202c9:	mov    rax,QWORD PTR [rdi+0x120]
   1400202d0:	cmp    rax,rbp
   1400202d3:	je     0x1400202dc
   1400202d5:	lock dec DWORD PTR [rax+0x15c]
   1400202dc:	mov    QWORD PTR [rdi+0x120],rbx
   1400202e3:	xor    eax,eax
   1400202e5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400202ea:	mov    rbp,QWORD PTR [rsp+0x38]
   1400202ef:	add    rsp,0x20
   1400202f3:	pop    rdi
   1400202f4:	ret    
   1400202f5:	int3   
   1400202f6:	int3   
   1400202f7:	int3   
   1400202f8:	mov    rax,rsp
   1400202fb:	mov    QWORD PTR [rax+0x8],rbx
   1400202ff:	mov    QWORD PTR [rax+0x10],rsi
   140020303:	mov    QWORD PTR [rax+0x18],rdi
   140020307:	mov    QWORD PTR [rax+0x20],r14
   14002030b:	push   rbp
   14002030c:	mov    rbp,rsp
   14002030f:	sub    rsp,0x40
   140020313:	mov    rsi,QWORD PTR [rdx+0x150]
   14002031a:	mov    rbx,rdx
   14002031d:	mov    rdi,rcx
   140020320:	test   rcx,rcx
   140020323:	jne    0x14002032d
   140020325:	or     eax,0xffffffff
   140020328:	jmp    0x140020e57
   14002032d:	mov    rcx,rsi
   140020330:	call   0x140010fa8
   140020335:	and    QWORD PTR [rbp-0x8],0x0
   14002033a:	mov    r9d,0x31
   140020340:	lea    r14d,[r9-0x30]
   140020344:	mov    QWORD PTR [rdi+0x2b8],rax
   14002034b:	lea    rax,[rdi+0x8]
   14002034f:	lea    rcx,[rbp-0x10]
   140020353:	mov    r8,rsi
   140020356:	mov    edx,r14d
   140020359:	mov    QWORD PTR [rbp-0x10],rbx
   14002035d:	mov    QWORD PTR [rsp+0x20],rax
   140020362:	call   0x14000f334
   140020367:	lea    rcx,[rdi+0x10]
   14002036b:	lea    r9d,[r14+0x31]
   14002036f:	mov    r8,rsi
   140020372:	mov    QWORD PTR [rsp+0x20],rcx
   140020377:	lea    rcx,[rbp-0x10]
   14002037b:	mov    edx,r14d
   14002037e:	mov    ebx,eax
   140020380:	call   0x14000f334
   140020385:	lea    rcx,[rdi+0x18]
   140020389:	mov    QWORD PTR [rsp+0x20],rcx
   14002038e:	lea    r9d,[r14+0x32]
   140020392:	lea    rcx,[rbp-0x10]
   140020396:	mov    r8,rsi
   140020399:	mov    edx,r14d
   14002039c:	or     ebx,eax
   14002039e:	call   0x14000f334
   1400203a3:	lea    r9d,[r14+0x33]
   1400203a7:	lea    rcx,[rbp-0x10]
   1400203ab:	or     ebx,eax
   1400203ad:	lea    rax,[rdi+0x20]
   1400203b1:	mov    r8,rsi
   1400203b4:	mov    edx,r14d
   1400203b7:	mov    QWORD PTR [rsp+0x20],rax
   1400203bc:	call   0x14000f334
   1400203c1:	lea    r9d,[r14+0x34]
   1400203c5:	lea    rcx,[rbp-0x10]
   1400203c9:	or     ebx,eax
   1400203cb:	lea    rax,[rdi+0x28]
   1400203cf:	mov    r8,rsi
   1400203d2:	mov    edx,r14d
   1400203d5:	mov    QWORD PTR [rsp+0x20],rax
   1400203da:	call   0x14000f334
   1400203df:	lea    r9d,[r14+0x35]
   1400203e3:	lea    rcx,[rbp-0x10]
   1400203e7:	or     ebx,eax
   1400203e9:	lea    rax,[rdi+0x30]
   1400203ed:	mov    r8,rsi
   1400203f0:	mov    edx,r14d
   1400203f3:	mov    QWORD PTR [rsp+0x20],rax
   1400203f8:	call   0x14000f334
   1400203fd:	lea    r9d,[r14+0x36]
   140020401:	lea    rcx,[rbp-0x10]
   140020405:	mov    r8,rsi
   140020408:	mov    edx,r14d
   14002040b:	mov    QWORD PTR [rsp+0x20],rdi
   140020410:	or     ebx,eax
   140020412:	call   0x14000f334
   140020417:	lea    r9d,[r14+0x29]
   14002041b:	or     ebx,eax
   14002041d:	lea    rax,[rdi+0x40]
   140020421:	lea    rcx,[rbp-0x10]
   140020425:	mov    r8,rsi
   140020428:	mov    edx,r14d
   14002042b:	mov    QWORD PTR [rsp+0x20],rax
   140020430:	call   0x14000f334
   140020435:	lea    r9d,[r14+0x2a]
   140020439:	lea    rcx,[rbp-0x10]
   14002043d:	or     ebx,eax
   14002043f:	lea    rax,[rdi+0x48]
   140020443:	mov    r8,rsi
   140020446:	mov    edx,r14d
   140020449:	mov    QWORD PTR [rsp+0x20],rax
   14002044e:	call   0x14000f334
   140020453:	lea    r9d,[r14+0x2b]
   140020457:	mov    r8,rsi
   14002045a:	or     ebx,eax
   14002045c:	lea    rax,[rdi+0x50]
   140020460:	mov    QWORD PTR [rsp+0x20],rax
   140020465:	lea    rcx,[rbp-0x10]
   140020469:	mov    edx,r14d
   14002046c:	call   0x14000f334
   140020471:	lea    r9d,[r14+0x2c]
   140020475:	lea    rcx,[rbp-0x10]
   140020479:	or     ebx,eax
   14002047b:	lea    rax,[rdi+0x58]
   14002047f:	mov    r8,rsi
   140020482:	mov    edx,r14d
   140020485:	mov    QWORD PTR [rsp+0x20],rax
   14002048a:	call   0x14000f334
   14002048f:	lea    r9d,[r14+0x2d]
   140020493:	lea    rcx,[rbp-0x10]
   140020497:	or     ebx,eax
   140020499:	lea    rax,[rdi+0x60]
   14002049d:	mov    r8,rsi
   1400204a0:	mov    edx,r14d
   1400204a3:	mov    QWORD PTR [rsp+0x20],rax
   1400204a8:	call   0x14000f334
   1400204ad:	lea    r9d,[r14+0x2e]
   1400204b1:	lea    rcx,[rbp-0x10]
   1400204b5:	or     ebx,eax
   1400204b7:	lea    rax,[rdi+0x68]
   1400204bb:	mov    r8,rsi
   1400204be:	mov    edx,r14d
   1400204c1:	mov    QWORD PTR [rsp+0x20],rax
   1400204c6:	call   0x14000f334
   1400204cb:	lea    r9d,[r14+0x2f]
   1400204cf:	lea    rcx,[rbp-0x10]
   1400204d3:	or     ebx,eax
   1400204d5:	lea    rax,[rdi+0x38]
   1400204d9:	mov    r8,rsi
   1400204dc:	mov    edx,r14d
   1400204df:	mov    QWORD PTR [rsp+0x20],rax
   1400204e4:	call   0x14000f334
   1400204e9:	lea    r9d,[r14+0x43]
   1400204ed:	lea    rcx,[rbp-0x10]
   1400204f1:	or     ebx,eax
   1400204f3:	lea    rax,[rdi+0x70]
   1400204f7:	mov    r8,rsi
   1400204fa:	mov    edx,r14d
   1400204fd:	mov    QWORD PTR [rsp+0x20],rax
   140020502:	call   0x14000f334
   140020507:	lea    r9d,[r14+0x44]
   14002050b:	lea    rcx,[rbp-0x10]
   14002050f:	or     ebx,eax
   140020511:	lea    rax,[rdi+0x78]
   140020515:	mov    r8,rsi
   140020518:	mov    edx,r14d
   14002051b:	mov    QWORD PTR [rsp+0x20],rax
   140020520:	call   0x14000f334
   140020525:	lea    r9d,[r14+0x45]
   140020529:	lea    rcx,[rbp-0x10]
   14002052d:	or     ebx,eax
   14002052f:	lea    rax,[rdi+0x80]
   140020536:	mov    r8,rsi
   140020539:	mov    edx,r14d
   14002053c:	mov    QWORD PTR [rsp+0x20],rax
   140020541:	call   0x14000f334
   140020546:	lea    r9d,[r14+0x46]
   14002054a:	lea    rcx,[rbp-0x10]
   14002054e:	or     ebx,eax
   140020550:	lea    rax,[rdi+0x88]
   140020557:	mov    r8,rsi
   14002055a:	mov    edx,r14d
   14002055d:	mov    QWORD PTR [rsp+0x20],rax
   140020562:	call   0x14000f334
   140020567:	lea    r9d,[r14+0x47]
   14002056b:	lea    rcx,[rbp-0x10]
   14002056f:	or     ebx,eax
   140020571:	lea    rax,[rdi+0x90]
   140020578:	mov    r8,rsi
   14002057b:	mov    edx,r14d
   14002057e:	mov    QWORD PTR [rsp+0x20],rax
   140020583:	call   0x14000f334
   140020588:	lea    r9d,[r14+0x48]
   14002058c:	mov    r8,rsi
   14002058f:	or     ebx,eax
   140020591:	lea    rax,[rdi+0x98]
   140020598:	mov    edx,r14d
   14002059b:	mov    QWORD PTR [rsp+0x20],rax
   1400205a0:	lea    rcx,[rbp-0x10]
   1400205a4:	call   0x14000f334
   1400205a9:	lea    r9d,[r14+0x49]
   1400205ad:	lea    rcx,[rbp-0x10]
   1400205b1:	or     ebx,eax
   1400205b3:	lea    rax,[rdi+0xa0]
   1400205ba:	mov    r8,rsi
   1400205bd:	mov    edx,r14d
   1400205c0:	mov    QWORD PTR [rsp+0x20],rax
   1400205c5:	call   0x14000f334
   1400205ca:	lea    r9d,[r14+0x4a]
   1400205ce:	lea    rcx,[rbp-0x10]
   1400205d2:	or     ebx,eax
   1400205d4:	lea    rax,[rdi+0xa8]
   1400205db:	mov    r8,rsi
   1400205de:	mov    edx,r14d
   1400205e1:	mov    QWORD PTR [rsp+0x20],rax
   1400205e6:	call   0x14000f334
   1400205eb:	lea    r9d,[r14+0x4b]
   1400205ef:	lea    rcx,[rbp-0x10]
   1400205f3:	or     ebx,eax
   1400205f5:	lea    rax,[rdi+0xb0]
   1400205fc:	mov    r8,rsi
   1400205ff:	mov    edx,r14d
   140020602:	mov    QWORD PTR [rsp+0x20],rax
   140020607:	call   0x14000f334
   14002060c:	lea    r9d,[r14+0x4c]
   140020610:	lea    rcx,[rbp-0x10]
   140020614:	or     ebx,eax
   140020616:	lea    rax,[rdi+0xb8]
   14002061d:	mov    r8,rsi
   140020620:	mov    edx,r14d
   140020623:	mov    QWORD PTR [rsp+0x20],rax
   140020628:	call   0x14000f334
   14002062d:	lea    r9d,[r14+0x4d]
   140020631:	lea    rcx,[rbp-0x10]
   140020635:	or     ebx,eax
   140020637:	lea    rax,[rdi+0xc0]
   14002063e:	mov    r8,rsi
   140020641:	mov    edx,r14d
   140020644:	mov    QWORD PTR [rsp+0x20],rax
   140020649:	call   0x14000f334
   14002064e:	lea    r9d,[r14+0x4e]
   140020652:	lea    rcx,[rbp-0x10]
   140020656:	or     ebx,eax
   140020658:	lea    rax,[rdi+0xc8]
   14002065f:	mov    r8,rsi
   140020662:	mov    edx,r14d
   140020665:	mov    QWORD PTR [rsp+0x20],rax
   14002066a:	call   0x14000f334
   14002066f:	lea    r9d,[r14+0x37]
   140020673:	lea    rcx,[rbp-0x10]
   140020677:	or     ebx,eax
   140020679:	lea    rax,[rdi+0xd0]
   140020680:	mov    r8,rsi
   140020683:	mov    edx,r14d
   140020686:	mov    QWORD PTR [rsp+0x20],rax
   14002068b:	call   0x14000f334
   140020690:	lea    r9d,[r14+0x38]
   140020694:	lea    rcx,[rbp-0x10]
   140020698:	or     ebx,eax
   14002069a:	lea    rax,[rdi+0xd8]
   1400206a1:	mov    r8,rsi
   1400206a4:	mov    edx,r14d
   1400206a7:	mov    QWORD PTR [rsp+0x20],rax
   1400206ac:	call   0x14000f334
   1400206b1:	lea    r9d,[r14+0x39]
   1400206b5:	lea    rcx,[rbp-0x10]
   1400206b9:	or     ebx,eax
   1400206bb:	lea    rax,[rdi+0xe0]
   1400206c2:	mov    r8,rsi
   1400206c5:	mov    edx,r14d
   1400206c8:	mov    QWORD PTR [rsp+0x20],rax
   1400206cd:	call   0x14000f334
   1400206d2:	lea    r9d,[r14+0x3a]
   1400206d6:	mov    r8,rsi
   1400206d9:	or     ebx,eax
   1400206db:	lea    rax,[rdi+0xe8]
   1400206e2:	mov    edx,r14d
   1400206e5:	mov    QWORD PTR [rsp+0x20],rax
   1400206ea:	lea    rcx,[rbp-0x10]
   1400206ee:	call   0x14000f334
   1400206f3:	lea    r9d,[r14+0x3b]
   1400206f7:	lea    rcx,[rbp-0x10]
   1400206fb:	or     ebx,eax
   1400206fd:	lea    rax,[rdi+0xf0]
   140020704:	mov    r8,rsi
   140020707:	mov    edx,r14d
   14002070a:	mov    QWORD PTR [rsp+0x20],rax
   14002070f:	call   0x14000f334
   140020714:	lea    r9d,[r14+0x3c]
   140020718:	lea    rcx,[rbp-0x10]
   14002071c:	or     ebx,eax
   14002071e:	lea    rax,[rdi+0xf8]
   140020725:	mov    r8,rsi
   140020728:	mov    edx,r14d
   14002072b:	mov    QWORD PTR [rsp+0x20],rax
   140020730:	call   0x14000f334
   140020735:	lea    r9d,[r14+0x3d]
   140020739:	lea    rcx,[rbp-0x10]
   14002073d:	or     ebx,eax
   14002073f:	lea    rax,[rdi+0x100]
   140020746:	mov    r8,rsi
   140020749:	mov    edx,r14d
   14002074c:	mov    QWORD PTR [rsp+0x20],rax
   140020751:	call   0x14000f334
   140020756:	lea    r9d,[r14+0x3e]
   14002075a:	lea    rcx,[rbp-0x10]
   14002075e:	or     ebx,eax
   140020760:	lea    rax,[rdi+0x108]
   140020767:	mov    r8,rsi
   14002076a:	mov    edx,r14d
   14002076d:	mov    QWORD PTR [rsp+0x20],rax
   140020772:	call   0x14000f334
   140020777:	lea    r9d,[r14+0x3f]
   14002077b:	lea    rcx,[rbp-0x10]
   14002077f:	or     ebx,eax
   140020781:	lea    rax,[rdi+0x110]
   140020788:	mov    r8,rsi
   14002078b:	mov    edx,r14d
   14002078e:	mov    QWORD PTR [rsp+0x20],rax
   140020793:	call   0x14000f334
   140020798:	lea    r9d,[r14+0x40]
   14002079c:	lea    rcx,[rbp-0x10]
   1400207a0:	or     ebx,eax
   1400207a2:	lea    rax,[rdi+0x118]
   1400207a9:	mov    r8,rsi
   1400207ac:	mov    edx,r14d
   1400207af:	mov    QWORD PTR [rsp+0x20],rax
   1400207b4:	call   0x14000f334
   1400207b9:	lea    r9d,[r14+0x41]
   1400207bd:	lea    rcx,[rbp-0x10]
   1400207c1:	or     ebx,eax
   1400207c3:	lea    rax,[rdi+0x120]
   1400207ca:	mov    r8,rsi
   1400207cd:	mov    edx,r14d
   1400207d0:	mov    QWORD PTR [rsp+0x20],rax
   1400207d5:	call   0x14000f334
   1400207da:	lea    r9d,[r14+0x42]
   1400207de:	lea    rcx,[rbp-0x10]
   1400207e2:	or     ebx,eax
   1400207e4:	lea    rax,[rdi+0x128]
   1400207eb:	mov    r8,rsi
   1400207ee:	mov    edx,r14d
   1400207f1:	mov    QWORD PTR [rsp+0x20],rax
   1400207f6:	call   0x14000f334
   1400207fb:	lea    r9d,[r14+0x27]
   1400207ff:	lea    rcx,[rbp-0x10]
   140020803:	or     ebx,eax
   140020805:	lea    rax,[rdi+0x130]
   14002080c:	mov    r8,rsi
   14002080f:	mov    edx,r14d
   140020812:	mov    QWORD PTR [rsp+0x20],rax
   140020817:	call   0x14000f334
   14002081c:	lea    r9d,[r14+0x28]
   140020820:	lea    rcx,[rbp-0x10]
   140020824:	or     ebx,eax
   140020826:	lea    rax,[rdi+0x138]
   14002082d:	mov    r8,rsi
   140020830:	mov    edx,r14d
   140020833:	mov    QWORD PTR [rsp+0x20],rax
   140020838:	call   0x14000f334
   14002083d:	or     ebx,eax
   14002083f:	lea    rax,[rdi+0x140]
   140020846:	lea    r9d,[r14+0x1e]
   14002084a:	lea    rcx,[rbp-0x10]
   14002084e:	mov    r8,rsi
   140020851:	mov    edx,r14d
   140020854:	mov    QWORD PTR [rsp+0x20],rax
   140020859:	call   0x14000f334
   14002085e:	lea    r9d,[r14+0x1f]
   140020862:	or     ebx,eax
   140020864:	lea    rax,[rdi+0x148]
   14002086b:	lea    rcx,[rbp-0x10]
   14002086f:	mov    r8,rsi
   140020872:	mov    edx,r14d
   140020875:	mov    QWORD PTR [rsp+0x20],rax
   14002087a:	call   0x14000f334
   14002087f:	lea    rcx,[rbp-0x10]
   140020883:	mov    r9d,0x1003
   140020889:	or     ebx,eax
   14002088b:	lea    rax,[rdi+0x150]
   140020892:	mov    r8,rsi
   140020895:	mov    edx,r14d
   140020898:	mov    QWORD PTR [rsp+0x20],rax
   14002089d:	call   0x14000f334
   1400208a2:	lea    rcx,[rbp-0x10]
   1400208a6:	mov    r9d,0x1009
   1400208ac:	or     ebx,eax
   1400208ae:	lea    rax,[rdi+0x158]
   1400208b5:	mov    r8,rsi
   1400208b8:	xor    edx,edx
   1400208ba:	mov    QWORD PTR [rsp+0x20],rax
   1400208bf:	call   0x14000f334
   1400208c4:	lea    r9d,[r14+0x30]
   1400208c8:	lea    rcx,[rbp-0x10]
   1400208cc:	lea    r14d,[r9-0x2f]
   1400208d0:	or     ebx,eax
   1400208d2:	lea    rax,[rdi+0x168]
   1400208d9:	mov    edx,r14d
   1400208dc:	mov    r8,rsi
   1400208df:	mov    QWORD PTR [rsp+0x20],rax
   1400208e4:	call   0x14000f334
   1400208e9:	lea    r9d,[r14+0x30]
   1400208ed:	lea    rcx,[rbp-0x10]
   1400208f1:	or     ebx,eax
   1400208f3:	lea    rax,[rdi+0x170]
   1400208fa:	mov    r8,rsi
   1400208fd:	mov    edx,r14d
   140020900:	mov    QWORD PTR [rsp+0x20],rax
   140020905:	call   0x14000f334
   14002090a:	lea    r9d,[r14+0x31]
   14002090e:	lea    rcx,[rbp-0x10]
   140020912:	or     ebx,eax
   140020914:	lea    rax,[rdi+0x178]
   14002091b:	mov    r8,rsi
   14002091e:	mov    edx,r14d
   140020921:	mov    QWORD PTR [rsp+0x20],rax
   140020926:	call   0x14000f334
   14002092b:	lea    r9d,[r14+0x32]
   14002092f:	lea    rcx,[rbp-0x10]
   140020933:	or     ebx,eax
   140020935:	lea    rax,[rdi+0x180]
   14002093c:	mov    r8,rsi
   14002093f:	mov    edx,r14d
   140020942:	mov    QWORD PTR [rsp+0x20],rax
   140020947:	call   0x14000f334
   14002094c:	lea    r9d,[r14+0x33]
   140020950:	lea    rcx,[rbp-0x10]
   140020954:	or     ebx,eax
   140020956:	lea    rax,[rdi+0x188]
   14002095d:	mov    r8,rsi
   140020960:	mov    edx,r14d
   140020963:	mov    QWORD PTR [rsp+0x20],rax
   140020968:	call   0x14000f334
   14002096d:	lea    r9d,[r14+0x34]
   140020971:	lea    rcx,[rbp-0x10]
   140020975:	or     ebx,eax
   140020977:	lea    rax,[rdi+0x190]
   14002097e:	mov    r8,rsi
   140020981:	mov    edx,r14d
   140020984:	mov    QWORD PTR [rsp+0x20],rax
   140020989:	call   0x14000f334
   14002098e:	or     ebx,eax
   140020990:	lea    rax,[rdi+0x160]
   140020997:	lea    r9d,[r14+0x35]
   14002099b:	lea    rcx,[rbp-0x10]
   14002099f:	mov    r8,rsi
   1400209a2:	mov    edx,r14d
   1400209a5:	mov    QWORD PTR [rsp+0x20],rax
   1400209aa:	call   0x14000f334
   1400209af:	lea    r9d,[r14+0x28]
   1400209b3:	or     ebx,eax
   1400209b5:	lea    rax,[rdi+0x1a0]
   1400209bc:	lea    rcx,[rbp-0x10]
   1400209c0:	mov    r8,rsi
   1400209c3:	mov    edx,r14d
   1400209c6:	mov    QWORD PTR [rsp+0x20],rax
   1400209cb:	call   0x14000f334
   1400209d0:	lea    r9d,[r14+0x29]
   1400209d4:	lea    rcx,[rbp-0x10]
   1400209d8:	or     ebx,eax
   1400209da:	lea    rax,[rdi+0x1a8]
   1400209e1:	mov    r8,rsi
   1400209e4:	mov    edx,r14d
   1400209e7:	mov    QWORD PTR [rsp+0x20],rax
   1400209ec:	call   0x14000f334
   1400209f1:	lea    r9d,[r14+0x2a]
   1400209f5:	lea    rcx,[rbp-0x10]
   1400209f9:	or     ebx,eax
   1400209fb:	lea    rax,[rdi+0x1b0]
   140020a02:	mov    r8,rsi
   140020a05:	mov    edx,r14d
   140020a08:	mov    QWORD PTR [rsp+0x20],rax
   140020a0d:	call   0x14000f334
   140020a12:	lea    r9d,[r14+0x2b]
   140020a16:	lea    rcx,[rbp-0x10]
   140020a1a:	or     ebx,eax
   140020a1c:	lea    rax,[rdi+0x1b8]
   140020a23:	mov    r8,rsi
   140020a26:	mov    edx,r14d
   140020a29:	mov    QWORD PTR [rsp+0x20],rax
   140020a2e:	call   0x14000f334
   140020a33:	lea    r9d,[r14+0x2c]
   140020a37:	lea    rcx,[rbp-0x10]
   140020a3b:	or     ebx,eax
   140020a3d:	lea    rax,[rdi+0x1c0]
   140020a44:	mov    r8,rsi
   140020a47:	mov    edx,r14d
   140020a4a:	mov    QWORD PTR [rsp+0x20],rax
   140020a4f:	call   0x14000f334
   140020a54:	lea    r9d,[r14+0x2d]
   140020a58:	lea    rcx,[rbp-0x10]
   140020a5c:	or     ebx,eax
   140020a5e:	lea    rax,[rdi+0x1c8]
   140020a65:	mov    r8,rsi
   140020a68:	mov    edx,r14d
   140020a6b:	mov    QWORD PTR [rsp+0x20],rax
   140020a70:	call   0x14000f334
   140020a75:	lea    r9d,[r14+0x2e]
   140020a79:	lea    rcx,[rbp-0x10]
   140020a7d:	or     ebx,eax
   140020a7f:	lea    rax,[rdi+0x198]
   140020a86:	mov    r8,rsi
   140020a89:	mov    edx,r14d
   140020a8c:	mov    QWORD PTR [rsp+0x20],rax
   140020a91:	call   0x14000f334
   140020a96:	lea    r9d,[r14+0x42]
   140020a9a:	lea    rcx,[rbp-0x10]
   140020a9e:	or     ebx,eax
   140020aa0:	lea    rax,[rdi+0x1d0]
   140020aa7:	mov    r8,rsi
   140020aaa:	mov    edx,r14d
   140020aad:	mov    QWORD PTR [rsp+0x20],rax
   140020ab2:	call   0x14000f334
   140020ab7:	lea    r9d,[r14+0x43]
   140020abb:	lea    rcx,[rbp-0x10]
   140020abf:	or     ebx,eax
   140020ac1:	lea    rax,[rdi+0x1d8]
   140020ac8:	mov    r8,rsi
   140020acb:	mov    edx,r14d
   140020ace:	mov    QWORD PTR [rsp+0x20],rax
   140020ad3:	call   0x14000f334
   140020ad8:	or     ebx,eax
   140020ada:	lea    rax,[rdi+0x1e0]
   140020ae1:	lea    r9d,[r14+0x44]
   140020ae5:	lea    rcx,[rbp-0x10]
   140020ae9:	mov    r8,rsi
   140020aec:	mov    edx,r14d
   140020aef:	mov    QWORD PTR [rsp+0x20],rax
   140020af4:	call   0x14000f334
   140020af9:	lea    r9d,[r14+0x45]
   140020afd:	lea    rcx,[rbp-0x10]
   140020b01:	or     ebx,eax
   140020b03:	lea    rax,[rdi+0x1e8]
   140020b0a:	mov    r8,rsi
   140020b0d:	mov    edx,r14d
   140020b10:	mov    QWORD PTR [rsp+0x20],rax
   140020b15:	call   0x14000f334
   140020b1a:	lea    r9d,[r14+0x46]
   140020b1e:	lea    rcx,[rbp-0x10]
   140020b22:	or     ebx,eax
   140020b24:	lea    rax,[rdi+0x1f0]
   140020b2b:	mov    r8,rsi
   140020b2e:	mov    edx,r14d
   140020b31:	mov    QWORD PTR [rsp+0x20],rax
   140020b36:	call   0x14000f334
   140020b3b:	lea    r9d,[r14+0x47]
   140020b3f:	lea    rcx,[rbp-0x10]
   140020b43:	or     ebx,eax
   140020b45:	lea    rax,[rdi+0x1f8]
   140020b4c:	mov    r8,rsi
   140020b4f:	mov    edx,r14d
   140020b52:	mov    QWORD PTR [rsp+0x20],rax
   140020b57:	call   0x14000f334
   140020b5c:	lea    r9d,[r14+0x48]
   140020b60:	lea    rcx,[rbp-0x10]
   140020b64:	or     ebx,eax
   140020b66:	lea    rax,[rdi+0x200]
   140020b6d:	mov    r8,rsi
   140020b70:	mov    edx,r14d
   140020b73:	mov    QWORD PTR [rsp+0x20],rax
   140020b78:	call   0x14000f334
   140020b7d:	lea    r9d,[r14+0x49]
   140020b81:	lea    rcx,[rbp-0x10]
   140020b85:	or     ebx,eax
   140020b87:	lea    rax,[rdi+0x208]
   140020b8e:	mov    r8,rsi
   140020b91:	mov    edx,r14d
   140020b94:	mov    QWORD PTR [rsp+0x20],rax
   140020b99:	call   0x14000f334
   140020b9e:	lea    r9d,[r14+0x4a]
   140020ba2:	lea    rcx,[rbp-0x10]
   140020ba6:	or     ebx,eax
   140020ba8:	lea    rax,[rdi+0x210]
   140020baf:	mov    r8,rsi
   140020bb2:	mov    edx,r14d
   140020bb5:	mov    QWORD PTR [rsp+0x20],rax
   140020bba:	call   0x14000f334
   140020bbf:	lea    r9d,[r14+0x4b]
   140020bc3:	lea    rcx,[rbp-0x10]
   140020bc7:	or     ebx,eax
   140020bc9:	lea    rax,[rdi+0x218]
   140020bd0:	mov    r8,rsi
   140020bd3:	mov    edx,r14d
   140020bd6:	mov    QWORD PTR [rsp+0x20],rax
   140020bdb:	call   0x14000f334
   140020be0:	lea    r9d,[r14+0x4c]
   140020be4:	lea    rcx,[rbp-0x10]
   140020be8:	or     ebx,eax
   140020bea:	lea    rax,[rdi+0x220]
   140020bf1:	mov    r8,rsi
   140020bf4:	mov    edx,r14d
   140020bf7:	mov    QWORD PTR [rsp+0x20],rax
   140020bfc:	call   0x14000f334
   140020c01:	lea    r9d,[r14+0x4d]
   140020c05:	lea    rcx,[rbp-0x10]
   140020c09:	or     ebx,eax
   140020c0b:	lea    rax,[rdi+0x228]
   140020c12:	mov    r8,rsi
   140020c15:	mov    edx,r14d
   140020c18:	mov    QWORD PTR [rsp+0x20],rax
   140020c1d:	call   0x14000f334
   140020c22:	or     ebx,eax
   140020c24:	lea    rax,[rdi+0x230]
   140020c2b:	lea    r9d,[r14+0x36]
   140020c2f:	lea    rcx,[rbp-0x10]
   140020c33:	mov    r8,rsi
   140020c36:	mov    edx,r14d
   140020c39:	mov    QWORD PTR [rsp+0x20],rax
   140020c3e:	call   0x14000f334
   140020c43:	lea    r9d,[r14+0x37]
   140020c47:	lea    rcx,[rbp-0x10]
   140020c4b:	or     ebx,eax
   140020c4d:	lea    rax,[rdi+0x238]
   140020c54:	mov    r8,rsi
   140020c57:	mov    edx,r14d
   140020c5a:	mov    QWORD PTR [rsp+0x20],rax
   140020c5f:	call   0x14000f334
   140020c64:	lea    r9d,[r14+0x38]
   140020c68:	lea    rcx,[rbp-0x10]
   140020c6c:	or     ebx,eax
   140020c6e:	lea    rax,[rdi+0x240]
   140020c75:	mov    r8,rsi
   140020c78:	mov    edx,r14d
   140020c7b:	mov    QWORD PTR [rsp+0x20],rax
   140020c80:	call   0x14000f334
   140020c85:	lea    r9d,[r14+0x39]
   140020c89:	lea    rcx,[rbp-0x10]
   140020c8d:	or     ebx,eax
   140020c8f:	lea    rax,[rdi+0x248]
   140020c96:	mov    r8,rsi
   140020c99:	mov    edx,r14d
   140020c9c:	mov    QWORD PTR [rsp+0x20],rax
   140020ca1:	call   0x14000f334
   140020ca6:	lea    r9d,[r14+0x3a]
   140020caa:	lea    rcx,[rbp-0x10]
   140020cae:	or     ebx,eax
   140020cb0:	lea    rax,[rdi+0x250]
   140020cb7:	mov    r8,rsi
   140020cba:	mov    edx,r14d
   140020cbd:	mov    QWORD PTR [rsp+0x20],rax
   140020cc2:	call   0x14000f334
   140020cc7:	lea    r9d,[r14+0x3b]
   140020ccb:	lea    rcx,[rbp-0x10]
   140020ccf:	or     ebx,eax
   140020cd1:	lea    rax,[rdi+0x258]
   140020cd8:	mov    r8,rsi
   140020cdb:	mov    edx,r14d
   140020cde:	mov    QWORD PTR [rsp+0x20],rax
   140020ce3:	call   0x14000f334
   140020ce8:	lea    r9d,[r14+0x3c]
   140020cec:	lea    rcx,[rbp-0x10]
   140020cf0:	or     ebx,eax
   140020cf2:	lea    rax,[rdi+0x260]
   140020cf9:	mov    r8,rsi
   140020cfc:	mov    edx,r14d
   140020cff:	mov    QWORD PTR [rsp+0x20],rax
   140020d04:	call   0x14000f334
   140020d09:	lea    r9d,[r14+0x3d]
   140020d0d:	lea    rcx,[rbp-0x10]
   140020d11:	or     ebx,eax
   140020d13:	lea    rax,[rdi+0x268]
   140020d1a:	mov    r8,rsi
   140020d1d:	mov    edx,r14d
   140020d20:	mov    QWORD PTR [rsp+0x20],rax
   140020d25:	call   0x14000f334
   140020d2a:	lea    r9d,[r14+0x3e]
   140020d2e:	lea    rcx,[rbp-0x10]
   140020d32:	or     ebx,eax
   140020d34:	lea    rax,[rdi+0x270]
   140020d3b:	mov    r8,rsi
   140020d3e:	mov    edx,r14d
   140020d41:	mov    QWORD PTR [rsp+0x20],rax
   140020d46:	call   0x14000f334
   140020d4b:	lea    r9d,[r14+0x3f]
   140020d4f:	lea    rcx,[rbp-0x10]
   140020d53:	or     ebx,eax
   140020d55:	lea    rax,[rdi+0x278]
   140020d5c:	mov    r8,rsi
   140020d5f:	mov    edx,r14d
   140020d62:	mov    QWORD PTR [rsp+0x20],rax
   140020d67:	call   0x14000f334
   140020d6c:	or     ebx,eax
   140020d6e:	lea    rax,[rdi+0x280]
   140020d75:	mov    QWORD PTR [rsp+0x20],rax
   140020d7a:	lea    r9d,[r14+0x40]
   140020d7e:	lea    rcx,[rbp-0x10]
   140020d82:	mov    r8,rsi
   140020d85:	mov    edx,r14d
   140020d88:	call   0x14000f334
   140020d8d:	lea    r9d,[r14+0x41]
   140020d91:	lea    rcx,[rbp-0x10]
   140020d95:	or     ebx,eax
   140020d97:	lea    rax,[rdi+0x288]
   140020d9e:	mov    r8,rsi
   140020da1:	mov    edx,r14d
   140020da4:	mov    QWORD PTR [rsp+0x20],rax
   140020da9:	call   0x14000f334
   140020dae:	lea    r9d,[r14+0x26]
   140020db2:	lea    rcx,[rbp-0x10]
   140020db6:	or     ebx,eax
   140020db8:	lea    rax,[rdi+0x290]
   140020dbf:	mov    r8,rsi
   140020dc2:	mov    edx,r14d
   140020dc5:	mov    QWORD PTR [rsp+0x20],rax
   140020dca:	call   0x14000f334
   140020dcf:	lea    r9d,[r14+0x27]
   140020dd3:	lea    rcx,[rbp-0x10]
   140020dd7:	or     ebx,eax
   140020dd9:	lea    rax,[rdi+0x298]
   140020de0:	mov    r8,rsi
   140020de3:	mov    edx,r14d
   140020de6:	mov    QWORD PTR [rsp+0x20],rax
   140020deb:	call   0x14000f334
   140020df0:	lea    r9d,[r14+0x1d]
   140020df4:	lea    rcx,[rbp-0x10]
   140020df8:	or     ebx,eax
   140020dfa:	lea    rax,[rdi+0x2a0]
   140020e01:	mov    r8,rsi
   140020e04:	mov    edx,r14d
   140020e07:	mov    QWORD PTR [rsp+0x20],rax
   140020e0c:	call   0x14000f334
   140020e11:	lea    r9d,[r14+0x1e]
   140020e15:	lea    rcx,[rbp-0x10]
   140020e19:	or     ebx,eax
   140020e1b:	lea    rax,[rdi+0x2a8]
   140020e22:	mov    r8,rsi
   140020e25:	mov    edx,r14d
   140020e28:	mov    QWORD PTR [rsp+0x20],rax
   140020e2d:	call   0x14000f334
   140020e32:	lea    rcx,[rbp-0x10]
   140020e36:	mov    r9d,0x1003
   140020e3c:	or     ebx,eax
   140020e3e:	lea    rax,[rdi+0x2b0]
   140020e45:	mov    r8,rsi
   140020e48:	mov    edx,r14d
   140020e4b:	mov    QWORD PTR [rsp+0x20],rax
   140020e50:	call   0x14000f334
   140020e55:	or     eax,ebx
   140020e57:	mov    rbx,QWORD PTR [rsp+0x50]
   140020e5c:	mov    rsi,QWORD PTR [rsp+0x58]
   140020e61:	mov    rdi,QWORD PTR [rsp+0x60]
   140020e66:	mov    r14,QWORD PTR [rsp+0x68]
   140020e6b:	add    rsp,0x40
   140020e6f:	pop    rbp
   140020e70:	ret    
   140020e71:	int3   
   140020e72:	int3   
   140020e73:	int3   
   140020e74:	sub    rsp,0x28
   140020e78:	call   0x140010d3c
   140020e7d:	mov    rcx,QWORD PTR [rip+0x2515c]        # 0x140045fe0
   140020e84:	cmp    QWORD PTR [rax+0xc0],rcx
   140020e8b:	je     0x140020ea0
   140020e8d:	mov    eax,DWORD PTR [rax+0xc8]
   140020e93:	test   DWORD PTR [rip+0x252bf],eax        # 0x140046158
   140020e99:	jne    0x140020ea0
   140020e9b:	call   0x1400100d0
   140020ea0:	mov    rax,QWORD PTR [rip+0x25669]        # 0x140046510
   140020ea7:	add    rsp,0x28
   140020eab:	ret    
   140020eac:	rex push rbp
   140020eae:	push   r12
   140020eb0:	push   r13
   140020eb2:	push   r14
   140020eb4:	push   r15
   140020eb6:	sub    rsp,0x50
   140020eba:	lea    rbp,[rsp+0x40]
   140020ebf:	mov    QWORD PTR [rbp+0x40],rbx
   140020ec3:	mov    QWORD PTR [rbp+0x48],rsi
   140020ec7:	mov    QWORD PTR [rbp+0x50],rdi
   140020ecb:	mov    rax,QWORD PTR [rip+0x2439e]        # 0x140045270
   140020ed2:	xor    rax,rbp
   140020ed5:	mov    QWORD PTR [rbp+0x8],rax
   140020ed9:	mov    ebx,DWORD PTR [rbp+0x60]
   140020edc:	xor    edi,edi
   140020ede:	mov    r12,r9
   140020ee1:	mov    r13d,r8d
   140020ee4:	mov    QWORD PTR [rbp+0x0],rdx
   140020ee8:	test   ebx,ebx
   140020eea:	jle    0x140020f16
   140020eec:	mov    r10d,ebx
   140020eef:	mov    rax,r9
   140020ef2:	dec    r10d
   140020ef5:	cmp    BYTE PTR [rax],dil
   140020ef8:	je     0x140020f06
   140020efa:	inc    rax
   140020efd:	test   r10d,r10d
   140020f00:	jne    0x140020ef2
   140020f02:	or     r10d,0xffffffff
   140020f06:	mov    eax,ebx
   140020f08:	sub    eax,r10d
   140020f0b:	dec    eax
   140020f0d:	cmp    eax,ebx
   140020f0f:	lea    ebx,[rax+0x1]
   140020f12:	jl     0x140020f16
   140020f14:	mov    ebx,eax
   140020f16:	mov    r14d,DWORD PTR [rbp+0x78]
   140020f1a:	mov    esi,edi
   140020f1c:	test   r14d,r14d
   140020f1f:	jne    0x140020f28
   140020f21:	mov    rax,QWORD PTR [rcx]
   140020f24:	mov    r14d,DWORD PTR [rax+0x4]
   140020f28:	neg    DWORD PTR [rbp+0x80]
   140020f2e:	mov    r9d,ebx
   140020f31:	mov    r8,r12
   140020f34:	sbb    edx,edx
   140020f36:	mov    ecx,r14d
   140020f39:	mov    DWORD PTR [rsp+0x28],edi
   140020f3d:	and    edx,0x8
   140020f40:	mov    QWORD PTR [rsp+0x20],rdi
   140020f45:	inc    edx
   140020f47:	call   QWORD PTR [rip+0x14303]        # 0x140035250
   140020f4d:	movsxd r15,eax
   140020f50:	test   eax,eax
   140020f52:	jne    0x140020f5b
   140020f54:	xor    eax,eax
   140020f56:	jmp    0x140021172
   140020f5b:	movabs r9,0xffffffffffffff0
   140020f65:	test   eax,eax
   140020f67:	jle    0x140020fd7
   140020f69:	xor    edx,edx
   140020f6b:	lea    rax,[rdx-0x20]
   140020f6f:	div    r15
   140020f72:	cmp    rax,0x2
   140020f76:	jb     0x140020fd7
   140020f78:	lea    rcx,[r15+r15*1]
   140020f7c:	lea    rax,[rcx+0x10]
   140020f80:	cmp    rax,rcx
   140020f83:	jbe    0x140020fd7
   140020f85:	lea    rcx,[r15*2+0x10]
   140020f8d:	cmp    rcx,0x400
   140020f94:	ja     0x140020fc0
   140020f96:	lea    rax,[rcx+0xf]
   140020f9a:	cmp    rax,rcx
   140020f9d:	ja     0x140020fa2
   140020f9f:	mov    rax,r9
   140020fa2:	and    rax,0xfffffffffffffff0
   140020fa6:	call   0x140009b80
   140020fab:	sub    rsp,rax
   140020fae:	lea    rdi,[rsp+0x40]
   140020fb3:	test   rdi,rdi
   140020fb6:	je     0x140020f54
   140020fb8:	mov    DWORD PTR [rdi],0xcccc
   140020fbe:	jmp    0x140020fd3
   140020fc0:	call   0x14000f5a8
   140020fc5:	mov    rdi,rax
   140020fc8:	test   rax,rax
   140020fcb:	je     0x140020fd7
   140020fcd:	mov    DWORD PTR [rax],0xdddd
   140020fd3:	add    rdi,0x10
   140020fd7:	test   rdi,rdi
   140020fda:	je     0x140020f54
   140020fe0:	mov    r9d,ebx
   140020fe3:	mov    r8,r12
   140020fe6:	mov    edx,0x1
   140020feb:	mov    ecx,r14d
   140020fee:	mov    DWORD PTR [rsp+0x28],r15d
   140020ff3:	mov    QWORD PTR [rsp+0x20],rdi
   140020ff8:	call   QWORD PTR [rip+0x14252]        # 0x140035250
   140020ffe:	test   eax,eax
   140021000:	je     0x14002115f
   140021006:	mov    r12,QWORD PTR [rbp+0x0]
   14002100a:	and    DWORD PTR [rsp+0x28],esi
   14002100e:	and    QWORD PTR [rsp+0x20],rsi
   140021013:	mov    rcx,r12
   140021016:	mov    r9d,r15d
   140021019:	mov    r8,rdi
   14002101c:	mov    edx,r13d
   14002101f:	call   0x14001f1c4
   140021024:	movsxd rsi,eax
   140021027:	test   eax,eax
   140021029:	je     0x14002115f
   14002102f:	mov    r9d,0x400
   140021035:	test   r9d,r13d
   140021038:	je     0x140021070
   14002103a:	mov    ecx,DWORD PTR [rbp+0x70]
   14002103d:	test   ecx,ecx
   14002103f:	je     0x14002115f
   140021045:	cmp    esi,ecx
   140021047:	jg     0x14002115f
   14002104d:	mov    rax,QWORD PTR [rbp+0x68]
   140021051:	mov    DWORD PTR [rsp+0x28],ecx
   140021055:	mov    r9d,r15d
   140021058:	mov    r8,rdi
   14002105b:	mov    edx,r13d
   14002105e:	mov    rcx,r12
   140021061:	mov    QWORD PTR [rsp+0x20],rax
   140021066:	call   0x14001f1c4
   14002106b:	jmp    0x14002115f
   140021070:	test   eax,eax
   140021072:	jle    0x1400210eb
   140021074:	xor    edx,edx
   140021076:	lea    rax,[rdx-0x20]
   14002107a:	div    rsi
   14002107d:	cmp    rax,0x2
   140021081:	jb     0x1400210eb
   140021083:	lea    rcx,[rsi+rsi*1]
   140021087:	lea    rax,[rcx+0x10]
   14002108b:	cmp    rax,rcx
   14002108e:	jbe    0x1400210eb
   140021090:	lea    rcx,[rsi*2+0x10]
   140021098:	cmp    rcx,r9
   14002109b:	ja     0x1400210d2
   14002109d:	lea    rax,[rcx+0xf]
   1400210a1:	cmp    rax,rcx
   1400210a4:	ja     0x1400210b0
   1400210a6:	movabs rax,0xffffffffffffff0
   1400210b0:	and    rax,0xfffffffffffffff0
   1400210b4:	call   0x140009b80
   1400210b9:	sub    rsp,rax
   1400210bc:	lea    rbx,[rsp+0x40]
   1400210c1:	test   rbx,rbx
   1400210c4:	je     0x14002115f
   1400210ca:	mov    DWORD PTR [rbx],0xcccc
   1400210d0:	jmp    0x1400210e5
   1400210d2:	call   0x14000f5a8
   1400210d7:	mov    rbx,rax
   1400210da:	test   rax,rax
   1400210dd:	je     0x1400210ed
   1400210df:	mov    DWORD PTR [rax],0xdddd
   1400210e5:	add    rbx,0x10
   1400210e9:	jmp    0x1400210ed
   1400210eb:	xor    ebx,ebx
   1400210ed:	test   rbx,rbx
   1400210f0:	je     0x14002115f
   1400210f2:	mov    r9d,r15d
   1400210f5:	mov    r8,rdi
   1400210f8:	mov    edx,r13d
   1400210fb:	mov    rcx,r12
   1400210fe:	mov    DWORD PTR [rsp+0x28],esi
   140021102:	mov    QWORD PTR [rsp+0x20],rbx
   140021107:	call   0x14001f1c4
   14002110c:	xor    ecx,ecx
   14002110e:	test   eax,eax
   140021110:	je     0x14002114e
   140021112:	mov    eax,DWORD PTR [rbp+0x70]
   140021115:	xor    edx,edx
   140021117:	mov    QWORD PTR [rsp+0x38],rcx
   14002111c:	mov    r9d,esi
   14002111f:	mov    r8,rbx
   140021122:	mov    QWORD PTR [rsp+0x30],rcx
   140021127:	test   eax,eax
   140021129:	jne    0x140021136
   14002112b:	mov    DWORD PTR [rsp+0x28],ecx
   14002112f:	mov    QWORD PTR [rsp+0x20],rcx
   140021134:	jmp    0x140021143
   140021136:	mov    DWORD PTR [rsp+0x28],eax
   14002113a:	mov    rax,QWORD PTR [rbp+0x68]
   14002113e:	mov    QWORD PTR [rsp+0x20],rax
   140021143:	mov    ecx,r14d
   140021146:	call   QWORD PTR [rip+0x13f84]        # 0x1400350d0
   14002114c:	mov    esi,eax
   14002114e:	lea    rcx,[rbx-0x10]
   140021152:	cmp    DWORD PTR [rcx],0xdddd
   140021158:	jne    0x14002115f
   14002115a:	call   0x14000fb50
   14002115f:	lea    rcx,[rdi-0x10]
   140021163:	cmp    DWORD PTR [rcx],0xdddd
   140021169:	jne    0x140021170
   14002116b:	call   0x14000fb50
   140021170:	mov    eax,esi
   140021172:	mov    rcx,QWORD PTR [rbp+0x8]
   140021176:	xor    rcx,rbp
   140021179:	call   0x1400097d0
   14002117e:	mov    rbx,QWORD PTR [rbp+0x40]
   140021182:	mov    rsi,QWORD PTR [rbp+0x48]
   140021186:	mov    rdi,QWORD PTR [rbp+0x50]
   14002118a:	lea    rsp,[rbp+0x10]
   14002118e:	pop    r15
   140021190:	pop    r14
   140021192:	pop    r13
   140021194:	pop    r12
   140021196:	pop    rbp
   140021197:	ret    
   140021198:	mov    eax,edx
   14002119a:	test   edx,edx
   14002119c:	je     0x1400211ac
   14002119e:	dec    eax
   1400211a0:	cmp    BYTE PTR [rcx],0x0
   1400211a3:	je     0x1400211ae
   1400211a5:	inc    rcx
   1400211a8:	test   eax,eax
   1400211aa:	jne    0x14002119e
   1400211ac:	dec    eax
   1400211ae:	sub    edx,eax
   1400211b0:	lea    eax,[rdx-0x1]
   1400211b3:	ret    
   1400211b4:	mov    QWORD PTR [rsp+0x8],rbx
   1400211b9:	mov    QWORD PTR [rsp+0x10],rsi
   1400211be:	push   rdi
   1400211bf:	sub    rsp,0x70
   1400211c3:	mov    rsi,rdx
   1400211c6:	mov    rdx,rcx
   1400211c9:	lea    rcx,[rsp+0x50]
   1400211ce:	mov    rbx,r9
   1400211d1:	mov    edi,r8d
   1400211d4:	call   0x140007ff0
   1400211d9:	mov    eax,DWORD PTR [rsp+0xc0]
   1400211e0:	lea    rcx,[rsp+0x50]
   1400211e5:	mov    r9,rbx
   1400211e8:	mov    DWORD PTR [rsp+0x40],eax
   1400211ec:	mov    eax,DWORD PTR [rsp+0xb8]
   1400211f3:	mov    r8d,edi
   1400211f6:	mov    DWORD PTR [rsp+0x38],eax
   1400211fa:	mov    eax,DWORD PTR [rsp+0xb0]
   140021201:	mov    rdx,rsi
   140021204:	mov    DWORD PTR [rsp+0x30],eax
   140021208:	mov    rax,QWORD PTR [rsp+0xa8]
   140021210:	mov    QWORD PTR [rsp+0x28],rax
   140021215:	mov    eax,DWORD PTR [rsp+0xa0]
   14002121c:	mov    DWORD PTR [rsp+0x20],eax
   140021220:	call   0x140020eac
   140021225:	cmp    BYTE PTR [rsp+0x68],0x0
   14002122a:	je     0x140021238
   14002122c:	mov    rcx,QWORD PTR [rsp+0x60]
   140021231:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140021238:	lea    r11,[rsp+0x70]
   14002123d:	mov    rbx,QWORD PTR [r11+0x10]
   140021241:	mov    rsi,QWORD PTR [r11+0x18]
   140021245:	mov    rsp,r11
   140021248:	pop    rdi
   140021249:	ret    
   14002124a:	int3   
   14002124b:	int3   
   14002124c:	rex push rbp
   14002124e:	push   r12
   140021250:	push   r13
   140021252:	push   r14
   140021254:	push   r15
   140021256:	sub    rsp,0x40
   14002125a:	lea    rbp,[rsp+0x30]
   14002125f:	mov    QWORD PTR [rbp+0x40],rbx
   140021263:	mov    QWORD PTR [rbp+0x48],rsi
   140021267:	mov    QWORD PTR [rbp+0x50],rdi
   14002126b:	mov    rax,QWORD PTR [rip+0x23ffe]        # 0x140045270
   140021272:	xor    rax,rbp
   140021275:	mov    QWORD PTR [rbp+0x0],rax
   140021279:	mov    r14d,DWORD PTR [rbp+0x68]
   14002127d:	xor    edi,edi
   14002127f:	mov    r15d,r9d
   140021282:	mov    r12,r8
   140021285:	mov    r13d,edx
   140021288:	test   r14d,r14d
   14002128b:	jne    0x140021294
   14002128d:	mov    rax,QWORD PTR [rcx]
   140021290:	mov    r14d,DWORD PTR [rax+0x4]
   140021294:	neg    DWORD PTR [rbp+0x70]
   140021297:	mov    ecx,r14d
   14002129a:	mov    DWORD PTR [rsp+0x28],edi
   14002129e:	sbb    edx,edx
   1400212a0:	mov    QWORD PTR [rsp+0x20],rdi
   1400212a5:	and    edx,0x8
   1400212a8:	inc    edx
   1400212aa:	call   QWORD PTR [rip+0x13fa0]        # 0x140035250
   1400212b0:	movsxd rsi,eax
   1400212b3:	test   eax,eax
   1400212b5:	jne    0x1400212be
   1400212b7:	xor    eax,eax
   1400212b9:	jmp    0x14002139c
   1400212be:	jle    0x140021337
   1400212c0:	movabs rax,0x7ffffffffffffff0
   1400212ca:	cmp    rsi,rax
   1400212cd:	ja     0x140021337
   1400212cf:	lea    rcx,[rsi+rsi*1]
   1400212d3:	lea    rax,[rcx+0x10]
   1400212d7:	cmp    rax,rcx
   1400212da:	jbe    0x140021337
   1400212dc:	lea    rcx,[rsi*2+0x10]
   1400212e4:	cmp    rcx,0x400
   1400212eb:	ja     0x14002131e
   1400212ed:	lea    rax,[rcx+0xf]
   1400212f1:	cmp    rax,rcx
   1400212f4:	ja     0x140021300
   1400212f6:	movabs rax,0xffffffffffffff0
   140021300:	and    rax,0xfffffffffffffff0
   140021304:	call   0x140009b80
   140021309:	sub    rsp,rax
   14002130c:	lea    rbx,[rsp+0x30]
   140021311:	test   rbx,rbx
   140021314:	je     0x1400212b7
   140021316:	mov    DWORD PTR [rbx],0xcccc
   14002131c:	jmp    0x140021331
   14002131e:	call   0x14000f5a8
   140021323:	mov    rbx,rax
   140021326:	test   rax,rax
   140021329:	je     0x14002133a
   14002132b:	mov    DWORD PTR [rax],0xdddd
   140021331:	add    rbx,0x10
   140021335:	jmp    0x14002133a
   140021337:	mov    rbx,rdi
   14002133a:	test   rbx,rbx
   14002133d:	je     0x1400212b7
   140021343:	mov    r8,rsi
   140021346:	xor    edx,edx
   140021348:	mov    rcx,rbx
   14002134b:	add    r8,r8
   14002134e:	call   0x140009800
   140021353:	mov    r9d,r15d
   140021356:	mov    r8,r12
   140021359:	mov    edx,0x1
   14002135e:	mov    ecx,r14d
   140021361:	mov    DWORD PTR [rsp+0x28],esi
   140021365:	mov    QWORD PTR [rsp+0x20],rbx
   14002136a:	call   QWORD PTR [rip+0x13ee0]        # 0x140035250
   140021370:	test   eax,eax
   140021372:	je     0x140021389
   140021374:	mov    r9,QWORD PTR [rbp+0x60]
   140021378:	mov    r8d,eax
   14002137b:	mov    rdx,rbx
   14002137e:	mov    ecx,r13d
   140021381:	call   QWORD PTR [rip+0x13f41]        # 0x1400352c8
   140021387:	mov    edi,eax
   140021389:	lea    rcx,[rbx-0x10]
   14002138d:	cmp    DWORD PTR [rcx],0xdddd
   140021393:	jne    0x14002139a
   140021395:	call   0x14000fb50
   14002139a:	mov    eax,edi
   14002139c:	mov    rcx,QWORD PTR [rbp+0x0]
   1400213a0:	xor    rcx,rbp
   1400213a3:	call   0x1400097d0
   1400213a8:	mov    rbx,QWORD PTR [rbp+0x40]
   1400213ac:	mov    rsi,QWORD PTR [rbp+0x48]
   1400213b0:	mov    rdi,QWORD PTR [rbp+0x50]
   1400213b4:	lea    rsp,[rbp+0x10]
   1400213b8:	pop    r15
   1400213ba:	pop    r14
   1400213bc:	pop    r13
   1400213be:	pop    r12
   1400213c0:	pop    rbp
   1400213c1:	ret    
   1400213c2:	int3   
   1400213c3:	int3   
   1400213c4:	mov    QWORD PTR [rsp+0x8],rbx
   1400213c9:	mov    QWORD PTR [rsp+0x10],rsi
   1400213ce:	push   rdi
   1400213cf:	sub    rsp,0x60
   1400213d3:	mov    esi,edx
   1400213d5:	mov    rdx,rcx
   1400213d8:	lea    rcx,[rsp+0x40]
   1400213dd:	mov    ebx,r9d
   1400213e0:	mov    rdi,r8
   1400213e3:	call   0x140007ff0
   1400213e8:	mov    eax,DWORD PTR [rsp+0xa0]
   1400213ef:	lea    rcx,[rsp+0x40]
   1400213f4:	mov    r9d,ebx
   1400213f7:	mov    DWORD PTR [rsp+0x30],eax
   1400213fb:	mov    eax,DWORD PTR [rsp+0x98]
   140021402:	mov    r8,rdi
   140021405:	mov    DWORD PTR [rsp+0x28],eax
   140021409:	mov    rax,QWORD PTR [rsp+0x90]
   140021411:	mov    edx,esi
   140021413:	mov    QWORD PTR [rsp+0x20],rax
   140021418:	call   0x14002124c
   14002141d:	cmp    BYTE PTR [rsp+0x58],0x0
   140021422:	je     0x140021430
   140021424:	mov    rcx,QWORD PTR [rsp+0x50]
   140021429:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140021430:	mov    rbx,QWORD PTR [rsp+0x70]
   140021435:	mov    rsi,QWORD PTR [rsp+0x78]
   14002143a:	add    rsp,0x60
   14002143e:	pop    rdi
   14002143f:	ret    
   140021440:	sub    rsp,0x28
   140021444:	call   0x140010d3c
   140021449:	mov    rcx,QWORD PTR [rax+0xc0]
   140021450:	cmp    rcx,QWORD PTR [rip+0x24b89]        # 0x140045fe0
   140021457:	je     0x14002146f
   140021459:	mov    eax,DWORD PTR [rax+0xc8]
   14002145f:	test   DWORD PTR [rip+0x24cf3],eax        # 0x140046158
   140021465:	jne    0x14002146f
   140021467:	call   0x1400100d0
   14002146c:	mov    rcx,rax
   14002146f:	mov    rax,QWORD PTR [rcx+0x108]
   140021476:	add    rsp,0x28
   14002147a:	ret    
   14002147b:	int3   
   14002147c:	mov    rax,QWORD PTR [rip+0x2509d]        # 0x140046520
   140021483:	ret    
   140021484:	xor    r8d,r8d
   140021487:	mov    eax,r8d
   14002148a:	test   rdx,rdx
   14002148d:	je     0x1400214a1
   14002148f:	cmp    WORD PTR [rcx],r8w
   140021493:	je     0x1400214a1
   140021495:	inc    rax
   140021498:	add    rcx,0x2
   14002149c:	cmp    rax,rdx
   14002149f:	jb     0x14002148f
   1400214a1:	ret    
   1400214a2:	int3   
   1400214a3:	int3   
   1400214a4:	xor    eax,eax
   1400214a6:	ret    
   1400214a7:	int3   
   1400214a8:	sub    rsp,0x28
   1400214ac:	call   0x140010d3c
   1400214b1:	mov    rcx,QWORD PTR [rax+0xc0]
   1400214b8:	cmp    rcx,QWORD PTR [rip+0x24b21]        # 0x140045fe0
   1400214bf:	je     0x1400214d7
   1400214c1:	mov    eax,DWORD PTR [rax+0xc8]
   1400214c7:	test   DWORD PTR [rip+0x24c8b],eax        # 0x140046158
   1400214cd:	jne    0x1400214d7
   1400214cf:	call   0x1400100d0
   1400214d4:	mov    rcx,rax
   1400214d7:	mov    eax,DWORD PTR [rcx+0x4]
   1400214da:	add    rsp,0x28
   1400214de:	ret    
   1400214df:	int3   
   1400214e0:	sub    rsp,0x28
   1400214e4:	call   0x140010d3c
   1400214e9:	mov    rcx,QWORD PTR [rax+0xc0]
   1400214f0:	cmp    rcx,QWORD PTR [rip+0x24ae9]        # 0x140045fe0
   1400214f7:	je     0x14002150f
   1400214f9:	mov    eax,DWORD PTR [rax+0xc8]
   1400214ff:	test   DWORD PTR [rip+0x24c53],eax        # 0x140046158
   140021505:	jne    0x14002150f
   140021507:	call   0x1400100d0
   14002150c:	mov    rcx,rax
   14002150f:	mov    eax,DWORD PTR [rcx+0x8]
   140021512:	add    rsp,0x28
   140021516:	ret    
   140021517:	int3   
   140021518:	sub    rsp,0x28
   14002151c:	call   0x140010d3c
   140021521:	mov    rcx,QWORD PTR [rax+0xc0]
   140021528:	cmp    rcx,QWORD PTR [rip+0x24ab1]        # 0x140045fe0
   14002152f:	je     0x140021547
   140021531:	mov    eax,DWORD PTR [rax+0xc8]
   140021537:	test   DWORD PTR [rip+0x24c1b],eax        # 0x140046158
   14002153d:	jne    0x140021547
   14002153f:	call   0x1400100d0
   140021544:	mov    rcx,rax
   140021547:	lea    rax,[rcx+0x128]
   14002154e:	add    rsp,0x28
   140021552:	ret    
   140021553:	int3   
   140021554:	sub    rsp,0x28
   140021558:	call   0x140010d3c
   14002155d:	mov    rcx,QWORD PTR [rax+0xc0]
   140021564:	cmp    rcx,QWORD PTR [rip+0x24a75]        # 0x140045fe0
   14002156b:	je     0x140021583
   14002156d:	mov    eax,DWORD PTR [rax+0xc8]
   140021573:	test   DWORD PTR [rip+0x24bdf],eax        # 0x140046158
   140021579:	jne    0x140021583
   14002157b:	call   0x1400100d0
   140021580:	mov    rcx,rax
   140021583:	mov    eax,DWORD PTR [rcx+0xd4]
   140021589:	add    rsp,0x28
   14002158d:	ret    
   14002158e:	int3   
   14002158f:	int3   
   140021590:	test   rcx,rcx
   140021593:	je     0x140021554
   140021599:	mov    rax,QWORD PTR [rcx]
   14002159c:	mov    eax,DWORD PTR [rax+0xd4]
   1400215a2:	ret    
   1400215a3:	int3   
   1400215a4:	mov    r11,rsp
   1400215a7:	mov    QWORD PTR [r11+0x10],rbx
   1400215ab:	mov    QWORD PTR [r11+0x18],rbp
   1400215af:	mov    QWORD PTR [r11+0x20],rsi
   1400215b3:	push   rdi
   1400215b4:	push   r12
   1400215b6:	push   r13
   1400215b8:	push   r14
   1400215ba:	push   r15
   1400215bc:	sub    rsp,0x90
   1400215c3:	mov    rax,QWORD PTR [rip+0x23ca6]        # 0x140045270
   1400215ca:	xor    rax,rsp
   1400215cd:	mov    QWORD PTR [rsp+0x88],rax
   1400215d5:	mov    r8,QWORD PTR [rcx+0x138]
   1400215dc:	xor    ebx,ebx
   1400215de:	mov    rdi,rcx
   1400215e1:	mov    QWORD PTR [rsp+0x58],rbx
   1400215e6:	mov    r15d,ebx
   1400215e9:	mov    r12d,ebx
   1400215ec:	mov    r13d,ebx
   1400215ef:	mov    ebp,ebx
   1400215f1:	mov    QWORD PTR [r11-0x58],rcx
   1400215f5:	mov    QWORD PTR [r11-0x50],rbx
   1400215f9:	test   r8,r8
   1400215fc:	je     0x140021942
   140021602:	lea    r14,[rcx+0x4]
   140021606:	lea    esi,[rbx+0x1]
   140021609:	cmp    DWORD PTR [r14],ebx
   14002160c:	jne    0x14002162c
   14002160e:	lea    rcx,[r11-0x58]
   140021612:	xor    edx,edx
   140021614:	mov    r9d,0x1004
   14002161a:	mov    QWORD PTR [rsp+0x20],r14
   14002161f:	call   0x14000f334
   140021624:	test   eax,eax
   140021626:	jne    0x140021912
   14002162c:	mov    ecx,0x4
   140021631:	call   0x14000fc4c
   140021636:	mov    ebp,0x180
   14002163b:	mov    edx,0x2
   140021640:	mov    ecx,ebp
   140021642:	mov    QWORD PTR [rsp+0x58],rax
   140021647:	call   0x14000fbcc
   14002164c:	mov    rdx,rsi
   14002164f:	mov    ecx,ebp
   140021651:	mov    r15,rax
   140021654:	call   0x14000fbcc
   140021659:	mov    rdx,rsi
   14002165c:	mov    ecx,ebp
   14002165e:	mov    r12,rax
   140021661:	call   0x14000fbcc
   140021666:	lea    ecx,[rbp-0x7f]
   140021669:	mov    rdx,rsi
   14002166c:	mov    r13,rax
   14002166f:	call   0x14000fbcc
   140021674:	mov    rbp,rax
   140021677:	mov    rax,QWORD PTR [rsp+0x58]
   14002167c:	test   rax,rax
   14002167f:	je     0x140021912
   140021685:	test   r15,r15
   140021688:	je     0x140021912
   14002168e:	test   rbp,rbp
   140021691:	je     0x140021912
   140021697:	test   r12,r12
   14002169a:	je     0x140021912
   1400216a0:	test   r13,r13
   1400216a3:	je     0x140021912
   1400216a9:	mov    DWORD PTR [rax],ebx
   1400216ab:	mov    rcx,rbp
   1400216ae:	mov    eax,ebx
   1400216b0:	mov    BYTE PTR [rcx],al
   1400216b2:	add    eax,esi
   1400216b4:	add    rcx,rsi
   1400216b7:	cmp    eax,0x100
   1400216bc:	jl     0x1400216b0
   1400216be:	mov    ecx,DWORD PTR [r14]
   1400216c1:	lea    rdx,[rsp+0x70]
   1400216c6:	call   QWORD PTR [rip+0x13bf4]        # 0x1400352c0
   1400216cc:	test   eax,eax
   1400216ce:	je     0x140021912
   1400216d4:	cmp    DWORD PTR [rsp+0x70],0x5
   1400216d9:	ja     0x140021912
   1400216df:	movzx  eax,WORD PTR [rsp+0x70]
   1400216e4:	mov    rdx,QWORD PTR [rdi+0x138]
   1400216eb:	mov    DWORD PTR [rsp+0x40],ebx
   1400216ef:	mov    DWORD PTR [rsp+0x50],eax
   1400216f3:	mov    eax,DWORD PTR [r14]
   1400216f6:	lea    rcx,[r12+0x81]
   1400216fe:	mov    DWORD PTR [rsp+0x38],eax
   140021702:	mov    eax,0xff
   140021707:	lea    r9,[rbp+0x1]
   14002170b:	mov    DWORD PTR [rsp+0x30],eax
   14002170f:	mov    QWORD PTR [rsp+0x28],rcx
   140021714:	lea    r8d,[rax+0x1]
   140021718:	xor    ecx,ecx
   14002171a:	mov    DWORD PTR [rsp+0x20],eax
   14002171e:	call   0x1400211b4
   140021723:	test   eax,eax
   140021725:	je     0x140021912
   14002172b:	mov    eax,DWORD PTR [r14]
   14002172e:	mov    rdx,QWORD PTR [rdi+0x138]
   140021735:	mov    DWORD PTR [rsp+0x40],ebx
   140021739:	mov    DWORD PTR [rsp+0x38],eax
   14002173d:	mov    eax,0xff
   140021742:	lea    rcx,[r13+0x81]
   140021749:	mov    DWORD PTR [rsp+0x30],eax
   14002174d:	mov    QWORD PTR [rsp+0x28],rcx
   140021752:	lea    r9,[rbp+0x1]
   140021756:	xor    ecx,ecx
   140021758:	mov    r8d,0x200
   14002175e:	mov    DWORD PTR [rsp+0x20],eax
   140021762:	call   0x1400211b4
   140021767:	test   eax,eax
   140021769:	je     0x140021912
   14002176f:	cmp    DWORD PTR [rsp+0x50],esi
   140021773:	jle    0x1400217a3
   140021775:	cmp    BYTE PTR [rsp+0x76],bl
   140021779:	je     0x1400217a3
   14002177b:	lea    rcx,[rsp+0x77]
   140021780:	cmp    BYTE PTR [rcx],bl
   140021782:	je     0x1400217a3
   140021784:	movzx  edx,BYTE PTR [rcx-0x1]
   140021788:	jmp    0x140021793
   14002178a:	movsxd rax,edx
   14002178d:	add    edx,esi
   14002178f:	mov    BYTE PTR [rax+rbp*1],0x20
   140021793:	movzx  eax,BYTE PTR [rcx]
   140021796:	cmp    edx,eax
   140021798:	jle    0x14002178a
   14002179a:	add    rcx,0x2
   14002179e:	cmp    BYTE PTR [rcx-0x1],bl
   1400217a1:	jne    0x140021780
   1400217a3:	mov    eax,DWORD PTR [r14]
   1400217a6:	lea    rcx,[r15+0x100]
   1400217ad:	mov    DWORD PTR [rsp+0x30],ebx
   1400217b1:	mov    DWORD PTR [rsp+0x28],eax
   1400217b5:	mov    QWORD PTR [rsp+0x20],rcx
   1400217ba:	mov    r9d,0x100
   1400217c0:	xor    ecx,ecx
   1400217c2:	mov    r8,rbp
   1400217c5:	mov    edx,esi
   1400217c7:	call   0x1400213c4
   1400217cc:	test   eax,eax
   1400217ce:	je     0x140021912
   1400217d4:	lea    r14,[r15+0xfe]
   1400217db:	mov    WORD PTR [r14],bx
   1400217df:	mov    BYTE PTR [r12+0x7f],bl
   1400217e4:	mov    BYTE PTR [r13+0x7f],bl
   1400217e8:	mov    BYTE PTR [r12+0x80],bl
   1400217f0:	mov    BYTE PTR [r13+0x80],bl
   1400217f7:	cmp    DWORD PTR [rsp+0x50],esi
   1400217fb:	jle    0x140021836
   1400217fd:	cmp    BYTE PTR [rsp+0x76],bl
   140021801:	je     0x140021836
   140021803:	lea    rcx,[rsp+0x77]
   140021808:	cmp    BYTE PTR [rcx],bl
   14002180a:	je     0x140021836
   14002180c:	movzx  edx,BYTE PTR [rcx-0x1]
   140021810:	jmp    0x140021826
   140021812:	movsxd rax,edx
   140021815:	mov    r8d,0x8000
   14002181b:	add    edx,esi
   14002181d:	mov    WORD PTR [r15+rax*2+0x100],r8w
   140021826:	movzx  eax,BYTE PTR [rcx]
   140021829:	cmp    edx,eax
   14002182b:	jle    0x140021812
   14002182d:	add    rcx,0x2
   140021831:	cmp    BYTE PTR [rcx-0x1],bl
   140021834:	jne    0x140021808
   140021836:	lea    rdx,[r15+0x200]
   14002183d:	mov    r8d,0xfe
   140021843:	mov    rcx,r15
   140021846:	call   0x14000b1c0
   14002184b:	lea    rdx,[r12+0x100]
   140021853:	mov    r8d,0x7f
   140021859:	mov    rcx,r12
   14002185c:	call   0x14000b1c0
   140021861:	lea    rdx,[r13+0x100]
   140021868:	mov    r8d,0x7f
   14002186e:	mov    rcx,r13
   140021871:	call   0x14000b1c0
   140021876:	mov    rcx,QWORD PTR [rdi+0xf8]
   14002187d:	test   rcx,rcx
   140021880:	je     0x1400218c6
   140021882:	lock dec DWORD PTR [rcx]
   140021885:	jne    0x1400218c6
   140021887:	mov    rcx,QWORD PTR [rdi+0x100]
   14002188e:	sub    rcx,0xfe
   140021895:	call   0x14000fb50
   14002189a:	mov    rcx,QWORD PTR [rdi+0x110]
   1400218a1:	add    rcx,0xffffffffffffff80
   1400218a5:	call   0x14000fb50
   1400218aa:	mov    rcx,QWORD PTR [rdi+0x118]
   1400218b1:	add    rcx,0xffffffffffffff80
   1400218b5:	call   0x14000fb50
   1400218ba:	mov    rcx,QWORD PTR [rdi+0xf8]
   1400218c1:	call   0x14000fb50
   1400218c6:	mov    rax,QWORD PTR [rsp+0x58]
   1400218cb:	mov    DWORD PTR [rax],esi
   1400218cd:	mov    QWORD PTR [rdi+0xf8],rax
   1400218d4:	lea    rax,[r15+0x100]
   1400218db:	mov    QWORD PTR [rdi+0x108],rax
   1400218e2:	lea    rax,[r12+0x80]
   1400218ea:	mov    QWORD PTR [rdi+0x100],r14
   1400218f1:	mov    QWORD PTR [rdi+0x110],rax
   1400218f8:	lea    rax,[r13+0x80]
   1400218ff:	mov    QWORD PTR [rdi+0x118],rax
   140021906:	mov    eax,DWORD PTR [rsp+0x50]
   14002190a:	mov    DWORD PTR [rdi+0xd4],eax
   140021910:	jmp    0x140021936
   140021912:	mov    rcx,QWORD PTR [rsp+0x58]
   140021917:	call   0x14000fb50
   14002191c:	mov    rcx,r15
   14002191f:	call   0x14000fb50
   140021924:	mov    rcx,r12
   140021927:	call   0x14000fb50
   14002192c:	mov    rcx,r13
   14002192f:	call   0x14000fb50
   140021934:	mov    ebx,esi
   140021936:	mov    rcx,rbp
   140021939:	call   0x14000fb50
   14002193e:	mov    eax,ebx
   140021940:	jmp    0x140021996
   140021942:	mov    rax,QWORD PTR [rcx+0xf8]
   140021949:	test   rax,rax
   14002194c:	je     0x140021951
   14002194e:	lock dec DWORD PTR [rax]
   140021951:	lea    rax,[rip+0x1b368]        # 0x14003ccc0
   140021958:	mov    esi,0x1
   14002195d:	mov    QWORD PTR [rcx+0xf8],rbx
   140021964:	mov    QWORD PTR [rcx+0x108],rax
   14002196b:	lea    rax,[rip+0x1b7de]        # 0x14003d150
   140021972:	mov    QWORD PTR [rcx+0x100],rbx
   140021979:	mov    QWORD PTR [rcx+0x110],rax
   140021980:	lea    rax,[rip+0x1b949]        # 0x14003d2d0
   140021987:	mov    DWORD PTR [rcx+0xd4],esi
   14002198d:	mov    QWORD PTR [rcx+0x118],rax
   140021994:	xor    eax,eax
   140021996:	mov    rcx,QWORD PTR [rsp+0x88]
   14002199e:	xor    rcx,rsp
   1400219a1:	call   0x1400097d0
   1400219a6:	lea    r11,[rsp+0x90]
   1400219ae:	mov    rbx,QWORD PTR [r11+0x38]
   1400219b2:	mov    rbp,QWORD PTR [r11+0x40]
   1400219b6:	mov    rsi,QWORD PTR [r11+0x48]
   1400219ba:	mov    rsp,r11
   1400219bd:	pop    r15
   1400219bf:	pop    r14
   1400219c1:	pop    r13
   1400219c3:	pop    r12
   1400219c5:	pop    rdi
   1400219c6:	ret    
   1400219c7:	int3   
   1400219c8:	int3   
   1400219c9:	int3   
   1400219ca:	int3   
   1400219cb:	int3   
   1400219cc:	int3   
   1400219cd:	int3   
   1400219ce:	int3   
   1400219cf:	int3   
   1400219d0:	int3   
   1400219d1:	int3   
   1400219d2:	int3   
   1400219d3:	int3   
   1400219d4:	int3   
   1400219d5:	int3   
   1400219d6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400219e0:	sub    rdx,rcx
   1400219e3:	cmp    r8,0x8
   1400219e7:	jb     0x140021a0b
   1400219e9:	test   cl,0x7
   1400219ec:	je     0x140021a02
   1400219ee:	xchg   ax,ax
   1400219f0:	mov    al,BYTE PTR [rcx]
   1400219f2:	cmp    al,BYTE PTR [rdx+rcx*1]
   1400219f5:	jne    0x140021a23
   1400219f7:	inc    rcx
   1400219fa:	dec    r8
   1400219fd:	test   cl,0x7
   140021a00:	jne    0x1400219f0
   140021a02:	mov    r9,r8
   140021a05:	shr    r9,0x3
   140021a09:	jne    0x140021a2a
   140021a0b:	test   r8,r8
   140021a0e:	je     0x140021a1f
   140021a10:	mov    al,BYTE PTR [rcx]
   140021a12:	cmp    al,BYTE PTR [rdx+rcx*1]
   140021a15:	jne    0x140021a23
   140021a17:	inc    rcx
   140021a1a:	dec    r8
   140021a1d:	jne    0x140021a10
   140021a1f:	xor    rax,rax
   140021a22:	ret    
   140021a23:	sbb    eax,eax
   140021a25:	sbb    eax,0xffffffff
   140021a28:	ret    
   140021a29:	nop
   140021a2a:	shr    r9,0x2
   140021a2e:	je     0x140021a67
   140021a30:	mov    rax,QWORD PTR [rcx]
   140021a33:	cmp    rax,QWORD PTR [rdx+rcx*1]
   140021a37:	jne    0x140021a94
   140021a39:	mov    rax,QWORD PTR [rcx+0x8]
   140021a3d:	cmp    rax,QWORD PTR [rdx+rcx*1+0x8]
   140021a42:	jne    0x140021a90
   140021a44:	mov    rax,QWORD PTR [rcx+0x10]
   140021a48:	cmp    rax,QWORD PTR [rdx+rcx*1+0x10]
   140021a4d:	jne    0x140021a8c
   140021a4f:	mov    rax,QWORD PTR [rcx+0x18]
   140021a53:	cmp    rax,QWORD PTR [rdx+rcx*1+0x18]
   140021a58:	jne    0x140021a88
   140021a5a:	add    rcx,0x20
   140021a5e:	dec    r9
   140021a61:	jne    0x140021a30
   140021a63:	and    r8,0x1f
   140021a67:	mov    r9,r8
   140021a6a:	shr    r9,0x3
   140021a6e:	je     0x140021a0b
   140021a70:	mov    rax,QWORD PTR [rcx]
   140021a73:	cmp    rax,QWORD PTR [rdx+rcx*1]
   140021a77:	jne    0x140021a94
   140021a79:	add    rcx,0x8
   140021a7d:	dec    r9
   140021a80:	jne    0x140021a70
   140021a82:	and    r8,0x7
   140021a86:	jmp    0x140021a0b
   140021a88:	add    rcx,0x8
   140021a8c:	add    rcx,0x8
   140021a90:	add    rcx,0x8
   140021a94:	mov    rcx,QWORD PTR [rcx+rdx*1]
   140021a98:	bswap  rax
   140021a9b:	bswap  rcx
   140021a9e:	cmp    rax,rcx
   140021aa1:	sbb    eax,eax
   140021aa3:	sbb    eax,0xffffffff
   140021aa6:	ret    
   140021aa7:	int3   
   140021aa8:	movzx  r8d,WORD PTR [rdx]
   140021aac:	movzx  eax,WORD PTR [rcx]
   140021aaf:	sub    eax,r8d
   140021ab2:	jne    0x140021ace
   140021ab4:	sub    rcx,rdx
   140021ab7:	test   r8w,r8w
   140021abb:	je     0x140021ace
   140021abd:	add    rdx,0x2
   140021ac1:	movzx  r8d,WORD PTR [rdx]
   140021ac5:	movzx  eax,WORD PTR [rcx+rdx*1]
   140021ac9:	sub    eax,r8d
   140021acc:	je     0x140021ab7
   140021ace:	test   eax,eax
   140021ad0:	jns    0x140021ad6
   140021ad2:	or     eax,0xffffffff
   140021ad5:	ret    
   140021ad6:	mov    ecx,0x1
   140021adb:	test   eax,eax
   140021add:	cmovg  eax,ecx
   140021ae0:	ret    
   140021ae1:	int3   
   140021ae2:	int3   
   140021ae3:	int3   
   140021ae4:	xor    r10d,r10d
   140021ae7:	mov    r9,rdx
   140021aea:	mov    rax,rcx
   140021aed:	cmp    WORD PTR [rcx],r10w
   140021af1:	je     0x140021b1c
   140021af3:	mov    r8,r9
   140021af6:	cmp    WORD PTR [r9],r10w
   140021afa:	je     0x140021b12
   140021afc:	movzx  edx,WORD PTR [r9]
   140021b00:	cmp    dx,WORD PTR [rax]
   140021b03:	je     0x140021b1c
   140021b05:	add    r8,0x2
   140021b09:	movzx  edx,WORD PTR [r8]
   140021b0d:	test   dx,dx
   140021b10:	jne    0x140021b00
   140021b12:	add    rax,0x2
   140021b16:	cmp    WORD PTR [rax],r10w
   140021b1a:	jmp    0x140021af1
   140021b1c:	sub    rax,rcx
   140021b1f:	sar    rax,1
   140021b22:	ret    
   140021b23:	int3   
   140021b24:	test   r8,r8
   140021b27:	jne    0x140021b41
   140021b29:	xor    eax,eax
   140021b2b:	ret    
   140021b2c:	movzx  eax,WORD PTR [rcx]
   140021b2f:	test   ax,ax
   140021b32:	je     0x140021b46
   140021b34:	cmp    ax,WORD PTR [rdx]
   140021b37:	jne    0x140021b46
   140021b39:	add    rcx,0x2
   140021b3d:	add    rdx,0x2
   140021b41:	dec    r8
   140021b44:	jne    0x140021b2c
   140021b46:	movzx  eax,WORD PTR [rcx]
   140021b49:	movzx  ecx,WORD PTR [rdx]
   140021b4c:	sub    eax,ecx
   140021b4e:	ret    
   140021b4f:	int3   
   140021b50:	mov    r9,rdx
   140021b53:	movzx  eax,WORD PTR [rcx]
   140021b56:	test   ax,ax
   140021b59:	je     0x140021b85
   140021b5b:	cmp    WORD PTR [r9],0x0
   140021b60:	mov    r8,r9
   140021b63:	je     0x140021b7b
   140021b65:	movzx  edx,WORD PTR [r9]
   140021b69:	cmp    dx,ax
   140021b6c:	je     0x140021b81
   140021b6e:	add    r8,0x2
   140021b72:	movzx  edx,WORD PTR [r8]
   140021b76:	test   dx,dx
   140021b79:	jne    0x140021b69
   140021b7b:	add    rcx,0x2
   140021b7f:	jmp    0x140021b53
   140021b81:	mov    rax,rcx
   140021b84:	ret    
   140021b85:	xor    eax,eax
   140021b87:	ret    
   140021b88:	rex push rbx
   140021b8a:	sub    rsp,0xf0
   140021b91:	mov    rax,QWORD PTR [rip+0x236d8]        # 0x140045270
   140021b98:	xor    rax,rsp
   140021b9b:	mov    QWORD PTR [rsp+0xe0],rax
   140021ba3:	or     DWORD PTR [rcx+0x10],0x104
   140021baa:	mov    rbx,rcx
   140021bad:	lea    rcx,[rsp+0x30]
   140021bb2:	mov    edx,0x55
   140021bb7:	call   0x14001f14c
   140021bbc:	cmp    eax,0x1
   140021bbf:	jle    0x140021be9
   140021bc1:	lea    rcx,[rsp+0x30]
   140021bc6:	call   0x14000cad8
   140021bcb:	lea    rcx,[rbx+0x258]
   140021bd2:	lea    r8,[rsp+0x30]
   140021bd7:	lea    r9,[rax+0x1]
   140021bdb:	mov    edx,0x55
   140021be0:	call   0x14000820c
   140021be5:	test   eax,eax
   140021be7:	jne    0x140021c02
   140021be9:	mov    rcx,QWORD PTR [rsp+0xe0]
   140021bf1:	xor    rcx,rsp
   140021bf4:	call   0x1400097d0
   140021bf9:	add    rsp,0xf0
   140021c00:	pop    rbx
   140021c01:	ret    
   140021c02:	and    QWORD PTR [rsp+0x20],0x0
   140021c08:	xor    r9d,r9d
   140021c0b:	xor    r8d,r8d
   140021c0e:	xor    edx,edx
   140021c10:	xor    ecx,ecx
   140021c12:	call   0x14000b908
   140021c17:	int3   
   140021c18:	rex push rbx
   140021c1a:	sub    rsp,0x20
   140021c1e:	mov    rbx,rcx
   140021c21:	mov    rcx,QWORD PTR [rcx]
   140021c24:	call   0x14000cad8
   140021c29:	mov    rcx,QWORD PTR [rbx+0x8]
   140021c2d:	xor    edx,edx
   140021c2f:	cmp    rax,0x3
   140021c33:	sete   dl
   140021c36:	mov    DWORD PTR [rbx+0x18],edx
   140021c39:	call   0x14000cad8
   140021c3e:	xor    ecx,ecx
   140021c40:	cmp    rax,0x3
   140021c44:	sete   cl
   140021c47:	cmp    DWORD PTR [rbx+0x18],0x0
   140021c4b:	mov    DWORD PTR [rbx+0x1c],ecx
   140021c4e:	je     0x140021c57
   140021c50:	mov    edx,0x2
   140021c55:	jmp    0x140021c90
   140021c57:	mov    rcx,QWORD PTR [rbx]
   140021c5a:	xor    r9d,r9d
   140021c5d:	test   rcx,rcx
   140021c60:	jne    0x140021c66
   140021c62:	xor    edx,edx
   140021c64:	jmp    0x140021c90
   140021c66:	mov    edx,0x2
   140021c6b:	movzx  r8d,WORD PTR [rcx]
   140021c6f:	add    rcx,rdx
   140021c72:	lea    eax,[r8-0x41]
   140021c76:	cmp    ax,0x19
   140021c7a:	jbe    0x140021c88
   140021c7c:	sub    r8w,0x61
   140021c81:	cmp    r8w,0x19
   140021c86:	ja     0x140021c8d
   140021c88:	inc    r9d
   140021c8b:	jmp    0x140021c6b
   140021c8d:	mov    edx,r9d
   140021c90:	xor    r8d,r8d
   140021c93:	mov    DWORD PTR [rbx+0x14],edx
   140021c96:	lea    rcx,[rip+0xe3]        # 0x140021d80
   140021c9d:	lea    edx,[r8+0x3]
   140021ca1:	call   0x14001efc4
   140021ca6:	test   DWORD PTR [rbx+0x10],0x100
   140021cad:	je     0x140021cbe
   140021caf:	test   DWORD PTR [rbx+0x10],0x200
   140021cb6:	je     0x140021cbe
   140021cb8:	test   BYTE PTR [rbx+0x10],0x7
   140021cbc:	jne    0x140021cc2
   140021cbe:	and    DWORD PTR [rbx+0x10],0x0
   140021cc2:	add    rsp,0x20
   140021cc6:	pop    rbx
   140021cc7:	ret    
   140021cc8:	rex push rbx
   140021cca:	sub    rsp,0x20
   140021cce:	mov    rbx,rcx
   140021cd1:	mov    rcx,QWORD PTR [rcx]
   140021cd4:	call   0x14000cad8
   140021cd9:	xor    edx,edx
   140021cdb:	cmp    rax,0x3
   140021cdf:	sete   dl
   140021ce2:	mov    DWORD PTR [rbx+0x18],edx
   140021ce5:	test   edx,edx
   140021ce7:	je     0x140021cf0
   140021ce9:	mov    edx,0x2
   140021cee:	jmp    0x140021d29
   140021cf0:	mov    rcx,QWORD PTR [rbx]
   140021cf3:	xor    r9d,r9d
   140021cf6:	test   rcx,rcx
   140021cf9:	jne    0x140021cff
   140021cfb:	xor    edx,edx
   140021cfd:	jmp    0x140021d29
   140021cff:	mov    edx,0x2
   140021d04:	movzx  r8d,WORD PTR [rcx]
   140021d08:	add    rcx,rdx
   140021d0b:	lea    eax,[r8-0x41]
   140021d0f:	cmp    ax,0x19
   140021d13:	jbe    0x140021d21
   140021d15:	sub    r8w,0x61
   140021d1a:	cmp    r8w,0x19
   140021d1f:	ja     0x140021d26
   140021d21:	inc    r9d
   140021d24:	jmp    0x140021d04
   140021d26:	mov    edx,r9d
   140021d29:	xor    r8d,r8d
   140021d2c:	mov    DWORD PTR [rbx+0x14],edx
   140021d2f:	lea    rcx,[rip+0x3d6]        # 0x14002210c
   140021d36:	lea    edx,[r8+0x3]
   140021d3a:	call   0x14001efc4
   140021d3f:	test   BYTE PTR [rbx+0x10],0x4
   140021d43:	jne    0x140021d49
   140021d45:	and    DWORD PTR [rbx+0x10],0x0
   140021d49:	add    rsp,0x20
   140021d4d:	pop    rbx
   140021d4e:	ret    
   140021d4f:	int3   
   140021d50:	xor    edx,edx
   140021d52:	test   rcx,rcx
   140021d55:	jne    0x140021d5a
   140021d57:	xor    eax,eax
   140021d59:	ret    
   140021d5a:	movzx  r8d,WORD PTR [rcx]
   140021d5e:	add    rcx,0x2
   140021d62:	lea    eax,[r8-0x41]
   140021d66:	cmp    ax,0x19
   140021d6a:	jbe    0x140021d78
   140021d6c:	sub    r8w,0x61
   140021d71:	cmp    r8w,0x19
   140021d76:	ja     0x140021d7c
   140021d78:	inc    edx
   140021d7a:	jmp    0x140021d5a
   140021d7c:	mov    eax,edx
   140021d7e:	ret    
   140021d7f:	int3   
   140021d80:	mov    QWORD PTR [rsp+0x10],rbx
   140021d85:	mov    QWORD PTR [rsp+0x18],rbp
   140021d8a:	push   rsi
   140021d8b:	push   rdi
   140021d8c:	push   r14
   140021d8e:	sub    rsp,0xc0
   140021d95:	mov    rax,QWORD PTR [rip+0x234d4]        # 0x140045270
   140021d9c:	xor    rax,rsp
   140021d9f:	mov    QWORD PTR [rsp+0xb0],rax
   140021da7:	mov    rdi,rcx
   140021daa:	call   0x140010d3c
   140021daf:	mov    esi,0x40
   140021db4:	lea    rbx,[rax+0x140]
   140021dbb:	lea    r8,[rsp+0x30]
   140021dc0:	mov    r9d,esi
   140021dc3:	mov    ecx,DWORD PTR [rbx+0x1c]
   140021dc6:	neg    ecx
   140021dc8:	mov    rcx,rdi
   140021dcb:	sbb    edx,edx
   140021dcd:	and    edx,0xfffff005
   140021dd3:	add    edx,0x1002
   140021dd9:	call   0x14001f084
   140021dde:	xor    ebp,ebp
   140021de0:	test   eax,eax
   140021de2:	jne    0x140021df1
   140021de4:	mov    DWORD PTR [rbx+0x10],ebp
   140021de7:	mov    eax,0x1
   140021dec:	jmp    0x140022065
   140021df1:	mov    rcx,QWORD PTR [rbx+0x8]
   140021df5:	lea    rdx,[rsp+0x30]
   140021dfa:	call   0x1400082d8
   140021dff:	mov    r14d,0x55
   140021e05:	test   eax,eax
   140021e07:	jne    0x140021f02
   140021e0d:	mov    eax,DWORD PTR [rbx+0x18]
   140021e10:	lea    r8,[rsp+0x30]
   140021e15:	mov    r9d,esi
   140021e18:	neg    eax
   140021e1a:	mov    rcx,rdi
   140021e1d:	sbb    edx,edx
   140021e1f:	and    edx,0xfffff002
   140021e25:	add    edx,0x1001
   140021e2b:	call   0x14001f084
   140021e30:	test   eax,eax
   140021e32:	je     0x140021de4
   140021e34:	mov    rcx,QWORD PTR [rbx]
   140021e37:	lea    rdx,[rsp+0x30]
   140021e3c:	call   0x1400082d8
   140021e41:	test   eax,eax
   140021e43:	jne    0x140021e77
   140021e45:	or     DWORD PTR [rbx+0x10],0x304
   140021e4c:	mov    rcx,rdi
   140021e4f:	call   0x14000cad8
   140021e54:	lea    rcx,[rbx+0x258]
   140021e5b:	mov    r8,rdi
   140021e5e:	lea    r9,[rax+0x1]
   140021e62:	mov    edx,r14d
   140021e65:	call   0x14000820c
   140021e6a:	test   eax,eax
   140021e6c:	je     0x140021f02
   140021e72:	jmp    0x14002208d
   140021e77:	test   BYTE PTR [rbx+0x10],0x2
   140021e7b:	jne    0x140021f02
   140021e81:	cmp    DWORD PTR [rbx+0x14],ebp
   140021e84:	je     0x140021ec6
   140021e86:	movsxd r8,DWORD PTR [rbx+0x14]
   140021e8a:	mov    rcx,QWORD PTR [rbx]
   140021e8d:	lea    rdx,[rsp+0x30]
   140021e92:	call   0x14002beb0
   140021e97:	test   eax,eax
   140021e99:	jne    0x140021ec6
   140021e9b:	or     DWORD PTR [rbx+0x10],0x2
   140021e9f:	mov    rcx,rdi
   140021ea2:	call   0x14000cad8
   140021ea7:	lea    rcx,[rbx+0x258]
   140021eae:	mov    r8,rdi
   140021eb1:	lea    r9,[rax+0x1]
   140021eb5:	mov    rdx,r14
   140021eb8:	call   0x14000820c
   140021ebd:	test   eax,eax
   140021ebf:	je     0x140021f02
   140021ec1:	jmp    0x1400220a2
   140021ec6:	test   BYTE PTR [rbx+0x10],0x1
   140021eca:	jne    0x140021f02
   140021ecc:	mov    rcx,rdi
   140021ecf:	call   0x1400222a0
   140021ed4:	test   eax,eax
   140021ed6:	je     0x140021f02
   140021ed8:	or     DWORD PTR [rbx+0x10],0x1
   140021edc:	mov    rcx,rdi
   140021edf:	call   0x14000cad8
   140021ee4:	lea    rcx,[rbx+0x258]
   140021eeb:	mov    r8,rdi
   140021eee:	lea    r9,[rax+0x1]
   140021ef2:	mov    rdx,r14
   140021ef5:	call   0x14000820c
   140021efa:	test   eax,eax
   140021efc:	jne    0x1400220b7
   140021f02:	mov    eax,DWORD PTR [rbx+0x10]
   140021f05:	mov    ecx,0x300
   140021f0a:	and    eax,ecx
   140021f0c:	cmp    eax,ecx
   140021f0e:	je     0x14002205a
   140021f14:	mov    eax,DWORD PTR [rbx+0x18]
   140021f17:	lea    r8,[rsp+0x30]
   140021f1c:	mov    r9d,0x80
   140021f22:	neg    eax
   140021f24:	mov    rcx,rdi
   140021f27:	sbb    edx,edx
   140021f29:	and    edx,0xfffff002
   140021f2f:	add    edx,0x1001
   140021f35:	call   0x14001f084
   140021f3a:	test   eax,eax
   140021f3c:	je     0x140021de4
   140021f42:	mov    rcx,QWORD PTR [rbx]
   140021f45:	lea    rdx,[rsp+0x30]
   140021f4a:	call   0x1400082d8
   140021f4f:	test   eax,eax
   140021f51:	jne    0x14002205a
   140021f57:	bts    DWORD PTR [rbx+0x10],0x9
   140021f5c:	cmp    DWORD PTR [rbx+0x18],ebp
   140021f5f:	je     0x140021f9d
   140021f61:	bts    DWORD PTR [rbx+0x10],0x8
   140021f66:	lea    rsi,[rbx+0x258]
   140021f6d:	cmp    WORD PTR [rsi],bp
   140021f70:	jne    0x14002205a
   140021f76:	mov    rcx,rdi
   140021f79:	call   0x14000cad8
   140021f7e:	mov    r8,rdi
   140021f81:	mov    rdx,r14
   140021f84:	lea    r9,[rax+0x1]
   140021f88:	mov    rcx,rsi
   140021f8b:	call   0x14000820c
   140021f90:	test   eax,eax
   140021f92:	je     0x14002205a
   140021f98:	jmp    0x1400220cc
   140021f9d:	cmp    DWORD PTR [rbx+0x14],ebp
   140021fa0:	je     0x140022027
   140021fa6:	mov    rcx,QWORD PTR [rbx]
   140021fa9:	call   0x14000cad8
   140021fae:	cmp    eax,DWORD PTR [rbx+0x14]
   140021fb1:	jne    0x140022027
   140021fb3:	mov    rcx,rdi
   140021fb6:	call   0x1400222a0
   140021fbb:	test   eax,eax
   140021fbd:	jne    0x140021ff3
   140021fbf:	mov    rcx,QWORD PTR [rbx]
   140021fc2:	mov    esi,ebp
   140021fc4:	test   rcx,rcx
   140021fc7:	je     0x140021fe7
   140021fc9:	movzx  edx,WORD PTR [rcx]
   140021fcc:	add    rcx,0x2
   140021fd0:	lea    eax,[rdx-0x41]
   140021fd3:	cmp    ax,0x19
   140021fd7:	jbe    0x140021fe3
   140021fd9:	sub    dx,0x61
   140021fdd:	cmp    dx,0x19
   140021fe1:	ja     0x140021fe7
   140021fe3:	inc    esi
   140021fe5:	jmp    0x140021fc9
   140021fe7:	mov    rcx,QWORD PTR [rbx]
   140021fea:	call   0x14000cad8
   140021fef:	cmp    esi,eax
   140021ff1:	je     0x14002205a
   140021ff3:	bts    DWORD PTR [rbx+0x10],0x8
   140021ff8:	lea    rsi,[rbx+0x258]
   140021fff:	cmp    WORD PTR [rsi],bp
   140022002:	jne    0x14002205a
   140022004:	mov    rcx,rdi
   140022007:	call   0x14000cad8
   14002200c:	mov    r8,rdi
   14002200f:	mov    rdx,r14
   140022012:	lea    r9,[rax+0x1]
   140022016:	mov    rcx,rsi
   140022019:	call   0x14000820c
   14002201e:	test   eax,eax
   140022020:	je     0x14002205a
   140022022:	jmp    0x1400220e1
   140022027:	bts    DWORD PTR [rbx+0x10],0x8
   14002202c:	lea    rsi,[rbx+0x258]
   140022033:	cmp    WORD PTR [rsi],bp
   140022036:	jne    0x14002205a
   140022038:	mov    rcx,rdi
   14002203b:	call   0x14000cad8
   140022040:	mov    r8,rdi
   140022043:	mov    rdx,r14
   140022046:	lea    r9,[rax+0x1]
   14002204a:	mov    rcx,rsi
   14002204d:	call   0x14000820c
   140022052:	test   eax,eax
   140022054:	jne    0x1400220f6
   14002205a:	mov    eax,DWORD PTR [rbx+0x10]
   14002205d:	shr    eax,0x2
   140022060:	not    eax
   140022062:	and    eax,0x1
   140022065:	mov    rcx,QWORD PTR [rsp+0xb0]
   14002206d:	xor    rcx,rsp
   140022070:	call   0x1400097d0
   140022075:	lea    r11,[rsp+0xc0]
   14002207d:	mov    rbx,QWORD PTR [r11+0x28]
   140022081:	mov    rbp,QWORD PTR [r11+0x30]
   140022085:	mov    rsp,r11
   140022088:	pop    r14
   14002208a:	pop    rdi
   14002208b:	pop    rsi
   14002208c:	ret    
   14002208d:	xor    r9d,r9d
   140022090:	xor    r8d,r8d
   140022093:	xor    edx,edx
   140022095:	xor    ecx,ecx
   140022097:	mov    QWORD PTR [rsp+0x20],rbp
   14002209c:	call   0x14000b908
   1400220a1:	int3   
   1400220a2:	xor    r9d,r9d
   1400220a5:	xor    r8d,r8d
   1400220a8:	xor    edx,edx
   1400220aa:	xor    ecx,ecx
   1400220ac:	mov    QWORD PTR [rsp+0x20],rbp
   1400220b1:	call   0x14000b908
   1400220b6:	int3   
   1400220b7:	xor    r9d,r9d
   1400220ba:	xor    r8d,r8d
   1400220bd:	xor    edx,edx
   1400220bf:	xor    ecx,ecx
   1400220c1:	mov    QWORD PTR [rsp+0x20],rbp
   1400220c6:	call   0x14000b908
   1400220cb:	int3   
   1400220cc:	xor    r9d,r9d
   1400220cf:	xor    r8d,r8d
   1400220d2:	xor    edx,edx
   1400220d4:	xor    ecx,ecx
   1400220d6:	mov    QWORD PTR [rsp+0x20],rbp
   1400220db:	call   0x14000b908
   1400220e0:	int3   
   1400220e1:	xor    r9d,r9d
   1400220e4:	xor    r8d,r8d
   1400220e7:	xor    edx,edx
   1400220e9:	xor    ecx,ecx
   1400220eb:	mov    QWORD PTR [rsp+0x20],rbp
   1400220f0:	call   0x14000b908
   1400220f5:	int3   
   1400220f6:	xor    r9d,r9d
   1400220f9:	xor    r8d,r8d
   1400220fc:	xor    edx,edx
   1400220fe:	xor    ecx,ecx
   140022100:	mov    QWORD PTR [rsp+0x20],rbp
   140022105:	call   0x14000b908
   14002210a:	int3   
   14002210b:	int3   
   14002210c:	mov    QWORD PTR [rsp+0x10],rbx
   140022111:	push   rdi
   140022112:	sub    rsp,0x130
   140022119:	mov    rax,QWORD PTR [rip+0x23150]        # 0x140045270
   140022120:	xor    rax,rsp
   140022123:	mov    QWORD PTR [rsp+0x120],rax
   14002212b:	mov    rdi,rcx
   14002212e:	call   0x140010d3c
   140022133:	lea    r8,[rsp+0x30]
   140022138:	lea    rbx,[rax+0x140]
   14002213f:	mov    r9d,0x78
   140022145:	mov    ecx,DWORD PTR [rbx+0x18]
   140022148:	neg    ecx
   14002214a:	mov    rcx,rdi
   14002214d:	sbb    edx,edx
   14002214f:	and    edx,0xfffff002
   140022155:	add    edx,0x1001
   14002215b:	call   0x14001f084
   140022160:	test   eax,eax
   140022162:	jne    0x14002216e
   140022164:	and    DWORD PTR [rbx+0x10],eax
   140022167:	mov    eax,0x1
   14002216c:	jmp    0x1400221b2
   14002216e:	mov    rcx,QWORD PTR [rbx]
   140022171:	lea    rdx,[rsp+0x30]
   140022176:	call   0x1400082d8
   14002217b:	test   eax,eax
   14002217d:	jne    0x1400221a7
   14002217f:	mov    rcx,rdi
   140022182:	call   0x14000cad8
   140022187:	lea    rcx,[rbx+0x258]
   14002218e:	mov    r8,rdi
   140022191:	lea    r9,[rax+0x1]
   140022195:	mov    edx,0x55
   14002219a:	call   0x14000820c
   14002219f:	test   eax,eax
   1400221a1:	jne    0x1400221d3
   1400221a3:	or     DWORD PTR [rbx+0x10],0x4
   1400221a7:	mov    eax,DWORD PTR [rbx+0x10]
   1400221aa:	shr    eax,0x2
   1400221ad:	not    eax
   1400221af:	and    eax,0x1
   1400221b2:	mov    rcx,QWORD PTR [rsp+0x120]
   1400221ba:	xor    rcx,rsp
   1400221bd:	call   0x1400097d0
   1400221c2:	mov    rbx,QWORD PTR [rsp+0x148]
   1400221ca:	add    rsp,0x130
   1400221d1:	pop    rdi
   1400221d2:	ret    
   1400221d3:	and    QWORD PTR [rsp+0x20],0x0
   1400221d9:	xor    r9d,r9d
   1400221dc:	xor    r8d,r8d
   1400221df:	xor    edx,edx
   1400221e1:	xor    ecx,ecx
   1400221e3:	call   0x14000b908
   1400221e8:	int3   
   1400221e9:	int3   
   1400221ea:	int3   
   1400221eb:	int3   
   1400221ec:	mov    QWORD PTR [rsp+0x10],rbx
   1400221f1:	mov    QWORD PTR [rsp+0x18],rsi
   1400221f6:	push   rdi
   1400221f7:	sub    rsp,0x20
   1400221fb:	xor    esi,esi
   1400221fd:	mov    rdi,rdx
   140022200:	mov    rbx,rcx
   140022203:	test   rcx,rcx
   140022206:	je     0x14002225e
   140022208:	cmp    WORD PTR [rcx],si
   14002220b:	je     0x14002225e
   14002220d:	lea    rdx,[rip+0x1c14c]        # 0x14003e360
   140022214:	call   0x140021aa8
   140022219:	test   eax,eax
   14002221b:	je     0x14002225e
   14002221d:	lea    rdx,[rip+0x1c144]        # 0x14003e368
   140022224:	mov    rcx,rbx
   140022227:	call   0x140021aa8
   14002222c:	test   eax,eax
   14002222e:	jne    0x140022254
   140022230:	lea    rcx,[rdi+0x258]
   140022237:	lea    r9d,[rsi+0x2]
   14002223b:	lea    r8,[rsp+0x30]
   140022240:	mov    edx,0x2000000b
   140022245:	call   0x14001f084
   14002224a:	test   eax,eax
   14002224c:	je     0x14002227e
   14002224e:	mov    eax,DWORD PTR [rsp+0x30]
   140022252:	jmp    0x140022290
   140022254:	mov    rcx,rbx
   140022257:	call   0x14002c894
   14002225c:	jmp    0x140022290
   14002225e:	lea    rcx,[rdi+0x258]
   140022265:	lea    r8,[rsp+0x30]
   14002226a:	mov    r9d,0x2
   140022270:	mov    edx,0x20001004
   140022275:	call   0x14001f084
   14002227a:	test   eax,eax
   14002227c:	jne    0x140022282
   14002227e:	xor    eax,eax
   140022280:	jmp    0x140022290
   140022282:	mov    eax,DWORD PTR [rsp+0x30]
   140022286:	test   eax,eax
   140022288:	jne    0x140022290
   14002228a:	call   QWORD PTR [rip+0x13020]        # 0x1400352b0
   140022290:	mov    rbx,QWORD PTR [rsp+0x38]
   140022295:	mov    rsi,QWORD PTR [rsp+0x40]
   14002229a:	add    rsp,0x20
   14002229e:	pop    rdi
   14002229f:	ret    
   1400222a0:	mov    QWORD PTR [rsp+0x10],rbx
   1400222a5:	push   rdi
   1400222a6:	sub    rsp,0x40
   1400222aa:	mov    rax,QWORD PTR [rip+0x22fbf]        # 0x140045270
   1400222b1:	xor    rax,rsp
   1400222b4:	mov    QWORD PTR [rsp+0x38],rax
   1400222b9:	mov    r9d,0x9
   1400222bf:	lea    r8,[rsp+0x20]
   1400222c4:	mov    rdi,rcx
   1400222c7:	lea    edx,[r9+0x50]
   1400222cb:	call   0x14001f084
   1400222d0:	xor    ebx,ebx
   1400222d2:	test   eax,eax
   1400222d4:	je     0x1400222f0
   1400222d6:	lea    rcx,[rsp+0x20]
   1400222db:	mov    r8d,0x9
   1400222e1:	mov    rdx,rdi
   1400222e4:	call   0x140021b24
   1400222e9:	test   eax,eax
   1400222eb:	sete   bl
   1400222ee:	mov    eax,ebx
   1400222f0:	mov    rcx,QWORD PTR [rsp+0x38]
   1400222f5:	xor    rcx,rsp
   1400222f8:	call   0x1400097d0
   1400222fd:	mov    rbx,QWORD PTR [rsp+0x58]
   140022302:	add    rsp,0x40
   140022306:	pop    rdi
   140022307:	ret    
   140022308:	mov    QWORD PTR [rsp+0x8],rbx
   14002230d:	mov    QWORD PTR [rsp+0x10],rsi
   140022312:	push   rdi
   140022313:	sub    rsp,0x20
   140022317:	mov    rsi,r8
   14002231a:	mov    edi,edx
   14002231c:	call   0x1400222a0
   140022321:	xor    ebx,ebx
   140022323:	test   eax,eax
   140022325:	jne    0x140022361
   140022327:	test   edi,edi
   140022329:	je     0x140022361
   14002232b:	mov    rcx,QWORD PTR [rsi]
   14002232e:	test   rcx,rcx
   140022331:	je     0x140022351
   140022333:	movzx  edx,WORD PTR [rcx]
   140022336:	add    rcx,0x2
   14002233a:	lea    eax,[rdx-0x41]
   14002233d:	cmp    ax,0x19
   140022341:	jbe    0x14002234d
   140022343:	sub    dx,0x61
   140022347:	cmp    dx,0x19
   14002234b:	ja     0x140022351
   14002234d:	inc    ebx
   14002234f:	jmp    0x140022333
   140022351:	mov    rcx,QWORD PTR [rsi]
   140022354:	call   0x14000cad8
   140022359:	cmp    ebx,eax
   14002235b:	jne    0x140022361
   14002235d:	xor    eax,eax
   14002235f:	jmp    0x140022366
   140022361:	mov    eax,0x1
   140022366:	mov    rbx,QWORD PTR [rsp+0x30]
   14002236b:	mov    rsi,QWORD PTR [rsp+0x38]
   140022370:	add    rsp,0x20
   140022374:	pop    rdi
   140022375:	ret    
   140022376:	int3   
   140022377:	int3   
   140022378:	mov    rax,rsp
   14002237b:	mov    QWORD PTR [rax+0x8],rbx
   14002237f:	mov    QWORD PTR [rax+0x10],rbp
   140022383:	mov    QWORD PTR [rax+0x18],rsi
   140022387:	mov    QWORD PTR [rax+0x20],rdi
   14002238b:	push   r12
   14002238d:	push   r14
   14002238f:	push   r15
   140022391:	sub    rsp,0x20
   140022395:	xor    ebx,ebx
   140022397:	mov    r15,r8
   14002239a:	mov    edi,edx
   14002239c:	mov    r12,rcx
   14002239f:	mov    eax,0x1
   1400223a4:	mov    esi,ebx
   1400223a6:	test   edx,edx
   1400223a8:	js     0x1400223eb
   1400223aa:	test   eax,eax
   1400223ac:	je     0x1400223ed
   1400223ae:	mov    rcx,QWORD PTR [r15]
   1400223b1:	lea    eax,[rsi+rdi*1]
   1400223b4:	cdq    
   1400223b5:	sub    eax,edx
   1400223b7:	sar    eax,1
   1400223b9:	movsxd rbp,eax
   1400223bc:	mov    r14,rbp
   1400223bf:	shl    r14,0x4
   1400223c3:	mov    rdx,QWORD PTR [r14+r12*1]
   1400223c7:	call   0x1400082d8
   1400223cc:	test   eax,eax
   1400223ce:	jne    0x1400223dd
   1400223d0:	lea    rcx,[r12+0x8]
   1400223d5:	add    rcx,r14
   1400223d8:	mov    QWORD PTR [r15],rcx
   1400223db:	jmp    0x1400223e7
   1400223dd:	jns    0x1400223e4
   1400223df:	lea    edi,[rbp-0x1]
   1400223e2:	jmp    0x1400223e7
   1400223e4:	lea    esi,[rbp+0x1]
   1400223e7:	cmp    esi,edi
   1400223e9:	jle    0x1400223aa
   1400223eb:	test   eax,eax
   1400223ed:	mov    rbp,QWORD PTR [rsp+0x48]
   1400223f2:	mov    rsi,QWORD PTR [rsp+0x50]
   1400223f7:	mov    rdi,QWORD PTR [rsp+0x58]
   1400223fc:	sete   bl
   1400223ff:	mov    eax,ebx
   140022401:	mov    rbx,QWORD PTR [rsp+0x40]
   140022406:	add    rsp,0x20
   14002240a:	pop    r15
   14002240c:	pop    r14
   14002240e:	pop    r12
   140022410:	ret    
   140022411:	int3   
   140022412:	int3   
   140022413:	int3   
   140022414:	rex push rbx
   140022416:	push   rbp
   140022417:	push   rsi
   140022418:	push   rdi
   140022419:	push   r12
   14002241b:	push   r14
   14002241d:	push   r15
   14002241f:	sub    rsp,0xf0
   140022426:	mov    rax,QWORD PTR [rip+0x22e43]        # 0x140045270
   14002242d:	xor    rax,rsp
   140022430:	mov    QWORD PTR [rsp+0xe0],rax
   140022438:	mov    rbp,r8
   14002243b:	mov    rsi,rdx
   14002243e:	mov    r14,rcx
   140022441:	call   0x140010d3c
   140022446:	xor    r12d,r12d
   140022449:	lea    rbx,[rax+0x140]
   140022450:	lea    rax,[r14+0x80]
   140022457:	lea    r15,[rbx+0x258]
   14002245e:	lea    rdi,[rbx+0x8]
   140022462:	mov    DWORD PTR [rbx+0x10],r12d
   140022466:	mov    WORD PTR [r15],r12w
   14002246a:	mov    QWORD PTR [rdi],rax
   14002246d:	mov    QWORD PTR [rbx],r14
   140022470:	cmp    WORD PTR [rax],r12w
   140022474:	je     0x14002248a
   140022476:	lea    edx,[r12+0x16]
   14002247b:	lea    rcx,[rip+0x1bb7e]        # 0x14003e000
   140022482:	mov    r8,rdi
   140022485:	call   0x140022378
   14002248a:	mov    rax,QWORD PTR [rbx]
   14002248d:	cmp    WORD PTR [rax],r12w
   140022491:	je     0x140022609
   140022497:	mov    rax,QWORD PTR [rdi]
   14002249a:	mov    rcx,rbx
   14002249d:	cmp    WORD PTR [rax],r12w
   1400224a1:	je     0x1400224aa
   1400224a3:	call   0x140021c18
   1400224a8:	jmp    0x1400224af
   1400224aa:	call   0x140021cc8
   1400224af:	cmp    DWORD PTR [rbx+0x10],r12d
   1400224b3:	jne    0x1400224ec
   1400224b5:	lea    rcx,[rip+0x1af14]        # 0x14003d3d0
   1400224bc:	mov    r8,rbx
   1400224bf:	mov    edx,0x40
   1400224c4:	call   0x140022378
   1400224c9:	test   eax,eax
   1400224cb:	je     0x1400224e2
   1400224cd:	mov    rax,QWORD PTR [rdi]
   1400224d0:	mov    rcx,rbx
   1400224d3:	cmp    WORD PTR [rax],r12w
   1400224d7:	je     0x1400225ff
   1400224dd:	call   0x140021c18
   1400224e2:	cmp    DWORD PTR [rbx+0x10],r12d
   1400224e6:	je     0x140022652
   1400224ec:	lea    rcx,[r14+0x100]
   1400224f3:	mov    rdx,rbx
   1400224f6:	call   0x1400221ec
   1400224fb:	mov    ebx,eax
   1400224fd:	test   eax,eax
   1400224ff:	je     0x140022652
   140022505:	lea    ecx,[rax-0xfde8]
   14002250b:	cmp    ecx,0x1
   14002250e:	jbe    0x140022652
   140022514:	movzx  ecx,ax
   140022517:	call   QWORD PTR [rip+0x12d8b]        # 0x1400352a8
   14002251d:	test   eax,eax
   14002251f:	je     0x140022652
   140022525:	test   rsi,rsi
   140022528:	je     0x14002252c
   14002252a:	mov    DWORD PTR [rsi],ebx
   14002252c:	test   rbp,rbp
   14002252f:	je     0x1400225f8
   140022535:	lea    rsi,[rbp+0x120]
   14002253c:	mov    rcx,r15
   14002253f:	mov    WORD PTR [rsi],r12w
   140022543:	call   0x14000cad8
   140022548:	mov    r8,r15
   14002254b:	lea    r9,[rax+0x1]
   14002254f:	mov    edx,0x55
   140022554:	mov    rcx,rsi
   140022557:	call   0x14000820c
   14002255c:	test   eax,eax
   14002255e:	jne    0x14002268b
   140022564:	lea    r9d,[rax+0x40]
   140022568:	mov    r8,rbp
   14002256b:	mov    edx,0x1001
   140022570:	mov    rcx,rsi
   140022573:	call   0x14001f084
   140022578:	test   eax,eax
   14002257a:	je     0x140022652
   140022580:	lea    rdi,[rbp+0x80]
   140022587:	mov    r9d,0x40
   14002258d:	mov    edx,0x1002
   140022592:	mov    r8,rdi
   140022595:	mov    rcx,rsi
   140022598:	call   0x14001f084
   14002259d:	test   eax,eax
   14002259f:	je     0x140022652
   1400225a5:	mov    edx,0x5f
   1400225aa:	mov    rcx,rdi
   1400225ad:	call   0x14002c8cc
   1400225b2:	test   rax,rax
   1400225b5:	jne    0x1400225c7
   1400225b7:	lea    edx,[rax+0x2e]
   1400225ba:	mov    rcx,rdi
   1400225bd:	call   0x14002c8cc
   1400225c2:	test   rax,rax
   1400225c5:	je     0x1400225e0
   1400225c7:	mov    r9d,0x40
   1400225cd:	mov    r8,rdi
   1400225d0:	mov    rcx,rsi
   1400225d3:	lea    edx,[r9-0x39]
   1400225d7:	call   0x14001f084
   1400225dc:	test   eax,eax
   1400225de:	je     0x140022652
   1400225e0:	mov    r9d,0xa
   1400225e6:	lea    rdx,[rbp+0x100]
   1400225ed:	mov    ecx,ebx
   1400225ef:	lea    r8d,[r9+0x6]
   1400225f3:	call   0x14002c5c4
   1400225f8:	mov    eax,0x1
   1400225fd:	jmp    0x140022654
   1400225ff:	call   0x140021cc8
   140022604:	jmp    0x1400224e2
   140022609:	or     DWORD PTR [rbx+0x10],0x104
   140022610:	lea    rcx,[rsp+0x30]
   140022615:	mov    edx,0x55
   14002261a:	call   0x14001f14c
   14002261f:	cmp    eax,0x1
   140022622:	jle    0x1400224e2
   140022628:	lea    rcx,[rsp+0x30]
   14002262d:	call   0x14000cad8
   140022632:	lea    r8,[rsp+0x30]
   140022637:	mov    edx,0x55
   14002263c:	lea    r9,[rax+0x1]
   140022640:	mov    rcx,r15
   140022643:	call   0x14000820c
   140022648:	test   eax,eax
   14002264a:	je     0x1400224e2
   140022650:	jmp    0x140022676
   140022652:	xor    eax,eax
   140022654:	mov    rcx,QWORD PTR [rsp+0xe0]
   14002265c:	xor    rcx,rsp
   14002265f:	call   0x1400097d0
   140022664:	add    rsp,0xf0
   14002266b:	pop    r15
   14002266d:	pop    r14
   14002266f:	pop    r12
   140022671:	pop    rdi
   140022672:	pop    rsi
   140022673:	pop    rbp
   140022674:	pop    rbx
   140022675:	ret    
   140022676:	xor    r9d,r9d
   140022679:	xor    r8d,r8d
   14002267c:	xor    edx,edx
   14002267e:	xor    ecx,ecx
   140022680:	mov    QWORD PTR [rsp+0x20],r12
   140022685:	call   0x14000b908
   14002268a:	int3   
   14002268b:	xor    r9d,r9d
   14002268e:	xor    r8d,r8d
   140022691:	xor    edx,edx
   140022693:	xor    ecx,ecx
   140022695:	mov    QWORD PTR [rsp+0x20],r12
   14002269a:	call   0x14000b908
   14002269f:	int3   
   1400226a0:	mov    QWORD PTR [rsp+0x10],rbx
   1400226a5:	mov    QWORD PTR [rsp+0x18],rbp
   1400226aa:	mov    QWORD PTR [rsp+0x20],rsi
   1400226af:	push   rdi
   1400226b0:	sub    rsp,0x120
   1400226b7:	mov    rax,QWORD PTR [rip+0x22bb2]        # 0x140045270
   1400226be:	xor    rax,rsp
   1400226c1:	mov    QWORD PTR [rsp+0x110],rax
   1400226c9:	mov    rbx,rcx
   1400226cc:	call   0x140010d3c
   1400226d1:	mov    rbp,rax
   1400226d4:	call   0x140010d3c
   1400226d9:	mov    rcx,rbx
   1400226dc:	mov    rdi,QWORD PTR [rax+0x470]
   1400226e3:	call   0x140022ca4
   1400226e8:	mov    ecx,DWORD PTR [rbp+0x15c]
   1400226ee:	neg    ecx
   1400226f0:	lea    r8,[rsp+0x20]
   1400226f5:	mov    r9d,0xf0
   1400226fb:	sbb    edx,edx
   1400226fd:	mov    ecx,eax
   1400226ff:	mov    esi,eax
   140022701:	and    edx,0xfffff005
   140022707:	add    edx,0x1002
   14002270d:	call   QWORD PTR [rip+0x12a7d]        # 0x140035190
   140022713:	xor    ebx,ebx
   140022715:	test   eax,eax
   140022717:	jne    0x140022720
   140022719:	mov    DWORD PTR [rdi],ebx
   14002271b:	lea    eax,[rbx+0x1]
   14002271e:	jmp    0x140022763
   140022720:	mov    rcx,QWORD PTR [rbp+0x148]
   140022727:	lea    rdx,[rsp+0x20]
   14002272c:	call   0x1400082d8
   140022731:	test   eax,eax
   140022733:	jne    0x140022759
   140022735:	lea    rcx,[rip+0x1bc34]        # 0x14003e370
   14002273c:	cmp    si,WORD PTR [rcx]
   14002273f:	je     0x140022759
   140022741:	inc    ebx
   140022743:	add    rcx,0x2
   140022747:	movsxd rax,ebx
   14002274a:	cmp    rax,0xa
   14002274e:	jb     0x14002273c
   140022750:	or     DWORD PTR [rdi],0x4
   140022753:	mov    DWORD PTR [rdi+0x8],esi
   140022756:	mov    DWORD PTR [rdi+0x4],esi
   140022759:	mov    eax,DWORD PTR [rdi]
   14002275b:	shr    eax,0x2
   14002275e:	not    eax
   140022760:	and    eax,0x1
   140022763:	mov    rcx,QWORD PTR [rsp+0x110]
   14002276b:	xor    rcx,rsp
   14002276e:	call   0x1400097d0
   140022773:	lea    r11,[rsp+0x120]
   14002277b:	mov    rbx,QWORD PTR [r11+0x18]
   14002277f:	mov    rbp,QWORD PTR [r11+0x20]
   140022783:	mov    rsi,QWORD PTR [r11+0x28]
   140022787:	mov    rsp,r11
   14002278a:	pop    rdi
   14002278b:	ret    
   14002278c:	mov    QWORD PTR [rsp+0x8],rbx
   140022791:	push   rdi
   140022792:	sub    rsp,0x20
   140022796:	mov    rdi,rcx
   140022799:	call   0x140010d3c
   14002279e:	mov    rcx,QWORD PTR [rax+0x148]
   1400227a5:	mov    rbx,rax
   1400227a8:	call   0x14000cad8
   1400227ad:	xor    edx,edx
   1400227af:	lea    rcx,[rip+0xfffffffffffffeea]        # 0x1400226a0
   1400227b6:	cmp    rax,0x3
   1400227ba:	sete   dl
   1400227bd:	mov    DWORD PTR [rbx+0x15c],edx
   1400227c3:	mov    edx,0x1
   1400227c8:	call   QWORD PTR [rip+0x129aa]        # 0x140035178
   1400227ce:	test   BYTE PTR [rdi],0x4
   1400227d1:	jne    0x1400227d6
   1400227d3:	and    DWORD PTR [rdi],0x0
   1400227d6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400227db:	add    rsp,0x20
   1400227df:	pop    rdi
   1400227e0:	ret    
   1400227e1:	int3   
   1400227e2:	int3   
   1400227e3:	int3   
   1400227e4:	rex push rbx
   1400227e6:	sub    rsp,0x20
   1400227ea:	or     DWORD PTR [rcx],0x104
   1400227f0:	mov    rbx,rcx
   1400227f3:	call   QWORD PTR [rip+0x12987]        # 0x140035180
   1400227f9:	mov    DWORD PTR [rbx+0x8],eax
   1400227fc:	mov    DWORD PTR [rbx+0x4],eax
   1400227ff:	add    rsp,0x20
   140022803:	pop    rbx
   140022804:	ret    
   140022805:	int3   
   140022806:	int3   
   140022807:	int3   
   140022808:	mov    QWORD PTR [rsp+0x8],rbx
   14002280d:	push   rdi
   14002280e:	sub    rsp,0x20
   140022812:	mov    rdi,rcx
   140022815:	call   0x140010d3c
   14002281a:	lea    rbx,[rax+0x140]
   140022821:	mov    rcx,QWORD PTR [rbx]
   140022824:	call   0x14000cad8
   140022829:	mov    rcx,QWORD PTR [rbx+0x8]
   14002282d:	xor    edx,edx
   14002282f:	cmp    rax,0x3
   140022833:	sete   dl
   140022836:	mov    DWORD PTR [rbx+0x18],edx
   140022839:	call   0x14000cad8
   14002283e:	xor    ecx,ecx
   140022840:	cmp    rax,0x3
   140022844:	mov    edx,0x2
   140022849:	sete   cl
   14002284c:	mov    DWORD PTR [rbx+0x1c],ecx
   14002284f:	and    DWORD PTR [rdi+0x4],0x0
   140022853:	cmp    DWORD PTR [rbx+0x18],0x0
   140022857:	jne    0x140022884
   140022859:	mov    rcx,QWORD PTR [rbx]
   14002285c:	xor    r9d,r9d
   14002285f:	movzx  r8d,WORD PTR [rcx]
   140022863:	add    rcx,rdx
   140022866:	lea    eax,[r8-0x41]
   14002286a:	cmp    ax,0x19
   14002286e:	jbe    0x14002287c
   140022870:	sub    r8w,0x61
   140022875:	cmp    r8w,0x19
   14002287a:	ja     0x140022881
   14002287c:	inc    r9d
   14002287f:	jmp    0x14002285f
   140022881:	mov    edx,r9d
   140022884:	mov    DWORD PTR [rbx+0x14],edx
   140022887:	lea    rcx,[rip+0xea]        # 0x140022978
   14002288e:	mov    edx,0x1
   140022893:	call   QWORD PTR [rip+0x128df]        # 0x140035178
   140022899:	test   DWORD PTR [rdi],0x100
   14002289f:	je     0x1400228ae
   1400228a1:	test   DWORD PTR [rdi],0x200
   1400228a7:	je     0x1400228ae
   1400228a9:	test   BYTE PTR [rdi],0x7
   1400228ac:	jne    0x1400228b1
   1400228ae:	and    DWORD PTR [rdi],0x0
   1400228b1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400228b6:	add    rsp,0x20
   1400228ba:	pop    rdi
   1400228bb:	ret    
   1400228bc:	mov    QWORD PTR [rsp+0x8],rbx
   1400228c1:	push   rdi
   1400228c2:	sub    rsp,0x20
   1400228c6:	mov    rdi,rcx
   1400228c9:	call   0x140010d3c
   1400228ce:	mov    rcx,QWORD PTR [rax+0x140]
   1400228d5:	mov    rbx,rax
   1400228d8:	call   0x14000cad8
   1400228dd:	xor    edx,edx
   1400228df:	mov    ecx,0x2
   1400228e4:	cmp    rax,0x3
   1400228e8:	sete   dl
   1400228eb:	mov    DWORD PTR [rbx+0x158],edx
   1400228f1:	test   edx,edx
   1400228f3:	jne    0x140022924
   1400228f5:	mov    rdx,QWORD PTR [rbx+0x140]
   1400228fc:	xor    r9d,r9d
   1400228ff:	movzx  r8d,WORD PTR [rdx]
   140022903:	add    rdx,rcx
   140022906:	lea    eax,[r8-0x41]
   14002290a:	cmp    ax,0x19
   14002290e:	jbe    0x14002291c
   140022910:	sub    r8w,0x61
   140022915:	cmp    r8w,0x19
   14002291a:	ja     0x140022921
   14002291c:	inc    r9d
   14002291f:	jmp    0x1400228ff
   140022921:	mov    ecx,r9d
   140022924:	mov    DWORD PTR [rbx+0x154],ecx
   14002292a:	lea    rcx,[rip+0x277]        # 0x140022ba8
   140022931:	mov    edx,0x1
   140022936:	call   QWORD PTR [rip+0x1283c]        # 0x140035178
   14002293c:	test   BYTE PTR [rdi],0x4
   14002293f:	jne    0x140022944
   140022941:	and    DWORD PTR [rdi],0x0
   140022944:	mov    rbx,QWORD PTR [rsp+0x30]
   140022949:	add    rsp,0x20
   14002294d:	pop    rdi
   14002294e:	ret    
   14002294f:	int3   
   140022950:	xor    r8d,r8d
   140022953:	movzx  edx,WORD PTR [rcx]
   140022956:	add    rcx,0x2
   14002295a:	lea    eax,[rdx-0x41]
   14002295d:	cmp    ax,0x19
   140022961:	jbe    0x14002296d
   140022963:	sub    dx,0x61
   140022967:	cmp    dx,0x19
   14002296b:	ja     0x140022972
   14002296d:	inc    r8d
   140022970:	jmp    0x140022953
   140022972:	mov    eax,r8d
   140022975:	ret    
   140022976:	int3   
   140022977:	int3   
   140022978:	mov    QWORD PTR [rsp+0x10],rbx
   14002297d:	mov    QWORD PTR [rsp+0x18],rsi
   140022982:	mov    QWORD PTR [rsp+0x20],rdi
   140022987:	push   r14
   140022989:	sub    rsp,0x120
   140022990:	mov    rax,QWORD PTR [rip+0x228d9]        # 0x140045270
   140022997:	xor    rax,rsp
   14002299a:	mov    QWORD PTR [rsp+0x110],rax
   1400229a2:	mov    rbx,rcx
   1400229a5:	call   0x140010d3c
   1400229aa:	lea    rsi,[rax+0x140]
   1400229b1:	call   0x140010d3c
   1400229b6:	mov    rcx,rbx
   1400229b9:	mov    rdi,QWORD PTR [rax+0x470]
   1400229c0:	call   0x140022ca4
   1400229c5:	mov    ecx,DWORD PTR [rsi+0x1c]
   1400229c8:	neg    ecx
   1400229ca:	lea    r8,[rsp+0x20]
   1400229cf:	mov    r9d,0xf0
   1400229d5:	sbb    edx,edx
   1400229d7:	mov    ecx,eax
   1400229d9:	mov    ebx,eax
   1400229db:	and    edx,0xfffff005
   1400229e1:	add    edx,0x1002
   1400229e7:	call   QWORD PTR [rip+0x127a3]        # 0x140035190
   1400229ed:	xor    r14d,r14d
   1400229f0:	test   eax,eax
   1400229f2:	jne    0x140022a01
   1400229f4:	mov    DWORD PTR [rdi],r14d
   1400229f7:	mov    eax,0x1
   1400229fc:	jmp    0x140022b7b
   140022a01:	mov    rcx,QWORD PTR [rsi+0x8]
   140022a05:	lea    rdx,[rsp+0x20]
   140022a0a:	call   0x1400082d8
   140022a0f:	test   eax,eax
   140022a11:	jne    0x140022ac3
   140022a17:	mov    eax,DWORD PTR [rsi+0x18]
   140022a1a:	lea    r8,[rsp+0x20]
   140022a1f:	mov    r9d,0xf0
   140022a25:	neg    eax
   140022a27:	mov    ecx,ebx
   140022a29:	sbb    edx,edx
   140022a2b:	and    edx,0xfffff002
   140022a31:	add    edx,0x1001
   140022a37:	call   QWORD PTR [rip+0x12753]        # 0x140035190
   140022a3d:	test   eax,eax
   140022a3f:	je     0x1400229f4
   140022a41:	mov    rcx,QWORD PTR [rsi]
   140022a44:	lea    rdx,[rsp+0x20]
   140022a49:	call   0x1400082d8
   140022a4e:	test   eax,eax
   140022a50:	jne    0x140022a5d
   140022a52:	or     DWORD PTR [rdi],0x304
   140022a58:	mov    DWORD PTR [rdi+0x4],ebx
   140022a5b:	jmp    0x140022ac0
   140022a5d:	test   BYTE PTR [rdi],0x2
   140022a60:	jne    0x140022ac3
   140022a62:	cmp    DWORD PTR [rsi+0x14],r14d
   140022a66:	je     0x140022a95
   140022a68:	movsxd r8,DWORD PTR [rsi+0x14]
   140022a6c:	mov    rcx,QWORD PTR [rsi]
   140022a6f:	lea    rdx,[rsp+0x20]
   140022a74:	call   0x14002beb0
   140022a79:	test   eax,eax
   140022a7b:	jne    0x140022a95
   140022a7d:	or     DWORD PTR [rdi],0x2
   140022a80:	mov    DWORD PTR [rdi+0x8],ebx
   140022a83:	mov    rcx,QWORD PTR [rsi]
   140022a86:	call   0x14000cad8
   140022a8b:	cmp    eax,DWORD PTR [rsi+0x14]
   140022a8e:	jne    0x140022ac3
   140022a90:	mov    DWORD PTR [rdi+0x4],ebx
   140022a93:	jmp    0x140022ac3
   140022a95:	mov    ecx,DWORD PTR [rdi]
   140022a97:	test   cl,0x1
   140022a9a:	jne    0x140022ac3
   140022a9c:	mov    r8d,r14d
   140022a9f:	lea    rdx,[rip+0x1b8ca]        # 0x14003e370
   140022aa6:	cmp    bx,WORD PTR [rdx]
   140022aa9:	je     0x140022ac3
   140022aab:	inc    r8d
   140022aae:	add    rdx,0x2
   140022ab2:	movsxd rax,r8d
   140022ab5:	cmp    rax,0xa
   140022ab9:	jb     0x140022aa6
   140022abb:	or     ecx,0x1
   140022abe:	mov    DWORD PTR [rdi],ecx
   140022ac0:	mov    DWORD PTR [rdi+0x8],ebx
   140022ac3:	mov    eax,DWORD PTR [rdi]
   140022ac5:	mov    ecx,0x300
   140022aca:	and    eax,ecx
   140022acc:	cmp    eax,ecx
   140022ace:	je     0x140022b71
   140022ad4:	mov    eax,DWORD PTR [rsi+0x18]
   140022ad7:	lea    r8,[rsp+0x20]
   140022adc:	mov    r9d,0xf0
   140022ae2:	neg    eax
   140022ae4:	mov    ecx,ebx
   140022ae6:	sbb    edx,edx
   140022ae8:	and    edx,0xfffff002
   140022aee:	add    edx,0x1001
   140022af4:	call   QWORD PTR [rip+0x12696]        # 0x140035190
   140022afa:	test   eax,eax
   140022afc:	je     0x1400229f4
   140022b02:	mov    rcx,QWORD PTR [rsi]
   140022b05:	lea    rdx,[rsp+0x20]
   140022b0a:	call   0x1400082d8
   140022b0f:	test   eax,eax
   140022b11:	jne    0x140022b37
   140022b13:	bts    DWORD PTR [rdi],0x9
   140022b17:	cmp    DWORD PTR [rsi+0x18],r14d
   140022b1b:	jne    0x140022b64
   140022b1d:	cmp    DWORD PTR [rsi+0x14],r14d
   140022b21:	je     0x140022b64
   140022b23:	mov    rcx,QWORD PTR [rsi]
   140022b26:	call   0x14000cad8
   140022b2b:	cmp    eax,DWORD PTR [rsi+0x14]
   140022b2e:	jne    0x140022b64
   140022b30:	mov    edx,0x1
   140022b35:	jmp    0x140022b56
   140022b37:	cmp    DWORD PTR [rsi+0x18],r14d
   140022b3b:	jne    0x140022b71
   140022b3d:	cmp    DWORD PTR [rsi+0x14],r14d
   140022b41:	je     0x140022b71
   140022b43:	mov    rcx,QWORD PTR [rsi]
   140022b46:	lea    rdx,[rsp+0x20]
   140022b4b:	call   0x1400082d8
   140022b50:	test   eax,eax
   140022b52:	jne    0x140022b71
   140022b54:	xor    edx,edx
   140022b56:	mov    r8,rdi
   140022b59:	mov    ecx,ebx
   140022b5b:	call   0x140022dcc
   140022b60:	test   eax,eax
   140022b62:	je     0x140022b71
   140022b64:	bts    DWORD PTR [rdi],0x8
   140022b68:	cmp    DWORD PTR [rdi+0x4],r14d
   140022b6c:	jne    0x140022b71
   140022b6e:	mov    DWORD PTR [rdi+0x4],ebx
   140022b71:	mov    eax,DWORD PTR [rdi]
   140022b73:	shr    eax,0x2
   140022b76:	not    eax
   140022b78:	and    eax,0x1
   140022b7b:	mov    rcx,QWORD PTR [rsp+0x110]
   140022b83:	xor    rcx,rsp
   140022b86:	call   0x1400097d0
   140022b8b:	lea    r11,[rsp+0x120]
   140022b93:	mov    rbx,QWORD PTR [r11+0x18]
   140022b97:	mov    rsi,QWORD PTR [r11+0x20]
   140022b9b:	mov    rdi,QWORD PTR [r11+0x28]
   140022b9f:	mov    rsp,r11
   140022ba2:	pop    r14
   140022ba4:	ret    
   140022ba5:	int3   
   140022ba6:	int3   
   140022ba7:	int3   
   140022ba8:	mov    QWORD PTR [rsp+0x10],rbx
   140022bad:	mov    QWORD PTR [rsp+0x18],rsi
   140022bb2:	push   rdi
   140022bb3:	sub    rsp,0x120
   140022bba:	mov    rax,QWORD PTR [rip+0x226af]        # 0x140045270
   140022bc1:	xor    rax,rsp
   140022bc4:	mov    QWORD PTR [rsp+0x110],rax
   140022bcc:	mov    rbx,rcx
   140022bcf:	call   0x140010d3c
   140022bd4:	lea    rsi,[rax+0x140]
   140022bdb:	call   0x140010d3c
   140022be0:	mov    rcx,rbx
   140022be3:	mov    rdi,QWORD PTR [rax+0x470]
   140022bea:	call   0x140022ca4
   140022bef:	mov    ecx,DWORD PTR [rsi+0x18]
   140022bf2:	neg    ecx
   140022bf4:	lea    r8,[rsp+0x20]
   140022bf9:	mov    r9d,0xf0
   140022bff:	sbb    edx,edx
   140022c01:	mov    ecx,eax
   140022c03:	mov    ebx,eax
   140022c05:	and    edx,0xfffff002
   140022c0b:	add    edx,0x1001
   140022c11:	call   QWORD PTR [rip+0x12579]        # 0x140035190
   140022c17:	test   eax,eax
   140022c19:	jne    0x140022c24
   140022c1b:	and    DWORD PTR [rdi],eax
   140022c1d:	mov    eax,0x1
   140022c22:	jmp    0x140022c7f
   140022c24:	mov    rcx,QWORD PTR [rsi]
   140022c27:	lea    rdx,[rsp+0x20]
   140022c2c:	call   0x1400082d8
   140022c31:	test   eax,eax
   140022c33:	jne    0x140022c3f
   140022c35:	cmp    DWORD PTR [rsi+0x18],eax
   140022c38:	jne    0x140022c6c
   140022c3a:	lea    edx,[rax+0x1]
   140022c3d:	jmp    0x140022c5e
   140022c3f:	cmp    DWORD PTR [rsi+0x18],0x0
   140022c43:	jne    0x140022c75
   140022c45:	cmp    DWORD PTR [rsi+0x14],0x0
   140022c49:	je     0x140022c75
   140022c4b:	mov    rcx,QWORD PTR [rsi]
   140022c4e:	lea    rdx,[rsp+0x20]
   140022c53:	call   0x1400082d8
   140022c58:	test   eax,eax
   140022c5a:	jne    0x140022c75
   140022c5c:	xor    edx,edx
   140022c5e:	mov    r8,rdi
   140022c61:	mov    ecx,ebx
   140022c63:	call   0x140022dcc
   140022c68:	test   eax,eax
   140022c6a:	je     0x140022c75
   140022c6c:	or     DWORD PTR [rdi],0x4
   140022c6f:	mov    DWORD PTR [rdi+0x4],ebx
   140022c72:	mov    DWORD PTR [rdi+0x8],ebx
   140022c75:	mov    eax,DWORD PTR [rdi]
   140022c77:	shr    eax,0x2
   140022c7a:	not    eax
   140022c7c:	and    eax,0x1
   140022c7f:	mov    rcx,QWORD PTR [rsp+0x110]
   140022c87:	xor    rcx,rsp
   140022c8a:	call   0x1400097d0
   140022c8f:	lea    r11,[rsp+0x120]
   140022c97:	mov    rbx,QWORD PTR [r11+0x18]
   140022c9b:	mov    rsi,QWORD PTR [r11+0x20]
   140022c9f:	mov    rsp,r11
   140022ca2:	pop    rdi
   140022ca3:	ret    
   140022ca4:	movzx  edx,WORD PTR [rcx]
   140022ca7:	xor    r10d,r10d
   140022caa:	mov    r9,rcx
   140022cad:	mov    r8d,r10d
   140022cb0:	jmp    0x140022ce9
   140022cb2:	lea    eax,[rdx-0x61]
   140022cb5:	lea    r9,[r9+0x2]
   140022cb9:	cmp    ax,0x5
   140022cbd:	ja     0x140022cc6
   140022cbf:	mov    eax,0xffd9
   140022cc4:	jmp    0x140022cd4
   140022cc6:	lea    eax,[rdx-0x41]
   140022cc9:	cmp    ax,0x5
   140022ccd:	ja     0x140022cd7
   140022ccf:	mov    eax,0xfff9
   140022cd4:	add    dx,ax
   140022cd7:	shl    r8d,0x4
   140022cdb:	movzx  ecx,dx
   140022cde:	movzx  edx,WORD PTR [r9]
   140022ce2:	add    r8d,0xffffffd0
   140022ce6:	add    r8d,ecx
   140022ce9:	test   dx,dx
   140022cec:	jne    0x140022cb2
   140022cee:	mov    eax,r8d
   140022cf1:	ret    
   140022cf2:	int3   
   140022cf3:	int3   
   140022cf4:	mov    QWORD PTR [rsp+0x10],rbx
   140022cf9:	mov    QWORD PTR [rsp+0x18],rsi
   140022cfe:	push   rdi
   140022cff:	sub    rsp,0x20
   140022d03:	xor    esi,esi
   140022d05:	mov    rdi,rdx
   140022d08:	mov    rbx,rcx
   140022d0b:	test   rcx,rcx
   140022d0e:	je     0x140022d63
   140022d10:	cmp    WORD PTR [rcx],si
   140022d13:	je     0x140022d63
   140022d15:	lea    rdx,[rip+0x1b644]        # 0x14003e360
   140022d1c:	call   0x140021aa8
   140022d21:	test   eax,eax
   140022d23:	je     0x140022d63
   140022d25:	lea    rdx,[rip+0x1b63c]        # 0x14003e368
   140022d2c:	mov    rcx,rbx
   140022d2f:	call   0x140021aa8
   140022d34:	test   eax,eax
   140022d36:	jne    0x140022d59
   140022d38:	mov    ecx,DWORD PTR [rdi+0x8]
   140022d3b:	lea    r9d,[rsi+0x2]
   140022d3f:	lea    r8,[rsp+0x30]
   140022d44:	mov    edx,0x2000000b
   140022d49:	call   QWORD PTR [rip+0x12441]        # 0x140035190
   140022d4f:	test   eax,eax
   140022d51:	je     0x140022d80
   140022d53:	mov    eax,DWORD PTR [rsp+0x30]
   140022d57:	jmp    0x140022d92
   140022d59:	mov    rcx,rbx
   140022d5c:	call   0x14002c894
   140022d61:	jmp    0x140022d92
   140022d63:	mov    ecx,DWORD PTR [rdi+0x8]
   140022d66:	lea    r8,[rsp+0x30]
   140022d6b:	mov    r9d,0x2
   140022d71:	mov    edx,0x20001004
   140022d76:	call   QWORD PTR [rip+0x12414]        # 0x140035190
   140022d7c:	test   eax,eax
   140022d7e:	jne    0x140022d84
   140022d80:	xor    eax,eax
   140022d82:	jmp    0x140022d92
   140022d84:	mov    eax,DWORD PTR [rsp+0x30]
   140022d88:	test   eax,eax
   140022d8a:	jne    0x140022d92
   140022d8c:	call   QWORD PTR [rip+0x1251e]        # 0x1400352b0
   140022d92:	mov    rbx,QWORD PTR [rsp+0x38]
   140022d97:	mov    rsi,QWORD PTR [rsp+0x40]
   140022d9c:	add    rsp,0x20
   140022da0:	pop    rdi
   140022da1:	ret    
   140022da2:	int3   
   140022da3:	int3   
   140022da4:	xor    r9d,r9d
   140022da7:	lea    r8,[rip+0x1b5c2]        # 0x14003e370
   140022dae:	lea    eax,[r9+0x1]
   140022db2:	cmp    cx,WORD PTR [r8]
   140022db6:	je     0x140022dc9
   140022db8:	add    r9d,eax
   140022dbb:	add    r8,0x2
   140022dbf:	movsxd rdx,r9d
   140022dc2:	cmp    rdx,0xa
   140022dc6:	jb     0x140022db2
   140022dc8:	ret    
   140022dc9:	xor    eax,eax
   140022dcb:	ret    
   140022dcc:	mov    QWORD PTR [rsp+0x10],rbx
   140022dd1:	mov    QWORD PTR [rsp+0x18],rbp
   140022dd6:	mov    QWORD PTR [rsp+0x20],rsi
   140022ddb:	push   rdi
   140022ddc:	sub    rsp,0x20
   140022de0:	mov    ebp,edx
   140022de2:	mov    edi,ecx
   140022de4:	call   0x140010d3c
   140022de9:	mov    ecx,edi
   140022deb:	lea    r8,[rsp+0x30]
   140022df0:	mov    r9d,0x2
   140022df6:	and    ecx,0x3ff
   140022dfc:	mov    edx,0x20000001
   140022e01:	mov    rsi,rax
   140022e04:	bts    ecx,0xa
   140022e08:	call   QWORD PTR [rip+0x12382]        # 0x140035190
   140022e0e:	xor    ebx,ebx
   140022e10:	test   eax,eax
   140022e12:	jne    0x140022e18
   140022e14:	xor    eax,eax
   140022e16:	jmp    0x140022e5c
   140022e18:	cmp    edi,DWORD PTR [rsp+0x30]
   140022e1c:	je     0x140022e57
   140022e1e:	test   ebp,ebp
   140022e20:	je     0x140022e57
   140022e22:	mov    rcx,QWORD PTR [rsi+0x140]
   140022e29:	movzx  edx,WORD PTR [rcx]
   140022e2c:	add    rcx,0x2
   140022e30:	lea    eax,[rdx-0x41]
   140022e33:	cmp    ax,0x19
   140022e37:	jbe    0x140022e43
   140022e39:	sub    dx,0x61
   140022e3d:	cmp    dx,0x19
   140022e41:	ja     0x140022e47
   140022e43:	inc    ebx
   140022e45:	jmp    0x140022e29
   140022e47:	mov    rcx,QWORD PTR [rsi+0x140]
   140022e4e:	call   0x14000cad8
   140022e53:	cmp    ebx,eax
   140022e55:	je     0x140022e14
   140022e57:	mov    eax,0x1
   140022e5c:	mov    rbx,QWORD PTR [rsp+0x38]
   140022e61:	mov    rbp,QWORD PTR [rsp+0x40]
   140022e66:	mov    rsi,QWORD PTR [rsp+0x48]
   140022e6b:	add    rsp,0x20
   140022e6f:	pop    rdi
   140022e70:	ret    
   140022e71:	int3   
   140022e72:	int3   
   140022e73:	int3   
   140022e74:	mov    rax,rsp
   140022e77:	mov    QWORD PTR [rax+0x8],rbx
   140022e7b:	mov    QWORD PTR [rax+0x10],rbp
   140022e7f:	mov    QWORD PTR [rax+0x18],rsi
   140022e83:	mov    QWORD PTR [rax+0x20],rdi
   140022e87:	push   r12
   140022e89:	push   r14
   140022e8b:	push   r15
   140022e8d:	sub    rsp,0x20
   140022e91:	xor    ebx,ebx
   140022e93:	mov    r15,r8
   140022e96:	mov    edi,edx
   140022e98:	mov    r12,rcx
   140022e9b:	mov    eax,0x1
   140022ea0:	mov    esi,ebx
   140022ea2:	test   edx,edx
   140022ea4:	js     0x140022ee7
   140022ea6:	test   eax,eax
   140022ea8:	je     0x140022ee9
   140022eaa:	mov    rcx,QWORD PTR [r15]
   140022ead:	lea    eax,[rsi+rdi*1]
   140022eb0:	cdq    
   140022eb1:	sub    eax,edx
   140022eb3:	sar    eax,1
   140022eb5:	movsxd rbp,eax
   140022eb8:	mov    r14,rbp
   140022ebb:	shl    r14,0x4
   140022ebf:	mov    rdx,QWORD PTR [r14+r12*1]
   140022ec3:	call   0x1400082d8
   140022ec8:	test   eax,eax
   140022eca:	jne    0x140022ed9
   140022ecc:	lea    rcx,[r12+0x8]
   140022ed1:	add    rcx,r14
   140022ed4:	mov    QWORD PTR [r15],rcx
   140022ed7:	jmp    0x140022ee3
   140022ed9:	jns    0x140022ee0
   140022edb:	lea    edi,[rbp-0x1]
   140022ede:	jmp    0x140022ee3
   140022ee0:	lea    esi,[rbp+0x1]
   140022ee3:	cmp    esi,edi
   140022ee5:	jle    0x140022ea6
   140022ee7:	test   eax,eax
   140022ee9:	mov    rbp,QWORD PTR [rsp+0x48]
   140022eee:	mov    rsi,QWORD PTR [rsp+0x50]
   140022ef3:	mov    rdi,QWORD PTR [rsp+0x58]
   140022ef8:	sete   bl
   140022efb:	mov    eax,ebx
   140022efd:	mov    rbx,QWORD PTR [rsp+0x40]
   140022f02:	add    rsp,0x20
   140022f06:	pop    r15
   140022f08:	pop    r14
   140022f0a:	pop    r12
   140022f0c:	ret    
   140022f0d:	int3   
   140022f0e:	int3   
   140022f0f:	int3   
   140022f10:	rex push rbp
   140022f12:	push   rbx
   140022f13:	push   rsi
   140022f14:	push   rdi
   140022f15:	push   r12
   140022f17:	push   r14
   140022f19:	push   r15
   140022f1b:	mov    rbp,rsp
   140022f1e:	sub    rsp,0x40
   140022f22:	mov    rax,QWORD PTR [rip+0x22347]        # 0x140045270
   140022f29:	xor    rax,rsp
   140022f2c:	mov    QWORD PTR [rbp-0x10],rax
   140022f30:	mov    r14,r8
   140022f33:	mov    r15,rdx
   140022f36:	mov    rsi,rcx
   140022f39:	call   0x140010d3c
   140022f3e:	xor    edx,edx
   140022f40:	lea    rcx,[rbp-0x20]
   140022f44:	lea    r8d,[rdx+0xc]
   140022f48:	mov    rdi,rax
   140022f4b:	call   0x140009800
   140022f50:	call   0x140010d3c
   140022f55:	lea    rcx,[rbp-0x20]
   140022f59:	xor    r12d,r12d
   140022f5c:	mov    QWORD PTR [rax+0x470],rcx
   140022f63:	test   rsi,rsi
   140022f66:	jne    0x140022f74
   140022f68:	or     DWORD PTR [rbp-0x20],0x104
   140022f6f:	jmp    0x14002308e
   140022f74:	lea    rax,[rsi+0x80]
   140022f7b:	lea    rbx,[rdi+0x148]
   140022f82:	mov    QWORD PTR [rdi+0x140],rsi
   140022f89:	mov    QWORD PTR [rbx],rax
   140022f8c:	test   rax,rax
   140022f8f:	je     0x140022fae
   140022f91:	cmp    WORD PTR [rax],r12w
   140022f95:	je     0x140022fae
   140022f97:	mov    edx,DWORD PTR [rip+0x1b3bb]        # 0x14003e358
   140022f9d:	lea    rcx,[rip+0x1b05c]        # 0x14003e000
   140022fa4:	mov    r8,rbx
   140022fa7:	dec    edx
   140022fa9:	call   0x140022e74
   140022fae:	mov    DWORD PTR [rbp-0x20],r12d
   140022fb2:	mov    rax,QWORD PTR [rdi+0x140]
   140022fb9:	test   rax,rax
   140022fbc:	je     0x140023037
   140022fbe:	cmp    WORD PTR [rax],r12w
   140022fc2:	je     0x140023037
   140022fc4:	mov    rax,QWORD PTR [rbx]
   140022fc7:	test   rax,rax
   140022fca:	je     0x140022fdd
   140022fcc:	cmp    WORD PTR [rax],r12w
   140022fd0:	je     0x140022fdd
   140022fd2:	lea    rcx,[rbp-0x20]
   140022fd6:	call   0x140022808
   140022fdb:	jmp    0x140022fe6
   140022fdd:	lea    rcx,[rbp-0x20]
   140022fe1:	call   0x1400228bc
   140022fe6:	cmp    DWORD PTR [rbp-0x20],r12d
   140022fea:	jne    0x1400230a4
   140022ff0:	mov    edx,DWORD PTR [rip+0x1b35e]        # 0x14003e354
   140022ff6:	lea    r8,[rdi+0x140]
   140022ffd:	lea    rcx,[rip+0x1a3cc]        # 0x14003d3d0
   140023004:	dec    edx
   140023006:	call   0x140022e74
   14002300b:	test   eax,eax
   14002300d:	je     0x14002309a
   140023013:	mov    rax,QWORD PTR [rbx]
   140023016:	test   rax,rax
   140023019:	je     0x14002302c
   14002301b:	cmp    WORD PTR [rax],r12w
   14002301f:	je     0x14002302c
   140023021:	lea    rcx,[rbp-0x20]
   140023025:	call   0x140022808
   14002302a:	jmp    0x14002309a
   14002302c:	lea    rcx,[rbp-0x20]
   140023030:	call   0x1400228bc
   140023035:	jmp    0x14002309a
   140023037:	mov    rax,QWORD PTR [rbx]
   14002303a:	test   rax,rax
   14002303d:	je     0x140023087
   14002303f:	cmp    WORD PTR [rax],r12w
   140023043:	je     0x140023087
   140023045:	call   0x140010d3c
   14002304a:	mov    rbx,rax
   14002304d:	mov    rcx,QWORD PTR [rax+0x148]
   140023054:	call   0x14000cad8
   140023059:	mov    ecx,r12d
   14002305c:	mov    edx,0x1
   140023061:	cmp    rax,0x3
   140023065:	sete   cl
   140023068:	mov    DWORD PTR [rbx+0x15c],ecx
   14002306e:	lea    rcx,[rip+0xfffffffffffff62b]        # 0x1400226a0
   140023075:	call   QWORD PTR [rip+0x120fd]        # 0x140035178
   14002307b:	test   BYTE PTR [rbp-0x20],0x4
   14002307f:	jne    0x14002309a
   140023081:	mov    DWORD PTR [rbp-0x20],r12d
   140023085:	jmp    0x14002309a
   140023087:	mov    DWORD PTR [rbp-0x20],0x104
   14002308e:	call   QWORD PTR [rip+0x120ec]        # 0x140035180
   140023094:	mov    DWORD PTR [rbp-0x1c],eax
   140023097:	mov    DWORD PTR [rbp-0x18],eax
   14002309a:	cmp    DWORD PTR [rbp-0x20],r12d
   14002309e:	je     0x140023189
   1400230a4:	lea    rax,[rsi+0x100]
   1400230ab:	neg    rsi
   1400230ae:	lea    rdx,[rbp-0x20]
   1400230b2:	sbb    rcx,rcx
   1400230b5:	and    rcx,rax
   1400230b8:	call   0x140022cf4
   1400230bd:	mov    ebx,eax
   1400230bf:	test   eax,eax
   1400230c1:	je     0x140023189
   1400230c7:	lea    ecx,[rax-0xfde8]
   1400230cd:	cmp    ecx,0x1
   1400230d0:	jbe    0x140023189
   1400230d6:	movzx  ecx,ax
   1400230d9:	call   QWORD PTR [rip+0x121c9]        # 0x1400352a8
   1400230df:	test   eax,eax
   1400230e1:	je     0x140023189
   1400230e7:	mov    ecx,DWORD PTR [rbp-0x1c]
   1400230ea:	mov    edx,0x1
   1400230ef:	call   QWORD PTR [rip+0x12093]        # 0x140035188
   1400230f5:	test   eax,eax
   1400230f7:	je     0x140023189
   1400230fd:	test   r15,r15
   140023100:	je     0x140023105
   140023102:	mov    DWORD PTR [r15],ebx
   140023105:	mov    ecx,DWORD PTR [rbp-0x1c]
   140023108:	lea    rdx,[rdi+0x398]
   14002310f:	mov    edi,0x55
   140023114:	mov    r8d,edi
   140023117:	call   0x14001eed4
   14002311c:	test   r14,r14
   14002311f:	je     0x140023182
   140023121:	mov    ecx,DWORD PTR [rbp-0x1c]
   140023124:	lea    rdx,[r14+0x120]
   14002312b:	mov    r8d,edi
   14002312e:	call   0x14001eed4
   140023133:	mov    ecx,DWORD PTR [rbp-0x1c]
   140023136:	mov    edi,0x40
   14002313b:	mov    r9d,edi
   14002313e:	mov    r8,r14
   140023141:	mov    edx,0x1001
   140023146:	call   QWORD PTR [rip+0x12044]        # 0x140035190
   14002314c:	test   eax,eax
   14002314e:	je     0x140023189
   140023150:	mov    ecx,DWORD PTR [rbp-0x18]
   140023153:	lea    r8,[r14+0x80]
   14002315a:	mov    r9d,edi
   14002315d:	mov    edx,0x1002
   140023162:	call   QWORD PTR [rip+0x12028]        # 0x140035190
   140023168:	test   eax,eax
   14002316a:	je     0x140023189
   14002316c:	lea    rdx,[r14+0x100]
   140023173:	lea    r9d,[rdi-0x36]
   140023177:	lea    r8d,[rdi-0x30]
   14002317b:	mov    ecx,ebx
   14002317d:	call   0x14002c5c4
   140023182:	mov    eax,0x1
   140023187:	jmp    0x14002318b
   140023189:	xor    eax,eax
   14002318b:	mov    rcx,QWORD PTR [rbp-0x10]
   14002318f:	xor    rcx,rsp
   140023192:	call   0x1400097d0
   140023197:	add    rsp,0x40
   14002319b:	pop    r15
   14002319d:	pop    r14
   14002319f:	pop    r12
   1400231a1:	pop    rdi
   1400231a2:	pop    rsi
   1400231a3:	pop    rbx
   1400231a4:	pop    rbp
   1400231a5:	ret    
   1400231a6:	int3   
   1400231a7:	int3   
   1400231a8:	mov    QWORD PTR [rsp+0x10],rbx
   1400231ad:	mov    DWORD PTR [rsp+0x8],ecx
   1400231b1:	push   rsi
   1400231b2:	push   rdi
   1400231b3:	push   r12
   1400231b5:	push   r14
   1400231b7:	push   r15
   1400231b9:	sub    rsp,0x20
   1400231bd:	mov    esi,r8d
   1400231c0:	mov    r14,rdx
   1400231c3:	movsxd rbx,ecx
   1400231c6:	cmp    ebx,0xfffffffe
   1400231c9:	jne    0x1400231e3
   1400231cb:	call   0x14000b980
   1400231d0:	and    DWORD PTR [rax],0x0
   1400231d3:	call   0x14000b9f0
   1400231d8:	mov    DWORD PTR [rax],0x9
   1400231de:	jmp    0x140023277
   1400231e3:	test   ecx,ecx
   1400231e5:	js     0x14002325f
   1400231e7:	cmp    ebx,DWORD PTR [rip+0x25b77]        # 0x140048d64
   1400231ed:	jae    0x14002325f
   1400231ef:	mov    rax,rbx
   1400231f2:	mov    rdi,rbx
   1400231f5:	sar    rdi,0x5
   1400231f9:	lea    r12,[rip+0x25640]        # 0x140048840
   140023200:	and    eax,0x1f
   140023203:	imul   r15,rax,0x58
   140023207:	mov    rax,QWORD PTR [r12+rdi*8]
   14002320b:	movsx  ecx,BYTE PTR [rax+r15*1+0x8]
   140023211:	and    ecx,0x1
   140023214:	je     0x14002325f
   140023216:	mov    ecx,ebx
   140023218:	call   0x14002adc4
   14002321d:	nop
   14002321e:	mov    rax,QWORD PTR [r12+rdi*8]
   140023222:	test   BYTE PTR [rax+r15*1+0x8],0x1
   140023228:	je     0x14002323c
   14002322a:	mov    r8d,esi
   14002322d:	mov    rdx,r14
   140023230:	mov    ecx,ebx
   140023232:	call   0x140023290
   140023237:	mov    rdi,rax
   14002323a:	jmp    0x140023253
   14002323c:	call   0x14000b9f0
   140023241:	mov    DWORD PTR [rax],0x9
   140023247:	call   0x14000b980
   14002324c:	and    DWORD PTR [rax],0x0
   14002324f:	or     rdi,0xffffffffffffffff
   140023253:	mov    ecx,ebx
   140023255:	call   0x14002b320
   14002325a:	mov    rax,rdi
   14002325d:	jmp    0x14002327b
   14002325f:	call   0x14000b980
   140023264:	and    DWORD PTR [rax],0x0
   140023267:	call   0x14000b9f0
   14002326c:	mov    DWORD PTR [rax],0x9
   140023272:	call   0x14000b8b8
   140023277:	or     rax,0xffffffffffffffff
   14002327b:	mov    rbx,QWORD PTR [rsp+0x58]
   140023280:	add    rsp,0x20
   140023284:	pop    r15
   140023286:	pop    r14
   140023288:	pop    r12
   14002328a:	pop    rdi
   14002328b:	pop    rsi
   14002328c:	ret    
   14002328d:	int3   
   14002328e:	int3   
   14002328f:	int3   
   140023290:	mov    QWORD PTR [rsp+0x8],rbx
   140023295:	mov    QWORD PTR [rsp+0x10],rsi
   14002329a:	push   rdi
   14002329b:	sub    rsp,0x20
   14002329f:	movsxd rbx,ecx
   1400232a2:	mov    edi,r8d
   1400232a5:	mov    rsi,rdx
   1400232a8:	mov    ecx,ebx
   1400232aa:	call   0x14002b100
   1400232af:	cmp    rax,0xffffffffffffffff
   1400232b3:	jne    0x1400232c6
   1400232b5:	call   0x14000b9f0
   1400232ba:	mov    DWORD PTR [rax],0x9
   1400232c0:	or     rax,0xffffffffffffffff
   1400232c4:	jmp    0x140023313
   1400232c6:	lea    r8,[rsp+0x48]
   1400232cb:	mov    r9d,edi
   1400232ce:	mov    rdx,rsi
   1400232d1:	mov    rcx,rax
   1400232d4:	call   QWORD PTR [rip+0x11e8e]        # 0x140035168
   1400232da:	test   eax,eax
   1400232dc:	jne    0x1400232ed
   1400232de:	call   QWORD PTR [rip+0x11f04]        # 0x1400351e8
   1400232e4:	mov    ecx,eax
   1400232e6:	call   0x14000b9a0
   1400232eb:	jmp    0x1400232c0
   1400232ed:	mov    rcx,rbx
   1400232f0:	mov    rax,rbx
   1400232f3:	lea    rdx,[rip+0x25546]        # 0x140048840
   1400232fa:	sar    rax,0x5
   1400232fe:	and    ecx,0x1f
   140023301:	mov    rax,QWORD PTR [rdx+rax*8]
   140023305:	imul   rcx,rcx,0x58
   140023309:	and    BYTE PTR [rax+rcx*1+0x8],0xfd
   14002330e:	mov    rax,QWORD PTR [rsp+0x48]
   140023313:	mov    rbx,QWORD PTR [rsp+0x30]
   140023318:	mov    rsi,QWORD PTR [rsp+0x38]
   14002331d:	add    rsp,0x20
   140023321:	pop    rdi
   140023322:	ret    
   140023323:	int3   
   140023324:	rex push rbx
   140023326:	sub    rsp,0x20
   14002332a:	inc    DWORD PTR [rip+0x24668]        # 0x140047998
   140023330:	mov    rbx,rcx
   140023333:	mov    ecx,0x1000
   140023338:	call   0x14000fc4c
   14002333d:	mov    QWORD PTR [rbx+0x10],rax
   140023341:	test   rax,rax
   140023344:	je     0x140023353
   140023346:	or     DWORD PTR [rbx+0x18],0x8
   14002334a:	mov    DWORD PTR [rbx+0x24],0x1000
   140023351:	jmp    0x140023366
   140023353:	or     DWORD PTR [rbx+0x18],0x4
   140023357:	lea    rax,[rbx+0x20]
   14002335b:	mov    DWORD PTR [rbx+0x24],0x2
   140023362:	mov    QWORD PTR [rbx+0x10],rax
   140023366:	mov    rax,QWORD PTR [rbx+0x10]
   14002336a:	and    DWORD PTR [rbx+0x8],0x0
   14002336e:	mov    QWORD PTR [rbx],rax
   140023371:	add    rsp,0x20
   140023375:	pop    rbx
   140023376:	ret    
   140023377:	int3   
   140023378:	mov    QWORD PTR [rsp+0x18],rbx
   14002337d:	mov    QWORD PTR [rsp+0x20],rbp
   140023382:	push   rsi
   140023383:	push   rdi
   140023384:	push   r14
   140023386:	sub    rsp,0x40
   14002338a:	mov    rax,QWORD PTR [rip+0x21edf]        # 0x140045270
   140023391:	xor    rax,rsp
   140023394:	mov    QWORD PTR [rsp+0x30],rax
   140023399:	test   BYTE PTR [rdx+0x18],0x40
   14002339d:	mov    rdi,rdx
   1400233a0:	movzx  esi,cx
   1400233a3:	jne    0x140023522
   1400233a9:	mov    rcx,rdx
   1400233ac:	call   0x14001bc7c
   1400233b1:	lea    rbp,[rip+0x23058]        # 0x140046410
   1400233b8:	lea    r14,[rip+0x25481]        # 0x140048840
   1400233bf:	cmp    eax,0xffffffff
   1400233c2:	je     0x1400233f5
   1400233c4:	mov    rcx,rdi
   1400233c7:	call   0x14001bc7c
   1400233cc:	cmp    eax,0xfffffffe
   1400233cf:	je     0x1400233f5
   1400233d1:	mov    rcx,rdi
   1400233d4:	call   0x14001bc7c
   1400233d9:	mov    rcx,rdi
   1400233dc:	movsxd rbx,eax
   1400233df:	sar    rbx,0x5
   1400233e3:	call   0x14001bc7c
   1400233e8:	and    eax,0x1f
   1400233eb:	imul   rcx,rax,0x58
   1400233ef:	add    rcx,QWORD PTR [r14+rbx*8]
   1400233f3:	jmp    0x1400233f8
   1400233f5:	mov    rcx,rbp
   1400233f8:	mov    al,BYTE PTR [rcx+0x38]
   1400233fb:	and    al,0x7f
   1400233fd:	cmp    al,0x2
   1400233ff:	je     0x14002350b
   140023405:	mov    rcx,rdi
   140023408:	call   0x14001bc7c
   14002340d:	cmp    eax,0xffffffff
   140023410:	je     0x140023443
   140023412:	mov    rcx,rdi
   140023415:	call   0x14001bc7c
   14002341a:	cmp    eax,0xfffffffe
   14002341d:	je     0x140023443
   14002341f:	mov    rcx,rdi
   140023422:	call   0x14001bc7c
   140023427:	mov    rcx,rdi
   14002342a:	movsxd rbx,eax
   14002342d:	sar    rbx,0x5
   140023431:	call   0x14001bc7c
   140023436:	and    eax,0x1f
   140023439:	imul   rcx,rax,0x58
   14002343d:	add    rcx,QWORD PTR [r14+rbx*8]
   140023441:	jmp    0x140023446
   140023443:	mov    rcx,rbp
   140023446:	mov    al,BYTE PTR [rcx+0x38]
   140023449:	and    al,0x7f
   14002344b:	cmp    al,0x1
   14002344d:	je     0x14002350b
   140023453:	mov    rcx,rdi
   140023456:	call   0x14001bc7c
   14002345b:	cmp    eax,0xffffffff
   14002345e:	je     0x14002348f
   140023460:	mov    rcx,rdi
   140023463:	call   0x14001bc7c
   140023468:	cmp    eax,0xfffffffe
   14002346b:	je     0x14002348f
   14002346d:	mov    rcx,rdi
   140023470:	call   0x14001bc7c
   140023475:	mov    rcx,rdi
   140023478:	movsxd rbx,eax
   14002347b:	sar    rbx,0x5
   14002347f:	call   0x14001bc7c
   140023484:	and    eax,0x1f
   140023487:	imul   rbp,rax,0x58
   14002348b:	add    rbp,QWORD PTR [r14+rbx*8]
   14002348f:	test   BYTE PTR [rbp+0x8],0x80
   140023493:	je     0x140023522
   140023499:	lea    rdx,[rsp+0x24]
   14002349e:	lea    rcx,[rsp+0x20]
   1400234a3:	movzx  r9d,si
   1400234a7:	mov    r8d,0x5
   1400234ad:	call   0x14001d67c
   1400234b2:	xor    ebx,ebx
   1400234b4:	test   eax,eax
   1400234b6:	je     0x1400234c2
   1400234b8:	mov    eax,0xffff
   1400234bd:	jmp    0x14002354b
   1400234c2:	cmp    DWORD PTR [rsp+0x20],ebx
   1400234c6:	jle    0x140023506
   1400234c8:	lea    r14,[rsp+0x24]
   1400234cd:	dec    DWORD PTR [rdi+0x8]
   1400234d0:	js     0x1400234e8
   1400234d2:	mov    rcx,QWORD PTR [rdi]
   1400234d5:	mov    al,BYTE PTR [r14]
   1400234d8:	mov    BYTE PTR [rcx],al
   1400234da:	mov    rax,QWORD PTR [rdi]
   1400234dd:	movzx  ecx,BYTE PTR [rax]
   1400234e0:	inc    rax
   1400234e3:	mov    QWORD PTR [rdi],rax
   1400234e6:	jmp    0x1400234f6
   1400234e8:	movsx  ecx,BYTE PTR [r14]
   1400234ec:	mov    rdx,rdi
   1400234ef:	call   0x1400123d0
   1400234f4:	mov    ecx,eax
   1400234f6:	cmp    ecx,0xffffffff
   1400234f9:	je     0x1400234b8
   1400234fb:	inc    ebx
   1400234fd:	inc    r14
   140023500:	cmp    ebx,DWORD PTR [rsp+0x20]
   140023504:	jl     0x1400234cd
   140023506:	movzx  eax,si
   140023509:	jmp    0x14002354b
   14002350b:	movsxd rcx,DWORD PTR [rdi+0x8]
   14002350f:	add    rcx,0xfffffffffffffffe
   140023513:	mov    DWORD PTR [rdi+0x8],ecx
   140023516:	test   ecx,ecx
   140023518:	js     0x140023540
   14002351a:	mov    rcx,QWORD PTR [rdi]
   14002351d:	mov    WORD PTR [rcx],si
   140023520:	jmp    0x140023537
   140023522:	movsxd rax,DWORD PTR [rdi+0x8]
   140023526:	add    rax,0xfffffffffffffffe
   14002352a:	mov    DWORD PTR [rdi+0x8],eax
   14002352d:	test   eax,eax
   14002352f:	js     0x140023540
   140023531:	mov    rax,QWORD PTR [rdi]
   140023534:	mov    WORD PTR [rax],si
   140023537:	add    QWORD PTR [rdi],0x2
   14002353b:	movzx  eax,si
   14002353e:	jmp    0x14002354b
   140023540:	mov    rdx,rdi
   140023543:	movzx  ecx,si
   140023546:	call   0x14002c958
   14002354b:	mov    rcx,QWORD PTR [rsp+0x30]
   140023550:	xor    rcx,rsp
   140023553:	call   0x1400097d0
   140023558:	mov    rbx,QWORD PTR [rsp+0x70]
   14002355d:	mov    rbp,QWORD PTR [rsp+0x78]
   140023562:	add    rsp,0x40
   140023566:	pop    r14
   140023568:	pop    rdi
   140023569:	pop    rsi
   14002356a:	ret    
   14002356b:	int3   
   14002356c:	mov    QWORD PTR [rsp+0x8],rbx
   140023571:	mov    QWORD PTR [rsp+0x10],rdx
   140023576:	push   rdi
   140023577:	sub    rsp,0x20
   14002357b:	mov    rbx,rdx
   14002357e:	movzx  edi,cx
   140023581:	xor    eax,eax
   140023583:	test   rdx,rdx
   140023586:	setne  al
   140023589:	test   eax,eax
   14002358b:	jne    0x1400235a4
   14002358d:	call   0x14000b9f0
   140023592:	mov    DWORD PTR [rax],0x16
   140023598:	call   0x14000b8b8
   14002359d:	mov    eax,0xffff
   1400235a2:	jmp    0x1400235c6
   1400235a4:	mov    rcx,rdx
   1400235a7:	call   0x14000a920
   1400235ac:	nop
   1400235ad:	mov    rdx,rbx
   1400235b0:	movzx  ecx,di
   1400235b3:	call   0x140023378
   1400235b8:	movzx  edi,ax
   1400235bb:	mov    rcx,rbx
   1400235be:	call   0x14000a9bc
   1400235c3:	movzx  eax,di
   1400235c6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400235cb:	add    rsp,0x20
   1400235cf:	pop    rdi
   1400235d0:	ret    
   1400235d1:	int3   
   1400235d2:	int3   
   1400235d3:	int3   
   1400235d4:	jmp    0x14002356c
   1400235d9:	int3   
   1400235da:	int3   
   1400235db:	int3   
   1400235dc:	mov    rax,rsp
   1400235df:	mov    QWORD PTR [rax+0x8],rbx
   1400235e3:	mov    QWORD PTR [rax+0x10],rbp
   1400235e7:	mov    QWORD PTR [rax+0x18],rsi
   1400235eb:	mov    QWORD PTR [rax+0x20],rdi
   1400235ef:	push   r14
   1400235f1:	sub    rsp,0x50
   1400235f5:	xor    r14d,r14d
   1400235f8:	mov    rbp,r8
   1400235fb:	mov    rsi,rdx
   1400235fe:	mov    rdi,rcx
   140023601:	test   rdx,rdx
   140023604:	je     0x140023619
   140023606:	test   r8,r8
   140023609:	je     0x140023619
   14002360b:	cmp    BYTE PTR [rdx],r14b
   14002360e:	jne    0x140023636
   140023610:	test   rcx,rcx
   140023613:	je     0x140023619
   140023615:	mov    WORD PTR [rcx],r14w
   140023619:	xor    eax,eax
   14002361b:	mov    rbx,QWORD PTR [rsp+0x60]
   140023620:	mov    rbp,QWORD PTR [rsp+0x68]
   140023625:	mov    rsi,QWORD PTR [rsp+0x70]
   14002362a:	mov    rdi,QWORD PTR [rsp+0x78]
   14002362f:	add    rsp,0x50
   140023633:	pop    r14
   140023635:	ret    
   140023636:	lea    rcx,[rsp+0x30]
   14002363b:	mov    rdx,r9
   14002363e:	call   0x140007ff0
   140023643:	mov    rax,QWORD PTR [rsp+0x30]
   140023648:	cmp    QWORD PTR [rax+0x138],r14
   14002364f:	jne    0x140023666
   140023651:	test   rdi,rdi
   140023654:	je     0x14002365c
   140023656:	movzx  eax,BYTE PTR [rsi]
   140023659:	mov    WORD PTR [rdi],ax
   14002365c:	mov    ebx,0x1
   140023661:	jmp    0x140023713
   140023666:	movzx  ecx,BYTE PTR [rsi]
   140023669:	lea    rdx,[rsp+0x30]
   14002366e:	call   0x14001d1f4
   140023673:	mov    ebx,0x1
   140023678:	test   eax,eax
   14002367a:	je     0x1400236d6
   14002367c:	mov    rcx,QWORD PTR [rsp+0x30]
   140023681:	mov    r9d,DWORD PTR [rcx+0xd4]
   140023688:	cmp    r9d,ebx
   14002368b:	jle    0x1400236bc
   14002368d:	cmp    ebp,r9d
   140023690:	jl     0x1400236bc
   140023692:	mov    ecx,DWORD PTR [rcx+0x4]
   140023695:	mov    eax,r14d
   140023698:	test   rdi,rdi
   14002369b:	setne  al
   14002369e:	lea    edx,[rbx+0x8]
   1400236a1:	mov    r8,rsi
   1400236a4:	mov    DWORD PTR [rsp+0x28],eax
   1400236a8:	mov    QWORD PTR [rsp+0x20],rdi
   1400236ad:	call   QWORD PTR [rip+0x11b9d]        # 0x140035250
   1400236b3:	mov    rcx,QWORD PTR [rsp+0x30]
   1400236b8:	test   eax,eax
   1400236ba:	jne    0x1400236ce
   1400236bc:	movsxd rax,DWORD PTR [rcx+0xd4]
   1400236c3:	cmp    rbp,rax
   1400236c6:	jb     0x140023705
   1400236c8:	cmp    BYTE PTR [rsi+0x1],r14b
   1400236cc:	je     0x140023705
   1400236ce:	mov    ebx,DWORD PTR [rcx+0xd4]
   1400236d4:	jmp    0x140023713
   1400236d6:	mov    eax,r14d
   1400236d9:	test   rdi,rdi
   1400236dc:	mov    r9d,ebx
   1400236df:	setne  al
   1400236e2:	mov    r8,rsi
   1400236e5:	mov    edx,0x9
   1400236ea:	mov    DWORD PTR [rsp+0x28],eax
   1400236ee:	mov    rax,QWORD PTR [rsp+0x30]
   1400236f3:	mov    QWORD PTR [rsp+0x20],rdi
   1400236f8:	mov    ecx,DWORD PTR [rax+0x4]
   1400236fb:	call   QWORD PTR [rip+0x11b4f]        # 0x140035250
   140023701:	test   eax,eax
   140023703:	jne    0x140023713
   140023705:	call   0x14000b9f0
   14002370a:	or     ebx,0xffffffff
   14002370d:	mov    DWORD PTR [rax],0x2a
   140023713:	cmp    BYTE PTR [rsp+0x48],r14b
   140023718:	je     0x140023726
   14002371a:	mov    rcx,QWORD PTR [rsp+0x40]
   14002371f:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140023726:	mov    eax,ebx
   140023728:	jmp    0x14002361b
   14002372d:	int3   
   14002372e:	int3   
   14002372f:	int3   
   140023730:	xor    r9d,r9d
   140023733:	jmp    0x1400235dc
   140023738:	mov    QWORD PTR [rsp+0x18],rbx
   14002373d:	mov    QWORD PTR [rsp+0x8],rcx
   140023742:	push   rbp
   140023743:	push   rsi
   140023744:	push   rdi
   140023745:	push   r12
   140023747:	push   r13
   140023749:	push   r14
   14002374b:	push   r15
   14002374d:	sub    rsp,0x20
   140023751:	mov    ebp,r9d
   140023754:	mov    r14d,r8d
   140023757:	mov    r15,rdx
   14002375a:	test   rdx,rdx
   14002375d:	je     0x140023762
   14002375f:	mov    QWORD PTR [rdx],rcx
   140023762:	test   rcx,rcx
   140023765:	jne    0x14002377e
   140023767:	call   0x14000b9f0
   14002376c:	mov    DWORD PTR [rax],0x16
   140023772:	call   0x14000b8b8
   140023777:	xor    eax,eax
   140023779:	jmp    0x14002390b
   14002377e:	test   r8d,r8d
   140023781:	je     0x14002378c
   140023783:	lea    eax,[r8-0x2]
   140023787:	cmp    eax,0x22
   14002378a:	ja     0x140023767
   14002378c:	movzx  esi,WORD PTR [rcx]
   14002378f:	xor    edi,edi
   140023791:	lea    rbx,[rcx+0x2]
   140023795:	lea    r13d,[rdi+0x8]
   140023799:	jmp    0x1400237a2
   14002379b:	movzx  esi,WORD PTR [rbx]
   14002379e:	add    rbx,0x2
   1400237a2:	mov    edx,r13d
   1400237a5:	movzx  ecx,si
   1400237a8:	call   0x140010b00
   1400237ad:	test   eax,eax
   1400237af:	jne    0x14002379b
   1400237b1:	cmp    si,0x2d
   1400237b5:	jne    0x1400237bc
   1400237b7:	or     ebp,0x2
   1400237ba:	jmp    0x1400237c2
   1400237bc:	cmp    si,0x2b
   1400237c0:	jne    0x1400237c9
   1400237c2:	movzx  esi,WORD PTR [rbx]
   1400237c5:	add    rbx,0x2
   1400237c9:	mov    r13d,0xffdf
   1400237cf:	test   r14d,r14d
   1400237d2:	jne    0x140023803
   1400237d4:	movzx  ecx,si
   1400237d7:	call   0x14002cae8
   1400237dc:	test   eax,eax
   1400237de:	je     0x1400237e8
   1400237e0:	mov    r14d,0xa
   1400237e6:	jmp    0x14002382a
   1400237e8:	movzx  eax,WORD PTR [rbx]
   1400237eb:	sub    ax,0x58
   1400237ef:	test   r13w,ax
   1400237f3:	je     0x1400237fd
   1400237f5:	mov    r14d,0x8
   1400237fb:	jmp    0x14002382a
   1400237fd:	mov    r14d,0x10
   140023803:	cmp    r14d,0x10
   140023807:	jne    0x14002382a
   140023809:	movzx  ecx,si
   14002380c:	call   0x14002cae8
   140023811:	test   eax,eax
   140023813:	jne    0x14002382a
   140023815:	movzx  eax,WORD PTR [rbx]
   140023818:	sub    ax,0x58
   14002381c:	test   r13w,ax
   140023820:	jne    0x14002382a
   140023822:	movzx  esi,WORD PTR [rbx+0x2]
   140023826:	add    rbx,0x4
   14002382a:	xor    edx,edx
   14002382c:	or     eax,0xffffffff
   14002382f:	div    r14d
   140023832:	mov    r13d,eax
   140023835:	mov    r12d,edx
   140023838:	movzx  ecx,si
   14002383b:	call   0x14002cae8
   140023840:	cmp    eax,0xffffffff
   140023843:	jne    0x140023869
   140023845:	lea    ecx,[rsi-0x41]
   140023848:	cmp    cx,0x19
   14002384c:	jbe    0x140023857
   14002384e:	lea    eax,[rsi-0x61]
   140023851:	cmp    ax,0x19
   140023855:	ja     0x140023885
   140023857:	lea    eax,[rsi-0x61]
   14002385a:	cmp    ax,0x19
   14002385e:	movzx  eax,si
   140023861:	ja     0x140023866
   140023863:	sub    eax,0x20
   140023866:	add    eax,0xffffffc9
   140023869:	cmp    eax,r14d
   14002386c:	jae    0x140023885
   14002386e:	or     ebp,0x8
   140023871:	cmp    edi,r13d
   140023874:	jb     0x14002389f
   140023876:	jne    0x14002387d
   140023878:	cmp    eax,r12d
   14002387b:	jbe    0x14002389f
   14002387d:	or     ebp,0x4
   140023880:	test   r15,r15
   140023883:	jne    0x1400238a5
   140023885:	mov    r12,QWORD PTR [rsp+0x60]
   14002388a:	sub    rbx,0x2
   14002388e:	test   bpl,0x8
   140023892:	jne    0x1400238ae
   140023894:	test   r15,r15
   140023897:	cmovne rbx,r12
   14002389b:	xor    edi,edi
   14002389d:	jmp    0x1400238f9
   14002389f:	imul   edi,r14d
   1400238a3:	add    edi,eax
   1400238a5:	movzx  esi,WORD PTR [rbx]
   1400238a8:	add    rbx,0x2
   1400238ac:	jmp    0x140023838
   1400238ae:	mov    esi,0x7fffffff
   1400238b3:	test   bpl,0x4
   1400238b7:	jne    0x1400238d6
   1400238b9:	test   bpl,0x1
   1400238bd:	jne    0x1400238f9
   1400238bf:	mov    eax,ebp
   1400238c1:	and    eax,0x2
   1400238c4:	je     0x1400238ce
   1400238c6:	cmp    edi,0x80000000
   1400238cc:	ja     0x1400238d6
   1400238ce:	test   eax,eax
   1400238d0:	jne    0x1400238f9
   1400238d2:	cmp    edi,esi
   1400238d4:	jbe    0x1400238f9
   1400238d6:	call   0x14000b9f0
   1400238db:	mov    DWORD PTR [rax],0x22
   1400238e1:	test   bpl,0x1
   1400238e5:	je     0x1400238ec
   1400238e7:	or     edi,0xffffffff
   1400238ea:	jmp    0x1400238f9
   1400238ec:	mov    al,bpl
   1400238ef:	and    al,0x2
   1400238f1:	neg    al
   1400238f3:	sbb    edi,edi
   1400238f5:	neg    edi
   1400238f7:	add    edi,esi
   1400238f9:	test   r15,r15
   1400238fc:	je     0x140023901
   1400238fe:	mov    QWORD PTR [r15],rbx
   140023901:	test   bpl,0x2
   140023905:	je     0x140023909
   140023907:	neg    edi
   140023909:	mov    eax,edi
   14002390b:	mov    rbx,QWORD PTR [rsp+0x70]
   140023910:	add    rsp,0x20
   140023914:	pop    r15
   140023916:	pop    r14
   140023918:	pop    r13
   14002391a:	pop    r12
   14002391c:	pop    rdi
   14002391d:	pop    rsi
   14002391e:	pop    rbp
   14002391f:	ret    
   140023920:	xor    r9d,r9d
   140023923:	jmp    0x140023738
   140023928:	mov    r9d,0x1
   14002392e:	jmp    0x140023738
   140023933:	int3   
   140023934:	xor    r9d,r9d
   140023937:	jmp    0x140023738
   14002393c:	mov    r9d,0x1
   140023942:	jmp    0x140023738
   140023947:	int3   
   140023948:	mov    QWORD PTR [rsp+0x8],rbx
   14002394d:	mov    QWORD PTR [rsp+0x18],rbp
   140023952:	push   rsi
   140023953:	push   rdi
   140023954:	push   r12
   140023956:	push   r14
   140023958:	push   r15
   14002395a:	sub    rsp,0x40
   14002395e:	mov    r12,rdx
   140023961:	mov    rdx,rcx
   140023964:	lea    rcx,[rsp+0x20]
   140023969:	mov    r14d,r9d
   14002396c:	mov    r15,r8
   14002396f:	call   0x140007ff0
   140023974:	test   r15,r15
   140023977:	je     0x14002397c
   140023979:	mov    QWORD PTR [r15],r12
   14002397c:	test   r12,r12
   14002397f:	je     0x14002398f
   140023981:	test   r14d,r14d
   140023984:	je     0x1400239a4
   140023986:	lea    eax,[r14-0x2]
   14002398a:	cmp    eax,0x22
   14002398d:	jbe    0x1400239a4
   14002398f:	call   0x14000b9f0
   140023994:	mov    DWORD PTR [rax],0x16
   14002399a:	call   0x14000b8b8
   14002399f:	jmp    0x140023a2a
   1400239a4:	mov    sil,BYTE PTR [r12]
   1400239a8:	mov    r8,QWORD PTR [rsp+0x20]
   1400239ad:	xor    edi,edi
   1400239af:	lea    rbx,[r12+0x1]
   1400239b4:	cmp    DWORD PTR [r8+0xd4],0x1
   1400239bc:	jle    0x1400239d8
   1400239be:	lea    r8,[rsp+0x20]
   1400239c3:	movzx  ecx,sil
   1400239c7:	mov    edx,0x8
   1400239cc:	call   0x14002c4c4
   1400239d1:	mov    r8,QWORD PTR [rsp+0x20]
   1400239d6:	jmp    0x1400239ea
   1400239d8:	mov    rax,QWORD PTR [r8+0x108]
   1400239df:	movzx  ecx,sil
   1400239e3:	movzx  eax,WORD PTR [rax+rcx*2]
   1400239e7:	and    eax,0x8
   1400239ea:	test   eax,eax
   1400239ec:	je     0x1400239f6
   1400239ee:	mov    sil,BYTE PTR [rbx]
   1400239f1:	inc    rbx
   1400239f4:	jmp    0x1400239b4
   1400239f6:	mov    ebp,DWORD PTR [rsp+0x90]
   1400239fd:	cmp    sil,0x2d
   140023a01:	jne    0x140023a08
   140023a03:	or     ebp,0x2
   140023a06:	jmp    0x140023a0e
   140023a08:	cmp    sil,0x2b
   140023a0c:	jne    0x140023a14
   140023a0e:	mov    sil,BYTE PTR [rbx]
   140023a11:	inc    rbx
   140023a14:	test   r14d,r14d
   140023a17:	je     0x140023a36
   140023a19:	lea    eax,[r14-0x2]
   140023a1d:	cmp    eax,0x22
   140023a20:	jbe    0x140023a31
   140023a22:	test   r15,r15
   140023a25:	je     0x140023a2a
   140023a27:	mov    QWORD PTR [r15],r12
   140023a2a:	xor    edi,edi
   140023a2c:	jmp    0x140023b56
   140023a31:	test   r14d,r14d
   140023a34:	jne    0x140023a5c
   140023a36:	cmp    sil,0x30
   140023a3a:	je     0x140023a44
   140023a3c:	mov    r14d,0xa
   140023a42:	jmp    0x140023a78
   140023a44:	mov    al,BYTE PTR [rbx]
   140023a46:	sub    al,0x58
   140023a48:	test   al,0xdf
   140023a4a:	je     0x140023a54
   140023a4c:	mov    r14d,0x8
   140023a52:	jmp    0x140023a78
   140023a54:	mov    r14d,0x10
   140023a5a:	jmp    0x140023a68
   140023a5c:	cmp    r14d,0x10
   140023a60:	jne    0x140023a78
   140023a62:	cmp    sil,0x30
   140023a66:	jne    0x140023a78
   140023a68:	mov    al,BYTE PTR [rbx]
   140023a6a:	sub    al,0x58
   140023a6c:	test   al,0xdf
   140023a6e:	jne    0x140023a78
   140023a70:	mov    sil,BYTE PTR [rbx+0x1]
   140023a74:	add    rbx,0x2
   140023a78:	mov    r10,QWORD PTR [r8+0x108]
   140023a7f:	xor    edx,edx
   140023a81:	or     eax,0xffffffff
   140023a84:	div    r14d
   140023a87:	mov    r9d,eax
   140023a8a:	movzx  ecx,sil
   140023a8e:	movzx  r8d,WORD PTR [r10+rcx*2]
   140023a93:	mov    ecx,r8d
   140023a96:	and    ecx,0x4
   140023a99:	je     0x140023aa4
   140023a9b:	movsx  ecx,sil
   140023a9f:	sub    ecx,0x30
   140023aa2:	jmp    0x140023abe
   140023aa4:	and    r8d,0x103
   140023aab:	je     0x140023ad9
   140023aad:	lea    eax,[rsi-0x61]
   140023ab0:	movsx  ecx,sil
   140023ab4:	cmp    al,0x19
   140023ab6:	ja     0x140023abb
   140023ab8:	sub    ecx,0x20
   140023abb:	add    ecx,0xffffffc9
   140023abe:	cmp    ecx,r14d
   140023ac1:	jae    0x140023ad9
   140023ac3:	or     ebp,0x8
   140023ac6:	cmp    edi,r9d
   140023ac9:	jb     0x140023aed
   140023acb:	jne    0x140023ad1
   140023acd:	cmp    ecx,edx
   140023acf:	jbe    0x140023aed
   140023ad1:	or     ebp,0x4
   140023ad4:	test   r15,r15
   140023ad7:	jne    0x140023af3
   140023ad9:	dec    rbx
   140023adc:	test   bpl,0x8
   140023ae0:	jne    0x140023afb
   140023ae2:	test   r15,r15
   140023ae5:	cmovne rbx,r12
   140023ae9:	xor    edi,edi
   140023aeb:	jmp    0x140023b46
   140023aed:	imul   edi,r14d
   140023af1:	add    edi,ecx
   140023af3:	mov    sil,BYTE PTR [rbx]
   140023af6:	inc    rbx
   140023af9:	jmp    0x140023a8a
   140023afb:	mov    esi,0x7fffffff
   140023b00:	test   bpl,0x4
   140023b04:	jne    0x140023b23
   140023b06:	test   bpl,0x1
   140023b0a:	jne    0x140023b46
   140023b0c:	mov    eax,ebp
   140023b0e:	and    eax,0x2
   140023b11:	je     0x140023b1b
   140023b13:	cmp    edi,0x80000000
   140023b19:	ja     0x140023b23
   140023b1b:	test   eax,eax
   140023b1d:	jne    0x140023b46
   140023b1f:	cmp    edi,esi
   140023b21:	jbe    0x140023b46
   140023b23:	call   0x14000b9f0
   140023b28:	mov    DWORD PTR [rax],0x22
   140023b2e:	test   bpl,0x1
   140023b32:	je     0x140023b39
   140023b34:	or     edi,0xffffffff
   140023b37:	jmp    0x140023b46
   140023b39:	mov    al,bpl
   140023b3c:	and    al,0x2
   140023b3e:	neg    al
   140023b40:	sbb    edi,edi
   140023b42:	neg    edi
   140023b44:	add    edi,esi
   140023b46:	test   r15,r15
   140023b49:	je     0x140023b4e
   140023b4b:	mov    QWORD PTR [r15],rbx
   140023b4e:	test   bpl,0x2
   140023b52:	je     0x140023b56
   140023b54:	neg    edi
   140023b56:	cmp    BYTE PTR [rsp+0x38],0x0
   140023b5b:	je     0x140023b69
   140023b5d:	mov    rcx,QWORD PTR [rsp+0x30]
   140023b62:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140023b69:	lea    r11,[rsp+0x40]
   140023b6e:	mov    eax,edi
   140023b70:	mov    rbx,QWORD PTR [r11+0x30]
   140023b74:	mov    rbp,QWORD PTR [r11+0x40]
   140023b78:	mov    rsp,r11
   140023b7b:	pop    r15
   140023b7d:	pop    r14
   140023b7f:	pop    r12
   140023b81:	pop    rdi
   140023b82:	pop    rsi
   140023b83:	ret    
   140023b84:	sub    rsp,0x38
   140023b88:	and    DWORD PTR [rsp+0x20],0x0
   140023b8d:	mov    rax,r9
   140023b90:	mov    r9d,r8d
   140023b93:	mov    r8,rdx
   140023b96:	mov    rdx,rcx
   140023b99:	mov    rcx,rax
   140023b9c:	call   0x140023948
   140023ba1:	add    rsp,0x38
   140023ba5:	ret    
   140023ba6:	int3   
   140023ba7:	int3   
   140023ba8:	sub    rsp,0x38
   140023bac:	mov    rax,r9
   140023baf:	mov    r9d,r8d
   140023bb2:	mov    r8,rdx
   140023bb5:	mov    rdx,rcx
   140023bb8:	mov    rcx,rax
   140023bbb:	mov    DWORD PTR [rsp+0x20],0x1
   140023bc3:	call   0x140023948
   140023bc8:	add    rsp,0x38
   140023bcc:	ret    
   140023bcd:	int3   
   140023bce:	int3   
   140023bcf:	int3   
   140023bd0:	sub    rsp,0x38
   140023bd4:	xor    eax,eax
   140023bd6:	mov    r9d,r8d
   140023bd9:	mov    r8,rdx
   140023bdc:	cmp    DWORD PTR [rip+0x23e12],eax        # 0x1400479f4
   140023be2:	mov    DWORD PTR [rsp+0x20],eax
   140023be6:	mov    rdx,rcx
   140023be9:	jne    0x140023bf4
   140023beb:	lea    rcx,[rip+0x22556]        # 0x140046148
   140023bf2:	jmp    0x140023bf6
   140023bf4:	xor    ecx,ecx
   140023bf6:	call   0x140023948
   140023bfb:	add    rsp,0x38
   140023bff:	ret    
   140023c00:	sub    rsp,0x38
   140023c04:	cmp    DWORD PTR [rip+0x23de9],0x0        # 0x1400479f4
   140023c0b:	mov    r9d,r8d
   140023c0e:	mov    r8,rdx
   140023c11:	mov    rdx,rcx
   140023c14:	mov    DWORD PTR [rsp+0x20],0x1
   140023c1c:	jne    0x140023c27
   140023c1e:	lea    rcx,[rip+0x22523]        # 0x140046148
   140023c25:	jmp    0x140023c29
   140023c27:	xor    ecx,ecx
   140023c29:	call   0x140023948
   140023c2e:	add    rsp,0x38
   140023c32:	ret    
   140023c33:	int3   
   140023c34:	neg    rcx
   140023c37:	sbb    eax,eax
   140023c39:	and    eax,0x1
   140023c3c:	ret    
   140023c3d:	int3   
   140023c3e:	int3   
   140023c3f:	int3   
   140023c40:	neg    rcx
   140023c43:	sbb    eax,eax
   140023c45:	and    eax,0x1
   140023c48:	ret    
   140023c49:	int3   
   140023c4a:	int3   
   140023c4b:	int3   
   140023c4c:	neg    rcx
   140023c4f:	sbb    eax,eax
   140023c51:	and    eax,0x1
   140023c54:	ret    
   140023c55:	int3   
   140023c56:	int3   
   140023c57:	int3   
   140023c58:	int3   
   140023c59:	int3   
   140023c5a:	int3   
   140023c5b:	int3   
   140023c5c:	int3   
   140023c5d:	int3   
   140023c5e:	int3   
   140023c5f:	int3   
   140023c60:	int3   
   140023c61:	int3   
   140023c62:	int3   
   140023c63:	int3   
   140023c64:	int3   
   140023c65:	int3   
   140023c66:	data16 nop WORD PTR [rax+rax*1+0x0]
   140023c70:	sub    rsp,0x28
   140023c74:	mov    QWORD PTR [rsp+0x30],rcx
   140023c79:	mov    QWORD PTR [rsp+0x38],rdx
   140023c7e:	mov    DWORD PTR [rsp+0x40],r8d
   140023c83:	mov    rdx,QWORD PTR [rdx]
   140023c86:	mov    rax,rcx
   140023c89:	call   0x14001d100
   140023c8e:	call   rax
   140023c90:	call   0x14001d130
   140023c95:	mov    rcx,rax
   140023c98:	mov    rdx,QWORD PTR [rsp+0x38]
   140023c9d:	mov    rdx,QWORD PTR [rdx]
   140023ca0:	mov    r8d,0x2
   140023ca6:	call   0x14001d100
   140023cab:	add    rsp,0x28
   140023caf:	ret    
   140023cb0:	mov    rax,QWORD PTR [rsp]
   140023cb4:	mov    QWORD PTR [rcx],rax
   140023cb7:	ret    
   140023cb8:	and    QWORD PTR [rcx],0x0
   140023cbc:	mov    rax,rcx
   140023cbf:	ret    
   140023cc0:	mov    QWORD PTR [rsp+0x8],rbx
   140023cc5:	mov    QWORD PTR [rsp+0x10],rsi
   140023cca:	push   rdi
   140023ccb:	sub    rsp,0x20
   140023ccf:	and    QWORD PTR [rcx],0x0
   140023cd3:	mov    BYTE PTR [rcx+0x8],0x0
   140023cd7:	and    DWORD PTR [rcx+0x8],0xffff00ff
   140023cde:	mov    rdi,rdx
   140023ce1:	mov    rdx,QWORD PTR [rdx]
   140023ce4:	mov    sil,r8b
   140023ce7:	mov    rbx,rcx
   140023cea:	test   rdx,rdx
   140023ced:	je     0x140023d89
   140023cf3:	cmp    BYTE PTR [rdx],0x0
   140023cf6:	je     0x140023d83
   140023cfc:	xor    r8d,r8d
   140023cff:	mov    r9,QWORD PTR [rdi]
   140023d02:	mov    cl,BYTE PTR [r9]
   140023d05:	cmp    cl,sil
   140023d08:	je     0x140023d4b
   140023d0a:	lea    eax,[rcx-0x24]
   140023d0d:	cmp    al,0x3b
   140023d0f:	ja     0x140023d21
   140023d11:	movabs r10,0x87fffffe53ff201
   140023d1b:	bt     r10,rax
   140023d1f:	jb     0x140023d3c
   140023d21:	lea    eax,[rcx-0x61]
   140023d24:	cmp    al,0x19
   140023d26:	jbe    0x140023d3c
   140023d28:	add    cl,0x80
   140023d2b:	cmp    cl,0x7e
   140023d2e:	jbe    0x140023d3c
   140023d30:	test   DWORD PTR [rip+0x24f6a],0x10000        # 0x140048ca4
   140023d3a:	je     0x140023d71
   140023d3c:	lea    rax,[r9+0x1]
   140023d40:	inc    r8d
   140023d43:	mov    QWORD PTR [rdi],rax
   140023d46:	cmp    BYTE PTR [rax],0x0
   140023d49:	jne    0x140023cff
   140023d4b:	mov    rcx,rbx
   140023d4e:	call   0x140025878
   140023d53:	mov    rax,QWORD PTR [rdi]
   140023d56:	mov    cl,BYTE PTR [rax]
   140023d58:	test   cl,cl
   140023d5a:	je     0x140023d77
   140023d5c:	inc    rax
   140023d5f:	mov    QWORD PTR [rdi],rax
   140023d62:	cmp    cl,sil
   140023d65:	je     0x140023d8d
   140023d67:	and    QWORD PTR [rbx],0x0
   140023d6b:	mov    BYTE PTR [rbx+0x8],0x3
   140023d6f:	jmp    0x140023d8d
   140023d71:	mov    BYTE PTR [rbx+0x8],0x2
   140023d75:	jmp    0x140023d8d
   140023d77:	cmp    BYTE PTR [rbx+0x8],0x0
   140023d7b:	jne    0x140023d8d
   140023d7d:	mov    BYTE PTR [rbx+0x8],0x1
   140023d81:	jmp    0x140023d8d
   140023d83:	mov    BYTE PTR [rcx+0x8],0x1
   140023d87:	jmp    0x140023d8d
   140023d89:	mov    BYTE PTR [rcx+0x8],0x2
   140023d8d:	mov    rsi,QWORD PTR [rsp+0x38]
   140023d92:	mov    rax,rbx
   140023d95:	mov    rbx,QWORD PTR [rsp+0x30]
   140023d9a:	add    rsp,0x20
   140023d9e:	pop    rdi
   140023d9f:	ret    
   140023da0:	movups xmm0,XMMWORD PTR [rdx]
   140023da3:	mov    rax,rcx
   140023da6:	movdqu XMMWORD PTR [rcx],xmm0
   140023daa:	ret    
   140023dab:	int3   
   140023dac:	mov    BYTE PTR [rsp+0x10],dl
   140023db0:	push   rbx
   140023db1:	sub    rsp,0x20
   140023db5:	and    QWORD PTR [rcx],0x0
   140023db9:	mov    BYTE PTR [rcx+0x8],0x0
   140023dbd:	and    DWORD PTR [rcx+0x8],0xffff00ff
   140023dc4:	mov    rbx,rcx
   140023dc7:	test   dl,dl
   140023dc9:	je     0x140023ddb
   140023dcb:	lea    rdx,[rsp+0x38]
   140023dd0:	mov    r8d,0x1
   140023dd6:	call   0x140025878
   140023ddb:	mov    rax,rbx
   140023dde:	add    rsp,0x20
   140023de2:	pop    rbx
   140023de3:	ret    
   140023de4:	mov    QWORD PTR [rsp+0x8],rbx
   140023de9:	mov    QWORD PTR [rsp+0x10],rsi
   140023dee:	push   rdi
   140023def:	sub    rsp,0x20
   140023df3:	xor    esi,esi
   140023df5:	mov    rdi,rdx
   140023df8:	mov    rbx,rcx
   140023dfb:	test   rdx,rdx
   140023dfe:	je     0x140023e48
   140023e00:	lea    edx,[rsi+0x10]
   140023e03:	lea    rcx,[rip+0x24ea6]        # 0x140048cb0
   140023e0a:	xor    r8d,r8d
   140023e0d:	call   0x140027be8
   140023e12:	test   rax,rax
   140023e15:	je     0x140023e34
   140023e17:	lea    rcx,[rip+0x1b2ea]        # 0x14003f108
   140023e1e:	mov    QWORD PTR [rax],rcx
   140023e21:	mov    cl,BYTE PTR [rdi+0x8]
   140023e24:	sub    cl,0x2
   140023e27:	cmp    cl,0x1
   140023e2a:	cmovbe rdi,rsi
   140023e2e:	mov    QWORD PTR [rax+0x8],rdi
   140023e32:	jmp    0x140023e37
   140023e34:	mov    rax,rsi
   140023e37:	mov    QWORD PTR [rbx],rax
   140023e3a:	neg    rax
   140023e3d:	sbb    al,al
   140023e3f:	not    al
   140023e41:	and    al,0x3
   140023e43:	mov    BYTE PTR [rbx+0x8],al
   140023e46:	jmp    0x140023e4f
   140023e48:	mov    BYTE PTR [rcx+0x8],sil
   140023e4c:	mov    QWORD PTR [rcx],rsi
   140023e4f:	and    DWORD PTR [rbx+0x8],0xffff00ff
   140023e56:	mov    rsi,QWORD PTR [rsp+0x38]
   140023e5b:	mov    rax,rbx
   140023e5e:	mov    rbx,QWORD PTR [rsp+0x30]
   140023e63:	add    rsp,0x20
   140023e67:	pop    rdi
   140023e68:	ret    
   140023e69:	int3   
   140023e6a:	int3   
   140023e6b:	int3   
   140023e6c:	rex push rbx
   140023e6e:	sub    rsp,0x20
   140023e72:	mov    rbx,rcx
   140023e75:	xor    ecx,ecx
   140023e77:	mov    BYTE PTR [rbx+0x8],cl
   140023e7a:	and    DWORD PTR [rbx+0x8],0xffff00ff
   140023e81:	mov    QWORD PTR [rbx],rcx
   140023e84:	test   rdx,rdx
   140023e87:	je     0x140023eaa
   140023e89:	mov    rax,rdx
   140023e8c:	mov    r8d,ecx
   140023e8f:	cmp    BYTE PTR [rdx],cl
   140023e91:	je     0x140023eaa
   140023e93:	inc    rax
   140023e96:	inc    r8d
   140023e99:	cmp    BYTE PTR [rax],cl
   140023e9b:	jne    0x140023e93
   140023e9d:	test   r8d,r8d
   140023ea0:	je     0x140023eaa
   140023ea2:	mov    rcx,rbx
   140023ea5:	call   0x140025878
   140023eaa:	mov    rax,rbx
   140023ead:	add    rsp,0x20
   140023eb1:	pop    rbx
   140023eb2:	ret    
   140023eb3:	int3   
   140023eb4:	mov    QWORD PTR [rsp+0x8],rbx
   140023eb9:	push   rdi
   140023eba:	sub    rsp,0x20
   140023ebe:	and    DWORD PTR [rcx+0x8],0xffff00ff
   140023ec5:	xor    edi,edi
   140023ec7:	mov    rbx,rcx
   140023eca:	lea    ecx,[rdi+0x1]
   140023ecd:	lea    eax,[rdx-0x2]
   140023ed0:	mov    r8d,edx
   140023ed3:	cmp    eax,ecx
   140023ed5:	mov    QWORD PTR [rbx],rdi
   140023ed8:	cmova  r8d,edi
   140023edc:	mov    BYTE PTR [rbx+0x8],r8b
   140023ee0:	cmp    edx,ecx
   140023ee2:	jne    0x140023ef5
   140023ee4:	call   0x14002a7ec
   140023ee9:	mov    QWORD PTR [rbx],rax
   140023eec:	test   rax,rax
   140023eef:	jne    0x140023ef5
   140023ef1:	mov    BYTE PTR [rbx+0x8],0x3
   140023ef5:	mov    rax,rbx
   140023ef8:	mov    rbx,QWORD PTR [rsp+0x30]
   140023efd:	add    rsp,0x20
   140023f01:	pop    rdi
   140023f02:	ret    
   140023f03:	int3   
   140023f04:	and    QWORD PTR [rcx],0x0
   140023f08:	mov    BYTE PTR [rcx+0x8],0x0
   140023f0c:	and    DWORD PTR [rcx+0x8],0xffff00ff
   140023f13:	mov    rax,rcx
   140023f16:	ret    
   140023f17:	int3   
   140023f18:	rex push rbx
   140023f1a:	sub    rsp,0x40
   140023f1e:	mov    rax,QWORD PTR [rip+0x2134b]        # 0x140045270
   140023f25:	xor    rax,rsp
   140023f28:	mov    QWORD PTR [rsp+0x38],rax
   140023f2d:	xor    r11d,r11d
   140023f30:	mov    r8,rdx
   140023f33:	mov    rbx,rcx
   140023f36:	mov    BYTE PTR [rcx+0x8],r11b
   140023f3a:	and    DWORD PTR [rcx+0x8],0xffff00ff
   140023f41:	lea    r9,[rsp+0x35]
   140023f46:	mov    QWORD PTR [rcx],r11
   140023f49:	mov    BYTE PTR [rsp+0x35],r11b
   140023f4e:	mov    r10b,r11b
   140023f51:	test   rdx,rdx
   140023f54:	jns    0x140023f5c
   140023f56:	mov    r10b,0x1
   140023f59:	neg    r8
   140023f5c:	dec    r9
   140023f5f:	movabs rax,0xcccccccccccccccd
   140023f69:	mul    r8
   140023f6c:	shr    rdx,0x3
   140023f70:	mov    al,dl
   140023f72:	shl    al,0x2
   140023f75:	lea    ecx,[rax+rdx*1]
   140023f78:	add    cl,cl
   140023f7a:	sub    r8b,cl
   140023f7d:	add    r8b,0x30
   140023f81:	mov    BYTE PTR [r9],r8b
   140023f84:	mov    r8,rdx
   140023f87:	test   rdx,rdx
   140023f8a:	jne    0x140023f5c
   140023f8c:	test   r10b,r10b
   140023f8f:	je     0x140023f98
   140023f91:	dec    r9
   140023f94:	mov    BYTE PTR [r9],0x2d
   140023f98:	lea    r8,[rsp+0x35]
   140023f9d:	mov    rdx,r9
   140023fa0:	mov    rcx,rbx
   140023fa3:	sub    r8d,r9d
   140023fa6:	call   0x140025878
   140023fab:	mov    rax,rbx
   140023fae:	mov    rcx,QWORD PTR [rsp+0x38]
   140023fb3:	xor    rcx,rsp
   140023fb6:	call   0x1400097d0
   140023fbb:	add    rsp,0x40
   140023fbf:	pop    rbx
   140023fc0:	ret    
   140023fc1:	int3   
   140023fc2:	int3   
   140023fc3:	int3   
   140023fc4:	rex push rbx
   140023fc6:	sub    rsp,0x40
   140023fca:	mov    rax,QWORD PTR [rip+0x2129f]        # 0x140045270
   140023fd1:	xor    rax,rsp
   140023fd4:	mov    QWORD PTR [rsp+0x38],rax
   140023fd9:	xor    r10d,r10d
   140023fdc:	mov    r8,rdx
   140023fdf:	mov    rbx,rcx
   140023fe2:	mov    BYTE PTR [rcx+0x8],r10b
   140023fe6:	and    DWORD PTR [rcx+0x8],0xffff00ff
   140023fed:	lea    r9,[rsp+0x34]
   140023ff2:	mov    QWORD PTR [rcx],r10
   140023ff5:	mov    BYTE PTR [rsp+0x34],r10b
   140023ffa:	dec    r9
   140023ffd:	movabs rax,0xcccccccccccccccd
   140024007:	mul    r8
   14002400a:	shr    rdx,0x3
   14002400e:	mov    al,dl
   140024010:	shl    al,0x2
   140024013:	lea    ecx,[rax+rdx*1]
   140024016:	add    cl,cl
   140024018:	sub    r8b,cl
   14002401b:	add    r8b,0x30
   14002401f:	mov    BYTE PTR [r9],r8b
   140024022:	mov    r8,rdx
   140024025:	test   rdx,rdx
   140024028:	jne    0x140023ffa
   14002402a:	lea    r8,[rsp+0x34]
   14002402f:	mov    rdx,r9
   140024032:	mov    rcx,rbx
   140024035:	sub    r8d,r9d
   140024038:	call   0x140025878
   14002403d:	mov    rax,rbx
   140024040:	mov    rcx,QWORD PTR [rsp+0x38]
   140024045:	xor    rcx,rsp
   140024048:	call   0x1400097d0
   14002404d:	add    rsp,0x40
   140024051:	pop    rbx
   140024052:	ret    
   140024053:	int3   
   140024054:	lea    rax,[rip+0x1b04d]        # 0x14003f0a8
   14002405b:	mov    QWORD PTR [rcx],rax
   14002405e:	mov    rax,rcx
   140024061:	ret    
   140024062:	int3   
   140024063:	int3   
   140024064:	lea    rax,[rip+0x1b0bd]        # 0x14003f128
   14002406b:	mov    DWORD PTR [rcx+0x8],edx
   14002406e:	mov    QWORD PTR [rcx],rax
   140024071:	xor    eax,eax
   140024073:	cmp    edx,0x1
   140024076:	lea    r8d,[rax+0x4]
   14002407a:	cmove  eax,r8d
   14002407e:	mov    DWORD PTR [rcx+0xc],eax
   140024081:	mov    rax,rcx
   140024084:	ret    
   140024085:	int3   
   140024086:	int3   
   140024087:	int3   
   140024088:	or     DWORD PTR [rcx],0xffffffff
   14002408b:	mov    rax,rcx
   14002408e:	ret    
   14002408f:	int3   
   140024090:	or     r10d,0xffffffff
   140024094:	lea    rax,[rcx+0x58]
   140024098:	mov    DWORD PTR [rcx],r10d
   14002409b:	mov    DWORD PTR [rax],r10d
   14002409e:	mov    QWORD PTR [rip+0x24beb],r8        # 0x140048c90
   1400240a5:	mov    QWORD PTR [rip+0x24bdc],r8        # 0x140048c88
   1400240ac:	xor    r8d,r8d
   1400240af:	test   rdx,rdx
   1400240b2:	je     0x1400240c4
   1400240b4:	mov    DWORD PTR [rip+0x24be5],r9d        # 0x140048ca0
   1400240bb:	mov    QWORD PTR [rip+0x24bd6],rdx        # 0x140048c98
   1400240c2:	jmp    0x1400240d2
   1400240c4:	mov    QWORD PTR [rip+0x24bcd],r8        # 0x140048c98
   1400240cb:	mov    DWORD PTR [rip+0x24bce],r8d        # 0x140048ca0
   1400240d2:	mov    QWORD PTR [rip+0x24b9f],rax        # 0x140048c78
   1400240d9:	mov    eax,DWORD PTR [rsp+0x30]
   1400240dd:	mov    QWORD PTR [rip+0x24b8c],rcx        # 0x140048c70
   1400240e4:	mov    DWORD PTR [rip+0x24bba],eax        # 0x140048ca4
   1400240ea:	mov    rax,QWORD PTR [rsp+0x28]
   1400240ef:	mov    BYTE PTR [rip+0x24bb2],r8b        # 0x140048ca8
   1400240f6:	mov    QWORD PTR [rip+0x24b6b],rax        # 0x140048c68
   1400240fd:	mov    rax,rcx
   140024100:	ret    
   140024101:	int3   
   140024102:	int3   
   140024103:	int3   
   140024104:	lea    rax,[rip+0x1afbd]        # 0x14003f0c8
   14002410b:	mov    BYTE PTR [rcx+0x8],dl
   14002410e:	mov    QWORD PTR [rcx],rax
   140024111:	mov    rax,rcx
   140024114:	ret    
   140024115:	int3   
   140024116:	int3   
   140024117:	int3   
   140024118:	lea    rax,[rip+0x1afe9]        # 0x14003f108
   14002411f:	xor    r8d,r8d
   140024122:	mov    QWORD PTR [rcx],rax
   140024125:	test   rdx,rdx
   140024128:	je     0x140024133
   14002412a:	mov    al,BYTE PTR [rdx+0x8]
   14002412d:	sub    al,0x2
   14002412f:	cmp    al,0x1
   140024131:	jbe    0x140024136
   140024133:	mov    r8,rdx
   140024136:	mov    QWORD PTR [rcx+0x8],r8
   14002413a:	mov    rax,rcx
   14002413d:	ret    
   14002413e:	int3   
   14002413f:	int3   
   140024140:	or     DWORD PTR [rcx+0x18],0xffffffff
   140024144:	lea    rax,[rip+0x1affd]        # 0x14003f148
   14002414b:	mov    QWORD PTR [rcx+0x8],rdx
   14002414f:	mov    QWORD PTR [rcx],rax
   140024152:	mov    QWORD PTR [rcx+0x10],r8
   140024156:	mov    rax,rcx
   140024159:	ret    
   14002415a:	int3   
   14002415b:	int3   
   14002415c:	mov    QWORD PTR [rsp+0x8],rbx
   140024161:	mov    QWORD PTR [rsp+0x10],rsi
   140024166:	push   rdi
   140024167:	sub    rsp,0x20
   14002416b:	lea    rax,[rip+0x1af76]        # 0x14003f0e8
   140024172:	mov    edi,r8d
   140024175:	mov    rsi,rdx
   140024178:	mov    rbx,rcx
   14002417b:	mov    QWORD PTR [rcx],rax
   14002417e:	test   r8d,r8d
   140024181:	je     0x1400241c7
   140024183:	test   rdx,rdx
   140024186:	je     0x1400241c7
   140024188:	lea    rcx,[rip+0x24b21]        # 0x140048cb0
   14002418f:	movsxd rdx,edi
   140024192:	xor    r8d,r8d
   140024195:	call   0x140027be8
   14002419a:	mov    DWORD PTR [rbx+0x10],edi
   14002419d:	mov    rcx,rax
   1400241a0:	mov    QWORD PTR [rbx+0x8],rax
   1400241a4:	test   rax,rax
   1400241a7:	je     0x1400241c1
   1400241a9:	test   edi,edi
   1400241ab:	je     0x1400241d0
   1400241ad:	sub    rsi,rax
   1400241b0:	mov    edx,edi
   1400241b2:	mov    al,BYTE PTR [rsi+rcx*1]
   1400241b5:	mov    BYTE PTR [rcx],al
   1400241b7:	inc    rcx
   1400241ba:	dec    rdx
   1400241bd:	jne    0x1400241b2
   1400241bf:	jmp    0x1400241d0
   1400241c1:	and    DWORD PTR [rbx+0x10],0x0
   1400241c5:	jmp    0x1400241d0
   1400241c7:	and    QWORD PTR [rcx+0x8],0x0
   1400241cc:	and    DWORD PTR [rcx+0x10],0x0
   1400241d0:	mov    rsi,QWORD PTR [rsp+0x38]
   1400241d5:	mov    rax,rbx
   1400241d8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400241dd:	add    rsp,0x20
   1400241e1:	pop    rdi
   1400241e2:	ret    
   1400241e3:	int3   
   1400241e4:	mov    rdx,rcx
   1400241e7:	lea    rcx,[rip+0x24ac2]        # 0x140048cb0
   1400241ee:	jmp    0x140027be8
   1400241f3:	int3   
   1400241f4:	movups xmm0,XMMWORD PTR [rdx]
   1400241f7:	mov    rax,rcx
   1400241fa:	movdqu XMMWORD PTR [rcx],xmm0
   1400241fe:	ret    
   1400241ff:	int3   
   140024200:	mov    BYTE PTR [rsp+0x10],dl
   140024204:	push   rbx
   140024205:	sub    rsp,0x20
   140024209:	and    QWORD PTR [rcx],0x0
   14002420d:	mov    BYTE PTR [rcx+0x8],0x0
   140024211:	and    DWORD PTR [rcx+0x8],0xffff00ff
   140024218:	mov    rbx,rcx
   14002421b:	test   dl,dl
   14002421d:	je     0x14002422f
   14002421f:	lea    rdx,[rsp+0x38]
   140024224:	mov    r8d,0x1
   14002422a:	call   0x140025878
   14002422f:	mov    rax,rbx
   140024232:	add    rsp,0x20
   140024236:	pop    rbx
   140024237:	ret    
   140024238:	mov    QWORD PTR [rsp+0x8],rbx
   14002423d:	mov    QWORD PTR [rsp+0x10],rsi
   140024242:	push   rdi
   140024243:	sub    rsp,0x20
   140024247:	xor    esi,esi
   140024249:	mov    rdi,rdx
   14002424c:	mov    rbx,rcx
   14002424f:	mov    BYTE PTR [rcx+0x8],sil
   140024253:	and    DWORD PTR [rcx+0x8],0xffff00ff
   14002425a:	mov    QWORD PTR [rcx],rsi
   14002425d:	test   rdx,rdx
   140024260:	je     0x1400242a7
   140024262:	lea    edx,[rsi+0x10]
   140024265:	lea    rcx,[rip+0x24a44]        # 0x140048cb0
   14002426c:	xor    r8d,r8d
   14002426f:	call   0x140027be8
   140024274:	test   rax,rax
   140024277:	je     0x140024296
   140024279:	lea    rcx,[rip+0x1ae88]        # 0x14003f108
   140024280:	mov    QWORD PTR [rax],rcx
   140024283:	mov    cl,BYTE PTR [rdi+0x8]
   140024286:	sub    cl,0x2
   140024289:	cmp    cl,0x1
   14002428c:	cmovbe rdi,rsi
   140024290:	mov    QWORD PTR [rax+0x8],rdi
   140024294:	jmp    0x140024299
   140024296:	mov    rax,rsi
   140024299:	mov    QWORD PTR [rbx],rax
   14002429c:	test   rax,rax
   14002429f:	jne    0x1400242ab
   1400242a1:	mov    BYTE PTR [rbx+0x8],0x3
   1400242a5:	jmp    0x1400242ab
   1400242a7:	mov    BYTE PTR [rcx+0x8],0x3
   1400242ab:	mov    rsi,QWORD PTR [rsp+0x38]
   1400242b0:	mov    rax,rbx
   1400242b3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400242b8:	add    rsp,0x20
   1400242bc:	pop    rdi
   1400242bd:	ret    
   1400242be:	int3   
   1400242bf:	int3   
   1400242c0:	rex push rbx
   1400242c2:	sub    rsp,0x20
   1400242c6:	mov    rbx,rcx
   1400242c9:	xor    ecx,ecx
   1400242cb:	mov    rax,rdx
   1400242ce:	mov    BYTE PTR [rbx+0x8],cl
   1400242d1:	and    DWORD PTR [rbx+0x8],0xffff00ff
   1400242d8:	mov    QWORD PTR [rbx],rcx
   1400242db:	mov    r8d,ecx
   1400242de:	cmp    BYTE PTR [rdx],cl
   1400242e0:	je     0x1400242ec
   1400242e2:	inc    rax
   1400242e5:	inc    r8d
   1400242e8:	cmp    BYTE PTR [rax],cl
   1400242ea:	jne    0x1400242e2
   1400242ec:	mov    rcx,rbx
   1400242ef:	call   0x140025878
   1400242f4:	mov    rax,rbx
   1400242f7:	add    rsp,0x20
   1400242fb:	pop    rbx
   1400242fc:	ret    
   1400242fd:	int3   
   1400242fe:	int3   
   1400242ff:	int3   
   140024300:	rex push rbx
   140024302:	sub    rsp,0x20
   140024306:	and    DWORD PTR [rcx+0x8],0xffff00ff
   14002430d:	mov    rbx,rcx
   140024310:	mov    BYTE PTR [rcx+0x8],dl
   140024313:	mov    ecx,0x1
   140024318:	cmp    edx,ecx
   14002431a:	jne    0x14002432f
   14002431c:	call   0x14002a7ec
   140024321:	mov    QWORD PTR [rbx],rax
   140024324:	test   rax,rax
   140024327:	jne    0x140024333
   140024329:	mov    BYTE PTR [rbx+0x8],0x3
   14002432d:	jmp    0x140024333
   14002432f:	and    QWORD PTR [rbx],0x0
   140024333:	mov    rax,rbx
   140024336:	add    rsp,0x20
   14002433a:	pop    rbx
   14002433b:	ret    
   14002433c:	rex push rbx
   14002433e:	sub    rsp,0x20
   140024342:	mov    rbx,rdx
   140024345:	cmp    r8d,0x9
   140024349:	ja     0x14002436d
   14002434b:	cmp    DWORD PTR [rcx],0xffffffff
   14002434e:	je     0x140024366
   140024350:	cmp    r8d,DWORD PTR [rcx]
   140024353:	jg     0x140024366
   140024355:	movsxd rax,r8d
   140024358:	mov    rcx,QWORD PTR [rcx+rax*8+0x8]
   14002435d:	movups xmm0,XMMWORD PTR [rcx]
   140024360:	movdqu XMMWORD PTR [rdx],xmm0
   140024364:	jmp    0x14002437a
   140024366:	mov    edx,0x2
   14002436b:	jmp    0x140024372
   14002436d:	mov    edx,0x3
   140024372:	mov    rcx,rbx
   140024375:	call   0x140023eb4
   14002437a:	mov    rax,rbx
   14002437d:	add    rsp,0x20
   140024381:	pop    rbx
   140024382:	ret    
   140024383:	int3   
   140024384:	mov    QWORD PTR [rsp+0x8],rbx
   140024389:	push   rbp
   14002438a:	mov    rbp,rsp
   14002438d:	sub    rsp,0x70
   140024391:	mov    ecx,DWORD PTR [rbp-0x48]
   140024394:	and    QWORD PTR [rbp-0x50],0x0
   140024399:	and    QWORD PTR [rbp-0x40],0x0
   14002439e:	mov    eax,0xffff0000
   1400243a3:	and    DWORD PTR [rbp-0x38],eax
   1400243a6:	and    ecx,eax
   1400243a8:	mov    rax,QWORD PTR [rip+0x248e1]        # 0x140048c90
   1400243af:	mov    DWORD PTR [rbp-0x48],ecx
   1400243b2:	test   rax,rax
   1400243b5:	je     0x14002448c
   1400243bb:	cmp    BYTE PTR [rax],0x3f
   1400243be:	jne    0x140024457
   1400243c4:	mov    dl,BYTE PTR [rax+0x1]
   1400243c7:	cmp    dl,0x40
   1400243ca:	jne    0x14002440a
   1400243cc:	add    QWORD PTR [rip+0x248b4],0x2        # 0x140048c88
   1400243d4:	lea    rcx,[rbp-0x20]
   1400243d8:	call   0x140026c10
   1400243dd:	lea    rdx,[rip+0x1a908]        # 0x14003ecec
   1400243e4:	lea    rcx,[rbp-0x10]
   1400243e8:	mov    rbx,rax
   1400243eb:	call   0x140023e6c
   1400243f0:	lea    rcx,[rbp-0x30]
   1400243f4:	mov    rdx,rbx
   1400243f7:	movups xmm0,XMMWORD PTR [rax]
   1400243fa:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   1400243ff:	call   0x1400246e0
   140024404:	movaps xmm1,XMMWORD PTR [rbp-0x30]
   140024408:	jmp    0x140024463
   14002440a:	cmp    dl,0x24
   14002440d:	jne    0x140024469
   14002440f:	lea    rcx,[rbp-0x10]
   140024413:	xor    edx,edx
   140024415:	call   0x1400299f0
   14002441a:	movups xmm1,XMMWORD PTR [rax]
   14002441d:	movdqa xmm0,xmm1
   140024421:	psrldq xmm0,0x8
   140024426:	movd   eax,xmm0
   14002442a:	mov    BYTE PTR [rbp-0x48],al
   14002442d:	cmp    al,0x2
   14002442f:	je     0x140024449
   140024431:	test   DWORD PTR [rip+0x24869],0x1000        # 0x140048ca4
   14002443b:	jne    0x140024490
   14002443d:	mov    rax,QWORD PTR [rip+0x24844]        # 0x140048c88
   140024444:	cmp    BYTE PTR [rax],0x0
   140024447:	je     0x140024490
   140024449:	mov    rax,QWORD PTR [rip+0x24840]        # 0x140048c90
   140024450:	mov    QWORD PTR [rip+0x24831],rax        # 0x140048c88
   140024457:	lea    rcx,[rbp-0x10]
   14002445b:	call   0x140026c10
   140024460:	movups xmm1,XMMWORD PTR [rax]
   140024463:	movaps XMMWORD PTR [rbp-0x50],xmm1
   140024467:	jmp    0x140024490
   140024469:	cmp    dl,0x3f
   14002446c:	jne    0x140024457
   14002446e:	mov    rax,QWORD PTR [rip+0x2481b]        # 0x140048c90
   140024475:	cmp    BYTE PTR [rax+0x2],0x40
   140024479:	jne    0x140024457
   14002447b:	and    ecx,0xffff0002
   140024481:	or     ecx,0x2
   140024484:	and    QWORD PTR [rbp-0x50],0x0
   140024489:	mov    DWORD PTR [rbp-0x48],ecx
   14002448c:	movaps xmm1,XMMWORD PTR [rbp-0x50]
   140024490:	cmp    BYTE PTR [rbp-0x48],0x3
   140024494:	jne    0x14002449d
   140024496:	xor    eax,eax
   140024498:	jmp    0x14002456a
   14002449d:	cmp    BYTE PTR [rbp-0x48],0x2
   1400244a1:	je     0x1400244c2
   1400244a3:	test   DWORD PTR [rip+0x247f7],0x1000        # 0x140048ca4
   1400244ad:	jne    0x1400244bb
   1400244af:	mov    rax,QWORD PTR [rip+0x247d2]        # 0x140048c88
   1400244b6:	cmp    BYTE PTR [rax],0x0
   1400244b9:	jne    0x1400244c2
   1400244bb:	movdqa XMMWORD PTR [rbp-0x40],xmm1
   1400244c0:	jmp    0x1400244d2
   1400244c2:	mov    rdx,QWORD PTR [rip+0x247c7]        # 0x140048c90
   1400244c9:	lea    rcx,[rbp-0x40]
   1400244cd:	call   0x1400242c0
   1400244d2:	mov    rax,QWORD PTR [rip+0x247bf]        # 0x140048c98
   1400244d9:	test   rax,rax
   1400244dc:	jne    0x140024511
   1400244de:	mov    rcx,QWORD PTR [rbp-0x40]
   1400244e2:	test   rcx,rcx
   1400244e5:	je     0x1400244ec
   1400244e7:	mov    rax,QWORD PTR [rcx]
   1400244ea:	call   QWORD PTR [rax]
   1400244ec:	inc    eax
   1400244ee:	movsxd rcx,eax
   1400244f1:	mov    DWORD PTR [rip+0x247a9],eax        # 0x140048ca0
   1400244f7:	add    rcx,0x7
   1400244fb:	and    rcx,0xfffffffffffffff8
   1400244ff:	call   QWORD PTR [rip+0x247ab]        # 0x140048cb0
   140024505:	mov    QWORD PTR [rip+0x2478c],rax        # 0x140048c98
   14002450c:	test   rax,rax
   14002450f:	je     0x14002456a
   140024511:	mov    r8d,DWORD PTR [rip+0x24788]        # 0x140048ca0
   140024518:	lea    rcx,[rbp-0x40]
   14002451c:	mov    rdx,rax
   14002451f:	call   0x1400290d4
   140024524:	mov    rax,QWORD PTR [rip+0x2476d]        # 0x140048c98
   14002452b:	mov    dl,BYTE PTR [rax]
   14002452d:	mov    rcx,rax
   140024530:	test   dl,dl
   140024532:	je     0x14002455f
   140024534:	mov    r8b,0x20
   140024537:	cmp    dl,r8b
   14002453a:	jne    0x140024551
   14002453c:	inc    rax
   14002453f:	mov    BYTE PTR [rcx],r8b
   140024542:	inc    rcx
   140024545:	jmp    0x14002454a
   140024547:	inc    rax
   14002454a:	cmp    BYTE PTR [rax],r8b
   14002454d:	je     0x140024547
   14002454f:	jmp    0x140024559
   140024551:	mov    BYTE PTR [rcx],dl
   140024553:	inc    rcx
   140024556:	inc    rax
   140024559:	mov    dl,BYTE PTR [rax]
   14002455b:	test   dl,dl
   14002455d:	jne    0x140024537
   14002455f:	mov    al,BYTE PTR [rax]
   140024561:	mov    BYTE PTR [rcx],al
   140024563:	mov    rax,QWORD PTR [rip+0x2472e]        # 0x140048c98
   14002456a:	mov    rbx,QWORD PTR [rsp+0x80]
   140024572:	add    rsp,0x70
   140024576:	pop    rbp
   140024577:	ret    
   140024578:	mov    QWORD PTR [rsp+0x8],rbx
   14002457d:	push   rdi
   14002457e:	sub    rsp,0x30
   140024582:	mov    rdi,rcx
   140024585:	lea    rcx,[rsp+0x20]
   14002458a:	mov    rbx,r8
   14002458d:	call   0x140023dac
   140024592:	mov    rdx,rbx
   140024595:	mov    rcx,rdi
   140024598:	movups xmm0,XMMWORD PTR [rax]
   14002459b:	movdqu XMMWORD PTR [rdi],xmm0
   14002459f:	call   0x1400246e0
   1400245a4:	mov    rbx,QWORD PTR [rsp+0x40]
   1400245a9:	mov    rax,rdi
   1400245ac:	add    rsp,0x30
   1400245b0:	pop    rdi
   1400245b1:	ret    
   1400245b2:	int3   
   1400245b3:	int3   
   1400245b4:	mov    QWORD PTR [rsp+0x8],rbx
   1400245b9:	push   rdi
   1400245ba:	sub    rsp,0x30
   1400245be:	mov    rdi,rcx
   1400245c1:	lea    rcx,[rsp+0x20]
   1400245c6:	mov    rbx,r8
   1400245c9:	call   0x140023e6c
   1400245ce:	mov    rdx,rbx
   1400245d1:	mov    rcx,rdi
   1400245d4:	movups xmm0,XMMWORD PTR [rax]
   1400245d7:	movdqu XMMWORD PTR [rdi],xmm0
   1400245db:	call   0x1400246e0
   1400245e0:	mov    rbx,QWORD PTR [rsp+0x40]
   1400245e5:	mov    rax,rdi
   1400245e8:	add    rsp,0x30
   1400245ec:	pop    rdi
   1400245ed:	ret    
   1400245ee:	int3   
   1400245ef:	int3   
   1400245f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400245f5:	push   rdi
   1400245f6:	sub    rsp,0x30
   1400245fa:	mov    rdi,rcx
   1400245fd:	lea    rcx,[rsp+0x20]
   140024602:	mov    rbx,r8
   140024605:	call   0x140023eb4
   14002460a:	mov    rdx,rbx
   14002460d:	mov    rcx,rdi
   140024610:	movups xmm0,XMMWORD PTR [rax]
   140024613:	movdqu XMMWORD PTR [rdi],xmm0
   140024617:	call   0x1400246e0
   14002461c:	mov    rbx,QWORD PTR [rsp+0x40]
   140024621:	mov    rax,rdi
   140024624:	add    rsp,0x30
   140024628:	pop    rdi
   140024629:	ret    
   14002462a:	int3   
   14002462b:	int3   
   14002462c:	rex push rbx
   14002462e:	sub    rsp,0x20
   140024632:	movups xmm0,XMMWORD PTR [rcx]
   140024635:	mov    rbx,rdx
   140024638:	mov    rcx,rbx
   14002463b:	movdqu XMMWORD PTR [rdx],xmm0
   14002463f:	mov    rdx,r8
   140024642:	call   0x1400246e0
   140024647:	mov    rax,rbx
   14002464a:	add    rsp,0x20
   14002464e:	pop    rbx
   14002464f:	ret    
   140024650:	rex push rbx
   140024652:	sub    rsp,0x20
   140024656:	movups xmm0,XMMWORD PTR [rcx]
   140024659:	mov    rbx,rdx
   14002465c:	mov    rcx,rbx
   14002465f:	movdqu XMMWORD PTR [rdx],xmm0
   140024663:	mov    dl,r8b
   140024666:	call   0x140024720
   14002466b:	mov    rax,rbx
   14002466e:	add    rsp,0x20
   140024672:	pop    rbx
   140024673:	ret    
   140024674:	rex push rbx
   140024676:	sub    rsp,0x20
   14002467a:	movups xmm0,XMMWORD PTR [rcx]
   14002467d:	mov    rbx,rdx
   140024680:	mov    rcx,rbx
   140024683:	movdqu XMMWORD PTR [rdx],xmm0
   140024687:	mov    rdx,r8
   14002468a:	call   0x1400247a4
   14002468f:	mov    rax,rbx
   140024692:	add    rsp,0x20
   140024696:	pop    rbx
   140024697:	ret    
   140024698:	rex push rbx
   14002469a:	sub    rsp,0x20
   14002469e:	movups xmm0,XMMWORD PTR [rcx]
   1400246a1:	mov    rbx,rdx
   1400246a4:	mov    rcx,rbx
   1400246a7:	movdqu XMMWORD PTR [rdx],xmm0
   1400246ab:	mov    rdx,r8
   1400246ae:	call   0x14002483c
   1400246b3:	mov    rax,rbx
   1400246b6:	add    rsp,0x20
   1400246ba:	pop    rbx
   1400246bb:	ret    
   1400246bc:	rex push rbx
   1400246be:	sub    rsp,0x20
   1400246c2:	movups xmm0,XMMWORD PTR [rcx]
   1400246c5:	mov    rbx,rdx
   1400246c8:	mov    rcx,rbx
   1400246cb:	movdqu XMMWORD PTR [rdx],xmm0
   1400246cf:	mov    edx,r8d
   1400246d2:	call   0x1400248c8
   1400246d7:	mov    rax,rbx
   1400246da:	add    rsp,0x20
   1400246de:	pop    rbx
   1400246df:	ret    
   1400246e0:	rex push rbx
   1400246e2:	sub    rsp,0x20
   1400246e6:	cmp    BYTE PTR [rcx+0x8],0x1
   1400246ea:	mov    rbx,rcx
   1400246ed:	jg     0x140024717
   1400246ef:	cmp    QWORD PTR [rdx],0x0
   1400246f3:	jne    0x140024700
   1400246f5:	movsx  edx,BYTE PTR [rdx+0x8]
   1400246f9:	call   0x1400248c8
   1400246fe:	jmp    0x140024717
   140024700:	cmp    QWORD PTR [rcx],0x0
   140024704:	jne    0x14002470f
   140024706:	movups xmm0,XMMWORD PTR [rdx]
   140024709:	movdqu XMMWORD PTR [rcx],xmm0
   14002470d:	jmp    0x140024717
   14002470f:	mov    rdx,QWORD PTR [rdx]
   140024712:	call   0x1400249f8
   140024717:	mov    rax,rbx
   14002471a:	add    rsp,0x20
   14002471e:	pop    rbx
   14002471f:	ret    
   140024720:	mov    QWORD PTR [rsp+0x10],rbx
   140024725:	push   rdi
   140024726:	sub    rsp,0x20
   14002472a:	mov    r8d,0x1
   140024730:	mov    dil,dl
   140024733:	mov    rbx,rcx
   140024736:	cmp    BYTE PTR [rcx+0x8],r8b
   14002473a:	jg     0x140024796
   14002473c:	test   dl,dl
   14002473e:	je     0x140024796
   140024740:	cmp    QWORD PTR [rcx],0x0
   140024744:	jne    0x140024765
   140024746:	and    QWORD PTR [rcx],0x0
   14002474a:	mov    BYTE PTR [rsp+0x30],dl
   14002474e:	mov    BYTE PTR [rcx+0x8],0x0
   140024752:	and    DWORD PTR [rcx+0x8],0xffff00ff
   140024759:	lea    rdx,[rsp+0x30]
   14002475e:	call   0x140025878
   140024763:	jmp    0x140024796
   140024765:	xor    r8d,r8d
   140024768:	lea    rcx,[rip+0x24541]        # 0x140048cb0
   14002476f:	lea    edx,[r8+0x10]
   140024773:	call   0x140027be8
   140024778:	test   rax,rax
   14002477b:	je     0x14002478b
   14002477d:	lea    rcx,[rip+0x1a944]        # 0x14003f0c8
   140024784:	mov    BYTE PTR [rax+0x8],dil
   140024788:	mov    QWORD PTR [rax],rcx
   14002478b:	mov    rdx,rax
   14002478e:	mov    rcx,rbx
   140024791:	call   0x1400249f8
   140024796:	mov    rax,rbx
   140024799:	mov    rbx,QWORD PTR [rsp+0x38]
   14002479e:	add    rsp,0x20
   1400247a2:	pop    rdi
   1400247a3:	ret    
   1400247a4:	mov    QWORD PTR [rsp+0x8],rbx
   1400247a9:	mov    QWORD PTR [rsp+0x10],rsi
   1400247ae:	push   rdi
   1400247af:	sub    rsp,0x20
   1400247b3:	cmp    BYTE PTR [rcx+0x8],0x1
   1400247b7:	mov    rdi,rdx
   1400247ba:	mov    rbx,rcx
   1400247bd:	jg     0x140024826
   1400247bf:	xor    esi,esi
   1400247c1:	test   rdx,rdx
   1400247c4:	je     0x140024826
   1400247c6:	cmp    QWORD PTR [rcx],rsi
   1400247c9:	jne    0x1400247d2
   1400247cb:	call   0x140024238
   1400247d0:	jmp    0x140024826
   1400247d2:	mov    al,BYTE PTR [rdx+0x8]
   1400247d5:	cmp    al,0x1
   1400247d7:	jbe    0x1400247e3
   1400247d9:	movsx  edx,al
   1400247dc:	call   0x1400248c8
   1400247e1:	jmp    0x140024826
   1400247e3:	xor    r8d,r8d
   1400247e6:	lea    rcx,[rip+0x244c3]        # 0x140048cb0
   1400247ed:	lea    edx,[r8+0x10]
   1400247f1:	call   0x140027be8
   1400247f6:	test   rax,rax
   1400247f9:	je     0x140024818
   1400247fb:	lea    rcx,[rip+0x1a906]        # 0x14003f108
   140024802:	mov    QWORD PTR [rax],rcx
   140024805:	mov    cl,BYTE PTR [rdi+0x8]
   140024808:	sub    cl,0x2
   14002480b:	cmp    cl,0x1
   14002480e:	cmovbe rdi,rsi
   140024812:	mov    QWORD PTR [rax+0x8],rdi
   140024816:	jmp    0x14002481b
   140024818:	mov    rax,rsi
   14002481b:	mov    rdx,rax
   14002481e:	mov    rcx,rbx
   140024821:	call   0x1400249f8
   140024826:	mov    rsi,QWORD PTR [rsp+0x38]
   14002482b:	mov    rax,rbx
   14002482e:	mov    rbx,QWORD PTR [rsp+0x30]
   140024833:	add    rsp,0x20
   140024837:	pop    rdi
   140024838:	ret    
   140024839:	int3   
   14002483a:	int3   
   14002483b:	int3   
   14002483c:	mov    QWORD PTR [rsp+0x8],rbx
   140024841:	mov    QWORD PTR [rsp+0x10],rsi
   140024846:	push   rdi
   140024847:	sub    rsp,0x20
   14002484b:	cmp    BYTE PTR [rcx+0x8],0x1
   14002484f:	mov    rsi,rdx
   140024852:	mov    rdi,rcx
   140024855:	jg     0x1400248b3
   140024857:	xor    ebx,ebx
   140024859:	test   rdx,rdx
   14002485c:	je     0x1400248b3
   14002485e:	cmp    BYTE PTR [rdx],bl
   140024860:	je     0x1400248b3
   140024862:	cmp    QWORD PTR [rcx],rbx
   140024865:	jne    0x14002486e
   140024867:	call   0x1400242c0
   14002486c:	jmp    0x1400248b3
   14002486e:	xor    r8d,r8d
   140024871:	lea    rcx,[rip+0x24438]        # 0x140048cb0
   140024878:	lea    edx,[r8+0x18]
   14002487c:	call   0x140027be8
   140024881:	test   rax,rax
   140024884:	je     0x1400248a8
   140024886:	mov    rcx,rsi
   140024889:	mov    r8d,ebx
   14002488c:	cmp    BYTE PTR [rsi],bl
   14002488e:	je     0x14002489a
   140024890:	inc    rcx
   140024893:	inc    r8d
   140024896:	cmp    BYTE PTR [rcx],bl
   140024898:	jne    0x140024890
   14002489a:	mov    rdx,rsi
   14002489d:	mov    rcx,rax
   1400248a0:	call   0x14002415c
   1400248a5:	mov    rbx,rax
   1400248a8:	mov    rdx,rbx
   1400248ab:	mov    rcx,rdi
   1400248ae:	call   0x1400249f8
   1400248b3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400248b8:	mov    rsi,QWORD PTR [rsp+0x38]
   1400248bd:	mov    rax,rdi
   1400248c0:	add    rsp,0x20
   1400248c4:	pop    rdi
   1400248c5:	ret    
   1400248c6:	int3   
   1400248c7:	int3   
   1400248c8:	rex push rbx
   1400248ca:	sub    rsp,0x20
   1400248ce:	cmp    BYTE PTR [rcx+0x8],0x1
   1400248d2:	mov    rbx,rcx
   1400248d5:	jg     0x140024902
   1400248d7:	cmp    QWORD PTR [rcx],0x0
   1400248db:	je     0x1400248fd
   1400248dd:	lea    eax,[rdx-0x2]
   1400248e0:	cmp    eax,0x1
   1400248e3:	jbe    0x1400248fd
   1400248e5:	test   edx,edx
   1400248e7:	je     0x140024902
   1400248e9:	mov    ecx,edx
   1400248eb:	call   0x14002a7ec
   1400248f0:	mov    rcx,rbx
   1400248f3:	mov    rdx,rax
   1400248f6:	call   0x1400249f8
   1400248fb:	jmp    0x140024902
   1400248fd:	call   0x140024300
   140024902:	mov    rax,rbx
   140024905:	add    rsp,0x20
   140024909:	pop    rbx
   14002490a:	ret    
   14002490b:	int3   
   14002490c:	mov    QWORD PTR [rsp+0x8],rbx
   140024911:	push   rdi
   140024912:	sub    rsp,0x20
   140024916:	cmp    DWORD PTR [rcx],0x9
   140024919:	mov    rdi,rdx
   14002491c:	mov    rbx,rcx
   14002491f:	je     0x14002495c
   140024921:	cmp    QWORD PTR [rdx],0x0
   140024925:	je     0x14002495c
   140024927:	xor    r8d,r8d
   14002492a:	lea    rcx,[rip+0x2437f]        # 0x140048cb0
   140024931:	lea    edx,[r8+0x10]
   140024935:	call   0x140027be8
   14002493a:	mov    rcx,rax
   14002493d:	test   rax,rax
   140024940:	je     0x14002494b
   140024942:	movups xmm0,XMMWORD PTR [rdi]
   140024945:	movdqu XMMWORD PTR [rax],xmm0
   140024949:	jmp    0x14002494d
   14002494b:	xor    ecx,ecx
   14002494d:	test   rcx,rcx
   140024950:	je     0x14002495c
   140024952:	inc    DWORD PTR [rbx]
   140024954:	movsxd rax,DWORD PTR [rbx]
   140024957:	mov    QWORD PTR [rbx+rax*8+0x8],rcx
   14002495c:	mov    rax,rbx
   14002495f:	mov    rbx,QWORD PTR [rsp+0x30]
   140024964:	add    rsp,0x20
   140024968:	pop    rdi
   140024969:	ret    
   14002496a:	int3   
   14002496b:	int3   
   14002496c:	cmp    BYTE PTR [rcx+0x8],0x3
   140024970:	je     0x14002497c
   140024972:	mov    al,BYTE PTR [rdx+0x8]
   140024975:	cmp    al,0x1
   140024977:	jle    0x14002497c
   140024979:	mov    BYTE PTR [rcx+0x8],al
   14002497c:	mov    rax,rcx
   14002497f:	ret    
   140024980:	xor    eax,eax
   140024982:	mov    QWORD PTR [rcx],rdx
   140024985:	mov    QWORD PTR [rcx+0x8],r8
   140024989:	mov    QWORD PTR [rcx+0x20],rax
   14002498d:	mov    QWORD PTR [rcx+0x10],rax
   140024991:	mov    QWORD PTR [rcx+0x18],rax
   140024995:	ret    
   140024996:	int3   
   140024997:	int3   
   140024998:	rex push rbx
   14002499a:	sub    rsp,0x20
   14002499e:	cmp    QWORD PTR [rcx+0x8],0x0
   1400249a3:	mov    rbx,rcx
   1400249a6:	je     0x1400249d0
   1400249a8:	mov    rax,QWORD PTR [rcx+0x10]
   1400249ac:	mov    QWORD PTR [rcx+0x18],rax
   1400249b0:	jmp    0x1400249cb
   1400249b2:	mov    rax,QWORD PTR [rbx+0x18]
   1400249b6:	mov    rcx,QWORD PTR [rax]
   1400249b9:	mov    QWORD PTR [rbx+0x10],rcx
   1400249bd:	mov    rcx,rax
   1400249c0:	call   QWORD PTR [rbx+0x8]
   1400249c3:	mov    rax,QWORD PTR [rbx+0x10]
   1400249c7:	mov    QWORD PTR [rbx+0x18],rax
   1400249cb:	test   rax,rax
   1400249ce:	jne    0x1400249b2
   1400249d0:	add    rsp,0x20
   1400249d4:	pop    rbx
   1400249d5:	ret    
   1400249d6:	int3   
   1400249d7:	int3   
   1400249d8:	mov    eax,DWORD PTR [rip+0x242c6]        # 0x140048ca4
   1400249de:	not    eax
   1400249e0:	test   al,0x1
   1400249e2:	movsxd rax,ecx
   1400249e5:	lea    rcx,[rip+0x199a4]        # 0x14003e390
   1400249ec:	mov    rax,QWORD PTR [rcx+rax*8]
   1400249f0:	jne    0x1400249f6
   1400249f2:	add    rax,0x2
   1400249f6:	ret    
   1400249f7:	int3   
   1400249f8:	mov    QWORD PTR [rsp+0x8],rbx
   1400249fd:	push   rdi
   1400249fe:	sub    rsp,0x20
   140024a02:	mov    rdi,rdx
   140024a05:	mov    rbx,rcx
   140024a08:	test   rdx,rdx
   140024a0b:	je     0x140024a4c
   140024a0d:	xor    r8d,r8d
   140024a10:	lea    rcx,[rip+0x24299]        # 0x140048cb0
   140024a17:	lea    edx,[r8+0x20]
   140024a1b:	call   0x140027be8
   140024a20:	test   rax,rax
   140024a23:	je     0x140024a3e
   140024a25:	mov    rdx,QWORD PTR [rbx]
   140024a28:	or     DWORD PTR [rax+0x18],0xffffffff
   140024a2c:	lea    rcx,[rip+0x1a715]        # 0x14003f148
   140024a33:	mov    QWORD PTR [rax+0x8],rdx
   140024a37:	mov    QWORD PTR [rax],rcx
   140024a3a:	mov    QWORD PTR [rax+0x10],rdi
   140024a3e:	mov    QWORD PTR [rbx],rax
   140024a41:	test   rax,rax
   140024a44:	jne    0x140024a50
   140024a46:	mov    BYTE PTR [rbx+0x8],0x3
   140024a4a:	jmp    0x140024a50
   140024a4c:	mov    BYTE PTR [rcx+0x8],0x3
   140024a50:	mov    rbx,QWORD PTR [rsp+0x30]
   140024a55:	add    rsp,0x20
   140024a59:	pop    rdi
   140024a5a:	ret    
   140024a5b:	int3   
   140024a5c:	mov    rax,rsp
   140024a5f:	mov    QWORD PTR [rax+0x8],rbx
   140024a63:	push   rbp
   140024a64:	push   rsi
   140024a65:	push   rdi
   140024a66:	push   r12
   140024a68:	push   r13
   140024a6a:	push   r14
   140024a6c:	push   r15
   140024a6e:	lea    rbp,[rax-0x5f]
   140024a72:	sub    rsp,0xf0
   140024a79:	mov    ebx,DWORD PTR [rsp+0x48]
   140024a7d:	and    QWORD PTR [rsp+0x40],0x0
   140024a83:	movaps XMMWORD PTR [rax-0x48],xmm6
   140024a87:	and    ebx,0xffff0000
   140024a8d:	movaps XMMWORD PTR [rax-0x58],xmm7
   140024a91:	mov    r12,rdx
   140024a94:	mov    DWORD PTR [rsp+0x48],ebx
   140024a98:	mov    rdi,rcx
   140024a9b:	call   0x140029ccc
   140024aa0:	cmp    QWORD PTR [r12],0x0
   140024aa5:	mov    esi,eax
   140024aa7:	je     0x140024abd
   140024aa9:	test   DWORD PTR [r12+0x8],0x200
   140024ab2:	je     0x140024abd
   140024ab4:	mov    DWORD PTR [rbp+0x7f],0x1
   140024abb:	jmp    0x140024ac1
   140024abd:	and    DWORD PTR [rbp+0x7f],0x0
   140024ac1:	cmp    eax,0xffff
   140024ac6:	jne    0x140024ada
   140024ac8:	mov    edx,0x2
   140024acd:	mov    rcx,rdi
   140024ad0:	call   0x140023eb4
   140024ad5:	jmp    0x1400257b8
   140024ada:	cmp    eax,0xfffe
   140024adf:	jne    0x140024b07
   140024ae1:	lea    rcx,[rsp+0x30]
   140024ae6:	mov    edx,0x1
   140024aeb:	call   0x140023eb4
   140024af0:	mov    rdx,r12
   140024af3:	mov    rcx,rdi
   140024af6:	movups xmm0,XMMWORD PTR [rax]
   140024af9:	movdqu XMMWORD PTR [rdi],xmm0
   140024afd:	call   0x1400246e0
   140024b02:	jmp    0x1400257b8
   140024b07:	cmp    eax,0xfffd
   140024b0c:	jne    0x140024b1c
   140024b0e:	movups xmm0,XMMWORD PTR [r12]
   140024b13:	movdqu XMMWORD PTR [rdi],xmm0
   140024b17:	jmp    0x1400257b8
   140024b1c:	mov    r15d,eax
   140024b1f:	mov    r9d,0x1000
   140024b25:	mov    r8d,0x1b00
   140024b2b:	and    r15d,0x8000
   140024b32:	je     0x140025357
   140024b38:	xor    r13d,r13d
   140024b3b:	mov    edx,eax
   140024b3d:	mov    r14d,esi
   140024b40:	and    edx,0x1800
   140024b46:	cmp    edx,0x800
   140024b4c:	mov    DWORD PTR [rbp+0x6f],edx
   140024b4f:	sete   r13b
   140024b53:	and    eax,0x400
   140024b58:	and    r14d,r9d
   140024b5b:	mov    DWORD PTR [rbp+0x77],eax
   140024b5e:	test   r13d,r13d
   140024b61:	mov    eax,r14d
   140024b64:	mov    ecx,DWORD PTR [rbp+0x77]
   140024b67:	mov    DWORD PTR [rbp-0x45],r13d
   140024b6b:	mov    DWORD PTR [rbp-0x49],r14d
   140024b6f:	cmovne eax,ecx
   140024b72:	test   eax,eax
   140024b74:	je     0x140024b84
   140024b76:	mov    eax,esi
   140024b78:	and    eax,r8d
   140024b7b:	cmp    eax,r9d
   140024b7e:	je     0x140025357
   140024b84:	test   r13d,r13d
   140024b87:	mov    eax,r14d
   140024b8a:	cmovne eax,ecx
   140024b8d:	test   eax,eax
   140024b8f:	je     0x140024bac
   140024b91:	mov    eax,esi
   140024b93:	and    eax,r8d
   140024b96:	cmp    eax,0x1100
   140024b9b:	je     0x140025357
   140024ba1:	cmp    eax,0x1200
   140024ba6:	je     0x140025357
   140024bac:	bt     esi,0xe
   140024bb0:	jae    0x140024c11
   140024bb2:	mov    ecx,DWORD PTR [rip+0x240ec]        # 0x140048ca4
   140024bb8:	mov    eax,ecx
   140024bba:	shr    eax,1
   140024bbc:	not    eax
   140024bbe:	test   al,0x1
   140024bc0:	je     0x140024c90
   140024bc6:	shr    ecx,0x3
   140024bc9:	not    ecx
   140024bcb:	test   cl,0x1
   140024bce:	je     0x140024c90
   140024bd4:	lea    rcx,[rsp+0x30]
   140024bd9:	call   0x140025e04
   140024bde:	lea    rcx,[rbp-0x59]
   140024be2:	mov    dl,0x20
   140024be4:	mov    rbx,rax
   140024be7:	call   0x140023dac
   140024bec:	lea    rcx,[rbp-0x79]
   140024bf0:	mov    rdx,rbx
   140024bf3:	movups xmm0,XMMWORD PTR [rax]
   140024bf6:	movdqu XMMWORD PTR [rbp-0x79],xmm0
   140024bfb:	call   0x1400246e0
   140024c00:	movaps xmm0,XMMWORD PTR [rbp-0x79]
   140024c04:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   140024c0a:	mov    ebx,DWORD PTR [rsp+0x48]
   140024c0e:	mov    edx,DWORD PTR [rbp+0x6f]
   140024c11:	test   r13d,r13d
   140024c14:	cmovne r14d,DWORD PTR [rbp+0x77]
   140024c19:	test   r14d,r14d
   140024c1c:	je     0x140024ddd
   140024c22:	cmp    edx,0x1800
   140024c28:	jne    0x140024ddd
   140024c2e:	lea    rcx,[rsp+0x30]
   140024c33:	xor    edx,edx
   140024c35:	call   0x140026e84
   140024c3a:	lea    rcx,[rbp-0x79]
   140024c3e:	mov    dl,0x7b
   140024c40:	movups xmm0,XMMWORD PTR [r12]
   140024c45:	movdqu XMMWORD PTR [rbp-0x79],xmm0
   140024c4a:	call   0x140024720
   140024c4f:	lea    rdx,[rsp+0x30]
   140024c54:	movaps xmm0,XMMWORD PTR [rbp-0x79]
   140024c58:	lea    rcx,[rbp-0x79]
   140024c5c:	movdqa XMMWORD PTR [rbp-0x79],xmm0
   140024c61:	call   0x1400246e0
   140024c66:	lea    rdx,[rbp-0x79]
   140024c6a:	lea    rcx,[rsp+0x40]
   140024c6f:	call   0x1400246e0
   140024c74:	mov    rax,QWORD PTR [rip+0x2400d]        # 0x140048c88
   140024c7b:	lea    rcx,[rbp-0x39]
   140024c7f:	cmp    BYTE PTR [rax],0x0
   140024c82:	je     0x140024cdf
   140024c84:	cmp    BYTE PTR [rax],0x41
   140024c87:	je     0x140024cc7
   140024c89:	mov    edx,0x2
   140024c8e:	jmp    0x140024ce4
   140024c90:	lea    rcx,[rsp+0x30]
   140024c95:	call   0x140025e04
   140024c9a:	cmp    BYTE PTR [rsp+0x48],0x3
   140024c9f:	je     0x140024c0e
   140024ca5:	cmp    BYTE PTR [rax+0x8],0x1
   140024ca9:	mov    edx,DWORD PTR [rbp+0x6f]
   140024cac:	jle    0x140024c11
   140024cb2:	movzx  eax,BYTE PTR [rax+0x8]
   140024cb6:	and    ebx,0xffffff00
   140024cbc:	or     ebx,eax
   140024cbe:	mov    DWORD PTR [rsp+0x48],ebx
   140024cc2:	jmp    0x140024c11
   140024cc7:	inc    rax
   140024cca:	lea    rdx,[rip+0x1a3bb]        # 0x14003f08c
   140024cd1:	mov    QWORD PTR [rip+0x23fb0],rax        # 0x140048c88
   140024cd8:	call   0x140023e6c
   140024cdd:	jmp    0x140024ce9
   140024cdf:	mov    edx,0x1
   140024ce4:	call   0x140023eb4
   140024ce9:	mov    ebx,0x1000
   140024cee:	test   DWORD PTR [rip+0x23fb0],ebx        # 0x140048ca4
   140024cf4:	jne    0x140024d3e
   140024cf6:	lea    rcx,[rsp+0x30]
   140024cfb:	mov    dl,0x2c
   140024cfd:	call   0x140023dac
   140024d02:	lea    rdx,[rbp-0x39]
   140024d06:	lea    rcx,[rbp-0x79]
   140024d0a:	movups xmm0,XMMWORD PTR [rax]
   140024d0d:	movdqu XMMWORD PTR [rbp-0x79],xmm0
   140024d12:	call   0x1400246e0
   140024d17:	movaps xmm0,XMMWORD PTR [rbp-0x79]
   140024d1b:	lea    rdx,[rip+0x1a06e]        # 0x14003ed90
   140024d22:	lea    rcx,[rbp-0x79]
   140024d26:	movdqa XMMWORD PTR [rbp-0x79],xmm0
   140024d2b:	call   0x14002483c
   140024d30:	lea    rdx,[rbp-0x79]
   140024d34:	lea    rcx,[rsp+0x40]
   140024d39:	call   0x1400246e0
   140024d3e:	lea    rdx,[rip+0x1a04f]        # 0x14003ed94
   140024d45:	lea    rcx,[rsp+0x40]
   140024d4a:	call   0x14002483c
   140024d4f:	lea    rcx,[rsp+0x30]
   140024d54:	call   0x1400262f0
   140024d59:	mov    ecx,DWORD PTR [rip+0x23f45]        # 0x140048ca4
   140024d5f:	mov    eax,ecx
   140024d61:	shr    eax,1
   140024d63:	not    eax
   140024d65:	test   al,0x1
   140024d67:	je     0x140025349
   140024d6d:	mov    eax,ecx
   140024d6f:	shr    eax,0x4
   140024d72:	not    eax
   140024d74:	test   al,0x1
   140024d76:	je     0x140025349
   140024d7c:	test   ebx,ecx
   140024d7e:	jne    0x140025349
   140024d84:	lea    rcx,[rbp-0x59]
   140024d88:	mov    dl,0x20
   140024d8a:	call   0x140023dac
   140024d8f:	lea    rdx,[rsp+0x30]
   140024d94:	lea    rcx,[rbp-0x79]
   140024d98:	movups xmm0,XMMWORD PTR [rax]
   140024d9b:	movdqu XMMWORD PTR [rbp-0x79],xmm0
   140024da0:	call   0x1400246e0
   140024da5:	movaps xmm0,XMMWORD PTR [rbp-0x79]
   140024da9:	lea    rcx,[rbp-0x79]
   140024dad:	mov    dl,0x20
   140024daf:	movdqa XMMWORD PTR [rbp-0x79],xmm0
   140024db4:	call   0x140024720
   140024db9:	lea    rdx,[rsp+0x40]
   140024dbe:	movaps xmm0,XMMWORD PTR [rbp-0x79]
   140024dc2:	lea    rcx,[rbp-0x79]
   140024dc6:	movdqa XMMWORD PTR [rbp-0x79],xmm0
   140024dcb:	call   0x1400246e0
   140024dd0:	movaps xmm6,XMMWORD PTR [rbp-0x79]
   140024dd4:	mov    r12d,DWORD PTR [rbp+0x6f]
   140024dd8:	jmp    0x1400255c2
   140024ddd:	mov    r14d,DWORD PTR [rbp-0x21]
   140024de1:	and    QWORD PTR [rbp-0x9],0x0
   140024de6:	and    QWORD PTR [rbp-0x39],0x0
   140024deb:	and    QWORD PTR [rbp-0x19],0x0
   140024df0:	and    QWORD PTR [rbp-0x59],0x0
   140024df5:	and    QWORD PTR [rbp-0x29],0x0
   140024dfa:	mov    eax,DWORD PTR [rbp-0x49]
   140024dfd:	mov    edx,0xffff0000
   140024e02:	and    DWORD PTR [rbp-0x1],edx
   140024e05:	and    DWORD PTR [rbp-0x31],edx
   140024e08:	and    DWORD PTR [rbp-0x11],edx
   140024e0b:	and    DWORD PTR [rbp-0x51],edx
   140024e0e:	and    r14d,edx
   140024e11:	test   r13d,r13d
   140024e14:	cmovne eax,DWORD PTR [rbp+0x77]
   140024e18:	mov    DWORD PTR [rbp-0x21],r14d
   140024e1c:	test   eax,eax
   140024e1e:	je     0x140024ea6
   140024e24:	test   r13d,r13d
   140024e27:	je     0x140024e8e
   140024e29:	mov    eax,esi
   140024e2b:	and    eax,0x700
   140024e30:	cmp    eax,0x600
   140024e35:	jne    0x140024e65
   140024e37:	lea    rcx,[rsp+0x30]
   140024e3c:	mov    dl,0x1
   140024e3e:	call   0x140026e84
   140024e43:	lea    rcx,[rsp+0x30]
   140024e48:	mov    dl,0x1
   140024e4a:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140024e4f:	movdqa XMMWORD PTR [rbp-0x9],xmm0
   140024e54:	call   0x140026e84
   140024e59:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140024e5e:	movdqa XMMWORD PTR [rbp-0x39],xmm0
   140024e63:	jmp    0x140024e78
   140024e65:	test   r13d,r13d
   140024e68:	je     0x140024e8e
   140024e6a:	mov    eax,esi
   140024e6c:	and    eax,0x700
   140024e71:	cmp    eax,0x500
   140024e76:	jne    0x140024e8e
   140024e78:	lea    rcx,[rsp+0x30]
   140024e7d:	mov    dl,0x1
   140024e7f:	call   0x140026e84
   140024e84:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140024e89:	movdqa XMMWORD PTR [rbp-0x19],xmm0
   140024e8e:	lea    rcx,[rsp+0x30]
   140024e93:	mov    dl,0x1
   140024e95:	call   0x140026e84
   140024e9a:	mov    edx,0xffff0000
   140024e9f:	movaps xmm7,XMMWORD PTR [rsp+0x30]
   140024ea4:	jmp    0x140024eaa
   140024ea6:	movaps xmm7,XMMWORD PTR [rbp-0x59]
   140024eaa:	test   r13d,r13d
   140024ead:	je     0x140024f38
   140024eb3:	mov    eax,esi
   140024eb5:	and    eax,0x700
   140024eba:	cmp    eax,0x200
   140024ebf:	je     0x140024f38
   140024ec1:	mov    eax,DWORD PTR [rip+0x23ddd]        # 0x140048ca4
   140024ec7:	and    QWORD PTR [rbp-0x59],0x0
   140024ecc:	and    DWORD PTR [rbp-0x51],edx
   140024ecf:	and    QWORD PTR [rbp-0x79],0x0
   140024ed4:	and    DWORD PTR [rbp-0x71],edx
   140024ed7:	and    eax,0x60
   140024eda:	mov    DWORD PTR [rsp+0x20],0x1
   140024ee2:	lea    r8,[rip+0x10c08]        # 0x140035af1
   140024ee9:	lea    rcx,[rsp+0x30]
   140024eee:	cmp    al,0x60
   140024ef0:	je     0x140024f0b
   140024ef2:	lea    r9,[rbp-0x59]
   140024ef6:	lea    rdx,[rbp-0x79]
   140024efa:	call   0x1400263f0
   140024eff:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140024f04:	movdqa XMMWORD PTR [rbp-0x29],xmm0
   140024f09:	jmp    0x140024f38
   140024f0b:	lea    r9,[rbp-0x79]
   140024f0f:	lea    rdx,[rbp-0x59]
   140024f13:	call   0x1400263f0
   140024f18:	cmp    BYTE PTR [rbp-0x21],0x3
   140024f1c:	je     0x140024f38
   140024f1e:	cmp    BYTE PTR [rsp+0x38],0x1
   140024f23:	jle    0x140024f38
   140024f25:	movzx  eax,BYTE PTR [rsp+0x38]
   140024f2a:	and    r14d,0xffffff00
   140024f31:	or     r14d,eax
   140024f34:	mov    DWORD PTR [rbp-0x21],r14d
   140024f38:	mov    ecx,DWORD PTR [rip+0x23d66]        # 0x140048ca4
   140024f3e:	mov    eax,ecx
   140024f40:	shr    eax,1
   140024f42:	not    eax
   140024f44:	test   al,0x1
   140024f46:	je     0x140024f80
   140024f48:	shr    ecx,0x4
   140024f4b:	not    ecx
   140024f4d:	test   cl,0x1
   140024f50:	je     0x140024f80
   140024f52:	lea    rcx,[rbp-0x79]
   140024f56:	call   0x1400262f0
   140024f5b:	lea    rdx,[rsp+0x40]
   140024f60:	lea    rcx,[rsp+0x30]
   140024f65:	movups xmm0,XMMWORD PTR [rax]
   140024f68:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140024f6e:	call   0x1400246e0
   140024f73:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140024f78:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   140024f7e:	jmp    0x140024fa7
   140024f80:	lea    rcx,[rsp+0x30]
   140024f85:	call   0x1400262f0
   140024f8a:	cmp    BYTE PTR [rsp+0x48],0x3
   140024f8f:	je     0x140024fa7
   140024f91:	cmp    BYTE PTR [rax+0x8],0x1
   140024f95:	jle    0x140024fa7
   140024f97:	movzx  eax,BYTE PTR [rax+0x8]
   140024f9b:	and    ebx,0xffffff00
   140024fa1:	or     ebx,eax
   140024fa3:	mov    DWORD PTR [rsp+0x48],ebx
   140024fa7:	xor    ebx,ebx
   140024fa9:	cmp    QWORD PTR [r12],rbx
   140024fad:	je     0x140024fff
   140024faf:	cmp    QWORD PTR [rsp+0x40],rbx
   140024fb4:	je     0x140024ff4
   140024fb6:	test   DWORD PTR [rip+0x23ce4],0x1000        # 0x140048ca4
   140024fc0:	jne    0x140024ff4
   140024fc2:	lea    rcx,[rbp-0x79]
   140024fc6:	mov    dl,0x20
   140024fc8:	call   0x140023dac
   140024fcd:	lea    rcx,[rsp+0x30]
   140024fd2:	mov    rdx,r12
   140024fd5:	movups xmm0,XMMWORD PTR [rax]
   140024fd8:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140024fde:	call   0x1400246e0
   140024fe3:	lea    rdx,[rsp+0x30]
   140024fe8:	lea    rcx,[rsp+0x40]
   140024fed:	call   0x1400246e0
   140024ff2:	jmp    0x140024fff
   140024ff4:	movups xmm0,XMMWORD PTR [r12]
   140024ff9:	movdqu XMMWORD PTR [rsp+0x40],xmm0
   140024fff:	and    DWORD PTR [rbp-0x71],0xffff0000
   140025006:	mov    r12,rbx
   140025009:	mov    QWORD PTR [rbp-0x79],rbx
   14002500d:	cmp    DWORD PTR [rbp+0x7f],ebx
   140025010:	je     0x140025071
   140025012:	lea    rcx,[rbp-0x59]
   140025016:	xor    edx,edx
   140025018:	call   0x1400289bc
   14002501d:	lea    rdx,[rip+0x12bb0]        # 0x140037bd4
   140025024:	lea    rcx,[rbp-0x69]
   140025028:	mov    rbx,rax
   14002502b:	call   0x140023e6c
   140025030:	lea    rcx,[rsp+0x30]
   140025035:	mov    rdx,rbx
   140025038:	movups xmm0,XMMWORD PTR [rax]
   14002503b:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140025041:	call   0x1400246e0
   140025046:	lea    rdx,[rsp+0x30]
   14002504b:	lea    rcx,[rsp+0x40]
   140025050:	call   0x1400246e0
   140025055:	test   DWORD PTR [rip+0x23c45],0x1000        # 0x140048ca4
   14002505f:	je     0x14002506b
   140025061:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140025066:	jmp    0x140024b13
   14002506b:	movaps xmm6,XMMWORD PTR [rbp-0x79]
   14002506f:	jmp    0x1400250ad
   140025071:	xor    r8d,r8d
   140025074:	lea    rcx,[rip+0x23c35]        # 0x140048cb0
   14002507b:	lea    edx,[r8+0x10]
   14002507f:	call   0x140027be8
   140025084:	mov    r12,rax
   140025087:	test   rax,rax
   14002508a:	je     0x14002509b
   14002508c:	mov    BYTE PTR [rax+0x8],bl
   14002508f:	and    DWORD PTR [rax+0x8],0xffff00ff
   140025096:	mov    QWORD PTR [rax],rbx
   140025099:	jmp    0x14002509e
   14002509b:	mov    r12,rbx
   14002509e:	lea    rcx,[rbp-0x69]
   1400250a2:	mov    rdx,r12
   1400250a5:	call   0x1400289bc
   1400250aa:	movups xmm6,XMMWORD PTR [rax]
   1400250ad:	mov    r14d,DWORD PTR [rbp-0x49]
   1400250b1:	test   r13d,r13d
   1400250b4:	cmovne r14d,DWORD PTR [rbp+0x77]
   1400250b9:	test   r14d,r14d
   1400250bc:	je     0x1400251ed
   1400250c2:	test   r13d,r13d
   1400250c5:	je     0x1400251b6
   1400250cb:	mov    eax,esi
   1400250cd:	and    eax,0x700
   1400250d2:	cmp    eax,0x600
   1400250d7:	jne    0x140025154
   1400250d9:	lea    rdx,[rip+0x19cb8]        # 0x14003ed98
   1400250e0:	lea    rcx,[rbp-0x69]
   1400250e4:	call   0x140023e6c
   1400250e9:	lea    rdx,[rbp-0x9]
   1400250ed:	lea    rcx,[rsp+0x30]
   1400250f2:	movups xmm0,XMMWORD PTR [rax]
   1400250f5:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   1400250fb:	call   0x1400246e0
   140025100:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140025105:	lea    rcx,[rsp+0x30]
   14002510a:	mov    dl,0x2c
   14002510c:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140025112:	call   0x140024720
   140025117:	lea    rdx,[rbp-0x39]
   14002511b:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140025120:	lea    rcx,[rsp+0x30]
   140025125:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   14002512b:	call   0x1400246e0
   140025130:	lea    rcx,[rsp+0x30]
   140025135:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14002513a:	mov    dl,0x2c
   14002513c:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140025142:	call   0x140024720
   140025147:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14002514c:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140025152:	jmp    0x140025180
   140025154:	test   r13d,r13d
   140025157:	je     0x1400251b6
   140025159:	mov    eax,esi
   14002515b:	and    eax,0x700
   140025160:	cmp    eax,0x500
   140025165:	jne    0x1400251b6
   140025167:	lea    rdx,[rip+0x19c3a]        # 0x14003eda8
   14002516e:	lea    rcx,[rbp-0x69]
   140025172:	call   0x140023e6c
   140025177:	movups xmm0,XMMWORD PTR [rax]
   14002517a:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140025180:	lea    rdx,[rbp-0x19]
   140025184:	lea    rcx,[rsp+0x30]
   140025189:	call   0x1400246e0
   14002518e:	lea    rcx,[rsp+0x30]
   140025193:	mov    dl,0x2c
   140025195:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14002519a:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   1400251a0:	call   0x140024720
   1400251a5:	lea    rdx,[rsp+0x30]
   1400251aa:	lea    rcx,[rsp+0x40]
   1400251af:	call   0x1400246e0
   1400251b4:	jmp    0x1400251c7
   1400251b6:	lea    rdx,[rip+0x19bfb]        # 0x14003edb8
   1400251bd:	lea    rcx,[rsp+0x40]
   1400251c2:	call   0x14002483c
   1400251c7:	lea    rdx,[rip+0x19bc2]        # 0x14003ed90
   1400251ce:	lea    rcx,[rsp+0x30]
   1400251d3:	movdqa XMMWORD PTR [rsp+0x30],xmm7
   1400251d9:	call   0x14002483c
   1400251de:	lea    rdx,[rsp+0x30]
   1400251e3:	lea    rcx,[rsp+0x40]
   1400251e8:	call   0x1400246e0
   1400251ed:	lea    rcx,[rbp-0x69]
   1400251f1:	call   0x140025ac4
   1400251f6:	lea    rcx,[rbp-0x79]
   1400251fa:	mov    dl,0x28
   1400251fc:	mov    rbx,rax
   1400251ff:	call   0x140023dac
   140025204:	lea    rcx,[rsp+0x30]
   140025209:	mov    rdx,rbx
   14002520c:	movups xmm0,XMMWORD PTR [rax]
   14002520f:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140025215:	call   0x1400246e0
   14002521a:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14002521f:	lea    rcx,[rsp+0x30]
   140025224:	mov    dl,0x29
   140025226:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   14002522c:	call   0x140024720
   140025231:	lea    rdx,[rsp+0x30]
   140025236:	lea    rcx,[rsp+0x40]
   14002523b:	call   0x1400246e0
   140025240:	test   r13d,r13d
   140025243:	je     0x140025261
   140025245:	mov    eax,esi
   140025247:	and    eax,0x700
   14002524c:	cmp    eax,0x200
   140025251:	je     0x140025261
   140025253:	lea    rdx,[rbp-0x29]
   140025257:	lea    rcx,[rsp+0x40]
   14002525c:	call   0x1400246e0
   140025261:	mov    eax,DWORD PTR [rip+0x23a3d]        # 0x140048ca4
   140025267:	lea    rcx,[rbp-0x69]
   14002526b:	shr    eax,0x13
   14002526e:	not    eax
   140025270:	test   al,0x1
   140025272:	je     0x140025288
   140025274:	call   0x140028894
   140025279:	lea    rcx,[rsp+0x40]
   14002527e:	mov    rdx,rax
   140025281:	call   0x1400246e0
   140025286:	jmp    0x1400252ae
   140025288:	call   0x140028894
   14002528d:	cmp    BYTE PTR [rsp+0x48],0x3
   140025292:	je     0x1400252ae
   140025294:	cmp    BYTE PTR [rax+0x8],0x1
   140025298:	jle    0x1400252ae
   14002529a:	mov    ecx,DWORD PTR [rsp+0x48]
   14002529e:	movzx  eax,BYTE PTR [rax+0x8]
   1400252a2:	and    ecx,0xffffff00
   1400252a8:	or     ecx,eax
   1400252aa:	mov    DWORD PTR [rsp+0x48],ecx
   1400252ae:	mov    eax,DWORD PTR [rip+0x239f0]        # 0x140048ca4
   1400252b4:	lea    rcx,[rbp-0x69]
   1400252b8:	shr    eax,0x8
   1400252bb:	not    eax
   1400252bd:	test   al,0x1
   1400252bf:	je     0x1400252d5
   1400252c1:	call   0x140029c08
   1400252c6:	lea    rcx,[rsp+0x40]
   1400252cb:	mov    rdx,rax
   1400252ce:	call   0x1400246e0
   1400252d3:	jmp    0x1400252fb
   1400252d5:	call   0x140029c08
   1400252da:	cmp    BYTE PTR [rsp+0x48],0x3
   1400252df:	je     0x1400252fb
   1400252e1:	cmp    BYTE PTR [rax+0x8],0x1
   1400252e5:	jle    0x1400252fb
   1400252e7:	mov    ecx,DWORD PTR [rsp+0x48]
   1400252eb:	movzx  eax,BYTE PTR [rax+0x8]
   1400252ef:	and    ecx,0xffffff00
   1400252f5:	or     ecx,eax
   1400252f7:	mov    DWORD PTR [rsp+0x48],ecx
   1400252fb:	lea    rcx,[rbp-0x69]
   1400252ff:	call   0x140026fe0
   140025304:	cmp    BYTE PTR [rsp+0x48],0x3
   140025309:	je     0x140025325
   14002530b:	cmp    BYTE PTR [rax+0x8],0x1
   14002530f:	jle    0x140025325
   140025311:	mov    ecx,DWORD PTR [rsp+0x48]
   140025315:	movzx  eax,BYTE PTR [rax+0x8]
   140025319:	and    ecx,0xffffff00
   14002531f:	or     ecx,eax
   140025321:	mov    DWORD PTR [rsp+0x48],ecx
   140025325:	mov    eax,DWORD PTR [rip+0x23979]        # 0x140048ca4
   14002532b:	shr    eax,0x2
   14002532e:	not    eax
   140025330:	test   al,0x1
   140025332:	je     0x140025349
   140025334:	test   r12,r12
   140025337:	je     0x140025349
   140025339:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   14002533e:	movdqu XMMWORD PTR [r12],xmm0
   140025344:	jmp    0x140024dd4
   140025349:	movaps xmm6,XMMWORD PTR [rsp+0x40]
   14002534e:	mov    r12d,DWORD PTR [rbp+0x6f]
   140025352:	jmp    0x1400255c7
   140025357:	lea    rcx,[rsp+0x40]
   14002535c:	mov    rdx,r12
   14002535f:	call   0x1400246e0
   140025364:	mov    r8d,0x7c00
   14002536a:	test   r15d,r15d
   14002536d:	jne    0x14002539e
   14002536f:	mov    eax,esi
   140025371:	and    eax,r8d
   140025374:	cmp    eax,0x6800
   140025379:	jne    0x14002538d
   14002537b:	lea    rdx,[rsp+0x40]
   140025380:	mov    rcx,rdi
   140025383:	call   0x14002a26c
   140025388:	jmp    0x1400257b8
   14002538d:	test   r15d,r15d
   140025390:	jne    0x14002539e
   140025392:	mov    eax,esi
   140025394:	and    eax,r8d
   140025397:	cmp    eax,0x7000
   14002539c:	je     0x14002537b
   14002539e:	mov    ecx,0x6000
   1400253a3:	test   r15d,r15d
   1400253a6:	jne    0x140025471
   1400253ac:	mov    eax,esi
   1400253ae:	and    eax,r8d
   1400253b1:	cmp    eax,ecx
   1400253b3:	jne    0x14002540d
   1400253b5:	lea    rcx,[rbp-0x79]
   1400253b9:	xor    edx,edx
   1400253bb:	call   0x140026e84
   1400253c0:	lea    rcx,[rsp+0x30]
   1400253c5:	mov    dl,0x7b
   1400253c7:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   1400253cc:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   1400253d2:	call   0x140024720
   1400253d7:	lea    rdx,[rbp-0x79]
   1400253db:	lea    rcx,[rsp+0x30]
   1400253e0:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   1400253e5:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   1400253eb:	call   0x1400246e0
   1400253f0:	lea    rdx,[rip+0x1999d]        # 0x14003ed94
   1400253f7:	mov    rcx,rdi
   1400253fa:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   1400253ff:	movdqu XMMWORD PTR [rdi],xmm0
   140025403:	call   0x14002483c
   140025408:	jmp    0x1400257b8
   14002540d:	test   r15d,r15d
   140025410:	jne    0x140025471
   140025412:	mov    eax,esi
   140025414:	and    eax,r8d
   140025417:	cmp    eax,r8d
   14002541a:	jne    0x140025471
   14002541c:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140025421:	lea    rdx,[rip+0x19c6c]        # 0x14003f094
   140025428:	mov    rcx,rdi
   14002542b:	movdqu XMMWORD PTR [rdi],xmm0
   14002542f:	call   0x14002483c
   140025434:	lea    rcx,[rbp-0x69]
   140025438:	call   0x1400289f0
   14002543d:	mov    rcx,rdi
   140025440:	mov    rdx,rax
   140025443:	call   0x1400246e0
   140025448:	mov    dl,0x7d
   14002544a:	mov    rcx,rdi
   14002544d:	call   0x140024720
   140025452:	mov    rax,QWORD PTR [rip+0x2382f]        # 0x140048c88
   140025459:	cmp    BYTE PTR [rax],0x40
   14002545c:	jne    0x1400257b8
   140025462:	inc    rax
   140025465:	mov    QWORD PTR [rip+0x2381c],rax        # 0x140048c88
   14002546c:	jmp    0x1400257b8
   140025471:	xor    r13d,r13d
   140025474:	mov    r12d,esi
   140025477:	mov    eax,esi
   140025479:	and    r12d,0x1800
   140025480:	mov    r14d,esi
   140025483:	mov    r9d,0x1000
   140025489:	cmp    r12d,0x800
   140025490:	mov    ebx,0x1b00
   140025495:	sete   r13b
   140025499:	test   ecx,esi
   14002549b:	mov    ecx,0x0
   1400254a0:	sete   cl
   1400254a3:	test   r15d,r15d
   1400254a6:	cmovne ecx,r13d
   1400254aa:	and    eax,0x400
   1400254af:	and    r14d,r9d
   1400254b2:	test   ecx,ecx
   1400254b4:	mov    DWORD PTR [rbp-0x45],ecx
   1400254b7:	cmovne r14d,eax
   1400254bb:	test   r14d,r14d
   1400254be:	je     0x140025538
   1400254c0:	xor    ecx,ecx
   1400254c2:	mov    eax,esi
   1400254c4:	mov    edx,r15d
   1400254c7:	and    eax,ebx
   1400254c9:	cmp    eax,r9d
   1400254cc:	sete   cl
   1400254cf:	neg    edx
   1400254d1:	sbb    eax,eax
   1400254d3:	test   ecx,eax
   1400254d5:	je     0x1400254e0
   1400254d7:	lea    rdx,[rip+0x198ea]        # 0x14003edc8
   1400254de:	jmp    0x14002552c
   1400254e0:	test   r14d,r14d
   1400254e3:	je     0x140025538
   1400254e5:	xor    ecx,ecx
   1400254e7:	mov    eax,esi
   1400254e9:	mov    edx,r15d
   1400254ec:	and    eax,ebx
   1400254ee:	cmp    eax,0x1100
   1400254f3:	sete   cl
   1400254f6:	neg    edx
   1400254f8:	sbb    eax,eax
   1400254fa:	test   ecx,eax
   1400254fc:	je     0x140025507
   1400254fe:	lea    rdx,[rip+0x198eb]        # 0x14003edf0
   140025505:	jmp    0x14002552c
   140025507:	test   r14d,r14d
   14002550a:	je     0x140025538
   14002550c:	xor    ecx,ecx
   14002550e:	mov    eax,esi
   140025510:	mov    edx,r15d
   140025513:	and    eax,ebx
   140025515:	cmp    eax,0x1200
   14002551a:	sete   cl
   14002551d:	neg    edx
   14002551f:	sbb    eax,eax
   140025521:	test   ecx,eax
   140025523:	je     0x140025538
   140025525:	lea    rdx,[rip+0x198fc]        # 0x14003ee28
   14002552c:	lea    rcx,[rsp+0x40]
   140025531:	call   0x14002483c
   140025536:	jmp    0x14002554d
   140025538:	test   r15d,r15d
   14002553b:	jne    0x14002554d
   14002553d:	mov    eax,esi
   14002553f:	and    eax,r8d
   140025542:	cmp    eax,0x7800
   140025547:	je     0x140025061
   14002554d:	test   r14d,r14d
   140025550:	je     0x1400255b1
   140025552:	xor    ecx,ecx
   140025554:	mov    edx,esi
   140025556:	mov    eax,r15d
   140025559:	and    edx,ebx
   14002555b:	cmp    edx,0x1100
   140025561:	sete   cl
   140025564:	neg    eax
   140025566:	sbb    eax,eax
   140025568:	test   ecx,eax
   14002556a:	jne    0x140025582
   14002556c:	xor    ecx,ecx
   14002556e:	cmp    edx,0x1200
   140025574:	mov    eax,r15d
   140025577:	sete   cl
   14002557a:	neg    eax
   14002557c:	sbb    eax,eax
   14002557e:	test   ecx,eax
   140025580:	je     0x1400255b1
   140025582:	lea    rdx,[rip+0x1264b]        # 0x140037bd4
   140025589:	lea    rcx,[rbp-0x69]
   14002558d:	call   0x140023e6c
   140025592:	lea    rdx,[rsp+0x40]
   140025597:	lea    rcx,[rsp+0x30]
   14002559c:	movups xmm0,XMMWORD PTR [rax]
   14002559f:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   1400255a5:	call   0x1400246e0
   1400255aa:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   1400255af:	jmp    0x1400255c2
   1400255b1:	lea    rdx,[rsp+0x40]
   1400255b6:	lea    rcx,[rbp-0x69]
   1400255ba:	call   0x14002750c
   1400255bf:	movups xmm6,XMMWORD PTR [rax]
   1400255c2:	movaps XMMWORD PTR [rsp+0x40],xmm6
   1400255c7:	cmp    DWORD PTR [rbp-0x45],0x0
   1400255cb:	je     0x14002573e
   1400255d1:	mov    eax,DWORD PTR [rip+0x236cd]        # 0x140048ca4
   1400255d7:	shr    eax,0x9
   1400255da:	not    eax
   1400255dc:	test   al,0x1
   1400255de:	je     0x140025691
   1400255e4:	xor    ecx,ecx
   1400255e6:	mov    ebx,esi
   1400255e8:	mov    eax,0x1
   1400255ed:	and    ebx,0x700
   1400255f3:	cmp    ebx,0x200
   1400255f9:	sete   cl
   1400255fc:	test   r15d,r15d
   1400255ff:	cmovne eax,ecx
   140025602:	test   eax,eax
   140025604:	je     0x140025638
   140025606:	lea    rdx,[rip+0x1984b]        # 0x14003ee58
   14002560d:	lea    rcx,[rbp-0x69]
   140025611:	call   0x140023e6c
   140025616:	lea    rdx,[rsp+0x40]
   14002561b:	lea    rcx,[rsp+0x30]
   140025620:	movups xmm0,XMMWORD PTR [rax]
   140025623:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140025629:	call   0x1400246e0
   14002562e:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   140025633:	movaps XMMWORD PTR [rsp+0x40],xmm6
   140025638:	test   r15d,r15d
   14002563b:	je     0x140025645
   14002563d:	cmp    ebx,0x100
   140025643:	je     0x14002565f
   140025645:	test   r14d,r14d
   140025648:	je     0x140025691
   14002564a:	lea    eax,[rbx-0x400]
   140025650:	test   eax,0xfffffcff
   140025655:	jne    0x140025691
   140025657:	cmp    ebx,0x700
   14002565d:	je     0x140025691
   14002565f:	lea    rdx,[rip+0x197fa]        # 0x14003ee60
   140025666:	lea    rcx,[rbp-0x69]
   14002566a:	call   0x140023e6c
   14002566f:	lea    rdx,[rsp+0x40]
   140025674:	lea    rcx,[rsp+0x30]
   140025679:	movups xmm0,XMMWORD PTR [rax]
   14002567c:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140025682:	call   0x1400246e0
   140025687:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   14002568c:	movaps XMMWORD PTR [rsp+0x40],xmm6
   140025691:	mov    eax,DWORD PTR [rip+0x2360d]        # 0x140048ca4
   140025697:	shr    eax,0x7
   14002569a:	not    eax
   14002569c:	test   al,0x1
   14002569e:	je     0x14002573e
   1400256a4:	xor    eax,eax
   1400256a6:	mov    edx,esi
   1400256a8:	and    edx,0xc0
   1400256ae:	cmp    edx,0x40
   1400256b1:	sete   al
   1400256b4:	test   r15d,r15d
   1400256b7:	cmovne r13d,eax
   1400256bb:	test   r13d,r13d
   1400256be:	je     0x1400256c9
   1400256c0:	lea    rdx,[rip+0x197a9]        # 0x14003ee70
   1400256c7:	jmp    0x140025713
   1400256c9:	xor    ecx,ecx
   1400256cb:	cmp    edx,0x80
   1400256d1:	sete   cl
   1400256d4:	xor    eax,eax
   1400256d6:	cmp    r12d,0x1000
   1400256dd:	sete   al
   1400256e0:	test   r15d,r15d
   1400256e3:	cmovne eax,ecx
   1400256e6:	test   eax,eax
   1400256e8:	je     0x1400256f3
   1400256ea:	lea    rdx,[rip+0x1978f]        # 0x14003ee80
   1400256f1:	jmp    0x140025713
   1400256f3:	xor    ecx,ecx
   1400256f5:	test   edx,edx
   1400256f7:	sete   cl
   1400256fa:	xor    eax,eax
   1400256fc:	test   r12d,r12d
   1400256ff:	sete   al
   140025702:	test   r15d,r15d
   140025705:	cmovne eax,ecx
   140025708:	test   eax,eax
   14002570a:	je     0x14002573e
   14002570c:	lea    rdx,[rip+0x1977d]        # 0x14003ee90
   140025713:	lea    rcx,[rbp-0x69]
   140025717:	call   0x140023e6c
   14002571c:	lea    rdx,[rsp+0x40]
   140025721:	lea    rcx,[rsp+0x30]
   140025726:	movups xmm0,XMMWORD PTR [rax]
   140025729:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   14002572f:	call   0x1400246e0
   140025734:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   140025739:	movaps XMMWORD PTR [rsp+0x40],xmm6
   14002573e:	test   r14d,r14d
   140025741:	je     0x140025781
   140025743:	test   DWORD PTR [rip+0x23557],0x1000        # 0x140048ca4
   14002574d:	jne    0x140025781
   14002574f:	lea    rdx,[rip+0x1974a]        # 0x14003eea0
   140025756:	lea    rcx,[rbp-0x69]
   14002575a:	call   0x140023e6c
   14002575f:	lea    rdx,[rsp+0x40]
   140025764:	lea    rcx,[rsp+0x30]
   140025769:	movups xmm0,XMMWORD PTR [rax]
   14002576c:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140025772:	call   0x1400246e0
   140025777:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   14002577c:	movaps XMMWORD PTR [rsp+0x40],xmm6
   140025781:	bt     esi,0x10
   140025785:	jae    0x1400257b4
   140025787:	lea    rdx,[rip+0x19722]        # 0x14003eeb0
   14002578e:	lea    rcx,[rbp-0x69]
   140025792:	call   0x140023e6c
   140025797:	lea    rdx,[rsp+0x40]
   14002579c:	lea    rcx,[rsp+0x30]
   1400257a1:	movups xmm0,XMMWORD PTR [rax]
   1400257a4:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   1400257aa:	call   0x1400246e0
   1400257af:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   1400257b4:	movdqu XMMWORD PTR [rdi],xmm6
   1400257b8:	lea    r11,[rsp+0xf0]
   1400257c0:	mov    rax,rdi
   1400257c3:	mov    rbx,QWORD PTR [r11+0x40]
   1400257c7:	movaps xmm6,XMMWORD PTR [r11-0x10]
   1400257cc:	movaps xmm7,XMMWORD PTR [r11-0x20]
   1400257d1:	mov    rsp,r11
   1400257d4:	pop    r15
   1400257d6:	pop    r14
   1400257d8:	pop    r13
   1400257da:	pop    r12
   1400257dc:	pop    rdi
   1400257dd:	pop    rsi
   1400257de:	pop    rbp
   1400257df:	ret    
   1400257e0:	mov    eax,DWORD PTR [rip+0x234be]        # 0x140048ca4
   1400257e6:	shr    eax,0x7
   1400257e9:	not    eax
   1400257eb:	and    eax,0x1
   1400257ee:	ret    
   1400257ef:	int3   
   1400257f0:	mov    eax,DWORD PTR [rip+0x234ae]        # 0x140048ca4
   1400257f6:	shr    eax,0x4
   1400257f9:	not    eax
   1400257fb:	and    eax,0x1
   1400257fe:	ret    
   1400257ff:	int3   
   140025800:	mov    eax,DWORD PTR [rip+0x2349e]        # 0x140048ca4
   140025806:	shr    eax,0x3
   140025809:	not    eax
   14002580b:	and    eax,0x1
   14002580e:	ret    
   14002580f:	int3   
   140025810:	mov    eax,DWORD PTR [rip+0x2348e]        # 0x140048ca4
   140025816:	shr    eax,0xf
   140025819:	not    eax
   14002581b:	and    eax,0x1
   14002581e:	ret    
   14002581f:	int3   
   140025820:	mov    eax,DWORD PTR [rip+0x2347e]        # 0x140048ca4
   140025826:	shr    eax,0x12
   140025829:	not    eax
   14002582b:	and    eax,0x1
   14002582e:	ret    
   14002582f:	int3   
   140025830:	mov    eax,DWORD PTR [rip+0x2346e]        # 0x140048ca4
   140025836:	shr    eax,0x2
   140025839:	not    eax
   14002583b:	and    eax,0x1
   14002583e:	ret    
   14002583f:	int3   
   140025840:	mov    eax,DWORD PTR [rip+0x2345e]        # 0x140048ca4
   140025846:	shr    eax,1
   140025848:	not    eax
   14002584a:	and    eax,0x1
   14002584d:	ret    
   14002584e:	int3   
   14002584f:	int3   
   140025850:	mov    eax,DWORD PTR [rip+0x2344e]        # 0x140048ca4
   140025856:	shr    eax,0x9
   140025859:	not    eax
   14002585b:	and    eax,0x1
   14002585e:	ret    
   14002585f:	int3   
   140025860:	mov    eax,DWORD PTR [rip+0x2343e]        # 0x140048ca4
   140025866:	and    eax,0x1000
   14002586b:	ret    
   14002586c:	mov    eax,DWORD PTR [rip+0x23432]        # 0x140048ca4
   140025872:	and    eax,0x10000
   140025877:	ret    
   140025878:	mov    QWORD PTR [rsp+0x8],rbx
   14002587d:	mov    QWORD PTR [rsp+0x10],rsi
   140025882:	push   rdi
   140025883:	sub    rsp,0x20
   140025887:	cmp    QWORD PTR [rcx],0x0
   14002588b:	mov    edi,r8d
   14002588e:	mov    rsi,rdx
   140025891:	mov    rbx,rcx
   140025894:	je     0x1400258a7
   140025896:	and    DWORD PTR [rcx+0x8],0xffff00ff
   14002589d:	and    QWORD PTR [rcx],0x0
   1400258a1:	mov    BYTE PTR [rcx+0x8],0x3
   1400258a5:	jmp    0x140025914
   1400258a7:	test   rdx,rdx
   1400258aa:	je     0x140025910
   1400258ac:	test   r8d,r8d
   1400258af:	je     0x140025910
   1400258b1:	mov    ecx,r8d
   1400258b4:	xor    r8d,r8d
   1400258b7:	dec    ecx
   1400258b9:	lea    rcx,[rip+0x233f0]        # 0x140048cb0
   1400258c0:	je     0x1400258e0
   1400258c2:	lea    edx,[r8+0x18]
   1400258c6:	call   0x140027be8
   1400258cb:	test   rax,rax
   1400258ce:	je     0x140025900
   1400258d0:	mov    r8d,edi
   1400258d3:	mov    rdx,rsi
   1400258d6:	mov    rcx,rax
   1400258d9:	call   0x14002415c
   1400258de:	jmp    0x140025902
   1400258e0:	mov    edx,0x10
   1400258e5:	call   0x140027be8
   1400258ea:	test   rax,rax
   1400258ed:	je     0x140025900
   1400258ef:	mov    cl,BYTE PTR [rsi]
   1400258f1:	lea    rdx,[rip+0x197d0]        # 0x14003f0c8
   1400258f8:	mov    BYTE PTR [rax+0x8],cl
   1400258fb:	mov    QWORD PTR [rax],rdx
   1400258fe:	jmp    0x140025902
   140025900:	xor    eax,eax
   140025902:	mov    QWORD PTR [rbx],rax
   140025905:	test   rax,rax
   140025908:	jne    0x140025914
   14002590a:	mov    BYTE PTR [rbx+0x8],0x3
   14002590e:	jmp    0x140025914
   140025910:	mov    BYTE PTR [rcx+0x8],0x2
   140025914:	mov    rbx,QWORD PTR [rsp+0x30]
   140025919:	mov    rsi,QWORD PTR [rsp+0x38]
   14002591e:	add    rsp,0x20
   140025922:	pop    rdi
   140025923:	ret    
   140025924:	mov    eax,DWORD PTR [rip+0x2337a]        # 0x140048ca4
   14002592a:	shr    eax,0x11
   14002592d:	not    eax
   14002592f:	and    eax,0x1
   140025932:	ret    
   140025933:	int3   
   140025934:	mov    eax,DWORD PTR [rip+0x2336a]        # 0x140048ca4
   14002593a:	shr    eax,0x13
   14002593d:	not    eax
   14002593f:	and    eax,0x1
   140025942:	ret    
   140025943:	int3   
   140025944:	mov    ecx,DWORD PTR [rip+0x2335a]        # 0x140048ca4
   14002594a:	xor    eax,eax
   14002594c:	and    ecx,0x60
   14002594f:	cmp    cl,0x60
   140025952:	setne  al
   140025955:	ret    
   140025956:	int3   
   140025957:	int3   
   140025958:	mov    eax,DWORD PTR [rip+0x23346]        # 0x140048ca4
   14002595e:	shr    eax,0x8
   140025961:	not    eax
   140025963:	and    eax,0x1
   140025966:	ret    
   140025967:	int3   
   140025968:	mov    eax,DWORD PTR [rip+0x23336]        # 0x140048ca4
   14002596e:	and    eax,0x2000
   140025973:	ret    
   140025974:	mov    eax,DWORD PTR [rip+0x2332a]        # 0x140048ca4
   14002597a:	not    eax
   14002597c:	and    eax,0x1
   14002597f:	ret    
   140025980:	mov    QWORD PTR [rsp+0x8],rbx
   140025985:	mov    QWORD PTR [rsp+0x10],rsi
   14002598a:	push   rdi
   14002598b:	sub    rsp,0x50
   14002598f:	and    QWORD PTR [rcx],0x0
   140025993:	mov    BYTE PTR [rcx+0x8],0x0
   140025997:	and    DWORD PTR [rcx+0x8],0xffff00ff
   14002599e:	cmp    BYTE PTR [rcx+0x8],0x0
   1400259a2:	mov    rbx,rcx
   1400259a5:	mov    esi,0x1
   1400259aa:	jne    0x140025aaf
   1400259b0:	mov    rax,QWORD PTR [rip+0x232d1]        # 0x140048c88
   1400259b7:	cmp    BYTE PTR [rax],0x40
   1400259ba:	je     0x140025aaf
   1400259c0:	cmp    BYTE PTR [rax],0x5a
   1400259c3:	je     0x140025aaf
   1400259c9:	test   esi,esi
   1400259cb:	je     0x1400259d1
   1400259cd:	xor    esi,esi
   1400259cf:	jmp    0x1400259e2
   1400259d1:	mov    dl,0x2c
   1400259d3:	mov    rcx,rbx
   1400259d6:	call   0x140024720
   1400259db:	mov    rax,QWORD PTR [rip+0x232a6]        # 0x140048c88
   1400259e2:	cmp    BYTE PTR [rax],0x0
   1400259e5:	je     0x140025aa2
   1400259eb:	movsx  r8d,BYTE PTR [rax]
   1400259ef:	sub    r8d,0x30
   1400259f3:	cmp    r8d,0x9
   1400259f7:	ja     0x140025a21
   1400259f9:	mov    rcx,QWORD PTR [rip+0x23270]        # 0x140048c70
   140025a00:	inc    rax
   140025a03:	lea    rdx,[rsp+0x40]
   140025a08:	mov    QWORD PTR [rip+0x23279],rax        # 0x140048c88
   140025a0f:	call   0x14002433c
   140025a14:	mov    rcx,rbx
   140025a17:	mov    rdx,rax
   140025a1a:	call   0x1400246e0
   140025a1f:	jmp    0x140025a8f
   140025a21:	and    QWORD PTR [rsp+0x20],0x0
   140025a27:	and    DWORD PTR [rsp+0x28],0xffff0000
   140025a2f:	lea    rdx,[rsp+0x20]
   140025a34:	lea    rcx,[rsp+0x30]
   140025a39:	mov    rdi,rax
   140025a3c:	call   0x140028428
   140025a41:	mov    rax,QWORD PTR [rip+0x23240]        # 0x140048c88
   140025a48:	sub    rax,rdi
   140025a4b:	cmp    rax,0x1
   140025a4f:	jle    0x140025a67
   140025a51:	mov    rcx,QWORD PTR [rip+0x23218]        # 0x140048c70
   140025a58:	cmp    DWORD PTR [rcx],0x9
   140025a5b:	je     0x140025a67
   140025a5d:	lea    rdx,[rsp+0x30]
   140025a62:	call   0x14002490c
   140025a67:	lea    rdx,[rsp+0x30]
   140025a6c:	mov    rcx,rbx
   140025a6f:	call   0x1400246e0
   140025a74:	mov    rax,QWORD PTR [rip+0x2320d]        # 0x140048c88
   140025a7b:	cmp    rax,rdi
   140025a7e:	jne    0x140025a96
   140025a80:	and    DWORD PTR [rbx+0x8],0xffff00ff
   140025a87:	and    QWORD PTR [rbx],0x0
   140025a8b:	mov    BYTE PTR [rbx+0x8],0x2
   140025a8f:	mov    rax,QWORD PTR [rip+0x231f2]        # 0x140048c88
   140025a96:	cmp    BYTE PTR [rbx+0x8],0x0
   140025a9a:	je     0x1400259b7
   140025aa0:	jmp    0x140025aaf
   140025aa2:	mov    edx,0x1
   140025aa7:	mov    rcx,rbx
   140025aaa:	call   0x1400248c8
   140025aaf:	mov    rsi,QWORD PTR [rsp+0x68]
   140025ab4:	mov    rax,rbx
   140025ab7:	mov    rbx,QWORD PTR [rsp+0x60]
   140025abc:	add    rsp,0x50
   140025ac0:	pop    rdi
   140025ac1:	ret    
   140025ac2:	int3   
   140025ac3:	int3   
   140025ac4:	rex push rbx
   140025ac6:	sub    rsp,0x30
   140025aca:	mov    rax,QWORD PTR [rip+0x231b7]        # 0x140048c88
   140025ad1:	mov    rbx,rcx
   140025ad4:	cmp    BYTE PTR [rax],0x58
   140025ad7:	je     0x140025b9f
   140025add:	cmp    BYTE PTR [rax],0x5a
   140025ae0:	je     0x140025b74
   140025ae6:	lea    rcx,[rsp+0x20]
   140025aeb:	call   0x140025980
   140025af0:	cmp    BYTE PTR [rsp+0x28],0x0
   140025af5:	jne    0x140025b5d
   140025af7:	mov    rax,QWORD PTR [rip+0x2318a]        # 0x140048c88
   140025afe:	cmp    BYTE PTR [rax],0x0
   140025b01:	je     0x140025b5d
   140025b03:	cmp    BYTE PTR [rax],0x40
   140025b06:	je     0x140025b68
   140025b08:	cmp    BYTE PTR [rax],0x5a
   140025b0b:	je     0x140025b1f
   140025b0d:	mov    edx,0x2
   140025b12:	mov    rcx,rbx
   140025b15:	call   0x140023eb4
   140025b1a:	jmp    0x140025bb5
   140025b1f:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   140025b24:	inc    rax
   140025b27:	lea    rdx,[rip+0x19402]        # 0x14003ef30
   140025b2e:	mov    QWORD PTR [rip+0x23153],rax        # 0x140048c88
   140025b35:	mov    eax,DWORD PTR [rip+0x23169]        # 0x140048ca4
   140025b3b:	lea    rcx,[rsp+0x20]
   140025b40:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140025b46:	shr    eax,0x12
   140025b49:	not    eax
   140025b4b:	test   al,0x1
   140025b4d:	lea    rax,[rip+0x193d0]        # 0x14003ef24
   140025b54:	cmovne rdx,rax
   140025b58:	call   0x14002483c
   140025b5d:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   140025b62:	movdqu XMMWORD PTR [rbx],xmm0
   140025b66:	jmp    0x140025bb5
   140025b68:	inc    rax
   140025b6b:	mov    QWORD PTR [rip+0x23116],rax        # 0x140048c88
   140025b72:	jmp    0x140025b5d
   140025b74:	inc    rax
   140025b77:	lea    rdx,[rip+0x1939a]        # 0x14003ef18
   140025b7e:	mov    QWORD PTR [rip+0x23103],rax        # 0x140048c88
   140025b85:	mov    eax,DWORD PTR [rip+0x23119]        # 0x140048ca4
   140025b8b:	shr    eax,0x12
   140025b8e:	not    eax
   140025b90:	test   al,0x1
   140025b92:	lea    rax,[rip+0x191eb]        # 0x14003ed84
   140025b99:	cmovne rdx,rax
   140025b9d:	jmp    0x140025bb0
   140025b9f:	inc    rax
   140025ba2:	lea    rdx,[rip+0x191bf]        # 0x14003ed68
   140025ba9:	mov    QWORD PTR [rip+0x230d8],rax        # 0x140048c88
   140025bb0:	call   0x140023e6c
   140025bb5:	mov    rax,rbx
   140025bb8:	add    rsp,0x30
   140025bbc:	pop    rbx
   140025bbd:	ret    
   140025bbe:	int3   
   140025bbf:	int3   
   140025bc0:	mov    QWORD PTR [rsp+0x8],rbx
   140025bc5:	mov    QWORD PTR [rsp+0x10],rsi
   140025bca:	mov    QWORD PTR [rsp+0x18],rdi
   140025bcf:	push   rbp
   140025bd0:	push   r14
   140025bd2:	push   r15
   140025bd4:	mov    rbp,rsp
   140025bd7:	sub    rsp,0x80
   140025bde:	mov    rax,QWORD PTR [rip+0x230a3]        # 0x140048c88
   140025be5:	xor    r15d,r15d
   140025be8:	mov    rsi,rdx
   140025beb:	mov    r14,rcx
   140025bee:	cmp    BYTE PTR [rax],r15b
   140025bf1:	je     0x140025d5c
   140025bf7:	call   0x140027c98
   140025bfc:	test   eax,eax
   140025bfe:	mov    edi,eax
   140025c00:	cmovs  edi,r15d
   140025c04:	test   edi,edi
   140025c06:	jne    0x140025c44
   140025c08:	lea    rcx,[rbp-0x30]
   140025c0c:	mov    dl,0x5b
   140025c0e:	call   0x140023dac
   140025c13:	lea    edx,[rdi+0x1]
   140025c16:	lea    rcx,[rbp-0x50]
   140025c1a:	movups xmm0,XMMWORD PTR [rax]
   140025c1d:	movdqu XMMWORD PTR [rbp-0x50],xmm0
   140025c22:	call   0x1400248c8
   140025c27:	movaps xmm0,XMMWORD PTR [rbp-0x50]
   140025c2b:	lea    rcx,[rbp-0x60]
   140025c2f:	mov    dl,0x5d
   140025c31:	movdqa XMMWORD PTR [rbp-0x60],xmm0
   140025c36:	call   0x140024720
   140025c3b:	lea    rdx,[rbp-0x60]
   140025c3f:	jmp    0x140025dd9
   140025c44:	and    DWORD PTR [rbp-0x58],0xffff0000
   140025c4b:	test   DWORD PTR [rsi+0x8],0x800
   140025c52:	mov    QWORD PTR [rbp-0x60],r15
   140025c56:	je     0x140025ccc
   140025c58:	lea    rdx,[rip+0x18b29]        # 0x14003e788
   140025c5f:	lea    rcx,[rbp-0x60]
   140025c63:	call   0x14002483c
   140025c68:	jmp    0x140025ccc
   140025c6a:	mov    eax,edi
   140025c6c:	dec    edi
   140025c6e:	test   eax,eax
   140025c70:	je     0x140025cd2
   140025c72:	mov    rax,QWORD PTR [rip+0x2300f]        # 0x140048c88
   140025c79:	cmp    BYTE PTR [rax],r15b
   140025c7c:	je     0x140025cd2
   140025c7e:	lea    rcx,[rbp-0x20]
   140025c82:	xor    edx,edx
   140025c84:	call   0x140026e84
   140025c89:	lea    rcx,[rbp-0x10]
   140025c8d:	mov    dl,0x5b
   140025c8f:	mov    rbx,rax
   140025c92:	call   0x140023dac
   140025c97:	lea    rcx,[rbp-0x40]
   140025c9b:	mov    rdx,rbx
   140025c9e:	movups xmm0,XMMWORD PTR [rax]
   140025ca1:	movdqu XMMWORD PTR [rbp-0x40],xmm0
   140025ca6:	call   0x1400246e0
   140025cab:	movaps xmm0,XMMWORD PTR [rbp-0x40]
   140025caf:	lea    rcx,[rbp-0x30]
   140025cb3:	mov    dl,0x5d
   140025cb5:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   140025cba:	call   0x140024720
   140025cbf:	lea    rdx,[rbp-0x30]
   140025cc3:	lea    rcx,[rbp-0x60]
   140025cc7:	call   0x1400246e0
   140025ccc:	cmp    BYTE PTR [rbp-0x58],0x1
   140025cd0:	jle    0x140025c6a
   140025cd2:	cmp    QWORD PTR [rsi],r15
   140025cd5:	je     0x140025d3c
   140025cd7:	test   DWORD PTR [rsi+0x8],0x800
   140025cde:	je     0x140025cea
   140025ce0:	movups xmm0,XMMWORD PTR [rsi]
   140025ce3:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   140025ce8:	jmp    0x140025d26
   140025cea:	lea    rcx,[rbp-0x10]
   140025cee:	mov    dl,0x28
   140025cf0:	call   0x140023dac
   140025cf5:	lea    rcx,[rbp-0x30]
   140025cf9:	mov    rdx,rsi
   140025cfc:	movups xmm0,XMMWORD PTR [rax]
   140025cff:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   140025d04:	call   0x1400246e0
   140025d09:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140025d0d:	lea    rcx,[rbp-0x30]
   140025d11:	mov    dl,0x29
   140025d13:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   140025d18:	call   0x140024720
   140025d1d:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140025d21:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   140025d26:	lea    rdx,[rbp-0x60]
   140025d2a:	lea    rcx,[rbp-0x30]
   140025d2e:	call   0x1400246e0
   140025d33:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140025d37:	movdqa XMMWORD PTR [rbp-0x60],xmm0
   140025d3c:	lea    rdx,[rbp-0x60]
   140025d40:	lea    rcx,[rbp-0x50]
   140025d44:	call   0x140028428
   140025d49:	bts    DWORD PTR [rbp-0x48],0xb
   140025d4e:	movups xmm0,XMMWORD PTR [rbp-0x50]
   140025d52:	movdqu XMMWORD PTR [r14],xmm0
   140025d57:	jmp    0x140025de1
   140025d5c:	lea    rcx,[rbp-0x10]
   140025d60:	cmp    QWORD PTR [rdx],r15
   140025d63:	je     0x140025da4
   140025d65:	mov    dl,0x28
   140025d67:	call   0x140023dac
   140025d6c:	lea    rcx,[rbp-0x30]
   140025d70:	mov    rdx,rsi
   140025d73:	movups xmm0,XMMWORD PTR [rax]
   140025d76:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   140025d7b:	call   0x1400246e0
   140025d80:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140025d84:	lea    rdx,[rip+0x192fd]        # 0x14003f088
   140025d8b:	lea    rcx,[rbp-0x30]
   140025d8f:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   140025d94:	call   0x14002483c
   140025d99:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140025d9d:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   140025da2:	jmp    0x140025db3
   140025da4:	mov    dl,0x5b
   140025da6:	call   0x140023dac
   140025dab:	movups xmm0,XMMWORD PTR [rax]
   140025dae:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   140025db3:	lea    rcx,[rbp-0x30]
   140025db7:	mov    edx,0x1
   140025dbc:	call   0x1400248c8
   140025dc1:	lea    rcx,[rbp-0x40]
   140025dc5:	mov    dl,0x5d
   140025dc7:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140025dcb:	movdqa XMMWORD PTR [rbp-0x40],xmm0
   140025dd0:	call   0x140024720
   140025dd5:	lea    rdx,[rbp-0x40]
   140025dd9:	mov    rcx,r14
   140025ddc:	call   0x140025ec4
   140025de1:	lea    r11,[rsp+0x80]
   140025de9:	mov    rax,r14
   140025dec:	mov    rbx,QWORD PTR [r11+0x20]
   140025df0:	mov    rsi,QWORD PTR [r11+0x28]
   140025df4:	mov    rdi,QWORD PTR [r11+0x30]
   140025df8:	mov    rsp,r11
   140025dfb:	pop    r15
   140025dfd:	pop    r14
   140025dff:	pop    rbp
   140025e00:	ret    
   140025e01:	int3   
   140025e02:	int3   
   140025e03:	int3   
   140025e04:	rex push rbx
   140025e06:	sub    rsp,0x40
   140025e0a:	mov    eax,DWORD PTR [rip+0x22e94]        # 0x140048ca4
   140025e10:	mov    rdx,QWORD PTR [rip+0x18579]        # 0x14003e390
   140025e17:	mov    rbx,rcx
   140025e1a:	not    eax
   140025e1c:	test   al,0x1
   140025e1e:	jne    0x140025e24
   140025e20:	add    rdx,0x2
   140025e24:	lea    rcx,[rsp+0x20]
   140025e29:	call   0x140023e6c
   140025e2e:	mov    rcx,QWORD PTR [rip+0x22e53]        # 0x140048c88
   140025e35:	cmp    BYTE PTR [rcx],0x0
   140025e38:	je     0x140025e8f
   140025e3a:	movsx  eax,BYTE PTR [rcx]
   140025e3d:	inc    rcx
   140025e40:	mov    QWORD PTR [rip+0x22e41],rcx        # 0x140048c88
   140025e47:	cmp    eax,0x30
   140025e4a:	je     0x140025e7c
   140025e4c:	cmp    eax,0x32
   140025e4f:	je     0x140025e63
   140025e51:	cmp    eax,0x35
   140025e54:	jne    0x140025e9e
   140025e56:	lea    edx,[rax-0x33]
   140025e59:	mov    rcx,rbx
   140025e5c:	call   0x140023eb4
   140025e61:	jmp    0x140025eb8
   140025e63:	lea    rcx,[rsp+0x30]
   140025e68:	call   0x140028ee4
   140025e6d:	lea    rcx,[rsp+0x20]
   140025e72:	mov    rdx,rax
   140025e75:	call   0x1400246e0
   140025e7a:	jmp    0x140025e9e
   140025e7c:	lea    rdx,[rip+0x18ee5]        # 0x14003ed68
   140025e83:	lea    rcx,[rsp+0x20]
   140025e88:	call   0x14002483c
   140025e8d:	jmp    0x140025e9e
   140025e8f:	lea    rcx,[rsp+0x20]
   140025e94:	mov    edx,0x1
   140025e99:	call   0x1400248c8
   140025e9e:	lea    rdx,[rip+0x19017]        # 0x14003eebc
   140025ea5:	lea    rcx,[rsp+0x20]
   140025eaa:	call   0x14002483c
   140025eaf:	movups xmm0,XMMWORD PTR [rsp+0x20]
   140025eb4:	movdqu XMMWORD PTR [rbx],xmm0
   140025eb8:	mov    rax,rbx
   140025ebb:	add    rsp,0x40
   140025ebf:	pop    rbx
   140025ec0:	ret    
   140025ec1:	int3   
   140025ec2:	int3   
   140025ec3:	int3   
   140025ec4:	mov    QWORD PTR [rsp+0x8],rbx
   140025ec9:	push   rbp
   140025eca:	push   rsi
   140025ecb:	push   rdi
   140025ecc:	mov    rbp,rsp
   140025ecf:	sub    rsp,0x70
   140025ed3:	mov    rdi,rcx
   140025ed6:	mov    rcx,QWORD PTR [rip+0x22dab]        # 0x140048c88
   140025edd:	mov    rsi,rdx
   140025ee0:	mov    al,BYTE PTR [rcx]
   140025ee2:	mov    BYTE PTR [rbp+0x38],al
   140025ee5:	test   al,al
   140025ee7:	je     0x1400262a1
   140025eed:	and    QWORD PTR [rbp-0x50],0x0
   140025ef2:	and    DWORD PTR [rbp-0x48],0xffff0000
   140025ef9:	inc    rcx
   140025efc:	movzx  eax,al
   140025eff:	or     ebx,0xffffffff
   140025f02:	mov    QWORD PTR [rip+0x22d7f],rcx        # 0x140048c88
   140025f09:	mov    BYTE PTR [rbp+0x30],0x0
   140025f0d:	cmp    eax,0x4e
   140025f10:	jg     0x140025f77
   140025f12:	je     0x140026192
   140025f18:	cmp    eax,0x43
   140025f1b:	jl     0x140026159
   140025f21:	cmp    eax,0x45
   140025f24:	jle    0x140025f6e
   140025f26:	cmp    eax,0x47
   140025f29:	jle    0x140025f65
   140025f2b:	cmp    eax,0x49
   140025f2e:	jle    0x140025f5c
   140025f30:	cmp    eax,0x4b
   140025f33:	jle    0x140025f53
   140025f35:	cmp    eax,0x4d
   140025f38:	jne    0x140026159
   140025f3e:	lea    rdx,[rip+0x1902b]        # 0x14003ef70
   140025f45:	lea    rcx,[rbp-0x50]
   140025f49:	call   0x1400242c0
   140025f4e:	jmp    0x1400261ab
   140025f53:	lea    rdx,[rip+0x1900e]        # 0x14003ef68
   140025f5a:	jmp    0x140025f45
   140025f5c:	lea    rdx,[rip+0x19001]        # 0x14003ef64
   140025f63:	jmp    0x140025f45
   140025f65:	lea    rdx,[rip+0x18ff0]        # 0x14003ef5c
   140025f6c:	jmp    0x140025f45
   140025f6e:	lea    rdx,[rip+0x18fdf]        # 0x14003ef54
   140025f75:	jmp    0x140025f45
   140025f77:	cmp    eax,0x4f
   140025f7a:	je     0x140026182
   140025f80:	jle    0x140026159
   140025f86:	cmp    eax,0x53
   140025f89:	jle    0x140026152
   140025f8f:	cmp    eax,0x58
   140025f92:	je     0x140026146
   140025f98:	cmp    eax,0x5f
   140025f9b:	jne    0x140026159
   140025fa1:	movzx  ebx,BYTE PTR [rcx]
   140025fa4:	inc    rcx
   140025fa7:	mov    eax,ebx
   140025fa9:	mov    QWORD PTR [rip+0x22cd8],rcx        # 0x140048c88
   140025fb0:	cmp    ebx,0x4d
   140025fb3:	jg     0x140026065
   140025fb9:	cmp    eax,0x4c
   140025fbc:	jge    0x14002605c
   140025fc2:	cmp    eax,0x47
   140025fc5:	jg     0x140026040
   140025fc7:	cmp    eax,0x46
   140025fca:	jge    0x140026037
   140025fcc:	test   eax,eax
   140025fce:	je     0x14002601a
   140025fd0:	cmp    eax,0x24
   140025fd3:	je     0x140025ff6
   140025fd5:	add    eax,0xffffffbc
   140025fd8:	cmp    eax,0x1
   140025fdb:	ja     0x1400260b6
   140025fe1:	lea    rdx,[rip+0x18fa0]        # 0x14003ef88
   140025fe8:	lea    rcx,[rbp-0x50]
   140025fec:	call   0x1400242c0
   140025ff1:	jmp    0x1400261ae
   140025ff6:	lea    rcx,[rbp-0x30]
   140025ffa:	call   0x140025ec4
   140025fff:	lea    rdx,[rip+0x18fca]        # 0x14003efd0
   140026006:	lea    rcx,[rbp-0x40]
   14002600a:	mov    rbx,rax
   14002600d:	call   0x140023e6c
   140026012:	mov    rdx,rbx
   140026015:	jmp    0x1400262b2
   14002601a:	dec    rcx
   14002601d:	mov    edx,0x1
   140026022:	mov    QWORD PTR [rip+0x22c5f],rcx        # 0x140048c88
   140026029:	lea    rcx,[rbp-0x50]
   14002602d:	call   0x140024300
   140026032:	jmp    0x1400261ae
   140026037:	lea    rdx,[rip+0x18f52]        # 0x14003ef90
   14002603e:	jmp    0x140025fe8
   140026040:	cmp    eax,0x49
   140026043:	jle    0x140026053
   140026045:	cmp    eax,0x4b
   140026048:	jg     0x1400260b6
   14002604a:	lea    rdx,[rip+0x18f4f]        # 0x14003efa0
   140026051:	jmp    0x140025fe8
   140026053:	lea    rdx,[rip+0x18f3e]        # 0x14003ef98
   14002605a:	jmp    0x140025fe8
   14002605c:	lea    rdx,[rip+0x18f45]        # 0x14003efa8
   140026063:	jmp    0x140025fe8
   140026065:	cmp    eax,0x4e
   140026068:	je     0x14002613a
   14002606e:	cmp    eax,0x4f
   140026071:	je     0x1400260da
   140026073:	cmp    eax,0x52
   140026076:	je     0x1400260ce
   140026078:	cmp    eax,0x57
   14002607b:	je     0x1400260c2
   14002607d:	add    eax,0xffffffa8
   140026080:	cmp    eax,0x1
   140026083:	ja     0x1400260b6
   140026085:	dec    rcx
   140026088:	mov    QWORD PTR [rip+0x22bf9],rcx        # 0x140048c88
   14002608f:	lea    rcx,[rbp-0x20]
   140026093:	call   0x140027060
   140026098:	movups xmm0,XMMWORD PTR [rax]
   14002609b:	movq   rax,xmm0
   1400260a0:	movaps XMMWORD PTR [rbp-0x50],xmm0
   1400260a4:	test   rax,rax
   1400260a7:	jne    0x1400261ae
   1400260ad:	movdqu XMMWORD PTR [rdi],xmm0
   1400260b1:	jmp    0x1400262c1
   1400260b6:	lea    rdx,[rip+0x18f1b]        # 0x14003efd8
   1400260bd:	jmp    0x140025fe8
   1400260c2:	lea    rdx,[rip+0x18eff]        # 0x14003efc8
   1400260c9:	jmp    0x140025fe8
   1400260ce:	lea    rdx,[rip+0x18ee3]        # 0x14003efb8
   1400260d5:	jmp    0x140025fe8
   1400260da:	mov    ebx,0xfffffffe
   1400260df:	movups xmm0,XMMWORD PTR [rsi]
   1400260e2:	and    QWORD PTR [rbp-0x50],0x0
   1400260e7:	and    DWORD PTR [rbp-0x48],0xffff0000
   1400260ee:	movdqu XMMWORD PTR [rbp-0x40],xmm0
   1400260f3:	cmp    ebx,0xfffffffe
   1400260f6:	jne    0x140026241
   1400260fc:	lea    r9,[rip+0xf9ee]        # 0x140035af1
   140026103:	lea    r8,[rbp-0x40]
   140026107:	lea    rdx,[rbp-0x50]
   14002610b:	lea    rcx,[rbp-0x30]
   14002610f:	mov    ebx,0x800
   140026114:	or     DWORD PTR [rbp-0x38],ebx
   140026117:	call   0x140028748
   14002611c:	test   DWORD PTR [rbp-0x28],ebx
   14002611f:	jne    0x140026131
   140026121:	lea    rdx,[rip+0x18660]        # 0x14003e788
   140026128:	lea    rcx,[rbp-0x30]
   14002612c:	call   0x14002483c
   140026131:	movups xmm0,XMMWORD PTR [rbp-0x30]
   140026135:	jmp    0x1400260ad
   14002613a:	lea    rdx,[rip+0x18e3f]        # 0x14003ef80
   140026141:	jmp    0x140025fe8
   140026146:	lea    rdx,[rip+0x18c1b]        # 0x14003ed68
   14002614d:	jmp    0x140025f45
   140026152:	mov    ebx,eax
   140026154:	and    ebx,0x3
   140026157:	jmp    0x1400261a2
   140026159:	dec    rcx
   14002615c:	mov    QWORD PTR [rip+0x22b25],rcx        # 0x140048c88
   140026163:	lea    rcx,[rbp-0x10]
   140026167:	call   0x140027060
   14002616c:	movups xmm0,XMMWORD PTR [rax]
   14002616f:	movq   rax,xmm0
   140026174:	movaps XMMWORD PTR [rbp-0x50],xmm0
   140026178:	test   rax,rax
   14002617b:	jne    0x1400261ab
   14002617d:	jmp    0x1400260ad
   140026182:	lea    rdx,[rip+0x18d4f]        # 0x14003eed8
   140026189:	lea    rcx,[rbp-0x50]
   14002618d:	call   0x1400242c0
   140026192:	lea    rdx,[rip+0x18ddf]        # 0x14003ef78
   140026199:	lea    rcx,[rbp-0x50]
   14002619d:	call   0x14002483c
   1400261a2:	cmp    ebx,0xffffffff
   1400261a5:	jne    0x1400260df
   1400261ab:	mov    bl,BYTE PTR [rbp+0x30]
   1400261ae:	mov    cl,BYTE PTR [rbp+0x38]
   1400261b1:	cmp    cl,0x43
   1400261b4:	je     0x1400261d8
   1400261b6:	lea    eax,[rcx-0x45]
   1400261b9:	test   al,0xf9
   1400261bb:	je     0x1400261cf
   1400261bd:	cmp    cl,0x5f
   1400261c0:	jne    0x140026206
   1400261c2:	sub    bl,0x45
   1400261c5:	cmp    bl,0x8
   1400261c8:	ja     0x140026206
   1400261ca:	test   bl,0x1
   1400261cd:	jne    0x140026206
   1400261cf:	lea    rdx,[rip+0x18d0a]        # 0x14003eee0
   1400261d6:	jmp    0x1400261df
   1400261d8:	lea    rdx,[rip+0x18e01]        # 0x14003efe0
   1400261df:	lea    rcx,[rbp-0x10]
   1400261e3:	call   0x140023e6c
   1400261e8:	lea    rdx,[rbp-0x50]
   1400261ec:	lea    rcx,[rbp-0x30]
   1400261f0:	movups xmm0,XMMWORD PTR [rax]
   1400261f3:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   1400261f8:	call   0x1400246e0
   1400261fd:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140026201:	movdqa XMMWORD PTR [rbp-0x50],xmm0
   140026206:	cmp    QWORD PTR [rsi],0x0
   14002620a:	je     0x140026238
   14002620c:	lea    rcx,[rbp-0x10]
   140026210:	mov    dl,0x20
   140026212:	call   0x140023dac
   140026217:	lea    rcx,[rbp-0x30]
   14002621b:	mov    rdx,rsi
   14002621e:	movups xmm0,XMMWORD PTR [rax]
   140026221:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   140026226:	call   0x1400246e0
   14002622b:	lea    rdx,[rbp-0x30]
   14002622f:	lea    rcx,[rbp-0x50]
   140026233:	call   0x1400246e0
   140026238:	movaps xmm0,XMMWORD PTR [rbp-0x50]
   14002623c:	jmp    0x1400260ad
   140026241:	cmp    QWORD PTR [rsi],0x0
   140026245:	jne    0x140026288
   140026247:	test   bl,0x1
   14002624a:	je     0x140026273
   14002624c:	lea    rdx,[rip+0x18d95]        # 0x14003efe8
   140026253:	lea    rcx,[rbp-0x50]
   140026257:	call   0x1400242c0
   14002625c:	test   bl,0x2
   14002625f:	je     0x140026288
   140026261:	lea    rdx,[rip+0x18d88]        # 0x14003eff0
   140026268:	lea    rcx,[rbp-0x50]
   14002626c:	call   0x14002483c
   140026271:	jmp    0x140026288
   140026273:	test   bl,0x2
   140026276:	je     0x140026288
   140026278:	lea    rdx,[rip+0x18c79]        # 0x14003eef8
   14002627f:	lea    rcx,[rbp-0x50]
   140026283:	call   0x1400242c0
   140026288:	lea    r9,[rip+0x18511]        # 0x14003e7a0
   14002628f:	lea    r8,[rbp-0x40]
   140026293:	lea    rdx,[rbp-0x50]
   140026297:	mov    rcx,rdi
   14002629a:	call   0x140028748
   14002629f:	jmp    0x1400262c1
   1400262a1:	lea    rcx,[rbp-0x10]
   1400262a5:	mov    edx,0x1
   1400262aa:	call   0x140023eb4
   1400262af:	mov    rdx,rsi
   1400262b2:	movups xmm0,XMMWORD PTR [rax]
   1400262b5:	mov    rcx,rdi
   1400262b8:	movdqu XMMWORD PTR [rdi],xmm0
   1400262bc:	call   0x1400246e0
   1400262c1:	mov    rax,rdi
   1400262c4:	mov    rbx,QWORD PTR [rsp+0x90]
   1400262cc:	add    rsp,0x70
   1400262d0:	pop    rdi
   1400262d1:	pop    rsi
   1400262d2:	pop    rbp
   1400262d3:	ret    
   1400262d4:	rex push rbx
   1400262d6:	sub    rsp,0x20
   1400262da:	xor    edx,edx
   1400262dc:	mov    rbx,rcx
   1400262df:	call   0x140026e84
   1400262e4:	mov    rax,rbx
   1400262e7:	add    rsp,0x20
   1400262eb:	pop    rbx
   1400262ec:	ret    
   1400262ed:	int3   
   1400262ee:	int3   
   1400262ef:	int3   
   1400262f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400262f5:	push   rdi
   1400262f6:	sub    rsp,0x30
   1400262fa:	mov    rax,QWORD PTR [rip+0x22987]        # 0x140048c88
   140026301:	mov    rdi,rcx
   140026304:	cmp    BYTE PTR [rax],0x0
   140026307:	je     0x1400263d7
   14002630d:	movsx  ebx,BYTE PTR [rax]
   140026310:	inc    rax
   140026313:	mov    edx,0x2
   140026318:	sub    ebx,0x41
   14002631b:	mov    QWORD PTR [rip+0x22966],rax        # 0x140048c88
   140026322:	cmp    ebx,0x10
   140026325:	ja     0x1400263dc
   14002632b:	lea    rcx,[rsp+0x20]
   140026330:	call   0x140023eb4
   140026335:	mov    ecx,DWORD PTR [rip+0x22969]        # 0x140048ca4
   14002633b:	mov    eax,ecx
   14002633d:	shr    eax,1
   14002633f:	not    eax
   140026341:	test   al,0x1
   140026343:	je     0x1400263cc
   140026349:	and    ebx,0xfffffffe
   14002634c:	je     0x1400263b0
   14002634e:	cmp    ebx,0x2
   140026351:	je     0x1400263a7
   140026353:	cmp    ebx,0x4
   140026356:	je     0x14002639e
   140026358:	cmp    ebx,0x6
   14002635b:	je     0x140026395
   14002635d:	cmp    ebx,0x8
   140026360:	je     0x14002638c
   140026362:	cmp    ebx,0xc
   140026365:	je     0x140026383
   140026367:	cmp    ebx,0xe
   14002636a:	je     0x14002637a
   14002636c:	cmp    ebx,0x10
   14002636f:	jne    0x1400263cc
   140026371:	mov    rdx,QWORD PTR [rip+0x18048]        # 0x14003e3c0
   140026378:	jmp    0x1400263b7
   14002637a:	mov    rdx,QWORD PTR [rip+0x1804f]        # 0x14003e3d0
   140026381:	jmp    0x1400263b7
   140026383:	mov    rdx,QWORD PTR [rip+0x1803e]        # 0x14003e3c8
   14002638a:	jmp    0x1400263b7
   14002638c:	mov    rdx,QWORD PTR [rip+0x18025]        # 0x14003e3b8
   140026393:	jmp    0x1400263b7
   140026395:	mov    rdx,QWORD PTR [rip+0x1800c]        # 0x14003e3a8
   14002639c:	jmp    0x1400263b7
   14002639e:	mov    rdx,QWORD PTR [rip+0x1800b]        # 0x14003e3b0
   1400263a5:	jmp    0x1400263b7
   1400263a7:	mov    rdx,QWORD PTR [rip+0x17ff2]        # 0x14003e3a0
   1400263ae:	jmp    0x1400263b7
   1400263b0:	mov    rdx,QWORD PTR [rip+0x17fe1]        # 0x14003e398
   1400263b7:	not    ecx
   1400263b9:	test   cl,0x1
   1400263bc:	jne    0x1400263c2
   1400263be:	add    rdx,0x2
   1400263c2:	lea    rcx,[rsp+0x20]
   1400263c7:	call   0x1400242c0
   1400263cc:	movups xmm0,XMMWORD PTR [rsp+0x20]
   1400263d1:	movdqu XMMWORD PTR [rdi],xmm0
   1400263d5:	jmp    0x1400263e1
   1400263d7:	mov    edx,0x1
   1400263dc:	call   0x140023eb4
   1400263e1:	mov    rax,rdi
   1400263e4:	mov    rbx,QWORD PTR [rsp+0x40]
   1400263e9:	add    rsp,0x30
   1400263ed:	pop    rdi
   1400263ee:	ret    
   1400263ef:	int3   
   1400263f0:	mov    rax,rsp
   1400263f3:	mov    QWORD PTR [rax+0x8],rbx
   1400263f7:	mov    QWORD PTR [rax+0x10],rsi
   1400263fb:	mov    QWORD PTR [rax+0x18],r8
   1400263ff:	push   rbp
   140026400:	push   rdi
   140026401:	push   r12
   140026403:	push   r14
   140026405:	push   r15
   140026407:	lea    rbp,[rax-0x57]
   14002640b:	sub    rsp,0xe0
   140026412:	xor    r14d,r14d
   140026415:	movaps XMMWORD PTR [rax-0x38],xmm6
   140026419:	mov    rax,QWORD PTR [rip+0x22868]        # 0x140048c88
   140026420:	mov    rsi,rdx
   140026423:	mov    edx,0xffff0000
   140026428:	mov    r15,r9
   14002642b:	and    DWORD PTR [rbp-0x39],edx
   14002642e:	mov    rbx,rcx
   140026431:	mov    QWORD PTR [rbp-0x41],r14
   140026435:	mov    BYTE PTR [rsp+0x20],r14b
   14002643a:	cmp    BYTE PTR [rax],r14b
   14002643d:	je     0x140026a1e
   140026443:	cmp    BYTE PTR [rax],0x24
   140026446:	jne    0x140026476
   140026448:	mov    r9d,DWORD PTR [rbp+0x7f]
   14002644c:	lea    r8,[rsp+0x20]
   140026451:	lea    rdx,[rbp+0x6f]
   140026455:	lea    rcx,[rbp-0x51]
   140026459:	call   0x1400272c0
   14002645e:	cmp    QWORD PTR [rbp-0x51],r14
   140026462:	je     0x140026471
   140026464:	movups xmm0,XMMWORD PTR [rbp-0x51]
   140026468:	movdqu XMMWORD PTR [rbx],xmm0
   14002646c:	jmp    0x140026ac0
   140026471:	mov    edx,0xffff0000
   140026476:	mov    rax,QWORD PTR [rip+0x2280b]        # 0x140048c88
   14002647d:	mov    QWORD PTR [rbp-0x71],r14
   140026481:	mov    QWORD PTR [rbp-0x51],r14
   140026485:	movsx  ecx,BYTE PTR [rax]
   140026488:	mov    eax,0x16
   14002648d:	mov    r12,r14
   140026490:	lea    r8d,[rax+0x2b]
   140026494:	mov    edi,ecx
   140026496:	cmp    cl,r8b
   140026499:	cmovge eax,r8d
   14002649d:	and    DWORD PTR [rbp-0x49],edx
   1400264a0:	sub    edi,eax
   1400264a2:	and    DWORD PTR [rbp-0x69],edx
   1400264a5:	mov    edx,DWORD PTR [rip+0x227f9]        # 0x140048ca4
   1400264ab:	movaps xmm6,XMMWORD PTR [rbp-0x71]
   1400264af:	mov    eax,edi
   1400264b1:	sub    eax,0x4
   1400264b4:	je     0x1400265b1
   1400264ba:	dec    eax
   1400264bc:	je     0x140026533
   1400264be:	cmp    eax,0x3
   1400264c1:	jne    0x140026697
   1400264c7:	mov    eax,edx
   1400264c9:	shr    eax,1
   1400264cb:	not    eax
   1400264cd:	test   al,0x1
   1400264cf:	je     0x140026638
   1400264d5:	not    edx
   1400264d7:	cmp    QWORD PTR [rbp-0x51],r14
   1400264db:	je     0x140026524
   1400264dd:	mov    rdi,QWORD PTR [rip+0x17efc]        # 0x14003e3e0
   1400264e4:	test   dl,0x1
   1400264e7:	jne    0x1400264ed
   1400264e9:	add    rdi,0x2
   1400264ed:	movaps xmm0,XMMWORD PTR [rbp-0x51]
   1400264f1:	lea    rcx,[rbp-0x11]
   1400264f5:	mov    dl,0x20
   1400264f7:	movdqa XMMWORD PTR [rbp-0x11],xmm0
   1400264fc:	call   0x140024720
   140026501:	lea    rcx,[rbp-0x31]
   140026505:	movaps xmm0,XMMWORD PTR [rbp-0x11]
   140026509:	mov    rdx,rdi
   14002650c:	movdqa XMMWORD PTR [rbp-0x31],xmm0
   140026511:	call   0x14002483c
   140026516:	movaps xmm0,XMMWORD PTR [rbp-0x31]
   14002651a:	movdqa XMMWORD PTR [rbp-0x51],xmm0
   14002651f:	jmp    0x14002662c
   140026524:	test   dl,0x1
   140026527:	mov    rdx,QWORD PTR [rip+0x17eb2]        # 0x14003e3e0
   14002652e:	jmp    0x14002661d
   140026533:	mov    eax,edx
   140026535:	shr    eax,1
   140026537:	not    eax
   140026539:	test   al,0x1
   14002653b:	je     0x140026638
   140026541:	not    edx
   140026543:	test   r12,r12
   140026546:	je     0x14002658e
   140026548:	mov    rdi,QWORD PTR [rip+0x17e99]        # 0x14003e3e8
   14002654f:	test   dl,0x1
   140026552:	jne    0x140026558
   140026554:	add    rdi,0x2
   140026558:	lea    rcx,[rbp+0xf]
   14002655c:	mov    dl,0x20
   14002655e:	movdqa XMMWORD PTR [rbp+0xf],xmm6
   140026563:	call   0x140024720
   140026568:	lea    rcx,[rbp-0x1]
   14002656c:	mov    rdx,rdi
   14002656f:	movaps xmm0,XMMWORD PTR [rbp+0xf]
   140026573:	movdqa XMMWORD PTR [rbp-0x1],xmm0
   140026578:	call   0x14002483c
   14002657d:	movaps xmm6,XMMWORD PTR [rbp-0x1]
   140026581:	movaps XMMWORD PTR [rbp-0x71],xmm6
   140026585:	mov    r12,QWORD PTR [rbp-0x71]
   140026589:	jmp    0x14002662c
   14002658e:	test   dl,0x1
   140026591:	mov    rdx,QWORD PTR [rip+0x17e50]        # 0x14003e3e8
   140026598:	jne    0x14002659e
   14002659a:	add    rdx,0x2
   14002659e:	lea    rcx,[rbp-0x71]
   1400265a2:	call   0x1400242c0
   1400265a7:	mov    r12,QWORD PTR [rbp-0x71]
   1400265ab:	movaps xmm6,XMMWORD PTR [rbp-0x71]
   1400265af:	jmp    0x14002662c
   1400265b1:	mov    eax,edx
   1400265b3:	shr    eax,1
   1400265b5:	not    eax
   1400265b7:	test   al,0x1
   1400265b9:	je     0x140026638
   1400265bb:	mov    eax,edx
   1400265bd:	shr    eax,0x11
   1400265c0:	not    eax
   1400265c2:	test   al,0x1
   1400265c4:	je     0x140026638
   1400265c6:	not    edx
   1400265c8:	cmp    QWORD PTR [rbp-0x51],r14
   1400265cc:	je     0x140026613
   1400265ce:	mov    rdi,QWORD PTR [rip+0x17e03]        # 0x14003e3d8
   1400265d5:	test   dl,0x1
   1400265d8:	jne    0x1400265de
   1400265da:	add    rdi,0x2
   1400265de:	movaps xmm0,XMMWORD PTR [rbp-0x51]
   1400265e2:	lea    rcx,[rbp-0x21]
   1400265e6:	mov    dl,0x20
   1400265e8:	movdqa XMMWORD PTR [rbp-0x21],xmm0
   1400265ed:	call   0x140024720
   1400265f2:	lea    rcx,[rsp+0x30]
   1400265f7:	movaps xmm0,XMMWORD PTR [rbp-0x21]
   1400265fb:	mov    rdx,rdi
   1400265fe:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140026604:	call   0x14002483c
   140026609:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14002660e:	jmp    0x14002651a
   140026613:	test   dl,0x1
   140026616:	mov    rdx,QWORD PTR [rip+0x17dbb]        # 0x14003e3d8
   14002661d:	jne    0x140026623
   14002661f:	add    rdx,0x2
   140026623:	lea    rcx,[rbp-0x51]
   140026627:	call   0x1400242c0
   14002662c:	mov    edx,DWORD PTR [rip+0x22672]        # 0x140048ca4
   140026632:	mov    r8d,0x41
   140026638:	mov    rax,QWORD PTR [rip+0x22649]        # 0x140048c88
   14002663f:	inc    rax
   140026642:	mov    QWORD PTR [rip+0x2263f],rax        # 0x140048c88
   140026649:	cmp    BYTE PTR [rax],0x24
   14002664c:	jne    0x14002667a
   14002664e:	mov    r9d,DWORD PTR [rbp+0x7f]
   140026652:	lea    r8,[rsp+0x20]
   140026657:	lea    rdx,[rbp+0x6f]
   14002665b:	lea    rcx,[rbp-0x61]
   14002665f:	call   0x1400272c0
   140026664:	cmp    QWORD PTR [rbp-0x61],r14
   140026668:	jne    0x140026a15
   14002666e:	mov    edx,DWORD PTR [rip+0x22630]        # 0x140048ca4
   140026674:	mov    r8d,0x41
   14002667a:	mov    rax,QWORD PTR [rip+0x22607]        # 0x140048c88
   140026681:	mov    ecx,0x16
   140026686:	cmp    BYTE PTR [rax],r8b
   140026689:	movsx  edi,BYTE PTR [rax]
   14002668c:	cmovge ecx,r8d
   140026690:	sub    edi,ecx
   140026692:	jmp    0x1400264af
   140026697:	mov    rax,QWORD PTR [rip+0x225ea]        # 0x140048c88
   14002669e:	cmp    BYTE PTR [rax],r14b
   1400266a1:	je     0x1400266aa
   1400266a3:	inc    QWORD PTR [rip+0x225de]        # 0x140048c88
   1400266aa:	cmp    edi,0x1f
   1400266ad:	ja     0x14002676e
   1400266b3:	mov    r14,QWORD PTR [rbp+0x6f]
   1400266b7:	lea    rcx,[rbp-0x71]
   1400266bb:	mov    rdx,r14
   1400266be:	call   0x140023e6c
   1400266c3:	lea    rdx,[rbp-0x71]
   1400266c7:	lea    rcx,[rsp+0x30]
   1400266cc:	movaps xmm0,XMMWORD PTR [rbp-0x41]
   1400266d0:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   1400266d6:	call   0x1400246e0
   1400266db:	cmp    QWORD PTR [rbp-0x51],0x0
   1400266e0:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   1400266e5:	movdqa XMMWORD PTR [rbp-0x71],xmm0
   1400266ea:	je     0x140026721
   1400266ec:	lea    rcx,[rsp+0x30]
   1400266f1:	mov    dl,0x20
   1400266f3:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   1400266f9:	call   0x140024720
   1400266fe:	lea    rdx,[rbp-0x51]
   140026702:	lea    rcx,[rsp+0x30]
   140026707:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14002670c:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140026712:	call   0x1400246e0
   140026717:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14002671c:	movdqa XMMWORD PTR [rbp-0x71],xmm0
   140026721:	test   r12,r12
   140026724:	je     0x14002675b
   140026726:	lea    rcx,[rsp+0x30]
   14002672b:	mov    dl,0x20
   14002672d:	movdqa XMMWORD PTR [rsp+0x30],xmm6
   140026733:	call   0x140024720
   140026738:	lea    rdx,[rbp-0x71]
   14002673c:	lea    rcx,[rsp+0x30]
   140026741:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140026746:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   14002674c:	call   0x1400246e0
   140026751:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140026756:	movdqa XMMWORD PTR [rbp-0x71],xmm0
   14002675b:	xor    r12d,r12d
   14002675e:	test   dil,0x10
   140026762:	je     0x140026857
   140026768:	cmp    DWORD PTR [rbp+0x7f],r12d
   14002676c:	je     0x14002677b
   14002676e:	mov    edx,0x2
   140026773:	mov    rcx,rbx
   140026776:	jmp    0x140026abb
   14002677b:	cmp    BYTE PTR [r14],r12b
   14002677e:	je     0x1400267f5
   140026780:	lea    rdx,[rip+0x1856d]        # 0x14003ecf4
   140026787:	lea    rcx,[rbp-0x61]
   14002678b:	call   0x140023e6c
   140026790:	lea    rdx,[rbp-0x71]
   140026794:	lea    rcx,[rsp+0x30]
   140026799:	movups xmm0,XMMWORD PTR [rax]
   14002679c:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   1400267a2:	call   0x1400246e0
   1400267a7:	mov    rax,QWORD PTR [rip+0x224da]        # 0x140048c88
   1400267ae:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   1400267b3:	lea    rcx,[rbp-0x61]
   1400267b7:	movdqa XMMWORD PTR [rbp-0x71],xmm0
   1400267bc:	cmp    BYTE PTR [rax],r12b
   1400267bf:	je     0x1400267c8
   1400267c1:	call   0x1400289f0
   1400267c6:	jmp    0x1400267d2
   1400267c8:	mov    edx,0x1
   1400267cd:	call   0x140023eb4
   1400267d2:	movups xmm0,XMMWORD PTR [rax]
   1400267d5:	lea    rdx,[rbp-0x71]
   1400267d9:	lea    rcx,[rsp+0x30]
   1400267de:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   1400267e4:	call   0x1400246e0
   1400267e9:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   1400267ee:	movdqa XMMWORD PTR [rbp-0x71],xmm0
   1400267f3:	jmp    0x140026828
   1400267f5:	mov    rax,QWORD PTR [rip+0x2248c]        # 0x140048c88
   1400267fc:	cmp    BYTE PTR [rax],r12b
   1400267ff:	je     0x140026849
   140026801:	lea    rcx,[rbp-0x61]
   140026805:	call   0x1400289f0
   14002680a:	cmp    BYTE PTR [rbp-0x69],0x3
   14002680e:	je     0x140026828
   140026810:	cmp    BYTE PTR [rax+0x8],0x1
   140026814:	jle    0x140026828
   140026816:	mov    ecx,DWORD PTR [rbp-0x69]
   140026819:	movzx  eax,BYTE PTR [rax+0x8]
   14002681d:	and    ecx,0xffffff00
   140026823:	or     ecx,eax
   140026825:	mov    DWORD PTR [rbp-0x69],ecx
   140026828:	mov    rax,QWORD PTR [rip+0x22459]        # 0x140048c88
   14002682f:	mov    cl,BYTE PTR [rax]
   140026831:	test   cl,cl
   140026833:	je     0x140026849
   140026835:	inc    rax
   140026838:	mov    QWORD PTR [rip+0x22449],rax        # 0x140048c88
   14002683f:	cmp    cl,0x40
   140026842:	je     0x140026857
   140026844:	jmp    0x14002676e
   140026849:	lea    rcx,[rbp-0x71]
   14002684d:	mov    edx,0x1
   140026852:	call   0x1400248c8
   140026857:	mov    eax,DWORD PTR [rip+0x22447]        # 0x140048ca4
   14002685d:	shr    eax,1
   14002685f:	not    eax
   140026861:	test   al,0x1
   140026863:	mov    eax,edi
   140026865:	je     0x1400268a4
   140026867:	and    eax,0xc
   14002686a:	cmp    al,0xc
   14002686c:	jne    0x1400268d2
   14002686e:	cmp    DWORD PTR [rbp+0x7f],r12d
   140026872:	jne    0x14002676e
   140026878:	lea    rcx,[rbp-0x61]
   14002687c:	call   0x140025e04
   140026881:	lea    rdx,[rbp-0x71]
   140026885:	lea    rcx,[rsp+0x30]
   14002688a:	movups xmm0,XMMWORD PTR [rax]
   14002688d:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140026893:	call   0x1400246e0
   140026898:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14002689d:	movdqa XMMWORD PTR [rbp-0x71],xmm0
   1400268a2:	jmp    0x1400268d2
   1400268a4:	and    eax,0xc
   1400268a7:	cmp    al,0xc
   1400268a9:	jne    0x1400268d2
   1400268ab:	lea    rcx,[rbp-0x61]
   1400268af:	call   0x140025e04
   1400268b4:	cmp    BYTE PTR [rbp-0x69],0x3
   1400268b8:	je     0x1400268d2
   1400268ba:	cmp    BYTE PTR [rax+0x8],0x1
   1400268be:	jle    0x1400268d2
   1400268c0:	mov    ecx,DWORD PTR [rbp-0x69]
   1400268c3:	movzx  eax,BYTE PTR [rax+0x8]
   1400268c7:	and    ecx,0xffffff00
   1400268cd:	or     ecx,eax
   1400268cf:	mov    DWORD PTR [rbp-0x69],ecx
   1400268d2:	test   dil,0x2
   1400268d6:	je     0x140026909
   1400268d8:	lea    rdx,[rip+0x18771]        # 0x14003f050
   1400268df:	lea    rcx,[rbp-0x61]
   1400268e3:	call   0x140023e6c
   1400268e8:	lea    rdx,[rbp-0x71]
   1400268ec:	lea    rcx,[rsp+0x30]
   1400268f1:	movups xmm0,XMMWORD PTR [rax]
   1400268f4:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   1400268fa:	call   0x1400246e0
   1400268ff:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140026904:	movdqa XMMWORD PTR [rbp-0x71],xmm0
   140026909:	test   dil,0x1
   14002690d:	je     0x140026940
   14002690f:	lea    rdx,[rip+0x18746]        # 0x14003f05c
   140026916:	lea    rcx,[rbp-0x61]
   14002691a:	call   0x140023e6c
   14002691f:	lea    rdx,[rbp-0x71]
   140026923:	lea    rcx,[rsp+0x30]
   140026928:	movups xmm0,XMMWORD PTR [rax]
   14002692b:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140026931:	call   0x1400246e0
   140026936:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14002693b:	movdqa XMMWORD PTR [rbp-0x71],xmm0
   140026940:	mov    edi,0x100
   140026945:	cmp    DWORD PTR [rbp+0x7f],r12d
   140026949:	jne    0x1400269fd
   14002694f:	cmp    QWORD PTR [rsi],r12
   140026952:	je     0x1400269c9
   140026954:	test   DWORD PTR [rsi+0x8],edi
   140026957:	jne    0x1400269a6
   140026959:	cmp    QWORD PTR [r15],r12
   14002695c:	je     0x1400269a6
   14002695e:	lea    rcx,[rbp-0x61]
   140026962:	mov    dl,0x20
   140026964:	call   0x140023dac
   140026969:	lea    rcx,[rsp+0x30]
   14002696e:	mov    rdx,r15
   140026971:	movups xmm0,XMMWORD PTR [rax]
   140026974:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   14002697a:	call   0x1400246e0
   14002697f:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140026984:	lea    rcx,[rsp+0x30]
   140026989:	mov    dl,0x20
   14002698b:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140026991:	call   0x140024720
   140026996:	mov    rdx,rsi
   140026999:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14002699e:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   1400269a4:	jmp    0x1400269e5
   1400269a6:	test   DWORD PTR [rsi+0x8],0x800
   1400269ad:	je     0x1400269b9
   1400269af:	movups xmm0,XMMWORD PTR [rsi]
   1400269b2:	movdqu XMMWORD PTR [rbp-0x71],xmm0
   1400269b7:	jmp    0x1400269fd
   1400269b9:	lea    rcx,[rbp-0x61]
   1400269bd:	mov    dl,0x20
   1400269bf:	call   0x140023dac
   1400269c4:	mov    rdx,rsi
   1400269c7:	jmp    0x1400269dc
   1400269c9:	cmp    QWORD PTR [r15],r12
   1400269cc:	je     0x1400269fd
   1400269ce:	lea    rcx,[rbp-0x61]
   1400269d2:	mov    dl,0x20
   1400269d4:	call   0x140023dac
   1400269d9:	mov    rdx,r15
   1400269dc:	movups xmm0,XMMWORD PTR [rax]
   1400269df:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   1400269e5:	lea    rcx,[rsp+0x30]
   1400269ea:	call   0x1400246e0
   1400269ef:	lea    rdx,[rsp+0x30]
   1400269f4:	lea    rcx,[rbp-0x71]
   1400269f8:	call   0x1400246e0
   1400269fd:	or     DWORD PTR [rbp-0x69],edi
   140026a00:	cmp    BYTE PTR [rsp+0x20],r12b
   140026a05:	je     0x140026a0c
   140026a07:	bts    DWORD PTR [rbp-0x69],0xd
   140026a0c:	movaps xmm0,XMMWORD PTR [rbp-0x71]
   140026a10:	jmp    0x140026468
   140026a15:	movups xmm0,XMMWORD PTR [rbp-0x61]
   140026a19:	jmp    0x140026468
   140026a1e:	cmp    DWORD PTR [rbp+0x7f],r14d
   140026a22:	jne    0x140026ab6
   140026a28:	cmp    QWORD PTR [rsi],r14
   140026a2b:	je     0x140026a9b
   140026a2d:	mov    edi,0x100
   140026a32:	test   DWORD PTR [rsi+0x8],edi
   140026a35:	jne    0x140026a88
   140026a37:	cmp    QWORD PTR [r9],r14
   140026a3a:	je     0x140026a88
   140026a3c:	lea    rcx,[rsp+0x30]
   140026a41:	mov    edx,0x1
   140026a46:	call   0x140023eb4
   140026a4b:	lea    rcx,[rbp-0x61]
   140026a4f:	mov    rdx,r15
   140026a52:	movups xmm0,XMMWORD PTR [rax]
   140026a55:	movdqu XMMWORD PTR [rbp-0x61],xmm0
   140026a5a:	call   0x1400246e0
   140026a5f:	movaps xmm0,XMMWORD PTR [rbp-0x61]
   140026a63:	lea    rcx,[rbp-0x61]
   140026a67:	mov    dl,0x20
   140026a69:	movdqa XMMWORD PTR [rbp-0x61],xmm0
   140026a6e:	call   0x140024720
   140026a73:	movaps xmm0,XMMWORD PTR [rbp-0x61]
   140026a77:	mov    rdx,rsi
   140026a7a:	mov    rcx,rbx
   140026a7d:	movdqu XMMWORD PTR [rbx],xmm0
   140026a81:	call   0x1400246e0
   140026a86:	jmp    0x140026ac0
   140026a88:	lea    rcx,[rbp-0x61]
   140026a8c:	mov    edx,0x1
   140026a91:	call   0x140023eb4
   140026a96:	movups xmm0,XMMWORD PTR [rax]
   140026a99:	jmp    0x140026a77
   140026a9b:	cmp    QWORD PTR [r9],r14
   140026a9e:	je     0x140026ab6
   140026aa0:	lea    rcx,[rbp-0x61]
   140026aa4:	mov    edx,0x1
   140026aa9:	call   0x140023eb4
   140026aae:	mov    rdx,r15
   140026ab1:	movups xmm0,XMMWORD PTR [rax]
   140026ab4:	jmp    0x140026a7a
   140026ab6:	mov    edx,0x1
   140026abb:	call   0x140023eb4
   140026ac0:	lea    r11,[rsp+0xe0]
   140026ac8:	mov    rax,rbx
   140026acb:	mov    rbx,QWORD PTR [r11+0x30]
   140026acf:	mov    rsi,QWORD PTR [r11+0x38]
   140026ad3:	movaps xmm6,XMMWORD PTR [r11-0x10]
   140026ad8:	mov    rsp,r11
   140026adb:	pop    r15
   140026add:	pop    r14
   140026adf:	pop    r12
   140026ae1:	pop    rdi
   140026ae2:	pop    rbp
   140026ae3:	ret    
   140026ae4:	mov    r11,rsp
   140026ae7:	push   rbx
   140026ae8:	sub    rsp,0x50
   140026aec:	mov    rbx,rcx
   140026aef:	xor    ecx,ecx
   140026af1:	mov    eax,0xffff0000
   140026af6:	mov    QWORD PTR [r11-0x28],rcx
   140026afa:	and    DWORD PTR [rsp+0x38],eax
   140026afe:	mov    QWORD PTR [r11-0x18],rcx
   140026b02:	and    DWORD PTR [rsp+0x48],eax
   140026b06:	mov    DWORD PTR [rsp+0x20],ecx
   140026b0a:	lea    r9,[r11-0x28]
   140026b0e:	lea    r8,[rip+0xefdc]        # 0x140035af1
   140026b15:	lea    rdx,[r11-0x18]
   140026b19:	mov    rcx,rbx
   140026b1c:	call   0x1400263f0
   140026b21:	mov    rax,rbx
   140026b24:	add    rsp,0x50
   140026b28:	pop    rbx
   140026b29:	ret    
   140026b2a:	int3   
   140026b2b:	int3   
   140026b2c:	mov    QWORD PTR [rsp+0x8],rbx
   140026b31:	push   rbp
   140026b32:	mov    rbp,rsp
   140026b35:	sub    rsp,0x60
   140026b39:	mov    rbx,rcx
   140026b3c:	lea    rcx,[rbp-0x30]
   140026b40:	call   0x140023de4
   140026b45:	mov    rax,QWORD PTR [rip+0x2213c]        # 0x140048c88
   140026b4c:	xor    ecx,ecx
   140026b4e:	cmp    BYTE PTR [rax],cl
   140026b50:	je     0x140026bdf
   140026b56:	cmp    BYTE PTR [rax],0x3f
   140026b59:	je     0x140026ba4
   140026b5b:	cmp    BYTE PTR [rax],0x58
   140026b5e:	je     0x140026b71
   140026b60:	lea    rdx,[rbp-0x30]
   140026b64:	mov    rcx,rbx
   140026b67:	call   0x140028428
   140026b6c:	jmp    0x140026c00
   140026b71:	inc    rax
   140026b74:	mov    QWORD PTR [rip+0x2210d],rax        # 0x140048c88
   140026b7b:	cmp    QWORD PTR [rbp-0x30],rcx
   140026b7f:	jne    0x140026b92
   140026b81:	lea    rdx,[rip+0x181e0]        # 0x14003ed68
   140026b88:	mov    rcx,rbx
   140026b8b:	call   0x140023e6c
   140026b90:	jmp    0x140026c00
   140026b92:	lea    rdx,[rip+0x18353]        # 0x14003eeec
   140026b99:	lea    rcx,[rbp-0x20]
   140026b9d:	call   0x140023e6c
   140026ba2:	jmp    0x140026bed
   140026ba4:	and    DWORD PTR [rbp-0x18],0xffff0000
   140026bab:	mov    QWORD PTR [rbp-0x20],rcx
   140026baf:	mov    DWORD PTR [rsp+0x20],ecx
   140026bb3:	inc    rax
   140026bb6:	lea    rcx,[rbp-0x10]
   140026bba:	lea    r9,[rbp-0x20]
   140026bbe:	lea    r8,[rip+0xef2c]        # 0x140035af1
   140026bc5:	lea    rdx,[rbp-0x30]
   140026bc9:	mov    QWORD PTR [rip+0x220b8],rax        # 0x140048c88
   140026bd0:	call   0x1400263f0
   140026bd5:	movups xmm0,XMMWORD PTR [rax]
   140026bd8:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   140026bdd:	jmp    0x140026b60
   140026bdf:	lea    rcx,[rbp-0x20]
   140026be3:	mov    edx,0x1
   140026be8:	call   0x140023eb4
   140026bed:	movups xmm0,XMMWORD PTR [rax]
   140026bf0:	lea    rdx,[rbp-0x30]
   140026bf4:	mov    rcx,rbx
   140026bf7:	movdqu XMMWORD PTR [rbx],xmm0
   140026bfb:	call   0x1400246e0
   140026c00:	mov    rax,rbx
   140026c03:	mov    rbx,QWORD PTR [rsp+0x70]
   140026c08:	add    rsp,0x60
   140026c0c:	pop    rbp
   140026c0d:	ret    
   140026c0e:	int3   
   140026c0f:	int3   
   140026c10:	mov    QWORD PTR [rsp+0x8],rbx
   140026c15:	mov    QWORD PTR [rsp+0x20],rsi
   140026c1a:	push   rbp
   140026c1b:	mov    rbp,rsp
   140026c1e:	sub    rsp,0x50
   140026c22:	mov    eax,DWORD PTR [rip+0x2207c]        # 0x140048ca4
   140026c28:	mov    rbx,rcx
   140026c2b:	bt     eax,0xd
   140026c2f:	jae    0x140026c5b
   140026c31:	btr    eax,0xd
   140026c35:	lea    rcx,[rbp-0x10]
   140026c39:	xor    edx,edx
   140026c3b:	mov    DWORD PTR [rip+0x22063],eax        # 0x140048ca4
   140026c41:	call   0x140026b2c
   140026c46:	bts    DWORD PTR [rip+0x22056],0xd        # 0x140048ca4
   140026c4e:	movups xmm0,XMMWORD PTR [rbp-0x10]
   140026c52:	movdqu XMMWORD PTR [rbx],xmm0
   140026c56:	jmp    0x140026e6f
   140026c5b:	mov    rax,QWORD PTR [rip+0x22026]        # 0x140048c88
   140026c62:	mov    dl,0x3f
   140026c64:	mov    cl,BYTE PTR [rax]
   140026c66:	cmp    cl,dl
   140026c68:	jne    0x140026e59
   140026c6e:	inc    rax
   140026c71:	mov    QWORD PTR [rip+0x22010],rax        # 0x140048c88
   140026c78:	cmp    BYTE PTR [rax],dl
   140026c7a:	jne    0x140026ccb
   140026c7c:	inc    rax
   140026c7f:	cmp    BYTE PTR [rax],dl
   140026c81:	jne    0x140026ca6
   140026c83:	lea    rcx,[rbp-0x10]
   140026c87:	call   0x140026c10
   140026c8c:	mov    rax,QWORD PTR [rip+0x21ff5]        # 0x140048c88
   140026c93:	jmp    0x140026c9f
   140026c95:	inc    rax
   140026c98:	mov    QWORD PTR [rip+0x21fe9],rax        # 0x140048c88
   140026c9f:	cmp    BYTE PTR [rax],0x0
   140026ca2:	jne    0x140026c95
   140026ca4:	jmp    0x140026c4e
   140026ca6:	cmp    BYTE PTR [rax],0x24
   140026ca9:	lea    rcx,[rbp-0x30]
   140026cad:	jne    0x140026cb8
   140026caf:	mov    dl,0x1
   140026cb1:	call   0x1400299f0
   140026cb6:	jmp    0x140026cd9
   140026cb8:	xor    r8d,r8d
   140026cbb:	xor    edx,edx
   140026cbd:	mov    QWORD PTR [rip+0x21fc4],rax        # 0x140048c88
   140026cc4:	call   0x140027d0c
   140026cc9:	jmp    0x140026cd9
   140026ccb:	lea    rcx,[rbp-0x30]
   140026ccf:	xor    r8d,r8d
   140026cd2:	mov    dl,0x1
   140026cd4:	call   0x14002a43c
   140026cd9:	cmp    QWORD PTR [rbp-0x30],0x0
   140026cde:	mov    esi,DWORD PTR [rbp-0x28]
   140026ce1:	je     0x140026cf2
   140026ce3:	bt     esi,0x9
   140026ce7:	jae    0x140026cf2
   140026ce9:	mov    DWORD PTR [rbp+0x20],0x1
   140026cf0:	jmp    0x140026cf6
   140026cf2:	and    DWORD PTR [rbp+0x20],0x0
   140026cf6:	mov    ecx,esi
   140026cf8:	shr    ecx,0xf
   140026cfb:	and    ecx,0x1
   140026cfe:	cmp    BYTE PTR [rbp-0x28],0x1
   140026d02:	mov    DWORD PTR [rbp+0x18],ecx
   140026d05:	jle    0x140026d10
   140026d07:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140026d0b:	jmp    0x140026c52
   140026d10:	mov    rax,QWORD PTR [rip+0x21f71]        # 0x140048c88
   140026d17:	test   BYTE PTR [rax],0xbf
   140026d1a:	je     0x140026dc0
   140026d20:	lea    rcx,[rbp-0x20]
   140026d24:	call   0x1400289f0
   140026d29:	cmp    QWORD PTR [rbp-0x20],0x0
   140026d2e:	je     0x140026dbd
   140026d34:	cmp    BYTE PTR [rip+0x21f6d],0x0        # 0x140048ca8
   140026d3b:	lea    rcx,[rbp-0x10]
   140026d3f:	je     0x140026d86
   140026d41:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140026d45:	lea    rdx,[rbp-0x20]
   140026d49:	mov    BYTE PTR [rip+0x21f58],0x0        # 0x140048ca8
   140026d50:	movdqa XMMWORD PTR [rbp-0x10],xmm0
   140026d55:	call   0x1400246e0
   140026d5a:	mov    rax,QWORD PTR [rip+0x21f27]        # 0x140048c88
   140026d61:	movaps xmm0,XMMWORD PTR [rbp-0x10]
   140026d65:	cmp    BYTE PTR [rax],0x40
   140026d68:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   140026d6d:	je     0x140026dba
   140026d6f:	lea    rcx,[rbp-0x10]
   140026d73:	call   0x1400289f0
   140026d78:	lea    rcx,[rbp-0x10]
   140026d7c:	movups xmm0,XMMWORD PTR [rax]
   140026d7f:	movdqu XMMWORD PTR [rbp-0x10],xmm0
   140026d84:	jmp    0x140026d8f
   140026d86:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   140026d8a:	movdqa XMMWORD PTR [rbp-0x10],xmm0
   140026d8f:	lea    rdx,[rip+0x17f5e]        # 0x14003ecf4
   140026d96:	call   0x14002483c
   140026d9b:	lea    rdx,[rbp-0x30]
   140026d9f:	lea    rcx,[rbp-0x10]
   140026da3:	movaps xmm0,XMMWORD PTR [rbp-0x10]
   140026da7:	movdqa XMMWORD PTR [rbp-0x10],xmm0
   140026dac:	call   0x1400246e0
   140026db1:	movaps xmm0,XMMWORD PTR [rbp-0x10]
   140026db5:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   140026dba:	mov    esi,DWORD PTR [rbp-0x28]
   140026dbd:	mov    ecx,DWORD PTR [rbp+0x18]
   140026dc0:	mov    edx,DWORD PTR [rbp+0x20]
   140026dc3:	test   edx,edx
   140026dc5:	je     0x140026dd5
   140026dc7:	cmp    QWORD PTR [rbp-0x30],0x0
   140026dcc:	je     0x140026dd5
   140026dce:	bts    esi,0x9
   140026dd2:	mov    DWORD PTR [rbp-0x28],esi
   140026dd5:	mov    r8d,0x8000
   140026ddb:	test   ecx,ecx
   140026ddd:	je     0x140026de5
   140026ddf:	or     esi,r8d
   140026de2:	mov    DWORD PTR [rbp-0x28],esi
   140026de5:	cmp    QWORD PTR [rbp-0x30],0x0
   140026dea:	je     0x140026d07
   140026df0:	mov    ecx,0x1000
   140026df5:	test   ecx,esi
   140026df7:	jne    0x140026d07
   140026dfd:	mov    rax,QWORD PTR [rip+0x21e84]        # 0x140048c88
   140026e04:	cmp    BYTE PTR [rax],0x0
   140026e07:	je     0x140026e1c
   140026e09:	cmp    BYTE PTR [rax],0x40
   140026e0c:	je     0x140026e15
   140026e0e:	mov    edx,0x2
   140026e13:	jmp    0x140026e67
   140026e15:	inc    QWORD PTR [rip+0x21e6c]        # 0x140048c88
   140026e1c:	test   DWORD PTR [rip+0x21e82],ecx        # 0x140048ca4
   140026e22:	je     0x140026e4b
   140026e24:	test   edx,edx
   140026e26:	jne    0x140026e4b
   140026e28:	test   r8d,esi
   140026e2b:	jne    0x140026e4b
   140026e2d:	and    QWORD PTR [rbp-0x20],0x0
   140026e32:	and    DWORD PTR [rbp-0x18],0xffff0000
   140026e39:	lea    rdx,[rbp-0x20]
   140026e3d:	lea    rcx,[rbp-0x10]
   140026e41:	call   0x140024a5c
   140026e46:	jmp    0x140026d07
   140026e4b:	lea    rdx,[rbp-0x30]
   140026e4f:	mov    rcx,rbx
   140026e52:	call   0x140024a5c
   140026e57:	jmp    0x140026e6f
   140026e59:	mov    edx,0x2
   140026e5e:	test   cl,cl
   140026e60:	jne    0x140026e67
   140026e62:	mov    edx,0x1
   140026e67:	mov    rcx,rbx
   140026e6a:	call   0x140023eb4
   140026e6f:	mov    rsi,QWORD PTR [rsp+0x78]
   140026e74:	mov    rax,rbx
   140026e77:	mov    rbx,QWORD PTR [rsp+0x60]
   140026e7c:	add    rsp,0x50
   140026e80:	pop    rbp
   140026e81:	ret    
   140026e82:	int3   
   140026e83:	int3   
   140026e84:	mov    QWORD PTR [rsp+0x8],rbx
   140026e89:	mov    QWORD PTR [rsp+0x10],rsi
   140026e8e:	mov    QWORD PTR [rsp+0x18],rdi
   140026e93:	push   rbp
   140026e94:	mov    rbp,rsp
   140026e97:	sub    rsp,0x60
   140026e9b:	mov    r8,QWORD PTR [rip+0x21de6]        # 0x140048c88
   140026ea2:	xor    esi,esi
   140026ea4:	mov    r9b,dl
   140026ea7:	cmp    BYTE PTR [r8],0x51
   140026eab:	mov    rdi,rcx
   140026eae:	lea    r10d,[rsi+0x1]
   140026eb2:	jne    0x140026ec5
   140026eb4:	add    r8,r10
   140026eb7:	lea    rsi,[rip+0x17e8a]        # 0x14003ed48
   140026ebe:	mov    QWORD PTR [rip+0x21dc3],r8        # 0x140048c88
   140026ec5:	mov    cl,BYTE PTR [r8]
   140026ec8:	test   cl,cl
   140026eca:	jne    0x140026edc
   140026ecc:	mov    edx,r10d
   140026ecf:	mov    rcx,rdi
   140026ed2:	call   0x140023eb4
   140026ed7:	jmp    0x140026fc7
   140026edc:	lea    eax,[rcx-0x30]
   140026edf:	cmp    al,0x9
   140026ee1:	ja     0x140026f0d
   140026ee3:	add    r8,r10
   140026ee6:	movsx  eax,cl
   140026ee9:	sub    eax,0x2f
   140026eec:	mov    QWORD PTR [rip+0x21d95],r8        # 0x140048c88
   140026ef3:	movsxd rdx,eax
   140026ef6:	test   rsi,rsi
   140026ef9:	je     0x140026f04
   140026efb:	lea    rcx,[rbp-0x30]
   140026eff:	jmp    0x140026f89
   140026f04:	lea    rcx,[rbp-0x10]
   140026f08:	jmp    0x140026fbb
   140026f0d:	xor    edx,edx
   140026f0f:	mov    r11b,0x40
   140026f12:	jmp    0x140026f3f
   140026f14:	test   cl,cl
   140026f16:	je     0x140026ecc
   140026f18:	lea    eax,[rcx-0x41]
   140026f1b:	cmp    al,0xf
   140026f1d:	ja     0x140026f6b
   140026f1f:	movsx  eax,cl
   140026f22:	shl    rdx,0x4
   140026f26:	sub    eax,0x41
   140026f29:	movsxd rcx,eax
   140026f2c:	add    rcx,rdx
   140026f2f:	add    r8,r10
   140026f32:	mov    QWORD PTR [rip+0x21d4f],r8        # 0x140048c88
   140026f39:	mov    rdx,rcx
   140026f3c:	mov    cl,BYTE PTR [r8]
   140026f3f:	cmp    cl,r11b
   140026f42:	jne    0x140026f14
   140026f44:	mov    al,BYTE PTR [r8]
   140026f47:	add    r8,r10
   140026f4a:	mov    QWORD PTR [rip+0x21d37],r8        # 0x140048c88
   140026f51:	cmp    al,r11b
   140026f54:	jne    0x140026f6b
   140026f56:	test   r9b,r9b
   140026f59:	je     0x140026f80
   140026f5b:	test   rsi,rsi
   140026f5e:	je     0x140026f75
   140026f60:	lea    rcx,[rbp-0x10]
   140026f64:	call   0x140023f18
   140026f69:	jmp    0x140026f8e
   140026f6b:	mov    edx,0x2
   140026f70:	jmp    0x140026ecf
   140026f75:	lea    rcx,[rbp-0x30]
   140026f79:	call   0x140023f18
   140026f7e:	jmp    0x140026fc0
   140026f80:	test   rsi,rsi
   140026f83:	je     0x140026fb7
   140026f85:	lea    rcx,[rbp-0x10]
   140026f89:	call   0x140023fc4
   140026f8e:	lea    rcx,[rbp-0x20]
   140026f92:	mov    rdx,rsi
   140026f95:	mov    rbx,rax
   140026f98:	call   0x140023e6c
   140026f9d:	lea    rcx,[rbp-0x40]
   140026fa1:	mov    rdx,rbx
   140026fa4:	movups xmm0,XMMWORD PTR [rax]
   140026fa7:	movdqu XMMWORD PTR [rbp-0x40],xmm0
   140026fac:	call   0x1400246e0
   140026fb1:	lea    rax,[rbp-0x40]
   140026fb5:	jmp    0x140026fc0
   140026fb7:	lea    rcx,[rbp-0x30]
   140026fbb:	call   0x140023fc4
   140026fc0:	movups xmm0,XMMWORD PTR [rax]
   140026fc3:	movdqu XMMWORD PTR [rdi],xmm0
   140026fc7:	lea    r11,[rsp+0x60]
   140026fcc:	mov    rax,rdi
   140026fcf:	mov    rbx,QWORD PTR [r11+0x10]
   140026fd3:	mov    rsi,QWORD PTR [r11+0x18]
   140026fd7:	mov    rdi,QWORD PTR [r11+0x20]
   140026fdb:	mov    rsp,r11
   140026fde:	pop    rbp
   140026fdf:	ret    
   140026fe0:	rex push rbx
   140026fe2:	sub    rsp,0x20
   140026fe6:	mov    rbx,rcx
   140026fe9:	mov    rcx,QWORD PTR [rip+0x21c98]        # 0x140048c88
   140026ff0:	cmp    BYTE PTR [rcx],0x5f
   140026ff3:	jne    0x14002702a
   140026ff5:	cmp    BYTE PTR [rcx+0x1],0x5f
   140026ff9:	jne    0x14002702a
   140026ffb:	add    rcx,0x2
   140026fff:	mov    QWORD PTR [rip+0x21c82],rcx        # 0x140048c88
   140027006:	movsx  eax,BYTE PTR [rcx]
   140027009:	inc    rcx
   14002700c:	sub    eax,0x41
   14002700f:	mov    QWORD PTR [rip+0x21c72],rcx        # 0x140048c88
   140027016:	cmp    eax,0x3
   140027019:	jbe    0x14002702a
   14002701b:	mov    edx,0x2
   140027020:	mov    rcx,rbx
   140027023:	call   0x140023eb4
   140027028:	jmp    0x140027039
   14002702a:	and    QWORD PTR [rbx],0x0
   14002702e:	mov    BYTE PTR [rbx+0x8],0x0
   140027032:	and    DWORD PTR [rbx+0x8],0xffff00ff
   140027039:	mov    rax,rbx
   14002703c:	add    rsp,0x20
   140027040:	pop    rbx
   140027041:	ret    
   140027042:	int3   
   140027043:	int3   
   140027044:	rex push rbx
   140027046:	sub    rsp,0x20
   14002704a:	mov    dl,0x1
   14002704c:	mov    rbx,rcx
   14002704f:	call   0x140026e84
   140027054:	mov    rax,rbx
   140027057:	add    rsp,0x20
   14002705b:	pop    rbx
   14002705c:	ret    
   14002705d:	int3   
   14002705e:	int3   
   14002705f:	int3   
   140027060:	mov    QWORD PTR [rsp+0x8],rbx
   140027065:	mov    QWORD PTR [rsp+0x10],rsi
   14002706a:	mov    QWORD PTR [rsp+0x18],rdi
   14002706f:	push   rbp
   140027070:	mov    rbp,rsp
   140027073:	sub    rsp,0x60
   140027077:	mov    eax,DWORD PTR [rip+0x21c27]        # 0x140048ca4
   14002707d:	mov    rdi,rcx
   140027080:	mov    r8d,eax
   140027083:	shr    r8d,0xf
   140027087:	not    r8d
   14002708a:	and    r8d,0x1
   14002708e:	je     0x14002709d
   140027090:	bt     eax,0xc
   140027094:	jb     0x14002709d
   140027096:	mov    esi,0x1
   14002709b:	jmp    0x14002709f
   14002709d:	xor    esi,esi
   14002709f:	mov    rdx,QWORD PTR [rip+0x21be2]        # 0x140048c88
   1400270a6:	and    QWORD PTR [rbp-0x40],0x0
   1400270ab:	and    DWORD PTR [rbp-0x38],0xffff0000
   1400270b2:	movsx  ecx,BYTE PTR [rdx]
   1400270b5:	inc    rdx
   1400270b8:	mov    QWORD PTR [rip+0x21bc9],rdx        # 0x140048c88
   1400270bf:	test   ecx,ecx
   1400270c1:	je     0x14002718b
   1400270c7:	sub    ecx,0x54
   1400270ca:	je     0x140027142
   1400270cc:	dec    ecx
   1400270ce:	je     0x140027139
   1400270d0:	dec    ecx
   1400270d2:	je     0x140027130
   1400270d4:	dec    ecx
   1400270d6:	je     0x1400270f2
   1400270d8:	dec    ecx
   1400270da:	je     0x1400270e9
   1400270dc:	dec    ecx
   1400270de:	jne    0x140027152
   1400270e0:	lea    rdx,[rip+0x17f51]        # 0x14003f038
   1400270e7:	jmp    0x140027149
   1400270e9:	lea    rdx,[rip+0x17f38]        # 0x14003f028
   1400270f0:	jmp    0x140027149
   1400270f2:	lea    rcx,[rbp-0x20]
   1400270f6:	mov    esi,r8d
   1400270f9:	call   0x1400271d8
   1400270fe:	lea    rdx,[rip+0x17f43]        # 0x14003f048
   140027105:	lea    rcx,[rbp-0x10]
   140027109:	mov    rbx,rax
   14002710c:	call   0x140023e6c
   140027111:	lea    rcx,[rbp-0x30]
   140027115:	mov    rdx,rbx
   140027118:	movups xmm0,XMMWORD PTR [rax]
   14002711b:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   140027120:	call   0x1400246e0
   140027125:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140027129:	movdqa XMMWORD PTR [rbp-0x40],xmm0
   14002712e:	jmp    0x140027152
   140027130:	lea    rdx,[rip+0x17ee9]        # 0x14003f020
   140027137:	jmp    0x140027149
   140027139:	lea    rdx,[rip+0x17ed8]        # 0x14003f018
   140027140:	jmp    0x140027149
   140027142:	lea    rdx,[rip+0x17ec7]        # 0x14003f010
   140027149:	lea    rcx,[rbp-0x40]
   14002714d:	call   0x1400242c0
   140027152:	and    QWORD PTR [rbp-0x30],0x0
   140027157:	and    DWORD PTR [rbp-0x28],0xffff0000
   14002715e:	test   esi,esi
   140027160:	je     0x14002716b
   140027162:	movaps xmm0,XMMWORD PTR [rbp-0x40]
   140027166:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   14002716b:	lea    rcx,[rbp-0x40]
   14002716f:	call   0x140028ee4
   140027174:	lea    rdx,[rbp-0x40]
   140027178:	lea    rcx,[rbp-0x30]
   14002717c:	call   0x1400246e0
   140027181:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140027185:	movdqu XMMWORD PTR [rdi],xmm0
   140027189:	jmp    0x1400271a4
   14002718b:	dec    rdx
   14002718e:	mov    rcx,rdi
   140027191:	mov    QWORD PTR [rip+0x21af0],rdx        # 0x140048c88
   140027198:	lea    rdx,[rip+0x17e62]        # 0x14003f001
   14002719f:	call   0x140023e6c
   1400271a4:	lea    r11,[rsp+0x60]
   1400271a9:	mov    rax,rdi
   1400271ac:	mov    rbx,QWORD PTR [r11+0x10]
   1400271b0:	mov    rsi,QWORD PTR [r11+0x18]
   1400271b4:	mov    rdi,QWORD PTR [r11+0x20]
   1400271b8:	mov    rsp,r11
   1400271bb:	pop    rbp
   1400271bc:	ret    
   1400271bd:	int3   
   1400271be:	int3   
   1400271bf:	int3   
   1400271c0:	rex push rbx
   1400271c2:	sub    rsp,0x20
   1400271c6:	mov    rbx,rcx
   1400271c9:	call   0x140028ee4
   1400271ce:	mov    rax,rbx
   1400271d1:	add    rsp,0x20
   1400271d5:	pop    rbx
   1400271d6:	ret    
   1400271d7:	int3   
   1400271d8:	mov    QWORD PTR [rsp+0x8],rbx
   1400271dd:	push   rbp
   1400271de:	mov    rbp,rsp
   1400271e1:	sub    rsp,0x50
   1400271e5:	mov    rax,QWORD PTR [rip+0x21a9c]        # 0x140048c88
   1400271ec:	and    QWORD PTR [rbp-0x30],0x0
   1400271f1:	and    DWORD PTR [rbp-0x28],0xffff0000
   1400271f8:	cmp    BYTE PTR [rax],0x0
   1400271fb:	mov    rbx,rcx
   1400271fe:	je     0x1400272a6
   140027204:	mov    al,BYTE PTR [rax]
   140027206:	cmp    al,0x30
   140027208:	jl     0x14002729f
   14002720e:	cmp    al,0x31
   140027210:	jle    0x14002723f
   140027212:	cmp    al,0x33
   140027214:	jle    0x140027236
   140027216:	cmp    al,0x34
   140027218:	je     0x14002724f
   14002721a:	cmp    al,0x35
   14002721c:	je     0x14002722d
   14002721e:	sub    al,0x36
   140027220:	cmp    al,0x1
   140027222:	ja     0x14002729f
   140027224:	lea    rdx,[rip+0x17cad]        # 0x14003eed8
   14002722b:	jmp    0x140027246
   14002722d:	lea    rdx,[rip+0x17c9c]        # 0x14003eed0
   140027234:	jmp    0x140027246
   140027236:	lea    rdx,[rip+0x17c8b]        # 0x14003eec8
   14002723d:	jmp    0x140027246
   14002723f:	lea    rdx,[rip+0x17c7a]        # 0x14003eec0
   140027246:	lea    rcx,[rbp-0x30]
   14002724a:	call   0x1400242c0
   14002724f:	mov    rax,QWORD PTR [rip+0x21a32]        # 0x140048c88
   140027256:	movsx  eax,BYTE PTR [rax]
   140027259:	inc    QWORD PTR [rip+0x21a28]        # 0x140048c88
   140027260:	add    eax,0xffffffcf
   140027263:	test   eax,0xfffffff9
   140027268:	jne    0x140027295
   14002726a:	lea    rdx,[rip+0x17c6f]        # 0x14003eee0
   140027271:	lea    rcx,[rbp-0x10]
   140027275:	call   0x140023e6c
   14002727a:	lea    rdx,[rbp-0x30]
   14002727e:	lea    rcx,[rbp-0x20]
   140027282:	movups xmm0,XMMWORD PTR [rax]
   140027285:	movdqu XMMWORD PTR [rbp-0x20],xmm0
   14002728a:	call   0x1400246e0
   14002728f:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   140027293:	jmp    0x140027299
   140027295:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140027299:	movdqu XMMWORD PTR [rbx],xmm0
   14002729d:	jmp    0x1400272b0
   14002729f:	mov    edx,0x2
   1400272a4:	jmp    0x1400272ab
   1400272a6:	mov    edx,0x1
   1400272ab:	call   0x140023eb4
   1400272b0:	mov    rax,rbx
   1400272b3:	mov    rbx,QWORD PTR [rsp+0x60]
   1400272b8:	add    rsp,0x50
   1400272bc:	pop    rbp
   1400272bd:	ret    
   1400272be:	int3   
   1400272bf:	int3   
   1400272c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400272c5:	mov    QWORD PTR [rsp+0x10],rsi
   1400272ca:	mov    QWORD PTR [rsp+0x18],r14
   1400272cf:	push   rbp
   1400272d0:	mov    rbp,rsp
   1400272d3:	sub    rsp,0x60
   1400272d7:	mov    r10d,DWORD PTR [rbp-0x28]
   1400272db:	and    QWORD PTR [rbp-0x30],0x0
   1400272e0:	mov    rbx,rcx
   1400272e3:	mov    rcx,QWORD PTR [rip+0x2199e]        # 0x140048c88
   1400272ea:	mov    rsi,r8
   1400272ed:	and    r10d,0xffff0000
   1400272f4:	mov    r14d,0x1
   1400272fa:	mov    r11d,r9d
   1400272fd:	mov    DWORD PTR [rbp-0x28],r10d
   140027301:	add    rcx,r14
   140027304:	mov    QWORD PTR [rip+0x2197d],rcx        # 0x140048c88
   14002730b:	movsx  r9d,BYTE PTR [rcx]
   14002730f:	mov    r8d,r9d
   140027312:	sub    r8d,0x41
   140027316:	je     0x1400274a2
   14002731c:	dec    r8d
   14002731f:	je     0x140027462
   140027325:	dec    r8d
   140027328:	je     0x140027456
   14002732e:	cmp    BYTE PTR [rcx],0x0
   140027331:	je     0x14002744e
   140027337:	mov    al,BYTE PTR [rcx+0x1]
   14002733a:	test   al,al
   14002733c:	je     0x14002744e
   140027342:	test   r11d,r11d
   140027345:	je     0x140027359
   140027347:	mov    edx,0x2
   14002734c:	mov    rcx,rbx
   14002734f:	call   0x140023eb4
   140027354:	jmp    0x1400274f2
   140027359:	shl    r9d,0x4
   14002735d:	add    rcx,0x2
   140027361:	movsx  esi,al
   140027364:	add    esi,0xfffffcd0
   14002736a:	mov    QWORD PTR [rip+0x21917],rcx        # 0x140048c88
   140027371:	add    esi,r9d
   140027374:	cmp    esi,r14d
   140027377:	jbe    0x1400273ca
   140027379:	and    QWORD PTR [rbp-0x30],0x0
   14002737e:	and    r10d,0xffffff00
   140027385:	lea    rdx,[rbp-0x40]
   140027389:	and    r10d,0xffff00ff
   140027390:	lea    rcx,[rbp-0x30]
   140027394:	mov    r8d,r14d
   140027397:	mov    DWORD PTR [rbp-0x28],r10d
   14002739b:	mov    BYTE PTR [rbp-0x40],0x2c
   14002739f:	call   0x140025878
   1400273a4:	lea    rcx,[rbp-0x10]
   1400273a8:	mov    edx,esi
   1400273aa:	call   0x140023fc4
   1400273af:	lea    rcx,[rbp-0x20]
   1400273b3:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   1400273b7:	mov    rdx,rax
   1400273ba:	movdqa XMMWORD PTR [rbp-0x20],xmm0
   1400273bf:	call   0x1400246e0
   1400273c4:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   1400273c8:	jmp    0x1400273ce
   1400273ca:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   1400273ce:	lea    rcx,[rbp-0x20]
   1400273d2:	mov    dl,0x3e
   1400273d4:	movdqa XMMWORD PTR [rbp-0x20],xmm0
   1400273d9:	call   0x140024720
   1400273de:	mov    rax,QWORD PTR [rip+0x218a3]        # 0x140048c88
   1400273e5:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   1400273e9:	cmp    BYTE PTR [rax],0x24
   1400273ec:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   1400273f1:	jne    0x1400273ff
   1400273f3:	add    rax,r14
   1400273f6:	mov    QWORD PTR [rip+0x2188b],rax        # 0x140048c88
   1400273fd:	jmp    0x14002741f
   1400273ff:	lea    rcx,[rbp-0x20]
   140027403:	mov    dl,0x5e
   140027405:	movdqa XMMWORD PTR [rbp-0x20],xmm0
   14002740a:	call   0x140024720
   14002740f:	mov    rax,QWORD PTR [rip+0x21872]        # 0x140048c88
   140027416:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   14002741a:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   14002741f:	cmp    BYTE PTR [rax],0x0
   140027422:	je     0x140027430
   140027424:	add    rax,r14
   140027427:	mov    QWORD PTR [rip+0x2185a],rax        # 0x140048c88
   14002742e:	jmp    0x14002743c
   140027430:	lea    rcx,[rbp-0x30]
   140027434:	mov    edx,r14d
   140027437:	call   0x1400248c8
   14002743c:	bts    DWORD PTR [rbp-0x28],0xe
   140027441:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140027445:	movdqu XMMWORD PTR [rbx],xmm0
   140027449:	jmp    0x1400274f2
   14002744e:	mov    edx,r14d
   140027451:	jmp    0x14002734c
   140027456:	lea    rax,[rip+0x17363]        # 0x14003e7c0
   14002745d:	mov    QWORD PTR [rdx],rax
   140027460:	jmp    0x140027499
   140027462:	test   r11d,r11d
   140027465:	jne    0x140027347
   14002746b:	and    QWORD PTR [rbp-0x30],0x0
   140027470:	and    r10d,0xffffff00
   140027477:	lea    rdx,[rbp-0x40]
   14002747b:	and    r10d,0xffff00ff
   140027482:	lea    rcx,[rbp-0x30]
   140027486:	mov    r8d,r14d
   140027489:	mov    BYTE PTR [rsi],r14b
   14002748c:	mov    BYTE PTR [rbp-0x40],0x3e
   140027490:	mov    DWORD PTR [rbp-0x28],r10d
   140027494:	call   0x140025878
   140027499:	add    QWORD PTR [rip+0x217e8],r14        # 0x140048c88
   1400274a0:	jmp    0x1400274e3
   1400274a2:	test   r11d,r11d
   1400274a5:	jne    0x1400274d9
   1400274a7:	mov    rax,QWORD PTR [rdx]
   1400274aa:	cmp    BYTE PTR [rax],0x26
   1400274ad:	jne    0x1400274c0
   1400274af:	lea    rax,[rip+0x1730a]        # 0x14003e7c0
   1400274b6:	mov    QWORD PTR [rdx],rax
   1400274b9:	mov    rcx,QWORD PTR [rip+0x217c8]        # 0x140048c88
   1400274c0:	mov    rax,QWORD PTR [rdx]
   1400274c3:	cmp    BYTE PTR [rax],0x2a
   1400274c6:	jne    0x1400274d9
   1400274c8:	lea    rax,[rip+0x17311]        # 0x14003e7e0
   1400274cf:	mov    QWORD PTR [rdx],rax
   1400274d2:	mov    rcx,QWORD PTR [rip+0x217af]        # 0x140048c88
   1400274d9:	add    rcx,r14
   1400274dc:	mov    QWORD PTR [rip+0x217a5],rcx        # 0x140048c88
   1400274e3:	and    QWORD PTR [rbx],0x0
   1400274e7:	mov    BYTE PTR [rbx+0x8],0x0
   1400274eb:	and    DWORD PTR [rbx+0x8],0xffff00ff
   1400274f2:	lea    r11,[rsp+0x60]
   1400274f7:	mov    rax,rbx
   1400274fa:	mov    rbx,QWORD PTR [r11+0x10]
   1400274fe:	mov    rsi,QWORD PTR [r11+0x18]
   140027502:	mov    r14,QWORD PTR [r11+0x20]
   140027506:	mov    rsp,r11
   140027509:	pop    rbp
   14002750a:	ret    
   14002750b:	int3   
   14002750c:	mov    QWORD PTR [rsp+0x8],rbx
   140027511:	mov    QWORD PTR [rsp+0x10],rsi
   140027516:	mov    QWORD PTR [rsp+0x18],rdi
   14002751b:	push   rbp
   14002751c:	mov    rbp,rsp
   14002751f:	sub    rsp,0x60
   140027523:	xor    r8d,r8d
   140027526:	mov    rsi,rdx
   140027529:	mov    rdi,rcx
   14002752c:	lea    edx,[r8+0x10]
   140027530:	lea    rcx,[rip+0x21779]        # 0x140048cb0
   140027537:	call   0x140027be8
   14002753c:	mov    rbx,rax
   14002753f:	test   rax,rax
   140027542:	je     0x140027555
   140027544:	and    QWORD PTR [rax],0x0
   140027548:	mov    BYTE PTR [rax+0x8],0x0
   14002754c:	and    DWORD PTR [rax+0x8],0xffff00ff
   140027553:	jmp    0x140027557
   140027555:	xor    ebx,ebx
   140027557:	mov    rdx,rbx
   14002755a:	mov    rcx,rdi
   14002755d:	call   0x140026b2c
   140027562:	and    QWORD PTR [rbp-0x30],0x0
   140027567:	and    QWORD PTR [rbp-0x20],0x0
   14002756c:	and    DWORD PTR [rsp+0x20],0x0
   140027571:	mov    eax,0xffff0000
   140027576:	lea    r9,[rbp-0x30]
   14002757a:	and    DWORD PTR [rbp-0x28],eax
   14002757d:	and    DWORD PTR [rbp-0x18],eax
   140027580:	lea    r8,[rip+0xe56a]        # 0x140035af1
   140027587:	lea    rdx,[rbp-0x20]
   14002758b:	lea    rcx,[rbp-0x10]
   14002758f:	call   0x1400263f0
   140027594:	lea    rcx,[rbp-0x20]
   140027598:	mov    dl,0x20
   14002759a:	movaps xmm0,XMMWORD PTR [rbp-0x10]
   14002759e:	movdqa XMMWORD PTR [rbp-0x20],xmm0
   1400275a3:	call   0x140024720
   1400275a8:	lea    rcx,[rbp-0x20]
   1400275ac:	mov    rdx,rsi
   1400275af:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   1400275b3:	movdqa XMMWORD PTR [rbp-0x20],xmm0
   1400275b8:	call   0x1400246e0
   1400275bd:	lea    r11,[rsp+0x60]
   1400275c2:	mov    rax,rdi
   1400275c5:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   1400275c9:	movdqu XMMWORD PTR [rbx],xmm0
   1400275cd:	mov    rbx,QWORD PTR [r11+0x10]
   1400275d1:	mov    rsi,QWORD PTR [r11+0x18]
   1400275d5:	mov    rdi,QWORD PTR [r11+0x20]
   1400275d9:	mov    rsp,r11
   1400275dc:	pop    rbp
   1400275dd:	ret    
   1400275de:	int3   
   1400275df:	int3   
   1400275e0:	mov    rax,rsp
   1400275e3:	mov    QWORD PTR [rax+0x8],rbx
   1400275e7:	mov    QWORD PTR [rax+0x10],rsi
   1400275eb:	mov    QWORD PTR [rax+0x18],rdi
   1400275ef:	push   rbp
   1400275f0:	push   r12
   1400275f2:	push   r13
   1400275f4:	push   r14
   1400275f6:	push   r15
   1400275f8:	lea    rbp,[rax-0x5f]
   1400275fc:	sub    rsp,0x90
   140027603:	mov    rdi,rcx
   140027606:	mov    rcx,QWORD PTR [rip+0x2167b]        # 0x140048c88
   14002760d:	xor    ebx,ebx
   14002760f:	mov    r12,rdx
   140027612:	cmp    BYTE PTR [rcx],bl
   140027614:	jne    0x140027639
   140027616:	lea    edx,[rbx+0x1]
   140027619:	lea    rcx,[rbp+0x17]
   14002761d:	call   0x140023eb4
   140027622:	mov    rdx,r12
   140027625:	movups xmm0,XMMWORD PTR [rax]
   140027628:	mov    rcx,rdi
   14002762b:	movdqu XMMWORD PTR [rdi],xmm0
   14002762f:	call   0x1400246e0
   140027634:	jmp    0x140027ac2
   140027639:	mov    al,BYTE PTR [rcx]
   14002763b:	sub    al,0x36
   14002763d:	cmp    al,0x3
   14002763f:	jbe    0x140027650
   140027641:	cmp    BYTE PTR [rcx],0x5f
   140027644:	je     0x140027650
   140027646:	mov    edx,0x2
   14002764b:	jmp    0x140027aba
   140027650:	movsx  r14d,BYTE PTR [rcx]
   140027654:	mov    esi,0x1
   140027659:	or     edx,0xffffffff
   14002765c:	add    rcx,rsi
   14002765f:	sub    r14d,0x36
   140027663:	mov    QWORD PTR [rip+0x2161e],rcx        # 0x140048c88
   14002766a:	cmp    r14d,0x29
   14002766e:	jne    0x140027698
   140027670:	cmp    BYTE PTR [rcx],bl
   140027672:	je     0x140027694
   140027674:	movsx  r14d,BYTE PTR [rcx]
   140027678:	add    rcx,rsi
   14002767b:	sub    r14d,0x3d
   14002767f:	mov    QWORD PTR [rip+0x21602],rcx        # 0x140048c88
   140027686:	lea    eax,[r14-0x4]
   14002768a:	cmp    eax,0x3
   14002768d:	jbe    0x1400276a0
   14002768f:	mov    r14d,edx
   140027692:	jmp    0x1400276a0
   140027694:	mov    edx,esi
   140027696:	jmp    0x140027619
   140027698:	cmp    r14d,0x3
   14002769c:	cmova  r14d,edx
   1400276a0:	cmp    r14d,edx
   1400276a3:	je     0x140027646
   1400276a5:	mov    r15d,DWORD PTR [rbp-0x11]
   1400276a9:	movups xmm0,XMMWORD PTR [r12]
   1400276ae:	mov    r13d,r14d
   1400276b1:	and    r15d,0xffff0000
   1400276b8:	mov    QWORD PTR [rbp-0x19],rbx
   1400276bc:	mov    DWORD PTR [rbp-0x11],r15d
   1400276c0:	movdqu XMMWORD PTR [rbp-0x29],xmm0
   1400276c5:	and    r13d,0x2
   1400276c9:	je     0x1400277dd
   1400276cf:	lea    rdx,[rip+0x1761e]        # 0x14003ecf4
   1400276d6:	lea    rcx,[rbp+0x17]
   1400276da:	call   0x140023e6c
   1400276df:	lea    rdx,[rbp-0x29]
   1400276e3:	lea    rcx,[rbp+0x7]
   1400276e7:	movups xmm0,XMMWORD PTR [rax]
   1400276ea:	movdqu XMMWORD PTR [rbp+0x7],xmm0
   1400276ef:	call   0x1400246e0
   1400276f4:	mov    rax,QWORD PTR [rip+0x2158d]        # 0x140048c88
   1400276fb:	movaps xmm0,XMMWORD PTR [rbp+0x7]
   1400276ff:	lea    rcx,[rbp+0x17]
   140027703:	movdqa XMMWORD PTR [rbp-0x29],xmm0
   140027708:	cmp    BYTE PTR [rax],bl
   14002770a:	je     0x14002774d
   14002770c:	call   0x1400289f0
   140027711:	lea    rcx,[rbp-0x9]
   140027715:	mov    dl,0x20
   140027717:	mov    rbx,rax
   14002771a:	call   0x140023dac
   14002771f:	lea    rcx,[rbp+0x7]
   140027723:	mov    rdx,rbx
   140027726:	movups xmm0,XMMWORD PTR [rax]
   140027729:	movdqu XMMWORD PTR [rbp+0x7],xmm0
   14002772e:	call   0x1400246e0
   140027733:	movaps xmm0,XMMWORD PTR [rbp+0x7]
   140027737:	lea    rdx,[rbp-0x29]
   14002773b:	lea    rcx,[rbp+0x7]
   14002773f:	movdqa XMMWORD PTR [rbp+0x7],xmm0
   140027744:	call   0x1400246e0
   140027749:	xor    ebx,ebx
   14002774b:	jmp    0x140027769
   14002774d:	mov    edx,esi
   14002774f:	call   0x140023eb4
   140027754:	lea    rdx,[rbp-0x29]
   140027758:	lea    rcx,[rbp+0x7]
   14002775c:	movups xmm0,XMMWORD PTR [rax]
   14002775f:	movdqu XMMWORD PTR [rbp+0x7],xmm0
   140027764:	call   0x1400246e0
   140027769:	mov    rax,QWORD PTR [rip+0x21518]        # 0x140048c88
   140027770:	movaps xmm0,XMMWORD PTR [rbp+0x7]
   140027774:	movdqa XMMWORD PTR [rbp-0x29],xmm0
   140027779:	cmp    BYTE PTR [rax],bl
   14002777b:	je     0x140027886
   140027781:	cmp    BYTE PTR [rax],0x40
   140027784:	jne    0x140027646
   14002778a:	add    rax,rsi
   14002778d:	mov    QWORD PTR [rbp-0x9],rbx
   140027791:	mov    QWORD PTR [rbp+0x7],rbx
   140027795:	mov    QWORD PTR [rip+0x214ec],rax        # 0x140048c88
   14002779c:	mov    eax,DWORD PTR [rip+0x21502]        # 0x140048ca4
   1400277a2:	mov    DWORD PTR [rsp+0x20],esi
   1400277a6:	and    eax,0x60
   1400277a9:	lea    r8,[rip+0xe341]        # 0x140035af1
   1400277b0:	lea    rcx,[rbp+0x17]
   1400277b4:	cmp    al,0x60
   1400277b6:	mov    eax,0xffff0000
   1400277bb:	je     0x140027848
   1400277c1:	and    DWORD PTR [rbp-0x1],eax
   1400277c4:	and    DWORD PTR [rbp+0xf],eax
   1400277c7:	lea    r9,[rbp-0x9]
   1400277cb:	lea    rdx,[rbp+0x7]
   1400277cf:	call   0x1400263f0
   1400277d4:	movaps xmm0,XMMWORD PTR [rbp+0x17]
   1400277d8:	movdqa XMMWORD PTR [rbp-0x19],xmm0
   1400277dd:	test   r14b,0x4
   1400277e1:	je     0x1400278c1
   1400277e7:	mov    eax,DWORD PTR [rip+0x214b7]        # 0x140048ca4
   1400277ed:	shr    eax,1
   1400277ef:	not    eax
   1400277f1:	test   sil,al
   1400277f4:	je     0x14002789a
   1400277fa:	lea    rcx,[rbp+0x7]
   1400277fe:	call   0x140025e04
   140027803:	lea    rcx,[rbp-0x9]
   140027807:	mov    dl,0x20
   140027809:	mov    rbx,rax
   14002780c:	call   0x140023dac
   140027811:	lea    rcx,[rbp+0x17]
   140027815:	mov    rdx,rbx
   140027818:	movups xmm0,XMMWORD PTR [rax]
   14002781b:	movdqu XMMWORD PTR [rbp+0x17],xmm0
   140027820:	call   0x1400246e0
   140027825:	movaps xmm0,XMMWORD PTR [rbp+0x17]
   140027829:	lea    rdx,[rbp-0x29]
   14002782d:	lea    rcx,[rbp+0x17]
   140027831:	movdqa XMMWORD PTR [rbp+0x17],xmm0
   140027836:	call   0x1400246e0
   14002783b:	xor    ebx,ebx
   14002783d:	movaps xmm0,XMMWORD PTR [rbp+0x17]
   140027841:	movdqa XMMWORD PTR [rbp-0x29],xmm0
   140027846:	jmp    0x1400278c1
   140027848:	and    DWORD PTR [rbp+0xf],eax
   14002784b:	and    DWORD PTR [rbp-0x1],eax
   14002784e:	lea    r9,[rbp+0x7]
   140027852:	lea    rdx,[rbp-0x9]
   140027856:	call   0x1400263f0
   14002785b:	cmp    BYTE PTR [rbp-0x11],0x3
   14002785f:	je     0x1400277dd
   140027865:	cmp    BYTE PTR [rbp+0x1f],sil
   140027869:	jle    0x1400277dd
   14002786f:	movzx  eax,BYTE PTR [rbp+0x1f]
   140027873:	and    r15d,0xffffff00
   14002787a:	or     r15d,eax
   14002787d:	mov    DWORD PTR [rbp-0x11],r15d
   140027881:	jmp    0x1400277dd
   140027886:	lea    rcx,[rbp+0x17]
   14002788a:	mov    edx,esi
   14002788c:	call   0x140023eb4
   140027891:	lea    rdx,[rbp-0x29]
   140027895:	jmp    0x140027625
   14002789a:	lea    rcx,[rbp+0x17]
   14002789e:	call   0x140025e04
   1400278a3:	cmp    BYTE PTR [rbp-0x21],0x3
   1400278a7:	je     0x1400278c1
   1400278a9:	cmp    BYTE PTR [rax+0x8],sil
   1400278ad:	jle    0x1400278c1
   1400278af:	mov    ecx,DWORD PTR [rbp-0x21]
   1400278b2:	movzx  eax,BYTE PTR [rax+0x8]
   1400278b6:	and    ecx,0xffffff00
   1400278bc:	or     ecx,eax
   1400278be:	mov    DWORD PTR [rbp-0x21],ecx
   1400278c1:	mov    eax,DWORD PTR [rip+0x213dd]        # 0x140048ca4
   1400278c7:	shr    eax,1
   1400278c9:	not    eax
   1400278cb:	test   sil,al
   1400278ce:	je     0x1400278f9
   1400278d0:	lea    rcx,[rbp+0x7]
   1400278d4:	call   0x1400262f0
   1400278d9:	lea    rdx,[rbp-0x29]
   1400278dd:	lea    rcx,[rbp+0x17]
   1400278e1:	movups xmm0,XMMWORD PTR [rax]
   1400278e4:	movdqu XMMWORD PTR [rbp+0x17],xmm0
   1400278e9:	call   0x1400246e0
   1400278ee:	movaps xmm0,XMMWORD PTR [rbp+0x17]
   1400278f2:	movdqa XMMWORD PTR [rbp-0x29],xmm0
   1400278f7:	jmp    0x140027920
   1400278f9:	lea    rcx,[rbp+0x17]
   1400278fd:	call   0x1400262f0
   140027902:	cmp    BYTE PTR [rbp-0x21],0x3
   140027906:	je     0x140027920
   140027908:	cmp    BYTE PTR [rax+0x8],sil
   14002790c:	jle    0x140027920
   14002790e:	mov    ecx,DWORD PTR [rbp-0x21]
   140027911:	movzx  eax,BYTE PTR [rax+0x8]
   140027915:	and    ecx,0xffffff00
   14002791b:	or     ecx,eax
   14002791d:	mov    DWORD PTR [rbp-0x21],ecx
   140027920:	cmp    QWORD PTR [r12],rbx
   140027924:	je     0x140027963
   140027926:	lea    rcx,[rbp+0x7]
   14002792a:	mov    dl,0x28
   14002792c:	call   0x140023dac
   140027931:	lea    rdx,[rbp-0x29]
   140027935:	lea    rcx,[rbp+0x17]
   140027939:	movups xmm0,XMMWORD PTR [rax]
   14002793c:	movdqu XMMWORD PTR [rbp+0x17],xmm0
   140027941:	call   0x1400246e0
   140027946:	movaps xmm0,XMMWORD PTR [rbp+0x17]
   14002794a:	lea    rcx,[rbp+0x17]
   14002794e:	mov    dl,0x29
   140027950:	movdqa XMMWORD PTR [rbp+0x17],xmm0
   140027955:	call   0x140024720
   14002795a:	movaps xmm0,XMMWORD PTR [rbp+0x17]
   14002795e:	movdqa XMMWORD PTR [rbp-0x29],xmm0
   140027963:	xor    r8d,r8d
   140027966:	lea    rcx,[rip+0x21343]        # 0x140048cb0
   14002796d:	lea    edx,[r8+0x10]
   140027971:	call   0x140027be8
   140027976:	mov    r14,rax
   140027979:	test   rax,rax
   14002797c:	je     0x14002798d
   14002797e:	mov    BYTE PTR [rax+0x8],bl
   140027981:	and    DWORD PTR [rax+0x8],0xffff00ff
   140027988:	mov    QWORD PTR [rax],rbx
   14002798b:	jmp    0x140027990
   14002798d:	mov    r14,rbx
   140027990:	lea    rcx,[rbp+0x27]
   140027994:	mov    rdx,r14
   140027997:	call   0x1400289bc
   14002799c:	lea    rcx,[rbp+0x7]
   1400279a0:	call   0x140025ac4
   1400279a5:	lea    rcx,[rbp-0x9]
   1400279a9:	mov    dl,0x28
   1400279ab:	mov    rbx,rax
   1400279ae:	call   0x140023dac
   1400279b3:	lea    rcx,[rbp+0x17]
   1400279b7:	mov    rdx,rbx
   1400279ba:	movups xmm0,XMMWORD PTR [rax]
   1400279bd:	movdqu XMMWORD PTR [rbp+0x17],xmm0
   1400279c2:	call   0x1400246e0
   1400279c7:	movaps xmm0,XMMWORD PTR [rbp+0x17]
   1400279cb:	lea    rcx,[rbp+0x17]
   1400279cf:	mov    dl,0x29
   1400279d1:	movdqa XMMWORD PTR [rbp+0x17],xmm0
   1400279d6:	call   0x140024720
   1400279db:	lea    rdx,[rbp+0x17]
   1400279df:	lea    rcx,[rbp-0x29]
   1400279e3:	call   0x1400246e0
   1400279e8:	mov    ecx,DWORD PTR [rip+0x212b6]        # 0x140048ca4
   1400279ee:	mov    eax,ecx
   1400279f0:	and    eax,0x60
   1400279f3:	cmp    al,0x60
   1400279f5:	je     0x140027a0f
   1400279f7:	test   r13d,r13d
   1400279fa:	je     0x140027a0f
   1400279fc:	lea    rdx,[rbp-0x19]
   140027a00:	lea    rcx,[rbp-0x29]
   140027a04:	call   0x1400246e0
   140027a09:	mov    ecx,DWORD PTR [rip+0x21295]        # 0x140048ca4
   140027a0f:	shr    ecx,0x13
   140027a12:	not    ecx
   140027a14:	test   sil,cl
   140027a17:	lea    rcx,[rbp+0x17]
   140027a1b:	je     0x140027a30
   140027a1d:	call   0x140028894
   140027a22:	lea    rcx,[rbp-0x29]
   140027a26:	mov    rdx,rax
   140027a29:	call   0x1400246e0
   140027a2e:	jmp    0x140027a53
   140027a30:	call   0x140028894
   140027a35:	cmp    BYTE PTR [rbp-0x21],0x3
   140027a39:	je     0x140027a53
   140027a3b:	cmp    BYTE PTR [rax+0x8],sil
   140027a3f:	jle    0x140027a53
   140027a41:	mov    ecx,DWORD PTR [rbp-0x21]
   140027a44:	movzx  eax,BYTE PTR [rax+0x8]
   140027a48:	and    ecx,0xffffff00
   140027a4e:	or     ecx,eax
   140027a50:	mov    DWORD PTR [rbp-0x21],ecx
   140027a53:	mov    eax,DWORD PTR [rip+0x2124b]        # 0x140048ca4
   140027a59:	lea    rcx,[rbp+0x17]
   140027a5d:	shr    eax,0x8
   140027a60:	not    eax
   140027a62:	test   sil,al
   140027a65:	je     0x140027a7a
   140027a67:	call   0x140029c08
   140027a6c:	lea    rcx,[rbp-0x29]
   140027a70:	mov    rdx,rax
   140027a73:	call   0x1400246e0
   140027a78:	jmp    0x140027a9d
   140027a7a:	call   0x140029c08
   140027a7f:	cmp    BYTE PTR [rbp-0x21],0x3
   140027a83:	je     0x140027a9d
   140027a85:	cmp    BYTE PTR [rax+0x8],sil
   140027a89:	jle    0x140027a9d
   140027a8b:	mov    ecx,DWORD PTR [rbp-0x21]
   140027a8e:	movzx  eax,BYTE PTR [rax+0x8]
   140027a92:	and    ecx,0xffffff00
   140027a98:	or     ecx,eax
   140027a9a:	mov    DWORD PTR [rbp-0x21],ecx
   140027a9d:	test   r14,r14
   140027aa0:	je     0x140027ab5
   140027aa2:	movaps xmm0,XMMWORD PTR [rbp-0x29]
   140027aa6:	movdqu XMMWORD PTR [r14],xmm0
   140027aab:	movups xmm1,XMMWORD PTR [rbp+0x27]
   140027aaf:	movdqu XMMWORD PTR [rdi],xmm1
   140027ab3:	jmp    0x140027ac2
   140027ab5:	mov    edx,0x3
   140027aba:	mov    rcx,rdi
   140027abd:	call   0x140023eb4
   140027ac2:	lea    r11,[rsp+0x90]
   140027aca:	mov    rax,rdi
   140027acd:	mov    rbx,QWORD PTR [r11+0x30]
   140027ad1:	mov    rsi,QWORD PTR [r11+0x38]
   140027ad5:	mov    rdi,QWORD PTR [r11+0x40]
   140027ad9:	mov    rsp,r11
   140027adc:	pop    r15
   140027ade:	pop    r14
   140027ae0:	pop    r13
   140027ae2:	pop    r12
   140027ae4:	pop    rbp
   140027ae5:	ret    
   140027ae6:	int3   
   140027ae7:	int3   
   140027ae8:	rex push rbx
   140027aea:	sub    rsp,0x20
   140027aee:	xor    edx,edx
   140027af0:	mov    rbx,rcx
   140027af3:	call   0x140026e84
   140027af8:	mov    rax,rbx
   140027afb:	add    rsp,0x20
   140027aff:	pop    rbx
   140027b00:	ret    
   140027b01:	int3   
   140027b02:	int3   
   140027b03:	int3   
   140027b04:	mov    rcx,QWORD PTR [rcx]
   140027b07:	test   rcx,rcx
   140027b0a:	jne    0x140027b0f
   140027b0c:	xor    al,al
   140027b0e:	ret    
   140027b0f:	mov    rax,QWORD PTR [rcx]
   140027b12:	rex.W jmp QWORD PTR [rax+0x8]
   140027b16:	int3   
   140027b17:	int3   
   140027b18:	cmp    DWORD PTR [rcx+0x8],0x1
   140027b1c:	setne  al
   140027b1f:	dec    al
   140027b21:	and    al,0x20
   140027b23:	ret    
   140027b24:	mov    al,BYTE PTR [rcx+0x8]
   140027b27:	ret    
   140027b28:	sub    rsp,0x28
   140027b2c:	mov    rcx,QWORD PTR [rcx+0x8]
   140027b30:	xor    eax,eax
   140027b32:	test   rcx,rcx
   140027b35:	je     0x140027b45
   140027b37:	mov    rcx,QWORD PTR [rcx]
   140027b3a:	test   rcx,rcx
   140027b3d:	je     0x140027b45
   140027b3f:	mov    rax,QWORD PTR [rcx]
   140027b42:	call   QWORD PTR [rax+0x8]
   140027b45:	add    rsp,0x28
   140027b49:	ret    
   140027b4a:	int3   
   140027b4b:	int3   
   140027b4c:	rex push rbx
   140027b4e:	sub    rsp,0x20
   140027b52:	mov    rbx,rcx
   140027b55:	mov    rcx,QWORD PTR [rcx+0x10]
   140027b59:	mov    rax,QWORD PTR [rcx]
   140027b5c:	call   QWORD PTR [rax+0x8]
   140027b5f:	test   al,al
   140027b61:	jne    0x140027b6d
   140027b63:	mov    rcx,QWORD PTR [rbx+0x8]
   140027b67:	mov    rax,QWORD PTR [rcx]
   140027b6a:	call   QWORD PTR [rax+0x8]
   140027b6d:	add    rsp,0x20
   140027b71:	pop    rbx
   140027b72:	ret    
   140027b73:	int3   
   140027b74:	xor    eax,eax
   140027b76:	cmp    DWORD PTR [rcx+0x10],eax
   140027b79:	je     0x140027b87
   140027b7b:	movsxd rdx,DWORD PTR [rcx+0x10]
   140027b7f:	mov    rax,QWORD PTR [rcx+0x8]
   140027b83:	mov    al,BYTE PTR [rax+rdx*1-0x1]
   140027b87:	ret    
   140027b88:	mov    QWORD PTR [rsp+0x8],rbx
   140027b8d:	push   rdi
   140027b8e:	sub    rsp,0x50
   140027b92:	mov    rdi,rcx
   140027b95:	lea    rcx,[rsp+0x30]
   140027b9a:	xor    edx,edx
   140027b9c:	call   0x140026e84
   140027ba1:	lea    rcx,[rsp+0x40]
   140027ba6:	mov    dl,0x60
   140027ba8:	mov    rbx,rax
   140027bab:	call   0x140023dac
   140027bb0:	lea    rcx,[rsp+0x20]
   140027bb5:	mov    rdx,rbx
   140027bb8:	movups xmm0,XMMWORD PTR [rax]
   140027bbb:	movdqu XMMWORD PTR [rsp+0x20],xmm0
   140027bc1:	call   0x1400246e0
   140027bc6:	movups xmm0,XMMWORD PTR [rsp+0x20]
   140027bcb:	mov    dl,0x27
   140027bcd:	mov    rcx,rdi
   140027bd0:	movdqu XMMWORD PTR [rdi],xmm0
   140027bd4:	call   0x140024720
   140027bd9:	mov    rbx,QWORD PTR [rsp+0x60]
   140027bde:	mov    rax,rdi
   140027be1:	add    rsp,0x50
   140027be5:	pop    rdi
   140027be6:	ret    
   140027be7:	int3   
   140027be8:	mov    QWORD PTR [rsp+0x8],rbx
   140027bed:	mov    QWORD PTR [rsp+0x10],rsi
   140027bf2:	push   rdi
   140027bf3:	sub    rsp,0x20
   140027bf7:	lea    rdi,[rdx+0x7]
   140027bfb:	mov    rbx,rcx
   140027bfe:	and    rdi,0xfffffffffffffff8
   140027c02:	test   r8d,r8d
   140027c05:	je     0x140027c0e
   140027c07:	mov    rcx,rdi
   140027c0a:	call   QWORD PTR [rbx]
   140027c0c:	jmp    0x140027c88
   140027c0e:	mov    eax,0x8
   140027c13:	test   rdi,rdi
   140027c16:	cmove  rdi,rax
   140027c1a:	mov    rax,QWORD PTR [rcx+0x20]
   140027c1e:	cmp    rax,rdi
   140027c21:	jae    0x140027c75
   140027c23:	mov    esi,0x1000
   140027c28:	cmp    rdi,rsi
   140027c2b:	jbe    0x140027c31
   140027c2d:	xor    eax,eax
   140027c2f:	jmp    0x140027c88
   140027c31:	lea    rcx,[rip+0x21078]        # 0x140048cb0
   140027c38:	mov    edx,0x1008
   140027c3d:	mov    r8d,0x1
   140027c43:	call   0x140027be8
   140027c48:	test   rax,rax
   140027c4b:	je     0x140027c51
   140027c4d:	and    QWORD PTR [rax],0x0
   140027c51:	test   rax,rax
   140027c54:	je     0x140027c2d
   140027c56:	mov    rcx,QWORD PTR [rbx+0x18]
   140027c5a:	test   rcx,rcx
   140027c5d:	je     0x140027c64
   140027c5f:	mov    QWORD PTR [rcx],rax
   140027c62:	jmp    0x140027c68
   140027c64:	mov    QWORD PTR [rbx+0x10],rax
   140027c68:	sub    rsi,rdi
   140027c6b:	mov    QWORD PTR [rbx+0x18],rax
   140027c6f:	mov    QWORD PTR [rbx+0x20],rsi
   140027c73:	jmp    0x140027c7c
   140027c75:	sub    rax,rdi
   140027c78:	mov    QWORD PTR [rcx+0x20],rax
   140027c7c:	mov    rax,QWORD PTR [rbx+0x20]
   140027c80:	add    rax,0x8
   140027c84:	add    rax,QWORD PTR [rbx+0x18]
   140027c88:	mov    rbx,QWORD PTR [rsp+0x30]
   140027c8d:	mov    rsi,QWORD PTR [rsp+0x38]
   140027c92:	add    rsp,0x20
   140027c96:	pop    rdi
   140027c97:	ret    
   140027c98:	mov    rcx,QWORD PTR [rip+0x20fe9]        # 0x140048c88
   140027c9f:	mov    dl,BYTE PTR [rcx]
   140027ca1:	test   dl,dl
   140027ca3:	jne    0x140027ca8
   140027ca5:	xor    eax,eax
   140027ca7:	ret    
   140027ca8:	lea    eax,[rdx-0x30]
   140027cab:	cmp    al,0x9
   140027cad:	ja     0x140027cc0
   140027caf:	movsx  eax,dl
   140027cb2:	sub    eax,0x2f
   140027cb5:	inc    rcx
   140027cb8:	mov    QWORD PTR [rip+0x20fc9],rcx        # 0x140048c88
   140027cbf:	ret    
   140027cc0:	xor    r8d,r8d
   140027cc3:	mov    r9b,0x40
   140027cc6:	jmp    0x140027ced
   140027cc8:	test   dl,dl
   140027cca:	je     0x140027ca5
   140027ccc:	lea    eax,[rdx-0x41]
   140027ccf:	cmp    al,0xf
   140027cd1:	ja     0x140027d07
   140027cd3:	shl    r8d,0x4
   140027cd7:	movsx  eax,dl
   140027cda:	add    r8d,0xffffffbf
   140027cde:	add    r8d,eax
   140027ce1:	inc    rcx
   140027ce4:	mov    QWORD PTR [rip+0x20f9d],rcx        # 0x140048c88
   140027ceb:	mov    dl,BYTE PTR [rcx]
   140027ced:	cmp    dl,r9b
   140027cf0:	jne    0x140027cc8
   140027cf2:	mov    al,BYTE PTR [rcx]
   140027cf4:	inc    rcx
   140027cf7:	mov    QWORD PTR [rip+0x20f8a],rcx        # 0x140048c88
   140027cfe:	cmp    al,r9b
   140027d01:	jne    0x140027d07
   140027d03:	mov    eax,r8d
   140027d06:	ret    
   140027d07:	or     eax,0xffffffff
   140027d0a:	ret    
   140027d0b:	int3   
   140027d0c:	mov    rax,rsp
   140027d0f:	mov    QWORD PTR [rax+0x8],rbx
   140027d13:	mov    QWORD PTR [rax+0x10],rsi
   140027d17:	mov    QWORD PTR [rax+0x20],rdi
   140027d1b:	mov    QWORD PTR [rax+0x18],r8
   140027d1f:	push   rbp
   140027d20:	lea    rbp,[rax-0x5f]
   140027d24:	sub    rsp,0xf0
   140027d2b:	mov    rbx,QWORD PTR [rip+0x20f56]        # 0x140048c88
   140027d32:	and    QWORD PTR [rbp-0x69],0x0
   140027d37:	and    QWORD PTR [rbp-0x79],0x0
   140027d3c:	movsx  eax,BYTE PTR [rbx]
   140027d3f:	xor    esi,esi
   140027d41:	mov    rdi,rcx
   140027d44:	mov    ecx,0xffff0000
   140027d49:	lea    r8d,[rsi+0x1]
   140027d4d:	and    DWORD PTR [rbp-0x61],ecx
   140027d50:	and    DWORD PTR [rbp-0x71],ecx
   140027d53:	add    rbx,r8
   140027d56:	mov    QWORD PTR [rip+0x20f2b],rbx        # 0x140048c88
   140027d5d:	cmp    eax,0x41
   140027d60:	jg     0x140027f1e
   140027d66:	je     0x1400283ad
   140027d6c:	test   eax,eax
   140027d6e:	je     0x140027f07
   140027d74:	cmp    eax,0x2f
   140027d77:	jle    0x14002802d
   140027d7d:	cmp    eax,0x31
   140027d80:	jle    0x140027de1
   140027d82:	cmp    eax,0x39
   140027d85:	jg     0x14002802d
   140027d8b:	movsx  rdx,BYTE PTR [rbx-0x1]
   140027d90:	lea    rbx,[rip+0xfffffffffffd8269]        # 0x140000000
   140027d97:	mov    rdx,QWORD PTR [rbx+rdx*8+0x3e270]
   140027d9f:	lea    rcx,[rbp-0x69]
   140027da3:	call   0x1400242c0
   140027da8:	cmp    QWORD PTR [rbp-0x69],0x0
   140027dad:	je     0x140027ee3
   140027db3:	lea    rdx,[rip+0x169d6]        # 0x14003e790
   140027dba:	lea    rcx,[rbp-0x39]
   140027dbe:	call   0x140023e6c
   140027dc3:	lea    rdx,[rbp-0x69]
   140027dc7:	lea    rcx,[rbp-0x59]
   140027dcb:	movups xmm0,XMMWORD PTR [rax]
   140027dce:	movdqu XMMWORD PTR [rbp-0x59],xmm0
   140027dd3:	call   0x1400246e0
   140027dd8:	movaps xmm0,XMMWORD PTR [rbp-0x59]
   140027ddc:	jmp    0x140027ee7
   140027de1:	and    DWORD PTR [rbp-0x71],ecx
   140027de4:	mov    QWORD PTR [rbp-0x79],rsi
   140027de8:	test   dl,dl
   140027dea:	je     0x140027e7d
   140027df0:	lea    rcx,[rbp-0x9]
   140027df4:	call   0x140029388
   140027df9:	lea    rcx,[rbp-0x49]
   140027dfd:	mov    dl,0x3c
   140027dff:	mov    rbx,rax
   140027e02:	call   0x140023dac
   140027e07:	lea    rcx,[rbp-0x59]
   140027e0b:	mov    rdx,rbx
   140027e0e:	movups xmm0,XMMWORD PTR [rax]
   140027e11:	movdqu XMMWORD PTR [rbp-0x59],xmm0
   140027e16:	call   0x1400246e0
   140027e1b:	lea    rdx,[rbp-0x59]
   140027e1f:	lea    rcx,[rbp-0x79]
   140027e23:	call   0x1400246e0
   140027e28:	mov    rcx,QWORD PTR [rbp-0x79]
   140027e2c:	test   rcx,rcx
   140027e2f:	je     0x140027e46
   140027e31:	mov    rax,QWORD PTR [rcx]
   140027e34:	call   QWORD PTR [rax+0x8]
   140027e37:	cmp    al,0x3e
   140027e39:	jne    0x140027e46
   140027e3b:	lea    rcx,[rbp-0x79]
   140027e3f:	mov    dl,0x20
   140027e41:	call   0x140024720
   140027e46:	lea    rcx,[rbp-0x79]
   140027e4a:	mov    dl,0x3e
   140027e4c:	call   0x140024720
   140027e51:	mov    rax,QWORD PTR [rbp+0x77]
   140027e55:	test   rax,rax
   140027e58:	je     0x140027e5d
   140027e5a:	mov    BYTE PTR [rax],0x1
   140027e5d:	mov    rbx,QWORD PTR [rip+0x20e24]        # 0x140048c88
   140027e64:	cmp    BYTE PTR [rbx],sil
   140027e67:	jne    0x140027e6f
   140027e69:	movups xmm0,XMMWORD PTR [rbp-0x79]
   140027e6d:	jmp    0x140027ee7
   140027e6f:	mov    rsi,QWORD PTR [rbp-0x79]
   140027e73:	inc    rbx
   140027e76:	mov    QWORD PTR [rip+0x20e0b],rbx        # 0x140048c88
   140027e7d:	lea    rcx,[rbp+0x47]
   140027e81:	xor    r8d,r8d
   140027e84:	xor    edx,edx
   140027e86:	call   0x14002a43c
   140027e8b:	movups xmm0,XMMWORD PTR [rax]
   140027e8e:	mov    QWORD PTR [rip+0x20df3],rbx        # 0x140048c88
   140027e95:	movq   rax,xmm0
   140027e9a:	movaps XMMWORD PTR [rbp-0x69],xmm0
   140027e9e:	test   rax,rax
   140027ea1:	je     0x140027ed1
   140027ea3:	cmp    BYTE PTR [rbx-0x1],0x31
   140027ea7:	jne    0x140027ed1
   140027ea9:	lea    rcx,[rbp-0x49]
   140027ead:	mov    dl,0x7e
   140027eaf:	call   0x140023dac
   140027eb4:	lea    rdx,[rbp-0x69]
   140027eb8:	lea    rcx,[rbp-0x59]
   140027ebc:	movups xmm0,XMMWORD PTR [rax]
   140027ebf:	movdqu XMMWORD PTR [rbp-0x59],xmm0
   140027ec4:	call   0x1400246e0
   140027ec9:	movaps xmm0,XMMWORD PTR [rbp-0x59]
   140027ecd:	movaps XMMWORD PTR [rbp-0x69],xmm0
   140027ed1:	test   rsi,rsi
   140027ed4:	je     0x140027ee7
   140027ed6:	lea    rdx,[rbp-0x79]
   140027eda:	lea    rcx,[rbp-0x69]
   140027ede:	call   0x1400246e0
   140027ee3:	movaps xmm0,XMMWORD PTR [rbp-0x69]
   140027ee7:	movdqu XMMWORD PTR [rdi],xmm0
   140027eeb:	lea    r11,[rsp+0xf0]
   140027ef3:	mov    rax,rdi
   140027ef6:	mov    rbx,QWORD PTR [r11+0x10]
   140027efa:	mov    rsi,QWORD PTR [r11+0x18]
   140027efe:	mov    rdi,QWORD PTR [r11+0x28]
   140027f02:	mov    rsp,r11
   140027f05:	pop    rbp
   140027f06:	ret    
   140027f07:	sub    rbx,r8
   140027f0a:	mov    edx,r8d
   140027f0d:	mov    QWORD PTR [rip+0x20d74],rbx        # 0x140048c88
   140027f14:	mov    rcx,rdi
   140027f17:	call   0x140023eb4
   140027f1c:	jmp    0x140027eeb
   140027f1e:	cmp    eax,0x42
   140027f21:	je     0x1400283aa
   140027f27:	jle    0x14002802d
   140027f2d:	cmp    eax,0x5a
   140027f30:	jle    0x1400283ad
   140027f36:	cmp    eax,0x5f
   140027f39:	jne    0x14002802d
   140027f3f:	movsx  ecx,BYTE PTR [rbx]
   140027f42:	add    rbx,r8
   140027f45:	mov    QWORD PTR [rip+0x20d3c],rbx        # 0x140048c88
   140027f4c:	cmp    ecx,0x4f
   140027f4f:	jg     0x140028043
   140027f55:	cmp    ecx,0x44
   140027f58:	jge    0x140028378
   140027f5e:	cmp    ecx,0x39
   140027f61:	jg     0x140027fe1
   140027f63:	je     0x140027fba
   140027f65:	test   ecx,ecx
   140027f67:	je     0x140027f07
   140027f69:	cmp    ecx,0x2f
   140027f6c:	jle    0x14002802d
   140027f72:	cmp    ecx,0x36
   140027f75:	jle    0x140027fa1
   140027f77:	cmp    ecx,0x38
   140027f7a:	jg     0x14002802d
   140027f80:	movsx  rdx,BYTE PTR [rbx-0x1]
   140027f85:	lea    rbx,[rip+0xfffffffffffd8074]        # 0x140000000
   140027f8c:	mov    rdx,QWORD PTR [rbx+rdx*8+0x3e390]
   140027f94:	mov    rcx,rdi
   140027f97:	call   0x140023e6c
   140027f9c:	jmp    0x140027eeb
   140027fa1:	movsx  rdx,BYTE PTR [rbx-0x1]
   140027fa6:	lea    rbx,[rip+0xfffffffffffd8053]        # 0x140000000
   140027fad:	mov    rdx,QWORD PTR [rbx+rdx*8+0x3e390]
   140027fb5:	jmp    0x140027d9f
   140027fba:	movsx  rdx,BYTE PTR [rbx-0x1]
   140027fbf:	lea    rbx,[rip+0xfffffffffffd803a]        # 0x140000000
   140027fc6:	lea    rcx,[rbp-0x79]
   140027fca:	mov    rdx,QWORD PTR [rbx+rdx*8+0x3e390]
   140027fd2:	call   0x140023e6c
   140027fd7:	bts    DWORD PTR [rbp-0x71],0xf
   140027fdc:	jmp    0x140027e69
   140027fe1:	cmp    ecx,0x3f
   140027fe4:	je     0x140028013
   140027fe6:	cmp    ecx,0x40
   140027fe9:	jle    0x14002802d
   140027feb:	cmp    ecx,0x42
   140027fee:	jle    0x140028378
   140027ff4:	cmp    ecx,0x43
   140027ff7:	jne    0x14002802d
   140027ff9:	lea    rdx,[rip+0x16868]        # 0x14003e868
   140028000:	lea    rcx,[rbp-0x79]
   140028004:	call   0x140029250
   140028009:	bts    DWORD PTR [rbp-0x71],0xc
   14002800e:	jmp    0x140027e69
   140028013:	movsx  eax,BYTE PTR [rbx]
   140028016:	add    rbx,r8
   140028019:	mov    QWORD PTR [rip+0x20c68],rbx        # 0x140048c88
   140028020:	test   eax,eax
   140028022:	je     0x140027f07
   140028028:	cmp    eax,0x30
   14002802b:	je     0x140028037
   14002802d:	mov    edx,0x2
   140028032:	jmp    0x140027f14
   140028037:	xor    r8d,r8d
   14002803a:	lea    rdx,[rip+0x16ce7]        # 0x14003ed28
   140028041:	jmp    0x140028000
   140028043:	cmp    ecx,0x54
   140028046:	jg     0x140028292
   14002804c:	cmp    ecx,0x53
   14002804f:	jge    0x140028378
   140028055:	sub    ecx,0x50
   140028058:	je     0x140028240
   14002805e:	dec    ecx
   140028060:	je     0x140027ee3
   140028066:	dec    ecx
   140028068:	jne    0x14002802d
   14002806a:	movsx  rdx,BYTE PTR [rbx-0x1]
   14002806f:	lea    rbx,[rip+0xfffffffffffd7f8a]        # 0x140000000
   140028076:	lea    rcx,[rbp-0x69]
   14002807a:	mov    rdx,QWORD PTR [rbx+rdx*8+0x3e358]
   140028082:	call   0x1400242c0
   140028087:	mov    rax,QWORD PTR [rip+0x20bfa]        # 0x140048c88
   14002808e:	mov    cl,BYTE PTR [rax]
   140028090:	test   cl,cl
   140028092:	jne    0x1400280ae
   140028094:	movaps xmm0,XMMWORD PTR [rbp-0x69]
   140028098:	mov    edx,0x1
   14002809d:	mov    rcx,rdi
   1400280a0:	movdqu XMMWORD PTR [rdi],xmm0
   1400280a4:	call   0x1400248c8
   1400280a9:	jmp    0x140027eeb
   1400280ae:	movsx  eax,cl
   1400280b1:	sub    eax,0x30
   1400280b4:	js     0x14002802d
   1400280ba:	movsxd rdx,eax
   1400280bd:	cmp    rdx,0x5
   1400280c1:	jae    0x14002802d
   1400280c7:	mov    rdx,QWORD PTR [rbx+rdx*8+0x3e680]
   1400280cf:	lea    rcx,[rbp-0x79]
   1400280d3:	call   0x1400242c0
   1400280d8:	mov    rcx,QWORD PTR [rip+0x20ba9]        # 0x140048c88
   1400280df:	movsx  eax,BYTE PTR [rcx]
   1400280e2:	inc    rcx
   1400280e5:	mov    QWORD PTR [rip+0x20b9c],rcx        # 0x140048c88
   1400280ec:	cmp    eax,0x30
   1400280ef:	je     0x140028202
   1400280f5:	cmp    eax,0x31
   1400280f8:	je     0x14002812f
   1400280fa:	add    eax,0xffffffce
   1400280fd:	cmp    eax,0x2
   140028100:	ja     0x14002811b
   140028102:	movaps xmm0,XMMWORD PTR [rbp-0x69]
   140028106:	lea    rdx,[rbp-0x79]
   14002810a:	mov    rcx,rdi
   14002810d:	movdqu XMMWORD PTR [rdi],xmm0
   140028111:	call   0x1400246e0
   140028116:	jmp    0x140027eeb
   14002811b:	dec    rcx
   14002811e:	mov    edx,0x1
   140028123:	mov    QWORD PTR [rip+0x20b5e],rcx        # 0x140048c88
   14002812a:	jmp    0x140027f14
   14002812f:	movaps xmm0,XMMWORD PTR [rbp-0x69]
   140028133:	lea    rdx,[rbp-0x79]
   140028137:	lea    rcx,[rbp-0x69]
   14002813b:	movdqa XMMWORD PTR [rbp-0x69],xmm0
   140028140:	call   0x1400246e0
   140028145:	lea    rcx,[rbp-0x29]
   140028149:	call   0x140028ffc
   14002814e:	lea    rcx,[rbp-0x59]
   140028152:	mov    dl,0x2c
   140028154:	movups xmm0,XMMWORD PTR [rax]
   140028157:	movdqu XMMWORD PTR [rbp-0x59],xmm0
   14002815c:	call   0x140024720
   140028161:	lea    rdx,[rbp-0x59]
   140028165:	lea    rcx,[rbp-0x69]
   140028169:	call   0x1400246e0
   14002816e:	lea    rcx,[rbp+0x37]
   140028172:	call   0x140028ffc
   140028177:	lea    rcx,[rbp-0x59]
   14002817b:	mov    dl,0x2c
   14002817d:	movups xmm0,XMMWORD PTR [rax]
   140028180:	movdqu XMMWORD PTR [rbp-0x59],xmm0
   140028185:	call   0x140024720
   14002818a:	lea    rdx,[rbp-0x59]
   14002818e:	lea    rcx,[rbp-0x69]
   140028192:	call   0x1400246e0
   140028197:	lea    rcx,[rbp+0x17]
   14002819b:	call   0x140028ffc
   1400281a0:	lea    rcx,[rbp-0x59]
   1400281a4:	mov    dl,0x2c
   1400281a6:	movups xmm0,XMMWORD PTR [rax]
   1400281a9:	movdqu XMMWORD PTR [rbp-0x59],xmm0
   1400281ae:	call   0x140024720
   1400281b3:	lea    rdx,[rbp-0x59]
   1400281b7:	lea    rcx,[rbp-0x69]
   1400281bb:	call   0x1400246e0
   1400281c0:	lea    rcx,[rbp-0x19]
   1400281c4:	xor    edx,edx
   1400281c6:	call   0x140026e84
   1400281cb:	lea    rcx,[rbp-0x59]
   1400281cf:	mov    dl,0x29
   1400281d1:	movups xmm0,XMMWORD PTR [rax]
   1400281d4:	movdqu XMMWORD PTR [rbp-0x59],xmm0
   1400281d9:	call   0x140024720
   1400281de:	lea    rdx,[rbp-0x59]
   1400281e2:	lea    rcx,[rbp-0x69]
   1400281e6:	call   0x1400246e0
   1400281eb:	mov    dl,0x27
   1400281ed:	mov    rcx,rdi
   1400281f0:	movaps xmm0,XMMWORD PTR [rbp-0x69]
   1400281f4:	movdqu XMMWORD PTR [rdi],xmm0
   1400281f8:	call   0x140024720
   1400281fd:	jmp    0x140027eeb
   140028202:	lea    rcx,[rbp-0x49]
   140028206:	xor    edx,edx
   140028208:	call   0x140026b2c
   14002820d:	lea    rcx,[rbp-0x59]
   140028211:	mov    dl,0x20
   140028213:	movaps xmm0,XMMWORD PTR [rbp-0x49]
   140028217:	movdqa XMMWORD PTR [rbp-0x59],xmm0
   14002821c:	call   0x140024720
   140028221:	lea    rdx,[rbp-0x69]
   140028225:	lea    rcx,[rbp-0x59]
   140028229:	movaps xmm0,XMMWORD PTR [rbp-0x59]
   14002822d:	movdqa XMMWORD PTR [rbp-0x59],xmm0
   140028232:	call   0x1400246e0
   140028237:	movaps xmm0,XMMWORD PTR [rbp-0x59]
   14002823b:	jmp    0x140028106
   140028240:	movsx  rdx,BYTE PTR [rbx-0x1]
   140028245:	lea    rbx,[rip+0xfffffffffffd7db4]        # 0x140000000
   14002824c:	lea    rcx,[rbp-0x69]
   140028250:	mov    rdx,QWORD PTR [rbx+rdx*8+0x3e358]
   140028258:	call   0x1400242c0
   14002825d:	lea    rcx,[rbp+0x7]
   140028261:	xor    r8d,r8d
   140028264:	xor    edx,edx
   140028266:	call   0x140027d0c
   14002826b:	movups xmm0,XMMWORD PTR [rax]
   14002826e:	movq   rax,xmm0
   140028273:	movups XMMWORD PTR [rbp-0x79],xmm0
   140028277:	test   rax,rax
   14002827a:	je     0x140028102
   140028280:	test   DWORD PTR [rbp-0x71],0x400
   140028287:	je     0x140028102
   14002828d:	jmp    0x14002802d
   140028292:	cmp    ecx,0x56
   140028295:	jle    0x140028391
   14002829b:	cmp    ecx,0x57
   14002829e:	jle    0x14002802d
   1400282a4:	cmp    ecx,0x59
   1400282a7:	jle    0x140028378
   1400282ad:	cmp    ecx,0x5f
   1400282b0:	jne    0x14002802d
   1400282b6:	movsx  eax,BYTE PTR [rbx]
   1400282b9:	add    rbx,r8
   1400282bc:	mov    QWORD PTR [rip+0x209c5],rbx        # 0x140048c88
   1400282c3:	cmp    eax,0x41
   1400282c6:	jl     0x14002802d
   1400282cc:	cmp    eax,0x44
   1400282cf:	jle    0x1400282df
   1400282d1:	cmp    eax,0x46
   1400282d4:	jle    0x1400282f8
   1400282d6:	cmp    eax,0x4a
   1400282d9:	jg     0x14002802d
   1400282df:	movsx  rdx,BYTE PTR [rbx-0x1]
   1400282e4:	lea    rbx,[rip+0xfffffffffffd7d15]        # 0x140000000
   1400282eb:	mov    rdx,QWORD PTR [rbx+rdx*8+0x3e420]
   1400282f3:	jmp    0x140027f94
   1400282f8:	movsx  rdx,BYTE PTR [rbx-0x1]
   1400282fd:	lea    rbx,[rip+0xfffffffffffd7cfc]        # 0x140000000
   140028304:	lea    rcx,[rbp-0x79]
   140028308:	mov    rdx,QWORD PTR [rbx+rdx*8+0x3e420]
   140028310:	call   0x140023e6c
   140028315:	mov    rax,QWORD PTR [rip+0x2096c]        # 0x140048c88
   14002831c:	cmp    BYTE PTR [rax],0x3f
   14002831f:	jne    0x14002834e
   140028321:	lea    rcx,[rbp+0x27]
   140028325:	call   0x140026c10
   14002832a:	lea    rcx,[rbp-0x79]
   14002832e:	mov    rdx,rax
   140028331:	call   0x1400246e0
   140028336:	mov    rax,QWORD PTR [rip+0x2094b]        # 0x140048c88
   14002833d:	cmp    BYTE PTR [rax],0x40
   140028340:	jne    0x140028363
   140028342:	inc    rax
   140028345:	mov    QWORD PTR [rip+0x2093c],rax        # 0x140048c88
   14002834c:	jmp    0x140028363
   14002834e:	lea    rcx,[rbp-0x39]
   140028352:	call   0x14002933c
   140028357:	lea    rcx,[rbp-0x79]
   14002835b:	mov    rdx,rax
   14002835e:	call   0x1400246e0
   140028363:	lea    rdx,[rip+0x169d6]        # 0x14003ed40
   14002836a:	lea    rcx,[rbp-0x79]
   14002836e:	call   0x14002483c
   140028373:	jmp    0x140027e69
   140028378:	movsx  rdx,BYTE PTR [rbx-0x1]
   14002837d:	lea    rbx,[rip+0xfffffffffffd7c7c]        # 0x140000000
   140028384:	mov    rdx,QWORD PTR [rbx+rdx*8+0x3e358]
   14002838c:	jmp    0x140027f94
   140028391:	movsx  rdx,BYTE PTR [rbx-0x1]
   140028396:	lea    rbx,[rip+0xfffffffffffd7c63]        # 0x140000000
   14002839d:	mov    rdx,QWORD PTR [rbx+rdx*8+0x3e358]
   1400283a5:	jmp    0x140027d9f
   1400283aa:	mov    esi,r8d
   1400283ad:	movsx  rdx,BYTE PTR [rbx-0x1]
   1400283b2:	lea    rbx,[rip+0xfffffffffffd7c47]        # 0x140000000
   1400283b9:	lea    rcx,[rbp-0x69]
   1400283bd:	mov    rdx,QWORD PTR [rbx+rdx*8+0x3e238]
   1400283c5:	call   0x1400242c0
   1400283ca:	test   esi,esi
   1400283cc:	je     0x140027da8
   1400283d2:	cmp    QWORD PTR [rbp-0x69],0x0
   1400283d7:	je     0x140027ee3
   1400283dd:	bts    DWORD PTR [rbp-0x61],0x9
   1400283e2:	jmp    0x140027ee3
   1400283e7:	int3   
   1400283e8:	rex push rbx
   1400283ea:	sub    rsp,0x20
   1400283ee:	lea    r9,[rip+0x163ab]        # 0x14003e7a0
   1400283f5:	mov    rbx,rcx
   1400283f8:	call   0x140028748
   1400283fd:	mov    rax,rbx
   140028400:	add    rsp,0x20
   140028404:	pop    rbx
   140028405:	ret    
   140028406:	int3   
   140028407:	int3   
   140028408:	rex push rbx
   14002840a:	sub    rsp,0x20
   14002840e:	lea    r9,[rip+0xd6dc]        # 0x140035af1
   140028415:	mov    rbx,rcx
   140028418:	call   0x140028748
   14002841d:	mov    rax,rbx
   140028420:	add    rsp,0x20
   140028424:	pop    rbx
   140028425:	ret    
   140028426:	int3   
   140028427:	int3   
   140028428:	mov    QWORD PTR [rsp+0x8],rbx
   14002842d:	mov    QWORD PTR [rsp+0x10],rdi
   140028432:	push   rbp
   140028433:	mov    rbp,rsp
   140028436:	sub    rsp,0x60
   14002843a:	mov    r8,QWORD PTR [rip+0x20847]        # 0x140048c88
   140028441:	and    QWORD PTR [rbp-0x30],0x0
   140028446:	mov    rbx,rcx
   140028449:	movsx  ecx,BYTE PTR [r8]
   14002844d:	mov    rdi,rdx
   140028450:	mov    edx,0xffff0000
   140028455:	and    DWORD PTR [rbp-0x28],edx
   140028458:	test   ecx,ecx
   14002845a:	je     0x14002860a
   140028460:	sub    ecx,0x24
   140028463:	je     0x1400284e3
   140028465:	sub    ecx,0x1d
   140028468:	je     0x1400284a6
   14002846a:	dec    ecx
   14002846c:	je     0x14002847e
   14002846e:	mov    rdx,rdi
   140028471:	mov    rcx,rbx
   140028474:	call   0x140025ec4
   140028479:	jmp    0x14002862a
   14002847e:	lea    rdx,[rip+0x16a73]        # 0x14003eef8
   140028485:	lea    rcx,[rbp-0x30]
   140028489:	call   0x1400242c0
   14002848e:	cmp    QWORD PTR [rdi],0x0
   140028492:	je     0x14002849f
   140028494:	lea    rcx,[rbp-0x30]
   140028498:	mov    dl,0x20
   14002849a:	call   0x140024720
   14002849f:	mov    r8,QWORD PTR [rip+0x207e2]        # 0x140048c88
   1400284a6:	lea    r9,[rip+0x16307]        # 0x14003e7b4
   1400284ad:	movups xmm0,XMMWORD PTR [rdi]
   1400284b0:	inc    r8
   1400284b3:	lea    rdx,[rbp-0x30]
   1400284b7:	mov    QWORD PTR [rip+0x207ca],r8        # 0x140048c88
   1400284be:	lea    r8,[rbp-0x20]
   1400284c2:	mov    rcx,rbx
   1400284c5:	movups XMMWORD PTR [rbp-0x20],xmm0
   1400284c9:	psrldq xmm0,0x8
   1400284ce:	movd   eax,xmm0
   1400284d2:	bts    eax,0x8
   1400284d6:	mov    DWORD PTR [rbp-0x18],eax
   1400284d9:	call   0x140028748
   1400284de:	jmp    0x14002862a
   1400284e3:	mov    al,BYTE PTR [r8+0x1]
   1400284e7:	cmp    al,0x24
   1400284e9:	je     0x140028505
   1400284eb:	test   al,al
   1400284ed:	je     0x14002860a
   1400284f3:	mov    rcx,rbx
   1400284f6:	mov    edx,0x2
   1400284fb:	call   0x140023eb4
   140028500:	jmp    0x14002862a
   140028505:	add    r8,0x2
   140028509:	mov    QWORD PTR [rip+0x20778],r8        # 0x140048c88
   140028510:	movsx  ecx,BYTE PTR [r8]
   140028514:	test   ecx,ecx
   140028516:	je     0x14002860a
   14002851c:	sub    ecx,0x41
   14002851f:	je     0x1400285f3
   140028525:	dec    ecx
   140028527:	je     0x1400285d6
   14002852d:	dec    ecx
   14002852f:	je     0x1400285a0
   140028531:	sub    ecx,0xe
   140028534:	je     0x140028594
   140028536:	dec    ecx
   140028538:	je     0x14002856c
   14002853a:	dec    ecx
   14002853c:	je     0x140028560
   14002853e:	dec    ecx
   140028540:	mov    rcx,rbx
   140028543:	jne    0x1400284f6
   140028545:	inc    r8
   140028548:	lea    rdx,[rip+0x169b9]        # 0x14003ef08
   14002854f:	mov    QWORD PTR [rip+0x20732],r8        # 0x140048c88
   140028556:	call   0x140023e6c
   14002855b:	jmp    0x14002862a
   140028560:	inc    r8
   140028563:	mov    QWORD PTR [rip+0x2071e],r8        # 0x140048c88
   14002856a:	jmp    0x1400284f3
   14002856c:	lea    rdx,[rip+0x16985]        # 0x14003eef8
   140028573:	lea    rcx,[rbp-0x30]
   140028577:	call   0x1400242c0
   14002857c:	cmp    QWORD PTR [rdi],0x0
   140028580:	je     0x14002858d
   140028582:	lea    rcx,[rbp-0x30]
   140028586:	mov    dl,0x20
   140028588:	call   0x140024720
   14002858d:	mov    r8,QWORD PTR [rip+0x206f4]        # 0x140048c88
   140028594:	lea    r9,[rip+0x1624d]        # 0x14003e7e8
   14002859b:	jmp    0x1400284ad
   1400285a0:	and    DWORD PTR [rbp-0x28],edx
   1400285a3:	and    QWORD PTR [rbp-0x30],0x0
   1400285a8:	and    DWORD PTR [rsp+0x20],0x0
   1400285ad:	inc    r8
   1400285b0:	lea    r9,[rbp-0x30]
   1400285b4:	lea    rcx,[rbp-0x10]
   1400285b8:	mov    QWORD PTR [rip+0x206c9],r8        # 0x140048c88
   1400285bf:	lea    r8,[rip+0xd52b]        # 0x140035af1
   1400285c6:	mov    rdx,rdi
   1400285c9:	call   0x1400263f0
   1400285ce:	mov    rdx,rax
   1400285d1:	jmp    0x140028471
   1400285d6:	inc    r8
   1400285d9:	mov    rdx,rdi
   1400285dc:	mov    rcx,rbx
   1400285df:	mov    QWORD PTR [rip+0x206a2],r8        # 0x140048c88
   1400285e6:	mov    r8d,0x1
   1400285ec:	call   0x140028640
   1400285f1:	jmp    0x14002862a
   1400285f3:	inc    r8
   1400285f6:	mov    rdx,rdi
   1400285f9:	mov    rcx,rbx
   1400285fc:	mov    QWORD PTR [rip+0x20685],r8        # 0x140048c88
   140028603:	call   0x1400275e0
   140028608:	jmp    0x14002862a
   14002860a:	lea    rcx,[rbp-0x20]
   14002860e:	mov    edx,0x1
   140028613:	call   0x140023eb4
   140028618:	mov    rdx,rdi
   14002861b:	mov    rcx,rbx
   14002861e:	movups xmm0,XMMWORD PTR [rax]
   140028621:	movdqu XMMWORD PTR [rbx],xmm0
   140028625:	call   0x1400246e0
   14002862a:	mov    rdi,QWORD PTR [rsp+0x78]
   14002862f:	mov    rax,rbx
   140028632:	mov    rbx,QWORD PTR [rsp+0x70]
   140028637:	add    rsp,0x60
   14002863b:	pop    rbp
   14002863c:	ret    
   14002863d:	int3   
   14002863e:	int3   
   14002863f:	int3   
   140028640:	mov    QWORD PTR [rsp+0x8],rbx
   140028645:	mov    QWORD PTR [rsp+0x10],rdi
   14002864a:	push   rbp
   14002864b:	mov    rbp,rsp
   14002864e:	sub    rsp,0x50
   140028652:	mov    rax,QWORD PTR [rip+0x2062f]        # 0x140048c88
   140028659:	mov    rdi,rdx
   14002865c:	mov    rbx,rcx
   14002865f:	cmp    BYTE PTR [rax],0x0
   140028662:	je     0x140028714
   140028668:	test   r8d,r8d
   14002866b:	je     0x1400286a5
   14002866d:	cmp    BYTE PTR [rax],0x58
   140028670:	jne    0x1400286a5
   140028672:	inc    rax
   140028675:	mov    QWORD PTR [rip+0x2060c],rax        # 0x140048c88
   14002867c:	cmp    QWORD PTR [rdx],0x0
   140028680:	jne    0x140028693
   140028682:	lea    rdx,[rip+0x166df]        # 0x14003ed68
   140028689:	call   0x140023e6c
   14002868e:	jmp    0x140028734
   140028693:	lea    rdx,[rip+0x16852]        # 0x14003eeec
   14002869a:	lea    rcx,[rbp-0x20]
   14002869e:	call   0x140023e6c
   1400286a3:	jmp    0x140028722
   1400286a5:	cmp    BYTE PTR [rax],0x59
   1400286a8:	jne    0x1400286bb
   1400286aa:	inc    rax
   1400286ad:	mov    QWORD PTR [rip+0x205d4],rax        # 0x140048c88
   1400286b4:	call   0x140025bc0
   1400286b9:	jmp    0x140028734
   1400286bb:	lea    rcx,[rbp-0x30]
   1400286bf:	call   0x140025ec4
   1400286c4:	test   DWORD PTR [rdi+0x8],0x4000
   1400286cb:	je     0x1400286f8
   1400286cd:	lea    rdx,[rip+0x16994]        # 0x14003f068
   1400286d4:	lea    rcx,[rbp-0x10]
   1400286d8:	call   0x140023e6c
   1400286dd:	lea    rdx,[rbp-0x30]
   1400286e1:	lea    rcx,[rbp-0x20]
   1400286e5:	movups xmm0,XMMWORD PTR [rax]
   1400286e8:	movdqu XMMWORD PTR [rbp-0x20],xmm0
   1400286ed:	call   0x1400246e0
   1400286f2:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   1400286f6:	jmp    0x14002870e
   1400286f8:	test   DWORD PTR [rdi+0x8],0x2000
   1400286ff:	je     0x14002870a
   140028701:	lea    rdx,[rip+0x16970]        # 0x14003f078
   140028708:	jmp    0x1400286d4
   14002870a:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   14002870e:	movdqu XMMWORD PTR [rbx],xmm0
   140028712:	jmp    0x140028734
   140028714:	lea    rcx,[rbp-0x10]
   140028718:	mov    edx,0x1
   14002871d:	call   0x140023eb4
   140028722:	movups xmm0,XMMWORD PTR [rax]
   140028725:	mov    rdx,rdi
   140028728:	mov    rcx,rbx
   14002872b:	movdqu XMMWORD PTR [rbx],xmm0
   14002872f:	call   0x1400246e0
   140028734:	mov    rdi,QWORD PTR [rsp+0x68]
   140028739:	mov    rax,rbx
   14002873c:	mov    rbx,QWORD PTR [rsp+0x60]
   140028741:	add    rsp,0x50
   140028745:	pop    rbp
   140028746:	ret    
   140028747:	int3   
   140028748:	mov    QWORD PTR [rsp+0x8],rbx
   14002874d:	mov    QWORD PTR [rsp+0x10],rsi
   140028752:	mov    QWORD PTR [rsp+0x18],rdi
   140028757:	push   rbp
   140028758:	push   r14
   14002875a:	push   r15
   14002875c:	mov    rbp,rsp
   14002875f:	sub    rsp,0x40
   140028763:	mov    rax,QWORD PTR [rip+0x2051e]        # 0x140048c88
   14002876a:	mov    rsi,rcx
   14002876d:	xor    ebx,ebx
   14002876f:	mov    cl,BYTE PTR [rax]
   140028771:	mov    r15,r9
   140028774:	mov    rdi,r8
   140028777:	mov    r14,rdx
   14002877a:	test   cl,cl
   14002877c:	je     0x140028809
   140028782:	lea    eax,[rcx-0x36]
   140028785:	cmp    al,0x3
   140028787:	jbe    0x1400287bf
   140028789:	cmp    cl,0x5f
   14002878c:	je     0x1400287bf
   14002878e:	mov    r9,rdx
   140028791:	lea    rcx,[rbp-0x10]
   140028795:	mov    r8,r15
   140028798:	mov    rdx,rdi
   14002879b:	mov    DWORD PTR [rsp+0x20],ebx
   14002879f:	call   0x1400263f0
   1400287a4:	cmp    BYTE PTR [r15],0x2a
   1400287a8:	lea    rdx,[rbp-0x10]
   1400287ac:	sete   bl
   1400287af:	mov    rcx,rsi
   1400287b2:	mov    r8d,ebx
   1400287b5:	call   0x140028640
   1400287ba:	jmp    0x14002885d
   1400287bf:	lea    rcx,[rbp-0x10]
   1400287c3:	mov    rdx,r9
   1400287c6:	call   0x140023e6c
   1400287cb:	cmp    QWORD PTR [r14],rbx
   1400287ce:	je     0x1400287ea
   1400287d0:	cmp    QWORD PTR [rdi],rbx
   1400287d3:	je     0x1400287de
   1400287d5:	test   DWORD PTR [rdi+0x8],0x100
   1400287dc:	jne    0x1400287ea
   1400287de:	lea    rcx,[rbp-0x10]
   1400287e2:	mov    rdx,r14
   1400287e5:	call   0x1400246e0
   1400287ea:	cmp    QWORD PTR [rdi],rbx
   1400287ed:	je     0x1400287fb
   1400287ef:	lea    rcx,[rbp-0x10]
   1400287f3:	mov    rdx,rdi
   1400287f6:	call   0x1400246e0
   1400287fb:	lea    rdx,[rbp-0x10]
   1400287ff:	mov    rcx,rsi
   140028802:	call   0x1400275e0
   140028807:	jmp    0x14002885d
   140028809:	lea    rcx,[rbp-0x10]
   14002880d:	mov    edx,0x1
   140028812:	call   0x140023eb4
   140028817:	lea    rcx,[rbp-0x10]
   14002881b:	mov    rdx,r15
   14002881e:	call   0x14002483c
   140028823:	cmp    QWORD PTR [r14],rbx
   140028826:	je     0x140028834
   140028828:	lea    rcx,[rbp-0x10]
   14002882c:	mov    rdx,r14
   14002882f:	call   0x1400246e0
   140028834:	cmp    QWORD PTR [rdi],rbx
   140028837:	je     0x140028855
   140028839:	cmp    QWORD PTR [r14],rbx
   14002883c:	je     0x140028849
   14002883e:	lea    rcx,[rbp-0x10]
   140028842:	mov    dl,0x20
   140028844:	call   0x140024720
   140028849:	lea    rcx,[rbp-0x10]
   14002884d:	mov    rdx,rdi
   140028850:	call   0x1400246e0
   140028855:	movups xmm0,XMMWORD PTR [rbp-0x10]
   140028859:	movdqu XMMWORD PTR [rsi],xmm0
   14002885d:	mov    rbx,QWORD PTR [rsp+0x60]
   140028862:	mov    rdi,QWORD PTR [rsp+0x70]
   140028867:	mov    rax,rsi
   14002886a:	mov    rsi,QWORD PTR [rsp+0x68]
   14002886f:	add    rsp,0x40
   140028873:	pop    r15
   140028875:	pop    r14
   140028877:	pop    rbp
   140028878:	ret    
   140028879:	int3   
   14002887a:	int3   
   14002887b:	int3   
   14002887c:	rex push rbx
   14002887e:	sub    rsp,0x20
   140028882:	mov    rbx,rcx
   140028885:	call   0x140028748
   14002888a:	mov    rax,rbx
   14002888d:	add    rsp,0x20
   140028891:	pop    rbx
   140028892:	ret    
   140028893:	int3   
   140028894:	mov    r11,rsp
   140028897:	mov    QWORD PTR [r11+0x8],rbx
   14002889b:	mov    QWORD PTR [r11+0x10],rsi
   14002889f:	push   rdi
   1400288a0:	sub    rsp,0x30
   1400288a4:	mov    rax,QWORD PTR [rip+0x203dd]        # 0x140048c88
   1400288ab:	mov    rbx,rcx
   1400288ae:	cmp    BYTE PTR [rax],0x5f
   1400288b1:	jne    0x140028999
   1400288b7:	inc    rax
   1400288ba:	mov    QWORD PTR [rip+0x203c7],rax        # 0x140048c88
   1400288c1:	movsx  esi,BYTE PTR [rax]
   1400288c4:	inc    rax
   1400288c7:	sub    esi,0x41
   1400288ca:	mov    QWORD PTR [rip+0x203b7],rax        # 0x140048c88
   1400288d1:	cmp    esi,0x3
   1400288d4:	ja     0x140028976
   1400288da:	and    QWORD PTR [r11-0x18],0x0
   1400288df:	mov    eax,DWORD PTR [rip+0x203bf]        # 0x140048ca4
   1400288e5:	and    DWORD PTR [rsp+0x28],0xffff0000
   1400288ed:	shr    eax,1
   1400288ef:	not    eax
   1400288f1:	test   al,0x1
   1400288f3:	je     0x14002898e
   1400288f9:	lea    rdx,[rip+0xf2d4]        # 0x140037bd4
   140028900:	lea    rcx,[r11-0x18]
   140028904:	call   0x14002483c
   140028909:	mov    eax,DWORD PTR [rip+0x20395]        # 0x140048ca4
   14002890f:	mov    rdx,QWORD PTR [rip+0x15ada]        # 0x14003e3f0
   140028916:	not    eax
   140028918:	test   al,0x1
   14002891a:	jne    0x140028920
   14002891c:	add    rdx,0x2
   140028920:	lea    rcx,[rsp+0x20]
   140028925:	call   0x14002483c
   14002892a:	test   esi,esi
   14002892c:	je     0x140028982
   14002892e:	mov    edi,esi
   140028930:	not    edi
   140028932:	inc    edi
   140028934:	and    edi,esi
   140028936:	mov    eax,edi
   140028938:	dec    eax
   14002893a:	je     0x140028949
   14002893c:	dec    eax
   14002893e:	jne    0x140028973
   140028940:	lea    rdx,[rip+0x16605]        # 0x14003ef4c
   140028947:	jmp    0x140028950
   140028949:	lea    rdx,[rip+0x165f8]        # 0x14003ef48
   140028950:	lea    rcx,[rsp+0x20]
   140028955:	call   0x14002483c
   14002895a:	not    edi
   14002895c:	and    esi,edi
   14002895e:	je     0x140028982
   140028960:	lea    rdx,[rip+0x165e9]        # 0x14003ef50
   140028967:	lea    rcx,[rsp+0x20]
   14002896c:	call   0x14002483c
   140028971:	jmp    0x14002892e
   140028973:	mov    rcx,rbx
   140028976:	mov    edx,0x2
   14002897b:	call   0x140023eb4
   140028980:	jmp    0x1400289a8
   140028982:	lea    rcx,[rsp+0x20]
   140028987:	mov    dl,0x29
   140028989:	call   0x140024720
   14002898e:	movups xmm0,XMMWORD PTR [rsp+0x20]
   140028993:	movdqu XMMWORD PTR [rbx],xmm0
   140028997:	jmp    0x1400289a8
   140028999:	and    QWORD PTR [rcx],0x0
   14002899d:	mov    BYTE PTR [rcx+0x8],0x0
   1400289a1:	and    DWORD PTR [rcx+0x8],0xffff00ff
   1400289a8:	mov    rsi,QWORD PTR [rsp+0x48]
   1400289ad:	mov    rax,rbx
   1400289b0:	mov    rbx,QWORD PTR [rsp+0x40]
   1400289b5:	add    rsp,0x30
   1400289b9:	pop    rdi
   1400289ba:	ret    
   1400289bb:	int3   
   1400289bc:	rex push rbx
   1400289be:	sub    rsp,0x20
   1400289c2:	mov    rax,QWORD PTR [rip+0x202bf]        # 0x140048c88
   1400289c9:	mov    rbx,rcx
   1400289cc:	cmp    BYTE PTR [rax],0x40
   1400289cf:	jne    0x1400289e2
   1400289d1:	inc    rax
   1400289d4:	mov    QWORD PTR [rip+0x202ad],rax        # 0x140048c88
   1400289db:	call   0x140023de4
   1400289e0:	jmp    0x1400289e7
   1400289e2:	call   0x140026b2c
   1400289e7:	mov    rax,rbx
   1400289ea:	add    rsp,0x20
   1400289ee:	pop    rbx
   1400289ef:	ret    
   1400289f0:	mov    rax,rsp
   1400289f3:	mov    QWORD PTR [rax+0x8],rbx
   1400289f7:	mov    QWORD PTR [rax+0x10],rsi
   1400289fb:	mov    QWORD PTR [rax+0x18],rdi
   1400289ff:	mov    QWORD PTR [rax+0x20],r14
   140028a03:	push   rbp
   140028a04:	lea    rbp,[rax-0x138]
   140028a0b:	sub    rsp,0x230
   140028a12:	xor    r14d,r14d
   140028a15:	mov    rdi,rcx
   140028a18:	mov    BYTE PTR [rcx+0x8],r14b
   140028a1c:	mov    eax,DWORD PTR [rcx+0x8]
   140028a1f:	mov    QWORD PTR [rcx],r14
   140028a22:	and    eax,0xffff00ff
   140028a27:	mov    sil,r14b
   140028a2a:	mov    DWORD PTR [rcx+0x8],eax
   140028a2d:	test   al,al
   140028a2f:	jne    0x140028e49
   140028a35:	mov    rax,QWORD PTR [rip+0x2024c]        # 0x140048c88
   140028a3c:	test   BYTE PTR [rax],0xbf
   140028a3f:	je     0x140028e49
   140028a45:	cmp    BYTE PTR [rip+0x2025c],r14b        # 0x140048ca8
   140028a4c:	je     0x140028a5b
   140028a4e:	cmp    BYTE PTR [rip+0x20254],r14b        # 0x140048ca9
   140028a55:	je     0x140028ec2
   140028a5b:	cmp    QWORD PTR [rdi],r14
   140028a5e:	je     0x140028ac1
   140028a60:	lea    rdx,[rip+0x1628d]        # 0x14003ecf4
   140028a67:	lea    rcx,[rbp+0xd0]
   140028a6e:	call   0x140023e6c
   140028a73:	lea    rcx,[rbp-0x10]
   140028a77:	mov    rdx,rdi
   140028a7a:	movups xmm0,XMMWORD PTR [rax]
   140028a7d:	movdqu XMMWORD PTR [rbp-0x10],xmm0
   140028a82:	call   0x1400246e0
   140028a87:	movups xmm0,XMMWORD PTR [rbp-0x10]
   140028a8b:	movdqu XMMWORD PTR [rdi],xmm0
   140028a8f:	test   sil,sil
   140028a92:	je     0x140028ac1
   140028a94:	lea    rcx,[rbp+0x120]
   140028a9b:	mov    dl,0x5b
   140028a9d:	call   0x140023dac
   140028aa2:	lea    rcx,[rbp-0x80]
   140028aa6:	mov    rdx,rdi
   140028aa9:	movups xmm0,XMMWORD PTR [rax]
   140028aac:	movdqu XMMWORD PTR [rbp-0x80],xmm0
   140028ab1:	call   0x1400246e0
   140028ab6:	movups xmm0,XMMWORD PTR [rbp-0x80]
   140028aba:	mov    sil,r14b
   140028abd:	movdqu XMMWORD PTR [rdi],xmm0
   140028ac1:	mov    rax,QWORD PTR [rip+0x201c0]        # 0x140048c88
   140028ac8:	cmp    BYTE PTR [rax],0x3f
   140028acb:	jne    0x140028e13
   140028ad1:	inc    rax
   140028ad4:	mov    QWORD PTR [rip+0x201ad],rax        # 0x140048c88
   140028adb:	movsx  ecx,BYTE PTR [rax]
   140028ade:	sub    ecx,0x24
   140028ae1:	je     0x140028dde
   140028ae7:	dec    ecx
   140028ae9:	je     0x140028d85
   140028aef:	sub    ecx,0x1a
   140028af2:	je     0x140028cc0
   140028af8:	sub    ecx,0x2
   140028afb:	je     0x140028d85
   140028b01:	sub    ecx,0x8
   140028b04:	je     0x140028c74
   140028b0a:	cmp    ecx,0x8
   140028b0d:	je     0x140028b7b
   140028b0f:	lea    rcx,[rbp+0x110]
   140028b16:	xor    edx,edx
   140028b18:	call   0x140026e84
   140028b1d:	lea    rcx,[rbp+0xb0]
   140028b24:	mov    dl,0x60
   140028b26:	mov    rbx,rax
   140028b29:	call   0x140023dac
   140028b2e:	lea    rcx,[rsp+0x70]
   140028b33:	mov    rdx,rax
   140028b36:	call   0x140023da0
   140028b3b:	lea    rcx,[rsp+0x70]
   140028b40:	mov    rdx,rbx
   140028b43:	call   0x1400246e0
   140028b48:	lea    rcx,[rbp+0x30]
   140028b4c:	mov    dl,0x27
   140028b4e:	movaps xmm0,XMMWORD PTR [rsp+0x70]
   140028b53:	movdqa XMMWORD PTR [rbp+0x30],xmm0
   140028b58:	call   0x140024720
   140028b5d:	lea    rcx,[rbp-0x70]
   140028b61:	mov    rdx,rdi
   140028b64:	movaps xmm0,XMMWORD PTR [rbp+0x30]
   140028b68:	movdqa XMMWORD PTR [rbp-0x70],xmm0
   140028b6d:	call   0x1400246e0
   140028b72:	movaps xmm0,XMMWORD PTR [rbp-0x70]
   140028b76:	jmp    0x140028e3c
   140028b7b:	and    DWORD PTR [rsp+0x28],0xffff0000
   140028b83:	inc    QWORD PTR [rip+0x200fe]        # 0x140048c88
   140028b8a:	mov    QWORD PTR [rsp+0x20],r14
   140028b8f:	lea    rcx,[rsp+0x40]
   140028b94:	xor    r8d,r8d
   140028b97:	mov    dl,0x1
   140028b99:	call   0x14002a43c
   140028b9e:	cmp    BYTE PTR [rsp+0x48],r14b
   140028ba3:	jne    0x140028be9
   140028ba5:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140028baa:	cmp    QWORD PTR [rsp+0x20],r14
   140028baf:	je     0x140028be1
   140028bb1:	lea    rdx,[rip+0x1613c]        # 0x14003ecf4
   140028bb8:	lea    rcx,[rbp+0x50]
   140028bbc:	movdqa XMMWORD PTR [rbp+0x50],xmm0
   140028bc1:	call   0x14002483c
   140028bc6:	lea    rdx,[rsp+0x20]
   140028bcb:	lea    rcx,[rbp+0x0]
   140028bcf:	movaps xmm0,XMMWORD PTR [rbp+0x50]
   140028bd3:	movdqa XMMWORD PTR [rbp+0x0],xmm0
   140028bd8:	call   0x1400246e0
   140028bdd:	movaps xmm0,XMMWORD PTR [rbp+0x0]
   140028be1:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140028be7:	jmp    0x140028bfe
   140028be9:	mov    eax,DWORD PTR [rsp+0x28]
   140028bed:	mov    QWORD PTR [rsp+0x20],r14
   140028bf2:	and    eax,0xffff0002
   140028bf7:	or     eax,0x2
   140028bfa:	mov    DWORD PTR [rsp+0x28],eax
   140028bfe:	cmp    BYTE PTR [rsp+0x28],r14b
   140028c03:	jne    0x140028c61
   140028c05:	mov    rax,QWORD PTR [rip+0x2007c]        # 0x140048c88
   140028c0c:	cmp    BYTE PTR [rax],0x40
   140028c0f:	jne    0x140028b8f
   140028c15:	lea    rcx,[rbp+0xf0]
   140028c1c:	mov    dl,0x5b
   140028c1e:	call   0x140023dac
   140028c23:	lea    rdx,[rsp+0x20]
   140028c28:	lea    rcx,[rbp-0x40]
   140028c2c:	movups xmm0,XMMWORD PTR [rax]
   140028c2f:	movdqu XMMWORD PTR [rbp-0x40],xmm0
   140028c34:	call   0x1400246e0
   140028c39:	movaps xmm0,XMMWORD PTR [rbp-0x40]
   140028c3d:	lea    rcx,[rbp+0x40]
   140028c41:	mov    dl,0x5d
   140028c43:	movdqa XMMWORD PTR [rbp+0x40],xmm0
   140028c48:	call   0x140024720
   140028c4d:	movaps xmm0,XMMWORD PTR [rbp+0x40]
   140028c51:	movdqu XMMWORD PTR [rdi],xmm0
   140028c55:	inc    QWORD PTR [rip+0x2002c]        # 0x140048c88
   140028c5c:	jmp    0x140028e40
   140028c61:	and    DWORD PTR [rdi+0x8],0xffff00ff
   140028c68:	mov    QWORD PTR [rdi],r14
   140028c6b:	mov    BYTE PTR [rdi+0x8],0x2
   140028c6f:	jmp    0x140028e40
   140028c74:	inc    QWORD PTR [rip+0x2000d]        # 0x140048c88
   140028c7b:	lea    rcx,[rbp+0x80]
   140028c82:	xor    r8d,r8d
   140028c85:	mov    dl,0x1
   140028c87:	call   0x14002a43c
   140028c8c:	lea    rcx,[rbp-0x20]
   140028c90:	mov    dl,0x5d
   140028c92:	movups xmm0,XMMWORD PTR [rax]
   140028c95:	movdqu XMMWORD PTR [rbp-0x20],xmm0
   140028c9a:	call   0x140024720
   140028c9f:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   140028ca3:	lea    rcx,[rbp+0x20]
   140028ca7:	mov    rdx,rdi
   140028caa:	movdqa XMMWORD PTR [rbp+0x20],xmm0
   140028caf:	call   0x1400246e0
   140028cb4:	mov    sil,0x1
   140028cb7:	movaps xmm0,XMMWORD PTR [rbp+0x20]
   140028cbb:	jmp    0x140028e3c
   140028cc0:	mov    rax,QWORD PTR [rip+0x1ffc1]        # 0x140048c88
   140028cc7:	lea    rcx,[rax+0x1]
   140028ccb:	cmp    BYTE PTR [rcx],0x5f
   140028cce:	jne    0x140028d1f
   140028cd0:	cmp    BYTE PTR [rax+0x2],0x3f
   140028cd4:	jne    0x140028d1f
   140028cd6:	mov    QWORD PTR [rip+0x1ffab],rcx        # 0x140048c88
   140028cdd:	lea    rcx,[rbp+0x90]
   140028ce4:	xor    r8d,r8d
   140028ce7:	xor    edx,edx
   140028ce9:	call   0x140027d0c
   140028cee:	lea    rcx,[rbp-0x60]
   140028cf2:	mov    rdx,rdi
   140028cf5:	movups xmm0,XMMWORD PTR [rax]
   140028cf8:	movdqu XMMWORD PTR [rbp-0x60],xmm0
   140028cfd:	call   0x1400246e0
   140028d02:	movups xmm0,XMMWORD PTR [rbp-0x60]
   140028d06:	movdqu XMMWORD PTR [rdi],xmm0
   140028d0a:	mov    rax,QWORD PTR [rip+0x1ff77]        # 0x140048c88
   140028d11:	cmp    BYTE PTR [rax],0x40
   140028d14:	jne    0x140028e40
   140028d1a:	jmp    0x140028c55
   140028d1f:	lea    rcx,[rbp+0xa0]
   140028d26:	call   0x140026c10
   140028d2b:	lea    rcx,[rbp+0xc0]
   140028d32:	mov    dl,0x60
   140028d34:	mov    rbx,rax
   140028d37:	call   0x140023dac
   140028d3c:	lea    rcx,[rbp-0x50]
   140028d40:	mov    rdx,rbx
   140028d43:	movups xmm0,XMMWORD PTR [rax]
   140028d46:	movdqu XMMWORD PTR [rbp-0x50],xmm0
   140028d4b:	call   0x1400246e0
   140028d50:	movaps xmm0,XMMWORD PTR [rbp-0x50]
   140028d54:	lea    rcx,[rbp-0x30]
   140028d58:	mov    dl,0x27
   140028d5a:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   140028d5f:	call   0x140024720
   140028d64:	lea    rcx,[rsp+0x50]
   140028d69:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140028d6d:	mov    rdx,rdi
   140028d70:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   140028d76:	call   0x1400246e0
   140028d7b:	movaps xmm0,XMMWORD PTR [rsp+0x50]
   140028d80:	jmp    0x140028e3c
   140028d85:	lea    rdx,[rip+0x1fefc]        # 0x140048c88
   140028d8c:	lea    rcx,[rbp+0x60]
   140028d90:	mov    r8b,0x40
   140028d93:	call   0x140023cc0
   140028d98:	lea    rdx,[rip+0x15f89]        # 0x14003ed28
   140028d9f:	lea    rcx,[rbp+0xe0]
   140028da6:	call   0x140023e6c
   140028dab:	lea    rcx,[rbp+0x10]
   140028daf:	mov    rdx,rdi
   140028db2:	movups xmm0,XMMWORD PTR [rax]
   140028db5:	movdqu XMMWORD PTR [rbp+0x10],xmm0
   140028dba:	call   0x1400246e0
   140028dbf:	movups xmm0,XMMWORD PTR [rbp+0x10]
   140028dc3:	movdqu XMMWORD PTR [rdi],xmm0
   140028dc7:	mov    rcx,QWORD PTR [rip+0x1feaa]        # 0x140048c78
   140028dce:	cmp    DWORD PTR [rcx],0x9
   140028dd1:	je     0x140028e40
   140028dd3:	lea    rdx,[rbp+0x60]
   140028dd7:	call   0x14002490c
   140028ddc:	jmp    0x140028e40
   140028dde:	dec    QWORD PTR [rip+0x1fea3]        # 0x140048c88
   140028de5:	lea    rcx,[rbp+0x100]
   140028dec:	xor    r8d,r8d
   140028def:	mov    dl,0x1
   140028df1:	call   0x14002a43c
   140028df6:	lea    rcx,[rsp+0x60]
   140028dfb:	mov    rdx,rdi
   140028dfe:	movups xmm0,XMMWORD PTR [rax]
   140028e01:	movdqu XMMWORD PTR [rsp+0x60],xmm0
   140028e07:	call   0x1400246e0
   140028e0c:	movups xmm0,XMMWORD PTR [rsp+0x60]
   140028e11:	jmp    0x140028e3c
   140028e13:	lea    rcx,[rbp+0x70]
   140028e17:	xor    r8d,r8d
   140028e1a:	mov    dl,0x1
   140028e1c:	call   0x14002a43c
   140028e21:	lea    rcx,[rsp+0x30]
   140028e26:	mov    rdx,rdi
   140028e29:	movups xmm0,XMMWORD PTR [rax]
   140028e2c:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140028e32:	call   0x1400246e0
   140028e37:	movups xmm0,XMMWORD PTR [rsp+0x30]
   140028e3c:	movdqu XMMWORD PTR [rdi],xmm0
   140028e40:	cmp    BYTE PTR [rdi+0x8],r14b
   140028e44:	jmp    0x140028a2f
   140028e49:	mov    rax,QWORD PTR [rip+0x1fe38]        # 0x140048c88
   140028e50:	cmp    BYTE PTR [rax],r14b
   140028e53:	je     0x140028e6a
   140028e55:	cmp    BYTE PTR [rax],0x40
   140028e58:	je     0x140028ec2
   140028e5a:	and    DWORD PTR [rdi+0x8],0xffff00ff
   140028e61:	mov    QWORD PTR [rdi],r14
   140028e64:	mov    BYTE PTR [rdi+0x8],0x2
   140028e68:	jmp    0x140028ec2
   140028e6a:	mov    edx,0x1
   140028e6f:	cmp    QWORD PTR [rdi],r14
   140028e72:	jne    0x140028e7e
   140028e74:	mov    rcx,rdi
   140028e77:	call   0x140024300
   140028e7c:	jmp    0x140028ec2
   140028e7e:	lea    rcx,[rbp+0x70]
   140028e82:	call   0x140023eb4
   140028e87:	lea    rdx,[rip+0x15e66]        # 0x14003ecf4
   140028e8e:	lea    rcx,[rsp+0x30]
   140028e93:	movups xmm0,XMMWORD PTR [rax]
   140028e96:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140028e9c:	call   0x14002483c
   140028ea1:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140028ea6:	lea    rcx,[rsp+0x30]
   140028eab:	mov    rdx,rdi
   140028eae:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140028eb4:	call   0x1400246e0
   140028eb9:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140028ebe:	movdqu XMMWORD PTR [rdi],xmm0
   140028ec2:	lea    r11,[rsp+0x230]
   140028eca:	mov    rax,rdi
   140028ecd:	mov    rbx,QWORD PTR [r11+0x10]
   140028ed1:	mov    rsi,QWORD PTR [r11+0x18]
   140028ed5:	mov    rdi,QWORD PTR [r11+0x20]
   140028ed9:	mov    r14,QWORD PTR [r11+0x28]
   140028edd:	mov    rsp,r11
   140028ee0:	pop    rbp
   140028ee1:	ret    
   140028ee2:	int3   
   140028ee3:	int3   
   140028ee4:	mov    QWORD PTR [rsp+0x8],rbx
   140028ee9:	push   rbp
   140028eea:	mov    rbp,rsp
   140028eed:	sub    rsp,0x40
   140028ef1:	and    QWORD PTR [rcx],0x0
   140028ef5:	mov    BYTE PTR [rcx+0x8],0x0
   140028ef9:	and    DWORD PTR [rcx+0x8],0xffff00ff
   140028f00:	mov    rbx,rcx
   140028f03:	lea    rcx,[rbp-0x20]
   140028f07:	xor    r8d,r8d
   140028f0a:	mov    dl,0x1
   140028f0c:	call   0x14002a43c
   140028f11:	movups xmm0,XMMWORD PTR [rax]
   140028f14:	movdqu XMMWORD PTR [rbx],xmm0
   140028f18:	cmp    BYTE PTR [rbx+0x8],0x0
   140028f1c:	mov    rax,QWORD PTR [rip+0x1fd65]        # 0x140048c88
   140028f23:	jne    0x140028f74
   140028f25:	cmp    BYTE PTR [rax],0x0
   140028f28:	je     0x140028f74
   140028f2a:	cmp    BYTE PTR [rax],0x40
   140028f2d:	je     0x140028f79
   140028f2f:	lea    rcx,[rbp-0x10]
   140028f33:	call   0x1400289f0
   140028f38:	lea    rdx,[rip+0x15db5]        # 0x14003ecf4
   140028f3f:	lea    rcx,[rbp-0x20]
   140028f43:	movups xmm0,XMMWORD PTR [rax]
   140028f46:	movdqu XMMWORD PTR [rbp-0x20],xmm0
   140028f4b:	call   0x14002483c
   140028f50:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   140028f54:	lea    rcx,[rbp-0x20]
   140028f58:	mov    rdx,rbx
   140028f5b:	movdqa XMMWORD PTR [rbp-0x20],xmm0
   140028f60:	call   0x1400246e0
   140028f65:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   140028f69:	movdqu XMMWORD PTR [rbx],xmm0
   140028f6d:	mov    rax,QWORD PTR [rip+0x1fd14]        # 0x140048c88
   140028f74:	cmp    BYTE PTR [rax],0x40
   140028f77:	jne    0x140028f85
   140028f79:	inc    rax
   140028f7c:	mov    QWORD PTR [rip+0x1fd05],rax        # 0x140048c88
   140028f83:	jmp    0x140028fee
   140028f85:	cmp    BYTE PTR [rax],0x0
   140028f88:	je     0x140028f9b
   140028f8a:	and    DWORD PTR [rbx+0x8],0xffff00ff
   140028f91:	and    QWORD PTR [rbx],0x0
   140028f95:	mov    BYTE PTR [rbx+0x8],0x2
   140028f99:	jmp    0x140028fee
   140028f9b:	cmp    QWORD PTR [rbx],0x0
   140028f9f:	mov    edx,0x1
   140028fa4:	jne    0x140028fb0
   140028fa6:	mov    rcx,rbx
   140028fa9:	call   0x140024300
   140028fae:	jmp    0x140028fee
   140028fb0:	lea    rcx,[rbp-0x10]
   140028fb4:	call   0x140023eb4
   140028fb9:	lea    rdx,[rip+0x15d34]        # 0x14003ecf4
   140028fc0:	lea    rcx,[rbp-0x20]
   140028fc4:	movups xmm0,XMMWORD PTR [rax]
   140028fc7:	movdqu XMMWORD PTR [rbp-0x20],xmm0
   140028fcc:	call   0x14002483c
   140028fd1:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   140028fd5:	lea    rcx,[rbp-0x20]
   140028fd9:	mov    rdx,rbx
   140028fdc:	movdqa XMMWORD PTR [rbp-0x20],xmm0
   140028fe1:	call   0x1400246e0
   140028fe6:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   140028fea:	movdqu XMMWORD PTR [rbx],xmm0
   140028fee:	mov    rax,rbx
   140028ff1:	mov    rbx,QWORD PTR [rsp+0x50]
   140028ff6:	add    rsp,0x40
   140028ffa:	pop    rbp
   140028ffb:	ret    
   140028ffc:	mov    QWORD PTR [rsp+0x8],rbx
   140029001:	push   rdi
   140029002:	sub    rsp,0x40
   140029006:	mov    rdi,rcx
   140029009:	mov    rcx,QWORD PTR [rip+0x1fc78]        # 0x140048c88
   140029010:	mov    al,BYTE PTR [rcx]
   140029012:	test   al,al
   140029014:	jne    0x140029025
   140029016:	mov    edx,0x1
   14002901b:	mov    rcx,rdi
   14002901e:	call   0x140023eb4
   140029023:	jmp    0x14002906a
   140029025:	xor    edx,edx
   140029027:	cmp    al,0x3f
   140029029:	jne    0x140029062
   14002902b:	inc    rcx
   14002902e:	mov    QWORD PTR [rip+0x1fc53],rcx        # 0x140048c88
   140029035:	lea    rcx,[rsp+0x20]
   14002903a:	call   0x140026e84
   14002903f:	lea    rcx,[rsp+0x30]
   140029044:	mov    dl,0x2d
   140029046:	mov    rbx,rax
   140029049:	call   0x140023dac
   14002904e:	mov    rdx,rbx
   140029051:	mov    rcx,rdi
   140029054:	movups xmm0,XMMWORD PTR [rax]
   140029057:	movdqu XMMWORD PTR [rdi],xmm0
   14002905b:	call   0x1400246e0
   140029060:	jmp    0x14002906a
   140029062:	mov    rcx,rdi
   140029065:	call   0x140026e84
   14002906a:	mov    rax,rdi
   14002906d:	mov    rbx,QWORD PTR [rsp+0x50]
   140029072:	add    rsp,0x40
   140029076:	pop    rdi
   140029077:	ret    
   140029078:	mov    r11,rsp
   14002907b:	push   rbx
   14002907c:	sub    rsp,0x50
   140029080:	mov    rbx,rcx
   140029083:	xor    ecx,ecx
   140029085:	mov    eax,0xffff0000
   14002908a:	mov    QWORD PTR [r11-0x28],rcx
   14002908e:	and    DWORD PTR [rsp+0x38],eax
   140029092:	mov    QWORD PTR [r11-0x18],rcx
   140029096:	and    DWORD PTR [rsp+0x48],eax
   14002909a:	mov    DWORD PTR [rsp+0x20],ecx
   14002909e:	lea    r9,[r11-0x28]
   1400290a2:	lea    r8,[rip+0xca48]        # 0x140035af1
   1400290a9:	lea    rdx,[r11-0x18]
   1400290ad:	mov    rcx,rbx
   1400290b0:	call   0x1400263f0
   1400290b5:	mov    rax,rbx
   1400290b8:	add    rsp,0x50
   1400290bc:	pop    rbx
   1400290bd:	ret    
   1400290be:	int3   
   1400290bf:	int3   
   1400290c0:	mov    rcx,QWORD PTR [rcx]
   1400290c3:	test   rcx,rcx
   1400290c6:	jne    0x1400290cc
   1400290c8:	mov    rax,rdx
   1400290cb:	ret    
   1400290cc:	mov    rax,QWORD PTR [rcx]
   1400290cf:	rex.W jmp QWORD PTR [rax+0x10]
   1400290d3:	int3   
   1400290d4:	mov    QWORD PTR [rsp+0x8],rbx
   1400290d9:	mov    QWORD PTR [rsp+0x10],rsi
   1400290de:	push   rdi
   1400290df:	sub    rsp,0x20
   1400290e3:	mov    rdi,rcx
   1400290e6:	mov    rcx,QWORD PTR [rcx]
   1400290e9:	mov    esi,r8d
   1400290ec:	mov    rbx,rdx
   1400290ef:	test   rcx,rcx
   1400290f2:	je     0x140029140
   1400290f4:	test   rdx,rdx
   1400290f7:	jne    0x14002911b
   1400290f9:	mov    rax,QWORD PTR [rcx]
   1400290fc:	call   QWORD PTR [rax]
   1400290fe:	lea    rcx,[rip+0x1fbab]        # 0x140048cb0
   140029105:	xor    r8d,r8d
   140029108:	lea    esi,[rax+0x1]
   14002910b:	movsxd rdx,esi
   14002910e:	call   0x140027be8
   140029113:	mov    rbx,rax
   140029116:	test   rax,rax
   140029119:	je     0x140029148
   14002911b:	mov    rcx,QWORD PTR [rdi]
   14002911e:	test   rcx,rcx
   140029121:	jne    0x140029128
   140029123:	mov    rax,rbx
   140029126:	jmp    0x14002913b
   140029128:	mov    r9,QWORD PTR [rcx]
   14002912b:	movsxd r8,esi
   14002912e:	mov    rdx,rbx
   140029131:	dec    r8
   140029134:	add    r8,rbx
   140029137:	call   QWORD PTR [r9+0x10]
   14002913b:	mov    BYTE PTR [rax],0x0
   14002913e:	jmp    0x140029148
   140029140:	test   rdx,rdx
   140029143:	je     0x140029148
   140029145:	mov    BYTE PTR [rdx],0x0
   140029148:	mov    rsi,QWORD PTR [rsp+0x38]
   14002914d:	mov    rax,rbx
   140029150:	mov    rbx,QWORD PTR [rsp+0x30]
   140029155:	add    rsp,0x20
   140029159:	pop    rdi
   14002915a:	ret    
   14002915b:	int3   
   14002915c:	cmp    DWORD PTR [rcx+0x8],0x1
   140029160:	jne    0x14002919b
   140029162:	sub    r8d,edx
   140029165:	mov    ecx,0x4
   14002916a:	cmp    r8d,ecx
   14002916d:	cmovl  ecx,r8d
   140029171:	test   ecx,ecx
   140029173:	je     0x140029194
   140029175:	lea    r9,[rip+0x15fe4]        # 0x14003f160
   14002917c:	mov    r8,rdx
   14002917f:	mov    r10d,ecx
   140029182:	sub    r9,rdx
   140029185:	mov    al,BYTE PTR [r9+r8*1]
   140029189:	mov    BYTE PTR [r8],al
   14002918c:	inc    r8
   14002918f:	dec    r10
   140029192:	jne    0x140029185
   140029194:	movsxd rax,ecx
   140029197:	add    rax,rdx
   14002919a:	ret    
   14002919b:	mov    rax,rdx
   14002919e:	ret    
   14002919f:	int3   
   1400291a0:	cmp    rdx,r8
   1400291a3:	jae    0x1400291ad
   1400291a5:	mov    al,BYTE PTR [rcx+0x8]
   1400291a8:	mov    BYTE PTR [rdx],al
   1400291aa:	inc    rdx
   1400291ad:	mov    rax,rdx
   1400291b0:	ret    
   1400291b1:	int3   
   1400291b2:	int3   
   1400291b3:	int3   
   1400291b4:	sub    rsp,0x28
   1400291b8:	mov    rcx,QWORD PTR [rcx+0x8]
   1400291bc:	test   rcx,rcx
   1400291bf:	je     0x1400291d2
   1400291c1:	mov    rcx,QWORD PTR [rcx]
   1400291c4:	test   rcx,rcx
   1400291c7:	je     0x1400291d2
   1400291c9:	mov    rax,QWORD PTR [rcx]
   1400291cc:	call   QWORD PTR [rax+0x10]
   1400291cf:	mov    rdx,rax
   1400291d2:	mov    rax,rdx
   1400291d5:	add    rsp,0x28
   1400291d9:	ret    
   1400291da:	int3   
   1400291db:	int3   
   1400291dc:	mov    QWORD PTR [rsp+0x8],rbx
   1400291e1:	push   rdi
   1400291e2:	sub    rsp,0x20
   1400291e6:	mov    rdi,rcx
   1400291e9:	mov    rcx,QWORD PTR [rcx+0x8]
   1400291ed:	mov    rbx,r8
   1400291f0:	mov    rax,QWORD PTR [rcx]
   1400291f3:	call   QWORD PTR [rax+0x10]
   1400291f6:	cmp    rax,rbx
   1400291f9:	jae    0x14002920c
   1400291fb:	mov    rcx,QWORD PTR [rdi+0x10]
   1400291ff:	mov    r8,rbx
   140029202:	mov    rdx,rax
   140029205:	mov    r9,QWORD PTR [rcx]
   140029208:	call   QWORD PTR [r9+0x10]
   14002920c:	mov    rbx,QWORD PTR [rsp+0x30]
   140029211:	add    rsp,0x20
   140029215:	pop    rdi
   140029216:	ret    
   140029217:	int3   
   140029218:	mov    r9d,DWORD PTR [rcx+0x10]
   14002921c:	mov    r10,QWORD PTR [rcx+0x8]
   140029220:	sub    r8d,edx
   140029223:	cmp    r9d,r8d
   140029226:	cmovg  r9d,r8d
   14002922a:	test   r9d,r9d
   14002922d:	je     0x140029246
   14002922f:	mov    rcx,rdx
   140029232:	sub    r10,rdx
   140029235:	mov    r8d,r9d
   140029238:	mov    al,BYTE PTR [r10+rcx*1]
   14002923c:	mov    BYTE PTR [rcx],al
   14002923e:	inc    rcx
   140029241:	dec    r8
   140029244:	jne    0x140029238
   140029246:	movsxd rax,r9d
   140029249:	add    rax,rdx
   14002924c:	ret    
   14002924d:	int3   
   14002924e:	int3   
   14002924f:	int3   
   140029250:	rex push rbx
   140029252:	sub    rsp,0x40
   140029256:	mov    rbx,rcx
   140029259:	lea    rcx,[rsp+0x20]
   14002925e:	call   0x140023e6c
   140029263:	mov    rdx,QWORD PTR [rip+0x1fa1e]        # 0x140048c88
   14002926a:	mov    al,BYTE PTR [rdx]
   14002926c:	inc    rdx
   14002926f:	mov    QWORD PTR [rip+0x1fa12],rdx        # 0x140048c88
   140029276:	cmp    al,0x40
   140029278:	jne    0x1400292f9
   14002927a:	mov    al,BYTE PTR [rdx]
   14002927c:	inc    rdx
   14002927f:	mov    QWORD PTR [rip+0x1fa02],rdx        # 0x140048c88
   140029286:	cmp    al,0x5f
   140029288:	jne    0x1400292f9
   14002928a:	inc    rdx
   14002928d:	lea    rcx,[rsp+0x30]
   140029292:	mov    QWORD PTR [rip+0x1f9ef],rdx        # 0x140048c88
   140029299:	xor    edx,edx
   14002929b:	call   0x140026e84
   1400292a0:	lea    rcx,[rsp+0x30]
   1400292a5:	xor    edx,edx
   1400292a7:	call   0x140026e84
   1400292ac:	mov    rax,QWORD PTR [rip+0x1f9d5]        # 0x140048c88
   1400292b3:	mov    cl,BYTE PTR [rax]
   1400292b5:	test   cl,cl
   1400292b7:	je     0x1400292e8
   1400292b9:	cmp    cl,0x40
   1400292bc:	je     0x1400292ce
   1400292be:	inc    rax
   1400292c1:	mov    QWORD PTR [rip+0x1f9c0],rax        # 0x140048c88
   1400292c8:	mov    cl,BYTE PTR [rax]
   1400292ca:	test   cl,cl
   1400292cc:	jne    0x1400292b9
   1400292ce:	cmp    BYTE PTR [rax],0x0
   1400292d1:	je     0x1400292e8
   1400292d3:	movups xmm0,XMMWORD PTR [rsp+0x20]
   1400292d8:	inc    rax
   1400292db:	mov    QWORD PTR [rip+0x1f9a6],rax        # 0x140048c88
   1400292e2:	movdqu XMMWORD PTR [rbx],xmm0
   1400292e6:	jmp    0x140029306
   1400292e8:	dec    rax
   1400292eb:	mov    edx,0x1
   1400292f0:	mov    QWORD PTR [rip+0x1f991],rax        # 0x140048c88
   1400292f7:	jmp    0x1400292fe
   1400292f9:	mov    edx,0x2
   1400292fe:	mov    rcx,rbx
   140029301:	call   0x140023eb4
   140029306:	mov    rax,rbx
   140029309:	add    rsp,0x40
   14002930d:	pop    rbx
   14002930e:	ret    
   14002930f:	int3   
   140029310:	sub    edx,ecx
   140029312:	cmp    r9d,edx
   140029315:	cmovg  r9d,edx
   140029319:	test   r9d,r9d
   14002931c:	je     0x140029335
   14002931e:	mov    rdx,rcx
   140029321:	sub    r8,rcx
   140029324:	mov    r10d,r9d
   140029327:	mov    al,BYTE PTR [r8+rdx*1]
   14002932b:	mov    BYTE PTR [rdx],al
   14002932d:	inc    rdx
   140029330:	dec    r10
   140029333:	jne    0x140029327
   140029335:	movsxd rax,r9d
   140029338:	add    rax,rcx
   14002933b:	ret    
   14002933c:	rex push rbx
   14002933e:	sub    rsp,0x20
   140029342:	mov    rax,QWORD PTR [rip+0x1f93f]        # 0x140048c88
   140029349:	mov    rbx,rcx
   14002934c:	cmp    BYTE PTR [rax],0x3f
   14002934f:	jne    0x140029375
   140029351:	inc    rax
   140029354:	cmp    BYTE PTR [rax],0x24
   140029357:	jne    0x140029362
   140029359:	mov    dl,0x1
   14002935b:	call   0x1400299f0
   140029360:	jmp    0x14002937f
   140029362:	xor    r8d,r8d
   140029365:	xor    edx,edx
   140029367:	mov    QWORD PTR [rip+0x1f91a],rax        # 0x140048c88
   14002936e:	call   0x140027d0c
   140029373:	jmp    0x14002937f
   140029375:	xor    r8d,r8d
   140029378:	mov    dl,0x1
   14002937a:	call   0x14002a43c
   14002937f:	mov    rax,rbx
   140029382:	add    rsp,0x20
   140029386:	pop    rbx
   140029387:	ret    
   140029388:	mov    rax,rsp
   14002938b:	mov    QWORD PTR [rax+0x10],rbx
   14002938f:	mov    QWORD PTR [rax+0x18],rsi
   140029393:	mov    QWORD PTR [rax+0x20],rdi
   140029397:	push   rbp
   140029398:	push   r14
   14002939a:	push   r15
   14002939c:	lea    rbp,[rax-0x5f]
   1400293a0:	sub    rsp,0x100
   1400293a7:	mov    rax,QWORD PTR [rip+0x1bec2]        # 0x140045270
   1400293ae:	xor    rax,rsp
   1400293b1:	mov    QWORD PTR [rbp+0x37],rax
   1400293b5:	and    QWORD PTR [rcx],0x0
   1400293b9:	mov    BYTE PTR [rcx+0x8],0x0
   1400293bd:	and    DWORD PTR [rcx+0x8],0xffff00ff
   1400293c4:	mov    r15b,0x1
   1400293c7:	mov    rbx,rcx
   1400293ca:	mov    BYTE PTR [rip+0x1f8d8],r15b        # 0x140048ca9
   1400293d1:	cmp    BYTE PTR [rcx+0x8],0x0
   1400293d5:	jne    0x14002963f
   1400293db:	mov    rcx,QWORD PTR [rip+0x1f8a6]        # 0x140048c88
   1400293e2:	test   BYTE PTR [rcx],0xbf
   1400293e5:	je     0x14002963f
   1400293eb:	xor    sil,sil
   1400293ee:	test   r15b,r15b
   1400293f1:	je     0x1400293f8
   1400293f3:	xor    r15b,r15b
   1400293f6:	jmp    0x1400293fb
   1400293f8:	mov    sil,0x1
   1400293fb:	movsx  r8d,BYTE PTR [rcx]
   1400293ff:	sub    r8d,0x30
   140029403:	cmp    r8d,0x9
   140029407:	ja     0x140029433
   140029409:	inc    rcx
   14002940c:	lea    rdx,[rbp-0x29]
   140029410:	mov    QWORD PTR [rip+0x1f871],rcx        # 0x140048c88
   140029417:	mov    rcx,QWORD PTR [rip+0x1f862]        # 0x140048c80
   14002941e:	call   0x14002433c
   140029423:	mov    rcx,rbx
   140029426:	mov    rdx,rax
   140029429:	call   0x1400246e0
   14002942e:	jmp    0x14002962e
   140029433:	and    QWORD PTR [rsp+0x20],0x0
   140029439:	and    DWORD PTR [rsp+0x28],0xffff0000
   140029441:	xor    dil,dil
   140029444:	cmp    BYTE PTR [rcx],0x24
   140029447:	mov    r14,rcx
   14002944a:	jne    0x140029467
   14002944c:	cmp    BYTE PTR [rcx+0x1],0x24
   140029450:	jne    0x140029467
   140029452:	mov    al,BYTE PTR [rcx+0x2]
   140029455:	cmp    al,0x57
   140029457:	jne    0x14002948d
   140029459:	add    rcx,0x3
   14002945d:	mov    dil,0x1
   140029460:	mov    QWORD PTR [rip+0x1f821],rcx        # 0x140048c88
   140029467:	mov    al,BYTE PTR [rcx]
   140029469:	cmp    al,0x58
   14002946b:	jne    0x1400294a1
   14002946d:	inc    rcx
   140029470:	lea    rdx,[rip+0x158f1]        # 0x14003ed68
   140029477:	mov    QWORD PTR [rip+0x1f80a],rcx        # 0x140048c88
   14002947e:	lea    rcx,[rsp+0x20]
   140029483:	call   0x1400242c0
   140029488:	jmp    0x1400295c3
   14002948d:	cmp    al,0x56
   14002948f:	jne    0x140029467
   140029491:	add    rcx,0x3
   140029495:	mov    QWORD PTR [rip+0x1f7ec],rcx        # 0x140048c88
   14002949c:	jmp    0x140029635
   1400294a1:	cmp    al,0x24
   1400294a3:	jne    0x1400294c1
   1400294a5:	inc    rcx
   1400294a8:	cmp    BYTE PTR [rcx],al
   1400294aa:	je     0x1400294c1
   1400294ac:	mov    QWORD PTR [rip+0x1f7d5],rcx        # 0x140048c88
   1400294b3:	lea    rcx,[rbp-0x9]
   1400294b7:	call   0x140029674
   1400294bc:	jmp    0x1400295ba
   1400294c1:	cmp    al,0x3f
   1400294c3:	jne    0x1400295a1
   1400294c9:	lea    rcx,[rsp+0x30]
   1400294ce:	call   0x140028ffc
   1400294d3:	test   DWORD PTR [rip+0x1f7c7],0x4000        # 0x140048ca4
   1400294dd:	je     0x140029556
   1400294df:	lea    rdx,[rbp+0x27]
   1400294e3:	lea    rcx,[rsp+0x30]
   1400294e8:	mov    r8d,0x10
   1400294ee:	call   0x1400290d4
   1400294f3:	lea    rcx,[rbp+0x27]
   1400294f7:	call   0x14002ccd8
   1400294fc:	mov    ecx,eax
   1400294fe:	call   QWORD PTR [rip+0x1f764]        # 0x140048c68
   140029504:	test   rax,rax
   140029507:	je     0x140029511
   140029509:	mov    rdx,rax
   14002950c:	jmp    0x14002947e
   140029511:	lea    rdx,[rip+0x15858]        # 0x14003ed70
   140029518:	lea    rcx,[rbp-0x19]
   14002951c:	call   0x140023e6c
   140029521:	lea    rdx,[rsp+0x30]
   140029526:	lea    rcx,[rbp-0x39]
   14002952a:	movups xmm0,XMMWORD PTR [rax]
   14002952d:	movdqu XMMWORD PTR [rbp-0x39],xmm0
   140029532:	call   0x1400246e0
   140029537:	movaps xmm0,XMMWORD PTR [rbp-0x39]
   14002953b:	lea    rdx,[rip+0x157e2]        # 0x14003ed24
   140029542:	lea    rcx,[rbp-0x49]
   140029546:	movdqa XMMWORD PTR [rbp-0x49],xmm0
   14002954b:	call   0x14002483c
   140029550:	movaps xmm0,XMMWORD PTR [rbp-0x49]
   140029554:	jmp    0x140029599
   140029556:	lea    rdx,[rip+0x15813]        # 0x14003ed70
   14002955d:	lea    rcx,[rbp+0x17]
   140029561:	call   0x140023e6c
   140029566:	lea    rdx,[rsp+0x30]
   14002956b:	lea    rcx,[rbp-0x59]
   14002956f:	movups xmm0,XMMWORD PTR [rax]
   140029572:	movdqu XMMWORD PTR [rbp-0x59],xmm0
   140029577:	call   0x1400246e0
   14002957c:	movaps xmm0,XMMWORD PTR [rbp-0x59]
   140029580:	lea    rdx,[rip+0x1579d]        # 0x14003ed24
   140029587:	lea    rcx,[rbp-0x69]
   14002958b:	movdqa XMMWORD PTR [rbp-0x69],xmm0
   140029590:	call   0x14002483c
   140029595:	movaps xmm0,XMMWORD PTR [rbp-0x69]
   140029599:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14002959f:	jmp    0x1400295c3
   1400295a1:	and    QWORD PTR [rbp-0x79],0x0
   1400295a6:	and    DWORD PTR [rbp-0x71],0xffff0000
   1400295ad:	lea    rdx,[rbp-0x79]
   1400295b1:	lea    rcx,[rbp+0x7]
   1400295b5:	call   0x140028428
   1400295ba:	movups xmm0,XMMWORD PTR [rax]
   1400295bd:	movdqu XMMWORD PTR [rsp+0x20],xmm0
   1400295c3:	mov    rcx,QWORD PTR [rip+0x1f6be]        # 0x140048c88
   1400295ca:	mov    rax,rcx
   1400295cd:	sub    rax,r14
   1400295d0:	cmp    rax,0x1
   1400295d4:	jle    0x1400295f6
   1400295d6:	mov    rax,QWORD PTR [rip+0x1f6a3]        # 0x140048c80
   1400295dd:	cmp    DWORD PTR [rax],0x9
   1400295e0:	je     0x1400295f6
   1400295e2:	lea    rdx,[rsp+0x20]
   1400295e7:	mov    rcx,rax
   1400295ea:	call   0x14002490c
   1400295ef:	mov    rcx,QWORD PTR [rip+0x1f692]        # 0x140048c88
   1400295f6:	cmp    QWORD PTR [rsp+0x20],0x0
   1400295fc:	je     0x140029635
   1400295fe:	test   sil,sil
   140029601:	je     0x14002960d
   140029603:	mov    dl,0x2c
   140029605:	mov    rcx,rbx
   140029608:	call   0x140024720
   14002960d:	lea    rdx,[rsp+0x20]
   140029612:	mov    rcx,rbx
   140029615:	call   0x1400246e0
   14002961a:	test   dil,dil
   14002961d:	je     0x14002962e
   14002961f:	lea    rdx,[rip+0x1575e]        # 0x14003ed84
   140029626:	mov    rcx,rbx
   140029629:	call   0x14002483c
   14002962e:	mov    rcx,QWORD PTR [rip+0x1f653]        # 0x140048c88
   140029635:	cmp    BYTE PTR [rbx+0x8],0x0
   140029639:	je     0x1400293e2
   14002963f:	mov    BYTE PTR [rip+0x1f663],0x0        # 0x140048ca9
   140029646:	mov    rax,rbx
   140029649:	mov    rcx,QWORD PTR [rbp+0x37]
   14002964d:	xor    rcx,rsp
   140029650:	call   0x1400097d0
   140029655:	lea    r11,[rsp+0x100]
   14002965d:	mov    rbx,QWORD PTR [r11+0x28]
   140029661:	mov    rsi,QWORD PTR [r11+0x30]
   140029665:	mov    rdi,QWORD PTR [r11+0x38]
   140029669:	mov    rsp,r11
   14002966c:	pop    r15
   14002966e:	pop    r14
   140029670:	pop    rbp
   140029671:	ret    
   140029672:	int3   
   140029673:	int3   
   140029674:	mov    rax,rsp
   140029677:	mov    QWORD PTR [rax+0x10],rbx
   14002967b:	mov    QWORD PTR [rax+0x18],rsi
   14002967f:	mov    QWORD PTR [rax+0x20],rdi
   140029683:	push   rbp
   140029684:	lea    rbp,[rax-0x48]
   140029688:	sub    rsp,0x140
   14002968f:	mov    rax,QWORD PTR [rip+0x1bbda]        # 0x140045270
   140029696:	xor    rax,rsp
   140029699:	mov    QWORD PTR [rbp+0x30],rax
   14002969d:	mov    rdi,rcx
   1400296a0:	mov    rcx,QWORD PTR [rip+0x1f5e1]        # 0x140048c88
   1400296a7:	movsx  esi,BYTE PTR [rcx]
   1400296aa:	inc    rcx
   1400296ad:	mov    QWORD PTR [rip+0x1f5d4],rcx        # 0x140048c88
   1400296b4:	mov    ebx,esi
   1400296b6:	cmp    esi,0x45
   1400296b9:	jg     0x14002985e
   1400296bf:	cmp    ebx,0x45
   1400296c2:	je     0x140029851
   1400296c8:	test   ebx,ebx
   1400296ca:	je     0x14002983d
   1400296d0:	sub    ebx,0x30
   1400296d3:	je     0x140029830
   1400296d9:	dec    ebx
   1400296db:	je     0x1400297e8
   1400296e1:	dec    ebx
   1400296e3:	je     0x14002973e
   1400296e5:	cmp    ebx,0x12
   1400296e8:	jne    0x14002977f
   1400296ee:	lea    rcx,[rsp+0x20]
   1400296f3:	call   0x140028ffc
   1400296f8:	test   DWORD PTR [rip+0x1f5a2],0x4000        # 0x140048ca4
   140029702:	je     0x1400298b7
   140029708:	lea    rdx,[rbp-0x50]
   14002970c:	lea    rcx,[rsp+0x20]
   140029711:	mov    r8d,0x10
   140029717:	call   0x1400290d4
   14002971c:	lea    rcx,[rbp-0x50]
   140029720:	call   0x14002ccd8
   140029725:	mov    ecx,eax
   140029727:	call   QWORD PTR [rip+0x1f53b]        # 0x140048c68
   14002972d:	test   rax,rax
   140029730:	je     0x1400298b7
   140029736:	mov    rdx,rax
   140029739:	jmp    0x1400297fe
   14002973e:	lea    rcx,[rsp+0x20]
   140029743:	call   0x140028ffc
   140029748:	lea    rcx,[rbp-0x50]
   14002974c:	call   0x140028ffc
   140029751:	cmp    BYTE PTR [rsp+0x28],0x1
   140029756:	jg     0x140029847
   14002975c:	cmp    BYTE PTR [rbp-0x48],0x1
   140029760:	jg     0x140029847
   140029766:	lea    rdx,[rbp-0x3f]
   14002976a:	lea    rcx,[rsp+0x20]
   14002976f:	mov    r8d,0x64
   140029775:	call   0x1400290d4
   14002977a:	test   rax,rax
   14002977d:	jne    0x140029791
   14002977f:	mov    edx,0x2
   140029784:	mov    rcx,rdi
   140029787:	call   0x140023eb4
   14002978c:	jmp    0x1400299c5
   140029791:	mov    al,BYTE PTR [rbp-0x3f]
   140029794:	mov    BYTE PTR [rbp-0x40],al
   140029797:	cmp    al,0x2d
   140029799:	jne    0x1400297a7
   14002979b:	mov    al,BYTE PTR [rbp-0x3e]
   14002979e:	mov    BYTE PTR [rbp-0x3e],0x2e
   1400297a2:	mov    BYTE PTR [rbp-0x3f],al
   1400297a5:	jmp    0x1400297ab
   1400297a7:	mov    BYTE PTR [rbp-0x3f],0x2e
   1400297ab:	lea    rdx,[rbp-0x40]
   1400297af:	lea    rcx,[rsp+0x50]
   1400297b4:	call   0x140023e6c
   1400297b9:	lea    rcx,[rsp+0x20]
   1400297be:	mov    dl,0x65
   1400297c0:	movups xmm0,XMMWORD PTR [rax]
   1400297c3:	movdqu XMMWORD PTR [rsp+0x20],xmm0
   1400297c9:	call   0x140024720
   1400297ce:	movups xmm0,XMMWORD PTR [rsp+0x20]
   1400297d3:	lea    rdx,[rbp-0x50]
   1400297d7:	mov    rcx,rdi
   1400297da:	movdqu XMMWORD PTR [rdi],xmm0
   1400297de:	call   0x1400246e0
   1400297e3:	jmp    0x1400299c5
   1400297e8:	cmp    BYTE PTR [rcx],0x40
   1400297eb:	jne    0x14002980b
   1400297ed:	inc    rcx
   1400297f0:	lea    rdx,[rip+0x15591]        # 0x14003ed88
   1400297f7:	mov    QWORD PTR [rip+0x1f48a],rcx        # 0x140048c88
   1400297fe:	mov    rcx,rdi
   140029801:	call   0x140023e6c
   140029806:	jmp    0x1400299c5
   14002980b:	lea    rcx,[rbp-0x70]
   14002980f:	call   0x140026c10
   140029814:	lea    rdx,[rip+0x14f99]        # 0x14003e7b4
   14002981b:	lea    rcx,[rsp+0x70]
   140029820:	mov    rbx,rax
   140029823:	call   0x140023e6c
   140029828:	mov    rdx,rbx
   14002982b:	movups xmm0,XMMWORD PTR [rax]
   14002982e:	jmp    0x1400297d7
   140029830:	mov    rcx,rdi
   140029833:	call   0x140028ffc
   140029838:	jmp    0x1400299c5
   14002983d:	dec    rcx
   140029840:	mov    QWORD PTR [rip+0x1f441],rcx        # 0x140048c88
   140029847:	mov    edx,0x1
   14002984c:	jmp    0x140029784
   140029851:	mov    rcx,rdi
   140029854:	call   0x140026c10
   140029859:	jmp    0x1400299c5
   14002985e:	cmp    ebx,0x4a
   140029861:	jle    0x140029909
   140029867:	cmp    ebx,0x51
   14002986a:	je     0x1400296ee
   140029870:	cmp    ebx,0x52
   140029873:	je     0x140029892
   140029875:	cmp    ebx,0x53
   140029878:	jne    0x14002977f
   14002987e:	and    QWORD PTR [rdi],0x0
   140029882:	mov    BYTE PTR [rdi+0x8],0x0
   140029886:	and    DWORD PTR [rdi+0x8],0xffff00ff
   14002988d:	jmp    0x1400299c5
   140029892:	lea    rcx,[rbp-0x50]
   140029896:	xor    r8d,r8d
   140029899:	xor    edx,edx
   14002989b:	call   0x14002a43c
   1400298a0:	lea    rcx,[rsp+0x20]
   1400298a5:	call   0x140028ffc
   1400298aa:	movups xmm0,XMMWORD PTR [rbp-0x50]
   1400298ae:	movdqu XMMWORD PTR [rdi],xmm0
   1400298b2:	jmp    0x1400299c5
   1400298b7:	lea    rcx,[rsp+0x30]
   1400298bc:	cmp    sil,0x44
   1400298c0:	jne    0x140029900
   1400298c2:	lea    rdx,[rip+0x154a7]        # 0x14003ed70
   1400298c9:	call   0x140023e6c
   1400298ce:	lea    rdx,[rsp+0x20]
   1400298d3:	lea    rcx,[rbp-0x50]
   1400298d7:	movups xmm0,XMMWORD PTR [rax]
   1400298da:	movdqu XMMWORD PTR [rbp-0x50],xmm0
   1400298df:	call   0x1400246e0
   1400298e4:	movups xmm0,XMMWORD PTR [rbp-0x50]
   1400298e8:	lea    rdx,[rip+0x15435]        # 0x14003ed24
   1400298ef:	mov    rcx,rdi
   1400298f2:	movdqu XMMWORD PTR [rdi],xmm0
   1400298f6:	call   0x14002483c
   1400298fb:	jmp    0x1400299c5
   140029900:	lea    rdx,[rip+0x15441]        # 0x14003ed48
   140029907:	jmp    0x1400298c9
   140029909:	lea    rcx,[rsp+0x20]
   14002990e:	mov    dl,0x7b
   140029910:	call   0x140023dac
   140029915:	sub    sil,0x48
   140029919:	cmp    sil,0x2
   14002991d:	ja     0x140029942
   14002991f:	lea    rcx,[rsp+0x40]
   140029924:	call   0x140026c10
   140029929:	lea    rcx,[rsp+0x20]
   14002992e:	mov    rdx,rax
   140029931:	call   0x1400246e0
   140029936:	lea    rcx,[rsp+0x20]
   14002993b:	mov    dl,0x2c
   14002993d:	call   0x140024720
   140029942:	sub    ebx,0x46
   140029945:	je     0x14002997a
   140029947:	dec    ebx
   140029949:	je     0x140029957
   14002994b:	dec    ebx
   14002994d:	je     0x14002999c
   14002994f:	dec    ebx
   140029951:	je     0x14002997a
   140029953:	dec    ebx
   140029955:	jne    0x1400299b2
   140029957:	lea    rcx,[rsp+0x60]
   14002995c:	call   0x140028ffc
   140029961:	lea    rcx,[rsp+0x20]
   140029966:	mov    rdx,rax
   140029969:	call   0x1400246e0
   14002996e:	lea    rcx,[rsp+0x20]
   140029973:	mov    dl,0x2c
   140029975:	call   0x140024720
   14002997a:	lea    rcx,[rbp-0x80]
   14002997e:	call   0x140028ffc
   140029983:	lea    rcx,[rsp+0x20]
   140029988:	mov    rdx,rax
   14002998b:	call   0x1400246e0
   140029990:	lea    rcx,[rsp+0x20]
   140029995:	mov    dl,0x2c
   140029997:	call   0x140024720
   14002999c:	lea    rcx,[rbp-0x60]
   1400299a0:	call   0x140028ffc
   1400299a5:	lea    rcx,[rsp+0x20]
   1400299aa:	mov    rdx,rax
   1400299ad:	call   0x1400246e0
   1400299b2:	movups xmm0,XMMWORD PTR [rsp+0x20]
   1400299b7:	mov    dl,0x7d
   1400299b9:	mov    rcx,rdi
   1400299bc:	movdqu XMMWORD PTR [rdi],xmm0
   1400299c0:	call   0x140024720
   1400299c5:	mov    rax,rdi
   1400299c8:	mov    rcx,QWORD PTR [rbp+0x30]
   1400299cc:	xor    rcx,rsp
   1400299cf:	call   0x1400097d0
   1400299d4:	lea    r11,[rsp+0x140]
   1400299dc:	mov    rbx,QWORD PTR [r11+0x18]
   1400299e0:	mov    rsi,QWORD PTR [r11+0x20]
   1400299e4:	mov    rdi,QWORD PTR [r11+0x28]
   1400299e8:	mov    rsp,r11
   1400299eb:	pop    rbp
   1400299ec:	ret    
   1400299ed:	int3   
   1400299ee:	int3   
   1400299ef:	int3   
   1400299f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400299f5:	mov    QWORD PTR [rsp+0x10],rsi
   1400299fa:	mov    QWORD PTR [rsp+0x20],rdi
   1400299ff:	push   rbp
   140029a00:	push   r12
   140029a02:	push   r13
   140029a04:	push   r14
   140029a06:	push   r15
   140029a08:	lea    rbp,[rsp-0x80]
   140029a0d:	sub    rsp,0x180
   140029a14:	mov    rax,QWORD PTR [rip+0x1f26d]        # 0x140048c88
   140029a1b:	mov    r14b,dl
   140029a1e:	mov    rdi,rcx
   140029a21:	cmp    BYTE PTR [rax],0x3f
   140029a24:	jne    0x140029b90
   140029a2a:	cmp    BYTE PTR [rax+0x1],0x24
   140029a2e:	jne    0x140029b90
   140029a34:	mov    r15,QWORD PTR [rip+0x1f235]        # 0x140048c70
   140029a3b:	mov    r12,QWORD PTR [rip+0x1f236]        # 0x140048c78
   140029a42:	mov    r13,QWORD PTR [rip+0x1f237]        # 0x140048c80
   140029a49:	or     ecx,0xffffffff
   140029a4c:	add    rax,0x2
   140029a50:	xor    bl,bl
   140029a52:	mov    DWORD PTR [rsp+0x60],ecx
   140029a56:	mov    DWORD PTR [rbp-0x40],ecx
   140029a59:	mov    DWORD PTR [rbp+0x20],ecx
   140029a5c:	lea    rcx,[rsp+0x60]
   140029a61:	mov    esi,0x1
   140029a66:	mov    QWORD PTR [rip+0x1f21b],rax        # 0x140048c88
   140029a6d:	mov    QWORD PTR [rip+0x1f1fc],rcx        # 0x140048c70
   140029a74:	lea    rcx,[rbp-0x40]
   140029a78:	mov    BYTE PTR [rbp+0xc0],bl
   140029a7e:	mov    QWORD PTR [rip+0x1f1f3],rcx        # 0x140048c78
   140029a85:	lea    rcx,[rbp+0x20]
   140029a89:	mov    dl,sil
   140029a8c:	mov    QWORD PTR [rip+0x1f1ed],rcx        # 0x140048c80
   140029a93:	cmp    BYTE PTR [rax],0x3f
   140029a96:	lea    rcx,[rsp+0x30]
   140029a9b:	jne    0x140029abb
   140029a9d:	add    rax,rsi
   140029aa0:	lea    r8,[rbp+0xc0]
   140029aa7:	mov    QWORD PTR [rip+0x1f1da],rax        # 0x140048c88
   140029aae:	call   0x140027d0c
   140029ab3:	mov    bl,BYTE PTR [rbp+0xc0]
   140029ab9:	jmp    0x140029ac3
   140029abb:	mov    r8b,sil
   140029abe:	call   0x14002a43c
   140029ac3:	movups xmm0,XMMWORD PTR [rax]
   140029ac6:	movzx  ecx,BYTE PTR [rip+0x1f1db]        # 0x140048ca8
   140029acd:	movq   rax,xmm0
   140029ad2:	movups XMMWORD PTR [rsp+0x20],xmm0
   140029ad7:	test   rax,rax
   140029ada:	cmove  ecx,esi
   140029add:	mov    BYTE PTR [rip+0x1f1c5],cl        # 0x140048ca8
   140029ae3:	test   bl,bl
   140029ae5:	jne    0x140029b75
   140029aeb:	lea    rcx,[rsp+0x50]
   140029af0:	call   0x140029388
   140029af5:	lea    rcx,[rsp+0x40]
   140029afa:	mov    dl,0x3c
   140029afc:	mov    rbx,rax
   140029aff:	call   0x140023dac
   140029b04:	lea    rcx,[rsp+0x30]
   140029b09:	mov    rdx,rbx
   140029b0c:	movups xmm0,XMMWORD PTR [rax]
   140029b0f:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140029b15:	call   0x1400246e0
   140029b1a:	lea    rdx,[rsp+0x30]
   140029b1f:	lea    rcx,[rsp+0x20]
   140029b24:	call   0x1400246e0
   140029b29:	mov    rcx,QWORD PTR [rsp+0x20]
   140029b2e:	test   rcx,rcx
   140029b31:	je     0x140029b49
   140029b33:	mov    rax,QWORD PTR [rcx]
   140029b36:	call   QWORD PTR [rax+0x8]
   140029b39:	cmp    al,0x3e
   140029b3b:	jne    0x140029b49
   140029b3d:	lea    rcx,[rsp+0x20]
   140029b42:	mov    dl,0x20
   140029b44:	call   0x140024720
   140029b49:	lea    rcx,[rsp+0x20]
   140029b4e:	mov    dl,0x3e
   140029b50:	call   0x140024720
   140029b55:	test   r14b,r14b
   140029b58:	je     0x140029b70
   140029b5a:	mov    rax,QWORD PTR [rip+0x1f127]        # 0x140048c88
   140029b61:	cmp    BYTE PTR [rax],0x0
   140029b64:	je     0x140029b70
   140029b66:	add    rax,rsi
   140029b69:	mov    QWORD PTR [rip+0x1f118],rax        # 0x140048c88
   140029b70:	movups xmm0,XMMWORD PTR [rsp+0x20]
   140029b75:	mov    QWORD PTR [rip+0x1f0f4],r15        # 0x140048c70
   140029b7c:	mov    QWORD PTR [rip+0x1f0f5],r12        # 0x140048c78
   140029b83:	mov    QWORD PTR [rip+0x1f0f6],r13        # 0x140048c80
   140029b8a:	movdqu XMMWORD PTR [rdi],xmm0
   140029b8e:	jmp    0x140029b9a
   140029b90:	mov    edx,0x2
   140029b95:	call   0x140023eb4
   140029b9a:	lea    r11,[rsp+0x180]
   140029ba2:	mov    rax,rdi
   140029ba5:	mov    rbx,QWORD PTR [r11+0x30]
   140029ba9:	mov    rsi,QWORD PTR [r11+0x38]
   140029bad:	mov    rdi,QWORD PTR [r11+0x48]
   140029bb1:	mov    rsp,r11
   140029bb4:	pop    r15
   140029bb6:	pop    r14
   140029bb8:	pop    r13
   140029bba:	pop    r12
   140029bbc:	pop    rbp
   140029bbd:	ret    
   140029bbe:	int3   
   140029bbf:	int3   
   140029bc0:	mov    r11,rsp
   140029bc3:	push   rbx
   140029bc4:	sub    rsp,0x50
   140029bc8:	and    QWORD PTR [r11-0x28],0x0
   140029bcd:	and    QWORD PTR [r11-0x18],0x0
   140029bd2:	mov    eax,0xffff0000
   140029bd7:	and    DWORD PTR [rsp+0x38],eax
   140029bdb:	and    DWORD PTR [rsp+0x48],eax
   140029bdf:	lea    r9,[r11-0x28]
   140029be3:	lea    r8,[rip+0xbf07]        # 0x140035af1
   140029bea:	lea    rdx,[r11-0x18]
   140029bee:	mov    rbx,rcx
   140029bf1:	mov    DWORD PTR [rsp+0x20],0x1
   140029bf9:	call   0x1400263f0
   140029bfe:	mov    rax,rbx
   140029c01:	add    rsp,0x50
   140029c05:	pop    rbx
   140029c06:	ret    
   140029c07:	int3   
   140029c08:	mov    QWORD PTR [rsp+0x8],rbx
   140029c0d:	mov    QWORD PTR [rsp+0x10],rdi
   140029c12:	push   rbp
   140029c13:	mov    rbp,rsp
   140029c16:	sub    rsp,0x50
   140029c1a:	mov    rax,QWORD PTR [rip+0x1f067]        # 0x140048c88
   140029c21:	mov    rdi,rcx
   140029c24:	cmp    BYTE PTR [rax],0x0
   140029c27:	je     0x140029c80
   140029c29:	cmp    BYTE PTR [rax],0x5a
   140029c2c:	jne    0x140029c4e
   140029c2e:	and    QWORD PTR [rbp-0x30],0x0
   140029c33:	inc    rax
   140029c36:	and    DWORD PTR [rbp-0x28],0xffff0000
   140029c3d:	movups xmm0,XMMWORD PTR [rbp-0x30]
   140029c41:	mov    QWORD PTR [rip+0x1f040],rax        # 0x140048c88
   140029c48:	movdqu XMMWORD PTR [rcx],xmm0
   140029c4c:	jmp    0x140029cb8
   140029c4e:	lea    rcx,[rbp-0x20]
   140029c52:	call   0x140025ac4
   140029c57:	lea    rdx,[rip+0x152e2]        # 0x14003ef40
   140029c5e:	lea    rcx,[rbp-0x10]
   140029c62:	mov    rbx,rax
   140029c65:	call   0x140023e6c
   140029c6a:	lea    rcx,[rbp-0x30]
   140029c6e:	mov    rdx,rbx
   140029c71:	movups xmm0,XMMWORD PTR [rax]
   140029c74:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   140029c79:	call   0x1400246e0
   140029c7e:	jmp    0x140029ca6
   140029c80:	lea    rdx,[rip+0x152b9]        # 0x14003ef40
   140029c87:	lea    rcx,[rbp-0x10]
   140029c8b:	call   0x140023e6c
   140029c90:	lea    rcx,[rbp-0x30]
   140029c94:	mov    edx,0x1
   140029c99:	movups xmm0,XMMWORD PTR [rax]
   140029c9c:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   140029ca1:	call   0x1400248c8
   140029ca6:	movups xmm0,XMMWORD PTR [rbp-0x30]
   140029caa:	mov    dl,0x29
   140029cac:	mov    rcx,rdi
   140029caf:	movdqu XMMWORD PTR [rdi],xmm0
   140029cb3:	call   0x140024720
   140029cb8:	mov    rbx,QWORD PTR [rsp+0x60]
   140029cbd:	mov    rax,rdi
   140029cc0:	mov    rdi,QWORD PTR [rsp+0x68]
   140029cc5:	add    rsp,0x50
   140029cc9:	pop    rbp
   140029cca:	ret    
   140029ccb:	int3   
   140029ccc:	sub    rsp,0x28
   140029cd0:	mov    r8,QWORD PTR [rip+0x1efb1]        # 0x140048c88
   140029cd7:	mov    r9d,0x4000
   140029cdd:	xor    edx,edx
   140029cdf:	cmp    BYTE PTR [r8],0x5f
   140029ce3:	jne    0x140029cf2
   140029ce5:	inc    r8
   140029ce8:	mov    edx,r9d
   140029ceb:	mov    QWORD PTR [rip+0x1ef96],r8        # 0x140048c88
   140029cf2:	mov    al,BYTE PTR [r8]
   140029cf5:	sub    al,0x41
   140029cf7:	cmp    al,0x19
   140029cf9:	jbe    0x14002a0b4
   140029cff:	cmp    BYTE PTR [r8],0x24
   140029d03:	jne    0x140029f3e
   140029d09:	inc    r8
   140029d0c:	xor    r10b,r10b
   140029d0f:	mov    QWORD PTR [rip+0x1ef72],r8        # 0x140048c88
   140029d16:	movsx  ecx,BYTE PTR [r8]
   140029d1a:	cmp    ecx,0x42
   140029d1d:	jg     0x140029e1a
   140029d23:	je     0x140029e0f
   140029d29:	test   ecx,ecx
   140029d2b:	je     0x140029e02
   140029d31:	cmp    ecx,0x24
   140029d34:	jne    0x140029dda
   140029d3a:	lea    rax,[r8+0x1]
   140029d3e:	cmp    BYTE PTR [rax],0x50
   140029d41:	cmove  r8,rax
   140029d45:	inc    r8
   140029d48:	mov    QWORD PTR [rip+0x1ef39],r8        # 0x140048c88
   140029d4f:	cmp    BYTE PTR [r8],r10b
   140029d52:	je     0x140029dd0
   140029d54:	mov    al,BYTE PTR [r8]
   140029d57:	sub    al,0x46
   140029d59:	test   al,0xfd
   140029d5b:	je     0x140029d83
   140029d5d:	cmp    BYTE PTR [r8],0x4a
   140029d61:	je     0x140029d92
   140029d63:	cmp    BYTE PTR [r8],0x4b
   140029d67:	jle    0x14002a115
   140029d6d:	cmp    BYTE PTR [r8],0x4d
   140029d71:	jle    0x140029d83
   140029d73:	cmp    BYTE PTR [r8],0x4f
   140029d77:	jle    0x140029d92
   140029d79:	cmp    BYTE PTR [r8],0x51
   140029d7d:	jne    0x14002a115
   140029d83:	inc    r8
   140029d86:	mov    QWORD PTR [rip+0x1eefb],r8        # 0x140048c88
   140029d8d:	jmp    0x140029cdd
   140029d92:	inc    r8
   140029d95:	mov    QWORD PTR [rip+0x1eeec],r8        # 0x140048c88
   140029d9c:	mov    al,BYTE PTR [r8]
   140029d9f:	sub    al,0x30
   140029da1:	cmp    al,0x9
   140029da3:	ja     0x140029dc6
   140029da5:	movsx  eax,BYTE PTR [r8]
   140029da9:	sub    eax,0x2f
   140029dac:	cdqe   
   140029dae:	add    r8,rax
   140029db1:	mov    QWORD PTR [rip+0x1eed0],r8        # 0x140048c88
   140029db8:	call   0x140029ccc
   140029dbd:	bts    eax,0x10
   140029dc1:	jmp    0x14002a1a6
   140029dc6:	mov    edx,0xffff
   140029dcb:	jmp    0x140029f2f
   140029dd0:	mov    eax,0xfffe
   140029dd5:	jmp    0x14002a1a6
   140029dda:	cmp    ecx,0x2f
   140029ddd:	jle    0x14002a115
   140029de3:	cmp    ecx,0x35
   140029de6:	jle    0x140029e57
   140029de8:	cmp    ecx,0x41
   140029deb:	jne    0x14002a115
   140029df1:	and    edx,0xfffff4ff
   140029df7:	or     edx,0x9000
   140029dfd:	jmp    0x140029f2f
   140029e02:	mov    edx,0xfffe
   140029e07:	dec    r8
   140029e0a:	jmp    0x140029f2f
   140029e0f:	or     edx,0x9800
   140029e15:	jmp    0x140029f2f
   140029e1a:	sub    ecx,0x43
   140029e1d:	je     0x140029f29
   140029e23:	dec    ecx
   140029e25:	je     0x140029f1b
   140029e2b:	dec    ecx
   140029e2d:	je     0x140029f0d
   140029e33:	sub    ecx,0xd
   140029e36:	jne    0x14002a115
   140029e3c:	inc    r8
   140029e3f:	mov    r10b,0x1
   140029e42:	mov    QWORD PTR [rip+0x1ee3f],r8        # 0x140048c88
   140029e49:	mov    cl,BYTE PTR [r8]
   140029e4c:	lea    eax,[rcx-0x30]
   140029e4f:	cmp    al,0x5
   140029e51:	ja     0x140029efd
   140029e57:	movsx  eax,BYTE PTR [r8]
   140029e5b:	mov    r9d,0x8000
   140029e61:	mov    r11d,0xffffefff
   140029e67:	or     edx,r9d
   140029e6a:	sub    eax,0x30
   140029e6d:	test   r9d,edx
   140029e70:	je     0x140029e7b
   140029e72:	and    edx,r11d
   140029e75:	bts    edx,0xb
   140029e79:	jmp    0x140029e81
   140029e7b:	and    edx,0xffff9fff
   140029e81:	test   r10b,r10b
   140029e84:	je     0x140029e92
   140029e86:	btr    edx,0x8
   140029e8a:	or     edx,0x600
   140029e90:	jmp    0x140029e9c
   140029e92:	btr    edx,0x9
   140029e96:	or     edx,0x500
   140029e9c:	test   al,0x1
   140029e9e:	je     0x140029ea6
   140029ea0:	bts    edx,0xd
   140029ea4:	jmp    0x140029eaa
   140029ea6:	btr    edx,0xd
   140029eaa:	and    eax,0x6
   140029ead:	je     0x140029ee3
   140029eaf:	cmp    eax,0x2
   140029eb2:	je     0x140029ece
   140029eb4:	cmp    eax,0x4
   140029eb7:	jne    0x14002a115
   140029ebd:	mov    eax,edx
   140029ebf:	mov    ecx,edx
   140029ec1:	and    eax,0xffffff3f
   140029ec6:	and    edx,0xffffe7ff
   140029ecc:	jmp    0x140029ef5
   140029ece:	mov    eax,edx
   140029ed0:	mov    ecx,edx
   140029ed2:	btr    edx,0xb
   140029ed6:	and    eax,0xffffffbf
   140029ed9:	bts    eax,0x7
   140029edd:	bts    edx,0xc
   140029ee1:	jmp    0x140029ef5
   140029ee3:	mov    eax,edx
   140029ee5:	mov    ecx,edx
   140029ee7:	and    edx,r11d
   140029eea:	btr    eax,0x7
   140029eee:	or     eax,0x40
   140029ef1:	bts    edx,0xb
   140029ef5:	and    ecx,r9d
   140029ef8:	cmovne edx,eax
   140029efb:	jmp    0x140029f2f
   140029efd:	neg    cl
   140029eff:	mov    edx,0xffff
   140029f04:	sbb    eax,eax
   140029f06:	add    eax,edx
   140029f08:	jmp    0x14002a1a6
   140029f0d:	and    edx,0xfffff6ff
   140029f13:	or     edx,0x9200
   140029f19:	jmp    0x140029f2f
   140029f1b:	and    edx,0xfffff5ff
   140029f21:	or     edx,0x9100
   140029f27:	jmp    0x140029f2f
   140029f29:	or     edx,0x7c00
   140029f2f:	inc    r8
   140029f32:	mov    QWORD PTR [rip+0x1ed4f],r8        # 0x140048c88
   140029f39:	jmp    0x14002a1a4
   140029f3e:	mov    cl,BYTE PTR [r8]
   140029f41:	lea    eax,[rcx-0x30]
   140029f44:	cmp    al,0x8
   140029f46:	ja     0x14002a089
   140029f4c:	inc    r8
   140029f4f:	movsx  ecx,cl
   140029f52:	btr    edx,0xf
   140029f56:	mov    QWORD PTR [rip+0x1ed2b],r8        # 0x140048c88
   140029f5d:	sub    ecx,0x30
   140029f60:	je     0x14002a049
   140029f66:	dec    ecx
   140029f68:	je     0x14002a017
   140029f6e:	dec    ecx
   140029f70:	je     0x140029fe9
   140029f72:	dec    ecx
   140029f74:	je     0x140029fdd
   140029f76:	dec    ecx
   140029f78:	je     0x140029fd0
   140029f7a:	dec    ecx
   140029f7c:	je     0x140029fbf
   140029f7e:	dec    ecx
   140029f80:	je     0x140029fae
   140029f82:	dec    ecx
   140029f84:	je     0x140029f9d
   140029f86:	dec    ecx
   140029f88:	jne    0x14002a115
   140029f8e:	btr    edx,0xa
   140029f92:	or     edx,0x7800
   140029f98:	jmp    0x14002a1a4
   140029f9d:	and    edx,0xfffff3ff
   140029fa3:	or     edx,0x7000
   140029fa9:	jmp    0x14002a1a4
   140029fae:	and    edx,0xffffebff
   140029fb4:	or     edx,0x6800
   140029fba:	jmp    0x14002a1a4
   140029fbf:	and    edx,0xffffe3ff
   140029fc5:	or     edx,0x6000
   140029fcb:	jmp    0x14002a1a4
   140029fd0:	btr    edx,0xe
   140029fd4:	bts    edx,0xd
   140029fd8:	jmp    0x14002a1a4
   140029fdd:	btr    edx,0xd
   140029fe1:	or     edx,r9d
   140029fe4:	jmp    0x14002a1a4
   140029fe9:	mov    r9d,0x8000
   140029fef:	test   r9d,edx
   140029ff2:	je     0x14002a000
   140029ff4:	and    edx,0xfffffaff
   140029ffa:	bts    edx,0x9
   140029ffe:	jmp    0x14002a006
   14002a000:	and    edx,0xffff9fff
   14002a006:	mov    eax,edx
   14002a008:	mov    ecx,edx
   14002a00a:	and    eax,0xffffff3f
   14002a00f:	and    edx,0xffffe7ff
   14002a015:	jmp    0x14002a07e
   14002a017:	mov    r9d,0x8000
   14002a01d:	test   r9d,edx
   14002a020:	je     0x14002a02e
   14002a022:	and    edx,0xfffffaff
   14002a028:	bts    edx,0x9
   14002a02c:	jmp    0x14002a034
   14002a02e:	and    edx,0xffff9fff
   14002a034:	mov    eax,edx
   14002a036:	mov    ecx,edx
   14002a038:	btr    edx,0xb
   14002a03c:	and    eax,0xffffffbf
   14002a03f:	bts    eax,0x7
   14002a043:	bts    edx,0xc
   14002a047:	jmp    0x14002a07e
   14002a049:	mov    r9d,0x8000
   14002a04f:	test   r9d,edx
   14002a052:	je     0x14002a060
   14002a054:	and    edx,0xfffffaff
   14002a05a:	bts    edx,0x9
   14002a05e:	jmp    0x14002a066
   14002a060:	and    edx,0xffff9fff
   14002a066:	mov    eax,edx
   14002a068:	mov    ecx,edx
   14002a06a:	mov    r11d,0xffffefff
   14002a070:	btr    eax,0x7
   14002a074:	and    edx,r11d
   14002a077:	or     eax,0x40
   14002a07a:	bts    edx,0xb
   14002a07e:	and    ecx,r9d
   14002a081:	cmovne edx,eax
   14002a084:	jmp    0x14002a1a4
   14002a089:	cmp    cl,0x39
   14002a08c:	jne    0x14002a0a2
   14002a08e:	inc    r8
   14002a091:	mov    edx,0xfffd
   14002a096:	mov    QWORD PTR [rip+0x1ebeb],r8        # 0x140048c88
   14002a09d:	jmp    0x14002a1a4
   14002a0a2:	neg    cl
   14002a0a4:	mov    edx,0xfffe
   14002a0a9:	sbb    eax,eax
   14002a0ab:	neg    eax
   14002a0ad:	add    edx,eax
   14002a0af:	jmp    0x14002a1a4
   14002a0b4:	movsx  r10d,BYTE PTR [r8]
   14002a0b8:	inc    r8
   14002a0bb:	mov    r9d,0x8000
   14002a0c1:	sub    r10d,0x41
   14002a0c5:	or     edx,r9d
   14002a0c8:	mov    QWORD PTR [rip+0x1ebb9],r8        # 0x140048c88
   14002a0cf:	test   r10b,0x1
   14002a0d3:	je     0x14002a0db
   14002a0d5:	bts    edx,0xd
   14002a0d9:	jmp    0x14002a0df
   14002a0db:	btr    edx,0xd
   14002a0df:	cmp    r10d,0x18
   14002a0e3:	jge    0x14002a1a4
   14002a0e9:	mov    r11d,0xffffefff
   14002a0ef:	test   r9d,edx
   14002a0f2:	je     0x14002a0fd
   14002a0f4:	and    edx,r11d
   14002a0f7:	bts    edx,0xb
   14002a0fb:	jmp    0x14002a103
   14002a0fd:	and    edx,0xffff9fff
   14002a103:	mov    eax,r10d
   14002a106:	and    eax,0x18
   14002a109:	je     0x14002a145
   14002a10b:	cmp    eax,0x8
   14002a10e:	je     0x14002a130
   14002a110:	cmp    eax,0x10
   14002a113:	je     0x14002a11f
   14002a115:	mov    eax,0xffff
   14002a11a:	jmp    0x14002a1a6
   14002a11f:	mov    eax,edx
   14002a121:	mov    ecx,edx
   14002a123:	and    eax,0xffffff3f
   14002a128:	and    edx,0xffffe7ff
   14002a12e:	jmp    0x14002a157
   14002a130:	mov    eax,edx
   14002a132:	mov    ecx,edx
   14002a134:	btr    edx,0xb
   14002a138:	and    eax,0xffffffbf
   14002a13b:	bts    eax,0x7
   14002a13f:	bts    edx,0xc
   14002a143:	jmp    0x14002a157
   14002a145:	mov    eax,edx
   14002a147:	mov    ecx,edx
   14002a149:	and    edx,r11d
   14002a14c:	btr    eax,0x7
   14002a150:	or     eax,0x40
   14002a153:	bts    edx,0xb
   14002a157:	and    ecx,r9d
   14002a15a:	cmovne edx,eax
   14002a15d:	and    r10d,0x6
   14002a161:	je     0x14002a1a4
   14002a163:	cmp    r10d,0x2
   14002a167:	je     0x14002a18d
   14002a169:	cmp    r10d,0x4
   14002a16d:	je     0x14002a181
   14002a16f:	cmp    r10d,0x6
   14002a173:	jne    0x14002a115
   14002a175:	and    edx,0xfffffcff
   14002a17b:	bts    edx,0xa
   14002a17f:	jmp    0x14002a1a4
   14002a181:	and    edx,0xfffff9ff
   14002a187:	bts    edx,0x8
   14002a18b:	jmp    0x14002a1a4
   14002a18d:	test   r9d,edx
   14002a190:	je     0x14002a19e
   14002a192:	and    edx,0xfffffaff
   14002a198:	bts    edx,0x9
   14002a19c:	jmp    0x14002a1a4
   14002a19e:	and    edx,0xffff9fff
   14002a1a4:	mov    eax,edx
   14002a1a6:	add    rsp,0x28
   14002a1aa:	ret    
   14002a1ab:	int3   
   14002a1ac:	rex push rbx
   14002a1ae:	sub    rsp,0x20
   14002a1b2:	mov    rax,QWORD PTR [rip+0x1eacf]        # 0x140048c88
   14002a1b9:	mov    rbx,rcx
   14002a1bc:	cmp    BYTE PTR [rax],0x0
   14002a1bf:	je     0x14002a1e5
   14002a1c1:	cmp    BYTE PTR [rax],0x41
   14002a1c4:	je     0x14002a1cd
   14002a1c6:	mov    edx,0x2
   14002a1cb:	jmp    0x14002a1ea
   14002a1cd:	inc    rax
   14002a1d0:	lea    rdx,[rip+0x14eb5]        # 0x14003f08c
   14002a1d7:	mov    QWORD PTR [rip+0x1eaaa],rax        # 0x140048c88
   14002a1de:	call   0x140023e6c
   14002a1e3:	jmp    0x14002a1ef
   14002a1e5:	mov    edx,0x1
   14002a1ea:	call   0x140023eb4
   14002a1ef:	mov    rax,rbx
   14002a1f2:	add    rsp,0x20
   14002a1f6:	pop    rbx
   14002a1f7:	ret    
   14002a1f8:	rex push rbx
   14002a1fa:	sub    rsp,0x20
   14002a1fe:	mov    rbx,rcx
   14002a201:	call   0x14002a26c
   14002a206:	mov    rax,rbx
   14002a209:	add    rsp,0x20
   14002a20d:	pop    rbx
   14002a20e:	ret    
   14002a20f:	int3   
   14002a210:	rex push rbx
   14002a212:	sub    rsp,0x30
   14002a216:	movups xmm0,XMMWORD PTR [rdx]
   14002a219:	lea    rdx,[rip+0x14e74]        # 0x14003f094
   14002a220:	mov    rbx,rcx
   14002a223:	movdqu XMMWORD PTR [rcx],xmm0
   14002a227:	call   0x14002483c
   14002a22c:	lea    rcx,[rsp+0x20]
   14002a231:	call   0x1400289f0
   14002a236:	mov    rcx,rbx
   14002a239:	mov    rdx,rax
   14002a23c:	call   0x1400246e0
   14002a241:	mov    dl,0x7d
   14002a243:	mov    rcx,rbx
   14002a246:	call   0x140024720
   14002a24b:	mov    rax,QWORD PTR [rip+0x1ea36]        # 0x140048c88
   14002a252:	cmp    BYTE PTR [rax],0x40
   14002a255:	jne    0x14002a261
   14002a257:	inc    rax
   14002a25a:	mov    QWORD PTR [rip+0x1ea27],rax        # 0x140048c88
   14002a261:	mov    rax,rbx
   14002a264:	add    rsp,0x30
   14002a268:	pop    rbx
   14002a269:	ret    
   14002a26a:	int3   
   14002a26b:	int3   
   14002a26c:	mov    QWORD PTR [rsp+0x8],rbx
   14002a271:	mov    QWORD PTR [rsp+0x10],rdi
   14002a276:	push   rbp
   14002a277:	mov    rbp,rsp
   14002a27a:	sub    rsp,0x70
   14002a27e:	movups xmm0,XMMWORD PTR [rdx]
   14002a281:	mov    rdi,rcx
   14002a284:	movdqu XMMWORD PTR [rcx],xmm0
   14002a288:	cmp    BYTE PTR [rcx+0x8],0x1
   14002a28c:	jg     0x14002a426
   14002a292:	mov    rax,QWORD PTR [rip+0x1e9ef]        # 0x140048c88
   14002a299:	cmp    BYTE PTR [rax],0x0
   14002a29c:	je     0x14002a3f6
   14002a2a2:	and    QWORD PTR [rbp-0x40],0x0
   14002a2a7:	and    QWORD PTR [rbp-0x30],0x0
   14002a2ac:	and    DWORD PTR [rsp+0x20],0x0
   14002a2b1:	mov    eax,0xffff0000
   14002a2b6:	lea    r9,[rbp-0x40]
   14002a2ba:	lea    r8,[rip+0xb830]        # 0x140035af1
   14002a2c1:	and    DWORD PTR [rbp-0x38],eax
   14002a2c4:	and    DWORD PTR [rbp-0x28],eax
   14002a2c7:	lea    rdx,[rbp-0x30]
   14002a2cb:	lea    rcx,[rbp-0x20]
   14002a2cf:	call   0x1400263f0
   14002a2d4:	lea    rcx,[rbp-0x30]
   14002a2d8:	mov    dl,0x20
   14002a2da:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   14002a2de:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   14002a2e3:	call   0x140024720
   14002a2e8:	lea    rcx,[rbp-0x30]
   14002a2ec:	mov    rdx,rdi
   14002a2ef:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   14002a2f3:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   14002a2f8:	call   0x1400246e0
   14002a2fd:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   14002a301:	movdqu XMMWORD PTR [rdi],xmm0
   14002a305:	cmp    BYTE PTR [rdi+0x8],0x1
   14002a309:	jg     0x14002a426
   14002a30f:	mov    rax,QWORD PTR [rip+0x1e972]        # 0x140048c88
   14002a316:	cmp    BYTE PTR [rax],0x40
   14002a319:	je     0x14002a3ea
   14002a31f:	lea    rdx,[rip+0x14d6e]        # 0x14003f094
   14002a326:	mov    rcx,rdi
   14002a329:	call   0x14002483c
   14002a32e:	mov    rax,QWORD PTR [rip+0x1e953]        # 0x140048c88
   14002a335:	cmp    BYTE PTR [rdi+0x8],0x1
   14002a339:	jg     0x14002a3e5
   14002a33f:	test   BYTE PTR [rax],0xbf
   14002a342:	je     0x14002a3bc
   14002a344:	lea    rcx,[rbp-0x20]
   14002a348:	call   0x1400289f0
   14002a34d:	lea    rcx,[rbp-0x10]
   14002a351:	mov    dl,0x60
   14002a353:	mov    rbx,rax
   14002a356:	call   0x140023dac
   14002a35b:	lea    rcx,[rbp-0x30]
   14002a35f:	mov    rdx,rbx
   14002a362:	movups xmm0,XMMWORD PTR [rax]
   14002a365:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   14002a36a:	call   0x1400246e0
   14002a36f:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   14002a373:	lea    rcx,[rbp-0x40]
   14002a377:	mov    dl,0x27
   14002a379:	movdqa XMMWORD PTR [rbp-0x40],xmm0
   14002a37e:	call   0x140024720
   14002a383:	lea    rdx,[rbp-0x40]
   14002a387:	mov    rcx,rdi
   14002a38a:	call   0x1400246e0
   14002a38f:	mov    rax,QWORD PTR [rip+0x1e8f2]        # 0x140048c88
   14002a396:	cmp    BYTE PTR [rax],0x40
   14002a399:	jne    0x14002a3a5
   14002a39b:	inc    rax
   14002a39e:	mov    QWORD PTR [rip+0x1e8e3],rax        # 0x140048c88
   14002a3a5:	cmp    BYTE PTR [rdi+0x8],0x1
   14002a3a9:	jg     0x14002a3e5
   14002a3ab:	cmp    BYTE PTR [rax],0x40
   14002a3ae:	je     0x14002a335
   14002a3b0:	lea    rdx,[rip+0x14ce5]        # 0x14003f09c
   14002a3b7:	jmp    0x14002a326
   14002a3bc:	cmp    BYTE PTR [rdi+0x8],0x1
   14002a3c0:	jg     0x14002a3e5
   14002a3c2:	cmp    BYTE PTR [rax],0x0
   14002a3c5:	jne    0x14002a3d4
   14002a3c7:	mov    edx,0x1
   14002a3cc:	mov    rcx,rdi
   14002a3cf:	call   0x1400248c8
   14002a3d4:	mov    dl,0x7d
   14002a3d6:	mov    rcx,rdi
   14002a3d9:	call   0x140024720
   14002a3de:	mov    rax,QWORD PTR [rip+0x1e8a3]        # 0x140048c88
   14002a3e5:	cmp    BYTE PTR [rax],0x40
   14002a3e8:	jne    0x14002a426
   14002a3ea:	inc    rax
   14002a3ed:	mov    QWORD PTR [rip+0x1e894],rax        # 0x140048c88
   14002a3f4:	jmp    0x14002a426
   14002a3f6:	cmp    BYTE PTR [rcx+0x8],0x1
   14002a3fa:	jg     0x14002a426
   14002a3fc:	lea    rcx,[rbp-0x10]
   14002a400:	mov    edx,0x1
   14002a405:	call   0x140023eb4
   14002a40a:	lea    rcx,[rbp-0x30]
   14002a40e:	mov    rdx,rdi
   14002a411:	movups xmm0,XMMWORD PTR [rax]
   14002a414:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   14002a419:	call   0x1400246e0
   14002a41e:	movups xmm0,XMMWORD PTR [rbp-0x30]
   14002a422:	movdqu XMMWORD PTR [rdi],xmm0
   14002a426:	lea    r11,[rsp+0x70]
   14002a42b:	mov    rax,rdi
   14002a42e:	mov    rbx,QWORD PTR [r11+0x10]
   14002a432:	mov    rdi,QWORD PTR [r11+0x18]
   14002a436:	mov    rsp,r11
   14002a439:	pop    rbp
   14002a43a:	ret    
   14002a43b:	int3   
   14002a43c:	mov    QWORD PTR [rsp+0x10],rbx
   14002a441:	mov    QWORD PTR [rsp+0x18],rsi
   14002a446:	mov    QWORD PTR [rsp+0x20],rdi
   14002a44b:	push   rbp
   14002a44c:	mov    rbp,rsp
   14002a44f:	sub    rsp,0x80
   14002a456:	mov    rax,QWORD PTR [rip+0x1ae13]        # 0x140045270
   14002a45d:	xor    rax,rsp
   14002a460:	mov    QWORD PTR [rbp-0x8],rax
   14002a464:	mov    r9,QWORD PTR [rip+0x1e81d]        # 0x140048c88
   14002a46b:	mov    r10b,r8b
   14002a46e:	mov    sil,dl
   14002a471:	movsx  r8d,BYTE PTR [r9]
   14002a475:	mov    rbx,rcx
   14002a478:	sub    r8d,0x30
   14002a47c:	cmp    r8d,0x9
   14002a480:	ja     0x14002a4a0
   14002a482:	mov    rdx,rcx
   14002a485:	mov    rcx,QWORD PTR [rip+0x1e7ec]        # 0x140048c78
   14002a48c:	inc    r9
   14002a48f:	mov    QWORD PTR [rip+0x1e7f2],r9        # 0x140048c88
   14002a496:	call   0x14002433c
   14002a49b:	jmp    0x14002a68c
   14002a4a0:	and    QWORD PTR [rbp-0x60],0x0
   14002a4a5:	mov    r11d,0xffff0000
   14002a4ab:	and    DWORD PTR [rbp-0x58],r11d
   14002a4af:	cmp    BYTE PTR [r9],0x3f
   14002a4b3:	jne    0x14002a505
   14002a4b5:	lea    rcx,[rbp-0x18]
   14002a4b9:	xor    edx,edx
   14002a4bb:	call   0x1400299f0
   14002a4c0:	mov    rcx,QWORD PTR [rip+0x1e7c1]        # 0x140048c88
   14002a4c7:	movups xmm0,XMMWORD PTR [rax]
   14002a4ca:	mov    al,BYTE PTR [rcx]
   14002a4cc:	inc    rcx
   14002a4cf:	mov    QWORD PTR [rip+0x1e7b2],rcx        # 0x140048c88
   14002a4d6:	movdqu XMMWORD PTR [rbp-0x60],xmm0
   14002a4db:	cmp    al,0x40
   14002a4dd:	je     0x14002a66a
   14002a4e3:	dec    rcx
   14002a4e6:	mov    QWORD PTR [rip+0x1e79b],rcx        # 0x140048c88
   14002a4ed:	mov    al,BYTE PTR [rcx]
   14002a4ef:	lea    rcx,[rbp-0x60]
   14002a4f3:	neg    al
   14002a4f5:	sbb    edx,edx
   14002a4f7:	neg    edx
   14002a4f9:	inc    edx
   14002a4fb:	call   0x140024300
   14002a500:	jmp    0x14002a66a
   14002a505:	lea    rdi,[rip+0x147ec]        # 0x14003ecf8
   14002a50c:	mov    rcx,r9
   14002a50f:	mov    r8d,0x12
   14002a515:	mov    rax,rdi
   14002a518:	mov    dl,BYTE PTR [rcx]
   14002a51a:	test   dl,dl
   14002a51c:	je     0x14002a52d
   14002a51e:	cmp    dl,BYTE PTR [rax]
   14002a520:	jne    0x14002a52d
   14002a522:	inc    rcx
   14002a525:	inc    rax
   14002a528:	dec    r8d
   14002a52b:	jne    0x14002a518
   14002a52d:	movzx  ecx,BYTE PTR [rcx]
   14002a530:	movzx  eax,BYTE PTR [rax]
   14002a533:	cmp    ecx,eax
   14002a535:	jne    0x14002a53d
   14002a537:	add    r9,0x13
   14002a53b:	jmp    0x14002a577
   14002a53d:	lea    rdi,[rip+0x147cc]        # 0x14003ed10
   14002a544:	mov    rcx,r9
   14002a547:	mov    r8d,0xc
   14002a54d:	mov    rax,rdi
   14002a550:	mov    dl,BYTE PTR [rcx]
   14002a552:	test   dl,dl
   14002a554:	je     0x14002a565
   14002a556:	cmp    dl,BYTE PTR [rax]
   14002a558:	jne    0x14002a565
   14002a55a:	inc    rcx
   14002a55d:	inc    rax
   14002a560:	dec    r8d
   14002a563:	jne    0x14002a550
   14002a565:	movzx  ecx,BYTE PTR [rcx]
   14002a568:	movzx  eax,BYTE PTR [rax]
   14002a56b:	cmp    ecx,eax
   14002a56d:	jne    0x14002a626
   14002a573:	add    r9,0xd
   14002a577:	lea    rcx,[rbp-0x40]
   14002a57b:	mov    QWORD PTR [rip+0x1e706],r9        # 0x140048c88
   14002a582:	call   0x140028ffc
   14002a587:	test   DWORD PTR [rip+0x1e713],0x4000        # 0x140048ca4
   14002a591:	je     0x14002a5cd
   14002a593:	lea    rdx,[rbp-0x18]
   14002a597:	lea    rcx,[rbp-0x40]
   14002a59b:	mov    r8d,0x10
   14002a5a1:	call   0x1400290d4
   14002a5a6:	lea    rcx,[rbp-0x18]
   14002a5aa:	call   0x14002ccd8
   14002a5af:	mov    ecx,eax
   14002a5b1:	call   QWORD PTR [rip+0x1e6b1]        # 0x140048c68
   14002a5b7:	lea    rcx,[rbp-0x60]
   14002a5bb:	test   rax,rax
   14002a5be:	je     0x14002a5d1
   14002a5c0:	mov    rdx,rax
   14002a5c3:	call   0x1400242c0
   14002a5c8:	jmp    0x14002a66a
   14002a5cd:	lea    rcx,[rbp-0x60]
   14002a5d1:	lea    rdx,[rip+0x14748]        # 0x14003ed20
   14002a5d8:	call   0x1400242c0
   14002a5dd:	lea    rcx,[rbp-0x28]
   14002a5e1:	mov    rdx,rdi
   14002a5e4:	call   0x140023e6c
   14002a5e9:	lea    rdx,[rbp-0x40]
   14002a5ed:	lea    rcx,[rbp-0x50]
   14002a5f1:	movups xmm0,XMMWORD PTR [rax]
   14002a5f4:	movdqu XMMWORD PTR [rbp-0x50],xmm0
   14002a5f9:	call   0x1400246e0
   14002a5fe:	movaps xmm0,XMMWORD PTR [rbp-0x50]
   14002a602:	lea    rdx,[rip+0x1471b]        # 0x14003ed24
   14002a609:	lea    rcx,[rbp-0x50]
   14002a60d:	movdqa XMMWORD PTR [rbp-0x50],xmm0
   14002a612:	call   0x14002483c
   14002a617:	lea    rdx,[rbp-0x50]
   14002a61b:	lea    rcx,[rbp-0x60]
   14002a61f:	call   0x1400246e0
   14002a624:	jmp    0x14002a66a
   14002a626:	test   r10b,r10b
   14002a629:	je     0x14002a64f
   14002a62b:	cmp    BYTE PTR [r9],0x40
   14002a62f:	jne    0x14002a64f
   14002a631:	and    QWORD PTR [rbp-0x40],0x0
   14002a636:	and    DWORD PTR [rbp-0x38],r11d
   14002a63a:	movaps xmm0,XMMWORD PTR [rbp-0x40]
   14002a63e:	inc    r9
   14002a641:	movdqa XMMWORD PTR [rbp-0x60],xmm0
   14002a646:	mov    QWORD PTR [rip+0x1e63b],r9        # 0x140048c88
   14002a64d:	jmp    0x14002a66a
   14002a64f:	lea    rdx,[rip+0x1e632]        # 0x140048c88
   14002a656:	lea    rcx,[rbp-0x28]
   14002a65a:	mov    r8b,0x40
   14002a65d:	call   0x140023cc0
   14002a662:	movups xmm0,XMMWORD PTR [rax]
   14002a665:	movdqu XMMWORD PTR [rbp-0x60],xmm0
   14002a66a:	test   sil,sil
   14002a66d:	je     0x14002a684
   14002a66f:	mov    rcx,QWORD PTR [rip+0x1e602]        # 0x140048c78
   14002a676:	cmp    DWORD PTR [rcx],0x9
   14002a679:	je     0x14002a684
   14002a67b:	lea    rdx,[rbp-0x60]
   14002a67f:	call   0x14002490c
   14002a684:	movaps xmm0,XMMWORD PTR [rbp-0x60]
   14002a688:	movdqu XMMWORD PTR [rbx],xmm0
   14002a68c:	mov    rax,rbx
   14002a68f:	mov    rcx,QWORD PTR [rbp-0x8]
   14002a693:	xor    rcx,rsp
   14002a696:	call   0x1400097d0
   14002a69b:	lea    r11,[rsp+0x80]
   14002a6a3:	mov    rbx,QWORD PTR [r11+0x18]
   14002a6a7:	mov    rsi,QWORD PTR [r11+0x20]
   14002a6ab:	mov    rdi,QWORD PTR [r11+0x28]
   14002a6af:	mov    rsp,r11
   14002a6b2:	pop    rbp
   14002a6b3:	ret    
   14002a6b4:	mov    eax,DWORD PTR [rip+0x1e5ea]        # 0x140048ca4
   14002a6ba:	and    eax,0x4000
   14002a6bf:	ret    
   14002a6c0:	mov    eax,DWORD PTR [rcx+0x8]
   14002a6c3:	shr    eax,0xb
   14002a6c6:	and    eax,0x1
   14002a6c9:	ret    
   14002a6ca:	int3   
   14002a6cb:	int3   
   14002a6cc:	mov    eax,DWORD PTR [rcx+0x8]
   14002a6cf:	shr    eax,0xe
   14002a6d2:	and    eax,0x1
   14002a6d5:	ret    
   14002a6d6:	int3   
   14002a6d7:	int3   
   14002a6d8:	xor    eax,eax
   14002a6da:	cmp    QWORD PTR [rcx],rax
   14002a6dd:	sete   al
   14002a6e0:	ret    
   14002a6e1:	int3   
   14002a6e2:	int3   
   14002a6e3:	int3   
   14002a6e4:	xor    eax,eax
   14002a6e6:	cmp    DWORD PTR [rcx],0x9
   14002a6e9:	sete   al
   14002a6ec:	ret    
   14002a6ed:	int3   
   14002a6ee:	int3   
   14002a6ef:	int3   
   14002a6f0:	mov    eax,DWORD PTR [rcx+0x8]
   14002a6f3:	shr    eax,0xc
   14002a6f6:	and    eax,0x1
   14002a6f9:	ret    
   14002a6fa:	int3   
   14002a6fb:	int3   
   14002a6fc:	mov    eax,DWORD PTR [rcx+0x8]
   14002a6ff:	shr    eax,0xd
   14002a702:	and    eax,0x1
   14002a705:	ret    
   14002a706:	int3   
   14002a707:	int3   
   14002a708:	mov    eax,DWORD PTR [rcx+0x8]
   14002a70b:	shr    eax,0x8
   14002a70e:	and    eax,0x1
   14002a711:	ret    
   14002a712:	int3   
   14002a713:	int3   
   14002a714:	xor    eax,eax
   14002a716:	cmp    QWORD PTR [rcx],rax
   14002a719:	je     0x14002a729
   14002a71b:	test   DWORD PTR [rcx+0x8],0x200
   14002a722:	je     0x14002a729
   14002a724:	mov    eax,0x1
   14002a729:	ret    
   14002a72a:	int3   
   14002a72b:	int3   
   14002a72c:	xor    eax,eax
   14002a72e:	cmp    QWORD PTR [rcx],rax
   14002a731:	je     0x14002a741
   14002a733:	test   DWORD PTR [rcx+0x8],0x400
   14002a73a:	je     0x14002a741
   14002a73c:	mov    eax,0x1
   14002a741:	ret    
   14002a742:	int3   
   14002a743:	int3   
   14002a744:	mov    eax,DWORD PTR [rcx+0x8]
   14002a747:	shr    eax,0xf
   14002a74a:	and    eax,0x1
   14002a74d:	ret    
   14002a74e:	int3   
   14002a74f:	int3   
   14002a750:	xor    eax,eax
   14002a752:	cmp    BYTE PTR [rcx+0x8],0x1
   14002a756:	setle  al
   14002a759:	ret    
   14002a75a:	int3   
   14002a75b:	int3   
   14002a75c:	mov    rcx,QWORD PTR [rcx]
   14002a75f:	test   rcx,rcx
   14002a762:	jne    0x14002a767
   14002a764:	xor    eax,eax
   14002a766:	ret    
   14002a767:	mov    rax,QWORD PTR [rcx]
   14002a76a:	rex.W jmp QWORD PTR [rax]
   14002a76d:	int3   
   14002a76e:	int3   
   14002a76f:	int3   
   14002a770:	mov    eax,DWORD PTR [rcx+0xc]
   14002a773:	ret    
   14002a774:	mov    eax,0x1
   14002a779:	ret    
   14002a77a:	int3   
   14002a77b:	int3   
   14002a77c:	sub    rsp,0x28
   14002a780:	mov    rcx,QWORD PTR [rcx+0x8]
   14002a784:	xor    eax,eax
   14002a786:	test   rcx,rcx
   14002a789:	je     0x14002a798
   14002a78b:	mov    rcx,QWORD PTR [rcx]
   14002a78e:	test   rcx,rcx
   14002a791:	je     0x14002a798
   14002a793:	mov    rax,QWORD PTR [rcx]
   14002a796:	call   QWORD PTR [rax]
   14002a798:	add    rsp,0x28
   14002a79c:	ret    
   14002a79d:	int3   
   14002a79e:	int3   
   14002a79f:	int3   
   14002a7a0:	mov    QWORD PTR [rsp+0x8],rbx
   14002a7a5:	mov    QWORD PTR [rsp+0x10],rsi
   14002a7aa:	push   rdi
   14002a7ab:	sub    rsp,0x20
   14002a7af:	cmp    DWORD PTR [rcx+0x18],0x0
   14002a7b3:	mov    rsi,rcx
   14002a7b6:	jge    0x14002a7d4
   14002a7b8:	mov    rcx,QWORD PTR [rcx+0x10]
   14002a7bc:	mov    rbx,QWORD PTR [rsi+0x8]
   14002a7c0:	mov    rax,QWORD PTR [rcx]
   14002a7c3:	call   QWORD PTR [rax]
   14002a7c5:	mov    rdx,QWORD PTR [rbx]
   14002a7c8:	mov    rcx,rbx
   14002a7cb:	mov    edi,eax
   14002a7cd:	call   QWORD PTR [rdx]
   14002a7cf:	add    edi,eax
   14002a7d1:	mov    DWORD PTR [rsi+0x18],edi
   14002a7d4:	mov    eax,DWORD PTR [rsi+0x18]
   14002a7d7:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a7dc:	mov    rsi,QWORD PTR [rsp+0x38]
   14002a7e1:	add    rsp,0x20
   14002a7e5:	pop    rdi
   14002a7e6:	ret    
   14002a7e7:	int3   
   14002a7e8:	mov    eax,DWORD PTR [rcx+0x10]
   14002a7eb:	ret    
   14002a7ec:	mov    eax,DWORD PTR [rip+0x1e52e]        # 0x140048d20
   14002a7f2:	test   al,0x1
   14002a7f4:	jne    0x14002a855
   14002a7f6:	or     eax,0x1
   14002a7f9:	xor    edx,edx
   14002a7fb:	mov    DWORD PTR [rip+0x1e4f3],0x1        # 0x140048cf8
   14002a805:	mov    DWORD PTR [rip+0x1e515],eax        # 0x140048d20
   14002a80b:	lea    rax,[rip+0x14916]        # 0x14003f128
   14002a812:	mov    DWORD PTR [rip+0x1e4e0],0x4        # 0x140048cfc
   14002a81c:	mov    QWORD PTR [rip+0x1e4c5],rdx        # 0x140048ce8
   14002a823:	mov    QWORD PTR [rip+0x1e4da],0x2        # 0x140048d08
   14002a82e:	mov    QWORD PTR [rip+0x1e4df],0x3        # 0x140048d18
   14002a839:	mov    QWORD PTR [rip+0x1e4a0],rax        # 0x140048ce0
   14002a840:	mov    QWORD PTR [rip+0x1e4a9],rax        # 0x140048cf0
   14002a847:	mov    QWORD PTR [rip+0x1e4b2],rax        # 0x140048d00
   14002a84e:	mov    QWORD PTR [rip+0x1e4bb],rax        # 0x140048d10
   14002a855:	cmp    ecx,0x3
   14002a858:	ja     0x14002a86c
   14002a85a:	movsxd rax,ecx
   14002a85d:	lea    rcx,[rip+0x1e47c]        # 0x140048ce0
   14002a864:	shl    rax,0x4
   14002a868:	add    rax,rcx
   14002a86b:	ret    
   14002a86c:	lea    rax,[rip+0x1e49d]        # 0x140048d10
   14002a873:	ret    
   14002a874:	bts    DWORD PTR [rcx+0x8],0xb
   14002a879:	ret    
   14002a87a:	int3   
   14002a87b:	int3   
   14002a87c:	bts    DWORD PTR [rcx+0x8],0xe
   14002a881:	ret    
   14002a882:	int3   
   14002a883:	int3   
   14002a884:	bts    DWORD PTR [rcx+0x8],0xc
   14002a889:	ret    
   14002a88a:	int3   
   14002a88b:	int3   
   14002a88c:	bts    DWORD PTR [rcx+0x8],0xd
   14002a891:	ret    
   14002a892:	int3   
   14002a893:	int3   
   14002a894:	cmp    QWORD PTR [rcx],0x0
   14002a898:	je     0x14002a89f
   14002a89a:	bts    DWORD PTR [rcx+0x8],0x9
   14002a89f:	ret    
   14002a8a0:	bts    DWORD PTR [rcx+0x8],0xf
   14002a8a5:	ret    
   14002a8a6:	int3   
   14002a8a7:	int3   
   14002a8a8:	bts    DWORD PTR [rcx+0x8],0x8
   14002a8ad:	mov    rax,rcx
   14002a8b0:	ret    
   14002a8b1:	int3   
   14002a8b2:	int3   
   14002a8b3:	int3   
   14002a8b4:	movsx  eax,BYTE PTR [rcx+0x8]
   14002a8b8:	ret    
   14002a8b9:	int3   
   14002a8ba:	int3   
   14002a8bb:	int3   
   14002a8bc:	test   r8d,r8d
   14002a8bf:	je     0x14002a8d4
   14002a8c1:	sub    rdx,rcx
   14002a8c4:	mov    r8d,r8d
   14002a8c7:	mov    al,BYTE PTR [rdx+rcx*1]
   14002a8ca:	mov    BYTE PTR [rcx],al
   14002a8cc:	inc    rcx
   14002a8cf:	dec    r8
   14002a8d2:	jne    0x14002a8c7
   14002a8d4:	ret    
   14002a8d5:	int3   
   14002a8d6:	int3   
   14002a8d7:	int3   
   14002a8d8:	xor    eax,eax
   14002a8da:	cmp    BYTE PTR [rcx],al
   14002a8dc:	je     0x14002a8e8
   14002a8de:	inc    rcx
   14002a8e1:	inc    eax
   14002a8e3:	cmp    BYTE PTR [rcx],0x0
   14002a8e6:	jne    0x14002a8de
   14002a8e8:	ret    
   14002a8e9:	int3   
   14002a8ea:	int3   
   14002a8eb:	int3   
   14002a8ec:	test   r8d,r8d
   14002a8ef:	jne    0x14002a8f4
   14002a8f1:	xor    eax,eax
   14002a8f3:	ret    
   14002a8f4:	or     r9d,0xffffffff
   14002a8f8:	jmp    0x14002a90a
   14002a8fa:	mov    al,BYTE PTR [rcx]
   14002a8fc:	test   al,al
   14002a8fe:	je     0x14002a90f
   14002a900:	cmp    al,BYTE PTR [rdx]
   14002a902:	jne    0x14002a90f
   14002a904:	inc    rcx
   14002a907:	inc    rdx
   14002a90a:	add    r8d,r9d
   14002a90d:	jne    0x14002a8fa
   14002a90f:	movzx  eax,BYTE PTR [rcx]
   14002a912:	movzx  ecx,BYTE PTR [rdx]
   14002a915:	sub    eax,ecx
   14002a917:	ret    
   14002a918:	mov    QWORD PTR [rsp+0x8],rbx
   14002a91d:	mov    QWORD PTR [rsp+0x10],rsi
   14002a922:	mov    QWORD PTR [rsp+0x18],rdi
   14002a927:	push   r14
   14002a929:	sub    rsp,0xe0
   14002a930:	mov    rbx,r9
   14002a933:	mov    edi,r8d
   14002a936:	mov    rsi,rdx
   14002a939:	mov    r14,rcx
   14002a93c:	test   r9,r9
   14002a93f:	jne    0x14002a948
   14002a941:	xor    eax,eax
   14002a943:	jmp    0x14002a9fe
   14002a948:	mov    ecx,0x5
   14002a94d:	call   0x140019720
   14002a952:	test   eax,eax
   14002a954:	je     0x14002a941
   14002a956:	mov    ecx,0x5
   14002a95b:	call   0x140019628
   14002a960:	nop
   14002a961:	mov    QWORD PTR [rip+0x1e348],rbx        # 0x140048cb0
   14002a968:	mov    rax,QWORD PTR [rsp+0x110]
   14002a970:	mov    QWORD PTR [rip+0x1e341],rax        # 0x140048cb8
   14002a977:	and    QWORD PTR [rip+0x1e351],0x0        # 0x140048cd0
   14002a97f:	xorps  xmm0,xmm0
   14002a982:	movdqu XMMWORD PTR [rip+0x1e336],xmm0        # 0x140048cc0
   14002a98a:	movzx  eax,WORD PTR [rsp+0x118]
   14002a992:	mov    DWORD PTR [rsp+0x28],eax
   14002a996:	and    QWORD PTR [rsp+0x20],0x0
   14002a99c:	mov    r9d,edi
   14002a99f:	mov    r8,rsi
   14002a9a2:	mov    rdx,r14
   14002a9a5:	lea    rcx,[rsp+0x30]
   14002a9aa:	call   0x140024090
   14002a9af:	lea    rcx,[rsp+0x30]
   14002a9b4:	call   0x140024384
   14002a9b9:	mov    rbx,rax
   14002a9bc:	mov    r8,QWORD PTR [rip+0x1e2f5]        # 0x140048cb8
   14002a9c3:	test   r8,r8
   14002a9c6:	je     0x14002a9f1
   14002a9c8:	mov    rcx,QWORD PTR [rip+0x1e2f1]        # 0x140048cc0
   14002a9cf:	mov    QWORD PTR [rip+0x1e2f2],rcx        # 0x140048cc8
   14002a9d6:	test   rcx,rcx
   14002a9d9:	je     0x14002a9f1
   14002a9db:	mov    rdx,QWORD PTR [rcx]
   14002a9de:	mov    QWORD PTR [rip+0x1e2db],rdx        # 0x140048cc0
   14002a9e5:	call   r8
   14002a9e8:	mov    r8,QWORD PTR [rip+0x1e2c9]        # 0x140048cb8
   14002a9ef:	jmp    0x14002a9c8
   14002a9f1:	mov    ecx,0x5
   14002a9f6:	call   0x140019844
   14002a9fb:	mov    rax,rbx
   14002a9fe:	lea    r11,[rsp+0xe0]
   14002aa06:	mov    rbx,QWORD PTR [r11+0x10]
   14002aa0a:	mov    rsi,QWORD PTR [r11+0x18]
   14002aa0e:	mov    rdi,QWORD PTR [r11+0x20]
   14002aa12:	mov    rsp,r11
   14002aa15:	pop    r14
   14002aa17:	ret    
   14002aa18:	mov    QWORD PTR [rsp+0x8],rbx
   14002aa1d:	mov    QWORD PTR [rsp+0x10],rsi
   14002aa22:	mov    QWORD PTR [rsp+0x18],rdi
   14002aa27:	push   r14
   14002aa29:	sub    rsp,0xe0
   14002aa30:	mov    rbx,r9
   14002aa33:	mov    edi,r8d
   14002aa36:	mov    rsi,rdx
   14002aa39:	mov    r14,rcx
   14002aa3c:	test   r9,r9
   14002aa3f:	jne    0x14002aa48
   14002aa41:	xor    eax,eax
   14002aa43:	jmp    0x14002ab04
   14002aa48:	mov    ecx,0x5
   14002aa4d:	call   0x140019720
   14002aa52:	test   eax,eax
   14002aa54:	je     0x14002aa41
   14002aa56:	mov    ecx,0x5
   14002aa5b:	call   0x140019628
   14002aa60:	nop
   14002aa61:	mov    QWORD PTR [rip+0x1e248],rbx        # 0x140048cb0
   14002aa68:	mov    rax,QWORD PTR [rsp+0x110]
   14002aa70:	mov    QWORD PTR [rip+0x1e241],rax        # 0x140048cb8
   14002aa77:	and    QWORD PTR [rip+0x1e251],0x0        # 0x140048cd0
   14002aa7f:	xorps  xmm0,xmm0
   14002aa82:	movdqu XMMWORD PTR [rip+0x1e236],xmm0        # 0x140048cc0
   14002aa8a:	mov    eax,DWORD PTR [rsp+0x120]
   14002aa91:	mov    DWORD PTR [rsp+0x28],eax
   14002aa95:	mov    rax,QWORD PTR [rsp+0x118]
   14002aa9d:	mov    QWORD PTR [rsp+0x20],rax
   14002aaa2:	mov    r9d,edi
   14002aaa5:	mov    r8,rsi
   14002aaa8:	mov    rdx,r14
   14002aaab:	lea    rcx,[rsp+0x30]
   14002aab0:	call   0x140024090
   14002aab5:	lea    rcx,[rsp+0x30]
   14002aaba:	call   0x140024384
   14002aabf:	mov    rbx,rax
   14002aac2:	mov    r8,QWORD PTR [rip+0x1e1ef]        # 0x140048cb8
   14002aac9:	test   r8,r8
   14002aacc:	je     0x14002aaf7
   14002aace:	mov    rcx,QWORD PTR [rip+0x1e1eb]        # 0x140048cc0
   14002aad5:	mov    QWORD PTR [rip+0x1e1ec],rcx        # 0x140048cc8
   14002aadc:	test   rcx,rcx
   14002aadf:	je     0x14002aaf7
   14002aae1:	mov    rdx,QWORD PTR [rcx]
   14002aae4:	mov    QWORD PTR [rip+0x1e1d5],rdx        # 0x140048cc0
   14002aaeb:	call   r8
   14002aaee:	mov    r8,QWORD PTR [rip+0x1e1c3]        # 0x140048cb8
   14002aaf5:	jmp    0x14002aace
   14002aaf7:	mov    ecx,0x5
   14002aafc:	call   0x140019844
   14002ab01:	mov    rax,rbx
   14002ab04:	lea    r11,[rsp+0xe0]
   14002ab0c:	mov    rbx,QWORD PTR [r11+0x10]
   14002ab10:	mov    rsi,QWORD PTR [r11+0x18]
   14002ab14:	mov    rdi,QWORD PTR [r11+0x20]
   14002ab18:	mov    rsp,r11
   14002ab1b:	pop    r14
   14002ab1d:	ret    
   14002ab1e:	int3   
   14002ab1f:	int3   
   14002ab20:	rex push rbx
   14002ab22:	push   rbp
   14002ab23:	push   rsi
   14002ab24:	push   rdi
   14002ab25:	push   r12
   14002ab27:	push   r14
   14002ab29:	push   r15
   14002ab2b:	sub    rsp,0x50
   14002ab2f:	mov    rax,QWORD PTR [rip+0x1a73a]        # 0x140045270
   14002ab36:	xor    rax,rsp
   14002ab39:	mov    QWORD PTR [rsp+0x48],rax
   14002ab3e:	mov    r15,rcx
   14002ab41:	xor    ecx,ecx
   14002ab43:	mov    ebp,r8d
   14002ab46:	mov    r12,rdx
   14002ab49:	call   QWORD PTR [rip+0xa6d1]        # 0x140035220
   14002ab4f:	xor    edi,edi
   14002ab51:	mov    rsi,rax
   14002ab54:	call   0x140019bf8
   14002ab59:	cmp    QWORD PTR [rip+0x1e1c8],rdi        # 0x140048d28
   14002ab60:	mov    r14d,eax
   14002ab63:	jne    0x14002ac61
   14002ab69:	lea    rcx,[rip+0x145f8]        # 0x14003f168
   14002ab70:	xor    edx,edx
   14002ab72:	mov    r8d,0x800
   14002ab78:	call   QWORD PTR [rip+0xa80a]        # 0x140035388
   14002ab7e:	mov    rbx,rax
   14002ab81:	test   rax,rax
   14002ab84:	jne    0x14002abb3
   14002ab86:	call   QWORD PTR [rip+0xa65c]        # 0x1400351e8
   14002ab8c:	cmp    eax,0x57
   14002ab8f:	jne    0x14002ad75
   14002ab95:	lea    rcx,[rip+0x145cc]        # 0x14003f168
   14002ab9c:	xor    r8d,r8d
   14002ab9f:	xor    edx,edx
   14002aba1:	call   QWORD PTR [rip+0xa7e1]        # 0x140035388
   14002aba7:	mov    rbx,rax
   14002abaa:	test   rax,rax
   14002abad:	je     0x14002ad75
   14002abb3:	lea    rdx,[rip+0x145c6]        # 0x14003f180
   14002abba:	mov    rcx,rbx
   14002abbd:	call   QWORD PTR [rip+0xa4f5]        # 0x1400350b8
   14002abc3:	test   rax,rax
   14002abc6:	je     0x14002ad75
   14002abcc:	mov    rcx,rax
   14002abcf:	call   QWORD PTR [rip+0xa64b]        # 0x140035220
   14002abd5:	lea    rdx,[rip+0x145b4]        # 0x14003f190
   14002abdc:	mov    rcx,rbx
   14002abdf:	mov    QWORD PTR [rip+0x1e142],rax        # 0x140048d28
   14002abe6:	call   QWORD PTR [rip+0xa4cc]        # 0x1400350b8
   14002abec:	mov    rcx,rax
   14002abef:	call   QWORD PTR [rip+0xa62b]        # 0x140035220
   14002abf5:	lea    rdx,[rip+0x145a4]        # 0x14003f1a0
   14002abfc:	mov    rcx,rbx
   14002abff:	mov    QWORD PTR [rip+0x1e12a],rax        # 0x140048d30
   14002ac06:	call   QWORD PTR [rip+0xa4ac]        # 0x1400350b8
   14002ac0c:	mov    rcx,rax
   14002ac0f:	call   QWORD PTR [rip+0xa60b]        # 0x140035220
   14002ac15:	lea    rdx,[rip+0x1459c]        # 0x14003f1b8
   14002ac1c:	mov    rcx,rbx
   14002ac1f:	mov    QWORD PTR [rip+0x1e112],rax        # 0x140048d38
   14002ac26:	call   QWORD PTR [rip+0xa48c]        # 0x1400350b8
   14002ac2c:	mov    rcx,rax
   14002ac2f:	call   QWORD PTR [rip+0xa5eb]        # 0x140035220
   14002ac35:	mov    QWORD PTR [rip+0x1e10c],rax        # 0x140048d48
   14002ac3c:	test   rax,rax
   14002ac3f:	je     0x14002ac61
   14002ac41:	lea    rdx,[rip+0x14590]        # 0x14003f1d8
   14002ac48:	mov    rcx,rbx
   14002ac4b:	call   QWORD PTR [rip+0xa467]        # 0x1400350b8
   14002ac51:	mov    rcx,rax
   14002ac54:	call   QWORD PTR [rip+0xa5c6]        # 0x140035220
   14002ac5a:	mov    QWORD PTR [rip+0x1e0df],rax        # 0x140048d40
   14002ac61:	call   QWORD PTR [rip+0xa609]        # 0x140035270
   14002ac67:	test   eax,eax
   14002ac69:	je     0x14002ac88
   14002ac6b:	test   r15,r15
   14002ac6e:	je     0x14002ac79
   14002ac70:	mov    rcx,r15
   14002ac73:	call   QWORD PTR [rip+0xa4e7]        # 0x140035160
   14002ac79:	test   r14d,r14d
   14002ac7c:	je     0x14002aca4
   14002ac7e:	mov    eax,0x4
   14002ac83:	jmp    0x14002ad77
   14002ac88:	test   r14d,r14d
   14002ac8b:	je     0x14002aca4
   14002ac8d:	mov    rcx,QWORD PTR [rip+0x1e094]        # 0x140048d28
   14002ac94:	call   QWORD PTR [rip+0xa58e]        # 0x140035228
   14002ac9a:	mov    eax,0x3
   14002ac9f:	jmp    0x14002ad77
   14002aca4:	mov    rcx,QWORD PTR [rip+0x1e095]        # 0x140048d40
   14002acab:	cmp    rcx,rsi
   14002acae:	je     0x14002ad13
   14002acb0:	cmp    QWORD PTR [rip+0x1e091],rsi        # 0x140048d48
   14002acb7:	je     0x14002ad13
   14002acb9:	call   QWORD PTR [rip+0xa569]        # 0x140035228
   14002acbf:	mov    rcx,QWORD PTR [rip+0x1e082]        # 0x140048d48
   14002acc6:	mov    rbx,rax
   14002acc9:	call   QWORD PTR [rip+0xa559]        # 0x140035228
   14002accf:	mov    r14,rax
   14002acd2:	test   rbx,rbx
   14002acd5:	je     0x14002ad13
   14002acd7:	test   rax,rax
   14002acda:	je     0x14002ad13
   14002acdc:	call   rbx
   14002acde:	test   rax,rax
   14002ace1:	je     0x14002ad0d
   14002ace3:	lea    rcx,[rsp+0x30]
   14002ace8:	mov    r9d,0xc
   14002acee:	lea    r8,[rsp+0x38]
   14002acf3:	mov    QWORD PTR [rsp+0x20],rcx
   14002acf8:	lea    edx,[r9-0xb]
   14002acfc:	mov    rcx,rax
   14002acff:	call   r14
   14002ad02:	test   eax,eax
   14002ad04:	je     0x14002ad0d
   14002ad06:	test   BYTE PTR [rsp+0x40],0x1
   14002ad0b:	jne    0x14002ad13
   14002ad0d:	bts    ebp,0x15
   14002ad11:	jmp    0x14002ad53
   14002ad13:	mov    rcx,QWORD PTR [rip+0x1e016]        # 0x140048d30
   14002ad1a:	cmp    rcx,rsi
   14002ad1d:	je     0x14002ad53
   14002ad1f:	call   QWORD PTR [rip+0xa503]        # 0x140035228
   14002ad25:	test   rax,rax
   14002ad28:	je     0x14002ad53
   14002ad2a:	call   rax
   14002ad2c:	mov    rdi,rax
   14002ad2f:	test   rax,rax
   14002ad32:	je     0x14002ad53
   14002ad34:	mov    rcx,QWORD PTR [rip+0x1dffd]        # 0x140048d38
   14002ad3b:	cmp    rcx,rsi
   14002ad3e:	je     0x14002ad53
   14002ad40:	call   QWORD PTR [rip+0xa4e2]        # 0x140035228
   14002ad46:	test   rax,rax
   14002ad49:	je     0x14002ad53
   14002ad4b:	mov    rcx,rdi
   14002ad4e:	call   rax
   14002ad50:	mov    rdi,rax
   14002ad53:	mov    rcx,QWORD PTR [rip+0x1dfce]        # 0x140048d28
   14002ad5a:	call   QWORD PTR [rip+0xa4c8]        # 0x140035228
   14002ad60:	test   rax,rax
   14002ad63:	je     0x14002ad75
   14002ad65:	mov    r9d,ebp
   14002ad68:	mov    r8,r12
   14002ad6b:	mov    rdx,r15
   14002ad6e:	mov    rcx,rdi
   14002ad71:	call   rax
   14002ad73:	jmp    0x14002ad77
   14002ad75:	xor    eax,eax
   14002ad77:	mov    rcx,QWORD PTR [rsp+0x48]
   14002ad7c:	xor    rcx,rsp
   14002ad7f:	call   0x1400097d0
   14002ad84:	add    rsp,0x50
   14002ad88:	pop    r15
   14002ad8a:	pop    r14
   14002ad8c:	pop    r12
   14002ad8e:	pop    rdi
   14002ad8f:	pop    rsi
   14002ad90:	pop    rbp
   14002ad91:	pop    rbx
   14002ad92:	ret    
   14002ad93:	int3   
   14002ad94:	rex push rbx
   14002ad96:	sub    rsp,0x20
   14002ad9a:	mov    r9d,DWORD PTR [rcx+0x18]
   14002ad9e:	mov    r8,QWORD PTR [rcx+0x10]
   14002ada2:	mov    rdx,QWORD PTR [rcx+0x8]
   14002ada6:	mov    rbx,rcx
   14002ada9:	xor    ecx,ecx
   14002adab:	call   QWORD PTR [rbx]
   14002adad:	mov    DWORD PTR [rbx+0x1c],eax
   14002adb0:	xor    eax,eax
   14002adb2:	add    rsp,0x20
   14002adb6:	pop    rbx
   14002adb7:	ret    
   14002adb8:	mov    ecx,0x2
   14002adbd:	jmp    0x140009f8c
   14002adc2:	int3   
   14002adc3:	int3   
   14002adc4:	mov    QWORD PTR [rsp+0x8],rbx
   14002adc9:	mov    QWORD PTR [rsp+0x10],rsi
   14002adce:	mov    QWORD PTR [rsp+0x18],rdi
   14002add3:	push   r15
   14002add5:	sub    rsp,0x20
   14002add9:	movsxd rax,ecx
   14002addc:	mov    rsi,rax
   14002addf:	sar    rsi,0x5
   14002ade3:	lea    r15,[rip+0x1da56]        # 0x140048840
   14002adea:	and    eax,0x1f
   14002aded:	imul   rbx,rax,0x58
   14002adf1:	mov    rdi,QWORD PTR [r15+rsi*8]
   14002adf5:	cmp    DWORD PTR [rbx+rdi*1+0xc],0x0
   14002adfa:	jne    0x14002ae30
   14002adfc:	mov    ecx,0xa
   14002ae01:	call   0x140019628
   14002ae06:	nop
   14002ae07:	cmp    DWORD PTR [rbx+rdi*1+0xc],0x0
   14002ae0c:	jne    0x14002ae26
   14002ae0e:	lea    rcx,[rbx+0x10]
   14002ae12:	add    rcx,rdi
   14002ae15:	xor    r8d,r8d
   14002ae18:	mov    edx,0xfa0
   14002ae1d:	call   0x140019bcc
   14002ae22:	inc    DWORD PTR [rbx+rdi*1+0xc]
   14002ae26:	mov    ecx,0xa
   14002ae2b:	call   0x140019844
   14002ae30:	mov    rcx,QWORD PTR [r15+rsi*8]
   14002ae34:	add    rcx,0x10
   14002ae38:	add    rcx,rbx
   14002ae3b:	call   QWORD PTR [rip+0xa41f]        # 0x140035260
   14002ae41:	mov    eax,0x1
   14002ae46:	mov    rbx,QWORD PTR [rsp+0x30]
   14002ae4b:	mov    rsi,QWORD PTR [rsp+0x38]
   14002ae50:	mov    rdi,QWORD PTR [rsp+0x40]
   14002ae55:	add    rsp,0x20
   14002ae59:	pop    r15
   14002ae5b:	ret    
   14002ae5c:	mov    rax,rsp
   14002ae5f:	mov    QWORD PTR [rax+0x8],rbx
   14002ae63:	mov    QWORD PTR [rax+0x10],rsi
   14002ae67:	mov    QWORD PTR [rax+0x18],rdi
   14002ae6b:	mov    QWORD PTR [rax+0x20],r12
   14002ae6f:	push   r13
   14002ae71:	push   r14
   14002ae73:	push   r15
   14002ae75:	sub    rsp,0x30
   14002ae79:	or     r13,0xffffffffffffffff
   14002ae7d:	mov    esi,r13d
   14002ae80:	xor    r12d,r12d
   14002ae83:	lea    ebx,[r13+0xc]
   14002ae87:	mov    ecx,ebx
   14002ae89:	call   0x140019720
   14002ae8e:	test   eax,eax
   14002ae90:	jne    0x14002ae9a
   14002ae92:	mov    eax,r13d
   14002ae95:	jmp    0x14002b035
   14002ae9a:	mov    ecx,ebx
   14002ae9c:	call   0x140019628
   14002aea1:	nop
   14002aea2:	mov    edi,r12d
   14002aea5:	mov    DWORD PTR [rsp+0x24],r12d
   14002aeaa:	lea    r14,[rip+0x1d98f]        # 0x140048840
   14002aeb1:	cmp    edi,0x40
   14002aeb4:	jge    0x14002b029
   14002aeba:	movsxd r15,edi
   14002aebd:	mov    rbx,QWORD PTR [r14+r15*8]
   14002aec1:	test   rbx,rbx
   14002aec4:	je     0x14002afa8
   14002aeca:	mov    QWORD PTR [rsp+0x28],rbx
   14002aecf:	mov    rax,QWORD PTR [r14+r15*8]
   14002aed3:	add    rax,0xb00
   14002aed9:	cmp    rbx,rax
   14002aedc:	jae    0x14002af94
   14002aee2:	test   BYTE PTR [rbx+0x8],0x1
   14002aee6:	jne    0x14002af84
   14002aeec:	cmp    DWORD PTR [rbx+0xc],r12d
   14002aef0:	jne    0x14002af21
   14002aef2:	mov    ecx,0xa
   14002aef7:	call   0x140019628
   14002aefc:	nop
   14002aefd:	cmp    DWORD PTR [rbx+0xc],r12d
   14002af01:	jne    0x14002af17
   14002af03:	lea    rcx,[rbx+0x10]
   14002af07:	xor    r8d,r8d
   14002af0a:	mov    edx,0xfa0
   14002af0f:	call   0x140019bcc
   14002af14:	inc    DWORD PTR [rbx+0xc]
   14002af17:	mov    ecx,0xa
   14002af1c:	call   0x140019844
   14002af21:	test   r12d,r12d
   14002af24:	jne    0x14002af84
   14002af26:	lea    rcx,[rbx+0x10]
   14002af2a:	call   QWORD PTR [rip+0xa330]        # 0x140035260
   14002af30:	test   BYTE PTR [rbx+0x8],0x1
   14002af34:	je     0x14002af42
   14002af36:	lea    rcx,[rbx+0x10]
   14002af3a:	call   QWORD PTR [rip+0xa328]        # 0x140035268
   14002af40:	jmp    0x14002af84
   14002af42:	lea    r14,[rip+0x1d8f7]        # 0x140048840
   14002af49:	test   r12d,r12d
   14002af4c:	jne    0x14002af84
   14002af4e:	mov    BYTE PTR [rbx+0x8],0x1
   14002af52:	mov    QWORD PTR [rbx],r13
   14002af55:	sub    rbx,QWORD PTR [r14+r15*8]
   14002af59:	movabs rax,0x2e8ba2e8ba2e8ba3
   14002af63:	imul   rbx
   14002af66:	mov    rsi,rdx
   14002af69:	sar    rsi,0x4
   14002af6d:	mov    rax,rsi
   14002af70:	shr    rax,0x3f
   14002af74:	add    rsi,rax
   14002af77:	mov    eax,edi
   14002af79:	shl    eax,0x5
   14002af7c:	add    esi,eax
   14002af7e:	mov    DWORD PTR [rsp+0x20],esi
   14002af82:	jmp    0x14002af94
   14002af84:	add    rbx,0x58
   14002af88:	lea    r14,[rip+0x1d8b1]        # 0x140048840
   14002af8f:	jmp    0x14002aeca
   14002af94:	cmp    esi,r13d
   14002af97:	jne    0x14002b029
   14002af9d:	inc    edi
   14002af9f:	mov    DWORD PTR [rsp+0x24],edi
   14002afa3:	jmp    0x14002aeb1
   14002afa8:	mov    edx,0x58
   14002afad:	lea    ecx,[rdx-0x38]
   14002afb0:	call   0x14000fbcc
   14002afb5:	mov    QWORD PTR [rsp+0x28],rax
   14002afba:	test   rax,rax
   14002afbd:	je     0x14002b029
   14002afbf:	movsxd rdx,edi
   14002afc2:	mov    QWORD PTR [r14+rdx*8],rax
   14002afc6:	add    DWORD PTR [rip+0x1dd97],0x20        # 0x140048d64
   14002afcd:	mov    rcx,QWORD PTR [r14+rdx*8]
   14002afd1:	add    rcx,0xb00
   14002afd8:	cmp    rax,rcx
   14002afdb:	jae    0x14002aff5
   14002afdd:	mov    WORD PTR [rax+0x8],0xa00
   14002afe3:	mov    QWORD PTR [rax],r13
   14002afe6:	mov    DWORD PTR [rax+0xc],r12d
   14002afea:	add    rax,0x58
   14002afee:	mov    QWORD PTR [rsp+0x28],rax
   14002aff3:	jmp    0x14002afcd
   14002aff5:	shl    edi,0x5
   14002aff8:	mov    DWORD PTR [rsp+0x20],edi
   14002affc:	movsxd rcx,edi
   14002afff:	mov    rax,rcx
   14002b002:	sar    rax,0x5
   14002b006:	and    ecx,0x1f
   14002b009:	imul   rcx,rcx,0x58
   14002b00d:	mov    rax,QWORD PTR [r14+rax*8]
   14002b011:	mov    BYTE PTR [rax+rcx*1+0x8],0x1
   14002b016:	mov    ecx,edi
   14002b018:	call   0x14002adc4
   14002b01d:	test   eax,eax
   14002b01f:	cmove  edi,r13d
   14002b023:	mov    esi,edi
   14002b025:	mov    DWORD PTR [rsp+0x20],edi
   14002b029:	mov    ecx,0xb
   14002b02e:	call   0x140019844
   14002b033:	mov    eax,esi
   14002b035:	mov    rbx,QWORD PTR [rsp+0x50]
   14002b03a:	mov    rsi,QWORD PTR [rsp+0x58]
   14002b03f:	mov    rdi,QWORD PTR [rsp+0x60]
   14002b044:	mov    r12,QWORD PTR [rsp+0x68]
   14002b049:	add    rsp,0x30
   14002b04d:	pop    r15
   14002b04f:	pop    r14
   14002b051:	pop    r13
   14002b053:	ret    
   14002b054:	mov    QWORD PTR [rsp+0x8],rbx
   14002b059:	mov    QWORD PTR [rsp+0x10],rdi
   14002b05e:	push   r14
   14002b060:	sub    rsp,0x20
   14002b064:	test   ecx,ecx
   14002b066:	js     0x14002b0d7
   14002b068:	cmp    ecx,DWORD PTR [rip+0x1dcf6]        # 0x140048d64
   14002b06e:	jae    0x14002b0d7
   14002b070:	movsxd rax,ecx
   14002b073:	lea    r14,[rip+0x1d7c6]        # 0x140048840
   14002b07a:	mov    rdi,rax
   14002b07d:	and    eax,0x1f
   14002b080:	sar    rdi,0x5
   14002b084:	imul   rbx,rax,0x58
   14002b088:	mov    rax,QWORD PTR [r14+rdi*8]
   14002b08c:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   14002b091:	je     0x14002b0d7
   14002b093:	cmp    QWORD PTR [rax+rbx*1],0xffffffffffffffff
   14002b098:	je     0x14002b0d7
   14002b09a:	cmp    DWORD PTR [rip+0x1d12f],0x1        # 0x1400481d0
   14002b0a1:	jne    0x14002b0ca
   14002b0a3:	test   ecx,ecx
   14002b0a5:	je     0x14002b0bd
   14002b0a7:	dec    ecx
   14002b0a9:	je     0x14002b0b6
   14002b0ab:	dec    ecx
   14002b0ad:	jne    0x14002b0ca
   14002b0af:	mov    ecx,0xfffffff4
   14002b0b4:	jmp    0x14002b0c2
   14002b0b6:	mov    ecx,0xfffffff5
   14002b0bb:	jmp    0x14002b0c2
   14002b0bd:	mov    ecx,0xfffffff6
   14002b0c2:	xor    edx,edx
   14002b0c4:	call   QWORD PTR [rip+0xa08e]        # 0x140035158
   14002b0ca:	mov    rax,QWORD PTR [r14+rdi*8]
   14002b0ce:	or     QWORD PTR [rbx+rax*1],0xffffffffffffffff
   14002b0d3:	xor    eax,eax
   14002b0d5:	jmp    0x14002b0ed
   14002b0d7:	call   0x14000b9f0
   14002b0dc:	mov    DWORD PTR [rax],0x9
   14002b0e2:	call   0x14000b980
   14002b0e7:	and    DWORD PTR [rax],0x0
   14002b0ea:	or     eax,0xffffffff
   14002b0ed:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b0f2:	mov    rdi,QWORD PTR [rsp+0x38]
   14002b0f7:	add    rsp,0x20
   14002b0fb:	pop    r14
   14002b0fd:	ret    
   14002b0fe:	int3   
   14002b0ff:	int3   
   14002b100:	sub    rsp,0x28
   14002b104:	cmp    ecx,0xfffffffe
   14002b107:	jne    0x14002b11e
   14002b109:	call   0x14000b980
   14002b10e:	and    DWORD PTR [rax],0x0
   14002b111:	call   0x14000b9f0
   14002b116:	mov    DWORD PTR [rax],0x9
   14002b11c:	jmp    0x14002b16b
   14002b11e:	test   ecx,ecx
   14002b120:	js     0x14002b153
   14002b122:	cmp    ecx,DWORD PTR [rip+0x1dc3c]        # 0x140048d64
   14002b128:	jae    0x14002b153
   14002b12a:	movsxd rcx,ecx
   14002b12d:	lea    r8,[rip+0x1d70c]        # 0x140048840
   14002b134:	mov    rax,rcx
   14002b137:	and    ecx,0x1f
   14002b13a:	sar    rax,0x5
   14002b13e:	imul   rdx,rcx,0x58
   14002b142:	mov    rax,QWORD PTR [r8+rax*8]
   14002b146:	test   BYTE PTR [rax+rdx*1+0x8],0x1
   14002b14b:	je     0x14002b153
   14002b14d:	mov    rax,QWORD PTR [rax+rdx*1]
   14002b151:	jmp    0x14002b16f
   14002b153:	call   0x14000b980
   14002b158:	and    DWORD PTR [rax],0x0
   14002b15b:	call   0x14000b9f0
   14002b160:	mov    DWORD PTR [rax],0x9
   14002b166:	call   0x14000b8b8
   14002b16b:	or     rax,0xffffffffffffffff
   14002b16f:	add    rsp,0x28
   14002b173:	ret    
   14002b174:	mov    rax,rsp
   14002b177:	mov    QWORD PTR [rax+0x8],rbx
   14002b17b:	mov    QWORD PTR [rax+0x18],rsi
   14002b17f:	mov    QWORD PTR [rax+0x20],rdi
   14002b183:	push   r14
   14002b185:	sub    rsp,0x30
   14002b189:	mov    rsi,rcx
   14002b18c:	xor    r14d,r14d
   14002b18f:	mov    DWORD PTR [rax-0x18],r14d
   14002b193:	test   dl,0x8
   14002b196:	movzx  ebx,r14b
   14002b19a:	lea    eax,[r14+0x20]
   14002b19e:	cmovne ebx,eax
   14002b1a1:	bt     edx,0xe
   14002b1a5:	jae    0x14002b1aa
   14002b1a7:	or     bl,0x80
   14002b1aa:	test   dl,dl
   14002b1ac:	jns    0x14002b1b1
   14002b1ae:	or     bl,0x10
   14002b1b1:	call   QWORD PTR [rip+0xa1e1]        # 0x140035398
   14002b1b7:	test   eax,eax
   14002b1b9:	jne    0x14002b1d0
   14002b1bb:	call   QWORD PTR [rip+0xa027]        # 0x1400351e8
   14002b1c1:	mov    ecx,eax
   14002b1c3:	call   0x14000b9a0
   14002b1c8:	or     eax,0xffffffff
   14002b1cb:	jmp    0x14002b258
   14002b1d0:	cmp    eax,0x2
   14002b1d3:	jne    0x14002b1da
   14002b1d5:	or     bl,0x40
   14002b1d8:	jmp    0x14002b1e2
   14002b1da:	cmp    eax,0x3
   14002b1dd:	jne    0x14002b1e2
   14002b1df:	or     bl,0x8
   14002b1e2:	call   0x14002ae5c
   14002b1e7:	movsxd rdi,eax
   14002b1ea:	mov    DWORD PTR [rsp+0x48],edi
   14002b1ee:	cmp    edi,0xffffffff
   14002b1f1:	jne    0x14002b208
   14002b1f3:	call   0x14000b9f0
   14002b1f8:	mov    DWORD PTR [rax],0x18
   14002b1fe:	call   0x14000b980
   14002b203:	mov    DWORD PTR [rax],r14d
   14002b206:	jmp    0x14002b1c8
   14002b208:	mov    rdx,rsi
   14002b20b:	mov    ecx,edi
   14002b20d:	call   0x14002b270
   14002b212:	or     bl,0x1
   14002b215:	mov    rax,rdi
   14002b218:	mov    rdx,rdi
   14002b21b:	sar    rdx,0x5
   14002b21f:	lea    r8,[rip+0x1d61a]        # 0x140048840
   14002b226:	and    eax,0x1f
   14002b229:	imul   rcx,rax,0x58
   14002b22d:	mov    rax,QWORD PTR [r8+rdx*8]
   14002b231:	mov    BYTE PTR [rcx+rax*1+0x8],bl
   14002b235:	mov    rax,QWORD PTR [r8+rdx*8]
   14002b239:	and    BYTE PTR [rcx+rax*1+0x38],0x80
   14002b23e:	mov    rax,QWORD PTR [r8+rdx*8]
   14002b242:	and    BYTE PTR [rcx+rax*1+0x38],0x7f
   14002b247:	mov    DWORD PTR [rsp+0x20],0x1
   14002b24f:	mov    ecx,edi
   14002b251:	call   0x14002b320
   14002b256:	mov    eax,edi
   14002b258:	mov    rbx,QWORD PTR [rsp+0x40]
   14002b25d:	mov    rsi,QWORD PTR [rsp+0x50]
   14002b262:	mov    rdi,QWORD PTR [rsp+0x58]
   14002b267:	add    rsp,0x30
   14002b26b:	pop    r14
   14002b26d:	ret    
   14002b26e:	int3   
   14002b26f:	int3   
   14002b270:	mov    QWORD PTR [rsp+0x8],rbx
   14002b275:	mov    QWORD PTR [rsp+0x10],rsi
   14002b27a:	mov    QWORD PTR [rsp+0x18],rdi
   14002b27f:	push   r14
   14002b281:	sub    rsp,0x20
   14002b285:	mov    rbx,rdx
   14002b288:	test   ecx,ecx
   14002b28a:	js     0x14002b2f1
   14002b28c:	cmp    ecx,DWORD PTR [rip+0x1dad2]        # 0x140048d64
   14002b292:	jae    0x14002b2f1
   14002b294:	movsxd rax,ecx
   14002b297:	lea    r14,[rip+0x1d5a2]        # 0x140048840
   14002b29e:	mov    rdi,rax
   14002b2a1:	and    eax,0x1f
   14002b2a4:	sar    rdi,0x5
   14002b2a8:	imul   rsi,rax,0x58
   14002b2ac:	mov    rax,QWORD PTR [r14+rdi*8]
   14002b2b0:	cmp    QWORD PTR [rsi+rax*1],0xffffffffffffffff
   14002b2b5:	jne    0x14002b2f1
   14002b2b7:	cmp    DWORD PTR [rip+0x1cf12],0x1        # 0x1400481d0
   14002b2be:	jne    0x14002b2e5
   14002b2c0:	test   ecx,ecx
   14002b2c2:	je     0x14002b2da
   14002b2c4:	dec    ecx
   14002b2c6:	je     0x14002b2d3
   14002b2c8:	dec    ecx
   14002b2ca:	jne    0x14002b2e5
   14002b2cc:	mov    ecx,0xfffffff4
   14002b2d1:	jmp    0x14002b2df
   14002b2d3:	mov    ecx,0xfffffff5
   14002b2d8:	jmp    0x14002b2df
   14002b2da:	mov    ecx,0xfffffff6
   14002b2df:	call   QWORD PTR [rip+0x9e73]        # 0x140035158
   14002b2e5:	mov    rax,QWORD PTR [r14+rdi*8]
   14002b2e9:	mov    QWORD PTR [rsi+rax*1],rbx
   14002b2ed:	xor    eax,eax
   14002b2ef:	jmp    0x14002b307
   14002b2f1:	call   0x14000b9f0
   14002b2f6:	mov    DWORD PTR [rax],0x9
   14002b2fc:	call   0x14000b980
   14002b301:	and    DWORD PTR [rax],0x0
   14002b304:	or     eax,0xffffffff
   14002b307:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b30c:	mov    rsi,QWORD PTR [rsp+0x38]
   14002b311:	mov    rdi,QWORD PTR [rsp+0x40]
   14002b316:	add    rsp,0x20
   14002b31a:	pop    r14
   14002b31c:	ret    
   14002b31d:	int3   
   14002b31e:	int3   
   14002b31f:	int3   
   14002b320:	movsxd rdx,ecx
   14002b323:	lea    r8,[rip+0x1d516]        # 0x140048840
   14002b32a:	mov    rax,rdx
   14002b32d:	and    edx,0x1f
   14002b330:	sar    rax,0x5
   14002b334:	imul   rcx,rdx,0x58
   14002b338:	mov    rax,QWORD PTR [r8+rax*8]
   14002b33c:	add    rcx,0x10
   14002b340:	add    rcx,rax
   14002b343:	rex.W jmp QWORD PTR [rip+0x9f1e]        # 0x140035268
   14002b34a:	int3   
   14002b34b:	int3   
   14002b34c:	rex push rbx
   14002b34e:	sub    rsp,0x20
   14002b352:	movzx  ebx,cx
   14002b355:	mov    ecx,0x3
   14002b35a:	call   0x140019628
   14002b35f:	nop
   14002b360:	movzx  ecx,bx
   14002b363:	call   0x14002b380
   14002b368:	movzx  ebx,ax
   14002b36b:	mov    ecx,0x3
   14002b370:	call   0x140019844
   14002b375:	movzx  eax,bx
   14002b378:	add    rsp,0x20
   14002b37c:	pop    rbx
   14002b37d:	ret    
   14002b37e:	int3   
   14002b37f:	int3   
   14002b380:	mov    WORD PTR [rsp+0x8],cx
   14002b385:	sub    rsp,0x38
   14002b389:	mov    rcx,QWORD PTR [rip+0x1b1a0]        # 0x140046530
   14002b390:	cmp    rcx,0xfffffffffffffffe
   14002b394:	jne    0x14002b3a2
   14002b396:	call   0x14002cd10
   14002b39b:	mov    rcx,QWORD PTR [rip+0x1b18e]        # 0x140046530
   14002b3a2:	cmp    rcx,0xffffffffffffffff
   14002b3a6:	jne    0x14002b3af
   14002b3a8:	mov    eax,0xffff
   14002b3ad:	jmp    0x14002b3d4
   14002b3af:	and    QWORD PTR [rsp+0x20],0x0
   14002b3b5:	lea    r9,[rsp+0x48]
   14002b3ba:	lea    rdx,[rsp+0x40]
   14002b3bf:	mov    r8d,0x1
   14002b3c5:	call   QWORD PTR [rip+0x9d85]        # 0x140035150
   14002b3cb:	test   eax,eax
   14002b3cd:	je     0x14002b3a8
   14002b3cf:	movzx  eax,WORD PTR [rsp+0x40]
   14002b3d4:	add    rsp,0x38
   14002b3d8:	ret    
   14002b3d9:	int3   
   14002b3da:	int3   
   14002b3db:	int3   
   14002b3dc:	mov    QWORD PTR [rsp+0x8],rbx
   14002b3e1:	mov    QWORD PTR [rsp+0x10],rbp
   14002b3e6:	mov    QWORD PTR [rsp+0x18],rsi
   14002b3eb:	push   rdi
   14002b3ec:	sub    rsp,0x60
   14002b3f0:	mov    rbx,r9
   14002b3f3:	mov    edi,r8d
   14002b3f6:	mov    esi,edx
   14002b3f8:	mov    rbp,rcx
   14002b3fb:	call   0x140019bf8
   14002b400:	test   eax,eax
   14002b402:	je     0x14002b47f
   14002b404:	lea    rcx,[rip+0xd4d5]        # 0x1400388e0
   14002b40b:	call   QWORD PTR [rip+0x9c67]        # 0x140035078
   14002b411:	lea    rdx,[rip+0x13dd8]        # 0x14003f1f0
   14002b418:	mov    rcx,rax
   14002b41b:	call   QWORD PTR [rip+0x9c97]        # 0x1400350b8
   14002b421:	mov    r10,rax
   14002b424:	test   rax,rax
   14002b427:	jne    0x14002b432
   14002b429:	or     rax,0xffffffffffffffff
   14002b42d:	jmp    0x14002b4b3
   14002b432:	mov    eax,DWORD PTR [rsp+0x98]
   14002b439:	mov    r9d,DWORD PTR [rsp+0x90]
   14002b441:	and    DWORD PTR [rsp+0x4c],0x0
   14002b446:	and    QWORD PTR [rsp+0x58],0x0
   14002b44c:	mov    DWORD PTR [rsp+0x44],eax
   14002b450:	mov    eax,DWORD PTR [rsp+0xa0]
   14002b457:	mov    DWORD PTR [rsp+0x48],eax
   14002b45b:	lea    rax,[rsp+0x40]
   14002b460:	mov    r8d,edi
   14002b463:	mov    edx,esi
   14002b465:	mov    rcx,rbp
   14002b468:	mov    DWORD PTR [rsp+0x40],0x20
   14002b470:	mov    QWORD PTR [rsp+0x20],rax
   14002b475:	mov    QWORD PTR [rsp+0x50],rbx
   14002b47a:	call   r10
   14002b47d:	jmp    0x14002b4b3
   14002b47f:	and    QWORD PTR [rsp+0x30],0x0
   14002b485:	mov    eax,DWORD PTR [rsp+0x98]
   14002b48c:	mov    r9,rbx
   14002b48f:	or     eax,DWORD PTR [rsp+0xa0]
   14002b496:	mov    r8d,edi
   14002b499:	mov    edx,esi
   14002b49b:	mov    DWORD PTR [rsp+0x28],eax
   14002b49f:	mov    eax,DWORD PTR [rsp+0x90]
   14002b4a6:	mov    rcx,rbp
   14002b4a9:	mov    DWORD PTR [rsp+0x20],eax
   14002b4ad:	call   QWORD PTR [rip+0x9c95]        # 0x140035148
   14002b4b3:	lea    r11,[rsp+0x60]
   14002b4b8:	mov    rbx,QWORD PTR [r11+0x10]
   14002b4bc:	mov    rbp,QWORD PTR [r11+0x18]
   14002b4c0:	mov    rsi,QWORD PTR [r11+0x20]
   14002b4c4:	mov    rsp,r11
   14002b4c7:	pop    rdi
   14002b4c8:	ret    
   14002b4c9:	int3   
   14002b4ca:	int3   
   14002b4cb:	int3   
   14002b4cc:	mov    rax,rsp
   14002b4cf:	mov    DWORD PTR [rax+0x10],edx
   14002b4d2:	mov    QWORD PTR [rax+0x18],r8
   14002b4d6:	mov    QWORD PTR [rax+0x20],r9
   14002b4da:	push   rbx
   14002b4db:	sub    rsp,0x50
   14002b4df:	or     DWORD PTR [rax-0x18],0xffffffff
   14002b4e3:	and    DWORD PTR [rax-0x10],0x0
   14002b4e7:	and    DWORD PTR [rax-0x14],0x0
   14002b4eb:	xor    r8d,r8d
   14002b4ee:	test   rcx,rcx
   14002b4f1:	setne  r8b
   14002b4f5:	test   r8d,r8d
   14002b4f8:	jne    0x14002b512
   14002b4fa:	call   0x14000b9f0
   14002b4ff:	mov    DWORD PTR [rax],0x16
   14002b505:	call   0x14000b8b8
   14002b50a:	or     eax,0xffffffff
   14002b50d:	jmp    0x14002b597
   14002b512:	lea    rax,[rsp+0x70]
   14002b517:	add    rax,0x8
   14002b51b:	mov    r8d,DWORD PTR [rax-0x8]
   14002b51f:	and    DWORD PTR [rsp+0x30],0x0
   14002b524:	mov    DWORD PTR [rsp+0x28],r8d
   14002b529:	mov    DWORD PTR [rsp+0x20],0x40
   14002b531:	mov    r9d,edx
   14002b534:	mov    r8,rcx
   14002b537:	lea    rdx,[rsp+0x40]
   14002b53c:	lea    rcx,[rsp+0x44]
   14002b541:	call   0x14002b6c4
   14002b546:	mov    ebx,eax
   14002b548:	mov    DWORD PTR [rsp+0x48],eax
   14002b54c:	cmp    DWORD PTR [rsp+0x44],0x0
   14002b551:	je     0x14002b583
   14002b553:	test   eax,eax
   14002b555:	je     0x14002b57a
   14002b557:	movsxd rcx,DWORD PTR [rsp+0x40]
   14002b55c:	mov    rax,rcx
   14002b55f:	sar    rax,0x5
   14002b563:	lea    rdx,[rip+0x1d2d6]        # 0x140048840
   14002b56a:	and    ecx,0x1f
   14002b56d:	imul   rcx,rcx,0x58
   14002b571:	mov    rax,QWORD PTR [rdx+rax*8]
   14002b575:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   14002b57a:	mov    ecx,DWORD PTR [rsp+0x40]
   14002b57e:	call   0x14002b320
   14002b583:	test   ebx,ebx
   14002b585:	je     0x14002b593
   14002b587:	call   0x14000b9f0
   14002b58c:	mov    DWORD PTR [rax],ebx
   14002b58e:	jmp    0x14002b50a
   14002b593:	mov    eax,DWORD PTR [rsp+0x40]
   14002b597:	add    rsp,0x50
   14002b59b:	pop    rbx
   14002b59c:	ret    
   14002b59d:	int3   
   14002b59e:	int3   
   14002b59f:	int3   
   14002b5a0:	mov    r11,rsp
   14002b5a3:	mov    DWORD PTR [r11+0x18],r8d
   14002b5a7:	mov    QWORD PTR [r11+0x20],r9
   14002b5ab:	push   rbx
   14002b5ac:	sub    rsp,0x40
   14002b5b0:	and    DWORD PTR [rsp+0x28],0x0
   14002b5b5:	lea    r9,[r11-0x18]
   14002b5b9:	lea    rax,[r11+0x20]
   14002b5bd:	mov    QWORD PTR [r11-0x28],r9
   14002b5c1:	mov    r9d,DWORD PTR [rax]
   14002b5c4:	or     ebx,0xffffffff
   14002b5c7:	mov    DWORD PTR [rsp+0x30],ebx
   14002b5cb:	call   0x14002b5e4
   14002b5d0:	mov    ecx,DWORD PTR [rsp+0x30]
   14002b5d4:	test   eax,eax
   14002b5d6:	cmovne ecx,ebx
   14002b5d9:	mov    eax,ecx
   14002b5db:	add    rsp,0x40
   14002b5df:	pop    rbx
   14002b5e0:	ret    
   14002b5e1:	int3   
   14002b5e2:	int3   
   14002b5e3:	int3   
   14002b5e4:	mov    QWORD PTR [rsp+0x8],rbx
   14002b5e9:	push   rdi
   14002b5ea:	sub    rsp,0x50
   14002b5ee:	mov    r10d,r8d
   14002b5f1:	mov    r8,rcx
   14002b5f4:	and    DWORD PTR [rsp+0x44],0x0
   14002b5f9:	and    DWORD PTR [rsp+0x40],0x0
   14002b5fe:	xor    eax,eax
   14002b600:	mov    rbx,QWORD PTR [rsp+0x80]
   14002b608:	test   rbx,rbx
   14002b60b:	setne  al
   14002b60e:	test   eax,eax
   14002b610:	jne    0x14002b62a
   14002b612:	call   0x14000b9f0
   14002b617:	mov    ebx,0x16
   14002b61c:	mov    DWORD PTR [rax],ebx
   14002b61e:	call   0x14000b8b8
   14002b623:	mov    eax,ebx
   14002b625:	jmp    0x14002b6b7
   14002b62a:	or     DWORD PTR [rbx],0xffffffff
   14002b62d:	xor    eax,eax
   14002b62f:	test   rcx,rcx
   14002b632:	setne  al
   14002b635:	test   eax,eax
   14002b637:	je     0x14002b612
   14002b639:	mov    ecx,DWORD PTR [rsp+0x88]
   14002b640:	test   ecx,ecx
   14002b642:	je     0x14002b657
   14002b644:	test   r9d,0xfffffe7f
   14002b64b:	mov    eax,0x0
   14002b650:	sete   al
   14002b653:	test   eax,eax
   14002b655:	je     0x14002b612
   14002b657:	mov    DWORD PTR [rsp+0x30],ecx
   14002b65b:	mov    DWORD PTR [rsp+0x28],r9d
   14002b660:	mov    DWORD PTR [rsp+0x20],r10d
   14002b665:	mov    r9d,edx
   14002b668:	mov    rdx,rbx
   14002b66b:	lea    rcx,[rsp+0x40]
   14002b670:	call   0x14002b6c4
   14002b675:	mov    edi,eax
   14002b677:	mov    DWORD PTR [rsp+0x44],eax
   14002b67b:	cmp    DWORD PTR [rsp+0x40],0x0
   14002b680:	je     0x14002b6ae
   14002b682:	test   eax,eax
   14002b684:	je     0x14002b6a7
   14002b686:	movsxd rcx,DWORD PTR [rbx]
   14002b689:	mov    rax,rcx
   14002b68c:	sar    rax,0x5
   14002b690:	lea    rdx,[rip+0x1d1a9]        # 0x140048840
   14002b697:	and    ecx,0x1f
   14002b69a:	imul   rcx,rcx,0x58
   14002b69e:	mov    rax,QWORD PTR [rdx+rax*8]
   14002b6a2:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   14002b6a7:	mov    ecx,DWORD PTR [rbx]
   14002b6a9:	call   0x14002b320
   14002b6ae:	test   edi,edi
   14002b6b0:	je     0x14002b6b5
   14002b6b2:	or     DWORD PTR [rbx],0xffffffff
   14002b6b5:	mov    eax,edi
   14002b6b7:	mov    rbx,QWORD PTR [rsp+0x60]
   14002b6bc:	add    rsp,0x50
   14002b6c0:	pop    rdi
   14002b6c1:	ret    
   14002b6c2:	int3   
   14002b6c3:	int3   
   14002b6c4:	mov    rax,rsp
   14002b6c7:	mov    QWORD PTR [rax+0x10],rbx
   14002b6cb:	mov    QWORD PTR [rax+0x18],r8
   14002b6cf:	mov    QWORD PTR [rax+0x8],rcx
   14002b6d3:	push   rbp
   14002b6d4:	push   rsi
   14002b6d5:	push   rdi
   14002b6d6:	push   r12
   14002b6d8:	push   r13
   14002b6da:	push   r14
   14002b6dc:	push   r15
   14002b6de:	lea    rbp,[rax-0x47]
   14002b6e2:	sub    rsp,0x90
   14002b6e9:	xor    edi,edi
   14002b6eb:	mov    r15b,0x80
   14002b6ee:	mov    esi,r9d
   14002b6f1:	mov    rbx,rdx
   14002b6f4:	mov    DWORD PTR [rbp-0x11],0x18
   14002b6fb:	lea    r14d,[rdi+0x1]
   14002b6ff:	mov    DWORD PTR [rbp-0x21],edi
   14002b702:	mov    BYTE PTR [rbp+0x67],dil
   14002b706:	mov    QWORD PTR [rbp-0x9],rdi
   14002b70a:	test   r15b,r9b
   14002b70d:	je     0x14002b717
   14002b70f:	mov    DWORD PTR [rbp-0x1],edi
   14002b712:	mov    r12b,0x10
   14002b715:	jmp    0x14002b71e
   14002b717:	mov    DWORD PTR [rbp-0x1],r14d
   14002b71b:	mov    r12b,dil
   14002b71e:	lea    rcx,[rbp-0x21]
   14002b722:	call   0x14002d978
   14002b727:	test   eax,eax
   14002b729:	jne    0x14002be66
   14002b72f:	mov    eax,0x8000
   14002b734:	test   eax,esi
   14002b736:	jne    0x14002b748
   14002b738:	test   esi,0x74000
   14002b73e:	jne    0x14002b745
   14002b740:	cmp    DWORD PTR [rbp-0x21],eax
   14002b743:	je     0x14002b748
   14002b745:	or     r12b,r15b
   14002b748:	mov    ecx,esi
   14002b74a:	mov    r9d,0x3
   14002b750:	mov    eax,0xc0000000
   14002b755:	mov    edx,0x80000000
   14002b75a:	and    ecx,r9d
   14002b75d:	je     0x14002b7ba
   14002b75f:	dec    ecx
   14002b761:	je     0x14002b7a4
   14002b763:	dec    ecx
   14002b765:	je     0x14002b79f
   14002b767:	call   0x14000b980
   14002b76c:	mov    DWORD PTR [rax],edi
   14002b76e:	or     DWORD PTR [rbx],0xffffffff
   14002b771:	call   0x14000b9f0
   14002b776:	mov    ebx,0x16
   14002b77b:	mov    DWORD PTR [rax],ebx
   14002b77d:	call   0x14000b8b8
   14002b782:	mov    eax,ebx
   14002b784:	mov    rbx,QWORD PTR [rsp+0xd8]
   14002b78c:	add    rsp,0x90
   14002b793:	pop    r15
   14002b795:	pop    r14
   14002b797:	pop    r13
   14002b799:	pop    r12
   14002b79b:	pop    rdi
   14002b79c:	pop    rsi
   14002b79d:	pop    rbp
   14002b79e:	ret    
   14002b79f:	mov    r13d,eax
   14002b7a2:	jmp    0x14002b7bd
   14002b7a4:	test   sil,0x8
   14002b7a8:	je     0x14002b7b2
   14002b7aa:	test   esi,0x70000
   14002b7b0:	jne    0x14002b79f
   14002b7b2:	mov    r13d,0x40000000
   14002b7b8:	jmp    0x14002b7bd
   14002b7ba:	mov    r13d,edx
   14002b7bd:	mov    ecx,DWORD PTR [rbp+0x6f]
   14002b7c0:	mov    DWORD PTR [rbp-0x41],r13d
   14002b7c4:	mov    r15d,0x2
   14002b7ca:	sub    ecx,0x10
   14002b7cd:	je     0x14002b7fc
   14002b7cf:	sub    ecx,0x10
   14002b7d2:	je     0x14002b7f7
   14002b7d4:	sub    ecx,0x10
   14002b7d7:	je     0x14002b7f2
   14002b7d9:	sub    ecx,0x10
   14002b7dc:	je     0x14002b7ed
   14002b7de:	cmp    ecx,0x40
   14002b7e1:	jne    0x14002b767
   14002b7e3:	cmp    r13d,edx
   14002b7e6:	mov    ecx,edi
   14002b7e8:	sete   cl
   14002b7eb:	jmp    0x14002b7fe
   14002b7ed:	mov    ecx,r9d
   14002b7f0:	jmp    0x14002b7fe
   14002b7f2:	mov    ecx,r15d
   14002b7f5:	jmp    0x14002b7fe
   14002b7f7:	mov    ecx,r14d
   14002b7fa:	jmp    0x14002b7fe
   14002b7fc:	mov    ecx,edi
   14002b7fe:	mov    eax,esi
   14002b800:	mov    edx,0x700
   14002b805:	mov    DWORD PTR [rbp-0x3d],ecx
   14002b808:	mov    r8d,0x100
   14002b80e:	and    eax,edx
   14002b810:	je     0x14002b858
   14002b812:	cmp    eax,r8d
   14002b815:	je     0x14002b850
   14002b817:	cmp    eax,0x200
   14002b81c:	je     0x14002b848
   14002b81e:	cmp    eax,0x300
   14002b823:	je     0x14002b843
   14002b825:	cmp    eax,0x400
   14002b82a:	je     0x14002b858
   14002b82c:	cmp    eax,0x500
   14002b831:	je     0x14002b85b
   14002b833:	cmp    eax,0x600
   14002b838:	je     0x14002b848
   14002b83a:	cmp    eax,edx
   14002b83c:	je     0x14002b85b
   14002b83e:	jmp    0x14002b767
   14002b843:	mov    r14d,r15d
   14002b846:	jmp    0x14002b85b
   14002b848:	mov    r14d,0x5
   14002b84e:	jmp    0x14002b85b
   14002b850:	mov    r14d,0x4
   14002b856:	jmp    0x14002b85b
   14002b858:	mov    r14d,r9d
   14002b85b:	mov    edx,0x80
   14002b860:	mov    eax,edi
   14002b862:	mov    DWORD PTR [rbp-0x31],edx
   14002b865:	mov    DWORD PTR [rbp-0x39],eax
   14002b868:	test   r8d,esi
   14002b86b:	je     0x14002b885
   14002b86d:	mov    al,BYTE PTR [rip+0x1c0f5]        # 0x140047968
   14002b873:	not    al
   14002b875:	and    al,BYTE PTR [rbp+0x77]
   14002b878:	test   al,0x80
   14002b87a:	lea    eax,[rdx-0x7f]
   14002b87d:	cmove  edx,eax
   14002b880:	mov    eax,edi
   14002b882:	mov    DWORD PTR [rbp-0x31],edx
   14002b885:	test   sil,0x40
   14002b889:	je     0x14002b8a2
   14002b88b:	bts    r13d,0x10
   14002b890:	mov    eax,0x4000000
   14002b895:	or     ecx,0x4
   14002b898:	mov    DWORD PTR [rbp-0x3d],ecx
   14002b89b:	mov    DWORD PTR [rbp-0x39],eax
   14002b89e:	mov    DWORD PTR [rbp-0x41],r13d
   14002b8a2:	bt     esi,0xc
   14002b8a6:	jae    0x14002b8ae
   14002b8a8:	or     edx,r8d
   14002b8ab:	mov    DWORD PTR [rbp-0x31],edx
   14002b8ae:	bt     esi,0xd
   14002b8b2:	jae    0x14002b8bb
   14002b8b4:	bts    eax,0x19
   14002b8b8:	mov    DWORD PTR [rbp-0x39],eax
   14002b8bb:	test   sil,0x20
   14002b8bf:	je     0x14002b8c7
   14002b8c1:	bts    eax,0x1b
   14002b8c5:	jmp    0x14002b8d1
   14002b8c7:	test   sil,0x10
   14002b8cb:	je     0x14002b8d4
   14002b8cd:	bts    eax,0x1c
   14002b8d1:	mov    DWORD PTR [rbp-0x39],eax
   14002b8d4:	call   0x14002ae5c
   14002b8d9:	mov    DWORD PTR [rbx],eax
   14002b8db:	cmp    eax,0xffffffff
   14002b8de:	jne    0x14002b901
   14002b8e0:	call   0x14000b980
   14002b8e5:	mov    DWORD PTR [rax],edi
   14002b8e7:	or     DWORD PTR [rbx],0xffffffff
   14002b8ea:	call   0x14000b9f0
   14002b8ef:	mov    DWORD PTR [rax],0x18
   14002b8f5:	call   0x14000b9f0
   14002b8fa:	mov    eax,DWORD PTR [rax]
   14002b8fc:	jmp    0x14002b784
   14002b901:	mov    rax,QWORD PTR [rbp+0x4f]
   14002b905:	mov    r8d,DWORD PTR [rbp-0x3d]
   14002b909:	mov    rcx,QWORD PTR [rbp+0x5f]
   14002b90d:	mov    DWORD PTR [rax],0x1
   14002b913:	mov    eax,DWORD PTR [rbp-0x39]
   14002b916:	lea    r9,[rbp-0x11]
   14002b91a:	mov    DWORD PTR [rsp+0x30],eax
   14002b91e:	mov    eax,DWORD PTR [rbp-0x31]
   14002b921:	mov    edx,r13d
   14002b924:	mov    DWORD PTR [rsp+0x28],eax
   14002b928:	mov    DWORD PTR [rsp+0x20],r14d
   14002b92d:	call   0x14002b3dc
   14002b932:	mov    QWORD PTR [rbp-0x19],rax
   14002b936:	cmp    rax,0xffffffffffffffff
   14002b93a:	jne    0x14002b9cd
   14002b940:	mov    ecx,0xc0000000
   14002b945:	mov    eax,r13d
   14002b948:	and    eax,ecx
   14002b94a:	cmp    eax,ecx
   14002b94c:	jne    0x14002b992
   14002b94e:	mov    eax,0x1
   14002b953:	test   al,sil
   14002b956:	je     0x14002b992
   14002b958:	mov    eax,DWORD PTR [rbp-0x39]
   14002b95b:	mov    r8d,DWORD PTR [rbp-0x3d]
   14002b95f:	mov    rcx,QWORD PTR [rbp+0x5f]
   14002b963:	mov    DWORD PTR [rsp+0x30],eax
   14002b967:	mov    eax,DWORD PTR [rbp-0x31]
   14002b96a:	btr    r13d,0x1f
   14002b96f:	mov    DWORD PTR [rsp+0x28],eax
   14002b973:	lea    r9,[rbp-0x11]
   14002b977:	mov    edx,r13d
   14002b97a:	mov    DWORD PTR [rsp+0x20],r14d
   14002b97f:	mov    DWORD PTR [rbp-0x41],r13d
   14002b983:	call   0x14002b3dc
   14002b988:	mov    QWORD PTR [rbp-0x19],rax
   14002b98c:	cmp    rax,0xffffffffffffffff
   14002b990:	jne    0x14002b9cd
   14002b992:	movsxd rcx,DWORD PTR [rbx]
   14002b995:	lea    r13,[rip+0x1cea4]        # 0x140048840
   14002b99c:	mov    rax,rcx
   14002b99f:	and    ecx,0x1f
   14002b9a2:	sar    rax,0x5
   14002b9a6:	imul   rcx,rcx,0x58
   14002b9aa:	mov    rax,QWORD PTR [r13+rax*8+0x0]
   14002b9af:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   14002b9b4:	call   QWORD PTR [rip+0x982e]        # 0x1400351e8
   14002b9ba:	mov    ecx,eax
   14002b9bc:	call   0x14000b9a0
   14002b9c1:	call   0x14000b9f0
   14002b9c6:	mov    edi,DWORD PTR [rax]
   14002b9c8:	jmp    0x14002be5f
   14002b9cd:	mov    rcx,rax
   14002b9d0:	call   QWORD PTR [rip+0x99c2]        # 0x140035398
   14002b9d6:	test   eax,eax
   14002b9d8:	jne    0x14002ba26
   14002b9da:	movsxd rcx,DWORD PTR [rbx]
   14002b9dd:	lea    r13,[rip+0x1ce5c]        # 0x140048840
   14002b9e4:	mov    rax,rcx
   14002b9e7:	and    ecx,0x1f
   14002b9ea:	sar    rax,0x5
   14002b9ee:	imul   rcx,rcx,0x58
   14002b9f2:	mov    rax,QWORD PTR [r13+rax*8+0x0]
   14002b9f7:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   14002b9fc:	call   QWORD PTR [rip+0x97e6]        # 0x1400351e8
   14002ba02:	mov    ecx,eax
   14002ba04:	mov    ebx,eax
   14002ba06:	call   0x14000b9a0
   14002ba0b:	mov    rcx,QWORD PTR [rbp-0x19]
   14002ba0f:	call   QWORD PTR [rip+0x97db]        # 0x1400351f0
   14002ba15:	test   ebx,ebx
   14002ba17:	jne    0x14002b9c1
   14002ba19:	call   0x14000b9f0
   14002ba1e:	mov    DWORD PTR [rax],0xd
   14002ba24:	jmp    0x14002b9c1
   14002ba26:	cmp    eax,r15d
   14002ba29:	jne    0x14002ba31
   14002ba2b:	or     r12b,0x40
   14002ba2f:	jmp    0x14002ba3a
   14002ba31:	cmp    eax,0x3
   14002ba34:	jne    0x14002ba3a
   14002ba36:	or     r12b,0x8
   14002ba3a:	mov    rdx,QWORD PTR [rbp-0x19]
   14002ba3e:	mov    ecx,DWORD PTR [rbx]
   14002ba40:	call   0x14002b270
   14002ba45:	movsxd rcx,DWORD PTR [rbx]
   14002ba48:	lea    r13,[rip+0x1cdf1]        # 0x140048840
   14002ba4f:	mov    rax,rcx
   14002ba52:	and    ecx,0x1f
   14002ba55:	mov    r8d,0x1
   14002ba5b:	sar    rax,0x5
   14002ba5f:	or     r12b,r8b
   14002ba62:	mov    rax,QWORD PTR [r13+rax*8+0x0]
   14002ba67:	imul   rcx,rcx,0x58
   14002ba6b:	mov    BYTE PTR [rax+rcx*1+0x8],r12b
   14002ba70:	movsxd rcx,DWORD PTR [rbx]
   14002ba73:	mov    rax,rcx
   14002ba76:	and    ecx,0x1f
   14002ba79:	sar    rax,0x5
   14002ba7d:	imul   rcx,rcx,0x58
   14002ba81:	mov    rax,QWORD PTR [r13+rax*8+0x0]
   14002ba86:	and    BYTE PTR [rax+rcx*1+0x38],0x80
   14002ba8b:	mov    al,r12b
   14002ba8e:	and    al,0x48
   14002ba90:	mov    BYTE PTR [rbp-0x35],al
   14002ba93:	jne    0x14002bb20
   14002ba99:	test   r12b,r12b
   14002ba9c:	jns    0x14002bd3b
   14002baa2:	test   r15b,sil
   14002baa5:	je     0x14002bb20
   14002baa7:	mov    ecx,DWORD PTR [rbx]
   14002baa9:	mov    r8d,r15d
   14002baac:	or     rdx,0xffffffffffffffff
   14002bab0:	call   0x140023290
   14002bab5:	mov    QWORD PTR [rbp-0x29],rax
   14002bab9:	cmp    rax,0xffffffffffffffff
   14002babd:	jne    0x14002bad8
   14002babf:	call   0x14000b980
   14002bac4:	cmp    DWORD PTR [rax],0x83
   14002baca:	je     0x14002bb1a
   14002bacc:	mov    ecx,DWORD PTR [rbx]
   14002bace:	call   0x14001bd68
   14002bad3:	jmp    0x14002b9c1
   14002bad8:	mov    ecx,DWORD PTR [rbx]
   14002bada:	lea    rdx,[rbp-0x2d]
   14002bade:	mov    r8d,0x1
   14002bae4:	mov    WORD PTR [rbp-0x2d],di
   14002bae8:	call   0x14002d108
   14002baed:	test   eax,eax
   14002baef:	jne    0x14002bb08
   14002baf1:	cmp    WORD PTR [rbp-0x2d],0x1a
   14002baf6:	jne    0x14002bb08
   14002baf8:	mov    rdx,QWORD PTR [rbp-0x29]
   14002bafc:	mov    ecx,DWORD PTR [rbx]
   14002bafe:	call   0x14002cd64
   14002bb03:	cmp    eax,0xffffffff
   14002bb06:	je     0x14002bacc
   14002bb08:	mov    ecx,DWORD PTR [rbx]
   14002bb0a:	xor    r8d,r8d
   14002bb0d:	xor    edx,edx
   14002bb0f:	call   0x140023290
   14002bb14:	cmp    rax,0xffffffffffffffff
   14002bb18:	je     0x14002bacc
   14002bb1a:	mov    r8d,0x1
   14002bb20:	test   r12b,r12b
   14002bb23:	jns    0x14002bd3b
   14002bb29:	mov    r9d,0x74000
   14002bb2f:	mov    edx,0x4000
   14002bb34:	test   r9d,esi
   14002bb37:	jne    0x14002bb47
   14002bb39:	mov    eax,DWORD PTR [rbp-0x21]
   14002bb3c:	and    eax,r9d
   14002bb3f:	jne    0x14002bb45
   14002bb41:	or     esi,edx
   14002bb43:	jmp    0x14002bb47
   14002bb45:	or     esi,eax
   14002bb47:	mov    ecx,esi
   14002bb49:	and    ecx,r9d
   14002bb4c:	cmp    ecx,edx
   14002bb4e:	je     0x14002bb8c
   14002bb50:	lea    eax,[rcx-0x10000]
   14002bb56:	mov    edx,0xffffbfff
   14002bb5b:	test   edx,eax
   14002bb5d:	je     0x14002bb79
   14002bb5f:	lea    eax,[rcx-0x20000]
   14002bb65:	test   edx,eax
   14002bb67:	je     0x14002bb86
   14002bb69:	lea    eax,[rcx-0x40000]
   14002bb6f:	test   edx,eax
   14002bb71:	jne    0x14002bb90
   14002bb73:	mov    BYTE PTR [rbp+0x67],r8b
   14002bb77:	jmp    0x14002bb90
   14002bb79:	mov    ecx,0x301
   14002bb7e:	mov    eax,esi
   14002bb80:	and    eax,ecx
   14002bb82:	cmp    eax,ecx
   14002bb84:	jne    0x14002bb90
   14002bb86:	mov    BYTE PTR [rbp+0x67],r15b
   14002bb8a:	jmp    0x14002bb90
   14002bb8c:	mov    BYTE PTR [rbp+0x67],dil
   14002bb90:	test   esi,0x70000
   14002bb96:	je     0x14002bd3b
   14002bb9c:	test   r12b,0x40
   14002bba0:	mov    r12d,DWORD PTR [rbp-0x41]
   14002bba4:	mov    DWORD PTR [rbp-0x29],edi
   14002bba7:	jne    0x14002bd3f
   14002bbad:	mov    eax,r12d
   14002bbb0:	mov    ecx,0xc0000000
   14002bbb5:	and    eax,ecx
   14002bbb7:	cmp    eax,0x40000000
   14002bbbc:	je     0x14002bcc0
   14002bbc2:	cmp    eax,0x80000000
   14002bbc7:	je     0x14002bc39
   14002bbc9:	cmp    eax,ecx
   14002bbcb:	jne    0x14002bd3f
   14002bbd1:	test   r14d,r14d
   14002bbd4:	je     0x14002bd3f
   14002bbda:	cmp    r14d,r15d
   14002bbdd:	jbe    0x14002bbef
   14002bbdf:	cmp    r14d,0x4
   14002bbe3:	jbe    0x14002bc12
   14002bbe5:	cmp    r14d,0x5
   14002bbe9:	jne    0x14002bd3f
   14002bbef:	movsx  ecx,BYTE PTR [rbp+0x67]
   14002bbf3:	mov    r14d,edi
   14002bbf6:	dec    ecx
   14002bbf8:	je     0x14002bd04
   14002bbfe:	dec    ecx
   14002bc00:	jne    0x14002bd3f
   14002bc06:	mov    DWORD PTR [rbp-0x29],0xfeff
   14002bc0d:	jmp    0x14002bd11
   14002bc12:	mov    ecx,DWORD PTR [rbx]
   14002bc14:	mov    r8d,r15d
   14002bc17:	xor    edx,edx
   14002bc19:	call   0x140023290
   14002bc1e:	test   rax,rax
   14002bc21:	je     0x14002bbef
   14002bc23:	mov    ecx,DWORD PTR [rbx]
   14002bc25:	xor    r8d,r8d
   14002bc28:	xor    edx,edx
   14002bc2a:	call   0x140023290
   14002bc2f:	cmp    rax,0xffffffffffffffff
   14002bc33:	je     0x14002bacc
   14002bc39:	mov    ecx,DWORD PTR [rbx]
   14002bc3b:	lea    rdx,[rbp-0x29]
   14002bc3f:	mov    r8d,0x3
   14002bc45:	call   0x14002d108
   14002bc4a:	cmp    eax,0xffffffff
   14002bc4d:	je     0x14002bacc
   14002bc53:	cmp    eax,r15d
   14002bc56:	je     0x14002bc77
   14002bc58:	cmp    eax,0x3
   14002bc5b:	jne    0x14002bced
   14002bc61:	cmp    DWORD PTR [rbp-0x29],0xbfbbef
   14002bc68:	jne    0x14002bc77
   14002bc6a:	lea    r8d,[rax-0x2]
   14002bc6e:	mov    BYTE PTR [rbp+0x67],r8b
   14002bc72:	jmp    0x14002bd45
   14002bc77:	movzx  eax,WORD PTR [rbp-0x29]
   14002bc7b:	cmp    eax,0xfffe
   14002bc80:	jne    0x14002bc9c
   14002bc82:	mov    ecx,DWORD PTR [rbx]
   14002bc84:	call   0x14001bd68
   14002bc89:	call   0x14000b9f0
   14002bc8e:	mov    ebx,0x16
   14002bc93:	mov    DWORD PTR [rax],ebx
   14002bc95:	mov    edi,ebx
   14002bc97:	jmp    0x14002be5f
   14002bc9c:	cmp    eax,0xfeff
   14002bca1:	jne    0x14002bced
   14002bca3:	mov    ecx,DWORD PTR [rbx]
   14002bca5:	xor    r8d,r8d
   14002bca8:	mov    rdx,r15
   14002bcab:	call   0x140023290
   14002bcb0:	cmp    rax,0xffffffffffffffff
   14002bcb4:	je     0x14002bacc
   14002bcba:	mov    BYTE PTR [rbp+0x67],r15b
   14002bcbe:	jmp    0x14002bd3f
   14002bcc0:	test   r14d,r14d
   14002bcc3:	je     0x14002bd3f
   14002bcc5:	cmp    r14d,r15d
   14002bcc8:	jbe    0x14002bbef
   14002bcce:	cmp    r14d,0x4
   14002bcd2:	ja     0x14002bbe5
   14002bcd8:	mov    ecx,DWORD PTR [rbx]
   14002bcda:	mov    r8d,r15d
   14002bcdd:	xor    edx,edx
   14002bcdf:	call   0x140023290
   14002bce4:	test   rax,rax
   14002bce7:	je     0x14002bbef
   14002bced:	mov    ecx,DWORD PTR [rbx]
   14002bcef:	xor    r8d,r8d
   14002bcf2:	xor    edx,edx
   14002bcf4:	call   0x140023290
   14002bcf9:	cmp    rax,0xffffffffffffffff
   14002bcfd:	jne    0x14002bd3f
   14002bcff:	jmp    0x14002bacc
   14002bd04:	mov    DWORD PTR [rbp-0x29],0xbfbbef
   14002bd0b:	mov    r15d,0x3
   14002bd11:	mov    ecx,DWORD PTR [rbx]
   14002bd13:	mov    r8d,r15d
   14002bd16:	movsxd rax,r14d
   14002bd19:	lea    rdx,[rbp-0x29]
   14002bd1d:	sub    r8d,r14d
   14002bd20:	add    rdx,rax
   14002bd23:	call   0x14001bf34
   14002bd28:	cmp    eax,0xffffffff
   14002bd2b:	je     0x14002bacc
   14002bd31:	add    r14d,eax
   14002bd34:	cmp    r15d,r14d
   14002bd37:	jg     0x14002bd11
   14002bd39:	jmp    0x14002bd3f
   14002bd3b:	mov    r12d,DWORD PTR [rbp-0x41]
   14002bd3f:	mov    r8d,0x1
   14002bd45:	movsxd rcx,DWORD PTR [rbx]
   14002bd48:	mov    rax,rcx
   14002bd4b:	and    ecx,0x1f
   14002bd4e:	sar    rax,0x5
   14002bd52:	imul   rdx,rcx,0x58
   14002bd56:	mov    rcx,QWORD PTR [r13+rax*8+0x0]
   14002bd5b:	mov    al,BYTE PTR [rbp+0x67]
   14002bd5e:	and    BYTE PTR [rcx+rdx*1+0x38],0x80
   14002bd63:	and    al,0x7f
   14002bd65:	or     BYTE PTR [rcx+rdx*1+0x38],al
   14002bd69:	movsxd rcx,DWORD PTR [rbx]
   14002bd6c:	mov    rax,rcx
   14002bd6f:	and    ecx,0x1f
   14002bd72:	sar    rax,0x5
   14002bd76:	imul   rdx,rcx,0x58
   14002bd7a:	mov    rcx,QWORD PTR [r13+rax*8+0x0]
   14002bd7f:	mov    eax,esi
   14002bd81:	and    BYTE PTR [rcx+rdx*1+0x38],0x7f
   14002bd86:	shr    eax,0x10
   14002bd89:	shl    al,0x7
   14002bd8c:	or     BYTE PTR [rcx+rdx*1+0x38],al
   14002bd90:	cmp    BYTE PTR [rbp-0x35],dil
   14002bd94:	jne    0x14002bdb7
   14002bd96:	test   sil,0x8
   14002bd9a:	je     0x14002bdb7
   14002bd9c:	movsxd rcx,DWORD PTR [rbx]
   14002bd9f:	mov    rax,rcx
   14002bda2:	and    ecx,0x1f
   14002bda5:	sar    rax,0x5
   14002bda9:	imul   rcx,rcx,0x58
   14002bdad:	mov    rax,QWORD PTR [r13+rax*8+0x0]
   14002bdb2:	or     BYTE PTR [rax+rcx*1+0x8],0x20
   14002bdb7:	mov    ecx,0xc0000000
   14002bdbc:	mov    eax,r12d
   14002bdbf:	and    eax,ecx
   14002bdc1:	cmp    eax,ecx
   14002bdc3:	jne    0x14002be5f
   14002bdc9:	test   r8b,sil
   14002bdcc:	je     0x14002be5f
   14002bdd2:	mov    rcx,QWORD PTR [rbp-0x19]
   14002bdd6:	call   QWORD PTR [rip+0x9414]        # 0x1400351f0
   14002bddc:	mov    eax,DWORD PTR [rbp-0x39]
   14002bddf:	mov    r8d,DWORD PTR [rbp-0x3d]
   14002bde3:	mov    rcx,QWORD PTR [rbp+0x5f]
   14002bde7:	mov    DWORD PTR [rsp+0x30],eax
   14002bdeb:	mov    eax,DWORD PTR [rbp-0x31]
   14002bdee:	mov    DWORD PTR [rsp+0x28],eax
   14002bdf2:	btr    r12d,0x1f
   14002bdf7:	lea    r9,[rbp-0x11]
   14002bdfb:	mov    edx,r12d
   14002bdfe:	mov    DWORD PTR [rsp+0x20],0x3
   14002be06:	call   0x14002b3dc
   14002be0b:	cmp    rax,0xffffffffffffffff
   14002be0f:	jne    0x14002be45
   14002be11:	call   QWORD PTR [rip+0x93d1]        # 0x1400351e8
   14002be17:	mov    ecx,eax
   14002be19:	call   0x14000b9a0
   14002be1e:	movsxd rcx,DWORD PTR [rbx]
   14002be21:	mov    rax,rcx
   14002be24:	and    ecx,0x1f
   14002be27:	sar    rax,0x5
   14002be2b:	imul   rcx,rcx,0x58
   14002be2f:	mov    rax,QWORD PTR [r13+rax*8+0x0]
   14002be34:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   14002be39:	mov    ecx,DWORD PTR [rbx]
   14002be3b:	call   0x14002b054
   14002be40:	jmp    0x14002b9c1
   14002be45:	movsxd rdx,DWORD PTR [rbx]
   14002be48:	mov    rcx,rdx
   14002be4b:	and    edx,0x1f
   14002be4e:	sar    rcx,0x5
   14002be52:	imul   rdx,rdx,0x58
   14002be56:	mov    rcx,QWORD PTR [r13+rcx*8+0x0]
   14002be5b:	mov    QWORD PTR [rdx+rcx*1],rax
   14002be5f:	mov    eax,edi
   14002be61:	jmp    0x14002b784
   14002be66:	xor    r9d,r9d
   14002be69:	xor    r8d,r8d
   14002be6c:	xor    edx,edx
   14002be6e:	xor    ecx,ecx
   14002be70:	mov    QWORD PTR [rsp+0x20],rdi
   14002be75:	call   0x14000b908
   14002be7a:	int3   
   14002be7b:	int3   
   14002be7c:	sub    rsp,0x38
   14002be80:	mov    eax,r9d
   14002be83:	mov    r9d,DWORD PTR [rsp+0x60]
   14002be88:	mov    r10d,r8d
   14002be8b:	mov    r11,rdx
   14002be8e:	mov    DWORD PTR [rsp+0x28],0x1
   14002be96:	mov    QWORD PTR [rsp+0x20],rcx
   14002be9b:	mov    r8d,eax
   14002be9e:	mov    edx,r10d
   14002bea1:	mov    rcx,r11
   14002bea4:	call   0x14002b5e4
   14002bea9:	add    rsp,0x38
   14002bead:	ret    
   14002beae:	int3   
   14002beaf:	int3   
   14002beb0:	sub    rsp,0x28
   14002beb4:	xor    r9d,r9d
   14002beb7:	mov    r11,r8
   14002beba:	mov    r10,rcx
   14002bebd:	cmp    DWORD PTR [rip+0x1bb30],r9d        # 0x1400479f4
   14002bec4:	jne    0x14002bf3e
   14002bec6:	test   r8,r8
   14002bec9:	je     0x14002bf36
   14002becb:	test   rcx,rcx
   14002bece:	jne    0x14002beea
   14002bed0:	call   0x14000b9f0
   14002bed5:	mov    DWORD PTR [rax],0x16
   14002bedb:	call   0x14000b8b8
   14002bee0:	mov    eax,0x7fffffff
   14002bee5:	add    rsp,0x28
   14002bee9:	ret    
   14002beea:	test   rdx,rdx
   14002beed:	je     0x14002bed0
   14002beef:	sub    r10,rdx
   14002bef2:	movzx  ecx,WORD PTR [r10+rdx*1]
   14002bef7:	lea    eax,[rcx-0x41]
   14002befa:	cmp    ax,0x19
   14002befe:	ja     0x14002bf04
   14002bf00:	add    cx,0x20
   14002bf04:	movzx  r8d,WORD PTR [rdx]
   14002bf08:	lea    eax,[r8-0x41]
   14002bf0c:	cmp    ax,0x19
   14002bf10:	ja     0x14002bf17
   14002bf12:	add    r8w,0x20
   14002bf17:	add    rdx,0x2
   14002bf1b:	dec    r11
   14002bf1e:	je     0x14002bf2b
   14002bf20:	test   cx,cx
   14002bf23:	je     0x14002bf2b
   14002bf25:	cmp    cx,r8w
   14002bf29:	je     0x14002bef2
   14002bf2b:	movzx  eax,r8w
   14002bf2f:	movzx  r9d,cx
   14002bf33:	sub    r9d,eax
   14002bf36:	mov    eax,r9d
   14002bf39:	add    rsp,0x28
   14002bf3d:	ret    
   14002bf3e:	add    rsp,0x28
   14002bf42:	jmp    0x14002bf48
   14002bf47:	int3   
   14002bf48:	mov    rax,rsp
   14002bf4b:	mov    QWORD PTR [rax+0x8],rbx
   14002bf4f:	mov    QWORD PTR [rax+0x10],rbp
   14002bf53:	mov    QWORD PTR [rax+0x18],rsi
   14002bf57:	mov    QWORD PTR [rax+0x20],rdi
   14002bf5b:	push   r14
   14002bf5d:	sub    rsp,0x40
   14002bf61:	xor    r14d,r14d
   14002bf64:	mov    rbp,r8
   14002bf67:	mov    rdi,rdx
   14002bf6a:	mov    rsi,rcx
   14002bf6d:	mov    eax,r14d
   14002bf70:	test   r8,r8
   14002bf73:	je     0x14002c043
   14002bf79:	test   rcx,rcx
   14002bf7c:	jne    0x14002bf98
   14002bf7e:	call   0x14000b9f0
   14002bf83:	mov    DWORD PTR [rax],0x16
   14002bf89:	call   0x14000b8b8
   14002bf8e:	mov    eax,0x7fffffff
   14002bf93:	jmp    0x14002c043
   14002bf98:	test   rdx,rdx
   14002bf9b:	je     0x14002bf7e
   14002bf9d:	lea    rcx,[rsp+0x20]
   14002bfa2:	mov    rdx,r9
   14002bfa5:	call   0x140007ff0
   14002bfaa:	mov    rax,QWORD PTR [rsp+0x20]
   14002bfaf:	cmp    QWORD PTR [rax+0x138],r14
   14002bfb6:	jne    0x14002bff1
   14002bfb8:	sub    rsi,rdi
   14002bfbb:	movzx  ebx,WORD PTR [rsi+rdi*1]
   14002bfbf:	lea    eax,[rbx-0x41]
   14002bfc2:	cmp    ax,0x19
   14002bfc6:	ja     0x14002bfcc
   14002bfc8:	add    bx,0x20
   14002bfcc:	movzx  ecx,WORD PTR [rdi]
   14002bfcf:	lea    eax,[rcx-0x41]
   14002bfd2:	cmp    ax,0x19
   14002bfd6:	ja     0x14002bfdc
   14002bfd8:	add    cx,0x20
   14002bfdc:	add    rdi,0x2
   14002bfe0:	dec    rbp
   14002bfe3:	je     0x14002c028
   14002bfe5:	test   bx,bx
   14002bfe8:	je     0x14002c028
   14002bfea:	cmp    bx,cx
   14002bfed:	je     0x14002bfbb
   14002bfef:	jmp    0x14002c028
   14002bff1:	movzx  ecx,WORD PTR [rsi]
   14002bff4:	lea    rdx,[rsp+0x20]
   14002bff9:	call   0x1400080b0
   14002bffe:	movzx  ecx,WORD PTR [rdi]
   14002c001:	lea    rdx,[rsp+0x20]
   14002c006:	movzx  ebx,ax
   14002c009:	call   0x1400080b0
   14002c00e:	lea    rsi,[rsi+0x2]
   14002c012:	lea    rdi,[rdi+0x2]
   14002c016:	movzx  ecx,ax
   14002c019:	dec    rbp
   14002c01c:	je     0x14002c028
   14002c01e:	test   bx,bx
   14002c021:	je     0x14002c028
   14002c023:	cmp    bx,ax
   14002c026:	je     0x14002bff1
   14002c028:	movzx  ecx,cx
   14002c02b:	movzx  eax,bx
   14002c02e:	sub    eax,ecx
   14002c030:	cmp    BYTE PTR [rsp+0x38],r14b
   14002c035:	je     0x14002c043
   14002c037:	mov    rcx,QWORD PTR [rsp+0x30]
   14002c03c:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002c043:	mov    rbx,QWORD PTR [rsp+0x50]
   14002c048:	mov    rbp,QWORD PTR [rsp+0x58]
   14002c04d:	mov    rsi,QWORD PTR [rsp+0x60]
   14002c052:	mov    rdi,QWORD PTR [rsp+0x68]
   14002c057:	add    rsp,0x40
   14002c05b:	pop    r14
   14002c05d:	ret    
   14002c05e:	int3   
   14002c05f:	int3   
   14002c060:	mov    QWORD PTR [rsp+0x8],rbx
   14002c065:	mov    QWORD PTR [rsp+0x10],rsi
   14002c06a:	push   rdi
   14002c06b:	sub    rsp,0x20
   14002c06f:	mov    rdi,rcx
   14002c072:	test   rcx,rcx
   14002c075:	jne    0x14002c08c
   14002c077:	call   0x14000b9f0
   14002c07c:	mov    DWORD PTR [rax],0x16
   14002c082:	call   0x14000b8b8
   14002c087:	jmp    0x14002c190
   14002c08c:	mov    eax,DWORD PTR [rcx+0x18]
   14002c08f:	test   al,0x83
   14002c091:	je     0x14002c190
   14002c097:	test   al,0x40
   14002c099:	jne    0x14002c190
   14002c09f:	test   al,0x2
   14002c0a1:	je     0x14002c0ae
   14002c0a3:	or     eax,0x20
   14002c0a6:	mov    DWORD PTR [rcx+0x18],eax
   14002c0a9:	jmp    0x14002c190
   14002c0ae:	or     eax,0x1
   14002c0b1:	mov    DWORD PTR [rcx+0x18],eax
   14002c0b4:	test   eax,0x10c
   14002c0b9:	jne    0x14002c0c2
   14002c0bb:	call   0x140023324
   14002c0c0:	jmp    0x14002c0c9
   14002c0c2:	mov    rax,QWORD PTR [rcx+0x10]
   14002c0c6:	mov    QWORD PTR [rcx],rax
   14002c0c9:	mov    rcx,rdi
   14002c0cc:	call   0x14001bc7c
   14002c0d1:	mov    r8d,DWORD PTR [rdi+0x24]
   14002c0d5:	mov    rdx,QWORD PTR [rdi+0x10]
   14002c0d9:	mov    ecx,eax
   14002c0db:	call   0x14002cfec
   14002c0e0:	mov    DWORD PTR [rdi+0x8],eax
   14002c0e3:	lea    ecx,[rax+0x1]
   14002c0e6:	cmp    ecx,0x1
   14002c0e9:	jbe    0x14002c17f
   14002c0ef:	test   BYTE PTR [rdi+0x18],0x82
   14002c0f3:	jne    0x14002c14f
   14002c0f5:	mov    rcx,rdi
   14002c0f8:	call   0x14001bc7c
   14002c0fd:	cmp    eax,0xffffffff
   14002c100:	je     0x14002c13a
   14002c102:	mov    rcx,rdi
   14002c105:	call   0x14001bc7c
   14002c10a:	cmp    eax,0xfffffffe
   14002c10d:	je     0x14002c13a
   14002c10f:	mov    rcx,rdi
   14002c112:	call   0x14001bc7c
   14002c117:	mov    rcx,rdi
   14002c11a:	lea    rsi,[rip+0x1c71f]        # 0x140048840
   14002c121:	movsxd rbx,eax
   14002c124:	sar    rbx,0x5
   14002c128:	call   0x14001bc7c
   14002c12d:	and    eax,0x1f
   14002c130:	imul   rcx,rax,0x58
   14002c134:	add    rcx,QWORD PTR [rsi+rbx*8]
   14002c138:	jmp    0x14002c141
   14002c13a:	lea    rcx,[rip+0x1a2cf]        # 0x140046410
   14002c141:	mov    al,BYTE PTR [rcx+0x8]
   14002c144:	and    al,0x82
   14002c146:	cmp    al,0x82
   14002c148:	jne    0x14002c14f
   14002c14a:	bts    DWORD PTR [rdi+0x18],0xd
   14002c14f:	cmp    DWORD PTR [rdi+0x24],0x200
   14002c156:	jne    0x14002c16e
   14002c158:	test   BYTE PTR [rdi+0x18],0x8
   14002c15c:	je     0x14002c16e
   14002c15e:	test   DWORD PTR [rdi+0x18],0x400
   14002c165:	jne    0x14002c16e
   14002c167:	mov    DWORD PTR [rdi+0x24],0x1000
   14002c16e:	mov    rcx,QWORD PTR [rdi]
   14002c171:	dec    DWORD PTR [rdi+0x8]
   14002c174:	movzx  eax,BYTE PTR [rcx]
   14002c177:	inc    rcx
   14002c17a:	mov    QWORD PTR [rdi],rcx
   14002c17d:	jmp    0x14002c193
   14002c17f:	neg    eax
   14002c181:	sbb    eax,eax
   14002c183:	and    eax,0x10
   14002c186:	add    eax,0x10
   14002c189:	or     DWORD PTR [rdi+0x18],eax
   14002c18c:	and    DWORD PTR [rdi+0x8],0x0
   14002c190:	or     eax,0xffffffff
   14002c193:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c198:	mov    rsi,QWORD PTR [rsp+0x38]
   14002c19d:	add    rsp,0x20
   14002c1a1:	pop    rdi
   14002c1a2:	ret    
   14002c1a3:	int3   
   14002c1a4:	mov    QWORD PTR [rsp+0x8],rbx
   14002c1a9:	push   rdi
   14002c1aa:	sub    rsp,0x20
   14002c1ae:	test   BYTE PTR [rdx+0x18],0x40
   14002c1b2:	mov    rbx,rdx
   14002c1b5:	mov    edi,ecx
   14002c1b7:	jne    0x14002c243
   14002c1bd:	mov    rcx,rdx
   14002c1c0:	call   0x14001bc7c
   14002c1c5:	lea    r9,[rip+0x1a244]        # 0x140046410
   14002c1cc:	lea    r11,[rip+0x1c66d]        # 0x140048840
   14002c1d3:	movsxd r10,eax
   14002c1d6:	lea    r8d,[r10+0x2]
   14002c1da:	cmp    r8d,0x1
   14002c1de:	jbe    0x14002c1f7
   14002c1e0:	mov    rdx,r10
   14002c1e3:	mov    rcx,r10
   14002c1e6:	and    edx,0x1f
   14002c1e9:	sar    rcx,0x5
   14002c1ed:	imul   rax,rdx,0x58
   14002c1f1:	add    rax,QWORD PTR [r11+rcx*8]
   14002c1f5:	jmp    0x14002c1fa
   14002c1f7:	mov    rax,r9
   14002c1fa:	test   BYTE PTR [rax+0x38],0x7f
   14002c1fe:	jne    0x14002c225
   14002c200:	lea    eax,[r10+0x2]
   14002c204:	cmp    eax,0x1
   14002c207:	jbe    0x14002c21e
   14002c209:	mov    rcx,r10
   14002c20c:	mov    rax,r10
   14002c20f:	and    ecx,0x1f
   14002c212:	sar    rax,0x5
   14002c216:	imul   r9,rcx,0x58
   14002c21a:	add    r9,QWORD PTR [r11+rax*8]
   14002c21e:	test   BYTE PTR [r9+0x38],0x80
   14002c223:	je     0x14002c243
   14002c225:	call   0x14000b9f0
   14002c22a:	mov    DWORD PTR [rax],0x16
   14002c230:	call   0x14000b8b8
   14002c235:	or     eax,0xffffffff
   14002c238:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c23d:	add    rsp,0x20
   14002c241:	pop    rdi
   14002c242:	ret    
   14002c243:	cmp    edi,0xffffffff
   14002c246:	je     0x14002c235
   14002c248:	test   BYTE PTR [rbx+0x18],0x1
   14002c24c:	jne    0x14002c25a
   14002c24e:	test   BYTE PTR [rbx+0x18],0x80
   14002c252:	je     0x14002c235
   14002c254:	test   BYTE PTR [rbx+0x18],0x2
   14002c258:	jne    0x14002c235
   14002c25a:	cmp    QWORD PTR [rbx+0x10],0x0
   14002c25f:	jne    0x14002c269
   14002c261:	mov    rcx,rbx
   14002c264:	call   0x140023324
   14002c269:	mov    rax,QWORD PTR [rbx]
   14002c26c:	cmp    rax,QWORD PTR [rbx+0x10]
   14002c270:	jne    0x14002c27e
   14002c272:	cmp    DWORD PTR [rbx+0x8],0x0
   14002c276:	jne    0x14002c235
   14002c278:	inc    rax
   14002c27b:	mov    QWORD PTR [rbx],rax
   14002c27e:	dec    QWORD PTR [rbx]
   14002c281:	test   BYTE PTR [rbx+0x18],0x40
   14002c285:	mov    rax,QWORD PTR [rbx]
   14002c288:	je     0x14002c297
   14002c28a:	cmp    BYTE PTR [rax],dil
   14002c28d:	je     0x14002c29a
   14002c28f:	inc    rax
   14002c292:	mov    QWORD PTR [rbx],rax
   14002c295:	jmp    0x14002c235
   14002c297:	mov    BYTE PTR [rax],dil
   14002c29a:	inc    DWORD PTR [rbx+0x8]
   14002c29d:	and    DWORD PTR [rbx+0x18],0xffffffef
   14002c2a1:	or     DWORD PTR [rbx+0x18],0x1
   14002c2a5:	movzx  eax,dil
   14002c2a9:	jmp    0x14002c238
   14002c2ab:	int3   
   14002c2ac:	mov    QWORD PTR [rsp+0x8],rbx
   14002c2b1:	mov    QWORD PTR [rsp+0x10],rdx
   14002c2b6:	push   rdi
   14002c2b7:	sub    rsp,0x20
   14002c2bb:	mov    rbx,rdx
   14002c2be:	mov    edi,ecx
   14002c2c0:	xor    eax,eax
   14002c2c2:	test   rdx,rdx
   14002c2c5:	setne  al
   14002c2c8:	test   eax,eax
   14002c2ca:	jne    0x14002c2e1
   14002c2cc:	call   0x14000b9f0
   14002c2d1:	mov    DWORD PTR [rax],0x16
   14002c2d7:	call   0x14000b8b8
   14002c2dc:	or     eax,0xffffffff
   14002c2df:	jmp    0x14002c300
   14002c2e1:	mov    rcx,rdx
   14002c2e4:	call   0x14000a920
   14002c2e9:	nop
   14002c2ea:	mov    rdx,rbx
   14002c2ed:	mov    ecx,edi
   14002c2ef:	call   0x14002c1a4
   14002c2f4:	mov    edi,eax
   14002c2f6:	mov    rcx,rbx
   14002c2f9:	call   0x14000a9bc
   14002c2fe:	mov    eax,edi
   14002c300:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c305:	add    rsp,0x20
   14002c309:	pop    rdi
   14002c30a:	ret    
   14002c30b:	int3   
   14002c30c:	mov    rax,rsp
   14002c30f:	mov    QWORD PTR [rax+0x8],rbx
   14002c313:	mov    QWORD PTR [rax+0x10],rbp
   14002c317:	mov    QWORD PTR [rax+0x18],rsi
   14002c31b:	mov    QWORD PTR [rax+0x20],rdi
   14002c31f:	push   r14
   14002c321:	sub    rsp,0x20
   14002c325:	xor    esi,esi
   14002c327:	xor    bpl,bpl
   14002c32a:	mov    rdi,rcx
   14002c32d:	test   rcx,rcx
   14002c330:	jne    0x14002c347
   14002c332:	call   0x14000b9f0
   14002c337:	mov    DWORD PTR [rax],0x16
   14002c33d:	call   0x14000b8b8
   14002c342:	jmp    0x14002c47f
   14002c347:	mov    eax,DWORD PTR [rcx+0x18]
   14002c34a:	test   al,0x83
   14002c34c:	je     0x14002c47f
   14002c352:	test   al,0x40
   14002c354:	jne    0x14002c47f
   14002c35a:	test   al,0x2
   14002c35c:	je     0x14002c369
   14002c35e:	or     eax,0x20
   14002c361:	mov    DWORD PTR [rcx+0x18],eax
   14002c364:	jmp    0x14002c47f
   14002c369:	or     eax,0x1
   14002c36c:	mov    DWORD PTR [rcx+0x18],eax
   14002c36f:	test   eax,0x10c
   14002c374:	jne    0x14002c37d
   14002c376:	call   0x140023324
   14002c37b:	jmp    0x14002c395
   14002c37d:	cmp    DWORD PTR [rcx+0x8],0x1
   14002c381:	jne    0x14002c38e
   14002c383:	mov    rax,QWORD PTR [rcx]
   14002c386:	mov    esi,0x1
   14002c38b:	mov    bpl,BYTE PTR [rax]
   14002c38e:	mov    rax,QWORD PTR [rcx+0x10]
   14002c392:	mov    QWORD PTR [rcx],rax
   14002c395:	mov    rcx,rdi
   14002c398:	call   0x14001bc7c
   14002c39d:	mov    r8d,DWORD PTR [rdi+0x24]
   14002c3a1:	mov    rdx,QWORD PTR [rdi+0x10]
   14002c3a5:	mov    ecx,eax
   14002c3a7:	call   0x14002cfec
   14002c3ac:	mov    DWORD PTR [rdi+0x8],eax
   14002c3af:	lea    ecx,[rax+0x1]
   14002c3b2:	cmp    ecx,0x2
   14002c3b5:	jbe    0x14002c46e
   14002c3bb:	test   BYTE PTR [rdi+0x18],0x82
   14002c3bf:	jne    0x14002c41b
   14002c3c1:	mov    rcx,rdi
   14002c3c4:	call   0x14001bc7c
   14002c3c9:	cmp    eax,0xffffffff
   14002c3cc:	je     0x14002c406
   14002c3ce:	mov    rcx,rdi
   14002c3d1:	call   0x14001bc7c
   14002c3d6:	cmp    eax,0xfffffffe
   14002c3d9:	je     0x14002c406
   14002c3db:	mov    rcx,rdi
   14002c3de:	call   0x14001bc7c
   14002c3e3:	mov    rcx,rdi
   14002c3e6:	lea    r14,[rip+0x1c453]        # 0x140048840
   14002c3ed:	movsxd rbx,eax
   14002c3f0:	sar    rbx,0x5
   14002c3f4:	call   0x14001bc7c
   14002c3f9:	and    eax,0x1f
   14002c3fc:	imul   rcx,rax,0x58
   14002c400:	add    rcx,QWORD PTR [r14+rbx*8]
   14002c404:	jmp    0x14002c40d
   14002c406:	lea    rcx,[rip+0x1a003]        # 0x140046410
   14002c40d:	mov    al,BYTE PTR [rcx+0x8]
   14002c410:	and    al,0x82
   14002c412:	cmp    al,0x82
   14002c414:	jne    0x14002c41b
   14002c416:	bts    DWORD PTR [rdi+0x18],0xd
   14002c41b:	cmp    DWORD PTR [rdi+0x24],0x200
   14002c422:	jne    0x14002c43a
   14002c424:	test   BYTE PTR [rdi+0x18],0x8
   14002c428:	je     0x14002c43a
   14002c42a:	test   DWORD PTR [rdi+0x18],0x400
   14002c431:	jne    0x14002c43a
   14002c433:	mov    DWORD PTR [rdi+0x24],0x1000
   14002c43a:	mov    rcx,QWORD PTR [rdi]
   14002c43d:	test   esi,esi
   14002c43f:	je     0x14002c45e
   14002c441:	movzx  edx,BYTE PTR [rcx]
   14002c444:	movzx  eax,bpl
   14002c448:	shl    dx,0x8
   14002c44c:	or     dx,ax
   14002c44f:	dec    DWORD PTR [rdi+0x8]
   14002c452:	lea    rax,[rcx+0x1]
   14002c456:	mov    QWORD PTR [rdi],rax
   14002c459:	movzx  eax,dx
   14002c45c:	jmp    0x14002c484
   14002c45e:	add    DWORD PTR [rdi+0x8],0xfffffffe
   14002c462:	movzx  eax,WORD PTR [rcx]
   14002c465:	add    rcx,0x2
   14002c469:	mov    QWORD PTR [rdi],rcx
   14002c46c:	jmp    0x14002c484
   14002c46e:	neg    eax
   14002c470:	sbb    eax,eax
   14002c472:	and    eax,0x10
   14002c475:	add    eax,0x10
   14002c478:	or     DWORD PTR [rdi+0x18],eax
   14002c47b:	and    DWORD PTR [rdi+0x8],0x0
   14002c47f:	mov    eax,0xffff
   14002c484:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c489:	mov    rbp,QWORD PTR [rsp+0x38]
   14002c48e:	mov    rsi,QWORD PTR [rsp+0x40]
   14002c493:	mov    rdi,QWORD PTR [rsp+0x48]
   14002c498:	add    rsp,0x20
   14002c49c:	pop    r14
   14002c49e:	ret    
   14002c49f:	int3   
   14002c4a0:	cmp    DWORD PTR [rip+0x1b54d],0x0        # 0x1400479f4
   14002c4a7:	jne    0x14002c4ba
   14002c4a9:	mov    rax,QWORD PTR [rip+0x19c48]        # 0x1400460f8
   14002c4b0:	movsxd rcx,ecx
   14002c4b3:	movzx  eax,WORD PTR [rax+rcx*2]
   14002c4b7:	and    eax,edx
   14002c4b9:	ret    
   14002c4ba:	xor    r8d,r8d
   14002c4bd:	jmp    0x14002c4c4
   14002c4c2:	int3   
   14002c4c3:	int3   
   14002c4c4:	mov    QWORD PTR [rsp+0x10],rsi
   14002c4c9:	push   rbp
   14002c4ca:	push   rdi
   14002c4cb:	push   r14
   14002c4cd:	mov    rbp,rsp
   14002c4d0:	sub    rsp,0x60
   14002c4d4:	movsxd rdi,ecx
   14002c4d7:	mov    r14d,edx
   14002c4da:	lea    rcx,[rbp-0x20]
   14002c4de:	mov    rdx,r8
   14002c4e1:	call   0x140007ff0
   14002c4e6:	lea    eax,[rdi+0x1]
   14002c4e9:	cmp    eax,0x100
   14002c4ee:	ja     0x14002c501
   14002c4f0:	mov    rax,QWORD PTR [rbp-0x20]
   14002c4f4:	mov    rcx,QWORD PTR [rax+0x108]
   14002c4fb:	movzx  eax,WORD PTR [rcx+rdi*2]
   14002c4ff:	jmp    0x14002c57a
   14002c501:	mov    esi,edi
   14002c503:	lea    rdx,[rbp-0x20]
   14002c507:	sar    esi,0x8
   14002c50a:	movzx  ecx,sil
   14002c50e:	call   0x14001d1f4
   14002c513:	mov    edx,0x1
   14002c518:	test   eax,eax
   14002c51a:	je     0x14002c52e
   14002c51c:	mov    BYTE PTR [rbp+0x38],sil
   14002c520:	mov    BYTE PTR [rbp+0x39],dil
   14002c524:	mov    BYTE PTR [rbp+0x3a],0x0
   14002c528:	lea    r9d,[rdx+0x1]
   14002c52c:	jmp    0x14002c539
   14002c52e:	mov    BYTE PTR [rbp+0x38],dil
   14002c532:	mov    BYTE PTR [rbp+0x39],0x0
   14002c536:	mov    r9d,edx
   14002c539:	mov    rax,QWORD PTR [rbp-0x20]
   14002c53d:	mov    DWORD PTR [rsp+0x30],edx
   14002c541:	lea    r8,[rbp+0x38]
   14002c545:	mov    ecx,DWORD PTR [rax+0x4]
   14002c548:	lea    rax,[rbp+0x20]
   14002c54c:	mov    DWORD PTR [rsp+0x28],ecx
   14002c550:	lea    rcx,[rbp-0x20]
   14002c554:	mov    QWORD PTR [rsp+0x20],rax
   14002c559:	call   0x1400213c4
   14002c55e:	test   eax,eax
   14002c560:	jne    0x14002c576
   14002c562:	cmp    BYTE PTR [rbp-0x8],al
   14002c565:	je     0x14002c572
   14002c567:	mov    rax,QWORD PTR [rbp-0x10]
   14002c56b:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002c572:	xor    eax,eax
   14002c574:	jmp    0x14002c58e
   14002c576:	movzx  eax,WORD PTR [rbp+0x20]
   14002c57a:	and    eax,r14d
   14002c57d:	cmp    BYTE PTR [rbp-0x8],0x0
   14002c581:	je     0x14002c58e
   14002c583:	mov    rcx,QWORD PTR [rbp-0x10]
   14002c587:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002c58e:	mov    rsi,QWORD PTR [rsp+0x88]
   14002c596:	add    rsp,0x60
   14002c59a:	pop    r14
   14002c59c:	pop    rdi
   14002c59d:	pop    rbp
   14002c59e:	ret    
   14002c59f:	int3   
   14002c5a0:	sub    rsp,0x38
   14002c5a4:	xor    eax,eax
   14002c5a6:	cmp    r9d,0xa
   14002c5aa:	jne    0x14002c5b5
   14002c5ac:	test   rcx,rcx
   14002c5af:	jns    0x14002c5b5
   14002c5b1:	lea    eax,[r9-0x9]
   14002c5b5:	mov    DWORD PTR [rsp+0x20],eax
   14002c5b9:	call   0x14002c638
   14002c5be:	add    rsp,0x38
   14002c5c2:	ret    
   14002c5c3:	int3   
   14002c5c4:	sub    rsp,0x38
   14002c5c8:	cmp    r9d,0xa
   14002c5cc:	jne    0x14002c5dc
   14002c5ce:	test   ecx,ecx
   14002c5d0:	jns    0x14002c5dc
   14002c5d2:	mov    DWORD PTR [rsp+0x20],0x1
   14002c5da:	jmp    0x14002c5e1
   14002c5dc:	and    DWORD PTR [rsp+0x20],0x0
   14002c5e1:	call   0x14002c74c
   14002c5e6:	add    rsp,0x38
   14002c5ea:	ret    
   14002c5eb:	int3   
   14002c5ec:	sub    rsp,0x38
   14002c5f0:	xor    eax,eax
   14002c5f2:	cmp    r9d,0xa
   14002c5f6:	jne    0x14002c600
   14002c5f8:	test   ecx,ecx
   14002c5fa:	jns    0x14002c600
   14002c5fc:	lea    eax,[r9-0x9]
   14002c600:	mov    DWORD PTR [rsp+0x20],eax
   14002c604:	call   0x14002c74c
   14002c609:	add    rsp,0x38
   14002c60d:	ret    
   14002c60e:	int3   
   14002c60f:	int3   
   14002c610:	sub    rsp,0x38
   14002c614:	and    DWORD PTR [rsp+0x20],0x0
   14002c619:	call   0x14002c638
   14002c61e:	add    rsp,0x38
   14002c622:	ret    
   14002c623:	int3   
   14002c624:	sub    rsp,0x38
   14002c628:	and    DWORD PTR [rsp+0x20],0x0
   14002c62d:	call   0x14002c74c
   14002c632:	add    rsp,0x38
   14002c636:	ret    
   14002c637:	int3   
   14002c638:	mov    QWORD PTR [rsp+0x8],rbx
   14002c63d:	mov    QWORD PTR [rsp+0x10],rbp
   14002c642:	mov    QWORD PTR [rsp+0x18],rsi
   14002c647:	push   rdi
   14002c648:	sub    rsp,0x20
   14002c64c:	xor    ebp,ebp
   14002c64e:	mov    esi,r9d
   14002c651:	mov    rdi,r8
   14002c654:	mov    r10,rdx
   14002c657:	mov    r11,rcx
   14002c65a:	test   rdx,rdx
   14002c65d:	jne    0x14002c677
   14002c65f:	call   0x14000b9f0
   14002c664:	mov    ebx,0x16
   14002c669:	mov    DWORD PTR [rax],ebx
   14002c66b:	call   0x14000b8b8
   14002c670:	mov    eax,ebx
   14002c672:	jmp    0x14002c734
   14002c677:	test   r8,r8
   14002c67a:	je     0x14002c65f
   14002c67c:	mov    WORD PTR [rdx],bp
   14002c67f:	mov    edx,DWORD PTR [rsp+0x50]
   14002c683:	mov    eax,edx
   14002c685:	neg    eax
   14002c687:	sbb    rcx,rcx
   14002c68a:	neg    rcx
   14002c68d:	inc    rcx
   14002c690:	cmp    r8,rcx
   14002c693:	ja     0x14002c6a1
   14002c695:	call   0x14000b9f0
   14002c69a:	mov    ebx,0x22
   14002c69f:	jmp    0x14002c669
   14002c6a1:	lea    eax,[rsi-0x2]
   14002c6a4:	mov    ebx,0x22
   14002c6a9:	cmp    eax,ebx
   14002c6ab:	ja     0x14002c65f
   14002c6ad:	mov    rcx,rbp
   14002c6b0:	mov    r8,r10
   14002c6b3:	test   edx,edx
   14002c6b5:	je     0x14002c6c8
   14002c6b7:	lea    eax,[rbx+0xb]
   14002c6ba:	lea    r8,[r10+0x2]
   14002c6be:	lea    ecx,[rbx-0x21]
   14002c6c1:	mov    WORD PTR [r10],ax
   14002c6c5:	neg    r11
   14002c6c8:	mov    r9,r8
   14002c6cb:	xor    edx,edx
   14002c6cd:	mov    rax,r11
   14002c6d0:	div    rsi
   14002c6d3:	mov    r11,rax
   14002c6d6:	cmp    edx,0x9
   14002c6d9:	jbe    0x14002c6e1
   14002c6db:	add    dx,0x57
   14002c6df:	jmp    0x14002c6e5
   14002c6e1:	add    dx,0x30
   14002c6e5:	mov    WORD PTR [r8],dx
   14002c6e9:	inc    rcx
   14002c6ec:	add    r8,0x2
   14002c6f0:	test   rax,rax
   14002c6f3:	je     0x14002c6fa
   14002c6f5:	cmp    rcx,rdi
   14002c6f8:	jb     0x14002c6cb
   14002c6fa:	cmp    rcx,rdi
   14002c6fd:	jb     0x14002c70d
   14002c6ff:	mov    WORD PTR [r10],bp
   14002c703:	call   0x14000b9f0
   14002c708:	jmp    0x14002c669
   14002c70d:	mov    WORD PTR [r8],bp
   14002c711:	sub    r8,0x2
   14002c715:	movzx  eax,WORD PTR [r9]
   14002c719:	movzx  ecx,WORD PTR [r8]
   14002c71d:	mov    WORD PTR [r8],ax
   14002c721:	mov    WORD PTR [r9],cx
   14002c725:	add    r9,0x2
   14002c729:	sub    r8,0x2
   14002c72d:	cmp    r9,r8
   14002c730:	jb     0x14002c715
   14002c732:	xor    eax,eax
   14002c734:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c739:	mov    rbp,QWORD PTR [rsp+0x38]
   14002c73e:	mov    rsi,QWORD PTR [rsp+0x40]
   14002c743:	add    rsp,0x20
   14002c747:	pop    rdi
   14002c748:	ret    
   14002c749:	int3   
   14002c74a:	int3   
   14002c74b:	int3   
   14002c74c:	mov    QWORD PTR [rsp+0x8],rbx
   14002c751:	mov    QWORD PTR [rsp+0x10],rbp
   14002c756:	mov    QWORD PTR [rsp+0x18],rsi
   14002c75b:	push   rdi
   14002c75c:	sub    rsp,0x20
   14002c760:	xor    ebp,ebp
   14002c762:	mov    esi,r9d
   14002c765:	mov    rdi,r8
   14002c768:	mov    r10,rdx
   14002c76b:	mov    r11d,ecx
   14002c76e:	test   rdx,rdx
   14002c771:	jne    0x14002c78b
   14002c773:	call   0x14000b9f0
   14002c778:	mov    ebx,0x16
   14002c77d:	mov    DWORD PTR [rax],ebx
   14002c77f:	call   0x14000b8b8
   14002c784:	mov    eax,ebx
   14002c786:	jmp    0x14002c847
   14002c78b:	test   r8,r8
   14002c78e:	je     0x14002c773
   14002c790:	mov    WORD PTR [rdx],bp
   14002c793:	mov    edx,DWORD PTR [rsp+0x50]
   14002c797:	mov    eax,edx
   14002c799:	neg    eax
   14002c79b:	sbb    rcx,rcx
   14002c79e:	neg    rcx
   14002c7a1:	inc    rcx
   14002c7a4:	cmp    r8,rcx
   14002c7a7:	ja     0x14002c7b5
   14002c7a9:	call   0x14000b9f0
   14002c7ae:	mov    ebx,0x22
   14002c7b3:	jmp    0x14002c77d
   14002c7b5:	lea    eax,[r9-0x2]
   14002c7b9:	mov    ebx,0x22
   14002c7be:	cmp    eax,ebx
   14002c7c0:	ja     0x14002c773
   14002c7c2:	mov    rcx,rbp
   14002c7c5:	mov    r8,r10
   14002c7c8:	test   edx,edx
   14002c7ca:	je     0x14002c7dd
   14002c7cc:	lea    eax,[rbx+0xb]
   14002c7cf:	lea    r8,[r10+0x2]
   14002c7d3:	lea    ecx,[rbx-0x21]
   14002c7d6:	mov    WORD PTR [r10],ax
   14002c7da:	neg    r11d
   14002c7dd:	mov    r9,r8
   14002c7e0:	xor    edx,edx
   14002c7e2:	mov    eax,r11d
   14002c7e5:	div    esi
   14002c7e7:	mov    r11d,eax
   14002c7ea:	cmp    edx,0x9
   14002c7ed:	jbe    0x14002c7f5
   14002c7ef:	add    dx,0x57
   14002c7f3:	jmp    0x14002c7f9
   14002c7f5:	add    dx,0x30
   14002c7f9:	mov    WORD PTR [r8],dx
   14002c7fd:	inc    rcx
   14002c800:	add    r8,0x2
   14002c804:	test   eax,eax
   14002c806:	je     0x14002c80d
   14002c808:	cmp    rcx,rdi
   14002c80b:	jb     0x14002c7e0
   14002c80d:	cmp    rcx,rdi
   14002c810:	jb     0x14002c820
   14002c812:	mov    WORD PTR [r10],bp
   14002c816:	call   0x14000b9f0
   14002c81b:	jmp    0x14002c77d
   14002c820:	mov    WORD PTR [r8],bp
   14002c824:	sub    r8,0x2
   14002c828:	movzx  eax,WORD PTR [r9]
   14002c82c:	movzx  ecx,WORD PTR [r8]
   14002c830:	mov    WORD PTR [r8],ax
   14002c834:	mov    WORD PTR [r9],cx
   14002c838:	add    r9,0x2
   14002c83c:	sub    r8,0x2
   14002c840:	cmp    r9,r8
   14002c843:	jb     0x14002c828
   14002c845:	xor    eax,eax
   14002c847:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c84c:	mov    rbp,QWORD PTR [rsp+0x38]
   14002c851:	mov    rsi,QWORD PTR [rsp+0x40]
   14002c856:	add    rsp,0x20
   14002c85a:	pop    rdi
   14002c85b:	ret    
   14002c85c:	xor    edx,edx
   14002c85e:	lea    r8d,[rdx+0xa]
   14002c862:	jmp    0x140023934
   14002c867:	int3   
   14002c868:	xor    edx,edx
   14002c86a:	lea    r8d,[rdx+0xa]
   14002c86e:	jmp    0x14002df38
   14002c873:	int3   
   14002c874:	mov    r9,rdx
   14002c877:	xor    edx,edx
   14002c879:	lea    r8d,[rdx+0xa]
   14002c87d:	jmp    0x14002df68
   14002c882:	int3   
   14002c883:	int3   
   14002c884:	mov    r9,rdx
   14002c887:	xor    edx,edx
   14002c889:	lea    r8d,[rdx+0xa]
   14002c88d:	jmp    0x140023920
   14002c892:	int3   
   14002c893:	int3   
   14002c894:	xor    edx,edx
   14002c896:	lea    r8d,[rdx+0xa]
   14002c89a:	jmp    0x140023934
   14002c89f:	int3   
   14002c8a0:	mov    r9,rdx
   14002c8a3:	xor    edx,edx
   14002c8a5:	lea    r8d,[rdx+0xa]
   14002c8a9:	jmp    0x140023920
   14002c8ae:	int3   
   14002c8af:	int3   
   14002c8b0:	xor    edx,edx
   14002c8b2:	lea    r8d,[rdx+0xa]
   14002c8b6:	jmp    0x14002df38
   14002c8bb:	int3   
   14002c8bc:	mov    r9,rdx
   14002c8bf:	xor    edx,edx
   14002c8c1:	lea    r8d,[rdx+0xa]
   14002c8c5:	jmp    0x14002df68
   14002c8ca:	int3   
   14002c8cb:	int3   
   14002c8cc:	sub    rsp,0x18
   14002c8d0:	movdqa xmm2,XMMWORD PTR [rsp]
   14002c8d5:	movzx  eax,dx
   14002c8d8:	mov    r8,rcx
   14002c8db:	movd   xmm0,eax
   14002c8df:	xor    r9d,r9d
   14002c8e2:	pshuflw xmm1,xmm0,0x0
   14002c8e7:	pshufd xmm3,xmm1,0x0
   14002c8ec:	mov    rax,r8
   14002c8ef:	and    eax,0xfff
   14002c8f4:	cmp    rax,0xff0
   14002c8fa:	ja     0x14002c927
   14002c8fc:	movdqu xmm1,XMMWORD PTR [r8]
   14002c901:	movdqa xmm0,xmm2
   14002c905:	pxor   xmm0,xmm2
   14002c909:	movdqa xmm2,xmm0
   14002c90d:	pcmpeqw xmm2,xmm1
   14002c911:	pcmpeqw xmm1,xmm3
   14002c915:	por    xmm2,xmm1
   14002c919:	pmovmskb eax,xmm2
   14002c91d:	test   eax,eax
   14002c91f:	jne    0x14002c939
   14002c921:	add    r8,0x10
   14002c925:	jmp    0x14002c8ec
   14002c927:	cmp    WORD PTR [r8],dx
   14002c92b:	je     0x14002c950
   14002c92d:	cmp    WORD PTR [r8],r9w
   14002c931:	je     0x14002c94c
   14002c933:	add    r8,0x2
   14002c937:	jmp    0x14002c8ec
   14002c939:	bsf    ecx,eax
   14002c93c:	add    r8,rcx
   14002c93f:	cmp    WORD PTR [r8],dx
   14002c943:	cmove  r9,r8
   14002c947:	mov    rax,r9
   14002c94a:	jmp    0x14002c953
   14002c94c:	xor    eax,eax
   14002c94e:	jmp    0x14002c953
   14002c950:	mov    rax,r8
   14002c953:	add    rsp,0x18
   14002c957:	ret    
   14002c958:	mov    QWORD PTR [rsp+0x8],rbx
   14002c95d:	mov    QWORD PTR [rsp+0x18],rbp
   14002c962:	push   rsi
   14002c963:	push   rdi
   14002c964:	push   r14
   14002c966:	sub    rsp,0x20
   14002c96a:	mov    r14d,ecx
   14002c96d:	mov    rcx,rdx
   14002c970:	mov    rbx,rdx
   14002c973:	call   0x14001bc7c
   14002c978:	mov    edx,DWORD PTR [rbx+0x18]
   14002c97b:	movsxd rsi,eax
   14002c97e:	test   dl,0x82
   14002c981:	jne    0x14002c99c
   14002c983:	call   0x14000b9f0
   14002c988:	mov    DWORD PTR [rax],0x9
   14002c98e:	or     DWORD PTR [rbx+0x18],0x20
   14002c992:	mov    eax,0xffff
   14002c997:	jmp    0x14002cad2
   14002c99c:	test   dl,0x40
   14002c99f:	je     0x14002c9ae
   14002c9a1:	call   0x14000b9f0
   14002c9a6:	mov    DWORD PTR [rax],0x22
   14002c9ac:	jmp    0x14002c98e
   14002c9ae:	xor    edi,edi
   14002c9b0:	test   dl,0x1
   14002c9b3:	je     0x14002c9ce
   14002c9b5:	mov    DWORD PTR [rbx+0x8],edi
   14002c9b8:	test   dl,0x10
   14002c9bb:	je     0x14002ca4b
   14002c9c1:	mov    rax,QWORD PTR [rbx+0x10]
   14002c9c5:	and    edx,0xfffffffe
   14002c9c8:	mov    QWORD PTR [rbx],rax
   14002c9cb:	mov    DWORD PTR [rbx+0x18],edx
   14002c9ce:	mov    eax,DWORD PTR [rbx+0x18]
   14002c9d1:	mov    DWORD PTR [rbx+0x8],edi
   14002c9d4:	and    eax,0xffffffef
   14002c9d7:	or     eax,0x2
   14002c9da:	mov    DWORD PTR [rbx+0x18],eax
   14002c9dd:	test   eax,0x10c
   14002c9e2:	jne    0x14002ca13
   14002c9e4:	call   0x14000a918
   14002c9e9:	add    rax,0x30
   14002c9ed:	cmp    rbx,rax
   14002c9f0:	je     0x14002ca00
   14002c9f2:	call   0x14000a918
   14002c9f7:	add    rax,0x60
   14002c9fb:	cmp    rbx,rax
   14002c9fe:	jne    0x14002ca0b
   14002ca00:	mov    ecx,esi
   14002ca02:	call   0x14001d13c
   14002ca07:	test   eax,eax
   14002ca09:	jne    0x14002ca13
   14002ca0b:	mov    rcx,rbx
   14002ca0e:	call   0x140023324
   14002ca13:	test   DWORD PTR [rbx+0x18],0x108
   14002ca1a:	je     0x14002caaa
   14002ca20:	mov    ebp,DWORD PTR [rbx]
   14002ca22:	mov    rdx,QWORD PTR [rbx+0x10]
   14002ca26:	sub    ebp,DWORD PTR [rbx+0x10]
   14002ca29:	lea    rax,[rdx+0x2]
   14002ca2d:	mov    QWORD PTR [rbx],rax
   14002ca30:	mov    eax,DWORD PTR [rbx+0x24]
   14002ca33:	sub    eax,0x2
   14002ca36:	mov    DWORD PTR [rbx+0x8],eax
   14002ca39:	test   ebp,ebp
   14002ca3b:	jle    0x14002ca56
   14002ca3d:	mov    r8d,ebp
   14002ca40:	mov    ecx,esi
   14002ca42:	call   0x14001bf34
   14002ca47:	mov    edi,eax
   14002ca49:	jmp    0x14002caa0
   14002ca4b:	or     edx,0x20
   14002ca4e:	mov    DWORD PTR [rbx+0x18],edx
   14002ca51:	jmp    0x14002c992
   14002ca56:	lea    eax,[rsi+0x2]
   14002ca59:	cmp    eax,0x1
   14002ca5c:	jbe    0x14002ca7c
   14002ca5e:	mov    rcx,rsi
   14002ca61:	mov    rax,rsi
   14002ca64:	lea    r8,[rip+0x1bdd5]        # 0x140048840
   14002ca6b:	and    ecx,0x1f
   14002ca6e:	sar    rax,0x5
   14002ca72:	imul   rdx,rcx,0x58
   14002ca76:	add    rdx,QWORD PTR [r8+rax*8]
   14002ca7a:	jmp    0x14002ca83
   14002ca7c:	lea    rdx,[rip+0x1998d]        # 0x140046410
   14002ca83:	test   BYTE PTR [rdx+0x8],0x20
   14002ca87:	je     0x14002caa0
   14002ca89:	xor    edx,edx
   14002ca8b:	mov    ecx,esi
   14002ca8d:	lea    r8d,[rdx+0x2]
   14002ca91:	call   0x1400231a8
   14002ca96:	cmp    rax,0xffffffffffffffff
   14002ca9a:	je     0x14002c98e
   14002caa0:	mov    rax,QWORD PTR [rbx+0x10]
   14002caa4:	mov    WORD PTR [rax],r14w
   14002caa8:	jmp    0x14002cac6
   14002caaa:	mov    ebp,0x2
   14002caaf:	lea    rdx,[rsp+0x48]
   14002cab4:	mov    ecx,esi
   14002cab6:	mov    r8d,ebp
   14002cab9:	mov    WORD PTR [rsp+0x48],r14w
   14002cabf:	call   0x14001bf34
   14002cac4:	mov    edi,eax
   14002cac6:	cmp    edi,ebp
   14002cac8:	jne    0x14002c98e
   14002cace:	movzx  eax,r14w
   14002cad2:	mov    rbx,QWORD PTR [rsp+0x40]
   14002cad7:	mov    rbp,QWORD PTR [rsp+0x50]
   14002cadc:	add    rsp,0x20
   14002cae0:	pop    r14
   14002cae2:	pop    rdi
   14002cae3:	pop    rsi
   14002cae4:	ret    
   14002cae5:	int3   
   14002cae6:	int3   
   14002cae7:	int3   
   14002cae8:	mov    edx,0x30
   14002caed:	cmp    cx,dx
   14002caf0:	jb     0x14002cc79
   14002caf6:	cmp    cx,0x3a
   14002cafa:	jae    0x14002cb02
   14002cafc:	movzx  eax,cx
   14002caff:	sub    eax,edx
   14002cb01:	ret    
   14002cb02:	mov    edx,0xff10
   14002cb07:	cmp    cx,dx
   14002cb0a:	jae    0x14002cc6b
   14002cb10:	mov    edx,0x660
   14002cb15:	cmp    cx,dx
   14002cb18:	jb     0x14002cc79
   14002cb1e:	lea    eax,[rdx+0xa]
   14002cb21:	cmp    cx,ax
   14002cb24:	jb     0x14002cafc
   14002cb26:	mov    edx,0x6f0
   14002cb2b:	cmp    cx,dx
   14002cb2e:	jb     0x14002cc79
   14002cb34:	lea    eax,[rdx+0xa]
   14002cb37:	cmp    cx,ax
   14002cb3a:	jb     0x14002cafc
   14002cb3c:	mov    edx,0x966
   14002cb41:	cmp    cx,dx
   14002cb44:	jb     0x14002cc79
   14002cb4a:	lea    eax,[rdx+0xa]
   14002cb4d:	cmp    cx,ax
   14002cb50:	jb     0x14002cafc
   14002cb52:	lea    edx,[rax+0x76]
   14002cb55:	cmp    cx,dx
   14002cb58:	jb     0x14002cc79
   14002cb5e:	lea    eax,[rdx+0xa]
   14002cb61:	cmp    cx,ax
   14002cb64:	jb     0x14002cafc
   14002cb66:	lea    edx,[rax+0x76]
   14002cb69:	cmp    cx,dx
   14002cb6c:	jb     0x14002cc79
   14002cb72:	lea    eax,[rdx+0xa]
   14002cb75:	cmp    cx,ax
   14002cb78:	jb     0x14002cafc
   14002cb7a:	lea    edx,[rax+0x76]
   14002cb7d:	cmp    cx,dx
   14002cb80:	jb     0x14002cc79
   14002cb86:	lea    eax,[rdx+0xa]
   14002cb89:	cmp    cx,ax
   14002cb8c:	jb     0x14002cafc
   14002cb92:	lea    edx,[rax+0x76]
   14002cb95:	cmp    cx,dx
   14002cb98:	jb     0x14002cc79
   14002cb9e:	lea    eax,[rdx+0xa]
   14002cba1:	cmp    cx,ax
   14002cba4:	jb     0x14002cafc
   14002cbaa:	mov    edx,0xc66
   14002cbaf:	cmp    cx,dx
   14002cbb2:	jb     0x14002cc79
   14002cbb8:	lea    eax,[rdx+0xa]
   14002cbbb:	cmp    cx,ax
   14002cbbe:	jb     0x14002cafc
   14002cbc4:	lea    edx,[rax+0x76]
   14002cbc7:	cmp    cx,dx
   14002cbca:	jb     0x14002cc79
   14002cbd0:	lea    eax,[rdx+0xa]
   14002cbd3:	cmp    cx,ax
   14002cbd6:	jb     0x14002cafc
   14002cbdc:	lea    edx,[rax+0x76]
   14002cbdf:	cmp    cx,dx
   14002cbe2:	jb     0x14002cc79
   14002cbe8:	lea    eax,[rdx+0xa]
   14002cbeb:	cmp    cx,ax
   14002cbee:	jb     0x14002cafc
   14002cbf4:	mov    edx,0xe50
   14002cbf9:	cmp    cx,dx
   14002cbfc:	jb     0x14002cc79
   14002cbfe:	lea    eax,[rdx+0xa]
   14002cc01:	cmp    cx,ax
   14002cc04:	jb     0x14002cafc
   14002cc0a:	lea    edx,[rax+0x76]
   14002cc0d:	cmp    cx,dx
   14002cc10:	jb     0x14002cc79
   14002cc12:	lea    eax,[rdx+0xa]
   14002cc15:	cmp    cx,ax
   14002cc18:	jb     0x14002cafc
   14002cc1e:	lea    edx,[rax+0x46]
   14002cc21:	cmp    cx,dx
   14002cc24:	jb     0x14002cc79
   14002cc26:	lea    eax,[rdx+0xa]
   14002cc29:	cmp    cx,ax
   14002cc2c:	jb     0x14002cafc
   14002cc32:	mov    edx,0x1040
   14002cc37:	cmp    cx,dx
   14002cc3a:	jb     0x14002cc79
   14002cc3c:	lea    eax,[rdx+0xa]
   14002cc3f:	cmp    cx,ax
   14002cc42:	jb     0x14002cafc
   14002cc48:	mov    edx,0x17e0
   14002cc4d:	cmp    cx,dx
   14002cc50:	jb     0x14002cc79
   14002cc52:	lea    eax,[rdx+0xa]
   14002cc55:	cmp    cx,ax
   14002cc58:	jb     0x14002cafc
   14002cc5e:	lea    edx,[rax+0x26]
   14002cc61:	cmp    cx,dx
   14002cc64:	jb     0x14002cc79
   14002cc66:	lea    eax,[rdx+0xa]
   14002cc69:	jmp    0x14002cc70
   14002cc6b:	mov    eax,0xff1a
   14002cc70:	cmp    cx,ax
   14002cc73:	jb     0x14002cafc
   14002cc79:	or     eax,0xffffffff
   14002cc7c:	ret    
   14002cc7d:	int3   
   14002cc7e:	int3   
   14002cc7f:	int3   
   14002cc80:	xor    edx,edx
   14002cc82:	lea    r8d,[rdx+0xa]
   14002cc86:	jmp    0x14002e328
   14002cc8b:	int3   
   14002cc8c:	mov    r9,rdx
   14002cc8f:	xor    edx,edx
   14002cc91:	lea    r8d,[rdx+0xa]
   14002cc95:	jmp    0x14002e358
   14002cc9a:	int3   
   14002cc9b:	int3   
   14002cc9c:	mov    r9,rdx
   14002cc9f:	xor    edx,edx
   14002cca1:	lea    r8d,[rdx+0xa]
   14002cca5:	jmp    0x140023b84
   14002ccaa:	int3   
   14002ccab:	int3   
   14002ccac:	mov    r9,rdx
   14002ccaf:	xor    edx,edx
   14002ccb1:	lea    r8d,[rdx+0xa]
   14002ccb5:	jmp    0x140023b84
   14002ccba:	int3   
   14002ccbb:	int3   
   14002ccbc:	mov    r9,rdx
   14002ccbf:	xor    edx,edx
   14002ccc1:	lea    r8d,[rdx+0xa]
   14002ccc5:	jmp    0x14002e358
   14002ccca:	int3   
   14002cccb:	int3   
   14002cccc:	xor    edx,edx
   14002ccce:	lea    r8d,[rdx+0xa]
   14002ccd2:	jmp    0x140023bd0
   14002ccd7:	int3   
   14002ccd8:	xor    edx,edx
   14002ccda:	lea    r8d,[rdx+0xa]
   14002ccde:	jmp    0x140023bd0
   14002cce3:	int3   
   14002cce4:	xor    edx,edx
   14002cce6:	lea    r8d,[rdx+0xa]
   14002ccea:	jmp    0x14002e328
   14002ccef:	int3   
   14002ccf0:	sub    rsp,0x28
   14002ccf4:	mov    rcx,QWORD PTR [rip+0x19835]        # 0x140046530
   14002ccfb:	lea    rax,[rcx+0x2]
   14002ccff:	cmp    rax,0x1
   14002cd03:	jbe    0x14002cd0b
   14002cd05:	call   QWORD PTR [rip+0x84e5]        # 0x1400351f0
   14002cd0b:	add    rsp,0x28
   14002cd0f:	ret    
   14002cd10:	sub    rsp,0x48
   14002cd14:	and    QWORD PTR [rsp+0x30],0x0
   14002cd1a:	and    DWORD PTR [rsp+0x28],0x0
   14002cd1f:	mov    r8d,0x3
   14002cd25:	lea    rcx,[rip+0x124d4]        # 0x14003f200
   14002cd2c:	xor    r9d,r9d
   14002cd2f:	mov    edx,0x40000000
   14002cd34:	mov    DWORD PTR [rsp+0x20],r8d
   14002cd39:	call   QWORD PTR [rip+0x8409]        # 0x140035148
   14002cd3f:	mov    QWORD PTR [rip+0x197ea],rax        # 0x140046530
   14002cd46:	add    rsp,0x48
   14002cd4a:	ret    
   14002cd4b:	int3   
   14002cd4c:	sub    rsp,0x28
   14002cd50:	movsxd rdx,edx
   14002cd53:	call   0x14002cefc
   14002cd58:	neg    eax
   14002cd5a:	sbb    eax,eax
   14002cd5c:	add    rsp,0x28
   14002cd60:	ret    
   14002cd61:	int3   
   14002cd62:	int3   
   14002cd63:	int3   
   14002cd64:	mov    rax,rsp
   14002cd67:	mov    QWORD PTR [rax+0x8],rbx
   14002cd6b:	mov    QWORD PTR [rax+0x10],rbp
   14002cd6f:	mov    QWORD PTR [rax+0x18],rsi
   14002cd73:	mov    QWORD PTR [rax+0x20],rdi
   14002cd77:	push   r13
   14002cd79:	push   r14
   14002cd7b:	push   r15
   14002cd7d:	sub    rsp,0x20
   14002cd81:	mov    rbp,rdx
   14002cd84:	xor    edi,edi
   14002cd86:	xor    edx,edx
   14002cd88:	lea    r8d,[rdi+0x1]
   14002cd8c:	mov    esi,ecx
   14002cd8e:	call   0x140023290
   14002cd93:	mov    r15,rax
   14002cd96:	cmp    rax,0xffffffffffffffff
   14002cd9a:	je     0x14002cdec
   14002cd9c:	lea    r8d,[rdi+0x2]
   14002cda0:	xor    edx,edx
   14002cda2:	mov    ecx,esi
   14002cda4:	call   0x140023290
   14002cda9:	cmp    rax,0xffffffffffffffff
   14002cdad:	je     0x14002cdec
   14002cdaf:	mov    rbx,rbp
   14002cdb2:	sub    rbx,rax
   14002cdb5:	test   rbx,rbx
   14002cdb8:	jle    0x14002ce7f
   14002cdbe:	call   QWORD PTR [rip+0x85cc]        # 0x140035390
   14002cdc4:	mov    r13d,0x1000
   14002cdca:	lea    edx,[rdi+0x8]
   14002cdcd:	mov    rcx,rax
   14002cdd0:	mov    r8d,r13d
   14002cdd3:	call   QWORD PTR [rip+0x84a7]        # 0x140035280
   14002cdd9:	mov    rbp,rax
   14002cddc:	test   rax,rax
   14002cddf:	jne    0x14002ce12
   14002cde1:	call   0x14000b9f0
   14002cde6:	mov    DWORD PTR [rax],0xc
   14002cdec:	call   0x14000b9f0
   14002cdf1:	mov    eax,DWORD PTR [rax]
   14002cdf3:	mov    rbx,QWORD PTR [rsp+0x40]
   14002cdf8:	mov    rbp,QWORD PTR [rsp+0x48]
   14002cdfd:	mov    rsi,QWORD PTR [rsp+0x50]
   14002ce02:	mov    rdi,QWORD PTR [rsp+0x58]
   14002ce07:	add    rsp,0x20
   14002ce0b:	pop    r15
   14002ce0d:	pop    r14
   14002ce0f:	pop    r13
   14002ce11:	ret    
   14002ce12:	mov    edx,0x8000
   14002ce17:	mov    ecx,esi
   14002ce19:	call   0x14002dae4
   14002ce1e:	mov    r14d,eax
   14002ce21:	mov    r8d,ebx
   14002ce24:	cmp    rbx,r13
   14002ce27:	mov    rdx,rbp
   14002ce2a:	cmovge r8d,r13d
   14002ce2e:	mov    ecx,esi
   14002ce30:	call   0x14001c018
   14002ce35:	cmp    eax,0xffffffff
   14002ce38:	je     0x14002ce46
   14002ce3a:	cdqe   
   14002ce3c:	sub    rbx,rax
   14002ce3f:	test   rbx,rbx
   14002ce42:	jle    0x14002ce5f
   14002ce44:	jmp    0x14002ce21
   14002ce46:	call   0x14000b980
   14002ce4b:	cmp    DWORD PTR [rax],0x5
   14002ce4e:	jne    0x14002ce5b
   14002ce50:	call   0x14000b9f0
   14002ce55:	mov    DWORD PTR [rax],0xd
   14002ce5b:	or     rdi,0xffffffffffffffff
   14002ce5f:	mov    edx,r14d
   14002ce62:	mov    ecx,esi
   14002ce64:	call   0x14002dae4
   14002ce69:	call   QWORD PTR [rip+0x8521]        # 0x140035390
   14002ce6f:	mov    r8,rbp
   14002ce72:	mov    rcx,rax
   14002ce75:	xor    edx,edx
   14002ce77:	call   QWORD PTR [rip+0x841b]        # 0x140035298
   14002ce7d:	jmp    0x14002ced4
   14002ce7f:	jns    0x14002cede
   14002ce81:	xor    r8d,r8d
   14002ce84:	mov    rdx,rbp
   14002ce87:	mov    ecx,esi
   14002ce89:	call   0x140023290
   14002ce8e:	cmp    rax,0xffffffffffffffff
   14002ce92:	je     0x14002cdec
   14002ce98:	mov    ecx,esi
   14002ce9a:	call   0x14002b100
   14002ce9f:	mov    rcx,rax
   14002cea2:	call   QWORD PTR [rip+0x8298]        # 0x140035140
   14002cea8:	neg    eax
   14002ceaa:	sbb    rdi,rdi
   14002cead:	neg    rdi
   14002ceb0:	dec    rdi
   14002ceb3:	cmp    rdi,0xffffffffffffffff
   14002ceb7:	jne    0x14002cede
   14002ceb9:	call   0x14000b9f0
   14002cebe:	mov    DWORD PTR [rax],0xd
   14002cec4:	call   0x14000b980
   14002cec9:	mov    rbx,rax
   14002cecc:	call   QWORD PTR [rip+0x8316]        # 0x1400351e8
   14002ced2:	mov    DWORD PTR [rbx],eax
   14002ced4:	cmp    rdi,0xffffffffffffffff
   14002ced8:	je     0x14002cdec
   14002cede:	xor    r8d,r8d
   14002cee1:	mov    rdx,r15
   14002cee4:	mov    ecx,esi
   14002cee6:	call   0x140023290
   14002ceeb:	cmp    rax,0xffffffffffffffff
   14002ceef:	je     0x14002cdec
   14002cef5:	xor    eax,eax
   14002cef7:	jmp    0x14002cdf3
   14002cefc:	mov    QWORD PTR [rsp+0x10],rbx
   14002cf01:	mov    QWORD PTR [rsp+0x20],rsi
   14002cf06:	mov    DWORD PTR [rsp+0x8],ecx
   14002cf0a:	push   rdi
   14002cf0b:	push   r14
   14002cf0d:	push   r15
   14002cf0f:	sub    rsp,0x20
   14002cf13:	mov    rbx,rdx
   14002cf16:	movsxd rdi,ecx
   14002cf19:	cmp    edi,0xfffffffe
   14002cf1c:	jne    0x14002cf2e
   14002cf1e:	call   0x14000b980
   14002cf23:	and    DWORD PTR [rax],0x0
   14002cf26:	lea    eax,[rdi+0xb]
   14002cf29:	jmp    0x14002cfd7
   14002cf2e:	test   ecx,ecx
   14002cf30:	js     0x14002cfbc
   14002cf36:	cmp    edi,DWORD PTR [rip+0x1be28]        # 0x140048d64
   14002cf3c:	jae    0x14002cfbc
   14002cf3e:	mov    rax,rdi
   14002cf41:	mov    rsi,rdi
   14002cf44:	sar    rsi,0x5
   14002cf48:	lea    r15,[rip+0x1b8f1]        # 0x140048840
   14002cf4f:	and    eax,0x1f
   14002cf52:	imul   r14,rax,0x58
   14002cf56:	mov    rax,QWORD PTR [r15+rsi*8]
   14002cf5a:	movsx  ecx,BYTE PTR [rax+r14*1+0x8]
   14002cf60:	and    ecx,0x1
   14002cf63:	je     0x14002cfbc
   14002cf65:	xor    eax,eax
   14002cf67:	test   rdx,rdx
   14002cf6a:	setns  al
   14002cf6d:	test   eax,eax
   14002cf6f:	jne    0x14002cf85
   14002cf71:	call   0x14000b980
   14002cf76:	and    DWORD PTR [rax],0x0
   14002cf79:	call   0x14000b9f0
   14002cf7e:	mov    ebx,0x16
   14002cf83:	jmp    0x14002cfce
   14002cf85:	mov    ecx,edi
   14002cf87:	call   0x14002adc4
   14002cf8c:	nop
   14002cf8d:	mov    rax,QWORD PTR [r15+rsi*8]
   14002cf91:	test   BYTE PTR [rax+r14*1+0x8],0x1
   14002cf97:	je     0x14002cfa7
   14002cf99:	mov    rdx,rbx
   14002cf9c:	mov    ecx,edi
   14002cf9e:	call   0x14002cd64
   14002cfa3:	mov    ebx,eax
   14002cfa5:	jmp    0x14002cfb3
   14002cfa7:	call   0x14000b9f0
   14002cfac:	mov    ebx,0x9
   14002cfb1:	mov    DWORD PTR [rax],ebx
   14002cfb3:	mov    ecx,edi
   14002cfb5:	call   0x14002b320
   14002cfba:	jmp    0x14002cfd5
   14002cfbc:	call   0x14000b980
   14002cfc1:	and    DWORD PTR [rax],0x0
   14002cfc4:	call   0x14000b9f0
   14002cfc9:	mov    ebx,0x9
   14002cfce:	mov    DWORD PTR [rax],ebx
   14002cfd0:	call   0x14000b8b8
   14002cfd5:	mov    eax,ebx
   14002cfd7:	mov    rbx,QWORD PTR [rsp+0x48]
   14002cfdc:	mov    rsi,QWORD PTR [rsp+0x58]
   14002cfe1:	add    rsp,0x20
   14002cfe5:	pop    r15
   14002cfe7:	pop    r14
   14002cfe9:	pop    rdi
   14002cfea:	ret    
   14002cfeb:	int3   
   14002cfec:	mov    QWORD PTR [rsp+0x10],rbx
   14002cff1:	mov    QWORD PTR [rsp+0x18],rsi
   14002cff6:	mov    DWORD PTR [rsp+0x8],ecx
   14002cffa:	push   rdi
   14002cffb:	push   r12
   14002cffd:	push   r13
   14002cfff:	push   r14
   14002d001:	push   r15
   14002d003:	sub    rsp,0x20
   14002d007:	mov    esi,r8d
   14002d00a:	mov    r15,rdx
   14002d00d:	movsxd rdi,ecx
   14002d010:	cmp    edi,0xfffffffe
   14002d013:	jne    0x14002d02e
   14002d015:	call   0x14000b980
   14002d01a:	xor    ebx,ebx
   14002d01c:	mov    DWORD PTR [rax],ebx
   14002d01e:	call   0x14000b9f0
   14002d023:	mov    DWORD PTR [rax],0x9
   14002d029:	jmp    0x14002d0ed
   14002d02e:	xor    ebx,ebx
   14002d030:	test   ecx,ecx
   14002d032:	js     0x14002d0d6
   14002d038:	cmp    edi,DWORD PTR [rip+0x1bd26]        # 0x140048d64
   14002d03e:	jae    0x14002d0d6
   14002d044:	mov    rax,rdi
   14002d047:	mov    r14,rdi
   14002d04a:	sar    r14,0x5
   14002d04e:	lea    r13,[rip+0x1b7eb]        # 0x140048840
   14002d055:	and    eax,0x1f
   14002d058:	imul   r12,rax,0x58
   14002d05c:	mov    rax,QWORD PTR [r13+r14*8+0x0]
   14002d061:	movsx  ecx,BYTE PTR [rax+r12*1+0x8]
   14002d067:	and    ecx,0x1
   14002d06a:	je     0x14002d0d6
   14002d06c:	mov    eax,ebx
   14002d06e:	cmp    r8d,0x7fffffff
   14002d075:	setbe  al
   14002d078:	test   eax,eax
   14002d07a:	jne    0x14002d090
   14002d07c:	call   0x14000b980
   14002d081:	mov    DWORD PTR [rax],ebx
   14002d083:	call   0x14000b9f0
   14002d088:	mov    DWORD PTR [rax],0x16
   14002d08e:	jmp    0x14002d0e8
   14002d090:	mov    ecx,edi
   14002d092:	call   0x14002adc4
   14002d097:	nop
   14002d098:	mov    rax,QWORD PTR [r13+r14*8+0x0]
   14002d09d:	test   BYTE PTR [rax+r12*1+0x8],0x1
   14002d0a3:	je     0x14002d0b6
   14002d0a5:	mov    r8d,esi
   14002d0a8:	mov    rdx,r15
   14002d0ab:	mov    ecx,edi
   14002d0ad:	call   0x14002d108
   14002d0b2:	mov    ebx,eax
   14002d0b4:	jmp    0x14002d0cb
   14002d0b6:	call   0x14000b9f0
   14002d0bb:	mov    DWORD PTR [rax],0x9
   14002d0c1:	call   0x14000b980
   14002d0c6:	mov    DWORD PTR [rax],ebx
   14002d0c8:	or     ebx,0xffffffff
   14002d0cb:	mov    ecx,edi
   14002d0cd:	call   0x14002b320
   14002d0d2:	mov    eax,ebx
   14002d0d4:	jmp    0x14002d0f0
   14002d0d6:	call   0x14000b980
   14002d0db:	mov    DWORD PTR [rax],ebx
   14002d0dd:	call   0x14000b9f0
   14002d0e2:	mov    DWORD PTR [rax],0x9
   14002d0e8:	call   0x14000b8b8
   14002d0ed:	or     eax,0xffffffff
   14002d0f0:	mov    rbx,QWORD PTR [rsp+0x58]
   14002d0f5:	mov    rsi,QWORD PTR [rsp+0x60]
   14002d0fa:	add    rsp,0x20
   14002d0fe:	pop    r15
   14002d100:	pop    r14
   14002d102:	pop    r13
   14002d104:	pop    r12
   14002d106:	pop    rdi
   14002d107:	ret    
   14002d108:	mov    QWORD PTR [rsp+0x10],rdx
   14002d10d:	mov    DWORD PTR [rsp+0x8],ecx
   14002d111:	push   rbp
   14002d112:	push   rbx
   14002d113:	push   rsi
   14002d114:	push   rdi
   14002d115:	push   r12
   14002d117:	push   r13
   14002d119:	push   r14
   14002d11b:	push   r15
   14002d11d:	mov    rbp,rsp
   14002d120:	sub    rsp,0x58
   14002d124:	mov    ebx,r8d
   14002d127:	xor    edi,edi
   14002d129:	movsxd r8,ecx
   14002d12c:	mov    r9,rdx
   14002d12f:	mov    DWORD PTR [rbp-0x20],0xfffffffe
   14002d136:	mov    DWORD PTR [rbp-0x18],edi
   14002d139:	mov    DWORD PTR [rbp-0x10],ebx
   14002d13c:	cmp    r8d,0xfffffffe
   14002d140:	jne    0x14002d159
   14002d142:	call   0x14000b980
   14002d147:	mov    DWORD PTR [rax],edi
   14002d149:	call   0x14000b9f0
   14002d14e:	mov    DWORD PTR [rax],0x9
   14002d154:	jmp    0x14002d964
   14002d159:	test   ecx,ecx
   14002d15b:	js     0x14002d94d
   14002d161:	cmp    r8d,DWORD PTR [rip+0x1bbfc]        # 0x140048d64
   14002d168:	jae    0x14002d94d
   14002d16e:	mov    rax,r8
   14002d171:	mov    r13,r8
   14002d174:	lea    r10,[rip+0xfffffffffffd2e85]        # 0x140000000
   14002d17b:	and    eax,0x1f
   14002d17e:	sar    r13,0x5
   14002d182:	mov    rcx,QWORD PTR [r10+r13*8+0x48840]
   14002d18a:	imul   r14,rax,0x58
   14002d18e:	mov    al,BYTE PTR [rcx+r14*1+0x8]
   14002d193:	test   al,0x1
   14002d195:	je     0x14002d94d
   14002d19b:	cmp    ebx,0x7fffffff
   14002d1a1:	jbe    0x14002d1ba
   14002d1a3:	call   0x14000b980
   14002d1a8:	mov    DWORD PTR [rax],edi
   14002d1aa:	call   0x14000b9f0
   14002d1af:	mov    DWORD PTR [rax],0x16
   14002d1b5:	jmp    0x14002d95f
   14002d1ba:	mov    esi,edi
   14002d1bc:	test   ebx,ebx
   14002d1be:	je     0x14002d949
   14002d1c4:	test   al,0x2
   14002d1c6:	jne    0x14002d949
   14002d1cc:	test   rdx,rdx
   14002d1cf:	je     0x14002d1a3
   14002d1d1:	mov    dl,BYTE PTR [rcx+r14*1+0x38]
   14002d1d6:	mov    r11d,0x4
   14002d1dc:	add    dl,dl
   14002d1de:	sar    dl,1
   14002d1e0:	movsx  ecx,dl
   14002d1e3:	mov    BYTE PTR [rbp+0x60],dl
   14002d1e6:	dec    ecx
   14002d1e8:	je     0x14002d1fe
   14002d1ea:	dec    ecx
   14002d1ec:	jne    0x14002d1f9
   14002d1ee:	mov    eax,ebx
   14002d1f0:	not    eax
   14002d1f2:	test   al,0x1
   14002d1f4:	je     0x14002d1a3
   14002d1f6:	and    ebx,0xfffffffe
   14002d1f9:	mov    r15,r9
   14002d1fc:	jmp    0x14002d262
   14002d1fe:	mov    eax,ebx
   14002d200:	not    eax
   14002d202:	test   al,0x1
   14002d204:	je     0x14002d1a3
   14002d206:	shr    ebx,1
   14002d208:	cmp    ebx,r11d
   14002d20b:	cmovb  ebx,r11d
   14002d20f:	mov    ecx,ebx
   14002d211:	call   0x14000fc4c
   14002d216:	mov    r15,rax
   14002d219:	test   rax,rax
   14002d21c:	jne    0x14002d239
   14002d21e:	call   0x14000b9f0
   14002d223:	mov    DWORD PTR [rax],0xc
   14002d229:	call   0x14000b980
   14002d22e:	mov    DWORD PTR [rax],0x8
   14002d234:	jmp    0x14002d964
   14002d239:	mov    ecx,DWORD PTR [rbp+0x48]
   14002d23c:	xor    edx,edx
   14002d23e:	lea    r8d,[rdx+0x1]
   14002d242:	call   0x140023290
   14002d247:	mov    dl,BYTE PTR [rbp+0x60]
   14002d24a:	mov    r8d,DWORD PTR [rbp+0x48]
   14002d24e:	lea    r10,[rip+0xfffffffffffd2dab]        # 0x140000000
   14002d255:	mov    rcx,QWORD PTR [r10+r13*8+0x48840]
   14002d25d:	mov    QWORD PTR [rcx+r14*1+0x40],rax
   14002d262:	mov    rax,QWORD PTR [r10+r13*8+0x48840]
   14002d26a:	mov    r12,r15
   14002d26d:	mov    r9d,0xa
   14002d273:	test   BYTE PTR [rax+r14*1+0x8],0x48
   14002d279:	je     0x14002d31f
   14002d27f:	mov    cl,BYTE PTR [rax+r14*1+0x9]
   14002d284:	cmp    cl,r9b
   14002d287:	je     0x14002d31f
   14002d28d:	test   ebx,ebx
   14002d28f:	je     0x14002d31f
   14002d295:	mov    BYTE PTR [r15],cl
   14002d298:	mov    rax,QWORD PTR [r10+r13*8+0x48840]
   14002d2a0:	or     r11d,0xffffffff
   14002d2a4:	add    ebx,r11d
   14002d2a7:	lea    r12,[r15+0x1]
   14002d2ab:	lea    esi,[r9-0x9]
   14002d2af:	mov    BYTE PTR [rax+r14*1+0x9],r9b
   14002d2b4:	test   dl,dl
   14002d2b6:	je     0x14002d31f
   14002d2b8:	mov    rax,QWORD PTR [r10+r13*8+0x48840]
   14002d2c0:	mov    cl,BYTE PTR [rax+r14*1+0x39]
   14002d2c5:	cmp    cl,r9b
   14002d2c8:	je     0x14002d31f
   14002d2ca:	test   ebx,ebx
   14002d2cc:	je     0x14002d31f
   14002d2ce:	mov    BYTE PTR [r12],cl
   14002d2d2:	mov    rax,QWORD PTR [r10+r13*8+0x48840]
   14002d2da:	add    ebx,r11d
   14002d2dd:	inc    r12
   14002d2e0:	lea    esi,[r9-0x8]
   14002d2e4:	mov    BYTE PTR [rax+r14*1+0x39],r9b
   14002d2e9:	cmp    dl,0x1
   14002d2ec:	jne    0x14002d31f
   14002d2ee:	mov    rax,QWORD PTR [r10+r13*8+0x48840]
   14002d2f6:	mov    cl,BYTE PTR [rax+r14*1+0x3a]
   14002d2fb:	cmp    cl,r9b
   14002d2fe:	je     0x14002d31f
   14002d300:	test   ebx,ebx
   14002d302:	je     0x14002d31f
   14002d304:	mov    BYTE PTR [r12],cl
   14002d308:	mov    rax,QWORD PTR [r10+r13*8+0x48840]
   14002d310:	inc    r12
   14002d313:	lea    esi,[r9-0x7]
   14002d317:	add    ebx,r11d
   14002d31a:	mov    BYTE PTR [rax+r14*1+0x3a],r9b
   14002d31f:	mov    ecx,r8d
   14002d322:	call   0x14001d13c
   14002d327:	test   eax,eax
   14002d329:	je     0x14002d3af
   14002d32f:	lea    rcx,[rip+0xfffffffffffd2cca]        # 0x140000000
   14002d336:	mov    rcx,QWORD PTR [rcx+r13*8+0x48840]
   14002d33e:	test   BYTE PTR [rcx+r14*1+0x8],0x80
   14002d344:	je     0x14002d3af
   14002d346:	mov    rcx,QWORD PTR [rcx+r14*1]
   14002d34a:	lea    rdx,[rbp-0x18]
   14002d34e:	call   QWORD PTR [rip+0x807c]        # 0x1400353d0
   14002d354:	mov    DWORD PTR [rbp-0x18],eax
   14002d357:	test   eax,eax
   14002d359:	je     0x14002d3af
   14002d35b:	cmp    BYTE PTR [rbp+0x60],0x2
   14002d35f:	jne    0x14002d3af
   14002d361:	lea    rax,[rip+0xfffffffffffd2c98]        # 0x140000000
   14002d368:	shr    ebx,1
   14002d36a:	lea    r9,[rbp-0x24]
   14002d36e:	mov    rcx,QWORD PTR [rax+r13*8+0x48840]
   14002d376:	mov    rdx,r12
   14002d379:	mov    r8d,ebx
   14002d37c:	mov    rcx,QWORD PTR [rcx+r14*1]
   14002d380:	mov    QWORD PTR [rsp+0x20],rdi
   14002d385:	call   QWORD PTR [rip+0x8055]        # 0x1400353e0
   14002d38b:	test   eax,eax
   14002d38d:	jne    0x14002d3a4
   14002d38f:	call   QWORD PTR [rip+0x7e53]        # 0x1400351e8
   14002d395:	mov    ecx,eax
   14002d397:	call   0x14000b9a0
   14002d39c:	or     ebx,0xffffffff
   14002d39f:	jmp    0x14002d74e
   14002d3a4:	mov    eax,DWORD PTR [rbp-0x24]
   14002d3a7:	lea    edx,[rax+rax*1]
   14002d3aa:	mov    DWORD PTR [rbp-0x24],edx
   14002d3ad:	jmp    0x14002d3f6
   14002d3af:	lea    rcx,[rip+0xfffffffffffd2c4a]        # 0x140000000
   14002d3b6:	lea    r9,[rbp-0x24]
   14002d3ba:	mov    r8d,ebx
   14002d3bd:	mov    rcx,QWORD PTR [rcx+r13*8+0x48840]
   14002d3c5:	mov    rdx,r12
   14002d3c8:	mov    QWORD PTR [rsp+0x20],rdi
   14002d3cd:	mov    rcx,QWORD PTR [rcx+r14*1]
   14002d3d1:	call   QWORD PTR [rip+0x7d61]        # 0x140035138
   14002d3d7:	test   eax,eax
   14002d3d9:	je     0x14002d913
   14002d3df:	movsxd rdx,DWORD PTR [rbp-0x24]
   14002d3e3:	test   edx,edx
   14002d3e5:	js     0x14002d913
   14002d3eb:	mov    eax,ebx
   14002d3ed:	cmp    rdx,rax
   14002d3f0:	ja     0x14002d913
   14002d3f6:	lea    r10,[rip+0xfffffffffffd2c03]        # 0x140000000
   14002d3fd:	add    esi,edx
   14002d3ff:	mov    rcx,QWORD PTR [r10+r13*8+0x48840]
   14002d407:	mov    al,BYTE PTR [rcx+r14*1+0x8]
   14002d40c:	test   al,al
   14002d40e:	jns    0x14002d74b
   14002d414:	cmp    BYTE PTR [rbp+0x60],0x2
   14002d418:	je     0x14002d6c3
   14002d41e:	test   edx,edx
   14002d420:	mov    edx,0xa
   14002d425:	je     0x14002d430
   14002d427:	cmp    BYTE PTR [r15],dl
   14002d42a:	jne    0x14002d430
   14002d42c:	or     al,0x4
   14002d42e:	jmp    0x14002d432
   14002d430:	and    al,0xfb
   14002d432:	mov    BYTE PTR [rcx+r14*1+0x8],al
   14002d437:	movsxd rax,esi
   14002d43a:	mov    rbx,r15
   14002d43d:	add    rax,r15
   14002d440:	mov    r12,r15
   14002d443:	mov    QWORD PTR [rbp-0x18],rax
   14002d447:	cmp    r15,rax
   14002d44a:	jae    0x14002d583
   14002d450:	mov    esi,0xd
   14002d455:	mov    al,BYTE PTR [r12]
   14002d459:	cmp    al,0x1a
   14002d45b:	je     0x14002d560
   14002d461:	cmp    al,sil
   14002d464:	je     0x14002d473
   14002d466:	mov    BYTE PTR [rbx],al
   14002d468:	inc    rbx
   14002d46b:	inc    r12
   14002d46e:	jmp    0x14002d554
   14002d473:	mov    rax,QWORD PTR [rbp-0x18]
   14002d477:	dec    rax
   14002d47a:	cmp    r12,rax
   14002d47d:	jae    0x14002d499
   14002d47f:	lea    rax,[r12+0x1]
   14002d484:	cmp    BYTE PTR [rax],dl
   14002d486:	jne    0x14002d491
   14002d488:	add    r12,0x2
   14002d48c:	jmp    0x14002d519
   14002d491:	mov    r12,rax
   14002d494:	jmp    0x14002d54e
   14002d499:	mov    rcx,QWORD PTR [r10+r13*8+0x48840]
   14002d4a1:	lea    r9,[rbp-0x24]
   14002d4a5:	lea    rdx,[rbp+0x58]
   14002d4a9:	mov    rcx,QWORD PTR [rcx+r14*1]
   14002d4ad:	mov    r8d,0x1
   14002d4b3:	inc    r12
   14002d4b6:	mov    QWORD PTR [rsp+0x20],rdi
   14002d4bb:	call   QWORD PTR [rip+0x7c77]        # 0x140035138
   14002d4c1:	test   eax,eax
   14002d4c3:	jne    0x14002d4cf
   14002d4c5:	call   QWORD PTR [rip+0x7d1d]        # 0x1400351e8
   14002d4cb:	test   eax,eax
   14002d4cd:	jne    0x14002d542
   14002d4cf:	cmp    DWORD PTR [rbp-0x24],edi
   14002d4d2:	je     0x14002d542
   14002d4d4:	lea    r10,[rip+0xfffffffffffd2b25]        # 0x140000000
   14002d4db:	mov    rax,QWORD PTR [r10+r13*8+0x48840]
   14002d4e3:	test   BYTE PTR [rax+r14*1+0x8],0x48
   14002d4e9:	je     0x14002d50a
   14002d4eb:	mov    edx,0xa
   14002d4f0:	cmp    BYTE PTR [rbp+0x58],dl
   14002d4f3:	je     0x14002d519
   14002d4f5:	mov    BYTE PTR [rbx],sil
   14002d4f8:	mov    rcx,QWORD PTR [r10+r13*8+0x48840]
   14002d500:	mov    al,BYTE PTR [rbp+0x58]
   14002d503:	mov    BYTE PTR [rcx+r14*1+0x9],al
   14002d508:	jmp    0x14002d551
   14002d50a:	cmp    rbx,r15
   14002d50d:	jne    0x14002d51d
   14002d50f:	mov    edx,0xa
   14002d514:	cmp    BYTE PTR [rbp+0x58],dl
   14002d517:	jne    0x14002d51d
   14002d519:	mov    BYTE PTR [rbx],dl
   14002d51b:	jmp    0x14002d551
   14002d51d:	mov    ecx,DWORD PTR [rbp+0x48]
   14002d520:	mov    r8d,0x1
   14002d526:	or     rdx,0xffffffffffffffff
   14002d52a:	call   0x140023290
   14002d52f:	mov    edx,0xa
   14002d534:	lea    r10,[rip+0xfffffffffffd2ac5]        # 0x140000000
   14002d53b:	cmp    BYTE PTR [rbp+0x58],dl
   14002d53e:	je     0x14002d554
   14002d540:	jmp    0x14002d54e
   14002d542:	mov    edx,0xa
   14002d547:	lea    r10,[rip+0xfffffffffffd2ab2]        # 0x140000000
   14002d54e:	mov    BYTE PTR [rbx],sil
   14002d551:	inc    rbx
   14002d554:	cmp    r12,QWORD PTR [rbp-0x18]
   14002d558:	jb     0x14002d455
   14002d55e:	jmp    0x14002d583
   14002d560:	mov    rcx,QWORD PTR [r10+r13*8+0x48840]
   14002d568:	mov    al,BYTE PTR [rcx+r14*1+0x8]
   14002d56d:	test   al,0x40
   14002d56f:	jne    0x14002d57a
   14002d571:	or     al,0x2
   14002d573:	mov    BYTE PTR [rcx+r14*1+0x8],al
   14002d578:	jmp    0x14002d583
   14002d57a:	mov    al,BYTE PTR [r12]
   14002d57e:	mov    BYTE PTR [rbx],al
   14002d580:	inc    rbx
   14002d583:	mov    esi,ebx
   14002d585:	sub    esi,r15d
   14002d588:	cmp    BYTE PTR [rbp+0x60],0x1
   14002d58c:	jne    0x14002d74b
   14002d592:	test   esi,esi
   14002d594:	je     0x14002d74b
   14002d59a:	dec    rbx
   14002d59d:	test   BYTE PTR [rbx],0x80
   14002d5a0:	jne    0x14002d5aa
   14002d5a2:	inc    rbx
   14002d5a5:	jmp    0x14002d65c
   14002d5aa:	mov    edx,0x1
   14002d5af:	jmp    0x14002d5c0
   14002d5b1:	cmp    edx,0x4
   14002d5b4:	jg     0x14002d5cd
   14002d5b6:	cmp    rbx,r15
   14002d5b9:	jb     0x14002d5cd
   14002d5bb:	dec    rbx
   14002d5be:	inc    edx
   14002d5c0:	movzx  eax,BYTE PTR [rbx]
   14002d5c3:	cmp    BYTE PTR [rax+r10*1+0x46540],dil
   14002d5cb:	je     0x14002d5b1
   14002d5cd:	movzx  ecx,BYTE PTR [rbx]
   14002d5d0:	movsx  eax,BYTE PTR [rcx+r10*1+0x46540]
   14002d5d9:	test   eax,eax
   14002d5db:	jne    0x14002d5ed
   14002d5dd:	call   0x14000b9f0
   14002d5e2:	mov    DWORD PTR [rax],0x2a
   14002d5e8:	jmp    0x14002d39c
   14002d5ed:	inc    eax
   14002d5ef:	cmp    eax,edx
   14002d5f1:	jne    0x14002d5fb
   14002d5f3:	movsxd rax,edx
   14002d5f6:	add    rbx,rax
   14002d5f9:	jmp    0x14002d65c
   14002d5fb:	mov    rax,QWORD PTR [r10+r13*8+0x48840]
   14002d603:	test   BYTE PTR [rax+r14*1+0x8],0x48
   14002d609:	je     0x14002d649
   14002d60b:	inc    rbx
   14002d60e:	mov    BYTE PTR [rax+r14*1+0x9],cl
   14002d613:	cmp    edx,0x2
   14002d616:	jl     0x14002d62a
   14002d618:	mov    al,BYTE PTR [rbx]
   14002d61a:	mov    rcx,QWORD PTR [r10+r13*8+0x48840]
   14002d622:	inc    rbx
   14002d625:	mov    BYTE PTR [rcx+r14*1+0x39],al
   14002d62a:	cmp    edx,0x3
   14002d62d:	jne    0x14002d641
   14002d62f:	mov    al,BYTE PTR [rbx]
   14002d631:	mov    rcx,QWORD PTR [r10+r13*8+0x48840]
   14002d639:	inc    rbx
   14002d63c:	mov    BYTE PTR [rcx+r14*1+0x3a],al
   14002d641:	movsxd rax,edx
   14002d644:	sub    rbx,rax
   14002d647:	jmp    0x14002d65c
   14002d649:	mov    ecx,DWORD PTR [rbp+0x48]
   14002d64c:	neg    edx
   14002d64e:	mov    r8d,0x1
   14002d654:	movsxd rdx,edx
   14002d657:	call   0x140023290
   14002d65c:	mov    eax,DWORD PTR [rbp-0x10]
   14002d65f:	mov    r12,QWORD PTR [rbp+0x50]
   14002d663:	sub    ebx,r15d
   14002d666:	shr    eax,1
   14002d668:	mov    r9d,ebx
   14002d66b:	mov    r8,r15
   14002d66e:	mov    DWORD PTR [rsp+0x28],eax
   14002d672:	xor    edx,edx
   14002d674:	mov    ecx,0xfde9
   14002d679:	mov    QWORD PTR [rsp+0x20],r12
   14002d67e:	call   QWORD PTR [rip+0x7bcc]        # 0x140035250
   14002d684:	mov    esi,eax
   14002d686:	test   eax,eax
   14002d688:	jne    0x14002d69f
   14002d68a:	call   QWORD PTR [rip+0x7b58]        # 0x1400351e8
   14002d690:	mov    ecx,eax
   14002d692:	call   0x14000b9a0
   14002d697:	or     ebx,0xffffffff
   14002d69a:	jmp    0x14002d752
   14002d69f:	cmp    eax,ebx
   14002d6a1:	mov    ebx,DWORD PTR [rbp-0x20]
   14002d6a4:	lea    rax,[rip+0xfffffffffffd2955]        # 0x140000000
   14002d6ab:	mov    rax,QWORD PTR [rax+r13*8+0x48840]
   14002d6b3:	setne  dil
   14002d6b7:	add    esi,esi
   14002d6b9:	mov    DWORD PTR [rax+r14*1+0x48],edi
   14002d6be:	jmp    0x14002d752
   14002d6c3:	cmp    DWORD PTR [rbp-0x18],edi
   14002d6c6:	je     0x14002d76c
   14002d6cc:	mov    eax,esi
   14002d6ce:	mov    r8,r15
   14002d6d1:	mov    r9,r15
   14002d6d4:	cdq    
   14002d6d5:	sub    eax,edx
   14002d6d7:	sar    eax,1
   14002d6d9:	movsxd rcx,eax
   14002d6dc:	lea    rdx,[r15+rcx*2]
   14002d6e0:	cmp    r15,rdx
   14002d6e3:	jae    0x14002d740
   14002d6e5:	mov    esi,0xd
   14002d6ea:	lea    ecx,[rsi-0x3]
   14002d6ed:	movzx  eax,WORD PTR [r9]
   14002d6f1:	cmp    ax,0x1a
   14002d6f5:	je     0x14002d732
   14002d6f7:	cmp    ax,si
   14002d6fa:	je     0x14002d70a
   14002d6fc:	mov    WORD PTR [r8],ax
   14002d700:	add    r8,0x2
   14002d704:	add    r9,0x2
   14002d708:	jmp    0x14002d72b
   14002d70a:	lea    rax,[rdx-0x2]
   14002d70e:	cmp    r9,rax
   14002d711:	jae    0x14002d72b
   14002d713:	add    r9,0x2
   14002d717:	cmp    WORD PTR [r9],cx
   14002d71b:	jne    0x14002d723
   14002d71d:	mov    WORD PTR [r8],cx
   14002d721:	jmp    0x14002d727
   14002d723:	mov    WORD PTR [r8],si
   14002d727:	add    r8,0x2
   14002d72b:	cmp    r9,rdx
   14002d72e:	jb     0x14002d6ed
   14002d730:	jmp    0x14002d740
   14002d732:	mov    rax,QWORD PTR [r10+r13*8+0x48840]
   14002d73a:	or     BYTE PTR [rax+r14*1+0x8],0x2
   14002d740:	sub    r8,r15
   14002d743:	mov    rsi,r8
   14002d746:	sar    rsi,1
   14002d749:	add    esi,esi
   14002d74b:	mov    ebx,DWORD PTR [rbp-0x20]
   14002d74e:	mov    r12,QWORD PTR [rbp+0x50]
   14002d752:	cmp    r15,r12
   14002d755:	je     0x14002d75f
   14002d757:	mov    rcx,r15
   14002d75a:	call   0x14000fb50
   14002d75f:	cmp    ebx,0xfffffffe
   14002d762:	cmove  ebx,esi
   14002d765:	mov    eax,ebx
   14002d767:	jmp    0x14002d967
   14002d76c:	test   edx,edx
   14002d76e:	mov    edx,0xa
   14002d773:	je     0x14002d77f
   14002d775:	cmp    WORD PTR [r15],dx
   14002d779:	jne    0x14002d77f
   14002d77b:	or     al,0x4
   14002d77d:	jmp    0x14002d781
   14002d77f:	and    al,0xfb
   14002d781:	mov    BYTE PTR [rcx+r14*1+0x8],al
   14002d786:	movsxd rax,esi
   14002d789:	mov    rbx,r15
   14002d78c:	add    rax,r15
   14002d78f:	mov    r12,r15
   14002d792:	mov    QWORD PTR [rbp+0x60],rax
   14002d796:	cmp    r15,rax
   14002d799:	jae    0x14002d909
   14002d79f:	mov    esi,0xd
   14002d7a4:	movzx  eax,WORD PTR [r12]
   14002d7a9:	cmp    ax,0x1a
   14002d7ad:	je     0x14002d8e3
   14002d7b3:	cmp    ax,si
   14002d7b6:	je     0x14002d7c8
   14002d7b8:	mov    WORD PTR [rbx],ax
   14002d7bb:	add    rbx,0x2
   14002d7bf:	add    r12,0x2
   14002d7c3:	jmp    0x14002d8d7
   14002d7c8:	mov    rax,QWORD PTR [rbp+0x60]
   14002d7cc:	add    rax,0xfffffffffffffffe
   14002d7d0:	cmp    r12,rax
   14002d7d3:	jae    0x14002d7f0
   14002d7d5:	lea    rax,[r12+0x2]
   14002d7da:	cmp    WORD PTR [rax],dx
   14002d7dd:	jne    0x14002d7e8
   14002d7df:	add    r12,0x4
   14002d7e3:	jmp    0x14002d898
   14002d7e8:	mov    r12,rax
   14002d7eb:	jmp    0x14002d8d0
   14002d7f0:	mov    rcx,QWORD PTR [r10+r13*8+0x48840]
   14002d7f8:	lea    r9,[rbp-0x24]
   14002d7fc:	lea    rdx,[rbp-0x28]
   14002d800:	mov    rcx,QWORD PTR [rcx+r14*1]
   14002d804:	mov    r8d,0x2
   14002d80a:	add    r12,0x2
   14002d80e:	mov    QWORD PTR [rsp+0x20],rdi
   14002d813:	call   QWORD PTR [rip+0x791f]        # 0x140035138
   14002d819:	test   eax,eax
   14002d81b:	jne    0x14002d82b
   14002d81d:	call   QWORD PTR [rip+0x79c5]        # 0x1400351e8
   14002d823:	test   eax,eax
   14002d825:	jne    0x14002d8c4
   14002d82b:	cmp    DWORD PTR [rbp-0x24],edi
   14002d82e:	je     0x14002d8c4
   14002d834:	lea    r10,[rip+0xfffffffffffd27c5]        # 0x140000000
   14002d83b:	mov    rax,QWORD PTR [r10+r13*8+0x48840]
   14002d843:	test   BYTE PTR [rax+r14*1+0x8],0x48
   14002d849:	je     0x14002d888
   14002d84b:	mov    edx,0xa
   14002d850:	cmp    WORD PTR [rbp-0x28],dx
   14002d854:	je     0x14002d898
   14002d856:	mov    WORD PTR [rbx],si
   14002d859:	mov    al,BYTE PTR [rbp-0x28]
   14002d85c:	mov    rcx,QWORD PTR [r10+r13*8+0x48840]
   14002d864:	mov    BYTE PTR [rcx+r14*1+0x9],al
   14002d869:	mov    al,BYTE PTR [rbp-0x27]
   14002d86c:	mov    rcx,QWORD PTR [r10+r13*8+0x48840]
   14002d874:	mov    BYTE PTR [rcx+r14*1+0x39],al
   14002d879:	mov    rax,QWORD PTR [r10+r13*8+0x48840]
   14002d881:	mov    BYTE PTR [rax+r14*1+0x3a],dl
   14002d886:	jmp    0x14002d8d3
   14002d888:	cmp    rbx,r15
   14002d88b:	jne    0x14002d89d
   14002d88d:	mov    edx,0xa
   14002d892:	cmp    WORD PTR [rbp-0x28],dx
   14002d896:	jne    0x14002d89d
   14002d898:	mov    WORD PTR [rbx],dx
   14002d89b:	jmp    0x14002d8d3
   14002d89d:	mov    ecx,DWORD PTR [rbp+0x48]
   14002d8a0:	mov    rdx,0xfffffffffffffffe
   14002d8a7:	lea    r8d,[rdx+0x3]
   14002d8ab:	call   0x140023290
   14002d8b0:	mov    edx,0xa
   14002d8b5:	lea    r10,[rip+0xfffffffffffd2744]        # 0x140000000
   14002d8bc:	cmp    WORD PTR [rbp-0x28],dx
   14002d8c0:	je     0x14002d8d7
   14002d8c2:	jmp    0x14002d8d0
   14002d8c4:	mov    edx,0xa
   14002d8c9:	lea    r10,[rip+0xfffffffffffd2730]        # 0x140000000
   14002d8d0:	mov    WORD PTR [rbx],si
   14002d8d3:	add    rbx,0x2
   14002d8d7:	cmp    r12,QWORD PTR [rbp+0x60]
   14002d8db:	jb     0x14002d7a4
   14002d8e1:	jmp    0x14002d909
   14002d8e3:	mov    rcx,QWORD PTR [r10+r13*8+0x48840]
   14002d8eb:	mov    al,BYTE PTR [rcx+r14*1+0x8]
   14002d8f0:	test   al,0x40
   14002d8f2:	jne    0x14002d8fd
   14002d8f4:	or     al,0x2
   14002d8f6:	mov    BYTE PTR [rcx+r14*1+0x8],al
   14002d8fb:	jmp    0x14002d909
   14002d8fd:	movzx  eax,WORD PTR [r12]
   14002d902:	mov    WORD PTR [rbx],ax
   14002d905:	add    rbx,0x2
   14002d909:	sub    ebx,r15d
   14002d90c:	mov    esi,ebx
   14002d90e:	jmp    0x14002d74b
   14002d913:	call   QWORD PTR [rip+0x78cf]        # 0x1400351e8
   14002d919:	cmp    eax,0x5
   14002d91c:	jne    0x14002d939
   14002d91e:	call   0x14000b9f0
   14002d923:	mov    DWORD PTR [rax],0x9
   14002d929:	call   0x14000b980
   14002d92e:	mov    DWORD PTR [rax],0x5
   14002d934:	jmp    0x14002d39c
   14002d939:	cmp    eax,0x6d
   14002d93c:	jne    0x14002d395
   14002d942:	mov    ebx,edi
   14002d944:	jmp    0x14002d74e
   14002d949:	xor    eax,eax
   14002d94b:	jmp    0x14002d967
   14002d94d:	call   0x14000b980
   14002d952:	mov    DWORD PTR [rax],edi
   14002d954:	call   0x14000b9f0
   14002d959:	mov    DWORD PTR [rax],0x9
   14002d95f:	call   0x14000b8b8
   14002d964:	or     eax,0xffffffff
   14002d967:	add    rsp,0x58
   14002d96b:	pop    r15
   14002d96d:	pop    r14
   14002d96f:	pop    r13
   14002d971:	pop    r12
   14002d973:	pop    rdi
   14002d974:	pop    rsi
   14002d975:	pop    rbx
   14002d976:	pop    rbp
   14002d977:	ret    
   14002d978:	sub    rsp,0x28
   14002d97c:	test   rcx,rcx
   14002d97f:	jne    0x14002d998
   14002d981:	call   0x14000b9f0
   14002d986:	mov    DWORD PTR [rax],0x16
   14002d98c:	call   0x14000b8b8
   14002d991:	mov    eax,0x16
   14002d996:	jmp    0x14002d9a2
   14002d998:	mov    eax,DWORD PTR [rip+0x1b3b6]        # 0x140048d54
   14002d99e:	mov    DWORD PTR [rcx],eax
   14002d9a0:	xor    eax,eax
   14002d9a2:	add    rsp,0x28
   14002d9a6:	ret    
   14002d9a7:	int3   
   14002d9a8:	sub    rsp,0x28
   14002d9ac:	lea    eax,[rcx-0x4000]
   14002d9b2:	test   eax,0xffff3fff
   14002d9b7:	jne    0x14002d9cb
   14002d9b9:	cmp    ecx,0xc000
   14002d9bf:	je     0x14002d9cb
   14002d9c1:	xchg   DWORD PTR [rip+0x1b38d],ecx        # 0x140048d54
   14002d9c7:	xor    eax,eax
   14002d9c9:	jmp    0x14002d9e0
   14002d9cb:	call   0x14000b9f0
   14002d9d0:	mov    DWORD PTR [rax],0x16
   14002d9d6:	call   0x14000b8b8
   14002d9db:	mov    eax,0x16
   14002d9e0:	add    rsp,0x28
   14002d9e4:	ret    
   14002d9e5:	int3   
   14002d9e6:	int3   
   14002d9e7:	int3   
   14002d9e8:	mov    QWORD PTR [rsp+0x18],rbx
   14002d9ed:	mov    QWORD PTR [rsp+0x20],rsi
   14002d9f2:	mov    DWORD PTR [rsp+0x8],ecx
   14002d9f6:	push   rdi
   14002d9f7:	push   r14
   14002d9f9:	push   r15
   14002d9fb:	sub    rsp,0x20
   14002d9ff:	mov    ebx,edx
   14002da01:	movsxd rdi,ecx
   14002da04:	cmp    edx,0x20000
   14002da0a:	je     0x14002da3c
   14002da0c:	cmp    edx,0x10000
   14002da12:	je     0x14002da3c
   14002da14:	cmp    edx,0x8000
   14002da1a:	je     0x14002da3c
   14002da1c:	cmp    edx,0x4000
   14002da22:	je     0x14002da3c
   14002da24:	cmp    edx,0x40000
   14002da2a:	je     0x14002da3c
   14002da2c:	call   0x14000b9f0
   14002da31:	mov    DWORD PTR [rax],0x16
   14002da37:	jmp    0x14002dac6
   14002da3c:	cmp    edi,0xfffffffe
   14002da3f:	jne    0x14002da4e
   14002da41:	call   0x14000b9f0
   14002da46:	mov    DWORD PTR [rax],0x9
   14002da4c:	jmp    0x14002dacb
   14002da4e:	test   ecx,ecx
   14002da50:	js     0x14002dabb
   14002da52:	cmp    edi,DWORD PTR [rip+0x1b30c]        # 0x140048d64
   14002da58:	jae    0x14002dabb
   14002da5a:	mov    rax,rdi
   14002da5d:	mov    rsi,rdi
   14002da60:	sar    rsi,0x5
   14002da64:	lea    r15,[rip+0x1add5]        # 0x140048840
   14002da6b:	and    eax,0x1f
   14002da6e:	imul   r14,rax,0x58
   14002da72:	mov    rax,QWORD PTR [r15+rsi*8]
   14002da76:	movsx  ecx,BYTE PTR [r14+rax*1+0x8]
   14002da7c:	and    ecx,0x1
   14002da7f:	je     0x14002dabb
   14002da81:	mov    ecx,edi
   14002da83:	call   0x14002adc4
   14002da88:	nop
   14002da89:	mov    rax,QWORD PTR [r15+rsi*8]
   14002da8d:	test   BYTE PTR [r14+rax*1+0x8],0x1
   14002da93:	je     0x14002daa2
   14002da95:	mov    edx,ebx
   14002da97:	mov    ecx,edi
   14002da99:	call   0x14002dae4
   14002da9e:	mov    ebx,eax
   14002daa0:	jmp    0x14002dab0
   14002daa2:	call   0x14000b9f0
   14002daa7:	mov    DWORD PTR [rax],0x9
   14002daad:	or     ebx,0xffffffff
   14002dab0:	mov    ecx,edi
   14002dab2:	call   0x14002b320
   14002dab7:	mov    eax,ebx
   14002dab9:	jmp    0x14002dace
   14002dabb:	call   0x14000b9f0
   14002dac0:	mov    DWORD PTR [rax],0x9
   14002dac6:	call   0x14000b8b8
   14002dacb:	or     eax,0xffffffff
   14002dace:	mov    rbx,QWORD PTR [rsp+0x50]
   14002dad3:	mov    rsi,QWORD PTR [rsp+0x58]
   14002dad8:	add    rsp,0x20
   14002dadc:	pop    r15
   14002dade:	pop    r14
   14002dae0:	pop    rdi
   14002dae1:	ret    
   14002dae2:	int3   
   14002dae3:	int3   
   14002dae4:	mov    QWORD PTR [rsp+0x8],rbx
   14002dae9:	mov    QWORD PTR [rsp+0x10],rdi
   14002daee:	movsxd rax,ecx
   14002daf1:	lea    rdi,[rip+0x1ad48]        # 0x140048840
   14002daf8:	mov    r10,rax
   14002dafb:	and    eax,0x1f
   14002dafe:	sar    r10,0x5
   14002db02:	imul   r8,rax,0x58
   14002db06:	mov    r9,QWORD PTR [rdi+r10*8]
   14002db0a:	mov    al,BYTE PTR [r9+r8*1+0x38]
   14002db0f:	movzx  ecx,BYTE PTR [r9+r8*1+0x8]
   14002db15:	add    al,al
   14002db17:	mov    ebx,ecx
   14002db19:	movsx  r11d,al
   14002db1d:	and    ebx,0x80
   14002db23:	sar    r11d,1
   14002db26:	cmp    edx,0x4000
   14002db2c:	je     0x14002db89
   14002db2e:	cmp    edx,0x8000
   14002db34:	je     0x14002db7f
   14002db36:	lea    eax,[rdx-0x10000]
   14002db3c:	test   eax,0xfffeffff
   14002db41:	je     0x14002db65
   14002db43:	cmp    edx,0x40000
   14002db49:	jne    0x14002db9b
   14002db4b:	or     cl,0x80
   14002db4e:	mov    BYTE PTR [r9+r8*1+0x8],cl
   14002db53:	mov    rax,QWORD PTR [rdi+r10*8]
   14002db57:	and    BYTE PTR [rax+r8*1+0x38],0x81
   14002db5d:	or     BYTE PTR [rax+r8*1+0x38],0x1
   14002db63:	jmp    0x14002db9b
   14002db65:	or     cl,0x80
   14002db68:	mov    BYTE PTR [r9+r8*1+0x8],cl
   14002db6d:	mov    rax,QWORD PTR [rdi+r10*8]
   14002db71:	and    BYTE PTR [rax+r8*1+0x38],0x82
   14002db77:	or     BYTE PTR [rax+r8*1+0x38],0x2
   14002db7d:	jmp    0x14002db9b
   14002db7f:	and    cl,0x7f
   14002db82:	mov    BYTE PTR [r9+r8*1+0x8],cl
   14002db87:	jmp    0x14002db9b
   14002db89:	or     cl,0x80
   14002db8c:	mov    BYTE PTR [r9+r8*1+0x8],cl
   14002db91:	mov    rcx,QWORD PTR [rdi+r10*8]
   14002db95:	and    BYTE PTR [rcx+r8*1+0x38],0x80
   14002db9b:	test   ebx,ebx
   14002db9d:	jne    0x14002dba6
   14002db9f:	mov    eax,0x8000
   14002dba4:	jmp    0x14002dbb5
   14002dba6:	neg    r11d
   14002dba9:	sbb    eax,eax
   14002dbab:	and    eax,0xc000
   14002dbb0:	add    eax,0x4000
   14002dbb5:	mov    rbx,QWORD PTR [rsp+0x8]
   14002dbba:	mov    rdi,QWORD PTR [rsp+0x10]
   14002dbbf:	ret    
   14002dbc0:	mov    QWORD PTR [rsp+0x8],rbx
   14002dbc5:	mov    QWORD PTR [rsp+0x10],rdx
   14002dbca:	push   rbp
   14002dbcb:	push   rsi
   14002dbcc:	push   rdi
   14002dbcd:	push   r12
   14002dbcf:	push   r13
   14002dbd1:	push   r14
   14002dbd3:	push   r15
   14002dbd5:	sub    rsp,0x40
   14002dbd9:	mov    r12,rdx
   14002dbdc:	mov    rdx,rcx
   14002dbdf:	lea    rcx,[rsp+0x20]
   14002dbe4:	mov    r14d,r9d
   14002dbe7:	mov    r15,r8
   14002dbea:	call   0x140007ff0
   14002dbef:	test   r15,r15
   14002dbf2:	je     0x14002dbf7
   14002dbf4:	mov    QWORD PTR [r15],r12
   14002dbf7:	test   r12,r12
   14002dbfa:	je     0x14002dc0a
   14002dbfc:	test   r14d,r14d
   14002dbff:	je     0x14002dc1c
   14002dc01:	lea    eax,[r14-0x2]
   14002dc05:	cmp    eax,0x22
   14002dc08:	jbe    0x14002dc1c
   14002dc0a:	call   0x14000b9f0
   14002dc0f:	mov    DWORD PTR [rax],0x16
   14002dc15:	call   0x14000b8b8
   14002dc1a:	jmp    0x14002dc77
   14002dc1c:	movzx  esi,WORD PTR [r12]
   14002dc21:	xor    edi,edi
   14002dc23:	lea    rbx,[r12+0x2]
   14002dc28:	lea    ebp,[rdi+0x8]
   14002dc2b:	jmp    0x14002dc34
   14002dc2d:	movzx  esi,WORD PTR [rbx]
   14002dc30:	add    rbx,0x2
   14002dc34:	mov    edx,ebp
   14002dc36:	movzx  ecx,si
   14002dc39:	call   0x140010b00
   14002dc3e:	test   eax,eax
   14002dc40:	jne    0x14002dc2d
   14002dc42:	mov    ebp,DWORD PTR [rsp+0xa0]
   14002dc49:	cmp    si,0x2d
   14002dc4d:	jne    0x14002dc54
   14002dc4f:	or     ebp,0x2
   14002dc52:	jmp    0x14002dc5a
   14002dc54:	cmp    si,0x2b
   14002dc58:	jne    0x14002dc61
   14002dc5a:	movzx  esi,WORD PTR [rbx]
   14002dc5d:	add    rbx,0x2
   14002dc61:	test   r14d,r14d
   14002dc64:	je     0x14002dc7e
   14002dc66:	lea    eax,[r14-0x2]
   14002dc6a:	cmp    eax,0x22
   14002dc6d:	jbe    0x14002dc7e
   14002dc6f:	test   r15,r15
   14002dc72:	je     0x14002dc77
   14002dc74:	mov    QWORD PTR [r15],r12
   14002dc77:	xor    edi,edi
   14002dc79:	jmp    0x14002ddf7
   14002dc7e:	mov    r13d,0xffdf
   14002dc84:	test   r14d,r14d
   14002dc87:	jne    0x14002dcb8
   14002dc89:	movzx  ecx,si
   14002dc8c:	call   0x14002cae8
   14002dc91:	test   eax,eax
   14002dc93:	je     0x14002dc9d
   14002dc95:	mov    r14d,0xa
   14002dc9b:	jmp    0x14002dcdf
   14002dc9d:	movzx  eax,WORD PTR [rbx]
   14002dca0:	sub    ax,0x58
   14002dca4:	test   r13w,ax
   14002dca8:	je     0x14002dcb2
   14002dcaa:	mov    r14d,0x8
   14002dcb0:	jmp    0x14002dcdf
   14002dcb2:	mov    r14d,0x10
   14002dcb8:	cmp    r14d,0x10
   14002dcbc:	jne    0x14002dcdf
   14002dcbe:	movzx  ecx,si
   14002dcc1:	call   0x14002cae8
   14002dcc6:	test   eax,eax
   14002dcc8:	jne    0x14002dcdf
   14002dcca:	movzx  eax,WORD PTR [rbx]
   14002dccd:	sub    ax,0x58
   14002dcd1:	test   r13w,ax
   14002dcd5:	jne    0x14002dcdf
   14002dcd7:	movzx  esi,WORD PTR [rbx+0x2]
   14002dcdb:	add    rbx,0x4
   14002dcdf:	movsxd rcx,r14d
   14002dce2:	xor    edx,edx
   14002dce4:	or     rax,0xffffffffffffffff
   14002dce8:	div    rcx
   14002dceb:	movsxd r12,r14d
   14002dcee:	mov    QWORD PTR [rsp+0x90],rdx
   14002dcf6:	mov    r13,rax
   14002dcf9:	movzx  ecx,si
   14002dcfc:	call   0x14002cae8
   14002dd01:	mov    r8d,eax
   14002dd04:	cmp    eax,0xffffffff
   14002dd07:	jne    0x14002dd30
   14002dd09:	lea    ecx,[rsi-0x41]
   14002dd0c:	cmp    cx,0x19
   14002dd10:	jbe    0x14002dd1b
   14002dd12:	lea    eax,[rsi-0x61]
   14002dd15:	cmp    ax,0x19
   14002dd19:	ja     0x14002dd54
   14002dd1b:	lea    eax,[rsi-0x61]
   14002dd1e:	movzx  r8d,si
   14002dd22:	cmp    ax,0x19
   14002dd26:	ja     0x14002dd2c
   14002dd28:	sub    r8d,0x20
   14002dd2c:	add    r8d,0xffffffc9
   14002dd30:	cmp    r8d,r14d
   14002dd33:	jae    0x14002dd54
   14002dd35:	or     ebp,0x8
   14002dd38:	cmp    rdi,r13
   14002dd3b:	jb     0x14002dd71
   14002dd3d:	jne    0x14002dd4c
   14002dd3f:	mov    eax,r8d
   14002dd42:	cmp    rax,QWORD PTR [rsp+0x90]
   14002dd4a:	jbe    0x14002dd71
   14002dd4c:	or     ebp,0x4
   14002dd4f:	test   r15,r15
   14002dd52:	jne    0x14002dd7e
   14002dd54:	mov    r12,QWORD PTR [rsp+0x88]
   14002dd5c:	sub    rbx,0x2
   14002dd60:	test   bpl,0x8
   14002dd64:	jne    0x14002dd8a
   14002dd66:	test   r15,r15
   14002dd69:	cmovne rbx,r12
   14002dd6d:	xor    edi,edi
   14002dd6f:	jmp    0x14002dde6
   14002dd71:	mov    rcx,r12
   14002dd74:	imul   rcx,rdi
   14002dd78:	mov    edi,r8d
   14002dd7b:	add    rdi,rcx
   14002dd7e:	movzx  esi,WORD PTR [rbx]
   14002dd81:	add    rbx,0x2
   14002dd85:	jmp    0x14002dcf9
   14002dd8a:	movabs rsi,0x7fffffffffffffff
   14002dd94:	test   bpl,0x4
   14002dd98:	jne    0x14002ddbf
   14002dd9a:	test   bpl,0x1
   14002dd9e:	jne    0x14002dde6
   14002dda0:	mov    eax,ebp
   14002dda2:	and    eax,0x2
   14002dda5:	je     0x14002ddb6
   14002dda7:	movabs rcx,0x8000000000000000
   14002ddb1:	cmp    rdi,rcx
   14002ddb4:	ja     0x14002ddbf
   14002ddb6:	test   eax,eax
   14002ddb8:	jne    0x14002dde6
   14002ddba:	cmp    rdi,rsi
   14002ddbd:	jbe    0x14002dde6
   14002ddbf:	call   0x14000b9f0
   14002ddc4:	mov    DWORD PTR [rax],0x22
   14002ddca:	test   bpl,0x1
   14002ddce:	je     0x14002ddd6
   14002ddd0:	or     rdi,0xffffffffffffffff
   14002ddd4:	jmp    0x14002dde6
   14002ddd6:	mov    al,bpl
   14002ddd9:	and    al,0x2
   14002dddb:	neg    al
   14002dddd:	sbb    rdi,rdi
   14002dde0:	neg    rdi
   14002dde3:	add    rdi,rsi
   14002dde6:	test   r15,r15
   14002dde9:	je     0x14002ddee
   14002ddeb:	mov    QWORD PTR [r15],rbx
   14002ddee:	test   bpl,0x2
   14002ddf2:	je     0x14002ddf7
   14002ddf4:	neg    rdi
   14002ddf7:	cmp    BYTE PTR [rsp+0x38],0x0
   14002ddfc:	je     0x14002de0a
   14002ddfe:	mov    rcx,QWORD PTR [rsp+0x30]
   14002de03:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002de0a:	mov    rax,rdi
   14002de0d:	mov    rbx,QWORD PTR [rsp+0x80]
   14002de15:	add    rsp,0x40
   14002de19:	pop    r15
   14002de1b:	pop    r14
   14002de1d:	pop    r13
   14002de1f:	pop    r12
   14002de21:	pop    rdi
   14002de22:	pop    rsi
   14002de23:	pop    rbp
   14002de24:	ret    
   14002de25:	int3   
   14002de26:	int3   
   14002de27:	int3   
   14002de28:	mov    rax,rsp
   14002de2b:	mov    QWORD PTR [rax+0x8],rbx
   14002de2f:	mov    QWORD PTR [rax+0x10],rbp
   14002de33:	push   rsi
   14002de34:	push   rdi
   14002de35:	push   r14
   14002de37:	sub    rsp,0x50
   14002de3b:	and    QWORD PTR [rax-0x30],0x0
   14002de40:	and    QWORD PTR [rax-0x38],0x0
   14002de45:	and    DWORD PTR [rax-0x40],0x0
   14002de49:	and    QWORD PTR [rax-0x48],0x0
   14002de4e:	mov    r14,r8
   14002de51:	mov    rdi,rdx
   14002de54:	mov    r8,rcx
   14002de57:	mov    rsi,rcx
   14002de5a:	or     r9d,0xffffffff
   14002de5e:	xor    ecx,ecx
   14002de60:	xor    edx,edx
   14002de62:	call   QWORD PTR [rip+0x7268]        # 0x1400350d0
   14002de68:	movsxd rbp,eax
   14002de6b:	test   eax,eax
   14002de6d:	jne    0x14002de84
   14002de6f:	call   QWORD PTR [rip+0x7373]        # 0x1400351e8
   14002de75:	mov    ecx,eax
   14002de77:	call   0x14000b9a0
   14002de7c:	xorps  xmm0,xmm0
   14002de7f:	jmp    0x14002df23
   14002de84:	mov    rcx,rbp
   14002de87:	call   0x14000fc4c
   14002de8c:	mov    rbx,rax
   14002de8f:	test   rax,rax
   14002de92:	je     0x14002de7c
   14002de94:	and    QWORD PTR [rsp+0x38],0x0
   14002de9a:	and    QWORD PTR [rsp+0x30],0x0
   14002dea0:	or     r9d,0xffffffff
   14002dea4:	mov    r8,rsi
   14002dea7:	xor    edx,edx
   14002dea9:	xor    ecx,ecx
   14002deab:	mov    DWORD PTR [rsp+0x28],ebp
   14002deaf:	mov    QWORD PTR [rsp+0x20],rax
   14002deb4:	call   QWORD PTR [rip+0x7216]        # 0x1400350d0
   14002deba:	test   eax,eax
   14002debc:	jne    0x14002ded5
   14002debe:	call   QWORD PTR [rip+0x7324]        # 0x1400351e8
   14002dec4:	mov    ecx,eax
   14002dec6:	call   0x14000b9a0
   14002decb:	mov    rcx,rbx
   14002dece:	call   0x14000fb50
   14002ded3:	jmp    0x14002de7c
   14002ded5:	and    QWORD PTR [rsp+0x40],0x0
   14002dedb:	lea    r9,[rsp+0x40]
   14002dee0:	lea    rcx,[rsp+0x88]
   14002dee8:	mov    r8,r14
   14002deeb:	mov    rdx,rbx
   14002deee:	call   0x14002e5fc
   14002def3:	test   rdi,rdi
   14002def6:	je     0x14002df12
   14002def8:	mov    rax,QWORD PTR [rsp+0x40]
   14002defd:	test   rax,rax
   14002df00:	je     0x14002df0e
   14002df02:	sub    rax,rbx
   14002df05:	lea    rax,[rsi+rax*2]
   14002df09:	mov    QWORD PTR [rdi],rax
   14002df0c:	jmp    0x14002df12
   14002df0e:	and    QWORD PTR [rdi],0x0
   14002df12:	mov    rcx,rbx
   14002df15:	call   0x14000fb50
   14002df1a:	movss  xmm0,DWORD PTR [rsp+0x88]
   14002df23:	mov    rbx,QWORD PTR [rsp+0x70]
   14002df28:	mov    rbp,QWORD PTR [rsp+0x78]
   14002df2d:	add    rsp,0x50
   14002df31:	pop    r14
   14002df33:	pop    rdi
   14002df34:	pop    rsi
   14002df35:	ret    
   14002df36:	int3   
   14002df37:	int3   
   14002df38:	sub    rsp,0x38
   14002df3c:	xor    eax,eax
   14002df3e:	mov    r9d,r8d
   14002df41:	mov    r8,rdx
   14002df44:	cmp    DWORD PTR [rip+0x19aaa],eax        # 0x1400479f4
   14002df4a:	mov    DWORD PTR [rsp+0x20],eax
   14002df4e:	mov    rdx,rcx
   14002df51:	jne    0x14002df5c
   14002df53:	lea    rcx,[rip+0x181ee]        # 0x140046148
   14002df5a:	jmp    0x14002df5e
   14002df5c:	xor    ecx,ecx
   14002df5e:	call   0x14002dbc0
   14002df63:	add    rsp,0x38
   14002df67:	ret    
   14002df68:	sub    rsp,0x38
   14002df6c:	and    DWORD PTR [rsp+0x20],0x0
   14002df71:	mov    rax,r9
   14002df74:	mov    r9d,r8d
   14002df77:	mov    r8,rdx
   14002df7a:	mov    rdx,rcx
   14002df7d:	mov    rcx,rax
   14002df80:	call   0x14002dbc0
   14002df85:	add    rsp,0x38
   14002df89:	ret    
   14002df8a:	int3   
   14002df8b:	int3   
   14002df8c:	sub    rsp,0x38
   14002df90:	and    DWORD PTR [rsp+0x20],0x0
   14002df95:	mov    rax,r9
   14002df98:	mov    r9d,r8d
   14002df9b:	mov    r8,rdx
   14002df9e:	mov    rdx,rcx
   14002dfa1:	mov    rcx,rax
   14002dfa4:	call   0x14002dbc0
   14002dfa9:	add    rsp,0x38
   14002dfad:	ret    
   14002dfae:	int3   
   14002dfaf:	int3   
   14002dfb0:	jmp    0x14002e4c4
   14002dfb5:	int3   
   14002dfb6:	int3   
   14002dfb7:	int3   
   14002dfb8:	sub    rsp,0x38
   14002dfbc:	and    DWORD PTR [rsp+0x20],0x0
   14002dfc1:	mov    rax,r9
   14002dfc4:	mov    r9d,r8d
   14002dfc7:	mov    r8,rdx
   14002dfca:	mov    rdx,rcx
   14002dfcd:	mov    rcx,rax
   14002dfd0:	call   0x14002dbc0
   14002dfd5:	add    rsp,0x38
   14002dfd9:	ret    
   14002dfda:	int3   
   14002dfdb:	int3   
   14002dfdc:	sub    rsp,0x38
   14002dfe0:	cmp    DWORD PTR [rip+0x19a0d],0x0        # 0x1400479f4
   14002dfe7:	mov    r9d,r8d
   14002dfea:	mov    r8,rdx
   14002dfed:	mov    rdx,rcx
   14002dff0:	mov    DWORD PTR [rsp+0x20],0x1
   14002dff8:	jne    0x14002e003
   14002dffa:	lea    rcx,[rip+0x18147]        # 0x140046148
   14002e001:	jmp    0x14002e005
   14002e003:	xor    ecx,ecx
   14002e005:	call   0x14002dbc0
   14002e00a:	add    rsp,0x38
   14002e00e:	ret    
   14002e00f:	int3   
   14002e010:	sub    rsp,0x38
   14002e014:	mov    rax,r9
   14002e017:	mov    r9d,r8d
   14002e01a:	mov    r8,rdx
   14002e01d:	mov    rdx,rcx
   14002e020:	mov    rcx,rax
   14002e023:	mov    DWORD PTR [rsp+0x20],0x1
   14002e02b:	call   0x14002dbc0
   14002e030:	add    rsp,0x38
   14002e034:	ret    
   14002e035:	int3   
   14002e036:	int3   
   14002e037:	int3   
   14002e038:	sub    rsp,0x38
   14002e03c:	mov    rax,r9
   14002e03f:	mov    r9d,r8d
   14002e042:	mov    r8,rdx
   14002e045:	mov    rdx,rcx
   14002e048:	mov    rcx,rax
   14002e04b:	mov    DWORD PTR [rsp+0x20],0x1
   14002e053:	call   0x14002dbc0
   14002e058:	add    rsp,0x38
   14002e05c:	ret    
   14002e05d:	int3   
   14002e05e:	int3   
   14002e05f:	int3   
   14002e060:	sub    rsp,0x38
   14002e064:	mov    rax,r9
   14002e067:	mov    r9d,r8d
   14002e06a:	mov    r8,rdx
   14002e06d:	mov    rdx,rcx
   14002e070:	mov    rcx,rax
   14002e073:	mov    DWORD PTR [rsp+0x20],0x1
   14002e07b:	call   0x14002dbc0
   14002e080:	add    rsp,0x38
   14002e084:	ret    
   14002e085:	int3   
   14002e086:	int3   
   14002e087:	int3   
   14002e088:	xor    r8d,r8d
   14002e08b:	jmp    0x14002de28
   14002e090:	jmp    0x14002df38
   14002e095:	int3   
   14002e096:	int3   
   14002e097:	int3   
   14002e098:	jmp    0x14002e5f4
   14002e09d:	int3   
   14002e09e:	int3   
   14002e09f:	int3   
   14002e0a0:	jmp    0x14002df38
   14002e0a5:	int3   
   14002e0a6:	int3   
   14002e0a7:	int3   
   14002e0a8:	jmp    0x14002dfdc
   14002e0ad:	int3   
   14002e0ae:	int3   
   14002e0af:	int3   
   14002e0b0:	jmp    0x14002dfdc
   14002e0b5:	int3   
   14002e0b6:	int3   
   14002e0b7:	int3   
   14002e0b8:	mov    rax,rsp
   14002e0bb:	mov    QWORD PTR [rax+0x8],rbx
   14002e0bf:	mov    QWORD PTR [rax+0x18],rbp
   14002e0c3:	mov    QWORD PTR [rax+0x20],rsi
   14002e0c7:	push   rdi
   14002e0c8:	push   r12
   14002e0ca:	push   r13
   14002e0cc:	push   r14
   14002e0ce:	push   r15
   14002e0d0:	sub    rsp,0x40
   14002e0d4:	mov    r12,rdx
   14002e0d7:	mov    rdx,rcx
   14002e0da:	lea    rcx,[rax-0x48]
   14002e0de:	mov    r14d,r9d
   14002e0e1:	mov    r15,r8
   14002e0e4:	call   0x140007ff0
   14002e0e9:	test   r15,r15
   14002e0ec:	je     0x14002e0f1
   14002e0ee:	mov    QWORD PTR [r15],r12
   14002e0f1:	test   r12,r12
   14002e0f4:	je     0x14002e104
   14002e0f6:	test   r14d,r14d
   14002e0f9:	je     0x14002e11b
   14002e0fb:	lea    eax,[r14-0x2]
   14002e0ff:	cmp    eax,0x22
   14002e102:	jbe    0x14002e11b
   14002e104:	call   0x14000b9f0
   14002e109:	mov    DWORD PTR [rax],0x16
   14002e10f:	call   0x14000b8b8
   14002e114:	xor    edi,edi
   14002e116:	jmp    0x14002e2d1
   14002e11b:	mov    sil,BYTE PTR [r12]
   14002e11f:	mov    r8,QWORD PTR [rsp+0x20]
   14002e124:	xor    edi,edi
   14002e126:	lea    rbx,[r12+0x1]
   14002e12b:	cmp    DWORD PTR [r8+0xd4],0x1
   14002e133:	jle    0x14002e14f
   14002e135:	lea    r8,[rsp+0x20]
   14002e13a:	movzx  ecx,sil
   14002e13e:	mov    edx,0x8
   14002e143:	call   0x14002c4c4
   14002e148:	mov    r8,QWORD PTR [rsp+0x20]
   14002e14d:	jmp    0x14002e161
   14002e14f:	mov    rax,QWORD PTR [r8+0x108]
   14002e156:	movzx  ecx,sil
   14002e15a:	movzx  eax,WORD PTR [rax+rcx*2]
   14002e15e:	and    eax,0x8
   14002e161:	test   eax,eax
   14002e163:	je     0x14002e16d
   14002e165:	mov    sil,BYTE PTR [rbx]
   14002e168:	inc    rbx
   14002e16b:	jmp    0x14002e12b
   14002e16d:	mov    ebp,DWORD PTR [rsp+0x90]
   14002e174:	cmp    sil,0x2d
   14002e178:	jne    0x14002e17f
   14002e17a:	or     ebp,0x2
   14002e17d:	jmp    0x14002e185
   14002e17f:	cmp    sil,0x2b
   14002e183:	jne    0x14002e18b
   14002e185:	mov    sil,BYTE PTR [rbx]
   14002e188:	inc    rbx
   14002e18b:	test   r14d,r14d
   14002e18e:	jne    0x14002e1b4
   14002e190:	cmp    sil,0x30
   14002e194:	je     0x14002e19e
   14002e196:	mov    r14d,0xa
   14002e19c:	jmp    0x14002e1d0
   14002e19e:	mov    al,BYTE PTR [rbx]
   14002e1a0:	sub    al,0x58
   14002e1a2:	test   al,0xdf
   14002e1a4:	je     0x14002e1ae
   14002e1a6:	mov    r14d,0x8
   14002e1ac:	jmp    0x14002e1d0
   14002e1ae:	mov    r14d,0x10
   14002e1b4:	cmp    r14d,0x10
   14002e1b8:	jne    0x14002e1d0
   14002e1ba:	cmp    sil,0x30
   14002e1be:	jne    0x14002e1d0
   14002e1c0:	mov    al,BYTE PTR [rbx]
   14002e1c2:	sub    al,0x58
   14002e1c4:	test   al,0xdf
   14002e1c6:	jne    0x14002e1d0
   14002e1c8:	mov    sil,BYTE PTR [rbx+0x1]
   14002e1cc:	add    rbx,0x2
   14002e1d0:	mov    r13,QWORD PTR [r8+0x108]
   14002e1d7:	movsxd r10,r14d
   14002e1da:	xor    edx,edx
   14002e1dc:	or     rax,0xffffffffffffffff
   14002e1e0:	div    r10
   14002e1e3:	mov    r11,rdx
   14002e1e6:	mov    r9,rax
   14002e1e9:	movzx  ecx,sil
   14002e1ed:	movzx  r8d,WORD PTR [r13+rcx*2+0x0]
   14002e1f3:	mov    ecx,r8d
   14002e1f6:	and    ecx,0x4
   14002e1f9:	je     0x14002e204
   14002e1fb:	movsx  edx,sil
   14002e1ff:	sub    edx,0x30
   14002e202:	jmp    0x14002e21e
   14002e204:	and    r8d,0x103
   14002e20b:	je     0x14002e23c
   14002e20d:	lea    eax,[rsi-0x61]
   14002e210:	movsx  edx,sil
   14002e214:	cmp    al,0x19
   14002e216:	ja     0x14002e21b
   14002e218:	sub    edx,0x20
   14002e21b:	add    edx,0xffffffc9
   14002e21e:	cmp    edx,r14d
   14002e221:	jae    0x14002e23c
   14002e223:	or     ebp,0x8
   14002e226:	cmp    rdi,r9
   14002e229:	jb     0x14002e250
   14002e22b:	jne    0x14002e234
   14002e22d:	mov    eax,edx
   14002e22f:	cmp    rax,r11
   14002e232:	jbe    0x14002e250
   14002e234:	or     ebp,0x4
   14002e237:	test   r15,r15
   14002e23a:	jne    0x14002e25c
   14002e23c:	dec    rbx
   14002e23f:	test   bpl,0x8
   14002e243:	jne    0x14002e264
   14002e245:	test   r15,r15
   14002e248:	cmovne rbx,r12
   14002e24c:	xor    edi,edi
   14002e24e:	jmp    0x14002e2c0
   14002e250:	mov    rcx,r10
   14002e253:	imul   rcx,rdi
   14002e257:	mov    edi,edx
   14002e259:	add    rdi,rcx
   14002e25c:	mov    sil,BYTE PTR [rbx]
   14002e25f:	inc    rbx
   14002e262:	jmp    0x14002e1e9
   14002e264:	movabs rsi,0x7fffffffffffffff
   14002e26e:	test   bpl,0x4
   14002e272:	jne    0x14002e299
   14002e274:	test   bpl,0x1
   14002e278:	jne    0x14002e2c0
   14002e27a:	mov    eax,ebp
   14002e27c:	and    eax,0x2
   14002e27f:	je     0x14002e290
   14002e281:	movabs rcx,0x8000000000000000
   14002e28b:	cmp    rdi,rcx
   14002e28e:	ja     0x14002e299
   14002e290:	test   eax,eax
   14002e292:	jne    0x14002e2c0
   14002e294:	cmp    rdi,rsi
   14002e297:	jbe    0x14002e2c0
   14002e299:	call   0x14000b9f0
   14002e29e:	mov    DWORD PTR [rax],0x22
   14002e2a4:	test   bpl,0x1
   14002e2a8:	je     0x14002e2b0
   14002e2aa:	or     rdi,0xffffffffffffffff
   14002e2ae:	jmp    0x14002e2c0
   14002e2b0:	mov    al,bpl
   14002e2b3:	and    al,0x2
   14002e2b5:	neg    al
   14002e2b7:	sbb    rdi,rdi
   14002e2ba:	neg    rdi
   14002e2bd:	add    rdi,rsi
   14002e2c0:	test   r15,r15
   14002e2c3:	je     0x14002e2c8
   14002e2c5:	mov    QWORD PTR [r15],rbx
   14002e2c8:	test   bpl,0x2
   14002e2cc:	je     0x14002e2d1
   14002e2ce:	neg    rdi
   14002e2d1:	cmp    BYTE PTR [rsp+0x38],0x0
   14002e2d6:	je     0x14002e2e4
   14002e2d8:	mov    rcx,QWORD PTR [rsp+0x30]
   14002e2dd:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002e2e4:	lea    r11,[rsp+0x40]
   14002e2e9:	mov    rax,rdi
   14002e2ec:	mov    rbx,QWORD PTR [r11+0x30]
   14002e2f0:	mov    rbp,QWORD PTR [r11+0x40]
   14002e2f4:	mov    rsi,QWORD PTR [r11+0x48]
   14002e2f8:	mov    rsp,r11
   14002e2fb:	pop    r15
   14002e2fd:	pop    r14
   14002e2ff:	pop    r13
   14002e301:	pop    r12
   14002e303:	pop    rdi
   14002e304:	ret    
   14002e305:	int3   
   14002e306:	int3   
   14002e307:	int3   
   14002e308:	sub    rsp,0x28
   14002e30c:	mov    r9,rdx
   14002e30f:	mov    rdx,rcx
   14002e312:	lea    rcx,[rsp+0x48]
   14002e317:	call   0x14002e5fc
   14002e31c:	movss  xmm0,DWORD PTR [rsp+0x48]
   14002e322:	add    rsp,0x28
   14002e326:	ret    
   14002e327:	int3   
   14002e328:	sub    rsp,0x38
   14002e32c:	xor    eax,eax
   14002e32e:	mov    r9d,r8d
   14002e331:	mov    r8,rdx
   14002e334:	cmp    DWORD PTR [rip+0x196ba],eax        # 0x1400479f4
   14002e33a:	mov    DWORD PTR [rsp+0x20],eax
   14002e33e:	mov    rdx,rcx
   14002e341:	jne    0x14002e34c
   14002e343:	lea    rcx,[rip+0x17dfe]        # 0x140046148
   14002e34a:	jmp    0x14002e34e
   14002e34c:	xor    ecx,ecx
   14002e34e:	call   0x14002e0b8
   14002e353:	add    rsp,0x38
   14002e357:	ret    
   14002e358:	sub    rsp,0x38
   14002e35c:	and    DWORD PTR [rsp+0x20],0x0
   14002e361:	mov    rax,r9
   14002e364:	mov    r9d,r8d
   14002e367:	mov    r8,rdx
   14002e36a:	mov    rdx,rcx
   14002e36d:	mov    rcx,rax
   14002e370:	call   0x14002e0b8
   14002e375:	add    rsp,0x38
   14002e379:	ret    
   14002e37a:	int3   
   14002e37b:	int3   
   14002e37c:	sub    rsp,0x38
   14002e380:	and    DWORD PTR [rsp+0x20],0x0
   14002e385:	mov    rax,r9
   14002e388:	mov    r9d,r8d
   14002e38b:	mov    r8,rdx
   14002e38e:	mov    rdx,rcx
   14002e391:	mov    rcx,rax
   14002e394:	call   0x14002e0b8
   14002e399:	add    rsp,0x38
   14002e39d:	ret    
   14002e39e:	int3   
   14002e39f:	int3   
   14002e3a0:	jmp    0x14002e924
   14002e3a5:	int3   
   14002e3a6:	int3   
   14002e3a7:	int3   
   14002e3a8:	sub    rsp,0x38
   14002e3ac:	and    DWORD PTR [rsp+0x20],0x0
   14002e3b1:	mov    rax,r9
   14002e3b4:	mov    r9d,r8d
   14002e3b7:	mov    r8,rdx
   14002e3ba:	mov    rdx,rcx
   14002e3bd:	mov    rcx,rax
   14002e3c0:	call   0x14002e0b8
   14002e3c5:	add    rsp,0x38
   14002e3c9:	ret    
   14002e3ca:	int3   
   14002e3cb:	int3   
   14002e3cc:	sub    rsp,0x38
   14002e3d0:	cmp    DWORD PTR [rip+0x1961d],0x0        # 0x1400479f4
   14002e3d7:	mov    r9d,r8d
   14002e3da:	mov    r8,rdx
   14002e3dd:	mov    rdx,rcx
   14002e3e0:	mov    DWORD PTR [rsp+0x20],0x1
   14002e3e8:	jne    0x14002e3f3
   14002e3ea:	lea    rcx,[rip+0x17d57]        # 0x140046148
   14002e3f1:	jmp    0x14002e3f5
   14002e3f3:	xor    ecx,ecx
   14002e3f5:	call   0x14002e0b8
   14002e3fa:	add    rsp,0x38
   14002e3fe:	ret    
   14002e3ff:	int3   
   14002e400:	sub    rsp,0x38
   14002e404:	mov    rax,r9
   14002e407:	mov    r9d,r8d
   14002e40a:	mov    r8,rdx
   14002e40d:	mov    rdx,rcx
   14002e410:	mov    rcx,rax
   14002e413:	mov    DWORD PTR [rsp+0x20],0x1
   14002e41b:	call   0x14002e0b8
   14002e420:	add    rsp,0x38
   14002e424:	ret    
   14002e425:	int3   
   14002e426:	int3   
   14002e427:	int3   
   14002e428:	sub    rsp,0x38
   14002e42c:	mov    rax,r9
   14002e42f:	mov    r9d,r8d
   14002e432:	mov    r8,rdx
   14002e435:	mov    rdx,rcx
   14002e438:	mov    rcx,rax
   14002e43b:	mov    DWORD PTR [rsp+0x20],0x1
   14002e443:	call   0x14002e0b8
   14002e448:	add    rsp,0x38
   14002e44c:	ret    
   14002e44d:	int3   
   14002e44e:	int3   
   14002e44f:	int3   
   14002e450:	sub    rsp,0x38
   14002e454:	mov    rax,r9
   14002e457:	mov    r9d,r8d
   14002e45a:	mov    r8,rdx
   14002e45d:	mov    rdx,rcx
   14002e460:	mov    rcx,rax
   14002e463:	mov    DWORD PTR [rsp+0x20],0x1
   14002e46b:	call   0x14002e0b8
   14002e470:	add    rsp,0x38
   14002e474:	ret    
   14002e475:	int3   
   14002e476:	int3   
   14002e477:	int3   
   14002e478:	sub    rsp,0x28
   14002e47c:	mov    r9,rdx
   14002e47f:	mov    rdx,rcx
   14002e482:	lea    rcx,[rsp+0x40]
   14002e487:	xor    r8d,r8d
   14002e48a:	call   0x14002e5fc
   14002e48f:	movss  xmm0,DWORD PTR [rsp+0x40]
   14002e495:	add    rsp,0x28
   14002e499:	ret    
   14002e49a:	int3   
   14002e49b:	int3   
   14002e49c:	jmp    0x14002e328
   14002e4a1:	int3   
   14002e4a2:	int3   
   14002e4a3:	int3   
   14002e4a4:	jmp    0x14002ea78
   14002e4a9:	int3   
   14002e4aa:	int3   
   14002e4ab:	int3   
   14002e4ac:	jmp    0x14002e328
   14002e4b1:	int3   
   14002e4b2:	int3   
   14002e4b3:	int3   
   14002e4b4:	jmp    0x14002e3cc
   14002e4b9:	int3   
   14002e4ba:	int3   
   14002e4bb:	int3   
   14002e4bc:	jmp    0x14002e3cc
   14002e4c1:	int3   
   14002e4c2:	int3   
   14002e4c3:	int3   
   14002e4c4:	mov    QWORD PTR [rsp+0x18],rbx
   14002e4c9:	mov    QWORD PTR [rsp+0x20],rsi
   14002e4ce:	push   rdi
   14002e4cf:	sub    rsp,0x70
   14002e4d3:	movaps XMMWORD PTR [rsp+0x60],xmm6
   14002e4d8:	mov    rax,QWORD PTR [rip+0x16d91]        # 0x140045270
   14002e4df:	xor    rax,rsp
   14002e4e2:	mov    QWORD PTR [rsp+0x58],rax
   14002e4e7:	mov    rsi,rcx
   14002e4ea:	mov    rdi,rcx
   14002e4ed:	mov    rbx,rdx
   14002e4f0:	lea    rcx,[rsp+0x20]
   14002e4f5:	mov    rdx,r8
   14002e4f8:	call   0x140007ff0
   14002e4fd:	test   rbx,rbx
   14002e500:	je     0x14002e505
   14002e502:	mov    QWORD PTR [rbx],rdi
   14002e505:	test   rsi,rsi
   14002e508:	jne    0x14002e522
   14002e50a:	call   0x14000b9f0
   14002e50f:	mov    DWORD PTR [rax],0x16
   14002e515:	call   0x14000b8b8
   14002e51a:	xorps  xmm6,xmm6
   14002e51d:	jmp    0x14002e5b9
   14002e522:	movzx  ecx,WORD PTR [rsi]
   14002e525:	jmp    0x14002e52e
   14002e527:	add    rdi,0x2
   14002e52b:	movzx  ecx,WORD PTR [rdi]
   14002e52e:	mov    edx,0x8
   14002e533:	call   0x140010b00
   14002e538:	test   eax,eax
   14002e53a:	jne    0x14002e527
   14002e53c:	lea    r8,[rsp+0x20]
   14002e541:	lea    rcx,[rsp+0x40]
   14002e546:	mov    rdx,rdi
   14002e549:	call   0x14002ea80
   14002e54e:	test   rbx,rbx
   14002e551:	je     0x14002e55e
   14002e553:	movsxd rcx,DWORD PTR [rax+0x4]
   14002e557:	lea    rdx,[rdi+rcx*2]
   14002e55b:	mov    QWORD PTR [rbx],rdx
   14002e55e:	test   DWORD PTR [rax],0x240
   14002e564:	je     0x14002e573
   14002e566:	xorps  xmm6,xmm6
   14002e569:	test   rbx,rbx
   14002e56c:	je     0x14002e5b9
   14002e56e:	mov    QWORD PTR [rbx],rsi
   14002e571:	jmp    0x14002e5b9
   14002e573:	test   BYTE PTR [rax],0x81
   14002e576:	je     0x14002e58f
   14002e578:	cmp    WORD PTR [rdi],0x2d
   14002e57c:	movsd  xmm6,QWORD PTR [rip+0x180cc]        # 0x140046650
   14002e584:	jne    0x14002e5a7
   14002e586:	xorps  xmm6,XMMWORD PTR [rip+0x10c83]        # 0x14003f210
   14002e58d:	jmp    0x14002e5a7
   14002e58f:	test   DWORD PTR [rax],0x100
   14002e595:	je     0x14002e5b4
   14002e597:	movsd  xmm0,QWORD PTR [rax+0x10]
   14002e59c:	xorps  xmm6,xmm6
   14002e59f:	ucomisd xmm0,xmm6
   14002e5a3:	jp     0x14002e5b4
   14002e5a5:	jne    0x14002e5b4
   14002e5a7:	call   0x14000b9f0
   14002e5ac:	mov    DWORD PTR [rax],0x22
   14002e5b2:	jmp    0x14002e5b9
   14002e5b4:	movsd  xmm6,QWORD PTR [rax+0x10]
   14002e5b9:	cmp    BYTE PTR [rsp+0x38],0x0
   14002e5be:	je     0x14002e5cc
   14002e5c0:	mov    rax,QWORD PTR [rsp+0x30]
   14002e5c5:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002e5cc:	movaps xmm0,xmm6
   14002e5cf:	mov    rcx,QWORD PTR [rsp+0x58]
   14002e5d4:	xor    rcx,rsp
   14002e5d7:	call   0x1400097d0
   14002e5dc:	lea    r11,[rsp+0x70]
   14002e5e1:	mov    rbx,QWORD PTR [r11+0x20]
   14002e5e5:	mov    rsi,QWORD PTR [r11+0x28]
   14002e5e9:	movaps xmm6,XMMWORD PTR [rsp+0x60]
   14002e5ee:	mov    rsp,r11
   14002e5f1:	pop    rdi
   14002e5f2:	ret    
   14002e5f3:	int3   
   14002e5f4:	xor    r8d,r8d
   14002e5f7:	jmp    0x14002e4c4
   14002e5fc:	rex push rbx
   14002e5fe:	push   rsi
   14002e5ff:	push   rdi
   14002e600:	sub    rsp,0x80
   14002e607:	mov    rax,QWORD PTR [rip+0x16c62]        # 0x140045270
   14002e60e:	xor    rax,rsp
   14002e611:	mov    QWORD PTR [rsp+0x78],rax
   14002e616:	mov    rsi,rcx
   14002e619:	mov    rbx,rdx
   14002e61c:	lea    rcx,[rsp+0x48]
   14002e621:	mov    rdx,r8
   14002e624:	mov    rdi,r9
   14002e627:	call   0x140007ff0
   14002e62c:	lea    rax,[rsp+0x48]
   14002e631:	lea    rdx,[rsp+0x40]
   14002e636:	mov    QWORD PTR [rsp+0x38],rax
   14002e63b:	and    DWORD PTR [rsp+0x30],0x0
   14002e640:	and    DWORD PTR [rsp+0x28],0x0
   14002e645:	and    DWORD PTR [rsp+0x20],0x0
   14002e64a:	lea    rcx,[rsp+0x68]
   14002e64f:	xor    r9d,r9d
   14002e652:	mov    r8,rbx
   14002e655:	call   0x140030810
   14002e65a:	mov    ebx,eax
   14002e65c:	test   rdi,rdi
   14002e65f:	je     0x14002e669
   14002e661:	mov    rcx,QWORD PTR [rsp+0x40]
   14002e666:	mov    QWORD PTR [rdi],rcx
   14002e669:	lea    rcx,[rsp+0x68]
   14002e66e:	mov    rdx,rsi
   14002e671:	call   0x14002f9b8
   14002e676:	mov    ecx,eax
   14002e678:	mov    eax,0x3
   14002e67d:	test   al,bl
   14002e67f:	jne    0x14002e68d
   14002e681:	cmp    ecx,0x1
   14002e684:	je     0x14002e6a0
   14002e686:	cmp    ecx,0x2
   14002e689:	jne    0x14002e69e
   14002e68b:	jmp    0x14002e692
   14002e68d:	test   bl,0x1
   14002e690:	je     0x14002e699
   14002e692:	mov    eax,0x4
   14002e697:	jmp    0x14002e6a0
   14002e699:	test   bl,0x2
   14002e69c:	jne    0x14002e6a0
   14002e69e:	xor    eax,eax
   14002e6a0:	cmp    BYTE PTR [rsp+0x60],0x0
   14002e6a5:	je     0x14002e6b3
   14002e6a7:	mov    rcx,QWORD PTR [rsp+0x58]
   14002e6ac:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002e6b3:	mov    rcx,QWORD PTR [rsp+0x78]
   14002e6b8:	xor    rcx,rsp
   14002e6bb:	call   0x1400097d0
   14002e6c0:	add    rsp,0x80
   14002e6c7:	pop    rdi
   14002e6c8:	pop    rsi
   14002e6c9:	pop    rbx
   14002e6ca:	ret    
   14002e6cb:	int3   
   14002e6cc:	xor    r8d,r8d
   14002e6cf:	jmp    0x14002e6d4
   14002e6d4:	mov    QWORD PTR [rsp+0x18],rbx
   14002e6d9:	push   rdi
   14002e6da:	sub    rsp,0x80
   14002e6e1:	mov    rax,QWORD PTR [rip+0x16b88]        # 0x140045270
   14002e6e8:	xor    rax,rsp
   14002e6eb:	mov    QWORD PTR [rsp+0x78],rax
   14002e6f0:	mov    rdi,rcx
   14002e6f3:	mov    rbx,rdx
   14002e6f6:	lea    rcx,[rsp+0x40]
   14002e6fb:	mov    rdx,r8
   14002e6fe:	call   0x140007ff0
   14002e703:	lea    rax,[rsp+0x40]
   14002e708:	lea    rdx,[rsp+0x60]
   14002e70d:	mov    QWORD PTR [rsp+0x38],rax
   14002e712:	and    DWORD PTR [rsp+0x30],0x0
   14002e717:	and    DWORD PTR [rsp+0x28],0x0
   14002e71c:	and    DWORD PTR [rsp+0x20],0x0
   14002e721:	lea    rcx,[rsp+0x68]
   14002e726:	xor    r9d,r9d
   14002e729:	mov    r8,rbx
   14002e72c:	call   0x140030810
   14002e731:	lea    rcx,[rsp+0x68]
   14002e736:	mov    rdx,rdi
   14002e739:	mov    ebx,eax
   14002e73b:	call   0x14002f400
   14002e740:	mov    ecx,eax
   14002e742:	mov    eax,0x3
   14002e747:	test   al,bl
   14002e749:	jne    0x14002e757
   14002e74b:	cmp    ecx,0x1
   14002e74e:	je     0x14002e76a
   14002e750:	cmp    ecx,0x2
   14002e753:	jne    0x14002e768
   14002e755:	jmp    0x14002e75c
   14002e757:	test   bl,0x1
   14002e75a:	je     0x14002e763
   14002e75c:	mov    eax,0x4
   14002e761:	jmp    0x14002e76a
   14002e763:	test   bl,0x2
   14002e766:	jne    0x14002e76a
   14002e768:	xor    eax,eax
   14002e76a:	cmp    BYTE PTR [rsp+0x58],0x0
   14002e76f:	je     0x14002e77d
   14002e771:	mov    rcx,QWORD PTR [rsp+0x50]
   14002e776:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002e77d:	mov    rcx,QWORD PTR [rsp+0x78]
   14002e782:	xor    rcx,rsp
   14002e785:	call   0x1400097d0
   14002e78a:	mov    rbx,QWORD PTR [rsp+0xa0]
   14002e792:	add    rsp,0x80
   14002e799:	pop    rdi
   14002e79a:	ret    
   14002e79b:	int3   
   14002e79c:	xor    r9d,r9d
   14002e79f:	xor    r8d,r8d
   14002e7a2:	jmp    0x14002e5fc
   14002e7a7:	int3   
   14002e7a8:	xor    r9d,r9d
   14002e7ab:	jmp    0x14002e5fc
   14002e7b0:	xor    r8d,r8d
   14002e7b3:	jmp    0x14002e7b8
   14002e7b8:	mov    QWORD PTR [rsp+0x18],rbx
   14002e7bd:	push   rdi
   14002e7be:	sub    rsp,0x80
   14002e7c5:	mov    rax,QWORD PTR [rip+0x16aa4]        # 0x140045270
   14002e7cc:	xor    rax,rsp
   14002e7cf:	mov    QWORD PTR [rsp+0x78],rax
   14002e7d4:	mov    rdi,rcx
   14002e7d7:	mov    rbx,rdx
   14002e7da:	lea    rcx,[rsp+0x40]
   14002e7df:	mov    rdx,r8
   14002e7e2:	call   0x140007ff0
   14002e7e7:	lea    rax,[rsp+0x40]
   14002e7ec:	lea    rdx,[rsp+0x60]
   14002e7f1:	mov    QWORD PTR [rsp+0x38],rax
   14002e7f6:	and    DWORD PTR [rsp+0x30],0x0
   14002e7fb:	and    DWORD PTR [rsp+0x28],0x0
   14002e800:	and    DWORD PTR [rsp+0x20],0x0
   14002e805:	lea    rcx,[rsp+0x68]
   14002e80a:	mov    r9d,0x1
   14002e810:	mov    r8,rbx
   14002e813:	call   0x140030810
   14002e818:	lea    rcx,[rsp+0x68]
   14002e81d:	mov    rdx,rdi
   14002e820:	mov    ebx,eax
   14002e822:	call   0x14002ff70
   14002e827:	mov    ecx,eax
   14002e829:	mov    eax,0x3
   14002e82e:	test   al,bl
   14002e830:	jne    0x14002e83e
   14002e832:	cmp    ecx,0x1
   14002e835:	je     0x14002e851
   14002e837:	cmp    ecx,0x2
   14002e83a:	jne    0x14002e84f
   14002e83c:	jmp    0x14002e843
   14002e83e:	test   bl,0x1
   14002e841:	je     0x14002e84a
   14002e843:	mov    eax,0x4
   14002e848:	jmp    0x14002e851
   14002e84a:	test   bl,0x2
   14002e84d:	jne    0x14002e851
   14002e84f:	xor    eax,eax
   14002e851:	cmp    BYTE PTR [rsp+0x58],0x0
   14002e856:	je     0x14002e864
   14002e858:	mov    rcx,QWORD PTR [rsp+0x50]
   14002e85d:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002e864:	mov    rcx,QWORD PTR [rsp+0x78]
   14002e869:	xor    rcx,rsp
   14002e86c:	call   0x1400097d0
   14002e871:	mov    rbx,QWORD PTR [rsp+0xa0]
   14002e879:	add    rsp,0x80
   14002e880:	pop    rdi
   14002e881:	ret    
   14002e882:	int3   
   14002e883:	int3   
   14002e884:	jmp    0x14002e89c
   14002e889:	int3   
   14002e88a:	int3   
   14002e88b:	int3   
   14002e88c:	mov    eax,DWORD PTR [rip+0x1a4c6]        # 0x140048d58
   14002e892:	mov    DWORD PTR [rip+0x1a4c0],ecx        # 0x140048d58
   14002e898:	ret    
   14002e899:	int3   
   14002e89a:	int3   
   14002e89b:	int3   
   14002e89c:	lea    rax,[rip+0x32f5]        # 0x140031b98
   14002e8a3:	lea    rcx,[rip+0x27d2]        # 0x14003107c
   14002e8aa:	mov    QWORD PTR [rip+0x17b17],rax        # 0x1400463c8
   14002e8b1:	lea    rax,[rip+0x3380]        # 0x140031c38
   14002e8b8:	mov    QWORD PTR [rip+0x17b01],rcx        # 0x1400463c0
   14002e8bf:	mov    QWORD PTR [rip+0x17b0a],rax        # 0x1400463d0
   14002e8c6:	lea    rax,[rip+0x33b3]        # 0x140031c80
   14002e8cd:	mov    QWORD PTR [rip+0x17b14],rcx        # 0x1400463e8
   14002e8d4:	mov    QWORD PTR [rip+0x17afd],rax        # 0x1400463d8
   14002e8db:	lea    rax,[rip+0x3426]        # 0x140031d08
   14002e8e2:	mov    QWORD PTR [rip+0x17af7],rax        # 0x1400463e0
   14002e8e9:	lea    rax,[rip+0x27b0]        # 0x1400310a0
   14002e8f0:	mov    QWORD PTR [rip+0x17af9],rax        # 0x1400463f0
   14002e8f7:	lea    rax,[rip+0x3342]        # 0x140031c40
   14002e8fe:	mov    QWORD PTR [rip+0x17af3],rax        # 0x1400463f8
   14002e905:	lea    rax,[rip+0x3294]        # 0x140031ba0
   14002e90c:	mov    QWORD PTR [rip+0x17aed],rax        # 0x140046400
   14002e913:	lea    rax,[rip+0x336e]        # 0x140031c88
   14002e91a:	mov    QWORD PTR [rip+0x17ae7],rax        # 0x140046408
   14002e921:	ret    
   14002e922:	int3   
   14002e923:	int3   
   14002e924:	mov    QWORD PTR [rsp+0x18],rbx
   14002e929:	mov    QWORD PTR [rsp+0x20],rsi
   14002e92e:	push   rdi
   14002e92f:	sub    rsp,0x70
   14002e933:	movaps XMMWORD PTR [rsp+0x60],xmm6
   14002e938:	mov    rax,QWORD PTR [rip+0x16931]        # 0x140045270
   14002e93f:	xor    rax,rsp
   14002e942:	mov    QWORD PTR [rsp+0x58],rax
   14002e947:	mov    rsi,rcx
   14002e94a:	mov    rbx,rcx
   14002e94d:	mov    rdi,rdx
   14002e950:	lea    rcx,[rsp+0x20]
   14002e955:	mov    rdx,r8
   14002e958:	call   0x140007ff0
   14002e95d:	test   rdi,rdi
   14002e960:	je     0x14002e965
   14002e962:	mov    QWORD PTR [rdi],rbx
   14002e965:	test   rsi,rsi
   14002e968:	jne    0x14002e982
   14002e96a:	call   0x14000b9f0
   14002e96f:	mov    DWORD PTR [rax],0x16
   14002e975:	call   0x14000b8b8
   14002e97a:	xorps  xmm6,xmm6
   14002e97d:	jmp    0x14002ea3e
   14002e982:	mov    rdx,QWORD PTR [rsp+0x20]
   14002e987:	cmp    DWORD PTR [rdx+0xd4],0x1
   14002e98e:	jle    0x14002e9a9
   14002e990:	movzx  ecx,BYTE PTR [rbx]
   14002e993:	lea    r8,[rsp+0x20]
   14002e998:	mov    edx,0x8
   14002e99d:	call   0x14002c4c4
   14002e9a2:	mov    rdx,QWORD PTR [rsp+0x20]
   14002e9a7:	jmp    0x14002e9ba
   14002e9a9:	movzx  ecx,BYTE PTR [rbx]
   14002e9ac:	mov    rax,QWORD PTR [rdx+0x108]
   14002e9b3:	movzx  eax,WORD PTR [rax+rcx*2]
   14002e9b7:	and    eax,0x8
   14002e9ba:	test   eax,eax
   14002e9bc:	je     0x14002e9c3
   14002e9be:	inc    rbx
   14002e9c1:	jmp    0x14002e987
   14002e9c3:	lea    r8,[rsp+0x20]
   14002e9c8:	lea    rcx,[rsp+0x40]
   14002e9cd:	mov    rdx,rbx
   14002e9d0:	call   0x140031d50
   14002e9d5:	test   rdi,rdi
   14002e9d8:	je     0x14002e9e4
   14002e9da:	movsxd rcx,DWORD PTR [rax+0x4]
   14002e9de:	add    rcx,rbx
   14002e9e1:	mov    QWORD PTR [rdi],rcx
   14002e9e4:	test   DWORD PTR [rax],0x240
   14002e9ea:	je     0x14002e9f9
   14002e9ec:	xorps  xmm6,xmm6
   14002e9ef:	test   rdi,rdi
   14002e9f2:	je     0x14002ea3e
   14002e9f4:	mov    QWORD PTR [rdi],rsi
   14002e9f7:	jmp    0x14002ea3e
   14002e9f9:	test   BYTE PTR [rax],0x81
   14002e9fc:	je     0x14002ea14
   14002e9fe:	cmp    BYTE PTR [rbx],0x2d
   14002ea01:	movsd  xmm6,QWORD PTR [rip+0x17c47]        # 0x140046650
   14002ea09:	jne    0x14002ea2c
   14002ea0b:	xorps  xmm6,XMMWORD PTR [rip+0x107fe]        # 0x14003f210
   14002ea12:	jmp    0x14002ea2c
   14002ea14:	test   DWORD PTR [rax],0x100
   14002ea1a:	je     0x14002ea39
   14002ea1c:	movsd  xmm0,QWORD PTR [rax+0x10]
   14002ea21:	xorps  xmm6,xmm6
   14002ea24:	ucomisd xmm0,xmm6
   14002ea28:	jp     0x14002ea39
   14002ea2a:	jne    0x14002ea39
   14002ea2c:	call   0x14000b9f0
   14002ea31:	mov    DWORD PTR [rax],0x22
   14002ea37:	jmp    0x14002ea3e
   14002ea39:	movsd  xmm6,QWORD PTR [rax+0x10]
   14002ea3e:	cmp    BYTE PTR [rsp+0x38],0x0
   14002ea43:	je     0x14002ea51
   14002ea45:	mov    rax,QWORD PTR [rsp+0x30]
   14002ea4a:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002ea51:	movaps xmm0,xmm6
   14002ea54:	mov    rcx,QWORD PTR [rsp+0x58]
   14002ea59:	xor    rcx,rsp
   14002ea5c:	call   0x1400097d0
   14002ea61:	lea    r11,[rsp+0x70]
   14002ea66:	mov    rbx,QWORD PTR [r11+0x20]
   14002ea6a:	mov    rsi,QWORD PTR [r11+0x28]
   14002ea6e:	movaps xmm6,XMMWORD PTR [rsp+0x60]
   14002ea73:	mov    rsp,r11
   14002ea76:	pop    rdi
   14002ea77:	ret    
   14002ea78:	xor    r8d,r8d
   14002ea7b:	jmp    0x14002e924
   14002ea80:	mov    r11,rsp
   14002ea83:	mov    QWORD PTR [r11+0x20],rbx
   14002ea87:	push   rbp
   14002ea88:	push   rsi
   14002ea89:	push   rdi
   14002ea8a:	sub    rsp,0x70
   14002ea8e:	mov    rax,QWORD PTR [rip+0x167db]        # 0x140045270
   14002ea95:	xor    rax,rsp
   14002ea98:	mov    QWORD PTR [rsp+0x60],rax
   14002ea9d:	mov    QWORD PTR [r11-0x50],r8
   14002eaa1:	xor    ebx,ebx
   14002eaa3:	mov    rbp,rdx
   14002eaa6:	and    DWORD PTR [rsp+0x30],ebx
   14002eaaa:	and    DWORD PTR [rsp+0x28],ebx
   14002eaae:	and    DWORD PTR [rsp+0x20],ebx
   14002eab2:	mov    r8,rdx
   14002eab5:	mov    rdi,rcx
   14002eab8:	lea    rdx,[r11-0x40]
   14002eabc:	lea    rcx,[r11-0x38]
   14002eac0:	xor    r9d,r9d
   14002eac3:	call   0x140031e8c
   14002eac8:	mov    esi,eax
   14002eaca:	test   al,0x4
   14002eacc:	je     0x14002eadf
   14002eace:	and    DWORD PTR [rsp+0x40],0x0
   14002ead3:	and    DWORD PTR [rsp+0x44],0x0
   14002ead8:	mov    ebx,0x200
   14002eadd:	jmp    0x14002eb0d
   14002eadf:	lea    rdx,[rsp+0x40]
   14002eae4:	lea    rcx,[rsp+0x50]
   14002eae9:	call   0x14002f400
   14002eaee:	test   sil,0x2
   14002eaf2:	jne    0x14002eaf9
   14002eaf4:	cmp    eax,0x1
   14002eaf7:	jne    0x14002eafe
   14002eaf9:	mov    ebx,0x80
   14002eafe:	test   sil,0x1
   14002eb02:	jne    0x14002eb09
   14002eb04:	cmp    eax,0x2
   14002eb07:	jne    0x14002eb0d
   14002eb09:	bts    ebx,0x8
   14002eb0d:	mov    rcx,QWORD PTR [rsp+0x48]
   14002eb12:	mov    DWORD PTR [rdi],ebx
   14002eb14:	mov    rax,rdi
   14002eb17:	sub    rcx,rbp
   14002eb1a:	sar    rcx,1
   14002eb1d:	mov    DWORD PTR [rdi+0x4],ecx
   14002eb20:	mov    rcx,QWORD PTR [rsp+0x40]
   14002eb25:	mov    QWORD PTR [rdi+0x10],rcx
   14002eb29:	mov    rcx,QWORD PTR [rsp+0x60]
   14002eb2e:	xor    rcx,rsp
   14002eb31:	call   0x1400097d0
   14002eb36:	mov    rbx,QWORD PTR [rsp+0xa8]
   14002eb3e:	add    rsp,0x70
   14002eb42:	pop    rdi
   14002eb43:	pop    rsi
   14002eb44:	pop    rbp
   14002eb45:	ret    
   14002eb46:	int3   
   14002eb47:	int3   
   14002eb48:	int3   
   14002eb49:	int3   
   14002eb4a:	int3   
   14002eb4b:	int3   
   14002eb4c:	int3   
   14002eb4d:	int3   
   14002eb4e:	int3   
   14002eb4f:	int3   
   14002eb50:	sub    rcx,rdx
   14002eb53:	mov    r8d,0x3
   14002eb59:	mov    eax,DWORD PTR [rdx]
   14002eb5b:	mov    DWORD PTR [rcx+rdx*1],eax
   14002eb5e:	lea    rdx,[rdx+0x4]
   14002eb62:	dec    r8
   14002eb65:	jne    0x14002eb59
   14002eb67:	ret    
   14002eb68:	and    QWORD PTR [rcx],0x0
   14002eb6c:	and    DWORD PTR [rcx+0x8],0x0
   14002eb70:	ret    
   14002eb71:	int3   
   14002eb72:	int3   
   14002eb73:	int3   
   14002eb74:	mov    r9,rcx
   14002eb77:	mov    eax,edx
   14002eb79:	mov    ecx,0x1f
   14002eb7e:	cdq    
   14002eb7f:	mov    r8d,0x1
   14002eb85:	and    edx,ecx
   14002eb87:	add    eax,edx
   14002eb89:	mov    r10d,eax
   14002eb8c:	and    eax,ecx
   14002eb8e:	sub    eax,edx
   14002eb90:	sar    r10d,0x5
   14002eb94:	sub    ecx,eax
   14002eb96:	movsxd r11,r10d
   14002eb99:	mov    eax,DWORD PTR [r9+r11*4]
   14002eb9d:	shl    r8d,cl
   14002eba0:	xor    ecx,ecx
   14002eba2:	lea    edx,[rax+r8*1]
   14002eba6:	cmp    edx,eax
   14002eba8:	jb     0x14002ebaf
   14002ebaa:	cmp    edx,r8d
   14002ebad:	jae    0x14002ebb4
   14002ebaf:	mov    ecx,0x1
   14002ebb4:	lea    eax,[r10-0x1]
   14002ebb8:	mov    DWORD PTR [r9+r11*4],edx
   14002ebbc:	movsxd rdx,eax
   14002ebbf:	test   eax,eax
   14002ebc1:	js     0x14002ebea
   14002ebc3:	test   ecx,ecx
   14002ebc5:	je     0x14002ebea
   14002ebc7:	mov    eax,DWORD PTR [r9+rdx*4]
   14002ebcb:	xor    ecx,ecx
   14002ebcd:	lea    r8d,[rax+0x1]
   14002ebd1:	cmp    r8d,eax
   14002ebd4:	jb     0x14002ebdc
   14002ebd6:	cmp    r8d,0x1
   14002ebda:	jae    0x14002ebe1
   14002ebdc:	mov    ecx,0x1
   14002ebe1:	mov    DWORD PTR [r9+rdx*4],r8d
   14002ebe5:	dec    rdx
   14002ebe8:	jns    0x14002ebc3
   14002ebea:	mov    eax,ecx
   14002ebec:	ret    
   14002ebed:	int3   
   14002ebee:	int3   
   14002ebef:	int3   
   14002ebf0:	xor    edx,edx
   14002ebf2:	cmp    DWORD PTR [rcx+rdx*4],0x0
   14002ebf6:	jne    0x14002ec07
   14002ebf8:	inc    rdx
   14002ebfb:	cmp    rdx,0x3
   14002ebff:	jl     0x14002ebf2
   14002ec01:	mov    eax,0x1
   14002ec06:	ret    
   14002ec07:	xor    eax,eax
   14002ec09:	ret    
   14002ec0a:	int3   
   14002ec0b:	int3   
   14002ec0c:	mov    QWORD PTR [rsp+0x8],rbx
   14002ec11:	mov    QWORD PTR [rsp+0x10],rbp
   14002ec16:	mov    QWORD PTR [rsp+0x18],rsi
   14002ec1b:	push   rdi
   14002ec1c:	push   r14
   14002ec1e:	push   r15
   14002ec20:	sub    rsp,0x20
   14002ec24:	lea    r10d,[rdx-0x1]
   14002ec28:	xor    ebx,ebx
   14002ec2a:	or     r11d,0xffffffff
   14002ec2e:	lea    esi,[rbx+0x1f]
   14002ec31:	lea    eax,[r10+0x1]
   14002ec35:	mov    r8,rcx
   14002ec38:	cdq    
   14002ec39:	mov    r14d,esi
   14002ec3c:	lea    r9d,[rbx+0x3]
   14002ec40:	and    edx,esi
   14002ec42:	add    eax,edx
   14002ec44:	mov    edi,eax
   14002ec46:	and    eax,esi
   14002ec48:	sub    eax,edx
   14002ec4a:	sar    edi,0x5
   14002ec4d:	sub    r14d,eax
   14002ec50:	movsxd r15,edi
   14002ec53:	mov    eax,DWORD PTR [rcx+r15*4]
   14002ec57:	bt     eax,r14d
   14002ec5b:	jae    0x14002ecfd
   14002ec61:	mov    ecx,r14d
   14002ec64:	mov    edx,r11d
   14002ec67:	movsxd rax,edi
   14002ec6a:	shl    edx,cl
   14002ec6c:	not    edx
   14002ec6e:	test   DWORD PTR [r8+rax*4],edx
   14002ec72:	jne    0x14002ec8c
   14002ec74:	lea    eax,[rdi+0x1]
   14002ec77:	movsxd rcx,eax
   14002ec7a:	jmp    0x14002ec85
   14002ec7c:	cmp    DWORD PTR [r8+rcx*4],ebx
   14002ec80:	jne    0x14002ec8c
   14002ec82:	inc    rcx
   14002ec85:	cmp    rcx,r9
   14002ec88:	jl     0x14002ec7c
   14002ec8a:	jmp    0x14002ecfd
   14002ec8c:	mov    eax,r10d
   14002ec8f:	mov    r10d,0x1
   14002ec95:	cdq    
   14002ec96:	and    edx,esi
   14002ec98:	add    eax,edx
   14002ec9a:	mov    ebp,eax
   14002ec9c:	and    eax,esi
   14002ec9e:	sub    eax,edx
   14002eca0:	sar    ebp,0x5
   14002eca3:	sub    esi,eax
   14002eca5:	mov    cl,sil
   14002eca8:	movsxd rsi,ebp
   14002ecab:	mov    eax,DWORD PTR [r8+rsi*4]
   14002ecaf:	shl    r10d,cl
   14002ecb2:	mov    ecx,ebx
   14002ecb4:	lea    edx,[rax+r10*1]
   14002ecb8:	cmp    edx,eax
   14002ecba:	jb     0x14002ecc1
   14002ecbc:	cmp    edx,r10d
   14002ecbf:	jae    0x14002ecc6
   14002ecc1:	mov    ecx,0x1
   14002ecc6:	lea    eax,[rbp-0x1]
   14002ecc9:	mov    DWORD PTR [r8+rsi*4],edx
   14002eccd:	movsxd rdx,eax
   14002ecd0:	test   eax,eax
   14002ecd2:	js     0x14002ecfb
   14002ecd4:	test   ecx,ecx
   14002ecd6:	je     0x14002ecfb
   14002ecd8:	mov    eax,DWORD PTR [r8+rdx*4]
   14002ecdc:	mov    ecx,ebx
   14002ecde:	lea    r10d,[rax+0x1]
   14002ece2:	cmp    r10d,eax
   14002ece5:	jb     0x14002eced
   14002ece7:	cmp    r10d,0x1
   14002eceb:	jae    0x14002ecf2
   14002eced:	mov    ecx,0x1
   14002ecf2:	mov    DWORD PTR [r8+rdx*4],r10d
   14002ecf6:	dec    rdx
   14002ecf9:	jns    0x14002ecd4
   14002ecfb:	mov    ebx,ecx
   14002ecfd:	lea    eax,[rdi+0x1]
   14002ed00:	mov    ecx,r14d
   14002ed03:	shl    r11d,cl
   14002ed06:	movsxd rdx,eax
   14002ed09:	and    DWORD PTR [r8+r15*4],r11d
   14002ed0d:	cmp    rdx,r9
   14002ed10:	jge    0x14002ed27
   14002ed12:	sub    r9,rdx
   14002ed15:	lea    rcx,[r8+rdx*4]
   14002ed19:	xor    edx,edx
   14002ed1b:	shl    r9,0x2
   14002ed1f:	mov    r8,r9
   14002ed22:	call   0x140009800
   14002ed27:	mov    rbp,QWORD PTR [rsp+0x48]
   14002ed2c:	mov    rsi,QWORD PTR [rsp+0x50]
   14002ed31:	mov    eax,ebx
   14002ed33:	mov    rbx,QWORD PTR [rsp+0x40]
   14002ed38:	add    rsp,0x20
   14002ed3c:	pop    r15
   14002ed3e:	pop    r14
   14002ed40:	pop    rdi
   14002ed41:	ret    
   14002ed42:	int3   
   14002ed43:	int3   
   14002ed44:	mov    rax,rsp
   14002ed47:	mov    QWORD PTR [rax+0x8],rbx
   14002ed4b:	mov    QWORD PTR [rax+0x10],rbp
   14002ed4f:	mov    QWORD PTR [rax+0x18],rsi
   14002ed53:	mov    QWORD PTR [rax+0x20],rdi
   14002ed57:	xor    r9d,r9d
   14002ed5a:	or     r10d,0xffffffff
   14002ed5e:	mov    eax,edx
   14002ed60:	cdq    
   14002ed61:	mov    rbx,rcx
   14002ed64:	lea    ebp,[r9+0x20]
   14002ed68:	and    edx,0x1f
   14002ed6b:	mov    r8,rbx
   14002ed6e:	lea    edi,[r9+0x3]
   14002ed72:	add    eax,edx
   14002ed74:	mov    r11d,eax
   14002ed77:	and    eax,0x1f
   14002ed7a:	sub    eax,edx
   14002ed7c:	sar    r11d,0x5
   14002ed80:	mov    ecx,eax
   14002ed82:	mov    esi,eax
   14002ed84:	shl    r10d,cl
   14002ed87:	sub    ebp,eax
   14002ed89:	not    r10d
   14002ed8c:	mov    eax,DWORD PTR [r8]
   14002ed8f:	mov    ecx,esi
   14002ed91:	mov    edx,eax
   14002ed93:	shr    eax,cl
   14002ed95:	mov    ecx,ebp
   14002ed97:	or     eax,r9d
   14002ed9a:	and    edx,r10d
   14002ed9d:	mov    r9d,edx
   14002eda0:	mov    DWORD PTR [r8],eax
   14002eda3:	lea    r8,[r8+0x4]
   14002eda7:	shl    r9d,cl
   14002edaa:	dec    rdi
   14002edad:	jne    0x14002ed8c
   14002edaf:	movsxd r9,r11d
   14002edb2:	lea    edx,[rdi+0x2]
   14002edb5:	lea    rcx,[rbx+0x8]
   14002edb9:	mov    r8,r9
   14002edbc:	neg    r8
   14002edbf:	cmp    rdx,r9
   14002edc2:	jl     0x14002edcc
   14002edc4:	mov    eax,DWORD PTR [rcx+r8*4]
   14002edc8:	mov    DWORD PTR [rcx],eax
   14002edca:	jmp    0x14002edcf
   14002edcc:	and    DWORD PTR [rcx],0x0
   14002edcf:	sub    rcx,0x4
   14002edd3:	dec    rdx
   14002edd6:	jns    0x14002edbf
   14002edd8:	mov    rbx,QWORD PTR [rsp+0x8]
   14002eddd:	mov    rbp,QWORD PTR [rsp+0x10]
   14002ede2:	mov    rsi,QWORD PTR [rsp+0x18]
   14002ede7:	mov    rdi,QWORD PTR [rsp+0x20]
   14002edec:	ret    
   14002eded:	int3   
   14002edee:	int3   
   14002edef:	int3   
   14002edf0:	mov    eax,edx
   14002edf2:	mov    r9,rcx
   14002edf5:	mov    ecx,0x1f
   14002edfa:	cdq    
   14002edfb:	and    edx,ecx
   14002edfd:	add    eax,edx
   14002edff:	mov    r8d,eax
   14002ee02:	and    eax,ecx
   14002ee04:	sub    eax,edx
   14002ee06:	or     edx,0xffffffff
   14002ee09:	sar    r8d,0x5
   14002ee0d:	sub    ecx,eax
   14002ee0f:	movsxd rax,r8d
   14002ee12:	shl    edx,cl
   14002ee14:	not    edx
   14002ee16:	test   DWORD PTR [r9+rax*4],edx
   14002ee1a:	je     0x14002ee1f
   14002ee1c:	xor    eax,eax
   14002ee1e:	ret    
   14002ee1f:	lea    eax,[r8+0x1]
   14002ee23:	movsxd rcx,eax
   14002ee26:	jmp    0x14002ee32
   14002ee28:	cmp    DWORD PTR [r9+rcx*4],0x0
   14002ee2d:	jne    0x14002ee1c
   14002ee2f:	inc    rcx
   14002ee32:	cmp    rcx,0x3
   14002ee36:	jl     0x14002ee28
   14002ee38:	mov    eax,0x1
   14002ee3d:	ret    
   14002ee3e:	int3   
   14002ee3f:	int3   
   14002ee40:	lea    r9d,[rcx+rdx*1]
   14002ee44:	xor    eax,eax
   14002ee46:	cmp    r9d,ecx
   14002ee49:	jb     0x14002ee50
   14002ee4b:	cmp    r9d,edx
   14002ee4e:	jae    0x14002ee55
   14002ee50:	mov    eax,0x1
   14002ee55:	mov    DWORD PTR [r8],r9d
   14002ee58:	ret    
   14002ee59:	int3   
   14002ee5a:	int3   
   14002ee5b:	int3   
   14002ee5c:	mov    QWORD PTR [rsp+0x8],rbx
   14002ee61:	push   rbp
   14002ee62:	push   rsi
   14002ee63:	push   rdi
   14002ee64:	push   r12
   14002ee66:	push   r13
   14002ee68:	push   r14
   14002ee6a:	push   r15
   14002ee6c:	mov    rbp,rsp
   14002ee6f:	sub    rsp,0x70
   14002ee73:	mov    rax,QWORD PTR [rip+0x163f6]        # 0x140045270
   14002ee7a:	xor    rax,rsp
   14002ee7d:	mov    QWORD PTR [rbp-0x10],rax
   14002ee81:	movzx  eax,WORD PTR [rcx+0xa]
   14002ee85:	movzx  r11d,WORD PTR [rcx]
   14002ee89:	xor    ebx,ebx
   14002ee8b:	mov    edi,eax
   14002ee8d:	and    eax,0x8000
   14002ee92:	shl    r11d,0x10
   14002ee96:	mov    DWORD PTR [rbp-0x40],eax
   14002ee99:	mov    eax,DWORD PTR [rcx+0x6]
   14002ee9c:	and    edi,0x7fff
   14002eea2:	mov    DWORD PTR [rbp-0x20],eax
   14002eea5:	mov    eax,DWORD PTR [rcx+0x2]
   14002eea8:	sub    edi,0x3fff
   14002eeae:	mov    r13d,0x1f
   14002eeb4:	mov    r9,r8
   14002eeb7:	mov    QWORD PTR [rbp-0x48],r8
   14002eebb:	mov    DWORD PTR [rbp-0x1c],eax
   14002eebe:	mov    QWORD PTR [rbp-0x38],rdx
   14002eec2:	mov    DWORD PTR [rbp-0x2c],r11d
   14002eec6:	mov    DWORD PTR [rbp-0x18],r11d
   14002eeca:	lea    esi,[rbx+0x1]
   14002eecd:	lea    r14d,[r13-0x1c]
   14002eed1:	cmp    edi,0xffffc001
   14002eed7:	jne    0x14002ef02
   14002eed9:	mov    r8d,ebx
   14002eedc:	mov    eax,ebx
   14002eede:	cmp    DWORD PTR [rbp+rax*4-0x20],ebx
   14002eee2:	jne    0x14002eef1
   14002eee4:	add    rax,rsi
   14002eee7:	cmp    rax,r14
   14002eeea:	jl     0x14002eede
   14002eeec:	jmp    0x14002f3a3
   14002eef1:	mov    QWORD PTR [rbp-0x20],rbx
   14002eef5:	mov    DWORD PTR [rbp-0x18],ebx
   14002eef8:	mov    ebx,0x2
   14002eefd:	jmp    0x14002f3a3
   14002ef02:	mov    rax,QWORD PTR [rbp-0x20]
   14002ef06:	or     r15d,0xffffffff
   14002ef0a:	mov    DWORD PTR [rbp-0x50],edi
   14002ef0d:	mov    QWORD PTR [rbp-0x28],rax
   14002ef11:	mov    eax,DWORD PTR [r8+0x8]
   14002ef15:	mov    r8d,r13d
   14002ef18:	dec    eax
   14002ef1a:	mov    r12d,ebx
   14002ef1d:	mov    DWORD PTR [rbp-0x4c],eax
   14002ef20:	inc    eax
   14002ef22:	cdq    
   14002ef23:	and    edx,r13d
   14002ef26:	add    eax,edx
   14002ef28:	mov    r9d,eax
   14002ef2b:	and    eax,r13d
   14002ef2e:	sar    r9d,0x5
   14002ef32:	sub    eax,edx
   14002ef34:	sub    r8d,eax
   14002ef37:	movsxd r10,r9d
   14002ef3a:	mov    ecx,DWORD PTR [rbp+r10*4-0x20]
   14002ef3f:	mov    DWORD PTR [rbp-0x30],r8d
   14002ef43:	bt     ecx,r8d
   14002ef47:	jae    0x14002efeb
   14002ef4d:	mov    ecx,r8d
   14002ef50:	mov    eax,r15d
   14002ef53:	movsxd rdx,r9d
   14002ef56:	shl    eax,cl
   14002ef58:	not    eax
   14002ef5a:	test   DWORD PTR [rbp+rdx*4-0x20],eax
   14002ef5e:	jne    0x14002ef79
   14002ef60:	lea    eax,[r9+0x1]
   14002ef64:	movsxd rcx,eax
   14002ef67:	jmp    0x14002ef72
   14002ef69:	cmp    DWORD PTR [rbp+rcx*4-0x20],ebx
   14002ef6d:	jne    0x14002ef79
   14002ef6f:	add    rcx,rsi
   14002ef72:	cmp    rcx,r14
   14002ef75:	jl     0x14002ef69
   14002ef77:	jmp    0x14002efeb
   14002ef79:	mov    eax,DWORD PTR [rbp-0x4c]
   14002ef7c:	mov    ecx,r13d
   14002ef7f:	cdq    
   14002ef80:	and    edx,r13d
   14002ef83:	add    eax,edx
   14002ef85:	mov    r8d,eax
   14002ef88:	and    eax,r13d
   14002ef8b:	sub    eax,edx
   14002ef8d:	sar    r8d,0x5
   14002ef91:	mov    edx,esi
   14002ef93:	sub    ecx,eax
   14002ef95:	movsxd r10,r8d
   14002ef98:	mov    eax,DWORD PTR [rbp+r10*4-0x20]
   14002ef9d:	shl    edx,cl
   14002ef9f:	lea    ecx,[rax+rdx*1]
   14002efa2:	cmp    ecx,eax
   14002efa4:	jb     0x14002efaa
   14002efa6:	cmp    ecx,edx
   14002efa8:	jae    0x14002efad
   14002efaa:	mov    r12d,esi
   14002efad:	lea    eax,[r8-0x1]
   14002efb1:	mov    DWORD PTR [rbp+r10*4-0x20],ecx
   14002efb6:	movsxd rdx,eax
   14002efb9:	test   eax,eax
   14002efbb:	js     0x14002efe4
   14002efbd:	test   r12d,r12d
   14002efc0:	je     0x14002efe4
   14002efc2:	mov    eax,DWORD PTR [rbp+rdx*4-0x20]
   14002efc6:	mov    r12d,ebx
   14002efc9:	lea    r8d,[rax+0x1]
   14002efcd:	cmp    r8d,eax
   14002efd0:	jb     0x14002efd7
   14002efd2:	cmp    r8d,esi
   14002efd5:	jae    0x14002efda
   14002efd7:	mov    r12d,esi
   14002efda:	mov    DWORD PTR [rbp+rdx*4-0x20],r8d
   14002efdf:	sub    rdx,rsi
   14002efe2:	jns    0x14002efbd
   14002efe4:	mov    r8d,DWORD PTR [rbp-0x30]
   14002efe8:	movsxd r10,r9d
   14002efeb:	mov    ecx,r8d
   14002efee:	mov    eax,r15d
   14002eff1:	shl    eax,cl
   14002eff3:	and    DWORD PTR [rbp+r10*4-0x20],eax
   14002eff8:	lea    eax,[r9+0x1]
   14002effc:	movsxd rdx,eax
   14002efff:	cmp    rdx,r14
   14002f002:	jge    0x14002f021
   14002f004:	lea    rcx,[rbp-0x20]
   14002f008:	mov    r8,r14
   14002f00b:	sub    r8,rdx
   14002f00e:	lea    rcx,[rcx+rdx*4]
   14002f012:	xor    edx,edx
   14002f014:	shl    r8,0x2
   14002f018:	call   0x140009800
   14002f01d:	mov    r11d,DWORD PTR [rbp-0x2c]
   14002f021:	test   r12d,r12d
   14002f024:	je     0x14002f028
   14002f026:	add    edi,esi
   14002f028:	mov    r9,QWORD PTR [rbp-0x48]
   14002f02c:	mov    ecx,DWORD PTR [r9+0x4]
   14002f030:	mov    eax,ecx
   14002f032:	sub    eax,DWORD PTR [r9+0x8]
   14002f036:	cmp    edi,eax
   14002f038:	jge    0x14002f04e
   14002f03a:	mov    QWORD PTR [rbp-0x20],rbx
   14002f03e:	mov    DWORD PTR [rbp-0x18],ebx
   14002f041:	mov    r8d,ebx
   14002f044:	mov    ebx,0x2
   14002f049:	jmp    0x14002f39f
   14002f04e:	cmp    edi,ecx
   14002f050:	jg     0x14002f288
   14002f056:	sub    ecx,DWORD PTR [rbp-0x50]
   14002f059:	mov    rax,QWORD PTR [rbp-0x28]
   14002f05d:	mov    r10d,r15d
   14002f060:	mov    QWORD PTR [rbp-0x20],rax
   14002f064:	mov    eax,ecx
   14002f066:	mov    DWORD PTR [rbp-0x18],r11d
   14002f06a:	cdq    
   14002f06b:	mov    r11,r14
   14002f06e:	mov    r9d,ebx
   14002f071:	and    edx,r13d
   14002f074:	lea    r8,[rbp-0x20]
   14002f078:	add    eax,edx
   14002f07a:	mov    r12d,eax
   14002f07d:	and    eax,r13d
   14002f080:	sub    eax,edx
   14002f082:	sar    r12d,0x5
   14002f086:	mov    ecx,eax
   14002f088:	mov    edi,eax
   14002f08a:	mov    eax,0x20
   14002f08f:	shl    r10d,cl
   14002f092:	sub    eax,ecx
   14002f094:	mov    r14d,eax
   14002f097:	not    r10d
   14002f09a:	mov    eax,DWORD PTR [r8]
   14002f09d:	mov    ecx,edi
   14002f09f:	mov    edx,eax
   14002f0a1:	shr    eax,cl
   14002f0a3:	mov    ecx,r14d
   14002f0a6:	or     eax,r9d
   14002f0a9:	and    edx,r10d
   14002f0ac:	mov    r9d,edx
   14002f0af:	mov    DWORD PTR [r8],eax
   14002f0b2:	lea    r8,[r8+0x4]
   14002f0b6:	shl    r9d,cl
   14002f0b9:	sub    r11,rsi
   14002f0bc:	jne    0x14002f09a
   14002f0be:	movsxd r10,r12d
   14002f0c1:	lea    edi,[r11+0x2]
   14002f0c5:	lea    r14d,[r11+0x3]
   14002f0c9:	mov    r9,r10
   14002f0cc:	mov    r8d,edi
   14002f0cf:	neg    r9
   14002f0d2:	cmp    r8,r10
   14002f0d5:	jl     0x14002f0ec
   14002f0d7:	mov    rdx,r8
   14002f0da:	shl    rdx,0x2
   14002f0de:	lea    rax,[rdx+r9*4]
   14002f0e2:	mov    ecx,DWORD PTR [rbp+rax*1-0x20]
   14002f0e6:	mov    DWORD PTR [rbp+rdx*1-0x20],ecx
   14002f0ea:	jmp    0x14002f0f1
   14002f0ec:	mov    DWORD PTR [rbp+r8*4-0x20],ebx
   14002f0f1:	sub    r8,rsi
   14002f0f4:	jns    0x14002f0d2
   14002f0f6:	mov    r8d,DWORD PTR [rbp-0x4c]
   14002f0fa:	mov    r11d,r13d
   14002f0fd:	lea    eax,[r8+0x1]
   14002f101:	cdq    
   14002f102:	and    edx,r13d
   14002f105:	add    eax,edx
   14002f107:	mov    r9d,eax
   14002f10a:	and    eax,r13d
   14002f10d:	sub    eax,edx
   14002f10f:	sar    r9d,0x5
   14002f113:	sub    r11d,eax
   14002f116:	movsxd rax,r9d
   14002f119:	mov    ecx,DWORD PTR [rbp+rax*4-0x20]
   14002f11d:	bt     ecx,r11d
   14002f121:	jae    0x14002f1bf
   14002f127:	mov    ecx,r11d
   14002f12a:	mov    eax,r15d
   14002f12d:	movsxd rdx,r9d
   14002f130:	shl    eax,cl
   14002f132:	not    eax
   14002f134:	test   DWORD PTR [rbp+rdx*4-0x20],eax
   14002f138:	jne    0x14002f153
   14002f13a:	lea    eax,[r9+0x1]
   14002f13e:	movsxd rcx,eax
   14002f141:	jmp    0x14002f14c
   14002f143:	cmp    DWORD PTR [rbp+rcx*4-0x20],ebx
   14002f147:	jne    0x14002f153
   14002f149:	add    rcx,rsi
   14002f14c:	cmp    rcx,r14
   14002f14f:	jl     0x14002f143
   14002f151:	jmp    0x14002f1bf
   14002f153:	mov    eax,r8d
   14002f156:	mov    ecx,r13d
   14002f159:	cdq    
   14002f15a:	and    edx,r13d
   14002f15d:	add    eax,edx
   14002f15f:	mov    r10d,eax
   14002f162:	and    eax,r13d
   14002f165:	sub    eax,edx
   14002f167:	sar    r10d,0x5
   14002f16b:	mov    edx,esi
   14002f16d:	sub    ecx,eax
   14002f16f:	movsxd r12,r10d
   14002f172:	mov    eax,DWORD PTR [rbp+r12*4-0x20]
   14002f177:	shl    edx,cl
   14002f179:	mov    ecx,ebx
   14002f17b:	lea    r8d,[rax+rdx*1]
   14002f17f:	cmp    r8d,eax
   14002f182:	jb     0x14002f189
   14002f184:	cmp    r8d,edx
   14002f187:	jae    0x14002f18b
   14002f189:	mov    ecx,esi
   14002f18b:	lea    eax,[r10-0x1]
   14002f18f:	mov    DWORD PTR [rbp+r12*4-0x20],r8d
   14002f194:	movsxd rdx,eax
   14002f197:	test   eax,eax
   14002f199:	js     0x14002f1bf
   14002f19b:	test   ecx,ecx
   14002f19d:	je     0x14002f1bf
   14002f19f:	mov    eax,DWORD PTR [rbp+rdx*4-0x20]
   14002f1a3:	mov    ecx,ebx
   14002f1a5:	lea    r8d,[rax+0x1]
   14002f1a9:	cmp    r8d,eax
   14002f1ac:	jb     0x14002f1b3
   14002f1ae:	cmp    r8d,esi
   14002f1b1:	jae    0x14002f1b5
   14002f1b3:	mov    ecx,esi
   14002f1b5:	mov    DWORD PTR [rbp+rdx*4-0x20],r8d
   14002f1ba:	sub    rdx,rsi
   14002f1bd:	jns    0x14002f19b
   14002f1bf:	mov    ecx,r11d
   14002f1c2:	mov    eax,r15d
   14002f1c5:	shl    eax,cl
   14002f1c7:	movsxd rcx,r9d
   14002f1ca:	and    DWORD PTR [rbp+rcx*4-0x20],eax
   14002f1ce:	lea    eax,[r9+0x1]
   14002f1d2:	movsxd rdx,eax
   14002f1d5:	cmp    rdx,r14
   14002f1d8:	jge    0x14002f1f3
   14002f1da:	lea    rcx,[rbp-0x20]
   14002f1de:	mov    r8,r14
   14002f1e1:	sub    r8,rdx
   14002f1e4:	lea    rcx,[rcx+rdx*4]
   14002f1e8:	xor    edx,edx
   14002f1ea:	shl    r8,0x2
   14002f1ee:	call   0x140009800
   14002f1f3:	mov    rax,QWORD PTR [rbp-0x48]
   14002f1f7:	mov    r12d,0x20
   14002f1fd:	mov    r9d,ebx
   14002f200:	mov    eax,DWORD PTR [rax+0xc]
   14002f203:	lea    r8,[rbp-0x20]
   14002f207:	add    eax,esi
   14002f209:	cdq    
   14002f20a:	and    edx,r13d
   14002f20d:	add    eax,edx
   14002f20f:	mov    r10d,eax
   14002f212:	and    eax,r13d
   14002f215:	sub    eax,edx
   14002f217:	sar    r10d,0x5
   14002f21b:	mov    ecx,eax
   14002f21d:	mov    r11d,eax
   14002f220:	shl    r15d,cl
   14002f223:	sub    r12d,eax
   14002f226:	not    r15d
   14002f229:	mov    eax,DWORD PTR [r8]
   14002f22c:	mov    ecx,r11d
   14002f22f:	mov    edx,eax
   14002f231:	shr    eax,cl
   14002f233:	mov    ecx,r12d
   14002f236:	or     eax,r9d
   14002f239:	and    edx,r15d
   14002f23c:	mov    r9d,edx
   14002f23f:	mov    DWORD PTR [r8],eax
   14002f242:	lea    r8,[r8+0x4]
   14002f246:	shl    r9d,cl
   14002f249:	sub    r14,rsi
   14002f24c:	jne    0x14002f229
   14002f24e:	movsxd r10,r10d
   14002f251:	mov    r8,rdi
   14002f254:	mov    r9,r10
   14002f257:	neg    r9
   14002f25a:	cmp    r8,r10
   14002f25d:	jl     0x14002f274
   14002f25f:	mov    rdx,r8
   14002f262:	shl    rdx,0x2
   14002f266:	lea    rax,[rdx+r9*4]
   14002f26a:	mov    ecx,DWORD PTR [rbp+rax*1-0x20]
   14002f26e:	mov    DWORD PTR [rbp+rdx*1-0x20],ecx
   14002f272:	jmp    0x14002f279
   14002f274:	mov    DWORD PTR [rbp+r8*4-0x20],ebx
   14002f279:	sub    r8,rsi
   14002f27c:	jns    0x14002f25a
   14002f27e:	mov    r8d,ebx
   14002f281:	mov    ebx,edi
   14002f283:	jmp    0x14002f39b
   14002f288:	mov    eax,DWORD PTR [r9+0xc]
   14002f28c:	mov    r10d,DWORD PTR [r9]
   14002f28f:	mov    r12d,0x20
   14002f295:	cdq    
   14002f296:	and    edx,r13d
   14002f299:	add    eax,edx
   14002f29b:	mov    r11d,eax
   14002f29e:	and    eax,r13d
   14002f2a1:	sub    eax,edx
   14002f2a3:	sar    r11d,0x5
   14002f2a7:	mov    ecx,eax
   14002f2a9:	shl    r15d,cl
   14002f2ac:	not    r15d
   14002f2af:	cmp    edi,r10d
   14002f2b2:	jl     0x14002f32f
   14002f2b4:	mov    QWORD PTR [rbp-0x20],rbx
   14002f2b8:	bts    DWORD PTR [rbp-0x20],0x1f
   14002f2bd:	mov    DWORD PTR [rbp-0x18],ebx
   14002f2c0:	sub    r12d,eax
   14002f2c3:	mov    edi,eax
   14002f2c5:	mov    r9d,ebx
   14002f2c8:	lea    r8,[rbp-0x20]
   14002f2cc:	mov    eax,DWORD PTR [r8]
   14002f2cf:	mov    ecx,edi
   14002f2d1:	mov    edx,r15d
   14002f2d4:	and    edx,eax
   14002f2d6:	shr    eax,cl
   14002f2d8:	mov    ecx,r12d
   14002f2db:	or     eax,r9d
   14002f2de:	mov    r9d,edx
   14002f2e1:	shl    r9d,cl
   14002f2e4:	mov    DWORD PTR [r8],eax
   14002f2e7:	lea    r8,[r8+0x4]
   14002f2eb:	sub    r14,rsi
   14002f2ee:	jne    0x14002f2cc
   14002f2f0:	movsxd r9,r11d
   14002f2f3:	lea    edi,[r14+0x2]
   14002f2f7:	mov    r8,r9
   14002f2fa:	neg    r8
   14002f2fd:	cmp    rdi,r9
   14002f300:	jl     0x14002f317
   14002f302:	mov    rdx,rdi
   14002f305:	shl    rdx,0x2
   14002f309:	lea    rax,[rdx+r8*4]
   14002f30d:	mov    ecx,DWORD PTR [rbp+rax*1-0x20]
   14002f311:	mov    DWORD PTR [rbp+rdx*1-0x20],ecx
   14002f315:	jmp    0x14002f31b
   14002f317:	mov    DWORD PTR [rbp+rdi*4-0x20],ebx
   14002f31b:	sub    rdi,rsi
   14002f31e:	jns    0x14002f2fd
   14002f320:	mov    r9,QWORD PTR [rbp-0x48]
   14002f324:	mov    ebx,esi
   14002f326:	mov    r8d,DWORD PTR [r9+0x14]
   14002f32a:	add    r8d,r10d
   14002f32d:	jmp    0x14002f39f
   14002f32f:	mov    r8d,DWORD PTR [r9+0x14]
   14002f333:	btr    DWORD PTR [rbp-0x20],0x1f
   14002f338:	mov    r10d,ebx
   14002f33b:	add    r8d,edi
   14002f33e:	mov    edi,eax
   14002f340:	sub    r12d,eax
   14002f343:	lea    r9,[rbp-0x20]
   14002f347:	mov    eax,DWORD PTR [r9]
   14002f34a:	mov    ecx,edi
   14002f34c:	mov    edx,eax
   14002f34e:	shr    eax,cl
   14002f350:	mov    ecx,r12d
   14002f353:	or     eax,r10d
   14002f356:	and    edx,r15d
   14002f359:	mov    r10d,edx
   14002f35c:	mov    DWORD PTR [r9],eax
   14002f35f:	lea    r9,[r9+0x4]
   14002f363:	shl    r10d,cl
   14002f366:	sub    r14,rsi
   14002f369:	jne    0x14002f347
   14002f36b:	movsxd r10,r11d
   14002f36e:	lea    edi,[r14+0x2]
   14002f372:	mov    r9,r10
   14002f375:	neg    r9
   14002f378:	cmp    rdi,r10
   14002f37b:	jl     0x14002f392
   14002f37d:	mov    rdx,rdi
   14002f380:	shl    rdx,0x2
   14002f384:	lea    rax,[rdx+r9*4]
   14002f388:	mov    ecx,DWORD PTR [rbp+rax*1-0x20]
   14002f38c:	mov    DWORD PTR [rbp+rdx*1-0x20],ecx
   14002f390:	jmp    0x14002f396
   14002f392:	mov    DWORD PTR [rbp+rdi*4-0x20],ebx
   14002f396:	sub    rdi,rsi
   14002f399:	jns    0x14002f378
   14002f39b:	mov    r9,QWORD PTR [rbp-0x48]
   14002f39f:	mov    rdx,QWORD PTR [rbp-0x38]
   14002f3a3:	sub    r13d,DWORD PTR [r9+0xc]
   14002f3a7:	mov    cl,r13b
   14002f3aa:	shl    r8d,cl
   14002f3ad:	neg    DWORD PTR [rbp-0x40]
   14002f3b0:	sbb    eax,eax
   14002f3b2:	and    eax,0x80000000
   14002f3b7:	or     r8d,eax
   14002f3ba:	or     r8d,DWORD PTR [rbp-0x20]
   14002f3be:	cmp    DWORD PTR [r9+0x10],0x40
   14002f3c3:	jne    0x14002f3d0
   14002f3c5:	mov    eax,DWORD PTR [rbp-0x1c]
   14002f3c8:	mov    DWORD PTR [rdx+0x4],r8d
   14002f3cc:	mov    DWORD PTR [rdx],eax
   14002f3ce:	jmp    0x14002f3da
   14002f3d0:	cmp    DWORD PTR [r9+0x10],0x20
   14002f3d5:	jne    0x14002f3da
   14002f3d7:	mov    DWORD PTR [rdx],r8d
   14002f3da:	mov    eax,ebx
   14002f3dc:	mov    rcx,QWORD PTR [rbp-0x10]
   14002f3e0:	xor    rcx,rsp
   14002f3e3:	call   0x1400097d0
   14002f3e8:	mov    rbx,QWORD PTR [rsp+0xb0]
   14002f3f0:	add    rsp,0x70
   14002f3f4:	pop    r15
   14002f3f6:	pop    r14
   14002f3f8:	pop    r13
   14002f3fa:	pop    r12
   14002f3fc:	pop    rdi
   14002f3fd:	pop    rsi
   14002f3fe:	pop    rbp
   14002f3ff:	ret    
   14002f400:	mov    QWORD PTR [rsp+0x8],rbx
   14002f405:	mov    QWORD PTR [rsp+0x18],rsi
   14002f40a:	mov    QWORD PTR [rsp+0x20],rdi
   14002f40f:	push   rbp
   14002f410:	push   r12
   14002f412:	push   r13
   14002f414:	push   r14
   14002f416:	push   r15
   14002f418:	mov    rbp,rsp
   14002f41b:	sub    rsp,0x60
   14002f41f:	mov    rax,QWORD PTR [rip+0x15e4a]        # 0x140045270
   14002f426:	xor    rax,rsp
   14002f429:	mov    QWORD PTR [rbp-0x8],rax
   14002f42d:	movzx  eax,WORD PTR [rcx+0xa]
   14002f431:	movzx  r9d,WORD PTR [rcx]
   14002f435:	xor    ebx,ebx
   14002f437:	mov    edi,eax
   14002f439:	and    eax,0x8000
   14002f43e:	shl    r9d,0x10
   14002f442:	mov    DWORD PTR [rbp-0x3c],eax
   14002f445:	mov    eax,DWORD PTR [rcx+0x6]
   14002f448:	and    edi,0x7fff
   14002f44e:	mov    DWORD PTR [rbp-0x18],eax
   14002f451:	mov    eax,DWORD PTR [rcx+0x2]
   14002f454:	sub    edi,0x3fff
   14002f45a:	mov    r12d,0x1f
   14002f460:	mov    QWORD PTR [rbp-0x30],rdx
   14002f464:	mov    DWORD PTR [rbp-0x28],r9d
   14002f468:	mov    DWORD PTR [rbp-0x14],eax
   14002f46b:	mov    DWORD PTR [rbp-0x10],r9d
   14002f46f:	lea    esi,[rbx+0x1]
   14002f472:	lea    r14d,[r12-0x1c]
   14002f477:	cmp    edi,0xffffc001
   14002f47d:	jne    0x14002f4a8
   14002f47f:	mov    r8d,ebx
   14002f482:	mov    eax,ebx
   14002f484:	cmp    DWORD PTR [rbp+rax*4-0x18],ebx
   14002f488:	jne    0x14002f497
   14002f48a:	add    rax,rsi
   14002f48d:	cmp    rax,r14
   14002f490:	jl     0x14002f484
   14002f492:	jmp    0x14002f94e
   14002f497:	mov    QWORD PTR [rbp-0x18],rbx
   14002f49b:	mov    DWORD PTR [rbp-0x10],ebx
   14002f49e:	mov    ebx,0x2
   14002f4a3:	jmp    0x14002f94e
   14002f4a8:	mov    rax,QWORD PTR [rbp-0x18]
   14002f4ac:	mov    r8d,r12d
   14002f4af:	or     r15d,0xffffffff
   14002f4b3:	mov    QWORD PTR [rbp-0x20],rax
   14002f4b7:	mov    eax,DWORD PTR [rip+0x171a3]        # 0x140046660
   14002f4bd:	mov    DWORD PTR [rbp-0x40],edi
   14002f4c0:	dec    eax
   14002f4c2:	mov    r13d,ebx
   14002f4c5:	mov    DWORD PTR [rbp-0x38],eax
   14002f4c8:	inc    eax
   14002f4ca:	cdq    
   14002f4cb:	and    edx,r12d
   14002f4ce:	add    eax,edx
   14002f4d0:	mov    r10d,eax
   14002f4d3:	and    eax,r12d
   14002f4d6:	sar    r10d,0x5
   14002f4da:	sub    eax,edx
   14002f4dc:	sub    r8d,eax
   14002f4df:	movsxd r11,r10d
   14002f4e2:	mov    ecx,DWORD PTR [rbp+r11*4-0x18]
   14002f4e7:	mov    DWORD PTR [rbp-0x24],r8d
   14002f4eb:	bt     ecx,r8d
   14002f4ef:	jae    0x14002f593
   14002f4f5:	mov    ecx,r8d
   14002f4f8:	mov    eax,r15d
   14002f4fb:	movsxd rdx,r10d
   14002f4fe:	shl    eax,cl
   14002f500:	not    eax
   14002f502:	test   DWORD PTR [rbp+rdx*4-0x18],eax
   14002f506:	jne    0x14002f521
   14002f508:	lea    eax,[r10+0x1]
   14002f50c:	movsxd rcx,eax
   14002f50f:	jmp    0x14002f51a
   14002f511:	cmp    DWORD PTR [rbp+rcx*4-0x18],ebx
   14002f515:	jne    0x14002f521
   14002f517:	add    rcx,rsi
   14002f51a:	cmp    rcx,r14
   14002f51d:	jl     0x14002f511
   14002f51f:	jmp    0x14002f593
   14002f521:	mov    eax,DWORD PTR [rbp-0x38]
   14002f524:	mov    ecx,r12d
   14002f527:	cdq    
   14002f528:	and    edx,r12d
   14002f52b:	add    eax,edx
   14002f52d:	mov    r8d,eax
   14002f530:	and    eax,r12d
   14002f533:	sub    eax,edx
   14002f535:	sar    r8d,0x5
   14002f539:	mov    edx,esi
   14002f53b:	sub    ecx,eax
   14002f53d:	movsxd r11,r8d
   14002f540:	mov    eax,DWORD PTR [rbp+r11*4-0x18]
   14002f545:	shl    edx,cl
   14002f547:	lea    ecx,[rax+rdx*1]
   14002f54a:	cmp    ecx,eax
   14002f54c:	jb     0x14002f552
   14002f54e:	cmp    ecx,edx
   14002f550:	jae    0x14002f555
   14002f552:	mov    r13d,esi
   14002f555:	lea    eax,[r8-0x1]
   14002f559:	mov    DWORD PTR [rbp+r11*4-0x18],ecx
   14002f55e:	movsxd rdx,eax
   14002f561:	test   eax,eax
   14002f563:	js     0x14002f58c
   14002f565:	test   r13d,r13d
   14002f568:	je     0x14002f58c
   14002f56a:	mov    eax,DWORD PTR [rbp+rdx*4-0x18]
   14002f56e:	mov    r13d,ebx
   14002f571:	lea    r8d,[rax+0x1]
   14002f575:	cmp    r8d,eax
   14002f578:	jb     0x14002f57f
   14002f57a:	cmp    r8d,esi
   14002f57d:	jae    0x14002f582
   14002f57f:	mov    r13d,esi
   14002f582:	mov    DWORD PTR [rbp+rdx*4-0x18],r8d
   14002f587:	sub    rdx,rsi
   14002f58a:	jns    0x14002f565
   14002f58c:	mov    r8d,DWORD PTR [rbp-0x24]
   14002f590:	movsxd r11,r10d
   14002f593:	mov    ecx,r8d
   14002f596:	mov    eax,r15d
   14002f599:	shl    eax,cl
   14002f59b:	and    DWORD PTR [rbp+r11*4-0x18],eax
   14002f5a0:	lea    eax,[r10+0x1]
   14002f5a4:	movsxd rdx,eax
   14002f5a7:	cmp    rdx,r14
   14002f5aa:	jge    0x14002f5c9
   14002f5ac:	lea    rcx,[rbp-0x18]
   14002f5b0:	mov    r8,r14
   14002f5b3:	sub    r8,rdx
   14002f5b6:	lea    rcx,[rcx+rdx*4]
   14002f5ba:	xor    edx,edx
   14002f5bc:	shl    r8,0x2
   14002f5c0:	call   0x140009800
   14002f5c5:	mov    r9d,DWORD PTR [rbp-0x28]
   14002f5c9:	test   r13d,r13d
   14002f5cc:	je     0x14002f5d0
   14002f5ce:	add    edi,esi
   14002f5d0:	mov    ecx,DWORD PTR [rip+0x17086]        # 0x14004665c
   14002f5d6:	mov    eax,ecx
   14002f5d8:	sub    eax,DWORD PTR [rip+0x17082]        # 0x140046660
   14002f5de:	cmp    edi,eax
   14002f5e0:	jge    0x14002f5f6
   14002f5e2:	mov    QWORD PTR [rbp-0x18],rbx
   14002f5e6:	mov    DWORD PTR [rbp-0x10],ebx
   14002f5e9:	mov    r8d,ebx
   14002f5ec:	mov    ebx,0x2
   14002f5f1:	jmp    0x14002f94a
   14002f5f6:	cmp    edi,ecx
   14002f5f8:	jg     0x14002f82f
   14002f5fe:	sub    ecx,DWORD PTR [rbp-0x40]
   14002f601:	mov    rax,QWORD PTR [rbp-0x20]
   14002f605:	mov    r10d,r15d
   14002f608:	mov    QWORD PTR [rbp-0x18],rax
   14002f60c:	mov    eax,ecx
   14002f60e:	mov    DWORD PTR [rbp-0x10],r9d
   14002f612:	cdq    
   14002f613:	mov    r11,r14
   14002f616:	mov    r9d,ebx
   14002f619:	and    edx,r12d
   14002f61c:	lea    r8,[rbp-0x18]
   14002f620:	add    eax,edx
   14002f622:	mov    r13d,eax
   14002f625:	and    eax,r12d
   14002f628:	sub    eax,edx
   14002f62a:	sar    r13d,0x5
   14002f62e:	mov    ecx,eax
   14002f630:	mov    edi,eax
   14002f632:	mov    eax,0x20
   14002f637:	shl    r10d,cl
   14002f63a:	sub    eax,ecx
   14002f63c:	mov    r14d,eax
   14002f63f:	not    r10d
   14002f642:	mov    eax,DWORD PTR [r8]
   14002f645:	mov    ecx,edi
   14002f647:	mov    edx,eax
   14002f649:	shr    eax,cl
   14002f64b:	mov    ecx,r14d
   14002f64e:	or     eax,r9d
   14002f651:	and    edx,r10d
   14002f654:	mov    r9d,edx
   14002f657:	mov    DWORD PTR [r8],eax
   14002f65a:	lea    r8,[r8+0x4]
   14002f65e:	shl    r9d,cl
   14002f661:	sub    r11,rsi
   14002f664:	jne    0x14002f642
   14002f666:	movsxd r10,r13d
   14002f669:	lea    edi,[r11+0x2]
   14002f66d:	lea    r14d,[r11+0x3]
   14002f671:	mov    r9,r10
   14002f674:	mov    r8d,edi
   14002f677:	neg    r9
   14002f67a:	cmp    r8,r10
   14002f67d:	jl     0x14002f694
   14002f67f:	mov    rdx,r8
   14002f682:	shl    rdx,0x2
   14002f686:	lea    rax,[rdx+r9*4]
   14002f68a:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   14002f68e:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   14002f692:	jmp    0x14002f699
   14002f694:	mov    DWORD PTR [rbp+r8*4-0x18],ebx
   14002f699:	sub    r8,rsi
   14002f69c:	jns    0x14002f67a
   14002f69e:	mov    r8d,DWORD PTR [rbp-0x38]
   14002f6a2:	mov    r11d,r12d
   14002f6a5:	lea    eax,[r8+0x1]
   14002f6a9:	cdq    
   14002f6aa:	and    edx,r12d
   14002f6ad:	add    eax,edx
   14002f6af:	mov    r9d,eax
   14002f6b2:	and    eax,r12d
   14002f6b5:	sub    eax,edx
   14002f6b7:	sar    r9d,0x5
   14002f6bb:	sub    r11d,eax
   14002f6be:	movsxd rax,r9d
   14002f6c1:	mov    ecx,DWORD PTR [rbp+rax*4-0x18]
   14002f6c5:	bt     ecx,r11d
   14002f6c9:	jae    0x14002f767
   14002f6cf:	mov    ecx,r11d
   14002f6d2:	mov    eax,r15d
   14002f6d5:	movsxd rdx,r9d
   14002f6d8:	shl    eax,cl
   14002f6da:	not    eax
   14002f6dc:	test   DWORD PTR [rbp+rdx*4-0x18],eax
   14002f6e0:	jne    0x14002f6fb
   14002f6e2:	lea    eax,[r9+0x1]
   14002f6e6:	movsxd rcx,eax
   14002f6e9:	jmp    0x14002f6f4
   14002f6eb:	cmp    DWORD PTR [rbp+rcx*4-0x18],ebx
   14002f6ef:	jne    0x14002f6fb
   14002f6f1:	add    rcx,rsi
   14002f6f4:	cmp    rcx,r14
   14002f6f7:	jl     0x14002f6eb
   14002f6f9:	jmp    0x14002f767
   14002f6fb:	mov    eax,r8d
   14002f6fe:	mov    ecx,r12d
   14002f701:	cdq    
   14002f702:	and    edx,r12d
   14002f705:	add    eax,edx
   14002f707:	mov    r10d,eax
   14002f70a:	and    eax,r12d
   14002f70d:	sub    eax,edx
   14002f70f:	sar    r10d,0x5
   14002f713:	mov    edx,esi
   14002f715:	sub    ecx,eax
   14002f717:	movsxd r13,r10d
   14002f71a:	mov    eax,DWORD PTR [rbp+r13*4-0x18]
   14002f71f:	shl    edx,cl
   14002f721:	mov    ecx,ebx
   14002f723:	lea    r8d,[rax+rdx*1]
   14002f727:	cmp    r8d,eax
   14002f72a:	jb     0x14002f731
   14002f72c:	cmp    r8d,edx
   14002f72f:	jae    0x14002f733
   14002f731:	mov    ecx,esi
   14002f733:	lea    eax,[r10-0x1]
   14002f737:	mov    DWORD PTR [rbp+r13*4-0x18],r8d
   14002f73c:	movsxd rdx,eax
   14002f73f:	test   eax,eax
   14002f741:	js     0x14002f767
   14002f743:	test   ecx,ecx
   14002f745:	je     0x14002f767
   14002f747:	mov    eax,DWORD PTR [rbp+rdx*4-0x18]
   14002f74b:	mov    ecx,ebx
   14002f74d:	lea    r8d,[rax+0x1]
   14002f751:	cmp    r8d,eax
   14002f754:	jb     0x14002f75b
   14002f756:	cmp    r8d,esi
   14002f759:	jae    0x14002f75d
   14002f75b:	mov    ecx,esi
   14002f75d:	mov    DWORD PTR [rbp+rdx*4-0x18],r8d
   14002f762:	sub    rdx,rsi
   14002f765:	jns    0x14002f743
   14002f767:	mov    ecx,r11d
   14002f76a:	mov    eax,r15d
   14002f76d:	shl    eax,cl
   14002f76f:	movsxd rcx,r9d
   14002f772:	and    DWORD PTR [rbp+rcx*4-0x18],eax
   14002f776:	lea    eax,[r9+0x1]
   14002f77a:	movsxd rdx,eax
   14002f77d:	cmp    rdx,r14
   14002f780:	jge    0x14002f79b
   14002f782:	lea    rcx,[rbp-0x18]
   14002f786:	mov    r8,r14
   14002f789:	sub    r8,rdx
   14002f78c:	lea    rcx,[rcx+rdx*4]
   14002f790:	xor    edx,edx
   14002f792:	shl    r8,0x2
   14002f796:	call   0x140009800
   14002f79b:	mov    eax,DWORD PTR [rip+0x16ec3]        # 0x140046664
   14002f7a1:	mov    r13d,0x20
   14002f7a7:	mov    r9d,ebx
   14002f7aa:	inc    eax
   14002f7ac:	lea    r8,[rbp-0x18]
   14002f7b0:	cdq    
   14002f7b1:	and    edx,r12d
   14002f7b4:	add    eax,edx
   14002f7b6:	mov    r10d,eax
   14002f7b9:	and    eax,r12d
   14002f7bc:	sub    eax,edx
   14002f7be:	sar    r10d,0x5
   14002f7c2:	mov    ecx,eax
   14002f7c4:	mov    r11d,eax
   14002f7c7:	shl    r15d,cl
   14002f7ca:	sub    r13d,eax
   14002f7cd:	not    r15d
   14002f7d0:	mov    eax,DWORD PTR [r8]
   14002f7d3:	mov    ecx,r11d
   14002f7d6:	mov    edx,eax
   14002f7d8:	shr    eax,cl
   14002f7da:	mov    ecx,r13d
   14002f7dd:	or     eax,r9d
   14002f7e0:	and    edx,r15d
   14002f7e3:	mov    r9d,edx
   14002f7e6:	mov    DWORD PTR [r8],eax
   14002f7e9:	lea    r8,[r8+0x4]
   14002f7ed:	shl    r9d,cl
   14002f7f0:	sub    r14,rsi
   14002f7f3:	jne    0x14002f7d0
   14002f7f5:	movsxd r10,r10d
   14002f7f8:	mov    r8,rdi
   14002f7fb:	mov    r9,r10
   14002f7fe:	neg    r9
   14002f801:	cmp    r8,r10
   14002f804:	jl     0x14002f81b
   14002f806:	mov    rdx,r8
   14002f809:	shl    rdx,0x2
   14002f80d:	lea    rax,[rdx+r9*4]
   14002f811:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   14002f815:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   14002f819:	jmp    0x14002f820
   14002f81b:	mov    DWORD PTR [rbp+r8*4-0x18],ebx
   14002f820:	sub    r8,rsi
   14002f823:	jns    0x14002f801
   14002f825:	mov    r8d,ebx
   14002f828:	mov    ebx,edi
   14002f82a:	jmp    0x14002f94a
   14002f82f:	mov    eax,DWORD PTR [rip+0x16e2f]        # 0x140046664
   14002f835:	mov    r10d,DWORD PTR [rip+0x16e1c]        # 0x140046658
   14002f83c:	mov    r13d,0x20
   14002f842:	cdq    
   14002f843:	and    edx,r12d
   14002f846:	add    eax,edx
   14002f848:	mov    r11d,eax
   14002f84b:	and    eax,r12d
   14002f84e:	sub    eax,edx
   14002f850:	sar    r11d,0x5
   14002f854:	mov    ecx,eax
   14002f856:	shl    r15d,cl
   14002f859:	not    r15d
   14002f85c:	cmp    edi,r10d
   14002f85f:	jl     0x14002f8db
   14002f861:	mov    QWORD PTR [rbp-0x18],rbx
   14002f865:	bts    DWORD PTR [rbp-0x18],0x1f
   14002f86a:	mov    DWORD PTR [rbp-0x10],ebx
   14002f86d:	sub    r13d,eax
   14002f870:	mov    edi,eax
   14002f872:	mov    r9d,ebx
   14002f875:	lea    r8,[rbp-0x18]
   14002f879:	mov    eax,DWORD PTR [r8]
   14002f87c:	mov    ecx,edi
   14002f87e:	mov    edx,r15d
   14002f881:	and    edx,eax
   14002f883:	shr    eax,cl
   14002f885:	mov    ecx,r13d
   14002f888:	or     eax,r9d
   14002f88b:	mov    r9d,edx
   14002f88e:	shl    r9d,cl
   14002f891:	mov    DWORD PTR [r8],eax
   14002f894:	lea    r8,[r8+0x4]
   14002f898:	sub    r14,rsi
   14002f89b:	jne    0x14002f879
   14002f89d:	movsxd r9,r11d
   14002f8a0:	lea    edi,[r14+0x2]
   14002f8a4:	mov    r8,r9
   14002f8a7:	neg    r8
   14002f8aa:	cmp    rdi,r9
   14002f8ad:	jl     0x14002f8c4
   14002f8af:	mov    rdx,rdi
   14002f8b2:	shl    rdx,0x2
   14002f8b6:	lea    rax,[rdx+r8*4]
   14002f8ba:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   14002f8be:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   14002f8c2:	jmp    0x14002f8c8
   14002f8c4:	mov    DWORD PTR [rbp+rdi*4-0x18],ebx
   14002f8c8:	sub    rdi,rsi
   14002f8cb:	jns    0x14002f8aa
   14002f8cd:	mov    r8d,DWORD PTR [rip+0x16d98]        # 0x14004666c
   14002f8d4:	mov    ebx,esi
   14002f8d6:	add    r8d,r10d
   14002f8d9:	jmp    0x14002f94a
   14002f8db:	mov    r8d,DWORD PTR [rip+0x16d8a]        # 0x14004666c
   14002f8e2:	btr    DWORD PTR [rbp-0x18],0x1f
   14002f8e7:	mov    r10d,ebx
   14002f8ea:	add    r8d,edi
   14002f8ed:	mov    edi,eax
   14002f8ef:	sub    r13d,eax
   14002f8f2:	lea    r9,[rbp-0x18]
   14002f8f6:	mov    eax,DWORD PTR [r9]
   14002f8f9:	mov    ecx,edi
   14002f8fb:	mov    edx,eax
   14002f8fd:	shr    eax,cl
   14002f8ff:	mov    ecx,r13d
   14002f902:	or     eax,r10d
   14002f905:	and    edx,r15d
   14002f908:	mov    r10d,edx
   14002f90b:	mov    DWORD PTR [r9],eax
   14002f90e:	lea    r9,[r9+0x4]
   14002f912:	shl    r10d,cl
   14002f915:	sub    r14,rsi
   14002f918:	jne    0x14002f8f6
   14002f91a:	movsxd r10,r11d
   14002f91d:	lea    edi,[r14+0x2]
   14002f921:	mov    r9,r10
   14002f924:	neg    r9
   14002f927:	cmp    rdi,r10
   14002f92a:	jl     0x14002f941
   14002f92c:	mov    rdx,rdi
   14002f92f:	shl    rdx,0x2
   14002f933:	lea    rax,[rdx+r9*4]
   14002f937:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   14002f93b:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   14002f93f:	jmp    0x14002f945
   14002f941:	mov    DWORD PTR [rbp+rdi*4-0x18],ebx
   14002f945:	sub    rdi,rsi
   14002f948:	jns    0x14002f927
   14002f94a:	mov    rdx,QWORD PTR [rbp-0x30]
   14002f94e:	sub    r12d,DWORD PTR [rip+0x16d0f]        # 0x140046664
   14002f955:	mov    cl,r12b
   14002f958:	shl    r8d,cl
   14002f95b:	neg    DWORD PTR [rbp-0x3c]
   14002f95e:	sbb    eax,eax
   14002f960:	and    eax,0x80000000
   14002f965:	or     r8d,eax
   14002f968:	mov    eax,DWORD PTR [rip+0x16cfa]        # 0x140046668
   14002f96e:	or     r8d,DWORD PTR [rbp-0x18]
   14002f972:	cmp    eax,0x40
   14002f975:	jne    0x14002f982
   14002f977:	mov    eax,DWORD PTR [rbp-0x14]
   14002f97a:	mov    DWORD PTR [rdx+0x4],r8d
   14002f97e:	mov    DWORD PTR [rdx],eax
   14002f980:	jmp    0x14002f98a
   14002f982:	cmp    eax,0x20
   14002f985:	jne    0x14002f98a
   14002f987:	mov    DWORD PTR [rdx],r8d
   14002f98a:	mov    eax,ebx
   14002f98c:	mov    rcx,QWORD PTR [rbp-0x8]
   14002f990:	xor    rcx,rsp
   14002f993:	call   0x1400097d0
   14002f998:	lea    r11,[rsp+0x60]
   14002f99d:	mov    rbx,QWORD PTR [r11+0x30]
   14002f9a1:	mov    rsi,QWORD PTR [r11+0x40]
   14002f9a5:	mov    rdi,QWORD PTR [r11+0x48]
   14002f9a9:	mov    rsp,r11
   14002f9ac:	pop    r15
   14002f9ae:	pop    r14
   14002f9b0:	pop    r13
   14002f9b2:	pop    r12
   14002f9b4:	pop    rbp
   14002f9b5:	ret    
   14002f9b6:	int3   
   14002f9b7:	int3   
   14002f9b8:	mov    QWORD PTR [rsp+0x8],rbx
   14002f9bd:	mov    QWORD PTR [rsp+0x18],rsi
   14002f9c2:	mov    QWORD PTR [rsp+0x20],rdi
   14002f9c7:	push   rbp
   14002f9c8:	push   r12
   14002f9ca:	push   r13
   14002f9cc:	push   r14
   14002f9ce:	push   r15
   14002f9d0:	mov    rbp,rsp
   14002f9d3:	sub    rsp,0x60
   14002f9d7:	mov    rax,QWORD PTR [rip+0x15892]        # 0x140045270
   14002f9de:	xor    rax,rsp
   14002f9e1:	mov    QWORD PTR [rbp-0x8],rax
   14002f9e5:	movzx  eax,WORD PTR [rcx+0xa]
   14002f9e9:	movzx  r9d,WORD PTR [rcx]
   14002f9ed:	xor    ebx,ebx
   14002f9ef:	mov    edi,eax
   14002f9f1:	and    eax,0x8000
   14002f9f6:	shl    r9d,0x10
   14002f9fa:	mov    DWORD PTR [rbp-0x3c],eax
   14002f9fd:	mov    eax,DWORD PTR [rcx+0x6]
   14002fa00:	and    edi,0x7fff
   14002fa06:	mov    DWORD PTR [rbp-0x18],eax
   14002fa09:	mov    eax,DWORD PTR [rcx+0x2]
   14002fa0c:	sub    edi,0x3fff
   14002fa12:	mov    r12d,0x1f
   14002fa18:	mov    QWORD PTR [rbp-0x30],rdx
   14002fa1c:	mov    DWORD PTR [rbp-0x28],r9d
   14002fa20:	mov    DWORD PTR [rbp-0x14],eax
   14002fa23:	mov    DWORD PTR [rbp-0x10],r9d
   14002fa27:	lea    esi,[rbx+0x1]
   14002fa2a:	lea    r14d,[r12-0x1c]
   14002fa2f:	cmp    edi,0xffffc001
   14002fa35:	jne    0x14002fa60
   14002fa37:	mov    r8d,ebx
   14002fa3a:	mov    eax,ebx
   14002fa3c:	cmp    DWORD PTR [rbp+rax*4-0x18],ebx
   14002fa40:	jne    0x14002fa4f
   14002fa42:	add    rax,rsi
   14002fa45:	cmp    rax,r14
   14002fa48:	jl     0x14002fa3c
   14002fa4a:	jmp    0x14002ff06
   14002fa4f:	mov    QWORD PTR [rbp-0x18],rbx
   14002fa53:	mov    DWORD PTR [rbp-0x10],ebx
   14002fa56:	mov    ebx,0x2
   14002fa5b:	jmp    0x14002ff06
   14002fa60:	mov    rax,QWORD PTR [rbp-0x18]
   14002fa64:	mov    r8d,r12d
   14002fa67:	or     r15d,0xffffffff
   14002fa6b:	mov    QWORD PTR [rbp-0x20],rax
   14002fa6f:	mov    eax,DWORD PTR [rip+0x16c03]        # 0x140046678
   14002fa75:	mov    DWORD PTR [rbp-0x40],edi
   14002fa78:	dec    eax
   14002fa7a:	mov    r13d,ebx
   14002fa7d:	mov    DWORD PTR [rbp-0x38],eax
   14002fa80:	inc    eax
   14002fa82:	cdq    
   14002fa83:	and    edx,r12d
   14002fa86:	add    eax,edx
   14002fa88:	mov    r10d,eax
   14002fa8b:	and    eax,r12d
   14002fa8e:	sar    r10d,0x5
   14002fa92:	sub    eax,edx
   14002fa94:	sub    r8d,eax
   14002fa97:	movsxd r11,r10d
   14002fa9a:	mov    ecx,DWORD PTR [rbp+r11*4-0x18]
   14002fa9f:	mov    DWORD PTR [rbp-0x24],r8d
   14002faa3:	bt     ecx,r8d
   14002faa7:	jae    0x14002fb4b
   14002faad:	mov    ecx,r8d
   14002fab0:	mov    eax,r15d
   14002fab3:	movsxd rdx,r10d
   14002fab6:	shl    eax,cl
   14002fab8:	not    eax
   14002faba:	test   DWORD PTR [rbp+rdx*4-0x18],eax
   14002fabe:	jne    0x14002fad9
   14002fac0:	lea    eax,[r10+0x1]
   14002fac4:	movsxd rcx,eax
   14002fac7:	jmp    0x14002fad2
   14002fac9:	cmp    DWORD PTR [rbp+rcx*4-0x18],ebx
   14002facd:	jne    0x14002fad9
   14002facf:	add    rcx,rsi
   14002fad2:	cmp    rcx,r14
   14002fad5:	jl     0x14002fac9
   14002fad7:	jmp    0x14002fb4b
   14002fad9:	mov    eax,DWORD PTR [rbp-0x38]
   14002fadc:	mov    ecx,r12d
   14002fadf:	cdq    
   14002fae0:	and    edx,r12d
   14002fae3:	add    eax,edx
   14002fae5:	mov    r8d,eax
   14002fae8:	and    eax,r12d
   14002faeb:	sub    eax,edx
   14002faed:	sar    r8d,0x5
   14002faf1:	mov    edx,esi
   14002faf3:	sub    ecx,eax
   14002faf5:	movsxd r11,r8d
   14002faf8:	mov    eax,DWORD PTR [rbp+r11*4-0x18]
   14002fafd:	shl    edx,cl
   14002faff:	lea    ecx,[rax+rdx*1]
   14002fb02:	cmp    ecx,eax
   14002fb04:	jb     0x14002fb0a
   14002fb06:	cmp    ecx,edx
   14002fb08:	jae    0x14002fb0d
   14002fb0a:	mov    r13d,esi
   14002fb0d:	lea    eax,[r8-0x1]
   14002fb11:	mov    DWORD PTR [rbp+r11*4-0x18],ecx
   14002fb16:	movsxd rdx,eax
   14002fb19:	test   eax,eax
   14002fb1b:	js     0x14002fb44
   14002fb1d:	test   r13d,r13d
   14002fb20:	je     0x14002fb44
   14002fb22:	mov    eax,DWORD PTR [rbp+rdx*4-0x18]
   14002fb26:	mov    r13d,ebx
   14002fb29:	lea    r8d,[rax+0x1]
   14002fb2d:	cmp    r8d,eax
   14002fb30:	jb     0x14002fb37
   14002fb32:	cmp    r8d,esi
   14002fb35:	jae    0x14002fb3a
   14002fb37:	mov    r13d,esi
   14002fb3a:	mov    DWORD PTR [rbp+rdx*4-0x18],r8d
   14002fb3f:	sub    rdx,rsi
   14002fb42:	jns    0x14002fb1d
   14002fb44:	mov    r8d,DWORD PTR [rbp-0x24]
   14002fb48:	movsxd r11,r10d
   14002fb4b:	mov    ecx,r8d
   14002fb4e:	mov    eax,r15d
   14002fb51:	shl    eax,cl
   14002fb53:	and    DWORD PTR [rbp+r11*4-0x18],eax
   14002fb58:	lea    eax,[r10+0x1]
   14002fb5c:	movsxd rdx,eax
   14002fb5f:	cmp    rdx,r14
   14002fb62:	jge    0x14002fb81
   14002fb64:	lea    rcx,[rbp-0x18]
   14002fb68:	mov    r8,r14
   14002fb6b:	sub    r8,rdx
   14002fb6e:	lea    rcx,[rcx+rdx*4]
   14002fb72:	xor    edx,edx
   14002fb74:	shl    r8,0x2
   14002fb78:	call   0x140009800
   14002fb7d:	mov    r9d,DWORD PTR [rbp-0x28]
   14002fb81:	test   r13d,r13d
   14002fb84:	je     0x14002fb88
   14002fb86:	add    edi,esi
   14002fb88:	mov    ecx,DWORD PTR [rip+0x16ae6]        # 0x140046674
   14002fb8e:	mov    eax,ecx
   14002fb90:	sub    eax,DWORD PTR [rip+0x16ae2]        # 0x140046678
   14002fb96:	cmp    edi,eax
   14002fb98:	jge    0x14002fbae
   14002fb9a:	mov    QWORD PTR [rbp-0x18],rbx
   14002fb9e:	mov    DWORD PTR [rbp-0x10],ebx
   14002fba1:	mov    r8d,ebx
   14002fba4:	mov    ebx,0x2
   14002fba9:	jmp    0x14002ff02
   14002fbae:	cmp    edi,ecx
   14002fbb0:	jg     0x14002fde7
   14002fbb6:	sub    ecx,DWORD PTR [rbp-0x40]
   14002fbb9:	mov    rax,QWORD PTR [rbp-0x20]
   14002fbbd:	mov    r10d,r15d
   14002fbc0:	mov    QWORD PTR [rbp-0x18],rax
   14002fbc4:	mov    eax,ecx
   14002fbc6:	mov    DWORD PTR [rbp-0x10],r9d
   14002fbca:	cdq    
   14002fbcb:	mov    r11,r14
   14002fbce:	mov    r9d,ebx
   14002fbd1:	and    edx,r12d
   14002fbd4:	lea    r8,[rbp-0x18]
   14002fbd8:	add    eax,edx
   14002fbda:	mov    r13d,eax
   14002fbdd:	and    eax,r12d
   14002fbe0:	sub    eax,edx
   14002fbe2:	sar    r13d,0x5
   14002fbe6:	mov    ecx,eax
   14002fbe8:	mov    edi,eax
   14002fbea:	mov    eax,0x20
   14002fbef:	shl    r10d,cl
   14002fbf2:	sub    eax,ecx
   14002fbf4:	mov    r14d,eax
   14002fbf7:	not    r10d
   14002fbfa:	mov    eax,DWORD PTR [r8]
   14002fbfd:	mov    ecx,edi
   14002fbff:	mov    edx,eax
   14002fc01:	shr    eax,cl
   14002fc03:	mov    ecx,r14d
   14002fc06:	or     eax,r9d
   14002fc09:	and    edx,r10d
   14002fc0c:	mov    r9d,edx
   14002fc0f:	mov    DWORD PTR [r8],eax
   14002fc12:	lea    r8,[r8+0x4]
   14002fc16:	shl    r9d,cl
   14002fc19:	sub    r11,rsi
   14002fc1c:	jne    0x14002fbfa
   14002fc1e:	movsxd r10,r13d
   14002fc21:	lea    edi,[r11+0x2]
   14002fc25:	lea    r14d,[r11+0x3]
   14002fc29:	mov    r9,r10
   14002fc2c:	mov    r8d,edi
   14002fc2f:	neg    r9
   14002fc32:	cmp    r8,r10
   14002fc35:	jl     0x14002fc4c
   14002fc37:	mov    rdx,r8
   14002fc3a:	shl    rdx,0x2
   14002fc3e:	lea    rax,[rdx+r9*4]
   14002fc42:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   14002fc46:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   14002fc4a:	jmp    0x14002fc51
   14002fc4c:	mov    DWORD PTR [rbp+r8*4-0x18],ebx
   14002fc51:	sub    r8,rsi
   14002fc54:	jns    0x14002fc32
   14002fc56:	mov    r8d,DWORD PTR [rbp-0x38]
   14002fc5a:	mov    r11d,r12d
   14002fc5d:	lea    eax,[r8+0x1]
   14002fc61:	cdq    
   14002fc62:	and    edx,r12d
   14002fc65:	add    eax,edx
   14002fc67:	mov    r9d,eax
   14002fc6a:	and    eax,r12d
   14002fc6d:	sub    eax,edx
   14002fc6f:	sar    r9d,0x5
   14002fc73:	sub    r11d,eax
   14002fc76:	movsxd rax,r9d
   14002fc79:	mov    ecx,DWORD PTR [rbp+rax*4-0x18]
   14002fc7d:	bt     ecx,r11d
   14002fc81:	jae    0x14002fd1f
   14002fc87:	mov    ecx,r11d
   14002fc8a:	mov    eax,r15d
   14002fc8d:	movsxd rdx,r9d
   14002fc90:	shl    eax,cl
   14002fc92:	not    eax
   14002fc94:	test   DWORD PTR [rbp+rdx*4-0x18],eax
   14002fc98:	jne    0x14002fcb3
   14002fc9a:	lea    eax,[r9+0x1]
   14002fc9e:	movsxd rcx,eax
   14002fca1:	jmp    0x14002fcac
   14002fca3:	cmp    DWORD PTR [rbp+rcx*4-0x18],ebx
   14002fca7:	jne    0x14002fcb3
   14002fca9:	add    rcx,rsi
   14002fcac:	cmp    rcx,r14
   14002fcaf:	jl     0x14002fca3
   14002fcb1:	jmp    0x14002fd1f
   14002fcb3:	mov    eax,r8d
   14002fcb6:	mov    ecx,r12d
   14002fcb9:	cdq    
   14002fcba:	and    edx,r12d
   14002fcbd:	add    eax,edx
   14002fcbf:	mov    r10d,eax
   14002fcc2:	and    eax,r12d
   14002fcc5:	sub    eax,edx
   14002fcc7:	sar    r10d,0x5
   14002fccb:	mov    edx,esi
   14002fccd:	sub    ecx,eax
   14002fccf:	movsxd r13,r10d
   14002fcd2:	mov    eax,DWORD PTR [rbp+r13*4-0x18]
   14002fcd7:	shl    edx,cl
   14002fcd9:	mov    ecx,ebx
   14002fcdb:	lea    r8d,[rax+rdx*1]
   14002fcdf:	cmp    r8d,eax
   14002fce2:	jb     0x14002fce9
   14002fce4:	cmp    r8d,edx
   14002fce7:	jae    0x14002fceb
   14002fce9:	mov    ecx,esi
   14002fceb:	lea    eax,[r10-0x1]
   14002fcef:	mov    DWORD PTR [rbp+r13*4-0x18],r8d
   14002fcf4:	movsxd rdx,eax
   14002fcf7:	test   eax,eax
   14002fcf9:	js     0x14002fd1f
   14002fcfb:	test   ecx,ecx
   14002fcfd:	je     0x14002fd1f
   14002fcff:	mov    eax,DWORD PTR [rbp+rdx*4-0x18]
   14002fd03:	mov    ecx,ebx
   14002fd05:	lea    r8d,[rax+0x1]
   14002fd09:	cmp    r8d,eax
   14002fd0c:	jb     0x14002fd13
   14002fd0e:	cmp    r8d,esi
   14002fd11:	jae    0x14002fd15
   14002fd13:	mov    ecx,esi
   14002fd15:	mov    DWORD PTR [rbp+rdx*4-0x18],r8d
   14002fd1a:	sub    rdx,rsi
   14002fd1d:	jns    0x14002fcfb
   14002fd1f:	mov    ecx,r11d
   14002fd22:	mov    eax,r15d
   14002fd25:	shl    eax,cl
   14002fd27:	movsxd rcx,r9d
   14002fd2a:	and    DWORD PTR [rbp+rcx*4-0x18],eax
   14002fd2e:	lea    eax,[r9+0x1]
   14002fd32:	movsxd rdx,eax
   14002fd35:	cmp    rdx,r14
   14002fd38:	jge    0x14002fd53
   14002fd3a:	lea    rcx,[rbp-0x18]
   14002fd3e:	mov    r8,r14
   14002fd41:	sub    r8,rdx
   14002fd44:	lea    rcx,[rcx+rdx*4]
   14002fd48:	xor    edx,edx
   14002fd4a:	shl    r8,0x2
   14002fd4e:	call   0x140009800
   14002fd53:	mov    eax,DWORD PTR [rip+0x16923]        # 0x14004667c
   14002fd59:	mov    r13d,0x20
   14002fd5f:	mov    r9d,ebx
   14002fd62:	inc    eax
   14002fd64:	lea    r8,[rbp-0x18]
   14002fd68:	cdq    
   14002fd69:	and    edx,r12d
   14002fd6c:	add    eax,edx
   14002fd6e:	mov    r10d,eax
   14002fd71:	and    eax,r12d
   14002fd74:	sub    eax,edx
   14002fd76:	sar    r10d,0x5
   14002fd7a:	mov    ecx,eax
   14002fd7c:	mov    r11d,eax
   14002fd7f:	shl    r15d,cl
   14002fd82:	sub    r13d,eax
   14002fd85:	not    r15d
   14002fd88:	mov    eax,DWORD PTR [r8]
   14002fd8b:	mov    ecx,r11d
   14002fd8e:	mov    edx,eax
   14002fd90:	shr    eax,cl
   14002fd92:	mov    ecx,r13d
   14002fd95:	or     eax,r9d
   14002fd98:	and    edx,r15d
   14002fd9b:	mov    r9d,edx
   14002fd9e:	mov    DWORD PTR [r8],eax
   14002fda1:	lea    r8,[r8+0x4]
   14002fda5:	shl    r9d,cl
   14002fda8:	sub    r14,rsi
   14002fdab:	jne    0x14002fd88
   14002fdad:	movsxd r10,r10d
   14002fdb0:	mov    r8,rdi
   14002fdb3:	mov    r9,r10
   14002fdb6:	neg    r9
   14002fdb9:	cmp    r8,r10
   14002fdbc:	jl     0x14002fdd3
   14002fdbe:	mov    rdx,r8
   14002fdc1:	shl    rdx,0x2
   14002fdc5:	lea    rax,[rdx+r9*4]
   14002fdc9:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   14002fdcd:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   14002fdd1:	jmp    0x14002fdd8
   14002fdd3:	mov    DWORD PTR [rbp+r8*4-0x18],ebx
   14002fdd8:	sub    r8,rsi
   14002fddb:	jns    0x14002fdb9
   14002fddd:	mov    r8d,ebx
   14002fde0:	mov    ebx,edi
   14002fde2:	jmp    0x14002ff02
   14002fde7:	mov    eax,DWORD PTR [rip+0x1688f]        # 0x14004667c
   14002fded:	mov    r10d,DWORD PTR [rip+0x1687c]        # 0x140046670
   14002fdf4:	mov    r13d,0x20
   14002fdfa:	cdq    
   14002fdfb:	and    edx,r12d
   14002fdfe:	add    eax,edx
   14002fe00:	mov    r11d,eax
   14002fe03:	and    eax,r12d
   14002fe06:	sub    eax,edx
   14002fe08:	sar    r11d,0x5
   14002fe0c:	mov    ecx,eax
   14002fe0e:	shl    r15d,cl
   14002fe11:	not    r15d
   14002fe14:	cmp    edi,r10d
   14002fe17:	jl     0x14002fe93
   14002fe19:	mov    QWORD PTR [rbp-0x18],rbx
   14002fe1d:	bts    DWORD PTR [rbp-0x18],0x1f
   14002fe22:	mov    DWORD PTR [rbp-0x10],ebx
   14002fe25:	sub    r13d,eax
   14002fe28:	mov    edi,eax
   14002fe2a:	mov    r9d,ebx
   14002fe2d:	lea    r8,[rbp-0x18]
   14002fe31:	mov    eax,DWORD PTR [r8]
   14002fe34:	mov    ecx,edi
   14002fe36:	mov    edx,r15d
   14002fe39:	and    edx,eax
   14002fe3b:	shr    eax,cl
   14002fe3d:	mov    ecx,r13d
   14002fe40:	or     eax,r9d
   14002fe43:	mov    r9d,edx
   14002fe46:	shl    r9d,cl
   14002fe49:	mov    DWORD PTR [r8],eax
   14002fe4c:	lea    r8,[r8+0x4]
   14002fe50:	sub    r14,rsi
   14002fe53:	jne    0x14002fe31
   14002fe55:	movsxd r9,r11d
   14002fe58:	lea    edi,[r14+0x2]
   14002fe5c:	mov    r8,r9
   14002fe5f:	neg    r8
   14002fe62:	cmp    rdi,r9
   14002fe65:	jl     0x14002fe7c
   14002fe67:	mov    rdx,rdi
   14002fe6a:	shl    rdx,0x2
   14002fe6e:	lea    rax,[rdx+r8*4]
   14002fe72:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   14002fe76:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   14002fe7a:	jmp    0x14002fe80
   14002fe7c:	mov    DWORD PTR [rbp+rdi*4-0x18],ebx
   14002fe80:	sub    rdi,rsi
   14002fe83:	jns    0x14002fe62
   14002fe85:	mov    r8d,DWORD PTR [rip+0x167f8]        # 0x140046684
   14002fe8c:	mov    ebx,esi
   14002fe8e:	add    r8d,r10d
   14002fe91:	jmp    0x14002ff02
   14002fe93:	mov    r8d,DWORD PTR [rip+0x167ea]        # 0x140046684
   14002fe9a:	btr    DWORD PTR [rbp-0x18],0x1f
   14002fe9f:	mov    r10d,ebx
   14002fea2:	add    r8d,edi
   14002fea5:	mov    edi,eax
   14002fea7:	sub    r13d,eax
   14002feaa:	lea    r9,[rbp-0x18]
   14002feae:	mov    eax,DWORD PTR [r9]
   14002feb1:	mov    ecx,edi
   14002feb3:	mov    edx,eax
   14002feb5:	shr    eax,cl
   14002feb7:	mov    ecx,r13d
   14002feba:	or     eax,r10d
   14002febd:	and    edx,r15d
   14002fec0:	mov    r10d,edx
   14002fec3:	mov    DWORD PTR [r9],eax
   14002fec6:	lea    r9,[r9+0x4]
   14002feca:	shl    r10d,cl
   14002fecd:	sub    r14,rsi
   14002fed0:	jne    0x14002feae
   14002fed2:	movsxd r10,r11d
   14002fed5:	lea    edi,[r14+0x2]
   14002fed9:	mov    r9,r10
   14002fedc:	neg    r9
   14002fedf:	cmp    rdi,r10
   14002fee2:	jl     0x14002fef9
   14002fee4:	mov    rdx,rdi
   14002fee7:	shl    rdx,0x2
   14002feeb:	lea    rax,[rdx+r9*4]
   14002feef:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   14002fef3:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   14002fef7:	jmp    0x14002fefd
   14002fef9:	mov    DWORD PTR [rbp+rdi*4-0x18],ebx
   14002fefd:	sub    rdi,rsi
   14002ff00:	jns    0x14002fedf
   14002ff02:	mov    rdx,QWORD PTR [rbp-0x30]
   14002ff06:	sub    r12d,DWORD PTR [rip+0x1676f]        # 0x14004667c
   14002ff0d:	mov    cl,r12b
   14002ff10:	shl    r8d,cl
   14002ff13:	neg    DWORD PTR [rbp-0x3c]
   14002ff16:	sbb    eax,eax
   14002ff18:	and    eax,0x80000000
   14002ff1d:	or     r8d,eax
   14002ff20:	mov    eax,DWORD PTR [rip+0x1675a]        # 0x140046680
   14002ff26:	or     r8d,DWORD PTR [rbp-0x18]
   14002ff2a:	cmp    eax,0x40
   14002ff2d:	jne    0x14002ff3a
   14002ff2f:	mov    eax,DWORD PTR [rbp-0x14]
   14002ff32:	mov    DWORD PTR [rdx+0x4],r8d
   14002ff36:	mov    DWORD PTR [rdx],eax
   14002ff38:	jmp    0x14002ff42
   14002ff3a:	cmp    eax,0x20
   14002ff3d:	jne    0x14002ff42
   14002ff3f:	mov    DWORD PTR [rdx],r8d
   14002ff42:	mov    eax,ebx
   14002ff44:	mov    rcx,QWORD PTR [rbp-0x8]
   14002ff48:	xor    rcx,rsp
   14002ff4b:	call   0x1400097d0
   14002ff50:	lea    r11,[rsp+0x60]
   14002ff55:	mov    rbx,QWORD PTR [r11+0x30]
   14002ff59:	mov    rsi,QWORD PTR [r11+0x40]
   14002ff5d:	mov    rdi,QWORD PTR [r11+0x48]
   14002ff61:	mov    rsp,r11
   14002ff64:	pop    r15
   14002ff66:	pop    r14
   14002ff68:	pop    r13
   14002ff6a:	pop    r12
   14002ff6c:	pop    rbp
   14002ff6d:	ret    
   14002ff6e:	int3   
   14002ff6f:	int3   
   14002ff70:	mov    QWORD PTR [rsp+0x8],rbx
   14002ff75:	mov    QWORD PTR [rsp+0x18],rbp
   14002ff7a:	push   rdi
   14002ff7b:	sub    rsp,0x20
   14002ff7f:	mov    rax,QWORD PTR [rip+0x152ea]        # 0x140045270
   14002ff86:	xor    rax,rsp
   14002ff89:	mov    QWORD PTR [rsp+0x10],rax
   14002ff8e:	movzx  r11d,WORD PTR [rcx+0xa]
   14002ff93:	movzx  r10d,WORD PTR [rcx]
   14002ff97:	mov    ebp,0x7fff
   14002ff9c:	lea    eax,[rbp+0x1]
   14002ff9f:	movzx  r9d,r11w
   14002ffa3:	xor    r8d,r8d
   14002ffa6:	shl    r10d,0x10
   14002ffaa:	and    r11w,ax
   14002ffae:	mov    eax,DWORD PTR [rcx+0x2]
   14002ffb1:	mov    rbx,rdx
   14002ffb4:	mov    edx,DWORD PTR [rcx+0x6]
   14002ffb7:	and    r9w,bp
   14002ffbb:	mov    DWORD PTR [rsp+0x8],r10d
   14002ffc0:	lea    edi,[r8+0x1]
   14002ffc4:	mov    DWORD PTR [rsp],edx
   14002ffc7:	test   r10d,r10d
   14002ffca:	jns    0x140030025
   14002ffcc:	test   r10d,0x7fffffff
   14002ffd3:	je     0x140030025
   14002ffd5:	lea    edx,[rax+0x1]
   14002ffd8:	mov    ecx,r8d
   14002ffdb:	cmp    edx,eax
   14002ffdd:	jb     0x14002ffe3
   14002ffdf:	cmp    edx,edi
   14002ffe1:	jae    0x14002ffe5
   14002ffe3:	mov    ecx,edi
   14002ffe5:	mov    DWORD PTR [rsp+0x4],edx
   14002ffe9:	mov    rdx,r8
   14002ffec:	test   ecx,ecx
   14002ffee:	je     0x14003001e
   14002fff0:	mov    eax,DWORD PTR [rsp+rdx*4]
   14002fff3:	mov    ecx,r8d
   14002fff6:	lea    r10d,[rax+0x1]
   14002fffa:	cmp    r10d,eax
   14002fffd:	jb     0x140030004
   14002ffff:	cmp    r10d,edi
   140030002:	jae    0x140030006
   140030004:	mov    ecx,edi
   140030006:	mov    DWORD PTR [rsp+rdx*4],r10d
   14003000a:	sub    rdx,rdi
   14003000d:	jns    0x14002ffec
   14003000f:	test   ecx,ecx
   140030011:	je     0x14003001e
   140030013:	mov    edx,0x80000000
   140030018:	add    r9w,di
   14003001c:	jmp    0x140030021
   14003001e:	mov    edx,DWORD PTR [rsp]
   140030021:	mov    eax,DWORD PTR [rsp+0x4]
   140030025:	cmp    r9w,bp
   140030029:	mov    DWORD PTR [rbx],eax
   14003002b:	mov    DWORD PTR [rbx+0x4],edx
   14003002e:	cmove  r8d,edi
   140030032:	or     r11w,r9w
   140030036:	mov    WORD PTR [rbx+0x8],r11w
   14003003b:	mov    eax,r8d
   14003003e:	mov    rcx,QWORD PTR [rsp+0x10]
   140030043:	xor    rcx,rsp
   140030046:	call   0x1400097d0
   14003004b:	mov    rbx,QWORD PTR [rsp+0x30]
   140030050:	mov    rbp,QWORD PTR [rsp+0x40]
   140030055:	add    rsp,0x20
   140030059:	pop    rdi
   14003005a:	ret    
   14003005b:	int3   
   14003005c:	mov    QWORD PTR [rsp+0x20],rbx
   140030061:	push   rdi
   140030062:	sub    rsp,0x60
   140030066:	mov    rax,QWORD PTR [rip+0x15203]        # 0x140045270
   14003006d:	xor    rax,rsp
   140030070:	mov    QWORD PTR [rsp+0x50],rax
   140030075:	mov    rax,QWORD PTR [rsp+0x90]
   14003007d:	mov    rbx,rcx
   140030080:	lea    rcx,[rsp+0x40]
   140030085:	mov    QWORD PTR [rsp+0x38],rax
   14003008a:	xor    eax,eax
   14003008c:	mov    DWORD PTR [rsp+0x30],eax
   140030090:	mov    DWORD PTR [rsp+0x28],eax
   140030094:	mov    DWORD PTR [rsp+0x20],eax
   140030098:	call   0x140030810
   14003009d:	lea    rcx,[rsp+0x40]
   1400300a2:	mov    rdx,rbx
   1400300a5:	mov    edi,eax
   1400300a7:	call   0x14002ff70
   1400300ac:	cmp    eax,0x1
   1400300af:	jne    0x1400300b4
   1400300b1:	or     edi,0x2
   1400300b4:	mov    eax,edi
   1400300b6:	mov    rcx,QWORD PTR [rsp+0x50]
   1400300bb:	xor    rcx,rsp
   1400300be:	call   0x1400097d0
   1400300c3:	mov    rbx,QWORD PTR [rsp+0x88]
   1400300cb:	add    rsp,0x60
   1400300cf:	pop    rdi
   1400300d0:	ret    
   1400300d1:	int3   
   1400300d2:	int3   
   1400300d3:	int3   
   1400300d4:	mov    QWORD PTR [rsp+0x10],rbx
   1400300d9:	mov    QWORD PTR [rsp+0x18],rsi
   1400300de:	mov    QWORD PTR [rsp+0x20],rdi
   1400300e3:	push   rbp
   1400300e4:	push   r12
   1400300e6:	push   r13
   1400300e8:	push   r14
   1400300ea:	push   r15
   1400300ec:	mov    rbp,rsp
   1400300ef:	sub    rsp,0x30
   1400300f3:	mov    rax,QWORD PTR [rip+0x15176]        # 0x140045270
   1400300fa:	xor    rax,rsp
   1400300fd:	mov    QWORD PTR [rbp-0x10],rax
   140030101:	movzx  eax,WORD PTR [rdx+0xa]
   140030105:	xor    r12d,r12d
   140030108:	mov    r8,rcx
   14003010b:	mov    QWORD PTR [rbp-0x28],rcx
   14003010f:	movzx  ecx,WORD PTR [rcx+0xa]
   140030113:	movzx  esi,ax
   140030116:	xor    si,cx
   140030119:	mov    rdi,rdx
   14003011c:	mov    edx,0x8000
   140030121:	and    si,dx
   140030124:	mov    edx,0x7fff
   140030129:	mov    DWORD PTR [rbp-0x2c],r12d
   14003012d:	and    cx,dx
   140030130:	and    ax,dx
   140030133:	mov    QWORD PTR [rbp-0x20],r12
   140030137:	lea    r9d,[rcx+rax*1]
   14003013b:	mov    DWORD PTR [rbp-0x18],r12d
   14003013f:	mov    WORD PTR [rbp-0x2e],si
   140030143:	mov    WORD PTR [rbp-0x30],r9w
   140030148:	cmp    cx,dx
   14003014b:	jae    0x1400303c0
   140030151:	cmp    ax,dx
   140030154:	jae    0x1400303c0
   14003015a:	mov    edx,0xbffd
   14003015f:	cmp    r9w,dx
   140030163:	ja     0x1400303c0
   140030169:	mov    edx,0x3fbf
   14003016e:	cmp    r9w,dx
   140030172:	ja     0x140030180
   140030174:	mov    QWORD PTR [r8+0x4],r12
   140030178:	mov    DWORD PTR [r8],r12d
   14003017b:	jmp    0x1400303d8
   140030180:	mov    edx,0x7fffffff
   140030185:	mov    r14d,0x1
   14003018b:	test   cx,cx
   14003018e:	jne    0x1400301b4
   140030190:	add    r9w,r14w
   140030194:	mov    WORD PTR [rbp-0x30],r9w
   140030199:	test   DWORD PTR [r8+0x8],edx
   14003019d:	jne    0x1400301b4
   14003019f:	cmp    DWORD PTR [r8+0x4],r12d
   1400301a3:	jne    0x1400301b4
   1400301a5:	cmp    DWORD PTR [r8],r12d
   1400301a8:	jne    0x1400301b4
   1400301aa:	mov    WORD PTR [r8+0xa],r12w
   1400301af:	jmp    0x1400303d8
   1400301b4:	test   ax,ax
   1400301b7:	jne    0x1400301d2
   1400301b9:	add    r9w,r14w
   1400301bd:	mov    WORD PTR [rbp-0x30],r9w
   1400301c2:	test   DWORD PTR [rdi+0x8],edx
   1400301c5:	jne    0x1400301d2
   1400301c7:	cmp    DWORD PTR [rdi+0x4],r12d
   1400301cb:	jne    0x1400301d2
   1400301cd:	cmp    DWORD PTR [rdi],r12d
   1400301d0:	je     0x140030174
   1400301d2:	mov    r10d,0x5
   1400301d8:	mov    r14d,r12d
   1400301db:	lea    rdx,[rbp-0x20]
   1400301df:	lea    r9d,[r10-0x4]
   1400301e3:	mov    r15d,r10d
   1400301e6:	test   r10d,r10d
   1400301e9:	jle    0x14003023e
   1400301eb:	lea    eax,[r14+r14*1]
   1400301ef:	mov    esi,r14d
   1400301f2:	lea    r12,[rdi+0x8]
   1400301f6:	movsxd r13,eax
   1400301f9:	and    esi,r9d
   1400301fc:	add    r13,r8
   1400301ff:	movzx  eax,WORD PTR [r13+0x0]
   140030204:	movzx  ecx,WORD PTR [r12]
   140030209:	xor    r11d,r11d
   14003020c:	imul   ecx,eax
   14003020f:	mov    eax,DWORD PTR [rdx]
   140030211:	lea    ebx,[rax+rcx*1]
   140030214:	cmp    ebx,eax
   140030216:	jb     0x14003021c
   140030218:	cmp    ebx,ecx
   14003021a:	jae    0x14003021f
   14003021c:	mov    r11d,r9d
   14003021f:	mov    DWORD PTR [rdx],ebx
   140030221:	test   r11d,r11d
   140030224:	je     0x14003022b
   140030226:	add    WORD PTR [rdx+0x4],r9w
   14003022b:	sub    r15d,r9d
   14003022e:	add    r13,0x2
   140030232:	sub    r12,0x2
   140030236:	test   r15d,r15d
   140030239:	jg     0x1400301ff
   14003023b:	xor    r12d,r12d
   14003023e:	sub    r10d,r9d
   140030241:	add    rdx,0x2
   140030245:	add    r14d,r9d
   140030248:	test   r10d,r10d
   14003024b:	jg     0x1400301e3
   14003024d:	movzx  r9d,WORD PTR [rbp-0x30]
   140030252:	mov    r10d,DWORD PTR [rbp-0x18]
   140030256:	mov    r11d,DWORD PTR [rbp-0x20]
   14003025a:	mov    eax,0xc002
   14003025f:	mov    ebx,0x80000000
   140030264:	mov    r15d,0xffff
   14003026a:	add    r9w,ax
   14003026e:	test   r9w,r9w
   140030272:	jle    0x1400302b0
   140030274:	test   ebx,r10d
   140030277:	jne    0x1400302aa
   140030279:	mov    edi,DWORD PTR [rbp-0x1c]
   14003027c:	mov    edx,r11d
   14003027f:	add    r10d,r10d
   140030282:	shr    edx,0x1f
   140030285:	add    r11d,r11d
   140030288:	mov    ecx,edi
   14003028a:	shr    ecx,0x1f
   14003028d:	lea    eax,[rdi+rdi*1]
   140030290:	add    r9w,r15w
   140030294:	or     eax,edx
   140030296:	or     r10d,ecx
   140030299:	mov    DWORD PTR [rbp-0x20],r11d
   14003029d:	mov    DWORD PTR [rbp-0x1c],eax
   1400302a0:	mov    DWORD PTR [rbp-0x18],r10d
   1400302a4:	test   r9w,r9w
   1400302a8:	jg     0x140030274
   1400302aa:	test   r9w,r9w
   1400302ae:	jg     0x14003031d
   1400302b0:	add    r9w,r15w
   1400302b4:	mov    r14d,0x1
   1400302ba:	jns    0x140030323
   1400302bc:	mov    r8d,DWORD PTR [rbp-0x2c]
   1400302c0:	movzx  eax,r9w
   1400302c4:	neg    ax
   1400302c7:	movzx  edx,ax
   1400302ca:	add    r9w,dx
   1400302ce:	test   BYTE PTR [rbp-0x20],r14b
   1400302d2:	je     0x1400302d7
   1400302d4:	add    r8d,r14d
   1400302d7:	mov    edi,DWORD PTR [rbp-0x1c]
   1400302da:	mov    eax,r10d
   1400302dd:	shr    r11d,1
   1400302e0:	mov    ecx,edi
   1400302e2:	shl    eax,0x1f
   1400302e5:	shr    edi,1
   1400302e7:	shl    ecx,0x1f
   1400302ea:	or     edi,eax
   1400302ec:	shr    r10d,1
   1400302ef:	or     r11d,ecx
   1400302f2:	mov    DWORD PTR [rbp-0x1c],edi
   1400302f5:	mov    DWORD PTR [rbp-0x20],r11d
   1400302f9:	sub    rdx,r14
   1400302fc:	jne    0x1400302ce
   1400302fe:	test   r8d,r8d
   140030301:	mov    r8,QWORD PTR [rbp-0x28]
   140030305:	mov    DWORD PTR [rbp-0x18],r10d
   140030309:	je     0x140030323
   14003030b:	movzx  eax,r11w
   14003030f:	or     ax,r14w
   140030313:	mov    WORD PTR [rbp-0x20],ax
   140030317:	mov    r11d,DWORD PTR [rbp-0x20]
   14003031b:	jmp    0x140030327
   14003031d:	mov    r14d,0x1
   140030323:	movzx  eax,WORD PTR [rbp-0x20]
   140030327:	movzx  esi,WORD PTR [rbp-0x2e]
   14003032b:	mov    edx,0x8000
   140030330:	cmp    ax,dx
   140030333:	ja     0x140030345
   140030335:	and    r11d,0x1ffff
   14003033c:	cmp    r11d,0x18000
   140030343:	jne    0x14003038e
   140030345:	mov    eax,DWORD PTR [rbp-0x1e]
   140030348:	or     ecx,0xffffffff
   14003034b:	cmp    eax,ecx
   14003034d:	jne    0x140030388
   14003034f:	mov    eax,DWORD PTR [rbp-0x1a]
   140030352:	mov    DWORD PTR [rbp-0x1e],r12d
   140030356:	cmp    eax,ecx
   140030358:	jne    0x14003037c
   14003035a:	movzx  eax,WORD PTR [rbp-0x16]
   14003035e:	mov    DWORD PTR [rbp-0x1a],r12d
   140030362:	cmp    ax,r15w
   140030366:	jne    0x140030372
   140030368:	mov    WORD PTR [rbp-0x16],dx
   14003036c:	add    r9w,r14w
   140030370:	jmp    0x140030382
   140030372:	add    ax,r14w
   140030376:	mov    WORD PTR [rbp-0x16],ax
   14003037a:	jmp    0x140030382
   14003037c:	add    eax,r14d
   14003037f:	mov    DWORD PTR [rbp-0x1a],eax
   140030382:	mov    r10d,DWORD PTR [rbp-0x18]
   140030386:	jmp    0x14003038e
   140030388:	add    eax,r14d
   14003038b:	mov    DWORD PTR [rbp-0x1e],eax
   14003038e:	mov    eax,0x7fff
   140030393:	cmp    r9w,ax
   140030397:	jb     0x1400303a2
   140030399:	mov    QWORD PTR [r8],0x0
   1400303a0:	jmp    0x1400303c8
   1400303a2:	movzx  eax,WORD PTR [rbp-0x1e]
   1400303a6:	or     r9w,si
   1400303aa:	mov    DWORD PTR [r8+0x6],r10d
   1400303ae:	mov    WORD PTR [r8],ax
   1400303b2:	mov    eax,DWORD PTR [rbp-0x1c]
   1400303b5:	mov    WORD PTR [r8+0xa],r9w
   1400303ba:	mov    DWORD PTR [r8+0x2],eax
   1400303be:	jmp    0x1400303d8
   1400303c0:	mov    ebx,0x80000000
   1400303c5:	mov    QWORD PTR [r8],r12
   1400303c8:	neg    si
   1400303cb:	sbb    eax,eax
   1400303cd:	and    eax,ebx
   1400303cf:	add    eax,0x7fff8000
   1400303d4:	mov    DWORD PTR [r8+0x8],eax
   1400303d8:	mov    rcx,QWORD PTR [rbp-0x10]
   1400303dc:	xor    rcx,rsp
   1400303df:	call   0x1400097d0
   1400303e4:	mov    rbx,QWORD PTR [rsp+0x68]
   1400303e9:	mov    rsi,QWORD PTR [rsp+0x70]
   1400303ee:	mov    rdi,QWORD PTR [rsp+0x78]
   1400303f3:	add    rsp,0x30
   1400303f7:	pop    r15
   1400303f9:	pop    r14
   1400303fb:	pop    r13
   1400303fd:	pop    r12
   1400303ff:	pop    rbp
   140030400:	ret    
   140030401:	int3   
   140030402:	int3   
   140030403:	int3   
   140030404:	test   edx,edx
   140030406:	je     0x1400307b7
   14003040c:	mov    QWORD PTR [rsp+0x10],rbx
   140030411:	mov    QWORD PTR [rsp+0x18],rsi
   140030416:	mov    QWORD PTR [rsp+0x20],rdi
   14003041b:	push   rbp
   14003041c:	push   r12
   14003041e:	push   r13
   140030420:	push   r14
   140030422:	push   r15
   140030424:	mov    rbp,rsp
   140030427:	sub    rsp,0x50
   14003042b:	mov    rax,QWORD PTR [rip+0x14e3e]        # 0x140045270
   140030432:	xor    rax,rsp
   140030435:	mov    QWORD PTR [rbp-0x8],rax
   140030439:	lea    r14,[rip+0x16250]        # 0x140046690
   140030440:	xor    edi,edi
   140030442:	mov    ebx,edx
   140030444:	sub    r14,0x60
   140030448:	mov    r9,rcx
   14003044b:	mov    QWORD PTR [rbp-0x40],rcx
   14003044f:	test   edx,edx
   140030451:	jns    0x140030460
   140030453:	lea    r14,[rip+0x16396]        # 0x1400467f0
   14003045a:	neg    ebx
   14003045c:	sub    r14,0x60
   140030460:	test   r8d,r8d
   140030463:	jne    0x140030468
   140030465:	mov    WORD PTR [rcx],di
   140030468:	test   ebx,ebx
   14003046a:	je     0x14003078e
   140030470:	mov    r15d,0x8000
   140030476:	mov    esi,0x1
   14003047b:	lea    r11d,[r15-0x1]
   14003047f:	mov    eax,ebx
   140030481:	add    r14,0x54
   140030485:	sar    ebx,0x3
   140030488:	mov    DWORD PTR [rbp-0x48],ebx
   14003048b:	mov    QWORD PTR [rbp-0x38],r14
   14003048f:	and    eax,0x7
   140030492:	je     0x140030786
   140030498:	cdqe   
   14003049a:	lea    rcx,[rax+rax*2]
   14003049e:	lea    rdx,[r14+rcx*4]
   1400304a2:	cmp    WORD PTR [rdx],r15w
   1400304a6:	jb     0x1400304c8
   1400304a8:	mov    eax,DWORD PTR [rdx+0x8]
   1400304ab:	movsd  xmm0,QWORD PTR [rdx]
   1400304af:	lea    rdx,[rbp-0x18]
   1400304b3:	mov    DWORD PTR [rbp-0x10],eax
   1400304b6:	movsd  QWORD PTR [rbp-0x18],xmm0
   1400304bb:	mov    rax,QWORD PTR [rbp-0x18]
   1400304bf:	shr    rax,0x10
   1400304c3:	sub    eax,esi
   1400304c5:	mov    DWORD PTR [rbp-0x16],eax
   1400304c8:	movzx  ecx,WORD PTR [rdx+0xa]
   1400304cc:	movzx  eax,WORD PTR [r9+0xa]
   1400304d1:	mov    DWORD PTR [rbp-0x4c],edi
   1400304d4:	movzx  r10d,cx
   1400304d8:	and    cx,r11w
   1400304dc:	mov    QWORD PTR [rbp-0x28],0x0
   1400304e4:	xor    r10w,ax
   1400304e8:	and    ax,r11w
   1400304ec:	mov    DWORD PTR [rbp-0x20],edi
   1400304ef:	and    r10w,r15w
   1400304f3:	lea    r8d,[rax+rcx*1]
   1400304f7:	mov    WORD PTR [rbp-0x50],r10w
   1400304fc:	cmp    ax,r11w
   140030500:	jae    0x14003076b
   140030506:	cmp    cx,r11w
   14003050a:	jae    0x14003076b
   140030510:	mov    r11d,0xbffd
   140030516:	cmp    r8w,r11w
   14003051a:	ja     0x140030765
   140030520:	mov    r10d,0x3fbf
   140030526:	cmp    r8w,r10w
   14003052a:	ja     0x140030542
   14003052c:	mov    QWORD PTR [r9+0x4],0x0
   140030534:	mov    DWORD PTR [r9],edi
   140030537:	mov    r11d,0x7fff
   14003053d:	jmp    0x140030786
   140030542:	test   ax,ax
   140030545:	jne    0x140030567
   140030547:	add    r8w,si
   14003054b:	test   DWORD PTR [r9+0x8],0x7fffffff
   140030553:	jne    0x140030567
   140030555:	cmp    DWORD PTR [r9+0x4],edi
   140030559:	jne    0x140030567
   14003055b:	cmp    DWORD PTR [r9],edi
   14003055e:	jne    0x140030567
   140030560:	mov    WORD PTR [r9+0xa],di
   140030565:	jmp    0x140030537
   140030567:	test   cx,cx
   14003056a:	jne    0x140030582
   14003056c:	add    r8w,si
   140030570:	test   DWORD PTR [rdx+0x8],0x7fffffff
   140030577:	jne    0x140030582
   140030579:	cmp    DWORD PTR [rdx+0x4],edi
   14003057c:	jne    0x140030582
   14003057e:	cmp    DWORD PTR [rdx],edi
   140030580:	je     0x14003052c
   140030582:	xor    r14d,r14d
   140030585:	lea    r10,[rbp-0x28]
   140030589:	lea    r11d,[r14+0x5]
   14003058d:	mov    r15d,r14d
   140030590:	mov    r12d,r11d
   140030593:	test   r11d,r11d
   140030596:	jle    0x1400305f4
   140030598:	lea    eax,[r15+r15*1]
   14003059c:	mov    ebx,r15d
   14003059f:	lea    r13,[rdx+0x8]
   1400305a3:	cdqe   
   1400305a5:	and    ebx,esi
   1400305a7:	add    rax,r9
   1400305aa:	mov    r9,rax
   1400305ad:	movzx  eax,WORD PTR [r13+0x0]
   1400305b2:	movzx  ecx,WORD PTR [r9]
   1400305b6:	mov    esi,r14d
   1400305b9:	imul   ecx,eax
   1400305bc:	mov    eax,DWORD PTR [r10]
   1400305bf:	lea    edi,[rax+rcx*1]
   1400305c2:	cmp    edi,eax
   1400305c4:	jb     0x1400305ca
   1400305c6:	cmp    edi,ecx
   1400305c8:	jae    0x1400305cf
   1400305ca:	mov    esi,0x1
   1400305cf:	test   esi,esi
   1400305d1:	mov    DWORD PTR [r10],edi
   1400305d4:	mov    esi,0x1
   1400305d9:	je     0x1400305e0
   1400305db:	add    WORD PTR [r10+0x4],si
   1400305e0:	sub    r12d,esi
   1400305e3:	add    r9,0x2
   1400305e7:	sub    r13,0x2
   1400305eb:	test   r12d,r12d
   1400305ee:	jg     0x1400305ad
   1400305f0:	mov    r9,QWORD PTR [rbp-0x40]
   1400305f4:	sub    r11d,esi
   1400305f7:	add    r10,0x2
   1400305fb:	add    r15d,esi
   1400305fe:	test   r11d,r11d
   140030601:	jg     0x140030590
   140030603:	mov    r10d,DWORD PTR [rbp-0x20]
   140030607:	mov    r11d,DWORD PTR [rbp-0x28]
   14003060b:	mov    eax,0xc002
   140030610:	add    r8w,ax
   140030614:	mov    r12d,0xffff
   14003061a:	test   r8w,r8w
   14003061e:	jle    0x14003065c
   140030620:	test   r10d,r10d
   140030623:	js     0x140030656
   140030625:	mov    edi,DWORD PTR [rbp-0x24]
   140030628:	mov    edx,r11d
   14003062b:	add    r10d,r10d
   14003062e:	shr    edx,0x1f
   140030631:	add    r11d,r11d
   140030634:	mov    ecx,edi
   140030636:	shr    ecx,0x1f
   140030639:	lea    eax,[rdi+rdi*1]
   14003063c:	add    r8w,r12w
   140030640:	or     eax,edx
   140030642:	or     r10d,ecx
   140030645:	mov    DWORD PTR [rbp-0x28],r11d
   140030649:	mov    DWORD PTR [rbp-0x24],eax
   14003064c:	mov    DWORD PTR [rbp-0x20],r10d
   140030650:	test   r8w,r8w
   140030654:	jg     0x140030620
   140030656:	test   r8w,r8w
   14003065a:	jg     0x1400306c2
   14003065c:	add    r8w,r12w
   140030660:	jns    0x1400306c2
   140030662:	mov    r9d,DWORD PTR [rbp-0x4c]
   140030666:	movzx  eax,r8w
   14003066a:	neg    ax
   14003066d:	movzx  edx,ax
   140030670:	add    r8w,dx
   140030674:	test   BYTE PTR [rbp-0x28],sil
   140030678:	je     0x14003067d
   14003067a:	add    r9d,esi
   14003067d:	mov    edi,DWORD PTR [rbp-0x24]
   140030680:	mov    eax,r10d
   140030683:	shr    r11d,1
   140030686:	mov    ecx,edi
   140030688:	shl    eax,0x1f
   14003068b:	shr    edi,1
   14003068d:	shl    ecx,0x1f
   140030690:	or     edi,eax
   140030692:	shr    r10d,1
   140030695:	or     r11d,ecx
   140030698:	mov    DWORD PTR [rbp-0x24],edi
   14003069b:	mov    DWORD PTR [rbp-0x28],r11d
   14003069f:	sub    rdx,rsi
   1400306a2:	jne    0x140030674
   1400306a4:	test   r9d,r9d
   1400306a7:	mov    r9,QWORD PTR [rbp-0x40]
   1400306ab:	mov    DWORD PTR [rbp-0x20],r10d
   1400306af:	je     0x1400306c2
   1400306b1:	movzx  eax,r11w
   1400306b5:	or     ax,si
   1400306b8:	mov    WORD PTR [rbp-0x28],ax
   1400306bc:	mov    r11d,DWORD PTR [rbp-0x28]
   1400306c0:	jmp    0x1400306c6
   1400306c2:	movzx  eax,WORD PTR [rbp-0x28]
   1400306c6:	mov    ebx,DWORD PTR [rbp-0x48]
   1400306c9:	mov    r14,QWORD PTR [rbp-0x38]
   1400306cd:	mov    r15d,0x8000
   1400306d3:	cmp    ax,r15w
   1400306d7:	ja     0x1400306e9
   1400306d9:	and    r11d,0x1ffff
   1400306e0:	cmp    r11d,0x18000
   1400306e7:	jne    0x14003072f
   1400306e9:	mov    eax,DWORD PTR [rbp-0x26]
   1400306ec:	cmp    eax,0xffffffff
   1400306ef:	jne    0x14003072a
   1400306f1:	mov    eax,DWORD PTR [rbp-0x22]
   1400306f4:	xor    edi,edi
   1400306f6:	mov    DWORD PTR [rbp-0x26],edi
   1400306f9:	cmp    eax,0xffffffff
   1400306fc:	jne    0x14003071f
   1400306fe:	movzx  eax,WORD PTR [rbp-0x1e]
   140030702:	mov    DWORD PTR [rbp-0x22],edi
   140030705:	cmp    ax,r12w
   140030709:	jne    0x140030716
   14003070b:	mov    WORD PTR [rbp-0x1e],r15w
   140030710:	add    r8w,si
   140030714:	jmp    0x140030724
   140030716:	add    ax,si
   140030719:	mov    WORD PTR [rbp-0x1e],ax
   14003071d:	jmp    0x140030724
   14003071f:	add    eax,esi
   140030721:	mov    DWORD PTR [rbp-0x22],eax
   140030724:	mov    r10d,DWORD PTR [rbp-0x20]
   140030728:	jmp    0x140030731
   14003072a:	add    eax,esi
   14003072c:	mov    DWORD PTR [rbp-0x26],eax
   14003072f:	xor    edi,edi
   140030731:	mov    r11d,0x7fff
   140030737:	cmp    r8w,r11w
   14003073b:	jb     0x140030746
   14003073d:	movzx  eax,WORD PTR [rbp-0x50]
   140030741:	neg    ax
   140030744:	jmp    0x14003076f
   140030746:	movzx  eax,WORD PTR [rbp-0x26]
   14003074a:	or     r8w,WORD PTR [rbp-0x50]
   14003074f:	mov    DWORD PTR [r9+0x6],r10d
   140030753:	mov    WORD PTR [r9],ax
   140030757:	mov    eax,DWORD PTR [rbp-0x24]
   14003075a:	mov    WORD PTR [r9+0xa],r8w
   14003075f:	mov    DWORD PTR [r9+0x2],eax
   140030763:	jmp    0x140030786
   140030765:	mov    r11d,0x7fff
   14003076b:	neg    r10w
   14003076f:	sbb    eax,eax
   140030771:	mov    QWORD PTR [r9],0x0
   140030778:	and    eax,0x80000000
   14003077d:	add    eax,0x7fff8000
   140030782:	mov    DWORD PTR [r9+0x8],eax
   140030786:	test   ebx,ebx
   140030788:	jne    0x14003047f
   14003078e:	mov    rcx,QWORD PTR [rbp-0x8]
   140030792:	xor    rcx,rsp
   140030795:	call   0x1400097d0
   14003079a:	lea    r11,[rsp+0x50]
   14003079f:	mov    rbx,QWORD PTR [r11+0x38]
   1400307a3:	mov    rsi,QWORD PTR [r11+0x40]
   1400307a7:	mov    rdi,QWORD PTR [r11+0x48]
   1400307ab:	mov    rsp,r11
   1400307ae:	pop    r15
   1400307b0:	pop    r14
   1400307b2:	pop    r13
   1400307b4:	pop    r12
   1400307b6:	pop    rbp
   1400307b7:	ret    
   1400307b8:	mov    eax,DWORD PTR [rcx]
   1400307ba:	mov    edx,DWORD PTR [rcx+0x4]
   1400307bd:	mov    r8d,eax
   1400307c0:	add    eax,eax
   1400307c2:	mov    r9d,edx
   1400307c5:	mov    DWORD PTR [rcx],eax
   1400307c7:	lea    eax,[rdx+rdx*1]
   1400307ca:	shr    r8d,0x1f
   1400307ce:	or     eax,r8d
   1400307d1:	shr    r9d,0x1f
   1400307d5:	mov    DWORD PTR [rcx+0x4],eax
   1400307d8:	mov    eax,DWORD PTR [rcx+0x8]
   1400307db:	add    eax,eax
   1400307dd:	or     eax,r9d
   1400307e0:	mov    DWORD PTR [rcx+0x8],eax
   1400307e3:	ret    
   1400307e4:	mov    eax,DWORD PTR [rcx+0x8]
   1400307e7:	mov    edx,DWORD PTR [rcx+0x4]
   1400307ea:	mov    r8d,eax
   1400307ed:	shr    eax,1
   1400307ef:	mov    r9d,edx
   1400307f2:	mov    DWORD PTR [rcx+0x8],eax
   1400307f5:	mov    eax,DWORD PTR [rcx]
   1400307f7:	shl    r8d,0x1f
   1400307fb:	shl    r9d,0x1f
   1400307ff:	shr    edx,1
   140030801:	shr    eax,1
   140030803:	or     eax,r9d
   140030806:	or     edx,r8d
   140030809:	mov    DWORD PTR [rcx],eax
   14003080b:	mov    DWORD PTR [rcx+0x4],edx
   14003080e:	ret    
   14003080f:	int3   
   140030810:	mov    QWORD PTR [rsp+0x18],rbx
   140030815:	push   rbp
   140030816:	push   rsi
   140030817:	push   rdi
   140030818:	push   r12
   14003081a:	push   r13
   14003081c:	push   r14
   14003081e:	push   r15
   140030820:	lea    rbp,[rsp-0x7]
   140030825:	sub    rsp,0xa0
   14003082c:	mov    rax,QWORD PTR [rip+0x14a3d]        # 0x140045270
   140030833:	xor    rax,rsp
   140030836:	mov    QWORD PTR [rbp-0x1],rax
   14003083a:	mov    r14,QWORD PTR [rbp+0x7f]
   14003083e:	xor    ebx,ebx
   140030840:	mov    DWORD PTR [rbp-0x6d],r9d
   140030844:	lea    r9d,[rbx+0x1]
   140030848:	mov    QWORD PTR [rbp-0x59],rcx
   14003084c:	mov    QWORD PTR [rbp-0x69],rdx
   140030850:	lea    r10,[rbp-0x21]
   140030854:	mov    WORD PTR [rbp-0x71],bx
   140030858:	mov    r11d,ebx
   14003085b:	mov    DWORD PTR [rbp-0x75],r9d
   14003085f:	mov    r15d,ebx
   140030862:	mov    DWORD PTR [rbp-0x79],ebx
   140030865:	mov    r12d,ebx
   140030868:	mov    r13d,ebx
   14003086b:	mov    esi,ebx
   14003086d:	mov    ecx,ebx
   14003086f:	test   r14,r14
   140030872:	jne    0x14003088b
   140030874:	call   0x14000b9f0
   140030879:	mov    DWORD PTR [rax],0x16
   14003087f:	call   0x14000b8b8
   140030884:	xor    eax,eax
   140030886:	jmp    0x14003104a
   14003088b:	mov    rdi,r8
   14003088e:	cmp    BYTE PTR [r8],0x20
   140030892:	ja     0x1400308ad
   140030894:	movsx  rax,BYTE PTR [r8]
   140030898:	movabs rdx,0x100002600
   1400308a2:	bt     rdx,rax
   1400308a6:	jae    0x1400308ad
   1400308a8:	add    r8,r9
   1400308ab:	jmp    0x14003088e
   1400308ad:	mov    dl,BYTE PTR [r8]
   1400308b0:	add    r8,r9
   1400308b3:	cmp    ecx,0x5
   1400308b6:	jg     0x140030ac6
   1400308bc:	je     0x140030aac
   1400308c2:	mov    r9d,ecx
   1400308c5:	test   ecx,ecx
   1400308c7:	je     0x140030a50
   1400308cd:	dec    r9d
   1400308d0:	je     0x140030a10
   1400308d6:	dec    r9d
   1400308d9:	je     0x1400309be
   1400308df:	dec    r9d
   1400308e2:	je     0x140030971
   1400308e8:	dec    r9d
   1400308eb:	jne    0x140030b8b
   1400308f1:	mov    r9d,0x1
   1400308f7:	mov    al,0x30
   1400308f9:	mov    r15d,r9d
   1400308fc:	mov    DWORD PTR [rbp-0x79],r9d
   140030900:	test   r11d,r11d
   140030903:	jne    0x140030935
   140030905:	jmp    0x140030910
   140030907:	mov    dl,BYTE PTR [r8]
   14003090a:	sub    esi,r9d
   14003090d:	add    r8,r9
   140030910:	cmp    dl,al
   140030912:	je     0x140030907
   140030914:	jmp    0x140030935
   140030916:	cmp    dl,0x39
   140030919:	jg     0x140030939
   14003091b:	cmp    r11d,0x19
   14003091f:	jae    0x14003092f
   140030921:	sub    dl,al
   140030923:	add    r11d,r9d
   140030926:	mov    BYTE PTR [r10],dl
   140030929:	add    r10,r9
   14003092c:	sub    esi,r9d
   14003092f:	mov    dl,BYTE PTR [r8]
   140030932:	add    r8,r9
   140030935:	cmp    dl,al
   140030937:	jge    0x140030916
   140030939:	lea    eax,[rdx-0x2b]
   14003093c:	test   al,0xfd
   14003093e:	je     0x140030964
   140030940:	cmp    dl,0x43
   140030943:	jle    0x140030a85
   140030949:	cmp    dl,0x45
   14003094c:	jle    0x14003095a
   14003094e:	sub    dl,0x64
   140030951:	cmp    dl,r9b
   140030954:	ja     0x140030a85
   14003095a:	mov    ecx,0x6
   14003095f:	jmp    0x1400308ad
   140030964:	sub    r8,r9
   140030967:	mov    ecx,0xb
   14003096c:	jmp    0x1400308ad
   140030971:	mov    r9d,0x1
   140030977:	mov    al,0x30
   140030979:	mov    r15d,r9d
   14003097c:	jmp    0x14003099f
   14003097e:	cmp    dl,0x39
   140030981:	jg     0x1400309a3
   140030983:	cmp    r11d,0x19
   140030987:	jae    0x140030996
   140030989:	sub    dl,al
   14003098b:	add    r11d,r9d
   14003098e:	mov    BYTE PTR [r10],dl
   140030991:	add    r10,r9
   140030994:	jmp    0x140030999
   140030996:	add    esi,r9d
   140030999:	mov    dl,BYTE PTR [r8]
   14003099c:	add    r8,r9
   14003099f:	cmp    dl,al
   1400309a1:	jge    0x14003097e
   1400309a3:	mov    rax,QWORD PTR [r14]
   1400309a6:	mov    rcx,QWORD PTR [rax+0xf0]
   1400309ad:	mov    rax,QWORD PTR [rcx]
   1400309b0:	cmp    dl,BYTE PTR [rax]
   1400309b2:	jne    0x140030939
   1400309b4:	mov    ecx,0x4
   1400309b9:	jmp    0x1400308ad
   1400309be:	lea    eax,[rdx-0x31]
   1400309c1:	cmp    al,0x8
   1400309c3:	ja     0x1400309d8
   1400309c5:	mov    ecx,0x3
   1400309ca:	mov    r9d,0x1
   1400309d0:	sub    r8,r9
   1400309d3:	jmp    0x1400308ad
   1400309d8:	mov    rax,QWORD PTR [r14]
   1400309db:	mov    rcx,QWORD PTR [rax+0xf0]
   1400309e2:	mov    rax,QWORD PTR [rcx]
   1400309e5:	cmp    dl,BYTE PTR [rax]
   1400309e7:	jne    0x1400309f9
   1400309e9:	mov    ecx,0x5
   1400309ee:	mov    r9d,0x1
   1400309f4:	jmp    0x1400308ad
   1400309f9:	cmp    dl,0x30
   1400309fc:	jne    0x140030bf4
   140030a02:	mov    r9d,0x1
   140030a08:	mov    ecx,r9d
   140030a0b:	jmp    0x1400308ad
   140030a10:	lea    eax,[rdx-0x31]
   140030a13:	mov    r9d,0x1
   140030a19:	mov    r15d,r9d
   140030a1c:	cmp    al,0x8
   140030a1e:	ja     0x140030a26
   140030a20:	lea    ecx,[r9+0x2]
   140030a24:	jmp    0x1400309d0
   140030a26:	mov    rax,QWORD PTR [r14]
   140030a29:	mov    rcx,QWORD PTR [rax+0xf0]
   140030a30:	mov    rax,QWORD PTR [rcx]
   140030a33:	cmp    dl,BYTE PTR [rax]
   140030a35:	je     0x1400309b4
   140030a3b:	lea    eax,[rdx-0x2b]
   140030a3e:	test   al,0xfd
   140030a40:	je     0x140030964
   140030a46:	cmp    dl,0x30
   140030a49:	je     0x140030a08
   140030a4b:	jmp    0x140030940
   140030a50:	lea    eax,[rdx-0x31]
   140030a53:	cmp    al,0x8
   140030a55:	jbe    0x1400309c5
   140030a5b:	mov    rax,QWORD PTR [r14]
   140030a5e:	mov    rcx,QWORD PTR [rax+0xf0]
   140030a65:	mov    rax,QWORD PTR [rcx]
   140030a68:	cmp    dl,BYTE PTR [rax]
   140030a6a:	je     0x1400309e9
   140030a70:	cmp    dl,0x2b
   140030a73:	je     0x140030a9e
   140030a75:	cmp    dl,0x2d
   140030a78:	je     0x140030a8d
   140030a7a:	cmp    dl,0x30
   140030a7d:	je     0x140030a02
   140030a7f:	mov    r9d,0x1
   140030a85:	sub    r8,r9
   140030a88:	jmp    0x140030bfd
   140030a8d:	mov    ecx,0x2
   140030a92:	mov    DWORD PTR [rbp-0x71],0x8000
   140030a99:	jmp    0x1400309ee
   140030a9e:	mov    ecx,0x2
   140030aa3:	mov    WORD PTR [rbp-0x71],bx
   140030aa7:	jmp    0x1400309ee
   140030aac:	sub    dl,0x30
   140030aaf:	mov    DWORD PTR [rbp-0x79],r9d
   140030ab3:	cmp    dl,0x9
   140030ab6:	ja     0x140030b95
   140030abc:	mov    ecx,0x4
   140030ac1:	jmp    0x1400309d0
   140030ac6:	mov    r9d,ecx
   140030ac9:	sub    r9d,0x6
   140030acd:	je     0x140030b6f
   140030ad3:	dec    r9d
   140030ad6:	je     0x140030b4b
   140030ad8:	dec    r9d
   140030adb:	je     0x140030b1f
   140030add:	dec    r9d
   140030ae0:	je     0x140030b9a
   140030ae6:	cmp    r9d,0x2
   140030aea:	jne    0x140030b8b
   140030af0:	cmp    DWORD PTR [rbp+0x77],ebx
   140030af3:	je     0x140030a7f
   140030af5:	lea    rdi,[r8-0x1]
   140030af9:	cmp    dl,0x2b
   140030afc:	je     0x140030b15
   140030afe:	cmp    dl,0x2d
   140030b01:	jne    0x140030bf4
   140030b07:	or     DWORD PTR [rbp-0x75],0xffffffff
   140030b0b:	mov    ecx,0x7
   140030b10:	jmp    0x1400309ee
   140030b15:	mov    ecx,0x7
   140030b1a:	jmp    0x1400309ee
   140030b1f:	mov    r9d,0x1
   140030b25:	mov    r12d,r9d
   140030b28:	jmp    0x140030b30
   140030b2a:	mov    dl,BYTE PTR [r8]
   140030b2d:	add    r8,r9
   140030b30:	cmp    dl,0x30
   140030b33:	je     0x140030b2a
   140030b35:	sub    dl,0x31
   140030b38:	cmp    dl,0x8
   140030b3b:	ja     0x140030a85
   140030b41:	mov    ecx,0x9
   140030b46:	jmp    0x1400309d0
   140030b4b:	lea    eax,[rdx-0x31]
   140030b4e:	cmp    al,0x8
   140030b50:	ja     0x140030b5c
   140030b52:	mov    ecx,0x9
   140030b57:	jmp    0x1400309ca
   140030b5c:	cmp    dl,0x30
   140030b5f:	jne    0x140030bf4
   140030b65:	mov    ecx,0x8
   140030b6a:	jmp    0x1400309ee
   140030b6f:	lea    eax,[rdx-0x31]
   140030b72:	lea    rdi,[r8-0x2]
   140030b76:	cmp    al,0x8
   140030b78:	jbe    0x140030b52
   140030b7a:	cmp    dl,0x2b
   140030b7d:	je     0x140030b86
   140030b7f:	cmp    dl,0x2d
   140030b82:	je     0x140030b07
   140030b84:	jmp    0x140030b5c
   140030b86:	mov    ecx,0x7
   140030b8b:	cmp    ecx,0xa
   140030b8e:	je     0x140030bf7
   140030b90:	jmp    0x1400309ee
   140030b95:	mov    r8,rdi
   140030b98:	jmp    0x140030bfd
   140030b9a:	mov    r9d,0x1
   140030ba0:	mov    dil,0x30
   140030ba3:	mov    r12d,r9d
   140030ba6:	jmp    0x140030bcc
   140030ba8:	cmp    dl,0x39
   140030bab:	jg     0x140030bea
   140030bad:	lea    r13d,[r13+r13*4+0x0]
   140030bb2:	movsx  eax,dl
   140030bb5:	lea    r13d,[r13-0x18]
   140030bb9:	lea    r13d,[rax+r13*2]
   140030bbd:	cmp    r13d,0x1450
   140030bc4:	jg     0x140030bd3
   140030bc6:	mov    dl,BYTE PTR [r8]
   140030bc9:	add    r8,r9
   140030bcc:	cmp    dl,dil
   140030bcf:	jge    0x140030ba8
   140030bd1:	jmp    0x140030bea
   140030bd3:	mov    r13d,0x1451
   140030bd9:	jmp    0x140030bea
   140030bdb:	cmp    dl,0x39
   140030bde:	jg     0x140030a85
   140030be4:	mov    dl,BYTE PTR [r8]
   140030be7:	add    r8,r9
   140030bea:	cmp    dl,dil
   140030bed:	jge    0x140030bdb
   140030bef:	jmp    0x140030a85
   140030bf4:	mov    r8,rdi
   140030bf7:	mov    r9d,0x1
   140030bfd:	mov    rax,QWORD PTR [rbp-0x69]
   140030c01:	mov    QWORD PTR [rax],r8
   140030c04:	test   r15d,r15d
   140030c07:	je     0x140031020
   140030c0d:	cmp    r11d,0x18
   140030c11:	jbe    0x140030c2c
   140030c13:	mov    al,BYTE PTR [rbp-0xa]
   140030c16:	cmp    al,0x5
   140030c18:	jl     0x140030c20
   140030c1a:	add    al,r9b
   140030c1d:	mov    BYTE PTR [rbp-0xa],al
   140030c20:	sub    r10,r9
   140030c23:	mov    r11d,0x18
   140030c29:	add    esi,r9d
   140030c2c:	test   r11d,r11d
   140030c2f:	jne    0x140030c46
   140030c31:	movzx  edx,bx
   140030c34:	movzx  eax,bx
   140030c37:	mov    edi,ebx
   140030c39:	mov    ecx,ebx
   140030c3b:	jmp    0x14003102f
   140030c40:	dec    r11d
   140030c43:	add    esi,r9d
   140030c46:	sub    r10,r9
   140030c49:	cmp    BYTE PTR [r10],bl
   140030c4c:	je     0x140030c40
   140030c4e:	lea    r8,[rbp-0x41]
   140030c52:	lea    rcx,[rbp-0x21]
   140030c56:	mov    edx,r11d
   140030c59:	call   0x140032884
   140030c5e:	cmp    DWORD PTR [rbp-0x75],ebx
   140030c61:	jge    0x140030c66
   140030c63:	neg    r13d
   140030c66:	add    r13d,esi
   140030c69:	test   r12d,r12d
   140030c6c:	jne    0x140030c72
   140030c6e:	add    r13d,DWORD PTR [rbp+0x67]
   140030c72:	cmp    DWORD PTR [rbp-0x79],ebx
   140030c75:	jne    0x140030c7b
   140030c77:	sub    r13d,DWORD PTR [rbp+0x6f]
   140030c7b:	cmp    r13d,0x1450
   140030c82:	jg     0x14003100a
   140030c88:	cmp    r13d,0xffffebb0
   140030c8f:	jl     0x140030ffa
   140030c95:	lea    rsi,[rip+0x159f4]        # 0x140046690
   140030c9c:	sub    rsi,0x60
   140030ca0:	test   r13d,r13d
   140030ca3:	je     0x140030fe8
   140030ca9:	jns    0x140030cb9
   140030cab:	lea    rsi,[rip+0x15b3e]        # 0x1400467f0
   140030cb2:	neg    r13d
   140030cb5:	sub    rsi,0x60
   140030cb9:	cmp    DWORD PTR [rbp-0x6d],ebx
   140030cbc:	jne    0x140030cc2
   140030cbe:	mov    WORD PTR [rbp-0x41],bx
   140030cc2:	test   r13d,r13d
   140030cc5:	je     0x140030fe8
   140030ccb:	mov    edi,0x80000000
   140030cd0:	mov    r9d,0x7fff
   140030cd6:	mov    eax,r13d
   140030cd9:	add    rsi,0x54
   140030cdd:	sar    r13d,0x3
   140030ce1:	mov    QWORD PTR [rbp-0x61],rsi
   140030ce5:	and    eax,0x7
   140030ce8:	je     0x140030fdf
   140030cee:	cdqe   
   140030cf0:	mov    r11d,0x8000
   140030cf6:	mov    r14d,0x1
   140030cfc:	lea    rcx,[rax+rax*2]
   140030d00:	lea    rdx,[rsi+rcx*4]
   140030d04:	mov    QWORD PTR [rbp-0x69],rdx
   140030d08:	cmp    WORD PTR [rdx],r11w
   140030d0c:	jb     0x140030d33
   140030d0e:	mov    eax,DWORD PTR [rdx+0x8]
   140030d11:	movsd  xmm0,QWORD PTR [rdx]
   140030d15:	lea    rdx,[rbp-0x31]
   140030d19:	mov    DWORD PTR [rbp-0x29],eax
   140030d1c:	movsd  QWORD PTR [rbp-0x31],xmm0
   140030d21:	mov    rax,QWORD PTR [rbp-0x31]
   140030d25:	shr    rax,0x10
   140030d29:	mov    QWORD PTR [rbp-0x69],rdx
   140030d2d:	sub    eax,r14d
   140030d30:	mov    DWORD PTR [rbp-0x2f],eax
   140030d33:	movzx  eax,WORD PTR [rdx+0xa]
   140030d37:	movzx  ecx,WORD PTR [rbp-0x37]
   140030d3b:	mov    QWORD PTR [rbp-0x51],rbx
   140030d3f:	movzx  r12d,ax
   140030d43:	and    ax,r9w
   140030d47:	mov    DWORD PTR [rbp-0x49],ebx
   140030d4a:	xor    r12w,cx
   140030d4e:	and    cx,r9w
   140030d52:	and    r12w,r11w
   140030d56:	lea    r8d,[rcx+rax*1]
   140030d5a:	cmp    cx,r9w
   140030d5e:	jae    0x140030fcb
   140030d64:	cmp    ax,r9w
   140030d68:	jae    0x140030fcb
   140030d6e:	mov    r10d,0xbffd
   140030d74:	cmp    r8w,r10w
   140030d78:	ja     0x140030fcb
   140030d7e:	mov    r10d,0x3fbf
   140030d84:	cmp    r8w,r10w
   140030d88:	ja     0x140030d96
   140030d8a:	mov    QWORD PTR [rbp-0x3d],rbx
   140030d8e:	mov    DWORD PTR [rbp-0x41],ebx
   140030d91:	jmp    0x140030fdf
   140030d96:	test   cx,cx
   140030d99:	jne    0x140030dbb
   140030d9b:	add    r8w,r14w
   140030d9f:	test   DWORD PTR [rbp-0x39],0x7fffffff
   140030da6:	jne    0x140030dbb
   140030da8:	cmp    DWORD PTR [rbp-0x3d],ebx
   140030dab:	jne    0x140030dbb
   140030dad:	cmp    DWORD PTR [rbp-0x41],ebx
   140030db0:	jne    0x140030dbb
   140030db2:	mov    WORD PTR [rbp-0x37],bx
   140030db6:	jmp    0x140030fdf
   140030dbb:	test   ax,ax
   140030dbe:	jne    0x140030dd6
   140030dc0:	add    r8w,r14w
   140030dc4:	test   DWORD PTR [rdx+0x8],0x7fffffff
   140030dcb:	jne    0x140030dd6
   140030dcd:	cmp    DWORD PTR [rdx+0x4],ebx
   140030dd0:	jne    0x140030dd6
   140030dd2:	cmp    DWORD PTR [rdx],ebx
   140030dd4:	je     0x140030d8a
   140030dd6:	mov    r15d,ebx
   140030dd9:	lea    r9,[rbp-0x51]
   140030ddd:	mov    r10d,0x5
   140030de3:	mov    DWORD PTR [rbp-0x79],r10d
   140030de7:	test   r10d,r10d
   140030dea:	jle    0x140030e58
   140030dec:	lea    eax,[r15+r15*1]
   140030df0:	lea    rdi,[rbp-0x41]
   140030df4:	lea    rsi,[rdx+0x8]
   140030df8:	movsxd rcx,eax
   140030dfb:	mov    eax,r15d
   140030dfe:	and    eax,r14d
   140030e01:	add    rdi,rcx
   140030e04:	mov    edx,eax
   140030e06:	movzx  eax,WORD PTR [rdi]
   140030e09:	movzx  ecx,WORD PTR [rsi]
   140030e0c:	mov    r11d,ebx
   140030e0f:	imul   ecx,eax
   140030e12:	mov    eax,DWORD PTR [r9]
   140030e15:	lea    r14d,[rax+rcx*1]
   140030e19:	cmp    r14d,eax
   140030e1c:	jb     0x140030e23
   140030e1e:	cmp    r14d,ecx
   140030e21:	jae    0x140030e29
   140030e23:	mov    r11d,0x1
   140030e29:	mov    DWORD PTR [r9],r14d
   140030e2c:	mov    r14d,0x1
   140030e32:	test   r11d,r11d
   140030e35:	je     0x140030e3c
   140030e37:	add    WORD PTR [r9+0x4],r14w
   140030e3c:	mov    r11d,DWORD PTR [rbp-0x79]
   140030e40:	add    rdi,0x2
   140030e44:	sub    rsi,0x2
   140030e48:	sub    r11d,r14d
   140030e4b:	mov    DWORD PTR [rbp-0x79],r11d
   140030e4f:	test   r11d,r11d
   140030e52:	jg     0x140030e06
   140030e54:	mov    rdx,QWORD PTR [rbp-0x69]
   140030e58:	sub    r10d,r14d
   140030e5b:	add    r9,0x2
   140030e5f:	add    r15d,r14d
   140030e62:	test   r10d,r10d
   140030e65:	jg     0x140030de3
   140030e6b:	mov    r10d,DWORD PTR [rbp-0x49]
   140030e6f:	mov    r9d,DWORD PTR [rbp-0x51]
   140030e73:	mov    eax,0xc002
   140030e78:	add    r8w,ax
   140030e7c:	mov    edi,0x80000000
   140030e81:	mov    r15d,0xffff
   140030e87:	test   r8w,r8w
   140030e8b:	jle    0x140030ecc
   140030e8d:	test   edi,r10d
   140030e90:	jne    0x140030ec6
   140030e92:	mov    r11d,DWORD PTR [rbp-0x4d]
   140030e96:	mov    edx,r9d
   140030e99:	add    r10d,r10d
   140030e9c:	shr    edx,0x1f
   140030e9f:	add    r9d,r9d
   140030ea2:	mov    ecx,r11d
   140030ea5:	shr    ecx,0x1f
   140030ea8:	lea    eax,[r11+r11*1]
   140030eac:	add    r8w,r15w
   140030eb0:	or     eax,edx
   140030eb2:	or     r10d,ecx
   140030eb5:	mov    DWORD PTR [rbp-0x51],r9d
   140030eb9:	mov    DWORD PTR [rbp-0x4d],eax
   140030ebc:	mov    DWORD PTR [rbp-0x49],r10d
   140030ec0:	test   r8w,r8w
   140030ec4:	jg     0x140030e8d
   140030ec6:	test   r8w,r8w
   140030eca:	jg     0x140030f36
   140030ecc:	add    r8w,r15w
   140030ed0:	jns    0x140030f36
   140030ed2:	movzx  eax,r8w
   140030ed6:	mov    edi,ebx
   140030ed8:	neg    ax
   140030edb:	movzx  edx,ax
   140030ede:	add    r8w,dx
   140030ee2:	test   BYTE PTR [rbp-0x51],r14b
   140030ee6:	je     0x140030eeb
   140030ee8:	add    edi,r14d
   140030eeb:	mov    r11d,DWORD PTR [rbp-0x4d]
   140030eef:	mov    eax,r10d
   140030ef2:	shr    r9d,1
   140030ef5:	mov    ecx,r11d
   140030ef8:	shl    eax,0x1f
   140030efb:	shr    r11d,1
   140030efe:	shl    ecx,0x1f
   140030f01:	or     r11d,eax
   140030f04:	shr    r10d,1
   140030f07:	or     r9d,ecx
   140030f0a:	mov    DWORD PTR [rbp-0x4d],r11d
   140030f0e:	mov    DWORD PTR [rbp-0x51],r9d
   140030f12:	sub    rdx,r14
   140030f15:	jne    0x140030ee2
   140030f17:	test   edi,edi
   140030f19:	mov    DWORD PTR [rbp-0x49],r10d
   140030f1d:	mov    edi,0x80000000
   140030f22:	je     0x140030f36
   140030f24:	movzx  eax,r9w
   140030f28:	or     ax,r14w
   140030f2c:	mov    WORD PTR [rbp-0x51],ax
   140030f30:	mov    r9d,DWORD PTR [rbp-0x51]
   140030f34:	jmp    0x140030f3a
   140030f36:	movzx  eax,WORD PTR [rbp-0x51]
   140030f3a:	mov    rsi,QWORD PTR [rbp-0x61]
   140030f3e:	mov    r11d,0x8000
   140030f44:	cmp    ax,r11w
   140030f48:	ja     0x140030f5a
   140030f4a:	and    r9d,0x1ffff
   140030f51:	cmp    r9d,0x18000
   140030f58:	jne    0x140030fa2
   140030f5a:	mov    eax,DWORD PTR [rbp-0x4f]
   140030f5d:	or     ecx,0xffffffff
   140030f60:	cmp    eax,ecx
   140030f62:	jne    0x140030f9c
   140030f64:	mov    eax,DWORD PTR [rbp-0x4b]
   140030f67:	mov    DWORD PTR [rbp-0x4f],ebx
   140030f6a:	cmp    eax,ecx
   140030f6c:	jne    0x140030f90
   140030f6e:	movzx  eax,WORD PTR [rbp-0x47]
   140030f72:	mov    DWORD PTR [rbp-0x4b],ebx
   140030f75:	cmp    ax,r15w
   140030f79:	jne    0x140030f86
   140030f7b:	mov    WORD PTR [rbp-0x47],r11w
   140030f80:	add    r8w,r14w
   140030f84:	jmp    0x140030f96
   140030f86:	add    ax,r14w
   140030f8a:	mov    WORD PTR [rbp-0x47],ax
   140030f8e:	jmp    0x140030f96
   140030f90:	add    eax,r14d
   140030f93:	mov    DWORD PTR [rbp-0x4b],eax
   140030f96:	mov    r10d,DWORD PTR [rbp-0x49]
   140030f9a:	jmp    0x140030fa2
   140030f9c:	add    eax,r14d
   140030f9f:	mov    DWORD PTR [rbp-0x4f],eax
   140030fa2:	mov    r9d,0x7fff
   140030fa8:	cmp    r8w,r9w
   140030fac:	jae    0x140030fcb
   140030fae:	movzx  eax,WORD PTR [rbp-0x4f]
   140030fb2:	or     r8w,r12w
   140030fb6:	mov    DWORD PTR [rbp-0x3b],r10d
   140030fba:	mov    WORD PTR [rbp-0x41],ax
   140030fbe:	mov    eax,DWORD PTR [rbp-0x4d]
   140030fc1:	mov    WORD PTR [rbp-0x37],r8w
   140030fc6:	mov    DWORD PTR [rbp-0x3f],eax
   140030fc9:	jmp    0x140030fdf
   140030fcb:	neg    r12w
   140030fcf:	mov    QWORD PTR [rbp-0x41],rbx
   140030fd3:	sbb    eax,eax
   140030fd5:	and    eax,edi
   140030fd7:	add    eax,0x7fff8000
   140030fdc:	mov    DWORD PTR [rbp-0x39],eax
   140030fdf:	test   r13d,r13d
   140030fe2:	jne    0x140030cd6
   140030fe8:	mov    eax,DWORD PTR [rbp-0x39]
   140030feb:	movzx  edx,WORD PTR [rbp-0x41]
   140030fef:	mov    ecx,DWORD PTR [rbp-0x3f]
   140030ff2:	mov    edi,DWORD PTR [rbp-0x3b]
   140030ff5:	shr    eax,0x10
   140030ff8:	jmp    0x14003102f
   140030ffa:	mov    edx,ebx
   140030ffc:	movzx  eax,bx
   140030fff:	mov    edi,ebx
   140031001:	mov    ecx,ebx
   140031003:	mov    ebx,0x1
   140031008:	jmp    0x14003102f
   14003100a:	mov    ecx,ebx
   14003100c:	movzx  edx,bx
   14003100f:	mov    eax,0x7fff
   140031014:	mov    ebx,0x2
   140031019:	mov    edi,0x80000000
   14003101e:	jmp    0x14003102f
   140031020:	movzx  edx,bx
   140031023:	movzx  eax,bx
   140031026:	mov    edi,ebx
   140031028:	mov    ecx,ebx
   14003102a:	mov    ebx,0x4
   14003102f:	mov    r8,QWORD PTR [rbp-0x59]
   140031033:	or     ax,WORD PTR [rbp-0x71]
   140031037:	mov    WORD PTR [r8+0xa],ax
   14003103c:	mov    eax,ebx
   14003103e:	mov    WORD PTR [r8],dx
   140031042:	mov    DWORD PTR [r8+0x2],ecx
   140031046:	mov    DWORD PTR [r8+0x6],edi
   14003104a:	mov    rcx,QWORD PTR [rbp-0x1]
   14003104e:	xor    rcx,rsp
   140031051:	call   0x1400097d0
   140031056:	mov    rbx,QWORD PTR [rsp+0xf0]
   14003105e:	add    rsp,0xa0
   140031065:	pop    r15
   140031067:	pop    r14
   140031069:	pop    r13
   14003106b:	pop    r12
   14003106d:	pop    rdi
   14003106e:	pop    rsi
   14003106f:	pop    rbp
   140031070:	ret    
   140031071:	int3   
   140031072:	int3   
   140031073:	int3   
   140031074:	jmp    0x140032c20
   140031079:	int3   
   14003107a:	int3   
   14003107b:	int3   
   14003107c:	sub    rsp,0x48
   140031080:	mov    eax,DWORD PTR [rsp+0x78]
   140031084:	and    QWORD PTR [rsp+0x30],0x0
   14003108a:	mov    DWORD PTR [rsp+0x28],eax
   14003108e:	mov    eax,DWORD PTR [rsp+0x70]
   140031092:	mov    DWORD PTR [rsp+0x20],eax
   140031096:	call   0x1400310a0
   14003109b:	add    rsp,0x48
   14003109f:	ret    
   1400310a0:	sub    rsp,0x38
   1400310a4:	lea    eax,[r9-0x45]
   1400310a8:	mov    r10d,0xffffffdf
   1400310ae:	test   r10d,eax
   1400310b1:	je     0x1400310fd
   1400310b3:	cmp    r9d,0x66
   1400310b7:	jne    0x1400310cf
   1400310b9:	mov    rax,QWORD PTR [rsp+0x70]
   1400310be:	mov    r9d,DWORD PTR [rsp+0x60]
   1400310c3:	mov    QWORD PTR [rsp+0x20],rax
   1400310c8:	call   0x140031974
   1400310cd:	jmp    0x140031119
   1400310cf:	lea    eax,[r9-0x41]
   1400310d3:	mov    r9d,DWORD PTR [rsp+0x60]
   1400310d8:	test   r10d,eax
   1400310db:	mov    rax,QWORD PTR [rsp+0x70]
   1400310e0:	mov    QWORD PTR [rsp+0x28],rax
   1400310e5:	mov    eax,DWORD PTR [rsp+0x68]
   1400310e9:	mov    DWORD PTR [rsp+0x20],eax
   1400310ed:	je     0x1400310f6
   1400310ef:	call   0x140031a64
   1400310f4:	jmp    0x140031119
   1400310f6:	call   0x14003113c
   1400310fb:	jmp    0x140031119
   1400310fd:	mov    rax,QWORD PTR [rsp+0x70]
   140031102:	mov    r9d,DWORD PTR [rsp+0x60]
   140031107:	mov    QWORD PTR [rsp+0x28],rax
   14003110c:	mov    eax,DWORD PTR [rsp+0x68]
   140031110:	mov    DWORD PTR [rsp+0x20],eax
   140031114:	call   0x140031704
   140031119:	add    rsp,0x38
   14003111d:	ret    
   14003111e:	int3   
   14003111f:	int3   
   140031120:	sub    rsp,0x38
   140031124:	mov    eax,DWORD PTR [rsp+0x60]
   140031128:	and    QWORD PTR [rsp+0x28],0x0
   14003112e:	mov    DWORD PTR [rsp+0x20],eax
   140031132:	call   0x14003113c
   140031137:	add    rsp,0x38
   14003113b:	ret    
   14003113c:	mov    rax,rsp
   14003113f:	mov    QWORD PTR [rax+0x8],rbx
   140031143:	mov    QWORD PTR [rax+0x10],rbp
   140031147:	mov    QWORD PTR [rax+0x18],rsi
   14003114b:	push   rdi
   14003114c:	push   r12
   14003114e:	push   r13
   140031150:	push   r14
   140031152:	push   r15
   140031154:	sub    rsp,0x50
   140031158:	mov    rdi,rdx
   14003115b:	mov    rdx,QWORD PTR [rsp+0xa8]
   140031163:	mov    r14,rcx
   140031166:	lea    rcx,[rax-0x48]
   14003116a:	mov    r15d,0x30
   140031170:	mov    ebx,r9d
   140031173:	mov    rsi,r8
   140031176:	mov    r12d,0x3ff
   14003117c:	movzx  ebp,r15w
   140031180:	call   0x140007ff0
   140031185:	xor    r9d,r9d
   140031188:	test   ebx,ebx
   14003118a:	cmovs  ebx,r9d
   14003118e:	test   rdi,rdi
   140031191:	jne    0x14003119f
   140031193:	call   0x14000b9f0
   140031198:	mov    ebx,0x16
   14003119d:	jmp    0x1400311bc
   14003119f:	test   rsi,rsi
   1400311a2:	je     0x140031193
   1400311a4:	lea    eax,[rbx+0xb]
   1400311a7:	mov    BYTE PTR [rdi],r9b
   1400311aa:	movsxd rcx,eax
   1400311ad:	cmp    rsi,rcx
   1400311b0:	ja     0x1400311cb
   1400311b2:	call   0x14000b9f0
   1400311b7:	mov    ebx,0x22
   1400311bc:	mov    DWORD PTR [rax],ebx
   1400311be:	call   0x14000b8b8
   1400311c3:	xor    r9d,r9d
   1400311c6:	jmp    0x1400314b9
   1400311cb:	mov    rax,QWORD PTR [r14]
   1400311ce:	mov    ecx,0x7ff
   1400311d3:	shr    rax,0x34
   1400311d7:	and    rax,rcx
   1400311da:	cmp    rax,rcx
   1400311dd:	jne    0x140031275
   1400311e3:	mov    QWORD PTR [rsp+0x28],r9
   1400311e8:	mov    DWORD PTR [rsp+0x20],r9d
   1400311ed:	lea    r8,[rsi-0x2]
   1400311f1:	cmp    rsi,0xffffffffffffffff
   1400311f5:	lea    rdx,[rdi+0x2]
   1400311f9:	mov    r9d,ebx
   1400311fc:	cmove  r8,rsi
   140031200:	mov    rcx,r14
   140031203:	call   0x140031704
   140031208:	xor    r9d,r9d
   14003120b:	mov    ebx,eax
   14003120d:	test   eax,eax
   14003120f:	je     0x140031219
   140031211:	mov    BYTE PTR [rdi],r9b
   140031214:	jmp    0x1400314b9
   140031219:	cmp    BYTE PTR [rdi+0x2],0x2d
   14003121d:	mov    esi,0x1
   140031222:	jne    0x14003122a
   140031224:	mov    BYTE PTR [rdi],0x2d
   140031227:	add    rdi,rsi
   14003122a:	mov    ebx,DWORD PTR [rsp+0xa0]
   140031231:	mov    BYTE PTR [rdi],r15b
   140031234:	mov    edx,0x65
   140031239:	mov    eax,ebx
   14003123b:	neg    eax
   14003123d:	sbb    cl,cl
   14003123f:	and    cl,0xe0
   140031242:	add    cl,0x78
   140031245:	mov    BYTE PTR [rdi+rsi*1],cl
   140031248:	lea    rcx,[rsi+0x1]
   14003124c:	add    rcx,rdi
   14003124f:	call   0x140032c20
   140031254:	xor    r9d,r9d
   140031257:	test   rax,rax
   14003125a:	je     0x1400314b6
   140031260:	neg    ebx
   140031262:	sbb    cl,cl
   140031264:	and    cl,0xe0
   140031267:	add    cl,0x70
   14003126a:	mov    BYTE PTR [rax],cl
   14003126c:	mov    BYTE PTR [rax+0x3],r9b
   140031270:	jmp    0x1400314b6
   140031275:	movabs rax,0x8000000000000000
   14003127f:	mov    esi,0x1
   140031284:	test   QWORD PTR [r14],rax
   140031287:	je     0x14003128f
   140031289:	mov    BYTE PTR [rdi],0x2d
   14003128c:	add    rdi,rsi
   14003128f:	mov    r13d,DWORD PTR [rsp+0xa0]
   140031297:	mov    r10d,r15d
   14003129a:	movabs r11,0xfffffffffffff
   1400312a4:	mov    BYTE PTR [rdi],r10b
   1400312a7:	add    rdi,rsi
   1400312aa:	mov    eax,r13d
   1400312ad:	neg    eax
   1400312af:	mov    eax,r13d
   1400312b2:	sbb    cl,cl
   1400312b4:	and    cl,0xe0
   1400312b7:	add    cl,0x78
   1400312ba:	mov    BYTE PTR [rdi],cl
   1400312bc:	add    rdi,rsi
   1400312bf:	neg    eax
   1400312c1:	sbb    edx,edx
   1400312c3:	movabs rax,0x7ff0000000000000
   1400312cd:	and    edx,0xffffffe0
   1400312d0:	sub    edx,0xffffffd9
   1400312d3:	test   QWORD PTR [r14],rax
   1400312d6:	jne    0x1400312f3
   1400312d8:	mov    BYTE PTR [rdi],r10b
   1400312db:	mov    rax,QWORD PTR [r14]
   1400312de:	add    rdi,rsi
   1400312e1:	and    rax,r11
   1400312e4:	neg    rax
   1400312e7:	sbb    r12,r12
   1400312ea:	and    r12d,0x3fe
   1400312f1:	jmp    0x1400312f9
   1400312f3:	mov    BYTE PTR [rdi],0x31
   1400312f6:	add    rdi,rsi
   1400312f9:	mov    r15,rdi
   1400312fc:	add    rdi,rsi
   1400312ff:	test   ebx,ebx
   140031301:	jne    0x140031308
   140031303:	mov    BYTE PTR [r15],r9b
   140031306:	jmp    0x14003131c
   140031308:	mov    rax,QWORD PTR [rsp+0x30]
   14003130d:	mov    rcx,QWORD PTR [rax+0xf0]
   140031314:	mov    rax,QWORD PTR [rcx]
   140031317:	mov    cl,BYTE PTR [rax]
   140031319:	mov    BYTE PTR [r15],cl
   14003131c:	test   QWORD PTR [r14],r11
   14003131f:	jbe    0x1400313ad
   140031325:	movabs r8,0xf000000000000
   14003132f:	test   ebx,ebx
   140031331:	jle    0x140031360
   140031333:	mov    rax,QWORD PTR [r14]
   140031336:	mov    cl,bpl
   140031339:	and    rax,r8
   14003133c:	and    rax,r11
   14003133f:	shr    rax,cl
   140031342:	add    ax,r10w
   140031346:	cmp    ax,0x39
   14003134a:	jbe    0x14003134f
   14003134c:	add    ax,dx
   14003134f:	mov    BYTE PTR [rdi],al
   140031351:	shr    r8,0x4
   140031355:	sub    ebx,esi
   140031357:	add    rdi,rsi
   14003135a:	add    bp,0xfffc
   14003135e:	jns    0x14003132f
   140031360:	test   bp,bp
   140031363:	js     0x1400313ad
   140031365:	mov    rax,QWORD PTR [r14]
   140031368:	mov    cl,bpl
   14003136b:	and    rax,r8
   14003136e:	and    rax,r11
   140031371:	shr    rax,cl
   140031374:	cmp    ax,0x8
   140031378:	jbe    0x1400313ad
   14003137a:	lea    rcx,[rdi-0x1]
   14003137e:	mov    al,BYTE PTR [rcx]
   140031380:	sub    al,0x46
   140031382:	test   al,0xdf
   140031384:	jne    0x14003138e
   140031386:	mov    BYTE PTR [rcx],r10b
   140031389:	sub    rcx,rsi
   14003138c:	jmp    0x14003137e
   14003138e:	cmp    rcx,r15
   140031391:	je     0x1400313a7
   140031393:	mov    al,BYTE PTR [rcx]
   140031395:	cmp    al,0x39
   140031397:	jne    0x1400313a0
   140031399:	add    dl,0x3a
   14003139c:	mov    BYTE PTR [rcx],dl
   14003139e:	jmp    0x1400313ad
   1400313a0:	add    al,sil
   1400313a3:	mov    BYTE PTR [rcx],al
   1400313a5:	jmp    0x1400313ad
   1400313a7:	sub    rcx,rsi
   1400313aa:	add    BYTE PTR [rcx],sil
   1400313ad:	test   ebx,ebx
   1400313af:	jle    0x1400313c9
   1400313b1:	mov    r8,rbx
   1400313b4:	mov    dl,r10b
   1400313b7:	mov    rcx,rdi
   1400313ba:	call   0x140009800
   1400313bf:	add    rdi,rbx
   1400313c2:	xor    r9d,r9d
   1400313c5:	lea    r10d,[r9+0x30]
   1400313c9:	cmp    BYTE PTR [r15],r9b
   1400313cc:	cmove  rdi,r15
   1400313d0:	neg    r13d
   1400313d3:	sbb    al,al
   1400313d5:	and    al,0xe0
   1400313d7:	add    al,0x70
   1400313d9:	mov    BYTE PTR [rdi],al
   1400313db:	mov    rcx,QWORD PTR [r14]
   1400313de:	add    rdi,rsi
   1400313e1:	shr    rcx,0x34
   1400313e5:	and    ecx,0x7ff
   1400313eb:	sub    rcx,r12
   1400313ee:	js     0x1400313f8
   1400313f0:	mov    BYTE PTR [rdi],0x2b
   1400313f3:	add    rdi,rsi
   1400313f6:	jmp    0x140031401
   1400313f8:	mov    BYTE PTR [rdi],0x2d
   1400313fb:	add    rdi,rsi
   1400313fe:	neg    rcx
   140031401:	mov    r8,rdi
   140031404:	mov    BYTE PTR [rdi],r10b
   140031407:	cmp    rcx,0x3e8
   14003140e:	jl     0x140031443
   140031410:	movabs rax,0x20c49ba5e353f7cf
   14003141a:	imul   rcx
   14003141d:	sar    rdx,0x7
   140031421:	mov    rax,rdx
   140031424:	shr    rax,0x3f
   140031428:	add    rdx,rax
   14003142b:	lea    eax,[r10+rdx*1]
   14003142f:	mov    BYTE PTR [rdi],al
   140031431:	add    rdi,rsi
   140031434:	imul   rax,rdx,0xfffffffffffffc18
   14003143b:	add    rcx,rax
   14003143e:	cmp    rdi,r8
   140031441:	jne    0x140031449
   140031443:	cmp    rcx,0x64
   140031447:	jl     0x140031477
   140031449:	movabs rax,0xa3d70a3d70a3d70b
   140031453:	imul   rcx
   140031456:	add    rdx,rcx
   140031459:	sar    rdx,0x6
   14003145d:	mov    rax,rdx
   140031460:	shr    rax,0x3f
   140031464:	add    rdx,rax
   140031467:	lea    eax,[r10+rdx*1]
   14003146b:	mov    BYTE PTR [rdi],al
   14003146d:	add    rdi,rsi
   140031470:	imul   rax,rdx,0xffffffffffffff9c
   140031474:	add    rcx,rax
   140031477:	cmp    rdi,r8
   14003147a:	jne    0x140031482
   14003147c:	cmp    rcx,0xa
   140031480:	jl     0x1400314ad
   140031482:	movabs rax,0x6666666666666667
   14003148c:	imul   rcx
   14003148f:	sar    rdx,0x2
   140031493:	mov    rax,rdx
   140031496:	shr    rax,0x3f
   14003149a:	add    rdx,rax
   14003149d:	lea    eax,[r10+rdx*1]
   1400314a1:	mov    BYTE PTR [rdi],al
   1400314a3:	add    rdi,rsi
   1400314a6:	imul   rax,rdx,0xfffffffffffffff6
   1400314aa:	add    rcx,rax
   1400314ad:	add    cl,r10b
   1400314b0:	mov    BYTE PTR [rdi],cl
   1400314b2:	mov    BYTE PTR [rdi+0x1],r9b
   1400314b6:	mov    ebx,r9d
   1400314b9:	cmp    BYTE PTR [rsp+0x48],r9b
   1400314be:	je     0x1400314cc
   1400314c0:	mov    rcx,QWORD PTR [rsp+0x40]
   1400314c5:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400314cc:	lea    r11,[rsp+0x50]
   1400314d1:	mov    eax,ebx
   1400314d3:	mov    rbx,QWORD PTR [r11+0x30]
   1400314d7:	mov    rbp,QWORD PTR [r11+0x38]
   1400314db:	mov    rsi,QWORD PTR [r11+0x40]
   1400314df:	mov    rsp,r11
   1400314e2:	pop    r15
   1400314e4:	pop    r14
   1400314e6:	pop    r13
   1400314e8:	pop    r12
   1400314ea:	pop    rdi
   1400314eb:	ret    
   1400314ec:	sub    rsp,0x38
   1400314f0:	mov    eax,DWORD PTR [rsp+0x60]
   1400314f4:	and    QWORD PTR [rsp+0x28],0x0
   1400314fa:	mov    DWORD PTR [rsp+0x20],eax
   1400314fe:	call   0x140031704
   140031503:	add    rsp,0x38
   140031507:	ret    
   140031508:	mov    rax,rsp
   14003150b:	mov    QWORD PTR [rax+0x8],rbx
   14003150f:	mov    QWORD PTR [rax+0x10],rbp
   140031513:	mov    QWORD PTR [rax+0x18],rsi
   140031517:	mov    QWORD PTR [rax+0x20],rdi
   14003151b:	push   r13
   14003151d:	push   r14
   14003151f:	push   r15
   140031521:	sub    rsp,0x50
   140031525:	mov    r14,rdx
   140031528:	mov    rdx,QWORD PTR [rsp+0xa0]
   140031530:	mov    rdi,rcx
   140031533:	lea    rcx,[rax-0x38]
   140031537:	mov    r13d,r9d
   14003153a:	movsxd rsi,r8d
   14003153d:	call   0x140007ff0
   140031542:	test   rdi,rdi
   140031545:	je     0x14003154c
   140031547:	test   r14,r14
   14003154a:	jne    0x140031558
   14003154c:	call   0x14000b9f0
   140031551:	mov    ebx,0x16
   140031556:	jmp    0x140031573
   140031558:	xor    eax,eax
   14003155a:	test   esi,esi
   14003155c:	cmovg  eax,esi
   14003155f:	add    eax,0x9
   140031562:	cdqe   
   140031564:	cmp    r14,rax
   140031567:	ja     0x14003157f
   140031569:	call   0x14000b9f0
   14003156e:	mov    ebx,0x22
   140031573:	mov    DWORD PTR [rax],ebx
   140031575:	call   0x14000b8b8
   14003157a:	jmp    0x1400316b7
   14003157f:	cmp    BYTE PTR [rsp+0x98],0x0
   140031587:	mov    rbp,QWORD PTR [rsp+0x90]
   14003158f:	je     0x1400315c5
   140031591:	xor    ebx,ebx
   140031593:	cmp    DWORD PTR [rbp+0x0],0x2d
   140031597:	sete   bl
   14003159a:	xor    r15d,r15d
   14003159d:	add    rbx,rdi
   1400315a0:	test   esi,esi
   1400315a2:	setg   r15b
   1400315a6:	test   r15d,r15d
   1400315a9:	je     0x1400315c5
   1400315ab:	mov    rcx,rbx
   1400315ae:	call   0x14001ca40
   1400315b3:	movsxd rcx,r15d
   1400315b6:	mov    rdx,rbx
   1400315b9:	lea    r8,[rax+0x1]
   1400315bd:	add    rcx,rbx
   1400315c0:	call   0x14000b1c0
   1400315c5:	cmp    DWORD PTR [rbp+0x0],0x2d
   1400315c9:	mov    rdx,rdi
   1400315cc:	jne    0x1400315d5
   1400315ce:	mov    BYTE PTR [rdi],0x2d
   1400315d1:	lea    rdx,[rdi+0x1]
   1400315d5:	test   esi,esi
   1400315d7:	jle    0x1400315f4
   1400315d9:	mov    al,BYTE PTR [rdx+0x1]
   1400315dc:	mov    BYTE PTR [rdx],al
   1400315de:	mov    rax,QWORD PTR [rsp+0x30]
   1400315e3:	inc    rdx
   1400315e6:	mov    rcx,QWORD PTR [rax+0xf0]
   1400315ed:	mov    rax,QWORD PTR [rcx]
   1400315f0:	mov    cl,BYTE PTR [rax]
   1400315f2:	mov    BYTE PTR [rdx],cl
   1400315f4:	xor    ecx,ecx
   1400315f6:	lea    rbx,[rdx+rsi*1]
   1400315fa:	lea    r8,[rip+0xdc27]        # 0x14003f228
   140031601:	cmp    BYTE PTR [rsp+0x98],cl
   140031608:	sete   cl
   14003160b:	add    rbx,rcx
   14003160e:	sub    rdi,rbx
   140031611:	cmp    r14,0xffffffffffffffff
   140031615:	mov    rcx,rbx
   140031618:	lea    rdx,[r14+rdi*1]
   14003161c:	cmove  rdx,r14
   140031620:	call   0x140009b0c
   140031625:	test   eax,eax
   140031627:	jne    0x1400316eb
   14003162d:	lea    rcx,[rbx+0x2]
   140031631:	test   r13d,r13d
   140031634:	je     0x140031639
   140031636:	mov    BYTE PTR [rbx],0x45
   140031639:	mov    rax,QWORD PTR [rbp+0x10]
   14003163d:	cmp    BYTE PTR [rax],0x30
   140031640:	je     0x140031698
   140031642:	mov    r8d,DWORD PTR [rbp+0x4]
   140031646:	dec    r8d
   140031649:	jns    0x140031652
   14003164b:	neg    r8d
   14003164e:	mov    BYTE PTR [rbx+0x1],0x2d
   140031652:	cmp    r8d,0x64
   140031656:	jl     0x140031673
   140031658:	mov    eax,0x51eb851f
   14003165d:	imul   r8d
   140031660:	sar    edx,0x5
   140031663:	mov    eax,edx
   140031665:	shr    eax,0x1f
   140031668:	add    edx,eax
   14003166a:	add    BYTE PTR [rbx+0x2],dl
   14003166d:	imul   eax,edx,0xffffff9c
   140031670:	add    r8d,eax
   140031673:	cmp    r8d,0xa
   140031677:	jl     0x140031694
   140031679:	mov    eax,0x66666667
   14003167e:	imul   r8d
   140031681:	sar    edx,0x2
   140031684:	mov    eax,edx
   140031686:	shr    eax,0x1f
   140031689:	add    edx,eax
   14003168b:	add    BYTE PTR [rbx+0x3],dl
   14003168e:	imul   eax,edx,0xfffffff6
   140031691:	add    r8d,eax
   140031694:	add    BYTE PTR [rbx+0x4],r8b
   140031698:	test   BYTE PTR [rip+0x176bd],0x1        # 0x140048d5c
   14003169f:	je     0x1400316b5
   1400316a1:	cmp    BYTE PTR [rcx],0x30
   1400316a4:	jne    0x1400316b5
   1400316a6:	lea    rdx,[rcx+0x1]
   1400316aa:	mov    r8d,0x3
   1400316b0:	call   0x14000b1c0
   1400316b5:	xor    ebx,ebx
   1400316b7:	cmp    BYTE PTR [rsp+0x48],0x0
   1400316bc:	je     0x1400316ca
   1400316be:	mov    rcx,QWORD PTR [rsp+0x40]
   1400316c3:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400316ca:	lea    r11,[rsp+0x50]
   1400316cf:	mov    eax,ebx
   1400316d1:	mov    rbx,QWORD PTR [r11+0x20]
   1400316d5:	mov    rbp,QWORD PTR [r11+0x28]
   1400316d9:	mov    rsi,QWORD PTR [r11+0x30]
   1400316dd:	mov    rdi,QWORD PTR [r11+0x38]
   1400316e1:	mov    rsp,r11
   1400316e4:	pop    r15
   1400316e6:	pop    r14
   1400316e8:	pop    r13
   1400316ea:	ret    
   1400316eb:	and    QWORD PTR [rsp+0x20],0x0
   1400316f1:	xor    r9d,r9d
   1400316f4:	xor    r8d,r8d
   1400316f7:	xor    edx,edx
   1400316f9:	xor    ecx,ecx
   1400316fb:	call   0x14000b908
   140031700:	int3   
   140031701:	int3   
   140031702:	int3   
   140031703:	int3   
   140031704:	rex push rbx
   140031706:	push   rbp
   140031707:	push   rsi
   140031708:	push   rdi
   140031709:	sub    rsp,0x88
   140031710:	mov    rax,QWORD PTR [rip+0x13b59]        # 0x140045270
   140031717:	xor    rax,rsp
   14003171a:	mov    QWORD PTR [rsp+0x70],rax
   14003171f:	mov    rcx,QWORD PTR [rcx]
   140031722:	mov    rbx,r8
   140031725:	mov    rdi,rdx
   140031728:	mov    esi,r9d
   14003172b:	mov    ebp,0x16
   140031730:	lea    r8,[rsp+0x58]
   140031735:	lea    rdx,[rsp+0x40]
   14003173a:	mov    r9d,ebp
   14003173d:	call   0x140032f00
   140031742:	test   rdi,rdi
   140031745:	jne    0x14003175a
   140031747:	call   0x14000b9f0
   14003174c:	mov    DWORD PTR [rax],ebp
   14003174e:	call   0x14000b8b8
   140031753:	mov    eax,ebp
   140031755:	jmp    0x1400317e2
   14003175a:	test   rbx,rbx
   14003175d:	je     0x140031747
   14003175f:	or     rdx,0xffffffffffffffff
   140031763:	cmp    rbx,rdx
   140031766:	je     0x140031782
   140031768:	xor    eax,eax
   14003176a:	cmp    DWORD PTR [rsp+0x40],0x2d
   14003176f:	mov    rdx,rbx
   140031772:	sete   al
   140031775:	sub    rdx,rax
   140031778:	xor    eax,eax
   14003177a:	test   esi,esi
   14003177c:	setg   al
   14003177f:	sub    rdx,rax
   140031782:	xor    eax,eax
   140031784:	cmp    DWORD PTR [rsp+0x40],0x2d
   140031789:	lea    r8d,[rsi+0x1]
   14003178d:	sete   al
   140031790:	xor    ecx,ecx
   140031792:	test   esi,esi
   140031794:	setg   cl
   140031797:	add    rax,rdi
   14003179a:	lea    r9,[rsp+0x40]
   14003179f:	add    rcx,rax
   1400317a2:	call   0x140032d64
   1400317a7:	test   eax,eax
   1400317a9:	je     0x1400317b0
   1400317ab:	mov    BYTE PTR [rdi],0x0
   1400317ae:	jmp    0x1400317e2
   1400317b0:	mov    rax,QWORD PTR [rsp+0xd8]
   1400317b8:	mov    r9d,DWORD PTR [rsp+0xd0]
   1400317c0:	mov    r8d,esi
   1400317c3:	mov    QWORD PTR [rsp+0x30],rax
   1400317c8:	lea    rax,[rsp+0x40]
   1400317cd:	mov    rdx,rbx
   1400317d0:	mov    rcx,rdi
   1400317d3:	mov    BYTE PTR [rsp+0x28],0x0
   1400317d8:	mov    QWORD PTR [rsp+0x20],rax
   1400317dd:	call   0x140031508
   1400317e2:	mov    rcx,QWORD PTR [rsp+0x70]
   1400317e7:	xor    rcx,rsp
   1400317ea:	call   0x1400097d0
   1400317ef:	add    rsp,0x88
   1400317f6:	pop    rdi
   1400317f7:	pop    rsi
   1400317f8:	pop    rbp
   1400317f9:	pop    rbx
   1400317fa:	ret    
   1400317fb:	int3   
   1400317fc:	sub    rsp,0x38
   140031800:	and    QWORD PTR [rsp+0x20],0x0
   140031806:	call   0x140031974
   14003180b:	add    rsp,0x38
   14003180f:	ret    
   140031810:	mov    rax,rsp
   140031813:	mov    QWORD PTR [rax+0x8],rbx
   140031817:	mov    QWORD PTR [rax+0x10],rbp
   14003181b:	mov    QWORD PTR [rax+0x18],rsi
   14003181f:	mov    QWORD PTR [rax+0x20],rdi
   140031823:	push   r14
   140031825:	sub    rsp,0x40
   140031829:	mov    ebx,DWORD PTR [r9+0x4]
   14003182d:	mov    rsi,rdx
   140031830:	mov    rdx,QWORD PTR [rsp+0x78]
   140031835:	mov    rdi,rcx
   140031838:	lea    rcx,[rax-0x28]
   14003183c:	mov    rbp,r9
   14003183f:	dec    ebx
   140031841:	mov    r14d,r8d
   140031844:	call   0x140007ff0
   140031849:	test   rdi,rdi
   14003184c:	je     0x140031853
   14003184e:	test   rsi,rsi
   140031851:	jne    0x140031869
   140031853:	call   0x14000b9f0
   140031858:	mov    ebx,0x16
   14003185d:	mov    DWORD PTR [rax],ebx
   14003185f:	call   0x14000b8b8
   140031864:	jmp    0x140031941
   140031869:	cmp    BYTE PTR [rsp+0x70],0x0
   14003186e:	je     0x14003188a
   140031870:	cmp    ebx,r14d
   140031873:	jne    0x14003188a
   140031875:	xor    eax,eax
   140031877:	cmp    DWORD PTR [rbp+0x0],0x2d
   14003187b:	movsxd rcx,ebx
   14003187e:	sete   al
   140031881:	add    rax,rdi
   140031884:	mov    WORD PTR [rcx+rax*1],0x30
   14003188a:	cmp    DWORD PTR [rbp+0x0],0x2d
   14003188e:	jne    0x140031896
   140031890:	mov    BYTE PTR [rdi],0x2d
   140031893:	inc    rdi
   140031896:	cmp    DWORD PTR [rbp+0x4],0x0
   14003189a:	jg     0x1400318bc
   14003189c:	mov    rcx,rdi
   14003189f:	call   0x14001ca40
   1400318a4:	lea    rcx,[rdi+0x1]
   1400318a8:	mov    rdx,rdi
   1400318ab:	lea    r8,[rax+0x1]
   1400318af:	call   0x14000b1c0
   1400318b4:	mov    BYTE PTR [rdi],0x30
   1400318b7:	inc    rdi
   1400318ba:	jmp    0x1400318c3
   1400318bc:	movsxd rax,DWORD PTR [rbp+0x4]
   1400318c0:	add    rdi,rax
   1400318c3:	test   r14d,r14d
   1400318c6:	jle    0x14003193f
   1400318c8:	mov    rcx,rdi
   1400318cb:	lea    rsi,[rdi+0x1]
   1400318cf:	call   0x14001ca40
   1400318d4:	mov    rdx,rdi
   1400318d7:	mov    rcx,rsi
   1400318da:	lea    r8,[rax+0x1]
   1400318de:	call   0x14000b1c0
   1400318e3:	mov    rax,QWORD PTR [rsp+0x20]
   1400318e8:	mov    rcx,QWORD PTR [rax+0xf0]
   1400318ef:	mov    rax,QWORD PTR [rcx]
   1400318f2:	mov    cl,BYTE PTR [rax]
   1400318f4:	mov    BYTE PTR [rdi],cl
   1400318f6:	mov    ebx,DWORD PTR [rbp+0x4]
   1400318f9:	test   ebx,ebx
   1400318fb:	jns    0x14003193f
   1400318fd:	neg    ebx
   1400318ff:	cmp    BYTE PTR [rsp+0x70],0x0
   140031904:	jne    0x140031911
   140031906:	mov    eax,ebx
   140031908:	mov    ebx,r14d
   14003190b:	cmp    r14d,eax
   14003190e:	cmovge ebx,eax
   140031911:	test   ebx,ebx
   140031913:	je     0x14003192f
   140031915:	mov    rcx,rsi
   140031918:	call   0x14001ca40
   14003191d:	movsxd rcx,ebx
   140031920:	mov    rdx,rsi
   140031923:	lea    r8,[rax+0x1]
   140031927:	add    rcx,rsi
   14003192a:	call   0x14000b1c0
   14003192f:	movsxd r8,ebx
   140031932:	mov    edx,0x30
   140031937:	mov    rcx,rsi
   14003193a:	call   0x140009800
   14003193f:	xor    ebx,ebx
   140031941:	cmp    BYTE PTR [rsp+0x38],0x0
   140031946:	je     0x140031954
   140031948:	mov    rcx,QWORD PTR [rsp+0x30]
   14003194d:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140031954:	mov    rbp,QWORD PTR [rsp+0x58]
   140031959:	mov    rsi,QWORD PTR [rsp+0x60]
   14003195e:	mov    rdi,QWORD PTR [rsp+0x68]
   140031963:	mov    eax,ebx
   140031965:	mov    rbx,QWORD PTR [rsp+0x50]
   14003196a:	add    rsp,0x40
   14003196e:	pop    r14
   140031970:	ret    
   140031971:	int3   
   140031972:	int3   
   140031973:	int3   
   140031974:	rex push rbx
   140031976:	push   rbp
   140031977:	push   rsi
   140031978:	push   rdi
   140031979:	sub    rsp,0x78
   14003197d:	mov    rax,QWORD PTR [rip+0x138ec]        # 0x140045270
   140031984:	xor    rax,rsp
   140031987:	mov    QWORD PTR [rsp+0x60],rax
   14003198c:	mov    rcx,QWORD PTR [rcx]
   14003198f:	mov    rbx,r8
   140031992:	mov    rdi,rdx
   140031995:	mov    esi,r9d
   140031998:	mov    ebp,0x16
   14003199d:	lea    r8,[rsp+0x48]
   1400319a2:	lea    rdx,[rsp+0x30]
   1400319a7:	mov    r9d,ebp
   1400319aa:	call   0x140032f00
   1400319af:	test   rdi,rdi
   1400319b2:	jne    0x1400319c4
   1400319b4:	call   0x14000b9f0
   1400319b9:	mov    DWORD PTR [rax],ebp
   1400319bb:	call   0x14000b8b8
   1400319c0:	mov    eax,ebp
   1400319c2:	jmp    0x140031a2f
   1400319c4:	test   rbx,rbx
   1400319c7:	je     0x1400319b4
   1400319c9:	or     rdx,0xffffffffffffffff
   1400319cd:	cmp    rbx,rdx
   1400319d0:	je     0x1400319e2
   1400319d2:	xor    eax,eax
   1400319d4:	cmp    DWORD PTR [rsp+0x30],0x2d
   1400319d9:	mov    rdx,rbx
   1400319dc:	sete   al
   1400319df:	sub    rdx,rax
   1400319e2:	mov    r8d,DWORD PTR [rsp+0x34]
   1400319e7:	xor    ecx,ecx
   1400319e9:	lea    r9,[rsp+0x30]
   1400319ee:	add    r8d,esi
   1400319f1:	cmp    DWORD PTR [rsp+0x30],0x2d
   1400319f6:	sete   cl
   1400319f9:	add    rcx,rdi
   1400319fc:	call   0x140032d64
   140031a01:	test   eax,eax
   140031a03:	je     0x140031a0a
   140031a05:	mov    BYTE PTR [rdi],0x0
   140031a08:	jmp    0x140031a2f
   140031a0a:	mov    rax,QWORD PTR [rsp+0xc0]
   140031a12:	lea    r9,[rsp+0x30]
   140031a17:	mov    r8d,esi
   140031a1a:	mov    QWORD PTR [rsp+0x28],rax
   140031a1f:	mov    rdx,rbx
   140031a22:	mov    rcx,rdi
   140031a25:	mov    BYTE PTR [rsp+0x20],0x0
   140031a2a:	call   0x140031810
   140031a2f:	mov    rcx,QWORD PTR [rsp+0x60]
   140031a34:	xor    rcx,rsp
   140031a37:	call   0x1400097d0
   140031a3c:	add    rsp,0x78
   140031a40:	pop    rdi
   140031a41:	pop    rsi
   140031a42:	pop    rbp
   140031a43:	pop    rbx
   140031a44:	ret    
   140031a45:	int3   
   140031a46:	int3   
   140031a47:	int3   
   140031a48:	sub    rsp,0x38
   140031a4c:	mov    eax,DWORD PTR [rsp+0x60]
   140031a50:	and    QWORD PTR [rsp+0x28],0x0
   140031a56:	mov    DWORD PTR [rsp+0x20],eax
   140031a5a:	call   0x140031a64
   140031a5f:	add    rsp,0x38
   140031a63:	ret    
   140031a64:	rex push rbx
   140031a66:	push   rbp
   140031a67:	push   rsi
   140031a68:	push   rdi
   140031a69:	push   r14
   140031a6b:	sub    rsp,0x80
   140031a72:	mov    rax,QWORD PTR [rip+0x137f7]        # 0x140045270
   140031a79:	xor    rax,rsp
   140031a7c:	mov    QWORD PTR [rsp+0x70],rax
   140031a81:	mov    rcx,QWORD PTR [rcx]
   140031a84:	mov    rdi,r8
   140031a87:	mov    rsi,rdx
   140031a8a:	mov    ebp,r9d
   140031a8d:	mov    ebx,0x16
   140031a92:	lea    r8,[rsp+0x58]
   140031a97:	lea    rdx,[rsp+0x40]
   140031a9c:	mov    r9d,ebx
   140031a9f:	call   0x140032f00
   140031aa4:	test   rsi,rsi
   140031aa7:	jne    0x140031abc
   140031aa9:	call   0x14000b9f0
   140031aae:	mov    DWORD PTR [rax],ebx
   140031ab0:	call   0x14000b8b8
   140031ab5:	mov    eax,ebx
   140031ab7:	jmp    0x140031b7d
   140031abc:	test   rdi,rdi
   140031abf:	je     0x140031aa9
   140031ac1:	mov    r14d,DWORD PTR [rsp+0x44]
   140031ac6:	xor    eax,eax
   140031ac8:	dec    r14d
   140031acb:	cmp    DWORD PTR [rsp+0x40],0x2d
   140031ad0:	sete   al
   140031ad3:	or     rdx,0xffffffffffffffff
   140031ad7:	lea    rbx,[rax+rsi*1]
   140031adb:	cmp    rdi,rdx
   140031ade:	je     0x140031ae6
   140031ae0:	mov    rdx,rdi
   140031ae3:	sub    rdx,rax
   140031ae6:	lea    r9,[rsp+0x40]
   140031aeb:	mov    r8d,ebp
   140031aee:	mov    rcx,rbx
   140031af1:	call   0x140032d64
   140031af6:	test   eax,eax
   140031af8:	je     0x140031aff
   140031afa:	mov    BYTE PTR [rsi],0x0
   140031afd:	jmp    0x140031b7d
   140031aff:	mov    eax,DWORD PTR [rsp+0x44]
   140031b03:	dec    eax
   140031b05:	cmp    r14d,eax
   140031b08:	setl   cl
   140031b0b:	cmp    eax,0xfffffffc
   140031b0e:	jl     0x140031b4b
   140031b10:	cmp    eax,ebp
   140031b12:	jge    0x140031b4b
   140031b14:	test   cl,cl
   140031b16:	je     0x140031b24
   140031b18:	mov    al,BYTE PTR [rbx]
   140031b1a:	inc    rbx
   140031b1d:	test   al,al
   140031b1f:	jne    0x140031b18
   140031b21:	mov    BYTE PTR [rbx-0x2],al
   140031b24:	mov    rax,QWORD PTR [rsp+0xd8]
   140031b2c:	lea    r9,[rsp+0x40]
   140031b31:	mov    r8d,ebp
   140031b34:	mov    QWORD PTR [rsp+0x28],rax
   140031b39:	mov    rdx,rdi
   140031b3c:	mov    rcx,rsi
   140031b3f:	mov    BYTE PTR [rsp+0x20],0x1
   140031b44:	call   0x140031810
   140031b49:	jmp    0x140031b7d
   140031b4b:	mov    rax,QWORD PTR [rsp+0xd8]
   140031b53:	mov    r9d,DWORD PTR [rsp+0xd0]
   140031b5b:	mov    r8d,ebp
   140031b5e:	mov    QWORD PTR [rsp+0x30],rax
   140031b63:	lea    rax,[rsp+0x40]
   140031b68:	mov    rdx,rdi
   140031b6b:	mov    rcx,rsi
   140031b6e:	mov    BYTE PTR [rsp+0x28],0x1
   140031b73:	mov    QWORD PTR [rsp+0x20],rax
   140031b78:	call   0x140031508
   140031b7d:	mov    rcx,QWORD PTR [rsp+0x70]
   140031b82:	xor    rcx,rsp
   140031b85:	call   0x1400097d0
   140031b8a:	add    rsp,0x80
   140031b91:	pop    r14
   140031b93:	pop    rdi
   140031b94:	pop    rsi
   140031b95:	pop    rbp
   140031b96:	pop    rbx
   140031b97:	ret    
   140031b98:	xor    edx,edx
   140031b9a:	jmp    0x140031ba0
   140031b9f:	int3   
   140031ba0:	rex push rbx
   140031ba2:	sub    rsp,0x40
   140031ba6:	mov    rbx,rcx
   140031ba9:	lea    rcx,[rsp+0x20]
   140031bae:	call   0x140007ff0
   140031bb3:	mov    cl,BYTE PTR [rbx]
   140031bb5:	mov    r8,QWORD PTR [rsp+0x20]
   140031bba:	test   cl,cl
   140031bbc:	je     0x140031bd7
   140031bbe:	mov    rax,QWORD PTR [r8+0xf0]
   140031bc5:	mov    rdx,QWORD PTR [rax]
   140031bc8:	mov    al,BYTE PTR [rdx]
   140031bca:	cmp    cl,al
   140031bcc:	je     0x140031bd7
   140031bce:	inc    rbx
   140031bd1:	mov    cl,BYTE PTR [rbx]
   140031bd3:	test   cl,cl
   140031bd5:	jne    0x140031bca
   140031bd7:	mov    al,BYTE PTR [rbx]
   140031bd9:	inc    rbx
   140031bdc:	test   al,al
   140031bde:	je     0x140031c1d
   140031be0:	jmp    0x140031beb
   140031be2:	sub    al,0x45
   140031be4:	test   al,0xdf
   140031be6:	je     0x140031bf1
   140031be8:	inc    rbx
   140031beb:	mov    al,BYTE PTR [rbx]
   140031bed:	test   al,al
   140031bef:	jne    0x140031be2
   140031bf1:	mov    rdx,rbx
   140031bf4:	dec    rbx
   140031bf7:	cmp    BYTE PTR [rbx],0x30
   140031bfa:	je     0x140031bf4
   140031bfc:	mov    rax,QWORD PTR [r8+0xf0]
   140031c03:	mov    rcx,QWORD PTR [rax]
   140031c06:	mov    al,BYTE PTR [rcx]
   140031c08:	cmp    BYTE PTR [rbx],al
   140031c0a:	jne    0x140031c0f
   140031c0c:	dec    rbx
   140031c0f:	mov    al,BYTE PTR [rdx]
   140031c11:	inc    rbx
   140031c14:	inc    rdx
   140031c17:	mov    BYTE PTR [rbx],al
   140031c19:	test   al,al
   140031c1b:	jne    0x140031c0f
   140031c1d:	cmp    BYTE PTR [rsp+0x38],0x0
   140031c22:	je     0x140031c30
   140031c24:	mov    rax,QWORD PTR [rsp+0x30]
   140031c29:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140031c30:	add    rsp,0x40
   140031c34:	pop    rbx
   140031c35:	ret    
   140031c36:	int3   
   140031c37:	int3   
   140031c38:	xor    r9d,r9d
   140031c3b:	jmp    0x140031c40
   140031c40:	rex push rbx
   140031c42:	sub    rsp,0x30
   140031c46:	mov    rax,r8
   140031c49:	mov    rbx,rdx
   140031c4c:	mov    r8,r9
   140031c4f:	mov    rdx,rax
   140031c52:	test   ecx,ecx
   140031c54:	je     0x140031c6a
   140031c56:	lea    rcx,[rsp+0x20]
   140031c5b:	call   0x14002e6d4
   140031c60:	mov    rax,QWORD PTR [rsp+0x20]
   140031c65:	mov    QWORD PTR [rbx],rax
   140031c68:	jmp    0x140031c7a
   140031c6a:	lea    rcx,[rsp+0x40]
   140031c6f:	call   0x14002e7a8
   140031c74:	mov    eax,DWORD PTR [rsp+0x40]
   140031c78:	mov    DWORD PTR [rbx],eax
   140031c7a:	add    rsp,0x30
   140031c7e:	pop    rbx
   140031c7f:	ret    
   140031c80:	xor    edx,edx
   140031c82:	jmp    0x140031c88
   140031c87:	int3   
   140031c88:	rex push rbx
   140031c8a:	sub    rsp,0x40
   140031c8e:	mov    rbx,rcx
   140031c91:	lea    rcx,[rsp+0x20]
   140031c96:	call   0x140007ff0
   140031c9b:	movsx  ecx,BYTE PTR [rbx]
   140031c9e:	call   0x140032c00
   140031ca3:	cmp    eax,0x65
   140031ca6:	je     0x140031cb7
   140031ca8:	inc    rbx
   140031cab:	movzx  ecx,BYTE PTR [rbx]
   140031cae:	call   0x14001e2f0
   140031cb3:	test   eax,eax
   140031cb5:	jne    0x140031ca8
   140031cb7:	movsx  ecx,BYTE PTR [rbx]
   140031cba:	call   0x140032c00
   140031cbf:	cmp    eax,0x78
   140031cc2:	jne    0x140031cc8
   140031cc4:	add    rbx,0x2
   140031cc8:	mov    rax,QWORD PTR [rsp+0x20]
   140031ccd:	mov    dl,BYTE PTR [rbx]
   140031ccf:	mov    rcx,QWORD PTR [rax+0xf0]
   140031cd6:	mov    rax,QWORD PTR [rcx]
   140031cd9:	mov    cl,BYTE PTR [rax]
   140031cdb:	mov    BYTE PTR [rbx],cl
   140031cdd:	inc    rbx
   140031ce0:	mov    al,BYTE PTR [rbx]
   140031ce2:	mov    BYTE PTR [rbx],dl
   140031ce4:	mov    dl,al
   140031ce6:	mov    al,BYTE PTR [rbx]
   140031ce8:	inc    rbx
   140031ceb:	test   al,al
   140031ced:	jne    0x140031ce0
   140031cef:	cmp    BYTE PTR [rsp+0x38],al
   140031cf3:	je     0x140031d01
   140031cf5:	mov    rax,QWORD PTR [rsp+0x30]
   140031cfa:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140031d01:	add    rsp,0x40
   140031d05:	pop    rbx
   140031d06:	ret    
   140031d07:	int3   
   140031d08:	movsd  xmm0,QWORD PTR [rcx]
   140031d0c:	xor    eax,eax
   140031d0e:	comisd xmm0,QWORD PTR [rip+0xd51a]        # 0x14003f230
   140031d16:	setae  al
   140031d19:	ret    
   140031d1a:	int3   
   140031d1b:	int3   
   140031d1c:	test   edx,edx
   140031d1e:	je     0x140031d4f
   140031d20:	mov    QWORD PTR [rsp+0x8],rbx
   140031d25:	push   rdi
   140031d26:	sub    rsp,0x20
   140031d2a:	movsxd rbx,edx
   140031d2d:	mov    rdi,rcx
   140031d30:	call   0x14001ca40
   140031d35:	lea    rcx,[rdi+rbx*1]
   140031d39:	lea    r8,[rax+0x1]
   140031d3d:	mov    rdx,rdi
   140031d40:	call   0x14000b1c0
   140031d45:	mov    rbx,QWORD PTR [rsp+0x30]
   140031d4a:	add    rsp,0x20
   140031d4e:	pop    rdi
   140031d4f:	ret    
   140031d50:	mov    r11,rsp
   140031d53:	mov    QWORD PTR [r11+0x20],rbx
   140031d57:	push   rbp
   140031d58:	push   rsi
   140031d59:	push   rdi
   140031d5a:	sub    rsp,0x70
   140031d5e:	mov    rax,QWORD PTR [rip+0x1350b]        # 0x140045270
   140031d65:	xor    rax,rsp
   140031d68:	mov    QWORD PTR [rsp+0x60],rax
   140031d6d:	mov    QWORD PTR [r11-0x50],r8
   140031d71:	xor    ebx,ebx
   140031d73:	mov    rbp,rdx
   140031d76:	and    DWORD PTR [rsp+0x30],ebx
   140031d7a:	and    DWORD PTR [rsp+0x28],ebx
   140031d7e:	and    DWORD PTR [rsp+0x20],ebx
   140031d82:	mov    r8,rdx
   140031d85:	mov    rdi,rcx
   140031d88:	lea    rdx,[r11-0x40]
   140031d8c:	lea    rcx,[r11-0x38]
   140031d90:	xor    r9d,r9d
   140031d93:	call   0x140030810
   140031d98:	mov    esi,eax
   140031d9a:	test   al,0x4
   140031d9c:	je     0x140031daf
   140031d9e:	and    DWORD PTR [rsp+0x40],0x0
   140031da3:	and    DWORD PTR [rsp+0x44],0x0
   140031da8:	mov    ebx,0x200
   140031dad:	jmp    0x140031ddd
   140031daf:	lea    rdx,[rsp+0x40]
   140031db4:	lea    rcx,[rsp+0x50]
   140031db9:	call   0x14002f400
   140031dbe:	test   sil,0x2
   140031dc2:	jne    0x140031dc9
   140031dc4:	cmp    eax,0x1
   140031dc7:	jne    0x140031dce
   140031dc9:	mov    ebx,0x80
   140031dce:	test   sil,0x1
   140031dd2:	jne    0x140031dd9
   140031dd4:	cmp    eax,0x2
   140031dd7:	jne    0x140031ddd
   140031dd9:	bts    ebx,0x8
   140031ddd:	mov    ecx,DWORD PTR [rsp+0x48]
   140031de1:	mov    DWORD PTR [rdi],ebx
   140031de3:	mov    rax,rdi
   140031de6:	sub    ecx,ebp
   140031de8:	mov    DWORD PTR [rdi+0x4],ecx
   140031deb:	mov    rcx,QWORD PTR [rsp+0x40]
   140031df0:	mov    QWORD PTR [rdi+0x10],rcx
   140031df4:	mov    rcx,QWORD PTR [rsp+0x60]
   140031df9:	xor    rcx,rsp
   140031dfc:	call   0x1400097d0
   140031e01:	mov    rbx,QWORD PTR [rsp+0xa8]
   140031e09:	add    rsp,0x70
   140031e0d:	pop    rdi
   140031e0e:	pop    rsi
   140031e0f:	pop    rbp
   140031e10:	ret    
   140031e11:	int3   
   140031e12:	int3   
   140031e13:	int3   
   140031e14:	mov    QWORD PTR [rsp+0x20],rbx
   140031e19:	push   rdi
   140031e1a:	sub    rsp,0x60
   140031e1e:	mov    rax,QWORD PTR [rip+0x1344b]        # 0x140045270
   140031e25:	xor    rax,rsp
   140031e28:	mov    QWORD PTR [rsp+0x50],rax
   140031e2d:	mov    rax,QWORD PTR [rsp+0x90]
   140031e35:	mov    rbx,rcx
   140031e38:	lea    rcx,[rsp+0x40]
   140031e3d:	mov    QWORD PTR [rsp+0x38],rax
   140031e42:	xor    eax,eax
   140031e44:	mov    DWORD PTR [rsp+0x30],eax
   140031e48:	mov    DWORD PTR [rsp+0x28],eax
   140031e4c:	mov    DWORD PTR [rsp+0x20],eax
   140031e50:	call   0x140031e8c
   140031e55:	lea    rcx,[rsp+0x40]
   140031e5a:	mov    rdx,rbx
   140031e5d:	mov    edi,eax
   140031e5f:	call   0x14002ff70
   140031e64:	cmp    eax,0x1
   140031e67:	jne    0x140031e6c
   140031e69:	or     edi,0x2
   140031e6c:	mov    eax,edi
   140031e6e:	mov    rcx,QWORD PTR [rsp+0x50]
   140031e73:	xor    rcx,rsp
   140031e76:	call   0x1400097d0
   140031e7b:	mov    rbx,QWORD PTR [rsp+0x88]
   140031e83:	add    rsp,0x60
   140031e87:	pop    rdi
   140031e88:	ret    
   140031e89:	int3   
   140031e8a:	int3   
   140031e8b:	int3   
   140031e8c:	mov    QWORD PTR [rsp+0x18],rbx
   140031e91:	push   rbp
   140031e92:	push   rsi
   140031e93:	push   rdi
   140031e94:	push   r12
   140031e96:	push   r13
   140031e98:	push   r14
   140031e9a:	push   r15
   140031e9c:	lea    rbp,[rsp-0x7]
   140031ea1:	sub    rsp,0xa0
   140031ea8:	mov    rax,QWORD PTR [rip+0x133c1]        # 0x140045270
   140031eaf:	xor    rax,rsp
   140031eb2:	mov    QWORD PTR [rbp-0x1],rax
   140031eb6:	mov    r15,QWORD PTR [rbp+0x7f]
   140031eba:	xor    ebx,ebx
   140031ebc:	mov    DWORD PTR [rbp-0x6d],r9d
   140031ec0:	lea    r9d,[rbx+0x1]
   140031ec4:	mov    QWORD PTR [rbp-0x59],rcx
   140031ec8:	mov    QWORD PTR [rbp-0x69],rdx
   140031ecc:	lea    r10,[rbp-0x21]
   140031ed0:	mov    WORD PTR [rbp-0x71],bx
   140031ed4:	mov    r11d,ebx
   140031ed7:	mov    DWORD PTR [rbp-0x75],r9d
   140031edb:	mov    r12d,ebx
   140031ede:	mov    DWORD PTR [rbp-0x79],ebx
   140031ee1:	mov    r13d,ebx
   140031ee4:	mov    esi,ebx
   140031ee6:	mov    r14d,ebx
   140031ee9:	mov    ecx,ebx
   140031eeb:	test   r15,r15
   140031eee:	jne    0x140031f07
   140031ef0:	call   0x14000b9f0
   140031ef5:	mov    DWORD PTR [rax],0x16
   140031efb:	call   0x14000b8b8
   140031f00:	xor    eax,eax
   140031f02:	jmp    0x1400327de
   140031f07:	mov    rdi,r8
   140031f0a:	cmp    WORD PTR [r8],0x20
   140031f0f:	ja     0x140031f2b
   140031f11:	movzx  eax,WORD PTR [r8]
   140031f15:	movabs rdx,0x100002600
   140031f1f:	bt     rdx,rax
   140031f23:	jae    0x140031f2b
   140031f25:	add    r8,0x2
   140031f29:	jmp    0x140031f0a
   140031f2b:	mov    eax,0x30
   140031f30:	movzx  edx,WORD PTR [r8]
   140031f34:	add    r8,0x2
   140031f38:	cmp    ecx,0x5
   140031f3b:	jg     0x14003222e
   140031f41:	je     0x14003220b
   140031f47:	mov    r9d,ecx
   140031f4a:	test   ecx,ecx
   140031f4c:	je     0x14003219b
   140031f52:	dec    r9d
   140031f55:	je     0x140032107
   140031f5b:	dec    r9d
   140031f5e:	je     0x1400320a7
   140031f64:	dec    r9d
   140031f67:	je     0x140032006
   140031f6d:	dec    r9d
   140031f70:	jne    0x14003236b
   140031f76:	mov    r9d,0x1
   140031f7c:	mov    r12d,r9d
   140031f7f:	mov    DWORD PTR [rbp-0x79],r9d
   140031f83:	lea    eax,[r9+0x2f]
   140031f87:	test   r11d,r11d
   140031f8a:	jne    0x140031fc2
   140031f8c:	jmp    0x140031f99
   140031f8e:	movzx  edx,WORD PTR [r8]
   140031f92:	sub    r14d,r9d
   140031f95:	add    r8,0x2
   140031f99:	cmp    dx,ax
   140031f9c:	je     0x140031f8e
   140031f9e:	jmp    0x140031fc2
   140031fa0:	cmp    dx,0x39
   140031fa4:	ja     0x140031fc7
   140031fa6:	cmp    r11d,0x19
   140031faa:	jae    0x140031fba
   140031fac:	sub    dl,al
   140031fae:	add    r11d,r9d
   140031fb1:	mov    BYTE PTR [r10],dl
   140031fb4:	add    r10,r9
   140031fb7:	sub    r14d,r9d
   140031fba:	movzx  edx,WORD PTR [r8]
   140031fbe:	add    r8,0x2
   140031fc2:	cmp    dx,ax
   140031fc5:	jae    0x140031fa0
   140031fc7:	movzx  ecx,dx
   140031fca:	lea    eax,[rcx-0x2b]
   140031fcd:	test   eax,0xfffffffd
   140031fd2:	je     0x140031ff8
   140031fd4:	cmp    ecx,0x43
   140031fd7:	jle    0x140032379
   140031fdd:	cmp    ecx,0x45
   140031fe0:	jle    0x140031fee
   140031fe2:	lea    eax,[rcx-0x64]
   140031fe5:	cmp    eax,r9d
   140031fe8:	ja     0x140032379
   140031fee:	mov    ecx,0x6
   140031ff3:	jmp    0x140031f2b
   140031ff8:	sub    r8,0x2
   140031ffc:	mov    ecx,0xb
   140032001:	jmp    0x140031f2b
   140032006:	mov    eax,0x1
   14003200b:	mov    r12d,eax
   14003200e:	lea    r9d,[rax+0x2f]
   140032012:	jmp    0x140032039
   140032014:	cmp    dx,0x39
   140032018:	ja     0x14003203f
   14003201a:	cmp    r11d,0x19
   14003201e:	jae    0x14003202e
   140032020:	sub    dl,r9b
   140032023:	add    r11d,eax
   140032026:	mov    BYTE PTR [r10],dl
   140032029:	add    r10,rax
   14003202c:	jmp    0x140032031
   14003202e:	add    r14d,eax
   140032031:	movzx  edx,WORD PTR [r8]
   140032035:	add    r8,0x2
   140032039:	cmp    dx,r9w
   14003203d:	jae    0x140032014
   14003203f:	mov    rax,QWORD PTR [r15]
   140032042:	movzx  r9d,dx
   140032046:	mov    rcx,QWORD PTR [rax+0xf0]
   14003204d:	mov    rax,QWORD PTR [rcx]
   140032050:	movsx  ecx,BYTE PTR [rax]
   140032053:	cmp    r9d,ecx
   140032056:	jne    0x140032065
   140032058:	mov    ecx,0x4
   14003205d:	mov    r9,r12
   140032060:	jmp    0x140031f2b
   140032065:	lea    eax,[r9-0x2b]
   140032069:	test   eax,0xfffffffd
   14003206e:	je     0x14003209c
   140032070:	cmp    r9d,0x43
   140032074:	jle    0x14003208c
   140032076:	cmp    r9d,0x45
   14003207a:	jle    0x140032094
   14003207c:	lea    eax,[r9-0x64]
   140032080:	mov    r9,r12
   140032083:	cmp    eax,r9d
   140032086:	jbe    0x140031fee
   14003208c:	mov    r15,r12
   14003208f:	jmp    0x1400323d9
   140032094:	mov    r9,r12
   140032097:	jmp    0x140031fee
   14003209c:	sub    r8,0x2
   1400320a0:	mov    ecx,0xb
   1400320a5:	jmp    0x14003205d
   1400320a7:	lea    eax,[rdx-0x31]
   1400320aa:	mov    ecx,0x8
   1400320af:	cmp    ax,cx
   1400320b2:	ja     0x1400320cd
   1400320b4:	mov    ecx,0x3
   1400320b9:	sub    r8,0x2
   1400320bd:	mov    eax,0x30
   1400320c2:	mov    r9d,0x1
   1400320c8:	jmp    0x140031f30
   1400320cd:	mov    rax,QWORD PTR [r15]
   1400320d0:	mov    rcx,QWORD PTR [rax+0xf0]
   1400320d7:	mov    rax,QWORD PTR [rcx]
   1400320da:	movsx  ecx,BYTE PTR [rax]
   1400320dd:	movzx  eax,dx
   1400320e0:	cmp    eax,ecx
   1400320e2:	jne    0x1400320eb
   1400320e4:	mov    ecx,0x5
   1400320e9:	jmp    0x1400320bd
   1400320eb:	mov    eax,0x30
   1400320f0:	cmp    dx,ax
   1400320f3:	jne    0x1400322e3
   1400320f9:	mov    r9d,0x1
   1400320ff:	mov    ecx,r9d
   140032102:	jmp    0x140031f30
   140032107:	mov    r9d,0x1
   14003210d:	lea    eax,[rdx-0x31]
   140032110:	lea    ecx,[r9+0x7]
   140032114:	mov    r12d,r9d
   140032117:	cmp    ax,cx
   14003211a:	ja     0x140032129
   14003211c:	lea    ecx,[r9+0x2]
   140032120:	sub    r8,0x2
   140032124:	jmp    0x140031f2b
   140032129:	mov    rax,QWORD PTR [r15]
   14003212c:	movzx  r9d,dx
   140032130:	mov    rcx,QWORD PTR [rax+0xf0]
   140032137:	mov    rax,QWORD PTR [rcx]
   14003213a:	movsx  ecx,BYTE PTR [rax]
   14003213d:	cmp    r9d,ecx
   140032140:	je     0x140032058
   140032146:	lea    eax,[r9-0x2b]
   14003214a:	test   eax,0xfffffffd
   14003214f:	je     0x14003209c
   140032155:	mov    eax,0x30
   14003215a:	cmp    r9d,eax
   14003215d:	je     0x140032193
   14003215f:	cmp    r9d,0x43
   140032163:	jle    0x14003208c
   140032169:	cmp    r9d,0x45
   14003216d:	jle    0x14003218e
   14003216f:	lea    eax,[r9-0x64]
   140032173:	mov    r9,r12
   140032176:	cmp    eax,r9d
   140032179:	ja     0x14003208c
   14003217f:	mov    eax,0x30
   140032184:	mov    ecx,0x6
   140032189:	jmp    0x140031f30
   14003218e:	mov    r9,r12
   140032191:	jmp    0x140032184
   140032193:	mov    r9,r12
   140032196:	jmp    0x1400320ff
   14003219b:	lea    eax,[rdx-0x31]
   14003219e:	mov    ecx,0x8
   1400321a3:	cmp    ax,cx
   1400321a6:	jbe    0x1400320b4
   1400321ac:	mov    rax,QWORD PTR [r15]
   1400321af:	movzx  r9d,dx
   1400321b3:	mov    rcx,QWORD PTR [rax+0xf0]
   1400321ba:	mov    rax,QWORD PTR [rcx]
   1400321bd:	movsx  ecx,BYTE PTR [rax]
   1400321c0:	cmp    r9d,ecx
   1400321c3:	je     0x1400320e4
   1400321c9:	cmp    r9d,0x2b
   1400321cd:	je     0x1400321fd
   1400321cf:	cmp    r9d,0x2d
   1400321d3:	je     0x1400321ec
   1400321d5:	mov    eax,0x30
   1400321da:	cmp    r9d,eax
   1400321dd:	je     0x1400320f9
   1400321e3:	sub    r8,0x2
   1400321e7:	jmp    0x1400322e6
   1400321ec:	mov    ecx,0x2
   1400321f1:	mov    DWORD PTR [rbp-0x71],0x8000
   1400321f8:	jmp    0x1400320bd
   1400321fd:	mov    ecx,0x2
   140032202:	mov    WORD PTR [rbp-0x71],bx
   140032206:	jmp    0x1400320bd
   14003220b:	sub    dx,ax
   14003220e:	mov    ecx,0x9
   140032213:	mov    DWORD PTR [rbp-0x79],r9d
   140032217:	cmp    dx,cx
   14003221a:	ja     0x1400322e3
   140032220:	mov    ecx,0x4
   140032225:	sub    r8,0x2
   140032229:	jmp    0x140031f30
   14003222e:	mov    r9d,ecx
   140032231:	sub    r9d,0x6
   140032235:	je     0x140032333
   14003223b:	dec    r9d
   14003223e:	je     0x1400322be
   140032240:	dec    r9d
   140032243:	je     0x140032286
   140032245:	dec    r9d
   140032248:	je     0x140032385
   14003224e:	cmp    r9d,0x2
   140032252:	jne    0x14003236b
   140032258:	cmp    DWORD PTR [rbp+0x77],ebx
   14003225b:	je     0x1400321e3
   14003225d:	movzx  eax,dx
   140032260:	lea    rdi,[r8-0x2]
   140032264:	cmp    eax,0x2b
   140032267:	je     0x14003227c
   140032269:	cmp    eax,0x2d
   14003226c:	jne    0x1400322e3
   14003226e:	or     DWORD PTR [rbp-0x75],0xffffffff
   140032272:	mov    ecx,0x7
   140032277:	jmp    0x1400320bd
   14003227c:	mov    ecx,0x7
   140032281:	jmp    0x1400320bd
   140032286:	mov    r9d,0x1
   14003228c:	mov    r13d,r9d
   14003228f:	lea    eax,[r9+0x2f]
   140032293:	jmp    0x14003229d
   140032295:	movzx  edx,WORD PTR [r8]
   140032299:	add    r8,0x2
   14003229d:	cmp    dx,ax
   1400322a0:	je     0x140032295
   1400322a2:	sub    dx,0x31
   1400322a6:	mov    ecx,0x8
   1400322ab:	cmp    dx,cx
   1400322ae:	ja     0x140032379
   1400322b4:	mov    ecx,0x9
   1400322b9:	jmp    0x140032225
   1400322be:	lea    eax,[rdx-0x31]
   1400322c1:	mov    ecx,0x8
   1400322c6:	cmp    ax,cx
   1400322c9:	ja     0x1400322d5
   1400322cb:	mov    ecx,0x9
   1400322d0:	jmp    0x1400320b9
   1400322d5:	mov    eax,0x30
   1400322da:	cmp    dx,ax
   1400322dd:	je     0x1400320c2
   1400322e3:	mov    r8,rdi
   1400322e6:	mov    r15d,0x1
   1400322ec:	mov    rax,QWORD PTR [rbp-0x69]
   1400322f0:	mov    QWORD PTR [rax],r8
   1400322f3:	test   r12d,r12d
   1400322f6:	je     0x1400327b4
   1400322fc:	cmp    r11d,0x18
   140032300:	jbe    0x14003231b
   140032302:	mov    al,BYTE PTR [rbp-0xa]
   140032305:	cmp    al,0x5
   140032307:	jl     0x14003230f
   140032309:	add    al,r15b
   14003230c:	mov    BYTE PTR [rbp-0xa],al
   14003230f:	sub    r10,r15
   140032312:	mov    r11d,0x18
   140032318:	add    r14d,r15d
   14003231b:	test   r11d,r11d
   14003231e:	jne    0x1400323e8
   140032324:	movzx  edx,bx
   140032327:	movzx  eax,bx
   14003232a:	mov    edi,ebx
   14003232c:	mov    ecx,ebx
   14003232e:	jmp    0x1400327c3
   140032333:	lea    eax,[rdx-0x31]
   140032336:	mov    ecx,0x8
   14003233b:	lea    rdi,[r8-0x4]
   14003233f:	cmp    ax,cx
   140032342:	jbe    0x1400322cb
   140032344:	movzx  eax,dx
   140032347:	cmp    eax,0x2b
   14003234a:	je     0x140032366
   14003234c:	cmp    eax,0x2d
   14003234f:	je     0x14003226e
   140032355:	lea    r9d,[rcx+0x28]
   140032359:	cmp    eax,r9d
   14003235c:	jne    0x1400322e3
   14003235e:	mov    eax,r9d
   140032361:	jmp    0x1400320c2
   140032366:	mov    ecx,0x7
   14003236b:	cmp    ecx,0xa
   14003236e:	je     0x1400322e6
   140032374:	jmp    0x1400320bd
   140032379:	sub    r8,0x2
   14003237d:	mov    r15,r9
   140032380:	jmp    0x1400322ec
   140032385:	mov    r15d,0x1
   14003238b:	mov    r13d,r15d
   14003238e:	lea    r9d,[r15+0x2f]
   140032392:	jmp    0x1400323b6
   140032394:	cmp    dx,0x39
   140032398:	ja     0x1400323d3
   14003239a:	lea    esi,[rsi+rsi*4]
   14003239d:	movzx  eax,dx
   1400323a0:	lea    esi,[rsi-0x18]
   1400323a3:	lea    esi,[rax+rsi*2]
   1400323a6:	cmp    esi,0x1450
   1400323ac:	jg     0x1400323be
   1400323ae:	movzx  edx,WORD PTR [r8]
   1400323b2:	add    r8,0x2
   1400323b6:	cmp    dx,r9w
   1400323ba:	jae    0x140032394
   1400323bc:	jmp    0x1400323d3
   1400323be:	mov    esi,0x1451
   1400323c3:	jmp    0x1400323d3
   1400323c5:	cmp    dx,0x39
   1400323c9:	ja     0x1400323d9
   1400323cb:	movzx  edx,WORD PTR [r8]
   1400323cf:	add    r8,0x2
   1400323d3:	cmp    dx,r9w
   1400323d7:	jae    0x1400323c5
   1400323d9:	sub    r8,0x2
   1400323dd:	jmp    0x1400322ec
   1400323e2:	dec    r11d
   1400323e5:	add    r14d,r15d
   1400323e8:	sub    r10,r15
   1400323eb:	cmp    BYTE PTR [r10],bl
   1400323ee:	je     0x1400323e2
   1400323f0:	lea    r8,[rbp-0x41]
   1400323f4:	lea    rcx,[rbp-0x21]
   1400323f8:	mov    edx,r11d
   1400323fb:	call   0x140032884
   140032400:	cmp    DWORD PTR [rbp-0x75],ebx
   140032403:	jge    0x140032407
   140032405:	neg    esi
   140032407:	add    esi,r14d
   14003240a:	test   r13d,r13d
   14003240d:	jne    0x140032412
   14003240f:	add    esi,DWORD PTR [rbp+0x67]
   140032412:	cmp    DWORD PTR [rbp-0x79],ebx
   140032415:	jne    0x14003241a
   140032417:	sub    esi,DWORD PTR [rbp+0x6f]
   14003241a:	cmp    esi,0x1450
   140032420:	jg     0x14003279e
   140032426:	cmp    esi,0xffffebb0
   14003242c:	jl     0x140032790
   140032432:	lea    r14,[rip+0x14257]        # 0x140046690
   140032439:	sub    r14,0x60
   14003243d:	test   esi,esi
   14003243f:	je     0x14003277e
   140032445:	jns    0x140032454
   140032447:	lea    r14,[rip+0x143a2]        # 0x1400467f0
   14003244e:	neg    esi
   140032450:	sub    r14,0x60
   140032454:	cmp    DWORD PTR [rbp-0x6d],ebx
   140032457:	jne    0x14003245d
   140032459:	mov    WORD PTR [rbp-0x41],bx
   14003245d:	test   esi,esi
   14003245f:	je     0x14003277e
   140032465:	mov    edi,0x80000000
   14003246a:	mov    r9d,0x7fff
   140032470:	mov    eax,esi
   140032472:	add    r14,0x54
   140032476:	sar    esi,0x3
   140032479:	mov    QWORD PTR [rbp-0x61],r14
   14003247d:	and    eax,0x7
   140032480:	je     0x140032776
   140032486:	cdqe   
   140032488:	mov    r11d,0x8000
   14003248e:	lea    rcx,[rax+rax*2]
   140032492:	lea    rdx,[r14+rcx*4]
   140032496:	mov    QWORD PTR [rbp-0x69],rdx
   14003249a:	cmp    WORD PTR [rdx],r11w
   14003249e:	jb     0x1400324c5
   1400324a0:	mov    eax,DWORD PTR [rdx+0x8]
   1400324a3:	movsd  xmm0,QWORD PTR [rdx]
   1400324a7:	lea    rdx,[rbp-0x31]
   1400324ab:	mov    DWORD PTR [rbp-0x29],eax
   1400324ae:	movsd  QWORD PTR [rbp-0x31],xmm0
   1400324b3:	mov    rax,QWORD PTR [rbp-0x31]
   1400324b7:	shr    rax,0x10
   1400324bb:	mov    QWORD PTR [rbp-0x69],rdx
   1400324bf:	sub    eax,r15d
   1400324c2:	mov    DWORD PTR [rbp-0x2f],eax
   1400324c5:	movzx  eax,WORD PTR [rdx+0xa]
   1400324c9:	movzx  ecx,WORD PTR [rbp-0x37]
   1400324cd:	mov    QWORD PTR [rbp-0x51],rbx
   1400324d1:	movzx  r12d,ax
   1400324d5:	and    ax,r9w
   1400324d9:	mov    DWORD PTR [rbp-0x49],ebx
   1400324dc:	xor    r12w,cx
   1400324e0:	and    cx,r9w
   1400324e4:	and    r12w,r11w
   1400324e8:	lea    r8d,[rcx+rax*1]
   1400324ec:	cmp    cx,r9w
   1400324f0:	jae    0x140032762
   1400324f6:	cmp    ax,r9w
   1400324fa:	jae    0x140032762
   140032500:	mov    r10d,0xbffd
   140032506:	cmp    r8w,r10w
   14003250a:	ja     0x140032762
   140032510:	mov    r10d,0x3fbf
   140032516:	cmp    r8w,r10w
   14003251a:	ja     0x140032528
   14003251c:	mov    QWORD PTR [rbp-0x3d],rbx
   140032520:	mov    DWORD PTR [rbp-0x41],ebx
   140032523:	jmp    0x140032776
   140032528:	test   cx,cx
   14003252b:	jne    0x14003254d
   14003252d:	add    r8w,r15w
   140032531:	test   DWORD PTR [rbp-0x39],0x7fffffff
   140032538:	jne    0x14003254d
   14003253a:	cmp    DWORD PTR [rbp-0x3d],ebx
   14003253d:	jne    0x14003254d
   14003253f:	cmp    DWORD PTR [rbp-0x41],ebx
   140032542:	jne    0x14003254d
   140032544:	mov    WORD PTR [rbp-0x37],bx
   140032548:	jmp    0x140032776
   14003254d:	test   ax,ax
   140032550:	jne    0x140032568
   140032552:	add    r8w,r15w
   140032556:	test   DWORD PTR [rdx+0x8],0x7fffffff
   14003255d:	jne    0x140032568
   14003255f:	cmp    DWORD PTR [rdx+0x4],ebx
   140032562:	jne    0x140032568
   140032564:	cmp    DWORD PTR [rdx],ebx
   140032566:	je     0x14003251c
   140032568:	mov    r13d,ebx
   14003256b:	lea    r9,[rbp-0x51]
   14003256f:	mov    r10d,0x5
   140032575:	mov    DWORD PTR [rbp-0x79],r10d
   140032579:	test   r10d,r10d
   14003257c:	jle    0x1400325ef
   14003257e:	lea    eax,[r13*2+0x0]
   140032586:	lea    rdi,[rbp-0x41]
   14003258a:	lea    r14,[rdx+0x8]
   14003258e:	movsxd rcx,eax
   140032591:	mov    eax,r13d
   140032594:	and    eax,r15d
   140032597:	add    rdi,rcx
   14003259a:	mov    edx,eax
   14003259c:	movzx  eax,WORD PTR [r14]
   1400325a0:	movzx  ecx,WORD PTR [rdi]
   1400325a3:	mov    r11d,ebx
   1400325a6:	imul   ecx,eax
   1400325a9:	mov    eax,DWORD PTR [r9]
   1400325ac:	lea    r15d,[rax+rcx*1]
   1400325b0:	cmp    r15d,eax
   1400325b3:	jb     0x1400325ba
   1400325b5:	cmp    r15d,ecx
   1400325b8:	jae    0x1400325c0
   1400325ba:	mov    r11d,0x1
   1400325c0:	mov    DWORD PTR [r9],r15d
   1400325c3:	mov    r15d,0x1
   1400325c9:	test   r11d,r11d
   1400325cc:	je     0x1400325d3
   1400325ce:	add    WORD PTR [r9+0x4],r15w
   1400325d3:	mov    r11d,DWORD PTR [rbp-0x79]
   1400325d7:	add    rdi,0x2
   1400325db:	sub    r14,0x2
   1400325df:	sub    r11d,r15d
   1400325e2:	mov    DWORD PTR [rbp-0x79],r11d
   1400325e6:	test   r11d,r11d
   1400325e9:	jg     0x14003259c
   1400325eb:	mov    rdx,QWORD PTR [rbp-0x69]
   1400325ef:	sub    r10d,r15d
   1400325f2:	add    r9,0x2
   1400325f6:	add    r13d,r15d
   1400325f9:	test   r10d,r10d
   1400325fc:	jg     0x140032575
   140032602:	mov    r10d,DWORD PTR [rbp-0x49]
   140032606:	mov    r9d,DWORD PTR [rbp-0x51]
   14003260a:	mov    eax,0xc002
   14003260f:	add    r8w,ax
   140032613:	mov    edi,0x80000000
   140032618:	mov    r13d,0xffff
   14003261e:	test   r8w,r8w
   140032622:	jle    0x140032663
   140032624:	test   edi,r10d
   140032627:	jne    0x14003265d
   140032629:	mov    r11d,DWORD PTR [rbp-0x4d]
   14003262d:	mov    edx,r9d
   140032630:	add    r10d,r10d
   140032633:	shr    edx,0x1f
   140032636:	add    r9d,r9d
   140032639:	mov    ecx,r11d
   14003263c:	shr    ecx,0x1f
   14003263f:	lea    eax,[r11+r11*1]
   140032643:	add    r8w,r13w
   140032647:	or     eax,edx
   140032649:	or     r10d,ecx
   14003264c:	mov    DWORD PTR [rbp-0x51],r9d
   140032650:	mov    DWORD PTR [rbp-0x4d],eax
   140032653:	mov    DWORD PTR [rbp-0x49],r10d
   140032657:	test   r8w,r8w
   14003265b:	jg     0x140032624
   14003265d:	test   r8w,r8w
   140032661:	jg     0x1400326cd
   140032663:	add    r8w,r13w
   140032667:	jns    0x1400326cd
   140032669:	movzx  eax,r8w
   14003266d:	mov    edi,ebx
   14003266f:	neg    ax
   140032672:	movzx  edx,ax
   140032675:	add    r8w,dx
   140032679:	test   BYTE PTR [rbp-0x51],r15b
   14003267d:	je     0x140032682
   14003267f:	add    edi,r15d
   140032682:	mov    r11d,DWORD PTR [rbp-0x4d]
   140032686:	mov    eax,r10d
   140032689:	shr    r9d,1
   14003268c:	mov    ecx,r11d
   14003268f:	shl    eax,0x1f
   140032692:	shr    r11d,1
   140032695:	shl    ecx,0x1f
   140032698:	or     r11d,eax
   14003269b:	shr    r10d,1
   14003269e:	or     r9d,ecx
   1400326a1:	mov    DWORD PTR [rbp-0x4d],r11d
   1400326a5:	mov    DWORD PTR [rbp-0x51],r9d
   1400326a9:	sub    rdx,r15
   1400326ac:	jne    0x140032679
   1400326ae:	test   edi,edi
   1400326b0:	mov    DWORD PTR [rbp-0x49],r10d
   1400326b4:	mov    edi,0x80000000
   1400326b9:	je     0x1400326cd
   1400326bb:	movzx  eax,r9w
   1400326bf:	or     ax,r15w
   1400326c3:	mov    WORD PTR [rbp-0x51],ax
   1400326c7:	mov    r9d,DWORD PTR [rbp-0x51]
   1400326cb:	jmp    0x1400326d1
   1400326cd:	movzx  eax,WORD PTR [rbp-0x51]
   1400326d1:	mov    r14,QWORD PTR [rbp-0x61]
   1400326d5:	mov    r11d,0x8000
   1400326db:	cmp    ax,r11w
   1400326df:	ja     0x1400326f1
   1400326e1:	and    r9d,0x1ffff
   1400326e8:	cmp    r9d,0x18000
   1400326ef:	jne    0x140032739
   1400326f1:	mov    eax,DWORD PTR [rbp-0x4f]
   1400326f4:	or     ecx,0xffffffff
   1400326f7:	cmp    eax,ecx
   1400326f9:	jne    0x140032733
   1400326fb:	mov    eax,DWORD PTR [rbp-0x4b]
   1400326fe:	mov    DWORD PTR [rbp-0x4f],ebx
   140032701:	cmp    eax,ecx
   140032703:	jne    0x140032727
   140032705:	movzx  eax,WORD PTR [rbp-0x47]
   140032709:	mov    DWORD PTR [rbp-0x4b],ebx
   14003270c:	cmp    ax,r13w
   140032710:	jne    0x14003271d
   140032712:	mov    WORD PTR [rbp-0x47],r11w
   140032717:	add    r8w,r15w
   14003271b:	jmp    0x14003272d
   14003271d:	add    ax,r15w
   140032721:	mov    WORD PTR [rbp-0x47],ax
   140032725:	jmp    0x14003272d
   140032727:	add    eax,r15d
   14003272a:	mov    DWORD PTR [rbp-0x4b],eax
   14003272d:	mov    r10d,DWORD PTR [rbp-0x49]
   140032731:	jmp    0x140032739
   140032733:	add    eax,r15d
   140032736:	mov    DWORD PTR [rbp-0x4f],eax
   140032739:	mov    r9d,0x7fff
   14003273f:	cmp    r8w,r9w
   140032743:	jae    0x140032762
   140032745:	movzx  eax,WORD PTR [rbp-0x4f]
   140032749:	or     r8w,r12w
   14003274d:	mov    DWORD PTR [rbp-0x3b],r10d
   140032751:	mov    WORD PTR [rbp-0x41],ax
   140032755:	mov    eax,DWORD PTR [rbp-0x4d]
   140032758:	mov    WORD PTR [rbp-0x37],r8w
   14003275d:	mov    DWORD PTR [rbp-0x3f],eax
   140032760:	jmp    0x140032776
   140032762:	neg    r12w
   140032766:	mov    QWORD PTR [rbp-0x41],rbx
   14003276a:	sbb    eax,eax
   14003276c:	and    eax,edi
   14003276e:	add    eax,0x7fff8000
   140032773:	mov    DWORD PTR [rbp-0x39],eax
   140032776:	test   esi,esi
   140032778:	jne    0x140032470
   14003277e:	mov    eax,DWORD PTR [rbp-0x39]
   140032781:	movzx  edx,WORD PTR [rbp-0x41]
   140032785:	mov    ecx,DWORD PTR [rbp-0x3f]
   140032788:	mov    edi,DWORD PTR [rbp-0x3b]
   14003278b:	shr    eax,0x10
   14003278e:	jmp    0x1400327c3
   140032790:	mov    edx,ebx
   140032792:	movzx  eax,bx
   140032795:	mov    edi,ebx
   140032797:	mov    ecx,ebx
   140032799:	mov    ebx,r15d
   14003279c:	jmp    0x1400327c3
   14003279e:	mov    ecx,ebx
   1400327a0:	movzx  edx,bx
   1400327a3:	mov    eax,0x7fff
   1400327a8:	mov    ebx,0x2
   1400327ad:	mov    edi,0x80000000
   1400327b2:	jmp    0x1400327c3
   1400327b4:	movzx  edx,bx
   1400327b7:	movzx  eax,bx
   1400327ba:	mov    edi,ebx
   1400327bc:	mov    ecx,ebx
   1400327be:	mov    ebx,0x4
   1400327c3:	mov    r8,QWORD PTR [rbp-0x59]
   1400327c7:	or     ax,WORD PTR [rbp-0x71]
   1400327cb:	mov    WORD PTR [r8+0xa],ax
   1400327d0:	mov    eax,ebx
   1400327d2:	mov    WORD PTR [r8],dx
   1400327d6:	mov    DWORD PTR [r8+0x2],ecx
   1400327da:	mov    DWORD PTR [r8+0x6],edi
   1400327de:	mov    rcx,QWORD PTR [rbp-0x1]
   1400327e2:	xor    rcx,rsp
   1400327e5:	call   0x1400097d0
   1400327ea:	mov    rbx,QWORD PTR [rsp+0xf0]
   1400327f2:	add    rsp,0xa0
   1400327f9:	pop    r15
   1400327fb:	pop    r14
   1400327fd:	pop    r13
   1400327ff:	pop    r12
   140032801:	pop    rdi
   140032802:	pop    rsi
   140032803:	pop    rbp
   140032804:	ret    
   140032805:	int3   
   140032806:	int3   
   140032807:	int3   
   140032808:	mov    eax,DWORD PTR [rcx]
   14003280a:	mov    r10d,DWORD PTR [rdx]
   14003280d:	xor    r9d,r9d
   140032810:	lea    r8d,[rax+r10*1]
   140032814:	mov    r11,rdx
   140032817:	cmp    r8d,eax
   14003281a:	jb     0x140032821
   14003281c:	cmp    r8d,r10d
   14003281f:	jae    0x140032827
   140032821:	mov    r9d,0x1
   140032827:	mov    DWORD PTR [rcx],r8d
   14003282a:	test   r9d,r9d
   14003282d:	je     0x140032852
   14003282f:	mov    eax,DWORD PTR [rcx+0x4]
   140032832:	xor    r8d,r8d
   140032835:	lea    edx,[rax+0x1]
   140032838:	cmp    edx,eax
   14003283a:	jb     0x140032841
   14003283c:	cmp    edx,0x1
   14003283f:	jae    0x140032847
   140032841:	mov    r8d,0x1
   140032847:	mov    DWORD PTR [rcx+0x4],edx
   14003284a:	test   r8d,r8d
   14003284d:	je     0x140032852
   14003284f:	inc    DWORD PTR [rcx+0x8]
   140032852:	mov    eax,DWORD PTR [rcx+0x4]
   140032855:	mov    r9d,DWORD PTR [r11+0x4]
   140032859:	xor    r8d,r8d
   14003285c:	lea    edx,[rax+r9*1]
   140032860:	cmp    edx,eax
   140032862:	jb     0x140032869
   140032864:	cmp    edx,r9d
   140032867:	jae    0x14003286f
   140032869:	mov    r8d,0x1
   14003286f:	mov    DWORD PTR [rcx+0x4],edx
   140032872:	test   r8d,r8d
   140032875:	je     0x14003287a
   140032877:	inc    DWORD PTR [rcx+0x8]
   14003287a:	mov    eax,DWORD PTR [r11+0x8]
   14003287e:	add    DWORD PTR [rcx+0x8],eax
   140032881:	ret    
   140032882:	int3   
   140032883:	int3   
   140032884:	mov    QWORD PTR [rsp+0x8],rbx
   140032889:	mov    QWORD PTR [rsp+0x10],rbp
   14003288e:	mov    QWORD PTR [rsp+0x18],rsi
   140032893:	push   rdi
   140032894:	push   r12
   140032896:	push   r14
   140032898:	sub    rsp,0x10
   14003289c:	and    DWORD PTR [r8],0x0
   1400328a0:	and    DWORD PTR [r8+0x4],0x0
   1400328a5:	and    DWORD PTR [r8+0x8],0x0
   1400328aa:	mov    r10,r8
   1400328ad:	mov    edi,edx
   1400328af:	mov    rbp,rcx
   1400328b2:	mov    ebx,0x404e
   1400328b7:	test   edx,edx
   1400328b9:	je     0x140032a00
   1400328bf:	xor    r11d,r11d
   1400328c2:	xor    r8d,r8d
   1400328c5:	xor    r9d,r9d
   1400328c8:	lea    r12d,[r11+0x1]
   1400328cc:	movsd  xmm0,QWORD PTR [r10]
   1400328d1:	mov    r14d,DWORD PTR [r10+0x8]
   1400328d5:	mov    ecx,r8d
   1400328d8:	shr    ecx,0x1f
   1400328db:	add    r8d,r8d
   1400328de:	add    r9d,r9d
   1400328e1:	movsd  QWORD PTR [rsp],xmm0
   1400328e6:	or     r9d,ecx
   1400328e9:	lea    edx,[r11+r11*1]
   1400328ed:	mov    eax,r11d
   1400328f0:	shr    eax,0x1f
   1400328f3:	add    r9d,r9d
   1400328f6:	or     r8d,eax
   1400328f9:	mov    eax,edx
   1400328fb:	add    edx,edx
   1400328fd:	mov    ecx,r8d
   140032900:	shr    eax,0x1f
   140032903:	add    r8d,r8d
   140032906:	shr    ecx,0x1f
   140032909:	or     r8d,eax
   14003290c:	xor    eax,eax
   14003290e:	or     r9d,ecx
   140032911:	mov    ecx,DWORD PTR [rsp]
   140032914:	mov    DWORD PTR [r10],edx
   140032917:	lea    esi,[rdx+rcx*1]
   14003291a:	mov    DWORD PTR [r10+0x4],r8d
   14003291e:	mov    DWORD PTR [r10+0x8],r9d
   140032922:	cmp    esi,edx
   140032924:	jb     0x14003292a
   140032926:	cmp    esi,ecx
   140032928:	jae    0x14003292d
   14003292a:	mov    eax,r12d
   14003292d:	mov    DWORD PTR [r10],esi
   140032930:	test   eax,eax
   140032932:	je     0x140032958
   140032934:	mov    eax,r8d
   140032937:	inc    r8d
   14003293a:	xor    ecx,ecx
   14003293c:	cmp    r8d,eax
   14003293f:	jb     0x140032946
   140032941:	cmp    r8d,r12d
   140032944:	jae    0x140032949
   140032946:	mov    ecx,r12d
   140032949:	mov    DWORD PTR [r10+0x4],r8d
   14003294d:	test   ecx,ecx
   14003294f:	je     0x140032958
   140032951:	inc    r9d
   140032954:	mov    DWORD PTR [r10+0x8],r9d
   140032958:	mov    rax,QWORD PTR [rsp]
   14003295c:	xor    ecx,ecx
   14003295e:	shr    rax,0x20
   140032962:	lea    r11d,[r8+rax*1]
   140032966:	cmp    r11d,r8d
   140032969:	jb     0x140032970
   14003296b:	cmp    r11d,eax
   14003296e:	jae    0x140032973
   140032970:	mov    ecx,r12d
   140032973:	mov    DWORD PTR [r10+0x4],r11d
   140032977:	test   ecx,ecx
   140032979:	je     0x140032982
   14003297b:	add    r9d,r12d
   14003297e:	mov    DWORD PTR [r10+0x8],r9d
   140032982:	add    r9d,r14d
   140032985:	lea    edx,[rsi+rsi*1]
   140032988:	mov    ecx,r11d
   14003298b:	shr    ecx,0x1f
   14003298e:	lea    r8d,[r11+r11*1]
   140032992:	add    r9d,r9d
   140032995:	or     r9d,ecx
   140032998:	mov    eax,esi
   14003299a:	mov    DWORD PTR [r10],edx
   14003299d:	shr    eax,0x1f
   1400329a0:	mov    DWORD PTR [r10+0x8],r9d
   1400329a4:	or     r8d,eax
   1400329a7:	xor    eax,eax
   1400329a9:	mov    DWORD PTR [r10+0x4],r8d
   1400329ad:	movsx  ecx,BYTE PTR [rbp+0x0]
   1400329b1:	lea    r11d,[rdx+rcx*1]
   1400329b5:	cmp    r11d,edx
   1400329b8:	jb     0x1400329bf
   1400329ba:	cmp    r11d,ecx
   1400329bd:	jae    0x1400329c2
   1400329bf:	mov    eax,r12d
   1400329c2:	mov    DWORD PTR [r10],r11d
   1400329c5:	test   eax,eax
   1400329c7:	je     0x1400329ed
   1400329c9:	mov    eax,r8d
   1400329cc:	inc    r8d
   1400329cf:	xor    ecx,ecx
   1400329d1:	cmp    r8d,eax
   1400329d4:	jb     0x1400329db
   1400329d6:	cmp    r8d,r12d
   1400329d9:	jae    0x1400329de
   1400329db:	mov    ecx,r12d
   1400329de:	mov    DWORD PTR [r10+0x4],r8d
   1400329e2:	test   ecx,ecx
   1400329e4:	je     0x1400329ed
   1400329e6:	inc    r9d
   1400329e9:	mov    DWORD PTR [r10+0x8],r9d
   1400329ed:	add    rbp,r12
   1400329f0:	mov    DWORD PTR [r10+0x4],r8d
   1400329f4:	mov    DWORD PTR [r10+0x8],r9d
   1400329f8:	dec    edi
   1400329fa:	jne    0x1400328cc
   140032a00:	cmp    DWORD PTR [r10+0x8],0x0
   140032a05:	jne    0x140032a41
   140032a07:	mov    r8d,DWORD PTR [r10+0x4]
   140032a0b:	mov    edx,DWORD PTR [r10]
   140032a0e:	mov    eax,r8d
   140032a11:	mov    r9d,r8d
   140032a14:	shl    eax,0x10
   140032a17:	mov    ecx,edx
   140032a19:	shl    edx,0x10
   140032a1c:	shr    ecx,0x10
   140032a1f:	shr    r9d,0x10
   140032a23:	mov    DWORD PTR [r10],edx
   140032a26:	mov    r8d,ecx
   140032a29:	or     r8d,eax
   140032a2c:	mov    eax,0xfff0
   140032a31:	add    bx,ax
   140032a34:	test   r9d,r9d
   140032a37:	je     0x140032a0b
   140032a39:	mov    DWORD PTR [r10+0x4],r8d
   140032a3d:	mov    DWORD PTR [r10+0x8],r9d
   140032a41:	mov    edx,DWORD PTR [r10+0x8]
   140032a45:	mov    r11d,0x8000
   140032a4b:	test   r11d,edx
   140032a4e:	jne    0x140032a88
   140032a50:	mov    r9d,DWORD PTR [r10]
   140032a53:	mov    r8d,DWORD PTR [r10+0x4]
   140032a57:	mov    ecx,r8d
   140032a5a:	mov    eax,r9d
   140032a5d:	add    r8d,r8d
   140032a60:	shr    eax,0x1f
   140032a63:	add    edx,edx
   140032a65:	shr    ecx,0x1f
   140032a68:	or     r8d,eax
   140032a6b:	mov    eax,0xffff
   140032a70:	or     edx,ecx
   140032a72:	add    bx,ax
   140032a75:	add    r9d,r9d
   140032a78:	test   r11d,edx
   140032a7b:	je     0x140032a57
   140032a7d:	mov    DWORD PTR [r10],r9d
   140032a80:	mov    DWORD PTR [r10+0x4],r8d
   140032a84:	mov    DWORD PTR [r10+0x8],edx
   140032a88:	mov    rbp,QWORD PTR [rsp+0x38]
   140032a8d:	mov    rsi,QWORD PTR [rsp+0x40]
   140032a92:	mov    WORD PTR [r10+0xa],bx
   140032a97:	mov    rbx,QWORD PTR [rsp+0x30]
   140032a9c:	add    rsp,0x10
   140032aa0:	pop    r14
   140032aa2:	pop    r12
   140032aa4:	pop    rdi
   140032aa5:	ret    
   140032aa6:	int3   
   140032aa7:	int3   
   140032aa8:	lea    eax,[rcx+0x20]
   140032aab:	ret    
   140032aac:	mov    QWORD PTR [rsp+0x10],rdi
   140032ab1:	mov    QWORD PTR [rsp+0x20],r14
   140032ab6:	push   rbp
   140032ab7:	mov    rbp,rsp
   140032aba:	sub    rsp,0x70
   140032abe:	movsxd rdi,ecx
   140032ac1:	lea    rcx,[rbp-0x20]
   140032ac5:	call   0x140007ff0
   140032aca:	cmp    edi,0x100
   140032ad0:	jae    0x140032b2f
   140032ad2:	mov    rdx,QWORD PTR [rbp-0x20]
   140032ad6:	cmp    DWORD PTR [rdx+0xd4],0x1
   140032add:	jle    0x140032af5
   140032adf:	lea    r8,[rbp-0x20]
   140032ae3:	mov    edx,0x1
   140032ae8:	mov    ecx,edi
   140032aea:	call   0x14002c4c4
   140032aef:	mov    rdx,QWORD PTR [rbp-0x20]
   140032af3:	jmp    0x140032b03
   140032af5:	mov    rax,QWORD PTR [rdx+0x108]
   140032afc:	movzx  eax,WORD PTR [rax+rdi*2]
   140032b00:	and    eax,0x1
   140032b03:	test   eax,eax
   140032b05:	je     0x140032b17
   140032b07:	mov    rax,QWORD PTR [rdx+0x110]
   140032b0e:	movzx  eax,BYTE PTR [rax+rdi*1]
   140032b12:	jmp    0x140032bdb
   140032b17:	cmp    BYTE PTR [rbp-0x8],0x0
   140032b1b:	je     0x140032b28
   140032b1d:	mov    rax,QWORD PTR [rbp-0x10]
   140032b21:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140032b28:	mov    eax,edi
   140032b2a:	jmp    0x140032bec
   140032b2f:	mov    rax,QWORD PTR [rbp-0x20]
   140032b33:	cmp    DWORD PTR [rax+0xd4],0x1
   140032b3a:	jle    0x140032b67
   140032b3c:	mov    r14d,edi
   140032b3f:	lea    rdx,[rbp-0x20]
   140032b43:	sar    r14d,0x8
   140032b47:	movzx  ecx,r14b
   140032b4b:	call   0x14001d1f4
   140032b50:	test   eax,eax
   140032b52:	je     0x140032b67
   140032b54:	mov    BYTE PTR [rbp+0x10],r14b
   140032b58:	mov    BYTE PTR [rbp+0x11],dil
   140032b5c:	mov    BYTE PTR [rbp+0x12],0x0
   140032b60:	mov    ecx,0x2
   140032b65:	jmp    0x140032b7f
   140032b67:	call   0x14000b9f0
   140032b6c:	mov    ecx,0x1
   140032b71:	mov    DWORD PTR [rax],0x2a
   140032b77:	mov    BYTE PTR [rbp+0x10],dil
   140032b7b:	mov    BYTE PTR [rbp+0x11],0x0
   140032b7f:	mov    rdx,QWORD PTR [rbp-0x20]
   140032b83:	mov    DWORD PTR [rsp+0x40],0x1
   140032b8b:	lea    r9,[rbp+0x10]
   140032b8f:	mov    eax,DWORD PTR [rdx+0x4]
   140032b92:	mov    rdx,QWORD PTR [rdx+0x138]
   140032b99:	mov    r8d,0x100
   140032b9f:	mov    DWORD PTR [rsp+0x38],eax
   140032ba3:	lea    rax,[rbp+0x20]
   140032ba7:	mov    DWORD PTR [rsp+0x30],0x3
   140032baf:	mov    QWORD PTR [rsp+0x28],rax
   140032bb4:	mov    DWORD PTR [rsp+0x20],ecx
   140032bb8:	lea    rcx,[rbp-0x20]
   140032bbc:	call   0x1400211b4
   140032bc1:	test   eax,eax
   140032bc3:	je     0x140032b17
   140032bc9:	cmp    eax,0x1
   140032bcc:	movzx  eax,BYTE PTR [rbp+0x20]
   140032bd0:	je     0x140032bdb
   140032bd2:	movzx  ecx,BYTE PTR [rbp+0x21]
   140032bd6:	shl    eax,0x8
   140032bd9:	or     eax,ecx
   140032bdb:	cmp    BYTE PTR [rbp-0x8],0x0
   140032bdf:	je     0x140032bec
   140032be1:	mov    rcx,QWORD PTR [rbp-0x10]
   140032be5:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140032bec:	lea    r11,[rsp+0x70]
   140032bf1:	mov    rdi,QWORD PTR [r11+0x18]
   140032bf5:	mov    r14,QWORD PTR [r11+0x28]
   140032bf9:	mov    rsp,r11
   140032bfc:	pop    rbp
   140032bfd:	ret    
   140032bfe:	int3   
   140032bff:	int3   
   140032c00:	cmp    DWORD PTR [rip+0x14ded],0x0        # 0x1400479f4
   140032c07:	jne    0x140032c17
   140032c09:	lea    eax,[rcx-0x41]
   140032c0c:	cmp    eax,0x19
   140032c0f:	ja     0x140032c14
   140032c11:	add    ecx,0x20
   140032c14:	mov    eax,ecx
   140032c16:	ret    
   140032c17:	xor    edx,edx
   140032c19:	jmp    0x140032aac
   140032c1e:	int3   
   140032c1f:	int3   
   140032c20:	sub    rsp,0x18
   140032c24:	xor    r8d,r8d
   140032c27:	mov    r9,rcx
   140032c2a:	test   edx,edx
   140032c2c:	jne    0x140032c76
   140032c2e:	and    r9d,0xf
   140032c32:	mov    rdx,rcx
   140032c35:	xorps  xmm1,xmm1
   140032c38:	and    rdx,0xfffffffffffffff0
   140032c3c:	mov    ecx,r9d
   140032c3f:	or     r9d,0xffffffff
   140032c43:	shl    r9d,cl
   140032c46:	movdqa xmm0,XMMWORD PTR [rdx]
   140032c4a:	pcmpeqb xmm0,xmm1
   140032c4e:	pmovmskb eax,xmm0
   140032c52:	and    eax,r9d
   140032c55:	jne    0x140032c6b
   140032c57:	add    rdx,0x10
   140032c5b:	movdqa xmm0,XMMWORD PTR [rdx]
   140032c5f:	pcmpeqb xmm0,xmm1
   140032c63:	pmovmskb eax,xmm0
   140032c67:	test   eax,eax
   140032c69:	je     0x140032c57
   140032c6b:	bsf    eax,eax
   140032c6e:	add    rax,rdx
   140032c71:	jmp    0x140032d1c
   140032c76:	cmp    DWORD PTR [rip+0x134eb],0x2        # 0x140046168
   140032c7d:	jge    0x140032d21
   140032c83:	mov    r10,rcx
   140032c86:	movzx  eax,dl
   140032c89:	and    r9d,0xf
   140032c8d:	and    r10,0xfffffffffffffff0
   140032c91:	mov    ecx,eax
   140032c93:	xorps  xmm2,xmm2
   140032c96:	shl    ecx,0x8
   140032c99:	or     ecx,eax
   140032c9b:	movd   xmm0,ecx
   140032c9f:	mov    ecx,r9d
   140032ca2:	or     r9d,0xffffffff
   140032ca6:	shl    r9d,cl
   140032ca9:	pshuflw xmm1,xmm0,0x0
   140032cae:	movdqa xmm0,xmm2
   140032cb2:	pcmpeqb xmm0,XMMWORD PTR [r10]
   140032cb7:	pshufd xmm3,xmm1,0x0
   140032cbc:	pmovmskb ecx,xmm0
   140032cc0:	movdqa xmm0,xmm3
   140032cc4:	pcmpeqb xmm0,XMMWORD PTR [r10]
   140032cc9:	pmovmskb edx,xmm0
   140032ccd:	and    edx,r9d
   140032cd0:	and    ecx,r9d
   140032cd3:	jne    0x140032d03
   140032cd5:	bsr    ecx,edx
   140032cd8:	movdqa xmm1,xmm2
   140032cdc:	movdqa xmm0,xmm3
   140032ce0:	add    rcx,r10
   140032ce3:	test   edx,edx
   140032ce5:	cmovne r8,rcx
   140032ce9:	add    r10,0x10
   140032ced:	pcmpeqb xmm1,XMMWORD PTR [r10]
   140032cf2:	pcmpeqb xmm0,XMMWORD PTR [r10]
   140032cf7:	pmovmskb ecx,xmm1
   140032cfb:	pmovmskb edx,xmm0
   140032cff:	test   ecx,ecx
   140032d01:	je     0x140032cd5
   140032d03:	mov    eax,ecx
   140032d05:	neg    eax
   140032d07:	and    eax,ecx
   140032d09:	dec    eax
   140032d0b:	and    edx,eax
   140032d0d:	bsr    ecx,edx
   140032d10:	add    rcx,r10
   140032d13:	test   edx,edx
   140032d15:	cmovne r8,rcx
   140032d19:	mov    rax,r8
   140032d1c:	add    rsp,0x18
   140032d20:	ret    
   140032d21:	test   cl,0xf
   140032d24:	je     0x140032d3f
   140032d26:	movsx  eax,BYTE PTR [r9]
   140032d2a:	cmp    eax,edx
   140032d2c:	cmove  r8,r9
   140032d30:	cmp    BYTE PTR [r9],0x0
   140032d34:	je     0x140032d19
   140032d36:	inc    r9
   140032d39:	test   r9b,0xf
   140032d3d:	jne    0x140032d26
   140032d3f:	movzx  eax,dl
   140032d42:	movd   xmm0,eax
   140032d46:	pcmpistri xmm0,XMMWORD PTR [r9],0x40
   140032d4d:	jae    0x140032d5c
   140032d4f:	movsxd r8,ecx
   140032d52:	add    r8,r9
   140032d55:	pcmpistri xmm0,XMMWORD PTR [r9],0x40
   140032d5c:	je     0x140032d19
   140032d5e:	add    r9,0x10
   140032d62:	jmp    0x140032d46
   140032d64:	mov    QWORD PTR [rsp+0x8],rbx
   140032d69:	push   rdi
   140032d6a:	sub    rsp,0x20
   140032d6e:	mov    rbx,rcx
   140032d71:	mov    rcx,QWORD PTR [r9+0x10]
   140032d75:	xor    r10d,r10d
   140032d78:	test   rbx,rbx
   140032d7b:	jne    0x140032d95
   140032d7d:	call   0x14000b9f0
   140032d82:	mov    ebx,0x16
   140032d87:	mov    DWORD PTR [rax],ebx
   140032d89:	call   0x14000b8b8
   140032d8e:	mov    eax,ebx
   140032d90:	jmp    0x140032e24
   140032d95:	test   rdx,rdx
   140032d98:	je     0x140032d7d
   140032d9a:	mov    eax,r10d
   140032d9d:	test   r8d,r8d
   140032da0:	mov    BYTE PTR [rbx],r10b
   140032da3:	cmovg  eax,r8d
   140032da7:	inc    eax
   140032da9:	cdqe   
   140032dab:	cmp    rdx,rax
   140032dae:	ja     0x140032dbc
   140032db0:	call   0x14000b9f0
   140032db5:	mov    ebx,0x22
   140032dba:	jmp    0x140032d87
   140032dbc:	lea    rdi,[rbx+0x1]
   140032dc0:	mov    BYTE PTR [rbx],0x30
   140032dc3:	mov    rax,rdi
   140032dc6:	jmp    0x140032de2
   140032dc8:	cmp    BYTE PTR [rcx],r10b
   140032dcb:	je     0x140032dd5
   140032dcd:	movsx  edx,BYTE PTR [rcx]
   140032dd0:	inc    rcx
   140032dd3:	jmp    0x140032dda
   140032dd5:	mov    edx,0x30
   140032dda:	mov    BYTE PTR [rax],dl
   140032ddc:	inc    rax
   140032ddf:	dec    r8d
   140032de2:	test   r8d,r8d
   140032de5:	jg     0x140032dc8
   140032de7:	mov    BYTE PTR [rax],r10b
   140032dea:	js     0x140032e00
   140032dec:	cmp    BYTE PTR [rcx],0x35
   140032def:	jl     0x140032e00
   140032df1:	jmp    0x140032df6
   140032df3:	mov    BYTE PTR [rax],0x30
   140032df6:	dec    rax
   140032df9:	cmp    BYTE PTR [rax],0x39
   140032dfc:	je     0x140032df3
   140032dfe:	inc    BYTE PTR [rax]
   140032e00:	cmp    BYTE PTR [rbx],0x31
   140032e03:	jne    0x140032e0b
   140032e05:	inc    DWORD PTR [r9+0x4]
   140032e09:	jmp    0x140032e22
   140032e0b:	mov    rcx,rdi
   140032e0e:	call   0x14001ca40
   140032e13:	mov    rdx,rdi
   140032e16:	mov    rcx,rbx
   140032e19:	lea    r8,[rax+0x1]
   140032e1d:	call   0x14000b1c0
   140032e22:	xor    eax,eax
   140032e24:	mov    rbx,QWORD PTR [rsp+0x30]
   140032e29:	add    rsp,0x20
   140032e2d:	pop    rdi
   140032e2e:	ret    
   140032e2f:	int3   
   140032e30:	mov    QWORD PTR [rsp+0x8],rbx
   140032e35:	movzx  r11d,WORD PTR [rdx+0x6]
   140032e3a:	mov    r10,rcx
   140032e3d:	mov    ecx,DWORD PTR [rdx+0x4]
   140032e40:	movzx  r8d,r11w
   140032e44:	mov    eax,0x8000
   140032e49:	mov    r9d,0x7ff
   140032e4f:	shr    r8w,0x4
   140032e54:	and    r11w,ax
   140032e58:	mov    eax,DWORD PTR [rdx]
   140032e5a:	and    r8w,r9w
   140032e5e:	and    ecx,0xfffff
   140032e64:	mov    ebx,0x80000000
   140032e69:	movzx  edx,r8w
   140032e6d:	test   edx,edx
   140032e6f:	je     0x140032e89
   140032e71:	cmp    edx,r9d
   140032e74:	je     0x140032e81
   140032e76:	mov    edx,0x3c00
   140032e7b:	add    r8w,dx
   140032e7f:	jmp    0x140032ea5
   140032e81:	mov    r8d,0x7fff
   140032e87:	jmp    0x140032ea5
   140032e89:	test   ecx,ecx
   140032e8b:	jne    0x140032e9a
   140032e8d:	test   eax,eax
   140032e8f:	jne    0x140032e9a
   140032e91:	and    DWORD PTR [r10+0x4],eax
   140032e95:	and    DWORD PTR [r10],eax
   140032e98:	jmp    0x140032ef2
   140032e9a:	mov    edx,0x3c01
   140032e9f:	add    r8w,dx
   140032ea3:	xor    ebx,ebx
   140032ea5:	mov    r9d,eax
   140032ea8:	shl    ecx,0xb
   140032eab:	shl    eax,0xb
   140032eae:	shr    r9d,0x15
   140032eb2:	mov    DWORD PTR [r10],eax
   140032eb5:	or     r9d,ecx
   140032eb8:	or     r9d,ebx
   140032ebb:	mov    DWORD PTR [r10+0x4],r9d
   140032ebf:	test   r9d,r9d
   140032ec2:	js     0x140032eee
   140032ec4:	mov    edx,DWORD PTR [r10]
   140032ec7:	lea    eax,[r9+r9*1]
   140032ecb:	mov    ecx,edx
   140032ecd:	shr    ecx,0x1f
   140032ed0:	mov    r9d,ecx
   140032ed3:	or     r9d,eax
   140032ed6:	lea    eax,[rdx+rdx*1]
   140032ed9:	mov    DWORD PTR [r10],eax
   140032edc:	mov    eax,0xffff
   140032ee1:	add    r8w,ax
   140032ee5:	test   r9d,r9d
   140032ee8:	jns    0x140032ec4
   140032eea:	mov    DWORD PTR [r10+0x4],r9d
   140032eee:	or     r11w,r8w
   140032ef2:	mov    rbx,QWORD PTR [rsp+0x8]
   140032ef7:	mov    WORD PTR [r10+0x8],r11w
   140032efc:	ret    
   140032efd:	int3   
   140032efe:	int3   
   140032eff:	int3   
   140032f00:	rex push rbp
   140032f02:	push   rbx
   140032f03:	push   rsi
   140032f04:	push   rdi
   140032f05:	lea    rbp,[rsp-0x3f]
   140032f0a:	sub    rsp,0x88
   140032f11:	mov    rax,QWORD PTR [rip+0x12358]        # 0x140045270
   140032f18:	xor    rax,rsp
   140032f1b:	mov    QWORD PTR [rbp+0x27],rax
   140032f1f:	mov    rdi,rdx
   140032f22:	mov    QWORD PTR [rbp-0x19],rcx
   140032f26:	lea    rdx,[rbp-0x19]
   140032f2a:	lea    rcx,[rbp-0x9]
   140032f2e:	mov    rbx,r9
   140032f31:	mov    rsi,r8
   140032f34:	call   0x140032e30
   140032f39:	movzx  eax,WORD PTR [rbp-0x1]
   140032f3d:	xor    r8d,r8d
   140032f40:	movsd  xmm0,QWORD PTR [rbp-0x9]
   140032f45:	movsd  QWORD PTR [rbp-0x19],xmm0
   140032f4a:	lea    r9,[rbp+0x7]
   140032f4e:	lea    rcx,[rbp-0x19]
   140032f52:	lea    edx,[r8+0x11]
   140032f56:	mov    WORD PTR [rbp-0x11],ax
   140032f5a:	call   0x140032ff4
   140032f5f:	movsx  ecx,BYTE PTR [rbp+0x9]
   140032f63:	mov    DWORD PTR [rdi],ecx
   140032f65:	movsx  ecx,WORD PTR [rbp+0x7]
   140032f69:	lea    r8,[rbp+0xb]
   140032f6d:	mov    DWORD PTR [rdi+0x4],ecx
   140032f70:	mov    rdx,rbx
   140032f73:	mov    rcx,rsi
   140032f76:	mov    DWORD PTR [rdi+0x8],eax
   140032f79:	call   0x140009b0c
   140032f7e:	test   eax,eax
   140032f80:	jne    0x140032fa1
   140032f82:	mov    QWORD PTR [rdi+0x10],rsi
   140032f86:	mov    rax,rdi
   140032f89:	mov    rcx,QWORD PTR [rbp+0x27]
   140032f8d:	xor    rcx,rsp
   140032f90:	call   0x1400097d0
   140032f95:	add    rsp,0x88
   140032f9c:	pop    rdi
   140032f9d:	pop    rsi
   140032f9e:	pop    rbx
   140032f9f:	pop    rbp
   140032fa0:	ret    
   140032fa1:	and    QWORD PTR [rsp+0x20],0x0
   140032fa7:	xor    r9d,r9d
   140032faa:	xor    r8d,r8d
   140032fad:	xor    edx,edx
   140032faf:	xor    ecx,ecx
   140032fb1:	call   0x14000b908
   140032fb6:	int3   
   140032fb7:	int3   
   140032fb8:	mov    eax,DWORD PTR [rip+0x15d9e]        # 0x140048d5c
   140032fbe:	ret    
   140032fbf:	int3   
   140032fc0:	rex push rbx
   140032fc2:	sub    rsp,0x20
   140032fc6:	mov    ebx,DWORD PTR [rip+0x15d90]        # 0x140048d5c
   140032fcc:	test   ecx,0xfffffffe
   140032fd2:	je     0x140032fe6
   140032fd4:	call   0x14000b9f0
   140032fd9:	mov    DWORD PTR [rax],0x16
   140032fdf:	call   0x14000b8b8
   140032fe4:	jmp    0x140032fec
   140032fe6:	mov    DWORD PTR [rip+0x15d70],ecx        # 0x140048d5c
   140032fec:	mov    eax,ebx
   140032fee:	add    rsp,0x20
   140032ff2:	pop    rbx
   140032ff3:	ret    
   140032ff4:	mov    QWORD PTR [rsp+0x10],rbx
   140032ff9:	push   rbp
   140032ffa:	push   rsi
   140032ffb:	push   rdi
   140032ffc:	push   r12
   140032ffe:	push   r13
   140033000:	push   r14
   140033002:	push   r15
   140033004:	lea    rbp,[rsp-0x27]
   140033009:	sub    rsp,0xc0
   140033010:	mov    rax,QWORD PTR [rip+0x12259]        # 0x140045270
   140033017:	xor    rax,rsp
   14003301a:	mov    QWORD PTR [rbp+0x17],rax
   14003301e:	movzx  r10d,WORD PTR [rcx+0x8]
   140033023:	mov    rbx,r9
   140033026:	mov    r9d,DWORD PTR [rcx]
   140033029:	mov    DWORD PTR [rbp-0x4d],edx
   14003302c:	mov    edx,0x8000
   140033031:	mov    r11d,0x1
   140033037:	mov    DWORD PTR [rbp-0x39],r8d
   14003303b:	mov    r8d,DWORD PTR [rcx+0x4]
   14003303f:	movzx  ecx,r10w
   140033043:	and    cx,dx
   140033046:	lea    r13d,[rdx-0x1]
   14003304a:	lea    eax,[r11+0x1f]
   14003304e:	xor    r12d,r12d
   140033051:	and    r10w,r13w
   140033055:	mov    QWORD PTR [rbp-0x41],rbx
   140033059:	mov    DWORD PTR [rbp-0x9],0xcccccccc
   140033060:	mov    DWORD PTR [rbp-0x5],0xcccccccc
   140033067:	mov    DWORD PTR [rbp-0x1],0x3ffbcccc
   14003306e:	mov    WORD PTR [rbp-0x67],cx
   140033072:	lea    edi,[rax+0xd]
   140033075:	test   cx,cx
   140033078:	je     0x140033080
   14003307a:	mov    BYTE PTR [rbx+0x2],dil
   14003307e:	jmp    0x140033083
   140033080:	mov    BYTE PTR [rbx+0x2],al
   140033083:	test   r10w,r10w
   140033087:	jne    0x1400330b7
   140033089:	test   r8d,r8d
   14003308c:	jne    0x140033186
   140033092:	test   r9d,r9d
   140033095:	jne    0x140033186
   14003309b:	cmp    cx,dx
   14003309e:	cmove  eax,edi
   1400330a1:	mov    WORD PTR [rbx],r12w
   1400330a5:	mov    BYTE PTR [rbx+0x2],al
   1400330a8:	mov    WORD PTR [rbx+0x3],0x3001
   1400330ae:	mov    BYTE PTR [rbx+0x5],r12b
   1400330b2:	jmp    0x140033a12
   1400330b7:	cmp    r10w,r13w
   1400330bb:	jne    0x140033186
   1400330c1:	mov    esi,0x80000000
   1400330c6:	mov    WORD PTR [rbx],r11w
   1400330ca:	cmp    r8d,esi
   1400330cd:	jne    0x1400330d4
   1400330cf:	test   r9d,r9d
   1400330d2:	je     0x1400330fd
   1400330d4:	bt     r8d,0x1e
   1400330d9:	jb     0x1400330fd
   1400330db:	lea    rcx,[rbx+0x4]
   1400330df:	lea    r8,[rip+0xc152]        # 0x14003f238
   1400330e6:	mov    edx,0x16
   1400330eb:	call   0x140009b0c
   1400330f0:	test   eax,eax
   1400330f2:	je     0x14003317a
   1400330f8:	jmp    0x140033a78
   1400330fd:	test   cx,cx
   140033100:	je     0x14003312d
   140033102:	cmp    r8d,0xc0000000
   140033109:	jne    0x14003312d
   14003310b:	test   r9d,r9d
   14003310e:	jne    0x14003315d
   140033110:	lea    rcx,[rbx+0x4]
   140033114:	lea    r8,[rip+0xc125]        # 0x14003f240
   14003311b:	lea    edx,[r9+0x16]
   14003311f:	call   0x140009b0c
   140033124:	test   eax,eax
   140033126:	je     0x140033153
   140033128:	jmp    0x140033a8d
   14003312d:	cmp    r8d,esi
   140033130:	jne    0x14003315d
   140033132:	test   r9d,r9d
   140033135:	jne    0x14003315d
   140033137:	lea    rcx,[rbx+0x4]
   14003313b:	lea    r8,[rip+0xc106]        # 0x14003f248
   140033142:	lea    edx,[r9+0x16]
   140033146:	call   0x140009b0c
   14003314b:	test   eax,eax
   14003314d:	jne    0x140033aa2
   140033153:	mov    eax,0x5
   140033158:	mov    BYTE PTR [rbx+0x3],al
   14003315b:	jmp    0x14003317e
   14003315d:	lea    rcx,[rbx+0x4]
   140033161:	lea    r8,[rip+0xc0e8]        # 0x14003f250
   140033168:	mov    edx,0x16
   14003316d:	call   0x140009b0c
   140033172:	test   eax,eax
   140033174:	jne    0x140033ab7
   14003317a:	mov    BYTE PTR [rbx+0x3],0x6
   14003317e:	mov    r11d,r12d
   140033181:	jmp    0x140033a12
   140033186:	movzx  edx,r10w
   14003318a:	mov    DWORD PTR [rbp-0x17],r9d
   14003318e:	mov    WORD PTR [rbp-0xf],r10w
   140033193:	mov    ecx,r8d
   140033196:	mov    eax,edx
   140033198:	lea    r9,[rip+0x134f1]        # 0x140046690
   14003319f:	shr    ecx,0x18
   1400331a2:	shr    eax,0x8
   1400331a5:	mov    r15d,0x80000000
   1400331ab:	lea    eax,[rax+rcx*2]
   1400331ae:	mov    r14d,0x5
   1400331b4:	sub    r9,0x60
   1400331b8:	mov    DWORD PTR [rbp-0x13],r8d
   1400331bc:	mov    WORD PTR [rbp-0x19],r12w
   1400331c1:	mov    esi,0xbffd
   1400331c6:	imul   ecx,eax,0x4d
   1400331c9:	imul   eax,edx,0x4d10
   1400331cf:	add    eax,0xecbced0c
   1400331d4:	mov    DWORD PTR [rbp-0x49],r14d
   1400331d8:	lea    edi,[r15-0x1]
   1400331dc:	add    ecx,eax
   1400331de:	sar    ecx,0x10
   1400331e1:	movsx  r10d,cx
   1400331e5:	mov    DWORD PTR [rbp-0x61],ecx
   1400331e8:	neg    r10d
   1400331eb:	je     0x140033560
   1400331f1:	test   r10d,r10d
   1400331f4:	jns    0x140033207
   1400331f6:	lea    r9,[rip+0x135f3]        # 0x1400467f0
   1400331fd:	neg    r10d
   140033200:	sub    r9,0x60
   140033204:	test   r10d,r10d
   140033207:	je     0x140033560
   14003320d:	mov    r8d,DWORD PTR [rbp-0x15]
   140033211:	mov    edx,DWORD PTR [rbp-0x19]
   140033214:	mov    eax,r10d
   140033217:	add    r9,0x54
   14003321b:	sar    r10d,0x3
   14003321f:	mov    DWORD PTR [rbp-0x51],r10d
   140033223:	mov    QWORD PTR [rbp-0x59],r9
   140033227:	and    eax,0x7
   14003322a:	je     0x140033549
   140033230:	cdqe   
   140033232:	lea    rcx,[rax+rax*2]
   140033236:	lea    rsi,[r9+rcx*4]
   14003323a:	mov    r9d,0x8000
   140033240:	mov    QWORD PTR [rbp-0x31],rsi
   140033244:	cmp    WORD PTR [rsi],r9w
   140033248:	jb     0x14003326f
   14003324a:	mov    eax,DWORD PTR [rsi+0x8]
   14003324d:	movsd  xmm0,QWORD PTR [rsi]
   140033251:	lea    rsi,[rbp+0x7]
   140033255:	mov    DWORD PTR [rbp+0xf],eax
   140033258:	movsd  QWORD PTR [rbp+0x7],xmm0
   14003325d:	mov    rax,QWORD PTR [rbp+0x7]
   140033261:	shr    rax,0x10
   140033265:	mov    QWORD PTR [rbp-0x31],rsi
   140033269:	sub    eax,r11d
   14003326c:	mov    DWORD PTR [rbp+0x9],eax
   14003326f:	movzx  ecx,WORD PTR [rsi+0xa]
   140033273:	movzx  eax,WORD PTR [rbp-0xf]
   140033277:	mov    DWORD PTR [rbp-0x65],r12d
   14003327b:	movzx  ebx,cx
   14003327e:	and    cx,r13w
   140033282:	mov    QWORD PTR [rbp-0x29],0x0
   14003328a:	xor    bx,ax
   14003328d:	and    ax,r13w
   140033291:	mov    DWORD PTR [rbp-0x21],r12d
   140033295:	and    bx,r9w
   140033299:	lea    r9d,[rax+rcx*1]
   14003329d:	mov    WORD PTR [rbp-0x69],bx
   1400332a1:	cmp    ax,r13w
   1400332a5:	jae    0x140033528
   1400332ab:	cmp    cx,r13w
   1400332af:	jae    0x140033528
   1400332b5:	mov    r13d,0xbffd
   1400332bb:	cmp    r9w,r13w
   1400332bf:	ja     0x140033522
   1400332c5:	mov    ebx,0x3fbf
   1400332ca:	cmp    r9w,bx
   1400332ce:	ja     0x1400332e3
   1400332d0:	mov    QWORD PTR [rbp-0x15],0x0
   1400332d8:	mov    r13d,0x7fff
   1400332de:	jmp    0x14003353c
   1400332e3:	test   ax,ax
   1400332e6:	jne    0x14003330a
   1400332e8:	add    r9w,r11w
   1400332ec:	test   DWORD PTR [rbp-0x11],edi
   1400332ef:	jne    0x14003330a
   1400332f1:	test   r8d,r8d
   1400332f4:	jne    0x14003330a
   1400332f6:	test   edx,edx
   1400332f8:	jne    0x14003330a
   1400332fa:	mov    WORD PTR [rbp-0xf],r12w
   1400332ff:	mov    r13d,0x7fff
   140033305:	jmp    0x140033545
   14003330a:	test   cx,cx
   14003330d:	jne    0x140033323
   14003330f:	add    r9w,r11w
   140033313:	test   DWORD PTR [rsi+0x8],edi
   140033316:	jne    0x140033323
   140033318:	cmp    DWORD PTR [rsi+0x4],r12d
   14003331c:	jne    0x140033323
   14003331e:	cmp    DWORD PTR [rsi],r12d
   140033321:	je     0x1400332d0
   140033323:	mov    edi,r14d
   140033326:	lea    rdx,[rbp-0x29]
   14003332a:	xor    r14d,r14d
   14003332d:	mov    r13d,edi
   140033330:	test   edi,edi
   140033332:	jle    0x140033393
   140033334:	lea    eax,[r12+r12*1]
   140033338:	lea    r14,[rbp-0x19]
   14003333c:	mov    ebx,r12d
   14003333f:	movsxd rcx,eax
   140033342:	and    ebx,r11d
   140033345:	lea    r15,[rsi+0x8]
   140033349:	add    r14,rcx
   14003334c:	xor    esi,esi
   14003334e:	movzx  eax,WORD PTR [r15]
   140033352:	movzx  ecx,WORD PTR [r14]
   140033356:	mov    r10d,esi
   140033359:	imul   ecx,eax
   14003335c:	mov    eax,DWORD PTR [rdx]
   14003335e:	lea    r8d,[rax+rcx*1]
   140033362:	cmp    r8d,eax
   140033365:	jb     0x14003336c
   140033367:	cmp    r8d,ecx
   14003336a:	jae    0x14003336f
   14003336c:	mov    r10d,r11d
   14003336f:	mov    DWORD PTR [rdx],r8d
   140033372:	test   r10d,r10d
   140033375:	je     0x14003337c
   140033377:	add    WORD PTR [rdx+0x4],r11w
   14003337c:	sub    r13d,r11d
   14003337f:	add    r14,0x2
   140033383:	sub    r15,0x2
   140033387:	test   r13d,r13d
   14003338a:	jg     0x14003334e
   14003338c:	mov    rsi,QWORD PTR [rbp-0x31]
   140033390:	xor    r14d,r14d
   140033393:	sub    edi,r11d
   140033396:	add    rdx,0x2
   14003339a:	add    r12d,r11d
   14003339d:	test   edi,edi
   14003339f:	jg     0x14003332d
   1400333a1:	mov    r10d,DWORD PTR [rbp-0x21]
   1400333a5:	mov    r8d,DWORD PTR [rbp-0x29]
   1400333a9:	mov    eax,0xc002
   1400333ae:	add    r9w,ax
   1400333b2:	xor    r12d,r12d
   1400333b5:	mov    ebx,0xffff
   1400333ba:	mov    r15d,0x80000000
   1400333c0:	test   r9w,r9w
   1400333c4:	jle    0x140033402
   1400333c6:	test   r15d,r10d
   1400333c9:	jne    0x1400333fc
   1400333cb:	mov    edi,DWORD PTR [rbp-0x25]
   1400333ce:	mov    edx,r8d
   1400333d1:	add    r10d,r10d
   1400333d4:	shr    edx,0x1f
   1400333d7:	add    r8d,r8d
   1400333da:	mov    ecx,edi
   1400333dc:	shr    ecx,0x1f
   1400333df:	lea    eax,[rdi+rdi*1]
   1400333e2:	add    r9w,bx
   1400333e6:	or     eax,edx
   1400333e8:	or     r10d,ecx
   1400333eb:	mov    DWORD PTR [rbp-0x29],r8d
   1400333ef:	mov    DWORD PTR [rbp-0x25],eax
   1400333f2:	mov    DWORD PTR [rbp-0x21],r10d
   1400333f6:	test   r9w,r9w
   1400333fa:	jg     0x1400333c6
   1400333fc:	test   r9w,r9w
   140033400:	jg     0x14003346f
   140033402:	add    r9w,bx
   140033406:	jns    0x14003346f
   140033408:	movzx  eax,r9w
   14003340c:	neg    ax
   14003340f:	movzx  edx,ax
   140033412:	add    r9w,dx
   140033416:	mov    WORD PTR [rbp-0x5d],r9w
   14003341b:	mov    r9d,DWORD PTR [rbp-0x65]
   14003341f:	test   BYTE PTR [rbp-0x29],r11b
   140033423:	je     0x140033428
   140033425:	add    r9d,r11d
   140033428:	mov    edi,DWORD PTR [rbp-0x25]
   14003342b:	mov    eax,r10d
   14003342e:	shr    r8d,1
   140033431:	mov    ecx,edi
   140033433:	shl    eax,0x1f
   140033436:	shr    edi,1
   140033438:	shl    ecx,0x1f
   14003343b:	or     edi,eax
   14003343d:	shr    r10d,1
   140033440:	or     r8d,ecx
   140033443:	mov    DWORD PTR [rbp-0x25],edi
   140033446:	mov    DWORD PTR [rbp-0x29],r8d
   14003344a:	sub    rdx,r11
   14003344d:	jne    0x14003341f
   14003344f:	test   r9d,r9d
   140033452:	movzx  r9d,WORD PTR [rbp-0x5d]
   140033457:	mov    DWORD PTR [rbp-0x21],r10d
   14003345b:	je     0x14003346f
   14003345d:	movzx  eax,r8w
   140033461:	or     ax,r11w
   140033465:	mov    WORD PTR [rbp-0x29],ax
   140033469:	mov    r8d,DWORD PTR [rbp-0x29]
   14003346d:	jmp    0x140033473
   14003346f:	movzx  eax,WORD PTR [rbp-0x29]
   140033473:	mov    ecx,0x8000
   140033478:	cmp    ax,cx
   14003347b:	ja     0x14003348d
   14003347d:	and    r8d,0x1ffff
   140033484:	cmp    r8d,0x18000
   14003348b:	jne    0x1400334d5
   14003348d:	mov    eax,DWORD PTR [rbp-0x27]
   140033490:	or     edx,0xffffffff
   140033493:	cmp    eax,edx
   140033495:	jne    0x1400334cf
   140033497:	mov    eax,DWORD PTR [rbp-0x23]
   14003349a:	mov    DWORD PTR [rbp-0x27],r12d
   14003349e:	cmp    eax,edx
   1400334a0:	jne    0x1400334c3
   1400334a2:	movzx  eax,WORD PTR [rbp-0x1f]
   1400334a6:	mov    DWORD PTR [rbp-0x23],r12d
   1400334aa:	cmp    ax,bx
   1400334ad:	jne    0x1400334b9
   1400334af:	mov    WORD PTR [rbp-0x1f],cx
   1400334b3:	add    r9w,r11w
   1400334b7:	jmp    0x1400334c9
   1400334b9:	add    ax,r11w
   1400334bd:	mov    WORD PTR [rbp-0x1f],ax
   1400334c1:	jmp    0x1400334c9
   1400334c3:	add    eax,r11d
   1400334c6:	mov    DWORD PTR [rbp-0x23],eax
   1400334c9:	mov    r10d,DWORD PTR [rbp-0x21]
   1400334cd:	jmp    0x1400334d5
   1400334cf:	add    eax,r11d
   1400334d2:	mov    DWORD PTR [rbp-0x27],eax
   1400334d5:	mov    r13d,0x7fff
   1400334db:	mov    r14d,0x5
   1400334e1:	mov    edi,0x7fffffff
   1400334e6:	cmp    r9w,r13w
   1400334ea:	jb     0x1400334f9
   1400334ec:	movzx  eax,WORD PTR [rbp-0x69]
   1400334f0:	mov    r10d,DWORD PTR [rbp-0x51]
   1400334f4:	neg    ax
   1400334f7:	jmp    0x14003352b
   1400334f9:	movzx  eax,WORD PTR [rbp-0x27]
   1400334fd:	or     r9w,WORD PTR [rbp-0x69]
   140033502:	mov    DWORD PTR [rbp-0x13],r10d
   140033506:	mov    r10d,DWORD PTR [rbp-0x51]
   14003350a:	mov    WORD PTR [rbp-0x19],ax
   14003350e:	mov    eax,DWORD PTR [rbp-0x25]
   140033511:	mov    DWORD PTR [rbp-0x17],eax
   140033514:	mov    r8d,DWORD PTR [rbp-0x15]
   140033518:	mov    edx,DWORD PTR [rbp-0x19]
   14003351b:	mov    WORD PTR [rbp-0xf],r9w
   140033520:	jmp    0x140033545
   140033522:	mov    r13d,0x7fff
   140033528:	neg    bx
   14003352b:	sbb    eax,eax
   14003352d:	mov    DWORD PTR [rbp-0x15],r12d
   140033531:	and    eax,r15d
   140033534:	add    eax,0x7fff8000
   140033539:	mov    DWORD PTR [rbp-0x11],eax
   14003353c:	mov    edx,r12d
   14003353f:	mov    r8d,r12d
   140033542:	mov    DWORD PTR [rbp-0x19],edx
   140033545:	mov    r9,QWORD PTR [rbp-0x59]
   140033549:	test   r10d,r10d
   14003354c:	jne    0x140033214
   140033552:	mov    rbx,QWORD PTR [rbp-0x41]
   140033556:	mov    ecx,DWORD PTR [rbp-0x61]
   140033559:	mov    esi,0xbffd
   14003355e:	jmp    0x140033567
   140033560:	mov    r8d,DWORD PTR [rbp-0x15]
   140033564:	mov    edx,DWORD PTR [rbp-0x19]
   140033567:	mov    eax,DWORD PTR [rbp-0x11]
   14003356a:	mov    r9d,0x3fff
   140033570:	shr    eax,0x10
   140033573:	cmp    ax,r9w
   140033577:	jb     0x140033833
   14003357d:	add    cx,r11w
   140033581:	mov    r9d,0x8000
   140033587:	mov    DWORD PTR [rbp-0x65],r12d
   14003358b:	lea    r10d,[r9-0x1]
   14003358f:	mov    DWORD PTR [rbp-0x61],ecx
   140033592:	movzx  ecx,WORD PTR [rbp+0x1]
   140033596:	movzx  r13d,cx
   14003359a:	and    cx,r10w
   14003359e:	mov    QWORD PTR [rbp-0x29],0x0
   1400335a6:	xor    r13w,ax
   1400335aa:	and    ax,r10w
   1400335ae:	mov    DWORD PTR [rbp-0x21],r12d
   1400335b2:	and    r13w,r9w
   1400335b6:	lea    r9d,[rax+rcx*1]
   1400335ba:	cmp    ax,r10w
   1400335be:	jae    0x14003381c
   1400335c4:	cmp    cx,r10w
   1400335c8:	jae    0x14003381c
   1400335ce:	cmp    r9w,si
   1400335d2:	ja     0x14003381c
   1400335d8:	mov    r10d,0x3fbf
   1400335de:	cmp    r9w,r10w
   1400335e2:	ja     0x1400335ed
   1400335e4:	mov    DWORD PTR [rbp-0x11],r12d
   1400335e8:	jmp    0x14003382d
   1400335ed:	test   ax,ax
   1400335f0:	jne    0x14003360e
   1400335f2:	add    r9w,r11w
   1400335f6:	test   DWORD PTR [rbp-0x11],edi
   1400335f9:	jne    0x14003360e
   1400335fb:	test   r8d,r8d
   1400335fe:	jne    0x14003360e
   140033600:	test   edx,edx
   140033602:	jne    0x14003360e
   140033604:	mov    WORD PTR [rbp-0xf],r12w
   140033609:	jmp    0x140033833
   14003360e:	test   cx,cx
   140033611:	jne    0x140033628
   140033613:	add    r9w,r11w
   140033617:	test   DWORD PTR [rbp-0x1],edi
   14003361a:	jne    0x140033628
   14003361c:	cmp    DWORD PTR [rbp-0x5],r12d
   140033620:	jne    0x140033628
   140033622:	cmp    DWORD PTR [rbp-0x9],r12d
   140033626:	je     0x1400335e4
   140033628:	mov    edi,r12d
   14003362b:	lea    rdx,[rbp-0x29]
   14003362f:	mov    esi,r14d
   140033632:	test   r14d,r14d
   140033635:	jle    0x140033694
   140033637:	lea    eax,[rdi+rdi*1]
   14003363a:	lea    r15,[rbp-0x19]
   14003363e:	mov    r12d,edi
   140033641:	movsxd rcx,eax
   140033644:	and    r12d,r11d
   140033647:	lea    r14,[rbp-0x1]
   14003364b:	add    r15,rcx
   14003364e:	xor    ebx,ebx
   140033650:	movzx  eax,WORD PTR [r15]
   140033654:	movzx  ecx,WORD PTR [r14]
   140033658:	mov    r8d,ebx
   14003365b:	imul   ecx,eax
   14003365e:	mov    eax,DWORD PTR [rdx]
   140033660:	lea    r10d,[rax+rcx*1]
   140033664:	cmp    r10d,eax
   140033667:	jb     0x14003366e
   140033669:	cmp    r10d,ecx
   14003366c:	jae    0x140033671
   14003366e:	mov    r8d,r11d
   140033671:	mov    DWORD PTR [rdx],r10d
   140033674:	test   r8d,r8d
   140033677:	je     0x14003367e
   140033679:	add    WORD PTR [rdx+0x4],r11w
   14003367e:	sub    esi,r11d
   140033681:	add    r15,0x2
   140033685:	sub    r14,0x2
   140033689:	test   esi,esi
   14003368b:	jg     0x140033650
   14003368d:	mov    r14d,DWORD PTR [rbp-0x49]
   140033691:	xor    r12d,r12d
   140033694:	sub    r14d,r11d
   140033697:	add    rdx,0x2
   14003369b:	add    edi,r11d
   14003369e:	mov    DWORD PTR [rbp-0x49],r14d
   1400336a2:	test   r14d,r14d
   1400336a5:	jg     0x14003362f
   1400336a7:	mov    rbx,QWORD PTR [rbp-0x41]
   1400336ab:	mov    r8d,DWORD PTR [rbp-0x21]
   1400336af:	mov    r10d,DWORD PTR [rbp-0x29]
   1400336b3:	mov    eax,0xc002
   1400336b8:	mov    esi,0x80000000
   1400336bd:	mov    r14d,0xffff
   1400336c3:	add    r9w,ax
   1400336c7:	test   r9w,r9w
   1400336cb:	jle    0x140033709
   1400336cd:	test   esi,r8d
   1400336d0:	jne    0x140033703
   1400336d2:	mov    edi,DWORD PTR [rbp-0x25]
   1400336d5:	mov    edx,r10d
   1400336d8:	add    r8d,r8d
   1400336db:	shr    edx,0x1f
   1400336de:	add    r10d,r10d
   1400336e1:	mov    ecx,edi
   1400336e3:	shr    ecx,0x1f
   1400336e6:	lea    eax,[rdi+rdi*1]
   1400336e9:	add    r9w,r14w
   1400336ed:	or     eax,edx
   1400336ef:	or     r8d,ecx
   1400336f2:	mov    DWORD PTR [rbp-0x29],r10d
   1400336f6:	mov    DWORD PTR [rbp-0x25],eax
   1400336f9:	mov    DWORD PTR [rbp-0x21],r8d
   1400336fd:	test   r9w,r9w
   140033701:	jg     0x1400336cd
   140033703:	test   r9w,r9w
   140033707:	jg     0x14003376e
   140033709:	add    r9w,r14w
   14003370d:	jns    0x14003376e
   14003370f:	mov    ebx,DWORD PTR [rbp-0x65]
   140033712:	movzx  eax,r9w
   140033716:	neg    ax
   140033719:	movzx  edx,ax
   14003371c:	add    r9w,dx
   140033720:	test   BYTE PTR [rbp-0x29],r11b
   140033724:	je     0x140033729
   140033726:	add    ebx,r11d
   140033729:	mov    edi,DWORD PTR [rbp-0x25]
   14003372c:	mov    eax,r8d
   14003372f:	shr    r10d,1
   140033732:	mov    ecx,edi
   140033734:	shl    eax,0x1f
   140033737:	shr    edi,1
   140033739:	shl    ecx,0x1f
   14003373c:	or     edi,eax
   14003373e:	shr    r8d,1
   140033741:	or     r10d,ecx
   140033744:	mov    DWORD PTR [rbp-0x25],edi
   140033747:	mov    DWORD PTR [rbp-0x29],r10d
   14003374b:	sub    rdx,r11
   14003374e:	jne    0x140033720
   140033750:	test   ebx,ebx
   140033752:	mov    rbx,QWORD PTR [rbp-0x41]
   140033756:	mov    DWORD PTR [rbp-0x21],r8d
   14003375a:	je     0x14003376e
   14003375c:	movzx  eax,r10w
   140033760:	or     ax,r11w
   140033764:	mov    WORD PTR [rbp-0x29],ax
   140033768:	mov    r10d,DWORD PTR [rbp-0x29]
   14003376c:	jmp    0x140033772
   14003376e:	movzx  eax,WORD PTR [rbp-0x29]
   140033772:	mov    ecx,0x8000
   140033777:	cmp    ax,cx
   14003377a:	ja     0x14003378c
   14003377c:	and    r10d,0x1ffff
   140033783:	cmp    r10d,0x18000
   14003378a:	jne    0x1400337d5
   14003378c:	mov    eax,DWORD PTR [rbp-0x27]
   14003378f:	or     edx,0xffffffff
   140033792:	cmp    eax,edx
   140033794:	jne    0x1400337cf
   140033796:	mov    eax,DWORD PTR [rbp-0x23]
   140033799:	mov    DWORD PTR [rbp-0x27],r12d
   14003379d:	cmp    eax,edx
   14003379f:	jne    0x1400337c3
   1400337a1:	movzx  eax,WORD PTR [rbp-0x1f]
   1400337a5:	mov    DWORD PTR [rbp-0x23],r12d
   1400337a9:	cmp    ax,r14w
   1400337ad:	jne    0x1400337b9
   1400337af:	mov    WORD PTR [rbp-0x1f],cx
   1400337b3:	add    r9w,r11w
   1400337b7:	jmp    0x1400337c9
   1400337b9:	add    ax,r11w
   1400337bd:	mov    WORD PTR [rbp-0x1f],ax
   1400337c1:	jmp    0x1400337c9
   1400337c3:	add    eax,r11d
   1400337c6:	mov    DWORD PTR [rbp-0x23],eax
   1400337c9:	mov    r8d,DWORD PTR [rbp-0x21]
   1400337cd:	jmp    0x1400337d5
   1400337cf:	add    eax,r11d
   1400337d2:	mov    DWORD PTR [rbp-0x27],eax
   1400337d5:	mov    eax,0x7fff
   1400337da:	cmp    r9w,ax
   1400337de:	jb     0x1400337f8
   1400337e0:	neg    r13w
   1400337e4:	mov    r8d,r12d
   1400337e7:	mov    edx,r12d
   1400337ea:	sbb    eax,eax
   1400337ec:	and    eax,esi
   1400337ee:	add    eax,0x7fff8000
   1400337f3:	mov    DWORD PTR [rbp-0x11],eax
   1400337f6:	jmp    0x140033838
   1400337f8:	movzx  eax,WORD PTR [rbp-0x27]
   1400337fc:	or     r9w,r13w
   140033800:	mov    DWORD PTR [rbp-0x13],r8d
   140033804:	mov    WORD PTR [rbp-0x19],ax
   140033808:	mov    eax,DWORD PTR [rbp-0x25]
   14003380b:	mov    WORD PTR [rbp-0xf],r9w
   140033810:	mov    DWORD PTR [rbp-0x17],eax
   140033813:	mov    r8d,DWORD PTR [rbp-0x15]
   140033817:	mov    edx,DWORD PTR [rbp-0x19]
   14003381a:	jmp    0x140033838
   14003381c:	neg    r13w
   140033820:	sbb    eax,eax
   140033822:	and    eax,r15d
   140033825:	add    eax,0x7fff8000
   14003382a:	mov    DWORD PTR [rbp-0x11],eax
   14003382d:	mov    edx,r12d
   140033830:	mov    r8d,r12d
   140033833:	mov    ecx,0x8000
   140033838:	mov    eax,DWORD PTR [rbp-0x61]
   14003383b:	mov    r14d,DWORD PTR [rbp-0x4d]
   14003383f:	mov    WORD PTR [rbx],ax
   140033842:	test   BYTE PTR [rbp-0x39],r11b
   140033846:	je     0x140033865
   140033848:	cwde   
   140033849:	add    r14d,eax
   14003384c:	test   r14d,r14d
   14003384f:	jg     0x140033865
   140033851:	cmp    WORD PTR [rbp-0x67],cx
   140033855:	mov    eax,0x20
   14003385a:	lea    ecx,[rax+0xd]
   14003385d:	cmove  eax,ecx
   140033860:	jmp    0x1400330a1
   140033865:	mov    r9d,DWORD PTR [rbp-0x11]
   140033869:	mov    eax,0x15
   14003386e:	mov    WORD PTR [rbp-0xf],r12w
   140033873:	mov    esi,DWORD PTR [rbp-0x11]
   140033876:	cmp    r14d,eax
   140033879:	lea    r10d,[rax-0xd]
   14003387d:	cmovg  r14d,eax
   140033881:	shr    r9d,0x10
   140033885:	sub    r9d,0x3ffe
   14003388c:	mov    ecx,r8d
   14003388f:	mov    eax,edx
   140033891:	add    esi,esi
   140033893:	add    r8d,r8d
   140033896:	shr    eax,0x1f
   140033899:	shr    ecx,0x1f
   14003389c:	or     r8d,eax
   14003389f:	or     esi,ecx
   1400338a1:	add    edx,edx
   1400338a3:	sub    r10,r11
   1400338a6:	jne    0x14003388c
   1400338a8:	mov    DWORD PTR [rbp-0x15],r8d
   1400338ac:	mov    DWORD PTR [rbp-0x19],edx
   1400338af:	test   r9d,r9d
   1400338b2:	jns    0x1400338e6
   1400338b4:	neg    r9d
   1400338b7:	movzx  r10d,r9b
   1400338bb:	test   r10d,r10d
   1400338be:	jle    0x1400338e6
   1400338c0:	mov    ecx,r8d
   1400338c3:	mov    eax,esi
   1400338c5:	shr    edx,1
   1400338c7:	shr    r8d,1
   1400338ca:	shl    eax,0x1f
   1400338cd:	shl    ecx,0x1f
   1400338d0:	sub    r10d,r11d
   1400338d3:	shr    esi,1
   1400338d5:	or     r8d,eax
   1400338d8:	or     edx,ecx
   1400338da:	test   r10d,r10d
   1400338dd:	jg     0x1400338c0
   1400338df:	mov    DWORD PTR [rbp-0x15],r8d
   1400338e3:	mov    DWORD PTR [rbp-0x19],edx
   1400338e6:	lea    r15d,[r14+0x1]
   1400338ea:	lea    rdi,[rbx+0x4]
   1400338ee:	mov    r10,rdi
   1400338f1:	test   r15d,r15d
   1400338f4:	jle    0x1400339ce
   1400338fa:	movsd  xmm0,QWORD PTR [rbp-0x19]
   1400338ff:	mov    ecx,r8d
   140033902:	add    r8d,r8d
   140033905:	shr    ecx,0x1f
   140033908:	mov    eax,edx
   14003390a:	add    edx,edx
   14003390c:	shr    eax,0x1f
   14003390f:	lea    r9d,[rsi+rsi*1]
   140033913:	movsd  QWORD PTR [rbp+0x7],xmm0
   140033918:	or     r8d,eax
   14003391b:	or     r9d,ecx
   14003391e:	mov    eax,edx
   140033920:	mov    ecx,r8d
   140033923:	shr    eax,0x1f
   140033926:	add    r8d,r8d
   140033929:	or     r8d,eax
   14003392c:	mov    eax,DWORD PTR [rbp+0x7]
   14003392f:	add    edx,edx
   140033931:	shr    ecx,0x1f
   140033934:	add    r9d,r9d
   140033937:	lea    r12d,[rax+rdx*1]
   14003393b:	or     r9d,ecx
   14003393e:	cmp    r12d,edx
   140033941:	jb     0x140033948
   140033943:	cmp    r12d,eax
   140033946:	jae    0x140033969
   140033948:	xor    r14d,r14d
   14003394b:	lea    eax,[r8+0x1]
   14003394f:	mov    ecx,r14d
   140033952:	cmp    eax,r8d
   140033955:	jb     0x14003395c
   140033957:	cmp    eax,r11d
   14003395a:	jae    0x14003395f
   14003395c:	mov    ecx,r11d
   14003395f:	mov    r8d,eax
   140033962:	test   ecx,ecx
   140033964:	je     0x140033969
   140033966:	add    r9d,r11d
   140033969:	mov    rax,QWORD PTR [rbp+0x7]
   14003396d:	shr    rax,0x20
   140033971:	lea    r14d,[r8+rax*1]
   140033975:	cmp    r14d,r8d
   140033978:	jb     0x14003397f
   14003397a:	cmp    r14d,eax
   14003397d:	jae    0x140033982
   14003397f:	add    r9d,r11d
   140033982:	mov    eax,r12d
   140033985:	add    r9d,esi
   140033988:	lea    edx,[r12+r12*1]
   14003398c:	shr    eax,0x1f
   14003398f:	xor    r12d,r12d
   140033992:	lea    r8d,[r14+r14*1]
   140033996:	or     r8d,eax
   140033999:	mov    ecx,r14d
   14003399c:	lea    eax,[r9+r9*1]
   1400339a0:	shr    ecx,0x1f
   1400339a3:	sub    r15d,r11d
   1400339a6:	mov    DWORD PTR [rbp-0x19],edx
   1400339a9:	or     eax,ecx
   1400339ab:	mov    DWORD PTR [rbp-0x15],r8d
   1400339af:	mov    DWORD PTR [rbp-0x11],eax
   1400339b2:	shr    eax,0x18
   1400339b5:	mov    BYTE PTR [rbp-0xe],r12b
   1400339b9:	add    al,0x30
   1400339bb:	mov    BYTE PTR [r10],al
   1400339be:	add    r10,r11
   1400339c1:	test   r15d,r15d
   1400339c4:	jle    0x1400339ce
   1400339c6:	mov    esi,DWORD PTR [rbp-0x11]
   1400339c9:	jmp    0x1400338fa
   1400339ce:	sub    r10,r11
   1400339d1:	mov    al,BYTE PTR [r10]
   1400339d4:	sub    r10,r11
   1400339d7:	cmp    al,0x35
   1400339d9:	jl     0x140033a45
   1400339db:	jmp    0x1400339ea
   1400339dd:	cmp    BYTE PTR [r10],0x39
   1400339e1:	jne    0x1400339ef
   1400339e3:	mov    BYTE PTR [r10],0x30
   1400339e7:	sub    r10,r11
   1400339ea:	cmp    r10,rdi
   1400339ed:	jae    0x1400339dd
   1400339ef:	cmp    r10,rdi
   1400339f2:	jae    0x1400339fb
   1400339f4:	add    r10,r11
   1400339f7:	add    WORD PTR [rbx],r11w
   1400339fb:	add    BYTE PTR [r10],r11b
   1400339fe:	sub    r10b,bl
   140033a01:	sub    r10b,0x3
   140033a05:	movsx  rax,r10b
   140033a09:	mov    BYTE PTR [rbx+0x3],r10b
   140033a0d:	mov    BYTE PTR [rax+rbx*1+0x4],r12b
   140033a12:	mov    eax,r11d
   140033a15:	mov    rcx,QWORD PTR [rbp+0x17]
   140033a19:	xor    rcx,rsp
   140033a1c:	call   0x1400097d0
   140033a21:	mov    rbx,QWORD PTR [rsp+0x108]
   140033a29:	add    rsp,0xc0
   140033a30:	pop    r15
   140033a32:	pop    r14
   140033a34:	pop    r13
   140033a36:	pop    r12
   140033a38:	pop    rdi
   140033a39:	pop    rsi
   140033a3a:	pop    rbp
   140033a3b:	ret    
   140033a3c:	cmp    BYTE PTR [r10],0x30
   140033a40:	jne    0x140033a4a
   140033a42:	sub    r10,r11
   140033a45:	cmp    r10,rdi
   140033a48:	jae    0x140033a3c
   140033a4a:	cmp    r10,rdi
   140033a4d:	jae    0x1400339fe
   140033a4f:	mov    eax,0x20
   140033a54:	mov    r9d,0x8000
   140033a5a:	mov    WORD PTR [rbx],r12w
   140033a5e:	cmp    WORD PTR [rbp-0x67],r9w
   140033a63:	lea    ecx,[rax+0xd]
   140033a66:	mov    BYTE PTR [rbx+0x3],r11b
   140033a6a:	cmove  eax,ecx
   140033a6d:	mov    BYTE PTR [rbx+0x2],al
   140033a70:	mov    BYTE PTR [rdi],0x30
   140033a73:	jmp    0x1400330ae
   140033a78:	xor    r9d,r9d
   140033a7b:	xor    r8d,r8d
   140033a7e:	xor    edx,edx
   140033a80:	xor    ecx,ecx
   140033a82:	mov    QWORD PTR [rsp+0x20],r12
   140033a87:	call   0x14000b908
   140033a8c:	int3   
   140033a8d:	xor    r9d,r9d
   140033a90:	xor    r8d,r8d
   140033a93:	xor    edx,edx
   140033a95:	xor    ecx,ecx
   140033a97:	mov    QWORD PTR [rsp+0x20],r12
   140033a9c:	call   0x14000b908
   140033aa1:	int3   
   140033aa2:	xor    r9d,r9d
   140033aa5:	xor    r8d,r8d
   140033aa8:	xor    edx,edx
   140033aaa:	xor    ecx,ecx
   140033aac:	mov    QWORD PTR [rsp+0x20],r12
   140033ab1:	call   0x14000b908
   140033ab6:	int3   
   140033ab7:	xor    r9d,r9d
   140033aba:	xor    r8d,r8d
   140033abd:	xor    edx,edx
   140033abf:	xor    ecx,ecx
   140033ac1:	mov    QWORD PTR [rsp+0x20],r12
   140033ac6:	call   0x14000b908
   140033acb:	int3   
   140033acc:	jmp    QWORD PTR [rip+0x174e]        # 0x140035220
   140033ad2:	jmp    QWORD PTR [rip+0x1750]        # 0x140035228
   140033ad8:	jmp    QWORD PTR [rip+0x1752]        # 0x140035230
   140033ade:	jmp    QWORD PTR [rip+0x1754]        # 0x140035238
   140033ae4:	jmp    QWORD PTR [rip+0x1756]        # 0x140035240
   140033aea:	jmp    QWORD PTR [rip+0x1758]        # 0x140035248
   140033af0:	jmp    QWORD PTR [rip+0x175a]        # 0x140035250
   140033af6:	jmp    QWORD PTR [rip+0x175c]        # 0x140035258
   140033afc:	jmp    QWORD PTR [rip+0x175e]        # 0x140035260
   140033b02:	jmp    QWORD PTR [rip+0x1760]        # 0x140035268
   140033b08:	jmp    QWORD PTR [rip+0x1762]        # 0x140035270
   140033b0e:	jmp    QWORD PTR [rip+0x1764]        # 0x140035278
   140033b14:	jmp    QWORD PTR [rip+0x1766]        # 0x140035280
   140033b1a:	jmp    QWORD PTR [rip+0x1768]        # 0x140035288
   140033b20:	jmp    QWORD PTR [rip+0x176a]        # 0x140035290
   140033b26:	jmp    QWORD PTR [rip+0x176c]        # 0x140035298
   140033b2c:	jmp    QWORD PTR [rip+0x176e]        # 0x1400352a0
   140033b32:	jmp    QWORD PTR [rip+0x1770]        # 0x1400352a8
   140033b38:	jmp    QWORD PTR [rip+0x1772]        # 0x1400352b0
   140033b3e:	jmp    QWORD PTR [rip+0x1774]        # 0x1400352b8
   140033b44:	jmp    QWORD PTR [rip+0x1776]        # 0x1400352c0
   140033b4a:	jmp    QWORD PTR [rip+0x1778]        # 0x1400352c8
   140033b50:	jmp    QWORD PTR [rip+0x177a]        # 0x1400352d0
   140033b56:	jmp    QWORD PTR [rip+0x177c]        # 0x1400352d8
   140033b5c:	jmp    QWORD PTR [rip+0x177e]        # 0x1400352e0
   140033b62:	jmp    QWORD PTR [rip+0x1780]        # 0x1400352e8
   140033b68:	jmp    QWORD PTR [rip+0x1782]        # 0x1400352f0
   140033b6e:	jmp    QWORD PTR [rip+0x1784]        # 0x1400352f8
   140033b74:	jmp    QWORD PTR [rip+0x1786]        # 0x140035300
   140033b7a:	jmp    QWORD PTR [rip+0x1788]        # 0x140035308
   140033b80:	jmp    QWORD PTR [rip+0x178a]        # 0x140035310
   140033b86:	jmp    QWORD PTR [rip+0x178c]        # 0x140035318
   140033b8c:	jmp    QWORD PTR [rip+0x178e]        # 0x140035320
   140033b92:	jmp    QWORD PTR [rip+0x1790]        # 0x140035328
   140033b98:	jmp    QWORD PTR [rip+0x1792]        # 0x140035330
   140033b9e:	jmp    QWORD PTR [rip+0x1794]        # 0x140035338
   140033ba4:	jmp    QWORD PTR [rip+0x1796]        # 0x140035340
   140033baa:	jmp    QWORD PTR [rip+0x1798]        # 0x140035348
   140033bb0:	jmp    QWORD PTR [rip+0x179a]        # 0x140035350
   140033bb6:	jmp    QWORD PTR [rip+0x179c]        # 0x140035358
   140033bbc:	jmp    QWORD PTR [rip+0x179e]        # 0x140035360
   140033bc2:	jmp    QWORD PTR [rip+0x17a0]        # 0x140035368
   140033bc8:	jmp    QWORD PTR [rip+0x17a2]        # 0x140035370
   140033bce:	jmp    QWORD PTR [rip+0x17a4]        # 0x140035378
   140033bd4:	jmp    QWORD PTR [rip+0x17a6]        # 0x140035380
   140033bda:	jmp    QWORD PTR [rip+0x17a8]        # 0x140035388
   140033be0:	jmp    QWORD PTR [rip+0x17aa]        # 0x140035390
   140033be6:	jmp    QWORD PTR [rip+0x17ac]        # 0x140035398
   140033bec:	jmp    QWORD PTR [rip+0x17ae]        # 0x1400353a0
   140033bf2:	jmp    QWORD PTR [rip+0x17b0]        # 0x1400353a8
   140033bf8:	jmp    QWORD PTR [rip+0x17b2]        # 0x1400353b0
   140033bfe:	jmp    QWORD PTR [rip+0x17b4]        # 0x1400353b8
   140033c04:	jmp    QWORD PTR [rip+0x17b6]        # 0x1400353c0
   140033c0a:	jmp    QWORD PTR [rip+0x17b8]        # 0x1400353c8
   140033c10:	jmp    QWORD PTR [rip+0x17ba]        # 0x1400353d0
   140033c16:	jmp    QWORD PTR [rip+0x17bc]        # 0x1400353d8
   140033c1c:	jmp    QWORD PTR [rip+0x1586]        # 0x1400351a8
   140033c22:	jmp    QWORD PTR [rip+0x1578]        # 0x1400351a0
   140033c28:	jmp    QWORD PTR [rip+0x156a]        # 0x140035198
   140033c2e:	jmp    QWORD PTR [rip+0x155c]        # 0x140035190
   140033c34:	jmp    QWORD PTR [rip+0x154e]        # 0x140035188
   140033c3a:	jmp    QWORD PTR [rip+0x1540]        # 0x140035180
   140033c40:	jmp    QWORD PTR [rip+0x1532]        # 0x140035178
   140033c46:	jmp    QWORD PTR [rip+0x1524]        # 0x140035170
   140033c4c:	jmp    QWORD PTR [rip+0x1516]        # 0x140035168
   140033c52:	jmp    QWORD PTR [rip+0x1508]        # 0x140035160
   140033c58:	jmp    QWORD PTR [rip+0x14fa]        # 0x140035158
   140033c5e:	jmp    QWORD PTR [rip+0x14ec]        # 0x140035150
   140033c64:	jmp    QWORD PTR [rip+0x14de]        # 0x140035148
   140033c6a:	jmp    QWORD PTR [rip+0x14d0]        # 0x140035140
   140033c70:	jmp    QWORD PTR [rip+0x14c2]        # 0x140035138
   140033c76:	jmp    QWORD PTR [rip+0x1764]        # 0x1400353e0
   140033c7c:	int3   
   140033c7d:	int3   
   140033c7e:	int3   
   140033c7f:	int3   
   140033c80:	rex push rbp
   140033c82:	sub    rsp,0x20
   140033c86:	mov    rbp,rdx
   140033c89:	lea    rdx,[rip+0x13c98]        # 0x140047928
   140033c90:	mov    rcx,QWORD PTR [rbp+0x60]
   140033c94:	call   0x140008b14
   140033c99:	add    rsp,0x20
   140033c9d:	pop    rbp
   140033c9e:	ret    
   140033c9f:	int3   
   140033ca0:	lea    rcx,[rdx+0x48]
   140033ca7:	jmp    0x1400055c0
   140033cac:	int3   
   140033cad:	int3   
   140033cae:	int3   
   140033caf:	int3   
   140033cb0:	lea    rcx,[rdx+0x28]
   140033cb7:	jmp    0x1400055c0
   140033cbc:	int3   
   140033cbd:	int3   
   140033cbe:	int3   
   140033cbf:	int3   
   140033cc0:	rex push rbp
   140033cc2:	mov    rbp,rdx
   140033cc5:	mov    eax,DWORD PTR [rip+0x13875]        # 0x140047540
   140033ccb:	and    eax,0xfffffffe
   140033cce:	mov    DWORD PTR [rip+0x1386c],eax        # 0x140047540
   140033cd4:	pop    rbp
   140033cd5:	ret    
   140033cd6:	rex push rbp
   140033cd8:	mov    rbp,rdx
   140033cdb:	mov    eax,DWORD PTR [rip+0x1385f]        # 0x140047540
   140033ce1:	and    eax,0xfffffffd
   140033ce4:	mov    DWORD PTR [rip+0x13856],eax        # 0x140047540
   140033cea:	pop    rbp
   140033ceb:	ret    
   140033cec:	int3   
   140033ced:	int3   
   140033cee:	int3   
   140033cef:	int3   
   140033cf0:	lea    rcx,[rdx+0x48]
   140033cf7:	jmp    0x1400055c0
   140033cfc:	int3   
   140033cfd:	int3   
   140033cfe:	int3   
   140033cff:	int3   
   140033d00:	mov    rcx,QWORD PTR [rdx+0x40]
   140033d07:	jmp    0x140007d8c
   140033d0c:	int3   
   140033d0d:	int3   
   140033d0e:	int3   
   140033d0f:	int3   
   140033d10:	lea    rcx,[rdx+0x48]
   140033d17:	jmp    0x1400055c0
   140033d1c:	int3   
   140033d1d:	int3   
   140033d1e:	int3   
   140033d1f:	int3   
   140033d20:	lea    rcx,[rdx+0x48]
   140033d27:	jmp    0x1400055c0
   140033d2c:	int3   
   140033d2d:	int3   
   140033d2e:	int3   
   140033d2f:	int3   
   140033d30:	lea    rcx,[rdx+0x48]
   140033d37:	jmp    0x1400055c0
   140033d3c:	int3   
   140033d3d:	int3   
   140033d3e:	int3   
   140033d3f:	int3   
   140033d40:	lea    rcx,[rdx+0x48]
   140033d47:	jmp    0x1400055c0
   140033d4c:	int3   
   140033d4d:	int3   
   140033d4e:	int3   
   140033d4f:	int3   
   140033d50:	lea    rcx,[rdx+0x38]
   140033d57:	jmp    0x1400055c0
   140033d5c:	int3   
   140033d5d:	int3   
   140033d5e:	int3   
   140033d5f:	int3   
   140033d60:	mov    rcx,QWORD PTR [rdx+0x50]
   140033d67:	jmp    0x140001750
   140033d6c:	int3   
   140033d6d:	int3   
   140033d6e:	int3   
   140033d6f:	int3   
   140033d70:	mov    rcx,QWORD PTR [rdx+0x40]
   140033d77:	jmp    0x140001750
   140033d7c:	int3   
   140033d7d:	int3   
   140033d7e:	int3   
   140033d7f:	int3   
   140033d80:	mov    rcx,QWORD PTR [rdx+0x50]
   140033d87:	jmp    0x140001750
   140033d8c:	rex push rbp
   140033d8e:	sub    rsp,0x20
   140033d92:	mov    rbp,rdx
   140033d95:	call   0x14000a918
   140033d9a:	add    rax,0x30
   140033d9e:	mov    rdx,rax
   140033da1:	mov    ecx,0x1
   140033da6:	call   0x14000aa0c
   140033dab:	nop
   140033dac:	add    rsp,0x20
   140033db0:	pop    rbp
   140033db1:	ret    
   140033db2:	int3   
   140033db3:	rex push rbp
   140033db5:	sub    rsp,0x20
   140033db9:	mov    rbp,rdx
   140033dbc:	add    rsp,0x20
   140033dc0:	pop    rbp
   140033dc1:	jmp    0x14000a1e8
   140033dc6:	int3   
   140033dc7:	mov    QWORD PTR [rsp+0x10],rdx
   140033dcc:	push   rbp
   140033dcd:	sub    rsp,0x20
   140033dd1:	mov    rbp,rdx
   140033dd4:	and    QWORD PTR [rbp+0x50],0x0
   140033dd9:	lea    rax,[rip+0xfffffffffffd4d29]        # 0x140008b09
   140033de0:	add    rsp,0x20
   140033de4:	pop    rbp
   140033de5:	ret    
   140033de6:	int3   
   140033de7:	rex push rbp
   140033de9:	sub    rsp,0x40
   140033ded:	mov    rbp,rdx
   140033df0:	lea    rax,[rbp+0x40]
   140033df4:	mov    QWORD PTR [rsp+0x30],rax
   140033df9:	mov    rax,QWORD PTR [rbp+0x90]
   140033e00:	mov    QWORD PTR [rsp+0x28],rax
   140033e05:	mov    rax,QWORD PTR [rbp+0x88]
   140033e0c:	mov    QWORD PTR [rsp+0x20],rax
   140033e11:	mov    r9,QWORD PTR [rbp+0x80]
   140033e18:	mov    r8,QWORD PTR [rbp+0x78]
   140033e1c:	mov    rdx,QWORD PTR [rbp+0x70]
   140033e20:	call   0x14000922c
   140033e25:	nop
   140033e26:	add    rsp,0x40
   140033e2a:	pop    rbp
   140033e2b:	ret    
   140033e2c:	int3   
   140033e2d:	rex push rbp
   140033e2f:	sub    rsp,0x20
   140033e33:	mov    rbp,rdx
   140033e36:	cmp    DWORD PTR [rbp+0x80],0x0
   140033e3d:	je     0x140033e4a
   140033e3f:	mov    ecx,0x8
   140033e44:	call   0x140019844
   140033e49:	nop
   140033e4a:	add    rsp,0x20
   140033e4e:	pop    rbp
   140033e4f:	ret    
   140033e50:	int3   
   140033e51:	rex push rbp
   140033e53:	sub    rsp,0x20
   140033e57:	mov    rbp,rdx
   140033e5a:	mov    rax,QWORD PTR [rcx]
   140033e5d:	mov    rdx,rcx
   140033e60:	mov    ecx,DWORD PTR [rax]
   140033e62:	call   0x14001ac98
   140033e67:	nop
   140033e68:	add    rsp,0x20
   140033e6c:	pop    rbp
   140033e6d:	ret    
   140033e6e:	int3   
   140033e6f:	rex push rbp
   140033e71:	sub    rsp,0x20
   140033e75:	mov    rbp,rdx
   140033e78:	mov    rcx,QWORD PTR [rbp+0x30]
   140033e7c:	add    rsp,0x20
   140033e80:	pop    rbp
   140033e81:	jmp    0x14000a9bc
   140033e86:	int3   
   140033e87:	rex push rbp
   140033e89:	sub    rsp,0x20
   140033e8d:	mov    rbp,rdx
   140033e90:	mov    rcx,QWORD PTR [rbp+0x30]
   140033e94:	add    rsp,0x20
   140033e98:	pop    rbp
   140033e99:	jmp    0x14000a9bc
   140033e9e:	int3   
   140033e9f:	rex push rbp
   140033ea1:	sub    rsp,0x20
   140033ea5:	mov    rbp,rdx
   140033ea8:	movsxd rcx,DWORD PTR [rbp+0x20]
   140033eac:	mov    rax,rcx
   140033eaf:	mov    rdx,QWORD PTR [rip+0x14fda]        # 0x140048e90
   140033eb6:	mov    rdx,QWORD PTR [rdx+rcx*8]
   140033eba:	call   0x14000aa0c
   140033ebf:	nop
   140033ec0:	add    rsp,0x20
   140033ec4:	pop    rbp
   140033ec5:	ret    
   140033ec6:	int3   
   140033ec7:	rex push rbp
   140033ec9:	sub    rsp,0x20
   140033ecd:	mov    rbp,rdx
   140033ed0:	mov    ecx,0x1
   140033ed5:	add    rsp,0x20
   140033ed9:	pop    rbp
   140033eda:	jmp    0x140019844
   140033edf:	int3   
   140033ee0:	rex push rbp
   140033ee2:	sub    rsp,0x20
   140033ee6:	mov    rbp,rdx
   140033ee9:	mov    rcx,QWORD PTR [rbp+0x38]
   140033eed:	add    rsp,0x20
   140033ef1:	pop    rbp
   140033ef2:	jmp    0x14000a9bc
   140033ef7:	int3   
   140033ef8:	rex push rbp
   140033efa:	sub    rsp,0x20
   140033efe:	mov    rbp,rdx
   140033f01:	mov    rcx,QWORD PTR [rbp+0x50]
   140033f05:	call   0x14000a9bc
   140033f0a:	nop
   140033f0b:	add    rsp,0x20
   140033f0f:	pop    rbp
   140033f10:	ret    
   140033f11:	int3   
   140033f12:	rex push rbp
   140033f14:	sub    rsp,0x20
   140033f18:	mov    rbp,rdx
   140033f1b:	mov    rcx,QWORD PTR [rbp+0x48]
   140033f1f:	add    rsp,0x20
   140033f23:	pop    rbp
   140033f24:	jmp    0x14000a9bc
   140033f29:	int3   
   140033f2a:	rex push rbp
   140033f2c:	sub    rsp,0x20
   140033f30:	mov    rbp,rdx
   140033f33:	mov    ecx,0xc
   140033f38:	add    rsp,0x20
   140033f3c:	pop    rbp
   140033f3d:	jmp    0x140019844
   140033f42:	int3   
   140033f43:	rex push rbp
   140033f45:	sub    rsp,0x20
   140033f49:	mov    rbp,rdx
   140033f4c:	mov    ecx,0xd
   140033f51:	add    rsp,0x20
   140033f55:	pop    rbp
   140033f56:	jmp    0x140019844
   140033f5b:	int3   
   140033f5c:	rex push rbp
   140033f5e:	sub    rsp,0x20
   140033f62:	mov    rbp,rdx
   140033f65:	mov    ecx,0xd
   140033f6a:	add    rsp,0x20
   140033f6e:	pop    rbp
   140033f6f:	jmp    0x140019844
   140033f74:	int3   
   140033f75:	rex push rbp
   140033f77:	sub    rsp,0x20
   140033f7b:	mov    rbp,rdx
   140033f7e:	mov    ecx,0xd
   140033f83:	add    rsp,0x20
   140033f87:	pop    rbp
   140033f88:	jmp    0x140019844
   140033f8d:	int3   
   140033f8e:	rex push rbp
   140033f90:	sub    rsp,0x20
   140033f94:	mov    rbp,rdx
   140033f97:	mov    ecx,0xc
   140033f9c:	add    rsp,0x20
   140033fa0:	pop    rbp
   140033fa1:	jmp    0x140019844
   140033fa6:	int3   
   140033fa7:	rex push rbp
   140033fa9:	sub    rsp,0x20
   140033fad:	mov    rbp,rdx
   140033fb0:	mov    ecx,0xd
   140033fb5:	add    rsp,0x20
   140033fb9:	pop    rbp
   140033fba:	jmp    0x140019844
   140033fbf:	int3   
   140033fc0:	rex push rbp
   140033fc2:	sub    rsp,0x20
   140033fc6:	mov    rbp,rdx
   140033fc9:	mov    ecx,0xc
   140033fce:	add    rsp,0x20
   140033fd2:	pop    rbp
   140033fd3:	jmp    0x140019844
   140033fd8:	int3   
   140033fd9:	rex push rbp
   140033fdb:	sub    rsp,0x20
   140033fdf:	mov    rbp,rdx
   140033fe2:	mov    ecx,0xd
   140033fe7:	add    rsp,0x20
   140033feb:	pop    rbp
   140033fec:	jmp    0x140019844
   140033ff1:	int3   
   140033ff2:	rex push rbp
   140033ff4:	sub    rsp,0x20
   140033ff8:	mov    rbp,rdx
   140033ffb:	mov    ecx,0xc
   140034000:	add    rsp,0x20
   140034004:	pop    rbp
   140034005:	jmp    0x140019844
   14003400a:	int3   
   14003400b:	rex push rbp
   14003400d:	sub    rsp,0x20
   140034011:	mov    rbp,rdx
   140034014:	mov    ecx,0xc
   140034019:	add    rsp,0x20
   14003401d:	pop    rbp
   14003401e:	jmp    0x140019844
   140034023:	int3   
   140034024:	rex push rbp
   140034026:	sub    rsp,0x20
   14003402a:	mov    rbp,rdx
   14003402d:	mov    ecx,0xd
   140034032:	add    rsp,0x20
   140034036:	pop    rbp
   140034037:	jmp    0x140019844
   14003403c:	int3   
   14003403d:	rex push rbp
   14003403f:	sub    rsp,0x20
   140034043:	mov    rbp,rdx
   140034046:	mov    ecx,0xc
   14003404b:	add    rsp,0x20
   14003404f:	pop    rbp
   140034050:	jmp    0x140019844
   140034055:	int3   
   140034056:	rex push rbp
   140034058:	sub    rsp,0x20
   14003405c:	mov    rbp,rdx
   14003405f:	mov    ecx,0xc
   140034064:	call   0x140019844
   140034069:	nop
   14003406a:	add    rsp,0x20
   14003406e:	pop    rbp
   14003406f:	ret    
   140034070:	int3   
   140034071:	rex push rbp
   140034073:	sub    rsp,0x20
   140034077:	mov    rbp,rdx
   14003407a:	mov    ecx,0xc
   14003407f:	call   0x140019844
   140034084:	nop
   140034085:	add    rsp,0x20
   140034089:	pop    rbp
   14003408a:	ret    
   14003408b:	int3   
   14003408c:	rex push rbp
   14003408e:	sub    rsp,0x20
   140034092:	mov    rbp,rdx
   140034095:	mov    rax,QWORD PTR [rbp+0x60]
   140034099:	and    DWORD PTR [rax+0xc8],0xffffffef
   1400340a0:	add    rsp,0x20
   1400340a4:	pop    rbp
   1400340a5:	ret    
   1400340a6:	int3   
   1400340a7:	rex push rbp
   1400340a9:	sub    rsp,0x20
   1400340ad:	mov    rbp,rdx
   1400340b0:	mov    QWORD PTR [rbp+0x70],rcx
   1400340b4:	mov    QWORD PTR [rbp+0x68],rcx
   1400340b8:	mov    rax,QWORD PTR [rbp+0x68]
   1400340bc:	mov    rcx,QWORD PTR [rax]
   1400340bf:	mov    QWORD PTR [rbp+0x28],rcx
   1400340c3:	mov    DWORD PTR [rbp+0x20],0x0
   1400340ca:	mov    rax,QWORD PTR [rbp+0x28]
   1400340ce:	cmp    DWORD PTR [rax],0xe06d7363
   1400340d4:	jne    0x140034123
   1400340d6:	mov    rax,QWORD PTR [rbp+0x28]
   1400340da:	cmp    DWORD PTR [rax+0x18],0x4
   1400340de:	jne    0x140034123
   1400340e0:	mov    rax,QWORD PTR [rbp+0x28]
   1400340e4:	cmp    DWORD PTR [rax+0x20],0x19930520
   1400340eb:	je     0x140034107
   1400340ed:	mov    rax,QWORD PTR [rbp+0x28]
   1400340f1:	cmp    DWORD PTR [rax+0x20],0x19930521
   1400340f8:	je     0x140034107
   1400340fa:	mov    rax,QWORD PTR [rbp+0x28]
   1400340fe:	cmp    DWORD PTR [rax+0x20],0x19930522
   140034105:	jne    0x140034123
   140034107:	mov    rdx,QWORD PTR [rbp+0x28]
   14003410b:	mov    rax,QWORD PTR [rbp+0xd8]
   140034112:	mov    rcx,QWORD PTR [rax+0x28]
   140034116:	cmp    QWORD PTR [rdx+0x28],rcx
   14003411a:	jne    0x140034123
   14003411c:	mov    DWORD PTR [rbp+0x20],0x1
   140034123:	mov    rax,QWORD PTR [rbp+0x28]
   140034127:	cmp    DWORD PTR [rax],0xe06d7363
   14003412d:	jne    0x14003418a
   14003412f:	mov    rax,QWORD PTR [rbp+0x28]
   140034133:	cmp    DWORD PTR [rax+0x18],0x4
   140034137:	jne    0x14003418a
   140034139:	mov    rax,QWORD PTR [rbp+0x28]
   14003413d:	cmp    DWORD PTR [rax+0x20],0x19930520
   140034144:	je     0x140034160
   140034146:	mov    rax,QWORD PTR [rbp+0x28]
   14003414a:	cmp    DWORD PTR [rax+0x20],0x19930521
   140034151:	je     0x140034160
   140034153:	mov    rax,QWORD PTR [rbp+0x28]
   140034157:	cmp    DWORD PTR [rax+0x20],0x19930522
   14003415e:	jne    0x14003418a
   140034160:	mov    rax,QWORD PTR [rbp+0x28]
   140034164:	cmp    QWORD PTR [rax+0x30],0x0
   140034169:	jne    0x14003418a
   14003416b:	call   0x140010d3c
   140034170:	mov    DWORD PTR [rax+0x460],0x1
   14003417a:	mov    DWORD PTR [rbp+0x20],0x1
   140034181:	mov    DWORD PTR [rbp+0x30],0x1
   140034188:	jmp    0x140034191
   14003418a:	mov    DWORD PTR [rbp+0x30],0x0
   140034191:	mov    eax,DWORD PTR [rbp+0x30]
   140034194:	add    rsp,0x20
   140034198:	pop    rbp
   140034199:	ret    
   14003419a:	int3   
   14003419b:	rex push rbx
   14003419d:	push   rbp
   14003419e:	sub    rsp,0x28
   1400341a2:	mov    rbp,rdx
   1400341a5:	mov    rcx,QWORD PTR [rbp+0x38]
   1400341a9:	call   0x140009368
   1400341ae:	cmp    DWORD PTR [rbp+0x20],0x0
   1400341b2:	jne    0x1400341ee
   1400341b4:	mov    rbx,QWORD PTR [rbp+0xd8]
   1400341bb:	cmp    DWORD PTR [rbx],0xe06d7363
   1400341c1:	jne    0x1400341ee
   1400341c3:	cmp    DWORD PTR [rbx+0x18],0x4
   1400341c7:	jne    0x1400341ee
   1400341c9:	mov    eax,DWORD PTR [rbx+0x20]
   1400341cc:	sub    eax,0x19930520
   1400341d1:	cmp    eax,0x2
   1400341d4:	ja     0x1400341ee
   1400341d6:	mov    rcx,QWORD PTR [rbx+0x28]
   1400341da:	call   0x1400093f8
   1400341df:	test   eax,eax
   1400341e1:	je     0x1400341ee
   1400341e3:	mov    dl,0x1
   1400341e5:	mov    rcx,rbx
   1400341e8:	call   0x140016fe8
   1400341ed:	nop
   1400341ee:	call   0x140010d3c
   1400341f3:	mov    rcx,QWORD PTR [rbp+0xe0]
   1400341fa:	mov    QWORD PTR [rax+0xf0],rcx
   140034201:	call   0x140010d3c
   140034206:	mov    rcx,QWORD PTR [rbp+0x50]
   14003420a:	mov    QWORD PTR [rax+0xf8],rcx
   140034211:	add    rsp,0x28
   140034215:	pop    rbp
   140034216:	pop    rbx
   140034217:	ret    
   140034218:	int3   
   140034219:	rex push rbp
   14003421b:	sub    rsp,0x20
   14003421f:	mov    rbp,rdx
   140034222:	mov    rcx,QWORD PTR [rbp+0x30]
   140034226:	call   0x140009438
   14003422b:	nop
   14003422c:	add    rsp,0x20
   140034230:	pop    rbp
   140034231:	ret    
   140034232:	int3   
   140034233:	rex push rbp
   140034235:	sub    rsp,0x20
   140034239:	mov    rbp,rdx
   14003423c:	xor    eax,eax
   14003423e:	cmp    BYTE PTR [rbp+0x38],al
   140034241:	setne  al
   140034244:	add    rsp,0x20
   140034248:	pop    rbp
   140034249:	ret    
   14003424a:	int3   
   14003424b:	rex push rbp
   14003424d:	sub    rsp,0x20
   140034251:	mov    rbp,rdx
   140034254:	call   0x14001854c
   140034259:	nop
   14003425a:	add    rsp,0x20
   14003425e:	pop    rbp
   14003425f:	ret    
   140034260:	int3   
   140034261:	rex push rbp
   140034263:	sub    rsp,0x20
   140034267:	mov    rbp,rdx
   14003426a:	call   0x140010d3c
   14003426f:	cmp    DWORD PTR [rax+0x100],0x0
   140034276:	jle    0x140034283
   140034278:	call   0x140010d3c
   14003427d:	dec    DWORD PTR [rax+0x100]
   140034283:	add    rsp,0x20
   140034287:	pop    rbp
   140034288:	ret    
   140034289:	int3   
   14003428a:	rex push rbp
   14003428c:	sub    rsp,0x30
   140034290:	mov    rbp,rdx
   140034293:	mov    ecx,0xe
   140034298:	add    rsp,0x30
   14003429c:	pop    rbp
   14003429d:	jmp    0x140019844
   1400342a2:	int3   
   1400342a3:	rex push rbp
   1400342a5:	sub    rsp,0x30
   1400342a9:	mov    rbp,rdx
   1400342ac:	mov    ecx,0xe
   1400342b1:	call   0x140019844
   1400342b6:	nop
   1400342b7:	add    rsp,0x30
   1400342bb:	pop    rbp
   1400342bc:	ret    
   1400342bd:	int3   
   1400342be:	rex push rbp
   1400342c0:	sub    rsp,0x20
   1400342c4:	mov    rbp,rdx
   1400342c7:	mov    ecx,0xe
   1400342cc:	add    rsp,0x20
   1400342d0:	pop    rbp
   1400342d1:	jmp    0x140019844
   1400342d6:	int3   
   1400342d7:	rex push rbp
   1400342d9:	sub    rsp,0x20
   1400342dd:	mov    rbp,rdx
   1400342e0:	mov    ecx,0xe
   1400342e5:	add    rsp,0x20
   1400342e9:	pop    rbp
   1400342ea:	jmp    0x140019844
   1400342ef:	int3   
   1400342f0:	rex push rbp
   1400342f2:	sub    rsp,0x20
   1400342f6:	mov    rbp,rdx
   1400342f9:	mov    ecx,0xe
   1400342fe:	add    rsp,0x20
   140034302:	pop    rbp
   140034303:	jmp    0x140019844
   140034308:	int3   
   140034309:	rex push rbp
   14003430b:	sub    rsp,0x20
   14003430f:	mov    rbp,rdx
   140034312:	mov    rcx,QWORD PTR [rip+0x11ef7]        # 0x140046210
   140034319:	add    rsp,0x20
   14003431d:	pop    rbp
   14003431e:	rex.W jmp QWORD PTR [rip+0xf43]        # 0x140035268
   140034325:	int3   
   140034326:	int3   
   140034327:	int3   
   140034328:	int3   
   140034329:	int3   
   14003432a:	int3   
   14003432b:	int3   
   14003432c:	int3   
   14003432d:	int3   
   14003432e:	int3   
   14003432f:	int3   
   140034330:	rex push rbp
   140034332:	sub    rsp,0x20
   140034336:	mov    rbp,rdx
   140034339:	mov    rax,QWORD PTR [rcx]
   14003433c:	xor    ecx,ecx
   14003433e:	cmp    DWORD PTR [rax],0xc0000005
   140034344:	sete   cl
   140034347:	mov    eax,ecx
   140034349:	add    rsp,0x20
   14003434d:	pop    rbp
   14003434e:	ret    
   14003434f:	int3   
   140034350:	rex push rbp
   140034352:	sub    rsp,0x20
   140034356:	mov    rbp,rdx
   140034359:	xor    ecx,ecx
   14003435b:	add    rsp,0x20
   14003435f:	pop    rbp
   140034360:	jmp    0x140019844
   140034365:	int3   
   140034366:	rex push rbp
   140034368:	sub    rsp,0x20
   14003436c:	mov    rbp,rdx
   14003436f:	cmp    DWORD PTR [rbp+0x60],0x0
   140034373:	je     0x14003437d
   140034375:	xor    ecx,ecx
   140034377:	call   0x140019844
   14003437c:	nop
   14003437d:	add    rsp,0x20
   140034381:	pop    rbp
   140034382:	ret    
   140034383:	int3   
   140034384:	rex push rbp
   140034386:	sub    rsp,0x20
   14003438a:	mov    rbp,rdx
   14003438d:	xor    ecx,ecx
   14003438f:	add    rsp,0x20
   140034393:	pop    rbp
   140034394:	jmp    0x140019844
   140034399:	int3   
   14003439a:	rex push rbp
   14003439c:	sub    rsp,0x20
   1400343a0:	mov    rbp,rdx
   1400343a3:	mov    ecx,0xb
   1400343a8:	call   0x140019844
   1400343ad:	nop
   1400343ae:	add    rsp,0x20
   1400343b2:	pop    rbp
   1400343b3:	ret    
   1400343b4:	int3   
   1400343b5:	rex push rbp
   1400343b7:	sub    rsp,0x20
   1400343bb:	mov    rbp,rdx
   1400343be:	mov    ecx,0x1
   1400343c3:	add    rsp,0x20
   1400343c7:	pop    rbp
   1400343c8:	jmp    0x140019844
   1400343cd:	int3   
   1400343ce:	rex push rbp
   1400343d0:	sub    rsp,0x20
   1400343d4:	mov    rbp,rdx
   1400343d7:	mov    ecx,DWORD PTR [rbp+0x40]
   1400343da:	add    rsp,0x20
   1400343de:	pop    rbp
   1400343df:	jmp    0x14002b320
   1400343e4:	int3   
   1400343e5:	rex push rbp
   1400343e7:	sub    rsp,0x20
   1400343eb:	mov    rbp,rdx
   1400343ee:	mov    ecx,DWORD PTR [rbp+0x40]
   1400343f1:	add    rsp,0x20
   1400343f5:	pop    rbp
   1400343f6:	jmp    0x14002b320
   1400343fb:	int3   
   1400343fc:	rex push rbp
   1400343fe:	sub    rsp,0x20
   140034402:	mov    rbp,rdx
   140034405:	mov    ecx,DWORD PTR [rbp+0x50]
   140034408:	add    rsp,0x20
   14003440c:	pop    rbp
   14003440d:	jmp    0x14002b320
   140034412:	int3   
   140034413:	rex push rbp
   140034415:	sub    rsp,0x20
   140034419:	mov    rbp,rdx
   14003441c:	mov    rcx,QWORD PTR [rbp+0x48]
   140034420:	add    rsp,0x20
   140034424:	pop    rbp
   140034425:	jmp    0x14000a9bc
   14003442a:	int3   
   14003442b:	rex push rbp
   14003442d:	sub    rsp,0x20
   140034431:	mov    rbp,rdx
   140034434:	mov    ecx,0x1
   140034439:	add    rsp,0x20
   14003443d:	pop    rbp
   14003443e:	jmp    0x140019844
   140034443:	int3   
   140034444:	rex push rbp
   140034446:	sub    rsp,0x20
   14003444a:	mov    rbp,rdx
   14003444d:	mov    rcx,QWORD PTR [rbp+0x30]
   140034451:	add    rsp,0x20
   140034455:	pop    rbp
   140034456:	jmp    0x14000a9bc
   14003445b:	int3   
   14003445c:	rex push rbp
   14003445e:	sub    rsp,0x20
   140034462:	mov    rbp,rdx
   140034465:	mov    rcx,QWORD PTR [rbp+0x38]
   140034469:	add    rsp,0x20
   14003446d:	pop    rbp
   14003446e:	jmp    0x14000a9bc
   140034473:	int3   
   140034474:	rex push rbp
   140034476:	sub    rsp,0x20
   14003447a:	mov    rbp,rdx
   14003447d:	mov    ecx,DWORD PTR [rbp+0x50]
   140034480:	add    rsp,0x20
   140034484:	pop    rbp
   140034485:	jmp    0x14002b320
   14003448a:	int3   
   14003448b:	rex push rbp
   14003448d:	sub    rsp,0x20
   140034491:	mov    rbp,rdx
   140034494:	mov    rcx,QWORD PTR [rbp+0x38]
   140034498:	add    rsp,0x20
   14003449c:	pop    rbp
   14003449d:	jmp    0x14000a9bc
   1400344a2:	int3   
   1400344a3:	rex push rbp
   1400344a5:	sub    rsp,0x30
   1400344a9:	mov    rbp,rdx
   1400344ac:	mov    ecx,0x5
   1400344b1:	add    rsp,0x30
   1400344b5:	pop    rbp
   1400344b6:	jmp    0x140019844
   1400344bb:	int3   
   1400344bc:	rex push rbp
   1400344be:	sub    rsp,0x30
   1400344c2:	mov    rbp,rdx
   1400344c5:	mov    ecx,0x5
   1400344ca:	add    rsp,0x30
   1400344ce:	pop    rbp
   1400344cf:	jmp    0x140019844
   1400344d4:	int3   
   1400344d5:	rex push rbp
   1400344d7:	sub    rsp,0x20
   1400344db:	mov    rbp,rdx
   1400344de:	mov    ecx,0xa
   1400344e3:	add    rsp,0x20
   1400344e7:	pop    rbp
   1400344e8:	jmp    0x140019844
   1400344ed:	int3   
   1400344ee:	rex push rbp
   1400344f0:	sub    rsp,0x20
   1400344f4:	mov    rbp,rdx
   1400344f7:	mov    ecx,0xa
   1400344fc:	call   0x140019844
   140034501:	nop
   140034502:	add    rsp,0x20
   140034506:	pop    rbp
   140034507:	ret    
   140034508:	int3   
   140034509:	rex push rbp
   14003450b:	sub    rsp,0x20
   14003450f:	mov    rbp,rdx
   140034512:	mov    ecx,0xb
   140034517:	add    rsp,0x20
   14003451b:	pop    rbp
   14003451c:	jmp    0x140019844
   140034521:	int3   
   140034522:	rex push rbp
   140034524:	sub    rsp,0x20
   140034528:	mov    rbp,rdx
   14003452b:	cmp    DWORD PTR [rbp+0x20],0x0
   14003452f:	jne    0x140034553
   140034531:	movsxd rcx,DWORD PTR [rbp+0x48]
   140034535:	mov    rax,rcx
   140034538:	sar    rax,0x5
   14003453c:	lea    rdx,[rip+0x142fd]        # 0x140048840
   140034543:	and    ecx,0x1f
   140034546:	imul   rcx,rcx,0x58
   14003454a:	mov    rax,QWORD PTR [rdx+rax*8]
   14003454e:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   140034553:	mov    ecx,DWORD PTR [rbp+0x48]
   140034556:	call   0x14002b320
   14003455b:	nop
   14003455c:	add    rsp,0x20
   140034560:	pop    rbp
   140034561:	ret    
   140034562:	int3   
   140034563:	rex push rbp
   140034565:	sub    rsp,0x20
   140034569:	mov    rbp,rdx
   14003456c:	mov    ecx,0x3
   140034571:	add    rsp,0x20
   140034575:	pop    rbp
   140034576:	jmp    0x140019844
   14003457b:	int3   
   14003457c:	rex push rbp
   14003457e:	sub    rsp,0x40
   140034582:	mov    rbp,rdx
   140034585:	cmp    DWORD PTR [rbp+0x44],0x0
   140034589:	je     0x1400345bc
   14003458b:	cmp    DWORD PTR [rbp+0x48],0x0
   14003458f:	je     0x1400345b3
   140034591:	movsxd rcx,DWORD PTR [rbp+0x40]
   140034595:	mov    rax,rcx
   140034598:	sar    rax,0x5
   14003459c:	lea    rdx,[rip+0x1429d]        # 0x140048840
   1400345a3:	and    ecx,0x1f
   1400345a6:	imul   rcx,rcx,0x58
   1400345aa:	mov    rax,QWORD PTR [rdx+rax*8]
   1400345ae:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   1400345b3:	mov    ecx,DWORD PTR [rbp+0x40]
   1400345b6:	call   0x14002b320
   1400345bb:	nop
   1400345bc:	add    rsp,0x40
   1400345c0:	pop    rbp
   1400345c1:	ret    
   1400345c2:	int3   
   1400345c3:	rex push rbp
   1400345c5:	sub    rsp,0x40
   1400345c9:	mov    rbp,rdx
   1400345cc:	cmp    DWORD PTR [rbp+0x40],0x0
   1400345d0:	je     0x14003460f
   1400345d2:	cmp    DWORD PTR [rbp+0x44],0x0
   1400345d6:	je     0x140034600
   1400345d8:	mov    rax,QWORD PTR [rbp+0x80]
   1400345df:	movsxd rcx,DWORD PTR [rax]
   1400345e2:	mov    rax,rcx
   1400345e5:	sar    rax,0x5
   1400345e9:	lea    rdx,[rip+0x14250]        # 0x140048840
   1400345f0:	and    ecx,0x1f
   1400345f3:	imul   rcx,rcx,0x58
   1400345f7:	mov    rax,QWORD PTR [rdx+rax*8]
   1400345fb:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   140034600:	mov    rax,QWORD PTR [rbp+0x80]
   140034607:	mov    ecx,DWORD PTR [rax]
   140034609:	call   0x14002b320
   14003460e:	nop
   14003460f:	add    rsp,0x40
   140034613:	pop    rbp
   140034614:	ret    
   140034615:	int3   
   140034616:	rex push rbp
   140034618:	sub    rsp,0x20
   14003461c:	mov    rbp,rdx
   14003461f:	mov    rcx,QWORD PTR [rbp+0x38]
   140034623:	add    rsp,0x20
   140034627:	pop    rbp
   140034628:	jmp    0x14000a9bc
   14003462d:	int3   
   14003462e:	rex push rbp
   140034630:	sub    rsp,0x20
   140034634:	mov    rbp,rdx
   140034637:	mov    ecx,DWORD PTR [rbp+0x40]
   14003463a:	add    rsp,0x20
   14003463e:	pop    rbp
   14003463f:	jmp    0x14002b320
   140034644:	int3   
   140034645:	rex push rbp
   140034647:	sub    rsp,0x20
   14003464b:	mov    rbp,rdx
   14003464e:	mov    ecx,DWORD PTR [rbp+0x50]
   140034651:	add    rsp,0x20
   140034655:	pop    rbp
   140034656:	jmp    0x14002b320
   14003465b:	int3   
   14003465c:	rex push rbp
   14003465e:	sub    rsp,0x20
   140034662:	mov    rbp,rdx
   140034665:	mov    ecx,DWORD PTR [rbp+0x40]
   140034668:	add    rsp,0x20
   14003466c:	pop    rbp
   14003466d:	jmp    0x14002b320
   140034672:	int3   
   140034673:	int3   
   140034674:	int3   
   140034675:	int3   
   140034676:	int3   
   140034677:	int3   
   140034678:	int3   
   140034679:	int3   
   14003467a:	int3   
   14003467b:	int3   
   14003467c:	int3   
   14003467d:	int3   
   14003467e:	int3   
   14003467f:	int3   
   140034680:	lea    rcx,[rip+0x12a99]        # 0x140047120
   140034687:	jmp    0x140005890
   14003468c:	int3   
   14003468d:	int3   
   14003468e:	int3   
   14003468f:	int3   
   140034690:	lea    rax,[rip+0x17b1]        # 0x140035e48
   140034697:	lea    rcx,[rip+0x12eb2]        # 0x140047550
   14003469e:	mov    QWORD PTR [rip+0x12eab],rax        # 0x140047550
   1400346a5:	jmp    0x140001b90
   1400346aa:	int3   
   1400346ab:	int3   
   1400346ac:	int3   
   1400346ad:	int3   
   1400346ae:	int3   
   1400346af:	int3   
   1400346b0:	lea    rax,[rip+0x34b9]        # 0x140037b70
   1400346b7:	mov    QWORD PTR [rip+0x1322a],rax        # 0x1400478e8
   1400346be:	ret    
   1400346bf:	int3   
   1400346c0:	lea    rax,[rip+0x34a9]        # 0x140037b70
   1400346c7:	mov    QWORD PTR [rip+0x13202],rax        # 0x1400478d0
   1400346ce:	ret    
   1400346cf:	int3   
   1400346d0:	sub    rsp,0x28
   1400346d4:	mov    rcx,QWORD PTR [rip+0x1322d]        # 0x140047908
   1400346db:	lea    rax,[rip+0x3546]        # 0x140037c28
   1400346e2:	mov    QWORD PTR [rip+0x1320f],rax        # 0x1400478f8
   1400346e9:	test   rcx,rcx
   1400346ec:	je     0x1400346fe
   1400346ee:	call   0x14000aaa8
   1400346f3:	mov    QWORD PTR [rip+0x1320a],0x0        # 0x140047908
   1400346fe:	lea    rax,[rip+0x346b]        # 0x140037b70
   140034705:	mov    QWORD PTR [rip+0x131ec],rax        # 0x1400478f8
   14003470c:	add    rsp,0x28
   140034710:	ret    
   140034711:	int3   
   140034712:	int3   
   140034713:	int3   
   140034714:	int3   
   140034715:	int3   
   140034716:	int3   
   140034717:	int3   
   140034718:	int3   
   140034719:	int3   
   14003471a:	int3   
   14003471b:	int3   
   14003471c:	int3   
   14003471d:	int3   
   14003471e:	int3   
   14003471f:	int3   
   140034720:	lea    rax,[rip+0x3449]        # 0x140037b70
   140034727:	mov    QWORD PTR [rip+0x131e2],rax        # 0x140047910
   14003472e:	ret    
