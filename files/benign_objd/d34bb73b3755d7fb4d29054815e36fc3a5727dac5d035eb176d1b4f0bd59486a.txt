
d34bb73b3755d7fb4d29054815e36fc3a5727dac5d035eb176d1b4f0bd59486a.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	ret    0x0
   140001003:	int3   
   140001004:	int3   
   140001005:	int3   
   140001006:	int3   
   140001007:	int3   
   140001008:	int3   
   140001009:	int3   
   14000100a:	int3   
   14000100b:	int3   
   14000100c:	int3   
   14000100d:	int3   
   14000100e:	int3   
   14000100f:	int3   
   140001010:	rex push rbx
   140001012:	sub    rsp,0x20
   140001016:	lea    rax,[rip+0x1f7fb]        # 0x140020818
   14000101d:	mov    rbx,rcx
   140001020:	mov    QWORD PTR [rcx],rax
   140001023:	test   dl,0x1
   140001026:	je     0x14000102d
   140001028:	call   0x14001ee46
   14000102d:	mov    rax,rbx
   140001030:	add    rsp,0x20
   140001034:	pop    rbx
   140001035:	ret    
   140001036:	int3   
   140001037:	int3   
   140001038:	int3   
   140001039:	int3   
   14000103a:	int3   
   14000103b:	int3   
   14000103c:	int3   
   14000103d:	int3   
   14000103e:	int3   
   14000103f:	int3   
   140001040:	mov    QWORD PTR [rsp+0x8],rbx
   140001045:	push   rdi
   140001046:	sub    rsp,0x40
   14000104a:	mov    rdi,rcx
   14000104d:	lea    rcx,[rsp+0x58]
   140001052:	xor    edx,edx
   140001054:	call   QWORD PTR [rip+0x1f056]        # 0x1400200b0
   14000105a:	mov    r11,QWORD PTR [rip+0x3155f]        # 0x1400325c0
   140001061:	mov    rcx,QWORD PTR [rip+0x1f040]        # 0x1400200a8
   140001068:	mov    QWORD PTR [rsp+0x60],r11
   14000106d:	call   QWORD PTR [rip+0x1f02d]        # 0x1400200a0
   140001073:	mov    rcx,rdi
   140001076:	mov    rdx,rax
   140001079:	call   QWORD PTR [rip+0x1f019]        # 0x140020098
   14000107f:	mov    rbx,rax
   140001082:	test   rax,rax
   140001085:	jne    0x1400010e6
   140001087:	mov    rbx,QWORD PTR [rsp+0x60]
   14000108c:	test   rbx,rbx
   14000108f:	jne    0x1400010e6
   140001091:	lea    rcx,[rsp+0x60]
   140001096:	mov    rdx,rdi
   140001099:	call   QWORD PTR [rip+0x1eff1]        # 0x140020090
   14000109f:	cmp    rax,0xffffffffffffffff
   1400010a3:	jne    0x1400010c9
   1400010a5:	lea    rdx,[rip+0x1f79c]        # 0x140020848
   1400010ac:	lea    rcx,[rsp+0x20]
   1400010b1:	call   QWORD PTR [rip+0x1f0e9]        # 0x1400201a0
   1400010b7:	lea    rdx,[rip+0x2c26a]        # 0x14002d328
   1400010be:	lea    rcx,[rsp+0x20]
   1400010c3:	call   0x14001ee4c
   1400010c8:	int3   
   1400010c9:	mov    rbx,QWORD PTR [rsp+0x60]
   1400010ce:	mov    rcx,rbx
   1400010d1:	mov    QWORD PTR [rip+0x314e8],rbx        # 0x1400325c0
   1400010d8:	call   QWORD PTR [rip+0x1efaa]        # 0x140020088
   1400010de:	mov    rcx,rbx
   1400010e1:	call   0x14001ed7c
   1400010e6:	lea    rcx,[rsp+0x58]
   1400010eb:	call   QWORD PTR [rip+0x1ef8f]        # 0x140020080
   1400010f1:	mov    rax,rbx
   1400010f4:	mov    rbx,QWORD PTR [rsp+0x50]
   1400010f9:	add    rsp,0x40
   1400010fd:	pop    rdi
   1400010fe:	ret    
   1400010ff:	int3   
   140001100:	mov    QWORD PTR [rsp+0x8],rbx
   140001105:	push   rdi
   140001106:	sub    rsp,0x20
   14000110a:	mov    rbx,rcx
   14000110d:	mov    ecx,0x8
   140001112:	mov    rdi,rdx
   140001115:	call   0x14001ee64
   14000111a:	test   rax,rax
   14000111d:	je     0x140001136
   14000111f:	mov    rdx,QWORD PTR [rdi]
   140001122:	mov    r8,QWORD PTR [rdx]
   140001125:	mov    QWORD PTR [rax],r8
   140001128:	mov    QWORD PTR [rbx],rax
   14000112b:	mov    rbx,QWORD PTR [rsp+0x30]
   140001130:	add    rsp,0x20
   140001134:	pop    rdi
   140001135:	ret    
   140001136:	mov    QWORD PTR [rbx],0x0
   14000113d:	mov    rbx,QWORD PTR [rsp+0x30]
   140001142:	add    rsp,0x20
   140001146:	pop    rdi
   140001147:	ret    
   140001148:	int3   
   140001149:	int3   
   14000114a:	int3   
   14000114b:	int3   
   14000114c:	int3   
   14000114d:	int3   
   14000114e:	int3   
   14000114f:	int3   
   140001150:	mov    rcx,QWORD PTR [rcx]
   140001153:	jmp    0x14001ee46
   140001158:	int3   
   140001159:	int3   
   14000115a:	int3   
   14000115b:	int3   
   14000115c:	int3   
   14000115d:	int3   
   14000115e:	int3   
   14000115f:	int3   
   140001160:	mov    QWORD PTR [rsp+0x8],rbx
   140001165:	push   rdi
   140001166:	sub    rsp,0x20
   14000116a:	mov    ecx,0x10
   14000116f:	mov    rdi,r8
   140001172:	mov    rbx,rdx
   140001175:	call   0x14001ee64
   14000117a:	test   rax,rax
   14000117d:	je     0x140001199
   14000117f:	mov    rdx,rdi
   140001182:	mov    rcx,rax
   140001185:	call   QWORD PTR [rip+0x1f5ad]        # 0x140020738
   14000118b:	mov    QWORD PTR [rbx],rax
   14000118e:	mov    rbx,QWORD PTR [rsp+0x30]
   140001193:	add    rsp,0x20
   140001197:	pop    rdi
   140001198:	ret    
   140001199:	mov    QWORD PTR [rbx],0x0
   1400011a0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400011a5:	add    rsp,0x20
   1400011a9:	pop    rdi
   1400011aa:	ret    
   1400011ab:	int3   
   1400011ac:	int3   
   1400011ad:	int3   
   1400011ae:	int3   
   1400011af:	int3   
   1400011b0:	cmp    rdx,r8
   1400011b3:	je     0x14000120e
   1400011b5:	mov    QWORD PTR [rsp+0x8],rbx
   1400011ba:	mov    QWORD PTR [rsp+0x10],rsi
   1400011bf:	push   rdi
   1400011c0:	sub    rsp,0x20
   1400011c4:	mov    rdi,r9
   1400011c7:	mov    rsi,r8
   1400011ca:	mov    rbx,rdx
   1400011cd:	nop    DWORD PTR [rax]
   1400011d0:	mov    ecx,0x10
   1400011d5:	call   0x14001ee64
   1400011da:	test   rax,rax
   1400011dd:	je     0x1400011ed
   1400011df:	mov    rdx,QWORD PTR [rdi]
   1400011e2:	mov    rcx,rax
   1400011e5:	call   QWORD PTR [rip+0x1f54d]        # 0x140020738
   1400011eb:	jmp    0x1400011ef
   1400011ed:	xor    eax,eax
   1400011ef:	mov    QWORD PTR [rbx],rax
   1400011f2:	add    rbx,0x8
   1400011f6:	add    rdi,0x8
   1400011fa:	cmp    rbx,rsi
   1400011fd:	jne    0x1400011d0
   1400011ff:	mov    rbx,QWORD PTR [rsp+0x30]
   140001204:	mov    rsi,QWORD PTR [rsp+0x38]
   140001209:	add    rsp,0x20
   14000120d:	pop    rdi
   14000120e:	repz ret 
   140001210:	mov    QWORD PTR [rsp+0x8],rbx
   140001215:	mov    QWORD PTR [rsp+0x10],rsi
   14000121a:	push   rdi
   14000121b:	sub    rsp,0x30
   14000121f:	xor    r9d,r9d
   140001222:	mov    rsi,rdx
   140001225:	mov    rdi,rcx
   140001228:	lea    edx,[r9+0x30]
   14000122c:	lea    r8d,[r9+0x8]
   140001230:	mov    rcx,rsi
   140001233:	mov    BYTE PTR [rsp+0x20],0x0
   140001238:	call   QWORD PTR [rip+0x1f4ea]        # 0x140020728
   14000123e:	lea    rcx,[rax+0x18]
   140001242:	mov    rbx,rax
   140001245:	test   rcx,rcx
   140001248:	je     0x140001254
   14000124a:	lea    rdx,[rdi+0x18]
   14000124e:	call   QWORD PTR [rip+0x1f544]        # 0x140020798
   140001254:	lea    rcx,[rbx+0x20]
   140001258:	test   rcx,rcx
   14000125b:	je     0x140001267
   14000125d:	lea    rdx,[rdi+0x20]
   140001261:	call   QWORD PTR [rip+0x1f4d1]        # 0x140020738
   140001267:	test   BYTE PTR [rdi],0x1
   14000126a:	je     0x140001272
   14000126c:	or     QWORD PTR [rbx],0x1
   140001270:	jmp    0x140001276
   140001272:	and    QWORD PTR [rbx],0xfffffffffffffffe
   140001276:	mov    rcx,QWORD PTR [rdi+0x8]
   14000127a:	test   rcx,rcx
   14000127d:	je     0x140001294
   14000127f:	mov    rdx,rsi
   140001282:	call   0x140001210
   140001287:	mov    QWORD PTR [rbx+0x8],rax
   14000128b:	and    QWORD PTR [rax],0x3
   14000128f:	or     QWORD PTR [rax],rbx
   140001292:	jmp    0x14000129c
   140001294:	mov    QWORD PTR [rbx+0x8],0x0
   14000129c:	mov    rcx,QWORD PTR [rdi+0x10]
   1400012a0:	test   rcx,rcx
   1400012a3:	je     0x1400012cb
   1400012a5:	mov    rdx,rsi
   1400012a8:	call   0x140001210
   1400012ad:	mov    QWORD PTR [rbx+0x10],rax
   1400012b1:	and    QWORD PTR [rax],0x3
   1400012b5:	or     QWORD PTR [rax],rbx
   1400012b8:	mov    rax,rbx
   1400012bb:	mov    rbx,QWORD PTR [rsp+0x40]
   1400012c0:	mov    rsi,QWORD PTR [rsp+0x48]
   1400012c5:	add    rsp,0x30
   1400012c9:	pop    rdi
   1400012ca:	ret    
   1400012cb:	mov    rsi,QWORD PTR [rsp+0x48]
   1400012d0:	mov    QWORD PTR [rbx+0x10],0x0
   1400012d8:	mov    rax,rbx
   1400012db:	mov    rbx,QWORD PTR [rsp+0x40]
   1400012e0:	add    rsp,0x30
   1400012e4:	pop    rdi
   1400012e5:	ret    
   1400012e6:	int3   
   1400012e7:	int3   
   1400012e8:	int3   
   1400012e9:	int3   
   1400012ea:	int3   
   1400012eb:	int3   
   1400012ec:	int3   
   1400012ed:	int3   
   1400012ee:	int3   
   1400012ef:	int3   
   1400012f0:	rex push rbx
   1400012f2:	sub    rsp,0x20
   1400012f6:	mov    rbx,rcx
   1400012f9:	test   rdx,rdx
   1400012fc:	je     0x140001317
   1400012fe:	test   rcx,rcx
   140001301:	je     0x140001362
   140001303:	mov    r8d,0x70
   140001309:	call   0x14001edd4
   14000130e:	mov    rax,rbx
   140001311:	add    rsp,0x20
   140001315:	pop    rbx
   140001316:	ret    
   140001317:	test   rcx,rcx
   14000131a:	je     0x140001362
   14000131c:	xor    eax,eax
   14000131e:	mov    QWORD PTR [rcx],rax
   140001321:	mov    QWORD PTR [rcx+0x8],rax
   140001325:	mov    DWORD PTR [rcx+0x10],eax
   140001328:	mov    DWORD PTR [rcx+0x14],eax
   14000132b:	mov    DWORD PTR [rcx+0x18],eax
   14000132e:	mov    DWORD PTR [rcx+0x1c],eax
   140001331:	mov    QWORD PTR [rcx+0x20],rax
   140001335:	mov    QWORD PTR [rcx+0x28],rax
   140001339:	mov    QWORD PTR [rcx+0x30],rax
   14000133d:	mov    QWORD PTR [rcx+0x38],rax
   140001341:	mov    QWORD PTR [rcx+0x40],rax
   140001345:	mov    QWORD PTR [rcx+0x48],rax
   140001349:	mov    QWORD PTR [rcx+0x50],rax
   14000134d:	mov    QWORD PTR [rcx+0x58],rax
   140001351:	mov    QWORD PTR [rcx+0x60],rax
   140001355:	mov    QWORD PTR [rcx+0x68],rax
   140001359:	mov    rax,rbx
   14000135c:	add    rsp,0x20
   140001360:	pop    rbx
   140001361:	ret    
   140001362:	xor    eax,eax
   140001364:	mov    rbx,rax
   140001367:	add    rsp,0x20
   14000136b:	pop    rbx
   14000136c:	ret    
   14000136d:	int3   
   14000136e:	int3   
   14000136f:	int3   
   140001370:	mov    QWORD PTR [rsp+0x8],rcx
   140001375:	push   rbx
   140001376:	push   rsi
   140001377:	push   rdi
   140001378:	push   r12
   14000137a:	push   r13
   14000137c:	push   r14
   14000137e:	push   r15
   140001380:	sub    rsp,0x50
   140001384:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14000138d:	mov    r14,rdx
   140001390:	mov    r12,rcx
   140001393:	xor    esi,esi
   140001395:	mov    DWORD PTR [rsp+0x20],esi
   140001399:	xor    eax,eax
   14000139b:	or     rcx,0xffffffffffffffff
   14000139f:	mov    rdi,rdx
   1400013a2:	repnz scas al,BYTE PTR es:[rdi]
   1400013a4:	not    rcx
   1400013a7:	lea    r13,[rcx-0x1]
   1400013ab:	mov    rax,QWORD PTR [r12]
   1400013af:	movsxd rcx,DWORD PTR [rax+0x4]
   1400013b3:	mov    rbx,QWORD PTR [rcx+r12*1+0x28]
   1400013b8:	test   rbx,rbx
   1400013bb:	jle    0x1400013c7
   1400013bd:	cmp    rbx,r13
   1400013c0:	jle    0x1400013c7
   1400013c2:	sub    rbx,r13
   1400013c5:	jmp    0x1400013c9
   1400013c7:	xor    ebx,ebx
   1400013c9:	mov    rdi,r12
   1400013cc:	mov    QWORD PTR [rsp+0x40],r12
   1400013d1:	mov    rcx,QWORD PTR [rcx+r12*1+0x48]
   1400013d6:	test   rcx,rcx
   1400013d9:	je     0x1400013e5
   1400013db:	add    rcx,0x8
   1400013df:	call   QWORD PTR [rip+0x1ec93]        # 0x140020078
   1400013e5:	mov    rax,QWORD PTR [r12]
   1400013e9:	movsxd rcx,DWORD PTR [rax+0x4]
   1400013ed:	cmp    DWORD PTR [rcx+r12*1+0x10],esi
   1400013f2:	jne    0x140001404
   1400013f4:	mov    rcx,QWORD PTR [rcx+r12*1+0x50]
   1400013f9:	test   rcx,rcx
   1400013fc:	je     0x140001404
   1400013fe:	call   QWORD PTR [rip+0x1eccc]        # 0x1400200d0
   140001404:	mov    rax,QWORD PTR [r12]
   140001408:	movsxd rcx,DWORD PTR [rax+0x4]
   14000140c:	cmp    DWORD PTR [rcx+r12*1+0x10],esi
   140001411:	sete   al
   140001414:	test   al,al
   140001416:	jne    0x140001422
   140001418:	mov    esi,0x4
   14000141d:	jmp    0x140001573
   140001422:	mov    rax,QWORD PTR [r12]
   140001426:	movsxd rcx,DWORD PTR [rax+0x4]
   14000142a:	add    rcx,r12
   14000142d:	lea    rdx,[rsp+0xa0]
   140001435:	call   QWORD PTR [rip+0x1ecc5]        # 0x140020100
   14000143b:	mov    rcx,rax
   14000143e:	call   0x140001040
   140001443:	mov    QWORD PTR [rsp+0xa8],rax
   14000144b:	lea    rcx,[rsp+0xa0]
   140001453:	call   QWORD PTR [rip+0x1ec9f]        # 0x1400200f8
   140001459:	mov    rdx,QWORD PTR [r12]
   14000145d:	movsxd rcx,DWORD PTR [rdx+0x4]
   140001461:	mov    edx,DWORD PTR [rcx+r12*1+0x18]
   140001466:	and    edx,0x1c0
   14000146c:	cmp    edx,0x40
   14000146f:	je     0x1400014ac
   140001471:	mov    edi,0xffff
   140001476:	test   rbx,rbx
   140001479:	jle    0x1400014b1
   14000147b:	mov    rax,QWORD PTR [r12]
   14000147f:	movsxd rcx,DWORD PTR [rax+0x4]
   140001483:	movzx  edx,WORD PTR [rcx+r12*1+0x58]
   140001489:	mov    rcx,QWORD PTR [rcx+r12*1+0x48]
   14000148e:	call   QWORD PTR [rip+0x1ec5c]        # 0x1400200f0
   140001494:	cmp    di,ax
   140001497:	jne    0x1400014a2
   140001499:	or     esi,0x4
   14000149c:	mov    DWORD PTR [rsp+0x20],esi
   1400014a0:	jmp    0x1400014b1
   1400014a2:	dec    rbx
   1400014a5:	mov    QWORD PTR [rsp+0x28],rbx
   1400014aa:	jmp    0x140001476
   1400014ac:	mov    edi,0xffff
   1400014b1:	mov    r15d,0x4
   1400014b7:	test   esi,esi
   1400014b9:	jne    0x14000154a
   1400014bf:	test   r13,r13
   1400014c2:	jle    0x140001514
   1400014c4:	mov    rax,QWORD PTR [r12]
   1400014c8:	movsxd rcx,DWORD PTR [rax+0x4]
   1400014cc:	mov    rdi,QWORD PTR [rcx+r12*1+0x48]
   1400014d1:	movzx  edx,BYTE PTR [r14]
   1400014d5:	mov    rcx,QWORD PTR [rsp+0xa8]
   1400014dd:	call   QWORD PTR [rip+0x1ec05]        # 0x1400200e8
   1400014e3:	movzx  edx,ax
   1400014e6:	mov    rcx,rdi
   1400014e9:	call   QWORD PTR [rip+0x1ec01]        # 0x1400200f0
   1400014ef:	mov    edi,0xffff
   1400014f4:	cmp    di,ax
   1400014f7:	cmove  esi,r15d
   1400014fb:	mov    DWORD PTR [rsp+0x20],esi
   1400014ff:	dec    r13
   140001502:	mov    QWORD PTR [rsp+0x38],r13
   140001507:	inc    r14
   14000150a:	mov    QWORD PTR [rsp+0x98],r14
   140001512:	jmp    0x1400014b7
   140001514:	test   rbx,rbx
   140001517:	jle    0x14000154a
   140001519:	mov    rax,QWORD PTR [r12]
   14000151d:	movsxd rcx,DWORD PTR [rax+0x4]
   140001521:	movzx  edx,WORD PTR [rcx+r12*1+0x58]
   140001527:	mov    rcx,QWORD PTR [rcx+r12*1+0x48]
   14000152c:	call   QWORD PTR [rip+0x1ebbe]        # 0x1400200f0
   140001532:	cmp    di,ax
   140001535:	jne    0x140001540
   140001537:	or     esi,r15d
   14000153a:	mov    DWORD PTR [rsp+0x20],esi
   14000153e:	jmp    0x14000154a
   140001540:	dec    rbx
   140001543:	mov    QWORD PTR [rsp+0x28],rbx
   140001548:	jmp    0x140001514
   14000154a:	mov    rax,QWORD PTR [r12]
   14000154e:	movsxd rcx,DWORD PTR [rax+0x4]
   140001552:	mov    QWORD PTR [rcx+r12*1+0x28],0x0
   14000155b:	mov    rdi,QWORD PTR [rsp+0x40]
   140001560:	jmp    0x140001573
   140001562:	mov    r12,QWORD PTR [rsp+0x90]
   14000156a:	mov    esi,DWORD PTR [rsp+0x20]
   14000156e:	mov    rdi,QWORD PTR [rsp+0x40]
   140001573:	mov    rax,QWORD PTR [r12]
   140001577:	movsxd rcx,DWORD PTR [rax+0x4]
   14000157b:	add    rcx,r12
   14000157e:	xor    r8d,r8d
   140001581:	mov    edx,esi
   140001583:	call   QWORD PTR [rip+0x1eb57]        # 0x1400200e0
   140001589:	call   QWORD PTR [rip+0x1eb39]        # 0x1400200c8
   14000158f:	test   al,al
   140001591:	jne    0x14000159c
   140001593:	mov    rcx,rdi
   140001596:	call   QWORD PTR [rip+0x1eb3c]        # 0x1400200d8
   14000159c:	mov    rax,QWORD PTR [rdi]
   14000159f:	movsxd rcx,DWORD PTR [rax+0x4]
   1400015a3:	mov    rcx,QWORD PTR [rcx+rdi*1+0x48]
   1400015a8:	test   rcx,rcx
   1400015ab:	je     0x1400015bc
   1400015ad:	add    rcx,0x8
   1400015b1:	call   QWORD PTR [rip+0x1ebc1]        # 0x140020178
   1400015b7:	mov    rax,r12
   1400015ba:	jmp    0x1400015bf
   1400015bc:	mov    rax,r12
   1400015bf:	add    rsp,0x50
   1400015c3:	pop    r15
   1400015c5:	pop    r14
   1400015c7:	pop    r13
   1400015c9:	pop    r12
   1400015cb:	pop    rdi
   1400015cc:	pop    rsi
   1400015cd:	pop    rbx
   1400015ce:	ret    
   1400015cf:	int3   
   1400015d0:	mov    BYTE PTR [rsp+0x10],dl
   1400015d4:	mov    QWORD PTR [rsp+0x8],rcx
   1400015d9:	push   rbx
   1400015da:	push   rsi
   1400015db:	push   rdi
   1400015dc:	push   r12
   1400015de:	push   r13
   1400015e0:	push   r14
   1400015e2:	push   r15
   1400015e4:	sub    rsp,0x50
   1400015e8:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   1400015f1:	mov    rsi,rcx
   1400015f4:	xor    r12d,r12d
   1400015f7:	mov    DWORD PTR [rsp+0x20],r12d
   1400015fc:	mov    r14,rcx
   1400015ff:	mov    QWORD PTR [rsp+0x38],rcx
   140001604:	mov    rax,QWORD PTR [rcx]
   140001607:	movsxd r8,DWORD PTR [rax+0x4]
   14000160b:	mov    rcx,QWORD PTR [r8+rcx*1+0x48]
   140001610:	test   rcx,rcx
   140001613:	je     0x14000161f
   140001615:	add    rcx,0x8
   140001619:	call   QWORD PTR [rip+0x1ea59]        # 0x140020078
   14000161f:	mov    rax,QWORD PTR [rsi]
   140001622:	movsxd rcx,DWORD PTR [rax+0x4]
   140001626:	cmp    DWORD PTR [rcx+rsi*1+0x10],r12d
   14000162b:	jne    0x14000163d
   14000162d:	mov    rcx,QWORD PTR [rcx+rsi*1+0x50]
   140001632:	test   rcx,rcx
   140001635:	je     0x14000163d
   140001637:	call   QWORD PTR [rip+0x1ea93]        # 0x1400200d0
   14000163d:	mov    rcx,QWORD PTR [rsi]
   140001640:	movsxd rax,DWORD PTR [rcx+0x4]
   140001644:	cmp    DWORD PTR [rax+rsi*1+0x10],r12d
   140001649:	sete   al
   14000164c:	test   al,al
   14000164e:	je     0x140001790
   140001654:	movsxd rcx,DWORD PTR [rcx+0x4]
   140001658:	add    rcx,rsi
   14000165b:	lea    rdx,[rsp+0xa0]
   140001663:	call   QWORD PTR [rip+0x1ea97]        # 0x140020100
   140001669:	mov    rcx,rax
   14000166c:	call   0x140001040
   140001671:	mov    QWORD PTR [rsp+0xa8],rax
   140001679:	lea    rcx,[rsp+0xa0]
   140001681:	call   QWORD PTR [rip+0x1ea71]        # 0x1400200f8
   140001687:	mov    r11,QWORD PTR [rsi]
   14000168a:	movsxd rcx,DWORD PTR [r11+0x4]
   14000168e:	mov    rdi,QWORD PTR [rcx+rsi*1+0x28]
   140001693:	cmp    rdi,0x1
   140001697:	jg     0x14000169d
   140001699:	xor    edi,edi
   14000169b:	jmp    0x1400016a0
   14000169d:	dec    rdi
   1400016a0:	mov    rax,QWORD PTR [rsi]
   1400016a3:	movsxd rcx,DWORD PTR [rax+0x4]
   1400016a7:	mov    eax,DWORD PTR [rcx+rsi*1+0x18]
   1400016ab:	and    eax,0x1c0
   1400016b0:	cmp    eax,0x40
   1400016b3:	je     0x1400016fd
   1400016b5:	mov    r13d,0x4
   1400016bb:	mov    r15d,0xffff
   1400016c1:	test   r12d,r12d
   1400016c4:	jne    0x14000177c
   1400016ca:	test   rdi,rdi
   1400016cd:	jle    0x140001709
   1400016cf:	mov    rax,QWORD PTR [rsi]
   1400016d2:	movsxd rcx,DWORD PTR [rax+0x4]
   1400016d6:	movzx  edx,WORD PTR [rcx+rsi*1+0x58]
   1400016db:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   1400016e0:	call   QWORD PTR [rip+0x1ea0a]        # 0x1400200f0
   1400016e6:	cmp    r15w,ax
   1400016ea:	cmove  r12d,r13d
   1400016ee:	mov    DWORD PTR [rsp+0x20],r12d
   1400016f3:	dec    rdi
   1400016f6:	mov    QWORD PTR [rsp+0x28],rdi
   1400016fb:	jmp    0x1400016c1
   1400016fd:	mov    r13d,0x4
   140001703:	mov    r15d,0xffff
   140001709:	mov    rax,QWORD PTR [rsi]
   14000170c:	movsxd rcx,DWORD PTR [rax+0x4]
   140001710:	mov    rbx,QWORD PTR [rcx+rsi*1+0x48]
   140001715:	movzx  edx,BYTE PTR [rsp+0x98]
   14000171d:	mov    rcx,QWORD PTR [rsp+0xa8]
   140001725:	call   QWORD PTR [rip+0x1e9bd]        # 0x1400200e8
   14000172b:	movzx  edx,ax
   14000172e:	mov    rcx,rbx
   140001731:	call   QWORD PTR [rip+0x1e9b9]        # 0x1400200f0
   140001737:	cmp    r15w,ax
   14000173b:	cmove  r12d,r13d
   14000173f:	mov    DWORD PTR [rsp+0x20],r12d
   140001744:	test   r12d,r12d
   140001747:	jne    0x14000177c
   140001749:	test   rdi,rdi
   14000174c:	jle    0x14000177c
   14000174e:	mov    rax,QWORD PTR [rsi]
   140001751:	movsxd rcx,DWORD PTR [rax+0x4]
   140001755:	movzx  edx,WORD PTR [rcx+rsi*1+0x58]
   14000175a:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   14000175f:	call   QWORD PTR [rip+0x1e98b]        # 0x1400200f0
   140001765:	cmp    r15w,ax
   140001769:	cmove  r12d,r13d
   14000176d:	mov    DWORD PTR [rsp+0x20],r12d
   140001772:	dec    rdi
   140001775:	mov    QWORD PTR [rsp+0x28],rdi
   14000177a:	jmp    0x140001744
   14000177c:	jmp    0x140001790
   14000177e:	mov    rsi,QWORD PTR [rsp+0x90]
   140001786:	mov    r12d,DWORD PTR [rsp+0x20]
   14000178b:	mov    r14,QWORD PTR [rsp+0x38]
   140001790:	mov    rax,QWORD PTR [rsi]
   140001793:	movsxd rcx,DWORD PTR [rax+0x4]
   140001797:	mov    QWORD PTR [rcx+rsi*1+0x28],0x0
   1400017a0:	mov    rax,QWORD PTR [rsi]
   1400017a3:	movsxd rcx,DWORD PTR [rax+0x4]
   1400017a7:	add    rcx,rsi
   1400017aa:	xor    r8d,r8d
   1400017ad:	mov    edx,r12d
   1400017b0:	call   QWORD PTR [rip+0x1e92a]        # 0x1400200e0
   1400017b6:	call   QWORD PTR [rip+0x1e90c]        # 0x1400200c8
   1400017bc:	test   al,al
   1400017be:	jne    0x1400017c9
   1400017c0:	mov    rcx,r14
   1400017c3:	call   QWORD PTR [rip+0x1e90f]        # 0x1400200d8
   1400017c9:	mov    rax,QWORD PTR [r14]
   1400017cc:	movsxd rcx,DWORD PTR [rax+0x4]
   1400017d0:	mov    rcx,QWORD PTR [rcx+r14*1+0x48]
   1400017d5:	test   rcx,rcx
   1400017d8:	je     0x1400017e9
   1400017da:	add    rcx,0x8
   1400017de:	call   QWORD PTR [rip+0x1e994]        # 0x140020178
   1400017e4:	mov    rax,rsi
   1400017e7:	jmp    0x1400017ec
   1400017e9:	mov    rax,rsi
   1400017ec:	add    rsp,0x50
   1400017f0:	pop    r15
   1400017f2:	pop    r14
   1400017f4:	pop    r13
   1400017f6:	pop    r12
   1400017f8:	pop    rdi
   1400017f9:	pop    rsi
   1400017fa:	pop    rbx
   1400017fb:	ret    
   1400017fc:	int3   
   1400017fd:	int3   
   1400017fe:	int3   
   1400017ff:	int3   
   140001800:	mov    rax,rsp
   140001803:	mov    QWORD PTR [rax+0x8],rcx
   140001807:	push   r12
   140001809:	push   r13
   14000180b:	push   r14
   14000180d:	sub    rsp,0x50
   140001811:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14000181a:	mov    QWORD PTR [rax+0x10],rbx
   14000181e:	mov    QWORD PTR [rax+0x18],rsi
   140001822:	mov    QWORD PTR [rax+0x20],rdi
   140001826:	mov    r14,rdx
   140001829:	mov    rsi,rcx
   14000182c:	xor    ebx,ebx
   14000182e:	mov    DWORD PTR [rax-0x48],ebx
   140001831:	xor    eax,eax
   140001833:	or     rcx,0xffffffffffffffff
   140001837:	mov    rdi,rdx
   14000183a:	repnz scas al,BYTE PTR es:[rdi]
   14000183c:	not    rcx
   14000183f:	lea    r13,[rcx-0x1]
   140001843:	mov    rax,QWORD PTR [rsi]
   140001846:	movsxd rcx,DWORD PTR [rax+0x4]
   14000184a:	mov    rdi,QWORD PTR [rcx+rsi*1+0x28]
   14000184f:	test   rdi,rdi
   140001852:	jle    0x14000185e
   140001854:	cmp    rdi,r13
   140001857:	jle    0x14000185e
   140001859:	sub    rdi,r13
   14000185c:	jmp    0x140001860
   14000185e:	xor    edi,edi
   140001860:	mov    r12,rsi
   140001863:	mov    QWORD PTR [rsp+0x38],rsi
   140001868:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   14000186d:	test   rcx,rcx
   140001870:	je     0x14000187c
   140001872:	add    rcx,0x8
   140001876:	call   QWORD PTR [rip+0x1e7fc]        # 0x140020078
   14000187c:	mov    rax,QWORD PTR [rsi]
   14000187f:	movsxd rcx,DWORD PTR [rax+0x4]
   140001883:	cmp    DWORD PTR [rcx+rsi*1+0x10],ebx
   140001887:	jne    0x140001899
   140001889:	mov    rcx,QWORD PTR [rcx+rsi*1+0x50]
   14000188e:	test   rcx,rcx
   140001891:	je     0x140001899
   140001893:	call   QWORD PTR [rip+0x1e81f]        # 0x1400200b8
   140001899:	mov    rax,QWORD PTR [rsi]
   14000189c:	movsxd rcx,DWORD PTR [rax+0x4]
   1400018a0:	cmp    DWORD PTR [rcx+rsi*1+0x10],ebx
   1400018a4:	sete   al
   1400018a7:	test   al,al
   1400018a9:	jne    0x1400018b5
   1400018ab:	mov    ebx,0x4
   1400018b0:	jmp    0x140001984
   1400018b5:	mov    rax,QWORD PTR [rsi]
   1400018b8:	movsxd rcx,DWORD PTR [rax+0x4]
   1400018bc:	mov    eax,DWORD PTR [rcx+rsi*1+0x18]
   1400018c0:	and    eax,0x1c0
   1400018c5:	cmp    eax,0x40
   1400018c8:	je     0x140001908
   1400018ca:	nop    WORD PTR [rax+rax*1+0x0]
   1400018d0:	test   rdi,rdi
   1400018d3:	jle    0x140001904
   1400018d5:	mov    rax,QWORD PTR [rsi]
   1400018d8:	movsxd rcx,DWORD PTR [rax+0x4]
   1400018dc:	movzx  edx,BYTE PTR [rcx+rsi*1+0x58]
   1400018e1:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   1400018e6:	call   QWORD PTR [rip+0x1e82c]        # 0x140020118
   1400018ec:	cmp    eax,0xffffffff
   1400018ef:	jne    0x1400018fa
   1400018f1:	or     ebx,0x4
   1400018f4:	mov    DWORD PTR [rsp+0x20],ebx
   1400018f8:	jmp    0x140001904
   1400018fa:	dec    rdi
   1400018fd:	mov    QWORD PTR [rsp+0x28],rdi
   140001902:	jmp    0x1400018d0
   140001904:	test   ebx,ebx
   140001906:	jne    0x140001964
   140001908:	mov    rax,QWORD PTR [rsi]
   14000190b:	movsxd rcx,DWORD PTR [rax+0x4]
   14000190f:	mov    r8,r13
   140001912:	mov    rdx,r14
   140001915:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   14000191a:	call   QWORD PTR [rip+0x1e7f0]        # 0x140020110
   140001920:	cmp    rax,r13
   140001923:	je     0x140001930
   140001925:	mov    ebx,0x4
   14000192a:	mov    DWORD PTR [rsp+0x20],ebx
   14000192e:	jmp    0x140001964
   140001930:	test   rdi,rdi
   140001933:	jle    0x140001964
   140001935:	mov    rax,QWORD PTR [rsi]
   140001938:	movsxd rcx,DWORD PTR [rax+0x4]
   14000193c:	movzx  edx,BYTE PTR [rcx+rsi*1+0x58]
   140001941:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   140001946:	call   QWORD PTR [rip+0x1e7cc]        # 0x140020118
   14000194c:	cmp    eax,0xffffffff
   14000194f:	jne    0x14000195a
   140001951:	or     ebx,0x4
   140001954:	mov    DWORD PTR [rsp+0x20],ebx
   140001958:	jmp    0x140001964
   14000195a:	dec    rdi
   14000195d:	mov    QWORD PTR [rsp+0x28],rdi
   140001962:	jmp    0x140001930
   140001964:	mov    rax,QWORD PTR [rsi]
   140001967:	movsxd rcx,DWORD PTR [rax+0x4]
   14000196b:	mov    QWORD PTR [rcx+rsi*1+0x28],0x0
   140001974:	jmp    0x140001984
   140001976:	mov    rsi,QWORD PTR [rsp+0x70]
   14000197b:	mov    ebx,DWORD PTR [rsp+0x20]
   14000197f:	mov    r12,QWORD PTR [rsp+0x38]
   140001984:	mov    rax,QWORD PTR [rsi]
   140001987:	movsxd rcx,DWORD PTR [rax+0x4]
   14000198b:	add    rcx,rsi
   14000198e:	xor    r8d,r8d
   140001991:	mov    edx,ebx
   140001993:	call   QWORD PTR [rip+0x1e76f]        # 0x140020108
   140001999:	call   QWORD PTR [rip+0x1e729]        # 0x1400200c8
   14000199f:	test   al,al
   1400019a1:	jne    0x1400019ac
   1400019a3:	mov    rcx,r12
   1400019a6:	call   QWORD PTR [rip+0x1e714]        # 0x1400200c0
   1400019ac:	mov    rax,QWORD PTR [r12]
   1400019b0:	movsxd rcx,DWORD PTR [rax+0x4]
   1400019b4:	mov    rcx,QWORD PTR [rcx+r12*1+0x48]
   1400019b9:	test   rcx,rcx
   1400019bc:	je     0x1400019cd
   1400019be:	add    rcx,0x8
   1400019c2:	call   QWORD PTR [rip+0x1e7b0]        # 0x140020178
   1400019c8:	mov    rax,rsi
   1400019cb:	jmp    0x1400019d0
   1400019cd:	mov    rax,rsi
   1400019d0:	lea    r11,[rsp+0x50]
   1400019d5:	mov    rbx,QWORD PTR [r11+0x28]
   1400019d9:	mov    rsi,QWORD PTR [r11+0x30]
   1400019dd:	mov    rdi,QWORD PTR [r11+0x38]
   1400019e1:	mov    rsp,r11
   1400019e4:	pop    r14
   1400019e6:	pop    r13
   1400019e8:	pop    r12
   1400019ea:	ret    
   1400019eb:	int3   
   1400019ec:	int3   
   1400019ed:	int3   
   1400019ee:	int3   
   1400019ef:	int3   
   1400019f0:	mov    rax,rsp
   1400019f3:	mov    QWORD PTR [rax+0x8],rcx
   1400019f7:	push   r12
   1400019f9:	push   r13
   1400019fb:	push   r14
   1400019fd:	sub    rsp,0x50
   140001a01:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140001a0a:	mov    QWORD PTR [rax+0x10],rbx
   140001a0e:	mov    QWORD PTR [rax+0x18],rsi
   140001a12:	mov    QWORD PTR [rax+0x20],rdi
   140001a16:	movzx  r14d,dl
   140001a1a:	mov    rdi,rcx
   140001a1d:	xor    esi,esi
   140001a1f:	mov    DWORD PTR [rax-0x48],esi
   140001a22:	mov    r13,rcx
   140001a25:	mov    QWORD PTR [rsp+0x38],rcx
   140001a2a:	mov    rax,QWORD PTR [rcx]
   140001a2d:	movsxd r8,DWORD PTR [rax+0x4]
   140001a31:	mov    rcx,QWORD PTR [r8+rcx*1+0x48]
   140001a36:	test   rcx,rcx
   140001a39:	je     0x140001a45
   140001a3b:	add    rcx,0x8
   140001a3f:	call   QWORD PTR [rip+0x1e633]        # 0x140020078
   140001a45:	mov    rax,QWORD PTR [rdi]
   140001a48:	movsxd rcx,DWORD PTR [rax+0x4]
   140001a4c:	cmp    DWORD PTR [rcx+rdi*1+0x10],esi
   140001a50:	jne    0x140001a62
   140001a52:	mov    rcx,QWORD PTR [rcx+rdi*1+0x50]
   140001a57:	test   rcx,rcx
   140001a5a:	je     0x140001a62
   140001a5c:	call   QWORD PTR [rip+0x1e656]        # 0x1400200b8
   140001a62:	mov    rax,QWORD PTR [rdi]
   140001a65:	movsxd rbx,DWORD PTR [rax+0x4]
   140001a69:	cmp    DWORD PTR [rbx+rdi*1+0x10],esi
   140001a6d:	sete   al
   140001a70:	test   al,al
   140001a72:	je     0x140001b4a
   140001a78:	mov    rbx,QWORD PTR [rbx+rdi*1+0x28]
   140001a7d:	cmp    rbx,0x1
   140001a81:	jg     0x140001a87
   140001a83:	xor    ebx,ebx
   140001a85:	jmp    0x140001a8a
   140001a87:	dec    rbx
   140001a8a:	mov    rax,QWORD PTR [rdi]
   140001a8d:	movsxd rcx,DWORD PTR [rax+0x4]
   140001a91:	mov    eax,DWORD PTR [rcx+rdi*1+0x18]
   140001a95:	and    eax,0x1c0
   140001a9a:	cmp    eax,0x40
   140001a9d:	je     0x140001ade
   140001a9f:	mov    r12d,0x4
   140001aa5:	test   esi,esi
   140001aa7:	jne    0x140001b3a
   140001aad:	test   rbx,rbx
   140001ab0:	jle    0x140001ae4
   140001ab2:	mov    rax,QWORD PTR [rdi]
   140001ab5:	movsxd rcx,DWORD PTR [rax+0x4]
   140001ab9:	movzx  edx,BYTE PTR [rcx+rdi*1+0x58]
   140001abe:	mov    rcx,QWORD PTR [rcx+rdi*1+0x48]
   140001ac3:	call   QWORD PTR [rip+0x1e64f]        # 0x140020118
   140001ac9:	cmp    eax,0xffffffff
   140001acc:	cmove  esi,r12d
   140001ad0:	mov    DWORD PTR [rsp+0x20],esi
   140001ad4:	dec    rbx
   140001ad7:	mov    QWORD PTR [rsp+0x28],rbx
   140001adc:	jmp    0x140001aa5
   140001ade:	mov    r12d,0x4
   140001ae4:	mov    rax,QWORD PTR [rdi]
   140001ae7:	movsxd rcx,DWORD PTR [rax+0x4]
   140001aeb:	movzx  edx,r14b
   140001aef:	mov    rcx,QWORD PTR [rcx+rdi*1+0x48]
   140001af4:	call   QWORD PTR [rip+0x1e61e]        # 0x140020118
   140001afa:	cmp    eax,0xffffffff
   140001afd:	cmove  esi,r12d
   140001b01:	mov    DWORD PTR [rsp+0x20],esi
   140001b05:	test   esi,esi
   140001b07:	jne    0x140001b3a
   140001b09:	test   rbx,rbx
   140001b0c:	jle    0x140001b3a
   140001b0e:	mov    rax,QWORD PTR [rdi]
   140001b11:	movsxd rcx,DWORD PTR [rax+0x4]
   140001b15:	movzx  edx,BYTE PTR [rcx+rdi*1+0x58]
   140001b1a:	mov    rcx,QWORD PTR [rcx+rdi*1+0x48]
   140001b1f:	call   QWORD PTR [rip+0x1e5f3]        # 0x140020118
   140001b25:	cmp    eax,0xffffffff
   140001b28:	cmove  esi,r12d
   140001b2c:	mov    DWORD PTR [rsp+0x20],esi
   140001b30:	dec    rbx
   140001b33:	mov    QWORD PTR [rsp+0x28],rbx
   140001b38:	jmp    0x140001b05
   140001b3a:	jmp    0x140001b4a
   140001b3c:	mov    rdi,QWORD PTR [rsp+0x70]
   140001b41:	mov    esi,DWORD PTR [rsp+0x20]
   140001b45:	mov    r13,QWORD PTR [rsp+0x38]
   140001b4a:	mov    rax,QWORD PTR [rdi]
   140001b4d:	movsxd rcx,DWORD PTR [rax+0x4]
   140001b51:	mov    QWORD PTR [rcx+rdi*1+0x28],0x0
   140001b5a:	mov    rax,QWORD PTR [rdi]
   140001b5d:	movsxd rcx,DWORD PTR [rax+0x4]
   140001b61:	add    rcx,rdi
   140001b64:	xor    r8d,r8d
   140001b67:	mov    edx,esi
   140001b69:	call   QWORD PTR [rip+0x1e599]        # 0x140020108
   140001b6f:	call   QWORD PTR [rip+0x1e553]        # 0x1400200c8
   140001b75:	test   al,al
   140001b77:	jne    0x140001b82
   140001b79:	mov    rcx,r13
   140001b7c:	call   QWORD PTR [rip+0x1e53e]        # 0x1400200c0
   140001b82:	mov    rax,QWORD PTR [r13+0x0]
   140001b86:	movsxd rcx,DWORD PTR [rax+0x4]
   140001b8a:	mov    rcx,QWORD PTR [rcx+r13*1+0x48]
   140001b8f:	test   rcx,rcx
   140001b92:	je     0x140001ba3
   140001b94:	add    rcx,0x8
   140001b98:	call   QWORD PTR [rip+0x1e5da]        # 0x140020178
   140001b9e:	mov    rax,rdi
   140001ba1:	jmp    0x140001ba6
   140001ba3:	mov    rax,rdi
   140001ba6:	lea    r11,[rsp+0x50]
   140001bab:	mov    rbx,QWORD PTR [r11+0x28]
   140001baf:	mov    rsi,QWORD PTR [r11+0x30]
   140001bb3:	mov    rdi,QWORD PTR [r11+0x38]
   140001bb7:	mov    rsp,r11
   140001bba:	pop    r14
   140001bbc:	pop    r13
   140001bbe:	pop    r12
   140001bc0:	ret    
   140001bc1:	int3   
   140001bc2:	int3   
   140001bc3:	int3   
   140001bc4:	int3   
   140001bc5:	int3   
   140001bc6:	int3   
   140001bc7:	int3   
   140001bc8:	int3   
   140001bc9:	int3   
   140001bca:	int3   
   140001bcb:	int3   
   140001bcc:	int3   
   140001bcd:	int3   
   140001bce:	int3   
   140001bcf:	int3   
   140001bd0:	mov    r8,QWORD PTR [rcx]
   140001bd3:	mov    rcx,QWORD PTR [rdx]
   140001bd6:	mov    rcx,QWORD PTR [rcx]
   140001bd9:	cmp    QWORD PTR [r8],rcx
   140001bdc:	sete   al
   140001bdf:	ret    
   140001be0:	mov    QWORD PTR [rsp+0x10],rbx
   140001be5:	mov    QWORD PTR [rsp+0x18],rbp
   140001bea:	push   rsi
   140001beb:	sub    rsp,0x20
   140001bef:	movsxd rax,DWORD PTR [rdx+0xc]
   140001bf3:	mov    rbp,rdx
   140001bf6:	lea    rbx,[rdx+rax*8+0x10]
   140001bfb:	movsxd rax,DWORD PTR [rdx+0x8]
   140001bff:	lea    rsi,[rdx+rax*8+0x10]
   140001c04:	cmp    rsi,rbx
   140001c07:	je     0x140001c38
   140001c09:	mov    QWORD PTR [rsp+0x30],rdi
   140001c0e:	xchg   ax,ax
   140001c10:	mov    rdi,QWORD PTR [rbx-0x8]
   140001c14:	sub    rbx,0x8
   140001c18:	test   rdi,rdi
   140001c1b:	je     0x140001c2e
   140001c1d:	mov    rcx,rdi
   140001c20:	call   QWORD PTR [rip+0x1eb22]        # 0x140020748
   140001c26:	mov    rcx,rdi
   140001c29:	call   0x14001ee46
   140001c2e:	cmp    rbx,rsi
   140001c31:	jne    0x140001c10
   140001c33:	mov    rdi,QWORD PTR [rsp+0x30]
   140001c38:	mov    rcx,rbp
   140001c3b:	mov    rbx,QWORD PTR [rsp+0x38]
   140001c40:	mov    rbp,QWORD PTR [rsp+0x40]
   140001c45:	add    rsp,0x20
   140001c49:	pop    rsi
   140001c4a:	rex.W jmp QWORD PTR [rip+0x1ea7f]        # 0x1400206d0
   140001c51:	int3   
   140001c52:	int3   
   140001c53:	int3   
   140001c54:	int3   
   140001c55:	int3   
   140001c56:	int3   
   140001c57:	int3   
   140001c58:	int3   
   140001c59:	int3   
   140001c5a:	int3   
   140001c5b:	int3   
   140001c5c:	int3   
   140001c5d:	int3   
   140001c5e:	int3   
   140001c5f:	int3   
   140001c60:	mov    QWORD PTR [rsp+0x8],rbx
   140001c65:	mov    QWORD PTR [rsp+0x10],rsi
   140001c6a:	push   rdi
   140001c6b:	sub    rsp,0x20
   140001c6f:	mov    rbx,QWORD PTR [rcx+0x10]
   140001c73:	mov    rsi,rdx
   140001c76:	test   rbx,rbx
   140001c79:	je     0x140001ccc
   140001c7b:	xor    edi,edi
   140001c7d:	nop    DWORD PTR [rax]
   140001c80:	lea    rcx,[rbx+0x18]
   140001c84:	mov    rdx,rsi
   140001c87:	call   QWORD PTR [rip+0x1ea83]        # 0x140020710
   140001c8d:	test   al,al
   140001c8f:	jne    0x140001c9a
   140001c91:	mov    rdi,rbx
   140001c94:	mov    rbx,QWORD PTR [rbx+0x8]
   140001c98:	jmp    0x140001c9e
   140001c9a:	mov    rbx,QWORD PTR [rbx+0x10]
   140001c9e:	test   rbx,rbx
   140001ca1:	jne    0x140001c80
   140001ca3:	test   rdi,rdi
   140001ca6:	je     0x140001ccc
   140001ca8:	lea    rdx,[rdi+0x18]
   140001cac:	mov    rcx,rsi
   140001caf:	call   QWORD PTR [rip+0x1ea5b]        # 0x140020710
   140001cb5:	test   al,al
   140001cb7:	jne    0x140001ccc
   140001cb9:	mov    rax,rdi
   140001cbc:	mov    rbx,QWORD PTR [rsp+0x30]
   140001cc1:	mov    rsi,QWORD PTR [rsp+0x38]
   140001cc6:	add    rsp,0x20
   140001cca:	pop    rdi
   140001ccb:	ret    
   140001ccc:	mov    rbx,QWORD PTR [rsp+0x30]
   140001cd1:	mov    rsi,QWORD PTR [rsp+0x38]
   140001cd6:	xor    eax,eax
   140001cd8:	add    rsp,0x20
   140001cdc:	pop    rdi
   140001cdd:	ret    
   140001cde:	int3   
   140001cdf:	int3   
   140001ce0:	mov    QWORD PTR [rsp+0x10],rbx
   140001ce5:	mov    QWORD PTR [rsp+0x18],rbp
   140001cea:	push   rsi
   140001ceb:	sub    rsp,0x20
   140001cef:	movsxd rax,DWORD PTR [rdx+0xc]
   140001cf3:	mov    rbp,rdx
   140001cf6:	lea    rbx,[rdx+rax*8+0x10]
   140001cfb:	movsxd rax,DWORD PTR [rdx+0x8]
   140001cff:	lea    rsi,[rdx+rax*8+0x10]
   140001d04:	cmp    rsi,rbx
   140001d07:	je     0x140001d39
   140001d09:	mov    QWORD PTR [rsp+0x30],rdi
   140001d0e:	xchg   ax,ax
   140001d10:	mov    rdi,QWORD PTR [rbx-0x8]
   140001d14:	sub    rbx,0x8
   140001d18:	test   rdi,rdi
   140001d1b:	je     0x140001d2f
   140001d1d:	lea    rcx,[rdi+0x18]
   140001d21:	call   QWORD PTR [rip+0x1ea59]        # 0x140020780
   140001d27:	mov    rcx,rdi
   140001d2a:	call   0x14001ee46
   140001d2f:	cmp    rbx,rsi
   140001d32:	jne    0x140001d10
   140001d34:	mov    rdi,QWORD PTR [rsp+0x30]
   140001d39:	mov    rcx,rbp
   140001d3c:	mov    rbx,QWORD PTR [rsp+0x38]
   140001d41:	mov    rbp,QWORD PTR [rsp+0x40]
   140001d46:	add    rsp,0x20
   140001d4a:	pop    rsi
   140001d4b:	rex.W jmp QWORD PTR [rip+0x1e97e]        # 0x1400206d0
   140001d52:	int3   
   140001d53:	int3   
   140001d54:	int3   
   140001d55:	int3   
   140001d56:	int3   
   140001d57:	int3   
   140001d58:	int3   
   140001d59:	int3   
   140001d5a:	int3   
   140001d5b:	int3   
   140001d5c:	int3   
   140001d5d:	int3   
   140001d5e:	int3   
   140001d5f:	int3   
   140001d60:	cmp    rdx,r8
   140001d63:	je     0x140001dee
   140001d69:	mov    QWORD PTR [rsp+0x10],rbp
   140001d6e:	mov    QWORD PTR [rsp+0x18],rsi
   140001d73:	push   rdi
   140001d74:	sub    rsp,0x20
   140001d78:	mov    rsi,r9
   140001d7b:	mov    rbp,r8
   140001d7e:	mov    rdi,rdx
   140001d81:	mov    QWORD PTR [rsp+0x30],rbx
   140001d86:	mov    ecx,0x20
   140001d8b:	call   0x14001ee64
   140001d90:	mov    rbx,rax
   140001d93:	test   rax,rax
   140001d96:	je     0x140001dc8
   140001d98:	mov    rdx,QWORD PTR [rsi]
   140001d9b:	add    rdx,0x18
   140001d9f:	mov    ecx,DWORD PTR [rdx-0x18]
   140001da2:	mov    DWORD PTR [rax],ecx
   140001da4:	mov    ecx,DWORD PTR [rdx-0x14]
   140001da7:	mov    DWORD PTR [rax+0x4],ecx
   140001daa:	mov    ecx,DWORD PTR [rdx-0x10]
   140001dad:	mov    DWORD PTR [rax+0x8],ecx
   140001db0:	mov    ecx,DWORD PTR [rdx-0xc]
   140001db3:	mov    DWORD PTR [rax+0xc],ecx
   140001db6:	mov    eax,DWORD PTR [rdx-0x8]
   140001db9:	lea    rcx,[rbx+0x18]
   140001dbd:	mov    DWORD PTR [rbx+0x10],eax
   140001dc0:	call   QWORD PTR [rip+0x1e9d2]        # 0x140020798
   140001dc6:	jmp    0x140001dca
   140001dc8:	xor    ebx,ebx
   140001dca:	mov    QWORD PTR [rdi],rbx
   140001dcd:	add    rdi,0x8
   140001dd1:	add    rsi,0x8
   140001dd5:	cmp    rdi,rbp
   140001dd8:	jne    0x140001d86
   140001dda:	mov    rbx,QWORD PTR [rsp+0x30]
   140001ddf:	mov    rbp,QWORD PTR [rsp+0x38]
   140001de4:	mov    rsi,QWORD PTR [rsp+0x40]
   140001de9:	add    rsp,0x20
   140001ded:	pop    rdi
   140001dee:	repz ret 
   140001df0:	sub    rsp,0x28
   140001df4:	mov    r8,rdx
   140001df7:	test   rdx,rdx
   140001dfa:	je     0x140001e17
   140001dfc:	mov    eax,DWORD PTR [rcx+0x8]
   140001dff:	mov    QWORD PTR [rdx],0x0
   140001e06:	mov    DWORD PTR [rdx+0x8],eax
   140001e09:	lea    rdx,[rcx+0x10]
   140001e0d:	lea    rcx,[r8+0x10]
   140001e11:	call   QWORD PTR [rip+0x1e981]        # 0x140020798
   140001e17:	add    rsp,0x28
   140001e1b:	ret    
   140001e1c:	int3   
   140001e1d:	int3   
   140001e1e:	int3   
   140001e1f:	int3   
   140001e20:	mov    QWORD PTR [rsp+0x10],rbp
   140001e25:	mov    QWORD PTR [rsp+0x18],rsi
   140001e2a:	push   rdi
   140001e2b:	sub    rsp,0x20
   140001e2f:	mov    esi,r8d
   140001e32:	mov    r8,QWORD PTR [rcx]
   140001e35:	mov    rdi,rcx
   140001e38:	mov    ecx,DWORD PTR [r8+0x20]
   140001e3c:	mov    rbp,rdx
   140001e3f:	test   ecx,ecx
   140001e41:	je     0x140001e99
   140001e43:	xor    edx,edx
   140001e45:	mov    eax,esi
   140001e47:	mov    QWORD PTR [rsp+0x30],rbx
   140001e4c:	div    ecx
   140001e4e:	mov    rax,QWORD PTR [r8+0x8]
   140001e52:	lea    rbx,[rax+rdx*8]
   140001e56:	mov    rax,QWORD PTR [rax+rdx*8]
   140001e5a:	cmp    rax,r8
   140001e5d:	je     0x140001e81
   140001e5f:	nop
   140001e60:	cmp    esi,DWORD PTR [rax+0x8]
   140001e63:	jne    0x140001e76
   140001e65:	lea    rdx,[rax+0x10]
   140001e69:	mov    rcx,rbp
   140001e6c:	call   QWORD PTR [rip+0x1e87e]        # 0x1400206f0
   140001e72:	test   al,al
   140001e74:	jne    0x140001e81
   140001e76:	mov    rbx,QWORD PTR [rbx]
   140001e79:	mov    rax,QWORD PTR [rbx]
   140001e7c:	cmp    rax,QWORD PTR [rdi]
   140001e7f:	jne    0x140001e60
   140001e81:	mov    rax,rbx
   140001e84:	mov    rbx,QWORD PTR [rsp+0x30]
   140001e89:	mov    rbp,QWORD PTR [rsp+0x38]
   140001e8e:	mov    rsi,QWORD PTR [rsp+0x40]
   140001e93:	add    rsp,0x20
   140001e97:	pop    rdi
   140001e98:	ret    
   140001e99:	mov    rbp,QWORD PTR [rsp+0x38]
   140001e9e:	mov    rsi,QWORD PTR [rsp+0x40]
   140001ea3:	mov    rax,rdi
   140001ea6:	add    rsp,0x20
   140001eaa:	pop    rdi
   140001eab:	ret    
   140001eac:	int3   
   140001ead:	int3   
   140001eae:	int3   
   140001eaf:	int3   
   140001eb0:	rex push rbx
   140001eb2:	sub    rsp,0x90
   140001eb9:	mov    rax,QWORD PTR [rip+0x306d0]        # 0x140032590
   140001ec0:	xor    rax,rsp
   140001ec3:	mov    QWORD PTR [rsp+0x80],rax
   140001ecb:	lea    rdx,[rsp+0x58]
   140001ed0:	call   QWORD PTR [rip+0x1e7d2]        # 0x1400206a8
   140001ed6:	lea    rcx,[rsp+0x20]
   140001edb:	mov    edx,0x8
   140001ee0:	call   QWORD PTR [rip+0x1e7ca]        # 0x1400206b0
   140001ee6:	lea    rdx,[rsp+0x20]
   140001eeb:	lea    rcx,[rsp+0x28]
   140001ef0:	call   QWORD PTR [rip+0x1e7c2]        # 0x1400206b8
   140001ef6:	lea    rdx,[rsp+0x30]
   140001efb:	mov    rcx,rax
   140001efe:	call   QWORD PTR [rip+0x1e7a4]        # 0x1400206a8
   140001f04:	mov    rcx,QWORD PTR [rip+0x1e225]        # 0x140020130
   140001f0b:	lea    rdx,[rip+0x1eab6]        # 0x1400209c8
   140001f12:	mov    rbx,rax
   140001f15:	call   0x140001370
   140001f1a:	lea    rdx,[rsp+0x58]
   140001f1f:	mov    rcx,rax
   140001f22:	call   QWORD PTR [rip+0x1e200]        # 0x140020128
   140001f28:	lea    rdx,[rip+0x1ea41]        # 0x140020970
   140001f2f:	mov    rcx,rax
   140001f32:	call   0x140001370
   140001f37:	lea    rdx,[rsp+0x58]
   140001f3c:	mov    rcx,rax
   140001f3f:	call   QWORD PTR [rip+0x1e1e3]        # 0x140020128
   140001f45:	lea    rdx,[rip+0x1e9d4]        # 0x140020920
   140001f4c:	mov    rcx,rax
   140001f4f:	call   0x140001370
   140001f54:	lea    rdx,[rsp+0x58]
   140001f59:	mov    rcx,rax
   140001f5c:	call   QWORD PTR [rip+0x1e1c6]        # 0x140020128
   140001f62:	lea    rdx,[rip+0x1e98f]        # 0x1400208f8
   140001f69:	mov    rcx,rax
   140001f6c:	call   0x140001370
   140001f71:	mov    rdx,rbx
   140001f74:	mov    rcx,rax
   140001f77:	call   QWORD PTR [rip+0x1e1ab]        # 0x140020128
   140001f7d:	mov    dl,0xa
   140001f7f:	mov    rcx,rax
   140001f82:	call   0x1400015d0
   140001f87:	lea    rcx,[rsp+0x30]
   140001f8c:	call   QWORD PTR [rip+0x1e18e]        # 0x140020120
   140001f92:	lea    rcx,[rsp+0x28]
   140001f97:	call   QWORD PTR [rip+0x1e7e3]        # 0x140020780
   140001f9d:	lea    rcx,[rsp+0x20]
   140001fa2:	call   QWORD PTR [rip+0x1e7d8]        # 0x140020780
   140001fa8:	lea    rcx,[rsp+0x58]
   140001fad:	call   QWORD PTR [rip+0x1e16d]        # 0x140020120
   140001fb3:	mov    rcx,QWORD PTR [rsp+0x80]
   140001fbb:	xor    rcx,rsp
   140001fbe:	call   0x14001ef10
   140001fc3:	add    rsp,0x90
   140001fca:	pop    rbx
   140001fcb:	ret    
   140001fcc:	int3   
   140001fcd:	int3   
   140001fce:	int3   
   140001fcf:	int3   
   140001fd0:	rex push rbx
   140001fd2:	sub    rsp,0x20
   140001fd6:	mov    rbx,rcx
   140001fd9:	nop    DWORD PTR [rax+0x0]
   140001fe0:	lea    rcx,[rbx+0x18]
   140001fe4:	call   QWORD PTR [rip+0x1e796]        # 0x140020780
   140001fea:	lea    rcx,[rbx+0x20]
   140001fee:	call   QWORD PTR [rip+0x1e754]        # 0x140020748
   140001ff4:	mov    rcx,QWORD PTR [rbx+0x8]
   140001ff8:	test   rcx,rcx
   140001ffb:	je     0x140002002
   140001ffd:	call   0x140001fd0
   140002002:	mov    rbx,QWORD PTR [rbx+0x10]
   140002006:	test   rbx,rbx
   140002009:	jne    0x140001fe0
   14000200b:	add    rsp,0x20
   14000200f:	pop    rbx
   140002010:	ret    
   140002011:	int3   
   140002012:	int3   
   140002013:	int3   
   140002014:	int3   
   140002015:	int3   
   140002016:	int3   
   140002017:	int3   
   140002018:	int3   
   140002019:	int3   
   14000201a:	int3   
   14000201b:	int3   
   14000201c:	int3   
   14000201d:	int3   
   14000201e:	int3   
   14000201f:	int3   
   140002020:	mov    QWORD PTR [rsp+0x8],rbx
   140002025:	mov    QWORD PTR [rsp+0x10],rbp
   14000202a:	mov    QWORD PTR [rsp+0x18],rsi
   14000202f:	mov    QWORD PTR [rsp+0x20],rdi
   140002034:	push   r12
   140002036:	sub    rsp,0x20
   14000203a:	mov    r9,QWORD PTR [rcx]
   14000203d:	mov    r12,rdx
   140002040:	mov    rbp,rcx
   140002043:	mov    rax,QWORD PTR [r9]
   140002046:	mov    r8,QWORD PTR [rax]
   140002049:	mov    rax,QWORD PTR [r9+0x8]
   14000204d:	mov    r10d,DWORD PTR [r8+0x4]
   140002051:	mov    r8,QWORD PTR [rax]
   140002054:	mov    rax,QWORD PTR [rcx+0x8]
   140002058:	mov    r9d,DWORD PTR [r8+0x4]
   14000205c:	mov    r8,QWORD PTR [rax]
   14000205f:	mov    rcx,r12
   140002062:	mov    edx,DWORD PTR [r8+0x4]
   140002066:	xor    r8d,r8d
   140002069:	add    edx,r9d
   14000206c:	add    edx,r10d
   14000206f:	call   QWORD PTR [rip+0x1e623]        # 0x140020698
   140002075:	mov    rcx,r12
   140002078:	call   QWORD PTR [rip+0x1e70a]        # 0x140020788
   14000207e:	mov    rdi,QWORD PTR [rbp+0x0]
   140002082:	mov    rcx,QWORD PTR [rdi]
   140002085:	mov    rsi,rax
   140002088:	mov    rdx,QWORD PTR [rcx]
   14000208b:	movsxd rbx,DWORD PTR [rdx+0x4]
   14000208f:	add    rbx,rbx
   140002092:	call   QWORD PTR [rip+0x1e6f0]        # 0x140020788
   140002098:	mov    r8,rbx
   14000209b:	mov    rdx,rax
   14000209e:	mov    rcx,rsi
   1400020a1:	call   0x14001edd4
   1400020a6:	mov    rcx,QWORD PTR [rdi+0x8]
   1400020aa:	add    rsi,rbx
   1400020ad:	mov    rax,QWORD PTR [rcx]
   1400020b0:	movsxd rbx,DWORD PTR [rax+0x4]
   1400020b4:	add    rbx,rbx
   1400020b7:	call   QWORD PTR [rip+0x1e6cb]        # 0x140020788
   1400020bd:	mov    r8,rbx
   1400020c0:	mov    rdx,rax
   1400020c3:	mov    rcx,rsi
   1400020c6:	call   0x14001edd4
   1400020cb:	mov    rcx,QWORD PTR [rbp+0x8]
   1400020cf:	add    rsi,rbx
   1400020d2:	mov    rax,QWORD PTR [rcx]
   1400020d5:	movsxd rbx,DWORD PTR [rax+0x4]
   1400020d9:	add    rbx,rbx
   1400020dc:	call   QWORD PTR [rip+0x1e6a6]        # 0x140020788
   1400020e2:	mov    r8,rbx
   1400020e5:	mov    rdx,rax
   1400020e8:	mov    rcx,rsi
   1400020eb:	call   0x14001edd4
   1400020f0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400020f5:	mov    rbp,QWORD PTR [rsp+0x38]
   1400020fa:	mov    rsi,QWORD PTR [rsp+0x40]
   1400020ff:	mov    rdi,QWORD PTR [rsp+0x48]
   140002104:	mov    rax,r12
   140002107:	add    rsp,0x20
   14000210b:	pop    r12
   14000210d:	ret    
   14000210e:	int3   
   14000210f:	int3   
   140002110:	mov    QWORD PTR [rsp+0x8],rbx
   140002115:	push   rdi
   140002116:	sub    rsp,0x20
   14000211a:	mov    rax,QWORD PTR [rcx]
   14000211d:	mov    rdi,rdx
   140002120:	cmp    QWORD PTR [rax+0x10],0x0
   140002125:	je     0x14000212d
   140002127:	mov    rbx,QWORD PTR [rax+0x20]
   14000212b:	jmp    0x140002131
   14000212d:	lea    rbx,[rax+0x8]
   140002131:	mov    ecx,0x8
   140002136:	call   0x14001ee64
   14000213b:	test   rax,rax
   14000213e:	je     0x140002151
   140002140:	mov    QWORD PTR [rax],rbx
   140002143:	mov    QWORD PTR [rdi],rax
   140002146:	mov    rbx,QWORD PTR [rsp+0x30]
   14000214b:	add    rsp,0x20
   14000214f:	pop    rdi
   140002150:	ret    
   140002151:	mov    QWORD PTR [rdi],0x0
   140002158:	mov    rbx,QWORD PTR [rsp+0x30]
   14000215d:	add    rsp,0x20
   140002161:	pop    rdi
   140002162:	ret    
   140002163:	int3   
   140002164:	int3   
   140002165:	int3   
   140002166:	int3   
   140002167:	int3   
   140002168:	int3   
   140002169:	int3   
   14000216a:	int3   
   14000216b:	int3   
   14000216c:	int3   
   14000216d:	int3   
   14000216e:	int3   
   14000216f:	int3   
   140002170:	mov    QWORD PTR [rsp+0x8],rbx
   140002175:	push   rdi
   140002176:	sub    rsp,0x20
   14000217a:	mov    rbx,QWORD PTR [rcx]
   14000217d:	mov    ecx,0x8
   140002182:	mov    rdi,rdx
   140002185:	add    rbx,0x8
   140002189:	call   0x14001ee64
   14000218e:	test   rax,rax
   140002191:	je     0x1400021a4
   140002193:	mov    QWORD PTR [rax],rbx
   140002196:	mov    QWORD PTR [rdi],rax
   140002199:	mov    rbx,QWORD PTR [rsp+0x30]
   14000219e:	add    rsp,0x20
   1400021a2:	pop    rdi
   1400021a3:	ret    
   1400021a4:	mov    QWORD PTR [rdi],0x0
   1400021ab:	mov    rbx,QWORD PTR [rsp+0x30]
   1400021b0:	add    rsp,0x20
   1400021b4:	pop    rdi
   1400021b5:	ret    
   1400021b6:	int3   
   1400021b7:	int3   
   1400021b8:	int3   
   1400021b9:	int3   
   1400021ba:	int3   
   1400021bb:	int3   
   1400021bc:	int3   
   1400021bd:	int3   
   1400021be:	int3   
   1400021bf:	int3   
   1400021c0:	mov    rax,QWORD PTR [rdx]
   1400021c3:	mov    DWORD PTR [rcx],r8d
   1400021c6:	mov    DWORD PTR [rcx+0x10],r9d
   1400021ca:	mov    rdx,QWORD PTR [rax]
   1400021cd:	mov    rax,rcx
   1400021d0:	add    rdx,0x20
   1400021d4:	mov    QWORD PTR [rcx+0x8],rdx
   1400021d8:	ret    
   1400021d9:	int3   
   1400021da:	int3   
   1400021db:	int3   
   1400021dc:	int3   
   1400021dd:	int3   
   1400021de:	int3   
   1400021df:	int3   
   1400021e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400021e5:	push   rdi
   1400021e6:	sub    rsp,0x20
   1400021ea:	mov    rbx,QWORD PTR [rcx]
   1400021ed:	mov    rdi,rdx
   1400021f0:	mov    ecx,DWORD PTR [rbx+0x20]
   1400021f3:	mov    rax,QWORD PTR [rbx+0x8]
   1400021f7:	test   ecx,ecx
   1400021f9:	je     0x140002214
   1400021fb:	nop    DWORD PTR [rax+rax*1+0x0]
   140002200:	dec    ecx
   140002202:	cmp    QWORD PTR [rax],rbx
   140002205:	jne    0x140002211
   140002207:	add    rax,0x8
   14000220b:	test   ecx,ecx
   14000220d:	jne    0x140002200
   14000220f:	jmp    0x140002214
   140002211:	mov    rbx,QWORD PTR [rax]
   140002214:	mov    ecx,0x8
   140002219:	call   0x14001ee64
   14000221e:	test   rax,rax
   140002221:	je     0x140002234
   140002223:	mov    QWORD PTR [rax],rbx
   140002226:	mov    QWORD PTR [rdi],rax
   140002229:	mov    rbx,QWORD PTR [rsp+0x30]
   14000222e:	add    rsp,0x20
   140002232:	pop    rdi
   140002233:	ret    
   140002234:	mov    QWORD PTR [rdi],0x0
   14000223b:	mov    rbx,QWORD PTR [rsp+0x30]
   140002240:	add    rsp,0x20
   140002244:	pop    rdi
   140002245:	ret    
   140002246:	int3   
   140002247:	int3   
   140002248:	int3   
   140002249:	int3   
   14000224a:	int3   
   14000224b:	int3   
   14000224c:	int3   
   14000224d:	int3   
   14000224e:	int3   
   14000224f:	int3   
   140002250:	mov    QWORD PTR [rsp+0x8],rbx
   140002255:	push   rdi
   140002256:	sub    rsp,0x20
   14000225a:	mov    rbx,QWORD PTR [rcx]
   14000225d:	mov    ecx,0x8
   140002262:	mov    rdi,rdx
   140002265:	call   0x14001ee64
   14000226a:	test   rax,rax
   14000226d:	je     0x140002280
   14000226f:	mov    QWORD PTR [rax],rbx
   140002272:	mov    QWORD PTR [rdi],rax
   140002275:	mov    rbx,QWORD PTR [rsp+0x30]
   14000227a:	add    rsp,0x20
   14000227e:	pop    rdi
   14000227f:	ret    
   140002280:	mov    QWORD PTR [rdi],0x0
   140002287:	mov    rbx,QWORD PTR [rsp+0x30]
   14000228c:	add    rsp,0x20
   140002290:	pop    rdi
   140002291:	ret    
   140002292:	int3   
   140002293:	int3   
   140002294:	int3   
   140002295:	int3   
   140002296:	int3   
   140002297:	int3   
   140002298:	int3   
   140002299:	int3   
   14000229a:	int3   
   14000229b:	int3   
   14000229c:	int3   
   14000229d:	int3   
   14000229e:	int3   
   14000229f:	int3   
   1400022a0:	mov    rax,QWORD PTR [rdx]
   1400022a3:	mov    DWORD PTR [rcx],r8d
   1400022a6:	mov    DWORD PTR [rcx+0x10],r9d
   1400022aa:	mov    rdx,QWORD PTR [rax]
   1400022ad:	mov    rax,rcx
   1400022b0:	add    rdx,0x10
   1400022b4:	mov    QWORD PTR [rcx+0x8],rdx
   1400022b8:	ret    
   1400022b9:	int3   
   1400022ba:	int3   
   1400022bb:	int3   
   1400022bc:	int3   
   1400022bd:	int3   
   1400022be:	int3   
   1400022bf:	int3   
   1400022c0:	mov    rax,QWORD PTR [rdx]
   1400022c3:	mov    DWORD PTR [rcx],r8d
   1400022c6:	mov    DWORD PTR [rcx+0x10],r9d
   1400022ca:	mov    rdx,QWORD PTR [rax]
   1400022cd:	mov    rax,rcx
   1400022d0:	add    rdx,0x18
   1400022d4:	mov    QWORD PTR [rcx+0x8],rdx
   1400022d8:	ret    
   1400022d9:	int3   
   1400022da:	int3   
   1400022db:	int3   
   1400022dc:	int3   
   1400022dd:	int3   
   1400022de:	int3   
   1400022df:	int3   
   1400022e0:	add    rcx,0x10
   1400022e4:	rex.W jmp QWORD PTR [rip+0x1e495]        # 0x140020780
   1400022eb:	int3   
   1400022ec:	int3   
   1400022ed:	int3   
   1400022ee:	int3   
   1400022ef:	int3   
   1400022f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400022f5:	push   rdi
   1400022f6:	sub    rsp,0x20
   1400022fa:	mov    rdi,QWORD PTR [rcx+0x10]
   1400022fe:	mov    rbx,rcx
   140002301:	test   rdi,rdi
   140002304:	je     0x140002349
   140002306:	lea    rcx,[rdi+0x18]
   14000230a:	call   QWORD PTR [rip+0x1e470]        # 0x140020780
   140002310:	lea    rcx,[rdi+0x20]
   140002314:	call   QWORD PTR [rip+0x1e42e]        # 0x140020748
   14000231a:	mov    rcx,QWORD PTR [rdi+0x8]
   14000231e:	test   rcx,rcx
   140002321:	je     0x140002328
   140002323:	call   0x140001fd0
   140002328:	mov    rcx,QWORD PTR [rdi+0x10]
   14000232c:	test   rcx,rcx
   14000232f:	je     0x140002336
   140002331:	call   0x140001fd0
   140002336:	mov    rdx,QWORD PTR [rbx+0x10]
   14000233a:	mov    r8d,0x8
   140002340:	mov    rcx,rbx
   140002343:	call   QWORD PTR [rip+0x1e337]        # 0x140020680
   140002349:	mov    rcx,rbx
   14000234c:	mov    rbx,QWORD PTR [rsp+0x30]
   140002351:	add    rsp,0x20
   140002355:	pop    rdi
   140002356:	rex.W jmp QWORD PTR [rip+0x1e32b]        # 0x140020688
   14000235d:	int3   
   14000235e:	int3   
   14000235f:	int3   
   140002360:	sub    rsp,0x28
   140002364:	mov    rdx,QWORD PTR [rcx]
   140002367:	mov    eax,DWORD PTR [rdx]
   140002369:	test   eax,eax
   14000236b:	je     0x14000237d
   14000236d:	cmp    eax,0xffffffff
   140002370:	je     0x1400023da
   140002372:	lock add DWORD PTR [rdx],0xffffffff
   140002376:	setne  al
   140002379:	test   al,al
   14000237b:	jne    0x1400023da
   14000237d:	mov    QWORD PTR [rsp+0x30],rbx
   140002382:	mov    QWORD PTR [rsp+0x38],rsi
   140002387:	mov    rsi,QWORD PTR [rcx]
   14000238a:	movsxd rax,DWORD PTR [rsi+0xc]
   14000238e:	mov    QWORD PTR [rsp+0x20],rdi
   140002393:	lea    rbx,[rsi+rax*8+0x10]
   140002398:	movsxd rax,DWORD PTR [rsi+0x8]
   14000239c:	lea    rdi,[rsi+rax*8+0x10]
   1400023a1:	cmp    rdi,rbx
   1400023a4:	je     0x1400023c2
   1400023a6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400023b0:	sub    rbx,0x8
   1400023b4:	mov    rcx,rbx
   1400023b7:	call   QWORD PTR [rip+0x1e3c3]        # 0x140020780
   1400023bd:	cmp    rbx,rdi
   1400023c0:	jne    0x1400023b0
   1400023c2:	mov    rcx,rsi
   1400023c5:	call   QWORD PTR [rip+0x1e305]        # 0x1400206d0
   1400023cb:	mov    rdi,QWORD PTR [rsp+0x20]
   1400023d0:	mov    rsi,QWORD PTR [rsp+0x38]
   1400023d5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400023da:	add    rsp,0x28
   1400023de:	ret    
   1400023df:	int3   
   1400023e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400023e5:	push   rdi
   1400023e6:	sub    rsp,0x20
   1400023ea:	mov    rax,QWORD PTR [rdx]
   1400023ed:	mov    rbx,rcx
   1400023f0:	mov    rdi,rdx
   1400023f3:	mov    QWORD PTR [rcx],rax
   1400023f6:	mov    ecx,DWORD PTR [rax]
   1400023f8:	test   ecx,ecx
   1400023fa:	je     0x140002413
   1400023fc:	cmp    ecx,0xffffffff
   1400023ff:	je     0x140002448
   140002401:	lock add DWORD PTR [rax],0x1
   140002405:	mov    rax,rbx
   140002408:	mov    rbx,QWORD PTR [rsp+0x30]
   14000240d:	add    rsp,0x20
   140002411:	pop    rdi
   140002412:	ret    
   140002413:	mov    edx,DWORD PTR [rax+0x4]
   140002416:	mov    rcx,rbx
   140002419:	call   QWORD PTR [rip+0x1e259]        # 0x140020678
   14000241f:	mov    rcx,QWORD PTR [rbx]
   140002422:	mov    r11,QWORD PTR [rdi]
   140002425:	movsxd rax,DWORD PTR [r11+0x8]
   140002429:	lea    r9,[r11+rax*8+0x10]
   14000242e:	movsxd rax,DWORD PTR [rcx+0xc]
   140002432:	lea    r8,[rcx+rax*8+0x10]
   140002437:	movsxd rax,DWORD PTR [rcx+0x8]
   14000243b:	lea    rdx,[rcx+rax*8+0x10]
   140002440:	mov    rcx,rbx
   140002443:	call   0x1400011b0
   140002448:	mov    rax,rbx
   14000244b:	mov    rbx,QWORD PTR [rsp+0x30]
   140002450:	add    rsp,0x20
   140002454:	pop    rdi
   140002455:	ret    
   140002456:	int3   
   140002457:	int3   
   140002458:	int3   
   140002459:	int3   
   14000245a:	int3   
   14000245b:	int3   
   14000245c:	int3   
   14000245d:	int3   
   14000245e:	int3   
   14000245f:	int3   
   140002460:	rex push rbx
   140002462:	push   rbp
   140002463:	push   rdi
   140002464:	sub    rsp,0x20
   140002468:	mov    rbx,QWORD PTR [rdx]
   14000246b:	mov    rdi,rdx
   14000246e:	mov    rbp,rcx
   140002471:	cmp    QWORD PTR [rcx],rbx
   140002474:	je     0x1400025a1
   14000247a:	mov    QWORD PTR [rsp+0x40],rbx
   14000247f:	mov    eax,DWORD PTR [rbx]
   140002481:	mov    QWORD PTR [rsp+0x48],rsi
   140002486:	mov    QWORD PTR [rsp+0x50],r12
   14000248b:	test   eax,eax
   14000248d:	je     0x14000249f
   14000248f:	cmp    eax,0xffffffff
   140002492:	je     0x140002509
   140002494:	lock add DWORD PTR [rbx],0x1
   140002498:	mov    rbx,QWORD PTR [rsp+0x40]
   14000249d:	jmp    0x140002509
   14000249f:	mov    edx,DWORD PTR [rbx+0x4]
   1400024a2:	lea    rcx,[rsp+0x40]
   1400024a7:	call   QWORD PTR [rip+0x1e1cb]        # 0x140020678
   1400024ad:	mov    rbx,QWORD PTR [rsp+0x40]
   1400024b2:	mov    rcx,QWORD PTR [rdi]
   1400024b5:	movsxd rax,DWORD PTR [rbx+0xc]
   1400024b9:	lea    r12,[rbx+rax*8+0x10]
   1400024be:	movsxd rax,DWORD PTR [rcx+0x8]
   1400024c2:	lea    rsi,[rcx+rax*8+0x10]
   1400024c7:	movsxd rax,DWORD PTR [rbx+0x8]
   1400024cb:	lea    rdi,[rbx+rax*8+0x10]
   1400024d0:	cmp    rdi,r12
   1400024d3:	je     0x140002509
   1400024d5:	mov    ecx,0x10
   1400024da:	call   0x14001ee64
   1400024df:	test   rax,rax
   1400024e2:	je     0x1400024f2
   1400024e4:	mov    rdx,QWORD PTR [rsi]
   1400024e7:	mov    rcx,rax
   1400024ea:	call   QWORD PTR [rip+0x1e248]        # 0x140020738
   1400024f0:	jmp    0x1400024f4
   1400024f2:	xor    eax,eax
   1400024f4:	mov    QWORD PTR [rdi],rax
   1400024f7:	add    rdi,0x8
   1400024fb:	add    rsi,0x8
   1400024ff:	cmp    rdi,r12
   140002502:	jne    0x1400024d5
   140002504:	mov    rbx,QWORD PTR [rsp+0x40]
   140002509:	lea    rax,[rsp+0x40]
   14000250e:	cmp    rax,rbp
   140002511:	je     0x140002523
   140002513:	mov    rax,rbx
   140002516:	mov    rbx,QWORD PTR [rbp+0x0]
   14000251a:	mov    QWORD PTR [rsp+0x40],rbx
   14000251f:	mov    QWORD PTR [rbp+0x0],rax
   140002523:	mov    eax,DWORD PTR [rbx]
   140002525:	test   eax,eax
   140002527:	je     0x14000253e
   140002529:	cmp    eax,0xffffffff
   14000252c:	je     0x14000258c
   14000252e:	lock add DWORD PTR [rbx],0xffffffff
   140002532:	setne  al
   140002535:	test   al,al
   140002537:	jne    0x14000258c
   140002539:	mov    rbx,QWORD PTR [rsp+0x40]
   14000253e:	movsxd rax,DWORD PTR [rbx+0xc]
   140002542:	lea    rdi,[rbx+rax*8+0x10]
   140002547:	movsxd rax,DWORD PTR [rbx+0x8]
   14000254b:	lea    r12,[rbx+rax*8+0x10]
   140002550:	cmp    r12,rdi
   140002553:	je     0x140002583
   140002555:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140002560:	mov    rsi,QWORD PTR [rdi-0x8]
   140002564:	sub    rdi,0x8
   140002568:	test   rsi,rsi
   14000256b:	je     0x14000257e
   14000256d:	mov    rcx,rsi
   140002570:	call   QWORD PTR [rip+0x1e1d2]        # 0x140020748
   140002576:	mov    rcx,rsi
   140002579:	call   0x14001ee46
   14000257e:	cmp    rdi,r12
   140002581:	jne    0x140002560
   140002583:	mov    rcx,rbx
   140002586:	call   QWORD PTR [rip+0x1e144]        # 0x1400206d0
   14000258c:	mov    rsi,QWORD PTR [rsp+0x48]
   140002591:	mov    r12,QWORD PTR [rsp+0x50]
   140002596:	mov    rax,rbp
   140002599:	add    rsp,0x20
   14000259d:	pop    rdi
   14000259e:	pop    rbp
   14000259f:	pop    rbx
   1400025a0:	ret    
   1400025a1:	mov    rax,rcx
   1400025a4:	add    rsp,0x20
   1400025a8:	pop    rdi
   1400025a9:	pop    rbp
   1400025aa:	pop    rbx
   1400025ab:	ret    
   1400025ac:	int3   
   1400025ad:	int3   
   1400025ae:	int3   
   1400025af:	int3   
   1400025b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400025b5:	push   rdi
   1400025b6:	sub    rsp,0x20
   1400025ba:	mov    rax,QWORD PTR [rdx]
   1400025bd:	mov    rbx,rcx
   1400025c0:	mov    rdi,rdx
   1400025c3:	mov    ecx,DWORD PTR [rax]
   1400025c5:	test   ecx,ecx
   1400025c7:	je     0x1400025e6
   1400025c9:	cmp    ecx,0xffffffff
   1400025cc:	je     0x1400025d2
   1400025ce:	lock add DWORD PTR [rax],0x1
   1400025d2:	mov    rax,QWORD PTR [rdx]
   1400025d5:	mov    QWORD PTR [rbx],rax
   1400025d8:	mov    rax,rbx
   1400025db:	mov    rbx,QWORD PTR [rsp+0x30]
   1400025e0:	add    rsp,0x20
   1400025e4:	pop    rdi
   1400025e5:	ret    
   1400025e6:	call   QWORD PTR [rip+0x1e144]        # 0x140020730
   1400025ec:	mov    QWORD PTR [rbx],rax
   1400025ef:	mov    rcx,QWORD PTR [rdi]
   1400025f2:	mov    rcx,QWORD PTR [rcx+0x10]
   1400025f6:	test   rcx,rcx
   1400025f9:	je     0x140002629
   1400025fb:	mov    rdx,rax
   1400025fe:	call   0x140001210
   140002603:	mov    rcx,QWORD PTR [rbx]
   140002606:	mov    QWORD PTR [rcx+0x10],rax
   14000260a:	mov    rax,QWORD PTR [rbx]
   14000260d:	mov    rdx,QWORD PTR [rax+0x10]
   140002611:	add    rax,0x8
   140002615:	mov    ecx,DWORD PTR [rdx]
   140002617:	and    ecx,0x3
   14000261a:	or     rcx,rax
   14000261d:	mov    QWORD PTR [rdx],rcx
   140002620:	mov    rcx,QWORD PTR [rbx]
   140002623:	call   QWORD PTR [rip+0x1e047]        # 0x140020670
   140002629:	mov    rax,rbx
   14000262c:	mov    rbx,QWORD PTR [rsp+0x30]
   140002631:	add    rsp,0x20
   140002635:	pop    rdi
   140002636:	ret    
   140002637:	int3   
   140002638:	int3   
   140002639:	int3   
   14000263a:	int3   
   14000263b:	int3   
   14000263c:	int3   
   14000263d:	int3   
   14000263e:	int3   
   14000263f:	int3   
   140002640:	sub    rsp,0x28
   140002644:	mov    rdx,QWORD PTR [rcx]
   140002647:	mov    eax,DWORD PTR [rdx]
   140002649:	test   eax,eax
   14000264b:	je     0x14000265d
   14000264d:	cmp    eax,0xffffffff
   140002650:	je     0x1400026ba
   140002652:	lock add DWORD PTR [rdx],0xffffffff
   140002656:	setne  al
   140002659:	test   al,al
   14000265b:	jne    0x1400026ba
   14000265d:	mov    QWORD PTR [rsp+0x30],rbx
   140002662:	mov    QWORD PTR [rsp+0x38],rsi
   140002667:	mov    rsi,QWORD PTR [rcx]
   14000266a:	movsxd rax,DWORD PTR [rsi+0xc]
   14000266e:	mov    QWORD PTR [rsp+0x20],rdi
   140002673:	lea    rbx,[rsi+rax*8+0x10]
   140002678:	movsxd rax,DWORD PTR [rsi+0x8]
   14000267c:	lea    rdi,[rsi+rax*8+0x10]
   140002681:	cmp    rdi,rbx
   140002684:	je     0x1400026a2
   140002686:	data16 nop WORD PTR [rax+rax*1+0x0]
   140002690:	sub    rbx,0x8
   140002694:	mov    rcx,rbx
   140002697:	call   QWORD PTR [rip+0x1e06b]        # 0x140020708
   14000269d:	cmp    rbx,rdi
   1400026a0:	jne    0x140002690
   1400026a2:	mov    rcx,rsi
   1400026a5:	call   QWORD PTR [rip+0x1e025]        # 0x1400206d0
   1400026ab:	mov    rdi,QWORD PTR [rsp+0x20]
   1400026b0:	mov    rsi,QWORD PTR [rsp+0x38]
   1400026b5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400026ba:	add    rsp,0x28
   1400026be:	ret    
   1400026bf:	int3   
   1400026c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400026c5:	mov    QWORD PTR [rsp+0x18],rbp
   1400026ca:	mov    DWORD PTR [rsp+0x10],edx
   1400026ce:	push   rsi
   1400026cf:	push   rdi
   1400026d0:	push   r12
   1400026d2:	push   r13
   1400026d4:	push   r14
   1400026d6:	sub    rsp,0x20
   1400026da:	mov    rdx,QWORD PTR [rcx]
   1400026dd:	movsxd r13,r8d
   1400026e0:	mov    r12,rcx
   1400026e3:	movsxd rax,DWORD PTR [rdx+0x8]
   1400026e7:	mov    r8d,r13d
   1400026ea:	lea    r14,[rdx+rax*8+0x10]
   1400026ef:	lea    rdx,[rsp+0x58]
   1400026f4:	call   QWORD PTR [rip+0x1df66]        # 0x140020660
   1400026fa:	mov    r10,QWORD PTR [r12]
   1400026fe:	movsxd rdx,DWORD PTR [rsp+0x58]
   140002703:	movsxd r9,DWORD PTR [r10+0x8]
   140002707:	mov    rsi,rax
   14000270a:	mov    rdi,r14
   14000270d:	add    rdx,r9
   140002710:	lea    rbx,[r10+r9*8+0x10]
   140002715:	lea    rbp,[r10+rdx*8+0x10]
   14000271a:	cmp    rbx,rbp
   14000271d:	je     0x14000273e
   14000271f:	nop
   140002720:	test   rbx,rbx
   140002723:	je     0x140002731
   140002725:	mov    rdx,rdi
   140002728:	mov    rcx,rbx
   14000272b:	call   QWORD PTR [rip+0x1e067]        # 0x140020798
   140002731:	add    rbx,0x8
   140002735:	add    rdi,0x8
   140002739:	cmp    rbx,rbp
   14000273c:	jne    0x140002720
   14000273e:	mov    r8,QWORD PTR [r12]
   140002742:	movsxd rdx,DWORD PTR [rsp+0x58]
   140002747:	movsxd rcx,DWORD PTR [r8+0x8]
   14000274b:	movsxd rax,DWORD PTR [r8+0xc]
   14000274f:	lea    rdi,[r14+rdx*8]
   140002753:	add    rcx,rdx
   140002756:	lea    rbp,[r8+rax*8+0x10]
   14000275b:	add    rcx,r13
   14000275e:	lea    rbx,[r8+rcx*8+0x10]
   140002763:	cmp    rbx,rbp
   140002766:	je     0x140002786
   140002768:	test   rbx,rbx
   14000276b:	je     0x140002779
   14000276d:	mov    rdx,rdi
   140002770:	mov    rcx,rbx
   140002773:	call   QWORD PTR [rip+0x1e01f]        # 0x140020798
   140002779:	add    rbx,0x8
   14000277d:	add    rdi,0x8
   140002781:	cmp    rbx,rbp
   140002784:	jne    0x140002768
   140002786:	mov    eax,DWORD PTR [rsi]
   140002788:	test   eax,eax
   14000278a:	je     0x14000279c
   14000278c:	cmp    eax,0xffffffff
   14000278f:	je     0x1400027ce
   140002791:	lock add DWORD PTR [rsi],0xffffffff
   140002795:	setne  al
   140002798:	test   al,al
   14000279a:	jne    0x1400027ce
   14000279c:	movsxd rax,DWORD PTR [rsi+0xc]
   1400027a0:	lea    rbx,[rsi+rax*8+0x10]
   1400027a5:	movsxd rax,DWORD PTR [rsi+0x8]
   1400027a9:	lea    rdi,[rsi+rax*8+0x10]
   1400027ae:	cmp    rdi,rbx
   1400027b1:	je     0x1400027c5
   1400027b3:	sub    rbx,0x8
   1400027b7:	mov    rcx,rbx
   1400027ba:	call   QWORD PTR [rip+0x1dfc0]        # 0x140020780
   1400027c0:	cmp    rbx,rdi
   1400027c3:	jne    0x1400027b3
   1400027c5:	mov    rcx,rsi
   1400027c8:	call   QWORD PTR [rip+0x1df02]        # 0x1400206d0
   1400027ce:	mov    rdx,QWORD PTR [r12]
   1400027d2:	movsxd rax,DWORD PTR [rsp+0x58]
   1400027d7:	mov    rbx,QWORD PTR [rsp+0x50]
   1400027dc:	movsxd rcx,DWORD PTR [rdx+0x8]
   1400027e0:	mov    rbp,QWORD PTR [rsp+0x60]
   1400027e5:	add    rcx,rax
   1400027e8:	lea    rax,[rdx+rcx*8+0x10]
   1400027ed:	add    rsp,0x20
   1400027f1:	pop    r14
   1400027f3:	pop    r13
   1400027f5:	pop    r12
   1400027f7:	pop    rdi
   1400027f8:	pop    rsi
   1400027f9:	ret    
   1400027fa:	int3   
   1400027fb:	int3   
   1400027fc:	int3   
   1400027fd:	int3   
   1400027fe:	int3   
   1400027ff:	int3   
   140002800:	mov    QWORD PTR [rsp+0x8],rbx
   140002805:	mov    QWORD PTR [rsp+0x10],rsi
   14000280a:	push   rdi
   14000280b:	sub    rsp,0x20
   14000280f:	mov    rsi,rcx
   140002812:	mov    rcx,QWORD PTR [rcx]
   140002815:	mov    rdi,r8
   140002818:	call   0x140001c60
   14000281d:	mov    rbx,rax
   140002820:	test   rax,rax
   140002823:	jne    0x14000282c
   140002825:	mov    rbx,QWORD PTR [rsi]
   140002828:	add    rbx,0x8
   14000282c:	mov    ecx,0x8
   140002831:	call   0x14001ee64
   140002836:	test   rax,rax
   140002839:	je     0x140002851
   14000283b:	mov    QWORD PTR [rax],rbx
   14000283e:	mov    QWORD PTR [rdi],rax
   140002841:	mov    rbx,QWORD PTR [rsp+0x30]
   140002846:	mov    rsi,QWORD PTR [rsp+0x38]
   14000284b:	add    rsp,0x20
   14000284f:	pop    rdi
   140002850:	ret    
   140002851:	mov    rbx,QWORD PTR [rsp+0x30]
   140002856:	mov    rsi,QWORD PTR [rsp+0x38]
   14000285b:	mov    QWORD PTR [rdi],0x0
   140002862:	add    rsp,0x20
   140002866:	pop    rdi
   140002867:	ret    
   140002868:	int3   
   140002869:	int3   
   14000286a:	int3   
   14000286b:	int3   
   14000286c:	int3   
   14000286d:	int3   
   14000286e:	int3   
   14000286f:	int3   
   140002870:	mov    QWORD PTR [rsp+0x8],rbx
   140002875:	push   rdi
   140002876:	sub    rsp,0x20
   14000287a:	mov    rdi,QWORD PTR [rcx]
   14000287d:	mov    ecx,DWORD PTR [rdi+0x20]
   140002880:	mov    rax,QWORD PTR [rdi+0x8]
   140002884:	test   ecx,ecx
   140002886:	je     0x140002897
   140002888:	dec    ecx
   14000288a:	cmp    QWORD PTR [rax],rdi
   14000288d:	jne    0x1400028bf
   14000288f:	add    rax,0x8
   140002893:	test   ecx,ecx
   140002895:	jne    0x140002888
   140002897:	mov    rax,rdi
   14000289a:	xor    ebx,ebx
   14000289c:	cmp    rax,rdi
   14000289f:	je     0x1400028b2
   1400028a1:	mov    rcx,rax
   1400028a4:	inc    rbx
   1400028a7:	call   QWORD PTR [rip+0x1de93]        # 0x140020740
   1400028ad:	cmp    rax,rdi
   1400028b0:	jne    0x1400028a1
   1400028b2:	mov    eax,ebx
   1400028b4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400028b9:	add    rsp,0x20
   1400028bd:	pop    rdi
   1400028be:	ret    
   1400028bf:	mov    rax,QWORD PTR [rax]
   1400028c2:	jmp    0x14000289a
   1400028c4:	int3   
   1400028c5:	int3   
   1400028c6:	int3   
   1400028c7:	int3   
   1400028c8:	int3   
   1400028c9:	int3   
   1400028ca:	int3   
   1400028cb:	int3   
   1400028cc:	int3   
   1400028cd:	int3   
   1400028ce:	int3   
   1400028cf:	int3   
   1400028d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400028d5:	mov    QWORD PTR [rsp+0x10],rsi
   1400028da:	push   rdi
   1400028db:	sub    rsp,0x20
   1400028df:	mov    rax,QWORD PTR [rcx]
   1400028e2:	mov    rdi,r8
   1400028e5:	xor    r8d,r8d
   1400028e8:	mov    rbx,rdx
   1400028eb:	mov    rsi,rcx
   1400028ee:	cmp    DWORD PTR [rax+0x20],r8d
   1400028f2:	je     0x140002903
   1400028f4:	mov    edx,DWORD PTR [rax+0x24]
   1400028f7:	mov    rcx,rbx
   1400028fa:	call   QWORD PTR [rip+0x1dd90]        # 0x140020690
   140002900:	mov    r8d,eax
   140002903:	mov    rdx,rbx
   140002906:	mov    rcx,rsi
   140002909:	call   0x140001e20
   14000290e:	mov    ecx,0x8
   140002913:	mov    rbx,QWORD PTR [rax]
   140002916:	call   0x14001ee64
   14000291b:	test   rax,rax
   14000291e:	je     0x140002936
   140002920:	mov    QWORD PTR [rax],rbx
   140002923:	mov    QWORD PTR [rdi],rax
   140002926:	mov    rbx,QWORD PTR [rsp+0x30]
   14000292b:	mov    rsi,QWORD PTR [rsp+0x38]
   140002930:	add    rsp,0x20
   140002934:	pop    rdi
   140002935:	ret    
   140002936:	mov    rbx,QWORD PTR [rsp+0x30]
   14000293b:	mov    rsi,QWORD PTR [rsp+0x38]
   140002940:	mov    QWORD PTR [rdi],0x0
   140002947:	add    rsp,0x20
   14000294b:	pop    rdi
   14000294c:	ret    
   14000294d:	int3   
   14000294e:	int3   
   14000294f:	int3   
   140002950:	mov    QWORD PTR [rsp+0x8],rbx
   140002955:	push   rdi
   140002956:	sub    rsp,0x20
   14000295a:	mov    rdi,QWORD PTR [rcx]
   14000295d:	mov    ebx,edx
   14000295f:	test   edx,edx
   140002961:	jle    0x140002975
   140002963:	mov    rcx,QWORD PTR [rdi]
   140002966:	call   QWORD PTR [rip+0x1ddd4]        # 0x140020740
   14000296c:	dec    ebx
   14000296e:	mov    QWORD PTR [rdi],rax
   140002971:	test   ebx,ebx
   140002973:	jg     0x140002963
   140002975:	test   ebx,ebx
   140002977:	jns    0x140002992
   140002979:	neg    ebx
   14000297b:	nop    DWORD PTR [rax+rax*1+0x0]
   140002980:	mov    rcx,QWORD PTR [rdi]
   140002983:	call   QWORD PTR [rip+0x1dd97]        # 0x140020720
   140002989:	sub    rbx,0x1
   14000298d:	mov    QWORD PTR [rdi],rax
   140002990:	jne    0x140002980
   140002992:	mov    rbx,QWORD PTR [rsp+0x30]
   140002997:	add    rsp,0x20
   14000299b:	pop    rdi
   14000299c:	ret    
   14000299d:	int3   
   14000299e:	int3   
   14000299f:	int3   
   1400029a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400029a5:	mov    QWORD PTR [rsp+0x18],rbp
   1400029aa:	mov    DWORD PTR [rsp+0x10],edx
   1400029ae:	push   rsi
   1400029af:	push   rdi
   1400029b0:	push   r12
   1400029b2:	push   r13
   1400029b4:	push   r14
   1400029b6:	sub    rsp,0x20
   1400029ba:	mov    rdx,QWORD PTR [rcx]
   1400029bd:	movsxd r13,r8d
   1400029c0:	mov    r12,rcx
   1400029c3:	movsxd rax,DWORD PTR [rdx+0x8]
   1400029c7:	mov    r8d,r13d
   1400029ca:	lea    r14,[rdx+rax*8+0x10]
   1400029cf:	lea    rdx,[rsp+0x58]
   1400029d4:	call   QWORD PTR [rip+0x1dc86]        # 0x140020660
   1400029da:	mov    r10,QWORD PTR [r12]
   1400029de:	movsxd rdx,DWORD PTR [rsp+0x58]
   1400029e3:	movsxd r9,DWORD PTR [r10+0x8]
   1400029e7:	mov    rbp,rax
   1400029ea:	mov    rdi,r14
   1400029ed:	add    rdx,r9
   1400029f0:	lea    rbx,[r10+r9*8+0x10]
   1400029f5:	lea    rsi,[r10+rdx*8+0x10]
   1400029fa:	cmp    rbx,rsi
   1400029fd:	je     0x140002a2f
   1400029ff:	nop
   140002a00:	mov    ecx,0x10
   140002a05:	call   0x14001ee64
   140002a0a:	test   rax,rax
   140002a0d:	je     0x140002a1d
   140002a0f:	mov    rdx,QWORD PTR [rdi]
   140002a12:	mov    rcx,rax
   140002a15:	call   QWORD PTR [rip+0x1dd1d]        # 0x140020738
   140002a1b:	jmp    0x140002a1f
   140002a1d:	xor    eax,eax
   140002a1f:	mov    QWORD PTR [rbx],rax
   140002a22:	add    rbx,0x8
   140002a26:	add    rdi,0x8
   140002a2a:	cmp    rbx,rsi
   140002a2d:	jne    0x140002a00
   140002a2f:	mov    r8,QWORD PTR [r12]
   140002a33:	movsxd rdx,DWORD PTR [rsp+0x58]
   140002a38:	movsxd rcx,DWORD PTR [r8+0x8]
   140002a3c:	movsxd rax,DWORD PTR [r8+0xc]
   140002a40:	lea    rdi,[r14+rdx*8]
   140002a44:	add    rcx,rdx
   140002a47:	lea    rsi,[r8+rax*8+0x10]
   140002a4c:	add    rcx,r13
   140002a4f:	lea    rbx,[r8+rcx*8+0x10]
   140002a54:	cmp    rbx,rsi
   140002a57:	je     0x140002a8f
   140002a59:	nop    DWORD PTR [rax+0x0]
   140002a60:	mov    ecx,0x10
   140002a65:	call   0x14001ee64
   140002a6a:	test   rax,rax
   140002a6d:	je     0x140002a7d
   140002a6f:	mov    rdx,QWORD PTR [rdi]
   140002a72:	mov    rcx,rax
   140002a75:	call   QWORD PTR [rip+0x1dcbd]        # 0x140020738
   140002a7b:	jmp    0x140002a7f
   140002a7d:	xor    eax,eax
   140002a7f:	mov    QWORD PTR [rbx],rax
   140002a82:	add    rbx,0x8
   140002a86:	add    rdi,0x8
   140002a8a:	cmp    rbx,rsi
   140002a8d:	jne    0x140002a60
   140002a8f:	mov    eax,DWORD PTR [rbp+0x0]
   140002a92:	test   eax,eax
   140002a94:	je     0x140002aa7
   140002a96:	cmp    eax,0xffffffff
   140002a99:	je     0x140002ab2
   140002a9b:	lock add DWORD PTR [rbp+0x0],0xffffffff
   140002aa0:	setne  al
   140002aa3:	test   al,al
   140002aa5:	jne    0x140002ab2
   140002aa7:	mov    rdx,rbp
   140002aaa:	mov    rcx,r12
   140002aad:	call   0x140001be0
   140002ab2:	mov    rdx,QWORD PTR [r12]
   140002ab6:	movsxd rax,DWORD PTR [rsp+0x58]
   140002abb:	mov    rbx,QWORD PTR [rsp+0x50]
   140002ac0:	movsxd rcx,DWORD PTR [rdx+0x8]
   140002ac4:	mov    rbp,QWORD PTR [rsp+0x60]
   140002ac9:	add    rcx,rax
   140002acc:	lea    rax,[rdx+rcx*8+0x10]
   140002ad1:	add    rsp,0x20
   140002ad5:	pop    r14
   140002ad7:	pop    r13
   140002ad9:	pop    r12
   140002adb:	pop    rdi
   140002adc:	pop    rsi
   140002add:	ret    
   140002ade:	int3   
   140002adf:	int3   
   140002ae0:	mov    QWORD PTR [rsp+0x8],rbx
   140002ae5:	push   rdi
   140002ae6:	sub    rsp,0x20
   140002aea:	mov    rbx,rcx
   140002aed:	call   QWORD PTR [rip+0x1dc3d]        # 0x140020730
   140002af3:	mov    rdx,QWORD PTR [rbx]
   140002af6:	mov    rcx,QWORD PTR [rdx+0x10]
   140002afa:	mov    rdi,rax
   140002afd:	test   rcx,rcx
   140002b00:	je     0x140002b19
   140002b02:	mov    rdx,rax
   140002b05:	call   0x140001210
   140002b0a:	lea    rcx,[rdi+0x8]
   140002b0e:	mov    QWORD PTR [rdi+0x10],rax
   140002b12:	and    QWORD PTR [rax],0x3
   140002b16:	or     QWORD PTR [rax],rcx
   140002b19:	mov    rcx,QWORD PTR [rbx]
   140002b1c:	mov    eax,DWORD PTR [rcx]
   140002b1e:	test   eax,eax
   140002b20:	je     0x140002b32
   140002b22:	cmp    eax,0xffffffff
   140002b25:	je     0x140002b3a
   140002b27:	lock add DWORD PTR [rcx],0xffffffff
   140002b2b:	setne  al
   140002b2e:	test   al,al
   140002b30:	jne    0x140002b3a
   140002b32:	mov    rcx,QWORD PTR [rbx]
   140002b35:	call   0x1400022f0
   140002b3a:	mov    rcx,rdi
   140002b3d:	mov    QWORD PTR [rbx],rdi
   140002b40:	mov    rbx,QWORD PTR [rsp+0x30]
   140002b45:	add    rsp,0x20
   140002b49:	pop    rdi
   140002b4a:	rex.W jmp QWORD PTR [rip+0x1db1f]        # 0x140020670
   140002b51:	int3   
   140002b52:	int3   
   140002b53:	int3   
   140002b54:	int3   
   140002b55:	int3   
   140002b56:	int3   
   140002b57:	int3   
   140002b58:	int3   
   140002b59:	int3   
   140002b5a:	int3   
   140002b5b:	int3   
   140002b5c:	int3   
   140002b5d:	int3   
   140002b5e:	int3   
   140002b5f:	int3   
   140002b60:	mov    QWORD PTR [rsp+0x8],rbx
   140002b65:	mov    QWORD PTR [rsp+0x10],rbp
   140002b6a:	mov    QWORD PTR [rsp+0x18],rsi
   140002b6f:	push   rdi
   140002b70:	sub    rsp,0x20
   140002b74:	mov    r8,QWORD PTR [rcx]
   140002b77:	mov    rbx,rcx
   140002b7a:	movsxd rax,DWORD PTR [r8+0x8]
   140002b7e:	lea    rdi,[r8+rax*8+0x10]
   140002b83:	call   QWORD PTR [rip+0x1daef]        # 0x140020678
   140002b89:	mov    rdx,QWORD PTR [rbx]
   140002b8c:	movsxd rcx,DWORD PTR [rdx+0xc]
   140002b90:	mov    rsi,rax
   140002b93:	lea    rbp,[rdx+rcx*8+0x10]
   140002b98:	movsxd rcx,DWORD PTR [rdx+0x8]
   140002b9c:	lea    rbx,[rdx+rcx*8+0x10]
   140002ba1:	cmp    rbx,rbp
   140002ba4:	je     0x140002bc4
   140002ba6:	test   rbx,rbx
   140002ba9:	je     0x140002bb7
   140002bab:	mov    rdx,rdi
   140002bae:	mov    rcx,rbx
   140002bb1:	call   QWORD PTR [rip+0x1db31]        # 0x1400206e8
   140002bb7:	add    rbx,0x8
   140002bbb:	add    rdi,0x8
   140002bbf:	cmp    rbx,rbp
   140002bc2:	jne    0x140002ba6
   140002bc4:	mov    eax,DWORD PTR [rsi]
   140002bc6:	test   eax,eax
   140002bc8:	je     0x140002bda
   140002bca:	cmp    eax,0xffffffff
   140002bcd:	je     0x140002c0c
   140002bcf:	lock add DWORD PTR [rsi],0xffffffff
   140002bd3:	setne  al
   140002bd6:	test   al,al
   140002bd8:	jne    0x140002c0c
   140002bda:	movsxd rax,DWORD PTR [rsi+0xc]
   140002bde:	lea    rbx,[rsi+rax*8+0x10]
   140002be3:	movsxd rax,DWORD PTR [rsi+0x8]
   140002be7:	lea    rdi,[rsi+rax*8+0x10]
   140002bec:	cmp    rdi,rbx
   140002bef:	je     0x140002c03
   140002bf1:	sub    rbx,0x8
   140002bf5:	mov    rcx,rbx
   140002bf8:	call   QWORD PTR [rip+0x1dafa]        # 0x1400206f8
   140002bfe:	cmp    rbx,rdi
   140002c01:	jne    0x140002bf1
   140002c03:	mov    rcx,rsi
   140002c06:	call   QWORD PTR [rip+0x1dac4]        # 0x1400206d0
   140002c0c:	mov    rbx,QWORD PTR [rsp+0x30]
   140002c11:	mov    rbp,QWORD PTR [rsp+0x38]
   140002c16:	mov    rsi,QWORD PTR [rsp+0x40]
   140002c1b:	add    rsp,0x20
   140002c1f:	pop    rdi
   140002c20:	ret    
   140002c21:	int3   
   140002c22:	int3   
   140002c23:	int3   
   140002c24:	int3   
   140002c25:	int3   
   140002c26:	int3   
   140002c27:	int3   
   140002c28:	int3   
   140002c29:	int3   
   140002c2a:	int3   
   140002c2b:	int3   
   140002c2c:	int3   
   140002c2d:	int3   
   140002c2e:	int3   
   140002c2f:	int3   
   140002c30:	mov    QWORD PTR [rsp+0x8],rbx
   140002c35:	mov    QWORD PTR [rsp+0x10],rbp
   140002c3a:	mov    QWORD PTR [rsp+0x18],rsi
   140002c3f:	push   rdi
   140002c40:	sub    rsp,0x20
   140002c44:	mov    r8,QWORD PTR [rcx]
   140002c47:	mov    rbx,rcx
   140002c4a:	movsxd rax,DWORD PTR [r8+0x8]
   140002c4e:	lea    rdi,[r8+rax*8+0x10]
   140002c53:	call   QWORD PTR [rip+0x1da1f]        # 0x140020678
   140002c59:	mov    rdx,QWORD PTR [rbx]
   140002c5c:	movsxd rcx,DWORD PTR [rdx+0xc]
   140002c60:	mov    rsi,rax
   140002c63:	lea    rbp,[rdx+rcx*8+0x10]
   140002c68:	movsxd rcx,DWORD PTR [rdx+0x8]
   140002c6c:	lea    rbx,[rdx+rcx*8+0x10]
   140002c71:	cmp    rbx,rbp
   140002c74:	je     0x140002c94
   140002c76:	test   rbx,rbx
   140002c79:	je     0x140002c87
   140002c7b:	mov    rdx,rdi
   140002c7e:	mov    rcx,rbx
   140002c81:	call   QWORD PTR [rip+0x1db11]        # 0x140020798
   140002c87:	add    rbx,0x8
   140002c8b:	add    rdi,0x8
   140002c8f:	cmp    rbx,rbp
   140002c92:	jne    0x140002c76
   140002c94:	mov    eax,DWORD PTR [rsi]
   140002c96:	test   eax,eax
   140002c98:	je     0x140002caa
   140002c9a:	cmp    eax,0xffffffff
   140002c9d:	je     0x140002cdc
   140002c9f:	lock add DWORD PTR [rsi],0xffffffff
   140002ca3:	setne  al
   140002ca6:	test   al,al
   140002ca8:	jne    0x140002cdc
   140002caa:	movsxd rax,DWORD PTR [rsi+0xc]
   140002cae:	lea    rbx,[rsi+rax*8+0x10]
   140002cb3:	movsxd rax,DWORD PTR [rsi+0x8]
   140002cb7:	lea    rdi,[rsi+rax*8+0x10]
   140002cbc:	cmp    rdi,rbx
   140002cbf:	je     0x140002cd3
   140002cc1:	sub    rbx,0x8
   140002cc5:	mov    rcx,rbx
   140002cc8:	call   QWORD PTR [rip+0x1dab2]        # 0x140020780
   140002cce:	cmp    rbx,rdi
   140002cd1:	jne    0x140002cc1
   140002cd3:	mov    rcx,rsi
   140002cd6:	call   QWORD PTR [rip+0x1d9f4]        # 0x1400206d0
   140002cdc:	mov    rbx,QWORD PTR [rsp+0x30]
   140002ce1:	mov    rbp,QWORD PTR [rsp+0x38]
   140002ce6:	mov    rsi,QWORD PTR [rsp+0x40]
   140002ceb:	add    rsp,0x20
   140002cef:	pop    rdi
   140002cf0:	ret    
   140002cf1:	int3   
   140002cf2:	int3   
   140002cf3:	int3   
   140002cf4:	int3   
   140002cf5:	int3   
   140002cf6:	int3   
   140002cf7:	int3   
   140002cf8:	int3   
   140002cf9:	int3   
   140002cfa:	int3   
   140002cfb:	int3   
   140002cfc:	int3   
   140002cfd:	int3   
   140002cfe:	int3   
   140002cff:	int3   
   140002d00:	sub    rsp,0x38
   140002d04:	mov    eax,DWORD PTR [rip+0x2f8be]        # 0x1400325c8
   140002d0a:	test   eax,eax
   140002d0c:	jne    0x140002d77
   140002d0e:	lea    rdx,[rip+0x1dcbb]        # 0x1400209d0
   140002d15:	lea    rcx,[rsp+0x48]
   140002d1a:	mov    QWORD PTR [rsp+0x30],rbx
   140002d1f:	call   QWORD PTR [rip+0x1d97b]        # 0x1400206a0
   140002d25:	lea    r8,[rip+0xffffffffffffe5c4]        # 0x1400012f0
   140002d2c:	lea    rdx,[rip+0xffffffffffffe2cd]        # 0x140001000
   140002d33:	lea    rcx,[rsp+0x48]
   140002d38:	mov    r9d,0x70
   140002d3e:	mov    QWORD PTR [rsp+0x28],0x0
   140002d47:	mov    DWORD PTR [rsp+0x40],0x7
   140002d4f:	mov    DWORD PTR [rsp+0x20],0x107
   140002d57:	call   QWORD PTR [rip+0x1d96b]        # 0x1400206c8
   140002d5d:	lea    rcx,[rsp+0x48]
   140002d62:	mov    ebx,eax
   140002d64:	call   QWORD PTR [rip+0x1d98e]        # 0x1400206f8
   140002d6a:	mov    DWORD PTR [rip+0x2f858],ebx        # 0x1400325c8
   140002d70:	mov    eax,ebx
   140002d72:	mov    rbx,QWORD PTR [rsp+0x30]
   140002d77:	add    rsp,0x38
   140002d7b:	ret    
   140002d7c:	int3   
   140002d7d:	int3   
   140002d7e:	int3   
   140002d7f:	int3   
   140002d80:	mov    QWORD PTR [rsp+0x8],rbx
   140002d85:	push   rdi
   140002d86:	sub    rsp,0x20
   140002d8a:	mov    r8,QWORD PTR [rcx+0x8]
   140002d8e:	mov    rbx,rcx
   140002d91:	add    rcx,0x8
   140002d95:	mov    eax,DWORD PTR [r8]
   140002d98:	mov    edi,edx
   140002d9a:	test   eax,eax
   140002d9c:	je     0x140002daf
   140002d9e:	cmp    eax,0xffffffff
   140002da1:	je     0x140002db7
   140002da3:	lock add DWORD PTR [r8],0xffffffff
   140002da8:	setne  al
   140002dab:	test   al,al
   140002dad:	jne    0x140002db7
   140002daf:	mov    rdx,QWORD PTR [rcx]
   140002db2:	call   0x140001be0
   140002db7:	lea    rax,[rip+0x1da5a]        # 0x140020818
   140002dbe:	mov    QWORD PTR [rbx],rax
   140002dc1:	test   dil,0x1
   140002dc5:	je     0x140002dcf
   140002dc7:	mov    rcx,rbx
   140002dca:	call   0x14001ee46
   140002dcf:	mov    rax,rbx
   140002dd2:	mov    rbx,QWORD PTR [rsp+0x30]
   140002dd7:	add    rsp,0x20
   140002ddb:	pop    rdi
   140002ddc:	ret    
   140002ddd:	int3   
   140002dde:	int3   
   140002ddf:	int3   
   140002de0:	mov    QWORD PTR [rsp+0x8],rbx
   140002de5:	push   rdi
   140002de6:	sub    rsp,0x20
   140002dea:	mov    rbx,rcx
   140002ded:	mov    rcx,rdx
   140002df0:	mov    rdi,rdx
   140002df3:	call   QWORD PTR [rip+0x1d847]        # 0x140020640
   140002df9:	mov    rcx,rdi
   140002dfc:	cmp    eax,0x8
   140002dff:	jne    0x140002e20
   140002e01:	call   QWORD PTR [rip+0x1d841]        # 0x140020648
   140002e07:	mov    rcx,rbx
   140002e0a:	mov    rdx,rax
   140002e0d:	call   0x1400025b0
   140002e12:	mov    rax,rbx
   140002e15:	mov    rbx,QWORD PTR [rsp+0x30]
   140002e1a:	add    rsp,0x20
   140002e1e:	pop    rdi
   140002e1f:	ret    
   140002e20:	mov    rax,QWORD PTR [rip+0x1d931]        # 0x140020758
   140002e27:	lea    r8,[rsp+0x40]
   140002e2c:	mov    edx,0x8
   140002e31:	mov    QWORD PTR [rsp+0x40],rax
   140002e36:	call   QWORD PTR [rip+0x1d814]        # 0x140020650
   140002e3c:	mov    rcx,QWORD PTR [rsp+0x40]
   140002e41:	test   al,al
   140002e43:	je     0x140002ead
   140002e45:	mov    eax,DWORD PTR [rcx]
   140002e47:	test   eax,eax
   140002e49:	je     0x140002e5e
   140002e4b:	cmp    eax,0xffffffff
   140002e4e:	je     0x140002e59
   140002e50:	lock add DWORD PTR [rcx],0x1
   140002e54:	mov    rcx,QWORD PTR [rsp+0x40]
   140002e59:	mov    QWORD PTR [rbx],rcx
   140002e5c:	jmp    0x140002eb7
   140002e5e:	call   QWORD PTR [rip+0x1d8cc]        # 0x140020730
   140002e64:	mov    rcx,QWORD PTR [rsp+0x40]
   140002e69:	mov    QWORD PTR [rbx],rax
   140002e6c:	mov    r8,QWORD PTR [rcx+0x10]
   140002e70:	test   r8,r8
   140002e73:	je     0x140002eb7
   140002e75:	mov    rdx,rax
   140002e78:	mov    rcx,r8
   140002e7b:	call   0x140001210
   140002e80:	mov    rcx,QWORD PTR [rbx]
   140002e83:	mov    QWORD PTR [rcx+0x10],rax
   140002e87:	mov    rax,QWORD PTR [rbx]
   140002e8a:	mov    rdx,QWORD PTR [rax+0x10]
   140002e8e:	add    rax,0x8
   140002e92:	mov    ecx,DWORD PTR [rdx]
   140002e94:	and    ecx,0x3
   140002e97:	or     rcx,rax
   140002e9a:	mov    QWORD PTR [rdx],rcx
   140002e9d:	mov    rcx,QWORD PTR [rbx]
   140002ea0:	call   QWORD PTR [rip+0x1d7ca]        # 0x140020670
   140002ea6:	mov    rcx,QWORD PTR [rsp+0x40]
   140002eab:	jmp    0x140002eb7
   140002ead:	mov    rax,QWORD PTR [rip+0x1d8a4]        # 0x140020758
   140002eb4:	mov    QWORD PTR [rbx],rax
   140002eb7:	mov    eax,DWORD PTR [rcx]
   140002eb9:	test   eax,eax
   140002ebb:	je     0x140002ed2
   140002ebd:	cmp    eax,0xffffffff
   140002ec0:	je     0x140002ed7
   140002ec2:	lock add DWORD PTR [rcx],0xffffffff
   140002ec6:	setne  al
   140002ec9:	test   al,al
   140002ecb:	jne    0x140002ed7
   140002ecd:	mov    rcx,QWORD PTR [rsp+0x40]
   140002ed2:	call   0x1400022f0
   140002ed7:	mov    rax,rbx
   140002eda:	mov    rbx,QWORD PTR [rsp+0x30]
   140002edf:	add    rsp,0x20
   140002ee3:	pop    rdi
   140002ee4:	ret    
   140002ee5:	int3   
   140002ee6:	int3   
   140002ee7:	int3   
   140002ee8:	int3   
   140002ee9:	int3   
   140002eea:	int3   
   140002eeb:	int3   
   140002eec:	int3   
   140002eed:	int3   
   140002eee:	int3   
   140002eef:	int3   
   140002ef0:	mov    QWORD PTR [rsp+0x8],rbx
   140002ef5:	push   rdi
   140002ef6:	sub    rsp,0x20
   140002efa:	mov    rax,QWORD PTR [rcx]
   140002efd:	mov    rdi,rdx
   140002f00:	mov    rbx,rcx
   140002f03:	mov    r8d,DWORD PTR [rax]
   140002f06:	cmp    r8d,0x1
   140002f0a:	je     0x140002f5d
   140002f0c:	test   r8d,r8d
   140002f0f:	je     0x140002f5d
   140002f11:	mov    edx,0x7fffffff
   140002f16:	mov    r8d,0x1
   140002f1c:	call   0x1400029a0
   140002f21:	mov    ecx,0x10
   140002f26:	mov    rbx,rax
   140002f29:	call   0x14001ee64
   140002f2e:	test   rax,rax
   140002f31:	je     0x140002f4d
   140002f33:	mov    rdx,rdi
   140002f36:	mov    rcx,rax
   140002f39:	call   QWORD PTR [rip+0x1d7f9]        # 0x140020738
   140002f3f:	mov    QWORD PTR [rbx],rax
   140002f42:	mov    rbx,QWORD PTR [rsp+0x30]
   140002f47:	add    rsp,0x20
   140002f4b:	pop    rdi
   140002f4c:	ret    
   140002f4d:	xor    eax,eax
   140002f4f:	mov    QWORD PTR [rbx],rax
   140002f52:	mov    rbx,QWORD PTR [rsp+0x30]
   140002f57:	add    rsp,0x20
   140002f5b:	pop    rdi
   140002f5c:	ret    
   140002f5d:	call   QWORD PTR [rip+0x1d6d5]        # 0x140020638
   140002f63:	mov    r8,rdi
   140002f66:	mov    rcx,rbx
   140002f69:	mov    rdx,rax
   140002f6c:	mov    rbx,QWORD PTR [rsp+0x30]
   140002f71:	add    rsp,0x20
   140002f75:	pop    rdi
   140002f76:	jmp    0x140001160
   140002f7b:	int3   
   140002f7c:	int3   
   140002f7d:	int3   
   140002f7e:	int3   
   140002f7f:	int3   
   140002f80:	mov    QWORD PTR [rsp+0x8],rbx
   140002f85:	push   rdi
   140002f86:	sub    rsp,0x30
   140002f8a:	mov    rbx,rcx
   140002f8d:	mov    rcx,QWORD PTR [rcx]
   140002f90:	lea    r8,[rip+0xfffffffffffff349]        # 0x1400022e0
   140002f97:	lea    rdx,[rip+0xffffffffffffee52]        # 0x140001df0
   140002f9e:	mov    r9d,0x18
   140002fa4:	mov    DWORD PTR [rsp+0x20],0x8
   140002fac:	call   QWORD PTR [rip+0x1d67e]        # 0x140020630
   140002fb2:	mov    rdi,rax
   140002fb5:	mov    rax,QWORD PTR [rbx]
   140002fb8:	mov    ecx,DWORD PTR [rax+0x10]
   140002fbb:	test   ecx,ecx
   140002fbd:	je     0x140002fd0
   140002fbf:	cmp    ecx,0xffffffff
   140002fc2:	je     0x140002fe0
   140002fc4:	lock add DWORD PTR [rax+0x10],0xffffffff
   140002fc9:	setne  al
   140002fcc:	test   al,al
   140002fce:	jne    0x140002fe0
   140002fd0:	mov    rcx,QWORD PTR [rbx]
   140002fd3:	lea    rdx,[rip+0xfffffffffffff306]        # 0x1400022e0
   140002fda:	call   QWORD PTR [rip+0x1d688]        # 0x140020668
   140002fe0:	mov    QWORD PTR [rbx],rdi
   140002fe3:	mov    rbx,QWORD PTR [rsp+0x40]
   140002fe8:	add    rsp,0x30
   140002fec:	pop    rdi
   140002fed:	ret    
   140002fee:	int3   
   140002fef:	int3   
   140002ff0:	mov    QWORD PTR [rsp+0x8],rbx
   140002ff5:	push   rdi
   140002ff6:	sub    rsp,0x20
   140002ffa:	mov    rax,QWORD PTR [rcx]
   140002ffd:	cmp    QWORD PTR [rax+0x10],0x0
   140003002:	lea    rbx,[rax+0x8]
   140003006:	je     0x14000300e
   140003008:	mov    rax,QWORD PTR [rax+0x20]
   14000300c:	jmp    0x140003012
   14000300e:	add    rax,0x8
   140003012:	xor    edi,edi
   140003014:	cmp    rax,rbx
   140003017:	je     0x140003031
   140003019:	nop    DWORD PTR [rax+0x0]
   140003020:	mov    rcx,rax
   140003023:	inc    rdi
   140003026:	call   QWORD PTR [rip+0x1d6b4]        # 0x1400206e0
   14000302c:	cmp    rax,rbx
   14000302f:	jne    0x140003020
   140003031:	mov    eax,edi
   140003033:	mov    rbx,QWORD PTR [rsp+0x30]
   140003038:	add    rsp,0x20
   14000303c:	pop    rdi
   14000303d:	ret    
   14000303e:	int3   
   14000303f:	int3   
   140003040:	mov    QWORD PTR [rsp+0x8],rbx
   140003045:	push   rdi
   140003046:	sub    rsp,0x20
   14000304a:	mov    rdi,QWORD PTR [rcx]
   14000304d:	mov    ebx,edx
   14000304f:	test   edx,edx
   140003051:	jle    0x140003065
   140003053:	mov    rcx,QWORD PTR [rdi]
   140003056:	call   QWORD PTR [rip+0x1d684]        # 0x1400206e0
   14000305c:	dec    ebx
   14000305e:	mov    QWORD PTR [rdi],rax
   140003061:	test   ebx,ebx
   140003063:	jg     0x140003053
   140003065:	test   ebx,ebx
   140003067:	jns    0x140003082
   140003069:	neg    ebx
   14000306b:	nop    DWORD PTR [rax+rax*1+0x0]
   140003070:	mov    rcx,QWORD PTR [rdi]
   140003073:	call   QWORD PTR [rip+0x1d65f]        # 0x1400206d8
   140003079:	sub    rbx,0x1
   14000307d:	mov    QWORD PTR [rdi],rax
   140003080:	jne    0x140003070
   140003082:	mov    rbx,QWORD PTR [rsp+0x30]
   140003087:	add    rsp,0x20
   14000308b:	pop    rdi
   14000308c:	ret    
   14000308d:	int3   
   14000308e:	int3   
   14000308f:	int3   
   140003090:	mov    QWORD PTR [rsp+0x8],rbx
   140003095:	mov    QWORD PTR [rsp+0x10],rbp
   14000309a:	mov    QWORD PTR [rsp+0x18],rsi
   14000309f:	push   rdi
   1400030a0:	push   r12
   1400030a2:	push   r13
   1400030a4:	push   r14
   1400030a6:	push   r15
   1400030a8:	sub    rsp,0x30
   1400030ac:	mov    rax,QWORD PTR [rcx]
   1400030af:	mov    rbp,rdx
   1400030b2:	mov    r15,r9
   1400030b5:	mov    edx,DWORD PTR [rax]
   1400030b7:	mov    r12,r8
   1400030ba:	mov    r14,rcx
   1400030bd:	cmp    edx,0x1
   1400030c0:	je     0x1400030cb
   1400030c2:	test   edx,edx
   1400030c4:	je     0x1400030cb
   1400030c6:	call   0x140002ae0
   1400030cb:	mov    rax,QWORD PTR [r14]
   1400030ce:	xor    esi,esi
   1400030d0:	mov    dil,0x1
   1400030d3:	mov    rbx,QWORD PTR [rax+0x10]
   1400030d7:	lea    r13,[rax+0x8]
   1400030db:	test   rbx,rbx
   1400030de:	je     0x140003135
   1400030e0:	lea    rcx,[rbx+0x18]
   1400030e4:	mov    rdx,r12
   1400030e7:	mov    r13,rbx
   1400030ea:	call   QWORD PTR [rip+0x1d620]        # 0x140020710
   1400030f0:	test   al,al
   1400030f2:	jne    0x140003100
   1400030f4:	mov    rsi,rbx
   1400030f7:	mov    rbx,QWORD PTR [rbx+0x8]
   1400030fb:	mov    dil,0x1
   1400030fe:	jmp    0x140003107
   140003100:	mov    rbx,QWORD PTR [rbx+0x10]
   140003104:	xor    dil,dil
   140003107:	test   rbx,rbx
   14000310a:	jne    0x1400030e0
   14000310c:	test   rsi,rsi
   14000310f:	je     0x140003135
   140003111:	lea    rdx,[rsi+0x18]
   140003115:	mov    rcx,r12
   140003118:	call   QWORD PTR [rip+0x1d5f2]        # 0x140020710
   14000311e:	test   al,al
   140003120:	jne    0x140003135
   140003122:	lea    rcx,[rsi+0x20]
   140003126:	mov    rdx,r15
   140003129:	call   QWORD PTR [rip+0x1d4f9]        # 0x140020628
   14000312f:	mov    QWORD PTR [rbp+0x0],rsi
   140003133:	jmp    0x14000317a
   140003135:	mov    rcx,QWORD PTR [r14]
   140003138:	mov    edx,0x30
   14000313d:	mov    r9,r13
   140003140:	lea    r8d,[rdx-0x28]
   140003144:	mov    BYTE PTR [rsp+0x20],dil
   140003149:	call   QWORD PTR [rip+0x1d5d9]        # 0x140020728
   14000314f:	mov    rbx,rax
   140003152:	lea    rcx,[rax+0x18]
   140003156:	test   rcx,rcx
   140003159:	je     0x140003164
   14000315b:	mov    rdx,r12
   14000315e:	call   QWORD PTR [rip+0x1d634]        # 0x140020798
   140003164:	lea    rcx,[rbx+0x20]
   140003168:	test   rcx,rcx
   14000316b:	je     0x140003176
   14000316d:	mov    rdx,r15
   140003170:	call   QWORD PTR [rip+0x1d5c2]        # 0x140020738
   140003176:	mov    QWORD PTR [rbp+0x0],rbx
   14000317a:	mov    rbx,QWORD PTR [rsp+0x60]
   14000317f:	mov    rsi,QWORD PTR [rsp+0x70]
   140003184:	mov    rax,rbp
   140003187:	mov    rbp,QWORD PTR [rsp+0x68]
   14000318c:	add    rsp,0x30
   140003190:	pop    r15
   140003192:	pop    r14
   140003194:	pop    r13
   140003196:	pop    r12
   140003198:	pop    rdi
   140003199:	ret    
   14000319a:	int3   
   14000319b:	int3   
   14000319c:	int3   
   14000319d:	int3   
   14000319e:	int3   
   14000319f:	int3   
   1400031a0:	mov    QWORD PTR [rsp+0x8],rcx
   1400031a5:	push   rbx
   1400031a6:	push   rbp
   1400031a7:	push   rdi
   1400031a8:	push   r15
   1400031aa:	sub    rsp,0x328
   1400031b1:	mov    r15,rcx
   1400031b4:	lea    rcx,[rsp+0x50]
   1400031b9:	xor    ebp,ebp
   1400031bb:	mov    DWORD PTR [rsp+0x360],ebp
   1400031c2:	call   QWORD PTR [rip+0x1d418]        # 0x1400205e0
   1400031c8:	lea    edx,[rbp+0x1]
   1400031cb:	lea    rcx,[rsp+0x50]
   1400031d0:	mov    DWORD PTR [rsp+0x360],0x1
   1400031db:	call   QWORD PTR [rip+0x1d407]        # 0x1400205e8
   1400031e1:	test   al,al
   1400031e3:	jne    0x1400032f2
   1400031e9:	lea    rdx,[rsp+0x70]
   1400031ee:	lea    rcx,[rsp+0x50]
   1400031f3:	call   QWORD PTR [rip+0x1d3f7]        # 0x1400205f0
   1400031f9:	lea    rdx,[rsp+0x1c8]
   140003201:	mov    rcx,rax
   140003204:	call   QWORD PTR [rip+0x1d3ee]        # 0x1400205f8
   14000320a:	lea    rdx,[rsp+0xa0]
   140003212:	lea    rcx,[rsp+0x50]
   140003217:	mov    rdi,rax
   14000321a:	call   QWORD PTR [rip+0x1d3e0]        # 0x140020600
   140003220:	lea    rcx,[rsp+0x98]
   140003228:	mov    rdx,rax
   14000322b:	call   QWORD PTR [rip+0x1d487]        # 0x1400206b8
   140003231:	lea    rdx,[rsp+0x1a0]
   140003239:	mov    rcx,rax
   14000323c:	call   QWORD PTR [rip+0x1d3b6]        # 0x1400205f8
   140003242:	mov    rcx,QWORD PTR [rip+0x1cf0f]        # 0x140020158
   140003249:	lea    rdx,[rip+0x1d7d8]        # 0x140020a28
   140003250:	mov    rbx,rax
   140003253:	call   0x140001800
   140003258:	mov    rdx,rbx
   14000325b:	mov    rcx,rax
   14000325e:	call   QWORD PTR [rip+0x1ceec]        # 0x140020150
   140003264:	mov    dl,0x3a
   140003266:	mov    rcx,rax
   140003269:	call   0x1400019f0
   14000326e:	mov    rdx,rdi
   140003271:	mov    rcx,rax
   140003274:	call   QWORD PTR [rip+0x1ced6]        # 0x140020150
   14000327a:	mov    rdx,QWORD PTR [rip+0x1cec7]        # 0x140020148
   140003281:	mov    rcx,rax
   140003284:	call   QWORD PTR [rip+0x1ceb6]        # 0x140020140
   14000328a:	lea    rcx,[rsp+0x1a0]
   140003292:	call   QWORD PTR [rip+0x1cea0]        # 0x140020138
   140003298:	lea    rcx,[rsp+0x98]
   1400032a0:	call   QWORD PTR [rip+0x1d4da]        # 0x140020780
   1400032a6:	lea    rcx,[rsp+0xa0]
   1400032ae:	call   QWORD PTR [rip+0x1d4cc]        # 0x140020780
   1400032b4:	lea    rcx,[rsp+0x1c8]
   1400032bc:	call   QWORD PTR [rip+0x1ce76]        # 0x140020138
   1400032c2:	lea    rcx,[rsp+0x70]
   1400032c7:	call   QWORD PTR [rip+0x1d4b3]        # 0x140020780
   1400032cd:	mov    r11,QWORD PTR [rip+0x1d48c]        # 0x140020760
   1400032d4:	lea    rcx,[rsp+0x50]
   1400032d9:	mov    QWORD PTR [r15],r11
   1400032dc:	call   QWORD PTR [rip+0x1d326]        # 0x140020608
   1400032e2:	mov    rax,r15
   1400032e5:	add    rsp,0x328
   1400032ec:	pop    r15
   1400032ee:	pop    rdi
   1400032ef:	pop    rbp
   1400032f0:	pop    rbx
   1400032f1:	ret    
   1400032f2:	mov    QWORD PTR [rsp+0x358],rsi
   1400032fa:	mov    QWORD PTR [rsp+0x320],r12
   140003302:	lea    rdx,[rsp+0x80]
   14000330a:	lea    rcx,[rsp+0x50]
   14000330f:	mov    QWORD PTR [rsp+0x318],r13
   140003317:	mov    QWORD PTR [rsp+0x310],r14
   14000331f:	call   QWORD PTR [rip+0x1d2eb]        # 0x140020610
   140003325:	lea    rcx,[rsp+0x60]
   14000332a:	mov    rdx,rax
   14000332d:	call   QWORD PTR [rip+0x1d2e5]        # 0x140020618
   140003333:	lea    rcx,[rsp+0x80]
   14000333b:	call   QWORD PTR [rip+0x1d3b7]        # 0x1400206f8
   140003341:	lea    rcx,[rsp+0x50]
   140003346:	call   QWORD PTR [rip+0x1d2d4]        # 0x140020620
   14000334c:	lea    rcx,[rsp+0xb0]
   140003354:	call   0x140016da0
   140003359:	mov    rax,QWORD PTR [rip+0x1d400]        # 0x140020760
   140003360:	lea    r11,[rip+0x1d6a1]        # 0x140020a08
   140003367:	lea    rdx,[rsp+0x40]
   14000336c:	lea    rcx,[rsp+0xb0]
   140003374:	mov    QWORD PTR [rsp+0x48],rax
   140003379:	mov    QWORD PTR [rsp+0x40],r11
   14000337e:	call   0x140016b20
   140003383:	lea    rdx,[rsp+0xb0]
   14000338b:	lea    rcx,[rsp+0x100]
   140003393:	call   0x140017f10
   140003398:	xor    r9d,r9d
   14000339b:	lea    rdx,[rsp+0x60]
   1400033a0:	lea    r8d,[r9+0x1]
   1400033a4:	lea    rcx,[rsp+0x100]
   1400033ac:	call   0x140018000
   1400033b1:	lea    rdx,[rsp+0xb0]
   1400033b9:	lea    rcx,[rsp+0x1f0]
   1400033c1:	call   0x14000f170
   1400033c6:	lea    rcx,[rsp+0x1f0]
   1400033ce:	mov    edx,0x67
   1400033d3:	call   0x14000f340
   1400033d8:	mov    rbx,QWORD PTR [rsp+0x308]
   1400033e0:	mov    QWORD PTR [rsp+0x368],rbx
   1400033e8:	mov    eax,DWORD PTR [rbx]
   1400033ea:	test   eax,eax
   1400033ec:	je     0x140003408
   1400033ee:	cmp    eax,0xffffffff
   1400033f1:	je     0x1400034ac
   1400033f7:	lock add DWORD PTR [rbx],0x1
   1400033fb:	mov    rbx,QWORD PTR [rsp+0x368]
   140003403:	jmp    0x1400034ac
   140003408:	mov    edx,DWORD PTR [rbx+0x4]
   14000340b:	lea    rcx,[rsp+0x368]
   140003413:	call   QWORD PTR [rip+0x1d25f]        # 0x140020678
   140003419:	mov    rbx,QWORD PTR [rsp+0x368]
   140003421:	mov    rcx,QWORD PTR [rsp+0x308]
   140003429:	movsxd rax,DWORD PTR [rbx+0xc]
   14000342d:	lea    r12,[rbx+rax*8+0x10]
   140003432:	movsxd rax,DWORD PTR [rcx+0x8]
   140003436:	lea    rsi,[rcx+rax*8+0x10]
   14000343b:	movsxd rax,DWORD PTR [rbx+0x8]
   14000343f:	lea    rdi,[rbx+rax*8+0x10]
   140003444:	cmp    rdi,r12
   140003447:	je     0x1400034ac
   140003449:	nop    DWORD PTR [rax+0x0]
   140003450:	mov    ecx,0x20
   140003455:	call   0x14001ee64
   14000345a:	mov    rbx,rax
   14000345d:	test   rax,rax
   140003460:	je     0x140003492
   140003462:	mov    rdx,QWORD PTR [rsi]
   140003465:	add    rdx,0x18
   140003469:	mov    ecx,DWORD PTR [rdx-0x18]
   14000346c:	mov    DWORD PTR [rax],ecx
   14000346e:	mov    ecx,DWORD PTR [rdx-0x14]
   140003471:	mov    DWORD PTR [rax+0x4],ecx
   140003474:	mov    ecx,DWORD PTR [rdx-0x10]
   140003477:	mov    DWORD PTR [rax+0x8],ecx
   14000347a:	mov    ecx,DWORD PTR [rdx-0xc]
   14000347d:	mov    DWORD PTR [rax+0xc],ecx
   140003480:	mov    eax,DWORD PTR [rdx-0x8]
   140003483:	lea    rcx,[rbx+0x18]
   140003487:	mov    DWORD PTR [rbx+0x10],eax
   14000348a:	call   QWORD PTR [rip+0x1d308]        # 0x140020798
   140003490:	jmp    0x140003494
   140003492:	xor    ebx,ebx
   140003494:	mov    QWORD PTR [rdi],rbx
   140003497:	add    rdi,0x8
   14000349b:	add    rsi,0x8
   14000349f:	cmp    rdi,r12
   1400034a2:	jne    0x140003450
   1400034a4:	mov    rbx,QWORD PTR [rsp+0x368]
   1400034ac:	mov    QWORD PTR [rsp+0x20],rbx
   1400034b1:	mov    eax,DWORD PTR [rbx]
   1400034b3:	mov    rdx,rbx
   1400034b6:	test   eax,eax
   1400034b8:	je     0x1400034d9
   1400034ba:	cmp    eax,0xffffffff
   1400034bd:	je     0x140003575
   1400034c3:	lock add DWORD PTR [rbx],0x1
   1400034c7:	mov    rbx,QWORD PTR [rsp+0x368]
   1400034cf:	mov    rdx,QWORD PTR [rsp+0x20]
   1400034d4:	jmp    0x140003575
   1400034d9:	mov    edx,DWORD PTR [rbx+0x4]
   1400034dc:	lea    rcx,[rsp+0x20]
   1400034e1:	call   QWORD PTR [rip+0x1d191]        # 0x140020678
   1400034e7:	mov    rdx,QWORD PTR [rsp+0x20]
   1400034ec:	mov    rbx,QWORD PTR [rsp+0x368]
   1400034f4:	movsxd rax,DWORD PTR [rdx+0xc]
   1400034f8:	lea    r12,[rdx+rax*8+0x10]
   1400034fd:	movsxd rax,DWORD PTR [rbx+0x8]
   140003501:	lea    rsi,[rbx+rax*8+0x10]
   140003506:	movsxd rax,DWORD PTR [rdx+0x8]
   14000350a:	lea    rdi,[rdx+rax*8+0x10]
   14000350f:	cmp    rdi,r12
   140003512:	je     0x140003575
   140003514:	mov    ecx,0x20
   140003519:	call   0x14001ee64
   14000351e:	mov    rbx,rax
   140003521:	test   rax,rax
   140003524:	je     0x140003556
   140003526:	mov    rdx,QWORD PTR [rsi]
   140003529:	add    rdx,0x18
   14000352d:	mov    ecx,DWORD PTR [rdx-0x18]
   140003530:	mov    DWORD PTR [rax],ecx
   140003532:	mov    ecx,DWORD PTR [rdx-0x14]
   140003535:	mov    DWORD PTR [rax+0x4],ecx
   140003538:	mov    ecx,DWORD PTR [rdx-0x10]
   14000353b:	mov    DWORD PTR [rax+0x8],ecx
   14000353e:	mov    ecx,DWORD PTR [rdx-0xc]
   140003541:	mov    DWORD PTR [rax+0xc],ecx
   140003544:	mov    eax,DWORD PTR [rdx-0x8]
   140003547:	lea    rcx,[rbx+0x18]
   14000354b:	mov    DWORD PTR [rbx+0x10],eax
   14000354e:	call   QWORD PTR [rip+0x1d244]        # 0x140020798
   140003554:	jmp    0x140003558
   140003556:	xor    ebx,ebx
   140003558:	mov    QWORD PTR [rdi],rbx
   14000355b:	add    rdi,0x8
   14000355f:	add    rsi,0x8
   140003563:	cmp    rdi,r12
   140003566:	jne    0x140003514
   140003568:	mov    rbx,QWORD PTR [rsp+0x368]
   140003570:	mov    rdx,QWORD PTR [rsp+0x20]
   140003575:	mov    DWORD PTR [rsp+0x28],ebp
   140003579:	movsxd rax,DWORD PTR [rdx+0x8]
   14000357d:	lea    rcx,[rdx+rax*8+0x10]
   140003582:	mov    QWORD PTR [rsp+0x30],rcx
   140003587:	movsxd rax,DWORD PTR [rdx+0xc]
   14000358b:	lea    rcx,[rdx+rax*8+0x10]
   140003590:	mov    QWORD PTR [rsp+0x38],rcx
   140003595:	mov    eax,DWORD PTR [rbx]
   140003597:	test   eax,eax
   140003599:	je     0x1400035b3
   14000359b:	cmp    eax,0xffffffff
   14000359e:	je     0x140003600
   1400035a0:	lock add DWORD PTR [rbx],0xffffffff
   1400035a4:	setne  al
   1400035a7:	test   al,al
   1400035a9:	jne    0x140003600
   1400035ab:	mov    rbx,QWORD PTR [rsp+0x368]
   1400035b3:	movsxd rax,DWORD PTR [rbx+0xc]
   1400035b7:	lea    rdi,[rbx+rax*8+0x10]
   1400035bc:	movsxd rax,DWORD PTR [rbx+0x8]
   1400035c0:	lea    r12,[rbx+rax*8+0x10]
   1400035c5:	cmp    r12,rdi
   1400035c8:	je     0x1400035f4
   1400035ca:	nop    WORD PTR [rax+rax*1+0x0]
   1400035d0:	mov    rsi,QWORD PTR [rdi-0x8]
   1400035d4:	sub    rdi,0x8
   1400035d8:	test   rsi,rsi
   1400035db:	je     0x1400035ef
   1400035dd:	lea    rcx,[rsi+0x18]
   1400035e1:	call   QWORD PTR [rip+0x1d199]        # 0x140020780
   1400035e7:	mov    rcx,rsi
   1400035ea:	call   0x14001ee46
   1400035ef:	cmp    rdi,r12
   1400035f2:	jne    0x1400035d0
   1400035f4:	mov    rcx,rbx
   1400035f7:	call   QWORD PTR [rip+0x1d0d3]        # 0x1400206d0
   1400035fd:	nop    DWORD PTR [rax]
   140003600:	mov    eax,DWORD PTR [rsp+0x28]
   140003604:	inc    DWORD PTR [rsp+0x28]
   140003608:	test   eax,eax
   14000360a:	jne    0x14000361d
   14000360c:	mov    rax,QWORD PTR [rsp+0x38]
   140003611:	cmp    QWORD PTR [rsp+0x30],rax
   140003616:	je     0x14000361d
   140003618:	mov    r14b,0x1
   14000361b:	jmp    0x140003620
   14000361d:	xor    r14b,r14b
   140003620:	test   bpl,0x2
   140003624:	je     0x14000368d
   140003626:	mov    rsi,QWORD PTR [rsp+0x78]
   14000362b:	and    ebp,0xfffffffd
   14000362e:	mov    eax,DWORD PTR [rsi]
   140003630:	test   eax,eax
   140003632:	je     0x140003649
   140003634:	cmp    eax,0xffffffff
   140003637:	je     0x14000368d
   140003639:	lock add DWORD PTR [rsi],0xffffffff
   14000363d:	setne  al
   140003640:	test   al,al
   140003642:	jne    0x14000368d
   140003644:	mov    rsi,QWORD PTR [rsp+0x78]
   140003649:	movsxd rax,DWORD PTR [rsi+0xc]
   14000364d:	lea    rbx,[rsi+rax*8+0x10]
   140003652:	movsxd rax,DWORD PTR [rsi+0x8]
   140003656:	lea    r12,[rsi+rax*8+0x10]
   14000365b:	cmp    r12,rbx
   14000365e:	je     0x140003684
   140003660:	mov    rdi,QWORD PTR [rbx-0x8]
   140003664:	sub    rbx,0x8
   140003668:	test   rdi,rdi
   14000366b:	je     0x14000367f
   14000366d:	lea    rcx,[rdi+0x18]
   140003671:	call   QWORD PTR [rip+0x1d109]        # 0x140020780
   140003677:	mov    rcx,rdi
   14000367a:	call   0x14001ee46
   14000367f:	cmp    rbx,r12
   140003682:	jne    0x140003660
   140003684:	mov    rcx,rsi
   140003687:	call   QWORD PTR [rip+0x1d043]        # 0x1400206d0
   14000368d:	test   r14b,r14b
   140003690:	je     0x140003a13
   140003696:	mov    rax,QWORD PTR [rsp+0x30]
   14000369b:	mov    r15,QWORD PTR [rax]
   14000369e:	test   bpl,0x4
   1400036a2:	je     0x140003720
   1400036a4:	mov    rsi,QWORD PTR [rsp+0x90]
   1400036ac:	and    ebp,0xfffffffb
   1400036af:	mov    eax,DWORD PTR [rsi]
   1400036b1:	test   eax,eax
   1400036b3:	je     0x1400036cd
   1400036b5:	cmp    eax,0xffffffff
   1400036b8:	je     0x140003720
   1400036ba:	lock add DWORD PTR [rsi],0xffffffff
   1400036be:	setne  al
   1400036c1:	test   al,al
   1400036c3:	jne    0x140003720
   1400036c5:	mov    rsi,QWORD PTR [rsp+0x90]
   1400036cd:	movsxd rax,DWORD PTR [rsi+0xc]
   1400036d1:	lea    rbx,[rsi+rax*8+0x10]
   1400036d6:	movsxd rax,DWORD PTR [rsi+0x8]
   1400036da:	lea    r12,[rsi+rax*8+0x10]
   1400036df:	cmp    r12,rbx
   1400036e2:	je     0x140003714
   1400036e4:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400036f0:	mov    rdi,QWORD PTR [rbx-0x8]
   1400036f4:	sub    rbx,0x8
   1400036f8:	test   rdi,rdi
   1400036fb:	je     0x14000370f
   1400036fd:	lea    rcx,[rdi+0x18]
   140003701:	call   QWORD PTR [rip+0x1d079]        # 0x140020780
   140003707:	mov    rcx,rdi
   14000370a:	call   0x14001ee46
   14000370f:	cmp    rbx,r12
   140003712:	jne    0x1400036f0
   140003714:	mov    rcx,rsi
   140003717:	call   QWORD PTR [rip+0x1cfb3]        # 0x1400206d0
   14000371d:	nop    DWORD PTR [rax]
   140003720:	mov    r14d,DWORD PTR [rsp+0x28]
   140003725:	test   bpl,0x10
   140003729:	je     0x14000379d
   14000372b:	mov    rsi,QWORD PTR [rsp+0x88]
   140003733:	and    ebp,0xffffffef
   140003736:	mov    eax,DWORD PTR [rsi]
   140003738:	test   eax,eax
   14000373a:	je     0x14000374c
   14000373c:	cmp    eax,0xffffffff
   14000373f:	je     0x14000379d
   140003741:	lock add DWORD PTR [rsi],0xffffffff
   140003745:	setne  al
   140003748:	test   al,al
   14000374a:	jne    0x14000379d
   14000374c:	mov    rsi,QWORD PTR [rsp+0x88]
   140003754:	movsxd rax,DWORD PTR [rsi+0xc]
   140003758:	lea    rbx,[rsi+rax*8+0x10]
   14000375d:	movsxd rax,DWORD PTR [rsi+0x8]
   140003761:	lea    r12,[rsi+rax*8+0x10]
   140003766:	cmp    r12,rbx
   140003769:	je     0x140003794
   14000376b:	nop    DWORD PTR [rax+rax*1+0x0]
   140003770:	mov    rdi,QWORD PTR [rbx-0x8]
   140003774:	sub    rbx,0x8
   140003778:	test   rdi,rdi
   14000377b:	je     0x14000378f
   14000377d:	lea    rcx,[rdi+0x18]
   140003781:	call   QWORD PTR [rip+0x1cff9]        # 0x140020780
   140003787:	mov    rcx,rdi
   14000378a:	call   0x14001ee46
   14000378f:	cmp    rbx,r12
   140003792:	jne    0x140003770
   140003794:	mov    rcx,rsi
   140003797:	call   QWORD PTR [rip+0x1cf33]        # 0x1400206d0
   14000379d:	test   r14d,r14d
   1400037a0:	je     0x140003832
   1400037a6:	cmp    DWORD PTR [r15],0x1
   1400037aa:	je     0x1400038c2
   1400037b0:	dec    DWORD PTR [rsp+0x28]
   1400037b4:	test   bpl,0x8
   1400037b8:	je     0x140003720
   1400037be:	mov    rsi,QWORD PTR [rsp+0x68]
   1400037c3:	and    ebp,0xfffffff7
   1400037c6:	mov    eax,DWORD PTR [rsi]
   1400037c8:	test   eax,eax
   1400037ca:	je     0x1400037e4
   1400037cc:	cmp    eax,0xffffffff
   1400037cf:	je     0x140003720
   1400037d5:	lock add DWORD PTR [rsi],0xffffffff
   1400037d9:	setne  al
   1400037dc:	test   al,al
   1400037de:	jne    0x140003720
   1400037e4:	mov    rsi,QWORD PTR [rsp+0x68]
   1400037e9:	movsxd rax,DWORD PTR [rsi+0xc]
   1400037ed:	lea    rbx,[rsi+rax*8+0x10]
   1400037f2:	movsxd rax,DWORD PTR [rsi+0x8]
   1400037f6:	lea    r12,[rsi+rax*8+0x10]
   1400037fb:	cmp    r12,rbx
   1400037fe:	je     0x140003824
   140003800:	mov    rdi,QWORD PTR [rbx-0x8]
   140003804:	sub    rbx,0x8
   140003808:	test   rdi,rdi
   14000380b:	je     0x14000381f
   14000380d:	lea    rcx,[rdi+0x18]
   140003811:	call   QWORD PTR [rip+0x1cf69]        # 0x140020780
   140003817:	mov    rcx,rdi
   14000381a:	call   0x14001ee46
   14000381f:	cmp    rbx,r12
   140003822:	jne    0x140003800
   140003824:	mov    rcx,rsi
   140003827:	call   QWORD PTR [rip+0x1cea3]        # 0x1400206d0
   14000382d:	jmp    0x140003720
   140003832:	add    QWORD PTR [rsp+0x30],0x8
   140003838:	test   bpl,0x1
   14000383c:	je     0x140003600
   140003842:	mov    rsi,QWORD PTR [rsp+0xa8]
   14000384a:	and    ebp,0xfffffffe
   14000384d:	mov    eax,DWORD PTR [rsi]
   14000384f:	test   eax,eax
   140003851:	je     0x140003873
   140003853:	cmp    eax,0xffffffff
   140003856:	je     0x140003600
   14000385c:	lock add DWORD PTR [rsi],0xffffffff
   140003860:	setne  al
   140003863:	test   al,al
   140003865:	jne    0x140003600
   14000386b:	mov    rsi,QWORD PTR [rsp+0xa8]
   140003873:	movsxd rax,DWORD PTR [rsi+0xc]
   140003877:	lea    rbx,[rsi+rax*8+0x10]
   14000387c:	movsxd rax,DWORD PTR [rsi+0x8]
   140003880:	lea    r12,[rsi+rax*8+0x10]
   140003885:	cmp    r12,rbx
   140003888:	je     0x1400038b4
   14000388a:	nop    WORD PTR [rax+rax*1+0x0]
   140003890:	mov    rdi,QWORD PTR [rbx-0x8]
   140003894:	sub    rbx,0x8
   140003898:	test   rdi,rdi
   14000389b:	je     0x1400038af
   14000389d:	lea    rcx,[rdi+0x18]
   1400038a1:	call   QWORD PTR [rip+0x1ced9]        # 0x140020780
   1400038a7:	mov    rcx,rdi
   1400038aa:	call   0x14001ee46
   1400038af:	cmp    rbx,r12
   1400038b2:	jne    0x140003890
   1400038b4:	mov    rcx,rsi
   1400038b7:	call   QWORD PTR [rip+0x1ce13]        # 0x1400206d0
   1400038bd:	jmp    0x140003600
   1400038c2:	mov    rax,QWORD PTR [rip+0x1ce97]        # 0x140020760
   1400038c9:	mov    r12,QWORD PTR [rsp+0x350]
   1400038d1:	mov    rsi,QWORD PTR [rsp+0x20]
   1400038d6:	mov    QWORD PTR [r12],rax
   1400038da:	mov    eax,DWORD PTR [rsi]
   1400038dc:	test   eax,eax
   1400038de:	je     0x1400038f5
   1400038e0:	cmp    eax,0xffffffff
   1400038e3:	je     0x14000393d
   1400038e5:	lock add DWORD PTR [rsi],0xffffffff
   1400038e9:	setne  al
   1400038ec:	test   al,al
   1400038ee:	jne    0x14000393d
   1400038f0:	mov    rsi,QWORD PTR [rsp+0x20]
   1400038f5:	movsxd rax,DWORD PTR [rsi+0xc]
   1400038f9:	lea    rbx,[rsi+rax*8+0x10]
   1400038fe:	movsxd rax,DWORD PTR [rsi+0x8]
   140003902:	lea    rbp,[rsi+rax*8+0x10]
   140003907:	cmp    rbp,rbx
   14000390a:	je     0x140003934
   14000390c:	nop    DWORD PTR [rax+0x0]
   140003910:	mov    rdi,QWORD PTR [rbx-0x8]
   140003914:	sub    rbx,0x8
   140003918:	test   rdi,rdi
   14000391b:	je     0x14000392f
   14000391d:	lea    rcx,[rdi+0x18]
   140003921:	call   QWORD PTR [rip+0x1ce59]        # 0x140020780
   140003927:	mov    rcx,rdi
   14000392a:	call   0x14001ee46
   14000392f:	cmp    rbx,rbp
   140003932:	jne    0x140003910
   140003934:	mov    rcx,rsi
   140003937:	call   QWORD PTR [rip+0x1cd93]        # 0x1400206d0
   14000393d:	lea    rcx,[rsp+0x1f0]
   140003945:	call   0x14000f270
   14000394a:	lea    rcx,[rsp+0x118]
   140003952:	call   QWORD PTR [rip+0x1ce28]        # 0x140020780
   140003958:	lea    rcx,[rsp+0x110]
   140003960:	call   QWORD PTR [rip+0x1ce1a]        # 0x140020780
   140003966:	lea    rcx,[rsp+0x108]
   14000396e:	call   QWORD PTR [rip+0x1ce0c]        # 0x140020780
   140003974:	mov    rsi,QWORD PTR [rsp+0x48]
   140003979:	mov    eax,DWORD PTR [rsi]
   14000397b:	test   eax,eax
   14000397d:	je     0x140003994
   14000397f:	cmp    eax,0xffffffff
   140003982:	je     0x1400039dc
   140003984:	lock add DWORD PTR [rsi],0xffffffff
   140003988:	setne  al
   14000398b:	test   al,al
   14000398d:	jne    0x1400039dc
   14000398f:	mov    rsi,QWORD PTR [rsp+0x48]
   140003994:	movsxd rax,DWORD PTR [rsi+0xc]
   140003998:	lea    rbx,[rsi+rax*8+0x10]
   14000399d:	movsxd rax,DWORD PTR [rsi+0x8]
   1400039a1:	lea    rbp,[rsi+rax*8+0x10]
   1400039a6:	cmp    rbp,rbx
   1400039a9:	je     0x1400039d3
   1400039ab:	nop    DWORD PTR [rax+rax*1+0x0]
   1400039b0:	mov    rdi,QWORD PTR [rbx-0x8]
   1400039b4:	sub    rbx,0x8
   1400039b8:	test   rdi,rdi
   1400039bb:	je     0x1400039ce
   1400039bd:	mov    rcx,rdi
   1400039c0:	call   QWORD PTR [rip+0x1cd82]        # 0x140020748
   1400039c6:	mov    rcx,rdi
   1400039c9:	call   0x14001ee46
   1400039ce:	cmp    rbx,rbp
   1400039d1:	jne    0x1400039b0
   1400039d3:	mov    rcx,rsi
   1400039d6:	call   QWORD PTR [rip+0x1ccf4]        # 0x1400206d0
   1400039dc:	lea    rax,[rip+0x1ce35]        # 0x140020818
   1400039e3:	lea    rcx,[rsp+0xb0]
   1400039eb:	mov    QWORD PTR [rsp+0x40],rax
   1400039f0:	call   0x140016e10
   1400039f5:	lea    rcx,[rsp+0x60]
   1400039fa:	call   QWORD PTR [rip+0x1cd80]        # 0x140020780
   140003a00:	lea    rcx,[rsp+0x50]
   140003a05:	call   QWORD PTR [rip+0x1cbfd]        # 0x140020608
   140003a0b:	mov    rax,r12
   140003a0e:	jmp    0x140003bce
   140003a13:	mov    rsi,QWORD PTR [rsp+0x20]
   140003a18:	mov    eax,DWORD PTR [rsi]
   140003a1a:	test   eax,eax
   140003a1c:	je     0x140003a33
   140003a1e:	cmp    eax,0xffffffff
   140003a21:	je     0x140003a7d
   140003a23:	lock add DWORD PTR [rsi],0xffffffff
   140003a27:	setne  al
   140003a2a:	test   al,al
   140003a2c:	jne    0x140003a7d
   140003a2e:	mov    rsi,QWORD PTR [rsp+0x20]
   140003a33:	movsxd rax,DWORD PTR [rsi+0xc]
   140003a37:	lea    rbx,[rsi+rax*8+0x10]
   140003a3c:	movsxd rax,DWORD PTR [rsi+0x8]
   140003a40:	lea    rbp,[rsi+rax*8+0x10]
   140003a45:	cmp    rbp,rbx
   140003a48:	je     0x140003a74
   140003a4a:	nop    WORD PTR [rax+rax*1+0x0]
   140003a50:	mov    rdi,QWORD PTR [rbx-0x8]
   140003a54:	sub    rbx,0x8
   140003a58:	test   rdi,rdi
   140003a5b:	je     0x140003a6f
   140003a5d:	lea    rcx,[rdi+0x18]
   140003a61:	call   QWORD PTR [rip+0x1cd19]        # 0x140020780
   140003a67:	mov    rcx,rdi
   140003a6a:	call   0x14001ee46
   140003a6f:	cmp    rbx,rbp
   140003a72:	jne    0x140003a50
   140003a74:	mov    rcx,rsi
   140003a77:	call   QWORD PTR [rip+0x1cc53]        # 0x1400206d0
   140003a7d:	mov    rax,QWORD PTR [rsp+0x48]
   140003a82:	mov    r15,QWORD PTR [rsp+0x350]
   140003a8a:	mov    QWORD PTR [r15],rax
   140003a8d:	mov    ecx,DWORD PTR [rax]
   140003a8f:	test   ecx,ecx
   140003a91:	je     0x140003a9e
   140003a93:	cmp    ecx,0xffffffff
   140003a96:	je     0x140003b01
   140003a98:	lock add DWORD PTR [rax],0x1
   140003a9c:	jmp    0x140003b01
   140003a9e:	mov    edx,DWORD PTR [rax+0x4]
   140003aa1:	mov    rcx,r15
   140003aa4:	call   QWORD PTR [rip+0x1cbce]        # 0x140020678
   140003aaa:	mov    r11,QWORD PTR [r15]
   140003aad:	mov    rcx,QWORD PTR [rsp+0x48]
   140003ab2:	movsxd rax,DWORD PTR [r11+0xc]
   140003ab6:	lea    rsi,[r11+rax*8+0x10]
   140003abb:	movsxd rax,DWORD PTR [rcx+0x8]
   140003abf:	lea    rdi,[rcx+rax*8+0x10]
   140003ac4:	movsxd rax,DWORD PTR [r11+0x8]
   140003ac8:	lea    rbx,[r11+rax*8+0x10]
   140003acd:	cmp    rbx,rsi
   140003ad0:	je     0x140003b01
   140003ad2:	mov    ecx,0x10
   140003ad7:	call   0x14001ee64
   140003adc:	test   rax,rax
   140003adf:	je     0x140003aef
   140003ae1:	mov    rdx,QWORD PTR [rdi]
   140003ae4:	mov    rcx,rax
   140003ae7:	call   QWORD PTR [rip+0x1cc4b]        # 0x140020738
   140003aed:	jmp    0x140003af1
   140003aef:	xor    eax,eax
   140003af1:	mov    QWORD PTR [rbx],rax
   140003af4:	add    rbx,0x8
   140003af8:	add    rdi,0x8
   140003afc:	cmp    rbx,rsi
   140003aff:	jne    0x140003ad2
   140003b01:	lea    rcx,[rsp+0x1f0]
   140003b09:	call   0x14000f270
   140003b0e:	lea    rcx,[rsp+0x118]
   140003b16:	call   QWORD PTR [rip+0x1cc64]        # 0x140020780
   140003b1c:	lea    rcx,[rsp+0x110]
   140003b24:	call   QWORD PTR [rip+0x1cc56]        # 0x140020780
   140003b2a:	lea    rcx,[rsp+0x108]
   140003b32:	call   QWORD PTR [rip+0x1cc48]        # 0x140020780
   140003b38:	mov    rsi,QWORD PTR [rsp+0x48]
   140003b3d:	mov    eax,DWORD PTR [rsi]
   140003b3f:	test   eax,eax
   140003b41:	je     0x140003b58
   140003b43:	cmp    eax,0xffffffff
   140003b46:	je     0x140003b9c
   140003b48:	lock add DWORD PTR [rsi],0xffffffff
   140003b4c:	setne  al
   140003b4f:	test   al,al
   140003b51:	jne    0x140003b9c
   140003b53:	mov    rsi,QWORD PTR [rsp+0x48]
   140003b58:	movsxd rax,DWORD PTR [rsi+0xc]
   140003b5c:	lea    rbx,[rsi+rax*8+0x10]
   140003b61:	movsxd rax,DWORD PTR [rsi+0x8]
   140003b65:	lea    rbp,[rsi+rax*8+0x10]
   140003b6a:	cmp    rbp,rbx
   140003b6d:	je     0x140003b93
   140003b6f:	nop
   140003b70:	mov    rdi,QWORD PTR [rbx-0x8]
   140003b74:	sub    rbx,0x8
   140003b78:	test   rdi,rdi
   140003b7b:	je     0x140003b8e
   140003b7d:	mov    rcx,rdi
   140003b80:	call   QWORD PTR [rip+0x1cbc2]        # 0x140020748
   140003b86:	mov    rcx,rdi
   140003b89:	call   0x14001ee46
   140003b8e:	cmp    rbx,rbp
   140003b91:	jne    0x140003b70
   140003b93:	mov    rcx,rsi
   140003b96:	call   QWORD PTR [rip+0x1cb34]        # 0x1400206d0
   140003b9c:	lea    rax,[rip+0x1cc75]        # 0x140020818
   140003ba3:	lea    rcx,[rsp+0xb0]
   140003bab:	mov    QWORD PTR [rsp+0x40],rax
   140003bb0:	call   0x140016e10
   140003bb5:	lea    rcx,[rsp+0x60]
   140003bba:	call   QWORD PTR [rip+0x1cbc0]        # 0x140020780
   140003bc0:	lea    rcx,[rsp+0x50]
   140003bc5:	call   QWORD PTR [rip+0x1ca3d]        # 0x140020608
   140003bcb:	mov    rax,r15
   140003bce:	mov    r13,QWORD PTR [rsp+0x318]
   140003bd6:	mov    r12,QWORD PTR [rsp+0x320]
   140003bde:	mov    rsi,QWORD PTR [rsp+0x358]
   140003be6:	mov    r14,QWORD PTR [rsp+0x310]
   140003bee:	add    rsp,0x328
   140003bf5:	pop    r15
   140003bf7:	pop    rdi
   140003bf8:	pop    rbp
   140003bf9:	pop    rbx
   140003bfa:	ret    
   140003bfb:	int3   
   140003bfc:	int3   
   140003bfd:	int3   
   140003bfe:	int3   
   140003bff:	int3   
   140003c00:	mov    QWORD PTR [rsp+0x10],rbx
   140003c05:	mov    QWORD PTR [rsp+0x18],rsi
   140003c0a:	mov    QWORD PTR [rsp+0x20],rdi
   140003c0f:	push   r12
   140003c11:	sub    rsp,0x40
   140003c15:	mov    rbx,r8
   140003c18:	mov    r12,rcx
   140003c1b:	call   0x1400023e0
   140003c20:	mov    r11,QWORD PTR [rbx]
   140003c23:	mov    QWORD PTR [rsp+0x20],r11
   140003c28:	mov    eax,DWORD PTR [r11]
   140003c2b:	test   eax,eax
   140003c2d:	je     0x140003c44
   140003c2f:	cmp    eax,0xffffffff
   140003c32:	je     0x140003cb4
   140003c38:	lock add DWORD PTR [r11],0x1
   140003c3d:	mov    r11,QWORD PTR [rsp+0x20]
   140003c42:	jmp    0x140003cb4
   140003c44:	mov    edx,DWORD PTR [r11+0x4]
   140003c48:	lea    rcx,[rsp+0x20]
   140003c4d:	call   QWORD PTR [rip+0x1ca25]        # 0x140020678
   140003c53:	mov    r11,QWORD PTR [rbx]
   140003c56:	movsxd rax,DWORD PTR [r11+0x8]
   140003c5a:	lea    rdi,[r11+rax*8+0x10]
   140003c5f:	mov    r11,QWORD PTR [rsp+0x20]
   140003c64:	movsxd rax,DWORD PTR [r11+0xc]
   140003c68:	lea    rsi,[r11+rax*8+0x10]
   140003c6d:	movsxd rax,DWORD PTR [r11+0x8]
   140003c71:	lea    rbx,[r11+rax*8+0x10]
   140003c76:	cmp    rbx,rsi
   140003c79:	je     0x140003cb4
   140003c7b:	nop    DWORD PTR [rax+rax*1+0x0]
   140003c80:	mov    ecx,0x10
   140003c85:	call   0x14001ee64
   140003c8a:	test   rax,rax
   140003c8d:	je     0x140003c9d
   140003c8f:	mov    rdx,QWORD PTR [rdi]
   140003c92:	mov    rcx,rax
   140003c95:	call   QWORD PTR [rip+0x1ca9d]        # 0x140020738
   140003c9b:	jmp    0x140003c9f
   140003c9d:	xor    eax,eax
   140003c9f:	mov    QWORD PTR [rbx],rax
   140003ca2:	add    rbx,0x8
   140003ca6:	add    rdi,0x8
   140003caa:	cmp    rbx,rsi
   140003cad:	jne    0x140003c80
   140003caf:	mov    r11,QWORD PTR [rsp+0x20]
   140003cb4:	mov    DWORD PTR [rsp+0x28],0x0
   140003cbc:	movsxd rax,DWORD PTR [r11+0x8]
   140003cc0:	lea    rcx,[r11+rax*8+0x10]
   140003cc5:	mov    QWORD PTR [rsp+0x30],rcx
   140003cca:	movsxd rax,DWORD PTR [r11+0xc]
   140003cce:	lea    rdx,[r11+rax*8+0x10]
   140003cd3:	mov    QWORD PTR [rsp+0x38],rdx
   140003cd8:	nop    DWORD PTR [rax+rax*1+0x0]
   140003ce0:	mov    eax,0x1
   140003ce5:	mov    DWORD PTR [rsp+0x28],eax
   140003ce9:	cmp    rcx,rdx
   140003cec:	je     0x140003e08
   140003cf2:	mov    rsi,QWORD PTR [rcx]
   140003cf5:	test   eax,eax
   140003cf7:	je     0x140003df0
   140003cfd:	mov    rcx,QWORD PTR [r12]
   140003d01:	movsxd rax,DWORD PTR [rcx+0xc]
   140003d05:	lea    rdi,[rcx+rax*8+0x10]
   140003d0a:	movsxd rax,DWORD PTR [rcx+0x8]
   140003d0e:	lea    rbx,[rcx+rax*8+0x10]
   140003d13:	cmp    rbx,rdi
   140003d16:	je     0x140003d3d
   140003d18:	nop    DWORD PTR [rax+rax*1+0x0]
   140003d20:	mov    rcx,QWORD PTR [rbx]
   140003d23:	mov    rdx,rsi
   140003d26:	call   QWORD PTR [rip+0x1c9ec]        # 0x140020718
   140003d2c:	test   al,al
   140003d2e:	jne    0x140003de1
   140003d34:	add    rbx,0x8
   140003d38:	cmp    rbx,rdi
   140003d3b:	jne    0x140003d20
   140003d3d:	mov    rax,QWORD PTR [r12]
   140003d41:	mov    ecx,DWORD PTR [rax]
   140003d43:	cmp    ecx,0x1
   140003d46:	je     0x140003da3
   140003d48:	test   ecx,ecx
   140003d4a:	je     0x140003da3
   140003d4c:	mov    edx,0x7fffffff
   140003d51:	mov    r8d,0x1
   140003d57:	mov    rcx,r12
   140003d5a:	call   0x1400029a0
   140003d5f:	mov    ecx,0x10
   140003d64:	mov    rbx,rax
   140003d67:	call   0x14001ee64
   140003d6c:	test   rax,rax
   140003d6f:	je     0x140003d8f
   140003d71:	mov    rdx,rsi
   140003d74:	mov    rcx,rax
   140003d77:	call   QWORD PTR [rip+0x1c9bb]        # 0x140020738
   140003d7d:	mov    QWORD PTR [rbx],rax
   140003d80:	mov    eax,DWORD PTR [rsp+0x28]
   140003d84:	dec    eax
   140003d86:	mov    DWORD PTR [rsp+0x28],eax
   140003d8a:	jmp    0x140003cf5
   140003d8f:	xor    eax,eax
   140003d91:	mov    QWORD PTR [rbx],rax
   140003d94:	mov    eax,DWORD PTR [rsp+0x28]
   140003d98:	dec    eax
   140003d9a:	mov    DWORD PTR [rsp+0x28],eax
   140003d9e:	jmp    0x140003cf5
   140003da3:	mov    rcx,r12
   140003da6:	call   QWORD PTR [rip+0x1c88c]        # 0x140020638
   140003dac:	mov    ecx,0x10
   140003db1:	mov    rbx,rax
   140003db4:	call   0x14001ee64
   140003db9:	test   rax,rax
   140003dbc:	je     0x140003ddc
   140003dbe:	mov    rdx,rsi
   140003dc1:	mov    rcx,rax
   140003dc4:	call   QWORD PTR [rip+0x1c96e]        # 0x140020738
   140003dca:	mov    QWORD PTR [rbx],rax
   140003dcd:	mov    eax,DWORD PTR [rsp+0x28]
   140003dd1:	dec    eax
   140003dd3:	mov    DWORD PTR [rsp+0x28],eax
   140003dd7:	jmp    0x140003cf5
   140003ddc:	xor    eax,eax
   140003dde:	mov    QWORD PTR [rbx],rax
   140003de1:	mov    eax,DWORD PTR [rsp+0x28]
   140003de5:	dec    eax
   140003de7:	mov    DWORD PTR [rsp+0x28],eax
   140003deb:	jmp    0x140003cf5
   140003df0:	mov    rcx,QWORD PTR [rsp+0x30]
   140003df5:	mov    rdx,QWORD PTR [rsp+0x38]
   140003dfa:	add    rcx,0x8
   140003dfe:	mov    QWORD PTR [rsp+0x30],rcx
   140003e03:	jmp    0x140003ce0
   140003e08:	mov    rsi,QWORD PTR [rsp+0x20]
   140003e0d:	mov    eax,DWORD PTR [rsi]
   140003e0f:	test   eax,eax
   140003e11:	je     0x140003e28
   140003e13:	cmp    eax,0xffffffff
   140003e16:	je     0x140003e81
   140003e18:	lock add DWORD PTR [rsi],0xffffffff
   140003e1c:	setne  al
   140003e1f:	test   al,al
   140003e21:	jne    0x140003e81
   140003e23:	mov    rsi,QWORD PTR [rsp+0x20]
   140003e28:	movsxd rax,DWORD PTR [rsi+0xc]
   140003e2c:	mov    QWORD PTR [rsp+0x50],rbp
   140003e31:	lea    rbx,[rsi+rax*8+0x10]
   140003e36:	movsxd rax,DWORD PTR [rsi+0x8]
   140003e3a:	lea    rbp,[rsi+rax*8+0x10]
   140003e3f:	cmp    rbp,rbx
   140003e42:	je     0x140003e73
   140003e44:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140003e50:	mov    rdi,QWORD PTR [rbx-0x8]
   140003e54:	sub    rbx,0x8
   140003e58:	test   rdi,rdi
   140003e5b:	je     0x140003e6e
   140003e5d:	mov    rcx,rdi
   140003e60:	call   QWORD PTR [rip+0x1c8e2]        # 0x140020748
   140003e66:	mov    rcx,rdi
   140003e69:	call   0x14001ee46
   140003e6e:	cmp    rbx,rbp
   140003e71:	jne    0x140003e50
   140003e73:	mov    rcx,rsi
   140003e76:	call   QWORD PTR [rip+0x1c854]        # 0x1400206d0
   140003e7c:	mov    rbp,QWORD PTR [rsp+0x50]
   140003e81:	mov    rbx,QWORD PTR [rsp+0x58]
   140003e86:	mov    rsi,QWORD PTR [rsp+0x60]
   140003e8b:	mov    rdi,QWORD PTR [rsp+0x68]
   140003e90:	mov    rax,r12
   140003e93:	add    rsp,0x40
   140003e97:	pop    r12
   140003e99:	ret    
   140003e9a:	int3   
   140003e9b:	int3   
   140003e9c:	int3   
   140003e9d:	int3   
   140003e9e:	int3   
   140003e9f:	int3   
   140003ea0:	mov    QWORD PTR [rsp+0x20],rbp
   140003ea5:	mov    QWORD PTR [rsp+0x18],r8
   140003eaa:	push   rsi
   140003eab:	sub    rsp,0x20
   140003eaf:	mov    rsi,rcx
   140003eb2:	mov    rcx,QWORD PTR [rcx]
   140003eb5:	mov    rbp,rdx
   140003eb8:	cmp    r8,rcx
   140003ebb:	jne    0x140003ece
   140003ebd:	mov    QWORD PTR [rdx],r8
   140003ec0:	mov    rax,rdx
   140003ec3:	mov    rbp,QWORD PTR [rsp+0x48]
   140003ec8:	add    rsp,0x20
   140003ecc:	pop    rsi
   140003ecd:	ret    
   140003ece:	mov    eax,DWORD PTR [rcx+0x10]
   140003ed1:	mov    QWORD PTR [rsp+0x30],rbx
   140003ed6:	mov    QWORD PTR [rsp+0x38],rdi
   140003edb:	cmp    eax,0x1
   140003ede:	je     0x140003f57
   140003ee0:	test   eax,eax
   140003ee2:	je     0x140003f57
   140003ee4:	mov    eax,DWORD PTR [r8+0x8]
   140003ee8:	xor    edx,edx
   140003eea:	xor    ebx,ebx
   140003eec:	div    DWORD PTR [rcx+0x20]
   140003eef:	mov    rax,QWORD PTR [rcx+0x8]
   140003ef3:	movsxd rdi,edx
   140003ef6:	mov    rax,QWORD PTR [rax+rdi*8]
   140003efa:	cmp    rax,r8
   140003efd:	je     0x140003f12
   140003eff:	nop
   140003f00:	mov    rcx,rax
   140003f03:	inc    ebx
   140003f05:	call   QWORD PTR [rip+0x1c835]        # 0x140020740
   140003f0b:	cmp    rax,QWORD PTR [rsp+0x40]
   140003f10:	jne    0x140003f00
   140003f12:	mov    rax,QWORD PTR [rsi]
   140003f15:	mov    ecx,DWORD PTR [rax+0x10]
   140003f18:	cmp    ecx,0x1
   140003f1b:	je     0x140003f29
   140003f1d:	test   ecx,ecx
   140003f1f:	je     0x140003f29
   140003f21:	mov    rcx,rsi
   140003f24:	call   0x140002f80
   140003f29:	mov    rax,QWORD PTR [rsi]
   140003f2c:	mov    r8,QWORD PTR [rax+0x8]
   140003f30:	mov    r8,QWORD PTR [r8+rdi*8]
   140003f34:	mov    QWORD PTR [rsp+0x40],r8
   140003f39:	test   ebx,ebx
   140003f3b:	jle    0x140003f57
   140003f3d:	nop    DWORD PTR [rax]
   140003f40:	mov    rcx,r8
   140003f43:	dec    ebx
   140003f45:	call   QWORD PTR [rip+0x1c7f5]        # 0x140020740
   140003f4b:	mov    r8,rax
   140003f4e:	mov    QWORD PTR [rsp+0x40],rax
   140003f53:	test   ebx,ebx
   140003f55:	jg     0x140003f40
   140003f57:	mov    rcx,r8
   140003f5a:	call   QWORD PTR [rip+0x1c7e0]        # 0x140020740
   140003f60:	mov    r8,QWORD PTR [rsi]
   140003f63:	mov    rdi,QWORD PTR [rsp+0x40]
   140003f68:	mov    rbx,rax
   140003f6b:	mov    eax,DWORD PTR [rdi+0x8]
   140003f6e:	xor    edx,edx
   140003f70:	div    DWORD PTR [r8+0x20]
   140003f74:	mov    rax,QWORD PTR [r8+0x8]
   140003f78:	cmp    QWORD PTR [rax+rdx*8],rdi
   140003f7c:	lea    r8,[rax+rdx*8]
   140003f80:	je     0x140003f8a
   140003f82:	mov    r8,QWORD PTR [r8]
   140003f85:	cmp    QWORD PTR [r8],rdi
   140003f88:	jne    0x140003f82
   140003f8a:	mov    rax,QWORD PTR [rdi]
   140003f8d:	lea    rcx,[rdi+0x10]
   140003f91:	mov    QWORD PTR [r8],rax
   140003f94:	call   QWORD PTR [rip+0x1c7e6]        # 0x140020780
   140003f9a:	mov    rcx,QWORD PTR [rsi]
   140003f9d:	mov    rdx,rdi
   140003fa0:	call   QWORD PTR [rip+0x1c6b2]        # 0x140020658
   140003fa6:	mov    r11,QWORD PTR [rsi]
   140003fa9:	mov    rdi,QWORD PTR [rsp+0x38]
   140003fae:	dec    DWORD PTR [r11+0x14]
   140003fb2:	mov    QWORD PTR [rbp+0x0],rbx
   140003fb6:	mov    rbx,QWORD PTR [rsp+0x30]
   140003fbb:	mov    rax,rbp
   140003fbe:	mov    rbp,QWORD PTR [rsp+0x48]
   140003fc3:	add    rsp,0x20
   140003fc7:	pop    rsi
   140003fc8:	ret    
   140003fc9:	int3   
   140003fca:	int3   
   140003fcb:	int3   
   140003fcc:	int3   
   140003fcd:	int3   
   140003fce:	int3   
   140003fcf:	int3   
   140003fd0:	rex push rbx
   140003fd2:	push   rdi
   140003fd3:	sub    rsp,0x28
   140003fd7:	mov    rax,QWORD PTR [rcx]
   140003fda:	mov    rbx,rdx
   140003fdd:	mov    rdi,rcx
   140003fe0:	cmp    DWORD PTR [rax+0x14],0x0
   140003fe4:	jne    0x140003fef
   140003fe6:	xor    eax,eax
   140003fe8:	add    rsp,0x28
   140003fec:	pop    rdi
   140003fed:	pop    rbx
   140003fee:	ret    
   140003fef:	mov    eax,DWORD PTR [rax+0x10]
   140003ff2:	mov    QWORD PTR [rsp+0x50],r12
   140003ff7:	mov    QWORD PTR [rsp+0x20],r13
   140003ffc:	cmp    eax,0x1
   140003fff:	je     0x14000400a
   140004001:	test   eax,eax
   140004003:	je     0x14000400a
   140004005:	call   0x140002f80
   14000400a:	mov    rax,QWORD PTR [rdi]
   14000400d:	xor    r8d,r8d
   140004010:	mov    r13d,DWORD PTR [rax+0x14]
   140004014:	cmp    DWORD PTR [rax+0x20],r8d
   140004018:	je     0x140004029
   14000401a:	mov    edx,DWORD PTR [rax+0x24]
   14000401d:	mov    rcx,rbx
   140004020:	call   QWORD PTR [rip+0x1c66a]        # 0x140020690
   140004026:	mov    r8d,eax
   140004029:	mov    rdx,rbx
   14000402c:	mov    rcx,rdi
   14000402f:	call   0x140001e20
   140004034:	mov    r12,rax
   140004037:	mov    rax,QWORD PTR [rdi]
   14000403a:	cmp    QWORD PTR [r12],rax
   14000403e:	je     0x1400040b2
   140004040:	mov    QWORD PTR [rsp+0x40],rbp
   140004045:	mov    QWORD PTR [rsp+0x48],rsi
   14000404a:	nop    WORD PTR [rax+rax*1+0x0]
   140004050:	mov    rdx,QWORD PTR [r12]
   140004054:	mov    rsi,QWORD PTR [rdx]
   140004057:	cmp    rsi,QWORD PTR [rdi]
   14000405a:	je     0x140004073
   14000405c:	lea    rcx,[rsi+0x10]
   140004060:	add    rdx,0x10
   140004064:	call   QWORD PTR [rip+0x1c686]        # 0x1400206f0
   14000406a:	test   al,al
   14000406c:	je     0x140004073
   14000406e:	mov    bpl,0x1
   140004071:	jmp    0x140004076
   140004073:	xor    bpl,bpl
   140004076:	mov    rbx,QWORD PTR [r12]
   14000407a:	lea    rcx,[rbx+0x10]
   14000407e:	call   QWORD PTR [rip+0x1c6fc]        # 0x140020780
   140004084:	mov    rcx,QWORD PTR [rdi]
   140004087:	mov    rdx,rbx
   14000408a:	call   QWORD PTR [rip+0x1c5c8]        # 0x140020658
   140004090:	mov    QWORD PTR [r12],rsi
   140004094:	mov    rcx,QWORD PTR [rdi]
   140004097:	dec    DWORD PTR [rcx+0x14]
   14000409a:	test   bpl,bpl
   14000409d:	jne    0x140004050
   14000409f:	mov    rcx,QWORD PTR [rdi]
   1400040a2:	call   QWORD PTR [rip+0x1c520]        # 0x1400205c8
   1400040a8:	mov    rsi,QWORD PTR [rsp+0x48]
   1400040ad:	mov    rbp,QWORD PTR [rsp+0x40]
   1400040b2:	mov    rcx,QWORD PTR [rdi]
   1400040b5:	mov    r12,QWORD PTR [rsp+0x50]
   1400040ba:	sub    r13d,DWORD PTR [rcx+0x14]
   1400040be:	mov    eax,r13d
   1400040c1:	mov    r13,QWORD PTR [rsp+0x20]
   1400040c6:	add    rsp,0x28
   1400040ca:	pop    rdi
   1400040cb:	pop    rbx
   1400040cc:	ret    
   1400040cd:	int3   
   1400040ce:	int3   
   1400040cf:	int3   
   1400040d0:	mov    QWORD PTR [rsp+0x10],rbx
   1400040d5:	mov    QWORD PTR [rsp+0x18],rsi
   1400040da:	push   rdi
   1400040db:	sub    rsp,0x90
   1400040e2:	mov    rdi,rdx
   1400040e5:	mov    rbx,rcx
   1400040e8:	call   0x140002d00
   1400040ed:	mov    rcx,rdi
   1400040f0:	mov    esi,eax
   1400040f2:	call   QWORD PTR [rip+0x1c548]        # 0x140020640
   1400040f8:	cmp    esi,eax
   1400040fa:	jne    0x14000411b
   1400040fc:	mov    rcx,rdi
   1400040ff:	call   QWORD PTR [rip+0x1c543]        # 0x140020648
   140004105:	mov    rcx,rbx
   140004108:	mov    r8d,0x70
   14000410e:	mov    rdx,rax
   140004111:	call   0x14001edd4
   140004116:	jmp    0x1400041e1
   14000411b:	mov    QWORD PTR [rsp+0xa0],rbp
   140004123:	xor    ebp,ebp
   140004125:	lea    r8,[rsp+0x20]
   14000412a:	mov    edx,esi
   14000412c:	mov    rcx,rdi
   14000412f:	mov    QWORD PTR [rsp+0x20],rbp
   140004134:	mov    QWORD PTR [rsp+0x28],rbp
   140004139:	mov    DWORD PTR [rsp+0x30],ebp
   14000413d:	mov    DWORD PTR [rsp+0x34],ebp
   140004141:	mov    DWORD PTR [rsp+0x38],ebp
   140004145:	mov    DWORD PTR [rsp+0x3c],ebp
   140004149:	mov    QWORD PTR [rsp+0x40],rbp
   14000414e:	mov    QWORD PTR [rsp+0x48],rbp
   140004153:	mov    QWORD PTR [rsp+0x50],rbp
   140004158:	mov    QWORD PTR [rsp+0x58],rbp
   14000415d:	mov    QWORD PTR [rsp+0x60],rbp
   140004162:	mov    QWORD PTR [rsp+0x68],rbp
   140004167:	mov    QWORD PTR [rsp+0x70],rbp
   14000416c:	mov    QWORD PTR [rsp+0x78],rbp
   140004171:	mov    QWORD PTR [rsp+0x80],rbp
   140004179:	mov    QWORD PTR [rsp+0x88],rbp
   140004181:	call   QWORD PTR [rip+0x1c4c9]        # 0x140020650
   140004187:	test   al,al
   140004189:	je     0x14000419e
   14000418b:	lea    rdx,[rsp+0x20]
   140004190:	lea    r8d,[rbp+0x70]
   140004194:	mov    rcx,rbx
   140004197:	call   0x14001edd4
   14000419c:	jmp    0x1400041d9
   14000419e:	mov    QWORD PTR [rbx],rbp
   1400041a1:	mov    QWORD PTR [rbx+0x8],rbp
   1400041a5:	mov    DWORD PTR [rbx+0x10],ebp
   1400041a8:	mov    DWORD PTR [rbx+0x14],ebp
   1400041ab:	mov    DWORD PTR [rbx+0x18],ebp
   1400041ae:	mov    DWORD PTR [rbx+0x1c],ebp
   1400041b1:	mov    QWORD PTR [rbx+0x20],rbp
   1400041b5:	mov    QWORD PTR [rbx+0x28],rbp
   1400041b9:	mov    QWORD PTR [rbx+0x30],rbp
   1400041bd:	mov    QWORD PTR [rbx+0x38],rbp
   1400041c1:	mov    QWORD PTR [rbx+0x40],rbp
   1400041c5:	mov    QWORD PTR [rbx+0x48],rbp
   1400041c9:	mov    QWORD PTR [rbx+0x50],rbp
   1400041cd:	mov    QWORD PTR [rbx+0x58],rbp
   1400041d1:	mov    QWORD PTR [rbx+0x60],rbp
   1400041d5:	mov    QWORD PTR [rbx+0x68],rbp
   1400041d9:	mov    rbp,QWORD PTR [rsp+0xa0]
   1400041e1:	lea    r11,[rsp+0x90]
   1400041e9:	mov    rax,rbx
   1400041ec:	mov    rbx,QWORD PTR [r11+0x18]
   1400041f0:	mov    rsi,QWORD PTR [r11+0x20]
   1400041f4:	mov    rsp,r11
   1400041f7:	pop    rdi
   1400041f8:	ret    
   1400041f9:	int3   
   1400041fa:	int3   
   1400041fb:	int3   
   1400041fc:	int3   
   1400041fd:	int3   
   1400041fe:	int3   
   1400041ff:	int3   
   140004200:	mov    r11,rsp
   140004203:	push   rbp
   140004204:	push   r12
   140004206:	push   r13
   140004208:	push   r14
   14000420a:	sub    rsp,0x218
   140004211:	mov    rax,QWORD PTR [rip+0x1c548]        # 0x140020760
   140004218:	mov    r14,r9
   14000421b:	mov    r13,r8
   14000421e:	mov    rbp,rdx
   140004221:	mov    r12,rcx
   140004224:	mov    QWORD PTR [rcx],rax
   140004227:	test   rdx,rdx
   14000422a:	je     0x140004db3
   140004230:	mov    QWORD PTR [r11+0x18],rbx
   140004234:	mov    QWORD PTR [r11-0x30],rdi
   140004238:	mov    QWORD PTR [r11-0x38],r15
   14000423c:	lea    r15,[rip+0x1c841]        # 0x140020a84
   140004243:	mov    QWORD PTR [r11-0x28],rsi
   140004247:	nop    WORD PTR [rax+rax*1+0x0]
   140004250:	mov    rbx,QWORD PTR [rbp+0x10]
   140004254:	mov    rcx,QWORD PTR [rip+0x1c4fd]        # 0x140020758
   14000425b:	mov    QWORD PTR [rsp+0x20],rcx
   140004260:	test   rbx,rbx
   140004263:	je     0x140004d66
   140004269:	cmp    DWORD PTR [rbx+0x8],0x50
   14000426d:	jne    0x140004d66
   140004273:	cmp    DWORD PTR [rbx+0x1c],0x0
   140004277:	je     0x14000488c
   14000427d:	lea    rcx,[rbx+0x10]
   140004281:	lea    rdx,[rsp+0x28]
   140004286:	call   QWORD PTR [rip+0x1c2e4]        # 0x140020570
   14000428c:	lea    rdx,[rsp+0x28]
   140004291:	lea    rcx,[rsp+0xb8]
   140004299:	call   QWORD PTR [rip+0x1c2d9]        # 0x140020578
   14000429f:	lea    rdx,[rip+0x1c7d6]        # 0x140020a7c
   1400042a6:	lea    rcx,[rsp+0x68]
   1400042ab:	mov    r8d,0x4
   1400042b1:	call   QWORD PTR [rip+0x1c2c9]        # 0x140020580
   1400042b7:	mov    rcx,QWORD PTR [rsp+0x20]
   1400042bc:	mov    edx,DWORD PTR [rcx]
   1400042be:	mov    rbx,rax
   1400042c1:	cmp    edx,0x1
   1400042c4:	je     0x140004333
   1400042c6:	test   edx,edx
   1400042c8:	je     0x140004333
   1400042ca:	call   QWORD PTR [rip+0x1c460]        # 0x140020730
   1400042d0:	mov    rcx,QWORD PTR [rsp+0x20]
   1400042d5:	mov    r8,QWORD PTR [rcx+0x10]
   1400042d9:	mov    rdi,rax
   1400042dc:	test   r8,r8
   1400042df:	je     0x140004300
   1400042e1:	mov    rdx,rax
   1400042e4:	mov    rcx,r8
   1400042e7:	call   0x140001210
   1400042ec:	lea    rcx,[rdi+0x8]
   1400042f0:	mov    QWORD PTR [rdi+0x10],rax
   1400042f4:	and    QWORD PTR [rax],0x3
   1400042f8:	or     QWORD PTR [rax],rcx
   1400042fb:	mov    rcx,QWORD PTR [rsp+0x20]
   140004300:	mov    eax,DWORD PTR [rcx]
   140004302:	test   eax,eax
   140004304:	je     0x14000431b
   140004306:	cmp    eax,0xffffffff
   140004309:	je     0x140004320
   14000430b:	lock add DWORD PTR [rcx],0xffffffff
   14000430f:	setne  al
   140004312:	test   al,al
   140004314:	jne    0x140004320
   140004316:	mov    rcx,QWORD PTR [rsp+0x20]
   14000431b:	call   0x1400022f0
   140004320:	mov    rcx,rdi
   140004323:	mov    QWORD PTR [rsp+0x20],rdi
   140004328:	call   QWORD PTR [rip+0x1c342]        # 0x140020670
   14000432e:	mov    rcx,QWORD PTR [rsp+0x20]
   140004333:	mov    rdx,rbx
   140004336:	call   0x140001c60
   14000433b:	test   rax,rax
   14000433e:	jne    0x14000437d
   140004340:	lea    rcx,[rsp+0x148]
   140004348:	call   QWORD PTR [rip+0x1c28a]        # 0x1400205d8
   14000434e:	lea    rdx,[rsp+0x1a0]
   140004356:	lea    rcx,[rsp+0x20]
   14000435b:	mov    r9,rax
   14000435e:	mov    r8,rbx
   140004361:	call   0x140003090
   140004366:	lea    rcx,[rsp+0x148]
   14000436e:	mov    rdi,QWORD PTR [rax]
   140004371:	add    rdi,0x20
   140004375:	call   QWORD PTR [rip+0x1c3cd]        # 0x140020748
   14000437b:	jmp    0x140004381
   14000437d:	lea    rdi,[rax+0x20]
   140004381:	lea    rdx,[rsp+0xb8]
   140004389:	mov    rcx,rdi
   14000438c:	call   QWORD PTR [rip+0x1c296]        # 0x140020628
   140004392:	lea    rcx,[rsp+0x68]
   140004397:	call   QWORD PTR [rip+0x1c3e3]        # 0x140020780
   14000439d:	lea    rcx,[rsp+0xb8]
   1400043a5:	call   QWORD PTR [rip+0x1c39d]        # 0x140020748
   1400043ab:	or     rcx,0xffffffffffffffff
   1400043af:	xor    eax,eax
   1400043b1:	mov    rdi,r15
   1400043b4:	mov    QWORD PTR [rsp+0x128],r15
   1400043bc:	lea    rdx,[rsp+0x160]
   1400043c4:	repnz scas al,BYTE PTR es:[rdi]
   1400043c6:	lea    r8d,[rax+0x1]
   1400043ca:	not    rcx
   1400043cd:	dec    rcx
   1400043d0:	mov    DWORD PTR [rsp+0x120],ecx
   1400043d7:	lea    rcx,[rsp+0x28]
   1400043dc:	movaps xmm0,XMMWORD PTR [rsp+0x120]
   1400043e4:	movdqa XMMWORD PTR [rsp+0x160],xmm0
   1400043ed:	call   QWORD PTR [rip+0x1c195]        # 0x140020588
   1400043f3:	test   al,al
   1400043f5:	je     0x140004546
   1400043fb:	lea    rdx,[rip+0x1c66e]        # 0x140020a70
   140004402:	lea    rcx,[rsp+0x60]
   140004407:	mov    r8d,0xa
   14000440d:	call   QWORD PTR [rip+0x1c16d]        # 0x140020580
   140004413:	lea    rcx,[rsp+0xf8]
   14000441b:	mov    rdx,rax
   14000441e:	call   QWORD PTR [rip+0x1c154]        # 0x140020578
   140004424:	lea    rdx,[rip+0x1c639]        # 0x140020a64
   14000442b:	lea    rcx,[rsp+0x90]
   140004433:	mov    r8d,0x4
   140004439:	call   QWORD PTR [rip+0x1c141]        # 0x140020580
   14000443f:	mov    rcx,QWORD PTR [rsp+0x20]
   140004444:	mov    edx,DWORD PTR [rcx]
   140004446:	mov    rbx,rax
   140004449:	cmp    edx,0x1
   14000444c:	je     0x1400044bb
   14000444e:	test   edx,edx
   140004450:	je     0x1400044bb
   140004452:	call   QWORD PTR [rip+0x1c2d8]        # 0x140020730
   140004458:	mov    rcx,QWORD PTR [rsp+0x20]
   14000445d:	mov    r8,QWORD PTR [rcx+0x10]
   140004461:	mov    rdi,rax
   140004464:	test   r8,r8
   140004467:	je     0x140004488
   140004469:	mov    rdx,rax
   14000446c:	mov    rcx,r8
   14000446f:	call   0x140001210
   140004474:	lea    rcx,[rdi+0x8]
   140004478:	mov    QWORD PTR [rdi+0x10],rax
   14000447c:	and    QWORD PTR [rax],0x3
   140004480:	or     QWORD PTR [rax],rcx
   140004483:	mov    rcx,QWORD PTR [rsp+0x20]
   140004488:	mov    eax,DWORD PTR [rcx]
   14000448a:	test   eax,eax
   14000448c:	je     0x1400044a3
   14000448e:	cmp    eax,0xffffffff
   140004491:	je     0x1400044a8
   140004493:	lock add DWORD PTR [rcx],0xffffffff
   140004497:	setne  al
   14000449a:	test   al,al
   14000449c:	jne    0x1400044a8
   14000449e:	mov    rcx,QWORD PTR [rsp+0x20]
   1400044a3:	call   0x1400022f0
   1400044a8:	mov    rcx,rdi
   1400044ab:	mov    QWORD PTR [rsp+0x20],rdi
   1400044b0:	call   QWORD PTR [rip+0x1c1ba]        # 0x140020670
   1400044b6:	mov    rcx,QWORD PTR [rsp+0x20]
   1400044bb:	mov    rdx,rbx
   1400044be:	call   0x140001c60
   1400044c3:	test   rax,rax
   1400044c6:	jne    0x140004505
   1400044c8:	lea    rcx,[rsp+0x178]
   1400044d0:	call   QWORD PTR [rip+0x1c102]        # 0x1400205d8
   1400044d6:	lea    rdx,[rsp+0x188]
   1400044de:	lea    rcx,[rsp+0x20]
   1400044e3:	mov    r9,rax
   1400044e6:	mov    r8,rbx
   1400044e9:	call   0x140003090
   1400044ee:	lea    rcx,[rsp+0x178]
   1400044f6:	mov    rdi,QWORD PTR [rax]
   1400044f9:	add    rdi,0x20
   1400044fd:	call   QWORD PTR [rip+0x1c245]        # 0x140020748
   140004503:	jmp    0x140004509
   140004505:	lea    rdi,[rax+0x20]
   140004509:	lea    rdx,[rsp+0xf8]
   140004511:	mov    rcx,rdi
   140004514:	call   QWORD PTR [rip+0x1c10e]        # 0x140020628
   14000451a:	lea    rcx,[rsp+0x90]
   140004522:	call   QWORD PTR [rip+0x1c258]        # 0x140020780
   140004528:	lea    rcx,[rsp+0xf8]
   140004530:	call   QWORD PTR [rip+0x1c212]        # 0x140020748
   140004536:	lea    rcx,[rsp+0x60]
   14000453b:	call   QWORD PTR [rip+0x1c23f]        # 0x140020780
   140004541:	jmp    0x14000468c
   140004546:	lea    rdx,[rip+0x1c50b]        # 0x140020a58
   14000454d:	lea    rcx,[rsp+0x70]
   140004552:	mov    r8d,0x9
   140004558:	call   QWORD PTR [rip+0x1c022]        # 0x140020580
   14000455e:	lea    rcx,[rsp+0xc8]
   140004566:	mov    rdx,rax
   140004569:	call   QWORD PTR [rip+0x1c009]        # 0x140020578
   14000456f:	lea    rdx,[rip+0x1c4ee]        # 0x140020a64
   140004576:	lea    rcx,[rsp+0xa0]
   14000457e:	mov    r8d,0x4
   140004584:	call   QWORD PTR [rip+0x1bff6]        # 0x140020580
   14000458a:	mov    rcx,QWORD PTR [rsp+0x20]
   14000458f:	mov    edx,DWORD PTR [rcx]
   140004591:	mov    rbx,rax
   140004594:	cmp    edx,0x1
   140004597:	je     0x140004606
   140004599:	test   edx,edx
   14000459b:	je     0x140004606
   14000459d:	call   QWORD PTR [rip+0x1c18d]        # 0x140020730
   1400045a3:	mov    rcx,QWORD PTR [rsp+0x20]
   1400045a8:	mov    r8,QWORD PTR [rcx+0x10]
   1400045ac:	mov    rdi,rax
   1400045af:	test   r8,r8
   1400045b2:	je     0x1400045d3
   1400045b4:	mov    rdx,rax
   1400045b7:	mov    rcx,r8
   1400045ba:	call   0x140001210
   1400045bf:	lea    rcx,[rdi+0x8]
   1400045c3:	mov    QWORD PTR [rdi+0x10],rax
   1400045c7:	and    QWORD PTR [rax],0x3
   1400045cb:	or     QWORD PTR [rax],rcx
   1400045ce:	mov    rcx,QWORD PTR [rsp+0x20]
   1400045d3:	mov    eax,DWORD PTR [rcx]
   1400045d5:	test   eax,eax
   1400045d7:	je     0x1400045ee
   1400045d9:	cmp    eax,0xffffffff
   1400045dc:	je     0x1400045f3
   1400045de:	lock add DWORD PTR [rcx],0xffffffff
   1400045e2:	setne  al
   1400045e5:	test   al,al
   1400045e7:	jne    0x1400045f3
   1400045e9:	mov    rcx,QWORD PTR [rsp+0x20]
   1400045ee:	call   0x1400022f0
   1400045f3:	mov    rcx,rdi
   1400045f6:	mov    QWORD PTR [rsp+0x20],rdi
   1400045fb:	call   QWORD PTR [rip+0x1c06f]        # 0x140020670
   140004601:	mov    rcx,QWORD PTR [rsp+0x20]
   140004606:	mov    rdx,rbx
   140004609:	call   0x140001c60
   14000460e:	test   rax,rax
   140004611:	jne    0x140004650
   140004613:	lea    rcx,[rsp+0x190]
   14000461b:	call   QWORD PTR [rip+0x1bfb7]        # 0x1400205d8
   140004621:	lea    rdx,[rsp+0x1e8]
   140004629:	lea    rcx,[rsp+0x20]
   14000462e:	mov    r9,rax
   140004631:	mov    r8,rbx
   140004634:	call   0x140003090
   140004639:	lea    rcx,[rsp+0x190]
   140004641:	mov    rdi,QWORD PTR [rax]
   140004644:	add    rdi,0x20
   140004648:	call   QWORD PTR [rip+0x1c0fa]        # 0x140020748
   14000464e:	jmp    0x140004654
   140004650:	lea    rdi,[rax+0x20]
   140004654:	lea    rdx,[rsp+0xc8]
   14000465c:	mov    rcx,rdi
   14000465f:	call   QWORD PTR [rip+0x1bfc3]        # 0x140020628
   140004665:	lea    rcx,[rsp+0xa0]
   14000466d:	call   QWORD PTR [rip+0x1c10d]        # 0x140020780
   140004673:	lea    rcx,[rsp+0xc8]
   14000467b:	call   QWORD PTR [rip+0x1c0c7]        # 0x140020748
   140004681:	lea    rcx,[rsp+0x70]
   140004686:	call   QWORD PTR [rip+0x1c0f4]        # 0x140020780
   14000468c:	mov    BYTE PTR [rsp+0x240],0x2f
   140004694:	mov    rax,QWORD PTR [r14]
   140004697:	xor    r8d,r8d
   14000469a:	mov    edx,DWORD PTR [rax+0x4]
   14000469d:	mov    rax,QWORD PTR [rsp+0x28]
   1400046a2:	mov    ecx,DWORD PTR [rax+0x4]
   1400046a5:	lea    edx,[rcx+rdx*1+0x1]
   1400046a9:	lea    rcx,[rsp+0x40]
   1400046ae:	call   QWORD PTR [rip+0x1bfe4]        # 0x140020698
   1400046b4:	lea    rcx,[rsp+0x40]
   1400046b9:	call   QWORD PTR [rip+0x1c0c9]        # 0x140020788
   1400046bf:	mov    rcx,QWORD PTR [r14]
   1400046c2:	movsxd rdi,DWORD PTR [rcx+0x4]
   1400046c6:	mov    rcx,r14
   1400046c9:	mov    rbx,rax
   1400046cc:	add    rdi,rdi
   1400046cf:	call   QWORD PTR [rip+0x1c0b3]        # 0x140020788
   1400046d5:	mov    r8,rdi
   1400046d8:	mov    rdx,rax
   1400046db:	mov    rcx,rbx
   1400046de:	call   0x14001edd4
   1400046e3:	movzx  edx,BYTE PTR [rsp+0x240]
   1400046eb:	lea    rcx,[rsp+0x248]
   1400046f3:	add    rbx,rdi
   1400046f6:	call   QWORD PTR [rip+0x1c094]        # 0x140020790
   1400046fc:	movzx  edx,WORD PTR [rsp+0x248]
   140004704:	mov    WORD PTR [rbx],dx
   140004707:	mov    rax,QWORD PTR [rsp+0x28]
   14000470c:	lea    rcx,[rsp+0x28]
   140004711:	movsxd rdi,DWORD PTR [rax+0x4]
   140004715:	add    rdi,rdi
   140004718:	call   QWORD PTR [rip+0x1c06a]        # 0x140020788
   14000471e:	lea    rcx,[rbx+0x2]
   140004722:	mov    rdx,rax
   140004725:	mov    r8,rdi
   140004728:	call   0x14001edd4
   14000472d:	lea    rdx,[rsp+0x40]
   140004732:	lea    rcx,[rsp+0x88]
   14000473a:	call   QWORD PTR [rip+0x1be50]        # 0x140020590
   140004740:	lea    rcx,[rsp+0xe8]
   140004748:	mov    rdx,rax
   14000474b:	call   QWORD PTR [rip+0x1be27]        # 0x140020578
   140004751:	lea    rdx,[rip+0x1c2f8]        # 0x140020a50
   140004758:	lea    rcx,[rsp+0xb0]
   140004760:	mov    r8d,0x4
   140004766:	call   QWORD PTR [rip+0x1be14]        # 0x140020580
   14000476c:	mov    rcx,QWORD PTR [rsp+0x20]
   140004771:	mov    edx,DWORD PTR [rcx]
   140004773:	mov    rbx,rax
   140004776:	cmp    edx,0x1
   140004779:	je     0x1400047e8
   14000477b:	test   edx,edx
   14000477d:	je     0x1400047e8
   14000477f:	call   QWORD PTR [rip+0x1bfab]        # 0x140020730
   140004785:	mov    rcx,QWORD PTR [rsp+0x20]
   14000478a:	mov    r8,QWORD PTR [rcx+0x10]
   14000478e:	mov    rdi,rax
   140004791:	test   r8,r8
   140004794:	je     0x1400047b5
   140004796:	mov    rdx,rax
   140004799:	mov    rcx,r8
   14000479c:	call   0x140001210
   1400047a1:	lea    rcx,[rdi+0x8]
   1400047a5:	mov    QWORD PTR [rdi+0x10],rax
   1400047a9:	and    QWORD PTR [rax],0x3
   1400047ad:	or     QWORD PTR [rax],rcx
   1400047b0:	mov    rcx,QWORD PTR [rsp+0x20]
   1400047b5:	mov    eax,DWORD PTR [rcx]
   1400047b7:	test   eax,eax
   1400047b9:	je     0x1400047d0
   1400047bb:	cmp    eax,0xffffffff
   1400047be:	je     0x1400047d5
   1400047c0:	lock add DWORD PTR [rcx],0xffffffff
   1400047c4:	setne  al
   1400047c7:	test   al,al
   1400047c9:	jne    0x1400047d5
   1400047cb:	mov    rcx,QWORD PTR [rsp+0x20]
   1400047d0:	call   0x1400022f0
   1400047d5:	mov    rcx,rdi
   1400047d8:	mov    QWORD PTR [rsp+0x20],rdi
   1400047dd:	call   QWORD PTR [rip+0x1be8d]        # 0x140020670
   1400047e3:	mov    rcx,QWORD PTR [rsp+0x20]
   1400047e8:	mov    rdx,rbx
   1400047eb:	call   0x140001c60
   1400047f0:	test   rax,rax
   1400047f3:	jne    0x140004832
   1400047f5:	lea    rcx,[rsp+0x1a8]
   1400047fd:	call   QWORD PTR [rip+0x1bdd5]        # 0x1400205d8
   140004803:	lea    rdx,[rsp+0x140]
   14000480b:	lea    rcx,[rsp+0x20]
   140004810:	mov    r9,rax
   140004813:	mov    r8,rbx
   140004816:	call   0x140003090
   14000481b:	lea    rcx,[rsp+0x1a8]
   140004823:	mov    rdi,QWORD PTR [rax]
   140004826:	add    rdi,0x20
   14000482a:	call   QWORD PTR [rip+0x1bf18]        # 0x140020748
   140004830:	jmp    0x140004836
   140004832:	lea    rdi,[rax+0x20]
   140004836:	lea    rdx,[rsp+0xe8]
   14000483e:	mov    rcx,rdi
   140004841:	call   QWORD PTR [rip+0x1bde1]        # 0x140020628
   140004847:	lea    rcx,[rsp+0xb0]
   14000484f:	call   QWORD PTR [rip+0x1bf2b]        # 0x140020780
   140004855:	lea    rcx,[rsp+0xe8]
   14000485d:	call   QWORD PTR [rip+0x1bee5]        # 0x140020748
   140004863:	lea    rcx,[rsp+0x88]
   14000486b:	call   QWORD PTR [rip+0x1bf0f]        # 0x140020780
   140004871:	lea    rcx,[rsp+0x40]
   140004876:	call   QWORD PTR [rip+0x1bf04]        # 0x140020780
   14000487c:	lea    rcx,[rsp+0x28]
   140004881:	call   QWORD PTR [rip+0x1bef9]        # 0x140020780
   140004887:	jmp    0x140004ca6
   14000488c:	lea    rcx,[rsp+0x30]
   140004891:	call   QWORD PTR [rip+0x1bd01]        # 0x140020598
   140004897:	mov    rdi,QWORD PTR [rbx+0x20]
   14000489b:	test   rdi,rdi
   14000489e:	je     0x1400048d3
   1400048a0:	lea    rdx,[rdi+0x18]
   1400048a4:	lea    rcx,[rsp+0x30]
   1400048a9:	call   QWORD PTR [rip+0x1bcf1]        # 0x1400205a0
   1400048af:	lea    rcx,[rsp+0x38]
   1400048b4:	mov    dl,0x2e
   1400048b6:	call   QWORD PTR [rip+0x1bed4]        # 0x140020790
   1400048bc:	lea    rcx,[rsp+0x30]
   1400048c1:	movzx  edx,WORD PTR [rax]
   1400048c4:	call   QWORD PTR [rip+0x1bcde]        # 0x1400205a8
   1400048ca:	mov    rdi,QWORD PTR [rdi+0x10]
   1400048ce:	test   rdi,rdi
   1400048d1:	jne    0x1400048a0
   1400048d3:	lea    rcx,[rsp+0x30]
   1400048d8:	mov    edx,0x1
   1400048dd:	call   QWORD PTR [rip+0x1bccd]        # 0x1400205b0
   1400048e3:	mov    rdx,QWORD PTR [rsp+0x30]
   1400048e8:	cmp    DWORD PTR [rdx+0x4],0x0
   1400048ec:	je     0x140004a11
   1400048f2:	lea    rdx,[rsp+0x30]
   1400048f7:	lea    rcx,[rsp+0x108]
   1400048ff:	call   QWORD PTR [rip+0x1bc73]        # 0x140020578
   140004905:	lea    rdx,[rip+0x1c170]        # 0x140020a7c
   14000490c:	lea    rcx,[rsp+0x48]
   140004911:	mov    r8d,0x4
   140004917:	call   QWORD PTR [rip+0x1bc63]        # 0x140020580
   14000491d:	mov    rcx,QWORD PTR [rsp+0x20]
   140004922:	mov    edx,DWORD PTR [rcx]
   140004924:	mov    rsi,rax
   140004927:	cmp    edx,0x1
   14000492a:	je     0x140004999
   14000492c:	test   edx,edx
   14000492e:	je     0x140004999
   140004930:	call   QWORD PTR [rip+0x1bdfa]        # 0x140020730
   140004936:	mov    rcx,QWORD PTR [rsp+0x20]
   14000493b:	mov    r8,QWORD PTR [rcx+0x10]
   14000493f:	mov    rdi,rax
   140004942:	test   r8,r8
   140004945:	je     0x140004966
   140004947:	mov    rdx,rax
   14000494a:	mov    rcx,r8
   14000494d:	call   0x140001210
   140004952:	lea    rcx,[rdi+0x8]
   140004956:	mov    QWORD PTR [rdi+0x10],rax
   14000495a:	and    QWORD PTR [rax],0x3
   14000495e:	or     QWORD PTR [rax],rcx
   140004961:	mov    rcx,QWORD PTR [rsp+0x20]
   140004966:	mov    eax,DWORD PTR [rcx]
   140004968:	test   eax,eax
   14000496a:	je     0x140004981
   14000496c:	cmp    eax,0xffffffff
   14000496f:	je     0x140004986
   140004971:	lock add DWORD PTR [rcx],0xffffffff
   140004975:	setne  al
   140004978:	test   al,al
   14000497a:	jne    0x140004986
   14000497c:	mov    rcx,QWORD PTR [rsp+0x20]
   140004981:	call   0x1400022f0
   140004986:	mov    rcx,rdi
   140004989:	mov    QWORD PTR [rsp+0x20],rdi
   14000498e:	call   QWORD PTR [rip+0x1bcdc]        # 0x140020670
   140004994:	mov    rcx,QWORD PTR [rsp+0x20]
   140004999:	mov    rdx,rsi
   14000499c:	call   0x140001c60
   1400049a1:	test   rax,rax
   1400049a4:	jne    0x1400049e3
   1400049a6:	lea    rcx,[rsp+0x1c0]
   1400049ae:	call   QWORD PTR [rip+0x1bc24]        # 0x1400205d8
   1400049b4:	lea    rdx,[rsp+0x1d0]
   1400049bc:	lea    rcx,[rsp+0x20]
   1400049c1:	mov    r9,rax
   1400049c4:	mov    r8,rsi
   1400049c7:	call   0x140003090
   1400049cc:	lea    rcx,[rsp+0x1c0]
   1400049d4:	mov    rdi,QWORD PTR [rax]
   1400049d7:	add    rdi,0x20
   1400049db:	call   QWORD PTR [rip+0x1bd67]        # 0x140020748
   1400049e1:	jmp    0x1400049e7
   1400049e3:	lea    rdi,[rax+0x20]
   1400049e7:	lea    rdx,[rsp+0x108]
   1400049ef:	mov    rcx,rdi
   1400049f2:	call   QWORD PTR [rip+0x1bc30]        # 0x140020628
   1400049f8:	lea    rcx,[rsp+0x48]
   1400049fd:	call   QWORD PTR [rip+0x1bd7d]        # 0x140020780
   140004a03:	lea    rcx,[rsp+0x108]
   140004a0b:	call   QWORD PTR [rip+0x1bd37]        # 0x140020748
   140004a11:	lea    rdx,[rip+0x1c030]        # 0x140020a48
   140004a18:	lea    rcx,[rsp+0xa8]
   140004a20:	mov    r8d,0x6
   140004a26:	call   QWORD PTR [rip+0x1bb54]        # 0x140020580
   140004a2c:	lea    rcx,[rsp+0x130]
   140004a34:	mov    rdx,rax
   140004a37:	call   QWORD PTR [rip+0x1bb3b]        # 0x140020578
   140004a3d:	lea    rdx,[rip+0x1c020]        # 0x140020a64
   140004a44:	lea    rcx,[rsp+0x98]
   140004a4c:	mov    r8d,0x4
   140004a52:	call   QWORD PTR [rip+0x1bb28]        # 0x140020580
   140004a58:	mov    rcx,QWORD PTR [rsp+0x20]
   140004a5d:	mov    edx,DWORD PTR [rcx]
   140004a5f:	mov    rsi,rax
   140004a62:	cmp    edx,0x1
   140004a65:	je     0x140004ad4
   140004a67:	test   edx,edx
   140004a69:	je     0x140004ad4
   140004a6b:	call   QWORD PTR [rip+0x1bcbf]        # 0x140020730
   140004a71:	mov    rcx,QWORD PTR [rsp+0x20]
   140004a76:	mov    r8,QWORD PTR [rcx+0x10]
   140004a7a:	mov    rdi,rax
   140004a7d:	test   r8,r8
   140004a80:	je     0x140004aa1
   140004a82:	mov    rdx,rax
   140004a85:	mov    rcx,r8
   140004a88:	call   0x140001210
   140004a8d:	lea    rcx,[rdi+0x8]
   140004a91:	mov    QWORD PTR [rdi+0x10],rax
   140004a95:	and    QWORD PTR [rax],0x3
   140004a99:	or     QWORD PTR [rax],rcx
   140004a9c:	mov    rcx,QWORD PTR [rsp+0x20]
   140004aa1:	mov    eax,DWORD PTR [rcx]
   140004aa3:	test   eax,eax
   140004aa5:	je     0x140004abc
   140004aa7:	cmp    eax,0xffffffff
   140004aaa:	je     0x140004ac1
   140004aac:	lock add DWORD PTR [rcx],0xffffffff
   140004ab0:	setne  al
   140004ab3:	test   al,al
   140004ab5:	jne    0x140004ac1
   140004ab7:	mov    rcx,QWORD PTR [rsp+0x20]
   140004abc:	call   0x1400022f0
   140004ac1:	mov    rcx,rdi
   140004ac4:	mov    QWORD PTR [rsp+0x20],rdi
   140004ac9:	call   QWORD PTR [rip+0x1bba1]        # 0x140020670
   140004acf:	mov    rcx,QWORD PTR [rsp+0x20]
   140004ad4:	mov    rdx,rsi
   140004ad7:	call   0x140001c60
   140004adc:	test   rax,rax
   140004adf:	jne    0x140004b1e
   140004ae1:	lea    rcx,[rsp+0x1d8]
   140004ae9:	call   QWORD PTR [rip+0x1bae9]        # 0x1400205d8
   140004aef:	lea    rdx,[rsp+0x170]
   140004af7:	lea    rcx,[rsp+0x20]
   140004afc:	mov    r9,rax
   140004aff:	mov    r8,rsi
   140004b02:	call   0x140003090
   140004b07:	lea    rcx,[rsp+0x1d8]
   140004b0f:	mov    rdi,QWORD PTR [rax]
   140004b12:	add    rdi,0x20
   140004b16:	call   QWORD PTR [rip+0x1bc2c]        # 0x140020748
   140004b1c:	jmp    0x140004b22
   140004b1e:	lea    rdi,[rax+0x20]
   140004b22:	lea    rdx,[rsp+0x130]
   140004b2a:	mov    rcx,rdi
   140004b2d:	call   QWORD PTR [rip+0x1baf5]        # 0x140020628
   140004b33:	lea    rcx,[rsp+0x98]
   140004b3b:	call   QWORD PTR [rip+0x1bc3f]        # 0x140020780
   140004b41:	lea    rcx,[rsp+0x130]
   140004b49:	call   QWORD PTR [rip+0x1bbf9]        # 0x140020748
   140004b4f:	lea    rcx,[rsp+0xa8]
   140004b57:	call   QWORD PTR [rip+0x1bc23]        # 0x140020780
   140004b5d:	mov    r9d,DWORD PTR [rbx+0x5c]
   140004b61:	mov    r8d,DWORD PTR [rbx+0x58]
   140004b65:	lea    rdx,[rsp+0x58]
   140004b6a:	mov    rcx,r13
   140004b6d:	call   QWORD PTR [rip+0x1ba45]        # 0x1400205b8
   140004b73:	lea    rcx,[rsp+0xd8]
   140004b7b:	mov    rdx,rax
   140004b7e:	call   QWORD PTR [rip+0x1b9f4]        # 0x140020578
   140004b84:	lea    rdx,[rip+0x1beb5]        # 0x140020a40
   140004b8b:	lea    rcx,[rsp+0x50]
   140004b90:	mov    r8d,0x7
   140004b96:	call   QWORD PTR [rip+0x1b9e4]        # 0x140020580
   140004b9c:	mov    rcx,QWORD PTR [rsp+0x20]
   140004ba1:	mov    edx,DWORD PTR [rcx]
   140004ba3:	mov    rbx,rax
   140004ba6:	cmp    edx,0x1
   140004ba9:	je     0x140004c18
   140004bab:	test   edx,edx
   140004bad:	je     0x140004c18
   140004baf:	call   QWORD PTR [rip+0x1bb7b]        # 0x140020730
   140004bb5:	mov    rcx,QWORD PTR [rsp+0x20]
   140004bba:	mov    r8,QWORD PTR [rcx+0x10]
   140004bbe:	mov    rdi,rax
   140004bc1:	test   r8,r8
   140004bc4:	je     0x140004be5
   140004bc6:	mov    rdx,rax
   140004bc9:	mov    rcx,r8
   140004bcc:	call   0x140001210
   140004bd1:	lea    rcx,[rdi+0x8]
   140004bd5:	mov    QWORD PTR [rdi+0x10],rax
   140004bd9:	and    QWORD PTR [rax],0x3
   140004bdd:	or     QWORD PTR [rax],rcx
   140004be0:	mov    rcx,QWORD PTR [rsp+0x20]
   140004be5:	mov    eax,DWORD PTR [rcx]
   140004be7:	test   eax,eax
   140004be9:	je     0x140004c00
   140004beb:	cmp    eax,0xffffffff
   140004bee:	je     0x140004c05
   140004bf0:	lock add DWORD PTR [rcx],0xffffffff
   140004bf4:	setne  al
   140004bf7:	test   al,al
   140004bf9:	jne    0x140004c05
   140004bfb:	mov    rcx,QWORD PTR [rsp+0x20]
   140004c00:	call   0x1400022f0
   140004c05:	mov    rcx,rdi
   140004c08:	mov    QWORD PTR [rsp+0x20],rdi
   140004c0d:	call   QWORD PTR [rip+0x1ba5d]        # 0x140020670
   140004c13:	mov    rcx,QWORD PTR [rsp+0x20]
   140004c18:	mov    rdx,rbx
   140004c1b:	call   0x140001c60
   140004c20:	test   rax,rax
   140004c23:	jne    0x140004c62
   140004c25:	lea    rcx,[rsp+0x1f0]
   140004c2d:	call   QWORD PTR [rip+0x1b9a5]        # 0x1400205d8
   140004c33:	lea    rdx,[rsp+0x1b8]
   140004c3b:	lea    rcx,[rsp+0x20]
   140004c40:	mov    r9,rax
   140004c43:	mov    r8,rbx
   140004c46:	call   0x140003090
   140004c4b:	lea    rcx,[rsp+0x1f0]
   140004c53:	mov    rdi,QWORD PTR [rax]
   140004c56:	add    rdi,0x20
   140004c5a:	call   QWORD PTR [rip+0x1bae8]        # 0x140020748
   140004c60:	jmp    0x140004c66
   140004c62:	lea    rdi,[rax+0x20]
   140004c66:	lea    rdx,[rsp+0xd8]
   140004c6e:	mov    rcx,rdi
   140004c71:	call   QWORD PTR [rip+0x1b9b1]        # 0x140020628
   140004c77:	lea    rcx,[rsp+0x50]
   140004c7c:	call   QWORD PTR [rip+0x1bafe]        # 0x140020780
   140004c82:	lea    rcx,[rsp+0xd8]
   140004c8a:	call   QWORD PTR [rip+0x1bab8]        # 0x140020748
   140004c90:	lea    rcx,[rsp+0x58]
   140004c95:	call   QWORD PTR [rip+0x1bae5]        # 0x140020780
   140004c9b:	lea    rcx,[rsp+0x30]
   140004ca0:	call   QWORD PTR [rip+0x1bada]        # 0x140020780
   140004ca6:	lea    rdx,[rsp+0x20]
   140004cab:	lea    rcx,[rsp+0x78]
   140004cb0:	call   QWORD PTR [rip+0x1b90a]        # 0x1400205c0
   140004cb6:	mov    rdx,QWORD PTR [r12]
   140004cba:	mov    eax,DWORD PTR [rdx]
   140004cbc:	cmp    eax,0x1
   140004cbf:	je     0x140004d04
   140004cc1:	test   eax,eax
   140004cc3:	je     0x140004d04
   140004cc5:	mov    edx,0x7fffffff
   140004cca:	mov    r8d,0x1
   140004cd0:	mov    rcx,r12
   140004cd3:	call   0x1400029a0
   140004cd8:	mov    ecx,0x10
   140004cdd:	mov    rdi,rax
   140004ce0:	call   0x14001ee64
   140004ce5:	test   rax,rax
   140004ce8:	je     0x140004cfd
   140004cea:	lea    rdx,[rsp+0x78]
   140004cef:	mov    rcx,rax
   140004cf2:	call   QWORD PTR [rip+0x1ba40]        # 0x140020738
   140004cf8:	mov    QWORD PTR [rdi],rax
   140004cfb:	jmp    0x140004d34
   140004cfd:	xor    eax,eax
   140004cff:	mov    QWORD PTR [rdi],rax
   140004d02:	jmp    0x140004d34
   140004d04:	mov    rcx,r12
   140004d07:	call   QWORD PTR [rip+0x1b92b]        # 0x140020638
   140004d0d:	mov    ecx,0x10
   140004d12:	mov    rdi,rax
   140004d15:	call   0x14001ee64
   140004d1a:	test   rax,rax
   140004d1d:	je     0x140004d2f
   140004d1f:	lea    rdx,[rsp+0x78]
   140004d24:	mov    rcx,rax
   140004d27:	call   QWORD PTR [rip+0x1ba0b]        # 0x140020738
   140004d2d:	jmp    0x140004d31
   140004d2f:	xor    eax,eax
   140004d31:	mov    QWORD PTR [rdi],rax
   140004d34:	lea    rcx,[rsp+0x78]
   140004d39:	call   QWORD PTR [rip+0x1ba09]        # 0x140020748
   140004d3f:	mov    rcx,QWORD PTR [rsp+0x20]
   140004d44:	mov    eax,DWORD PTR [rcx]
   140004d46:	test   eax,eax
   140004d48:	je     0x140004d5f
   140004d4a:	cmp    eax,0xffffffff
   140004d4d:	je     0x140004d86
   140004d4f:	lock add DWORD PTR [rcx],0xffffffff
   140004d53:	setne  al
   140004d56:	test   al,al
   140004d58:	jne    0x140004d86
   140004d5a:	mov    rcx,QWORD PTR [rsp+0x20]
   140004d5f:	call   0x1400022f0
   140004d64:	jmp    0x140004d86
   140004d66:	mov    eax,DWORD PTR [rcx]
   140004d68:	test   eax,eax
   140004d6a:	je     0x140004d81
   140004d6c:	cmp    eax,0xffffffff
   140004d6f:	je     0x140004d86
   140004d71:	lock add DWORD PTR [rcx],0xffffffff
   140004d75:	setne  al
   140004d78:	test   al,al
   140004d7a:	jne    0x140004d86
   140004d7c:	mov    rcx,QWORD PTR [rsp+0x20]
   140004d81:	call   0x1400022f0
   140004d86:	mov    rbp,QWORD PTR [rbp+0x18]
   140004d8a:	test   rbp,rbp
   140004d8d:	jne    0x140004250
   140004d93:	mov    r15,QWORD PTR [rsp+0x200]
   140004d9b:	mov    rdi,QWORD PTR [rsp+0x208]
   140004da3:	mov    rsi,QWORD PTR [rsp+0x210]
   140004dab:	mov    rbx,QWORD PTR [rsp+0x250]
   140004db3:	mov    rax,r12
   140004db6:	add    rsp,0x218
   140004dbd:	pop    r14
   140004dbf:	pop    r13
   140004dc1:	pop    r12
   140004dc3:	pop    rbp
   140004dc4:	ret    
   140004dc5:	int3   
   140004dc6:	int3   
   140004dc7:	int3   
   140004dc8:	int3   
   140004dc9:	int3   
   140004dca:	int3   
   140004dcb:	int3   
   140004dcc:	int3   
   140004dcd:	int3   
   140004dce:	int3   
   140004dcf:	int3   
   140004dd0:	mov    QWORD PTR [rsp+0x8],rbx
   140004dd5:	push   rbp
   140004dd6:	push   rsi
   140004dd7:	push   rdi
   140004dd8:	push   r12
   140004dda:	push   r13
   140004ddc:	sub    rsp,0x90
   140004de3:	mov    r12,rcx
   140004de6:	lea    rcx,[rsp+0x30]
   140004deb:	mov    rsi,r8
   140004dee:	call   QWORD PTR [rip+0x1b9a4]        # 0x140020798
   140004df4:	lea    rcx,[rsp+0x70]
   140004df9:	mov    dl,0x2f
   140004dfb:	call   QWORD PTR [rip+0x1b98f]        # 0x140020790
   140004e01:	lea    rcx,[rsp+0x72]
   140004e06:	mov    dl,0x2e
   140004e08:	mov    rbx,rax
   140004e0b:	call   QWORD PTR [rip+0x1b97f]        # 0x140020790
   140004e11:	movzx  r8d,WORD PTR [rbx]
   140004e15:	movzx  edx,WORD PTR [rax]
   140004e18:	lea    rcx,[rsp+0x30]
   140004e1d:	mov    r9d,0x1
   140004e23:	call   QWORD PTR [rip+0x1b717]        # 0x140020540
   140004e29:	mov    rax,QWORD PTR [rsp+0x30]
   140004e2e:	mov    BYTE PTR [rsp+0xd0],0x2e
   140004e36:	mov    edx,DWORD PTR [rax+0x4]
   140004e39:	mov    rax,QWORD PTR [rsi]
   140004e3c:	xor    r8d,r8d
   140004e3f:	mov    ecx,DWORD PTR [rax+0x4]
   140004e42:	lea    edx,[rcx+rdx*1+0x1]
   140004e46:	lea    rcx,[rsp+0x60]
   140004e4b:	call   QWORD PTR [rip+0x1b847]        # 0x140020698
   140004e51:	lea    rcx,[rsp+0x60]
   140004e56:	call   QWORD PTR [rip+0x1b92c]        # 0x140020788
   140004e5c:	mov    rcx,QWORD PTR [rsp+0x30]
   140004e61:	movsxd rbx,DWORD PTR [rcx+0x4]
   140004e65:	lea    rcx,[rsp+0x30]
   140004e6a:	mov    rdi,rax
   140004e6d:	add    rbx,rbx
   140004e70:	call   QWORD PTR [rip+0x1b912]        # 0x140020788
   140004e76:	mov    r8,rbx
   140004e79:	mov    rdx,rax
   140004e7c:	mov    rcx,rdi
   140004e7f:	call   0x14001edd4
   140004e84:	movzx  edx,BYTE PTR [rsp+0xd0]
   140004e8c:	lea    rcx,[rsp+0x2a]
   140004e91:	add    rdi,rbx
   140004e94:	call   QWORD PTR [rip+0x1b8f6]        # 0x140020790
   140004e9a:	movzx  r11d,WORD PTR [rsp+0x2a]
   140004ea0:	mov    WORD PTR [rdi],r11w
   140004ea4:	mov    rax,QWORD PTR [rsi]
   140004ea7:	mov    rcx,rsi
   140004eaa:	movsxd rbx,DWORD PTR [rax+0x4]
   140004eae:	add    rbx,rbx
   140004eb1:	call   QWORD PTR [rip+0x1b8d1]        # 0x140020788
   140004eb7:	lea    rcx,[rdi+0x2]
   140004ebb:	mov    rdx,rax
   140004ebe:	mov    r8,rbx
   140004ec1:	call   0x14001edd4
   140004ec6:	lea    rdx,[rsp+0x60]
   140004ecb:	lea    rcx,[rsp+0x20]
   140004ed0:	call   QWORD PTR [rip+0x1b8c2]        # 0x140020798
   140004ed6:	lea    rcx,[rsp+0x60]
   140004edb:	call   QWORD PTR [rip+0x1b89f]        # 0x140020780
   140004ee1:	xor    r13d,r13d
   140004ee4:	or     ebp,0xffffffff
   140004ee7:	nop    WORD PTR [rax+rax*1+0x0]
   140004ef0:	mov    rcx,QWORD PTR [rip+0x2d6d9]        # 0x1400325d0
   140004ef7:	mov    QWORD PTR [rsp+0x40],rcx
   140004efc:	mov    eax,DWORD PTR [rcx]
   140004efe:	test   eax,eax
   140004f00:	je     0x140004f0d
   140004f02:	cmp    eax,0xffffffff
   140004f05:	je     0x140004f6a
   140004f07:	lock add DWORD PTR [rcx],0x1
   140004f0b:	jmp    0x140004f65
   140004f0d:	mov    edx,DWORD PTR [rcx+0x4]
   140004f10:	lea    rcx,[rsp+0x40]
   140004f15:	call   QWORD PTR [rip+0x1b75d]        # 0x140020678
   140004f1b:	mov    rcx,QWORD PTR [rsp+0x40]
   140004f20:	mov    r11,QWORD PTR [rip+0x2d6a9]        # 0x1400325d0
   140004f27:	movsxd rax,DWORD PTR [r11+0x8]
   140004f2b:	lea    rdi,[r11+rax*8+0x10]
   140004f30:	movsxd rax,DWORD PTR [rcx+0xc]
   140004f34:	lea    rsi,[rcx+rax*8+0x10]
   140004f39:	movsxd rax,DWORD PTR [rcx+0x8]
   140004f3d:	lea    rbx,[rcx+rax*8+0x10]
   140004f42:	cmp    rbx,rsi
   140004f45:	je     0x140004f6a
   140004f47:	test   rbx,rbx
   140004f4a:	je     0x140004f58
   140004f4c:	mov    rdx,rdi
   140004f4f:	mov    rcx,rbx
   140004f52:	call   QWORD PTR [rip+0x1b840]        # 0x140020798
   140004f58:	add    rbx,0x8
   140004f5c:	add    rdi,0x8
   140004f60:	cmp    rbx,rsi
   140004f63:	jne    0x140004f47
   140004f65:	mov    rcx,QWORD PTR [rsp+0x40]
   140004f6a:	mov    DWORD PTR [rsp+0x48],r13d
   140004f6f:	movsxd rax,DWORD PTR [rcx+0x8]
   140004f73:	lea    rsi,[rcx+rax*8+0x10]
   140004f78:	mov    QWORD PTR [rsp+0x50],rsi
   140004f7d:	movsxd rax,DWORD PTR [rcx+0xc]
   140004f81:	lea    rdx,[rcx+rax*8+0x10]
   140004f86:	mov    QWORD PTR [rsp+0x58],rdx
   140004f8b:	nop    DWORD PTR [rax+rax*1+0x0]
   140004f90:	mov    eax,0x1
   140004f95:	mov    DWORD PTR [rsp+0x48],eax
   140004f99:	cmp    rsi,rdx
   140004f9c:	je     0x1400050c3
   140004fa2:	test   eax,eax
   140004fa4:	je     0x1400050ab
   140004faa:	mov    BYTE PTR [rsp+0xd8],0x2f
   140004fb2:	mov    rax,QWORD PTR [rsi]
   140004fb5:	xor    r8d,r8d
   140004fb8:	mov    edx,DWORD PTR [rax+0x4]
   140004fbb:	mov    rax,QWORD PTR [rsp+0x20]
   140004fc0:	mov    ecx,DWORD PTR [rax+0x4]
   140004fc3:	lea    edx,[rcx+rdx*1+0x1]
   140004fc7:	lea    rcx,[rsp+0x68]
   140004fcc:	call   QWORD PTR [rip+0x1b6c6]        # 0x140020698
   140004fd2:	lea    rcx,[rsp+0x68]
   140004fd7:	call   QWORD PTR [rip+0x1b7ab]        # 0x140020788
   140004fdd:	mov    rcx,QWORD PTR [rsi]
   140004fe0:	movsxd rbx,DWORD PTR [rcx+0x4]
   140004fe4:	mov    rcx,rsi
   140004fe7:	mov    rdi,rax
   140004fea:	add    rbx,rbx
   140004fed:	call   QWORD PTR [rip+0x1b795]        # 0x140020788
   140004ff3:	mov    r8,rbx
   140004ff6:	mov    rdx,rax
   140004ff9:	mov    rcx,rdi
   140004ffc:	call   0x14001edd4
   140005001:	movzx  edx,BYTE PTR [rsp+0xd8]
   140005009:	lea    rcx,[rsp+0x28]
   14000500e:	add    rdi,rbx
   140005011:	call   QWORD PTR [rip+0x1b779]        # 0x140020790
   140005017:	movzx  r11d,WORD PTR [rsp+0x28]
   14000501d:	mov    WORD PTR [rdi],r11w
   140005021:	mov    rax,QWORD PTR [rsp+0x20]
   140005026:	lea    rcx,[rsp+0x20]
   14000502b:	movsxd rbx,DWORD PTR [rax+0x4]
   14000502f:	add    rbx,rbx
   140005032:	call   QWORD PTR [rip+0x1b750]        # 0x140020788
   140005038:	lea    rcx,[rdi+0x2]
   14000503c:	mov    rdx,rax
   14000503f:	mov    r8,rbx
   140005042:	call   0x14001edd4
   140005047:	lea    rdx,[rsp+0x68]
   14000504c:	lea    rcx,[rsp+0x38]
   140005051:	call   QWORD PTR [rip+0x1b539]        # 0x140020590
   140005057:	lea    rcx,[rsp+0x68]
   14000505c:	call   QWORD PTR [rip+0x1b71e]        # 0x140020780
   140005062:	lea    rdx,[rsp+0x38]
   140005067:	lea    rcx,[rsp+0x78]
   14000506c:	call   QWORD PTR [rip+0x1b4d6]        # 0x140020548
   140005072:	mov    rcx,rax
   140005075:	call   QWORD PTR [rip+0x1b4d5]        # 0x140020550
   14000507b:	lea    rcx,[rsp+0x78]
   140005080:	movzx  ebx,al
   140005083:	call   QWORD PTR [rip+0x1b4cf]        # 0x140020558
   140005089:	test   bl,bl
   14000508b:	jne    0x140005182
   140005091:	lea    rcx,[rsp+0x38]
   140005096:	call   QWORD PTR [rip+0x1b6e4]        # 0x140020780
   14000509c:	mov    eax,DWORD PTR [rsp+0x48]
   1400050a0:	dec    eax
   1400050a2:	mov    DWORD PTR [rsp+0x48],eax
   1400050a6:	jmp    0x140004fa2
   1400050ab:	mov    rsi,QWORD PTR [rsp+0x50]
   1400050b0:	mov    rdx,QWORD PTR [rsp+0x58]
   1400050b5:	add    rsi,0x8
   1400050b9:	mov    QWORD PTR [rsp+0x50],rsi
   1400050be:	jmp    0x140004f90
   1400050c3:	mov    rdi,QWORD PTR [rsp+0x40]
   1400050c8:	mov    eax,DWORD PTR [rdi]
   1400050ca:	test   eax,eax
   1400050cc:	je     0x1400050e3
   1400050ce:	cmp    eax,0xffffffff
   1400050d1:	je     0x14000511b
   1400050d3:	lock add DWORD PTR [rdi],0xffffffff
   1400050d7:	setne  al
   1400050da:	test   al,al
   1400050dc:	jne    0x14000511b
   1400050de:	mov    rdi,QWORD PTR [rsp+0x40]
   1400050e3:	movsxd rax,DWORD PTR [rdi+0xc]
   1400050e7:	lea    rbx,[rdi+rax*8+0x10]
   1400050ec:	movsxd rax,DWORD PTR [rdi+0x8]
   1400050f0:	lea    rsi,[rdi+rax*8+0x10]
   1400050f5:	cmp    rsi,rbx
   1400050f8:	je     0x140005112
   1400050fa:	nop    WORD PTR [rax+rax*1+0x0]
   140005100:	sub    rbx,0x8
   140005104:	mov    rcx,rbx
   140005107:	call   QWORD PTR [rip+0x1b673]        # 0x140020780
   14000510d:	cmp    rbx,rsi
   140005110:	jne    0x140005100
   140005112:	mov    rcx,rdi
   140005115:	call   QWORD PTR [rip+0x1b5b5]        # 0x1400206d0
   14000511b:	lea    rcx,[rsp+0x74]
   140005120:	mov    dl,0x2e
   140005122:	call   QWORD PTR [rip+0x1b668]        # 0x140020790
   140005128:	lea    rcx,[rsp+0x20]
   14000512d:	mov    r9d,0x1
   140005133:	movzx  edx,WORD PTR [rax]
   140005136:	mov    r8d,ebp
   140005139:	call   QWORD PTR [rip+0x1b421]        # 0x140020560
   14000513f:	cmp    eax,0xffffffff
   140005142:	je     0x1400051ef
   140005148:	lea    rdx,[rsp+0x80]
   140005150:	lea    rcx,[rsp+0x20]
   140005155:	mov    r9d,eax
   140005158:	xor    r8d,r8d
   14000515b:	call   QWORD PTR [rip+0x1b457]        # 0x1400205b8
   140005161:	lea    rcx,[rsp+0x20]
   140005166:	mov    rdx,rax
   140005169:	call   QWORD PTR [rip+0x1b3f9]        # 0x140020568
   14000516f:	lea    rcx,[rsp+0x80]
   140005177:	call   QWORD PTR [rip+0x1b603]        # 0x140020780
   14000517d:	jmp    0x140004ef0
   140005182:	lea    rdx,[rsp+0x38]
   140005187:	mov    rcx,r12
   14000518a:	call   QWORD PTR [rip+0x1b608]        # 0x140020798
   140005190:	lea    rcx,[rsp+0x38]
   140005195:	call   QWORD PTR [rip+0x1b5e5]        # 0x140020780
   14000519b:	mov    rdi,QWORD PTR [rsp+0x40]
   1400051a0:	mov    eax,DWORD PTR [rdi]
   1400051a2:	test   eax,eax
   1400051a4:	je     0x1400051bb
   1400051a6:	cmp    eax,0xffffffff
   1400051a9:	je     0x1400051f8
   1400051ab:	lock add DWORD PTR [rdi],0xffffffff
   1400051af:	setne  al
   1400051b2:	test   al,al
   1400051b4:	jne    0x1400051f8
   1400051b6:	mov    rdi,QWORD PTR [rsp+0x40]
   1400051bb:	movsxd rax,DWORD PTR [rdi+0xc]
   1400051bf:	lea    rbx,[rdi+rax*8+0x10]
   1400051c4:	movsxd rax,DWORD PTR [rdi+0x8]
   1400051c8:	lea    rsi,[rdi+rax*8+0x10]
   1400051cd:	cmp    rsi,rbx
   1400051d0:	je     0x1400051e4
   1400051d2:	sub    rbx,0x8
   1400051d6:	mov    rcx,rbx
   1400051d9:	call   QWORD PTR [rip+0x1b5a1]        # 0x140020780
   1400051df:	cmp    rbx,rsi
   1400051e2:	jne    0x1400051d2
   1400051e4:	mov    rcx,rdi
   1400051e7:	call   QWORD PTR [rip+0x1b4e3]        # 0x1400206d0
   1400051ed:	jmp    0x1400051f8
   1400051ef:	mov    rcx,r12
   1400051f2:	call   QWORD PTR [rip+0x1b3a0]        # 0x140020598
   1400051f8:	lea    rcx,[rsp+0x20]
   1400051fd:	call   QWORD PTR [rip+0x1b57d]        # 0x140020780
   140005203:	lea    rcx,[rsp+0x30]
   140005208:	call   QWORD PTR [rip+0x1b572]        # 0x140020780
   14000520e:	mov    rbx,QWORD PTR [rsp+0xc0]
   140005216:	mov    rax,r12
   140005219:	add    rsp,0x90
   140005220:	pop    r13
   140005222:	pop    r12
   140005224:	pop    rdi
   140005225:	pop    rsi
   140005226:	pop    rbp
   140005227:	ret    
   140005228:	int3   
   140005229:	int3   
   14000522a:	int3   
   14000522b:	int3   
   14000522c:	int3   
   14000522d:	int3   
   14000522e:	int3   
   14000522f:	int3   
   140005230:	mov    QWORD PTR [rsp+0x18],rbx
   140005235:	mov    QWORD PTR [rsp+0x10],rdx
   14000523a:	mov    QWORD PTR [rsp+0x8],rcx
   14000523f:	push   rbp
   140005240:	push   rsi
   140005241:	push   rdi
   140005242:	push   r12
   140005244:	push   r13
   140005246:	push   r14
   140005248:	push   r15
   14000524a:	sub    rsp,0x2e0
   140005251:	lea    rcx,[rsp+0x80]
   140005259:	xor    r12d,r12d
   14000525c:	mov    r15,r8
   14000525f:	mov    DWORD PTR [rsp+0x338],r12d
   140005267:	call   0x140016da0
   14000526c:	lea    rdx,[rsp+0x80]
   140005274:	lea    rcx,[rsp+0xd0]
   14000527c:	call   0x140017f10
   140005281:	lea    r8d,[r12+0x1]
   140005286:	lea    rcx,[rsp+0xd0]
   14000528e:	mov    r9b,0x1
   140005291:	mov    rdx,r15
   140005294:	call   0x140018000
   140005299:	lea    rdx,[rsp+0x80]
   1400052a1:	lea    rcx,[rsp+0x1c0]
   1400052a9:	call   0x14000f170
   1400052ae:	lea    edx,[r12+0x62]
   1400052b3:	lea    rcx,[rsp+0x1c0]
   1400052bb:	call   0x14000f340
   1400052c0:	mov    rbx,QWORD PTR [rsp+0x2d8]
   1400052c8:	test   al,al
   1400052ca:	je     0x1400053a0
   1400052d0:	mov    QWORD PTR [rsp+0x20],rbx
   1400052d5:	mov    eax,DWORD PTR [rbx]
   1400052d7:	mov    r12d,0x1
   1400052dd:	mov    rdi,rbx
   1400052e0:	test   eax,eax
   1400052e2:	je     0x1400052f6
   1400052e4:	cmp    eax,0xffffffff
   1400052e7:	je     0x140005393
   1400052ed:	lock add DWORD PTR [rbx],r12d
   1400052f1:	jmp    0x140005386
   1400052f6:	mov    edx,DWORD PTR [rbx+0x4]
   1400052f9:	lea    rcx,[rsp+0x20]
   1400052fe:	call   QWORD PTR [rip+0x1b374]        # 0x140020678
   140005304:	mov    rdi,QWORD PTR [rsp+0x20]
   140005309:	mov    rbx,QWORD PTR [rsp+0x2d8]
   140005311:	movsxd rax,DWORD PTR [rdi+0xc]
   140005315:	lea    r13,[rdi+rax*8+0x10]
   14000531a:	movsxd rax,DWORD PTR [rbx+0x8]
   14000531e:	lea    rbp,[rbx+rax*8+0x10]
   140005323:	movsxd rax,DWORD PTR [rdi+0x8]
   140005327:	lea    rsi,[rdi+rax*8+0x10]
   14000532c:	cmp    rsi,r13
   14000532f:	je     0x140005393
   140005331:	mov    ecx,0x20
   140005336:	call   0x14001ee64
   14000533b:	mov    rbx,rax
   14000533e:	test   rax,rax
   140005341:	je     0x140005374
   140005343:	mov    rdx,QWORD PTR [rbp+0x0]
   140005347:	add    rdx,0x18
   14000534b:	mov    ecx,DWORD PTR [rdx-0x18]
   14000534e:	mov    DWORD PTR [rax],ecx
   140005350:	mov    ecx,DWORD PTR [rdx-0x14]
   140005353:	mov    DWORD PTR [rax+0x4],ecx
   140005356:	mov    ecx,DWORD PTR [rdx-0x10]
   140005359:	mov    DWORD PTR [rax+0x8],ecx
   14000535c:	mov    ecx,DWORD PTR [rdx-0xc]
   14000535f:	mov    DWORD PTR [rax+0xc],ecx
   140005362:	mov    eax,DWORD PTR [rdx-0x8]
   140005365:	lea    rcx,[rbx+0x18]
   140005369:	mov    DWORD PTR [rbx+0x10],eax
   14000536c:	call   QWORD PTR [rip+0x1b426]        # 0x140020798
   140005372:	jmp    0x140005376
   140005374:	xor    ebx,ebx
   140005376:	mov    QWORD PTR [rsi],rbx
   140005379:	add    rsi,0x8
   14000537d:	add    rbp,0x8
   140005381:	cmp    rsi,r13
   140005384:	jne    0x140005331
   140005386:	mov    rdi,QWORD PTR [rsp+0x20]
   14000538b:	mov    rbx,QWORD PTR [rsp+0x2d8]
   140005393:	mov    eax,DWORD PTR [rdi+0x8]
   140005396:	cmp    DWORD PTR [rdi+0xc],eax
   140005399:	jne    0x1400053a5
   14000539b:	xor    r13b,r13b
   14000539e:	jmp    0x1400053a8
   1400053a0:	mov    rdi,QWORD PTR [rsp+0x20]
   1400053a5:	mov    r13b,0x1
   1400053a8:	test   r12b,0x1
   1400053ac:	je     0x140005425
   1400053ae:	mov    eax,DWORD PTR [rdi]
   1400053b0:	and    r12d,0xfffffffe
   1400053b4:	test   eax,eax
   1400053b6:	je     0x1400053cd
   1400053b8:	cmp    eax,0xffffffff
   1400053bb:	je     0x140005425
   1400053bd:	lock add DWORD PTR [rdi],0xffffffff
   1400053c1:	setne  al
   1400053c4:	test   al,al
   1400053c6:	jne    0x14000541d
   1400053c8:	mov    rdi,QWORD PTR [rsp+0x20]
   1400053cd:	movsxd rax,DWORD PTR [rdi+0xc]
   1400053d1:	lea    rbx,[rdi+rax*8+0x10]
   1400053d6:	movsxd rax,DWORD PTR [rdi+0x8]
   1400053da:	lea    rbp,[rdi+rax*8+0x10]
   1400053df:	cmp    rbp,rbx
   1400053e2:	je     0x140005414
   1400053e4:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400053f0:	mov    rsi,QWORD PTR [rbx-0x8]
   1400053f4:	sub    rbx,0x8
   1400053f8:	test   rsi,rsi
   1400053fb:	je     0x14000540f
   1400053fd:	lea    rcx,[rsi+0x18]
   140005401:	call   QWORD PTR [rip+0x1b379]        # 0x140020780
   140005407:	mov    rcx,rsi
   14000540a:	call   0x14001ee46
   14000540f:	cmp    rbx,rbp
   140005412:	jne    0x1400053f0
   140005414:	mov    rcx,rdi
   140005417:	call   QWORD PTR [rip+0x1b2b3]        # 0x1400206d0
   14000541d:	mov    rbx,QWORD PTR [rsp+0x2d8]
   140005425:	test   r13b,r13b
   140005428:	je     0x140005a04
   14000542e:	mov    QWORD PTR [rsp+0x338],rbx
   140005436:	mov    eax,DWORD PTR [rbx]
   140005438:	test   eax,eax
   14000543a:	je     0x14000544e
   14000543c:	cmp    eax,0xffffffff
   14000543f:	je     0x1400054ec
   140005445:	lock add DWORD PTR [rbx],0x1
   140005449:	jmp    0x1400054e4
   14000544e:	mov    edx,DWORD PTR [rbx+0x4]
   140005451:	lea    rcx,[rsp+0x338]
   140005459:	call   QWORD PTR [rip+0x1b219]        # 0x140020678
   14000545f:	mov    rbx,QWORD PTR [rsp+0x338]
   140005467:	mov    rcx,QWORD PTR [rsp+0x2d8]
   14000546f:	movsxd rax,DWORD PTR [rbx+0xc]
   140005473:	lea    rbp,[rbx+rax*8+0x10]
   140005478:	movsxd rax,DWORD PTR [rcx+0x8]
   14000547c:	lea    rsi,[rcx+rax*8+0x10]
   140005481:	movsxd rax,DWORD PTR [rbx+0x8]
   140005485:	lea    rdi,[rbx+rax*8+0x10]
   14000548a:	cmp    rdi,rbp
   14000548d:	je     0x1400054ec
   14000548f:	nop
   140005490:	mov    ecx,0x20
   140005495:	call   0x14001ee64
   14000549a:	mov    rbx,rax
   14000549d:	test   rax,rax
   1400054a0:	je     0x1400054d2
   1400054a2:	mov    rdx,QWORD PTR [rsi]
   1400054a5:	add    rdx,0x18
   1400054a9:	mov    ecx,DWORD PTR [rdx-0x18]
   1400054ac:	mov    DWORD PTR [rax],ecx
   1400054ae:	mov    ecx,DWORD PTR [rdx-0x14]
   1400054b1:	mov    DWORD PTR [rax+0x4],ecx
   1400054b4:	mov    ecx,DWORD PTR [rdx-0x10]
   1400054b7:	mov    DWORD PTR [rax+0x8],ecx
   1400054ba:	mov    ecx,DWORD PTR [rdx-0xc]
   1400054bd:	mov    DWORD PTR [rax+0xc],ecx
   1400054c0:	mov    eax,DWORD PTR [rdx-0x8]
   1400054c3:	lea    rcx,[rbx+0x18]
   1400054c7:	mov    DWORD PTR [rbx+0x10],eax
   1400054ca:	call   QWORD PTR [rip+0x1b2c8]        # 0x140020798
   1400054d0:	jmp    0x1400054d4
   1400054d2:	xor    ebx,ebx
   1400054d4:	mov    QWORD PTR [rdi],rbx
   1400054d7:	add    rdi,0x8
   1400054db:	add    rsi,0x8
   1400054df:	cmp    rdi,rbp
   1400054e2:	jne    0x140005490
   1400054e4:	mov    rbx,QWORD PTR [rsp+0x338]
   1400054ec:	mov    QWORD PTR [rsp+0x28],rbx
   1400054f1:	mov    eax,DWORD PTR [rbx]
   1400054f3:	mov    rdx,rbx
   1400054f6:	test   eax,eax
   1400054f8:	je     0x14000550c
   1400054fa:	cmp    eax,0xffffffff
   1400054fd:	je     0x1400055b1
   140005503:	lock add DWORD PTR [rbx],0x1
   140005507:	jmp    0x1400055a4
   14000550c:	mov    edx,DWORD PTR [rbx+0x4]
   14000550f:	lea    rcx,[rsp+0x28]
   140005514:	call   QWORD PTR [rip+0x1b15e]        # 0x140020678
   14000551a:	mov    rdx,QWORD PTR [rsp+0x28]
   14000551f:	mov    rbx,QWORD PTR [rsp+0x338]
   140005527:	movsxd rax,DWORD PTR [rdx+0xc]
   14000552b:	lea    rbp,[rdx+rax*8+0x10]
   140005530:	movsxd rax,DWORD PTR [rbx+0x8]
   140005534:	lea    rsi,[rbx+rax*8+0x10]
   140005539:	movsxd rax,DWORD PTR [rdx+0x8]
   14000553d:	lea    rdi,[rdx+rax*8+0x10]
   140005542:	cmp    rdi,rbp
   140005545:	je     0x1400055b1
   140005547:	nop    WORD PTR [rax+rax*1+0x0]
   140005550:	mov    ecx,0x20
   140005555:	call   0x14001ee64
   14000555a:	mov    rbx,rax
   14000555d:	test   rax,rax
   140005560:	je     0x140005592
   140005562:	mov    rdx,QWORD PTR [rsi]
   140005565:	add    rdx,0x18
   140005569:	mov    ecx,DWORD PTR [rdx-0x18]
   14000556c:	mov    DWORD PTR [rax],ecx
   14000556e:	mov    ecx,DWORD PTR [rdx-0x14]
   140005571:	mov    DWORD PTR [rax+0x4],ecx
   140005574:	mov    ecx,DWORD PTR [rdx-0x10]
   140005577:	mov    DWORD PTR [rax+0x8],ecx
   14000557a:	mov    ecx,DWORD PTR [rdx-0xc]
   14000557d:	mov    DWORD PTR [rax+0xc],ecx
   140005580:	mov    eax,DWORD PTR [rdx-0x8]
   140005583:	lea    rcx,[rbx+0x18]
   140005587:	mov    DWORD PTR [rbx+0x10],eax
   14000558a:	call   QWORD PTR [rip+0x1b208]        # 0x140020798
   140005590:	jmp    0x140005594
   140005592:	xor    ebx,ebx
   140005594:	mov    QWORD PTR [rdi],rbx
   140005597:	add    rdi,0x8
   14000559b:	add    rsi,0x8
   14000559f:	cmp    rdi,rbp
   1400055a2:	jne    0x140005550
   1400055a4:	mov    rdx,QWORD PTR [rsp+0x28]
   1400055a9:	mov    rbx,QWORD PTR [rsp+0x338]
   1400055b1:	mov    DWORD PTR [rsp+0x30],0x0
   1400055b9:	movsxd rax,DWORD PTR [rdx+0x8]
   1400055bd:	lea    rcx,[rdx+rax*8+0x10]
   1400055c2:	mov    QWORD PTR [rsp+0x38],rcx
   1400055c7:	movsxd rax,DWORD PTR [rdx+0xc]
   1400055cb:	lea    rcx,[rdx+rax*8+0x10]
   1400055d0:	mov    QWORD PTR [rsp+0x40],rcx
   1400055d5:	mov    eax,DWORD PTR [rbx]
   1400055d7:	test   eax,eax
   1400055d9:	je     0x1400055f3
   1400055db:	cmp    eax,0xffffffff
   1400055de:	je     0x140005640
   1400055e0:	lock add DWORD PTR [rbx],0xffffffff
   1400055e4:	setne  al
   1400055e7:	test   al,al
   1400055e9:	jne    0x140005640
   1400055eb:	mov    rbx,QWORD PTR [rsp+0x338]
   1400055f3:	movsxd rax,DWORD PTR [rbx+0xc]
   1400055f7:	lea    rdi,[rbx+rax*8+0x10]
   1400055fc:	movsxd rax,DWORD PTR [rbx+0x8]
   140005600:	lea    rbp,[rbx+rax*8+0x10]
   140005605:	cmp    rbp,rdi
   140005608:	je     0x140005634
   14000560a:	nop    WORD PTR [rax+rax*1+0x0]
   140005610:	mov    rsi,QWORD PTR [rdi-0x8]
   140005614:	sub    rdi,0x8
   140005618:	test   rsi,rsi
   14000561b:	je     0x14000562f
   14000561d:	lea    rcx,[rsi+0x18]
   140005621:	call   QWORD PTR [rip+0x1b159]        # 0x140020780
   140005627:	mov    rcx,rsi
   14000562a:	call   0x14001ee46
   14000562f:	cmp    rdi,rbp
   140005632:	jne    0x140005610
   140005634:	mov    rcx,rbx
   140005637:	call   QWORD PTR [rip+0x1b093]        # 0x1400206d0
   14000563d:	nop    DWORD PTR [rax]
   140005640:	mov    eax,DWORD PTR [rsp+0x30]
   140005644:	inc    DWORD PTR [rsp+0x30]
   140005648:	test   eax,eax
   14000564a:	jne    0x14000565d
   14000564c:	mov    rax,QWORD PTR [rsp+0x40]
   140005651:	cmp    QWORD PTR [rsp+0x38],rax
   140005656:	je     0x14000565d
   140005658:	mov    r13b,0x1
   14000565b:	jmp    0x140005660
   14000565d:	xor    r13b,r13b
   140005660:	test   r12b,0x4
   140005664:	je     0x1400056ce
   140005666:	mov    rsi,QWORD PTR [rsp+0x58]
   14000566b:	and    r12d,0xfffffffb
   14000566f:	mov    eax,DWORD PTR [rsi]
   140005671:	test   eax,eax
   140005673:	je     0x14000568a
   140005675:	cmp    eax,0xffffffff
   140005678:	je     0x1400056ce
   14000567a:	lock add DWORD PTR [rsi],0xffffffff
   14000567e:	setne  al
   140005681:	test   al,al
   140005683:	jne    0x1400056ce
   140005685:	mov    rsi,QWORD PTR [rsp+0x58]
   14000568a:	movsxd rax,DWORD PTR [rsi+0xc]
   14000568e:	lea    rbx,[rsi+rax*8+0x10]
   140005693:	movsxd rax,DWORD PTR [rsi+0x8]
   140005697:	lea    rbp,[rsi+rax*8+0x10]
   14000569c:	cmp    rbp,rbx
   14000569f:	je     0x1400056c5
   1400056a1:	mov    rdi,QWORD PTR [rbx-0x8]
   1400056a5:	sub    rbx,0x8
   1400056a9:	test   rdi,rdi
   1400056ac:	je     0x1400056c0
   1400056ae:	lea    rcx,[rdi+0x18]
   1400056b2:	call   QWORD PTR [rip+0x1b0c8]        # 0x140020780
   1400056b8:	mov    rcx,rdi
   1400056bb:	call   0x14001ee46
   1400056c0:	cmp    rbx,rbp
   1400056c3:	jne    0x1400056a1
   1400056c5:	mov    rcx,rsi
   1400056c8:	call   QWORD PTR [rip+0x1b002]        # 0x1400206d0
   1400056ce:	test   r13b,r13b
   1400056d1:	je     0x14000598c
   1400056d7:	mov    rax,QWORD PTR [rsp+0x38]
   1400056dc:	mov    r15,QWORD PTR [rax]
   1400056df:	test   r12b,0x8
   1400056e3:	je     0x140005750
   1400056e5:	mov    rsi,QWORD PTR [rsp+0x50]
   1400056ea:	and    r12d,0xfffffff7
   1400056ee:	mov    eax,DWORD PTR [rsi]
   1400056f0:	test   eax,eax
   1400056f2:	je     0x140005709
   1400056f4:	cmp    eax,0xffffffff
   1400056f7:	je     0x140005750
   1400056f9:	lock add DWORD PTR [rsi],0xffffffff
   1400056fd:	setne  al
   140005700:	test   al,al
   140005702:	jne    0x140005750
   140005704:	mov    rsi,QWORD PTR [rsp+0x50]
   140005709:	movsxd rax,DWORD PTR [rsi+0xc]
   14000570d:	lea    rbx,[rsi+rax*8+0x10]
   140005712:	movsxd rax,DWORD PTR [rsi+0x8]
   140005716:	lea    rbp,[rsi+rax*8+0x10]
   14000571b:	cmp    rbp,rbx
   14000571e:	je     0x140005744
   140005720:	mov    rdi,QWORD PTR [rbx-0x8]
   140005724:	sub    rbx,0x8
   140005728:	test   rdi,rdi
   14000572b:	je     0x14000573f
   14000572d:	lea    rcx,[rdi+0x18]
   140005731:	call   QWORD PTR [rip+0x1b049]        # 0x140020780
   140005737:	mov    rcx,rdi
   14000573a:	call   0x14001ee46
   14000573f:	cmp    rbx,rbp
   140005742:	jne    0x140005720
   140005744:	mov    rcx,rsi
   140005747:	call   QWORD PTR [rip+0x1af83]        # 0x1400206d0
   14000574d:	nop    DWORD PTR [rax]
   140005750:	mov    r13d,DWORD PTR [rsp+0x30]
   140005755:	test   r12b,0x20
   140005759:	je     0x1400057cd
   14000575b:	mov    rsi,QWORD PTR [rsp+0x60]
   140005760:	and    r12d,0xffffffdf
   140005764:	mov    eax,DWORD PTR [rsi]
   140005766:	test   eax,eax
   140005768:	je     0x14000577a
   14000576a:	cmp    eax,0xffffffff
   14000576d:	je     0x1400057cd
   14000576f:	lock add DWORD PTR [rsi],0xffffffff
   140005773:	setne  al
   140005776:	test   al,al
   140005778:	jne    0x1400057cd
   14000577a:	mov    rsi,QWORD PTR [rsp+0x60]
   14000577f:	movsxd rax,DWORD PTR [rsi+0xc]
   140005783:	lea    rbx,[rsi+rax*8+0x10]
   140005788:	movsxd rax,DWORD PTR [rsi+0x8]
   14000578c:	lea    rbp,[rsi+rax*8+0x10]
   140005791:	cmp    rbp,rbx
   140005794:	je     0x1400057c4
   140005796:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400057a0:	mov    rdi,QWORD PTR [rbx-0x8]
   1400057a4:	sub    rbx,0x8
   1400057a8:	test   rdi,rdi
   1400057ab:	je     0x1400057bf
   1400057ad:	lea    rcx,[rdi+0x18]
   1400057b1:	call   QWORD PTR [rip+0x1afc9]        # 0x140020780
   1400057b7:	mov    rcx,rdi
   1400057ba:	call   0x14001ee46
   1400057bf:	cmp    rbx,rbp
   1400057c2:	jne    0x1400057a0
   1400057c4:	mov    rcx,rsi
   1400057c7:	call   QWORD PTR [rip+0x1af03]        # 0x1400206d0
   1400057cd:	test   r13d,r13d
   1400057d0:	je     0x140005909
   1400057d6:	lea    rcx,[r15+0x18]
   1400057da:	lea    rdx,[rsp+0x198]
   1400057e2:	call   QWORD PTR [rip+0x1ae10]        # 0x1400205f8
   1400057e8:	mov    rdx,QWORD PTR [rsp+0x328]
   1400057f0:	lea    rcx,[rsp+0x70]
   1400057f5:	mov    rbx,rax
   1400057f8:	call   QWORD PTR [rip+0x1aeba]        # 0x1400206b8
   1400057fe:	lea    rdx,[rsp+0x170]
   140005806:	mov    rcx,rax
   140005809:	call   QWORD PTR [rip+0x1ade9]        # 0x1400205f8
   14000580f:	mov    rcx,QWORD PTR [rip+0x1a942]        # 0x140020158
   140005816:	mov    rdx,rax
   140005819:	call   QWORD PTR [rip+0x1a931]        # 0x140020150
   14000581f:	mov    dl,0x3a
   140005821:	mov    rcx,rax
   140005824:	call   0x1400019f0
   140005829:	mov    edx,DWORD PTR [r15+0xc]
   14000582d:	mov    rcx,rax
   140005830:	call   QWORD PTR [rip+0x1a92a]        # 0x140020160
   140005836:	mov    dl,0x3a
   140005838:	mov    rcx,rax
   14000583b:	call   0x1400019f0
   140005840:	mov    rdx,rbx
   140005843:	mov    rcx,rax
   140005846:	call   QWORD PTR [rip+0x1a904]        # 0x140020150
   14000584c:	mov    rdx,QWORD PTR [rip+0x1a8f5]        # 0x140020148
   140005853:	mov    rcx,rax
   140005856:	call   QWORD PTR [rip+0x1a8e4]        # 0x140020140
   14000585c:	lea    rcx,[rsp+0x170]
   140005864:	call   QWORD PTR [rip+0x1a8ce]        # 0x140020138
   14000586a:	lea    rcx,[rsp+0x70]
   14000586f:	call   QWORD PTR [rip+0x1af0b]        # 0x140020780
   140005875:	lea    rcx,[rsp+0x198]
   14000587d:	call   QWORD PTR [rip+0x1a8b5]        # 0x140020138
   140005883:	dec    DWORD PTR [rsp+0x30]
   140005887:	test   r12b,0x10
   14000588b:	je     0x140005750
   140005891:	mov    rsi,QWORD PTR [rsp+0x68]
   140005896:	and    r12d,0xffffffef
   14000589a:	mov    eax,DWORD PTR [rsi]
   14000589c:	test   eax,eax
   14000589e:	je     0x1400058b8
   1400058a0:	cmp    eax,0xffffffff
   1400058a3:	je     0x140005750
   1400058a9:	lock add DWORD PTR [rsi],0xffffffff
   1400058ad:	setne  al
   1400058b0:	test   al,al
   1400058b2:	jne    0x140005750
   1400058b8:	mov    rsi,QWORD PTR [rsp+0x68]
   1400058bd:	movsxd rax,DWORD PTR [rsi+0xc]
   1400058c1:	lea    rbx,[rsi+rax*8+0x10]
   1400058c6:	movsxd rax,DWORD PTR [rsi+0x8]
   1400058ca:	lea    rbp,[rsi+rax*8+0x10]
   1400058cf:	cmp    rbp,rbx
   1400058d2:	je     0x140005744
   1400058d8:	nop    DWORD PTR [rax+rax*1+0x0]
   1400058e0:	mov    rdi,QWORD PTR [rbx-0x8]
   1400058e4:	sub    rbx,0x8
   1400058e8:	test   rdi,rdi
   1400058eb:	je     0x1400058ff
   1400058ed:	lea    rcx,[rdi+0x18]
   1400058f1:	call   QWORD PTR [rip+0x1ae89]        # 0x140020780
   1400058f7:	mov    rcx,rdi
   1400058fa:	call   0x14001ee46
   1400058ff:	cmp    rbx,rbp
   140005902:	jne    0x1400058e0
   140005904:	jmp    0x140005744
   140005909:	add    QWORD PTR [rsp+0x38],0x8
   14000590f:	test   r12b,0x2
   140005913:	je     0x140005640
   140005919:	mov    rsi,QWORD PTR [rsp+0x48]
   14000591e:	and    r12d,0xfffffffd
   140005922:	mov    eax,DWORD PTR [rsi]
   140005924:	test   eax,eax
   140005926:	je     0x140005945
   140005928:	cmp    eax,0xffffffff
   14000592b:	je     0x140005640
   140005931:	lock add DWORD PTR [rsi],0xffffffff
   140005935:	setne  al
   140005938:	test   al,al
   14000593a:	jne    0x140005640
   140005940:	mov    rsi,QWORD PTR [rsp+0x48]
   140005945:	movsxd rax,DWORD PTR [rsi+0xc]
   140005949:	lea    rbx,[rsi+rax*8+0x10]
   14000594e:	movsxd rax,DWORD PTR [rsi+0x8]
   140005952:	lea    rbp,[rsi+rax*8+0x10]
   140005957:	cmp    rbp,rbx
   14000595a:	je     0x140005984
   14000595c:	nop    DWORD PTR [rax+0x0]
   140005960:	mov    rdi,QWORD PTR [rbx-0x8]
   140005964:	sub    rbx,0x8
   140005968:	test   rdi,rdi
   14000596b:	je     0x14000597f
   14000596d:	lea    rcx,[rdi+0x18]
   140005971:	call   QWORD PTR [rip+0x1ae09]        # 0x140020780
   140005977:	mov    rcx,rdi
   14000597a:	call   0x14001ee46
   14000597f:	cmp    rbx,rbp
   140005982:	jne    0x140005960
   140005984:	mov    rcx,rsi
   140005987:	jmp    0x140005637
   14000598c:	mov    rsi,QWORD PTR [rsp+0x28]
   140005991:	mov    eax,DWORD PTR [rsi]
   140005993:	test   eax,eax
   140005995:	je     0x1400059ac
   140005997:	cmp    eax,0xffffffff
   14000599a:	je     0x1400059f0
   14000599c:	lock add DWORD PTR [rsi],0xffffffff
   1400059a0:	setne  al
   1400059a3:	test   al,al
   1400059a5:	jne    0x1400059f0
   1400059a7:	mov    rsi,QWORD PTR [rsp+0x28]
   1400059ac:	movsxd rax,DWORD PTR [rsi+0xc]
   1400059b0:	lea    rbx,[rsi+rax*8+0x10]
   1400059b5:	movsxd rax,DWORD PTR [rsi+0x8]
   1400059b9:	lea    rbp,[rsi+rax*8+0x10]
   1400059be:	cmp    rbp,rbx
   1400059c1:	je     0x1400059e7
   1400059c3:	mov    rdi,QWORD PTR [rbx-0x8]
   1400059c7:	sub    rbx,0x8
   1400059cb:	test   rdi,rdi
   1400059ce:	je     0x1400059e2
   1400059d0:	lea    rcx,[rdi+0x18]
   1400059d4:	call   QWORD PTR [rip+0x1ada6]        # 0x140020780
   1400059da:	mov    rcx,rdi
   1400059dd:	call   0x14001ee46
   1400059e2:	cmp    rbx,rbp
   1400059e5:	jne    0x1400059c3
   1400059e7:	mov    rcx,rsi
   1400059ea:	call   QWORD PTR [rip+0x1ace0]        # 0x1400206d0
   1400059f0:	mov    rbx,QWORD PTR [rsp+0x320]
   1400059f8:	mov    rax,QWORD PTR [rip+0x1ad61]        # 0x140020760
   1400059ff:	mov    QWORD PTR [rbx],rax
   140005a02:	jmp    0x140005a38
   140005a04:	mov    rdx,QWORD PTR [rsp+0x1f8]
   140005a0c:	test   rdx,rdx
   140005a0f:	je     0x140005a17
   140005a11:	cmp    DWORD PTR [rdx+0x8],0x57
   140005a15:	je     0x140005a19
   140005a17:	xor    edx,edx
   140005a19:	mov    rbx,QWORD PTR [rsp+0x320]
   140005a21:	mov    r9,QWORD PTR [rsp+0x328]
   140005a29:	mov    rdx,QWORD PTR [rdx+0x10]
   140005a2d:	mov    rcx,rbx
   140005a30:	mov    r8,r15
   140005a33:	call   0x140004200
   140005a38:	lea    rcx,[rsp+0x1c0]
   140005a40:	call   0x14000f270
   140005a45:	lea    rcx,[rsp+0xe8]
   140005a4d:	call   QWORD PTR [rip+0x1ad2d]        # 0x140020780
   140005a53:	lea    rcx,[rsp+0xe0]
   140005a5b:	call   QWORD PTR [rip+0x1ad1f]        # 0x140020780
   140005a61:	lea    rcx,[rsp+0xd8]
   140005a69:	call   QWORD PTR [rip+0x1ad11]        # 0x140020780
   140005a6f:	lea    rcx,[rsp+0x80]
   140005a77:	call   0x140016e10
   140005a7c:	mov    rax,rbx
   140005a7f:	mov    rbx,QWORD PTR [rsp+0x330]
   140005a87:	add    rsp,0x2e0
   140005a8e:	pop    r15
   140005a90:	pop    r14
   140005a92:	pop    r13
   140005a94:	pop    r12
   140005a96:	pop    rdi
   140005a97:	pop    rsi
   140005a98:	pop    rbp
   140005a99:	ret    
   140005a9a:	int3   
   140005a9b:	int3   
   140005a9c:	int3   
   140005a9d:	int3   
   140005a9e:	int3   
   140005a9f:	int3   
   140005aa0:	mov    QWORD PTR [rsp+0x10],rbx
   140005aa5:	push   rsi
   140005aa6:	sub    rsp,0x90
   140005aad:	mov    rsi,rcx
   140005ab0:	lea    rcx,[rsp+0x20]
   140005ab5:	mov    rbx,rdx
   140005ab8:	call   QWORD PTR [rip+0x1ab22]        # 0x1400205e0
   140005abe:	lea    rcx,[rsp+0x20]
   140005ac3:	mov    edx,0x1
   140005ac8:	call   QWORD PTR [rip+0x1ab1a]        # 0x1400205e8
   140005ace:	test   al,al
   140005ad0:	jne    0x140005bcf
   140005ad6:	lea    rdx,[rsp+0x38]
   140005adb:	lea    rcx,[rsp+0x20]
   140005ae0:	mov    QWORD PTR [rsp+0xa0],rdi
   140005ae8:	call   QWORD PTR [rip+0x1ab02]        # 0x1400205f0
   140005aee:	lea    rdx,[rsp+0x68]
   140005af3:	mov    rcx,rax
   140005af6:	call   QWORD PTR [rip+0x1aafc]        # 0x1400205f8
   140005afc:	lea    rdx,[rsp+0x30]
   140005b01:	lea    rcx,[rsp+0x20]
   140005b06:	mov    rdi,rax
   140005b09:	call   QWORD PTR [rip+0x1aaf1]        # 0x140020600
   140005b0f:	lea    rcx,[rsp+0xb8]
   140005b17:	mov    rdx,rax
   140005b1a:	call   QWORD PTR [rip+0x1ab98]        # 0x1400206b8
   140005b20:	lea    rdx,[rsp+0x40]
   140005b25:	mov    rcx,rax
   140005b28:	call   QWORD PTR [rip+0x1aaca]        # 0x1400205f8
   140005b2e:	mov    rcx,QWORD PTR [rip+0x1a623]        # 0x140020158
   140005b35:	lea    rdx,[rip+0x1aeec]        # 0x140020a28
   140005b3c:	mov    rbx,rax
   140005b3f:	call   0x140001800
   140005b44:	mov    rdx,rbx
   140005b47:	mov    rcx,rax
   140005b4a:	call   QWORD PTR [rip+0x1a600]        # 0x140020150
   140005b50:	mov    dl,0x3a
   140005b52:	mov    rcx,rax
   140005b55:	call   0x1400019f0
   140005b5a:	mov    rdx,rdi
   140005b5d:	mov    rcx,rax
   140005b60:	call   QWORD PTR [rip+0x1a5ea]        # 0x140020150
   140005b66:	mov    rdx,QWORD PTR [rip+0x1a5db]        # 0x140020148
   140005b6d:	mov    rcx,rax
   140005b70:	call   QWORD PTR [rip+0x1a5ca]        # 0x140020140
   140005b76:	lea    rcx,[rsp+0x40]
   140005b7b:	call   QWORD PTR [rip+0x1a5b7]        # 0x140020138
   140005b81:	lea    rcx,[rsp+0xb8]
   140005b89:	call   QWORD PTR [rip+0x1abf1]        # 0x140020780
   140005b8f:	lea    rcx,[rsp+0x30]
   140005b94:	call   QWORD PTR [rip+0x1abe6]        # 0x140020780
   140005b9a:	lea    rcx,[rsp+0x68]
   140005b9f:	call   QWORD PTR [rip+0x1a593]        # 0x140020138
   140005ba5:	lea    rcx,[rsp+0x38]
   140005baa:	call   QWORD PTR [rip+0x1abd0]        # 0x140020780
   140005bb0:	mov    r11,QWORD PTR [rip+0x1aba9]        # 0x140020760
   140005bb7:	lea    rcx,[rsp+0x20]
   140005bbc:	mov    QWORD PTR [rsi],r11
   140005bbf:	call   QWORD PTR [rip+0x1aa43]        # 0x140020608
   140005bc5:	mov    rdi,QWORD PTR [rsp+0xa0]
   140005bcd:	jmp    0x140005c2d
   140005bcf:	lea    rdx,[rsp+0xb8]
   140005bd7:	lea    rcx,[rsp+0x20]
   140005bdc:	call   QWORD PTR [rip+0x1aa2e]        # 0x140020610
   140005be2:	lea    rcx,[rsp+0xb0]
   140005bea:	mov    rdx,rax
   140005bed:	call   QWORD PTR [rip+0x1aa25]        # 0x140020618
   140005bf3:	lea    rcx,[rsp+0xb8]
   140005bfb:	call   QWORD PTR [rip+0x1aaf7]        # 0x1400206f8
   140005c01:	lea    r8,[rsp+0xb0]
   140005c09:	mov    rdx,rbx
   140005c0c:	mov    rcx,rsi
   140005c0f:	call   0x140005230
   140005c14:	lea    rcx,[rsp+0xb0]
   140005c1c:	call   QWORD PTR [rip+0x1ab5e]        # 0x140020780
   140005c22:	lea    rcx,[rsp+0x20]
   140005c27:	call   QWORD PTR [rip+0x1a9db]        # 0x140020608
   140005c2d:	mov    rax,rsi
   140005c30:	mov    rbx,QWORD PTR [rsp+0xa8]
   140005c38:	add    rsp,0x90
   140005c3f:	pop    rsi
   140005c40:	ret    
   140005c41:	int3   
   140005c42:	int3   
   140005c43:	int3   
   140005c44:	int3   
   140005c45:	int3   
   140005c46:	int3   
   140005c47:	int3   
   140005c48:	int3   
   140005c49:	int3   
   140005c4a:	int3   
   140005c4b:	int3   
   140005c4c:	int3   
   140005c4d:	int3   
   140005c4e:	int3   
   140005c4f:	int3   
   140005c50:	mov    rax,rsp
   140005c53:	mov    QWORD PTR [rax+0x8],rcx
   140005c57:	push   r14
   140005c59:	sub    rsp,0x110
   140005c60:	mov    QWORD PTR [rax-0x10],rdi
   140005c64:	mov    QWORD PTR [rax-0x20],r13
   140005c68:	mov    QWORD PTR [rax-0x28],r15
   140005c6c:	mov    rax,QWORD PTR [rip+0x1aae5]        # 0x140020758
   140005c73:	mov    r15,rdx
   140005c76:	lea    rcx,[rsp+0x68]
   140005c7b:	lea    rdx,[rip+0x1adee]        # 0x140020a70
   140005c82:	mov    r8d,0xa
   140005c88:	mov    QWORD PTR [rsp+0x30],rax
   140005c8d:	call   QWORD PTR [rip+0x1a8ed]        # 0x140020580
   140005c93:	lea    rcx,[rsp+0x90]
   140005c9b:	mov    rdx,rax
   140005c9e:	call   QWORD PTR [rip+0x1a8d4]        # 0x140020578
   140005ca4:	lea    rdx,[rip+0x1adb9]        # 0x140020a64
   140005cab:	xor    eax,eax
   140005cad:	mov    rdi,rdx
   140005cb0:	mov    QWORD PTR [rsp+0x58],rdx
   140005cb5:	or     r14,0xffffffffffffffff
   140005cb9:	mov    rcx,r14
   140005cbc:	lea    rdx,[rsp+0xb0]
   140005cc4:	repnz scas al,BYTE PTR es:[rdi]
   140005cc6:	not    rcx
   140005cc9:	dec    rcx
   140005ccc:	mov    DWORD PTR [rsp+0x50],ecx
   140005cd0:	lea    rcx,[rsp+0x38]
   140005cd5:	movaps xmm0,XMMWORD PTR [rsp+0x50]
   140005cda:	movdqa XMMWORD PTR [rsp+0xb0],xmm0
   140005ce3:	call   QWORD PTR [rip+0x1a84f]        # 0x140020538
   140005ce9:	mov    rdx,QWORD PTR [rsp+0x30]
   140005cee:	mov    eax,DWORD PTR [rdx]
   140005cf0:	cmp    eax,0x1
   140005cf3:	je     0x140005d68
   140005cf5:	test   eax,eax
   140005cf7:	je     0x140005d68
   140005cf9:	call   QWORD PTR [rip+0x1aa31]        # 0x140020730
   140005cff:	mov    rcx,QWORD PTR [rsp+0x30]
   140005d04:	mov    rdi,rax
   140005d07:	mov    rax,QWORD PTR [rcx+0x10]
   140005d0b:	test   rax,rax
   140005d0e:	je     0x140005d2f
   140005d10:	mov    rdx,rdi
   140005d13:	mov    rcx,rax
   140005d16:	call   0x140001210
   140005d1b:	lea    rcx,[rdi+0x8]
   140005d1f:	mov    QWORD PTR [rdi+0x10],rax
   140005d23:	and    QWORD PTR [rax],0x3
   140005d27:	or     QWORD PTR [rax],rcx
   140005d2a:	mov    rcx,QWORD PTR [rsp+0x30]
   140005d2f:	mov    eax,DWORD PTR [rcx]
   140005d31:	test   eax,eax
   140005d33:	je     0x140005d50
   140005d35:	cmp    eax,0xffffffff
   140005d38:	je     0x140005d55
   140005d3a:	mov    eax,r14d
   140005d3d:	lock xadd DWORD PTR [rcx],eax
   140005d41:	add    eax,0xffffffff
   140005d44:	setne  al
   140005d47:	test   al,al
   140005d49:	jne    0x140005d55
   140005d4b:	mov    rcx,QWORD PTR [rsp+0x30]
   140005d50:	call   0x1400022f0
   140005d55:	mov    rcx,rdi
   140005d58:	mov    QWORD PTR [rsp+0x30],rdi
   140005d5d:	call   QWORD PTR [rip+0x1a90d]        # 0x140020670
   140005d63:	mov    rdx,QWORD PTR [rsp+0x30]
   140005d68:	mov    rdi,QWORD PTR [rdx+0x10]
   140005d6c:	mov    QWORD PTR [rsp+0x128],rbx
   140005d74:	mov    QWORD PTR [rsp+0x130],rbp
   140005d7c:	xor    r13d,r13d
   140005d7f:	mov    QWORD PTR [rsp+0x138],rsi
   140005d87:	mov    QWORD PTR [rsp+0x100],r12
   140005d8f:	test   rdi,rdi
   140005d92:	je     0x140005de6
   140005d94:	mov    rbx,r13
   140005d97:	nop    WORD PTR [rax+rax*1+0x0]
   140005da0:	lea    rcx,[rdi+0x18]
   140005da4:	lea    rdx,[rsp+0x38]
   140005da9:	call   QWORD PTR [rip+0x1a961]        # 0x140020710
   140005daf:	test   al,al
   140005db1:	jne    0x140005dbc
   140005db3:	mov    rbx,rdi
   140005db6:	mov    rdi,QWORD PTR [rdi+0x8]
   140005dba:	jmp    0x140005dc0
   140005dbc:	mov    rdi,QWORD PTR [rdi+0x10]
   140005dc0:	test   rdi,rdi
   140005dc3:	jne    0x140005da0
   140005dc5:	test   rbx,rbx
   140005dc8:	je     0x140005de6
   140005dca:	lea    rdx,[rbx+0x18]
   140005dce:	lea    rcx,[rsp+0x38]
   140005dd3:	call   QWORD PTR [rip+0x1a937]        # 0x140020710
   140005dd9:	test   al,al
   140005ddb:	jne    0x140005de6
   140005ddd:	lea    rcx,[rbx+0x20]
   140005de1:	jmp    0x140005f46
   140005de6:	lea    rcx,[rsp+0xd0]
   140005dee:	call   QWORD PTR [rip+0x1a7e4]        # 0x1400205d8
   140005df4:	mov    rcx,QWORD PTR [rsp+0x30]
   140005df9:	mov    edx,DWORD PTR [rcx]
   140005dfb:	mov    r12,rax
   140005dfe:	cmp    edx,0x1
   140005e01:	je     0x140005e76
   140005e03:	test   edx,edx
   140005e05:	je     0x140005e76
   140005e07:	call   QWORD PTR [rip+0x1a923]        # 0x140020730
   140005e0d:	mov    rcx,QWORD PTR [rsp+0x30]
   140005e12:	mov    r8,QWORD PTR [rcx+0x10]
   140005e16:	mov    rdi,rax
   140005e19:	test   r8,r8
   140005e1c:	je     0x140005e3d
   140005e1e:	mov    rdx,rax
   140005e21:	mov    rcx,r8
   140005e24:	call   0x140001210
   140005e29:	lea    rcx,[rdi+0x8]
   140005e2d:	mov    QWORD PTR [rdi+0x10],rax
   140005e31:	and    QWORD PTR [rax],0x3
   140005e35:	or     QWORD PTR [rax],rcx
   140005e38:	mov    rcx,QWORD PTR [rsp+0x30]
   140005e3d:	mov    eax,DWORD PTR [rcx]
   140005e3f:	test   eax,eax
   140005e41:	je     0x140005e5e
   140005e43:	cmp    eax,0xffffffff
   140005e46:	je     0x140005e63
   140005e48:	mov    eax,r14d
   140005e4b:	lock xadd DWORD PTR [rcx],eax
   140005e4f:	add    eax,0xffffffff
   140005e52:	setne  al
   140005e55:	test   al,al
   140005e57:	jne    0x140005e63
   140005e59:	mov    rcx,QWORD PTR [rsp+0x30]
   140005e5e:	call   0x1400022f0
   140005e63:	mov    rcx,rdi
   140005e66:	mov    QWORD PTR [rsp+0x30],rdi
   140005e6b:	call   QWORD PTR [rip+0x1a7ff]        # 0x140020670
   140005e71:	mov    rcx,QWORD PTR [rsp+0x30]
   140005e76:	mov    rbx,QWORD PTR [rcx+0x10]
   140005e7a:	lea    rbp,[rcx+0x8]
   140005e7e:	mov    rdi,r13
   140005e81:	mov    sil,0x1
   140005e84:	test   rbx,rbx
   140005e87:	je     0x140005eef
   140005e89:	nop    DWORD PTR [rax+0x0]
   140005e90:	lea    rcx,[rbx+0x18]
   140005e94:	lea    rdx,[rsp+0x38]
   140005e99:	mov    rbp,rbx
   140005e9c:	call   QWORD PTR [rip+0x1a86e]        # 0x140020710
   140005ea2:	test   al,al
   140005ea4:	jne    0x140005eb2
   140005ea6:	mov    rdi,rbx
   140005ea9:	mov    rbx,QWORD PTR [rbx+0x8]
   140005ead:	mov    sil,0x1
   140005eb0:	jmp    0x140005eb9
   140005eb2:	mov    rbx,QWORD PTR [rbx+0x10]
   140005eb6:	xor    sil,sil
   140005eb9:	test   rbx,rbx
   140005ebc:	jne    0x140005e90
   140005ebe:	test   rdi,rdi
   140005ec1:	je     0x140005eea
   140005ec3:	lea    rdx,[rdi+0x18]
   140005ec7:	lea    rcx,[rsp+0x38]
   140005ecc:	call   QWORD PTR [rip+0x1a83e]        # 0x140020710
   140005ed2:	test   al,al
   140005ed4:	jne    0x140005eea
   140005ed6:	lea    rcx,[rdi+0x20]
   140005eda:	mov    rdx,r12
   140005edd:	call   QWORD PTR [rip+0x1a745]        # 0x140020628
   140005ee3:	mov    QWORD PTR [rsp+0x70],rdi
   140005ee8:	jmp    0x140005f34
   140005eea:	mov    rcx,QWORD PTR [rsp+0x30]
   140005eef:	mov    edx,0x30
   140005ef4:	mov    r9,rbp
   140005ef7:	mov    BYTE PTR [rsp+0x20],sil
   140005efc:	lea    r8d,[rdx-0x28]
   140005f00:	call   QWORD PTR [rip+0x1a822]        # 0x140020728
   140005f06:	mov    rdi,rax
   140005f09:	lea    rcx,[rax+0x18]
   140005f0d:	test   rcx,rcx
   140005f10:	je     0x140005f1d
   140005f12:	lea    rdx,[rsp+0x38]
   140005f17:	call   QWORD PTR [rip+0x1a87b]        # 0x140020798
   140005f1d:	lea    rcx,[rdi+0x20]
   140005f21:	test   rcx,rcx
   140005f24:	je     0x140005f2f
   140005f26:	mov    rdx,r12
   140005f29:	call   QWORD PTR [rip+0x1a809]        # 0x140020738
   140005f2f:	mov    QWORD PTR [rsp+0x70],rdi
   140005f34:	lea    rcx,[rsp+0xd0]
   140005f3c:	call   QWORD PTR [rip+0x1a806]        # 0x140020748
   140005f42:	lea    rcx,[rdi+0x20]
   140005f46:	lea    rdx,[rsp+0x90]
   140005f4e:	call   QWORD PTR [rip+0x1a6d4]        # 0x140020628
   140005f54:	lea    rcx,[rsp+0x38]
   140005f59:	call   QWORD PTR [rip+0x1a821]        # 0x140020780
   140005f5f:	lea    rcx,[rsp+0x90]
   140005f67:	call   QWORD PTR [rip+0x1a7db]        # 0x140020748
   140005f6d:	lea    rcx,[rsp+0x68]
   140005f72:	call   QWORD PTR [rip+0x1a808]        # 0x140020780
   140005f78:	lea    rcx,[rsp+0xa0]
   140005f80:	mov    rdx,r15
   140005f83:	call   QWORD PTR [rip+0x1a5ef]        # 0x140020578
   140005f89:	lea    rdx,[rip+0x1aac0]        # 0x140020a50
   140005f90:	xor    eax,eax
   140005f92:	mov    rdi,rdx
   140005f95:	mov    QWORD PTR [rsp+0x88],rdx
   140005f9d:	mov    rcx,r14
   140005fa0:	repnz scas al,BYTE PTR es:[rdi]
   140005fa2:	lea    rdx,[rsp+0xc0]
   140005faa:	not    rcx
   140005fad:	dec    rcx
   140005fb0:	mov    DWORD PTR [rsp+0x80],ecx
   140005fb7:	lea    rcx,[rsp+0x40]
   140005fbc:	movaps xmm0,XMMWORD PTR [rsp+0x80]
   140005fc4:	movdqa XMMWORD PTR [rsp+0xc0],xmm0
   140005fcd:	call   QWORD PTR [rip+0x1a565]        # 0x140020538
   140005fd3:	mov    rdx,QWORD PTR [rsp+0x30]
   140005fd8:	mov    eax,DWORD PTR [rdx]
   140005fda:	mov    r15,QWORD PTR [rsp+0xf0]
   140005fe2:	cmp    eax,0x1
   140005fe5:	je     0x14000605a
   140005fe7:	test   eax,eax
   140005fe9:	je     0x14000605a
   140005feb:	call   QWORD PTR [rip+0x1a73f]        # 0x140020730
   140005ff1:	mov    rcx,QWORD PTR [rsp+0x30]
   140005ff6:	mov    rdi,rax
   140005ff9:	mov    rax,QWORD PTR [rcx+0x10]
   140005ffd:	test   rax,rax
   140006000:	je     0x140006021
   140006002:	mov    rdx,rdi
   140006005:	mov    rcx,rax
   140006008:	call   0x140001210
   14000600d:	lea    rcx,[rdi+0x8]
   140006011:	mov    QWORD PTR [rdi+0x10],rax
   140006015:	and    QWORD PTR [rax],0x3
   140006019:	or     QWORD PTR [rax],rcx
   14000601c:	mov    rcx,QWORD PTR [rsp+0x30]
   140006021:	mov    eax,DWORD PTR [rcx]
   140006023:	test   eax,eax
   140006025:	je     0x140006042
   140006027:	cmp    eax,0xffffffff
   14000602a:	je     0x140006047
   14000602c:	mov    eax,r14d
   14000602f:	lock xadd DWORD PTR [rcx],eax
   140006033:	add    eax,0xffffffff
   140006036:	setne  al
   140006039:	test   al,al
   14000603b:	jne    0x140006047
   14000603d:	mov    rcx,QWORD PTR [rsp+0x30]
   140006042:	call   0x1400022f0
   140006047:	mov    rcx,rdi
   14000604a:	mov    QWORD PTR [rsp+0x30],rdi
   14000604f:	call   QWORD PTR [rip+0x1a61b]        # 0x140020670
   140006055:	mov    rdx,QWORD PTR [rsp+0x30]
   14000605a:	mov    rdi,QWORD PTR [rdx+0x10]
   14000605e:	test   rdi,rdi
   140006061:	je     0x1400060b6
   140006063:	mov    rbx,r13
   140006066:	data16 nop WORD PTR [rax+rax*1+0x0]
   140006070:	lea    rcx,[rdi+0x18]
   140006074:	lea    rdx,[rsp+0x40]
   140006079:	call   QWORD PTR [rip+0x1a691]        # 0x140020710
   14000607f:	test   al,al
   140006081:	jne    0x14000608c
   140006083:	mov    rbx,rdi
   140006086:	mov    rdi,QWORD PTR [rdi+0x8]
   14000608a:	jmp    0x140006090
   14000608c:	mov    rdi,QWORD PTR [rdi+0x10]
   140006090:	test   rdi,rdi
   140006093:	jne    0x140006070
   140006095:	test   rbx,rbx
   140006098:	je     0x1400060b6
   14000609a:	lea    rdx,[rbx+0x18]
   14000609e:	lea    rcx,[rsp+0x40]
   1400060a3:	call   QWORD PTR [rip+0x1a667]        # 0x140020710
   1400060a9:	test   al,al
   1400060ab:	jne    0x1400060b6
   1400060ad:	lea    rcx,[rbx+0x20]
   1400060b1:	jmp    0x140006216
   1400060b6:	lea    rcx,[rsp+0xe0]
   1400060be:	call   QWORD PTR [rip+0x1a514]        # 0x1400205d8
   1400060c4:	mov    rcx,QWORD PTR [rsp+0x30]
   1400060c9:	mov    edx,DWORD PTR [rcx]
   1400060cb:	mov    r12,rax
   1400060ce:	cmp    edx,0x1
   1400060d1:	je     0x140006146
   1400060d3:	test   edx,edx
   1400060d5:	je     0x140006146
   1400060d7:	call   QWORD PTR [rip+0x1a653]        # 0x140020730
   1400060dd:	mov    rcx,QWORD PTR [rsp+0x30]
   1400060e2:	mov    r8,QWORD PTR [rcx+0x10]
   1400060e6:	mov    rdi,rax
   1400060e9:	test   r8,r8
   1400060ec:	je     0x14000610d
   1400060ee:	mov    rdx,rax
   1400060f1:	mov    rcx,r8
   1400060f4:	call   0x140001210
   1400060f9:	lea    rcx,[rdi+0x8]
   1400060fd:	mov    QWORD PTR [rdi+0x10],rax
   140006101:	and    QWORD PTR [rax],0x3
   140006105:	or     QWORD PTR [rax],rcx
   140006108:	mov    rcx,QWORD PTR [rsp+0x30]
   14000610d:	mov    eax,DWORD PTR [rcx]
   14000610f:	test   eax,eax
   140006111:	je     0x14000612e
   140006113:	cmp    eax,0xffffffff
   140006116:	je     0x140006133
   140006118:	mov    eax,r14d
   14000611b:	lock xadd DWORD PTR [rcx],eax
   14000611f:	add    eax,0xffffffff
   140006122:	setne  al
   140006125:	test   al,al
   140006127:	jne    0x140006133
   140006129:	mov    rcx,QWORD PTR [rsp+0x30]
   14000612e:	call   0x1400022f0
   140006133:	mov    rcx,rdi
   140006136:	mov    QWORD PTR [rsp+0x30],rdi
   14000613b:	call   QWORD PTR [rip+0x1a52f]        # 0x140020670
   140006141:	mov    rcx,QWORD PTR [rsp+0x30]
   140006146:	mov    rbx,QWORD PTR [rcx+0x10]
   14000614a:	lea    rbp,[rcx+0x8]
   14000614e:	mov    rdi,r13
   140006151:	mov    sil,0x1
   140006154:	test   rbx,rbx
   140006157:	je     0x1400061bf
   140006159:	nop    DWORD PTR [rax+0x0]
   140006160:	lea    rcx,[rbx+0x18]
   140006164:	lea    rdx,[rsp+0x40]
   140006169:	mov    rbp,rbx
   14000616c:	call   QWORD PTR [rip+0x1a59e]        # 0x140020710
   140006172:	test   al,al
   140006174:	jne    0x140006182
   140006176:	mov    rdi,rbx
   140006179:	mov    rbx,QWORD PTR [rbx+0x8]
   14000617d:	mov    sil,0x1
   140006180:	jmp    0x140006189
   140006182:	mov    rbx,QWORD PTR [rbx+0x10]
   140006186:	xor    sil,sil
   140006189:	test   rbx,rbx
   14000618c:	jne    0x140006160
   14000618e:	test   rdi,rdi
   140006191:	je     0x1400061ba
   140006193:	lea    rdx,[rdi+0x18]
   140006197:	lea    rcx,[rsp+0x40]
   14000619c:	call   QWORD PTR [rip+0x1a56e]        # 0x140020710
   1400061a2:	test   al,al
   1400061a4:	jne    0x1400061ba
   1400061a6:	lea    rcx,[rdi+0x20]
   1400061aa:	mov    rdx,r12
   1400061ad:	call   QWORD PTR [rip+0x1a475]        # 0x140020628
   1400061b3:	mov    QWORD PTR [rsp+0x60],rdi
   1400061b8:	jmp    0x140006204
   1400061ba:	mov    rcx,QWORD PTR [rsp+0x30]
   1400061bf:	mov    edx,0x30
   1400061c4:	mov    r9,rbp
   1400061c7:	mov    BYTE PTR [rsp+0x20],sil
   1400061cc:	lea    r8d,[rdx-0x28]
   1400061d0:	call   QWORD PTR [rip+0x1a552]        # 0x140020728
   1400061d6:	mov    rdi,rax
   1400061d9:	lea    rcx,[rax+0x18]
   1400061dd:	test   rcx,rcx
   1400061e0:	je     0x1400061ed
   1400061e2:	lea    rdx,[rsp+0x40]
   1400061e7:	call   QWORD PTR [rip+0x1a5ab]        # 0x140020798
   1400061ed:	lea    rcx,[rdi+0x20]
   1400061f1:	test   rcx,rcx
   1400061f4:	je     0x1400061ff
   1400061f6:	mov    rdx,r12
   1400061f9:	call   QWORD PTR [rip+0x1a539]        # 0x140020738
   1400061ff:	mov    QWORD PTR [rsp+0x60],rdi
   140006204:	lea    rcx,[rsp+0xe0]
   14000620c:	call   QWORD PTR [rip+0x1a536]        # 0x140020748
   140006212:	lea    rcx,[rdi+0x20]
   140006216:	lea    rdx,[rsp+0xa0]
   14000621e:	call   QWORD PTR [rip+0x1a404]        # 0x140020628
   140006224:	lea    rcx,[rsp+0x40]
   140006229:	call   QWORD PTR [rip+0x1a551]        # 0x140020780
   14000622f:	lea    rcx,[rsp+0xa0]
   140006237:	call   QWORD PTR [rip+0x1a50b]        # 0x140020748
   14000623d:	lea    rdx,[rsp+0x30]
   140006242:	lea    rcx,[rsp+0x50]
   140006247:	call   QWORD PTR [rip+0x1a373]        # 0x1400205c0
   14000624d:	mov    rcx,QWORD PTR [rsp+0x120]
   140006255:	mov    r12,QWORD PTR [rsp+0x100]
   14000625d:	mov    rax,QWORD PTR [rcx+0x8]
   140006261:	mov    rsi,QWORD PTR [rsp+0x138]
   140006269:	mov    rbp,QWORD PTR [rsp+0x130]
   140006271:	mov    edx,DWORD PTR [rax]
   140006273:	mov    rbx,QWORD PTR [rsp+0x128]
   14000627b:	add    rcx,0x8
   14000627f:	cmp    edx,0x1
   140006282:	je     0x1400062c0
   140006284:	test   edx,edx
   140006286:	je     0x1400062c0
   140006288:	mov    edx,0x7fffffff
   14000628d:	mov    r8d,0x1
   140006293:	call   0x1400029a0
   140006298:	mov    ecx,0x10
   14000629d:	mov    rdi,rax
   1400062a0:	call   0x14001ee64
   1400062a5:	test   rax,rax
   1400062a8:	je     0x1400062bb
   1400062aa:	lea    rdx,[rsp+0x50]
   1400062af:	mov    rcx,rax
   1400062b2:	call   QWORD PTR [rip+0x1a480]        # 0x140020738
   1400062b8:	mov    r13,rax
   1400062bb:	mov    QWORD PTR [rdi],r13
   1400062be:	jmp    0x1400062ec
   1400062c0:	call   QWORD PTR [rip+0x1a372]        # 0x140020638
   1400062c6:	mov    ecx,0x10
   1400062cb:	mov    rdi,rax
   1400062ce:	call   0x14001ee64
   1400062d3:	test   rax,rax
   1400062d6:	je     0x1400062e9
   1400062d8:	lea    rdx,[rsp+0x50]
   1400062dd:	mov    rcx,rax
   1400062e0:	call   QWORD PTR [rip+0x1a452]        # 0x140020738
   1400062e6:	mov    r13,rax
   1400062e9:	mov    QWORD PTR [rdi],r13
   1400062ec:	lea    rcx,[rsp+0x50]
   1400062f1:	call   QWORD PTR [rip+0x1a451]        # 0x140020748
   1400062f7:	mov    rcx,QWORD PTR [rsp+0x30]
   1400062fc:	mov    r13,QWORD PTR [rsp+0xf8]
   140006304:	mov    eax,DWORD PTR [rcx]
   140006306:	mov    rdi,QWORD PTR [rsp+0x108]
   14000630e:	test   eax,eax
   140006310:	je     0x14000632c
   140006312:	cmp    eax,0xffffffff
   140006315:	je     0x140006331
   140006317:	lock xadd DWORD PTR [rcx],r14d
   14000631c:	add    r14d,0xffffffff
   140006320:	setne  al
   140006323:	test   al,al
   140006325:	jne    0x140006331
   140006327:	mov    rcx,QWORD PTR [rsp+0x30]
   14000632c:	call   0x1400022f0
   140006331:	add    rsp,0x110
   140006338:	pop    r14
   14000633a:	ret    
   14000633b:	int3   
   14000633c:	int3   
   14000633d:	int3   
   14000633e:	int3   
   14000633f:	int3   
   140006340:	mov    rax,rsp
   140006343:	mov    QWORD PTR [rax+0x18],r8
   140006347:	mov    QWORD PTR [rax+0x8],rcx
   14000634b:	push   r14
   14000634d:	sub    rsp,0x1f0
   140006354:	mov    QWORD PTR [rax+0x10],rbx
   140006358:	mov    QWORD PTR [rax-0x10],rbp
   14000635c:	mov    QWORD PTR [rax-0x18],rsi
   140006360:	mov    QWORD PTR [rax-0x20],rdi
   140006364:	mov    QWORD PTR [rax-0x28],r12
   140006368:	mov    QWORD PTR [rax-0x30],r13
   14000636c:	mov    QWORD PTR [rax-0x38],r15
   140006370:	mov    rax,QWORD PTR [rip+0x1a3e1]        # 0x140020758
   140006377:	mov    r15,rdx
   14000637a:	lea    rcx,[rsp+0x70]
   14000637f:	mov    dl,0x2f
   140006381:	mov    QWORD PTR [rsp+0x30],rax
   140006386:	call   QWORD PTR [rip+0x1a404]        # 0x140020790
   14000638c:	mov    r9d,0x1
   140006392:	xor    r8d,r8d
   140006395:	movzx  edx,WORD PTR [rax]
   140006398:	mov    rcx,r15
   14000639b:	call   QWORD PTR [rip+0x1a18f]        # 0x140020530
   1400063a1:	cmp    eax,0xffffffff
   1400063a4:	je     0x140006958
   1400063aa:	lea    rdx,[rip+0x1a6a7]        # 0x140020a58
   1400063b1:	lea    rcx,[rsp+0xa0]
   1400063b9:	mov    r8d,0x9
   1400063bf:	call   QWORD PTR [rip+0x1a1bb]        # 0x140020580
   1400063c5:	lea    rcx,[rsp+0xd8]
   1400063cd:	mov    rdx,rax
   1400063d0:	call   QWORD PTR [rip+0x1a1a2]        # 0x140020578
   1400063d6:	lea    rdx,[rip+0x1a687]        # 0x140020a64
   1400063dd:	xor    eax,eax
   1400063df:	mov    rdi,rdx
   1400063e2:	mov    QWORD PTR [rsp+0x88],rdx
   1400063ea:	or     r14,0xffffffffffffffff
   1400063ee:	mov    rcx,r14
   1400063f1:	lea    rdx,[rsp+0x160]
   1400063f9:	repnz scas al,BYTE PTR es:[rdi]
   1400063fb:	not    rcx
   1400063fe:	dec    rcx
   140006401:	mov    DWORD PTR [rsp+0x80],ecx
   140006408:	lea    rcx,[rsp+0x58]
   14000640d:	movaps xmm0,XMMWORD PTR [rsp+0x80]
   140006415:	movdqa XMMWORD PTR [rsp+0x160],xmm0
   14000641e:	call   QWORD PTR [rip+0x1a114]        # 0x140020538
   140006424:	mov    rdx,QWORD PTR [rsp+0x30]
   140006429:	mov    eax,DWORD PTR [rdx]
   14000642b:	cmp    eax,0x1
   14000642e:	je     0x1400064a3
   140006430:	test   eax,eax
   140006432:	je     0x1400064a3
   140006434:	call   QWORD PTR [rip+0x1a2f6]        # 0x140020730
   14000643a:	mov    rcx,QWORD PTR [rsp+0x30]
   14000643f:	mov    rdi,rax
   140006442:	mov    rax,QWORD PTR [rcx+0x10]
   140006446:	test   rax,rax
   140006449:	je     0x14000646a
   14000644b:	mov    rdx,rdi
   14000644e:	mov    rcx,rax
   140006451:	call   0x140001210
   140006456:	lea    rcx,[rdi+0x8]
   14000645a:	mov    QWORD PTR [rdi+0x10],rax
   14000645e:	and    QWORD PTR [rax],0x3
   140006462:	or     QWORD PTR [rax],rcx
   140006465:	mov    rcx,QWORD PTR [rsp+0x30]
   14000646a:	mov    eax,DWORD PTR [rcx]
   14000646c:	test   eax,eax
   14000646e:	je     0x14000648b
   140006470:	cmp    eax,0xffffffff
   140006473:	je     0x140006490
   140006475:	mov    eax,r14d
   140006478:	lock xadd DWORD PTR [rcx],eax
   14000647c:	add    eax,0xffffffff
   14000647f:	setne  al
   140006482:	test   al,al
   140006484:	jne    0x140006490
   140006486:	mov    rcx,QWORD PTR [rsp+0x30]
   14000648b:	call   0x1400022f0
   140006490:	mov    rcx,rdi
   140006493:	mov    QWORD PTR [rsp+0x30],rdi
   140006498:	call   QWORD PTR [rip+0x1a1d2]        # 0x140020670
   14000649e:	mov    rdx,QWORD PTR [rsp+0x30]
   1400064a3:	mov    rdi,QWORD PTR [rdx+0x10]
   1400064a7:	xor    r13d,r13d
   1400064aa:	test   rdi,rdi
   1400064ad:	je     0x140006506
   1400064af:	mov    rbx,r13
   1400064b2:	data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400064c0:	lea    rcx,[rdi+0x18]
   1400064c4:	lea    rdx,[rsp+0x58]
   1400064c9:	call   QWORD PTR [rip+0x1a241]        # 0x140020710
   1400064cf:	test   al,al
   1400064d1:	jne    0x1400064dc
   1400064d3:	mov    rbx,rdi
   1400064d6:	mov    rdi,QWORD PTR [rdi+0x8]
   1400064da:	jmp    0x1400064e0
   1400064dc:	mov    rdi,QWORD PTR [rdi+0x10]
   1400064e0:	test   rdi,rdi
   1400064e3:	jne    0x1400064c0
   1400064e5:	test   rbx,rbx
   1400064e8:	je     0x140006506
   1400064ea:	lea    rdx,[rbx+0x18]
   1400064ee:	lea    rcx,[rsp+0x58]
   1400064f3:	call   QWORD PTR [rip+0x1a217]        # 0x140020710
   1400064f9:	test   al,al
   1400064fb:	jne    0x140006506
   1400064fd:	lea    rcx,[rbx+0x20]
   140006501:	jmp    0x14000666c
   140006506:	lea    rcx,[rsp+0x138]
   14000650e:	call   QWORD PTR [rip+0x1a0c4]        # 0x1400205d8
   140006514:	mov    rcx,QWORD PTR [rsp+0x30]
   140006519:	mov    edx,DWORD PTR [rcx]
   14000651b:	mov    r12,rax
   14000651e:	cmp    edx,0x1
   140006521:	je     0x140006596
   140006523:	test   edx,edx
   140006525:	je     0x140006596
   140006527:	call   QWORD PTR [rip+0x1a203]        # 0x140020730
   14000652d:	mov    rcx,QWORD PTR [rsp+0x30]
   140006532:	mov    r8,QWORD PTR [rcx+0x10]
   140006536:	mov    rdi,rax
   140006539:	test   r8,r8
   14000653c:	je     0x14000655d
   14000653e:	mov    rdx,rax
   140006541:	mov    rcx,r8
   140006544:	call   0x140001210
   140006549:	lea    rcx,[rdi+0x8]
   14000654d:	mov    QWORD PTR [rdi+0x10],rax
   140006551:	and    QWORD PTR [rax],0x3
   140006555:	or     QWORD PTR [rax],rcx
   140006558:	mov    rcx,QWORD PTR [rsp+0x30]
   14000655d:	mov    eax,DWORD PTR [rcx]
   14000655f:	test   eax,eax
   140006561:	je     0x14000657e
   140006563:	cmp    eax,0xffffffff
   140006566:	je     0x140006583
   140006568:	mov    eax,r14d
   14000656b:	lock xadd DWORD PTR [rcx],eax
   14000656f:	add    eax,0xffffffff
   140006572:	setne  al
   140006575:	test   al,al
   140006577:	jne    0x140006583
   140006579:	mov    rcx,QWORD PTR [rsp+0x30]
   14000657e:	call   0x1400022f0
   140006583:	mov    rcx,rdi
   140006586:	mov    QWORD PTR [rsp+0x30],rdi
   14000658b:	call   QWORD PTR [rip+0x1a0df]        # 0x140020670
   140006591:	mov    rcx,QWORD PTR [rsp+0x30]
   140006596:	mov    rbx,QWORD PTR [rcx+0x10]
   14000659a:	lea    rbp,[rcx+0x8]
   14000659e:	mov    rdi,r13
   1400065a1:	mov    sil,0x1
   1400065a4:	test   rbx,rbx
   1400065a7:	je     0x140006612
   1400065a9:	nop    DWORD PTR [rax+0x0]
   1400065b0:	lea    rcx,[rbx+0x18]
   1400065b4:	lea    rdx,[rsp+0x58]
   1400065b9:	mov    rbp,rbx
   1400065bc:	call   QWORD PTR [rip+0x1a14e]        # 0x140020710
   1400065c2:	test   al,al
   1400065c4:	jne    0x1400065d2
   1400065c6:	mov    rdi,rbx
   1400065c9:	mov    rbx,QWORD PTR [rbx+0x8]
   1400065cd:	mov    sil,0x1
   1400065d0:	jmp    0x1400065d9
   1400065d2:	mov    rbx,QWORD PTR [rbx+0x10]
   1400065d6:	xor    sil,sil
   1400065d9:	test   rbx,rbx
   1400065dc:	jne    0x1400065b0
   1400065de:	test   rdi,rdi
   1400065e1:	je     0x14000660d
   1400065e3:	lea    rdx,[rdi+0x18]
   1400065e7:	lea    rcx,[rsp+0x58]
   1400065ec:	call   QWORD PTR [rip+0x1a11e]        # 0x140020710
   1400065f2:	test   al,al
   1400065f4:	jne    0x14000660d
   1400065f6:	lea    rcx,[rdi+0x20]
   1400065fa:	mov    rdx,r12
   1400065fd:	call   QWORD PTR [rip+0x1a025]        # 0x140020628
   140006603:	mov    QWORD PTR [rsp+0xb0],rdi
   14000660b:	jmp    0x14000665a
   14000660d:	mov    rcx,QWORD PTR [rsp+0x30]
   140006612:	mov    edx,0x30
   140006617:	mov    r9,rbp
   14000661a:	mov    BYTE PTR [rsp+0x20],sil
   14000661f:	lea    r8d,[rdx-0x28]
   140006623:	call   QWORD PTR [rip+0x1a0ff]        # 0x140020728
   140006629:	mov    rdi,rax
   14000662c:	lea    rcx,[rax+0x18]
   140006630:	test   rcx,rcx
   140006633:	je     0x140006640
   140006635:	lea    rdx,[rsp+0x58]
   14000663a:	call   QWORD PTR [rip+0x1a158]        # 0x140020798
   140006640:	lea    rcx,[rdi+0x20]
   140006644:	test   rcx,rcx
   140006647:	je     0x140006652
   140006649:	mov    rdx,r12
   14000664c:	call   QWORD PTR [rip+0x1a0e6]        # 0x140020738
   140006652:	mov    QWORD PTR [rsp+0xb0],rdi
   14000665a:	lea    rcx,[rsp+0x138]
   140006662:	call   QWORD PTR [rip+0x1a0e0]        # 0x140020748
   140006668:	lea    rcx,[rdi+0x20]
   14000666c:	lea    rdx,[rsp+0xd8]
   140006674:	call   QWORD PTR [rip+0x19fae]        # 0x140020628
   14000667a:	lea    rcx,[rsp+0x58]
   14000667f:	call   QWORD PTR [rip+0x1a0fb]        # 0x140020780
   140006685:	lea    rcx,[rsp+0xd8]
   14000668d:	call   QWORD PTR [rip+0x1a0b5]        # 0x140020748
   140006693:	lea    rcx,[rsp+0xa0]
   14000669b:	call   QWORD PTR [rip+0x1a0df]        # 0x140020780
   1400066a1:	lea    rcx,[rsp+0x90]
   1400066a9:	mov    rdx,r15
   1400066ac:	call   QWORD PTR [rip+0x19ec6]        # 0x140020578
   1400066b2:	lea    rdx,[rip+0x1a3c3]        # 0x140020a7c
   1400066b9:	xor    eax,eax
   1400066bb:	mov    rdi,rdx
   1400066be:	mov    QWORD PTR [rsp+0x68],rdx
   1400066c3:	mov    rcx,r14
   1400066c6:	repnz scas al,BYTE PTR es:[rdi]
   1400066c8:	lea    rdx,[rsp+0x180]
   1400066d0:	not    rcx
   1400066d3:	dec    rcx
   1400066d6:	mov    DWORD PTR [rsp+0x60],ecx
   1400066da:	lea    rcx,[rsp+0x50]
   1400066df:	movaps xmm0,XMMWORD PTR [rsp+0x60]
   1400066e4:	movdqa XMMWORD PTR [rsp+0x180],xmm0
   1400066ed:	call   QWORD PTR [rip+0x19e45]        # 0x140020538
   1400066f3:	mov    rdx,QWORD PTR [rsp+0x30]
   1400066f8:	mov    eax,DWORD PTR [rdx]
   1400066fa:	cmp    eax,0x1
   1400066fd:	je     0x140006772
   1400066ff:	test   eax,eax
   140006701:	je     0x140006772
   140006703:	call   QWORD PTR [rip+0x1a027]        # 0x140020730
   140006709:	mov    rcx,QWORD PTR [rsp+0x30]
   14000670e:	mov    rdi,rax
   140006711:	mov    rax,QWORD PTR [rcx+0x10]
   140006715:	test   rax,rax
   140006718:	je     0x140006739
   14000671a:	mov    rdx,rdi
   14000671d:	mov    rcx,rax
   140006720:	call   0x140001210
   140006725:	lea    rcx,[rdi+0x8]
   140006729:	mov    QWORD PTR [rdi+0x10],rax
   14000672d:	and    QWORD PTR [rax],0x3
   140006731:	or     QWORD PTR [rax],rcx
   140006734:	mov    rcx,QWORD PTR [rsp+0x30]
   140006739:	mov    eax,DWORD PTR [rcx]
   14000673b:	test   eax,eax
   14000673d:	je     0x14000675a
   14000673f:	cmp    eax,0xffffffff
   140006742:	je     0x14000675f
   140006744:	mov    eax,r14d
   140006747:	lock xadd DWORD PTR [rcx],eax
   14000674b:	add    eax,0xffffffff
   14000674e:	setne  al
   140006751:	test   al,al
   140006753:	jne    0x14000675f
   140006755:	mov    rcx,QWORD PTR [rsp+0x30]
   14000675a:	call   0x1400022f0
   14000675f:	mov    rcx,rdi
   140006762:	mov    QWORD PTR [rsp+0x30],rdi
   140006767:	call   QWORD PTR [rip+0x19f03]        # 0x140020670
   14000676d:	mov    rdx,QWORD PTR [rsp+0x30]
   140006772:	mov    rdi,QWORD PTR [rdx+0x10]
   140006776:	test   rdi,rdi
   140006779:	je     0x1400067c6
   14000677b:	mov    rbx,r13
   14000677e:	xchg   ax,ax
   140006780:	lea    rcx,[rdi+0x18]
   140006784:	lea    rdx,[rsp+0x50]
   140006789:	call   QWORD PTR [rip+0x19f81]        # 0x140020710
   14000678f:	test   al,al
   140006791:	jne    0x14000679c
   140006793:	mov    rbx,rdi
   140006796:	mov    rdi,QWORD PTR [rdi+0x8]
   14000679a:	jmp    0x1400067a0
   14000679c:	mov    rdi,QWORD PTR [rdi+0x10]
   1400067a0:	test   rdi,rdi
   1400067a3:	jne    0x140006780
   1400067a5:	test   rbx,rbx
   1400067a8:	je     0x1400067c6
   1400067aa:	lea    rdx,[rbx+0x18]
   1400067ae:	lea    rcx,[rsp+0x50]
   1400067b3:	call   QWORD PTR [rip+0x19f57]        # 0x140020710
   1400067b9:	test   al,al
   1400067bb:	jne    0x1400067c6
   1400067bd:	lea    rcx,[rbx+0x20]
   1400067c1:	jmp    0x14000692c
   1400067c6:	lea    rcx,[rsp+0x118]
   1400067ce:	call   QWORD PTR [rip+0x19e04]        # 0x1400205d8
   1400067d4:	mov    rcx,QWORD PTR [rsp+0x30]
   1400067d9:	mov    edx,DWORD PTR [rcx]
   1400067db:	mov    r12,rax
   1400067de:	cmp    edx,0x1
   1400067e1:	je     0x140006856
   1400067e3:	test   edx,edx
   1400067e5:	je     0x140006856
   1400067e7:	call   QWORD PTR [rip+0x19f43]        # 0x140020730
   1400067ed:	mov    rcx,QWORD PTR [rsp+0x30]
   1400067f2:	mov    r8,QWORD PTR [rcx+0x10]
   1400067f6:	mov    rdi,rax
   1400067f9:	test   r8,r8
   1400067fc:	je     0x14000681d
   1400067fe:	mov    rdx,rax
   140006801:	mov    rcx,r8
   140006804:	call   0x140001210
   140006809:	lea    rcx,[rdi+0x8]
   14000680d:	mov    QWORD PTR [rdi+0x10],rax
   140006811:	and    QWORD PTR [rax],0x3
   140006815:	or     QWORD PTR [rax],rcx
   140006818:	mov    rcx,QWORD PTR [rsp+0x30]
   14000681d:	mov    eax,DWORD PTR [rcx]
   14000681f:	test   eax,eax
   140006821:	je     0x14000683e
   140006823:	cmp    eax,0xffffffff
   140006826:	je     0x140006843
   140006828:	mov    eax,r14d
   14000682b:	lock xadd DWORD PTR [rcx],eax
   14000682f:	add    eax,0xffffffff
   140006832:	setne  al
   140006835:	test   al,al
   140006837:	jne    0x140006843
   140006839:	mov    rcx,QWORD PTR [rsp+0x30]
   14000683e:	call   0x1400022f0
   140006843:	mov    rcx,rdi
   140006846:	mov    QWORD PTR [rsp+0x30],rdi
   14000684b:	call   QWORD PTR [rip+0x19e1f]        # 0x140020670
   140006851:	mov    rcx,QWORD PTR [rsp+0x30]
   140006856:	mov    rbx,QWORD PTR [rcx+0x10]
   14000685a:	lea    rbp,[rcx+0x8]
   14000685e:	mov    rdi,r13
   140006861:	mov    sil,0x1
   140006864:	test   rbx,rbx
   140006867:	je     0x1400068d2
   140006869:	nop    DWORD PTR [rax+0x0]
   140006870:	lea    rcx,[rbx+0x18]
   140006874:	lea    rdx,[rsp+0x50]
   140006879:	mov    rbp,rbx
   14000687c:	call   QWORD PTR [rip+0x19e8e]        # 0x140020710
   140006882:	test   al,al
   140006884:	jne    0x140006892
   140006886:	mov    rdi,rbx
   140006889:	mov    rbx,QWORD PTR [rbx+0x8]
   14000688d:	mov    sil,0x1
   140006890:	jmp    0x140006899
   140006892:	mov    rbx,QWORD PTR [rbx+0x10]
   140006896:	xor    sil,sil
   140006899:	test   rbx,rbx
   14000689c:	jne    0x140006870
   14000689e:	test   rdi,rdi
   1400068a1:	je     0x1400068cd
   1400068a3:	lea    rdx,[rdi+0x18]
   1400068a7:	lea    rcx,[rsp+0x50]
   1400068ac:	call   QWORD PTR [rip+0x19e5e]        # 0x140020710
   1400068b2:	test   al,al
   1400068b4:	jne    0x1400068cd
   1400068b6:	lea    rcx,[rdi+0x20]
   1400068ba:	mov    rdx,r12
   1400068bd:	call   QWORD PTR [rip+0x19d65]        # 0x140020628
   1400068c3:	mov    QWORD PTR [rsp+0xc0],rdi
   1400068cb:	jmp    0x14000691a
   1400068cd:	mov    rcx,QWORD PTR [rsp+0x30]
   1400068d2:	mov    edx,0x30
   1400068d7:	mov    r9,rbp
   1400068da:	mov    BYTE PTR [rsp+0x20],sil
   1400068df:	lea    r8d,[rdx-0x28]
   1400068e3:	call   QWORD PTR [rip+0x19e3f]        # 0x140020728
   1400068e9:	mov    rdi,rax
   1400068ec:	lea    rcx,[rax+0x18]
   1400068f0:	test   rcx,rcx
   1400068f3:	je     0x140006900
   1400068f5:	lea    rdx,[rsp+0x50]
   1400068fa:	call   QWORD PTR [rip+0x19e98]        # 0x140020798
   140006900:	lea    rcx,[rdi+0x20]
   140006904:	test   rcx,rcx
   140006907:	je     0x140006912
   140006909:	mov    rdx,r12
   14000690c:	call   QWORD PTR [rip+0x19e26]        # 0x140020738
   140006912:	mov    QWORD PTR [rsp+0xc0],rdi
   14000691a:	lea    rcx,[rsp+0x118]
   140006922:	call   QWORD PTR [rip+0x19e20]        # 0x140020748
   140006928:	lea    rcx,[rdi+0x20]
   14000692c:	lea    rdx,[rsp+0x90]
   140006934:	call   QWORD PTR [rip+0x19cee]        # 0x140020628
   14000693a:	lea    rcx,[rsp+0x50]
   14000693f:	call   QWORD PTR [rip+0x19e3b]        # 0x140020780
   140006945:	lea    rcx,[rsp+0x90]
   14000694d:	call   QWORD PTR [rip+0x19df5]        # 0x140020748
   140006953:	jmp    0x1400071b3
   140006958:	lea    rdx,[rip+0x1a0e9]        # 0x140020a48
   14000695f:	lea    rcx,[rsp+0xc8]
   140006967:	mov    r8d,0x6
   14000696d:	call   QWORD PTR [rip+0x19c0d]        # 0x140020580
   140006973:	lea    rcx,[rsp+0xf8]
   14000697b:	mov    rdx,rax
   14000697e:	call   QWORD PTR [rip+0x19bf4]        # 0x140020578
   140006984:	lea    rdx,[rip+0x1a0d9]        # 0x140020a64
   14000698b:	xor    eax,eax
   14000698d:	mov    rdi,rdx
   140006990:	mov    QWORD PTR [rsp+0x98],rdx
   140006998:	or     r14,0xffffffffffffffff
   14000699c:	mov    rcx,r14
   14000699f:	lea    rdx,[rsp+0x1a0]
   1400069a7:	repnz scas al,BYTE PTR es:[rdi]
   1400069a9:	not    rcx
   1400069ac:	dec    rcx
   1400069af:	mov    DWORD PTR [rsp+0x90],ecx
   1400069b6:	lea    rcx,[rsp+0x38]
   1400069bb:	movaps xmm0,XMMWORD PTR [rsp+0x90]
   1400069c3:	movdqa XMMWORD PTR [rsp+0x1a0],xmm0
   1400069cc:	call   QWORD PTR [rip+0x19b66]        # 0x140020538
   1400069d2:	mov    rdx,QWORD PTR [rsp+0x30]
   1400069d7:	mov    eax,DWORD PTR [rdx]
   1400069d9:	cmp    eax,0x1
   1400069dc:	je     0x140006a51
   1400069de:	test   eax,eax
   1400069e0:	je     0x140006a51
   1400069e2:	call   QWORD PTR [rip+0x19d48]        # 0x140020730
   1400069e8:	mov    rcx,QWORD PTR [rsp+0x30]
   1400069ed:	mov    rdi,rax
   1400069f0:	mov    rax,QWORD PTR [rcx+0x10]
   1400069f4:	test   rax,rax
   1400069f7:	je     0x140006a18
   1400069f9:	mov    rdx,rdi
   1400069fc:	mov    rcx,rax
   1400069ff:	call   0x140001210
   140006a04:	lea    rcx,[rdi+0x8]
   140006a08:	mov    QWORD PTR [rdi+0x10],rax
   140006a0c:	and    QWORD PTR [rax],0x3
   140006a10:	or     QWORD PTR [rax],rcx
   140006a13:	mov    rcx,QWORD PTR [rsp+0x30]
   140006a18:	mov    eax,DWORD PTR [rcx]
   140006a1a:	test   eax,eax
   140006a1c:	je     0x140006a39
   140006a1e:	cmp    eax,0xffffffff
   140006a21:	je     0x140006a3e
   140006a23:	mov    eax,r14d
   140006a26:	lock xadd DWORD PTR [rcx],eax
   140006a2a:	add    eax,0xffffffff
   140006a2d:	setne  al
   140006a30:	test   al,al
   140006a32:	jne    0x140006a3e
   140006a34:	mov    rcx,QWORD PTR [rsp+0x30]
   140006a39:	call   0x1400022f0
   140006a3e:	mov    rcx,rdi
   140006a41:	mov    QWORD PTR [rsp+0x30],rdi
   140006a46:	call   QWORD PTR [rip+0x19c24]        # 0x140020670
   140006a4c:	mov    rdx,QWORD PTR [rsp+0x30]
   140006a51:	mov    rdi,QWORD PTR [rdx+0x10]
   140006a55:	xor    r13d,r13d
   140006a58:	test   rdi,rdi
   140006a5b:	je     0x140006aa6
   140006a5d:	mov    rbx,r13
   140006a60:	lea    rcx,[rdi+0x18]
   140006a64:	lea    rdx,[rsp+0x38]
   140006a69:	call   QWORD PTR [rip+0x19ca1]        # 0x140020710
   140006a6f:	test   al,al
   140006a71:	jne    0x140006a7c
   140006a73:	mov    rbx,rdi
   140006a76:	mov    rdi,QWORD PTR [rdi+0x8]
   140006a7a:	jmp    0x140006a80
   140006a7c:	mov    rdi,QWORD PTR [rdi+0x10]
   140006a80:	test   rdi,rdi
   140006a83:	jne    0x140006a60
   140006a85:	test   rbx,rbx
   140006a88:	je     0x140006aa6
   140006a8a:	lea    rdx,[rbx+0x18]
   140006a8e:	lea    rcx,[rsp+0x38]
   140006a93:	call   QWORD PTR [rip+0x19c77]        # 0x140020710
   140006a99:	test   al,al
   140006a9b:	jne    0x140006aa6
   140006a9d:	lea    rcx,[rbx+0x20]
   140006aa1:	jmp    0x140006c0c
   140006aa6:	lea    rcx,[rsp+0x128]
   140006aae:	call   QWORD PTR [rip+0x19b24]        # 0x1400205d8
   140006ab4:	mov    rcx,QWORD PTR [rsp+0x30]
   140006ab9:	mov    edx,DWORD PTR [rcx]
   140006abb:	mov    r12,rax
   140006abe:	cmp    edx,0x1
   140006ac1:	je     0x140006b36
   140006ac3:	test   edx,edx
   140006ac5:	je     0x140006b36
   140006ac7:	call   QWORD PTR [rip+0x19c63]        # 0x140020730
   140006acd:	mov    rcx,QWORD PTR [rsp+0x30]
   140006ad2:	mov    r8,QWORD PTR [rcx+0x10]
   140006ad6:	mov    rdi,rax
   140006ad9:	test   r8,r8
   140006adc:	je     0x140006afd
   140006ade:	mov    rdx,rax
   140006ae1:	mov    rcx,r8
   140006ae4:	call   0x140001210
   140006ae9:	lea    rcx,[rdi+0x8]
   140006aed:	mov    QWORD PTR [rdi+0x10],rax
   140006af1:	and    QWORD PTR [rax],0x3
   140006af5:	or     QWORD PTR [rax],rcx
   140006af8:	mov    rcx,QWORD PTR [rsp+0x30]
   140006afd:	mov    eax,DWORD PTR [rcx]
   140006aff:	test   eax,eax
   140006b01:	je     0x140006b1e
   140006b03:	cmp    eax,0xffffffff
   140006b06:	je     0x140006b23
   140006b08:	mov    eax,r14d
   140006b0b:	lock xadd DWORD PTR [rcx],eax
   140006b0f:	add    eax,0xffffffff
   140006b12:	setne  al
   140006b15:	test   al,al
   140006b17:	jne    0x140006b23
   140006b19:	mov    rcx,QWORD PTR [rsp+0x30]
   140006b1e:	call   0x1400022f0
   140006b23:	mov    rcx,rdi
   140006b26:	mov    QWORD PTR [rsp+0x30],rdi
   140006b2b:	call   QWORD PTR [rip+0x19b3f]        # 0x140020670
   140006b31:	mov    rcx,QWORD PTR [rsp+0x30]
   140006b36:	mov    rbx,QWORD PTR [rcx+0x10]
   140006b3a:	lea    rbp,[rcx+0x8]
   140006b3e:	mov    rdi,r13
   140006b41:	mov    sil,0x1
   140006b44:	test   rbx,rbx
   140006b47:	je     0x140006bb2
   140006b49:	nop    DWORD PTR [rax+0x0]
   140006b50:	lea    rcx,[rbx+0x18]
   140006b54:	lea    rdx,[rsp+0x38]
   140006b59:	mov    rbp,rbx
   140006b5c:	call   QWORD PTR [rip+0x19bae]        # 0x140020710
   140006b62:	test   al,al
   140006b64:	jne    0x140006b72
   140006b66:	mov    rdi,rbx
   140006b69:	mov    rbx,QWORD PTR [rbx+0x8]
   140006b6d:	mov    sil,0x1
   140006b70:	jmp    0x140006b79
   140006b72:	mov    rbx,QWORD PTR [rbx+0x10]
   140006b76:	xor    sil,sil
   140006b79:	test   rbx,rbx
   140006b7c:	jne    0x140006b50
   140006b7e:	test   rdi,rdi
   140006b81:	je     0x140006bad
   140006b83:	lea    rdx,[rdi+0x18]
   140006b87:	lea    rcx,[rsp+0x38]
   140006b8c:	call   QWORD PTR [rip+0x19b7e]        # 0x140020710
   140006b92:	test   al,al
   140006b94:	jne    0x140006bad
   140006b96:	lea    rcx,[rdi+0x20]
   140006b9a:	mov    rdx,r12
   140006b9d:	call   QWORD PTR [rip+0x19a85]        # 0x140020628
   140006ba3:	mov    QWORD PTR [rsp+0xd0],rdi
   140006bab:	jmp    0x140006bfa
   140006bad:	mov    rcx,QWORD PTR [rsp+0x30]
   140006bb2:	mov    edx,0x30
   140006bb7:	mov    r9,rbp
   140006bba:	mov    BYTE PTR [rsp+0x20],sil
   140006bbf:	lea    r8d,[rdx-0x28]
   140006bc3:	call   QWORD PTR [rip+0x19b5f]        # 0x140020728
   140006bc9:	mov    rdi,rax
   140006bcc:	lea    rcx,[rax+0x18]
   140006bd0:	test   rcx,rcx
   140006bd3:	je     0x140006be0
   140006bd5:	lea    rdx,[rsp+0x38]
   140006bda:	call   QWORD PTR [rip+0x19bb8]        # 0x140020798
   140006be0:	lea    rcx,[rdi+0x20]
   140006be4:	test   rcx,rcx
   140006be7:	je     0x140006bf2
   140006be9:	mov    rdx,r12
   140006bec:	call   QWORD PTR [rip+0x19b46]        # 0x140020738
   140006bf2:	mov    QWORD PTR [rsp+0xd0],rdi
   140006bfa:	lea    rcx,[rsp+0x128]
   140006c02:	call   QWORD PTR [rip+0x19b40]        # 0x140020748
   140006c08:	lea    rcx,[rdi+0x20]
   140006c0c:	lea    rdx,[rsp+0xf8]
   140006c14:	call   QWORD PTR [rip+0x19a0e]        # 0x140020628
   140006c1a:	lea    rcx,[rsp+0x38]
   140006c1f:	call   QWORD PTR [rip+0x19b5b]        # 0x140020780
   140006c25:	lea    rcx,[rsp+0xf8]
   140006c2d:	call   QWORD PTR [rip+0x19b15]        # 0x140020748
   140006c33:	lea    rcx,[rsp+0xc8]
   140006c3b:	call   QWORD PTR [rip+0x19b3f]        # 0x140020780
   140006c41:	lea    rcx,[rsp+0xe8]
   140006c49:	mov    rdx,r15
   140006c4c:	call   QWORD PTR [rip+0x19926]        # 0x140020578
   140006c52:	lea    rdx,[rip+0x19e23]        # 0x140020a7c
   140006c59:	xor    eax,eax
   140006c5b:	mov    rdi,rdx
   140006c5e:	mov    QWORD PTR [rsp+0x68],rdx
   140006c63:	mov    rcx,r14
   140006c66:	repnz scas al,BYTE PTR es:[rdi]
   140006c68:	lea    rdx,[rsp+0x150]
   140006c70:	not    rcx
   140006c73:	dec    rcx
   140006c76:	mov    DWORD PTR [rsp+0x60],ecx
   140006c7a:	lea    rcx,[rsp+0x40]
   140006c7f:	movaps xmm0,XMMWORD PTR [rsp+0x60]
   140006c84:	movdqa XMMWORD PTR [rsp+0x150],xmm0
   140006c8d:	call   QWORD PTR [rip+0x198a5]        # 0x140020538
   140006c93:	mov    rdx,QWORD PTR [rsp+0x30]
   140006c98:	mov    eax,DWORD PTR [rdx]
   140006c9a:	cmp    eax,0x1
   140006c9d:	je     0x140006d12
   140006c9f:	test   eax,eax
   140006ca1:	je     0x140006d12
   140006ca3:	call   QWORD PTR [rip+0x19a87]        # 0x140020730
   140006ca9:	mov    rcx,QWORD PTR [rsp+0x30]
   140006cae:	mov    rdi,rax
   140006cb1:	mov    rax,QWORD PTR [rcx+0x10]
   140006cb5:	test   rax,rax
   140006cb8:	je     0x140006cd9
   140006cba:	mov    rdx,rdi
   140006cbd:	mov    rcx,rax
   140006cc0:	call   0x140001210
   140006cc5:	lea    rcx,[rdi+0x8]
   140006cc9:	mov    QWORD PTR [rdi+0x10],rax
   140006ccd:	and    QWORD PTR [rax],0x3
   140006cd1:	or     QWORD PTR [rax],rcx
   140006cd4:	mov    rcx,QWORD PTR [rsp+0x30]
   140006cd9:	mov    eax,DWORD PTR [rcx]
   140006cdb:	test   eax,eax
   140006cdd:	je     0x140006cfa
   140006cdf:	cmp    eax,0xffffffff
   140006ce2:	je     0x140006cff
   140006ce4:	mov    eax,r14d
   140006ce7:	lock xadd DWORD PTR [rcx],eax
   140006ceb:	add    eax,0xffffffff
   140006cee:	setne  al
   140006cf1:	test   al,al
   140006cf3:	jne    0x140006cff
   140006cf5:	mov    rcx,QWORD PTR [rsp+0x30]
   140006cfa:	call   0x1400022f0
   140006cff:	mov    rcx,rdi
   140006d02:	mov    QWORD PTR [rsp+0x30],rdi
   140006d07:	call   QWORD PTR [rip+0x19963]        # 0x140020670
   140006d0d:	mov    rdx,QWORD PTR [rsp+0x30]
   140006d12:	mov    rdi,QWORD PTR [rdx+0x10]
   140006d16:	test   rdi,rdi
   140006d19:	je     0x140006d66
   140006d1b:	mov    rbx,r13
   140006d1e:	xchg   ax,ax
   140006d20:	lea    rcx,[rdi+0x18]
   140006d24:	lea    rdx,[rsp+0x40]
   140006d29:	call   QWORD PTR [rip+0x199e1]        # 0x140020710
   140006d2f:	test   al,al
   140006d31:	jne    0x140006d3c
   140006d33:	mov    rbx,rdi
   140006d36:	mov    rdi,QWORD PTR [rdi+0x8]
   140006d3a:	jmp    0x140006d40
   140006d3c:	mov    rdi,QWORD PTR [rdi+0x10]
   140006d40:	test   rdi,rdi
   140006d43:	jne    0x140006d20
   140006d45:	test   rbx,rbx
   140006d48:	je     0x140006d66
   140006d4a:	lea    rdx,[rbx+0x18]
   140006d4e:	lea    rcx,[rsp+0x40]
   140006d53:	call   QWORD PTR [rip+0x199b7]        # 0x140020710
   140006d59:	test   al,al
   140006d5b:	jne    0x140006d66
   140006d5d:	lea    rcx,[rbx+0x20]
   140006d61:	jmp    0x140006ecc
   140006d66:	lea    rcx,[rsp+0x170]
   140006d6e:	call   QWORD PTR [rip+0x19864]        # 0x1400205d8
   140006d74:	mov    rcx,QWORD PTR [rsp+0x30]
   140006d79:	mov    edx,DWORD PTR [rcx]
   140006d7b:	mov    r12,rax
   140006d7e:	cmp    edx,0x1
   140006d81:	je     0x140006df6
   140006d83:	test   edx,edx
   140006d85:	je     0x140006df6
   140006d87:	call   QWORD PTR [rip+0x199a3]        # 0x140020730
   140006d8d:	mov    rcx,QWORD PTR [rsp+0x30]
   140006d92:	mov    r8,QWORD PTR [rcx+0x10]
   140006d96:	mov    rdi,rax
   140006d99:	test   r8,r8
   140006d9c:	je     0x140006dbd
   140006d9e:	mov    rdx,rax
   140006da1:	mov    rcx,r8
   140006da4:	call   0x140001210
   140006da9:	lea    rcx,[rdi+0x8]
   140006dad:	mov    QWORD PTR [rdi+0x10],rax
   140006db1:	and    QWORD PTR [rax],0x3
   140006db5:	or     QWORD PTR [rax],rcx
   140006db8:	mov    rcx,QWORD PTR [rsp+0x30]
   140006dbd:	mov    eax,DWORD PTR [rcx]
   140006dbf:	test   eax,eax
   140006dc1:	je     0x140006dde
   140006dc3:	cmp    eax,0xffffffff
   140006dc6:	je     0x140006de3
   140006dc8:	mov    eax,r14d
   140006dcb:	lock xadd DWORD PTR [rcx],eax
   140006dcf:	add    eax,0xffffffff
   140006dd2:	setne  al
   140006dd5:	test   al,al
   140006dd7:	jne    0x140006de3
   140006dd9:	mov    rcx,QWORD PTR [rsp+0x30]
   140006dde:	call   0x1400022f0
   140006de3:	mov    rcx,rdi
   140006de6:	mov    QWORD PTR [rsp+0x30],rdi
   140006deb:	call   QWORD PTR [rip+0x1987f]        # 0x140020670
   140006df1:	mov    rcx,QWORD PTR [rsp+0x30]
   140006df6:	mov    rbx,QWORD PTR [rcx+0x10]
   140006dfa:	lea    rbp,[rcx+0x8]
   140006dfe:	mov    rdi,r13
   140006e01:	mov    sil,0x1
   140006e04:	test   rbx,rbx
   140006e07:	je     0x140006e72
   140006e09:	nop    DWORD PTR [rax+0x0]
   140006e10:	lea    rcx,[rbx+0x18]
   140006e14:	lea    rdx,[rsp+0x40]
   140006e19:	mov    rbp,rbx
   140006e1c:	call   QWORD PTR [rip+0x198ee]        # 0x140020710
   140006e22:	test   al,al
   140006e24:	jne    0x140006e32
   140006e26:	mov    rdi,rbx
   140006e29:	mov    rbx,QWORD PTR [rbx+0x8]
   140006e2d:	mov    sil,0x1
   140006e30:	jmp    0x140006e39
   140006e32:	mov    rbx,QWORD PTR [rbx+0x10]
   140006e36:	xor    sil,sil
   140006e39:	test   rbx,rbx
   140006e3c:	jne    0x140006e10
   140006e3e:	test   rdi,rdi
   140006e41:	je     0x140006e6d
   140006e43:	lea    rdx,[rdi+0x18]
   140006e47:	lea    rcx,[rsp+0x40]
   140006e4c:	call   QWORD PTR [rip+0x198be]        # 0x140020710
   140006e52:	test   al,al
   140006e54:	jne    0x140006e6d
   140006e56:	lea    rcx,[rdi+0x20]
   140006e5a:	mov    rdx,r12
   140006e5d:	call   QWORD PTR [rip+0x197c5]        # 0x140020628
   140006e63:	mov    QWORD PTR [rsp+0xb8],rdi
   140006e6b:	jmp    0x140006eba
   140006e6d:	mov    rcx,QWORD PTR [rsp+0x30]
   140006e72:	mov    edx,0x30
   140006e77:	mov    r9,rbp
   140006e7a:	mov    BYTE PTR [rsp+0x20],sil
   140006e7f:	lea    r8d,[rdx-0x28]
   140006e83:	call   QWORD PTR [rip+0x1989f]        # 0x140020728
   140006e89:	mov    rdi,rax
   140006e8c:	lea    rcx,[rax+0x18]
   140006e90:	test   rcx,rcx
   140006e93:	je     0x140006ea0
   140006e95:	lea    rdx,[rsp+0x40]
   140006e9a:	call   QWORD PTR [rip+0x198f8]        # 0x140020798
   140006ea0:	lea    rcx,[rdi+0x20]
   140006ea4:	test   rcx,rcx
   140006ea7:	je     0x140006eb2
   140006ea9:	mov    rdx,r12
   140006eac:	call   QWORD PTR [rip+0x19886]        # 0x140020738
   140006eb2:	mov    QWORD PTR [rsp+0xb8],rdi
   140006eba:	lea    rcx,[rsp+0x170]
   140006ec2:	call   QWORD PTR [rip+0x19880]        # 0x140020748
   140006ec8:	lea    rcx,[rdi+0x20]
   140006ecc:	lea    rdx,[rsp+0xe8]
   140006ed4:	call   QWORD PTR [rip+0x1974e]        # 0x140020628
   140006eda:	lea    rcx,[rsp+0x40]
   140006edf:	call   QWORD PTR [rip+0x1989b]        # 0x140020780
   140006ee5:	lea    rcx,[rsp+0xe8]
   140006eed:	call   QWORD PTR [rip+0x19855]        # 0x140020748
   140006ef3:	mov    rdx,QWORD PTR [rsp+0x210]
   140006efb:	lea    rcx,[rsp+0x108]
   140006f03:	call   QWORD PTR [rip+0x1966f]        # 0x140020578
   140006f09:	lea    rdx,[rip+0x19b30]        # 0x140020a40
   140006f10:	xor    eax,eax
   140006f12:	mov    rdi,rdx
   140006f15:	mov    QWORD PTR [rsp+0x68],rdx
   140006f1a:	mov    rcx,r14
   140006f1d:	repnz scas al,BYTE PTR es:[rdi]
   140006f1f:	lea    rdx,[rsp+0x190]
   140006f27:	not    rcx
   140006f2a:	dec    rcx
   140006f2d:	mov    DWORD PTR [rsp+0x60],ecx
   140006f31:	lea    rcx,[rsp+0x48]
   140006f36:	movaps xmm0,XMMWORD PTR [rsp+0x60]
   140006f3b:	movdqa XMMWORD PTR [rsp+0x190],xmm0
   140006f44:	call   QWORD PTR [rip+0x195ee]        # 0x140020538
   140006f4a:	mov    rdx,QWORD PTR [rsp+0x30]
   140006f4f:	mov    eax,DWORD PTR [rdx]
   140006f51:	cmp    eax,0x1
   140006f54:	je     0x140006fc9
   140006f56:	test   eax,eax
   140006f58:	je     0x140006fc9
   140006f5a:	call   QWORD PTR [rip+0x197d0]        # 0x140020730
   140006f60:	mov    rcx,QWORD PTR [rsp+0x30]
   140006f65:	mov    rdi,rax
   140006f68:	mov    rax,QWORD PTR [rcx+0x10]
   140006f6c:	test   rax,rax
   140006f6f:	je     0x140006f90
   140006f71:	mov    rdx,rdi
   140006f74:	mov    rcx,rax
   140006f77:	call   0x140001210
   140006f7c:	lea    rcx,[rdi+0x8]
   140006f80:	mov    QWORD PTR [rdi+0x10],rax
   140006f84:	and    QWORD PTR [rax],0x3
   140006f88:	or     QWORD PTR [rax],rcx
   140006f8b:	mov    rcx,QWORD PTR [rsp+0x30]
   140006f90:	mov    eax,DWORD PTR [rcx]
   140006f92:	test   eax,eax
   140006f94:	je     0x140006fb1
   140006f96:	cmp    eax,0xffffffff
   140006f99:	je     0x140006fb6
   140006f9b:	mov    eax,r14d
   140006f9e:	lock xadd DWORD PTR [rcx],eax
   140006fa2:	add    eax,0xffffffff
   140006fa5:	setne  al
   140006fa8:	test   al,al
   140006faa:	jne    0x140006fb6
   140006fac:	mov    rcx,QWORD PTR [rsp+0x30]
   140006fb1:	call   0x1400022f0
   140006fb6:	mov    rcx,rdi
   140006fb9:	mov    QWORD PTR [rsp+0x30],rdi
   140006fbe:	call   QWORD PTR [rip+0x196ac]        # 0x140020670
   140006fc4:	mov    rdx,QWORD PTR [rsp+0x30]
   140006fc9:	mov    rdi,QWORD PTR [rdx+0x10]
   140006fcd:	test   rdi,rdi
   140006fd0:	je     0x140007026
   140006fd2:	mov    rbx,r13
   140006fd5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140006fe0:	lea    rcx,[rdi+0x18]
   140006fe4:	lea    rdx,[rsp+0x48]
   140006fe9:	call   QWORD PTR [rip+0x19721]        # 0x140020710
   140006fef:	test   al,al
   140006ff1:	jne    0x140006ffc
   140006ff3:	mov    rbx,rdi
   140006ff6:	mov    rdi,QWORD PTR [rdi+0x8]
   140006ffa:	jmp    0x140007000
   140006ffc:	mov    rdi,QWORD PTR [rdi+0x10]
   140007000:	test   rdi,rdi
   140007003:	jne    0x140006fe0
   140007005:	test   rbx,rbx
   140007008:	je     0x140007026
   14000700a:	lea    rdx,[rbx+0x18]
   14000700e:	lea    rcx,[rsp+0x48]
   140007013:	call   QWORD PTR [rip+0x196f7]        # 0x140020710
   140007019:	test   al,al
   14000701b:	jne    0x140007026
   14000701d:	lea    rcx,[rbx+0x20]
   140007021:	jmp    0x14000718c
   140007026:	lea    rcx,[rsp+0x1b0]
   14000702e:	call   QWORD PTR [rip+0x195a4]        # 0x1400205d8
   140007034:	mov    rcx,QWORD PTR [rsp+0x30]
   140007039:	mov    edx,DWORD PTR [rcx]
   14000703b:	mov    r12,rax
   14000703e:	cmp    edx,0x1
   140007041:	je     0x1400070b6
   140007043:	test   edx,edx
   140007045:	je     0x1400070b6
   140007047:	call   QWORD PTR [rip+0x196e3]        # 0x140020730
   14000704d:	mov    rcx,QWORD PTR [rsp+0x30]
   140007052:	mov    r8,QWORD PTR [rcx+0x10]
   140007056:	mov    rdi,rax
   140007059:	test   r8,r8
   14000705c:	je     0x14000707d
   14000705e:	mov    rdx,rax
   140007061:	mov    rcx,r8
   140007064:	call   0x140001210
   140007069:	lea    rcx,[rdi+0x8]
   14000706d:	mov    QWORD PTR [rdi+0x10],rax
   140007071:	and    QWORD PTR [rax],0x3
   140007075:	or     QWORD PTR [rax],rcx
   140007078:	mov    rcx,QWORD PTR [rsp+0x30]
   14000707d:	mov    eax,DWORD PTR [rcx]
   14000707f:	test   eax,eax
   140007081:	je     0x14000709e
   140007083:	cmp    eax,0xffffffff
   140007086:	je     0x1400070a3
   140007088:	mov    eax,r14d
   14000708b:	lock xadd DWORD PTR [rcx],eax
   14000708f:	add    eax,0xffffffff
   140007092:	setne  al
   140007095:	test   al,al
   140007097:	jne    0x1400070a3
   140007099:	mov    rcx,QWORD PTR [rsp+0x30]
   14000709e:	call   0x1400022f0
   1400070a3:	mov    rcx,rdi
   1400070a6:	mov    QWORD PTR [rsp+0x30],rdi
   1400070ab:	call   QWORD PTR [rip+0x195bf]        # 0x140020670
   1400070b1:	mov    rcx,QWORD PTR [rsp+0x30]
   1400070b6:	mov    rbx,QWORD PTR [rcx+0x10]
   1400070ba:	lea    rbp,[rcx+0x8]
   1400070be:	mov    rdi,r13
   1400070c1:	mov    sil,0x1
   1400070c4:	test   rbx,rbx
   1400070c7:	je     0x140007132
   1400070c9:	nop    DWORD PTR [rax+0x0]
   1400070d0:	lea    rcx,[rbx+0x18]
   1400070d4:	lea    rdx,[rsp+0x48]
   1400070d9:	mov    rbp,rbx
   1400070dc:	call   QWORD PTR [rip+0x1962e]        # 0x140020710
   1400070e2:	test   al,al
   1400070e4:	jne    0x1400070f2
   1400070e6:	mov    rdi,rbx
   1400070e9:	mov    rbx,QWORD PTR [rbx+0x8]
   1400070ed:	mov    sil,0x1
   1400070f0:	jmp    0x1400070f9
   1400070f2:	mov    rbx,QWORD PTR [rbx+0x10]
   1400070f6:	xor    sil,sil
   1400070f9:	test   rbx,rbx
   1400070fc:	jne    0x1400070d0
   1400070fe:	test   rdi,rdi
   140007101:	je     0x14000712d
   140007103:	lea    rdx,[rdi+0x18]
   140007107:	lea    rcx,[rsp+0x48]
   14000710c:	call   QWORD PTR [rip+0x195fe]        # 0x140020710
   140007112:	test   al,al
   140007114:	jne    0x14000712d
   140007116:	lea    rcx,[rdi+0x20]
   14000711a:	mov    rdx,r12
   14000711d:	call   QWORD PTR [rip+0x19505]        # 0x140020628
   140007123:	mov    QWORD PTR [rsp+0xa8],rdi
   14000712b:	jmp    0x14000717a
   14000712d:	mov    rcx,QWORD PTR [rsp+0x30]
   140007132:	mov    edx,0x30
   140007137:	mov    r9,rbp
   14000713a:	mov    BYTE PTR [rsp+0x20],sil
   14000713f:	lea    r8d,[rdx-0x28]
   140007143:	call   QWORD PTR [rip+0x195df]        # 0x140020728
   140007149:	mov    rdi,rax
   14000714c:	lea    rcx,[rax+0x18]
   140007150:	test   rcx,rcx
   140007153:	je     0x140007160
   140007155:	lea    rdx,[rsp+0x48]
   14000715a:	call   QWORD PTR [rip+0x19638]        # 0x140020798
   140007160:	lea    rcx,[rdi+0x20]
   140007164:	test   rcx,rcx
   140007167:	je     0x140007172
   140007169:	mov    rdx,r12
   14000716c:	call   QWORD PTR [rip+0x195c6]        # 0x140020738
   140007172:	mov    QWORD PTR [rsp+0xa8],rdi
   14000717a:	lea    rcx,[rsp+0x1b0]
   140007182:	call   QWORD PTR [rip+0x195c0]        # 0x140020748
   140007188:	lea    rcx,[rdi+0x20]
   14000718c:	lea    rdx,[rsp+0x108]
   140007194:	call   QWORD PTR [rip+0x1948e]        # 0x140020628
   14000719a:	lea    rcx,[rsp+0x48]
   14000719f:	call   QWORD PTR [rip+0x195db]        # 0x140020780
   1400071a5:	lea    rcx,[rsp+0x108]
   1400071ad:	call   QWORD PTR [rip+0x19595]        # 0x140020748
   1400071b3:	lea    rdx,[rsp+0x30]
   1400071b8:	lea    rcx,[rsp+0x80]
   1400071c0:	call   QWORD PTR [rip+0x193fa]        # 0x1400205c0
   1400071c6:	mov    rcx,QWORD PTR [rsp+0x200]
   1400071ce:	mov    r15,QWORD PTR [rsp+0x1c0]
   1400071d6:	mov    rax,QWORD PTR [rcx+0x8]
   1400071da:	mov    r12,QWORD PTR [rsp+0x1d0]
   1400071e2:	mov    rsi,QWORD PTR [rsp+0x1e0]
   1400071ea:	mov    edx,DWORD PTR [rax]
   1400071ec:	mov    rbp,QWORD PTR [rsp+0x1e8]
   1400071f4:	mov    rbx,QWORD PTR [rsp+0x208]
   1400071fc:	add    rcx,0x8
   140007200:	cmp    edx,0x1
   140007203:	je     0x140007244
   140007205:	test   edx,edx
   140007207:	je     0x140007244
   140007209:	mov    edx,0x7fffffff
   14000720e:	mov    r8d,0x1
   140007214:	call   0x1400029a0
   140007219:	mov    ecx,0x10
   14000721e:	mov    rdi,rax
   140007221:	call   0x14001ee64
   140007226:	test   rax,rax
   140007229:	je     0x14000723f
   14000722b:	lea    rdx,[rsp+0x80]
   140007233:	mov    rcx,rax
   140007236:	call   QWORD PTR [rip+0x194fc]        # 0x140020738
   14000723c:	mov    r13,rax
   14000723f:	mov    QWORD PTR [rdi],r13
   140007242:	jmp    0x140007273
   140007244:	call   QWORD PTR [rip+0x193ee]        # 0x140020638
   14000724a:	mov    ecx,0x10
   14000724f:	mov    rdi,rax
   140007252:	call   0x14001ee64
   140007257:	test   rax,rax
   14000725a:	je     0x140007270
   14000725c:	lea    rdx,[rsp+0x80]
   140007264:	mov    rcx,rax
   140007267:	call   QWORD PTR [rip+0x194cb]        # 0x140020738
   14000726d:	mov    r13,rax
   140007270:	mov    QWORD PTR [rdi],r13
   140007273:	lea    rcx,[rsp+0x80]
   14000727b:	call   QWORD PTR [rip+0x194c7]        # 0x140020748
   140007281:	mov    rcx,QWORD PTR [rsp+0x30]
   140007286:	mov    r13,QWORD PTR [rsp+0x1c8]
   14000728e:	mov    eax,DWORD PTR [rcx]
   140007290:	mov    rdi,QWORD PTR [rsp+0x1d8]
   140007298:	test   eax,eax
   14000729a:	je     0x1400072b6
   14000729c:	cmp    eax,0xffffffff
   14000729f:	je     0x1400072bb
   1400072a1:	lock xadd DWORD PTR [rcx],r14d
   1400072a6:	add    r14d,0xffffffff
   1400072aa:	setne  al
   1400072ad:	test   al,al
   1400072af:	jne    0x1400072bb
   1400072b1:	mov    rcx,QWORD PTR [rsp+0x30]
   1400072b6:	call   0x1400022f0
   1400072bb:	add    rsp,0x1f0
   1400072c2:	pop    r14
   1400072c4:	ret    
   1400072c5:	int3   
   1400072c6:	int3   
   1400072c7:	int3   
   1400072c8:	int3   
   1400072c9:	int3   
   1400072ca:	int3   
   1400072cb:	int3   
   1400072cc:	int3   
   1400072cd:	int3   
   1400072ce:	int3   
   1400072cf:	int3   
   1400072d0:	mov    QWORD PTR [rsp+0x10],rbp
   1400072d5:	mov    QWORD PTR [rsp+0x18],rsi
   1400072da:	push   rdi
   1400072db:	push   r12
   1400072dd:	push   r13
   1400072df:	sub    rsp,0x20
   1400072e3:	mov    rax,QWORD PTR [rcx]
   1400072e6:	mov    rdi,rcx
   1400072e9:	mov    r12,r8
   1400072ec:	mov    ecx,DWORD PTR [rax+0x10]
   1400072ef:	mov    rsi,rdx
   1400072f2:	cmp    ecx,0x1
   1400072f5:	je     0x140007303
   1400072f7:	test   ecx,ecx
   1400072f9:	je     0x140007303
   1400072fb:	mov    rcx,rdi
   1400072fe:	call   0x140002f80
   140007303:	mov    rax,QWORD PTR [rdi]
   140007306:	mov    rcx,r12
   140007309:	mov    edx,DWORD PTR [rax+0x24]
   14000730c:	call   QWORD PTR [rip+0x1937e]        # 0x140020690
   140007312:	mov    rdx,r12
   140007315:	mov    rcx,rdi
   140007318:	mov    r8d,eax
   14000731b:	mov    r13d,eax
   14000731e:	call   0x140001e20
   140007323:	mov    rcx,QWORD PTR [rdi]
   140007326:	mov    rdx,QWORD PTR [rax]
   140007329:	mov    rbp,rax
   14000732c:	cmp    rdx,rcx
   14000732f:	jne    0x1400073b8
   140007335:	mov    edx,DWORD PTR [rcx+0x20]
   140007338:	mov    QWORD PTR [rsp+0x40],rbx
   14000733d:	cmp    DWORD PTR [rcx+0x14],edx
   140007340:	jl     0x140007372
   140007342:	movsx  edx,WORD PTR [rcx+0x1e]
   140007346:	inc    edx
   140007348:	call   QWORD PTR [rip+0x19282]        # 0x1400205d0
   14000734e:	mov    r11,QWORD PTR [rdi]
   140007351:	mov    rcx,r12
   140007354:	mov    edx,DWORD PTR [r11+0x24]
   140007358:	call   QWORD PTR [rip+0x19332]        # 0x140020690
   14000735e:	mov    rdx,r12
   140007361:	mov    rcx,rdi
   140007364:	mov    r8d,eax
   140007367:	mov    r13d,eax
   14000736a:	call   0x140001e20
   14000736f:	mov    rbp,rax
   140007372:	mov    rcx,QWORD PTR [rdi]
   140007375:	mov    edx,0x8
   14000737a:	call   QWORD PTR [rip+0x19340]        # 0x1400206c0
   140007380:	mov    rbx,rax
   140007383:	test   rax,rax
   140007386:	je     0x1400073a2
   140007388:	mov    rax,QWORD PTR [rbp+0x0]
   14000738c:	lea    rcx,[rbx+0x10]
   140007390:	mov    rdx,r12
   140007393:	mov    QWORD PTR [rbx],rax
   140007396:	mov    DWORD PTR [rbx+0x8],r13d
   14000739a:	call   QWORD PTR [rip+0x193f8]        # 0x140020798
   1400073a0:	jmp    0x1400073a4
   1400073a2:	xor    ebx,ebx
   1400073a4:	mov    QWORD PTR [rbp+0x0],rbx
   1400073a8:	mov    rax,QWORD PTR [rdi]
   1400073ab:	mov    QWORD PTR [rsi],rbx
   1400073ae:	inc    DWORD PTR [rax+0x14]
   1400073b1:	mov    rbx,QWORD PTR [rsp+0x40]
   1400073b6:	jmp    0x1400073bb
   1400073b8:	mov    QWORD PTR [rsi],rdx
   1400073bb:	mov    rbp,QWORD PTR [rsp+0x48]
   1400073c0:	mov    rax,rsi
   1400073c3:	mov    rsi,QWORD PTR [rsp+0x50]
   1400073c8:	add    rsp,0x20
   1400073cc:	pop    r13
   1400073ce:	pop    r12
   1400073d0:	pop    rdi
   1400073d1:	ret    
   1400073d2:	int3   
   1400073d3:	int3   
   1400073d4:	int3   
   1400073d5:	int3   
   1400073d6:	int3   
   1400073d7:	int3   
   1400073d8:	int3   
   1400073d9:	int3   
   1400073da:	int3   
   1400073db:	int3   
   1400073dc:	int3   
   1400073dd:	int3   
   1400073de:	int3   
   1400073df:	int3   
   1400073e0:	rex push rbx
   1400073e2:	push   rdi
   1400073e3:	push   r12
   1400073e5:	sub    rsp,0x190
   1400073ec:	mov    rdi,rdx
   1400073ef:	mov    r12,rcx
   1400073f2:	lea    rdx,[rip+0x1971f]        # 0x140020b18
   1400073f9:	lea    rcx,[rsp+0xb8]
   140007401:	mov    r8d,0x7
   140007407:	call   QWORD PTR [rip+0x19173]        # 0x140020580
   14000740d:	lea    rcx,[rsp+0x50]
   140007412:	mov    rdx,rdi
   140007415:	mov    rbx,rax
   140007418:	call   QWORD PTR [rip+0x1937a]        # 0x140020798
   14000741e:	lea    rcx,[rsp+0x50]
   140007423:	mov    rdx,rbx
   140007426:	call   QWORD PTR [rip+0x1937c]        # 0x1400207a8
   14000742c:	lea    rdx,[rsp+0x50]
   140007431:	lea    rcx,[rsp+0x68]
   140007436:	call   QWORD PTR [rip+0x191a4]        # 0x1400205e0
   14000743c:	lea    rcx,[rsp+0x50]
   140007441:	call   QWORD PTR [rip+0x19339]        # 0x140020780
   140007447:	lea    rcx,[rsp+0xb8]
   14000744f:	call   QWORD PTR [rip+0x1932b]        # 0x140020780
   140007455:	lea    rcx,[rsp+0x68]
   14000745a:	call   QWORD PTR [rip+0x19088]        # 0x1400204e8
   140007460:	test   al,al
   140007462:	jne    0x140007489
   140007464:	mov    rax,QWORD PTR [rip+0x192ed]        # 0x140020758
   14000746b:	lea    rcx,[rsp+0x68]
   140007470:	mov    QWORD PTR [r12],rax
   140007474:	call   QWORD PTR [rip+0x1918e]        # 0x140020608
   14000747a:	mov    rax,r12
   14000747d:	add    rsp,0x190
   140007484:	pop    r12
   140007486:	pop    rdi
   140007487:	pop    rbx
   140007488:	ret    
   140007489:	lea    rcx,[rsp+0x68]
   14000748e:	mov    edx,0x11
   140007493:	mov    QWORD PTR [rsp+0x188],rbp
   14000749b:	mov    QWORD PTR [rsp+0x180],rsi
   1400074a3:	call   QWORD PTR [rip+0x1913f]        # 0x1400205e8
   1400074a9:	lea    rcx,[rsp+0x38]
   1400074ae:	call   QWORD PTR [rip+0x190e4]        # 0x140020598
   1400074b4:	lea    rcx,[rsp+0x40]
   1400074b9:	call   QWORD PTR [rip+0x190d9]        # 0x140020598
   1400074bf:	mov    r11,QWORD PTR [rip+0x1929a]        # 0x140020760
   1400074c6:	lea    rcx,[rsp+0x20]
   1400074cb:	mov    QWORD PTR [rsp+0x30],r11
   1400074d0:	call   QWORD PTR [rip+0x1901a]        # 0x1400204f0
   1400074d6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400074e0:	lea    rdx,[rsp+0x98]
   1400074e8:	lea    rcx,[rsp+0x68]
   1400074ed:	xor    r8d,r8d
   1400074f0:	call   QWORD PTR [rip+0x19002]        # 0x1400204f8
   1400074f6:	lea    rcx,[rsp+0x20]
   1400074fb:	mov    rdx,rax
   1400074fe:	call   QWORD PTR [rip+0x18ffc]        # 0x140020500
   140007504:	lea    rcx,[rsp+0x98]
   14000750c:	call   QWORD PTR [rip+0x191e6]        # 0x1400206f8
   140007512:	lea    rdx,[rip+0x195f3]        # 0x140020b0c
   140007519:	lea    rcx,[rsp+0x20]
   14000751e:	call   QWORD PTR [rip+0x18fe4]        # 0x140020508
   140007524:	test   al,al
   140007526:	je     0x1400075ee
   14000752c:	lea    rdx,[rsp+0x58]
   140007531:	lea    rcx,[rsp+0x20]
   140007536:	mov    r8b,0x20
   140007539:	call   QWORD PTR [rip+0x18fd1]        # 0x140020510
   14000753f:	mov    rcx,QWORD PTR [rax]
   140007542:	movsxd rax,DWORD PTR [rcx+0x8]
   140007546:	lea    rdx,[rcx+rax*8+0x18]
   14000754b:	lea    rcx,[rsp+0xd0]
   140007553:	call   QWORD PTR [rip+0x190bf]        # 0x140020618
   140007559:	lea    rcx,[rsp+0x38]
   14000755e:	mov    rdx,rax
   140007561:	call   QWORD PTR [rip+0x19241]        # 0x1400207a8
   140007567:	lea    rcx,[rsp+0xd0]
   14000756f:	call   QWORD PTR [rip+0x1920b]        # 0x140020780
   140007575:	mov    rdi,QWORD PTR [rsp+0x58]
   14000757a:	mov    eax,DWORD PTR [rdi]
   14000757c:	test   eax,eax
   14000757e:	je     0x140007595
   140007580:	cmp    eax,0xffffffff
   140007583:	je     0x1400075cb
   140007585:	lock add DWORD PTR [rdi],0xffffffff
   140007589:	setne  al
   14000758c:	test   al,al
   14000758e:	jne    0x1400075cb
   140007590:	mov    rdi,QWORD PTR [rsp+0x58]
   140007595:	movsxd rax,DWORD PTR [rdi+0xc]
   140007599:	lea    rbx,[rdi+rax*8+0x10]
   14000759e:	movsxd rax,DWORD PTR [rdi+0x8]
   1400075a2:	lea    rsi,[rdi+rax*8+0x10]
   1400075a7:	cmp    rsi,rbx
   1400075aa:	je     0x1400075c2
   1400075ac:	nop    DWORD PTR [rax+0x0]
   1400075b0:	sub    rbx,0x8
   1400075b4:	mov    rcx,rbx
   1400075b7:	call   QWORD PTR [rip+0x1913b]        # 0x1400206f8
   1400075bd:	cmp    rbx,rsi
   1400075c0:	jne    0x1400075b0
   1400075c2:	mov    rcx,rdi
   1400075c5:	call   QWORD PTR [rip+0x19105]        # 0x1400206d0
   1400075cb:	lea    rcx,[rsp+0x1b8]
   1400075d3:	mov    dl,0x20
   1400075d5:	call   QWORD PTR [rip+0x191b5]        # 0x140020790
   1400075db:	lea    rcx,[rsp+0x38]
   1400075e0:	movzx  edx,WORD PTR [rax]
   1400075e3:	call   QWORD PTR [rip+0x18f2f]        # 0x140020518
   1400075e9:	jmp    0x14000790b
   1400075ee:	lea    rdx,[rip+0x1950b]        # 0x140020b00
   1400075f5:	lea    rcx,[rsp+0x20]
   1400075fa:	call   QWORD PTR [rip+0x18f08]        # 0x140020508
   140007600:	test   al,al
   140007602:	je     0x1400076ce
   140007608:	lea    rdx,[rsp+0x60]
   14000760d:	lea    rcx,[rsp+0x20]
   140007612:	mov    r8b,0x20
   140007615:	call   QWORD PTR [rip+0x18ef5]        # 0x140020510
   14000761b:	mov    rcx,QWORD PTR [rax]
   14000761e:	movsxd rax,DWORD PTR [rcx+0x8]
   140007622:	lea    rdx,[rcx+rax*8+0x18]
   140007627:	lea    rcx,[rsp+0xe0]
   14000762f:	call   QWORD PTR [rip+0x18fe3]        # 0x140020618
   140007635:	lea    rcx,[rsp+0x40]
   14000763a:	mov    rdx,rax
   14000763d:	call   QWORD PTR [rip+0x19165]        # 0x1400207a8
   140007643:	lea    rcx,[rsp+0xe0]
   14000764b:	call   QWORD PTR [rip+0x1912f]        # 0x140020780
   140007651:	mov    rdi,QWORD PTR [rsp+0x60]
   140007656:	mov    eax,DWORD PTR [rdi]
   140007658:	test   eax,eax
   14000765a:	je     0x140007671
   14000765c:	cmp    eax,0xffffffff
   14000765f:	je     0x1400076ab
   140007661:	lock add DWORD PTR [rdi],0xffffffff
   140007665:	setne  al
   140007668:	test   al,al
   14000766a:	jne    0x1400076ab
   14000766c:	mov    rdi,QWORD PTR [rsp+0x60]
   140007671:	movsxd rax,DWORD PTR [rdi+0xc]
   140007675:	lea    rbx,[rdi+rax*8+0x10]
   14000767a:	movsxd rax,DWORD PTR [rdi+0x8]
   14000767e:	lea    rsi,[rdi+rax*8+0x10]
   140007683:	cmp    rsi,rbx
   140007686:	je     0x1400076a2
   140007688:	nop    DWORD PTR [rax+rax*1+0x0]
   140007690:	sub    rbx,0x8
   140007694:	mov    rcx,rbx
   140007697:	call   QWORD PTR [rip+0x1905b]        # 0x1400206f8
   14000769d:	cmp    rbx,rsi
   1400076a0:	jne    0x140007690
   1400076a2:	mov    rcx,rdi
   1400076a5:	call   QWORD PTR [rip+0x19025]        # 0x1400206d0
   1400076ab:	lea    rcx,[rsp+0x1c0]
   1400076b3:	mov    dl,0x20
   1400076b5:	call   QWORD PTR [rip+0x190d5]        # 0x140020790
   1400076bb:	lea    rcx,[rsp+0x40]
   1400076c0:	movzx  edx,WORD PTR [rax]
   1400076c3:	call   QWORD PTR [rip+0x18e4f]        # 0x140020518
   1400076c9:	jmp    0x14000790b
   1400076ce:	lea    rdx,[rip+0x19423]        # 0x140020af8
   1400076d5:	lea    rcx,[rsp+0x20]
   1400076da:	call   QWORD PTR [rip+0x18e28]        # 0x140020508
   1400076e0:	test   al,al
   1400076e2:	je     0x14000790b
   1400076e8:	lea    rdx,[rsp+0x28]
   1400076ed:	lea    rcx,[rsp+0x20]
   1400076f2:	mov    r8b,0x20
   1400076f5:	call   QWORD PTR [rip+0x18e15]        # 0x140020510
   1400076fb:	mov    r11,QWORD PTR [rsp+0x28]
   140007700:	mov    eax,DWORD PTR [r11+0xc]
   140007704:	sub    eax,DWORD PTR [r11+0x8]
   140007708:	cmp    eax,0x3
   14000770b:	je     0x140007735
   14000770d:	mov    rcx,QWORD PTR [rip+0x18a44]        # 0x140020158
   140007714:	lea    rdx,[rip+0x1939d]        # 0x140020ab8
   14000771b:	call   0x140001800
   140007720:	mov    rdx,QWORD PTR [rip+0x18a21]        # 0x140020148
   140007727:	mov    rcx,rax
   14000772a:	call   QWORD PTR [rip+0x18a10]        # 0x140020140
   140007730:	jmp    0x1400078b1
   140007735:	mov    eax,DWORD PTR [r11]
   140007738:	cmp    eax,0x1
   14000773b:	je     0x140007754
   14000773d:	test   eax,eax
   14000773f:	je     0x140007754
   140007741:	mov    edx,DWORD PTR [r11+0x4]
   140007745:	lea    rcx,[rsp+0x28]
   14000774a:	call   0x140002b60
   14000774f:	mov    r11,QWORD PTR [rsp+0x28]
   140007754:	movsxd rax,DWORD PTR [r11+0x8]
   140007758:	lea    rsi,[r11+rax*8+0x20]
   14000775d:	mov    eax,DWORD PTR [r11]
   140007760:	cmp    eax,0x1
   140007763:	je     0x14000777c
   140007765:	test   eax,eax
   140007767:	je     0x14000777c
   140007769:	mov    edx,DWORD PTR [r11+0x4]
   14000776d:	lea    rcx,[rsp+0x28]
   140007772:	call   0x140002b60
   140007777:	mov    r11,QWORD PTR [rsp+0x28]
   14000777c:	movsxd rax,DWORD PTR [r11+0x8]
   140007780:	lea    rdx,[rip+0x19329]        # 0x140020ab0
   140007787:	lea    rcx,[rsp+0xa8]
   14000778f:	mov    r8d,0x1
   140007795:	lea    rdi,[r11+rax*8+0x18]
   14000779a:	call   QWORD PTR [rip+0x18de0]        # 0x140020580
   1400077a0:	lea    rcx,[rsp+0xd8]
   1400077a8:	mov    rdx,rdi
   1400077ab:	mov    rbx,rax
   1400077ae:	call   QWORD PTR [rip+0x18e64]        # 0x140020618
   1400077b4:	lea    rcx,[rsp+0x78]
   1400077b9:	mov    QWORD PTR [rsp+0x118],rax
   1400077c1:	lea    rax,[rsp+0x118]
   1400077c9:	mov    rdx,rsi
   1400077cc:	mov    QWORD PTR [rsp+0xf8],rax
   1400077d4:	mov    QWORD PTR [rsp+0x120],rbx
   1400077dc:	call   QWORD PTR [rip+0x18e36]        # 0x140020618
   1400077e2:	lea    rdx,[rsp+0xc8]
   1400077ea:	mov    rcx,rax
   1400077ed:	call   QWORD PTR [rip+0x18d2d]        # 0x140020520
   1400077f3:	lea    rdx,[rsp+0x48]
   1400077f8:	lea    rcx,[rsp+0xf8]
   140007800:	mov    QWORD PTR [rsp+0x100],rax
   140007808:	call   0x140002020
   14000780d:	mov    r11,QWORD PTR [rsp+0x30]
   140007812:	mov    eax,DWORD PTR [r11]
   140007815:	cmp    eax,0x1
   140007818:	je     0x140007848
   14000781a:	test   eax,eax
   14000781c:	je     0x140007848
   14000781e:	lea    rcx,[rsp+0x30]
   140007823:	mov    edx,0x7fffffff
   140007828:	mov    r8d,0x1
   14000782e:	call   0x1400026c0
   140007833:	test   rax,rax
   140007836:	je     0x140007871
   140007838:	lea    rdx,[rsp+0x48]
   14000783d:	mov    rcx,rax
   140007840:	call   QWORD PTR [rip+0x18f52]        # 0x140020798
   140007846:	jmp    0x140007871
   140007848:	lea    rdx,[rsp+0x48]
   14000784d:	lea    rcx,[rsp+0xb0]
   140007855:	call   QWORD PTR [rip+0x18f3d]        # 0x140020798
   14000785b:	lea    rcx,[rsp+0x30]
   140007860:	call   QWORD PTR [rip+0x18dd2]        # 0x140020638
   140007866:	mov    rcx,QWORD PTR [rsp+0xb0]
   14000786e:	mov    QWORD PTR [rax],rcx
   140007871:	lea    rcx,[rsp+0x48]
   140007876:	call   QWORD PTR [rip+0x18f04]        # 0x140020780
   14000787c:	lea    rcx,[rsp+0xd8]
   140007884:	call   QWORD PTR [rip+0x18ef6]        # 0x140020780
   14000788a:	lea    rcx,[rsp+0xa8]
   140007892:	call   QWORD PTR [rip+0x18ee8]        # 0x140020780
   140007898:	lea    rcx,[rsp+0xc8]
   1400078a0:	call   QWORD PTR [rip+0x18eda]        # 0x140020780
   1400078a6:	lea    rcx,[rsp+0x78]
   1400078ab:	call   QWORD PTR [rip+0x18ecf]        # 0x140020780
   1400078b1:	mov    rdi,QWORD PTR [rsp+0x28]
   1400078b6:	mov    eax,DWORD PTR [rdi]
   1400078b8:	test   eax,eax
   1400078ba:	je     0x1400078d1
   1400078bc:	cmp    eax,0xffffffff
   1400078bf:	je     0x14000790b
   1400078c1:	lock add DWORD PTR [rdi],0xffffffff
   1400078c5:	setne  al
   1400078c8:	test   al,al
   1400078ca:	jne    0x14000790b
   1400078cc:	mov    rdi,QWORD PTR [rsp+0x28]
   1400078d1:	movsxd rax,DWORD PTR [rdi+0xc]
   1400078d5:	lea    rbx,[rdi+rax*8+0x10]
   1400078da:	movsxd rax,DWORD PTR [rdi+0x8]
   1400078de:	lea    rsi,[rdi+rax*8+0x10]
   1400078e3:	cmp    rsi,rbx
   1400078e6:	je     0x140007902
   1400078e8:	nop    DWORD PTR [rax+rax*1+0x0]
   1400078f0:	sub    rbx,0x8
   1400078f4:	mov    rcx,rbx
   1400078f7:	call   QWORD PTR [rip+0x18dfb]        # 0x1400206f8
   1400078fd:	cmp    rbx,rsi
   140007900:	jne    0x1400078f0
   140007902:	mov    rcx,rdi
   140007905:	call   QWORD PTR [rip+0x18dc5]        # 0x1400206d0
   14000790b:	mov    rax,QWORD PTR [rsp+0x20]
   140007910:	cmp    DWORD PTR [rax+0x4],0x0
   140007914:	jg     0x1400074e0
   14000791a:	mov    rbx,QWORD PTR [rip+0x18e37]        # 0x140020758
   140007921:	lea    rdx,[rsp+0xa0]
   140007929:	lea    rcx,[rsp+0x38]
   14000792e:	mov    QWORD PTR [rsp+0x1c8],rbx
   140007936:	call   QWORD PTR [rip+0x18be4]        # 0x140020520
   14000793c:	lea    rcx,[rsp+0x108]
   140007944:	mov    rdx,rax
   140007947:	call   QWORD PTR [rip+0x18c2b]        # 0x140020578
   14000794d:	lea    rdx,[rip+0x19154]        # 0x140020aa8
   140007954:	lea    rcx,[rsp+0x90]
   14000795c:	mov    r8d,0x7
   140007962:	call   QWORD PTR [rip+0x18c18]        # 0x140020580
   140007968:	mov    ecx,DWORD PTR [rbx]
   14000796a:	mov    rsi,rax
   14000796d:	cmp    ecx,0x1
   140007970:	je     0x1400079d9
   140007972:	test   ecx,ecx
   140007974:	je     0x1400079d9
   140007976:	call   QWORD PTR [rip+0x18db4]        # 0x140020730
   14000797c:	mov    rcx,QWORD PTR [rbx+0x10]
   140007980:	mov    rdi,rax
   140007983:	test   rcx,rcx
   140007986:	je     0x14000799f
   140007988:	mov    rdx,rax
   14000798b:	call   0x140001210
   140007990:	lea    rcx,[rdi+0x8]
   140007994:	mov    QWORD PTR [rdi+0x10],rax
   140007998:	and    QWORD PTR [rax],0x3
   14000799c:	or     QWORD PTR [rax],rcx
   14000799f:	mov    eax,DWORD PTR [rbx]
   1400079a1:	test   eax,eax
   1400079a3:	je     0x1400079bd
   1400079a5:	cmp    eax,0xffffffff
   1400079a8:	je     0x1400079c5
   1400079aa:	lock add DWORD PTR [rbx],0xffffffff
   1400079ae:	setne  al
   1400079b1:	test   al,al
   1400079b3:	jne    0x1400079c5
   1400079b5:	mov    rbx,QWORD PTR [rsp+0x1c8]
   1400079bd:	mov    rcx,rbx
   1400079c0:	call   0x1400022f0
   1400079c5:	mov    rbx,rdi
   1400079c8:	mov    rcx,rdi
   1400079cb:	mov    QWORD PTR [rsp+0x1c8],rbx
   1400079d3:	call   QWORD PTR [rip+0x18c97]        # 0x140020670
   1400079d9:	mov    rdx,rsi
   1400079dc:	mov    rcx,rbx
   1400079df:	call   0x140001c60
   1400079e4:	test   rax,rax
   1400079e7:	jne    0x140007a31
   1400079e9:	lea    rcx,[rsp+0x140]
   1400079f1:	call   QWORD PTR [rip+0x18be1]        # 0x1400205d8
   1400079f7:	lea    rdx,[rsp+0x138]
   1400079ff:	lea    rcx,[rsp+0x1c8]
   140007a07:	mov    r9,rax
   140007a0a:	mov    r8,rsi
   140007a0d:	call   0x140003090
   140007a12:	lea    rcx,[rsp+0x140]
   140007a1a:	mov    rdi,QWORD PTR [rax]
   140007a1d:	add    rdi,0x20
   140007a21:	call   QWORD PTR [rip+0x18d21]        # 0x140020748
   140007a27:	mov    rbx,QWORD PTR [rsp+0x1c8]
   140007a2f:	jmp    0x140007a35
   140007a31:	lea    rdi,[rax+0x20]
   140007a35:	lea    rdx,[rsp+0x108]
   140007a3d:	mov    rcx,rdi
   140007a40:	call   QWORD PTR [rip+0x18be2]        # 0x140020628
   140007a46:	lea    rcx,[rsp+0x90]
   140007a4e:	call   QWORD PTR [rip+0x18d2c]        # 0x140020780
   140007a54:	lea    rcx,[rsp+0x108]
   140007a5c:	call   QWORD PTR [rip+0x18ce6]        # 0x140020748
   140007a62:	lea    rcx,[rsp+0xa0]
   140007a6a:	call   QWORD PTR [rip+0x18d10]        # 0x140020780
   140007a70:	lea    rdx,[rsp+0xc0]
   140007a78:	lea    rcx,[rsp+0x40]
   140007a7d:	call   QWORD PTR [rip+0x18a9d]        # 0x140020520
   140007a83:	lea    rcx,[rsp+0x128]
   140007a8b:	mov    rdx,rax
   140007a8e:	call   QWORD PTR [rip+0x18ae4]        # 0x140020578
   140007a94:	lea    rdx,[rip+0x18ffd]        # 0x140020a98
   140007a9b:	lea    rcx,[rsp+0x88]
   140007aa3:	mov    r8d,0xa
   140007aa9:	call   QWORD PTR [rip+0x18ad1]        # 0x140020580
   140007aaf:	mov    ecx,DWORD PTR [rbx]
   140007ab1:	mov    rsi,rax
   140007ab4:	cmp    ecx,0x1
   140007ab7:	je     0x140007b20
   140007ab9:	test   ecx,ecx
   140007abb:	je     0x140007b20
   140007abd:	call   QWORD PTR [rip+0x18c6d]        # 0x140020730
   140007ac3:	mov    rcx,QWORD PTR [rbx+0x10]
   140007ac7:	mov    rdi,rax
   140007aca:	test   rcx,rcx
   140007acd:	je     0x140007ae6
   140007acf:	mov    rdx,rax
   140007ad2:	call   0x140001210
   140007ad7:	lea    rcx,[rdi+0x8]
   140007adb:	mov    QWORD PTR [rdi+0x10],rax
   140007adf:	and    QWORD PTR [rax],0x3
   140007ae3:	or     QWORD PTR [rax],rcx
   140007ae6:	mov    eax,DWORD PTR [rbx]
   140007ae8:	test   eax,eax
   140007aea:	je     0x140007b04
   140007aec:	cmp    eax,0xffffffff
   140007aef:	je     0x140007b0c
   140007af1:	lock add DWORD PTR [rbx],0xffffffff
   140007af5:	setne  al
   140007af8:	test   al,al
   140007afa:	jne    0x140007b0c
   140007afc:	mov    rbx,QWORD PTR [rsp+0x1c8]
   140007b04:	mov    rcx,rbx
   140007b07:	call   0x1400022f0
   140007b0c:	mov    rbx,rdi
   140007b0f:	mov    rcx,rdi
   140007b12:	mov    QWORD PTR [rsp+0x1c8],rbx
   140007b1a:	call   QWORD PTR [rip+0x18b50]        # 0x140020670
   140007b20:	mov    rdx,rsi
   140007b23:	mov    rcx,rbx
   140007b26:	call   0x140001c60
   140007b2b:	test   rax,rax
   140007b2e:	jne    0x140007b78
   140007b30:	lea    rcx,[rsp+0x158]
   140007b38:	call   QWORD PTR [rip+0x18a9a]        # 0x1400205d8
   140007b3e:	lea    rdx,[rsp+0x150]
   140007b46:	lea    rcx,[rsp+0x1c8]
   140007b4e:	mov    r9,rax
   140007b51:	mov    r8,rsi
   140007b54:	call   0x140003090
   140007b59:	lea    rcx,[rsp+0x158]
   140007b61:	mov    rdi,QWORD PTR [rax]
   140007b64:	add    rdi,0x20
   140007b68:	call   QWORD PTR [rip+0x18bda]        # 0x140020748
   140007b6e:	mov    rbx,QWORD PTR [rsp+0x1c8]
   140007b76:	jmp    0x140007b7c
   140007b78:	lea    rdi,[rax+0x20]
   140007b7c:	lea    rdx,[rsp+0x128]
   140007b84:	mov    rcx,rdi
   140007b87:	call   QWORD PTR [rip+0x18a9b]        # 0x140020628
   140007b8d:	lea    rcx,[rsp+0x88]
   140007b95:	call   QWORD PTR [rip+0x18be5]        # 0x140020780
   140007b9b:	lea    rcx,[rsp+0x128]
   140007ba3:	call   QWORD PTR [rip+0x18b9f]        # 0x140020748
   140007ba9:	lea    rcx,[rsp+0xc0]
   140007bb1:	call   QWORD PTR [rip+0x18bc9]        # 0x140020780
   140007bb7:	mov    r11,QWORD PTR [rsp+0x30]
   140007bbc:	mov    eax,DWORD PTR [r11+0xc]
   140007bc0:	cmp    eax,DWORD PTR [r11+0x8]
   140007bc4:	je     0x140007cf2
   140007bca:	lea    rdx,[rsp+0x30]
   140007bcf:	lea    rcx,[rsp+0xe8]
   140007bd7:	call   QWORD PTR [rip+0x1894b]        # 0x140020528
   140007bdd:	lea    rdx,[rip+0x18ea4]        # 0x140020a88
   140007be4:	lea    rcx,[rsp+0x80]
   140007bec:	mov    r8d,0xc
   140007bf2:	call   QWORD PTR [rip+0x18988]        # 0x140020580
   140007bf8:	mov    ecx,DWORD PTR [rbx]
   140007bfa:	mov    rsi,rax
   140007bfd:	cmp    ecx,0x1
   140007c00:	je     0x140007c69
   140007c02:	test   ecx,ecx
   140007c04:	je     0x140007c69
   140007c06:	call   QWORD PTR [rip+0x18b24]        # 0x140020730
   140007c0c:	mov    rcx,QWORD PTR [rbx+0x10]
   140007c10:	mov    rdi,rax
   140007c13:	test   rcx,rcx
   140007c16:	je     0x140007c2f
   140007c18:	mov    rdx,rax
   140007c1b:	call   0x140001210
   140007c20:	lea    rcx,[rdi+0x8]
   140007c24:	mov    QWORD PTR [rdi+0x10],rax
   140007c28:	and    QWORD PTR [rax],0x3
   140007c2c:	or     QWORD PTR [rax],rcx
   140007c2f:	mov    eax,DWORD PTR [rbx]
   140007c31:	test   eax,eax
   140007c33:	je     0x140007c4d
   140007c35:	cmp    eax,0xffffffff
   140007c38:	je     0x140007c55
   140007c3a:	lock add DWORD PTR [rbx],0xffffffff
   140007c3e:	setne  al
   140007c41:	test   al,al
   140007c43:	jne    0x140007c55
   140007c45:	mov    rbx,QWORD PTR [rsp+0x1c8]
   140007c4d:	mov    rcx,rbx
   140007c50:	call   0x1400022f0
   140007c55:	mov    rbx,rdi
   140007c58:	mov    rcx,rdi
   140007c5b:	mov    QWORD PTR [rsp+0x1c8],rbx
   140007c63:	call   QWORD PTR [rip+0x18a07]        # 0x140020670
   140007c69:	mov    rdx,rsi
   140007c6c:	mov    rcx,rbx
   140007c6f:	call   0x140001c60
   140007c74:	test   rax,rax
   140007c77:	jne    0x140007cc1
   140007c79:	lea    rcx,[rsp+0x170]
   140007c81:	call   QWORD PTR [rip+0x18951]        # 0x1400205d8
   140007c87:	lea    rdx,[rsp+0x168]
   140007c8f:	lea    rcx,[rsp+0x1c8]
   140007c97:	mov    r9,rax
   140007c9a:	mov    r8,rsi
   140007c9d:	call   0x140003090
   140007ca2:	lea    rcx,[rsp+0x170]
   140007caa:	mov    rdi,QWORD PTR [rax]
   140007cad:	add    rdi,0x20
   140007cb1:	call   QWORD PTR [rip+0x18a91]        # 0x140020748
   140007cb7:	mov    rbx,QWORD PTR [rsp+0x1c8]
   140007cbf:	jmp    0x140007cc5
   140007cc1:	lea    rdi,[rax+0x20]
   140007cc5:	lea    rdx,[rsp+0xe8]
   140007ccd:	mov    rcx,rdi
   140007cd0:	call   QWORD PTR [rip+0x18952]        # 0x140020628
   140007cd6:	lea    rcx,[rsp+0x80]
   140007cde:	call   QWORD PTR [rip+0x18a9c]        # 0x140020780
   140007ce4:	lea    rcx,[rsp+0xe8]
   140007cec:	call   QWORD PTR [rip+0x18a56]        # 0x140020748
   140007cf2:	mov    eax,DWORD PTR [rbx]
   140007cf4:	test   eax,eax
   140007cf6:	je     0x140007d0f
   140007cf8:	cmp    eax,0xffffffff
   140007cfb:	je     0x140007d09
   140007cfd:	lock add DWORD PTR [rbx],0x1
   140007d01:	mov    rbx,QWORD PTR [rsp+0x1c8]
   140007d09:	mov    QWORD PTR [r12],rbx
   140007d0d:	jmp    0x140007d43
   140007d0f:	call   QWORD PTR [rip+0x18a1b]        # 0x140020730
   140007d15:	mov    rcx,QWORD PTR [rbx+0x10]
   140007d19:	mov    QWORD PTR [r12],rax
   140007d1d:	test   rcx,rcx
   140007d20:	je     0x140007d43
   140007d22:	mov    rdx,rax
   140007d25:	call   0x140001210
   140007d2a:	mov    rcx,QWORD PTR [r12]
   140007d2e:	mov    QWORD PTR [rcx+0x10],rax
   140007d32:	and    QWORD PTR [rax],0x3
   140007d36:	lea    rdx,[rcx+0x8]
   140007d3a:	or     QWORD PTR [rax],rdx
   140007d3d:	call   QWORD PTR [rip+0x1892d]        # 0x140020670
   140007d43:	mov    eax,DWORD PTR [rbx]
   140007d45:	test   eax,eax
   140007d47:	je     0x140007d61
   140007d49:	cmp    eax,0xffffffff
   140007d4c:	je     0x140007d69
   140007d4e:	lock add DWORD PTR [rbx],0xffffffff
   140007d52:	setne  al
   140007d55:	test   al,al
   140007d57:	jne    0x140007d69
   140007d59:	mov    rbx,QWORD PTR [rsp+0x1c8]
   140007d61:	mov    rcx,rbx
   140007d64:	call   0x1400022f0
   140007d69:	lea    rcx,[rsp+0x20]
   140007d6e:	call   QWORD PTR [rip+0x18984]        # 0x1400206f8
   140007d74:	mov    rdi,QWORD PTR [rsp+0x30]
   140007d79:	mov    eax,DWORD PTR [rdi]
   140007d7b:	test   eax,eax
   140007d7d:	je     0x140007d94
   140007d7f:	cmp    eax,0xffffffff
   140007d82:	je     0x140007dcb
   140007d84:	lock add DWORD PTR [rdi],0xffffffff
   140007d88:	setne  al
   140007d8b:	test   al,al
   140007d8d:	jne    0x140007dcb
   140007d8f:	mov    rdi,QWORD PTR [rsp+0x30]
   140007d94:	movsxd rax,DWORD PTR [rdi+0xc]
   140007d98:	lea    rbx,[rdi+rax*8+0x10]
   140007d9d:	movsxd rax,DWORD PTR [rdi+0x8]
   140007da1:	lea    rsi,[rdi+rax*8+0x10]
   140007da6:	cmp    rsi,rbx
   140007da9:	je     0x140007dc2
   140007dab:	nop    DWORD PTR [rax+rax*1+0x0]
   140007db0:	sub    rbx,0x8
   140007db4:	mov    rcx,rbx
   140007db7:	call   QWORD PTR [rip+0x189c3]        # 0x140020780
   140007dbd:	cmp    rbx,rsi
   140007dc0:	jne    0x140007db0
   140007dc2:	mov    rcx,rdi
   140007dc5:	call   QWORD PTR [rip+0x18905]        # 0x1400206d0
   140007dcb:	lea    rcx,[rsp+0x40]
   140007dd0:	call   QWORD PTR [rip+0x189aa]        # 0x140020780
   140007dd6:	lea    rcx,[rsp+0x38]
   140007ddb:	call   QWORD PTR [rip+0x1899f]        # 0x140020780
   140007de1:	lea    rcx,[rsp+0x68]
   140007de6:	call   QWORD PTR [rip+0x1881c]        # 0x140020608
   140007dec:	mov    rsi,QWORD PTR [rsp+0x180]
   140007df4:	mov    rbp,QWORD PTR [rsp+0x188]
   140007dfc:	mov    rax,r12
   140007dff:	add    rsp,0x190
   140007e06:	pop    r12
   140007e08:	pop    rdi
   140007e09:	pop    rbx
   140007e0a:	ret    
   140007e0b:	int3   
   140007e0c:	int3   
   140007e0d:	int3   
   140007e0e:	int3   
   140007e0f:	int3   
   140007e10:	rex push rdi
   140007e12:	push   r14
   140007e14:	push   r15
   140007e16:	sub    rsp,0x40
   140007e1a:	mov    rdi,QWORD PTR [rcx]
   140007e1d:	mov    QWORD PTR [rsp+0x68],rbx
   140007e22:	mov    QWORD PTR [rsp+0x78],rsi
   140007e27:	mov    eax,DWORD PTR [rdi+0x10]
   140007e2a:	mov    rsi,rdx
   140007e2d:	mov    r14,rcx
   140007e30:	test   eax,eax
   140007e32:	je     0x140007e3e
   140007e34:	cmp    eax,0xffffffff
   140007e37:	je     0x140007e3e
   140007e39:	lock add DWORD PTR [rdi+0x10],0x1
   140007e3e:	test   BYTE PTR [rdi+0x28],0x1
   140007e42:	jne    0x140007ea3
   140007e44:	mov    eax,DWORD PTR [rdi+0x10]
   140007e47:	cmp    eax,0x1
   140007e4a:	je     0x140007ea3
   140007e4c:	test   eax,eax
   140007e4e:	je     0x140007ea3
   140007e50:	lea    r8,[rip+0xffffffffffffa489]        # 0x1400022e0
   140007e57:	lea    rdx,[rip+0xffffffffffff9f92]        # 0x140001df0
   140007e5e:	mov    r9d,0x18
   140007e64:	mov    rcx,rdi
   140007e67:	mov    DWORD PTR [rsp+0x20],0x8
   140007e6f:	call   QWORD PTR [rip+0x187bb]        # 0x140020630
   140007e75:	mov    ecx,DWORD PTR [rdi+0x10]
   140007e78:	mov    rbx,rax
   140007e7b:	test   ecx,ecx
   140007e7d:	je     0x140007e90
   140007e7f:	cmp    ecx,0xffffffff
   140007e82:	je     0x140007ea0
   140007e84:	lock add DWORD PTR [rdi+0x10],0xffffffff
   140007e89:	setne  cl
   140007e8c:	test   cl,cl
   140007e8e:	jne    0x140007ea0
   140007e90:	lea    rdx,[rip+0xffffffffffffa449]        # 0x1400022e0
   140007e97:	mov    rcx,rdi
   140007e9a:	call   QWORD PTR [rip+0x187c8]        # 0x140020668
   140007ea0:	mov    rdi,rbx
   140007ea3:	mov    rbx,QWORD PTR [rsi]
   140007ea6:	mov    eax,DWORD PTR [rbx+0x10]
   140007ea9:	mov    QWORD PTR [rsp+0x60],rbx
   140007eae:	lea    rsi,[rbx+0x10]
   140007eb2:	test   eax,eax
   140007eb4:	je     0x140007ec4
   140007eb6:	cmp    eax,0xffffffff
   140007eb9:	je     0x140007ec4
   140007ebb:	lock add DWORD PTR [rsi],0x1
   140007ebf:	mov    rbx,QWORD PTR [rsp+0x60]
   140007ec4:	test   BYTE PTR [rbx+0x28],0x1
   140007ec8:	mov    QWORD PTR [rsp+0x70],rbp
   140007ecd:	jne    0x140007f35
   140007ecf:	mov    eax,DWORD PTR [rsi]
   140007ed1:	cmp    eax,0x1
   140007ed4:	je     0x140007f35
   140007ed6:	test   eax,eax
   140007ed8:	je     0x140007f35
   140007eda:	lea    r8,[rip+0xffffffffffffa3ff]        # 0x1400022e0
   140007ee1:	lea    rdx,[rip+0xffffffffffff9f08]        # 0x140001df0
   140007ee8:	mov    r9d,0x18
   140007eee:	mov    rcx,rbx
   140007ef1:	mov    DWORD PTR [rsp+0x20],0x8
   140007ef9:	call   QWORD PTR [rip+0x18731]        # 0x140020630
   140007eff:	mov    ecx,DWORD PTR [rsi]
   140007f01:	mov    rbp,rax
   140007f04:	test   ecx,ecx
   140007f06:	je     0x140007f1d
   140007f08:	cmp    ecx,0xffffffff
   140007f0b:	je     0x140007f2d
   140007f0d:	lock add DWORD PTR [rsi],0xffffffff
   140007f11:	setne  cl
   140007f14:	test   cl,cl
   140007f16:	jne    0x140007f2d
   140007f18:	mov    rbx,QWORD PTR [rsp+0x60]
   140007f1d:	lea    rdx,[rip+0xffffffffffffa3bc]        # 0x1400022e0
   140007f24:	mov    rcx,rbx
   140007f27:	call   QWORD PTR [rip+0x1873b]        # 0x140020668
   140007f2d:	mov    rbx,rbp
   140007f30:	mov    QWORD PTR [rsp+0x60],rbx
   140007f35:	mov    rcx,rdi
   140007f38:	mov    rsi,rdi
   140007f3b:	call   QWORD PTR [rip+0x1849f]        # 0x1400203e0
   140007f41:	cmp    rdi,rax
   140007f44:	je     0x140007fe5
   140007f4a:	mov    QWORD PTR [rsp+0x38],r12
   140007f4f:	mov    QWORD PTR [rsp+0x30],r13
   140007f54:	mov    rcx,rsi
   140007f57:	call   QWORD PTR [rip+0x187c3]        # 0x140020720
   140007f5d:	cmp    DWORD PTR [rbx+0x20],0x0
   140007f61:	mov    rsi,rax
   140007f64:	je     0x140007fc9
   140007f66:	mov    edx,DWORD PTR [rbx+0x24]
   140007f69:	lea    rcx,[rax+0x10]
   140007f6d:	call   QWORD PTR [rip+0x1871d]        # 0x140020690
   140007f73:	mov    ecx,DWORD PTR [rbx+0x20]
   140007f76:	mov    r13d,eax
   140007f79:	test   ecx,ecx
   140007f7b:	je     0x140007fc9
   140007f7d:	xor    edx,edx
   140007f7f:	div    ecx
   140007f81:	mov    rcx,QWORD PTR [rbx+0x8]
   140007f85:	lea    rbp,[rcx+rdx*8]
   140007f89:	mov    rcx,QWORD PTR [rcx+rdx*8]
   140007f8d:	cmp    rcx,rbx
   140007f90:	je     0x140007fb7
   140007f92:	cmp    r13d,DWORD PTR [rcx+0x8]
   140007f96:	jne    0x140007faa
   140007f98:	lea    rdx,[rcx+0x10]
   140007f9c:	lea    rcx,[rsi+0x10]
   140007fa0:	call   QWORD PTR [rip+0x1874a]        # 0x1400206f0
   140007fa6:	test   al,al
   140007fa8:	jne    0x140007fb7
   140007faa:	mov    rbp,QWORD PTR [rbp+0x0]
   140007fae:	mov    rcx,QWORD PTR [rbp+0x0]
   140007fb2:	cmp    rcx,rbx
   140007fb5:	jne    0x140007f92
   140007fb7:	cmp    QWORD PTR [rbp+0x0],rbx
   140007fbb:	je     0x140007fc9
   140007fbd:	lea    rdx,[rsi+0x10]
   140007fc1:	mov    rcx,r14
   140007fc4:	call   0x140003fd0
   140007fc9:	mov    rcx,rdi
   140007fcc:	call   QWORD PTR [rip+0x1840e]        # 0x1400203e0
   140007fd2:	cmp    rsi,rax
   140007fd5:	jne    0x140007f54
   140007fdb:	mov    r13,QWORD PTR [rsp+0x30]
   140007fe0:	mov    r12,QWORD PTR [rsp+0x38]
   140007fe5:	mov    eax,DWORD PTR [rbx+0x10]
   140007fe8:	mov    rsi,QWORD PTR [rsp+0x78]
   140007fed:	mov    rbp,QWORD PTR [rsp+0x70]
   140007ff2:	test   eax,eax
   140007ff4:	je     0x14000800c
   140007ff6:	cmp    eax,0xffffffff
   140007ff9:	je     0x14000801c
   140007ffb:	lock add DWORD PTR [rbx+0x10],0xffffffff
   140008000:	setne  al
   140008003:	test   al,al
   140008005:	jne    0x14000801c
   140008007:	mov    rbx,QWORD PTR [rsp+0x60]
   14000800c:	lea    rdx,[rip+0xffffffffffffa2cd]        # 0x1400022e0
   140008013:	mov    rcx,rbx
   140008016:	call   QWORD PTR [rip+0x1864c]        # 0x140020668
   14000801c:	mov    eax,DWORD PTR [rdi+0x10]
   14000801f:	mov    rbx,QWORD PTR [rsp+0x68]
   140008024:	test   eax,eax
   140008026:	je     0x140008039
   140008028:	cmp    eax,0xffffffff
   14000802b:	je     0x140008049
   14000802d:	lock add DWORD PTR [rdi+0x10],0xffffffff
   140008032:	setne  al
   140008035:	test   al,al
   140008037:	jne    0x140008049
   140008039:	lea    rdx,[rip+0xffffffffffffa2a0]        # 0x1400022e0
   140008040:	mov    rcx,rdi
   140008043:	call   QWORD PTR [rip+0x1861f]        # 0x140020668
   140008049:	mov    rax,r14
   14000804c:	add    rsp,0x40
   140008050:	pop    r15
   140008052:	pop    r14
   140008054:	pop    rdi
   140008055:	ret    
   140008056:	int3   
   140008057:	int3   
   140008058:	int3   
   140008059:	int3   
   14000805a:	int3   
   14000805b:	int3   
   14000805c:	int3   
   14000805d:	int3   
   14000805e:	int3   
   14000805f:	int3   
   140008060:	mov    QWORD PTR [rsp+0x8],rbx
   140008065:	push   rdi
   140008066:	sub    rsp,0x100
   14000806d:	mov    rdi,rcx
   140008070:	mov    rcx,rdx
   140008073:	mov    rbx,rdx
   140008076:	call   QWORD PTR [rip+0x185c4]        # 0x140020640
   14000807c:	cmp    eax,0x8
   14000807f:	jne    0x140008155
   140008085:	mov    rcx,rbx
   140008088:	call   QWORD PTR [rip+0x185ba]        # 0x140020648
   14000808e:	mov    QWORD PTR [rsp+0x20],rax
   140008093:	xor    eax,eax
   140008095:	mov    QWORD PTR [rsp+0x28],rax
   14000809a:	mov    DWORD PTR [rsp+0x34],eax
   14000809e:	mov    DWORD PTR [rsp+0x3c],eax
   1400080a2:	lea    rax,[rip+0xffffffffffffaf47]        # 0x140002ff0
   1400080a9:	mov    QWORD PTR [rsp+0x40],rax
   1400080ae:	lea    rax,[rip+0xffffffffffffa74b]        # 0x140002800
   1400080b5:	mov    QWORD PTR [rsp+0x48],rax
   1400080ba:	lea    rax,[rip+0xffffffffffffa04f]        # 0x140002110
   1400080c1:	mov    QWORD PTR [rsp+0x50],rax
   1400080c6:	lea    rax,[rip+0xffffffffffffa0a3]        # 0x140002170
   1400080cd:	mov    QWORD PTR [rsp+0x58],rax
   1400080d2:	lea    rax,[rip+0xffffffffffffaf67]        # 0x140003040
   1400080d9:	mov    QWORD PTR [rsp+0x60],rax
   1400080de:	lea    rax,[rip+0xffffffffffffa1db]        # 0x1400022c0
   1400080e5:	mov    QWORD PTR [rsp+0x68],rax
   1400080ea:	lea    rax,[rip+0xffffffffffffa0cf]        # 0x1400021c0
   1400080f1:	mov    QWORD PTR [rsp+0x70],rax
   1400080f6:	lea    rax,[rip+0xffffffffffff9053]        # 0x140001150
   1400080fd:	mov    QWORD PTR [rsp+0x78],rax
   140008102:	lea    rax,[rip+0xffffffffffff9ac7]        # 0x140001bd0
   140008109:	mov    QWORD PTR [rsp+0x80],rax
   140008111:	lea    rax,[rip+0xffffffffffff8fe8]        # 0x140001100
   140008118:	lea    rcx,[rsp+0x90]
   140008120:	lea    rdx,[rsp+0x20]
   140008125:	mov    r8d,0x70
   14000812b:	mov    DWORD PTR [rsp+0x38],0x29
   140008133:	mov    DWORD PTR [rsp+0x30],0xa
   14000813b:	mov    QWORD PTR [rsp+0x88],rax
   140008143:	call   0x14001edd4
   140008148:	lea    rdx,[rsp+0x90]
   140008150:	jmp    0x140008223
   140008155:	cmp    eax,0x1c
   140008158:	jne    0x1400081f6
   14000815e:	mov    rcx,rbx
   140008161:	call   QWORD PTR [rip+0x184e1]        # 0x140020648
   140008167:	mov    QWORD PTR [rsp+0x20],rax
   14000816c:	xor    eax,eax
   14000816e:	mov    QWORD PTR [rsp+0x28],rax
   140008173:	mov    DWORD PTR [rsp+0x34],eax
   140008177:	mov    DWORD PTR [rsp+0x3c],eax
   14000817b:	lea    rax,[rip+0xffffffffffffa6ee]        # 0x140002870
   140008182:	mov    QWORD PTR [rsp+0x40],rax
   140008187:	lea    rax,[rip+0xffffffffffffa742]        # 0x1400028d0
   14000818e:	mov    QWORD PTR [rsp+0x48],rax
   140008193:	lea    rax,[rip+0xffffffffffffa046]        # 0x1400021e0
   14000819a:	mov    QWORD PTR [rsp+0x50],rax
   14000819f:	lea    rax,[rip+0xffffffffffffa0aa]        # 0x140002250
   1400081a6:	mov    QWORD PTR [rsp+0x58],rax
   1400081ab:	lea    rax,[rip+0xffffffffffffa79e]        # 0x140002950
   1400081b2:	mov    QWORD PTR [rsp+0x60],rax
   1400081b7:	lea    rax,[rip+0xffffffffffffa0e2]        # 0x1400022a0
   1400081be:	mov    QWORD PTR [rsp+0x68],rax
   1400081c3:	lea    rax,[rip+0xffffffffffffa0f6]        # 0x1400022c0
   1400081ca:	mov    QWORD PTR [rsp+0x70],rax
   1400081cf:	lea    rax,[rip+0xffffffffffff8f7a]        # 0x140001150
   1400081d6:	mov    QWORD PTR [rsp+0x78],rax
   1400081db:	lea    rax,[rip+0xffffffffffff99ee]        # 0x140001bd0
   1400081e2:	mov    QWORD PTR [rsp+0x80],rax
   1400081ea:	lea    rax,[rip+0xffffffffffff8f0f]        # 0x140001100
   1400081f1:	jmp    0x140008118
   1400081f6:	lea    rcx,[rsp+0x90]
   1400081fe:	mov    rdx,rbx
   140008201:	call   0x1400040d0
   140008206:	lea    rcx,[rsp+0x20]
   14000820b:	lea    rdx,[rsp+0x90]
   140008213:	mov    r8d,0x70
   140008219:	call   0x14001edd4
   14000821e:	lea    rdx,[rsp+0x20]
   140008223:	mov    rcx,rdi
   140008226:	call   QWORD PTR [rip+0x180a4]        # 0x1400202d0
   14000822c:	mov    rbx,QWORD PTR [rsp+0x110]
   140008234:	mov    rax,rdi
   140008237:	add    rsp,0x100
   14000823e:	pop    rdi
   14000823f:	ret    
   140008240:	rex push rbx
   140008242:	push   rdi
   140008243:	push   r12
   140008245:	sub    rsp,0x1c0
   14000824c:	mov    r12,rcx
   14000824f:	mov    rcx,rdx
   140008252:	mov    rbx,rdx
   140008255:	call   QWORD PTR [rip+0x183e5]        # 0x140020640
   14000825b:	mov    edi,eax
   14000825d:	cmp    eax,0x1c
   140008260:	je     0x14000828f
   140008262:	call   0x140002d00
   140008267:	mov    ecx,edi
   140008269:	mov    edx,eax
   14000826b:	call   QWORD PTR [rip+0x180a7]        # 0x140020318
   140008271:	test   al,al
   140008273:	jne    0x14000828f
   140008275:	mov    rdx,rbx
   140008278:	mov    rcx,r12
   14000827b:	call   0x140002de0
   140008280:	mov    rax,r12
   140008283:	add    rsp,0x1c0
   14000828a:	pop    r12
   14000828c:	pop    rdi
   14000828d:	pop    rbx
   14000828e:	ret    
   14000828f:	lea    rcx,[rsp+0x150]
   140008297:	mov    rdx,rbx
   14000829a:	mov    QWORD PTR [rsp+0x1e0],rbp
   1400082a2:	call   0x140008060
   1400082a7:	mov    rbx,QWORD PTR [rip+0x184aa]        # 0x140020758
   1400082ae:	lea    rdx,[rsp+0x50]
   1400082b3:	lea    rcx,[rsp+0x150]
   1400082bb:	call   QWORD PTR [rip+0x1804f]        # 0x140020310
   1400082c1:	lea    rdx,[rsp+0xd0]
   1400082c9:	lea    rcx,[rsp+0x150]
   1400082d1:	call   QWORD PTR [rip+0x18031]        # 0x140020308
   1400082d7:	lea    rdx,[rsp+0xd0]
   1400082df:	lea    rcx,[rsp+0x50]
   1400082e4:	call   QWORD PTR [rip+0x18016]        # 0x140020300
   1400082ea:	or     ebp,0xffffffff
   1400082ed:	test   al,al
   1400082ef:	je     0x14000847f
   1400082f5:	mov    QWORD PTR [rsp+0x1e8],rsi
   1400082fd:	mov    QWORD PTR [rsp+0x1f8],r13
   140008305:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140008310:	lea    rdx,[rsp+0x30]
   140008315:	lea    rcx,[rsp+0x50]
   14000831a:	call   QWORD PTR [rip+0x17fd8]        # 0x1400202f8
   140008320:	lea    rdx,[rsp+0x40]
   140008325:	lea    rcx,[rsp+0x50]
   14000832a:	mov    r13,rax
   14000832d:	call   QWORD PTR [rip+0x17fbd]        # 0x1400202f0
   140008333:	lea    rdx,[rsp+0x1f0]
   14000833b:	mov    rcx,rax
   14000833e:	call   QWORD PTR [rip+0x17fa4]        # 0x1400202e8
   140008344:	mov    ecx,DWORD PTR [rbx]
   140008346:	mov    rsi,rax
   140008349:	cmp    ecx,0x1
   14000834c:	je     0x1400083aa
   14000834e:	test   ecx,ecx
   140008350:	je     0x1400083aa
   140008352:	call   QWORD PTR [rip+0x183d8]        # 0x140020730
   140008358:	mov    rcx,QWORD PTR [rbx+0x10]
   14000835c:	mov    rdi,rax
   14000835f:	test   rcx,rcx
   140008362:	je     0x14000837b
   140008364:	mov    rdx,rax
   140008367:	call   0x140001210
   14000836c:	lea    rcx,[rdi+0x8]
   140008370:	mov    QWORD PTR [rdi+0x10],rax
   140008374:	and    QWORD PTR [rax],0x3
   140008378:	or     QWORD PTR [rax],rcx
   14000837b:	mov    eax,DWORD PTR [rbx]
   14000837d:	test   eax,eax
   14000837f:	je     0x140008396
   140008381:	cmp    eax,0xffffffff
   140008384:	je     0x14000839e
   140008386:	mov    eax,ebp
   140008388:	lock xadd DWORD PTR [rbx],eax
   14000838c:	add    eax,0xffffffff
   14000838f:	setne  al
   140008392:	test   al,al
   140008394:	jne    0x14000839e
   140008396:	mov    rcx,rbx
   140008399:	call   0x1400022f0
   14000839e:	mov    rcx,rdi
   1400083a1:	mov    rbx,rdi
   1400083a4:	call   QWORD PTR [rip+0x182c6]        # 0x140020670
   1400083aa:	mov    rdi,QWORD PTR [rbx+0x10]
   1400083ae:	lea    r9,[rbx+0x8]
   1400083b2:	mov    al,0x1
   1400083b4:	test   rdi,rdi
   1400083b7:	je     0x1400083e8
   1400083b9:	nop    DWORD PTR [rax+0x0]
   1400083c0:	lea    rcx,[rdi+0x18]
   1400083c4:	mov    rdx,rsi
   1400083c7:	call   QWORD PTR [rip+0x18343]        # 0x140020710
   1400083cd:	mov    r9,rdi
   1400083d0:	test   al,al
   1400083d2:	sete   al
   1400083d5:	test   al,al
   1400083d7:	je     0x1400083df
   1400083d9:	mov    rdi,QWORD PTR [rdi+0x8]
   1400083dd:	jmp    0x1400083e3
   1400083df:	mov    rdi,QWORD PTR [rdi+0x10]
   1400083e3:	test   rdi,rdi
   1400083e6:	jne    0x1400083c0
   1400083e8:	mov    edx,0x30
   1400083ed:	mov    rcx,rbx
   1400083f0:	mov    BYTE PTR [rsp+0x20],al
   1400083f4:	lea    r8d,[rdx-0x28]
   1400083f8:	call   QWORD PTR [rip+0x1832a]        # 0x140020728
   1400083fe:	mov    rdi,rax
   140008401:	lea    rcx,[rax+0x18]
   140008405:	test   rcx,rcx
   140008408:	je     0x140008413
   14000840a:	mov    rdx,rsi
   14000840d:	call   QWORD PTR [rip+0x18385]        # 0x140020798
   140008413:	lea    rcx,[rdi+0x20]
   140008417:	test   rcx,rcx
   14000841a:	je     0x140008425
   14000841c:	mov    rdx,r13
   14000841f:	call   QWORD PTR [rip+0x18313]        # 0x140020738
   140008425:	lea    rcx,[rsp+0x1f0]
   14000842d:	call   QWORD PTR [rip+0x1834d]        # 0x140020780
   140008433:	lea    rcx,[rsp+0x40]
   140008438:	call   QWORD PTR [rip+0x1830a]        # 0x140020748
   14000843e:	lea    rcx,[rsp+0x30]
   140008443:	call   QWORD PTR [rip+0x182ff]        # 0x140020748
   140008449:	lea    rcx,[rsp+0x50]
   14000844e:	call   QWORD PTR [rip+0x17e8c]        # 0x1400202e0
   140008454:	lea    rdx,[rsp+0xd0]
   14000845c:	lea    rcx,[rsp+0x50]
   140008461:	call   QWORD PTR [rip+0x17e99]        # 0x140020300
   140008467:	test   al,al
   140008469:	jne    0x140008310
   14000846f:	mov    r13,QWORD PTR [rsp+0x1f8]
   140008477:	mov    rsi,QWORD PTR [rsp+0x1e8]
   14000847f:	lea    rcx,[rsp+0xd0]
   140008487:	call   QWORD PTR [rip+0x17e4b]        # 0x1400202d8
   14000848d:	lea    rcx,[rsp+0x50]
   140008492:	call   QWORD PTR [rip+0x17e40]        # 0x1400202d8
   140008498:	mov    r11d,DWORD PTR [rbx]
   14000849b:	test   r11d,r11d
   14000849e:	je     0x1400084b0
   1400084a0:	cmp    r11d,0xffffffff
   1400084a4:	je     0x1400084aa
   1400084a6:	lock add DWORD PTR [rbx],0x1
   1400084aa:	mov    QWORD PTR [r12],rbx
   1400084ae:	jmp    0x1400084f4
   1400084b0:	call   QWORD PTR [rip+0x1827a]        # 0x140020730
   1400084b6:	mov    QWORD PTR [r12],rax
   1400084ba:	mov    rcx,QWORD PTR [rbx+0x10]
   1400084be:	test   rcx,rcx
   1400084c1:	je     0x1400084f4
   1400084c3:	mov    rdx,rax
   1400084c6:	call   0x140001210
   1400084cb:	mov    rcx,QWORD PTR [r12]
   1400084cf:	mov    QWORD PTR [rcx+0x10],rax
   1400084d3:	mov    rax,QWORD PTR [r12]
   1400084d7:	mov    rdx,QWORD PTR [rax+0x10]
   1400084db:	lea    rcx,[rax+0x8]
   1400084df:	mov    eax,DWORD PTR [rdx]
   1400084e1:	and    eax,0x3
   1400084e4:	or     rcx,rax
   1400084e7:	mov    QWORD PTR [rdx],rcx
   1400084ea:	mov    rcx,QWORD PTR [r12]
   1400084ee:	call   QWORD PTR [rip+0x1817c]        # 0x140020670
   1400084f4:	mov    eax,DWORD PTR [rbx]
   1400084f6:	test   eax,eax
   1400084f8:	je     0x14000850a
   1400084fa:	cmp    eax,0xffffffff
   1400084fd:	je     0x14000855f
   1400084ff:	lock add DWORD PTR [rbx],0xffffffff
   140008503:	setne  al
   140008506:	test   al,al
   140008508:	jne    0x14000855f
   14000850a:	mov    rdi,QWORD PTR [rbx+0x10]
   14000850e:	test   rdi,rdi
   140008511:	je     0x140008556
   140008513:	lea    rcx,[rdi+0x18]
   140008517:	call   QWORD PTR [rip+0x18263]        # 0x140020780
   14000851d:	lea    rcx,[rdi+0x20]
   140008521:	call   QWORD PTR [rip+0x18221]        # 0x140020748
   140008527:	mov    rcx,QWORD PTR [rdi+0x8]
   14000852b:	test   rcx,rcx
   14000852e:	je     0x140008535
   140008530:	call   0x140001fd0
   140008535:	mov    rcx,QWORD PTR [rdi+0x10]
   140008539:	test   rcx,rcx
   14000853c:	je     0x140008543
   14000853e:	call   0x140001fd0
   140008543:	mov    rdx,QWORD PTR [rbx+0x10]
   140008547:	mov    r8d,0x8
   14000854d:	mov    rcx,rbx
   140008550:	call   QWORD PTR [rip+0x1812a]        # 0x140020680
   140008556:	mov    rcx,rbx
   140008559:	call   QWORD PTR [rip+0x18129]        # 0x140020688
   14000855f:	mov    rbp,QWORD PTR [rsp+0x1e0]
   140008567:	mov    rax,r12
   14000856a:	add    rsp,0x1c0
   140008571:	pop    r12
   140008573:	pop    rdi
   140008574:	pop    rbx
   140008575:	ret    
   140008576:	int3   
   140008577:	int3   
   140008578:	int3   
   140008579:	int3   
   14000857a:	int3   
   14000857b:	int3   
   14000857c:	int3   
   14000857d:	int3   
   14000857e:	int3   
   14000857f:	int3   
   140008580:	mov    QWORD PTR [rsp+0x8],rcx
   140008585:	push   rbx
   140008586:	push   rbp
   140008587:	push   rsi
   140008588:	push   rdi
   140008589:	push   r14
   14000858b:	push   r15
   14000858d:	sub    rsp,0x368
   140008594:	mov    rax,QWORD PTR [rip+0x181c5]        # 0x140020760
   14000859b:	mov    QWORD PTR [rsp+0x358],r13
   1400085a3:	mov    rbx,rdx
   1400085a6:	mov    QWORD PTR [rcx],rax
   1400085a9:	mov    rdi,QWORD PTR [rdx]
   1400085ac:	mov    r15,rcx
   1400085af:	mov    QWORD PTR [rsp+0x38],rdi
   1400085b4:	mov    eax,DWORD PTR [rdi]
   1400085b6:	test   eax,eax
   1400085b8:	je     0x1400085ca
   1400085ba:	cmp    eax,0xffffffff
   1400085bd:	je     0x140008634
   1400085bf:	lock add DWORD PTR [rdi],0x1
   1400085c3:	mov    rdi,QWORD PTR [rsp+0x38]
   1400085c8:	jmp    0x140008634
   1400085ca:	mov    edx,DWORD PTR [rdi+0x4]
   1400085cd:	lea    rcx,[rsp+0x38]
   1400085d2:	call   QWORD PTR [rip+0x180a0]        # 0x140020678
   1400085d8:	mov    rdi,QWORD PTR [rsp+0x38]
   1400085dd:	mov    rdx,QWORD PTR [rbx]
   1400085e0:	movsxd rax,DWORD PTR [rdx+0x8]
   1400085e4:	lea    rsi,[rdx+rax*8+0x10]
   1400085e9:	movsxd rax,DWORD PTR [rdi+0xc]
   1400085ed:	lea    rbp,[rdi+rax*8+0x10]
   1400085f2:	movsxd rax,DWORD PTR [rdi+0x8]
   1400085f6:	lea    rbx,[rdi+rax*8+0x10]
   1400085fb:	cmp    rbx,rbp
   1400085fe:	je     0x140008634
   140008600:	mov    ecx,0x10
   140008605:	call   0x14001ee64
   14000860a:	test   rax,rax
   14000860d:	je     0x14000861d
   14000860f:	mov    rdx,QWORD PTR [rsi]
   140008612:	mov    rcx,rax
   140008615:	call   QWORD PTR [rip+0x1811d]        # 0x140020738
   14000861b:	jmp    0x14000861f
   14000861d:	xor    eax,eax
   14000861f:	mov    QWORD PTR [rbx],rax
   140008622:	add    rbx,0x8
   140008626:	add    rsi,0x8
   14000862a:	cmp    rbx,rbp
   14000862d:	jne    0x140008600
   14000862f:	mov    rdi,QWORD PTR [rsp+0x38]
   140008634:	mov    eax,DWORD PTR [rdi+0xc]
   140008637:	xor    r13d,r13d
   14000863a:	or     r14,0xffffffffffffffff
   14000863e:	sub    eax,DWORD PTR [rdi+0x8]
   140008641:	mov    DWORD PTR [rsp+0x3b0],r13d
   140008649:	mov    QWORD PTR [rsp+0x60],r13
   14000864e:	test   eax,eax
   140008650:	jle    0x140009ee2
   140008656:	mov    QWORD PTR [rsp+0x360],r12
   14000865e:	xchg   ax,ax
   140008660:	mov    eax,DWORD PTR [rdi]
   140008662:	cmp    eax,0x1
   140008665:	je     0x140008761
   14000866b:	test   eax,eax
   14000866d:	je     0x140008761
   140008673:	movsxd rax,DWORD PTR [rdi+0x8]
   140008677:	mov    edx,DWORD PTR [rdi+0x4]
   14000867a:	lea    rcx,[rsp+0x38]
   14000867f:	lea    rsi,[rdi+rax*8+0x10]
   140008684:	call   QWORD PTR [rip+0x17fee]        # 0x140020678
   14000868a:	mov    rdi,QWORD PTR [rsp+0x38]
   14000868f:	movsxd rcx,DWORD PTR [rdi+0xc]
   140008693:	mov    r12,rax
   140008696:	lea    rbp,[rdi+rcx*8+0x10]
   14000869b:	movsxd rcx,DWORD PTR [rdi+0x8]
   14000869f:	lea    rbx,[rdi+rcx*8+0x10]
   1400086a4:	cmp    rbx,rbp
   1400086a7:	je     0x1400086e4
   1400086a9:	nop    DWORD PTR [rax+0x0]
   1400086b0:	mov    ecx,0x10
   1400086b5:	call   0x14001ee64
   1400086ba:	test   rax,rax
   1400086bd:	je     0x1400086cd
   1400086bf:	mov    rdx,QWORD PTR [rsi]
   1400086c2:	mov    rcx,rax
   1400086c5:	call   QWORD PTR [rip+0x1806d]        # 0x140020738
   1400086cb:	jmp    0x1400086cf
   1400086cd:	xor    eax,eax
   1400086cf:	mov    QWORD PTR [rbx],rax
   1400086d2:	add    rbx,0x8
   1400086d6:	add    rsi,0x8
   1400086da:	cmp    rbx,rbp
   1400086dd:	jne    0x1400086b0
   1400086df:	mov    rdi,QWORD PTR [rsp+0x38]
   1400086e4:	mov    eax,DWORD PTR [r12]
   1400086e8:	test   eax,eax
   1400086ea:	je     0x14000870b
   1400086ec:	cmp    eax,0xffffffff
   1400086ef:	je     0x140008761
   1400086f1:	mov    eax,r14d
   1400086f4:	lock xadd DWORD PTR [r12],eax
   1400086fa:	add    eax,0xffffffff
   1400086fd:	setne  al
   140008700:	test   al,al
   140008702:	je     0x14000870b
   140008704:	mov    rdi,QWORD PTR [rsp+0x38]
   140008709:	jmp    0x140008761
   14000870b:	movsxd rax,DWORD PTR [r12+0xc]
   140008710:	lea    rdi,[r12+rax*8+0x10]
   140008715:	movsxd rax,DWORD PTR [r12+0x8]
   14000871a:	lea    rsi,[r12+rax*8+0x10]
   14000871f:	cmp    rsi,rdi
   140008722:	je     0x140008753
   140008724:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140008730:	mov    rbx,QWORD PTR [rdi-0x8]
   140008734:	sub    rdi,0x8
   140008738:	test   rbx,rbx
   14000873b:	je     0x14000874e
   14000873d:	mov    rcx,rbx
   140008740:	call   QWORD PTR [rip+0x18002]        # 0x140020748
   140008746:	mov    rcx,rbx
   140008749:	call   0x14001ee46
   14000874e:	cmp    rdi,rsi
   140008751:	jne    0x140008730
   140008753:	mov    rcx,r12
   140008756:	call   QWORD PTR [rip+0x17f74]        # 0x1400206d0
   14000875c:	mov    rdi,QWORD PTR [rsp+0x38]
   140008761:	movsxd rdx,DWORD PTR [rdi+0x8]
   140008765:	lea    rcx,[rsp+0x3b8]
   14000876d:	add    rdx,QWORD PTR [rsp+0x60]
   140008772:	mov    rdx,QWORD PTR [rdi+rdx*8+0x10]
   140008777:	call   0x140008240
   14000877c:	lea    rdx,[rip+0x182c5]        # 0x140020a48
   140008783:	xor    eax,eax
   140008785:	mov    rdi,rdx
   140008788:	mov    QWORD PTR [rsp+0x158],rdx
   140008790:	mov    rcx,r14
   140008793:	repnz scas al,BYTE PTR es:[rdi]
   140008795:	lea    rdx,[rsp+0x280]
   14000879d:	not    rcx
   1400087a0:	dec    rcx
   1400087a3:	mov    DWORD PTR [rsp+0x150],ecx
   1400087aa:	lea    rcx,[rsp+0x200]
   1400087b2:	movaps xmm0,XMMWORD PTR [rsp+0x150]
   1400087ba:	movdqa XMMWORD PTR [rsp+0x280],xmm0
   1400087c3:	call   QWORD PTR [rip+0x17b77]        # 0x140020340
   1400087c9:	lea    rdx,[rip+0x18294]        # 0x140020a64
   1400087d0:	lea    rcx,[rsp+0xb8]
   1400087d8:	mov    r8d,0x4
   1400087de:	call   QWORD PTR [rip+0x17d9c]        # 0x140020580
   1400087e4:	mov    rcx,QWORD PTR [rsp+0x3b8]
   1400087ec:	mov    edx,DWORD PTR [rcx]
   1400087ee:	mov    r12,rax
   1400087f1:	cmp    edx,0x1
   1400087f4:	je     0x14000887c
   1400087fa:	test   edx,edx
   1400087fc:	je     0x14000887c
   1400087fe:	call   QWORD PTR [rip+0x17f2c]        # 0x140020730
   140008804:	mov    rcx,QWORD PTR [rsp+0x3b8]
   14000880c:	mov    r8,QWORD PTR [rcx+0x10]
   140008810:	mov    rdi,rax
   140008813:	test   r8,r8
   140008816:	je     0x14000883a
   140008818:	mov    rdx,rax
   14000881b:	mov    rcx,r8
   14000881e:	call   0x140001210
   140008823:	lea    rcx,[rdi+0x8]
   140008827:	mov    QWORD PTR [rdi+0x10],rax
   14000882b:	and    QWORD PTR [rax],0x3
   14000882f:	or     QWORD PTR [rax],rcx
   140008832:	mov    rcx,QWORD PTR [rsp+0x3b8]
   14000883a:	mov    eax,DWORD PTR [rcx]
   14000883c:	test   eax,eax
   14000883e:	je     0x14000885e
   140008840:	cmp    eax,0xffffffff
   140008843:	je     0x140008863
   140008845:	mov    eax,r14d
   140008848:	lock xadd DWORD PTR [rcx],eax
   14000884c:	add    eax,0xffffffff
   14000884f:	setne  al
   140008852:	test   al,al
   140008854:	jne    0x140008863
   140008856:	mov    rcx,QWORD PTR [rsp+0x3b8]
   14000885e:	call   0x1400022f0
   140008863:	mov    rcx,rdi
   140008866:	mov    QWORD PTR [rsp+0x3b8],rdi
   14000886e:	call   QWORD PTR [rip+0x17dfc]        # 0x140020670
   140008874:	mov    rcx,QWORD PTR [rsp+0x3b8]
   14000887c:	mov    rdi,QWORD PTR [rcx+0x10]
   140008880:	test   rdi,rdi
   140008883:	je     0x1400088d2
   140008885:	xor    ebx,ebx
   140008887:	nop    WORD PTR [rax+rax*1+0x0]
   140008890:	lea    rcx,[rdi+0x18]
   140008894:	mov    rdx,r12
   140008897:	call   QWORD PTR [rip+0x17e73]        # 0x140020710
   14000889d:	test   al,al
   14000889f:	jne    0x1400088aa
   1400088a1:	mov    rbx,rdi
   1400088a4:	mov    rdi,QWORD PTR [rdi+0x8]
   1400088a8:	jmp    0x1400088ae
   1400088aa:	mov    rdi,QWORD PTR [rdi+0x10]
   1400088ae:	test   rdi,rdi
   1400088b1:	jne    0x140008890
   1400088b3:	test   rbx,rbx
   1400088b6:	je     0x1400088d2
   1400088b8:	lea    rdx,[rbx+0x18]
   1400088bc:	mov    rcx,r12
   1400088bf:	call   QWORD PTR [rip+0x17e4b]        # 0x140020710
   1400088c5:	test   al,al
   1400088c7:	jne    0x1400088d2
   1400088c9:	add    rbx,0x20
   1400088cd:	jmp    0x140008a51
   1400088d2:	lea    rcx,[rsp+0x318]
   1400088da:	call   QWORD PTR [rip+0x17cf8]        # 0x1400205d8
   1400088e0:	mov    rcx,QWORD PTR [rsp+0x3b8]
   1400088e8:	mov    edx,DWORD PTR [rcx]
   1400088ea:	mov    r13,rax
   1400088ed:	cmp    edx,0x1
   1400088f0:	je     0x140008978
   1400088f6:	test   edx,edx
   1400088f8:	je     0x140008978
   1400088fa:	call   QWORD PTR [rip+0x17e30]        # 0x140020730
   140008900:	mov    rcx,QWORD PTR [rsp+0x3b8]
   140008908:	mov    r8,QWORD PTR [rcx+0x10]
   14000890c:	mov    rdi,rax
   14000890f:	test   r8,r8
   140008912:	je     0x140008936
   140008914:	mov    rdx,rax
   140008917:	mov    rcx,r8
   14000891a:	call   0x140001210
   14000891f:	lea    rcx,[rdi+0x8]
   140008923:	mov    QWORD PTR [rdi+0x10],rax
   140008927:	and    QWORD PTR [rax],0x3
   14000892b:	or     QWORD PTR [rax],rcx
   14000892e:	mov    rcx,QWORD PTR [rsp+0x3b8]
   140008936:	mov    eax,DWORD PTR [rcx]
   140008938:	test   eax,eax
   14000893a:	je     0x14000895a
   14000893c:	cmp    eax,0xffffffff
   14000893f:	je     0x14000895f
   140008941:	mov    eax,r14d
   140008944:	lock xadd DWORD PTR [rcx],eax
   140008948:	add    eax,0xffffffff
   14000894b:	setne  al
   14000894e:	test   al,al
   140008950:	jne    0x14000895f
   140008952:	mov    rcx,QWORD PTR [rsp+0x3b8]
   14000895a:	call   0x1400022f0
   14000895f:	mov    rcx,rdi
   140008962:	mov    QWORD PTR [rsp+0x3b8],rdi
   14000896a:	call   QWORD PTR [rip+0x17d00]        # 0x140020670
   140008970:	mov    rcx,QWORD PTR [rsp+0x3b8]
   140008978:	mov    rbx,QWORD PTR [rcx+0x10]
   14000897c:	xor    edi,edi
   14000897e:	lea    rbp,[rcx+0x8]
   140008982:	mov    sil,0x1
   140008985:	test   rbx,rbx
   140008988:	je     0x1400089f1
   14000898a:	nop    WORD PTR [rax+rax*1+0x0]
   140008990:	lea    rcx,[rbx+0x18]
   140008994:	mov    rdx,r12
   140008997:	mov    rbp,rbx
   14000899a:	call   QWORD PTR [rip+0x17d70]        # 0x140020710
   1400089a0:	test   al,al
   1400089a2:	jne    0x1400089b0
   1400089a4:	mov    rdi,rbx
   1400089a7:	mov    rbx,QWORD PTR [rbx+0x8]
   1400089ab:	mov    sil,0x1
   1400089ae:	jmp    0x1400089b7
   1400089b0:	mov    rbx,QWORD PTR [rbx+0x10]
   1400089b4:	xor    sil,sil
   1400089b7:	test   rbx,rbx
   1400089ba:	jne    0x140008990
   1400089bc:	test   rdi,rdi
   1400089bf:	je     0x1400089e9
   1400089c1:	lea    rdx,[rdi+0x18]
   1400089c5:	mov    rcx,r12
   1400089c8:	call   QWORD PTR [rip+0x17d42]        # 0x140020710
   1400089ce:	test   al,al
   1400089d0:	jne    0x1400089e9
   1400089d2:	lea    rcx,[rdi+0x20]
   1400089d6:	mov    rdx,r13
   1400089d9:	call   QWORD PTR [rip+0x17c49]        # 0x140020628
   1400089df:	mov    QWORD PTR [rsp+0x110],rdi
   1400089e7:	jmp    0x140008a37
   1400089e9:	mov    rcx,QWORD PTR [rsp+0x3b8]
   1400089f1:	mov    edx,0x30
   1400089f6:	mov    r9,rbp
   1400089f9:	mov    BYTE PTR [rsp+0x20],sil
   1400089fe:	lea    r8d,[rdx-0x28]
   140008a02:	call   QWORD PTR [rip+0x17d20]        # 0x140020728
   140008a08:	mov    rdi,rax
   140008a0b:	lea    rcx,[rax+0x18]
   140008a0f:	test   rcx,rcx
   140008a12:	je     0x140008a1d
   140008a14:	mov    rdx,r12
   140008a17:	call   QWORD PTR [rip+0x17d7b]        # 0x140020798
   140008a1d:	lea    rcx,[rdi+0x20]
   140008a21:	test   rcx,rcx
   140008a24:	je     0x140008a2f
   140008a26:	mov    rdx,r13
   140008a29:	call   QWORD PTR [rip+0x17d09]        # 0x140020738
   140008a2f:	mov    QWORD PTR [rsp+0x110],rdi
   140008a37:	lea    rcx,[rsp+0x318]
   140008a3f:	lea    rbx,[rdi+0x20]
   140008a43:	call   QWORD PTR [rip+0x17cff]        # 0x140020748
   140008a49:	mov    r13d,DWORD PTR [rsp+0x3b0]
   140008a51:	lea    rdx,[rsp+0x200]
   140008a59:	mov    rcx,rbx
   140008a5c:	call   QWORD PTR [rip+0x17cb6]        # 0x140020718
   140008a62:	lea    rcx,[rsp+0xb8]
   140008a6a:	movzx  edi,al
   140008a6d:	call   QWORD PTR [rip+0x17d0d]        # 0x140020780
   140008a73:	lea    rcx,[rsp+0x200]
   140008a7b:	call   QWORD PTR [rip+0x17cc7]        # 0x140020748
   140008a81:	test   dil,dil
   140008a84:	je     0x140009e51
   140008a8a:	lea    rcx,[rsp+0x2f8]
   140008a92:	call   QWORD PTR [rip+0x17b40]        # 0x1400205d8
   140008a98:	lea    rdx,[rip+0x17fa1]        # 0x140020a40
   140008a9f:	lea    rcx,[rsp+0x138]
   140008aa7:	mov    r8d,0x7
   140008aad:	mov    rbp,rax
   140008ab0:	call   QWORD PTR [rip+0x17aca]        # 0x140020580
   140008ab6:	mov    rcx,QWORD PTR [rsp+0x3b8]
   140008abe:	mov    rdi,QWORD PTR [rcx+0x10]
   140008ac2:	mov    rsi,rax
   140008ac5:	test   rdi,rdi
   140008ac8:	je     0x140008b0d
   140008aca:	xor    ebx,ebx
   140008acc:	nop    DWORD PTR [rax+0x0]
   140008ad0:	lea    rcx,[rdi+0x18]
   140008ad4:	mov    rdx,rsi
   140008ad7:	call   QWORD PTR [rip+0x17c33]        # 0x140020710
   140008add:	test   al,al
   140008adf:	jne    0x140008aea
   140008ae1:	mov    rbx,rdi
   140008ae4:	mov    rdi,QWORD PTR [rdi+0x8]
   140008ae8:	jmp    0x140008aee
   140008aea:	mov    rdi,QWORD PTR [rdi+0x10]
   140008aee:	test   rdi,rdi
   140008af1:	jne    0x140008ad0
   140008af3:	test   rbx,rbx
   140008af6:	je     0x140008b0d
   140008af8:	lea    rdx,[rbx+0x18]
   140008afc:	mov    rcx,rsi
   140008aff:	call   QWORD PTR [rip+0x17c0b]        # 0x140020710
   140008b05:	test   al,al
   140008b07:	jne    0x140008b0d
   140008b09:	lea    rbp,[rbx+0x20]
   140008b0d:	lea    rcx,[rsp+0x1e0]
   140008b15:	mov    rdx,rbp
   140008b18:	call   QWORD PTR [rip+0x17c1a]        # 0x140020738
   140008b1e:	lea    rcx,[rsp+0x2a0]
   140008b26:	call   QWORD PTR [rip+0x17aac]        # 0x1400205d8
   140008b2c:	lea    rdx,[rip+0x17f49]        # 0x140020a7c
   140008b33:	lea    rcx,[rsp+0x128]
   140008b3b:	mov    r8d,0x4
   140008b41:	mov    rbp,rax
   140008b44:	call   QWORD PTR [rip+0x17a36]        # 0x140020580
   140008b4a:	mov    rcx,QWORD PTR [rsp+0x3b8]
   140008b52:	mov    rdi,QWORD PTR [rcx+0x10]
   140008b56:	mov    rsi,rax
   140008b59:	test   rdi,rdi
   140008b5c:	je     0x140008b9d
   140008b5e:	xor    ebx,ebx
   140008b60:	lea    rcx,[rdi+0x18]
   140008b64:	mov    rdx,rsi
   140008b67:	call   QWORD PTR [rip+0x17ba3]        # 0x140020710
   140008b6d:	test   al,al
   140008b6f:	jne    0x140008b7a
   140008b71:	mov    rbx,rdi
   140008b74:	mov    rdi,QWORD PTR [rdi+0x8]
   140008b78:	jmp    0x140008b7e
   140008b7a:	mov    rdi,QWORD PTR [rdi+0x10]
   140008b7e:	test   rdi,rdi
   140008b81:	jne    0x140008b60
   140008b83:	test   rbx,rbx
   140008b86:	je     0x140008b9d
   140008b88:	lea    rdx,[rbx+0x18]
   140008b8c:	mov    rcx,rsi
   140008b8f:	call   QWORD PTR [rip+0x17b7b]        # 0x140020710
   140008b95:	test   al,al
   140008b97:	jne    0x140008b9d
   140008b99:	lea    rbp,[rbx+0x20]
   140008b9d:	lea    rcx,[rsp+0x180]
   140008ba5:	mov    rdx,rbp
   140008ba8:	call   QWORD PTR [rip+0x17b8a]        # 0x140020738
   140008bae:	lea    rdx,[rsp+0xc0]
   140008bb6:	lea    rcx,[rsp+0x1e0]
   140008bbe:	call   QWORD PTR [rip+0x17724]        # 0x1400202e8
   140008bc4:	lea    rdx,[rsp+0xb0]
   140008bcc:	lea    rcx,[rsp+0x180]
   140008bd4:	mov    rdi,rax
   140008bd7:	call   QWORD PTR [rip+0x1770b]        # 0x1400202e8
   140008bdd:	lea    rcx,[rsp+0x58]
   140008be2:	mov    rdx,rax
   140008be5:	mov    r8,rdi
   140008be8:	call   0x140004dd0
   140008bed:	lea    rcx,[rsp+0xb0]
   140008bf5:	call   QWORD PTR [rip+0x17b85]        # 0x140020780
   140008bfb:	lea    rcx,[rsp+0x180]
   140008c03:	call   QWORD PTR [rip+0x17b3f]        # 0x140020748
   140008c09:	lea    rcx,[rsp+0x128]
   140008c11:	call   QWORD PTR [rip+0x17b69]        # 0x140020780
   140008c17:	lea    rcx,[rsp+0x2a0]
   140008c1f:	call   QWORD PTR [rip+0x17b23]        # 0x140020748
   140008c25:	lea    rcx,[rsp+0xc0]
   140008c2d:	call   QWORD PTR [rip+0x17b4d]        # 0x140020780
   140008c33:	lea    rcx,[rsp+0x1e0]
   140008c3b:	call   QWORD PTR [rip+0x17b07]        # 0x140020748
   140008c41:	lea    rcx,[rsp+0x138]
   140008c49:	call   QWORD PTR [rip+0x17b31]        # 0x140020780
   140008c4f:	lea    rcx,[rsp+0x2f8]
   140008c57:	call   QWORD PTR [rip+0x17aeb]        # 0x140020748
   140008c5d:	mov    rdx,QWORD PTR [rsp+0x58]
   140008c62:	cmp    DWORD PTR [rdx+0x4],0x0
   140008c66:	je     0x140008db0
   140008c6c:	lea    rdx,[rsp+0x58]
   140008c71:	lea    rcx,[rsp+0x1a0]
   140008c79:	call   QWORD PTR [rip+0x178f9]        # 0x140020578
   140008c7f:	lea    rdx,[rip+0x17dca]        # 0x140020a50
   140008c86:	lea    rcx,[rsp+0xd8]
   140008c8e:	mov    r8d,0x4
   140008c94:	call   QWORD PTR [rip+0x178e6]        # 0x140020580
   140008c9a:	mov    rcx,QWORD PTR [rsp+0x3b8]
   140008ca2:	mov    edx,DWORD PTR [rcx]
   140008ca4:	mov    rbx,rax
   140008ca7:	cmp    edx,0x1
   140008caa:	je     0x140008d32
   140008cb0:	test   edx,edx
   140008cb2:	je     0x140008d32
   140008cb4:	call   QWORD PTR [rip+0x17a76]        # 0x140020730
   140008cba:	mov    rcx,QWORD PTR [rsp+0x3b8]
   140008cc2:	mov    r8,QWORD PTR [rcx+0x10]
   140008cc6:	mov    rdi,rax
   140008cc9:	test   r8,r8
   140008ccc:	je     0x140008cf0
   140008cce:	mov    rdx,rax
   140008cd1:	mov    rcx,r8
   140008cd4:	call   0x140001210
   140008cd9:	lea    rcx,[rdi+0x8]
   140008cdd:	mov    QWORD PTR [rdi+0x10],rax
   140008ce1:	and    QWORD PTR [rax],0x3
   140008ce5:	or     QWORD PTR [rax],rcx
   140008ce8:	mov    rcx,QWORD PTR [rsp+0x3b8]
   140008cf0:	mov    eax,DWORD PTR [rcx]
   140008cf2:	test   eax,eax
   140008cf4:	je     0x140008d14
   140008cf6:	cmp    eax,0xffffffff
   140008cf9:	je     0x140008d19
   140008cfb:	mov    eax,r14d
   140008cfe:	lock xadd DWORD PTR [rcx],eax
   140008d02:	add    eax,0xffffffff
   140008d05:	setne  al
   140008d08:	test   al,al
   140008d0a:	jne    0x140008d19
   140008d0c:	mov    rcx,QWORD PTR [rsp+0x3b8]
   140008d14:	call   0x1400022f0
   140008d19:	mov    rcx,rdi
   140008d1c:	mov    QWORD PTR [rsp+0x3b8],rdi
   140008d24:	call   QWORD PTR [rip+0x17946]        # 0x140020670
   140008d2a:	mov    rcx,QWORD PTR [rsp+0x3b8]
   140008d32:	mov    rdx,rbx
   140008d35:	call   0x140001c60
   140008d3a:	test   rax,rax
   140008d3d:	jne    0x140008d7f
   140008d3f:	lea    rcx,[rsp+0x2c0]
   140008d47:	call   QWORD PTR [rip+0x1788b]        # 0x1400205d8
   140008d4d:	lea    rdx,[rsp+0x338]
   140008d55:	lea    rcx,[rsp+0x3b8]
   140008d5d:	mov    r9,rax
   140008d60:	mov    r8,rbx
   140008d63:	call   0x140003090
   140008d68:	lea    rcx,[rsp+0x2c0]
   140008d70:	mov    rdi,QWORD PTR [rax]
   140008d73:	add    rdi,0x20
   140008d77:	call   QWORD PTR [rip+0x179cb]        # 0x140020748
   140008d7d:	jmp    0x140008d83
   140008d7f:	lea    rdi,[rax+0x20]
   140008d83:	lea    rdx,[rsp+0x1a0]
   140008d8b:	mov    rcx,rdi
   140008d8e:	call   QWORD PTR [rip+0x17894]        # 0x140020628
   140008d94:	lea    rcx,[rsp+0xd8]
   140008d9c:	call   QWORD PTR [rip+0x179de]        # 0x140020780
   140008da2:	lea    rcx,[rsp+0x1a0]
   140008daa:	call   QWORD PTR [rip+0x17998]        # 0x140020748
   140008db0:	lea    rcx,[rsp+0x248]
   140008db8:	call   QWORD PTR [rip+0x1781a]        # 0x1400205d8
   140008dbe:	lea    rdx,[rip+0x17c8b]        # 0x140020a50
   140008dc5:	lea    rcx,[rsp+0x130]
   140008dcd:	mov    r8d,0x4
   140008dd3:	mov    rbp,rax
   140008dd6:	call   QWORD PTR [rip+0x177a4]        # 0x140020580
   140008ddc:	mov    rcx,QWORD PTR [rsp+0x3b8]
   140008de4:	mov    rdi,QWORD PTR [rcx+0x10]
   140008de8:	mov    rsi,rax
   140008deb:	test   rdi,rdi
   140008dee:	je     0x140008e2f
   140008df0:	xor    ebx,ebx
   140008df2:	lea    rcx,[rdi+0x18]
   140008df6:	mov    rdx,rsi
   140008df9:	call   QWORD PTR [rip+0x17911]        # 0x140020710
   140008dff:	test   al,al
   140008e01:	jne    0x140008e0c
   140008e03:	mov    rbx,rdi
   140008e06:	mov    rdi,QWORD PTR [rdi+0x8]
   140008e0a:	jmp    0x140008e10
   140008e0c:	mov    rdi,QWORD PTR [rdi+0x10]
   140008e10:	test   rdi,rdi
   140008e13:	jne    0x140008df2
   140008e15:	test   rbx,rbx
   140008e18:	je     0x140008e2f
   140008e1a:	lea    rdx,[rbx+0x18]
   140008e1e:	mov    rcx,rsi
   140008e21:	call   QWORD PTR [rip+0x178e9]        # 0x140020710
   140008e27:	test   al,al
   140008e29:	jne    0x140008e2f
   140008e2b:	lea    rbp,[rbx+0x20]
   140008e2f:	lea    rcx,[rsp+0x220]
   140008e37:	mov    rdx,rbp
   140008e3a:	call   QWORD PTR [rip+0x178f8]        # 0x140020738
   140008e40:	lea    rdx,[rsp+0x148]
   140008e48:	lea    rcx,[rsp+0x220]
   140008e50:	call   QWORD PTR [rip+0x17492]        # 0x1400202e8
   140008e56:	lea    rcx,[rsp+0x48]
   140008e5b:	mov    rdx,rax
   140008e5e:	call   0x1400073e0
   140008e63:	lea    rcx,[rsp+0x148]
   140008e6b:	call   QWORD PTR [rip+0x1790f]        # 0x140020780
   140008e71:	lea    rcx,[rsp+0x220]
   140008e79:	call   QWORD PTR [rip+0x178c9]        # 0x140020748
   140008e7f:	lea    rcx,[rsp+0x130]
   140008e87:	call   QWORD PTR [rip+0x178f3]        # 0x140020780
   140008e8d:	lea    rcx,[rsp+0x248]
   140008e95:	call   QWORD PTR [rip+0x178ad]        # 0x140020748
   140008e9b:	lea    rcx,[rsp+0x258]
   140008ea3:	call   QWORD PTR [rip+0x1772f]        # 0x1400205d8
   140008ea9:	lea    rdx,[rip+0x17bf8]        # 0x140020aa8
   140008eb0:	lea    rcx,[rsp+0xf0]
   140008eb8:	mov    r8d,0x7
   140008ebe:	mov    rbp,rax
   140008ec1:	call   QWORD PTR [rip+0x176b9]        # 0x140020580
   140008ec7:	mov    r12,QWORD PTR [rsp+0x48]
   140008ecc:	mov    rdi,QWORD PTR [r12+0x10]
   140008ed1:	mov    rsi,rax
   140008ed4:	test   rdi,rdi
   140008ed7:	je     0x140008f1d
   140008ed9:	xor    ebx,ebx
   140008edb:	nop    DWORD PTR [rax+rax*1+0x0]
   140008ee0:	lea    rcx,[rdi+0x18]
   140008ee4:	mov    rdx,rsi
   140008ee7:	call   QWORD PTR [rip+0x17823]        # 0x140020710
   140008eed:	test   al,al
   140008eef:	jne    0x140008efa
   140008ef1:	mov    rbx,rdi
   140008ef4:	mov    rdi,QWORD PTR [rdi+0x8]
   140008ef8:	jmp    0x140008efe
   140008efa:	mov    rdi,QWORD PTR [rdi+0x10]
   140008efe:	test   rdi,rdi
   140008f01:	jne    0x140008ee0
   140008f03:	test   rbx,rbx
   140008f06:	je     0x140008f1d
   140008f08:	lea    rdx,[rbx+0x18]
   140008f0c:	mov    rcx,rsi
   140008f0f:	call   QWORD PTR [rip+0x177fb]        # 0x140020710
   140008f15:	test   al,al
   140008f17:	jne    0x140008f1d
   140008f19:	lea    rbp,[rbx+0x20]
   140008f1d:	lea    rcx,[rsp+0x1c0]
   140008f25:	mov    rdx,rbp
   140008f28:	call   QWORD PTR [rip+0x1780a]        # 0x140020738
   140008f2e:	lea    rdx,[rsp+0x68]
   140008f33:	lea    rcx,[rsp+0x1c0]
   140008f3b:	call   QWORD PTR [rip+0x173a7]        # 0x1400202e8
   140008f41:	lea    rcx,[rsp+0x1c0]
   140008f49:	call   QWORD PTR [rip+0x177f9]        # 0x140020748
   140008f4f:	lea    rcx,[rsp+0xf0]
   140008f57:	call   QWORD PTR [rip+0x17823]        # 0x140020780
   140008f5d:	lea    rcx,[rsp+0x258]
   140008f65:	call   QWORD PTR [rip+0x177dd]        # 0x140020748
   140008f6b:	lea    rcx,[rsp+0x270]
   140008f73:	call   QWORD PTR [rip+0x1765f]        # 0x1400205d8
   140008f79:	lea    rdx,[rip+0x17b18]        # 0x140020a98
   140008f80:	lea    rcx,[rsp+0x120]
   140008f88:	mov    r8d,0xa
   140008f8e:	mov    rbp,rax
   140008f91:	call   QWORD PTR [rip+0x175e9]        # 0x140020580
   140008f97:	mov    rdi,QWORD PTR [r12+0x10]
   140008f9c:	mov    rsi,rax
   140008f9f:	test   rdi,rdi
   140008fa2:	je     0x140008fed
   140008fa4:	xor    ebx,ebx
   140008fa6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140008fb0:	lea    rcx,[rdi+0x18]
   140008fb4:	mov    rdx,rsi
   140008fb7:	call   QWORD PTR [rip+0x17753]        # 0x140020710
   140008fbd:	test   al,al
   140008fbf:	jne    0x140008fca
   140008fc1:	mov    rbx,rdi
   140008fc4:	mov    rdi,QWORD PTR [rdi+0x8]
   140008fc8:	jmp    0x140008fce
   140008fca:	mov    rdi,QWORD PTR [rdi+0x10]
   140008fce:	test   rdi,rdi
   140008fd1:	jne    0x140008fb0
   140008fd3:	test   rbx,rbx
   140008fd6:	je     0x140008fed
   140008fd8:	lea    rdx,[rbx+0x18]
   140008fdc:	mov    rcx,rsi
   140008fdf:	call   QWORD PTR [rip+0x1772b]        # 0x140020710
   140008fe5:	test   al,al
   140008fe7:	jne    0x140008fed
   140008fe9:	lea    rbp,[rbx+0x20]
   140008fed:	lea    rcx,[rsp+0x160]
   140008ff5:	mov    rdx,rbp
   140008ff8:	call   QWORD PTR [rip+0x1773a]        # 0x140020738
   140008ffe:	lea    rdx,[rsp+0x50]
   140009003:	lea    rcx,[rsp+0x160]
   14000900b:	call   QWORD PTR [rip+0x172d7]        # 0x1400202e8
   140009011:	lea    rcx,[rsp+0x160]
   140009019:	call   QWORD PTR [rip+0x17729]        # 0x140020748
   14000901f:	lea    rcx,[rsp+0x120]
   140009027:	call   QWORD PTR [rip+0x17753]        # 0x140020780
   14000902d:	lea    rcx,[rsp+0x270]
   140009035:	call   QWORD PTR [rip+0x1770d]        # 0x140020748
   14000903b:	mov    rdx,QWORD PTR [rsp+0x68]
   140009040:	cmp    DWORD PTR [rdx+0x4],0x0
   140009044:	je     0x14000918e
   14000904a:	lea    rdx,[rsp+0x68]
   14000904f:	lea    rcx,[rsp+0x170]
   140009057:	call   QWORD PTR [rip+0x1751b]        # 0x140020578
   14000905d:	lea    rdx,[rip+0x17aa8]        # 0x140020b0c
   140009064:	lea    rcx,[rsp+0x100]
   14000906c:	mov    r8d,0x6
   140009072:	call   QWORD PTR [rip+0x17508]        # 0x140020580
   140009078:	mov    rcx,QWORD PTR [rsp+0x3b8]
   140009080:	mov    edx,DWORD PTR [rcx]
   140009082:	mov    rbx,rax
   140009085:	cmp    edx,0x1
   140009088:	je     0x140009110
   14000908e:	test   edx,edx
   140009090:	je     0x140009110
   140009092:	call   QWORD PTR [rip+0x17698]        # 0x140020730
   140009098:	mov    rcx,QWORD PTR [rsp+0x3b8]
   1400090a0:	mov    r8,QWORD PTR [rcx+0x10]
   1400090a4:	mov    rdi,rax
   1400090a7:	test   r8,r8
   1400090aa:	je     0x1400090ce
   1400090ac:	mov    rdx,rax
   1400090af:	mov    rcx,r8
   1400090b2:	call   0x140001210
   1400090b7:	lea    rcx,[rdi+0x8]
   1400090bb:	mov    QWORD PTR [rdi+0x10],rax
   1400090bf:	and    QWORD PTR [rax],0x3
   1400090c3:	or     QWORD PTR [rax],rcx
   1400090c6:	mov    rcx,QWORD PTR [rsp+0x3b8]
   1400090ce:	mov    eax,DWORD PTR [rcx]
   1400090d0:	test   eax,eax
   1400090d2:	je     0x1400090f2
   1400090d4:	cmp    eax,0xffffffff
   1400090d7:	je     0x1400090f7
   1400090d9:	mov    eax,r14d
   1400090dc:	lock xadd DWORD PTR [rcx],eax
   1400090e0:	add    eax,0xffffffff
   1400090e3:	setne  al
   1400090e6:	test   al,al
   1400090e8:	jne    0x1400090f7
   1400090ea:	mov    rcx,QWORD PTR [rsp+0x3b8]
   1400090f2:	call   0x1400022f0
   1400090f7:	mov    rcx,rdi
   1400090fa:	mov    QWORD PTR [rsp+0x3b8],rdi
   140009102:	call   QWORD PTR [rip+0x17568]        # 0x140020670
   140009108:	mov    rcx,QWORD PTR [rsp+0x3b8]
   140009110:	mov    rdx,rbx
   140009113:	call   0x140001c60
   140009118:	test   rax,rax
   14000911b:	jne    0x14000915d
   14000911d:	lea    rcx,[rsp+0x290]
   140009125:	call   QWORD PTR [rip+0x174ad]        # 0x1400205d8
   14000912b:	lea    rdx,[rsp+0x340]
   140009133:	lea    rcx,[rsp+0x3b8]
   14000913b:	mov    r9,rax
   14000913e:	mov    r8,rbx
   140009141:	call   0x140003090
   140009146:	lea    rcx,[rsp+0x290]
   14000914e:	mov    rdi,QWORD PTR [rax]
   140009151:	add    rdi,0x20
   140009155:	call   QWORD PTR [rip+0x175ed]        # 0x140020748
   14000915b:	jmp    0x140009161
   14000915d:	lea    rdi,[rax+0x20]
   140009161:	lea    rdx,[rsp+0x170]
   140009169:	mov    rcx,rdi
   14000916c:	call   QWORD PTR [rip+0x174b6]        # 0x140020628
   140009172:	lea    rcx,[rsp+0x100]
   14000917a:	call   QWORD PTR [rip+0x17600]        # 0x140020780
   140009180:	lea    rcx,[rsp+0x170]
   140009188:	call   QWORD PTR [rip+0x175ba]        # 0x140020748
   14000918e:	mov    rax,QWORD PTR [rsp+0x50]
   140009193:	cmp    DWORD PTR [rax+0x4],0x0
   140009197:	je     0x1400092e1
   14000919d:	lea    rdx,[rsp+0x50]
   1400091a2:	lea    rcx,[rsp+0x190]
   1400091aa:	call   QWORD PTR [rip+0x173c8]        # 0x140020578
   1400091b0:	lea    rdx,[rip+0x17949]        # 0x140020b00
   1400091b7:	lea    rcx,[rsp+0x140]
   1400091bf:	mov    r8d,0x9
   1400091c5:	call   QWORD PTR [rip+0x173b5]        # 0x140020580
   1400091cb:	mov    rcx,QWORD PTR [rsp+0x3b8]
   1400091d3:	mov    edx,DWORD PTR [rcx]
   1400091d5:	mov    rbx,rax
   1400091d8:	cmp    edx,0x1
   1400091db:	je     0x140009263
   1400091e1:	test   edx,edx
   1400091e3:	je     0x140009263
   1400091e5:	call   QWORD PTR [rip+0x17545]        # 0x140020730
   1400091eb:	mov    rcx,QWORD PTR [rsp+0x3b8]
   1400091f3:	mov    r8,QWORD PTR [rcx+0x10]
   1400091f7:	mov    rdi,rax
   1400091fa:	test   r8,r8
   1400091fd:	je     0x140009221
   1400091ff:	mov    rdx,rax
   140009202:	mov    rcx,r8
   140009205:	call   0x140001210
   14000920a:	lea    rcx,[rdi+0x8]
   14000920e:	mov    QWORD PTR [rdi+0x10],rax
   140009212:	and    QWORD PTR [rax],0x3
   140009216:	or     QWORD PTR [rax],rcx
   140009219:	mov    rcx,QWORD PTR [rsp+0x3b8]
   140009221:	mov    eax,DWORD PTR [rcx]
   140009223:	test   eax,eax
   140009225:	je     0x140009245
   140009227:	cmp    eax,0xffffffff
   14000922a:	je     0x14000924a
   14000922c:	mov    eax,r14d
   14000922f:	lock xadd DWORD PTR [rcx],eax
   140009233:	add    eax,0xffffffff
   140009236:	setne  al
   140009239:	test   al,al
   14000923b:	jne    0x14000924a
   14000923d:	mov    rcx,QWORD PTR [rsp+0x3b8]
   140009245:	call   0x1400022f0
   14000924a:	mov    rcx,rdi
   14000924d:	mov    QWORD PTR [rsp+0x3b8],rdi
   140009255:	call   QWORD PTR [rip+0x17415]        # 0x140020670
   14000925b:	mov    rcx,QWORD PTR [rsp+0x3b8]
   140009263:	mov    rdx,rbx
   140009266:	call   0x140001c60
   14000926b:	test   rax,rax
   14000926e:	jne    0x1400092b0
   140009270:	lea    rcx,[rsp+0x2b0]
   140009278:	call   QWORD PTR [rip+0x1735a]        # 0x1400205d8
   14000927e:	lea    rdx,[rsp+0x240]
   140009286:	lea    rcx,[rsp+0x3b8]
   14000928e:	mov    r9,rax
   140009291:	mov    r8,rbx
   140009294:	call   0x140003090
   140009299:	lea    rcx,[rsp+0x2b0]
   1400092a1:	mov    rdi,QWORD PTR [rax]
   1400092a4:	add    rdi,0x20
   1400092a8:	call   QWORD PTR [rip+0x1749a]        # 0x140020748
   1400092ae:	jmp    0x1400092b4
   1400092b0:	lea    rdi,[rax+0x20]
   1400092b4:	lea    rdx,[rsp+0x190]
   1400092bc:	mov    rcx,rdi
   1400092bf:	call   QWORD PTR [rip+0x17363]        # 0x140020628
   1400092c5:	lea    rcx,[rsp+0x140]
   1400092cd:	call   QWORD PTR [rip+0x174ad]        # 0x140020780
   1400092d3:	lea    rcx,[rsp+0x190]
   1400092db:	call   QWORD PTR [rip+0x17467]        # 0x140020748
   1400092e1:	lea    rdx,[rip+0x177a0]        # 0x140020a88
   1400092e8:	lea    rcx,[rsp+0xa0]
   1400092f0:	mov    r8d,0xc
   1400092f6:	call   QWORD PTR [rip+0x17284]        # 0x140020580
   1400092fc:	mov    rdi,QWORD PTR [r12+0x10]
   140009301:	mov    rsi,rax
   140009304:	test   rdi,rdi
   140009307:	je     0x140009349
   140009309:	xor    ebx,ebx
   14000930b:	nop    DWORD PTR [rax+rax*1+0x0]
   140009310:	lea    rcx,[rdi+0x18]
   140009314:	mov    rdx,rsi
   140009317:	call   QWORD PTR [rip+0x173f3]        # 0x140020710
   14000931d:	test   al,al
   14000931f:	jne    0x14000932a
   140009321:	mov    rbx,rdi
   140009324:	mov    rdi,QWORD PTR [rdi+0x8]
   140009328:	jmp    0x14000932e
   14000932a:	mov    rdi,QWORD PTR [rdi+0x10]
   14000932e:	test   rdi,rdi
   140009331:	jne    0x140009310
   140009333:	test   rbx,rbx
   140009336:	je     0x140009349
   140009338:	lea    rdx,[rbx+0x18]
   14000933c:	mov    rcx,rsi
   14000933f:	call   QWORD PTR [rip+0x173cb]        # 0x140020710
   140009345:	test   al,al
   140009347:	je     0x14000934b
   140009349:	xor    ebx,ebx
   14000934b:	lea    rcx,[rsp+0xa0]
   140009353:	test   rbx,rbx
   140009356:	setne  dil
   14000935a:	call   QWORD PTR [rip+0x17420]        # 0x140020780
   140009360:	test   dil,dil
   140009363:	je     0x140009e05
   140009369:	lea    rcx,[rsp+0x2d0]
   140009371:	call   QWORD PTR [rip+0x17261]        # 0x1400205d8
   140009377:	lea    rdx,[rip+0x1770a]        # 0x140020a88
   14000937e:	lea    rcx,[rsp+0xe0]
   140009386:	mov    r8d,0xc
   14000938c:	mov    rdi,rax
   14000938f:	call   QWORD PTR [rip+0x171eb]        # 0x140020580
   140009395:	mov    rcx,QWORD PTR [rsp+0x48]
   14000939a:	mov    rdx,rax
   14000939d:	call   0x140001c60
   1400093a2:	test   rax,rax
   1400093a5:	je     0x1400093ab
   1400093a7:	lea    rdi,[rax+0x20]
   1400093ab:	lea    rcx,[rsp+0x1b0]
   1400093b3:	mov    rdx,rdi
   1400093b6:	call   QWORD PTR [rip+0x1737c]        # 0x140020738
   1400093bc:	lea    rdx,[rsp+0x70]
   1400093c1:	lea    rcx,[rsp+0x1b0]
   1400093c9:	call   QWORD PTR [rip+0x16f69]        # 0x140020338
   1400093cf:	lea    rcx,[rsp+0x1b0]
   1400093d7:	call   QWORD PTR [rip+0x1736b]        # 0x140020748
   1400093dd:	lea    rcx,[rsp+0xe0]
   1400093e5:	call   QWORD PTR [rip+0x17395]        # 0x140020780
   1400093eb:	lea    rcx,[rsp+0x2d0]
   1400093f3:	call   QWORD PTR [rip+0x1734f]        # 0x140020748
   1400093f9:	mov    rcx,QWORD PTR [rsp+0x70]
   1400093fe:	mov    QWORD PTR [rsp+0x78],rcx
   140009403:	mov    eax,DWORD PTR [rcx]
   140009405:	test   eax,eax
   140009407:	je     0x140009419
   140009409:	cmp    eax,0xffffffff
   14000940c:	je     0x140009474
   14000940e:	lock add DWORD PTR [rcx],0x1
   140009412:	mov    rcx,QWORD PTR [rsp+0x78]
   140009417:	jmp    0x140009474
   140009419:	mov    edx,DWORD PTR [rcx+0x4]
   14000941c:	lea    rcx,[rsp+0x78]
   140009421:	call   QWORD PTR [rip+0x17251]        # 0x140020678
   140009427:	mov    rcx,QWORD PTR [rsp+0x78]
   14000942c:	mov    rdx,QWORD PTR [rsp+0x70]
   140009431:	movsxd rax,DWORD PTR [rdx+0x8]
   140009435:	lea    rbx,[rdx+rax*8+0x10]
   14000943a:	movsxd rax,DWORD PTR [rcx+0xc]
   14000943e:	lea    rsi,[rcx+rax*8+0x10]
   140009443:	movsxd rax,DWORD PTR [rcx+0x8]
   140009447:	lea    rdi,[rcx+rax*8+0x10]
   14000944c:	cmp    rdi,rsi
   14000944f:	je     0x140009474
   140009451:	test   rdi,rdi
   140009454:	je     0x140009462
   140009456:	mov    rdx,rbx
   140009459:	mov    rcx,rdi
   14000945c:	call   QWORD PTR [rip+0x17336]        # 0x140020798
   140009462:	add    rdi,0x8
   140009466:	add    rbx,0x8
   14000946a:	cmp    rdi,rsi
   14000946d:	jne    0x140009451
   14000946f:	mov    rcx,QWORD PTR [rsp+0x78]
   140009474:	mov    DWORD PTR [rsp+0x80],0x0
   14000947f:	movsxd rax,DWORD PTR [rcx+0x8]
   140009483:	lea    r15,[rcx+rax*8+0x10]
   140009488:	mov    QWORD PTR [rsp+0x88],r15
   140009490:	movsxd rax,DWORD PTR [rcx+0xc]
   140009494:	lea    rdx,[rcx+rax*8+0x10]
   140009499:	mov    QWORD PTR [rsp+0x90],rdx
   1400094a1:	mov    eax,0x1
   1400094a6:	mov    DWORD PTR [rsp+0x80],eax
   1400094ad:	cmp    r15,rdx
   1400094b0:	je     0x140009de1
   1400094b6:	test   eax,eax
   1400094b8:	je     0x140009dc0
   1400094be:	lea    rcx,[rsp+0x3a8]
   1400094c6:	mov    dl,0x20
   1400094c8:	call   QWORD PTR [rip+0x172c2]        # 0x140020790
   1400094ce:	lea    rdx,[rsp+0x98]
   1400094d6:	xor    r9d,r9d
   1400094d9:	movzx  r8d,WORD PTR [rax]
   1400094dd:	mov    rcx,r15
   1400094e0:	mov    DWORD PTR [rsp+0x20],0x1
   1400094e8:	call   QWORD PTR [rip+0x16e42]        # 0x140020330
   1400094ee:	mov    rdi,rax
   1400094f1:	mov    rcx,QWORD PTR [rax]
   1400094f4:	mov    QWORD PTR [rsp+0x40],rcx
   1400094f9:	mov    edx,DWORD PTR [rcx]
   1400094fb:	test   edx,edx
   1400094fd:	je     0x14000950a
   1400094ff:	cmp    edx,0xffffffff
   140009502:	je     0x14000955e
   140009504:	lock add DWORD PTR [rcx],0x1
   140009508:	jmp    0x14000955e
   14000950a:	mov    edx,DWORD PTR [rcx+0x4]
   14000950d:	lea    rcx,[rsp+0x40]
   140009512:	call   QWORD PTR [rip+0x17160]        # 0x140020678
   140009518:	mov    rdx,QWORD PTR [rsp+0x40]
   14000951d:	mov    rcx,QWORD PTR [rdi]
   140009520:	movsxd rax,DWORD PTR [rdx+0xc]
   140009524:	lea    rsi,[rdx+rax*8+0x10]
   140009529:	movsxd rax,DWORD PTR [rcx+0x8]
   14000952d:	lea    rbx,[rcx+rax*8+0x10]
   140009532:	movsxd rax,DWORD PTR [rdx+0x8]
   140009536:	lea    rdi,[rdx+rax*8+0x10]
   14000953b:	cmp    rdi,rsi
   14000953e:	je     0x14000955e
   140009540:	test   rdi,rdi
   140009543:	je     0x140009551
   140009545:	mov    rdx,rbx
   140009548:	mov    rcx,rdi
   14000954b:	call   QWORD PTR [rip+0x17247]        # 0x140020798
   140009551:	add    rdi,0x8
   140009555:	add    rbx,0x8
   140009559:	cmp    rdi,rsi
   14000955c:	jne    0x140009540
   14000955e:	mov    rbx,QWORD PTR [rsp+0x98]
   140009566:	mov    eax,DWORD PTR [rbx]
   140009568:	test   eax,eax
   14000956a:	je     0x14000958a
   14000956c:	cmp    eax,0xffffffff
   14000956f:	je     0x1400095bc
   140009571:	mov    eax,r14d
   140009574:	lock xadd DWORD PTR [rbx],eax
   140009578:	add    eax,0xffffffff
   14000957b:	setne  al
   14000957e:	test   al,al
   140009580:	jne    0x1400095bc
   140009582:	mov    rbx,QWORD PTR [rsp+0x98]
   14000958a:	movsxd rax,DWORD PTR [rbx+0xc]
   14000958e:	lea    rdi,[rbx+rax*8+0x10]
   140009593:	movsxd rax,DWORD PTR [rbx+0x8]
   140009597:	lea    rsi,[rbx+rax*8+0x10]
   14000959c:	cmp    rsi,rdi
   14000959f:	je     0x1400095b3
   1400095a1:	sub    rdi,0x8
   1400095a5:	mov    rcx,rdi
   1400095a8:	call   QWORD PTR [rip+0x171d2]        # 0x140020780
   1400095ae:	cmp    rdi,rsi
   1400095b1:	jne    0x1400095a1
   1400095b3:	mov    rcx,rbx
   1400095b6:	call   QWORD PTR [rip+0x17114]        # 0x1400206d0
   1400095bc:	mov    rax,QWORD PTR [rip+0x17195]        # 0x140020758
   1400095c3:	lea    rdx,[rip+0x1747e]        # 0x140020a48
   1400095ca:	lea    rcx,[rsp+0x108]
   1400095d2:	mov    r8d,0x6
   1400095d8:	mov    QWORD PTR [rsp+0x30],rax
   1400095dd:	call   QWORD PTR [rip+0x16f9d]        # 0x140020580
   1400095e3:	lea    rcx,[rsp+0x1d0]
   1400095eb:	mov    rdx,rax
   1400095ee:	call   QWORD PTR [rip+0x16f84]        # 0x140020578
   1400095f4:	lea    rdx,[rip+0x17469]        # 0x140020a64
   1400095fb:	lea    rcx,[rsp+0xf8]
   140009603:	mov    r8d,0x4
   140009609:	call   QWORD PTR [rip+0x16f71]        # 0x140020580
   14000960f:	mov    rcx,QWORD PTR [rsp+0x30]
   140009614:	mov    edx,DWORD PTR [rcx]
   140009616:	mov    r12,rax
   140009619:	cmp    edx,0x1
   14000961c:	je     0x1400096e6
   140009622:	test   edx,edx
   140009624:	je     0x1400096e6
   14000962a:	call   QWORD PTR [rip+0x17100]        # 0x140020730
   140009630:	mov    rdi,QWORD PTR [rsp+0x30]
   140009635:	mov    rcx,QWORD PTR [rdi+0x10]
   140009639:	mov    rsi,rax
   14000963c:	test   rcx,rcx
   14000963f:	je     0x14000965d
   140009641:	mov    rdx,rax
   140009644:	call   0x140001210
   140009649:	lea    rcx,[rsi+0x8]
   14000964d:	mov    QWORD PTR [rsi+0x10],rax
   140009651:	and    QWORD PTR [rax],0x3
   140009655:	or     QWORD PTR [rax],rcx
   140009658:	mov    rdi,QWORD PTR [rsp+0x30]
   14000965d:	mov    eax,DWORD PTR [rdi]
   14000965f:	test   eax,eax
   140009661:	je     0x14000967e
   140009663:	cmp    eax,0xffffffff
   140009666:	je     0x1400096d3
   140009668:	mov    eax,r14d
   14000966b:	lock xadd DWORD PTR [rdi],eax
   14000966f:	add    eax,0xffffffff
   140009672:	setne  al
   140009675:	test   al,al
   140009677:	jne    0x1400096d3
   140009679:	mov    rdi,QWORD PTR [rsp+0x30]
   14000967e:	mov    rbx,QWORD PTR [rdi+0x10]
   140009682:	test   rbx,rbx
   140009685:	je     0x1400096ca
   140009687:	lea    rcx,[rbx+0x18]
   14000968b:	call   QWORD PTR [rip+0x170ef]        # 0x140020780
   140009691:	lea    rcx,[rbx+0x20]
   140009695:	call   QWORD PTR [rip+0x170ad]        # 0x140020748
   14000969b:	mov    rcx,QWORD PTR [rbx+0x8]
   14000969f:	test   rcx,rcx
   1400096a2:	je     0x1400096a9
   1400096a4:	call   0x140001fd0
   1400096a9:	mov    rcx,QWORD PTR [rbx+0x10]
   1400096ad:	test   rcx,rcx
   1400096b0:	je     0x1400096b7
   1400096b2:	call   0x140001fd0
   1400096b7:	mov    rdx,QWORD PTR [rdi+0x10]
   1400096bb:	mov    r8d,0x8
   1400096c1:	mov    rcx,rdi
   1400096c4:	call   QWORD PTR [rip+0x16fb6]        # 0x140020680
   1400096ca:	mov    rcx,rdi
   1400096cd:	call   QWORD PTR [rip+0x16fb5]        # 0x140020688
   1400096d3:	mov    rcx,rsi
   1400096d6:	mov    QWORD PTR [rsp+0x30],rsi
   1400096db:	call   QWORD PTR [rip+0x16f8f]        # 0x140020670
   1400096e1:	mov    rcx,QWORD PTR [rsp+0x30]
   1400096e6:	mov    rdi,QWORD PTR [rcx+0x10]
   1400096ea:	test   rdi,rdi
   1400096ed:	je     0x140009733
   1400096ef:	xor    ebx,ebx
   1400096f1:	lea    rcx,[rdi+0x18]
   1400096f5:	mov    rdx,r12
   1400096f8:	call   QWORD PTR [rip+0x17012]        # 0x140020710
   1400096fe:	test   al,al
   140009700:	jne    0x14000970b
   140009702:	mov    rbx,rdi
   140009705:	mov    rdi,QWORD PTR [rdi+0x8]
   140009709:	jmp    0x14000970f
   14000970b:	mov    rdi,QWORD PTR [rdi+0x10]
   14000970f:	test   rdi,rdi
   140009712:	jne    0x1400096f1
   140009714:	test   rbx,rbx
   140009717:	je     0x140009733
   140009719:	lea    rdx,[rbx+0x18]
   14000971d:	mov    rcx,r12
   140009720:	call   QWORD PTR [rip+0x16fea]        # 0x140020710
   140009726:	test   al,al
   140009728:	jne    0x140009733
   14000972a:	lea    rcx,[rbx+0x20]
   14000972e:	jmp    0x1400098e6
   140009733:	lea    rcx,[rsp+0x2e8]
   14000973b:	call   QWORD PTR [rip+0x16e97]        # 0x1400205d8
   140009741:	mov    rcx,QWORD PTR [rsp+0x30]
   140009746:	mov    edx,DWORD PTR [rcx]
   140009748:	mov    r13,rax
   14000974b:	cmp    edx,0x1
   14000974e:	je     0x140009818
   140009754:	test   edx,edx
   140009756:	je     0x140009818
   14000975c:	call   QWORD PTR [rip+0x16fce]        # 0x140020730
   140009762:	mov    rdi,QWORD PTR [rsp+0x30]
   140009767:	mov    rcx,QWORD PTR [rdi+0x10]
   14000976b:	mov    rsi,rax
   14000976e:	test   rcx,rcx
   140009771:	je     0x14000978f
   140009773:	mov    rdx,rax
   140009776:	call   0x140001210
   14000977b:	lea    rcx,[rsi+0x8]
   14000977f:	mov    QWORD PTR [rsi+0x10],rax
   140009783:	and    QWORD PTR [rax],0x3
   140009787:	or     QWORD PTR [rax],rcx
   14000978a:	mov    rdi,QWORD PTR [rsp+0x30]
   14000978f:	mov    eax,DWORD PTR [rdi]
   140009791:	test   eax,eax
   140009793:	je     0x1400097b0
   140009795:	cmp    eax,0xffffffff
   140009798:	je     0x140009805
   14000979a:	mov    eax,r14d
   14000979d:	lock xadd DWORD PTR [rdi],eax
   1400097a1:	add    eax,0xffffffff
   1400097a4:	setne  al
   1400097a7:	test   al,al
   1400097a9:	jne    0x140009805
   1400097ab:	mov    rdi,QWORD PTR [rsp+0x30]
   1400097b0:	mov    rbx,QWORD PTR [rdi+0x10]
   1400097b4:	test   rbx,rbx
   1400097b7:	je     0x1400097fc
   1400097b9:	lea    rcx,[rbx+0x18]
   1400097bd:	call   QWORD PTR [rip+0x16fbd]        # 0x140020780
   1400097c3:	lea    rcx,[rbx+0x20]
   1400097c7:	call   QWORD PTR [rip+0x16f7b]        # 0x140020748
   1400097cd:	mov    rcx,QWORD PTR [rbx+0x8]
   1400097d1:	test   rcx,rcx
   1400097d4:	je     0x1400097db
   1400097d6:	call   0x140001fd0
   1400097db:	mov    rcx,QWORD PTR [rbx+0x10]
   1400097df:	test   rcx,rcx
   1400097e2:	je     0x1400097e9
   1400097e4:	call   0x140001fd0
   1400097e9:	mov    rdx,QWORD PTR [rdi+0x10]
   1400097ed:	mov    r8d,0x8
   1400097f3:	mov    rcx,rdi
   1400097f6:	call   QWORD PTR [rip+0x16e84]        # 0x140020680
   1400097fc:	mov    rcx,rdi
   1400097ff:	call   QWORD PTR [rip+0x16e83]        # 0x140020688
   140009805:	mov    rcx,rsi
   140009808:	mov    QWORD PTR [rsp+0x30],rsi
   14000980d:	call   QWORD PTR [rip+0x16e5d]        # 0x140020670
   140009813:	mov    rcx,QWORD PTR [rsp+0x30]
   140009818:	mov    rbx,QWORD PTR [rcx+0x10]
   14000981c:	xor    edi,edi
   14000981e:	lea    rbp,[rcx+0x8]
   140009822:	mov    sil,0x1
   140009825:	test   rbx,rbx
   140009828:	je     0x14000988e
   14000982a:	nop    WORD PTR [rax+rax*1+0x0]
   140009830:	lea    rcx,[rbx+0x18]
   140009834:	mov    rdx,r12
   140009837:	mov    rbp,rbx
   14000983a:	call   QWORD PTR [rip+0x16ed0]        # 0x140020710
   140009840:	test   al,al
   140009842:	jne    0x140009850
   140009844:	mov    rdi,rbx
   140009847:	mov    rbx,QWORD PTR [rbx+0x8]
   14000984b:	mov    sil,0x1
   14000984e:	jmp    0x140009857
   140009850:	mov    rbx,QWORD PTR [rbx+0x10]
   140009854:	xor    sil,sil
   140009857:	test   rbx,rbx
   14000985a:	jne    0x140009830
   14000985c:	test   rdi,rdi
   14000985f:	je     0x140009889
   140009861:	lea    rdx,[rdi+0x18]
   140009865:	mov    rcx,r12
   140009868:	call   QWORD PTR [rip+0x16ea2]        # 0x140020710
   14000986e:	test   al,al
   140009870:	jne    0x140009889
   140009872:	lea    rcx,[rdi+0x20]
   140009876:	mov    rdx,r13
   140009879:	call   QWORD PTR [rip+0x16da9]        # 0x140020628
   14000987f:	mov    QWORD PTR [rsp+0xe8],rdi
   140009887:	jmp    0x1400098d4
   140009889:	mov    rcx,QWORD PTR [rsp+0x30]
   14000988e:	mov    edx,0x30
   140009893:	mov    r9,rbp
   140009896:	mov    BYTE PTR [rsp+0x20],sil
   14000989b:	lea    r8d,[rdx-0x28]
   14000989f:	call   QWORD PTR [rip+0x16e83]        # 0x140020728
   1400098a5:	mov    rdi,rax
   1400098a8:	lea    rcx,[rax+0x18]
   1400098ac:	test   rcx,rcx
   1400098af:	je     0x1400098ba
   1400098b1:	mov    rdx,r12
   1400098b4:	call   QWORD PTR [rip+0x16ede]        # 0x140020798
   1400098ba:	lea    rcx,[rdi+0x20]
   1400098be:	test   rcx,rcx
   1400098c1:	je     0x1400098cc
   1400098c3:	mov    rdx,r13
   1400098c6:	call   QWORD PTR [rip+0x16e6c]        # 0x140020738
   1400098cc:	mov    QWORD PTR [rsp+0xe8],rdi
   1400098d4:	lea    rcx,[rsp+0x2e8]
   1400098dc:	call   QWORD PTR [rip+0x16e66]        # 0x140020748
   1400098e2:	lea    rcx,[rdi+0x20]
   1400098e6:	lea    rdx,[rsp+0x1d0]
   1400098ee:	call   QWORD PTR [rip+0x16d34]        # 0x140020628
   1400098f4:	lea    rcx,[rsp+0xf8]
   1400098fc:	call   QWORD PTR [rip+0x16e7e]        # 0x140020780
   140009902:	lea    rcx,[rsp+0x1d0]
   14000990a:	call   QWORD PTR [rip+0x16e38]        # 0x140020748
   140009910:	lea    rcx,[rsp+0x108]
   140009918:	call   QWORD PTR [rip+0x16e62]        # 0x140020780
   14000991e:	mov    rcx,QWORD PTR [rsp+0x40]
   140009923:	mov    eax,DWORD PTR [rcx]
   140009925:	cmp    eax,0x1
   140009928:	je     0x1400099f0
   14000992e:	test   eax,eax
   140009930:	je     0x1400099f0
   140009936:	movsxd rax,DWORD PTR [rcx+0x8]
   14000993a:	mov    edx,DWORD PTR [rcx+0x4]
   14000993d:	lea    rbx,[rcx+rax*8+0x10]
   140009942:	lea    rcx,[rsp+0x40]
   140009947:	call   QWORD PTR [rip+0x16d2b]        # 0x140020678
   14000994d:	mov    rcx,QWORD PTR [rsp+0x40]
   140009952:	movsxd rdx,DWORD PTR [rcx+0xc]
   140009956:	mov    rsi,rax
   140009959:	lea    rbp,[rcx+rdx*8+0x10]
   14000995e:	movsxd rdx,DWORD PTR [rcx+0x8]
   140009962:	lea    rdi,[rcx+rdx*8+0x10]
   140009967:	cmp    rdi,rbp
   14000996a:	je     0x140009993
   14000996c:	nop    DWORD PTR [rax+0x0]
   140009970:	test   rdi,rdi
   140009973:	je     0x140009981
   140009975:	mov    rdx,rbx
   140009978:	mov    rcx,rdi
   14000997b:	call   QWORD PTR [rip+0x16e17]        # 0x140020798
   140009981:	add    rdi,0x8
   140009985:	add    rbx,0x8
   140009989:	cmp    rdi,rbp
   14000998c:	jne    0x140009970
   14000998e:	mov    rcx,QWORD PTR [rsp+0x40]
   140009993:	mov    eax,DWORD PTR [rsi]
   140009995:	test   eax,eax
   140009997:	je     0x1400099b6
   140009999:	cmp    eax,0xffffffff
   14000999c:	je     0x1400099f0
   14000999e:	mov    eax,r14d
   1400099a1:	lock xadd DWORD PTR [rsi],eax
   1400099a5:	add    eax,0xffffffff
   1400099a8:	setne  al
   1400099ab:	test   al,al
   1400099ad:	je     0x1400099b6
   1400099af:	mov    rcx,QWORD PTR [rsp+0x40]
   1400099b4:	jmp    0x1400099f0
   1400099b6:	movsxd rax,DWORD PTR [rsi+0xc]
   1400099ba:	lea    rdi,[rsi+rax*8+0x10]
   1400099bf:	movsxd rax,DWORD PTR [rsi+0x8]
   1400099c3:	lea    rbx,[rsi+rax*8+0x10]
   1400099c8:	cmp    rbx,rdi
   1400099cb:	je     0x1400099e2
   1400099cd:	nop    DWORD PTR [rax]
   1400099d0:	sub    rdi,0x8
   1400099d4:	mov    rcx,rdi
   1400099d7:	call   QWORD PTR [rip+0x16da3]        # 0x140020780
   1400099dd:	cmp    rdi,rbx
   1400099e0:	jne    0x1400099d0
   1400099e2:	mov    rcx,rsi
   1400099e5:	call   QWORD PTR [rip+0x16ce5]        # 0x1400206d0
   1400099eb:	mov    rcx,QWORD PTR [rsp+0x40]
   1400099f0:	movsxd rax,DWORD PTR [rcx+0x8]
   1400099f4:	lea    rdx,[rcx+rax*8+0x10]
   1400099f9:	lea    rcx,[rsp+0x1f0]
   140009a01:	call   QWORD PTR [rip+0x16b71]        # 0x140020578
   140009a07:	lea    rdx,[rip+0x1706e]        # 0x140020a7c
   140009a0e:	lea    rcx,[rsp+0x118]
   140009a16:	mov    r8d,0x4
   140009a1c:	call   QWORD PTR [rip+0x16b5e]        # 0x140020580
   140009a22:	mov    rcx,QWORD PTR [rsp+0x30]
   140009a27:	mov    edx,DWORD PTR [rcx]
   140009a29:	mov    rbx,rax
   140009a2c:	cmp    edx,0x1
   140009a2f:	je     0x140009aa4
   140009a31:	test   edx,edx
   140009a33:	je     0x140009aa4
   140009a35:	call   QWORD PTR [rip+0x16cf5]        # 0x140020730
   140009a3b:	mov    rcx,QWORD PTR [rsp+0x30]
   140009a40:	mov    r8,QWORD PTR [rcx+0x10]
   140009a44:	mov    rdi,rax
   140009a47:	test   r8,r8
   140009a4a:	je     0x140009a6b
   140009a4c:	mov    rdx,rax
   140009a4f:	mov    rcx,r8
   140009a52:	call   0x140001210
   140009a57:	lea    rcx,[rdi+0x8]
   140009a5b:	mov    QWORD PTR [rdi+0x10],rax
   140009a5f:	and    QWORD PTR [rax],0x3
   140009a63:	or     QWORD PTR [rax],rcx
   140009a66:	mov    rcx,QWORD PTR [rsp+0x30]
   140009a6b:	mov    eax,DWORD PTR [rcx]
   140009a6d:	test   eax,eax
   140009a6f:	je     0x140009a8c
   140009a71:	cmp    eax,0xffffffff
   140009a74:	je     0x140009a91
   140009a76:	mov    eax,r14d
   140009a79:	lock xadd DWORD PTR [rcx],eax
   140009a7d:	add    eax,0xffffffff
   140009a80:	setne  al
   140009a83:	test   al,al
   140009a85:	jne    0x140009a91
   140009a87:	mov    rcx,QWORD PTR [rsp+0x30]
   140009a8c:	call   0x1400022f0
   140009a91:	mov    rcx,rdi
   140009a94:	mov    QWORD PTR [rsp+0x30],rdi
   140009a99:	call   QWORD PTR [rip+0x16bd1]        # 0x140020670
   140009a9f:	mov    rcx,QWORD PTR [rsp+0x30]
   140009aa4:	mov    rdx,rbx
   140009aa7:	call   0x140001c60
   140009aac:	test   rax,rax
   140009aaf:	jne    0x140009aee
   140009ab1:	lea    rcx,[rsp+0x308]
   140009ab9:	call   QWORD PTR [rip+0x16b19]        # 0x1400205d8
   140009abf:	lea    rdx,[rsp+0x268]
   140009ac7:	lea    rcx,[rsp+0x30]
   140009acc:	mov    r9,rax
   140009acf:	mov    r8,rbx
   140009ad2:	call   0x140003090
   140009ad7:	lea    rcx,[rsp+0x308]
   140009adf:	mov    rdi,QWORD PTR [rax]
   140009ae2:	add    rdi,0x20
   140009ae6:	call   QWORD PTR [rip+0x16c5c]        # 0x140020748
   140009aec:	jmp    0x140009af2
   140009aee:	lea    rdi,[rax+0x20]
   140009af2:	lea    rdx,[rsp+0x1f0]
   140009afa:	mov    rcx,rdi
   140009afd:	call   QWORD PTR [rip+0x16b25]        # 0x140020628
   140009b03:	lea    rcx,[rsp+0x118]
   140009b0b:	call   QWORD PTR [rip+0x16c6f]        # 0x140020780
   140009b11:	lea    rcx,[rsp+0x1f0]
   140009b19:	call   QWORD PTR [rip+0x16c29]        # 0x140020748
   140009b1f:	mov    rdx,QWORD PTR [rsp+0x40]
   140009b24:	mov    eax,DWORD PTR [rdx]
   140009b26:	cmp    eax,0x1
   140009b29:	je     0x140009b3c
   140009b2b:	test   eax,eax
   140009b2d:	je     0x140009b3c
   140009b2f:	mov    edx,DWORD PTR [rdx+0x4]
   140009b32:	lea    rcx,[rsp+0x40]
   140009b37:	call   0x140002c30
   140009b3c:	lea    rcx,[rsp+0x40]
   140009b41:	mov    edx,0x1
   140009b46:	call   QWORD PTR [rip+0x167dc]        # 0x140020328
   140009b4c:	lea    rcx,[rsp+0x210]
   140009b54:	mov    rdx,rax
   140009b57:	call   QWORD PTR [rip+0x16a1b]        # 0x140020578
   140009b5d:	lea    rdx,[rip+0x16edc]        # 0x140020a40
   140009b64:	lea    rcx,[rsp+0xa8]
   140009b6c:	mov    r8d,0x7
   140009b72:	call   QWORD PTR [rip+0x16a08]        # 0x140020580
   140009b78:	mov    rcx,QWORD PTR [rsp+0x30]
   140009b7d:	mov    edx,DWORD PTR [rcx]
   140009b7f:	mov    rbx,rax
   140009b82:	cmp    edx,0x1
   140009b85:	je     0x140009bfc
   140009b87:	test   edx,edx
   140009b89:	je     0x140009bfc
   140009b8b:	call   QWORD PTR [rip+0x16b9f]        # 0x140020730
   140009b91:	mov    rcx,QWORD PTR [rsp+0x30]
   140009b96:	mov    r8,QWORD PTR [rcx+0x10]
   140009b9a:	mov    rdi,rax
   140009b9d:	test   r8,r8
   140009ba0:	je     0x140009bc3
   140009ba2:	mov    rdx,rax
   140009ba5:	mov    rcx,r8
   140009ba8:	call   0x140001210
   140009bad:	lea    rdx,[rdi+0x8]
   140009bb1:	mov    rcx,rax
   140009bb4:	mov    QWORD PTR [rdi+0x10],rax
   140009bb8:	call   QWORD PTR [rip+0x16762]        # 0x140020320
   140009bbe:	mov    rcx,QWORD PTR [rsp+0x30]
   140009bc3:	mov    eax,DWORD PTR [rcx]
   140009bc5:	test   eax,eax
   140009bc7:	je     0x140009be4
   140009bc9:	cmp    eax,0xffffffff
   140009bcc:	je     0x140009be9
   140009bce:	mov    eax,r14d
   140009bd1:	lock xadd DWORD PTR [rcx],eax
   140009bd5:	add    eax,0xffffffff
   140009bd8:	setne  al
   140009bdb:	test   al,al
   140009bdd:	jne    0x140009be9
   140009bdf:	mov    rcx,QWORD PTR [rsp+0x30]
   140009be4:	call   0x1400022f0
   140009be9:	mov    rcx,rdi
   140009bec:	mov    QWORD PTR [rsp+0x30],rdi
   140009bf1:	call   QWORD PTR [rip+0x16a79]        # 0x140020670
   140009bf7:	mov    rcx,QWORD PTR [rsp+0x30]
   140009bfc:	mov    rdx,rbx
   140009bff:	call   0x140001c60
   140009c04:	test   rax,rax
   140009c07:	jne    0x140009c46
   140009c09:	lea    rcx,[rsp+0x328]
   140009c11:	call   QWORD PTR [rip+0x169c1]        # 0x1400205d8
   140009c17:	lea    rdx,[rsp+0x2e0]
   140009c1f:	lea    rcx,[rsp+0x30]
   140009c24:	mov    r9,rax
   140009c27:	mov    r8,rbx
   140009c2a:	call   0x140003090
   140009c2f:	lea    rcx,[rsp+0x328]
   140009c37:	mov    rdi,QWORD PTR [rax]
   140009c3a:	add    rdi,0x20
   140009c3e:	call   QWORD PTR [rip+0x16b04]        # 0x140020748
   140009c44:	jmp    0x140009c4a
   140009c46:	lea    rdi,[rax+0x20]
   140009c4a:	lea    rdx,[rsp+0x210]
   140009c52:	mov    rcx,rdi
   140009c55:	call   QWORD PTR [rip+0x169cd]        # 0x140020628
   140009c5b:	lea    rcx,[rsp+0xa8]
   140009c63:	call   QWORD PTR [rip+0x16b17]        # 0x140020780
   140009c69:	lea    rcx,[rsp+0x210]
   140009c71:	call   QWORD PTR [rip+0x16ad1]        # 0x140020748
   140009c77:	lea    rdx,[rsp+0x30]
   140009c7c:	lea    rcx,[rsp+0xc8]
   140009c84:	call   QWORD PTR [rip+0x16936]        # 0x1400205c0
   140009c8a:	mov    rdx,QWORD PTR [rsp+0x38]
   140009c8f:	mov    eax,DWORD PTR [rdx]
   140009c91:	cmp    eax,0x1
   140009c94:	je     0x140009cde
   140009c96:	test   eax,eax
   140009c98:	je     0x140009cde
   140009c9a:	lea    rcx,[rsp+0x38]
   140009c9f:	mov    edx,0x7fffffff
   140009ca4:	mov    r8d,0x1
   140009caa:	call   0x1400029a0
   140009caf:	mov    ecx,0x10
   140009cb4:	mov    rdi,rax
   140009cb7:	call   0x14001ee64
   140009cbc:	test   rax,rax
   140009cbf:	je     0x140009cd7
   140009cc1:	lea    rdx,[rsp+0xc8]
   140009cc9:	mov    rcx,rax
   140009ccc:	call   QWORD PTR [rip+0x16a66]        # 0x140020738
   140009cd2:	mov    QWORD PTR [rdi],rax
   140009cd5:	jmp    0x140009d13
   140009cd7:	xor    eax,eax
   140009cd9:	mov    QWORD PTR [rdi],rax
   140009cdc:	jmp    0x140009d13
   140009cde:	lea    rcx,[rsp+0x38]
   140009ce3:	call   QWORD PTR [rip+0x1694f]        # 0x140020638
   140009ce9:	mov    ecx,0x10
   140009cee:	mov    rdi,rax
   140009cf1:	call   0x14001ee64
   140009cf6:	test   rax,rax
   140009cf9:	je     0x140009d0e
   140009cfb:	lea    rdx,[rsp+0xc8]
   140009d03:	mov    rcx,rax
   140009d06:	call   QWORD PTR [rip+0x16a2c]        # 0x140020738
   140009d0c:	jmp    0x140009d10
   140009d0e:	xor    eax,eax
   140009d10:	mov    QWORD PTR [rdi],rax
   140009d13:	lea    rcx,[rsp+0xc8]
   140009d1b:	call   QWORD PTR [rip+0x16a27]        # 0x140020748
   140009d21:	mov    rcx,QWORD PTR [rsp+0x30]
   140009d26:	mov    eax,DWORD PTR [rcx]
   140009d28:	test   eax,eax
   140009d2a:	je     0x140009d47
   140009d2c:	cmp    eax,0xffffffff
   140009d2f:	je     0x140009d4c
   140009d31:	mov    eax,r14d
   140009d34:	lock xadd DWORD PTR [rcx],eax
   140009d38:	add    eax,0xffffffff
   140009d3b:	setne  al
   140009d3e:	test   al,al
   140009d40:	jne    0x140009d4c
   140009d42:	mov    rcx,QWORD PTR [rsp+0x30]
   140009d47:	call   0x1400022f0
   140009d4c:	mov    rbx,QWORD PTR [rsp+0x40]
   140009d51:	mov    eax,DWORD PTR [rbx]
   140009d53:	test   eax,eax
   140009d55:	je     0x140009d72
   140009d57:	cmp    eax,0xffffffff
   140009d5a:	je     0x140009dab
   140009d5c:	mov    eax,r14d
   140009d5f:	lock xadd DWORD PTR [rbx],eax
   140009d63:	add    eax,0xffffffff
   140009d66:	setne  al
   140009d69:	test   al,al
   140009d6b:	jne    0x140009dab
   140009d6d:	mov    rbx,QWORD PTR [rsp+0x40]
   140009d72:	movsxd rax,DWORD PTR [rbx+0xc]
   140009d76:	lea    rdi,[rbx+rax*8+0x10]
   140009d7b:	movsxd rax,DWORD PTR [rbx+0x8]
   140009d7f:	lea    rsi,[rbx+rax*8+0x10]
   140009d84:	cmp    rsi,rdi
   140009d87:	je     0x140009da2
   140009d89:	nop    DWORD PTR [rax+0x0]
   140009d90:	sub    rdi,0x8
   140009d94:	mov    rcx,rdi
   140009d97:	call   QWORD PTR [rip+0x169e3]        # 0x140020780
   140009d9d:	cmp    rdi,rsi
   140009da0:	jne    0x140009d90
   140009da2:	mov    rcx,rbx
   140009da5:	call   QWORD PTR [rip+0x16925]        # 0x1400206d0
   140009dab:	mov    eax,DWORD PTR [rsp+0x80]
   140009db2:	dec    eax
   140009db4:	mov    DWORD PTR [rsp+0x80],eax
   140009dbb:	jmp    0x1400094b6
   140009dc0:	mov    r15,QWORD PTR [rsp+0x88]
   140009dc8:	mov    rdx,QWORD PTR [rsp+0x90]
   140009dd0:	add    r15,0x8
   140009dd4:	mov    QWORD PTR [rsp+0x88],r15
   140009ddc:	jmp    0x1400094a1
   140009de1:	lea    rcx,[rsp+0x78]
   140009de6:	call   0x140002360
   140009deb:	lea    rcx,[rsp+0x70]
   140009df0:	call   0x140002360
   140009df5:	mov    r13d,DWORD PTR [rsp+0x3b0]
   140009dfd:	mov    r15,QWORD PTR [rsp+0x3a0]
   140009e05:	lea    rcx,[rsp+0x50]
   140009e0a:	call   QWORD PTR [rip+0x16970]        # 0x140020780
   140009e10:	lea    rcx,[rsp+0x68]
   140009e15:	call   QWORD PTR [rip+0x16965]        # 0x140020780
   140009e1b:	mov    rdx,QWORD PTR [rsp+0x48]
   140009e20:	mov    eax,DWORD PTR [rdx]
   140009e22:	test   eax,eax
   140009e24:	je     0x140009e3c
   140009e26:	cmp    eax,0xffffffff
   140009e29:	je     0x140009e46
   140009e2b:	mov    eax,r14d
   140009e2e:	lock xadd DWORD PTR [rdx],eax
   140009e32:	add    eax,0xffffffff
   140009e35:	setne  al
   140009e38:	test   al,al
   140009e3a:	jne    0x140009e46
   140009e3c:	mov    rcx,QWORD PTR [rsp+0x48]
   140009e41:	call   0x1400022f0
   140009e46:	lea    rcx,[rsp+0x58]
   140009e4b:	call   QWORD PTR [rip+0x1692f]        # 0x140020780
   140009e51:	lea    rdx,[rsp+0x3b8]
   140009e59:	lea    rcx,[rsp+0x230]
   140009e61:	call   QWORD PTR [rip+0x16759]        # 0x1400205c0
   140009e67:	lea    rdx,[rsp+0x230]
   140009e6f:	mov    rcx,r15
   140009e72:	call   0x140002ef0
   140009e77:	lea    rcx,[rsp+0x230]
   140009e7f:	call   QWORD PTR [rip+0x168c3]        # 0x140020748
   140009e85:	mov    rcx,QWORD PTR [rsp+0x3b8]
   140009e8d:	mov    eax,DWORD PTR [rcx]
   140009e8f:	test   eax,eax
   140009e91:	je     0x140009eb1
   140009e93:	cmp    eax,0xffffffff
   140009e96:	je     0x140009eb6
   140009e98:	mov    eax,r14d
   140009e9b:	lock xadd DWORD PTR [rcx],eax
   140009e9f:	add    eax,0xffffffff
   140009ea2:	setne  al
   140009ea5:	test   al,al
   140009ea7:	jne    0x140009eb6
   140009ea9:	mov    rcx,QWORD PTR [rsp+0x3b8]
   140009eb1:	call   0x1400022f0
   140009eb6:	mov    rdi,QWORD PTR [rsp+0x38]
   140009ebb:	inc    QWORD PTR [rsp+0x60]
   140009ec0:	inc    r13d
   140009ec3:	mov    eax,DWORD PTR [rdi+0xc]
   140009ec6:	mov    DWORD PTR [rsp+0x3b0],r13d
   140009ece:	sub    eax,DWORD PTR [rdi+0x8]
   140009ed1:	cmp    r13d,eax
   140009ed4:	jl     0x140008660
   140009eda:	mov    r12,QWORD PTR [rsp+0x360]
   140009ee2:	mov    eax,DWORD PTR [rdi]
   140009ee4:	mov    r13,QWORD PTR [rsp+0x358]
   140009eec:	test   eax,eax
   140009eee:	je     0x140009f0a
   140009ef0:	cmp    eax,0xffffffff
   140009ef3:	je     0x140009f4d
   140009ef5:	lock xadd DWORD PTR [rdi],r14d
   140009efa:	add    r14d,0xffffffff
   140009efe:	setne  al
   140009f01:	test   al,al
   140009f03:	jne    0x140009f4d
   140009f05:	mov    rdi,QWORD PTR [rsp+0x38]
   140009f0a:	movsxd rax,DWORD PTR [rdi+0xc]
   140009f0e:	lea    rbx,[rdi+rax*8+0x10]
   140009f13:	movsxd rax,DWORD PTR [rdi+0x8]
   140009f17:	lea    rbp,[rdi+rax*8+0x10]
   140009f1c:	cmp    rbp,rbx
   140009f1f:	je     0x140009f44
   140009f21:	mov    rsi,QWORD PTR [rbx-0x8]
   140009f25:	sub    rbx,0x8
   140009f29:	test   rsi,rsi
   140009f2c:	je     0x140009f3f
   140009f2e:	mov    rcx,rsi
   140009f31:	call   QWORD PTR [rip+0x16811]        # 0x140020748
   140009f37:	mov    rcx,rsi
   140009f3a:	call   0x14001ee46
   140009f3f:	cmp    rbx,rbp
   140009f42:	jne    0x140009f21
   140009f44:	mov    rcx,rdi
   140009f47:	call   QWORD PTR [rip+0x16783]        # 0x1400206d0
   140009f4d:	mov    rax,r15
   140009f50:	add    rsp,0x368
   140009f57:	pop    r15
   140009f59:	pop    r14
   140009f5b:	pop    rdi
   140009f5c:	pop    rsi
   140009f5d:	pop    rbp
   140009f5e:	pop    rbx
   140009f5f:	ret    
   140009f60:	mov    r11,rsp
   140009f63:	push   rbx
   140009f64:	push   rbp
   140009f65:	push   rsi
   140009f66:	push   rdi
   140009f67:	push   r13
   140009f69:	sub    rsp,0xb0
   140009f70:	mov    rbx,QWORD PTR [rip+0x167e9]        # 0x140020760
   140009f77:	mov    r13,rcx
   140009f7a:	mov    rsi,rdx
   140009f7d:	lea    rdx,[rip+0x16bac]        # 0x140020b30
   140009f84:	xor    eax,eax
   140009f86:	or     rbp,0xffffffffffffffff
   140009f8a:	mov    rdi,rdx
   140009f8d:	mov    QWORD PTR [rsp+0x28],rdx
   140009f92:	mov    rcx,rbp
   140009f95:	repnz scas al,BYTE PTR es:[rdi]
   140009f97:	lea    rdx,[r11-0x48]
   140009f9b:	mov    QWORD PTR [r11+0x10],r12
   140009f9f:	not    rcx
   140009fa2:	mov    QWORD PTR [r11+0x20],rbx
   140009fa6:	dec    rcx
   140009fa9:	mov    DWORD PTR [rsp+0x20],ecx
   140009fad:	mov    rcx,rsi
   140009fb0:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   140009fb5:	movdqa XMMWORD PTR [r11-0x48],xmm0
   140009fbb:	call   QWORD PTR [rip+0x167b7]        # 0x140020778
   140009fc1:	test   al,al
   140009fc3:	je     0x14000a127
   140009fc9:	lea    rcx,[rsp+0x20]
   140009fce:	call   QWORD PTR [rip+0x1637c]        # 0x140020350
   140009fd4:	mov    DWORD PTR [rsp+0xe0],0x0
   140009fdf:	mov    DWORD PTR [rsp+0xf0],0x1
   140009fea:	call   QWORD PTR [rip+0x161d8]        # 0x1400201c8
   140009ff0:	lea    r8d,[rbp+0x2]
   140009ff4:	lea    rcx,[rsp+0x20]
   140009ff9:	mov    rdx,rax
   140009ffc:	xor    r9d,r9d
   140009fff:	call   QWORD PTR [rip+0x16343]        # 0x140020348
   14000a005:	test   al,al
   14000a007:	je     0x14000a117
   14000a00d:	lea    rdx,[rip+0x16b14]        # 0x140020b28
   14000a014:	xor    eax,eax
   14000a016:	mov    rcx,rbp
   14000a019:	mov    rdi,rdx
   14000a01c:	mov    QWORD PTR [rsp+0x58],rdx
   14000a021:	lea    rdx,[rsp+0x70]
   14000a026:	repnz scas al,BYTE PTR es:[rdi]
   14000a028:	not    rcx
   14000a02b:	dec    rcx
   14000a02e:	mov    DWORD PTR [rsp+0x50],ecx
   14000a032:	lea    rcx,[rsp+0x40]
   14000a037:	movaps xmm0,XMMWORD PTR [rsp+0x50]
   14000a03c:	movdqa XMMWORD PTR [rsp+0x70],xmm0
   14000a042:	call   QWORD PTR [rip+0x164f0]        # 0x140020538
   14000a048:	lea    rdx,[rsp+0x50]
   14000a04d:	lea    rcx,[rsp+0x20]
   14000a052:	call   QWORD PTR [rip+0x165b8]        # 0x140020610
   14000a058:	lea    rcx,[rsp+0x60]
   14000a05d:	mov    rdx,rax
   14000a060:	call   QWORD PTR [rip+0x165b2]        # 0x140020618
   14000a066:	lea    rdx,[rsp+0x40]
   14000a06b:	lea    rcx,[rsp+0x48]
   14000a070:	mov    r8,rax
   14000a073:	call   0x140005230
   14000a078:	lea    rcx,[rsp+0xf8]
   14000a080:	mov    rdx,rax
   14000a083:	call   0x140002460
   14000a088:	mov    rsi,QWORD PTR [rsp+0x48]
   14000a08d:	mov    eax,DWORD PTR [rsi]
   14000a08f:	test   eax,eax
   14000a091:	je     0x14000a0ab
   14000a093:	cmp    eax,ebp
   14000a095:	je     0x14000a0ee
   14000a097:	mov    eax,ebp
   14000a099:	lock xadd DWORD PTR [rsi],eax
   14000a09d:	add    eax,ebp
   14000a09f:	setne  al
   14000a0a2:	test   al,al
   14000a0a4:	jne    0x14000a0ee
   14000a0a6:	mov    rsi,QWORD PTR [rsp+0x48]
   14000a0ab:	movsxd rax,DWORD PTR [rsi+0xc]
   14000a0af:	lea    rdi,[rsi+rax*8+0x10]
   14000a0b4:	movsxd rax,DWORD PTR [rsi+0x8]
   14000a0b8:	lea    r12,[rsi+rax*8+0x10]
   14000a0bd:	cmp    r12,rdi
   14000a0c0:	je     0x14000a0e5
   14000a0c2:	mov    rbx,QWORD PTR [rdi-0x8]
   14000a0c6:	sub    rdi,0x8
   14000a0ca:	test   rbx,rbx
   14000a0cd:	je     0x14000a0e0
   14000a0cf:	mov    rcx,rbx
   14000a0d2:	call   QWORD PTR [rip+0x16670]        # 0x140020748
   14000a0d8:	mov    rcx,rbx
   14000a0db:	call   0x14001ee46
   14000a0e0:	cmp    rdi,r12
   14000a0e3:	jne    0x14000a0c2
   14000a0e5:	mov    rcx,rsi
   14000a0e8:	call   QWORD PTR [rip+0x165e2]        # 0x1400206d0
   14000a0ee:	lea    rcx,[rsp+0x60]
   14000a0f3:	call   QWORD PTR [rip+0x16687]        # 0x140020780
   14000a0f9:	lea    rcx,[rsp+0x50]
   14000a0fe:	call   QWORD PTR [rip+0x165f4]        # 0x1400206f8
   14000a104:	lea    rcx,[rsp+0x40]
   14000a109:	call   QWORD PTR [rip+0x16671]        # 0x140020780
   14000a10f:	mov    rbx,QWORD PTR [rsp+0xf8]
   14000a117:	lea    rcx,[rsp+0x20]
   14000a11c:	call   QWORD PTR [rip+0x164e6]        # 0x140020608
   14000a122:	jmp    0x14000a2f4
   14000a127:	lea    rdx,[rip+0x169f2]        # 0x140020b20
   14000a12e:	xor    eax,eax
   14000a130:	mov    rcx,rbp
   14000a133:	mov    rdi,rdx
   14000a136:	mov    QWORD PTR [rsp+0x28],rdx
   14000a13b:	lea    r8d,[rax+0x1]
   14000a13f:	repnz scas al,BYTE PTR es:[rdi]
   14000a141:	lea    rdx,[rsp+0x80]
   14000a149:	not    rcx
   14000a14c:	dec    rcx
   14000a14f:	mov    DWORD PTR [rsp+0x20],ecx
   14000a153:	mov    rcx,rsi
   14000a156:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14000a15b:	movdqa XMMWORD PTR [rsp+0x80],xmm0
   14000a164:	call   QWORD PTR [rip+0x1641e]        # 0x140020588
   14000a16a:	test   al,al
   14000a16c:	je     0x14000a20c
   14000a172:	lea    rcx,[rsp+0x30]
   14000a177:	mov    rdx,rsi
   14000a17a:	call   0x140005aa0
   14000a17f:	lea    rcx,[rsp+0xf8]
   14000a187:	mov    rdx,rax
   14000a18a:	call   0x140002460
   14000a18f:	mov    rsi,QWORD PTR [rsp+0x30]
   14000a194:	mov    eax,DWORD PTR [rsi]
   14000a196:	test   eax,eax
   14000a198:	je     0x14000a1bc
   14000a19a:	cmp    eax,0xffffffff
   14000a19d:	je     0x14000a38d
   14000a1a3:	mov    eax,ebp
   14000a1a5:	lock xadd DWORD PTR [rsi],eax
   14000a1a9:	add    eax,0xffffffff
   14000a1ac:	setne  al
   14000a1af:	test   al,al
   14000a1b1:	jne    0x14000a38d
   14000a1b7:	mov    rsi,QWORD PTR [rsp+0x30]
   14000a1bc:	movsxd rax,DWORD PTR [rsi+0xc]
   14000a1c0:	lea    rdi,[rsi+rax*8+0x10]
   14000a1c5:	movsxd rax,DWORD PTR [rsi+0x8]
   14000a1c9:	lea    r12,[rsi+rax*8+0x10]
   14000a1ce:	cmp    r12,rdi
   14000a1d1:	je     0x14000a1f6
   14000a1d3:	mov    rbx,QWORD PTR [rdi-0x8]
   14000a1d7:	sub    rdi,0x8
   14000a1db:	test   rbx,rbx
   14000a1de:	je     0x14000a1f1
   14000a1e0:	mov    rcx,rbx
   14000a1e3:	call   QWORD PTR [rip+0x1655f]        # 0x140020748
   14000a1e9:	mov    rcx,rbx
   14000a1ec:	call   0x14001ee46
   14000a1f1:	cmp    rdi,r12
   14000a1f4:	jne    0x14000a1d3
   14000a1f6:	mov    rcx,rsi
   14000a1f9:	call   QWORD PTR [rip+0x164d1]        # 0x1400206d0
   14000a1ff:	mov    rbx,QWORD PTR [rsp+0xf8]
   14000a207:	jmp    0x14000a2f4
   14000a20c:	lea    rdx,[rip+0x16871]        # 0x140020a84
   14000a213:	xor    eax,eax
   14000a215:	mov    rcx,rbp
   14000a218:	mov    rdi,rdx
   14000a21b:	mov    QWORD PTR [rsp+0x28],rdx
   14000a220:	lea    r8d,[rax+0x1]
   14000a224:	repnz scas al,BYTE PTR es:[rdi]
   14000a226:	lea    rdx,[rsp+0xa0]
   14000a22e:	not    rcx
   14000a231:	dec    rcx
   14000a234:	mov    DWORD PTR [rsp+0x20],ecx
   14000a238:	mov    rcx,rsi
   14000a23b:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14000a240:	movdqa XMMWORD PTR [rsp+0xa0],xmm0
   14000a249:	call   QWORD PTR [rip+0x16339]        # 0x140020588
   14000a24f:	test   al,al
   14000a251:	je     0x14000a2f4
   14000a257:	lea    rcx,[rsp+0x38]
   14000a25c:	mov    rdx,rsi
   14000a25f:	call   0x1400031a0
   14000a264:	lea    rcx,[rsp+0xf8]
   14000a26c:	mov    rdx,rax
   14000a26f:	call   0x140002460
   14000a274:	mov    rsi,QWORD PTR [rsp+0x38]
   14000a279:	mov    eax,DWORD PTR [rsi]
   14000a27b:	test   eax,eax
   14000a27d:	je     0x14000a2a1
   14000a27f:	cmp    eax,0xffffffff
   14000a282:	je     0x14000a38d
   14000a288:	mov    eax,ebp
   14000a28a:	lock xadd DWORD PTR [rsi],eax
   14000a28e:	add    eax,0xffffffff
   14000a291:	setne  al
   14000a294:	test   al,al
   14000a296:	jne    0x14000a38d
   14000a29c:	mov    rsi,QWORD PTR [rsp+0x38]
   14000a2a1:	movsxd rax,DWORD PTR [rsi+0xc]
   14000a2a5:	lea    rdi,[rsi+rax*8+0x10]
   14000a2aa:	movsxd rax,DWORD PTR [rsi+0x8]
   14000a2ae:	lea    r12,[rsi+rax*8+0x10]
   14000a2b3:	cmp    r12,rdi
   14000a2b6:	je     0x14000a2e3
   14000a2b8:	nop    DWORD PTR [rax+rax*1+0x0]
   14000a2c0:	mov    rbx,QWORD PTR [rdi-0x8]
   14000a2c4:	sub    rdi,0x8
   14000a2c8:	test   rbx,rbx
   14000a2cb:	je     0x14000a2de
   14000a2cd:	mov    rcx,rbx
   14000a2d0:	call   QWORD PTR [rip+0x16472]        # 0x140020748
   14000a2d6:	mov    rcx,rbx
   14000a2d9:	call   0x14001ee46
   14000a2de:	cmp    rdi,r12
   14000a2e1:	jne    0x14000a2c0
   14000a2e3:	mov    rcx,rsi
   14000a2e6:	call   QWORD PTR [rip+0x163e4]        # 0x1400206d0
   14000a2ec:	mov    rbx,QWORD PTR [rsp+0xf8]
   14000a2f4:	lea    rdx,[rsp+0xf8]
   14000a2fc:	mov    rcx,r13
   14000a2ff:	call   0x140008580
   14000a304:	mov    edx,DWORD PTR [rbx]
   14000a306:	mov    r12,QWORD PTR [rsp+0xe8]
   14000a30e:	test   edx,edx
   14000a310:	je     0x14000a32d
   14000a312:	cmp    edx,0xffffffff
   14000a315:	je     0x14000a37c
   14000a317:	lock xadd DWORD PTR [rbx],ebp
   14000a31b:	add    ebp,0xffffffff
   14000a31e:	setne  al
   14000a321:	test   al,al
   14000a323:	jne    0x14000a37c
   14000a325:	mov    rbx,QWORD PTR [rsp+0xf8]
   14000a32d:	movsxd rax,DWORD PTR [rbx+0xc]
   14000a331:	lea    rdi,[rbx+rax*8+0x10]
   14000a336:	movsxd rax,DWORD PTR [rbx+0x8]
   14000a33a:	lea    rbp,[rbx+rax*8+0x10]
   14000a33f:	cmp    rbp,rdi
   14000a342:	je     0x14000a373
   14000a344:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000a350:	mov    rsi,QWORD PTR [rdi-0x8]
   14000a354:	sub    rdi,0x8
   14000a358:	test   rsi,rsi
   14000a35b:	je     0x14000a36e
   14000a35d:	mov    rcx,rsi
   14000a360:	call   QWORD PTR [rip+0x163e2]        # 0x140020748
   14000a366:	mov    rcx,rsi
   14000a369:	call   0x14001ee46
   14000a36e:	cmp    rdi,rbp
   14000a371:	jne    0x14000a350
   14000a373:	mov    rcx,rbx
   14000a376:	call   QWORD PTR [rip+0x16354]        # 0x1400206d0
   14000a37c:	mov    rax,r13
   14000a37f:	add    rsp,0xb0
   14000a386:	pop    r13
   14000a388:	pop    rdi
   14000a389:	pop    rsi
   14000a38a:	pop    rbp
   14000a38b:	pop    rbx
   14000a38c:	ret    
   14000a38d:	mov    rbx,QWORD PTR [rsp+0xf8]
   14000a395:	jmp    0x14000a2f4
   14000a39a:	int3   
   14000a39b:	int3   
   14000a39c:	int3   
   14000a39d:	int3   
   14000a39e:	int3   
   14000a39f:	int3   
   14000a3a0:	mov    QWORD PTR [rsp+0x8],rcx
   14000a3a5:	push   rbx
   14000a3a6:	push   rbp
   14000a3a7:	push   rsi
   14000a3a8:	push   rdi
   14000a3a9:	push   r13
   14000a3ab:	push   r14
   14000a3ad:	sub    rsp,0x1e8
   14000a3b4:	mov    rax,QWORD PTR [rdx]
   14000a3b7:	mov    rdi,QWORD PTR [rip+0x163a2]        # 0x140020760
   14000a3be:	mov    r14,rcx
   14000a3c1:	cmp    DWORD PTR [rax+0x4],0x0
   14000a3c5:	mov    QWORD PTR [rsp+0x30],rdi
   14000a3ca:	jne    0x14000a488
   14000a3d0:	mov    QWORD PTR [rcx],rdi
   14000a3d3:	mov    eax,DWORD PTR [rdi]
   14000a3d5:	test   eax,eax
   14000a3d7:	je     0x14000a3e9
   14000a3d9:	cmp    eax,0xffffffff
   14000a3dc:	je     0x14000a418
   14000a3de:	lock add DWORD PTR [rdi],0x1
   14000a3e2:	mov    rdi,QWORD PTR [rsp+0x30]
   14000a3e7:	jmp    0x14000a418
   14000a3e9:	mov    edx,DWORD PTR [rdi+0x4]
   14000a3ec:	call   QWORD PTR [rip+0x16286]        # 0x140020678
   14000a3f2:	mov    r11,QWORD PTR [r14]
   14000a3f5:	movsxd rax,DWORD PTR [rdi+0x8]
   14000a3f9:	lea    r9,[rdi+rax*8+0x10]
   14000a3fe:	movsxd rax,DWORD PTR [r11+0xc]
   14000a402:	mov    rcx,r14
   14000a405:	lea    r8,[r11+rax*8+0x10]
   14000a40a:	movsxd rax,DWORD PTR [r11+0x8]
   14000a40e:	lea    rdx,[r11+rax*8+0x10]
   14000a413:	call   0x1400011b0
   14000a418:	mov    eax,DWORD PTR [rdi]
   14000a41a:	test   eax,eax
   14000a41c:	je     0x14000a444
   14000a41e:	cmp    eax,0xffffffff
   14000a421:	je     0x14000aedc
   14000a427:	or     r13,0xffffffffffffffff
   14000a42b:	lock xadd DWORD PTR [rdi],r13d
   14000a430:	add    r13d,0xffffffff
   14000a434:	setne  al
   14000a437:	test   al,al
   14000a439:	jne    0x14000aedc
   14000a43f:	mov    rdi,QWORD PTR [rsp+0x30]
   14000a444:	movsxd rax,DWORD PTR [rdi+0xc]
   14000a448:	lea    rbx,[rdi+rax*8+0x10]
   14000a44d:	movsxd rax,DWORD PTR [rdi+0x8]
   14000a451:	lea    rbp,[rdi+rax*8+0x10]
   14000a456:	cmp    rbp,rbx
   14000a459:	je     0x14000aed3
   14000a45f:	nop
   14000a460:	mov    rsi,QWORD PTR [rbx-0x8]
   14000a464:	sub    rbx,0x8
   14000a468:	test   rsi,rsi
   14000a46b:	je     0x14000a47e
   14000a46d:	mov    rcx,rsi
   14000a470:	call   QWORD PTR [rip+0x162d2]        # 0x140020748
   14000a476:	mov    rcx,rsi
   14000a479:	call   0x14001ee46
   14000a47e:	cmp    rbx,rbp
   14000a481:	jne    0x14000a460
   14000a483:	jmp    0x14000aed3
   14000a488:	lea    rcx,[rsp+0x40]
   14000a48d:	mov    r9d,0x2
   14000a493:	mov    r8d,0x4400
   14000a499:	mov    DWORD PTR [rsp+0x238],0x2
   14000a4a4:	call   QWORD PTR [rip+0x15eee]        # 0x140020398
   14000a4aa:	mov    r11,QWORD PTR [rip+0x162af]        # 0x140020760
   14000a4b1:	lea    rcx,[rsp+0x40]
   14000a4b6:	mov    QWORD PTR [rsp+0x38],r11
   14000a4bb:	call   QWORD PTR [rip+0x15ecf]        # 0x140020390
   14000a4c1:	or     r13,0xffffffffffffffff
   14000a4c5:	test   al,al
   14000a4c7:	je     0x14000ad86
   14000a4cd:	mov    QWORD PTR [rsp+0x1e0],r12
   14000a4d5:	mov    QWORD PTR [rsp+0x1d8],r15
   14000a4dd:	mov    DWORD PTR [rsp+0x228],r13d
   14000a4e5:	lea    r15,[rip+0x1634c]        # 0x140020838
   14000a4ec:	mov    DWORD PTR [rsp+0x230],r13d
   14000a4f4:	lea    rbp,[rip+0x1669d]        # 0x140020b98
   14000a4fb:	lea    r12,[rip+0x1667e]        # 0x140020b80
   14000a502:	lea    r14,[rip+0x1665f]        # 0x140020b68
   14000a509:	nop    DWORD PTR [rax+0x0]
   14000a510:	lea    rdx,[rsp+0xb0]
   14000a518:	lea    rcx,[rsp+0x40]
   14000a51d:	call   QWORD PTR [rip+0x15e65]        # 0x140020388
   14000a523:	lea    rcx,[rsp+0xb0]
   14000a52b:	call   QWORD PTR [rip+0x1624f]        # 0x140020780
   14000a531:	lea    rdx,[rsp+0x20]
   14000a536:	lea    rcx,[rsp+0x40]
   14000a53b:	call   QWORD PTR [rip+0x15e3f]        # 0x140020380
   14000a541:	lea    rdx,[rsp+0x20]
   14000a546:	lea    rcx,[rsp+0xb8]
   14000a54e:	call   QWORD PTR [rip+0x15ff4]        # 0x140020548
   14000a554:	mov    r9d,DWORD PTR [rsp+0x228]
   14000a55c:	mov    r8d,DWORD PTR [rsp+0x230]
   14000a564:	lea    rdx,[rsp+0x28]
   14000a569:	mov    rcx,rax
   14000a56c:	call   QWORD PTR [rip+0x15e06]        # 0x140020378
   14000a572:	lea    rcx,[rsp+0xb8]
   14000a57a:	call   QWORD PTR [rip+0x15fd8]        # 0x140020558
   14000a580:	mov    rdx,QWORD PTR [rsp+0x28]
   14000a585:	movsxd rax,DWORD PTR [rdx+0xc]
   14000a589:	lea    rsi,[rdx+rax*8+0x10]
   14000a58e:	movsxd rax,DWORD PTR [rdx+0x8]
   14000a592:	lea    rbx,[rdx+rax*8+0x10]
   14000a597:	mov    QWORD PTR [rsp+0x160],rsi
   14000a59f:	mov    QWORD PTR [rsp+0x130],rbx
   14000a5a7:	mov    QWORD PTR [rsp+0xa0],rbx
   14000a5af:	cmp    rbx,rsi
   14000a5b2:	je     0x14000a62d
   14000a5b4:	xor    eax,eax
   14000a5b6:	mov    rcx,r13
   14000a5b9:	mov    rdi,r15
   14000a5bc:	repnz scas al,BYTE PTR es:[rdi]
   14000a5be:	mov    QWORD PTR [rsp+0xc8],r15
   14000a5c6:	lea    rdx,[rsp+0x88]
   14000a5ce:	not    rcx
   14000a5d1:	dec    rcx
   14000a5d4:	mov    DWORD PTR [rsp+0xc0],ecx
   14000a5db:	mov    rcx,rbx
   14000a5de:	movaps xmm0,XMMWORD PTR [rsp+0xc0]
   14000a5e6:	movdqa XMMWORD PTR [rsp+0x1a0],xmm0
   14000a5ef:	call   QWORD PTR [rip+0x1617b]        # 0x140020770
   14000a5f5:	lea    rdx,[rsp+0x1a0]
   14000a5fd:	mov    rcx,rax
   14000a600:	call   QWORD PTR [rip+0x16172]        # 0x140020778
   14000a606:	lea    rcx,[rsp+0x88]
   14000a60e:	movzx  edi,al
   14000a611:	call   QWORD PTR [rip+0x16169]        # 0x140020780
   14000a617:	test   dil,dil
   14000a61a:	jne    0x14000a62d
   14000a61c:	add    rbx,0x8
   14000a620:	mov    QWORD PTR [rsp+0xa0],rbx
   14000a628:	cmp    rbx,rsi
   14000a62b:	jne    0x14000a5b4
   14000a62d:	cmp    rbx,rsi
   14000a630:	je     0x14000a70b
   14000a636:	mov    rax,QWORD PTR [rsp+0x38]
   14000a63b:	mov    ecx,DWORD PTR [rax]
   14000a63d:	cmp    ecx,0x1
   14000a640:	je     0x14000a670
   14000a642:	test   ecx,ecx
   14000a644:	je     0x14000a670
   14000a646:	lea    rcx,[rsp+0x38]
   14000a64b:	mov    edx,0x7fffffff
   14000a650:	mov    r8d,0x1
   14000a656:	call   0x1400026c0
   14000a65b:	test   rax,rax
   14000a65e:	je     0x14000a699
   14000a660:	lea    rdx,[rsp+0x20]
   14000a665:	mov    rcx,rax
   14000a668:	call   QWORD PTR [rip+0x1612a]        # 0x140020798
   14000a66e:	jmp    0x14000a699
   14000a670:	lea    rdx,[rsp+0x20]
   14000a675:	lea    rcx,[rsp+0x90]
   14000a67d:	call   QWORD PTR [rip+0x16115]        # 0x140020798
   14000a683:	lea    rcx,[rsp+0x38]
   14000a688:	call   QWORD PTR [rip+0x15faa]        # 0x140020638
   14000a68e:	mov    rcx,QWORD PTR [rsp+0x90]
   14000a696:	mov    QWORD PTR [rax],rcx
   14000a699:	mov    rbx,QWORD PTR [rsp+0x28]
   14000a69e:	mov    eax,DWORD PTR [rbx]
   14000a6a0:	test   eax,eax
   14000a6a2:	je     0x14000a6bf
   14000a6a4:	cmp    eax,0xffffffff
   14000a6a7:	je     0x14000a6fb
   14000a6a9:	mov    eax,r13d
   14000a6ac:	lock xadd DWORD PTR [rbx],eax
   14000a6b0:	add    eax,0xffffffff
   14000a6b3:	setne  al
   14000a6b6:	test   al,al
   14000a6b8:	jne    0x14000a6fb
   14000a6ba:	mov    rbx,QWORD PTR [rsp+0x28]
   14000a6bf:	movsxd rax,DWORD PTR [rbx+0xc]
   14000a6c3:	lea    rdi,[rbx+rax*8+0x10]
   14000a6c8:	movsxd rax,DWORD PTR [rbx+0x8]
   14000a6cc:	lea    rsi,[rbx+rax*8+0x10]
   14000a6d1:	cmp    rsi,rdi
   14000a6d4:	je     0x14000a6f2
   14000a6d6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000a6e0:	sub    rdi,0x8
   14000a6e4:	mov    rcx,rdi
   14000a6e7:	call   QWORD PTR [rip+0x1601b]        # 0x140020708
   14000a6ed:	cmp    rdi,rsi
   14000a6f0:	jne    0x14000a6e0
   14000a6f2:	mov    rcx,rbx
   14000a6f5:	call   QWORD PTR [rip+0x15fd5]        # 0x1400206d0
   14000a6fb:	lea    rcx,[rsp+0x20]
   14000a700:	call   QWORD PTR [rip+0x1607a]        # 0x140020780
   14000a706:	jmp    0x14000ad56
   14000a70b:	mov    rax,QWORD PTR [rsp+0x38]
   14000a710:	lea    rdx,[rsp+0x20]
   14000a715:	movsxd rcx,DWORD PTR [rax+0xc]
   14000a719:	lea    rsi,[rax+rcx*8+0x10]
   14000a71e:	lea    rcx,[rsp+0x80]
   14000a726:	call   QWORD PTR [rip+0x1606c]        # 0x140020798
   14000a72c:	mov    rdx,QWORD PTR [rsp+0x38]
   14000a731:	lea    rcx,[rsp+0x78]
   14000a736:	movsxd rax,DWORD PTR [rdx+0xc]
   14000a73a:	lea    rbx,[rdx+rax*8+0x10]
   14000a73f:	movsxd rax,DWORD PTR [rdx+0x8]
   14000a743:	lea    rdi,[rdx+rax*8+0x10]
   14000a748:	lea    rdx,[rsp+0x80]
   14000a750:	mov    QWORD PTR [rsp+0x1c8],rbx
   14000a758:	mov    QWORD PTR [rsp+0x1c0],rdi
   14000a760:	call   QWORD PTR [rip+0x16032]        # 0x140020798
   14000a766:	mov    QWORD PTR [rsp+0x98],rdi
   14000a76e:	cmp    rdi,rbx
   14000a771:	je     0x14000a7a9
   14000a773:	data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000a780:	lea    rcx,[rsp+0x78]
   14000a785:	mov    r8d,0x1
   14000a78b:	mov    rdx,rdi
   14000a78e:	call   QWORD PTR [rip+0x15fd4]        # 0x140020768
   14000a794:	test   al,al
   14000a796:	jne    0x14000a7a9
   14000a798:	add    rdi,0x8
   14000a79c:	mov    QWORD PTR [rsp+0x98],rdi
   14000a7a4:	cmp    rdi,rbx
   14000a7a7:	jne    0x14000a780
   14000a7a9:	lea    rcx,[rsp+0x78]
   14000a7ae:	call   QWORD PTR [rip+0x15fcc]        # 0x140020780
   14000a7b4:	lea    rcx,[rsp+0x80]
   14000a7bc:	call   QWORD PTR [rip+0x15fbe]        # 0x140020780
   14000a7c2:	cmp    rdi,rsi
   14000a7c5:	je     0x14000a83b
   14000a7c7:	mov    rbx,QWORD PTR [rsp+0x28]
   14000a7cc:	mov    eax,DWORD PTR [rbx]
   14000a7ce:	test   eax,eax
   14000a7d0:	je     0x14000a7ed
   14000a7d2:	cmp    eax,0xffffffff
   14000a7d5:	je     0x14000a82b
   14000a7d7:	mov    eax,r13d
   14000a7da:	lock xadd DWORD PTR [rbx],eax
   14000a7de:	add    eax,0xffffffff
   14000a7e1:	setne  al
   14000a7e4:	test   al,al
   14000a7e6:	jne    0x14000a82b
   14000a7e8:	mov    rbx,QWORD PTR [rsp+0x28]
   14000a7ed:	movsxd rax,DWORD PTR [rbx+0xc]
   14000a7f1:	lea    rdi,[rbx+rax*8+0x10]
   14000a7f6:	movsxd rax,DWORD PTR [rbx+0x8]
   14000a7fa:	lea    rsi,[rbx+rax*8+0x10]
   14000a7ff:	cmp    rsi,rdi
   14000a802:	je     0x14000a822
   14000a804:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000a810:	sub    rdi,0x8
   14000a814:	mov    rcx,rdi
   14000a817:	call   QWORD PTR [rip+0x15eeb]        # 0x140020708
   14000a81d:	cmp    rdi,rsi
   14000a820:	jne    0x14000a810
   14000a822:	mov    rcx,rbx
   14000a825:	call   QWORD PTR [rip+0x15ea5]        # 0x1400206d0
   14000a82b:	lea    rcx,[rsp+0x20]
   14000a830:	call   QWORD PTR [rip+0x15f4a]        # 0x140020780
   14000a836:	jmp    0x14000ad56
   14000a83b:	xor    eax,eax
   14000a83d:	mov    rcx,r13
   14000a840:	mov    rdi,rbp
   14000a843:	repnz scas al,BYTE PTR es:[rdi]
   14000a845:	mov    QWORD PTR [rsp+0x118],rbp
   14000a84d:	lea    rdx,[rsp+0x180]
   14000a855:	not    rcx
   14000a858:	lea    r9d,[rax+0x1]
   14000a85c:	xor    r8d,r8d
   14000a85f:	dec    rcx
   14000a862:	mov    DWORD PTR [rsp+0x110],ecx
   14000a869:	lea    rcx,[rsp+0x20]
   14000a86e:	movaps xmm0,XMMWORD PTR [rsp+0x110]
   14000a876:	movdqa XMMWORD PTR [rsp+0x180],xmm0
   14000a87f:	call   QWORD PTR [rip+0x15aeb]        # 0x140020370
   14000a885:	cmp    eax,0xffffffff
   14000a888:	jne    0x14000acf0
   14000a88e:	xor    eax,eax
   14000a890:	mov    rcx,r13
   14000a893:	mov    rdi,r12
   14000a896:	repnz scas al,BYTE PTR es:[rdi]
   14000a898:	mov    QWORD PTR [rsp+0xf8],r12
   14000a8a0:	lea    rdx,[rsp+0x140]
   14000a8a8:	not    rcx
   14000a8ab:	lea    r9d,[rax+0x1]
   14000a8af:	xor    r8d,r8d
   14000a8b2:	dec    rcx
   14000a8b5:	mov    DWORD PTR [rsp+0xf0],ecx
   14000a8bc:	lea    rcx,[rsp+0x20]
   14000a8c1:	movaps xmm0,XMMWORD PTR [rsp+0xf0]
   14000a8c9:	movdqa XMMWORD PTR [rsp+0x140],xmm0
   14000a8d2:	call   QWORD PTR [rip+0x15a98]        # 0x140020370
   14000a8d8:	cmp    eax,0xffffffff
   14000a8db:	jne    0x14000acf0
   14000a8e1:	xor    eax,eax
   14000a8e3:	mov    rcx,r13
   14000a8e6:	mov    rdi,r14
   14000a8e9:	repnz scas al,BYTE PTR es:[rdi]
   14000a8eb:	mov    QWORD PTR [rsp+0xd8],r14
   14000a8f3:	lea    rdx,[rsp+0x150]
   14000a8fb:	not    rcx
   14000a8fe:	lea    r9d,[rax+0x1]
   14000a902:	xor    r8d,r8d
   14000a905:	dec    rcx
   14000a908:	mov    DWORD PTR [rsp+0xd0],ecx
   14000a90f:	lea    rcx,[rsp+0x20]
   14000a914:	movaps xmm0,XMMWORD PTR [rsp+0xd0]
   14000a91c:	movdqa XMMWORD PTR [rsp+0x150],xmm0
   14000a925:	call   QWORD PTR [rip+0x15a45]        # 0x140020370
   14000a92b:	cmp    eax,0xffffffff
   14000a92e:	jne    0x14000acf0
   14000a934:	lea    rdx,[rip+0x16215]        # 0x140020b50
   14000a93b:	xor    eax,eax
   14000a93d:	mov    rcx,r13
   14000a940:	mov    rdi,rdx
   14000a943:	mov    QWORD PTR [rsp+0xe8],rdx
   14000a94b:	lea    r9d,[rax+0x1]
   14000a94f:	repnz scas al,BYTE PTR es:[rdi]
   14000a951:	lea    rdx,[rsp+0x170]
   14000a959:	xor    r8d,r8d
   14000a95c:	not    rcx
   14000a95f:	dec    rcx
   14000a962:	mov    DWORD PTR [rsp+0xe0],ecx
   14000a969:	lea    rcx,[rsp+0x20]
   14000a96e:	movaps xmm0,XMMWORD PTR [rsp+0xe0]
   14000a976:	movdqa XMMWORD PTR [rsp+0x170],xmm0
   14000a97f:	call   QWORD PTR [rip+0x159eb]        # 0x140020370
   14000a985:	cmp    eax,0xffffffff
   14000a988:	jne    0x14000acf0
   14000a98e:	lea    rdx,[rip+0x161ab]        # 0x140020b40
   14000a995:	xor    eax,eax
   14000a997:	mov    rcx,r13
   14000a99a:	mov    rdi,rdx
   14000a99d:	mov    QWORD PTR [rsp+0x108],rdx
   14000a9a5:	lea    r9d,[rax+0x1]
   14000a9a9:	repnz scas al,BYTE PTR es:[rdi]
   14000a9ab:	lea    rdx,[rsp+0x190]
   14000a9b3:	xor    r8d,r8d
   14000a9b6:	not    rcx
   14000a9b9:	dec    rcx
   14000a9bc:	mov    DWORD PTR [rsp+0x100],ecx
   14000a9c3:	lea    rcx,[rsp+0x20]
   14000a9c8:	movaps xmm0,XMMWORD PTR [rsp+0x100]
   14000a9d0:	movdqa XMMWORD PTR [rsp+0x190],xmm0
   14000a9d9:	call   QWORD PTR [rip+0x15991]        # 0x140020370
   14000a9df:	cmp    eax,0xffffffff
   14000a9e2:	jne    0x14000acf0
   14000a9e8:	lea    rdx,[rip+0x16149]        # 0x140020b38
   14000a9ef:	xor    eax,eax
   14000a9f1:	mov    rcx,r13
   14000a9f4:	mov    rdi,rdx
   14000a9f7:	mov    QWORD PTR [rsp+0x128],rdx
   14000a9ff:	lea    r9d,[rax+0x1]
   14000aa03:	repnz scas al,BYTE PTR es:[rdi]
   14000aa05:	lea    rdx,[rsp+0x1b0]
   14000aa0d:	xor    r8d,r8d
   14000aa10:	not    rcx
   14000aa13:	dec    rcx
   14000aa16:	mov    DWORD PTR [rsp+0x120],ecx
   14000aa1d:	lea    rcx,[rsp+0x20]
   14000aa22:	movaps xmm0,XMMWORD PTR [rsp+0x120]
   14000aa2a:	movdqa XMMWORD PTR [rsp+0x1b0],xmm0
   14000aa33:	call   QWORD PTR [rip+0x15937]        # 0x140020370
   14000aa39:	cmp    eax,0xffffffff
   14000aa3c:	jne    0x14000acf0
   14000aa42:	mov    rdx,QWORD PTR [rsp+0x28]
   14000aa47:	mov    QWORD PTR [rsp+0x48],rdx
   14000aa4c:	mov    eax,DWORD PTR [rdx]
   14000aa4e:	test   eax,eax
   14000aa50:	je     0x14000aa62
   14000aa52:	cmp    eax,0xffffffff
   14000aa55:	je     0x14000aac3
   14000aa57:	lock add DWORD PTR [rdx],0x1
   14000aa5b:	mov    rdx,QWORD PTR [rsp+0x48]
   14000aa60:	jmp    0x14000aac3
   14000aa62:	mov    edx,DWORD PTR [rdx+0x4]
   14000aa65:	lea    rcx,[rsp+0x48]
   14000aa6a:	call   QWORD PTR [rip+0x15c08]        # 0x140020678
   14000aa70:	mov    rdx,QWORD PTR [rsp+0x48]
   14000aa75:	movsxd rax,DWORD PTR [rdx+0xc]
   14000aa79:	lea    rsi,[rdx+rax*8+0x10]
   14000aa7e:	mov    rax,QWORD PTR [rsp+0x28]
   14000aa83:	movsxd rcx,DWORD PTR [rax+0x8]
   14000aa87:	lea    rbx,[rax+rcx*8+0x10]
   14000aa8c:	movsxd rax,DWORD PTR [rdx+0x8]
   14000aa90:	lea    rdi,[rdx+rax*8+0x10]
   14000aa95:	cmp    rdi,rsi
   14000aa98:	je     0x14000aac3
   14000aa9a:	nop    WORD PTR [rax+rax*1+0x0]
   14000aaa0:	test   rdi,rdi
   14000aaa3:	je     0x14000aab1
   14000aaa5:	mov    rdx,rbx
   14000aaa8:	mov    rcx,rdi
   14000aaab:	call   QWORD PTR [rip+0x15c4f]        # 0x140020700
   14000aab1:	add    rdi,0x8
   14000aab5:	add    rbx,0x8
   14000aab9:	cmp    rdi,rsi
   14000aabc:	jne    0x14000aaa0
   14000aabe:	mov    rdx,QWORD PTR [rsp+0x48]
   14000aac3:	mov    DWORD PTR [rsp+0x50],0x0
   14000aacb:	movsxd rax,DWORD PTR [rdx+0x8]
   14000aacf:	lea    r12,[rdx+rax*8+0x10]
   14000aad4:	mov    QWORD PTR [rsp+0x58],r12
   14000aad9:	movsxd rax,DWORD PTR [rdx+0xc]
   14000aadd:	lea    rcx,[rdx+rax*8+0x10]
   14000aae2:	mov    QWORD PTR [rsp+0x60],rcx
   14000aae7:	nop    WORD PTR [rax+rax*1+0x0]
   14000aaf0:	mov    eax,0x1
   14000aaf5:	mov    DWORD PTR [rsp+0x50],eax
   14000aaf9:	cmp    r12,rcx
   14000aafc:	je     0x14000ac71
   14000ab02:	test   eax,eax
   14000ab04:	je     0x14000ac59
   14000ab0a:	mov    rcx,r12
   14000ab0d:	call   QWORD PTR [rip+0x15855]        # 0x140020368
   14000ab13:	test   al,al
   14000ab15:	je     0x14000ac4a
   14000ab1b:	lea    rdx,[rsp+0xa8]
   14000ab23:	mov    rcx,r12
   14000ab26:	call   QWORD PTR [rip+0x15834]        # 0x140020360
   14000ab2c:	lea    rcx,[rsp+0x70]
   14000ab31:	mov    rdx,rax
   14000ab34:	call   0x140009f60
   14000ab39:	lea    rdx,[rsp+0x30]
   14000ab3e:	lea    rcx,[rsp+0x68]
   14000ab43:	mov    r8,rax
   14000ab46:	call   0x140003c00
   14000ab4b:	lea    rcx,[rsp+0x30]
   14000ab50:	mov    rdx,rax
   14000ab53:	call   0x140002460
   14000ab58:	mov    rsi,QWORD PTR [rsp+0x68]
   14000ab5d:	mov    eax,DWORD PTR [rsi]
   14000ab5f:	test   eax,eax
   14000ab61:	je     0x14000ab7e
   14000ab63:	cmp    eax,0xffffffff
   14000ab66:	je     0x14000abcc
   14000ab68:	mov    eax,r13d
   14000ab6b:	lock xadd DWORD PTR [rsi],eax
   14000ab6f:	add    eax,0xffffffff
   14000ab72:	setne  al
   14000ab75:	test   al,al
   14000ab77:	jne    0x14000abcc
   14000ab79:	mov    rsi,QWORD PTR [rsp+0x68]
   14000ab7e:	movsxd rax,DWORD PTR [rsi+0xc]
   14000ab82:	lea    rdi,[rsi+rax*8+0x10]
   14000ab87:	movsxd rax,DWORD PTR [rsi+0x8]
   14000ab8b:	lea    rbp,[rsi+rax*8+0x10]
   14000ab90:	cmp    rbp,rdi
   14000ab93:	je     0x14000abc3
   14000ab95:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000aba0:	mov    rbx,QWORD PTR [rdi-0x8]
   14000aba4:	sub    rdi,0x8
   14000aba8:	test   rbx,rbx
   14000abab:	je     0x14000abbe
   14000abad:	mov    rcx,rbx
   14000abb0:	call   QWORD PTR [rip+0x15b92]        # 0x140020748
   14000abb6:	mov    rcx,rbx
   14000abb9:	call   0x14001ee46
   14000abbe:	cmp    rdi,rbp
   14000abc1:	jne    0x14000aba0
   14000abc3:	mov    rcx,rsi
   14000abc6:	call   QWORD PTR [rip+0x15b04]        # 0x1400206d0
   14000abcc:	mov    rsi,QWORD PTR [rsp+0x70]
   14000abd1:	mov    eax,DWORD PTR [rsi]
   14000abd3:	test   eax,eax
   14000abd5:	je     0x14000abf2
   14000abd7:	cmp    eax,0xffffffff
   14000abda:	je     0x14000ac3c
   14000abdc:	mov    eax,r13d
   14000abdf:	lock xadd DWORD PTR [rsi],eax
   14000abe3:	add    eax,0xffffffff
   14000abe6:	setne  al
   14000abe9:	test   al,al
   14000abeb:	jne    0x14000ac3c
   14000abed:	mov    rsi,QWORD PTR [rsp+0x70]
   14000abf2:	movsxd rax,DWORD PTR [rsi+0xc]
   14000abf6:	lea    rdi,[rsi+rax*8+0x10]
   14000abfb:	movsxd rax,DWORD PTR [rsi+0x8]
   14000abff:	lea    rbp,[rsi+rax*8+0x10]
   14000ac04:	cmp    rbp,rdi
   14000ac07:	je     0x14000ac33
   14000ac09:	nop    DWORD PTR [rax+0x0]
   14000ac10:	mov    rbx,QWORD PTR [rdi-0x8]
   14000ac14:	sub    rdi,0x8
   14000ac18:	test   rbx,rbx
   14000ac1b:	je     0x14000ac2e
   14000ac1d:	mov    rcx,rbx
   14000ac20:	call   QWORD PTR [rip+0x15b22]        # 0x140020748
   14000ac26:	mov    rcx,rbx
   14000ac29:	call   0x14001ee46
   14000ac2e:	cmp    rdi,rbp
   14000ac31:	jne    0x14000ac10
   14000ac33:	mov    rcx,rsi
   14000ac36:	call   QWORD PTR [rip+0x15a94]        # 0x1400206d0
   14000ac3c:	lea    rcx,[rsp+0xa8]
   14000ac44:	call   QWORD PTR [rip+0x15b36]        # 0x140020780
   14000ac4a:	mov    eax,DWORD PTR [rsp+0x50]
   14000ac4e:	dec    eax
   14000ac50:	mov    DWORD PTR [rsp+0x50],eax
   14000ac54:	jmp    0x14000ab02
   14000ac59:	mov    r12,QWORD PTR [rsp+0x58]
   14000ac5e:	mov    rcx,QWORD PTR [rsp+0x60]
   14000ac63:	add    r12,0x8
   14000ac67:	mov    QWORD PTR [rsp+0x58],r12
   14000ac6c:	jmp    0x14000aaf0
   14000ac71:	mov    rbx,QWORD PTR [rsp+0x48]
   14000ac76:	mov    eax,DWORD PTR [rbx]
   14000ac78:	test   eax,eax
   14000ac7a:	je     0x14000ac97
   14000ac7c:	cmp    eax,0xffffffff
   14000ac7f:	je     0x14000accb
   14000ac81:	mov    eax,r13d
   14000ac84:	lock xadd DWORD PTR [rbx],eax
   14000ac88:	add    eax,0xffffffff
   14000ac8b:	setne  al
   14000ac8e:	test   al,al
   14000ac90:	jne    0x14000accb
   14000ac92:	mov    rbx,QWORD PTR [rsp+0x48]
   14000ac97:	movsxd rax,DWORD PTR [rbx+0xc]
   14000ac9b:	lea    rdi,[rbx+rax*8+0x10]
   14000aca0:	movsxd rax,DWORD PTR [rbx+0x8]
   14000aca4:	lea    rsi,[rbx+rax*8+0x10]
   14000aca9:	cmp    rsi,rdi
   14000acac:	je     0x14000acc2
   14000acae:	xchg   ax,ax
   14000acb0:	sub    rdi,0x8
   14000acb4:	mov    rcx,rdi
   14000acb7:	call   QWORD PTR [rip+0x15a4b]        # 0x140020708
   14000acbd:	cmp    rdi,rsi
   14000acc0:	jne    0x14000acb0
   14000acc2:	mov    rcx,rbx
   14000acc5:	call   QWORD PTR [rip+0x15a05]        # 0x1400206d0
   14000accb:	lea    rcx,[rsp+0x28]
   14000acd0:	call   0x140002640
   14000acd5:	lea    rcx,[rsp+0x20]
   14000acda:	call   QWORD PTR [rip+0x15aa0]        # 0x140020780
   14000ace0:	lea    rbp,[rip+0x15eb1]        # 0x140020b98
   14000ace7:	lea    r12,[rip+0x15e92]        # 0x140020b80
   14000acee:	jmp    0x14000ad56
   14000acf0:	mov    rbx,QWORD PTR [rsp+0x28]
   14000acf5:	mov    eax,DWORD PTR [rbx]
   14000acf7:	test   eax,eax
   14000acf9:	je     0x14000ad16
   14000acfb:	cmp    eax,0xffffffff
   14000acfe:	je     0x14000ad4b
   14000ad00:	mov    eax,r13d
   14000ad03:	lock xadd DWORD PTR [rbx],eax
   14000ad07:	add    eax,0xffffffff
   14000ad0a:	setne  al
   14000ad0d:	test   al,al
   14000ad0f:	jne    0x14000ad4b
   14000ad11:	mov    rbx,QWORD PTR [rsp+0x28]
   14000ad16:	movsxd rax,DWORD PTR [rbx+0xc]
   14000ad1a:	lea    rdi,[rbx+rax*8+0x10]
   14000ad1f:	movsxd rax,DWORD PTR [rbx+0x8]
   14000ad23:	lea    rsi,[rbx+rax*8+0x10]
   14000ad28:	cmp    rsi,rdi
   14000ad2b:	je     0x14000ad42
   14000ad2d:	nop    DWORD PTR [rax]
   14000ad30:	sub    rdi,0x8
   14000ad34:	mov    rcx,rdi
   14000ad37:	call   QWORD PTR [rip+0x159cb]        # 0x140020708
   14000ad3d:	cmp    rdi,rsi
   14000ad40:	jne    0x14000ad30
   14000ad42:	mov    rcx,rbx
   14000ad45:	call   QWORD PTR [rip+0x15985]        # 0x1400206d0
   14000ad4b:	lea    rcx,[rsp+0x20]
   14000ad50:	call   QWORD PTR [rip+0x15a2a]        # 0x140020780
   14000ad56:	lea    rcx,[rsp+0x40]
   14000ad5b:	call   QWORD PTR [rip+0x1562f]        # 0x140020390
   14000ad61:	test   al,al
   14000ad63:	jne    0x14000a510
   14000ad69:	mov    rdi,QWORD PTR [rsp+0x30]
   14000ad6e:	mov    r14,QWORD PTR [rsp+0x220]
   14000ad76:	mov    r15,QWORD PTR [rsp+0x1d8]
   14000ad7e:	mov    r12,QWORD PTR [rsp+0x1e0]
   14000ad86:	mov    QWORD PTR [r14],rdi
   14000ad89:	mov    eax,DWORD PTR [rdi]
   14000ad8b:	test   eax,eax
   14000ad8d:	je     0x14000ad9f
   14000ad8f:	cmp    eax,0xffffffff
   14000ad92:	je     0x14000adff
   14000ad94:	lock add DWORD PTR [rdi],0x1
   14000ad98:	mov    rdi,QWORD PTR [rsp+0x30]
   14000ad9d:	jmp    0x14000adff
   14000ad9f:	mov    edx,DWORD PTR [rdi+0x4]
   14000ada2:	mov    rcx,r14
   14000ada5:	call   QWORD PTR [rip+0x158cd]        # 0x140020678
   14000adab:	mov    r11,QWORD PTR [r14]
   14000adae:	movsxd rax,DWORD PTR [r11+0xc]
   14000adb2:	lea    rbp,[r11+rax*8+0x10]
   14000adb7:	movsxd rax,DWORD PTR [rdi+0x8]
   14000adbb:	lea    rsi,[rdi+rax*8+0x10]
   14000adc0:	movsxd rax,DWORD PTR [r11+0x8]
   14000adc4:	lea    rbx,[r11+rax*8+0x10]
   14000adc9:	cmp    rbx,rbp
   14000adcc:	je     0x14000adff
   14000adce:	xchg   ax,ax
   14000add0:	mov    ecx,0x10
   14000add5:	call   0x14001ee64
   14000adda:	test   rax,rax
   14000addd:	je     0x14000aded
   14000addf:	mov    rdx,QWORD PTR [rsi]
   14000ade2:	mov    rcx,rax
   14000ade5:	call   QWORD PTR [rip+0x1594d]        # 0x140020738
   14000adeb:	jmp    0x14000adef
   14000aded:	xor    eax,eax
   14000adef:	mov    QWORD PTR [rbx],rax
   14000adf2:	add    rbx,0x8
   14000adf6:	add    rsi,0x8
   14000adfa:	cmp    rbx,rbp
   14000adfd:	jne    0x14000add0
   14000adff:	mov    rsi,QWORD PTR [rsp+0x38]
   14000ae04:	mov    eax,DWORD PTR [rsi]
   14000ae06:	test   eax,eax
   14000ae08:	je     0x14000ae2e
   14000ae0a:	cmp    eax,0xffffffff
   14000ae0d:	je     0x14000ae6b
   14000ae0f:	mov    eax,r13d
   14000ae12:	lock xadd DWORD PTR [rsi],eax
   14000ae16:	add    eax,0xffffffff
   14000ae19:	setne  al
   14000ae1c:	test   al,al
   14000ae1e:	jne    0x14000aeef
   14000ae24:	mov    rdi,QWORD PTR [rsp+0x30]
   14000ae29:	mov    rsi,QWORD PTR [rsp+0x38]
   14000ae2e:	movsxd rax,DWORD PTR [rsi+0xc]
   14000ae32:	lea    rbx,[rsi+rax*8+0x10]
   14000ae37:	movsxd rax,DWORD PTR [rsi+0x8]
   14000ae3b:	lea    rbp,[rsi+rax*8+0x10]
   14000ae40:	cmp    rbp,rbx
   14000ae43:	je     0x14000ae62
   14000ae45:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000ae50:	sub    rbx,0x8
   14000ae54:	mov    rcx,rbx
   14000ae57:	call   QWORD PTR [rip+0x15923]        # 0x140020780
   14000ae5d:	cmp    rbx,rbp
   14000ae60:	jne    0x14000ae50
   14000ae62:	mov    rcx,rsi
   14000ae65:	call   QWORD PTR [rip+0x15865]        # 0x1400206d0
   14000ae6b:	lea    rcx,[rsp+0x40]
   14000ae70:	call   QWORD PTR [rip+0x154e2]        # 0x140020358
   14000ae76:	mov    r11d,DWORD PTR [rdi]
   14000ae79:	test   r11d,r11d
   14000ae7c:	je     0x14000ae99
   14000ae7e:	cmp    r11d,0xffffffff
   14000ae82:	je     0x14000aedc
   14000ae84:	lock xadd DWORD PTR [rdi],r13d
   14000ae89:	add    r13d,0xffffffff
   14000ae8d:	setne  al
   14000ae90:	test   al,al
   14000ae92:	jne    0x14000aedc
   14000ae94:	mov    rdi,QWORD PTR [rsp+0x30]
   14000ae99:	movsxd rax,DWORD PTR [rdi+0xc]
   14000ae9d:	lea    rbx,[rdi+rax*8+0x10]
   14000aea2:	movsxd rax,DWORD PTR [rdi+0x8]
   14000aea6:	lea    rbp,[rdi+rax*8+0x10]
   14000aeab:	cmp    rbp,rbx
   14000aeae:	je     0x14000aed3
   14000aeb0:	mov    rsi,QWORD PTR [rbx-0x8]
   14000aeb4:	sub    rbx,0x8
   14000aeb8:	test   rsi,rsi
   14000aebb:	je     0x14000aece
   14000aebd:	mov    rcx,rsi
   14000aec0:	call   QWORD PTR [rip+0x15882]        # 0x140020748
   14000aec6:	mov    rcx,rsi
   14000aec9:	call   0x14001ee46
   14000aece:	cmp    rbx,rbp
   14000aed1:	jne    0x14000aeb0
   14000aed3:	mov    rcx,rdi
   14000aed6:	call   QWORD PTR [rip+0x157f4]        # 0x1400206d0
   14000aedc:	mov    rax,r14
   14000aedf:	add    rsp,0x1e8
   14000aee6:	pop    r14
   14000aee8:	pop    r13
   14000aeea:	pop    rdi
   14000aeeb:	pop    rsi
   14000aeec:	pop    rbp
   14000aeed:	pop    rbx
   14000aeee:	ret    
   14000aeef:	mov    rdi,QWORD PTR [rsp+0x30]
   14000aef4:	jmp    0x14000ae6b
   14000aef9:	int3   
   14000aefa:	int3   
   14000aefb:	int3   
   14000aefc:	int3   
   14000aefd:	int3   
   14000aefe:	int3   
   14000aeff:	int3   
   14000af00:	mov    QWORD PTR [rsp+0x10],rdx
   14000af05:	mov    QWORD PTR [rsp+0x8],rcx
   14000af0a:	push   rbx
   14000af0b:	push   rbp
   14000af0c:	push   rsi
   14000af0d:	push   rdi
   14000af0e:	push   r12
   14000af10:	push   r13
   14000af12:	push   r14
   14000af14:	push   r15
   14000af16:	sub    rsp,0xe8
   14000af1d:	mov    rax,QWORD PTR [rip+0x1582c]        # 0x140020750
   14000af24:	mov    r13,rdx
   14000af27:	mov    r12,rcx
   14000af2a:	mov    QWORD PTR [rcx],rax
   14000af2d:	mov    rdx,QWORD PTR [rdx]
   14000af30:	mov    QWORD PTR [rsp+0x20],rdx
   14000af35:	mov    eax,DWORD PTR [rdx]
   14000af37:	test   eax,eax
   14000af39:	je     0x14000af46
   14000af3b:	cmp    eax,0xffffffff
   14000af3e:	je     0x14000afb4
   14000af40:	lock add DWORD PTR [rdx],0x1
   14000af44:	jmp    0x14000afaf
   14000af46:	mov    edx,DWORD PTR [rdx+0x4]
   14000af49:	lea    rcx,[rsp+0x20]
   14000af4e:	call   QWORD PTR [rip+0x15724]        # 0x140020678
   14000af54:	mov    rdx,QWORD PTR [r13+0x0]
   14000af58:	movsxd rax,DWORD PTR [rdx+0x8]
   14000af5c:	lea    rbx,[rdx+rax*8+0x10]
   14000af61:	mov    rdx,QWORD PTR [rsp+0x20]
   14000af66:	movsxd rax,DWORD PTR [rdx+0xc]
   14000af6a:	lea    rsi,[rdx+rax*8+0x10]
   14000af6f:	movsxd rax,DWORD PTR [rdx+0x8]
   14000af73:	lea    rdi,[rdx+rax*8+0x10]
   14000af78:	cmp    rdi,rsi
   14000af7b:	je     0x14000afb4
   14000af7d:	nop    DWORD PTR [rax]
   14000af80:	mov    ecx,0x10
   14000af85:	call   0x14001ee64
   14000af8a:	test   rax,rax
   14000af8d:	je     0x14000af9d
   14000af8f:	mov    rdx,QWORD PTR [rbx]
   14000af92:	mov    rcx,rax
   14000af95:	call   QWORD PTR [rip+0x1579d]        # 0x140020738
   14000af9b:	jmp    0x14000af9f
   14000af9d:	xor    eax,eax
   14000af9f:	mov    QWORD PTR [rdi],rax
   14000afa2:	add    rdi,0x8
   14000afa6:	add    rbx,0x8
   14000afaa:	cmp    rdi,rsi
   14000afad:	jne    0x14000af80
   14000afaf:	mov    rdx,QWORD PTR [rsp+0x20]
   14000afb4:	mov    DWORD PTR [rsp+0x28],0x0
   14000afbc:	movsxd rax,DWORD PTR [rdx+0x8]
   14000afc0:	or     r14,0xffffffffffffffff
   14000afc4:	lea    rcx,[rdx+rax*8+0x10]
   14000afc9:	mov    QWORD PTR [rsp+0x30],rcx
   14000afce:	movsxd rax,DWORD PTR [rdx+0xc]
   14000afd2:	lea    rdx,[rdx+rax*8+0x10]
   14000afd7:	mov    QWORD PTR [rsp+0x38],rdx
   14000afdc:	nop    DWORD PTR [rax+0x0]
   14000afe0:	mov    eax,0x1
   14000afe5:	mov    DWORD PTR [rsp+0x28],eax
   14000afe9:	cmp    rcx,rdx
   14000afec:	je     0x14000b306
   14000aff2:	mov    r15,QWORD PTR [rcx]
   14000aff5:	test   eax,eax
   14000aff7:	je     0x14000b2ee
   14000affd:	lea    rcx,[rsp+0x40]
   14000b002:	mov    rdx,r15
   14000b005:	call   0x140008240
   14000b00a:	lea    rcx,[rsp+0xa0]
   14000b012:	call   QWORD PTR [rip+0x155c0]        # 0x1400205d8
   14000b018:	lea    rdx,[rip+0x15a31]        # 0x140020a50
   14000b01f:	lea    rcx,[rsp+0x60]
   14000b024:	mov    r8d,0x4
   14000b02a:	mov    r12,rax
   14000b02d:	call   QWORD PTR [rip+0x1554d]        # 0x140020580
   14000b033:	mov    rbx,QWORD PTR [rsp+0x40]
   14000b038:	mov    rdi,QWORD PTR [rbx+0x10]
   14000b03c:	lea    r13,[rbx+0x10]
   14000b040:	mov    rbp,rax
   14000b043:	test   rdi,rdi
   14000b046:	je     0x14000b08d
   14000b048:	xor    esi,esi
   14000b04a:	nop    WORD PTR [rax+rax*1+0x0]
   14000b050:	lea    rcx,[rdi+0x18]
   14000b054:	mov    rdx,rbp
   14000b057:	call   QWORD PTR [rip+0x156b3]        # 0x140020710
   14000b05d:	test   al,al
   14000b05f:	jne    0x14000b06a
   14000b061:	mov    rsi,rdi
   14000b064:	mov    rdi,QWORD PTR [rdi+0x8]
   14000b068:	jmp    0x14000b06e
   14000b06a:	mov    rdi,QWORD PTR [rdi+0x10]
   14000b06e:	test   rdi,rdi
   14000b071:	jne    0x14000b050
   14000b073:	test   rsi,rsi
   14000b076:	je     0x14000b08d
   14000b078:	lea    rdx,[rsi+0x18]
   14000b07c:	mov    rcx,rbp
   14000b07f:	call   QWORD PTR [rip+0x1568b]        # 0x140020710
   14000b085:	test   al,al
   14000b087:	jne    0x14000b08d
   14000b089:	lea    r12,[rsi+0x20]
   14000b08d:	lea    rcx,[rsp+0x68]
   14000b092:	mov    rdx,r12
   14000b095:	call   QWORD PTR [rip+0x1569d]        # 0x140020738
   14000b09b:	lea    rdx,[rsp+0x140]
   14000b0a3:	lea    rcx,[rsp+0x68]
   14000b0a8:	call   QWORD PTR [rip+0x1523a]        # 0x1400202e8
   14000b0ae:	lea    rcx,[rsp+0x68]
   14000b0b3:	call   QWORD PTR [rip+0x1568f]        # 0x140020748
   14000b0b9:	lea    rcx,[rsp+0x60]
   14000b0be:	call   QWORD PTR [rip+0x156bc]        # 0x140020780
   14000b0c4:	lea    rcx,[rsp+0xa0]
   14000b0cc:	call   QWORD PTR [rip+0x15676]        # 0x140020748
   14000b0d2:	lea    rcx,[rsp+0xc0]
   14000b0da:	call   QWORD PTR [rip+0x154f8]        # 0x1400205d8
   14000b0e0:	lea    rdx,[rip+0x1597d]        # 0x140020a64
   14000b0e7:	lea    rcx,[rsp+0x48]
   14000b0ec:	mov    r8d,0x4
   14000b0f2:	mov    r12,rax
   14000b0f5:	call   QWORD PTR [rip+0x15485]        # 0x140020580
   14000b0fb:	mov    rdi,QWORD PTR [r13+0x0]
   14000b0ff:	mov    rbp,rax
   14000b102:	test   rdi,rdi
   14000b105:	je     0x14000b14d
   14000b107:	xor    esi,esi
   14000b109:	nop    DWORD PTR [rax+0x0]
   14000b110:	lea    rcx,[rdi+0x18]
   14000b114:	mov    rdx,rbp
   14000b117:	call   QWORD PTR [rip+0x155f3]        # 0x140020710
   14000b11d:	test   al,al
   14000b11f:	jne    0x14000b12a
   14000b121:	mov    rsi,rdi
   14000b124:	mov    rdi,QWORD PTR [rdi+0x8]
   14000b128:	jmp    0x14000b12e
   14000b12a:	mov    rdi,QWORD PTR [rdi+0x10]
   14000b12e:	test   rdi,rdi
   14000b131:	jne    0x14000b110
   14000b133:	test   rsi,rsi
   14000b136:	je     0x14000b14d
   14000b138:	lea    rdx,[rsi+0x18]
   14000b13c:	mov    rcx,rbp
   14000b13f:	call   QWORD PTR [rip+0x155cb]        # 0x140020710
   14000b145:	test   al,al
   14000b147:	jne    0x14000b14d
   14000b149:	lea    r12,[rsi+0x20]
   14000b14d:	lea    rcx,[rsp+0x78]
   14000b152:	mov    rdx,r12
   14000b155:	call   QWORD PTR [rip+0x155dd]        # 0x140020738
   14000b15b:	lea    rdx,[rsp+0x148]
   14000b163:	lea    rcx,[rsp+0x78]
   14000b168:	call   QWORD PTR [rip+0x1517a]        # 0x1400202e8
   14000b16e:	lea    rcx,[rsp+0x78]
   14000b173:	call   QWORD PTR [rip+0x155cf]        # 0x140020748
   14000b179:	lea    rcx,[rsp+0x48]
   14000b17e:	call   QWORD PTR [rip+0x155fc]        # 0x140020780
   14000b184:	lea    rcx,[rsp+0xc0]
   14000b18c:	call   QWORD PTR [rip+0x155b6]        # 0x140020748
   14000b192:	lea    rsi,[rip+0x158af]        # 0x140020a48
   14000b199:	xor    eax,eax
   14000b19b:	mov    rcx,r14
   14000b19e:	mov    rdi,rsi
   14000b1a1:	mov    QWORD PTR [rsp+0x98],rsi
   14000b1a9:	repnz scas al,BYTE PTR es:[rdi]
   14000b1ab:	lea    rdx,[rsp+0xb0]
   14000b1b3:	not    rcx
   14000b1b6:	dec    rcx
   14000b1b9:	mov    DWORD PTR [rsp+0x90],ecx
   14000b1c0:	lea    rcx,[rsp+0x148]
   14000b1c8:	movaps xmm0,XMMWORD PTR [rsp+0x90]
   14000b1d0:	movdqa XMMWORD PTR [rsp+0xb0],xmm0
   14000b1d9:	call   QWORD PTR [rip+0x15599]        # 0x140020778
   14000b1df:	test   al,al
   14000b1e1:	je     0x14000b245
   14000b1e3:	mov    rax,QWORD PTR [rsp+0x140]
   14000b1eb:	cmp    DWORD PTR [rax+0x4],0x0
   14000b1ef:	je     0x14000b245
   14000b1f1:	lea    rdx,[rsp+0x140]
   14000b1f9:	lea    rcx,[rsp+0x50]
   14000b1fe:	call   QWORD PTR [rip+0x15344]        # 0x140020548
   14000b204:	lea    rdx,[rsp+0x58]
   14000b209:	mov    rcx,rax
   14000b20c:	call   QWORD PTR [rip+0x1518e]        # 0x1400203a0
   14000b212:	mov    r12,QWORD PTR [rsp+0x130]
   14000b21a:	lea    rdx,[rsp+0xd0]
   14000b222:	mov    rcx,r12
   14000b225:	mov    r8,rax
   14000b228:	call   0x1400072d0
   14000b22d:	lea    rcx,[rsp+0x58]
   14000b232:	call   QWORD PTR [rip+0x15548]        # 0x140020780
   14000b238:	lea    rcx,[rsp+0x50]
   14000b23d:	call   QWORD PTR [rip+0x15315]        # 0x140020558
   14000b243:	jmp    0x14000b24d
   14000b245:	mov    r12,QWORD PTR [rsp+0x130]
   14000b24d:	lea    rcx,[rsp+0x148]
   14000b255:	call   QWORD PTR [rip+0x15525]        # 0x140020780
   14000b25b:	lea    rcx,[rsp+0x140]
   14000b263:	call   QWORD PTR [rip+0x15517]        # 0x140020780
   14000b269:	mov    edx,DWORD PTR [rbx]
   14000b26b:	test   edx,edx
   14000b26d:	je     0x14000b28a
   14000b26f:	cmp    edx,0xffffffff
   14000b272:	je     0x14000b2df
   14000b274:	mov    eax,r14d
   14000b277:	lock xadd DWORD PTR [rbx],eax
   14000b27b:	add    eax,0xffffffff
   14000b27e:	setne  al
   14000b281:	test   al,al
   14000b283:	jne    0x14000b2df
   14000b285:	mov    rbx,QWORD PTR [rsp+0x40]
   14000b28a:	mov    rdi,QWORD PTR [r13+0x0]
   14000b28e:	test   rdi,rdi
   14000b291:	je     0x14000b2d6
   14000b293:	lea    rcx,[rdi+0x18]
   14000b297:	call   QWORD PTR [rip+0x154e3]        # 0x140020780
   14000b29d:	lea    rcx,[rdi+0x20]
   14000b2a1:	call   QWORD PTR [rip+0x154a1]        # 0x140020748
   14000b2a7:	mov    rcx,QWORD PTR [rdi+0x8]
   14000b2ab:	test   rcx,rcx
   14000b2ae:	je     0x14000b2b5
   14000b2b0:	call   0x140001fd0
   14000b2b5:	mov    rcx,QWORD PTR [rdi+0x10]
   14000b2b9:	test   rcx,rcx
   14000b2bc:	je     0x14000b2c3
   14000b2be:	call   0x140001fd0
   14000b2c3:	mov    rdx,QWORD PTR [r13+0x0]
   14000b2c7:	mov    r8d,0x8
   14000b2cd:	mov    rcx,rbx
   14000b2d0:	call   QWORD PTR [rip+0x153aa]        # 0x140020680
   14000b2d6:	mov    rcx,rbx
   14000b2d9:	call   QWORD PTR [rip+0x153a9]        # 0x140020688
   14000b2df:	mov    eax,DWORD PTR [rsp+0x28]
   14000b2e3:	dec    eax
   14000b2e5:	mov    DWORD PTR [rsp+0x28],eax
   14000b2e9:	jmp    0x14000aff5
   14000b2ee:	mov    rcx,QWORD PTR [rsp+0x30]
   14000b2f3:	mov    rdx,QWORD PTR [rsp+0x38]
   14000b2f8:	add    rcx,0x8
   14000b2fc:	mov    QWORD PTR [rsp+0x30],rcx
   14000b301:	jmp    0x14000afe0
   14000b306:	mov    rsi,QWORD PTR [rsp+0x20]
   14000b30b:	mov    eax,DWORD PTR [rsi]
   14000b30d:	test   eax,eax
   14000b30f:	je     0x14000b32c
   14000b311:	cmp    eax,0xffffffff
   14000b314:	je     0x14000b36f
   14000b316:	mov    eax,r14d
   14000b319:	lock xadd DWORD PTR [rsi],eax
   14000b31d:	add    eax,0xffffffff
   14000b320:	setne  al
   14000b323:	test   al,al
   14000b325:	jne    0x14000b36f
   14000b327:	mov    rsi,QWORD PTR [rsp+0x20]
   14000b32c:	movsxd rax,DWORD PTR [rsi+0xc]
   14000b330:	lea    rdi,[rsi+rax*8+0x10]
   14000b335:	movsxd rax,DWORD PTR [rsi+0x8]
   14000b339:	lea    rbp,[rsi+rax*8+0x10]
   14000b33e:	cmp    rbp,rdi
   14000b341:	je     0x14000b366
   14000b343:	mov    rbx,QWORD PTR [rdi-0x8]
   14000b347:	sub    rdi,0x8
   14000b34b:	test   rbx,rbx
   14000b34e:	je     0x14000b361
   14000b350:	mov    rcx,rbx
   14000b353:	call   QWORD PTR [rip+0x153ef]        # 0x140020748
   14000b359:	mov    rcx,rbx
   14000b35c:	call   0x14001ee46
   14000b361:	cmp    rdi,rbp
   14000b364:	jne    0x14000b343
   14000b366:	mov    rcx,rsi
   14000b369:	call   QWORD PTR [rip+0x15361]        # 0x1400206d0
   14000b36f:	mov    r13,QWORD PTR [rsp+0x138]
   14000b377:	mov    rax,QWORD PTR [r13+0x0]
   14000b37b:	mov    ecx,DWORD PTR [rax]
   14000b37d:	test   ecx,ecx
   14000b37f:	je     0x14000b396
   14000b381:	cmp    ecx,0xffffffff
   14000b384:	je     0x14000b3dd
   14000b386:	lock xadd DWORD PTR [rax],r14d
   14000b38b:	add    r14d,0xffffffff
   14000b38f:	setne  al
   14000b392:	test   al,al
   14000b394:	jne    0x14000b3dd
   14000b396:	mov    rbp,QWORD PTR [r13+0x0]
   14000b39a:	movsxd rax,DWORD PTR [rbp+0xc]
   14000b39e:	lea    rdi,[rbp+rax*8+0x10]
   14000b3a3:	movsxd rax,DWORD PTR [rbp+0x8]
   14000b3a7:	lea    rsi,[rbp+rax*8+0x10]
   14000b3ac:	cmp    rsi,rdi
   14000b3af:	je     0x14000b3d4
   14000b3b1:	mov    rbx,QWORD PTR [rdi-0x8]
   14000b3b5:	sub    rdi,0x8
   14000b3b9:	test   rbx,rbx
   14000b3bc:	je     0x14000b3cf
   14000b3be:	mov    rcx,rbx
   14000b3c1:	call   QWORD PTR [rip+0x15381]        # 0x140020748
   14000b3c7:	mov    rcx,rbx
   14000b3ca:	call   0x14001ee46
   14000b3cf:	cmp    rdi,rsi
   14000b3d2:	jne    0x14000b3b1
   14000b3d4:	mov    rcx,rbp
   14000b3d7:	call   QWORD PTR [rip+0x152f3]        # 0x1400206d0
   14000b3dd:	mov    rax,r12
   14000b3e0:	add    rsp,0xe8
   14000b3e7:	pop    r15
   14000b3e9:	pop    r14
   14000b3eb:	pop    r13
   14000b3ed:	pop    r12
   14000b3ef:	pop    rdi
   14000b3f0:	pop    rsi
   14000b3f1:	pop    rbp
   14000b3f2:	pop    rbx
   14000b3f3:	ret    
   14000b3f4:	int3   
   14000b3f5:	int3   
   14000b3f6:	int3   
   14000b3f7:	int3   
   14000b3f8:	int3   
   14000b3f9:	int3   
   14000b3fa:	int3   
   14000b3fb:	int3   
   14000b3fc:	int3   
   14000b3fd:	int3   
   14000b3fe:	int3   
   14000b3ff:	int3   
   14000b400:	rex push rbx
   14000b402:	push   rbp
   14000b403:	push   rsi
   14000b404:	push   rdi
   14000b405:	push   r12
   14000b407:	push   r13
   14000b409:	push   r14
   14000b40b:	push   r15
   14000b40d:	sub    rsp,0xd8
   14000b414:	mov    rax,QWORD PTR [rip+0x15345]        # 0x140020760
   14000b41b:	mov    rbx,rdx
   14000b41e:	mov    r13,r8
   14000b421:	mov    QWORD PTR [rcx],rax
   14000b424:	mov    rdx,QWORD PTR [rdx]
   14000b427:	mov    r15,rcx
   14000b42a:	mov    QWORD PTR [rsp+0x88],rdx
   14000b432:	mov    eax,DWORD PTR [rdx]
   14000b434:	test   eax,eax
   14000b436:	je     0x14000b443
   14000b438:	cmp    eax,0xffffffff
   14000b43b:	je     0x14000b4a6
   14000b43d:	lock add DWORD PTR [rdx],0x1
   14000b441:	jmp    0x14000b49e
   14000b443:	mov    edx,DWORD PTR [rdx+0x4]
   14000b446:	lea    rcx,[rsp+0x88]
   14000b44e:	call   QWORD PTR [rip+0x15224]        # 0x140020678
   14000b454:	mov    rdx,QWORD PTR [rsp+0x88]
   14000b45c:	mov    r11,QWORD PTR [rbx]
   14000b45f:	movsxd rax,DWORD PTR [r11+0x8]
   14000b463:	lea    rdi,[r11+rax*8+0x10]
   14000b468:	movsxd rax,DWORD PTR [rdx+0xc]
   14000b46c:	lea    rsi,[rdx+rax*8+0x10]
   14000b471:	movsxd rax,DWORD PTR [rdx+0x8]
   14000b475:	lea    rbx,[rdx+rax*8+0x10]
   14000b47a:	cmp    rbx,rsi
   14000b47d:	je     0x14000b4a6
   14000b47f:	nop
   14000b480:	test   rbx,rbx
   14000b483:	je     0x14000b491
   14000b485:	mov    rdx,rdi
   14000b488:	mov    rcx,rbx
   14000b48b:	call   QWORD PTR [rip+0x15307]        # 0x140020798
   14000b491:	add    rbx,0x8
   14000b495:	add    rdi,0x8
   14000b499:	cmp    rbx,rsi
   14000b49c:	jne    0x14000b480
   14000b49e:	mov    rdx,QWORD PTR [rsp+0x88]
   14000b4a6:	mov    DWORD PTR [rsp+0x90],0x0
   14000b4b1:	movsxd rax,DWORD PTR [rdx+0x8]
   14000b4b5:	lea    r12,[rdx+rax*8+0x10]
   14000b4ba:	mov    QWORD PTR [rsp+0x98],r12
   14000b4c2:	movsxd rax,DWORD PTR [rdx+0xc]
   14000b4c6:	lea    rcx,[rdx+rax*8+0x10]
   14000b4cb:	mov    QWORD PTR [rsp+0xa0],rcx
   14000b4d3:	data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000b4e0:	mov    eax,0x1
   14000b4e5:	mov    DWORD PTR [rsp+0x90],eax
   14000b4ec:	cmp    r12,rcx
   14000b4ef:	je     0x14000b635
   14000b4f5:	test   eax,eax
   14000b4f7:	je     0x14000b614
   14000b4fd:	lea    rcx,[rsp+0x50]
   14000b502:	mov    rdx,r12
   14000b505:	call   0x14000a3a0
   14000b50a:	lea    r8,[rsp+0x50]
   14000b50f:	lea    rcx,[rsp+0xb8]
   14000b517:	mov    rdx,r15
   14000b51a:	call   0x140003c00
   14000b51f:	mov    rcx,r15
   14000b522:	mov    rdx,rax
   14000b525:	call   0x140002460
   14000b52a:	mov    rsi,QWORD PTR [rsp+0xb8]
   14000b532:	mov    eax,DWORD PTR [rsi]
   14000b534:	test   eax,eax
   14000b536:	je     0x14000b550
   14000b538:	cmp    eax,0xffffffff
   14000b53b:	je     0x14000b59c
   14000b53d:	lock add DWORD PTR [rsi],0xffffffff
   14000b541:	setne  al
   14000b544:	test   al,al
   14000b546:	jne    0x14000b59c
   14000b548:	mov    rsi,QWORD PTR [rsp+0xb8]
   14000b550:	movsxd rax,DWORD PTR [rsi+0xc]
   14000b554:	lea    rbx,[rsi+rax*8+0x10]
   14000b559:	movsxd rax,DWORD PTR [rsi+0x8]
   14000b55d:	lea    rbp,[rsi+rax*8+0x10]
   14000b562:	cmp    rbp,rbx
   14000b565:	je     0x14000b593
   14000b567:	nop    WORD PTR [rax+rax*1+0x0]
   14000b570:	mov    rdi,QWORD PTR [rbx-0x8]
   14000b574:	sub    rbx,0x8
   14000b578:	test   rdi,rdi
   14000b57b:	je     0x14000b58e
   14000b57d:	mov    rcx,rdi
   14000b580:	call   QWORD PTR [rip+0x151c2]        # 0x140020748
   14000b586:	mov    rcx,rdi
   14000b589:	call   0x14001ee46
   14000b58e:	cmp    rbx,rbp
   14000b591:	jne    0x14000b570
   14000b593:	mov    rcx,rsi
   14000b596:	call   QWORD PTR [rip+0x15134]        # 0x1400206d0
   14000b59c:	mov    rsi,QWORD PTR [rsp+0x50]
   14000b5a1:	mov    eax,DWORD PTR [rsi]
   14000b5a3:	test   eax,eax
   14000b5a5:	je     0x14000b5bc
   14000b5a7:	cmp    eax,0xffffffff
   14000b5aa:	je     0x14000b5ff
   14000b5ac:	lock add DWORD PTR [rsi],0xffffffff
   14000b5b0:	setne  al
   14000b5b3:	test   al,al
   14000b5b5:	jne    0x14000b5ff
   14000b5b7:	mov    rsi,QWORD PTR [rsp+0x50]
   14000b5bc:	movsxd rax,DWORD PTR [rsi+0xc]
   14000b5c0:	lea    rbx,[rsi+rax*8+0x10]
   14000b5c5:	movsxd rax,DWORD PTR [rsi+0x8]
   14000b5c9:	lea    rbp,[rsi+rax*8+0x10]
   14000b5ce:	cmp    rbp,rbx
   14000b5d1:	je     0x14000b5f6
   14000b5d3:	mov    rdi,QWORD PTR [rbx-0x8]
   14000b5d7:	sub    rbx,0x8
   14000b5db:	test   rdi,rdi
   14000b5de:	je     0x14000b5f1
   14000b5e0:	mov    rcx,rdi
   14000b5e3:	call   QWORD PTR [rip+0x1515f]        # 0x140020748
   14000b5e9:	mov    rcx,rdi
   14000b5ec:	call   0x14001ee46
   14000b5f1:	cmp    rbx,rbp
   14000b5f4:	jne    0x14000b5d3
   14000b5f6:	mov    rcx,rsi
   14000b5f9:	call   QWORD PTR [rip+0x150d1]        # 0x1400206d0
   14000b5ff:	mov    eax,DWORD PTR [rsp+0x90]
   14000b606:	dec    eax
   14000b608:	mov    DWORD PTR [rsp+0x90],eax
   14000b60f:	jmp    0x14000b4f5
   14000b614:	mov    r12,QWORD PTR [rsp+0x98]
   14000b61c:	mov    rcx,QWORD PTR [rsp+0xa0]
   14000b624:	add    r12,0x8
   14000b628:	mov    QWORD PTR [rsp+0x98],r12
   14000b630:	jmp    0x14000b4e0
   14000b635:	mov    rdi,QWORD PTR [rsp+0x88]
   14000b63d:	mov    eax,DWORD PTR [rdi]
   14000b63f:	test   eax,eax
   14000b641:	je     0x14000b65b
   14000b643:	cmp    eax,0xffffffff
   14000b646:	je     0x14000b68d
   14000b648:	lock add DWORD PTR [rdi],0xffffffff
   14000b64c:	setne  al
   14000b64f:	test   al,al
   14000b651:	jne    0x14000b68d
   14000b653:	mov    rdi,QWORD PTR [rsp+0x88]
   14000b65b:	movsxd rax,DWORD PTR [rdi+0xc]
   14000b65f:	lea    rbx,[rdi+rax*8+0x10]
   14000b664:	movsxd rax,DWORD PTR [rdi+0x8]
   14000b668:	lea    rsi,[rdi+rax*8+0x10]
   14000b66d:	cmp    rsi,rbx
   14000b670:	je     0x14000b684
   14000b672:	sub    rbx,0x8
   14000b676:	mov    rcx,rbx
   14000b679:	call   QWORD PTR [rip+0x15101]        # 0x140020780
   14000b67f:	cmp    rbx,rsi
   14000b682:	jne    0x14000b672
   14000b684:	mov    rcx,rdi
   14000b687:	call   QWORD PTR [rip+0x15043]        # 0x1400206d0
   14000b68d:	mov    rcx,QWORD PTR [r13+0x0]
   14000b691:	mov    QWORD PTR [rsp+0x68],rcx
   14000b696:	mov    eax,DWORD PTR [rcx]
   14000b698:	test   eax,eax
   14000b69a:	je     0x14000b6a7
   14000b69c:	cmp    eax,0xffffffff
   14000b69f:	je     0x14000b703
   14000b6a1:	lock add DWORD PTR [rcx],0x1
   14000b6a5:	jmp    0x14000b6fe
   14000b6a7:	mov    edx,DWORD PTR [rcx+0x4]
   14000b6aa:	lea    rcx,[rsp+0x68]
   14000b6af:	call   QWORD PTR [rip+0x14fc3]        # 0x140020678
   14000b6b5:	mov    rcx,QWORD PTR [rsp+0x68]
   14000b6ba:	mov    r11,QWORD PTR [r13+0x0]
   14000b6be:	movsxd rax,DWORD PTR [r11+0x8]
   14000b6c2:	lea    rdi,[r11+rax*8+0x10]
   14000b6c7:	movsxd rax,DWORD PTR [rcx+0xc]
   14000b6cb:	lea    rsi,[rcx+rax*8+0x10]
   14000b6d0:	movsxd rax,DWORD PTR [rcx+0x8]
   14000b6d4:	lea    rbx,[rcx+rax*8+0x10]
   14000b6d9:	cmp    rbx,rsi
   14000b6dc:	je     0x14000b703
   14000b6de:	xchg   ax,ax
   14000b6e0:	test   rbx,rbx
   14000b6e3:	je     0x14000b6f1
   14000b6e5:	mov    rdx,rdi
   14000b6e8:	mov    rcx,rbx
   14000b6eb:	call   QWORD PTR [rip+0x150a7]        # 0x140020798
   14000b6f1:	add    rbx,0x8
   14000b6f5:	add    rdi,0x8
   14000b6f9:	cmp    rbx,rsi
   14000b6fc:	jne    0x14000b6e0
   14000b6fe:	mov    rcx,QWORD PTR [rsp+0x68]
   14000b703:	mov    DWORD PTR [rsp+0x70],0x0
   14000b70b:	movsxd rax,DWORD PTR [rcx+0x8]
   14000b70f:	lea    r12,[rcx+rax*8+0x10]
   14000b714:	mov    QWORD PTR [rsp+0x78],r12
   14000b719:	movsxd rax,DWORD PTR [rcx+0xc]
   14000b71d:	lea    rdx,[rcx+rax*8+0x10]
   14000b722:	mov    QWORD PTR [rsp+0x80],rdx
   14000b72a:	nop    WORD PTR [rax+rax*1+0x0]
   14000b730:	mov    eax,0x1
   14000b735:	mov    DWORD PTR [rsp+0x70],eax
   14000b739:	cmp    r12,rdx
   14000b73c:	je     0x14000b879
   14000b742:	test   eax,eax
   14000b744:	je     0x14000b85e
   14000b74a:	lea    rcx,[rsp+0x60]
   14000b74f:	mov    rdx,r12
   14000b752:	call   0x140009f60
   14000b757:	lea    r8,[rsp+0x60]
   14000b75c:	lea    rcx,[rsp+0xa8]
   14000b764:	mov    rdx,r15
   14000b767:	call   0x140003c00
   14000b76c:	mov    rcx,r15
   14000b76f:	mov    rdx,rax
   14000b772:	call   0x140002460
   14000b777:	mov    rsi,QWORD PTR [rsp+0xa8]
   14000b77f:	mov    eax,DWORD PTR [rsi]
   14000b781:	test   eax,eax
   14000b783:	je     0x14000b79d
   14000b785:	cmp    eax,0xffffffff
   14000b788:	je     0x14000b7ec
   14000b78a:	lock add DWORD PTR [rsi],0xffffffff
   14000b78e:	setne  al
   14000b791:	test   al,al
   14000b793:	jne    0x14000b7ec
   14000b795:	mov    rsi,QWORD PTR [rsp+0xa8]
   14000b79d:	movsxd rax,DWORD PTR [rsi+0xc]
   14000b7a1:	lea    rbx,[rsi+rax*8+0x10]
   14000b7a6:	movsxd rax,DWORD PTR [rsi+0x8]
   14000b7aa:	lea    rbp,[rsi+rax*8+0x10]
   14000b7af:	cmp    rbp,rbx
   14000b7b2:	je     0x14000b7e3
   14000b7b4:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000b7c0:	mov    rdi,QWORD PTR [rbx-0x8]
   14000b7c4:	sub    rbx,0x8
   14000b7c8:	test   rdi,rdi
   14000b7cb:	je     0x14000b7de
   14000b7cd:	mov    rcx,rdi
   14000b7d0:	call   QWORD PTR [rip+0x14f72]        # 0x140020748
   14000b7d6:	mov    rcx,rdi
   14000b7d9:	call   0x14001ee46
   14000b7de:	cmp    rbx,rbp
   14000b7e1:	jne    0x14000b7c0
   14000b7e3:	mov    rcx,rsi
   14000b7e6:	call   QWORD PTR [rip+0x14ee4]        # 0x1400206d0
   14000b7ec:	mov    rsi,QWORD PTR [rsp+0x60]
   14000b7f1:	mov    eax,DWORD PTR [rsi]
   14000b7f3:	test   eax,eax
   14000b7f5:	je     0x14000b80c
   14000b7f7:	cmp    eax,0xffffffff
   14000b7fa:	je     0x14000b84f
   14000b7fc:	lock add DWORD PTR [rsi],0xffffffff
   14000b800:	setne  al
   14000b803:	test   al,al
   14000b805:	jne    0x14000b84f
   14000b807:	mov    rsi,QWORD PTR [rsp+0x60]
   14000b80c:	movsxd rax,DWORD PTR [rsi+0xc]
   14000b810:	lea    rbx,[rsi+rax*8+0x10]
   14000b815:	movsxd rax,DWORD PTR [rsi+0x8]
   14000b819:	lea    rbp,[rsi+rax*8+0x10]
   14000b81e:	cmp    rbp,rbx
   14000b821:	je     0x14000b846
   14000b823:	mov    rdi,QWORD PTR [rbx-0x8]
   14000b827:	sub    rbx,0x8
   14000b82b:	test   rdi,rdi
   14000b82e:	je     0x14000b841
   14000b830:	mov    rcx,rdi
   14000b833:	call   QWORD PTR [rip+0x14f0f]        # 0x140020748
   14000b839:	mov    rcx,rdi
   14000b83c:	call   0x14001ee46
   14000b841:	cmp    rbx,rbp
   14000b844:	jne    0x14000b823
   14000b846:	mov    rcx,rsi
   14000b849:	call   QWORD PTR [rip+0x14e81]        # 0x1400206d0
   14000b84f:	mov    eax,DWORD PTR [rsp+0x70]
   14000b853:	dec    eax
   14000b855:	mov    DWORD PTR [rsp+0x70],eax
   14000b859:	jmp    0x14000b742
   14000b85e:	mov    r12,QWORD PTR [rsp+0x78]
   14000b863:	mov    rdx,QWORD PTR [rsp+0x80]
   14000b86b:	add    r12,0x8
   14000b86f:	mov    QWORD PTR [rsp+0x78],r12
   14000b874:	jmp    0x14000b730
   14000b879:	mov    rdi,QWORD PTR [rsp+0x68]
   14000b87e:	mov    eax,DWORD PTR [rdi]
   14000b880:	test   eax,eax
   14000b882:	je     0x14000b899
   14000b884:	cmp    eax,0xffffffff
   14000b887:	je     0x14000b8cb
   14000b889:	lock add DWORD PTR [rdi],0xffffffff
   14000b88d:	setne  al
   14000b890:	test   al,al
   14000b892:	jne    0x14000b8cb
   14000b894:	mov    rdi,QWORD PTR [rsp+0x68]
   14000b899:	movsxd rax,DWORD PTR [rdi+0xc]
   14000b89d:	lea    rbx,[rdi+rax*8+0x10]
   14000b8a2:	movsxd rax,DWORD PTR [rdi+0x8]
   14000b8a6:	lea    rsi,[rdi+rax*8+0x10]
   14000b8ab:	cmp    rsi,rbx
   14000b8ae:	je     0x14000b8c2
   14000b8b0:	sub    rbx,0x8
   14000b8b4:	mov    rcx,rbx
   14000b8b7:	call   QWORD PTR [rip+0x14ec3]        # 0x140020780
   14000b8bd:	cmp    rbx,rsi
   14000b8c0:	jne    0x14000b8b0
   14000b8c2:	mov    rcx,rdi
   14000b8c5:	call   QWORD PTR [rip+0x14e05]        # 0x1400206d0
   14000b8cb:	mov    rax,QWORD PTR [r15]
   14000b8ce:	mov    QWORD PTR [rsp+0x58],rax
   14000b8d3:	mov    ecx,DWORD PTR [rax]
   14000b8d5:	test   ecx,ecx
   14000b8d7:	je     0x14000b8e4
   14000b8d9:	cmp    ecx,0xffffffff
   14000b8dc:	je     0x14000b94f
   14000b8de:	lock add DWORD PTR [rax],0x1
   14000b8e2:	jmp    0x14000b94f
   14000b8e4:	mov    edx,DWORD PTR [rax+0x4]
   14000b8e7:	lea    rcx,[rsp+0x58]
   14000b8ec:	call   QWORD PTR [rip+0x14d86]        # 0x140020678
   14000b8f2:	mov    r11,QWORD PTR [r15]
   14000b8f5:	movsxd rax,DWORD PTR [r11+0x8]
   14000b8f9:	lea    rdi,[r11+rax*8+0x10]
   14000b8fe:	mov    rax,QWORD PTR [rsp+0x58]
   14000b903:	movsxd rcx,DWORD PTR [rax+0xc]
   14000b907:	lea    rsi,[rax+rcx*8+0x10]
   14000b90c:	movsxd rcx,DWORD PTR [rax+0x8]
   14000b910:	lea    rbx,[rax+rcx*8+0x10]
   14000b915:	cmp    rbx,rsi
   14000b918:	je     0x14000b94f
   14000b91a:	nop    WORD PTR [rax+rax*1+0x0]
   14000b920:	mov    ecx,0x10
   14000b925:	call   0x14001ee64
   14000b92a:	test   rax,rax
   14000b92d:	je     0x14000b93d
   14000b92f:	mov    rdx,QWORD PTR [rdi]
   14000b932:	mov    rcx,rax
   14000b935:	call   QWORD PTR [rip+0x14dfd]        # 0x140020738
   14000b93b:	jmp    0x14000b93f
   14000b93d:	xor    eax,eax
   14000b93f:	mov    QWORD PTR [rbx],rax
   14000b942:	add    rbx,0x8
   14000b946:	add    rdi,0x8
   14000b94a:	cmp    rbx,rsi
   14000b94d:	jne    0x14000b920
   14000b94f:	lea    rdx,[rsp+0x58]
   14000b954:	lea    rcx,[rsp+0x130]
   14000b95c:	call   0x14000af00
   14000b961:	mov    rbx,QWORD PTR [rsp+0x130]
   14000b969:	mov    r11,QWORD PTR [rip+0x14de0]        # 0x140020750
   14000b970:	cmp    DWORD PTR [rbx+0x14],0x0
   14000b974:	mov    QWORD PTR [rsp+0x138],r11
   14000b97c:	je     0x14000c0e9
   14000b982:	mov    eax,DWORD PTR [rbx+0x10]
   14000b985:	cmp    eax,0x1
   14000b988:	je     0x14000b9f3
   14000b98a:	test   eax,eax
   14000b98c:	je     0x14000b9f3
   14000b98e:	lea    r8,[rip+0xffffffffffff694b]        # 0x1400022e0
   14000b995:	lea    rdx,[rip+0xffffffffffff6454]        # 0x140001df0
   14000b99c:	mov    r9d,0x18
   14000b9a2:	mov    rcx,rbx
   14000b9a5:	mov    DWORD PTR [rsp+0x20],0x8
   14000b9ad:	call   QWORD PTR [rip+0x14c7d]        # 0x140020630
   14000b9b3:	mov    rcx,QWORD PTR [rsp+0x130]
   14000b9bb:	mov    rbx,rax
   14000b9be:	mov    eax,DWORD PTR [rcx+0x10]
   14000b9c1:	test   eax,eax
   14000b9c3:	je     0x14000b9de
   14000b9c5:	cmp    eax,0xffffffff
   14000b9c8:	je     0x14000b9eb
   14000b9ca:	lock add DWORD PTR [rcx+0x10],0xffffffff
   14000b9cf:	setne  al
   14000b9d2:	test   al,al
   14000b9d4:	jne    0x14000b9eb
   14000b9d6:	mov    rcx,QWORD PTR [rsp+0x130]
   14000b9de:	lea    rdx,[rip+0xffffffffffff68fb]        # 0x1400022e0
   14000b9e5:	call   QWORD PTR [rip+0x14c7d]        # 0x140020668
   14000b9eb:	mov    QWORD PTR [rsp+0x130],rbx
   14000b9f3:	mov    rcx,rbx
   14000b9f6:	call   QWORD PTR [rip+0x149e4]        # 0x1400203e0
   14000b9fc:	lea    rcx,[rsp+0x30]
   14000ba01:	lea    rdx,[rax+0x10]
   14000ba05:	call   QWORD PTR [rip+0x14d8d]        # 0x140020798
   14000ba0b:	mov    rbx,QWORD PTR [rsp+0x130]
   14000ba13:	mov    eax,DWORD PTR [rbx+0x10]
   14000ba16:	cmp    eax,0x1
   14000ba19:	je     0x14000ba84
   14000ba1b:	test   eax,eax
   14000ba1d:	je     0x14000ba84
   14000ba1f:	lea    r8,[rip+0xffffffffffff68ba]        # 0x1400022e0
   14000ba26:	lea    rdx,[rip+0xffffffffffff63c3]        # 0x140001df0
   14000ba2d:	mov    r9d,0x18
   14000ba33:	mov    rcx,rbx
   14000ba36:	mov    DWORD PTR [rsp+0x20],0x8
   14000ba3e:	call   QWORD PTR [rip+0x14bec]        # 0x140020630
   14000ba44:	mov    rcx,QWORD PTR [rsp+0x130]
   14000ba4c:	mov    rbx,rax
   14000ba4f:	mov    eax,DWORD PTR [rcx+0x10]
   14000ba52:	test   eax,eax
   14000ba54:	je     0x14000ba6f
   14000ba56:	cmp    eax,0xffffffff
   14000ba59:	je     0x14000ba7c
   14000ba5b:	lock add DWORD PTR [rcx+0x10],0xffffffff
   14000ba60:	setne  al
   14000ba63:	test   al,al
   14000ba65:	jne    0x14000ba7c
   14000ba67:	mov    rcx,QWORD PTR [rsp+0x130]
   14000ba6f:	lea    rdx,[rip+0xffffffffffff686a]        # 0x1400022e0
   14000ba76:	call   QWORD PTR [rip+0x14bec]        # 0x140020668
   14000ba7c:	mov    QWORD PTR [rsp+0x130],rbx
   14000ba84:	mov    rcx,rbx
   14000ba87:	call   QWORD PTR [rip+0x14953]        # 0x1400203e0
   14000ba8d:	lea    rdx,[rsp+0xc0]
   14000ba95:	lea    rcx,[rsp+0x130]
   14000ba9d:	mov    r8,rax
   14000baa0:	mov    QWORD PTR [rsp+0xc8],rax
   14000baa8:	call   0x140003ea0
   14000baad:	mov    rbx,QWORD PTR [rsp+0x138]
   14000bab5:	mov    eax,DWORD PTR [rbx+0x10]
   14000bab8:	cmp    eax,0x1
   14000babb:	je     0x14000bb1e
   14000babd:	test   eax,eax
   14000babf:	je     0x14000bb1e
   14000bac1:	lea    r8,[rip+0xffffffffffff6818]        # 0x1400022e0
   14000bac8:	lea    rdx,[rip+0xffffffffffff6321]        # 0x140001df0
   14000bacf:	mov    r9d,0x18
   14000bad5:	mov    rcx,rbx
   14000bad8:	mov    DWORD PTR [rsp+0x20],0x8
   14000bae0:	call   QWORD PTR [rip+0x14b4a]        # 0x140020630
   14000bae6:	mov    ecx,DWORD PTR [rbx+0x10]
   14000bae9:	mov    rdi,rax
   14000baec:	test   ecx,ecx
   14000baee:	je     0x14000bb01
   14000baf0:	cmp    ecx,0xffffffff
   14000baf3:	je     0x14000bb16
   14000baf5:	lock add DWORD PTR [rbx+0x10],0xffffffff
   14000bafa:	setne  cl
   14000bafd:	test   cl,cl
   14000baff:	jne    0x14000bb16
   14000bb01:	mov    rcx,QWORD PTR [rsp+0x138]
   14000bb09:	lea    rdx,[rip+0xffffffffffff67d0]        # 0x1400022e0
   14000bb10:	call   QWORD PTR [rip+0x14b52]        # 0x140020668
   14000bb16:	mov    QWORD PTR [rsp+0x138],rdi
   14000bb1e:	mov    rbx,QWORD PTR [rsp+0x138]
   14000bb26:	lea    rcx,[rsp+0x30]
   14000bb2b:	mov    edx,DWORD PTR [rbx+0x24]
   14000bb2e:	lea    rbp,[rbx+0x24]
   14000bb32:	call   QWORD PTR [rip+0x14b58]        # 0x140020690
   14000bb38:	mov    ecx,DWORD PTR [rbx+0x20]
   14000bb3b:	lea    r12,[rbx+0x20]
   14000bb3f:	mov    esi,eax
   14000bb41:	mov    DWORD PTR [rsp+0x120],eax
   14000bb48:	test   ecx,ecx
   14000bb4a:	je     0x14000bb8b
   14000bb4c:	xor    edx,edx
   14000bb4e:	div    ecx
   14000bb50:	mov    rcx,QWORD PTR [rbx+0x8]
   14000bb54:	lea    rdi,[rcx+rdx*8]
   14000bb58:	mov    rcx,QWORD PTR [rcx+rdx*8]
   14000bb5c:	cmp    rcx,rbx
   14000bb5f:	je     0x14000bb93
   14000bb61:	cmp    esi,DWORD PTR [rcx+0x8]
   14000bb64:	jne    0x14000bb79
   14000bb66:	lea    rdx,[rcx+0x10]
   14000bb6a:	lea    rcx,[rsp+0x30]
   14000bb6f:	call   QWORD PTR [rip+0x14b7b]        # 0x1400206f0
   14000bb75:	test   al,al
   14000bb77:	jne    0x14000bb93
   14000bb79:	mov    rdi,QWORD PTR [rdi]
   14000bb7c:	mov    rcx,QWORD PTR [rdi]
   14000bb7f:	cmp    rcx,QWORD PTR [rsp+0x138]
   14000bb87:	jne    0x14000bb61
   14000bb89:	jmp    0x14000bb93
   14000bb8b:	lea    rdi,[rsp+0x138]
   14000bb93:	mov    rbx,QWORD PTR [rsp+0x138]
   14000bb9b:	cmp    QWORD PTR [rdi],rbx
   14000bb9e:	jne    0x14000bc5c
   14000bba4:	mov    rcx,rbx
   14000bba7:	call   QWORD PTR [rip+0x147fb]        # 0x1400203a8
   14000bbad:	test   al,al
   14000bbaf:	je     0x14000bc17
   14000bbb1:	mov    edx,DWORD PTR [rbp+0x0]
   14000bbb4:	lea    rcx,[rsp+0x30]
   14000bbb9:	call   QWORD PTR [rip+0x14ad1]        # 0x140020690
   14000bbbf:	mov    ecx,DWORD PTR [r12]
   14000bbc3:	mov    esi,eax
   14000bbc5:	mov    DWORD PTR [rsp+0x120],eax
   14000bbcc:	test   ecx,ecx
   14000bbce:	je     0x14000bc0f
   14000bbd0:	xor    edx,edx
   14000bbd2:	div    ecx
   14000bbd4:	mov    rax,QWORD PTR [rbx+0x8]
   14000bbd8:	lea    rdi,[rax+rdx*8]
   14000bbdc:	mov    rax,QWORD PTR [rax+rdx*8]
   14000bbe0:	cmp    rax,rbx
   14000bbe3:	je     0x14000bc17
   14000bbe5:	cmp    esi,DWORD PTR [rax+0x8]
   14000bbe8:	jne    0x14000bbfd
   14000bbea:	lea    rdx,[rax+0x10]
   14000bbee:	lea    rcx,[rsp+0x30]
   14000bbf3:	call   QWORD PTR [rip+0x14af7]        # 0x1400206f0
   14000bbf9:	test   al,al
   14000bbfb:	jne    0x14000bc17
   14000bbfd:	mov    rdi,QWORD PTR [rdi]
   14000bc00:	mov    rax,QWORD PTR [rdi]
   14000bc03:	cmp    rax,QWORD PTR [rsp+0x138]
   14000bc0b:	jne    0x14000bbe5
   14000bc0d:	jmp    0x14000bc17
   14000bc0f:	lea    rdi,[rsp+0x138]
   14000bc17:	mov    rcx,QWORD PTR [rsp+0x138]
   14000bc1f:	mov    edx,0x8
   14000bc24:	call   QWORD PTR [rip+0x14a96]        # 0x1400206c0
   14000bc2a:	mov    rbx,rax
   14000bc2d:	test   rax,rax
   14000bc30:	je     0x14000bc4c
   14000bc32:	mov    rcx,QWORD PTR [rdi]
   14000bc35:	lea    rdx,[rsp+0x30]
   14000bc3a:	mov    DWORD PTR [rax+0x8],esi
   14000bc3d:	mov    QWORD PTR [rax],rcx
   14000bc40:	lea    rcx,[rax+0x10]
   14000bc44:	call   QWORD PTR [rip+0x14b4e]        # 0x140020798
   14000bc4a:	jmp    0x14000bc4e
   14000bc4c:	xor    ebx,ebx
   14000bc4e:	mov    QWORD PTR [rdi],rbx
   14000bc51:	mov    rax,QWORD PTR [rsp+0x138]
   14000bc59:	inc    DWORD PTR [rax+0x14]
   14000bc5c:	lea    rdx,[rsp+0x30]
   14000bc61:	lea    rcx,[rsp+0x40]
   14000bc66:	call   0x14000a3a0
   14000bc6b:	lea    r8,[rsp+0x40]
   14000bc70:	lea    rcx,[rsp+0xb0]
   14000bc78:	mov    rdx,r15
   14000bc7b:	call   0x140003c00
   14000bc80:	mov    rcx,r15
   14000bc83:	mov    rdx,rax
   14000bc86:	call   0x140002460
   14000bc8b:	mov    rsi,QWORD PTR [rsp+0xb0]
   14000bc93:	mov    eax,DWORD PTR [rsi]
   14000bc95:	test   eax,eax
   14000bc97:	je     0x14000bcb1
   14000bc99:	cmp    eax,0xffffffff
   14000bc9c:	je     0x14000bcfc
   14000bc9e:	lock add DWORD PTR [rsi],0xffffffff
   14000bca2:	setne  al
   14000bca5:	test   al,al
   14000bca7:	jne    0x14000bcfc
   14000bca9:	mov    rsi,QWORD PTR [rsp+0xb0]
   14000bcb1:	movsxd rax,DWORD PTR [rsi+0xc]
   14000bcb5:	lea    rbx,[rsi+rax*8+0x10]
   14000bcba:	movsxd rax,DWORD PTR [rsi+0x8]
   14000bcbe:	lea    rbp,[rsi+rax*8+0x10]
   14000bcc3:	cmp    rbp,rbx
   14000bcc6:	je     0x14000bcf3
   14000bcc8:	nop    DWORD PTR [rax+rax*1+0x0]
   14000bcd0:	mov    rdi,QWORD PTR [rbx-0x8]
   14000bcd4:	sub    rbx,0x8
   14000bcd8:	test   rdi,rdi
   14000bcdb:	je     0x14000bcee
   14000bcdd:	mov    rcx,rdi
   14000bce0:	call   QWORD PTR [rip+0x14a62]        # 0x140020748
   14000bce6:	mov    rcx,rdi
   14000bce9:	call   0x14001ee46
   14000bcee:	cmp    rbx,rbp
   14000bcf1:	jne    0x14000bcd0
   14000bcf3:	mov    rcx,rsi
   14000bcf6:	call   QWORD PTR [rip+0x149d4]        # 0x1400206d0
   14000bcfc:	mov    rax,QWORD PTR [r15]
   14000bcff:	mov    QWORD PTR [rsp+0x48],rax
   14000bd04:	mov    ecx,DWORD PTR [rax]
   14000bd06:	test   ecx,ecx
   14000bd08:	je     0x14000bd15
   14000bd0a:	cmp    ecx,0xffffffff
   14000bd0d:	je     0x14000bd7f
   14000bd0f:	lock add DWORD PTR [rax],0x1
   14000bd13:	jmp    0x14000bd7f
   14000bd15:	mov    edx,DWORD PTR [rax+0x4]
   14000bd18:	lea    rcx,[rsp+0x48]
   14000bd1d:	call   QWORD PTR [rip+0x14955]        # 0x140020678
   14000bd23:	mov    r11,QWORD PTR [r15]
   14000bd26:	movsxd rax,DWORD PTR [r11+0x8]
   14000bd2a:	lea    rdi,[r11+rax*8+0x10]
   14000bd2f:	mov    rax,QWORD PTR [rsp+0x48]
   14000bd34:	movsxd rcx,DWORD PTR [rax+0xc]
   14000bd38:	lea    rsi,[rax+rcx*8+0x10]
   14000bd3d:	movsxd rcx,DWORD PTR [rax+0x8]
   14000bd41:	lea    rbx,[rax+rcx*8+0x10]
   14000bd46:	cmp    rbx,rsi
   14000bd49:	je     0x14000bd7f
   14000bd4b:	nop    DWORD PTR [rax+rax*1+0x0]
   14000bd50:	mov    ecx,0x10
   14000bd55:	call   0x14001ee64
   14000bd5a:	test   rax,rax
   14000bd5d:	je     0x14000bd6d
   14000bd5f:	mov    rdx,QWORD PTR [rdi]
   14000bd62:	mov    rcx,rax
   14000bd65:	call   QWORD PTR [rip+0x149cd]        # 0x140020738
   14000bd6b:	jmp    0x14000bd6f
   14000bd6d:	xor    eax,eax
   14000bd6f:	mov    QWORD PTR [rbx],rax
   14000bd72:	add    rbx,0x8
   14000bd76:	add    rdi,0x8
   14000bd7a:	cmp    rbx,rsi
   14000bd7d:	jne    0x14000bd50
   14000bd7f:	lea    rdx,[rsp+0x48]
   14000bd84:	lea    rcx,[rsp+0x38]
   14000bd89:	call   0x14000af00
   14000bd8e:	lea    rdx,[rsp+0x138]
   14000bd96:	lea    rcx,[rsp+0x38]
   14000bd9b:	call   0x140007e10
   14000bda0:	mov    rdi,QWORD PTR [rsp+0x38]
   14000bda5:	mov    eax,DWORD PTR [rdi+0x10]
   14000bda8:	test   eax,eax
   14000bdaa:	je     0x14000bdb6
   14000bdac:	cmp    eax,0xffffffff
   14000bdaf:	je     0x14000bdb6
   14000bdb1:	lock add DWORD PTR [rdi+0x10],0x1
   14000bdb6:	test   BYTE PTR [rdi+0x28],0x1
   14000bdba:	jne    0x14000be1b
   14000bdbc:	mov    eax,DWORD PTR [rdi+0x10]
   14000bdbf:	cmp    eax,0x1
   14000bdc2:	je     0x14000be1b
   14000bdc4:	test   eax,eax
   14000bdc6:	je     0x14000be1b
   14000bdc8:	lea    r8,[rip+0xffffffffffff6511]        # 0x1400022e0
   14000bdcf:	lea    rdx,[rip+0xffffffffffff601a]        # 0x140001df0
   14000bdd6:	mov    r9d,0x18
   14000bddc:	mov    rcx,rdi
   14000bddf:	mov    DWORD PTR [rsp+0x20],0x8
   14000bde7:	call   QWORD PTR [rip+0x14843]        # 0x140020630
   14000bded:	mov    ecx,DWORD PTR [rdi+0x10]
   14000bdf0:	mov    rbx,rax
   14000bdf3:	test   ecx,ecx
   14000bdf5:	je     0x14000be08
   14000bdf7:	cmp    ecx,0xffffffff
   14000bdfa:	je     0x14000be18
   14000bdfc:	lock add DWORD PTR [rdi+0x10],0xffffffff
   14000be01:	setne  cl
   14000be04:	test   cl,cl
   14000be06:	jne    0x14000be18
   14000be08:	lea    rdx,[rip+0xffffffffffff64d1]        # 0x1400022e0
   14000be0f:	mov    rcx,rdi
   14000be12:	call   QWORD PTR [rip+0x14850]        # 0x140020668
   14000be18:	mov    rdi,rbx
   14000be1b:	mov    rcx,rdi
   14000be1e:	mov    rsi,rdi
   14000be21:	call   QWORD PTR [rip+0x145b9]        # 0x1400203e0
   14000be27:	cmp    rdi,rax
   14000be2a:	je     0x14000c012
   14000be30:	mov    rcx,rsi
   14000be33:	call   QWORD PTR [rip+0x148e7]        # 0x140020720
   14000be39:	mov    rbx,QWORD PTR [rsp+0x130]
   14000be41:	mov    rsi,rax
   14000be44:	mov    eax,DWORD PTR [rbx+0x10]
   14000be47:	cmp    eax,0x1
   14000be4a:	je     0x14000beb5
   14000be4c:	test   eax,eax
   14000be4e:	je     0x14000beb5
   14000be50:	lea    r8,[rip+0xffffffffffff6489]        # 0x1400022e0
   14000be57:	lea    rdx,[rip+0xffffffffffff5f92]        # 0x140001df0
   14000be5e:	mov    r9d,0x18
   14000be64:	mov    rcx,rbx
   14000be67:	mov    DWORD PTR [rsp+0x20],0x8
   14000be6f:	call   QWORD PTR [rip+0x147bb]        # 0x140020630
   14000be75:	mov    rcx,QWORD PTR [rsp+0x130]
   14000be7d:	mov    rbx,rax
   14000be80:	mov    eax,DWORD PTR [rcx+0x10]
   14000be83:	test   eax,eax
   14000be85:	je     0x14000bea0
   14000be87:	cmp    eax,0xffffffff
   14000be8a:	je     0x14000bead
   14000be8c:	lock add DWORD PTR [rcx+0x10],0xffffffff
   14000be91:	setne  al
   14000be94:	test   al,al
   14000be96:	jne    0x14000bead
   14000be98:	mov    rcx,QWORD PTR [rsp+0x130]
   14000bea0:	lea    rdx,[rip+0xffffffffffff6439]        # 0x1400022e0
   14000bea7:	call   QWORD PTR [rip+0x147bb]        # 0x140020668
   14000bead:	mov    QWORD PTR [rsp+0x130],rbx
   14000beb5:	mov    edx,DWORD PTR [rbx+0x24]
   14000beb8:	lea    rcx,[rsi+0x10]
   14000bebc:	call   QWORD PTR [rip+0x147ce]        # 0x140020690
   14000bec2:	mov    rcx,QWORD PTR [rsp+0x130]
   14000beca:	mov    r8d,DWORD PTR [rcx+0x20]
   14000bece:	mov    r12d,eax
   14000bed1:	mov    DWORD PTR [rsp+0x128],eax
   14000bed8:	test   r8d,r8d
   14000bedb:	je     0x14000bf23
   14000bedd:	xor    edx,edx
   14000bedf:	div    r8d
   14000bee2:	mov    r8d,edx
   14000bee5:	mov    rdx,QWORD PTR [rcx+0x8]
   14000bee9:	lea    rbx,[rdx+r8*8]
   14000beed:	mov    rdx,QWORD PTR [rdx+r8*8]
   14000bef1:	cmp    rdx,rcx
   14000bef4:	je     0x14000bf2b
   14000bef6:	cmp    r12d,DWORD PTR [rdx+0x8]
   14000befa:	jne    0x14000bf16
   14000befc:	lea    rcx,[rsi+0x10]
   14000bf00:	add    rdx,0x10
   14000bf04:	call   QWORD PTR [rip+0x147e6]        # 0x1400206f0
   14000bf0a:	mov    rcx,QWORD PTR [rsp+0x130]
   14000bf12:	test   al,al
   14000bf14:	jne    0x14000bf2b
   14000bf16:	mov    rbx,QWORD PTR [rbx]
   14000bf19:	mov    rdx,QWORD PTR [rbx]
   14000bf1c:	cmp    rdx,rcx
   14000bf1f:	jne    0x14000bef6
   14000bf21:	jmp    0x14000bf2b
   14000bf23:	lea    rbx,[rsp+0x130]
   14000bf2b:	cmp    QWORD PTR [rbx],rcx
   14000bf2e:	jne    0x14000c000
   14000bf34:	call   QWORD PTR [rip+0x1446e]        # 0x1400203a8
   14000bf3a:	test   al,al
   14000bf3c:	je     0x14000bfbb
   14000bf3e:	mov    rax,QWORD PTR [rsp+0x130]
   14000bf46:	lea    rcx,[rsi+0x10]
   14000bf4a:	mov    edx,DWORD PTR [rax+0x24]
   14000bf4d:	call   QWORD PTR [rip+0x1473d]        # 0x140020690
   14000bf53:	mov    rcx,QWORD PTR [rsp+0x130]
   14000bf5b:	mov    r8d,DWORD PTR [rcx+0x20]
   14000bf5f:	mov    r12d,eax
   14000bf62:	mov    DWORD PTR [rsp+0x128],eax
   14000bf69:	test   r8d,r8d
   14000bf6c:	je     0x14000bfb1
   14000bf6e:	xor    edx,edx
   14000bf70:	div    r8d
   14000bf73:	mov    rax,QWORD PTR [rcx+0x8]
   14000bf77:	lea    rbx,[rax+rdx*8]
   14000bf7b:	mov    rax,QWORD PTR [rax+rdx*8]
   14000bf7f:	cmp    rax,rcx
   14000bf82:	je     0x14000bfc3
   14000bf84:	cmp    r12d,DWORD PTR [rax+0x8]
   14000bf88:	jne    0x14000bfa4
   14000bf8a:	lea    rdx,[rax+0x10]
   14000bf8e:	lea    rcx,[rsi+0x10]
   14000bf92:	call   QWORD PTR [rip+0x14758]        # 0x1400206f0
   14000bf98:	mov    rcx,QWORD PTR [rsp+0x130]
   14000bfa0:	test   al,al
   14000bfa2:	jne    0x14000bfc3
   14000bfa4:	mov    rbx,QWORD PTR [rbx]
   14000bfa7:	mov    rax,QWORD PTR [rbx]
   14000bfaa:	cmp    rax,rcx
   14000bfad:	jne    0x14000bf84
   14000bfaf:	jmp    0x14000bfc3
   14000bfb1:	lea    rbx,[rsp+0x130]
   14000bfb9:	jmp    0x14000bfc3
   14000bfbb:	mov    rcx,QWORD PTR [rsp+0x130]
   14000bfc3:	mov    edx,0x8
   14000bfc8:	call   QWORD PTR [rip+0x146f2]        # 0x1400206c0
   14000bfce:	mov    rbp,rax
   14000bfd1:	test   rax,rax
   14000bfd4:	je     0x14000bff0
   14000bfd6:	mov    rcx,QWORD PTR [rbx]
   14000bfd9:	lea    rdx,[rsi+0x10]
   14000bfdd:	mov    DWORD PTR [rax+0x8],r12d
   14000bfe1:	mov    QWORD PTR [rax],rcx
   14000bfe4:	lea    rcx,[rax+0x10]
   14000bfe8:	call   QWORD PTR [rip+0x147aa]        # 0x140020798
   14000bfee:	jmp    0x14000bff2
   14000bff0:	xor    ebp,ebp
   14000bff2:	mov    QWORD PTR [rbx],rbp
   14000bff5:	mov    rax,QWORD PTR [rsp+0x130]
   14000bffd:	inc    DWORD PTR [rax+0x14]
   14000c000:	mov    rcx,rdi
   14000c003:	call   QWORD PTR [rip+0x143d7]        # 0x1400203e0
   14000c009:	cmp    rsi,rax
   14000c00c:	jne    0x14000be30
   14000c012:	mov    eax,DWORD PTR [rdi+0x10]
   14000c015:	test   eax,eax
   14000c017:	je     0x14000c02a
   14000c019:	cmp    eax,0xffffffff
   14000c01c:	je     0x14000c03a
   14000c01e:	lock add DWORD PTR [rdi+0x10],0xffffffff
   14000c023:	setne  al
   14000c026:	test   al,al
   14000c028:	jne    0x14000c03a
   14000c02a:	lea    rdx,[rip+0xffffffffffff62af]        # 0x1400022e0
   14000c031:	mov    rcx,rdi
   14000c034:	call   QWORD PTR [rip+0x1462e]        # 0x140020668
   14000c03a:	mov    rcx,QWORD PTR [rsp+0x38]
   14000c03f:	mov    eax,DWORD PTR [rcx+0x10]
   14000c042:	test   eax,eax
   14000c044:	je     0x14000c05c
   14000c046:	cmp    eax,0xffffffff
   14000c049:	je     0x14000c069
   14000c04b:	lock add DWORD PTR [rcx+0x10],0xffffffff
   14000c050:	setne  al
   14000c053:	test   al,al
   14000c055:	jne    0x14000c069
   14000c057:	mov    rcx,QWORD PTR [rsp+0x38]
   14000c05c:	lea    rdx,[rip+0xffffffffffff627d]        # 0x1400022e0
   14000c063:	call   QWORD PTR [rip+0x145ff]        # 0x140020668
   14000c069:	mov    rsi,QWORD PTR [rsp+0x40]
   14000c06e:	mov    eax,DWORD PTR [rsi]
   14000c070:	test   eax,eax
   14000c072:	je     0x14000c089
   14000c074:	cmp    eax,0xffffffff
   14000c077:	je     0x14000c0cc
   14000c079:	lock add DWORD PTR [rsi],0xffffffff
   14000c07d:	setne  al
   14000c080:	test   al,al
   14000c082:	jne    0x14000c0cc
   14000c084:	mov    rsi,QWORD PTR [rsp+0x40]
   14000c089:	movsxd rax,DWORD PTR [rsi+0xc]
   14000c08d:	lea    rbx,[rsi+rax*8+0x10]
   14000c092:	movsxd rax,DWORD PTR [rsi+0x8]
   14000c096:	lea    rbp,[rsi+rax*8+0x10]
   14000c09b:	cmp    rbp,rbx
   14000c09e:	je     0x14000c0c3
   14000c0a0:	mov    rdi,QWORD PTR [rbx-0x8]
   14000c0a4:	sub    rbx,0x8
   14000c0a8:	test   rdi,rdi
   14000c0ab:	je     0x14000c0be
   14000c0ad:	mov    rcx,rdi
   14000c0b0:	call   QWORD PTR [rip+0x14692]        # 0x140020748
   14000c0b6:	mov    rcx,rdi
   14000c0b9:	call   0x14001ee46
   14000c0be:	cmp    rbx,rbp
   14000c0c1:	jne    0x14000c0a0
   14000c0c3:	mov    rcx,rsi
   14000c0c6:	call   QWORD PTR [rip+0x14604]        # 0x1400206d0
   14000c0cc:	lea    rcx,[rsp+0x30]
   14000c0d1:	call   QWORD PTR [rip+0x146a9]        # 0x140020780
   14000c0d7:	mov    rbx,QWORD PTR [rsp+0x130]
   14000c0df:	cmp    DWORD PTR [rbx+0x14],0x0
   14000c0e3:	jne    0x14000b982
   14000c0e9:	mov    rcx,QWORD PTR [rsp+0x138]
   14000c0f1:	mov    eax,DWORD PTR [rcx+0x10]
   14000c0f4:	test   eax,eax
   14000c0f6:	je     0x14000c109
   14000c0f8:	cmp    eax,0xffffffff
   14000c0fb:	je     0x14000c126
   14000c0fd:	lock add DWORD PTR [rcx+0x10],0xffffffff
   14000c102:	setne  al
   14000c105:	test   al,al
   14000c107:	jne    0x14000c11e
   14000c109:	mov    rcx,QWORD PTR [rsp+0x138]
   14000c111:	lea    rdx,[rip+0xffffffffffff61c8]        # 0x1400022e0
   14000c118:	call   QWORD PTR [rip+0x1454a]        # 0x140020668
   14000c11e:	mov    rbx,QWORD PTR [rsp+0x130]
   14000c126:	mov    eax,DWORD PTR [rbx+0x10]
   14000c129:	test   eax,eax
   14000c12b:	je     0x14000c146
   14000c12d:	cmp    eax,0xffffffff
   14000c130:	je     0x14000c156
   14000c132:	lock add DWORD PTR [rbx+0x10],0xffffffff
   14000c137:	setne  al
   14000c13a:	test   al,al
   14000c13c:	jne    0x14000c156
   14000c13e:	mov    rbx,QWORD PTR [rsp+0x130]
   14000c146:	lea    rdx,[rip+0xffffffffffff6193]        # 0x1400022e0
   14000c14d:	mov    rcx,rbx
   14000c150:	call   QWORD PTR [rip+0x14512]        # 0x140020668
   14000c156:	mov    rax,r15
   14000c159:	add    rsp,0xd8
   14000c160:	pop    r15
   14000c162:	pop    r14
   14000c164:	pop    r13
   14000c166:	pop    r12
   14000c168:	pop    rdi
   14000c169:	pop    rsi
   14000c16a:	pop    rbp
   14000c16b:	pop    rbx
   14000c16c:	ret    
   14000c16d:	int3   
   14000c16e:	int3   
   14000c16f:	int3   
   14000c170:	mov    DWORD PTR [rsp+0x8],ecx
   14000c174:	push   rbx
   14000c175:	push   rsi
   14000c176:	push   rdi
   14000c177:	push   r12
   14000c179:	sub    rsp,0x168
   14000c180:	mov    r8,rdx
   14000c183:	lea    rcx,[rsp+0xb8]
   14000c18b:	lea    rdx,[rsp+0x190]
   14000c193:	mov    r9d,0x50602
   14000c199:	call   QWORD PTR [rip+0x14279]        # 0x140020418
   14000c19f:	lea    rcx,[rsp+0x20]
   14000c1a4:	call   QWORD PTR [rip+0x14266]        # 0x140020410
   14000c1aa:	lea    rcx,[rsp+0xd0]
   14000c1b2:	call   QWORD PTR [rip+0x14250]        # 0x140020408
   14000c1b8:	lea    rcx,[rsp+0xd8]
   14000c1c0:	mov    rdx,rax
   14000c1c3:	call   QWORD PTR [rip+0x14237]        # 0x140020400
   14000c1c9:	lea    rdx,[rsp+0x48]
   14000c1ce:	mov    rcx,rax
   14000c1d1:	call   QWORD PTR [rip+0x14221]        # 0x1400203f8
   14000c1d7:	lea    rcx,[rsp+0xd8]
   14000c1df:	call   QWORD PTR [rip+0x14523]        # 0x140020708
   14000c1e5:	lea    rcx,[rsp+0xd0]
   14000c1ed:	call   QWORD PTR [rip+0x1458d]        # 0x140020780
   14000c1f3:	mov    rdx,QWORD PTR [rsp+0x20]
   14000c1f8:	mov    eax,DWORD PTR [rdx+0xc]
   14000c1fb:	sub    eax,DWORD PTR [rdx+0x8]
   14000c1fe:	cmp    eax,0x2
   14000c201:	jge    0x14000c29b
   14000c207:	lea    rcx,[rsp+0x48]
   14000c20c:	call   0x140001eb0
   14000c211:	lea    rcx,[rsp+0x48]
   14000c216:	call   QWORD PTR [rip+0x14564]        # 0x140020780
   14000c21c:	mov    rbx,QWORD PTR [rsp+0x20]
   14000c221:	mov    eax,DWORD PTR [rbx]
   14000c223:	test   eax,eax
   14000c225:	je     0x14000c245
   14000c227:	cmp    eax,0xffffffff
   14000c22a:	je     0x14000c27b
   14000c22c:	or     r12,0xffffffffffffffff
   14000c230:	lock xadd DWORD PTR [rbx],r12d
   14000c235:	add    r12d,0xffffffff
   14000c239:	setne  al
   14000c23c:	test   al,al
   14000c23e:	jne    0x14000c27b
   14000c240:	mov    rbx,QWORD PTR [rsp+0x20]
   14000c245:	movsxd rax,DWORD PTR [rbx+0xc]
   14000c249:	lea    rdi,[rbx+rax*8+0x10]
   14000c24e:	movsxd rax,DWORD PTR [rbx+0x8]
   14000c252:	lea    rsi,[rbx+rax*8+0x10]
   14000c257:	cmp    rsi,rdi
   14000c25a:	je     0x14000c272
   14000c25c:	nop    DWORD PTR [rax+0x0]
   14000c260:	sub    rdi,0x8
   14000c264:	mov    rcx,rdi
   14000c267:	call   QWORD PTR [rip+0x14513]        # 0x140020780
   14000c26d:	cmp    rdi,rsi
   14000c270:	jne    0x14000c260
   14000c272:	mov    rcx,rbx
   14000c275:	call   QWORD PTR [rip+0x14455]        # 0x1400206d0
   14000c27b:	lea    rcx,[rsp+0xb8]
   14000c283:	call   QWORD PTR [rip+0x14167]        # 0x1400203f0
   14000c289:	mov    eax,0x1
   14000c28e:	add    rsp,0x168
   14000c295:	pop    r12
   14000c297:	pop    rdi
   14000c298:	pop    rsi
   14000c299:	pop    rbx
   14000c29a:	ret    
   14000c29b:	mov    r8,QWORD PTR [rip+0x144be]        # 0x140020760
   14000c2a2:	mov    QWORD PTR [rsp+0x198],rbp
   14000c2aa:	mov    QWORD PTR [rsp+0x160],r13
   14000c2b2:	mov    QWORD PTR [rsp+0x28],r8
   14000c2b7:	mov    QWORD PTR [rsp+0x38],r8
   14000c2bc:	mov    QWORD PTR [rsp+0x30],r8
   14000c2c1:	mov    ecx,DWORD PTR [rdx+0x8]
   14000c2c4:	mov    eax,DWORD PTR [rdx+0xc]
   14000c2c7:	mov    ebx,0x1
   14000c2cc:	sub    eax,ecx
   14000c2ce:	or     r12,0xffffffffffffffff
   14000c2d2:	mov    QWORD PTR [rsp+0x158],r14
   14000c2da:	cmp    eax,ebx
   14000c2dc:	mov    QWORD PTR [rsp+0x150],r15
   14000c2e4:	jle    0x14000c704
   14000c2ea:	lea    r13,[rip+0x1483f]        # 0x140020b30
   14000c2f1:	lea    r14,[rip+0x14988]        # 0x140020c80
   14000c2f8:	lea    r15,[rip+0x14971]        # 0x140020c70
   14000c2ff:	nop
   14000c300:	movsxd rcx,ecx
   14000c303:	movsxd rax,ebx
   14000c306:	xor    esi,esi
   14000c308:	add    rcx,rax
   14000c30b:	inc    ebx
   14000c30d:	lea    rbp,[rdx+rcx*8+0x10]
   14000c312:	lea    rcx,[rsp+0x1a0]
   14000c31a:	mov    dl,0x2d
   14000c31c:	call   QWORD PTR [rip+0x1446e]        # 0x140020790
   14000c322:	lea    r8d,[rsi+0x1]
   14000c326:	mov    rcx,rbp
   14000c329:	movzx  edx,WORD PTR [rax]
   14000c32c:	call   QWORD PTR [rip+0x140b6]        # 0x1400203e8
   14000c332:	test   al,al
   14000c334:	je     0x14000c561
   14000c33a:	xor    eax,eax
   14000c33c:	mov    rcx,r12
   14000c33f:	mov    rdi,r13
   14000c342:	repnz scas al,BYTE PTR es:[rdi]
   14000c344:	mov    QWORD PTR [rsp+0xa8],r13
   14000c34c:	lea    rdx,[rsp+0xf0]
   14000c354:	not    rcx
   14000c357:	dec    rcx
   14000c35a:	mov    DWORD PTR [rsp+0xa0],ecx
   14000c361:	mov    rcx,rbp
   14000c364:	movaps xmm0,XMMWORD PTR [rsp+0xa0]
   14000c36c:	movdqa XMMWORD PTR [rsp+0xf0],xmm0
   14000c375:	call   QWORD PTR [rip+0x143fd]        # 0x140020778
   14000c37b:	test   al,al
   14000c37d:	jne    0x14000c561
   14000c383:	xor    eax,eax
   14000c385:	mov    rcx,r12
   14000c388:	mov    rdi,r14
   14000c38b:	repnz scas al,BYTE PTR es:[rdi]
   14000c38d:	mov    QWORD PTR [rsp+0x88],r14
   14000c395:	lea    rdx,[rsp+0x110]
   14000c39d:	not    rcx
   14000c3a0:	dec    rcx
   14000c3a3:	mov    DWORD PTR [rsp+0x80],ecx
   14000c3aa:	mov    rcx,rbp
   14000c3ad:	movaps xmm0,XMMWORD PTR [rsp+0x80]
   14000c3b5:	movdqa XMMWORD PTR [rsp+0x110],xmm0
   14000c3be:	call   QWORD PTR [rip+0x143b4]        # 0x140020778
   14000c3c4:	test   al,al
   14000c3c6:	je     0x14000c3f9
   14000c3c8:	mov    rdx,QWORD PTR [rsp+0x20]
   14000c3cd:	mov    eax,DWORD PTR [rdx+0xc]
   14000c3d0:	sub    eax,DWORD PTR [rdx+0x8]
   14000c3d3:	cmp    ebx,eax
   14000c3d5:	jl     0x14000c3ef
   14000c3d7:	mov    rcx,QWORD PTR [rip+0x13d7a]        # 0x140020158
   14000c3de:	lea    rdx,[rip+0x1486b]        # 0x140020c50
   14000c3e5:	call   0x140001800
   14000c3ea:	mov    rdx,QWORD PTR [rsp+0x20]
   14000c3ef:	lea    rsi,[rsp+0x28]
   14000c3f4:	jmp    0x14000c5d1
   14000c3f9:	xor    eax,eax
   14000c3fb:	mov    rcx,r12
   14000c3fe:	mov    rdi,r15
   14000c401:	repnz scas al,BYTE PTR es:[rdi]
   14000c403:	mov    QWORD PTR [rsp+0x98],r15
   14000c40b:	lea    rdx,[rsp+0x130]
   14000c413:	not    rcx
   14000c416:	dec    rcx
   14000c419:	mov    DWORD PTR [rsp+0x90],ecx
   14000c420:	mov    rcx,rbp
   14000c423:	movaps xmm0,XMMWORD PTR [rsp+0x90]
   14000c42b:	movdqa XMMWORD PTR [rsp+0x130],xmm0
   14000c434:	call   QWORD PTR [rip+0x1433e]        # 0x140020778
   14000c43a:	test   al,al
   14000c43c:	je     0x14000c46f
   14000c43e:	mov    rdx,QWORD PTR [rsp+0x20]
   14000c443:	mov    eax,DWORD PTR [rdx+0xc]
   14000c446:	sub    eax,DWORD PTR [rdx+0x8]
   14000c449:	cmp    ebx,eax
   14000c44b:	jl     0x14000c465
   14000c44d:	mov    rcx,QWORD PTR [rip+0x13d04]        # 0x140020158
   14000c454:	lea    rdx,[rip+0x147d5]        # 0x140020c30
   14000c45b:	call   0x140001800
   14000c460:	mov    rdx,QWORD PTR [rsp+0x20]
   14000c465:	lea    rsi,[rsp+0x38]
   14000c46a:	jmp    0x14000c5d1
   14000c46f:	lea    rdx,[rip+0x147aa]        # 0x140020c20
   14000c476:	xor    eax,eax
   14000c478:	mov    rcx,r12
   14000c47b:	mov    rdi,rdx
   14000c47e:	mov    QWORD PTR [rsp+0x58],rdx
   14000c483:	lea    rdx,[rsp+0x100]
   14000c48b:	repnz scas al,BYTE PTR es:[rdi]
   14000c48d:	not    rcx
   14000c490:	dec    rcx
   14000c493:	mov    DWORD PTR [rsp+0x50],ecx
   14000c497:	mov    rcx,rbp
   14000c49a:	movaps xmm0,XMMWORD PTR [rsp+0x50]
   14000c49f:	movdqa XMMWORD PTR [rsp+0x100],xmm0
   14000c4a8:	call   QWORD PTR [rip+0x142ca]        # 0x140020778
   14000c4ae:	test   al,al
   14000c4b0:	je     0x14000c4e3
   14000c4b2:	mov    rdx,QWORD PTR [rsp+0x20]
   14000c4b7:	mov    eax,DWORD PTR [rdx+0xc]
   14000c4ba:	sub    eax,DWORD PTR [rdx+0x8]
   14000c4bd:	cmp    ebx,eax
   14000c4bf:	jl     0x14000c4d9
   14000c4c1:	mov    rcx,QWORD PTR [rip+0x13c90]        # 0x140020158
   14000c4c8:	lea    rdx,[rip+0x14731]        # 0x140020c00
   14000c4cf:	call   0x140001800
   14000c4d4:	mov    rdx,QWORD PTR [rsp+0x20]
   14000c4d9:	lea    rsi,[rsp+0x38]
   14000c4de:	jmp    0x14000c5d1
   14000c4e3:	lea    rdx,[rip+0x14706]        # 0x140020bf0
   14000c4ea:	xor    eax,eax
   14000c4ec:	mov    rcx,r12
   14000c4ef:	mov    rdi,rdx
   14000c4f2:	mov    QWORD PTR [rsp+0xe8],rdx
   14000c4fa:	lea    rdx,[rsp+0x120]
   14000c502:	repnz scas al,BYTE PTR es:[rdi]
   14000c504:	not    rcx
   14000c507:	dec    rcx
   14000c50a:	mov    DWORD PTR [rsp+0xe0],ecx
   14000c511:	mov    rcx,rbp
   14000c514:	movaps xmm0,XMMWORD PTR [rsp+0xe0]
   14000c51c:	movdqa XMMWORD PTR [rsp+0x120],xmm0
   14000c525:	call   QWORD PTR [rip+0x1424d]        # 0x140020778
   14000c52b:	test   al,al
   14000c52d:	je     0x14000c739
   14000c533:	mov    rdx,QWORD PTR [rsp+0x20]
   14000c538:	mov    eax,DWORD PTR [rdx+0xc]
   14000c53b:	sub    eax,DWORD PTR [rdx+0x8]
   14000c53e:	cmp    ebx,eax
   14000c540:	jl     0x14000c55a
   14000c542:	mov    rcx,QWORD PTR [rip+0x13c0f]        # 0x140020158
   14000c549:	lea    rdx,[rip+0x14678]        # 0x140020bc8
   14000c550:	call   0x140001800
   14000c555:	mov    rdx,QWORD PTR [rsp+0x20]
   14000c55a:	lea    rsi,[rsp+0x30]
   14000c55f:	jmp    0x14000c5d1
   14000c561:	mov    rax,QWORD PTR [rsp+0x28]
   14000c566:	mov    ecx,DWORD PTR [rax]
   14000c568:	cmp    ecx,0x1
   14000c56b:	je     0x14000c5a5
   14000c56d:	test   ecx,ecx
   14000c56f:	je     0x14000c5a5
   14000c571:	lea    rcx,[rsp+0x28]
   14000c576:	mov    edx,0x7fffffff
   14000c57b:	mov    r8d,0x1
   14000c581:	call   0x1400026c0
   14000c586:	test   rax,rax
   14000c589:	je     0x14000c59e
   14000c58b:	mov    rdx,rbp
   14000c58e:	mov    rcx,rax
   14000c591:	call   QWORD PTR [rip+0x14201]        # 0x140020798
   14000c597:	mov    rdx,QWORD PTR [rsp+0x20]
   14000c59c:	jmp    0x14000c5d1
   14000c59e:	mov    rdx,QWORD PTR [rsp+0x20]
   14000c5a3:	jmp    0x14000c5d1
   14000c5a5:	lea    rcx,[rsp+0xc8]
   14000c5ad:	mov    rdx,rbp
   14000c5b0:	call   QWORD PTR [rip+0x141e2]        # 0x140020798
   14000c5b6:	lea    rcx,[rsp+0x28]
   14000c5bb:	call   QWORD PTR [rip+0x14077]        # 0x140020638
   14000c5c1:	mov    rcx,QWORD PTR [rsp+0xc8]
   14000c5c9:	mov    QWORD PTR [rax],rcx
   14000c5cc:	mov    rdx,QWORD PTR [rsp+0x20]
   14000c5d1:	mov    eax,DWORD PTR [rdx+0xc]
   14000c5d4:	sub    eax,DWORD PTR [rdx+0x8]
   14000c5d7:	cmp    ebx,eax
   14000c5d9:	jge    0x14000c6ef
   14000c5df:	nop
   14000c5e0:	movsxd rcx,DWORD PTR [rdx+0x8]
   14000c5e4:	movsxd rax,ebx
   14000c5e7:	add    rcx,rax
   14000c5ea:	lea    rdx,[rdx+rcx*8+0x10]
   14000c5ef:	lea    rcx,[rsp+0x40]
   14000c5f4:	call   QWORD PTR [rip+0x1419e]        # 0x140020798
   14000c5fa:	lea    rcx,[rsp+0x1a8]
   14000c602:	mov    dl,0x2d
   14000c604:	call   QWORD PTR [rip+0x14186]        # 0x140020790
   14000c60a:	lea    rcx,[rsp+0x40]
   14000c60f:	mov    r8d,0x1
   14000c615:	movzx  edx,WORD PTR [rax]
   14000c618:	call   QWORD PTR [rip+0x13dca]        # 0x1400203e8
   14000c61e:	test   al,al
   14000c620:	je     0x14000c660
   14000c622:	xor    eax,eax
   14000c624:	mov    rcx,r12
   14000c627:	mov    rdi,r13
   14000c62a:	repnz scas al,BYTE PTR es:[rdi]
   14000c62c:	mov    QWORD PTR [rsp+0x78],r13
   14000c631:	lea    rdx,[rsp+0x140]
   14000c639:	not    rcx
   14000c63c:	dec    rcx
   14000c63f:	mov    DWORD PTR [rsp+0x70],ecx
   14000c643:	lea    rcx,[rsp+0x40]
   14000c648:	movaps xmm0,XMMWORD PTR [rsp+0x70]
   14000c64d:	movdqa XMMWORD PTR [rsp+0x140],xmm0
   14000c656:	call   QWORD PTR [rip+0x1411c]        # 0x140020778
   14000c65c:	test   al,al
   14000c65e:	je     0x14000c6df
   14000c660:	mov    rax,QWORD PTR [rsi]
   14000c663:	inc    ebx
   14000c665:	mov    ecx,DWORD PTR [rax]
   14000c667:	cmp    ecx,0x1
   14000c66a:	je     0x14000c698
   14000c66c:	test   ecx,ecx
   14000c66e:	je     0x14000c698
   14000c670:	mov    edx,0x7fffffff
   14000c675:	mov    r8d,0x1
   14000c67b:	mov    rcx,rsi
   14000c67e:	call   0x1400026c0
   14000c683:	test   rax,rax
   14000c686:	je     0x14000c6bf
   14000c688:	lea    rdx,[rsp+0x40]
   14000c68d:	mov    rcx,rax
   14000c690:	call   QWORD PTR [rip+0x14102]        # 0x140020798
   14000c696:	jmp    0x14000c6bf
   14000c698:	lea    rdx,[rsp+0x40]
   14000c69d:	lea    rcx,[rsp+0xb0]
   14000c6a5:	call   QWORD PTR [rip+0x140ed]        # 0x140020798
   14000c6ab:	mov    rcx,rsi
   14000c6ae:	call   QWORD PTR [rip+0x13f84]        # 0x140020638
   14000c6b4:	mov    rcx,QWORD PTR [rsp+0xb0]
   14000c6bc:	mov    QWORD PTR [rax],rcx
   14000c6bf:	lea    rcx,[rsp+0x40]
   14000c6c4:	call   QWORD PTR [rip+0x140b6]        # 0x140020780
   14000c6ca:	mov    rdx,QWORD PTR [rsp+0x20]
   14000c6cf:	mov    eax,DWORD PTR [rdx+0xc]
   14000c6d2:	sub    eax,DWORD PTR [rdx+0x8]
   14000c6d5:	cmp    ebx,eax
   14000c6d7:	jl     0x14000c5e0
   14000c6dd:	jmp    0x14000c6ef
   14000c6df:	lea    rcx,[rsp+0x40]
   14000c6e4:	call   QWORD PTR [rip+0x14096]        # 0x140020780
   14000c6ea:	mov    rdx,QWORD PTR [rsp+0x20]
   14000c6ef:	mov    ecx,DWORD PTR [rdx+0x8]
   14000c6f2:	mov    eax,DWORD PTR [rdx+0xc]
   14000c6f5:	sub    eax,ecx
   14000c6f7:	cmp    ebx,eax
   14000c6f9:	jl     0x14000c300
   14000c6ff:	mov    r8,QWORD PTR [rsp+0x30]
   14000c704:	cmp    QWORD PTR [rip+0x25ec5],r8        # 0x1400325d0
   14000c70b:	je     0x14000ca0b
   14000c711:	mov    QWORD PTR [rsp+0x50],r8
   14000c716:	mov    eax,DWORD PTR [r8]
   14000c719:	test   eax,eax
   14000c71b:	je     0x14000c945
   14000c721:	cmp    eax,0xffffffff
   14000c724:	je     0x14000c9a3
   14000c72a:	lock add DWORD PTR [r8],0x1
   14000c72f:	mov    r8,QWORD PTR [rsp+0x50]
   14000c734:	jmp    0x14000c9a3
   14000c739:	lea    rcx,[rsp+0x80]
   14000c741:	mov    rdx,rbp
   14000c744:	call   QWORD PTR [rip+0x1404e]        # 0x140020798
   14000c74a:	lea    rdx,[rsp+0x90]
   14000c752:	mov    rcx,rax
   14000c755:	call   QWORD PTR [rip+0x14045]        # 0x1400207a0
   14000c75b:	mov    rcx,rax
   14000c75e:	call   QWORD PTR [rip+0x13c74]        # 0x1400203d8
   14000c764:	mov    rcx,QWORD PTR [rip+0x139ed]        # 0x140020158
   14000c76b:	lea    rdx,[rip+0x1443e]        # 0x140020bb0
   14000c772:	mov    rdi,rax
   14000c775:	call   0x140001800
   14000c77a:	mov    rdx,rdi
   14000c77d:	mov    rcx,rax
   14000c780:	call   0x140001800
   14000c785:	lea    rdx,[rip+0x1441c]        # 0x140020ba8
   14000c78c:	mov    rcx,rax
   14000c78f:	call   0x140001800
   14000c794:	lea    rcx,[rsp+0x90]
   14000c79c:	call   QWORD PTR [rip+0x13f56]        # 0x1400206f8
   14000c7a2:	lea    rcx,[rsp+0x80]
   14000c7aa:	call   QWORD PTR [rip+0x13fd0]        # 0x140020780
   14000c7b0:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c7b5:	mov    eax,DWORD PTR [rbx]
   14000c7b7:	test   eax,eax
   14000c7b9:	je     0x14000c7d6
   14000c7bb:	cmp    eax,0xffffffff
   14000c7be:	je     0x14000c80b
   14000c7c0:	mov    eax,r12d
   14000c7c3:	lock xadd DWORD PTR [rbx],eax
   14000c7c7:	add    eax,0xffffffff
   14000c7ca:	setne  al
   14000c7cd:	test   al,al
   14000c7cf:	jne    0x14000c80b
   14000c7d1:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c7d6:	movsxd rax,DWORD PTR [rbx+0xc]
   14000c7da:	lea    rdi,[rbx+rax*8+0x10]
   14000c7df:	movsxd rax,DWORD PTR [rbx+0x8]
   14000c7e3:	lea    rsi,[rbx+rax*8+0x10]
   14000c7e8:	cmp    rsi,rdi
   14000c7eb:	je     0x14000c802
   14000c7ed:	nop    DWORD PTR [rax]
   14000c7f0:	sub    rdi,0x8
   14000c7f4:	mov    rcx,rdi
   14000c7f7:	call   QWORD PTR [rip+0x13f83]        # 0x140020780
   14000c7fd:	cmp    rdi,rsi
   14000c800:	jne    0x14000c7f0
   14000c802:	mov    rcx,rbx
   14000c805:	call   QWORD PTR [rip+0x13ec5]        # 0x1400206d0
   14000c80b:	mov    rbx,QWORD PTR [rsp+0x38]
   14000c810:	mov    eax,DWORD PTR [rbx]
   14000c812:	test   eax,eax
   14000c814:	je     0x14000c831
   14000c816:	cmp    eax,0xffffffff
   14000c819:	je     0x14000c86b
   14000c81b:	mov    eax,r12d
   14000c81e:	lock xadd DWORD PTR [rbx],eax
   14000c822:	add    eax,0xffffffff
   14000c825:	setne  al
   14000c828:	test   al,al
   14000c82a:	jne    0x14000c86b
   14000c82c:	mov    rbx,QWORD PTR [rsp+0x38]
   14000c831:	movsxd rax,DWORD PTR [rbx+0xc]
   14000c835:	lea    rdi,[rbx+rax*8+0x10]
   14000c83a:	movsxd rax,DWORD PTR [rbx+0x8]
   14000c83e:	lea    rsi,[rbx+rax*8+0x10]
   14000c843:	cmp    rsi,rdi
   14000c846:	je     0x14000c862
   14000c848:	nop    DWORD PTR [rax+rax*1+0x0]
   14000c850:	sub    rdi,0x8
   14000c854:	mov    rcx,rdi
   14000c857:	call   QWORD PTR [rip+0x13f23]        # 0x140020780
   14000c85d:	cmp    rdi,rsi
   14000c860:	jne    0x14000c850
   14000c862:	mov    rcx,rbx
   14000c865:	call   QWORD PTR [rip+0x13e65]        # 0x1400206d0
   14000c86b:	mov    rbx,QWORD PTR [rsp+0x28]
   14000c870:	mov    eax,DWORD PTR [rbx]
   14000c872:	test   eax,eax
   14000c874:	je     0x14000c891
   14000c876:	cmp    eax,0xffffffff
   14000c879:	je     0x14000c8cb
   14000c87b:	mov    eax,r12d
   14000c87e:	lock xadd DWORD PTR [rbx],eax
   14000c882:	add    eax,0xffffffff
   14000c885:	setne  al
   14000c888:	test   al,al
   14000c88a:	jne    0x14000c8cb
   14000c88c:	mov    rbx,QWORD PTR [rsp+0x28]
   14000c891:	movsxd rax,DWORD PTR [rbx+0xc]
   14000c895:	lea    rdi,[rbx+rax*8+0x10]
   14000c89a:	movsxd rax,DWORD PTR [rbx+0x8]
   14000c89e:	lea    rsi,[rbx+rax*8+0x10]
   14000c8a3:	cmp    rsi,rdi
   14000c8a6:	je     0x14000c8c2
   14000c8a8:	nop    DWORD PTR [rax+rax*1+0x0]
   14000c8b0:	sub    rdi,0x8
   14000c8b4:	mov    rcx,rdi
   14000c8b7:	call   QWORD PTR [rip+0x13ec3]        # 0x140020780
   14000c8bd:	cmp    rdi,rsi
   14000c8c0:	jne    0x14000c8b0
   14000c8c2:	mov    rcx,rbx
   14000c8c5:	call   QWORD PTR [rip+0x13e05]        # 0x1400206d0
   14000c8cb:	lea    rcx,[rsp+0x48]
   14000c8d0:	call   QWORD PTR [rip+0x13eaa]        # 0x140020780
   14000c8d6:	mov    rbx,QWORD PTR [rsp+0x20]
   14000c8db:	mov    eax,DWORD PTR [rbx]
   14000c8dd:	test   eax,eax
   14000c8df:	je     0x14000c8fb
   14000c8e1:	cmp    eax,0xffffffff
   14000c8e4:	je     0x14000c92d
   14000c8e6:	lock xadd DWORD PTR [rbx],r12d
   14000c8eb:	add    r12d,0xffffffff
   14000c8ef:	setne  al
   14000c8f2:	test   al,al
   14000c8f4:	jne    0x14000c92d
   14000c8f6:	mov    rbx,QWORD PTR [rsp+0x20]
   14000c8fb:	movsxd rax,DWORD PTR [rbx+0xc]
   14000c8ff:	lea    rdi,[rbx+rax*8+0x10]
   14000c904:	movsxd rax,DWORD PTR [rbx+0x8]
   14000c908:	lea    rsi,[rbx+rax*8+0x10]
   14000c90d:	cmp    rsi,rdi
   14000c910:	je     0x14000c924
   14000c912:	sub    rdi,0x8
   14000c916:	mov    rcx,rdi
   14000c919:	call   QWORD PTR [rip+0x13e61]        # 0x140020780
   14000c91f:	cmp    rdi,rsi
   14000c922:	jne    0x14000c912
   14000c924:	mov    rcx,rbx
   14000c927:	call   QWORD PTR [rip+0x13da3]        # 0x1400206d0
   14000c92d:	lea    rcx,[rsp+0xb8]
   14000c935:	call   QWORD PTR [rip+0x13ab5]        # 0x1400203f0
   14000c93b:	mov    eax,0x1
   14000c940:	jmp    0x14000cc9d
   14000c945:	mov    edx,DWORD PTR [r8+0x4]
   14000c949:	lea    rcx,[rsp+0x50]
   14000c94e:	call   QWORD PTR [rip+0x13d24]        # 0x140020678
   14000c954:	mov    r8,QWORD PTR [rsp+0x50]
   14000c959:	movsxd rax,DWORD PTR [r8+0xc]
   14000c95d:	lea    rsi,[r8+rax*8+0x10]
   14000c962:	mov    rax,QWORD PTR [rsp+0x30]
   14000c967:	movsxd rcx,DWORD PTR [rax+0x8]
   14000c96b:	lea    rbx,[rax+rcx*8+0x10]
   14000c970:	movsxd rax,DWORD PTR [r8+0x8]
   14000c974:	lea    rdi,[r8+rax*8+0x10]
   14000c979:	cmp    rdi,rsi
   14000c97c:	je     0x14000c9a3
   14000c97e:	xchg   ax,ax
   14000c980:	test   rdi,rdi
   14000c983:	je     0x14000c991
   14000c985:	mov    rdx,rbx
   14000c988:	mov    rcx,rdi
   14000c98b:	call   QWORD PTR [rip+0x13e07]        # 0x140020798
   14000c991:	add    rdi,0x8
   14000c995:	add    rbx,0x8
   14000c999:	cmp    rdi,rsi
   14000c99c:	jne    0x14000c980
   14000c99e:	mov    r8,QWORD PTR [rsp+0x50]
   14000c9a3:	mov    rbx,QWORD PTR [rip+0x25c26]        # 0x1400325d0
   14000c9aa:	mov    QWORD PTR [rip+0x25c1f],r8        # 0x1400325d0
   14000c9b1:	mov    QWORD PTR [rsp+0x50],rbx
   14000c9b6:	mov    eax,DWORD PTR [rbx]
   14000c9b8:	test   eax,eax
   14000c9ba:	je     0x14000c9d7
   14000c9bc:	cmp    eax,0xffffffff
   14000c9bf:	je     0x14000ca0b
   14000c9c1:	mov    eax,r12d
   14000c9c4:	lock xadd DWORD PTR [rbx],eax
   14000c9c8:	add    eax,0xffffffff
   14000c9cb:	setne  al
   14000c9ce:	test   al,al
   14000c9d0:	jne    0x14000ca0b
   14000c9d2:	mov    rbx,QWORD PTR [rsp+0x50]
   14000c9d7:	movsxd rax,DWORD PTR [rbx+0xc]
   14000c9db:	lea    rdi,[rbx+rax*8+0x10]
   14000c9e0:	movsxd rax,DWORD PTR [rbx+0x8]
   14000c9e4:	lea    rsi,[rbx+rax*8+0x10]
   14000c9e9:	cmp    rsi,rdi
   14000c9ec:	je     0x14000ca02
   14000c9ee:	xchg   ax,ax
   14000c9f0:	sub    rdi,0x8
   14000c9f4:	mov    rcx,rdi
   14000c9f7:	call   QWORD PTR [rip+0x13d83]        # 0x140020780
   14000c9fd:	cmp    rdi,rsi
   14000ca00:	jne    0x14000c9f0
   14000ca02:	mov    rcx,rbx
   14000ca05:	call   QWORD PTR [rip+0x13cc5]        # 0x1400206d0
   14000ca0b:	lea    r8,[rsp+0x38]
   14000ca10:	lea    rdx,[rsp+0x28]
   14000ca15:	lea    rcx,[rsp+0x60]
   14000ca1a:	call   0x14000b400
   14000ca1f:	lea    rdx,[rsp+0x60]
   14000ca24:	lea    rcx,[rsp+0x70]
   14000ca29:	call   QWORD PTR [rip+0x139a1]        # 0x1400203d0
   14000ca2f:	lea    rcx,[rsp+0xa0]
   14000ca37:	mov    rdx,rax
   14000ca3a:	call   QWORD PTR [rip+0x13988]        # 0x1400203c8
   14000ca40:	lea    rdx,[rsp+0x68]
   14000ca45:	mov    rcx,rax
   14000ca48:	call   QWORD PTR [rip+0x13972]        # 0x1400203c0
   14000ca4e:	lea    rcx,[rsp+0xa0]
   14000ca56:	call   QWORD PTR [rip+0x1395c]        # 0x1400203b8
   14000ca5c:	lea    rcx,[rsp+0x70]
   14000ca61:	call   QWORD PTR [rip+0x13949]        # 0x1400203b0
   14000ca67:	lea    rcx,[rsp+0x68]
   14000ca6c:	call   QWORD PTR [rip+0x13966]        # 0x1400203d8
   14000ca72:	mov    rcx,QWORD PTR [rip+0x136ef]        # 0x140020168
   14000ca79:	mov    rdx,rax
   14000ca7c:	call   0x140001800
   14000ca81:	mov    rdx,QWORD PTR [rip+0x136c0]        # 0x140020148
   14000ca88:	mov    rcx,rax
   14000ca8b:	call   QWORD PTR [rip+0x136af]        # 0x140020140
   14000ca91:	lea    rcx,[rsp+0x68]
   14000ca96:	call   QWORD PTR [rip+0x13c5c]        # 0x1400206f8
   14000ca9c:	mov    rsi,QWORD PTR [rsp+0x60]
   14000caa1:	mov    eax,DWORD PTR [rsi]
   14000caa3:	test   eax,eax
   14000caa5:	je     0x14000cac2
   14000caa7:	cmp    eax,0xffffffff
   14000caaa:	je     0x14000cb0c
   14000caac:	mov    eax,r12d
   14000caaf:	lock xadd DWORD PTR [rsi],eax
   14000cab3:	add    eax,0xffffffff
   14000cab6:	setne  al
   14000cab9:	test   al,al
   14000cabb:	jne    0x14000cb0c
   14000cabd:	mov    rsi,QWORD PTR [rsp+0x60]
   14000cac2:	movsxd rax,DWORD PTR [rsi+0xc]
   14000cac6:	lea    rdi,[rsi+rax*8+0x10]
   14000cacb:	movsxd rax,DWORD PTR [rsi+0x8]
   14000cacf:	lea    rbp,[rsi+rax*8+0x10]
   14000cad4:	cmp    rbp,rdi
   14000cad7:	je     0x14000cb03
   14000cad9:	nop    DWORD PTR [rax+0x0]
   14000cae0:	mov    rbx,QWORD PTR [rdi-0x8]
   14000cae4:	sub    rdi,0x8
   14000cae8:	test   rbx,rbx
   14000caeb:	je     0x14000cafe
   14000caed:	mov    rcx,rbx
   14000caf0:	call   QWORD PTR [rip+0x13c52]        # 0x140020748
   14000caf6:	mov    rcx,rbx
   14000caf9:	call   0x14001ee46
   14000cafe:	cmp    rdi,rbp
   14000cb01:	jne    0x14000cae0
   14000cb03:	mov    rcx,rsi
   14000cb06:	call   QWORD PTR [rip+0x13bc4]        # 0x1400206d0
   14000cb0c:	mov    rbx,QWORD PTR [rsp+0x30]
   14000cb11:	mov    eax,DWORD PTR [rbx]
   14000cb13:	test   eax,eax
   14000cb15:	je     0x14000cb32
   14000cb17:	cmp    eax,0xffffffff
   14000cb1a:	je     0x14000cb6b
   14000cb1c:	mov    eax,r12d
   14000cb1f:	lock xadd DWORD PTR [rbx],eax
   14000cb23:	add    eax,0xffffffff
   14000cb26:	setne  al
   14000cb29:	test   al,al
   14000cb2b:	jne    0x14000cb6b
   14000cb2d:	mov    rbx,QWORD PTR [rsp+0x30]
   14000cb32:	movsxd rax,DWORD PTR [rbx+0xc]
   14000cb36:	lea    rdi,[rbx+rax*8+0x10]
   14000cb3b:	movsxd rax,DWORD PTR [rbx+0x8]
   14000cb3f:	lea    rsi,[rbx+rax*8+0x10]
   14000cb44:	cmp    rsi,rdi
   14000cb47:	je     0x14000cb62
   14000cb49:	nop    DWORD PTR [rax+0x0]
   14000cb50:	sub    rdi,0x8
   14000cb54:	mov    rcx,rdi
   14000cb57:	call   QWORD PTR [rip+0x13c23]        # 0x140020780
   14000cb5d:	cmp    rdi,rsi
   14000cb60:	jne    0x14000cb50
   14000cb62:	mov    rcx,rbx
   14000cb65:	call   QWORD PTR [rip+0x13b65]        # 0x1400206d0
   14000cb6b:	mov    rbx,QWORD PTR [rsp+0x38]
   14000cb70:	mov    eax,DWORD PTR [rbx]
   14000cb72:	test   eax,eax
   14000cb74:	je     0x14000cb91
   14000cb76:	cmp    eax,0xffffffff
   14000cb79:	je     0x14000cbcb
   14000cb7b:	mov    eax,r12d
   14000cb7e:	lock xadd DWORD PTR [rbx],eax
   14000cb82:	add    eax,0xffffffff
   14000cb85:	setne  al
   14000cb88:	test   al,al
   14000cb8a:	jne    0x14000cbcb
   14000cb8c:	mov    rbx,QWORD PTR [rsp+0x38]
   14000cb91:	movsxd rax,DWORD PTR [rbx+0xc]
   14000cb95:	lea    rdi,[rbx+rax*8+0x10]
   14000cb9a:	movsxd rax,DWORD PTR [rbx+0x8]
   14000cb9e:	lea    rsi,[rbx+rax*8+0x10]
   14000cba3:	cmp    rsi,rdi
   14000cba6:	je     0x14000cbc2
   14000cba8:	nop    DWORD PTR [rax+rax*1+0x0]
   14000cbb0:	sub    rdi,0x8
   14000cbb4:	mov    rcx,rdi
   14000cbb7:	call   QWORD PTR [rip+0x13bc3]        # 0x140020780
   14000cbbd:	cmp    rdi,rsi
   14000cbc0:	jne    0x14000cbb0
   14000cbc2:	mov    rcx,rbx
   14000cbc5:	call   QWORD PTR [rip+0x13b05]        # 0x1400206d0
   14000cbcb:	mov    rbx,QWORD PTR [rsp+0x28]
   14000cbd0:	mov    eax,DWORD PTR [rbx]
   14000cbd2:	test   eax,eax
   14000cbd4:	je     0x14000cbf1
   14000cbd6:	cmp    eax,0xffffffff
   14000cbd9:	je     0x14000cc2b
   14000cbdb:	mov    eax,r12d
   14000cbde:	lock xadd DWORD PTR [rbx],eax
   14000cbe2:	add    eax,0xffffffff
   14000cbe5:	setne  al
   14000cbe8:	test   al,al
   14000cbea:	jne    0x14000cc2b
   14000cbec:	mov    rbx,QWORD PTR [rsp+0x28]
   14000cbf1:	movsxd rax,DWORD PTR [rbx+0xc]
   14000cbf5:	lea    rdi,[rbx+rax*8+0x10]
   14000cbfa:	movsxd rax,DWORD PTR [rbx+0x8]
   14000cbfe:	lea    rsi,[rbx+rax*8+0x10]
   14000cc03:	cmp    rsi,rdi
   14000cc06:	je     0x14000cc22
   14000cc08:	nop    DWORD PTR [rax+rax*1+0x0]
   14000cc10:	sub    rdi,0x8
   14000cc14:	mov    rcx,rdi
   14000cc17:	call   QWORD PTR [rip+0x13b63]        # 0x140020780
   14000cc1d:	cmp    rdi,rsi
   14000cc20:	jne    0x14000cc10
   14000cc22:	mov    rcx,rbx
   14000cc25:	call   QWORD PTR [rip+0x13aa5]        # 0x1400206d0
   14000cc2b:	lea    rcx,[rsp+0x48]
   14000cc30:	call   QWORD PTR [rip+0x13b4a]        # 0x140020780
   14000cc36:	mov    rbx,QWORD PTR [rsp+0x20]
   14000cc3b:	mov    eax,DWORD PTR [rbx]
   14000cc3d:	test   eax,eax
   14000cc3f:	je     0x14000cc5b
   14000cc41:	cmp    eax,0xffffffff
   14000cc44:	je     0x14000cc8d
   14000cc46:	lock xadd DWORD PTR [rbx],r12d
   14000cc4b:	add    r12d,0xffffffff
   14000cc4f:	setne  al
   14000cc52:	test   al,al
   14000cc54:	jne    0x14000cc8d
   14000cc56:	mov    rbx,QWORD PTR [rsp+0x20]
   14000cc5b:	movsxd rax,DWORD PTR [rbx+0xc]
   14000cc5f:	lea    rdi,[rbx+rax*8+0x10]
   14000cc64:	movsxd rax,DWORD PTR [rbx+0x8]
   14000cc68:	lea    rsi,[rbx+rax*8+0x10]
   14000cc6d:	cmp    rsi,rdi
   14000cc70:	je     0x14000cc84
   14000cc72:	sub    rdi,0x8
   14000cc76:	mov    rcx,rdi
   14000cc79:	call   QWORD PTR [rip+0x13b01]        # 0x140020780
   14000cc7f:	cmp    rdi,rsi
   14000cc82:	jne    0x14000cc72
   14000cc84:	mov    rcx,rbx
   14000cc87:	call   QWORD PTR [rip+0x13a43]        # 0x1400206d0
   14000cc8d:	lea    rcx,[rsp+0xb8]
   14000cc95:	call   QWORD PTR [rip+0x13755]        # 0x1400203f0
   14000cc9b:	xor    eax,eax
   14000cc9d:	mov    r14,QWORD PTR [rsp+0x158]
   14000cca5:	mov    r13,QWORD PTR [rsp+0x160]
   14000ccad:	mov    rbp,QWORD PTR [rsp+0x198]
   14000ccb5:	mov    r15,QWORD PTR [rsp+0x150]
   14000ccbd:	add    rsp,0x168
   14000ccc4:	pop    r12
   14000ccc6:	pop    rdi
   14000ccc7:	pop    rsi
   14000ccc8:	pop    rbx
   14000ccc9:	ret    
   14000ccca:	int3   
   14000cccb:	int3   
   14000cccc:	int3   
   14000cccd:	int3   
   14000ccce:	int3   
   14000cccf:	int3   
   14000ccd0:	mov    QWORD PTR [rsp+0x8],rbx
   14000ccd5:	mov    QWORD PTR [rsp+0x10],rbp
   14000ccda:	mov    QWORD PTR [rsp+0x18],rsi
   14000ccdf:	push   rdi
   14000cce0:	sub    rsp,0x20
   14000cce4:	mov    eax,DWORD PTR [rcx+0x10]
   14000cce7:	inc    DWORD PTR [rcx+0x14]
   14000ccea:	mov    rbp,rdx
   14000cced:	mov    rbx,rcx
   14000ccf0:	cmp    DWORD PTR [rcx+0x14],eax
   14000ccf3:	jne    0x14000cd44
   14000ccf5:	test   eax,eax
   14000ccf7:	jne    0x14000cd02
   14000ccf9:	mov    DWORD PTR [rcx+0x10],0x8
   14000cd00:	jmp    0x14000cd07
   14000cd02:	add    eax,eax
   14000cd04:	mov    DWORD PTR [rcx+0x10],eax
   14000cd07:	movsxd rdx,DWORD PTR [rcx+0x10]
   14000cd0b:	mov    rcx,QWORD PTR [rcx+0x8]
   14000cd0f:	shl    rdx,0x3
   14000cd13:	call   QWORD PTR [rip+0x134bf]        # 0x1400201d8
   14000cd19:	movsxd rdx,DWORD PTR [rbx+0x14]
   14000cd1d:	cmp    edx,DWORD PTR [rbx+0x10]
   14000cd20:	mov    QWORD PTR [rbx+0x8],rax
   14000cd24:	mov    rcx,rdx
   14000cd27:	jge    0x14000cd44
   14000cd29:	shl    rcx,0x3
   14000cd2d:	xor    r8d,r8d
   14000cd30:	mov    rax,QWORD PTR [rbx+0x8]
   14000cd34:	inc    edx
   14000cd36:	add    rcx,0x8
   14000cd3a:	mov    QWORD PTR [rcx+rax*1-0x8],r8
   14000cd3f:	cmp    edx,DWORD PTR [rbx+0x10]
   14000cd42:	jl     0x14000cd30
   14000cd44:	movsxd rdi,DWORD PTR [rbx+0x14]
   14000cd48:	mov    rsi,QWORD PTR [rbx+0x8]
   14000cd4c:	cmp    QWORD PTR [rsi+rdi*8],0x0
   14000cd51:	jne    0x14000cd62
   14000cd53:	mov    ecx,0x2000
   14000cd58:	call   QWORD PTR [rip+0x13472]        # 0x1400201d0
   14000cd5e:	mov    QWORD PTR [rsi+rdi*8],rax
   14000cd62:	mov    rax,QWORD PTR [rsi+rdi*8]
   14000cd66:	mov    rsi,QWORD PTR [rsp+0x40]
   14000cd6b:	lea    rcx,[rax+0x2000]
   14000cd72:	mov    QWORD PTR [rbx+0x20],rcx
   14000cd76:	lea    rcx,[rax+rbp*1]
   14000cd7a:	mov    rbp,QWORD PTR [rsp+0x38]
   14000cd7f:	mov    QWORD PTR [rbx+0x18],rcx
   14000cd83:	mov    rbx,QWORD PTR [rsp+0x30]
   14000cd88:	add    rsp,0x20
   14000cd8c:	pop    rdi
   14000cd8d:	ret    
   14000cd8e:	int3   
   14000cd8f:	int3   
   14000cd90:	lea    r9,[rip+0xffffffffffff3269]        # 0x140000000
   14000cd97:	movsxd r8,ecx
   14000cd9a:	movsx  eax,WORD PTR [r9+r8*2+0x23f70]
   14000cda3:	add    eax,edx
   14000cda5:	js     0x14000cdc1
   14000cda7:	movsxd rcx,eax
   14000cdaa:	movsx  eax,WORD PTR [r9+rcx*2+0x26620]
   14000cdb3:	cmp    eax,edx
   14000cdb5:	jne    0x14000cdc1
   14000cdb7:	movsx  eax,WORD PTR [r9+rcx*2+0x249e0]
   14000cdc0:	ret    
   14000cdc1:	movsx  eax,WORD PTR [r9+r8*2+0x23950]
   14000cdca:	neg    eax
   14000cdcc:	ret    
   14000cdcd:	int3   
   14000cdce:	int3   
   14000cdcf:	int3   
   14000cdd0:	mov    eax,DWORD PTR [rcx+0x10]
   14000cdd3:	mov    DWORD PTR [rdx],eax
   14000cdd5:	mov    eax,DWORD PTR [rcx+0x14]
   14000cdd8:	mov    DWORD PTR [rdx+0x4],eax
   14000cddb:	mov    eax,DWORD PTR [rcx+0x18]
   14000cdde:	mov    DWORD PTR [rdx+0x8],eax
   14000cde1:	mov    eax,DWORD PTR [rcx+0x1c]
   14000cde4:	mov    DWORD PTR [rdx+0xc],eax
   14000cde7:	mov    rax,rdx
   14000cdea:	ret    
   14000cdeb:	int3   
   14000cdec:	int3   
   14000cded:	int3   
   14000cdee:	int3   
   14000cdef:	int3   
   14000cdf0:	xor    r9d,r9d
   14000cdf3:	lea    rax,[rip+0x1416e]        # 0x140020f68
   14000cdfa:	mov    QWORD PTR [rcx],rax
   14000cdfd:	mov    DWORD PTR [rcx+0x8],r9d
   14000ce01:	mov    rax,QWORD PTR [rdx]
   14000ce04:	mov    QWORD PTR [rcx+0x10],rax
   14000ce08:	mov    eax,DWORD PTR [rdx+0x8]
   14000ce0b:	mov    DWORD PTR [rcx+0x18],eax
   14000ce0e:	mov    eax,DWORD PTR [rdx+0xc]
   14000ce11:	mov    DWORD PTR [rcx+0x1c],eax
   14000ce14:	mov    DWORD PTR [rcx+0x20],r8d
   14000ce18:	mov    DWORD PTR [rcx+0x24],r9d
   14000ce1c:	mov    DWORD PTR [rcx+0x28],r9d
   14000ce20:	mov    DWORD PTR [rcx+0x2c],r9d
   14000ce24:	mov    DWORD PTR [rcx+0x30],r9d
   14000ce28:	mov    DWORD PTR [rcx+0x8],0x37
   14000ce2f:	mov    rax,rcx
   14000ce32:	ret    
   14000ce33:	int3   
   14000ce34:	int3   
   14000ce35:	int3   
   14000ce36:	int3   
   14000ce37:	int3   
   14000ce38:	int3   
   14000ce39:	int3   
   14000ce3a:	int3   
   14000ce3b:	int3   
   14000ce3c:	int3   
   14000ce3d:	int3   
   14000ce3e:	int3   
   14000ce3f:	int3   
   14000ce40:	mov    eax,DWORD PTR [rcx+0x24]
   14000ce43:	mov    DWORD PTR [rdx],eax
   14000ce45:	mov    eax,DWORD PTR [rcx+0x28]
   14000ce48:	mov    DWORD PTR [rdx+0x4],eax
   14000ce4b:	mov    eax,DWORD PTR [rcx+0x2c]
   14000ce4e:	mov    DWORD PTR [rdx+0x8],eax
   14000ce51:	mov    eax,DWORD PTR [rcx+0x30]
   14000ce54:	mov    DWORD PTR [rdx+0xc],eax
   14000ce57:	mov    rax,rdx
   14000ce5a:	ret    
   14000ce5b:	int3   
   14000ce5c:	int3   
   14000ce5d:	int3   
   14000ce5e:	int3   
   14000ce5f:	int3   
   14000ce60:	mov    QWORD PTR [rcx+0x18],rdx
   14000ce64:	lea    rax,[rip+0x1414d]        # 0x140020fb8
   14000ce6b:	mov    QWORD PTR [rcx],rax
   14000ce6e:	xor    eax,eax
   14000ce70:	mov    QWORD PTR [rcx+0x10],rax
   14000ce74:	mov    DWORD PTR [rcx+0x20],eax
   14000ce77:	mov    DWORD PTR [rcx+0x24],eax
   14000ce7a:	mov    DWORD PTR [rcx+0x28],eax
   14000ce7d:	mov    DWORD PTR [rcx+0x2c],eax
   14000ce80:	mov    DWORD PTR [rcx+0x30],eax
   14000ce83:	mov    DWORD PTR [rcx+0x34],eax
   14000ce86:	mov    DWORD PTR [rcx+0x38],eax
   14000ce89:	mov    DWORD PTR [rcx+0x3c],eax
   14000ce8c:	mov    DWORD PTR [rcx+0x40],eax
   14000ce8f:	mov    DWORD PTR [rcx+0x44],eax
   14000ce92:	mov    DWORD PTR [rcx+0x48],eax
   14000ce95:	mov    DWORD PTR [rcx+0x4c],eax
   14000ce98:	mov    DWORD PTR [rcx+0x8],0x2
   14000ce9f:	mov    rax,rcx
   14000cea2:	ret    
   14000cea3:	int3   
   14000cea4:	int3   
   14000cea5:	int3   
   14000cea6:	int3   
   14000cea7:	int3   
   14000cea8:	int3   
   14000cea9:	int3   
   14000ceaa:	int3   
   14000ceab:	int3   
   14000ceac:	int3   
   14000cead:	int3   
   14000ceae:	int3   
   14000ceaf:	int3   
   14000ceb0:	mov    QWORD PTR [rcx+0x10],rdx
   14000ceb4:	lea    rax,[rip+0x140fd]        # 0x140020fb8
   14000cebb:	mov    QWORD PTR [rcx],rax
   14000cebe:	xor    eax,eax
   14000cec0:	mov    QWORD PTR [rcx+0x18],rax
   14000cec4:	mov    DWORD PTR [rcx+0x20],eax
   14000cec7:	mov    DWORD PTR [rcx+0x24],eax
   14000ceca:	mov    DWORD PTR [rcx+0x28],eax
   14000cecd:	mov    DWORD PTR [rcx+0x2c],eax
   14000ced0:	mov    DWORD PTR [rcx+0x30],eax
   14000ced3:	mov    DWORD PTR [rcx+0x34],eax
   14000ced6:	mov    DWORD PTR [rcx+0x38],eax
   14000ced9:	mov    DWORD PTR [rcx+0x3c],eax
   14000cedc:	mov    DWORD PTR [rcx+0x40],eax
   14000cedf:	mov    DWORD PTR [rcx+0x44],eax
   14000cee2:	mov    DWORD PTR [rcx+0x48],eax
   14000cee5:	mov    DWORD PTR [rcx+0x4c],eax
   14000cee8:	mov    DWORD PTR [rcx+0x8],0x2
   14000ceef:	mov    rax,rcx
   14000cef2:	ret    
   14000cef3:	int3   
   14000cef4:	int3   
   14000cef5:	int3   
   14000cef6:	int3   
   14000cef7:	int3   
   14000cef8:	int3   
   14000cef9:	int3   
   14000cefa:	int3   
   14000cefb:	int3   
   14000cefc:	int3   
   14000cefd:	int3   
   14000cefe:	int3   
   14000ceff:	int3   
   14000cf00:	mov    QWORD PTR [rcx+0x10],rdx
   14000cf04:	mov    QWORD PTR [rcx+0x18],r8
   14000cf08:	lea    rax,[rip+0x140a9]        # 0x140020fb8
   14000cf0f:	mov    QWORD PTR [rcx],rax
   14000cf12:	xor    eax,eax
   14000cf14:	mov    DWORD PTR [rcx+0x20],eax
   14000cf17:	mov    DWORD PTR [rcx+0x24],eax
   14000cf1a:	mov    DWORD PTR [rcx+0x28],eax
   14000cf1d:	mov    DWORD PTR [rcx+0x2c],eax
   14000cf20:	mov    DWORD PTR [rcx+0x30],eax
   14000cf23:	mov    DWORD PTR [rcx+0x34],eax
   14000cf26:	mov    DWORD PTR [rcx+0x38],eax
   14000cf29:	mov    DWORD PTR [rcx+0x3c],eax
   14000cf2c:	mov    DWORD PTR [rcx+0x40],eax
   14000cf2f:	mov    DWORD PTR [rcx+0x44],eax
   14000cf32:	mov    DWORD PTR [rcx+0x48],eax
   14000cf35:	mov    DWORD PTR [rcx+0x4c],eax
   14000cf38:	mov    DWORD PTR [rcx+0x8],0x2
   14000cf3f:	mov    rax,rcx
   14000cf42:	ret    
   14000cf43:	int3   
   14000cf44:	int3   
   14000cf45:	int3   
   14000cf46:	int3   
   14000cf47:	int3   
   14000cf48:	int3   
   14000cf49:	int3   
   14000cf4a:	int3   
   14000cf4b:	int3   
   14000cf4c:	int3   
   14000cf4d:	int3   
   14000cf4e:	int3   
   14000cf4f:	int3   
   14000cf50:	mov    eax,DWORD PTR [rcx+0x18]
   14000cf53:	mov    DWORD PTR [rdx],eax
   14000cf55:	mov    eax,DWORD PTR [rcx+0x1c]
   14000cf58:	mov    DWORD PTR [rdx+0x4],eax
   14000cf5b:	mov    eax,DWORD PTR [rcx+0x20]
   14000cf5e:	mov    DWORD PTR [rdx+0x8],eax
   14000cf61:	mov    eax,DWORD PTR [rcx+0x24]
   14000cf64:	mov    DWORD PTR [rdx+0xc],eax
   14000cf67:	mov    rax,rdx
   14000cf6a:	ret    
   14000cf6b:	int3   
   14000cf6c:	int3   
   14000cf6d:	int3   
   14000cf6e:	int3   
   14000cf6f:	int3   
   14000cf70:	rex push rbx
   14000cf72:	sub    rsp,0x30
   14000cf76:	cmp    QWORD PTR [rcx+0x10],0x0
   14000cf7b:	mov    rbx,rdx
   14000cf7e:	je     0x14000cf94
   14000cf80:	mov    rcx,QWORD PTR [rcx+0x10]
   14000cf84:	lea    rdx,[rsp+0x20]
   14000cf89:	mov    rax,QWORD PTR [rcx]
   14000cf8c:	call   QWORD PTR [rax+0x38]
   14000cf8f:	mov    rcx,rax
   14000cf92:	jmp    0x14000cf98
   14000cf94:	add    rcx,0x18
   14000cf98:	mov    eax,DWORD PTR [rcx]
   14000cf9a:	mov    DWORD PTR [rbx],eax
   14000cf9c:	mov    eax,DWORD PTR [rcx+0x4]
   14000cf9f:	mov    DWORD PTR [rbx+0x4],eax
   14000cfa2:	mov    eax,DWORD PTR [rcx+0x8]
   14000cfa5:	mov    DWORD PTR [rbx+0x8],eax
   14000cfa8:	mov    eax,DWORD PTR [rcx+0xc]
   14000cfab:	mov    DWORD PTR [rbx+0xc],eax
   14000cfae:	mov    rax,rbx
   14000cfb1:	add    rsp,0x30
   14000cfb5:	pop    rbx
   14000cfb6:	ret    
   14000cfb7:	int3   
   14000cfb8:	int3   
   14000cfb9:	int3   
   14000cfba:	int3   
   14000cfbb:	int3   
   14000cfbc:	int3   
   14000cfbd:	int3   
   14000cfbe:	int3   
   14000cfbf:	int3   
   14000cfc0:	rex push rbx
   14000cfc2:	sub    rsp,0x20
   14000cfc6:	cmp    QWORD PTR [rcx+0x10],0x0
   14000cfcb:	mov    rbx,rdx
   14000cfce:	je     0x14000cfe3
   14000cfd0:	mov    rcx,QWORD PTR [rcx+0x10]
   14000cfd4:	mov    rax,QWORD PTR [rcx]
   14000cfd7:	call   QWORD PTR [rax+0x30]
   14000cfda:	mov    rax,rbx
   14000cfdd:	add    rsp,0x20
   14000cfe1:	pop    rbx
   14000cfe2:	ret    
   14000cfe3:	mov    rcx,QWORD PTR [rcx+0x18]
   14000cfe7:	mov    rax,QWORD PTR [rcx]
   14000cfea:	call   QWORD PTR [rax+0x30]
   14000cfed:	mov    rax,rbx
   14000cff0:	add    rsp,0x20
   14000cff4:	pop    rbx
   14000cff5:	ret    
   14000cff6:	int3   
   14000cff7:	int3   
   14000cff8:	int3   
   14000cff9:	int3   
   14000cffa:	int3   
   14000cffb:	int3   
   14000cffc:	int3   
   14000cffd:	int3   
   14000cffe:	int3   
   14000cfff:	int3   
   14000d000:	rex push rbx
   14000d002:	sub    rsp,0x20
   14000d006:	cmp    QWORD PTR [rcx+0x20],0x0
   14000d00b:	mov    rbx,rdx
   14000d00e:	je     0x14000d023
   14000d010:	mov    rcx,QWORD PTR [rcx+0x20]
   14000d014:	mov    rax,QWORD PTR [rcx]
   14000d017:	call   QWORD PTR [rax+0x38]
   14000d01a:	mov    rax,rbx
   14000d01d:	add    rsp,0x20
   14000d021:	pop    rbx
   14000d022:	ret    
   14000d023:	mov    rcx,QWORD PTR [rcx+0x18]
   14000d027:	mov    rax,QWORD PTR [rcx]
   14000d02a:	call   QWORD PTR [rax+0x38]
   14000d02d:	mov    rax,rbx
   14000d030:	add    rsp,0x20
   14000d034:	pop    rbx
   14000d035:	ret    
   14000d036:	int3   
   14000d037:	int3   
   14000d038:	int3   
   14000d039:	int3   
   14000d03a:	int3   
   14000d03b:	int3   
   14000d03c:	int3   
   14000d03d:	int3   
   14000d03e:	int3   
   14000d03f:	int3   
   14000d040:	rex push rbx
   14000d042:	sub    rsp,0x40
   14000d046:	cmp    QWORD PTR [rcx+0x18],0x0
   14000d04b:	mov    rbx,rdx
   14000d04e:	je     0x14000d05b
   14000d050:	mov    rcx,QWORD PTR [rcx+0x18]
   14000d054:	lea    rdx,[rsp+0x20]
   14000d059:	jmp    0x14000d064
   14000d05b:	mov    rcx,QWORD PTR [rcx+0x10]
   14000d05f:	lea    rdx,[rsp+0x30]
   14000d064:	mov    rax,QWORD PTR [rcx]
   14000d067:	call   QWORD PTR [rax+0x38]
   14000d06a:	mov    r11,rax
   14000d06d:	mov    eax,DWORD PTR [rax]
   14000d06f:	mov    DWORD PTR [rbx],eax
   14000d071:	mov    eax,DWORD PTR [r11+0x4]
   14000d075:	mov    DWORD PTR [rbx+0x4],eax
   14000d078:	mov    eax,DWORD PTR [r11+0x8]
   14000d07c:	mov    DWORD PTR [rbx+0x8],eax
   14000d07f:	mov    eax,DWORD PTR [r11+0xc]
   14000d083:	mov    DWORD PTR [rbx+0xc],eax
   14000d086:	mov    rax,rbx
   14000d089:	add    rsp,0x40
   14000d08d:	pop    rbx
   14000d08e:	ret    
   14000d08f:	int3   
   14000d090:	mov    QWORD PTR [rcx+0x10],rdx
   14000d094:	lea    rax,[rip+0x140fd]        # 0x140021198
   14000d09b:	mov    QWORD PTR [rcx],rax
   14000d09e:	xor    eax,eax
   14000d0a0:	mov    DWORD PTR [rcx+0x18],eax
   14000d0a3:	mov    DWORD PTR [rcx+0x1c],eax
   14000d0a6:	mov    DWORD PTR [rcx+0x20],eax
   14000d0a9:	mov    DWORD PTR [rcx+0x24],eax
   14000d0ac:	mov    DWORD PTR [rcx+0x28],eax
   14000d0af:	mov    DWORD PTR [rcx+0x2c],eax
   14000d0b2:	mov    DWORD PTR [rcx+0x30],eax
   14000d0b5:	mov    DWORD PTR [rcx+0x34],eax
   14000d0b8:	mov    DWORD PTR [rcx+0x38],eax
   14000d0bb:	mov    QWORD PTR [rcx+0x40],rax
   14000d0bf:	mov    DWORD PTR [rcx+0x48],eax
   14000d0c2:	mov    DWORD PTR [rcx+0x4c],eax
   14000d0c5:	mov    DWORD PTR [rcx+0x50],eax
   14000d0c8:	mov    DWORD PTR [rcx+0x54],eax
   14000d0cb:	mov    DWORD PTR [rcx+0x58],eax
   14000d0ce:	mov    DWORD PTR [rcx+0x5c],eax
   14000d0d1:	mov    DWORD PTR [rcx+0x60],eax
   14000d0d4:	mov    DWORD PTR [rcx+0x64],eax
   14000d0d7:	mov    QWORD PTR [rcx+0x68],r8
   14000d0db:	mov    DWORD PTR [rcx+0x70],eax
   14000d0de:	mov    DWORD PTR [rcx+0x74],eax
   14000d0e1:	mov    DWORD PTR [rcx+0x78],eax
   14000d0e4:	mov    DWORD PTR [rcx+0x7c],eax
   14000d0e7:	mov    DWORD PTR [rcx+0x8],0x34
   14000d0ee:	mov    rax,rcx
   14000d0f1:	ret    
   14000d0f2:	int3   
   14000d0f3:	int3   
   14000d0f4:	int3   
   14000d0f5:	int3   
   14000d0f6:	int3   
   14000d0f7:	int3   
   14000d0f8:	int3   
   14000d0f9:	int3   
   14000d0fa:	int3   
   14000d0fb:	int3   
   14000d0fc:	int3   
   14000d0fd:	int3   
   14000d0fe:	int3   
   14000d0ff:	int3   
   14000d100:	mov    QWORD PTR [rcx+0x10],rdx
   14000d104:	mov    DWORD PTR [rcx+0x18],0x1
   14000d10b:	lea    rax,[rip+0x14086]        # 0x140021198
   14000d112:	mov    QWORD PTR [rcx],rax
   14000d115:	xor    eax,eax
   14000d117:	mov    DWORD PTR [rcx+0x1c],eax
   14000d11a:	mov    DWORD PTR [rcx+0x20],eax
   14000d11d:	mov    DWORD PTR [rcx+0x24],eax
   14000d120:	mov    DWORD PTR [rcx+0x28],eax
   14000d123:	mov    DWORD PTR [rcx+0x2c],eax
   14000d126:	mov    DWORD PTR [rcx+0x30],eax
   14000d129:	mov    DWORD PTR [rcx+0x34],eax
   14000d12c:	mov    DWORD PTR [rcx+0x38],eax
   14000d12f:	mov    QWORD PTR [rcx+0x40],r8
   14000d133:	mov    DWORD PTR [rcx+0x48],eax
   14000d136:	mov    DWORD PTR [rcx+0x4c],eax
   14000d139:	mov    DWORD PTR [rcx+0x50],eax
   14000d13c:	mov    DWORD PTR [rcx+0x54],eax
   14000d13f:	mov    DWORD PTR [rcx+0x58],eax
   14000d142:	mov    DWORD PTR [rcx+0x5c],eax
   14000d145:	mov    DWORD PTR [rcx+0x60],eax
   14000d148:	mov    DWORD PTR [rcx+0x64],eax
   14000d14b:	mov    QWORD PTR [rcx+0x68],r9
   14000d14f:	mov    DWORD PTR [rcx+0x70],eax
   14000d152:	mov    DWORD PTR [rcx+0x74],eax
   14000d155:	mov    DWORD PTR [rcx+0x78],eax
   14000d158:	mov    DWORD PTR [rcx+0x7c],eax
   14000d15b:	mov    DWORD PTR [rcx+0x8],0x34
   14000d162:	mov    rax,rcx
   14000d165:	ret    
   14000d166:	int3   
   14000d167:	int3   
   14000d168:	int3   
   14000d169:	int3   
   14000d16a:	int3   
   14000d16b:	int3   
   14000d16c:	int3   
   14000d16d:	int3   
   14000d16e:	int3   
   14000d16f:	int3   
   14000d170:	mov    eax,DWORD PTR [rcx+0x1c]
   14000d173:	mov    DWORD PTR [rdx],eax
   14000d175:	mov    eax,DWORD PTR [rcx+0x20]
   14000d178:	mov    DWORD PTR [rdx+0x4],eax
   14000d17b:	mov    eax,DWORD PTR [rcx+0x24]
   14000d17e:	mov    DWORD PTR [rdx+0x8],eax
   14000d181:	mov    eax,DWORD PTR [rcx+0x28]
   14000d184:	mov    DWORD PTR [rdx+0xc],eax
   14000d187:	mov    rax,rdx
   14000d18a:	ret    
   14000d18b:	int3   
   14000d18c:	int3   
   14000d18d:	int3   
   14000d18e:	int3   
   14000d18f:	int3   
   14000d190:	mov    eax,DWORD PTR [rcx+0x70]
   14000d193:	mov    DWORD PTR [rdx],eax
   14000d195:	mov    eax,DWORD PTR [rcx+0x74]
   14000d198:	mov    DWORD PTR [rdx+0x4],eax
   14000d19b:	mov    eax,DWORD PTR [rcx+0x78]
   14000d19e:	mov    DWORD PTR [rdx+0x8],eax
   14000d1a1:	mov    eax,DWORD PTR [rcx+0x7c]
   14000d1a4:	mov    DWORD PTR [rdx+0xc],eax
   14000d1a7:	mov    rax,rdx
   14000d1aa:	ret    
   14000d1ab:	int3   
   14000d1ac:	int3   
   14000d1ad:	int3   
   14000d1ae:	int3   
   14000d1af:	int3   
   14000d1b0:	rex push rbx
   14000d1b2:	sub    rsp,0x20
   14000d1b6:	add    rcx,0x20
   14000d1ba:	mov    rbx,rdx
   14000d1bd:	call   QWORD PTR [rip+0x133ad]        # 0x140020570
   14000d1c3:	mov    rax,rbx
   14000d1c6:	add    rsp,0x20
   14000d1ca:	pop    rbx
   14000d1cb:	ret    
   14000d1cc:	int3   
   14000d1cd:	int3   
   14000d1ce:	int3   
   14000d1cf:	int3   
   14000d1d0:	rex push rbx
   14000d1d2:	sub    rsp,0x20
   14000d1d6:	movsd  xmm1,QWORD PTR [rcx+0x20]
   14000d1db:	mov    r9d,0x10
   14000d1e1:	mov    r8b,0x67
   14000d1e4:	mov    rcx,rdx
   14000d1e7:	mov    rbx,rdx
   14000d1ea:	call   QWORD PTR [rip+0x13238]        # 0x140020428
   14000d1f0:	mov    rax,rbx
   14000d1f3:	add    rsp,0x20
   14000d1f7:	pop    rbx
   14000d1f8:	ret    
   14000d1f9:	int3   
   14000d1fa:	int3   
   14000d1fb:	int3   
   14000d1fc:	int3   
   14000d1fd:	int3   
   14000d1fe:	int3   
   14000d1ff:	int3   
   14000d200:	mov    eax,DWORD PTR [rcx+0x30]
   14000d203:	mov    DWORD PTR [rdx],eax
   14000d205:	mov    eax,DWORD PTR [rcx+0x34]
   14000d208:	mov    DWORD PTR [rdx+0x4],eax
   14000d20b:	mov    eax,DWORD PTR [rcx+0x38]
   14000d20e:	mov    DWORD PTR [rdx+0x8],eax
   14000d211:	mov    eax,DWORD PTR [rcx+0x3c]
   14000d214:	mov    DWORD PTR [rdx+0xc],eax
   14000d217:	mov    rax,rdx
   14000d21a:	ret    
   14000d21b:	int3   
   14000d21c:	int3   
   14000d21d:	int3   
   14000d21e:	int3   
   14000d21f:	int3   
   14000d220:	mov    QWORD PTR [rcx+0x10],rdx
   14000d224:	xor    r9d,r9d
   14000d227:	lea    rax,[rip+0x140fa]        # 0x140021328
   14000d22e:	mov    QWORD PTR [rcx],rax
   14000d231:	mov    DWORD PTR [rcx+0x8],r9d
   14000d235:	mov    rax,QWORD PTR [r8]
   14000d238:	mov    QWORD PTR [rcx+0x18],rax
   14000d23c:	mov    eax,DWORD PTR [r8+0x8]
   14000d240:	mov    DWORD PTR [rcx+0x20],eax
   14000d243:	mov    eax,DWORD PTR [r8+0xc]
   14000d247:	mov    DWORD PTR [rcx+0x24],eax
   14000d24a:	mov    DWORD PTR [rcx+0x28],r9d
   14000d24e:	mov    DWORD PTR [rcx+0x2c],r9d
   14000d252:	mov    DWORD PTR [rcx+0x30],r9d
   14000d256:	mov    DWORD PTR [rcx+0x34],r9d
   14000d25a:	mov    DWORD PTR [rcx+0x38],r9d
   14000d25e:	mov    DWORD PTR [rcx+0x3c],r9d
   14000d262:	mov    DWORD PTR [rcx+0x40],r9d
   14000d266:	mov    DWORD PTR [rcx+0x44],r9d
   14000d26a:	mov    DWORD PTR [rcx+0x8],0x18
   14000d271:	mov    rax,rcx
   14000d274:	ret    
   14000d275:	int3   
   14000d276:	int3   
   14000d277:	int3   
   14000d278:	int3   
   14000d279:	int3   
   14000d27a:	int3   
   14000d27b:	int3   
   14000d27c:	int3   
   14000d27d:	int3   
   14000d27e:	int3   
   14000d27f:	int3   
   14000d280:	mov    QWORD PTR [rcx+0x10],rdx
   14000d284:	mov    QWORD PTR [rcx+0x18],r8
   14000d288:	lea    rax,[rip+0x140e9]        # 0x140021378
   14000d28f:	mov    QWORD PTR [rcx],rax
   14000d292:	xor    eax,eax
   14000d294:	mov    DWORD PTR [rcx+0x20],eax
   14000d297:	mov    DWORD PTR [rcx+0x24],eax
   14000d29a:	mov    DWORD PTR [rcx+0x28],eax
   14000d29d:	mov    DWORD PTR [rcx+0x2c],eax
   14000d2a0:	mov    DWORD PTR [rcx+0x30],eax
   14000d2a3:	mov    DWORD PTR [rcx+0x34],eax
   14000d2a6:	mov    DWORD PTR [rcx+0x38],eax
   14000d2a9:	mov    DWORD PTR [rcx+0x3c],eax
   14000d2ac:	mov    DWORD PTR [rcx+0x40],eax
   14000d2af:	mov    DWORD PTR [rcx+0x44],eax
   14000d2b2:	mov    DWORD PTR [rcx+0x48],eax
   14000d2b5:	mov    DWORD PTR [rcx+0x4c],eax
   14000d2b8:	mov    DWORD PTR [rcx+0x8],0x28
   14000d2bf:	mov    rax,rcx
   14000d2c2:	ret    
   14000d2c3:	int3   
   14000d2c4:	int3   
   14000d2c5:	int3   
   14000d2c6:	int3   
   14000d2c7:	int3   
   14000d2c8:	int3   
   14000d2c9:	int3   
   14000d2ca:	int3   
   14000d2cb:	int3   
   14000d2cc:	int3   
   14000d2cd:	int3   
   14000d2ce:	int3   
   14000d2cf:	int3   
   14000d2d0:	rex push rbx
   14000d2d2:	sub    rsp,0x20
   14000d2d6:	mov    rcx,QWORD PTR [rcx+0x10]
   14000d2da:	mov    rbx,rdx
   14000d2dd:	mov    rax,QWORD PTR [rcx]
   14000d2e0:	call   QWORD PTR [rax+0x30]
   14000d2e3:	mov    rax,rbx
   14000d2e6:	add    rsp,0x20
   14000d2ea:	pop    rbx
   14000d2eb:	ret    
   14000d2ec:	int3   
   14000d2ed:	int3   
   14000d2ee:	int3   
   14000d2ef:	int3   
   14000d2f0:	rex push rbx
   14000d2f2:	sub    rsp,0x20
   14000d2f6:	cmp    QWORD PTR [rcx+0x18],0x0
   14000d2fb:	mov    rbx,rdx
   14000d2fe:	je     0x14000d313
   14000d300:	mov    rcx,QWORD PTR [rcx+0x18]
   14000d304:	mov    rax,QWORD PTR [rcx]
   14000d307:	call   QWORD PTR [rax+0x38]
   14000d30a:	mov    rax,rbx
   14000d30d:	add    rsp,0x20
   14000d311:	pop    rbx
   14000d312:	ret    
   14000d313:	mov    rcx,QWORD PTR [rcx+0x10]
   14000d317:	mov    rax,QWORD PTR [rcx]
   14000d31a:	call   QWORD PTR [rax+0x38]
   14000d31d:	mov    rax,rbx
   14000d320:	add    rsp,0x20
   14000d324:	pop    rbx
   14000d325:	ret    
   14000d326:	int3   
   14000d327:	int3   
   14000d328:	int3   
   14000d329:	int3   
   14000d32a:	int3   
   14000d32b:	int3   
   14000d32c:	int3   
   14000d32d:	int3   
   14000d32e:	int3   
   14000d32f:	int3   
   14000d330:	rex push rbx
   14000d332:	sub    rsp,0x20
   14000d336:	mov    rcx,QWORD PTR [rcx+0x10]
   14000d33a:	mov    rbx,rdx
   14000d33d:	mov    rax,QWORD PTR [rcx]
   14000d340:	call   QWORD PTR [rax+0x38]
   14000d343:	mov    rax,rbx
   14000d346:	add    rsp,0x20
   14000d34a:	pop    rbx
   14000d34b:	ret    
   14000d34c:	int3   
   14000d34d:	int3   
   14000d34e:	int3   
   14000d34f:	int3   
   14000d350:	mov    QWORD PTR [rcx+0x10],rdx
   14000d354:	mov    QWORD PTR [rcx+0x18],r8
   14000d358:	mov    QWORD PTR [rcx+0x20],r9
   14000d35c:	lea    rax,[rip+0x14515]        # 0x140021878
   14000d363:	mov    QWORD PTR [rcx],rax
   14000d366:	xor    eax,eax
   14000d368:	mov    DWORD PTR [rcx+0x28],eax
   14000d36b:	mov    DWORD PTR [rcx+0x2c],eax
   14000d36e:	mov    DWORD PTR [rcx+0x30],eax
   14000d371:	mov    DWORD PTR [rcx+0x34],eax
   14000d374:	mov    DWORD PTR [rcx+0x38],eax
   14000d377:	mov    DWORD PTR [rcx+0x3c],eax
   14000d37a:	mov    DWORD PTR [rcx+0x40],eax
   14000d37d:	mov    DWORD PTR [rcx+0x44],eax
   14000d380:	mov    DWORD PTR [rcx+0x8],0xc
   14000d387:	mov    rax,rcx
   14000d38a:	ret    
   14000d38b:	int3   
   14000d38c:	int3   
   14000d38d:	int3   
   14000d38e:	int3   
   14000d38f:	int3   
   14000d390:	rex push rbx
   14000d392:	sub    rsp,0x20
   14000d396:	mov    rcx,QWORD PTR [rcx+0x18]
   14000d39a:	mov    rbx,rdx
   14000d39d:	mov    rax,QWORD PTR [rcx]
   14000d3a0:	call   QWORD PTR [rax+0x38]
   14000d3a3:	mov    rax,rbx
   14000d3a6:	add    rsp,0x20
   14000d3aa:	pop    rbx
   14000d3ab:	ret    
   14000d3ac:	int3   
   14000d3ad:	int3   
   14000d3ae:	int3   
   14000d3af:	int3   
   14000d3b0:	xor    r9d,r9d
   14000d3b3:	lea    rax,[rip+0x1464e]        # 0x140021a08
   14000d3ba:	mov    QWORD PTR [rcx],rax
   14000d3bd:	mov    DWORD PTR [rcx+0x8],r9d
   14000d3c1:	mov    rax,QWORD PTR [rdx]
   14000d3c4:	mov    QWORD PTR [rcx+0x10],rax
   14000d3c8:	mov    eax,DWORD PTR [rdx+0x8]
   14000d3cb:	mov    DWORD PTR [rcx+0x18],eax
   14000d3ce:	mov    eax,DWORD PTR [rdx+0xc]
   14000d3d1:	mov    DWORD PTR [rcx+0x1c],eax
   14000d3d4:	mov    QWORD PTR [rcx+0x20],r8
   14000d3d8:	mov    BYTE PTR [rcx+0x28],r9b
   14000d3dc:	mov    DWORD PTR [rcx+0x2c],r9d
   14000d3e0:	mov    DWORD PTR [rcx+0x30],r9d
   14000d3e4:	mov    DWORD PTR [rcx+0x34],r9d
   14000d3e8:	mov    DWORD PTR [rcx+0x38],r9d
   14000d3ec:	mov    rax,rcx
   14000d3ef:	mov    DWORD PTR [rcx+0x8],0x48
   14000d3f6:	ret    
   14000d3f7:	int3   
   14000d3f8:	int3   
   14000d3f9:	int3   
   14000d3fa:	int3   
   14000d3fb:	int3   
   14000d3fc:	int3   
   14000d3fd:	int3   
   14000d3fe:	int3   
   14000d3ff:	int3   
   14000d400:	mov    eax,DWORD PTR [rcx+0x2c]
   14000d403:	mov    DWORD PTR [rdx],eax
   14000d405:	mov    eax,DWORD PTR [rcx+0x30]
   14000d408:	mov    DWORD PTR [rdx+0x4],eax
   14000d40b:	mov    eax,DWORD PTR [rcx+0x34]
   14000d40e:	mov    DWORD PTR [rdx+0x8],eax
   14000d411:	mov    eax,DWORD PTR [rcx+0x38]
   14000d414:	mov    DWORD PTR [rdx+0xc],eax
   14000d417:	mov    rax,rdx
   14000d41a:	ret    
   14000d41b:	int3   
   14000d41c:	int3   
   14000d41d:	int3   
   14000d41e:	int3   
   14000d41f:	int3   
   14000d420:	rex push rbx
   14000d422:	sub    rsp,0x30
   14000d426:	cmp    QWORD PTR [rcx+0x20],0x0
   14000d42b:	mov    rbx,rdx
   14000d42e:	je     0x14000d444
   14000d430:	mov    rcx,QWORD PTR [rcx+0x20]
   14000d434:	lea    rdx,[rsp+0x20]
   14000d439:	mov    rax,QWORD PTR [rcx]
   14000d43c:	call   QWORD PTR [rax+0x38]
   14000d43f:	mov    rcx,rax
   14000d442:	jmp    0x14000d448
   14000d444:	add    rcx,0x2c
   14000d448:	mov    eax,DWORD PTR [rcx]
   14000d44a:	mov    DWORD PTR [rbx],eax
   14000d44c:	mov    eax,DWORD PTR [rcx+0x4]
   14000d44f:	mov    DWORD PTR [rbx+0x4],eax
   14000d452:	mov    eax,DWORD PTR [rcx+0x8]
   14000d455:	mov    DWORD PTR [rbx+0x8],eax
   14000d458:	mov    eax,DWORD PTR [rcx+0xc]
   14000d45b:	mov    DWORD PTR [rbx+0xc],eax
   14000d45e:	mov    rax,rbx
   14000d461:	add    rsp,0x30
   14000d465:	pop    rbx
   14000d466:	ret    
   14000d467:	int3   
   14000d468:	int3   
   14000d469:	int3   
   14000d46a:	int3   
   14000d46b:	int3   
   14000d46c:	int3   
   14000d46d:	int3   
   14000d46e:	int3   
   14000d46f:	int3   
   14000d470:	mov    rax,QWORD PTR [rcx+0x18]
   14000d474:	mov    QWORD PTR [rcx+0x18],0x0
   14000d47c:	test   dl,dl
   14000d47e:	je     0x14000d4a1
   14000d480:	mov    rdx,rax
   14000d483:	test   rax,rax
   14000d486:	je     0x14000d4a1
   14000d488:	nop    DWORD PTR [rax+rax*1+0x0]
   14000d490:	mov    rcx,QWORD PTR [rdx+0x10]
   14000d494:	mov    BYTE PTR [rcx+0x28],0x1
   14000d498:	mov    rdx,QWORD PTR [rdx+0x18]
   14000d49c:	test   rdx,rdx
   14000d49f:	jne    0x14000d490
   14000d4a1:	repz ret 
   14000d4a3:	int3   
   14000d4a4:	int3   
   14000d4a5:	int3   
   14000d4a6:	int3   
   14000d4a7:	int3   
   14000d4a8:	int3   
   14000d4a9:	int3   
   14000d4aa:	int3   
   14000d4ab:	int3   
   14000d4ac:	int3   
   14000d4ad:	int3   
   14000d4ae:	int3   
   14000d4af:	int3   
   14000d4b0:	mov    QWORD PTR [rcx+0x10],rdx
   14000d4b4:	mov    QWORD PTR [rcx+0x18],r8
   14000d4b8:	mov    QWORD PTR [rcx+0x20],r9
   14000d4bc:	lea    rax,[rip+0x14685]        # 0x140021b48
   14000d4c3:	mov    QWORD PTR [rcx],rax
   14000d4c6:	xor    eax,eax
   14000d4c8:	mov    DWORD PTR [rcx+0x28],eax
   14000d4cb:	mov    DWORD PTR [rcx+0x2c],eax
   14000d4ce:	mov    DWORD PTR [rcx+0x30],eax
   14000d4d1:	mov    DWORD PTR [rcx+0x34],eax
   14000d4d4:	mov    DWORD PTR [rcx+0x38],eax
   14000d4d7:	mov    DWORD PTR [rcx+0x3c],eax
   14000d4da:	mov    DWORD PTR [rcx+0x40],eax
   14000d4dd:	mov    DWORD PTR [rcx+0x44],eax
   14000d4e0:	mov    DWORD PTR [rcx+0x48],eax
   14000d4e3:	mov    DWORD PTR [rcx+0x4c],eax
   14000d4e6:	mov    DWORD PTR [rcx+0x50],eax
   14000d4e9:	mov    DWORD PTR [rcx+0x54],eax
   14000d4ec:	mov    DWORD PTR [rcx+0x58],eax
   14000d4ef:	mov    DWORD PTR [rcx+0x5c],eax
   14000d4f2:	mov    DWORD PTR [rcx+0x60],eax
   14000d4f5:	mov    DWORD PTR [rcx+0x64],eax
   14000d4f8:	mov    DWORD PTR [rcx+0x8],0x23
   14000d4ff:	mov    rax,rcx
   14000d502:	ret    
   14000d503:	int3   
   14000d504:	int3   
   14000d505:	int3   
   14000d506:	int3   
   14000d507:	int3   
   14000d508:	int3   
   14000d509:	int3   
   14000d50a:	int3   
   14000d50b:	int3   
   14000d50c:	int3   
   14000d50d:	int3   
   14000d50e:	int3   
   14000d50f:	int3   
   14000d510:	mov    QWORD PTR [rcx+0x10],rdx
   14000d514:	mov    QWORD PTR [rcx+0x18],r8
   14000d518:	lea    rax,[rip+0x14679]        # 0x140021b98
   14000d51f:	mov    QWORD PTR [rcx],rax
   14000d522:	xor    eax,eax
   14000d524:	mov    DWORD PTR [rcx+0x20],eax
   14000d527:	mov    DWORD PTR [rcx+0x24],eax
   14000d52a:	mov    DWORD PTR [rcx+0x28],eax
   14000d52d:	mov    DWORD PTR [rcx+0x2c],eax
   14000d530:	mov    DWORD PTR [rcx+0x30],eax
   14000d533:	mov    DWORD PTR [rcx+0x34],eax
   14000d536:	mov    DWORD PTR [rcx+0x38],eax
   14000d539:	mov    DWORD PTR [rcx+0x3c],eax
   14000d53c:	mov    DWORD PTR [rcx+0x40],eax
   14000d53f:	mov    DWORD PTR [rcx+0x44],eax
   14000d542:	mov    DWORD PTR [rcx+0x48],eax
   14000d545:	mov    DWORD PTR [rcx+0x4c],eax
   14000d548:	mov    DWORD PTR [rcx+0x50],eax
   14000d54b:	mov    DWORD PTR [rcx+0x54],eax
   14000d54e:	mov    DWORD PTR [rcx+0x58],eax
   14000d551:	mov    DWORD PTR [rcx+0x5c],eax
   14000d554:	mov    DWORD PTR [rcx+0x60],eax
   14000d557:	mov    DWORD PTR [rcx+0x64],eax
   14000d55a:	mov    DWORD PTR [rcx+0x68],eax
   14000d55d:	mov    DWORD PTR [rcx+0x6c],eax
   14000d560:	mov    DWORD PTR [rcx+0x8],0x11
   14000d567:	mov    rax,rcx
   14000d56a:	ret    
   14000d56b:	int3   
   14000d56c:	int3   
   14000d56d:	int3   
   14000d56e:	int3   
   14000d56f:	int3   
   14000d570:	mov    eax,DWORD PTR [rcx+0x60]
   14000d573:	mov    DWORD PTR [rdx],eax
   14000d575:	mov    eax,DWORD PTR [rcx+0x64]
   14000d578:	mov    DWORD PTR [rdx+0x4],eax
   14000d57b:	mov    eax,DWORD PTR [rcx+0x68]
   14000d57e:	mov    DWORD PTR [rdx+0x8],eax
   14000d581:	mov    eax,DWORD PTR [rcx+0x6c]
   14000d584:	mov    DWORD PTR [rdx+0xc],eax
   14000d587:	mov    rax,rdx
   14000d58a:	ret    
   14000d58b:	int3   
   14000d58c:	int3   
   14000d58d:	int3   
   14000d58e:	int3   
   14000d58f:	int3   
   14000d590:	mov    QWORD PTR [rcx+0x10],rdx
   14000d594:	mov    QWORD PTR [rcx+0x18],r8
   14000d598:	lea    rax,[rip+0x14649]        # 0x140021be8
   14000d59f:	mov    QWORD PTR [rcx],rax
   14000d5a2:	xor    eax,eax
   14000d5a4:	mov    DWORD PTR [rcx+0x20],eax
   14000d5a7:	mov    DWORD PTR [rcx+0x24],eax
   14000d5aa:	mov    DWORD PTR [rcx+0x28],eax
   14000d5ad:	mov    DWORD PTR [rcx+0x2c],eax
   14000d5b0:	mov    DWORD PTR [rcx+0x30],eax
   14000d5b3:	mov    DWORD PTR [rcx+0x34],eax
   14000d5b6:	mov    DWORD PTR [rcx+0x38],eax
   14000d5b9:	mov    DWORD PTR [rcx+0x3c],eax
   14000d5bc:	mov    DWORD PTR [rcx+0x40],eax
   14000d5bf:	mov    DWORD PTR [rcx+0x44],eax
   14000d5c2:	mov    DWORD PTR [rcx+0x48],eax
   14000d5c5:	mov    DWORD PTR [rcx+0x4c],eax
   14000d5c8:	mov    DWORD PTR [rcx+0x8],0x4c
   14000d5cf:	mov    rax,rcx
   14000d5d2:	ret    
   14000d5d3:	int3   
   14000d5d4:	int3   
   14000d5d5:	int3   
   14000d5d6:	int3   
   14000d5d7:	int3   
   14000d5d8:	int3   
   14000d5d9:	int3   
   14000d5da:	int3   
   14000d5db:	int3   
   14000d5dc:	int3   
   14000d5dd:	int3   
   14000d5de:	int3   
   14000d5df:	int3   
   14000d5e0:	mov    eax,DWORD PTR [rcx+0x20]
   14000d5e3:	mov    DWORD PTR [rdx],eax
   14000d5e5:	mov    eax,DWORD PTR [rcx+0x24]
   14000d5e8:	mov    DWORD PTR [rdx+0x4],eax
   14000d5eb:	mov    eax,DWORD PTR [rcx+0x28]
   14000d5ee:	mov    DWORD PTR [rdx+0x8],eax
   14000d5f1:	mov    eax,DWORD PTR [rcx+0x2c]
   14000d5f4:	mov    DWORD PTR [rdx+0xc],eax
   14000d5f7:	mov    rax,rdx
   14000d5fa:	ret    
   14000d5fb:	int3   
   14000d5fc:	int3   
   14000d5fd:	int3   
   14000d5fe:	int3   
   14000d5ff:	int3   
   14000d600:	mov    QWORD PTR [rcx+0x10],rdx
   14000d604:	mov    QWORD PTR [rcx+0x18],r8
   14000d608:	mov    QWORD PTR [rcx+0x20],r9
   14000d60c:	lea    rax,[rip+0x14625]        # 0x140021c38
   14000d613:	mov    QWORD PTR [rcx],rax
   14000d616:	mov    rax,QWORD PTR [rsp+0x28]
   14000d61b:	mov    QWORD PTR [rcx+0x28],rax
   14000d61f:	xor    eax,eax
   14000d621:	mov    DWORD PTR [rcx+0x30],eax
   14000d624:	mov    DWORD PTR [rcx+0x34],eax
   14000d627:	mov    DWORD PTR [rcx+0x38],eax
   14000d62a:	mov    DWORD PTR [rcx+0x3c],eax
   14000d62d:	mov    DWORD PTR [rcx+0x40],eax
   14000d630:	mov    DWORD PTR [rcx+0x44],eax
   14000d633:	mov    DWORD PTR [rcx+0x48],eax
   14000d636:	mov    DWORD PTR [rcx+0x4c],eax
   14000d639:	mov    DWORD PTR [rcx+0x50],eax
   14000d63c:	mov    DWORD PTR [rcx+0x54],eax
   14000d63f:	mov    DWORD PTR [rcx+0x58],eax
   14000d642:	mov    DWORD PTR [rcx+0x5c],eax
   14000d645:	mov    DWORD PTR [rcx+0x60],eax
   14000d648:	mov    DWORD PTR [rcx+0x64],eax
   14000d64b:	mov    DWORD PTR [rcx+0x68],eax
   14000d64e:	mov    DWORD PTR [rcx+0x6c],eax
   14000d651:	mov    DWORD PTR [rcx+0x70],eax
   14000d654:	mov    DWORD PTR [rcx+0x74],eax
   14000d657:	mov    DWORD PTR [rcx+0x78],eax
   14000d65a:	mov    DWORD PTR [rcx+0x7c],eax
   14000d65d:	mov    DWORD PTR [rcx+0x8],0x1b
   14000d664:	mov    rax,rcx
   14000d667:	ret    
   14000d668:	int3   
   14000d669:	int3   
   14000d66a:	int3   
   14000d66b:	int3   
   14000d66c:	int3   
   14000d66d:	int3   
   14000d66e:	int3   
   14000d66f:	int3   
   14000d670:	rex push rbx
   14000d672:	sub    rsp,0x20
   14000d676:	mov    rcx,QWORD PTR [rcx+0x28]
   14000d67a:	mov    rbx,rdx
   14000d67d:	mov    rax,QWORD PTR [rcx]
   14000d680:	call   QWORD PTR [rax+0x38]
   14000d683:	mov    rax,rbx
   14000d686:	add    rsp,0x20
   14000d68a:	pop    rbx
   14000d68b:	ret    
   14000d68c:	int3   
   14000d68d:	int3   
   14000d68e:	int3   
   14000d68f:	int3   
   14000d690:	mov    QWORD PTR [rcx+0x10],rdx
   14000d694:	mov    QWORD PTR [rcx+0x18],r8
   14000d698:	mov    QWORD PTR [rcx+0x20],r9
   14000d69c:	lea    rax,[rip+0x145e5]        # 0x140021c88
   14000d6a3:	mov    QWORD PTR [rcx],rax
   14000d6a6:	mov    rax,QWORD PTR [rsp+0x28]
   14000d6ab:	mov    QWORD PTR [rcx+0x28],rax
   14000d6af:	xor    eax,eax
   14000d6b1:	mov    DWORD PTR [rcx+0x30],eax
   14000d6b4:	mov    DWORD PTR [rcx+0x34],eax
   14000d6b7:	mov    DWORD PTR [rcx+0x38],eax
   14000d6ba:	mov    DWORD PTR [rcx+0x3c],eax
   14000d6bd:	mov    DWORD PTR [rcx+0x40],eax
   14000d6c0:	mov    DWORD PTR [rcx+0x44],eax
   14000d6c3:	mov    DWORD PTR [rcx+0x48],eax
   14000d6c6:	mov    DWORD PTR [rcx+0x4c],eax
   14000d6c9:	mov    DWORD PTR [rcx+0x50],eax
   14000d6cc:	mov    DWORD PTR [rcx+0x54],eax
   14000d6cf:	mov    DWORD PTR [rcx+0x58],eax
   14000d6d2:	mov    DWORD PTR [rcx+0x5c],eax
   14000d6d5:	mov    DWORD PTR [rcx+0x60],eax
   14000d6d8:	mov    DWORD PTR [rcx+0x64],eax
   14000d6db:	mov    DWORD PTR [rcx+0x68],eax
   14000d6de:	mov    DWORD PTR [rcx+0x6c],eax
   14000d6e1:	mov    DWORD PTR [rcx+0x70],eax
   14000d6e4:	mov    DWORD PTR [rcx+0x74],eax
   14000d6e7:	mov    DWORD PTR [rcx+0x78],eax
   14000d6ea:	mov    DWORD PTR [rcx+0x7c],eax
   14000d6ed:	mov    DWORD PTR [rcx+0x80],eax
   14000d6f3:	mov    DWORD PTR [rcx+0x84],eax
   14000d6f9:	mov    DWORD PTR [rcx+0x88],eax
   14000d6ff:	mov    DWORD PTR [rcx+0x8c],eax
   14000d705:	mov    DWORD PTR [rcx+0x8],0x26
   14000d70c:	mov    rax,rcx
   14000d70f:	ret    
   14000d710:	mov    QWORD PTR [rcx+0x10],rdx
   14000d714:	mov    QWORD PTR [rcx+0x18],r8
   14000d718:	mov    QWORD PTR [rcx+0x20],r9
   14000d71c:	lea    rax,[rip+0x145b5]        # 0x140021cd8
   14000d723:	mov    QWORD PTR [rcx],rax
   14000d726:	xor    eax,eax
   14000d728:	mov    DWORD PTR [rcx+0x28],eax
   14000d72b:	mov    DWORD PTR [rcx+0x2c],eax
   14000d72e:	mov    DWORD PTR [rcx+0x30],eax
   14000d731:	mov    DWORD PTR [rcx+0x34],eax
   14000d734:	mov    DWORD PTR [rcx+0x38],eax
   14000d737:	mov    DWORD PTR [rcx+0x3c],eax
   14000d73a:	mov    DWORD PTR [rcx+0x40],eax
   14000d73d:	mov    DWORD PTR [rcx+0x44],eax
   14000d740:	mov    DWORD PTR [rcx+0x48],eax
   14000d743:	mov    DWORD PTR [rcx+0x4c],eax
   14000d746:	mov    DWORD PTR [rcx+0x50],eax
   14000d749:	mov    DWORD PTR [rcx+0x54],eax
   14000d74c:	mov    DWORD PTR [rcx+0x58],eax
   14000d74f:	mov    DWORD PTR [rcx+0x5c],eax
   14000d752:	mov    DWORD PTR [rcx+0x60],eax
   14000d755:	mov    DWORD PTR [rcx+0x64],eax
   14000d758:	mov    DWORD PTR [rcx+0x8],0x1a
   14000d75f:	mov    rax,rcx
   14000d762:	ret    
   14000d763:	int3   
   14000d764:	int3   
   14000d765:	int3   
   14000d766:	int3   
   14000d767:	int3   
   14000d768:	int3   
   14000d769:	int3   
   14000d76a:	int3   
   14000d76b:	int3   
   14000d76c:	int3   
   14000d76d:	int3   
   14000d76e:	int3   
   14000d76f:	int3   
   14000d770:	mov    QWORD PTR [rcx+0x10],rdx
   14000d774:	mov    QWORD PTR [rcx+0x18],r8
   14000d778:	mov    QWORD PTR [rcx+0x20],r9
   14000d77c:	lea    rax,[rip+0x145a5]        # 0x140021d28
   14000d783:	mov    QWORD PTR [rcx],rax
   14000d786:	xor    eax,eax
   14000d788:	mov    DWORD PTR [rcx+0x28],eax
   14000d78b:	mov    DWORD PTR [rcx+0x2c],eax
   14000d78e:	mov    DWORD PTR [rcx+0x30],eax
   14000d791:	mov    DWORD PTR [rcx+0x34],eax
   14000d794:	mov    DWORD PTR [rcx+0x38],eax
   14000d797:	mov    DWORD PTR [rcx+0x3c],eax
   14000d79a:	mov    DWORD PTR [rcx+0x40],eax
   14000d79d:	mov    DWORD PTR [rcx+0x44],eax
   14000d7a0:	mov    DWORD PTR [rcx+0x48],eax
   14000d7a3:	mov    DWORD PTR [rcx+0x4c],eax
   14000d7a6:	mov    DWORD PTR [rcx+0x50],eax
   14000d7a9:	mov    DWORD PTR [rcx+0x54],eax
   14000d7ac:	mov    DWORD PTR [rcx+0x58],eax
   14000d7af:	mov    DWORD PTR [rcx+0x5c],eax
   14000d7b2:	mov    DWORD PTR [rcx+0x60],eax
   14000d7b5:	mov    DWORD PTR [rcx+0x64],eax
   14000d7b8:	mov    DWORD PTR [rcx+0x68],eax
   14000d7bb:	mov    DWORD PTR [rcx+0x6c],eax
   14000d7be:	mov    DWORD PTR [rcx+0x70],eax
   14000d7c1:	mov    DWORD PTR [rcx+0x74],eax
   14000d7c4:	mov    DWORD PTR [rcx+0x8],0x25
   14000d7cb:	mov    rax,rcx
   14000d7ce:	ret    
   14000d7cf:	int3   
   14000d7d0:	xor    r8d,r8d
   14000d7d3:	lea    rax,[rip+0x1459e]        # 0x140021d78
   14000d7da:	mov    QWORD PTR [rcx],rax
   14000d7dd:	mov    DWORD PTR [rcx+0x8],r8d
   14000d7e1:	mov    rax,QWORD PTR [rdx]
   14000d7e4:	mov    QWORD PTR [rcx+0x10],rax
   14000d7e8:	mov    eax,DWORD PTR [rdx+0x8]
   14000d7eb:	mov    DWORD PTR [rcx+0x18],eax
   14000d7ee:	mov    eax,DWORD PTR [rdx+0xc]
   14000d7f1:	mov    DWORD PTR [rcx+0x1c],eax
   14000d7f4:	mov    DWORD PTR [rcx+0x20],r8d
   14000d7f8:	mov    DWORD PTR [rcx+0x24],r8d
   14000d7fc:	mov    DWORD PTR [rcx+0x28],r8d
   14000d800:	mov    DWORD PTR [rcx+0x2c],r8d
   14000d804:	mov    DWORD PTR [rcx+0x30],r8d
   14000d808:	mov    DWORD PTR [rcx+0x34],r8d
   14000d80c:	mov    DWORD PTR [rcx+0x38],r8d
   14000d810:	mov    DWORD PTR [rcx+0x3c],r8d
   14000d814:	mov    DWORD PTR [rcx+0x40],r8d
   14000d818:	mov    DWORD PTR [rcx+0x44],r8d
   14000d81c:	mov    DWORD PTR [rcx+0x48],r8d
   14000d820:	mov    DWORD PTR [rcx+0x4c],r8d
   14000d824:	mov    rax,rcx
   14000d827:	mov    DWORD PTR [rcx+0x8],0xd
   14000d82e:	ret    
   14000d82f:	int3   
   14000d830:	xor    r8d,r8d
   14000d833:	lea    rax,[rip+0x1458e]        # 0x140021dc8
   14000d83a:	mov    QWORD PTR [rcx],rax
   14000d83d:	mov    DWORD PTR [rcx+0x8],r8d
   14000d841:	mov    rax,QWORD PTR [rdx]
   14000d844:	mov    QWORD PTR [rcx+0x10],rax
   14000d848:	mov    eax,DWORD PTR [rdx+0x8]
   14000d84b:	mov    DWORD PTR [rcx+0x18],eax
   14000d84e:	mov    eax,DWORD PTR [rdx+0xc]
   14000d851:	mov    DWORD PTR [rcx+0x1c],eax
   14000d854:	mov    DWORD PTR [rcx+0x20],r8d
   14000d858:	mov    DWORD PTR [rcx+0x24],r8d
   14000d85c:	mov    DWORD PTR [rcx+0x28],r8d
   14000d860:	mov    DWORD PTR [rcx+0x2c],r8d
   14000d864:	mov    DWORD PTR [rcx+0x30],r8d
   14000d868:	mov    DWORD PTR [rcx+0x34],r8d
   14000d86c:	mov    DWORD PTR [rcx+0x38],r8d
   14000d870:	mov    DWORD PTR [rcx+0x3c],r8d
   14000d874:	mov    DWORD PTR [rcx+0x40],r8d
   14000d878:	mov    DWORD PTR [rcx+0x44],r8d
   14000d87c:	mov    DWORD PTR [rcx+0x48],r8d
   14000d880:	mov    DWORD PTR [rcx+0x4c],r8d
   14000d884:	mov    rax,rcx
   14000d887:	mov    DWORD PTR [rcx+0x8],0x6
   14000d88e:	ret    
   14000d88f:	int3   
   14000d890:	mov    eax,DWORD PTR [rcx+0x40]
   14000d893:	mov    DWORD PTR [rdx],eax
   14000d895:	mov    eax,DWORD PTR [rcx+0x44]
   14000d898:	mov    DWORD PTR [rdx+0x4],eax
   14000d89b:	mov    eax,DWORD PTR [rcx+0x48]
   14000d89e:	mov    DWORD PTR [rdx+0x8],eax
   14000d8a1:	mov    eax,DWORD PTR [rcx+0x4c]
   14000d8a4:	mov    DWORD PTR [rdx+0xc],eax
   14000d8a7:	mov    rax,rdx
   14000d8aa:	ret    
   14000d8ab:	int3   
   14000d8ac:	int3   
   14000d8ad:	int3   
   14000d8ae:	int3   
   14000d8af:	int3   
   14000d8b0:	mov    QWORD PTR [rcx+0x10],rdx
   14000d8b4:	lea    rax,[rip+0x1455d]        # 0x140021e18
   14000d8bb:	mov    QWORD PTR [rcx],rax
   14000d8be:	xor    eax,eax
   14000d8c0:	mov    DWORD PTR [rcx+0x18],eax
   14000d8c3:	mov    DWORD PTR [rcx+0x1c],eax
   14000d8c6:	mov    DWORD PTR [rcx+0x20],eax
   14000d8c9:	mov    DWORD PTR [rcx+0x24],eax
   14000d8cc:	mov    DWORD PTR [rcx+0x28],eax
   14000d8cf:	mov    DWORD PTR [rcx+0x2c],eax
   14000d8d2:	mov    DWORD PTR [rcx+0x30],eax
   14000d8d5:	mov    DWORD PTR [rcx+0x34],eax
   14000d8d8:	mov    DWORD PTR [rcx+0x8],0x38
   14000d8df:	mov    rax,rcx
   14000d8e2:	ret    
   14000d8e3:	int3   
   14000d8e4:	int3   
   14000d8e5:	int3   
   14000d8e6:	int3   
   14000d8e7:	int3   
   14000d8e8:	int3   
   14000d8e9:	int3   
   14000d8ea:	int3   
   14000d8eb:	int3   
   14000d8ec:	int3   
   14000d8ed:	int3   
   14000d8ee:	int3   
   14000d8ef:	int3   
   14000d8f0:	mov    QWORD PTR [rcx+0x10],rdx
   14000d8f4:	mov    QWORD PTR [rcx+0x18],r8
   14000d8f8:	lea    rax,[rip+0x14569]        # 0x140021e68
   14000d8ff:	mov    QWORD PTR [rcx],rax
   14000d902:	xor    eax,eax
   14000d904:	mov    DWORD PTR [rcx+0x20],eax
   14000d907:	mov    DWORD PTR [rcx+0x24],eax
   14000d90a:	mov    DWORD PTR [rcx+0x28],eax
   14000d90d:	mov    DWORD PTR [rcx+0x2c],eax
   14000d910:	mov    DWORD PTR [rcx+0x30],eax
   14000d913:	mov    DWORD PTR [rcx+0x34],eax
   14000d916:	mov    DWORD PTR [rcx+0x38],eax
   14000d919:	mov    DWORD PTR [rcx+0x3c],eax
   14000d91c:	mov    DWORD PTR [rcx+0x40],eax
   14000d91f:	mov    DWORD PTR [rcx+0x44],eax
   14000d922:	mov    DWORD PTR [rcx+0x48],eax
   14000d925:	mov    DWORD PTR [rcx+0x4c],eax
   14000d928:	mov    DWORD PTR [rcx+0x8],0x4d
   14000d92f:	mov    rax,rcx
   14000d932:	ret    
   14000d933:	int3   
   14000d934:	int3   
   14000d935:	int3   
   14000d936:	int3   
   14000d937:	int3   
   14000d938:	int3   
   14000d939:	int3   
   14000d93a:	int3   
   14000d93b:	int3   
   14000d93c:	int3   
   14000d93d:	int3   
   14000d93e:	int3   
   14000d93f:	int3   
   14000d940:	mov    QWORD PTR [rcx+0x10],rdx
   14000d944:	mov    QWORD PTR [rcx+0x18],r8
   14000d948:	mov    QWORD PTR [rcx+0x20],r9
   14000d94c:	lea    rax,[rip+0x14565]        # 0x140021eb8
   14000d953:	mov    QWORD PTR [rcx],rax
   14000d956:	xor    eax,eax
   14000d958:	mov    DWORD PTR [rcx+0x28],eax
   14000d95b:	mov    DWORD PTR [rcx+0x2c],eax
   14000d95e:	mov    DWORD PTR [rcx+0x30],eax
   14000d961:	mov    DWORD PTR [rcx+0x34],eax
   14000d964:	mov    DWORD PTR [rcx+0x38],eax
   14000d967:	mov    DWORD PTR [rcx+0x3c],eax
   14000d96a:	mov    DWORD PTR [rcx+0x40],eax
   14000d96d:	mov    DWORD PTR [rcx+0x44],eax
   14000d970:	mov    DWORD PTR [rcx+0x8],0x8
   14000d977:	mov    rax,rcx
   14000d97a:	ret    
   14000d97b:	int3   
   14000d97c:	int3   
   14000d97d:	int3   
   14000d97e:	int3   
   14000d97f:	int3   
   14000d980:	mov    eax,DWORD PTR [rcx+0x38]
   14000d983:	mov    DWORD PTR [rdx],eax
   14000d985:	mov    eax,DWORD PTR [rcx+0x3c]
   14000d988:	mov    DWORD PTR [rdx+0x4],eax
   14000d98b:	mov    eax,DWORD PTR [rcx+0x40]
   14000d98e:	mov    DWORD PTR [rdx+0x8],eax
   14000d991:	mov    eax,DWORD PTR [rcx+0x44]
   14000d994:	mov    DWORD PTR [rdx+0xc],eax
   14000d997:	mov    rax,rdx
   14000d99a:	ret    
   14000d99b:	int3   
   14000d99c:	int3   
   14000d99d:	int3   
   14000d99e:	int3   
   14000d99f:	int3   
   14000d9a0:	mov    QWORD PTR [rcx+0x10],rdx
   14000d9a4:	mov    QWORD PTR [rcx+0x18],r8
   14000d9a8:	lea    rax,[rip+0x14559]        # 0x140021f08
   14000d9af:	mov    QWORD PTR [rcx],rax
   14000d9b2:	xor    eax,eax
   14000d9b4:	mov    DWORD PTR [rcx+0x20],eax
   14000d9b7:	mov    DWORD PTR [rcx+0x24],eax
   14000d9ba:	mov    DWORD PTR [rcx+0x28],eax
   14000d9bd:	mov    DWORD PTR [rcx+0x2c],eax
   14000d9c0:	mov    DWORD PTR [rcx+0x30],eax
   14000d9c3:	mov    DWORD PTR [rcx+0x34],eax
   14000d9c6:	mov    DWORD PTR [rcx+0x38],eax
   14000d9c9:	mov    DWORD PTR [rcx+0x3c],eax
   14000d9cc:	mov    DWORD PTR [rcx+0x40],eax
   14000d9cf:	mov    DWORD PTR [rcx+0x44],eax
   14000d9d2:	mov    DWORD PTR [rcx+0x48],eax
   14000d9d5:	mov    DWORD PTR [rcx+0x4c],eax
   14000d9d8:	mov    DWORD PTR [rcx+0x8],0x3f
   14000d9df:	mov    rax,rcx
   14000d9e2:	ret    
   14000d9e3:	int3   
   14000d9e4:	int3   
   14000d9e5:	int3   
   14000d9e6:	int3   
   14000d9e7:	int3   
   14000d9e8:	int3   
   14000d9e9:	int3   
   14000d9ea:	int3   
   14000d9eb:	int3   
   14000d9ec:	int3   
   14000d9ed:	int3   
   14000d9ee:	int3   
   14000d9ef:	int3   
   14000d9f0:	mov    r8,QWORD PTR [rcx+0x18]
   14000d9f4:	mov    eax,DWORD PTR [r8+0x38]
   14000d9f8:	mov    DWORD PTR [rdx],eax
   14000d9fa:	mov    eax,DWORD PTR [r8+0x3c]
   14000d9fe:	mov    DWORD PTR [rdx+0x4],eax
   14000da01:	mov    eax,DWORD PTR [r8+0x40]
   14000da05:	mov    DWORD PTR [rdx+0x8],eax
   14000da08:	mov    eax,DWORD PTR [r8+0x44]
   14000da0c:	mov    DWORD PTR [rdx+0xc],eax
   14000da0f:	mov    rax,rdx
   14000da12:	ret    
   14000da13:	int3   
   14000da14:	int3   
   14000da15:	int3   
   14000da16:	int3   
   14000da17:	int3   
   14000da18:	int3   
   14000da19:	int3   
   14000da1a:	int3   
   14000da1b:	int3   
   14000da1c:	int3   
   14000da1d:	int3   
   14000da1e:	int3   
   14000da1f:	int3   
   14000da20:	mov    QWORD PTR [rcx+0x10],rdx
   14000da24:	mov    QWORD PTR [rcx+0x18],r8
   14000da28:	lea    rax,[rip+0x14529]        # 0x140021f58
   14000da2f:	mov    QWORD PTR [rcx],rax
   14000da32:	xor    eax,eax
   14000da34:	mov    DWORD PTR [rcx+0x20],eax
   14000da37:	mov    DWORD PTR [rcx+0x24],eax
   14000da3a:	mov    DWORD PTR [rcx+0x28],eax
   14000da3d:	mov    DWORD PTR [rcx+0x2c],eax
   14000da40:	mov    DWORD PTR [rcx+0x30],eax
   14000da43:	mov    DWORD PTR [rcx+0x34],eax
   14000da46:	mov    DWORD PTR [rcx+0x38],eax
   14000da49:	mov    DWORD PTR [rcx+0x3c],eax
   14000da4c:	mov    DWORD PTR [rcx+0x8],0x9
   14000da53:	mov    rax,rcx
   14000da56:	ret    
   14000da57:	int3   
   14000da58:	int3   
   14000da59:	int3   
   14000da5a:	int3   
   14000da5b:	int3   
   14000da5c:	int3   
   14000da5d:	int3   
   14000da5e:	int3   
   14000da5f:	int3   
   14000da60:	rex push rbx
   14000da62:	sub    rsp,0x30
   14000da66:	cmp    QWORD PTR [rcx+0x18],0x0
   14000da6b:	mov    rbx,rdx
   14000da6e:	je     0x14000da84
   14000da70:	mov    rcx,QWORD PTR [rcx+0x18]
   14000da74:	lea    rdx,[rsp+0x20]
   14000da79:	mov    rax,QWORD PTR [rcx]
   14000da7c:	call   QWORD PTR [rax+0x38]
   14000da7f:	mov    rcx,rax
   14000da82:	jmp    0x14000da88
   14000da84:	add    rcx,0x30
   14000da88:	mov    eax,DWORD PTR [rcx]
   14000da8a:	mov    DWORD PTR [rbx],eax
   14000da8c:	mov    eax,DWORD PTR [rcx+0x4]
   14000da8f:	mov    DWORD PTR [rbx+0x4],eax
   14000da92:	mov    eax,DWORD PTR [rcx+0x8]
   14000da95:	mov    DWORD PTR [rbx+0x8],eax
   14000da98:	mov    eax,DWORD PTR [rcx+0xc]
   14000da9b:	mov    DWORD PTR [rbx+0xc],eax
   14000da9e:	mov    rax,rbx
   14000daa1:	add    rsp,0x30
   14000daa5:	pop    rbx
   14000daa6:	ret    
   14000daa7:	int3   
   14000daa8:	int3   
   14000daa9:	int3   
   14000daaa:	int3   
   14000daab:	int3   
   14000daac:	int3   
   14000daad:	int3   
   14000daae:	int3   
   14000daaf:	int3   
   14000dab0:	mov    QWORD PTR [rcx+0x10],rdx
   14000dab4:	lea    rax,[rip+0x1453d]        # 0x140021ff8
   14000dabb:	mov    QWORD PTR [rcx],rax
   14000dabe:	xor    eax,eax
   14000dac0:	mov    DWORD PTR [rcx+0x18],eax
   14000dac3:	mov    DWORD PTR [rcx+0x1c],eax
   14000dac6:	mov    DWORD PTR [rcx+0x20],eax
   14000dac9:	mov    DWORD PTR [rcx+0x24],eax
   14000dacc:	mov    DWORD PTR [rcx+0x28],eax
   14000dacf:	mov    DWORD PTR [rcx+0x2c],eax
   14000dad2:	mov    DWORD PTR [rcx+0x30],eax
   14000dad5:	mov    DWORD PTR [rcx+0x34],eax
   14000dad8:	mov    DWORD PTR [rcx+0x8],0xf
   14000dadf:	mov    rax,rcx
   14000dae2:	ret    
   14000dae3:	int3   
   14000dae4:	int3   
   14000dae5:	int3   
   14000dae6:	int3   
   14000dae7:	int3   
   14000dae8:	int3   
   14000dae9:	int3   
   14000daea:	int3   
   14000daeb:	int3   
   14000daec:	int3   
   14000daed:	int3   
   14000daee:	int3   
   14000daef:	int3   
   14000daf0:	rex push rbx
   14000daf2:	sub    rsp,0x30
   14000daf6:	cmp    QWORD PTR [rcx+0x10],0x0
   14000dafb:	mov    rbx,rdx
   14000dafe:	je     0x14000db14
   14000db00:	mov    rcx,QWORD PTR [rcx+0x10]
   14000db04:	lea    rdx,[rsp+0x20]
   14000db09:	mov    rax,QWORD PTR [rcx]
   14000db0c:	call   QWORD PTR [rax+0x38]
   14000db0f:	mov    rcx,rax
   14000db12:	jmp    0x14000db18
   14000db14:	add    rcx,0x28
   14000db18:	mov    eax,DWORD PTR [rcx]
   14000db1a:	mov    DWORD PTR [rbx],eax
   14000db1c:	mov    eax,DWORD PTR [rcx+0x4]
   14000db1f:	mov    DWORD PTR [rbx+0x4],eax
   14000db22:	mov    eax,DWORD PTR [rcx+0x8]
   14000db25:	mov    DWORD PTR [rbx+0x8],eax
   14000db28:	mov    eax,DWORD PTR [rcx+0xc]
   14000db2b:	mov    DWORD PTR [rbx+0xc],eax
   14000db2e:	mov    rax,rbx
   14000db31:	add    rsp,0x30
   14000db35:	pop    rbx
   14000db36:	ret    
   14000db37:	int3   
   14000db38:	int3   
   14000db39:	int3   
   14000db3a:	int3   
   14000db3b:	int3   
   14000db3c:	int3   
   14000db3d:	int3   
   14000db3e:	int3   
   14000db3f:	int3   
   14000db40:	xor    r9d,r9d
   14000db43:	lea    rax,[rip+0x144fe]        # 0x140022048
   14000db4a:	mov    QWORD PTR [rcx],rax
   14000db4d:	mov    DWORD PTR [rcx+0x8],r9d
   14000db51:	mov    rax,QWORD PTR [rdx]
   14000db54:	mov    QWORD PTR [rcx+0x10],rax
   14000db58:	mov    eax,DWORD PTR [rdx+0x8]
   14000db5b:	mov    DWORD PTR [rcx+0x18],eax
   14000db5e:	mov    eax,DWORD PTR [rdx+0xc]
   14000db61:	mov    DWORD PTR [rcx+0x1c],eax
   14000db64:	mov    QWORD PTR [rcx+0x20],r8
   14000db68:	mov    DWORD PTR [rcx+0x28],r9d
   14000db6c:	mov    DWORD PTR [rcx+0x2c],r9d
   14000db70:	mov    DWORD PTR [rcx+0x30],r9d
   14000db74:	mov    DWORD PTR [rcx+0x34],r9d
   14000db78:	mov    DWORD PTR [rcx+0x38],r9d
   14000db7c:	mov    DWORD PTR [rcx+0x3c],r9d
   14000db80:	mov    DWORD PTR [rcx+0x40],r9d
   14000db84:	mov    DWORD PTR [rcx+0x44],r9d
   14000db88:	mov    rax,rcx
   14000db8b:	mov    DWORD PTR [rcx+0x8],0x24
   14000db92:	ret    
   14000db93:	int3   
   14000db94:	int3   
   14000db95:	int3   
   14000db96:	int3   
   14000db97:	int3   
   14000db98:	int3   
   14000db99:	int3   
   14000db9a:	int3   
   14000db9b:	int3   
   14000db9c:	int3   
   14000db9d:	int3   
   14000db9e:	int3   
   14000db9f:	int3   
   14000dba0:	mov    QWORD PTR [rcx+0x10],rdx
   14000dba4:	lea    rax,[rip+0x144ed]        # 0x140022098
   14000dbab:	mov    QWORD PTR [rcx],rax
   14000dbae:	xor    eax,eax
   14000dbb0:	mov    DWORD PTR [rcx+0x18],eax
   14000dbb3:	mov    DWORD PTR [rcx+0x1c],eax
   14000dbb6:	mov    DWORD PTR [rcx+0x20],eax
   14000dbb9:	mov    DWORD PTR [rcx+0x24],eax
   14000dbbc:	mov    DWORD PTR [rcx+0x28],eax
   14000dbbf:	mov    DWORD PTR [rcx+0x2c],eax
   14000dbc2:	mov    DWORD PTR [rcx+0x30],eax
   14000dbc5:	mov    DWORD PTR [rcx+0x34],eax
   14000dbc8:	mov    DWORD PTR [rcx+0x8],0x41
   14000dbcf:	mov    rax,rcx
   14000dbd2:	ret    
   14000dbd3:	int3   
   14000dbd4:	int3   
   14000dbd5:	int3   
   14000dbd6:	int3   
   14000dbd7:	int3   
   14000dbd8:	int3   
   14000dbd9:	int3   
   14000dbda:	int3   
   14000dbdb:	int3   
   14000dbdc:	int3   
   14000dbdd:	int3   
   14000dbde:	int3   
   14000dbdf:	int3   
   14000dbe0:	xor    r9d,r9d
   14000dbe3:	lea    rax,[rip+0x144fe]        # 0x1400220e8
   14000dbea:	mov    QWORD PTR [rcx],rax
   14000dbed:	mov    DWORD PTR [rcx+0x8],r9d
   14000dbf1:	mov    rax,QWORD PTR [rdx]
   14000dbf4:	mov    QWORD PTR [rcx+0x10],rax
   14000dbf8:	mov    eax,DWORD PTR [rdx+0x8]
   14000dbfb:	mov    DWORD PTR [rcx+0x18],eax
   14000dbfe:	mov    eax,DWORD PTR [rdx+0xc]
   14000dc01:	mov    DWORD PTR [rcx+0x1c],eax
   14000dc04:	mov    QWORD PTR [rcx+0x20],r8
   14000dc08:	mov    DWORD PTR [rcx+0x28],r9d
   14000dc0c:	mov    DWORD PTR [rcx+0x2c],r9d
   14000dc10:	mov    DWORD PTR [rcx+0x30],r9d
   14000dc14:	mov    DWORD PTR [rcx+0x34],r9d
   14000dc18:	mov    DWORD PTR [rcx+0x38],r9d
   14000dc1c:	mov    DWORD PTR [rcx+0x3c],r9d
   14000dc20:	mov    DWORD PTR [rcx+0x40],r9d
   14000dc24:	mov    DWORD PTR [rcx+0x44],r9d
   14000dc28:	mov    DWORD PTR [rcx+0x48],r9d
   14000dc2c:	mov    DWORD PTR [rcx+0x4c],r9d
   14000dc30:	mov    DWORD PTR [rcx+0x50],r9d
   14000dc34:	mov    DWORD PTR [rcx+0x54],r9d
   14000dc38:	mov    DWORD PTR [rcx+0x58],r9d
   14000dc3c:	mov    DWORD PTR [rcx+0x5c],r9d
   14000dc40:	mov    DWORD PTR [rcx+0x60],r9d
   14000dc44:	mov    DWORD PTR [rcx+0x64],r9d
   14000dc48:	mov    DWORD PTR [rcx+0x8],0xb
   14000dc4f:	mov    rax,rcx
   14000dc52:	ret    
   14000dc53:	int3   
   14000dc54:	int3   
   14000dc55:	int3   
   14000dc56:	int3   
   14000dc57:	int3   
   14000dc58:	int3   
   14000dc59:	int3   
   14000dc5a:	int3   
   14000dc5b:	int3   
   14000dc5c:	int3   
   14000dc5d:	int3   
   14000dc5e:	int3   
   14000dc5f:	int3   
   14000dc60:	mov    eax,DWORD PTR [rcx+0x28]
   14000dc63:	mov    DWORD PTR [rdx],eax
   14000dc65:	mov    eax,DWORD PTR [rcx+0x2c]
   14000dc68:	mov    DWORD PTR [rdx+0x4],eax
   14000dc6b:	mov    eax,DWORD PTR [rcx+0x30]
   14000dc6e:	mov    DWORD PTR [rdx+0x8],eax
   14000dc71:	mov    eax,DWORD PTR [rcx+0x34]
   14000dc74:	mov    DWORD PTR [rdx+0xc],eax
   14000dc77:	mov    rax,rdx
   14000dc7a:	ret    
   14000dc7b:	int3   
   14000dc7c:	int3   
   14000dc7d:	int3   
   14000dc7e:	int3   
   14000dc7f:	int3   
   14000dc80:	rex push rbx
   14000dc82:	sub    rsp,0x20
   14000dc86:	mov    rcx,QWORD PTR [rcx+0x20]
   14000dc8a:	mov    rbx,rdx
   14000dc8d:	mov    rax,QWORD PTR [rcx]
   14000dc90:	call   QWORD PTR [rax+0x38]
   14000dc93:	mov    rax,rbx
   14000dc96:	add    rsp,0x20
   14000dc9a:	pop    rbx
   14000dc9b:	ret    
   14000dc9c:	int3   
   14000dc9d:	int3   
   14000dc9e:	int3   
   14000dc9f:	int3   
   14000dca0:	rex push rbx
   14000dca2:	sub    rsp,0x20
   14000dca6:	mov    rax,QWORD PTR [rcx+0x20]
   14000dcaa:	mov    rbx,rdx
   14000dcad:	test   rax,rax
   14000dcb0:	je     0x14000dcd6
   14000dcb2:	mov    rcx,QWORD PTR [rax+0x10]
   14000dcb6:	mov    eax,DWORD PTR [rcx+0x28]
   14000dcb9:	mov    DWORD PTR [rdx],eax
   14000dcbb:	mov    eax,DWORD PTR [rcx+0x2c]
   14000dcbe:	mov    DWORD PTR [rdx+0x4],eax
   14000dcc1:	mov    eax,DWORD PTR [rcx+0x30]
   14000dcc4:	mov    DWORD PTR [rdx+0x8],eax
   14000dcc7:	mov    eax,DWORD PTR [rcx+0x34]
   14000dcca:	mov    DWORD PTR [rdx+0xc],eax
   14000dccd:	mov    rax,rdx
   14000dcd0:	add    rsp,0x20
   14000dcd4:	pop    rbx
   14000dcd5:	ret    
   14000dcd6:	mov    rax,QWORD PTR [rcx+0x18]
   14000dcda:	test   rax,rax
   14000dcdd:	je     0x14000dd03
   14000dcdf:	mov    rcx,QWORD PTR [rax+0x20]
   14000dce3:	mov    eax,DWORD PTR [rcx+0x28]
   14000dce6:	mov    DWORD PTR [rdx],eax
   14000dce8:	mov    eax,DWORD PTR [rcx+0x2c]
   14000dceb:	mov    DWORD PTR [rdx+0x4],eax
   14000dcee:	mov    eax,DWORD PTR [rcx+0x30]
   14000dcf1:	mov    DWORD PTR [rdx+0x8],eax
   14000dcf4:	mov    eax,DWORD PTR [rcx+0x34]
   14000dcf7:	mov    DWORD PTR [rdx+0xc],eax
   14000dcfa:	mov    rax,rbx
   14000dcfd:	add    rsp,0x20
   14000dd01:	pop    rbx
   14000dd02:	ret    
   14000dd03:	mov    rcx,QWORD PTR [rcx+0x10]
   14000dd07:	mov    rax,QWORD PTR [rcx]
   14000dd0a:	call   QWORD PTR [rax+0x38]
   14000dd0d:	mov    rax,rbx
   14000dd10:	add    rsp,0x20
   14000dd14:	pop    rbx
   14000dd15:	ret    
   14000dd16:	int3   
   14000dd17:	int3   
   14000dd18:	int3   
   14000dd19:	int3   
   14000dd1a:	int3   
   14000dd1b:	int3   
   14000dd1c:	int3   
   14000dd1d:	int3   
   14000dd1e:	int3   
   14000dd1f:	int3   
   14000dd20:	xor    r10d,r10d
   14000dd23:	lea    rax,[rip+0x144ae]        # 0x1400221d8
   14000dd2a:	mov    QWORD PTR [rcx],rax
   14000dd2d:	mov    DWORD PTR [rcx+0x8],r10d
   14000dd31:	mov    rax,QWORD PTR [rdx]
   14000dd34:	mov    QWORD PTR [rcx+0x10],rax
   14000dd38:	mov    eax,DWORD PTR [rdx+0x8]
   14000dd3b:	mov    DWORD PTR [rcx+0x18],eax
   14000dd3e:	mov    eax,DWORD PTR [rdx+0xc]
   14000dd41:	mov    DWORD PTR [rcx+0x1c],eax
   14000dd44:	mov    QWORD PTR [rcx+0x20],r8
   14000dd48:	mov    QWORD PTR [rcx+0x28],r9
   14000dd4c:	mov    DWORD PTR [rcx+0x30],r10d
   14000dd50:	mov    DWORD PTR [rcx+0x34],r10d
   14000dd54:	mov    DWORD PTR [rcx+0x38],r10d
   14000dd58:	mov    DWORD PTR [rcx+0x3c],r10d
   14000dd5c:	mov    DWORD PTR [rcx+0x40],r10d
   14000dd60:	mov    DWORD PTR [rcx+0x44],r10d
   14000dd64:	mov    DWORD PTR [rcx+0x48],r10d
   14000dd68:	mov    DWORD PTR [rcx+0x4c],r10d
   14000dd6c:	mov    DWORD PTR [rcx+0x50],r10d
   14000dd70:	mov    DWORD PTR [rcx+0x54],r10d
   14000dd74:	mov    DWORD PTR [rcx+0x58],r10d
   14000dd78:	mov    DWORD PTR [rcx+0x5c],r10d
   14000dd7c:	mov    DWORD PTR [rcx+0x60],r10d
   14000dd80:	mov    DWORD PTR [rcx+0x64],r10d
   14000dd84:	mov    DWORD PTR [rcx+0x68],r10d
   14000dd88:	mov    DWORD PTR [rcx+0x6c],r10d
   14000dd8c:	mov    DWORD PTR [rcx+0x70],r10d
   14000dd90:	mov    DWORD PTR [rcx+0x74],r10d
   14000dd94:	mov    DWORD PTR [rcx+0x78],r10d
   14000dd98:	mov    DWORD PTR [rcx+0x7c],r10d
   14000dd9c:	mov    DWORD PTR [rcx+0x80],r10d
   14000dda3:	mov    DWORD PTR [rcx+0x84],r10d
   14000ddaa:	mov    DWORD PTR [rcx+0x88],r10d
   14000ddb1:	mov    DWORD PTR [rcx+0x8c],r10d
   14000ddb8:	mov    DWORD PTR [rcx+0x8],0x1f
   14000ddbf:	mov    rax,rcx
   14000ddc2:	ret    
   14000ddc3:	int3   
   14000ddc4:	int3   
   14000ddc5:	int3   
   14000ddc6:	int3   
   14000ddc7:	int3   
   14000ddc8:	int3   
   14000ddc9:	int3   
   14000ddca:	int3   
   14000ddcb:	int3   
   14000ddcc:	int3   
   14000ddcd:	int3   
   14000ddce:	int3   
   14000ddcf:	int3   
   14000ddd0:	mov    eax,DWORD PTR [rcx+0x80]
   14000ddd6:	mov    DWORD PTR [rdx],eax
   14000ddd8:	mov    eax,DWORD PTR [rcx+0x84]
   14000ddde:	mov    DWORD PTR [rdx+0x4],eax
   14000dde1:	mov    eax,DWORD PTR [rcx+0x88]
   14000dde7:	mov    DWORD PTR [rdx+0x8],eax
   14000ddea:	mov    eax,DWORD PTR [rcx+0x8c]
   14000ddf0:	mov    DWORD PTR [rdx+0xc],eax
   14000ddf3:	mov    rax,rdx
   14000ddf6:	ret    
   14000ddf7:	int3   
   14000ddf8:	int3   
   14000ddf9:	int3   
   14000ddfa:	int3   
   14000ddfb:	int3   
   14000ddfc:	int3   
   14000ddfd:	int3   
   14000ddfe:	int3   
   14000ddff:	int3   
   14000de00:	xor    r10d,r10d
   14000de03:	lea    rax,[rip+0x143ce]        # 0x1400221d8
   14000de0a:	mov    QWORD PTR [rcx],rax
   14000de0d:	mov    DWORD PTR [rcx+0x8],r10d
   14000de11:	mov    rax,QWORD PTR [rdx]
   14000de14:	mov    QWORD PTR [rcx+0x10],rax
   14000de18:	mov    eax,DWORD PTR [rdx+0x8]
   14000de1b:	mov    DWORD PTR [rcx+0x18],eax
   14000de1e:	mov    eax,DWORD PTR [rdx+0xc]
   14000de21:	mov    DWORD PTR [rcx+0x1c],eax
   14000de24:	mov    QWORD PTR [rcx+0x20],r8
   14000de28:	mov    QWORD PTR [rcx+0x28],r9
   14000de2c:	mov    DWORD PTR [rcx+0x30],r10d
   14000de30:	mov    DWORD PTR [rcx+0x34],r10d
   14000de34:	mov    DWORD PTR [rcx+0x38],r10d
   14000de38:	mov    DWORD PTR [rcx+0x3c],r10d
   14000de3c:	mov    DWORD PTR [rcx+0x40],r10d
   14000de40:	mov    DWORD PTR [rcx+0x44],r10d
   14000de44:	mov    DWORD PTR [rcx+0x48],r10d
   14000de48:	mov    DWORD PTR [rcx+0x4c],r10d
   14000de4c:	mov    DWORD PTR [rcx+0x50],r10d
   14000de50:	mov    DWORD PTR [rcx+0x54],r10d
   14000de54:	mov    DWORD PTR [rcx+0x58],r10d
   14000de58:	mov    DWORD PTR [rcx+0x5c],r10d
   14000de5c:	mov    DWORD PTR [rcx+0x60],r10d
   14000de60:	mov    DWORD PTR [rcx+0x64],r10d
   14000de64:	mov    DWORD PTR [rcx+0x68],r10d
   14000de68:	mov    DWORD PTR [rcx+0x6c],r10d
   14000de6c:	mov    DWORD PTR [rcx+0x70],r10d
   14000de70:	mov    DWORD PTR [rcx+0x74],r10d
   14000de74:	mov    DWORD PTR [rcx+0x78],r10d
   14000de78:	mov    DWORD PTR [rcx+0x7c],r10d
   14000de7c:	lea    rax,[rip+0x143a5]        # 0x140022228
   14000de83:	mov    DWORD PTR [rcx+0x80],r10d
   14000de8a:	mov    DWORD PTR [rcx+0x84],r10d
   14000de91:	mov    DWORD PTR [rcx+0x88],r10d
   14000de98:	mov    DWORD PTR [rcx+0x8c],r10d
   14000de9f:	mov    QWORD PTR [rcx],rax
   14000dea2:	mov    rax,rcx
   14000dea5:	mov    DWORD PTR [rcx+0x8],0x1e
   14000deac:	ret    
   14000dead:	int3   
   14000deae:	int3   
   14000deaf:	int3   
   14000deb0:	xor    r8d,r8d
   14000deb3:	lea    rax,[rip+0x143be]        # 0x140022278
   14000deba:	mov    QWORD PTR [rcx],rax
   14000debd:	mov    DWORD PTR [rcx+0x8],r8d
   14000dec1:	mov    rax,QWORD PTR [rdx]
   14000dec4:	mov    QWORD PTR [rcx+0x10],rax
   14000dec8:	mov    eax,DWORD PTR [rdx+0x8]
   14000decb:	mov    DWORD PTR [rcx+0x18],eax
   14000dece:	mov    eax,DWORD PTR [rdx+0xc]
   14000ded1:	mov    DWORD PTR [rcx+0x1c],eax
   14000ded4:	mov    QWORD PTR [rcx+0x20],rcx
   14000ded8:	mov    DWORD PTR [rcx+0x28],r8d
   14000dedc:	mov    DWORD PTR [rcx+0x2c],r8d
   14000dee0:	mov    DWORD PTR [rcx+0x30],r8d
   14000dee4:	mov    DWORD PTR [rcx+0x34],r8d
   14000dee8:	mov    DWORD PTR [rcx+0x38],r8d
   14000deec:	mov    DWORD PTR [rcx+0x3c],r8d
   14000def0:	mov    DWORD PTR [rcx+0x40],r8d
   14000def4:	mov    DWORD PTR [rcx+0x44],r8d
   14000def8:	mov    rax,rcx
   14000defb:	mov    DWORD PTR [rcx+0x8],0x1c
   14000df02:	ret    
   14000df03:	int3   
   14000df04:	int3   
   14000df05:	int3   
   14000df06:	int3   
   14000df07:	int3   
   14000df08:	int3   
   14000df09:	int3   
   14000df0a:	int3   
   14000df0b:	int3   
   14000df0c:	int3   
   14000df0d:	int3   
   14000df0e:	int3   
   14000df0f:	int3   
   14000df10:	xor    r9d,r9d
   14000df13:	lea    rax,[rip+0x1435e]        # 0x140022278
   14000df1a:	mov    QWORD PTR [rcx],rax
   14000df1d:	mov    DWORD PTR [rcx+0x8],r9d
   14000df21:	mov    rax,QWORD PTR [r8]
   14000df24:	mov    QWORD PTR [rcx+0x10],rax
   14000df28:	mov    eax,DWORD PTR [r8+0x8]
   14000df2c:	mov    DWORD PTR [rcx+0x18],eax
   14000df2f:	mov    eax,DWORD PTR [r8+0xc]
   14000df33:	mov    DWORD PTR [rcx+0x1c],eax
   14000df36:	mov    DWORD PTR [rcx+0x28],r9d
   14000df3a:	mov    DWORD PTR [rcx+0x2c],r9d
   14000df3e:	mov    DWORD PTR [rcx+0x30],r9d
   14000df42:	mov    DWORD PTR [rcx+0x34],r9d
   14000df46:	mov    DWORD PTR [rcx+0x38],r9d
   14000df4a:	mov    DWORD PTR [rcx+0x3c],r9d
   14000df4e:	mov    DWORD PTR [rcx+0x40],r9d
   14000df52:	mov    DWORD PTR [rcx+0x44],r9d
   14000df56:	mov    DWORD PTR [rcx+0x8],0x1c
   14000df5d:	mov    rax,QWORD PTR [rdx+0x20]
   14000df61:	mov    QWORD PTR [rcx+0x20],rax
   14000df65:	mov    QWORD PTR [rdx+0x20],rcx
   14000df69:	mov    rax,rcx
   14000df6c:	ret    
   14000df6d:	int3   
   14000df6e:	int3   
   14000df6f:	int3   
   14000df70:	rex push rbx
   14000df72:	sub    rsp,0x30
   14000df76:	cmp    QWORD PTR [rcx+0x20],0x0
   14000df7b:	mov    rbx,rdx
   14000df7e:	je     0x14000df94
   14000df80:	mov    rcx,QWORD PTR [rcx+0x20]
   14000df84:	lea    rdx,[rsp+0x20]
   14000df89:	mov    rax,QWORD PTR [rcx]
   14000df8c:	call   QWORD PTR [rax+0x38]
   14000df8f:	mov    rcx,rax
   14000df92:	jmp    0x14000df98
   14000df94:	add    rcx,0x38
   14000df98:	mov    eax,DWORD PTR [rcx]
   14000df9a:	mov    DWORD PTR [rbx],eax
   14000df9c:	mov    eax,DWORD PTR [rcx+0x4]
   14000df9f:	mov    DWORD PTR [rbx+0x4],eax
   14000dfa2:	mov    eax,DWORD PTR [rcx+0x8]
   14000dfa5:	mov    DWORD PTR [rbx+0x8],eax
   14000dfa8:	mov    eax,DWORD PTR [rcx+0xc]
   14000dfab:	mov    DWORD PTR [rbx+0xc],eax
   14000dfae:	mov    rax,rbx
   14000dfb1:	add    rsp,0x30
   14000dfb5:	pop    rbx
   14000dfb6:	ret    
   14000dfb7:	int3   
   14000dfb8:	int3   
   14000dfb9:	int3   
   14000dfba:	int3   
   14000dfbb:	int3   
   14000dfbc:	int3   
   14000dfbd:	int3   
   14000dfbe:	int3   
   14000dfbf:	int3   
   14000dfc0:	rex push rbx
   14000dfc2:	sub    rsp,0x30
   14000dfc6:	cmp    QWORD PTR [rcx+0x10],0x0
   14000dfcb:	mov    rbx,rdx
   14000dfce:	je     0x14000dfe4
   14000dfd0:	mov    rcx,QWORD PTR [rcx+0x10]
   14000dfd4:	lea    rdx,[rsp+0x20]
   14000dfd9:	mov    rax,QWORD PTR [rcx]
   14000dfdc:	call   QWORD PTR [rax+0x30]
   14000dfdf:	mov    r11,rax
   14000dfe2:	jmp    0x14000dffb
   14000dfe4:	xor    eax,eax
   14000dfe6:	lea    r11,[rsp+0x20]
   14000dfeb:	mov    DWORD PTR [rsp+0x20],eax
   14000dfef:	mov    DWORD PTR [rsp+0x24],eax
   14000dff3:	mov    DWORD PTR [rsp+0x28],eax
   14000dff7:	mov    DWORD PTR [rsp+0x2c],eax
   14000dffb:	mov    eax,DWORD PTR [r11]
   14000dffe:	mov    DWORD PTR [rbx],eax
   14000e000:	mov    eax,DWORD PTR [r11+0x4]
   14000e004:	mov    DWORD PTR [rbx+0x4],eax
   14000e007:	mov    eax,DWORD PTR [r11+0x8]
   14000e00b:	mov    DWORD PTR [rbx+0x8],eax
   14000e00e:	mov    eax,DWORD PTR [r11+0xc]
   14000e012:	mov    DWORD PTR [rbx+0xc],eax
   14000e015:	mov    rax,rbx
   14000e018:	add    rsp,0x30
   14000e01c:	pop    rbx
   14000e01d:	ret    
   14000e01e:	int3   
   14000e01f:	int3   
   14000e020:	rex push rbx
   14000e022:	sub    rsp,0x30
   14000e026:	cmp    QWORD PTR [rcx+0x10],0x0
   14000e02b:	mov    rbx,rdx
   14000e02e:	je     0x14000e044
   14000e030:	mov    rcx,QWORD PTR [rcx+0x10]
   14000e034:	lea    rdx,[rsp+0x20]
   14000e039:	mov    rax,QWORD PTR [rcx]
   14000e03c:	call   QWORD PTR [rax+0x38]
   14000e03f:	mov    r11,rax
   14000e042:	jmp    0x14000e05b
   14000e044:	xor    eax,eax
   14000e046:	lea    r11,[rsp+0x20]
   14000e04b:	mov    DWORD PTR [rsp+0x20],eax
   14000e04f:	mov    DWORD PTR [rsp+0x24],eax
   14000e053:	mov    DWORD PTR [rsp+0x28],eax
   14000e057:	mov    DWORD PTR [rsp+0x2c],eax
   14000e05b:	mov    eax,DWORD PTR [r11]
   14000e05e:	mov    DWORD PTR [rbx],eax
   14000e060:	mov    eax,DWORD PTR [r11+0x4]
   14000e064:	mov    DWORD PTR [rbx+0x4],eax
   14000e067:	mov    eax,DWORD PTR [r11+0x8]
   14000e06b:	mov    DWORD PTR [rbx+0x8],eax
   14000e06e:	mov    eax,DWORD PTR [r11+0xc]
   14000e072:	mov    DWORD PTR [rbx+0xc],eax
   14000e075:	mov    rax,rbx
   14000e078:	add    rsp,0x30
   14000e07c:	pop    rbx
   14000e07d:	ret    
   14000e07e:	int3   
   14000e07f:	int3   
   14000e080:	lea    rax,[rip+0x143d1]        # 0x140022458
   14000e087:	mov    QWORD PTR [rcx],rax
   14000e08a:	xor    eax,eax
   14000e08c:	mov    DWORD PTR [rcx+0x10],eax
   14000e08f:	mov    DWORD PTR [rcx+0x14],eax
   14000e092:	mov    DWORD PTR [rcx+0x18],eax
   14000e095:	mov    DWORD PTR [rcx+0x1c],eax
   14000e098:	mov    DWORD PTR [rcx+0x20],eax
   14000e09b:	mov    DWORD PTR [rcx+0x24],eax
   14000e09e:	mov    DWORD PTR [rcx+0x28],eax
   14000e0a1:	mov    DWORD PTR [rcx+0x2c],eax
   14000e0a4:	mov    DWORD PTR [rcx+0x8],0xe
   14000e0ab:	mov    rax,rcx
   14000e0ae:	ret    
   14000e0af:	int3   
   14000e0b0:	mov    QWORD PTR [rcx+0x10],rcx
   14000e0b4:	xor    r8d,r8d
   14000e0b7:	lea    rax,[rip+0x143ea]        # 0x1400224a8
   14000e0be:	mov    QWORD PTR [rcx],rax
   14000e0c1:	mov    DWORD PTR [rcx+0x8],r8d
   14000e0c5:	mov    rax,QWORD PTR [rdx]
   14000e0c8:	mov    QWORD PTR [rcx+0x18],rax
   14000e0cc:	mov    eax,DWORD PTR [rdx+0x8]
   14000e0cf:	mov    DWORD PTR [rcx+0x20],eax
   14000e0d2:	mov    eax,DWORD PTR [rdx+0xc]
   14000e0d5:	mov    DWORD PTR [rcx+0x24],eax
   14000e0d8:	mov    DWORD PTR [rcx+0x28],r8d
   14000e0dc:	mov    DWORD PTR [rcx+0x2c],r8d
   14000e0e0:	mov    DWORD PTR [rcx+0x30],r8d
   14000e0e4:	mov    DWORD PTR [rcx+0x34],r8d
   14000e0e8:	mov    rax,rcx
   14000e0eb:	mov    DWORD PTR [rcx+0x8],0x5a
   14000e0f2:	ret    
   14000e0f3:	int3   
   14000e0f4:	int3   
   14000e0f5:	int3   
   14000e0f6:	int3   
   14000e0f7:	int3   
   14000e0f8:	int3   
   14000e0f9:	int3   
   14000e0fa:	int3   
   14000e0fb:	int3   
   14000e0fc:	int3   
   14000e0fd:	int3   
   14000e0fe:	int3   
   14000e0ff:	int3   
   14000e100:	xor    r8d,r8d
   14000e103:	lea    rax,[rip+0x143ee]        # 0x1400224f8
   14000e10a:	mov    QWORD PTR [rcx],rax
   14000e10d:	mov    DWORD PTR [rcx+0x8],r8d
   14000e111:	mov    rax,QWORD PTR [rdx]
   14000e114:	mov    QWORD PTR [rcx+0x10],rax
   14000e118:	mov    eax,DWORD PTR [rdx+0x8]
   14000e11b:	mov    DWORD PTR [rcx+0x18],eax
   14000e11e:	mov    eax,DWORD PTR [rdx+0xc]
   14000e121:	mov    DWORD PTR [rcx+0x1c],eax
   14000e124:	mov    QWORD PTR [rcx+0x20],r8
   14000e128:	mov    QWORD PTR [rcx+0x28],r8
   14000e12c:	mov    DWORD PTR [rcx+0x30],r8d
   14000e130:	mov    DWORD PTR [rcx+0x34],r8d
   14000e134:	mov    DWORD PTR [rcx+0x38],r8d
   14000e138:	mov    DWORD PTR [rcx+0x3c],r8d
   14000e13c:	mov    DWORD PTR [rcx+0x40],r8d
   14000e140:	mov    DWORD PTR [rcx+0x44],r8d
   14000e144:	mov    DWORD PTR [rcx+0x48],r8d
   14000e148:	mov    DWORD PTR [rcx+0x4c],r8d
   14000e14c:	mov    DWORD PTR [rcx+0x50],r8d
   14000e150:	mov    DWORD PTR [rcx+0x54],r8d
   14000e154:	mov    DWORD PTR [rcx+0x58],r8d
   14000e158:	mov    DWORD PTR [rcx+0x5c],r8d
   14000e15c:	mov    DWORD PTR [rcx+0x60],r8d
   14000e160:	mov    DWORD PTR [rcx+0x64],r8d
   14000e164:	mov    DWORD PTR [rcx+0x68],r8d
   14000e168:	mov    DWORD PTR [rcx+0x6c],r8d
   14000e16c:	mov    DWORD PTR [rcx+0x70],r8d
   14000e170:	mov    DWORD PTR [rcx+0x74],r8d
   14000e174:	mov    DWORD PTR [rcx+0x78],r8d
   14000e178:	mov    DWORD PTR [rcx+0x7c],r8d
   14000e17c:	mov    DWORD PTR [rcx+0x80],r8d
   14000e183:	mov    DWORD PTR [rcx+0x84],r8d
   14000e18a:	mov    DWORD PTR [rcx+0x88],r8d
   14000e191:	mov    DWORD PTR [rcx+0x8c],r8d
   14000e198:	mov    DWORD PTR [rcx+0x90],r8d
   14000e19f:	mov    DWORD PTR [rcx+0x94],r8d
   14000e1a6:	mov    rax,rcx
   14000e1a9:	mov    DWORD PTR [rcx+0x8],0x50
   14000e1b0:	ret    
   14000e1b1:	int3   
   14000e1b2:	int3   
   14000e1b3:	int3   
   14000e1b4:	int3   
   14000e1b5:	int3   
   14000e1b6:	int3   
   14000e1b7:	int3   
   14000e1b8:	int3   
   14000e1b9:	int3   
   14000e1ba:	int3   
   14000e1bb:	int3   
   14000e1bc:	int3   
   14000e1bd:	int3   
   14000e1be:	int3   
   14000e1bf:	int3   
   14000e1c0:	lea    rax,[rip+0x14331]        # 0x1400224f8
   14000e1c7:	mov    QWORD PTR [rcx],rax
   14000e1ca:	xor    eax,eax
   14000e1cc:	mov    QWORD PTR [rcx+0x10],rax
   14000e1d0:	mov    DWORD PTR [rcx+0x18],eax
   14000e1d3:	mov    DWORD PTR [rcx+0x1c],eax
   14000e1d6:	mov    QWORD PTR [rcx+0x20],rdx
   14000e1da:	mov    QWORD PTR [rcx+0x28],rax
   14000e1de:	mov    DWORD PTR [rcx+0x30],eax
   14000e1e1:	mov    DWORD PTR [rcx+0x34],eax
   14000e1e4:	mov    DWORD PTR [rcx+0x38],eax
   14000e1e7:	mov    DWORD PTR [rcx+0x3c],eax
   14000e1ea:	mov    DWORD PTR [rcx+0x40],eax
   14000e1ed:	mov    DWORD PTR [rcx+0x44],eax
   14000e1f0:	mov    DWORD PTR [rcx+0x48],eax
   14000e1f3:	mov    DWORD PTR [rcx+0x4c],eax
   14000e1f6:	mov    DWORD PTR [rcx+0x50],eax
   14000e1f9:	mov    DWORD PTR [rcx+0x54],eax
   14000e1fc:	mov    DWORD PTR [rcx+0x58],eax
   14000e1ff:	mov    DWORD PTR [rcx+0x5c],eax
   14000e202:	mov    DWORD PTR [rcx+0x60],eax
   14000e205:	mov    DWORD PTR [rcx+0x64],eax
   14000e208:	mov    DWORD PTR [rcx+0x68],eax
   14000e20b:	mov    DWORD PTR [rcx+0x6c],eax
   14000e20e:	mov    DWORD PTR [rcx+0x70],eax
   14000e211:	mov    DWORD PTR [rcx+0x74],eax
   14000e214:	mov    DWORD PTR [rcx+0x78],eax
   14000e217:	mov    DWORD PTR [rcx+0x7c],eax
   14000e21a:	mov    DWORD PTR [rcx+0x80],eax
   14000e220:	mov    DWORD PTR [rcx+0x84],eax
   14000e226:	mov    DWORD PTR [rcx+0x88],eax
   14000e22c:	mov    DWORD PTR [rcx+0x8c],eax
   14000e232:	mov    DWORD PTR [rcx+0x90],eax
   14000e238:	mov    DWORD PTR [rcx+0x94],eax
   14000e23e:	mov    DWORD PTR [rcx+0x8],0x50
   14000e245:	mov    rax,rcx
   14000e248:	ret    
   14000e249:	int3   
   14000e24a:	int3   
   14000e24b:	int3   
   14000e24c:	int3   
   14000e24d:	int3   
   14000e24e:	int3   
   14000e24f:	int3   
   14000e250:	mov    eax,DWORD PTR [rcx+0x88]
   14000e256:	mov    DWORD PTR [rdx],eax
   14000e258:	mov    eax,DWORD PTR [rcx+0x8c]
   14000e25e:	mov    DWORD PTR [rdx+0x4],eax
   14000e261:	mov    eax,DWORD PTR [rcx+0x90]
   14000e267:	mov    DWORD PTR [rdx+0x8],eax
   14000e26a:	mov    eax,DWORD PTR [rcx+0x94]
   14000e270:	mov    DWORD PTR [rdx+0xc],eax
   14000e273:	mov    rax,rdx
   14000e276:	ret    
   14000e277:	int3   
   14000e278:	int3   
   14000e279:	int3   
   14000e27a:	int3   
   14000e27b:	int3   
   14000e27c:	int3   
   14000e27d:	int3   
   14000e27e:	int3   
   14000e27f:	int3   
   14000e280:	rex push rbx
   14000e282:	sub    rsp,0x20
   14000e286:	cmp    QWORD PTR [rcx+0x10],0x0
   14000e28b:	mov    rbx,rdx
   14000e28e:	je     0x14000e2a3
   14000e290:	mov    rcx,QWORD PTR [rcx+0x10]
   14000e294:	mov    rax,QWORD PTR [rcx]
   14000e297:	call   QWORD PTR [rax+0x30]
   14000e29a:	mov    rax,rbx
   14000e29d:	add    rsp,0x20
   14000e2a1:	pop    rbx
   14000e2a2:	ret    
   14000e2a3:	cmp    QWORD PTR [rcx+0x18],0x0
   14000e2a8:	je     0x14000e2bd
   14000e2aa:	mov    rcx,QWORD PTR [rcx+0x18]
   14000e2ae:	mov    rax,QWORD PTR [rcx]
   14000e2b1:	call   QWORD PTR [rax+0x30]
   14000e2b4:	mov    rax,rbx
   14000e2b7:	add    rsp,0x20
   14000e2bb:	pop    rbx
   14000e2bc:	ret    
   14000e2bd:	xor    eax,eax
   14000e2bf:	mov    DWORD PTR [rdx],eax
   14000e2c1:	mov    DWORD PTR [rdx+0x4],eax
   14000e2c4:	mov    DWORD PTR [rdx+0x8],eax
   14000e2c7:	mov    DWORD PTR [rdx+0xc],eax
   14000e2ca:	mov    rax,rbx
   14000e2cd:	add    rsp,0x20
   14000e2d1:	pop    rbx
   14000e2d2:	ret    
   14000e2d3:	int3   
   14000e2d4:	int3   
   14000e2d5:	int3   
   14000e2d6:	int3   
   14000e2d7:	int3   
   14000e2d8:	int3   
   14000e2d9:	int3   
   14000e2da:	int3   
   14000e2db:	int3   
   14000e2dc:	int3   
   14000e2dd:	int3   
   14000e2de:	int3   
   14000e2df:	int3   
   14000e2e0:	rex push rbx
   14000e2e2:	sub    rsp,0x20
   14000e2e6:	cmp    QWORD PTR [rcx+0x18],0x0
   14000e2eb:	mov    rbx,rdx
   14000e2ee:	je     0x14000e303
   14000e2f0:	mov    rcx,QWORD PTR [rcx+0x18]
   14000e2f4:	mov    rax,QWORD PTR [rcx]
   14000e2f7:	call   QWORD PTR [rax+0x38]
   14000e2fa:	mov    rax,rbx
   14000e2fd:	add    rsp,0x20
   14000e301:	pop    rbx
   14000e302:	ret    
   14000e303:	cmp    QWORD PTR [rcx+0x10],0x0
   14000e308:	je     0x14000e31d
   14000e30a:	mov    rcx,QWORD PTR [rcx+0x10]
   14000e30e:	mov    rax,QWORD PTR [rcx]
   14000e311:	call   QWORD PTR [rax+0x38]
   14000e314:	mov    rax,rbx
   14000e317:	add    rsp,0x20
   14000e31b:	pop    rbx
   14000e31c:	ret    
   14000e31d:	xor    eax,eax
   14000e31f:	mov    DWORD PTR [rdx],eax
   14000e321:	mov    DWORD PTR [rdx+0x4],eax
   14000e324:	mov    DWORD PTR [rdx+0x8],eax
   14000e327:	mov    DWORD PTR [rdx+0xc],eax
   14000e32a:	mov    rax,rbx
   14000e32d:	add    rsp,0x20
   14000e331:	pop    rbx
   14000e332:	ret    
   14000e333:	int3   
   14000e334:	int3   
   14000e335:	int3   
   14000e336:	int3   
   14000e337:	int3   
   14000e338:	int3   
   14000e339:	int3   
   14000e33a:	int3   
   14000e33b:	int3   
   14000e33c:	int3   
   14000e33d:	int3   
   14000e33e:	int3   
   14000e33f:	int3   
   14000e340:	rex push rbx
   14000e342:	sub    rsp,0x20
   14000e346:	mov    rcx,QWORD PTR [rcx+0x18]
   14000e34a:	mov    rbx,rdx
   14000e34d:	mov    rax,QWORD PTR [rcx]
   14000e350:	call   QWORD PTR [rax+0x30]
   14000e353:	mov    rax,rbx
   14000e356:	add    rsp,0x20
   14000e35a:	pop    rbx
   14000e35b:	ret    
   14000e35c:	int3   
   14000e35d:	int3   
   14000e35e:	int3   
   14000e35f:	int3   
   14000e360:	rex push rbx
   14000e362:	sub    rsp,0x40
   14000e366:	cmp    QWORD PTR [rcx+0x10],0x0
   14000e36b:	mov    rbx,rdx
   14000e36e:	je     0x14000e37b
   14000e370:	mov    rcx,QWORD PTR [rcx+0x10]
   14000e374:	lea    rdx,[rsp+0x20]
   14000e379:	jmp    0x14000e384
   14000e37b:	mov    rcx,QWORD PTR [rcx+0x18]
   14000e37f:	lea    rdx,[rsp+0x30]
   14000e384:	mov    rax,QWORD PTR [rcx]
   14000e387:	call   QWORD PTR [rax+0x38]
   14000e38a:	mov    r11,rax
   14000e38d:	mov    eax,DWORD PTR [rax]
   14000e38f:	mov    DWORD PTR [rbx],eax
   14000e391:	mov    eax,DWORD PTR [r11+0x4]
   14000e395:	mov    DWORD PTR [rbx+0x4],eax
   14000e398:	mov    eax,DWORD PTR [r11+0x8]
   14000e39c:	mov    DWORD PTR [rbx+0x8],eax
   14000e39f:	mov    eax,DWORD PTR [r11+0xc]
   14000e3a3:	mov    DWORD PTR [rbx+0xc],eax
   14000e3a6:	mov    rax,rbx
   14000e3a9:	add    rsp,0x40
   14000e3ad:	pop    rbx
   14000e3ae:	ret    
   14000e3af:	int3   
   14000e3b0:	xor    r9d,r9d
   14000e3b3:	lea    rax,[rip+0x143be]        # 0x140022778
   14000e3ba:	mov    QWORD PTR [rcx],rax
   14000e3bd:	mov    DWORD PTR [rcx+0x8],r9d
   14000e3c1:	mov    rax,QWORD PTR [rdx]
   14000e3c4:	mov    QWORD PTR [rcx+0x10],rax
   14000e3c8:	mov    eax,DWORD PTR [rdx+0x8]
   14000e3cb:	mov    DWORD PTR [rcx+0x18],eax
   14000e3ce:	mov    eax,DWORD PTR [rdx+0xc]
   14000e3d1:	mov    DWORD PTR [rcx+0x1c],eax
   14000e3d4:	mov    rax,QWORD PTR [r8]
   14000e3d7:	mov    QWORD PTR [rcx+0x20],rax
   14000e3db:	mov    eax,DWORD PTR [r8+0x8]
   14000e3df:	mov    DWORD PTR [rcx+0x28],eax
   14000e3e2:	mov    eax,DWORD PTR [r8+0xc]
   14000e3e6:	mov    DWORD PTR [rcx+0x2c],eax
   14000e3e9:	mov    QWORD PTR [rcx+0x30],rcx
   14000e3ed:	mov    DWORD PTR [rcx+0x38],r9d
   14000e3f1:	mov    DWORD PTR [rcx+0x3c],r9d
   14000e3f5:	mov    DWORD PTR [rcx+0x40],r9d
   14000e3f9:	mov    DWORD PTR [rcx+0x44],r9d
   14000e3fd:	mov    DWORD PTR [rcx+0x48],r9d
   14000e401:	mov    DWORD PTR [rcx+0x4c],r9d
   14000e405:	mov    DWORD PTR [rcx+0x50],r9d
   14000e409:	mov    DWORD PTR [rcx+0x54],r9d
   14000e40d:	mov    DWORD PTR [rcx+0x58],r9d
   14000e411:	mov    DWORD PTR [rcx+0x5c],r9d
   14000e415:	mov    DWORD PTR [rcx+0x60],r9d
   14000e419:	mov    DWORD PTR [rcx+0x64],r9d
   14000e41d:	mov    rax,rcx
   14000e420:	mov    DWORD PTR [rcx+0x8],0x58
   14000e427:	ret    
   14000e428:	int3   
   14000e429:	int3   
   14000e42a:	int3   
   14000e42b:	int3   
   14000e42c:	int3   
   14000e42d:	int3   
   14000e42e:	int3   
   14000e42f:	int3   
   14000e430:	xor    r10d,r10d
   14000e433:	lea    rax,[rip+0x1433e]        # 0x140022778
   14000e43a:	mov    QWORD PTR [rcx],rax
   14000e43d:	mov    DWORD PTR [rcx+0x8],r10d
   14000e441:	mov    rax,QWORD PTR [r8]
   14000e444:	mov    QWORD PTR [rcx+0x10],rax
   14000e448:	mov    eax,DWORD PTR [r8+0x8]
   14000e44c:	mov    DWORD PTR [rcx+0x18],eax
   14000e44f:	mov    eax,DWORD PTR [r8+0xc]
   14000e453:	mov    DWORD PTR [rcx+0x1c],eax
   14000e456:	mov    rax,QWORD PTR [r9]
   14000e459:	mov    QWORD PTR [rcx+0x20],rax
   14000e45d:	mov    eax,DWORD PTR [r9+0x8]
   14000e461:	mov    DWORD PTR [rcx+0x28],eax
   14000e464:	mov    eax,DWORD PTR [r9+0xc]
   14000e468:	mov    DWORD PTR [rcx+0x2c],eax
   14000e46b:	mov    DWORD PTR [rcx+0x38],r10d
   14000e46f:	mov    DWORD PTR [rcx+0x3c],r10d
   14000e473:	mov    DWORD PTR [rcx+0x40],r10d
   14000e477:	mov    DWORD PTR [rcx+0x44],r10d
   14000e47b:	mov    DWORD PTR [rcx+0x48],r10d
   14000e47f:	mov    DWORD PTR [rcx+0x4c],r10d
   14000e483:	mov    DWORD PTR [rcx+0x50],r10d
   14000e487:	mov    DWORD PTR [rcx+0x54],r10d
   14000e48b:	mov    DWORD PTR [rcx+0x58],r10d
   14000e48f:	mov    DWORD PTR [rcx+0x5c],r10d
   14000e493:	mov    DWORD PTR [rcx+0x60],r10d
   14000e497:	mov    DWORD PTR [rcx+0x64],r10d
   14000e49b:	mov    DWORD PTR [rcx+0x8],0x58
   14000e4a2:	mov    rax,QWORD PTR [rdx+0x30]
   14000e4a6:	mov    QWORD PTR [rcx+0x30],rax
   14000e4aa:	mov    QWORD PTR [rdx+0x30],rcx
   14000e4ae:	mov    rax,rcx
   14000e4b1:	ret    
   14000e4b2:	int3   
   14000e4b3:	int3   
   14000e4b4:	int3   
   14000e4b5:	int3   
   14000e4b6:	int3   
   14000e4b7:	int3   
   14000e4b8:	int3   
   14000e4b9:	int3   
   14000e4ba:	int3   
   14000e4bb:	int3   
   14000e4bc:	int3   
   14000e4bd:	int3   
   14000e4be:	int3   
   14000e4bf:	int3   
   14000e4c0:	mov    eax,DWORD PTR [rcx+0x48]
   14000e4c3:	mov    DWORD PTR [rdx],eax
   14000e4c5:	mov    eax,DWORD PTR [rcx+0x4c]
   14000e4c8:	mov    DWORD PTR [rdx+0x4],eax
   14000e4cb:	mov    eax,DWORD PTR [rcx+0x50]
   14000e4ce:	mov    DWORD PTR [rdx+0x8],eax
   14000e4d1:	mov    eax,DWORD PTR [rcx+0x54]
   14000e4d4:	mov    DWORD PTR [rdx+0xc],eax
   14000e4d7:	mov    rax,rdx
   14000e4da:	ret    
   14000e4db:	int3   
   14000e4dc:	int3   
   14000e4dd:	int3   
   14000e4de:	int3   
   14000e4df:	int3   
   14000e4e0:	rex push rbx
   14000e4e2:	sub    rsp,0x30
   14000e4e6:	cmp    QWORD PTR [rcx+0x30],0x0
   14000e4eb:	mov    rbx,rdx
   14000e4ee:	je     0x14000e504
   14000e4f0:	mov    rcx,QWORD PTR [rcx+0x30]
   14000e4f4:	lea    rdx,[rsp+0x20]
   14000e4f9:	mov    rax,QWORD PTR [rcx]
   14000e4fc:	call   QWORD PTR [rax+0x38]
   14000e4ff:	mov    rcx,rax
   14000e502:	jmp    0x14000e508
   14000e504:	add    rcx,0x58
   14000e508:	mov    eax,DWORD PTR [rcx]
   14000e50a:	mov    DWORD PTR [rbx],eax
   14000e50c:	mov    eax,DWORD PTR [rcx+0x4]
   14000e50f:	mov    DWORD PTR [rbx+0x4],eax
   14000e512:	mov    eax,DWORD PTR [rcx+0x8]
   14000e515:	mov    DWORD PTR [rbx+0x8],eax
   14000e518:	mov    eax,DWORD PTR [rcx+0xc]
   14000e51b:	mov    DWORD PTR [rbx+0xc],eax
   14000e51e:	mov    rax,rbx
   14000e521:	add    rsp,0x30
   14000e525:	pop    rbx
   14000e526:	ret    
   14000e527:	int3   
   14000e528:	int3   
   14000e529:	int3   
   14000e52a:	int3   
   14000e52b:	int3   
   14000e52c:	int3   
   14000e52d:	int3   
   14000e52e:	int3   
   14000e52f:	int3   
   14000e530:	mov    r8,QWORD PTR [rcx+0x18]
   14000e534:	mov    eax,DWORD PTR [r8+0x28]
   14000e538:	mov    DWORD PTR [rdx],eax
   14000e53a:	mov    eax,DWORD PTR [r8+0x2c]
   14000e53e:	mov    DWORD PTR [rdx+0x4],eax
   14000e541:	mov    eax,DWORD PTR [r8+0x30]
   14000e545:	mov    DWORD PTR [rdx+0x8],eax
   14000e548:	mov    eax,DWORD PTR [r8+0x34]
   14000e54c:	mov    DWORD PTR [rdx+0xc],eax
   14000e54f:	mov    rax,rdx
   14000e552:	ret    
   14000e553:	int3   
   14000e554:	int3   
   14000e555:	int3   
   14000e556:	int3   
   14000e557:	int3   
   14000e558:	int3   
   14000e559:	int3   
   14000e55a:	int3   
   14000e55b:	int3   
   14000e55c:	int3   
   14000e55d:	int3   
   14000e55e:	int3   
   14000e55f:	int3   
   14000e560:	cmp    BYTE PTR [rcx+0x38],0x0
   14000e564:	je     0x14000e58e
   14000e566:	mov    r8,QWORD PTR [rcx+0x18]
   14000e56a:	test   r8,r8
   14000e56d:	je     0x14000e58e
   14000e56f:	mov    eax,DWORD PTR [r8+0x28]
   14000e573:	mov    DWORD PTR [rdx],eax
   14000e575:	mov    eax,DWORD PTR [r8+0x2c]
   14000e579:	mov    DWORD PTR [rdx+0x4],eax
   14000e57c:	mov    eax,DWORD PTR [r8+0x30]
   14000e580:	mov    DWORD PTR [rdx+0x8],eax
   14000e583:	mov    eax,DWORD PTR [r8+0x34]
   14000e587:	mov    DWORD PTR [rdx+0xc],eax
   14000e58a:	mov    rax,rdx
   14000e58d:	ret    
   14000e58e:	mov    rcx,QWORD PTR [rcx+0x10]
   14000e592:	mov    eax,DWORD PTR [rcx+0x28]
   14000e595:	mov    DWORD PTR [rdx],eax
   14000e597:	mov    eax,DWORD PTR [rcx+0x2c]
   14000e59a:	mov    DWORD PTR [rdx+0x4],eax
   14000e59d:	mov    eax,DWORD PTR [rcx+0x30]
   14000e5a0:	mov    DWORD PTR [rdx+0x8],eax
   14000e5a3:	mov    eax,DWORD PTR [rcx+0x34]
   14000e5a6:	mov    DWORD PTR [rdx+0xc],eax
   14000e5a9:	mov    rax,rdx
   14000e5ac:	ret    
   14000e5ad:	int3   
   14000e5ae:	int3   
   14000e5af:	int3   
   14000e5b0:	mov    r8,QWORD PTR [rcx+0x20]
   14000e5b4:	mov    eax,DWORD PTR [r8+0x28]
   14000e5b8:	mov    DWORD PTR [rdx],eax
   14000e5ba:	mov    eax,DWORD PTR [r8+0x2c]
   14000e5be:	mov    DWORD PTR [rdx+0x4],eax
   14000e5c1:	mov    eax,DWORD PTR [r8+0x30]
   14000e5c5:	mov    DWORD PTR [rdx+0x8],eax
   14000e5c8:	mov    eax,DWORD PTR [r8+0x34]
   14000e5cc:	mov    DWORD PTR [rdx+0xc],eax
   14000e5cf:	mov    rax,rdx
   14000e5d2:	ret    
   14000e5d3:	int3   
   14000e5d4:	int3   
   14000e5d5:	int3   
   14000e5d6:	int3   
   14000e5d7:	int3   
   14000e5d8:	int3   
   14000e5d9:	int3   
   14000e5da:	int3   
   14000e5db:	int3   
   14000e5dc:	int3   
   14000e5dd:	int3   
   14000e5de:	int3   
   14000e5df:	int3   
   14000e5e0:	mov    r8,QWORD PTR [rcx+0x10]
   14000e5e4:	mov    eax,DWORD PTR [r8+0x28]
   14000e5e8:	mov    DWORD PTR [rdx],eax
   14000e5ea:	mov    eax,DWORD PTR [r8+0x2c]
   14000e5ee:	mov    DWORD PTR [rdx+0x4],eax
   14000e5f1:	mov    eax,DWORD PTR [r8+0x30]
   14000e5f5:	mov    DWORD PTR [rdx+0x8],eax
   14000e5f8:	mov    eax,DWORD PTR [r8+0x34]
   14000e5fc:	mov    DWORD PTR [rdx+0xc],eax
   14000e5ff:	mov    rax,rdx
   14000e602:	ret    
   14000e603:	int3   
   14000e604:	int3   
   14000e605:	int3   
   14000e606:	int3   
   14000e607:	int3   
   14000e608:	int3   
   14000e609:	int3   
   14000e60a:	int3   
   14000e60b:	int3   
   14000e60c:	int3   
   14000e60d:	int3   
   14000e60e:	int3   
   14000e60f:	int3   
   14000e610:	mov    QWORD PTR [rsp+0x8],rbx
   14000e615:	mov    QWORD PTR [rsp+0x10],rsi
   14000e61a:	push   rdi
   14000e61b:	sub    rsp,0x20
   14000e61f:	mov    rbx,QWORD PTR [rdx+0x50]
   14000e623:	xor    eax,eax
   14000e625:	mov    rsi,rcx
   14000e628:	mov    DWORD PTR [rcx],eax
   14000e62a:	mov    DWORD PTR [rcx+0x4],eax
   14000e62d:	mov    DWORD PTR [rcx+0x8],eax
   14000e630:	mov    DWORD PTR [rcx+0xc],eax
   14000e633:	lea    rcx,[rdx+0x8]
   14000e637:	mov    rdi,rdx
   14000e63a:	call   QWORD PTR [rip+0x11de0]        # 0x140020420
   14000e640:	mov    rdx,rbx
   14000e643:	sub    rbx,QWORD PTR [rdi+0x48]
   14000e647:	sub    rdx,rax
   14000e64a:	mov    eax,DWORD PTR [rdi+0x84]
   14000e650:	sar    rbx,1
   14000e653:	mov    DWORD PTR [rsi+0x4],eax
   14000e656:	mov    eax,DWORD PTR [rdi+0x88]
   14000e65c:	sar    rdx,1
   14000e65f:	inc    ebx
   14000e661:	mov    DWORD PTR [rsi+0x8],eax
   14000e664:	mov    DWORD PTR [rsi],edx
   14000e666:	mov    DWORD PTR [rsi+0xc],ebx
   14000e669:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e66e:	mov    rax,rsi
   14000e671:	mov    rsi,QWORD PTR [rsp+0x38]
   14000e676:	add    rsp,0x20
   14000e67a:	pop    rdi
   14000e67b:	ret    
   14000e67c:	int3   
   14000e67d:	int3   
   14000e67e:	int3   
   14000e67f:	int3   
   14000e680:	mov    QWORD PTR [rsp+0x8],rbx
   14000e685:	mov    DWORD PTR [rsp+0x10],edx
   14000e689:	push   rbp
   14000e68a:	push   rsi
   14000e68b:	push   rdi
   14000e68c:	push   r12
   14000e68e:	push   r13
   14000e690:	sub    rsp,0x20
   14000e694:	mov    eax,DWORD PTR [rcx+0x4]
   14000e697:	mov    rbp,QWORD PTR [rcx+0x8]
   14000e69b:	mov    rbx,rcx
   14000e69e:	cmp    edx,eax
   14000e6a0:	lea    r9,[rsp+0x58]
   14000e6a5:	lea    rcx,[rsp+0x60]
   14000e6aa:	cmovge r9,rcx
   14000e6ae:	movsxd r12,r8d
   14000e6b1:	xor    r13d,r13d
   14000e6b4:	mov    DWORD PTR [rsp+0x60],eax
   14000e6b8:	mov    edi,DWORD PTR [r9]
   14000e6bb:	mov    esi,edx
   14000e6bd:	cmp    r12d,DWORD PTR [rbx]
   14000e6c0:	je     0x14000e727
   14000e6c2:	cmp    r12d,0x4
   14000e6c6:	jle    0x14000e6da
   14000e6c8:	mov    rcx,r12
   14000e6cb:	shl    rcx,0x4
   14000e6cf:	call   QWORD PTR [rip+0x11afb]        # 0x1400201d0
   14000e6d5:	mov    DWORD PTR [rbx],r12d
   14000e6d8:	jmp    0x14000e6e4
   14000e6da:	lea    rax,[rbx+0x10]
   14000e6de:	mov    DWORD PTR [rbx],0x4
   14000e6e4:	mov    QWORD PTR [rbx+0x8],rax
   14000e6e8:	mov    DWORD PTR [rbx+0x4],r13d
   14000e6ec:	test   edi,edi
   14000e6ee:	jle    0x14000e727
   14000e6f0:	movsxd rcx,DWORD PTR [rbx+0x4]
   14000e6f4:	mov    rax,QWORD PTR [rbx+0x8]
   14000e6f8:	add    rcx,rcx
   14000e6fb:	lea    rdx,[rax+rcx*8]
   14000e6ff:	test   rdx,rdx
   14000e702:	je     0x14000e71f
   14000e704:	mov    eax,DWORD PTR [rbp+rcx*8+0x0]
   14000e708:	mov    DWORD PTR [rdx],eax
   14000e70a:	mov    eax,DWORD PTR [rbp+rcx*8+0x4]
   14000e70e:	mov    DWORD PTR [rdx+0x4],eax
   14000e711:	mov    eax,DWORD PTR [rbp+rcx*8+0x8]
   14000e715:	mov    DWORD PTR [rdx+0x8],eax
   14000e718:	mov    eax,DWORD PTR [rbp+rcx*8+0xc]
   14000e71c:	mov    DWORD PTR [rdx+0xc],eax
   14000e71f:	inc    DWORD PTR [rbx+0x4]
   14000e722:	cmp    DWORD PTR [rbx+0x4],edi
   14000e725:	jl     0x14000e6f0
   14000e727:	lea    rax,[rbx+0x10]
   14000e72b:	mov    DWORD PTR [rbx+0x4],edi
   14000e72e:	cmp    rbp,rax
   14000e731:	je     0x14000e742
   14000e733:	cmp    rbp,QWORD PTR [rbx+0x8]
   14000e737:	je     0x14000e742
   14000e739:	mov    rcx,rbp
   14000e73c:	call   QWORD PTR [rip+0x11aa6]        # 0x1400201e8
   14000e742:	cmp    DWORD PTR [rbx+0x4],esi
   14000e745:	jge    0x14000e77b
   14000e747:	nop    WORD PTR [rax+rax*1+0x0]
   14000e750:	movsxd rax,DWORD PTR [rbx+0x4]
   14000e754:	mov    rcx,rax
   14000e757:	lea    eax,[rax+0x1]
   14000e75a:	shl    rcx,0x4
   14000e75e:	add    rcx,QWORD PTR [rbx+0x8]
   14000e762:	mov    DWORD PTR [rbx+0x4],eax
   14000e765:	je     0x14000e776
   14000e767:	mov    DWORD PTR [rcx],r13d
   14000e76a:	mov    DWORD PTR [rcx+0x4],r13d
   14000e76e:	mov    DWORD PTR [rcx+0x8],r13d
   14000e772:	mov    DWORD PTR [rcx+0xc],r13d
   14000e776:	cmp    DWORD PTR [rbx+0x4],esi
   14000e779:	jl     0x14000e750
   14000e77b:	mov    rbx,QWORD PTR [rsp+0x50]
   14000e780:	add    rsp,0x20
   14000e784:	pop    r13
   14000e786:	pop    r12
   14000e788:	pop    rdi
   14000e789:	pop    rsi
   14000e78a:	pop    rbp
   14000e78b:	ret    
   14000e78c:	int3   
   14000e78d:	int3   
   14000e78e:	int3   
   14000e78f:	int3   
   14000e790:	mov    QWORD PTR [rsp+0x8],rbx
   14000e795:	mov    QWORD PTR [rsp+0x10],rsi
   14000e79a:	push   rdi
   14000e79b:	sub    rsp,0x20
   14000e79f:	mov    ecx,0x20
   14000e7a4:	mov    rsi,r8
   14000e7a7:	mov    rbx,rdx
   14000e7aa:	call   0x14001ee64
   14000e7af:	mov    rdi,rax
   14000e7b2:	test   rax,rax
   14000e7b5:	je     0x14000e7f4
   14000e7b7:	mov    ecx,DWORD PTR [rsi]
   14000e7b9:	lea    rdx,[rsi+0x18]
   14000e7bd:	mov    DWORD PTR [rax],ecx
   14000e7bf:	mov    ecx,DWORD PTR [rsi+0x4]
   14000e7c2:	mov    DWORD PTR [rax+0x4],ecx
   14000e7c5:	mov    ecx,DWORD PTR [rsi+0x8]
   14000e7c8:	mov    DWORD PTR [rax+0x8],ecx
   14000e7cb:	mov    ecx,DWORD PTR [rsi+0xc]
   14000e7ce:	mov    DWORD PTR [rax+0xc],ecx
   14000e7d1:	mov    ecx,DWORD PTR [rsi+0x10]
   14000e7d4:	mov    DWORD PTR [rax+0x10],ecx
   14000e7d7:	lea    rcx,[rax+0x18]
   14000e7db:	call   QWORD PTR [rip+0x11fb7]        # 0x140020798
   14000e7e1:	mov    QWORD PTR [rbx],rdi
   14000e7e4:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e7e9:	mov    rsi,QWORD PTR [rsp+0x38]
   14000e7ee:	add    rsp,0x20
   14000e7f2:	pop    rdi
   14000e7f3:	ret    
   14000e7f4:	mov    rsi,QWORD PTR [rsp+0x38]
   14000e7f9:	mov    QWORD PTR [rbx],0x0
   14000e800:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e805:	add    rsp,0x20
   14000e809:	pop    rdi
   14000e80a:	ret    
   14000e80b:	int3   
   14000e80c:	int3   
   14000e80d:	int3   
   14000e80e:	int3   
   14000e80f:	int3   
   14000e810:	mov    r8,rdx
   14000e813:	lea    rdx,[rcx+0x7]
   14000e817:	mov    rax,QWORD PTR [r8+0x18]
   14000e81b:	and    rdx,0xfffffffffffffff8
   14000e81f:	test   rax,rax
   14000e822:	je     0x14000e833
   14000e824:	lea    rcx,[rax+rdx*1]
   14000e828:	cmp    rcx,QWORD PTR [r8+0x20]
   14000e82c:	jae    0x14000e833
   14000e82e:	mov    QWORD PTR [r8+0x18],rcx
   14000e832:	ret    
   14000e833:	mov    rcx,r8
   14000e836:	jmp    0x14000ccd0
   14000e83b:	int3   
   14000e83c:	int3   
   14000e83d:	int3   
   14000e83e:	int3   
   14000e83f:	int3   
   14000e840:	lea    rax,[rip+0x12451]        # 0x140020c98
   14000e847:	mov    QWORD PTR [rcx],rax
   14000e84a:	mov    rax,rcx
   14000e84d:	ret    
   14000e84e:	int3   
   14000e84f:	int3   
   14000e850:	mov    DWORD PTR [rcx+0x10],0x1
   14000e857:	xor    r9d,r9d
   14000e85a:	lea    rax,[rip+0x140f7]        # 0x140022958
   14000e861:	mov    QWORD PTR [rcx],rax
   14000e864:	mov    DWORD PTR [rcx+0x8],r9d
   14000e868:	mov    QWORD PTR [rcx+0x18],r9
   14000e86c:	mov    DWORD PTR [rcx+0x20],r9d
   14000e870:	mov    DWORD PTR [rcx+0x24],r9d
   14000e874:	mov    rax,QWORD PTR [rdx]
   14000e877:	mov    QWORD PTR [rcx+0x28],rax
   14000e87b:	mov    eax,DWORD PTR [rdx+0x8]
   14000e87e:	mov    DWORD PTR [rcx+0x30],eax
   14000e881:	mov    eax,DWORD PTR [rdx+0xc]
   14000e884:	mov    DWORD PTR [rcx+0x34],eax
   14000e887:	mov    rax,QWORD PTR [r8]
   14000e88a:	mov    QWORD PTR [rcx+0x38],rax
   14000e88e:	mov    eax,DWORD PTR [r8+0x8]
   14000e892:	mov    DWORD PTR [rcx+0x40],eax
   14000e895:	mov    eax,DWORD PTR [r8+0xc]
   14000e899:	mov    DWORD PTR [rcx+0x44],eax
   14000e89c:	mov    QWORD PTR [rcx+0x48],r9
   14000e8a0:	mov    QWORD PTR [rcx+0x50],r9
   14000e8a4:	mov    BYTE PTR [rcx+0x58],r9b
   14000e8a8:	mov    BYTE PTR [rcx+0x59],r9b
   14000e8ac:	mov    QWORD PTR [rcx+0x60],r9
   14000e8b0:	mov    DWORD PTR [rcx+0x68],r9d
   14000e8b4:	mov    DWORD PTR [rcx+0x6c],r9d
   14000e8b8:	mov    DWORD PTR [rcx+0x70],r9d
   14000e8bc:	mov    DWORD PTR [rcx+0x74],r9d
   14000e8c0:	mov    DWORD PTR [rcx+0x78],r9d
   14000e8c4:	mov    DWORD PTR [rcx+0x7c],r9d
   14000e8c8:	mov    DWORD PTR [rcx+0x80],r9d
   14000e8cf:	mov    DWORD PTR [rcx+0x84],r9d
   14000e8d6:	mov    DWORD PTR [rcx+0x88],r9d
   14000e8dd:	mov    DWORD PTR [rcx+0x8c],r9d
   14000e8e4:	mov    DWORD PTR [rcx+0x90],r9d
   14000e8eb:	mov    DWORD PTR [rcx+0x94],r9d
   14000e8f2:	mov    DWORD PTR [rcx+0x98],r9d
   14000e8f9:	mov    DWORD PTR [rcx+0x9c],r9d
   14000e900:	mov    DWORD PTR [rcx+0xa0],r9d
   14000e907:	mov    DWORD PTR [rcx+0xa4],r9d
   14000e90e:	mov    DWORD PTR [rcx+0xa8],r9d
   14000e915:	mov    DWORD PTR [rcx+0xac],r9d
   14000e91c:	mov    DWORD PTR [rcx+0xb0],r9d
   14000e923:	mov    DWORD PTR [rcx+0xb4],r9d
   14000e92a:	mov    DWORD PTR [rcx+0xb8],r9d
   14000e931:	mov    DWORD PTR [rcx+0xbc],r9d
   14000e938:	mov    DWORD PTR [rcx+0xc0],r9d
   14000e93f:	mov    DWORD PTR [rcx+0xc4],r9d
   14000e946:	mov    DWORD PTR [rcx+0xc8],r9d
   14000e94d:	mov    DWORD PTR [rcx+0xcc],r9d
   14000e954:	mov    DWORD PTR [rcx+0xd0],r9d
   14000e95b:	mov    DWORD PTR [rcx+0xd4],r9d
   14000e962:	mov    DWORD PTR [rcx+0xd8],r9d
   14000e969:	mov    DWORD PTR [rcx+0xdc],r9d
   14000e970:	mov    DWORD PTR [rcx+0xe0],r9d
   14000e977:	mov    DWORD PTR [rcx+0xe4],r9d
   14000e97e:	mov    rax,rcx
   14000e981:	mov    DWORD PTR [rcx+0x8],0x59
   14000e988:	ret    
   14000e989:	int3   
   14000e98a:	int3   
   14000e98b:	int3   
   14000e98c:	int3   
   14000e98d:	int3   
   14000e98e:	int3   
   14000e98f:	int3   
   14000e990:	cmp    DWORD PTR [rcx+0x6c],0x0
   14000e994:	je     0x14000e9b1
   14000e996:	mov    eax,DWORD PTR [rcx+0x68]
   14000e999:	mov    DWORD PTR [rdx],eax
   14000e99b:	mov    eax,DWORD PTR [rcx+0x6c]
   14000e99e:	mov    DWORD PTR [rdx+0x4],eax
   14000e9a1:	mov    eax,DWORD PTR [rcx+0x70]
   14000e9a4:	mov    DWORD PTR [rdx+0x8],eax
   14000e9a7:	mov    eax,DWORD PTR [rcx+0x74]
   14000e9aa:	mov    DWORD PTR [rdx+0xc],eax
   14000e9ad:	mov    rax,rdx
   14000e9b0:	ret    
   14000e9b1:	cmp    DWORD PTR [rcx+0x7c],0x0
   14000e9b5:	je     0x14000e9d8
   14000e9b7:	mov    eax,DWORD PTR [rcx+0x78]
   14000e9ba:	mov    DWORD PTR [rdx],eax
   14000e9bc:	mov    eax,DWORD PTR [rcx+0x7c]
   14000e9bf:	mov    DWORD PTR [rdx+0x4],eax
   14000e9c2:	mov    eax,DWORD PTR [rcx+0x80]
   14000e9c8:	mov    DWORD PTR [rdx+0x8],eax
   14000e9cb:	mov    eax,DWORD PTR [rcx+0x84]
   14000e9d1:	mov    DWORD PTR [rdx+0xc],eax
   14000e9d4:	mov    rax,rdx
   14000e9d7:	ret    
   14000e9d8:	mov    eax,DWORD PTR [rcx+0x88]
   14000e9de:	mov    DWORD PTR [rdx],eax
   14000e9e0:	mov    eax,DWORD PTR [rcx+0x8c]
   14000e9e6:	mov    DWORD PTR [rdx+0x4],eax
   14000e9e9:	mov    eax,DWORD PTR [rcx+0x90]
   14000e9ef:	mov    DWORD PTR [rdx+0x8],eax
   14000e9f2:	mov    eax,DWORD PTR [rcx+0x94]
   14000e9f8:	mov    DWORD PTR [rdx+0xc],eax
   14000e9fb:	mov    rax,rdx
   14000e9fe:	ret    
   14000e9ff:	int3   
   14000ea00:	rex push rbx
   14000ea02:	sub    rsp,0x20
   14000ea06:	cmp    QWORD PTR [rcx+0x50],0x0
   14000ea0b:	mov    rbx,rdx
   14000ea0e:	je     0x14000ea23
   14000ea10:	mov    rcx,QWORD PTR [rcx+0x50]
   14000ea14:	mov    rax,QWORD PTR [rcx]
   14000ea17:	call   QWORD PTR [rax+0x38]
   14000ea1a:	mov    rax,rbx
   14000ea1d:	add    rsp,0x20
   14000ea21:	pop    rbx
   14000ea22:	ret    
   14000ea23:	cmp    QWORD PTR [rcx+0x48],0x0
   14000ea28:	je     0x14000ea3d
   14000ea2a:	mov    rcx,QWORD PTR [rcx+0x48]
   14000ea2e:	mov    rax,QWORD PTR [rcx]
   14000ea31:	call   QWORD PTR [rax+0x38]
   14000ea34:	mov    rax,rbx
   14000ea37:	add    rsp,0x20
   14000ea3b:	pop    rbx
   14000ea3c:	ret    
   14000ea3d:	mov    eax,DWORD PTR [rcx+0xd8]
   14000ea43:	mov    DWORD PTR [rdx],eax
   14000ea45:	mov    eax,DWORD PTR [rcx+0xdc]
   14000ea4b:	mov    DWORD PTR [rdx+0x4],eax
   14000ea4e:	mov    eax,DWORD PTR [rcx+0xe0]
   14000ea54:	mov    DWORD PTR [rdx+0x8],eax
   14000ea57:	mov    eax,DWORD PTR [rcx+0xe4]
   14000ea5d:	mov    DWORD PTR [rdx+0xc],eax
   14000ea60:	mov    rax,rbx
   14000ea63:	add    rsp,0x20
   14000ea67:	pop    rbx
   14000ea68:	ret    
   14000ea69:	int3   
   14000ea6a:	int3   
   14000ea6b:	int3   
   14000ea6c:	int3   
   14000ea6d:	int3   
   14000ea6e:	int3   
   14000ea6f:	int3   
   14000ea70:	mov    DWORD PTR [rcx+0x10],0x1
   14000ea77:	xor    r10d,r10d
   14000ea7a:	lea    rax,[rip+0x13ed7]        # 0x140022958
   14000ea81:	mov    QWORD PTR [rcx],rax
   14000ea84:	mov    DWORD PTR [rcx+0x8],r10d
   14000ea88:	mov    QWORD PTR [rcx+0x18],r10
   14000ea8c:	mov    DWORD PTR [rcx+0x20],r10d
   14000ea90:	mov    DWORD PTR [rcx+0x24],r10d
   14000ea94:	mov    rax,QWORD PTR [rdx]
   14000ea97:	mov    QWORD PTR [rcx+0x28],rax
   14000ea9b:	mov    eax,DWORD PTR [rdx+0x8]
   14000ea9e:	mov    DWORD PTR [rcx+0x30],eax
   14000eaa1:	mov    eax,DWORD PTR [rdx+0xc]
   14000eaa4:	mov    DWORD PTR [rcx+0x34],eax
   14000eaa7:	mov    rax,QWORD PTR [r8]
   14000eaaa:	mov    QWORD PTR [rcx+0x38],rax
   14000eaae:	mov    eax,DWORD PTR [r8+0x8]
   14000eab2:	mov    DWORD PTR [rcx+0x40],eax
   14000eab5:	mov    eax,DWORD PTR [r8+0xc]
   14000eab9:	mov    DWORD PTR [rcx+0x44],eax
   14000eabc:	mov    QWORD PTR [rcx+0x48],r9
   14000eac0:	mov    QWORD PTR [rcx+0x50],r10
   14000eac4:	mov    BYTE PTR [rcx+0x58],r10b
   14000eac8:	mov    BYTE PTR [rcx+0x59],r10b
   14000eacc:	mov    QWORD PTR [rcx+0x60],r10
   14000ead0:	mov    DWORD PTR [rcx+0x68],r10d
   14000ead4:	mov    DWORD PTR [rcx+0x6c],r10d
   14000ead8:	mov    DWORD PTR [rcx+0x70],r10d
   14000eadc:	mov    DWORD PTR [rcx+0x74],r10d
   14000eae0:	mov    DWORD PTR [rcx+0x78],r10d
   14000eae4:	mov    DWORD PTR [rcx+0x7c],r10d
   14000eae8:	mov    DWORD PTR [rcx+0x80],r10d
   14000eaef:	mov    DWORD PTR [rcx+0x84],r10d
   14000eaf6:	mov    DWORD PTR [rcx+0x88],r10d
   14000eafd:	mov    DWORD PTR [rcx+0x8c],r10d
   14000eb04:	mov    DWORD PTR [rcx+0x90],r10d
   14000eb0b:	mov    DWORD PTR [rcx+0x94],r10d
   14000eb12:	mov    DWORD PTR [rcx+0x98],r10d
   14000eb19:	mov    DWORD PTR [rcx+0x9c],r10d
   14000eb20:	mov    DWORD PTR [rcx+0xa0],r10d
   14000eb27:	mov    DWORD PTR [rcx+0xa4],r10d
   14000eb2e:	mov    DWORD PTR [rcx+0xa8],r10d
   14000eb35:	mov    DWORD PTR [rcx+0xac],r10d
   14000eb3c:	mov    DWORD PTR [rcx+0xb0],r10d
   14000eb43:	mov    DWORD PTR [rcx+0xb4],r10d
   14000eb4a:	mov    DWORD PTR [rcx+0xb8],r10d
   14000eb51:	mov    DWORD PTR [rcx+0xbc],r10d
   14000eb58:	mov    DWORD PTR [rcx+0xc0],r10d
   14000eb5f:	mov    DWORD PTR [rcx+0xc4],r10d
   14000eb66:	mov    DWORD PTR [rcx+0xc8],r10d
   14000eb6d:	mov    DWORD PTR [rcx+0xcc],r10d
   14000eb74:	mov    DWORD PTR [rcx+0xd0],r10d
   14000eb7b:	mov    DWORD PTR [rcx+0xd4],r10d
   14000eb82:	mov    DWORD PTR [rcx+0xd8],r10d
   14000eb89:	mov    DWORD PTR [rcx+0xdc],r10d
   14000eb90:	mov    DWORD PTR [rcx+0xe0],r10d
   14000eb97:	mov    DWORD PTR [rcx+0xe4],r10d
   14000eb9e:	mov    rax,rcx
   14000eba1:	mov    DWORD PTR [rcx+0x8],0x59
   14000eba8:	ret    
   14000eba9:	int3   
   14000ebaa:	int3   
   14000ebab:	int3   
   14000ebac:	int3   
   14000ebad:	int3   
   14000ebae:	int3   
   14000ebaf:	int3   
   14000ebb0:	rex push rbx
   14000ebb2:	sub    rsp,0x20
   14000ebb6:	mov    rcx,QWORD PTR [rcx+0x10]
   14000ebba:	mov    rbx,rdx
   14000ebbd:	test   rcx,rcx
   14000ebc0:	je     0x14000ebe2
   14000ebc2:	cmp    DWORD PTR [rcx+0x8],0x1e
   14000ebc6:	jne    0x14000ebd7
   14000ebc8:	mov    rax,QWORD PTR [rcx]
   14000ebcb:	call   QWORD PTR [rax+0x30]
   14000ebce:	mov    rax,rbx
   14000ebd1:	add    rsp,0x20
   14000ebd5:	pop    rbx
   14000ebd6:	ret    
   14000ebd7:	test   rcx,rcx
   14000ebda:	je     0x14000ebe2
   14000ebdc:	cmp    DWORD PTR [rcx+0x8],0x4a
   14000ebe0:	je     0x14000ebc8
   14000ebe2:	xor    eax,eax
   14000ebe4:	mov    DWORD PTR [rdx],eax
   14000ebe6:	mov    DWORD PTR [rdx+0x4],eax
   14000ebe9:	mov    DWORD PTR [rdx+0x8],eax
   14000ebec:	mov    DWORD PTR [rdx+0xc],eax
   14000ebef:	mov    rax,rbx
   14000ebf2:	add    rsp,0x20
   14000ebf6:	pop    rbx
   14000ebf7:	ret    
   14000ebf8:	int3   
   14000ebf9:	int3   
   14000ebfa:	int3   
   14000ebfb:	int3   
   14000ebfc:	int3   
   14000ebfd:	int3   
   14000ebfe:	int3   
   14000ebff:	int3   
   14000ec00:	rex push rbx
   14000ec02:	sub    rsp,0x20
   14000ec06:	mov    rcx,QWORD PTR [rcx+0x10]
   14000ec0a:	mov    rbx,rdx
   14000ec0d:	test   rcx,rcx
   14000ec10:	je     0x14000ec32
   14000ec12:	cmp    DWORD PTR [rcx+0x8],0x1e
   14000ec16:	jne    0x14000ec27
   14000ec18:	mov    rax,QWORD PTR [rcx]
   14000ec1b:	call   QWORD PTR [rax+0x38]
   14000ec1e:	mov    rax,rbx
   14000ec21:	add    rsp,0x20
   14000ec25:	pop    rbx
   14000ec26:	ret    
   14000ec27:	test   rcx,rcx
   14000ec2a:	je     0x14000ec32
   14000ec2c:	cmp    DWORD PTR [rcx+0x8],0x4a
   14000ec30:	je     0x14000ec18
   14000ec32:	xor    eax,eax
   14000ec34:	mov    DWORD PTR [rdx],eax
   14000ec36:	mov    DWORD PTR [rdx+0x4],eax
   14000ec39:	mov    DWORD PTR [rdx+0x8],eax
   14000ec3c:	mov    DWORD PTR [rdx+0xc],eax
   14000ec3f:	mov    rax,rbx
   14000ec42:	add    rsp,0x20
   14000ec46:	pop    rbx
   14000ec47:	ret    
   14000ec48:	int3   
   14000ec49:	int3   
   14000ec4a:	int3   
   14000ec4b:	int3   
   14000ec4c:	int3   
   14000ec4d:	int3   
   14000ec4e:	int3   
   14000ec4f:	int3   
   14000ec50:	rex push rbx
   14000ec52:	sub    rsp,0x20
   14000ec56:	mov    rbx,rdx
   14000ec59:	test   rdx,rdx
   14000ec5c:	je     0x14000ed0c
   14000ec62:	cmp    DWORD PTR [rdx+0x8],0x21
   14000ec66:	jne    0x14000ed0c
   14000ec6c:	mov    rcx,QWORD PTR [rcx+0x8]
   14000ec70:	mov    r8,QWORD PTR [rcx+0x18]
   14000ec74:	test   r8,r8
   14000ec77:	je     0x14000ec89
   14000ec79:	lea    rax,[r8+0x38]
   14000ec7d:	cmp    rax,QWORD PTR [rcx+0x20]
   14000ec81:	jae    0x14000ec89
   14000ec83:	mov    QWORD PTR [rcx+0x18],rax
   14000ec87:	jmp    0x14000ec96
   14000ec89:	mov    edx,0x38
   14000ec8e:	call   0x14000ccd0
   14000ec93:	mov    r8,rax
   14000ec96:	xor    edx,edx
   14000ec98:	test   r8,r8
   14000ec9b:	je     0x14000ecdf
   14000ec9d:	mov    DWORD PTR [r8+0x8],edx
   14000eca1:	mov    QWORD PTR [r8+0x10],r8
   14000eca5:	lea    rax,[rip+0x138ec]        # 0x140022598
   14000ecac:	mov    QWORD PTR [r8],rax
   14000ecaf:	mov    rcx,QWORD PTR [rbx+0x10]
   14000ecb3:	mov    QWORD PTR [r8+0x18],rcx
   14000ecb7:	mov    eax,DWORD PTR [rbx+0x18]
   14000ecba:	mov    DWORD PTR [r8+0x20],eax
   14000ecbe:	mov    eax,DWORD PTR [rbx+0x1c]
   14000ecc1:	mov    DWORD PTR [r8+0x24],eax
   14000ecc5:	mov    DWORD PTR [r8+0x28],edx
   14000ecc9:	mov    DWORD PTR [r8+0x2c],edx
   14000eccd:	mov    DWORD PTR [r8+0x30],edx
   14000ecd1:	mov    DWORD PTR [r8+0x34],edx
   14000ecd5:	mov    DWORD PTR [r8+0x8],0x5b
   14000ecdd:	jmp    0x14000ece2
   14000ecdf:	mov    r8,rdx
   14000ece2:	mov    eax,DWORD PTR [rbx+0x20]
   14000ece5:	mov    DWORD PTR [r8+0x28],eax
   14000ece9:	mov    eax,DWORD PTR [rbx+0x24]
   14000ecec:	mov    DWORD PTR [r8+0x2c],eax
   14000ecf0:	mov    eax,DWORD PTR [rbx+0x28]
   14000ecf3:	mov    DWORD PTR [r8+0x30],eax
   14000ecf7:	mov    eax,DWORD PTR [rbx+0x2c]
   14000ecfa:	mov    DWORD PTR [r8+0x34],eax
   14000ecfe:	mov    rax,QWORD PTR [r8+0x10]
   14000ed02:	mov    QWORD PTR [r8+0x10],rdx
   14000ed06:	add    rsp,0x20
   14000ed0a:	pop    rbx
   14000ed0b:	ret    
   14000ed0c:	xor    eax,eax
   14000ed0e:	add    rsp,0x20
   14000ed12:	pop    rbx
   14000ed13:	ret    
   14000ed14:	int3   
   14000ed15:	int3   
   14000ed16:	int3   
   14000ed17:	int3   
   14000ed18:	int3   
   14000ed19:	int3   
   14000ed1a:	int3   
   14000ed1b:	int3   
   14000ed1c:	int3   
   14000ed1d:	int3   
   14000ed1e:	int3   
   14000ed1f:	int3   
   14000ed20:	mov    r11,rsp
   14000ed23:	push   rbx
   14000ed24:	push   rdi
   14000ed25:	push   r13
   14000ed27:	push   r14
   14000ed29:	sub    rsp,0xc8
   14000ed30:	xor    r14d,r14d
   14000ed33:	mov    r8d,0x4
   14000ed39:	mov    QWORD PTR [r11+0x8],rbp
   14000ed3d:	mov    rdi,rdx
   14000ed40:	lea    rax,[r11-0x68]
   14000ed44:	lea    rdx,[rsp+0x30]
   14000ed49:	mov    ebx,r14d
   14000ed4c:	mov    QWORD PTR [r11+0x10],rsi
   14000ed50:	mov    r13,rcx
   14000ed53:	mov    QWORD PTR [rsp+0x28],rdx
   14000ed58:	mov    DWORD PTR [rsp+0x20],r8d
   14000ed5d:	mov    DWORD PTR [r11-0x74],r14d
   14000ed61:	mov    DWORD PTR [rsp+0x24],ebx
   14000ed65:	mov    QWORD PTR [r11-0x70],rax
   14000ed69:	mov    DWORD PTR [r11-0x78],r8d
   14000ed6d:	mov    QWORD PTR [r11+0x18],r12
   14000ed71:	test   rdi,rdi
   14000ed74:	je     0x14000f038
   14000ed7a:	cmp    DWORD PTR [rdi+0x8],0x18
   14000ed7e:	jne    0x14000ee85
   14000ed84:	cmp    ebx,r8d
   14000ed87:	jne    0x14000ee00
   14000ed89:	lea    ebp,[rbx+rbx*1]
   14000ed8c:	mov    rsi,rdx
   14000ed8f:	cmp    ebp,r8d
   14000ed92:	je     0x14000eddf
   14000ed94:	cmp    ebp,0x4
   14000ed97:	jle    0x14000edb1
   14000ed99:	movsxd rcx,ebp
   14000ed9c:	shl    rcx,0x4
   14000eda0:	call   QWORD PTR [rip+0x1142a]        # 0x1400201d0
   14000eda6:	mov    DWORD PTR [rsp+0x20],ebp
   14000edaa:	mov    QWORD PTR [rsp+0x28],rax
   14000edaf:	jmp    0x14000edc3
   14000edb1:	lea    rax,[rsp+0x30]
   14000edb6:	mov    DWORD PTR [rsp+0x20],0x4
   14000edbe:	mov    QWORD PTR [rsp+0x28],rax
   14000edc3:	movsxd r8,ebx
   14000edc6:	mov    rdx,rsi
   14000edc9:	mov    rcx,rax
   14000edcc:	shl    r8,0x4
   14000edd0:	mov    DWORD PTR [rsp+0x24],r14d
   14000edd5:	call   0x14001edd4
   14000edda:	mov    rdx,QWORD PTR [rsp+0x28]
   14000eddf:	lea    rax,[rsp+0x30]
   14000ede4:	mov    DWORD PTR [rsp+0x24],ebx
   14000ede8:	cmp    rsi,rax
   14000edeb:	je     0x14000ee00
   14000eded:	cmp    rsi,rdx
   14000edf0:	je     0x14000ee00
   14000edf2:	mov    rcx,rsi
   14000edf5:	call   QWORD PTR [rip+0x113ed]        # 0x1400201e8
   14000edfb:	mov    rdx,QWORD PTR [rsp+0x28]
   14000ee00:	movsxd rcx,ebx
   14000ee03:	inc    ebx
   14000ee05:	shl    rcx,0x4
   14000ee09:	mov    DWORD PTR [rsp+0x24],ebx
   14000ee0d:	add    rcx,rdx
   14000ee10:	lea    rdx,[rdi+0x18]
   14000ee14:	call   QWORD PTR [rip+0x1161e]        # 0x140020438
   14000ee1a:	mov    ecx,DWORD PTR [rsp+0x74]
   14000ee1e:	cmp    ecx,DWORD PTR [rsp+0x70]
   14000ee22:	jne    0x14000ee38
   14000ee24:	lea    r8d,[rcx+rcx*1]
   14000ee28:	mov    edx,ecx
   14000ee2a:	lea    rcx,[rsp+0x70]
   14000ee2f:	call   0x14000e680
   14000ee34:	mov    ecx,DWORD PTR [rsp+0x74]
   14000ee38:	movsxd rax,ecx
   14000ee3b:	inc    ecx
   14000ee3d:	mov    DWORD PTR [rsp+0x74],ecx
   14000ee41:	mov    rcx,rax
   14000ee44:	mov    rax,QWORD PTR [rsp+0x78]
   14000ee49:	shl    rcx,0x4
   14000ee4d:	add    rcx,rax
   14000ee50:	je     0x14000ee6e
   14000ee52:	mov    eax,DWORD PTR [rdi+0x38]
   14000ee55:	mov    DWORD PTR [rcx],eax
   14000ee57:	mov    eax,DWORD PTR [rdi+0x3c]
   14000ee5a:	mov    DWORD PTR [rcx+0x4],eax
   14000ee5d:	mov    eax,DWORD PTR [rdi+0x40]
   14000ee60:	mov    DWORD PTR [rcx+0x8],eax
   14000ee63:	mov    eax,DWORD PTR [rdi+0x44]
   14000ee66:	mov    DWORD PTR [rcx+0xc],eax
   14000ee69:	mov    rax,QWORD PTR [rsp+0x78]
   14000ee6e:	mov    rdi,QWORD PTR [rdi+0x10]
   14000ee72:	mov    rdx,QWORD PTR [rsp+0x28]
   14000ee77:	mov    ebx,DWORD PTR [rsp+0x24]
   14000ee7b:	mov    r8d,DWORD PTR [rsp+0x20]
   14000ee80:	jmp    0x14000ed71
   14000ee85:	test   rdi,rdi
   14000ee88:	je     0x14000f038
   14000ee8e:	cmp    DWORD PTR [rdi+0x8],0x21
   14000ee92:	jne    0x14000f038
   14000ee98:	mov    rcx,QWORD PTR [r13+0x8]
   14000ee9c:	mov    QWORD PTR [rsp+0xc0],r15
   14000eea4:	mov    rbx,QWORD PTR [rcx+0x18]
   14000eea8:	test   rbx,rbx
   14000eeab:	je     0x14000eebd
   14000eead:	lea    rax,[rbx+0x38]
   14000eeb1:	cmp    rax,QWORD PTR [rcx+0x20]
   14000eeb5:	jae    0x14000eebd
   14000eeb7:	mov    QWORD PTR [rcx+0x18],rax
   14000eebb:	jmp    0x14000eeca
   14000eebd:	mov    edx,0x38
   14000eec2:	call   0x14000ccd0
   14000eec7:	mov    rbx,rax
   14000eeca:	lea    r15,[rip+0x135d7]        # 0x1400224a8
   14000eed1:	test   rbx,rbx
   14000eed4:	je     0x14000ef08
   14000eed6:	lea    rdx,[rdi+0x10]
   14000eeda:	lea    rcx,[rbx+0x18]
   14000eede:	mov    DWORD PTR [rbx+0x8],r14d
   14000eee2:	mov    QWORD PTR [rbx],r15
   14000eee5:	mov    QWORD PTR [rbx+0x10],rbx
   14000eee9:	call   QWORD PTR [rip+0x11541]        # 0x140020430
   14000eeef:	mov    DWORD PTR [rbx+0x28],r14d
   14000eef3:	mov    DWORD PTR [rbx+0x2c],r14d
   14000eef7:	mov    DWORD PTR [rbx+0x30],r14d
   14000eefb:	mov    DWORD PTR [rbx+0x34],r14d
   14000eeff:	mov    DWORD PTR [rbx+0x8],0x5a
   14000ef06:	jmp    0x14000ef0b
   14000ef08:	mov    rbx,r14
   14000ef0b:	mov    eax,DWORD PTR [rdi+0x20]
   14000ef0e:	mov    DWORD PTR [rbx+0x28],eax
   14000ef11:	mov    eax,DWORD PTR [rdi+0x24]
   14000ef14:	mov    DWORD PTR [rbx+0x2c],eax
   14000ef17:	mov    eax,DWORD PTR [rdi+0x28]
   14000ef1a:	mov    DWORD PTR [rbx+0x30],eax
   14000ef1d:	mov    eax,DWORD PTR [rdi+0x2c]
   14000ef20:	mov    DWORD PTR [rbx+0x34],eax
   14000ef23:	mov    eax,DWORD PTR [rsp+0x24]
   14000ef27:	dec    eax
   14000ef29:	movsxd rbp,eax
   14000ef2c:	cmp    eax,0xffffffff
   14000ef2f:	je     0x14000eff6
   14000ef35:	mov    rsi,rbp
   14000ef38:	lea    r12d,[rax+0x1]
   14000ef3c:	shl    rsi,0x4
   14000ef40:	shl    rbp,0x4
   14000ef44:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000ef50:	mov    rcx,QWORD PTR [r13+0x8]
   14000ef54:	mov    rdi,QWORD PTR [rcx+0x18]
   14000ef58:	test   rdi,rdi
   14000ef5b:	je     0x14000ef6d
   14000ef5d:	lea    rax,[rdi+0x38]
   14000ef61:	cmp    rax,QWORD PTR [rcx+0x20]
   14000ef65:	jae    0x14000ef6d
   14000ef67:	mov    QWORD PTR [rcx+0x18],rax
   14000ef6b:	jmp    0x14000ef7a
   14000ef6d:	mov    edx,0x38
   14000ef72:	call   0x14000ccd0
   14000ef77:	mov    rdi,rax
   14000ef7a:	test   rdi,rdi
   14000ef7d:	je     0x14000efc0
   14000ef7f:	mov    rdx,QWORD PTR [rsp+0x28]
   14000ef84:	lea    rcx,[rdi+0x18]
   14000ef88:	mov    DWORD PTR [rdi+0x8],r14d
   14000ef8c:	add    rdx,rbp
   14000ef8f:	mov    QWORD PTR [rdi],r15
   14000ef92:	call   QWORD PTR [rip+0x11498]        # 0x140020430
   14000ef98:	mov    DWORD PTR [rdi+0x28],r14d
   14000ef9c:	mov    DWORD PTR [rdi+0x2c],r14d
   14000efa0:	mov    DWORD PTR [rdi+0x30],r14d
   14000efa4:	mov    DWORD PTR [rdi+0x34],r14d
   14000efa8:	mov    DWORD PTR [rdi+0x8],0x5a
   14000efaf:	mov    rax,QWORD PTR [rbx+0x10]
   14000efb3:	mov    QWORD PTR [rdi+0x10],rax
   14000efb7:	mov    QWORD PTR [rbx+0x10],rdi
   14000efbb:	mov    rbx,rdi
   14000efbe:	jmp    0x14000efc3
   14000efc0:	mov    rbx,r14
   14000efc3:	mov    rcx,QWORD PTR [rsp+0x78]
   14000efc8:	sub    rbp,0x10
   14000efcc:	sub    rsi,0x10
   14000efd0:	sub    r12,0x1
   14000efd4:	mov    eax,DWORD PTR [rsi+rcx*1+0x10]
   14000efd8:	mov    DWORD PTR [rbx+0x28],eax
   14000efdb:	mov    eax,DWORD PTR [rsi+rcx*1+0x14]
   14000efdf:	mov    DWORD PTR [rbx+0x2c],eax
   14000efe2:	mov    eax,DWORD PTR [rsi+rcx*1+0x18]
   14000efe6:	mov    DWORD PTR [rbx+0x30],eax
   14000efe9:	mov    eax,DWORD PTR [rsi+rcx*1+0x1c]
   14000efed:	mov    DWORD PTR [rbx+0x34],eax
   14000eff0:	jne    0x14000ef50
   14000eff6:	mov    rdi,QWORD PTR [rbx+0x10]
   14000effa:	mov    r15,QWORD PTR [rsp+0xc0]
   14000f002:	mov    QWORD PTR [rbx+0x10],r14
   14000f006:	mov    rcx,QWORD PTR [rsp+0x78]
   14000f00b:	lea    rax,[rsp+0x80]
   14000f013:	cmp    rcx,rax
   14000f016:	je     0x14000f01e
   14000f018:	call   QWORD PTR [rip+0x111ca]        # 0x1400201e8
   14000f01e:	mov    rcx,QWORD PTR [rsp+0x28]
   14000f023:	lea    rax,[rsp+0x30]
   14000f028:	cmp    rcx,rax
   14000f02b:	je     0x14000f033
   14000f02d:	call   QWORD PTR [rip+0x111b5]        # 0x1400201e8
   14000f033:	mov    rax,rdi
   14000f036:	jmp    0x14000f068
   14000f038:	lea    rcx,[rsp+0x80]
   14000f040:	cmp    rax,rcx
   14000f043:	je     0x14000f053
   14000f045:	mov    rcx,rax
   14000f048:	call   QWORD PTR [rip+0x1119a]        # 0x1400201e8
   14000f04e:	mov    rdx,QWORD PTR [rsp+0x28]
   14000f053:	lea    rax,[rsp+0x30]
   14000f058:	cmp    rdx,rax
   14000f05b:	je     0x14000f066
   14000f05d:	mov    rcx,rdx
   14000f060:	call   QWORD PTR [rip+0x11182]        # 0x1400201e8
   14000f066:	xor    eax,eax
   14000f068:	mov    r12,QWORD PTR [rsp+0x100]
   14000f070:	mov    rsi,QWORD PTR [rsp+0xf8]
   14000f078:	mov    rbp,QWORD PTR [rsp+0xf0]
   14000f080:	add    rsp,0xc8
   14000f087:	pop    r14
   14000f089:	pop    r13
   14000f08b:	pop    rdi
   14000f08c:	pop    rbx
   14000f08d:	ret    
   14000f08e:	int3   
   14000f08f:	int3   
   14000f090:	mov    QWORD PTR [rsp+0x8],rbx
   14000f095:	mov    QWORD PTR [rsp+0x18],rbp
   14000f09a:	mov    QWORD PTR [rsp+0x20],rsi
   14000f09f:	mov    DWORD PTR [rsp+0x10],edx
   14000f0a3:	push   rdi
   14000f0a4:	sub    rsp,0x20
   14000f0a8:	mov    rdx,QWORD PTR [rcx]
   14000f0ab:	movsxd rdi,r8d
   14000f0ae:	mov    rbp,rcx
   14000f0b1:	movsxd rax,DWORD PTR [rdx+0x8]
   14000f0b5:	mov    r8d,edi
   14000f0b8:	lea    rbx,[rdx+rax*8+0x10]
   14000f0bd:	lea    rdx,[rsp+0x38]
   14000f0c2:	call   QWORD PTR [rip+0x11598]        # 0x140020660
   14000f0c8:	mov    r10,QWORD PTR [rbp+0x0]
   14000f0cc:	movsxd rdx,DWORD PTR [rsp+0x38]
   14000f0d1:	movsxd r9,DWORD PTR [r10+0x8]
   14000f0d5:	mov    rcx,rbp
   14000f0d8:	mov    rsi,rax
   14000f0db:	add    rdx,r9
   14000f0de:	lea    r8,[r10+rdx*8+0x10]
   14000f0e3:	lea    rdx,[r10+r9*8+0x10]
   14000f0e8:	mov    r9,rbx
   14000f0eb:	call   0x140001d60
   14000f0f0:	mov    rdx,QWORD PTR [rbp+0x0]
   14000f0f4:	movsxd r11,DWORD PTR [rsp+0x38]
   14000f0f9:	movsxd rcx,DWORD PTR [rdx+0xc]
   14000f0fd:	lea    r9,[rbx+r11*8]
   14000f101:	lea    r8,[rdx+rcx*8+0x10]
   14000f106:	movsxd rcx,DWORD PTR [rdx+0x8]
   14000f10a:	add    rcx,r11
   14000f10d:	add    rcx,rdi
   14000f110:	lea    rdx,[rdx+rcx*8+0x10]
   14000f115:	mov    rcx,rbp
   14000f118:	call   0x140001d60
   14000f11d:	mov    r11d,DWORD PTR [rsi]
   14000f120:	test   r11d,r11d
   14000f123:	je     0x14000f136
   14000f125:	cmp    r11d,0xffffffff
   14000f129:	je     0x14000f141
   14000f12b:	lock add DWORD PTR [rsi],0xffffffff
   14000f12f:	setne  al
   14000f132:	test   al,al
   14000f134:	jne    0x14000f141
   14000f136:	mov    rdx,rsi
   14000f139:	mov    rcx,rbp
   14000f13c:	call   0x140001ce0
   14000f141:	mov    rdx,QWORD PTR [rbp+0x0]
   14000f145:	movsxd rax,DWORD PTR [rsp+0x38]
   14000f14a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f14f:	movsxd rcx,DWORD PTR [rdx+0x8]
   14000f153:	mov    rbp,QWORD PTR [rsp+0x40]
   14000f158:	mov    rsi,QWORD PTR [rsp+0x48]
   14000f15d:	add    rcx,rax
   14000f160:	lea    rax,[rdx+rcx*8+0x10]
   14000f165:	add    rsp,0x20
   14000f169:	pop    rdi
   14000f16a:	ret    
   14000f16b:	int3   
   14000f16c:	int3   
   14000f16d:	int3   
   14000f16e:	int3   
   14000f16f:	int3   
   14000f170:	rex push rbx
   14000f172:	sub    rsp,0x20
   14000f176:	mov    rbx,rcx
   14000f179:	mov    QWORD PTR [rcx],rdx
   14000f17c:	mov    rcx,rdx
   14000f17f:	call   0x140016b30
   14000f184:	mov    QWORD PTR [rbx+0x8],rax
   14000f188:	xor    eax,eax
   14000f18a:	mov    DWORD PTR [rbx+0x10],eax
   14000f18d:	mov    DWORD PTR [rbx+0x14],eax
   14000f190:	mov    QWORD PTR [rbx+0x18],rax
   14000f194:	mov    QWORD PTR [rbx+0x20],rax
   14000f198:	mov    QWORD PTR [rbx+0x28],rax
   14000f19c:	mov    QWORD PTR [rbx+0x30],rax
   14000f1a0:	mov    QWORD PTR [rbx+0x38],rax
   14000f1a4:	mov    QWORD PTR [rbx+0x48],rax
   14000f1a8:	mov    DWORD PTR [rbx+0x50],eax
   14000f1ab:	mov    DWORD PTR [rbx+0x54],eax
   14000f1ae:	mov    DWORD PTR [rbx+0x58],eax
   14000f1b1:	mov    DWORD PTR [rbx+0x5c],eax
   14000f1b4:	mov    DWORD PTR [rbx+0x60],eax
   14000f1b7:	mov    DWORD PTR [rbx+0x64],eax
   14000f1ba:	mov    DWORD PTR [rbx+0x68],eax
   14000f1bd:	mov    DWORD PTR [rbx+0x6c],eax
   14000f1c0:	mov    DWORD PTR [rbx+0x70],eax
   14000f1c3:	mov    DWORD PTR [rbx+0x74],eax
   14000f1c6:	mov    DWORD PTR [rbx+0x88],eax
   14000f1cc:	mov    DWORD PTR [rbx+0x8c],eax
   14000f1d2:	mov    DWORD PTR [rbx+0x90],eax
   14000f1d8:	mov    DWORD PTR [rbx+0x94],eax
   14000f1de:	mov    QWORD PTR [rbx+0x98],rax
   14000f1e5:	mov    DWORD PTR [rbx+0xa0],eax
   14000f1eb:	mov    DWORD PTR [rbx+0xa4],eax
   14000f1f1:	mov    DWORD PTR [rbx+0xb8],eax
   14000f1f7:	mov    DWORD PTR [rbx+0xbc],eax
   14000f1fd:	mov    DWORD PTR [rbx+0xc0],eax
   14000f203:	mov    DWORD PTR [rbx+0xc4],eax
   14000f209:	mov    QWORD PTR [rbx+0xc8],rax
   14000f210:	mov    DWORD PTR [rbx+0xd0],eax
   14000f216:	mov    DWORD PTR [rbx+0xd4],eax
   14000f21c:	mov    DWORD PTR [rbx+0xe8],eax
   14000f222:	mov    DWORD PTR [rbx+0xec],eax
   14000f228:	mov    DWORD PTR [rbx+0xf0],eax
   14000f22e:	mov    DWORD PTR [rbx+0xf4],eax
   14000f234:	mov    QWORD PTR [rbx+0xf8],rax
   14000f23b:	mov    DWORD PTR [rbx+0x100],eax
   14000f241:	mov    DWORD PTR [rbx+0x104],eax
   14000f247:	mov    QWORD PTR [rbx+0x108],rax
   14000f24e:	mov    QWORD PTR [rbx+0x110],rax
   14000f255:	mov    rax,QWORD PTR [rip+0x11504]        # 0x140020760
   14000f25c:	mov    QWORD PTR [rbx+0x118],rax
   14000f263:	mov    rax,rbx
   14000f266:	add    rsp,0x20
   14000f26a:	pop    rbx
   14000f26b:	ret    
   14000f26c:	int3   
   14000f26d:	int3   
   14000f26e:	int3   
   14000f26f:	int3   
   14000f270:	rex push rbx
   14000f272:	sub    rsp,0x20
   14000f276:	cmp    DWORD PTR [rcx+0x14],0x0
   14000f27a:	mov    rbx,rcx
   14000f27d:	je     0x14000f2a7
   14000f27f:	mov    rcx,QWORD PTR [rcx+0x18]
   14000f283:	call   QWORD PTR [rip+0x10f5f]        # 0x1400201e8
   14000f289:	mov    rcx,QWORD PTR [rbx+0x20]
   14000f28d:	call   QWORD PTR [rip+0x10f55]        # 0x1400201e8
   14000f293:	mov    rcx,QWORD PTR [rbx+0x28]
   14000f297:	call   QWORD PTR [rip+0x10f4b]        # 0x1400201e8
   14000f29d:	mov    rcx,QWORD PTR [rbx+0x30]
   14000f2a1:	call   QWORD PTR [rip+0x10f41]        # 0x1400201e8
   14000f2a7:	lea    rcx,[rbx+0x118]
   14000f2ae:	mov    rdx,QWORD PTR [rcx]
   14000f2b1:	mov    eax,DWORD PTR [rdx]
   14000f2b3:	test   eax,eax
   14000f2b5:	je     0x14000f2c7
   14000f2b7:	cmp    eax,0xffffffff
   14000f2ba:	je     0x14000f2cf
   14000f2bc:	lock add DWORD PTR [rdx],0xffffffff
   14000f2c0:	setne  al
   14000f2c3:	test   al,al
   14000f2c5:	jne    0x14000f2cf
   14000f2c7:	mov    rdx,QWORD PTR [rcx]
   14000f2ca:	call   0x140001ce0
   14000f2cf:	add    rsp,0x20
   14000f2d3:	pop    rbx
   14000f2d4:	ret    
   14000f2d5:	int3   
   14000f2d6:	int3   
   14000f2d7:	int3   
   14000f2d8:	int3   
   14000f2d9:	int3   
   14000f2da:	int3   
   14000f2db:	int3   
   14000f2dc:	int3   
   14000f2dd:	int3   
   14000f2de:	int3   
   14000f2df:	int3   
   14000f2e0:	mov    QWORD PTR [rsp+0x8],rbx
   14000f2e5:	push   rdi
   14000f2e6:	sub    rsp,0x20
   14000f2ea:	mov    rax,QWORD PTR [rcx]
   14000f2ed:	mov    rdi,rdx
   14000f2f0:	mov    rbx,rcx
   14000f2f3:	mov    r8d,DWORD PTR [rax]
   14000f2f6:	cmp    r8d,0x1
   14000f2fa:	je     0x14000f313
   14000f2fc:	test   r8d,r8d
   14000f2ff:	je     0x14000f313
   14000f301:	mov    edx,0x7fffffff
   14000f306:	mov    r8d,0x1
   14000f30c:	call   0x14000f090
   14000f311:	jmp    0x14000f319
   14000f313:	call   QWORD PTR [rip+0x1131f]        # 0x140020638
   14000f319:	mov    r8,rdi
   14000f31c:	mov    rdx,rax
   14000f31f:	mov    rcx,rbx
   14000f322:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f327:	add    rsp,0x20
   14000f32b:	pop    rdi
   14000f32c:	jmp    0x14000e790
   14000f331:	int3   
   14000f332:	int3   
   14000f333:	int3   
   14000f334:	int3   
   14000f335:	int3   
   14000f336:	int3   
   14000f337:	int3   
   14000f338:	int3   
   14000f339:	int3   
   14000f33a:	int3   
   14000f33b:	int3   
   14000f33c:	int3   
   14000f33d:	int3   
   14000f33e:	int3   
   14000f33f:	int3   
   14000f340:	rex push rbx
   14000f342:	push   rbp
   14000f343:	push   rsi
   14000f344:	push   rdi
   14000f345:	push   r12
   14000f347:	push   r13
   14000f349:	push   r14
   14000f34b:	push   r15
   14000f34d:	sub    rsp,0x3c8
   14000f354:	mov    rbp,rcx
   14000f357:	mov    rcx,QWORD PTR [rcx]
   14000f35a:	xor    r12d,r12d
   14000f35d:	mov    edi,edx
   14000f35f:	mov    esi,r12d
   14000f362:	mov    DWORD PTR [rsp+0x30],r12d
   14000f367:	call   0x140016af0
   14000f36c:	lea    r14,[rbp+0x78]
   14000f370:	or     r15d,0xffffffff
   14000f374:	mov    rbx,rax
   14000f377:	mov    QWORD PTR [rsp+0x38],rax
   14000f37c:	xor    al,al
   14000f37e:	mov    DWORD PTR [r14],edi
   14000f381:	mov    r13d,r12d
   14000f384:	mov    BYTE PTR [rsp+0x418],al
   14000f38b:	mov    QWORD PTR [rbp+0x108],r14
   14000f392:	cmp    edi,0x67
   14000f395:	jne    0x14000f5a7
   14000f39b:	mov    rcx,rbx
   14000f39e:	call   0x140017ff0
   14000f3a3:	test   al,al
   14000f3a5:	jne    0x14000f5a7
   14000f3ab:	lea    rax,[rip+0x11466]        # 0x140020818
   14000f3b2:	mov    QWORD PTR [rsp+0xb8],rax
   14000f3ba:	mov    rcx,QWORD PTR [rbp+0x0]
   14000f3be:	call   0x140016b10
   14000f3c3:	lea    rdi,[rsp+0xb8]
   14000f3cb:	lea    rcx,[rsp+0x98]
   14000f3d3:	test   rax,rax
   14000f3d6:	mov    DWORD PTR [rsp+0x80],0x1
   14000f3e1:	mov    DWORD PTR [rsp+0x84],r12d
   14000f3e9:	mov    DWORD PTR [rsp+0x88],r12d
   14000f3f1:	mov    DWORD PTR [rsp+0x8c],r12d
   14000f3f9:	mov    DWORD PTR [rsp+0x90],r12d
   14000f401:	cmovne rdi,rax
   14000f405:	call   QWORD PTR [rip+0x1118d]        # 0x140020598
   14000f40b:	lea    r8,[rsp+0x80]
   14000f413:	mov    rdx,rdi
   14000f416:	mov    rcx,rbx
   14000f419:	call   0x14001b060
   14000f41e:	test   al,al
   14000f420:	jne    0x14000f4c4
   14000f426:	lea    rcx,[rbp+0x118]
   14000f42d:	mov    rax,QWORD PTR [rcx]
   14000f430:	mov    edx,DWORD PTR [rax]
   14000f432:	cmp    edx,0x1
   14000f435:	je     0x14000f44c
   14000f437:	test   edx,edx
   14000f439:	je     0x14000f44c
   14000f43b:	lea    r8d,[r12+0x1]
   14000f440:	mov    edx,0x7fffffff
   14000f445:	call   0x14000f090
   14000f44a:	jmp    0x14000f452
   14000f44c:	call   QWORD PTR [rip+0x111e6]        # 0x140020638
   14000f452:	mov    ecx,0x20
   14000f457:	mov    rbx,rax
   14000f45a:	call   0x14001ee64
   14000f45f:	mov    rdi,rax
   14000f462:	test   rax,rax
   14000f465:	je     0x14000f4b1
   14000f467:	mov    eax,DWORD PTR [rsp+0x80]
   14000f46e:	lea    rcx,[rsp+0x84]
   14000f476:	lea    rdx,[rsp+0x98]
   14000f47e:	mov    DWORD PTR [rdi],eax
   14000f480:	mov    eax,DWORD PTR [rcx]
   14000f482:	mov    DWORD PTR [rdi+0x4],eax
   14000f485:	mov    eax,DWORD PTR [rcx+0x4]
   14000f488:	mov    DWORD PTR [rdi+0x8],eax
   14000f48b:	mov    eax,DWORD PTR [rcx+0x8]
   14000f48e:	mov    DWORD PTR [rdi+0xc],eax
   14000f491:	mov    eax,DWORD PTR [rcx+0xc]
   14000f494:	lea    rcx,[rdi+0x18]
   14000f498:	mov    DWORD PTR [rdi+0x10],eax
   14000f49b:	call   QWORD PTR [rip+0x112f7]        # 0x140020798
   14000f4a1:	mov    QWORD PTR [rbx],rdi
   14000f4a4:	lea    rcx,[rsp+0x98]
   14000f4ac:	jmp    0x1400162e2
   14000f4b1:	mov    rdi,r12
   14000f4b4:	mov    QWORD PTR [rbx],r12
   14000f4b7:	lea    rcx,[rsp+0x98]
   14000f4bf:	jmp    0x1400162e2
   14000f4c4:	mov    eax,DWORD PTR [rbx+0x80]
   14000f4ca:	lea    rcx,[rbx+0x8]
   14000f4ce:	mov    DWORD PTR [rbp+0xa8],eax
   14000f4d4:	mov    rax,QWORD PTR [rbx+0x68]
   14000f4d8:	mov    QWORD PTR [rbp+0xb0],rax
   14000f4df:	mov    rdi,QWORD PTR [rbx+0x50]
   14000f4e3:	call   QWORD PTR [rip+0x10f37]        # 0x140020420
   14000f4e9:	mov    rcx,rdi
   14000f4ec:	sub    rdi,QWORD PTR [rbx+0x48]
   14000f4f0:	lea    rdx,[rbx+0x20]
   14000f4f4:	sub    rcx,rax
   14000f4f7:	mov    eax,DWORD PTR [rbx+0x84]
   14000f4fd:	sar    rdi,1
   14000f500:	mov    DWORD PTR [rsp+0x5c],eax
   14000f504:	mov    eax,DWORD PTR [rbx+0x88]
   14000f50a:	sar    rcx,1
   14000f50d:	mov    DWORD PTR [rsp+0x58],ecx
   14000f511:	lea    rcx,[rsp+0x58]
   14000f516:	mov    DWORD PTR [rsp+0x60],eax
   14000f51a:	inc    edi
   14000f51c:	mov    DWORD PTR [rsp+0x64],edi
   14000f520:	mov    eax,DWORD PTR [rcx]
   14000f522:	mov    DWORD PTR [rbp+0xb8],eax
   14000f528:	mov    eax,DWORD PTR [rcx+0x4]
   14000f52b:	mov    DWORD PTR [rbp+0xbc],eax
   14000f531:	mov    eax,DWORD PTR [rcx+0x8]
   14000f534:	mov    DWORD PTR [rbp+0xc0],eax
   14000f53a:	mov    eax,DWORD PTR [rcx+0xc]
   14000f53d:	lea    rcx,[rsp+0x140]
   14000f545:	mov    DWORD PTR [rbp+0xc4],eax
   14000f54b:	call   QWORD PTR [rip+0x10edf]        # 0x140020430
   14000f551:	mov    rax,QWORD PTR [rsp+0x140]
   14000f559:	mov    QWORD PTR [rbp+0xc8],rax
   14000f560:	mov    eax,DWORD PTR [rsp+0x148]
   14000f567:	lea    rcx,[rsp+0x98]
   14000f56f:	mov    DWORD PTR [rbp+0xd0],eax
   14000f575:	mov    eax,DWORD PTR [rsp+0x14c]
   14000f57c:	mov    DWORD PTR [rbp+0xd4],eax
   14000f582:	lea    rax,[rbp+0xd8]
   14000f589:	mov    QWORD PTR [rbp+0x110],rax
   14000f590:	call   QWORD PTR [rip+0x111ea]        # 0x140020780
   14000f596:	lea    rdx,[rip+0x1127b]        # 0x140020818
   14000f59d:	mov    QWORD PTR [rsp+0xb8],rdx
   14000f5a5:	jmp    0x14000f5b5
   14000f5a7:	lea    rax,[rbp+0xa8]
   14000f5ae:	mov    QWORD PTR [rbp+0x110],rax
   14000f5b5:	mov    DWORD PTR [rbp+0x10],0xffffffff
   14000f5bc:	lea    r9,[rip+0xffffffffffff0a3d]        # 0x140000000
   14000f5c3:	mov    QWORD PTR [rbp+0x38],r12
   14000f5c7:	inc    DWORD PTR [rbp+0x10]
   14000f5ca:	mov    eax,DWORD PTR [rbp+0x14]
   14000f5cd:	lea    rdi,[rip+0x1346c]        # 0x140022a40
   14000f5d4:	mov    edx,0xffffff96
   14000f5d9:	cmp    DWORD PTR [rbp+0x10],eax
   14000f5dc:	jne    0x14000f654
   14000f5de:	test   eax,eax
   14000f5e0:	jne    0x14000f5eb
   14000f5e2:	mov    DWORD PTR [rbp+0x14],0x80
   14000f5e9:	jmp    0x14000f5f0
   14000f5eb:	add    eax,eax
   14000f5ed:	mov    DWORD PTR [rbp+0x14],eax
   14000f5f0:	movsxd rdx,DWORD PTR [rbp+0x14]
   14000f5f4:	mov    rcx,QWORD PTR [rbp+0x18]
   14000f5f8:	shl    rdx,0x3
   14000f5fc:	call   QWORD PTR [rip+0x10bd6]        # 0x1400201d8
   14000f602:	mov    QWORD PTR [rbp+0x18],rax
   14000f606:	movsxd rdx,DWORD PTR [rbp+0x14]
   14000f60a:	mov    rcx,QWORD PTR [rbp+0x20]
   14000f60e:	shl    rdx,0x2
   14000f612:	call   QWORD PTR [rip+0x10bc0]        # 0x1400201d8
   14000f618:	mov    QWORD PTR [rbp+0x20],rax
   14000f61c:	movsxd rdx,DWORD PTR [rbp+0x14]
   14000f620:	mov    rcx,QWORD PTR [rbp+0x28]
   14000f624:	shl    rdx,0x4
   14000f628:	call   QWORD PTR [rip+0x10baa]        # 0x1400201d8
   14000f62e:	mov    QWORD PTR [rbp+0x28],rax
   14000f632:	movsxd rdx,DWORD PTR [rbp+0x14]
   14000f636:	mov    rcx,QWORD PTR [rbp+0x30]
   14000f63a:	shl    rdx,0x4
   14000f63e:	call   QWORD PTR [rip+0x10b94]        # 0x1400201d8
   14000f644:	lea    r9,[rip+0xffffffffffff09b5]        # 0x140000000
   14000f64b:	mov    edx,0xffffff96
   14000f650:	mov    QWORD PTR [rbp+0x30],rax
   14000f654:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000f658:	mov    rax,QWORD PTR [rbp+0x20]
   14000f65c:	mov    DWORD PTR [rax+rcx*4],r13d
   14000f660:	cmp    r15d,0xffffffff
   14000f664:	jne    0x14000f7a2
   14000f66a:	movsxd rax,r13d
   14000f66d:	cmp    dx,WORD PTR [r9+rax*2+0x23f70]
   14000f676:	je     0x14000f7a2
   14000f67c:	mov    eax,DWORD PTR [rbp+0x58]
   14000f67f:	mov    DWORD PTR [rbp+0x68],eax
   14000f682:	mov    eax,DWORD PTR [rbp+0x5c]
   14000f685:	mov    DWORD PTR [rbp+0x6c],eax
   14000f688:	mov    eax,DWORD PTR [rbp+0x60]
   14000f68b:	mov    DWORD PTR [rbp+0x70],eax
   14000f68e:	mov    eax,DWORD PTR [rbp+0x64]
   14000f691:	mov    DWORD PTR [rbp+0x74],eax
   14000f694:	mov    rax,QWORD PTR [rbp+0x110]
   14000f69b:	cmp    QWORD PTR [rbp+0x108],rax
   14000f6a2:	jne    0x14000f755
   14000f6a8:	mov    rcx,rbx
   14000f6ab:	call   0x14001aef0
   14000f6b0:	lea    rdx,[rbx+0x20]
   14000f6b4:	lea    rcx,[rsp+0x190]
   14000f6bc:	mov    r15d,eax
   14000f6bf:	mov    rax,QWORD PTR [rbx+0x68]
   14000f6c3:	mov    QWORD PTR [rbp+0x40],rax
   14000f6c7:	call   QWORD PTR [rip+0x10d63]        # 0x140020430
   14000f6cd:	mov    rax,QWORD PTR [rsp+0x190]
   14000f6d5:	mov    QWORD PTR [rbp+0x48],rax
   14000f6d9:	mov    eax,DWORD PTR [rsp+0x198]
   14000f6e0:	lea    rcx,[rbx+0x8]
   14000f6e4:	mov    DWORD PTR [rbp+0x50],eax
   14000f6e7:	mov    eax,DWORD PTR [rsp+0x19c]
   14000f6ee:	mov    DWORD PTR [rbp+0x54],eax
   14000f6f1:	mov    rdi,QWORD PTR [rbx+0x50]
   14000f6f5:	call   QWORD PTR [rip+0x10d25]        # 0x140020420
   14000f6fb:	mov    rcx,rdi
   14000f6fe:	sub    rdi,QWORD PTR [rbx+0x48]
   14000f702:	lea    r9,[rip+0xffffffffffff08f7]        # 0x140000000
   14000f709:	sub    rcx,rax
   14000f70c:	mov    eax,DWORD PTR [rbx+0x84]
   14000f712:	sar    rdi,1
   14000f715:	mov    DWORD PTR [rsp+0x5c],eax
   14000f719:	mov    eax,DWORD PTR [rbx+0x88]
   14000f71f:	sar    rcx,1
   14000f722:	mov    DWORD PTR [rsp+0x58],ecx
   14000f726:	lea    rcx,[rsp+0x58]
   14000f72b:	mov    DWORD PTR [rsp+0x60],eax
   14000f72f:	inc    edi
   14000f731:	mov    DWORD PTR [rsp+0x64],edi
   14000f735:	mov    eax,DWORD PTR [rcx]
   14000f737:	lea    rdi,[rip+0x13302]        # 0x140022a40
   14000f73e:	mov    DWORD PTR [rbp+0x58],eax
   14000f741:	mov    eax,DWORD PTR [rcx+0x4]
   14000f744:	mov    DWORD PTR [rbp+0x5c],eax
   14000f747:	mov    eax,DWORD PTR [rcx+0x8]
   14000f74a:	mov    DWORD PTR [rbp+0x60],eax
   14000f74d:	mov    eax,DWORD PTR [rcx+0xc]
   14000f750:	mov    DWORD PTR [rbp+0x64],eax
   14000f753:	jmp    0x14000f7a2
   14000f755:	mov    rcx,QWORD PTR [rbp+0x108]
   14000f75c:	mov    rax,QWORD PTR [rcx+0x8]
   14000f760:	mov    r15d,DWORD PTR [rcx]
   14000f763:	mov    QWORD PTR [rbp+0x40],rax
   14000f767:	mov    rax,QWORD PTR [rcx+0x20]
   14000f76b:	mov    QWORD PTR [rbp+0x48],rax
   14000f76f:	mov    eax,DWORD PTR [rcx+0x28]
   14000f772:	mov    DWORD PTR [rbp+0x50],eax
   14000f775:	mov    eax,DWORD PTR [rcx+0x2c]
   14000f778:	mov    DWORD PTR [rbp+0x54],eax
   14000f77b:	mov    rcx,QWORD PTR [rbp+0x108]
   14000f782:	mov    eax,DWORD PTR [rcx+0x10]
   14000f785:	mov    DWORD PTR [rbp+0x58],eax
   14000f788:	mov    eax,DWORD PTR [rcx+0x14]
   14000f78b:	mov    DWORD PTR [rbp+0x5c],eax
   14000f78e:	mov    eax,DWORD PTR [rcx+0x18]
   14000f791:	mov    DWORD PTR [rbp+0x60],eax
   14000f794:	mov    eax,DWORD PTR [rcx+0x1c]
   14000f797:	mov    DWORD PTR [rbp+0x64],eax
   14000f79a:	add    QWORD PTR [rbp+0x108],0x30
   14000f7a2:	movsxd rdx,r13d
   14000f7a5:	movsx  eax,WORD PTR [r9+rdx*2+0x23f70]
   14000f7ae:	add    eax,r15d
   14000f7b1:	js     0x14000f7cf
   14000f7b3:	movsxd rcx,eax
   14000f7b6:	movsx  eax,WORD PTR [r9+rcx*2+0x26620]
   14000f7bf:	cmp    eax,r15d
   14000f7c2:	jne    0x14000f7cf
   14000f7c4:	movsx  r13d,WORD PTR [r9+rcx*2+0x249e0]
   14000f7cd:	jmp    0x14000f7db
   14000f7cf:	movsx  r13d,WORD PTR [r9+rdx*2+0x23950]
   14000f7d8:	neg    r13d
   14000f7db:	test   r13d,r13d
   14000f7de:	jle    0x14000f84b
   14000f7e0:	cmp    r13d,0x299
   14000f7e7:	je     0x140015eb6
   14000f7ed:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000f7f1:	mov    rcx,QWORD PTR [rbp+0x18]
   14000f7f5:	mov    rax,QWORD PTR [rbp+0x40]
   14000f7f9:	mov    QWORD PTR [rcx+rdx*8],rax
   14000f7fd:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000f801:	mov    rax,QWORD PTR [rbp+0x48]
   14000f805:	shl    rcx,0x4
   14000f809:	or     r15d,0xffffffff
   14000f80d:	add    rcx,QWORD PTR [rbp+0x30]
   14000f811:	mov    QWORD PTR [rcx],rax
   14000f814:	mov    eax,DWORD PTR [rbp+0x50]
   14000f817:	mov    DWORD PTR [rcx+0x8],eax
   14000f81a:	mov    eax,DWORD PTR [rbp+0x54]
   14000f81d:	mov    DWORD PTR [rcx+0xc],eax
   14000f820:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000f824:	mov    eax,DWORD PTR [rbp+0x58]
   14000f827:	mov    rcx,QWORD PTR [rbp+0x28]
   14000f82b:	add    rdx,rdx
   14000f82e:	mov    DWORD PTR [rcx+rdx*8],eax
   14000f831:	mov    eax,DWORD PTR [rbp+0x5c]
   14000f834:	mov    DWORD PTR [rcx+rdx*8+0x4],eax
   14000f838:	mov    eax,DWORD PTR [rbp+0x60]
   14000f83b:	mov    DWORD PTR [rcx+rdx*8+0x8],eax
   14000f83f:	mov    eax,DWORD PTR [rbp+0x64]
   14000f842:	mov    DWORD PTR [rcx+rdx*8+0xc],eax
   14000f846:	jmp    0x140015565
   14000f84b:	jns    0x140015565
   14000f851:	or     ecx,0xffffffff
   14000f854:	sub    ecx,r13d
   14000f857:	movsxd r14,ecx
   14000f85a:	movsx  eax,WORD PTR [r9+r14*2+0x23680]
   14000f863:	sub    DWORD PTR [rbp+0x10],eax
   14000f866:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000f86a:	cmp    ecx,0x163
   14000f870:	ja     0x140015510
   14000f876:	movsxd rax,ecx
   14000f879:	movzx  eax,BYTE PTR [r9+rax*1+0x165d8]
   14000f882:	mov    ecx,DWORD PTR [r9+rax*4+0x16300]
   14000f88a:	add    rcx,r9
   14000f88d:	jmp    rcx
   14000f88f:	mov    rcx,QWORD PTR [rbp+0x18]
   14000f893:	mov    rax,QWORD PTR [rcx+rdx*8+0x8]
   14000f898:	mov    QWORD PTR [rcx+rdx*8],rax
   14000f89c:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000f8a0:	mov    rax,QWORD PTR [rbp+0x18]
   14000f8a4:	mov    rcx,QWORD PTR [rax+rcx*8]
   14000f8a8:	mov    QWORD PTR [rbp+0x38],rcx
   14000f8ac:	jmp    0x140015510
   14000f8b1:	mov    rcx,QWORD PTR [rbp+0x8]
   14000f8b5:	cmp    QWORD PTR [rcx+0x18],r12
   14000f8b9:	je     0x14000f8cf
   14000f8bb:	mov    r8,QWORD PTR [rcx+0x18]
   14000f8bf:	lea    rax,[r8+0x20]
   14000f8c3:	cmp    rax,QWORD PTR [rcx+0x20]
   14000f8c7:	jae    0x14000f8cf
   14000f8c9:	mov    QWORD PTR [rcx+0x18],rax
   14000f8cd:	jmp    0x14000f8e3
   14000f8cf:	mov    edx,0x20
   14000f8d4:	call   0x14000ccd0
   14000f8d9:	lea    r9,[rip+0xffffffffffff0720]        # 0x140000000
   14000f8e0:	mov    r8,rax
   14000f8e3:	test   r8,r8
   14000f8e6:	je     0x14000f934
   14000f8e8:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000f8ec:	mov    rax,QWORD PTR [rbp+0x18]
   14000f8f0:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   14000f8f5:	mov    rdi,QWORD PTR [rdx+0x10]
   14000f8f9:	mov    QWORD PTR [rdx+0x10],r12
   14000f8fd:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000f901:	mov    rax,QWORD PTR [rbp+0x18]
   14000f905:	mov    rdx,QWORD PTR [rax+rcx*8]
   14000f909:	lea    rax,[rip+0x12d78]        # 0x140022688
   14000f910:	mov    QWORD PTR [r8],rax
   14000f913:	mov    QWORD PTR [r8+0x10],rdx
   14000f917:	mov    QWORD PTR [r8+0x18],rdi
   14000f91b:	mov    DWORD PTR [r8+0x8],0x57
   14000f923:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000f927:	mov    rax,QWORD PTR [rbp+0x18]
   14000f92b:	mov    QWORD PTR [rax+rcx*8],r8
   14000f92f:	jmp    0x140015510
   14000f934:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000f938:	mov    rax,QWORD PTR [rbp+0x18]
   14000f93c:	mov    r8,r12
   14000f93f:	mov    QWORD PTR [rax+rcx*8],r12
   14000f943:	jmp    0x140015510
   14000f948:	mov    rax,QWORD PTR [rbp+0x18]
   14000f94c:	mov    rdx,QWORD PTR [rax+rdx*8]
   14000f950:	mov    rdi,QWORD PTR [rdx+0x18]
   14000f954:	mov    QWORD PTR [rdx+0x18],r12
   14000f958:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000f95c:	mov    rax,QWORD PTR [rbp+0x18]
   14000f960:	mov    QWORD PTR [rax+rcx*8],rdi
   14000f964:	jmp    0x140015510
   14000f969:	mov    rdx,QWORD PTR [rbp+0x8]
   14000f96d:	mov    ecx,0x20
   14000f972:	call   0x14000e810
   14000f977:	mov    rdi,rax
   14000f97a:	test   rax,rax
   14000f97d:	je     0x14000f9a6
   14000f97f:	mov    rax,QWORD PTR [rbp+0x18]
   14000f983:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000f987:	mov    rdx,QWORD PTR [rax+rcx*8]
   14000f98b:	lea    rax,[rip+0x12ca6]        # 0x140022638
   14000f992:	mov    QWORD PTR [rdi],rax
   14000f995:	mov    QWORD PTR [rdi+0x10],rdx
   14000f999:	mov    QWORD PTR [rdi+0x18],rdi
   14000f99d:	mov    DWORD PTR [rdi+0x8],0x5e
   14000f9a4:	jmp    0x14000f9a9
   14000f9a6:	mov    rdi,r12
   14000f9a9:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000f9ad:	mov    rax,QWORD PTR [rbp+0x18]
   14000f9b1:	lea    r9,[rip+0xffffffffffff0648]        # 0x140000000
   14000f9b8:	mov    QWORD PTR [rax+rcx*8],rdi
   14000f9bc:	jmp    0x140015510
   14000f9c1:	mov    rdx,QWORD PTR [rbp+0x8]
   14000f9c5:	mov    ecx,0x20
   14000f9ca:	call   0x14000e810
   14000f9cf:	mov    rdi,rax
   14000f9d2:	test   rax,rax
   14000f9d5:	je     0x14000f9a6
   14000f9d7:	mov    rax,QWORD PTR [rbp+0x18]
   14000f9db:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000f9df:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   14000f9e4:	mov    rcx,QWORD PTR [rax+rcx*8]
   14000f9e8:	lea    rax,[rip+0x12c49]        # 0x140022638
   14000f9ef:	mov    QWORD PTR [rdi],rax
   14000f9f2:	mov    QWORD PTR [rdi+0x10],rdx
   14000f9f6:	mov    DWORD PTR [rdi+0x8],0x5e
   14000f9fd:	mov    rax,QWORD PTR [rcx+0x18]
   14000fa01:	mov    QWORD PTR [rdi+0x18],rax
   14000fa05:	mov    QWORD PTR [rcx+0x18],rdi
   14000fa09:	jmp    0x14000f9a9
   14000fa0b:	mov    rdi,QWORD PTR [rbp+0x28]
   14000fa0f:	mov    rax,QWORD PTR [rbp+0x18]
   14000fa13:	lea    r8,[rdx+0x1]
   14000fa17:	mov    rdx,QWORD PTR [rax+rdx*8]
   14000fa1b:	add    r8,r8
   14000fa1e:	mov    eax,DWORD PTR [rdi+r8*8]
   14000fa22:	mov    DWORD PTR [rdx+0x28],eax
   14000fa25:	mov    eax,DWORD PTR [rdi+r8*8+0x4]
   14000fa2a:	mov    DWORD PTR [rdx+0x2c],eax
   14000fa2d:	mov    eax,DWORD PTR [rdi+r8*8+0x8]
   14000fa32:	mov    DWORD PTR [rdx+0x30],eax
   14000fa35:	mov    eax,DWORD PTR [rdi+r8*8+0xc]
   14000fa3a:	mov    DWORD PTR [rdx+0x34],eax
   14000fa3d:	jmp    0x140015510
   14000fa42:	mov    rax,QWORD PTR [rbp+0x18]
   14000fa46:	lea    r8,[rdx+0x1]
   14000fa4a:	mov    rdx,QWORD PTR [rax+rdx*8]
   14000fa4e:	mov    rdi,QWORD PTR [rbp+0x28]
   14000fa52:	add    r8,r8
   14000fa55:	mov    eax,DWORD PTR [rdi+r8*8]
   14000fa59:	mov    DWORD PTR [rdx+0x88],eax
   14000fa5f:	mov    eax,DWORD PTR [rdi+r8*8+0x4]
   14000fa64:	mov    DWORD PTR [rdx+0x8c],eax
   14000fa6a:	mov    eax,DWORD PTR [rdi+r8*8+0x8]
   14000fa6f:	mov    DWORD PTR [rdx+0x90],eax
   14000fa75:	mov    eax,DWORD PTR [rdi+r8*8+0xc]
   14000fa7a:	mov    DWORD PTR [rdx+0x94],eax
   14000fa80:	jmp    0x140015510
   14000fa85:	mov    rdi,QWORD PTR [rbp+0x28]
   14000fa89:	mov    rax,QWORD PTR [rbp+0x18]
   14000fa8d:	lea    r8,[rdx+0x1]
   14000fa91:	mov    rdx,QWORD PTR [rax+rdx*8]
   14000fa95:	add    r8,r8
   14000fa98:	mov    eax,DWORD PTR [rdi+r8*8]
   14000fa9c:	mov    DWORD PTR [rdx+0x58],eax
   14000fa9f:	mov    eax,DWORD PTR [rdi+r8*8+0x4]
   14000faa4:	mov    DWORD PTR [rdx+0x5c],eax
   14000faa7:	mov    eax,DWORD PTR [rdi+r8*8+0x8]
   14000faac:	mov    DWORD PTR [rdx+0x60],eax
   14000faaf:	mov    eax,DWORD PTR [rdi+r8*8+0xc]
   14000fab4:	mov    DWORD PTR [rdx+0x64],eax
   14000fab7:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000fabb:	mov    rax,QWORD PTR [rbp+0x18]
   14000fabf:	mov    rdx,QWORD PTR [rax+rcx*8]
   14000fac3:	lea    r8,[rcx+0x2]
   14000fac7:	jmp    0x14000fa4e
   14000fac9:	mov    rdi,QWORD PTR [rbp+0x28]
   14000facd:	mov    rax,QWORD PTR [rbp+0x18]
   14000fad1:	lea    r8,[rdx+0x1]
   14000fad5:	mov    rdx,QWORD PTR [rax+rdx*8]
   14000fad9:	add    r8,r8
   14000fadc:	mov    eax,DWORD PTR [rdi+r8*8]
   14000fae0:	mov    DWORD PTR [rdx+0x58],eax
   14000fae3:	mov    eax,DWORD PTR [rdi+r8*8+0x4]
   14000fae8:	mov    DWORD PTR [rdx+0x5c],eax
   14000faeb:	mov    eax,DWORD PTR [rdi+r8*8+0x8]
   14000faf0:	mov    DWORD PTR [rdx+0x60],eax
   14000faf3:	mov    eax,DWORD PTR [rdi+r8*8+0xc]
   14000faf8:	mov    DWORD PTR [rdx+0x64],eax
   14000fafb:	mov    rdi,QWORD PTR [rbp+0x28]
   14000faff:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000fb03:	mov    rax,QWORD PTR [rbp+0x18]
   14000fb07:	lea    r8,[rcx+0x2]
   14000fb0b:	mov    rdx,QWORD PTR [rax+rcx*8]
   14000fb0f:	add    r8,r8
   14000fb12:	mov    eax,DWORD PTR [rdi+r8*8]
   14000fb16:	mov    DWORD PTR [rdx+0x68],eax
   14000fb19:	mov    eax,DWORD PTR [rdi+r8*8+0x4]
   14000fb1e:	mov    DWORD PTR [rdx+0x6c],eax
   14000fb21:	mov    eax,DWORD PTR [rdi+r8*8+0x8]
   14000fb26:	mov    DWORD PTR [rdx+0x70],eax
   14000fb29:	mov    eax,DWORD PTR [rdi+r8*8+0xc]
   14000fb2e:	mov    DWORD PTR [rdx+0x74],eax
   14000fb31:	mov    rdi,QWORD PTR [rbp+0x28]
   14000fb35:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000fb39:	mov    rax,QWORD PTR [rbp+0x18]
   14000fb3d:	lea    r8,[rcx+0x3]
   14000fb41:	mov    rdx,QWORD PTR [rax+rcx*8]
   14000fb45:	add    r8,r8
   14000fb48:	mov    eax,DWORD PTR [rdi+r8*8]
   14000fb4c:	mov    DWORD PTR [rdx+0x78],eax
   14000fb4f:	mov    eax,DWORD PTR [rdi+r8*8+0x4]
   14000fb54:	mov    DWORD PTR [rdx+0x7c],eax
   14000fb57:	mov    eax,DWORD PTR [rdi+r8*8+0x8]
   14000fb5c:	mov    DWORD PTR [rdx+0x80],eax
   14000fb62:	mov    eax,DWORD PTR [rdi+r8*8+0xc]
   14000fb67:	mov    DWORD PTR [rdx+0x84],eax
   14000fb6d:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000fb71:	lea    eax,[rcx+0x3]
   14000fb74:	movsxd rdi,eax
   14000fb77:	mov    rax,QWORD PTR [rbp+0x18]
   14000fb7b:	mov    rdx,QWORD PTR [rax+rcx*8]
   14000fb7f:	shl    rdi,0x4
   14000fb83:	add    rdi,QWORD PTR [rbp+0x30]
   14000fb87:	mov    rax,QWORD PTR [rdi]
   14000fb8a:	mov    QWORD PTR [rdx+0x28],rax
   14000fb8e:	mov    eax,DWORD PTR [rdi+0x8]
   14000fb91:	mov    DWORD PTR [rdx+0x30],eax
   14000fb94:	mov    eax,DWORD PTR [rdi+0xc]
   14000fb97:	mov    DWORD PTR [rdx+0x34],eax
   14000fb9a:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000fb9e:	mov    rax,QWORD PTR [rbp+0x18]
   14000fba2:	mov    rdx,QWORD PTR [rax+rcx*8]
   14000fba6:	lea    r8,[rcx+0x4]
   14000fbaa:	jmp    0x14000fa4e
   14000fbaf:	mov    rdi,QWORD PTR [rbp+0x28]
   14000fbb3:	mov    rax,QWORD PTR [rbp+0x18]
   14000fbb7:	lea    r8,[rdx+0x1]
   14000fbbb:	mov    rdx,QWORD PTR [rax+rdx*8]
   14000fbbf:	add    r8,r8
   14000fbc2:	mov    eax,DWORD PTR [rdi+r8*8]
   14000fbc6:	mov    DWORD PTR [rdx+0x68],eax
   14000fbc9:	mov    eax,DWORD PTR [rdi+r8*8+0x4]
   14000fbce:	mov    DWORD PTR [rdx+0x6c],eax
   14000fbd1:	mov    eax,DWORD PTR [rdi+r8*8+0x8]
   14000fbd6:	mov    DWORD PTR [rdx+0x70],eax
   14000fbd9:	mov    eax,DWORD PTR [rdi+r8*8+0xc]
   14000fbde:	mov    DWORD PTR [rdx+0x74],eax
   14000fbe1:	mov    rdi,QWORD PTR [rbp+0x28]
   14000fbe5:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000fbe9:	mov    rax,QWORD PTR [rbp+0x18]
   14000fbed:	lea    r8,[rcx+0x2]
   14000fbf1:	mov    rdx,QWORD PTR [rax+rcx*8]
   14000fbf5:	add    r8,r8
   14000fbf8:	mov    eax,DWORD PTR [rdi+r8*8]
   14000fbfc:	mov    DWORD PTR [rdx+0x78],eax
   14000fbff:	mov    eax,DWORD PTR [rdi+r8*8+0x4]
   14000fc04:	mov    DWORD PTR [rdx+0x7c],eax
   14000fc07:	mov    eax,DWORD PTR [rdi+r8*8+0x8]
   14000fc0c:	mov    DWORD PTR [rdx+0x80],eax
   14000fc12:	mov    eax,DWORD PTR [rdi+r8*8+0xc]
   14000fc17:	mov    DWORD PTR [rdx+0x84],eax
   14000fc1d:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000fc21:	lea    eax,[rcx+0x2]
   14000fc24:	movsxd rdi,eax
   14000fc27:	mov    rax,QWORD PTR [rbp+0x18]
   14000fc2b:	mov    rdx,QWORD PTR [rax+rcx*8]
   14000fc2f:	shl    rdi,0x4
   14000fc33:	add    rdi,QWORD PTR [rbp+0x30]
   14000fc37:	mov    rax,QWORD PTR [rdi]
   14000fc3a:	mov    QWORD PTR [rdx+0x28],rax
   14000fc3e:	mov    eax,DWORD PTR [rdi+0x8]
   14000fc41:	mov    DWORD PTR [rdx+0x30],eax
   14000fc44:	mov    eax,DWORD PTR [rdi+0xc]
   14000fc47:	mov    DWORD PTR [rdx+0x34],eax
   14000fc4a:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000fc4e:	mov    rax,QWORD PTR [rbp+0x18]
   14000fc52:	mov    rdx,QWORD PTR [rax+rcx*8]
   14000fc56:	lea    r8,[rcx+0x3]
   14000fc5a:	jmp    0x14000fa4e
   14000fc5f:	lea    eax,[rdx+0x1]
   14000fc62:	mov    rdx,QWORD PTR [rbp+0x18]
   14000fc66:	mov    rdi,r12
   14000fc69:	movsxd rcx,eax
   14000fc6c:	mov    rdx,QWORD PTR [rdx+rcx*8]
   14000fc70:	mov    rcx,rbp
   14000fc73:	call   0x14000ec50
   14000fc78:	mov    rbx,rax
   14000fc7b:	test   rax,rax
   14000fc7e:	je     0x14000fcd0
   14000fc80:	mov    rdx,QWORD PTR [rbp+0x8]
   14000fc84:	mov    ecx,0x38
   14000fc89:	call   0x14000e810
   14000fc8e:	mov    rdi,rax
   14000fc91:	test   rax,rax
   14000fc94:	je     0x14000fccd
   14000fc96:	lea    rax,[rip+0x1294b]        # 0x1400225e8
   14000fc9d:	mov    QWORD PTR [rdi],rax
   14000fca0:	mov    QWORD PTR [rdi+0x10],rbx
   14000fca4:	mov    DWORD PTR [rdi+0x18],r12d
   14000fca8:	mov    DWORD PTR [rdi+0x1c],r12d
   14000fcac:	mov    DWORD PTR [rdi+0x20],r12d
   14000fcb0:	mov    DWORD PTR [rdi+0x24],r12d
   14000fcb4:	mov    DWORD PTR [rdi+0x28],r12d
   14000fcb8:	mov    DWORD PTR [rdi+0x2c],r12d
   14000fcbc:	mov    DWORD PTR [rdi+0x30],r12d
   14000fcc0:	mov    DWORD PTR [rdi+0x34],r12d
   14000fcc4:	mov    DWORD PTR [rdi+0x8],0x56
   14000fccb:	jmp    0x14000fcd0
   14000fccd:	mov    rdi,r12
   14000fcd0:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000fcd4:	mov    rax,QWORD PTR [rbp+0x18]
   14000fcd8:	mov    QWORD PTR [rax+rcx*8],rdi
   14000fcdc:	test   rdi,rdi
   14000fcdf:	je     0x140015ecb
   14000fce5:	mov    rcx,QWORD PTR [rbp+0x28]
   14000fce9:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000fced:	lea    r9,[rip+0xffffffffffff030c]        # 0x140000000
   14000fcf4:	add    rdx,rdx
   14000fcf7:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000fcfa:	mov    DWORD PTR [rdi+0x18],eax
   14000fcfd:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000fd01:	mov    DWORD PTR [rdi+0x1c],eax
   14000fd04:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000fd08:	mov    DWORD PTR [rdi+0x20],eax
   14000fd0b:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000fd0f:	mov    DWORD PTR [rdi+0x24],eax
   14000fd12:	jmp    0x140015510
   14000fd17:	mov    rcx,QWORD PTR [rbp+0x18]
   14000fd1b:	mov    rdi,r12
   14000fd1e:	mov    rbx,QWORD PTR [rcx+rdx*8+0x8]
   14000fd23:	test   rbx,rbx
   14000fd26:	je     0x14000fd4f
   14000fd28:	cmp    DWORD PTR [rbx+0x8],0x3d
   14000fd2c:	jne    0x14000fd4f
   14000fd2e:	mov    rdx,QWORD PTR [rbp+0x8]
   14000fd32:	mov    ecx,0x98
   14000fd37:	call   0x14000e810
   14000fd3c:	test   rax,rax
   14000fd3f:	je     0x14000fd8a
   14000fd41:	lea    rdx,[rbx+0x10]
   14000fd45:	mov    rcx,rax
   14000fd48:	call   0x14000e100
   14000fd4d:	jmp    0x14000fd87
   14000fd4f:	lea    eax,[rdx+0x1]
   14000fd52:	movsxd rdx,eax
   14000fd55:	mov    rdx,QWORD PTR [rcx+rdx*8]
   14000fd59:	mov    rcx,rbp
   14000fd5c:	call   0x14000ed20
   14000fd61:	mov    rbx,rax
   14000fd64:	test   rax,rax
   14000fd67:	je     0x14000fdb3
   14000fd69:	mov    rdx,QWORD PTR [rbp+0x8]
   14000fd6d:	mov    ecx,0x98
   14000fd72:	call   0x14000e810
   14000fd77:	test   rax,rax
   14000fd7a:	je     0x14000fd8a
   14000fd7c:	mov    rdx,rbx
   14000fd7f:	mov    rcx,rax
   14000fd82:	call   0x14000e1c0
   14000fd87:	mov    rdi,rax
   14000fd8a:	mov    rcx,QWORD PTR [rbp+0x28]
   14000fd8e:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000fd92:	inc    rdx
   14000fd95:	add    rdx,rdx
   14000fd98:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000fd9b:	mov    DWORD PTR [rdi+0x48],eax
   14000fd9e:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000fda2:	mov    DWORD PTR [rdi+0x4c],eax
   14000fda5:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000fda9:	mov    DWORD PTR [rdi+0x50],eax
   14000fdac:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000fdb0:	mov    DWORD PTR [rdi+0x54],eax
   14000fdb3:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000fdb7:	mov    rax,QWORD PTR [rbp+0x18]
   14000fdbb:	mov    QWORD PTR [rax+rcx*8],rdi
   14000fdbf:	test   rdi,rdi
   14000fdc2:	je     0x140015f84
   14000fdc8:	mov    rcx,QWORD PTR [rbp+0x28]
   14000fdcc:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000fdd0:	lea    r9,[rip+0xffffffffffff0229]        # 0x140000000
   14000fdd7:	add    rdx,rdx
   14000fdda:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000fddd:	mov    DWORD PTR [rdi+0x38],eax
   14000fde0:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000fde4:	mov    DWORD PTR [rdi+0x3c],eax
   14000fde7:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000fdeb:	mov    DWORD PTR [rdi+0x40],eax
   14000fdee:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000fdf2:	mov    DWORD PTR [rdi+0x44],eax
   14000fdf5:	jmp    0x140015510
   14000fdfa:	mov    rdx,QWORD PTR [rbp+0x8]
   14000fdfe:	mov    ecx,0x20
   14000fe03:	call   0x14000e810
   14000fe08:	mov    rdi,rax
   14000fe0b:	test   rax,rax
   14000fe0e:	je     0x14000f9a6
   14000fe14:	mov    rax,QWORD PTR [rbp+0x18]
   14000fe18:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000fe1c:	mov    rdx,QWORD PTR [rax+rcx*8]
   14000fe20:	lea    rax,[rip+0x12721]        # 0x140022548
   14000fe27:	mov    QWORD PTR [rdi],rax
   14000fe2a:	mov    QWORD PTR [rdi+0x10],rdi
   14000fe2e:	mov    QWORD PTR [rdi+0x18],rdx
   14000fe32:	mov    DWORD PTR [rdi+0x8],0x54
   14000fe39:	jmp    0x14000f9a9
   14000fe3e:	mov    rdx,QWORD PTR [rbp+0x8]
   14000fe42:	mov    ecx,0x20
   14000fe47:	call   0x14000e810
   14000fe4c:	mov    rdi,rax
   14000fe4f:	test   rax,rax
   14000fe52:	je     0x14000f9a6
   14000fe58:	mov    rax,QWORD PTR [rbp+0x18]
   14000fe5c:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000fe60:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   14000fe65:	mov    rcx,QWORD PTR [rax+rcx*8]
   14000fe69:	lea    rax,[rip+0x126d8]        # 0x140022548
   14000fe70:	mov    QWORD PTR [rdi],rax
   14000fe73:	mov    QWORD PTR [rdi+0x18],rdx
   14000fe77:	mov    DWORD PTR [rdi+0x8],0x54
   14000fe7e:	mov    rax,QWORD PTR [rcx+0x10]
   14000fe82:	mov    QWORD PTR [rdi+0x10],rax
   14000fe86:	mov    QWORD PTR [rcx+0x10],rdi
   14000fe8a:	jmp    0x14000f9a9
   14000fe8f:	mov    rdx,QWORD PTR [rbp+0x8]
   14000fe93:	mov    ecx,0x30
   14000fe98:	call   0x14000e810
   14000fe9d:	mov    rdi,rax
   14000fea0:	test   rax,rax
   14000fea3:	je     0x14000f9a6
   14000fea9:	mov    rax,QWORD PTR [rbp+0x18]
   14000fead:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000feb1:	mov    rdx,QWORD PTR [rax+rcx*8]
   14000feb5:	lea    rax,[rip+0x1281c]        # 0x1400226d8
   14000febc:	mov    QWORD PTR [rdi],rax
   14000febf:	mov    QWORD PTR [rdi+0x10],rdi
   14000fec3:	mov    QWORD PTR [rdi+0x18],rdx
   14000fec7:	mov    DWORD PTR [rdi+0x20],r12d
   14000fecb:	mov    DWORD PTR [rdi+0x24],r12d
   14000fecf:	mov    DWORD PTR [rdi+0x28],r12d
   14000fed3:	mov    DWORD PTR [rdi+0x2c],r12d
   14000fed7:	mov    DWORD PTR [rdi+0x8],0x55
   14000fede:	jmp    0x14000f9a9
   14000fee3:	mov    rdx,QWORD PTR [rbp+0x8]
   14000fee7:	mov    ecx,0x30
   14000feec:	call   0x14000e810
   14000fef1:	mov    rdi,rax
   14000fef4:	test   rax,rax
   14000fef7:	je     0x14000ff3d
   14000fef9:	mov    rax,QWORD PTR [rbp+0x18]
   14000fefd:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000ff01:	mov    rdx,QWORD PTR [rax+rcx*8+0x10]
   14000ff06:	mov    rcx,QWORD PTR [rax+rcx*8]
   14000ff0a:	lea    rax,[rip+0x127c7]        # 0x1400226d8
   14000ff11:	mov    QWORD PTR [rdi],rax
   14000ff14:	mov    QWORD PTR [rdi+0x18],rdx
   14000ff18:	mov    DWORD PTR [rdi+0x20],r12d
   14000ff1c:	mov    DWORD PTR [rdi+0x24],r12d
   14000ff20:	mov    DWORD PTR [rdi+0x28],r12d
   14000ff24:	mov    DWORD PTR [rdi+0x2c],r12d
   14000ff28:	mov    DWORD PTR [rdi+0x8],0x55
   14000ff2f:	mov    rax,QWORD PTR [rcx+0x10]
   14000ff33:	mov    QWORD PTR [rdi+0x10],rax
   14000ff37:	mov    QWORD PTR [rcx+0x10],rdi
   14000ff3b:	jmp    0x14000ff40
   14000ff3d:	mov    rdi,r12
   14000ff40:	mov    rcx,QWORD PTR [rbp+0x28]
   14000ff44:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000ff48:	inc    rdx
   14000ff4b:	add    rdx,rdx
   14000ff4e:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000ff51:	mov    DWORD PTR [rdi+0x20],eax
   14000ff54:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000ff58:	mov    DWORD PTR [rdi+0x24],eax
   14000ff5b:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000ff5f:	mov    DWORD PTR [rdi+0x28],eax
   14000ff62:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000ff66:	mov    DWORD PTR [rdi+0x2c],eax
   14000ff69:	jmp    0x14000f9a9
   14000ff6e:	mov    rdx,QWORD PTR [rbp+0x8]
   14000ff72:	mov    ecx,0x38
   14000ff77:	call   0x14000e810
   14000ff7c:	mov    rdi,rax
   14000ff7f:	test   rax,rax
   14000ff82:	je     0x14000ffbb
   14000ff84:	lea    rax,[rip+0x1279d]        # 0x140022728
   14000ff8b:	mov    QWORD PTR [rdi],rax
   14000ff8e:	mov    DWORD PTR [rdi+0x10],r12d
   14000ff92:	mov    DWORD PTR [rdi+0x14],r12d
   14000ff96:	mov    DWORD PTR [rdi+0x18],r12d
   14000ff9a:	mov    DWORD PTR [rdi+0x1c],r12d
   14000ff9e:	mov    QWORD PTR [rdi+0x20],r12
   14000ffa2:	mov    DWORD PTR [rdi+0x28],r12d
   14000ffa6:	mov    DWORD PTR [rdi+0x2c],r12d
   14000ffaa:	mov    DWORD PTR [rdi+0x30],r12d
   14000ffae:	mov    DWORD PTR [rdi+0x34],r12d
   14000ffb2:	mov    DWORD PTR [rdi+0x8],0x53
   14000ffb9:	jmp    0x14000ffbe
   14000ffbb:	mov    rdi,r12
   14000ffbe:	mov    rcx,QWORD PTR [rbp+0x28]
   14000ffc2:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000ffc6:	add    rdx,rdx
   14000ffc9:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000ffcc:	mov    DWORD PTR [rdi+0x10],eax
   14000ffcf:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000ffd3:	mov    DWORD PTR [rdi+0x14],eax
   14000ffd6:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000ffda:	mov    DWORD PTR [rdi+0x18],eax
   14000ffdd:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000ffe1:	mov    DWORD PTR [rdi+0x1c],eax
   14000ffe4:	mov    rcx,QWORD PTR [rbp+0x28]
   14000ffe8:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000ffec:	inc    rdx
   14000ffef:	add    rdx,rdx
   14000fff2:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000fff5:	mov    DWORD PTR [rdi+0x28],eax
   14000fff8:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000fffc:	mov    DWORD PTR [rdi+0x2c],eax
   14000ffff:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140010003:	mov    DWORD PTR [rdi+0x30],eax
   140010006:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14001000a:	mov    DWORD PTR [rdi+0x34],eax
   14001000d:	jmp    0x14000f9a9
   140010012:	mov    rdx,QWORD PTR [rbp+0x8]
   140010016:	mov    ecx,0x38
   14001001b:	call   0x14000e810
   140010020:	mov    rdi,rax
   140010023:	test   rax,rax
   140010026:	je     0x140010074
   140010028:	movsxd rcx,DWORD PTR [rbp+0x10]
   14001002c:	mov    rax,QWORD PTR [rbp+0x18]
   140010030:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140010035:	lea    rcx,[rip+0x126ec]        # 0x140022728
   14001003c:	mov    rax,QWORD PTR [rdx+0x10]
   140010040:	mov    QWORD PTR [rdx+0x10],r12
   140010044:	mov    QWORD PTR [rdi],rcx
   140010047:	mov    DWORD PTR [rdi+0x10],r12d
   14001004b:	mov    DWORD PTR [rdi+0x14],r12d
   14001004f:	mov    DWORD PTR [rdi+0x18],r12d
   140010053:	mov    DWORD PTR [rdi+0x1c],r12d
   140010057:	mov    QWORD PTR [rdi+0x20],rax
   14001005b:	mov    DWORD PTR [rdi+0x28],r12d
   14001005f:	mov    DWORD PTR [rdi+0x2c],r12d
   140010063:	mov    DWORD PTR [rdi+0x30],r12d
   140010067:	mov    DWORD PTR [rdi+0x34],r12d
   14001006b:	mov    DWORD PTR [rdi+0x8],0x53
   140010072:	jmp    0x140010077
   140010074:	mov    rdi,r12
   140010077:	mov    rcx,QWORD PTR [rbp+0x28]
   14001007b:	movsxd rdx,DWORD PTR [rbp+0x10]
   14001007f:	add    rdx,rdx
   140010082:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010085:	mov    DWORD PTR [rdi+0x10],eax
   140010088:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14001008c:	mov    DWORD PTR [rdi+0x14],eax
   14001008f:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140010093:	mov    DWORD PTR [rdi+0x18],eax
   140010096:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14001009a:	mov    DWORD PTR [rdi+0x1c],eax
   14001009d:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400100a1:	add    rdx,0x2
   1400100a5:	mov    rcx,QWORD PTR [rbp+0x28]
   1400100a9:	add    rdx,rdx
   1400100ac:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400100af:	mov    DWORD PTR [rdi+0x28],eax
   1400100b2:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400100b6:	mov    DWORD PTR [rdi+0x2c],eax
   1400100b9:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400100bd:	mov    DWORD PTR [rdi+0x30],eax
   1400100c0:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400100c4:	mov    DWORD PTR [rdi+0x34],eax
   1400100c7:	jmp    0x14000f9a9
   1400100cc:	mov    rdx,QWORD PTR [rbp+0x8]
   1400100d0:	mov    ecx,0x20
   1400100d5:	call   0x14000e810
   1400100da:	mov    r11,rax
   1400100dd:	test   rax,rax
   1400100e0:	je     0x140010125
   1400100e2:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400100e6:	mov    rax,QWORD PTR [rbp+0x18]
   1400100ea:	lea    r9,[rip+0xfffffffffffeff0f]        # 0x140000000
   1400100f1:	mov    rdi,QWORD PTR [rax+rcx*8+0x8]
   1400100f6:	mov    rdx,QWORD PTR [rax+rcx*8]
   1400100fa:	lea    rax,[rip+0x126c7]        # 0x1400227c8
   140010101:	mov    QWORD PTR [r11],rax
   140010104:	mov    QWORD PTR [r11+0x10],rdx
   140010108:	mov    QWORD PTR [r11+0x18],rdi
   14001010c:	mov    DWORD PTR [r11+0x8],0x52
   140010114:	movsxd rcx,DWORD PTR [rbp+0x10]
   140010118:	mov    rax,QWORD PTR [rbp+0x18]
   14001011c:	mov    QWORD PTR [rax+rcx*8],r11
   140010120:	jmp    0x140015510
   140010125:	mov    r11,r12
   140010128:	movsxd rcx,DWORD PTR [rbp+0x10]
   14001012c:	mov    rax,QWORD PTR [rbp+0x18]
   140010130:	lea    r9,[rip+0xfffffffffffefec9]        # 0x140000000
   140010137:	mov    QWORD PTR [rax+rcx*8],r11
   14001013b:	jmp    0x140015510
   140010140:	mov    rdx,QWORD PTR [rbp+0x8]
   140010144:	mov    ecx,0x50
   140010149:	call   0x14000e810
   14001014e:	mov    r11,rax
   140010151:	test   rax,rax
   140010154:	je     0x1400101c3
   140010156:	movsxd rcx,DWORD PTR [rbp+0x10]
   14001015a:	mov    rax,QWORD PTR [rbp+0x18]
   14001015e:	mov    rdx,QWORD PTR [rax+rcx*8+0x18]
   140010163:	mov    rdi,QWORD PTR [rdx+0x10]
   140010167:	mov    QWORD PTR [rdx+0x10],r12
   14001016b:	mov    rax,QWORD PTR [rbp+0x18]
   14001016f:	movsxd rcx,DWORD PTR [rbp+0x10]
   140010173:	mov    rdx,QWORD PTR [rax+rcx*8]
   140010177:	lea    rax,[rip+0x1278a]        # 0x140022908
   14001017e:	mov    QWORD PTR [r11],rax
   140010181:	mov    QWORD PTR [r11+0x10],rdx
   140010185:	mov    QWORD PTR [r11+0x18],rdi
   140010189:	mov    DWORD PTR [r11+0x20],r12d
   14001018d:	mov    DWORD PTR [r11+0x24],r12d
   140010191:	mov    DWORD PTR [r11+0x28],r12d
   140010195:	mov    DWORD PTR [r11+0x2c],r12d
   140010199:	mov    DWORD PTR [r11+0x30],r12d
   14001019d:	mov    DWORD PTR [r11+0x34],r12d
   1400101a1:	mov    DWORD PTR [r11+0x38],r12d
   1400101a5:	mov    DWORD PTR [r11+0x3c],r12d
   1400101a9:	mov    DWORD PTR [r11+0x40],r12d
   1400101ad:	mov    DWORD PTR [r11+0x44],r12d
   1400101b1:	mov    DWORD PTR [r11+0x48],r12d
   1400101b5:	mov    DWORD PTR [r11+0x4c],r12d
   1400101b9:	mov    DWORD PTR [r11+0x8],0x4f
   1400101c1:	jmp    0x1400101c6
   1400101c3:	mov    r11,r12
   1400101c6:	mov    rcx,QWORD PTR [rbp+0x28]
   1400101ca:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400101ce:	lea    r9,[rip+0xfffffffffffefe2b]        # 0x140000000
   1400101d5:	inc    rdx
   1400101d8:	add    rdx,rdx
   1400101db:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400101de:	mov    DWORD PTR [r11+0x20],eax
   1400101e2:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400101e6:	mov    DWORD PTR [r11+0x24],eax
   1400101ea:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400101ee:	mov    DWORD PTR [r11+0x28],eax
   1400101f2:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400101f6:	mov    DWORD PTR [r11+0x2c],eax
   1400101fa:	mov    rcx,QWORD PTR [rbp+0x28]
   1400101fe:	movsxd rdx,DWORD PTR [rbp+0x10]
   140010202:	add    rdx,0x2
   140010206:	add    rdx,rdx
   140010209:	mov    eax,DWORD PTR [rcx+rdx*8]
   14001020c:	mov    DWORD PTR [r11+0x30],eax
   140010210:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140010214:	mov    DWORD PTR [r11+0x34],eax
   140010218:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14001021c:	mov    DWORD PTR [r11+0x38],eax
   140010220:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140010224:	mov    DWORD PTR [r11+0x3c],eax
   140010228:	mov    rcx,QWORD PTR [rbp+0x28]
   14001022c:	movsxd rdx,DWORD PTR [rbp+0x10]
   140010230:	add    rdx,0x4
   140010234:	add    rdx,rdx
   140010237:	mov    eax,DWORD PTR [rcx+rdx*8]
   14001023a:	mov    DWORD PTR [r11+0x40],eax
   14001023e:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140010242:	mov    DWORD PTR [r11+0x44],eax
   140010246:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14001024a:	mov    DWORD PTR [r11+0x48],eax
   14001024e:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140010252:	mov    DWORD PTR [r11+0x4c],eax
   140010256:	movsxd rcx,DWORD PTR [rbp+0x10]
   14001025a:	mov    rax,QWORD PTR [rbp+0x18]
   14001025e:	mov    QWORD PTR [rax+rcx*8],r11
   140010262:	jmp    0x140015510
   140010267:	mov    rdx,QWORD PTR [rbp+0x8]
   14001026b:	mov    ecx,0x40
   140010270:	call   0x14000e810
   140010275:	mov    r11,rax
   140010278:	test   rax,rax
   14001027b:	je     0x1400102c7
   14001027d:	mov    rax,QWORD PTR [rbp+0x18]
   140010281:	movsxd rcx,DWORD PTR [rbp+0x10]
   140010285:	mov    rdi,QWORD PTR [rax+rcx*8+0x18]
   14001028a:	mov    rdx,QWORD PTR [rax+rcx*8+0x10]
   14001028f:	mov    rcx,QWORD PTR [rax+rcx*8]
   140010293:	lea    rax,[rip+0x125ce]        # 0x140022868
   14001029a:	mov    QWORD PTR [r11],rax
   14001029d:	mov    QWORD PTR [r11+0x10],rcx
   1400102a1:	mov    QWORD PTR [r11+0x18],rdx
   1400102a5:	mov    QWORD PTR [r11+0x20],rdi
   1400102a9:	mov    DWORD PTR [r11+0x28],r12d
   1400102ad:	mov    DWORD PTR [r11+0x2c],r12d
   1400102b1:	mov    DWORD PTR [r11+0x30],r12d
   1400102b5:	mov    DWORD PTR [r11+0x34],r12d
   1400102b9:	mov    BYTE PTR [r11+0x38],r12b
   1400102bd:	mov    DWORD PTR [r11+0x8],0x51
   1400102c5:	jmp    0x1400102ca
   1400102c7:	mov    r11,r12
   1400102ca:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400102ce:	inc    rdx
   1400102d1:	mov    rcx,QWORD PTR [rbp+0x28]
   1400102d5:	add    rdx,rdx
   1400102d8:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400102db:	mov    DWORD PTR [r11+0x28],eax
   1400102df:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400102e3:	mov    DWORD PTR [r11+0x2c],eax
   1400102e7:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400102eb:	mov    DWORD PTR [r11+0x30],eax
   1400102ef:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400102f3:	mov    DWORD PTR [r11+0x34],eax
   1400102f7:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400102fb:	mov    rax,QWORD PTR [rbp+0x18]
   1400102ff:	lea    r9,[rip+0xfffffffffffefcfa]        # 0x140000000
   140010306:	mov    QWORD PTR [rax+rcx*8],r11
   14001030a:	jmp    0x140015510
   14001030f:	mov    rdx,QWORD PTR [rbp+0x8]
   140010313:	mov    ecx,0x40
   140010318:	call   0x14000e810
   14001031d:	mov    r11,rax
   140010320:	test   rax,rax
   140010323:	je     0x14001036f
   140010325:	mov    rax,QWORD PTR [rbp+0x18]
   140010329:	movsxd rcx,DWORD PTR [rbp+0x10]
   14001032d:	mov    rdi,QWORD PTR [rax+rcx*8+0x18]
   140010332:	mov    rdx,QWORD PTR [rax+rcx*8]
   140010336:	mov    rcx,QWORD PTR [rax+rcx*8+0x10]
   14001033b:	lea    rax,[rip+0x12526]        # 0x140022868
   140010342:	mov    QWORD PTR [r11],rax
   140010345:	mov    QWORD PTR [r11+0x10],rcx
   140010349:	mov    QWORD PTR [r11+0x18],rdx
   14001034d:	mov    QWORD PTR [r11+0x20],rdi
   140010351:	mov    DWORD PTR [r11+0x28],r12d
   140010355:	mov    DWORD PTR [r11+0x2c],r12d
   140010359:	mov    DWORD PTR [r11+0x30],r12d
   14001035d:	mov    DWORD PTR [r11+0x34],r12d
   140010361:	mov    BYTE PTR [r11+0x38],r12b
   140010365:	mov    DWORD PTR [r11+0x8],0x51
   14001036d:	jmp    0x140010372
   14001036f:	mov    r11,r12
   140010372:	mov    rcx,QWORD PTR [rbp+0x28]
   140010376:	movsxd rdx,DWORD PTR [rbp+0x10]
   14001037a:	lea    r9,[rip+0xfffffffffffefc7f]        # 0x140000000
   140010381:	inc    rdx
   140010384:	add    rdx,rdx
   140010387:	mov    eax,DWORD PTR [rcx+rdx*8]
   14001038a:	mov    DWORD PTR [r11+0x28],eax
   14001038e:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140010392:	mov    DWORD PTR [r11+0x2c],eax
   140010396:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14001039a:	mov    DWORD PTR [r11+0x30],eax
   14001039e:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400103a2:	mov    DWORD PTR [r11+0x34],eax
   1400103a6:	mov    BYTE PTR [r11+0x38],0x1
   1400103ab:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400103af:	mov    rax,QWORD PTR [rbp+0x18]
   1400103b3:	mov    QWORD PTR [rax+rcx*8],r11
   1400103b7:	jmp    0x140015510
   1400103bc:	mov    rdx,QWORD PTR [rbp+0x8]
   1400103c0:	mov    ecx,0x30
   1400103c5:	call   0x14000e810
   1400103ca:	mov    r11,rax
   1400103cd:	test   rax,rax
   1400103d0:	je     0x14001040f
   1400103d2:	mov    rax,QWORD PTR [rbp+0x18]
   1400103d6:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400103da:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   1400103df:	mov    rdx,QWORD PTR [rax+rcx*8]
   1400103e3:	lea    rax,[rip+0x124ce]        # 0x1400228b8
   1400103ea:	mov    QWORD PTR [r11],rax
   1400103ed:	mov    QWORD PTR [r11+0x10],rdx
   1400103f1:	mov    QWORD PTR [r11+0x18],rdi
   1400103f5:	mov    DWORD PTR [r11+0x20],r12d
   1400103f9:	mov    DWORD PTR [r11+0x24],r12d
   1400103fd:	mov    DWORD PTR [r11+0x28],r12d
   140010401:	mov    DWORD PTR [r11+0x2c],r12d
   140010405:	mov    DWORD PTR [r11+0x8],0x5c
   14001040d:	jmp    0x140010412
   14001040f:	mov    r11,r12
   140010412:	mov    rcx,QWORD PTR [rbp+0x28]
   140010416:	movsxd rdx,DWORD PTR [rbp+0x10]
   14001041a:	inc    rdx
   14001041d:	add    rdx,rdx
   140010420:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010423:	mov    DWORD PTR [r11+0x20],eax
   140010427:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14001042b:	mov    DWORD PTR [r11+0x24],eax
   14001042f:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140010433:	mov    DWORD PTR [r11+0x28],eax
   140010437:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14001043b:	mov    DWORD PTR [r11+0x2c],eax
   14001043f:	jmp    0x1400102f7
   140010444:	mov    rax,QWORD PTR [rbp+0x18]
   140010448:	mov    rdx,QWORD PTR [rax+rdx*8]
   14001044c:	mov    rdi,QWORD PTR [rdx+0x30]
   140010450:	mov    QWORD PTR [rdx+0x30],r12
   140010454:	movsxd rcx,DWORD PTR [rbp+0x10]
   140010458:	mov    rax,QWORD PTR [rbp+0x18]
   14001045c:	mov    QWORD PTR [rax+rcx*8],rdi
   140010460:	jmp    0x140015510
   140010465:	mov    rdx,QWORD PTR [rbp+0x8]
   140010469:	mov    ecx,0x68
   14001046e:	call   0x14000e810
   140010473:	mov    r11,rax
   140010476:	test   rax,rax
   140010479:	je     0x1400104a7
   14001047b:	movsxd rcx,DWORD PTR [rbp+0x10]
   14001047f:	mov    rdi,QWORD PTR [rbp+0x30]
   140010483:	lea    eax,[rcx+0x1]
   140010486:	mov    rdx,rcx
   140010489:	mov    rcx,r11
   14001048c:	movsxd r8,eax
   14001048f:	shl    rdx,0x4
   140010493:	shl    r8,0x4
   140010497:	add    rdx,rdi
   14001049a:	add    r8,rdi
   14001049d:	call   0x14000e3b0
   1400104a2:	mov    rdi,rax
   1400104a5:	jmp    0x1400104aa
   1400104a7:	mov    rdi,r12
   1400104aa:	mov    rcx,QWORD PTR [rbp+0x28]
   1400104ae:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400104b2:	add    rdx,rdx
   1400104b5:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400104b8:	mov    DWORD PTR [rdi+0x48],eax
   1400104bb:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400104bf:	mov    DWORD PTR [rdi+0x4c],eax
   1400104c2:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400104c6:	mov    DWORD PTR [rdi+0x50],eax
   1400104c9:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400104cd:	mov    DWORD PTR [rdi+0x54],eax
   1400104d0:	mov    rcx,QWORD PTR [rbp+0x28]
   1400104d4:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400104d8:	inc    rdx
   1400104db:	add    rdx,rdx
   1400104de:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400104e1:	mov    DWORD PTR [rdi+0x58],eax
   1400104e4:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400104e8:	mov    DWORD PTR [rdi+0x5c],eax
   1400104eb:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400104ef:	mov    DWORD PTR [rdi+0x60],eax
   1400104f2:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400104f6:	mov    DWORD PTR [rdi+0x64],eax
   1400104f9:	jmp    0x14000f9a9
   1400104fe:	mov    rdx,QWORD PTR [rbp+0x8]
   140010502:	mov    ecx,0x68
   140010507:	call   0x14000e810
   14001050c:	mov    rdi,rax
   14001050f:	test   rax,rax
   140010512:	je     0x14001054e
   140010514:	movsxd rdx,DWORD PTR [rbp+0x10]
   140010518:	mov    rcx,QWORD PTR [rbp+0x30]
   14001051c:	lea    eax,[rdx+0x3]
   14001051f:	movsxd r9,eax
   140010522:	lea    eax,[rdx+0x2]
   140010525:	movsxd r8,eax
   140010528:	mov    rax,rdx
   14001052b:	mov    rdx,QWORD PTR [rbp+0x18]
   14001052f:	mov    rdx,QWORD PTR [rdx+rax*8]
   140010533:	shl    r9,0x4
   140010537:	shl    r8,0x4
   14001053b:	add    r9,rcx
   14001053e:	add    r8,rcx
   140010541:	mov    rcx,rdi
   140010544:	call   0x14000e430
   140010549:	mov    rdi,rax
   14001054c:	jmp    0x140010551
   14001054e:	mov    rdi,r12
   140010551:	mov    rcx,QWORD PTR [rbp+0x28]
   140010555:	movsxd rdx,DWORD PTR [rbp+0x10]
   140010559:	add    rdx,0x2
   14001055d:	add    rdx,rdx
   140010560:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010563:	mov    DWORD PTR [rdi+0x48],eax
   140010566:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14001056a:	mov    DWORD PTR [rdi+0x4c],eax
   14001056d:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140010571:	mov    DWORD PTR [rdi+0x50],eax
   140010574:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140010578:	mov    DWORD PTR [rdi+0x54],eax
   14001057b:	mov    rcx,QWORD PTR [rbp+0x28]
   14001057f:	movsxd rdx,DWORD PTR [rbp+0x10]
   140010583:	inc    rdx
   140010586:	add    rdx,rdx
   140010589:	mov    eax,DWORD PTR [rcx+rdx*8]
   14001058c:	mov    DWORD PTR [rdi+0x38],eax
   14001058f:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140010593:	mov    DWORD PTR [rdi+0x3c],eax
   140010596:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14001059a:	mov    DWORD PTR [rdi+0x40],eax
   14001059d:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400105a1:	mov    DWORD PTR [rdi+0x44],eax
   1400105a4:	mov    rcx,QWORD PTR [rbp+0x28]
   1400105a8:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400105ac:	add    rdx,0x3
   1400105b0:	add    rdx,rdx
   1400105b3:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400105b6:	mov    DWORD PTR [rdi+0x58],eax
   1400105b9:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400105bd:	mov    DWORD PTR [rdi+0x5c],eax
   1400105c0:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400105c4:	mov    DWORD PTR [rdi+0x60],eax
   1400105c7:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400105cb:	mov    DWORD PTR [rdi+0x64],eax
   1400105ce:	jmp    0x14000f9a9
   1400105d3:	mov    rdx,QWORD PTR [rbp+0x8]
   1400105d7:	mov    ecx,0xe8
   1400105dc:	call   0x14000e810
   1400105e1:	mov    rbx,rax
   1400105e4:	test   rax,rax
   1400105e7:	je     0x140010621
   1400105e9:	mov    eax,DWORD PTR [rbp+0x10]
   1400105ec:	lea    rcx,[rsp+0x310]
   1400105f4:	or     esi,0x1
   1400105f7:	inc    eax
   1400105f9:	mov    DWORD PTR [rsp+0x30],esi
   1400105fd:	movsxd rdi,eax
   140010600:	shl    rdi,0x4
   140010604:	add    rdi,QWORD PTR [rbp+0x30]
   140010608:	call   QWORD PTR [rip+0xfe52]        # 0x140020460
   14001060e:	mov    r8,rdi
   140010611:	mov    rdx,rax
   140010614:	mov    rcx,rbx
   140010617:	call   0x14000e850
   14001061c:	mov    rdi,rax
   14001061f:	jmp    0x140010624
   140010621:	mov    rdi,r12
   140010624:	test   sil,0x1
   140010628:	je     0x14001063f
   14001062a:	and    esi,0xfffffffe
   14001062d:	lea    rcx,[rsp+0x310]
   140010635:	mov    DWORD PTR [rsp+0x30],esi
   140010639:	call   QWORD PTR [rip+0xfe19]        # 0x140020458
   14001063f:	mov    DWORD PTR [rdi+0x10],r12d
   140010643:	mov    rcx,QWORD PTR [rbp+0x28]
   140010647:	movsxd rdx,DWORD PTR [rbp+0x10]
   14001064b:	add    rdx,rdx
   14001064e:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010651:	mov    DWORD PTR [rdi+0x88],eax
   140010657:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14001065b:	mov    DWORD PTR [rdi+0x8c],eax
   140010661:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140010665:	mov    DWORD PTR [rdi+0x90],eax
   14001066b:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14001066f:	mov    DWORD PTR [rdi+0x94],eax
   140010675:	mov    rcx,QWORD PTR [rbp+0x28]
   140010679:	movsxd rdx,DWORD PTR [rbp+0x10]
   14001067d:	inc    rdx
   140010680:	add    rdx,rdx
   140010683:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010686:	mov    DWORD PTR [rdi+0xa8],eax
   14001068c:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140010690:	mov    DWORD PTR [rdi+0xac],eax
   140010696:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14001069a:	mov    DWORD PTR [rdi+0xb0],eax
   1400106a0:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400106a4:	mov    DWORD PTR [rdi+0xb4],eax
   1400106aa:	mov    rcx,QWORD PTR [rbp+0x28]
   1400106ae:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400106b2:	inc    rdx
   1400106b5:	add    rdx,rdx
   1400106b8:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400106bb:	mov    DWORD PTR [rdi+0xb8],eax
   1400106c1:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400106c5:	mov    DWORD PTR [rdi+0xbc],eax
   1400106cb:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400106cf:	mov    DWORD PTR [rdi+0xc0],eax
   1400106d5:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400106d9:	mov    DWORD PTR [rdi+0xc4],eax
   1400106df:	mov    rax,QWORD PTR [rbp+0x18]
   1400106e3:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400106e7:	mov    rcx,QWORD PTR [rax+rcx*8+0x18]
   1400106ec:	mov    QWORD PTR [rdi+0x60],rcx
   1400106f0:	mov    rcx,QWORD PTR [rbp+0x28]
   1400106f4:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400106f8:	add    rdx,0x5
   1400106fc:	add    rdx,rdx
   1400106ff:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010702:	mov    DWORD PTR [rdi+0xd8],eax
   140010708:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14001070c:	mov    DWORD PTR [rdi+0xdc],eax
   140010712:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140010716:	mov    DWORD PTR [rdi+0xe0],eax
   14001071c:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140010720:	mov    DWORD PTR [rdi+0xe4],eax
   140010726:	jmp    0x14000f9a9
   14001072b:	mov    rdx,QWORD PTR [rbp+0x8]
   14001072f:	mov    ecx,0xe8
   140010734:	call   0x14000e810
   140010739:	mov    rbx,rax
   14001073c:	test   rax,rax
   14001073f:	je     0x140010779
   140010741:	mov    eax,DWORD PTR [rbp+0x10]
   140010744:	lea    rcx,[rsp+0x370]
   14001074c:	or     esi,0x2
   14001074f:	inc    eax
   140010751:	mov    DWORD PTR [rsp+0x30],esi
   140010755:	movsxd rdi,eax
   140010758:	shl    rdi,0x4
   14001075c:	add    rdi,QWORD PTR [rbp+0x30]
   140010760:	call   QWORD PTR [rip+0xfcfa]        # 0x140020460
   140010766:	mov    r8,rdi
   140010769:	mov    rdx,rax
   14001076c:	mov    rcx,rbx
   14001076f:	call   0x14000e850
   140010774:	mov    rdi,rax
   140010777:	jmp    0x14001077c
   140010779:	mov    rdi,r12
   14001077c:	test   sil,0x2
   140010780:	je     0x140010797
   140010782:	and    esi,0xfffffffd
   140010785:	lea    rcx,[rsp+0x370]
   14001078d:	mov    DWORD PTR [rsp+0x30],esi
   140010791:	call   QWORD PTR [rip+0xfcc1]        # 0x140020458
   140010797:	mov    DWORD PTR [rdi+0x10],r12d
   14001079b:	mov    rcx,QWORD PTR [rbp+0x28]
   14001079f:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400107a3:	add    rdx,rdx
   1400107a6:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400107a9:	mov    DWORD PTR [rdi+0x88],eax
   1400107af:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400107b3:	mov    DWORD PTR [rdi+0x8c],eax
   1400107b9:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400107bd:	mov    DWORD PTR [rdi+0x90],eax
   1400107c3:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400107c7:	mov    DWORD PTR [rdi+0x94],eax
   1400107cd:	mov    rcx,QWORD PTR [rbp+0x28]
   1400107d1:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400107d5:	inc    rdx
   1400107d8:	add    rdx,rdx
   1400107db:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400107de:	mov    DWORD PTR [rdi+0xa8],eax
   1400107e4:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400107e8:	mov    DWORD PTR [rdi+0xac],eax
   1400107ee:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400107f2:	mov    DWORD PTR [rdi+0xb0],eax
   1400107f8:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400107fc:	mov    DWORD PTR [rdi+0xb4],eax
   140010802:	mov    rcx,QWORD PTR [rbp+0x28]
   140010806:	movsxd rdx,DWORD PTR [rbp+0x10]
   14001080a:	inc    rdx
   14001080d:	add    rdx,rdx
   140010810:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010813:	mov    DWORD PTR [rdi+0xb8],eax
   140010819:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14001081d:	mov    DWORD PTR [rdi+0xbc],eax
   140010823:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140010827:	mov    DWORD PTR [rdi+0xc0],eax
   14001082d:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140010831:	mov    DWORD PTR [rdi+0xc4],eax
   140010837:	mov    rcx,QWORD PTR [rbp+0x28]
   14001083b:	movsxd rdx,DWORD PTR [rbp+0x10]
   14001083f:	add    rdx,0x2
   140010843:	add    rdx,rdx
   140010846:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010849:	mov    DWORD PTR [rdi+0xd8],eax
   14001084f:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140010853:	mov    DWORD PTR [rdi+0xdc],eax
   140010859:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14001085d:	mov    DWORD PTR [rdi+0xe0],eax
   140010863:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140010867:	mov    DWORD PTR [rdi+0xe4],eax
   14001086d:	jmp    0x14000f9a9
   140010872:	mov    rdx,QWORD PTR [rbp+0x8]
   140010876:	mov    ecx,0xe8
   14001087b:	call   0x14000e810
   140010880:	mov    r11,rax
   140010883:	test   rax,rax
   140010886:	je     0x1400108b6
   140010888:	mov    ecx,DWORD PTR [rbp+0x10]
   14001088b:	mov    rdi,QWORD PTR [rbp+0x30]
   14001088f:	lea    eax,[rcx+0x5]
   140010892:	movsxd r8,eax
   140010895:	lea    eax,[rcx+0x3]
   140010898:	mov    rcx,r11
   14001089b:	movsxd rdx,eax
   14001089e:	shl    r8,0x4
   1400108a2:	shl    rdx,0x4
   1400108a6:	add    r8,rdi
   1400108a9:	add    rdx,rdi
   1400108ac:	call   0x14000e850
   1400108b1:	mov    rdi,rax
   1400108b4:	jmp    0x1400108b9
   1400108b6:	mov    rdi,r12
   1400108b9:	mov    eax,DWORD PTR [rbp+0x10]
   1400108bc:	lea    rcx,[rdi+0x18]
   1400108c0:	inc    eax
   1400108c2:	movsxd rdx,eax
   1400108c5:	shl    rdx,0x4
   1400108c9:	add    rdx,QWORD PTR [rbp+0x30]
   1400108cd:	call   QWORD PTR [rip+0xfb65]        # 0x140020438
   1400108d3:	mov    rcx,QWORD PTR [rbp+0x28]
   1400108d7:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400108db:	add    rdx,rdx
   1400108de:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400108e1:	mov    DWORD PTR [rdi+0x88],eax
   1400108e7:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400108eb:	mov    DWORD PTR [rdi+0x8c],eax
   1400108f1:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400108f5:	mov    DWORD PTR [rdi+0x90],eax
   1400108fb:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400108ff:	mov    DWORD PTR [rdi+0x94],eax
   140010905:	mov    rcx,QWORD PTR [rbp+0x28]
   140010909:	movsxd rdx,DWORD PTR [rbp+0x10]
   14001090d:	inc    rdx
   140010910:	add    rdx,rdx
   140010913:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010916:	mov    DWORD PTR [rdi+0x98],eax
   14001091c:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140010920:	mov    DWORD PTR [rdi+0x9c],eax
   140010926:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14001092a:	mov    DWORD PTR [rdi+0xa0],eax
   140010930:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140010934:	mov    DWORD PTR [rdi+0xa4],eax
   14001093a:	mov    rcx,QWORD PTR [rbp+0x28]
   14001093e:	movsxd rdx,DWORD PTR [rbp+0x10]
   140010942:	add    rdx,0x3
   140010946:	add    rdx,rdx
   140010949:	mov    eax,DWORD PTR [rcx+rdx*8]
   14001094c:	mov    DWORD PTR [rdi+0xa8],eax
   140010952:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140010956:	mov    DWORD PTR [rdi+0xac],eax
   14001095c:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140010960:	mov    DWORD PTR [rdi+0xb0],eax
   140010966:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14001096a:	mov    DWORD PTR [rdi+0xb4],eax
   140010970:	mov    rcx,QWORD PTR [rbp+0x28]
   140010974:	movsxd rdx,DWORD PTR [rbp+0x10]
   140010978:	add    rdx,0x5
   14001097c:	add    rdx,rdx
   14001097f:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010982:	mov    DWORD PTR [rdi+0xb8],eax
   140010988:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14001098c:	mov    DWORD PTR [rdi+0xbc],eax
   140010992:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140010996:	mov    DWORD PTR [rdi+0xc0],eax
   14001099c:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400109a0:	mov    DWORD PTR [rdi+0xc4],eax
   1400109a6:	mov    rcx,QWORD PTR [rbp+0x28]
   1400109aa:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400109ae:	add    rdx,0x6
   1400109b2:	add    rdx,rdx
   1400109b5:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400109b8:	mov    DWORD PTR [rdi+0xd8],eax
   1400109be:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400109c2:	mov    DWORD PTR [rdi+0xdc],eax
   1400109c8:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400109cc:	mov    DWORD PTR [rdi+0xe0],eax
   1400109d2:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400109d6:	mov    DWORD PTR [rdi+0xe4],eax
   1400109dc:	jmp    0x14000f9a9
   1400109e1:	mov    rdx,QWORD PTR [rbp+0x8]
   1400109e5:	mov    ecx,0xe8
   1400109ea:	call   0x14000e810
   1400109ef:	mov    r11,rax
   1400109f2:	test   rax,rax
   1400109f5:	je     0x140010a25
   1400109f7:	mov    ecx,DWORD PTR [rbp+0x10]
   1400109fa:	mov    rdi,QWORD PTR [rbp+0x30]
   1400109fe:	lea    eax,[rcx+0x2]
   140010a01:	movsxd r8,eax
   140010a04:	lea    eax,[rcx+0x1]
   140010a07:	mov    rcx,r11
   140010a0a:	movsxd rdx,eax
   140010a0d:	shl    r8,0x4
   140010a11:	shl    rdx,0x4
   140010a15:	add    r8,rdi
   140010a18:	add    rdx,rdi
   140010a1b:	call   0x14000e850
   140010a20:	mov    rdi,rax
   140010a23:	jmp    0x140010a28
   140010a25:	mov    rdi,r12
   140010a28:	mov    rcx,QWORD PTR [rbp+0x28]
   140010a2c:	movsxd rdx,DWORD PTR [rbp+0x10]
   140010a30:	add    rdx,rdx
   140010a33:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010a36:	mov    DWORD PTR [rdi+0x88],eax
   140010a3c:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140010a40:	mov    DWORD PTR [rdi+0x8c],eax
   140010a46:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140010a4a:	mov    DWORD PTR [rdi+0x90],eax
   140010a50:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140010a54:	mov    DWORD PTR [rdi+0x94],eax
   140010a5a:	mov    rcx,QWORD PTR [rbp+0x28]
   140010a5e:	movsxd rdx,DWORD PTR [rbp+0x10]
   140010a62:	inc    rdx
   140010a65:	add    rdx,rdx
   140010a68:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010a6b:	mov    DWORD PTR [rdi+0xa8],eax
   140010a71:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140010a75:	mov    DWORD PTR [rdi+0xac],eax
   140010a7b:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140010a7f:	mov    DWORD PTR [rdi+0xb0],eax
   140010a85:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140010a89:	mov    DWORD PTR [rdi+0xb4],eax
   140010a8f:	mov    rcx,QWORD PTR [rbp+0x28]
   140010a93:	movsxd rdx,DWORD PTR [rbp+0x10]
   140010a97:	add    rdx,0x2
   140010a9b:	add    rdx,rdx
   140010a9e:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010aa1:	mov    DWORD PTR [rdi+0xb8],eax
   140010aa7:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140010aab:	mov    DWORD PTR [rdi+0xbc],eax
   140010ab1:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140010ab5:	mov    DWORD PTR [rdi+0xc0],eax
   140010abb:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140010abf:	mov    DWORD PTR [rdi+0xc4],eax
   140010ac5:	mov    rcx,QWORD PTR [rbp+0x28]
   140010ac9:	movsxd rdx,DWORD PTR [rbp+0x10]
   140010acd:	add    rdx,0x3
   140010ad1:	add    rdx,rdx
   140010ad4:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010ad7:	mov    DWORD PTR [rdi+0xd8],eax
   140010add:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140010ae1:	mov    DWORD PTR [rdi+0xdc],eax
   140010ae7:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140010aeb:	mov    DWORD PTR [rdi+0xe0],eax
   140010af1:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140010af5:	mov    DWORD PTR [rdi+0xe4],eax
   140010afb:	jmp    0x14000f9a9
   140010b00:	mov    rdx,QWORD PTR [rbp+0x8]
   140010b04:	mov    ecx,0xe8
   140010b09:	call   0x14000e810
   140010b0e:	mov    r11,rax
   140010b11:	test   rax,rax
   140010b14:	je     0x140010b44
   140010b16:	mov    ecx,DWORD PTR [rbp+0x10]
   140010b19:	mov    rdi,QWORD PTR [rbp+0x30]
   140010b1d:	lea    eax,[rcx+0x3]
   140010b20:	movsxd r8,eax
   140010b23:	lea    eax,[rcx+0x2]
   140010b26:	mov    rcx,r11
   140010b29:	movsxd rdx,eax
   140010b2c:	shl    r8,0x4
   140010b30:	shl    rdx,0x4
   140010b34:	add    r8,rdi
   140010b37:	add    rdx,rdi
   140010b3a:	call   0x14000e850
   140010b3f:	mov    rdi,rax
   140010b42:	jmp    0x140010b47
   140010b44:	mov    rdi,r12
   140010b47:	mov    BYTE PTR [rdi+0x58],0x1
   140010b4b:	mov    rcx,QWORD PTR [rbp+0x28]
   140010b4f:	movsxd rdx,DWORD PTR [rbp+0x10]
   140010b53:	add    rdx,rdx
   140010b56:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010b59:	mov    DWORD PTR [rdi+0x68],eax
   140010b5c:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140010b60:	mov    DWORD PTR [rdi+0x6c],eax
   140010b63:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140010b67:	mov    DWORD PTR [rdi+0x70],eax
   140010b6a:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140010b6e:	mov    DWORD PTR [rdi+0x74],eax
   140010b71:	mov    rcx,QWORD PTR [rbp+0x28]
   140010b75:	movsxd rdx,DWORD PTR [rbp+0x10]
   140010b79:	inc    rdx
   140010b7c:	add    rdx,rdx
   140010b7f:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010b82:	mov    DWORD PTR [rdi+0x88],eax
   140010b88:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140010b8c:	mov    DWORD PTR [rdi+0x8c],eax
   140010b92:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140010b96:	mov    DWORD PTR [rdi+0x90],eax
   140010b9c:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140010ba0:	mov    DWORD PTR [rdi+0x94],eax
   140010ba6:	mov    rcx,QWORD PTR [rbp+0x28]
   140010baa:	movsxd rdx,DWORD PTR [rbp+0x10]
   140010bae:	add    rdx,0x2
   140010bb2:	add    rdx,rdx
   140010bb5:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010bb8:	mov    DWORD PTR [rdi+0xa8],eax
   140010bbe:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140010bc2:	mov    DWORD PTR [rdi+0xac],eax
   140010bc8:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140010bcc:	mov    DWORD PTR [rdi+0xb0],eax
   140010bd2:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140010bd6:	mov    DWORD PTR [rdi+0xb4],eax
   140010bdc:	mov    rcx,QWORD PTR [rbp+0x28]
   140010be0:	movsxd rdx,DWORD PTR [rbp+0x10]
   140010be4:	add    rdx,0x3
   140010be8:	add    rdx,rdx
   140010beb:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010bee:	mov    DWORD PTR [rdi+0xb8],eax
   140010bf4:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140010bf8:	mov    DWORD PTR [rdi+0xbc],eax
   140010bfe:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140010c02:	mov    DWORD PTR [rdi+0xc0],eax
   140010c08:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140010c0c:	mov    DWORD PTR [rdi+0xc4],eax
   140010c12:	mov    rcx,QWORD PTR [rbp+0x28]
   140010c16:	movsxd rdx,DWORD PTR [rbp+0x10]
   140010c1a:	add    rdx,0x4
   140010c1e:	add    rdx,rdx
   140010c21:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010c24:	mov    DWORD PTR [rdi+0xd8],eax
   140010c2a:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140010c2e:	mov    DWORD PTR [rdi+0xdc],eax
   140010c34:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140010c38:	mov    DWORD PTR [rdi+0xe0],eax
   140010c3e:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140010c42:	mov    DWORD PTR [rdi+0xe4],eax
   140010c48:	jmp    0x14000f9a9
   140010c4d:	mov    rdx,QWORD PTR [rbp+0x8]
   140010c51:	mov    ecx,0xe8
   140010c56:	call   0x14000e810
   140010c5b:	mov    r11,rax
   140010c5e:	test   rax,rax
   140010c61:	je     0x140010c9f
   140010c63:	mov    edx,DWORD PTR [rbp+0x10]
   140010c66:	mov    rcx,QWORD PTR [rbp+0x30]
   140010c6a:	mov    r9,QWORD PTR [rbp+0x18]
   140010c6e:	lea    eax,[rdx+0x4]
   140010c71:	movsxd rdi,eax
   140010c74:	lea    eax,[rdx+0x2]
   140010c77:	mov    r9,QWORD PTR [r9+rdi*8]
   140010c7b:	movsxd r8,eax
   140010c7e:	lea    eax,[rdx+0x1]
   140010c81:	movsxd rdx,eax
   140010c84:	shl    r8,0x4
   140010c88:	shl    rdx,0x4
   140010c8c:	add    r8,rcx
   140010c8f:	add    rdx,rcx
   140010c92:	mov    rcx,r11
   140010c95:	call   0x14000ea70
   140010c9a:	mov    rdi,rax
   140010c9d:	jmp    0x140010ca2
   140010c9f:	mov    rdi,r12
   140010ca2:	mov    rcx,QWORD PTR [rbp+0x28]
   140010ca6:	movsxd rdx,DWORD PTR [rbp+0x10]
   140010caa:	add    rdx,rdx
   140010cad:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010cb0:	mov    DWORD PTR [rdi+0x88],eax
   140010cb6:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140010cba:	mov    DWORD PTR [rdi+0x8c],eax
   140010cc0:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140010cc4:	mov    DWORD PTR [rdi+0x90],eax
   140010cca:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140010cce:	mov    DWORD PTR [rdi+0x94],eax
   140010cd4:	mov    rcx,QWORD PTR [rbp+0x28]
   140010cd8:	movsxd rdx,DWORD PTR [rbp+0x10]
   140010cdc:	inc    rdx
   140010cdf:	add    rdx,rdx
   140010ce2:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010ce5:	mov    DWORD PTR [rdi+0xa8],eax
   140010ceb:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140010cef:	mov    DWORD PTR [rdi+0xac],eax
   140010cf5:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140010cf9:	mov    DWORD PTR [rdi+0xb0],eax
   140010cff:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140010d03:	mov    DWORD PTR [rdi+0xb4],eax
   140010d09:	mov    rcx,QWORD PTR [rbp+0x28]
   140010d0d:	movsxd rdx,DWORD PTR [rbp+0x10]
   140010d11:	add    rdx,0x2
   140010d15:	add    rdx,rdx
   140010d18:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010d1b:	mov    DWORD PTR [rdi+0xb8],eax
   140010d21:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140010d25:	mov    DWORD PTR [rdi+0xbc],eax
   140010d2b:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140010d2f:	mov    DWORD PTR [rdi+0xc0],eax
   140010d35:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140010d39:	mov    DWORD PTR [rdi+0xc4],eax
   140010d3f:	mov    rcx,QWORD PTR [rbp+0x28]
   140010d43:	movsxd rdx,DWORD PTR [rbp+0x10]
   140010d47:	add    rdx,0x3
   140010d4b:	add    rdx,rdx
   140010d4e:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010d51:	mov    DWORD PTR [rdi+0xc8],eax
   140010d57:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140010d5b:	mov    DWORD PTR [rdi+0xcc],eax
   140010d61:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140010d65:	mov    DWORD PTR [rdi+0xd0],eax
   140010d6b:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140010d6f:	mov    DWORD PTR [rdi+0xd4],eax
   140010d75:	jmp    0x14000f9a9
   140010d7a:	mov    rdx,QWORD PTR [rbp+0x8]
   140010d7e:	mov    ecx,0xe8
   140010d83:	call   0x14000e810
   140010d88:	mov    r11,rax
   140010d8b:	test   rax,rax
   140010d8e:	je     0x140010dcc
   140010d90:	mov    edx,DWORD PTR [rbp+0x10]
   140010d93:	mov    rcx,QWORD PTR [rbp+0x30]
   140010d97:	mov    r9,QWORD PTR [rbp+0x18]
   140010d9b:	lea    eax,[rdx+0x5]
   140010d9e:	movsxd rdi,eax
   140010da1:	lea    eax,[rdx+0x3]
   140010da4:	mov    r9,QWORD PTR [r9+rdi*8]
   140010da8:	movsxd r8,eax
   140010dab:	lea    eax,[rdx+0x2]
   140010dae:	movsxd rdx,eax
   140010db1:	shl    r8,0x4
   140010db5:	shl    rdx,0x4
   140010db9:	add    r8,rcx
   140010dbc:	add    rdx,rcx
   140010dbf:	mov    rcx,r11
   140010dc2:	call   0x14000ea70
   140010dc7:	mov    rdi,rax
   140010dca:	jmp    0x140010dcf
   140010dcc:	mov    rdi,r12
   140010dcf:	mov    BYTE PTR [rdi+0x59],0x1
   140010dd3:	mov    rcx,QWORD PTR [rbp+0x28]
   140010dd7:	movsxd rdx,DWORD PTR [rbp+0x10]
   140010ddb:	add    rdx,rdx
   140010dde:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010de1:	mov    DWORD PTR [rdi+0x78],eax
   140010de4:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140010de8:	mov    DWORD PTR [rdi+0x7c],eax
   140010deb:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140010def:	mov    DWORD PTR [rdi+0x80],eax
   140010df5:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140010df9:	mov    DWORD PTR [rdi+0x84],eax
   140010dff:	mov    rcx,QWORD PTR [rbp+0x28]
   140010e03:	movsxd rdx,DWORD PTR [rbp+0x10]
   140010e07:	inc    rdx
   140010e0a:	add    rdx,rdx
   140010e0d:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010e10:	mov    DWORD PTR [rdi+0x88],eax
   140010e16:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140010e1a:	mov    DWORD PTR [rdi+0x8c],eax
   140010e20:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140010e24:	mov    DWORD PTR [rdi+0x90],eax
   140010e2a:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140010e2e:	mov    DWORD PTR [rdi+0x94],eax
   140010e34:	mov    rcx,QWORD PTR [rbp+0x28]
   140010e38:	movsxd rdx,DWORD PTR [rbp+0x10]
   140010e3c:	add    rdx,0x2
   140010e40:	add    rdx,rdx
   140010e43:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010e46:	mov    DWORD PTR [rdi+0xa8],eax
   140010e4c:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140010e50:	mov    DWORD PTR [rdi+0xac],eax
   140010e56:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140010e5a:	mov    DWORD PTR [rdi+0xb0],eax
   140010e60:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140010e64:	mov    DWORD PTR [rdi+0xb4],eax
   140010e6a:	mov    rcx,QWORD PTR [rbp+0x28]
   140010e6e:	movsxd rdx,DWORD PTR [rbp+0x10]
   140010e72:	add    rdx,0x3
   140010e76:	add    rdx,rdx
   140010e79:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010e7c:	mov    DWORD PTR [rdi+0xb8],eax
   140010e82:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140010e86:	mov    DWORD PTR [rdi+0xbc],eax
   140010e8c:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140010e90:	mov    DWORD PTR [rdi+0xc0],eax
   140010e96:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140010e9a:	mov    DWORD PTR [rdi+0xc4],eax
   140010ea0:	mov    rcx,QWORD PTR [rbp+0x28]
   140010ea4:	movsxd rdx,DWORD PTR [rbp+0x10]
   140010ea8:	add    rdx,0x4
   140010eac:	add    rdx,rdx
   140010eaf:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010eb2:	mov    DWORD PTR [rdi+0xc8],eax
   140010eb8:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140010ebc:	mov    DWORD PTR [rdi+0xcc],eax
   140010ec2:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140010ec6:	mov    DWORD PTR [rdi+0xd0],eax
   140010ecc:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140010ed0:	mov    DWORD PTR [rdi+0xd4],eax
   140010ed6:	jmp    0x14000f9a9
   140010edb:	mov    rdx,QWORD PTR [rbp+0x8]
   140010edf:	mov    ecx,0xe8
   140010ee4:	call   0x14000e810
   140010ee9:	mov    r11,rax
   140010eec:	test   rax,rax
   140010eef:	je     0x140010f2d
   140010ef1:	mov    edx,DWORD PTR [rbp+0x10]
   140010ef4:	mov    rcx,QWORD PTR [rbp+0x30]
   140010ef8:	mov    r9,QWORD PTR [rbp+0x18]
   140010efc:	lea    eax,[rdx+0x5]
   140010eff:	movsxd rdi,eax
   140010f02:	lea    eax,[rdx+0x3]
   140010f05:	mov    r9,QWORD PTR [r9+rdi*8]
   140010f09:	movsxd r8,eax
   140010f0c:	lea    eax,[rdx+0x2]
   140010f0f:	movsxd rdx,eax
   140010f12:	shl    r8,0x4
   140010f16:	shl    rdx,0x4
   140010f1a:	add    r8,rcx
   140010f1d:	add    rdx,rcx
   140010f20:	mov    rcx,r11
   140010f23:	call   0x14000ea70
   140010f28:	mov    rdi,rax
   140010f2b:	jmp    0x140010f30
   140010f2d:	mov    rdi,r12
   140010f30:	mov    BYTE PTR [rdi+0x58],0x1
   140010f34:	mov    rcx,QWORD PTR [rbp+0x28]
   140010f38:	movsxd rdx,DWORD PTR [rbp+0x10]
   140010f3c:	add    rdx,rdx
   140010f3f:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010f42:	mov    DWORD PTR [rdi+0x68],eax
   140010f45:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140010f49:	mov    DWORD PTR [rdi+0x6c],eax
   140010f4c:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140010f50:	mov    DWORD PTR [rdi+0x70],eax
   140010f53:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140010f57:	mov    DWORD PTR [rdi+0x74],eax
   140010f5a:	jmp    0x140010dff
   140010f5f:	mov    rdx,QWORD PTR [rbp+0x8]
   140010f63:	mov    ecx,0xe8
   140010f68:	call   0x14000e810
   140010f6d:	mov    r11,rax
   140010f70:	test   rax,rax
   140010f73:	je     0x140010fa3
   140010f75:	mov    ecx,DWORD PTR [rbp+0x10]
   140010f78:	mov    rdi,QWORD PTR [rbp+0x30]
   140010f7c:	lea    eax,[rcx+0x5]
   140010f7f:	movsxd r8,eax
   140010f82:	lea    eax,[rcx+0x3]
   140010f85:	mov    rcx,r11
   140010f88:	movsxd rdx,eax
   140010f8b:	shl    r8,0x4
   140010f8f:	shl    rdx,0x4
   140010f93:	add    r8,rdi
   140010f96:	add    rdx,rdi
   140010f99:	call   0x14000e850
   140010f9e:	mov    rsi,rax
   140010fa1:	jmp    0x140010fa6
   140010fa3:	mov    rsi,r12
   140010fa6:	mov    eax,DWORD PTR [rbp+0x10]
   140010fa9:	lea    rcx,[rsi+0x18]
   140010fad:	inc    eax
   140010faf:	movsxd rdx,eax
   140010fb2:	shl    rdx,0x4
   140010fb6:	add    rdx,QWORD PTR [rbp+0x30]
   140010fba:	call   QWORD PTR [rip+0xf478]        # 0x140020438
   140010fc0:	mov    rcx,QWORD PTR [rbp+0x28]
   140010fc4:	movsxd rdx,DWORD PTR [rbp+0x10]
   140010fc8:	add    rdx,rdx
   140010fcb:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010fce:	mov    DWORD PTR [rsi+0x88],eax
   140010fd4:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140010fd8:	mov    DWORD PTR [rsi+0x8c],eax
   140010fde:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140010fe2:	mov    DWORD PTR [rsi+0x90],eax
   140010fe8:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140010fec:	mov    DWORD PTR [rsi+0x94],eax
   140010ff2:	mov    rcx,QWORD PTR [rbp+0x28]
   140010ff6:	movsxd rdx,DWORD PTR [rbp+0x10]
   140010ffa:	inc    rdx
   140010ffd:	add    rdx,rdx
   140011000:	mov    eax,DWORD PTR [rcx+rdx*8]
   140011003:	mov    DWORD PTR [rsi+0x98],eax
   140011009:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14001100d:	mov    DWORD PTR [rsi+0x9c],eax
   140011013:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140011017:	mov    DWORD PTR [rsi+0xa0],eax
   14001101d:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140011021:	mov    DWORD PTR [rsi+0xa4],eax
   140011027:	mov    rcx,QWORD PTR [rbp+0x28]
   14001102b:	movsxd rdx,DWORD PTR [rbp+0x10]
   14001102f:	add    rdx,0x3
   140011033:	add    rdx,rdx
   140011036:	mov    eax,DWORD PTR [rcx+rdx*8]
   140011039:	mov    DWORD PTR [rsi+0xa8],eax
   14001103f:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140011043:	mov    DWORD PTR [rsi+0xac],eax
   140011049:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14001104d:	mov    DWORD PTR [rsi+0xb0],eax
   140011053:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140011057:	mov    DWORD PTR [rsi+0xb4],eax
   14001105d:	mov    rcx,QWORD PTR [rbp+0x28]
   140011061:	movsxd rdx,DWORD PTR [rbp+0x10]
   140011065:	add    rdx,0x5
   140011069:	add    rdx,rdx
   14001106c:	mov    eax,DWORD PTR [rcx+rdx*8]
   14001106f:	mov    DWORD PTR [rsi+0xb8],eax
   140011075:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140011079:	mov    DWORD PTR [rsi+0xbc],eax
   14001107f:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140011083:	mov    DWORD PTR [rsi+0xc0],eax
   140011089:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14001108d:	mov    DWORD PTR [rsi+0xc4],eax
   140011093:	mov    rcx,QWORD PTR [rbp+0x28]
   140011097:	movsxd rdx,DWORD PTR [rbp+0x10]
   14001109b:	add    rdx,0x6
   14001109f:	add    rdx,rdx
   1400110a2:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400110a5:	mov    DWORD PTR [rsi+0xd8],eax
   1400110ab:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400110af:	mov    DWORD PTR [rsi+0xdc],eax
   1400110b5:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400110b9:	mov    DWORD PTR [rsi+0xe0],eax
   1400110bf:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400110c3:	mov    ecx,0x38
   1400110c8:	mov    DWORD PTR [rsi+0xe4],eax
   1400110ce:	mov    rdx,QWORD PTR [rbp+0x8]
   1400110d2:	call   0x14000e810
   1400110d7:	mov    rbx,rax
   1400110da:	test   rax,rax
   1400110dd:	je     0x140011125
   1400110df:	mov    eax,DWORD PTR [rbp+0x10]
   1400110e2:	lea    rcx,[rbx+0x18]
   1400110e6:	add    eax,0x5
   1400110e9:	movsxd rdx,eax
   1400110ec:	lea    rax,[rip+0x113b5]        # 0x1400224a8
   1400110f3:	shl    rdx,0x4
   1400110f7:	add    rdx,QWORD PTR [rbp+0x30]
   1400110fb:	mov    DWORD PTR [rbx+0x8],r12d
   1400110ff:	mov    QWORD PTR [rbx],rax
   140011102:	mov    QWORD PTR [rbx+0x10],rbx
   140011106:	call   QWORD PTR [rip+0xf324]        # 0x140020430
   14001110c:	mov    DWORD PTR [rbx+0x28],r12d
   140011110:	mov    DWORD PTR [rbx+0x2c],r12d
   140011114:	mov    DWORD PTR [rbx+0x30],r12d
   140011118:	mov    DWORD PTR [rbx+0x34],r12d
   14001111c:	mov    DWORD PTR [rbx+0x8],0x5a
   140011123:	jmp    0x140011128
   140011125:	mov    rbx,r12
   140011128:	mov    rcx,QWORD PTR [rbp+0x28]
   14001112c:	movsxd rdx,DWORD PTR [rbp+0x10]
   140011130:	add    rdx,0x5
   140011134:	add    rdx,rdx
   140011137:	mov    eax,DWORD PTR [rcx+rdx*8]
   14001113a:	mov    DWORD PTR [rbx+0x28],eax
   14001113d:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140011141:	mov    DWORD PTR [rbx+0x2c],eax
   140011144:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140011148:	mov    DWORD PTR [rbx+0x30],eax
   14001114b:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14001114f:	mov    ecx,0x50
   140011154:	mov    DWORD PTR [rbx+0x34],eax
   140011157:	mov    QWORD PTR [rbx+0x10],r12
   14001115b:	mov    rdx,QWORD PTR [rbp+0x8]
   14001115f:	call   0x14000e810
   140011164:	mov    rdi,rax
   140011167:	test   rax,rax
   14001116a:	je     0x1400111cc
   14001116c:	movsxd rcx,DWORD PTR [rbp+0x10]
   140011170:	mov    rax,QWORD PTR [rbp+0x18]
   140011174:	mov    rdx,QWORD PTR [rax+rcx*8+0x40]
   140011179:	lea    rcx,[rip+0x11788]        # 0x140022908
   140011180:	mov    rax,QWORD PTR [rdx+0x10]
   140011184:	mov    QWORD PTR [rdx+0x10],r12
   140011188:	mov    QWORD PTR [rdi],rcx
   14001118b:	mov    QWORD PTR [rdi+0x10],rbx
   14001118f:	mov    QWORD PTR [rdi+0x18],rax
   140011193:	mov    DWORD PTR [rdi+0x20],r12d
   140011197:	mov    DWORD PTR [rdi+0x24],r12d
   14001119b:	mov    DWORD PTR [rdi+0x28],r12d
   14001119f:	mov    DWORD PTR [rdi+0x2c],r12d
   1400111a3:	mov    DWORD PTR [rdi+0x30],r12d
   1400111a7:	mov    DWORD PTR [rdi+0x34],r12d
   1400111ab:	mov    DWORD PTR [rdi+0x38],r12d
   1400111af:	mov    DWORD PTR [rdi+0x3c],r12d
   1400111b3:	mov    DWORD PTR [rdi+0x40],r12d
   1400111b7:	mov    DWORD PTR [rdi+0x44],r12d
   1400111bb:	mov    DWORD PTR [rdi+0x48],r12d
   1400111bf:	mov    DWORD PTR [rdi+0x4c],r12d
   1400111c3:	mov    DWORD PTR [rdi+0x8],0x4f
   1400111ca:	jmp    0x1400111cf
   1400111cc:	mov    rdi,r12
   1400111cf:	mov    rcx,QWORD PTR [rbp+0x28]
   1400111d3:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400111d7:	lea    r9,[rip+0xfffffffffffeee22]        # 0x140000000
   1400111de:	add    rdx,0x6
   1400111e2:	add    rdx,rdx
   1400111e5:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400111e8:	mov    DWORD PTR [rdi+0x20],eax
   1400111eb:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400111ef:	mov    DWORD PTR [rdi+0x24],eax
   1400111f2:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400111f6:	mov    DWORD PTR [rdi+0x28],eax
   1400111f9:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400111fd:	mov    DWORD PTR [rdi+0x2c],eax
   140011200:	mov    rcx,QWORD PTR [rbp+0x28]
   140011204:	movsxd rdx,DWORD PTR [rbp+0x10]
   140011208:	add    rdx,0x7
   14001120c:	add    rdx,rdx
   14001120f:	mov    eax,DWORD PTR [rcx+rdx*8]
   140011212:	mov    DWORD PTR [rdi+0x30],eax
   140011215:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140011219:	mov    DWORD PTR [rdi+0x34],eax
   14001121c:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140011220:	mov    DWORD PTR [rdi+0x38],eax
   140011223:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140011227:	mov    DWORD PTR [rdi+0x3c],eax
   14001122a:	mov    rcx,QWORD PTR [rbp+0x28]
   14001122e:	movsxd rdx,DWORD PTR [rbp+0x10]
   140011232:	add    rdx,0x9
   140011236:	add    rdx,rdx
   140011239:	mov    eax,DWORD PTR [rcx+rdx*8]
   14001123c:	mov    DWORD PTR [rdi+0x40],eax
   14001123f:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140011243:	mov    DWORD PTR [rdi+0x44],eax
   140011246:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14001124a:	mov    DWORD PTR [rdi+0x48],eax
   14001124d:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140011251:	mov    DWORD PTR [rdi+0x4c],eax
   140011254:	mov    QWORD PTR [rsi+0x50],rdi
   140011258:	movsxd rcx,DWORD PTR [rbp+0x10]
   14001125c:	mov    rax,QWORD PTR [rbp+0x18]
   140011260:	mov    QWORD PTR [rax+rcx*8],rsi
   140011264:	mov    esi,DWORD PTR [rsp+0x30]
   140011268:	jmp    0x140015510
   14001126d:	mov    rdx,QWORD PTR [rbp+0x8]
   140011271:	mov    ecx,0xe8
   140011276:	call   0x14000e810
   14001127b:	mov    r11,rax
   14001127e:	test   rax,rax
   140011281:	je     0x1400112b1
   140011283:	mov    ecx,DWORD PTR [rbp+0x10]
   140011286:	mov    rdi,QWORD PTR [rbp+0x30]
   14001128a:	lea    eax,[rcx+0x2]
   14001128d:	movsxd r8,eax
   140011290:	lea    eax,[rcx+0x1]
   140011293:	mov    rcx,r11
   140011296:	movsxd rdx,eax
   140011299:	shl    r8,0x4
   14001129d:	shl    rdx,0x4
   1400112a1:	add    r8,rdi
   1400112a4:	add    rdx,rdi
   1400112a7:	call   0x14000e850
   1400112ac:	mov    rsi,rax
   1400112af:	jmp    0x1400112b4
   1400112b1:	mov    rsi,r12
   1400112b4:	mov    rcx,QWORD PTR [rbp+0x28]
   1400112b8:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400112bc:	add    rdx,rdx
   1400112bf:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400112c2:	mov    DWORD PTR [rsi+0x88],eax
   1400112c8:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400112cc:	mov    DWORD PTR [rsi+0x8c],eax
   1400112d2:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400112d6:	mov    DWORD PTR [rsi+0x90],eax
   1400112dc:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400112e0:	mov    DWORD PTR [rsi+0x94],eax
   1400112e6:	mov    rcx,QWORD PTR [rbp+0x28]
   1400112ea:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400112ee:	inc    rdx
   1400112f1:	add    rdx,rdx
   1400112f4:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400112f7:	mov    DWORD PTR [rsi+0xa8],eax
   1400112fd:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140011301:	mov    DWORD PTR [rsi+0xac],eax
   140011307:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14001130b:	mov    DWORD PTR [rsi+0xb0],eax
   140011311:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140011315:	mov    DWORD PTR [rsi+0xb4],eax
   14001131b:	mov    rcx,QWORD PTR [rbp+0x28]
   14001131f:	movsxd rdx,DWORD PTR [rbp+0x10]
   140011323:	add    rdx,0x2
   140011327:	add    rdx,rdx
   14001132a:	mov    eax,DWORD PTR [rcx+rdx*8]
   14001132d:	mov    DWORD PTR [rsi+0xb8],eax
   140011333:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140011337:	mov    DWORD PTR [rsi+0xbc],eax
   14001133d:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140011341:	mov    DWORD PTR [rsi+0xc0],eax
   140011347:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14001134b:	mov    DWORD PTR [rsi+0xc4],eax
   140011351:	mov    rcx,QWORD PTR [rbp+0x28]
   140011355:	movsxd rdx,DWORD PTR [rbp+0x10]
   140011359:	add    rdx,0x3
   14001135d:	add    rdx,rdx
   140011360:	mov    eax,DWORD PTR [rcx+rdx*8]
   140011363:	mov    DWORD PTR [rsi+0xd8],eax
   140011369:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14001136d:	mov    DWORD PTR [rsi+0xdc],eax
   140011373:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140011377:	mov    DWORD PTR [rsi+0xe0],eax
   14001137d:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140011381:	mov    ecx,0x38
   140011386:	mov    DWORD PTR [rsi+0xe4],eax
   14001138c:	mov    rdx,QWORD PTR [rbp+0x8]
   140011390:	call   0x14000e810
   140011395:	mov    rbx,rax
   140011398:	test   rax,rax
   14001139b:	je     0x1400113e3
   14001139d:	mov    eax,DWORD PTR [rbp+0x10]
   1400113a0:	lea    rcx,[rbx+0x18]
   1400113a4:	add    eax,0x2
   1400113a7:	movsxd rdx,eax
   1400113aa:	lea    rax,[rip+0x110f7]        # 0x1400224a8
   1400113b1:	shl    rdx,0x4
   1400113b5:	add    rdx,QWORD PTR [rbp+0x30]
   1400113b9:	mov    DWORD PTR [rbx+0x8],r12d
   1400113bd:	mov    QWORD PTR [rbx],rax
   1400113c0:	mov    QWORD PTR [rbx+0x10],rbx
   1400113c4:	call   QWORD PTR [rip+0xf066]        # 0x140020430
   1400113ca:	mov    DWORD PTR [rbx+0x28],r12d
   1400113ce:	mov    DWORD PTR [rbx+0x2c],r12d
   1400113d2:	mov    DWORD PTR [rbx+0x30],r12d
   1400113d6:	mov    DWORD PTR [rbx+0x34],r12d
   1400113da:	mov    DWORD PTR [rbx+0x8],0x5a
   1400113e1:	jmp    0x1400113e6
   1400113e3:	mov    rbx,r12
   1400113e6:	mov    rcx,QWORD PTR [rbp+0x28]
   1400113ea:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400113ee:	add    rdx,0x2
   1400113f2:	add    rdx,rdx
   1400113f5:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400113f8:	mov    DWORD PTR [rbx+0x28],eax
   1400113fb:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400113ff:	mov    DWORD PTR [rbx+0x2c],eax
   140011402:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140011406:	mov    DWORD PTR [rbx+0x30],eax
   140011409:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14001140d:	mov    ecx,0x40
   140011412:	mov    DWORD PTR [rbx+0x34],eax
   140011415:	mov    QWORD PTR [rbx+0x10],r12
   140011419:	mov    rdx,QWORD PTR [rbp+0x8]
   14001141d:	call   0x14000e810
   140011422:	mov    r11,rax
   140011425:	test   rax,rax
   140011428:	je     0x140011470
   14001142a:	mov    rax,QWORD PTR [rbp+0x18]
   14001142e:	movsxd rcx,DWORD PTR [rbp+0x10]
   140011432:	mov    rdi,QWORD PTR [rax+rcx*8+0x28]
   140011437:	mov    rdx,QWORD PTR [rax+rcx*8+0x20]
   14001143c:	lea    rax,[rip+0x11425]        # 0x140022868
   140011443:	mov    QWORD PTR [r11],rax
   140011446:	mov    QWORD PTR [r11+0x10],rbx
   14001144a:	mov    QWORD PTR [r11+0x18],rdx
   14001144e:	mov    QWORD PTR [r11+0x20],rdi
   140011452:	mov    DWORD PTR [r11+0x28],r12d
   140011456:	mov    DWORD PTR [r11+0x2c],r12d
   14001145a:	mov    DWORD PTR [r11+0x30],r12d
   14001145e:	mov    DWORD PTR [r11+0x34],r12d
   140011462:	mov    BYTE PTR [r11+0x38],r12b
   140011466:	mov    DWORD PTR [r11+0x8],0x51
   14001146e:	jmp    0x140011473
   140011470:	mov    r11,r12
   140011473:	movsxd rdx,DWORD PTR [rbp+0x10]
   140011477:	add    rdx,0x3
   14001147b:	mov    rcx,QWORD PTR [rbp+0x28]
   14001147f:	add    rdx,rdx
   140011482:	lea    r9,[rip+0xfffffffffffeeb77]        # 0x140000000
   140011489:	mov    eax,DWORD PTR [rcx+rdx*8]
   14001148c:	mov    DWORD PTR [r11+0x28],eax
   140011490:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140011494:	mov    DWORD PTR [r11+0x2c],eax
   140011498:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14001149c:	mov    DWORD PTR [r11+0x30],eax
   1400114a0:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400114a4:	mov    DWORD PTR [r11+0x34],eax
   1400114a8:	mov    QWORD PTR [rsi+0x50],r11
   1400114ac:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400114b0:	mov    rax,QWORD PTR [rbp+0x18]
   1400114b4:	mov    QWORD PTR [rax+rcx*8],rsi
   1400114b8:	mov    esi,DWORD PTR [rsp+0x30]
   1400114bc:	jmp    0x140015510
   1400114c1:	mov    rdx,QWORD PTR [rbp+0x8]
   1400114c5:	mov    ecx,0xe8
   1400114ca:	call   0x14000e810
   1400114cf:	mov    r11,rax
   1400114d2:	test   rax,rax
   1400114d5:	je     0x140011505
   1400114d7:	mov    ecx,DWORD PTR [rbp+0x10]
   1400114da:	mov    rdi,QWORD PTR [rbp+0x30]
   1400114de:	lea    eax,[rcx+0x3]
   1400114e1:	movsxd r8,eax
   1400114e4:	lea    eax,[rcx+0x2]
   1400114e7:	mov    rcx,r11
   1400114ea:	movsxd rdx,eax
   1400114ed:	shl    r8,0x4
   1400114f1:	shl    rdx,0x4
   1400114f5:	add    r8,rdi
   1400114f8:	add    rdx,rdi
   1400114fb:	call   0x14000e850
   140011500:	mov    rsi,rax
   140011503:	jmp    0x140011508
   140011505:	mov    rsi,r12
   140011508:	mov    BYTE PTR [rsi+0x59],0x1
   14001150c:	mov    rcx,QWORD PTR [rbp+0x28]
   140011510:	movsxd rdx,DWORD PTR [rbp+0x10]
   140011514:	add    rdx,rdx
   140011517:	mov    eax,DWORD PTR [rcx+rdx*8]
   14001151a:	mov    DWORD PTR [rsi+0x78],eax
   14001151d:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140011521:	mov    DWORD PTR [rsi+0x7c],eax
   140011524:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140011528:	mov    DWORD PTR [rsi+0x80],eax
   14001152e:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140011532:	mov    DWORD PTR [rsi+0x84],eax
   140011538:	mov    rcx,QWORD PTR [rbp+0x28]
   14001153c:	movsxd rdx,DWORD PTR [rbp+0x10]
   140011540:	inc    rdx
   140011543:	add    rdx,rdx
   140011546:	mov    eax,DWORD PTR [rcx+rdx*8]
   140011549:	mov    DWORD PTR [rsi+0x88],eax
   14001154f:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140011553:	mov    DWORD PTR [rsi+0x8c],eax
   140011559:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14001155d:	mov    DWORD PTR [rsi+0x90],eax
   140011563:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140011567:	mov    DWORD PTR [rsi+0x94],eax
   14001156d:	mov    rcx,QWORD PTR [rbp+0x28]
   140011571:	movsxd rdx,DWORD PTR [rbp+0x10]
   140011575:	add    rdx,0x2
   140011579:	add    rdx,rdx
   14001157c:	mov    eax,DWORD PTR [rcx+rdx*8]
   14001157f:	mov    DWORD PTR [rsi+0xa8],eax
   140011585:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140011589:	mov    DWORD PTR [rsi+0xac],eax
   14001158f:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140011593:	mov    DWORD PTR [rsi+0xb0],eax
   140011599:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14001159d:	mov    DWORD PTR [rsi+0xb4],eax
   1400115a3:	mov    rcx,QWORD PTR [rbp+0x28]
   1400115a7:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400115ab:	add    rdx,0x3
   1400115af:	add    rdx,rdx
   1400115b2:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400115b5:	mov    DWORD PTR [rsi+0xb8],eax
   1400115bb:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400115bf:	mov    DWORD PTR [rsi+0xbc],eax
   1400115c5:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400115c9:	mov    DWORD PTR [rsi+0xc0],eax
   1400115cf:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400115d3:	mov    DWORD PTR [rsi+0xc4],eax
   1400115d9:	mov    rcx,QWORD PTR [rbp+0x28]
   1400115dd:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400115e1:	add    rdx,0x4
   1400115e5:	add    rdx,rdx
   1400115e8:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400115eb:	mov    DWORD PTR [rsi+0xd8],eax
   1400115f1:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400115f5:	mov    DWORD PTR [rsi+0xdc],eax
   1400115fb:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400115ff:	mov    DWORD PTR [rsi+0xe0],eax
   140011605:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140011609:	mov    ecx,0x38
   14001160e:	mov    DWORD PTR [rsi+0xe4],eax
   140011614:	mov    rdx,QWORD PTR [rbp+0x8]
   140011618:	call   0x14000e810
   14001161d:	mov    rcx,rax
   140011620:	test   rax,rax
   140011623:	je     0x140011640
   140011625:	mov    eax,DWORD PTR [rbp+0x10]
   140011628:	add    eax,0x3
   14001162b:	movsxd rdx,eax
   14001162e:	shl    rdx,0x4
   140011632:	add    rdx,QWORD PTR [rbp+0x30]
   140011636:	call   0x14000e0b0
   14001163b:	mov    rbx,rax
   14001163e:	jmp    0x140011643
   140011640:	mov    rbx,r12
   140011643:	mov    rcx,QWORD PTR [rbp+0x28]
   140011647:	movsxd rdx,DWORD PTR [rbp+0x10]
   14001164b:	add    rdx,0x3
   14001164f:	add    rdx,rdx
   140011652:	mov    eax,DWORD PTR [rcx+rdx*8]
   140011655:	mov    DWORD PTR [rbx+0x28],eax
   140011658:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14001165c:	mov    DWORD PTR [rbx+0x2c],eax
   14001165f:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140011663:	mov    DWORD PTR [rbx+0x30],eax
   140011666:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14001166a:	mov    ecx,0x40
   14001166f:	mov    DWORD PTR [rbx+0x34],eax
   140011672:	mov    QWORD PTR [rbx+0x10],r12
   140011676:	mov    rdx,QWORD PTR [rbp+0x8]
   14001167a:	call   0x14000e810
   14001167f:	mov    r11,rax
   140011682:	test   rax,rax
   140011685:	je     0x1400116d8
   140011687:	mov    rax,QWORD PTR [rbp+0x18]
   14001168b:	movsxd rcx,DWORD PTR [rbp+0x10]
   14001168f:	mov    rdx,QWORD PTR [rax+rcx*8+0x28]
   140011694:	mov    rdi,QWORD PTR [rax+rcx*8+0x30]
   140011699:	lea    rax,[rip+0x111c8]        # 0x140022868
   1400116a0:	mov    QWORD PTR [r11],rax
   1400116a3:	mov    QWORD PTR [r11+0x10],rbx
   1400116a7:	mov    QWORD PTR [r11+0x18],rdx
   1400116ab:	mov    QWORD PTR [r11+0x20],rdi
   1400116af:	mov    DWORD PTR [r11+0x28],r12d
   1400116b3:	mov    DWORD PTR [r11+0x2c],r12d
   1400116b7:	mov    DWORD PTR [r11+0x30],r12d
   1400116bb:	mov    DWORD PTR [r11+0x34],r12d
   1400116bf:	mov    BYTE PTR [r11+0x38],r12b
   1400116c3:	mov    DWORD PTR [r11+0x8],0x51
   1400116cb:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400116cf:	add    rdx,0x4
   1400116d3:	jmp    0x14001147b
   1400116d8:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400116dc:	mov    r11,r12
   1400116df:	add    rdx,0x4
   1400116e3:	jmp    0x14001147b
   1400116e8:	mov    rdx,QWORD PTR [rbp+0x8]
   1400116ec:	mov    ecx,0x18
   1400116f1:	call   0x14000e810
   1400116f6:	mov    rdi,rax
   1400116f9:	test   rax,rax
   1400116fc:	je     0x14000f9a6
   140011702:	mov    rax,QWORD PTR [rbp+0x18]
   140011706:	movsxd rcx,DWORD PTR [rbp+0x10]
   14001170a:	mov    rdx,QWORD PTR [rax+rcx*8]
   14001170e:	lea    rax,[rip+0x11103]        # 0x140022818
   140011715:	mov    QWORD PTR [rdi],rax
   140011718:	mov    QWORD PTR [rdi+0x10],rdx
   14001171c:	mov    DWORD PTR [rdi+0x8],0x5d
   140011723:	jmp    0x14000f9a9
   140011728:	mov    rdx,QWORD PTR [rbp+0x8]
   14001172c:	mov    ecx,0x20
   140011731:	call   0x14000e810
   140011736:	mov    rdi,rax
   140011739:	test   rax,rax
   14001173c:	je     0x140011761
   14001173e:	lea    rax,[rip+0xf5f3]        # 0x140020d38
   140011745:	mov    QWORD PTR [rdi],rax
   140011748:	mov    DWORD PTR [rdi+0x10],r12d
   14001174c:	mov    DWORD PTR [rdi+0x14],r12d
   140011750:	mov    DWORD PTR [rdi+0x18],r12d
   140011754:	mov    DWORD PTR [rdi+0x1c],r12d
   140011758:	mov    DWORD PTR [rdi+0x8],0x40
   14001175f:	jmp    0x140011764
   140011761:	mov    rdi,r12
   140011764:	mov    rcx,QWORD PTR [rbp+0x28]
   140011768:	movsxd rdx,DWORD PTR [rbp+0x10]
   14001176c:	add    rdx,rdx
   14001176f:	mov    eax,DWORD PTR [rcx+rdx*8]
   140011772:	mov    DWORD PTR [rdi+0x10],eax
   140011775:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140011779:	mov    DWORD PTR [rdi+0x14],eax
   14001177c:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140011780:	mov    DWORD PTR [rdi+0x18],eax
   140011783:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140011787:	mov    DWORD PTR [rdi+0x1c],eax
   14001178a:	jmp    0x14000f9a9
   14001178f:	mov    rdx,QWORD PTR [rbp+0x8]
   140011793:	mov    ecx,0x30
   140011798:	call   0x14000e810
   14001179d:	mov    rdi,rax
   1400117a0:	test   rax,rax
   1400117a3:	je     0x1400117e2
   1400117a5:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400117a9:	lea    rcx,[rdi+0x10]
   1400117ad:	shl    rdx,0x4
   1400117b1:	add    rdx,QWORD PTR [rbp+0x30]
   1400117b5:	mov    DWORD PTR [rax+0x8],r12d
   1400117b9:	lea    rax,[rip+0xf5c8]        # 0x140020d88
   1400117c0:	mov    QWORD PTR [rdi],rax
   1400117c3:	call   QWORD PTR [rip+0xec67]        # 0x140020430
   1400117c9:	mov    DWORD PTR [rdi+0x20],r12d
   1400117cd:	mov    DWORD PTR [rdi+0x24],r12d
   1400117d1:	mov    DWORD PTR [rdi+0x28],r12d
   1400117d5:	mov    DWORD PTR [rdi+0x2c],r12d
   1400117d9:	mov    DWORD PTR [rdi+0x8],0x21
   1400117e0:	jmp    0x1400117e5
   1400117e2:	mov    rdi,r12
   1400117e5:	mov    rcx,QWORD PTR [rbp+0x28]
   1400117e9:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400117ed:	add    rdx,rdx
   1400117f0:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400117f3:	mov    DWORD PTR [rdi+0x20],eax
   1400117f6:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400117fa:	mov    DWORD PTR [rdi+0x24],eax
   1400117fd:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140011801:	mov    DWORD PTR [rdi+0x28],eax
   140011804:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140011808:	mov    DWORD PTR [rdi+0x2c],eax
   14001180b:	jmp    0x14000f9a9
   140011810:	mov    rdx,QWORD PTR [rbp+0x8]
   140011814:	mov    ecx,0x20
   140011819:	call   0x14000e810
   14001181e:	mov    rdi,rax
   140011821:	test   rax,rax
   140011824:	je     0x140011761
   14001182a:	lea    rax,[rip+0xf5a7]        # 0x140020dd8
   140011831:	mov    QWORD PTR [rdi],rax
   140011834:	mov    DWORD PTR [rdi+0x10],r12d
   140011838:	mov    DWORD PTR [rdi+0x14],r12d
   14001183c:	mov    DWORD PTR [rdi+0x18],r12d
   140011840:	mov    DWORD PTR [rdi+0x1c],r12d
   140011844:	mov    DWORD PTR [rdi+0x8],0x2a
   14001184b:	jmp    0x140011764
   140011850:	mov    rdx,QWORD PTR [rbp+0x8]
   140011854:	mov    ecx,0x20
   140011859:	call   0x14000e810
   14001185e:	mov    rdi,rax
   140011861:	test   rax,rax
   140011864:	je     0x140011761
   14001186a:	lea    rax,[rip+0xf5b7]        # 0x140020e28
   140011871:	mov    QWORD PTR [rdi],rax
   140011874:	mov    DWORD PTR [rdi+0x10],r12d
   140011878:	mov    DWORD PTR [rdi+0x14],r12d
   14001187c:	mov    DWORD PTR [rdi+0x18],r12d
   140011880:	mov    DWORD PTR [rdi+0x1c],r12d
   140011884:	mov    DWORD PTR [rdi+0x8],0x43
   14001188b:	jmp    0x140011764
   140011890:	mov    rdx,QWORD PTR [rbp+0x8]
   140011894:	mov    ecx,0x20
   140011899:	call   0x14000e810
   14001189e:	mov    rdi,rax
   1400118a1:	test   rax,rax
   1400118a4:	je     0x140011761
   1400118aa:	lea    rax,[rip+0xf5c7]        # 0x140020e78
   1400118b1:	mov    QWORD PTR [rdi],rax
   1400118b4:	mov    DWORD PTR [rdi+0x10],r12d
   1400118b8:	mov    DWORD PTR [rdi+0x14],r12d
   1400118bc:	mov    DWORD PTR [rdi+0x18],r12d
   1400118c0:	mov    DWORD PTR [rdi+0x1c],r12d
   1400118c4:	mov    DWORD PTR [rdi+0x8],0x17
   1400118cb:	jmp    0x140011764
   1400118d0:	mov    rdx,QWORD PTR [rbp+0x8]
   1400118d4:	mov    ecx,0x28
   1400118d9:	call   0x14000e810
   1400118de:	mov    rdi,rax
   1400118e1:	test   rax,rax
   1400118e4:	je     0x14001191b
   1400118e6:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400118ea:	mov    rax,QWORD PTR [rbp+0x18]
   1400118ee:	movsd  xmm0,QWORD PTR [rax+rcx*8]
   1400118f3:	lea    rax,[rip+0xf5ce]        # 0x140020ec8
   1400118fa:	mov    QWORD PTR [rdi],rax
   1400118fd:	movsd  QWORD PTR [rdi+0x10],xmm0
   140011902:	mov    DWORD PTR [rdi+0x18],r12d
   140011906:	mov    DWORD PTR [rdi+0x1c],r12d
   14001190a:	mov    DWORD PTR [rdi+0x20],r12d
   14001190e:	mov    DWORD PTR [rdi+0x24],r12d
   140011912:	mov    DWORD PTR [rdi+0x8],0x2b
   140011919:	jmp    0x14001191e
   14001191b:	mov    rdi,r12
   14001191e:	mov    rcx,QWORD PTR [rbp+0x28]
   140011922:	movsxd rdx,DWORD PTR [rbp+0x10]
   140011926:	add    rdx,rdx
   140011929:	mov    eax,DWORD PTR [rcx+rdx*8]
   14001192c:	mov    DWORD PTR [rdi+0x18],eax
   14001192f:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140011933:	mov    DWORD PTR [rdi+0x1c],eax
   140011936:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14001193a:	mov    DWORD PTR [rdi+0x20],eax
   14001193d:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140011941:	mov    DWORD PTR [rdi+0x24],eax
   140011944:	jmp    0x14000f9a9
   140011949:	mov    rdx,QWORD PTR [rbp+0x8]
   14001194d:	mov    ecx,0x30
   140011952:	call   0x14000e810
   140011957:	mov    rdi,rax
   14001195a:	test   rax,rax
   14001195d:	je     0x1400117e2
   140011963:	movsxd rdx,DWORD PTR [rbp+0x10]
   140011967:	lea    rcx,[rdi+0x10]
   14001196b:	shl    rdx,0x4
   14001196f:	add    rdx,QWORD PTR [rbp+0x30]
   140011973:	mov    DWORD PTR [rax+0x8],r12d
   140011977:	lea    rax,[rip+0xf59a]        # 0x140020f18
   14001197e:	mov    QWORD PTR [rdi],rax
   140011981:	call   QWORD PTR [rip+0xeaa9]        # 0x140020430
   140011987:	mov    DWORD PTR [rdi+0x20],r12d
   14001198b:	mov    DWORD PTR [rdi+0x24],r12d
   14001198f:	mov    DWORD PTR [rdi+0x28],r12d
   140011993:	mov    DWORD PTR [rdi+0x2c],r12d
   140011997:	mov    DWORD PTR [rdi+0x8],0x3d
   14001199e:	jmp    0x1400117e5
   1400119a3:	xor    edx,edx
   1400119a5:	mov    rcx,rbx
   1400119a8:	call   0x1400188c0
   1400119ad:	test   al,al
   1400119af:	je     0x14001603d
   1400119b5:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400119b9:	mov    rcx,QWORD PTR [rbp+0x28]
   1400119bd:	mov    eax,DWORD PTR [rbx+0x84]
   1400119c3:	add    rdx,rdx
   1400119c6:	mov    DWORD PTR [rcx+rdx*8+0x4],eax
   1400119ca:	mov    rcx,QWORD PTR [rbp+0x28]
   1400119ce:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400119d2:	add    rdx,rdx
   1400119d5:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400119d8:	mov    DWORD PTR [rbp+0x58],eax
   1400119db:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400119df:	mov    DWORD PTR [rbp+0x5c],eax
   1400119e2:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400119e6:	mov    DWORD PTR [rbp+0x60],eax
   1400119e9:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400119ed:	mov    ecx,0x38
   1400119f2:	mov    DWORD PTR [rbp+0x64],eax
   1400119f5:	mov    rdx,QWORD PTR [rbp+0x8]
   1400119f9:	call   0x14000e810
   1400119fe:	mov    rbx,rax
   140011a01:	test   rax,rax
   140011a04:	je     0x140011a53
   140011a06:	mov    rdx,QWORD PTR [rsp+0x38]
   140011a0b:	lea    rcx,[rsp+0xd0]
   140011a13:	or     esi,0xc
   140011a16:	mov    edi,DWORD PTR [rdx+0x7c]
   140011a19:	add    rdx,0x10
   140011a1d:	mov    DWORD PTR [rsp+0x30],esi
   140011a21:	call   QWORD PTR [rip+0xed71]        # 0x140020798
   140011a27:	mov    rcx,QWORD PTR [rbp+0x0]
   140011a2b:	lea    r8,[rsp+0xd0]
   140011a33:	lea    rdx,[rsp+0x320]
   140011a3b:	call   0x140016b40
   140011a40:	mov    r8d,edi
   140011a43:	mov    rcx,rbx
   140011a46:	mov    rdx,rax
   140011a49:	call   0x14000cdf0
   140011a4e:	mov    rdi,rax
   140011a51:	jmp    0x140011a56
   140011a53:	mov    rdi,r12
   140011a56:	test   sil,0x8
   140011a5a:	je     0x140011a71
   140011a5c:	and    esi,0xfffffff7
   140011a5f:	lea    rcx,[rsp+0x320]
   140011a67:	mov    DWORD PTR [rsp+0x30],esi
   140011a6b:	call   QWORD PTR [rip+0xe9e7]        # 0x140020458
   140011a71:	test   sil,0x4
   140011a75:	je     0x140011a8c
   140011a77:	and    esi,0xfffffffb
   140011a7a:	lea    rcx,[rsp+0xd0]
   140011a82:	mov    DWORD PTR [rsp+0x30],esi
   140011a86:	call   QWORD PTR [rip+0xecf4]        # 0x140020780
   140011a8c:	mov    rcx,QWORD PTR [rbp+0x28]
   140011a90:	movsxd rdx,DWORD PTR [rbp+0x10]
   140011a94:	add    rdx,rdx
   140011a97:	mov    eax,DWORD PTR [rcx+rdx*8]
   140011a9a:	mov    DWORD PTR [rdi+0x24],eax
   140011a9d:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140011aa1:	mov    DWORD PTR [rdi+0x28],eax
   140011aa4:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140011aa8:	mov    DWORD PTR [rdi+0x2c],eax
   140011aab:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140011aaf:	mov    DWORD PTR [rdi+0x30],eax
   140011ab2:	jmp    0x14000f9a9
   140011ab7:	mov    edx,0x1
   140011abc:	mov    rcx,rbx
   140011abf:	call   0x1400188c0
   140011ac4:	test   al,al
   140011ac6:	je     0x1400160c9
   140011acc:	movsxd rdx,DWORD PTR [rbp+0x10]
   140011ad0:	mov    rcx,QWORD PTR [rbp+0x28]
   140011ad4:	mov    eax,DWORD PTR [rbx+0x84]
   140011ada:	add    rdx,rdx
   140011add:	mov    DWORD PTR [rcx+rdx*8+0x4],eax
   140011ae1:	mov    rcx,QWORD PTR [rbp+0x28]
   140011ae5:	movsxd rdx,DWORD PTR [rbp+0x10]
   140011ae9:	add    rdx,rdx
   140011aec:	mov    eax,DWORD PTR [rcx+rdx*8]
   140011aef:	mov    DWORD PTR [rbp+0x58],eax
   140011af2:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140011af6:	mov    DWORD PTR [rbp+0x5c],eax
   140011af9:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140011afd:	mov    DWORD PTR [rbp+0x60],eax
   140011b00:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140011b04:	mov    ecx,0x38
   140011b09:	mov    DWORD PTR [rbp+0x64],eax
   140011b0c:	mov    rdx,QWORD PTR [rbp+0x8]
   140011b10:	call   0x14000e810
   140011b15:	mov    rbx,rax
   140011b18:	test   rax,rax
   140011b1b:	je     0x140011b6a
   140011b1d:	mov    rdx,QWORD PTR [rsp+0x38]
   140011b22:	lea    rcx,[rsp+0xe0]
   140011b2a:	or     esi,0x30
   140011b2d:	mov    edi,DWORD PTR [rdx+0x7c]
   140011b30:	add    rdx,0x10
   140011b34:	mov    DWORD PTR [rsp+0x30],esi
   140011b38:	call   QWORD PTR [rip+0xec5a]        # 0x140020798
   140011b3e:	mov    rcx,QWORD PTR [rbp+0x0]
   140011b42:	lea    r8,[rsp+0xe0]
   140011b4a:	lea    rdx,[rsp+0x380]
   140011b52:	call   0x140016b40
   140011b57:	mov    r8d,edi
   140011b5a:	mov    rcx,rbx
   140011b5d:	mov    rdx,rax
   140011b60:	call   0x14000cdf0
   140011b65:	mov    rdi,rax
   140011b68:	jmp    0x140011b6d
   140011b6a:	mov    rdi,r12
   140011b6d:	test   sil,0x20
   140011b71:	je     0x140011b88
   140011b73:	and    esi,0xffffffdf
   140011b76:	lea    rcx,[rsp+0x380]
   140011b7e:	mov    DWORD PTR [rsp+0x30],esi
   140011b82:	call   QWORD PTR [rip+0xe8d0]        # 0x140020458
   140011b88:	test   sil,0x10
   140011b8c:	je     0x140011ba3
   140011b8e:	and    esi,0xffffffef
   140011b91:	lea    rcx,[rsp+0xe0]
   140011b99:	mov    DWORD PTR [rsp+0x30],esi
   140011b9d:	call   QWORD PTR [rip+0xebdd]        # 0x140020780
   140011ba3:	mov    rcx,QWORD PTR [rbp+0x28]
   140011ba7:	movsxd rdx,DWORD PTR [rbp+0x10]
   140011bab:	add    rdx,rdx
   140011bae:	mov    eax,DWORD PTR [rcx+rdx*8]
   140011bb1:	mov    DWORD PTR [rdi+0x24],eax
   140011bb4:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140011bb8:	mov    DWORD PTR [rdi+0x28],eax
   140011bbb:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140011bbf:	mov    DWORD PTR [rdi+0x2c],eax
   140011bc2:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140011bc6:	mov    DWORD PTR [rdi+0x30],eax
   140011bc9:	jmp    0x14000f9a9
   140011bce:	mov    rdx,QWORD PTR [rbp+0x8]
   140011bd2:	mov    ecx,0x50
   140011bd7:	call   0x14000e810
   140011bdc:	mov    rdi,rax
   140011bdf:	test   rax,rax
   140011be2:	je     0x140011c2f
   140011be4:	lea    rax,[rip+0xf3cd]        # 0x140020fb8
   140011beb:	mov    QWORD PTR [rdi],rax
   140011bee:	mov    QWORD PTR [rdi+0x10],r12
   140011bf2:	mov    QWORD PTR [rdi+0x18],r12
   140011bf6:	mov    DWORD PTR [rdi+0x20],r12d
   140011bfa:	mov    DWORD PTR [rdi+0x24],r12d
   140011bfe:	mov    DWORD PTR [rdi+0x28],r12d
   140011c02:	mov    DWORD PTR [rdi+0x2c],r12d
   140011c06:	mov    DWORD PTR [rdi+0x30],r12d
   140011c0a:	mov    DWORD PTR [rdi+0x34],r12d
   140011c0e:	mov    DWORD PTR [rdi+0x38],r12d
   140011c12:	mov    DWORD PTR [rdi+0x3c],r12d
   140011c16:	mov    DWORD PTR [rdi+0x40],r12d
   140011c1a:	mov    DWORD PTR [rdi+0x44],r12d
   140011c1e:	mov    DWORD PTR [rdi+0x48],r12d
   140011c22:	mov    DWORD PTR [rdi+0x4c],r12d
   140011c26:	mov    DWORD PTR [rdi+0x8],0x2
   140011c2d:	jmp    0x140011c32
   140011c2f:	mov    rdi,r12
   140011c32:	mov    rcx,QWORD PTR [rbp+0x28]
   140011c36:	movsxd rdx,DWORD PTR [rbp+0x10]
   140011c3a:	add    rdx,rdx
   140011c3d:	mov    eax,DWORD PTR [rcx+rdx*8]
   140011c40:	mov    DWORD PTR [rdi+0x20],eax
   140011c43:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140011c47:	mov    DWORD PTR [rdi+0x24],eax
   140011c4a:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140011c4e:	mov    DWORD PTR [rdi+0x28],eax
   140011c51:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140011c55:	mov    DWORD PTR [rdi+0x2c],eax
   140011c58:	movsxd rdx,DWORD PTR [rbp+0x10]
   140011c5c:	inc    rdx
   140011c5f:	mov    rcx,QWORD PTR [rbp+0x28]
   140011c63:	add    rdx,rdx
   140011c66:	mov    eax,DWORD PTR [rcx+rdx*8]
   140011c69:	mov    DWORD PTR [rdi+0x40],eax
   140011c6c:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140011c70:	mov    DWORD PTR [rdi+0x44],eax
   140011c73:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140011c77:	mov    DWORD PTR [rdi+0x48],eax
   140011c7a:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140011c7e:	mov    DWORD PTR [rdi+0x4c],eax
   140011c81:	jmp    0x14000f9a9
   140011c86:	mov    rdx,QWORD PTR [rbp+0x8]
   140011c8a:	mov    ecx,0x50
   140011c8f:	call   0x14000e810
   140011c94:	mov    rdi,rax
   140011c97:	test   rax,rax
   140011c9a:	je     0x140011cbe
   140011c9c:	movsxd rcx,DWORD PTR [rbp+0x10]
   140011ca0:	mov    rax,QWORD PTR [rbp+0x18]
   140011ca4:	mov    rcx,QWORD PTR [rax+rcx*8+0x8]
   140011ca9:	mov    rdx,QWORD PTR [rcx+0x10]
   140011cad:	mov    QWORD PTR [rcx+0x10],r12
   140011cb1:	mov    rcx,rdi
   140011cb4:	call   0x14000ce60
   140011cb9:	mov    rdi,rax
   140011cbc:	jmp    0x140011cc1
   140011cbe:	mov    rdi,r12
   140011cc1:	mov    rcx,QWORD PTR [rbp+0x28]
   140011cc5:	movsxd rdx,DWORD PTR [rbp+0x10]
   140011cc9:	add    rdx,rdx
   140011ccc:	mov    eax,DWORD PTR [rcx+rdx*8]
   140011ccf:	mov    DWORD PTR [rdi+0x20],eax
   140011cd2:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140011cd6:	mov    DWORD PTR [rdi+0x24],eax
   140011cd9:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140011cdd:	mov    DWORD PTR [rdi+0x28],eax
   140011ce0:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140011ce4:	mov    DWORD PTR [rdi+0x2c],eax
   140011ce7:	mov    rcx,QWORD PTR [rbp+0x28]
   140011ceb:	movsxd rdx,DWORD PTR [rbp+0x10]
   140011cef:	add    rdx,0x2
   140011cf3:	add    rdx,rdx
   140011cf6:	mov    eax,DWORD PTR [rcx+rdx*8]
   140011cf9:	mov    DWORD PTR [rdi+0x40],eax
   140011cfc:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140011d00:	mov    DWORD PTR [rdi+0x44],eax
   140011d03:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140011d07:	mov    DWORD PTR [rdi+0x48],eax
   140011d0a:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140011d0e:	mov    DWORD PTR [rdi+0x4c],eax
   140011d11:	jmp    0x14000f9a9
   140011d16:	mov    rdx,QWORD PTR [rbp+0x8]
   140011d1a:	mov    ecx,0x50
   140011d1f:	call   0x14000e810
   140011d24:	mov    rdi,rax
   140011d27:	test   rax,rax
   140011d2a:	je     0x140011cbe
   140011d2c:	movsxd rcx,DWORD PTR [rbp+0x10]
   140011d30:	mov    rax,QWORD PTR [rbp+0x18]
   140011d34:	mov    rcx,QWORD PTR [rax+rcx*8+0x8]
   140011d39:	mov    rdx,QWORD PTR [rcx+0x20]
   140011d3d:	mov    QWORD PTR [rcx+0x20],r12
   140011d41:	mov    rcx,rdi
   140011d44:	call   0x14000ceb0
   140011d49:	mov    rdi,rax
   140011d4c:	jmp    0x140011cc1
   140011d51:	mov    rdx,QWORD PTR [rbp+0x8]
   140011d55:	mov    ecx,0x50
   140011d5a:	call   0x14000e810
   140011d5f:	mov    rdi,rax
   140011d62:	test   rax,rax
   140011d65:	je     0x140011dc7
   140011d67:	movsxd rcx,DWORD PTR [rbp+0x10]
   140011d6b:	mov    rax,QWORD PTR [rbp+0x18]
   140011d6f:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140011d74:	lea    rcx,[rip+0xf23d]        # 0x140020fb8
   140011d7b:	mov    rax,QWORD PTR [rdx+0x20]
   140011d7f:	mov    QWORD PTR [rdx+0x20],r12
   140011d83:	mov    QWORD PTR [rdi],rcx
   140011d86:	mov    QWORD PTR [rdi+0x10],rax
   140011d8a:	mov    QWORD PTR [rdi+0x18],r12
   140011d8e:	mov    DWORD PTR [rdi+0x20],r12d
   140011d92:	mov    DWORD PTR [rdi+0x24],r12d
   140011d96:	mov    DWORD PTR [rdi+0x28],r12d
   140011d9a:	mov    DWORD PTR [rdi+0x2c],r12d
   140011d9e:	mov    DWORD PTR [rdi+0x30],r12d
   140011da2:	mov    DWORD PTR [rdi+0x34],r12d
   140011da6:	mov    DWORD PTR [rdi+0x38],r12d
   140011daa:	mov    DWORD PTR [rdi+0x3c],r12d
   140011dae:	mov    DWORD PTR [rdi+0x40],r12d
   140011db2:	mov    DWORD PTR [rdi+0x44],r12d
   140011db6:	mov    DWORD PTR [rdi+0x48],r12d
   140011dba:	mov    DWORD PTR [rdi+0x4c],r12d
   140011dbe:	mov    DWORD PTR [rdi+0x8],0x2
   140011dc5:	jmp    0x140011dca
   140011dc7:	mov    rdi,r12
   140011dca:	mov    rcx,QWORD PTR [rbp+0x28]
   140011dce:	movsxd rdx,DWORD PTR [rbp+0x10]
   140011dd2:	add    rdx,rdx
   140011dd5:	mov    eax,DWORD PTR [rcx+rdx*8]
   140011dd8:	mov    DWORD PTR [rdi+0x20],eax
   140011ddb:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140011ddf:	mov    DWORD PTR [rdi+0x24],eax
   140011de2:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140011de6:	mov    DWORD PTR [rdi+0x28],eax
   140011de9:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140011ded:	mov    DWORD PTR [rdi+0x2c],eax
   140011df0:	mov    rcx,QWORD PTR [rbp+0x28]
   140011df4:	movsxd rdx,DWORD PTR [rbp+0x10]
   140011df8:	add    rdx,0x2
   140011dfc:	add    rdx,rdx
   140011dff:	mov    eax,DWORD PTR [rcx+rdx*8]
   140011e02:	mov    DWORD PTR [rdi+0x30],eax
   140011e05:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140011e09:	mov    DWORD PTR [rdi+0x34],eax
   140011e0c:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140011e10:	mov    DWORD PTR [rdi+0x38],eax
   140011e13:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140011e17:	mov    DWORD PTR [rdi+0x3c],eax
   140011e1a:	mov    rcx,QWORD PTR [rbp+0x28]
   140011e1e:	movsxd rdx,DWORD PTR [rbp+0x10]
   140011e22:	add    rdx,0x3
   140011e26:	add    rdx,rdx
   140011e29:	mov    eax,DWORD PTR [rcx+rdx*8]
   140011e2c:	mov    DWORD PTR [rdi+0x40],eax
   140011e2f:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140011e33:	mov    DWORD PTR [rdi+0x44],eax
   140011e36:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140011e3a:	mov    DWORD PTR [rdi+0x48],eax
   140011e3d:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140011e41:	mov    DWORD PTR [rdi+0x4c],eax
   140011e44:	jmp    0x14000f9a9
   140011e49:	mov    rdx,QWORD PTR [rbp+0x8]
   140011e4d:	mov    ecx,0x50
   140011e52:	call   0x14000e810
   140011e57:	mov    rdi,rax
   140011e5a:	test   rax,rax
   140011e5d:	je     0x140011e96
   140011e5f:	movsxd rcx,DWORD PTR [rbp+0x10]
   140011e63:	mov    rax,QWORD PTR [rbp+0x18]
   140011e67:	mov    rdx,QWORD PTR [rax+rcx*8+0x18]
   140011e6c:	mov    r8,QWORD PTR [rdx+0x10]
   140011e70:	mov    QWORD PTR [rdx+0x10],r12
   140011e74:	movsxd rcx,DWORD PTR [rbp+0x10]
   140011e78:	mov    rax,QWORD PTR [rbp+0x18]
   140011e7c:	mov    rcx,QWORD PTR [rax+rcx*8+0x8]
   140011e81:	mov    rdx,QWORD PTR [rcx+0x20]
   140011e85:	mov    QWORD PTR [rcx+0x20],r12
   140011e89:	mov    rcx,rdi
   140011e8c:	call   0x14000cf00
   140011e91:	mov    rdi,rax
   140011e94:	jmp    0x140011e99
   140011e96:	mov    rdi,r12
   140011e99:	mov    rcx,QWORD PTR [rbp+0x28]
   140011e9d:	movsxd rdx,DWORD PTR [rbp+0x10]
   140011ea1:	add    rdx,rdx
   140011ea4:	mov    eax,DWORD PTR [rcx+rdx*8]
   140011ea7:	mov    DWORD PTR [rdi+0x20],eax
   140011eaa:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140011eae:	mov    DWORD PTR [rdi+0x24],eax
   140011eb1:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140011eb5:	mov    DWORD PTR [rdi+0x28],eax
   140011eb8:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140011ebc:	mov    DWORD PTR [rdi+0x2c],eax
   140011ebf:	mov    rcx,QWORD PTR [rbp+0x28]
   140011ec3:	movsxd rdx,DWORD PTR [rbp+0x10]
   140011ec7:	add    rdx,0x2
   140011ecb:	add    rdx,rdx
   140011ece:	mov    eax,DWORD PTR [rcx+rdx*8]
   140011ed1:	mov    DWORD PTR [rdi+0x30],eax
   140011ed4:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140011ed8:	mov    DWORD PTR [rdi+0x34],eax
   140011edb:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140011edf:	mov    DWORD PTR [rdi+0x38],eax
   140011ee2:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140011ee6:	mov    DWORD PTR [rdi+0x3c],eax
   140011ee9:	mov    rcx,QWORD PTR [rbp+0x28]
   140011eed:	movsxd rdx,DWORD PTR [rbp+0x10]
   140011ef1:	add    rdx,0x4
   140011ef5:	add    rdx,rdx
   140011ef8:	mov    eax,DWORD PTR [rcx+rdx*8]
   140011efb:	mov    DWORD PTR [rdi+0x40],eax
   140011efe:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140011f02:	mov    DWORD PTR [rdi+0x44],eax
   140011f05:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140011f09:	mov    DWORD PTR [rdi+0x48],eax
   140011f0c:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140011f10:	mov    DWORD PTR [rdi+0x4c],eax
   140011f13:	jmp    0x14000f9a9
   140011f18:	mov    rax,QWORD PTR [rbp+0x18]
   140011f1c:	mov    ecx,0x38
   140011f21:	cmp    QWORD PTR [rax+rdx*8+0x8],r12
   140011f26:	mov    rdx,QWORD PTR [rbp+0x8]
   140011f2a:	je     0x140011f5e
   140011f2c:	call   0x14000e810
   140011f31:	mov    rdi,rax
   140011f34:	test   rax,rax
   140011f37:	je     0x140011fa2
   140011f39:	movsxd rcx,DWORD PTR [rbp+0x10]
   140011f3d:	mov    rax,QWORD PTR [rbp+0x18]
   140011f41:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140011f46:	lea    rcx,[rip+0xf0bb]        # 0x140021008
   140011f4d:	mov    rax,QWORD PTR [rdx+0x18]
   140011f51:	mov    QWORD PTR [rdx+0x18],r12
   140011f55:	mov    QWORD PTR [rdi],rcx
   140011f58:	mov    QWORD PTR [rdi+0x10],rax
   140011f5c:	jmp    0x140011f79
   140011f5e:	call   0x14000e810
   140011f63:	mov    rdi,rax
   140011f66:	test   rax,rax
   140011f69:	je     0x140011fa2
   140011f6b:	lea    rax,[rip+0xf096]        # 0x140021008
   140011f72:	mov    QWORD PTR [rdi],rax
   140011f75:	mov    QWORD PTR [rdi+0x10],r12
   140011f79:	mov    DWORD PTR [rdi+0x18],r12d
   140011f7d:	mov    DWORD PTR [rdi+0x1c],r12d
   140011f81:	mov    DWORD PTR [rdi+0x20],r12d
   140011f85:	mov    DWORD PTR [rdi+0x24],r12d
   140011f89:	mov    DWORD PTR [rdi+0x28],r12d
   140011f8d:	mov    DWORD PTR [rdi+0x2c],r12d
   140011f91:	mov    DWORD PTR [rdi+0x30],r12d
   140011f95:	mov    DWORD PTR [rdi+0x34],r12d
   140011f99:	mov    DWORD PTR [rdi+0x8],0x2d
   140011fa0:	jmp    0x140011fa5
   140011fa2:	mov    rdi,r12
   140011fa5:	mov    rcx,QWORD PTR [rbp+0x28]
   140011fa9:	movsxd rdx,DWORD PTR [rbp+0x10]
   140011fad:	add    rdx,rdx
   140011fb0:	mov    eax,DWORD PTR [rcx+rdx*8]
   140011fb3:	mov    DWORD PTR [rdi+0x18],eax
   140011fb6:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140011fba:	mov    DWORD PTR [rdi+0x1c],eax
   140011fbd:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140011fc1:	mov    DWORD PTR [rdi+0x20],eax
   140011fc4:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140011fc8:	mov    DWORD PTR [rdi+0x24],eax
   140011fcb:	jmp    0x14001009d
   140011fd0:	mov    rdx,QWORD PTR [rbp+0x8]
   140011fd4:	mov    ecx,0x38
   140011fd9:	call   0x14000e810
   140011fde:	mov    rdi,rax
   140011fe1:	test   rax,rax
   140011fe4:	je     0x140012032
   140011fe6:	movsxd rcx,DWORD PTR [rbp+0x10]
   140011fea:	mov    rax,QWORD PTR [rbp+0x18]
   140011fee:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140011ff3:	lea    rcx,[rip+0xf00e]        # 0x140021008
   140011ffa:	mov    rax,QWORD PTR [rdx+0x18]
   140011ffe:	mov    QWORD PTR [rdx+0x18],r12
   140012002:	mov    QWORD PTR [rdi],rcx
   140012005:	mov    QWORD PTR [rdi+0x10],rax
   140012009:	mov    DWORD PTR [rdi+0x18],r12d
   14001200d:	mov    DWORD PTR [rdi+0x1c],r12d
   140012011:	mov    DWORD PTR [rdi+0x20],r12d
   140012015:	mov    DWORD PTR [rdi+0x24],r12d
   140012019:	mov    DWORD PTR [rdi+0x28],r12d
   14001201d:	mov    DWORD PTR [rdi+0x2c],r12d
   140012021:	mov    DWORD PTR [rdi+0x30],r12d
   140012025:	mov    DWORD PTR [rdi+0x34],r12d
   140012029:	mov    DWORD PTR [rdi+0x8],0x2d
   140012030:	jmp    0x140012035
   140012032:	mov    rdi,r12
   140012035:	mov    rcx,QWORD PTR [rbp+0x28]
   140012039:	movsxd rdx,DWORD PTR [rbp+0x10]
   14001203d:	add    rdx,rdx
   140012040:	mov    eax,DWORD PTR [rcx+rdx*8]
   140012043:	mov    DWORD PTR [rdi+0x18],eax
   140012046:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14001204a:	mov    DWORD PTR [rdi+0x1c],eax
   14001204d:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140012051:	mov    DWORD PTR [rdi+0x20],eax
   140012054:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140012058:	mov    DWORD PTR [rdi+0x24],eax
   14001205b:	movsxd rdx,DWORD PTR [rbp+0x10]
   14001205f:	add    rdx,0x3
   140012063:	jmp    0x1400100a5
   140012068:	mov    rdx,QWORD PTR [rbp+0x8]
   14001206c:	mov    ecx,0x38
   140012071:	call   0x14000e810
   140012076:	mov    rdi,rax
   140012079:	test   rax,rax
   14001207c:	je     0x140011fa2
   140012082:	mov    rax,QWORD PTR [rbp+0x18]
   140012086:	movsxd rcx,DWORD PTR [rbp+0x10]
   14001208a:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   14001208f:	lea    rax,[rip+0xec52]        # 0x140020ce8
   140012096:	mov    QWORD PTR [rdi],rax
   140012099:	mov    QWORD PTR [rdi+0x10],rdx
   14001209d:	mov    DWORD PTR [rdi+0x18],r12d
   1400120a1:	mov    DWORD PTR [rdi+0x1c],r12d
   1400120a5:	mov    DWORD PTR [rdi+0x20],r12d
   1400120a9:	mov    DWORD PTR [rdi+0x24],r12d
   1400120ad:	mov    DWORD PTR [rdi+0x28],r12d
   1400120b1:	mov    DWORD PTR [rdi+0x2c],r12d
   1400120b5:	mov    DWORD PTR [rdi+0x30],r12d
   1400120b9:	mov    DWORD PTR [rdi+0x34],r12d
   1400120bd:	mov    DWORD PTR [rdi+0x8],0x4e
   1400120c4:	jmp    0x140011fa5
   1400120c9:	mov    rax,QWORD PTR [rbp+0x18]
   1400120cd:	mov    rbx,QWORD PTR [rax+rdx*8]
   1400120d1:	test   rbx,rbx
   1400120d4:	je     0x1400121a3
   1400120da:	cmp    DWORD PTR [rbx+0x8],0x3
   1400120de:	jne    0x1400121a3
   1400120e4:	or     rcx,0xffffffffffffffff
   1400120e8:	xor    eax,eax
   1400120ea:	lea    rdx,[rsp+0x340]
   1400120f2:	repnz scas al,BYTE PTR es:[rdi]
   1400120f4:	lea    rax,[rip+0x10945]        # 0x140022a40
   1400120fb:	not    rcx
   1400120fe:	mov    QWORD PTR [rsp+0x48],rax
   140012103:	dec    rcx
   140012106:	mov    DWORD PTR [rsp+0x40],ecx
   14001210a:	lea    rcx,[rsp+0xf0]
   140012112:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140012117:	movdqa XMMWORD PTR [rsp+0x340],xmm0
   140012120:	call   QWORD PTR [rip+0xe412]        # 0x140020538
   140012126:	mov    DWORD PTR [rsp+0x210],r12d
   14001212e:	mov    eax,DWORD PTR [rbx+0x20]
   140012131:	lea    rcx,[rsp+0x214]
   140012139:	lea    rdx,[rsp+0xf0]
   140012141:	mov    DWORD PTR [rcx],eax
   140012143:	mov    eax,DWORD PTR [rbx+0x24]
   140012146:	mov    DWORD PTR [rcx+0x4],eax
   140012149:	mov    eax,DWORD PTR [rbx+0x28]
   14001214c:	mov    DWORD PTR [rcx+0x8],eax
   14001214f:	mov    eax,DWORD PTR [rbx+0x2c]
   140012152:	mov    DWORD PTR [rcx+0xc],eax
   140012155:	lea    rcx,[rsp+0x228]
   14001215d:	call   QWORD PTR [rip+0xe635]        # 0x140020798
   140012163:	lea    rcx,[rbp+0x118]
   14001216a:	lea    rdx,[rsp+0x210]
   140012172:	call   0x14000f2e0
   140012177:	lea    rcx,[rsp+0x228]
   14001217f:	call   QWORD PTR [rip+0xe5fb]        # 0x140020780
   140012185:	lea    rcx,[rsp+0xf0]
   14001218d:	call   QWORD PTR [rip+0xe5ed]        # 0x140020780
   140012193:	movsxd rdx,DWORD PTR [rbp+0x10]
   140012197:	mov    rcx,QWORD PTR [rbp+0x18]
   14001219b:	mov    rax,QWORD PTR [rbx+0x10]
   14001219f:	mov    QWORD PTR [rcx+rdx*8],rax
   1400121a3:	movsxd rax,DWORD PTR [rbp+0x10]
   1400121a7:	mov    rdx,QWORD PTR [rbp+0x18]
   1400121ab:	mov    rcx,rbp
   1400121ae:	mov    rdx,QWORD PTR [rdx+rax*8]
   1400121b2:	call   0x14000ed20
   1400121b7:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400121bb:	mov    rdx,rax
   1400121be:	test   rax,rax
   1400121c1:	mov    rax,QWORD PTR [rbp+0x18]
   1400121c5:	je     0x140016155
   1400121cb:	mov    QWORD PTR [rax+rcx*8],rdx
   1400121cf:	lea    r9,[rip+0xfffffffffffede2a]        # 0x140000000
   1400121d6:	jmp    0x140015510
   1400121db:	mov    rdx,QWORD PTR [rbp+0x8]
   1400121df:	mov    ecx,0x38
   1400121e4:	call   0x14000e810
   1400121e9:	mov    rdi,rax
   1400121ec:	test   rax,rax
   1400121ef:	je     0x14000f9a6
   1400121f5:	mov    rax,QWORD PTR [rbp+0x18]
   1400121f9:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400121fd:	mov    rdx,QWORD PTR [rax+rcx*8]
   140012201:	lea    rax,[rip+0xeea0]        # 0x1400210a8
   140012208:	mov    QWORD PTR [rdi],rax
   14001220b:	mov    QWORD PTR [rdi+0x10],r12
   14001220f:	mov    QWORD PTR [rdi+0x18],rdx
   140012213:	mov    QWORD PTR [rdi+0x20],rdi
   140012217:	mov    DWORD PTR [rdi+0x28],r12d
   14001221b:	mov    DWORD PTR [rdi+0x2c],r12d
   14001221f:	mov    DWORD PTR [rdi+0x30],r12d
   140012223:	mov    DWORD PTR [rdi+0x34],r12d
   140012227:	mov    DWORD PTR [rdi+0x8],0x12
   14001222e:	jmp    0x14000f9a9
   140012233:	mov    rdx,QWORD PTR [rbp+0x8]
   140012237:	mov    ecx,0x38
   14001223c:	call   0x14000e810
   140012241:	mov    r11,rax
   140012244:	test   rax,rax
   140012247:	je     0x140010125
   14001224d:	movsxd rcx,DWORD PTR [rbp+0x10]
   140012251:	mov    r8,QWORD PTR [rbp+0x18]
   140012255:	lea    eax,[rcx+0x1]
   140012258:	mov    rcx,QWORD PTR [r8+rcx*8]
   14001225c:	mov    rdx,QWORD PTR [rcx+0x10]
   140012260:	mov    QWORD PTR [rcx+0x10],r12
   140012264:	movsxd rdi,eax
   140012267:	mov    rax,QWORD PTR [r8+rdi*8]
   14001226b:	lea    rcx,[rip+0xee36]        # 0x1400210a8
   140012272:	mov    QWORD PTR [r11],rcx
   140012275:	mov    QWORD PTR [r11+0x10],rdx
   140012279:	mov    QWORD PTR [r11+0x18],rax
   14001227d:	mov    QWORD PTR [r11+0x20],r11
   140012281:	mov    DWORD PTR [r11+0x28],r12d
   140012285:	mov    DWORD PTR [r11+0x2c],r12d
   140012289:	mov    DWORD PTR [r11+0x30],r12d
   14001228d:	mov    DWORD PTR [r11+0x34],r12d
   140012291:	mov    DWORD PTR [r11+0x8],0x12
   140012299:	jmp    0x140010128
   14001229e:	mov    rdx,QWORD PTR [rbp+0x8]
   1400122a2:	mov    ecx,0x38
   1400122a7:	call   0x14000e810
   1400122ac:	mov    rdi,rax
   1400122af:	test   rax,rax
   1400122b2:	je     0x140012306
   1400122b4:	mov    rax,QWORD PTR [rbp+0x18]
   1400122b8:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400122bc:	mov    rdx,QWORD PTR [rax+rcx*8+0x10]
   1400122c1:	mov    rcx,QWORD PTR [rax+rcx*8]
   1400122c5:	lea    rax,[rip+0xeddc]        # 0x1400210a8
   1400122cc:	mov    QWORD PTR [rdi],rax
   1400122cf:	mov    QWORD PTR [rdi+0x10],r12
   1400122d3:	mov    QWORD PTR [rdi+0x18],rdx
   1400122d7:	mov    DWORD PTR [rdi+0x28],r12d
   1400122db:	mov    DWORD PTR [rdi+0x2c],r12d
   1400122df:	mov    DWORD PTR [rdi+0x30],r12d
   1400122e3:	mov    DWORD PTR [rdi+0x34],r12d
   1400122e7:	mov    DWORD PTR [rdi+0x8],0x12
   1400122ee:	mov    rax,QWORD PTR [rcx+0x20]
   1400122f2:	mov    QWORD PTR [rdi+0x20],rax
   1400122f6:	mov    QWORD PTR [rcx+0x20],rdi
   1400122fa:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400122fe:	inc    rdx
   140012301:	jmp    0x1400100a5
   140012306:	movsxd rdx,DWORD PTR [rbp+0x10]
   14001230a:	mov    rdi,r12
   14001230d:	inc    rdx
   140012310:	jmp    0x1400100a5
   140012315:	mov    rdx,QWORD PTR [rbp+0x8]
   140012319:	mov    ecx,0x38
   14001231e:	call   0x14000e810
   140012323:	mov    r11,rax
   140012326:	test   rax,rax
   140012329:	je     0x1400102c7
   14001232f:	mov    r8,QWORD PTR [rbp+0x18]
   140012333:	movsxd rcx,DWORD PTR [rbp+0x10]
   140012337:	lea    eax,[rcx+0x3]
   14001233a:	mov    rcx,QWORD PTR [r8+rcx*8+0x10]
   14001233f:	mov    rdi,QWORD PTR [rcx+0x10]
   140012343:	mov    QWORD PTR [rcx+0x10],r12
   140012347:	movsxd rcx,DWORD PTR [rbp+0x10]
   14001234b:	movsxd rdx,eax
   14001234e:	mov    rax,QWORD PTR [rbp+0x18]
   140012352:	mov    rdx,QWORD PTR [r8+rdx*8]
   140012356:	mov    r8,QWORD PTR [rax+rcx*8]
   14001235a:	lea    rax,[rip+0xed47]        # 0x1400210a8
   140012361:	mov    QWORD PTR [r11],rax
   140012364:	mov    QWORD PTR [r11+0x10],rdi
   140012368:	mov    QWORD PTR [r11+0x18],rdx
   14001236c:	mov    DWORD PTR [r11+0x28],r12d
   140012370:	mov    DWORD PTR [r11+0x2c],r12d
   140012374:	mov    DWORD PTR [r11+0x30],r12d
   140012378:	mov    DWORD PTR [r11+0x34],r12d
   14001237c:	mov    DWORD PTR [r11+0x8],0x12
   140012384:	mov    rax,QWORD PTR [r8+0x20]
   140012388:	mov    QWORD PTR [r11+0x20],rax
   14001238c:	mov    QWORD PTR [r8+0x20],r11
   140012390:	jmp    0x1400102ca
   140012395:	mov    rdx,QWORD PTR [rbp+0x8]
   140012399:	mov    ecx,0x28
   14001239e:	call   0x14000e810
   1400123a3:	mov    rdi,rax
   1400123a6:	test   rax,rax
   1400123a9:	je     0x14001191b
   1400123af:	lea    rax,[rip+0xeca2]        # 0x140021058
   1400123b6:	mov    QWORD PTR [rdi],rax
   1400123b9:	mov    QWORD PTR [rdi+0x10],rdi
   1400123bd:	mov    DWORD PTR [rdi+0x18],r12d
   1400123c1:	mov    DWORD PTR [rdi+0x1c],r12d
   1400123c5:	mov    DWORD PTR [rdi+0x20],r12d
   1400123c9:	mov    DWORD PTR [rdi+0x24],r12d
   1400123cd:	mov    DWORD PTR [rdi+0x8],0x13
   1400123d4:	jmp    0x14001191e
   1400123d9:	mov    rdx,QWORD PTR [rbp+0x8]
   1400123dd:	mov    ecx,0x28
   1400123e2:	call   0x14000e810
   1400123e7:	mov    rdi,rax
   1400123ea:	test   rax,rax
   1400123ed:	je     0x14001242a
   1400123ef:	mov    rax,QWORD PTR [rbp+0x18]
   1400123f3:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400123f7:	mov    rdx,QWORD PTR [rax+rcx*8]
   1400123fb:	lea    rax,[rip+0xec56]        # 0x140021058
   140012402:	mov    QWORD PTR [rdi],rax
   140012405:	mov    DWORD PTR [rdi+0x18],r12d
   140012409:	mov    DWORD PTR [rdi+0x1c],r12d
   14001240d:	mov    DWORD PTR [rdi+0x20],r12d
   140012411:	mov    DWORD PTR [rdi+0x24],r12d
   140012415:	mov    DWORD PTR [rdi+0x8],0x13
   14001241c:	mov    rax,QWORD PTR [rdx+0x10]
   140012420:	mov    QWORD PTR [rdi+0x10],rax
   140012424:	mov    QWORD PTR [rdx+0x10],rdi
   140012428:	jmp    0x14001242d
   14001242a:	mov    rdi,r12
   14001242d:	mov    rcx,QWORD PTR [rbp+0x28]
   140012431:	movsxd rdx,DWORD PTR [rbp+0x10]
   140012435:	inc    rdx
   140012438:	add    rdx,rdx
   14001243b:	mov    eax,DWORD PTR [rcx+rdx*8]
   14001243e:	mov    DWORD PTR [rdi+0x18],eax
   140012441:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140012445:	mov    DWORD PTR [rdi+0x1c],eax
   140012448:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14001244c:	mov    DWORD PTR [rdi+0x20],eax
   14001244f:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140012453:	mov    DWORD PTR [rdi+0x24],eax
   140012456:	jmp    0x14000f9a9
   14001245b:	mov    rdx,QWORD PTR [rbp+0x8]
   14001245f:	mov    ecx,0x40
   140012464:	call   0x14000e810
   140012469:	mov    rdi,rax
   14001246c:	test   rax,rax
   14001246f:	je     0x14001242a
   140012471:	movsxd rcx,DWORD PTR [rbp+0x10]
   140012475:	mov    rax,QWORD PTR [rbp+0x18]
   140012479:	mov    rdx,QWORD PTR [rax+rcx*8+0x10]
   14001247e:	mov    rax,QWORD PTR [rax+rcx*8]
   140012482:	mov    QWORD PTR [rdi+0x10],rax
   140012486:	lea    rax,[rip+0xecbb]        # 0x140021148
   14001248d:	mov    QWORD PTR [rdi],rax
   140012490:	mov    DWORD PTR [rdi+0x18],r12d
   140012494:	mov    DWORD PTR [rdi+0x1c],r12d
   140012498:	mov    DWORD PTR [rdi+0x20],r12d
   14001249c:	mov    DWORD PTR [rdi+0x24],r12d
   1400124a0:	mov    QWORD PTR [rdi+0x28],rdx
   1400124a4:	mov    DWORD PTR [rdi+0x30],r12d
   1400124a8:	mov    DWORD PTR [rdi+0x34],r12d
   1400124ac:	mov    DWORD PTR [rdi+0x38],r12d
   1400124b0:	mov    DWORD PTR [rdi+0x3c],r12d
   1400124b4:	mov    DWORD PTR [rdi+0x8],0x36
   1400124bb:	jmp    0x14001242d
   1400124c0:	mov    rdx,QWORD PTR [rbp+0x8]
   1400124c4:	mov    ecx,0x80
   1400124c9:	call   0x14000e810
   1400124ce:	mov    r11,rax
   1400124d1:	test   rax,rax
   1400124d4:	je     0x1400124fe
   1400124d6:	mov    ecx,DWORD PTR [rbp+0x10]
   1400124d9:	mov    rdi,QWORD PTR [rbp+0x18]
   1400124dd:	lea    eax,[rcx+0x5]
   1400124e0:	movsxd r8,eax
   1400124e3:	lea    eax,[rcx+0x1]
   1400124e6:	mov    rcx,r11
   1400124e9:	mov    r8,QWORD PTR [rdi+r8*8]
   1400124ed:	movsxd rdx,eax
   1400124f0:	mov    rdx,QWORD PTR [rdi+rdx*8]
   1400124f4:	call   0x14000d090
   1400124f9:	mov    rdi,rax
   1400124fc:	jmp    0x140012501
   1400124fe:	mov    rdi,r12
   140012501:	mov    rcx,QWORD PTR [rbp+0x28]
   140012505:	movsxd rdx,DWORD PTR [rbp+0x10]
   140012509:	add    rdx,rdx
   14001250c:	mov    eax,DWORD PTR [rcx+rdx*8]
   14001250f:	mov    DWORD PTR [rdi+0x1c],eax
   140012512:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140012516:	mov    DWORD PTR [rdi+0x20],eax
   140012519:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14001251d:	mov    DWORD PTR [rdi+0x24],eax
   140012520:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140012524:	mov    DWORD PTR [rdi+0x28],eax
   140012527:	mov    rcx,QWORD PTR [rbp+0x28]
   14001252b:	movsxd rdx,DWORD PTR [rbp+0x10]
   14001252f:	add    rdx,0x2
   140012533:	add    rdx,rdx
   140012536:	mov    eax,DWORD PTR [rcx+rdx*8]
   140012539:	mov    DWORD PTR [rdi+0x2c],eax
   14001253c:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140012540:	mov    DWORD PTR [rdi+0x30],eax
   140012543:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140012547:	mov    DWORD PTR [rdi+0x34],eax
   14001254a:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14001254e:	mov    DWORD PTR [rdi+0x38],eax
   140012551:	mov    rcx,QWORD PTR [rbp+0x28]
   140012555:	movsxd rdx,DWORD PTR [rbp+0x10]
   140012559:	add    rdx,0x3
   14001255d:	add    rdx,rdx
   140012560:	mov    eax,DWORD PTR [rcx+rdx*8]
   140012563:	mov    DWORD PTR [rdi+0x48],eax
   140012566:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14001256a:	mov    DWORD PTR [rdi+0x4c],eax
   14001256d:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140012571:	mov    DWORD PTR [rdi+0x50],eax
   140012574:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140012578:	mov    DWORD PTR [rdi+0x54],eax
   14001257b:	mov    rcx,QWORD PTR [rbp+0x28]
   14001257f:	movsxd rdx,DWORD PTR [rbp+0x10]
   140012583:	add    rdx,0x4
   140012587:	add    rdx,rdx
   14001258a:	mov    eax,DWORD PTR [rcx+rdx*8]
   14001258d:	mov    DWORD PTR [rdi+0x58],eax
   140012590:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140012594:	mov    DWORD PTR [rdi+0x5c],eax
   140012597:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14001259b:	mov    DWORD PTR [rdi+0x60],eax
   14001259e:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400125a2:	mov    DWORD PTR [rdi+0x64],eax
   1400125a5:	mov    rcx,QWORD PTR [rbp+0x28]
   1400125a9:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400125ad:	add    rdx,0x6
   1400125b1:	add    rdx,rdx
   1400125b4:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400125b7:	mov    DWORD PTR [rdi+0x70],eax
   1400125ba:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400125be:	mov    DWORD PTR [rdi+0x74],eax
   1400125c1:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400125c5:	mov    DWORD PTR [rdi+0x78],eax
   1400125c8:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400125cc:	mov    DWORD PTR [rdi+0x7c],eax
   1400125cf:	jmp    0x14000f9a9
   1400125d4:	mov    rdx,QWORD PTR [rbp+0x8]
   1400125d8:	mov    ecx,0x80
   1400125dd:	call   0x14000e810
   1400125e2:	mov    r11,rax
   1400125e5:	test   rax,rax
   1400125e8:	je     0x14001261c
   1400125ea:	mov    ecx,DWORD PTR [rbp+0x10]
   1400125ed:	mov    rdi,QWORD PTR [rbp+0x18]
   1400125f1:	lea    eax,[rcx+0x6]
   1400125f4:	movsxd r9,eax
   1400125f7:	lea    eax,[rcx+0x3]
   1400125fa:	mov    r9,QWORD PTR [rdi+r9*8]
   1400125fe:	movsxd r8,eax
   140012601:	lea    eax,[rcx+0x1]
   140012604:	mov    r8,QWORD PTR [rdi+r8*8]
   140012608:	movsxd rdx,eax
   14001260b:	mov    rcx,r11
   14001260e:	mov    rdx,QWORD PTR [rdi+rdx*8]
   140012612:	call   0x14000d100
   140012617:	mov    rdi,rax
   14001261a:	jmp    0x14001261f
   14001261c:	mov    rdi,r12
   14001261f:	mov    rcx,QWORD PTR [rbp+0x28]
   140012623:	movsxd rdx,DWORD PTR [rbp+0x10]
   140012627:	add    rdx,rdx
   14001262a:	mov    eax,DWORD PTR [rcx+rdx*8]
   14001262d:	mov    DWORD PTR [rdi+0x1c],eax
   140012630:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140012634:	mov    DWORD PTR [rdi+0x20],eax
   140012637:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14001263b:	mov    DWORD PTR [rdi+0x24],eax
   14001263e:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140012642:	mov    DWORD PTR [rdi+0x28],eax
   140012645:	mov    rcx,QWORD PTR [rbp+0x28]
   140012649:	movsxd rdx,DWORD PTR [rbp+0x10]
   14001264d:	add    rdx,0x2
   140012651:	add    rdx,rdx
   140012654:	mov    eax,DWORD PTR [rcx+rdx*8]
   140012657:	mov    DWORD PTR [rdi+0x2c],eax
   14001265a:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14001265e:	mov    DWORD PTR [rdi+0x30],eax
   140012661:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140012665:	mov    DWORD PTR [rdi+0x34],eax
   140012668:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14001266c:	mov    DWORD PTR [rdi+0x38],eax
   14001266f:	mov    rcx,QWORD PTR [rbp+0x28]
   140012673:	movsxd rdx,DWORD PTR [rbp+0x10]
   140012677:	add    rdx,0x4
   14001267b:	add    rdx,rdx
   14001267e:	mov    eax,DWORD PTR [rcx+rdx*8]
   140012681:	mov    DWORD PTR [rdi+0x48],eax
   140012684:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140012688:	mov    DWORD PTR [rdi+0x4c],eax
   14001268b:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14001268f:	mov    DWORD PTR [rdi+0x50],eax
   140012692:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140012696:	mov    DWORD PTR [rdi+0x54],eax
   140012699:	mov    rcx,QWORD PTR [rbp+0x28]
   14001269d:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400126a1:	add    rdx,0x5
   1400126a5:	add    rdx,rdx
   1400126a8:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400126ab:	mov    DWORD PTR [rdi+0x58],eax
   1400126ae:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400126b2:	mov    DWORD PTR [rdi+0x5c],eax
   1400126b5:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400126b9:	mov    DWORD PTR [rdi+0x60],eax
   1400126bc:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400126c0:	mov    DWORD PTR [rdi+0x64],eax
   1400126c3:	mov    rcx,QWORD PTR [rbp+0x28]
   1400126c7:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400126cb:	add    rdx,0x7
   1400126cf:	add    rdx,rdx
   1400126d2:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400126d5:	mov    DWORD PTR [rdi+0x70],eax
   1400126d8:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400126dc:	mov    DWORD PTR [rdi+0x74],eax
   1400126df:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400126e3:	mov    DWORD PTR [rdi+0x78],eax
   1400126e6:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400126ea:	mov    DWORD PTR [rdi+0x7c],eax
   1400126ed:	jmp    0x14000f9a9
   1400126f2:	mov    rdx,QWORD PTR [rbp+0x8]
   1400126f6:	mov    ecx,0x30
   1400126fb:	call   0x14000e810
   140012700:	mov    rdi,rax
   140012703:	test   rax,rax
   140012706:	je     0x14000f9a6
   14001270c:	mov    rax,QWORD PTR [rbp+0x18]
   140012710:	movsxd rcx,DWORD PTR [rbp+0x10]
   140012714:	mov    rdx,QWORD PTR [rax+rcx*8]
   140012718:	lea    rax,[rip+0xe9d9]        # 0x1400210f8
   14001271f:	mov    QWORD PTR [rdi],rax
   140012722:	mov    QWORD PTR [rdi+0x10],rdx
   140012726:	mov    QWORD PTR [rdi+0x18],rdi
   14001272a:	mov    DWORD PTR [rdi+0x20],r12d
   14001272e:	mov    DWORD PTR [rdi+0x24],r12d
   140012732:	mov    DWORD PTR [rdi+0x28],r12d
   140012736:	mov    DWORD PTR [rdi+0x2c],r12d
   14001273a:	mov    DWORD PTR [rdi+0x8],0x33
   140012741:	jmp    0x14000f9a9
   140012746:	mov    rdx,QWORD PTR [rbp+0x8]
   14001274a:	mov    ecx,0x30
   14001274f:	call   0x14000e810
   140012754:	mov    rdi,rax
   140012757:	test   rax,rax
   14001275a:	je     0x14000ff3d
   140012760:	mov    rax,QWORD PTR [rbp+0x18]
   140012764:	movsxd rcx,DWORD PTR [rbp+0x10]
   140012768:	mov    rdx,QWORD PTR [rax+rcx*8+0x10]
   14001276d:	mov    rcx,QWORD PTR [rax+rcx*8]
   140012771:	lea    rax,[rip+0xe980]        # 0x1400210f8
   140012778:	mov    QWORD PTR [rdi],rax
   14001277b:	mov    QWORD PTR [rdi+0x10],rdx
   14001277f:	mov    DWORD PTR [rdi+0x20],r12d
   140012783:	mov    DWORD PTR [rdi+0x24],r12d
   140012787:	mov    DWORD PTR [rdi+0x28],r12d
   14001278b:	mov    DWORD PTR [rdi+0x2c],r12d
   14001278f:	mov    DWORD PTR [rdi+0x8],0x33
   140012796:	mov    rax,QWORD PTR [rcx+0x18]
   14001279a:	mov    QWORD PTR [rdi+0x18],rax
   14001279e:	mov    QWORD PTR [rcx+0x18],rdi
   1400127a2:	jmp    0x14000ff40
   1400127a7:	mov    rdx,QWORD PTR [rbp+0x8]
   1400127ab:	mov    ecx,0x30
   1400127b0:	call   0x14000e810
   1400127b5:	mov    rdi,rax
   1400127b8:	test   rax,rax
   1400127bb:	je     0x140011761
   1400127c1:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400127c5:	lea    rcx,[rdi+0x20]
   1400127c9:	shl    rdx,0x4
   1400127cd:	add    rdx,QWORD PTR [rbp+0x30]
   1400127d1:	mov    DWORD PTR [rax+0x10],r12d
   1400127d5:	mov    DWORD PTR [rax+0x14],r12d
   1400127d9:	mov    DWORD PTR [rax+0x18],r12d
   1400127dd:	mov    DWORD PTR [rax+0x1c],r12d
   1400127e1:	mov    DWORD PTR [rax+0x8],0x35
   1400127e8:	lea    rax,[rip+0xe9f9]        # 0x1400211e8
   1400127ef:	mov    QWORD PTR [rdi],rax
   1400127f2:	call   QWORD PTR [rip+0xdc38]        # 0x140020430
   1400127f8:	mov    DWORD PTR [rdi+0x8],0x22
   1400127ff:	jmp    0x140011764
   140012804:	mov    rdx,QWORD PTR [rbp+0x8]
   140012808:	mov    ecx,0x30
   14001280d:	call   0x14000e810
   140012812:	mov    rdi,rax
   140012815:	test   rax,rax
   140012818:	je     0x140011761
   14001281e:	movsxd rdx,DWORD PTR [rbp+0x10]
   140012822:	lea    rcx,[rdi+0x20]
   140012826:	shl    rdx,0x4
   14001282a:	add    rdx,QWORD PTR [rbp+0x30]
   14001282e:	mov    DWORD PTR [rax+0x10],r12d
   140012832:	mov    DWORD PTR [rax+0x14],r12d
   140012836:	mov    DWORD PTR [rax+0x18],r12d
   14001283a:	mov    DWORD PTR [rax+0x1c],r12d
   14001283e:	mov    DWORD PTR [rax+0x8],0x35
   140012845:	lea    rax,[rip+0xe9ec]        # 0x140021238
   14001284c:	mov    QWORD PTR [rdi],rax
   14001284f:	call   QWORD PTR [rip+0xdbdb]        # 0x140020430
   140012855:	mov    DWORD PTR [rdi+0x8],0x3e
   14001285c:	jmp    0x140011764
   140012861:	mov    rdx,QWORD PTR [rbp+0x8]
   140012865:	mov    ecx,0x28
   14001286a:	call   0x14000e810
   14001286f:	mov    rdi,rax
   140012872:	test   rax,rax
   140012875:	je     0x140011761
   14001287b:	movsxd rcx,DWORD PTR [rbp+0x10]
   14001287f:	mov    rax,QWORD PTR [rbp+0x18]
   140012883:	movsd  xmm0,QWORD PTR [rax+rcx*8]
   140012888:	mov    DWORD PTR [rdi+0x10],r12d
   14001288c:	mov    DWORD PTR [rdi+0x14],r12d
   140012890:	mov    DWORD PTR [rdi+0x18],r12d
   140012894:	mov    DWORD PTR [rdi+0x1c],r12d
   140012898:	lea    rax,[rip+0xe9e9]        # 0x140021288
   14001289f:	movsd  QWORD PTR [rdi+0x20],xmm0
   1400128a4:	mov    QWORD PTR [rdi],rax
   1400128a7:	mov    DWORD PTR [rdi+0x8],0x2c
   1400128ae:	jmp    0x140011764
   1400128b3:	mov    rdx,QWORD PTR [rbp+0x8]
   1400128b7:	mov    ecx,0x40
   1400128bc:	call   0x14000e810
   1400128c1:	mov    r11,rax
   1400128c4:	test   rax,rax
   1400128c7:	je     0x140012916
   1400128c9:	mov    rax,QWORD PTR [rbp+0x18]
   1400128cd:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400128d1:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   1400128d6:	mov    rdx,QWORD PTR [rax+rcx*8]
   1400128da:	lea    rax,[rip+0xe9f7]        # 0x1400212d8
   1400128e1:	mov    QWORD PTR [r11],rax
   1400128e4:	mov    QWORD PTR [r11+0x10],rdx
   1400128e8:	mov    QWORD PTR [r11+0x18],rdi
   1400128ec:	mov    DWORD PTR [r11+0x20],r12d
   1400128f0:	mov    DWORD PTR [r11+0x24],r12d
   1400128f4:	mov    DWORD PTR [r11+0x28],r12d
   1400128f8:	mov    DWORD PTR [r11+0x2c],r12d
   1400128fc:	mov    DWORD PTR [r11+0x30],r12d
   140012900:	mov    DWORD PTR [r11+0x34],r12d
   140012904:	mov    DWORD PTR [r11+0x38],r12d
   140012908:	mov    DWORD PTR [r11+0x3c],r12d
   14001290c:	mov    DWORD PTR [r11+0x8],0x3
   140012914:	jmp    0x140012919
   140012916:	mov    r11,r12
   140012919:	mov    rcx,QWORD PTR [rbp+0x28]
   14001291d:	movsxd rdx,DWORD PTR [rbp+0x10]
   140012921:	lea    r9,[rip+0xfffffffffffed6d8]        # 0x140000000
   140012928:	inc    rdx
   14001292b:	add    rdx,rdx
   14001292e:	mov    eax,DWORD PTR [rcx+rdx*8]
   140012931:	mov    DWORD PTR [r11+0x20],eax
   140012935:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140012939:	mov    DWORD PTR [r11+0x24],eax
   14001293d:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140012941:	mov    DWORD PTR [r11+0x28],eax
   140012945:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140012949:	mov    DWORD PTR [r11+0x2c],eax
   14001294d:	mov    rcx,QWORD PTR [rbp+0x28]
   140012951:	movsxd rdx,DWORD PTR [rbp+0x10]
   140012955:	add    rdx,0x3
   140012959:	add    rdx,rdx
   14001295c:	mov    eax,DWORD PTR [rcx+rdx*8]
   14001295f:	mov    DWORD PTR [r11+0x30],eax
   140012963:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140012967:	mov    DWORD PTR [r11+0x34],eax
   14001296b:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14001296f:	mov    DWORD PTR [r11+0x38],eax
   140012973:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140012977:	mov    DWORD PTR [r11+0x3c],eax
   14001297b:	movsxd rcx,DWORD PTR [rbp+0x10]
   14001297f:	mov    rax,QWORD PTR [rbp+0x18]
   140012983:	mov    QWORD PTR [rax+rcx*8],r11
   140012987:	jmp    0x140015510
   14001298c:	mov    rdx,QWORD PTR [rbp+0x8]
   140012990:	mov    ecx,0x48
   140012995:	call   0x14000e810
   14001299a:	mov    rdi,rax
   14001299d:	test   rax,rax
   1400129a0:	je     0x1400129c9
   1400129a2:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400129a6:	mov    rdx,QWORD PTR [rbp+0x18]
   1400129aa:	mov    rdx,QWORD PTR [rdx+rcx*8]
   1400129ae:	lea    eax,[rcx+0x2]
   1400129b1:	mov    rcx,rdi
   1400129b4:	movsxd r8,eax
   1400129b7:	shl    r8,0x4
   1400129bb:	add    r8,QWORD PTR [rbp+0x30]
   1400129bf:	call   0x14000d220
   1400129c4:	mov    rdi,rax
   1400129c7:	jmp    0x1400129cc
   1400129c9:	mov    rdi,r12
   1400129cc:	mov    rcx,QWORD PTR [rbp+0x28]
   1400129d0:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400129d4:	inc    rdx
   1400129d7:	add    rdx,rdx
   1400129da:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400129dd:	mov    DWORD PTR [rdi+0x28],eax
   1400129e0:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400129e4:	mov    DWORD PTR [rdi+0x2c],eax
   1400129e7:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400129eb:	mov    DWORD PTR [rdi+0x30],eax
   1400129ee:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400129f2:	mov    DWORD PTR [rdi+0x34],eax
   1400129f5:	mov    rcx,QWORD PTR [rbp+0x28]
   1400129f9:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400129fd:	add    rdx,0x2
   140012a01:	add    rdx,rdx
   140012a04:	mov    eax,DWORD PTR [rcx+rdx*8]
   140012a07:	mov    DWORD PTR [rdi+0x38],eax
   140012a0a:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140012a0e:	mov    DWORD PTR [rdi+0x3c],eax
   140012a11:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140012a15:	mov    DWORD PTR [rdi+0x40],eax
   140012a18:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140012a1c:	mov    DWORD PTR [rdi+0x44],eax
   140012a1f:	jmp    0x14000f9a9
   140012a24:	mov    rdx,QWORD PTR [rbp+0x8]
   140012a28:	mov    ecx,0x50
   140012a2d:	call   0x14000e810
   140012a32:	mov    r11,rax
   140012a35:	test   rax,rax
   140012a38:	je     0x140011e96
   140012a3e:	mov    ecx,DWORD PTR [rbp+0x10]
   140012a41:	mov    rdi,QWORD PTR [rbp+0x18]
   140012a45:	lea    eax,[rcx+0x3]
   140012a48:	movsxd r8,eax
   140012a4b:	lea    eax,[rcx+0x1]
   140012a4e:	mov    rcx,r11
   140012a51:	mov    r8,QWORD PTR [rdi+r8*8]
   140012a55:	movsxd rdx,eax
   140012a58:	mov    rdx,QWORD PTR [rdi+rdx*8]
   140012a5c:	call   0x14000d280
   140012a61:	mov    rdi,rax
   140012a64:	jmp    0x140011e99
   140012a69:	mov    rdx,QWORD PTR [rbp+0x8]
   140012a6d:	mov    ecx,0x28
   140012a72:	call   0x14000e810
   140012a77:	mov    rdi,rax
   140012a7a:	test   rax,rax
   140012a7d:	je     0x14001191b
   140012a83:	mov    rax,QWORD PTR [rbp+0x18]
   140012a87:	movsxd rcx,DWORD PTR [rbp+0x10]
   140012a8b:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140012a90:	lea    rax,[rip+0xe931]        # 0x1400213c8
   140012a97:	mov    QWORD PTR [rdi],rax
   140012a9a:	mov    QWORD PTR [rdi+0x10],rdx
   140012a9e:	mov    DWORD PTR [rdi+0x18],r12d
   140012aa2:	mov    DWORD PTR [rdi+0x1c],r12d
   140012aa6:	mov    DWORD PTR [rdi+0x20],r12d
   140012aaa:	mov    DWORD PTR [rdi+0x24],r12d
   140012aae:	mov    DWORD PTR [rdi+0x8],0x27
   140012ab5:	jmp    0x14001191e
   140012aba:	mov    rdx,QWORD PTR [rbp+0x8]
   140012abe:	mov    ecx,0x40
   140012ac3:	call   0x14000e810
   140012ac8:	mov    r11,rax
   140012acb:	test   rax,rax
   140012ace:	je     0x140012916
   140012ad4:	mov    rax,QWORD PTR [rbp+0x18]
   140012ad8:	movsxd rcx,DWORD PTR [rbp+0x10]
   140012adc:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140012ae1:	mov    rdx,QWORD PTR [rax+rcx*8]
   140012ae5:	lea    rax,[rip+0xe92c]        # 0x140021418
   140012aec:	mov    QWORD PTR [r11],rax
   140012aef:	mov    QWORD PTR [r11+0x10],rdx
   140012af3:	mov    QWORD PTR [r11+0x18],rdi
   140012af7:	mov    DWORD PTR [r11+0x20],r12d
   140012afb:	mov    DWORD PTR [r11+0x24],r12d
   140012aff:	mov    DWORD PTR [r11+0x28],r12d
   140012b03:	mov    DWORD PTR [r11+0x2c],r12d
   140012b07:	mov    DWORD PTR [r11+0x30],r12d
   140012b0b:	mov    DWORD PTR [r11+0x34],r12d
   140012b0f:	mov    DWORD PTR [r11+0x38],r12d
   140012b13:	mov    DWORD PTR [r11+0x3c],r12d
   140012b17:	mov    DWORD PTR [r11+0x8],0x7
   140012b1f:	jmp    0x140012919
   140012b24:	mov    rdx,QWORD PTR [rbp+0x8]
   140012b28:	mov    ecx,0x30
   140012b2d:	call   0x14000e810
   140012b32:	mov    rdi,rax
   140012b35:	test   rax,rax
   140012b38:	je     0x14000f9a6
   140012b3e:	mov    rax,QWORD PTR [rbp+0x18]
   140012b42:	movsxd rcx,DWORD PTR [rbp+0x10]
   140012b46:	mov    rdx,QWORD PTR [rax+rcx*8]
   140012b4a:	lea    rax,[rip+0xe917]        # 0x140021468
   140012b51:	mov    QWORD PTR [rdi],rax
   140012b54:	mov    QWORD PTR [rdi+0x10],rdx
   140012b58:	mov    QWORD PTR [rdi+0x18],rdi
   140012b5c:	mov    DWORD PTR [rdi+0x20],r12d
   140012b60:	mov    DWORD PTR [rdi+0x24],r12d
   140012b64:	mov    DWORD PTR [rdi+0x28],r12d
   140012b68:	mov    DWORD PTR [rdi+0x2c],r12d
   140012b6c:	mov    DWORD PTR [rdi+0x8],0x1
   140012b73:	jmp    0x14000f9a9
   140012b78:	mov    rdx,QWORD PTR [rbp+0x8]
   140012b7c:	mov    ecx,0x30
   140012b81:	call   0x14000e810
   140012b86:	mov    rdi,rax
   140012b89:	test   rax,rax
   140012b8c:	je     0x14000ff3d
   140012b92:	mov    rax,QWORD PTR [rbp+0x18]
   140012b96:	movsxd rcx,DWORD PTR [rbp+0x10]
   140012b9a:	mov    rdx,QWORD PTR [rax+rcx*8+0x10]
   140012b9f:	mov    rcx,QWORD PTR [rax+rcx*8]
   140012ba3:	lea    rax,[rip+0xe8be]        # 0x140021468
   140012baa:	mov    QWORD PTR [rdi],rax
   140012bad:	mov    QWORD PTR [rdi+0x10],rdx
   140012bb1:	mov    DWORD PTR [rdi+0x20],r12d
   140012bb5:	mov    DWORD PTR [rdi+0x24],r12d
   140012bb9:	mov    DWORD PTR [rdi+0x28],r12d
   140012bbd:	mov    DWORD PTR [rdi+0x2c],r12d
   140012bc1:	mov    DWORD PTR [rdi+0x8],0x1
   140012bc8:	mov    rax,QWORD PTR [rcx+0x18]
   140012bcc:	mov    QWORD PTR [rdi+0x18],rax
   140012bd0:	mov    QWORD PTR [rcx+0x18],rdi
   140012bd4:	jmp    0x14000ff40
   140012bd9:	mov    rdx,QWORD PTR [rbp+0x8]
   140012bdd:	mov    ecx,0x28
   140012be2:	call   0x14000e810
   140012be7:	mov    rdi,rax
   140012bea:	test   rax,rax
   140012bed:	je     0x14001242a
   140012bf3:	mov    rax,QWORD PTR [rbp+0x18]
   140012bf7:	movsxd rcx,DWORD PTR [rbp+0x10]
   140012bfb:	mov    rdx,QWORD PTR [rax+rcx*8]
   140012bff:	lea    rax,[rip+0xe8b2]        # 0x1400214b8
   140012c06:	mov    QWORD PTR [rdi],rax
   140012c09:	mov    QWORD PTR [rdi+0x10],rdx
   140012c0d:	mov    DWORD PTR [rdi+0x18],r12d
   140012c11:	mov    DWORD PTR [rdi+0x1c],r12d
   140012c15:	mov    DWORD PTR [rdi+0x20],r12d
   140012c19:	mov    DWORD PTR [rdi+0x24],r12d
   140012c1d:	mov    DWORD PTR [rdi+0x8],0x2f
   140012c24:	jmp    0x14001242d
   140012c29:	mov    rdx,QWORD PTR [rbp+0x8]
   140012c2d:	mov    ecx,0x28
   140012c32:	call   0x14000e810
   140012c37:	mov    rdi,rax
   140012c3a:	test   rax,rax
   140012c3d:	je     0x14001242a
   140012c43:	mov    rax,QWORD PTR [rbp+0x18]
   140012c47:	movsxd rcx,DWORD PTR [rbp+0x10]
   140012c4b:	mov    rdx,QWORD PTR [rax+rcx*8]
   140012c4f:	lea    rax,[rip+0xe8b2]        # 0x140021508
   140012c56:	mov    QWORD PTR [rdi],rax
   140012c59:	mov    QWORD PTR [rdi+0x10],rdx
   140012c5d:	mov    DWORD PTR [rdi+0x18],r12d
   140012c61:	mov    DWORD PTR [rdi+0x1c],r12d
   140012c65:	mov    DWORD PTR [rdi+0x20],r12d
   140012c69:	mov    DWORD PTR [rdi+0x24],r12d
   140012c6d:	mov    DWORD PTR [rdi+0x8],0x2e
   140012c74:	jmp    0x14001242d
   140012c79:	mov    rdx,QWORD PTR [rbp+0x8]
   140012c7d:	mov    ecx,0x28
   140012c82:	call   0x14000e810
   140012c87:	mov    rdi,rax
   140012c8a:	test   rax,rax
   140012c8d:	je     0x14001191b
   140012c93:	mov    rax,QWORD PTR [rbp+0x18]
   140012c97:	movsxd rcx,DWORD PTR [rbp+0x10]
   140012c9b:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140012ca0:	lea    rax,[rip+0xe8b1]        # 0x140021558
   140012ca7:	mov    QWORD PTR [rdi],rax
   140012caa:	mov    QWORD PTR [rdi+0x10],rdx
   140012cae:	mov    DWORD PTR [rdi+0x18],r12d
   140012cb2:	mov    DWORD PTR [rdi+0x1c],r12d
   140012cb6:	mov    DWORD PTR [rdi+0x20],r12d
   140012cba:	mov    DWORD PTR [rdi+0x24],r12d
   140012cbe:	mov    DWORD PTR [rdi+0x8],0x10
   140012cc5:	jmp    0x14001191e
   140012cca:	mov    rdx,QWORD PTR [rbp+0x8]
   140012cce:	mov    ecx,0x28
   140012cd3:	call   0x14000e810
   140012cd8:	mov    rdi,rax
   140012cdb:	test   rax,rax
   140012cde:	je     0x14001191b
   140012ce4:	mov    rax,QWORD PTR [rbp+0x18]
   140012ce8:	movsxd rcx,DWORD PTR [rbp+0x10]
   140012cec:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140012cf1:	lea    rax,[rip+0xe8b0]        # 0x1400215a8
   140012cf8:	mov    QWORD PTR [rdi],rax
   140012cfb:	mov    QWORD PTR [rdi+0x10],rdx
   140012cff:	mov    DWORD PTR [rdi+0x18],r12d
   140012d03:	mov    DWORD PTR [rdi+0x1c],r12d
   140012d07:	mov    DWORD PTR [rdi+0x20],r12d
   140012d0b:	mov    DWORD PTR [rdi+0x24],r12d
   140012d0f:	mov    DWORD PTR [rdi+0x8],0x4b
   140012d16:	jmp    0x14001191e
   140012d1b:	mov    rdx,QWORD PTR [rbp+0x8]
   140012d1f:	mov    ecx,0x28
   140012d24:	call   0x14000e810
   140012d29:	mov    rdi,rax
   140012d2c:	test   rax,rax
   140012d2f:	je     0x14001191b
   140012d35:	mov    rax,QWORD PTR [rbp+0x18]
   140012d39:	movsxd rcx,DWORD PTR [rbp+0x10]
   140012d3d:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140012d42:	lea    rax,[rip+0xe8af]        # 0x1400215f8
   140012d49:	mov    QWORD PTR [rdi],rax
   140012d4c:	mov    QWORD PTR [rdi+0x10],rdx
   140012d50:	mov    DWORD PTR [rdi+0x18],r12d
   140012d54:	mov    DWORD PTR [rdi+0x1c],r12d
   140012d58:	mov    DWORD PTR [rdi+0x20],r12d
   140012d5c:	mov    DWORD PTR [rdi+0x24],r12d
   140012d60:	mov    DWORD PTR [rdi+0x8],0x45
   140012d67:	jmp    0x14001191e
   140012d6c:	mov    rdx,QWORD PTR [rbp+0x8]
   140012d70:	mov    ecx,0x28
   140012d75:	call   0x14000e810
   140012d7a:	mov    rdi,rax
   140012d7d:	test   rax,rax
   140012d80:	je     0x14001191b
   140012d86:	mov    rax,QWORD PTR [rbp+0x18]
   140012d8a:	movsxd rcx,DWORD PTR [rbp+0x10]
   140012d8e:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140012d93:	lea    rax,[rip+0xe8ae]        # 0x140021648
   140012d9a:	mov    QWORD PTR [rdi],rax
   140012d9d:	mov    QWORD PTR [rdi+0x10],rdx
   140012da1:	mov    DWORD PTR [rdi+0x18],r12d
   140012da5:	mov    DWORD PTR [rdi+0x1c],r12d
   140012da9:	mov    DWORD PTR [rdi+0x20],r12d
   140012dad:	mov    DWORD PTR [rdi+0x24],r12d
   140012db1:	mov    DWORD PTR [rdi+0x8],0x31
   140012db8:	jmp    0x14001191e
   140012dbd:	mov    rdx,QWORD PTR [rbp+0x8]
   140012dc1:	mov    ecx,0x28
   140012dc6:	call   0x14000e810
   140012dcb:	mov    rdi,rax
   140012dce:	test   rax,rax
   140012dd1:	je     0x14001191b
   140012dd7:	mov    rax,QWORD PTR [rbp+0x18]
   140012ddb:	movsxd rcx,DWORD PTR [rbp+0x10]
   140012ddf:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140012de4:	lea    rax,[rip+0xe8ad]        # 0x140021698
   140012deb:	mov    QWORD PTR [rdi],rax
   140012dee:	mov    QWORD PTR [rdi+0x10],rdx
   140012df2:	mov    DWORD PTR [rdi+0x18],r12d
   140012df6:	mov    DWORD PTR [rdi+0x1c],r12d
   140012dfa:	mov    DWORD PTR [rdi+0x20],r12d
   140012dfe:	mov    DWORD PTR [rdi+0x24],r12d
   140012e02:	mov    DWORD PTR [rdi+0x8],0x30
   140012e09:	jmp    0x14001191e
   140012e0e:	mov    rdx,QWORD PTR [rbp+0x8]
   140012e12:	mov    ecx,0x28
   140012e17:	call   0x14000e810
   140012e1c:	mov    rdi,rax
   140012e1f:	test   rax,rax
   140012e22:	je     0x14001191b
   140012e28:	mov    rax,QWORD PTR [rbp+0x18]
   140012e2c:	movsxd rcx,DWORD PTR [rbp+0x10]
   140012e30:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140012e35:	lea    rax,[rip+0xe8ac]        # 0x1400216e8
   140012e3c:	mov    QWORD PTR [rdi],rax
   140012e3f:	mov    QWORD PTR [rdi+0x10],rdx
   140012e43:	mov    DWORD PTR [rdi+0x18],r12d
   140012e47:	mov    DWORD PTR [rdi+0x1c],r12d
   140012e4b:	mov    DWORD PTR [rdi+0x20],r12d
   140012e4f:	mov    DWORD PTR [rdi+0x24],r12d
   140012e53:	mov    DWORD PTR [rdi+0x8],0x47
   140012e5a:	jmp    0x14001191e
   140012e5f:	mov    rdx,QWORD PTR [rbp+0x8]
   140012e63:	mov    ecx,0x28
   140012e68:	call   0x14000e810
   140012e6d:	mov    rdi,rax
   140012e70:	test   rax,rax
   140012e73:	je     0x14001191b
   140012e79:	mov    rax,QWORD PTR [rbp+0x18]
   140012e7d:	movsxd rcx,DWORD PTR [rbp+0x10]
   140012e81:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140012e86:	lea    rax,[rip+0xe8ab]        # 0x140021738
   140012e8d:	mov    QWORD PTR [rdi],rax
   140012e90:	mov    QWORD PTR [rdi+0x10],rdx
   140012e94:	mov    DWORD PTR [rdi+0x18],r12d
   140012e98:	mov    DWORD PTR [rdi+0x1c],r12d
   140012e9c:	mov    DWORD PTR [rdi+0x20],r12d
   140012ea0:	mov    DWORD PTR [rdi+0x24],r12d
   140012ea4:	mov    DWORD PTR [rdi+0x8],0x46
   140012eab:	jmp    0x14001191e
   140012eb0:	mov    rdx,QWORD PTR [rbp+0x8]
   140012eb4:	mov    ecx,0x28
   140012eb9:	call   0x14000e810
   140012ebe:	mov    rdi,rax
   140012ec1:	test   rax,rax
   140012ec4:	je     0x14001191b
   140012eca:	mov    rax,QWORD PTR [rbp+0x18]
   140012ece:	movsxd rcx,DWORD PTR [rbp+0x10]
   140012ed2:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140012ed7:	lea    rax,[rip+0xe8aa]        # 0x140021788
   140012ede:	mov    QWORD PTR [rdi],rax
   140012ee1:	mov    QWORD PTR [rdi+0x10],rdx
   140012ee5:	mov    DWORD PTR [rdi+0x18],r12d
   140012ee9:	mov    DWORD PTR [rdi+0x1c],r12d
   140012eed:	mov    DWORD PTR [rdi+0x20],r12d
   140012ef1:	mov    DWORD PTR [rdi+0x24],r12d
   140012ef5:	mov    DWORD PTR [rdi+0x8],0x42
   140012efc:	jmp    0x14001191e
   140012f01:	mov    rdx,QWORD PTR [rbp+0x8]
   140012f05:	mov    ecx,0x28
   140012f0a:	call   0x14000e810
   140012f0f:	mov    rdi,rax
   140012f12:	test   rax,rax
   140012f15:	je     0x14001191b
   140012f1b:	mov    rax,QWORD PTR [rbp+0x18]
   140012f1f:	movsxd rcx,DWORD PTR [rbp+0x10]
   140012f23:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140012f28:	lea    rax,[rip+0xe8a9]        # 0x1400217d8
   140012f2f:	mov    QWORD PTR [rdi],rax
   140012f32:	mov    QWORD PTR [rdi+0x10],rdx
   140012f36:	mov    DWORD PTR [rdi+0x18],r12d
   140012f3a:	mov    DWORD PTR [rdi+0x1c],r12d
   140012f3e:	mov    DWORD PTR [rdi+0x20],r12d
   140012f42:	mov    DWORD PTR [rdi+0x24],r12d
   140012f46:	mov    DWORD PTR [rdi+0x8],0x29
   140012f4d:	jmp    0x14001191e
   140012f52:	mov    rdx,QWORD PTR [rbp+0x8]
   140012f56:	mov    ecx,0x38
   140012f5b:	call   0x14000e810
   140012f60:	mov    r11,rax
   140012f63:	test   rax,rax
   140012f66:	je     0x1400102c7
   140012f6c:	mov    rax,QWORD PTR [rbp+0x18]
   140012f70:	movsxd rcx,DWORD PTR [rbp+0x10]
   140012f74:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140012f79:	mov    rdx,QWORD PTR [rax+rcx*8]
   140012f7d:	lea    rax,[rip+0xe8a4]        # 0x140021828
   140012f84:	mov    QWORD PTR [r11],rax
   140012f87:	mov    QWORD PTR [r11+0x10],rdx
   140012f8b:	mov    DWORD PTR [r11+0x18],0x16
   140012f93:	mov    QWORD PTR [r11+0x20],rdi
   140012f97:	mov    DWORD PTR [r11+0x28],r12d
   140012f9b:	mov    DWORD PTR [r11+0x2c],r12d
   140012f9f:	mov    DWORD PTR [r11+0x30],r12d
   140012fa3:	mov    DWORD PTR [r11+0x34],r12d
   140012fa7:	mov    DWORD PTR [r11+0x8],0x4
   140012faf:	jmp    0x1400102ca
   140012fb4:	mov    rdx,QWORD PTR [rbp+0x8]
   140012fb8:	mov    ecx,0x38
   140012fbd:	call   0x14000e810
   140012fc2:	mov    r11,rax
   140012fc5:	test   rax,rax
   140012fc8:	je     0x1400102c7
   140012fce:	mov    rax,QWORD PTR [rbp+0x18]
   140012fd2:	movsxd rcx,DWORD PTR [rbp+0x10]
   140012fd6:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140012fdb:	mov    rdx,QWORD PTR [rax+rcx*8]
   140012fdf:	lea    rax,[rip+0xe842]        # 0x140021828
   140012fe6:	mov    QWORD PTR [r11],rax
   140012fe9:	mov    QWORD PTR [r11+0x10],rdx
   140012fed:	mov    DWORD PTR [r11+0x18],0x8
   140012ff5:	mov    QWORD PTR [r11+0x20],rdi
   140012ff9:	mov    DWORD PTR [r11+0x28],r12d
   140012ffd:	mov    DWORD PTR [r11+0x2c],r12d
   140013001:	mov    DWORD PTR [r11+0x30],r12d
   140013005:	mov    DWORD PTR [r11+0x34],r12d
   140013009:	mov    DWORD PTR [r11+0x8],0x4
   140013011:	jmp    0x1400102ca
   140013016:	mov    rdx,QWORD PTR [rbp+0x8]
   14001301a:	mov    ecx,0x38
   14001301f:	call   0x14000e810
   140013024:	mov    r11,rax
   140013027:	test   rax,rax
   14001302a:	je     0x1400102c7
   140013030:	mov    rax,QWORD PTR [rbp+0x18]
   140013034:	movsxd rcx,DWORD PTR [rbp+0x10]
   140013038:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   14001303d:	mov    rdx,QWORD PTR [rax+rcx*8]
   140013041:	lea    rax,[rip+0xe7e0]        # 0x140021828
   140013048:	mov    QWORD PTR [r11],rax
   14001304b:	mov    QWORD PTR [r11+0x10],rdx
   14001304f:	mov    DWORD PTR [r11+0x18],0x14
   140013057:	mov    QWORD PTR [r11+0x20],rdi
   14001305b:	mov    DWORD PTR [r11+0x28],r12d
   14001305f:	mov    DWORD PTR [r11+0x2c],r12d
   140013063:	mov    DWORD PTR [r11+0x30],r12d
   140013067:	mov    DWORD PTR [r11+0x34],r12d
   14001306b:	mov    DWORD PTR [r11+0x8],0x4
   140013073:	jmp    0x1400102ca
   140013078:	mov    rdx,QWORD PTR [rbp+0x8]
   14001307c:	mov    ecx,0x38
   140013081:	call   0x14000e810
   140013086:	mov    r11,rax
   140013089:	test   rax,rax
   14001308c:	je     0x1400102c7
   140013092:	mov    rax,QWORD PTR [rbp+0x18]
   140013096:	movsxd rcx,DWORD PTR [rbp+0x10]
   14001309a:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   14001309f:	mov    rdx,QWORD PTR [rax+rcx*8]
   1400130a3:	lea    rax,[rip+0xe77e]        # 0x140021828
   1400130aa:	mov    QWORD PTR [r11],rax
   1400130ad:	mov    QWORD PTR [r11+0x10],rdx
   1400130b1:	mov    DWORD PTR [r11+0x18],r12d
   1400130b5:	mov    QWORD PTR [r11+0x20],rdi
   1400130b9:	mov    DWORD PTR [r11+0x28],r12d
   1400130bd:	mov    DWORD PTR [r11+0x2c],r12d
   1400130c1:	mov    DWORD PTR [r11+0x30],r12d
   1400130c5:	mov    DWORD PTR [r11+0x34],r12d
   1400130c9:	mov    DWORD PTR [r11+0x8],0x4
   1400130d1:	jmp    0x1400102ca
   1400130d6:	mov    rdx,QWORD PTR [rbp+0x8]
   1400130da:	mov    ecx,0x38
   1400130df:	call   0x14000e810
   1400130e4:	mov    r11,rax
   1400130e7:	test   rax,rax
   1400130ea:	je     0x1400102c7
   1400130f0:	mov    rax,QWORD PTR [rbp+0x18]
   1400130f4:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400130f8:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   1400130fd:	mov    rdx,QWORD PTR [rax+rcx*8]
   140013101:	lea    rax,[rip+0xe720]        # 0x140021828
   140013108:	mov    QWORD PTR [r11],rax
   14001310b:	mov    QWORD PTR [r11+0x10],rdx
   14001310f:	mov    DWORD PTR [r11+0x18],0x1f
   140013117:	mov    QWORD PTR [r11+0x20],rdi
   14001311b:	mov    DWORD PTR [r11+0x28],r12d
   14001311f:	mov    DWORD PTR [r11+0x2c],r12d
   140013123:	mov    DWORD PTR [r11+0x30],r12d
   140013127:	mov    DWORD PTR [r11+0x34],r12d
   14001312b:	mov    DWORD PTR [r11+0x8],0x4
   140013133:	jmp    0x1400102ca
   140013138:	mov    rdx,QWORD PTR [rbp+0x8]
   14001313c:	mov    ecx,0x38
   140013141:	call   0x14000e810
   140013146:	mov    r11,rax
   140013149:	test   rax,rax
   14001314c:	je     0x1400102c7
   140013152:	mov    rax,QWORD PTR [rbp+0x18]
   140013156:	movsxd rcx,DWORD PTR [rbp+0x10]
   14001315a:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   14001315f:	mov    rdx,QWORD PTR [rax+rcx*8]
   140013163:	lea    rax,[rip+0xe6be]        # 0x140021828
   14001316a:	mov    QWORD PTR [r11],rax
   14001316d:	mov    QWORD PTR [r11+0x10],rdx
   140013171:	mov    DWORD PTR [r11+0x18],0x11
   140013179:	mov    QWORD PTR [r11+0x20],rdi
   14001317d:	mov    DWORD PTR [r11+0x28],r12d
   140013181:	mov    DWORD PTR [r11+0x2c],r12d
   140013185:	mov    DWORD PTR [r11+0x30],r12d
   140013189:	mov    DWORD PTR [r11+0x34],r12d
   14001318d:	mov    DWORD PTR [r11+0x8],0x4
   140013195:	jmp    0x1400102ca
   14001319a:	mov    rdx,QWORD PTR [rbp+0x8]
   14001319e:	mov    ecx,0x38
   1400131a3:	call   0x14000e810
   1400131a8:	mov    r11,rax
   1400131ab:	test   rax,rax
   1400131ae:	je     0x1400102c7
   1400131b4:	mov    rax,QWORD PTR [rbp+0x18]
   1400131b8:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400131bc:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   1400131c1:	mov    rdx,QWORD PTR [rax+rcx*8]
   1400131c5:	lea    rax,[rip+0xe65c]        # 0x140021828
   1400131cc:	mov    QWORD PTR [r11],rax
   1400131cf:	mov    QWORD PTR [r11+0x10],rdx
   1400131d3:	mov    DWORD PTR [r11+0x18],0x1b
   1400131db:	mov    QWORD PTR [r11+0x20],rdi
   1400131df:	mov    DWORD PTR [r11+0x28],r12d
   1400131e3:	mov    DWORD PTR [r11+0x2c],r12d
   1400131e7:	mov    DWORD PTR [r11+0x30],r12d
   1400131eb:	mov    DWORD PTR [r11+0x34],r12d
   1400131ef:	mov    DWORD PTR [r11+0x8],0x4
   1400131f7:	jmp    0x1400102ca
   1400131fc:	mov    rdx,QWORD PTR [rbp+0x8]
   140013200:	mov    ecx,0x38
   140013205:	call   0x14000e810
   14001320a:	mov    r11,rax
   14001320d:	test   rax,rax
   140013210:	je     0x1400102c7
   140013216:	mov    rax,QWORD PTR [rbp+0x18]
   14001321a:	movsxd rcx,DWORD PTR [rbp+0x10]
   14001321e:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140013223:	mov    rdx,QWORD PTR [rax+rcx*8]
   140013227:	lea    rax,[rip+0xe5fa]        # 0x140021828
   14001322e:	mov    QWORD PTR [r11],rax
   140013231:	mov    QWORD PTR [r11+0x10],rdx
   140013235:	mov    DWORD PTR [r11+0x18],0x20
   14001323d:	mov    QWORD PTR [r11+0x20],rdi
   140013241:	mov    DWORD PTR [r11+0x28],r12d
   140013245:	mov    DWORD PTR [r11+0x2c],r12d
   140013249:	mov    DWORD PTR [r11+0x30],r12d
   14001324d:	mov    DWORD PTR [r11+0x34],r12d
   140013251:	mov    DWORD PTR [r11+0x8],0x4
   140013259:	jmp    0x1400102ca
   14001325e:	mov    rdx,QWORD PTR [rbp+0x8]
   140013262:	mov    ecx,0x38
   140013267:	call   0x14000e810
   14001326c:	mov    r11,rax
   14001326f:	test   rax,rax
   140013272:	je     0x1400102c7
   140013278:	mov    rax,QWORD PTR [rbp+0x18]
   14001327c:	movsxd rcx,DWORD PTR [rbp+0x10]
   140013280:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140013285:	mov    rdx,QWORD PTR [rax+rcx*8]
   140013289:	lea    rax,[rip+0xe598]        # 0x140021828
   140013290:	mov    QWORD PTR [r11],rax
   140013293:	mov    QWORD PTR [r11+0x10],rdx
   140013297:	mov    DWORD PTR [r11+0x18],0x13
   14001329f:	mov    QWORD PTR [r11+0x20],rdi
   1400132a3:	mov    DWORD PTR [r11+0x28],r12d
   1400132a7:	mov    DWORD PTR [r11+0x2c],r12d
   1400132ab:	mov    DWORD PTR [r11+0x30],r12d
   1400132af:	mov    DWORD PTR [r11+0x34],r12d
   1400132b3:	mov    DWORD PTR [r11+0x8],0x4
   1400132bb:	jmp    0x1400102ca
   1400132c0:	mov    rdx,QWORD PTR [rbp+0x8]
   1400132c4:	mov    ecx,0x38
   1400132c9:	call   0x14000e810
   1400132ce:	mov    r11,rax
   1400132d1:	test   rax,rax
   1400132d4:	je     0x1400102c7
   1400132da:	mov    rax,QWORD PTR [rbp+0x18]
   1400132de:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400132e2:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   1400132e7:	mov    rdx,QWORD PTR [rax+rcx*8]
   1400132eb:	lea    rax,[rip+0xe536]        # 0x140021828
   1400132f2:	mov    QWORD PTR [r11],rax
   1400132f5:	mov    QWORD PTR [r11+0x10],rdx
   1400132f9:	mov    DWORD PTR [r11+0x18],0xc
   140013301:	mov    QWORD PTR [r11+0x20],rdi
   140013305:	mov    DWORD PTR [r11+0x28],r12d
   140013309:	mov    DWORD PTR [r11+0x2c],r12d
   14001330d:	mov    DWORD PTR [r11+0x30],r12d
   140013311:	mov    DWORD PTR [r11+0x34],r12d
   140013315:	mov    DWORD PTR [r11+0x8],0x4
   14001331d:	jmp    0x1400102ca
   140013322:	mov    rdx,QWORD PTR [rbp+0x8]
   140013326:	mov    ecx,0x38
   14001332b:	call   0x14000e810
   140013330:	mov    r11,rax
   140013333:	test   rax,rax
   140013336:	je     0x1400102c7
   14001333c:	mov    rax,QWORD PTR [rbp+0x18]
   140013340:	movsxd rcx,DWORD PTR [rbp+0x10]
   140013344:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140013349:	mov    rdx,QWORD PTR [rax+rcx*8]
   14001334d:	lea    rax,[rip+0xe4d4]        # 0x140021828
   140013354:	mov    QWORD PTR [r11],rax
   140013357:	mov    QWORD PTR [r11+0x10],rdx
   14001335b:	mov    DWORD PTR [r11+0x18],0x10
   140013363:	mov    QWORD PTR [r11+0x20],rdi
   140013367:	mov    DWORD PTR [r11+0x28],r12d
   14001336b:	mov    DWORD PTR [r11+0x2c],r12d
   14001336f:	mov    DWORD PTR [r11+0x30],r12d
   140013373:	mov    DWORD PTR [r11+0x34],r12d
   140013377:	mov    DWORD PTR [r11+0x8],0x4
   14001337f:	jmp    0x1400102ca
   140013384:	mov    rdx,QWORD PTR [rbp+0x8]
   140013388:	mov    ecx,0x38
   14001338d:	call   0x14000e810
   140013392:	mov    r11,rax
   140013395:	test   rax,rax
   140013398:	je     0x1400102c7
   14001339e:	mov    rax,QWORD PTR [rbp+0x18]
   1400133a2:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400133a6:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   1400133ab:	mov    rdx,QWORD PTR [rax+rcx*8]
   1400133af:	lea    rax,[rip+0xe472]        # 0x140021828
   1400133b6:	mov    QWORD PTR [r11],rax
   1400133b9:	mov    QWORD PTR [r11+0x10],rdx
   1400133bd:	mov    DWORD PTR [r11+0x18],0xb
   1400133c5:	mov    QWORD PTR [r11+0x20],rdi
   1400133c9:	mov    DWORD PTR [r11+0x28],r12d
   1400133cd:	mov    DWORD PTR [r11+0x2c],r12d
   1400133d1:	mov    DWORD PTR [r11+0x30],r12d
   1400133d5:	mov    DWORD PTR [r11+0x34],r12d
   1400133d9:	mov    DWORD PTR [r11+0x8],0x4
   1400133e1:	jmp    0x1400102ca
   1400133e6:	mov    rdx,QWORD PTR [rbp+0x8]
   1400133ea:	mov    ecx,0x38
   1400133ef:	call   0x14000e810
   1400133f4:	mov    r11,rax
   1400133f7:	test   rax,rax
   1400133fa:	je     0x1400102c7
   140013400:	mov    rax,QWORD PTR [rbp+0x18]
   140013404:	movsxd rcx,DWORD PTR [rbp+0x10]
   140013408:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   14001340d:	mov    rdx,QWORD PTR [rax+rcx*8]
   140013411:	lea    rax,[rip+0xe410]        # 0x140021828
   140013418:	mov    QWORD PTR [r11],rax
   14001341b:	mov    QWORD PTR [r11+0x10],rdx
   14001341f:	mov    DWORD PTR [r11+0x18],0xf
   140013427:	mov    QWORD PTR [r11+0x20],rdi
   14001342b:	mov    DWORD PTR [r11+0x28],r12d
   14001342f:	mov    DWORD PTR [r11+0x2c],r12d
   140013433:	mov    DWORD PTR [r11+0x30],r12d
   140013437:	mov    DWORD PTR [r11+0x34],r12d
   14001343b:	mov    DWORD PTR [r11+0x8],0x4
   140013443:	jmp    0x1400102ca
   140013448:	mov    rdx,QWORD PTR [rbp+0x8]
   14001344c:	mov    ecx,0x38
   140013451:	call   0x14000e810
   140013456:	mov    r11,rax
   140013459:	test   rax,rax
   14001345c:	je     0x1400102c7
   140013462:	mov    rax,QWORD PTR [rbp+0x18]
   140013466:	movsxd rcx,DWORD PTR [rbp+0x10]
   14001346a:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   14001346f:	mov    rdx,QWORD PTR [rax+rcx*8]
   140013473:	lea    rax,[rip+0xe3ae]        # 0x140021828
   14001347a:	mov    QWORD PTR [r11],rax
   14001347d:	mov    QWORD PTR [r11+0x10],rdx
   140013481:	mov    DWORD PTR [r11+0x18],0xd
   140013489:	mov    QWORD PTR [r11+0x20],rdi
   14001348d:	mov    DWORD PTR [r11+0x28],r12d
   140013491:	mov    DWORD PTR [r11+0x2c],r12d
   140013495:	mov    DWORD PTR [r11+0x30],r12d
   140013499:	mov    DWORD PTR [r11+0x34],r12d
   14001349d:	mov    DWORD PTR [r11+0x8],0x4
   1400134a5:	jmp    0x1400102ca
   1400134aa:	mov    rdx,QWORD PTR [rbp+0x8]
   1400134ae:	mov    ecx,0x38
   1400134b3:	call   0x14000e810
   1400134b8:	mov    r11,rax
   1400134bb:	test   rax,rax
   1400134be:	je     0x1400102c7
   1400134c4:	mov    rax,QWORD PTR [rbp+0x18]
   1400134c8:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400134cc:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   1400134d1:	mov    rdx,QWORD PTR [rax+rcx*8]
   1400134d5:	lea    rax,[rip+0xe34c]        # 0x140021828
   1400134dc:	mov    QWORD PTR [r11],rax
   1400134df:	mov    QWORD PTR [r11+0x10],rdx
   1400134e3:	mov    DWORD PTR [r11+0x18],0xa
   1400134eb:	mov    QWORD PTR [r11+0x20],rdi
   1400134ef:	mov    DWORD PTR [r11+0x28],r12d
   1400134f3:	mov    DWORD PTR [r11+0x2c],r12d
   1400134f7:	mov    DWORD PTR [r11+0x30],r12d
   1400134fb:	mov    DWORD PTR [r11+0x34],r12d
   1400134ff:	mov    DWORD PTR [r11+0x8],0x4
   140013507:	jmp    0x1400102ca
   14001350c:	mov    rdx,QWORD PTR [rbp+0x8]
   140013510:	mov    ecx,0x38
   140013515:	call   0x14000e810
   14001351a:	mov    r11,rax
   14001351d:	test   rax,rax
   140013520:	je     0x1400102c7
   140013526:	mov    rax,QWORD PTR [rbp+0x18]
   14001352a:	movsxd rcx,DWORD PTR [rbp+0x10]
   14001352e:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140013533:	mov    rdx,QWORD PTR [rax+rcx*8]
   140013537:	lea    rax,[rip+0xe2ea]        # 0x140021828
   14001353e:	mov    QWORD PTR [r11],rax
   140013541:	mov    QWORD PTR [r11+0x10],rdx
   140013545:	mov    DWORD PTR [r11+0x18],0x18
   14001354d:	mov    QWORD PTR [r11+0x20],rdi
   140013551:	mov    DWORD PTR [r11+0x28],r12d
   140013555:	mov    DWORD PTR [r11+0x2c],r12d
   140013559:	mov    DWORD PTR [r11+0x30],r12d
   14001355d:	mov    DWORD PTR [r11+0x34],r12d
   140013561:	mov    DWORD PTR [r11+0x8],0x4
   140013569:	jmp    0x1400102ca
   14001356e:	mov    rdx,QWORD PTR [rbp+0x8]
   140013572:	mov    ecx,0x38
   140013577:	call   0x14000e810
   14001357c:	mov    r11,rax
   14001357f:	test   rax,rax
   140013582:	je     0x1400102c7
   140013588:	mov    rax,QWORD PTR [rbp+0x18]
   14001358c:	movsxd rcx,DWORD PTR [rbp+0x10]
   140013590:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140013595:	mov    rdx,QWORD PTR [rax+rcx*8]
   140013599:	lea    rax,[rip+0xe288]        # 0x140021828
   1400135a0:	mov    QWORD PTR [r11],rax
   1400135a3:	mov    QWORD PTR [r11+0x10],rdx
   1400135a7:	mov    DWORD PTR [r11+0x18],0x1d
   1400135af:	mov    QWORD PTR [r11+0x20],rdi
   1400135b3:	mov    DWORD PTR [r11+0x28],r12d
   1400135b7:	mov    DWORD PTR [r11+0x2c],r12d
   1400135bb:	mov    DWORD PTR [r11+0x30],r12d
   1400135bf:	mov    DWORD PTR [r11+0x34],r12d
   1400135c3:	mov    DWORD PTR [r11+0x8],0x4
   1400135cb:	jmp    0x1400102ca
   1400135d0:	mov    rdx,QWORD PTR [rbp+0x8]
   1400135d4:	mov    ecx,0x38
   1400135d9:	call   0x14000e810
   1400135de:	mov    r11,rax
   1400135e1:	test   rax,rax
   1400135e4:	je     0x1400102c7
   1400135ea:	mov    rax,QWORD PTR [rbp+0x18]
   1400135ee:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400135f2:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   1400135f7:	mov    rdx,QWORD PTR [rax+rcx*8]
   1400135fb:	lea    rax,[rip+0xe226]        # 0x140021828
   140013602:	mov    QWORD PTR [r11],rax
   140013605:	mov    QWORD PTR [r11+0x10],rdx
   140013609:	mov    DWORD PTR [r11+0x18],0x1e
   140013611:	mov    QWORD PTR [r11+0x20],rdi
   140013615:	mov    DWORD PTR [r11+0x28],r12d
   140013619:	mov    DWORD PTR [r11+0x2c],r12d
   14001361d:	mov    DWORD PTR [r11+0x30],r12d
   140013621:	mov    DWORD PTR [r11+0x34],r12d
   140013625:	mov    DWORD PTR [r11+0x8],0x4
   14001362d:	jmp    0x1400102ca
   140013632:	mov    rdx,QWORD PTR [rbp+0x8]
   140013636:	mov    ecx,0x38
   14001363b:	call   0x14000e810
   140013640:	mov    r11,rax
   140013643:	test   rax,rax
   140013646:	je     0x1400102c7
   14001364c:	mov    rax,QWORD PTR [rbp+0x18]
   140013650:	movsxd rcx,DWORD PTR [rbp+0x10]
   140013654:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140013659:	mov    rdx,QWORD PTR [rax+rcx*8]
   14001365d:	lea    rax,[rip+0xe1c4]        # 0x140021828
   140013664:	mov    QWORD PTR [r11],rax
   140013667:	mov    QWORD PTR [r11+0x10],rdx
   14001366b:	mov    DWORD PTR [r11+0x18],0x4
   140013673:	mov    QWORD PTR [r11+0x20],rdi
   140013677:	mov    DWORD PTR [r11+0x28],r12d
   14001367b:	mov    DWORD PTR [r11+0x2c],r12d
   14001367f:	mov    DWORD PTR [r11+0x30],r12d
   140013683:	mov    DWORD PTR [r11+0x34],r12d
   140013687:	mov    DWORD PTR [r11+0x8],0x4
   14001368f:	jmp    0x1400102ca
   140013694:	mov    rdx,QWORD PTR [rbp+0x8]
   140013698:	mov    ecx,0x38
   14001369d:	call   0x14000e810
   1400136a2:	mov    r11,rax
   1400136a5:	test   rax,rax
   1400136a8:	je     0x1400102c7
   1400136ae:	mov    rax,QWORD PTR [rbp+0x18]
   1400136b2:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400136b6:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   1400136bb:	mov    rdx,QWORD PTR [rax+rcx*8]
   1400136bf:	lea    rax,[rip+0xe162]        # 0x140021828
   1400136c6:	mov    QWORD PTR [r11],rax
   1400136c9:	mov    QWORD PTR [r11+0x10],rdx
   1400136cd:	mov    DWORD PTR [r11+0x18],0x6
   1400136d5:	mov    QWORD PTR [r11+0x20],rdi
   1400136d9:	mov    DWORD PTR [r11+0x28],r12d
   1400136dd:	mov    DWORD PTR [r11+0x2c],r12d
   1400136e1:	mov    DWORD PTR [r11+0x30],r12d
   1400136e5:	mov    DWORD PTR [r11+0x34],r12d
   1400136e9:	mov    DWORD PTR [r11+0x8],0x4
   1400136f1:	jmp    0x1400102ca
   1400136f6:	mov    rdx,QWORD PTR [rbp+0x8]
   1400136fa:	mov    ecx,0x38
   1400136ff:	call   0x14000e810
   140013704:	mov    r11,rax
   140013707:	test   rax,rax
   14001370a:	je     0x1400102c7
   140013710:	mov    rax,QWORD PTR [rbp+0x18]
   140013714:	movsxd rcx,DWORD PTR [rbp+0x10]
   140013718:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   14001371d:	mov    rdx,QWORD PTR [rax+rcx*8]
   140013721:	lea    rax,[rip+0xe100]        # 0x140021828
   140013728:	mov    QWORD PTR [r11],rax
   14001372b:	mov    QWORD PTR [r11+0x10],rdx
   14001372f:	mov    DWORD PTR [r11+0x18],0x5
   140013737:	mov    QWORD PTR [r11+0x20],rdi
   14001373b:	mov    DWORD PTR [r11+0x28],r12d
   14001373f:	mov    DWORD PTR [r11+0x2c],r12d
   140013743:	mov    DWORD PTR [r11+0x30],r12d
   140013747:	mov    DWORD PTR [r11+0x34],r12d
   14001374b:	mov    DWORD PTR [r11+0x8],0x4
   140013753:	jmp    0x1400102ca
   140013758:	mov    rdx,QWORD PTR [rbp+0x8]
   14001375c:	mov    ecx,0x38
   140013761:	call   0x14000e810
   140013766:	mov    r11,rax
   140013769:	test   rax,rax
   14001376c:	je     0x1400102c7
   140013772:	mov    rax,QWORD PTR [rbp+0x18]
   140013776:	movsxd rcx,DWORD PTR [rbp+0x10]
   14001377a:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   14001377f:	mov    rdx,QWORD PTR [rax+rcx*8]
   140013783:	lea    rax,[rip+0xe09e]        # 0x140021828
   14001378a:	mov    QWORD PTR [r11],rax
   14001378d:	mov    QWORD PTR [r11+0x10],rdx
   140013791:	mov    DWORD PTR [r11+0x18],0x1
   140013799:	mov    QWORD PTR [r11+0x20],rdi
   14001379d:	mov    DWORD PTR [r11+0x28],r12d
   1400137a1:	mov    DWORD PTR [r11+0x2c],r12d
   1400137a5:	mov    DWORD PTR [r11+0x30],r12d
   1400137a9:	mov    DWORD PTR [r11+0x34],r12d
   1400137ad:	mov    DWORD PTR [r11+0x8],0x4
   1400137b5:	jmp    0x1400102ca
   1400137ba:	mov    rdx,QWORD PTR [rbp+0x8]
   1400137be:	mov    ecx,0x38
   1400137c3:	call   0x14000e810
   1400137c8:	mov    r11,rax
   1400137cb:	test   rax,rax
   1400137ce:	je     0x1400102c7
   1400137d4:	mov    rax,QWORD PTR [rbp+0x18]
   1400137d8:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400137dc:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   1400137e1:	mov    rdx,QWORD PTR [rax+rcx*8]
   1400137e5:	lea    rax,[rip+0xe03c]        # 0x140021828
   1400137ec:	mov    QWORD PTR [r11],rax
   1400137ef:	mov    QWORD PTR [r11+0x10],rdx
   1400137f3:	mov    DWORD PTR [r11+0x18],0x19
   1400137fb:	mov    QWORD PTR [r11+0x20],rdi
   1400137ff:	mov    DWORD PTR [r11+0x28],r12d
   140013803:	mov    DWORD PTR [r11+0x2c],r12d
   140013807:	mov    DWORD PTR [r11+0x30],r12d
   14001380b:	mov    DWORD PTR [r11+0x34],r12d
   14001380f:	mov    DWORD PTR [r11+0x8],0x4
   140013817:	jmp    0x1400102ca
   14001381c:	mov    rdx,QWORD PTR [rbp+0x8]
   140013820:	mov    ecx,0x48
   140013825:	call   0x14000e810
   14001382a:	mov    r11,rax
   14001382d:	test   rax,rax
   140013830:	je     0x14001385f
   140013832:	movsxd rcx,DWORD PTR [rbp+0x10]
   140013836:	mov    rdi,QWORD PTR [rbp+0x18]
   14001383a:	mov    rdx,QWORD PTR [rdi+rcx*8]
   14001383e:	lea    eax,[rcx+0x4]
   140013841:	movsxd r9,eax
   140013844:	lea    eax,[rcx+0x2]
   140013847:	mov    rcx,r11
   14001384a:	mov    r9,QWORD PTR [rdi+r9*8]
   14001384e:	movsxd r8,eax
   140013851:	mov    r8,QWORD PTR [rdi+r8*8]
   140013855:	call   0x14000d350
   14001385a:	mov    rdi,rax
   14001385d:	jmp    0x140013862
   14001385f:	mov    rdi,r12
   140013862:	mov    rcx,QWORD PTR [rbp+0x28]
   140013866:	movsxd rdx,DWORD PTR [rbp+0x10]
   14001386a:	inc    rdx
   14001386d:	add    rdx,rdx
   140013870:	mov    eax,DWORD PTR [rcx+rdx*8]
   140013873:	mov    DWORD PTR [rdi+0x28],eax
   140013876:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14001387a:	mov    DWORD PTR [rdi+0x2c],eax
   14001387d:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140013881:	mov    DWORD PTR [rdi+0x30],eax
   140013884:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140013888:	mov    DWORD PTR [rdi+0x34],eax
   14001388b:	mov    rcx,QWORD PTR [rbp+0x28]
   14001388f:	movsxd rdx,DWORD PTR [rbp+0x10]
   140013893:	add    rdx,0x3
   140013897:	add    rdx,rdx
   14001389a:	mov    eax,DWORD PTR [rcx+rdx*8]
   14001389d:	mov    DWORD PTR [rdi+0x38],eax
   1400138a0:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400138a4:	mov    DWORD PTR [rdi+0x3c],eax
   1400138a7:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400138ab:	mov    DWORD PTR [rdi+0x40],eax
   1400138ae:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400138b2:	mov    DWORD PTR [rdi+0x44],eax
   1400138b5:	jmp    0x14000f9a9
   1400138ba:	mov    rdx,QWORD PTR [rbp+0x8]
   1400138be:	mov    ecx,0x38
   1400138c3:	call   0x14000e810
   1400138c8:	mov    r11,rax
   1400138cb:	test   rax,rax
   1400138ce:	je     0x1400102c7
   1400138d4:	mov    rax,QWORD PTR [rbp+0x18]
   1400138d8:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400138dc:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   1400138e1:	mov    edx,DWORD PTR [rax+rcx*8+0x8]
   1400138e5:	mov    rcx,QWORD PTR [rax+rcx*8]
   1400138e9:	lea    rax,[rip+0xdf38]        # 0x140021828
   1400138f0:	mov    QWORD PTR [r11],rax
   1400138f3:	mov    QWORD PTR [r11+0x10],rcx
   1400138f7:	mov    DWORD PTR [r11+0x18],edx
   1400138fb:	mov    QWORD PTR [r11+0x20],rdi
   1400138ff:	mov    DWORD PTR [r11+0x28],r12d
   140013903:	mov    DWORD PTR [r11+0x2c],r12d
   140013907:	mov    DWORD PTR [r11+0x30],r12d
   14001390b:	mov    DWORD PTR [r11+0x34],r12d
   14001390f:	mov    DWORD PTR [r11+0x8],0x4
   140013917:	jmp    0x1400102ca
   14001391c:	mov    rax,QWORD PTR [rbp+0x18]
   140013920:	mov    DWORD PTR [rax+rdx*8],0x3
   140013927:	jmp    0x140015510
   14001392c:	mov    rax,QWORD PTR [rbp+0x18]
   140013930:	mov    DWORD PTR [rax+rdx*8],0x17
   140013937:	jmp    0x140015510
   14001393c:	mov    rax,QWORD PTR [rbp+0x18]
   140013940:	mov    DWORD PTR [rax+rdx*8],0x9
   140013947:	jmp    0x140015510
   14001394c:	mov    rax,QWORD PTR [rbp+0x18]
   140013950:	mov    DWORD PTR [rax+rdx*8],0x15
   140013957:	jmp    0x140015510
   14001395c:	mov    rax,QWORD PTR [rbp+0x18]
   140013960:	mov    DWORD PTR [rax+rdx*8],0xe
   140013967:	jmp    0x140015510
   14001396c:	mov    rax,QWORD PTR [rbp+0x18]
   140013970:	mov    DWORD PTR [rax+rdx*8],0x7
   140013977:	jmp    0x140015510
   14001397c:	mov    rax,QWORD PTR [rbp+0x18]
   140013980:	mov    DWORD PTR [rax+rdx*8],0x12
   140013987:	jmp    0x140015510
   14001398c:	mov    rax,QWORD PTR [rbp+0x18]
   140013990:	mov    DWORD PTR [rax+rdx*8],0x1c
   140013997:	jmp    0x140015510
   14001399c:	mov    rax,QWORD PTR [rbp+0x18]
   1400139a0:	mov    DWORD PTR [rax+rdx*8],0x21
   1400139a7:	jmp    0x140015510
   1400139ac:	mov    rax,QWORD PTR [rbp+0x18]
   1400139b0:	mov    DWORD PTR [rax+rdx*8],0x2
   1400139b7:	jmp    0x140015510
   1400139bc:	mov    rax,QWORD PTR [rbp+0x18]
   1400139c0:	mov    DWORD PTR [rax+rdx*8],0x22
   1400139c7:	jmp    0x140015510
   1400139cc:	mov    rax,QWORD PTR [rbp+0x18]
   1400139d0:	mov    DWORD PTR [rax+rdx*8],0x1a
   1400139d7:	jmp    0x140015510
   1400139dc:	mov    rdx,QWORD PTR [rbp+0x8]
   1400139e0:	mov    ecx,0x30
   1400139e5:	call   0x14000e810
   1400139ea:	mov    r11,rax
   1400139ed:	test   rax,rax
   1400139f0:	je     0x14001040f
   1400139f6:	mov    rax,QWORD PTR [rbp+0x18]
   1400139fa:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400139fe:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140013a03:	mov    rdx,QWORD PTR [rax+rcx*8]
   140013a07:	lea    rax,[rip+0xdeba]        # 0x1400218c8
   140013a0e:	mov    QWORD PTR [r11],rax
   140013a11:	mov    QWORD PTR [r11+0x10],rdx
   140013a15:	mov    QWORD PTR [r11+0x18],rdi
   140013a19:	mov    DWORD PTR [r11+0x20],r12d
   140013a1d:	mov    DWORD PTR [r11+0x24],r12d
   140013a21:	mov    DWORD PTR [r11+0x28],r12d
   140013a25:	mov    DWORD PTR [r11+0x2c],r12d
   140013a29:	mov    DWORD PTR [r11+0x8],0x15
   140013a31:	jmp    0x140010412
   140013a36:	mov    rdx,QWORD PTR [rbp+0x8]
   140013a3a:	mov    ecx,0x38
   140013a3f:	call   0x14000e810
   140013a44:	mov    rdi,rax
   140013a47:	test   rax,rax
   140013a4a:	je     0x140011fa2
   140013a50:	mov    rax,QWORD PTR [rbp+0x18]
   140013a54:	movsxd rcx,DWORD PTR [rbp+0x10]
   140013a58:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140013a5d:	lea    rax,[rip+0xdeb4]        # 0x140021918
   140013a64:	mov    QWORD PTR [rdi],rax
   140013a67:	mov    QWORD PTR [rdi+0x10],rdx
   140013a6b:	mov    DWORD PTR [rdi+0x18],r12d
   140013a6f:	mov    DWORD PTR [rdi+0x1c],r12d
   140013a73:	mov    DWORD PTR [rdi+0x20],r12d
   140013a77:	mov    DWORD PTR [rdi+0x24],r12d
   140013a7b:	mov    DWORD PTR [rdi+0x28],r12d
   140013a7f:	mov    DWORD PTR [rdi+0x2c],r12d
   140013a83:	mov    DWORD PTR [rdi+0x30],r12d
   140013a87:	mov    DWORD PTR [rdi+0x34],r12d
   140013a8b:	mov    DWORD PTR [rdi+0x8],0x5
   140013a92:	jmp    0x140011fa5
   140013a97:	mov    rdx,QWORD PTR [rbp+0x8]
   140013a9b:	mov    ecx,0x20
   140013aa0:	call   0x14000e810
   140013aa5:	mov    rdi,rax
   140013aa8:	test   rax,rax
   140013aab:	je     0x14000f9a6
   140013ab1:	mov    rax,QWORD PTR [rbp+0x18]
   140013ab5:	movsxd rcx,DWORD PTR [rbp+0x10]
   140013ab9:	mov    rdx,QWORD PTR [rax+rcx*8]
   140013abd:	lea    rax,[rip+0xdea4]        # 0x140021968
   140013ac4:	mov    QWORD PTR [rdi],rax
   140013ac7:	mov    QWORD PTR [rdi+0x10],rdx
   140013acb:	mov    QWORD PTR [rdi+0x18],rdi
   140013acf:	mov    DWORD PTR [rdi+0x8],0x3b
   140013ad6:	jmp    0x14000f9a9
   140013adb:	mov    rdx,QWORD PTR [rbp+0x8]
   140013adf:	mov    ecx,0x20
   140013ae4:	call   0x14000e810
   140013ae9:	mov    rdi,rax
   140013aec:	test   rax,rax
   140013aef:	je     0x14000f9a6
   140013af5:	mov    rax,QWORD PTR [rbp+0x18]
   140013af9:	movsxd rcx,DWORD PTR [rbp+0x10]
   140013afd:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140013b02:	mov    rcx,QWORD PTR [rax+rcx*8]
   140013b06:	lea    rax,[rip+0xde5b]        # 0x140021968
   140013b0d:	mov    QWORD PTR [rdi],rax
   140013b10:	mov    QWORD PTR [rdi+0x10],rdx
   140013b14:	mov    DWORD PTR [rdi+0x8],0x3b
   140013b1b:	mov    rax,QWORD PTR [rcx+0x18]
   140013b1f:	mov    QWORD PTR [rdi+0x18],rax
   140013b23:	mov    QWORD PTR [rcx+0x18],rdi
   140013b27:	jmp    0x14000f9a9
   140013b2c:	mov    rdx,QWORD PTR [rbp+0x8]
   140013b30:	mov    ecx,0x38
   140013b35:	call   0x14000e810
   140013b3a:	mov    rbx,rax
   140013b3d:	test   rax,rax
   140013b40:	je     0x140013b99
   140013b42:	movsxd rax,DWORD PTR [rbp+0x10]
   140013b46:	mov    rdi,QWORD PTR [rbp+0x18]
   140013b4a:	mov    rdx,rax
   140013b4d:	inc    eax
   140013b4f:	cmp    DWORD PTR [rdi+rdx*8],0x54
   140013b53:	movsxd rcx,eax
   140013b56:	mov    rcx,QWORD PTR [rdi+rcx*8]
   140013b5a:	sete   dl
   140013b5d:	call   0x14000d470
   140013b62:	lea    rcx,[rip+0xde4f]        # 0x1400219b8
   140013b69:	mov    QWORD PTR [rbx],rcx
   140013b6c:	mov    QWORD PTR [rbx+0x10],rax
   140013b70:	mov    DWORD PTR [rbx+0x18],r12d
   140013b74:	mov    DWORD PTR [rbx+0x1c],r12d
   140013b78:	mov    DWORD PTR [rbx+0x20],r12d
   140013b7c:	mov    DWORD PTR [rbx+0x24],r12d
   140013b80:	mov    DWORD PTR [rbx+0x28],r12d
   140013b84:	mov    DWORD PTR [rbx+0x2c],r12d
   140013b88:	mov    DWORD PTR [rbx+0x30],r12d
   140013b8c:	mov    DWORD PTR [rbx+0x34],r12d
   140013b90:	mov    DWORD PTR [rbx+0x8],0x4a
   140013b97:	jmp    0x140013b9c
   140013b99:	mov    rbx,r12
   140013b9c:	mov    rcx,QWORD PTR [rbp+0x28]
   140013ba0:	movsxd rdx,DWORD PTR [rbp+0x10]
   140013ba4:	lea    r9,[rip+0xfffffffffffec455]        # 0x140000000
   140013bab:	add    rdx,rdx
   140013bae:	mov    eax,DWORD PTR [rcx+rdx*8]
   140013bb1:	mov    DWORD PTR [rbx+0x18],eax
   140013bb4:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140013bb8:	mov    DWORD PTR [rbx+0x1c],eax
   140013bbb:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140013bbf:	mov    DWORD PTR [rbx+0x20],eax
   140013bc2:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140013bc6:	mov    DWORD PTR [rbx+0x24],eax
   140013bc9:	mov    rcx,QWORD PTR [rbp+0x28]
   140013bcd:	movsxd rdx,DWORD PTR [rbp+0x10]
   140013bd1:	add    rdx,0x2
   140013bd5:	add    rdx,rdx
   140013bd8:	mov    eax,DWORD PTR [rcx+rdx*8]
   140013bdb:	mov    DWORD PTR [rbx+0x28],eax
   140013bde:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140013be2:	mov    DWORD PTR [rbx+0x2c],eax
   140013be5:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140013be9:	mov    DWORD PTR [rbx+0x30],eax
   140013bec:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140013bf0:	mov    DWORD PTR [rbx+0x34],eax
   140013bf3:	movsxd rcx,DWORD PTR [rbp+0x10]
   140013bf7:	mov    rax,QWORD PTR [rbp+0x18]
   140013bfb:	mov    QWORD PTR [rax+rcx*8],rbx
   140013bff:	jmp    0x140015510
   140013c04:	mov    rax,QWORD PTR [rbp+0x18]
   140013c08:	mov    DWORD PTR [rax+rdx*8],0x54
   140013c0f:	jmp    0x140015510
   140013c14:	mov    rax,QWORD PTR [rbp+0x18]
   140013c18:	mov    DWORD PTR [rax+rdx*8],0x4b
   140013c1f:	jmp    0x140015510
   140013c24:	mov    rdx,QWORD PTR [rbp+0x8]
   140013c28:	mov    ecx,0x30
   140013c2d:	call   0x14000e810
   140013c32:	mov    rdi,rax
   140013c35:	test   rax,rax
   140013c38:	je     0x14000f9a6
   140013c3e:	mov    rax,QWORD PTR [rbp+0x18]
   140013c42:	movsxd rcx,DWORD PTR [rbp+0x10]
   140013c46:	mov    rdx,QWORD PTR [rax+rcx*8]
   140013c4a:	lea    rax,[rip+0xde07]        # 0x140021a58
   140013c51:	mov    QWORD PTR [rdi],rax
   140013c54:	mov    QWORD PTR [rdi+0x10],rdx
   140013c58:	mov    QWORD PTR [rdi+0x18],rdi
   140013c5c:	mov    DWORD PTR [rdi+0x20],r12d
   140013c60:	mov    DWORD PTR [rdi+0x24],r12d
   140013c64:	mov    DWORD PTR [rdi+0x28],r12d
   140013c68:	mov    DWORD PTR [rdi+0x2c],r12d
   140013c6c:	mov    DWORD PTR [rdi+0x8],0x49
   140013c73:	jmp    0x14000f9a9
   140013c78:	mov    rdx,QWORD PTR [rbp+0x8]
   140013c7c:	mov    ecx,0x30
   140013c81:	call   0x14000e810
   140013c86:	mov    rdi,rax
   140013c89:	test   rax,rax
   140013c8c:	je     0x14000ff3d
   140013c92:	mov    rax,QWORD PTR [rbp+0x18]
   140013c96:	movsxd rcx,DWORD PTR [rbp+0x10]
   140013c9a:	mov    rdx,QWORD PTR [rax+rcx*8+0x10]
   140013c9f:	mov    rcx,QWORD PTR [rax+rcx*8]
   140013ca3:	lea    rax,[rip+0xddae]        # 0x140021a58
   140013caa:	mov    QWORD PTR [rdi],rax
   140013cad:	mov    QWORD PTR [rdi+0x10],rdx
   140013cb1:	mov    DWORD PTR [rdi+0x20],r12d
   140013cb5:	mov    DWORD PTR [rdi+0x24],r12d
   140013cb9:	mov    DWORD PTR [rdi+0x28],r12d
   140013cbd:	mov    DWORD PTR [rdi+0x2c],r12d
   140013cc1:	mov    DWORD PTR [rdi+0x8],0x49
   140013cc8:	mov    rax,QWORD PTR [rcx+0x18]
   140013ccc:	mov    QWORD PTR [rdi+0x18],rax
   140013cd0:	mov    QWORD PTR [rcx+0x18],rdi
   140013cd4:	jmp    0x14000ff40
   140013cd9:	mov    rdx,QWORD PTR [rbp+0x8]
   140013cdd:	mov    ecx,0x30
   140013ce2:	call   0x14000e810
   140013ce7:	mov    rdi,rax
   140013cea:	test   rax,rax
   140013ced:	je     0x14000f9a6
   140013cf3:	mov    rax,QWORD PTR [rbp+0x18]
   140013cf7:	movsxd rcx,DWORD PTR [rbp+0x10]
   140013cfb:	mov    rdx,QWORD PTR [rax+rcx*8+0x10]
   140013d00:	mov    rcx,QWORD PTR [rax+rcx*8]
   140013d04:	lea    rax,[rip+0xdd4d]        # 0x140021a58
   140013d0b:	mov    QWORD PTR [rdi],rax
   140013d0e:	mov    QWORD PTR [rdi+0x10],rdx
   140013d12:	mov    DWORD PTR [rdi+0x20],r12d
   140013d16:	mov    DWORD PTR [rdi+0x24],r12d
   140013d1a:	mov    DWORD PTR [rdi+0x28],r12d
   140013d1e:	mov    DWORD PTR [rdi+0x2c],r12d
   140013d22:	mov    DWORD PTR [rdi+0x8],0x49
   140013d29:	mov    rax,QWORD PTR [rcx+0x18]
   140013d2d:	mov    QWORD PTR [rdi+0x18],rax
   140013d31:	mov    QWORD PTR [rcx+0x18],rdi
   140013d35:	jmp    0x14000f9a9
   140013d3a:	mov    rdx,QWORD PTR [rbp+0x8]
   140013d3e:	mov    ecx,0x40
   140013d43:	call   0x14000e810
   140013d48:	mov    rdi,rax
   140013d4b:	test   rax,rax
   140013d4e:	je     0x140013d79
   140013d50:	movsxd rcx,DWORD PTR [rbp+0x10]
   140013d54:	mov    r8,QWORD PTR [rbp+0x18]
   140013d58:	lea    eax,[rcx+0x1]
   140013d5b:	mov    rdx,rcx
   140013d5e:	mov    rcx,rdi
   140013d61:	cdqe   
   140013d63:	shl    rdx,0x4
   140013d67:	mov    r8,QWORD PTR [r8+rax*8]
   140013d6b:	add    rdx,QWORD PTR [rbp+0x30]
   140013d6f:	call   0x14000d3b0
   140013d74:	mov    rdi,rax
   140013d77:	jmp    0x140013d7c
   140013d79:	mov    rdi,r12
   140013d7c:	mov    rcx,QWORD PTR [rbp+0x28]
   140013d80:	movsxd rdx,DWORD PTR [rbp+0x10]
   140013d84:	add    rdx,rdx
   140013d87:	mov    eax,DWORD PTR [rcx+rdx*8]
   140013d8a:	mov    DWORD PTR [rdi+0x2c],eax
   140013d8d:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140013d91:	mov    DWORD PTR [rdi+0x30],eax
   140013d94:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140013d98:	mov    DWORD PTR [rdi+0x34],eax
   140013d9b:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140013d9f:	mov    DWORD PTR [rdi+0x38],eax
   140013da2:	jmp    0x14000f9a9
   140013da7:	mov    rcx,QWORD PTR [rbp+0x18]
   140013dab:	mov    rax,QWORD PTR [rcx+rdx*8+0x8]
   140013db0:	mov    QWORD PTR [rcx+rdx*8],rax
   140013db4:	jmp    0x140015510
   140013db9:	mov    rdx,QWORD PTR [rbp+0x8]
   140013dbd:	mov    ecx,0x20
   140013dc2:	call   0x14000e810
   140013dc7:	mov    rdi,rax
   140013dca:	test   rax,rax
   140013dcd:	je     0x140011761
   140013dd3:	lea    rax,[rip+0xdcce]        # 0x140021aa8
   140013dda:	mov    QWORD PTR [rdi],rax
   140013ddd:	mov    DWORD PTR [rdi+0x10],r12d
   140013de1:	mov    DWORD PTR [rdi+0x14],r12d
   140013de5:	mov    DWORD PTR [rdi+0x18],r12d
   140013de9:	mov    DWORD PTR [rdi+0x1c],r12d
   140013ded:	mov    DWORD PTR [rdi+0x8],0x14
   140013df4:	jmp    0x140011764
   140013df9:	mov    rdx,QWORD PTR [rbp+0x8]
   140013dfd:	mov    ecx,0x28
   140013e02:	call   0x14000e810
   140013e07:	mov    rdi,rax
   140013e0a:	test   rax,rax
   140013e0d:	je     0x14001242a
   140013e13:	mov    rax,QWORD PTR [rbp+0x18]
   140013e17:	movsxd rcx,DWORD PTR [rbp+0x10]
   140013e1b:	mov    rdx,QWORD PTR [rax+rcx*8]
   140013e1f:	lea    rax,[rip+0xdcd2]        # 0x140021af8
   140013e26:	mov    QWORD PTR [rdi],rax
   140013e29:	mov    QWORD PTR [rdi+0x10],rdx
   140013e2d:	mov    DWORD PTR [rdi+0x18],r12d
   140013e31:	mov    DWORD PTR [rdi+0x1c],r12d
   140013e35:	mov    DWORD PTR [rdi+0x20],r12d
   140013e39:	mov    DWORD PTR [rdi+0x24],r12d
   140013e3d:	mov    DWORD PTR [rdi+0x8],0x16
   140013e44:	jmp    0x14001242d
   140013e49:	mov    rdx,QWORD PTR [rbp+0x8]
   140013e4d:	mov    ecx,0x68
   140013e52:	call   0x14000e810
   140013e57:	mov    r11,rax
   140013e5a:	test   rax,rax
   140013e5d:	je     0x140013e91
   140013e5f:	mov    ecx,DWORD PTR [rbp+0x10]
   140013e62:	mov    rdi,QWORD PTR [rbp+0x18]
   140013e66:	lea    eax,[rcx+0x6]
   140013e69:	movsxd r9,eax
   140013e6c:	lea    eax,[rcx+0x4]
   140013e6f:	mov    r9,QWORD PTR [rdi+r9*8]
   140013e73:	movsxd r8,eax
   140013e76:	lea    eax,[rcx+0x2]
   140013e79:	mov    r8,QWORD PTR [rdi+r8*8]
   140013e7d:	movsxd rdx,eax
   140013e80:	mov    rcx,r11
   140013e83:	mov    rdx,QWORD PTR [rdi+rdx*8]
   140013e87:	call   0x14000d4b0
   140013e8c:	mov    rdi,rax
   140013e8f:	jmp    0x140013e94
   140013e91:	mov    rdi,r12
   140013e94:	mov    rcx,QWORD PTR [rbp+0x28]
   140013e98:	movsxd rdx,DWORD PTR [rbp+0x10]
   140013e9c:	add    rdx,rdx
   140013e9f:	mov    eax,DWORD PTR [rcx+rdx*8]
   140013ea2:	mov    DWORD PTR [rdi+0x28],eax
   140013ea5:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140013ea9:	mov    DWORD PTR [rdi+0x2c],eax
   140013eac:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140013eb0:	mov    DWORD PTR [rdi+0x30],eax
   140013eb3:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140013eb7:	mov    DWORD PTR [rdi+0x34],eax
   140013eba:	mov    rcx,QWORD PTR [rbp+0x28]
   140013ebe:	movsxd rdx,DWORD PTR [rbp+0x10]
   140013ec2:	inc    rdx
   140013ec5:	add    rdx,rdx
   140013ec8:	mov    eax,DWORD PTR [rcx+rdx*8]
   140013ecb:	mov    DWORD PTR [rdi+0x38],eax
   140013ece:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140013ed2:	mov    DWORD PTR [rdi+0x3c],eax
   140013ed5:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140013ed9:	mov    DWORD PTR [rdi+0x40],eax
   140013edc:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140013ee0:	mov    DWORD PTR [rdi+0x44],eax
   140013ee3:	mov    rcx,QWORD PTR [rbp+0x28]
   140013ee7:	movsxd rdx,DWORD PTR [rbp+0x10]
   140013eeb:	add    rdx,0x3
   140013eef:	add    rdx,rdx
   140013ef2:	mov    eax,DWORD PTR [rcx+rdx*8]
   140013ef5:	mov    DWORD PTR [rdi+0x48],eax
   140013ef8:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140013efc:	mov    DWORD PTR [rdi+0x4c],eax
   140013eff:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140013f03:	mov    DWORD PTR [rdi+0x50],eax
   140013f06:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140013f0a:	mov    DWORD PTR [rdi+0x54],eax
   140013f0d:	mov    rcx,QWORD PTR [rbp+0x28]
   140013f11:	movsxd rdx,DWORD PTR [rbp+0x10]
   140013f15:	add    rdx,0x5
   140013f19:	add    rdx,rdx
   140013f1c:	mov    eax,DWORD PTR [rcx+rdx*8]
   140013f1f:	mov    DWORD PTR [rdi+0x58],eax
   140013f22:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140013f26:	mov    DWORD PTR [rdi+0x5c],eax
   140013f29:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140013f2d:	mov    DWORD PTR [rdi+0x60],eax
   140013f30:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140013f34:	mov    DWORD PTR [rdi+0x64],eax
   140013f37:	jmp    0x14000f9a9
   140013f3c:	mov    rdx,QWORD PTR [rbp+0x8]
   140013f40:	mov    ecx,0x68
   140013f45:	call   0x14000e810
   140013f4a:	mov    r11,rax
   140013f4d:	test   rax,rax
   140013f50:	je     0x140013f7d
   140013f52:	mov    ecx,DWORD PTR [rbp+0x10]
   140013f55:	mov    rdi,QWORD PTR [rbp+0x18]
   140013f59:	xor    r9d,r9d
   140013f5c:	lea    eax,[rcx+0x4]
   140013f5f:	movsxd r8,eax
   140013f62:	lea    eax,[rcx+0x2]
   140013f65:	mov    rcx,r11
   140013f68:	mov    r8,QWORD PTR [rdi+r8*8]
   140013f6c:	movsxd rdx,eax
   140013f6f:	mov    rdx,QWORD PTR [rdi+rdx*8]
   140013f73:	call   0x14000d4b0
   140013f78:	mov    rdi,rax
   140013f7b:	jmp    0x140013f80
   140013f7d:	mov    rdi,r12
   140013f80:	mov    rcx,QWORD PTR [rbp+0x28]
   140013f84:	movsxd rdx,DWORD PTR [rbp+0x10]
   140013f88:	add    rdx,rdx
   140013f8b:	mov    eax,DWORD PTR [rcx+rdx*8]
   140013f8e:	mov    DWORD PTR [rdi+0x28],eax
   140013f91:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140013f95:	mov    DWORD PTR [rdi+0x2c],eax
   140013f98:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140013f9c:	mov    DWORD PTR [rdi+0x30],eax
   140013f9f:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140013fa3:	mov    DWORD PTR [rdi+0x34],eax
   140013fa6:	mov    rcx,QWORD PTR [rbp+0x28]
   140013faa:	movsxd rdx,DWORD PTR [rbp+0x10]
   140013fae:	inc    rdx
   140013fb1:	add    rdx,rdx
   140013fb4:	mov    eax,DWORD PTR [rcx+rdx*8]
   140013fb7:	mov    DWORD PTR [rdi+0x38],eax
   140013fba:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140013fbe:	mov    DWORD PTR [rdi+0x3c],eax
   140013fc1:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140013fc5:	mov    DWORD PTR [rdi+0x40],eax
   140013fc8:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140013fcc:	mov    DWORD PTR [rdi+0x44],eax
   140013fcf:	mov    rcx,QWORD PTR [rbp+0x28]
   140013fd3:	movsxd rdx,DWORD PTR [rbp+0x10]
   140013fd7:	add    rdx,0x3
   140013fdb:	add    rdx,rdx
   140013fde:	mov    eax,DWORD PTR [rcx+rdx*8]
   140013fe1:	mov    DWORD PTR [rdi+0x48],eax
   140013fe4:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140013fe8:	mov    DWORD PTR [rdi+0x4c],eax
   140013feb:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140013fef:	mov    DWORD PTR [rdi+0x50],eax
   140013ff2:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140013ff6:	mov    DWORD PTR [rdi+0x54],eax
   140013ff9:	jmp    0x14000f9a9
   140013ffe:	mov    rdx,QWORD PTR [rbp+0x8]
   140014002:	mov    ecx,0x70
   140014007:	call   0x14000e810
   14001400c:	mov    r11,rax
   14001400f:	test   rax,rax
   140014012:	je     0x14001403c
   140014014:	mov    ecx,DWORD PTR [rbp+0x10]
   140014017:	mov    rdi,QWORD PTR [rbp+0x18]
   14001401b:	lea    eax,[rcx+0x4]
   14001401e:	movsxd r8,eax
   140014021:	lea    eax,[rcx+0x1]
   140014024:	mov    rcx,r11
   140014027:	mov    r8,QWORD PTR [rdi+r8*8]
   14001402b:	movsxd rdx,eax
   14001402e:	mov    rdx,QWORD PTR [rdi+rdx*8]
   140014032:	call   0x14000d510
   140014037:	mov    rdi,rax
   14001403a:	jmp    0x14001403f
   14001403c:	mov    rdi,r12
   14001403f:	mov    rcx,QWORD PTR [rbp+0x28]
   140014043:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014047:	add    rdx,rdx
   14001404a:	mov    eax,DWORD PTR [rcx+rdx*8]
   14001404d:	mov    DWORD PTR [rdi+0x20],eax
   140014050:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140014054:	mov    DWORD PTR [rdi+0x24],eax
   140014057:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14001405b:	mov    DWORD PTR [rdi+0x28],eax
   14001405e:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140014062:	mov    DWORD PTR [rdi+0x2c],eax
   140014065:	mov    rcx,QWORD PTR [rbp+0x28]
   140014069:	movsxd rdx,DWORD PTR [rbp+0x10]
   14001406d:	add    rdx,0x2
   140014071:	add    rdx,rdx
   140014074:	mov    eax,DWORD PTR [rcx+rdx*8]
   140014077:	mov    DWORD PTR [rdi+0x30],eax
   14001407a:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14001407e:	mov    DWORD PTR [rdi+0x34],eax
   140014081:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140014085:	mov    DWORD PTR [rdi+0x38],eax
   140014088:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14001408c:	mov    DWORD PTR [rdi+0x3c],eax
   14001408f:	mov    rcx,QWORD PTR [rbp+0x28]
   140014093:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014097:	add    rdx,0x3
   14001409b:	add    rdx,rdx
   14001409e:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400140a1:	mov    DWORD PTR [rdi+0x40],eax
   1400140a4:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400140a8:	mov    DWORD PTR [rdi+0x44],eax
   1400140ab:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400140af:	mov    DWORD PTR [rdi+0x48],eax
   1400140b2:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400140b6:	mov    DWORD PTR [rdi+0x4c],eax
   1400140b9:	mov    rcx,QWORD PTR [rbp+0x28]
   1400140bd:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400140c1:	add    rdx,0x5
   1400140c5:	add    rdx,rdx
   1400140c8:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400140cb:	mov    DWORD PTR [rdi+0x50],eax
   1400140ce:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400140d2:	mov    DWORD PTR [rdi+0x54],eax
   1400140d5:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400140d9:	mov    DWORD PTR [rdi+0x58],eax
   1400140dc:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400140e0:	mov    DWORD PTR [rdi+0x5c],eax
   1400140e3:	mov    rcx,QWORD PTR [rbp+0x28]
   1400140e7:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400140eb:	add    rdx,0x6
   1400140ef:	add    rdx,rdx
   1400140f2:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400140f5:	mov    DWORD PTR [rdi+0x60],eax
   1400140f8:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400140fc:	mov    DWORD PTR [rdi+0x64],eax
   1400140ff:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140014103:	mov    DWORD PTR [rdi+0x68],eax
   140014106:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14001410a:	mov    DWORD PTR [rdi+0x6c],eax
   14001410d:	jmp    0x14000f9a9
   140014112:	mov    rdx,QWORD PTR [rbp+0x8]
   140014116:	mov    ecx,0x50
   14001411b:	call   0x14000e810
   140014120:	mov    r11,rax
   140014123:	test   rax,rax
   140014126:	je     0x140014150
   140014128:	mov    ecx,DWORD PTR [rbp+0x10]
   14001412b:	mov    rdi,QWORD PTR [rbp+0x18]
   14001412f:	lea    eax,[rcx+0x4]
   140014132:	movsxd r8,eax
   140014135:	lea    eax,[rcx+0x2]
   140014138:	mov    rcx,r11
   14001413b:	mov    r8,QWORD PTR [rdi+r8*8]
   14001413f:	movsxd rdx,eax
   140014142:	mov    rdx,QWORD PTR [rdi+rdx*8]
   140014146:	call   0x14000d590
   14001414b:	mov    rdi,rax
   14001414e:	jmp    0x140014153
   140014150:	mov    rdi,r12
   140014153:	mov    rcx,QWORD PTR [rbp+0x28]
   140014157:	movsxd rdx,DWORD PTR [rbp+0x10]
   14001415b:	add    rdx,rdx
   14001415e:	mov    eax,DWORD PTR [rcx+rdx*8]
   140014161:	mov    DWORD PTR [rdi+0x20],eax
   140014164:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140014168:	mov    DWORD PTR [rdi+0x24],eax
   14001416b:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14001416f:	mov    DWORD PTR [rdi+0x28],eax
   140014172:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140014176:	mov    DWORD PTR [rdi+0x2c],eax
   140014179:	mov    rcx,QWORD PTR [rbp+0x28]
   14001417d:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014181:	inc    rdx
   140014184:	add    rdx,rdx
   140014187:	mov    eax,DWORD PTR [rcx+rdx*8]
   14001418a:	mov    DWORD PTR [rdi+0x30],eax
   14001418d:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140014191:	mov    DWORD PTR [rdi+0x34],eax
   140014194:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140014198:	mov    DWORD PTR [rdi+0x38],eax
   14001419b:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14001419f:	mov    DWORD PTR [rdi+0x3c],eax
   1400141a2:	mov    rcx,QWORD PTR [rbp+0x28]
   1400141a6:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400141aa:	add    rdx,0x3
   1400141ae:	add    rdx,rdx
   1400141b1:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400141b4:	mov    DWORD PTR [rdi+0x40],eax
   1400141b7:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400141bb:	mov    DWORD PTR [rdi+0x44],eax
   1400141be:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400141c2:	mov    DWORD PTR [rdi+0x48],eax
   1400141c5:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400141c9:	mov    DWORD PTR [rdi+0x4c],eax
   1400141cc:	jmp    0x14000f9a9
   1400141d1:	mov    rdx,QWORD PTR [rbp+0x8]
   1400141d5:	mov    ecx,0x80
   1400141da:	call   0x14000e810
   1400141df:	mov    r11,rax
   1400141e2:	test   rax,rax
   1400141e5:	je     0x140014228
   1400141e7:	mov    ecx,DWORD PTR [rbp+0x10]
   1400141ea:	mov    r10,QWORD PTR [rbp+0x18]
   1400141ee:	lea    eax,[rcx+0x8]
   1400141f1:	movsxd rdi,eax
   1400141f4:	lea    eax,[rcx+0x6]
   1400141f7:	movsxd r9,eax
   1400141fa:	lea    eax,[rcx+0x4]
   1400141fd:	mov    r9,QWORD PTR [r10+r9*8]
   140014201:	movsxd r8,eax
   140014204:	lea    eax,[rcx+0x2]
   140014207:	mov    r8,QWORD PTR [r10+r8*8]
   14001420b:	movsxd rdx,eax
   14001420e:	mov    rax,QWORD PTR [r10+rdi*8]
   140014212:	mov    rdx,QWORD PTR [r10+rdx*8]
   140014216:	mov    rcx,r11
   140014219:	mov    QWORD PTR [rsp+0x20],rax
   14001421e:	call   0x14000d600
   140014223:	mov    rdi,rax
   140014226:	jmp    0x14001422b
   140014228:	mov    rdi,r12
   14001422b:	mov    rcx,QWORD PTR [rbp+0x28]
   14001422f:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014233:	add    rdx,rdx
   140014236:	mov    eax,DWORD PTR [rcx+rdx*8]
   140014239:	mov    DWORD PTR [rdi+0x30],eax
   14001423c:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140014240:	mov    DWORD PTR [rdi+0x34],eax
   140014243:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140014247:	mov    DWORD PTR [rdi+0x38],eax
   14001424a:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14001424e:	mov    DWORD PTR [rdi+0x3c],eax
   140014251:	mov    rcx,QWORD PTR [rbp+0x28]
   140014255:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014259:	inc    rdx
   14001425c:	add    rdx,rdx
   14001425f:	mov    eax,DWORD PTR [rcx+rdx*8]
   140014262:	mov    DWORD PTR [rdi+0x40],eax
   140014265:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140014269:	mov    DWORD PTR [rdi+0x44],eax
   14001426c:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140014270:	mov    DWORD PTR [rdi+0x48],eax
   140014273:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140014277:	mov    DWORD PTR [rdi+0x4c],eax
   14001427a:	mov    rcx,QWORD PTR [rbp+0x28]
   14001427e:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014282:	add    rdx,0x3
   140014286:	add    rdx,rdx
   140014289:	mov    eax,DWORD PTR [rcx+rdx*8]
   14001428c:	mov    DWORD PTR [rdi+0x50],eax
   14001428f:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140014293:	mov    DWORD PTR [rdi+0x54],eax
   140014296:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14001429a:	mov    DWORD PTR [rdi+0x58],eax
   14001429d:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400142a1:	mov    DWORD PTR [rdi+0x5c],eax
   1400142a4:	mov    rcx,QWORD PTR [rbp+0x28]
   1400142a8:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400142ac:	add    rdx,0x5
   1400142b0:	add    rdx,rdx
   1400142b3:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400142b6:	mov    DWORD PTR [rdi+0x60],eax
   1400142b9:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400142bd:	mov    DWORD PTR [rdi+0x64],eax
   1400142c0:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400142c4:	mov    DWORD PTR [rdi+0x68],eax
   1400142c7:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400142cb:	mov    DWORD PTR [rdi+0x6c],eax
   1400142ce:	jmp    0x1400126c3
   1400142d3:	mov    rdx,QWORD PTR [rbp+0x8]
   1400142d7:	mov    ecx,0x90
   1400142dc:	call   0x14000e810
   1400142e1:	mov    r11,rax
   1400142e4:	test   rax,rax
   1400142e7:	je     0x14001432e
   1400142e9:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400142ed:	mov    r10,QWORD PTR [rbp+0x18]
   1400142f1:	lea    eax,[rcx+0x9]
   1400142f4:	movsxd rdi,eax
   1400142f7:	lea    eax,[rcx+0x7]
   1400142fa:	movsxd r9,eax
   1400142fd:	lea    eax,[rcx+0x5]
   140014300:	mov    rcx,QWORD PTR [r10+rcx*8+0x18]
   140014305:	mov    rdx,QWORD PTR [rcx+0x18]
   140014309:	mov    QWORD PTR [rcx+0x18],r12
   14001430d:	mov    r9,QWORD PTR [r10+r9*8]
   140014311:	movsxd r8,eax
   140014314:	mov    rax,QWORD PTR [r10+rdi*8]
   140014318:	mov    rcx,r11
   14001431b:	mov    r8,QWORD PTR [r10+r8*8]
   14001431f:	mov    QWORD PTR [rsp+0x20],rax
   140014324:	call   0x14000d690
   140014329:	mov    rdi,rax
   14001432c:	jmp    0x140014331
   14001432e:	mov    rdi,r12
   140014331:	mov    rcx,QWORD PTR [rbp+0x28]
   140014335:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014339:	add    rdx,rdx
   14001433c:	mov    eax,DWORD PTR [rcx+rdx*8]
   14001433f:	mov    DWORD PTR [rdi+0x30],eax
   140014342:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140014346:	mov    DWORD PTR [rdi+0x34],eax
   140014349:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14001434d:	mov    DWORD PTR [rdi+0x38],eax
   140014350:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140014354:	mov    DWORD PTR [rdi+0x3c],eax
   140014357:	mov    rcx,QWORD PTR [rbp+0x28]
   14001435b:	movsxd rdx,DWORD PTR [rbp+0x10]
   14001435f:	inc    rdx
   140014362:	add    rdx,rdx
   140014365:	mov    eax,DWORD PTR [rcx+rdx*8]
   140014368:	mov    DWORD PTR [rdi+0x40],eax
   14001436b:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14001436f:	mov    DWORD PTR [rdi+0x44],eax
   140014372:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140014376:	mov    DWORD PTR [rdi+0x48],eax
   140014379:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14001437d:	mov    DWORD PTR [rdi+0x4c],eax
   140014380:	mov    rcx,QWORD PTR [rbp+0x28]
   140014384:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014388:	add    rdx,0x2
   14001438c:	add    rdx,rdx
   14001438f:	mov    eax,DWORD PTR [rcx+rdx*8]
   140014392:	mov    DWORD PTR [rdi+0x50],eax
   140014395:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140014399:	mov    DWORD PTR [rdi+0x54],eax
   14001439c:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400143a0:	mov    DWORD PTR [rdi+0x58],eax
   1400143a3:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400143a7:	mov    DWORD PTR [rdi+0x5c],eax
   1400143aa:	mov    rcx,QWORD PTR [rbp+0x28]
   1400143ae:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400143b2:	add    rdx,0x4
   1400143b6:	add    rdx,rdx
   1400143b9:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400143bc:	mov    DWORD PTR [rdi+0x60],eax
   1400143bf:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400143c3:	mov    DWORD PTR [rdi+0x64],eax
   1400143c6:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400143ca:	mov    DWORD PTR [rdi+0x68],eax
   1400143cd:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400143d1:	mov    DWORD PTR [rdi+0x6c],eax
   1400143d4:	mov    rcx,QWORD PTR [rbp+0x28]
   1400143d8:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400143dc:	add    rdx,0x6
   1400143e0:	add    rdx,rdx
   1400143e3:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400143e6:	mov    DWORD PTR [rdi+0x70],eax
   1400143e9:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400143ed:	mov    DWORD PTR [rdi+0x74],eax
   1400143f0:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400143f4:	mov    DWORD PTR [rdi+0x78],eax
   1400143f7:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400143fb:	mov    DWORD PTR [rdi+0x7c],eax
   1400143fe:	mov    rcx,QWORD PTR [rbp+0x28]
   140014402:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014406:	add    rdx,0x8
   14001440a:	add    rdx,rdx
   14001440d:	mov    eax,DWORD PTR [rcx+rdx*8]
   140014410:	mov    DWORD PTR [rdi+0x80],eax
   140014416:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14001441a:	mov    DWORD PTR [rdi+0x84],eax
   140014420:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140014424:	mov    DWORD PTR [rdi+0x88],eax
   14001442a:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14001442e:	mov    DWORD PTR [rdi+0x8c],eax
   140014434:	jmp    0x14000f9a9
   140014439:	mov    rdx,QWORD PTR [rbp+0x8]
   14001443d:	mov    ecx,0x68
   140014442:	call   0x14000e810
   140014447:	mov    r11,rax
   14001444a:	test   rax,rax
   14001444d:	je     0x140013e91
   140014453:	mov    ecx,DWORD PTR [rbp+0x10]
   140014456:	mov    rdi,QWORD PTR [rbp+0x18]
   14001445a:	lea    eax,[rcx+0x6]
   14001445d:	movsxd r9,eax
   140014460:	lea    eax,[rcx+0x4]
   140014463:	mov    r9,QWORD PTR [rdi+r9*8]
   140014467:	movsxd r8,eax
   14001446a:	lea    eax,[rcx+0x2]
   14001446d:	mov    r8,QWORD PTR [rdi+r8*8]
   140014471:	movsxd rdx,eax
   140014474:	mov    rcx,r11
   140014477:	mov    rdx,QWORD PTR [rdi+rdx*8]
   14001447b:	call   0x14000d710
   140014480:	mov    rdi,rax
   140014483:	jmp    0x140013e94
   140014488:	mov    rdx,QWORD PTR [rbp+0x8]
   14001448c:	mov    ecx,0x78
   140014491:	call   0x14000e810
   140014496:	mov    r11,rax
   140014499:	test   rax,rax
   14001449c:	je     0x1400144d0
   14001449e:	mov    ecx,DWORD PTR [rbp+0x10]
   1400144a1:	mov    rdi,QWORD PTR [rbp+0x18]
   1400144a5:	lea    eax,[rcx+0x7]
   1400144a8:	movsxd r9,eax
   1400144ab:	lea    eax,[rcx+0x5]
   1400144ae:	mov    r9,QWORD PTR [rdi+r9*8]
   1400144b2:	movsxd r8,eax
   1400144b5:	lea    eax,[rcx+0x3]
   1400144b8:	mov    r8,QWORD PTR [rdi+r8*8]
   1400144bc:	movsxd rdx,eax
   1400144bf:	mov    rcx,r11
   1400144c2:	mov    rdx,QWORD PTR [rdi+rdx*8]
   1400144c6:	call   0x14000d770
   1400144cb:	mov    rdi,rax
   1400144ce:	jmp    0x1400144d3
   1400144d0:	mov    rdi,r12
   1400144d3:	mov    rcx,QWORD PTR [rbp+0x28]
   1400144d7:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400144db:	add    rdx,rdx
   1400144de:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400144e1:	mov    DWORD PTR [rdi+0x28],eax
   1400144e4:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400144e8:	mov    DWORD PTR [rdi+0x2c],eax
   1400144eb:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400144ef:	mov    DWORD PTR [rdi+0x30],eax
   1400144f2:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400144f6:	mov    DWORD PTR [rdi+0x34],eax
   1400144f9:	mov    rcx,QWORD PTR [rbp+0x28]
   1400144fd:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014501:	inc    rdx
   140014504:	add    rdx,rdx
   140014507:	mov    eax,DWORD PTR [rcx+rdx*8]
   14001450a:	mov    DWORD PTR [rdi+0x38],eax
   14001450d:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140014511:	mov    DWORD PTR [rdi+0x3c],eax
   140014514:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140014518:	mov    DWORD PTR [rdi+0x40],eax
   14001451b:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14001451f:	mov    DWORD PTR [rdi+0x44],eax
   140014522:	mov    rcx,QWORD PTR [rbp+0x28]
   140014526:	movsxd rdx,DWORD PTR [rbp+0x10]
   14001452a:	add    rdx,0x2
   14001452e:	add    rdx,rdx
   140014531:	mov    eax,DWORD PTR [rcx+rdx*8]
   140014534:	mov    DWORD PTR [rdi+0x48],eax
   140014537:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14001453b:	mov    DWORD PTR [rdi+0x4c],eax
   14001453e:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140014542:	mov    DWORD PTR [rdi+0x50],eax
   140014545:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140014549:	mov    DWORD PTR [rdi+0x54],eax
   14001454c:	mov    rcx,QWORD PTR [rbp+0x28]
   140014550:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014554:	add    rdx,0x4
   140014558:	add    rdx,rdx
   14001455b:	mov    eax,DWORD PTR [rcx+rdx*8]
   14001455e:	mov    DWORD PTR [rdi+0x58],eax
   140014561:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140014565:	mov    DWORD PTR [rdi+0x5c],eax
   140014568:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14001456c:	mov    DWORD PTR [rdi+0x60],eax
   14001456f:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140014573:	mov    DWORD PTR [rdi+0x64],eax
   140014576:	mov    rcx,QWORD PTR [rbp+0x28]
   14001457a:	movsxd rdx,DWORD PTR [rbp+0x10]
   14001457e:	add    rdx,0x6
   140014582:	add    rdx,rdx
   140014585:	mov    eax,DWORD PTR [rcx+rdx*8]
   140014588:	mov    DWORD PTR [rdi+0x68],eax
   14001458b:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14001458f:	mov    DWORD PTR [rdi+0x6c],eax
   140014592:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140014596:	mov    DWORD PTR [rdi+0x70],eax
   140014599:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14001459d:	mov    DWORD PTR [rdi+0x74],eax
   1400145a0:	jmp    0x14000f9a9
   1400145a5:	mov    rdx,QWORD PTR [rbp+0x8]
   1400145a9:	mov    ecx,0x50
   1400145ae:	call   0x14000e810
   1400145b3:	mov    rdi,rax
   1400145b6:	test   rax,rax
   1400145b9:	je     0x1400145e0
   1400145bb:	lea    rcx,[rsp+0x360]
   1400145c3:	or     esi,0x40
   1400145c6:	mov    DWORD PTR [rsp+0x30],esi
   1400145ca:	call   QWORD PTR [rip+0xbe90]        # 0x140020460
   1400145d0:	mov    rcx,rdi
   1400145d3:	mov    rdx,rax
   1400145d6:	call   0x14000d7d0
   1400145db:	mov    rdi,rax
   1400145de:	jmp    0x1400145e3
   1400145e0:	mov    rdi,r12
   1400145e3:	test   sil,0x40
   1400145e7:	je     0x140011c32
   1400145ed:	and    esi,0xffffffbf
   1400145f0:	lea    rcx,[rsp+0x360]
   1400145f8:	mov    DWORD PTR [rsp+0x30],esi
   1400145fc:	call   QWORD PTR [rip+0xbe56]        # 0x140020458
   140014602:	jmp    0x140011c32
   140014607:	mov    rdx,QWORD PTR [rbp+0x8]
   14001460b:	mov    ecx,0x50
   140014610:	call   0x14000e810
   140014615:	mov    rcx,rax
   140014618:	test   rax,rax
   14001461b:	je     0x140014637
   14001461d:	mov    eax,DWORD PTR [rbp+0x10]
   140014620:	inc    eax
   140014622:	movsxd rdx,eax
   140014625:	shl    rdx,0x4
   140014629:	add    rdx,QWORD PTR [rbp+0x30]
   14001462d:	call   0x14000d7d0
   140014632:	mov    rdi,rax
   140014635:	jmp    0x14001463a
   140014637:	mov    rdi,r12
   14001463a:	mov    rcx,QWORD PTR [rbp+0x28]
   14001463e:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014642:	add    rdx,rdx
   140014645:	mov    eax,DWORD PTR [rcx+rdx*8]
   140014648:	mov    DWORD PTR [rdi+0x20],eax
   14001464b:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14001464f:	mov    DWORD PTR [rdi+0x24],eax
   140014652:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140014656:	mov    DWORD PTR [rdi+0x28],eax
   140014659:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14001465d:	mov    DWORD PTR [rdi+0x2c],eax
   140014660:	mov    rcx,QWORD PTR [rbp+0x28]
   140014664:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014668:	inc    rdx
   14001466b:	add    rdx,rdx
   14001466e:	mov    eax,DWORD PTR [rcx+rdx*8]
   140014671:	mov    DWORD PTR [rdi+0x30],eax
   140014674:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140014678:	mov    DWORD PTR [rdi+0x34],eax
   14001467b:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14001467f:	mov    DWORD PTR [rdi+0x38],eax
   140014682:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140014686:	mov    DWORD PTR [rdi+0x3c],eax
   140014689:	movsxd rdx,DWORD PTR [rbp+0x10]
   14001468d:	add    rdx,0x2
   140014691:	jmp    0x140011c5f
   140014696:	mov    rdx,QWORD PTR [rbp+0x8]
   14001469a:	mov    ecx,0x50
   14001469f:	call   0x14000e810
   1400146a4:	mov    rdi,rax
   1400146a7:	test   rax,rax
   1400146aa:	je     0x1400146d2
   1400146ac:	bts    esi,0x7
   1400146b0:	lea    rcx,[rsp+0x300]
   1400146b8:	mov    DWORD PTR [rsp+0x30],esi
   1400146bc:	call   QWORD PTR [rip+0xbd9e]        # 0x140020460
   1400146c2:	mov    rcx,rdi
   1400146c5:	mov    rdx,rax
   1400146c8:	call   0x14000d830
   1400146cd:	mov    rdi,rax
   1400146d0:	jmp    0x1400146d5
   1400146d2:	mov    rdi,r12
   1400146d5:	test   sil,sil
   1400146d8:	jns    0x140011c32
   1400146de:	btr    esi,0x7
   1400146e2:	lea    rcx,[rsp+0x300]
   1400146ea:	mov    DWORD PTR [rsp+0x30],esi
   1400146ee:	call   QWORD PTR [rip+0xbd64]        # 0x140020458
   1400146f4:	jmp    0x140011c32
   1400146f9:	mov    rdx,QWORD PTR [rbp+0x8]
   1400146fd:	mov    ecx,0x50
   140014702:	call   0x14000e810
   140014707:	mov    rcx,rax
   14001470a:	test   rax,rax
   14001470d:	je     0x140014637
   140014713:	mov    eax,DWORD PTR [rbp+0x10]
   140014716:	inc    eax
   140014718:	movsxd rdx,eax
   14001471b:	shl    rdx,0x4
   14001471f:	add    rdx,QWORD PTR [rbp+0x30]
   140014723:	call   0x14000d830
   140014728:	mov    rdi,rax
   14001472b:	jmp    0x14001463a
   140014730:	mov    rdx,QWORD PTR [rbp+0x8]
   140014734:	mov    ecx,0x38
   140014739:	call   0x14000e810
   14001473e:	mov    rdi,rax
   140014741:	test   rax,rax
   140014744:	je     0x140011fa2
   14001474a:	mov    eax,DWORD PTR [rbp+0x10]
   14001474d:	mov    rdx,QWORD PTR [rbp+0x18]
   140014751:	inc    eax
   140014753:	movsxd rcx,eax
   140014756:	mov    rdx,QWORD PTR [rdx+rcx*8]
   14001475a:	mov    rcx,rdi
   14001475d:	call   0x14000d8b0
   140014762:	mov    rdi,rax
   140014765:	jmp    0x140011fa5
   14001476a:	mov    rdx,QWORD PTR [rbp+0x8]
   14001476e:	mov    ecx,0x50
   140014773:	call   0x14000e810
   140014778:	mov    r11,rax
   14001477b:	test   rax,rax
   14001477e:	je     0x1400147a8
   140014780:	mov    ecx,DWORD PTR [rbp+0x10]
   140014783:	mov    rdi,QWORD PTR [rbp+0x18]
   140014787:	lea    eax,[rcx+0x4]
   14001478a:	movsxd r8,eax
   14001478d:	lea    eax,[rcx+0x2]
   140014790:	mov    rcx,r11
   140014793:	mov    r8,QWORD PTR [rdi+r8*8]
   140014797:	movsxd rdx,eax
   14001479a:	mov    rdx,QWORD PTR [rdi+rdx*8]
   14001479e:	call   0x14000d8f0
   1400147a3:	mov    rdi,rax
   1400147a6:	jmp    0x1400147ab
   1400147a8:	mov    rdi,r12
   1400147ab:	mov    rcx,QWORD PTR [rbp+0x28]
   1400147af:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400147b3:	add    rdx,rdx
   1400147b6:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400147b9:	mov    DWORD PTR [rdi+0x20],eax
   1400147bc:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400147c0:	mov    DWORD PTR [rdi+0x24],eax
   1400147c3:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400147c7:	mov    DWORD PTR [rdi+0x28],eax
   1400147ca:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400147ce:	mov    DWORD PTR [rdi+0x2c],eax
   1400147d1:	mov    rcx,QWORD PTR [rbp+0x28]
   1400147d5:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400147d9:	inc    rdx
   1400147dc:	add    rdx,rdx
   1400147df:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400147e2:	mov    DWORD PTR [rdi+0x30],eax
   1400147e5:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400147e9:	mov    DWORD PTR [rdi+0x34],eax
   1400147ec:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400147f0:	mov    DWORD PTR [rdi+0x38],eax
   1400147f3:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400147f7:	mov    DWORD PTR [rdi+0x3c],eax
   1400147fa:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400147fe:	add    rdx,0x3
   140014802:	jmp    0x140011c5f
   140014807:	mov    rdx,QWORD PTR [rbp+0x8]
   14001480b:	mov    ecx,0x50
   140014810:	call   0x14000e810
   140014815:	mov    r11,rax
   140014818:	test   rax,rax
   14001481b:	je     0x1400147a8
   14001481d:	mov    ecx,DWORD PTR [rbp+0x10]
   140014820:	mov    rdi,QWORD PTR [rbp+0x18]
   140014824:	lea    eax,[rcx+0x4]
   140014827:	movsxd r8,eax
   14001482a:	lea    eax,[rcx+0x2]
   14001482d:	mov    rcx,r11
   140014830:	mov    r8,QWORD PTR [rdi+r8*8]
   140014834:	movsxd rdx,eax
   140014837:	mov    rdx,QWORD PTR [rdi+rdx*8]
   14001483b:	call   0x14000d9a0
   140014840:	mov    rdi,rax
   140014843:	jmp    0x1400147ab
   140014848:	mov    rdx,QWORD PTR [rbp+0x8]
   14001484c:	mov    ecx,0x48
   140014851:	call   0x14000e810
   140014856:	mov    rdi,rax
   140014859:	test   rax,rax
   14001485c:	je     0x1400148aa
   14001485e:	mov    rax,QWORD PTR [rbp+0x18]
   140014862:	movsxd rcx,DWORD PTR [rbp+0x10]
   140014866:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   14001486b:	lea    rax,[rip+0xd646]        # 0x140021eb8
   140014872:	mov    QWORD PTR [rdi],rax
   140014875:	mov    QWORD PTR [rdi+0x10],rdx
   140014879:	mov    QWORD PTR [rdi+0x18],r12
   14001487d:	mov    QWORD PTR [rdi+0x20],r12
   140014881:	mov    DWORD PTR [rdi+0x28],r12d
   140014885:	mov    DWORD PTR [rdi+0x2c],r12d
   140014889:	mov    DWORD PTR [rdi+0x30],r12d
   14001488d:	mov    DWORD PTR [rdi+0x34],r12d
   140014891:	mov    DWORD PTR [rdi+0x38],r12d
   140014895:	mov    DWORD PTR [rdi+0x3c],r12d
   140014899:	mov    DWORD PTR [rdi+0x40],r12d
   14001489d:	mov    DWORD PTR [rdi+0x44],r12d
   1400148a1:	mov    DWORD PTR [rdi+0x8],0x8
   1400148a8:	jmp    0x1400148ad
   1400148aa:	mov    rdi,r12
   1400148ad:	mov    rcx,QWORD PTR [rbp+0x28]
   1400148b1:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400148b5:	add    rdx,rdx
   1400148b8:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400148bb:	mov    DWORD PTR [rdi+0x28],eax
   1400148be:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400148c2:	mov    DWORD PTR [rdi+0x2c],eax
   1400148c5:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400148c9:	mov    DWORD PTR [rdi+0x30],eax
   1400148cc:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400148d0:	mov    DWORD PTR [rdi+0x34],eax
   1400148d3:	mov    rcx,QWORD PTR [rbp+0x28]
   1400148d7:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400148db:	add    rdx,0x2
   1400148df:	add    rdx,rdx
   1400148e2:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400148e5:	mov    DWORD PTR [rdi+0x38],eax
   1400148e8:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400148ec:	mov    DWORD PTR [rdi+0x3c],eax
   1400148ef:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400148f3:	mov    DWORD PTR [rdi+0x40],eax
   1400148f6:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400148fa:	mov    DWORD PTR [rdi+0x44],eax
   1400148fd:	jmp    0x14000f9a9
   140014902:	mov    rdx,QWORD PTR [rbp+0x8]
   140014906:	mov    ecx,0x48
   14001490b:	call   0x14000e810
   140014910:	mov    r11,rax
   140014913:	test   rax,rax
   140014916:	je     0x14001494a
   140014918:	mov    ecx,DWORD PTR [rbp+0x10]
   14001491b:	mov    rdi,QWORD PTR [rbp+0x18]
   14001491f:	lea    eax,[rcx+0x3]
   140014922:	movsxd r9,eax
   140014925:	lea    eax,[rcx+0x2]
   140014928:	mov    r9,QWORD PTR [rdi+r9*8]
   14001492c:	movsxd r8,eax
   14001492f:	lea    eax,[rcx+0x1]
   140014932:	mov    r8,QWORD PTR [rdi+r8*8]
   140014936:	movsxd rdx,eax
   140014939:	mov    rcx,r11
   14001493c:	mov    rdx,QWORD PTR [rdi+rdx*8]
   140014940:	call   0x14000d940
   140014945:	mov    rdi,rax
   140014948:	jmp    0x14001494d
   14001494a:	mov    rdi,r12
   14001494d:	mov    rcx,QWORD PTR [rbp+0x28]
   140014951:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014955:	add    rdx,rdx
   140014958:	mov    eax,DWORD PTR [rcx+rdx*8]
   14001495b:	mov    DWORD PTR [rdi+0x28],eax
   14001495e:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140014962:	mov    DWORD PTR [rdi+0x2c],eax
   140014965:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140014969:	mov    DWORD PTR [rdi+0x30],eax
   14001496c:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140014970:	mov    DWORD PTR [rdi+0x34],eax
   140014973:	mov    rcx,QWORD PTR [rbp+0x28]
   140014977:	movsxd rdx,DWORD PTR [rbp+0x10]
   14001497b:	add    rdx,0x4
   14001497f:	add    rdx,rdx
   140014982:	mov    eax,DWORD PTR [rcx+rdx*8]
   140014985:	mov    DWORD PTR [rdi+0x38],eax
   140014988:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14001498c:	mov    DWORD PTR [rdi+0x3c],eax
   14001498f:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140014993:	mov    DWORD PTR [rdi+0x40],eax
   140014996:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14001499a:	mov    DWORD PTR [rdi+0x44],eax
   14001499d:	jmp    0x14000f9a9
   1400149a2:	mov    rdx,QWORD PTR [rbp+0x8]
   1400149a6:	mov    ecx,0x20
   1400149ab:	call   0x14000e810
   1400149b0:	mov    rdi,rax
   1400149b3:	test   rax,rax
   1400149b6:	je     0x14000f9a6
   1400149bc:	mov    rax,QWORD PTR [rbp+0x18]
   1400149c0:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400149c4:	mov    rdx,QWORD PTR [rax+rcx*8]
   1400149c8:	lea    rax,[rip+0xd5d9]        # 0x140021fa8
   1400149cf:	mov    QWORD PTR [rdi],rax
   1400149d2:	mov    QWORD PTR [rdi+0x10],rdx
   1400149d6:	mov    QWORD PTR [rdi+0x18],rdi
   1400149da:	mov    DWORD PTR [rdi+0x8],0xa
   1400149e1:	jmp    0x14000f9a9
   1400149e6:	mov    rdx,QWORD PTR [rbp+0x8]
   1400149ea:	mov    ecx,0x20
   1400149ef:	call   0x14000e810
   1400149f4:	mov    rdi,rax
   1400149f7:	test   rax,rax
   1400149fa:	je     0x14000f9a6
   140014a00:	mov    rax,QWORD PTR [rbp+0x18]
   140014a04:	movsxd rcx,DWORD PTR [rbp+0x10]
   140014a08:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140014a0d:	mov    rcx,QWORD PTR [rax+rcx*8]
   140014a11:	lea    rax,[rip+0xd590]        # 0x140021fa8
   140014a18:	mov    QWORD PTR [rdi],rax
   140014a1b:	mov    QWORD PTR [rdi+0x10],rdx
   140014a1f:	mov    DWORD PTR [rdi+0x8],0xa
   140014a26:	mov    rax,QWORD PTR [rcx+0x18]
   140014a2a:	mov    QWORD PTR [rdi+0x18],rax
   140014a2e:	mov    QWORD PTR [rcx+0x18],rdi
   140014a32:	jmp    0x14000f9a9
   140014a37:	mov    rdx,QWORD PTR [rbp+0x8]
   140014a3b:	mov    ecx,0x40
   140014a40:	call   0x14000e810
   140014a45:	mov    r11,rax
   140014a48:	test   rax,rax
   140014a4b:	je     0x140014a75
   140014a4d:	mov    ecx,DWORD PTR [rbp+0x10]
   140014a50:	mov    rdi,QWORD PTR [rbp+0x18]
   140014a54:	lea    eax,[rcx+0x3]
   140014a57:	movsxd r8,eax
   140014a5a:	lea    eax,[rcx+0x1]
   140014a5d:	mov    rcx,r11
   140014a60:	mov    r8,QWORD PTR [rdi+r8*8]
   140014a64:	movsxd rdx,eax
   140014a67:	mov    rdx,QWORD PTR [rdi+rdx*8]
   140014a6b:	call   0x14000da20
   140014a70:	mov    rdi,rax
   140014a73:	jmp    0x140014a78
   140014a75:	mov    rdi,r12
   140014a78:	mov    rcx,QWORD PTR [rbp+0x28]
   140014a7c:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014a80:	add    rdx,rdx
   140014a83:	mov    eax,DWORD PTR [rcx+rdx*8]
   140014a86:	mov    DWORD PTR [rdi+0x20],eax
   140014a89:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140014a8d:	mov    DWORD PTR [rdi+0x24],eax
   140014a90:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140014a94:	mov    DWORD PTR [rdi+0x28],eax
   140014a97:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140014a9b:	mov    DWORD PTR [rdi+0x2c],eax
   140014a9e:	mov    rcx,QWORD PTR [rbp+0x28]
   140014aa2:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014aa6:	add    rdx,0x2
   140014aaa:	add    rdx,rdx
   140014aad:	mov    eax,DWORD PTR [rcx+rdx*8]
   140014ab0:	mov    DWORD PTR [rdi+0x30],eax
   140014ab3:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140014ab7:	mov    DWORD PTR [rdi+0x34],eax
   140014aba:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140014abe:	mov    DWORD PTR [rdi+0x38],eax
   140014ac1:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140014ac5:	mov    DWORD PTR [rdi+0x3c],eax
   140014ac8:	jmp    0x14000f9a9
   140014acd:	mov    rdx,QWORD PTR [rbp+0x8]
   140014ad1:	mov    ecx,0x38
   140014ad6:	call   0x14000e810
   140014adb:	mov    rdi,rax
   140014ade:	test   rax,rax
   140014ae1:	je     0x140014b01
   140014ae3:	mov    eax,DWORD PTR [rbp+0x10]
   140014ae6:	mov    rdx,QWORD PTR [rbp+0x18]
   140014aea:	add    eax,0x2
   140014aed:	movsxd rcx,eax
   140014af0:	mov    rdx,QWORD PTR [rdx+rcx*8]
   140014af4:	mov    rcx,rdi
   140014af7:	call   0x14000dab0
   140014afc:	mov    rdi,rax
   140014aff:	jmp    0x140014b04
   140014b01:	mov    rdi,r12
   140014b04:	mov    rcx,QWORD PTR [rbp+0x28]
   140014b08:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014b0c:	add    rdx,rdx
   140014b0f:	mov    eax,DWORD PTR [rcx+rdx*8]
   140014b12:	mov    DWORD PTR [rdi+0x18],eax
   140014b15:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140014b19:	mov    DWORD PTR [rdi+0x1c],eax
   140014b1c:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140014b20:	mov    DWORD PTR [rdi+0x20],eax
   140014b23:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140014b27:	mov    DWORD PTR [rdi+0x24],eax
   140014b2a:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014b2e:	inc    rdx
   140014b31:	jmp    0x1400100a5
   140014b36:	mov    rdx,QWORD PTR [rbp+0x8]
   140014b3a:	mov    ecx,0x48
   140014b3f:	call   0x14000e810
   140014b44:	mov    rdi,rax
   140014b47:	test   rax,rax
   140014b4a:	je     0x140014b75
   140014b4c:	movsxd rcx,DWORD PTR [rbp+0x10]
   140014b50:	mov    r8,QWORD PTR [rbp+0x18]
   140014b54:	lea    eax,[rcx+0x2]
   140014b57:	mov    rdx,rcx
   140014b5a:	mov    rcx,rdi
   140014b5d:	cdqe   
   140014b5f:	shl    rdx,0x4
   140014b63:	mov    r8,QWORD PTR [r8+rax*8]
   140014b67:	add    rdx,QWORD PTR [rbp+0x30]
   140014b6b:	call   0x14000db40
   140014b70:	mov    rdi,rax
   140014b73:	jmp    0x140014b78
   140014b75:	mov    rdi,r12
   140014b78:	mov    rcx,QWORD PTR [rbp+0x28]
   140014b7c:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014b80:	add    rdx,rdx
   140014b83:	mov    eax,DWORD PTR [rcx+rdx*8]
   140014b86:	mov    DWORD PTR [rdi+0x28],eax
   140014b89:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140014b8d:	mov    DWORD PTR [rdi+0x2c],eax
   140014b90:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140014b94:	mov    DWORD PTR [rdi+0x30],eax
   140014b97:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140014b9b:	mov    DWORD PTR [rdi+0x34],eax
   140014b9e:	mov    rcx,QWORD PTR [rbp+0x28]
   140014ba2:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014ba6:	inc    rdx
   140014ba9:	add    rdx,rdx
   140014bac:	mov    eax,DWORD PTR [rcx+rdx*8]
   140014baf:	mov    DWORD PTR [rdi+0x38],eax
   140014bb2:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140014bb6:	mov    DWORD PTR [rdi+0x3c],eax
   140014bb9:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140014bbd:	mov    DWORD PTR [rdi+0x40],eax
   140014bc0:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140014bc4:	mov    DWORD PTR [rdi+0x44],eax
   140014bc7:	jmp    0x14000f9a9
   140014bcc:	mov    rdx,QWORD PTR [rbp+0x8]
   140014bd0:	mov    ecx,0x38
   140014bd5:	call   0x14000e810
   140014bda:	mov    rdi,rax
   140014bdd:	test   rax,rax
   140014be0:	je     0x140011fa2
   140014be6:	mov    eax,DWORD PTR [rbp+0x10]
   140014be9:	mov    rdx,QWORD PTR [rbp+0x18]
   140014bed:	inc    eax
   140014bef:	movsxd rcx,eax
   140014bf2:	mov    rdx,QWORD PTR [rdx+rcx*8]
   140014bf6:	mov    rcx,rdi
   140014bf9:	call   0x14000dba0
   140014bfe:	mov    rdi,rax
   140014c01:	jmp    0x140011fa5
   140014c06:	mov    rdx,QWORD PTR [rbp+0x8]
   140014c0a:	mov    ecx,0x38
   140014c0f:	call   0x14000e810
   140014c14:	mov    r11,rax
   140014c17:	test   rax,rax
   140014c1a:	je     0x140014c65
   140014c1c:	mov    rax,QWORD PTR [rbp+0x18]
   140014c20:	movsxd rcx,DWORD PTR [rbp+0x10]
   140014c24:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140014c29:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140014c2e:	lea    rax,[rip+0xd553]        # 0x140022188
   140014c35:	mov    QWORD PTR [r11],rax
   140014c38:	mov    QWORD PTR [r11+0x10],rdx
   140014c3c:	mov    QWORD PTR [r11+0x18],rdi
   140014c40:	mov    QWORD PTR [r11+0x20],r12
   140014c44:	mov    DWORD PTR [r11+0x28],r12d
   140014c48:	mov    DWORD PTR [r11+0x2c],r12d
   140014c4c:	mov    DWORD PTR [r11+0x30],r12d
   140014c50:	mov    DWORD PTR [r11+0x34],r12d
   140014c54:	mov    DWORD PTR [r11+0x8],0x44
   140014c5c:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014c60:	jmp    0x1400102d1
   140014c65:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014c69:	mov    r11,r12
   140014c6c:	jmp    0x1400102d1
   140014c71:	mov    rdx,QWORD PTR [rbp+0x8]
   140014c75:	mov    ecx,0x38
   140014c7a:	call   0x14000e810
   140014c7f:	mov    r11,rax
   140014c82:	test   rax,rax
   140014c85:	je     0x140014c65
   140014c87:	mov    rax,QWORD PTR [rbp+0x18]
   140014c8b:	movsxd rcx,DWORD PTR [rbp+0x10]
   140014c8f:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140014c94:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140014c99:	lea    rax,[rip+0xd4e8]        # 0x140022188
   140014ca0:	mov    QWORD PTR [r11],rax
   140014ca3:	mov    QWORD PTR [r11+0x10],rdx
   140014ca7:	mov    QWORD PTR [r11+0x18],r12
   140014cab:	mov    QWORD PTR [r11+0x20],rdi
   140014caf:	jmp    0x140014c44
   140014cb1:	mov    rdx,QWORD PTR [rbp+0x8]
   140014cb5:	mov    ecx,0x38
   140014cba:	call   0x14000e810
   140014cbf:	mov    r11,rax
   140014cc2:	test   rax,rax
   140014cc5:	je     0x140014c65
   140014cc7:	mov    rax,QWORD PTR [rbp+0x18]
   140014ccb:	movsxd rcx,DWORD PTR [rbp+0x10]
   140014ccf:	mov    rdi,QWORD PTR [rax+rcx*8+0x18]
   140014cd4:	mov    rdx,QWORD PTR [rax+rcx*8+0x10]
   140014cd9:	mov    rcx,QWORD PTR [rax+rcx*8+0x8]
   140014cde:	lea    rax,[rip+0xd4a3]        # 0x140022188
   140014ce5:	mov    QWORD PTR [r11],rax
   140014ce8:	mov    QWORD PTR [r11+0x10],rcx
   140014cec:	mov    QWORD PTR [r11+0x18],rdx
   140014cf0:	mov    QWORD PTR [r11+0x20],rdi
   140014cf4:	jmp    0x140014c44
   140014cf9:	mov    rdx,QWORD PTR [rbp+0x8]
   140014cfd:	mov    ecx,0x68
   140014d02:	call   0x14000e810
   140014d07:	mov    r11,rax
   140014d0a:	test   rax,rax
   140014d0d:	je     0x140014d3b
   140014d0f:	mov    ecx,DWORD PTR [rbp+0x10]
   140014d12:	mov    r8,QWORD PTR [rbp+0x18]
   140014d16:	lea    eax,[rcx+0x4]
   140014d19:	movsxd rdi,eax
   140014d1c:	lea    eax,[rcx+0x2]
   140014d1f:	mov    rcx,r11
   140014d22:	mov    r8,QWORD PTR [r8+rdi*8]
   140014d26:	movsxd rdx,eax
   140014d29:	shl    rdx,0x4
   140014d2d:	add    rdx,QWORD PTR [rbp+0x30]
   140014d31:	call   0x14000dbe0
   140014d36:	mov    rdi,rax
   140014d39:	jmp    0x140014d3e
   140014d3b:	mov    rdi,r12
   140014d3e:	mov    rcx,QWORD PTR [rbp+0x28]
   140014d42:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014d46:	add    rdx,rdx
   140014d49:	mov    eax,DWORD PTR [rcx+rdx*8]
   140014d4c:	mov    DWORD PTR [rdi+0x28],eax
   140014d4f:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140014d53:	mov    DWORD PTR [rdi+0x2c],eax
   140014d56:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140014d5a:	mov    DWORD PTR [rdi+0x30],eax
   140014d5d:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140014d61:	mov    DWORD PTR [rdi+0x34],eax
   140014d64:	mov    rcx,QWORD PTR [rbp+0x28]
   140014d68:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014d6c:	inc    rdx
   140014d6f:	add    rdx,rdx
   140014d72:	mov    eax,DWORD PTR [rcx+rdx*8]
   140014d75:	mov    DWORD PTR [rdi+0x38],eax
   140014d78:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140014d7c:	mov    DWORD PTR [rdi+0x3c],eax
   140014d7f:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140014d83:	mov    DWORD PTR [rdi+0x40],eax
   140014d86:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140014d8a:	mov    DWORD PTR [rdi+0x44],eax
   140014d8d:	mov    rcx,QWORD PTR [rbp+0x28]
   140014d91:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014d95:	add    rdx,0x2
   140014d99:	add    rdx,rdx
   140014d9c:	mov    eax,DWORD PTR [rcx+rdx*8]
   140014d9f:	mov    DWORD PTR [rdi+0x48],eax
   140014da2:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140014da6:	mov    DWORD PTR [rdi+0x4c],eax
   140014da9:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140014dad:	mov    DWORD PTR [rdi+0x50],eax
   140014db0:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140014db4:	mov    DWORD PTR [rdi+0x54],eax
   140014db7:	jmp    0x1400105a4
   140014dbc:	mov    rdx,QWORD PTR [rbp+0x8]
   140014dc0:	mov    ecx,0x28
   140014dc5:	call   0x14000e810
   140014dca:	mov    rdi,rax
   140014dcd:	test   rax,rax
   140014dd0:	je     0x14001191b
   140014dd6:	mov    rax,QWORD PTR [rbp+0x18]
   140014dda:	movsxd rcx,DWORD PTR [rbp+0x10]
   140014dde:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140014de3:	lea    rax,[rip+0xd34e]        # 0x140022138
   140014dea:	mov    QWORD PTR [rdi],rax
   140014ded:	mov    QWORD PTR [rdi+0x10],rdx
   140014df1:	mov    DWORD PTR [rdi+0x18],r12d
   140014df5:	mov    DWORD PTR [rdi+0x1c],r12d
   140014df9:	mov    DWORD PTR [rdi+0x20],r12d
   140014dfd:	mov    DWORD PTR [rdi+0x24],r12d
   140014e01:	mov    DWORD PTR [rdi+0x8],0x19
   140014e08:	jmp    0x14001191e
   140014e0d:	mov    rdx,QWORD PTR [rbp+0x8]
   140014e11:	mov    ecx,0x30
   140014e16:	call   0x14000e810
   140014e1b:	test   rax,rax
   140014e1e:	je     0x140014e2d
   140014e20:	mov    rcx,rax
   140014e23:	call   0x14000e080
   140014e28:	mov    rdi,rax
   140014e2b:	jmp    0x140014e30
   140014e2d:	mov    rdi,r12
   140014e30:	mov    rcx,QWORD PTR [rbp+0x28]
   140014e34:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014e38:	add    rdx,rdx
   140014e3b:	mov    eax,DWORD PTR [rcx+rdx*8]
   140014e3e:	mov    DWORD PTR [rdi+0x10],eax
   140014e41:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140014e45:	mov    DWORD PTR [rdi+0x14],eax
   140014e48:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140014e4c:	mov    DWORD PTR [rdi+0x18],eax
   140014e4f:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140014e53:	mov    DWORD PTR [rdi+0x1c],eax
   140014e56:	mov    rcx,QWORD PTR [rbp+0x28]
   140014e5a:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014e5e:	inc    rdx
   140014e61:	add    rdx,rdx
   140014e64:	mov    eax,DWORD PTR [rcx+rdx*8]
   140014e67:	mov    DWORD PTR [rdi+0x20],eax
   140014e6a:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140014e6e:	mov    DWORD PTR [rdi+0x24],eax
   140014e71:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140014e75:	mov    DWORD PTR [rdi+0x28],eax
   140014e78:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140014e7c:	mov    DWORD PTR [rdi+0x2c],eax
   140014e7f:	jmp    0x14000f9a9
   140014e84:	mov    rdx,QWORD PTR [rbp+0x8]
   140014e88:	mov    ecx,0x90
   140014e8d:	call   0x14000e810
   140014e92:	mov    r11,rax
   140014e95:	test   rax,rax
   140014e98:	je     0x140014ed0
   140014e9a:	mov    ecx,DWORD PTR [rbp+0x10]
   140014e9d:	mov    rdi,QWORD PTR [rbp+0x18]
   140014ea1:	lea    eax,[rcx+0x6]
   140014ea4:	movsxd r9,eax
   140014ea7:	lea    eax,[rcx+0x3]
   140014eaa:	mov    r9,QWORD PTR [rdi+r9*8]
   140014eae:	movsxd r8,eax
   140014eb1:	lea    eax,[rcx+0x1]
   140014eb4:	mov    r8,QWORD PTR [rdi+r8*8]
   140014eb8:	movsxd rdx,eax
   140014ebb:	mov    rcx,r11
   140014ebe:	shl    rdx,0x4
   140014ec2:	add    rdx,QWORD PTR [rbp+0x30]
   140014ec6:	call   0x14000de00
   140014ecb:	mov    rdi,rax
   140014ece:	jmp    0x140014ed3
   140014ed0:	mov    rdi,r12
   140014ed3:	mov    rcx,QWORD PTR [rbp+0x28]
   140014ed7:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014edb:	add    rdx,rdx
   140014ede:	mov    eax,DWORD PTR [rcx+rdx*8]
   140014ee1:	mov    DWORD PTR [rdi+0x30],eax
   140014ee4:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140014ee8:	mov    DWORD PTR [rdi+0x34],eax
   140014eeb:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140014eef:	mov    DWORD PTR [rdi+0x38],eax
   140014ef2:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140014ef6:	mov    DWORD PTR [rdi+0x3c],eax
   140014ef9:	mov    rcx,QWORD PTR [rbp+0x28]
   140014efd:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014f01:	inc    rdx
   140014f04:	add    rdx,rdx
   140014f07:	mov    eax,DWORD PTR [rcx+rdx*8]
   140014f0a:	mov    DWORD PTR [rdi+0x40],eax
   140014f0d:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140014f11:	mov    DWORD PTR [rdi+0x44],eax
   140014f14:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140014f18:	mov    DWORD PTR [rdi+0x48],eax
   140014f1b:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140014f1f:	mov    DWORD PTR [rdi+0x4c],eax
   140014f22:	mov    rcx,QWORD PTR [rbp+0x28]
   140014f26:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014f2a:	add    rdx,0x2
   140014f2e:	add    rdx,rdx
   140014f31:	mov    eax,DWORD PTR [rcx+rdx*8]
   140014f34:	mov    DWORD PTR [rdi+0x50],eax
   140014f37:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140014f3b:	mov    DWORD PTR [rdi+0x54],eax
   140014f3e:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140014f42:	mov    DWORD PTR [rdi+0x58],eax
   140014f45:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140014f49:	mov    DWORD PTR [rdi+0x5c],eax
   140014f4c:	mov    rcx,QWORD PTR [rbp+0x28]
   140014f50:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014f54:	add    rdx,0x4
   140014f58:	add    rdx,rdx
   140014f5b:	mov    eax,DWORD PTR [rcx+rdx*8]
   140014f5e:	mov    DWORD PTR [rdi+0x60],eax
   140014f61:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140014f65:	mov    DWORD PTR [rdi+0x64],eax
   140014f68:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140014f6c:	mov    DWORD PTR [rdi+0x68],eax
   140014f6f:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140014f73:	mov    DWORD PTR [rdi+0x6c],eax
   140014f76:	mov    rcx,QWORD PTR [rbp+0x28]
   140014f7a:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014f7e:	add    rdx,0x5
   140014f82:	add    rdx,rdx
   140014f85:	mov    eax,DWORD PTR [rcx+rdx*8]
   140014f88:	mov    DWORD PTR [rdi+0x70],eax
   140014f8b:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140014f8f:	mov    DWORD PTR [rdi+0x74],eax
   140014f92:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140014f96:	mov    DWORD PTR [rdi+0x78],eax
   140014f99:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140014f9d:	mov    DWORD PTR [rdi+0x7c],eax
   140014fa0:	mov    rcx,QWORD PTR [rbp+0x28]
   140014fa4:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014fa8:	add    rdx,0x7
   140014fac:	add    rdx,rdx
   140014faf:	mov    eax,DWORD PTR [rcx+rdx*8]
   140014fb2:	mov    DWORD PTR [rdi+0x80],eax
   140014fb8:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140014fbc:	mov    DWORD PTR [rdi+0x84],eax
   140014fc2:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140014fc6:	mov    DWORD PTR [rdi+0x88],eax
   140014fcc:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140014fd0:	mov    DWORD PTR [rdi+0x8c],eax
   140014fd6:	jmp    0x14000f9a9
   140014fdb:	mov    rdx,QWORD PTR [rbp+0x8]
   140014fdf:	mov    ecx,0x90
   140014fe4:	call   0x14000e810
   140014fe9:	mov    r11,rax
   140014fec:	test   rax,rax
   140014fef:	je     0x140015027
   140014ff1:	mov    ecx,DWORD PTR [rbp+0x10]
   140014ff4:	mov    rdi,QWORD PTR [rbp+0x18]
   140014ff8:	lea    eax,[rcx+0x6]
   140014ffb:	movsxd r9,eax
   140014ffe:	lea    eax,[rcx+0x3]
   140015001:	mov    r9,QWORD PTR [rdi+r9*8]
   140015005:	movsxd r8,eax
   140015008:	lea    eax,[rcx+0x1]
   14001500b:	mov    r8,QWORD PTR [rdi+r8*8]
   14001500f:	movsxd rdx,eax
   140015012:	mov    rcx,r11
   140015015:	shl    rdx,0x4
   140015019:	add    rdx,QWORD PTR [rbp+0x30]
   14001501d:	call   0x14000dd20
   140015022:	mov    rdi,rax
   140015025:	jmp    0x14001502a
   140015027:	mov    rdi,r12
   14001502a:	mov    rcx,QWORD PTR [rbp+0x28]
   14001502e:	movsxd rdx,DWORD PTR [rbp+0x10]
   140015032:	add    rdx,rdx
   140015035:	mov    eax,DWORD PTR [rcx+rdx*8]
   140015038:	mov    DWORD PTR [rdi+0x30],eax
   14001503b:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14001503f:	mov    DWORD PTR [rdi+0x34],eax
   140015042:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140015046:	mov    DWORD PTR [rdi+0x38],eax
   140015049:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14001504d:	mov    DWORD PTR [rdi+0x3c],eax
   140015050:	mov    eax,DWORD PTR [rbp+0x10]
   140015053:	inc    eax
   140015055:	movsxd rcx,eax
   140015058:	shl    rcx,0x4
   14001505c:	add    rcx,QWORD PTR [rbp+0x30]
   140015060:	call   QWORD PTR [rip+0xb3ea]        # 0x140020450
   140015066:	test   al,al
   140015068:	jne    0x140015093
   14001506a:	mov    rcx,QWORD PTR [rbp+0x28]
   14001506e:	movsxd rdx,DWORD PTR [rbp+0x10]
   140015072:	inc    rdx
   140015075:	add    rdx,rdx
   140015078:	mov    eax,DWORD PTR [rcx+rdx*8]
   14001507b:	mov    DWORD PTR [rdi+0x40],eax
   14001507e:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140015082:	mov    DWORD PTR [rdi+0x44],eax
   140015085:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140015089:	mov    DWORD PTR [rdi+0x48],eax
   14001508c:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140015090:	mov    DWORD PTR [rdi+0x4c],eax
   140015093:	mov    rcx,QWORD PTR [rbp+0x28]
   140015097:	movsxd rdx,DWORD PTR [rbp+0x10]
   14001509b:	add    rdx,0x2
   14001509f:	add    rdx,rdx
   1400150a2:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400150a5:	mov    DWORD PTR [rdi+0x50],eax
   1400150a8:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400150ac:	mov    DWORD PTR [rdi+0x54],eax
   1400150af:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400150b3:	mov    DWORD PTR [rdi+0x58],eax
   1400150b6:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400150ba:	mov    DWORD PTR [rdi+0x5c],eax
   1400150bd:	mov    rcx,QWORD PTR [rbp+0x28]
   1400150c1:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400150c5:	add    rdx,0x4
   1400150c9:	add    rdx,rdx
   1400150cc:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400150cf:	mov    DWORD PTR [rdi+0x60],eax
   1400150d2:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400150d6:	mov    DWORD PTR [rdi+0x64],eax
   1400150d9:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400150dd:	mov    DWORD PTR [rdi+0x68],eax
   1400150e0:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400150e4:	mov    DWORD PTR [rdi+0x6c],eax
   1400150e7:	mov    rcx,QWORD PTR [rbp+0x28]
   1400150eb:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400150ef:	add    rdx,0x5
   1400150f3:	add    rdx,rdx
   1400150f6:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400150f9:	mov    DWORD PTR [rdi+0x70],eax
   1400150fc:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140015100:	mov    DWORD PTR [rdi+0x74],eax
   140015103:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140015107:	mov    DWORD PTR [rdi+0x78],eax
   14001510a:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14001510e:	mov    DWORD PTR [rdi+0x7c],eax
   140015111:	mov    rcx,QWORD PTR [rbp+0x28]
   140015115:	movsxd rdx,DWORD PTR [rbp+0x10]
   140015119:	add    rdx,0x7
   14001511d:	add    rdx,rdx
   140015120:	mov    eax,DWORD PTR [rcx+rdx*8]
   140015123:	mov    DWORD PTR [rdi+0x80],eax
   140015129:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14001512d:	mov    DWORD PTR [rdi+0x84],eax
   140015133:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140015137:	mov    DWORD PTR [rdi+0x88],eax
   14001513d:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140015141:	mov    DWORD PTR [rdi+0x8c],eax
   140015147:	jmp    0x14000f9a9
   14001514c:	mov    rdx,QWORD PTR [rbp+0x8]
   140015150:	mov    ecx,0x90
   140015155:	call   0x14000e810
   14001515a:	mov    r13,rax
   14001515d:	test   rax,rax
   140015160:	je     0x1400151a7
   140015162:	mov    ecx,DWORD PTR [rbp+0x10]
   140015165:	bts    esi,0x8
   140015169:	lea    eax,[rcx+0x5]
   14001516c:	mov    DWORD PTR [rsp+0x30],esi
   140015170:	mov    rsi,QWORD PTR [rbp+0x18]
   140015174:	movsxd rbx,eax
   140015177:	lea    eax,[rcx+0x2]
   14001517a:	lea    rcx,[rsp+0x2f0]
   140015182:	movsxd rdi,eax
   140015185:	call   QWORD PTR [rip+0xb2d5]        # 0x140020460
   14001518b:	mov    r9,QWORD PTR [rsi+rbx*8]
   14001518f:	mov    r8,QWORD PTR [rsi+rdi*8]
   140015193:	mov    rcx,r13
   140015196:	mov    rdx,rax
   140015199:	call   0x14000dd20
   14001519e:	mov    esi,DWORD PTR [rsp+0x30]
   1400151a2:	mov    rdi,rax
   1400151a5:	jmp    0x1400151aa
   1400151a7:	mov    rdi,r12
   1400151aa:	bt     esi,0x8
   1400151ae:	jae    0x1400151c6
   1400151b0:	btr    esi,0x8
   1400151b4:	lea    rcx,[rsp+0x2f0]
   1400151bc:	mov    DWORD PTR [rsp+0x30],esi
   1400151c0:	call   QWORD PTR [rip+0xb292]        # 0x140020458
   1400151c6:	mov    rcx,QWORD PTR [rbp+0x28]
   1400151ca:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400151ce:	add    rdx,rdx
   1400151d1:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400151d4:	mov    DWORD PTR [rdi+0x30],eax
   1400151d7:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400151db:	mov    DWORD PTR [rdi+0x34],eax
   1400151de:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400151e2:	mov    DWORD PTR [rdi+0x38],eax
   1400151e5:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400151e9:	mov    DWORD PTR [rdi+0x3c],eax
   1400151ec:	mov    rcx,QWORD PTR [rbp+0x28]
   1400151f0:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400151f4:	inc    rdx
   1400151f7:	add    rdx,rdx
   1400151fa:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400151fd:	mov    DWORD PTR [rdi+0x50],eax
   140015200:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140015204:	mov    DWORD PTR [rdi+0x54],eax
   140015207:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14001520b:	mov    DWORD PTR [rdi+0x58],eax
   14001520e:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140015212:	mov    DWORD PTR [rdi+0x5c],eax
   140015215:	mov    rcx,QWORD PTR [rbp+0x28]
   140015219:	movsxd rdx,DWORD PTR [rbp+0x10]
   14001521d:	add    rdx,0x3
   140015221:	add    rdx,rdx
   140015224:	mov    eax,DWORD PTR [rcx+rdx*8]
   140015227:	mov    DWORD PTR [rdi+0x60],eax
   14001522a:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14001522e:	mov    DWORD PTR [rdi+0x64],eax
   140015231:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140015235:	mov    DWORD PTR [rdi+0x68],eax
   140015238:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14001523c:	mov    DWORD PTR [rdi+0x6c],eax
   14001523f:	mov    rcx,QWORD PTR [rbp+0x28]
   140015243:	movsxd rdx,DWORD PTR [rbp+0x10]
   140015247:	add    rdx,0x4
   14001524b:	add    rdx,rdx
   14001524e:	mov    eax,DWORD PTR [rcx+rdx*8]
   140015251:	mov    DWORD PTR [rdi+0x70],eax
   140015254:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140015258:	mov    DWORD PTR [rdi+0x74],eax
   14001525b:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14001525f:	mov    DWORD PTR [rdi+0x78],eax
   140015262:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140015266:	mov    DWORD PTR [rdi+0x7c],eax
   140015269:	mov    rcx,QWORD PTR [rbp+0x28]
   14001526d:	movsxd rdx,DWORD PTR [rbp+0x10]
   140015271:	add    rdx,0x6
   140015275:	add    rdx,rdx
   140015278:	mov    eax,DWORD PTR [rcx+rdx*8]
   14001527b:	mov    DWORD PTR [rdi+0x80],eax
   140015281:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140015285:	mov    DWORD PTR [rdi+0x84],eax
   14001528b:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14001528f:	mov    DWORD PTR [rdi+0x88],eax
   140015295:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140015299:	mov    DWORD PTR [rdi+0x8c],eax
   14001529f:	jmp    0x14000f9a9
   1400152a4:	mov    rdx,QWORD PTR [rbp+0x8]
   1400152a8:	mov    ecx,0x48
   1400152ad:	call   0x14000e810
   1400152b2:	test   rax,rax
   1400152b5:	je     0x1400152d0
   1400152b7:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400152bb:	mov    rcx,rax
   1400152be:	shl    rdx,0x4
   1400152c2:	add    rdx,QWORD PTR [rbp+0x30]
   1400152c6:	call   0x14000deb0
   1400152cb:	mov    rdi,rax
   1400152ce:	jmp    0x1400152d3
   1400152d0:	mov    rdi,r12
   1400152d3:	mov    rcx,QWORD PTR [rbp+0x28]
   1400152d7:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400152db:	add    rdx,rdx
   1400152de:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400152e1:	mov    DWORD PTR [rdi+0x38],eax
   1400152e4:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400152e8:	mov    DWORD PTR [rdi+0x3c],eax
   1400152eb:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400152ef:	mov    DWORD PTR [rdi+0x40],eax
   1400152f2:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400152f6:	mov    DWORD PTR [rdi+0x44],eax
   1400152f9:	jmp    0x14000f9a9
   1400152fe:	mov    rdx,QWORD PTR [rbp+0x8]
   140015302:	mov    ecx,0x48
   140015307:	call   0x14000e810
   14001530c:	mov    rdi,rax
   14001530f:	test   rax,rax
   140015312:	je     0x1400129c9
   140015318:	movsxd rcx,DWORD PTR [rbp+0x10]
   14001531c:	mov    rdx,QWORD PTR [rbp+0x18]
   140015320:	mov    rdx,QWORD PTR [rdx+rcx*8]
   140015324:	lea    eax,[rcx+0x2]
   140015327:	mov    rcx,rdi
   14001532a:	movsxd r8,eax
   14001532d:	shl    r8,0x4
   140015331:	add    r8,QWORD PTR [rbp+0x30]
   140015335:	call   0x14000df10
   14001533a:	mov    rdi,rax
   14001533d:	jmp    0x1400129cc
   140015342:	mov    rax,QWORD PTR [rbp+0x18]
   140015346:	mov    rdx,QWORD PTR [rax+rdx*8]
   14001534a:	mov    rdi,QWORD PTR [rdx+0x20]
   14001534e:	mov    QWORD PTR [rdx+0x20],r12
   140015352:	movsxd rcx,DWORD PTR [rbp+0x10]
   140015356:	mov    rax,QWORD PTR [rbp+0x18]
   14001535a:	mov    QWORD PTR [rax+rcx*8],rdi
   14001535e:	jmp    0x140015510
   140015363:	mov    rdx,QWORD PTR [rbp+0x8]
   140015367:	mov    ecx,0x18
   14001536c:	call   0x14000e810
   140015371:	mov    rdi,rax
   140015374:	test   rax,rax
   140015377:	je     0x14000f9a6
   14001537d:	movsxd rcx,DWORD PTR [rbp+0x10]
   140015381:	mov    rax,QWORD PTR [rbp+0x18]
   140015385:	mov    rdx,QWORD PTR [rax+rcx*8]
   140015389:	lea    rcx,[rip+0xcf88]        # 0x140022318
   140015390:	mov    rax,QWORD PTR [rdx+0x18]
   140015394:	mov    QWORD PTR [rdx+0x18],r12
   140015398:	mov    QWORD PTR [rdi],rcx
   14001539b:	mov    QWORD PTR [rdi+0x10],rax
   14001539f:	mov    DWORD PTR [rdi+0x8],0x1d
   1400153a6:	jmp    0x14000f9a9
   1400153ab:	mov    rdx,QWORD PTR [rbp+0x8]
   1400153af:	mov    ecx,0x18
   1400153b4:	call   0x14000e810
   1400153b9:	mov    rdi,rax
   1400153bc:	test   rax,rax
   1400153bf:	je     0x14000f9a6
   1400153c5:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400153c9:	mov    rax,QWORD PTR [rbp+0x18]
   1400153cd:	mov    rdx,QWORD PTR [rax+rcx*8]
   1400153d1:	lea    rcx,[rip+0xcf90]        # 0x140022368
   1400153d8:	mov    rax,QWORD PTR [rdx+0x18]
   1400153dc:	mov    QWORD PTR [rdx+0x18],r12
   1400153e0:	mov    QWORD PTR [rdi],rcx
   1400153e3:	mov    QWORD PTR [rdi+0x10],rax
   1400153e7:	mov    DWORD PTR [rdi+0x8],0x32
   1400153ee:	jmp    0x14000f9a9
   1400153f3:	mov    rdx,QWORD PTR [rbp+0x8]
   1400153f7:	mov    ecx,0x20
   1400153fc:	call   0x14000e810
   140015401:	mov    rdi,rax
   140015404:	test   rax,rax
   140015407:	je     0x14000f9a6
   14001540d:	mov    rax,QWORD PTR [rbp+0x18]
   140015411:	movsxd rcx,DWORD PTR [rbp+0x10]
   140015415:	mov    rdx,QWORD PTR [rax+rcx*8]
   140015419:	lea    rax,[rip+0xcea8]        # 0x1400222c8
   140015420:	mov    QWORD PTR [rdi],rax
   140015423:	mov    QWORD PTR [rdi+0x10],rdx
   140015427:	mov    QWORD PTR [rdi+0x18],rdi
   14001542b:	mov    DWORD PTR [rdi+0x8],0x3a
   140015432:	jmp    0x14000f9a9
   140015437:	mov    rdx,QWORD PTR [rbp+0x8]
   14001543b:	mov    ecx,0x20
   140015440:	call   0x14000e810
   140015445:	mov    rdi,rax
   140015448:	test   rax,rax
   14001544b:	je     0x14000f9a6
   140015451:	mov    rax,QWORD PTR [rbp+0x18]
   140015455:	movsxd rcx,DWORD PTR [rbp+0x10]
   140015459:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   14001545e:	mov    rcx,QWORD PTR [rax+rcx*8]
   140015462:	lea    rax,[rip+0xce5f]        # 0x1400222c8
   140015469:	mov    QWORD PTR [rdi],rax
   14001546c:	mov    QWORD PTR [rdi+0x10],rdx
   140015470:	mov    DWORD PTR [rdi+0x8],0x3a
   140015477:	mov    rax,QWORD PTR [rcx+0x18]
   14001547b:	mov    QWORD PTR [rdi+0x18],rax
   14001547f:	mov    QWORD PTR [rcx+0x18],rdi
   140015483:	jmp    0x14000f9a9
   140015488:	mov    rdx,QWORD PTR [rbp+0x8]
   14001548c:	mov    ecx,0x18
   140015491:	call   0x14000e810
   140015496:	mov    rdi,rax
   140015499:	test   rax,rax
   14001549c:	je     0x14000f9a6
   1400154a2:	mov    rax,QWORD PTR [rbp+0x18]
   1400154a6:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400154aa:	mov    rdx,QWORD PTR [rax+rcx*8]
   1400154ae:	lea    rax,[rip+0xcf53]        # 0x140022408
   1400154b5:	mov    QWORD PTR [rdi],rax
   1400154b8:	mov    QWORD PTR [rdi+0x10],rdx
   1400154bc:	mov    DWORD PTR [rdi+0x8],0x3c
   1400154c3:	jmp    0x14000f9a9
   1400154c8:	mov    rdx,QWORD PTR [rbp+0x8]
   1400154cc:	mov    ecx,0x18
   1400154d1:	call   0x14000e810
   1400154d6:	mov    rdi,rax
   1400154d9:	test   rax,rax
   1400154dc:	je     0x14000f9a6
   1400154e2:	mov    rax,QWORD PTR [rbp+0x18]
   1400154e6:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400154ea:	mov    rdx,QWORD PTR [rax+rcx*8]
   1400154ee:	lea    rax,[rip+0xcec3]        # 0x1400223b8
   1400154f5:	mov    QWORD PTR [rdi],rax
   1400154f8:	mov    QWORD PTR [rdi+0x10],rdx
   1400154fc:	mov    DWORD PTR [rdi+0x8],0x20
   140015503:	jmp    0x14000f9a9
   140015508:	mov    rax,QWORD PTR [rbp+0x18]
   14001550c:	mov    QWORD PTR [rax+rdx*8],r12
   140015510:	mov    rax,QWORD PTR [rbp+0x20]
   140015514:	movsxd rcx,DWORD PTR [rbp+0x10]
   140015518:	movsx  edi,WORD PTR [r9+r14*2+0x233b0]
   140015521:	movsxd rdx,DWORD PTR [rax+rcx*4]
   140015525:	sub    edi,0x6a
   140015528:	movsx  eax,WORD PTR [r9+rdx*2+0x244a4]
   140015531:	add    eax,edi
   140015533:	js     0x140015550
   140015535:	movsxd rcx,eax
   140015538:	movsx  eax,WORD PTR [r9+rcx*2+0x27db4]
   140015541:	cmp    eax,edi
   140015543:	jne    0x140015550
   140015545:	movsx  r13d,WORD PTR [r9+rcx*2+0x26174]
   14001554e:	jmp    0x14001555c
   140015550:	movsxd rax,edi
   140015553:	movsx  r13d,WORD PTR [r9+rax*2+0x23e90]
   14001555c:	mov    rbx,QWORD PTR [rsp+0x38]
   140015561:	lea    r14,[rbp+0x78]
   140015565:	test   r13d,r13d
   140015568:	jne    0x14000f5c7
   14001556e:	mov    rax,QWORD PTR [rbp+0x110]
   140015575:	cmp    QWORD PTR [rbp+0x108],rax
   14001557c:	jne    0x1400162e8
   140015582:	movsxd rcx,DWORD PTR [rbp+0x10]
   140015586:	mov    rax,QWORD PTR [rbp+0x20]
   14001558a:	movsxd r13,DWORD PTR [rax+rcx*4]
   14001558e:	cmp    r15d,0xffffffff
   140015592:	je     0x1400156b4
   140015598:	movsx  eax,WORD PTR [r9+r13*2+0x23f70]
   1400155a1:	add    eax,0x3e
   1400155a4:	js     0x1400155c0
   1400155a6:	movsxd rcx,eax
   1400155a9:	cmp    WORD PTR [r9+rcx*2+0x26620],0x3e
   1400155b3:	jne    0x1400155c0
   1400155b5:	movsx  eax,WORD PTR [r9+rcx*2+0x249e0]
   1400155be:	jmp    0x1400155cb
   1400155c0:	movsx  eax,WORD PTR [r9+r13*2+0x23950]
   1400155c9:	neg    eax
   1400155cb:	test   eax,eax
   1400155cd:	je     0x1400155e5
   1400155cf:	mov    edx,r15d
   1400155d2:	mov    rcx,rbx
   1400155d5:	call   0x140018440
   1400155da:	test   al,al
   1400155dc:	jne    0x140015620
   1400155de:	lea    r9,[rip+0xfffffffffffeaa1b]        # 0x140000000
   1400155e5:	movsx  eax,WORD PTR [r9+r13*2+0x23f70]
   1400155ee:	add    eax,0x59
   1400155f1:	js     0x14001560d
   1400155f3:	movsxd rcx,eax
   1400155f6:	cmp    WORD PTR [r9+rcx*2+0x26620],0x59
   140015600:	jne    0x14001560d
   140015602:	movsx  eax,WORD PTR [r9+rcx*2+0x249e0]
   14001560b:	jmp    0x140015618
   14001560d:	movsx  eax,WORD PTR [r9+r13*2+0x23950]
   140015616:	neg    eax
   140015618:	test   eax,eax
   14001561a:	je     0x1400156b4
   140015620:	mov    DWORD PTR [r14],r15d
   140015623:	mov    rax,QWORD PTR [rbp+0x40]
   140015627:	lea    rdx,[rbp+0x48]
   14001562b:	lea    rcx,[r14+0x20]
   14001562f:	mov    QWORD PTR [r14+0x8],rax
   140015633:	call   QWORD PTR [rip+0xadff]        # 0x140020438
   140015639:	mov    eax,DWORD PTR [rbp+0x58]
   14001563c:	mov    r15d,0x3d
   140015642:	mov    DWORD PTR [r14+0x10],eax
   140015646:	mov    eax,DWORD PTR [rbp+0x5c]
   140015649:	mov    DWORD PTR [r14+0x14],eax
   14001564d:	mov    eax,DWORD PTR [rbp+0x60]
   140015650:	mov    DWORD PTR [r14+0x18],eax
   140015654:	mov    eax,DWORD PTR [rbp+0x64]
   140015657:	mov    DWORD PTR [r14+0x1c],eax
   14001565b:	mov    eax,DWORD PTR [rbp+0x68]
   14001565e:	mov    DWORD PTR [rbp+0x58],eax
   140015661:	mov    eax,DWORD PTR [rbp+0x6c]
   140015664:	mov    DWORD PTR [rbp+0x5c],eax
   140015667:	mov    eax,DWORD PTR [rbp+0x70]
   14001566a:	mov    DWORD PTR [rbp+0x60],eax
   14001566d:	mov    eax,DWORD PTR [rbp+0x74]
   140015670:	mov    DWORD PTR [rbp+0x64],eax
   140015673:	mov    eax,DWORD PTR [rbp+0x5c]
   140015676:	add    DWORD PTR [rbp+0x58],eax
   140015679:	mov    eax,DWORD PTR [rbp+0x5c]
   14001567c:	add    DWORD PTR [rbp+0x64],eax
   14001567f:	mov    DWORD PTR [rbp+0x5c],r12d
   140015683:	lea    rax,[rbp+0xa8]
   14001568a:	mov    QWORD PTR [rbp+0x108],r14
   140015691:	mov    QWORD PTR [rbp+0x40],r12
   140015695:	mov    QWORD PTR [rbp+0x110],rax
   14001569c:	lea    r9,[rip+0xfffffffffffea95d]        # 0x140000000
   1400156a3:	mov    edx,0xffffff96
   1400156a8:	lea    rdi,[rip+0xd391]        # 0x140022a40
   1400156af:	jmp    0x14000f660
   1400156b4:	mov    DWORD PTR [r14],r15d
   1400156b7:	mov    rax,QWORD PTR [rbp+0x40]
   1400156bb:	lea    rcx,[rbp+0x98]
   1400156c2:	lea    rdx,[rbp+0x48]
   1400156c6:	mov    BYTE PTR [rsp+0x418],0x1
   1400156ce:	mov    QWORD PTR [rbp+0x80],rax
   1400156d5:	call   QWORD PTR [rip+0xad5d]        # 0x140020438
   1400156db:	mov    eax,DWORD PTR [rbp+0x58]
   1400156de:	mov    rcx,rbx
   1400156e1:	mov    DWORD PTR [rbp+0x88],eax
   1400156e7:	mov    eax,DWORD PTR [rbp+0x5c]
   1400156ea:	mov    DWORD PTR [rbp+0x8c],eax
   1400156f0:	mov    eax,DWORD PTR [rbp+0x60]
   1400156f3:	mov    DWORD PTR [rbp+0x90],eax
   1400156f9:	mov    eax,DWORD PTR [rbp+0x64]
   1400156fc:	mov    DWORD PTR [rbp+0x94],eax
   140015702:	call   0x14001aef0
   140015707:	lea    rdx,[rbx+0x20]
   14001570b:	mov    DWORD PTR [rbp+0xa8],eax
   140015711:	lea    rcx,[rsp+0x1c0]
   140015719:	mov    r15d,eax
   14001571c:	movsd  xmm0,QWORD PTR [rbx+0x68]
   140015721:	movsd  QWORD PTR [rbp+0x40],xmm0
   140015726:	movsd  QWORD PTR [rbp+0xb0],xmm0
   14001572e:	call   QWORD PTR [rip+0xacfc]        # 0x140020430
   140015734:	lea    rdx,[rsp+0x1c0]
   14001573c:	lea    rcx,[rbp+0x48]
   140015740:	call   QWORD PTR [rip+0xacf2]        # 0x140020438
   140015746:	lea    rcx,[rbp+0xc8]
   14001574d:	mov    rdx,rax
   140015750:	call   QWORD PTR [rip+0xace2]        # 0x140020438
   140015756:	lea    rcx,[rsp+0x1c0]
   14001575e:	call   QWORD PTR [rip+0xacf4]        # 0x140020458
   140015764:	lea    rcx,[rsp+0x3a0]
   14001576c:	mov    rdx,rbx
   14001576f:	call   0x14000e610
   140015774:	lea    r8,[rip+0xfffffffffffea885]        # 0x140000000
   14001577b:	mov    rdx,rax
   14001577e:	mov    eax,DWORD PTR [rax]
   140015780:	mov    DWORD PTR [rbp+0x58],eax
   140015783:	mov    eax,DWORD PTR [rdx+0x4]
   140015786:	mov    DWORD PTR [rbp+0x5c],eax
   140015789:	mov    eax,DWORD PTR [rdx+0x8]
   14001578c:	mov    DWORD PTR [rbp+0x60],eax
   14001578f:	mov    eax,DWORD PTR [rdx+0xc]
   140015792:	mov    DWORD PTR [rbp+0x64],eax
   140015795:	mov    eax,DWORD PTR [rdx]
   140015797:	mov    DWORD PTR [rbp+0xb8],eax
   14001579d:	mov    eax,DWORD PTR [rdx+0x4]
   1400157a0:	mov    DWORD PTR [rbp+0xbc],eax
   1400157a6:	mov    eax,DWORD PTR [rdx+0x8]
   1400157a9:	mov    DWORD PTR [rbp+0xc0],eax
   1400157af:	mov    eax,DWORD PTR [rdx+0xc]
   1400157b2:	mov    DWORD PTR [rbp+0xc4],eax
   1400157b8:	movsx  eax,WORD PTR [r8+r13*2+0x23f70]
   1400157c1:	add    eax,r15d
   1400157c4:	js     0x1400157e2
   1400157c6:	movsxd rcx,eax
   1400157c9:	movsx  eax,WORD PTR [r8+rcx*2+0x26620]
   1400157d2:	cmp    eax,r15d
   1400157d5:	jne    0x1400157e2
   1400157d7:	movsx  eax,WORD PTR [r8+rcx*2+0x249e0]
   1400157e0:	jmp    0x1400157ed
   1400157e2:	movsx  eax,WORD PTR [r8+r13*2+0x23950]
   1400157eb:	neg    eax
   1400157ed:	test   eax,eax
   1400157ef:	je     0x140015a03
   1400157f5:	lea    rcx,[rsp+0x50]
   1400157fa:	call   QWORD PTR [rip+0xad98]        # 0x140020598
   140015800:	movsxd rdx,DWORD PTR [r14]
   140015803:	cmp    edx,0x69
   140015806:	ja     0x140015906
   14001580c:	mov    rax,rdx
   14001580f:	lea    rdx,[rip+0xfffffffffffea7ea]        # 0x140000000
   140015816:	mov    rdx,QWORD PTR [rdx+rax*8+0x23060]
   14001581e:	test   rdx,rdx
   140015821:	je     0x14001583d
   140015823:	or     rcx,0xffffffffffffffff
   140015827:	xor    eax,eax
   140015829:	mov    rdi,rdx
   14001582c:	repnz scas al,BYTE PTR es:[rdi]
   14001582e:	not    rcx
   140015831:	dec    rcx
   140015834:	mov    DWORD PTR [rsp+0x180],ecx
   14001583b:	jmp    0x140015845
   14001583d:	mov    DWORD PTR [rsp+0x180],r12d
   140015845:	mov    QWORD PTR [rsp+0x188],rdx
   14001584d:	movaps xmm0,XMMWORD PTR [rsp+0x180]
   140015855:	lea    rcx,[rsp+0x100]
   14001585d:	lea    rdx,[rsp+0x330]
   140015865:	movdqa XMMWORD PTR [rsp+0x330],xmm0
   14001586e:	call   QWORD PTR [rip+0xacc4]        # 0x140020538
   140015874:	lea    rcx,[rsp+0x410]
   14001587c:	mov    dl,0x20
   14001587e:	call   QWORD PTR [rip+0xaf0c]        # 0x140020790
   140015884:	lea    r8,[rip+0xd19d]        # 0x140022a28
   14001588b:	lea    rdx,[rip+0xd186]        # 0x140022a18
   140015892:	lea    rcx,[rsp+0x168]
   14001589a:	xor    r9d,r9d
   14001589d:	mov    DWORD PTR [rsp+0x20],0xffffffff
   1400158a5:	mov    rdi,rax
   1400158a8:	call   QWORD PTR [rip+0xab9a]        # 0x140020448
   1400158ae:	lea    r8,[rsp+0x100]
   1400158b6:	mov    rcx,rax
   1400158b9:	movzx  eax,WORD PTR [rdi]
   1400158bc:	lea    rdx,[rsp+0x170]
   1400158c4:	xor    r9d,r9d
   1400158c7:	mov    WORD PTR [rsp+0x20],ax
   1400158cc:	call   QWORD PTR [rip+0xab6e]        # 0x140020440
   1400158d2:	lea    rcx,[rsp+0x50]
   1400158d7:	mov    rdx,rax
   1400158da:	call   QWORD PTR [rip+0xac88]        # 0x140020568
   1400158e0:	lea    rcx,[rsp+0x170]
   1400158e8:	call   QWORD PTR [rip+0xae92]        # 0x140020780
   1400158ee:	lea    rcx,[rsp+0x168]
   1400158f6:	call   QWORD PTR [rip+0xae84]        # 0x140020780
   1400158fc:	lea    rcx,[rsp+0x100]
   140015904:	jmp    0x140015943
   140015906:	lea    r8,[rip+0xd0fb]        # 0x140022a08
   14001590d:	lea    rdx,[rip+0xd104]        # 0x140022a18
   140015914:	lea    rcx,[rsp+0x160]
   14001591c:	xor    r9d,r9d
   14001591f:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140015927:	call   QWORD PTR [rip+0xab1b]        # 0x140020448
   14001592d:	lea    rcx,[rsp+0x50]
   140015932:	mov    rdx,rax
   140015935:	call   QWORD PTR [rip+0xac2d]        # 0x140020568
   14001593b:	lea    rcx,[rsp+0x160]
   140015943:	call   QWORD PTR [rip+0xae37]        # 0x140020780
   140015949:	mov    DWORD PTR [rsp+0x1a0],0x1
   140015954:	mov    eax,DWORD PTR [rbp+0x88]
   14001595a:	lea    rcx,[rsp+0x1a4]
   140015962:	lea    rdx,[rsp+0x50]
   140015967:	mov    DWORD PTR [rcx],eax
   140015969:	mov    eax,DWORD PTR [rbp+0x8c]
   14001596f:	mov    DWORD PTR [rcx+0x4],eax
   140015972:	mov    eax,DWORD PTR [rbp+0x90]
   140015978:	mov    DWORD PTR [rcx+0x8],eax
   14001597b:	mov    eax,DWORD PTR [rbp+0x94]
   140015981:	mov    DWORD PTR [rcx+0xc],eax
   140015984:	lea    rcx,[rsp+0x1b8]
   14001598c:	call   QWORD PTR [rip+0xae06]        # 0x140020798
   140015992:	mov    rax,QWORD PTR [rbp+0x118]
   140015999:	mov    ecx,DWORD PTR [rax]
   14001599b:	cmp    ecx,0x1
   14001599e:	je     0x1400159bd
   1400159a0:	test   ecx,ecx
   1400159a2:	je     0x1400159bd
   1400159a4:	lea    rcx,[rbp+0x118]
   1400159ab:	mov    edx,0x7fffffff
   1400159b0:	mov    r8d,0x1
   1400159b6:	call   0x14000f090
   1400159bb:	jmp    0x1400159ca
   1400159bd:	lea    rcx,[rbp+0x118]
   1400159c4:	call   QWORD PTR [rip+0xac6e]        # 0x140020638
   1400159ca:	lea    r8,[rsp+0x1a0]
   1400159d2:	lea    rcx,[rbp+0x118]
   1400159d9:	mov    rdx,rax
   1400159dc:	call   0x14000e790
   1400159e1:	lea    rcx,[rsp+0x1b8]
   1400159e9:	call   QWORD PTR [rip+0xad91]        # 0x140020780
   1400159ef:	lea    rcx,[rsp+0x50]
   1400159f4:	call   QWORD PTR [rip+0xad86]        # 0x140020780
   1400159fa:	mov    esi,DWORD PTR [rsp+0x30]
   1400159fe:	jmp    0x14001569c
   140015a03:	mov    ecx,DWORD PTR [rip+0x1cb07]        # 0x140032510
   140015a09:	lea    rbx,[rip+0x1cb00]        # 0x140032510
   140015a10:	test   ecx,ecx
   140015a12:	je     0x140015a9d
   140015a18:	movsx  edi,WORD PTR [r8+r13*2+0x23f70]
   140015a21:	lea    eax,[rdi+rcx*1]
   140015a24:	test   eax,eax
   140015a26:	js     0x140015a43
   140015a28:	movsxd rdx,eax
   140015a2b:	movsx  eax,WORD PTR [r8+rdx*2+0x26620]
   140015a34:	cmp    eax,ecx
   140015a36:	jne    0x140015a43
   140015a38:	movsx  eax,WORD PTR [r8+rdx*2+0x249e0]
   140015a41:	jmp    0x140015a4e
   140015a43:	movsx  eax,WORD PTR [r8+r13*2+0x23950]
   140015a4c:	neg    eax
   140015a4e:	test   eax,eax
   140015a50:	jle    0x140015a92
   140015a52:	movsxd rdx,eax
   140015a55:	movsx  eax,WORD PTR [r8+rdx*2+0x23f70]
   140015a5e:	add    eax,r15d
   140015a61:	js     0x140015a7f
   140015a63:	movsxd rcx,eax
   140015a66:	movsx  eax,WORD PTR [r8+rcx*2+0x26620]
   140015a6f:	cmp    eax,r15d
   140015a72:	jne    0x140015a7f
   140015a74:	movsx  eax,WORD PTR [r8+rcx*2+0x249e0]
   140015a7d:	jmp    0x140015a8a
   140015a7f:	movsx  eax,WORD PTR [r8+rdx*2+0x23950]
   140015a88:	neg    eax
   140015a8a:	test   eax,eax
   140015a8c:	jne    0x140015b14
   140015a92:	mov    ecx,DWORD PTR [rbx+0x4]
   140015a95:	add    rbx,0x4
   140015a99:	test   ecx,ecx
   140015a9b:	jne    0x140015a21
   140015a9d:	mov    ebx,0x1
   140015aa2:	mov    rdi,rbx
   140015aa5:	cmp    rdi,0x6a
   140015aa9:	jge    0x140016212
   140015aaf:	cmp    rdi,0x3e
   140015ab3:	je     0x140015d1a
   140015ab9:	cmp    rdi,0x62
   140015abd:	je     0x140015d1a
   140015ac3:	cmp    rdi,0x64
   140015ac7:	je     0x140015d1a
   140015acd:	cmp    rdi,0x65
   140015ad1:	je     0x140015d1a
   140015ad7:	cmp    rdi,0x66
   140015adb:	je     0x140015d1a
   140015ae1:	movsx  eax,WORD PTR [r8+r13*2+0x23f70]
   140015aea:	add    eax,ebx
   140015aec:	js     0x140015cf8
   140015af2:	movsxd rcx,eax
   140015af5:	movsx  eax,WORD PTR [r8+rcx*2+0x26620]
   140015afe:	cmp    eax,ebx
   140015b00:	jne    0x140015cf8
   140015b06:	movsx  ecx,WORD PTR [r8+rcx*2+0x249e0]
   140015b0f:	jmp    0x140015d03
   140015b14:	movsxd rax,DWORD PTR [rbx]
   140015b17:	mov    rdx,QWORD PTR [r8+rax*8+0x23060]
   140015b1f:	test   rdx,rdx
   140015b22:	je     0x140015b3e
   140015b24:	or     rcx,0xffffffffffffffff
   140015b28:	xor    eax,eax
   140015b2a:	mov    rdi,rdx
   140015b2d:	repnz scas al,BYTE PTR es:[rdi]
   140015b2f:	not    rcx
   140015b32:	dec    rcx
   140015b35:	mov    DWORD PTR [rsp+0x110],ecx
   140015b3c:	jmp    0x140015b46
   140015b3e:	mov    DWORD PTR [rsp+0x110],r12d
   140015b46:	mov    QWORD PTR [rsp+0x118],rdx
   140015b4e:	movaps xmm0,XMMWORD PTR [rsp+0x110]
   140015b56:	lea    rcx,[rsp+0xd8]
   140015b5e:	lea    rdx,[rsp+0x350]
   140015b66:	movdqa XMMWORD PTR [rsp+0x350],xmm0
   140015b6f:	call   QWORD PTR [rip+0xa9c3]        # 0x140020538
   140015b75:	lea    rcx,[rsp+0x420]
   140015b7d:	mov    dl,0x20
   140015b7f:	call   QWORD PTR [rip+0xac0b]        # 0x140020790
   140015b85:	lea    r8,[rip+0xce64]        # 0x1400229f0
   140015b8c:	lea    rdx,[rip+0xce85]        # 0x140022a18
   140015b93:	lea    rcx,[rsp+0x128]
   140015b9b:	xor    r9d,r9d
   140015b9e:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140015ba6:	mov    rdi,rax
   140015ba9:	call   QWORD PTR [rip+0xa899]        # 0x140020448
   140015baf:	lea    r8,[rsp+0xd8]
   140015bb7:	mov    rcx,rax
   140015bba:	movzx  eax,WORD PTR [rdi]
   140015bbd:	lea    rdx,[rsp+0xa0]
   140015bc5:	xor    r9d,r9d
   140015bc8:	mov    WORD PTR [rsp+0x20],ax
   140015bcd:	call   QWORD PTR [rip+0xa86d]        # 0x140020440
   140015bd3:	lea    rcx,[rsp+0x128]
   140015bdb:	call   QWORD PTR [rip+0xab9f]        # 0x140020780
   140015be1:	lea    rcx,[rsp+0xd8]
   140015be9:	call   QWORD PTR [rip+0xab91]        # 0x140020780
   140015bef:	mov    DWORD PTR [rsp+0x1f0],0x1
   140015bfa:	mov    eax,DWORD PTR [rbp+0x88]
   140015c00:	lea    rcx,[rsp+0x1f4]
   140015c08:	lea    rdx,[rsp+0xa0]
   140015c10:	mov    DWORD PTR [rcx],eax
   140015c12:	mov    eax,DWORD PTR [rbp+0x8c]
   140015c18:	mov    DWORD PTR [rcx+0x4],eax
   140015c1b:	mov    eax,DWORD PTR [rbp+0x90]
   140015c21:	mov    DWORD PTR [rcx+0x8],eax
   140015c24:	mov    eax,DWORD PTR [rbp+0x94]
   140015c2a:	mov    DWORD PTR [rcx+0xc],eax
   140015c2d:	lea    rcx,[rsp+0x208]
   140015c35:	call   QWORD PTR [rip+0xab5d]        # 0x140020798
   140015c3b:	mov    rax,QWORD PTR [rbp+0x118]
   140015c42:	mov    ecx,DWORD PTR [rax]
   140015c44:	cmp    ecx,0x1
   140015c47:	je     0x140015c66
   140015c49:	test   ecx,ecx
   140015c4b:	je     0x140015c66
   140015c4d:	lea    rcx,[rbp+0x118]
   140015c54:	mov    edx,0x7fffffff
   140015c59:	mov    r8d,0x1
   140015c5f:	call   0x14000f090
   140015c64:	jmp    0x140015c73
   140015c66:	lea    rcx,[rbp+0x118]
   140015c6d:	call   QWORD PTR [rip+0xa9c5]        # 0x140020638
   140015c73:	lea    r8,[rsp+0x1f0]
   140015c7b:	lea    rcx,[rbp+0x118]
   140015c82:	mov    rdx,rax
   140015c85:	call   0x14000e790
   140015c8a:	lea    rcx,[rsp+0x208]
   140015c92:	call   QWORD PTR [rip+0xaae8]        # 0x140020780
   140015c98:	mov    r15d,DWORD PTR [rbx]
   140015c9b:	mov    QWORD PTR [rbp+0x40],r12
   140015c9f:	mov    eax,DWORD PTR [rbp+0x88]
   140015ca5:	lea    rcx,[rsp+0xa0]
   140015cad:	mov    DWORD PTR [rbp+0x58],eax
   140015cb0:	mov    eax,DWORD PTR [rbp+0x8c]
   140015cb6:	mov    DWORD PTR [rbp+0x5c],eax
   140015cb9:	mov    eax,DWORD PTR [rbp+0x90]
   140015cbf:	mov    DWORD PTR [rbp+0x60],eax
   140015cc2:	mov    eax,DWORD PTR [rbp+0x94]
   140015cc8:	mov    DWORD PTR [rbp+0x64],eax
   140015ccb:	mov    DWORD PTR [rbp+0x5c],r12d
   140015ccf:	lea    rax,[rbp+0xd8]
   140015cd6:	mov    QWORD PTR [rbp+0x108],r14
   140015cdd:	mov    QWORD PTR [rbp+0x110],rax
   140015ce4:	call   QWORD PTR [rip+0xaa96]        # 0x140020780
   140015cea:	mov    esi,DWORD PTR [rsp+0x30]
   140015cee:	mov    rbx,QWORD PTR [rsp+0x38]
   140015cf3:	jmp    0x14001569c
   140015cf8:	movsx  ecx,WORD PTR [r8+r13*2+0x23950]
   140015d01:	neg    ecx
   140015d03:	test   ecx,ecx
   140015d05:	jle    0x140015d1a
   140015d07:	mov    edx,r15d
   140015d0a:	call   0x14000cd90
   140015d0f:	test   eax,eax
   140015d11:	jne    0x140015d24
   140015d13:	lea    r8,[rip+0xfffffffffffea2e6]        # 0x140000000
   140015d1a:	inc    ebx
   140015d1c:	inc    rdi
   140015d1f:	jmp    0x140015aa5
   140015d24:	lea    rdx,[rip+0xfffffffffffea2d5]        # 0x140000000
   140015d2b:	mov    rdx,QWORD PTR [rdx+rdi*8+0x23060]
   140015d33:	test   rdx,rdx
   140015d36:	je     0x140015d52
   140015d38:	or     rcx,0xffffffffffffffff
   140015d3c:	xor    eax,eax
   140015d3e:	mov    rdi,rdx
   140015d41:	repnz scas al,BYTE PTR es:[rdi]
   140015d43:	not    rcx
   140015d46:	dec    rcx
   140015d49:	mov    DWORD PTR [rsp+0x150],ecx
   140015d50:	jmp    0x140015d5a
   140015d52:	mov    DWORD PTR [rsp+0x150],r12d
   140015d5a:	mov    QWORD PTR [rsp+0x158],rdx
   140015d62:	movaps xmm0,XMMWORD PTR [rsp+0x150]
   140015d6a:	lea    rcx,[rsp+0xf8]
   140015d72:	lea    rdx,[rsp+0x70]
   140015d77:	movdqa XMMWORD PTR [rsp+0x70],xmm0
   140015d7d:	call   QWORD PTR [rip+0xa7b5]        # 0x140020538
   140015d83:	lea    rcx,[rsp+0x428]
   140015d8b:	mov    dl,0x20
   140015d8d:	call   QWORD PTR [rip+0xa9fd]        # 0x140020790
   140015d93:	lea    r8,[rip+0xcc56]        # 0x1400229f0
   140015d9a:	lea    rdx,[rip+0xcc77]        # 0x140022a18
   140015da1:	lea    rcx,[rsp+0x138]
   140015da9:	xor    r9d,r9d
   140015dac:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140015db4:	mov    rdi,rax
   140015db7:	call   QWORD PTR [rip+0xa68b]        # 0x140020448
   140015dbd:	lea    r8,[rsp+0xf8]
   140015dc5:	mov    rcx,rax
   140015dc8:	movzx  eax,WORD PTR [rdi]
   140015dcb:	lea    rdx,[rsp+0xc8]
   140015dd3:	xor    r9d,r9d
   140015dd6:	mov    WORD PTR [rsp+0x20],ax
   140015ddb:	call   QWORD PTR [rip+0xa65f]        # 0x140020440
   140015de1:	lea    rcx,[rsp+0x138]
   140015de9:	call   QWORD PTR [rip+0xa991]        # 0x140020780
   140015def:	lea    rcx,[rsp+0xf8]
   140015df7:	call   QWORD PTR [rip+0xa983]        # 0x140020780
   140015dfd:	mov    DWORD PTR [rsp+0x270],0x1
   140015e08:	mov    eax,DWORD PTR [rbp+0x88]
   140015e0e:	lea    rcx,[rsp+0x274]
   140015e16:	lea    rdx,[rsp+0xc8]
   140015e1e:	mov    DWORD PTR [rcx],eax
   140015e20:	mov    eax,DWORD PTR [rbp+0x8c]
   140015e26:	mov    DWORD PTR [rcx+0x4],eax
   140015e29:	mov    eax,DWORD PTR [rbp+0x90]
   140015e2f:	mov    DWORD PTR [rcx+0x8],eax
   140015e32:	mov    eax,DWORD PTR [rbp+0x94]
   140015e38:	mov    DWORD PTR [rcx+0xc],eax
   140015e3b:	lea    rcx,[rsp+0x288]
   140015e43:	call   QWORD PTR [rip+0xa94f]        # 0x140020798
   140015e49:	lea    rcx,[rbp+0x118]
   140015e50:	lea    rdx,[rsp+0x270]
   140015e58:	call   0x14000f2e0
   140015e5d:	lea    rcx,[rsp+0x288]
   140015e65:	call   QWORD PTR [rip+0xa915]        # 0x140020780
   140015e6b:	mov    QWORD PTR [rbp+0x40],r12
   140015e6f:	mov    eax,DWORD PTR [rbp+0x88]
   140015e75:	mov    DWORD PTR [rbp+0x58],eax
   140015e78:	mov    eax,DWORD PTR [rbp+0x8c]
   140015e7e:	lea    rcx,[rsp+0xc8]
   140015e86:	mov    DWORD PTR [rbp+0x5c],eax
   140015e89:	mov    eax,DWORD PTR [rbp+0x90]
   140015e8f:	mov    r15d,ebx
   140015e92:	mov    DWORD PTR [rbp+0x60],eax
   140015e95:	mov    eax,DWORD PTR [rbp+0x94]
   140015e9b:	mov    DWORD PTR [rbp+0x64],eax
   140015e9e:	mov    DWORD PTR [rbp+0x5c],r12d
   140015ea2:	call   QWORD PTR [rip+0xa8d8]        # 0x140020780
   140015ea8:	mov    esi,DWORD PTR [rsp+0x30]
   140015eac:	mov    rbx,QWORD PTR [rsp+0x38]
   140015eb1:	jmp    0x14001569c
   140015eb6:	movzx  eax,BYTE PTR [rsp+0x418]
   140015ebe:	dec    DWORD PTR [rbp+0x10]
   140015ec1:	test   al,al
   140015ec3:	sete   al
   140015ec6:	jmp    0x1400162ea
   140015ecb:	or     rcx,0xffffffffffffffff
   140015ecf:	lea    rdx,[rip+0xcafa]        # 0x1400229d0
   140015ed6:	xor    eax,eax
   140015ed8:	mov    rdi,rdx
   140015edb:	mov    QWORD PTR [rsp+0x48],rdx
   140015ee0:	lea    rdx,[rsp+0x70]
   140015ee5:	repnz scas al,BYTE PTR es:[rdi]
   140015ee7:	not    rcx
   140015eea:	dec    rcx
   140015eed:	mov    DWORD PTR [rsp+0x40],ecx
   140015ef1:	lea    rcx,[rsp+0xe8]
   140015ef9:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140015efe:	movdqa XMMWORD PTR [rsp+0x70],xmm0
   140015f04:	call   QWORD PTR [rip+0xa62e]        # 0x140020538
   140015f0a:	movsxd rdx,DWORD PTR [rbp+0x10]
   140015f0e:	lea    rcx,[rsp+0x234]
   140015f16:	shl    rdx,0x4
   140015f1a:	add    rdx,QWORD PTR [rbp+0x28]
   140015f1e:	mov    DWORD PTR [rsp+0x230],0x1
   140015f29:	mov    eax,DWORD PTR [rdx]
   140015f2b:	mov    DWORD PTR [rcx],eax
   140015f2d:	mov    eax,DWORD PTR [rdx+0x4]
   140015f30:	mov    DWORD PTR [rcx+0x4],eax
   140015f33:	mov    eax,DWORD PTR [rdx+0x8]
   140015f36:	mov    DWORD PTR [rcx+0x8],eax
   140015f39:	mov    eax,DWORD PTR [rdx+0xc]
   140015f3c:	lea    rdx,[rsp+0xe8]
   140015f44:	mov    DWORD PTR [rcx+0xc],eax
   140015f47:	lea    rcx,[rsp+0x248]
   140015f4f:	call   QWORD PTR [rip+0xa843]        # 0x140020798
   140015f55:	lea    rcx,[rbp+0x118]
   140015f5c:	lea    rdx,[rsp+0x230]
   140015f64:	call   0x14000f2e0
   140015f69:	lea    rcx,[rsp+0x248]
   140015f71:	call   QWORD PTR [rip+0xa809]        # 0x140020780
   140015f77:	lea    rcx,[rsp+0xe8]
   140015f7f:	jmp    0x1400162e2
   140015f84:	or     rcx,0xffffffffffffffff
   140015f88:	lea    rdx,[rip+0xca09]        # 0x140022998
   140015f8f:	xor    eax,eax
   140015f91:	mov    rdi,rdx
   140015f94:	mov    QWORD PTR [rsp+0x48],rdx
   140015f99:	lea    rdx,[rsp+0x70]
   140015f9e:	repnz scas al,BYTE PTR es:[rdi]
   140015fa0:	not    rcx
   140015fa3:	dec    rcx
   140015fa6:	mov    DWORD PTR [rsp+0x40],ecx
   140015faa:	lea    rcx,[rsp+0xa8]
   140015fb2:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140015fb7:	movdqa XMMWORD PTR [rsp+0x70],xmm0
   140015fbd:	call   QWORD PTR [rip+0xa575]        # 0x140020538
   140015fc3:	movsxd rdx,DWORD PTR [rbp+0x10]
   140015fc7:	lea    rcx,[rsp+0x254]
   140015fcf:	shl    rdx,0x4
   140015fd3:	add    rdx,QWORD PTR [rbp+0x28]
   140015fd7:	mov    DWORD PTR [rsp+0x250],0x1
   140015fe2:	mov    eax,DWORD PTR [rdx]
   140015fe4:	mov    DWORD PTR [rcx],eax
   140015fe6:	mov    eax,DWORD PTR [rdx+0x4]
   140015fe9:	mov    DWORD PTR [rcx+0x4],eax
   140015fec:	mov    eax,DWORD PTR [rdx+0x8]
   140015fef:	mov    DWORD PTR [rcx+0x8],eax
   140015ff2:	mov    eax,DWORD PTR [rdx+0xc]
   140015ff5:	lea    rdx,[rsp+0xa8]
   140015ffd:	mov    DWORD PTR [rcx+0xc],eax
   140016000:	lea    rcx,[rsp+0x268]
   140016008:	call   QWORD PTR [rip+0xa78a]        # 0x140020798
   14001600e:	lea    rcx,[rbp+0x118]
   140016015:	lea    rdx,[rsp+0x250]
   14001601d:	call   0x14000f2e0
   140016022:	lea    rcx,[rsp+0x268]
   14001602a:	call   QWORD PTR [rip+0xa750]        # 0x140020780
   140016030:	lea    rcx,[rsp+0xa8]
   140016038:	jmp    0x1400162e2
   14001603d:	lea    rdx,[rsp+0x120]
   140016045:	mov    rcx,rbx
   140016048:	call   0x140018420
   14001604d:	lea    rcx,[rsp+0x3b0]
   140016055:	mov    rdx,rbx
   140016058:	mov    rdi,rax
   14001605b:	call   0x14000e610
   140016060:	mov    DWORD PTR [rsp+0x290],0x1
   14001606b:	mov    ecx,DWORD PTR [rax]
   14001606d:	lea    rdx,[rsp+0x294]
   140016075:	mov    DWORD PTR [rdx],ecx
   140016077:	mov    ecx,DWORD PTR [rax+0x4]
   14001607a:	mov    DWORD PTR [rdx+0x4],ecx
   14001607d:	mov    ecx,DWORD PTR [rax+0x8]
   140016080:	mov    DWORD PTR [rdx+0x8],ecx
   140016083:	mov    ecx,DWORD PTR [rax+0xc]
   140016086:	mov    DWORD PTR [rdx+0xc],ecx
   140016089:	lea    rcx,[rsp+0x2a8]
   140016091:	mov    rdx,rdi
   140016094:	call   QWORD PTR [rip+0xa6fe]        # 0x140020798
   14001609a:	lea    rcx,[rbp+0x118]
   1400160a1:	lea    rdx,[rsp+0x290]
   1400160a9:	call   0x14000f2e0
   1400160ae:	lea    rcx,[rsp+0x2a8]
   1400160b6:	call   QWORD PTR [rip+0xa6c4]        # 0x140020780
   1400160bc:	lea    rcx,[rsp+0x120]
   1400160c4:	jmp    0x1400162e2
   1400160c9:	lea    rdx,[rsp+0x130]
   1400160d1:	mov    rcx,rbx
   1400160d4:	call   0x140018420
   1400160d9:	lea    rcx,[rsp+0x390]
   1400160e1:	mov    rdx,rbx
   1400160e4:	mov    rdi,rax
   1400160e7:	call   0x14000e610
   1400160ec:	mov    DWORD PTR [rsp+0x2d0],0x1
   1400160f7:	mov    ecx,DWORD PTR [rax]
   1400160f9:	lea    rdx,[rsp+0x2d4]
   140016101:	mov    DWORD PTR [rdx],ecx
   140016103:	mov    ecx,DWORD PTR [rax+0x4]
   140016106:	mov    DWORD PTR [rdx+0x4],ecx
   140016109:	mov    ecx,DWORD PTR [rax+0x8]
   14001610c:	mov    DWORD PTR [rdx+0x8],ecx
   14001610f:	mov    ecx,DWORD PTR [rax+0xc]
   140016112:	mov    DWORD PTR [rdx+0xc],ecx
   140016115:	lea    rcx,[rsp+0x2e8]
   14001611d:	mov    rdx,rdi
   140016120:	call   QWORD PTR [rip+0xa672]        # 0x140020798
   140016126:	lea    rcx,[rbp+0x118]
   14001612d:	lea    rdx,[rsp+0x2d0]
   140016135:	call   0x14000f2e0
   14001613a:	lea    rcx,[rsp+0x2e8]
   140016142:	call   QWORD PTR [rip+0xa638]        # 0x140020780
   140016148:	lea    rcx,[rsp+0x130]
   140016150:	jmp    0x1400162e2
   140016155:	mov    QWORD PTR [rax+rcx*8],r12
   140016159:	or     rcx,0xffffffffffffffff
   14001615d:	lea    rdx,[rip+0xc86c]        # 0x1400229d0
   140016164:	mov    rdi,rdx
   140016167:	mov    QWORD PTR [rsp+0x48],rdx
   14001616c:	xor    eax,eax
   14001616e:	repnz scas al,BYTE PTR es:[rdi]
   140016170:	lea    rdx,[rsp+0x70]
   140016175:	not    rcx
   140016178:	dec    rcx
   14001617b:	mov    DWORD PTR [rsp+0x40],ecx
   14001617f:	lea    rcx,[rsp+0xb0]
   140016187:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   14001618c:	movdqa XMMWORD PTR [rsp+0x70],xmm0
   140016192:	call   QWORD PTR [rip+0xa3a0]        # 0x140020538
   140016198:	movsxd rdx,DWORD PTR [rbp+0x10]
   14001619c:	lea    rcx,[rsp+0x2b4]
   1400161a4:	shl    rdx,0x4
   1400161a8:	add    rdx,QWORD PTR [rbp+0x28]
   1400161ac:	mov    DWORD PTR [rsp+0x2b0],0x1
   1400161b7:	mov    eax,DWORD PTR [rdx]
   1400161b9:	mov    DWORD PTR [rcx],eax
   1400161bb:	mov    eax,DWORD PTR [rdx+0x4]
   1400161be:	mov    DWORD PTR [rcx+0x4],eax
   1400161c1:	mov    eax,DWORD PTR [rdx+0x8]
   1400161c4:	mov    DWORD PTR [rcx+0x8],eax
   1400161c7:	mov    eax,DWORD PTR [rdx+0xc]
   1400161ca:	lea    rdx,[rsp+0xb0]
   1400161d2:	mov    DWORD PTR [rcx+0xc],eax
   1400161d5:	lea    rcx,[rsp+0x2c8]
   1400161dd:	call   QWORD PTR [rip+0xa5b5]        # 0x140020798
   1400161e3:	lea    rcx,[rbp+0x118]
   1400161ea:	lea    rdx,[rsp+0x2b0]
   1400161f2:	call   0x14000f2e0
   1400161f7:	lea    rcx,[rsp+0x2c8]
   1400161ff:	call   QWORD PTR [rip+0xa57b]        # 0x140020780
   140016205:	lea    rcx,[rsp+0xb0]
   14001620d:	jmp    0x1400162e2
   140016212:	lea    r8,[rip+0xc7ef]        # 0x140022a08
   140016219:	lea    rdx,[rip+0xc7f8]        # 0x140022a18
   140016220:	lea    rcx,[rsp+0xc0]
   140016228:	xor    r9d,r9d
   14001622b:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140016233:	call   QWORD PTR [rip+0xa20f]        # 0x140020448
   140016239:	mov    DWORD PTR [rsp+0x1d0],0x1
   140016244:	mov    eax,DWORD PTR [rbp+0x88]
   14001624a:	lea    rcx,[rsp+0x1d4]
   140016252:	lea    rdx,[rsp+0xc0]
   14001625a:	mov    DWORD PTR [rcx],eax
   14001625c:	mov    eax,DWORD PTR [rbp+0x8c]
   140016262:	mov    DWORD PTR [rcx+0x4],eax
   140016265:	mov    eax,DWORD PTR [rbp+0x90]
   14001626b:	mov    DWORD PTR [rcx+0x8],eax
   14001626e:	mov    eax,DWORD PTR [rbp+0x94]
   140016274:	mov    DWORD PTR [rcx+0xc],eax
   140016277:	lea    rcx,[rsp+0x1e8]
   14001627f:	call   QWORD PTR [rip+0xa513]        # 0x140020798
   140016285:	add    rbp,0x118
   14001628c:	mov    rax,QWORD PTR [rbp+0x0]
   140016290:	mov    ecx,DWORD PTR [rax]
   140016292:	cmp    ecx,0x1
   140016295:	je     0x1400162b0
   140016297:	test   ecx,ecx
   140016299:	je     0x1400162b0
   14001629b:	mov    edx,0x7fffffff
   1400162a0:	mov    r8d,0x1
   1400162a6:	mov    rcx,rbp
   1400162a9:	call   0x14000f090
   1400162ae:	jmp    0x1400162b9
   1400162b0:	mov    rcx,rbp
   1400162b3:	call   QWORD PTR [rip+0xa37f]        # 0x140020638
   1400162b9:	lea    r8,[rsp+0x1d0]
   1400162c1:	mov    rdx,rax
   1400162c4:	mov    rcx,rbp
   1400162c7:	call   0x14000e790
   1400162cc:	lea    rcx,[rsp+0x1e8]
   1400162d4:	call   QWORD PTR [rip+0xa4a6]        # 0x140020780
   1400162da:	lea    rcx,[rsp+0xc0]
   1400162e2:	call   QWORD PTR [rip+0xa498]        # 0x140020780
   1400162e8:	xor    al,al
   1400162ea:	add    rsp,0x3c8
   1400162f1:	pop    r15
   1400162f3:	pop    r14
   1400162f5:	pop    r13
   1400162f7:	pop    r12
   1400162f9:	pop    rdi
   1400162fa:	pop    rsi
   1400162fb:	pop    rbp
   1400162fc:	pop    rbx
   1400162fd:	ret    
   1400162fe:	xchg   ax,ax
   140016300:	(bad)  
   140016301:	clc    
   140016302:	add    BYTE PTR [rax],al
   140016304:	mov    cl,0xf8
   140016306:	add    BYTE PTR [rax],al
   140016308:	rex.W stc 
   14001630a:	add    BYTE PTR [rax],al
   14001630c:	imul   edi,ecx,0xf9c10000
   140016312:	add    BYTE PTR [rax],al
   140016314:	or     edi,edx
   140016316:	add    BYTE PTR [rax],al
   140016318:	rex.X cli 
   14001631a:	add    BYTE PTR [rax],al
   14001631c:	test   edx,edi
   14001631e:	add    BYTE PTR [rax],al
   140016320:	leave  
   140016321:	cli    
   140016322:	add    BYTE PTR [rax],al
   140016324:	scas   eax,DWORD PTR es:[rdi]
   140016325:	sti    
   140016326:	add    BYTE PTR [rax],al
   140016328:	pop    rdi
   140016329:	cld    
   14001632a:	add    BYTE PTR [rax],al
   14001632c:	(bad)  
   14001632d:	std    
   14001632e:	add    BYTE PTR [rax],al
   140016330:	or     BYTE PTR [rbp+0x1],dl
   140016333:	add    dl,bh
   140016335:	std    
   140016336:	add    BYTE PTR [rax],al
   140016338:	inc    BYTE PTR ds:[rax]
   14001633b:	add    BYTE PTR [rdi-0x1cffff02],cl
   140016341:	inc    BYTE PTR [rax]
   140016343:	add    BYTE PTR [rsi-0x1],ch
   140016346:	add    BYTE PTR [rax],al
   140016348:	adc    al,BYTE PTR [rax]
   14001634a:	add    DWORD PTR [rax],eax
   14001634c:	int3   
   14001634d:	add    BYTE PTR [rcx],al
   14001634f:	add    BYTE PTR [rax+0x1],al
   140016352:	add    DWORD PTR [rax],eax
   140016354:	add    al,BYTE PTR [ecx]
   140016357:	add    BYTE PTR [rdi],cl
   140016359:	add    eax,DWORD PTR [rcx]
   14001635b:	add    BYTE PTR [rbx+rax*1+0x4440001],bh
   140016362:	add    DWORD PTR [rax],eax
   140016364:	gs add al,0x1
   140016367:	add    dh,bh
   140016369:	add    al,0x1
   14001636b:	add    bl,dl
   14001636d:	add    eax,0x72b0001
   140016372:	add    DWORD PTR [rax],eax
   140016374:	jb     0x14001637e
   140016376:	add    DWORD PTR [rax],eax
   140016378:	loope  0x140016383
   14001637a:	add    DWORD PTR [rax],eax
   14001637c:	add    BYTE PTR [rbx],cl
   14001637e:	add    DWORD PTR [rax],eax
   140016380:	rex.WRB or al,0x1
   140016383:	add    BYTE PTR [rdx+0xd],bh
   140016386:	add    DWORD PTR [rax],eax
   140016388:	fisttp DWORD PTR [rsi]
   14001638a:	add    DWORD PTR [rax],eax
   14001638c:	pop    rdi
   14001638d:	sgdt   [rax]
   140016390:	ins    DWORD PTR es:[rdi],dx
   140016391:	adc    al,BYTE PTR [rcx]
   140016393:	add    cl,al
   140016395:	adc    al,0x1
   140016397:	add    al,ch
   140016399:	(bad)  
   14001639a:	add    DWORD PTR [rax],eax
   14001639c:	sub    BYTE PTR [rdi],dl
   14001639e:	add    DWORD PTR [rax],eax
   1400163a0:	(bad)  
   1400163a1:	(bad)  
   1400163a2:	add    DWORD PTR [rax],eax
   1400163a4:	adc    BYTE PTR [rax],bl
   1400163a6:	add    DWORD PTR [rax],eax
   1400163a8:	push   rax
   1400163a9:	sbb    BYTE PTR [rcx],al
   1400163ab:	add    BYTE PTR [rax-0x2ffffee8],dl
   1400163b1:	sbb    BYTE PTR [rcx],al
   1400163b3:	add    BYTE PTR [rcx+0x19],cl
   1400163b6:	add    DWORD PTR [rax],eax
   1400163b8:	movabs ds:0xce00011ab7000119,eax
   1400163c1:	sbb    eax,DWORD PTR [rcx]
   1400163c3:	add    BYTE PTR [rsi+0x1600011c],al
   1400163c9:	sbb    eax,0x1d510001
   1400163ce:	add    DWORD PTR [rax],eax
   1400163d0:	rex.WB (bad) 
   1400163d2:	add    DWORD PTR [rax],eax
   1400163d4:	sbb    BYTE PTR [rdi],bl
   1400163d6:	add    DWORD PTR [rax],eax
   1400163d8:	rcr    BYTE PTR [rdi],1
   1400163da:	add    DWORD PTR [rax],eax
   1400163dc:	push   0xffffffffc9000120
   1400163e1:	and    BYTE PTR [rcx],al
   1400163e3:	add    bl,bl
   1400163e5:	and    DWORD PTR [rcx],eax
   1400163e7:	add    BYTE PTR [rbx],dh
   1400163e9:	and    al,BYTE PTR [rcx]
   1400163eb:	add    BYTE PTR [rsi+0x15000122],bl
   1400163f1:	and    eax,DWORD PTR [rcx]
   1400163f3:	add    BYTE PTR [rbp-0x26fffedd],dl
   1400163f9:	and    eax,DWORD PTR [rcx]
   1400163fb:	add    BYTE PTR [rbx+0x24],bl
   1400163fe:	add    DWORD PTR [rax],eax
   140016400:	shl    BYTE PTR [rcx+rax*1],0x0
   140016404:	(bad)  
   140016405:	and    eax,0x26f20001
   14001640a:	add    DWORD PTR [rax],eax
   14001640c:	rex.RX (bad) 
   14001640e:	add    DWORD PTR [rax],eax
   140016410:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140016411:	(bad)  
   140016412:	add    DWORD PTR [rax],eax
   140016414:	add    al,0x28
   140016416:	add    DWORD PTR [rax],eax
   140016418:	(bad)  
   140016419:	sub    BYTE PTR [rcx],al
   14001641b:	add    BYTE PTR [rbx-0x73fffed8],dh
   140016421:	sub    DWORD PTR [rcx],eax
   140016423:	add    BYTE PTR [rdx+rbp*1],ah
   140016426:	add    DWORD PTR [rax],eax
   140016428:	imul   ebp,DWORD PTR [rdx],0x2aba0001
   14001642e:	add    DWORD PTR [rax],eax
   140016430:	and    al,0x2b
   140016432:	add    DWORD PTR [rax],eax
   140016434:	js     0x140016461
   140016436:	add    DWORD PTR [rax],eax
   140016438:	fldcw  WORD PTR [rbx]
   14001643a:	add    DWORD PTR [rax],eax
   14001643c:	sub    DWORD PTR [rcx+rax*1],ebp
   14001643f:	add    BYTE PTR [rcx+0x2c],bh
   140016442:	add    DWORD PTR [rax],eax
   140016444:	retf   0x12c
   140016447:	add    BYTE PTR [rbx],bl
   140016449:	sub    eax,0x2d6c0001
   14001644e:	add    DWORD PTR [rax],eax
   140016450:	mov    ebp,0xe00012d
   140016455:	add    DWORD PTR cs:[rax],eax
   140016458:	pop    rdi
   140016459:	add    DWORD PTR cs:[rax],eax
   14001645c:	mov    al,0x2e
   14001645e:	add    DWORD PTR [rax],eax
   140016460:	add    DWORD PTR [rdi],ebp
   140016462:	add    DWORD PTR [rax],eax
   140016464:	push   rdx
   140016465:	(bad)  
   140016466:	add    DWORD PTR [rax],eax
   140016468:	mov    ah,0x2f
   14001646a:	add    DWORD PTR [rax],eax
   14001646c:	(bad)  
   14001646d:	xor    BYTE PTR [rcx],al
   14001646f:	add    BYTE PTR [rax+0x30],bh
   140016472:	add    DWORD PTR [rax],eax
   140016474:	(bad)  
   140016475:	xor    BYTE PTR [rcx],al
   140016477:	add    BYTE PTR [rax],bh
   140016479:	xor    DWORD PTR [rcx],eax
   14001647b:	add    BYTE PTR [rdx-0x3fffecf],bl
   140016481:	xor    DWORD PTR [rcx],eax
   140016483:	add    BYTE PTR [rsi+0x32],bl
   140016486:	add    DWORD PTR [rax],eax
   140016488:	shl    BYTE PTR [rdx],0x1
   14001648b:	add    BYTE PTR [rdx],ah
   14001648d:	xor    eax,DWORD PTR [rcx]
   14001648f:	add    BYTE PTR [rbx+rsi*1+0x33e60001],al
   140016496:	add    DWORD PTR [rax],eax
   140016498:	rex.W xor al,0x1
   14001649b:	add    BYTE PTR [rdx+0xc000134],ch
   1400164a1:	xor    eax,0x356e0001
   1400164a6:	add    DWORD PTR [rax],eax
   1400164a8:	shl    BYTE PTR [rip+0x36320001],1        # 0x1763364af
   1400164ae:	add    DWORD PTR [rax],eax
   1400164b0:	xchg   esp,eax
   1400164b1:	add    DWORD PTR ss:[rax],eax
   1400164b4:	div    BYTE PTR [rsi]
   1400164b6:	add    DWORD PTR [rax],eax
   1400164b8:	pop    rax
   1400164b9:	(bad)  
   1400164ba:	add    DWORD PTR [rax],eax
   1400164bc:	mov    edx,0x1c000137
   1400164c1:	cmp    BYTE PTR [rcx],al
   1400164c3:	add    BYTE PTR [rdx+0x1c000138],bh
   1400164c9:	cmp    DWORD PTR [rcx],eax
   1400164cb:	add    BYTE PTR [rcx+rdi*1],ch
   1400164ce:	add    DWORD PTR [rax],eax
   1400164d0:	cmp    al,0x39
   1400164d2:	add    DWORD PTR [rax],eax
   1400164d4:	cmp    QWORD PTR [rcx],r8
   1400164d7:	add    BYTE PTR [rcx+rdi*1+0x1],bl
   1400164db:	add    BYTE PTR [rcx+rdi*1+0x1],ch
   1400164df:	add    BYTE PTR [rcx+rdi*1+0x1],bh
   1400164e3:	add    BYTE PTR [rcx+rdi*1+0x399c0001],cl
   1400164ea:	add    DWORD PTR [rax],eax
   1400164ec:	lods   al,BYTE PTR ds:[rsi]
   1400164ed:	cmp    DWORD PTR [rcx],eax
   1400164ef:	add    BYTE PTR [rcx+rdi*1+0x39cc0001],bh
   1400164f6:	add    DWORD PTR [rax],eax
   1400164f8:	fdivr  QWORD PTR [rcx]
   1400164fa:	add    DWORD PTR [rax],eax
   1400164fc:	cmp    al,BYTE PTR ss:[rcx]
   1400164ff:	add    BYTE PTR [rdi-0x24fffec6],dl
   140016505:	cmp    al,BYTE PTR [rcx]
   140016507:	add    BYTE PTR [rbx+rdi*1],ch
   14001650a:	add    DWORD PTR [rax],eax
   14001650c:	add    al,0x3c
   14001650e:	add    DWORD PTR [rax],eax
   140016510:	adc    al,0x3c
   140016512:	add    DWORD PTR [rax],eax
   140016514:	and    al,0x3c
   140016516:	add    DWORD PTR [rax],eax
   140016518:	js     0x140016556
   14001651a:	add    DWORD PTR [rax],eax
   14001651c:	fnstcw WORD PTR [rcx+rax*1]
   14001651f:	add    BYTE PTR [rdx],bh
   140016521:	cmp    eax,0x3da70001
   140016526:	add    DWORD PTR [rax],eax
   140016528:	mov    ecx,0xf900013d
   14001652d:	cmp    eax,0x3e490001
   140016532:	add    DWORD PTR [rax],eax
   140016534:	cmp    al,0x3f
   140016536:	add    DWORD PTR [rax],eax
   140016538:	(bad)  
   140016539:	(bad)  
   14001653a:	add    DWORD PTR [rax],eax
   14001653c:	adc    al,BYTE PTR [rcx+0x1]
   14001653f:	add    cl,dl
   140016541:	add    DWORD PTR [r8],eax
   140016544:	rol    DWORD PTR [rdx+0x1],cl
   140016547:	add    BYTE PTR [rcx],bh
   140016549:	add    DWORD PTR [rax],r8d
   14001654c:	mov    BYTE PTR [rcx+rax*1+0x0],al
   140016550:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140016551:	add    DWORD PTR [r8],r8d
   140016554:	(bad)  
   140016555:	rex.RX add DWORD PTR [rax],r8d
   140016558:	xchg   esi,eax
   140016559:	rex.RX add DWORD PTR [rax],r8d
   14001655c:	stc    
   14001655d:	rex.RX add DWORD PTR [rax],r8d
   140016560:	xor    BYTE PTR [rdi+0x1],al
   140016563:	add    BYTE PTR [rdx+0x47],ch
   140016566:	add    DWORD PTR [rax],eax
   140016568:	(bad)  
   140016569:	add    QWORD PTR [rax],rax
   14001656c:	rex.W
   14001656d:	add    QWORD PTR [rax],rax
   140016570:	add    cl,BYTE PTR [rcx+0x1]
   140016573:	add    BYTE PTR [rdx-0x19fffeb7],ah
   140016579:	add    QWORD PTR [r8],rax
   14001657c:	(bad)  
   14001657d:	rex.WX add QWORD PTR [rax],rax
   140016580:	int    0x4a
   140016582:	add    DWORD PTR [rax],eax
   140016584:	rex.WXB add QWORD PTR ss:[r8],rax
   140016588:	int3   
   140016589:	rex.WXB add QWORD PTR [r8],rax
   14001658c:	(bad)  
   14001658d:	add    QWORD PTR [rax],r8
   140016590:	jno    0x1400165de
   140016592:	add    DWORD PTR [rax],eax
   140016594:	mov    cl,0x4c
   140016596:	add    DWORD PTR [rax],eax
   140016598:	stc    
   140016599:	add    QWORD PTR [rax],r8
   14001659c:	mov    esp,0xd00014d
   1400165a1:	rex.WRX add QWORD PTR [rax],r8
   1400165a4:	test   BYTE PTR [rsi+0x1],cl
   1400165a7:	add    bl,bl
   1400165a9:	rex.WRXB add QWORD PTR [r8],r8
   1400165ac:	rex.WR push rcx
   1400165ae:	add    DWORD PTR [rax],eax
   1400165b0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400165b1:	push   rdx
   1400165b2:	add    DWORD PTR [rax],eax
   1400165b4:	(bad)  
   1400165b5:	push   rdx
   1400165b6:	add    DWORD PTR [rax],eax
   1400165b8:	rex.X push rbx
   1400165ba:	add    DWORD PTR [rax],eax
   1400165bc:	movsxd edx,DWORD PTR [rbx+0x1]
   1400165bf:	add    BYTE PTR [rbx-0xcfffead],ch
   1400165c5:	push   rbx
   1400165c6:	add    DWORD PTR [rax],eax
   1400165c8:	(bad)  
   1400165c9:	push   rsp
   1400165ca:	add    DWORD PTR [rax],eax
   1400165cc:	mov    BYTE PTR [rcx+rax*1+0x0],dl
   1400165d0:	enter  0x154,0x0
   1400165d4:	adc    BYTE PTR [rbp+0x1],dl
   1400165d7:	add    BYTE PTR [rax],al
   1400165d9:	add    BYTE PTR [rax],al
   1400165db:	add    BYTE PTR [rax],al
   1400165dd:	add    BYTE PTR [rcx],al
   1400165df:	mov    ch,0x2
   1400165e1:	add    eax,DWORD PTR [rbx]
   1400165e3:	add    al,0x4
   1400165e5:	mov    ch,0xb5
   1400165e7:	mov    ch,0x5
   1400165e9:	mov    ch,0x6
   1400165eb:	mov    ch,0x7
   1400165ed:	mov    ch,0x8
   1400165ef:	mov    ch,0x9
   1400165f1:	or     cl,BYTE PTR [rbx]
   1400165f3:	or     al,0xd
   1400165f5:	or     eax,0x11100f0e
   1400165fa:	adc    dl,BYTE PTR [rbx]
   1400165fc:	mov    ch,0x14
   1400165fe:	adc    eax,0xb5b5b516
   140016603:	mov    ch,0xb5
   140016605:	mov    ch,0xb5
   140016607:	(bad)  
   140016608:	mov    ch,0xb5
   14001660a:	mov    ch,0xc
   14001660c:	sbb    BYTE PTR [rcx],bl
   14001660e:	sbb    dh,BYTE PTR [rbp-0x4ae34ae5]
   140016614:	sbb    eax,0x1fb51eb5
   140016619:	and    BYTE PTR [rcx],ah
   14001661b:	and    ah,BYTE PTR [rbx]
   14001661d:	and    al,0x25
   14001661f:	es es mov ch,0xb5
   140016623:	mov    ch,0xb5
   140016625:	mov    ch,0xb5
   140016627:	mov    ch,0x27
   140016629:	sub    BYTE PTR [rcx],ch
   14001662b:	sub    ch,BYTE PTR [rbx]
   14001662d:	sub    al,0x2d
   14001662f:	sub    eax,0x31302f2e
   140016634:	xor    dh,BYTE PTR [rbx]
   140016636:	xor    al,0x35
   140016638:	ss (bad) 
   14001663a:	cmp    BYTE PTR [rcx],bh
   14001663c:	cmp    bh,BYTE PTR [rbx]
   14001663e:	cmp    al,0x3d
   140016640:	ds (bad) 
   140016642:	rex
   140016643:	rex.B
   140016644:	rex.X
   140016645:	rex.XB
   140016646:	rex.R
   140016647:	rex.RB
   140016648:	rex.RX
   140016649:	rex.R mov bpl,0xb5
   14001664c:	mov    ch,0xb5
   14001664e:	mov    ch,0xb5
   140016650:	mov    ch,0xb5
   140016652:	mov    ch,0xb5
   140016654:	mov    ch,0xb5
   140016656:	mov    ch,0xb5
   140016658:	mov    ch,0xb5
   14001665a:	mov    ch,0xb5
   14001665c:	mov    ch,0xb5
   14001665e:	mov    ch,0xb5
   140016660:	mov    ch,0xb5
   140016662:	mov    ch,0xb5
   140016664:	mov    ch,0xb5
   140016666:	mov    ch,0xb5
   140016668:	mov    ch,0xb5
   14001666a:	mov    ch,0xb5
   14001666c:	mov    ch,0x47
   14001666e:	rex.W
   14001666f:	rex.WB mov r13b,0x4a
   140016672:	rex.WXB
   140016673:	rex.WXB
   140016674:	rex.RXB
   140016675:	rex.W or al,0x2
   140016678:	rex.WR
   140016679:	rex.WRB mov r13b,0xb5
   14001667c:	mov    ch,0x4e
   14001667e:	rex.WRXB mov r13b,0x50
   140016681:	push   rcx
   140016682:	push   rdx
   140016683:	push   rbx
   140016684:	push   rsp
   140016685:	push   rbp
   140016686:	push   rsi
   140016687:	push   rdi
   140016688:	pop    rax
   140016689:	mov    ch,0x59
   14001668b:	pop    rdx
   14001668c:	pop    rbx
   14001668d:	mov    ch,0x5c
   14001668f:	pop    rbp
   140016690:	mov    ch,0x5e
   140016692:	pop    rdi
   140016693:	(bad)  
   140016694:	mov    ch,0x61
   140016696:	(bad)
   14001669b:	mov    ch,0x61
   14001669d:	(bad)
   1400166a2:	addr32 push 0x67b56a69
   1400166a8:	push   0x6bb56a69
   1400166ad:	mov    ch,0x6b
   1400166af:	mov    ch,0x6c
   1400166b1:	mov    ch,0x6c
   1400166b3:	mov    ch,0x6d
   1400166b5:	mov    ch,0x6d
   1400166b7:	mov    ch,0x6e
   1400166b9:	mov    ch,0x6e
   1400166bb:	mov    ch,0x6f
   1400166bd:	mov    ch,0x6f
   1400166bf:	mov    ch,0x70
   1400166c1:	mov    ch,0x70
   1400166c3:	mov    ch,0x71
   1400166c5:	mov    ch,0x71
   1400166c7:	jb     0x14001673c
   1400166c9:	je     0x140016740
   1400166cb:	jbe    0x140016744
   1400166cd:	js     0x140016748
   1400166cf:	jp     0x14001674c
   1400166d1:	jl     0x140016750
   1400166d3:	mov    ch,0x7e
   1400166d5:	or     al,0xb5
   1400166d7:	mov    ch,0x7e
   1400166d9:	or     al,0xb5
   1400166db:	mov    ch,0xb5
   1400166dd:	mov    ch,0xb5
   1400166df:	mov    ch,0xb5
   1400166e1:	mov    ch,0xb5
   1400166e3:	mov    ch,0xb5
   1400166e5:	mov    ch,0xb5
   1400166e7:	mov    ch,0xb5
   1400166e9:	mov    ch,0x7f
   1400166eb:	add    BYTE PTR [rcx-0x7d4afdf4],0x83
   1400166f2:	test   BYTE PTR [rbp-0x77787a7a],al
   1400166f8:	mov    BYTE PTR [rcx+0xc89b50c],cl
   1400166fe:	mov    ch,0x8a
   140016700:	mov    ch,0x8b
   140016702:	mov    WORD PTR [rbp-0x70714a4b],cs
   140016708:	nop
   140016709:	xchg   ecx,eax
   14001670a:	xchg   edx,eax
   14001670b:	xchg   ebx,eax
   14001670c:	mov    ch,0x94
   14001670e:	mov    ch,0x95
   140016710:	mov    ch,0x96
   140016712:	mov    ch,0x97
   140016714:	mov    ch,0x98
   140016716:	cdq    
   140016717:	(bad)  
   140016718:	fwait
   140016719:	pushf  
   14001671a:	popf   
   14001671b:	sahf   
   14001671c:	or     al,0x2
   14001671e:	lahf   
   14001671f:	movabs al,ds:0xa7a6a5a4a3a2b5a1
   140016728:	mov    ch,0xa8
   14001672a:	mov    ch,0xa9
   14001672c:	stos   BYTE PTR es:[rdi],al
   14001672d:	stos   DWORD PTR es:[rdi],eax
   14001672e:	lods   al,BYTE PTR ds:[rsi]
   14001672f:	lods   eax,DWORD PTR ds:[rsi]
   140016730:	or     al,0xae
   140016732:	or     al,0xb5
   140016734:	scas   eax,DWORD PTR es:[rdi]
   140016735:	mov    ch,0xb0
   140016737:	mov    cl,0xb2
   140016739:	mov    bl,0xb4
   14001673b:	or     al,0xcc
   14001673d:	int3   
   14001673e:	int3   
   14001673f:	int3   
   140016740:	rex push rdi
   140016742:	sub    rsp,0x20
   140016746:	cmp    QWORD PTR [rcx+0x8],0x0
   14001674b:	mov    rdi,rcx
   14001674e:	je     0x1400167a2
   140016750:	mov    QWORD PTR [rsp+0x30],rbx
   140016755:	xor    ebx,ebx
   140016757:	cmp    DWORD PTR [rcx+0x10],ebx
   14001675a:	jle    0x140016793
   14001675c:	mov    QWORD PTR [rsp+0x38],rsi
   140016761:	mov    rsi,rbx
   140016764:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140016770:	mov    rax,QWORD PTR [rdi+0x8]
   140016774:	mov    rcx,QWORD PTR [rsi+rax*1]
   140016778:	test   rcx,rcx
   14001677b:	je     0x140016783
   14001677d:	call   QWORD PTR [rip+0x9a65]        # 0x1400201e8
   140016783:	inc    ebx
   140016785:	add    rsi,0x8
   140016789:	cmp    ebx,DWORD PTR [rdi+0x10]
   14001678c:	jl     0x140016770
   14001678e:	mov    rsi,QWORD PTR [rsp+0x38]
   140016793:	mov    rcx,QWORD PTR [rdi+0x8]
   140016797:	call   QWORD PTR [rip+0x9a4b]        # 0x1400201e8
   14001679d:	mov    rbx,QWORD PTR [rsp+0x30]
   1400167a2:	add    rsp,0x20
   1400167a6:	pop    rdi
   1400167a7:	ret    
   1400167a8:	int3   
   1400167a9:	int3   
   1400167aa:	int3   
   1400167ab:	int3   
   1400167ac:	int3   
   1400167ad:	int3   
   1400167ae:	int3   
   1400167af:	int3   
   1400167b0:	rex push rbx
   1400167b2:	sub    rsp,0x30
   1400167b6:	mov    r11d,r8d
   1400167b9:	mov    rbx,rcx
   1400167bc:	test   edx,edx
   1400167be:	jne    0x1400167cc
   1400167c0:	add    rsp,0x30
   1400167c4:	pop    rbx
   1400167c5:	rex.W jmp QWORD PTR [rip+0x9cb4]        # 0x140020480
   1400167cc:	movzx  eax,BYTE PTR [rbx]
   1400167cf:	movsd  xmm3,QWORD PTR [rip+0xc299]        # 0x140022a70
   1400167d7:	xor    ecx,ecx
   1400167d9:	movaps XMMWORD PTR [rsp+0x20],xmm6
   1400167de:	movapd xmm6,xmm3
   1400167e2:	cmp    al,0x2b
   1400167e4:	jne    0x1400167ed
   1400167e6:	mov    ecx,0x1
   1400167eb:	jmp    0x1400167fe
   1400167ed:	cmp    al,0x2d
   1400167ef:	jne    0x1400167fe
   1400167f1:	movsd  xmm6,QWORD PTR [rip+0xc26f]        # 0x140022a68
   1400167f9:	mov    ecx,0x1
   1400167fe:	mov    eax,edx
   140016800:	sub    eax,ecx
   140016802:	cmp    eax,0x2
   140016805:	jl     0x140016855
   140016807:	movsxd rax,ecx
   14001680a:	cmp    BYTE PTR [rax+rbx*1],0x30
   14001680e:	jne    0x140016855
   140016810:	movzx  eax,BYTE PTR [rax+rbx*1+0x1]
   140016815:	cmp    al,0x78
   140016817:	je     0x14001681d
   140016819:	cmp    al,0x58
   14001681b:	jne    0x140016848
   14001681d:	cmp    r8d,0x22
   140016821:	jge    0x140016848
   140016823:	test   r8d,r8d
   140016826:	je     0x14001683d
   140016828:	cmp    r8d,0x10
   14001682c:	je     0x14001683d
   14001682e:	xorpd  xmm0,xmm0
   140016832:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   140016837:	add    rsp,0x30
   14001683b:	pop    rbx
   14001683c:	ret    
   14001683d:	mov    r11d,0x10
   140016843:	add    ecx,0x2
   140016846:	jmp    0x140016861
   140016848:	test   r8d,r8d
   14001684b:	jne    0x140016861
   14001684d:	lea    r11d,[r8+0x8]
   140016851:	inc    ecx
   140016853:	jmp    0x140016861
   140016855:	mov    eax,0xa
   14001685a:	test   r8d,r8d
   14001685d:	cmove  r11d,eax
   140016861:	mov    QWORD PTR [rsp+0x40],rdi
   140016866:	movsxd rdi,ecx
   140016869:	movsxd r9,edx
   14001686c:	cmp    rdi,r9
   14001686f:	mov    r10d,ecx
   140016872:	mov    r8,rdi
   140016875:	jge    0x140016a94
   14001687b:	nop    DWORD PTR [rax+rax*1+0x0]
   140016880:	movzx  edx,BYTE PTR [r8+rbx*1]
   140016885:	lea    eax,[rdx-0x30]
   140016888:	cmp    al,0x9
   14001688a:	ja     0x140016894
   14001688c:	movsx  eax,dl
   14001688f:	sub    eax,0x30
   140016892:	jmp    0x1400168b0
   140016894:	lea    eax,[rdx-0x61]
   140016897:	cmp    al,0x19
   140016899:	ja     0x1400168a3
   14001689b:	movsx  eax,dl
   14001689e:	sub    eax,0x57
   1400168a1:	jmp    0x1400168b0
   1400168a3:	lea    eax,[rdx-0x41]
   1400168a6:	cmp    al,0x19
   1400168a8:	ja     0x1400168c4
   1400168aa:	movsx  eax,dl
   1400168ad:	sub    eax,0x37
   1400168b0:	cmp    eax,0xffffffff
   1400168b3:	je     0x1400168c4
   1400168b5:	cmp    eax,r11d
   1400168b8:	jge    0x1400168c4
   1400168ba:	inc    r8
   1400168bd:	inc    ecx
   1400168bf:	cmp    r8,r9
   1400168c2:	jl     0x140016880
   1400168c4:	cmp    r10d,ecx
   1400168c7:	je     0x140016a94
   1400168cd:	xorpd  xmm2,xmm2
   1400168d1:	lea    eax,[rcx-0x1]
   1400168d4:	movsxd rdx,eax
   1400168d7:	cmp    rdx,rdi
   1400168da:	jl     0x140016aba
   1400168e0:	mov    rax,rdx
   1400168e3:	sub    rax,rdi
   1400168e6:	inc    rax
   1400168e9:	cmp    rax,0x4
   1400168ed:	jl     0x140016a30
   1400168f3:	movd   xmm1,r11d
   1400168f8:	lea    r8,[rdi+0x3]
   1400168fc:	cvtdq2pd xmm1,xmm1
   140016900:	movzx  ecx,BYTE PTR [rbx+rdx*1]
   140016904:	lea    eax,[rcx-0x30]
   140016907:	cmp    al,0x9
   140016909:	ja     0x140016913
   14001690b:	movsx  eax,cl
   14001690e:	sub    eax,0x30
   140016911:	jmp    0x140016934
   140016913:	lea    eax,[rcx-0x61]
   140016916:	cmp    al,0x19
   140016918:	ja     0x140016922
   14001691a:	movsx  eax,cl
   14001691d:	sub    eax,0x57
   140016920:	jmp    0x140016934
   140016922:	lea    eax,[rcx-0x41]
   140016925:	cmp    al,0x19
   140016927:	ja     0x140016931
   140016929:	movsx  eax,cl
   14001692c:	sub    eax,0x37
   14001692f:	jmp    0x140016934
   140016931:	or     eax,0xffffffff
   140016934:	movzx  ecx,BYTE PTR [rbx+rdx*1-0x1]
   140016939:	movd   xmm0,eax
   14001693d:	lea    eax,[rcx-0x30]
   140016940:	cvtdq2pd xmm0,xmm0
   140016944:	mulsd  xmm0,xmm3
   140016948:	mulsd  xmm3,xmm1
   14001694c:	addsd  xmm2,xmm0
   140016950:	cmp    al,0x9
   140016952:	ja     0x14001695c
   140016954:	movsx  eax,cl
   140016957:	sub    eax,0x30
   14001695a:	jmp    0x14001697d
   14001695c:	lea    eax,[rcx-0x61]
   14001695f:	cmp    al,0x19
   140016961:	ja     0x14001696b
   140016963:	movsx  eax,cl
   140016966:	sub    eax,0x57
   140016969:	jmp    0x14001697d
   14001696b:	lea    eax,[rcx-0x41]
   14001696e:	cmp    al,0x19
   140016970:	ja     0x14001697a
   140016972:	movsx  eax,cl
   140016975:	sub    eax,0x37
   140016978:	jmp    0x14001697d
   14001697a:	or     eax,0xffffffff
   14001697d:	movzx  ecx,BYTE PTR [rbx+rdx*1-0x2]
   140016982:	movd   xmm0,eax
   140016986:	lea    eax,[rcx-0x30]
   140016989:	cvtdq2pd xmm0,xmm0
   14001698d:	mulsd  xmm0,xmm3
   140016991:	mulsd  xmm3,xmm1
   140016995:	addsd  xmm2,xmm0
   140016999:	cmp    al,0x9
   14001699b:	ja     0x1400169a5
   14001699d:	movsx  eax,cl
   1400169a0:	sub    eax,0x30
   1400169a3:	jmp    0x1400169c6
   1400169a5:	lea    eax,[rcx-0x61]
   1400169a8:	cmp    al,0x19
   1400169aa:	ja     0x1400169b4
   1400169ac:	movsx  eax,cl
   1400169af:	sub    eax,0x57
   1400169b2:	jmp    0x1400169c6
   1400169b4:	lea    eax,[rcx-0x41]
   1400169b7:	cmp    al,0x19
   1400169b9:	ja     0x1400169c3
   1400169bb:	movsx  eax,cl
   1400169be:	sub    eax,0x37
   1400169c1:	jmp    0x1400169c6
   1400169c3:	or     eax,0xffffffff
   1400169c6:	movzx  ecx,BYTE PTR [rbx+rdx*1-0x3]
   1400169cb:	movd   xmm0,eax
   1400169cf:	lea    eax,[rcx-0x30]
   1400169d2:	cvtdq2pd xmm0,xmm0
   1400169d6:	mulsd  xmm0,xmm3
   1400169da:	mulsd  xmm3,xmm1
   1400169de:	addsd  xmm2,xmm0
   1400169e2:	cmp    al,0x9
   1400169e4:	ja     0x1400169ee
   1400169e6:	movsx  eax,cl
   1400169e9:	sub    eax,0x30
   1400169ec:	jmp    0x140016a0f
   1400169ee:	lea    eax,[rcx-0x61]
   1400169f1:	cmp    al,0x19
   1400169f3:	ja     0x1400169fd
   1400169f5:	movsx  eax,cl
   1400169f8:	sub    eax,0x57
   1400169fb:	jmp    0x140016a0f
   1400169fd:	lea    eax,[rcx-0x41]
   140016a00:	cmp    al,0x19
   140016a02:	ja     0x140016a0c
   140016a04:	movsx  eax,cl
   140016a07:	sub    eax,0x37
   140016a0a:	jmp    0x140016a0f
   140016a0c:	or     eax,0xffffffff
   140016a0f:	movd   xmm0,eax
   140016a13:	sub    rdx,0x4
   140016a17:	cmp    rdx,r8
   140016a1a:	cvtdq2pd xmm0,xmm0
   140016a1e:	mulsd  xmm0,xmm3
   140016a22:	mulsd  xmm3,xmm1
   140016a26:	addsd  xmm2,xmm0
   140016a2a:	jge    0x140016900
   140016a30:	cmp    rdx,rdi
   140016a33:	jl     0x140016aba
   140016a39:	movd   xmm1,r11d
   140016a3e:	cvtdq2pd xmm1,xmm1
   140016a42:	movzx  ecx,BYTE PTR [rdx+rbx*1]
   140016a46:	lea    eax,[rcx-0x30]
   140016a49:	cmp    al,0x9
   140016a4b:	ja     0x140016a55
   140016a4d:	movsx  eax,cl
   140016a50:	sub    eax,0x30
   140016a53:	jmp    0x140016a76
   140016a55:	lea    eax,[rcx-0x61]
   140016a58:	cmp    al,0x19
   140016a5a:	ja     0x140016a64
   140016a5c:	movsx  eax,cl
   140016a5f:	sub    eax,0x57
   140016a62:	jmp    0x140016a76
   140016a64:	lea    eax,[rcx-0x41]
   140016a67:	cmp    al,0x19
   140016a69:	ja     0x140016a73
   140016a6b:	movsx  eax,cl
   140016a6e:	sub    eax,0x37
   140016a71:	jmp    0x140016a76
   140016a73:	or     eax,0xffffffff
   140016a76:	movd   xmm0,eax
   140016a7a:	dec    rdx
   140016a7d:	cmp    rdx,rdi
   140016a80:	cvtdq2pd xmm0,xmm0
   140016a84:	mulsd  xmm0,xmm3
   140016a88:	mulsd  xmm3,xmm1
   140016a8c:	addsd  xmm2,xmm0
   140016a90:	jge    0x140016a42
   140016a92:	jmp    0x140016aba
   140016a94:	lea    rdx,[rip+0xbfbd]        # 0x140022a58
   140016a9b:	mov    rcx,rbx
   140016a9e:	call   QWORD PTR [rip+0x99d4]        # 0x140020478
   140016aa4:	test   eax,eax
   140016aa6:	jne    0x140016ab0
   140016aa8:	call   QWORD PTR [rip+0x99c2]        # 0x140020470
   140016aae:	jmp    0x140016ab6
   140016ab0:	call   QWORD PTR [rip+0x99ca]        # 0x140020480
   140016ab6:	movapd xmm2,xmm0
   140016aba:	mov    rdi,QWORD PTR [rsp+0x40]
   140016abf:	mulsd  xmm2,xmm6
   140016ac3:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   140016ac8:	movapd xmm0,xmm2
   140016acc:	add    rsp,0x30
   140016ad0:	pop    rbx
   140016ad1:	ret    
   140016ad2:	int3   
   140016ad3:	int3   
   140016ad4:	int3   
   140016ad5:	int3   
   140016ad6:	int3   
   140016ad7:	int3   
   140016ad8:	int3   
   140016ad9:	int3   
   140016ada:	int3   
   140016adb:	int3   
   140016adc:	int3   
   140016add:	int3   
   140016ade:	int3   
   140016adf:	int3   
   140016ae0:	add    rcx,0x48
   140016ae4:	rex.W jmp QWORD PTR [rip+0x9a7d]        # 0x140020568
   140016aeb:	int3   
   140016aec:	int3   
   140016aed:	int3   
   140016aee:	int3   
   140016aef:	int3   
   140016af0:	mov    rax,QWORD PTR [rcx]
   140016af3:	ret    
   140016af4:	int3   
   140016af5:	int3   
   140016af6:	int3   
   140016af7:	int3   
   140016af8:	int3   
   140016af9:	int3   
   140016afa:	int3   
   140016afb:	int3   
   140016afc:	int3   
   140016afd:	int3   
   140016afe:	int3   
   140016aff:	int3   
   140016b00:	mov    QWORD PTR [rcx],rdx
   140016b03:	ret    
   140016b04:	int3   
   140016b05:	int3   
   140016b06:	int3   
   140016b07:	int3   
   140016b08:	int3   
   140016b09:	int3   
   140016b0a:	int3   
   140016b0b:	int3   
   140016b0c:	int3   
   140016b0d:	int3   
   140016b0e:	int3   
   140016b0f:	int3   
   140016b10:	mov    rax,QWORD PTR [rcx+0x8]
   140016b14:	ret    
   140016b15:	int3   
   140016b16:	int3   
   140016b17:	int3   
   140016b18:	int3   
   140016b19:	int3   
   140016b1a:	int3   
   140016b1b:	int3   
   140016b1c:	int3   
   140016b1d:	int3   
   140016b1e:	int3   
   140016b1f:	int3   
   140016b20:	mov    QWORD PTR [rcx+0x8],rdx
   140016b24:	ret    
   140016b25:	int3   
   140016b26:	int3   
   140016b27:	int3   
   140016b28:	int3   
   140016b29:	int3   
   140016b2a:	int3   
   140016b2b:	int3   
   140016b2c:	int3   
   140016b2d:	int3   
   140016b2e:	int3   
   140016b2f:	int3   
   140016b30:	lea    rax,[rcx+0x10]
   140016b34:	ret    
   140016b35:	int3   
   140016b36:	int3   
   140016b37:	int3   
   140016b38:	int3   
   140016b39:	int3   
   140016b3a:	int3   
   140016b3b:	int3   
   140016b3c:	int3   
   140016b3d:	int3   
   140016b3e:	int3   
   140016b3f:	int3   
   140016b40:	mov    QWORD PTR [rsp+0x8],rbx
   140016b45:	mov    QWORD PTR [rsp+0x10],rbp
   140016b4a:	mov    QWORD PTR [rsp+0x18],rsi
   140016b4f:	push   rdi
   140016b50:	sub    rsp,0x20
   140016b54:	mov    rax,QWORD PTR [rcx+0x40]
   140016b58:	lea    rsi,[rcx+0x40]
   140016b5c:	mov    rbp,rdx
   140016b5f:	mov    ebx,DWORD PTR [rax+0x4]
   140016b62:	mov    rdx,r8
   140016b65:	mov    rcx,rsi
   140016b68:	mov    rdi,r8
   140016b6b:	call   QWORD PTR [rip+0x9c37]        # 0x1400207a8
   140016b71:	mov    r11,QWORD PTR [rdi]
   140016b74:	mov    r9d,DWORD PTR [r11+0x4]
   140016b78:	mov    r8d,ebx
   140016b7b:	mov    rdx,rbp
   140016b7e:	mov    rcx,rsi
   140016b81:	call   QWORD PTR [rip+0x9901]        # 0x140020488
   140016b87:	mov    rbx,QWORD PTR [rsp+0x30]
   140016b8c:	mov    rsi,QWORD PTR [rsp+0x40]
   140016b91:	mov    rax,rbp
   140016b94:	mov    rbp,QWORD PTR [rsp+0x38]
   140016b99:	add    rsp,0x20
   140016b9d:	pop    rdi
   140016b9e:	ret    
   140016b9f:	int3   
   140016ba0:	cmp    rdx,r8
   140016ba3:	je     0x140016c0b
   140016ba5:	mov    QWORD PTR [rsp+0x8],rbx
   140016baa:	mov    QWORD PTR [rsp+0x10],rsi
   140016baf:	push   rdi
   140016bb0:	sub    rsp,0x20
   140016bb4:	mov    rdi,r9
   140016bb7:	mov    rsi,r8
   140016bba:	mov    rbx,rdx
   140016bbd:	nop    DWORD PTR [rax]
   140016bc0:	mov    ecx,0x10
   140016bc5:	call   0x14001ee64
   140016bca:	test   rax,rax
   140016bcd:	je     0x140016bea
   140016bcf:	mov    rdx,QWORD PTR [rdi]
   140016bd2:	mov    ecx,DWORD PTR [rdx]
   140016bd4:	mov    DWORD PTR [rax],ecx
   140016bd6:	mov    ecx,DWORD PTR [rdx+0x4]
   140016bd9:	mov    DWORD PTR [rax+0x4],ecx
   140016bdc:	mov    ecx,DWORD PTR [rdx+0x8]
   140016bdf:	mov    DWORD PTR [rax+0x8],ecx
   140016be2:	mov    ecx,DWORD PTR [rdx+0xc]
   140016be5:	mov    DWORD PTR [rax+0xc],ecx
   140016be8:	jmp    0x140016bec
   140016bea:	xor    eax,eax
   140016bec:	mov    QWORD PTR [rbx],rax
   140016bef:	add    rbx,0x8
   140016bf3:	add    rdi,0x8
   140016bf7:	cmp    rbx,rsi
   140016bfa:	jne    0x140016bc0
   140016bfc:	mov    rbx,QWORD PTR [rsp+0x30]
   140016c01:	mov    rsi,QWORD PTR [rsp+0x38]
   140016c06:	add    rsp,0x20
   140016c0a:	pop    rdi
   140016c0b:	repz ret 
   140016c0d:	int3   
   140016c0e:	int3   
   140016c0f:	int3   
   140016c10:	sub    rsp,0x28
   140016c14:	mov    rdx,QWORD PTR [rcx]
   140016c17:	mov    eax,DWORD PTR [rdx]
   140016c19:	test   eax,eax
   140016c1b:	je     0x140016c2d
   140016c1d:	cmp    eax,0xffffffff
   140016c20:	je     0x140016c8a
   140016c22:	lock add DWORD PTR [rdx],0xffffffff
   140016c26:	setne  al
   140016c29:	test   al,al
   140016c2b:	jne    0x140016c8a
   140016c2d:	mov    QWORD PTR [rsp+0x30],rbx
   140016c32:	mov    QWORD PTR [rsp+0x38],rsi
   140016c37:	mov    rsi,QWORD PTR [rcx]
   140016c3a:	movsxd rax,DWORD PTR [rsi+0xc]
   140016c3e:	mov    QWORD PTR [rsp+0x20],rdi
   140016c43:	lea    rbx,[rsi+rax*8+0x10]
   140016c48:	movsxd rax,DWORD PTR [rsi+0x8]
   140016c4c:	lea    rdi,[rsi+rax*8+0x10]
   140016c51:	cmp    rdi,rbx
   140016c54:	je     0x140016c72
   140016c56:	data16 nop WORD PTR [rax+rax*1+0x0]
   140016c60:	mov    rcx,QWORD PTR [rbx-0x8]
   140016c64:	sub    rbx,0x8
   140016c68:	call   0x14001ee46
   140016c6d:	cmp    rbx,rdi
   140016c70:	jne    0x140016c60
   140016c72:	mov    rcx,rsi
   140016c75:	call   QWORD PTR [rip+0x9a55]        # 0x1400206d0
   140016c7b:	mov    rdi,QWORD PTR [rsp+0x20]
   140016c80:	mov    rsi,QWORD PTR [rsp+0x38]
   140016c85:	mov    rbx,QWORD PTR [rsp+0x30]
   140016c8a:	add    rsp,0x28
   140016c8e:	ret    
   140016c8f:	int3   
   140016c90:	mov    QWORD PTR [rsp+0x8],rbx
   140016c95:	mov    QWORD PTR [rsp+0x18],rbp
   140016c9a:	mov    QWORD PTR [rsp+0x20],rsi
   140016c9f:	mov    DWORD PTR [rsp+0x10],edx
   140016ca3:	push   rdi
   140016ca4:	sub    rsp,0x20
   140016ca8:	mov    rdx,QWORD PTR [rcx]
   140016cab:	movsxd rdi,r8d
   140016cae:	mov    rbp,rcx
   140016cb1:	movsxd rax,DWORD PTR [rdx+0x8]
   140016cb5:	mov    r8d,edi
   140016cb8:	lea    rbx,[rdx+rax*8+0x10]
   140016cbd:	lea    rdx,[rsp+0x38]
   140016cc2:	call   QWORD PTR [rip+0x9998]        # 0x140020660
   140016cc8:	mov    r10,QWORD PTR [rbp+0x0]
   140016ccc:	movsxd rdx,DWORD PTR [rsp+0x38]
   140016cd1:	movsxd r9,DWORD PTR [r10+0x8]
   140016cd5:	mov    rcx,rbp
   140016cd8:	mov    rsi,rax
   140016cdb:	add    rdx,r9
   140016cde:	lea    r8,[r10+rdx*8+0x10]
   140016ce3:	lea    rdx,[r10+r9*8+0x10]
   140016ce8:	mov    r9,rbx
   140016ceb:	call   0x140016ba0
   140016cf0:	mov    rdx,QWORD PTR [rbp+0x0]
   140016cf4:	movsxd r11,DWORD PTR [rsp+0x38]
   140016cf9:	movsxd rcx,DWORD PTR [rdx+0xc]
   140016cfd:	lea    r9,[rbx+r11*8]
   140016d01:	lea    r8,[rdx+rcx*8+0x10]
   140016d06:	movsxd rcx,DWORD PTR [rdx+0x8]
   140016d0a:	add    rcx,r11
   140016d0d:	add    rcx,rdi
   140016d10:	lea    rdx,[rdx+rcx*8+0x10]
   140016d15:	mov    rcx,rbp
   140016d18:	call   0x140016ba0
   140016d1d:	mov    r11d,DWORD PTR [rsi]
   140016d20:	test   r11d,r11d
   140016d23:	je     0x140016d36
   140016d25:	cmp    r11d,0xffffffff
   140016d29:	je     0x140016d6b
   140016d2b:	lock add DWORD PTR [rsi],0xffffffff
   140016d2f:	setne  al
   140016d32:	test   al,al
   140016d34:	jne    0x140016d6b
   140016d36:	movsxd rax,DWORD PTR [rsi+0xc]
   140016d3a:	lea    rbx,[rsi+rax*8+0x10]
   140016d3f:	movsxd rax,DWORD PTR [rsi+0x8]
   140016d43:	lea    rdi,[rsi+rax*8+0x10]
   140016d48:	cmp    rdi,rbx
   140016d4b:	je     0x140016d62
   140016d4d:	nop    DWORD PTR [rax]
   140016d50:	mov    rcx,QWORD PTR [rbx-0x8]
   140016d54:	sub    rbx,0x8
   140016d58:	call   0x14001ee46
   140016d5d:	cmp    rbx,rdi
   140016d60:	jne    0x140016d50
   140016d62:	mov    rcx,rsi
   140016d65:	call   QWORD PTR [rip+0x9965]        # 0x1400206d0
   140016d6b:	mov    rdx,QWORD PTR [rbp+0x0]
   140016d6f:	movsxd rax,DWORD PTR [rsp+0x38]
   140016d74:	mov    rbx,QWORD PTR [rsp+0x30]
   140016d79:	movsxd rcx,DWORD PTR [rdx+0x8]
   140016d7d:	mov    rbp,QWORD PTR [rsp+0x40]
   140016d82:	mov    rsi,QWORD PTR [rsp+0x48]
   140016d87:	add    rcx,rax
   140016d8a:	lea    rax,[rdx+rcx*8+0x10]
   140016d8f:	add    rsp,0x20
   140016d93:	pop    rdi
   140016d94:	ret    
   140016d95:	int3   
   140016d96:	int3   
   140016d97:	int3   
   140016d98:	int3   
   140016d99:	int3   
   140016d9a:	int3   
   140016d9b:	int3   
   140016d9c:	int3   
   140016d9d:	int3   
   140016d9e:	int3   
   140016d9f:	int3   
   140016da0:	mov    QWORD PTR [rsp+0x8],rbx
   140016da5:	mov    QWORD PTR [rsp+0x10],rsi
   140016daa:	push   rdi
   140016dab:	sub    rsp,0x20
   140016daf:	xor    esi,esi
   140016db1:	mov    rdi,rcx
   140016db4:	add    rcx,0x10
   140016db8:	mov    QWORD PTR [rcx-0x10],rsi
   140016dbc:	mov    QWORD PTR [rcx-0x8],rsi
   140016dc0:	call   QWORD PTR [rip+0x96a2]        # 0x140020468
   140016dc6:	mov    QWORD PTR [rdi+0x18],rsi
   140016dca:	mov    DWORD PTR [rdi+0x20],esi
   140016dcd:	mov    DWORD PTR [rdi+0x24],0xffffffff
   140016dd4:	mov    QWORD PTR [rdi+0x28],rsi
   140016dd8:	mov    QWORD PTR [rdi+0x30],rsi
   140016ddc:	mov    rax,QWORD PTR [rip+0x997d]        # 0x140020760
   140016de3:	lea    rcx,[rdi+0x40]
   140016de7:	mov    QWORD PTR [rdi+0x38],rax
   140016deb:	call   QWORD PTR [rip+0x97a7]        # 0x140020598
   140016df1:	lea    rcx,[rdi+0x48]
   140016df5:	call   QWORD PTR [rip+0x979d]        # 0x140020598
   140016dfb:	mov    rbx,QWORD PTR [rsp+0x30]
   140016e00:	mov    rsi,QWORD PTR [rsp+0x38]
   140016e05:	mov    rax,rdi
   140016e08:	add    rsp,0x20
   140016e0c:	pop    rdi
   140016e0d:	ret    
   140016e0e:	int3   
   140016e0f:	int3   
   140016e10:	rex push rbx
   140016e12:	sub    rsp,0x20
   140016e16:	mov    rbx,rcx
   140016e19:	add    rcx,0x48
   140016e1d:	call   QWORD PTR [rip+0x995d]        # 0x140020780
   140016e23:	lea    rcx,[rbx+0x40]
   140016e27:	call   QWORD PTR [rip+0x9953]        # 0x140020780
   140016e2d:	lea    rcx,[rbx+0x38]
   140016e31:	call   0x140016c10
   140016e36:	lea    rcx,[rbx+0x10]
   140016e3a:	add    rsp,0x20
   140016e3e:	pop    rbx
   140016e3f:	jmp    0x140016740
   140016e44:	int3   
   140016e45:	int3   
   140016e46:	int3   
   140016e47:	int3   
   140016e48:	int3   
   140016e49:	int3   
   140016e4a:	int3   
   140016e4b:	int3   
   140016e4c:	int3   
   140016e4d:	int3   
   140016e4e:	int3   
   140016e4f:	int3   
   140016e50:	sub    rsp,0x38
   140016e54:	test   r8d,r8d
   140016e57:	jle    0x140016ee6
   140016e5d:	mov    eax,DWORD PTR [rsp+0x60]
   140016e61:	add    rcx,0x38
   140016e65:	mov    DWORD PTR [rsp+0x20],edx
   140016e69:	mov    DWORD PTR [rsp+0x2c],eax
   140016e6d:	mov    rax,QWORD PTR [rcx]
   140016e70:	mov    QWORD PTR [rsp+0x30],rbx
   140016e75:	mov    edx,DWORD PTR [rax]
   140016e77:	mov    DWORD PTR [rsp+0x24],r8d
   140016e7c:	mov    DWORD PTR [rsp+0x28],r9d
   140016e81:	cmp    edx,0x1
   140016e84:	je     0x140016e9c
   140016e86:	test   edx,edx
   140016e88:	je     0x140016e9c
   140016e8a:	mov    edx,0x7fffffff
   140016e8f:	mov    r8d,0x1
   140016e95:	call   0x140016c90
   140016e9a:	jmp    0x140016ea2
   140016e9c:	call   QWORD PTR [rip+0x9796]        # 0x140020638
   140016ea2:	mov    ecx,0x10
   140016ea7:	mov    rbx,rax
   140016eaa:	call   0x14001ee64
   140016eaf:	test   rax,rax
   140016eb2:	je     0x140016edc
   140016eb4:	lea    rdx,[rsp+0x20]
   140016eb9:	mov    ecx,DWORD PTR [rdx]
   140016ebb:	mov    DWORD PTR [rax],ecx
   140016ebd:	mov    ecx,DWORD PTR [rdx+0x4]
   140016ec0:	mov    DWORD PTR [rax+0x4],ecx
   140016ec3:	mov    ecx,DWORD PTR [rdx+0x8]
   140016ec6:	mov    DWORD PTR [rax+0x8],ecx
   140016ec9:	mov    ecx,DWORD PTR [rdx+0xc]
   140016ecc:	mov    DWORD PTR [rax+0xc],ecx
   140016ecf:	mov    QWORD PTR [rbx],rax
   140016ed2:	mov    rbx,QWORD PTR [rsp+0x30]
   140016ed7:	add    rsp,0x38
   140016edb:	ret    
   140016edc:	xor    eax,eax
   140016ede:	mov    QWORD PTR [rbx],rax
   140016ee1:	mov    rbx,QWORD PTR [rsp+0x30]
   140016ee6:	add    rsp,0x38
   140016eea:	ret    
   140016eeb:	int3   
   140016eec:	int3   
   140016eed:	int3   
   140016eee:	int3   
   140016eef:	int3   
   140016ef0:	movzx  eax,WORD PTR [rcx]
   140016ef3:	cmp    ax,0x66
   140016ef7:	jne    0x140016f15
   140016ef9:	cmp    WORD PTR [rcx+0x2],0x6f
   140016efe:	jne    0x140016fc2
   140016f04:	cmp    WORD PTR [rcx+0x4],0x72
   140016f09:	jne    0x140016fc2
   140016f0f:	mov    eax,0x15
   140016f14:	ret    
   140016f15:	cmp    ax,0x67
   140016f19:	jne    0x140016f37
   140016f1b:	cmp    WORD PTR [rcx+0x2],0x65
   140016f20:	jne    0x140016fc2
   140016f26:	cmp    WORD PTR [rcx+0x4],0x74
   140016f2b:	jne    0x140016fc2
   140016f31:	mov    eax,0x5f
   140016f36:	ret    
   140016f37:	cmp    ax,0x69
   140016f3b:	jne    0x140016f5b
   140016f3d:	cmp    WORD PTR [rcx+0x2],0x6e
   140016f42:	jne    0x140016fc2
   140016f44:	cmp    WORD PTR [rcx+0x4],0x74
   140016f49:	jne    0x140016fc2
   140016f4b:	mov    eax,0x1d
   140016f50:	mov    ecx,0x56
   140016f55:	test   dl,dl
   140016f57:	cmovne eax,ecx
   140016f5a:	ret    
   140016f5b:	cmp    ax,0x6e
   140016f5f:	jne    0x140016f75
   140016f61:	cmp    WORD PTR [rcx+0x2],0x65
   140016f66:	jne    0x140016fc2
   140016f68:	cmp    WORD PTR [rcx+0x4],0x77
   140016f6d:	jne    0x140016fc2
   140016f6f:	mov    eax,0x2b
   140016f74:	ret    
   140016f75:	cmp    ax,0x73
   140016f79:	jne    0x140016f8f
   140016f7b:	cmp    WORD PTR [rcx+0x2],0x65
   140016f80:	jne    0x140016fc2
   140016f82:	cmp    WORD PTR [rcx+0x4],0x74
   140016f87:	jne    0x140016fc2
   140016f89:	mov    eax,0x60
   140016f8e:	ret    
   140016f8f:	cmp    ax,0x74
   140016f93:	jne    0x140016fa9
   140016f95:	cmp    WORD PTR [rcx+0x2],0x72
   140016f9a:	jne    0x140016fc2
   140016f9c:	cmp    WORD PTR [rcx+0x4],0x79
   140016fa1:	jne    0x140016fc2
   140016fa3:	mov    eax,0x49
   140016fa8:	ret    
   140016fa9:	cmp    ax,0x76
   140016fad:	jne    0x140016fc2
   140016faf:	cmp    WORD PTR [rcx+0x2],0x61
   140016fb4:	jne    0x140016fc2
   140016fb6:	cmp    WORD PTR [rcx+0x4],0x72
   140016fbb:	mov    eax,0x4b
   140016fc0:	je     0x140016fc7
   140016fc2:	mov    eax,0x1d
   140016fc7:	repz ret 
   140016fc9:	int3   
   140016fca:	int3   
   140016fcb:	int3   
   140016fcc:	int3   
   140016fcd:	int3   
   140016fce:	int3   
   140016fcf:	int3   
   140016fd0:	movzx  eax,WORD PTR [rcx]
   140016fd3:	cmp    ax,0x62
   140016fd7:	jne    0x14001700a
   140016fd9:	cmp    WORD PTR [rcx+0x2],0x79
   140016fde:	jne    0x14001719c
   140016fe4:	cmp    WORD PTR [rcx+0x4],0x74
   140016fe9:	jne    0x14001719c
   140016fef:	cmp    WORD PTR [rcx+0x6],0x65
   140016ff4:	jne    0x14001719c
   140016ffa:	mov    eax,0x1d
   140016fff:	mov    ecx,0x56
   140017004:	test   dl,dl
   140017006:	cmovne eax,ecx
   140017009:	ret    
   14001700a:	cmp    ax,0x63
   14001700e:	jne    0x140017052
   140017010:	movzx  eax,WORD PTR [rcx+0x2]
   140017014:	cmp    ax,0x61
   140017018:	jne    0x140017036
   14001701a:	cmp    WORD PTR [rcx+0x4],0x73
   14001701f:	jne    0x14001719c
   140017025:	cmp    WORD PTR [rcx+0x6],0x65
   14001702a:	jne    0x14001719c
   140017030:	mov    eax,0x5
   140017035:	ret    
   140017036:	cmp    ax,0x68
   14001703a:	jne    0x14001719c
   140017040:	cmp    WORD PTR [rcx+0x4],0x61
   140017045:	jne    0x14001719c
   14001704b:	cmp    WORD PTR [rcx+0x6],0x72
   140017050:	jmp    0x140016ff4
   140017052:	cmp    ax,0x65
   140017056:	jne    0x1400170a4
   140017058:	movzx  eax,WORD PTR [rcx+0x2]
   14001705c:	cmp    ax,0x6c
   140017060:	jne    0x14001707e
   140017062:	cmp    WORD PTR [rcx+0x4],0x73
   140017067:	jne    0x14001719c
   14001706d:	cmp    WORD PTR [rcx+0x6],0x65
   140017072:	jne    0x14001719c
   140017078:	mov    eax,0x10
   14001707d:	ret    
   14001707e:	cmp    ax,0x6e
   140017082:	jne    0x14001719c
   140017088:	cmp    WORD PTR [rcx+0x4],0x75
   14001708d:	jne    0x14001719c
   140017093:	cmp    WORD PTR [rcx+0x6],0x6d
   140017098:	jne    0x14001719c
   14001709e:	mov    eax,0x56
   1400170a3:	ret    
   1400170a4:	cmp    ax,0x67
   1400170a8:	jne    0x1400170ca
   1400170aa:	cmp    WORD PTR [rcx+0x2],0x6f
   1400170af:	jne    0x14001719c
   1400170b5:	cmp    WORD PTR [rcx+0x4],0x74
   1400170ba:	jne    0x14001719c
   1400170c0:	cmp    WORD PTR [rcx+0x6],0x6f
   1400170c5:	jmp    0x140016ff4
   1400170ca:	cmp    ax,0x6c
   1400170ce:	jne    0x1400170f0
   1400170d0:	cmp    WORD PTR [rcx+0x2],0x6f
   1400170d5:	jne    0x14001719c
   1400170db:	cmp    WORD PTR [rcx+0x4],0x6e
   1400170e0:	jne    0x14001719c
   1400170e6:	cmp    WORD PTR [rcx+0x6],0x67
   1400170eb:	jmp    0x140016ff4
   1400170f0:	cmp    ax,0x6e
   1400170f4:	jne    0x14001711d
   1400170f6:	cmp    WORD PTR [rcx+0x2],0x75
   1400170fb:	jne    0x14001719c
   140017101:	cmp    WORD PTR [rcx+0x4],0x6c
   140017106:	jne    0x14001719c
   14001710c:	cmp    WORD PTR [rcx+0x6],0x6c
   140017111:	jne    0x14001719c
   140017117:	mov    eax,0x51
   14001711c:	ret    
   14001711d:	cmp    ax,0x74
   140017121:	jne    0x14001715b
   140017123:	movzx  eax,WORD PTR [rcx+0x2]
   140017127:	cmp    ax,0x68
   14001712b:	jne    0x140017141
   14001712d:	cmp    WORD PTR [rcx+0x4],0x69
   140017132:	jne    0x14001719c
   140017134:	cmp    WORD PTR [rcx+0x6],0x73
   140017139:	jne    0x14001719c
   14001713b:	mov    eax,0x46
   140017140:	ret    
   140017141:	cmp    ax,0x72
   140017145:	jne    0x14001719c
   140017147:	cmp    WORD PTR [rcx+0x4],0x75
   14001714c:	jne    0x14001719c
   14001714e:	cmp    WORD PTR [rcx+0x6],0x65
   140017153:	jne    0x14001719c
   140017155:	mov    eax,0x52
   14001715a:	ret    
   14001715b:	cmp    ax,0x76
   14001715f:	jne    0x14001717c
   140017161:	cmp    WORD PTR [rcx+0x2],0x6f
   140017166:	jne    0x14001719c
   140017168:	cmp    WORD PTR [rcx+0x4],0x69
   14001716d:	jne    0x14001719c
   14001716f:	cmp    WORD PTR [rcx+0x6],0x64
   140017174:	jne    0x14001719c
   140017176:	mov    eax,0x4c
   14001717b:	ret    
   14001717c:	cmp    ax,0x77
   140017180:	jne    0x14001719c
   140017182:	cmp    WORD PTR [rcx+0x2],0x69
   140017187:	jne    0x14001719c
   140017189:	cmp    WORD PTR [rcx+0x4],0x74
   14001718e:	jne    0x14001719c
   140017190:	cmp    WORD PTR [rcx+0x6],0x68
   140017195:	mov    eax,0x4e
   14001719a:	je     0x1400171a1
   14001719c:	mov    eax,0x1d
   1400171a1:	repz ret 
   1400171a3:	int3   
   1400171a4:	int3   
   1400171a5:	int3   
   1400171a6:	int3   
   1400171a7:	int3   
   1400171a8:	int3   
   1400171a9:	int3   
   1400171aa:	int3   
   1400171ab:	int3   
   1400171ac:	int3   
   1400171ad:	int3   
   1400171ae:	int3   
   1400171af:	int3   
   1400171b0:	movzx  eax,WORD PTR [rcx]
   1400171b3:	cmp    ax,0x62
   1400171b7:	jne    0x1400171eb
   1400171b9:	cmp    WORD PTR [rcx+0x2],0x72
   1400171be:	jne    0x1400173be
   1400171c4:	cmp    WORD PTR [rcx+0x4],0x65
   1400171c9:	jne    0x1400173be
   1400171cf:	cmp    WORD PTR [rcx+0x6],0x61
   1400171d4:	jne    0x1400173be
   1400171da:	cmp    WORD PTR [rcx+0x8],0x6b
   1400171df:	jne    0x1400173be
   1400171e5:	mov    eax,0x4
   1400171ea:	ret    
   1400171eb:	cmp    ax,0x63
   1400171ef:	jne    0x14001728e
   1400171f5:	movzx  eax,WORD PTR [rcx+0x2]
   1400171f9:	cmp    ax,0x61
   1400171fd:	jne    0x140017226
   1400171ff:	cmp    WORD PTR [rcx+0x4],0x74
   140017204:	jne    0x1400173be
   14001720a:	cmp    WORD PTR [rcx+0x6],0x63
   14001720f:	jne    0x1400173be
   140017215:	cmp    WORD PTR [rcx+0x8],0x68
   14001721a:	jne    0x1400173be
   140017220:	mov    eax,0x6
   140017225:	ret    
   140017226:	cmp    ax,0x6c
   14001722a:	jne    0x140017253
   14001722c:	cmp    WORD PTR [rcx+0x4],0x61
   140017231:	jne    0x1400173be
   140017237:	cmp    WORD PTR [rcx+0x6],0x73
   14001723c:	jne    0x1400173be
   140017242:	cmp    WORD PTR [rcx+0x8],0x73
   140017247:	jne    0x1400173be
   14001724d:	mov    eax,0x56
   140017252:	ret    
   140017253:	cmp    ax,0x6f
   140017257:	jne    0x1400173be
   14001725d:	cmp    WORD PTR [rcx+0x4],0x6e
   140017262:	jne    0x1400173be
   140017268:	cmp    WORD PTR [rcx+0x6],0x73
   14001726d:	jne    0x1400173be
   140017273:	cmp    WORD PTR [rcx+0x8],0x74
   140017278:	jne    0x1400173be
   14001727e:	mov    eax,0x56
   140017283:	mov    ecx,0x54
   140017288:	test   dl,dl
   14001728a:	cmovne eax,ecx
   14001728d:	ret    
   14001728e:	cmp    ax,0x66
   140017292:	jne    0x140017329
   140017298:	movzx  eax,WORD PTR [rcx+0x2]
   14001729c:	cmp    ax,0x61
   1400172a0:	jne    0x1400172c9
   1400172a2:	cmp    WORD PTR [rcx+0x4],0x6c
   1400172a7:	jne    0x1400173be
   1400172ad:	cmp    WORD PTR [rcx+0x6],0x73
   1400172b2:	jne    0x1400173be
   1400172b8:	cmp    WORD PTR [rcx+0x8],0x65
   1400172bd:	jne    0x1400173be
   1400172c3:	mov    eax,0x53
   1400172c8:	ret    
   1400172c9:	cmp    ax,0x69
   1400172cd:	jne    0x140017302
   1400172cf:	cmp    WORD PTR [rcx+0x4],0x6e
   1400172d4:	jne    0x1400173be
   1400172da:	cmp    WORD PTR [rcx+0x6],0x61
   1400172df:	jne    0x1400173be
   1400172e5:	cmp    WORD PTR [rcx+0x8],0x6c
   1400172ea:	jne    0x1400173be
   1400172f0:	mov    eax,0x56
   1400172f5:	mov    ecx,0x1d
   1400172fa:	test   dl,dl
   1400172fc:	cmovne ecx,eax
   1400172ff:	mov    eax,ecx
   140017301:	ret    
   140017302:	cmp    ax,0x6c
   140017306:	jne    0x1400173be
   14001730c:	cmp    WORD PTR [rcx+0x4],0x6f
   140017311:	jne    0x1400173be
   140017317:	cmp    WORD PTR [rcx+0x6],0x61
   14001731c:	jne    0x1400173be
   140017322:	cmp    WORD PTR [rcx+0x8],0x74
   140017327:	jmp    0x1400172ea
   140017329:	cmp    ax,0x73
   14001732d:	jne    0x14001736f
   14001732f:	movzx  eax,WORD PTR [rcx+0x2]
   140017333:	cmp    ax,0x68
   140017337:	jne    0x14001734e
   140017339:	cmp    WORD PTR [rcx+0x4],0x6f
   14001733e:	jne    0x1400173be
   140017340:	cmp    WORD PTR [rcx+0x6],0x72
   140017345:	jne    0x1400173be
   140017347:	cmp    WORD PTR [rcx+0x8],0x74
   14001734c:	jmp    0x1400172ea
   14001734e:	cmp    ax,0x75
   140017352:	jne    0x1400173be
   140017354:	cmp    WORD PTR [rcx+0x4],0x70
   140017359:	jne    0x1400173be
   14001735b:	cmp    WORD PTR [rcx+0x6],0x65
   140017360:	jne    0x1400173be
   140017362:	cmp    WORD PTR [rcx+0x8],0x72
   140017367:	jne    0x1400173be
   140017369:	mov    eax,0x56
   14001736e:	ret    
   14001736f:	cmp    ax,0x74
   140017373:	jne    0x140017397
   140017375:	cmp    WORD PTR [rcx+0x2],0x68
   14001737a:	jne    0x1400173be
   14001737c:	cmp    WORD PTR [rcx+0x4],0x72
   140017381:	jne    0x1400173be
   140017383:	cmp    WORD PTR [rcx+0x6],0x6f
   140017388:	jne    0x1400173be
   14001738a:	cmp    WORD PTR [rcx+0x8],0x77
   14001738f:	jne    0x1400173be
   140017391:	mov    eax,0x47
   140017396:	ret    
   140017397:	cmp    ax,0x77
   14001739b:	jne    0x1400173be
   14001739d:	cmp    WORD PTR [rcx+0x2],0x68
   1400173a2:	jne    0x1400173be
   1400173a4:	cmp    WORD PTR [rcx+0x4],0x69
   1400173a9:	jne    0x1400173be
   1400173ab:	cmp    WORD PTR [rcx+0x6],0x6c
   1400173b0:	jne    0x1400173be
   1400173b2:	cmp    WORD PTR [rcx+0x8],0x65
   1400173b7:	mov    eax,0x4d
   1400173bc:	je     0x1400173c3
   1400173be:	mov    eax,0x1d
   1400173c3:	repz ret 
   1400173c5:	int3   
   1400173c6:	int3   
   1400173c7:	int3   
   1400173c8:	int3   
   1400173c9:	int3   
   1400173ca:	int3   
   1400173cb:	int3   
   1400173cc:	int3   
   1400173cd:	int3   
   1400173ce:	int3   
   1400173cf:	int3   
   1400173d0:	movzx  eax,WORD PTR [rcx]
   1400173d3:	cmp    ax,0x64
   1400173d7:	jne    0x14001745d
   1400173dd:	movzx  eax,WORD PTR [rcx+0x2]
   1400173e1:	cmp    ax,0x65
   1400173e5:	jne    0x140017417
   1400173e7:	cmp    WORD PTR [rcx+0x4],0x6c
   1400173ec:	jne    0x1400176f1
   1400173f2:	cmp    WORD PTR [rcx+0x6],ax
   1400173f6:	jne    0x1400176f1
   1400173fc:	cmp    WORD PTR [rcx+0x8],0x74
   140017401:	jne    0x1400176f1
   140017407:	cmp    WORD PTR [rcx+0xa],ax
   14001740b:	jne    0x1400176f1
   140017411:	mov    eax,0xb
   140017416:	ret    
   140017417:	cmp    ax,0x6f
   14001741b:	jne    0x1400176f1
   140017421:	cmp    WORD PTR [rcx+0x4],0x75
   140017426:	jne    0x1400176f1
   14001742c:	cmp    WORD PTR [rcx+0x6],0x62
   140017431:	jne    0x1400176f1
   140017437:	cmp    WORD PTR [rcx+0x8],0x6c
   14001743c:	jne    0x1400176f1
   140017442:	cmp    WORD PTR [rcx+0xa],0x65
   140017447:	jne    0x1400176f1
   14001744d:	mov    ecx,0x56
   140017452:	mov    eax,0x1d
   140017457:	test   dl,dl
   140017459:	cmovne eax,ecx
   14001745c:	ret    
   14001745d:	cmp    ax,0x65
   140017461:	jne    0x1400174a0
   140017463:	cmp    WORD PTR [rcx+0x2],0x78
   140017468:	jne    0x1400176f1
   14001746e:	cmp    WORD PTR [rcx+0x4],0x70
   140017473:	jne    0x1400176f1
   140017479:	cmp    WORD PTR [rcx+0x6],0x6f
   14001747e:	jne    0x1400176f1
   140017484:	cmp    WORD PTR [rcx+0x8],0x72
   140017489:	jne    0x1400176f1
   14001748f:	cmp    WORD PTR [rcx+0xa],0x74
   140017494:	jne    0x1400176f1
   14001749a:	mov    eax,0x56
   14001749f:	ret    
   1400174a0:	cmp    ax,0x69
   1400174a4:	jne    0x1400174ef
   1400174a6:	cmp    WORD PTR [rcx+0x2],0x6d
   1400174ab:	jne    0x1400176f1
   1400174b1:	cmp    WORD PTR [rcx+0x4],0x70
   1400174b6:	jne    0x1400176f1
   1400174bc:	cmp    WORD PTR [rcx+0x6],0x6f
   1400174c1:	jne    0x1400176f1
   1400174c7:	cmp    WORD PTR [rcx+0x8],0x72
   1400174cc:	jne    0x1400176f1
   1400174d2:	cmp    WORD PTR [rcx+0xa],0x74
   1400174d7:	jne    0x1400176f1
   1400174dd:	mov    eax,0x5b
   1400174e2:	mov    ecx,0x56
   1400174e7:	test   dl,dl
   1400174e9:	cmovne ecx,eax
   1400174ec:	mov    eax,ecx
   1400174ee:	ret    
   1400174ef:	cmp    ax,0x6e
   1400174f3:	jne    0x140017520
   1400174f5:	cmp    WORD PTR [rcx+0x2],0x61
   1400174fa:	jne    0x1400176f1
   140017500:	cmp    WORD PTR [rcx+0x4],0x74
   140017505:	jne    0x1400176f1
   14001750b:	cmp    WORD PTR [rcx+0x6],0x69
   140017510:	jne    0x1400176f1
   140017516:	cmp    WORD PTR [rcx+0x8],0x76
   14001751b:	jmp    0x14001743c
   140017520:	cmp    ax,0x70
   140017524:	jne    0x1400175b6
   14001752a:	movzx  eax,WORD PTR [rcx+0x2]
   14001752e:	cmp    ax,0x75
   140017532:	jne    0x140017570
   140017534:	cmp    WORD PTR [rcx+0x4],0x62
   140017539:	jne    0x1400176f1
   14001753f:	cmp    WORD PTR [rcx+0x6],0x6c
   140017544:	jne    0x1400176f1
   14001754a:	cmp    WORD PTR [rcx+0x8],0x69
   14001754f:	jne    0x1400176f1
   140017555:	cmp    WORD PTR [rcx+0xa],0x63
   14001755a:	jne    0x1400176f1
   140017560:	mov    ecx,0x5a
   140017565:	mov    eax,0x1d
   14001756a:	test   dl,dl
   14001756c:	cmovne eax,ecx
   14001756f:	ret    
   140017570:	cmp    ax,0x72
   140017574:	jne    0x1400176f1
   14001757a:	cmp    WORD PTR [rcx+0x4],0x61
   14001757f:	jne    0x1400176f1
   140017585:	cmp    WORD PTR [rcx+0x6],0x67
   14001758a:	jne    0x1400176f1
   140017590:	cmp    WORD PTR [rcx+0x8],0x6d
   140017595:	jne    0x1400176f1
   14001759b:	cmp    WORD PTR [rcx+0xa],0x61
   1400175a0:	jne    0x1400176f1
   1400175a6:	mov    ecx,0x5c
   1400175ab:	mov    eax,0x1d
   1400175b0:	test   dl,dl
   1400175b2:	cmovne eax,ecx
   1400175b5:	ret    
   1400175b6:	cmp    ax,0x72
   1400175ba:	jne    0x1400175f8
   1400175bc:	cmp    WORD PTR [rcx+0x2],0x65
   1400175c1:	jne    0x1400176f1
   1400175c7:	cmp    WORD PTR [rcx+0x4],0x74
   1400175cc:	jne    0x1400176f1
   1400175d2:	cmp    WORD PTR [rcx+0x6],0x75
   1400175d7:	jne    0x1400176f1
   1400175dd:	cmp    WORD PTR [rcx+0x8],ax
   1400175e1:	jne    0x1400176f1
   1400175e7:	cmp    WORD PTR [rcx+0xa],0x6e
   1400175ec:	jne    0x1400176f1
   1400175f2:	mov    eax,0x3b
   1400175f7:	ret    
   1400175f8:	cmp    ax,0x73
   1400175fc:	jne    0x14001769b
   140017602:	test   dl,dl
   140017604:	je     0x14001763f
   140017606:	cmp    WORD PTR [rcx+0x2],0x69
   14001760b:	jne    0x14001763f
   14001760d:	cmp    WORD PTR [rcx+0x4],0x67
   140017612:	jne    0x1400176f1
   140017618:	cmp    WORD PTR [rcx+0x6],0x6e
   14001761d:	jne    0x1400176f1
   140017623:	cmp    WORD PTR [rcx+0x8],0x61
   140017628:	jne    0x1400176f1
   14001762e:	cmp    WORD PTR [rcx+0xa],0x6c
   140017633:	jne    0x1400176f1
   140017639:	mov    eax,0x43
   14001763e:	ret    
   14001763f:	movzx  eax,WORD PTR [rcx+0x2]
   140017643:	cmp    ax,0x74
   140017647:	jne    0x140017673
   140017649:	cmp    WORD PTR [rcx+0x4],0x61
   14001764e:	jne    0x1400176f1
   140017654:	cmp    WORD PTR [rcx+0x6],ax
   140017658:	jne    0x1400176f1
   14001765e:	cmp    WORD PTR [rcx+0x8],0x69
   140017663:	jne    0x1400176f1
   140017669:	cmp    WORD PTR [rcx+0xa],0x63
   14001766e:	jmp    0x140017447
   140017673:	cmp    ax,0x77
   140017677:	jne    0x1400176f1
   140017679:	cmp    WORD PTR [rcx+0x4],0x69
   14001767e:	jne    0x1400176f1
   140017680:	cmp    WORD PTR [rcx+0x6],0x74
   140017685:	jne    0x1400176f1
   140017687:	cmp    WORD PTR [rcx+0x8],0x63
   14001768c:	jne    0x1400176f1
   14001768e:	cmp    WORD PTR [rcx+0xa],0x68
   140017693:	jne    0x1400176f1
   140017695:	mov    eax,0x45
   14001769a:	ret    
   14001769b:	cmp    ax,0x74
   14001769f:	jne    0x1400176f1
   1400176a1:	movzx  eax,WORD PTR [rcx+0x2]
   1400176a5:	cmp    ax,0x68
   1400176a9:	jne    0x1400176ca
   1400176ab:	cmp    WORD PTR [rcx+0x4],0x72
   1400176b0:	jne    0x1400176f1
   1400176b2:	cmp    WORD PTR [rcx+0x6],0x6f
   1400176b7:	jne    0x1400176f1
   1400176b9:	cmp    WORD PTR [rcx+0x8],0x77
   1400176be:	jne    0x1400176f1
   1400176c0:	cmp    WORD PTR [rcx+0xa],0x73
   1400176c5:	jmp    0x140017447
   1400176ca:	cmp    ax,0x79
   1400176ce:	jne    0x1400176f1
   1400176d0:	cmp    WORD PTR [rcx+0x4],0x70
   1400176d5:	jne    0x1400176f1
   1400176d7:	cmp    WORD PTR [rcx+0x6],0x65
   1400176dc:	jne    0x1400176f1
   1400176de:	cmp    WORD PTR [rcx+0x8],0x6f
   1400176e3:	jne    0x1400176f1
   1400176e5:	cmp    WORD PTR [rcx+0xa],0x66
   1400176ea:	mov    eax,0x4a
   1400176ef:	je     0x1400176f6
   1400176f1:	mov    eax,0x1d
   1400176f6:	repz ret 
   1400176f8:	int3   
   1400176f9:	int3   
   1400176fa:	int3   
   1400176fb:	int3   
   1400176fc:	int3   
   1400176fd:	int3   
   1400176fe:	int3   
   1400176ff:	int3   
   140017700:	movzx  eax,WORD PTR [rcx]
   140017703:	cmp    ax,0x62
   140017707:	jne    0x14001775b
   140017709:	cmp    WORD PTR [rcx+0x2],0x6f
   14001770e:	jne    0x140017895
   140017714:	cmp    WORD PTR [rcx+0x4],0x6f
   140017719:	jne    0x140017895
   14001771f:	cmp    WORD PTR [rcx+0x6],0x6c
   140017724:	jne    0x140017895
   14001772a:	cmp    WORD PTR [rcx+0x8],0x65
   14001772f:	jne    0x140017895
   140017735:	cmp    WORD PTR [rcx+0xa],0x61
   14001773a:	jne    0x140017895
   140017740:	cmp    WORD PTR [rcx+0xc],0x6e
   140017745:	jne    0x140017895
   14001774b:	mov    eax,0x1d
   140017750:	mov    ecx,0x56
   140017755:	test   dl,dl
   140017757:	cmovne eax,ecx
   14001775a:	ret    
   14001775b:	cmp    ax,0x64
   14001775f:	jne    0x1400177a9
   140017761:	cmp    WORD PTR [rcx+0x2],0x65
   140017766:	jne    0x140017895
   14001776c:	cmp    WORD PTR [rcx+0x4],0x66
   140017771:	jne    0x140017895
   140017777:	cmp    WORD PTR [rcx+0x6],0x61
   14001777c:	jne    0x140017895
   140017782:	cmp    WORD PTR [rcx+0x8],0x75
   140017787:	jne    0x140017895
   14001778d:	cmp    WORD PTR [rcx+0xa],0x6c
   140017792:	jne    0x140017895
   140017798:	cmp    WORD PTR [rcx+0xc],0x74
   14001779d:	jne    0x140017895
   1400177a3:	mov    eax,0xa
   1400177a8:	ret    
   1400177a9:	cmp    ax,0x65
   1400177ad:	jne    0x1400177f6
   1400177af:	cmp    WORD PTR [rcx+0x2],0x78
   1400177b4:	jne    0x140017895
   1400177ba:	cmp    WORD PTR [rcx+0x4],0x74
   1400177bf:	jne    0x140017895
   1400177c5:	cmp    WORD PTR [rcx+0x6],ax
   1400177c9:	jne    0x140017895
   1400177cf:	cmp    WORD PTR [rcx+0x8],0x6e
   1400177d4:	jne    0x140017895
   1400177da:	cmp    WORD PTR [rcx+0xa],0x64
   1400177df:	jne    0x140017895
   1400177e5:	cmp    WORD PTR [rcx+0xc],0x73
   1400177ea:	jne    0x140017895
   1400177f0:	mov    eax,0x56
   1400177f5:	ret    
   1400177f6:	cmp    ax,0x66
   1400177fa:	jne    0x140017834
   1400177fc:	cmp    WORD PTR [rcx+0x2],0x69
   140017801:	jne    0x140017895
   140017807:	cmp    WORD PTR [rcx+0x4],0x6e
   14001780c:	jne    0x140017895
   140017812:	cmp    WORD PTR [rcx+0x6],0x61
   140017817:	jne    0x140017895
   140017819:	cmp    WORD PTR [rcx+0x8],0x6c
   14001781e:	jne    0x140017895
   140017820:	cmp    WORD PTR [rcx+0xa],0x6c
   140017825:	jne    0x140017895
   140017827:	cmp    WORD PTR [rcx+0xc],0x79
   14001782c:	jne    0x140017895
   14001782e:	mov    eax,0x14
   140017833:	ret    
   140017834:	cmp    ax,0x70
   140017838:	jne    0x140017895
   14001783a:	movzx  eax,WORD PTR [rcx+0x2]
   14001783e:	cmp    ax,0x61
   140017842:	jne    0x140017869
   140017844:	cmp    WORD PTR [rcx+0x4],0x63
   140017849:	jne    0x140017895
   14001784b:	cmp    WORD PTR [rcx+0x6],0x6b
   140017850:	jne    0x140017895
   140017852:	cmp    WORD PTR [rcx+0x8],ax
   140017856:	jne    0x140017895
   140017858:	cmp    WORD PTR [rcx+0xa],0x67
   14001785d:	jne    0x140017895
   14001785f:	cmp    WORD PTR [rcx+0xc],0x65
   140017864:	jmp    0x140017745
   140017869:	cmp    ax,0x72
   14001786d:	jne    0x140017895
   14001786f:	cmp    WORD PTR [rcx+0x4],0x69
   140017874:	jne    0x140017895
   140017876:	cmp    WORD PTR [rcx+0x6],0x76
   14001787b:	jne    0x140017895
   14001787d:	cmp    WORD PTR [rcx+0x8],0x61
   140017882:	jne    0x140017895
   140017884:	cmp    WORD PTR [rcx+0xa],0x74
   140017889:	jne    0x140017895
   14001788b:	cmp    WORD PTR [rcx+0xc],0x65
   140017890:	jmp    0x140017745
   140017895:	mov    eax,0x1d
   14001789a:	ret    
   14001789b:	int3   
   14001789c:	int3   
   14001789d:	int3   
   14001789e:	int3   
   14001789f:	int3   
   1400178a0:	movzx  eax,WORD PTR [rcx]
   1400178a3:	cmp    ax,0x61
   1400178a7:	jne    0x140017905
   1400178a9:	cmp    WORD PTR [rcx+0x2],0x62
   1400178ae:	jne    0x140017ae3
   1400178b4:	cmp    WORD PTR [rcx+0x4],0x73
   1400178b9:	jne    0x140017ae3
   1400178bf:	cmp    WORD PTR [rcx+0x6],0x74
   1400178c4:	jne    0x140017ae3
   1400178ca:	cmp    WORD PTR [rcx+0x8],0x72
   1400178cf:	jne    0x140017ae3
   1400178d5:	cmp    WORD PTR [rcx+0xa],ax
   1400178d9:	jne    0x140017ae3
   1400178df:	cmp    WORD PTR [rcx+0xc],0x63
   1400178e4:	jne    0x140017ae3
   1400178ea:	cmp    WORD PTR [rcx+0xe],0x74
   1400178ef:	jne    0x140017ae3
   1400178f5:	mov    eax,0x1d
   1400178fa:	mov    ecx,0x56
   1400178ff:	test   dl,dl
   140017901:	cmovne eax,ecx
   140017904:	ret    
   140017905:	cmp    ax,0x63
   140017909:	jne    0x14001795e
   14001790b:	cmp    WORD PTR [rcx+0x2],0x6f
   140017910:	jne    0x140017ae3
   140017916:	cmp    WORD PTR [rcx+0x4],0x6e
   14001791b:	jne    0x140017ae3
   140017921:	cmp    WORD PTR [rcx+0x6],0x74
   140017926:	jne    0x140017ae3
   14001792c:	cmp    WORD PTR [rcx+0x8],0x69
   140017931:	jne    0x140017ae3
   140017937:	cmp    WORD PTR [rcx+0xa],0x6e
   14001793c:	jne    0x140017ae3
   140017942:	cmp    WORD PTR [rcx+0xc],0x75
   140017947:	jne    0x140017ae3
   14001794d:	cmp    WORD PTR [rcx+0xe],0x65
   140017952:	jne    0x140017ae3
   140017958:	mov    eax,0x9
   14001795d:	ret    
   14001795e:	cmp    ax,0x64
   140017962:	jne    0x1400179b7
   140017964:	cmp    WORD PTR [rcx+0x2],0x65
   140017969:	jne    0x140017ae3
   14001796f:	cmp    WORD PTR [rcx+0x4],0x62
   140017974:	jne    0x140017ae3
   14001797a:	cmp    WORD PTR [rcx+0x6],0x75
   14001797f:	jne    0x140017ae3
   140017985:	cmp    WORD PTR [rcx+0x8],0x67
   14001798a:	jne    0x140017ae3
   140017990:	cmp    WORD PTR [rcx+0xa],0x67
   140017995:	jne    0x140017ae3
   14001799b:	cmp    WORD PTR [rcx+0xc],0x65
   1400179a0:	jne    0x140017ae3
   1400179a6:	cmp    WORD PTR [rcx+0xe],0x72
   1400179ab:	jne    0x140017ae3
   1400179b1:	mov    eax,0x55
   1400179b6:	ret    
   1400179b7:	cmp    ax,0x66
   1400179bb:	jne    0x140017a10
   1400179bd:	cmp    WORD PTR [rcx+0x2],0x75
   1400179c2:	jne    0x140017ae3
   1400179c8:	cmp    WORD PTR [rcx+0x4],0x6e
   1400179cd:	jne    0x140017ae3
   1400179d3:	cmp    WORD PTR [rcx+0x6],0x63
   1400179d8:	jne    0x140017ae3
   1400179de:	cmp    WORD PTR [rcx+0x8],0x74
   1400179e3:	jne    0x140017ae3
   1400179e9:	cmp    WORD PTR [rcx+0xa],0x69
   1400179ee:	jne    0x140017ae3
   1400179f4:	cmp    WORD PTR [rcx+0xc],0x6f
   1400179f9:	jne    0x140017ae3
   1400179ff:	cmp    WORD PTR [rcx+0xe],0x6e
   140017a04:	jne    0x140017ae3
   140017a0a:	mov    eax,0x16
   140017a0f:	ret    
   140017a10:	test   dl,dl
   140017a12:	je     0x140017aa9
   140017a18:	cmp    ax,0x70
   140017a1c:	jne    0x140017a6c
   140017a1e:	cmp    WORD PTR [rcx+0x2],0x72
   140017a23:	jne    0x140017ae3
   140017a29:	cmp    WORD PTR [rcx+0x4],0x6f
   140017a2e:	jne    0x140017ae3
   140017a34:	cmp    WORD PTR [rcx+0x6],ax
   140017a38:	jne    0x140017ae3
   140017a3e:	cmp    WORD PTR [rcx+0x8],0x65
   140017a43:	jne    0x140017ae3
   140017a49:	cmp    WORD PTR [rcx+0xa],0x72
   140017a4e:	jne    0x140017ae3
   140017a54:	cmp    WORD PTR [rcx+0xc],0x74
   140017a59:	jne    0x140017ae3
   140017a5f:	cmp    WORD PTR [rcx+0xe],0x79
   140017a64:	jne    0x140017ae3
   140017a66:	mov    eax,0x42
   140017a6b:	ret    
   140017a6c:	cmp    ax,0x72
   140017a70:	jne    0x140017aa9
   140017a72:	cmp    WORD PTR [rcx+0x2],0x65
   140017a77:	jne    0x140017ae3
   140017a79:	cmp    WORD PTR [rcx+0x4],0x61
   140017a7e:	jne    0x140017ae3
   140017a80:	cmp    WORD PTR [rcx+0x6],0x64
   140017a85:	jne    0x140017ae3
   140017a87:	cmp    WORD PTR [rcx+0x8],0x6f
   140017a8c:	jne    0x140017ae3
   140017a8e:	cmp    WORD PTR [rcx+0xa],0x6e
   140017a93:	jne    0x140017ae3
   140017a95:	cmp    WORD PTR [rcx+0xc],0x6c
   140017a9a:	jne    0x140017ae3
   140017a9c:	cmp    WORD PTR [rcx+0xe],0x79
   140017aa1:	jne    0x140017ae3
   140017aa3:	mov    eax,0x44
   140017aa8:	ret    
   140017aa9:	cmp    ax,0x76
   140017aad:	jne    0x140017ae3
   140017aaf:	cmp    WORD PTR [rcx+0x2],0x6f
   140017ab4:	jne    0x140017ae3
   140017ab6:	cmp    WORD PTR [rcx+0x4],0x6c
   140017abb:	jne    0x140017ae3
   140017abd:	cmp    WORD PTR [rcx+0x6],0x61
   140017ac2:	jne    0x140017ae3
   140017ac4:	cmp    WORD PTR [rcx+0x8],0x74
   140017ac9:	jne    0x140017ae3
   140017acb:	cmp    WORD PTR [rcx+0xa],0x69
   140017ad0:	jne    0x140017ae3
   140017ad2:	cmp    WORD PTR [rcx+0xc],0x6c
   140017ad7:	jne    0x140017ae3
   140017ad9:	cmp    WORD PTR [rcx+0xe],0x65
   140017ade:	jmp    0x1400178ef
   140017ae3:	mov    eax,0x1d
   140017ae8:	ret    
   140017ae9:	int3   
   140017aea:	int3   
   140017aeb:	int3   
   140017aec:	int3   
   140017aed:	int3   
   140017aee:	int3   
   140017aef:	int3   
   140017af0:	movzx  eax,WORD PTR [rcx]
   140017af3:	cmp    ax,0x69
   140017af7:	jne    0x140017b61
   140017af9:	cmp    WORD PTR [rcx+0x2],0x6e
   140017afe:	jne    0x140017bdf
   140017b04:	cmp    WORD PTR [rcx+0x4],0x74
   140017b09:	jne    0x140017bdf
   140017b0f:	cmp    WORD PTR [rcx+0x6],0x65
   140017b14:	jne    0x140017bdf
   140017b1a:	cmp    WORD PTR [rcx+0x8],0x72
   140017b1f:	jne    0x140017bdf
   140017b25:	cmp    WORD PTR [rcx+0xa],0x66
   140017b2a:	jne    0x140017bdf
   140017b30:	cmp    WORD PTR [rcx+0xc],0x61
   140017b35:	jne    0x140017bdf
   140017b3b:	cmp    WORD PTR [rcx+0xe],0x63
   140017b40:	jne    0x140017bdf
   140017b46:	cmp    WORD PTR [rcx+0x10],0x65
   140017b4b:	jne    0x140017bdf
   140017b51:	mov    eax,0x1d
   140017b56:	mov    ecx,0x56
   140017b5b:	test   dl,dl
   140017b5d:	cmovne eax,ecx
   140017b60:	ret    
   140017b61:	cmp    ax,0x70
   140017b65:	jne    0x140017b9f
   140017b67:	cmp    WORD PTR [rcx+0x2],0x72
   140017b6c:	jne    0x140017bdf
   140017b6e:	cmp    WORD PTR [rcx+0x4],0x6f
   140017b73:	jne    0x140017bdf
   140017b75:	cmp    WORD PTR [rcx+0x6],0x74
   140017b7a:	jne    0x140017bdf
   140017b7c:	cmp    WORD PTR [rcx+0x8],0x65
   140017b81:	jne    0x140017bdf
   140017b83:	cmp    WORD PTR [rcx+0xa],0x63
   140017b88:	jne    0x140017bdf
   140017b8a:	cmp    WORD PTR [rcx+0xc],0x74
   140017b8f:	jne    0x140017bdf
   140017b91:	cmp    WORD PTR [rcx+0xe],0x65
   140017b96:	jne    0x140017bdf
   140017b98:	cmp    WORD PTR [rcx+0x10],0x64
   140017b9d:	jmp    0x140017b4b
   140017b9f:	cmp    ax,0x74
   140017ba3:	jne    0x140017bdf
   140017ba5:	cmp    WORD PTR [rcx+0x2],0x72
   140017baa:	jne    0x140017bdf
   140017bac:	cmp    WORD PTR [rcx+0x4],0x61
   140017bb1:	jne    0x140017bdf
   140017bb3:	cmp    WORD PTR [rcx+0x6],0x6e
   140017bb8:	jne    0x140017bdf
   140017bba:	cmp    WORD PTR [rcx+0x8],0x73
   140017bbf:	jne    0x140017bdf
   140017bc1:	cmp    WORD PTR [rcx+0xa],0x69
   140017bc6:	jne    0x140017bdf
   140017bc8:	cmp    WORD PTR [rcx+0xc],0x65
   140017bcd:	jne    0x140017bdf
   140017bcf:	cmp    WORD PTR [rcx+0xe],0x6e
   140017bd4:	jne    0x140017bdf
   140017bd6:	cmp    WORD PTR [rcx+0x10],ax
   140017bda:	jmp    0x140017b4b
   140017bdf:	mov    eax,0x1d
   140017be4:	ret    
   140017be5:	int3   
   140017be6:	int3   
   140017be7:	int3   
   140017be8:	int3   
   140017be9:	int3   
   140017bea:	int3   
   140017beb:	int3   
   140017bec:	int3   
   140017bed:	int3   
   140017bee:	int3   
   140017bef:	int3   
   140017bf0:	cmp    WORD PTR [rcx],0x69
   140017bf4:	jne    0x140017c91
   140017bfa:	movzx  eax,WORD PTR [rcx+0x2]
   140017bfe:	cmp    ax,0x6d
   140017c02:	jne    0x140017c4f
   140017c04:	cmp    WORD PTR [rcx+0x4],0x70
   140017c09:	jne    0x140017c91
   140017c0f:	cmp    WORD PTR [rcx+0x6],0x6c
   140017c14:	jne    0x140017c91
   140017c16:	cmp    WORD PTR [rcx+0x8],0x65
   140017c1b:	jne    0x140017c91
   140017c1d:	cmp    WORD PTR [rcx+0xa],ax
   140017c21:	jne    0x140017c91
   140017c23:	cmp    WORD PTR [rcx+0xc],0x65
   140017c28:	jne    0x140017c91
   140017c2a:	cmp    WORD PTR [rcx+0xe],0x6e
   140017c2f:	jne    0x140017c91
   140017c31:	cmp    WORD PTR [rcx+0x10],0x74
   140017c36:	jne    0x140017c91
   140017c38:	cmp    WORD PTR [rcx+0x12],0x73
   140017c3d:	jne    0x140017c91
   140017c3f:	mov    eax,0x1d
   140017c44:	mov    ecx,0x56
   140017c49:	test   dl,dl
   140017c4b:	cmovne eax,ecx
   140017c4e:	ret    
   140017c4f:	cmp    ax,0x6e
   140017c53:	jne    0x140017c91
   140017c55:	cmp    WORD PTR [rcx+0x4],0x73
   140017c5a:	jne    0x140017c91
   140017c5c:	cmp    WORD PTR [rcx+0x6],0x74
   140017c61:	jne    0x140017c91
   140017c63:	cmp    WORD PTR [rcx+0x8],0x61
   140017c68:	jne    0x140017c91
   140017c6a:	cmp    WORD PTR [rcx+0xa],ax
   140017c6e:	jne    0x140017c91
   140017c70:	cmp    WORD PTR [rcx+0xc],0x63
   140017c75:	jne    0x140017c91
   140017c77:	cmp    WORD PTR [rcx+0xe],0x65
   140017c7c:	jne    0x140017c91
   140017c7e:	cmp    WORD PTR [rcx+0x10],0x6f
   140017c83:	jne    0x140017c91
   140017c85:	cmp    WORD PTR [rcx+0x12],0x66
   140017c8a:	mov    eax,0x20
   140017c8f:	je     0x140017c96
   140017c91:	mov    eax,0x1d
   140017c96:	repz ret 
   140017c98:	int3   
   140017c99:	int3   
   140017c9a:	int3   
   140017c9b:	int3   
   140017c9c:	int3   
   140017c9d:	int3   
   140017c9e:	int3   
   140017c9f:	int3   
   140017ca0:	add    r8d,0xfffffffe
   140017ca4:	mov    r10,rdx
   140017ca7:	cmp    r8d,0xa
   140017cab:	ja     0x140017d39
   140017cb1:	lea    rdx,[rip+0xfffffffffffe8348]        # 0x140000000
   140017cb8:	movsxd rax,r8d
   140017cbb:	mov    ecx,DWORD PTR [rdx+rax*4+0x17e34]
   140017cc2:	add    rcx,rdx
   140017cc5:	jmp    rcx
   140017cc7:	movzx  eax,WORD PTR [r10]
   140017ccb:	cmp    ax,0x61
   140017ccf:	jne    0x140017cea
   140017cd1:	cmp    WORD PTR [r10+0x2],0x73
   140017cd7:	jne    0x140017d39
   140017cd9:	mov    eax,0x1d
   140017cde:	mov    ecx,0x5d
   140017ce3:	test   r9b,r9b
   140017ce6:	cmovne eax,ecx
   140017ce9:	ret    
   140017cea:	cmp    ax,0x64
   140017cee:	jne    0x140017cfe
   140017cf0:	cmp    WORD PTR [r10+0x2],0x6f
   140017cf6:	jne    0x140017d39
   140017cf8:	mov    eax,0xe
   140017cfd:	ret    
   140017cfe:	cmp    ax,0x69
   140017d02:	jne    0x140017d21
   140017d04:	movzx  eax,WORD PTR [r10+0x2]
   140017d09:	cmp    ax,0x66
   140017d0d:	jne    0x140017d15
   140017d0f:	mov    eax,0x1e
   140017d14:	ret    
   140017d15:	cmp    ax,0x6e
   140017d19:	jne    0x140017d39
   140017d1b:	mov    eax,0x1f
   140017d20:	ret    
   140017d21:	test   r9b,r9b
   140017d24:	je     0x140017d39
   140017d26:	cmp    ax,0x6f
   140017d2a:	jne    0x140017d39
   140017d2c:	cmp    WORD PTR [r10+0x2],0x6e
   140017d32:	mov    eax,0x5e
   140017d37:	je     0x140017d3e
   140017d39:	mov    eax,0x1d
   140017d3e:	ret    
   140017d3f:	movzx  edx,r9b
   140017d43:	mov    rcx,r10
   140017d46:	jmp    0x140016ef0
   140017d4b:	movzx  edx,r9b
   140017d4f:	mov    rcx,r10
   140017d52:	jmp    0x140016fd0
   140017d57:	movzx  edx,r9b
   140017d5b:	mov    rcx,r10
   140017d5e:	jmp    0x1400171b0
   140017d63:	movzx  edx,r9b
   140017d67:	mov    rcx,r10
   140017d6a:	jmp    0x1400173d0
   140017d6f:	movzx  edx,r9b
   140017d73:	mov    rcx,r10
   140017d76:	jmp    0x140017700
   140017d7b:	movzx  edx,r9b
   140017d7f:	mov    rcx,r10
   140017d82:	jmp    0x1400178a0
   140017d87:	movzx  edx,r9b
   140017d8b:	mov    rcx,r10
   140017d8e:	jmp    0x140017af0
   140017d93:	movzx  edx,r9b
   140017d97:	mov    rcx,r10
   140017d9a:	jmp    0x140017bf0
   140017d9f:	cmp    WORD PTR [r10],0x73
   140017da4:	jne    0x140017d39
   140017da6:	cmp    WORD PTR [r10+0x2],0x79
   140017dac:	jne    0x140017d39
   140017dae:	cmp    WORD PTR [r10+0x4],0x6e
   140017db4:	jne    0x140017d39
   140017db6:	cmp    WORD PTR [r10+0x6],0x63
   140017dbc:	jne    0x140017d39
   140017dc2:	cmp    WORD PTR [r10+0x8],0x68
   140017dc8:	jne    0x140017d39
   140017dce:	cmp    WORD PTR [r10+0xa],0x72
   140017dd4:	jne    0x140017d39
   140017dda:	cmp    WORD PTR [r10+0xc],0x6f
   140017de0:	jne    0x140017d39
   140017de6:	cmp    WORD PTR [r10+0xe],0x6e
   140017dec:	jne    0x140017d39
   140017df2:	cmp    WORD PTR [r10+0x10],0x69
   140017df8:	jne    0x140017d39
   140017dfe:	cmp    WORD PTR [r10+0x12],0x7a
   140017e04:	jne    0x140017d39
   140017e0a:	cmp    WORD PTR [r10+0x14],0x65
   140017e10:	jne    0x140017d39
   140017e16:	cmp    WORD PTR [r10+0x16],0x64
   140017e1c:	jne    0x140017d39
   140017e22:	mov    eax,0x1d
   140017e27:	mov    ecx,0x56
   140017e2c:	test   r9b,r9b
   140017e2f:	cmovne eax,ecx
   140017e32:	ret    
   140017e33:	nop
   140017e34:	(bad)  
   140017e35:	jl     0x140017e38
   140017e37:	add    BYTE PTR [rdi],bh
   140017e39:	jge    0x140017e3c
   140017e3b:	add    BYTE PTR [rbx+0x7d],cl
   140017e3e:	add    DWORD PTR [rax],eax
   140017e40:	push   rdi
   140017e41:	jge    0x140017e44
   140017e43:	add    BYTE PTR [rbx+0x7d],ah
   140017e46:	add    DWORD PTR [rax],eax
   140017e48:	outs   dx,DWORD PTR ds:[rsi]
   140017e49:	jge    0x140017e4c
   140017e4b:	add    BYTE PTR [rbx+0x7d],bh
   140017e4e:	add    DWORD PTR [rax],eax
   140017e50:	xchg   DWORD PTR [rbp+0x1],edi
   140017e53:	add    BYTE PTR [rbx+0x3900017d],dl
   140017e59:	jge    0x140017e5c
   140017e5b:	add    BYTE PTR [rdi-0x72fffe83],bl
   140017e61:	ror    BYTE PTR [rbx+r9*4-0x2f],1
   140017e66:	cmp    ax,0x9
   140017e6a:	ja     0x140017e71
   140017e6c:	sub    dl,0x30
   140017e6f:	jmp    0x140017e82
   140017e71:	lea    eax,[rdx-0x61]
   140017e74:	cmp    ax,0x5
   140017e78:	ja     0x140017e7f
   140017e7a:	sub    dl,0x57
   140017e7d:	jmp    0x140017e82
   140017e7f:	sub    dl,0x37
   140017e82:	lea    eax,[r8-0x30]
   140017e86:	cmp    ax,0x9
   140017e8a:	ja     0x140017e92
   140017e8c:	sub    r8b,0x30
   140017e90:	jmp    0x140017ea6
   140017e92:	lea    eax,[r8-0x61]
   140017e96:	cmp    ax,0x5
   140017e9a:	ja     0x140017ea2
   140017e9c:	sub    r8b,0x57
   140017ea0:	jmp    0x140017ea6
   140017ea2:	sub    r8b,0x37
   140017ea6:	lea    eax,[r9-0x30]
   140017eaa:	cmp    ax,0x9
   140017eae:	ja     0x140017eb6
   140017eb0:	sub    r9b,0x30
   140017eb4:	jmp    0x140017eca
   140017eb6:	lea    eax,[r9-0x61]
   140017eba:	cmp    ax,0x5
   140017ebe:	ja     0x140017ec6
   140017ec0:	sub    r9b,0x57
   140017ec4:	jmp    0x140017eca
   140017ec6:	sub    r9b,0x37
   140017eca:	movzx  eax,WORD PTR [rsp+0x28]
   140017ecf:	lea    ecx,[rax-0x30]
   140017ed2:	cmp    cx,0x9
   140017ed6:	ja     0x140017edc
   140017ed8:	sub    al,0x30
   140017eda:	jmp    0x140017eeb
   140017edc:	lea    ecx,[rax-0x61]
   140017edf:	cmp    cx,0x5
   140017ee3:	ja     0x140017ee9
   140017ee5:	sub    al,0x57
   140017ee7:	jmp    0x140017eeb
   140017ee9:	sub    al,0x37
   140017eeb:	shl    dl,0x4
   140017eee:	shl    r9b,0x4
   140017ef2:	add    r9b,al
   140017ef5:	add    dl,r8b
   140017ef8:	movzx  eax,r9b
   140017efc:	movzx  ecx,dl
   140017eff:	shl    cx,0x8
   140017f03:	or     cx,ax
   140017f06:	mov    rax,r10
   140017f09:	mov    WORD PTR [r10],cx
   140017f0d:	ret    
   140017f0e:	int3   
   140017f0f:	int3   
   140017f10:	mov    QWORD PTR [rsp+0x8],rbx
   140017f15:	mov    QWORD PTR [rsp+0x10],rsi
   140017f1a:	push   rdi
   140017f1b:	sub    rsp,0x20
   140017f1f:	mov    rbx,rcx
   140017f22:	mov    QWORD PTR [rcx],rdx
   140017f25:	add    rcx,0x8
   140017f29:	mov    rdi,rdx
   140017f2c:	call   QWORD PTR [rip+0x8666]        # 0x140020598
   140017f32:	lea    rcx,[rbx+0x10]
   140017f36:	call   QWORD PTR [rip+0x865c]        # 0x140020598
   140017f3c:	lea    rcx,[rbx+0x18]
   140017f40:	call   QWORD PTR [rip+0x8652]        # 0x140020598
   140017f46:	xor    esi,esi
   140017f48:	lea    rcx,[rbx+0x58]
   140017f4c:	mov    QWORD PTR [rbx+0x20],rsi
   140017f50:	mov    DWORD PTR [rbx+0x28],esi
   140017f53:	mov    DWORD PTR [rbx+0x2c],esi
   140017f56:	mov    dl,0xa
   140017f58:	mov    QWORD PTR [rbx+0x30],rsi
   140017f5c:	mov    QWORD PTR [rbx+0x40],rsi
   140017f60:	mov    QWORD PTR [rbx+0x48],rsi
   140017f64:	mov    QWORD PTR [rbx+0x50],rsi
   140017f68:	call   QWORD PTR [rip+0x8822]        # 0x140020790
   140017f6e:	mov    DWORD PTR [rbx+0x5c],esi
   140017f71:	mov    DWORD PTR [rbx+0x60],esi
   140017f74:	mov    QWORD PTR [rbx+0x68],rsi
   140017f78:	mov    DWORD PTR [rbx+0x70],esi
   140017f7b:	mov    DWORD PTR [rbx+0x74],esi
   140017f7e:	mov    DWORD PTR [rbx+0x78],0xffffffff
   140017f85:	mov    DWORD PTR [rbx+0x7c],esi
   140017f88:	mov    DWORD PTR [rbx+0x80],esi
   140017f8e:	mov    DWORD PTR [rbx+0x84],esi
   140017f94:	mov    DWORD PTR [rbx+0x88],esi
   140017f9a:	mov    BYTE PTR [rbx+0x8c],sil
   140017fa1:	mov    BYTE PTR [rbx+0x8d],sil
   140017fa8:	mov    BYTE PTR [rbx+0x8e],sil
   140017faf:	mov    BYTE PTR [rbx+0x8f],sil
   140017fb6:	mov    BYTE PTR [rbx+0x90],sil
   140017fbd:	mov    BYTE PTR [rbx+0x91],0x1
   140017fc4:	mov    BYTE PTR [rbx+0x92],0x1
   140017fcb:	test   rdi,rdi
   140017fce:	je     0x140017fdb
   140017fd0:	mov    rdx,rbx
   140017fd3:	mov    rcx,rdi
   140017fd6:	call   0x140016b00
   140017fdb:	mov    rsi,QWORD PTR [rsp+0x38]
   140017fe0:	mov    rax,rbx
   140017fe3:	mov    rbx,QWORD PTR [rsp+0x30]
   140017fe8:	add    rsp,0x20
   140017fec:	pop    rdi
   140017fed:	ret    
   140017fee:	int3   
   140017fef:	int3   
   140017ff0:	mov    al,BYTE PTR [rcx+0x92]
   140017ff6:	ret    
   140017ff7:	int3   
   140017ff8:	int3   
   140017ff9:	int3   
   140017ffa:	int3   
   140017ffb:	int3   
   140017ffc:	int3   
   140017ffd:	int3   
   140017ffe:	int3   
   140017fff:	int3   
   140018000:	mov    QWORD PTR [rsp+0x8],rbx
   140018005:	mov    QWORD PTR [rsp+0x10],rbp
   14001800a:	mov    QWORD PTR [rsp+0x18],rsi
   14001800f:	push   rdi
   140018010:	sub    rsp,0x20
   140018014:	mov    rdi,rcx
   140018017:	mov    rcx,QWORD PTR [rcx]
   14001801a:	movzx  ebx,r9b
   14001801e:	mov    ebp,r8d
   140018021:	mov    rsi,rdx
   140018024:	test   rcx,rcx
   140018027:	je     0x14001802e
   140018029:	call   0x140016ae0
   14001802e:	lea    rcx,[rdi+0x8]
   140018032:	mov    rdx,rsi
   140018035:	mov    BYTE PTR [rdi+0x92],bl
   14001803b:	call   QWORD PTR [rip+0x8527]        # 0x140020568
   140018041:	lea    rcx,[rdi+0x10]
   140018045:	call   QWORD PTR [rip+0x8455]        # 0x1400204a0
   14001804b:	lea    rcx,[rdi+0x10]
   14001804f:	mov    edx,0x400
   140018054:	call   QWORD PTR [rip+0x843e]        # 0x140020498
   14001805a:	lea    rcx,[rdi+0x18]
   14001805e:	call   QWORD PTR [rip+0x843c]        # 0x1400204a0
   140018064:	xor    ebx,ebx
   140018066:	mov    rcx,rsi
   140018069:	mov    QWORD PTR [rdi+0x20],rbx
   14001806d:	mov    DWORD PTR [rdi+0x28],ebx
   140018070:	mov    DWORD PTR [rdi+0x2c],ebx
   140018073:	call   QWORD PTR [rip+0x83a7]        # 0x140020420
   140018079:	mov    QWORD PTR [rdi+0x30],rax
   14001807d:	mov    rcx,QWORD PTR [rsi]
   140018080:	movsxd rdx,DWORD PTR [rcx+0x4]
   140018084:	mov    QWORD PTR [rdi+0x40],rax
   140018088:	mov    QWORD PTR [rdi+0x48],rax
   14001808c:	lea    rcx,[rax+rdx*2]
   140018090:	mov    dl,0xa
   140018092:	mov    QWORD PTR [rdi+0x50],rax
   140018096:	mov    QWORD PTR [rdi+0x38],rcx
   14001809a:	lea    rcx,[rsp+0x48]
   14001809f:	call   QWORD PTR [rip+0x86eb]        # 0x140020790
   1400180a5:	movzx  r11d,WORD PTR [rsp+0x48]
   1400180ab:	mov    rsi,QWORD PTR [rsp+0x40]
   1400180b0:	mov    DWORD PTR [rdi+0x5c],ebx
   1400180b3:	mov    DWORD PTR [rdi+0x60],ebp
   1400180b6:	mov    QWORD PTR [rdi+0x68],rbx
   1400180ba:	mov    DWORD PTR [rdi+0x70],ebx
   1400180bd:	mov    DWORD PTR [rdi+0x74],ebx
   1400180c0:	mov    DWORD PTR [rdi+0x7c],ebx
   1400180c3:	mov    DWORD PTR [rdi+0x84],ebx
   1400180c9:	mov    DWORD PTR [rdi+0x88],ebp
   1400180cf:	mov    rbp,QWORD PTR [rsp+0x38]
   1400180d4:	mov    BYTE PTR [rdi+0x8c],bl
   1400180da:	mov    BYTE PTR [rdi+0x8d],bl
   1400180e0:	mov    BYTE PTR [rdi+0x8e],bl
   1400180e6:	mov    BYTE PTR [rdi+0x8f],bl
   1400180ec:	mov    BYTE PTR [rdi+0x90],bl
   1400180f2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400180f7:	mov    WORD PTR [rdi+0x58],r11w
   1400180fc:	mov    DWORD PTR [rdi+0x78],0xffffffff
   140018103:	mov    BYTE PTR [rdi+0x91],0x1
   14001810a:	add    rsp,0x20
   14001810e:	pop    rdi
   14001810f:	ret    
   140018110:	dec    ecx
   140018112:	cmp    ecx,0x4f
   140018115:	ja     0x140018138
   140018117:	lea    rdx,[rip+0xfffffffffffe7ee2]        # 0x140000000
   14001811e:	movsxd rax,ecx
   140018121:	movzx  eax,BYTE PTR [rdx+rax*1+0x18144]
   140018129:	mov    ecx,DWORD PTR [rdx+rax*4+0x1813c]
   140018130:	add    rcx,rdx
   140018133:	jmp    rcx
   140018135:	mov    al,0x1
   140018137:	ret    
   140018138:	xor    al,al
   14001813a:	ret    
   14001813b:	nop
   14001813c:	xor    eax,0x38000181
   140018141:	add    DWORD PTR [rcx],0x0
   140018147:	add    DWORD PTR [rcx],eax
   140018149:	add    DWORD PTR [rcx],eax
   14001814b:	add    DWORD PTR [rcx],eax
   14001814d:	add    DWORD PTR [rcx],eax
   14001814f:	add    BYTE PTR [rax],al
   140018151:	add    DWORD PTR [rcx],eax
   140018153:	add    DWORD PTR [rax],eax
   140018155:	add    BYTE PTR [rax],al
   140018157:	add    DWORD PTR [rcx],eax
   140018159:	add    DWORD PTR [rax],eax
   14001815b:	add    BYTE PTR [rax],al
   14001815d:	add    BYTE PTR [rax],al
   14001815f:	add    BYTE PTR [rcx],al
   140018161:	add    DWORD PTR [rcx],eax
   140018163:	add    DWORD PTR [rcx],eax
   140018165:	add    DWORD PTR [rax],eax
   140018167:	add    DWORD PTR [rax],eax
   140018169:	add    BYTE PTR [rax],al
   14001816b:	add    BYTE PTR [rax],al
   14001816d:	add    DWORD PTR [rcx],eax
   14001816f:	add    DWORD PTR [rax],eax
   140018171:	add    BYTE PTR [rcx],al
   140018173:	add    BYTE PTR [rax],al
   140018175:	add    BYTE PTR [rax],al
   140018177:	add    BYTE PTR [rcx],al
   140018179:	add    DWORD PTR [rcx],eax
   14001817b:	add    DWORD PTR [rax],eax
   14001817d:	add    BYTE PTR [rax],al
   14001817f:	add    DWORD PTR [rcx],eax
   140018181:	add    DWORD PTR [rax],eax
   140018183:	add    BYTE PTR [rcx],al
   140018185:	add    DWORD PTR [rcx],eax
   140018187:	add    DWORD PTR [rcx],eax
   140018189:	add    DWORD PTR [rcx],eax
   14001818b:	add    DWORD PTR [rcx],eax
   14001818d:	add    DWORD PTR [rcx],eax
   14001818f:	add    DWORD PTR [rcx],eax
   140018191:	add    DWORD PTR [rax],eax
   140018193:	add    ah,cl
   140018195:	int3   
   140018196:	int3   
   140018197:	int3   
   140018198:	int3   
   140018199:	int3   
   14001819a:	int3   
   14001819b:	int3   
   14001819c:	int3   
   14001819d:	int3   
   14001819e:	int3   
   14001819f:	int3   
   1400181a0:	sub    rsp,0x28
   1400181a4:	cmp    cx,0x61
   1400181a8:	jb     0x1400181b0
   1400181aa:	cmp    cx,0x7a
   1400181ae:	jbe    0x14001821a
   1400181b0:	cmp    cx,0x41
   1400181b4:	jb     0x1400181bc
   1400181b6:	cmp    cx,0x5a
   1400181ba:	jbe    0x14001821a
   1400181bc:	cmp    cx,0x30
   1400181c0:	jb     0x1400181c8
   1400181c2:	cmp    cx,0x39
   1400181c6:	jbe    0x14001821a
   1400181c8:	cmp    cx,0x24
   1400181cc:	je     0x14001821a
   1400181ce:	cmp    cx,0x5f
   1400181d2:	je     0x14001821a
   1400181d4:	mov    eax,0x200c
   1400181d9:	cmp    cx,ax
   1400181dc:	je     0x14001821a
   1400181de:	mov    eax,0x200d
   1400181e3:	cmp    cx,ax
   1400181e6:	je     0x14001821a
   1400181e8:	movzx  ecx,cx
   1400181eb:	call   QWORD PTR [rip+0x82b7]        # 0x1400204a8
   1400181f1:	cmp    eax,0x13
   1400181f4:	ja     0x140018213
   1400181f6:	lea    rdx,[rip+0xfffffffffffe7e03]        # 0x140000000
   1400181fd:	cdqe   
   1400181ff:	movzx  eax,BYTE PTR [rdx+rax*1+0x1822c]
   140018207:	mov    ecx,DWORD PTR [rdx+rax*4+0x18224]
   14001820e:	add    rcx,rdx
   140018211:	jmp    rcx
   140018213:	xor    al,al
   140018215:	add    rsp,0x28
   140018219:	ret    
   14001821a:	mov    al,0x1
   14001821c:	add    rsp,0x28
   140018220:	ret    
   140018221:	nop    DWORD PTR [rax]
   140018224:	sbb    al,BYTE PTR [rdx-0x7decffff]
   14001822a:	add    DWORD PTR [rax],eax
   14001822c:	add    BYTE PTR [rax],al
   14001822e:	add    DWORD PTR [rax],eax
   140018230:	add    BYTE PTR [rcx],al
   140018232:	add    DWORD PTR [rcx],eax
   140018234:	add    DWORD PTR [rcx],eax
   140018236:	add    DWORD PTR [rcx],eax
   140018238:	add    DWORD PTR [rcx],eax
   14001823a:	add    BYTE PTR [rax],al
   14001823c:	add    BYTE PTR [rax],al
   14001823e:	add    BYTE PTR [rax],al
   140018240:	movzx  eax,WORD PTR [rcx+0x58]
   140018244:	cmp    ax,0xa
   140018248:	je     0x140018267
   14001824a:	cmp    ax,0xd
   14001824e:	je     0x140018267
   140018250:	mov    ecx,0x2028
   140018255:	cmp    ax,cx
   140018258:	je     0x140018267
   14001825a:	mov    ecx,0x2029
   14001825f:	cmp    ax,cx
   140018262:	je     0x140018267
   140018264:	xor    al,al
   140018266:	ret    
   140018267:	mov    al,0x1
   140018269:	ret    
   14001826a:	int3   
   14001826b:	int3   
   14001826c:	int3   
   14001826d:	int3   
   14001826e:	int3   
   14001826f:	int3   
   140018270:	movzx  eax,WORD PTR [rcx+0x58]
   140018274:	cmp    eax,0xa
   140018277:	je     0x14001829f
   140018279:	cmp    eax,0xd
   14001827c:	je     0x14001828f
   14001827e:	cmp    eax,0x2027
   140018283:	jle    0x14001828c
   140018285:	cmp    eax,0x2029
   14001828a:	jle    0x14001829f
   14001828c:	xor    eax,eax
   14001828e:	ret    
   14001828f:	mov    rcx,QWORD PTR [rcx+0x30]
   140018293:	xor    eax,eax
   140018295:	cmp    WORD PTR [rcx],0xa
   140018299:	sete   al
   14001829c:	inc    eax
   14001829e:	ret    
   14001829f:	mov    eax,0x1
   1400182a4:	ret    
   1400182a5:	int3   
   1400182a6:	int3   
   1400182a7:	int3   
   1400182a8:	int3   
   1400182a9:	int3   
   1400182aa:	int3   
   1400182ab:	int3   
   1400182ac:	int3   
   1400182ad:	int3   
   1400182ae:	int3   
   1400182af:	int3   
   1400182b0:	mov    WORD PTR [rsp+0x8],cx
   1400182b5:	sub    rsp,0x28
   1400182b9:	lea    rcx,[rsp+0x38]
   1400182be:	mov    dl,0x61
   1400182c0:	call   QWORD PTR [rip+0x84ca]        # 0x140020790
   1400182c6:	movzx  eax,WORD PTR [rax]
   1400182c9:	cmp    WORD PTR [rsp+0x30],ax
   1400182ce:	jb     0x1400182e7
   1400182d0:	lea    rcx,[rsp+0x38]
   1400182d5:	mov    dl,0x7a
   1400182d7:	call   QWORD PTR [rip+0x84b3]        # 0x140020790
   1400182dd:	movzx  eax,WORD PTR [rax]
   1400182e0:	cmp    ax,WORD PTR [rsp+0x30]
   1400182e5:	jae    0x140018366
   1400182e7:	lea    rcx,[rsp+0x38]
   1400182ec:	mov    dl,0x41
   1400182ee:	call   QWORD PTR [rip+0x849c]        # 0x140020790
   1400182f4:	movzx  eax,WORD PTR [rax]
   1400182f7:	cmp    WORD PTR [rsp+0x30],ax
   1400182fc:	jb     0x140018315
   1400182fe:	lea    rcx,[rsp+0x38]
   140018303:	mov    dl,0x5a
   140018305:	call   QWORD PTR [rip+0x8485]        # 0x140020790
   14001830b:	movzx  eax,WORD PTR [rax]
   14001830e:	cmp    ax,WORD PTR [rsp+0x30]
   140018313:	jae    0x140018366
   140018315:	lea    rcx,[rsp+0x38]
   14001831a:	mov    dl,0x24
   14001831c:	call   QWORD PTR [rip+0x846e]        # 0x140020790
   140018322:	movzx  eax,WORD PTR [rax]
   140018325:	cmp    WORD PTR [rsp+0x30],ax
   14001832a:	je     0x140018366
   14001832c:	lea    rcx,[rsp+0x38]
   140018331:	mov    dl,0x5f
   140018333:	call   QWORD PTR [rip+0x8457]        # 0x140020790
   140018339:	mov    r11,rax
   14001833c:	movzx  eax,WORD PTR [rsp+0x30]
   140018341:	cmp    ax,WORD PTR [r11]
   140018345:	je     0x140018366
   140018347:	mov    ecx,0x80
   14001834c:	cmp    ax,cx
   14001834f:	jae    0x140018358
   140018351:	xor    al,al
   140018353:	add    rsp,0x28
   140018357:	ret    
   140018358:	movzx  ecx,ax
   14001835b:	call   QWORD PTR [rip+0x814f]        # 0x1400204b0
   140018361:	add    rsp,0x28
   140018365:	ret    
   140018366:	mov    al,0x1
   140018368:	add    rsp,0x28
   14001836c:	ret    
   14001836d:	int3   
   14001836e:	int3   
   14001836f:	int3   
   140018370:	mov    WORD PTR [rsp+0x8],cx
   140018375:	sub    rsp,0x38
   140018379:	lea    rcx,[rsp+0x48]
   14001837e:	mov    dl,0x30
   140018380:	call   QWORD PTR [rip+0x840a]        # 0x140020790
   140018386:	movzx  eax,WORD PTR [rax]
   140018389:	cmp    WORD PTR [rsp+0x40],ax
   14001838e:	jb     0x1400183a7
   140018390:	lea    rcx,[rsp+0x50]
   140018395:	mov    dl,0x39
   140018397:	call   QWORD PTR [rip+0x83f3]        # 0x140020790
   14001839d:	movzx  eax,WORD PTR [rax]
   1400183a0:	cmp    ax,WORD PTR [rsp+0x40]
   1400183a5:	jae    0x140018403
   1400183a7:	lea    rcx,[rsp+0x58]
   1400183ac:	mov    dl,0x61
   1400183ae:	call   QWORD PTR [rip+0x83dc]        # 0x140020790
   1400183b4:	movzx  eax,WORD PTR [rax]
   1400183b7:	cmp    WORD PTR [rsp+0x40],ax
   1400183bc:	jb     0x1400183d5
   1400183be:	lea    rcx,[rsp+0x20]
   1400183c3:	mov    dl,0x66
   1400183c5:	call   QWORD PTR [rip+0x83c5]        # 0x140020790
   1400183cb:	movzx  eax,WORD PTR [rax]
   1400183ce:	cmp    ax,WORD PTR [rsp+0x40]
   1400183d3:	jae    0x140018403
   1400183d5:	lea    rcx,[rsp+0x22]
   1400183da:	mov    dl,0x41
   1400183dc:	call   QWORD PTR [rip+0x83ae]        # 0x140020790
   1400183e2:	movzx  eax,WORD PTR [rax]
   1400183e5:	cmp    WORD PTR [rsp+0x40],ax
   1400183ea:	jb     0x14001840a
   1400183ec:	lea    rcx,[rsp+0x24]
   1400183f1:	mov    dl,0x46
   1400183f3:	call   QWORD PTR [rip+0x8397]        # 0x140020790
   1400183f9:	movzx  eax,WORD PTR [rax]
   1400183fc:	cmp    ax,WORD PTR [rsp+0x40]
   140018401:	jb     0x14001840a
   140018403:	mov    al,0x1
   140018405:	add    rsp,0x38
   140018409:	ret    
   14001840a:	xor    al,al
   14001840c:	add    rsp,0x38
   140018410:	ret    
   140018411:	int3   
   140018412:	int3   
   140018413:	int3   
   140018414:	int3   
   140018415:	int3   
   140018416:	int3   
   140018417:	int3   
   140018418:	int3   
   140018419:	int3   
   14001841a:	int3   
   14001841b:	int3   
   14001841c:	int3   
   14001841d:	int3   
   14001841e:	int3   
   14001841f:	int3   
   140018420:	rex push rbx
   140018422:	sub    rsp,0x20
   140018426:	mov    rbx,rdx
   140018429:	lea    rdx,[rcx+0x18]
   14001842d:	mov    rcx,rbx
   140018430:	call   QWORD PTR [rip+0x8362]        # 0x140020798
   140018436:	mov    rax,rbx
   140018439:	add    rsp,0x20
   14001843d:	pop    rbx
   14001843e:	ret    
   14001843f:	int3   
   140018440:	cmp    edx,0x37
   140018443:	je     0x14001845e
   140018445:	test   edx,edx
   140018447:	je     0x14001845e
   140018449:	cmp    BYTE PTR [rcx+0x8f],0x0
   140018450:	jne    0x14001845e
   140018452:	cmp    BYTE PTR [rcx+0x90],0x0
   140018459:	jne    0x14001845e
   14001845b:	xor    al,al
   14001845d:	ret    
   14001845e:	mov    al,0x1
   140018460:	ret    
   140018461:	int3   
   140018462:	int3   
   140018463:	int3   
   140018464:	int3   
   140018465:	int3   
   140018466:	int3   
   140018467:	int3   
   140018468:	int3   
   140018469:	int3   
   14001846a:	int3   
   14001846b:	int3   
   14001846c:	int3   
   14001846d:	int3   
   14001846e:	int3   
   14001846f:	int3   
   140018470:	mov    QWORD PTR [rsp+0x8],rbx
   140018475:	mov    QWORD PTR [rsp+0x20],rbp
   14001847a:	mov    DWORD PTR [rsp+0x10],edx
   14001847e:	push   rsi
   14001847f:	push   rdi
   140018480:	push   r12
   140018482:	sub    rsp,0x20
   140018486:	mov    eax,DWORD PTR [rcx+0x4]
   140018489:	mov    rsi,QWORD PTR [rcx+0x8]
   14001848d:	mov    rbx,rcx
   140018490:	cmp    edx,eax
   140018492:	lea    r9,[rsp+0x48]
   140018497:	lea    rcx,[rsp+0x50]
   14001849c:	cmovge r9,rcx
   1400184a0:	movsxd rbp,r8d
   1400184a3:	mov    DWORD PTR [rsp+0x50],eax
   1400184a7:	movsxd r12,DWORD PTR [r9]
   1400184aa:	mov    edi,edx
   1400184ac:	cmp    ebp,DWORD PTR [rbx]
   1400184ae:	je     0x1400184e5
   1400184b0:	cmp    ebp,0x20
   1400184b3:	jle    0x1400184c2
   1400184b5:	mov    rcx,rbp
   1400184b8:	call   QWORD PTR [rip+0x7d12]        # 0x1400201d0
   1400184be:	mov    DWORD PTR [rbx],ebp
   1400184c0:	jmp    0x1400184cc
   1400184c2:	lea    rax,[rbx+0x10]
   1400184c6:	mov    DWORD PTR [rbx],0x20
   1400184cc:	mov    r8,r12
   1400184cf:	mov    rdx,rsi
   1400184d2:	mov    rcx,rax
   1400184d5:	mov    QWORD PTR [rbx+0x8],rax
   1400184d9:	mov    DWORD PTR [rbx+0x4],0x0
   1400184e0:	call   0x14001edd4
   1400184e5:	lea    rax,[rbx+0x10]
   1400184e9:	mov    DWORD PTR [rbx+0x4],r12d
   1400184ed:	cmp    rsi,rax
   1400184f0:	je     0x140018501
   1400184f2:	cmp    rsi,QWORD PTR [rbx+0x8]
   1400184f6:	je     0x140018501
   1400184f8:	mov    rcx,rsi
   1400184fb:	call   QWORD PTR [rip+0x7ce7]        # 0x1400201e8
   140018501:	mov    rbp,QWORD PTR [rsp+0x58]
   140018506:	mov    DWORD PTR [rbx+0x4],edi
   140018509:	mov    rbx,QWORD PTR [rsp+0x40]
   14001850e:	add    rsp,0x20
   140018512:	pop    r12
   140018514:	pop    rdi
   140018515:	pop    rsi
   140018516:	ret    
   140018517:	int3   
   140018518:	int3   
   140018519:	int3   
   14001851a:	int3   
   14001851b:	int3   
   14001851c:	int3   
   14001851d:	int3   
   14001851e:	int3   
   14001851f:	int3   
   140018520:	mov    QWORD PTR [rsp+0x8],rbx
   140018525:	mov    QWORD PTR [rsp+0x20],rbp
   14001852a:	mov    DWORD PTR [rsp+0x10],edx
   14001852e:	push   rsi
   14001852f:	push   rdi
   140018530:	push   r12
   140018532:	sub    rsp,0x20
   140018536:	mov    eax,DWORD PTR [rcx+0x4]
   140018539:	mov    rsi,QWORD PTR [rcx+0x8]
   14001853d:	mov    rbx,rcx
   140018540:	cmp    edx,eax
   140018542:	lea    r9,[rsp+0x48]
   140018547:	lea    rcx,[rsp+0x50]
   14001854c:	cmovge r9,rcx
   140018550:	movsxd rbp,r8d
   140018553:	mov    DWORD PTR [rsp+0x50],eax
   140018557:	movsxd r12,DWORD PTR [r9]
   14001855a:	mov    edi,edx
   14001855c:	cmp    ebp,DWORD PTR [rbx]
   14001855e:	je     0x140018595
   140018560:	cmp    ebp,0x40
   140018563:	jle    0x140018572
   140018565:	mov    rcx,rbp
   140018568:	call   QWORD PTR [rip+0x7c62]        # 0x1400201d0
   14001856e:	mov    DWORD PTR [rbx],ebp
   140018570:	jmp    0x14001857c
   140018572:	lea    rax,[rbx+0x10]
   140018576:	mov    DWORD PTR [rbx],0x40
   14001857c:	mov    r8,r12
   14001857f:	mov    rdx,rsi
   140018582:	mov    rcx,rax
   140018585:	mov    QWORD PTR [rbx+0x8],rax
   140018589:	mov    DWORD PTR [rbx+0x4],0x0
   140018590:	call   0x14001edd4
   140018595:	lea    rax,[rbx+0x10]
   140018599:	mov    DWORD PTR [rbx+0x4],r12d
   14001859d:	cmp    rsi,rax
   1400185a0:	je     0x1400185b1
   1400185a2:	cmp    rsi,QWORD PTR [rbx+0x8]
   1400185a6:	je     0x1400185b1
   1400185a8:	mov    rcx,rsi
   1400185ab:	call   QWORD PTR [rip+0x7c37]        # 0x1400201e8
   1400185b1:	mov    rbp,QWORD PTR [rsp+0x58]
   1400185b6:	mov    DWORD PTR [rbx+0x4],edi
   1400185b9:	mov    rbx,QWORD PTR [rsp+0x40]
   1400185be:	add    rsp,0x20
   1400185c2:	pop    r12
   1400185c4:	pop    rdi
   1400185c5:	pop    rsi
   1400185c6:	ret    
   1400185c7:	int3   
   1400185c8:	int3   
   1400185c9:	int3   
   1400185ca:	int3   
   1400185cb:	int3   
   1400185cc:	int3   
   1400185cd:	int3   
   1400185ce:	int3   
   1400185cf:	int3   
   1400185d0:	movzx  eax,WORD PTR [rcx+0x58]
   1400185d4:	xor    r8d,r8d
   1400185d7:	mov    rdx,rcx
   1400185da:	cmp    eax,0xa
   1400185dd:	je     0x14001860b
   1400185df:	cmp    eax,0xd
   1400185e2:	je     0x1400185f7
   1400185e4:	cmp    eax,0x2027
   1400185e9:	jle    0x1400185f2
   1400185eb:	cmp    eax,0x2029
   1400185f0:	jle    0x14001860b
   1400185f2:	mov    r9d,r8d
   1400185f5:	jmp    0x140018611
   1400185f7:	mov    rax,QWORD PTR [rcx+0x30]
   1400185fb:	mov    r9d,r8d
   1400185fe:	cmp    WORD PTR [rax],0xa
   140018602:	sete   r9b
   140018606:	inc    r9d
   140018609:	jmp    0x140018611
   14001860b:	mov    r9d,0x1
   140018611:	mov    rcx,QWORD PTR [rcx+0x30]
   140018615:	add    rcx,0x2
   140018619:	movzx  eax,WORD PTR [rcx-0x2]
   14001861d:	mov    QWORD PTR [rdx+0x30],rcx
   140018621:	mov    WORD PTR [rdx+0x58],ax
   140018625:	cmp    r9d,0x2
   140018629:	jne    0x14001863a
   14001862b:	movzx  eax,WORD PTR [rcx]
   14001862e:	mov    WORD PTR [rdx+0x58],ax
   140018632:	lea    rax,[rcx+0x2]
   140018636:	mov    QWORD PTR [rdx+0x30],rax
   14001863a:	movzx  eax,WORD PTR [rdx+0x58]
   14001863e:	cmp    eax,0xa
   140018641:	je     0x140018656
   140018643:	cmp    eax,0xd
   140018646:	je     0x140018671
   140018648:	cmp    eax,0x2027
   14001864d:	jle    0x14001866f
   14001864f:	cmp    eax,0x2029
   140018654:	jg     0x14001866f
   140018656:	mov    rax,QWORD PTR [rdx+0x30]
   14001865a:	inc    DWORD PTR [rdx+0x60]
   14001865d:	mov    r8d,0x1
   140018663:	mov    ecx,r8d
   140018666:	lea    rcx,[rax+rcx*2-0x2]
   14001866b:	mov    QWORD PTR [rdx+0x40],rcx
   14001866f:	repz ret 
   140018671:	mov    rax,QWORD PTR [rdx+0x30]
   140018675:	cmp    WORD PTR [rax],0xa
   140018679:	sete   r8b
   14001867d:	inc    DWORD PTR [rdx+0x60]
   140018680:	inc    r8d
   140018683:	mov    ecx,r8d
   140018686:	lea    rcx,[rax+rcx*2-0x2]
   14001868b:	mov    QWORD PTR [rdx+0x40],rcx
   14001868f:	ret    
   140018690:	rex push rbx
   140018692:	push   r12
   140018694:	push   r13
   140018696:	push   r14
   140018698:	sub    rsp,0x38
   14001869c:	mov    r14,rcx
   14001869f:	mov    r12,rdx
   1400186a2:	lea    rcx,[rsp+0x60]
   1400186a7:	mov    dl,0x75
   1400186a9:	mov    r13,r8
   1400186ac:	call   QWORD PTR [rip+0x80de]        # 0x140020790
   1400186b2:	movzx  eax,WORD PTR [rax]
   1400186b5:	cmp    WORD PTR [r14+0x58],ax
   1400186ba:	jne    0x140018792
   1400186c0:	mov    rbx,QWORD PTR [r14+0x30]
   1400186c4:	movzx  ecx,WORD PTR [rbx]
   1400186c7:	call   0x140018370
   1400186cc:	test   al,al
   1400186ce:	je     0x140018792
   1400186d4:	movzx  ecx,WORD PTR [rbx+0x2]
   1400186d8:	call   0x140018370
   1400186dd:	test   al,al
   1400186df:	je     0x140018792
   1400186e5:	movzx  ecx,WORD PTR [rbx+0x4]
   1400186e9:	call   0x140018370
   1400186ee:	test   al,al
   1400186f0:	je     0x140018792
   1400186f6:	movzx  ecx,WORD PTR [rbx+0x6]
   1400186fa:	call   0x140018370
   1400186ff:	test   al,al
   140018701:	je     0x140018792
   140018707:	mov    QWORD PTR [rsp+0x68],rbp
   14001870c:	mov    rcx,r14
   14001870f:	mov    QWORD PTR [rsp+0x70],rsi
   140018714:	mov    QWORD PTR [rsp+0x30],rdi
   140018719:	call   0x1400185d0
   14001871e:	movzx  ebx,WORD PTR [r14+0x58]
   140018723:	mov    rcx,r14
   140018726:	call   0x1400185d0
   14001872b:	movzx  edi,WORD PTR [r14+0x58]
   140018730:	mov    rcx,r14
   140018733:	call   0x1400185d0
   140018738:	movzx  esi,WORD PTR [r14+0x58]
   14001873d:	mov    rcx,r14
   140018740:	call   0x1400185d0
   140018745:	movzx  ebp,WORD PTR [r14+0x58]
   14001874a:	mov    rcx,r14
   14001874d:	call   0x1400185d0
   140018752:	test   r13,r13
   140018755:	je     0x14001875c
   140018757:	mov    BYTE PTR [r13+0x0],0x1
   14001875c:	movzx  r9d,si
   140018760:	movzx  r8d,di
   140018764:	movzx  edx,bx
   140018767:	mov    rcx,r12
   14001876a:	mov    WORD PTR [rsp+0x20],bp
   14001876f:	call   0x140017e60
   140018774:	mov    rdi,QWORD PTR [rsp+0x30]
   140018779:	mov    rsi,QWORD PTR [rsp+0x70]
   14001877e:	mov    rbp,QWORD PTR [rsp+0x68]
   140018783:	mov    rax,r12
   140018786:	add    rsp,0x38
   14001878a:	pop    r14
   14001878c:	pop    r13
   14001878e:	pop    r12
   140018790:	pop    rbx
   140018791:	ret    
   140018792:	xor    eax,eax
   140018794:	mov    BYTE PTR [r13+0x0],0x0
   140018799:	mov    WORD PTR [r12],ax
   14001879e:	mov    rax,r12
   1400187a1:	add    rsp,0x38
   1400187a5:	pop    r14
   1400187a7:	pop    r13
   1400187a9:	pop    r12
   1400187ab:	pop    rbx
   1400187ac:	ret    
   1400187ad:	int3   
   1400187ae:	int3   
   1400187af:	int3   
   1400187b0:	mov    QWORD PTR [rsp+0x18],rbp
   1400187b5:	mov    QWORD PTR [rsp+0x20],rsi
   1400187ba:	push   r12
   1400187bc:	sub    rsp,0x20
   1400187c0:	mov    rax,QWORD PTR [rcx+0x30]
   1400187c4:	mov    rbp,rcx
   1400187c7:	mov    r12,r8
   1400187ca:	movzx  ecx,WORD PTR [rax]
   1400187cd:	mov    rsi,rdx
   1400187d0:	call   0x140018370
   1400187d5:	test   al,al
   1400187d7:	je     0x1400188a2
   1400187dd:	mov    rax,QWORD PTR [rbp+0x30]
   1400187e1:	movzx  ecx,WORD PTR [rax+0x2]
   1400187e5:	call   0x140018370
   1400187ea:	test   al,al
   1400187ec:	je     0x1400188a2
   1400187f2:	mov    rcx,rbp
   1400187f5:	mov    QWORD PTR [rsp+0x30],rbx
   1400187fa:	mov    QWORD PTR [rsp+0x38],rdi
   1400187ff:	call   0x1400185d0
   140018804:	movzx  ebx,WORD PTR [rbp+0x58]
   140018808:	mov    rcx,rbp
   14001880b:	call   0x1400185d0
   140018810:	movzx  edi,WORD PTR [rbp+0x58]
   140018814:	mov    rcx,rbp
   140018817:	call   0x1400185d0
   14001881c:	test   r12,r12
   14001881f:	je     0x140018826
   140018821:	mov    BYTE PTR [r12],0x1
   140018826:	cmp    bx,0x30
   14001882a:	jb     0x140018837
   14001882c:	cmp    bx,0x39
   140018830:	ja     0x140018837
   140018832:	sub    bl,0x30
   140018835:	jmp    0x14001884b
   140018837:	cmp    bx,0x61
   14001883b:	jb     0x140018848
   14001883d:	cmp    bx,0x66
   140018841:	ja     0x140018848
   140018843:	sub    bl,0x57
   140018846:	jmp    0x14001884b
   140018848:	sub    bl,0x37
   14001884b:	cmp    di,0x30
   14001884f:	jb     0x14001885d
   140018851:	cmp    di,0x39
   140018855:	ja     0x14001885d
   140018857:	sub    dil,0x30
   14001885b:	jmp    0x140018873
   14001885d:	cmp    di,0x61
   140018861:	jb     0x14001886f
   140018863:	cmp    di,0x66
   140018867:	ja     0x14001886f
   140018869:	sub    dil,0x57
   14001886d:	jmp    0x140018873
   14001886f:	sub    dil,0x37
   140018873:	movzx  eax,dil
   140018877:	mov    rdi,QWORD PTR [rsp+0x38]
   14001887c:	movzx  ecx,bl
   14001887f:	mov    rbx,QWORD PTR [rsp+0x30]
   140018884:	shl    cx,0x4
   140018888:	add    cx,ax
   14001888b:	mov    rax,rsi
   14001888e:	mov    WORD PTR [rsi],cx
   140018891:	mov    rbp,QWORD PTR [rsp+0x40]
   140018896:	mov    rsi,QWORD PTR [rsp+0x48]
   14001889b:	add    rsp,0x20
   14001889f:	pop    r12
   1400188a1:	ret    
   1400188a2:	mov    rbp,QWORD PTR [rsp+0x40]
   1400188a7:	xor    eax,eax
   1400188a9:	mov    BYTE PTR [r12],0x0
   1400188ae:	mov    WORD PTR [rsi],ax
   1400188b1:	mov    rax,rsi
   1400188b4:	mov    rsi,QWORD PTR [rsp+0x48]
   1400188b9:	add    rsp,0x20
   1400188bd:	pop    r12
   1400188bf:	ret    
   1400188c0:	rex push rbx
   1400188c2:	push   rsi
   1400188c3:	push   rdi
   1400188c4:	sub    rsp,0x60
   1400188c8:	mov    ebx,edx
   1400188ca:	mov    rsi,rcx
   1400188cd:	xor    edx,edx
   1400188cf:	add    rcx,0x10
   1400188d3:	call   QWORD PTR [rip+0x7be7]        # 0x1400204c0
   1400188d9:	mov    BYTE PTR [rsi+0x8c],0x1
   1400188e0:	mov    DWORD PTR [rsi+0x7c],0x0
   1400188e7:	cmp    ebx,0x1
   1400188ea:	jne    0x140018910
   1400188ec:	lea    rcx,[rsp+0x88]
   1400188f4:	mov    dl,0x3d
   1400188f6:	call   QWORD PTR [rip+0x7e94]        # 0x140020790
   1400188fc:	lea    rcx,[rsi+0x10]
   140018900:	movzx  edx,WORD PTR [rax]
   140018903:	call   QWORD PTR [rip+0x7c0f]        # 0x140020518
   140018909:	nop    DWORD PTR [rax+0x0]
   140018910:	movzx  ecx,WORD PTR [rsi+0x58]
   140018914:	sub    ecx,0x2f
   140018917:	je     0x140018b76
   14001891d:	sub    ecx,0x2c
   140018920:	je     0x140018a01
   140018926:	cmp    ecx,0x1
   140018929:	je     0x14001898b
   14001892b:	mov    rax,QWORD PTR [rsi+0x38]
   14001892f:	cmp    QWORD PTR [rsi+0x30],rax
   140018933:	ja     0x140018945
   140018935:	mov    rcx,rsi
   140018938:	call   0x140018240
   14001893d:	test   al,al
   14001893f:	je     0x140018acf
   140018945:	lea    r8,[rip+0xa254]        # 0x140022ba0
   14001894c:	lea    rdx,[rip+0xa0c5]        # 0x140022a18
   140018953:	lea    rcx,[rsp+0x30]
   140018958:	xor    r9d,r9d
   14001895b:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140018963:	call   QWORD PTR [rip+0x7adf]        # 0x140020448
   140018969:	lea    rcx,[rsi+0x18]
   14001896d:	mov    rdx,rax
   140018970:	call   QWORD PTR [rip+0x7bf2]        # 0x140020568
   140018976:	lea    rcx,[rsp+0x30]
   14001897b:	call   QWORD PTR [rip+0x7dff]        # 0x140020780
   140018981:	xor    al,al
   140018983:	add    rsp,0x60
   140018987:	pop    rdi
   140018988:	pop    rsi
   140018989:	pop    rbx
   14001898a:	ret    
   14001898b:	movzx  edx,WORD PTR [rsi+0x58]
   14001898f:	lea    rcx,[rsi+0x10]
   140018993:	call   QWORD PTR [rip+0x7b7f]        # 0x140020518
   140018999:	mov    rcx,rsi
   14001899c:	call   0x1400185d0
   1400189a1:	mov    r11,QWORD PTR [rsi+0x38]
   1400189a5:	cmp    QWORD PTR [rsi+0x30],r11
   1400189a9:	ja     0x1400189bb
   1400189ab:	mov    rcx,rsi
   1400189ae:	call   0x140018240
   1400189b3:	test   al,al
   1400189b5:	je     0x140018acf
   1400189bb:	lea    r8,[rip+0xa1a6]        # 0x140022b68
   1400189c2:	lea    rdx,[rip+0xa04f]        # 0x140022a18
   1400189c9:	lea    rcx,[rsp+0x38]
   1400189ce:	xor    r9d,r9d
   1400189d1:	mov    DWORD PTR [rsp+0x20],0xffffffff
   1400189d9:	call   QWORD PTR [rip+0x7a69]        # 0x140020448
   1400189df:	lea    rcx,[rsi+0x18]
   1400189e3:	mov    rdx,rax
   1400189e6:	call   QWORD PTR [rip+0x7b7c]        # 0x140020568
   1400189ec:	lea    rcx,[rsp+0x38]
   1400189f1:	call   QWORD PTR [rip+0x7d89]        # 0x140020780
   1400189f7:	xor    al,al
   1400189f9:	add    rsp,0x60
   1400189fd:	pop    rdi
   1400189fe:	pop    rsi
   1400189ff:	pop    rbx
   140018a00:	ret    
   140018a01:	movzx  edx,WORD PTR [rsi+0x58]
   140018a05:	lea    rcx,[rsi+0x10]
   140018a09:	call   QWORD PTR [rip+0x7b09]        # 0x140020518
   140018a0f:	mov    rcx,rsi
   140018a12:	call   0x1400185d0
   140018a17:	mov    rax,QWORD PTR [rsi+0x38]
   140018a1b:	cmp    QWORD PTR [rsi+0x30],rax
   140018a1f:	ja     0x140018ab6
   140018a25:	mov    rcx,rsi
   140018a28:	call   0x140018240
   140018a2d:	test   al,al
   140018a2f:	jne    0x140018ab6
   140018a35:	lea    rcx,[rsp+0x88]
   140018a3d:	mov    dl,0x5d
   140018a3f:	call   QWORD PTR [rip+0x7d4b]        # 0x140020790
   140018a45:	movzx  eax,WORD PTR [rax]
   140018a48:	cmp    WORD PTR [rsi+0x58],ax
   140018a4c:	je     0x140018ab6
   140018a4e:	lea    rcx,[rsp+0x80]
   140018a56:	mov    dl,0x5c
   140018a58:	call   QWORD PTR [rip+0x7d32]        # 0x140020790
   140018a5e:	movzx  edx,WORD PTR [rsi+0x58]
   140018a62:	lea    rcx,[rsi+0x10]
   140018a66:	movzx  eax,WORD PTR [rax]
   140018a69:	cmp    dx,ax
   140018a6c:	jne    0x140018a9a
   140018a6e:	call   QWORD PTR [rip+0x7aa4]        # 0x140020518
   140018a74:	mov    rcx,rsi
   140018a77:	call   0x1400185d0
   140018a7c:	mov    r11,QWORD PTR [rsi+0x38]
   140018a80:	cmp    QWORD PTR [rsi+0x30],r11
   140018a84:	ja     0x140018aea
   140018a86:	mov    rcx,rsi
   140018a89:	call   0x140018240
   140018a8e:	test   al,al
   140018a90:	jne    0x140018aea
   140018a92:	movzx  edx,WORD PTR [rsi+0x58]
   140018a96:	lea    rcx,[rsi+0x10]
   140018a9a:	call   QWORD PTR [rip+0x7a78]        # 0x140020518
   140018aa0:	mov    rcx,rsi
   140018aa3:	call   0x1400185d0
   140018aa8:	mov    rax,QWORD PTR [rsi+0x38]
   140018aac:	cmp    QWORD PTR [rsi+0x30],rax
   140018ab0:	jbe    0x140018a25
   140018ab6:	lea    rcx,[rsp+0x90]
   140018abe:	mov    dl,0x5d
   140018ac0:	call   QWORD PTR [rip+0x7cca]        # 0x140020790
   140018ac6:	movzx  eax,WORD PTR [rax]
   140018ac9:	cmp    WORD PTR [rsi+0x58],ax
   140018acd:	jne    0x140018b30
   140018acf:	movzx  edx,WORD PTR [rsi+0x58]
   140018ad3:	lea    rcx,[rsi+0x10]
   140018ad7:	call   QWORD PTR [rip+0x7a3b]        # 0x140020518
   140018add:	mov    rcx,rsi
   140018ae0:	call   0x1400185d0
   140018ae5:	jmp    0x140018910
   140018aea:	lea    r8,[rip+0xa077]        # 0x140022b68
   140018af1:	lea    rdx,[rip+0x9f20]        # 0x140022a18
   140018af8:	lea    rcx,[rsp+0x40]
   140018afd:	xor    r9d,r9d
   140018b00:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140018b08:	call   QWORD PTR [rip+0x793a]        # 0x140020448
   140018b0e:	lea    rcx,[rsi+0x18]
   140018b12:	mov    rdx,rax
   140018b15:	call   QWORD PTR [rip+0x7a4d]        # 0x140020568
   140018b1b:	lea    rcx,[rsp+0x40]
   140018b20:	call   QWORD PTR [rip+0x7c5a]        # 0x140020780
   140018b26:	xor    al,al
   140018b28:	add    rsp,0x60
   140018b2c:	pop    rdi
   140018b2d:	pop    rsi
   140018b2e:	pop    rbx
   140018b2f:	ret    
   140018b30:	lea    r8,[rip+0xa009]        # 0x140022b40
   140018b37:	lea    rdx,[rip+0x9eda]        # 0x140022a18
   140018b3e:	lea    rcx,[rsp+0x48]
   140018b43:	xor    r9d,r9d
   140018b46:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140018b4e:	call   QWORD PTR [rip+0x78f4]        # 0x140020448
   140018b54:	lea    rcx,[rsi+0x18]
   140018b58:	mov    rdx,rax
   140018b5b:	call   QWORD PTR [rip+0x7a07]        # 0x140020568
   140018b61:	lea    rcx,[rsp+0x48]
   140018b66:	call   QWORD PTR [rip+0x7c14]        # 0x140020780
   140018b6c:	xor    al,al
   140018b6e:	add    rsp,0x60
   140018b72:	pop    rdi
   140018b73:	pop    rsi
   140018b74:	pop    rbx
   140018b75:	ret    
   140018b76:	mov    rcx,rsi
   140018b79:	call   0x1400185d0
   140018b7e:	movzx  ecx,WORD PTR [rsi+0x58]
   140018b82:	mov    DWORD PTR [rsi+0x7c],0x0
   140018b89:	call   0x1400182b0
   140018b8e:	test   al,al
   140018b90:	je     0x140018bd9
   140018b92:	movzx  eax,WORD PTR [rsi+0x58]
   140018b96:	cmp    eax,0x67
   140018b99:	je     0x140018bb3
   140018b9b:	cmp    eax,0x69
   140018b9e:	je     0x140018bac
   140018ba0:	cmp    eax,0x6d
   140018ba3:	jne    0x140018bf6
   140018ba5:	mov    eax,0x4
   140018baa:	jmp    0x140018bb8
   140018bac:	mov    eax,0x2
   140018bb1:	jmp    0x140018bb8
   140018bb3:	mov    eax,0x1
   140018bb8:	mov    ecx,DWORD PTR [rsi+0x7c]
   140018bbb:	test   eax,ecx
   140018bbd:	jne    0x140018bf6
   140018bbf:	or     ecx,eax
   140018bc1:	mov    DWORD PTR [rsi+0x7c],ecx
   140018bc4:	mov    rcx,rsi
   140018bc7:	call   0x1400185d0
   140018bcc:	movzx  ecx,WORD PTR [rsi+0x58]
   140018bd0:	call   0x1400182b0
   140018bd5:	test   al,al
   140018bd7:	jne    0x140018b92
   140018bd9:	mov    rax,QWORD PTR [rsi+0x30]
   140018bdd:	sub    rax,QWORD PTR [rsi+0x50]
   140018be1:	sar    rax,1
   140018be4:	dec    eax
   140018be6:	mov    DWORD PTR [rsi+0x84],eax
   140018bec:	mov    al,0x1
   140018bee:	add    rsp,0x60
   140018bf2:	pop    rdi
   140018bf3:	pop    rsi
   140018bf4:	pop    rbx
   140018bf5:	ret    
   140018bf6:	movzx  ebx,WORD PTR [rsi+0x58]
   140018bfa:	lea    rcx,[rsp+0x98]
   140018c02:	mov    dl,0x20
   140018c04:	call   QWORD PTR [rip+0x7b86]        # 0x140020790
   140018c0a:	lea    r8,[rip+0x9f07]        # 0x140022b18
   140018c11:	lea    rdx,[rip+0x9e00]        # 0x140022a18
   140018c18:	lea    rcx,[rsp+0x58]
   140018c1d:	xor    r9d,r9d
   140018c20:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140018c28:	mov    rdi,rax
   140018c2b:	call   QWORD PTR [rip+0x7817]        # 0x140020448
   140018c31:	lea    rdx,[rsp+0x50]
   140018c36:	mov    rcx,rax
   140018c39:	movzx  eax,WORD PTR [rdi]
   140018c3c:	xor    r9d,r9d
   140018c3f:	movzx  r8d,bx
   140018c43:	mov    WORD PTR [rsp+0x20],ax
   140018c48:	call   QWORD PTR [rip+0x786a]        # 0x1400204b8
   140018c4e:	lea    rcx,[rsi+0x18]
   140018c52:	mov    rdx,rax
   140018c55:	call   QWORD PTR [rip+0x790d]        # 0x140020568
   140018c5b:	lea    rcx,[rsp+0x50]
   140018c60:	call   QWORD PTR [rip+0x7b1a]        # 0x140020780
   140018c66:	lea    rcx,[rsp+0x58]
   140018c6b:	call   QWORD PTR [rip+0x7b0f]        # 0x140020780
   140018c71:	xor    al,al
   140018c73:	add    rsp,0x60
   140018c77:	pop    rdi
   140018c78:	pop    rsi
   140018c79:	pop    rbx
   140018c7a:	ret    
   140018c7b:	int3   
   140018c7c:	int3   
   140018c7d:	int3   
   140018c7e:	int3   
   140018c7f:	int3   
   140018c80:	mov    WORD PTR [rsp+0x10],dx
   140018c85:	push   rbx
   140018c86:	push   rbp
   140018c87:	push   rsi
   140018c88:	push   rdi
   140018c89:	push   r12
   140018c8b:	push   r13
   140018c8d:	push   r15
   140018c8f:	sub    rsp,0xd0
   140018c96:	mov    rdi,rcx
   140018c99:	lea    rcx,[rsp+0x128]
   140018ca1:	mov    dl,0x30
   140018ca3:	call   QWORD PTR [rip+0x7ae7]        # 0x140020790
   140018ca9:	xor    r15d,r15d
   140018cac:	mov    r11,rax
   140018caf:	movzx  eax,WORD PTR [rsp+0x118]
   140018cb7:	cmp    ax,WORD PTR [r11]
   140018cbb:	je     0x140018eb1
   140018cc1:	movzx  ebx,WORD PTR [rdi+0x58]
   140018cc5:	mov    r13,QWORD PTR [rdi+0x30]
   140018cc9:	lea    rcx,[rsp+0x70]
   140018cce:	mov    QWORD PTR [rsp+0x68],rcx
   140018cd3:	mov    QWORD PTR [rsp+0x110],r14
   140018cdb:	mov    r14d,0xff
   140018ce1:	movzx  ecx,al
   140018ce4:	cmp    ax,r14w
   140018ce8:	mov    edx,0x40
   140018ced:	cmova  ecx,r15d
   140018cf1:	mov    esi,0x1
   140018cf6:	mov    DWORD PTR [rsp+0x60],edx
   140018cfa:	mov    BYTE PTR [rsp+0x70],cl
   140018cfe:	mov    DWORD PTR [rsp+0x64],esi
   140018d02:	movzx  ecx,bx
   140018d05:	cmp    ecx,0x39
   140018d08:	ja     0x140018d0f
   140018d0a:	cmp    ecx,0x30
   140018d0d:	jae    0x140018d2f
   140018d0f:	cmp    ecx,0x7f
   140018d12:	jbe    0x140018dcf
   140018d18:	call   QWORD PTR [rip+0x778a]        # 0x1400204a8
   140018d1e:	cmp    eax,0x3
   140018d21:	jne    0x140018dcf
   140018d27:	mov    esi,DWORD PTR [rsp+0x64]
   140018d2b:	mov    edx,DWORD PTR [rsp+0x60]
   140018d2f:	cmp    bx,r14w
   140018d33:	movzx  r12d,bl
   140018d37:	cmova  r12d,r15d
   140018d3b:	cmp    esi,edx
   140018d3d:	jne    0x140018da7
   140018d3f:	mov    rbx,QWORD PTR [rsp+0x68]
   140018d44:	lea    ebp,[rsi+rsi*1]
   140018d47:	cmp    ebp,edx
   140018d49:	je     0x140018d89
   140018d4b:	cmp    ebp,0x40
   140018d4e:	jle    0x140018d64
   140018d50:	movsxd rcx,ebp
   140018d53:	call   QWORD PTR [rip+0x7477]        # 0x1400201d0
   140018d59:	mov    DWORD PTR [rsp+0x60],ebp
   140018d5d:	mov    QWORD PTR [rsp+0x68],rax
   140018d62:	jmp    0x140018d76
   140018d64:	lea    rax,[rsp+0x70]
   140018d69:	mov    DWORD PTR [rsp+0x60],0x40
   140018d71:	mov    QWORD PTR [rsp+0x68],rax
   140018d76:	movsxd r8,esi
   140018d79:	mov    rdx,rbx
   140018d7c:	mov    rcx,rax
   140018d7f:	mov    DWORD PTR [rsp+0x64],r15d
   140018d84:	call   0x14001edd4
   140018d89:	lea    rax,[rsp+0x70]
   140018d8e:	mov    DWORD PTR [rsp+0x64],esi
   140018d92:	cmp    rbx,rax
   140018d95:	je     0x140018da7
   140018d97:	cmp    rbx,QWORD PTR [rsp+0x68]
   140018d9c:	je     0x140018da7
   140018d9e:	mov    rcx,rbx
   140018da1:	call   QWORD PTR [rip+0x7441]        # 0x1400201e8
   140018da7:	mov    rax,QWORD PTR [rsp+0x68]
   140018dac:	movsxd rcx,esi
   140018daf:	inc    esi
   140018db1:	mov    DWORD PTR [rsp+0x64],esi
   140018db5:	mov    BYTE PTR [rcx+rax*1],r12b
   140018db9:	mov    bx,WORD PTR [r13+0x0]
   140018dbe:	mov    esi,DWORD PTR [rsp+0x64]
   140018dc2:	mov    edx,DWORD PTR [rsp+0x60]
   140018dc6:	add    r13,0x2
   140018dca:	jmp    0x140018d02
   140018dcf:	lea    rcx,[rsp+0x128]
   140018dd7:	mov    dl,0x2e
   140018dd9:	call   QWORD PTR [rip+0x79b1]        # 0x140020790
   140018ddf:	mov    r14,QWORD PTR [rsp+0x110]
   140018de7:	cmp    bx,WORD PTR [rax]
   140018dea:	je     0x140018e8b
   140018df0:	lea    rcx,[rsp+0x128]
   140018df8:	mov    dl,0x65
   140018dfa:	call   QWORD PTR [rip+0x7990]        # 0x140020790
   140018e00:	cmp    bx,WORD PTR [rax]
   140018e03:	je     0x140018e8b
   140018e09:	lea    rcx,[rsp+0x128]
   140018e11:	mov    dl,0x45
   140018e13:	call   QWORD PTR [rip+0x7977]        # 0x140020790
   140018e19:	cmp    bx,WORD PTR [rax]
   140018e1c:	je     0x140018e8b
   140018e1e:	cmp    r13,QWORD PTR [rdi+0x30]
   140018e22:	je     0x140018e34
   140018e24:	lea    rax,[r13-0x2]
   140018e28:	mov    rcx,rdi
   140018e2b:	mov    QWORD PTR [rdi+0x30],rax
   140018e2f:	call   0x1400185d0
   140018e34:	mov    ecx,DWORD PTR [rsp+0x64]
   140018e38:	cmp    ecx,DWORD PTR [rsp+0x60]
   140018e3c:	jne    0x140018e52
   140018e3e:	lea    r8d,[rcx+rcx*1]
   140018e42:	mov    edx,ecx
   140018e44:	lea    rcx,[rsp+0x60]
   140018e49:	call   0x140018520
   140018e4e:	mov    ecx,DWORD PTR [rsp+0x64]
   140018e52:	movsxd rax,ecx
   140018e55:	inc    ecx
   140018e57:	xor    edx,edx
   140018e59:	mov    DWORD PTR [rsp+0x64],ecx
   140018e5d:	mov    rcx,rax
   140018e60:	mov    rax,QWORD PTR [rsp+0x68]
   140018e65:	mov    BYTE PTR [rcx+rax*1],r15b
   140018e69:	mov    rcx,QWORD PTR [rsp+0x68]
   140018e6e:	call   QWORD PTR [rip+0x737c]        # 0x1400201f0
   140018e74:	mov    rcx,QWORD PTR [rsp+0x68]
   140018e79:	lea    rax,[rsp+0x70]
   140018e7e:	cmp    rcx,rax
   140018e81:	movsd  QWORD PTR [rdi+0x68],xmm0
   140018e86:	jmp    0x1400197f1
   140018e8b:	mov    rcx,QWORD PTR [rsp+0x68]
   140018e90:	lea    rax,[rsp+0x70]
   140018e95:	cmp    rcx,rax
   140018e98:	je     0x140018f33
   140018e9e:	call   QWORD PTR [rip+0x7344]        # 0x1400201e8
   140018ea4:	mov    ax,WORD PTR [rsp+0x118]
   140018eac:	jmp    0x140018f3b
   140018eb1:	movzx  ecx,WORD PTR [rdi+0x58]
   140018eb5:	cmp    ecx,0x39
   140018eb8:	ja     0x140018ebf
   140018eba:	cmp    ecx,0x30
   140018ebd:	jae    0x140018ed7
   140018ebf:	cmp    ecx,0x7f
   140018ec2:	jbe    0x140018f3b
   140018ec4:	call   QWORD PTR [rip+0x75de]        # 0x1400204a8
   140018eca:	cmp    eax,0x3
   140018ecd:	jne    0x140018f33
   140018ecf:	mov    ax,WORD PTR [rsp+0x118]
   140018ed7:	cmp    BYTE PTR [rdi+0x92],r15b
   140018ede:	jne    0x140018f3b
   140018ee0:	lea    r8,[rip+0x9d41]        # 0x140022c28
   140018ee7:	lea    rdx,[rip+0x9b2a]        # 0x140022a18
   140018eee:	lea    rcx,[rsp+0x128]
   140018ef6:	xor    r9d,r9d
   140018ef9:	mov    DWORD PTR [rdi+0x5c],0x1
   140018f00:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140018f08:	call   QWORD PTR [rip+0x753a]        # 0x140020448
   140018f0e:	lea    rcx,[rdi+0x18]
   140018f12:	mov    rdx,rax
   140018f15:	call   QWORD PTR [rip+0x764d]        # 0x140020568
   140018f1b:	lea    rcx,[rsp+0x128]
   140018f23:	call   QWORD PTR [rip+0x7857]        # 0x140020780
   140018f29:	mov    eax,0x61
   140018f2e:	jmp    0x1400197fe
   140018f33:	mov    ax,WORD PTR [rsp+0x118]
   140018f3b:	lea    rcx,[rsp+0x40]
   140018f40:	mov    dl,0x30
   140018f42:	mov    DWORD PTR [rsp+0x30],0x20
   140018f4a:	mov    QWORD PTR [rsp+0x38],rcx
   140018f4f:	lea    rcx,[rsp+0x128]
   140018f57:	mov    DWORD PTR [rsp+0x34],0x1
   140018f5f:	mov    BYTE PTR [rsp+0x40],al
   140018f63:	call   QWORD PTR [rip+0x7827]        # 0x140020790
   140018f69:	movzx  eax,WORD PTR [rax]
   140018f6c:	cmp    WORD PTR [rsp+0x118],ax
   140018f74:	jne    0x140019197
   140018f7a:	lea    rcx,[rsp+0x128]
   140018f82:	mov    dl,0x78
   140018f84:	call   QWORD PTR [rip+0x7806]        # 0x140020790
   140018f8a:	movzx  ecx,WORD PTR [rdi+0x58]
   140018f8e:	cmp    cx,WORD PTR [rax]
   140018f91:	je     0x140018fb0
   140018f93:	lea    rcx,[rsp+0x128]
   140018f9b:	mov    dl,0x58
   140018f9d:	call   QWORD PTR [rip+0x77ed]        # 0x140020790
   140018fa3:	mov    cx,WORD PTR [rdi+0x58]
   140018fa7:	cmp    cx,WORD PTR [rax]
   140018faa:	jne    0x140019197
   140018fb0:	movzx  ebx,BYTE PTR [rdi+0x58]
   140018fb4:	mov    WORD PTR [rsp+0x118],cx
   140018fbc:	mov    ecx,DWORD PTR [rsp+0x34]
   140018fc0:	cmp    ecx,DWORD PTR [rsp+0x30]
   140018fc4:	jne    0x140018fda
   140018fc6:	lea    r8d,[rcx+rcx*1]
   140018fca:	mov    edx,ecx
   140018fcc:	lea    rcx,[rsp+0x30]
   140018fd1:	call   0x140018470
   140018fd6:	mov    ecx,DWORD PTR [rsp+0x34]
   140018fda:	movsxd rax,ecx
   140018fdd:	inc    ecx
   140018fdf:	mov    DWORD PTR [rsp+0x34],ecx
   140018fe3:	mov    rcx,rax
   140018fe6:	mov    rax,QWORD PTR [rsp+0x38]
   140018feb:	mov    BYTE PTR [rcx+rax*1],bl
   140018fee:	mov    rcx,rdi
   140018ff1:	call   0x1400185d0
   140018ff6:	movzx  ecx,WORD PTR [rdi+0x58]
   140018ffa:	call   0x140018370
   140018fff:	test   al,al
   140019001:	je     0x1400190b5
   140019007:	nop    WORD PTR [rax+rax*1+0x0]
   140019010:	movsxd rbx,DWORD PTR [rsp+0x34]
   140019015:	mov    eax,DWORD PTR [rsp+0x30]
   140019019:	movzx  r12d,BYTE PTR [rdi+0x58]
   14001901e:	cmp    ebx,eax
   140019020:	jne    0x14001908a
   140019022:	mov    rsi,QWORD PTR [rsp+0x38]
   140019027:	lea    ebp,[rbx+rbx*1]
   14001902a:	cmp    ebp,eax
   14001902c:	je     0x14001906c
   14001902e:	cmp    ebp,0x20
   140019031:	jle    0x140019047
   140019033:	movsxd rcx,ebp
   140019036:	call   QWORD PTR [rip+0x7194]        # 0x1400201d0
   14001903c:	mov    DWORD PTR [rsp+0x30],ebp
   140019040:	mov    QWORD PTR [rsp+0x38],rax
   140019045:	jmp    0x140019059
   140019047:	lea    rax,[rsp+0x40]
   14001904c:	mov    DWORD PTR [rsp+0x30],0x20
   140019054:	mov    QWORD PTR [rsp+0x38],rax
   140019059:	mov    r8,rbx
   14001905c:	mov    rdx,rsi
   14001905f:	mov    rcx,rax
   140019062:	mov    DWORD PTR [rsp+0x34],r15d
   140019067:	call   0x14001edd4
   14001906c:	lea    rax,[rsp+0x40]
   140019071:	mov    DWORD PTR [rsp+0x34],ebx
   140019075:	cmp    rsi,rax
   140019078:	je     0x14001908a
   14001907a:	cmp    rsi,QWORD PTR [rsp+0x38]
   14001907f:	je     0x14001908a
   140019081:	mov    rcx,rsi
   140019084:	call   QWORD PTR [rip+0x715e]        # 0x1400201e8
   14001908a:	mov    rax,QWORD PTR [rsp+0x38]
   14001908f:	mov    rcx,rbx
   140019092:	inc    ebx
   140019094:	mov    DWORD PTR [rsp+0x34],ebx
   140019098:	mov    BYTE PTR [rcx+rax*1],r12b
   14001909c:	mov    rcx,rdi
   14001909f:	call   0x1400185d0
   1400190a4:	movzx  ecx,WORD PTR [rdi+0x58]
   1400190a8:	call   0x140018370
   1400190ad:	test   al,al
   1400190af:	jne    0x140019010
   1400190b5:	mov    edx,DWORD PTR [rsp+0x34]
   1400190b9:	cmp    edx,0x3
   1400190bc:	jge    0x140019170
   1400190c2:	lea    rcx,[rsp+0x128]
   1400190ca:	mov    dl,0x20
   1400190cc:	mov    DWORD PTR [rdi+0x5c],0x2
   1400190d3:	call   QWORD PTR [rip+0x76b7]        # 0x140020790
   1400190d9:	lea    r8,[rip+0x9b10]        # 0x140022bf0
   1400190e0:	lea    rdx,[rip+0x9931]        # 0x140022a18
   1400190e7:	lea    rcx,[rsp+0xb8]
   1400190ef:	xor    r9d,r9d
   1400190f2:	mov    DWORD PTR [rsp+0x20],0xffffffff
   1400190fa:	mov    rbx,rax
   1400190fd:	call   QWORD PTR [rip+0x7345]        # 0x140020448
   140019103:	movzx  r8d,WORD PTR [rsp+0x118]
   14001910c:	mov    rcx,rax
   14001910f:	movzx  eax,WORD PTR [rbx]
   140019112:	lea    rdx,[rsp+0xc0]
   14001911a:	xor    r9d,r9d
   14001911d:	mov    WORD PTR [rsp+0x20],ax
   140019122:	call   QWORD PTR [rip+0x7390]        # 0x1400204b8
   140019128:	lea    rcx,[rdi+0x18]
   14001912c:	mov    rdx,rax
   14001912f:	call   QWORD PTR [rip+0x7433]        # 0x140020568
   140019135:	lea    rcx,[rsp+0xc0]
   14001913d:	call   QWORD PTR [rip+0x763d]        # 0x140020780
   140019143:	lea    rcx,[rsp+0xb8]
   14001914b:	call   QWORD PTR [rip+0x762f]        # 0x140020780
   140019151:	mov    rcx,QWORD PTR [rsp+0x38]
   140019156:	lea    r11,[rsp+0x40]
   14001915b:	cmp    rcx,r11
   14001915e:	je     0x140019166
   140019160:	call   QWORD PTR [rip+0x7082]        # 0x1400201e8
   140019166:	mov    eax,0x61
   14001916b:	jmp    0x1400197fe
   140019170:	mov    rcx,QWORD PTR [rsp+0x38]
   140019175:	mov    r8d,0x10
   14001917b:	call   0x1400167b0
   140019180:	mov    rcx,QWORD PTR [rsp+0x38]
   140019185:	lea    rax,[rsp+0x40]
   14001918a:	cmp    rcx,rax
   14001918d:	movsd  QWORD PTR [rdi+0x68],xmm0
   140019192:	jmp    0x1400197f1
   140019197:	movzx  ecx,WORD PTR [rdi+0x58]
   14001919b:	cmp    ecx,0x39
   14001919e:	ja     0x1400191a5
   1400191a0:	cmp    ecx,0x30
   1400191a3:	jae    0x1400191bd
   1400191a5:	cmp    ecx,0x7f
   1400191a8:	jbe    0x140019256
   1400191ae:	call   QWORD PTR [rip+0x72f4]        # 0x1400204a8
   1400191b4:	cmp    eax,0x3
   1400191b7:	jne    0x140019256
   1400191bd:	movsxd rbx,DWORD PTR [rsp+0x34]
   1400191c2:	mov    eax,DWORD PTR [rsp+0x30]
   1400191c6:	movzx  r12d,BYTE PTR [rdi+0x58]
   1400191cb:	cmp    ebx,eax
   1400191cd:	jne    0x140019237
   1400191cf:	mov    rsi,QWORD PTR [rsp+0x38]
   1400191d4:	lea    ebp,[rbx+rbx*1]
   1400191d7:	cmp    ebp,eax
   1400191d9:	je     0x140019219
   1400191db:	cmp    ebp,0x20
   1400191de:	jle    0x1400191f4
   1400191e0:	movsxd rcx,ebp
   1400191e3:	call   QWORD PTR [rip+0x6fe7]        # 0x1400201d0
   1400191e9:	mov    DWORD PTR [rsp+0x30],ebp
   1400191ed:	mov    QWORD PTR [rsp+0x38],rax
   1400191f2:	jmp    0x140019206
   1400191f4:	lea    rax,[rsp+0x40]
   1400191f9:	mov    DWORD PTR [rsp+0x30],0x20
   140019201:	mov    QWORD PTR [rsp+0x38],rax
   140019206:	mov    r8,rbx
   140019209:	mov    rdx,rsi
   14001920c:	mov    rcx,rax
   14001920f:	mov    DWORD PTR [rsp+0x34],r15d
   140019214:	call   0x14001edd4
   140019219:	lea    rax,[rsp+0x40]
   14001921e:	mov    DWORD PTR [rsp+0x34],ebx
   140019222:	cmp    rsi,rax
   140019225:	je     0x140019237
   140019227:	cmp    rsi,QWORD PTR [rsp+0x38]
   14001922c:	je     0x140019237
   14001922e:	mov    rcx,rsi
   140019231:	call   QWORD PTR [rip+0x6fb1]        # 0x1400201e8
   140019237:	mov    rax,QWORD PTR [rsp+0x38]
   14001923c:	mov    rcx,rbx
   14001923f:	inc    ebx
   140019241:	mov    DWORD PTR [rsp+0x34],ebx
   140019245:	mov    BYTE PTR [rcx+rax*1],r12b
   140019249:	mov    rcx,rdi
   14001924c:	call   0x1400185d0
   140019251:	jmp    0x140019197
   140019256:	lea    rcx,[rsp+0x128]
   14001925e:	mov    dl,0x2e
   140019260:	call   QWORD PTR [rip+0x752a]        # 0x140020790
   140019266:	movzx  eax,WORD PTR [rax]
   140019269:	cmp    WORD PTR [rdi+0x58],ax
   14001926d:	jne    0x14001953d
   140019273:	mov    ecx,DWORD PTR [rsp+0x34]
   140019277:	movzx  ebx,BYTE PTR [rdi+0x58]
   14001927b:	cmp    ecx,DWORD PTR [rsp+0x30]
   14001927f:	jne    0x140019295
   140019281:	lea    r8d,[rcx+rcx*1]
   140019285:	mov    edx,ecx
   140019287:	lea    rcx,[rsp+0x30]
   14001928c:	call   0x140018470
   140019291:	mov    ecx,DWORD PTR [rsp+0x34]
   140019295:	movsxd rax,ecx
   140019298:	inc    ecx
   14001929a:	mov    DWORD PTR [rsp+0x34],ecx
   14001929e:	mov    rcx,rax
   1400192a1:	mov    rax,QWORD PTR [rsp+0x38]
   1400192a6:	mov    BYTE PTR [rcx+rax*1],bl
   1400192a9:	mov    rcx,rdi
   1400192ac:	call   0x1400185d0
   1400192b1:	movzx  ecx,WORD PTR [rdi+0x58]
   1400192b5:	cmp    ecx,0x39
   1400192b8:	ja     0x1400192bf
   1400192ba:	cmp    ecx,0x30
   1400192bd:	jae    0x1400192d7
   1400192bf:	cmp    ecx,0x7f
   1400192c2:	jbe    0x140019370
   1400192c8:	call   QWORD PTR [rip+0x71da]        # 0x1400204a8
   1400192ce:	cmp    eax,0x3
   1400192d1:	jne    0x140019370
   1400192d7:	movsxd rbx,DWORD PTR [rsp+0x34]
   1400192dc:	mov    eax,DWORD PTR [rsp+0x30]
   1400192e0:	movzx  r12d,BYTE PTR [rdi+0x58]
   1400192e5:	cmp    ebx,eax
   1400192e7:	jne    0x140019351
   1400192e9:	mov    rsi,QWORD PTR [rsp+0x38]
   1400192ee:	lea    ebp,[rbx+rbx*1]
   1400192f1:	cmp    ebp,eax
   1400192f3:	je     0x140019333
   1400192f5:	cmp    ebp,0x20
   1400192f8:	jle    0x14001930e
   1400192fa:	movsxd rcx,ebp
   1400192fd:	call   QWORD PTR [rip+0x6ecd]        # 0x1400201d0
   140019303:	mov    DWORD PTR [rsp+0x30],ebp
   140019307:	mov    QWORD PTR [rsp+0x38],rax
   14001930c:	jmp    0x140019320
   14001930e:	lea    rax,[rsp+0x40]
   140019313:	mov    DWORD PTR [rsp+0x30],0x20
   14001931b:	mov    QWORD PTR [rsp+0x38],rax
   140019320:	mov    r8,rbx
   140019323:	mov    rdx,rsi
   140019326:	mov    rcx,rax
   140019329:	mov    DWORD PTR [rsp+0x34],r15d
   14001932e:	call   0x14001edd4
   140019333:	lea    rax,[rsp+0x40]
   140019338:	mov    DWORD PTR [rsp+0x34],ebx
   14001933c:	cmp    rsi,rax
   14001933f:	je     0x140019351
   140019341:	cmp    rsi,QWORD PTR [rsp+0x38]
   140019346:	je     0x140019351
   140019348:	mov    rcx,rsi
   14001934b:	call   QWORD PTR [rip+0x6e97]        # 0x1400201e8
   140019351:	mov    rax,QWORD PTR [rsp+0x38]
   140019356:	mov    rcx,rbx
   140019359:	inc    ebx
   14001935b:	mov    DWORD PTR [rsp+0x34],ebx
   14001935f:	mov    BYTE PTR [rcx+rax*1],r12b
   140019363:	mov    rcx,rdi
   140019366:	call   0x1400185d0
   14001936b:	jmp    0x1400192b1
   140019370:	lea    rcx,[rsp+0x128]
   140019378:	mov    dl,0x65
   14001937a:	call   QWORD PTR [rip+0x7410]        # 0x140020790
   140019380:	movzx  eax,WORD PTR [rax]
   140019383:	cmp    WORD PTR [rdi+0x58],ax
   140019387:	je     0x1400193a6
   140019389:	lea    rcx,[rsp+0x128]
   140019391:	mov    dl,0x45
   140019393:	call   QWORD PTR [rip+0x73f7]        # 0x140020790
   140019399:	movzx  eax,WORD PTR [rax]
   14001939c:	cmp    WORD PTR [rdi+0x58],ax
   1400193a0:	jne    0x140019702
   1400193a6:	mov    rax,QWORD PTR [rdi+0x30]
   1400193aa:	movzx  ecx,WORD PTR [rax]
   1400193ad:	cmp    ecx,0x39
   1400193b0:	ja     0x1400193b7
   1400193b2:	cmp    ecx,0x30
   1400193b5:	jae    0x140019429
   1400193b7:	cmp    ecx,0x7f
   1400193ba:	jbe    0x1400193c7
   1400193bc:	call   QWORD PTR [rip+0x70e6]        # 0x1400204a8
   1400193c2:	cmp    eax,0x3
   1400193c5:	je     0x140019429
   1400193c7:	lea    rcx,[rsp+0x128]
   1400193cf:	mov    dl,0x2b
   1400193d1:	call   QWORD PTR [rip+0x73b9]        # 0x140020790
   1400193d7:	mov    rcx,QWORD PTR [rdi+0x30]
   1400193db:	movzx  eax,WORD PTR [rax]
   1400193de:	cmp    WORD PTR [rcx],ax
   1400193e1:	je     0x140019403
   1400193e3:	lea    rcx,[rsp+0x128]
   1400193eb:	mov    dl,0x2d
   1400193ed:	call   QWORD PTR [rip+0x739d]        # 0x140020790
   1400193f3:	mov    rcx,QWORD PTR [rdi+0x30]
   1400193f7:	movzx  eax,WORD PTR [rax]
   1400193fa:	cmp    WORD PTR [rcx],ax
   1400193fd:	jne    0x140019702
   140019403:	movzx  ecx,WORD PTR [rcx+0x2]
   140019407:	cmp    ecx,0x39
   14001940a:	ja     0x140019411
   14001940c:	cmp    ecx,0x30
   14001940f:	jae    0x140019429
   140019411:	cmp    ecx,0x7f
   140019414:	jbe    0x140019702
   14001941a:	call   QWORD PTR [rip+0x7088]        # 0x1400204a8
   140019420:	cmp    eax,0x3
   140019423:	jne    0x140019702
   140019429:	mov    ecx,DWORD PTR [rsp+0x34]
   14001942d:	movzx  ebx,BYTE PTR [rdi+0x58]
   140019431:	cmp    ecx,DWORD PTR [rsp+0x30]
   140019435:	jne    0x14001944b
   140019437:	lea    r8d,[rcx+rcx*1]
   14001943b:	mov    edx,ecx
   14001943d:	lea    rcx,[rsp+0x30]
   140019442:	call   0x140018470
   140019447:	mov    ecx,DWORD PTR [rsp+0x34]
   14001944b:	movsxd rax,ecx
   14001944e:	inc    ecx
   140019450:	mov    DWORD PTR [rsp+0x34],ecx
   140019454:	mov    rcx,rax
   140019457:	mov    rax,QWORD PTR [rsp+0x38]
   14001945c:	mov    BYTE PTR [rcx+rax*1],bl
   14001945f:	mov    rcx,rdi
   140019462:	call   0x1400185d0
   140019467:	lea    rcx,[rsp+0x128]
   14001946f:	mov    dl,0x2b
   140019471:	call   QWORD PTR [rip+0x7319]        # 0x140020790
   140019477:	movzx  eax,WORD PTR [rax]
   14001947a:	cmp    WORD PTR [rdi+0x58],ax
   14001947e:	je     0x140019499
   140019480:	lea    rcx,[rsp+0x128]
   140019488:	mov    dl,0x2d
   14001948a:	call   QWORD PTR [rip+0x7300]        # 0x140020790
   140019490:	movzx  eax,WORD PTR [rax]
   140019493:	cmp    WORD PTR [rdi+0x58],ax
   140019497:	jne    0x1400194d7
   140019499:	mov    ecx,DWORD PTR [rsp+0x34]
   14001949d:	movzx  ebx,BYTE PTR [rdi+0x58]
   1400194a1:	cmp    ecx,DWORD PTR [rsp+0x30]
   1400194a5:	jne    0x1400194bb
   1400194a7:	lea    r8d,[rcx+rcx*1]
   1400194ab:	mov    edx,ecx
   1400194ad:	lea    rcx,[rsp+0x30]
   1400194b2:	call   0x140018470
   1400194b7:	mov    ecx,DWORD PTR [rsp+0x34]
   1400194bb:	movsxd rax,ecx
   1400194be:	inc    ecx
   1400194c0:	mov    DWORD PTR [rsp+0x34],ecx
   1400194c4:	mov    rcx,rax
   1400194c7:	mov    rax,QWORD PTR [rsp+0x38]
   1400194cc:	mov    BYTE PTR [rcx+rax*1],bl
   1400194cf:	mov    rcx,rdi
   1400194d2:	call   0x1400185d0
   1400194d7:	movzx  ecx,WORD PTR [rdi+0x58]
   1400194db:	cmp    ecx,0x39
   1400194de:	ja     0x1400194e5
   1400194e0:	cmp    ecx,0x30
   1400194e3:	jae    0x1400194fd
   1400194e5:	cmp    ecx,0x7f
   1400194e8:	jbe    0x140019702
   1400194ee:	call   QWORD PTR [rip+0x6fb4]        # 0x1400204a8
   1400194f4:	cmp    eax,0x3
   1400194f7:	jne    0x140019702
   1400194fd:	mov    ecx,DWORD PTR [rsp+0x34]
   140019501:	movzx  ebx,BYTE PTR [rdi+0x58]
   140019505:	cmp    ecx,DWORD PTR [rsp+0x30]
   140019509:	jne    0x14001951f
   14001950b:	lea    r8d,[rcx+rcx*1]
   14001950f:	mov    edx,ecx
   140019511:	lea    rcx,[rsp+0x30]
   140019516:	call   0x140018470
   14001951b:	mov    ecx,DWORD PTR [rsp+0x34]
   14001951f:	movsxd rax,ecx
   140019522:	inc    ecx
   140019524:	mov    DWORD PTR [rsp+0x34],ecx
   140019528:	mov    rcx,rax
   14001952b:	mov    rax,QWORD PTR [rsp+0x38]
   140019530:	mov    BYTE PTR [rcx+rax*1],bl
   140019533:	mov    rcx,rdi
   140019536:	call   0x1400185d0
   14001953b:	jmp    0x1400194d7
   14001953d:	lea    rcx,[rsp+0x128]
   140019545:	mov    dl,0x65
   140019547:	call   QWORD PTR [rip+0x7243]        # 0x140020790
   14001954d:	movzx  eax,WORD PTR [rax]
   140019550:	cmp    WORD PTR [rdi+0x58],ax
   140019554:	je     0x140019573
   140019556:	lea    rcx,[rsp+0x128]
   14001955e:	mov    dl,0x45
   140019560:	call   QWORD PTR [rip+0x722a]        # 0x140020790
   140019566:	movzx  eax,WORD PTR [rax]
   140019569:	cmp    WORD PTR [rdi+0x58],ax
   14001956d:	jne    0x140019702
   140019573:	mov    rax,QWORD PTR [rdi+0x30]
   140019577:	movzx  ecx,WORD PTR [rax]
   14001957a:	cmp    ecx,0x39
   14001957d:	ja     0x140019584
   14001957f:	cmp    ecx,0x30
   140019582:	jae    0x1400195f6
   140019584:	cmp    ecx,0x7f
   140019587:	jbe    0x140019594
   140019589:	call   QWORD PTR [rip+0x6f19]        # 0x1400204a8
   14001958f:	cmp    eax,0x3
   140019592:	je     0x1400195f6
   140019594:	lea    rcx,[rsp+0x128]
   14001959c:	mov    dl,0x2b
   14001959e:	call   QWORD PTR [rip+0x71ec]        # 0x140020790
   1400195a4:	mov    rcx,QWORD PTR [rdi+0x30]
   1400195a8:	movzx  eax,WORD PTR [rax]
   1400195ab:	cmp    WORD PTR [rcx],ax
   1400195ae:	je     0x1400195d0
   1400195b0:	lea    rcx,[rsp+0x128]
   1400195b8:	mov    dl,0x2d
   1400195ba:	call   QWORD PTR [rip+0x71d0]        # 0x140020790
   1400195c0:	mov    rcx,QWORD PTR [rdi+0x30]
   1400195c4:	movzx  eax,WORD PTR [rax]
   1400195c7:	cmp    WORD PTR [rcx],ax
   1400195ca:	jne    0x140019702
   1400195d0:	movzx  ecx,WORD PTR [rcx+0x2]
   1400195d4:	cmp    ecx,0x39
   1400195d7:	ja     0x1400195de
   1400195d9:	cmp    ecx,0x30
   1400195dc:	jae    0x1400195f6
   1400195de:	cmp    ecx,0x7f
   1400195e1:	jbe    0x140019702
   1400195e7:	call   QWORD PTR [rip+0x6ebb]        # 0x1400204a8
   1400195ed:	cmp    eax,0x3
   1400195f0:	jne    0x140019702
   1400195f6:	mov    ecx,DWORD PTR [rsp+0x34]
   1400195fa:	movzx  ebx,BYTE PTR [rdi+0x58]
   1400195fe:	cmp    ecx,DWORD PTR [rsp+0x30]
   140019602:	jne    0x140019618
   140019604:	lea    r8d,[rcx+rcx*1]
   140019608:	mov    edx,ecx
   14001960a:	lea    rcx,[rsp+0x30]
   14001960f:	call   0x140018470
   140019614:	mov    ecx,DWORD PTR [rsp+0x34]
   140019618:	movsxd rax,ecx
   14001961b:	inc    ecx
   14001961d:	mov    DWORD PTR [rsp+0x34],ecx
   140019621:	mov    rcx,rax
   140019624:	mov    rax,QWORD PTR [rsp+0x38]
   140019629:	mov    BYTE PTR [rcx+rax*1],bl
   14001962c:	mov    rcx,rdi
   14001962f:	call   0x1400185d0
   140019634:	lea    rcx,[rsp+0x128]
   14001963c:	mov    dl,0x2b
   14001963e:	call   QWORD PTR [rip+0x714c]        # 0x140020790
   140019644:	movzx  eax,WORD PTR [rax]
   140019647:	cmp    WORD PTR [rdi+0x58],ax
   14001964b:	je     0x140019666
   14001964d:	lea    rcx,[rsp+0x128]
   140019655:	mov    dl,0x2d
   140019657:	call   QWORD PTR [rip+0x7133]        # 0x140020790
   14001965d:	movzx  eax,WORD PTR [rax]
   140019660:	cmp    WORD PTR [rdi+0x58],ax
   140019664:	jne    0x1400196a4
   140019666:	mov    ecx,DWORD PTR [rsp+0x34]
   14001966a:	movzx  ebx,BYTE PTR [rdi+0x58]
   14001966e:	cmp    ecx,DWORD PTR [rsp+0x30]
   140019672:	jne    0x140019688
   140019674:	lea    r8d,[rcx+rcx*1]
   140019678:	mov    edx,ecx
   14001967a:	lea    rcx,[rsp+0x30]
   14001967f:	call   0x140018470
   140019684:	mov    ecx,DWORD PTR [rsp+0x34]
   140019688:	movsxd rax,ecx
   14001968b:	inc    ecx
   14001968d:	mov    DWORD PTR [rsp+0x34],ecx
   140019691:	mov    rcx,rax
   140019694:	mov    rax,QWORD PTR [rsp+0x38]
   140019699:	mov    BYTE PTR [rcx+rax*1],bl
   14001969c:	mov    rcx,rdi
   14001969f:	call   0x1400185d0
   1400196a4:	movzx  ecx,WORD PTR [rdi+0x58]
   1400196a8:	cmp    ecx,0x39
   1400196ab:	ja     0x1400196b2
   1400196ad:	cmp    ecx,0x30
   1400196b0:	jae    0x1400196c2
   1400196b2:	cmp    ecx,0x7f
   1400196b5:	jbe    0x140019702
   1400196b7:	call   QWORD PTR [rip+0x6deb]        # 0x1400204a8
   1400196bd:	cmp    eax,0x3
   1400196c0:	jne    0x140019702
   1400196c2:	mov    ecx,DWORD PTR [rsp+0x34]
   1400196c6:	movzx  ebx,BYTE PTR [rdi+0x58]
   1400196ca:	cmp    ecx,DWORD PTR [rsp+0x30]
   1400196ce:	jne    0x1400196e4
   1400196d0:	lea    r8d,[rcx+rcx*1]
   1400196d4:	mov    edx,ecx
   1400196d6:	lea    rcx,[rsp+0x30]
   1400196db:	call   0x140018470
   1400196e0:	mov    ecx,DWORD PTR [rsp+0x34]
   1400196e4:	movsxd rax,ecx
   1400196e7:	inc    ecx
   1400196e9:	mov    DWORD PTR [rsp+0x34],ecx
   1400196ed:	mov    rcx,rax
   1400196f0:	mov    rax,QWORD PTR [rsp+0x38]
   1400196f5:	mov    BYTE PTR [rcx+rax*1],bl
   1400196f8:	mov    rcx,rdi
   1400196fb:	call   0x1400185d0
   140019700:	jmp    0x1400196a4
   140019702:	mov    ecx,DWORD PTR [rsp+0x34]
   140019706:	cmp    ecx,0x1
   140019709:	jne    0x140019721
   14001970b:	mov    rcx,QWORD PTR [rsp+0x38]
   140019710:	lea    rax,[rsp+0x40]
   140019715:	mov    QWORD PTR [rdi+0x68],r15
   140019719:	cmp    rcx,rax
   14001971c:	jmp    0x1400197f1
   140019721:	cmp    ecx,DWORD PTR [rsp+0x30]
   140019725:	jne    0x14001973b
   140019727:	lea    r8d,[rcx+rcx*1]
   14001972b:	mov    edx,ecx
   14001972d:	lea    rcx,[rsp+0x30]
   140019732:	call   0x140018470
   140019737:	mov    ecx,DWORD PTR [rsp+0x34]
   14001973b:	movsxd rax,ecx
   14001973e:	inc    ecx
   140019740:	lea    r8,[rsp+0x120]
   140019748:	mov    DWORD PTR [rsp+0x34],ecx
   14001974c:	mov    rcx,rax
   14001974f:	mov    rax,QWORD PTR [rsp+0x38]
   140019754:	mov    BYTE PTR [rcx+rax*1],r15b
   140019758:	mov    rbx,QWORD PTR [rsp+0x38]
   14001975d:	lea    rdx,[rsp+0xb0]
   140019765:	mov    rcx,rbx
   140019768:	mov    QWORD PTR [rsp+0xb0],r15
   140019770:	mov    BYTE PTR [rsp+0x120],r15b
   140019778:	call   QWORD PTR [rip+0x6d4a]        # 0x1400204c8
   14001977e:	mov    eax,DWORD PTR [rsp+0x34]
   140019782:	dec    eax
   140019784:	movsxd rcx,eax
   140019787:	mov    rax,QWORD PTR [rsp+0xb0]
   14001978f:	movsd  QWORD PTR [rdi+0x68],xmm0
   140019794:	sub    rax,rbx
   140019797:	cmp    rax,rcx
   14001979a:	je     0x1400197e4
   14001979c:	lea    r8,[rip+0x9425]        # 0x140022bc8
   1400197a3:	lea    rdx,[rip+0x926e]        # 0x140022a18
   1400197aa:	lea    rcx,[rsp+0x128]
   1400197b2:	xor    r9d,r9d
   1400197b5:	mov    DWORD PTR [rdi+0x5c],0x7
   1400197bc:	mov    DWORD PTR [rsp+0x20],0xffffffff
   1400197c4:	call   QWORD PTR [rip+0x6c7e]        # 0x140020448
   1400197ca:	lea    rcx,[rdi+0x18]
   1400197ce:	mov    rdx,rax
   1400197d1:	call   QWORD PTR [rip+0x6d91]        # 0x140020568
   1400197d7:	lea    rcx,[rsp+0x128]
   1400197df:	jmp    0x14001914b
   1400197e4:	mov    rcx,QWORD PTR [rsp+0x38]
   1400197e9:	lea    rax,[rsp+0x40]
   1400197ee:	cmp    rcx,rax
   1400197f1:	je     0x1400197f9
   1400197f3:	call   QWORD PTR [rip+0x69ef]        # 0x1400201e8
   1400197f9:	mov    eax,0x2f
   1400197fe:	add    rsp,0xd0
   140019805:	pop    r15
   140019807:	pop    r13
   140019809:	pop    r12
   14001980b:	pop    rdi
   14001980c:	pop    rsi
   14001980d:	pop    rbp
   14001980e:	pop    rbx
   14001980f:	ret    
   140019810:	rex push rbp
   140019812:	sub    rsp,0x180
   140019819:	mov    eax,DWORD PTR [rcx+0x78]
   14001981c:	mov    rbp,rcx
   14001981f:	cmp    eax,0xffffffff
   140019822:	je     0x140019834
   140019824:	mov    DWORD PTR [rcx+0x78],0xffffffff
   14001982b:	add    rsp,0x180
   140019832:	pop    rbp
   140019833:	ret    
   140019834:	mov    QWORD PTR [rsp+0x160],r12
   14001983c:	mov    QWORD PTR [rsp+0x158],r13
   140019844:	mov    QWORD PTR [rsp+0x178],rbx
   14001984c:	mov    QWORD PTR [rsp+0x170],rsi
   140019854:	mov    BYTE PTR [rcx+0x8f],0x0
   14001985b:	xor    r12d,r12d
   14001985e:	mov    QWORD PTR [rsp+0x168],rdi
   140019866:	lea    r13,[rip+0xfffffffffffe6793]        # 0x140000000
   14001986d:	nop    DWORD PTR [rax]
   140019870:	mov    rax,QWORD PTR [rbp+0x40]
   140019874:	movzx  ecx,WORD PTR [rbp+0x58]
   140019878:	mov    BYTE PTR [rbp+0x8c],r12b
   14001987f:	mov    QWORD PTR [rbp+0x48],rax
   140019883:	call   QWORD PTR [rip+0x6c4f]        # 0x1400204d8
   140019889:	test   al,al
   14001988b:	je     0x1400198ef
   14001988d:	nop    DWORD PTR [rax]
   140019890:	mov    rcx,rbp
   140019893:	call   0x140018270
   140019898:	test   eax,eax
   14001989a:	je     0x1400198d9
   14001989c:	mov    ecx,eax
   14001989e:	mov    rax,QWORD PTR [rbp+0x30]
   1400198a2:	lea    rcx,[rax+rcx*2-0x2]
   1400198a7:	mov    QWORD PTR [rbp+0x48],rcx
   1400198ab:	cmp    BYTE PTR [rbp+0x8e],r12b
   1400198b2:	jne    0x140019ac9
   1400198b8:	cmp    DWORD PTR [rbp+0x70],0x2
   1400198bc:	mov    BYTE PTR [rbp+0x8f],0x1
   1400198c3:	jne    0x1400198d2
   1400198c5:	mov    BYTE PTR [rbp+0x8d],0x1
   1400198cc:	mov    DWORD PTR [rbp+0x70],r12d
   1400198d0:	jmp    0x1400198d9
   1400198d2:	mov    BYTE PTR [rbp+0x8d],r12b
   1400198d9:	mov    rcx,rbp
   1400198dc:	call   0x1400185d0
   1400198e1:	movzx  ecx,WORD PTR [rbp+0x58]
   1400198e5:	call   QWORD PTR [rip+0x6bed]        # 0x1400204d8
   1400198eb:	test   al,al
   1400198ed:	jne    0x140019890
   1400198ef:	mov    rcx,QWORD PTR [rbp+0x30]
   1400198f3:	lea    rax,[rcx-0x2]
   1400198f7:	mov    QWORD PTR [rbp+0x50],rax
   1400198fb:	mov    eax,DWORD PTR [rbp+0x60]
   1400198fe:	mov    DWORD PTR [rbp+0x88],eax
   140019904:	cmp    rcx,QWORD PTR [rbp+0x38]
   140019908:	ja     0x14001ad37
   14001990e:	movzx  ebx,WORD PTR [rbp+0x58]
   140019912:	mov    rcx,rbp
   140019915:	call   0x1400185d0
   14001991a:	lea    r11d,[rbx-0x21]
   14001991e:	cmp    r11d,0x5d
   140019922:	ja     0x14001a9fd
   140019928:	movsxd rax,r11d
   14001992b:	movzx  eax,BYTE PTR [r13+rax*1+0x1add8]
   140019934:	mov    ecx,DWORD PTR [r13+rax*4+0x1ad6c]
   14001993c:	add    rcx,r13
   14001993f:	jmp    rcx
   140019941:	lea    rcx,[rsp+0xa2]
   140019949:	mov    dl,0x2a
   14001994b:	call   QWORD PTR [rip+0x6e3f]        # 0x140020790
   140019951:	movzx  eax,WORD PTR [rax]
   140019954:	cmp    WORD PTR [rbp+0x58],ax
   140019958:	jne    0x140019a2c
   14001995e:	mov    rcx,rbp
   140019961:	call   0x1400185d0
   140019966:	data16 nop WORD PTR [rax+rax*1+0x0]
   140019970:	mov    rax,QWORD PTR [rbp+0x38]
   140019974:	cmp    QWORD PTR [rbp+0x30],rax
   140019978:	ja     0x140019ae8
   14001997e:	lea    rcx,[rsp+0xc0]
   140019986:	mov    dl,0x2a
   140019988:	call   QWORD PTR [rip+0x6e02]        # 0x140020790
   14001998e:	movzx  eax,WORD PTR [rax]
   140019991:	cmp    WORD PTR [rbp+0x58],ax
   140019995:	jne    0x140019a1f
   14001999b:	mov    rcx,rbp
   14001999e:	call   0x1400185d0
   1400199a3:	lea    rcx,[rsp+0xaa]
   1400199ab:	mov    dl,0x2f
   1400199ad:	call   QWORD PTR [rip+0x6ddd]        # 0x140020790
   1400199b3:	movzx  eax,WORD PTR [rax]
   1400199b6:	cmp    WORD PTR [rbp+0x58],ax
   1400199ba:	jne    0x140019970
   1400199bc:	mov    rcx,rbp
   1400199bf:	call   0x1400185d0
   1400199c4:	cmp    QWORD PTR [rbp+0x0],r12
   1400199c8:	je     0x140019870
   1400199ce:	mov    rdi,QWORD PTR [rbp+0x50]
   1400199d2:	mov    esi,DWORD PTR [rbp+0x88]
   1400199d8:	mov    rbx,QWORD PTR [rbp+0x50]
   1400199dc:	sub    rdi,QWORD PTR [rbp+0x48]
   1400199e0:	lea    rcx,[rbp+0x8]
   1400199e4:	sar    rdi,1
   1400199e7:	call   QWORD PTR [rip+0x6a33]        # 0x140020420
   1400199ed:	mov    r8,QWORD PTR [rbp+0x30]
   1400199f1:	mov    rcx,QWORD PTR [rbp+0x0]
   1400199f5:	sub    r8,rbx
   1400199f8:	mov    rdx,rbx
   1400199fb:	sub    rdx,rax
   1400199fe:	sar    r8,1
   140019a01:	lea    eax,[rdi+0x3]
   140019a04:	sar    rdx,1
   140019a07:	add    r8d,0xfffffffb
   140019a0b:	mov    r9d,esi
   140019a0e:	add    edx,0x2
   140019a11:	mov    DWORD PTR [rsp+0x20],eax
   140019a15:	call   0x140016e50
   140019a1a:	jmp    0x140019870
   140019a1f:	mov    rcx,rbp
   140019a22:	call   0x1400185d0
   140019a27:	jmp    0x140019970
   140019a2c:	lea    rcx,[rsp+0x76]
   140019a31:	mov    dl,0x2f
   140019a33:	call   QWORD PTR [rip+0x6d57]        # 0x140020790
   140019a39:	movzx  eax,WORD PTR [rax]
   140019a3c:	cmp    WORD PTR [rbp+0x58],ax
   140019a40:	jne    0x140019ae8
   140019a46:	mov    rax,QWORD PTR [rbp+0x38]
   140019a4a:	cmp    QWORD PTR [rbp+0x30],rax
   140019a4e:	ja     0x140019a6e
   140019a50:	mov    rcx,rbp
   140019a53:	call   0x140018240
   140019a58:	test   al,al
   140019a5a:	jne    0x140019a6e
   140019a5c:	mov    rcx,rbp
   140019a5f:	call   0x1400185d0
   140019a64:	mov    r11,QWORD PTR [rbp+0x38]
   140019a68:	cmp    QWORD PTR [rbp+0x30],r11
   140019a6c:	jbe    0x140019a50
   140019a6e:	cmp    QWORD PTR [rbp+0x0],r12
   140019a72:	je     0x140019870
   140019a78:	mov    rdi,QWORD PTR [rbp+0x50]
   140019a7c:	mov    esi,DWORD PTR [rbp+0x88]
   140019a82:	mov    rbx,QWORD PTR [rbp+0x50]
   140019a86:	sub    rdi,QWORD PTR [rbp+0x48]
   140019a8a:	lea    rcx,[rbp+0x8]
   140019a8e:	sar    rdi,1
   140019a91:	call   QWORD PTR [rip+0x6989]        # 0x140020420
   140019a97:	mov    r8,QWORD PTR [rbp+0x30]
   140019a9b:	mov    rcx,QWORD PTR [rbp+0x0]
   140019a9f:	sub    r8,rbx
   140019aa2:	mov    rdx,rbx
   140019aa5:	sub    rdx,rax
   140019aa8:	sar    r8,1
   140019aab:	lea    eax,[rdi+0x3]
   140019aae:	sar    rdx,1
   140019ab1:	add    r8d,0xfffffffd
   140019ab5:	mov    r9d,esi
   140019ab8:	add    edx,0x2
   140019abb:	mov    DWORD PTR [rsp+0x20],eax
   140019abf:	call   0x140016e50
   140019ac4:	jmp    0x140019870
   140019ac9:	mov    eax,DWORD PTR [rbp+0x60]
   140019acc:	mov    DWORD PTR [rbp+0x88],eax
   140019ad2:	mov    rax,QWORD PTR [rbp+0x30]
   140019ad6:	sub    rax,0x2
   140019ada:	mov    QWORD PTR [rbp+0x50],rax
   140019ade:	mov    eax,0x3d
   140019ae3:	jmp    0x14001ad39
   140019ae8:	lea    rcx,[rsp+0xc2]
   140019af0:	mov    dl,0x3d
   140019af2:	call   QWORD PTR [rip+0x6c98]        # 0x140020790
   140019af8:	movzx  eax,WORD PTR [rax]
   140019afb:	cmp    WORD PTR [rbp+0x58],ax
   140019aff:	jne    0x140019b13
   140019b01:	mov    rcx,rbp
   140019b04:	call   0x1400185d0
   140019b09:	mov    eax,0xd
   140019b0e:	jmp    0x14001ad39
   140019b13:	mov    eax,0xc
   140019b18:	jmp    0x14001ad39
   140019b1d:	mov    eax,0x48
   140019b22:	jmp    0x14001ad39
   140019b27:	mov    eax,0x37
   140019b2c:	jmp    0x14001ad39
   140019b31:	lea    rcx,[rsp+0x7a]
   140019b36:	mov    dl,0x7c
   140019b38:	call   QWORD PTR [rip+0x6c52]        # 0x140020790
   140019b3e:	movzx  eax,WORD PTR [rax]
   140019b41:	cmp    WORD PTR [rbp+0x58],ax
   140019b45:	jne    0x140019b59
   140019b47:	mov    rcx,rbp
   140019b4a:	call   0x1400185d0
   140019b4f:	mov    eax,0x32
   140019b54:	jmp    0x14001ad39
   140019b59:	lea    rcx,[rsp+0xc6]
   140019b61:	mov    dl,0x3d
   140019b63:	call   QWORD PTR [rip+0x6c27]        # 0x140020790
   140019b69:	movzx  eax,WORD PTR [rax]
   140019b6c:	cmp    WORD PTR [rbp+0x58],ax
   140019b70:	jne    0x140019b84
   140019b72:	mov    rcx,rbp
   140019b75:	call   0x1400185d0
   140019b7a:	mov    eax,0x31
   140019b7f:	jmp    0x14001ad39
   140019b84:	mov    eax,0x30
   140019b89:	jmp    0x14001ad39
   140019b8e:	mov    eax,0x21
   140019b93:	jmp    0x14001ad39
   140019b98:	lea    rcx,[rsp+0x7e]
   140019b9d:	mov    dl,0x3d
   140019b9f:	call   QWORD PTR [rip+0x6beb]        # 0x140020790
   140019ba5:	movzx  eax,WORD PTR [rax]
   140019ba8:	cmp    WORD PTR [rbp+0x58],ax
   140019bac:	jne    0x140019bc0
   140019bae:	mov    rcx,rbp
   140019bb1:	call   0x1400185d0
   140019bb6:	mov    eax,0x50
   140019bbb:	jmp    0x14001ad39
   140019bc0:	mov    eax,0x4f
   140019bc5:	jmp    0x14001ad39
   140019bca:	mov    eax,0x38
   140019bcf:	jmp    0x14001ad39
   140019bd4:	mov    eax,0x22
   140019bd9:	jmp    0x14001ad39
   140019bde:	mov    eax,0x36
   140019be3:	jmp    0x14001ad39
   140019be8:	lea    rcx,[rsp+0xb0]
   140019bf0:	mov    dl,0x3e
   140019bf2:	call   QWORD PTR [rip+0x6b98]        # 0x140020790
   140019bf8:	movzx  eax,WORD PTR [rax]
   140019bfb:	cmp    WORD PTR [rbp+0x58],ax
   140019bff:	jne    0x140019c98
   140019c05:	mov    rcx,rbp
   140019c08:	call   0x1400185d0
   140019c0d:	lea    rcx,[rsp+0x82]
   140019c15:	mov    dl,0x3e
   140019c17:	call   QWORD PTR [rip+0x6b73]        # 0x140020790
   140019c1d:	movzx  eax,WORD PTR [rax]
   140019c20:	cmp    WORD PTR [rbp+0x58],ax
   140019c24:	jne    0x140019c63
   140019c26:	mov    rcx,rbp
   140019c29:	call   0x1400185d0
   140019c2e:	lea    rcx,[rsp+0xbc]
   140019c36:	mov    dl,0x3d
   140019c38:	call   QWORD PTR [rip+0x6b52]        # 0x140020790
   140019c3e:	movzx  eax,WORD PTR [rax]
   140019c41:	cmp    WORD PTR [rbp+0x58],ax
   140019c45:	jne    0x140019c59
   140019c47:	mov    rcx,rbp
   140019c4a:	call   0x1400185d0
   140019c4f:	mov    eax,0x1c
   140019c54:	jmp    0x14001ad39
   140019c59:	mov    eax,0x1b
   140019c5e:	jmp    0x14001ad39
   140019c63:	lea    rcx,[rsp+0x86]
   140019c6b:	mov    dl,0x3d
   140019c6d:	call   QWORD PTR [rip+0x6b1d]        # 0x140020790
   140019c73:	movzx  eax,WORD PTR [rax]
   140019c76:	cmp    WORD PTR [rbp+0x58],ax
   140019c7a:	jne    0x140019c8e
   140019c7c:	mov    rcx,rbp
   140019c7f:	call   0x1400185d0
   140019c84:	mov    eax,0x1a
   140019c89:	jmp    0x14001ad39
   140019c8e:	mov    eax,0x19
   140019c93:	jmp    0x14001ad39
   140019c98:	lea    rcx,[rsp+0xb4]
   140019ca0:	mov    dl,0x3d
   140019ca2:	call   QWORD PTR [rip+0x6ae8]        # 0x140020790
   140019ca8:	movzx  eax,WORD PTR [rax]
   140019cab:	cmp    WORD PTR [rbp+0x58],ax
   140019caf:	jne    0x140019cc3
   140019cb1:	mov    rcx,rbp
   140019cb4:	call   0x1400185d0
   140019cb9:	mov    eax,0x17
   140019cbe:	jmp    0x14001ad39
   140019cc3:	mov    eax,0x18
   140019cc8:	jmp    0x14001ad39
   140019ccd:	lea    rcx,[rsp+0x8a]
   140019cd5:	mov    dl,0x3d
   140019cd7:	call   QWORD PTR [rip+0x6ab3]        # 0x140020790
   140019cdd:	movzx  eax,WORD PTR [rax]
   140019ce0:	cmp    WORD PTR [rbp+0x58],ax
   140019ce4:	jne    0x140019d23
   140019ce6:	mov    rcx,rbp
   140019ce9:	call   0x1400185d0
   140019cee:	lea    rcx,[rsp+0xc4]
   140019cf6:	mov    dl,0x3d
   140019cf8:	call   QWORD PTR [rip+0x6a92]        # 0x140020790
   140019cfe:	movzx  eax,WORD PTR [rax]
   140019d01:	cmp    WORD PTR [rbp+0x58],ax
   140019d05:	jne    0x140019d19
   140019d07:	mov    rcx,rbp
   140019d0a:	call   0x1400185d0
   140019d0f:	mov    eax,0x13
   140019d14:	jmp    0x14001ad39
   140019d19:	mov    eax,0x12
   140019d1e:	jmp    0x14001ad39
   140019d23:	mov    eax,0x11
   140019d28:	jmp    0x14001ad39
   140019d2d:	lea    rcx,[rsp+0x8e]
   140019d35:	mov    dl,0x3d
   140019d37:	call   QWORD PTR [rip+0x6a53]        # 0x140020790
   140019d3d:	movzx  eax,WORD PTR [rax]
   140019d40:	cmp    WORD PTR [rbp+0x58],ax
   140019d44:	jne    0x140019d58
   140019d46:	mov    rcx,rbp
   140019d49:	call   0x1400185d0
   140019d4e:	mov    eax,0x23
   140019d53:	jmp    0x14001ad39
   140019d58:	lea    rcx,[rsp+0xb8]
   140019d60:	mov    dl,0x3c
   140019d62:	call   QWORD PTR [rip+0x6a28]        # 0x140020790
   140019d68:	movzx  eax,WORD PTR [rax]
   140019d6b:	cmp    WORD PTR [rbp+0x58],ax
   140019d6f:	jne    0x140019dae
   140019d71:	mov    rcx,rbp
   140019d74:	call   0x1400185d0
   140019d79:	lea    rcx,[rsp+0x92]
   140019d81:	mov    dl,0x3d
   140019d83:	call   QWORD PTR [rip+0x6a07]        # 0x140020790
   140019d89:	movzx  eax,WORD PTR [rax]
   140019d8c:	cmp    WORD PTR [rbp+0x58],ax
   140019d90:	jne    0x140019da4
   140019d92:	mov    rcx,rbp
   140019d95:	call   0x1400185d0
   140019d9a:	mov    eax,0x27
   140019d9f:	jmp    0x14001ad39
   140019da4:	mov    eax,0x26
   140019da9:	jmp    0x14001ad39
   140019dae:	mov    eax,0x25
   140019db3:	jmp    0x14001ad39
   140019db8:	mov    eax,0x7
   140019dbd:	jmp    0x14001ad39
   140019dc2:	movzx  ecx,WORD PTR [rbp+0x58]
   140019dc6:	cmp    ecx,0x39
   140019dc9:	ja     0x140019dd0
   140019dcb:	cmp    ecx,0x30
   140019dce:	jae    0x140019de8
   140019dd0:	cmp    ecx,0x7f
   140019dd3:	jbe    0x14001a134
   140019dd9:	call   QWORD PTR [rip+0x66c9]        # 0x1400204a8
   140019ddf:	cmp    eax,0x3
   140019de2:	jne    0x14001a134
   140019de8:	lea    rax,[rsp+0x50]
   140019ded:	mov    edx,0x1
   140019df2:	mov    DWORD PTR [rsp+0x40],0x20
   140019dfa:	mov    QWORD PTR [rsp+0x48],rax
   140019dff:	mov    DWORD PTR [rsp+0x44],edx
   140019e03:	mov    BYTE PTR [rsp+0x50],bl
   140019e07:	movzx  ecx,WORD PTR [rbp+0x58]
   140019e0b:	cmp    ecx,0x39
   140019e0e:	ja     0x140019e15
   140019e10:	cmp    ecx,0x30
   140019e13:	jae    0x140019e29
   140019e15:	cmp    ecx,0x7f
   140019e18:	jbe    0x140019e64
   140019e1a:	call   QWORD PTR [rip+0x6688]        # 0x1400204a8
   140019e20:	cmp    eax,0x3
   140019e23:	jne    0x140019e64
   140019e25:	mov    edx,DWORD PTR [rsp+0x44]
   140019e29:	movzx  ebx,BYTE PTR [rbp+0x58]
   140019e2d:	cmp    edx,DWORD PTR [rsp+0x40]
   140019e31:	jne    0x140019e45
   140019e33:	lea    r8d,[rdx+rdx*1]
   140019e37:	lea    rcx,[rsp+0x40]
   140019e3c:	call   0x140018470
   140019e41:	mov    edx,DWORD PTR [rsp+0x44]
   140019e45:	mov    rax,QWORD PTR [rsp+0x48]
   140019e4a:	movsxd rcx,edx
   140019e4d:	inc    edx
   140019e4f:	mov    DWORD PTR [rsp+0x44],edx
   140019e53:	mov    BYTE PTR [rcx+rax*1],bl
   140019e56:	mov    rcx,rbp
   140019e59:	call   0x1400185d0
   140019e5e:	mov    edx,DWORD PTR [rsp+0x44]
   140019e62:	jmp    0x140019e07
   140019e64:	lea    rcx,[rsp+0xac]
   140019e6c:	mov    dl,0x65
   140019e6e:	call   QWORD PTR [rip+0x691c]        # 0x140020790
   140019e74:	movzx  eax,WORD PTR [rax]
   140019e77:	cmp    WORD PTR [rbp+0x58],ax
   140019e7b:	je     0x140019e9a
   140019e7d:	lea    rcx,[rsp+0x96]
   140019e85:	mov    dl,0x45
   140019e87:	call   QWORD PTR [rip+0x6903]        # 0x140020790
   140019e8d:	movzx  eax,WORD PTR [rax]
   140019e90:	cmp    WORD PTR [rbp+0x58],ax
   140019e94:	jne    0x14001a02e
   140019e9a:	mov    rax,QWORD PTR [rbp+0x30]
   140019e9e:	movzx  ecx,WORD PTR [rax]
   140019ea1:	cmp    ecx,0x39
   140019ea4:	ja     0x140019eab
   140019ea6:	cmp    ecx,0x30
   140019ea9:	jae    0x140019f1d
   140019eab:	cmp    ecx,0x7f
   140019eae:	jbe    0x140019ebb
   140019eb0:	call   QWORD PTR [rip+0x65f2]        # 0x1400204a8
   140019eb6:	cmp    eax,0x3
   140019eb9:	je     0x140019f1d
   140019ebb:	lea    rcx,[rsp+0xae]
   140019ec3:	mov    dl,0x2b
   140019ec5:	call   QWORD PTR [rip+0x68c5]        # 0x140020790
   140019ecb:	mov    rcx,QWORD PTR [rbp+0x30]
   140019ecf:	movzx  eax,WORD PTR [rax]
   140019ed2:	cmp    WORD PTR [rcx],ax
   140019ed5:	je     0x140019ef7
   140019ed7:	lea    rcx,[rsp+0x9a]
   140019edf:	mov    dl,0x2d
   140019ee1:	call   QWORD PTR [rip+0x68a9]        # 0x140020790
   140019ee7:	mov    rcx,QWORD PTR [rbp+0x30]
   140019eeb:	movzx  eax,WORD PTR [rax]
   140019eee:	cmp    WORD PTR [rcx],ax
   140019ef1:	jne    0x14001a02e
   140019ef7:	movzx  ecx,WORD PTR [rcx+0x2]
   140019efb:	cmp    ecx,0x39
   140019efe:	ja     0x140019f05
   140019f00:	cmp    ecx,0x30
   140019f03:	jae    0x140019f1d
   140019f05:	cmp    ecx,0x7f
   140019f08:	jbe    0x14001a02e
   140019f0e:	call   QWORD PTR [rip+0x6594]        # 0x1400204a8
   140019f14:	cmp    eax,0x3
   140019f17:	jne    0x14001a02e
   140019f1d:	mov    ecx,DWORD PTR [rsp+0x44]
   140019f21:	movzx  ebx,BYTE PTR [rbp+0x58]
   140019f25:	cmp    ecx,DWORD PTR [rsp+0x40]
   140019f29:	jne    0x140019f3f
   140019f2b:	lea    r8d,[rcx+rcx*1]
   140019f2f:	mov    edx,ecx
   140019f31:	lea    rcx,[rsp+0x40]
   140019f36:	call   0x140018470
   140019f3b:	mov    ecx,DWORD PTR [rsp+0x44]
   140019f3f:	movsxd rax,ecx
   140019f42:	inc    ecx
   140019f44:	mov    DWORD PTR [rsp+0x44],ecx
   140019f48:	mov    rcx,rax
   140019f4b:	mov    rax,QWORD PTR [rsp+0x48]
   140019f50:	mov    BYTE PTR [rcx+rax*1],bl
   140019f53:	mov    rcx,rbp
   140019f56:	call   0x1400185d0
   140019f5b:	lea    rcx,[rsp+0xb2]
   140019f63:	mov    dl,0x2b
   140019f65:	call   QWORD PTR [rip+0x6825]        # 0x140020790
   140019f6b:	movzx  eax,WORD PTR [rax]
   140019f6e:	cmp    WORD PTR [rbp+0x58],ax
   140019f72:	je     0x140019f8d
   140019f74:	lea    rcx,[rsp+0x9e]
   140019f7c:	mov    dl,0x2d
   140019f7e:	call   QWORD PTR [rip+0x680c]        # 0x140020790
   140019f84:	movzx  eax,WORD PTR [rax]
   140019f87:	cmp    WORD PTR [rbp+0x58],ax
   140019f8b:	jne    0x140019fd0
   140019f8d:	mov    ecx,DWORD PTR [rsp+0x44]
   140019f91:	movzx  ebx,BYTE PTR [rbp+0x58]
   140019f95:	cmp    ecx,DWORD PTR [rsp+0x40]
   140019f99:	jne    0x140019faf
   140019f9b:	lea    r8d,[rcx+rcx*1]
   140019f9f:	mov    edx,ecx
   140019fa1:	lea    rcx,[rsp+0x40]
   140019fa6:	call   0x140018470
   140019fab:	mov    ecx,DWORD PTR [rsp+0x44]
   140019faf:	movsxd rax,ecx
   140019fb2:	inc    ecx
   140019fb4:	mov    DWORD PTR [rsp+0x44],ecx
   140019fb8:	mov    rcx,rax
   140019fbb:	mov    rax,QWORD PTR [rsp+0x48]
   140019fc0:	mov    BYTE PTR [rcx+rax*1],bl
   140019fc3:	mov    rcx,rbp
   140019fc6:	call   0x1400185d0
   140019fcb:	nop    DWORD PTR [rax+rax*1+0x0]
   140019fd0:	movzx  ecx,WORD PTR [rbp+0x58]
   140019fd4:	cmp    ecx,0x39
   140019fd7:	ja     0x140019fde
   140019fd9:	cmp    ecx,0x30
   140019fdc:	jae    0x140019fee
   140019fde:	cmp    ecx,0x7f
   140019fe1:	jbe    0x14001a02e
   140019fe3:	call   QWORD PTR [rip+0x64bf]        # 0x1400204a8
   140019fe9:	cmp    eax,0x3
   140019fec:	jne    0x14001a02e
   140019fee:	mov    ecx,DWORD PTR [rsp+0x44]
   140019ff2:	movzx  ebx,BYTE PTR [rbp+0x58]
   140019ff6:	cmp    ecx,DWORD PTR [rsp+0x40]
   140019ffa:	jne    0x14001a010
   140019ffc:	lea    r8d,[rcx+rcx*1]
   14001a000:	mov    edx,ecx
   14001a002:	lea    rcx,[rsp+0x40]
   14001a007:	call   0x140018470
   14001a00c:	mov    ecx,DWORD PTR [rsp+0x44]
   14001a010:	movsxd rax,ecx
   14001a013:	inc    ecx
   14001a015:	mov    DWORD PTR [rsp+0x44],ecx
   14001a019:	mov    rcx,rax
   14001a01c:	mov    rax,QWORD PTR [rsp+0x48]
   14001a021:	mov    BYTE PTR [rcx+rax*1],bl
   14001a024:	mov    rcx,rbp
   14001a027:	call   0x1400185d0
   14001a02c:	jmp    0x140019fd0
   14001a02e:	mov    ecx,DWORD PTR [rsp+0x44]
   14001a032:	cmp    ecx,DWORD PTR [rsp+0x40]
   14001a036:	jne    0x14001a04c
   14001a038:	lea    r8d,[rcx+rcx*1]
   14001a03c:	mov    edx,ecx
   14001a03e:	lea    rcx,[rsp+0x40]
   14001a043:	call   0x140018470
   14001a048:	mov    ecx,DWORD PTR [rsp+0x44]
   14001a04c:	movsxd rax,ecx
   14001a04f:	inc    ecx
   14001a051:	lea    r8,[rsp+0x190]
   14001a059:	mov    DWORD PTR [rsp+0x44],ecx
   14001a05d:	mov    rcx,rax
   14001a060:	mov    rax,QWORD PTR [rsp+0x48]
   14001a065:	mov    BYTE PTR [rcx+rax*1],r12b
   14001a069:	mov    rbx,QWORD PTR [rsp+0x48]
   14001a06e:	lea    rdx,[rsp+0xc8]
   14001a076:	mov    rcx,rbx
   14001a079:	mov    QWORD PTR [rsp+0xc8],r12
   14001a081:	mov    BYTE PTR [rsp+0x190],r12b
   14001a089:	call   QWORD PTR [rip+0x6439]        # 0x1400204c8
   14001a08f:	mov    eax,DWORD PTR [rsp+0x44]
   14001a093:	dec    eax
   14001a095:	movsxd rcx,eax
   14001a098:	mov    rax,QWORD PTR [rsp+0xc8]
   14001a0a0:	movsd  QWORD PTR [rbp+0x68],xmm0
   14001a0a5:	sub    rax,rbx
   14001a0a8:	cmp    rax,rcx
   14001a0ab:	je     0x14001a115
   14001a0ad:	lea    r8,[rip+0x8b14]        # 0x140022bc8
   14001a0b4:	lea    rdx,[rip+0x895d]        # 0x140022a18
   14001a0bb:	lea    rcx,[rsp+0x120]
   14001a0c3:	xor    r9d,r9d
   14001a0c6:	mov    DWORD PTR [rbp+0x5c],0x7
   14001a0cd:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14001a0d5:	call   QWORD PTR [rip+0x636d]        # 0x140020448
   14001a0db:	lea    rcx,[rbp+0x18]
   14001a0df:	mov    rdx,rax
   14001a0e2:	call   QWORD PTR [rip+0x6480]        # 0x140020568
   14001a0e8:	lea    rcx,[rsp+0x120]
   14001a0f0:	call   QWORD PTR [rip+0x668a]        # 0x140020780
   14001a0f6:	mov    rcx,QWORD PTR [rsp+0x48]
   14001a0fb:	lea    r11,[rsp+0x50]
   14001a100:	cmp    rcx,r11
   14001a103:	je     0x14001a10b
   14001a105:	call   QWORD PTR [rip+0x60dd]        # 0x1400201e8
   14001a10b:	mov    eax,0x61
   14001a110:	jmp    0x14001ad39
   14001a115:	mov    rcx,QWORD PTR [rsp+0x48]
   14001a11a:	lea    rax,[rsp+0x50]
   14001a11f:	cmp    rcx,rax
   14001a122:	je     0x14001a12a
   14001a124:	call   QWORD PTR [rip+0x60be]        # 0x1400201e8
   14001a12a:	mov    eax,0x2f
   14001a12f:	jmp    0x14001ad39
   14001a134:	mov    eax,0xf
   14001a139:	jmp    0x14001ad39
   14001a13e:	lea    rcx,[rsp+0xb6]
   14001a146:	mov    dl,0x3d
   14001a148:	call   QWORD PTR [rip+0x6642]        # 0x140020790
   14001a14e:	movzx  eax,WORD PTR [rax]
   14001a151:	cmp    WORD PTR [rbp+0x58],ax
   14001a155:	jne    0x14001a169
   14001a157:	mov    rcx,rbp
   14001a15a:	call   0x1400185d0
   14001a15f:	mov    eax,0x29
   14001a164:	jmp    0x14001ad39
   14001a169:	lea    rcx,[rsp+0x70]
   14001a16e:	mov    dl,0x2d
   14001a170:	call   QWORD PTR [rip+0x661a]        # 0x140020790
   14001a176:	movzx  eax,WORD PTR [rax]
   14001a179:	cmp    WORD PTR [rbp+0x58],ax
   14001a17d:	jne    0x14001a1bd
   14001a17f:	mov    rcx,rbp
   14001a182:	call   0x1400185d0
   14001a187:	cmp    BYTE PTR [rbp+0x8f],r12b
   14001a18e:	je     0x14001a1b3
   14001a190:	cmp    BYTE PTR [rbp+0x91],r12b
   14001a197:	jne    0x14001a1b3
   14001a199:	cmp    BYTE PTR [rbp+0x8d],r12b
   14001a1a0:	jne    0x14001a1b3
   14001a1a2:	mov    DWORD PTR [rbp+0x78],0x2a
   14001a1a9:	mov    eax,0x3d
   14001a1ae:	jmp    0x14001ad39
   14001a1b3:	mov    eax,0x2a
   14001a1b8:	jmp    0x14001ad39
   14001a1bd:	mov    eax,0x28
   14001a1c2:	jmp    0x14001ad39
   14001a1c7:	mov    eax,0x8
   14001a1cc:	jmp    0x14001ad39
   14001a1d1:	lea    rcx,[rsp+0xba]
   14001a1d9:	mov    dl,0x3d
   14001a1db:	call   QWORD PTR [rip+0x65af]        # 0x140020790
   14001a1e1:	movzx  eax,WORD PTR [rax]
   14001a1e4:	cmp    WORD PTR [rbp+0x58],ax
   14001a1e8:	jne    0x14001a1fc
   14001a1ea:	mov    rcx,rbp
   14001a1ed:	call   0x1400185d0
   14001a1f2:	mov    eax,0x34
   14001a1f7:	jmp    0x14001ad39
   14001a1fc:	lea    rcx,[rsp+0xa6]
   14001a204:	mov    dl,0x2b
   14001a206:	call   QWORD PTR [rip+0x6584]        # 0x140020790
   14001a20c:	movzx  eax,WORD PTR [rax]
   14001a20f:	cmp    WORD PTR [rbp+0x58],ax
   14001a213:	jne    0x14001a253
   14001a215:	mov    rcx,rbp
   14001a218:	call   0x1400185d0
   14001a21d:	cmp    BYTE PTR [rbp+0x8f],r12b
   14001a224:	je     0x14001a249
   14001a226:	cmp    BYTE PTR [rbp+0x91],r12b
   14001a22d:	jne    0x14001a249
   14001a22f:	cmp    BYTE PTR [rbp+0x8d],r12b
   14001a236:	jne    0x14001a249
   14001a238:	mov    DWORD PTR [rbp+0x78],0x35
   14001a23f:	mov    eax,0x3d
   14001a244:	jmp    0x14001ad39
   14001a249:	mov    eax,0x35
   14001a24e:	jmp    0x14001ad39
   14001a253:	mov    eax,0x33
   14001a258:	jmp    0x14001ad39
   14001a25d:	lea    rcx,[rsp+0xbe]
   14001a265:	mov    dl,0x3d
   14001a267:	call   QWORD PTR [rip+0x6523]        # 0x140020790
   14001a26d:	movzx  eax,WORD PTR [rax]
   14001a270:	cmp    WORD PTR [rbp+0x58],ax
   14001a274:	jne    0x14001a288
   14001a276:	mov    rcx,rbp
   14001a279:	call   0x1400185d0
   14001a27e:	mov    eax,0x40
   14001a283:	jmp    0x14001ad39
   14001a288:	mov    eax,0x3f
   14001a28d:	jmp    0x14001ad39
   14001a292:	mov    eax,0x3c
   14001a297:	jmp    0x14001ad39
   14001a29c:	mov    eax,0x24
   14001a2a1:	jmp    0x14001ad39
   14001a2a6:	lea    rcx,[rsp+0x72]
   14001a2ab:	mov    dl,0x3d
   14001a2ad:	call   QWORD PTR [rip+0x64dd]        # 0x140020790
   14001a2b3:	movzx  eax,WORD PTR [rax]
   14001a2b6:	cmp    WORD PTR [rbp+0x58],ax
   14001a2ba:	jne    0x14001a2ce
   14001a2bc:	mov    rcx,rbp
   14001a2bf:	call   0x1400185d0
   14001a2c4:	mov    eax,0x3
   14001a2c9:	jmp    0x14001ad39
   14001a2ce:	lea    rcx,[rsp+0x74]
   14001a2d3:	mov    dl,0x26
   14001a2d5:	call   QWORD PTR [rip+0x64b5]        # 0x140020790
   14001a2db:	movzx  eax,WORD PTR [rax]
   14001a2de:	cmp    WORD PTR [rbp+0x58],ax
   14001a2e2:	jne    0x14001a2f6
   14001a2e4:	mov    rcx,rbp
   14001a2e7:	call   0x1400185d0
   14001a2ec:	mov    eax,0x2
   14001a2f1:	jmp    0x14001ad39
   14001a2f6:	mov    eax,0x1
   14001a2fb:	jmp    0x14001ad39
   14001a300:	lea    rcx,[rsp+0x78]
   14001a305:	mov    dl,0x3d
   14001a307:	call   QWORD PTR [rip+0x6483]        # 0x140020790
   14001a30d:	movzx  eax,WORD PTR [rax]
   14001a310:	cmp    WORD PTR [rbp+0x58],ax
   14001a314:	jne    0x14001a328
   14001a316:	mov    rcx,rbp
   14001a319:	call   0x1400185d0
   14001a31e:	mov    eax,0x3a
   14001a323:	jmp    0x14001ad39
   14001a328:	mov    eax,0x39
   14001a32d:	jmp    0x14001ad39
   14001a332:	lea    rcx,[rsp+0x7c]
   14001a337:	mov    dl,0x3d
   14001a339:	call   QWORD PTR [rip+0x6451]        # 0x140020790
   14001a33f:	movzx  eax,WORD PTR [rax]
   14001a342:	cmp    WORD PTR [rbp+0x58],ax
   14001a346:	jne    0x14001a385
   14001a348:	mov    rcx,rbp
   14001a34b:	call   0x1400185d0
   14001a350:	lea    rcx,[rsp+0x80]
   14001a358:	mov    dl,0x3d
   14001a35a:	call   QWORD PTR [rip+0x6430]        # 0x140020790
   14001a360:	movzx  eax,WORD PTR [rax]
   14001a363:	cmp    WORD PTR [rbp+0x58],ax
   14001a367:	jne    0x14001a37b
   14001a369:	mov    rcx,rbp
   14001a36c:	call   0x1400185d0
   14001a371:	mov    eax,0x2e
   14001a376:	jmp    0x14001ad39
   14001a37b:	mov    eax,0x2d
   14001a380:	jmp    0x14001ad39
   14001a385:	mov    eax,0x2c
   14001a38a:	jmp    0x14001ad39
   14001a38f:	cmp    QWORD PTR [rbp+0x0],0x0
   14001a394:	mov    rdi,QWORD PTR [rbp+0x30]
   14001a398:	je     0x14001a3e4
   14001a39a:	cmp    rdi,QWORD PTR [rbp+0x38]
   14001a39e:	ja     0x14001a3e4
   14001a3a0:	mov    rcx,rbp
   14001a3a3:	call   0x140018240
   14001a3a8:	test   al,al
   14001a3aa:	jne    0x14001a4ef
   14001a3b0:	lea    rcx,[rsp+0x84]
   14001a3b8:	mov    dl,0x5c
   14001a3ba:	call   QWORD PTR [rip+0x63d0]        # 0x140020790
   14001a3c0:	mov    cx,WORD PTR [rbp+0x58]
   14001a3c4:	cmp    cx,WORD PTR [rax]
   14001a3c7:	je     0x14001a3e4
   14001a3c9:	cmp    cx,bx
   14001a3cc:	je     0x14001a486
   14001a3d2:	mov    rcx,rbp
   14001a3d5:	call   0x1400185d0
   14001a3da:	mov    r11,QWORD PTR [rbp+0x38]
   14001a3de:	cmp    QWORD PTR [rbp+0x30],r11
   14001a3e2:	jbe    0x14001a3a0
   14001a3e4:	lea    rcx,[rbp+0x10]
   14001a3e8:	xor    edx,edx
   14001a3ea:	mov    BYTE PTR [rbp+0x8c],0x1
   14001a3f1:	call   QWORD PTR [rip+0x60c9]        # 0x1400204c0
   14001a3f7:	mov    rax,QWORD PTR [rbp+0x30]
   14001a3fb:	sub    rdi,0x2
   14001a3ff:	sub    rax,0x2
   14001a403:	cmp    rdi,rax
   14001a406:	je     0x14001a42e
   14001a408:	nop    DWORD PTR [rax+rax*1+0x0]
   14001a410:	movzx  edx,WORD PTR [rdi]
   14001a413:	lea    rcx,[rbp+0x10]
   14001a417:	call   QWORD PTR [rip+0x60fb]        # 0x140020518
   14001a41d:	mov    rax,QWORD PTR [rbp+0x30]
   14001a421:	add    rdi,0x2
   14001a425:	sub    rax,0x2
   14001a429:	cmp    rdi,rax
   14001a42c:	jne    0x14001a410
   14001a42e:	mov    rax,QWORD PTR [rbp+0x38]
   14001a432:	cmp    QWORD PTR [rbp+0x30],rax
   14001a436:	ja     0x14001a8fd
   14001a43c:	nop    DWORD PTR [rax+0x0]
   14001a440:	mov    rcx,rbp
   14001a443:	call   0x140018270
   14001a448:	mov    edi,eax
   14001a44a:	test   eax,eax
   14001a44c:	je     0x14001a550
   14001a452:	movzx  edx,WORD PTR [rbp+0x58]
   14001a456:	lea    rcx,[rbp+0x10]
   14001a45a:	mov    r12b,0x1
   14001a45d:	call   QWORD PTR [rip+0x60b5]        # 0x140020518
   14001a463:	cmp    edi,0x2
   14001a466:	jne    0x14001a479
   14001a468:	mov    rax,QWORD PTR [rbp+0x30]
   14001a46c:	lea    rcx,[rbp+0x10]
   14001a470:	movzx  edx,WORD PTR [rax]
   14001a473:	call   QWORD PTR [rip+0x609f]        # 0x140020518
   14001a479:	mov    rcx,rbp
   14001a47c:	call   0x1400185d0
   14001a481:	jmp    0x14001a8ef
   14001a486:	mov    rbx,QWORD PTR [rbp+0x30]
   14001a48a:	lea    rcx,[rbp+0x8]
   14001a48e:	sub    rbx,rdi
   14001a491:	sar    rbx,1
   14001a494:	call   QWORD PTR [rip+0x5f86]        # 0x140020420
   14001a49a:	mov    rcx,QWORD PTR [rbp+0x0]
   14001a49e:	sub    rdi,rax
   14001a4a1:	lea    rdx,[rsp+0xe8]
   14001a4a9:	mov    r9d,ebx
   14001a4ac:	sar    rdi,1
   14001a4af:	add    rcx,0x48
   14001a4b3:	lea    r8d,[rdi-0x1]
   14001a4b7:	call   QWORD PTR [rip+0x5fcb]        # 0x140020488
   14001a4bd:	mov    rax,QWORD PTR [rsp+0xe8]
   14001a4c5:	mov    rcx,rbp
   14001a4c8:	mov    QWORD PTR [rbp+0x20],rax
   14001a4cc:	mov    eax,DWORD PTR [rsp+0xf0]
   14001a4d3:	mov    DWORD PTR [rbp+0x28],eax
   14001a4d6:	mov    eax,DWORD PTR [rsp+0xf4]
   14001a4dd:	mov    DWORD PTR [rbp+0x2c],eax
   14001a4e0:	call   0x1400185d0
   14001a4e5:	mov    eax,0x41
   14001a4ea:	jmp    0x14001ad39
   14001a4ef:	cmp    BYTE PTR [rbp+0x92],0x0
   14001a4f6:	jne    0x14001a3e4
   14001a4fc:	mov    edx,0x1
   14001a501:	lea    r8,[rip+0x87d8]        # 0x140022ce0
   14001a508:	lea    rcx,[rsp+0x110]
   14001a510:	mov    DWORD PTR [rbp+0x5c],edx
   14001a513:	lea    rdx,[rip+0x84fe]        # 0x140022a18
   14001a51a:	xor    r9d,r9d
   14001a51d:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14001a525:	call   QWORD PTR [rip+0x5f1d]        # 0x140020448
   14001a52b:	lea    rcx,[rbp+0x18]
   14001a52f:	mov    rdx,rax
   14001a532:	call   QWORD PTR [rip+0x6030]        # 0x140020568
   14001a538:	lea    rcx,[rsp+0x110]
   14001a540:	call   QWORD PTR [rip+0x623a]        # 0x140020780
   14001a546:	mov    eax,0x61
   14001a54b:	jmp    0x14001ad39
   14001a550:	cmp    WORD PTR [rbp+0x58],bx
   14001a554:	je     0x14001a9a3
   14001a55a:	lea    rcx,[rsp+0x88]
   14001a562:	mov    dl,0x5c
   14001a564:	call   QWORD PTR [rip+0x6226]        # 0x140020790
   14001a56a:	movzx  eax,WORD PTR [rax]
   14001a56d:	cmp    WORD PTR [rbp+0x58],ax
   14001a571:	jne    0x14001a8d9
   14001a577:	mov    rcx,rbp
   14001a57a:	call   0x1400185d0
   14001a57f:	movzx  edi,WORD PTR [rbp+0x58]
   14001a583:	cmp    edi,0x2029
   14001a589:	mov    eax,edi
   14001a58b:	jg     0x14001a8c2
   14001a591:	cmp    eax,0x2028
   14001a596:	jge    0x14001a8b8
   14001a59c:	sub    eax,0xa
   14001a59f:	cmp    eax,0x6e
   14001a5a2:	ja     0x14001a8c2
   14001a5a8:	cdqe   
   14001a5aa:	movzx  eax,BYTE PTR [r13+rax*1+0x1ae74]
   14001a5b3:	mov    ecx,DWORD PTR [r13+rax*4+0x1ae38]
   14001a5bb:	add    rcx,r13
   14001a5be:	jmp    rcx
   14001a5c0:	lea    r8,[rsp+0x190]
   14001a5c8:	lea    rdx,[rsp+0x8c]
   14001a5d0:	mov    rcx,rbp
   14001a5d3:	mov    BYTE PTR [rsp+0x190],0x0
   14001a5db:	call   0x140018690
   14001a5e0:	cmp    BYTE PTR [rsp+0x190],0x0
   14001a5e8:	mov    di,WORD PTR [rax]
   14001a5eb:	jne    0x14001a8ca
   14001a5f1:	lea    r8,[rip+0x86c8]        # 0x140022cc0
   14001a5f8:	lea    rdx,[rip+0x8419]        # 0x140022a18
   14001a5ff:	lea    rcx,[rsp+0xe0]
   14001a607:	xor    r9d,r9d
   14001a60a:	mov    DWORD PTR [rbp+0x5c],0x5
   14001a611:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14001a619:	call   QWORD PTR [rip+0x5e29]        # 0x140020448
   14001a61f:	lea    rcx,[rbp+0x18]
   14001a623:	mov    rdx,rax
   14001a626:	call   QWORD PTR [rip+0x5f3c]        # 0x140020568
   14001a62c:	lea    rcx,[rsp+0xe0]
   14001a634:	call   QWORD PTR [rip+0x6146]        # 0x140020780
   14001a63a:	mov    eax,0x61
   14001a63f:	jmp    0x14001ad39
   14001a644:	lea    r8,[rsp+0x190]
   14001a64c:	lea    rdx,[rsp+0x90]
   14001a654:	mov    rcx,rbp
   14001a657:	mov    BYTE PTR [rsp+0x190],0x0
   14001a65f:	call   0x1400187b0
   14001a664:	cmp    BYTE PTR [rsp+0x190],0x0
   14001a66c:	mov    di,WORD PTR [rax]
   14001a66f:	jne    0x14001a8ca
   14001a675:	lea    r8,[rip+0x861c]        # 0x140022c98
   14001a67c:	lea    rdx,[rip+0x8395]        # 0x140022a18
   14001a683:	lea    rcx,[rsp+0x118]
   14001a68b:	xor    r9d,r9d
   14001a68e:	mov    DWORD PTR [rbp+0x5c],0x9
   14001a695:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14001a69d:	call   QWORD PTR [rip+0x5da5]        # 0x140020448
   14001a6a3:	lea    rcx,[rbp+0x18]
   14001a6a7:	mov    rdx,rax
   14001a6aa:	call   QWORD PTR [rip+0x5eb8]        # 0x140020568
   14001a6b0:	lea    rcx,[rsp+0x118]
   14001a6b8:	call   QWORD PTR [rip+0x60c2]        # 0x140020780
   14001a6be:	mov    eax,0x61
   14001a6c3:	jmp    0x14001ad39
   14001a6c8:	lea    rcx,[rsp+0x198]
   14001a6d0:	mov    dl,0x5c
   14001a6d2:	call   QWORD PTR [rip+0x60b8]        # 0x140020790
   14001a6d8:	mov    di,WORD PTR [rsp+0x198]
   14001a6e0:	mov    rcx,rbp
   14001a6e3:	call   0x1400185d0
   14001a6e8:	lea    rcx,[rbp+0x10]
   14001a6ec:	movzx  edx,di
   14001a6ef:	call   QWORD PTR [rip+0x5e23]        # 0x140020518
   14001a6f5:	jmp    0x14001a8ef
   14001a6fa:	lea    rcx,[rsp+0x1a0]
   14001a702:	mov    dl,0x27
   14001a704:	call   QWORD PTR [rip+0x6086]        # 0x140020790
   14001a70a:	mov    di,WORD PTR [rsp+0x1a0]
   14001a712:	mov    rcx,rbp
   14001a715:	call   0x1400185d0
   14001a71a:	lea    rcx,[rbp+0x10]
   14001a71e:	mov    dx,di
   14001a721:	call   QWORD PTR [rip+0x5df1]        # 0x140020518
   14001a727:	jmp    0x14001a8ef
   14001a72c:	lea    rcx,[rsp+0x1a8]
   14001a734:	mov    dl,0x22
   14001a736:	call   QWORD PTR [rip+0x6054]        # 0x140020790
   14001a73c:	mov    di,WORD PTR [rsp+0x1a8]
   14001a744:	mov    rcx,rbp
   14001a747:	call   0x1400185d0
   14001a74c:	lea    rcx,[rbp+0x10]
   14001a750:	mov    dx,di
   14001a753:	call   QWORD PTR [rip+0x5dbf]        # 0x140020518
   14001a759:	jmp    0x14001a8ef
   14001a75e:	lea    rcx,[rsp+0x3a]
   14001a763:	mov    dl,0x8
   14001a765:	call   QWORD PTR [rip+0x6025]        # 0x140020790
   14001a76b:	mov    di,WORD PTR [rsp+0x3a]
   14001a770:	mov    rcx,rbp
   14001a773:	call   0x1400185d0
   14001a778:	lea    rcx,[rbp+0x10]
   14001a77c:	mov    dx,di
   14001a77f:	call   QWORD PTR [rip+0x5d93]        # 0x140020518
   14001a785:	jmp    0x14001a8ef
   14001a78a:	lea    rcx,[rsp+0x34]
   14001a78f:	mov    dl,0xc
   14001a791:	call   QWORD PTR [rip+0x5ff9]        # 0x140020790
   14001a797:	mov    di,WORD PTR [rsp+0x34]
   14001a79c:	mov    rcx,rbp
   14001a79f:	call   0x1400185d0
   14001a7a4:	lea    rcx,[rbp+0x10]
   14001a7a8:	mov    dx,di
   14001a7ab:	call   QWORD PTR [rip+0x5d67]        # 0x140020518
   14001a7b1:	jmp    0x14001a8ef
   14001a7b6:	lea    rcx,[rsp+0x38]
   14001a7bb:	mov    dl,0xa
   14001a7bd:	call   QWORD PTR [rip+0x5fcd]        # 0x140020790
   14001a7c3:	mov    di,WORD PTR [rsp+0x38]
   14001a7c8:	mov    rcx,rbp
   14001a7cb:	call   0x1400185d0
   14001a7d0:	lea    rcx,[rbp+0x10]
   14001a7d4:	mov    dx,di
   14001a7d7:	call   QWORD PTR [rip+0x5d3b]        # 0x140020518
   14001a7dd:	jmp    0x14001a8ef
   14001a7e2:	lea    rcx,[rsp+0x30]
   14001a7e7:	mov    dl,0xd
   14001a7e9:	call   QWORD PTR [rip+0x5fa1]        # 0x140020790
   14001a7ef:	mov    di,WORD PTR [rsp+0x30]
   14001a7f4:	mov    rcx,rbp
   14001a7f7:	call   0x1400185d0
   14001a7fc:	lea    rcx,[rbp+0x10]
   14001a800:	mov    dx,di
   14001a803:	call   QWORD PTR [rip+0x5d0f]        # 0x140020518
   14001a809:	jmp    0x14001a8ef
   14001a80e:	lea    rcx,[rsp+0x32]
   14001a813:	mov    dl,0x9
   14001a815:	call   QWORD PTR [rip+0x5f75]        # 0x140020790
   14001a81b:	mov    di,WORD PTR [rsp+0x32]
   14001a820:	mov    rcx,rbp
   14001a823:	call   0x1400185d0
   14001a828:	lea    rcx,[rbp+0x10]
   14001a82c:	mov    dx,di
   14001a82f:	call   QWORD PTR [rip+0x5ce3]        # 0x140020518
   14001a835:	jmp    0x14001a8ef
   14001a83a:	lea    rcx,[rsp+0x36]
   14001a83f:	mov    dl,0xb
   14001a841:	call   QWORD PTR [rip+0x5f49]        # 0x140020790
   14001a847:	mov    di,WORD PTR [rsp+0x36]
   14001a84c:	mov    rcx,rbp
   14001a84f:	call   0x1400185d0
   14001a854:	lea    rcx,[rbp+0x10]
   14001a858:	mov    dx,di
   14001a85b:	call   QWORD PTR [rip+0x5cb7]        # 0x140020518
   14001a861:	jmp    0x14001a8ef
   14001a866:	mov    rax,QWORD PTR [rbp+0x30]
   14001a86a:	movzx  ecx,WORD PTR [rax]
   14001a86d:	cmp    ecx,0x39
   14001a870:	ja     0x14001a87b
   14001a872:	cmp    ecx,0x30
   14001a875:	jae    0x14001a950
   14001a87b:	cmp    ecx,0x7f
   14001a87e:	jbe    0x14001a88f
   14001a880:	call   QWORD PTR [rip+0x5c22]        # 0x1400204a8
   14001a886:	cmp    eax,0x3
   14001a889:	je     0x14001a950
   14001a88f:	mov    rcx,rbp
   14001a892:	call   0x1400185d0
   14001a897:	lea    rcx,[rsp+0x3c]
   14001a89c:	xor    edx,edx
   14001a89e:	call   QWORD PTR [rip+0x5eec]        # 0x140020790
   14001a8a4:	mov    di,WORD PTR [rsp+0x3c]
   14001a8a9:	lea    rcx,[rbp+0x10]
   14001a8ad:	mov    dx,di
   14001a8b0:	call   QWORD PTR [rip+0x5c62]        # 0x140020518
   14001a8b6:	jmp    0x14001a8ef
   14001a8b8:	mov    rcx,rbp
   14001a8bb:	call   0x1400185d0
   14001a8c0:	jmp    0x14001a8ef
   14001a8c2:	mov    rcx,rbp
   14001a8c5:	call   0x1400185d0
   14001a8ca:	lea    rcx,[rbp+0x10]
   14001a8ce:	mov    dx,di
   14001a8d1:	call   QWORD PTR [rip+0x5c41]        # 0x140020518
   14001a8d7:	jmp    0x14001a8ef
   14001a8d9:	movzx  edx,WORD PTR [rbp+0x58]
   14001a8dd:	lea    rcx,[rbp+0x10]
   14001a8e1:	call   QWORD PTR [rip+0x5c31]        # 0x140020518
   14001a8e7:	mov    rcx,rbp
   14001a8ea:	call   0x1400185d0
   14001a8ef:	mov    rax,QWORD PTR [rbp+0x38]
   14001a8f3:	cmp    QWORD PTR [rbp+0x30],rax
   14001a8f7:	jbe    0x14001a440
   14001a8fd:	lea    r8,[rip+0x8374]        # 0x140022c78
   14001a904:	lea    rdx,[rip+0x810d]        # 0x140022a18
   14001a90b:	lea    rcx,[rsp+0x128]
   14001a913:	xor    r9d,r9d
   14001a916:	mov    DWORD PTR [rbp+0x5c],0x3
   14001a91d:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14001a925:	call   QWORD PTR [rip+0x5b1d]        # 0x140020448
   14001a92b:	lea    rcx,[rbp+0x18]
   14001a92f:	mov    rdx,rax
   14001a932:	call   QWORD PTR [rip+0x5c30]        # 0x140020568
   14001a938:	lea    rcx,[rsp+0x128]
   14001a940:	call   QWORD PTR [rip+0x5e3a]        # 0x140020780
   14001a946:	mov    eax,0x61
   14001a94b:	jmp    0x14001ad39
   14001a950:	lea    r8,[rip+0x82f9]        # 0x140022c50
   14001a957:	lea    rdx,[rip+0x80ba]        # 0x140022a18
   14001a95e:	lea    rcx,[rsp+0xf8]
   14001a966:	xor    r9d,r9d
   14001a969:	mov    DWORD PTR [rbp+0x5c],0x4
   14001a970:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14001a978:	call   QWORD PTR [rip+0x5aca]        # 0x140020448
   14001a97e:	lea    rcx,[rbp+0x18]
   14001a982:	mov    rdx,rax
   14001a985:	call   QWORD PTR [rip+0x5bdd]        # 0x140020568
   14001a98b:	lea    rcx,[rsp+0xf8]
   14001a993:	call   QWORD PTR [rip+0x5de7]        # 0x140020780
   14001a999:	mov    eax,0x61
   14001a99e:	jmp    0x14001ad39
   14001a9a3:	mov    rcx,rbp
   14001a9a6:	call   0x1400185d0
   14001a9ab:	mov    rcx,QWORD PTR [rbp+0x0]
   14001a9af:	test   rcx,rcx
   14001a9b2:	je     0x14001a9d8
   14001a9b4:	lea    r8,[rbp+0x10]
   14001a9b8:	lea    rdx,[rsp+0x130]
   14001a9c0:	call   0x140016b40
   14001a9c5:	mov    rcx,QWORD PTR [rax]
   14001a9c8:	mov    QWORD PTR [rbp+0x20],rcx
   14001a9cc:	mov    ecx,DWORD PTR [rax+0x8]
   14001a9cf:	mov    DWORD PTR [rbp+0x28],ecx
   14001a9d2:	mov    eax,DWORD PTR [rax+0xc]
   14001a9d5:	mov    DWORD PTR [rbp+0x2c],eax
   14001a9d8:	mov    eax,0x41
   14001a9dd:	mov    ecx,0x57
   14001a9e2:	test   r12b,r12b
   14001a9e5:	cmovne eax,ecx
   14001a9e8:	jmp    0x14001ad39
   14001a9ed:	movzx  edx,bx
   14001a9f0:	mov    rcx,rbp
   14001a9f3:	call   0x140018c80
   14001a9f8:	jmp    0x14001ad39
   14001a9fd:	lea    rcx,[rsp+0x94]
   14001aa05:	mov    dl,0x5c
   14001aa07:	xor    sil,sil
   14001aa0a:	call   QWORD PTR [rip+0x5d80]        # 0x140020790
   14001aa10:	cmp    bx,WORD PTR [rax]
   14001aa13:	jne    0x14001aab9
   14001aa19:	lea    rcx,[rsp+0x98]
   14001aa21:	mov    dl,0x75
   14001aa23:	call   QWORD PTR [rip+0x5d67]        # 0x140020790
   14001aa29:	movzx  eax,WORD PTR [rax]
   14001aa2c:	cmp    WORD PTR [rbp+0x58],ax
   14001aa30:	jne    0x14001aab9
   14001aa36:	lea    r8,[rsp+0x190]
   14001aa3e:	lea    rdx,[rsp+0x9c]
   14001aa46:	mov    rcx,rbp
   14001aa49:	mov    sil,0x1
   14001aa4c:	mov    BYTE PTR [rsp+0x190],r12b
   14001aa54:	call   0x140018690
   14001aa59:	movzx  ebx,WORD PTR [rax]
   14001aa5c:	cmp    BYTE PTR [rsp+0x190],r12b
   14001aa64:	jne    0x14001aab9
   14001aa66:	lea    r8,[rip+0x8253]        # 0x140022cc0
   14001aa6d:	lea    rdx,[rip+0x7fa4]        # 0x140022a18
   14001aa74:	lea    rcx,[rsp+0xd0]
   14001aa7c:	xor    r9d,r9d
   14001aa7f:	mov    DWORD PTR [rbp+0x5c],0x5
   14001aa86:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14001aa8e:	call   QWORD PTR [rip+0x59b4]        # 0x140020448
   14001aa94:	lea    rcx,[rbp+0x18]
   14001aa98:	mov    rdx,rax
   14001aa9b:	call   QWORD PTR [rip+0x5ac7]        # 0x140020568
   14001aaa1:	lea    rcx,[rsp+0xd0]
   14001aaa9:	call   QWORD PTR [rip+0x5cd1]        # 0x140020780
   14001aaaf:	mov    eax,0x61
   14001aab4:	jmp    0x14001ad39
   14001aab9:	cmp    bx,0x61
   14001aabd:	jb     0x14001aac5
   14001aabf:	cmp    bx,0x7a
   14001aac3:	jbe    0x14001aafd
   14001aac5:	cmp    bx,0x41
   14001aac9:	jb     0x14001aad1
   14001aacb:	cmp    bx,0x5a
   14001aacf:	jbe    0x14001aafd
   14001aad1:	cmp    bx,0x24
   14001aad5:	je     0x14001aafd
   14001aad7:	cmp    bx,0x5f
   14001aadb:	je     0x14001aafd
   14001aadd:	movzx  ecx,bx
   14001aae0:	call   QWORD PTR [rip+0x59c2]        # 0x1400204a8
   14001aae6:	cmp    eax,0x4
   14001aae9:	je     0x14001aafd
   14001aaeb:	cmp    eax,0xd
   14001aaee:	jle    0x14001ac68
   14001aaf4:	cmp    eax,0x12
   14001aaf7:	jg     0x14001ac68
   14001aafd:	test   sil,sil
   14001ab00:	je     0x14001ab22
   14001ab02:	lea    rcx,[rbp+0x10]
   14001ab06:	xor    edx,edx
   14001ab08:	call   QWORD PTR [rip+0x59b2]        # 0x1400204c0
   14001ab0e:	lea    rcx,[rbp+0x10]
   14001ab12:	movzx  edx,bx
   14001ab15:	call   QWORD PTR [rip+0x59fd]        # 0x140020518
   14001ab1b:	mov    BYTE PTR [rbp+0x8c],0x1
   14001ab22:	movzx  ebx,WORD PTR [rbp+0x58]
   14001ab26:	lea    rcx,[rsp+0xa0]
   14001ab2e:	mov    dl,0x5c
   14001ab30:	call   QWORD PTR [rip+0x5c5a]        # 0x140020790
   14001ab36:	movzx  eax,WORD PTR [rax]
   14001ab39:	cmp    WORD PTR [rbp+0x58],ax
   14001ab3d:	jne    0x14001abf4
   14001ab43:	lea    rcx,[rsp+0xa4]
   14001ab4b:	mov    dl,0x75
   14001ab4d:	call   QWORD PTR [rip+0x5c3d]        # 0x140020790
   14001ab53:	mov    rcx,QWORD PTR [rbp+0x30]
   14001ab57:	movzx  eax,WORD PTR [rax]
   14001ab5a:	cmp    WORD PTR [rcx],ax
   14001ab5d:	jne    0x14001abf4
   14001ab63:	test   sil,sil
   14001ab66:	jne    0x14001ab9d
   14001ab68:	lea    rbx,[rbp+0x10]
   14001ab6c:	xor    edx,edx
   14001ab6e:	mov    sil,0x1
   14001ab71:	mov    rcx,rbx
   14001ab74:	call   QWORD PTR [rip+0x5946]        # 0x1400204c0
   14001ab7a:	mov    r8,QWORD PTR [rbp+0x50]
   14001ab7e:	mov    r9,QWORD PTR [rbp+0x30]
   14001ab82:	sub    r9,r8
   14001ab85:	xor    edx,edx
   14001ab87:	mov    rcx,rbx
   14001ab8a:	sar    r9,1
   14001ab8d:	dec    r9d
   14001ab90:	call   QWORD PTR [rip+0x593a]        # 0x1400204d0
   14001ab96:	mov    BYTE PTR [rbp+0x8c],sil
   14001ab9d:	mov    rcx,rbp
   14001aba0:	call   0x1400185d0
   14001aba5:	lea    r8,[rsp+0x190]
   14001abad:	lea    rdx,[rsp+0xa8]
   14001abb5:	mov    rcx,rbp
   14001abb8:	mov    BYTE PTR [rsp+0x190],r12b
   14001abc0:	call   0x140018690
   14001abc5:	movzx  ebx,WORD PTR [rax]
   14001abc8:	cmp    BYTE PTR [rsp+0x190],r12b
   14001abd0:	je     0x14001ac1f
   14001abd2:	movzx  ecx,bx
   14001abd5:	call   0x1400181a0
   14001abda:	test   al,al
   14001abdc:	je     0x14001ab22
   14001abe2:	lea    rcx,[rbp+0x10]
   14001abe6:	movzx  edx,bx
   14001abe9:	call   QWORD PTR [rip+0x5929]        # 0x140020518
   14001abef:	jmp    0x14001ab22
   14001abf4:	movzx  ecx,bx
   14001abf7:	call   0x1400181a0
   14001abfc:	test   al,al
   14001abfe:	je     0x14001ac72
   14001ac00:	test   sil,sil
   14001ac03:	je     0x14001ac12
   14001ac05:	lea    rcx,[rbp+0x10]
   14001ac09:	movzx  edx,bx
   14001ac0c:	call   QWORD PTR [rip+0x5906]        # 0x140020518
   14001ac12:	mov    rcx,rbp
   14001ac15:	call   0x1400185d0
   14001ac1a:	jmp    0x14001ab22
   14001ac1f:	lea    r8,[rip+0x809a]        # 0x140022cc0
   14001ac26:	lea    rdx,[rip+0x7deb]        # 0x140022a18
   14001ac2d:	lea    rcx,[rsp+0xd8]
   14001ac35:	xor    r9d,r9d
   14001ac38:	mov    DWORD PTR [rbp+0x5c],0x5
   14001ac3f:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14001ac47:	call   QWORD PTR [rip+0x57fb]        # 0x140020448
   14001ac4d:	lea    rcx,[rbp+0x18]
   14001ac51:	mov    rdx,rax
   14001ac54:	call   QWORD PTR [rip+0x590e]        # 0x140020568
   14001ac5a:	lea    rcx,[rsp+0xd8]
   14001ac62:	call   QWORD PTR [rip+0x5b18]        # 0x140020780
   14001ac68:	mov    eax,0x61
   14001ac6d:	jmp    0x14001ad39
   14001ac72:	mov    rdx,QWORD PTR [rbp+0x50]
   14001ac76:	mov    rdi,QWORD PTR [rbp+0x30]
   14001ac7a:	mov    ebx,0x1d
   14001ac7f:	sub    rdi,rdx
   14001ac82:	sar    rdi,1
   14001ac85:	dec    edi
   14001ac87:	mov    DWORD PTR [rbp+0x84],edi
   14001ac8d:	test   sil,sil
   14001ac90:	jne    0x14001aca7
   14001ac92:	movzx  r9d,BYTE PTR [rbp+0x92]
   14001ac9a:	mov    r8d,edi
   14001ac9d:	mov    rcx,rbp
   14001aca0:	call   0x140017ca0
   14001aca5:	mov    ebx,eax
   14001aca7:	mov    rcx,QWORD PTR [rbp+0x0]
   14001acab:	test   rcx,rcx
   14001acae:	je     0x14001ad33
   14001acb4:	cmp    ebx,0x1d
   14001acb7:	jne    0x14001ace6
   14001acb9:	test   sil,sil
   14001acbc:	je     0x14001ace6
   14001acbe:	lea    r8,[rbp+0x10]
   14001acc2:	lea    rdx,[rsp+0x140]
   14001acca:	call   0x140016b40
   14001accf:	mov    rcx,QWORD PTR [rax]
   14001acd2:	mov    QWORD PTR [rbp+0x20],rcx
   14001acd6:	mov    ecx,DWORD PTR [rax+0x8]
   14001acd9:	mov    DWORD PTR [rbp+0x28],ecx
   14001acdc:	mov    eax,DWORD PTR [rax+0xc]
   14001acdf:	mov    DWORD PTR [rbp+0x2c],eax
   14001ace2:	mov    eax,ebx
   14001ace4:	jmp    0x14001ad39
   14001ace6:	lea    rcx,[rbp+0x8]
   14001acea:	call   QWORD PTR [rip+0x5730]        # 0x140020420
   14001acf0:	mov    r8,QWORD PTR [rbp+0x50]
   14001acf4:	mov    rcx,QWORD PTR [rbp+0x0]
   14001acf8:	sub    r8,rax
   14001acfb:	lea    rdx,[rsp+0x100]
   14001ad03:	add    rcx,0x48
   14001ad07:	sar    r8,1
   14001ad0a:	mov    r9d,edi
   14001ad0d:	call   QWORD PTR [rip+0x5775]        # 0x140020488
   14001ad13:	mov    rax,QWORD PTR [rsp+0x100]
   14001ad1b:	mov    QWORD PTR [rbp+0x20],rax
   14001ad1f:	mov    eax,DWORD PTR [rsp+0x108]
   14001ad26:	mov    DWORD PTR [rbp+0x28],eax
   14001ad29:	mov    eax,DWORD PTR [rsp+0x10c]
   14001ad30:	mov    DWORD PTR [rbp+0x2c],eax
   14001ad33:	mov    eax,ebx
   14001ad35:	jmp    0x14001ad39
   14001ad37:	xor    eax,eax
   14001ad39:	mov    rsi,QWORD PTR [rsp+0x170]
   14001ad41:	mov    rdi,QWORD PTR [rsp+0x168]
   14001ad49:	mov    rbx,QWORD PTR [rsp+0x178]
   14001ad51:	mov    r12,QWORD PTR [rsp+0x160]
   14001ad59:	mov    r13,QWORD PTR [rsp+0x158]
   14001ad61:	add    rsp,0x180
   14001ad68:	pop    rbp
   14001ad69:	ret    
   14001ad6a:	xchg   ax,ax
   14001ad6c:	xor    ah,BYTE PTR [rbx-0x5c70ffff]
   14001ad72:	add    DWORD PTR [rax],eax
   14001ad74:	add    BYTE PTR [rbx-0x5d59ffff],ah
   14001ad7a:	add    DWORD PTR [rax],eax
   14001ad7c:	pushf  
   14001ad7d:	movabs ds:0xa25d0001a2920001,al
   14001ad86:	add    DWORD PTR [rax],eax
   14001ad88:	shl    DWORD PTR [rcx-0x5e38ffff],1
   14001ad8e:	add    DWORD PTR [rax],eax
   14001ad90:	movabs eax,ds:0x994100019dc20001
   14001ad9a:	add    DWORD PTR [rax],eax
   14001ad9c:	in     eax,dx
   14001ad9d:	test   eax,0x9db80001
   14001ada2:	add    DWORD PTR [rax],eax
   14001ada4:	(bad)  
   14001ada5:	movabs ds:0x9ccd00019d2d0001,al
   14001adae:	add    DWORD PTR [rax],eax
   14001adb0:	call   0x11e01af50
   14001adb5:	fwait
   14001adb6:	add    DWORD PTR [rax],eax
   14001adb8:	(bad)  
   14001adb9:	fwait
   14001adba:	add    DWORD PTR [rax],eax
   14001adbc:	retf   0x19b
   14001adbf:	add    BYTE PTR [rax-0x71fffe65],bl
   14001adc5:	fwait
   14001adc6:	add    DWORD PTR [rax],eax
   14001adc8:	xor    DWORD PTR [rbx-0x64d8ffff],ebx
   14001adce:	add    DWORD PTR [rax],eax
   14001add0:	sbb    eax,0xfd00019b
   14001add5:	test   eax,0x1000001
   14001adda:	sbb    bl,BYTE PTR [rdx]
   14001addc:	add    al,BYTE PTR [rbx]
   14001adde:	add    DWORD PTR [rax*1+0x9080706],eax
   14001ade5:	or     cl,BYTE PTR [rbx]
   14001ade7:	or     al,0xc
   14001ade9:	or     al,0xc
   14001adeb:	or     al,0xc
   14001aded:	or     al,0xc
   14001adef:	or     al,0xc
   14001adf1:	or     eax,0x11100f0e
   14001adf6:	adc    bl,BYTE PTR [rdx]
   14001adf8:	sbb    bl,BYTE PTR [rdx]
   14001adfa:	sbb    bl,BYTE PTR [rdx]
   14001adfc:	sbb    bl,BYTE PTR [rdx]
   14001adfe:	sbb    bl,BYTE PTR [rdx]
   14001ae00:	sbb    bl,BYTE PTR [rdx]
   14001ae02:	sbb    bl,BYTE PTR [rdx]
   14001ae04:	sbb    bl,BYTE PTR [rdx]
   14001ae06:	sbb    bl,BYTE PTR [rdx]
   14001ae08:	sbb    bl,BYTE PTR [rdx]
   14001ae0a:	sbb    bl,BYTE PTR [rdx]
   14001ae0c:	sbb    bl,BYTE PTR [rdx]
   14001ae0e:	sbb    bl,BYTE PTR [rdx]
   14001ae10:	sbb    bl,BYTE PTR [rdx]
   14001ae12:	adc    ebx,DWORD PTR [rdx]
   14001ae14:	adc    al,0x15
   14001ae16:	sbb    bl,BYTE PTR [rdx]
   14001ae18:	sbb    bl,BYTE PTR [rdx]
   14001ae1a:	sbb    bl,BYTE PTR [rdx]
   14001ae1c:	sbb    bl,BYTE PTR [rdx]
   14001ae1e:	sbb    bl,BYTE PTR [rdx]
   14001ae20:	sbb    bl,BYTE PTR [rdx]
   14001ae22:	sbb    bl,BYTE PTR [rdx]
   14001ae24:	sbb    bl,BYTE PTR [rdx]
   14001ae26:	sbb    bl,BYTE PTR [rdx]
   14001ae28:	sbb    bl,BYTE PTR [rdx]
   14001ae2a:	sbb    bl,BYTE PTR [rdx]
   14001ae2c:	sbb    bl,BYTE PTR [rdx]
   14001ae2e:	sbb    bl,BYTE PTR [rdx]
   14001ae30:	sbb    bl,BYTE PTR [rdx]
   14001ae32:	(bad)  
   14001ae33:	(bad)  
   14001ae34:	sbb    BYTE PTR [rcx],bl
   14001ae36:	xchg   ax,ax
   14001ae38:	mov    eax,0x2c0001a8
   14001ae3d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001ae3e:	add    DWORD PTR [rax],eax
   14001ae40:	cli    
   14001ae41:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001ae42:	add    DWORD PTR [rax],eax
   14001ae44:	data16 test al,0x1
   14001ae47:	add    BYTE PTR [rax-0x57],dl
   14001ae4a:	add    DWORD PTR [rax],eax
   14001ae4c:	enter  0x1a6,0x0
   14001ae50:	pop    rsi
   14001ae51:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001ae52:	add    DWORD PTR [rax],eax
   14001ae54:	mov    ah,BYTE PTR [rdi-0x5849ffff]
   14001ae5a:	add    DWORD PTR [rax],eax
   14001ae5c:	loop   0x14001ae05
   14001ae5e:	add    DWORD PTR [rax],eax
   14001ae60:	(bad)  
   14001ae61:	test   al,0x1
   14001ae63:	add    al,al
   14001ae65:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001ae66:	add    DWORD PTR [rax],eax
   14001ae68:	cmp    ch,BYTE PTR [rax-0x59bbffff]
   14001ae6e:	add    DWORD PTR [rax],eax
   14001ae70:	ret    0x1a8
   14001ae73:	add    BYTE PTR [rax],al
   14001ae75:	(bad)  
   14001ae76:	(bad)  
   14001ae77:	add    BYTE PTR [rsi],cl
   14001ae79:	(bad)  
   14001ae7a:	(bad)  
   14001ae7b:	(bad)  
   14001ae7c:	(bad)  
   14001ae7d:	(bad)  
   14001ae7e:	(bad)  
   14001ae7f:	(bad)  
   14001ae80:	(bad)  
   14001ae81:	(bad)  
   14001ae82:	(bad)  
   14001ae83:	(bad)  
   14001ae84:	(bad)  
   14001ae85:	(bad)  
   14001ae86:	(bad)  
   14001ae87:	(bad)  
   14001ae88:	(bad)  
   14001ae89:	(bad)  
   14001ae8a:	(bad)  
   14001ae8b:	(bad)  
   14001ae8c:	add    DWORD PTR [rsi],ecx
   14001ae8e:	(bad)  
   14001ae8f:	(bad)  
   14001ae90:	(bad)  
   14001ae91:	add    cl,BYTE PTR [rsi]
   14001ae93:	(bad)  
   14001ae94:	(bad)  
   14001ae95:	(bad)  
   14001ae96:	(bad)  
   14001ae97:	(bad)  
   14001ae98:	(bad)  
   14001ae99:	(bad)  
   14001ae9a:	add    eax,DWORD PTR [rsp+rax*1]
   14001ae9d:	add    al,0x4
   14001ae9f:	add    al,0x4
   14001aea1:	add    al,0x4
   14001aea3:	add    al,0xe
   14001aea5:	(bad)  
   14001aea6:	(bad)  
   14001aea7:	(bad)  
   14001aea8:	(bad)  
   14001aea9:	(bad)  
   14001aeaa:	(bad)  
   14001aeab:	(bad)  
   14001aeac:	(bad)  
   14001aead:	(bad)  
   14001aeae:	(bad)  
   14001aeaf:	(bad)  
   14001aeb0:	(bad)  
   14001aeb1:	(bad)  
   14001aeb2:	(bad)  
   14001aeb3:	(bad)  
   14001aeb4:	(bad)  
   14001aeb5:	(bad)  
   14001aeb6:	(bad)  
   14001aeb7:	(bad)  
   14001aeb8:	(bad)  
   14001aeb9:	(bad)  
   14001aeba:	(bad)  
   14001aebb:	(bad)  
   14001aebc:	(bad)  
   14001aebd:	(bad)  
   14001aebe:	(bad)  
   14001aebf:	(bad)  
   14001aec0:	(bad)  
   14001aec1:	(bad)  
   14001aec2:	(bad)  
   14001aec3:	(bad)  
   14001aec4:	(bad)  
   14001aec5:	(bad)  
   14001aec6:	add    eax,0xe0e0e0e
   14001aecb:	(bad)  
   14001aecc:	(bad)  
   14001aecd:	(bad)  
   14001aece:	(bad)  
   14001aecf:	(bad)  
   14001aed0:	(bad)  
   14001aed1:	(bad)  
   14001aed2:	(bad)  
   14001aed3:	(bad)  
   14001aed4:	(bad)  
   14001aed5:	(bad)  
   14001aed6:	(bad)  
   14001aed7:	(bad)  
   14001aed8:	or     BYTE PTR [rsi],cl
   14001aeda:	(bad)  
   14001aedb:	(bad)  
   14001aedc:	or     DWORD PTR [rsi],ecx
   14001aede:	or     cl,BYTE PTR [rbx]
   14001aee0:	or     al,0xe
   14001aee2:	or     eax,0xcccccccc
   14001aee7:	int3   
   14001aee8:	int3   
   14001aee9:	int3   
   14001aeea:	int3   
   14001aeeb:	int3   
   14001aeec:	int3   
   14001aeed:	int3   
   14001aeee:	int3   
   14001aeef:	int3   
   14001aef0:	mov    QWORD PTR [rsp+0x8],rbx
   14001aef5:	mov    QWORD PTR [rsp+0x10],rbp
   14001aefa:	mov    QWORD PTR [rsp+0x18],rsi
   14001aeff:	push   rdi
   14001af00:	sub    rsp,0x20
   14001af04:	mov    ebx,DWORD PTR [rcx+0x80]
   14001af0a:	xor    ebp,ebp
   14001af0c:	mov    rdi,rcx
   14001af0f:	mov    QWORD PTR [rcx+0x20],rbp
   14001af13:	mov    DWORD PTR [rcx+0x28],ebp
   14001af16:	mov    DWORD PTR [rcx+0x2c],ebp
   14001af19:	call   0x140019810
   14001af1e:	mov    rdx,QWORD PTR [rdi+0x30]
   14001af22:	mov    BYTE PTR [rdi+0x91],bpl
   14001af29:	sub    rdx,QWORD PTR [rdi+0x50]
   14001af2d:	mov    esi,eax
   14001af2f:	mov    DWORD PTR [rdi+0x80],eax
   14001af35:	sar    rdx,1
   14001af38:	mov    BYTE PTR [rdi+0x8e],bpl
   14001af3f:	dec    edx
   14001af41:	cmp    ebx,0x37
   14001af44:	sete   al
   14001af47:	mov    DWORD PTR [rdi+0x84],edx
   14001af4d:	mov    BYTE PTR [rdi+0x90],al
   14001af53:	lea    eax,[rsi-0x4]
   14001af56:	cmp    eax,0x4a
   14001af59:	ja     0x14001af96
   14001af5b:	lea    rdx,[rip+0xfffffffffffe509e]        # 0x140000000
   14001af62:	cdqe   
   14001af64:	movzx  eax,BYTE PTR [rdx+rax*1+0x1b010]
   14001af6c:	mov    ecx,DWORD PTR [rdx+rax*4+0x1affc]
   14001af73:	add    rcx,rdx
   14001af76:	jmp    rcx
   14001af78:	mov    DWORD PTR [rdi+0x70],0x1
   14001af7f:	mov    DWORD PTR [rdi+0x74],ebp
   14001af82:	jmp    0x14001afa8
   14001af84:	mov    DWORD PTR [rdi+0x70],0x2
   14001af8b:	jmp    0x14001afa8
   14001af8d:	mov    BYTE PTR [rdi+0x8e],0x1
   14001af94:	jmp    0x14001afa8
   14001af96:	mov    ecx,esi
   14001af98:	call   0x140018110
   14001af9d:	test   al,al
   14001af9f:	je     0x14001afa8
   14001afa1:	mov    BYTE PTR [rdi+0x91],0x1
   14001afa8:	mov    ecx,DWORD PTR [rdi+0x70]
   14001afab:	sub    ecx,0x1
   14001afae:	je     0x14001afc6
   14001afb0:	cmp    ecx,0x1
   14001afb3:	jne    0x14001afe4
   14001afb5:	cmp    esi,0xe
   14001afb8:	je     0x14001afe4
   14001afba:	mov    eax,esi
   14001afbc:	cmp    esi,0x10
   14001afbf:	je     0x14001afe6
   14001afc1:	mov    DWORD PTR [rdi+0x70],ebp
   14001afc4:	jmp    0x14001afe6
   14001afc6:	cmp    esi,0x3c
   14001afc9:	jne    0x14001afdc
   14001afcb:	add    DWORD PTR [rdi+0x74],0xffffffff
   14001afcf:	mov    eax,esi
   14001afd1:	jne    0x14001afe6
   14001afd3:	mov    DWORD PTR [rdi+0x70],0x2
   14001afda:	jmp    0x14001afe6
   14001afdc:	cmp    esi,0x24
   14001afdf:	jne    0x14001afe4
   14001afe1:	inc    DWORD PTR [rdi+0x74]
   14001afe4:	mov    eax,esi
   14001afe6:	mov    rbx,QWORD PTR [rsp+0x30]
   14001afeb:	mov    rbp,QWORD PTR [rsp+0x38]
   14001aff0:	mov    rsi,QWORD PTR [rsp+0x40]
   14001aff5:	add    rsp,0x20
   14001aff9:	pop    rdi
   14001affa:	ret    
   14001affb:	nop
   14001affc:	lea    ebp,[rdi-0x505effff]
   14001b002:	add    DWORD PTR [rax],eax
   14001b004:	test   BYTE PTR [rdi-0x5087ffff],ch
   14001b00a:	add    DWORD PTR [rax],eax
   14001b00c:	xchg   esi,eax
   14001b00d:	scas   eax,DWORD PTR es:[rdi]
   14001b00e:	add    DWORD PTR [rax],eax
   14001b010:	add    BYTE PTR [rsp+rax*1],al
   14001b013:	add    DWORD PTR [rax+rax*1],eax
   14001b016:	add    al,0x4
   14001b018:	add    al,0x4
   14001b01a:	add    al,BYTE PTR [rdx+rax*1]
   14001b01d:	add    al,0x4
   14001b01f:	add    al,0x4
   14001b021:	add    eax,DWORD PTR [rsp+rax*1]
   14001b024:	add    al,0x4
   14001b026:	add    al,0x4
   14001b028:	add    al,0x4
   14001b02a:	add    eax,DWORD PTR [rsp+rax*1]
   14001b02d:	add    DWORD PTR [rsp+rax*1],eax
   14001b030:	add    al,0x4
   14001b032:	add    al,0x4
   14001b034:	add    al,0x4
   14001b036:	add    al,0x4
   14001b038:	add    al,0x4
   14001b03a:	add    al,0x4
   14001b03c:	add    al,0x4
   14001b03e:	add    al,0x4
   14001b040:	add    al,0x4
   14001b042:	add    DWORD PTR [rsp+rax*1],eax
   14001b045:	add    al,0x4
   14001b047:	add    BYTE PTR [rcx+rax*1],al
   14001b04a:	add    al,0x4
   14001b04c:	add    al,0x4
   14001b04e:	add    al,0x4
   14001b050:	add    al,0x4
   14001b052:	add    al,0x0
   14001b054:	add    DWORD PTR [rsp+rax*1],eax
   14001b057:	add    al,0x4
   14001b059:	add    eax,DWORD PTR [rbx]
   14001b05b:	int3   
   14001b05c:	int3   
   14001b05d:	int3   
   14001b05e:	int3   
   14001b05f:	int3   
   14001b060:	rex push rbx
   14001b062:	push   rbp
   14001b063:	push   r13
   14001b065:	push   r15
   14001b067:	sub    rsp,0x158
   14001b06e:	xor    r13d,r13d
   14001b071:	mov    rbp,r8
   14001b074:	mov    r15,rdx
   14001b077:	mov    DWORD PTR [rsp+0x180],r13d
   14001b07f:	mov    rbx,rcx
   14001b082:	call   0x14001aef0
   14001b087:	cmp    DWORD PTR [rbx+0x80],0xf
   14001b08e:	je     0x14001b0a0
   14001b090:	mov    al,0x1
   14001b092:	add    rsp,0x158
   14001b099:	pop    r15
   14001b09b:	pop    r13
   14001b09d:	pop    rbp
   14001b09e:	pop    rbx
   14001b09f:	ret    
   14001b0a0:	mov    QWORD PTR [rsp+0x188],rsi
   14001b0a8:	mov    QWORD PTR [rsp+0x148],r12
   14001b0b0:	mov    QWORD PTR [rsp+0x140],r14
   14001b0b8:	lea    r14,[rip+0x7d29]        # 0x140022de8
   14001b0bf:	mov    QWORD PTR [rsp+0x150],rdi
   14001b0c7:	nop    WORD PTR [rax+rax*1+0x0]
   14001b0d0:	mov    r12,QWORD PTR [rbx+0x50]
   14001b0d4:	mov    esi,DWORD PTR [rbx+0x88]
   14001b0da:	mov    rcx,rbx
   14001b0dd:	sub    r12,QWORD PTR [rbx+0x48]
   14001b0e1:	sar    r12,1
   14001b0e4:	inc    r12d
   14001b0e7:	call   0x14001aef0
   14001b0ec:	mov    edx,DWORD PTR [rbx+0x80]
   14001b0f2:	cmp    edx,0x1d
   14001b0f5:	je     0x14001b100
   14001b0f7:	cmp    edx,0x56
   14001b0fa:	jne    0x14001b81d
   14001b100:	cmp    BYTE PTR [rbx+0x8c],0x0
   14001b107:	je     0x14001b11a
   14001b109:	lea    rdx,[rbx+0x10]
   14001b10d:	lea    rcx,[rsp+0x30]
   14001b112:	call   QWORD PTR [rip+0x5680]        # 0x140020798
   14001b118:	jmp    0x14001b155
   14001b11a:	cmp    edx,0x41
   14001b11d:	jne    0x14001b13f
   14001b11f:	mov    r8d,DWORD PTR [rbx+0x84]
   14001b126:	mov    rdx,QWORD PTR [rbx+0x50]
   14001b12a:	lea    rcx,[rsp+0x30]
   14001b12f:	sub    r8d,0x2
   14001b133:	add    rdx,0x2
   14001b137:	call   QWORD PTR [rip+0x5353]        # 0x140020490
   14001b13d:	jmp    0x14001b155
   14001b13f:	mov    r8d,DWORD PTR [rbx+0x84]
   14001b146:	mov    rdx,QWORD PTR [rbx+0x50]
   14001b14a:	lea    rcx,[rsp+0x30]
   14001b14f:	call   QWORD PTR [rip+0x533b]        # 0x140020490
   14001b155:	or     rcx,0xffffffffffffffff
   14001b159:	xor    eax,eax
   14001b15b:	mov    rdi,r14
   14001b15e:	repnz scas al,BYTE PTR es:[rdi]
   14001b160:	mov    QWORD PTR [rsp+0xa8],r14
   14001b168:	lea    rdx,[rsp+0xe0]
   14001b170:	not    rcx
   14001b173:	dec    rcx
   14001b176:	mov    DWORD PTR [rsp+0xa0],ecx
   14001b17d:	lea    rcx,[rsp+0x30]
   14001b182:	movaps xmm0,XMMWORD PTR [rsp+0xa0]
   14001b18a:	movdqa XMMWORD PTR [rsp+0xe0],xmm0
   14001b193:	call   QWORD PTR [rip+0x55df]        # 0x140020778
   14001b199:	test   al,al
   14001b19b:	jne    0x14001b1f0
   14001b19d:	or     rcx,0xffffffffffffffff
   14001b1a1:	lea    rdx,[rip+0x7c38]        # 0x140022de0
   14001b1a8:	xor    eax,eax
   14001b1aa:	mov    rdi,rdx
   14001b1ad:	mov    QWORD PTR [rsp+0x88],rdx
   14001b1b5:	lea    rdx,[rsp+0x100]
   14001b1bd:	repnz scas al,BYTE PTR es:[rdi]
   14001b1bf:	not    rcx
   14001b1c2:	dec    rcx
   14001b1c5:	mov    DWORD PTR [rsp+0x80],ecx
   14001b1cc:	lea    rcx,[rsp+0x30]
   14001b1d1:	movaps xmm0,XMMWORD PTR [rsp+0x80]
   14001b1d9:	movdqa XMMWORD PTR [rsp+0x100],xmm0
   14001b1e2:	call   QWORD PTR [rip+0x5590]        # 0x140020778
   14001b1e8:	test   al,al
   14001b1ea:	je     0x14001b874
   14001b1f0:	or     rcx,0xffffffffffffffff
   14001b1f4:	xor    eax,eax
   14001b1f6:	mov    rdi,r14
   14001b1f9:	repnz scas al,BYTE PTR es:[rdi]
   14001b1fb:	mov    QWORD PTR [rsp+0xc8],r14
   14001b203:	lea    rdx,[rsp+0x120]
   14001b20b:	not    rcx
   14001b20e:	dec    rcx
   14001b211:	mov    DWORD PTR [rsp+0xc0],ecx
   14001b218:	lea    rcx,[rsp+0x30]
   14001b21d:	movaps xmm0,XMMWORD PTR [rsp+0xc0]
   14001b225:	movdqa XMMWORD PTR [rsp+0x120],xmm0
   14001b22e:	call   QWORD PTR [rip+0x5544]        # 0x140020778
   14001b234:	test   al,al
   14001b236:	je     0x14001b32c
   14001b23c:	mov    rcx,rbx
   14001b23f:	call   0x14001aef0
   14001b244:	cmp    eax,0x1d
   14001b247:	jne    0x14001b2fd
   14001b24d:	or     rcx,0xffffffffffffffff
   14001b251:	lea    rdx,[rip+0x7b80]        # 0x140022dd8
   14001b258:	xor    eax,eax
   14001b25a:	mov    rdi,rdx
   14001b25d:	mov    QWORD PTR [rsp+0x98],rdx
   14001b265:	or     r13d,0x1
   14001b269:	repnz scas al,BYTE PTR es:[rdi]
   14001b26b:	not    rcx
   14001b26e:	dec    rcx
   14001b271:	mov    DWORD PTR [rsp+0x90],ecx
   14001b278:	movaps xmm0,XMMWORD PTR [rsp+0x90]
   14001b280:	movdqa XMMWORD PTR [rsp+0xf0],xmm0
   14001b289:	cmp    BYTE PTR [rbx+0x8c],al
   14001b28f:	je     0x14001b2a2
   14001b291:	lea    rdx,[rbx+0x10]
   14001b295:	lea    rcx,[rsp+0x50]
   14001b29a:	call   QWORD PTR [rip+0x54f8]        # 0x140020798
   14001b2a0:	jmp    0x14001b2e1
   14001b2a2:	cmp    DWORD PTR [rbx+0x80],0x41
   14001b2a9:	jne    0x14001b2cb
   14001b2ab:	mov    r8d,DWORD PTR [rbx+0x84]
   14001b2b2:	mov    rdx,QWORD PTR [rbx+0x50]
   14001b2b6:	lea    rcx,[rsp+0x50]
   14001b2bb:	sub    r8d,0x2
   14001b2bf:	add    rdx,0x2
   14001b2c3:	call   QWORD PTR [rip+0x51c7]        # 0x140020490
   14001b2c9:	jmp    0x14001b2e1
   14001b2cb:	mov    r8d,DWORD PTR [rbx+0x84]
   14001b2d2:	mov    rdx,QWORD PTR [rbx+0x50]
   14001b2d6:	lea    rcx,[rsp+0x50]
   14001b2db:	call   QWORD PTR [rip+0x51af]        # 0x140020490
   14001b2e1:	lea    rdx,[rsp+0xf0]
   14001b2e9:	lea    rcx,[rsp+0x50]
   14001b2ee:	call   QWORD PTR [rip+0x5484]        # 0x140020778
   14001b2f4:	test   al,al
   14001b2f6:	je     0x14001b2fd
   14001b2f8:	xor    dil,dil
   14001b2fb:	jmp    0x14001b300
   14001b2fd:	mov    dil,0x1
   14001b300:	test   r13b,0x1
   14001b304:	je     0x14001b315
   14001b306:	lea    rcx,[rsp+0x50]
   14001b30b:	and    r13d,0xfffffffe
   14001b30f:	call   QWORD PTR [rip+0x546b]        # 0x140020780
   14001b315:	test   dil,dil
   14001b318:	jne    0x14001b874
   14001b31e:	mov    rax,QWORD PTR [r15]
   14001b321:	mov    rcx,r15
   14001b324:	call   QWORD PTR [rax+0x8]
   14001b327:	jmp    0x14001b7f5
   14001b32c:	mov    rcx,rbx
   14001b32f:	call   0x14001aef0
   14001b334:	lea    rcx,[rsp+0x38]
   14001b339:	call   QWORD PTR [rip+0x5259]        # 0x140020598
   14001b33f:	lea    rcx,[rsp+0x40]
   14001b344:	call   QWORD PTR [rip+0x524e]        # 0x140020598
   14001b34a:	mov    eax,DWORD PTR [rbx+0x80]
   14001b350:	xor    r14b,r14b
   14001b353:	cmp    eax,0x41
   14001b356:	jne    0x14001b459
   14001b35c:	cmp    BYTE PTR [rbx+0x8c],0x0
   14001b363:	mov    r14b,0x1
   14001b366:	je     0x14001b379
   14001b368:	lea    rdx,[rbx+0x10]
   14001b36c:	lea    rcx,[rsp+0x68]
   14001b371:	call   QWORD PTR [rip+0x5421]        # 0x140020798
   14001b377:	jmp    0x14001b397
   14001b379:	mov    r8d,DWORD PTR [rbx+0x84]
   14001b380:	mov    rdx,QWORD PTR [rbx+0x50]
   14001b384:	lea    rcx,[rsp+0x68]
   14001b389:	sub    r8d,0x2
   14001b38d:	add    rdx,0x2
   14001b391:	call   QWORD PTR [rip+0x50f9]        # 0x140020490
   14001b397:	lea    rdx,[rsp+0x68]
   14001b39c:	lea    rcx,[rsp+0x38]
   14001b3a1:	call   QWORD PTR [rip+0x51c1]        # 0x140020568
   14001b3a7:	lea    rcx,[rsp+0x68]
   14001b3ac:	call   QWORD PTR [rip+0x53ce]        # 0x140020780
   14001b3b2:	or     rcx,0xffffffffffffffff
   14001b3b6:	lea    rdx,[rip+0x7a13]        # 0x140022dd0
   14001b3bd:	mov    rdi,rdx
   14001b3c0:	xor    eax,eax
   14001b3c2:	mov    QWORD PTR [rsp+0xb8],rdx
   14001b3ca:	repnz scas al,BYTE PTR es:[rdi]
   14001b3cc:	lea    r8d,[rax+0x1]
   14001b3d0:	lea    rdx,[rsp+0x110]
   14001b3d8:	not    rcx
   14001b3db:	dec    rcx
   14001b3de:	mov    DWORD PTR [rsp+0xb0],ecx
   14001b3e5:	lea    rcx,[rsp+0x38]
   14001b3ea:	movaps xmm0,XMMWORD PTR [rsp+0xb0]
   14001b3f2:	movdqa XMMWORD PTR [rsp+0x110],xmm0
   14001b3fb:	call   QWORD PTR [rip+0x5187]        # 0x140020588
   14001b401:	test   al,al
   14001b403:	jne    0x14001b5ef
   14001b409:	lea    r8,[rip+0x79a0]        # 0x140022db0
   14001b410:	lea    rdx,[rip+0x7601]        # 0x140022a18
   14001b417:	lea    rcx,[rsp+0x180]
   14001b41f:	xor    r9d,r9d
   14001b422:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14001b42a:	call   QWORD PTR [rip+0x5018]        # 0x140020448
   14001b430:	lea    rcx,[rbp+0x18]
   14001b434:	mov    rdx,rax
   14001b437:	call   QWORD PTR [rip+0x512b]        # 0x140020568
   14001b43d:	lea    rcx,[rsp+0x180]
   14001b445:	call   QWORD PTR [rip+0x5335]        # 0x140020780
   14001b44b:	mov    edx,DWORD PTR [rbx+0x88]
   14001b451:	mov    DWORD PTR [rbp+0xc],edx
   14001b454:	jmp    0x14001b9d3
   14001b459:	cmp    eax,0x1d
   14001b45c:	jne    0x14001b5ef
   14001b462:	mov    edx,DWORD PTR [rbx+0x80]
   14001b468:	lea    rcx,[rip+0x7611]        # 0x140022a80
   14001b46f:	mov    eax,0x1d
   14001b474:	cmp    eax,edx
   14001b476:	je     0x14001b4d3
   14001b478:	mov    eax,DWORD PTR [rcx+0x4]
   14001b47b:	add    rcx,0x4
   14001b47f:	test   eax,eax
   14001b481:	jne    0x14001b474
   14001b483:	lea    r8,[rip+0x790e]        # 0x140022d98
   14001b48a:	lea    rdx,[rip+0x7587]        # 0x140022a18
   14001b491:	lea    rcx,[rsp+0x180]
   14001b499:	xor    r9d,r9d
   14001b49c:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14001b4a4:	call   QWORD PTR [rip+0x4f9e]        # 0x140020448
   14001b4aa:	lea    rcx,[rbp+0x18]
   14001b4ae:	mov    rdx,rax
   14001b4b1:	call   QWORD PTR [rip+0x50b1]        # 0x140020568
   14001b4b7:	lea    rcx,[rsp+0x180]
   14001b4bf:	call   QWORD PTR [rip+0x52bb]        # 0x140020780
   14001b4c5:	mov    edx,DWORD PTR [rbx+0x88]
   14001b4cb:	mov    DWORD PTR [rbp+0xc],edx
   14001b4ce:	jmp    0x14001b9d3
   14001b4d3:	cmp    BYTE PTR [rbx+0x8c],0x0
   14001b4da:	je     0x14001b4ed
   14001b4dc:	lea    rdx,[rbx+0x10]
   14001b4e0:	lea    rcx,[rsp+0x60]
   14001b4e5:	call   QWORD PTR [rip+0x52ad]        # 0x140020798
   14001b4eb:	jmp    0x14001b528
   14001b4ed:	cmp    edx,0x41
   14001b4f0:	jne    0x14001b512
   14001b4f2:	mov    r8d,DWORD PTR [rbx+0x84]
   14001b4f9:	mov    rdx,QWORD PTR [rbx+0x50]
   14001b4fd:	lea    rcx,[rsp+0x60]
   14001b502:	sub    r8d,0x2
   14001b506:	add    rdx,0x2
   14001b50a:	call   QWORD PTR [rip+0x4f80]        # 0x140020490
   14001b510:	jmp    0x14001b528
   14001b512:	mov    r8d,DWORD PTR [rbx+0x84]
   14001b519:	mov    rdx,QWORD PTR [rbx+0x50]
   14001b51d:	lea    rcx,[rsp+0x60]
   14001b522:	call   QWORD PTR [rip+0x4f68]        # 0x140020490
   14001b528:	lea    rdx,[rsp+0x60]
   14001b52d:	lea    rcx,[rsp+0x38]
   14001b532:	call   QWORD PTR [rip+0x5270]        # 0x1400207a8
   14001b538:	lea    rcx,[rsp+0x60]
   14001b53d:	call   QWORD PTR [rip+0x523d]        # 0x140020780
   14001b543:	mov    rcx,rbx
   14001b546:	call   0x14001aef0
   14001b54b:	cmp    DWORD PTR [rbx+0x88],esi
   14001b551:	jne    0x14001b483
   14001b557:	cmp    DWORD PTR [rbx+0x80],0xf
   14001b55e:	jne    0x14001b597
   14001b560:	lea    rcx,[rsp+0x180]
   14001b568:	mov    dl,0x2e
   14001b56a:	call   QWORD PTR [rip+0x5220]        # 0x140020790
   14001b570:	lea    rcx,[rsp+0x38]
   14001b575:	movzx  edx,WORD PTR [rax]
   14001b578:	call   QWORD PTR [rip+0x502a]        # 0x1400205a8
   14001b57e:	mov    rcx,rbx
   14001b581:	call   0x14001aef0
   14001b586:	cmp    DWORD PTR [rbx+0x88],esi
   14001b58c:	je     0x14001b462
   14001b592:	jmp    0x14001b483
   14001b597:	cmp    DWORD PTR [rbx+0x80],0x2f
   14001b59e:	jne    0x14001b824
   14001b5a4:	cmp    BYTE PTR [rbx+0x8c],0x0
   14001b5ab:	je     0x14001b5be
   14001b5ad:	lea    rdx,[rbx+0x10]
   14001b5b1:	lea    rcx,[rsp+0x70]
   14001b5b6:	call   QWORD PTR [rip+0x51dc]        # 0x140020798
   14001b5bc:	jmp    0x14001b5d4
   14001b5be:	mov    r8d,DWORD PTR [rbx+0x84]
   14001b5c5:	mov    rdx,QWORD PTR [rbx+0x50]
   14001b5c9:	lea    rcx,[rsp+0x70]
   14001b5ce:	call   QWORD PTR [rip+0x4ebc]        # 0x140020490
   14001b5d4:	lea    rdx,[rsp+0x70]
   14001b5d9:	lea    rcx,[rsp+0x40]
   14001b5de:	call   QWORD PTR [rip+0x4f84]        # 0x140020568
   14001b5e4:	lea    rcx,[rsp+0x70]
   14001b5e9:	call   QWORD PTR [rip+0x5191]        # 0x140020780
   14001b5ef:	mov    rcx,rbx
   14001b5f2:	call   0x14001aef0
   14001b5f7:	cmp    eax,0x1d
   14001b5fa:	jne    0x14001b6b8
   14001b600:	or     rcx,0xffffffffffffffff
   14001b604:	lea    rdx,[rip+0x7789]        # 0x140022d94
   14001b60b:	xor    eax,eax
   14001b60d:	mov    rdi,rdx
   14001b610:	mov    QWORD PTR [rsp+0xd8],rdx
   14001b618:	or     r13d,0x2
   14001b61c:	repnz scas al,BYTE PTR es:[rdi]
   14001b61e:	not    rcx
   14001b621:	dec    rcx
   14001b624:	mov    DWORD PTR [rsp+0xd0],ecx
   14001b62b:	movaps xmm0,XMMWORD PTR [rsp+0xd0]
   14001b633:	movdqa XMMWORD PTR [rsp+0x130],xmm0
   14001b63c:	cmp    BYTE PTR [rbx+0x8c],al
   14001b642:	je     0x14001b655
   14001b644:	lea    rdx,[rbx+0x10]
   14001b648:	lea    rcx,[rsp+0x58]
   14001b64d:	call   QWORD PTR [rip+0x5145]        # 0x140020798
   14001b653:	jmp    0x14001b694
   14001b655:	cmp    DWORD PTR [rbx+0x80],0x41
   14001b65c:	jne    0x14001b67e
   14001b65e:	mov    r8d,DWORD PTR [rbx+0x84]
   14001b665:	mov    rdx,QWORD PTR [rbx+0x50]
   14001b669:	lea    rcx,[rsp+0x58]
   14001b66e:	sub    r8d,0x2
   14001b672:	add    rdx,0x2
   14001b676:	call   QWORD PTR [rip+0x4e14]        # 0x140020490
   14001b67c:	jmp    0x14001b694
   14001b67e:	mov    r8d,DWORD PTR [rbx+0x84]
   14001b685:	mov    rdx,QWORD PTR [rbx+0x50]
   14001b689:	lea    rcx,[rsp+0x58]
   14001b68e:	call   QWORD PTR [rip+0x4dfc]        # 0x140020490
   14001b694:	lea    rdx,[rsp+0x130]
   14001b69c:	lea    rcx,[rsp+0x58]
   14001b6a1:	call   QWORD PTR [rip+0x50d1]        # 0x140020778
   14001b6a7:	test   al,al
   14001b6a9:	je     0x14001b6b8
   14001b6ab:	cmp    DWORD PTR [rbx+0x88],esi
   14001b6b1:	jne    0x14001b6b8
   14001b6b3:	xor    dil,dil
   14001b6b6:	jmp    0x14001b6bb
   14001b6b8:	mov    dil,0x1
   14001b6bb:	test   r13b,0x2
   14001b6bf:	je     0x14001b6d0
   14001b6c1:	lea    rcx,[rsp+0x58]
   14001b6c6:	and    r13d,0xfffffffd
   14001b6ca:	call   QWORD PTR [rip+0x50b0]        # 0x140020780
   14001b6d0:	test   dil,dil
   14001b6d3:	jne    0x14001ba34
   14001b6d9:	mov    rcx,rbx
   14001b6dc:	call   0x14001aef0
   14001b6e1:	cmp    eax,0x1d
   14001b6e4:	jne    0x14001b93f
   14001b6ea:	cmp    DWORD PTR [rbx+0x88],esi
   14001b6f0:	jne    0x14001b93f
   14001b6f6:	cmp    BYTE PTR [rbx+0x8c],dil
   14001b6fd:	je     0x14001b710
   14001b6ff:	lea    rdx,[rbx+0x10]
   14001b703:	lea    rcx,[rsp+0x48]
   14001b708:	call   QWORD PTR [rip+0x508a]        # 0x140020798
   14001b70e:	jmp    0x14001b74f
   14001b710:	cmp    DWORD PTR [rbx+0x80],0x41
   14001b717:	jne    0x14001b739
   14001b719:	mov    r8d,DWORD PTR [rbx+0x84]
   14001b720:	mov    rdx,QWORD PTR [rbx+0x50]
   14001b724:	lea    rcx,[rsp+0x48]
   14001b729:	sub    r8d,0x2
   14001b72d:	add    rdx,0x2
   14001b731:	call   QWORD PTR [rip+0x4d59]        # 0x140020490
   14001b737:	jmp    0x14001b74f
   14001b739:	mov    r8d,DWORD PTR [rbx+0x84]
   14001b740:	mov    rdx,QWORD PTR [rbx+0x50]
   14001b744:	lea    rcx,[rsp+0x48]
   14001b749:	call   QWORD PTR [rip+0x4d41]        # 0x140020490
   14001b74f:	lea    rdx,[rsp+0x198]
   14001b757:	lea    rcx,[rsp+0x48]
   14001b75c:	xor    r8d,r8d
   14001b75f:	call   QWORD PTR [rip+0x4d7b]        # 0x1400204e0
   14001b765:	movzx  ecx,WORD PTR [rax]
   14001b768:	cmp    ecx,0x5a
   14001b76b:	ja     0x14001b772
   14001b76d:	cmp    ecx,0x41
   14001b770:	jae    0x14001b78a
   14001b772:	cmp    ecx,0x7f
   14001b775:	jbe    0x14001b8d4
   14001b77b:	call   QWORD PTR [rip+0x4d27]        # 0x1400204a8
   14001b781:	cmp    eax,0xe
   14001b784:	jne    0x14001b8d4
   14001b78a:	test   r14b,r14b
   14001b78d:	je     0x14001b7ac
   14001b78f:	mov    rax,QWORD PTR [r15]
   14001b792:	lea    r8,[rsp+0x48]
   14001b797:	lea    rdx,[rsp+0x38]
   14001b79c:	mov    r9d,esi
   14001b79f:	mov    rcx,r15
   14001b7a2:	mov    DWORD PTR [rsp+0x20],r12d
   14001b7a7:	call   QWORD PTR [rax+0x10]
   14001b7aa:	jmp    0x14001b7cd
   14001b7ac:	mov    rax,QWORD PTR [r15]
   14001b7af:	lea    r9,[rsp+0x48]
   14001b7b4:	lea    r8,[rsp+0x40]
   14001b7b9:	lea    rdx,[rsp+0x38]
   14001b7be:	mov    rcx,r15
   14001b7c1:	mov    DWORD PTR [rsp+0x28],r12d
   14001b7c6:	mov    DWORD PTR [rsp+0x20],esi
   14001b7ca:	call   QWORD PTR [rax+0x18]
   14001b7cd:	lea    rcx,[rsp+0x48]
   14001b7d2:	call   QWORD PTR [rip+0x4fa8]        # 0x140020780
   14001b7d8:	lea    rcx,[rsp+0x40]
   14001b7dd:	call   QWORD PTR [rip+0x4f9d]        # 0x140020780
   14001b7e3:	lea    rcx,[rsp+0x38]
   14001b7e8:	call   QWORD PTR [rip+0x4f92]        # 0x140020780
   14001b7ee:	lea    r14,[rip+0x75f3]        # 0x140022de8
   14001b7f5:	cmp    DWORD PTR [rbx+0x88],esi
   14001b7fb:	jne    0x14001b874
   14001b7fd:	mov    rcx,rbx
   14001b800:	call   0x14001aef0
   14001b805:	lea    rcx,[rsp+0x30]
   14001b80a:	call   QWORD PTR [rip+0x4f70]        # 0x140020780
   14001b810:	cmp    DWORD PTR [rbx+0x80],0xf
   14001b817:	je     0x14001b0d0
   14001b81d:	mov    al,0x1
   14001b81f:	jmp    0x14001ba06
   14001b824:	lea    r8,[rip+0x7545]        # 0x140022d70
   14001b82b:	lea    rdx,[rip+0x71e6]        # 0x140022a18
   14001b832:	lea    rcx,[rsp+0x180]
   14001b83a:	xor    r9d,r9d
   14001b83d:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14001b845:	call   QWORD PTR [rip+0x4bfd]        # 0x140020448
   14001b84b:	lea    rcx,[rbp+0x18]
   14001b84f:	mov    rdx,rax
   14001b852:	call   QWORD PTR [rip+0x4d10]        # 0x140020568
   14001b858:	lea    rcx,[rsp+0x180]
   14001b860:	call   QWORD PTR [rip+0x4f1a]        # 0x140020780
   14001b866:	mov    edx,DWORD PTR [rbx+0x88]
   14001b86c:	mov    DWORD PTR [rbp+0xc],edx
   14001b86f:	jmp    0x14001b9d3
   14001b874:	lea    r8,[rip+0x718d]        # 0x140022a08
   14001b87b:	lea    rdx,[rip+0x7196]        # 0x140022a18
   14001b882:	lea    rcx,[rsp+0x180]
   14001b88a:	xor    r9d,r9d
   14001b88d:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14001b895:	call   QWORD PTR [rip+0x4bad]        # 0x140020448
   14001b89b:	lea    rcx,[rbp+0x18]
   14001b89f:	mov    rdx,rax
   14001b8a2:	call   QWORD PTR [rip+0x4cc0]        # 0x140020568
   14001b8a8:	lea    rcx,[rsp+0x180]
   14001b8b0:	call   QWORD PTR [rip+0x4eca]        # 0x140020780
   14001b8b6:	mov    edx,DWORD PTR [rbx+0x88]
   14001b8bc:	mov    DWORD PTR [rbp+0xc],edx
   14001b8bf:	mov    rax,QWORD PTR [rbx+0x50]
   14001b8c3:	sub    rax,QWORD PTR [rbx+0x48]
   14001b8c7:	sar    rax,1
   14001b8ca:	inc    eax
   14001b8cc:	mov    DWORD PTR [rbp+0x10],eax
   14001b8cf:	jmp    0x14001b9f9
   14001b8d4:	lea    r8,[rip+0x7475]        # 0x140022d50
   14001b8db:	lea    rdx,[rip+0x7136]        # 0x140022a18
   14001b8e2:	lea    rcx,[rsp+0x180]
   14001b8ea:	xor    r9d,r9d
   14001b8ed:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14001b8f5:	call   QWORD PTR [rip+0x4b4d]        # 0x140020448
   14001b8fb:	lea    rcx,[rbp+0x18]
   14001b8ff:	mov    rdx,rax
   14001b902:	call   QWORD PTR [rip+0x4c60]        # 0x140020568
   14001b908:	lea    rcx,[rsp+0x180]
   14001b910:	call   QWORD PTR [rip+0x4e6a]        # 0x140020780
   14001b916:	mov    edx,DWORD PTR [rbx+0x88]
   14001b91c:	lea    rcx,[rsp+0x48]
   14001b921:	mov    DWORD PTR [rbp+0xc],edx
   14001b924:	mov    rax,QWORD PTR [rbx+0x50]
   14001b928:	sub    rax,QWORD PTR [rbx+0x48]
   14001b92c:	sar    rax,1
   14001b92f:	inc    eax
   14001b931:	mov    DWORD PTR [rbp+0x10],eax
   14001b934:	call   QWORD PTR [rip+0x4e46]        # 0x140020780
   14001b93a:	jmp    0x14001b9e3
   14001b93f:	test   r14b,r14b
   14001b942:	je     0x14001b988
   14001b944:	lea    r8,[rip+0x73dd]        # 0x140022d28
   14001b94b:	lea    rdx,[rip+0x70c6]        # 0x140022a18
   14001b952:	lea    rcx,[rsp+0x180]
   14001b95a:	xor    r9d,r9d
   14001b95d:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14001b965:	call   QWORD PTR [rip+0x4add]        # 0x140020448
   14001b96b:	lea    rcx,[rbp+0x18]
   14001b96f:	mov    rdx,rax
   14001b972:	call   QWORD PTR [rip+0x4bf0]        # 0x140020568
   14001b978:	lea    rcx,[rsp+0x180]
   14001b980:	call   QWORD PTR [rip+0x4dfa]        # 0x140020780
   14001b986:	jmp    0x14001b9ca
   14001b988:	lea    r8,[rip+0x7371]        # 0x140022d00
   14001b98f:	lea    rdx,[rip+0x7082]        # 0x140022a18
   14001b996:	lea    rcx,[rsp+0x180]
   14001b99e:	xor    r9d,r9d
   14001b9a1:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14001b9a9:	call   QWORD PTR [rip+0x4a99]        # 0x140020448
   14001b9af:	lea    rcx,[rbp+0x18]
   14001b9b3:	mov    rdx,rax
   14001b9b6:	call   QWORD PTR [rip+0x4bac]        # 0x140020568
   14001b9bc:	lea    rcx,[rsp+0x180]
   14001b9c4:	call   QWORD PTR [rip+0x4db6]        # 0x140020780
   14001b9ca:	mov    eax,DWORD PTR [rbx+0x88]
   14001b9d0:	mov    DWORD PTR [rbp+0xc],eax
   14001b9d3:	mov    rax,QWORD PTR [rbx+0x50]
   14001b9d7:	sub    rax,QWORD PTR [rbx+0x48]
   14001b9db:	sar    rax,1
   14001b9de:	inc    eax
   14001b9e0:	mov    DWORD PTR [rbp+0x10],eax
   14001b9e3:	lea    rcx,[rsp+0x40]
   14001b9e8:	call   QWORD PTR [rip+0x4d92]        # 0x140020780
   14001b9ee:	lea    rcx,[rsp+0x38]
   14001b9f3:	call   QWORD PTR [rip+0x4d87]        # 0x140020780
   14001b9f9:	lea    rcx,[rsp+0x30]
   14001b9fe:	call   QWORD PTR [rip+0x4d7c]        # 0x140020780
   14001ba04:	xor    al,al
   14001ba06:	mov    rdi,QWORD PTR [rsp+0x150]
   14001ba0e:	mov    r12,QWORD PTR [rsp+0x148]
   14001ba16:	mov    rsi,QWORD PTR [rsp+0x188]
   14001ba1e:	mov    r14,QWORD PTR [rsp+0x140]
   14001ba26:	add    rsp,0x158
   14001ba2d:	pop    r15
   14001ba2f:	pop    r13
   14001ba31:	pop    rbp
   14001ba32:	pop    rbx
   14001ba33:	ret    
   14001ba34:	test   r14b,r14b
   14001ba37:	je     0x14001ba7d
   14001ba39:	lea    r8,[rip+0x72e8]        # 0x140022d28
   14001ba40:	lea    rdx,[rip+0x6fd1]        # 0x140022a18
   14001ba47:	lea    rcx,[rsp+0x180]
   14001ba4f:	xor    r9d,r9d
   14001ba52:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14001ba5a:	call   QWORD PTR [rip+0x49e8]        # 0x140020448
   14001ba60:	lea    rcx,[rbp+0x18]
   14001ba64:	mov    rdx,rax
   14001ba67:	call   QWORD PTR [rip+0x4afb]        # 0x140020568
   14001ba6d:	lea    rcx,[rsp+0x180]
   14001ba75:	call   QWORD PTR [rip+0x4d05]        # 0x140020780
   14001ba7b:	jmp    0x14001babf
   14001ba7d:	lea    r8,[rip+0x727c]        # 0x140022d00
   14001ba84:	lea    rdx,[rip+0x6f8d]        # 0x140022a18
   14001ba8b:	lea    rcx,[rsp+0x180]
   14001ba93:	xor    r9d,r9d
   14001ba96:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14001ba9e:	call   QWORD PTR [rip+0x49a4]        # 0x140020448
   14001baa4:	lea    rcx,[rbp+0x18]
   14001baa8:	mov    rdx,rax
   14001baab:	call   QWORD PTR [rip+0x4ab7]        # 0x140020568
   14001bab1:	lea    rcx,[rsp+0x180]
   14001bab9:	call   QWORD PTR [rip+0x4cc1]        # 0x140020780
   14001babf:	mov    eax,DWORD PTR [rbx+0x88]
   14001bac5:	cmp    eax,esi
   14001bac7:	je     0x14001b9d0
   14001bacd:	mov    DWORD PTR [rbp+0xc],esi
   14001bad0:	mov    DWORD PTR [rbp+0x10],r12d
   14001bad4:	jmp    0x14001b9e3
   14001bad9:	int3   
   14001bada:	int3   
   14001badb:	int3   
   14001badc:	int3   
   14001badd:	int3   
   14001bade:	int3   
   14001badf:	int3   
   14001bae0:	xor    eax,eax
   14001bae2:	ret    
   14001bae3:	int3   
   14001bae4:	int3   
   14001bae5:	int3   
   14001bae6:	int3   
   14001bae7:	int3   
   14001bae8:	int3   
   14001bae9:	int3   
   14001baea:	int3   
   14001baeb:	int3   
   14001baec:	int3   
   14001baed:	int3   
   14001baee:	int3   
   14001baef:	int3   
   14001baf0:	mov    rax,rcx
   14001baf3:	ret    
   14001baf4:	int3   
   14001baf5:	int3   
   14001baf6:	int3   
   14001baf7:	int3   
   14001baf8:	int3   
   14001baf9:	int3   
   14001bafa:	int3   
   14001bafb:	int3   
   14001bafc:	int3   
   14001bafd:	int3   
   14001bafe:	int3   
   14001baff:	int3   
   14001bb00:	mov    QWORD PTR [rsp+0x10],rbx
   14001bb05:	push   rsi
   14001bb06:	sub    rsp,0x20
   14001bb0a:	mov    rax,QWORD PTR [rdx]
   14001bb0d:	mov    rbx,rdx
   14001bb10:	mov    rsi,rcx
   14001bb13:	mov    rdx,rcx
   14001bb16:	mov    rcx,rbx
   14001bb19:	call   QWORD PTR [rax+0x1f8]
   14001bb1f:	test   al,al
   14001bb21:	je     0x14001bb5e
   14001bb23:	mov    QWORD PTR [rsp+0x30],rdi
   14001bb28:	mov    rdi,QWORD PTR [rsi+0x10]
   14001bb2c:	test   rdi,rdi
   14001bb2f:	je     0x14001bb59
   14001bb31:	mov    rax,QWORD PTR [rbx]
   14001bb34:	mov    rdx,rdi
   14001bb37:	mov    rcx,rbx
   14001bb3a:	call   QWORD PTR [rax+0x8]
   14001bb3d:	test   al,al
   14001bb3f:	je     0x14001bb4d
   14001bb41:	mov    rax,QWORD PTR [rdi]
   14001bb44:	mov    rdx,rbx
   14001bb47:	mov    rcx,rdi
   14001bb4a:	call   QWORD PTR [rax+0x28]
   14001bb4d:	mov    rax,QWORD PTR [rbx]
   14001bb50:	mov    rdx,rdi
   14001bb53:	mov    rcx,rbx
   14001bb56:	call   QWORD PTR [rax+0x10]
   14001bb59:	mov    rdi,QWORD PTR [rsp+0x30]
   14001bb5e:	mov    rax,QWORD PTR [rbx]
   14001bb61:	mov    rdx,rsi
   14001bb64:	mov    rcx,rbx
   14001bb67:	mov    rbx,QWORD PTR [rsp+0x38]
   14001bb6c:	add    rsp,0x20
   14001bb70:	pop    rsi
   14001bb71:	rex.W jmp QWORD PTR [rax+0x4d8]
   14001bb78:	int3   
   14001bb79:	int3   
   14001bb7a:	int3   
   14001bb7b:	int3   
   14001bb7c:	int3   
   14001bb7d:	int3   
   14001bb7e:	int3   
   14001bb7f:	int3   
   14001bb80:	mov    QWORD PTR [rsp+0x8],rbx
   14001bb85:	push   rdi
   14001bb86:	sub    rsp,0x20
   14001bb8a:	mov    rax,QWORD PTR [rdx]
   14001bb8d:	mov    rdi,rdx
   14001bb90:	mov    rbx,rcx
   14001bb93:	mov    rdx,rcx
   14001bb96:	mov    rcx,rdi
   14001bb99:	call   QWORD PTR [rax+0x270]
   14001bb9f:	mov    r11,QWORD PTR [rdi]
   14001bba2:	mov    rdx,rbx
   14001bba5:	mov    rcx,rdi
   14001bba8:	mov    rbx,QWORD PTR [rsp+0x30]
   14001bbad:	add    rsp,0x20
   14001bbb1:	pop    rdi
   14001bbb2:	rex.WB jmp QWORD PTR [r11+0x550]
   14001bbb9:	int3   
   14001bbba:	int3   
   14001bbbb:	int3   
   14001bbbc:	int3   
   14001bbbd:	int3   
   14001bbbe:	int3   
   14001bbbf:	int3   
   14001bbc0:	mov    QWORD PTR [rsp+0x8],rbx
   14001bbc5:	push   rdi
   14001bbc6:	sub    rsp,0x20
   14001bbca:	mov    rax,QWORD PTR [rdx]
   14001bbcd:	mov    rdi,rdx
   14001bbd0:	mov    rbx,rcx
   14001bbd3:	mov    rdx,rcx
   14001bbd6:	mov    rcx,rdi
   14001bbd9:	call   QWORD PTR [rax+0x268]
   14001bbdf:	mov    r11,QWORD PTR [rdi]
   14001bbe2:	mov    rdx,rbx
   14001bbe5:	mov    rcx,rdi
   14001bbe8:	mov    rbx,QWORD PTR [rsp+0x30]
   14001bbed:	add    rsp,0x20
   14001bbf1:	pop    rdi
   14001bbf2:	rex.WB jmp QWORD PTR [r11+0x548]
   14001bbf9:	int3   
   14001bbfa:	int3   
   14001bbfb:	int3   
   14001bbfc:	int3   
   14001bbfd:	int3   
   14001bbfe:	int3   
   14001bbff:	int3   
   14001bc00:	mov    QWORD PTR [rsp+0x8],rbx
   14001bc05:	push   rdi
   14001bc06:	sub    rsp,0x20
   14001bc0a:	mov    rax,QWORD PTR [rdx]
   14001bc0d:	mov    rdi,rdx
   14001bc10:	mov    rbx,rcx
   14001bc13:	mov    rdx,rcx
   14001bc16:	mov    rcx,rdi
   14001bc19:	call   QWORD PTR [rax+0x260]
   14001bc1f:	mov    r11,QWORD PTR [rdi]
   14001bc22:	mov    rdx,rbx
   14001bc25:	mov    rcx,rdi
   14001bc28:	mov    rbx,QWORD PTR [rsp+0x30]
   14001bc2d:	add    rsp,0x20
   14001bc31:	pop    rdi
   14001bc32:	rex.WB jmp QWORD PTR [r11+0x540]
   14001bc39:	int3   
   14001bc3a:	int3   
   14001bc3b:	int3   
   14001bc3c:	int3   
   14001bc3d:	int3   
   14001bc3e:	int3   
   14001bc3f:	int3   
   14001bc40:	mov    QWORD PTR [rsp+0x8],rbx
   14001bc45:	push   rdi
   14001bc46:	sub    rsp,0x20
   14001bc4a:	mov    rax,QWORD PTR [rdx]
   14001bc4d:	mov    rdi,rdx
   14001bc50:	mov    rbx,rcx
   14001bc53:	mov    rdx,rcx
   14001bc56:	mov    rcx,rdi
   14001bc59:	call   QWORD PTR [rax+0x258]
   14001bc5f:	mov    r11,QWORD PTR [rdi]
   14001bc62:	mov    rdx,rbx
   14001bc65:	mov    rcx,rdi
   14001bc68:	mov    rbx,QWORD PTR [rsp+0x30]
   14001bc6d:	add    rsp,0x20
   14001bc71:	pop    rdi
   14001bc72:	rex.WB jmp QWORD PTR [r11+0x538]
   14001bc79:	int3   
   14001bc7a:	int3   
   14001bc7b:	int3   
   14001bc7c:	int3   
   14001bc7d:	int3   
   14001bc7e:	int3   
   14001bc7f:	int3   
   14001bc80:	mov    QWORD PTR [rsp+0x8],rbx
   14001bc85:	push   rdi
   14001bc86:	sub    rsp,0x20
   14001bc8a:	mov    rax,QWORD PTR [rdx]
   14001bc8d:	mov    rdi,rdx
   14001bc90:	mov    rbx,rcx
   14001bc93:	mov    rdx,rcx
   14001bc96:	mov    rcx,rdi
   14001bc99:	call   QWORD PTR [rax+0x250]
   14001bc9f:	mov    r11,QWORD PTR [rdi]
   14001bca2:	mov    rdx,rbx
   14001bca5:	mov    rcx,rdi
   14001bca8:	mov    rbx,QWORD PTR [rsp+0x30]
   14001bcad:	add    rsp,0x20
   14001bcb1:	pop    rdi
   14001bcb2:	rex.WB jmp QWORD PTR [r11+0x530]
   14001bcb9:	int3   
   14001bcba:	int3   
   14001bcbb:	int3   
   14001bcbc:	int3   
   14001bcbd:	int3   
   14001bcbe:	int3   
   14001bcbf:	int3   
   14001bcc0:	mov    QWORD PTR [rsp+0x8],rbx
   14001bcc5:	push   rdi
   14001bcc6:	sub    rsp,0x20
   14001bcca:	mov    rax,QWORD PTR [rdx]
   14001bccd:	mov    rdi,rdx
   14001bcd0:	mov    rbx,rcx
   14001bcd3:	mov    rdx,rcx
   14001bcd6:	mov    rcx,rdi
   14001bcd9:	call   QWORD PTR [rax+0x248]
   14001bcdf:	mov    r11,QWORD PTR [rdi]
   14001bce2:	mov    rdx,rbx
   14001bce5:	mov    rcx,rdi
   14001bce8:	mov    rbx,QWORD PTR [rsp+0x30]
   14001bced:	add    rsp,0x20
   14001bcf1:	pop    rdi
   14001bcf2:	rex.WB jmp QWORD PTR [r11+0x528]
   14001bcf9:	int3   
   14001bcfa:	int3   
   14001bcfb:	int3   
   14001bcfc:	int3   
   14001bcfd:	int3   
   14001bcfe:	int3   
   14001bcff:	int3   
   14001bd00:	mov    QWORD PTR [rsp+0x8],rbx
   14001bd05:	push   rdi
   14001bd06:	sub    rsp,0x20
   14001bd0a:	mov    rax,QWORD PTR [rdx]
   14001bd0d:	mov    rdi,rdx
   14001bd10:	mov    rbx,rcx
   14001bd13:	mov    rdx,rcx
   14001bd16:	mov    rcx,rdi
   14001bd19:	call   QWORD PTR [rax+0x240]
   14001bd1f:	mov    r11,QWORD PTR [rdi]
   14001bd22:	mov    rdx,rbx
   14001bd25:	mov    rcx,rdi
   14001bd28:	mov    rbx,QWORD PTR [rsp+0x30]
   14001bd2d:	add    rsp,0x20
   14001bd31:	pop    rdi
   14001bd32:	rex.WB jmp QWORD PTR [r11+0x520]
   14001bd39:	int3   
   14001bd3a:	int3   
   14001bd3b:	int3   
   14001bd3c:	int3   
   14001bd3d:	int3   
   14001bd3e:	int3   
   14001bd3f:	int3   
   14001bd40:	mov    QWORD PTR [rsp+0x8],rbx
   14001bd45:	push   rdi
   14001bd46:	sub    rsp,0x20
   14001bd4a:	mov    rax,QWORD PTR [rdx]
   14001bd4d:	mov    rdi,rdx
   14001bd50:	mov    rbx,rcx
   14001bd53:	mov    rdx,rcx
   14001bd56:	mov    rcx,rdi
   14001bd59:	call   QWORD PTR [rax+0x238]
   14001bd5f:	mov    r11,QWORD PTR [rdi]
   14001bd62:	mov    rdx,rbx
   14001bd65:	mov    rcx,rdi
   14001bd68:	mov    rbx,QWORD PTR [rsp+0x30]
   14001bd6d:	add    rsp,0x20
   14001bd71:	pop    rdi
   14001bd72:	rex.WB jmp QWORD PTR [r11+0x518]
   14001bd79:	int3   
   14001bd7a:	int3   
   14001bd7b:	int3   
   14001bd7c:	int3   
   14001bd7d:	int3   
   14001bd7e:	int3   
   14001bd7f:	int3   
   14001bd80:	mov    QWORD PTR [rsp+0x10],rbx
   14001bd85:	push   rsi
   14001bd86:	sub    rsp,0x20
   14001bd8a:	mov    rax,QWORD PTR [rdx]
   14001bd8d:	mov    rbx,rdx
   14001bd90:	mov    rsi,rcx
   14001bd93:	mov    rdx,rcx
   14001bd96:	mov    rcx,rbx
   14001bd99:	call   QWORD PTR [rax+0x230]
   14001bd9f:	test   al,al
   14001bda1:	je     0x14001be0f
   14001bda3:	mov    QWORD PTR [rsp+0x30],rdi
   14001bda8:	mov    rdi,QWORD PTR [rsi+0x10]
   14001bdac:	test   rdi,rdi
   14001bdaf:	je     0x14001bdd9
   14001bdb1:	mov    rax,QWORD PTR [rbx]
   14001bdb4:	mov    rdx,rdi
   14001bdb7:	mov    rcx,rbx
   14001bdba:	call   QWORD PTR [rax+0x8]
   14001bdbd:	test   al,al
   14001bdbf:	je     0x14001bdcd
   14001bdc1:	mov    rax,QWORD PTR [rdi]
   14001bdc4:	mov    rdx,rbx
   14001bdc7:	mov    rcx,rdi
   14001bdca:	call   QWORD PTR [rax+0x28]
   14001bdcd:	mov    rax,QWORD PTR [rbx]
   14001bdd0:	mov    rdx,rdi
   14001bdd3:	mov    rcx,rbx
   14001bdd6:	call   QWORD PTR [rax+0x10]
   14001bdd9:	mov    rdi,QWORD PTR [rsi+0x18]
   14001bddd:	test   rdi,rdi
   14001bde0:	je     0x14001be0a
   14001bde2:	mov    rax,QWORD PTR [rbx]
   14001bde5:	mov    rdx,rdi
   14001bde8:	mov    rcx,rbx
   14001bdeb:	call   QWORD PTR [rax+0x8]
   14001bdee:	test   al,al
   14001bdf0:	je     0x14001bdfe
   14001bdf2:	mov    rax,QWORD PTR [rdi]
   14001bdf5:	mov    rdx,rbx
   14001bdf8:	mov    rcx,rdi
   14001bdfb:	call   QWORD PTR [rax+0x28]
   14001bdfe:	mov    rax,QWORD PTR [rbx]
   14001be01:	mov    rdx,rdi
   14001be04:	mov    rcx,rbx
   14001be07:	call   QWORD PTR [rax+0x10]
   14001be0a:	mov    rdi,QWORD PTR [rsp+0x30]
   14001be0f:	mov    rax,QWORD PTR [rbx]
   14001be12:	mov    rdx,rsi
   14001be15:	mov    rcx,rbx
   14001be18:	mov    rbx,QWORD PTR [rsp+0x38]
   14001be1d:	add    rsp,0x20
   14001be21:	pop    rsi
   14001be22:	rex.W jmp QWORD PTR [rax+0x510]
   14001be29:	int3   
   14001be2a:	int3   
   14001be2b:	int3   
   14001be2c:	int3   
   14001be2d:	int3   
   14001be2e:	int3   
   14001be2f:	int3   
   14001be30:	mov    QWORD PTR [rsp+0x10],rbx
   14001be35:	push   rsi
   14001be36:	sub    rsp,0x20
   14001be3a:	mov    rax,QWORD PTR [rdx]
   14001be3d:	mov    rbx,rdx
   14001be40:	mov    rsi,rcx
   14001be43:	mov    rdx,rcx
   14001be46:	mov    rcx,rbx
   14001be49:	call   QWORD PTR [rax+0x228]
   14001be4f:	test   al,al
   14001be51:	je     0x14001be8e
   14001be53:	mov    QWORD PTR [rsp+0x30],rdi
   14001be58:	mov    rdi,QWORD PTR [rsi+0x10]
   14001be5c:	test   rdi,rdi
   14001be5f:	je     0x14001be89
   14001be61:	mov    rax,QWORD PTR [rbx]
   14001be64:	mov    rdx,rdi
   14001be67:	mov    rcx,rbx
   14001be6a:	call   QWORD PTR [rax+0x8]
   14001be6d:	test   al,al
   14001be6f:	je     0x14001be7d
   14001be71:	mov    rax,QWORD PTR [rdi]
   14001be74:	mov    rdx,rbx
   14001be77:	mov    rcx,rdi
   14001be7a:	call   QWORD PTR [rax+0x28]
   14001be7d:	mov    rax,QWORD PTR [rbx]
   14001be80:	mov    rdx,rdi
   14001be83:	mov    rcx,rbx
   14001be86:	call   QWORD PTR [rax+0x10]
   14001be89:	mov    rdi,QWORD PTR [rsp+0x30]
   14001be8e:	mov    rax,QWORD PTR [rbx]
   14001be91:	mov    rdx,rsi
   14001be94:	mov    rcx,rbx
   14001be97:	mov    rbx,QWORD PTR [rsp+0x38]
   14001be9c:	add    rsp,0x20
   14001bea0:	pop    rsi
   14001bea1:	rex.W jmp QWORD PTR [rax+0x508]
   14001bea8:	int3   
   14001bea9:	int3   
   14001beaa:	int3   
   14001beab:	int3   
   14001beac:	int3   
   14001bead:	int3   
   14001beae:	int3   
   14001beaf:	int3   
   14001beb0:	mov    QWORD PTR [rsp+0x18],rbp
   14001beb5:	push   rdi
   14001beb6:	sub    rsp,0x20
   14001beba:	mov    rax,QWORD PTR [rdx]
   14001bebd:	mov    rdi,rdx
   14001bec0:	mov    rbp,rcx
   14001bec3:	mov    rdx,rcx
   14001bec6:	mov    rcx,rdi
   14001bec9:	call   QWORD PTR [rax+0x220]
   14001becf:	test   al,al
   14001bed1:	je     0x14001bf65
   14001bed7:	mov    QWORD PTR [rsp+0x30],rbx
   14001bedc:	mov    rbx,rbp
   14001bedf:	test   rbp,rbp
   14001bee2:	je     0x14001bf60
   14001bee4:	mov    QWORD PTR [rsp+0x38],rsi
   14001bee9:	nop    DWORD PTR [rax+0x0]
   14001bef0:	mov    rsi,QWORD PTR [rbx+0x10]
   14001bef4:	test   rsi,rsi
   14001bef7:	je     0x14001bf21
   14001bef9:	mov    rax,QWORD PTR [rdi]
   14001befc:	mov    rdx,rsi
   14001beff:	mov    rcx,rdi
   14001bf02:	call   QWORD PTR [rax+0x8]
   14001bf05:	test   al,al
   14001bf07:	je     0x14001bf15
   14001bf09:	mov    rax,QWORD PTR [rsi]
   14001bf0c:	mov    rdx,rdi
   14001bf0f:	mov    rcx,rsi
   14001bf12:	call   QWORD PTR [rax+0x28]
   14001bf15:	mov    rax,QWORD PTR [rdi]
   14001bf18:	mov    rdx,rsi
   14001bf1b:	mov    rcx,rdi
   14001bf1e:	call   QWORD PTR [rax+0x10]
   14001bf21:	mov    rsi,QWORD PTR [rbx+0x18]
   14001bf25:	test   rsi,rsi
   14001bf28:	je     0x14001bf52
   14001bf2a:	mov    rax,QWORD PTR [rdi]
   14001bf2d:	mov    rdx,rsi
   14001bf30:	mov    rcx,rdi
   14001bf33:	call   QWORD PTR [rax+0x8]
   14001bf36:	test   al,al
   14001bf38:	je     0x14001bf46
   14001bf3a:	mov    rax,QWORD PTR [rsi]
   14001bf3d:	mov    rdx,rdi
   14001bf40:	mov    rcx,rsi
   14001bf43:	call   QWORD PTR [rax+0x28]
   14001bf46:	mov    rax,QWORD PTR [rdi]
   14001bf49:	mov    rdx,rsi
   14001bf4c:	mov    rcx,rdi
   14001bf4f:	call   QWORD PTR [rax+0x10]
   14001bf52:	mov    rbx,QWORD PTR [rbx+0x20]
   14001bf56:	test   rbx,rbx
   14001bf59:	jne    0x14001bef0
   14001bf5b:	mov    rsi,QWORD PTR [rsp+0x38]
   14001bf60:	mov    rbx,QWORD PTR [rsp+0x30]
   14001bf65:	mov    rax,QWORD PTR [rdi]
   14001bf68:	mov    rdx,rbp
   14001bf6b:	mov    rcx,rdi
   14001bf6e:	mov    rbp,QWORD PTR [rsp+0x40]
   14001bf73:	add    rsp,0x20
   14001bf77:	pop    rdi
   14001bf78:	rex.W jmp QWORD PTR [rax+0x500]
   14001bf7f:	int3   
   14001bf80:	mov    QWORD PTR [rsp+0x8],rbx
   14001bf85:	push   rdi
   14001bf86:	sub    rsp,0x20
   14001bf8a:	mov    rax,QWORD PTR [rdx]
   14001bf8d:	mov    rdi,rdx
   14001bf90:	mov    rbx,rcx
   14001bf93:	mov    rdx,rcx
   14001bf96:	mov    rcx,rdi
   14001bf99:	call   QWORD PTR [rax+0x218]
   14001bf9f:	mov    r11,QWORD PTR [rdi]
   14001bfa2:	mov    rdx,rbx
   14001bfa5:	mov    rcx,rdi
   14001bfa8:	mov    rbx,QWORD PTR [rsp+0x30]
   14001bfad:	add    rsp,0x20
   14001bfb1:	pop    rdi
   14001bfb2:	rex.WB jmp QWORD PTR [r11+0x4f8]
   14001bfb9:	int3   
   14001bfba:	int3   
   14001bfbb:	int3   
   14001bfbc:	int3   
   14001bfbd:	int3   
   14001bfbe:	int3   
   14001bfbf:	int3   
   14001bfc0:	mov    QWORD PTR [rsp+0x10],rbx
   14001bfc5:	push   rsi
   14001bfc6:	sub    rsp,0x20
   14001bfca:	mov    rax,QWORD PTR [rdx]
   14001bfcd:	mov    rbx,rdx
   14001bfd0:	mov    rsi,rcx
   14001bfd3:	mov    rdx,rcx
   14001bfd6:	mov    rcx,rbx
   14001bfd9:	call   QWORD PTR [rax+0x208]
   14001bfdf:	test   al,al
   14001bfe1:	je     0x14001c04f
   14001bfe3:	mov    QWORD PTR [rsp+0x30],rdi
   14001bfe8:	mov    rdi,QWORD PTR [rsi+0x10]
   14001bfec:	test   rdi,rdi
   14001bfef:	je     0x14001c019
   14001bff1:	mov    rax,QWORD PTR [rbx]
   14001bff4:	mov    rdx,rdi
   14001bff7:	mov    rcx,rbx
   14001bffa:	call   QWORD PTR [rax+0x8]
   14001bffd:	test   al,al
   14001bfff:	je     0x14001c00d
   14001c001:	mov    rax,QWORD PTR [rdi]
   14001c004:	mov    rdx,rbx
   14001c007:	mov    rcx,rdi
   14001c00a:	call   QWORD PTR [rax+0x28]
   14001c00d:	mov    rax,QWORD PTR [rbx]
   14001c010:	mov    rdx,rdi
   14001c013:	mov    rcx,rbx
   14001c016:	call   QWORD PTR [rax+0x10]
   14001c019:	mov    rdi,QWORD PTR [rsi+0x28]
   14001c01d:	test   rdi,rdi
   14001c020:	je     0x14001c04a
   14001c022:	mov    rax,QWORD PTR [rbx]
   14001c025:	mov    rdx,rdi
   14001c028:	mov    rcx,rbx
   14001c02b:	call   QWORD PTR [rax+0x8]
   14001c02e:	test   al,al
   14001c030:	je     0x14001c03e
   14001c032:	mov    rax,QWORD PTR [rdi]
   14001c035:	mov    rdx,rbx
   14001c038:	mov    rcx,rdi
   14001c03b:	call   QWORD PTR [rax+0x28]
   14001c03e:	mov    rax,QWORD PTR [rbx]
   14001c041:	mov    rdx,rdi
   14001c044:	mov    rcx,rbx
   14001c047:	call   QWORD PTR [rax+0x10]
   14001c04a:	mov    rdi,QWORD PTR [rsp+0x30]
   14001c04f:	mov    rax,QWORD PTR [rbx]
   14001c052:	mov    rdx,rsi
   14001c055:	mov    rcx,rbx
   14001c058:	mov    rbx,QWORD PTR [rsp+0x38]
   14001c05d:	add    rsp,0x20
   14001c061:	pop    rsi
   14001c062:	rex.W jmp QWORD PTR [rax+0x4e8]
   14001c069:	int3   
   14001c06a:	int3   
   14001c06b:	int3   
   14001c06c:	int3   
   14001c06d:	int3   
   14001c06e:	int3   
   14001c06f:	int3   
   14001c070:	mov    QWORD PTR [rsp+0x10],rbx
   14001c075:	push   rsi
   14001c076:	sub    rsp,0x20
   14001c07a:	mov    rax,QWORD PTR [rdx]
   14001c07d:	mov    rbx,rdx
   14001c080:	mov    rsi,rcx
   14001c083:	mov    rdx,rcx
   14001c086:	mov    rcx,rbx
   14001c089:	call   QWORD PTR [rax+0x200]
   14001c08f:	test   al,al
   14001c091:	je     0x14001c134
   14001c097:	mov    QWORD PTR [rsp+0x30],rdi
   14001c09c:	mov    rdi,QWORD PTR [rsi+0x10]
   14001c0a0:	test   rdi,rdi
   14001c0a3:	je     0x14001c0cd
   14001c0a5:	mov    rax,QWORD PTR [rbx]
   14001c0a8:	mov    rdx,rdi
   14001c0ab:	mov    rcx,rbx
   14001c0ae:	call   QWORD PTR [rax+0x8]
   14001c0b1:	test   al,al
   14001c0b3:	je     0x14001c0c1
   14001c0b5:	mov    rax,QWORD PTR [rdi]
   14001c0b8:	mov    rdx,rbx
   14001c0bb:	mov    rcx,rdi
   14001c0be:	call   QWORD PTR [rax+0x28]
   14001c0c1:	mov    rax,QWORD PTR [rbx]
   14001c0c4:	mov    rdx,rdi
   14001c0c7:	mov    rcx,rbx
   14001c0ca:	call   QWORD PTR [rax+0x10]
   14001c0cd:	mov    rdi,QWORD PTR [rsi+0x40]
   14001c0d1:	test   rdi,rdi
   14001c0d4:	je     0x14001c0fe
   14001c0d6:	mov    rax,QWORD PTR [rbx]
   14001c0d9:	mov    rdx,rdi
   14001c0dc:	mov    rcx,rbx
   14001c0df:	call   QWORD PTR [rax+0x8]
   14001c0e2:	test   al,al
   14001c0e4:	je     0x14001c0f2
   14001c0e6:	mov    rax,QWORD PTR [rdi]
   14001c0e9:	mov    rdx,rbx
   14001c0ec:	mov    rcx,rdi
   14001c0ef:	call   QWORD PTR [rax+0x28]
   14001c0f2:	mov    rax,QWORD PTR [rbx]
   14001c0f5:	mov    rdx,rdi
   14001c0f8:	mov    rcx,rbx
   14001c0fb:	call   QWORD PTR [rax+0x10]
   14001c0fe:	mov    rdi,QWORD PTR [rsi+0x68]
   14001c102:	test   rdi,rdi
   14001c105:	je     0x14001c12f
   14001c107:	mov    rax,QWORD PTR [rbx]
   14001c10a:	mov    rdx,rdi
   14001c10d:	mov    rcx,rbx
   14001c110:	call   QWORD PTR [rax+0x8]
   14001c113:	test   al,al
   14001c115:	je     0x14001c123
   14001c117:	mov    rax,QWORD PTR [rdi]
   14001c11a:	mov    rdx,rbx
   14001c11d:	mov    rcx,rdi
   14001c120:	call   QWORD PTR [rax+0x28]
   14001c123:	mov    rax,QWORD PTR [rbx]
   14001c126:	mov    rdx,rdi
   14001c129:	mov    rcx,rbx
   14001c12c:	call   QWORD PTR [rax+0x10]
   14001c12f:	mov    rdi,QWORD PTR [rsp+0x30]
   14001c134:	mov    rax,QWORD PTR [rbx]
   14001c137:	mov    rdx,rsi
   14001c13a:	mov    rcx,rbx
   14001c13d:	mov    rbx,QWORD PTR [rsp+0x38]
   14001c142:	add    rsp,0x20
   14001c146:	pop    rsi
   14001c147:	rex.W jmp QWORD PTR [rax+0x4e0]
   14001c14e:	int3   
   14001c14f:	int3   
   14001c150:	mov    QWORD PTR [rsp+0x18],rbp
   14001c155:	push   rsi
   14001c156:	sub    rsp,0x20
   14001c15a:	mov    rax,QWORD PTR [rdx]
   14001c15d:	mov    rsi,rdx
   14001c160:	mov    rbp,rcx
   14001c163:	mov    rdx,rcx
   14001c166:	mov    rcx,rsi
   14001c169:	call   QWORD PTR [rax+0x210]
   14001c16f:	test   al,al
   14001c171:	je     0x14001c1c9
   14001c173:	mov    QWORD PTR [rsp+0x30],rbx
   14001c178:	mov    rbx,rbp
   14001c17b:	test   rbp,rbp
   14001c17e:	je     0x14001c1c4
   14001c180:	mov    QWORD PTR [rsp+0x38],rdi
   14001c185:	mov    rdi,QWORD PTR [rbx+0x10]
   14001c189:	test   rdi,rdi
   14001c18c:	je     0x14001c1b6
   14001c18e:	mov    rax,QWORD PTR [rsi]
   14001c191:	mov    rdx,rdi
   14001c194:	mov    rcx,rsi
   14001c197:	call   QWORD PTR [rax+0x8]
   14001c19a:	test   al,al
   14001c19c:	je     0x14001c1aa
   14001c19e:	mov    rax,QWORD PTR [rdi]
   14001c1a1:	mov    rdx,rsi
   14001c1a4:	mov    rcx,rdi
   14001c1a7:	call   QWORD PTR [rax+0x28]
   14001c1aa:	mov    rax,QWORD PTR [rsi]
   14001c1ad:	mov    rdx,rdi
   14001c1b0:	mov    rcx,rsi
   14001c1b3:	call   QWORD PTR [rax+0x10]
   14001c1b6:	mov    rbx,QWORD PTR [rbx+0x18]
   14001c1ba:	test   rbx,rbx
   14001c1bd:	jne    0x14001c185
   14001c1bf:	mov    rdi,QWORD PTR [rsp+0x38]
   14001c1c4:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c1c9:	mov    rax,QWORD PTR [rsi]
   14001c1cc:	mov    rdx,rbp
   14001c1cf:	mov    rcx,rsi
   14001c1d2:	mov    rbp,QWORD PTR [rsp+0x40]
   14001c1d7:	add    rsp,0x20
   14001c1db:	pop    rsi
   14001c1dc:	rex.W jmp QWORD PTR [rax+0x4f0]
   14001c1e3:	int3   
   14001c1e4:	int3   
   14001c1e5:	int3   
   14001c1e6:	int3   
   14001c1e7:	int3   
   14001c1e8:	int3   
   14001c1e9:	int3   
   14001c1ea:	int3   
   14001c1eb:	int3   
   14001c1ec:	int3   
   14001c1ed:	int3   
   14001c1ee:	int3   
   14001c1ef:	int3   
   14001c1f0:	mov    QWORD PTR [rsp+0x8],rbx
   14001c1f5:	push   rdi
   14001c1f6:	sub    rsp,0x20
   14001c1fa:	mov    rax,QWORD PTR [rdx]
   14001c1fd:	mov    rdi,rdx
   14001c200:	mov    rbx,rcx
   14001c203:	mov    rdx,rcx
   14001c206:	mov    rcx,rdi
   14001c209:	call   QWORD PTR [rax+0x1f0]
   14001c20f:	mov    r11,QWORD PTR [rdi]
   14001c212:	mov    rdx,rbx
   14001c215:	mov    rcx,rdi
   14001c218:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c21d:	add    rsp,0x20
   14001c221:	pop    rdi
   14001c222:	rex.WB jmp QWORD PTR [r11+0x4d0]
   14001c229:	int3   
   14001c22a:	int3   
   14001c22b:	int3   
   14001c22c:	int3   
   14001c22d:	int3   
   14001c22e:	int3   
   14001c22f:	int3   
   14001c230:	mov    QWORD PTR [rsp+0x8],rbx
   14001c235:	push   rdi
   14001c236:	sub    rsp,0x20
   14001c23a:	mov    rax,QWORD PTR [rdx]
   14001c23d:	mov    rdi,rdx
   14001c240:	mov    rbx,rcx
   14001c243:	mov    rdx,rcx
   14001c246:	mov    rcx,rdi
   14001c249:	call   QWORD PTR [rax+0x1e8]
   14001c24f:	mov    r11,QWORD PTR [rdi]
   14001c252:	mov    rdx,rbx
   14001c255:	mov    rcx,rdi
   14001c258:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c25d:	add    rsp,0x20
   14001c261:	pop    rdi
   14001c262:	rex.WB jmp QWORD PTR [r11+0x4c8]
   14001c269:	int3   
   14001c26a:	int3   
   14001c26b:	int3   
   14001c26c:	int3   
   14001c26d:	int3   
   14001c26e:	int3   
   14001c26f:	int3   
   14001c270:	mov    QWORD PTR [rsp+0x8],rbx
   14001c275:	push   rdi
   14001c276:	sub    rsp,0x20
   14001c27a:	mov    rax,QWORD PTR [rdx]
   14001c27d:	mov    rdi,rdx
   14001c280:	mov    rbx,rcx
   14001c283:	mov    rdx,rcx
   14001c286:	mov    rcx,rdi
   14001c289:	call   QWORD PTR [rax+0x1e0]
   14001c28f:	mov    r11,QWORD PTR [rdi]
   14001c292:	mov    rdx,rbx
   14001c295:	mov    rcx,rdi
   14001c298:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c29d:	add    rsp,0x20
   14001c2a1:	pop    rdi
   14001c2a2:	rex.WB jmp QWORD PTR [r11+0x4c0]
   14001c2a9:	int3   
   14001c2aa:	int3   
   14001c2ab:	int3   
   14001c2ac:	int3   
   14001c2ad:	int3   
   14001c2ae:	int3   
   14001c2af:	int3   
   14001c2b0:	mov    QWORD PTR [rsp+0x10],rbx
   14001c2b5:	push   rsi
   14001c2b6:	sub    rsp,0x20
   14001c2ba:	mov    rax,QWORD PTR [rdx]
   14001c2bd:	mov    rbx,rdx
   14001c2c0:	mov    rsi,rcx
   14001c2c3:	mov    rdx,rcx
   14001c2c6:	mov    rcx,rbx
   14001c2c9:	call   QWORD PTR [rax+0x1d8]
   14001c2cf:	test   al,al
   14001c2d1:	je     0x14001c33f
   14001c2d3:	mov    QWORD PTR [rsp+0x30],rdi
   14001c2d8:	mov    rdi,QWORD PTR [rsi+0x10]
   14001c2dc:	test   rdi,rdi
   14001c2df:	je     0x14001c309
   14001c2e1:	mov    rax,QWORD PTR [rbx]
   14001c2e4:	mov    rdx,rdi
   14001c2e7:	mov    rcx,rbx
   14001c2ea:	call   QWORD PTR [rax+0x8]
   14001c2ed:	test   al,al
   14001c2ef:	je     0x14001c2fd
   14001c2f1:	mov    rax,QWORD PTR [rdi]
   14001c2f4:	mov    rdx,rbx
   14001c2f7:	mov    rcx,rdi
   14001c2fa:	call   QWORD PTR [rax+0x28]
   14001c2fd:	mov    rax,QWORD PTR [rbx]
   14001c300:	mov    rdx,rdi
   14001c303:	mov    rcx,rbx
   14001c306:	call   QWORD PTR [rax+0x10]
   14001c309:	mov    rdi,QWORD PTR [rsi+0x18]
   14001c30d:	test   rdi,rdi
   14001c310:	je     0x14001c33a
   14001c312:	mov    rax,QWORD PTR [rbx]
   14001c315:	mov    rdx,rdi
   14001c318:	mov    rcx,rbx
   14001c31b:	call   QWORD PTR [rax+0x8]
   14001c31e:	test   al,al
   14001c320:	je     0x14001c32e
   14001c322:	mov    rax,QWORD PTR [rdi]
   14001c325:	mov    rdx,rbx
   14001c328:	mov    rcx,rdi
   14001c32b:	call   QWORD PTR [rax+0x28]
   14001c32e:	mov    rax,QWORD PTR [rbx]
   14001c331:	mov    rdx,rdi
   14001c334:	mov    rcx,rbx
   14001c337:	call   QWORD PTR [rax+0x10]
   14001c33a:	mov    rdi,QWORD PTR [rsp+0x30]
   14001c33f:	mov    rax,QWORD PTR [rbx]
   14001c342:	mov    rdx,rsi
   14001c345:	mov    rcx,rbx
   14001c348:	mov    rbx,QWORD PTR [rsp+0x38]
   14001c34d:	add    rsp,0x20
   14001c351:	pop    rsi
   14001c352:	rex.W jmp QWORD PTR [rax+0x4b8]
   14001c359:	int3   
   14001c35a:	int3   
   14001c35b:	int3   
   14001c35c:	int3   
   14001c35d:	int3   
   14001c35e:	int3   
   14001c35f:	int3   
   14001c360:	mov    QWORD PTR [rsp+0x10],rbx
   14001c365:	push   rsi
   14001c366:	sub    rsp,0x20
   14001c36a:	mov    rax,QWORD PTR [rdx]
   14001c36d:	mov    rbx,rdx
   14001c370:	mov    rsi,rcx
   14001c373:	mov    rdx,rcx
   14001c376:	mov    rcx,rbx
   14001c379:	call   QWORD PTR [rax+0x1d0]
   14001c37f:	test   al,al
   14001c381:	je     0x14001c3be
   14001c383:	mov    QWORD PTR [rsp+0x30],rdi
   14001c388:	mov    rdi,QWORD PTR [rsi+0x10]
   14001c38c:	test   rdi,rdi
   14001c38f:	je     0x14001c3b9
   14001c391:	mov    rax,QWORD PTR [rbx]
   14001c394:	mov    rdx,rdi
   14001c397:	mov    rcx,rbx
   14001c39a:	call   QWORD PTR [rax+0x8]
   14001c39d:	test   al,al
   14001c39f:	je     0x14001c3ad
   14001c3a1:	mov    rax,QWORD PTR [rdi]
   14001c3a4:	mov    rdx,rbx
   14001c3a7:	mov    rcx,rdi
   14001c3aa:	call   QWORD PTR [rax+0x28]
   14001c3ad:	mov    rax,QWORD PTR [rbx]
   14001c3b0:	mov    rdx,rdi
   14001c3b3:	mov    rcx,rbx
   14001c3b6:	call   QWORD PTR [rax+0x10]
   14001c3b9:	mov    rdi,QWORD PTR [rsp+0x30]
   14001c3be:	mov    rax,QWORD PTR [rbx]
   14001c3c1:	mov    rdx,rsi
   14001c3c4:	mov    rcx,rbx
   14001c3c7:	mov    rbx,QWORD PTR [rsp+0x38]
   14001c3cc:	add    rsp,0x20
   14001c3d0:	pop    rsi
   14001c3d1:	rex.W jmp QWORD PTR [rax+0x4b0]
   14001c3d8:	int3   
   14001c3d9:	int3   
   14001c3da:	int3   
   14001c3db:	int3   
   14001c3dc:	int3   
   14001c3dd:	int3   
   14001c3de:	int3   
   14001c3df:	int3   
   14001c3e0:	mov    QWORD PTR [rsp+0x10],rbx
   14001c3e5:	push   rsi
   14001c3e6:	sub    rsp,0x20
   14001c3ea:	mov    rax,QWORD PTR [rdx]
   14001c3ed:	mov    rbx,rdx
   14001c3f0:	mov    rsi,rcx
   14001c3f3:	mov    rdx,rcx
   14001c3f6:	mov    rcx,rbx
   14001c3f9:	call   QWORD PTR [rax+0x1c8]
   14001c3ff:	test   al,al
   14001c401:	je     0x14001c46f
   14001c403:	mov    QWORD PTR [rsp+0x30],rdi
   14001c408:	mov    rdi,QWORD PTR [rsi+0x10]
   14001c40c:	test   rdi,rdi
   14001c40f:	je     0x14001c439
   14001c411:	mov    rax,QWORD PTR [rbx]
   14001c414:	mov    rdx,rdi
   14001c417:	mov    rcx,rbx
   14001c41a:	call   QWORD PTR [rax+0x8]
   14001c41d:	test   al,al
   14001c41f:	je     0x14001c42d
   14001c421:	mov    rax,QWORD PTR [rdi]
   14001c424:	mov    rdx,rbx
   14001c427:	mov    rcx,rdi
   14001c42a:	call   QWORD PTR [rax+0x28]
   14001c42d:	mov    rax,QWORD PTR [rbx]
   14001c430:	mov    rdx,rdi
   14001c433:	mov    rcx,rbx
   14001c436:	call   QWORD PTR [rax+0x10]
   14001c439:	mov    rdi,QWORD PTR [rsi+0x18]
   14001c43d:	test   rdi,rdi
   14001c440:	je     0x14001c46a
   14001c442:	mov    rax,QWORD PTR [rbx]
   14001c445:	mov    rdx,rdi
   14001c448:	mov    rcx,rbx
   14001c44b:	call   QWORD PTR [rax+0x8]
   14001c44e:	test   al,al
   14001c450:	je     0x14001c45e
   14001c452:	mov    rax,QWORD PTR [rdi]
   14001c455:	mov    rdx,rbx
   14001c458:	mov    rcx,rdi
   14001c45b:	call   QWORD PTR [rax+0x28]
   14001c45e:	mov    rax,QWORD PTR [rbx]
   14001c461:	mov    rdx,rdi
   14001c464:	mov    rcx,rbx
   14001c467:	call   QWORD PTR [rax+0x10]
   14001c46a:	mov    rdi,QWORD PTR [rsp+0x30]
   14001c46f:	mov    rax,QWORD PTR [rbx]
   14001c472:	mov    rdx,rsi
   14001c475:	mov    rcx,rbx
   14001c478:	mov    rbx,QWORD PTR [rsp+0x38]
   14001c47d:	add    rsp,0x20
   14001c481:	pop    rsi
   14001c482:	rex.W jmp QWORD PTR [rax+0x4a8]
   14001c489:	int3   
   14001c48a:	int3   
   14001c48b:	int3   
   14001c48c:	int3   
   14001c48d:	int3   
   14001c48e:	int3   
   14001c48f:	int3   
   14001c490:	mov    QWORD PTR [rsp+0x10],rbx
   14001c495:	push   rsi
   14001c496:	sub    rsp,0x20
   14001c49a:	mov    rax,QWORD PTR [rdx]
   14001c49d:	mov    rbx,rdx
   14001c4a0:	mov    rsi,rcx
   14001c4a3:	mov    rdx,rcx
   14001c4a6:	mov    rcx,rbx
   14001c4a9:	call   QWORD PTR [rax+0x1c0]
   14001c4af:	test   al,al
   14001c4b1:	je     0x14001c4ee
   14001c4b3:	mov    QWORD PTR [rsp+0x30],rdi
   14001c4b8:	mov    rdi,QWORD PTR [rsi+0x10]
   14001c4bc:	test   rdi,rdi
   14001c4bf:	je     0x14001c4e9
   14001c4c1:	mov    rax,QWORD PTR [rbx]
   14001c4c4:	mov    rdx,rdi
   14001c4c7:	mov    rcx,rbx
   14001c4ca:	call   QWORD PTR [rax+0x8]
   14001c4cd:	test   al,al
   14001c4cf:	je     0x14001c4dd
   14001c4d1:	mov    rax,QWORD PTR [rdi]
   14001c4d4:	mov    rdx,rbx
   14001c4d7:	mov    rcx,rdi
   14001c4da:	call   QWORD PTR [rax+0x28]
   14001c4dd:	mov    rax,QWORD PTR [rbx]
   14001c4e0:	mov    rdx,rdi
   14001c4e3:	mov    rcx,rbx
   14001c4e6:	call   QWORD PTR [rax+0x10]
   14001c4e9:	mov    rdi,QWORD PTR [rsp+0x30]
   14001c4ee:	mov    rax,QWORD PTR [rbx]
   14001c4f1:	mov    rdx,rsi
   14001c4f4:	mov    rcx,rbx
   14001c4f7:	mov    rbx,QWORD PTR [rsp+0x38]
   14001c4fc:	add    rsp,0x20
   14001c500:	pop    rsi
   14001c501:	rex.W jmp QWORD PTR [rax+0x4a0]
   14001c508:	int3   
   14001c509:	int3   
   14001c50a:	int3   
   14001c50b:	int3   
   14001c50c:	int3   
   14001c50d:	int3   
   14001c50e:	int3   
   14001c50f:	int3   
   14001c510:	mov    QWORD PTR [rsp+0x10],rbx
   14001c515:	push   rsi
   14001c516:	sub    rsp,0x20
   14001c51a:	mov    rax,QWORD PTR [rdx]
   14001c51d:	mov    rbx,rdx
   14001c520:	mov    rsi,rcx
   14001c523:	mov    rdx,rcx
   14001c526:	mov    rcx,rbx
   14001c529:	call   QWORD PTR [rax+0x1b8]
   14001c52f:	test   al,al
   14001c531:	je     0x14001c59f
   14001c533:	mov    QWORD PTR [rsp+0x30],rdi
   14001c538:	mov    rdi,QWORD PTR [rsi+0x10]
   14001c53c:	test   rdi,rdi
   14001c53f:	je     0x14001c569
   14001c541:	mov    rax,QWORD PTR [rbx]
   14001c544:	mov    rdx,rdi
   14001c547:	mov    rcx,rbx
   14001c54a:	call   QWORD PTR [rax+0x8]
   14001c54d:	test   al,al
   14001c54f:	je     0x14001c55d
   14001c551:	mov    rax,QWORD PTR [rdi]
   14001c554:	mov    rdx,rbx
   14001c557:	mov    rcx,rdi
   14001c55a:	call   QWORD PTR [rax+0x28]
   14001c55d:	mov    rax,QWORD PTR [rbx]
   14001c560:	mov    rdx,rdi
   14001c563:	mov    rcx,rbx
   14001c566:	call   QWORD PTR [rax+0x10]
   14001c569:	mov    rdi,QWORD PTR [rsi+0x18]
   14001c56d:	test   rdi,rdi
   14001c570:	je     0x14001c59a
   14001c572:	mov    rax,QWORD PTR [rbx]
   14001c575:	mov    rdx,rdi
   14001c578:	mov    rcx,rbx
   14001c57b:	call   QWORD PTR [rax+0x8]
   14001c57e:	test   al,al
   14001c580:	je     0x14001c58e
   14001c582:	mov    rax,QWORD PTR [rdi]
   14001c585:	mov    rdx,rbx
   14001c588:	mov    rcx,rdi
   14001c58b:	call   QWORD PTR [rax+0x28]
   14001c58e:	mov    rax,QWORD PTR [rbx]
   14001c591:	mov    rdx,rdi
   14001c594:	mov    rcx,rbx
   14001c597:	call   QWORD PTR [rax+0x10]
   14001c59a:	mov    rdi,QWORD PTR [rsp+0x30]
   14001c59f:	mov    rax,QWORD PTR [rbx]
   14001c5a2:	mov    rdx,rsi
   14001c5a5:	mov    rcx,rbx
   14001c5a8:	mov    rbx,QWORD PTR [rsp+0x38]
   14001c5ad:	add    rsp,0x20
   14001c5b1:	pop    rsi
   14001c5b2:	rex.W jmp QWORD PTR [rax+0x498]
   14001c5b9:	int3   
   14001c5ba:	int3   
   14001c5bb:	int3   
   14001c5bc:	int3   
   14001c5bd:	int3   
   14001c5be:	int3   
   14001c5bf:	int3   
   14001c5c0:	mov    QWORD PTR [rsp+0x18],rbp
   14001c5c5:	push   rsi
   14001c5c6:	sub    rsp,0x20
   14001c5ca:	mov    rax,QWORD PTR [rdx]
   14001c5cd:	mov    rsi,rdx
   14001c5d0:	mov    rbp,rcx
   14001c5d3:	mov    rdx,rcx
   14001c5d6:	mov    rcx,rsi
   14001c5d9:	call   QWORD PTR [rax+0x1b0]
   14001c5df:	test   al,al
   14001c5e1:	je     0x14001c639
   14001c5e3:	mov    QWORD PTR [rsp+0x30],rbx
   14001c5e8:	mov    rbx,rbp
   14001c5eb:	test   rbp,rbp
   14001c5ee:	je     0x14001c634
   14001c5f0:	mov    QWORD PTR [rsp+0x38],rdi
   14001c5f5:	mov    rdi,QWORD PTR [rbx+0x10]
   14001c5f9:	test   rdi,rdi
   14001c5fc:	je     0x14001c626
   14001c5fe:	mov    rax,QWORD PTR [rsi]
   14001c601:	mov    rdx,rdi
   14001c604:	mov    rcx,rsi
   14001c607:	call   QWORD PTR [rax+0x8]
   14001c60a:	test   al,al
   14001c60c:	je     0x14001c61a
   14001c60e:	mov    rax,QWORD PTR [rdi]
   14001c611:	mov    rdx,rsi
   14001c614:	mov    rcx,rdi
   14001c617:	call   QWORD PTR [rax+0x28]
   14001c61a:	mov    rax,QWORD PTR [rsi]
   14001c61d:	mov    rdx,rdi
   14001c620:	mov    rcx,rsi
   14001c623:	call   QWORD PTR [rax+0x10]
   14001c626:	mov    rbx,QWORD PTR [rbx+0x18]
   14001c62a:	test   rbx,rbx
   14001c62d:	jne    0x14001c5f5
   14001c62f:	mov    rdi,QWORD PTR [rsp+0x38]
   14001c634:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c639:	mov    rax,QWORD PTR [rsi]
   14001c63c:	mov    rdx,rbp
   14001c63f:	mov    rcx,rsi
   14001c642:	mov    rbp,QWORD PTR [rsp+0x40]
   14001c647:	add    rsp,0x20
   14001c64b:	pop    rsi
   14001c64c:	rex.W jmp QWORD PTR [rax+0x490]
   14001c653:	int3   
   14001c654:	int3   
   14001c655:	int3   
   14001c656:	int3   
   14001c657:	int3   
   14001c658:	int3   
   14001c659:	int3   
   14001c65a:	int3   
   14001c65b:	int3   
   14001c65c:	int3   
   14001c65d:	int3   
   14001c65e:	int3   
   14001c65f:	int3   
   14001c660:	mov    QWORD PTR [rsp+0x10],rbx
   14001c665:	push   rsi
   14001c666:	sub    rsp,0x20
   14001c66a:	mov    rax,QWORD PTR [rdx]
   14001c66d:	mov    rbx,rdx
   14001c670:	mov    rsi,rcx
   14001c673:	mov    rdx,rcx
   14001c676:	mov    rcx,rbx
   14001c679:	call   QWORD PTR [rax+0x1a8]
   14001c67f:	test   al,al
   14001c681:	je     0x14001c6be
   14001c683:	mov    QWORD PTR [rsp+0x30],rdi
   14001c688:	mov    rdi,QWORD PTR [rsi+0x10]
   14001c68c:	test   rdi,rdi
   14001c68f:	je     0x14001c6b9
   14001c691:	mov    rax,QWORD PTR [rbx]
   14001c694:	mov    rdx,rdi
   14001c697:	mov    rcx,rbx
   14001c69a:	call   QWORD PTR [rax+0x8]
   14001c69d:	test   al,al
   14001c69f:	je     0x14001c6ad
   14001c6a1:	mov    rax,QWORD PTR [rdi]
   14001c6a4:	mov    rdx,rbx
   14001c6a7:	mov    rcx,rdi
   14001c6aa:	call   QWORD PTR [rax+0x28]
   14001c6ad:	mov    rax,QWORD PTR [rbx]
   14001c6b0:	mov    rdx,rdi
   14001c6b3:	mov    rcx,rbx
   14001c6b6:	call   QWORD PTR [rax+0x10]
   14001c6b9:	mov    rdi,QWORD PTR [rsp+0x30]
   14001c6be:	mov    rax,QWORD PTR [rbx]
   14001c6c1:	mov    rdx,rsi
   14001c6c4:	mov    rcx,rbx
   14001c6c7:	mov    rbx,QWORD PTR [rsp+0x38]
   14001c6cc:	add    rsp,0x20
   14001c6d0:	pop    rsi
   14001c6d1:	rex.W jmp QWORD PTR [rax+0x488]
   14001c6d8:	int3   
   14001c6d9:	int3   
   14001c6da:	int3   
   14001c6db:	int3   
   14001c6dc:	int3   
   14001c6dd:	int3   
   14001c6de:	int3   
   14001c6df:	int3   
   14001c6e0:	mov    QWORD PTR [rsp+0x10],rbx
   14001c6e5:	push   rsi
   14001c6e6:	sub    rsp,0x20
   14001c6ea:	mov    rax,QWORD PTR [rdx]
   14001c6ed:	mov    rbx,rdx
   14001c6f0:	mov    rsi,rcx
   14001c6f3:	mov    rdx,rcx
   14001c6f6:	mov    rcx,rbx
   14001c6f9:	call   QWORD PTR [rax+0x1a0]
   14001c6ff:	test   al,al
   14001c701:	je     0x14001c73e
   14001c703:	mov    QWORD PTR [rsp+0x30],rdi
   14001c708:	mov    rdi,QWORD PTR [rsi+0x10]
   14001c70c:	test   rdi,rdi
   14001c70f:	je     0x14001c739
   14001c711:	mov    rax,QWORD PTR [rbx]
   14001c714:	mov    rdx,rdi
   14001c717:	mov    rcx,rbx
   14001c71a:	call   QWORD PTR [rax+0x8]
   14001c71d:	test   al,al
   14001c71f:	je     0x14001c72d
   14001c721:	mov    rax,QWORD PTR [rdi]
   14001c724:	mov    rdx,rbx
   14001c727:	mov    rcx,rdi
   14001c72a:	call   QWORD PTR [rax+0x28]
   14001c72d:	mov    rax,QWORD PTR [rbx]
   14001c730:	mov    rdx,rdi
   14001c733:	mov    rcx,rbx
   14001c736:	call   QWORD PTR [rax+0x10]
   14001c739:	mov    rdi,QWORD PTR [rsp+0x30]
   14001c73e:	mov    rax,QWORD PTR [rbx]
   14001c741:	mov    rdx,rsi
   14001c744:	mov    rcx,rbx
   14001c747:	mov    rbx,QWORD PTR [rsp+0x38]
   14001c74c:	add    rsp,0x20
   14001c750:	pop    rsi
   14001c751:	rex.W jmp QWORD PTR [rax+0x480]
   14001c758:	int3   
   14001c759:	int3   
   14001c75a:	int3   
   14001c75b:	int3   
   14001c75c:	int3   
   14001c75d:	int3   
   14001c75e:	int3   
   14001c75f:	int3   
   14001c760:	mov    QWORD PTR [rsp+0x10],rbx
   14001c765:	push   rsi
   14001c766:	sub    rsp,0x20
   14001c76a:	mov    rax,QWORD PTR [rdx]
   14001c76d:	mov    rbx,rdx
   14001c770:	mov    rsi,rcx
   14001c773:	mov    rdx,rcx
   14001c776:	mov    rcx,rbx
   14001c779:	call   QWORD PTR [rax+0x198]
   14001c77f:	test   al,al
   14001c781:	je     0x14001c7be
   14001c783:	mov    QWORD PTR [rsp+0x30],rdi
   14001c788:	mov    rdi,QWORD PTR [rsi+0x10]
   14001c78c:	test   rdi,rdi
   14001c78f:	je     0x14001c7b9
   14001c791:	mov    rax,QWORD PTR [rbx]
   14001c794:	mov    rdx,rdi
   14001c797:	mov    rcx,rbx
   14001c79a:	call   QWORD PTR [rax+0x8]
   14001c79d:	test   al,al
   14001c79f:	je     0x14001c7ad
   14001c7a1:	mov    rax,QWORD PTR [rdi]
   14001c7a4:	mov    rdx,rbx
   14001c7a7:	mov    rcx,rdi
   14001c7aa:	call   QWORD PTR [rax+0x28]
   14001c7ad:	mov    rax,QWORD PTR [rbx]
   14001c7b0:	mov    rdx,rdi
   14001c7b3:	mov    rcx,rbx
   14001c7b6:	call   QWORD PTR [rax+0x10]
   14001c7b9:	mov    rdi,QWORD PTR [rsp+0x30]
   14001c7be:	mov    rax,QWORD PTR [rbx]
   14001c7c1:	mov    rdx,rsi
   14001c7c4:	mov    rcx,rbx
   14001c7c7:	mov    rbx,QWORD PTR [rsp+0x38]
   14001c7cc:	add    rsp,0x20
   14001c7d0:	pop    rsi
   14001c7d1:	rex.W jmp QWORD PTR [rax+0x478]
   14001c7d8:	int3   
   14001c7d9:	int3   
   14001c7da:	int3   
   14001c7db:	int3   
   14001c7dc:	int3   
   14001c7dd:	int3   
   14001c7de:	int3   
   14001c7df:	int3   
   14001c7e0:	mov    QWORD PTR [rsp+0x10],rbx
   14001c7e5:	push   rsi
   14001c7e6:	sub    rsp,0x20
   14001c7ea:	mov    rax,QWORD PTR [rdx]
   14001c7ed:	mov    rbx,rdx
   14001c7f0:	mov    rsi,rcx
   14001c7f3:	mov    rdx,rcx
   14001c7f6:	mov    rcx,rbx
   14001c7f9:	call   QWORD PTR [rax+0x190]
   14001c7ff:	test   al,al
   14001c801:	je     0x14001c83e
   14001c803:	mov    QWORD PTR [rsp+0x30],rdi
   14001c808:	mov    rdi,QWORD PTR [rsi+0x10]
   14001c80c:	test   rdi,rdi
   14001c80f:	je     0x14001c839
   14001c811:	mov    rax,QWORD PTR [rbx]
   14001c814:	mov    rdx,rdi
   14001c817:	mov    rcx,rbx
   14001c81a:	call   QWORD PTR [rax+0x8]
   14001c81d:	test   al,al
   14001c81f:	je     0x14001c82d
   14001c821:	mov    rax,QWORD PTR [rdi]
   14001c824:	mov    rdx,rbx
   14001c827:	mov    rcx,rdi
   14001c82a:	call   QWORD PTR [rax+0x28]
   14001c82d:	mov    rax,QWORD PTR [rbx]
   14001c830:	mov    rdx,rdi
   14001c833:	mov    rcx,rbx
   14001c836:	call   QWORD PTR [rax+0x10]
   14001c839:	mov    rdi,QWORD PTR [rsp+0x30]
   14001c83e:	mov    rax,QWORD PTR [rbx]
   14001c841:	mov    rdx,rsi
   14001c844:	mov    rcx,rbx
   14001c847:	mov    rbx,QWORD PTR [rsp+0x38]
   14001c84c:	add    rsp,0x20
   14001c850:	pop    rsi
   14001c851:	rex.W jmp QWORD PTR [rax+0x470]
   14001c858:	int3   
   14001c859:	int3   
   14001c85a:	int3   
   14001c85b:	int3   
   14001c85c:	int3   
   14001c85d:	int3   
   14001c85e:	int3   
   14001c85f:	int3   
   14001c860:	mov    QWORD PTR [rsp+0x10],rbx
   14001c865:	push   rsi
   14001c866:	sub    rsp,0x20
   14001c86a:	mov    rax,QWORD PTR [rdx]
   14001c86d:	mov    rbx,rdx
   14001c870:	mov    rsi,rcx
   14001c873:	mov    rdx,rcx
   14001c876:	mov    rcx,rbx
   14001c879:	call   QWORD PTR [rax+0x188]
   14001c87f:	test   al,al
   14001c881:	je     0x14001c8be
   14001c883:	mov    QWORD PTR [rsp+0x30],rdi
   14001c888:	mov    rdi,QWORD PTR [rsi+0x10]
   14001c88c:	test   rdi,rdi
   14001c88f:	je     0x14001c8b9
   14001c891:	mov    rax,QWORD PTR [rbx]
   14001c894:	mov    rdx,rdi
   14001c897:	mov    rcx,rbx
   14001c89a:	call   QWORD PTR [rax+0x8]
   14001c89d:	test   al,al
   14001c89f:	je     0x14001c8ad
   14001c8a1:	mov    rax,QWORD PTR [rdi]
   14001c8a4:	mov    rdx,rbx
   14001c8a7:	mov    rcx,rdi
   14001c8aa:	call   QWORD PTR [rax+0x28]
   14001c8ad:	mov    rax,QWORD PTR [rbx]
   14001c8b0:	mov    rdx,rdi
   14001c8b3:	mov    rcx,rbx
   14001c8b6:	call   QWORD PTR [rax+0x10]
   14001c8b9:	mov    rdi,QWORD PTR [rsp+0x30]
   14001c8be:	mov    rax,QWORD PTR [rbx]
   14001c8c1:	mov    rdx,rsi
   14001c8c4:	mov    rcx,rbx
   14001c8c7:	mov    rbx,QWORD PTR [rsp+0x38]
   14001c8cc:	add    rsp,0x20
   14001c8d0:	pop    rsi
   14001c8d1:	rex.W jmp QWORD PTR [rax+0x468]
   14001c8d8:	int3   
   14001c8d9:	int3   
   14001c8da:	int3   
   14001c8db:	int3   
   14001c8dc:	int3   
   14001c8dd:	int3   
   14001c8de:	int3   
   14001c8df:	int3   
   14001c8e0:	mov    QWORD PTR [rsp+0x10],rbx
   14001c8e5:	push   rsi
   14001c8e6:	sub    rsp,0x20
   14001c8ea:	mov    rax,QWORD PTR [rdx]
   14001c8ed:	mov    rbx,rdx
   14001c8f0:	mov    rsi,rcx
   14001c8f3:	mov    rdx,rcx
   14001c8f6:	mov    rcx,rbx
   14001c8f9:	call   QWORD PTR [rax+0x180]
   14001c8ff:	test   al,al
   14001c901:	je     0x14001c93e
   14001c903:	mov    QWORD PTR [rsp+0x30],rdi
   14001c908:	mov    rdi,QWORD PTR [rsi+0x10]
   14001c90c:	test   rdi,rdi
   14001c90f:	je     0x14001c939
   14001c911:	mov    rax,QWORD PTR [rbx]
   14001c914:	mov    rdx,rdi
   14001c917:	mov    rcx,rbx
   14001c91a:	call   QWORD PTR [rax+0x8]
   14001c91d:	test   al,al
   14001c91f:	je     0x14001c92d
   14001c921:	mov    rax,QWORD PTR [rdi]
   14001c924:	mov    rdx,rbx
   14001c927:	mov    rcx,rdi
   14001c92a:	call   QWORD PTR [rax+0x28]
   14001c92d:	mov    rax,QWORD PTR [rbx]
   14001c930:	mov    rdx,rdi
   14001c933:	mov    rcx,rbx
   14001c936:	call   QWORD PTR [rax+0x10]
   14001c939:	mov    rdi,QWORD PTR [rsp+0x30]
   14001c93e:	mov    rax,QWORD PTR [rbx]
   14001c941:	mov    rdx,rsi
   14001c944:	mov    rcx,rbx
   14001c947:	mov    rbx,QWORD PTR [rsp+0x38]
   14001c94c:	add    rsp,0x20
   14001c950:	pop    rsi
   14001c951:	rex.W jmp QWORD PTR [rax+0x460]
   14001c958:	int3   
   14001c959:	int3   
   14001c95a:	int3   
   14001c95b:	int3   
   14001c95c:	int3   
   14001c95d:	int3   
   14001c95e:	int3   
   14001c95f:	int3   
   14001c960:	mov    QWORD PTR [rsp+0x10],rbx
   14001c965:	push   rsi
   14001c966:	sub    rsp,0x20
   14001c96a:	mov    rax,QWORD PTR [rdx]
   14001c96d:	mov    rbx,rdx
   14001c970:	mov    rsi,rcx
   14001c973:	mov    rdx,rcx
   14001c976:	mov    rcx,rbx
   14001c979:	call   QWORD PTR [rax+0x178]
   14001c97f:	test   al,al
   14001c981:	je     0x14001c9be
   14001c983:	mov    QWORD PTR [rsp+0x30],rdi
   14001c988:	mov    rdi,QWORD PTR [rsi+0x10]
   14001c98c:	test   rdi,rdi
   14001c98f:	je     0x14001c9b9
   14001c991:	mov    rax,QWORD PTR [rbx]
   14001c994:	mov    rdx,rdi
   14001c997:	mov    rcx,rbx
   14001c99a:	call   QWORD PTR [rax+0x8]
   14001c99d:	test   al,al
   14001c99f:	je     0x14001c9ad
   14001c9a1:	mov    rax,QWORD PTR [rdi]
   14001c9a4:	mov    rdx,rbx
   14001c9a7:	mov    rcx,rdi
   14001c9aa:	call   QWORD PTR [rax+0x28]
   14001c9ad:	mov    rax,QWORD PTR [rbx]
   14001c9b0:	mov    rdx,rdi
   14001c9b3:	mov    rcx,rbx
   14001c9b6:	call   QWORD PTR [rax+0x10]
   14001c9b9:	mov    rdi,QWORD PTR [rsp+0x30]
   14001c9be:	mov    rax,QWORD PTR [rbx]
   14001c9c1:	mov    rdx,rsi
   14001c9c4:	mov    rcx,rbx
   14001c9c7:	mov    rbx,QWORD PTR [rsp+0x38]
   14001c9cc:	add    rsp,0x20
   14001c9d0:	pop    rsi
   14001c9d1:	rex.W jmp QWORD PTR [rax+0x458]
   14001c9d8:	int3   
   14001c9d9:	int3   
   14001c9da:	int3   
   14001c9db:	int3   
   14001c9dc:	int3   
   14001c9dd:	int3   
   14001c9de:	int3   
   14001c9df:	int3   
   14001c9e0:	mov    QWORD PTR [rsp+0x10],rbx
   14001c9e5:	push   rsi
   14001c9e6:	sub    rsp,0x20
   14001c9ea:	mov    rax,QWORD PTR [rdx]
   14001c9ed:	mov    rbx,rdx
   14001c9f0:	mov    rsi,rcx
   14001c9f3:	mov    rdx,rcx
   14001c9f6:	mov    rcx,rbx
   14001c9f9:	call   QWORD PTR [rax+0x170]
   14001c9ff:	test   al,al
   14001ca01:	je     0x14001ca3e
   14001ca03:	mov    QWORD PTR [rsp+0x30],rdi
   14001ca08:	mov    rdi,QWORD PTR [rsi+0x10]
   14001ca0c:	test   rdi,rdi
   14001ca0f:	je     0x14001ca39
   14001ca11:	mov    rax,QWORD PTR [rbx]
   14001ca14:	mov    rdx,rdi
   14001ca17:	mov    rcx,rbx
   14001ca1a:	call   QWORD PTR [rax+0x8]
   14001ca1d:	test   al,al
   14001ca1f:	je     0x14001ca2d
   14001ca21:	mov    rax,QWORD PTR [rdi]
   14001ca24:	mov    rdx,rbx
   14001ca27:	mov    rcx,rdi
   14001ca2a:	call   QWORD PTR [rax+0x28]
   14001ca2d:	mov    rax,QWORD PTR [rbx]
   14001ca30:	mov    rdx,rdi
   14001ca33:	mov    rcx,rbx
   14001ca36:	call   QWORD PTR [rax+0x10]
   14001ca39:	mov    rdi,QWORD PTR [rsp+0x30]
   14001ca3e:	mov    rax,QWORD PTR [rbx]
   14001ca41:	mov    rdx,rsi
   14001ca44:	mov    rcx,rbx
   14001ca47:	mov    rbx,QWORD PTR [rsp+0x38]
   14001ca4c:	add    rsp,0x20
   14001ca50:	pop    rsi
   14001ca51:	rex.W jmp QWORD PTR [rax+0x450]
   14001ca58:	int3   
   14001ca59:	int3   
   14001ca5a:	int3   
   14001ca5b:	int3   
   14001ca5c:	int3   
   14001ca5d:	int3   
   14001ca5e:	int3   
   14001ca5f:	int3   
   14001ca60:	mov    QWORD PTR [rsp+0x10],rbx
   14001ca65:	push   rsi
   14001ca66:	sub    rsp,0x20
   14001ca6a:	mov    rax,QWORD PTR [rdx]
   14001ca6d:	mov    rbx,rdx
   14001ca70:	mov    rsi,rcx
   14001ca73:	mov    rdx,rcx
   14001ca76:	mov    rcx,rbx
   14001ca79:	call   QWORD PTR [rax+0x168]
   14001ca7f:	test   al,al
   14001ca81:	je     0x14001cabe
   14001ca83:	mov    QWORD PTR [rsp+0x30],rdi
   14001ca88:	mov    rdi,QWORD PTR [rsi+0x10]
   14001ca8c:	test   rdi,rdi
   14001ca8f:	je     0x14001cab9
   14001ca91:	mov    rax,QWORD PTR [rbx]
   14001ca94:	mov    rdx,rdi
   14001ca97:	mov    rcx,rbx
   14001ca9a:	call   QWORD PTR [rax+0x8]
   14001ca9d:	test   al,al
   14001ca9f:	je     0x14001caad
   14001caa1:	mov    rax,QWORD PTR [rdi]
   14001caa4:	mov    rdx,rbx
   14001caa7:	mov    rcx,rdi
   14001caaa:	call   QWORD PTR [rax+0x28]
   14001caad:	mov    rax,QWORD PTR [rbx]
   14001cab0:	mov    rdx,rdi
   14001cab3:	mov    rcx,rbx
   14001cab6:	call   QWORD PTR [rax+0x10]
   14001cab9:	mov    rdi,QWORD PTR [rsp+0x30]
   14001cabe:	mov    rax,QWORD PTR [rbx]
   14001cac1:	mov    rdx,rsi
   14001cac4:	mov    rcx,rbx
   14001cac7:	mov    rbx,QWORD PTR [rsp+0x38]
   14001cacc:	add    rsp,0x20
   14001cad0:	pop    rsi
   14001cad1:	rex.W jmp QWORD PTR [rax+0x448]
   14001cad8:	int3   
   14001cad9:	int3   
   14001cada:	int3   
   14001cadb:	int3   
   14001cadc:	int3   
   14001cadd:	int3   
   14001cade:	int3   
   14001cadf:	int3   
   14001cae0:	mov    QWORD PTR [rsp+0x10],rbx
   14001cae5:	push   rsi
   14001cae6:	sub    rsp,0x20
   14001caea:	mov    rax,QWORD PTR [rdx]
   14001caed:	mov    rbx,rdx
   14001caf0:	mov    rsi,rcx
   14001caf3:	mov    rdx,rcx
   14001caf6:	mov    rcx,rbx
   14001caf9:	call   QWORD PTR [rax+0x160]
   14001caff:	test   al,al
   14001cb01:	je     0x14001cb3e
   14001cb03:	mov    QWORD PTR [rsp+0x30],rdi
   14001cb08:	mov    rdi,QWORD PTR [rsi+0x10]
   14001cb0c:	test   rdi,rdi
   14001cb0f:	je     0x14001cb39
   14001cb11:	mov    rax,QWORD PTR [rbx]
   14001cb14:	mov    rdx,rdi
   14001cb17:	mov    rcx,rbx
   14001cb1a:	call   QWORD PTR [rax+0x8]
   14001cb1d:	test   al,al
   14001cb1f:	je     0x14001cb2d
   14001cb21:	mov    rax,QWORD PTR [rdi]
   14001cb24:	mov    rdx,rbx
   14001cb27:	mov    rcx,rdi
   14001cb2a:	call   QWORD PTR [rax+0x28]
   14001cb2d:	mov    rax,QWORD PTR [rbx]
   14001cb30:	mov    rdx,rdi
   14001cb33:	mov    rcx,rbx
   14001cb36:	call   QWORD PTR [rax+0x10]
   14001cb39:	mov    rdi,QWORD PTR [rsp+0x30]
   14001cb3e:	mov    rax,QWORD PTR [rbx]
   14001cb41:	mov    rdx,rsi
   14001cb44:	mov    rcx,rbx
   14001cb47:	mov    rbx,QWORD PTR [rsp+0x38]
   14001cb4c:	add    rsp,0x20
   14001cb50:	pop    rsi
   14001cb51:	rex.W jmp QWORD PTR [rax+0x440]
   14001cb58:	int3   
   14001cb59:	int3   
   14001cb5a:	int3   
   14001cb5b:	int3   
   14001cb5c:	int3   
   14001cb5d:	int3   
   14001cb5e:	int3   
   14001cb5f:	int3   
   14001cb60:	mov    QWORD PTR [rsp+0x10],rbx
   14001cb65:	push   rsi
   14001cb66:	sub    rsp,0x20
   14001cb6a:	mov    rax,QWORD PTR [rdx]
   14001cb6d:	mov    rbx,rdx
   14001cb70:	mov    rsi,rcx
   14001cb73:	mov    rdx,rcx
   14001cb76:	mov    rcx,rbx
   14001cb79:	call   QWORD PTR [rax+0x158]
   14001cb7f:	test   al,al
   14001cb81:	je     0x14001cbbe
   14001cb83:	mov    QWORD PTR [rsp+0x30],rdi
   14001cb88:	mov    rdi,QWORD PTR [rsi+0x10]
   14001cb8c:	test   rdi,rdi
   14001cb8f:	je     0x14001cbb9
   14001cb91:	mov    rax,QWORD PTR [rbx]
   14001cb94:	mov    rdx,rdi
   14001cb97:	mov    rcx,rbx
   14001cb9a:	call   QWORD PTR [rax+0x8]
   14001cb9d:	test   al,al
   14001cb9f:	je     0x14001cbad
   14001cba1:	mov    rax,QWORD PTR [rdi]
   14001cba4:	mov    rdx,rbx
   14001cba7:	mov    rcx,rdi
   14001cbaa:	call   QWORD PTR [rax+0x28]
   14001cbad:	mov    rax,QWORD PTR [rbx]
   14001cbb0:	mov    rdx,rdi
   14001cbb3:	mov    rcx,rbx
   14001cbb6:	call   QWORD PTR [rax+0x10]
   14001cbb9:	mov    rdi,QWORD PTR [rsp+0x30]
   14001cbbe:	mov    rax,QWORD PTR [rbx]
   14001cbc1:	mov    rdx,rsi
   14001cbc4:	mov    rcx,rbx
   14001cbc7:	mov    rbx,QWORD PTR [rsp+0x38]
   14001cbcc:	add    rsp,0x20
   14001cbd0:	pop    rsi
   14001cbd1:	rex.W jmp QWORD PTR [rax+0x438]
   14001cbd8:	int3   
   14001cbd9:	int3   
   14001cbda:	int3   
   14001cbdb:	int3   
   14001cbdc:	int3   
   14001cbdd:	int3   
   14001cbde:	int3   
   14001cbdf:	int3   
   14001cbe0:	mov    QWORD PTR [rsp+0x10],rbx
   14001cbe5:	push   rsi
   14001cbe6:	sub    rsp,0x20
   14001cbea:	mov    rax,QWORD PTR [rdx]
   14001cbed:	mov    rbx,rdx
   14001cbf0:	mov    rsi,rcx
   14001cbf3:	mov    rdx,rcx
   14001cbf6:	mov    rcx,rbx
   14001cbf9:	call   QWORD PTR [rax+0x150]
   14001cbff:	test   al,al
   14001cc01:	je     0x14001cc6f
   14001cc03:	mov    QWORD PTR [rsp+0x30],rdi
   14001cc08:	mov    rdi,QWORD PTR [rsi+0x10]
   14001cc0c:	test   rdi,rdi
   14001cc0f:	je     0x14001cc39
   14001cc11:	mov    rax,QWORD PTR [rbx]
   14001cc14:	mov    rdx,rdi
   14001cc17:	mov    rcx,rbx
   14001cc1a:	call   QWORD PTR [rax+0x8]
   14001cc1d:	test   al,al
   14001cc1f:	je     0x14001cc2d
   14001cc21:	mov    rax,QWORD PTR [rdi]
   14001cc24:	mov    rdx,rbx
   14001cc27:	mov    rcx,rdi
   14001cc2a:	call   QWORD PTR [rax+0x28]
   14001cc2d:	mov    rax,QWORD PTR [rbx]
   14001cc30:	mov    rdx,rdi
   14001cc33:	mov    rcx,rbx
   14001cc36:	call   QWORD PTR [rax+0x10]
   14001cc39:	mov    rdi,QWORD PTR [rsi+0x20]
   14001cc3d:	test   rdi,rdi
   14001cc40:	je     0x14001cc6a
   14001cc42:	mov    rax,QWORD PTR [rbx]
   14001cc45:	mov    rdx,rdi
   14001cc48:	mov    rcx,rbx
   14001cc4b:	call   QWORD PTR [rax+0x8]
   14001cc4e:	test   al,al
   14001cc50:	je     0x14001cc5e
   14001cc52:	mov    rax,QWORD PTR [rdi]
   14001cc55:	mov    rdx,rbx
   14001cc58:	mov    rcx,rdi
   14001cc5b:	call   QWORD PTR [rax+0x28]
   14001cc5e:	mov    rax,QWORD PTR [rbx]
   14001cc61:	mov    rdx,rdi
   14001cc64:	mov    rcx,rbx
   14001cc67:	call   QWORD PTR [rax+0x10]
   14001cc6a:	mov    rdi,QWORD PTR [rsp+0x30]
   14001cc6f:	mov    rax,QWORD PTR [rbx]
   14001cc72:	mov    rdx,rsi
   14001cc75:	mov    rcx,rbx
   14001cc78:	mov    rbx,QWORD PTR [rsp+0x38]
   14001cc7d:	add    rsp,0x20
   14001cc81:	pop    rsi
   14001cc82:	rex.W jmp QWORD PTR [rax+0x430]
   14001cc89:	int3   
   14001cc8a:	int3   
   14001cc8b:	int3   
   14001cc8c:	int3   
   14001cc8d:	int3   
   14001cc8e:	int3   
   14001cc8f:	int3   
   14001cc90:	mov    QWORD PTR [rsp+0x10],rbx
   14001cc95:	push   rsi
   14001cc96:	sub    rsp,0x20
   14001cc9a:	mov    rax,QWORD PTR [rdx]
   14001cc9d:	mov    rbx,rdx
   14001cca0:	mov    rsi,rcx
   14001cca3:	mov    rdx,rcx
   14001cca6:	mov    rcx,rbx
   14001cca9:	call   QWORD PTR [rax+0x148]
   14001ccaf:	test   al,al
   14001ccb1:	je     0x14001cd54
   14001ccb7:	mov    QWORD PTR [rsp+0x30],rdi
   14001ccbc:	mov    rdi,QWORD PTR [rsi+0x10]
   14001ccc0:	test   rdi,rdi
   14001ccc3:	je     0x14001cced
   14001ccc5:	mov    rax,QWORD PTR [rbx]
   14001ccc8:	mov    rdx,rdi
   14001cccb:	mov    rcx,rbx
   14001ccce:	call   QWORD PTR [rax+0x8]
   14001ccd1:	test   al,al
   14001ccd3:	je     0x14001cce1
   14001ccd5:	mov    rax,QWORD PTR [rdi]
   14001ccd8:	mov    rdx,rbx
   14001ccdb:	mov    rcx,rdi
   14001ccde:	call   QWORD PTR [rax+0x28]
   14001cce1:	mov    rax,QWORD PTR [rbx]
   14001cce4:	mov    rdx,rdi
   14001cce7:	mov    rcx,rbx
   14001ccea:	call   QWORD PTR [rax+0x10]
   14001cced:	mov    rdi,QWORD PTR [rsi+0x18]
   14001ccf1:	test   rdi,rdi
   14001ccf4:	je     0x14001cd1e
   14001ccf6:	mov    rax,QWORD PTR [rbx]
   14001ccf9:	mov    rdx,rdi
   14001ccfc:	mov    rcx,rbx
   14001ccff:	call   QWORD PTR [rax+0x8]
   14001cd02:	test   al,al
   14001cd04:	je     0x14001cd12
   14001cd06:	mov    rax,QWORD PTR [rdi]
   14001cd09:	mov    rdx,rbx
   14001cd0c:	mov    rcx,rdi
   14001cd0f:	call   QWORD PTR [rax+0x28]
   14001cd12:	mov    rax,QWORD PTR [rbx]
   14001cd15:	mov    rdx,rdi
   14001cd18:	mov    rcx,rbx
   14001cd1b:	call   QWORD PTR [rax+0x10]
   14001cd1e:	mov    rdi,QWORD PTR [rsi+0x20]
   14001cd22:	test   rdi,rdi
   14001cd25:	je     0x14001cd4f
   14001cd27:	mov    rax,QWORD PTR [rbx]
   14001cd2a:	mov    rdx,rdi
   14001cd2d:	mov    rcx,rbx
   14001cd30:	call   QWORD PTR [rax+0x8]
   14001cd33:	test   al,al
   14001cd35:	je     0x14001cd43
   14001cd37:	mov    rax,QWORD PTR [rdi]
   14001cd3a:	mov    rdx,rbx
   14001cd3d:	mov    rcx,rdi
   14001cd40:	call   QWORD PTR [rax+0x28]
   14001cd43:	mov    rax,QWORD PTR [rbx]
   14001cd46:	mov    rdx,rdi
   14001cd49:	mov    rcx,rbx
   14001cd4c:	call   QWORD PTR [rax+0x10]
   14001cd4f:	mov    rdi,QWORD PTR [rsp+0x30]
   14001cd54:	mov    rax,QWORD PTR [rbx]
   14001cd57:	mov    rdx,rsi
   14001cd5a:	mov    rcx,rbx
   14001cd5d:	mov    rbx,QWORD PTR [rsp+0x38]
   14001cd62:	add    rsp,0x20
   14001cd66:	pop    rsi
   14001cd67:	rex.W jmp QWORD PTR [rax+0x428]
   14001cd6e:	int3   
   14001cd6f:	int3   
   14001cd70:	mov    QWORD PTR [rsp+0x10],rbx
   14001cd75:	push   rsi
   14001cd76:	sub    rsp,0x20
   14001cd7a:	mov    rax,QWORD PTR [rdx]
   14001cd7d:	mov    rbx,rdx
   14001cd80:	mov    rsi,rcx
   14001cd83:	mov    rdx,rcx
   14001cd86:	mov    rcx,rbx
   14001cd89:	call   QWORD PTR [rax+0x140]
   14001cd8f:	test   al,al
   14001cd91:	je     0x14001cdff
   14001cd93:	mov    QWORD PTR [rsp+0x30],rdi
   14001cd98:	mov    rdi,QWORD PTR [rsi+0x10]
   14001cd9c:	test   rdi,rdi
   14001cd9f:	je     0x14001cdc9
   14001cda1:	mov    rax,QWORD PTR [rbx]
   14001cda4:	mov    rdx,rdi
   14001cda7:	mov    rcx,rbx
   14001cdaa:	call   QWORD PTR [rax+0x8]
   14001cdad:	test   al,al
   14001cdaf:	je     0x14001cdbd
   14001cdb1:	mov    rax,QWORD PTR [rdi]
   14001cdb4:	mov    rdx,rbx
   14001cdb7:	mov    rcx,rdi
   14001cdba:	call   QWORD PTR [rax+0x28]
   14001cdbd:	mov    rax,QWORD PTR [rbx]
   14001cdc0:	mov    rdx,rdi
   14001cdc3:	mov    rcx,rbx
   14001cdc6:	call   QWORD PTR [rax+0x10]
   14001cdc9:	mov    rdi,QWORD PTR [rsi+0x18]
   14001cdcd:	test   rdi,rdi
   14001cdd0:	je     0x14001cdfa
   14001cdd2:	mov    rax,QWORD PTR [rbx]
   14001cdd5:	mov    rdx,rdi
   14001cdd8:	mov    rcx,rbx
   14001cddb:	call   QWORD PTR [rax+0x8]
   14001cdde:	test   al,al
   14001cde0:	je     0x14001cdee
   14001cde2:	mov    rax,QWORD PTR [rdi]
   14001cde5:	mov    rdx,rbx
   14001cde8:	mov    rcx,rdi
   14001cdeb:	call   QWORD PTR [rax+0x28]
   14001cdee:	mov    rax,QWORD PTR [rbx]
   14001cdf1:	mov    rdx,rdi
   14001cdf4:	mov    rcx,rbx
   14001cdf7:	call   QWORD PTR [rax+0x10]
   14001cdfa:	mov    rdi,QWORD PTR [rsp+0x30]
   14001cdff:	mov    rax,QWORD PTR [rbx]
   14001ce02:	mov    rdx,rsi
   14001ce05:	mov    rcx,rbx
   14001ce08:	mov    rbx,QWORD PTR [rsp+0x38]
   14001ce0d:	add    rsp,0x20
   14001ce11:	pop    rsi
   14001ce12:	rex.W jmp QWORD PTR [rax+0x420]
   14001ce19:	int3   
   14001ce1a:	int3   
   14001ce1b:	int3   
   14001ce1c:	int3   
   14001ce1d:	int3   
   14001ce1e:	int3   
   14001ce1f:	int3   
   14001ce20:	mov    QWORD PTR [rsp+0x10],rbx
   14001ce25:	push   rsi
   14001ce26:	sub    rsp,0x20
   14001ce2a:	mov    rax,QWORD PTR [rdx]
   14001ce2d:	mov    rbx,rdx
   14001ce30:	mov    rsi,rcx
   14001ce33:	mov    rdx,rcx
   14001ce36:	mov    rcx,rbx
   14001ce39:	call   QWORD PTR [rax+0x138]
   14001ce3f:	test   al,al
   14001ce41:	je     0x14001ce7e
   14001ce43:	mov    QWORD PTR [rsp+0x30],rdi
   14001ce48:	mov    rdi,QWORD PTR [rsi+0x10]
   14001ce4c:	test   rdi,rdi
   14001ce4f:	je     0x14001ce79
   14001ce51:	mov    rax,QWORD PTR [rbx]
   14001ce54:	mov    rdx,rdi
   14001ce57:	mov    rcx,rbx
   14001ce5a:	call   QWORD PTR [rax+0x8]
   14001ce5d:	test   al,al
   14001ce5f:	je     0x14001ce6d
   14001ce61:	mov    rax,QWORD PTR [rdi]
   14001ce64:	mov    rdx,rbx
   14001ce67:	mov    rcx,rdi
   14001ce6a:	call   QWORD PTR [rax+0x28]
   14001ce6d:	mov    rax,QWORD PTR [rbx]
   14001ce70:	mov    rdx,rdi
   14001ce73:	mov    rcx,rbx
   14001ce76:	call   QWORD PTR [rax+0x10]
   14001ce79:	mov    rdi,QWORD PTR [rsp+0x30]
   14001ce7e:	mov    rax,QWORD PTR [rbx]
   14001ce81:	mov    rdx,rsi
   14001ce84:	mov    rcx,rbx
   14001ce87:	mov    rbx,QWORD PTR [rsp+0x38]
   14001ce8c:	add    rsp,0x20
   14001ce90:	pop    rsi
   14001ce91:	rex.W jmp QWORD PTR [rax+0x418]
   14001ce98:	int3   
   14001ce99:	int3   
   14001ce9a:	int3   
   14001ce9b:	int3   
   14001ce9c:	int3   
   14001ce9d:	int3   
   14001ce9e:	int3   
   14001ce9f:	int3   
   14001cea0:	mov    QWORD PTR [rsp+0x18],rbp
   14001cea5:	push   rsi
   14001cea6:	sub    rsp,0x20
   14001ceaa:	mov    rax,QWORD PTR [rdx]
   14001cead:	mov    rsi,rdx
   14001ceb0:	mov    rbp,rcx
   14001ceb3:	mov    rdx,rcx
   14001ceb6:	mov    rcx,rsi
   14001ceb9:	call   QWORD PTR [rax+0x130]
   14001cebf:	test   al,al
   14001cec1:	je     0x14001cf19
   14001cec3:	mov    QWORD PTR [rsp+0x30],rbx
   14001cec8:	mov    rbx,rbp
   14001cecb:	test   rbp,rbp
   14001cece:	je     0x14001cf14
   14001ced0:	mov    QWORD PTR [rsp+0x38],rdi
   14001ced5:	mov    rdi,QWORD PTR [rbx+0x10]
   14001ced9:	test   rdi,rdi
   14001cedc:	je     0x14001cf06
   14001cede:	mov    rax,QWORD PTR [rsi]
   14001cee1:	mov    rdx,rdi
   14001cee4:	mov    rcx,rsi
   14001cee7:	call   QWORD PTR [rax+0x8]
   14001ceea:	test   al,al
   14001ceec:	je     0x14001cefa
   14001ceee:	mov    rax,QWORD PTR [rdi]
   14001cef1:	mov    rdx,rsi
   14001cef4:	mov    rcx,rdi
   14001cef7:	call   QWORD PTR [rax+0x28]
   14001cefa:	mov    rax,QWORD PTR [rsi]
   14001cefd:	mov    rdx,rdi
   14001cf00:	mov    rcx,rsi
   14001cf03:	call   QWORD PTR [rax+0x10]
   14001cf06:	mov    rbx,QWORD PTR [rbx+0x18]
   14001cf0a:	test   rbx,rbx
   14001cf0d:	jne    0x14001ced5
   14001cf0f:	mov    rdi,QWORD PTR [rsp+0x38]
   14001cf14:	mov    rbx,QWORD PTR [rsp+0x30]
   14001cf19:	mov    rax,QWORD PTR [rsi]
   14001cf1c:	mov    rdx,rbp
   14001cf1f:	mov    rcx,rsi
   14001cf22:	mov    rbp,QWORD PTR [rsp+0x40]
   14001cf27:	add    rsp,0x20
   14001cf2b:	pop    rsi
   14001cf2c:	rex.W jmp QWORD PTR [rax+0x410]
   14001cf33:	int3   
   14001cf34:	int3   
   14001cf35:	int3   
   14001cf36:	int3   
   14001cf37:	int3   
   14001cf38:	int3   
   14001cf39:	int3   
   14001cf3a:	int3   
   14001cf3b:	int3   
   14001cf3c:	int3   
   14001cf3d:	int3   
   14001cf3e:	int3   
   14001cf3f:	int3   
   14001cf40:	mov    QWORD PTR [rsp+0x10],rbx
   14001cf45:	push   rsi
   14001cf46:	sub    rsp,0x20
   14001cf4a:	mov    rax,QWORD PTR [rdx]
   14001cf4d:	mov    rbx,rdx
   14001cf50:	mov    rsi,rcx
   14001cf53:	mov    rdx,rcx
   14001cf56:	mov    rcx,rbx
   14001cf59:	call   QWORD PTR [rax+0x128]
   14001cf5f:	test   al,al
   14001cf61:	je     0x14001cf9e
   14001cf63:	mov    QWORD PTR [rsp+0x30],rdi
   14001cf68:	mov    rdi,QWORD PTR [rsi+0x10]
   14001cf6c:	test   rdi,rdi
   14001cf6f:	je     0x14001cf99
   14001cf71:	mov    rax,QWORD PTR [rbx]
   14001cf74:	mov    rdx,rdi
   14001cf77:	mov    rcx,rbx
   14001cf7a:	call   QWORD PTR [rax+0x8]
   14001cf7d:	test   al,al
   14001cf7f:	je     0x14001cf8d
   14001cf81:	mov    rax,QWORD PTR [rdi]
   14001cf84:	mov    rdx,rbx
   14001cf87:	mov    rcx,rdi
   14001cf8a:	call   QWORD PTR [rax+0x28]
   14001cf8d:	mov    rax,QWORD PTR [rbx]
   14001cf90:	mov    rdx,rdi
   14001cf93:	mov    rcx,rbx
   14001cf96:	call   QWORD PTR [rax+0x10]
   14001cf99:	mov    rdi,QWORD PTR [rsp+0x30]
   14001cf9e:	mov    rax,QWORD PTR [rbx]
   14001cfa1:	mov    rdx,rsi
   14001cfa4:	mov    rcx,rbx
   14001cfa7:	mov    rbx,QWORD PTR [rsp+0x38]
   14001cfac:	add    rsp,0x20
   14001cfb0:	pop    rsi
   14001cfb1:	rex.W jmp QWORD PTR [rax+0x408]
   14001cfb8:	int3   
   14001cfb9:	int3   
   14001cfba:	int3   
   14001cfbb:	int3   
   14001cfbc:	int3   
   14001cfbd:	int3   
   14001cfbe:	int3   
   14001cfbf:	int3   
   14001cfc0:	mov    QWORD PTR [rsp+0x18],rbp
   14001cfc5:	push   rsi
   14001cfc6:	sub    rsp,0x20
   14001cfca:	mov    rax,QWORD PTR [rdx]
   14001cfcd:	mov    rsi,rdx
   14001cfd0:	mov    rbp,rcx
   14001cfd3:	mov    rdx,rcx
   14001cfd6:	mov    rcx,rsi
   14001cfd9:	call   QWORD PTR [rax+0x120]
   14001cfdf:	test   al,al
   14001cfe1:	je     0x14001d039
   14001cfe3:	mov    QWORD PTR [rsp+0x30],rbx
   14001cfe8:	mov    rbx,rbp
   14001cfeb:	test   rbp,rbp
   14001cfee:	je     0x14001d034
   14001cff0:	mov    QWORD PTR [rsp+0x38],rdi
   14001cff5:	mov    rdi,QWORD PTR [rbx+0x10]
   14001cff9:	test   rdi,rdi
   14001cffc:	je     0x14001d026
   14001cffe:	mov    rax,QWORD PTR [rsi]
   14001d001:	mov    rdx,rdi
   14001d004:	mov    rcx,rsi
   14001d007:	call   QWORD PTR [rax+0x8]
   14001d00a:	test   al,al
   14001d00c:	je     0x14001d01a
   14001d00e:	mov    rax,QWORD PTR [rdi]
   14001d011:	mov    rdx,rsi
   14001d014:	mov    rcx,rdi
   14001d017:	call   QWORD PTR [rax+0x28]
   14001d01a:	mov    rax,QWORD PTR [rsi]
   14001d01d:	mov    rdx,rdi
   14001d020:	mov    rcx,rsi
   14001d023:	call   QWORD PTR [rax+0x10]
   14001d026:	mov    rbx,QWORD PTR [rbx+0x18]
   14001d02a:	test   rbx,rbx
   14001d02d:	jne    0x14001cff5
   14001d02f:	mov    rdi,QWORD PTR [rsp+0x38]
   14001d034:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d039:	mov    rax,QWORD PTR [rsi]
   14001d03c:	mov    rdx,rbp
   14001d03f:	mov    rcx,rsi
   14001d042:	mov    rbp,QWORD PTR [rsp+0x40]
   14001d047:	add    rsp,0x20
   14001d04b:	pop    rsi
   14001d04c:	rex.W jmp QWORD PTR [rax+0x400]
   14001d053:	int3   
   14001d054:	int3   
   14001d055:	int3   
   14001d056:	int3   
   14001d057:	int3   
   14001d058:	int3   
   14001d059:	int3   
   14001d05a:	int3   
   14001d05b:	int3   
   14001d05c:	int3   
   14001d05d:	int3   
   14001d05e:	int3   
   14001d05f:	int3   
   14001d060:	mov    QWORD PTR [rsp+0x10],rbx
   14001d065:	push   rsi
   14001d066:	sub    rsp,0x20
   14001d06a:	mov    rax,QWORD PTR [rdx]
   14001d06d:	mov    rbx,rdx
   14001d070:	mov    rsi,rcx
   14001d073:	mov    rdx,rcx
   14001d076:	mov    rcx,rbx
   14001d079:	call   QWORD PTR [rax+0x118]
   14001d07f:	test   al,al
   14001d081:	je     0x14001d0be
   14001d083:	mov    QWORD PTR [rsp+0x30],rdi
   14001d088:	mov    rdi,QWORD PTR [rsi+0x20]
   14001d08c:	test   rdi,rdi
   14001d08f:	je     0x14001d0b9
   14001d091:	mov    rax,QWORD PTR [rbx]
   14001d094:	mov    rdx,rdi
   14001d097:	mov    rcx,rbx
   14001d09a:	call   QWORD PTR [rax+0x8]
   14001d09d:	test   al,al
   14001d09f:	je     0x14001d0ad
   14001d0a1:	mov    rax,QWORD PTR [rdi]
   14001d0a4:	mov    rdx,rbx
   14001d0a7:	mov    rcx,rdi
   14001d0aa:	call   QWORD PTR [rax+0x28]
   14001d0ad:	mov    rax,QWORD PTR [rbx]
   14001d0b0:	mov    rdx,rdi
   14001d0b3:	mov    rcx,rbx
   14001d0b6:	call   QWORD PTR [rax+0x10]
   14001d0b9:	mov    rdi,QWORD PTR [rsp+0x30]
   14001d0be:	mov    rax,QWORD PTR [rbx]
   14001d0c1:	mov    rdx,rsi
   14001d0c4:	mov    rcx,rbx
   14001d0c7:	mov    rbx,QWORD PTR [rsp+0x38]
   14001d0cc:	add    rsp,0x20
   14001d0d0:	pop    rsi
   14001d0d1:	rex.W jmp QWORD PTR [rax+0x3f8]
   14001d0d8:	int3   
   14001d0d9:	int3   
   14001d0da:	int3   
   14001d0db:	int3   
   14001d0dc:	int3   
   14001d0dd:	int3   
   14001d0de:	int3   
   14001d0df:	int3   
   14001d0e0:	mov    QWORD PTR [rsp+0x8],rbx
   14001d0e5:	push   rdi
   14001d0e6:	sub    rsp,0x20
   14001d0ea:	mov    rax,QWORD PTR [rdx]
   14001d0ed:	mov    rdi,rdx
   14001d0f0:	mov    rbx,rcx
   14001d0f3:	mov    rdx,rcx
   14001d0f6:	mov    rcx,rdi
   14001d0f9:	call   QWORD PTR [rax+0x110]
   14001d0ff:	mov    r11,QWORD PTR [rdi]
   14001d102:	mov    rdx,rbx
   14001d105:	mov    rcx,rdi
   14001d108:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d10d:	add    rsp,0x20
   14001d111:	pop    rdi
   14001d112:	rex.WB jmp QWORD PTR [r11+0x3f0]
   14001d119:	int3   
   14001d11a:	int3   
   14001d11b:	int3   
   14001d11c:	int3   
   14001d11d:	int3   
   14001d11e:	int3   
   14001d11f:	int3   
   14001d120:	mov    QWORD PTR [rsp+0x10],rbx
   14001d125:	push   rsi
   14001d126:	sub    rsp,0x20
   14001d12a:	mov    rax,QWORD PTR [rdx]
   14001d12d:	mov    rbx,rdx
   14001d130:	mov    rsi,rcx
   14001d133:	mov    rdx,rcx
   14001d136:	mov    rcx,rbx
   14001d139:	call   QWORD PTR [rax+0x108]
   14001d13f:	test   al,al
   14001d141:	je     0x14001d17e
   14001d143:	mov    QWORD PTR [rsp+0x30],rdi
   14001d148:	mov    rdi,QWORD PTR [rsi+0x10]
   14001d14c:	test   rdi,rdi
   14001d14f:	je     0x14001d179
   14001d151:	mov    rax,QWORD PTR [rbx]
   14001d154:	mov    rdx,rdi
   14001d157:	mov    rcx,rbx
   14001d15a:	call   QWORD PTR [rax+0x8]
   14001d15d:	test   al,al
   14001d15f:	je     0x14001d16d
   14001d161:	mov    rax,QWORD PTR [rdi]
   14001d164:	mov    rdx,rbx
   14001d167:	mov    rcx,rdi
   14001d16a:	call   QWORD PTR [rax+0x28]
   14001d16d:	mov    rax,QWORD PTR [rbx]
   14001d170:	mov    rdx,rdi
   14001d173:	mov    rcx,rbx
   14001d176:	call   QWORD PTR [rax+0x10]
   14001d179:	mov    rdi,QWORD PTR [rsp+0x30]
   14001d17e:	mov    rax,QWORD PTR [rbx]
   14001d181:	mov    rdx,rsi
   14001d184:	mov    rcx,rbx
   14001d187:	mov    rbx,QWORD PTR [rsp+0x38]
   14001d18c:	add    rsp,0x20
   14001d190:	pop    rsi
   14001d191:	rex.W jmp QWORD PTR [rax+0x3e8]
   14001d198:	int3   
   14001d199:	int3   
   14001d19a:	int3   
   14001d19b:	int3   
   14001d19c:	int3   
   14001d19d:	int3   
   14001d19e:	int3   
   14001d19f:	int3   
   14001d1a0:	mov    QWORD PTR [rsp+0x10],rbx
   14001d1a5:	push   rsi
   14001d1a6:	sub    rsp,0x20
   14001d1aa:	mov    rax,QWORD PTR [rdx]
   14001d1ad:	mov    rbx,rdx
   14001d1b0:	mov    rsi,rcx
   14001d1b3:	mov    rdx,rcx
   14001d1b6:	mov    rcx,rbx
   14001d1b9:	call   QWORD PTR [rax+0x100]
   14001d1bf:	test   al,al
   14001d1c1:	je     0x14001d264
   14001d1c7:	mov    QWORD PTR [rsp+0x30],rdi
   14001d1cc:	mov    rdi,QWORD PTR [rsi+0x10]
   14001d1d0:	test   rdi,rdi
   14001d1d3:	je     0x14001d1fd
   14001d1d5:	mov    rax,QWORD PTR [rbx]
   14001d1d8:	mov    rdx,rdi
   14001d1db:	mov    rcx,rbx
   14001d1de:	call   QWORD PTR [rax+0x8]
   14001d1e1:	test   al,al
   14001d1e3:	je     0x14001d1f1
   14001d1e5:	mov    rax,QWORD PTR [rdi]
   14001d1e8:	mov    rdx,rbx
   14001d1eb:	mov    rcx,rdi
   14001d1ee:	call   QWORD PTR [rax+0x28]
   14001d1f1:	mov    rax,QWORD PTR [rbx]
   14001d1f4:	mov    rdx,rdi
   14001d1f7:	mov    rcx,rbx
   14001d1fa:	call   QWORD PTR [rax+0x10]
   14001d1fd:	mov    rdi,QWORD PTR [rsi+0x18]
   14001d201:	test   rdi,rdi
   14001d204:	je     0x14001d22e
   14001d206:	mov    rax,QWORD PTR [rbx]
   14001d209:	mov    rdx,rdi
   14001d20c:	mov    rcx,rbx
   14001d20f:	call   QWORD PTR [rax+0x8]
   14001d212:	test   al,al
   14001d214:	je     0x14001d222
   14001d216:	mov    rax,QWORD PTR [rdi]
   14001d219:	mov    rdx,rbx
   14001d21c:	mov    rcx,rdi
   14001d21f:	call   QWORD PTR [rax+0x28]
   14001d222:	mov    rax,QWORD PTR [rbx]
   14001d225:	mov    rdx,rdi
   14001d228:	mov    rcx,rbx
   14001d22b:	call   QWORD PTR [rax+0x10]
   14001d22e:	mov    rdi,QWORD PTR [rsi+0x20]
   14001d232:	test   rdi,rdi
   14001d235:	je     0x14001d25f
   14001d237:	mov    rax,QWORD PTR [rbx]
   14001d23a:	mov    rdx,rdi
   14001d23d:	mov    rcx,rbx
   14001d240:	call   QWORD PTR [rax+0x8]
   14001d243:	test   al,al
   14001d245:	je     0x14001d253
   14001d247:	mov    rax,QWORD PTR [rdi]
   14001d24a:	mov    rdx,rbx
   14001d24d:	mov    rcx,rdi
   14001d250:	call   QWORD PTR [rax+0x28]
   14001d253:	mov    rax,QWORD PTR [rbx]
   14001d256:	mov    rdx,rdi
   14001d259:	mov    rcx,rbx
   14001d25c:	call   QWORD PTR [rax+0x10]
   14001d25f:	mov    rdi,QWORD PTR [rsp+0x30]
   14001d264:	mov    rax,QWORD PTR [rbx]
   14001d267:	mov    rdx,rsi
   14001d26a:	mov    rcx,rbx
   14001d26d:	mov    rbx,QWORD PTR [rsp+0x38]
   14001d272:	add    rsp,0x20
   14001d276:	pop    rsi
   14001d277:	rex.W jmp QWORD PTR [rax+0x3e0]
   14001d27e:	int3   
   14001d27f:	int3   
   14001d280:	mov    QWORD PTR [rsp+0x10],rbx
   14001d285:	push   rsi
   14001d286:	sub    rsp,0x20
   14001d28a:	mov    rax,QWORD PTR [rdx]
   14001d28d:	mov    rbx,rdx
   14001d290:	mov    rsi,rcx
   14001d293:	mov    rdx,rcx
   14001d296:	mov    rcx,rbx
   14001d299:	call   QWORD PTR [rax+0xf8]
   14001d29f:	test   al,al
   14001d2a1:	je     0x14001d30f
   14001d2a3:	mov    QWORD PTR [rsp+0x30],rdi
   14001d2a8:	mov    rdi,QWORD PTR [rsi+0x10]
   14001d2ac:	test   rdi,rdi
   14001d2af:	je     0x14001d2d9
   14001d2b1:	mov    rax,QWORD PTR [rbx]
   14001d2b4:	mov    rdx,rdi
   14001d2b7:	mov    rcx,rbx
   14001d2ba:	call   QWORD PTR [rax+0x8]
   14001d2bd:	test   al,al
   14001d2bf:	je     0x14001d2cd
   14001d2c1:	mov    rax,QWORD PTR [rdi]
   14001d2c4:	mov    rdx,rbx
   14001d2c7:	mov    rcx,rdi
   14001d2ca:	call   QWORD PTR [rax+0x28]
   14001d2cd:	mov    rax,QWORD PTR [rbx]
   14001d2d0:	mov    rdx,rdi
   14001d2d3:	mov    rcx,rbx
   14001d2d6:	call   QWORD PTR [rax+0x10]
   14001d2d9:	mov    rdi,QWORD PTR [rsi+0x18]
   14001d2dd:	test   rdi,rdi
   14001d2e0:	je     0x14001d30a
   14001d2e2:	mov    rax,QWORD PTR [rbx]
   14001d2e5:	mov    rdx,rdi
   14001d2e8:	mov    rcx,rbx
   14001d2eb:	call   QWORD PTR [rax+0x8]
   14001d2ee:	test   al,al
   14001d2f0:	je     0x14001d2fe
   14001d2f2:	mov    rax,QWORD PTR [rdi]
   14001d2f5:	mov    rdx,rbx
   14001d2f8:	mov    rcx,rdi
   14001d2fb:	call   QWORD PTR [rax+0x28]
   14001d2fe:	mov    rax,QWORD PTR [rbx]
   14001d301:	mov    rdx,rdi
   14001d304:	mov    rcx,rbx
   14001d307:	call   QWORD PTR [rax+0x10]
   14001d30a:	mov    rdi,QWORD PTR [rsp+0x30]
   14001d30f:	mov    rax,QWORD PTR [rbx]
   14001d312:	mov    rdx,rsi
   14001d315:	mov    rcx,rbx
   14001d318:	mov    rbx,QWORD PTR [rsp+0x38]
   14001d31d:	add    rsp,0x20
   14001d321:	pop    rsi
   14001d322:	rex.W jmp QWORD PTR [rax+0x3d8]
   14001d329:	int3   
   14001d32a:	int3   
   14001d32b:	int3   
   14001d32c:	int3   
   14001d32d:	int3   
   14001d32e:	int3   
   14001d32f:	int3   
   14001d330:	mov    QWORD PTR [rsp+0x10],rbx
   14001d335:	push   rsi
   14001d336:	sub    rsp,0x20
   14001d33a:	mov    rax,QWORD PTR [rdx]
   14001d33d:	mov    rbx,rdx
   14001d340:	mov    rsi,rcx
   14001d343:	mov    rdx,rcx
   14001d346:	mov    rcx,rbx
   14001d349:	call   QWORD PTR [rax+0xf0]
   14001d34f:	test   al,al
   14001d351:	je     0x14001d3bf
   14001d353:	mov    QWORD PTR [rsp+0x30],rdi
   14001d358:	mov    rdi,QWORD PTR [rsi+0x10]
   14001d35c:	test   rdi,rdi
   14001d35f:	je     0x14001d389
   14001d361:	mov    rax,QWORD PTR [rbx]
   14001d364:	mov    rdx,rdi
   14001d367:	mov    rcx,rbx
   14001d36a:	call   QWORD PTR [rax+0x8]
   14001d36d:	test   al,al
   14001d36f:	je     0x14001d37d
   14001d371:	mov    rax,QWORD PTR [rdi]
   14001d374:	mov    rdx,rbx
   14001d377:	mov    rcx,rdi
   14001d37a:	call   QWORD PTR [rax+0x28]
   14001d37d:	mov    rax,QWORD PTR [rbx]
   14001d380:	mov    rdx,rdi
   14001d383:	mov    rcx,rbx
   14001d386:	call   QWORD PTR [rax+0x10]
   14001d389:	mov    rdi,QWORD PTR [rsi+0x18]
   14001d38d:	test   rdi,rdi
   14001d390:	je     0x14001d3ba
   14001d392:	mov    rax,QWORD PTR [rbx]
   14001d395:	mov    rdx,rdi
   14001d398:	mov    rcx,rbx
   14001d39b:	call   QWORD PTR [rax+0x8]
   14001d39e:	test   al,al
   14001d3a0:	je     0x14001d3ae
   14001d3a2:	mov    rax,QWORD PTR [rdi]
   14001d3a5:	mov    rdx,rbx
   14001d3a8:	mov    rcx,rdi
   14001d3ab:	call   QWORD PTR [rax+0x28]
   14001d3ae:	mov    rax,QWORD PTR [rbx]
   14001d3b1:	mov    rdx,rdi
   14001d3b4:	mov    rcx,rbx
   14001d3b7:	call   QWORD PTR [rax+0x10]
   14001d3ba:	mov    rdi,QWORD PTR [rsp+0x30]
   14001d3bf:	mov    rax,QWORD PTR [rbx]
   14001d3c2:	mov    rdx,rsi
   14001d3c5:	mov    rcx,rbx
   14001d3c8:	mov    rbx,QWORD PTR [rsp+0x38]
   14001d3cd:	add    rsp,0x20
   14001d3d1:	pop    rsi
   14001d3d2:	rex.W jmp QWORD PTR [rax+0x3d0]
   14001d3d9:	int3   
   14001d3da:	int3   
   14001d3db:	int3   
   14001d3dc:	int3   
   14001d3dd:	int3   
   14001d3de:	int3   
   14001d3df:	int3   
   14001d3e0:	mov    QWORD PTR [rsp+0x10],rbx
   14001d3e5:	push   rsi
   14001d3e6:	sub    rsp,0x20
   14001d3ea:	mov    rax,QWORD PTR [rdx]
   14001d3ed:	mov    rbx,rdx
   14001d3f0:	mov    rsi,rcx
   14001d3f3:	mov    rdx,rcx
   14001d3f6:	mov    rcx,rbx
   14001d3f9:	call   QWORD PTR [rax+0xe8]
   14001d3ff:	test   al,al
   14001d401:	je     0x14001d4d5
   14001d407:	mov    QWORD PTR [rsp+0x30],rdi
   14001d40c:	mov    rdi,QWORD PTR [rsi+0x10]
   14001d410:	test   rdi,rdi
   14001d413:	je     0x14001d43d
   14001d415:	mov    rax,QWORD PTR [rbx]
   14001d418:	mov    rdx,rdi
   14001d41b:	mov    rcx,rbx
   14001d41e:	call   QWORD PTR [rax+0x8]
   14001d421:	test   al,al
   14001d423:	je     0x14001d431
   14001d425:	mov    rax,QWORD PTR [rdi]
   14001d428:	mov    rdx,rbx
   14001d42b:	mov    rcx,rdi
   14001d42e:	call   QWORD PTR [rax+0x28]
   14001d431:	mov    rax,QWORD PTR [rbx]
   14001d434:	mov    rdx,rdi
   14001d437:	mov    rcx,rbx
   14001d43a:	call   QWORD PTR [rax+0x10]
   14001d43d:	mov    rdi,QWORD PTR [rsi+0x18]
   14001d441:	test   rdi,rdi
   14001d444:	je     0x14001d46e
   14001d446:	mov    rax,QWORD PTR [rbx]
   14001d449:	mov    rdx,rdi
   14001d44c:	mov    rcx,rbx
   14001d44f:	call   QWORD PTR [rax+0x8]
   14001d452:	test   al,al
   14001d454:	je     0x14001d462
   14001d456:	mov    rax,QWORD PTR [rdi]
   14001d459:	mov    rdx,rbx
   14001d45c:	mov    rcx,rdi
   14001d45f:	call   QWORD PTR [rax+0x28]
   14001d462:	mov    rax,QWORD PTR [rbx]
   14001d465:	mov    rdx,rdi
   14001d468:	mov    rcx,rbx
   14001d46b:	call   QWORD PTR [rax+0x10]
   14001d46e:	mov    rdi,QWORD PTR [rsi+0x20]
   14001d472:	test   rdi,rdi
   14001d475:	je     0x14001d49f
   14001d477:	mov    rax,QWORD PTR [rbx]
   14001d47a:	mov    rdx,rdi
   14001d47d:	mov    rcx,rbx
   14001d480:	call   QWORD PTR [rax+0x8]
   14001d483:	test   al,al
   14001d485:	je     0x14001d493
   14001d487:	mov    rax,QWORD PTR [rdi]
   14001d48a:	mov    rdx,rbx
   14001d48d:	mov    rcx,rdi
   14001d490:	call   QWORD PTR [rax+0x28]
   14001d493:	mov    rax,QWORD PTR [rbx]
   14001d496:	mov    rdx,rdi
   14001d499:	mov    rcx,rbx
   14001d49c:	call   QWORD PTR [rax+0x10]
   14001d49f:	mov    rdi,QWORD PTR [rsi+0x28]
   14001d4a3:	test   rdi,rdi
   14001d4a6:	je     0x14001d4d0
   14001d4a8:	mov    rax,QWORD PTR [rbx]
   14001d4ab:	mov    rdx,rdi
   14001d4ae:	mov    rcx,rbx
   14001d4b1:	call   QWORD PTR [rax+0x8]
   14001d4b4:	test   al,al
   14001d4b6:	je     0x14001d4c4
   14001d4b8:	mov    rax,QWORD PTR [rdi]
   14001d4bb:	mov    rdx,rbx
   14001d4be:	mov    rcx,rdi
   14001d4c1:	call   QWORD PTR [rax+0x28]
   14001d4c4:	mov    rax,QWORD PTR [rbx]
   14001d4c7:	mov    rdx,rdi
   14001d4ca:	mov    rcx,rbx
   14001d4cd:	call   QWORD PTR [rax+0x10]
   14001d4d0:	mov    rdi,QWORD PTR [rsp+0x30]
   14001d4d5:	mov    rax,QWORD PTR [rbx]
   14001d4d8:	mov    rdx,rsi
   14001d4db:	mov    rcx,rbx
   14001d4de:	mov    rbx,QWORD PTR [rsp+0x38]
   14001d4e3:	add    rsp,0x20
   14001d4e7:	pop    rsi
   14001d4e8:	rex.W jmp QWORD PTR [rax+0x3c8]
   14001d4ef:	int3   
   14001d4f0:	mov    QWORD PTR [rsp+0x10],rbx
   14001d4f5:	push   rsi
   14001d4f6:	sub    rsp,0x20
   14001d4fa:	mov    rax,QWORD PTR [rdx]
   14001d4fd:	mov    rbx,rdx
   14001d500:	mov    rsi,rcx
   14001d503:	mov    rdx,rcx
   14001d506:	mov    rcx,rbx
   14001d509:	call   QWORD PTR [rax+0xe0]
   14001d50f:	test   al,al
   14001d511:	je     0x14001d5e5
   14001d517:	mov    QWORD PTR [rsp+0x30],rdi
   14001d51c:	mov    rdi,QWORD PTR [rsi+0x10]
   14001d520:	test   rdi,rdi
   14001d523:	je     0x14001d54d
   14001d525:	mov    rax,QWORD PTR [rbx]
   14001d528:	mov    rdx,rdi
   14001d52b:	mov    rcx,rbx
   14001d52e:	call   QWORD PTR [rax+0x8]
   14001d531:	test   al,al
   14001d533:	je     0x14001d541
   14001d535:	mov    rax,QWORD PTR [rdi]
   14001d538:	mov    rdx,rbx
   14001d53b:	mov    rcx,rdi
   14001d53e:	call   QWORD PTR [rax+0x28]
   14001d541:	mov    rax,QWORD PTR [rbx]
   14001d544:	mov    rdx,rdi
   14001d547:	mov    rcx,rbx
   14001d54a:	call   QWORD PTR [rax+0x10]
   14001d54d:	mov    rdi,QWORD PTR [rsi+0x18]
   14001d551:	test   rdi,rdi
   14001d554:	je     0x14001d57e
   14001d556:	mov    rax,QWORD PTR [rbx]
   14001d559:	mov    rdx,rdi
   14001d55c:	mov    rcx,rbx
   14001d55f:	call   QWORD PTR [rax+0x8]
   14001d562:	test   al,al
   14001d564:	je     0x14001d572
   14001d566:	mov    rax,QWORD PTR [rdi]
   14001d569:	mov    rdx,rbx
   14001d56c:	mov    rcx,rdi
   14001d56f:	call   QWORD PTR [rax+0x28]
   14001d572:	mov    rax,QWORD PTR [rbx]
   14001d575:	mov    rdx,rdi
   14001d578:	mov    rcx,rbx
   14001d57b:	call   QWORD PTR [rax+0x10]
   14001d57e:	mov    rdi,QWORD PTR [rsi+0x20]
   14001d582:	test   rdi,rdi
   14001d585:	je     0x14001d5af
   14001d587:	mov    rax,QWORD PTR [rbx]
   14001d58a:	mov    rdx,rdi
   14001d58d:	mov    rcx,rbx
   14001d590:	call   QWORD PTR [rax+0x8]
   14001d593:	test   al,al
   14001d595:	je     0x14001d5a3
   14001d597:	mov    rax,QWORD PTR [rdi]
   14001d59a:	mov    rdx,rbx
   14001d59d:	mov    rcx,rdi
   14001d5a0:	call   QWORD PTR [rax+0x28]
   14001d5a3:	mov    rax,QWORD PTR [rbx]
   14001d5a6:	mov    rdx,rdi
   14001d5a9:	mov    rcx,rbx
   14001d5ac:	call   QWORD PTR [rax+0x10]
   14001d5af:	mov    rdi,QWORD PTR [rsi+0x28]
   14001d5b3:	test   rdi,rdi
   14001d5b6:	je     0x14001d5e0
   14001d5b8:	mov    rax,QWORD PTR [rbx]
   14001d5bb:	mov    rdx,rdi
   14001d5be:	mov    rcx,rbx
   14001d5c1:	call   QWORD PTR [rax+0x8]
   14001d5c4:	test   al,al
   14001d5c6:	je     0x14001d5d4
   14001d5c8:	mov    rax,QWORD PTR [rdi]
   14001d5cb:	mov    rdx,rbx
   14001d5ce:	mov    rcx,rdi
   14001d5d1:	call   QWORD PTR [rax+0x28]
   14001d5d4:	mov    rax,QWORD PTR [rbx]
   14001d5d7:	mov    rdx,rdi
   14001d5da:	mov    rcx,rbx
   14001d5dd:	call   QWORD PTR [rax+0x10]
   14001d5e0:	mov    rdi,QWORD PTR [rsp+0x30]
   14001d5e5:	mov    rax,QWORD PTR [rbx]
   14001d5e8:	mov    rdx,rsi
   14001d5eb:	mov    rcx,rbx
   14001d5ee:	mov    rbx,QWORD PTR [rsp+0x38]
   14001d5f3:	add    rsp,0x20
   14001d5f7:	pop    rsi
   14001d5f8:	rex.W jmp QWORD PTR [rax+0x3c0]
   14001d5ff:	int3   
   14001d600:	mov    QWORD PTR [rsp+0x10],rbx
   14001d605:	push   rsi
   14001d606:	sub    rsp,0x20
   14001d60a:	mov    rax,QWORD PTR [rdx]
   14001d60d:	mov    rbx,rdx
   14001d610:	mov    rsi,rcx
   14001d613:	mov    rdx,rcx
   14001d616:	mov    rcx,rbx
   14001d619:	call   QWORD PTR [rax+0xd8]
   14001d61f:	test   al,al
   14001d621:	je     0x14001d6c4
   14001d627:	mov    QWORD PTR [rsp+0x30],rdi
   14001d62c:	mov    rdi,QWORD PTR [rsi+0x10]
   14001d630:	test   rdi,rdi
   14001d633:	je     0x14001d65d
   14001d635:	mov    rax,QWORD PTR [rbx]
   14001d638:	mov    rdx,rdi
   14001d63b:	mov    rcx,rbx
   14001d63e:	call   QWORD PTR [rax+0x8]
   14001d641:	test   al,al
   14001d643:	je     0x14001d651
   14001d645:	mov    rax,QWORD PTR [rdi]
   14001d648:	mov    rdx,rbx
   14001d64b:	mov    rcx,rdi
   14001d64e:	call   QWORD PTR [rax+0x28]
   14001d651:	mov    rax,QWORD PTR [rbx]
   14001d654:	mov    rdx,rdi
   14001d657:	mov    rcx,rbx
   14001d65a:	call   QWORD PTR [rax+0x10]
   14001d65d:	mov    rdi,QWORD PTR [rsi+0x18]
   14001d661:	test   rdi,rdi
   14001d664:	je     0x14001d68e
   14001d666:	mov    rax,QWORD PTR [rbx]
   14001d669:	mov    rdx,rdi
   14001d66c:	mov    rcx,rbx
   14001d66f:	call   QWORD PTR [rax+0x8]
   14001d672:	test   al,al
   14001d674:	je     0x14001d682
   14001d676:	mov    rax,QWORD PTR [rdi]
   14001d679:	mov    rdx,rbx
   14001d67c:	mov    rcx,rdi
   14001d67f:	call   QWORD PTR [rax+0x28]
   14001d682:	mov    rax,QWORD PTR [rbx]
   14001d685:	mov    rdx,rdi
   14001d688:	mov    rcx,rbx
   14001d68b:	call   QWORD PTR [rax+0x10]
   14001d68e:	mov    rdi,QWORD PTR [rsi+0x20]
   14001d692:	test   rdi,rdi
   14001d695:	je     0x14001d6bf
   14001d697:	mov    rax,QWORD PTR [rbx]
   14001d69a:	mov    rdx,rdi
   14001d69d:	mov    rcx,rbx
   14001d6a0:	call   QWORD PTR [rax+0x8]
   14001d6a3:	test   al,al
   14001d6a5:	je     0x14001d6b3
   14001d6a7:	mov    rax,QWORD PTR [rdi]
   14001d6aa:	mov    rdx,rbx
   14001d6ad:	mov    rcx,rdi
   14001d6b0:	call   QWORD PTR [rax+0x28]
   14001d6b3:	mov    rax,QWORD PTR [rbx]
   14001d6b6:	mov    rdx,rdi
   14001d6b9:	mov    rcx,rbx
   14001d6bc:	call   QWORD PTR [rax+0x10]
   14001d6bf:	mov    rdi,QWORD PTR [rsp+0x30]
   14001d6c4:	mov    rax,QWORD PTR [rbx]
   14001d6c7:	mov    rdx,rsi
   14001d6ca:	mov    rcx,rbx
   14001d6cd:	mov    rbx,QWORD PTR [rsp+0x38]
   14001d6d2:	add    rsp,0x20
   14001d6d6:	pop    rsi
   14001d6d7:	rex.W jmp QWORD PTR [rax+0x3b8]
   14001d6de:	int3   
   14001d6df:	int3   
   14001d6e0:	mov    QWORD PTR [rsp+0x10],rbx
   14001d6e5:	push   rsi
   14001d6e6:	sub    rsp,0x20
   14001d6ea:	mov    rax,QWORD PTR [rdx]
   14001d6ed:	mov    rbx,rdx
   14001d6f0:	mov    rsi,rcx
   14001d6f3:	mov    rdx,rcx
   14001d6f6:	mov    rcx,rbx
   14001d6f9:	call   QWORD PTR [rax+0xd0]
   14001d6ff:	test   al,al
   14001d701:	je     0x14001d7a4
   14001d707:	mov    QWORD PTR [rsp+0x30],rdi
   14001d70c:	mov    rdi,QWORD PTR [rsi+0x10]
   14001d710:	test   rdi,rdi
   14001d713:	je     0x14001d73d
   14001d715:	mov    rax,QWORD PTR [rbx]
   14001d718:	mov    rdx,rdi
   14001d71b:	mov    rcx,rbx
   14001d71e:	call   QWORD PTR [rax+0x8]
   14001d721:	test   al,al
   14001d723:	je     0x14001d731
   14001d725:	mov    rax,QWORD PTR [rdi]
   14001d728:	mov    rdx,rbx
   14001d72b:	mov    rcx,rdi
   14001d72e:	call   QWORD PTR [rax+0x28]
   14001d731:	mov    rax,QWORD PTR [rbx]
   14001d734:	mov    rdx,rdi
   14001d737:	mov    rcx,rbx
   14001d73a:	call   QWORD PTR [rax+0x10]
   14001d73d:	mov    rdi,QWORD PTR [rsi+0x18]
   14001d741:	test   rdi,rdi
   14001d744:	je     0x14001d76e
   14001d746:	mov    rax,QWORD PTR [rbx]
   14001d749:	mov    rdx,rdi
   14001d74c:	mov    rcx,rbx
   14001d74f:	call   QWORD PTR [rax+0x8]
   14001d752:	test   al,al
   14001d754:	je     0x14001d762
   14001d756:	mov    rax,QWORD PTR [rdi]
   14001d759:	mov    rdx,rbx
   14001d75c:	mov    rcx,rdi
   14001d75f:	call   QWORD PTR [rax+0x28]
   14001d762:	mov    rax,QWORD PTR [rbx]
   14001d765:	mov    rdx,rdi
   14001d768:	mov    rcx,rbx
   14001d76b:	call   QWORD PTR [rax+0x10]
   14001d76e:	mov    rdi,QWORD PTR [rsi+0x20]
   14001d772:	test   rdi,rdi
   14001d775:	je     0x14001d79f
   14001d777:	mov    rax,QWORD PTR [rbx]
   14001d77a:	mov    rdx,rdi
   14001d77d:	mov    rcx,rbx
   14001d780:	call   QWORD PTR [rax+0x8]
   14001d783:	test   al,al
   14001d785:	je     0x14001d793
   14001d787:	mov    rax,QWORD PTR [rdi]
   14001d78a:	mov    rdx,rbx
   14001d78d:	mov    rcx,rdi
   14001d790:	call   QWORD PTR [rax+0x28]
   14001d793:	mov    rax,QWORD PTR [rbx]
   14001d796:	mov    rdx,rdi
   14001d799:	mov    rcx,rbx
   14001d79c:	call   QWORD PTR [rax+0x10]
   14001d79f:	mov    rdi,QWORD PTR [rsp+0x30]
   14001d7a4:	mov    rax,QWORD PTR [rbx]
   14001d7a7:	mov    rdx,rsi
   14001d7aa:	mov    rcx,rbx
   14001d7ad:	mov    rbx,QWORD PTR [rsp+0x38]
   14001d7b2:	add    rsp,0x20
   14001d7b6:	pop    rsi
   14001d7b7:	rex.W jmp QWORD PTR [rax+0x3b0]
   14001d7be:	int3   
   14001d7bf:	int3   
   14001d7c0:	mov    QWORD PTR [rsp+0x8],rbx
   14001d7c5:	push   rdi
   14001d7c6:	sub    rsp,0x20
   14001d7ca:	mov    rax,QWORD PTR [rdx]
   14001d7cd:	mov    rdi,rdx
   14001d7d0:	mov    rbx,rcx
   14001d7d3:	mov    rdx,rcx
   14001d7d6:	mov    rcx,rdi
   14001d7d9:	call   QWORD PTR [rax+0xc8]
   14001d7df:	mov    r11,QWORD PTR [rdi]
   14001d7e2:	mov    rdx,rbx
   14001d7e5:	mov    rcx,rdi
   14001d7e8:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d7ed:	add    rsp,0x20
   14001d7f1:	pop    rdi
   14001d7f2:	rex.WB jmp QWORD PTR [r11+0x3a8]
   14001d7f9:	int3   
   14001d7fa:	int3   
   14001d7fb:	int3   
   14001d7fc:	int3   
   14001d7fd:	int3   
   14001d7fe:	int3   
   14001d7ff:	int3   
   14001d800:	mov    QWORD PTR [rsp+0x8],rbx
   14001d805:	push   rdi
   14001d806:	sub    rsp,0x20
   14001d80a:	mov    rax,QWORD PTR [rdx]
   14001d80d:	mov    rdi,rdx
   14001d810:	mov    rbx,rcx
   14001d813:	mov    rdx,rcx
   14001d816:	mov    rcx,rdi
   14001d819:	call   QWORD PTR [rax+0xc0]
   14001d81f:	mov    r11,QWORD PTR [rdi]
   14001d822:	mov    rdx,rbx
   14001d825:	mov    rcx,rdi
   14001d828:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d82d:	add    rsp,0x20
   14001d831:	pop    rdi
   14001d832:	rex.WB jmp QWORD PTR [r11+0x3a0]
   14001d839:	int3   
   14001d83a:	int3   
   14001d83b:	int3   
   14001d83c:	int3   
   14001d83d:	int3   
   14001d83e:	int3   
   14001d83f:	int3   
   14001d840:	mov    QWORD PTR [rsp+0x10],rbx
   14001d845:	push   rsi
   14001d846:	sub    rsp,0x20
   14001d84a:	mov    rax,QWORD PTR [rdx]
   14001d84d:	mov    rbx,rdx
   14001d850:	mov    rsi,rcx
   14001d853:	mov    rdx,rcx
   14001d856:	mov    rcx,rbx
   14001d859:	call   QWORD PTR [rax+0xb8]
   14001d85f:	test   al,al
   14001d861:	je     0x14001d89e
   14001d863:	mov    QWORD PTR [rsp+0x30],rdi
   14001d868:	mov    rdi,QWORD PTR [rsi+0x10]
   14001d86c:	test   rdi,rdi
   14001d86f:	je     0x14001d899
   14001d871:	mov    rax,QWORD PTR [rbx]
   14001d874:	mov    rdx,rdi
   14001d877:	mov    rcx,rbx
   14001d87a:	call   QWORD PTR [rax+0x8]
   14001d87d:	test   al,al
   14001d87f:	je     0x14001d88d
   14001d881:	mov    rax,QWORD PTR [rdi]
   14001d884:	mov    rdx,rbx
   14001d887:	mov    rcx,rdi
   14001d88a:	call   QWORD PTR [rax+0x28]
   14001d88d:	mov    rax,QWORD PTR [rbx]
   14001d890:	mov    rdx,rdi
   14001d893:	mov    rcx,rbx
   14001d896:	call   QWORD PTR [rax+0x10]
   14001d899:	mov    rdi,QWORD PTR [rsp+0x30]
   14001d89e:	mov    rax,QWORD PTR [rbx]
   14001d8a1:	mov    rdx,rsi
   14001d8a4:	mov    rcx,rbx
   14001d8a7:	mov    rbx,QWORD PTR [rsp+0x38]
   14001d8ac:	add    rsp,0x20
   14001d8b0:	pop    rsi
   14001d8b1:	rex.W jmp QWORD PTR [rax+0x398]
   14001d8b8:	int3   
   14001d8b9:	int3   
   14001d8ba:	int3   
   14001d8bb:	int3   
   14001d8bc:	int3   
   14001d8bd:	int3   
   14001d8be:	int3   
   14001d8bf:	int3   
   14001d8c0:	mov    QWORD PTR [rsp+0x10],rbx
   14001d8c5:	push   rsi
   14001d8c6:	sub    rsp,0x20
   14001d8ca:	mov    rax,QWORD PTR [rdx]
   14001d8cd:	mov    rbx,rdx
   14001d8d0:	mov    rsi,rcx
   14001d8d3:	mov    rdx,rcx
   14001d8d6:	mov    rcx,rbx
   14001d8d9:	call   QWORD PTR [rax+0xb0]
   14001d8df:	test   al,al
   14001d8e1:	je     0x14001d94f
   14001d8e3:	mov    QWORD PTR [rsp+0x30],rdi
   14001d8e8:	mov    rdi,QWORD PTR [rsi+0x10]
   14001d8ec:	test   rdi,rdi
   14001d8ef:	je     0x14001d919
   14001d8f1:	mov    rax,QWORD PTR [rbx]
   14001d8f4:	mov    rdx,rdi
   14001d8f7:	mov    rcx,rbx
   14001d8fa:	call   QWORD PTR [rax+0x8]
   14001d8fd:	test   al,al
   14001d8ff:	je     0x14001d90d
   14001d901:	mov    rax,QWORD PTR [rdi]
   14001d904:	mov    rdx,rbx
   14001d907:	mov    rcx,rdi
   14001d90a:	call   QWORD PTR [rax+0x28]
   14001d90d:	mov    rax,QWORD PTR [rbx]
   14001d910:	mov    rdx,rdi
   14001d913:	mov    rcx,rbx
   14001d916:	call   QWORD PTR [rax+0x10]
   14001d919:	mov    rdi,QWORD PTR [rsi+0x18]
   14001d91d:	test   rdi,rdi
   14001d920:	je     0x14001d94a
   14001d922:	mov    rax,QWORD PTR [rbx]
   14001d925:	mov    rdx,rdi
   14001d928:	mov    rcx,rbx
   14001d92b:	call   QWORD PTR [rax+0x8]
   14001d92e:	test   al,al
   14001d930:	je     0x14001d93e
   14001d932:	mov    rax,QWORD PTR [rdi]
   14001d935:	mov    rdx,rbx
   14001d938:	mov    rcx,rdi
   14001d93b:	call   QWORD PTR [rax+0x28]
   14001d93e:	mov    rax,QWORD PTR [rbx]
   14001d941:	mov    rdx,rdi
   14001d944:	mov    rcx,rbx
   14001d947:	call   QWORD PTR [rax+0x10]
   14001d94a:	mov    rdi,QWORD PTR [rsp+0x30]
   14001d94f:	mov    rax,QWORD PTR [rbx]
   14001d952:	mov    rdx,rsi
   14001d955:	mov    rcx,rbx
   14001d958:	mov    rbx,QWORD PTR [rsp+0x38]
   14001d95d:	add    rsp,0x20
   14001d961:	pop    rsi
   14001d962:	rex.W jmp QWORD PTR [rax+0x390]
   14001d969:	int3   
   14001d96a:	int3   
   14001d96b:	int3   
   14001d96c:	int3   
   14001d96d:	int3   
   14001d96e:	int3   
   14001d96f:	int3   
   14001d970:	mov    QWORD PTR [rsp+0x10],rbx
   14001d975:	push   rsi
   14001d976:	sub    rsp,0x20
   14001d97a:	mov    rax,QWORD PTR [rdx]
   14001d97d:	mov    rbx,rdx
   14001d980:	mov    rsi,rcx
   14001d983:	mov    rdx,rcx
   14001d986:	mov    rcx,rbx
   14001d989:	call   QWORD PTR [rax+0xa8]
   14001d98f:	test   al,al
   14001d991:	je     0x14001d9ff
   14001d993:	mov    QWORD PTR [rsp+0x30],rdi
   14001d998:	mov    rdi,QWORD PTR [rsi+0x10]
   14001d99c:	test   rdi,rdi
   14001d99f:	je     0x14001d9c9
   14001d9a1:	mov    rax,QWORD PTR [rbx]
   14001d9a4:	mov    rdx,rdi
   14001d9a7:	mov    rcx,rbx
   14001d9aa:	call   QWORD PTR [rax+0x8]
   14001d9ad:	test   al,al
   14001d9af:	je     0x14001d9bd
   14001d9b1:	mov    rax,QWORD PTR [rdi]
   14001d9b4:	mov    rdx,rbx
   14001d9b7:	mov    rcx,rdi
   14001d9ba:	call   QWORD PTR [rax+0x28]
   14001d9bd:	mov    rax,QWORD PTR [rbx]
   14001d9c0:	mov    rdx,rdi
   14001d9c3:	mov    rcx,rbx
   14001d9c6:	call   QWORD PTR [rax+0x10]
   14001d9c9:	mov    rdi,QWORD PTR [rsi+0x18]
   14001d9cd:	test   rdi,rdi
   14001d9d0:	je     0x14001d9fa
   14001d9d2:	mov    rax,QWORD PTR [rbx]
   14001d9d5:	mov    rdx,rdi
   14001d9d8:	mov    rcx,rbx
   14001d9db:	call   QWORD PTR [rax+0x8]
   14001d9de:	test   al,al
   14001d9e0:	je     0x14001d9ee
   14001d9e2:	mov    rax,QWORD PTR [rdi]
   14001d9e5:	mov    rdx,rbx
   14001d9e8:	mov    rcx,rdi
   14001d9eb:	call   QWORD PTR [rax+0x28]
   14001d9ee:	mov    rax,QWORD PTR [rbx]
   14001d9f1:	mov    rdx,rdi
   14001d9f4:	mov    rcx,rbx
   14001d9f7:	call   QWORD PTR [rax+0x10]
   14001d9fa:	mov    rdi,QWORD PTR [rsp+0x30]
   14001d9ff:	mov    rax,QWORD PTR [rbx]
   14001da02:	mov    rdx,rsi
   14001da05:	mov    rcx,rbx
   14001da08:	mov    rbx,QWORD PTR [rsp+0x38]
   14001da0d:	add    rsp,0x20
   14001da11:	pop    rsi
   14001da12:	rex.W jmp QWORD PTR [rax+0x388]
   14001da19:	int3   
   14001da1a:	int3   
   14001da1b:	int3   
   14001da1c:	int3   
   14001da1d:	int3   
   14001da1e:	int3   
   14001da1f:	int3   
   14001da20:	mov    QWORD PTR [rsp+0x10],rbx
   14001da25:	push   rsi
   14001da26:	sub    rsp,0x20
   14001da2a:	mov    rax,QWORD PTR [rdx]
   14001da2d:	mov    rbx,rdx
   14001da30:	mov    rsi,rcx
   14001da33:	mov    rdx,rcx
   14001da36:	mov    rcx,rbx
   14001da39:	call   QWORD PTR [rax+0xa0]
   14001da3f:	test   al,al
   14001da41:	je     0x14001dae4
   14001da47:	mov    QWORD PTR [rsp+0x30],rdi
   14001da4c:	mov    rdi,QWORD PTR [rsi+0x10]
   14001da50:	test   rdi,rdi
   14001da53:	je     0x14001da7d
   14001da55:	mov    rax,QWORD PTR [rbx]
   14001da58:	mov    rdx,rdi
   14001da5b:	mov    rcx,rbx
   14001da5e:	call   QWORD PTR [rax+0x8]
   14001da61:	test   al,al
   14001da63:	je     0x14001da71
   14001da65:	mov    rax,QWORD PTR [rdi]
   14001da68:	mov    rdx,rbx
   14001da6b:	mov    rcx,rdi
   14001da6e:	call   QWORD PTR [rax+0x28]
   14001da71:	mov    rax,QWORD PTR [rbx]
   14001da74:	mov    rdx,rdi
   14001da77:	mov    rcx,rbx
   14001da7a:	call   QWORD PTR [rax+0x10]
   14001da7d:	mov    rdi,QWORD PTR [rsi+0x18]
   14001da81:	test   rdi,rdi
   14001da84:	je     0x14001daae
   14001da86:	mov    rax,QWORD PTR [rbx]
   14001da89:	mov    rdx,rdi
   14001da8c:	mov    rcx,rbx
   14001da8f:	call   QWORD PTR [rax+0x8]
   14001da92:	test   al,al
   14001da94:	je     0x14001daa2
   14001da96:	mov    rax,QWORD PTR [rdi]
   14001da99:	mov    rdx,rbx
   14001da9c:	mov    rcx,rdi
   14001da9f:	call   QWORD PTR [rax+0x28]
   14001daa2:	mov    rax,QWORD PTR [rbx]
   14001daa5:	mov    rdx,rdi
   14001daa8:	mov    rcx,rbx
   14001daab:	call   QWORD PTR [rax+0x10]
   14001daae:	mov    rdi,QWORD PTR [rsi+0x20]
   14001dab2:	test   rdi,rdi
   14001dab5:	je     0x14001dadf
   14001dab7:	mov    rax,QWORD PTR [rbx]
   14001daba:	mov    rdx,rdi
   14001dabd:	mov    rcx,rbx
   14001dac0:	call   QWORD PTR [rax+0x8]
   14001dac3:	test   al,al
   14001dac5:	je     0x14001dad3
   14001dac7:	mov    rax,QWORD PTR [rdi]
   14001daca:	mov    rdx,rbx
   14001dacd:	mov    rcx,rdi
   14001dad0:	call   QWORD PTR [rax+0x28]
   14001dad3:	mov    rax,QWORD PTR [rbx]
   14001dad6:	mov    rdx,rdi
   14001dad9:	mov    rcx,rbx
   14001dadc:	call   QWORD PTR [rax+0x10]
   14001dadf:	mov    rdi,QWORD PTR [rsp+0x30]
   14001dae4:	mov    rax,QWORD PTR [rbx]
   14001dae7:	mov    rdx,rsi
   14001daea:	mov    rcx,rbx
   14001daed:	mov    rbx,QWORD PTR [rsp+0x38]
   14001daf2:	add    rsp,0x20
   14001daf6:	pop    rsi
   14001daf7:	rex.W jmp QWORD PTR [rax+0x380]
   14001dafe:	int3   
   14001daff:	int3   
   14001db00:	mov    QWORD PTR [rsp+0x18],rbp
   14001db05:	push   rsi
   14001db06:	sub    rsp,0x20
   14001db0a:	mov    rax,QWORD PTR [rdx]
   14001db0d:	mov    rsi,rdx
   14001db10:	mov    rbp,rcx
   14001db13:	mov    rdx,rcx
   14001db16:	mov    rcx,rsi
   14001db19:	call   QWORD PTR [rax+0x98]
   14001db1f:	test   al,al
   14001db21:	je     0x14001db79
   14001db23:	mov    QWORD PTR [rsp+0x30],rbx
   14001db28:	mov    rbx,rbp
   14001db2b:	test   rbp,rbp
   14001db2e:	je     0x14001db74
   14001db30:	mov    QWORD PTR [rsp+0x38],rdi
   14001db35:	mov    rdi,QWORD PTR [rbx+0x10]
   14001db39:	test   rdi,rdi
   14001db3c:	je     0x14001db66
   14001db3e:	mov    rax,QWORD PTR [rsi]
   14001db41:	mov    rdx,rdi
   14001db44:	mov    rcx,rsi
   14001db47:	call   QWORD PTR [rax+0x8]
   14001db4a:	test   al,al
   14001db4c:	je     0x14001db5a
   14001db4e:	mov    rax,QWORD PTR [rdi]
   14001db51:	mov    rdx,rsi
   14001db54:	mov    rcx,rdi
   14001db57:	call   QWORD PTR [rax+0x28]
   14001db5a:	mov    rax,QWORD PTR [rsi]
   14001db5d:	mov    rdx,rdi
   14001db60:	mov    rcx,rsi
   14001db63:	call   QWORD PTR [rax+0x10]
   14001db66:	mov    rbx,QWORD PTR [rbx+0x18]
   14001db6a:	test   rbx,rbx
   14001db6d:	jne    0x14001db35
   14001db6f:	mov    rdi,QWORD PTR [rsp+0x38]
   14001db74:	mov    rbx,QWORD PTR [rsp+0x30]
   14001db79:	mov    rax,QWORD PTR [rsi]
   14001db7c:	mov    rdx,rbp
   14001db7f:	mov    rcx,rsi
   14001db82:	mov    rbp,QWORD PTR [rsp+0x40]
   14001db87:	add    rsp,0x20
   14001db8b:	pop    rsi
   14001db8c:	rex.W jmp QWORD PTR [rax+0x378]
   14001db93:	int3   
   14001db94:	int3   
   14001db95:	int3   
   14001db96:	int3   
   14001db97:	int3   
   14001db98:	int3   
   14001db99:	int3   
   14001db9a:	int3   
   14001db9b:	int3   
   14001db9c:	int3   
   14001db9d:	int3   
   14001db9e:	int3   
   14001db9f:	int3   
   14001dba0:	mov    QWORD PTR [rsp+0x10],rbx
   14001dba5:	push   rsi
   14001dba6:	sub    rsp,0x20
   14001dbaa:	mov    rax,QWORD PTR [rdx]
   14001dbad:	mov    rbx,rdx
   14001dbb0:	mov    rsi,rcx
   14001dbb3:	mov    rdx,rcx
   14001dbb6:	mov    rcx,rbx
   14001dbb9:	call   QWORD PTR [rax+0x90]
   14001dbbf:	test   al,al
   14001dbc1:	je     0x14001dc2f
   14001dbc3:	mov    QWORD PTR [rsp+0x30],rdi
   14001dbc8:	mov    rdi,QWORD PTR [rsi+0x10]
   14001dbcc:	test   rdi,rdi
   14001dbcf:	je     0x14001dbf9
   14001dbd1:	mov    rax,QWORD PTR [rbx]
   14001dbd4:	mov    rdx,rdi
   14001dbd7:	mov    rcx,rbx
   14001dbda:	call   QWORD PTR [rax+0x8]
   14001dbdd:	test   al,al
   14001dbdf:	je     0x14001dbed
   14001dbe1:	mov    rax,QWORD PTR [rdi]
   14001dbe4:	mov    rdx,rbx
   14001dbe7:	mov    rcx,rdi
   14001dbea:	call   QWORD PTR [rax+0x28]
   14001dbed:	mov    rax,QWORD PTR [rbx]
   14001dbf0:	mov    rdx,rdi
   14001dbf3:	mov    rcx,rbx
   14001dbf6:	call   QWORD PTR [rax+0x10]
   14001dbf9:	mov    rdi,QWORD PTR [rsi+0x18]
   14001dbfd:	test   rdi,rdi
   14001dc00:	je     0x14001dc2a
   14001dc02:	mov    rax,QWORD PTR [rbx]
   14001dc05:	mov    rdx,rdi
   14001dc08:	mov    rcx,rbx
   14001dc0b:	call   QWORD PTR [rax+0x8]
   14001dc0e:	test   al,al
   14001dc10:	je     0x14001dc1e
   14001dc12:	mov    rax,QWORD PTR [rdi]
   14001dc15:	mov    rdx,rbx
   14001dc18:	mov    rcx,rdi
   14001dc1b:	call   QWORD PTR [rax+0x28]
   14001dc1e:	mov    rax,QWORD PTR [rbx]
   14001dc21:	mov    rdx,rdi
   14001dc24:	mov    rcx,rbx
   14001dc27:	call   QWORD PTR [rax+0x10]
   14001dc2a:	mov    rdi,QWORD PTR [rsp+0x30]
   14001dc2f:	mov    rax,QWORD PTR [rbx]
   14001dc32:	mov    rdx,rsi
   14001dc35:	mov    rcx,rbx
   14001dc38:	mov    rbx,QWORD PTR [rsp+0x38]
   14001dc3d:	add    rsp,0x20
   14001dc41:	pop    rsi
   14001dc42:	rex.W jmp QWORD PTR [rax+0x370]
   14001dc49:	int3   
   14001dc4a:	int3   
   14001dc4b:	int3   
   14001dc4c:	int3   
   14001dc4d:	int3   
   14001dc4e:	int3   
   14001dc4f:	int3   
   14001dc50:	mov    QWORD PTR [rsp+0x10],rbx
   14001dc55:	push   rsi
   14001dc56:	sub    rsp,0x20
   14001dc5a:	mov    rax,QWORD PTR [rdx]
   14001dc5d:	mov    rbx,rdx
   14001dc60:	mov    rsi,rcx
   14001dc63:	mov    rdx,rcx
   14001dc66:	mov    rcx,rbx
   14001dc69:	call   QWORD PTR [rax+0x88]
   14001dc6f:	test   al,al
   14001dc71:	je     0x14001dcae
   14001dc73:	mov    QWORD PTR [rsp+0x30],rdi
   14001dc78:	mov    rdi,QWORD PTR [rsi+0x10]
   14001dc7c:	test   rdi,rdi
   14001dc7f:	je     0x14001dca9
   14001dc81:	mov    rax,QWORD PTR [rbx]
   14001dc84:	mov    rdx,rdi
   14001dc87:	mov    rcx,rbx
   14001dc8a:	call   QWORD PTR [rax+0x8]
   14001dc8d:	test   al,al
   14001dc8f:	je     0x14001dc9d
   14001dc91:	mov    rax,QWORD PTR [rdi]
   14001dc94:	mov    rdx,rbx
   14001dc97:	mov    rcx,rdi
   14001dc9a:	call   QWORD PTR [rax+0x28]
   14001dc9d:	mov    rax,QWORD PTR [rbx]
   14001dca0:	mov    rdx,rdi
   14001dca3:	mov    rcx,rbx
   14001dca6:	call   QWORD PTR [rax+0x10]
   14001dca9:	mov    rdi,QWORD PTR [rsp+0x30]
   14001dcae:	mov    rax,QWORD PTR [rbx]
   14001dcb1:	mov    rdx,rsi
   14001dcb4:	mov    rcx,rbx
   14001dcb7:	mov    rbx,QWORD PTR [rsp+0x38]
   14001dcbc:	add    rsp,0x20
   14001dcc0:	pop    rsi
   14001dcc1:	rex.W jmp QWORD PTR [rax+0x368]
   14001dcc8:	int3   
   14001dcc9:	int3   
   14001dcca:	int3   
   14001dccb:	int3   
   14001dccc:	int3   
   14001dccd:	int3   
   14001dcce:	int3   
   14001dccf:	int3   
   14001dcd0:	mov    QWORD PTR [rsp+0x10],rbx
   14001dcd5:	push   rsi
   14001dcd6:	sub    rsp,0x20
   14001dcda:	mov    rax,QWORD PTR [rdx]
   14001dcdd:	mov    rbx,rdx
   14001dce0:	mov    rsi,rcx
   14001dce3:	mov    rdx,rcx
   14001dce6:	mov    rcx,rbx
   14001dce9:	call   QWORD PTR [rax+0x80]
   14001dcef:	test   al,al
   14001dcf1:	je     0x14001dd2e
   14001dcf3:	mov    QWORD PTR [rsp+0x30],rdi
   14001dcf8:	mov    rdi,QWORD PTR [rsi+0x20]
   14001dcfc:	test   rdi,rdi
   14001dcff:	je     0x14001dd29
   14001dd01:	mov    rax,QWORD PTR [rbx]
   14001dd04:	mov    rdx,rdi
   14001dd07:	mov    rcx,rbx
   14001dd0a:	call   QWORD PTR [rax+0x8]
   14001dd0d:	test   al,al
   14001dd0f:	je     0x14001dd1d
   14001dd11:	mov    rax,QWORD PTR [rdi]
   14001dd14:	mov    rdx,rbx
   14001dd17:	mov    rcx,rdi
   14001dd1a:	call   QWORD PTR [rax+0x28]
   14001dd1d:	mov    rax,QWORD PTR [rbx]
   14001dd20:	mov    rdx,rdi
   14001dd23:	mov    rcx,rbx
   14001dd26:	call   QWORD PTR [rax+0x10]
   14001dd29:	mov    rdi,QWORD PTR [rsp+0x30]
   14001dd2e:	mov    rax,QWORD PTR [rbx]
   14001dd31:	mov    rdx,rsi
   14001dd34:	mov    rcx,rbx
   14001dd37:	mov    rbx,QWORD PTR [rsp+0x38]
   14001dd3c:	add    rsp,0x20
   14001dd40:	pop    rsi
   14001dd41:	rex.W jmp QWORD PTR [rax+0x360]
   14001dd48:	int3   
   14001dd49:	int3   
   14001dd4a:	int3   
   14001dd4b:	int3   
   14001dd4c:	int3   
   14001dd4d:	int3   
   14001dd4e:	int3   
   14001dd4f:	int3   
   14001dd50:	mov    QWORD PTR [rsp+0x10],rbx
   14001dd55:	push   rsi
   14001dd56:	sub    rsp,0x20
   14001dd5a:	mov    rax,QWORD PTR [rdx]
   14001dd5d:	mov    rbx,rdx
   14001dd60:	mov    rsi,rcx
   14001dd63:	mov    rdx,rcx
   14001dd66:	mov    rcx,rbx
   14001dd69:	call   QWORD PTR [rax+0x78]
   14001dd6c:	test   al,al
   14001dd6e:	je     0x14001ddab
   14001dd70:	mov    QWORD PTR [rsp+0x30],rdi
   14001dd75:	mov    rdi,QWORD PTR [rsi+0x10]
   14001dd79:	test   rdi,rdi
   14001dd7c:	je     0x14001dda6
   14001dd7e:	mov    rax,QWORD PTR [rbx]
   14001dd81:	mov    rdx,rdi
   14001dd84:	mov    rcx,rbx
   14001dd87:	call   QWORD PTR [rax+0x8]
   14001dd8a:	test   al,al
   14001dd8c:	je     0x14001dd9a
   14001dd8e:	mov    rax,QWORD PTR [rdi]
   14001dd91:	mov    rdx,rbx
   14001dd94:	mov    rcx,rdi
   14001dd97:	call   QWORD PTR [rax+0x28]
   14001dd9a:	mov    rax,QWORD PTR [rbx]
   14001dd9d:	mov    rdx,rdi
   14001dda0:	mov    rcx,rbx
   14001dda3:	call   QWORD PTR [rax+0x10]
   14001dda6:	mov    rdi,QWORD PTR [rsp+0x30]
   14001ddab:	mov    rax,QWORD PTR [rbx]
   14001ddae:	mov    rdx,rsi
   14001ddb1:	mov    rcx,rbx
   14001ddb4:	mov    rbx,QWORD PTR [rsp+0x38]
   14001ddb9:	add    rsp,0x20
   14001ddbd:	pop    rsi
   14001ddbe:	rex.W jmp QWORD PTR [rax+0x358]
   14001ddc5:	int3   
   14001ddc6:	int3   
   14001ddc7:	int3   
   14001ddc8:	int3   
   14001ddc9:	int3   
   14001ddca:	int3   
   14001ddcb:	int3   
   14001ddcc:	int3   
   14001ddcd:	int3   
   14001ddce:	int3   
   14001ddcf:	int3   
   14001ddd0:	mov    QWORD PTR [rsp+0x10],rbx
   14001ddd5:	push   rsi
   14001ddd6:	sub    rsp,0x20
   14001ddda:	mov    rax,QWORD PTR [rdx]
   14001dddd:	mov    rbx,rdx
   14001dde0:	mov    rsi,rcx
   14001dde3:	mov    rdx,rcx
   14001dde6:	mov    rcx,rbx
   14001dde9:	call   QWORD PTR [rax+0x70]
   14001ddec:	test   al,al
   14001ddee:	je     0x14001de91
   14001ddf4:	mov    QWORD PTR [rsp+0x30],rdi
   14001ddf9:	mov    rdi,QWORD PTR [rsi+0x10]
   14001ddfd:	test   rdi,rdi
   14001de00:	je     0x14001de2a
   14001de02:	mov    rax,QWORD PTR [rbx]
   14001de05:	mov    rdx,rdi
   14001de08:	mov    rcx,rbx
   14001de0b:	call   QWORD PTR [rax+0x8]
   14001de0e:	test   al,al
   14001de10:	je     0x14001de1e
   14001de12:	mov    rax,QWORD PTR [rdi]
   14001de15:	mov    rdx,rbx
   14001de18:	mov    rcx,rdi
   14001de1b:	call   QWORD PTR [rax+0x28]
   14001de1e:	mov    rax,QWORD PTR [rbx]
   14001de21:	mov    rdx,rdi
   14001de24:	mov    rcx,rbx
   14001de27:	call   QWORD PTR [rax+0x10]
   14001de2a:	mov    rdi,QWORD PTR [rsi+0x18]
   14001de2e:	test   rdi,rdi
   14001de31:	je     0x14001de5b
   14001de33:	mov    rax,QWORD PTR [rbx]
   14001de36:	mov    rdx,rdi
   14001de39:	mov    rcx,rbx
   14001de3c:	call   QWORD PTR [rax+0x8]
   14001de3f:	test   al,al
   14001de41:	je     0x14001de4f
   14001de43:	mov    rax,QWORD PTR [rdi]
   14001de46:	mov    rdx,rbx
   14001de49:	mov    rcx,rdi
   14001de4c:	call   QWORD PTR [rax+0x28]
   14001de4f:	mov    rax,QWORD PTR [rbx]
   14001de52:	mov    rdx,rdi
   14001de55:	mov    rcx,rbx
   14001de58:	call   QWORD PTR [rax+0x10]
   14001de5b:	mov    rdi,QWORD PTR [rsi+0x20]
   14001de5f:	test   rdi,rdi
   14001de62:	je     0x14001de8c
   14001de64:	mov    rax,QWORD PTR [rbx]
   14001de67:	mov    rdx,rdi
   14001de6a:	mov    rcx,rbx
   14001de6d:	call   QWORD PTR [rax+0x8]
   14001de70:	test   al,al
   14001de72:	je     0x14001de80
   14001de74:	mov    rax,QWORD PTR [rdi]
   14001de77:	mov    rdx,rbx
   14001de7a:	mov    rcx,rdi
   14001de7d:	call   QWORD PTR [rax+0x28]
   14001de80:	mov    rax,QWORD PTR [rbx]
   14001de83:	mov    rdx,rdi
   14001de86:	mov    rcx,rbx
   14001de89:	call   QWORD PTR [rax+0x10]
   14001de8c:	mov    rdi,QWORD PTR [rsp+0x30]
   14001de91:	mov    rax,QWORD PTR [rbx]
   14001de94:	mov    rdx,rsi
   14001de97:	mov    rcx,rbx
   14001de9a:	mov    rbx,QWORD PTR [rsp+0x38]
   14001de9f:	add    rsp,0x20
   14001dea3:	pop    rsi
   14001dea4:	rex.W jmp QWORD PTR [rax+0x350]
   14001deab:	int3   
   14001deac:	int3   
   14001dead:	int3   
   14001deae:	int3   
   14001deaf:	int3   
   14001deb0:	mov    QWORD PTR [rsp+0x10],rbx
   14001deb5:	push   rsi
   14001deb6:	sub    rsp,0x20
   14001deba:	mov    rax,QWORD PTR [rdx]
   14001debd:	mov    rbx,rdx
   14001dec0:	mov    rsi,rcx
   14001dec3:	mov    rdx,rcx
   14001dec6:	mov    rcx,rbx
   14001dec9:	call   QWORD PTR [rax+0x68]
   14001decc:	test   al,al
   14001dece:	je     0x14001df0b
   14001ded0:	mov    QWORD PTR [rsp+0x30],rdi
   14001ded5:	mov    rdi,QWORD PTR [rsi+0x20]
   14001ded9:	test   rdi,rdi
   14001dedc:	je     0x14001df06
   14001dede:	mov    rax,QWORD PTR [rbx]
   14001dee1:	mov    rdx,rdi
   14001dee4:	mov    rcx,rbx
   14001dee7:	call   QWORD PTR [rax+0x8]
   14001deea:	test   al,al
   14001deec:	je     0x14001defa
   14001deee:	mov    rax,QWORD PTR [rdi]
   14001def1:	mov    rdx,rbx
   14001def4:	mov    rcx,rdi
   14001def7:	call   QWORD PTR [rax+0x28]
   14001defa:	mov    rax,QWORD PTR [rbx]
   14001defd:	mov    rdx,rdi
   14001df00:	mov    rcx,rbx
   14001df03:	call   QWORD PTR [rax+0x10]
   14001df06:	mov    rdi,QWORD PTR [rsp+0x30]
   14001df0b:	mov    rax,QWORD PTR [rbx]
   14001df0e:	mov    rdx,rsi
   14001df11:	mov    rcx,rbx
   14001df14:	mov    rbx,QWORD PTR [rsp+0x38]
   14001df19:	add    rsp,0x20
   14001df1d:	pop    rsi
   14001df1e:	rex.W jmp QWORD PTR [rax+0x348]
   14001df25:	int3   
   14001df26:	int3   
   14001df27:	int3   
   14001df28:	int3   
   14001df29:	int3   
   14001df2a:	int3   
   14001df2b:	int3   
   14001df2c:	int3   
   14001df2d:	int3   
   14001df2e:	int3   
   14001df2f:	int3   
   14001df30:	mov    QWORD PTR [rsp+0x10],rbx
   14001df35:	push   rsi
   14001df36:	sub    rsp,0x20
   14001df3a:	mov    rax,QWORD PTR [rdx]
   14001df3d:	mov    rbx,rdx
   14001df40:	mov    rsi,rcx
   14001df43:	mov    rdx,rcx
   14001df46:	mov    rcx,rbx
   14001df49:	call   QWORD PTR [rax+0x60]
   14001df4c:	test   al,al
   14001df4e:	je     0x14001df8b
   14001df50:	mov    QWORD PTR [rsp+0x30],rdi
   14001df55:	mov    rdi,QWORD PTR [rsi+0x10]
   14001df59:	test   rdi,rdi
   14001df5c:	je     0x14001df86
   14001df5e:	mov    rax,QWORD PTR [rbx]
   14001df61:	mov    rdx,rdi
   14001df64:	mov    rcx,rbx
   14001df67:	call   QWORD PTR [rax+0x8]
   14001df6a:	test   al,al
   14001df6c:	je     0x14001df7a
   14001df6e:	mov    rax,QWORD PTR [rdi]
   14001df71:	mov    rdx,rbx
   14001df74:	mov    rcx,rdi
   14001df77:	call   QWORD PTR [rax+0x28]
   14001df7a:	mov    rax,QWORD PTR [rbx]
   14001df7d:	mov    rdx,rdi
   14001df80:	mov    rcx,rbx
   14001df83:	call   QWORD PTR [rax+0x10]
   14001df86:	mov    rdi,QWORD PTR [rsp+0x30]
   14001df8b:	mov    rax,QWORD PTR [rbx]
   14001df8e:	mov    rdx,rsi
   14001df91:	mov    rcx,rbx
   14001df94:	mov    rbx,QWORD PTR [rsp+0x38]
   14001df99:	add    rsp,0x20
   14001df9d:	pop    rsi
   14001df9e:	rex.W jmp QWORD PTR [rax+0x340]
   14001dfa5:	int3   
   14001dfa6:	int3   
   14001dfa7:	int3   
   14001dfa8:	int3   
   14001dfa9:	int3   
   14001dfaa:	int3   
   14001dfab:	int3   
   14001dfac:	int3   
   14001dfad:	int3   
   14001dfae:	int3   
   14001dfaf:	int3   
   14001dfb0:	mov    QWORD PTR [rsp+0x10],rbx
   14001dfb5:	push   rsi
   14001dfb6:	sub    rsp,0x20
   14001dfba:	mov    rax,QWORD PTR [rdx]
   14001dfbd:	mov    rbx,rdx
   14001dfc0:	mov    rsi,rcx
   14001dfc3:	mov    rdx,rcx
   14001dfc6:	mov    rcx,rbx
   14001dfc9:	call   QWORD PTR [rax+0x58]
   14001dfcc:	test   al,al
   14001dfce:	je     0x14001e03c
   14001dfd0:	mov    QWORD PTR [rsp+0x30],rdi
   14001dfd5:	mov    rdi,QWORD PTR [rsi+0x20]
   14001dfd9:	test   rdi,rdi
   14001dfdc:	je     0x14001e006
   14001dfde:	mov    rax,QWORD PTR [rbx]
   14001dfe1:	mov    rdx,rdi
   14001dfe4:	mov    rcx,rbx
   14001dfe7:	call   QWORD PTR [rax+0x8]
   14001dfea:	test   al,al
   14001dfec:	je     0x14001dffa
   14001dfee:	mov    rax,QWORD PTR [rdi]
   14001dff1:	mov    rdx,rbx
   14001dff4:	mov    rcx,rdi
   14001dff7:	call   QWORD PTR [rax+0x28]
   14001dffa:	mov    rax,QWORD PTR [rbx]
   14001dffd:	mov    rdx,rdi
   14001e000:	mov    rcx,rbx
   14001e003:	call   QWORD PTR [rax+0x10]
   14001e006:	mov    rdi,QWORD PTR [rsi+0x28]
   14001e00a:	test   rdi,rdi
   14001e00d:	je     0x14001e037
   14001e00f:	mov    rax,QWORD PTR [rbx]
   14001e012:	mov    rdx,rdi
   14001e015:	mov    rcx,rbx
   14001e018:	call   QWORD PTR [rax+0x8]
   14001e01b:	test   al,al
   14001e01d:	je     0x14001e02b
   14001e01f:	mov    rax,QWORD PTR [rdi]
   14001e022:	mov    rdx,rbx
   14001e025:	mov    rcx,rdi
   14001e028:	call   QWORD PTR [rax+0x28]
   14001e02b:	mov    rax,QWORD PTR [rbx]
   14001e02e:	mov    rdx,rdi
   14001e031:	mov    rcx,rbx
   14001e034:	call   QWORD PTR [rax+0x10]
   14001e037:	mov    rdi,QWORD PTR [rsp+0x30]
   14001e03c:	mov    rax,QWORD PTR [rbx]
   14001e03f:	mov    rdx,rsi
   14001e042:	mov    rcx,rbx
   14001e045:	mov    rbx,QWORD PTR [rsp+0x38]
   14001e04a:	add    rsp,0x20
   14001e04e:	pop    rsi
   14001e04f:	rex.W jmp QWORD PTR [rax+0x338]
   14001e056:	int3   
   14001e057:	int3   
   14001e058:	int3   
   14001e059:	int3   
   14001e05a:	int3   
   14001e05b:	int3   
   14001e05c:	int3   
   14001e05d:	int3   
   14001e05e:	int3   
   14001e05f:	int3   
   14001e060:	mov    QWORD PTR [rsp+0x10],rbx
   14001e065:	push   rsi
   14001e066:	sub    rsp,0x20
   14001e06a:	mov    rax,QWORD PTR [rdx]
   14001e06d:	mov    rbx,rdx
   14001e070:	mov    rsi,rcx
   14001e073:	mov    rdx,rcx
   14001e076:	mov    rcx,rbx
   14001e079:	call   QWORD PTR [rax+0x50]
   14001e07c:	test   al,al
   14001e07e:	je     0x14001e0ec
   14001e080:	mov    QWORD PTR [rsp+0x30],rdi
   14001e085:	mov    rdi,QWORD PTR [rsi+0x20]
   14001e089:	test   rdi,rdi
   14001e08c:	je     0x14001e0b6
   14001e08e:	mov    rax,QWORD PTR [rbx]
   14001e091:	mov    rdx,rdi
   14001e094:	mov    rcx,rbx
   14001e097:	call   QWORD PTR [rax+0x8]
   14001e09a:	test   al,al
   14001e09c:	je     0x14001e0aa
   14001e09e:	mov    rax,QWORD PTR [rdi]
   14001e0a1:	mov    rdx,rbx
   14001e0a4:	mov    rcx,rdi
   14001e0a7:	call   QWORD PTR [rax+0x28]
   14001e0aa:	mov    rax,QWORD PTR [rbx]
   14001e0ad:	mov    rdx,rdi
   14001e0b0:	mov    rcx,rbx
   14001e0b3:	call   QWORD PTR [rax+0x10]
   14001e0b6:	mov    rdi,QWORD PTR [rsi+0x28]
   14001e0ba:	test   rdi,rdi
   14001e0bd:	je     0x14001e0e7
   14001e0bf:	mov    rax,QWORD PTR [rbx]
   14001e0c2:	mov    rdx,rdi
   14001e0c5:	mov    rcx,rbx
   14001e0c8:	call   QWORD PTR [rax+0x8]
   14001e0cb:	test   al,al
   14001e0cd:	je     0x14001e0db
   14001e0cf:	mov    rax,QWORD PTR [rdi]
   14001e0d2:	mov    rdx,rbx
   14001e0d5:	mov    rcx,rdi
   14001e0d8:	call   QWORD PTR [rax+0x28]
   14001e0db:	mov    rax,QWORD PTR [rbx]
   14001e0de:	mov    rdx,rdi
   14001e0e1:	mov    rcx,rbx
   14001e0e4:	call   QWORD PTR [rax+0x10]
   14001e0e7:	mov    rdi,QWORD PTR [rsp+0x30]
   14001e0ec:	mov    rax,QWORD PTR [rbx]
   14001e0ef:	mov    rdx,rsi
   14001e0f2:	mov    rcx,rbx
   14001e0f5:	mov    rbx,QWORD PTR [rsp+0x38]
   14001e0fa:	add    rsp,0x20
   14001e0fe:	pop    rsi
   14001e0ff:	rex.W jmp QWORD PTR [rax+0x330]
   14001e106:	int3   
   14001e107:	int3   
   14001e108:	int3   
   14001e109:	int3   
   14001e10a:	int3   
   14001e10b:	int3   
   14001e10c:	int3   
   14001e10d:	int3   
   14001e10e:	int3   
   14001e10f:	int3   
   14001e110:	mov    QWORD PTR [rsp+0x8],rbx
   14001e115:	push   rdi
   14001e116:	sub    rsp,0x20
   14001e11a:	mov    rax,QWORD PTR [rdx]
   14001e11d:	mov    rdi,rdx
   14001e120:	mov    rbx,rcx
   14001e123:	mov    rdx,rcx
   14001e126:	mov    rcx,rdi
   14001e129:	call   QWORD PTR [rax+0x48]
   14001e12c:	mov    r11,QWORD PTR [rdi]
   14001e12f:	mov    rdx,rbx
   14001e132:	mov    rcx,rdi
   14001e135:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e13a:	add    rsp,0x20
   14001e13e:	pop    rdi
   14001e13f:	rex.WB jmp QWORD PTR [r11+0x328]
   14001e146:	int3   
   14001e147:	int3   
   14001e148:	int3   
   14001e149:	int3   
   14001e14a:	int3   
   14001e14b:	int3   
   14001e14c:	int3   
   14001e14d:	int3   
   14001e14e:	int3   
   14001e14f:	int3   
   14001e150:	mov    QWORD PTR [rsp+0x10],rbx
   14001e155:	push   rsi
   14001e156:	sub    rsp,0x20
   14001e15a:	mov    rax,QWORD PTR [rdx]
   14001e15d:	mov    rbx,rdx
   14001e160:	mov    rsi,rcx
   14001e163:	mov    rdx,rcx
   14001e166:	mov    rcx,rbx
   14001e169:	call   QWORD PTR [rax+0x40]
   14001e16c:	test   al,al
   14001e16e:	je     0x14001e1ab
   14001e170:	mov    QWORD PTR [rsp+0x30],rdi
   14001e175:	mov    rdi,QWORD PTR [rsi+0x10]
   14001e179:	test   rdi,rdi
   14001e17c:	je     0x14001e1a6
   14001e17e:	mov    rax,QWORD PTR [rbx]
   14001e181:	mov    rdx,rdi
   14001e184:	mov    rcx,rbx
   14001e187:	call   QWORD PTR [rax+0x8]
   14001e18a:	test   al,al
   14001e18c:	je     0x14001e19a
   14001e18e:	mov    rax,QWORD PTR [rdi]
   14001e191:	mov    rdx,rbx
   14001e194:	mov    rcx,rdi
   14001e197:	call   QWORD PTR [rax+0x28]
   14001e19a:	mov    rax,QWORD PTR [rbx]
   14001e19d:	mov    rdx,rdi
   14001e1a0:	mov    rcx,rbx
   14001e1a3:	call   QWORD PTR [rax+0x10]
   14001e1a6:	mov    rdi,QWORD PTR [rsp+0x30]
   14001e1ab:	mov    rax,QWORD PTR [rbx]
   14001e1ae:	mov    rdx,rsi
   14001e1b1:	mov    rcx,rbx
   14001e1b4:	mov    rbx,QWORD PTR [rsp+0x38]
   14001e1b9:	add    rsp,0x20
   14001e1bd:	pop    rsi
   14001e1be:	rex.W jmp QWORD PTR [rax+0x320]
   14001e1c5:	int3   
   14001e1c6:	int3   
   14001e1c7:	int3   
   14001e1c8:	int3   
   14001e1c9:	int3   
   14001e1ca:	int3   
   14001e1cb:	int3   
   14001e1cc:	int3   
   14001e1cd:	int3   
   14001e1ce:	int3   
   14001e1cf:	int3   
   14001e1d0:	mov    QWORD PTR [rsp+0x10],rbx
   14001e1d5:	push   rsi
   14001e1d6:	sub    rsp,0x20
   14001e1da:	mov    rax,QWORD PTR [rdx]
   14001e1dd:	mov    rbx,rdx
   14001e1e0:	mov    rsi,rcx
   14001e1e3:	mov    rdx,rcx
   14001e1e6:	mov    rcx,rbx
   14001e1e9:	call   QWORD PTR [rax+0x38]
   14001e1ec:	test   al,al
   14001e1ee:	je     0x14001e22b
   14001e1f0:	mov    QWORD PTR [rsp+0x30],rdi
   14001e1f5:	mov    rdi,QWORD PTR [rsi+0x10]
   14001e1f9:	test   rdi,rdi
   14001e1fc:	je     0x14001e226
   14001e1fe:	mov    rax,QWORD PTR [rbx]
   14001e201:	mov    rdx,rdi
   14001e204:	mov    rcx,rbx
   14001e207:	call   QWORD PTR [rax+0x8]
   14001e20a:	test   al,al
   14001e20c:	je     0x14001e21a
   14001e20e:	mov    rax,QWORD PTR [rdi]
   14001e211:	mov    rdx,rbx
   14001e214:	mov    rcx,rdi
   14001e217:	call   QWORD PTR [rax+0x28]
   14001e21a:	mov    rax,QWORD PTR [rbx]
   14001e21d:	mov    rdx,rdi
   14001e220:	mov    rcx,rbx
   14001e223:	call   QWORD PTR [rax+0x10]
   14001e226:	mov    rdi,QWORD PTR [rsp+0x30]
   14001e22b:	mov    rax,QWORD PTR [rbx]
   14001e22e:	mov    rdx,rsi
   14001e231:	mov    rcx,rbx
   14001e234:	mov    rbx,QWORD PTR [rsp+0x38]
   14001e239:	add    rsp,0x20
   14001e23d:	pop    rsi
   14001e23e:	rex.W jmp QWORD PTR [rax+0x318]
   14001e245:	int3   
   14001e246:	int3   
   14001e247:	int3   
   14001e248:	int3   
   14001e249:	int3   
   14001e24a:	int3   
   14001e24b:	int3   
   14001e24c:	int3   
   14001e24d:	int3   
   14001e24e:	int3   
   14001e24f:	int3   
   14001e250:	mov    QWORD PTR [rsp+0x18],rbp
   14001e255:	push   rsi
   14001e256:	sub    rsp,0x20
   14001e25a:	mov    rax,QWORD PTR [rdx]
   14001e25d:	mov    rsi,rdx
   14001e260:	mov    rbp,rcx
   14001e263:	mov    rdx,rcx
   14001e266:	mov    rcx,rsi
   14001e269:	call   QWORD PTR [rax+0x30]
   14001e26c:	test   al,al
   14001e26e:	je     0x14001e2c6
   14001e270:	mov    QWORD PTR [rsp+0x30],rbx
   14001e275:	mov    rbx,rbp
   14001e278:	test   rbp,rbp
   14001e27b:	je     0x14001e2c1
   14001e27d:	mov    QWORD PTR [rsp+0x38],rdi
   14001e282:	mov    rdi,QWORD PTR [rbx+0x10]
   14001e286:	test   rdi,rdi
   14001e289:	je     0x14001e2b3
   14001e28b:	mov    rax,QWORD PTR [rsi]
   14001e28e:	mov    rdx,rdi
   14001e291:	mov    rcx,rsi
   14001e294:	call   QWORD PTR [rax+0x8]
   14001e297:	test   al,al
   14001e299:	je     0x14001e2a7
   14001e29b:	mov    rax,QWORD PTR [rdi]
   14001e29e:	mov    rdx,rsi
   14001e2a1:	mov    rcx,rdi
   14001e2a4:	call   QWORD PTR [rax+0x28]
   14001e2a7:	mov    rax,QWORD PTR [rsi]
   14001e2aa:	mov    rdx,rdi
   14001e2ad:	mov    rcx,rsi
   14001e2b0:	call   QWORD PTR [rax+0x10]
   14001e2b3:	mov    rbx,QWORD PTR [rbx+0x18]
   14001e2b7:	test   rbx,rbx
   14001e2ba:	jne    0x14001e282
   14001e2bc:	mov    rdi,QWORD PTR [rsp+0x38]
   14001e2c1:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e2c6:	mov    rax,QWORD PTR [rsi]
   14001e2c9:	mov    rdx,rbp
   14001e2cc:	mov    rcx,rsi
   14001e2cf:	mov    rbp,QWORD PTR [rsp+0x40]
   14001e2d4:	add    rsp,0x20
   14001e2d8:	pop    rsi
   14001e2d9:	rex.W jmp QWORD PTR [rax+0x310]
   14001e2e0:	mov    QWORD PTR [rsp+0x10],rbx
   14001e2e5:	push   rsi
   14001e2e6:	sub    rsp,0x20
   14001e2ea:	mov    rax,QWORD PTR [rdx]
   14001e2ed:	mov    rbx,rdx
   14001e2f0:	mov    rsi,rcx
   14001e2f3:	mov    rdx,rcx
   14001e2f6:	mov    rcx,rbx
   14001e2f9:	call   QWORD PTR [rax+0x28]
   14001e2fc:	test   al,al
   14001e2fe:	je     0x14001e33b
   14001e300:	mov    QWORD PTR [rsp+0x30],rdi
   14001e305:	mov    rdi,QWORD PTR [rsi+0x10]
   14001e309:	test   rdi,rdi
   14001e30c:	je     0x14001e336
   14001e30e:	mov    rax,QWORD PTR [rbx]
   14001e311:	mov    rdx,rdi
   14001e314:	mov    rcx,rbx
   14001e317:	call   QWORD PTR [rax+0x8]
   14001e31a:	test   al,al
   14001e31c:	je     0x14001e32a
   14001e31e:	mov    rax,QWORD PTR [rdi]
   14001e321:	mov    rdx,rbx
   14001e324:	mov    rcx,rdi
   14001e327:	call   QWORD PTR [rax+0x28]
   14001e32a:	mov    rax,QWORD PTR [rbx]
   14001e32d:	mov    rdx,rdi
   14001e330:	mov    rcx,rbx
   14001e333:	call   QWORD PTR [rax+0x10]
   14001e336:	mov    rdi,QWORD PTR [rsp+0x30]
   14001e33b:	mov    rax,QWORD PTR [rbx]
   14001e33e:	mov    rdx,rsi
   14001e341:	mov    rcx,rbx
   14001e344:	mov    rbx,QWORD PTR [rsp+0x38]
   14001e349:	add    rsp,0x20
   14001e34d:	pop    rsi
   14001e34e:	rex.W jmp QWORD PTR [rax+0x308]
   14001e355:	int3   
   14001e356:	int3   
   14001e357:	int3   
   14001e358:	int3   
   14001e359:	int3   
   14001e35a:	int3   
   14001e35b:	int3   
   14001e35c:	int3   
   14001e35d:	int3   
   14001e35e:	int3   
   14001e35f:	int3   
   14001e360:	mov    QWORD PTR [rsp+0x10],rbx
   14001e365:	push   rsi
   14001e366:	sub    rsp,0x20
   14001e36a:	mov    rax,QWORD PTR [rdx]
   14001e36d:	mov    rbx,rdx
   14001e370:	mov    rsi,rcx
   14001e373:	mov    rdx,rcx
   14001e376:	mov    rcx,rbx
   14001e379:	call   QWORD PTR [rax+0x20]
   14001e37c:	test   al,al
   14001e37e:	je     0x14001e3bb
   14001e380:	mov    QWORD PTR [rsp+0x30],rdi
   14001e385:	mov    rdi,QWORD PTR [rsi+0x10]
   14001e389:	test   rdi,rdi
   14001e38c:	je     0x14001e3b6
   14001e38e:	mov    rax,QWORD PTR [rbx]
   14001e391:	mov    rdx,rdi
   14001e394:	mov    rcx,rbx
   14001e397:	call   QWORD PTR [rax+0x8]
   14001e39a:	test   al,al
   14001e39c:	je     0x14001e3aa
   14001e39e:	mov    rax,QWORD PTR [rdi]
   14001e3a1:	mov    rdx,rbx
   14001e3a4:	mov    rcx,rdi
   14001e3a7:	call   QWORD PTR [rax+0x28]
   14001e3aa:	mov    rax,QWORD PTR [rbx]
   14001e3ad:	mov    rdx,rdi
   14001e3b0:	mov    rcx,rbx
   14001e3b3:	call   QWORD PTR [rax+0x10]
   14001e3b6:	mov    rdi,QWORD PTR [rsp+0x30]
   14001e3bb:	mov    rax,QWORD PTR [rbx]
   14001e3be:	mov    rdx,rsi
   14001e3c1:	mov    rcx,rbx
   14001e3c4:	mov    rbx,QWORD PTR [rsp+0x38]
   14001e3c9:	add    rsp,0x20
   14001e3cd:	pop    rsi
   14001e3ce:	rex.W jmp QWORD PTR [rax+0x300]
   14001e3d5:	int3   
   14001e3d6:	int3   
   14001e3d7:	int3   
   14001e3d8:	int3   
   14001e3d9:	int3   
   14001e3da:	int3   
   14001e3db:	int3   
   14001e3dc:	int3   
   14001e3dd:	int3   
   14001e3de:	int3   
   14001e3df:	int3   
   14001e3e0:	mov    QWORD PTR [rsp+0x8],rbx
   14001e3e5:	push   rdi
   14001e3e6:	sub    rsp,0x20
   14001e3ea:	mov    rax,QWORD PTR [rdx]
   14001e3ed:	mov    rdi,rdx
   14001e3f0:	mov    rbx,rcx
   14001e3f3:	mov    rdx,rcx
   14001e3f6:	mov    rcx,rdi
   14001e3f9:	call   QWORD PTR [rax+0x18]
   14001e3fc:	mov    r11,QWORD PTR [rdi]
   14001e3ff:	mov    rdx,rbx
   14001e402:	mov    rcx,rdi
   14001e405:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e40a:	add    rsp,0x20
   14001e40e:	pop    rdi
   14001e40f:	rex.WB jmp QWORD PTR [r11+0x2f8]
   14001e416:	int3   
   14001e417:	int3   
   14001e418:	int3   
   14001e419:	int3   
   14001e41a:	int3   
   14001e41b:	int3   
   14001e41c:	int3   
   14001e41d:	int3   
   14001e41e:	int3   
   14001e41f:	int3   
   14001e420:	mov    QWORD PTR [rsp+0x10],rbx
   14001e425:	push   rsi
   14001e426:	sub    rsp,0x20
   14001e42a:	mov    rax,QWORD PTR [rdx]
   14001e42d:	mov    rbx,rdx
   14001e430:	mov    rsi,rcx
   14001e433:	mov    rdx,rcx
   14001e436:	mov    rcx,rbx
   14001e439:	call   QWORD PTR [rax+0x2f0]
   14001e43f:	test   al,al
   14001e441:	je     0x14001e4af
   14001e443:	mov    QWORD PTR [rsp+0x30],rdi
   14001e448:	mov    rdi,QWORD PTR [rsi+0x10]
   14001e44c:	test   rdi,rdi
   14001e44f:	je     0x14001e479
   14001e451:	mov    rax,QWORD PTR [rbx]
   14001e454:	mov    rdx,rdi
   14001e457:	mov    rcx,rbx
   14001e45a:	call   QWORD PTR [rax+0x8]
   14001e45d:	test   al,al
   14001e45f:	je     0x14001e46d
   14001e461:	mov    rax,QWORD PTR [rdi]
   14001e464:	mov    rdx,rbx
   14001e467:	mov    rcx,rdi
   14001e46a:	call   QWORD PTR [rax+0x28]
   14001e46d:	mov    rax,QWORD PTR [rbx]
   14001e470:	mov    rdx,rdi
   14001e473:	mov    rcx,rbx
   14001e476:	call   QWORD PTR [rax+0x10]
   14001e479:	mov    rdi,QWORD PTR [rsi+0x18]
   14001e47d:	test   rdi,rdi
   14001e480:	je     0x14001e4aa
   14001e482:	mov    rax,QWORD PTR [rbx]
   14001e485:	mov    rdx,rdi
   14001e488:	mov    rcx,rbx
   14001e48b:	call   QWORD PTR [rax+0x8]
   14001e48e:	test   al,al
   14001e490:	je     0x14001e49e
   14001e492:	mov    rax,QWORD PTR [rdi]
   14001e495:	mov    rdx,rbx
   14001e498:	mov    rcx,rdi
   14001e49b:	call   QWORD PTR [rax+0x28]
   14001e49e:	mov    rax,QWORD PTR [rbx]
   14001e4a1:	mov    rdx,rdi
   14001e4a4:	mov    rcx,rbx
   14001e4a7:	call   QWORD PTR [rax+0x10]
   14001e4aa:	mov    rdi,QWORD PTR [rsp+0x30]
   14001e4af:	mov    rax,QWORD PTR [rbx]
   14001e4b2:	mov    rdx,rsi
   14001e4b5:	mov    rcx,rbx
   14001e4b8:	mov    rbx,QWORD PTR [rsp+0x38]
   14001e4bd:	add    rsp,0x20
   14001e4c1:	pop    rsi
   14001e4c2:	rex.W jmp QWORD PTR [rax+0x5d0]
   14001e4c9:	int3   
   14001e4ca:	int3   
   14001e4cb:	int3   
   14001e4cc:	int3   
   14001e4cd:	int3   
   14001e4ce:	int3   
   14001e4cf:	int3   
   14001e4d0:	mov    QWORD PTR [rsp+0x10],rbx
   14001e4d5:	push   rsi
   14001e4d6:	sub    rsp,0x20
   14001e4da:	mov    rax,QWORD PTR [rdx]
   14001e4dd:	mov    rbx,rdx
   14001e4e0:	mov    rsi,rcx
   14001e4e3:	mov    rdx,rcx
   14001e4e6:	mov    rcx,rbx
   14001e4e9:	call   QWORD PTR [rax+0x2d0]
   14001e4ef:	test   al,al
   14001e4f1:	je     0x14001e55f
   14001e4f3:	mov    QWORD PTR [rsp+0x30],rdi
   14001e4f8:	mov    rdi,QWORD PTR [rsi+0x48]
   14001e4fc:	test   rdi,rdi
   14001e4ff:	je     0x14001e529
   14001e501:	mov    rax,QWORD PTR [rbx]
   14001e504:	mov    rdx,rdi
   14001e507:	mov    rcx,rbx
   14001e50a:	call   QWORD PTR [rax+0x8]
   14001e50d:	test   al,al
   14001e50f:	je     0x14001e51d
   14001e511:	mov    rax,QWORD PTR [rdi]
   14001e514:	mov    rdx,rbx
   14001e517:	mov    rcx,rdi
   14001e51a:	call   QWORD PTR [rax+0x28]
   14001e51d:	mov    rax,QWORD PTR [rbx]
   14001e520:	mov    rdx,rdi
   14001e523:	mov    rcx,rbx
   14001e526:	call   QWORD PTR [rax+0x10]
   14001e529:	mov    rdi,QWORD PTR [rsi+0x50]
   14001e52d:	test   rdi,rdi
   14001e530:	je     0x14001e55a
   14001e532:	mov    rax,QWORD PTR [rbx]
   14001e535:	mov    rdx,rdi
   14001e538:	mov    rcx,rbx
   14001e53b:	call   QWORD PTR [rax+0x8]
   14001e53e:	test   al,al
   14001e540:	je     0x14001e54e
   14001e542:	mov    rax,QWORD PTR [rdi]
   14001e545:	mov    rdx,rbx
   14001e548:	mov    rcx,rdi
   14001e54b:	call   QWORD PTR [rax+0x28]
   14001e54e:	mov    rax,QWORD PTR [rbx]
   14001e551:	mov    rdx,rdi
   14001e554:	mov    rcx,rbx
   14001e557:	call   QWORD PTR [rax+0x10]
   14001e55a:	mov    rdi,QWORD PTR [rsp+0x30]
   14001e55f:	mov    rax,QWORD PTR [rbx]
   14001e562:	mov    rdx,rsi
   14001e565:	mov    rcx,rbx
   14001e568:	mov    rbx,QWORD PTR [rsp+0x38]
   14001e56d:	add    rsp,0x20
   14001e571:	pop    rsi
   14001e572:	rex.W jmp QWORD PTR [rax+0x5b0]
   14001e579:	int3   
   14001e57a:	int3   
   14001e57b:	int3   
   14001e57c:	int3   
   14001e57d:	int3   
   14001e57e:	int3   
   14001e57f:	int3   
   14001e580:	mov    QWORD PTR [rsp+0x10],rbx
   14001e585:	push   rsi
   14001e586:	sub    rsp,0x20
   14001e58a:	mov    rax,QWORD PTR [rdx]
   14001e58d:	mov    rbx,rdx
   14001e590:	mov    rsi,rcx
   14001e593:	mov    rdx,rcx
   14001e596:	mov    rcx,rbx
   14001e599:	call   QWORD PTR [rax+0x2c0]
   14001e59f:	test   al,al
   14001e5a1:	je     0x14001e60f
   14001e5a3:	mov    QWORD PTR [rsp+0x30],rdi
   14001e5a8:	mov    rdi,QWORD PTR [rsi+0x10]
   14001e5ac:	test   rdi,rdi
   14001e5af:	je     0x14001e5d9
   14001e5b1:	mov    rax,QWORD PTR [rbx]
   14001e5b4:	mov    rdx,rdi
   14001e5b7:	mov    rcx,rbx
   14001e5ba:	call   QWORD PTR [rax+0x8]
   14001e5bd:	test   al,al
   14001e5bf:	je     0x14001e5cd
   14001e5c1:	mov    rax,QWORD PTR [rdi]
   14001e5c4:	mov    rdx,rbx
   14001e5c7:	mov    rcx,rdi
   14001e5ca:	call   QWORD PTR [rax+0x28]
   14001e5cd:	mov    rax,QWORD PTR [rbx]
   14001e5d0:	mov    rdx,rdi
   14001e5d3:	mov    rcx,rbx
   14001e5d6:	call   QWORD PTR [rax+0x10]
   14001e5d9:	mov    rdi,QWORD PTR [rsi+0x18]
   14001e5dd:	test   rdi,rdi
   14001e5e0:	je     0x14001e60a
   14001e5e2:	mov    rax,QWORD PTR [rbx]
   14001e5e5:	mov    rdx,rdi
   14001e5e8:	mov    rcx,rbx
   14001e5eb:	call   QWORD PTR [rax+0x8]
   14001e5ee:	test   al,al
   14001e5f0:	je     0x14001e5fe
   14001e5f2:	mov    rax,QWORD PTR [rdi]
   14001e5f5:	mov    rdx,rbx
   14001e5f8:	mov    rcx,rdi
   14001e5fb:	call   QWORD PTR [rax+0x28]
   14001e5fe:	mov    rax,QWORD PTR [rbx]
   14001e601:	mov    rdx,rdi
   14001e604:	mov    rcx,rbx
   14001e607:	call   QWORD PTR [rax+0x10]
   14001e60a:	mov    rdi,QWORD PTR [rsp+0x30]
   14001e60f:	mov    rax,QWORD PTR [rbx]
   14001e612:	mov    rdx,rsi
   14001e615:	mov    rcx,rbx
   14001e618:	mov    rbx,QWORD PTR [rsp+0x38]
   14001e61d:	add    rsp,0x20
   14001e621:	pop    rsi
   14001e622:	rex.W jmp QWORD PTR [rax+0x5a0]
   14001e629:	int3   
   14001e62a:	int3   
   14001e62b:	int3   
   14001e62c:	int3   
   14001e62d:	int3   
   14001e62e:	int3   
   14001e62f:	int3   
   14001e630:	mov    QWORD PTR [rsp+0x10],rbx
   14001e635:	push   rsi
   14001e636:	sub    rsp,0x20
   14001e63a:	mov    rax,QWORD PTR [rdx]
   14001e63d:	mov    rbx,rdx
   14001e640:	mov    rsi,rcx
   14001e643:	mov    rdx,rcx
   14001e646:	mov    rcx,rbx
   14001e649:	call   QWORD PTR [rax+0x2b8]
   14001e64f:	test   al,al
   14001e651:	je     0x14001e68e
   14001e653:	mov    QWORD PTR [rsp+0x30],rdi
   14001e658:	mov    rdi,QWORD PTR [rsi+0x20]
   14001e65c:	test   rdi,rdi
   14001e65f:	je     0x14001e689
   14001e661:	mov    rax,QWORD PTR [rbx]
   14001e664:	mov    rdx,rdi
   14001e667:	mov    rcx,rbx
   14001e66a:	call   QWORD PTR [rax+0x8]
   14001e66d:	test   al,al
   14001e66f:	je     0x14001e67d
   14001e671:	mov    rax,QWORD PTR [rdi]
   14001e674:	mov    rdx,rbx
   14001e677:	mov    rcx,rdi
   14001e67a:	call   QWORD PTR [rax+0x28]
   14001e67d:	mov    rax,QWORD PTR [rbx]
   14001e680:	mov    rdx,rdi
   14001e683:	mov    rcx,rbx
   14001e686:	call   QWORD PTR [rax+0x10]
   14001e689:	mov    rdi,QWORD PTR [rsp+0x30]
   14001e68e:	mov    rax,QWORD PTR [rbx]
   14001e691:	mov    rdx,rsi
   14001e694:	mov    rcx,rbx
   14001e697:	mov    rbx,QWORD PTR [rsp+0x38]
   14001e69c:	add    rsp,0x20
   14001e6a0:	pop    rsi
   14001e6a1:	rex.W jmp QWORD PTR [rax+0x598]
   14001e6a8:	int3   
   14001e6a9:	int3   
   14001e6aa:	int3   
   14001e6ab:	int3   
   14001e6ac:	int3   
   14001e6ad:	int3   
   14001e6ae:	int3   
   14001e6af:	int3   
   14001e6b0:	mov    QWORD PTR [rsp+0x8],rbx
   14001e6b5:	push   rdi
   14001e6b6:	sub    rsp,0x20
   14001e6ba:	mov    rax,QWORD PTR [rdx]
   14001e6bd:	mov    rdi,rdx
   14001e6c0:	mov    rbx,rcx
   14001e6c3:	mov    rdx,rcx
   14001e6c6:	mov    rcx,rdi
   14001e6c9:	call   QWORD PTR [rax+0x298]
   14001e6cf:	mov    r11,QWORD PTR [rdi]
   14001e6d2:	mov    rdx,rbx
   14001e6d5:	mov    rcx,rdi
   14001e6d8:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e6dd:	add    rsp,0x20
   14001e6e1:	pop    rdi
   14001e6e2:	rex.WB jmp QWORD PTR [r11+0x578]
   14001e6e9:	int3   
   14001e6ea:	int3   
   14001e6eb:	int3   
   14001e6ec:	int3   
   14001e6ed:	int3   
   14001e6ee:	int3   
   14001e6ef:	int3   
   14001e6f0:	mov    QWORD PTR [rsp+0x10],rbx
   14001e6f5:	push   rsi
   14001e6f6:	sub    rsp,0x20
   14001e6fa:	mov    rax,QWORD PTR [rdx]
   14001e6fd:	mov    rbx,rdx
   14001e700:	mov    rsi,rcx
   14001e703:	mov    rdx,rcx
   14001e706:	mov    rcx,rbx
   14001e709:	call   QWORD PTR [rax+0x2b0]
   14001e70f:	test   al,al
   14001e711:	je     0x14001e7b4
   14001e717:	mov    QWORD PTR [rsp+0x30],rdi
   14001e71c:	mov    rdi,QWORD PTR [rsi+0x10]
   14001e720:	test   rdi,rdi
   14001e723:	je     0x14001e74d
   14001e725:	mov    rax,QWORD PTR [rbx]
   14001e728:	mov    rdx,rdi
   14001e72b:	mov    rcx,rbx
   14001e72e:	call   QWORD PTR [rax+0x8]
   14001e731:	test   al,al
   14001e733:	je     0x14001e741
   14001e735:	mov    rax,QWORD PTR [rdi]
   14001e738:	mov    rdx,rbx
   14001e73b:	mov    rcx,rdi
   14001e73e:	call   QWORD PTR [rax+0x28]
   14001e741:	mov    rax,QWORD PTR [rbx]
   14001e744:	mov    rdx,rdi
   14001e747:	mov    rcx,rbx
   14001e74a:	call   QWORD PTR [rax+0x10]
   14001e74d:	mov    rdi,QWORD PTR [rsi+0x18]
   14001e751:	test   rdi,rdi
   14001e754:	je     0x14001e77e
   14001e756:	mov    rax,QWORD PTR [rbx]
   14001e759:	mov    rdx,rdi
   14001e75c:	mov    rcx,rbx
   14001e75f:	call   QWORD PTR [rax+0x8]
   14001e762:	test   al,al
   14001e764:	je     0x14001e772
   14001e766:	mov    rax,QWORD PTR [rdi]
   14001e769:	mov    rdx,rbx
   14001e76c:	mov    rcx,rdi
   14001e76f:	call   QWORD PTR [rax+0x28]
   14001e772:	mov    rax,QWORD PTR [rbx]
   14001e775:	mov    rdx,rdi
   14001e778:	mov    rcx,rbx
   14001e77b:	call   QWORD PTR [rax+0x10]
   14001e77e:	mov    rdi,QWORD PTR [rsi+0x20]
   14001e782:	test   rdi,rdi
   14001e785:	je     0x14001e7af
   14001e787:	mov    rax,QWORD PTR [rbx]
   14001e78a:	mov    rdx,rdi
   14001e78d:	mov    rcx,rbx
   14001e790:	call   QWORD PTR [rax+0x8]
   14001e793:	test   al,al
   14001e795:	je     0x14001e7a3
   14001e797:	mov    rax,QWORD PTR [rdi]
   14001e79a:	mov    rdx,rbx
   14001e79d:	mov    rcx,rdi
   14001e7a0:	call   QWORD PTR [rax+0x28]
   14001e7a3:	mov    rax,QWORD PTR [rbx]
   14001e7a6:	mov    rdx,rdi
   14001e7a9:	mov    rcx,rbx
   14001e7ac:	call   QWORD PTR [rax+0x10]
   14001e7af:	mov    rdi,QWORD PTR [rsp+0x30]
   14001e7b4:	mov    rax,QWORD PTR [rbx]
   14001e7b7:	mov    rdx,rsi
   14001e7ba:	mov    rcx,rbx
   14001e7bd:	mov    rbx,QWORD PTR [rsp+0x38]
   14001e7c2:	add    rsp,0x20
   14001e7c6:	pop    rsi
   14001e7c7:	rex.W jmp QWORD PTR [rax+0x590]
   14001e7ce:	int3   
   14001e7cf:	int3   
   14001e7d0:	mov    QWORD PTR [rsp+0x10],rbx
   14001e7d5:	push   rsi
   14001e7d6:	sub    rsp,0x20
   14001e7da:	mov    rax,QWORD PTR [rdx]
   14001e7dd:	mov    rbx,rdx
   14001e7e0:	mov    rsi,rcx
   14001e7e3:	mov    rdx,rcx
   14001e7e6:	mov    rcx,rbx
   14001e7e9:	call   QWORD PTR [rax+0x2a8]
   14001e7ef:	test   al,al
   14001e7f1:	je     0x14001e85f
   14001e7f3:	mov    QWORD PTR [rsp+0x30],rdi
   14001e7f8:	mov    rdi,QWORD PTR [rsi+0x10]
   14001e7fc:	test   rdi,rdi
   14001e7ff:	je     0x14001e829
   14001e801:	mov    rax,QWORD PTR [rbx]
   14001e804:	mov    rdx,rdi
   14001e807:	mov    rcx,rbx
   14001e80a:	call   QWORD PTR [rax+0x8]
   14001e80d:	test   al,al
   14001e80f:	je     0x14001e81d
   14001e811:	mov    rax,QWORD PTR [rdi]
   14001e814:	mov    rdx,rbx
   14001e817:	mov    rcx,rdi
   14001e81a:	call   QWORD PTR [rax+0x28]
   14001e81d:	mov    rax,QWORD PTR [rbx]
   14001e820:	mov    rdx,rdi
   14001e823:	mov    rcx,rbx
   14001e826:	call   QWORD PTR [rax+0x10]
   14001e829:	mov    rdi,QWORD PTR [rsi+0x18]
   14001e82d:	test   rdi,rdi
   14001e830:	je     0x14001e85a
   14001e832:	mov    rax,QWORD PTR [rbx]
   14001e835:	mov    rdx,rdi
   14001e838:	mov    rcx,rbx
   14001e83b:	call   QWORD PTR [rax+0x8]
   14001e83e:	test   al,al
   14001e840:	je     0x14001e84e
   14001e842:	mov    rax,QWORD PTR [rdi]
   14001e845:	mov    rdx,rbx
   14001e848:	mov    rcx,rdi
   14001e84b:	call   QWORD PTR [rax+0x28]
   14001e84e:	mov    rax,QWORD PTR [rbx]
   14001e851:	mov    rdx,rdi
   14001e854:	mov    rcx,rbx
   14001e857:	call   QWORD PTR [rax+0x10]
   14001e85a:	mov    rdi,QWORD PTR [rsp+0x30]
   14001e85f:	mov    rax,QWORD PTR [rbx]
   14001e862:	mov    rdx,rsi
   14001e865:	mov    rcx,rbx
   14001e868:	mov    rbx,QWORD PTR [rsp+0x38]
   14001e86d:	add    rsp,0x20
   14001e871:	pop    rsi
   14001e872:	rex.W jmp QWORD PTR [rax+0x588]
   14001e879:	int3   
   14001e87a:	int3   
   14001e87b:	int3   
   14001e87c:	int3   
   14001e87d:	int3   
   14001e87e:	int3   
   14001e87f:	int3   
   14001e880:	mov    QWORD PTR [rsp+0x10],rbx
   14001e885:	push   rsi
   14001e886:	sub    rsp,0x20
   14001e88a:	mov    rax,QWORD PTR [rdx]
   14001e88d:	mov    rbx,rdx
   14001e890:	mov    rsi,rcx
   14001e893:	mov    rdx,rcx
   14001e896:	mov    rcx,rbx
   14001e899:	call   QWORD PTR [rax+0x2a0]
   14001e89f:	test   al,al
   14001e8a1:	je     0x14001e90f
   14001e8a3:	mov    QWORD PTR [rsp+0x30],rdi
   14001e8a8:	mov    rdi,QWORD PTR [rsi+0x10]
   14001e8ac:	test   rdi,rdi
   14001e8af:	je     0x14001e8d9
   14001e8b1:	mov    rax,QWORD PTR [rbx]
   14001e8b4:	mov    rdx,rdi
   14001e8b7:	mov    rcx,rbx
   14001e8ba:	call   QWORD PTR [rax+0x8]
   14001e8bd:	test   al,al
   14001e8bf:	je     0x14001e8cd
   14001e8c1:	mov    rax,QWORD PTR [rdi]
   14001e8c4:	mov    rdx,rbx
   14001e8c7:	mov    rcx,rdi
   14001e8ca:	call   QWORD PTR [rax+0x28]
   14001e8cd:	mov    rax,QWORD PTR [rbx]
   14001e8d0:	mov    rdx,rdi
   14001e8d3:	mov    rcx,rbx
   14001e8d6:	call   QWORD PTR [rax+0x10]
   14001e8d9:	mov    rdi,QWORD PTR [rsi+0x18]
   14001e8dd:	test   rdi,rdi
   14001e8e0:	je     0x14001e90a
   14001e8e2:	mov    rax,QWORD PTR [rbx]
   14001e8e5:	mov    rdx,rdi
   14001e8e8:	mov    rcx,rbx
   14001e8eb:	call   QWORD PTR [rax+0x8]
   14001e8ee:	test   al,al
   14001e8f0:	je     0x14001e8fe
   14001e8f2:	mov    rax,QWORD PTR [rdi]
   14001e8f5:	mov    rdx,rbx
   14001e8f8:	mov    rcx,rdi
   14001e8fb:	call   QWORD PTR [rax+0x28]
   14001e8fe:	mov    rax,QWORD PTR [rbx]
   14001e901:	mov    rdx,rdi
   14001e904:	mov    rcx,rbx
   14001e907:	call   QWORD PTR [rax+0x10]
   14001e90a:	mov    rdi,QWORD PTR [rsp+0x30]
   14001e90f:	mov    rax,QWORD PTR [rbx]
   14001e912:	mov    rdx,rsi
   14001e915:	mov    rcx,rbx
   14001e918:	mov    rbx,QWORD PTR [rsp+0x38]
   14001e91d:	add    rsp,0x20
   14001e921:	pop    rsi
   14001e922:	rex.W jmp QWORD PTR [rax+0x580]
   14001e929:	int3   
   14001e92a:	int3   
   14001e92b:	int3   
   14001e92c:	int3   
   14001e92d:	int3   
   14001e92e:	int3   
   14001e92f:	int3   
   14001e930:	mov    QWORD PTR [rsp+0x18],rbp
   14001e935:	push   rsi
   14001e936:	sub    rsp,0x20
   14001e93a:	mov    rax,QWORD PTR [rdx]
   14001e93d:	mov    rsi,rdx
   14001e940:	mov    rbp,rcx
   14001e943:	mov    rdx,rcx
   14001e946:	mov    rcx,rsi
   14001e949:	call   QWORD PTR [rax+0x290]
   14001e94f:	test   al,al
   14001e951:	je     0x14001e9a9
   14001e953:	mov    QWORD PTR [rsp+0x30],rbx
   14001e958:	mov    rbx,rbp
   14001e95b:	test   rbp,rbp
   14001e95e:	je     0x14001e9a4
   14001e960:	mov    QWORD PTR [rsp+0x38],rdi
   14001e965:	mov    rdi,QWORD PTR [rbx+0x18]
   14001e969:	test   rdi,rdi
   14001e96c:	je     0x14001e996
   14001e96e:	mov    rax,QWORD PTR [rsi]
   14001e971:	mov    rdx,rdi
   14001e974:	mov    rcx,rsi
   14001e977:	call   QWORD PTR [rax+0x8]
   14001e97a:	test   al,al
   14001e97c:	je     0x14001e98a
   14001e97e:	mov    rax,QWORD PTR [rdi]
   14001e981:	mov    rdx,rsi
   14001e984:	mov    rcx,rdi
   14001e987:	call   QWORD PTR [rax+0x28]
   14001e98a:	mov    rax,QWORD PTR [rsi]
   14001e98d:	mov    rdx,rdi
   14001e990:	mov    rcx,rsi
   14001e993:	call   QWORD PTR [rax+0x10]
   14001e996:	mov    rbx,QWORD PTR [rbx+0x10]
   14001e99a:	test   rbx,rbx
   14001e99d:	jne    0x14001e965
   14001e99f:	mov    rdi,QWORD PTR [rsp+0x38]
   14001e9a4:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e9a9:	mov    rax,QWORD PTR [rsi]
   14001e9ac:	mov    rdx,rbp
   14001e9af:	mov    rcx,rsi
   14001e9b2:	mov    rbp,QWORD PTR [rsp+0x40]
   14001e9b7:	add    rsp,0x20
   14001e9bb:	pop    rsi
   14001e9bc:	rex.W jmp QWORD PTR [rax+0x570]
   14001e9c3:	int3   
   14001e9c4:	int3   
   14001e9c5:	int3   
   14001e9c6:	int3   
   14001e9c7:	int3   
   14001e9c8:	int3   
   14001e9c9:	int3   
   14001e9ca:	int3   
   14001e9cb:	int3   
   14001e9cc:	int3   
   14001e9cd:	int3   
   14001e9ce:	int3   
   14001e9cf:	int3   
   14001e9d0:	mov    QWORD PTR [rsp+0x18],rbp
   14001e9d5:	push   rsi
   14001e9d6:	sub    rsp,0x20
   14001e9da:	mov    rax,QWORD PTR [rdx]
   14001e9dd:	mov    rsi,rdx
   14001e9e0:	mov    rbp,rcx
   14001e9e3:	mov    rdx,rcx
   14001e9e6:	mov    rcx,rsi
   14001e9e9:	call   QWORD PTR [rax+0x288]
   14001e9ef:	test   al,al
   14001e9f1:	je     0x14001ea49
   14001e9f3:	mov    QWORD PTR [rsp+0x30],rbx
   14001e9f8:	mov    rbx,rbp
   14001e9fb:	test   rbp,rbp
   14001e9fe:	je     0x14001ea44
   14001ea00:	mov    QWORD PTR [rsp+0x38],rdi
   14001ea05:	mov    rdi,QWORD PTR [rbx+0x18]
   14001ea09:	test   rdi,rdi
   14001ea0c:	je     0x14001ea36
   14001ea0e:	mov    rax,QWORD PTR [rsi]
   14001ea11:	mov    rdx,rdi
   14001ea14:	mov    rcx,rsi
   14001ea17:	call   QWORD PTR [rax+0x8]
   14001ea1a:	test   al,al
   14001ea1c:	je     0x14001ea2a
   14001ea1e:	mov    rax,QWORD PTR [rdi]
   14001ea21:	mov    rdx,rsi
   14001ea24:	mov    rcx,rdi
   14001ea27:	call   QWORD PTR [rax+0x28]
   14001ea2a:	mov    rax,QWORD PTR [rsi]
   14001ea2d:	mov    rdx,rdi
   14001ea30:	mov    rcx,rsi
   14001ea33:	call   QWORD PTR [rax+0x10]
   14001ea36:	mov    rbx,QWORD PTR [rbx+0x10]
   14001ea3a:	test   rbx,rbx
   14001ea3d:	jne    0x14001ea05
   14001ea3f:	mov    rdi,QWORD PTR [rsp+0x38]
   14001ea44:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ea49:	mov    rax,QWORD PTR [rsi]
   14001ea4c:	mov    rdx,rbp
   14001ea4f:	mov    rcx,rsi
   14001ea52:	mov    rbp,QWORD PTR [rsp+0x40]
   14001ea57:	add    rsp,0x20
   14001ea5b:	pop    rsi
   14001ea5c:	rex.W jmp QWORD PTR [rax+0x568]
   14001ea63:	int3   
   14001ea64:	int3   
   14001ea65:	int3   
   14001ea66:	int3   
   14001ea67:	int3   
   14001ea68:	int3   
   14001ea69:	int3   
   14001ea6a:	int3   
   14001ea6b:	int3   
   14001ea6c:	int3   
   14001ea6d:	int3   
   14001ea6e:	int3   
   14001ea6f:	int3   
   14001ea70:	mov    QWORD PTR [rsp+0x8],rbx
   14001ea75:	push   rdi
   14001ea76:	sub    rsp,0x20
   14001ea7a:	mov    rax,QWORD PTR [rdx]
   14001ea7d:	mov    rdi,rdx
   14001ea80:	mov    rbx,rcx
   14001ea83:	mov    rdx,rcx
   14001ea86:	mov    rcx,rdi
   14001ea89:	call   QWORD PTR [rax+0x280]
   14001ea8f:	mov    r11,QWORD PTR [rdi]
   14001ea92:	mov    rdx,rbx
   14001ea95:	mov    rcx,rdi
   14001ea98:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ea9d:	add    rsp,0x20
   14001eaa1:	pop    rdi
   14001eaa2:	rex.WB jmp QWORD PTR [r11+0x560]
   14001eaa9:	int3   
   14001eaaa:	int3   
   14001eaab:	int3   
   14001eaac:	int3   
   14001eaad:	int3   
   14001eaae:	int3   
   14001eaaf:	int3   
   14001eab0:	mov    QWORD PTR [rsp+0x10],rbx
   14001eab5:	push   rsi
   14001eab6:	sub    rsp,0x20
   14001eaba:	mov    rax,QWORD PTR [rdx]
   14001eabd:	mov    rbx,rdx
   14001eac0:	mov    rsi,rcx
   14001eac3:	mov    rdx,rcx
   14001eac6:	mov    rcx,rbx
   14001eac9:	call   QWORD PTR [rax+0x2d8]
   14001eacf:	test   al,al
   14001ead1:	je     0x14001eb0e
   14001ead3:	mov    QWORD PTR [rsp+0x30],rdi
   14001ead8:	mov    rdi,QWORD PTR [rsi+0x20]
   14001eadc:	test   rdi,rdi
   14001eadf:	je     0x14001eb09
   14001eae1:	mov    rax,QWORD PTR [rbx]
   14001eae4:	mov    rdx,rdi
   14001eae7:	mov    rcx,rbx
   14001eaea:	call   QWORD PTR [rax+0x8]
   14001eaed:	test   al,al
   14001eaef:	je     0x14001eafd
   14001eaf1:	mov    rax,QWORD PTR [rdi]
   14001eaf4:	mov    rdx,rbx
   14001eaf7:	mov    rcx,rdi
   14001eafa:	call   QWORD PTR [rax+0x28]
   14001eafd:	mov    rax,QWORD PTR [rbx]
   14001eb00:	mov    rdx,rdi
   14001eb03:	mov    rcx,rbx
   14001eb06:	call   QWORD PTR [rax+0x10]
   14001eb09:	mov    rdi,QWORD PTR [rsp+0x30]
   14001eb0e:	mov    rax,QWORD PTR [rbx]
   14001eb11:	mov    rdx,rsi
   14001eb14:	mov    rcx,rbx
   14001eb17:	mov    rbx,QWORD PTR [rsp+0x38]
   14001eb1c:	add    rsp,0x20
   14001eb20:	pop    rsi
   14001eb21:	rex.W jmp QWORD PTR [rax+0x5c8]
   14001eb28:	int3   
   14001eb29:	int3   
   14001eb2a:	int3   
   14001eb2b:	int3   
   14001eb2c:	int3   
   14001eb2d:	int3   
   14001eb2e:	int3   
   14001eb2f:	int3   
   14001eb30:	mov    QWORD PTR [rsp+0x8],rbx
   14001eb35:	push   rdi
   14001eb36:	sub    rsp,0x20
   14001eb3a:	mov    rax,QWORD PTR [rdx]
   14001eb3d:	mov    rdi,rdx
   14001eb40:	mov    rbx,rcx
   14001eb43:	mov    rdx,rcx
   14001eb46:	mov    rcx,rdi
   14001eb49:	call   QWORD PTR [rax+0x278]
   14001eb4f:	mov    r11,QWORD PTR [rdi]
   14001eb52:	mov    rdx,rbx
   14001eb55:	mov    rcx,rdi
   14001eb58:	mov    rbx,QWORD PTR [rsp+0x30]
   14001eb5d:	add    rsp,0x20
   14001eb61:	pop    rdi
   14001eb62:	rex.WB jmp QWORD PTR [r11+0x558]
   14001eb69:	int3   
   14001eb6a:	int3   
   14001eb6b:	int3   
   14001eb6c:	int3   
   14001eb6d:	int3   
   14001eb6e:	int3   
   14001eb6f:	int3   
   14001eb70:	mov    QWORD PTR [rsp+0x10],rbx
   14001eb75:	push   rsi
   14001eb76:	sub    rsp,0x20
   14001eb7a:	mov    rax,QWORD PTR [rdx]
   14001eb7d:	mov    rbx,rdx
   14001eb80:	mov    rsi,rcx
   14001eb83:	mov    rdx,rcx
   14001eb86:	mov    rcx,rbx
   14001eb89:	call   QWORD PTR [rax+0x2e0]
   14001eb8f:	test   al,al
   14001eb91:	je     0x14001ebce
   14001eb93:	mov    QWORD PTR [rsp+0x30],rdi
   14001eb98:	mov    rdi,QWORD PTR [rsi+0x10]
   14001eb9c:	test   rdi,rdi
   14001eb9f:	je     0x14001ebc9
   14001eba1:	mov    rax,QWORD PTR [rbx]
   14001eba4:	mov    rdx,rdi
   14001eba7:	mov    rcx,rbx
   14001ebaa:	call   QWORD PTR [rax+0x8]
   14001ebad:	test   al,al
   14001ebaf:	je     0x14001ebbd
   14001ebb1:	mov    rax,QWORD PTR [rdi]
   14001ebb4:	mov    rdx,rbx
   14001ebb7:	mov    rcx,rdi
   14001ebba:	call   QWORD PTR [rax+0x28]
   14001ebbd:	mov    rax,QWORD PTR [rbx]
   14001ebc0:	mov    rdx,rdi
   14001ebc3:	mov    rcx,rbx
   14001ebc6:	call   QWORD PTR [rax+0x10]
   14001ebc9:	mov    rdi,QWORD PTR [rsp+0x30]
   14001ebce:	mov    rax,QWORD PTR [rbx]
   14001ebd1:	mov    rdx,rsi
   14001ebd4:	mov    rcx,rbx
   14001ebd7:	mov    rbx,QWORD PTR [rsp+0x38]
   14001ebdc:	add    rsp,0x20
   14001ebe0:	pop    rsi
   14001ebe1:	rex.W jmp QWORD PTR [rax+0x5b8]
   14001ebe8:	int3   
   14001ebe9:	int3   
   14001ebea:	int3   
   14001ebeb:	int3   
   14001ebec:	int3   
   14001ebed:	int3   
   14001ebee:	int3   
   14001ebef:	int3   
   14001ebf0:	mov    QWORD PTR [rsp+0x10],rbx
   14001ebf5:	push   rsi
   14001ebf6:	sub    rsp,0x20
   14001ebfa:	mov    rax,QWORD PTR [rdx]
   14001ebfd:	mov    rbx,rdx
   14001ec00:	mov    rsi,rcx
   14001ec03:	mov    rdx,rcx
   14001ec06:	mov    rcx,rbx
   14001ec09:	call   QWORD PTR [rax+0x2e8]
   14001ec0f:	test   al,al
   14001ec11:	je     0x14001ec7f
   14001ec13:	mov    QWORD PTR [rsp+0x30],rdi
   14001ec18:	mov    rdi,QWORD PTR [rsi+0x10]
   14001ec1c:	test   rdi,rdi
   14001ec1f:	je     0x14001ec49
   14001ec21:	mov    rax,QWORD PTR [rbx]
   14001ec24:	mov    rdx,rdi
   14001ec27:	mov    rcx,rbx
   14001ec2a:	call   QWORD PTR [rax+0x8]
   14001ec2d:	test   al,al
   14001ec2f:	je     0x14001ec3d
   14001ec31:	mov    rax,QWORD PTR [rdi]
   14001ec34:	mov    rdx,rbx
   14001ec37:	mov    rcx,rdi
   14001ec3a:	call   QWORD PTR [rax+0x28]
   14001ec3d:	mov    rax,QWORD PTR [rbx]
   14001ec40:	mov    rdx,rdi
   14001ec43:	mov    rcx,rbx
   14001ec46:	call   QWORD PTR [rax+0x10]
   14001ec49:	mov    rdi,QWORD PTR [rsi+0x18]
   14001ec4d:	test   rdi,rdi
   14001ec50:	je     0x14001ec7a
   14001ec52:	mov    rax,QWORD PTR [rbx]
   14001ec55:	mov    rdx,rdi
   14001ec58:	mov    rcx,rbx
   14001ec5b:	call   QWORD PTR [rax+0x8]
   14001ec5e:	test   al,al
   14001ec60:	je     0x14001ec6e
   14001ec62:	mov    rax,QWORD PTR [rdi]
   14001ec65:	mov    rdx,rbx
   14001ec68:	mov    rcx,rdi
   14001ec6b:	call   QWORD PTR [rax+0x28]
   14001ec6e:	mov    rax,QWORD PTR [rbx]
   14001ec71:	mov    rdx,rdi
   14001ec74:	mov    rcx,rbx
   14001ec77:	call   QWORD PTR [rax+0x10]
   14001ec7a:	mov    rdi,QWORD PTR [rsp+0x30]
   14001ec7f:	mov    rax,QWORD PTR [rbx]
   14001ec82:	mov    rdx,rsi
   14001ec85:	mov    rcx,rbx
   14001ec88:	mov    rbx,QWORD PTR [rsp+0x38]
   14001ec8d:	add    rsp,0x20
   14001ec91:	pop    rsi
   14001ec92:	rex.W jmp QWORD PTR [rax+0x5c0]
   14001ec99:	int3   
   14001ec9a:	int3   
   14001ec9b:	int3   
   14001ec9c:	int3   
   14001ec9d:	int3   
   14001ec9e:	int3   
   14001ec9f:	int3   
   14001eca0:	mov    QWORD PTR [rsp+0x10],rbx
   14001eca5:	push   rsi
   14001eca6:	sub    rsp,0x20
   14001ecaa:	mov    rax,QWORD PTR [rdx]
   14001ecad:	mov    rbx,rdx
   14001ecb0:	mov    rsi,rcx
   14001ecb3:	mov    rdx,rcx
   14001ecb6:	mov    rcx,rbx
   14001ecb9:	call   QWORD PTR [rax+0x2c8]
   14001ecbf:	test   al,al
   14001ecc1:	je     0x14001ecfe
   14001ecc3:	mov    QWORD PTR [rsp+0x30],rdi
   14001ecc8:	mov    rdi,QWORD PTR [rsi+0x10]
   14001eccc:	test   rdi,rdi
   14001eccf:	je     0x14001ecf9
   14001ecd1:	mov    rax,QWORD PTR [rbx]
   14001ecd4:	mov    rdx,rdi
   14001ecd7:	mov    rcx,rbx
   14001ecda:	call   QWORD PTR [rax+0x8]
   14001ecdd:	test   al,al
   14001ecdf:	je     0x14001eced
   14001ece1:	mov    rax,QWORD PTR [rdi]
   14001ece4:	mov    rdx,rbx
   14001ece7:	mov    rcx,rdi
   14001ecea:	call   QWORD PTR [rax+0x28]
   14001eced:	mov    rax,QWORD PTR [rbx]
   14001ecf0:	mov    rdx,rdi
   14001ecf3:	mov    rcx,rbx
   14001ecf6:	call   QWORD PTR [rax+0x10]
   14001ecf9:	mov    rdi,QWORD PTR [rsp+0x30]
   14001ecfe:	mov    rax,QWORD PTR [rbx]
   14001ed01:	mov    rdx,rsi
   14001ed04:	mov    rcx,rbx
   14001ed07:	mov    rbx,QWORD PTR [rsp+0x38]
   14001ed0c:	add    rsp,0x20
   14001ed10:	pop    rsi
   14001ed11:	rex.W jmp QWORD PTR [rax+0x5a8]
   14001ed18:	rex push rbx
   14001ed1a:	sub    rsp,0x20
   14001ed1e:	lea    rcx,[rsp+0x30]
   14001ed23:	xor    edx,edx
   14001ed25:	call   QWORD PTR [rip+0x1385]        # 0x1400200b0
   14001ed2b:	jmp    0x14001ed5c
   14001ed2d:	mov    rax,QWORD PTR [rbx]
   14001ed30:	mov    rcx,QWORD PTR [rbx+0x8]
   14001ed34:	mov    QWORD PTR [rip+0x1389d],rax        # 0x1400325d8
   14001ed3b:	call   QWORD PTR [rip+0x142f]        # 0x140020170
   14001ed41:	test   rax,rax
   14001ed44:	je     0x14001ed54
   14001ed46:	mov    r8,QWORD PTR [rax]
   14001ed49:	mov    edx,0x1
   14001ed4e:	mov    rcx,rax
   14001ed51:	call   QWORD PTR [r8]
   14001ed54:	mov    rcx,rbx
   14001ed57:	call   0x14001ee46
   14001ed5c:	mov    rbx,QWORD PTR [rip+0x13875]        # 0x1400325d8
   14001ed63:	test   rbx,rbx
   14001ed66:	jne    0x14001ed2d
   14001ed68:	lea    rcx,[rsp+0x30]
   14001ed6d:	call   QWORD PTR [rip+0x130d]        # 0x140020080
   14001ed73:	add    rsp,0x20
   14001ed77:	pop    rbx
   14001ed78:	ret    
   14001ed79:	int3   
   14001ed7a:	int3   
   14001ed7b:	int3   
   14001ed7c:	rex push rbx
   14001ed7e:	sub    rsp,0x20
   14001ed82:	cmp    QWORD PTR [rip+0x1384e],0x0        # 0x1400325d8
   14001ed8a:	mov    rbx,rcx
   14001ed8d:	jne    0x14001eda5
   14001ed8f:	lea    rcx,[rip+0xffffffffffffff82]        # 0x14001ed18
   14001ed96:	call   0x14001efe0
   14001ed9b:	test   eax,eax
   14001ed9d:	je     0x14001eda5
   14001ed9f:	call   QWORD PTR [rip+0x1453]        # 0x1400201f8
   14001eda5:	mov    ecx,0x10
   14001edaa:	call   0x14001ee64
   14001edaf:	test   rax,rax
   14001edb2:	je     0x14001edc4
   14001edb4:	mov    rcx,QWORD PTR [rip+0x1381d]        # 0x1400325d8
   14001edbb:	mov    QWORD PTR [rax+0x8],rbx
   14001edbf:	mov    QWORD PTR [rax],rcx
   14001edc2:	jmp    0x14001edc6
   14001edc4:	xor    eax,eax
   14001edc6:	mov    QWORD PTR [rip+0x1380b],rax        # 0x1400325d8
   14001edcd:	add    rsp,0x20
   14001edd1:	pop    rbx
   14001edd2:	ret    
   14001edd3:	int3   
   14001edd4:	jmp    QWORD PTR [rip+0x13d6]        # 0x1400201b0
   14001edda:	int3   
   14001eddb:	int3   
   14001eddc:	mov    QWORD PTR [rsp+0x8],rbx
   14001ede1:	mov    QWORD PTR [rsp+0x10],rsi
   14001ede6:	push   rdi
   14001ede7:	sub    rsp,0x20
   14001edeb:	mov    esi,edx
   14001eded:	mov    rbx,rcx
   14001edf0:	test   dl,0x2
   14001edf3:	je     0x14001ee1f
   14001edf5:	mov    r8d,DWORD PTR [rcx-0x8]
   14001edf9:	lea    r9,[rip+0x95e]        # 0x14001f75e
   14001ee00:	mov    edx,0x18
   14001ee05:	call   0x14001f32c
   14001ee0a:	test   sil,0x1
   14001ee0e:	je     0x14001ee19
   14001ee10:	lea    rcx,[rbx-0x8]
   14001ee14:	call   0x14001ee46
   14001ee19:	lea    rax,[rbx-0x8]
   14001ee1d:	jmp    0x14001ee35
   14001ee1f:	call   0x14001f75e
   14001ee24:	test   sil,0x1
   14001ee28:	je     0x14001ee32
   14001ee2a:	mov    rcx,rbx
   14001ee2d:	call   0x14001ee46
   14001ee32:	mov    rax,rbx
   14001ee35:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ee3a:	mov    rsi,QWORD PTR [rsp+0x38]
   14001ee3f:	add    rsp,0x20
   14001ee43:	pop    rdi
   14001ee44:	ret    
   14001ee45:	int3   
   14001ee46:	jmp    QWORD PTR [rip+0x135c]        # 0x1400201a8
   14001ee4c:	jmp    QWORD PTR [rip+0x145e]        # 0x1400202b0
   14001ee52:	jmp    QWORD PTR [rip+0x1338]        # 0x140020190
   14001ee58:	jmp    QWORD PTR [rip+0x132a]        # 0x140020188
   14001ee5e:	jmp    QWORD PTR [rip+0x1334]        # 0x140020198
   14001ee64:	jmp    QWORD PTR [rip+0x134e]        # 0x1400201b8
   14001ee6a:	jmp    QWORD PTR [rip+0x1350]        # 0x1400201c0
   14001ee70:	rex push rbx
   14001ee72:	sub    rsp,0x20
   14001ee76:	mov    r11d,DWORD PTR [r8]
   14001ee79:	mov    rbx,rdx
   14001ee7c:	mov    r9,rcx
   14001ee7f:	and    r11d,0xfffffff8
   14001ee83:	test   BYTE PTR [r8],0x4
   14001ee87:	mov    r10,rcx
   14001ee8a:	je     0x14001ee9f
   14001ee8c:	mov    eax,DWORD PTR [r8+0x8]
   14001ee90:	movsxd r10,DWORD PTR [r8+0x4]
   14001ee94:	neg    eax
   14001ee96:	add    r10,rcx
   14001ee99:	movsxd rcx,eax
   14001ee9c:	and    r10,rcx
   14001ee9f:	movsxd rax,r11d
   14001eea2:	mov    rdx,QWORD PTR [rax+r10*1]
   14001eea6:	mov    rax,QWORD PTR [rbx+0x10]
   14001eeaa:	mov    ecx,DWORD PTR [rax+0x8]
   14001eead:	add    rcx,QWORD PTR [rbx+0x8]
   14001eeb1:	test   BYTE PTR [rcx+0x3],0xf
   14001eeb5:	je     0x14001eec3
   14001eeb7:	movzx  eax,BYTE PTR [rcx+0x3]
   14001eebb:	and    eax,0xfffffff0
   14001eebe:	cdqe   
   14001eec0:	add    r9,rax
   14001eec3:	xor    r9,rdx
   14001eec6:	mov    rcx,r9
   14001eec9:	add    rsp,0x20
   14001eecd:	pop    rbx
   14001eece:	jmp    0x14001ef10
   14001eed3:	int3   
   14001eed4:	sub    rsp,0x28
   14001eed8:	mov    r8,QWORD PTR [r9+0x38]
   14001eedc:	mov    rcx,rdx
   14001eedf:	mov    rdx,r9
   14001eee2:	call   0x14001ee70
   14001eee7:	mov    eax,0x1
   14001eeec:	add    rsp,0x28
   14001eef0:	ret    
   14001eef1:	int3   
   14001eef2:	int3   
   14001eef3:	int3   
   14001eef4:	int3   
   14001eef5:	int3   
   14001eef6:	int3   
   14001eef7:	int3   
   14001eef8:	int3   
   14001eef9:	int3   
   14001eefa:	int3   
   14001eefb:	int3   
   14001eefc:	int3   
   14001eefd:	int3   
   14001eefe:	int3   
   14001eeff:	int3   
   14001ef00:	int3   
   14001ef01:	int3   
   14001ef02:	int3   
   14001ef03:	int3   
   14001ef04:	int3   
   14001ef05:	int3   
   14001ef06:	data16 nop WORD PTR [rax+rax*1+0x0]
   14001ef10:	cmp    rcx,QWORD PTR [rip+0x13679]        # 0x140032590
   14001ef17:	jne    0x14001ef2a
   14001ef19:	rol    rcx,0x10
   14001ef1d:	test   cx,0xffff
   14001ef22:	jne    0x14001ef26
   14001ef24:	repz ret 
   14001ef26:	ror    rcx,0x10
   14001ef2a:	jmp    0x14001f38c
   14001ef2f:	int3   
   14001ef30:	rex push rbx
   14001ef32:	sub    rsp,0x20
   14001ef36:	mov    rbx,rcx
   14001ef39:	mov    rcx,QWORD PTR [rip+0x13c70]        # 0x140032bb0
   14001ef40:	call   QWORD PTR [rip+0x12ea]        # 0x140020230
   14001ef46:	mov    QWORD PTR [rsp+0x38],rax
   14001ef4b:	cmp    rax,0xffffffffffffffff
   14001ef4f:	jne    0x14001ef5c
   14001ef51:	mov    rcx,rbx
   14001ef54:	call   QWORD PTR [rip+0x12ce]        # 0x140020228
   14001ef5a:	jmp    0x14001efda
   14001ef5c:	mov    ecx,0x8
   14001ef61:	call   0x14001f4e8
   14001ef66:	nop
   14001ef67:	mov    rcx,QWORD PTR [rip+0x13c42]        # 0x140032bb0
   14001ef6e:	call   QWORD PTR [rip+0x12bc]        # 0x140020230
   14001ef74:	mov    QWORD PTR [rsp+0x38],rax
   14001ef79:	mov    rcx,QWORD PTR [rip+0x13c28]        # 0x140032ba8
   14001ef80:	call   QWORD PTR [rip+0x12aa]        # 0x140020230
   14001ef86:	mov    QWORD PTR [rsp+0x40],rax
   14001ef8b:	mov    rcx,rbx
   14001ef8e:	call   QWORD PTR [rip+0x1284]        # 0x140020218
   14001ef94:	mov    rcx,rax
   14001ef97:	lea    r8,[rsp+0x40]
   14001ef9c:	lea    rdx,[rsp+0x38]
   14001efa1:	call   0x14001f4e2
   14001efa6:	mov    rbx,rax
   14001efa9:	mov    rcx,QWORD PTR [rsp+0x38]
   14001efae:	call   QWORD PTR [rip+0x1264]        # 0x140020218
   14001efb4:	mov    QWORD PTR [rip+0x13bf5],rax        # 0x140032bb0
   14001efbb:	mov    rcx,QWORD PTR [rsp+0x40]
   14001efc0:	call   QWORD PTR [rip+0x1252]        # 0x140020218
   14001efc6:	mov    QWORD PTR [rip+0x13bdb],rax        # 0x140032ba8
   14001efcd:	mov    ecx,0x8
   14001efd2:	call   0x14001f4dc
   14001efd7:	mov    rax,rbx
   14001efda:	add    rsp,0x20
   14001efde:	pop    rbx
   14001efdf:	ret    
   14001efe0:	sub    rsp,0x28
   14001efe4:	call   0x14001ef30
   14001efe9:	neg    rax
   14001efec:	sbb    eax,eax
   14001efee:	neg    eax
   14001eff0:	dec    eax
   14001eff2:	add    rsp,0x28
   14001eff6:	ret    
   14001eff7:	int3   
   14001eff8:	sub    rsp,0x38
   14001effc:	lea    rcx,[rip+0x589]        # 0x14001f58c
   14001f003:	call   0x14001efe0
   14001f008:	mov    r11d,DWORD PTR [rip+0x13b79]        # 0x140032b88
   14001f00f:	mov    r9d,DWORD PTR [rip+0x13b6e]        # 0x140032b84
   14001f016:	lea    rax,[rip+0x135df]        # 0x1400325fc
   14001f01d:	lea    r8,[rip+0x135c4]        # 0x1400325e8
   14001f024:	lea    rdx,[rip+0x135c5]        # 0x1400325f0
   14001f02b:	lea    rcx,[rip+0x135ae]        # 0x1400325e0
   14001f032:	mov    DWORD PTR [rip+0x135c3],r11d        # 0x1400325fc
   14001f039:	mov    QWORD PTR [rsp+0x20],rax
   14001f03e:	call   QWORD PTR [rip+0x11fc]        # 0x140020240
   14001f044:	mov    DWORD PTR [rip+0x135ae],eax        # 0x1400325f8
   14001f04a:	test   eax,eax
   14001f04c:	jns    0x14001f058
   14001f04e:	mov    ecx,0x8
   14001f053:	call   0x14001f54c
   14001f058:	add    rsp,0x38
   14001f05c:	ret    
   14001f05d:	int3   
   14001f05e:	int3   
   14001f05f:	int3   
   14001f060:	mov    QWORD PTR [rsp+0x8],rsi
   14001f065:	push   rdi
   14001f066:	sub    rsp,0x20
   14001f06a:	mov    rax,QWORD PTR gs:0x30
   14001f073:	mov    rdi,QWORD PTR [rax+0x8]
   14001f077:	xor    esi,esi
   14001f079:	xor    eax,eax
   14001f07b:	lock cmpxchg QWORD PTR [rip+0x13b14],rdi        # 0x140032b98
   14001f084:	je     0x14001f0a1
   14001f086:	cmp    rax,rdi
   14001f089:	jne    0x14001f094
   14001f08b:	mov    edi,0x1
   14001f090:	mov    esi,edi
   14001f092:	jmp    0x14001f0a6
   14001f094:	mov    ecx,0x3e8
   14001f099:	call   QWORD PTR [rip+0xfc1]        # 0x140020060
   14001f09f:	jmp    0x14001f079
   14001f0a1:	mov    edi,0x1
   14001f0a6:	mov    eax,DWORD PTR [rip+0x13ae8]        # 0x140032b94
   14001f0ac:	cmp    eax,edi
   14001f0ae:	jne    0x14001f0bc
   14001f0b0:	mov    ecx,0x1f
   14001f0b5:	call   0x14001f54c
   14001f0ba:	jmp    0x14001f0f3
   14001f0bc:	mov    eax,DWORD PTR [rip+0x13ad2]        # 0x140032b94
   14001f0c2:	test   eax,eax
   14001f0c4:	jne    0x14001f0ed
   14001f0c6:	mov    DWORD PTR [rip+0x13ac8],edi        # 0x140032b94
   14001f0cc:	lea    rdx,[rip+0x171d]        # 0x1400207f0
   14001f0d3:	lea    rcx,[rip+0x16fe]        # 0x1400207d8
   14001f0da:	call   0x14001f698
   14001f0df:	test   eax,eax
   14001f0e1:	je     0x14001f0f3
   14001f0e3:	mov    eax,0xff
   14001f0e8:	jmp    0x14001f1d5
   14001f0ed:	mov    DWORD PTR [rip+0x13511],edi        # 0x140032604
   14001f0f3:	mov    eax,DWORD PTR [rip+0x13a9b]        # 0x140032b94
   14001f0f9:	cmp    eax,edi
   14001f0fb:	jne    0x14001f11a
   14001f0fd:	lea    rdx,[rip+0x16cc]        # 0x1400207d0
   14001f104:	lea    rcx,[rip+0x16ad]        # 0x1400207b8
   14001f10b:	call   0x14001f692
   14001f110:	mov    DWORD PTR [rip+0x13a7a],0x2        # 0x140032b94
   14001f11a:	test   esi,esi
   14001f11c:	jne    0x14001f127
   14001f11e:	xor    eax,eax
   14001f120:	xchg   QWORD PTR [rip+0x13a71],rax        # 0x140032b98
   14001f127:	cmp    QWORD PTR [rip+0x13a71],0x0        # 0x140032ba0
   14001f12f:	je     0x14001f150
   14001f131:	lea    rcx,[rip+0x13a68]        # 0x140032ba0
   14001f138:	call   0x14001f650
   14001f13d:	test   eax,eax
   14001f13f:	je     0x14001f150
   14001f141:	xor    r8d,r8d
   14001f144:	lea    edx,[r8+0x2]
   14001f148:	xor    ecx,ecx
   14001f14a:	call   QWORD PTR [rip+0x13a50]        # 0x140032ba0
   14001f150:	mov    rcx,QWORD PTR [rip+0x1111]        # 0x140020268
   14001f157:	mov    rax,QWORD PTR [rip+0x1348a]        # 0x1400325e8
   14001f15e:	mov    QWORD PTR [rcx],rax
   14001f161:	mov    r8,QWORD PTR [rip+0x13480]        # 0x1400325e8
   14001f168:	mov    rdx,QWORD PTR [rip+0x13481]        # 0x1400325f0
   14001f16f:	mov    ecx,DWORD PTR [rip+0x1346b]        # 0x1400325e0
   14001f175:	call   0x14000c170
   14001f17a:	mov    DWORD PTR [rip+0x13480],eax        # 0x140032600
   14001f180:	cmp    DWORD PTR [rip+0x1345d],0x0        # 0x1400325e4
   14001f187:	jne    0x14001f191
   14001f189:	mov    ecx,eax
   14001f18b:	call   QWORD PTR [rip+0x10cf]        # 0x140020260
   14001f191:	cmp    DWORD PTR [rip+0x1346c],0x0        # 0x140032604
   14001f198:	jne    0x14001f1a6
   14001f19a:	call   QWORD PTR [rip+0x10b8]        # 0x140020258
   14001f1a0:	mov    eax,DWORD PTR [rip+0x1345a]        # 0x140032600
   14001f1a6:	jmp    0x14001f1d5
   14001f1a8:	mov    DWORD PTR [rip+0x13452],eax        # 0x140032600
   14001f1ae:	cmp    DWORD PTR [rip+0x1342f],0x0        # 0x1400325e4
   14001f1b5:	jne    0x14001f1c0
   14001f1b7:	mov    ecx,eax
   14001f1b9:	call   QWORD PTR [rip+0x1091]        # 0x140020250
   14001f1bf:	int3   
   14001f1c0:	cmp    DWORD PTR [rip+0x1343d],0x0        # 0x140032604
   14001f1c7:	jne    0x14001f1d5
   14001f1c9:	call   QWORD PTR [rip+0x1089]        # 0x140020258
   14001f1cf:	mov    eax,DWORD PTR [rip+0x1342b]        # 0x140032600
   14001f1d5:	mov    rsi,QWORD PTR [rsp+0x30]
   14001f1da:	add    rsp,0x20
   14001f1de:	pop    rdi
   14001f1df:	ret    
   14001f1e0:	sub    rsp,0x28
   14001f1e4:	mov    eax,0x5a4d
   14001f1e9:	cmp    WORD PTR [rip+0xfffffffffffe0e10],ax        # 0x140000000
   14001f1f0:	je     0x14001f1f6
   14001f1f2:	xor    eax,eax
   14001f1f4:	jmp    0x14001f245
   14001f1f6:	movsxd rcx,DWORD PTR [rip+0xfffffffffffe0e3f]        # 0x14000003c
   14001f1fd:	lea    rax,[rip+0xfffffffffffe0dfc]        # 0x140000000
   14001f204:	add    rcx,rax
   14001f207:	cmp    DWORD PTR [rcx],0x4550
   14001f20d:	jne    0x14001f1f2
   14001f20f:	movzx  eax,WORD PTR [rcx+0x18]
   14001f213:	cmp    eax,0x10b
   14001f218:	je     0x14001f234
   14001f21a:	cmp    eax,0x20b
   14001f21f:	jne    0x14001f1f2
   14001f221:	xor    eax,eax
   14001f223:	cmp    DWORD PTR [rcx+0x84],0xe
   14001f22a:	jbe    0x14001f245
   14001f22c:	cmp    DWORD PTR [rcx+0xf8],eax
   14001f232:	jmp    0x14001f242
   14001f234:	xor    eax,eax
   14001f236:	cmp    DWORD PTR [rcx+0x74],0xe
   14001f23a:	jbe    0x14001f245
   14001f23c:	cmp    DWORD PTR [rcx+0xe8],eax
   14001f242:	setne  al
   14001f245:	mov    ecx,0x1
   14001f24a:	mov    DWORD PTR [rip+0x13394],eax        # 0x1400325e4
   14001f250:	call   QWORD PTR [rip+0x104a]        # 0x1400202a0
   14001f256:	or     rcx,0xffffffffffffffff
   14001f25a:	call   QWORD PTR [rip+0xfb8]        # 0x140020218
   14001f260:	mov    rcx,QWORD PTR [rip+0x1031]        # 0x140020298
   14001f267:	mov    QWORD PTR [rip+0x1393a],rax        # 0x140032ba8
   14001f26e:	mov    QWORD PTR [rip+0x1393b],rax        # 0x140032bb0
   14001f275:	mov    eax,DWORD PTR [rip+0x13915]        # 0x140032b90
   14001f27b:	mov    DWORD PTR [rcx],eax
   14001f27d:	mov    rdx,QWORD PTR [rip+0x100c]        # 0x140020290
   14001f284:	mov    eax,DWORD PTR [rip+0x13902]        # 0x140032b8c
   14001f28a:	mov    DWORD PTR [rdx],eax
   14001f28c:	call   0x14001f554
   14001f291:	call   0x14001f6a0
   14001f296:	cmp    DWORD PTR [rip+0x13313],0x0        # 0x1400325b0
   14001f29d:	jne    0x14001f2ac
   14001f29f:	lea    rcx,[rip+0x3fa]        # 0x14001f6a0
   14001f2a6:	call   QWORD PTR [rip+0xfdc]        # 0x140020288
   14001f2ac:	cmp    DWORD PTR [rip+0x132f9],0xffffffff        # 0x1400325ac
   14001f2b3:	jne    0x14001f2be
   14001f2b5:	or     ecx,0xffffffff
   14001f2b8:	call   QWORD PTR [rip+0xfc2]        # 0x140020280
   14001f2be:	xor    eax,eax
   14001f2c0:	add    rsp,0x28
   14001f2c4:	ret    
   14001f2c5:	int3   
   14001f2c6:	int3   
   14001f2c7:	int3   
   14001f2c8:	sub    rsp,0x28
   14001f2cc:	call   0x14001f6a4
   14001f2d1:	add    rsp,0x28
   14001f2d5:	jmp    0x14001f060
   14001f2da:	jmp    QWORD PTR [rip+0xf00]        # 0x1400201e0
   14001f2e0:	mov    QWORD PTR [rsp+0x10],rbx
   14001f2e5:	mov    DWORD PTR [rsp+0x18],r8d
   14001f2ea:	mov    QWORD PTR [rsp+0x8],rcx
   14001f2ef:	push   rsi
   14001f2f0:	push   rdi
   14001f2f1:	push   r12
   14001f2f3:	sub    rsp,0x40
   14001f2f7:	mov    rsi,r9
   14001f2fa:	mov    edi,r8d
   14001f2fd:	mov    r12,rdx
   14001f300:	mov    rbx,rcx
   14001f303:	sub    edi,0x1
   14001f306:	mov    DWORD PTR [rsp+0x70],edi
   14001f30a:	js     0x14001f31b
   14001f30c:	sub    rbx,r12
   14001f30f:	mov    QWORD PTR [rsp+0x60],rbx
   14001f314:	mov    rcx,rbx
   14001f317:	call   rsi
   14001f319:	jmp    0x14001f303
   14001f31b:	jmp    0x14001f31d
   14001f31d:	mov    rbx,QWORD PTR [rsp+0x68]
   14001f322:	add    rsp,0x40
   14001f326:	pop    r12
   14001f328:	pop    rdi
   14001f329:	pop    rsi
   14001f32a:	ret    
   14001f32b:	int3   
   14001f32c:	mov    rax,rsp
   14001f32f:	mov    QWORD PTR [rax+0x20],r9
   14001f333:	mov    DWORD PTR [rax+0x18],r8d
   14001f337:	mov    QWORD PTR [rax+0x10],rdx
   14001f33b:	push   rbx
   14001f33c:	push   rsi
   14001f33d:	push   rdi
   14001f33e:	push   r12
   14001f340:	sub    rsp,0x38
   14001f344:	mov    r12,r9
   14001f347:	movsxd rdi,r8d
   14001f34a:	mov    rsi,rdx
   14001f34d:	and    DWORD PTR [rax-0x38],0x0
   14001f351:	mov    rbx,rdi
   14001f354:	imul   rbx,rdx
   14001f358:	add    rbx,rcx
   14001f35b:	mov    QWORD PTR [rax+0x8],rbx
   14001f35f:	sub    edi,0x1
   14001f362:	mov    DWORD PTR [rsp+0x70],edi
   14001f366:	js     0x14001f378
   14001f368:	sub    rbx,rsi
   14001f36b:	mov    QWORD PTR [rsp+0x60],rbx
   14001f370:	mov    rcx,rbx
   14001f373:	call   r12
   14001f376:	jmp    0x14001f35f
   14001f378:	mov    DWORD PTR [rsp+0x20],0x1
   14001f380:	add    rsp,0x38
   14001f384:	pop    r12
   14001f386:	pop    rdi
   14001f387:	pop    rsi
   14001f388:	pop    rbx
   14001f389:	ret    
   14001f38a:	int3   
   14001f38b:	int3   
   14001f38c:	mov    QWORD PTR [rsp+0x8],rcx
   14001f391:	sub    rsp,0x88
   14001f398:	lea    rcx,[rip+0x13311]        # 0x1400326b0
   14001f39f:	call   QWORD PTR [rip+0xc7b]        # 0x140020020
   14001f3a5:	mov    r11,QWORD PTR [rip+0x133fc]        # 0x1400327a8
   14001f3ac:	mov    QWORD PTR [rsp+0x58],r11
   14001f3b1:	xor    r8d,r8d
   14001f3b4:	lea    rdx,[rsp+0x60]
   14001f3b9:	mov    rcx,QWORD PTR [rsp+0x58]
   14001f3be:	call   0x14001f770
   14001f3c3:	mov    QWORD PTR [rsp+0x50],rax
   14001f3c8:	cmp    QWORD PTR [rsp+0x50],0x0
   14001f3ce:	je     0x14001f411
   14001f3d0:	mov    QWORD PTR [rsp+0x38],0x0
   14001f3d9:	lea    rax,[rsp+0x48]
   14001f3de:	mov    QWORD PTR [rsp+0x30],rax
   14001f3e3:	lea    rax,[rsp+0x40]
   14001f3e8:	mov    QWORD PTR [rsp+0x28],rax
   14001f3ed:	lea    rax,[rip+0x132bc]        # 0x1400326b0
   14001f3f4:	mov    QWORD PTR [rsp+0x20],rax
   14001f3f9:	mov    r9,QWORD PTR [rsp+0x50]
   14001f3fe:	mov    r8,QWORD PTR [rsp+0x58]
   14001f403:	mov    rdx,QWORD PTR [rsp+0x60]
   14001f408:	xor    ecx,ecx
   14001f40a:	call   0x14001f76a
   14001f40f:	jmp    0x14001f433
   14001f411:	mov    rax,QWORD PTR [rsp+0x88]
   14001f419:	mov    QWORD PTR [rip+0x13388],rax        # 0x1400327a8
   14001f420:	lea    rax,[rsp+0x88]
   14001f428:	add    rax,0x8
   14001f42c:	mov    QWORD PTR [rip+0x13315],rax        # 0x140032748
   14001f433:	mov    rax,QWORD PTR [rip+0x1336e]        # 0x1400327a8
   14001f43a:	mov    QWORD PTR [rip+0x131df],rax        # 0x140032620
   14001f441:	mov    rax,QWORD PTR [rsp+0x90]
   14001f449:	mov    QWORD PTR [rip+0x132e0],rax        # 0x140032730
   14001f450:	mov    DWORD PTR [rip+0x131b6],0xc0000409        # 0x140032610
   14001f45a:	mov    DWORD PTR [rip+0x131b0],0x1        # 0x140032614
   14001f464:	mov    rax,QWORD PTR [rip+0x13125]        # 0x140032590
   14001f46b:	mov    QWORD PTR [rsp+0x68],rax
   14001f470:	mov    rax,QWORD PTR [rip+0x13121]        # 0x140032598
   14001f477:	mov    QWORD PTR [rsp+0x70],rax
   14001f47c:	call   QWORD PTR [rip+0xbb6]        # 0x140020038
   14001f482:	mov    DWORD PTR [rip+0x13220],eax        # 0x1400326a8
   14001f488:	mov    ecx,0x1
   14001f48d:	call   0x14001f764
   14001f492:	xor    ecx,ecx
   14001f494:	call   QWORD PTR [rip+0xba6]        # 0x140020040
   14001f49a:	lea    rcx,[rip+0x8dcf]        # 0x140028270
   14001f4a1:	call   QWORD PTR [rip+0xba1]        # 0x140020048
   14001f4a7:	cmp    DWORD PTR [rip+0x131fa],0x0        # 0x1400326a8
   14001f4ae:	jne    0x14001f4ba
   14001f4b0:	mov    ecx,0x1
   14001f4b5:	call   0x14001f764
   14001f4ba:	call   QWORD PTR [rip+0xb90]        # 0x140020050
   14001f4c0:	mov    edx,0xc0000409
   14001f4c5:	mov    rcx,rax
   14001f4c8:	call   QWORD PTR [rip+0xb8a]        # 0x140020058
   14001f4ce:	add    rsp,0x88
   14001f4d5:	ret    
   14001f4d6:	jmp    QWORD PTR [rip+0xd24]        # 0x140020200
   14001f4dc:	jmp    QWORD PTR [rip+0xd26]        # 0x140020208
   14001f4e2:	jmp    QWORD PTR [rip+0xd28]        # 0x140020210
   14001f4e8:	jmp    QWORD PTR [rip+0xd32]        # 0x140020220
   14001f4ee:	int3   
   14001f4ef:	int3   
   14001f4f0:	sub    rsp,0x28
   14001f4f4:	mov    rax,QWORD PTR [rcx]
   14001f4f7:	cmp    DWORD PTR [rax],0xe06d7363
   14001f4fd:	jne    0x14001f52a
   14001f4ff:	cmp    DWORD PTR [rax+0x18],0x4
   14001f503:	jne    0x14001f52a
   14001f505:	mov    eax,DWORD PTR [rax+0x20]
   14001f508:	cmp    eax,0x19930520
   14001f50d:	je     0x14001f524
   14001f50f:	cmp    eax,0x19930521
   14001f514:	je     0x14001f524
   14001f516:	cmp    eax,0x19930522
   14001f51b:	je     0x14001f524
   14001f51d:	cmp    eax,0x1994000
   14001f522:	jne    0x14001f52a
   14001f524:	call   0x14001f758
   14001f529:	int3   
   14001f52a:	xor    eax,eax
   14001f52c:	add    rsp,0x28
   14001f530:	ret    
   14001f531:	int3   
   14001f532:	int3   
   14001f533:	int3   
   14001f534:	sub    rsp,0x28
   14001f538:	lea    rcx,[rip+0xffffffffffffffb1]        # 0x14001f4f0
   14001f53f:	call   QWORD PTR [rip+0xafb]        # 0x140020040
   14001f545:	xor    eax,eax
   14001f547:	add    rsp,0x28
   14001f54b:	ret    
   14001f54c:	jmp    QWORD PTR [rip+0xce6]        # 0x140020238
   14001f552:	int3   
   14001f553:	int3   
   14001f554:	mov    QWORD PTR [rsp+0x8],rbx
   14001f559:	push   rdi
   14001f55a:	sub    rsp,0x20
   14001f55e:	lea    rbx,[rip+0xc4bb]        # 0x14002ba20
   14001f565:	lea    rdi,[rip+0xc4b4]        # 0x14002ba20
   14001f56c:	jmp    0x14001f57c
   14001f56e:	mov    rax,QWORD PTR [rbx]
   14001f571:	test   rax,rax
   14001f574:	je     0x14001f578
   14001f576:	call   rax
   14001f578:	add    rbx,0x8
   14001f57c:	cmp    rbx,rdi
   14001f57f:	jb     0x14001f56e
   14001f581:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f586:	add    rsp,0x20
   14001f58a:	pop    rdi
   14001f58b:	ret    
   14001f58c:	mov    QWORD PTR [rsp+0x8],rbx
   14001f591:	push   rdi
   14001f592:	sub    rsp,0x20
   14001f596:	lea    rbx,[rip+0xc493]        # 0x14002ba30
   14001f59d:	lea    rdi,[rip+0xc48c]        # 0x14002ba30
   14001f5a4:	jmp    0x14001f5b4
   14001f5a6:	mov    rax,QWORD PTR [rbx]
   14001f5a9:	test   rax,rax
   14001f5ac:	je     0x14001f5b0
   14001f5ae:	call   rax
   14001f5b0:	add    rbx,0x8
   14001f5b4:	cmp    rbx,rdi
   14001f5b7:	jb     0x14001f5a6
   14001f5b9:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f5be:	add    rsp,0x20
   14001f5c2:	pop    rdi
   14001f5c3:	ret    
   14001f5c4:	jmp    QWORD PTR [rip+0xc7e]        # 0x140020248
   14001f5ca:	int3   
   14001f5cb:	int3   
   14001f5cc:	int3   
   14001f5cd:	int3   
   14001f5ce:	int3   
   14001f5cf:	int3   
   14001f5d0:	mov    rax,rcx
   14001f5d3:	mov    ecx,0x5a4d
   14001f5d8:	cmp    WORD PTR [rax],cx
   14001f5db:	je     0x14001f5e0
   14001f5dd:	xor    eax,eax
   14001f5df:	ret    
   14001f5e0:	movsxd rcx,DWORD PTR [rax+0x3c]
   14001f5e4:	add    rcx,rax
   14001f5e7:	xor    eax,eax
   14001f5e9:	cmp    DWORD PTR [rcx],0x4550
   14001f5ef:	jne    0x14001f5fd
   14001f5f1:	mov    edx,0x20b
   14001f5f6:	cmp    WORD PTR [rcx+0x18],dx
   14001f5fa:	sete   al
   14001f5fd:	repz ret 
   14001f5ff:	int3   
   14001f600:	movsxd r8,DWORD PTR [rcx+0x3c]
   14001f604:	xor    r9d,r9d
   14001f607:	mov    r10,rdx
   14001f60a:	add    r8,rcx
   14001f60d:	movzx  eax,WORD PTR [r8+0x14]
   14001f612:	movzx  r11d,WORD PTR [r8+0x6]
   14001f617:	lea    rcx,[rax+r8*1+0x18]
   14001f61c:	test   r11d,r11d
   14001f61f:	je     0x14001f63f
   14001f621:	mov    edx,DWORD PTR [rcx+0xc]
   14001f624:	cmp    r10,rdx
   14001f627:	jb     0x14001f633
   14001f629:	mov    eax,DWORD PTR [rcx+0x8]
   14001f62c:	add    eax,edx
   14001f62e:	cmp    r10,rax
   14001f631:	jb     0x14001f642
   14001f633:	inc    r9d
   14001f636:	add    rcx,0x28
   14001f63a:	cmp    r9d,r11d
   14001f63d:	jb     0x14001f621
   14001f63f:	xor    eax,eax
   14001f641:	ret    
   14001f642:	mov    rax,rcx
   14001f645:	ret    
   14001f646:	int3   
   14001f647:	int3   
   14001f648:	int3   
   14001f649:	int3   
   14001f64a:	int3   
   14001f64b:	int3   
   14001f64c:	int3   
   14001f64d:	int3   
   14001f64e:	int3   
   14001f64f:	int3   
   14001f650:	sub    rsp,0x28
   14001f654:	mov    r8,rcx
   14001f657:	lea    r9,[rip+0xfffffffffffe09a2]        # 0x140000000
   14001f65e:	mov    rcx,r9
   14001f661:	call   0x14001f5d0
   14001f666:	test   eax,eax
   14001f668:	je     0x14001f68c
   14001f66a:	sub    r8,r9
   14001f66d:	mov    rdx,r8
   14001f670:	mov    rcx,r9
   14001f673:	call   0x14001f600
   14001f678:	test   rax,rax
   14001f67b:	je     0x14001f68c
   14001f67d:	mov    eax,DWORD PTR [rax+0x24]
   14001f680:	shr    eax,0x1f
   14001f683:	not    eax
   14001f685:	and    eax,0x1
   14001f688:	jmp    0x14001f68c
   14001f68a:	xor    eax,eax
   14001f68c:	add    rsp,0x28
   14001f690:	ret    
   14001f691:	int3   
   14001f692:	jmp    QWORD PTR [rip+0xbd8]        # 0x140020270
   14001f698:	jmp    QWORD PTR [rip+0xbda]        # 0x140020278
   14001f69e:	int3   
   14001f69f:	int3   
   14001f6a0:	xor    eax,eax
   14001f6a2:	ret    
   14001f6a3:	int3   
   14001f6a4:	mov    QWORD PTR [rsp+0x18],rbx
   14001f6a9:	push   rdi
   14001f6aa:	sub    rsp,0x20
   14001f6ae:	mov    rax,QWORD PTR [rip+0x12edb]        # 0x140032590
   14001f6b5:	and    QWORD PTR [rsp+0x30],0x0
   14001f6bb:	movabs rdi,0x2b992ddfa232
   14001f6c5:	cmp    rax,rdi
   14001f6c8:	je     0x14001f6d6
   14001f6ca:	not    rax
   14001f6cd:	mov    QWORD PTR [rip+0x12ec4],rax        # 0x140032598
   14001f6d4:	jmp    0x14001f74c
   14001f6d6:	lea    rcx,[rsp+0x30]
   14001f6db:	call   QWORD PTR [rip+0x987]        # 0x140020068
   14001f6e1:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f6e6:	call   QWORD PTR [rip+0x914]        # 0x140020000
   14001f6ec:	mov    r11d,eax
   14001f6ef:	xor    rbx,r11
   14001f6f2:	call   QWORD PTR [rip+0x910]        # 0x140020008
   14001f6f8:	mov    r11d,eax
   14001f6fb:	xor    rbx,r11
   14001f6fe:	call   QWORD PTR [rip+0x90c]        # 0x140020010
   14001f704:	lea    rcx,[rsp+0x38]
   14001f709:	mov    r11d,eax
   14001f70c:	xor    rbx,r11
   14001f70f:	call   QWORD PTR [rip+0x903]        # 0x140020018
   14001f715:	mov    r11,QWORD PTR [rsp+0x38]
   14001f71a:	xor    r11,rbx
   14001f71d:	movabs rax,0xffffffffffff
   14001f727:	and    r11,rax
   14001f72a:	movabs rax,0x2b992ddfa233
   14001f734:	cmp    r11,rdi
   14001f737:	cmove  r11,rax
   14001f73b:	mov    QWORD PTR [rip+0x12e4e],r11        # 0x140032590
   14001f742:	not    r11
   14001f745:	mov    QWORD PTR [rip+0x12e4c],r11        # 0x140032598
   14001f74c:	mov    rbx,QWORD PTR [rsp+0x40]
   14001f751:	add    rsp,0x20
   14001f755:	pop    rdi
   14001f756:	ret    
   14001f757:	int3   
   14001f758:	jmp    QWORD PTR [rip+0xb4a]        # 0x1400202a8
   14001f75e:	jmp    QWORD PTR [rip+0xb5c]        # 0x1400202c0
   14001f764:	jmp    QWORD PTR [rip+0xb4e]        # 0x1400202b8
   14001f76a:	jmp    QWORD PTR [rip+0x8c0]        # 0x140020030
   14001f770:	jmp    QWORD PTR [rip+0x8b2]        # 0x140020028
   14001f776:	int3   
   14001f777:	int3   
   14001f778:	int3   
   14001f779:	int3   
   14001f77a:	int3   
   14001f77b:	int3   
   14001f77c:	int3   
   14001f77d:	int3   
   14001f77e:	int3   
   14001f77f:	int3   
   14001f780:	mov    QWORD PTR [rsp+0x10],rdx
   14001f785:	push   rbp
   14001f786:	push   r15
   14001f788:	sub    rsp,0x28
   14001f78c:	mov    rbp,rdx
   14001f78f:	mov    rdx,QWORD PTR [rbp+0x90]
   14001f796:	mov    rax,QWORD PTR [rdx]
   14001f799:	movsxd rcx,DWORD PTR [rax+0x4]
   14001f79d:	add    rcx,rdx
   14001f7a0:	mov    r8b,0x1
   14001f7a3:	mov    edx,0x4
   14001f7a8:	call   QWORD PTR [rip+0x932]        # 0x1400200e0
   14001f7ae:	nop
   14001f7af:	lea    rax,[rip+0xfffffffffffe1dac]        # 0x140001562
   14001f7b6:	jmp    0x14001f7b8
   14001f7b8:	add    rsp,0x28
   14001f7bc:	pop    r15
   14001f7be:	pop    rbp
   14001f7bf:	ret    
   14001f7c0:	int3   
   14001f7c1:	int3   
   14001f7c2:	int3   
   14001f7c3:	int3   
   14001f7c4:	int3   
   14001f7c5:	int3   
   14001f7c6:	int3   
   14001f7c7:	int3   
   14001f7c8:	int3   
   14001f7c9:	int3   
   14001f7ca:	int3   
   14001f7cb:	int3   
   14001f7cc:	int3   
   14001f7cd:	int3   
   14001f7ce:	int3   
   14001f7cf:	int3   
   14001f7d0:	mov    QWORD PTR [rsp+0x10],rdx
   14001f7d5:	push   rbp
   14001f7d6:	push   r13
   14001f7d8:	sub    rsp,0x28
   14001f7dc:	mov    rbp,rdx
   14001f7df:	mov    rdx,QWORD PTR [rbp+0x90]
   14001f7e6:	mov    rax,QWORD PTR [rdx]
   14001f7e9:	movsxd rcx,DWORD PTR [rax+0x4]
   14001f7ed:	add    rcx,rdx
   14001f7f0:	mov    r8b,0x1
   14001f7f3:	mov    edx,0x4
   14001f7f8:	call   QWORD PTR [rip+0x8e2]        # 0x1400200e0
   14001f7fe:	nop
   14001f7ff:	lea    rax,[rip+0xfffffffffffe1f78]        # 0x14000177e
   14001f806:	jmp    0x14001f808
   14001f808:	add    rsp,0x28
   14001f80c:	pop    r13
   14001f80e:	pop    rbp
   14001f80f:	ret    
   14001f810:	int3   
   14001f811:	int3   
   14001f812:	int3   
   14001f813:	int3   
   14001f814:	int3   
   14001f815:	int3   
   14001f816:	int3   
   14001f817:	int3   
   14001f818:	int3   
   14001f819:	int3   
   14001f81a:	int3   
   14001f81b:	int3   
   14001f81c:	int3   
   14001f81d:	int3   
   14001f81e:	int3   
   14001f81f:	int3   
   14001f820:	mov    QWORD PTR [rsp+0x10],rdx
   14001f825:	push   rbx
   14001f826:	push   rbp
   14001f827:	sub    rsp,0x28
   14001f82b:	mov    rbp,rdx
   14001f82e:	mov    rdx,QWORD PTR [rbp+0x70]
   14001f832:	mov    rax,QWORD PTR [rdx]
   14001f835:	movsxd rcx,DWORD PTR [rax+0x4]
   14001f839:	add    rcx,rdx
   14001f83c:	mov    r8b,0x1
   14001f83f:	mov    edx,0x4
   14001f844:	call   QWORD PTR [rip+0x8be]        # 0x140020108
   14001f84a:	nop
   14001f84b:	lea    rax,[rip+0xfffffffffffe2124]        # 0x140001976
   14001f852:	jmp    0x14001f854
   14001f854:	add    rsp,0x28
   14001f858:	pop    rbp
   14001f859:	pop    rbx
   14001f85a:	ret    
   14001f85b:	int3   
   14001f85c:	int3   
   14001f85d:	int3   
   14001f85e:	int3   
   14001f85f:	int3   
   14001f860:	mov    QWORD PTR [rsp+0x10],rdx
   14001f865:	push   rbp
   14001f866:	push   r12
   14001f868:	sub    rsp,0x28
   14001f86c:	mov    rbp,rdx
   14001f86f:	mov    rdx,QWORD PTR [rbp+0x70]
   14001f873:	mov    rax,QWORD PTR [rdx]
   14001f876:	movsxd rcx,DWORD PTR [rax+0x4]
   14001f87a:	add    rcx,rdx
   14001f87d:	mov    r8b,0x1
   14001f880:	mov    edx,0x4
   14001f885:	call   QWORD PTR [rip+0x87d]        # 0x140020108
   14001f88b:	nop
   14001f88c:	lea    rax,[rip+0xfffffffffffe22a9]        # 0x140001b3c
   14001f893:	jmp    0x14001f895
   14001f895:	add    rsp,0x28
   14001f899:	pop    r12
   14001f89b:	pop    rbp
   14001f89c:	ret    
   14001f89d:	int3   
   14001f89e:	rex push rbp
   14001f8a0:	sub    rsp,0x20
   14001f8a4:	mov    rbp,rdx
   14001f8a7:	mov    ecx,0x8
   14001f8ac:	call   0x14001f4dc
   14001f8b1:	add    rsp,0x20
   14001f8b5:	pop    rbp
   14001f8b6:	ret    
   14001f8b7:	rex push rbp
   14001f8b9:	sub    rsp,0x20
   14001f8bd:	mov    rbp,rdx
   14001f8c0:	mov    rax,QWORD PTR [rcx]
   14001f8c3:	mov    rdx,rcx
   14001f8c6:	mov    ecx,DWORD PTR [rax]
   14001f8c8:	call   0x14001f5c4
   14001f8cd:	add    rsp,0x20
   14001f8d1:	pop    rbp
   14001f8d2:	ret    
   14001f8d3:	rex push rbp
   14001f8d5:	sub    rsp,0x20
   14001f8d9:	mov    rbp,rdx
   14001f8dc:	mov    QWORD PTR [rbp+0x38],rcx
   14001f8e0:	mov    QWORD PTR [rbp+0x28],rcx
   14001f8e4:	mov    rax,QWORD PTR [rbp+0x28]
   14001f8e8:	mov    rcx,QWORD PTR [rax]
   14001f8eb:	mov    QWORD PTR [rbp+0x30],rcx
   14001f8ef:	mov    rax,QWORD PTR [rbp+0x30]
   14001f8f3:	cmp    DWORD PTR [rax],0xe06d7363
   14001f8f9:	je     0x14001f907
   14001f8fb:	mov    DWORD PTR [rbp+0x20],0x0
   14001f902:	mov    eax,DWORD PTR [rbp+0x20]
   14001f905:	jmp    0x14001f90c
   14001f907:	call   0x14001f758
   14001f90c:	add    rsp,0x20
   14001f910:	pop    rbp
   14001f911:	ret    
   14001f912:	rex push rbp
   14001f914:	sub    rsp,0x20
   14001f918:	mov    rbp,rdx
   14001f91b:	cmp    DWORD PTR [rbp+0x20],0x0
   14001f91f:	jne    0x14001f936
   14001f921:	mov    r9,QWORD PTR [rbp+0x78]
   14001f925:	mov    r8d,DWORD PTR [rbp+0x70]
   14001f929:	mov    rdx,QWORD PTR [rbp+0x68]
   14001f92d:	mov    rcx,QWORD PTR [rbp+0x60]
   14001f931:	call   0x14001f2e0
   14001f936:	add    rsp,0x20
   14001f93a:	pop    rbp
   14001f93b:	ret    
   14001f93c:	int3   
   14001f93d:	int3   
   14001f93e:	int3   
   14001f93f:	int3   
   14001f940:	rex push rbp
   14001f942:	sub    rsp,0x20
   14001f946:	mov    rbp,rdx
   14001f949:	mov    rax,QWORD PTR [rcx]
   14001f94c:	xor    ecx,ecx
   14001f94e:	cmp    DWORD PTR [rax],0xc0000005
   14001f954:	sete   cl
   14001f957:	mov    eax,ecx
   14001f959:	mov    eax,ecx
   14001f95b:	add    rsp,0x20
   14001f95f:	pop    rbp
   14001f960:	ret    
   14001f961:	int3   
   14001f962:	int3   
   14001f963:	int3   
   14001f964:	int3   
   14001f965:	int3   
   14001f966:	int3   
   14001f967:	int3   
   14001f968:	int3   
   14001f969:	int3   
   14001f96a:	int3   
   14001f96b:	int3   
   14001f96c:	int3   
   14001f96d:	int3   
   14001f96e:	int3   
   14001f96f:	int3   
   14001f970:	mov    rax,QWORD PTR [rip+0xde9]        # 0x140020760
   14001f977:	lea    rcx,[rip+0x12]        # 0x14001f990
   14001f97e:	mov    QWORD PTR [rip+0x12c4b],rax        # 0x1400325d0
   14001f985:	jmp    0x14001efe0
   14001f98a:	int3   
   14001f98b:	int3   
   14001f98c:	int3   
   14001f98d:	int3   
   14001f98e:	int3   
   14001f98f:	int3   
   14001f990:	rex push rdi
   14001f992:	sub    rsp,0x20
   14001f996:	mov    rdi,QWORD PTR [rip+0x12c33]        # 0x1400325d0
   14001f99d:	mov    eax,DWORD PTR [rdi]
   14001f99f:	test   eax,eax
   14001f9a1:	je     0x14001f9ba
   14001f9a3:	cmp    eax,0xffffffff
   14001f9a6:	je     0x14001fa05
   14001f9a8:	lock add DWORD PTR [rdi],0xffffffff
   14001f9ac:	setne  al
   14001f9af:	test   al,al
   14001f9b1:	jne    0x14001fa05
   14001f9b3:	mov    rdi,QWORD PTR [rip+0x12c16]        # 0x1400325d0
   14001f9ba:	movsxd rax,DWORD PTR [rdi+0xc]
   14001f9be:	mov    QWORD PTR [rsp+0x30],rbx
   14001f9c3:	mov    QWORD PTR [rsp+0x38],rsi
   14001f9c8:	lea    rbx,[rdi+rax*8+0x10]
   14001f9cd:	movsxd rax,DWORD PTR [rdi+0x8]
   14001f9d1:	lea    rsi,[rdi+rax*8+0x10]
   14001f9d6:	cmp    rsi,rbx
   14001f9d9:	je     0x14001f9f2
   14001f9db:	nop    DWORD PTR [rax+rax*1+0x0]
   14001f9e0:	sub    rbx,0x8
   14001f9e4:	mov    rcx,rbx
   14001f9e7:	call   QWORD PTR [rip+0xd93]        # 0x140020780
   14001f9ed:	cmp    rbx,rsi
   14001f9f0:	jne    0x14001f9e0
   14001f9f2:	mov    rcx,rdi
   14001f9f5:	call   QWORD PTR [rip+0xcd5]        # 0x1400206d0
   14001f9fb:	mov    rsi,QWORD PTR [rsp+0x38]
   14001fa00:	mov    rbx,QWORD PTR [rsp+0x30]
   14001fa05:	add    rsp,0x20
   14001fa09:	pop    rdi
   14001fa0a:	ret    

Disassembly of section .rdata:

0000000140020000 <.rdata>:
   140020000:	fadd   QWORD PTR [rcx]
   140020002:	add    eax,DWORD PTR [rax]
   140020004:	add    BYTE PTR [rax],al
   140020006:	add    BYTE PTR [rax],al
   140020008:	mov    BYTE PTR [rcx],0x3
   14002000b:	add    BYTE PTR [rax],al
   14002000d:	add    BYTE PTR [rax],al
   14002000f:	add    BYTE PTR [rsi+0x301],dh
   140020015:	add    BYTE PTR [rax],al
   140020017:	add    BYTE PTR [rcx+rax*1+0x3],bl
   14002001e:	add    BYTE PTR [rax],al
   140020020:	mov    BYTE PTR [rcx],al
   140020022:	add    eax,DWORD PTR [rax]
   140020024:	add    BYTE PTR [rax],al
   140020026:	add    BYTE PTR [rax],al
   140020028:	outs   dx,BYTE PTR ds:[rsi]
   140020029:	add    DWORD PTR [rbx],eax
   14002002b:	add    BYTE PTR [rax],al
   14002002d:	add    BYTE PTR [rax],al
   14002002f:	add    BYTE PTR [rdx+0x1],bl
   140020032:	add    eax,DWORD PTR [rax]
   140020034:	add    BYTE PTR [rax],al
   140020036:	add    BYTE PTR [rax],al
   140020038:	rex.RX add DWORD PTR [rbx],r8d
   14002003b:	add    BYTE PTR [rax],al
   14002003d:	add    BYTE PTR [rax],al
   14002003f:	add    BYTE PTR [rax],ch
   140020041:	add    DWORD PTR [rbx],eax
   140020043:	add    BYTE PTR [rax],al
   140020045:	add    BYTE PTR [rax],al
   140020047:	add    BYTE PTR [rcx+rax*1],cl
   14002004a:	add    eax,DWORD PTR [rax]
   14002004c:	add    BYTE PTR [rax],al
   14002004e:	add    BYTE PTR [rax],al
   140020050:	clc    
   140020051:	add    BYTE PTR [rbx],al
   140020053:	add    BYTE PTR [rax],al
   140020055:	add    BYTE PTR [rax],al
   140020057:	add    ah,ah
   140020059:	add    BYTE PTR [rbx],al
   14002005b:	add    BYTE PTR [rax],al
   14002005d:	add    BYTE PTR [rax],al
   14002005f:	add    ah,bl
   140020061:	add    BYTE PTR [rbx],al
   140020063:	add    BYTE PTR [rax],al
   140020065:	add    BYTE PTR [rax],al
   140020067:	add    dl,dh
   140020069:	add    DWORD PTR [rbx],eax
	...
   140020077:	add    BYTE PTR [rdx],dh
   140020079:	test   BYTE PTR [rdx],0x0
   14002007c:	add    BYTE PTR [rax],al
   14002007e:	add    BYTE PTR [rax],al
   140020080:	jo     0x140020078
   140020082:	add    al,BYTE PTR [rax]
   140020084:	add    BYTE PTR [rax],al
   140020086:	add    BYTE PTR [rax],al
   140020088:	mov    dh,dh
   14002008a:	add    al,BYTE PTR [rax]
   14002008c:	add    BYTE PTR [rax],al
   14002008e:	add    BYTE PTR [rax],al
   140020090:	mov    al,0xf6
   140020092:	add    al,BYTE PTR [rax]
   140020094:	add    BYTE PTR [rax],al
   140020096:	add    BYTE PTR [rax],al
   140020098:	lock test BYTE PTR [rdx],0x0
   14002009c:	add    BYTE PTR [rax],al
   14002009e:	add    BYTE PTR [rax],al
   1400200a0:	and    bh,dh
   1400200a2:	add    al,BYTE PTR [rax]
   1400200a4:	add    BYTE PTR [rax],al
   1400200a6:	add    BYTE PTR [rax],al
   1400200a8:	test   DWORD PTR ds:[rdx],0x0
   1400200af:	add    BYTE PTR [rdx-0x9],ah
   1400200b2:	add    al,BYTE PTR [rax]
   1400200b4:	add    BYTE PTR [rax],al
   1400200b6:	add    BYTE PTR [rax],al
   1400200b8:	jle    0x1400200b1
   1400200ba:	add    al,BYTE PTR [rax]
   1400200bc:	add    BYTE PTR [rax],al
   1400200be:	add    BYTE PTR [rax],al
   1400200c0:	ret    0x2f7
   1400200c3:	add    BYTE PTR [rax],al
   1400200c5:	add    BYTE PTR [rax],al
   1400200c7:	add    BYTE PTR [rax],al
   1400200c9:	clc    
   1400200ca:	add    al,BYTE PTR [rax]
   1400200cc:	add    BYTE PTR [rax],al
   1400200ce:	add    BYTE PTR [rax],al
   1400200d0:	and    bh,al
   1400200d2:	add    al,BYTE PTR [rax]
   1400200d4:	add    BYTE PTR [rax],al
   1400200d6:	add    BYTE PTR [rax],al
   1400200d8:	push   0x2f8
   1400200dd:	add    BYTE PTR [rax],al
   1400200df:	add    BYTE PTR [rax+0x2f8],ch
   1400200e5:	add    BYTE PTR [rax],al
   1400200e7:	add    dl,ch
   1400200e9:	clc    
   1400200ea:	add    al,BYTE PTR [rax]
   1400200ec:	add    BYTE PTR [rax],al
   1400200ee:	add    BYTE PTR [rax],al
   1400200f0:	(bad)  
   1400200f1:	stc    
   1400200f2:	add    al,BYTE PTR [rax]
   1400200f4:	add    BYTE PTR [rax],al
   1400200f6:	add    BYTE PTR [rax],al
   1400200f8:	push   rdx
   1400200f9:	stc    
   1400200fa:	add    al,BYTE PTR [rax]
   1400200fc:	add    BYTE PTR [rax],al
   1400200fe:	add    BYTE PTR [rax],al
   140020100:	ins    BYTE PTR es:[rdi],dx
   140020101:	stc    
   140020102:	add    al,BYTE PTR [rax]
   140020104:	add    BYTE PTR [rax],al
   140020106:	add    BYTE PTR [rax],al
   140020108:	cwde   
   140020109:	stc    
   14002010a:	add    al,BYTE PTR [rax]
   14002010c:	add    BYTE PTR [rax],al
   14002010e:	add    BYTE PTR [rax],al
   140020110:	fdivr  st,st(1)
   140020112:	add    al,BYTE PTR [rax]
   140020114:	add    BYTE PTR [rax],al
   140020116:	add    BYTE PTR [rax],al
   140020118:	and    dl,bh
   14002011a:	add    al,BYTE PTR [rax]
   14002011c:	add    BYTE PTR [rax],al
   14002011e:	add    BYTE PTR [rax],al
   140020120:	(bad)  
   140020121:	cli    
   140020122:	add    al,BYTE PTR [rax]
   140020124:	add    BYTE PTR [rax],al
   140020126:	add    BYTE PTR [rax],al
   140020128:	mov    al,0xfa
   14002012a:	add    al,BYTE PTR [rax]
   14002012c:	add    BYTE PTR [rax],al
   14002012e:	add    BYTE PTR [rax],al
   140020130:	data16 sti 
   140020132:	add    al,BYTE PTR [rax]
   140020134:	add    BYTE PTR [rax],al
   140020136:	add    BYTE PTR [rax],al
   140020138:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140020139:	sti    
   14002013a:	add    al,BYTE PTR [rax]
   14002013c:	add    BYTE PTR [rax],al
   14002013e:	add    BYTE PTR [rax],al
   140020140:	out    dx,al
   140020141:	sti    
   140020142:	add    al,BYTE PTR [rax]
   140020144:	add    BYTE PTR [rax],al
   140020146:	add    BYTE PTR [rax],al
   140020148:	rex.X cld 
   14002014a:	add    al,BYTE PTR [rax]
   14002014c:	add    BYTE PTR [rax],al
   14002014e:	add    BYTE PTR [rax],al
   140020150:	mov    bh,ah
   140020152:	add    al,BYTE PTR [rax]
   140020154:	add    BYTE PTR [rax],al
   140020156:	add    BYTE PTR [rax],al
   140020158:	cmp    ch,bh
   14002015a:	add    al,BYTE PTR [rax]
   14002015c:	add    BYTE PTR [rax],al
   14002015e:	add    BYTE PTR [rax],al
   140020160:	je     0x14002015f
   140020162:	add    al,BYTE PTR [rax]
   140020164:	add    BYTE PTR [rax],al
   140020166:	add    BYTE PTR [rax],al
   140020168:	mov    dh,0xfd
   14002016a:	add    al,BYTE PTR [rax]
   14002016c:	add    BYTE PTR [rax],al
   14002016e:	add    BYTE PTR [rax],al
   140020170:	repnz std 
   140020172:	add    al,BYTE PTR [rax]
   140020174:	add    BYTE PTR [rax],al
   140020176:	add    BYTE PTR [rax],al
   140020178:	push   rax
   140020179:	test   BYTE PTR [rdx],0x0
	...
   140020188:	xchg   esi,eax
   140020189:	inc    BYTE PTR [rdx]
   14002018b:	add    BYTE PTR [rax],al
   14002018d:	add    BYTE PTR [rax],al
   14002018f:	add    BYTE PTR [rdx-0x2],bh
   140020192:	add    al,BYTE PTR [rax]
   140020194:	add    BYTE PTR [rax],al
   140020196:	add    BYTE PTR [rax],al
   140020198:	mov    eax,0x2fe
   14002019d:	add    BYTE PTR [rax],al
   14002019f:	add    BYTE PTR [rsi+rdi*8+0x2],al
   1400201a3:	add    BYTE PTR [rax],al
   1400201a5:	add    BYTE PTR [rax],al
   1400201a7:	add    BYTE PTR [rsi+rdi*8],dh
   1400201aa:	add    al,BYTE PTR [rax]
   1400201ac:	add    BYTE PTR [rax],al
   1400201ae:	add    BYTE PTR [rax],al
   1400201b0:	sub    bh,dh
   1400201b2:	add    al,BYTE PTR [rax]
   1400201b4:	add    BYTE PTR [rax],al
   1400201b6:	add    BYTE PTR [rax],al
   1400201b8:	fdiv   st(6),st
   1400201ba:	add    al,BYTE PTR [rax]
   1400201bc:	add    BYTE PTR [rax],al
   1400201be:	add    BYTE PTR [rax],al
   1400201c0:	out    dx,al
   1400201c1:	inc    BYTE PTR [rdx]
   1400201c3:	add    BYTE PTR [rax],al
   1400201c5:	add    BYTE PTR [rax],al
   1400201c7:	add    BYTE PTR [rdi+rdi*8],al
   1400201ca:	add    al,BYTE PTR [rax]
   1400201cc:	add    BYTE PTR [rax],al
   1400201ce:	add    BYTE PTR [rax],al
   1400201d0:	adc    bh,bh
   1400201d2:	add    al,BYTE PTR [rax]
   1400201d4:	add    BYTE PTR [rax],al
   1400201d6:	add    BYTE PTR [rax],al
   1400201d8:	sbb    al,0xff
   1400201da:	add    al,BYTE PTR [rax]
   1400201dc:	add    BYTE PTR [rax],al
   1400201de:	add    BYTE PTR [rax],al
   1400201e0:	inc    DWORD PTR es:[rdx]
   1400201e3:	add    BYTE PTR [rax],al
   1400201e5:	add    BYTE PTR [rax],al
   1400201e7:	add    BYTE PTR [rdx],dh
   1400201e9:	inc    DWORD PTR [rdx]
   1400201eb:	add    BYTE PTR [rax],al
   1400201ed:	add    BYTE PTR [rax],al
   1400201ef:	add    BYTE PTR [rdx],bh
   1400201f1:	inc    DWORD PTR [rdx]
   1400201f3:	add    BYTE PTR [rax],al
   1400201f5:	add    BYTE PTR [rax],al
   1400201f7:	add    BYTE PTR [rdi+rdi*8+0x2],al
   1400201fb:	add    BYTE PTR [rax],al
   1400201fd:	add    BYTE PTR [rax],al
   1400201ff:	add    BYTE PTR [rax-0x1],bl
   140020202:	add    al,BYTE PTR [rax]
   140020204:	add    BYTE PTR [rax],al
   140020206:	add    BYTE PTR [rax],al
   140020208:	jo     0x140020209
   14002020a:	add    al,BYTE PTR [rax]
   14002020c:	add    BYTE PTR [rax],al
   14002020e:	add    BYTE PTR [rax],al
   140020210:	jp     0x140020211
   140020212:	add    al,BYTE PTR [rax]
   140020214:	add    BYTE PTR [rax],al
   140020216:	add    BYTE PTR [rax],al
   140020218:	mov    bh,bh
   14002021a:	add    al,BYTE PTR [rax]
   14002021c:	add    BYTE PTR [rax],al
   14002021e:	add    BYTE PTR [rax],al
   140020220:	(bad)  
   140020221:	inc    DWORD PTR [rdx]
   140020223:	add    BYTE PTR [rax],al
   140020225:	add    BYTE PTR [rax],al
   140020227:	add    BYTE PTR [rdx+0x2ff],ah
   14002022d:	add    BYTE PTR [rax],al
   14002022f:	add    BYTE PTR [rdi+rdi*8+0x2],ch
   140020236:	add    BYTE PTR [rax],al
   140020238:	mov    esi,0x2ff
   14002023d:	add    BYTE PTR [rax],al
   14002023f:	add    ah,cl
   140020241:	inc    DWORD PTR [rdx]
   140020243:	add    BYTE PTR [rax],al
   140020245:	add    BYTE PTR [rax],al
   140020247:	add    ah,bl
   140020249:	inc    DWORD PTR [rdx]
   14002024b:	add    BYTE PTR [rax],al
   14002024d:	add    BYTE PTR [rax],al
   14002024f:	add    dl,ch
   140020251:	inc    DWORD PTR [rdx]
   140020253:	add    BYTE PTR [rax],al
   140020255:	add    BYTE PTR [rax],al
   140020257:	add    dl,dh
   140020259:	inc    DWORD PTR [rdx]
   14002025b:	add    BYTE PTR [rax],al
   14002025d:	add    BYTE PTR [rax],al
   14002025f:	add    ah,bh
   140020261:	inc    DWORD PTR [rdx]
   140020263:	add    BYTE PTR [rax],al
   140020265:	add    BYTE PTR [rax],al
   140020267:	add    BYTE PTR [rax+rax*1],al
   14002026a:	add    eax,DWORD PTR [rax]
   14002026c:	add    BYTE PTR [rax],al
   14002026e:	add    BYTE PTR [rax],al
   140020270:	adc    BYTE PTR [rax],al
   140020272:	add    eax,DWORD PTR [rax]
   140020274:	add    BYTE PTR [rax],al
   140020276:	add    BYTE PTR [rax],al
   140020278:	sbb    al,0x0
   14002027a:	add    eax,DWORD PTR [rax]
   14002027c:	add    BYTE PTR [rax],al
   14002027e:	add    BYTE PTR [rax],al
   140020280:	sub    al,BYTE PTR [rax]
   140020282:	add    eax,DWORD PTR [rax]
   140020284:	add    BYTE PTR [rax],al
   140020286:	add    BYTE PTR [rax],al
   140020288:	add    BYTE PTR [rbx],al
   14002028b:	add    BYTE PTR [rax],al
   14002028d:	add    BYTE PTR [rax],al
   14002028f:	add    BYTE PTR [rax+rax*1+0x3],dl
   140020293:	add    BYTE PTR [rax],al
   140020295:	add    BYTE PTR [rax],al
   140020297:	add    BYTE PTR [rax+0x0],ah
   14002029a:	add    eax,DWORD PTR [rax]
   14002029c:	add    BYTE PTR [rax],al
   14002029e:	add    BYTE PTR [rax],al
   1400202a0:	push   0x0
   1400202a2:	add    eax,DWORD PTR [rax]
   1400202a4:	add    BYTE PTR [rax],al
   1400202a6:	add    BYTE PTR [rax],al
   1400202a8:	jl     0x1400202aa
   1400202aa:	add    eax,DWORD PTR [rax]
   1400202ac:	add    BYTE PTR [rax],al
   1400202ae:	add    BYTE PTR [rax],al
   1400202b0:	inc    BYTE PTR fs:[rdx]
   1400202b3:	add    BYTE PTR [rax],al
   1400202b5:	add    BYTE PTR [rax],al
   1400202b7:	add    dh,al
   1400202b9:	add    BYTE PTR [rbx],al
   1400202bb:	add    BYTE PTR [rax],al
   1400202bd:	add    BYTE PTR [rax],al
   1400202bf:	add    BYTE PTR [rax+0x300],dl
	...
   1400202cd:	add    BYTE PTR [rax],al
   1400202cf:	add    BYTE PTR [rsi-0x16],ah
   1400202d2:	add    al,BYTE PTR [rax]
   1400202d4:	add    BYTE PTR [rax],al
   1400202d6:	add    BYTE PTR [rax],al
   1400202d8:	mov    dh,0xea
   1400202da:	add    al,BYTE PTR [rax]
   1400202dc:	add    BYTE PTR [rax],al
   1400202de:	add    BYTE PTR [rax],al
   1400202e0:	call   0x1400205cf
   1400202e5:	add    BYTE PTR [rax],al
   1400202e7:	add    BYTE PTR [rax],ah
   1400202e9:	jmp    0x1400202ed
   1400202eb:	add    BYTE PTR [rax],al
   1400202ed:	add    BYTE PTR [rax],al
   1400202ef:	add    BYTE PTR [rdx-0x15],cl
   1400202f2:	add    al,BYTE PTR [rax]
   1400202f4:	add    BYTE PTR [rax],al
   1400202f6:	add    BYTE PTR [rax],al
   1400202f8:	mov    ch,bl
   1400202fa:	add    al,BYTE PTR [rax]
   1400202fc:	add    BYTE PTR [rax],al
   1400202fe:	add    BYTE PTR [rax],al
   140020300:	int3   
   140020301:	jmp    0x140020305
   140020303:	add    BYTE PTR [rax],al
   140020305:	add    BYTE PTR [rax],al
   140020307:	add    BYTE PTR [rsi],al
   140020309:	in     al,dx
   14002030a:	add    al,BYTE PTR [rax]
   14002030c:	add    BYTE PTR [rax],al
   14002030e:	add    BYTE PTR [rax],al
   140020310:	ds in  al,dx
   140020312:	add    al,BYTE PTR [rax]
   140020314:	add    BYTE PTR [rax],al
   140020316:	add    BYTE PTR [rax],al
   140020318:	js     0x140020306
   14002031a:	add    al,BYTE PTR [rax]
   14002031c:	add    BYTE PTR [rax],al
   14002031e:	add    BYTE PTR [rax],al
   140020320:	scas   al,BYTE PTR es:[rdi]
   140020321:	in     al,dx
   140020322:	add    al,BYTE PTR [rax]
   140020324:	add    BYTE PTR [rax],al
   140020326:	add    BYTE PTR [rax],al
   140020328:	fsubr  st,st(4)
   14002032a:	add    al,BYTE PTR [rax]
   14002032c:	add    BYTE PTR [rax],al
   14002032e:	add    BYTE PTR [rax],al
   140020330:	clc    
   140020331:	in     al,dx
   140020332:	add    al,BYTE PTR [rax]
   140020334:	add    BYTE PTR [rax],al
   140020336:	add    BYTE PTR [rax],al
   140020338:	push   rdx
   140020339:	in     eax,dx
   14002033a:	add    al,BYTE PTR [rax]
   14002033c:	add    BYTE PTR [rax],al
   14002033e:	add    BYTE PTR [rax],al
   140020340:	test   ch,ch
   140020342:	add    al,BYTE PTR [rax]
   140020344:	add    BYTE PTR [rax],al
   140020346:	add    BYTE PTR [rax],al
   140020348:	lods   al,BYTE PTR ds:[rsi]
   140020349:	in     eax,dx
   14002034a:	add    al,BYTE PTR [rax]
   14002034c:	add    BYTE PTR [rax],al
   14002034e:	add    BYTE PTR [rax],al
   140020350:	and    dh,ch
   140020352:	add    al,BYTE PTR [rax]
   140020354:	add    BYTE PTR [rax],al
   140020356:	add    BYTE PTR [rax],al
   140020358:	xor    al,0xee
   14002035a:	add    al,BYTE PTR [rax]
   14002035c:	add    BYTE PTR [rax],al
   14002035e:	add    BYTE PTR [rax],al
   140020360:	push   rax
   140020361:	out    dx,al
   140020362:	add    al,BYTE PTR [rax]
   140020364:	add    BYTE PTR [rax],al
   140020366:	add    BYTE PTR [rax],al
   140020368:	(bad)  
   140020369:	out    dx,al
   14002036a:	add    al,BYTE PTR [rax]
   14002036c:	add    BYTE PTR [rax],al
   14002036e:	add    BYTE PTR [rax],al
   140020370:	movabs al,ds:0xe4000000000002ee
   140020379:	out    dx,al
   14002037a:	add    al,BYTE PTR [rax]
   14002037c:	add    BYTE PTR [rax],al
   14002037e:	add    BYTE PTR [rax],al
   140020380:	push   rsp
   140020381:	out    dx,eax
   140020382:	add    al,BYTE PTR [rax]
   140020384:	add    BYTE PTR [rax],al
   140020386:	add    BYTE PTR [rax],al
   140020388:	(bad)  
   140020389:	out    dx,eax
   14002038a:	add    al,BYTE PTR [rax]
   14002038c:	add    BYTE PTR [rax],al
   14002038e:	add    BYTE PTR [rax],al
   140020390:	lods   al,BYTE PTR ds:[rsi]
   140020391:	out    dx,eax
   140020392:	add    al,BYTE PTR [rax]
   140020394:	add    BYTE PTR [rax],al
   140020396:	add    BYTE PTR [rax],al
   140020398:	(bad)  
   140020399:	out    dx,eax
   14002039a:	add    al,BYTE PTR [rax]
   14002039c:	add    BYTE PTR [rax],al
   14002039e:	add    BYTE PTR [rax],al
   1400203a0:	cmp    dh,al
   1400203a2:	add    al,BYTE PTR [rax]
   1400203a4:	add    BYTE PTR [rax],al
   1400203a6:	add    BYTE PTR [rax],al
   1400203a8:	lock add al,BYTE PTR fs:[rax]
   1400203ac:	add    BYTE PTR [rax],al
   1400203ae:	add    BYTE PTR [rax],al
   1400203b0:	test   al,dh
   1400203b2:	add    al,BYTE PTR [rax]
   1400203b4:	add    BYTE PTR [rax],al
   1400203b6:	add    BYTE PTR [rax],al
   1400203b8:	sahf   
   1400203b9:	lock add al,BYTE PTR [rax]
   1400203bc:	add    BYTE PTR [rax],al
   1400203be:	add    BYTE PTR [rax],al
   1400203c0:	mov    edx,0x2f0
   1400203c5:	add    BYTE PTR [rax],al
   1400203c7:	add    dl,ch
   1400203c9:	lock add al,BYTE PTR [rax]
   1400203cc:	add    BYTE PTR [rax],al
   1400203ce:	add    BYTE PTR [rax],al
   1400203d0:	(bad)  
   1400203d1:	icebp  
   1400203d2:	add    al,BYTE PTR [rax]
   1400203d4:	add    BYTE PTR [rax],al
   1400203d6:	add    BYTE PTR [rax],al
   1400203d8:	pop    rax
   1400203d9:	icebp  
   1400203da:	add    al,BYTE PTR [rax]
   1400203dc:	add    BYTE PTR [rax],al
   1400203de:	add    BYTE PTR [rax],al
   1400203e0:	cmp    al,0xea
   1400203e2:	add    al,BYTE PTR [rax]
   1400203e4:	add    BYTE PTR [rax],al
   1400203e6:	add    BYTE PTR [rax],al
   1400203e8:	stos   BYTE PTR es:[rdi],al
   1400203e9:	icebp  
   1400203ea:	add    al,BYTE PTR [rax]
   1400203ec:	add    BYTE PTR [rax],al
   1400203ee:	add    BYTE PTR [rax],al
   1400203f0:	call   0x1400206e6
   1400203f5:	add    BYTE PTR [rax],al
   1400203f7:	add    BYTE PTR [rax],cl
   1400203f9:	repnz add al,BYTE PTR [rax]
   1400203fc:	add    BYTE PTR [rax],al
   1400203fe:	add    BYTE PTR [rax],al
   140020400:	xor    dh,dl
   140020402:	add    al,BYTE PTR [rax]
   140020404:	add    BYTE PTR [rax],al
   140020406:	add    BYTE PTR [rax],al
   140020408:	pop    rax
   140020409:	repnz add al,BYTE PTR [rax]
   14002040c:	add    BYTE PTR [rax],al
   14002040e:	add    BYTE PTR [rax],al
   140020410:	xchg   edx,eax
   140020411:	repnz add al,BYTE PTR [rax]
   140020414:	add    BYTE PTR [rax],al
   140020416:	add    BYTE PTR [rax],al
   140020418:	(bad)  
   140020419:	repnz add al,BYTE PTR [rax]
   14002041c:	add    BYTE PTR [rax],al
   14002041e:	add    BYTE PTR [rax],al
   140020420:	repnz repnz add al,BYTE PTR [rax]
   140020424:	add    BYTE PTR [rax],al
   140020426:	add    BYTE PTR [rax],al
   140020428:	sbb    bl,dh
   14002042a:	add    al,BYTE PTR [rax]
   14002042c:	add    BYTE PTR [rax],al
   14002042e:	add    BYTE PTR [rax],al
   140020430:	cmp    bl,dh
   140020432:	add    al,BYTE PTR [rax]
   140020434:	add    BYTE PTR [rax],al
   140020436:	add    BYTE PTR [rax],al
   140020438:	pop    rax
   140020439:	repz add al,BYTE PTR [rax]
   14002043c:	add    BYTE PTR [rax],al
   14002043e:	add    BYTE PTR [rax],al
   140020440:	jl     0x140020435
   140020442:	add    al,BYTE PTR [rax]
   140020444:	add    BYTE PTR [rax],al
   140020446:	add    BYTE PTR [rax],al
   140020448:	test   al,0xf3
   14002044a:	add    al,BYTE PTR [rax]
   14002044c:	add    BYTE PTR [rax],al
   14002044e:	add    BYTE PTR [rax],al
   140020450:	loopne 0x140020445
   140020452:	add    al,BYTE PTR [rax]
   140020454:	add    BYTE PTR [rax],al
   140020456:	add    BYTE PTR [rax],al
   140020458:	add    ah,dh
   14002045a:	add    al,BYTE PTR [rax]
   14002045c:	add    BYTE PTR [rax],al
   14002045e:	add    BYTE PTR [rax],al
   140020460:	sbb    dh,ah
   140020462:	add    al,BYTE PTR [rax]
   140020464:	add    BYTE PTR [rax],al
   140020466:	add    BYTE PTR [rax],al
   140020468:	xor    al,0xf4
   14002046a:	add    al,BYTE PTR [rax]
   14002046c:	add    BYTE PTR [rax],al
   14002046e:	add    BYTE PTR [rax],al
   140020470:	rex.WRX hlt 
   140020472:	add    al,BYTE PTR [rax]
   140020474:	add    BYTE PTR [rax],al
   140020476:	add    BYTE PTR [rax],al
   140020478:	pop    rsi
   140020479:	hlt    
   14002047a:	add    al,BYTE PTR [rax]
   14002047c:	add    BYTE PTR [rax],al
   14002047e:	add    BYTE PTR [rax],al
   140020480:	jbe    0x140020476
   140020482:	add    al,BYTE PTR [rax]
   140020484:	add    BYTE PTR [rax],al
   140020486:	add    BYTE PTR [rax],al
   140020488:	xchg   ah,dh
   14002048a:	add    al,BYTE PTR [rax]
   14002048c:	add    BYTE PTR [rax],al
   14002048e:	add    BYTE PTR [rax],al
   140020490:	mov    dl,0xf4
   140020492:	add    al,BYTE PTR [rax]
   140020494:	add    BYTE PTR [rax],al
   140020496:	add    BYTE PTR [rax],al
   140020498:	(bad)  
   140020499:	hlt    
   14002049a:	add    al,BYTE PTR [rax]
   14002049c:	add    BYTE PTR [rax],al
   14002049e:	add    BYTE PTR [rax],al
   1400204a0:	repnz hlt 
   1400204a2:	add    al,BYTE PTR [rax]
   1400204a4:	add    BYTE PTR [rax],al
   1400204a6:	add    BYTE PTR [rax],al
   1400204a8:	or     al,0xf5
   1400204aa:	add    al,BYTE PTR [rax]
   1400204ac:	add    BYTE PTR [rax],al
   1400204ae:	add    BYTE PTR [rax],al
   1400204b0:	xor    al,0xf5
   1400204b2:	add    al,BYTE PTR [rax]
   1400204b4:	add    BYTE PTR [rax],al
   1400204b6:	add    BYTE PTR [rax],al
   1400204b8:	pop    rax
   1400204b9:	cmc    
   1400204ba:	add    al,BYTE PTR [rax]
   1400204bc:	add    BYTE PTR [rax],al
   1400204be:	add    BYTE PTR [rax],al
   1400204c0:	jle    0x1400204b7
   1400204c2:	add    al,BYTE PTR [rax]
   1400204c4:	add    BYTE PTR [rax],al
   1400204c6:	add    BYTE PTR [rax],al
   1400204c8:	(bad)  
   1400204c9:	cmc    
   1400204ca:	add    al,BYTE PTR [rax]
   1400204cc:	add    BYTE PTR [rax],al
   1400204ce:	add    BYTE PTR [rax],al
   1400204d0:	mov    esp,0x2f5
   1400204d5:	add    BYTE PTR [rax],al
   1400204d7:	add    dl,ch
   1400204d9:	cmc    
   1400204da:	add    al,BYTE PTR [rax]
   1400204dc:	add    BYTE PTR [rax],al
   1400204de:	add    BYTE PTR [rax],al
   1400204e0:	add    al,0xf6
   1400204e2:	add    al,BYTE PTR [rax]
   1400204e4:	add    BYTE PTR [rax],al
   1400204e6:	add    BYTE PTR [rax],al
   1400204e8:	and    ch,dl
   1400204ea:	add    al,BYTE PTR [rax]
   1400204ec:	add    BYTE PTR [rax],al
   1400204ee:	add    BYTE PTR [rax],al
   1400204f0:	or     dl,ch
   1400204f2:	add    al,BYTE PTR [rax]
   1400204f4:	add    BYTE PTR [rax],al
   1400204f6:	add    BYTE PTR [rax],al
   1400204f8:	fsubr  st,st(1)
   1400204fa:	add    al,BYTE PTR [rax]
   1400204fc:	add    BYTE PTR [rax],al
   1400204fe:	add    BYTE PTR [rax],al
   140020500:	mov    ah,0xe9
   140020502:	add    al,BYTE PTR [rax]
   140020504:	add    BYTE PTR [rax],al
   140020506:	add    BYTE PTR [rax],al
   140020508:	mov    ecx,gs
   14002050a:	add    al,BYTE PTR [rax]
   14002050c:	add    BYTE PTR [rax],al
   14002050e:	add    BYTE PTR [rax],al
   140020510:	push   rsp
   140020511:	jmp    0x140020518
   140020516:	add    BYTE PTR [rax],al
   140020518:	xor    cl,ch
   14002051a:	add    al,BYTE PTR [rax]
   14002051c:	add    BYTE PTR [rax],al
   14002051e:	add    BYTE PTR [rax],al
   140020520:	or     al,0xe9
   140020522:	add    al,BYTE PTR [rax]
   140020524:	add    BYTE PTR [rax],al
   140020526:	add    BYTE PTR [rax],al
   140020528:	in     al,0xe8
   14002052a:	add    al,BYTE PTR [rax]
   14002052c:	add    BYTE PTR [rax],al
   14002052e:	add    BYTE PTR [rax],al
   140020530:	test   al,0xe8
   140020532:	add    al,BYTE PTR [rax]
   140020534:	add    BYTE PTR [rax],al
   140020536:	add    BYTE PTR [rax],al
   140020538:	(bad)  
   140020539:	call   0x140020540
   14002053e:	add    BYTE PTR [rax],al
   140020540:	rex.X call 0x140020548
   140020546:	add    BYTE PTR [rax],al
   140020548:	and    ch,al
   14002054a:	add    al,BYTE PTR [rax]
   14002054c:	add    BYTE PTR [rax],al
   14002054e:	add    BYTE PTR [rax],al
   140020550:	or     al,ch
   140020552:	add    al,BYTE PTR [rax]
   140020554:	add    BYTE PTR [rax],al
   140020556:	add    BYTE PTR [rax],al
   140020558:	hlt    
   140020559:	out    0x2,eax
   14002055b:	add    BYTE PTR [rax],al
   14002055d:	add    BYTE PTR [rax],al
   14002055f:	add    BYTE PTR [rdi+riz*8+0x2],dh
   140020566:	add    BYTE PTR [rax],al
   140020568:	xchg   edx,eax
   140020569:	out    0x2,eax
   14002056b:	add    BYTE PTR [rax],al
   14002056d:	add    BYTE PTR [rax],al
   14002056f:	add    BYTE PTR [rsi-0x19],ah
   140020572:	add    al,BYTE PTR [rax]
   140020574:	add    BYTE PTR [rax],al
   140020576:	add    BYTE PTR [rax],al
   140020578:	rex.X out 0x2,eax
   14002057b:	add    BYTE PTR [rax],al
   14002057d:	add    BYTE PTR [rax],al
   14002057f:	add    BYTE PTR [rsi],bl
   140020581:	out    0x2,eax
   140020583:	add    BYTE PTR [rax],al
   140020585:	add    BYTE PTR [rax],al
   140020587:	add    dl,bl
   140020589:	out    0x2,al
   14002058b:	add    BYTE PTR [rax],al
   14002058d:	add    BYTE PTR [rax],al
   14002058f:	add    BYTE PTR [rax+0x2e6],dh
   140020595:	add    BYTE PTR [rax],al
   140020597:	add    BYTE PTR [rdx+0x2e6],bl
   14002059d:	add    BYTE PTR [rax],al
   14002059f:	add    BYTE PTR [rdx-0x1a],ch
   1400205a2:	add    al,BYTE PTR [rax]
   1400205a4:	add    BYTE PTR [rax],al
   1400205a6:	add    BYTE PTR [rax],al
   1400205a8:	rex.X out 0x2,al
   1400205ab:	add    BYTE PTR [rax],al
   1400205ad:	add    BYTE PTR [rax],al
   1400205af:	add    BYTE PTR [rax],ch
   1400205b1:	out    0x2,al
   1400205b3:	add    BYTE PTR [rax],al
   1400205b5:	add    BYTE PTR [rax],al
   1400205b7:	add    BYTE PTR [rdx],cl
   1400205b9:	out    0x2,al
   1400205bb:	add    BYTE PTR [rax],al
   1400205bd:	add    BYTE PTR [rax],al
   1400205bf:	add    al,dl
   1400205c1:	in     eax,0x2
   1400205c3:	add    BYTE PTR [rax],al
   1400205c5:	add    BYTE PTR [rax],al
   1400205c7:	add    BYTE PTR [rax+0x2e5],dh
   1400205cd:	add    BYTE PTR [rax],al
   1400205cf:	add    BYTE PTR [rdx+0x2e5],dl
   1400205d5:	add    BYTE PTR [rax],al
   1400205d7:	add    BYTE PTR [rdx-0x1b],bh
   1400205da:	add    al,BYTE PTR [rax]
   1400205dc:	add    BYTE PTR [rax],al
   1400205de:	add    BYTE PTR [rax],al
   1400205e0:	pop    rax
   1400205e1:	in     eax,0x2
   1400205e3:	add    BYTE PTR [rax],al
   1400205e5:	add    BYTE PTR [rax],al
   1400205e7:	add    BYTE PTR [rdx],bl
   1400205e9:	in     eax,0x2
   1400205eb:	add    BYTE PTR [rax],al
   1400205ed:	add    BYTE PTR [rax],al
   1400205ef:	add    ah,ch
   1400205f1:	in     al,0x2
   1400205f3:	add    BYTE PTR [rax],al
   1400205f5:	add    BYTE PTR [rax],al
   1400205f7:	add    BYTE PTR [rsp+riz*8+0x2],cl
   1400205fe:	add    BYTE PTR [rax],al
   140020600:	data16 in al,0x2
   140020603:	add    BYTE PTR [rax],al
   140020605:	add    BYTE PTR [rax],al
   140020607:	add    BYTE PTR [rdx-0x1c],dl
   14002060a:	add    al,BYTE PTR [rax]
   14002060c:	add    BYTE PTR [rax],al
   14002060e:	add    BYTE PTR [rax],al
   140020610:	es in  al,0x2
   140020613:	add    BYTE PTR [rax],al
   140020615:	add    BYTE PTR [rax],al
   140020617:	add    dh,dh
   140020619:	jrcxz  0x14002061d
   14002061b:	add    BYTE PTR [rax],al
   14002061d:	add    BYTE PTR [rax],al
   14002061f:	add    al,bl
   140020621:	jrcxz  0x140020625
   140020623:	add    BYTE PTR [rax],al
   140020625:	add    BYTE PTR [rax],al
   140020627:	add    BYTE PTR [rsi+0x2e3],dh
   14002062d:	add    BYTE PTR [rax],al
   14002062f:	add    BYTE PTR [rsi-0x1d],ch
   140020632:	add    al,BYTE PTR [rax]
   140020634:	add    BYTE PTR [rax],al
   140020636:	add    BYTE PTR [rax],al
   140020638:	rex.WX jrcxz 0x14002063d
   14002063b:	add    BYTE PTR [rax],al
   14002063d:	add    BYTE PTR [rax],al
   14002063f:	add    BYTE PTR [rbx+riz*8],ch
   140020642:	add    al,BYTE PTR [rax]
   140020644:	add    BYTE PTR [rax],al
   140020646:	add    BYTE PTR [rax],al
   140020648:	or     ah,bl
   14002064a:	add    al,BYTE PTR [rax]
   14002064c:	add    BYTE PTR [rax],al
   14002064e:	add    BYTE PTR [rax],al
   140020650:	out    0xe2,al
   140020652:	add    al,BYTE PTR [rax]
   140020654:	add    BYTE PTR [rax],al
   140020656:	add    BYTE PTR [rax],al
   140020658:	ret    0x2e2
   14002065b:	add    BYTE PTR [rax],al
   14002065d:	add    BYTE PTR [rax],al
   14002065f:	add    BYTE PTR [rax+0x2e2],dl
   140020665:	add    BYTE PTR [rax],al
   140020667:	add    BYTE PTR [rdx+riz*8+0x2],bl
   14002066b:	add    BYTE PTR [rax],al
   14002066d:	add    BYTE PTR [rax],al
   14002066f:	add    BYTE PTR [rax],dh
   140020671:	loop   0x140020675
   140020673:	add    BYTE PTR [rax],al
   140020675:	add    BYTE PTR [rax],al
   140020677:	add    BYTE PTR [rax],cl
   140020679:	loop   0x14002067d
   14002067b:	add    BYTE PTR [rax],al
   14002067d:	add    BYTE PTR [rax],al
   14002067f:	add    dl,dl
   140020681:	loope  0x140020685
   140020683:	add    BYTE PTR [rax],al
   140020685:	add    BYTE PTR [rax],al
   140020687:	add    BYTE PTR [rcx+riz*8+0x2],ch
   14002068e:	add    BYTE PTR [rax],al
   140020690:	mov    fs,ecx
   140020692:	add    al,BYTE PTR [rax]
   140020694:	add    BYTE PTR [rax],al
   140020696:	add    BYTE PTR [rax],al
   140020698:	(bad)  
   14002069a:	add    al,BYTE PTR [rax]
   14002069c:	add    BYTE PTR [rax],al
   14002069e:	add    BYTE PTR [rax],al
   1400206a0:	sub    ah,cl
   1400206a2:	add    al,BYTE PTR [rax]
   1400206a4:	add    BYTE PTR [rax],al
   1400206a6:	add    BYTE PTR [rax],al
   1400206a8:	(bad)  
   1400206a9:	loopne 0x1400206ad
   1400206ab:	add    BYTE PTR [rax],al
   1400206ad:	add    BYTE PTR [rax],al
   1400206af:	add    BYTE PTR [rsi+0x2e0],al
   1400206b5:	add    BYTE PTR [rax],al
   1400206b7:	add    BYTE PTR [rdx-0x20],dl
   1400206ba:	add    al,BYTE PTR [rax]
   1400206bc:	add    BYTE PTR [rax],al
   1400206be:	add    BYTE PTR [rax],al
   1400206c0:	sub    ah,al
   1400206c2:	add    al,BYTE PTR [rax]
   1400206c4:	add    BYTE PTR [rax],al
   1400206c6:	add    BYTE PTR [rax],al
   1400206c8:	movabs ds:0x7a000000000002df,al
   1400206d1:	fild   WORD PTR [rdx]
   1400206d3:	add    BYTE PTR [rax],al
   1400206d5:	add    BYTE PTR [rax],al
   1400206d7:	add    BYTE PTR [rsi-0x21],cl
   1400206da:	add    al,BYTE PTR [rax]
   1400206dc:	add    BYTE PTR [rax],al
   1400206de:	add    BYTE PTR [rax],al
   1400206e0:	fild   WORD PTR es:[rdx]
   1400206e3:	add    BYTE PTR [rax],al
   1400206e5:	add    BYTE PTR [rax],al
   1400206e7:	add    BYTE PTR [rsi],al
   1400206e9:	fild   WORD PTR [rdx]
   1400206eb:	add    BYTE PTR [rax],al
   1400206ed:	add    BYTE PTR [rax],al
   1400206ef:	add    dl,ch
   1400206f1:	fiadd  WORD PTR [rdx]
   1400206f3:	add    BYTE PTR [rax],al
   1400206f5:	add    BYTE PTR [rax],al
   1400206f7:	add    al,dl
   1400206f9:	fiadd  WORD PTR [rdx]
   1400206fb:	add    BYTE PTR [rax],al
   1400206fd:	add    BYTE PTR [rax],al
   1400206ff:	add    BYTE PTR [rdx+0x2de],dh
   140020705:	add    BYTE PTR [rax],al
   140020707:	add    BYTE PTR [rdx+0x2de],bl
   14002070d:	add    BYTE PTR [rax],al
   14002070f:	add    BYTE PTR [rsi-0x22],bh
   140020712:	add    al,BYTE PTR [rax]
   140020714:	add    BYTE PTR [rax],al
   140020716:	add    BYTE PTR [rax],al
   140020718:	pop    rsi
   140020719:	fiadd  WORD PTR [rdx]
   14002071b:	add    BYTE PTR [rax],al
   14002071d:	add    BYTE PTR [rax],al
   14002071f:	add    BYTE PTR [rsi+rbx*8],ch
   140020722:	add    al,BYTE PTR [rax]
   140020724:	add    BYTE PTR [rax],al
   140020726:	add    BYTE PTR [rax],al
   140020728:	(bad)  
   140020729:	fld    QWORD PTR [rdx]
   14002072b:	add    BYTE PTR [rax],al
   14002072d:	add    BYTE PTR [rax],al
   14002072f:	add    BYTE PTR [rsi+rbx*8],al
   140020732:	add    al,BYTE PTR [rax]
   140020734:	add    BYTE PTR [rax],al
   140020736:	add    BYTE PTR [rax],al
   140020738:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140020739:	fld    QWORD PTR [rdx]
   14002073b:	add    BYTE PTR [rax],al
   14002073d:	add    BYTE PTR [rax],al
   14002073f:	add    BYTE PTR [rax-0x23],bh
   140020742:	add    al,BYTE PTR [rax]
   140020744:	add    BYTE PTR [rax],al
   140020746:	add    BYTE PTR [rax],al
   140020748:	(bad)  
   140020749:	fld    QWORD PTR [rdx]
   14002074b:	add    BYTE PTR [rax],al
   14002074d:	add    BYTE PTR [rax],al
   14002074f:	add    BYTE PTR [rax-0x23],al
   140020752:	add    al,BYTE PTR [rax]
   140020754:	add    BYTE PTR [rax],al
   140020756:	add    BYTE PTR [rax],al
   140020758:	sbb    al,0xdd
   14002075a:	add    al,BYTE PTR [rax]
   14002075c:	add    BYTE PTR [rax],al
   14002075e:	add    BYTE PTR [rax],al
   140020760:	neg    ah
   140020762:	add    al,BYTE PTR [rax]
   140020764:	add    BYTE PTR [rax],al
   140020766:	add    BYTE PTR [rax],al
   140020768:	mov    edx,0x2dc
   14002076d:	add    BYTE PTR [rax],al
   14002076f:	add    BYTE PTR [rdx+0x2dc],dl
   140020775:	add    BYTE PTR [rax],al
   140020777:	add    BYTE PTR [rdx-0x24],ch
   14002077a:	add    al,BYTE PTR [rax]
   14002077c:	add    BYTE PTR [rax],al
   14002077e:	add    BYTE PTR [rax],al
   140020780:	push   rsp
   140020781:	fadd   QWORD PTR [rdx]
   140020783:	add    BYTE PTR [rax],al
   140020785:	add    BYTE PTR [rax],al
   140020787:	add    BYTE PTR [rsp+rbx*8],ch
   14002078a:	add    al,BYTE PTR [rax]
   14002078c:	add    BYTE PTR [rax],al
   14002078e:	add    BYTE PTR [rax],al
   140020790:	or     bl,ah
   140020792:	add    al,BYTE PTR [rax]
   140020794:	add    BYTE PTR [rax],al
   140020796:	add    BYTE PTR [rax],al
   140020798:	out    dx,al
   140020799:	fild   DWORD PTR [rdx]
   14002079b:	add    BYTE PTR [rax],al
   14002079d:	add    BYTE PTR [rax],al
   14002079f:	add    BYTE PTR [rcx+rsi*8+0x2],bh
   1400207a3:	add    BYTE PTR [rax],al
   1400207a5:	add    BYTE PTR [rax],al
   1400207a7:	add    al,cl
   1400207a9:	fild   DWORD PTR [rdx]
	...
   1400207bf:	add    al,bh
   1400207c1:	out    dx,eax
   1400207c2:	add    DWORD PTR [rax+0x1],eax
   1400207c5:	add    BYTE PTR [rax],al
   1400207c7:	add    BYTE PTR [rax-0x7],dh
   1400207ca:	add    DWORD PTR [rax+0x1],eax
	...
   1400207dd:	add    BYTE PTR [rax],al
   1400207df:	add    al,ah
   1400207e1:	icebp  
   1400207e2:	add    DWORD PTR [rax+0x1],eax
   1400207e5:	add    BYTE PTR [rax],al
   1400207e7:	add    BYTE PTR [rsi*8+0x14001],dh
	...
   1400207fe:	add    BYTE PTR [rax],al
   140020800:	(bad)
   140020805:	ins    BYTE PTR es:[rdi],dx
   140020806:	ins    BYTE PTR es:[rdi],dx
   140020807:	outs   dx,DWORD PTR ds:[rsi]
   140020808:	movsxd esp,DWORD PTR [rcx+0x74]
   14002080b:	imul   ebp,DWORD PTR [rdi+0x6e],0x82800000
   140020812:	add    al,BYTE PTR [rax+0x1]
   140020815:	add    BYTE PTR [rax],al
   140020817:	add    BYTE PTR [rax],dl
   140020819:	adc    BYTE PTR [rax],al
   14002081b:	rex add DWORD PTR [rax],eax
   14002081e:	add    BYTE PTR [rax],al
   140020820:	add    BYTE PTR [rax],dl
   140020822:	add    BYTE PTR [rax+0x1],al
   140020825:	add    BYTE PTR [rax],al
   140020827:	add    BYTE PTR [rax],al
   140020829:	adc    BYTE PTR [rax],al
   14002082b:	rex add DWORD PTR [rax],eax
   14002082e:	add    BYTE PTR [rax],al
   140020830:	add    BYTE PTR [rax],dl
   140020832:	add    BYTE PTR [rax+0x1],al
   140020835:	add    BYTE PTR [rax],al
   140020837:	add    BYTE PTR [rbp+0x65],ch
   14002083a:	je     0x14002089d
   14002083c:	imul   ebp,DWORD PTR [rsi+0x66],0x6f
   140020843:	add    BYTE PTR [rax],al
   140020845:	add    BYTE PTR [rax],al
   140020847:	add    BYTE PTR [rdx+0x61],ah
   14002084a:	and    BYTE PTR fs:[rbx+0x61],ah
   14002084e:	jae    0x1400208c4
	...
   140020858:	and    al,BYTE PTR [rip+0x21993]        # 0x1400421f1
   14002085e:	add    BYTE PTR [rax],al
   140020860:	pop    rsp
   140020861:	mov    esp,0x10002
   140020866:	add    BYTE PTR [rax],al
   140020868:	xchg   esp,eax
   140020869:	mov    edx,0x60002
   14002086e:	add    BYTE PTR [rax],al
   140020870:	mov    esp,0x300002ba
	...
   14002087d:	add    BYTE PTR [rax],al
   14002087f:	add    BYTE PTR [rdx],ah
   140020881:	add    eax,0x21993
   140020886:	add    BYTE PTR [rax],al
   140020888:	pop    rsp
   140020889:	mov    esp,0x10002
   14002088e:	add    BYTE PTR [rax],al
   140020890:	sbb    al,0xbb
   140020892:	add    al,BYTE PTR [rax]
   140020894:	(bad)  
   140020895:	add    BYTE PTR [rax],al
   140020897:	add    BYTE PTR [rbx+rdi*4+0x2],al
   14002089b:	add    BYTE PTR [rax],dh
	...
   1400208a5:	add    BYTE PTR [rax],al
   1400208a7:	add    BYTE PTR [rdx],ah
   1400208a9:	add    eax,0x21993
   1400208ae:	add    BYTE PTR [rax],al
   1400208b0:	pop    rsp
   1400208b1:	mov    esp,0x10002
   1400208b6:	add    BYTE PTR [rax],al
   1400208b8:	test   al,0xbb
   1400208ba:	add    al,BYTE PTR [rax]
   1400208bc:	(bad)  
   1400208bd:	add    BYTE PTR [rax],al
   1400208bf:	add    al,dl
   1400208c1:	mov    ebx,0x300002
	...
   1400208ce:	add    BYTE PTR [rax],al
   1400208d0:	and    al,BYTE PTR [rip+0x21993]        # 0x140042269
   1400208d6:	add    BYTE PTR [rax],al
   1400208d8:	pop    rsp
   1400208d9:	mov    esp,0x10002
   1400208de:	add    BYTE PTR [rax],al
   1400208e0:	xor    al,0xbc
   1400208e2:	add    al,BYTE PTR [rax]
   1400208e4:	(bad)  
   1400208e5:	add    BYTE PTR [rax],al
   1400208e7:	add    BYTE PTR [rsp+rdi*4+0x2],ch
   1400208eb:	add    BYTE PTR [rax],dh
	...
   1400208f5:	add    BYTE PTR [rax],al
   1400208f7:	add    BYTE PTR [rax],ah
   1400208f9:	sub    eax,0x746f6f72
   1400208fe:	push   rax
   1400208ff:	(bad)  
   140020900:	je     0x14002096a
   140020902:	and    BYTE PTR [rsi],ch
   140020904:	and    BYTE PTR [rip+0x6f706d69],ch        # 0x1af727673
   14002090a:	jb     0x140020980
   14002090c:	push   rax
   14002090d:	(bad)  
   14002090e:	je     0x140020978
   140020910:	and    BYTE PTR [rax],al
	...
   14002091e:	add    BYTE PTR [rax],al
   140020920:	and    BYTE PTR [rip+0x466c6d71],ch        # 0x1866e7697
   140020926:	imul   ebp,DWORD PTR [rbp+riz*2+0x73],0x6c696620
   14002092e:	xor    DWORD PTR gs:[rax],esp
   140020931:	imul   bp,WORD PTR [rbp+riz*2+0x32],0x2d20
   140020938:	imul   ebp,DWORD PTR [rbp+0x70],0x5074726f
   14002093f:	(bad)  
   140020940:	je     0x1400209aa
   140020942:	and    BYTE PTR [rax+0x61],dh
   140020945:	je     0x1400209af
   140020947:	(bad)  
   140020948:	je     0x1400209b9
   14002094a:	(bad)  
   14002094b:	jno    0x1400209c1
   14002094d:	(bad)  
   14002094e:	jno    0x1400209bd
   140020950:	ins    BYTE PTR es:[rdi],dx
   140020951:	(bad)  
   140020952:	imul   esi,DWORD PTR fs:[rdx+0x65],0x726f7463
   14002095a:	jns    0x140020966
   14002095c:	or     al,BYTE PTR [rbp+0x78]
   14002095f:	(bad)  
   140020960:	ins    DWORD PTR es:[rdi],dx
   140020961:	jo     0x1400209cf
   140020963:	cmp    ah,BYTE PTR gs:[rax]
	...
   14002096e:	add    BYTE PTR [rax],al
   140020970:	and    BYTE PTR [rip+0x746f6f72],ch        # 0x1b47178e8
   140020976:	push   rax
   140020977:	(bad)  
   140020978:	je     0x1400209e2
   14002097a:	and    BYTE PTR [rax+0x61],dh
   14002097d:	je     0x1400209e7
   14002097f:	(bad)  
   140020980:	je     0x1400209f1
   140020982:	(bad)  
   140020983:	(bad)  
   140020984:	jo     0x1400209f6
   140020986:	(bad)  
   140020987:	jno    0x1400209f6
   140020989:	ins    BYTE PTR es:[rdi],dx
   14002098a:	(bad)  
   14002098b:	imul   esi,DWORD PTR fs:[rdx+0x65],0x726f7463
   140020993:	jns    0x1400209b5
   140020995:	sub    eax,0x6f706d69
   14002099a:	jb     0x140020a10
   14002099c:	push   rax
   14002099d:	(bad)  
   14002099e:	je     0x140020a08
   1400209a0:	and    BYTE PTR [rax+0x61],dh
   1400209a3:	je     0x140020a0d
   1400209a5:	(bad)  
   1400209a6:	je     0x140020a17
   1400209a8:	(bad)  
   1400209a9:	jno    0x140020a1f
   1400209ab:	(bad)  
   1400209ac:	jno    0x140020a1b
   1400209ae:	ins    BYTE PTR es:[rdi],dx
   1400209af:	(bad)  
   1400209b0:	imul   esi,DWORD PTR fs:[rdx+0x65],0x726f7463
   1400209b8:	jns    0x1400209c4
   1400209ba:	and    BYTE PTR [rax],ah
   1400209bc:	and    BYTE PTR [rax],ah
   1400209be:	and    BYTE PTR [rax],ah
   1400209c0:	and    BYTE PTR [rax],al
   1400209c2:	add    BYTE PTR [rax],al
   1400209c4:	add    BYTE PTR [rax],al
   1400209c6:	add    BYTE PTR [rax],al
   1400209c8:	push   rbp
   1400209c9:	jae    0x140020a2c
   1400209cb:	cmp    ah,BYTE PTR gs:[eax]
   1400209cf:	add    BYTE PTR [rcx+0x74],dl
   1400209d2:	rex.WRB
   1400209d3:	gs je  0x140020a37
   1400209d6:	push   rsp
   1400209d7:	jns    0x140020a49
   1400209d9:	gs push rax
   1400209db:	jb     0x140020a46
   1400209dd:	jbe    0x140020a40
   1400209df:	je     0x140020a46
   1400209e1:	cmp    bh,BYTE PTR [rdx]
   1400209e3:	push   rcx
   1400209e4:	rex.B jae 0x140020a5a
   1400209e7:	outs   dx,DWORD PTR ds:[rsi]
   1400209e8:	movsxd ebp,DWORD PTR [rcx+0x61]
   1400209eb:	je     0x140020a56
   1400209ed:	jbe    0x140020a54
   1400209ef:	rex.WB je 0x140020a57
   1400209f2:	jb     0x140020a55
   1400209f4:	(bad)  
   1400209f5:	ins    BYTE PTR es:[rdi],dx
   1400209f6:	gs rex.WB ins DWORD PTR es:[rdi],dx
   1400209f9:	jo     0x140020a67
   1400209fb:	add    BYTE PTR [rax],al
   1400209fd:	add    BYTE PTR [rax],al
   1400209ff:	add    al,bh
   140020a01:	(bad)  
   140020a02:	add    al,BYTE PTR [rax+0x1]
   140020a05:	add    BYTE PTR [rax],al
   140020a07:	add    BYTE PTR [rax+0x140002d],al
   140020a0d:	add    BYTE PTR [rax],al
   140020a0f:	add    BYTE PTR [rax],al
   140020a11:	adc    BYTE PTR [rax],al
   140020a13:	rex add DWORD PTR [rax],eax
   140020a16:	add    BYTE PTR [rax],al
   140020a18:	push   rax
   140020a19:	pop    rsp
   140020a1a:	add    BYTE PTR [rax+0x1],al
   140020a1d:	add    BYTE PTR [rax],al
   140020a1f:	add    BYTE PTR [rax+0x63],al
   140020a22:	add    BYTE PTR [rax+0x1],al
   140020a25:	add    BYTE PTR [rax],al
   140020a27:	add    BYTE PTR [rbx+0x61],al
   140020a2a:	outs   dx,BYTE PTR ds:[rsi]
   140020a2b:	outs   dx,BYTE PTR ds:[rsi]
   140020a2c:	outs   dx,DWORD PTR ds:[rsi]
   140020a2d:	je     0x140020a4f
   140020a2f:	outs   dx,DWORD PTR ds:[rsi]
   140020a30:	jo     0x140020a97
   140020a32:	outs   dx,BYTE PTR ds:[rsi]
   140020a33:	and    BYTE PTR [rcx+0x6e],ch
   140020a36:	jo     0x140020aad
   140020a38:	je     0x140020a5a
   140020a3a:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x7600
   140020a41:	gs jb  0x140020ab7
   140020a44:	imul   ebp,DWORD PTR [rdi+0x6e],0x646f6d00
   140020a4b:	jne    0x140020ab9
   140020a4d:	add    BYTE PTR gs:[rax],al
   140020a50:	jo     0x140020ab3
   140020a52:	je     0x140020abc
   140020a54:	add    BYTE PTR [rax],al
   140020a56:	add    BYTE PTR [rax],al
   140020a58:	imul   esi,DWORD PTR fs:[rdx+0x65],0x726f7463
   140020a60:	jns    0x140020a62
   140020a62:	add    BYTE PTR [rax],al
   140020a64:	je     0x140020adf
   140020a66:	jo     0x140020acd
	...
   140020a70:	push   0x61
   140020a72:	jbe    0x140020ad5
   140020a74:	jae    0x140020ad9
   140020a76:	jb     0x140020ae1
   140020a78:	jo     0x140020aee
   140020a7a:	add    BYTE PTR [rax],al
   140020a7c:	outs   dx,BYTE PTR ds:[rsi]
   140020a7d:	(bad)  
   140020a7e:	ins    DWORD PTR es:[rdi],dx
   140020a7f:	add    BYTE PTR gs:[rax],al
   140020a82:	add    BYTE PTR [rax],al
   140020a84:	cs push 0x73
   140020a87:	add    BYTE PTR [rbp+riz*2+0x70],ah
   140020a8b:	outs   dx,BYTE PTR gs:[rsi]
   140020a8d:	fs outs dx,BYTE PTR gs:[rsi]
   140020a90:	movsxd ebp,DWORD PTR [rcx+0x65]
   140020a93:	jae    0x140020a95
   140020a95:	add    BYTE PTR [rax],al
   140020a97:	add    BYTE PTR [rbx+0x6c],ah
   140020a9a:	(bad)  
   140020a9b:	jae    0x140020b10
   140020a9d:	outs   dx,BYTE PTR ds:[rsi]
   140020a9e:	(bad)  
   140020a9f:	ins    DWORD PTR es:[rdi],dx
   140020aa0:	gs jae 0x140020aa3
   140020aa3:	add    BYTE PTR [rax],al
   140020aa5:	add    BYTE PTR [rax],al
   140020aa7:	add    BYTE PTR [rax+0x6c],dh
   140020aaa:	jne    0x140020b13
   140020aac:	imul   ebp,DWORD PTR [rsi+0x73],0x2000
   140020ab3:	add    BYTE PTR [rax],al
   140020ab5:	add    BYTE PTR [rax],al
   140020ab7:	add    BYTE PTR [rbp+riz*2+0x70],ah
   140020abb:	outs   dx,BYTE PTR gs:[rsi]
   140020abd:	fs jae 0x140020afa
   140020ac0:	and    BYTE PTR [rbp+0x78],ah
   140020ac3:	jo     0x140020b2a
   140020ac5:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
   140020ac9:	and    BYTE PTR [rdx],dh
   140020acb:	and    BYTE PTR [rcx+0x72],ah
   140020ace:	addr32 jne 0x140020b3e
   140020ad1:	outs   dx,BYTE PTR gs:[rsi]
   140020ad3:	je     0x140020b48
   140020ad5:	cmp    ah,BYTE PTR [rax]
   140020ad7:	ins    DWORD PTR es:[rdi],dx
   140020ad8:	outs   dx,DWORD PTR ds:[rsi]
   140020ad9:	fs jne 0x140020b48
   140020adc:	and    BYTE PTR gs:[rcx+0x64],ch
   140020ae0:	outs   dx,BYTE PTR gs:[rsi]
   140020ae2:	je     0x140020b4d
   140020ae4:	imul   sp,WORD PTR [rbp+0x72],0x6120
   140020aea:	outs   dx,BYTE PTR ds:[rsi]
   140020aeb:	and    BYTE PTR fs:[rsi+0x65],dh
   140020aef:	jb     0x140020b64
   140020af1:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
   140020af8:	fs gs jo 0x140020b61
   140020afc:	outs   dx,BYTE PTR ds:[rsi]
   140020afd:	fs jae 0x140020b00
   140020b00:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
   140020b04:	jae    0x140020b74
   140020b06:	(bad)  
   140020b07:	ins    DWORD PTR es:[rdi],dx
   140020b08:	add    BYTE PTR gs:[rax],al
   140020b0b:	add    BYTE PTR [rax+0x6c],dh
   140020b0e:	jne    0x140020b77
   140020b10:	imul   ebp,DWORD PTR [rsi+0x0],0x0
   140020b17:	add    BYTE PTR [rdi],ch
   140020b19:	jno    0x140020b88
   140020b1b:	ins    BYTE PTR es:[rdi],dx
   140020b1c:	imul   esi,DWORD PTR fs:[rdx+0x0],0x6c6d712e
   140020b24:	add    BYTE PTR [rax],al
   140020b26:	add    BYTE PTR [rax],al
   140020b28:	cmp    al,0x73
   140020b2a:	je     0x140020b90
   140020b2c:	imul   ebp,DWORD PTR [rsi+0x3e],0x2d00
   140020b33:	add    BYTE PTR [rax],al
   140020b35:	add    BYTE PTR [rax],al
   140020b37:	add    BYTE PTR [rdi],ch
   140020b39:	fs gs (bad) 
   140020b3c:	jne    0x140020ba5
   140020b3e:	(bad)  
   140020b3f:	add    BYTE PTR [rdi],ch
   140020b41:	jb     0x140020ba8
   140020b43:	ins    BYTE PTR es:[rdi],dx
   140020b44:	gs (bad) 
   140020b46:	jae    0x140020bad
   140020b48:	(bad)  
   140020b49:	add    BYTE PTR [rax],al
   140020b4b:	add    BYTE PTR [rax],al
   140020b4d:	add    BYTE PTR [rax],al
   140020b4f:	add    BYTE PTR [rdx+0x65],dl
   140020b52:	ins    BYTE PTR es:[rdi],dx
   140020b53:	gs (bad) 
   140020b55:	jae    0x140020bbc
   140020b57:	sub    eax,0x6f687069
   140020b5c:	outs   dx,BYTE PTR ds:[rsi]
   140020b5d:	gs jae 0x140020bc9
   140020b60:	ins    DWORD PTR es:[rdi],dx
   140020b61:	jne    0x140020bcf
   140020b63:	(bad)  
   140020b64:	je     0x140020bd5
   140020b66:	jb     0x140020b68
   140020b68:	rex.R
   140020b69:	gs (bad) 
   140020b6b:	jne    0x140020bd4
   140020b6d:	sub    eax,0x6f687069
   140020b72:	outs   dx,BYTE PTR ds:[rsi]
   140020b73:	gs jae 0x140020bdf
   140020b76:	ins    DWORD PTR es:[rdi],dx
   140020b77:	jne    0x140020be5
   140020b79:	(bad)  
   140020b7a:	je     0x140020beb
   140020b7c:	jb     0x140020b7e
   140020b7e:	add    BYTE PTR [rax],al
   140020b80:	push   rdx
   140020b81:	gs ins BYTE PTR es:[rdi],dx
   140020b83:	gs (bad) 
   140020b85:	jae    0x140020bec
   140020b87:	sub    eax,0x6f687069
   140020b8c:	outs   dx,BYTE PTR ds:[rsi]
   140020b8d:	outs   dx,DWORD PTR gs:[rsi]
   140020b8f:	jae    0x140020b91
   140020b91:	add    BYTE PTR [rax],al
   140020b93:	add    BYTE PTR [rax],al
   140020b95:	add    BYTE PTR [rax],al
   140020b97:	add    BYTE PTR [rbp+riz*2+0x62],al
   140020b9b:	jne    0x140020c04
   140020b9d:	sub    eax,0x6f687069
   140020ba2:	outs   dx,BYTE PTR ds:[rsi]
   140020ba3:	outs   dx,DWORD PTR gs:[rsi]
   140020ba5:	jae    0x140020ba7
   140020ba7:	add    BYTE PTR [rdx],ah
   140020ba9:	or     al,BYTE PTR [rax]
   140020bab:	add    BYTE PTR [rax],al
   140020bad:	add    BYTE PTR [rax],al
   140020baf:	add    BYTE PTR [rcx+0x6e],cl
   140020bb2:	jbe    0x140020c15
   140020bb4:	ins    BYTE PTR es:[rdi],dx
   140020bb5:	imul   esp,DWORD PTR [rax+riz*1+0x61],0x6d756772
   140020bbd:	outs   dx,BYTE PTR gs:[rsi]
   140020bbf:	je     0x140020bfb
   140020bc1:	and    BYTE PTR [rdx],ah
   140020bc3:	add    BYTE PTR [rax],al
   140020bc5:	add    BYTE PTR [rax],al
   140020bc7:	add    BYTE PTR [rip+0x6f706d69],ch        # 0x1af727936
   140020bcd:	jb     0x140020c43
   140020bcf:	push   rax
   140020bd0:	(bad)  
   140020bd1:	je     0x140020c3b
   140020bd3:	and    BYTE PTR [rdx+0x65],dh
   140020bd6:	jno    0x140020c4d
   140020bd8:	imul   esi,DWORD PTR [rdx+0x65],0x6e612073
   140020bdf:	and    BYTE PTR [rcx+0x72],ah
   140020be2:	addr32 jne 0x140020c52
   140020be5:	outs   dx,BYTE PTR gs:[rsi]
   140020be7:	je     0x140020bf3
   140020be9:	add    BYTE PTR [rax],al
   140020beb:	add    BYTE PTR [rax],al
   140020bed:	add    BYTE PTR [rax],al
   140020bef:	add    BYTE PTR [rip+0x6f706d69],ch        # 0x1af72795e
   140020bf5:	jb     0x140020c6b
   140020bf7:	push   rax
   140020bf8:	(bad)  
   140020bf9:	je     0x140020c63
   140020bfb:	add    BYTE PTR [rax],al
   140020bfd:	add    BYTE PTR [rax],al
   140020bff:	add    BYTE PTR [rip+0x6946736a],ch        # 0x1a9487f6f
   140020c05:	ins    BYTE PTR es:[rdi],dx
   140020c06:	gs jae 0x140020c29
   140020c09:	jb     0x140020c70
   140020c0b:	jno    0x140020c82
   140020c0d:	imul   esi,DWORD PTR [rdx+0x65],0x6e612073
   140020c14:	and    BYTE PTR [rcx+0x72],ah
   140020c17:	addr32 jne 0x140020c87
   140020c1a:	outs   dx,BYTE PTR gs:[rsi]
   140020c1c:	je     0x140020c28
   140020c1e:	add    BYTE PTR [rax],al
   140020c20:	sub    eax,0x6946736a
   140020c25:	ins    BYTE PTR es:[rdi],dx
   140020c26:	gs jae 0x140020c29
   140020c29:	add    BYTE PTR [rax],al
   140020c2b:	add    BYTE PTR [rax],al
   140020c2d:	add    BYTE PTR [rax],al
   140020c2f:	add    BYTE PTR [rip+0x466c6d71],ch        # 0x1866e79a6
   140020c35:	imul   ebp,DWORD PTR [rbp+riz*2+0x73],0x71657220
   140020c3d:	jne    0x140020ca8
   140020c3f:	jb     0x140020ca6
   140020c41:	jae    0x140020c63
   140020c43:	(bad)  
   140020c44:	outs   dx,BYTE PTR ds:[rsi]
   140020c45:	and    BYTE PTR [rcx+0x72],ah
   140020c48:	addr32 jne 0x140020cb8
   140020c4b:	outs   dx,BYTE PTR gs:[rsi]
   140020c4d:	je     0x140020c59
   140020c4f:	add    BYTE PTR [rip+0x746f6f72],ch        # 0x1b4717bc7
   140020c55:	push   rax
   140020c56:	(bad)  
   140020c57:	je     0x140020cc1
   140020c59:	and    BYTE PTR [rdx+0x65],dh
   140020c5c:	jno    0x140020cd3
   140020c5e:	imul   esi,DWORD PTR [rdx+0x65],0x6e612073
   140020c65:	and    BYTE PTR [rcx+0x72],ah
   140020c68:	addr32 jne 0x140020cd8
   140020c6b:	outs   dx,BYTE PTR gs:[rsi]
   140020c6d:	je     0x140020c79
   140020c6f:	add    BYTE PTR [rip+0x466c6d71],ch        # 0x1866e79e6
   140020c75:	imul   ebp,DWORD PTR [rbp+riz*2+0x73],0x0
   140020c7d:	add    BYTE PTR [rax],al
   140020c7f:	add    BYTE PTR [rip+0x746f6f72],ch        # 0x1b4717bf7
   140020c85:	push   rax
   140020c86:	(bad)  
   140020c87:	je     0x140020cf1
   140020c89:	add    BYTE PTR [rax],al
   140020c8b:	add    BYTE PTR [rax],al
   140020c8d:	add    BYTE PTR [rax],al
   140020c8f:	add    BYTE PTR [rax-0x7d],bh
   140020c92:	add    al,BYTE PTR [rax+0x1]
   140020c95:	add    BYTE PTR [rax],al
   140020c97:	add    BYTE PTR [rax-0x18],al
   140020c9a:	add    BYTE PTR [rax+0x1],al
   140020c9d:	add    BYTE PTR [rax],al
   140020c9f:	add    al,ah
   140020ca1:	mov    edx,0x14001
   140020ca6:	add    BYTE PTR [rax],al
   140020ca8:	loopne 0x140020c64
   140020caa:	add    DWORD PTR [rax+0x1],eax
   140020cad:	add    BYTE PTR [rax],al
   140020caf:	add    al,ah
   140020cb1:	mov    edx,0x14001
   140020cb6:	add    BYTE PTR [rax],al
   140020cb8:	loopne 0x140020c74
   140020cba:	add    DWORD PTR [rax+0x1],eax
   140020cbd:	add    BYTE PTR [rax],al
   140020cbf:	add    dl,bl
   140020cc1:	repnz add DWORD PTR [rax+0x1],eax
   140020cc5:	add    BYTE PTR [rax],al
   140020cc7:	add    dl,bl
   140020cc9:	repnz add DWORD PTR [rax+0x1],eax
   140020ccd:	add    BYTE PTR [rax],al
   140020ccf:	add    dl,bl
   140020cd1:	repnz add DWORD PTR [rax+0x1],eax
	...
   140020cdd:	add    BYTE PTR [rax],al
   140020cdf:	add    BYTE PTR [rax],dh
   140020ce1:	test   DWORD PTR [rdx],eax
   140020ce3:	rex add DWORD PTR [rax],eax
   140020ce6:	add    BYTE PTR [rax],al
   140020ce8:	rex call 0x140034cee
   140020cee:	add    BYTE PTR [rax],al
   140020cf0:	lock mov edx,0x14001
   140020cf6:	add    BYTE PTR [rax],al
   140020cf8:	loopne 0x140020cb4
   140020cfa:	add    DWORD PTR [rax+0x1],eax
   140020cfd:	add    BYTE PTR [rax],al
   140020cff:	add    al,ah
   140020d01:	mov    edx,0x14001
   140020d06:	add    BYTE PTR [rax],al
   140020d08:	loopne 0x140020cc4
   140020d0a:	add    DWORD PTR [rax+0x1],eax
   140020d0d:	add    BYTE PTR [rax],al
   140020d0f:	add    BYTE PTR [rax],al
   140020d11:	mov    ebx,0x14001
   140020d16:	add    BYTE PTR [rax],al
   140020d18:	push   rax
   140020d19:	iret   
   140020d1a:	add    BYTE PTR [rax+0x1],al
   140020d1d:	add    BYTE PTR [rax],al
   140020d1f:	add    BYTE PTR [rax-0x24],ah
   140020d22:	add    BYTE PTR [rax+0x1],al
	...
   140020d2d:	add    BYTE PTR [rax],al
   140020d2f:	add    al,al
   140020d31:	test   DWORD PTR [rdx],eax
   140020d33:	rex add DWORD PTR [rax],eax
   140020d36:	add    BYTE PTR [rax],al
   140020d38:	rex call 0x140034d3e
   140020d3e:	add    BYTE PTR [rax],al
   140020d40:	lock mov edx,0x14001
   140020d46:	add    BYTE PTR [rax],al
   140020d48:	loopne 0x140020d04
   140020d4a:	add    DWORD PTR [rax+0x1],eax
   140020d4d:	add    BYTE PTR [rax],al
   140020d4f:	add    al,ah
   140020d51:	mov    edx,0x14001
   140020d56:	add    BYTE PTR [rax],al
   140020d58:	loopne 0x140020d14
   140020d5a:	add    DWORD PTR [rax+0x1],eax
   140020d5d:	add    BYTE PTR [rax],al
   140020d5f:	add    BYTE PTR [rax+0x14001bb],al
   140020d65:	add    BYTE PTR [rax],al
   140020d67:	add    al,dl
   140020d69:	int    0x0
   140020d6b:	rex add DWORD PTR [rax],eax
   140020d6e:	add    BYTE PTR [rax],al
   140020d70:	ror    ch,1
   140020d72:	add    BYTE PTR [rax+0x1],al
	...
   140020d7d:	add    BYTE PTR [rax],al
   140020d7f:	add    BYTE PTR [rax-0x7a],dl
   140020d82:	add    al,BYTE PTR [rax+0x1]
   140020d85:	add    BYTE PTR [rax],al
   140020d87:	add    BYTE PTR [rax-0x18],al
   140020d8a:	add    BYTE PTR [rax+0x1],al
   140020d8d:	add    BYTE PTR [rax],al
   140020d8f:	add    al,dh
   140020d91:	mov    edx,0x14001
   140020d96:	add    BYTE PTR [rax],al
   140020d98:	loopne 0x140020d54
   140020d9a:	add    DWORD PTR [rax+0x1],eax
   140020d9d:	add    BYTE PTR [rax],al
   140020d9f:	add    al,ah
   140020da1:	mov    edx,0x14001
   140020da6:	add    BYTE PTR [rax],al
   140020da8:	loopne 0x140020d64
   140020daa:	add    DWORD PTR [rax+0x1],eax
   140020dad:	add    BYTE PTR [rax],al
   140020daf:	add    al,al
   140020db1:	mov    ebx,0x14001
   140020db6:	add    BYTE PTR [rax],al
   140020db8:	loopne 0x140020d8f
   140020dba:	add    BYTE PTR [rax+0x1],al
   140020dbd:	add    BYTE PTR [rax],al
   140020dbf:	add    al,ah
   140020dc1:	(bad)  
   140020dc2:	add    BYTE PTR [rax+0x1],al
	...
   140020dcd:	add    BYTE PTR [rax],al
   140020dcf:	add    al,ah
   140020dd1:	xchg   BYTE PTR [rdx],al
   140020dd3:	rex add DWORD PTR [rax],eax
   140020dd6:	add    BYTE PTR [rax],al
   140020dd8:	rex call 0x140034dde
   140020dde:	add    BYTE PTR [rax],al
   140020de0:	lock mov edx,0x14001
   140020de6:	add    BYTE PTR [rax],al
   140020de8:	loopne 0x140020da4
   140020dea:	add    DWORD PTR [rax+0x1],eax
   140020ded:	add    BYTE PTR [rax],al
   140020def:	add    al,ah
   140020df1:	mov    edx,0x14001
   140020df6:	add    BYTE PTR [rax],al
   140020df8:	loopne 0x140020db4
   140020dfa:	add    DWORD PTR [rax+0x1],eax
   140020dfd:	add    BYTE PTR [rax],al
   140020dff:	add    BYTE PTR [rax],al
   140020e01:	mov    esp,0x14001
   140020e06:	add    BYTE PTR [rax],al
   140020e08:	ror    ch,1
   140020e0a:	add    BYTE PTR [rax+0x1],al
   140020e0d:	add    BYTE PTR [rax],al
   140020e0f:	add    al,dl
   140020e11:	int    0x0
   140020e13:	rex add DWORD PTR [rax],eax
	...
   140020e1e:	add    BYTE PTR [rax],al
   140020e20:	jo     0x140020da9
   140020e22:	add    al,BYTE PTR [rax+0x1]
   140020e25:	add    BYTE PTR [rax],al
   140020e27:	add    BYTE PTR [rax-0x18],al
   140020e2a:	add    BYTE PTR [rax+0x1],al
   140020e2d:	add    BYTE PTR [rax],al
   140020e2f:	add    al,dh
   140020e31:	mov    edx,0x14001
   140020e36:	add    BYTE PTR [rax],al
   140020e38:	loopne 0x140020df4
   140020e3a:	add    DWORD PTR [rax+0x1],eax
   140020e3d:	add    BYTE PTR [rax],al
   140020e3f:	add    al,ah
   140020e41:	mov    edx,0x14001
   140020e46:	add    BYTE PTR [rax],al
   140020e48:	loopne 0x140020e04
   140020e4a:	add    DWORD PTR [rax+0x1],eax
   140020e4d:	add    BYTE PTR [rax],al
   140020e4f:	add    BYTE PTR [rax-0x44],al
   140020e52:	add    DWORD PTR [rax+0x1],eax
   140020e55:	add    BYTE PTR [rax],al
   140020e57:	add    al,dl
   140020e59:	int    0x0
   140020e5b:	rex add DWORD PTR [rax],eax
   140020e5e:	add    BYTE PTR [rax],al
   140020e60:	ror    ch,1
   140020e62:	add    BYTE PTR [rax+0x1],al
	...
   140020e71:	mov    BYTE PTR [rdx],al
   140020e73:	rex add DWORD PTR [rax],eax
   140020e76:	add    BYTE PTR [rax],al
   140020e78:	rex call 0x140034e7e
   140020e7e:	add    BYTE PTR [rax],al
   140020e80:	lock mov edx,0x14001
   140020e86:	add    BYTE PTR [rax],al
   140020e88:	loopne 0x140020e44
   140020e8a:	add    DWORD PTR [rax+0x1],eax
   140020e8d:	add    BYTE PTR [rax],al
   140020e8f:	add    al,ah
   140020e91:	mov    edx,0x14001
   140020e96:	add    BYTE PTR [rax],al
   140020e98:	loopne 0x140020e54
   140020e9a:	add    DWORD PTR [rax+0x1],eax
   140020e9d:	add    BYTE PTR [rax],al
   140020e9f:	add    BYTE PTR [rax+0x14001bc],al
   140020ea5:	add    BYTE PTR [rax],al
   140020ea7:	add    al,dl
   140020ea9:	int    0x0
   140020eab:	rex add DWORD PTR [rax],eax
   140020eae:	add    BYTE PTR [rax],al
   140020eb0:	ror    ch,1
   140020eb2:	add    BYTE PTR [rax+0x1],al
	...
   140020ebd:	add    BYTE PTR [rax],al
   140020ebf:	add    BYTE PTR [rax+0x1400288],dl
   140020ec5:	add    BYTE PTR [rax],al
   140020ec7:	add    BYTE PTR [rax-0x18],al
   140020eca:	add    BYTE PTR [rax+0x1],al
   140020ecd:	add    BYTE PTR [rax],al
   140020ecf:	add    al,dh
   140020ed1:	mov    edx,0x14001
   140020ed6:	add    BYTE PTR [rax],al
   140020ed8:	loopne 0x140020e94
   140020eda:	add    DWORD PTR [rax+0x1],eax
   140020edd:	add    BYTE PTR [rax],al
   140020edf:	add    al,ah
   140020ee1:	mov    edx,0x14001
   140020ee6:	add    BYTE PTR [rax],al
   140020ee8:	loopne 0x140020ea4
   140020eea:	add    DWORD PTR [rax+0x1],eax
   140020eed:	add    BYTE PTR [rax],al
   140020eef:	add    BYTE PTR [rax],al
   140020ef1:	mov    ebp,0x14001
   140020ef6:	add    BYTE PTR [rax],al
   140020ef8:	push   rax
   140020ef9:	iret   
   140020efa:	add    BYTE PTR [rax+0x1],al
   140020efd:	add    BYTE PTR [rax],al
   140020eff:	add    BYTE PTR [rax-0x31],dl
   140020f02:	add    BYTE PTR [rax+0x1],al
	...
   140020f0d:	add    BYTE PTR [rax],al
   140020f0f:	add    BYTE PTR [rax],ah
   140020f11:	mov    DWORD PTR [rdx],eax
   140020f13:	rex add DWORD PTR [rax],eax
   140020f16:	add    BYTE PTR [rax],al
   140020f18:	rex call 0x140034f1e
   140020f1e:	add    BYTE PTR [rax],al
   140020f20:	lock mov edx,0x14001
   140020f26:	add    BYTE PTR [rax],al
   140020f28:	loopne 0x140020ee4
   140020f2a:	add    DWORD PTR [rax+0x1],eax
   140020f2d:	add    BYTE PTR [rax],al
   140020f2f:	add    al,ah
   140020f31:	mov    edx,0x14001
   140020f36:	add    BYTE PTR [rax],al
   140020f38:	loopne 0x140020ef4
   140020f3a:	add    DWORD PTR [rax+0x1],eax
   140020f3d:	add    BYTE PTR [rax],al
   140020f3f:	add    al,al
   140020f41:	mov    esp,0x14001
   140020f46:	add    BYTE PTR [rax],al
   140020f48:	loopne 0x140020f1f
   140020f4a:	add    BYTE PTR [rax+0x1],al
   140020f4d:	add    BYTE PTR [rax],al
   140020f4f:	add    al,ah
   140020f51:	(bad)  
   140020f52:	add    BYTE PTR [rax+0x1],al
	...
   140020f5d:	add    BYTE PTR [rax],al
   140020f5f:	add    BYTE PTR [rax+0x1400289],dh
   140020f65:	add    BYTE PTR [rax],al
   140020f67:	add    BYTE PTR [rax-0x18],al
   140020f6a:	add    BYTE PTR [rax+0x1],al
   140020f6d:	add    BYTE PTR [rax],al
   140020f6f:	add    al,dh
   140020f71:	mov    edx,0x14001
   140020f76:	add    BYTE PTR [rax],al
   140020f78:	loopne 0x140020f34
   140020f7a:	add    DWORD PTR [rax+0x1],eax
   140020f7d:	add    BYTE PTR [rax],al
   140020f7f:	add    al,ah
   140020f81:	mov    edx,0x14001
   140020f86:	add    BYTE PTR [rax],al
   140020f88:	loopne 0x140020f44
   140020f8a:	add    DWORD PTR [rax+0x1],eax
   140020f8d:	add    BYTE PTR [rax],al
   140020f8f:	add    BYTE PTR [rax-0x43],al
   140020f92:	add    DWORD PTR [rax+0x1],eax
   140020f95:	add    BYTE PTR [rax],al
   140020f97:	add    BYTE PTR [rax-0x32],al
   140020f9a:	add    BYTE PTR [rax+0x1],al
   140020f9d:	add    BYTE PTR [rax],al
   140020f9f:	add    BYTE PTR [rax-0x32],al
   140020fa2:	add    BYTE PTR [rax+0x1],al
	...
   140020fad:	add    BYTE PTR [rax],al
   140020faf:	add    BYTE PTR [rax-0x76],al
   140020fb2:	add    al,BYTE PTR [rax+0x1]
   140020fb5:	add    BYTE PTR [rax],al
   140020fb7:	add    BYTE PTR [rax-0x18],al
   140020fba:	add    BYTE PTR [rax+0x1],al
   140020fbd:	add    BYTE PTR [rax],al
   140020fbf:	add    al,dh
   140020fc1:	mov    edx,0x14001
   140020fc6:	add    BYTE PTR [rax],al
   140020fc8:	loopne 0x140020f84
   140020fca:	add    DWORD PTR [rax+0x1],eax
   140020fcd:	add    BYTE PTR [rax],al
   140020fcf:	add    al,ah
   140020fd1:	mov    edx,0x14001
   140020fd6:	add    BYTE PTR [rax],al
   140020fd8:	loopne 0x140020f94
   140020fda:	add    DWORD PTR [rax+0x1],eax
   140020fdd:	add    BYTE PTR [rax],al
   140020fdf:	add    BYTE PTR [rax+0x14001bd],al
   140020fe5:	add    BYTE PTR [rax],al
   140020fe7:	add    al,ah
   140020fe9:	(bad)  
   140020fea:	add    BYTE PTR [rax+0x1],al
   140020fed:	add    BYTE PTR [rax],al
   140020fef:	add    BYTE PTR [rax+0x14000d8],dl
	...
   140020ffd:	add    BYTE PTR [rax],al
   140020fff:	add    al,dl
   140021001:	mov    al,BYTE PTR [rdx]
   140021003:	rex add DWORD PTR [rax],eax
   140021006:	add    BYTE PTR [rax],al
   140021008:	rex call 0x14003500e
   14002100e:	add    BYTE PTR [rax],al
   140021010:	lock mov edx,0x14001
   140021016:	add    BYTE PTR [rax],al
   140021018:	loopne 0x140020fd4
   14002101a:	add    DWORD PTR [rax+0x1],eax
   14002101d:	add    BYTE PTR [rax],al
   14002101f:	add    al,ah
   140021021:	mov    edx,0x14001
   140021026:	add    BYTE PTR [rax],al
   140021028:	loopne 0x140020fe4
   14002102a:	add    DWORD PTR [rax+0x1],eax
   14002102d:	add    BYTE PTR [rax],al
   14002102f:	add    BYTE PTR [rax],dh
   140021031:	mov    esi,0x14001
   140021036:	add    BYTE PTR [rax],al
   140021038:	push   rax
   140021039:	iret   
   14002103a:	add    BYTE PTR [rax+0x1],al
   14002103d:	add    BYTE PTR [rax],al
   14002103f:	add    BYTE PTR [rax-0x24],ah
   140021042:	add    BYTE PTR [rax+0x1],al
	...
   14002104d:	add    BYTE PTR [rax],al
   14002104f:	add    BYTE PTR [rax-0x75],ah
   140021052:	add    al,BYTE PTR [rax+0x1]
   140021055:	add    BYTE PTR [rax],al
   140021057:	add    BYTE PTR [rax-0x18],al
   14002105a:	add    BYTE PTR [rax+0x1],al
   14002105d:	add    BYTE PTR [rax],al
   14002105f:	add    al,ah
   140021061:	mov    edx,0x14001
   140021066:	add    BYTE PTR [rax],al
   140021068:	loopne 0x140021024
   14002106a:	add    DWORD PTR [rax+0x1],eax
   14002106d:	add    BYTE PTR [rax],al
   14002106f:	add    al,ah
   140021071:	mov    edx,0x14001
   140021076:	add    BYTE PTR [rax],al
   140021078:	loopne 0x140021034
   14002107a:	add    DWORD PTR [rax+0x1],eax
   14002107d:	add    BYTE PTR [rax],al
   14002107f:	add    BYTE PTR [rax+0x14001bf],al
   140021085:	add    BYTE PTR [rax],al
   140021087:	add    BYTE PTR [rax-0x31],dl
   14002108a:	add    BYTE PTR [rax+0x1],al
   14002108d:	add    BYTE PTR [rax],al
   14002108f:	add    BYTE PTR [rax-0x31],dh
   140021092:	add    BYTE PTR [rax+0x1],al
	...
   14002109d:	add    BYTE PTR [rax],al
   14002109f:	add    al,ch
   1400210a1:	mov    eax,DWORD PTR [rdx]
   1400210a3:	rex add DWORD PTR [rax],eax
   1400210a6:	add    BYTE PTR [rax],al
   1400210a8:	rex call 0x1400350ae
   1400210ae:	add    BYTE PTR [rax],al
   1400210b0:	loopne 0x14002106c
   1400210b2:	add    DWORD PTR [rax+0x1],eax
   1400210b5:	add    BYTE PTR [rax],al
   1400210b7:	add    al,ah
   1400210b9:	mov    edx,0x14001
   1400210be:	add    BYTE PTR [rax],al
   1400210c0:	loopne 0x14002107c
   1400210c2:	add    DWORD PTR [rax+0x1],eax
   1400210c5:	add    BYTE PTR [rax],al
   1400210c7:	add    al,ah
   1400210c9:	mov    edx,0x14001
   1400210ce:	add    BYTE PTR [rax],al
   1400210d0:	mov    al,0xbe
   1400210d2:	add    DWORD PTR [rax+0x1],eax
   1400210d5:	add    BYTE PTR [rax],al
   1400210d7:	add    al,al
   1400210d9:	iret   
   1400210da:	add    BYTE PTR [rax+0x1],al
   1400210dd:	add    BYTE PTR [rax],al
   1400210df:	add    BYTE PTR [rax],al
   1400210e1:	rol    BYTE PTR [rax],1
   1400210e3:	rex add DWORD PTR [rax],eax
	...
   1400210ee:	add    BYTE PTR [rax],al
   1400210f0:	xor    BYTE PTR [rbp+0x14002],cl
   1400210f6:	add    BYTE PTR [rax],al
   1400210f8:	rex call 0x1400350fe
   1400210fe:	add    BYTE PTR [rax],al
   140021100:	loopne 0x1400210bc
   140021102:	add    DWORD PTR [rax+0x1],eax
   140021105:	add    BYTE PTR [rax],al
   140021107:	add    al,ah
   140021109:	mov    edx,0x14001
   14002110e:	add    BYTE PTR [rax],al
   140021110:	loopne 0x1400210cc
   140021112:	add    DWORD PTR [rax+0x1],eax
   140021115:	add    BYTE PTR [rax],al
   140021117:	add    al,ah
   140021119:	mov    edx,0x14001
   14002111e:	add    BYTE PTR [rax],al
   140021120:	push   rax
   140021121:	rol    DWORD PTR [rcx],0x40
   140021124:	add    DWORD PTR [rax],eax
   140021126:	add    BYTE PTR [rax],al
   140021128:	rcl    dl,1
   14002112a:	add    BYTE PTR [rax+0x1],al
   14002112d:	add    BYTE PTR [rax],al
   14002112f:	add    BYTE PTR [rax-0x30],al
   140021132:	add    BYTE PTR [rax+0x1],al
	...
   14002113d:	add    BYTE PTR [rax],al
   14002113f:	add    BYTE PTR [rax+0x140028d],bh
   140021145:	add    BYTE PTR [rax],al
   140021147:	add    BYTE PTR [rax-0x18],al
   14002114a:	add    BYTE PTR [rax+0x1],al
   14002114d:	add    BYTE PTR [rax],al
   14002114f:	add    al,ah
   140021151:	mov    edx,0x14001
   140021156:	add    BYTE PTR [rax],al
   140021158:	loopne 0x140021114
   14002115a:	add    DWORD PTR [rax+0x1],eax
   14002115d:	add    BYTE PTR [rax],al
   14002115f:	add    al,ah
   140021161:	mov    edx,0x14001
   140021166:	add    BYTE PTR [rax],al
   140021168:	loopne 0x140021124
   14002116a:	add    DWORD PTR [rax+0x1],eax
   14002116d:	add    BYTE PTR [rax],al
   14002116f:	add    al,al
   140021171:	mov    edi,0x14001
   140021176:	add    BYTE PTR [rax],al
   140021178:	rcl    dl,1
   14002117a:	add    BYTE PTR [rax+0x1],al
   14002117d:	add    BYTE PTR [rax],al
   14002117f:	add    BYTE PTR [rax-0x2a],dh
   140021182:	add    BYTE PTR [rax+0x1],al
	...
   14002118d:	add    BYTE PTR [rax],al
   14002118f:	add    BYTE PTR [rax-0x72],cl
   140021192:	add    al,BYTE PTR [rax+0x1]
   140021195:	add    BYTE PTR [rax],al
   140021197:	add    BYTE PTR [rax-0x18],al
   14002119a:	add    BYTE PTR [rax+0x1],al
   14002119d:	add    BYTE PTR [rax],al
   14002119f:	add    al,ah
   1400211a1:	mov    edx,0x14001
   1400211a6:	add    BYTE PTR [rax],al
   1400211a8:	loopne 0x140021164
   1400211aa:	add    DWORD PTR [rax+0x1],eax
   1400211ad:	add    BYTE PTR [rax],al
   1400211af:	add    al,ah
   1400211b1:	mov    edx,0x14001
   1400211b6:	add    BYTE PTR [rax],al
   1400211b8:	loopne 0x140021174
   1400211ba:	add    DWORD PTR [rax+0x1],eax
   1400211bd:	add    BYTE PTR [rax],al
   1400211bf:	add    BYTE PTR [rax-0x40],dh
   1400211c2:	add    DWORD PTR [rax+0x1],eax
   1400211c5:	add    BYTE PTR [rax],al
   1400211c7:	add    BYTE PTR [rax-0x2f],dh
   1400211ca:	add    BYTE PTR [rax+0x1],al
   1400211cd:	add    BYTE PTR [rax],al
   1400211cf:	add    BYTE PTR [rax+0x14000d1],dl
	...
   1400211dd:	add    BYTE PTR [rax],al
   1400211df:	add    al,bl
   1400211e1:	mov    es,WORD PTR [rdx]
   1400211e3:	rex add DWORD PTR [rax],eax
   1400211e6:	add    BYTE PTR [rax],al
   1400211e8:	rex call 0x1400351ee
   1400211ee:	add    BYTE PTR [rax],al
   1400211f0:	loopne 0x1400211ac
   1400211f2:	add    DWORD PTR [rax+0x1],eax
   1400211f5:	add    BYTE PTR [rax],al
   1400211f7:	add    al,ah
   1400211f9:	mov    edx,0x14001
   1400211fe:	add    BYTE PTR [rax],al
   140021200:	loopne 0x1400211bc
   140021202:	add    DWORD PTR [rax+0x1],eax
   140021205:	add    BYTE PTR [rax],al
   140021207:	add    al,ah
   140021209:	mov    edx,0x14001
   14002120e:	add    BYTE PTR [rax],al
   140021210:	lock rol DWORD PTR [rcx],0x40
   140021214:	add    DWORD PTR [rax],eax
   140021216:	add    BYTE PTR [rax],al
   140021218:	ror    ch,1
   14002121a:	add    BYTE PTR [rax+0x1],al
   14002121d:	add    BYTE PTR [rax],al
   14002121f:	add    al,dl
   140021221:	int    0x0
   140021223:	rex add DWORD PTR [rax],eax
   140021226:	add    BYTE PTR [rax],al
   140021228:	mov    al,0xd1
   14002122a:	add    BYTE PTR [rax+0x1],al
   14002122d:	add    BYTE PTR [rax],al
   14002122f:	add    BYTE PTR [rax-0x71],ch
   140021232:	add    al,BYTE PTR [rax+0x1]
   140021235:	add    BYTE PTR [rax],al
   140021237:	add    BYTE PTR [rax-0x18],al
   14002123a:	add    BYTE PTR [rax+0x1],al
   14002123d:	add    BYTE PTR [rax],al
   14002123f:	add    al,ah
   140021241:	mov    edx,0x14001
   140021246:	add    BYTE PTR [rax],al
   140021248:	loopne 0x140021204
   14002124a:	add    DWORD PTR [rax+0x1],eax
   14002124d:	add    BYTE PTR [rax],al
   14002124f:	add    al,ah
   140021251:	mov    edx,0x14001
   140021256:	add    BYTE PTR [rax],al
   140021258:	loopne 0x140021214
   14002125a:	add    DWORD PTR [rax+0x1],eax
   14002125d:	add    BYTE PTR [rax],al
   14002125f:	add    BYTE PTR [rax],dh
   140021261:	ret    0x4001
   140021264:	add    DWORD PTR [rax],eax
   140021266:	add    BYTE PTR [rax],al
   140021268:	ror    ch,1
   14002126a:	add    BYTE PTR [rax+0x1],al
   14002126d:	add    BYTE PTR [rax],al
   14002126f:	add    al,dl
   140021271:	int    0x0
   140021273:	rex add DWORD PTR [rax],eax
   140021276:	add    BYTE PTR [rax],al
   140021278:	mov    al,0xd1
   14002127a:	add    BYTE PTR [rax+0x1],al
   14002127d:	add    BYTE PTR [rax],al
   14002127f:	add    al,bh
   140021281:	pop    QWORD PTR [rdx]
   140021283:	rex add DWORD PTR [rax],eax
   140021286:	add    BYTE PTR [rax],al
   140021288:	rex call 0x14003528e
   14002128e:	add    BYTE PTR [rax],al
   140021290:	loopne 0x14002124c
   140021292:	add    DWORD PTR [rax+0x1],eax
   140021295:	add    BYTE PTR [rax],al
   140021297:	add    al,ah
   140021299:	mov    edx,0x14001
   14002129e:	add    BYTE PTR [rax],al
   1400212a0:	loopne 0x14002125c
   1400212a2:	add    DWORD PTR [rax+0x1],eax
   1400212a5:	add    BYTE PTR [rax],al
   1400212a7:	add    al,ah
   1400212a9:	mov    edx,0x14001
   1400212ae:	add    BYTE PTR [rax],al
   1400212b0:	jo     0x140021274
   1400212b2:	add    DWORD PTR [rax+0x1],eax
   1400212b5:	add    BYTE PTR [rax],al
   1400212b7:	add    al,dl
   1400212b9:	int    0x0
   1400212bb:	rex add DWORD PTR [rax],eax
   1400212be:	add    BYTE PTR [rax],al
   1400212c0:	ror    ch,1
   1400212c2:	add    BYTE PTR [rax+0x1],al
   1400212c5:	add    BYTE PTR [rax],al
   1400212c7:	add    al,dl
   1400212c9:	rol    DWORD PTR [rax],1
   1400212cb:	rex add DWORD PTR [rax],eax
   1400212ce:	add    BYTE PTR [rax],al
   1400212d0:	mov    BYTE PTR [rax+0x14002],dl
   1400212d6:	add    BYTE PTR [rax],al
   1400212d8:	rex call 0x1400352de
   1400212de:	add    BYTE PTR [rax],al
   1400212e0:	lock mov edx,0x14001
   1400212e6:	add    BYTE PTR [rax],al
   1400212e8:	loopne 0x1400212a4
   1400212ea:	add    DWORD PTR [rax+0x1],eax
   1400212ed:	add    BYTE PTR [rax],al
   1400212ef:	add    al,ah
   1400212f1:	mov    edx,0x14001
   1400212f6:	add    BYTE PTR [rax],al
   1400212f8:	loopne 0x1400212b4
   1400212fa:	add    DWORD PTR [rax+0x1],eax
   1400212fd:	add    BYTE PTR [rax],al
   1400212ff:	add    BYTE PTR [rax+0x14001c2],dh
   140021305:	add    BYTE PTR [rax],al
   140021307:	add    al,dl
   140021309:	rol    BYTE PTR [rax],cl
   14002130b:	rex add DWORD PTR [rax],eax
   14002130e:	add    BYTE PTR [rax],al
   140021310:	add    dl,dl
   140021312:	add    BYTE PTR [rax+0x1],al
	...
   14002131d:	add    BYTE PTR [rax],al
   14002131f:	add    BYTE PTR [rax],bl
   140021321:	xchg   ecx,eax
   140021322:	add    al,BYTE PTR [rax+0x1]
   140021325:	add    BYTE PTR [rax],al
   140021327:	add    BYTE PTR [rax-0x18],al
   14002132a:	add    BYTE PTR [rax+0x1],al
   14002132d:	add    BYTE PTR [rax],al
   14002132f:	add    al,dh
   140021331:	mov    edx,0x14001
   140021336:	add    BYTE PTR [rax],al
   140021338:	loopne 0x1400212f4
   14002133a:	add    DWORD PTR [rax+0x1],eax
   14002133d:	add    BYTE PTR [rax],al
   14002133f:	add    al,ah
   140021341:	mov    edx,0x14001
   140021346:	add    BYTE PTR [rax],al
   140021348:	loopne 0x140021304
   14002134a:	add    DWORD PTR [rax+0x1],eax
   14002134d:	add    BYTE PTR [rax],al
   14002134f:	add    BYTE PTR [rax-0x3d],ah
   140021352:	add    DWORD PTR [rax+0x1],eax
   140021355:	add    BYTE PTR [rax],al
   140021357:	add    al,dl
   140021359:	rol    BYTE PTR [rax],cl
   14002135b:	rex add DWORD PTR [rax],eax
   14002135e:	add    BYTE PTR [rax],al
   140021360:	sbb    cl,0x0
   140021363:	rex add DWORD PTR [rax],eax
	...
   14002136e:	add    BYTE PTR [rax],al
   140021370:	test   al,0x91
   140021372:	add    al,BYTE PTR [rax+0x1]
   140021375:	add    BYTE PTR [rax],al
   140021377:	add    BYTE PTR [rax-0x18],al
   14002137a:	add    BYTE PTR [rax+0x1],al
   14002137d:	add    BYTE PTR [rax],al
   14002137f:	add    al,dh
   140021381:	mov    edx,0x14001
   140021386:	add    BYTE PTR [rax],al
   140021388:	loopne 0x140021344
   14002138a:	add    DWORD PTR [rax+0x1],eax
   14002138d:	add    BYTE PTR [rax],al
   14002138f:	add    al,ah
   140021391:	mov    edx,0x14001
   140021396:	add    BYTE PTR [rax],al
   140021398:	loopne 0x140021354
   14002139a:	add    DWORD PTR [rax+0x1],eax
   14002139d:	add    BYTE PTR [rax],al
   14002139f:	add    al,ah
   1400213a1:	ret    
   1400213a2:	add    DWORD PTR [rax+0x1],eax
   1400213a5:	add    BYTE PTR [rax],al
   1400213a7:	add    al,ah
   1400213a9:	(bad)  
   1400213aa:	add    BYTE PTR [rax+0x1],al
   1400213ad:	add    BYTE PTR [rax],al
   1400213af:	add    BYTE PTR [rax+0x14000d8],dl
	...
   1400213bd:	add    BYTE PTR [rax],al
   1400213bf:	add    BYTE PTR [rax],bh
   1400213c1:	xchg   edx,eax
   1400213c2:	add    al,BYTE PTR [rax+0x1]
   1400213c5:	add    BYTE PTR [rax],al
   1400213c7:	add    BYTE PTR [rax-0x18],al
   1400213ca:	add    BYTE PTR [rax+0x1],al
   1400213cd:	add    BYTE PTR [rax],al
   1400213cf:	add    al,dh
   1400213d1:	mov    edx,0x14001
   1400213d6:	add    BYTE PTR [rax],al
   1400213d8:	loopne 0x140021394
   1400213da:	add    DWORD PTR [rax+0x1],eax
   1400213dd:	add    BYTE PTR [rax],al
   1400213df:	add    al,ah
   1400213e1:	mov    edx,0x14001
   1400213e6:	add    BYTE PTR [rax],al
   1400213e8:	loopne 0x1400213a4
   1400213ea:	add    DWORD PTR [rax+0x1],eax
   1400213ed:	add    BYTE PTR [rax],al
   1400213ef:	add    BYTE PTR [rax+0x14001c4],dl
   1400213f5:	add    BYTE PTR [rax],al
   1400213f7:	add    BYTE PTR [rax-0x31],dl
   1400213fa:	add    BYTE PTR [rax+0x1],al
   1400213fd:	add    BYTE PTR [rax],al
   1400213ff:	add    BYTE PTR [rax],dh
   140021401:	rol    DWORD PTR [rax],cl
   140021403:	rex add DWORD PTR [rax],eax
	...
   14002140e:	add    BYTE PTR [rax],al
   140021410:	enter  0x292,0x40
   140021414:	add    DWORD PTR [rax],eax
   140021416:	add    BYTE PTR [rax],al
   140021418:	rex call 0x14003541e
   14002141e:	add    BYTE PTR [rax],al
   140021420:	lock mov edx,0x14001
   140021426:	add    BYTE PTR [rax],al
   140021428:	loopne 0x1400213e4
   14002142a:	add    DWORD PTR [rax+0x1],eax
   14002142d:	add    BYTE PTR [rax],al
   14002142f:	add    al,ah
   140021431:	mov    edx,0x14001
   140021436:	add    BYTE PTR [rax],al
   140021438:	loopne 0x1400213f4
   14002143a:	add    DWORD PTR [rax+0x1],eax
   14002143d:	add    BYTE PTR [rax],al
   14002143f:	add    BYTE PTR [rax],dl
   140021441:	(bad)
   140021444:	add    DWORD PTR [rax],eax
   140021446:	add    BYTE PTR [rax],al
   140021448:	rcl    dl,1
   14002144a:	add    BYTE PTR [rax+0x1],al
   14002144d:	add    BYTE PTR [rax],al
   14002144f:	add    BYTE PTR [rax],al
   140021451:	rol    BYTE PTR [rax],cl
   140021453:	rex add DWORD PTR [rax],eax
	...
   14002145e:	add    BYTE PTR [rax],al
   140021460:	pop    rax
   140021461:	xchg   ebx,eax
   140021462:	add    al,BYTE PTR [rax+0x1]
   140021465:	add    BYTE PTR [rax],al
   140021467:	add    BYTE PTR [rax-0x18],al
   14002146a:	add    BYTE PTR [rax+0x1],al
   14002146d:	add    BYTE PTR [rax],al
   14002146f:	add    al,ah
   140021471:	mov    edx,0x14001
   140021476:	add    BYTE PTR [rax],al
   140021478:	loopne 0x140021434
   14002147a:	add    DWORD PTR [rax+0x1],eax
   14002147d:	add    BYTE PTR [rax],al
   14002147f:	add    al,ah
   140021481:	mov    edx,0x14001
   140021486:	add    BYTE PTR [rax],al
   140021488:	loopne 0x140021444
   14002148a:	add    DWORD PTR [rax+0x1],eax
   14002148d:	add    BYTE PTR [rax],al
   14002148f:	add    al,al
   140021491:	(bad)
   140021494:	add    DWORD PTR [rax],eax
   140021496:	add    BYTE PTR [rax],al
   140021498:	rcl    dl,1
   14002149a:	add    BYTE PTR [rax+0x1],al
   14002149d:	add    BYTE PTR [rax],al
   14002149f:	add    al,dh
   1400214a1:	rol    BYTE PTR [rax],cl
   1400214a3:	rex add DWORD PTR [rax],eax
	...
   1400214ae:	add    BYTE PTR [rax],al
   1400214b0:	loopne 0x140021445
   1400214b2:	add    al,BYTE PTR [rax+0x1]
   1400214b5:	add    BYTE PTR [rax],al
   1400214b7:	add    BYTE PTR [rax-0x18],al
   1400214ba:	add    BYTE PTR [rax+0x1],al
   1400214bd:	add    BYTE PTR [rax],al
   1400214bf:	add    al,dh
   1400214c1:	mov    edx,0x14001
   1400214c6:	add    BYTE PTR [rax],al
   1400214c8:	loopne 0x140021484
   1400214ca:	add    DWORD PTR [rax+0x1],eax
   1400214cd:	add    BYTE PTR [rax],al
   1400214cf:	add    al,ah
   1400214d1:	mov    edx,0x14001
   1400214d6:	add    BYTE PTR [rax],al
   1400214d8:	loopne 0x140021494
   1400214da:	add    DWORD PTR [rax+0x1],eax
   1400214dd:	add    BYTE PTR [rax],al
   1400214df:	add    BYTE PTR [rax-0x3a],ah
   1400214e2:	add    DWORD PTR [rax+0x1],eax
   1400214e5:	add    BYTE PTR [rax],al
   1400214e7:	add    al,dl
   1400214e9:	rol    BYTE PTR [rax],cl
   1400214eb:	rex add DWORD PTR [rax],eax
   1400214ee:	add    BYTE PTR [rax],al
   1400214f0:	push   rax
   1400214f1:	iret   
   1400214f2:	add    BYTE PTR [rax+0x1],al
	...
   1400214fd:	add    BYTE PTR [rax],al
   1400214ff:	add    BYTE PTR [rax-0x6c],dh
   140021502:	add    al,BYTE PTR [rax+0x1]
   140021505:	add    BYTE PTR [rax],al
   140021507:	add    BYTE PTR [rax-0x18],al
   14002150a:	add    BYTE PTR [rax+0x1],al
   14002150d:	add    BYTE PTR [rax],al
   14002150f:	add    al,dh
   140021511:	mov    edx,0x14001
   140021516:	add    BYTE PTR [rax],al
   140021518:	loopne 0x1400214d4
   14002151a:	add    DWORD PTR [rax+0x1],eax
   14002151d:	add    BYTE PTR [rax],al
   14002151f:	add    al,ah
   140021521:	mov    edx,0x14001
   140021526:	add    BYTE PTR [rax],al
   140021528:	loopne 0x1400214e4
   14002152a:	add    DWORD PTR [rax+0x1],eax
   14002152d:	add    BYTE PTR [rax],al
   14002152f:	add    al,ah
   140021531:	mov    BYTE PTR [rcx],0x40
   140021534:	add    DWORD PTR [rax],eax
   140021536:	add    BYTE PTR [rax],al
   140021538:	rcl    dl,1
   14002153a:	add    BYTE PTR [rax+0x1],al
   14002153d:	add    BYTE PTR [rax],al
   14002153f:	add    BYTE PTR [rax-0x31],dl
   140021542:	add    BYTE PTR [rax+0x1],al
	...
   140021551:	xchg   ebp,eax
   140021552:	add    al,BYTE PTR [rax+0x1]
   140021555:	add    BYTE PTR [rax],al
   140021557:	add    BYTE PTR [rax-0x18],al
   14002155a:	add    BYTE PTR [rax+0x1],al
   14002155d:	add    BYTE PTR [rax],al
   14002155f:	add    al,dh
   140021561:	mov    edx,0x14001
   140021566:	add    BYTE PTR [rax],al
   140021568:	loopne 0x140021524
   14002156a:	add    DWORD PTR [rax+0x1],eax
   14002156d:	add    BYTE PTR [rax],al
   14002156f:	add    al,ah
   140021571:	mov    edx,0x14001
   140021576:	add    BYTE PTR [rax],al
   140021578:	loopne 0x140021534
   14002157a:	add    DWORD PTR [rax+0x1],eax
   14002157d:	add    BYTE PTR [rax],al
   14002157f:	add    BYTE PTR [rax-0x39],ah
   140021582:	add    DWORD PTR [rax+0x1],eax
   140021585:	add    BYTE PTR [rax],al
   140021587:	add    BYTE PTR [rax-0x31],dl
   14002158a:	add    BYTE PTR [rax+0x1],al
   14002158d:	add    BYTE PTR [rax],al
   14002158f:	add    BYTE PTR [rax],dh
   140021591:	rol    DWORD PTR [rax],cl
   140021593:	rex add DWORD PTR [rax],eax
	...
   14002159e:	add    BYTE PTR [rax],al
   1400215a0:	nop
   1400215a1:	xchg   ebp,eax
   1400215a2:	add    al,BYTE PTR [rax+0x1]
   1400215a5:	add    BYTE PTR [rax],al
   1400215a7:	add    BYTE PTR [rax-0x18],al
   1400215aa:	add    BYTE PTR [rax+0x1],al
   1400215ad:	add    BYTE PTR [rax],al
   1400215af:	add    al,dh
   1400215b1:	mov    edx,0x14001
   1400215b6:	add    BYTE PTR [rax],al
   1400215b8:	loopne 0x140021574
   1400215ba:	add    DWORD PTR [rax+0x1],eax
   1400215bd:	add    BYTE PTR [rax],al
   1400215bf:	add    al,ah
   1400215c1:	mov    edx,0x14001
   1400215c6:	add    BYTE PTR [rax],al
   1400215c8:	loopne 0x140021584
   1400215ca:	add    DWORD PTR [rax+0x1],eax
   1400215cd:	add    BYTE PTR [rax],al
   1400215cf:	add    al,ah
   1400215d1:	mov    DWORD PTR [rcx],0x140
   1400215d7:	add    BYTE PTR [rax-0x31],dl
   1400215da:	add    BYTE PTR [rax+0x1],al
   1400215dd:	add    BYTE PTR [rax],al
   1400215df:	add    BYTE PTR [rax],dh
   1400215e1:	rol    DWORD PTR [rax],cl
   1400215e3:	rex add DWORD PTR [rax],eax
	...
   1400215ee:	add    BYTE PTR [rax],al
   1400215f0:	and    BYTE PTR [rsi+0x14002],dl
   1400215f6:	add    BYTE PTR [rax],al
   1400215f8:	rex call 0x1400355fe
   1400215fe:	add    BYTE PTR [rax],al
   140021600:	lock mov edx,0x14001
   140021606:	add    BYTE PTR [rax],al
   140021608:	loopne 0x1400215c4
   14002160a:	add    DWORD PTR [rax+0x1],eax
   14002160d:	add    BYTE PTR [rax],al
   14002160f:	add    al,ah
   140021611:	mov    edx,0x14001
   140021616:	add    BYTE PTR [rax],al
   140021618:	loopne 0x1400215d4
   14002161a:	add    DWORD PTR [rax+0x1],eax
   14002161d:	add    BYTE PTR [rax],al
   14002161f:	add    BYTE PTR [rax-0x38],ah
   140021622:	add    DWORD PTR [rax+0x1],eax
   140021625:	add    BYTE PTR [rax],al
   140021627:	add    BYTE PTR [rax-0x31],dl
   14002162a:	add    BYTE PTR [rax+0x1],al
   14002162d:	add    BYTE PTR [rax],al
   14002162f:	add    BYTE PTR [rax],dh
   140021631:	rol    DWORD PTR [rax],cl
   140021633:	rex add DWORD PTR [rax],eax
	...
   14002163e:	add    BYTE PTR [rax],al
   140021640:	mov    al,0x96
   140021642:	add    al,BYTE PTR [rax+0x1]
   140021645:	add    BYTE PTR [rax],al
   140021647:	add    BYTE PTR [rax-0x18],al
   14002164a:	add    BYTE PTR [rax+0x1],al
   14002164d:	add    BYTE PTR [rax],al
   14002164f:	add    al,dh
   140021651:	mov    edx,0x14001
   140021656:	add    BYTE PTR [rax],al
   140021658:	loopne 0x140021614
   14002165a:	add    DWORD PTR [rax+0x1],eax
   14002165d:	add    BYTE PTR [rax],al
   14002165f:	add    al,ah
   140021661:	mov    edx,0x14001
   140021666:	add    BYTE PTR [rax],al
   140021668:	loopne 0x140021624
   14002166a:	add    DWORD PTR [rax+0x1],eax
   14002166d:	add    BYTE PTR [rax],al
   14002166f:	add    al,ah
   140021671:	enter  0x4001,0x1
   140021675:	add    BYTE PTR [rax],al
   140021677:	add    BYTE PTR [rax-0x31],dl
   14002167a:	add    BYTE PTR [rax+0x1],al
   14002167d:	add    BYTE PTR [rax],al
   14002167f:	add    BYTE PTR [rax],dh
   140021681:	rol    DWORD PTR [rax],cl
   140021683:	rex add DWORD PTR [rax],eax
	...
   14002168e:	add    BYTE PTR [rax],al
   140021690:	rex xchg edi,eax
   140021692:	add    al,BYTE PTR [rax+0x1]
   140021695:	add    BYTE PTR [rax],al
   140021697:	add    BYTE PTR [rax-0x18],al
   14002169a:	add    BYTE PTR [rax+0x1],al
   14002169d:	add    BYTE PTR [rax],al
   14002169f:	add    al,dh
   1400216a1:	mov    edx,0x14001
   1400216a6:	add    BYTE PTR [rax],al
   1400216a8:	loopne 0x140021664
   1400216aa:	add    DWORD PTR [rax+0x1],eax
   1400216ad:	add    BYTE PTR [rax],al
   1400216af:	add    al,ah
   1400216b1:	mov    edx,0x14001
   1400216b6:	add    BYTE PTR [rax],al
   1400216b8:	loopne 0x140021674
   1400216ba:	add    DWORD PTR [rax+0x1],eax
   1400216bd:	add    BYTE PTR [rax],al
   1400216bf:	add    BYTE PTR [rax-0x37],ah
   1400216c2:	add    DWORD PTR [rax+0x1],eax
   1400216c5:	add    BYTE PTR [rax],al
   1400216c7:	add    BYTE PTR [rax-0x31],dl
   1400216ca:	add    BYTE PTR [rax+0x1],al
   1400216cd:	add    BYTE PTR [rax],al
   1400216cf:	add    BYTE PTR [rax],dh
   1400216d1:	rol    DWORD PTR [rax],cl
   1400216d3:	rex add DWORD PTR [rax],eax
	...
   1400216de:	add    BYTE PTR [rax],al
   1400216e0:	rcl    BYTE PTR [rdi+0x14002],1
   1400216e6:	add    BYTE PTR [rax],al
   1400216e8:	rex call 0x1400356ee
   1400216ee:	add    BYTE PTR [rax],al
   1400216f0:	lock mov edx,0x14001
   1400216f6:	add    BYTE PTR [rax],al
   1400216f8:	loopne 0x1400216b4
   1400216fa:	add    DWORD PTR [rax+0x1],eax
   1400216fd:	add    BYTE PTR [rax],al
   1400216ff:	add    al,ah
   140021701:	mov    edx,0x14001
   140021706:	add    BYTE PTR [rax],al
   140021708:	loopne 0x1400216c4
   14002170a:	add    DWORD PTR [rax+0x1],eax
   14002170d:	add    BYTE PTR [rax],al
   14002170f:	add    al,ah
   140021711:	leave  
   140021712:	add    DWORD PTR [rax+0x1],eax
   140021715:	add    BYTE PTR [rax],al
   140021717:	add    BYTE PTR [rax-0x31],dl
   14002171a:	add    BYTE PTR [rax+0x1],al
   14002171d:	add    BYTE PTR [rax],al
   14002171f:	add    BYTE PTR [rax],dh
   140021721:	rol    DWORD PTR [rax],cl
   140021723:	rex add DWORD PTR [rax],eax
	...
   14002172e:	add    BYTE PTR [rax],al
   140021730:	(bad)  
   140021731:	cwde   
   140021732:	add    al,BYTE PTR [rax+0x1]
   140021735:	add    BYTE PTR [rax],al
   140021737:	add    BYTE PTR [rax-0x18],al
   14002173a:	add    BYTE PTR [rax+0x1],al
   14002173d:	add    BYTE PTR [rax],al
   14002173f:	add    al,dh
   140021741:	mov    edx,0x14001
   140021746:	add    BYTE PTR [rax],al
   140021748:	loopne 0x140021704
   14002174a:	add    DWORD PTR [rax+0x1],eax
   14002174d:	add    BYTE PTR [rax],al
   14002174f:	add    al,ah
   140021751:	mov    edx,0x14001
   140021756:	add    BYTE PTR [rax],al
   140021758:	loopne 0x140021714
   14002175a:	add    DWORD PTR [rax+0x1],eax
   14002175d:	add    BYTE PTR [rax],al
   14002175f:	add    BYTE PTR [rax-0x36],ah
   140021762:	add    DWORD PTR [rax+0x1],eax
   140021765:	add    BYTE PTR [rax],al
   140021767:	add    BYTE PTR [rax-0x31],dl
   14002176a:	add    BYTE PTR [rax+0x1],al
   14002176d:	add    BYTE PTR [rax],al
   14002176f:	add    BYTE PTR [rax],dh
   140021771:	rol    DWORD PTR [rax],cl
   140021773:	rex add DWORD PTR [rax],eax
	...
   14002177e:	add    BYTE PTR [rax],al
   140021780:	lock cwde 
   140021782:	add    al,BYTE PTR [rax+0x1]
   140021785:	add    BYTE PTR [rax],al
   140021787:	add    BYTE PTR [rax-0x18],al
   14002178a:	add    BYTE PTR [rax+0x1],al
   14002178d:	add    BYTE PTR [rax],al
   14002178f:	add    al,dh
   140021791:	mov    edx,0x14001
   140021796:	add    BYTE PTR [rax],al
   140021798:	loopne 0x140021754
   14002179a:	add    DWORD PTR [rax+0x1],eax
   14002179d:	add    BYTE PTR [rax],al
   14002179f:	add    al,ah
   1400217a1:	mov    edx,0x14001
   1400217a6:	add    BYTE PTR [rax],al
   1400217a8:	loopne 0x140021764
   1400217aa:	add    DWORD PTR [rax+0x1],eax
   1400217ad:	add    BYTE PTR [rax],al
   1400217af:	add    al,ah
   1400217b1:	retf   0x4001
   1400217b4:	add    DWORD PTR [rax],eax
   1400217b6:	add    BYTE PTR [rax],al
   1400217b8:	push   rax
   1400217b9:	iret   
   1400217ba:	add    BYTE PTR [rax+0x1],al
   1400217bd:	add    BYTE PTR [rax],al
   1400217bf:	add    BYTE PTR [rax],dh
   1400217c1:	rol    DWORD PTR [rax],cl
   1400217c3:	rex add DWORD PTR [rax],eax
	...
   1400217ce:	add    BYTE PTR [rax],al
   1400217d0:	sbb    BYTE PTR [rcx+0x14002],0x0
   1400217d7:	add    BYTE PTR [rax-0x18],al
   1400217da:	add    BYTE PTR [rax+0x1],al
   1400217dd:	add    BYTE PTR [rax],al
   1400217df:	add    al,dh
   1400217e1:	mov    edx,0x14001
   1400217e6:	add    BYTE PTR [rax],al
   1400217e8:	loopne 0x1400217a4
   1400217ea:	add    DWORD PTR [rax+0x1],eax
   1400217ed:	add    BYTE PTR [rax],al
   1400217ef:	add    al,ah
   1400217f1:	mov    edx,0x14001
   1400217f6:	add    BYTE PTR [rax],al
   1400217f8:	loopne 0x1400217b4
   1400217fa:	add    DWORD PTR [rax+0x1],eax
   1400217fd:	add    BYTE PTR [rax],al
   1400217ff:	add    BYTE PTR [rax-0x35],ah
   140021802:	add    DWORD PTR [rax+0x1],eax
   140021805:	add    BYTE PTR [rax],al
   140021807:	add    BYTE PTR [rax-0x31],dl
   14002180a:	add    BYTE PTR [rax+0x1],al
   14002180d:	add    BYTE PTR [rax],al
   14002180f:	add    BYTE PTR [rax],dh
   140021811:	rol    DWORD PTR [rax],cl
   140021813:	rex add DWORD PTR [rax],eax
	...
   14002181e:	add    BYTE PTR [rax],al
   140021820:	adc    BYTE PTR [rdx+0x14002],bl
   140021826:	add    BYTE PTR [rax],al
   140021828:	rex call 0x14003582e
   14002182e:	add    BYTE PTR [rax],al
   140021830:	lock mov edx,0x14001
   140021836:	add    BYTE PTR [rax],al
   140021838:	lock mov edx,0x14001
   14002183e:	add    BYTE PTR [rax],al
   140021840:	loopne 0x1400217fc
   140021842:	add    DWORD PTR [rax+0x1],eax
   140021845:	add    BYTE PTR [rax],al
   140021847:	add    al,ah
   140021849:	mov    edx,0x14001
   14002184e:	add    BYTE PTR [rax],al
   140021850:	loopne 0x14002181d
   140021852:	add    DWORD PTR [rax+0x1],eax
   140021855:	add    BYTE PTR [rax],al
   140021857:	add    al,dl
   140021859:	rol    BYTE PTR [rax],cl
   14002185b:	rex add DWORD PTR [rax],eax
   14002185e:	add    BYTE PTR [rax],al
   140021860:	sbb    ah,0x0
   140021863:	rex add DWORD PTR [rax],eax
	...
   14002186e:	add    BYTE PTR [rax],al
   140021870:	movabs al,ds:0x400000000140029a
   140021879:	call   0x14003587e
   14002187e:	add    BYTE PTR [rax],al
   140021880:	lock mov edx,0x14001
   140021886:	add    BYTE PTR [rax],al
   140021888:	loopne 0x140021844
   14002188a:	add    DWORD PTR [rax+0x1],eax
   14002188d:	add    BYTE PTR [rax],al
   14002188f:	add    al,ah
   140021891:	mov    edx,0x14001
   140021896:	add    BYTE PTR [rax],al
   140021898:	loopne 0x140021854
   14002189a:	add    DWORD PTR [rax+0x1],eax
   14002189d:	add    BYTE PTR [rax],al
   14002189f:	add    BYTE PTR [rax+0x14001cc],dl
   1400218a5:	add    BYTE PTR [rax],al
   1400218a7:	add    al,dl
   1400218a9:	rol    BYTE PTR [rax],cl
   1400218ab:	rex add DWORD PTR [rax],eax
   1400218ae:	add    BYTE PTR [rax],al
   1400218b0:	sbb    ah,0x0
   1400218b3:	rex add DWORD PTR [rax],eax
	...
   1400218be:	add    BYTE PTR [rax],al
   1400218c0:	xor    BYTE PTR [rbx+0x14002],bl
   1400218c6:	add    BYTE PTR [rax],al
   1400218c8:	rex call 0x1400358ce
   1400218ce:	add    BYTE PTR [rax],al
   1400218d0:	lock mov edx,0x14001
   1400218d6:	add    BYTE PTR [rax],al
   1400218d8:	loopne 0x140021894
   1400218da:	add    DWORD PTR [rax+0x1],eax
   1400218dd:	add    BYTE PTR [rax],al
   1400218df:	add    al,ah
   1400218e1:	mov    edx,0x14001
   1400218e6:	add    BYTE PTR [rax],al
   1400218e8:	loopne 0x1400218a4
   1400218ea:	add    DWORD PTR [rax+0x1],eax
   1400218ed:	add    BYTE PTR [rax],al
   1400218ef:	add    BYTE PTR [rax-0x33],dh
   1400218f2:	add    DWORD PTR [rax+0x1],eax
   1400218f5:	add    BYTE PTR [rax],al
   1400218f7:	add    al,dl
   1400218f9:	rol    BYTE PTR [rax],cl
   1400218fb:	rex add DWORD PTR [rax],eax
   1400218fe:	add    BYTE PTR [rax],al
   140021900:	nop
   140021901:	rol    DWORD PTR [rax],cl
   140021903:	rex add DWORD PTR [rax],eax
	...
   14002190e:	add    BYTE PTR [rax],al
   140021910:	rcr    BYTE PTR [rbx+0x14002],0x0
   140021917:	add    BYTE PTR [rax-0x18],al
   14002191a:	add    BYTE PTR [rax+0x1],al
   14002191d:	add    BYTE PTR [rax],al
   14002191f:	add    al,ah
   140021921:	mov    edx,0x14001
   140021926:	add    BYTE PTR [rax],al
   140021928:	loopne 0x1400218e4
   14002192a:	add    DWORD PTR [rax+0x1],eax
   14002192d:	add    BYTE PTR [rax],al
   14002192f:	add    al,dh
   140021931:	mov    edx,0x14001
   140021936:	add    BYTE PTR [rax],al
   140021938:	loopne 0x1400218f4
   14002193a:	add    DWORD PTR [rax+0x1],eax
   14002193d:	add    BYTE PTR [rax],al
   14002193f:	add    BYTE PTR [rax],ah
   140021941:	(bad)  
   140021942:	add    DWORD PTR [rax+0x1],eax
   140021945:	add    BYTE PTR [rax],al
   140021947:	add    BYTE PTR [rax-0x31],dl
   14002194a:	add    BYTE PTR [rax+0x1],al
   14002194d:	add    BYTE PTR [rax],al
   14002194f:	add    BYTE PTR [rax-0x24],ah
   140021952:	add    BYTE PTR [rax+0x1],al
	...
   14002195d:	add    BYTE PTR [rax],al
   14002195f:	add    BYTE PTR [rax-0x64],dl
   140021962:	add    al,BYTE PTR [rax+0x1]
   140021965:	add    BYTE PTR [rax],al
   140021967:	add    BYTE PTR [rax-0x18],al
   14002196a:	add    BYTE PTR [rax+0x1],al
   14002196d:	add    BYTE PTR [rax],al
   14002196f:	add    al,ah
   140021971:	mov    edx,0x14001
   140021976:	add    BYTE PTR [rax],al
   140021978:	loopne 0x140021934
   14002197a:	add    DWORD PTR [rax+0x1],eax
   14002197d:	add    BYTE PTR [rax],al
   14002197f:	add    al,ah
   140021981:	mov    edx,0x14001
   140021986:	add    BYTE PTR [rax],al
   140021988:	loopne 0x140021944
   14002198a:	add    DWORD PTR [rax+0x1],eax
   14002198d:	add    BYTE PTR [rax],al
   14002198f:	add    BYTE PTR [rax+0x14001ce],ah
   140021995:	add    BYTE PTR [rax],al
   140021997:	add    al,dl
   140021999:	rol    BYTE PTR [rax],cl
   14002199b:	rex add DWORD PTR [rax],eax
   14002199e:	add    BYTE PTR [rax],al
   1400219a0:	rex rol BYTE PTR [rax],1
   1400219a3:	rex add DWORD PTR [rax],eax
	...
   1400219ae:	add    BYTE PTR [rax],al
   1400219b0:	fcomp  DWORD PTR [rdx+rax*1+0x140]
   1400219b7:	add    BYTE PTR [rax-0x18],al
   1400219ba:	add    BYTE PTR [rax+0x1],al
   1400219bd:	add    BYTE PTR [rax],al
   1400219bf:	add    al,ah
   1400219c1:	mov    edx,0x14001
   1400219c6:	add    BYTE PTR [rax],al
   1400219c8:	loopne 0x140021984
   1400219ca:	add    DWORD PTR [rax+0x1],eax
   1400219cd:	add    BYTE PTR [rax],al
   1400219cf:	add    al,dh
   1400219d1:	mov    edx,0x14001
   1400219d6:	add    BYTE PTR [rax],al
   1400219d8:	loopne 0x140021994
   1400219da:	add    DWORD PTR [rax+0x1],eax
   1400219dd:	add    BYTE PTR [rax],al
   1400219df:	add    BYTE PTR [rax-0x31],al
   1400219e2:	add    DWORD PTR [rax+0x1],eax
   1400219e5:	add    BYTE PTR [rax],al
   1400219e7:	add    BYTE PTR [rax-0x31],dl
   1400219ea:	add    BYTE PTR [rax+0x1],al
   1400219ed:	add    BYTE PTR [rax],al
   1400219ef:	add    BYTE PTR [rax-0x24],ah
   1400219f2:	add    BYTE PTR [rax+0x1],al
	...
   1400219fd:	add    BYTE PTR [rax],al
   1400219ff:	add    BYTE PTR [rax-0x63],ch
   140021a02:	add    al,BYTE PTR [rax+0x1]
   140021a05:	add    BYTE PTR [rax],al
   140021a07:	add    BYTE PTR [rax-0x18],al
   140021a0a:	add    BYTE PTR [rax+0x1],al
   140021a0d:	add    BYTE PTR [rax],al
   140021a0f:	add    al,ah
   140021a11:	mov    edx,0x14001
   140021a16:	add    BYTE PTR [rax],al
   140021a18:	loopne 0x1400219d4
   140021a1a:	add    DWORD PTR [rax+0x1],eax
   140021a1d:	add    BYTE PTR [rax],al
   140021a1f:	add    al,ah
   140021a21:	mov    edx,0x14001
   140021a26:	add    BYTE PTR [rax],al
   140021a28:	loopne 0x1400219e4
   140021a2a:	add    DWORD PTR [rax+0x1],eax
   140021a2d:	add    BYTE PTR [rax],al
   140021a2f:	add    BYTE PTR [rax-0x30],ah
   140021a32:	add    DWORD PTR [rax+0x1],eax
   140021a35:	add    BYTE PTR [rax],al
   140021a37:	add    BYTE PTR [rax],al
   140021a39:	(bad)  
   140021a3a:	add    BYTE PTR [rax+0x1],al
   140021a3d:	add    BYTE PTR [rax],al
   140021a3f:	add    BYTE PTR [rax],ah
   140021a41:	(bad)  
   140021a42:	add    BYTE PTR [rax+0x1],al
	...
   140021a4d:	add    BYTE PTR [rax],al
   140021a4f:	add    al,dh
   140021a51:	popf   
   140021a52:	add    al,BYTE PTR [rax+0x1]
   140021a55:	add    BYTE PTR [rax],al
   140021a57:	add    BYTE PTR [rax-0x18],al
   140021a5a:	add    BYTE PTR [rax+0x1],al
   140021a5d:	add    BYTE PTR [rax],al
   140021a5f:	add    al,ah
   140021a61:	mov    edx,0x14001
   140021a66:	add    BYTE PTR [rax],al
   140021a68:	loopne 0x140021a24
   140021a6a:	add    DWORD PTR [rax+0x1],eax
   140021a6d:	add    BYTE PTR [rax],al
   140021a6f:	add    al,ah
   140021a71:	mov    edx,0x14001
   140021a76:	add    BYTE PTR [rax],al
   140021a78:	loopne 0x140021a34
   140021a7a:	add    DWORD PTR [rax+0x1],eax
   140021a7d:	add    BYTE PTR [rax],al
   140021a7f:	add    al,al
   140021a81:	iret   
   140021a82:	add    DWORD PTR [rax+0x1],eax
   140021a85:	add    BYTE PTR [rax],al
   140021a87:	add    al,dl
   140021a89:	rol    BYTE PTR [rax],cl
   140021a8b:	rex add DWORD PTR [rax],eax
   140021a8e:	add    BYTE PTR [rax],al
   140021a90:	lock rol BYTE PTR [rax],cl
   140021a93:	rex add DWORD PTR [rax],eax
	...
   140021a9e:	add    BYTE PTR [rax],al
   140021aa0:	js     0x140021a40
   140021aa2:	add    al,BYTE PTR [rax+0x1]
   140021aa5:	add    BYTE PTR [rax],al
   140021aa7:	add    BYTE PTR [rax-0x18],al
   140021aaa:	add    BYTE PTR [rax+0x1],al
   140021aad:	add    BYTE PTR [rax],al
   140021aaf:	add    al,ah
   140021ab1:	mov    edx,0x14001
   140021ab6:	add    BYTE PTR [rax],al
   140021ab8:	loopne 0x140021a74
   140021aba:	add    DWORD PTR [rax+0x1],eax
   140021abd:	add    BYTE PTR [rax],al
   140021abf:	add    al,dh
   140021ac1:	mov    edx,0x14001
   140021ac6:	add    BYTE PTR [rax],al
   140021ac8:	loopne 0x140021a84
   140021aca:	add    DWORD PTR [rax+0x1],eax
   140021acd:	add    BYTE PTR [rax],al
   140021acf:	add    al,ah
   140021ad1:	rol    BYTE PTR [rcx],1
   140021ad3:	rex add DWORD PTR [rax],eax
   140021ad6:	add    BYTE PTR [rax],al
   140021ad8:	ror    ch,1
   140021ada:	add    BYTE PTR [rax+0x1],al
   140021add:	add    BYTE PTR [rax],al
   140021adf:	add    al,dl
   140021ae1:	int    0x0
   140021ae3:	rex add DWORD PTR [rax],eax
	...
   140021aee:	add    BYTE PTR [rax],al
   140021af0:	or     BYTE PTR [rdi+0x14002],bl
   140021af6:	add    BYTE PTR [rax],al
   140021af8:	rex call 0x140035afe
   140021afe:	add    BYTE PTR [rax],al
   140021b00:	loopne 0x140021abc
   140021b02:	add    DWORD PTR [rax+0x1],eax
   140021b05:	add    BYTE PTR [rax],al
   140021b07:	add    al,ah
   140021b09:	mov    edx,0x14001
   140021b0e:	add    BYTE PTR [rax],al
   140021b10:	lock mov edx,0x14001
   140021b16:	add    BYTE PTR [rax],al
   140021b18:	loopne 0x140021ad4
   140021b1a:	add    DWORD PTR [rax+0x1],eax
   140021b1d:	add    BYTE PTR [rax],al
   140021b1f:	add    BYTE PTR [rax],ah
   140021b21:	rol    DWORD PTR [rcx],1
   140021b23:	rex add DWORD PTR [rax],eax
   140021b26:	add    BYTE PTR [rax],al
   140021b28:	rcl    dl,1
   140021b2a:	add    BYTE PTR [rax+0x1],al
   140021b2d:	add    BYTE PTR [rax],al
   140021b2f:	add    BYTE PTR [rax-0x31],dl
   140021b32:	add    BYTE PTR [rax+0x1],al
	...
   140021b3d:	add    BYTE PTR [rax],al
   140021b3f:	add    BYTE PTR [rax+0x140029f],bl
   140021b45:	add    BYTE PTR [rax],al
   140021b47:	add    BYTE PTR [rax-0x18],al
   140021b4a:	add    BYTE PTR [rax+0x1],al
   140021b4d:	add    BYTE PTR [rax],al
   140021b4f:	add    al,ah
   140021b51:	mov    edx,0x14001
   140021b56:	add    BYTE PTR [rax],al
   140021b58:	loopne 0x140021b14
   140021b5a:	add    DWORD PTR [rax+0x1],eax
   140021b5d:	add    BYTE PTR [rax],al
   140021b5f:	add    al,dh
   140021b61:	mov    edx,0x14001
   140021b66:	add    BYTE PTR [rax],al
   140021b68:	loopne 0x140021b24
   140021b6a:	add    DWORD PTR [rax+0x1],eax
   140021b6d:	add    BYTE PTR [rax],al
   140021b6f:	add    BYTE PTR [rax+0x14001d1],ah
   140021b75:	add    BYTE PTR [rax],al
   140021b77:	add    BYTE PTR [rax-0x24],ah
   140021b7a:	add    BYTE PTR [rax+0x1],al
   140021b7d:	add    BYTE PTR [rax],al
   140021b7f:	add    BYTE PTR [rax],al
   140021b81:	rol    BYTE PTR [rax],1
   140021b83:	rex add DWORD PTR [rax],eax
	...
   140021b8e:	add    BYTE PTR [rax],al
   140021b90:	sub    BYTE PTR [rax+0x14002],ah
   140021b96:	add    BYTE PTR [rax],al
   140021b98:	rex call 0x140035b9e
   140021b9e:	add    BYTE PTR [rax],al
   140021ba0:	loopne 0x140021b5c
   140021ba2:	add    DWORD PTR [rax+0x1],eax
   140021ba5:	add    BYTE PTR [rax],al
   140021ba7:	add    al,ah
   140021ba9:	mov    edx,0x14001
   140021bae:	add    BYTE PTR [rax],al
   140021bb0:	lock mov edx,0x14001
   140021bb6:	add    BYTE PTR [rax],al
   140021bb8:	loopne 0x140021b74
   140021bba:	add    DWORD PTR [rax+0x1],eax
   140021bbd:	add    BYTE PTR [rax],al
   140021bbf:	add    BYTE PTR [rax+0x14001d2],al
   140021bc5:	add    BYTE PTR [rax],al
   140021bc7:	add    al,ah
   140021bc9:	(bad)  
   140021bca:	add    BYTE PTR [rax+0x1],al
   140021bcd:	add    BYTE PTR [rax],al
   140021bcf:	add    BYTE PTR [rax-0x2b],dh
   140021bd2:	add    BYTE PTR [rax+0x1],al
	...
   140021bdd:	add    BYTE PTR [rax],al
   140021bdf:	add    BYTE PTR [rax+0x14002a0],bh
   140021be5:	add    BYTE PTR [rax],al
   140021be7:	add    BYTE PTR [rax-0x18],al
   140021bea:	add    BYTE PTR [rax+0x1],al
   140021bed:	add    BYTE PTR [rax],al
   140021bef:	add    al,ah
   140021bf1:	mov    edx,0x14001
   140021bf6:	add    BYTE PTR [rax],al
   140021bf8:	loopne 0x140021bb4
   140021bfa:	add    DWORD PTR [rax+0x1],eax
   140021bfd:	add    BYTE PTR [rax],al
   140021bff:	add    al,dh
   140021c01:	mov    edx,0x14001
   140021c06:	add    BYTE PTR [rax],al
   140021c08:	loopne 0x140021bc4
   140021c0a:	add    DWORD PTR [rax+0x1],eax
   140021c0d:	add    BYTE PTR [rax],al
   140021c0f:	add    BYTE PTR [rax],dh
   140021c11:	rol    DWORD PTR [rcx],cl
   140021c13:	rex add DWORD PTR [rax],eax
   140021c16:	add    BYTE PTR [rax],al
   140021c18:	loopne 0x140021bef
   140021c1a:	add    BYTE PTR [rax+0x1],al
   140021c1d:	add    BYTE PTR [rax],al
   140021c1f:	add    BYTE PTR [rax+0x14000d3],dl
	...
   140021c2d:	add    BYTE PTR [rax],al
   140021c2f:	add    BYTE PTR [rax-0x5f],cl
   140021c32:	add    al,BYTE PTR [rax+0x1]
   140021c35:	add    BYTE PTR [rax],al
   140021c37:	add    BYTE PTR [rax-0x18],al
   140021c3a:	add    BYTE PTR [rax+0x1],al
   140021c3d:	add    BYTE PTR [rax],al
   140021c3f:	add    al,ah
   140021c41:	mov    edx,0x14001
   140021c46:	add    BYTE PTR [rax],al
   140021c48:	loopne 0x140021c04
   140021c4a:	add    DWORD PTR [rax+0x1],eax
   140021c4d:	add    BYTE PTR [rax],al
   140021c4f:	add    al,dh
   140021c51:	mov    edx,0x14001
   140021c56:	add    BYTE PTR [rax],al
   140021c58:	loopne 0x140021c14
   140021c5a:	add    DWORD PTR [rax+0x1],eax
   140021c5d:	add    BYTE PTR [rax],al
   140021c5f:	add    al,ah
   140021c61:	rol    DWORD PTR [rcx],cl
   140021c63:	rex add DWORD PTR [rax],eax
   140021c66:	add    BYTE PTR [rax],al
   140021c68:	add    dl,dl
   140021c6a:	add    BYTE PTR [rax+0x1],al
   140021c6d:	add    BYTE PTR [rax],al
   140021c6f:	add    BYTE PTR [rax-0x2a],dh
   140021c72:	add    BYTE PTR [rax+0x1],al
	...
   140021c7d:	add    BYTE PTR [rax],al
   140021c7f:	add    al,bl
   140021c81:	movabs eax,ds:0xe840000000014002
   140021c8a:	add    BYTE PTR [rax+0x1],al
   140021c8d:	add    BYTE PTR [rax],al
   140021c8f:	add    al,ah
   140021c91:	mov    edx,0x14001
   140021c96:	add    BYTE PTR [rax],al
   140021c98:	loopne 0x140021c54
   140021c9a:	add    DWORD PTR [rax+0x1],eax
   140021c9d:	add    BYTE PTR [rax],al
   140021c9f:	add    al,dh
   140021ca1:	mov    edx,0x14001
   140021ca6:	add    BYTE PTR [rax],al
   140021ca8:	loopne 0x140021c64
   140021caa:	add    DWORD PTR [rax+0x1],eax
   140021cad:	add    BYTE PTR [rax],al
   140021caf:	add    al,dh
   140021cb1:	(bad)  
   140021cb2:	add    DWORD PTR [rax+0x1],eax
   140021cb5:	add    BYTE PTR [rax],al
   140021cb7:	add    BYTE PTR [rax],al
   140021cb9:	rol    BYTE PTR [rax],cl
   140021cbb:	rex add DWORD PTR [rax],eax
   140021cbe:	add    BYTE PTR [rax],al
   140021cc0:	jo     0x140021c98
   140021cc2:	add    BYTE PTR [rax+0x1],al
	...
   140021ccd:	add    BYTE PTR [rax],al
   140021ccf:	add    BYTE PTR [rax-0x5e],ch
   140021cd2:	add    al,BYTE PTR [rax+0x1]
   140021cd5:	add    BYTE PTR [rax],al
   140021cd7:	add    BYTE PTR [rax-0x18],al
   140021cda:	add    BYTE PTR [rax+0x1],al
   140021cdd:	add    BYTE PTR [rax],al
   140021cdf:	add    al,ah
   140021ce1:	mov    edx,0x14001
   140021ce6:	add    BYTE PTR [rax],al
   140021ce8:	loopne 0x140021ca4
   140021cea:	add    DWORD PTR [rax+0x1],eax
   140021ced:	add    BYTE PTR [rax],al
   140021cef:	add    al,dh
   140021cf1:	mov    edx,0x14001
   140021cf6:	add    BYTE PTR [rax],al
   140021cf8:	loopne 0x140021cb4
   140021cfa:	add    DWORD PTR [rax+0x1],eax
   140021cfd:	add    BYTE PTR [rax],al
   140021cff:	add    BYTE PTR [rax],al
   140021d01:	(bad)  
   140021d02:	add    DWORD PTR [rax+0x1],eax
   140021d05:	add    BYTE PTR [rax],al
   140021d07:	add    BYTE PTR [rax-0x24],ah
   140021d0a:	add    BYTE PTR [rax+0x1],al
   140021d0d:	add    BYTE PTR [rax],al
   140021d0f:	add    BYTE PTR [rax+0x14000dc],al
	...
   140021d1d:	add    BYTE PTR [rax],al
   140021d1f:	add    al,bh
   140021d21:	movabs ds:0xe840000000014002,al
   140021d2a:	add    BYTE PTR [rax+0x1],al
   140021d2d:	add    BYTE PTR [rax],al
   140021d2f:	add    al,ah
   140021d31:	mov    edx,0x14001
   140021d36:	add    BYTE PTR [rax],al
   140021d38:	loopne 0x140021cf4
   140021d3a:	add    DWORD PTR [rax+0x1],eax
   140021d3d:	add    BYTE PTR [rax],al
   140021d3f:	add    al,dh
   140021d41:	mov    edx,0x14001
   140021d46:	add    BYTE PTR [rax],al
   140021d48:	loopne 0x140021d04
   140021d4a:	add    DWORD PTR [rax+0x1],eax
   140021d4d:	add    BYTE PTR [rax],al
   140021d4f:	add    al,ah
   140021d51:	(bad)  
   140021d52:	add    DWORD PTR [rax+0x1],eax
   140021d55:	add    BYTE PTR [rax],al
   140021d57:	add    BYTE PTR [rax-0x24],ah
   140021d5a:	add    BYTE PTR [rax+0x1],al
   140021d5d:	add    BYTE PTR [rax],al
   140021d5f:	add    BYTE PTR [rax+0x14000dc],al
	...
   140021d6d:	add    BYTE PTR [rax],al
   140021d6f:	add    BYTE PTR [rax+0x14002a3],cl
   140021d75:	add    BYTE PTR [rax],al
   140021d77:	add    BYTE PTR [rax-0x18],al
   140021d7a:	add    BYTE PTR [rax+0x1],al
   140021d7d:	add    BYTE PTR [rax],al
   140021d7f:	add    al,ah
   140021d81:	mov    edx,0x14001
   140021d86:	add    BYTE PTR [rax],al
   140021d88:	loopne 0x140021d44
   140021d8a:	add    DWORD PTR [rax+0x1],eax
   140021d8d:	add    BYTE PTR [rax],al
   140021d8f:	add    al,dh
   140021d91:	mov    edx,0x14001
   140021d96:	add    BYTE PTR [rax],al
   140021d98:	loopne 0x140021d54
   140021d9a:	add    DWORD PTR [rax+0x1],eax
   140021d9d:	add    BYTE PTR [rax],al
   140021d9f:	add    al,al
   140021da1:	xlat   BYTE PTR ds:[rbx]
   140021da2:	add    DWORD PTR [rax+0x1],eax
   140021da5:	add    BYTE PTR [rax],al
   140021da7:	add    al,ah
   140021da9:	(bad)  
   140021daa:	add    BYTE PTR [rax+0x1],al
   140021dad:	add    BYTE PTR [rax],al
   140021daf:	add    BYTE PTR [rax+0x14000d8],dl
	...
   140021dbd:	add    BYTE PTR [rax],al
   140021dbf:	add    BYTE PTR [rax],bl
   140021dc1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140021dc2:	add    al,BYTE PTR [rax+0x1]
   140021dc5:	add    BYTE PTR [rax],al
   140021dc7:	add    BYTE PTR [rax-0x18],al
   140021dca:	add    BYTE PTR [rax+0x1],al
   140021dcd:	add    BYTE PTR [rax],al
   140021dcf:	add    al,ah
   140021dd1:	mov    edx,0x14001
   140021dd6:	add    BYTE PTR [rax],al
   140021dd8:	loopne 0x140021d94
   140021dda:	add    DWORD PTR [rax+0x1],eax
   140021ddd:	add    BYTE PTR [rax],al
   140021ddf:	add    al,dh
   140021de1:	mov    edx,0x14001
   140021de6:	add    BYTE PTR [rax],al
   140021de8:	loopne 0x140021da4
   140021dea:	add    DWORD PTR [rax+0x1],eax
   140021ded:	add    BYTE PTR [rax],al
   140021def:	add    BYTE PTR [rax],al
   140021df1:	fadd   DWORD PTR [rcx]
   140021df3:	rex add DWORD PTR [rax],eax
   140021df6:	add    BYTE PTR [rax],al
   140021df8:	loopne 0x140021dcf
   140021dfa:	add    BYTE PTR [rax+0x1],al
   140021dfd:	add    BYTE PTR [rax],al
   140021dff:	add    BYTE PTR [rax+0x14000d8],dl
	...
   140021e0d:	add    BYTE PTR [rax],al
   140021e0f:	add    BYTE PTR [rax+0x14002a4],ch
   140021e15:	add    BYTE PTR [rax],al
   140021e17:	add    BYTE PTR [rax-0x18],al
   140021e1a:	add    BYTE PTR [rax+0x1],al
   140021e1d:	add    BYTE PTR [rax],al
   140021e1f:	add    al,ah
   140021e21:	mov    edx,0x14001
   140021e26:	add    BYTE PTR [rax],al
   140021e28:	loopne 0x140021de4
   140021e2a:	add    DWORD PTR [rax+0x1],eax
   140021e2d:	add    BYTE PTR [rax],al
   140021e2f:	add    al,dh
   140021e31:	mov    edx,0x14001
   140021e36:	add    BYTE PTR [rax],al
   140021e38:	loopne 0x140021df4
   140021e3a:	add    DWORD PTR [rax+0x1],eax
   140021e3d:	add    BYTE PTR [rax],al
   140021e3f:	add    BYTE PTR [rax-0x28],al
   140021e42:	add    DWORD PTR [rax+0x1],eax
   140021e45:	add    BYTE PTR [rax],al
   140021e47:	add    BYTE PTR [rax-0x31],dl
   140021e4a:	add    BYTE PTR [rax+0x1],al
   140021e4d:	add    BYTE PTR [rax],al
   140021e4f:	add    BYTE PTR [rax-0x24],ah
   140021e52:	add    BYTE PTR [rax+0x1],al
	...
   140021e5d:	add    BYTE PTR [rax],al
   140021e5f:	add    BYTE PTR [rax],bh
   140021e61:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140021e62:	add    al,BYTE PTR [rax+0x1]
   140021e65:	add    BYTE PTR [rax],al
   140021e67:	add    BYTE PTR [rax-0x18],al
   140021e6a:	add    BYTE PTR [rax+0x1],al
   140021e6d:	add    BYTE PTR [rax],al
   140021e6f:	add    al,ah
   140021e71:	mov    edx,0x14001
   140021e76:	add    BYTE PTR [rax],al
   140021e78:	loopne 0x140021e34
   140021e7a:	add    DWORD PTR [rax+0x1],eax
   140021e7d:	add    BYTE PTR [rax],al
   140021e7f:	add    al,dh
   140021e81:	mov    edx,0x14001
   140021e86:	add    BYTE PTR [rax],al
   140021e88:	loopne 0x140021e44
   140021e8a:	add    DWORD PTR [rax+0x1],eax
   140021e8d:	add    BYTE PTR [rax],al
   140021e8f:	add    al,al
   140021e91:	fadd   DWORD PTR [rcx]
   140021e93:	rex add DWORD PTR [rax],eax
   140021e96:	add    BYTE PTR [rax],al
   140021e98:	loopne 0x140021e6f
   140021e9a:	add    BYTE PTR [rax+0x1],al
   140021e9d:	add    BYTE PTR [rax],al
   140021e9f:	add    BYTE PTR [rax+0x14000d3],dl
	...
   140021ead:	add    BYTE PTR [rax],al
   140021eaf:	add    al,cl
   140021eb1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140021eb2:	add    al,BYTE PTR [rax+0x1]
   140021eb5:	add    BYTE PTR [rax],al
   140021eb7:	add    BYTE PTR [rax-0x18],al
   140021eba:	add    BYTE PTR [rax+0x1],al
   140021ebd:	add    BYTE PTR [rax],al
   140021ebf:	add    al,ah
   140021ec1:	mov    edx,0x14001
   140021ec6:	add    BYTE PTR [rax],al
   140021ec8:	loopne 0x140021e84
   140021eca:	add    DWORD PTR [rax+0x1],eax
   140021ecd:	add    BYTE PTR [rax],al
   140021ecf:	add    al,ah
   140021ed1:	mov    edx,0x14001
   140021ed6:	add    BYTE PTR [rax],al
   140021ed8:	loopne 0x140021e94
   140021eda:	add    DWORD PTR [rax+0x1],eax
   140021edd:	add    BYTE PTR [rax],al
   140021edf:	add    BYTE PTR [rax],ah
   140021ee1:	fiadd  DWORD PTR [rcx]
   140021ee3:	rex add DWORD PTR [rax],eax
   140021ee6:	add    BYTE PTR [rax],al
   140021ee8:	(bad)  
   140021ee9:	fadd   QWORD PTR [rax]
   140021eeb:	rex add DWORD PTR [rax],eax
   140021eee:	add    BYTE PTR [rax],al
   140021ef0:	sbb    cl,0x0
   140021ef3:	rex add DWORD PTR [rax],eax
	...
   140021efe:	add    BYTE PTR [rax],al
   140021f00:	push   rax
   140021f01:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140021f02:	add    al,BYTE PTR [rax+0x1]
   140021f05:	add    BYTE PTR [rax],al
   140021f07:	add    BYTE PTR [rax-0x18],al
   140021f0a:	add    BYTE PTR [rax+0x1],al
   140021f0d:	add    BYTE PTR [rax],al
   140021f0f:	add    al,ah
   140021f11:	mov    edx,0x14001
   140021f16:	add    BYTE PTR [rax],al
   140021f18:	loopne 0x140021ed4
   140021f1a:	add    DWORD PTR [rax+0x1],eax
   140021f1d:	add    BYTE PTR [rax],al
   140021f1f:	add    al,dh
   140021f21:	mov    edx,0x14001
   140021f26:	add    BYTE PTR [rax],al
   140021f28:	loopne 0x140021ee4
   140021f2a:	add    DWORD PTR [rax+0x1],eax
   140021f2d:	add    BYTE PTR [rax],al
   140021f2f:	add    BYTE PTR [rax-0x27],dh
   140021f32:	add    DWORD PTR [rax+0x1],eax
   140021f35:	add    BYTE PTR [rax],al
   140021f37:	add    al,ah
   140021f39:	(bad)  
   140021f3a:	add    BYTE PTR [rax+0x1],al
   140021f3d:	add    BYTE PTR [rax],al
   140021f3f:	add    al,dh
   140021f41:	fld    DWORD PTR [rax]
   140021f43:	rex add DWORD PTR [rax],eax
	...
   140021f4e:	add    BYTE PTR [rax],al
   140021f50:	loopne 0x140021ef8
   140021f52:	add    al,BYTE PTR [rax+0x1]
   140021f55:	add    BYTE PTR [rax],al
   140021f57:	add    BYTE PTR [rax-0x18],al
   140021f5a:	add    BYTE PTR [rax+0x1],al
   140021f5d:	add    BYTE PTR [rax],al
   140021f5f:	add    al,ah
   140021f61:	mov    edx,0x14001
   140021f66:	add    BYTE PTR [rax],al
   140021f68:	loopne 0x140021f24
   140021f6a:	add    DWORD PTR [rax+0x1],eax
   140021f6d:	add    BYTE PTR [rax],al
   140021f6f:	add    al,ah
   140021f71:	mov    edx,0x14001
   140021f76:	add    BYTE PTR [rax],al
   140021f78:	loopne 0x140021f34
   140021f7a:	add    DWORD PTR [rax+0x1],eax
   140021f7d:	add    BYTE PTR [rax],al
   140021f7f:	add    BYTE PTR [rax+0x14001db],ah
   140021f85:	add    BYTE PTR [rax],al
   140021f87:	add    al,ah
   140021f89:	(bad)  
   140021f8a:	add    BYTE PTR [rax+0x1],al
   140021f8d:	add    BYTE PTR [rax],al
   140021f8f:	add    BYTE PTR [rax-0x26],ah
   140021f92:	add    BYTE PTR [rax+0x1],al
	...
   140021f9d:	add    BYTE PTR [rax],al
   140021f9f:	add    BYTE PTR [rax-0x59],ch
   140021fa2:	add    al,BYTE PTR [rax+0x1]
   140021fa5:	add    BYTE PTR [rax],al
   140021fa7:	add    BYTE PTR [rax-0x18],al
   140021faa:	add    BYTE PTR [rax+0x1],al
   140021fad:	add    BYTE PTR [rax],al
   140021faf:	add    al,ah
   140021fb1:	mov    edx,0x14001
   140021fb6:	add    BYTE PTR [rax],al
   140021fb8:	loopne 0x140021f74
   140021fba:	add    DWORD PTR [rax+0x1],eax
   140021fbd:	add    BYTE PTR [rax],al
   140021fbf:	add    al,ah
   140021fc1:	mov    edx,0x14001
   140021fc6:	add    BYTE PTR [rax],al
   140021fc8:	loopne 0x140021f84
   140021fca:	add    DWORD PTR [rax+0x1],eax
   140021fcd:	add    BYTE PTR [rax],al
   140021fcf:	add    BYTE PTR [rax],al
   140021fd1:	fild   DWORD PTR [rcx]
   140021fd3:	rex add DWORD PTR [rax],eax
   140021fd6:	add    BYTE PTR [rax],al
   140021fd8:	rcl    dl,1
   140021fda:	add    BYTE PTR [rax+0x1],al
   140021fdd:	add    BYTE PTR [rax],al
   140021fdf:	add    BYTE PTR [rax-0x30],al
   140021fe2:	add    BYTE PTR [rax+0x1],al
	...
   140021fed:	add    BYTE PTR [rax],al
   140021fef:	add    al,dh
   140021ff1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140021ff2:	add    al,BYTE PTR [rax+0x1]
   140021ff5:	add    BYTE PTR [rax],al
   140021ff7:	add    BYTE PTR [rax-0x18],al
   140021ffa:	add    BYTE PTR [rax+0x1],al
   140021ffd:	add    BYTE PTR [rax],al
   140021fff:	add    al,ah
   140022001:	mov    edx,0x14001
   140022006:	add    BYTE PTR [rax],al
   140022008:	loopne 0x140021fc4
   14002200a:	add    DWORD PTR [rax+0x1],eax
   14002200d:	add    BYTE PTR [rax],al
   14002200f:	add    al,ah
   140022011:	mov    edx,0x14001
   140022016:	add    BYTE PTR [rax],al
   140022018:	loopne 0x140021fd4
   14002201a:	add    DWORD PTR [rax+0x1],eax
   14002201d:	add    BYTE PTR [rax],al
   14002201f:	add    BYTE PTR [rax-0x24],dl
   140022022:	add    DWORD PTR [rax+0x1],eax
   140022025:	add    BYTE PTR [rax],al
   140022027:	add    BYTE PTR [rax-0x31],dl
   14002202a:	add    BYTE PTR [rax+0x1],al
   14002202d:	add    BYTE PTR [rax],al
   14002202f:	add    al,dh
   140022031:	fiadd  DWORD PTR [rax]
   140022033:	rex add DWORD PTR [rax],eax
	...
   14002203e:	add    BYTE PTR [rax],al
   140022040:	js     0x140021fea
   140022042:	add    al,BYTE PTR [rax+0x1]
   140022045:	add    BYTE PTR [rax],al
   140022047:	add    BYTE PTR [rax-0x18],al
   14002204a:	add    BYTE PTR [rax+0x1],al
   14002204d:	add    BYTE PTR [rax],al
   14002204f:	add    al,ah
   140022051:	mov    edx,0x14001
   140022056:	add    BYTE PTR [rax],al
   140022058:	loopne 0x140022014
   14002205a:	add    DWORD PTR [rax+0x1],eax
   14002205d:	add    BYTE PTR [rax],al
   14002205f:	add    al,dh
   140022061:	mov    edx,0x14001
   140022066:	add    BYTE PTR [rax],al
   140022068:	loopne 0x140022024
   14002206a:	add    DWORD PTR [rax+0x1],eax
   14002206d:	add    BYTE PTR [rax],al
   14002206f:	add    al,dl
   140022071:	fadd   QWORD PTR [rcx]
   140022073:	rex add DWORD PTR [rax],eax
   140022076:	add    BYTE PTR [rax],al
   140022078:	(bad)  
   140022079:	fadd   QWORD PTR [rax]
   14002207b:	rex add DWORD PTR [rax],eax
   14002207e:	add    BYTE PTR [rax],al
   140022080:	sbb    ah,0x0
   140022083:	rex add DWORD PTR [rax],eax
	...
   14002208e:	add    BYTE PTR [rax],al
   140022090:	or     BYTE PTR [rcx+0x14002],ch
   140022096:	add    BYTE PTR [rax],al
   140022098:	rex call 0x14003609e
   14002209e:	add    BYTE PTR [rax],al
   1400220a0:	loopne 0x14002205c
   1400220a2:	add    DWORD PTR [rax+0x1],eax
   1400220a5:	add    BYTE PTR [rax],al
   1400220a7:	add    al,ah
   1400220a9:	mov    edx,0x14001
   1400220ae:	add    BYTE PTR [rax],al
   1400220b0:	lock mov edx,0x14001
   1400220b6:	add    BYTE PTR [rax],al
   1400220b8:	loopne 0x140022074
   1400220ba:	add    DWORD PTR [rax+0x1],eax
   1400220bd:	add    BYTE PTR [rax],al
   1400220bf:	add    BYTE PTR [rax-0x23],dl
   1400220c2:	add    DWORD PTR [rax+0x1],eax
   1400220c5:	add    BYTE PTR [rax],al
   1400220c7:	add    BYTE PTR [rax-0x31],dl
   1400220ca:	add    BYTE PTR [rax+0x1],al
   1400220cd:	add    BYTE PTR [rax],al
   1400220cf:	add    BYTE PTR [rax-0x24],ah
   1400220d2:	add    BYTE PTR [rax+0x1],al
	...
   1400220dd:	add    BYTE PTR [rax],al
   1400220df:	add    BYTE PTR [rax+0x14002a9],bl
   1400220e5:	add    BYTE PTR [rax],al
   1400220e7:	add    BYTE PTR [rax-0x18],al
   1400220ea:	add    BYTE PTR [rax+0x1],al
   1400220ed:	add    BYTE PTR [rax],al
   1400220ef:	add    al,ah
   1400220f1:	mov    edx,0x14001
   1400220f6:	add    BYTE PTR [rax],al
   1400220f8:	loopne 0x1400220b4
   1400220fa:	add    DWORD PTR [rax+0x1],eax
   1400220fd:	add    BYTE PTR [rax],al
   1400220ff:	add    al,ah
   140022101:	mov    edx,0x14001
   140022106:	add    BYTE PTR [rax],al
   140022108:	loopne 0x1400220c4
   14002210a:	add    DWORD PTR [rax+0x1],eax
   14002210d:	add    BYTE PTR [rax],al
   14002210f:	add    BYTE PTR [rax+0x14001de],dh
   140022115:	add    BYTE PTR [rax],al
   140022117:	add    BYTE PTR [rax-0x24],ah
   14002211a:	add    BYTE PTR [rax+0x1],al
   14002211d:	add    BYTE PTR [rax],al
   14002211f:	add    BYTE PTR [rax+0x14000dc],al
	...
   14002212d:	add    BYTE PTR [rax],al
   14002212f:	add    BYTE PTR [rax],ah
   140022131:	stos   BYTE PTR es:[rdi],al
   140022132:	add    al,BYTE PTR [rax+0x1]
   140022135:	add    BYTE PTR [rax],al
   140022137:	add    BYTE PTR [rax-0x18],al
   14002213a:	add    BYTE PTR [rax+0x1],al
   14002213d:	add    BYTE PTR [rax],al
   14002213f:	add    al,ah
   140022141:	mov    edx,0x14001
   140022146:	add    BYTE PTR [rax],al
   140022148:	loopne 0x140022104
   14002214a:	add    DWORD PTR [rax+0x1],eax
   14002214d:	add    BYTE PTR [rax],al
   14002214f:	add    al,ah
   140022151:	mov    edx,0x14001
   140022156:	add    BYTE PTR [rax],al
   140022158:	loopne 0x140022114
   14002215a:	add    DWORD PTR [rax+0x1],eax
   14002215d:	add    BYTE PTR [rax],al
   14002215f:	add    BYTE PTR [rax],dh
   140022161:	fild   WORD PTR [rcx]
   140022163:	rex add DWORD PTR [rax],eax
   140022166:	add    BYTE PTR [rax],al
   140022168:	push   rax
   140022169:	iret   
   14002216a:	add    BYTE PTR [rax+0x1],al
   14002216d:	add    BYTE PTR [rax],al
   14002216f:	add    BYTE PTR [rax-0x31],dh
   140022172:	add    BYTE PTR [rax+0x1],al
	...
   14002217d:	add    BYTE PTR [rax],al
   14002217f:	add    BYTE PTR [rax+0x14002aa],ch
   140022185:	add    BYTE PTR [rax],al
   140022187:	add    BYTE PTR [rax-0x18],al
   14002218a:	add    BYTE PTR [rax+0x1],al
   14002218d:	add    BYTE PTR [rax],al
   14002218f:	add    al,ah
   140022191:	mov    edx,0x14001
   140022196:	add    BYTE PTR [rax],al
   140022198:	loopne 0x140022154
   14002219a:	add    DWORD PTR [rax+0x1],eax
   14002219d:	add    BYTE PTR [rax],al
   14002219f:	add    al,dh
   1400221a1:	mov    edx,0x14001
   1400221a6:	add    BYTE PTR [rax],al
   1400221a8:	loopne 0x140022164
   1400221aa:	add    DWORD PTR [rax+0x1],eax
   1400221ad:	add    BYTE PTR [rax],al
   1400221af:	add    al,dl
   1400221b1:	fld    QWORD PTR [rcx]
   1400221b3:	rex add DWORD PTR [rax],eax
   1400221b6:	add    BYTE PTR [rax],al
   1400221b8:	(bad)  
   1400221b9:	fadd   QWORD PTR [rax]
   1400221bb:	rex add DWORD PTR [rax],eax
   1400221be:	add    BYTE PTR [rax],al
   1400221c0:	movabs al,ds:0x14000dc
   1400221c9:	add    BYTE PTR [rax],al
   1400221cb:	add    BYTE PTR [rax],al
   1400221cd:	add    BYTE PTR [rax],al
   1400221cf:	add    BYTE PTR [rax],bh
   1400221d1:	stos   DWORD PTR es:[rdi],eax
   1400221d2:	add    al,BYTE PTR [rax+0x1]
   1400221d5:	add    BYTE PTR [rax],al
   1400221d7:	add    BYTE PTR [rax-0x18],al
   1400221da:	add    BYTE PTR [rax+0x1],al
   1400221dd:	add    BYTE PTR [rax],al
   1400221df:	add    al,dh
   1400221e1:	mov    edx,0x14001
   1400221e6:	add    BYTE PTR [rax],al
   1400221e8:	loopne 0x1400221a4
   1400221ea:	add    DWORD PTR [rax+0x1],eax
   1400221ed:	add    BYTE PTR [rax],al
   1400221ef:	add    al,ah
   1400221f1:	mov    edx,0x14001
   1400221f6:	add    BYTE PTR [rax],al
   1400221f8:	loopne 0x1400221b4
   1400221fa:	add    DWORD PTR [rax+0x1],eax
   1400221fd:	add    BYTE PTR [rax],al
   1400221ff:	add    BYTE PTR [rax-0x20],ah
   140022202:	add    DWORD PTR [rax+0x1],eax
   140022205:	add    BYTE PTR [rax],al
   140022207:	add    BYTE PTR [rax],al
   140022209:	rol    BYTE PTR [rax],cl
   14002220b:	rex add DWORD PTR [rax],eax
   14002220e:	add    BYTE PTR [rax],al
   140022210:	rcr    ch,1
   140022212:	add    BYTE PTR [rax+0x1],al
	...
   14002221d:	add    BYTE PTR [rax],al
   14002221f:	add    al,cl
   140022221:	stos   DWORD PTR es:[rdi],eax
   140022222:	add    al,BYTE PTR [rax+0x1]
   140022225:	add    BYTE PTR [rax],al
   140022227:	add    BYTE PTR [rax-0x18],al
   14002222a:	add    BYTE PTR [rax+0x1],al
   14002222d:	add    BYTE PTR [rax],al
   14002222f:	add    al,dh
   140022231:	mov    edx,0x14001
   140022236:	add    BYTE PTR [rax],al
   140022238:	loopne 0x1400221f4
   14002223a:	add    DWORD PTR [rax+0x1],eax
   14002223d:	add    BYTE PTR [rax],al
   14002223f:	add    al,ah
   140022241:	mov    edx,0x14001
   140022246:	add    BYTE PTR [rax],al
   140022248:	loopne 0x140022204
   14002224a:	add    DWORD PTR [rax+0x1],eax
   14002224d:	add    BYTE PTR [rax],al
   14002224f:	add    BYTE PTR [rax+0x14001df],dh
   140022255:	add    BYTE PTR [rax],al
   140022257:	add    BYTE PTR [rax],al
   140022259:	rol    BYTE PTR [rax],cl
   14002225b:	rex add DWORD PTR [rax],eax
   14002225e:	add    BYTE PTR [rax],al
   140022260:	rcr    ch,1
   140022262:	add    BYTE PTR [rax+0x1],al
	...
   14002226d:	add    BYTE PTR [rax],al
   14002226f:	add    BYTE PTR [rax-0x54],ah
   140022272:	add    al,BYTE PTR [rax+0x1]
   140022275:	add    BYTE PTR [rax],al
   140022277:	add    BYTE PTR [rax-0x18],al
   14002227a:	add    BYTE PTR [rax+0x1],al
   14002227d:	add    BYTE PTR [rax],al
   14002227f:	add    al,ah
   140022281:	mov    edx,0x14001
   140022286:	add    BYTE PTR [rax],al
   140022288:	loopne 0x140022244
   14002228a:	add    DWORD PTR [rax+0x1],eax
   14002228d:	add    BYTE PTR [rax],al
   14002228f:	add    al,ah
   140022291:	mov    edx,0x14001
   140022296:	add    BYTE PTR [rax],al
   140022298:	loopne 0x140022254
   14002229a:	add    DWORD PTR [rax+0x1],eax
   14002229d:	add    BYTE PTR [rax],al
   14002229f:	add    BYTE PTR [rax],dl
   1400222a1:	loope  0x1400222a4
   1400222a3:	rex add DWORD PTR [rax],eax
   1400222a6:	add    BYTE PTR [rax],al
   1400222a8:	sbb    cl,0x0
   1400222ab:	rex add DWORD PTR [rax],eax
   1400222ae:	add    BYTE PTR [rax],al
   1400222b0:	jo     0x140022291
   1400222b2:	add    BYTE PTR [rax+0x1],al
	...
   1400222bd:	add    BYTE PTR [rax],al
   1400222bf:	add    BYTE PTR [rax-0x53],cl
   1400222c2:	add    al,BYTE PTR [rax+0x1]
   1400222c5:	add    BYTE PTR [rax],al
   1400222c7:	add    BYTE PTR [rax-0x18],al
   1400222ca:	add    BYTE PTR [rax+0x1],al
   1400222cd:	add    BYTE PTR [rax],al
   1400222cf:	add    al,ah
   1400222d1:	mov    edx,0x14001
   1400222d6:	add    BYTE PTR [rax],al
   1400222d8:	loopne 0x140022294
   1400222da:	add    DWORD PTR [rax+0x1],eax
   1400222dd:	add    BYTE PTR [rax],al
   1400222df:	add    al,ah
   1400222e1:	mov    edx,0x14001
   1400222e6:	add    BYTE PTR [rax],al
   1400222e8:	loopne 0x1400222a4
   1400222ea:	add    DWORD PTR [rax+0x1],eax
   1400222ed:	add    BYTE PTR [rax],al
   1400222ef:	add    BYTE PTR [rax-0x1e],dl
   1400222f2:	add    DWORD PTR [rax+0x1],eax
   1400222f5:	add    BYTE PTR [rax],al
   1400222f7:	add    al,dl
   1400222f9:	rol    BYTE PTR [rax],cl
   1400222fb:	rex add DWORD PTR [rax],eax
   1400222fe:	add    BYTE PTR [rax],al
   140022300:	rex rol BYTE PTR [rax],1
   140022303:	rex add DWORD PTR [rax],eax
	...
   14002230e:	add    BYTE PTR [rax],al
   140022310:	shr    BYTE PTR [rbp+0x14002],1
   140022316:	add    BYTE PTR [rax],al
   140022318:	rex call 0x14003631e
   14002231e:	add    BYTE PTR [rax],al
   140022320:	loopne 0x1400222dc
   140022322:	add    DWORD PTR [rax+0x1],eax
   140022325:	add    BYTE PTR [rax],al
   140022327:	add    al,ah
   140022329:	mov    edx,0x14001
   14002232e:	add    BYTE PTR [rax],al
   140022330:	loopne 0x1400222ec
   140022332:	add    DWORD PTR [rax+0x1],eax
   140022335:	add    BYTE PTR [rax],al
   140022337:	add    al,ah
   140022339:	mov    edx,0x14001
   14002233e:	add    BYTE PTR [rax],al
   140022340:	push   rax
   140022341:	loope  0x140022344
   140022343:	rex add DWORD PTR [rax],eax
   140022346:	add    BYTE PTR [rax],al
   140022348:	rcr    bh,0x0
   14002234b:	rex add DWORD PTR [rax],eax
   14002234e:	add    BYTE PTR [rax],al
   140022350:	and    al,ah
   140022352:	add    BYTE PTR [rax+0x1],al
	...
   14002235d:	add    BYTE PTR [rax],al
   14002235f:	add    BYTE PTR [rax-0x52],bl
   140022362:	add    al,BYTE PTR [rax+0x1]
   140022365:	add    BYTE PTR [rax],al
   140022367:	add    BYTE PTR [rax-0x18],al
   14002236a:	add    BYTE PTR [rax+0x1],al
   14002236d:	add    BYTE PTR [rax],al
   14002236f:	add    al,ah
   140022371:	mov    edx,0x14001
   140022376:	add    BYTE PTR [rax],al
   140022378:	loopne 0x140022334
   14002237a:	add    DWORD PTR [rax+0x1],eax
   14002237d:	add    BYTE PTR [rax],al
   14002237f:	add    al,ah
   140022381:	mov    edx,0x14001
   140022386:	add    BYTE PTR [rax],al
   140022388:	loopne 0x140022344
   14002238a:	add    DWORD PTR [rax+0x1],eax
   14002238d:	add    BYTE PTR [rax],al
   14002238f:	add    al,dl
   140022391:	loope  0x140022394
   140022393:	rex add DWORD PTR [rax],eax
   140022396:	add    BYTE PTR [rax],al
   140022398:	rcr    bh,0x0
   14002239b:	rex add DWORD PTR [rax],eax
   14002239e:	add    BYTE PTR [rax],al
   1400223a0:	and    al,ah
   1400223a2:	add    BYTE PTR [rax+0x1],al
	...
   1400223ad:	add    BYTE PTR [rax],al
   1400223af:	add    al,ah
   1400223b1:	scas   al,BYTE PTR es:[rdi]
   1400223b2:	add    al,BYTE PTR [rax+0x1]
   1400223b5:	add    BYTE PTR [rax],al
   1400223b7:	add    BYTE PTR [rax-0x18],al
   1400223ba:	add    BYTE PTR [rax+0x1],al
   1400223bd:	add    BYTE PTR [rax],al
   1400223bf:	add    al,ah
   1400223c1:	mov    edx,0x14001
   1400223c6:	add    BYTE PTR [rax],al
   1400223c8:	loopne 0x140022384
   1400223ca:	add    DWORD PTR [rax+0x1],eax
   1400223cd:	add    BYTE PTR [rax],al
   1400223cf:	add    al,ah
   1400223d1:	mov    edx,0x14001
   1400223d6:	add    BYTE PTR [rax],al
   1400223d8:	loopne 0x140022394
   1400223da:	add    DWORD PTR [rax+0x1],eax
   1400223dd:	add    BYTE PTR [rax],al
   1400223df:	add    al,ah
   1400223e1:	loop   0x1400223e4
   1400223e3:	rex add DWORD PTR [rax],eax
   1400223e6:	add    BYTE PTR [rax],al
   1400223e8:	rcl    dl,1
   1400223ea:	add    BYTE PTR [rax+0x1],al
   1400223ed:	add    BYTE PTR [rax],al
   1400223ef:	add    BYTE PTR [rax],dh
   1400223f1:	rol    DWORD PTR [rax],cl
   1400223f3:	rex add DWORD PTR [rax],eax
	...
   1400223fe:	add    BYTE PTR [rax],al
   140022400:	jo     0x1400223b1
   140022402:	add    al,BYTE PTR [rax+0x1]
   140022405:	add    BYTE PTR [rax],al
   140022407:	add    BYTE PTR [rax-0x18],al
   14002240a:	add    BYTE PTR [rax+0x1],al
   14002240d:	add    BYTE PTR [rax],al
   14002240f:	add    al,ah
   140022411:	mov    edx,0x14001
   140022416:	add    BYTE PTR [rax],al
   140022418:	loopne 0x1400223d4
   14002241a:	add    DWORD PTR [rax+0x1],eax
   14002241d:	add    BYTE PTR [rax],al
   14002241f:	add    al,ah
   140022421:	mov    edx,0x14001
   140022426:	add    BYTE PTR [rax],al
   140022428:	loopne 0x1400223e4
   14002242a:	add    DWORD PTR [rax+0x1],eax
   14002242d:	add    BYTE PTR [rax],al
   14002242f:	add    BYTE PTR [rax-0x1d],ah
   140022432:	add    DWORD PTR [rax+0x1],eax
   140022435:	add    BYTE PTR [rax],al
   140022437:	add    al,dl
   140022439:	rol    BYTE PTR [rax],cl
   14002243b:	rex add DWORD PTR [rax],eax
   14002243e:	add    BYTE PTR [rax],al
   140022440:	xor    bl,dl
   140022442:	add    BYTE PTR [rax+0x1],al
	...
   140022451:	mov    al,0x2
   140022453:	rex add DWORD PTR [rax],eax
   140022456:	add    BYTE PTR [rax],al
   140022458:	rex call 0x14003645e
   14002245e:	add    BYTE PTR [rax],al
   140022460:	loopne 0x14002241c
   140022462:	add    DWORD PTR [rax+0x1],eax
   140022465:	add    BYTE PTR [rax],al
   140022467:	add    al,ah
   140022469:	mov    edx,0x14001
   14002246e:	add    BYTE PTR [rax],al
   140022470:	lock mov edx,0x14001
   140022476:	add    BYTE PTR [rax],al
   140022478:	loopne 0x140022434
   14002247a:	add    DWORD PTR [rax+0x1],eax
   14002247d:	add    BYTE PTR [rax],al
   14002247f:	add    al,ah
   140022481:	jrcxz  0x140022484
   140022483:	rex add DWORD PTR [rax],eax
   140022486:	add    BYTE PTR [rax],al
   140022488:	ror    ch,1
   14002248a:	add    BYTE PTR [rax+0x1],al
   14002248d:	add    BYTE PTR [rax],al
   14002248f:	add    al,ah
   140022491:	(bad)  
   140022492:	add    BYTE PTR [rax+0x1],al
	...
   14002249d:	add    BYTE PTR [rax],al
   14002249f:	add    BYTE PTR [rax+0x14002b0],dl
   1400224a5:	add    BYTE PTR [rax],al
   1400224a7:	add    BYTE PTR [rax-0x18],al
   1400224aa:	add    BYTE PTR [rax+0x1],al
   1400224ad:	add    BYTE PTR [rax],al
   1400224af:	add    al,ah
   1400224b1:	mov    edx,0x14001
   1400224b6:	add    BYTE PTR [rax],al
   1400224b8:	loopne 0x140022474
   1400224ba:	add    DWORD PTR [rax+0x1],eax
   1400224bd:	add    BYTE PTR [rax],al
   1400224bf:	add    al,ah
   1400224c1:	mov    edx,0x14001
   1400224c6:	add    BYTE PTR [rax],al
   1400224c8:	loopne 0x140022484
   1400224ca:	add    DWORD PTR [rax+0x1],eax
   1400224cd:	add    BYTE PTR [rax],al
   1400224cf:	add    BYTE PTR [rax-0x16],dh
   1400224d2:	add    DWORD PTR [rax+0x1],eax
   1400224d5:	add    BYTE PTR [rax],al
   1400224d7:	add    BYTE PTR [rax-0x24],ah
   1400224da:	add    BYTE PTR [rax+0x1],al
   1400224dd:	add    BYTE PTR [rax],al
   1400224df:	add    al,dh
   1400224e1:	fiadd  DWORD PTR [rax]
   1400224e3:	rex add DWORD PTR [rax],eax
	...
   1400224ee:	add    BYTE PTR [rax],al
   1400224f0:	sbb    BYTE PTR [rcx+0x14002],dh
   1400224f6:	add    BYTE PTR [rax],al
   1400224f8:	rex call 0x1400364fe
   1400224fe:	add    BYTE PTR [rax],al
   140022500:	loopne 0x1400224bc
   140022502:	add    DWORD PTR [rax+0x1],eax
   140022505:	add    BYTE PTR [rax],al
   140022507:	add    al,ah
   140022509:	mov    edx,0x14001
   14002250e:	add    BYTE PTR [rax],al
   140022510:	loopne 0x1400224cc
   140022512:	add    DWORD PTR [rax+0x1],eax
   140022515:	add    BYTE PTR [rax],al
   140022517:	add    al,ah
   140022519:	mov    edx,0x14001
   14002251e:	add    BYTE PTR [rax],al
   140022520:	mov    al,0xea
   140022522:	add    DWORD PTR [rax+0x1],eax
   140022525:	add    BYTE PTR [rax],al
   140022527:	add    BYTE PTR [rax+0x14000d9],al
   14002252d:	add    BYTE PTR [rax],al
   14002252f:	add    BYTE PTR [rax-0x1e],dl
   140022532:	add    BYTE PTR [rax+0x1],al
	...
   14002253d:	add    BYTE PTR [rax],al
   14002253f:	add    BYTE PTR [rax+0x14002b1],ah
   140022545:	add    BYTE PTR [rax],al
   140022547:	add    BYTE PTR [rax-0x18],al
   14002254a:	add    BYTE PTR [rax+0x1],al
   14002254d:	add    BYTE PTR [rax],al
   14002254f:	add    al,ah
   140022551:	mov    edx,0x14001
   140022556:	add    BYTE PTR [rax],al
   140022558:	loopne 0x140022514
   14002255a:	add    DWORD PTR [rax+0x1],eax
   14002255d:	add    BYTE PTR [rax],al
   14002255f:	add    al,ah
   140022561:	mov    edx,0x14001
   140022566:	add    BYTE PTR [rax],al
   140022568:	loopne 0x140022524
   14002256a:	add    DWORD PTR [rax+0x1],eax
   14002256d:	add    BYTE PTR [rax],al
   14002256f:	add    BYTE PTR [rax],dh
   140022571:	jmp    0x140036577
   140022576:	add    BYTE PTR [rax],al
   140022578:	rex jrcxz 0x14002257b
   14002257b:	rex add DWORD PTR [rax],eax
   14002257e:	add    BYTE PTR [rax],al
   140022580:	(bad)  
   140022581:	jrcxz  0x140022583
   140022583:	rex add DWORD PTR [rax],eax
	...
   14002258e:	add    BYTE PTR [rax],al
   140022590:	sub    BYTE PTR [rdx+0x14002],dh
   140022596:	add    BYTE PTR [rax],al
   140022598:	rex call 0x14003659e
   14002259e:	add    BYTE PTR [rax],al
   1400225a0:	loopne 0x14002255c
   1400225a2:	add    DWORD PTR [rax+0x1],eax
   1400225a5:	add    BYTE PTR [rax],al
   1400225a7:	add    al,ah
   1400225a9:	mov    edx,0x14001
   1400225ae:	add    BYTE PTR [rax],al
   1400225b0:	loopne 0x14002256c
   1400225b2:	add    DWORD PTR [rax+0x1],eax
   1400225b5:	add    BYTE PTR [rax],al
   1400225b7:	add    al,ah
   1400225b9:	mov    edx,0x14001
   1400225be:	add    BYTE PTR [rax],al
   1400225c0:	xor    bl,ch
   1400225c2:	add    DWORD PTR [rax+0x1],eax
   1400225c5:	add    BYTE PTR [rax],al
   1400225c7:	add    BYTE PTR [rax-0x24],ah
   1400225ca:	add    BYTE PTR [rax+0x1],al
   1400225cd:	add    BYTE PTR [rax],al
   1400225cf:	add    al,dh
   1400225d1:	fiadd  DWORD PTR [rax]
   1400225d3:	rex add DWORD PTR [rax],eax
	...
   1400225de:	add    BYTE PTR [rax],al
   1400225e0:	mov    al,0xb2
   1400225e2:	add    al,BYTE PTR [rax+0x1]
   1400225e5:	add    BYTE PTR [rax],al
   1400225e7:	add    BYTE PTR [rax-0x18],al
   1400225ea:	add    BYTE PTR [rax+0x1],al
   1400225ed:	add    BYTE PTR [rax],al
   1400225ef:	add    al,ah
   1400225f1:	mov    edx,0x14001
   1400225f6:	add    BYTE PTR [rax],al
   1400225f8:	loopne 0x1400225b4
   1400225fa:	add    DWORD PTR [rax+0x1],eax
   1400225fd:	add    BYTE PTR [rax],al
   1400225ff:	add    al,ah
   140022601:	mov    edx,0x14001
   140022606:	add    BYTE PTR [rax],al
   140022608:	loopne 0x1400225c4
   14002260a:	add    DWORD PTR [rax+0x1],eax
   14002260d:	add    BYTE PTR [rax],al
   14002260f:	add    BYTE PTR [rax-0x15],dh
   140022612:	add    DWORD PTR [rax+0x1],eax
   140022615:	add    BYTE PTR [rax],al
   140022617:	add    BYTE PTR [rax-0x31],dl
   14002261a:	add    BYTE PTR [rax+0x1],al
   14002261d:	add    BYTE PTR [rax],al
   14002261f:	add    BYTE PTR [rax-0x24],ah
   140022622:	add    BYTE PTR [rax+0x1],al
	...
   14002262d:	add    BYTE PTR [rax],al
   14002262f:	add    BYTE PTR [rax],bh
   140022631:	mov    bl,0x2
   140022633:	rex add DWORD PTR [rax],eax
   140022636:	add    BYTE PTR [rax],al
   140022638:	rex call 0x14003663e
   14002263e:	add    BYTE PTR [rax],al
   140022640:	loopne 0x1400225fc
   140022642:	add    DWORD PTR [rax+0x1],eax
   140022645:	add    BYTE PTR [rax],al
   140022647:	add    al,ah
   140022649:	mov    edx,0x14001
   14002264e:	add    BYTE PTR [rax],al
   140022650:	loopne 0x14002260c
   140022652:	add    DWORD PTR [rax+0x1],eax
   140022655:	add    BYTE PTR [rax],al
   140022657:	add    al,ah
   140022659:	mov    edx,0x14001
   14002265e:	add    BYTE PTR [rax],al
   140022660:	lock jmp 0x140022664
   140022663:	rex add DWORD PTR [rax],eax
   140022666:	add    BYTE PTR [rax],al
   140022668:	rcl    dl,1
   14002266a:	add    BYTE PTR [rax+0x1],al
   14002266d:	add    BYTE PTR [rax],al
   14002266f:	add    BYTE PTR [rax-0x30],al
   140022672:	add    BYTE PTR [rax+0x1],al
	...
   14002267d:	add    BYTE PTR [rax],al
   14002267f:	add    al,al
   140022681:	mov    bl,0x2
   140022683:	rex add DWORD PTR [rax],eax
   140022686:	add    BYTE PTR [rax],al
   140022688:	rex call 0x14003668e
   14002268e:	add    BYTE PTR [rax],al
   140022690:	loopne 0x14002264c
   140022692:	add    DWORD PTR [rax+0x1],eax
   140022695:	add    BYTE PTR [rax],al
   140022697:	add    al,ah
   140022699:	mov    edx,0x14001
   14002269e:	add    BYTE PTR [rax],al
   1400226a0:	loopne 0x14002265c
   1400226a2:	add    DWORD PTR [rax+0x1],eax
   1400226a5:	add    BYTE PTR [rax],al
   1400226a7:	add    al,ah
   1400226a9:	mov    edx,0x14001
   1400226ae:	add    BYTE PTR [rax],al
   1400226b0:	and    ah,ah
   1400226b2:	add    DWORD PTR [rax+0x1],eax
   1400226b5:	add    BYTE PTR [rax],al
   1400226b7:	add    BYTE PTR [rax+0x14000e2],al
   1400226bd:	add    BYTE PTR [rax],al
   1400226bf:	add    al,ah
   1400226c1:	loop   0x1400226c3
   1400226c3:	rex add DWORD PTR [rax],eax
	...
   1400226ce:	add    BYTE PTR [rax],al
   1400226d0:	rex.W mov spl,0x2
   1400226d3:	rex add DWORD PTR [rax],eax
   1400226d6:	add    BYTE PTR [rax],al
   1400226d8:	rex call 0x1400366de
   1400226de:	add    BYTE PTR [rax],al
   1400226e0:	loopne 0x14002269c
   1400226e2:	add    DWORD PTR [rax+0x1],eax
   1400226e5:	add    BYTE PTR [rax],al
   1400226e7:	add    al,ah
   1400226e9:	mov    edx,0x14001
   1400226ee:	add    BYTE PTR [rax],al
   1400226f0:	loopne 0x1400226ac
   1400226f2:	add    DWORD PTR [rax+0x1],eax
   1400226f5:	add    BYTE PTR [rax],al
   1400226f7:	add    al,ah
   1400226f9:	mov    edx,0x14001
   1400226fe:	add    BYTE PTR [rax],al
   140022700:	shr    cl,1
   140022702:	add    DWORD PTR [rax+0x1],eax
   140022705:	add    BYTE PTR [rax],al
   140022707:	add    BYTE PTR [rax-0x1d],al
   14002270a:	add    BYTE PTR [rax+0x1],al
   14002270d:	add    BYTE PTR [rax],al
   14002270f:	add    BYTE PTR [rax-0x1d],ah
   140022712:	add    BYTE PTR [rax+0x1],al
	...
   14002271d:	add    BYTE PTR [rax],al
   14002271f:	add    al,dl
   140022721:	mov    ah,0x2
   140022723:	rex add DWORD PTR [rax],eax
   140022726:	add    BYTE PTR [rax],al
   140022728:	rex call 0x14003672e
   14002272e:	add    BYTE PTR [rax],al
   140022730:	loopne 0x1400226ec
   140022732:	add    DWORD PTR [rax+0x1],eax
   140022735:	add    BYTE PTR [rax],al
   140022737:	add    al,ah
   140022739:	mov    edx,0x14001
   14002273e:	add    BYTE PTR [rax],al
   140022740:	loopne 0x1400226fc
   140022742:	add    DWORD PTR [rax+0x1],eax
   140022745:	add    BYTE PTR [rax],al
   140022747:	add    al,ah
   140022749:	mov    edx,0x14001
   14002274e:	add    BYTE PTR [rax],al
   140022750:	xor    dh,ah
   140022752:	add    DWORD PTR [rax+0x1],eax
   140022755:	add    BYTE PTR [rax],al
   140022757:	add    al,dl
   140022759:	int    0x0
   14002275b:	rex add DWORD PTR [rax],eax
   14002275e:	add    BYTE PTR [rax],al
   140022760:	(bad)  
   140022761:	fadd   QWORD PTR [rax]
   140022763:	rex add DWORD PTR [rax],eax
	...
   14002276e:	add    BYTE PTR [rax],al
   140022770:	pop    rax
   140022771:	mov    ch,0x2
   140022773:	rex add DWORD PTR [rax],eax
   140022776:	add    BYTE PTR [rax],al
   140022778:	rex call 0x14003677e
   14002277e:	add    BYTE PTR [rax],al
   140022780:	loopne 0x14002273c
   140022782:	add    DWORD PTR [rax+0x1],eax
   140022785:	add    BYTE PTR [rax],al
   140022787:	add    al,ah
   140022789:	mov    edx,0x14001
   14002278e:	add    BYTE PTR [rax],al
   140022790:	loopne 0x14002274c
   140022792:	add    DWORD PTR [rax+0x1],eax
   140022795:	add    BYTE PTR [rax],al
   140022797:	add    al,ah
   140022799:	mov    edx,0x14001
   14002279e:	add    BYTE PTR [rax],al
   1400227a0:	mov    al,0xe6
   1400227a2:	add    DWORD PTR [rax+0x1],eax
   1400227a5:	add    BYTE PTR [rax],al
   1400227a7:	add    al,al
   1400227a9:	in     al,0x0
   1400227ab:	rex add DWORD PTR [rax],eax
   1400227ae:	add    BYTE PTR [rax],al
   1400227b0:	loopne 0x140022796
   1400227b2:	add    BYTE PTR [rax+0x1],al
	...
   1400227bd:	add    BYTE PTR [rax],al
   1400227bf:	add    BYTE PTR [rax-0x4a],al
   1400227c2:	add    al,BYTE PTR [rax+0x1]
   1400227c5:	add    BYTE PTR [rax],al
   1400227c7:	add    BYTE PTR [rax-0x18],al
   1400227ca:	add    BYTE PTR [rax+0x1],al
   1400227cd:	add    BYTE PTR [rax],al
   1400227cf:	add    al,ah
   1400227d1:	mov    edx,0x14001
   1400227d6:	add    BYTE PTR [rax],al
   1400227d8:	loopne 0x140022794
   1400227da:	add    DWORD PTR [rax+0x1],eax
   1400227dd:	add    BYTE PTR [rax],al
   1400227df:	add    al,ah
   1400227e1:	mov    edx,0x14001
   1400227e6:	add    BYTE PTR [rax],al
   1400227e8:	lock mov edx,0x14001
   1400227ee:	add    BYTE PTR [rax],al
   1400227f0:	and    ch,0x1
   1400227f3:	rex add DWORD PTR [rax],eax
   1400227f6:	add    BYTE PTR [rax],al
   1400227f8:	loopne 0x1400227df
   1400227fa:	add    BYTE PTR [rax+0x1],al
   1400227fd:	add    BYTE PTR [rax],al
   1400227ff:	add    BYTE PTR [rax],dh
   140022801:	in     eax,0x0
   140022803:	rex add DWORD PTR [rax],eax
	...
   14002280e:	add    BYTE PTR [rax],al
   140022810:	shl    BYTE PTR [rsi+0x14002],1
   140022816:	add    BYTE PTR [rax],al
   140022818:	rex call 0x14003681e
   14002281e:	add    BYTE PTR [rax],al
   140022820:	loopne 0x1400227dc
   140022822:	add    DWORD PTR [rax+0x1],eax
   140022825:	add    BYTE PTR [rax],al
   140022827:	add    al,ah
   140022829:	mov    edx,0x14001
   14002282e:	add    BYTE PTR [rax],al
   140022830:	loopne 0x1400227ec
   140022832:	add    DWORD PTR [rax+0x1],eax
   140022835:	add    BYTE PTR [rax],al
   140022837:	add    al,dh
   140022839:	mov    edx,0x14001
   14002283e:	add    BYTE PTR [rax],al
   140022840:	movabs al,ds:0xb0000000014001ec
   140022849:	jmp    0x14002284b
   14002284b:	rex add DWORD PTR [rax],eax
   14002284e:	add    BYTE PTR [rax],al
   140022850:	add    ah,ch
   140022852:	add    BYTE PTR [rax+0x1],al
	...
   14002285d:	add    BYTE PTR [rax],al
   14002285f:	add    BYTE PTR [rax-0x49],ah
   140022862:	add    al,BYTE PTR [rax+0x1]
   140022865:	add    BYTE PTR [rax],al
   140022867:	add    BYTE PTR [rax-0x18],al
   14002286a:	add    BYTE PTR [rax+0x1],al
   14002286d:	add    BYTE PTR [rax],al
   14002286f:	add    al,ah
   140022871:	mov    edx,0x14001
   140022876:	add    BYTE PTR [rax],al
   140022878:	loopne 0x140022834
   14002287a:	add    DWORD PTR [rax+0x1],eax
   14002287d:	add    BYTE PTR [rax],al
   14002287f:	add    al,ah
   140022881:	mov    edx,0x14001
   140022886:	add    BYTE PTR [rax],al
   140022888:	lock mov edx,0x14001
   14002288e:	add    BYTE PTR [rax],al
   140022890:	lock out 0x1,al
   140022893:	rex add DWORD PTR [rax],eax
   140022896:	add    BYTE PTR [rax],al
   140022898:	(bad)  
   140022899:	in     eax,0x0
   14002289b:	rex add DWORD PTR [rax],eax
   14002289e:	add    BYTE PTR [rax],al
   1400228a0:	mov    al,0xe5
   1400228a2:	add    BYTE PTR [rax+0x1],al
	...
   1400228ad:	add    BYTE PTR [rax],al
   1400228af:	add    al,dh
   1400228b1:	mov    bh,0x2
   1400228b3:	rex add DWORD PTR [rax],eax
   1400228b6:	add    BYTE PTR [rax],al
   1400228b8:	rex call 0x1400368be
   1400228be:	add    BYTE PTR [rax],al
   1400228c0:	loopne 0x14002287c
   1400228c2:	add    DWORD PTR [rax+0x1],eax
   1400228c5:	add    BYTE PTR [rax],al
   1400228c7:	add    al,ah
   1400228c9:	mov    edx,0x14001
   1400228ce:	add    BYTE PTR [rax],al
   1400228d0:	loopne 0x14002288c
   1400228d2:	add    DWORD PTR [rax+0x1],eax
   1400228d5:	add    BYTE PTR [rax],al
   1400228d7:	add    al,dh
   1400228d9:	mov    edx,0x14001
   1400228de:	add    BYTE PTR [rax],al
   1400228e0:	shl    bh,1
   1400228e2:	add    DWORD PTR [rax+0x1],eax
   1400228e5:	add    BYTE PTR [rax],al
   1400228e7:	add    al,ah
   1400228e9:	in     eax,0x0
   1400228eb:	rex add DWORD PTR [rax],eax
   1400228ee:	add    BYTE PTR [rax],al
   1400228f0:	nop
   1400228f1:	rol    DWORD PTR [rax],cl
   1400228f3:	rex add DWORD PTR [rax],eax
	...
   1400228fe:	add    BYTE PTR [rax],al
   140022900:	cmp    BYTE PTR [rax+0x14002],0x0
   140022907:	add    BYTE PTR [rax-0x18],al
   14002290a:	add    BYTE PTR [rax+0x1],al
   14002290d:	add    BYTE PTR [rax],al
   14002290f:	add    al,ah
   140022911:	mov    edx,0x14001
   140022916:	add    BYTE PTR [rax],al
   140022918:	loopne 0x1400228d4
   14002291a:	add    DWORD PTR [rax+0x1],eax
   14002291d:	add    BYTE PTR [rax],al
   14002291f:	add    al,ah
   140022921:	mov    edx,0x14001
   140022926:	add    BYTE PTR [rax],al
   140022928:	lock mov edx,0x14001
   14002292e:	add    BYTE PTR [rax],al
   140022930:	sub    al,0x1
   140022933:	rex add DWORD PTR [rax],eax
   140022936:	add    BYTE PTR [rax],al
   140022938:	loopne 0x14002291f
   14002293a:	add    BYTE PTR [rax+0x1],al
   14002293d:	add    BYTE PTR [rax],al
   14002293f:	add    BYTE PTR [rax+0x14000d8],dl
	...
   14002294d:	add    BYTE PTR [rax],al
   14002294f:	add    BYTE PTR [rax],dl
   140022951:	mov    ecx,0x14002
   140022956:	add    BYTE PTR [rax],al
   140022958:	rex call 0x14003695e
   14002295e:	add    BYTE PTR [rax],al
   140022960:	loopne 0x14002291c
   140022962:	add    DWORD PTR [rax+0x1],eax
   140022965:	add    BYTE PTR [rax],al
   140022967:	add    al,ah
   140022969:	mov    edx,0x14001
   14002296e:	add    BYTE PTR [rax],al
   140022970:	loopne 0x14002292c
   140022972:	add    DWORD PTR [rax+0x1],eax
   140022975:	add    BYTE PTR [rax],al
   140022977:	add    al,dh
   140022979:	mov    edx,0x14001
   14002297e:	add    BYTE PTR [rax],al
   140022980:	shl    ah,1
   140022982:	add    DWORD PTR [rax+0x1],eax
   140022985:	add    BYTE PTR [rax],al
   140022987:	add    BYTE PTR [rax+0x14000e9],dl
   14002298d:	add    BYTE PTR [rax],al
   14002298f:	add    BYTE PTR [rax],al
   140022991:	(bad)  
   140022992:	add    BYTE PTR [rax+0x1],al
   140022995:	add    BYTE PTR [rax],al
   140022997:	add    BYTE PTR [rbp+0x78],al
   14002299a:	jo     0x140022a01
   14002299c:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
   1400229a0:	and    BYTE PTR [rcx+0x20],ah
   1400229a3:	jno    0x140022a1a
   1400229a5:	(bad)  
   1400229a6:	ins    BYTE PTR es:[rdi],dx
   1400229a7:	imul   esp,DWORD PTR [rsi+0x69],0x6e206465
   1400229ae:	(bad)  
   1400229af:	ins    DWORD PTR es:[rdi],dx
   1400229b0:	and    BYTE PTR gs:[rcx+0x64],ch
   1400229b4:	and    BYTE PTR [rdi+0x72],ch
   1400229b7:	and    BYTE PTR [rcx+0x20],ah
   1400229ba:	jae    0x140022a30
   1400229bc:	jb     0x140022a27
   1400229be:	outs   dx,BYTE PTR ds:[rsi]
   1400229bf:	and    BYTE PTR [ecx+ebp*2+0x74],ch
   1400229c4:	gs jb  0x140022a28
   1400229c7:	ins    BYTE PTR es:[rdi],dx
	...
   1400229d0:	rex.RB js 0x140022a43
   1400229d3:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   1400229d8:	and    BYTE PTR [rcx+0x20],ah
   1400229db:	jno    0x140022a52
   1400229dd:	(bad)  
   1400229de:	ins    BYTE PTR es:[rdi],dx
   1400229df:	imul   esp,DWORD PTR [rsi+0x69],0x6e206465
   1400229e6:	(bad)  
   1400229e7:	ins    DWORD PTR es:[rdi],dx
   1400229e8:	and    BYTE PTR gs:[rcx+0x64],ch
   1400229ec:	add    BYTE PTR [rax],al
   1400229ee:	add    BYTE PTR [rax],al
   1400229f0:	rex.RB js 0x140022a63
   1400229f3:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   1400229f8:	and    BYTE PTR [rdi+rbp*2+0x6b],dh
   1400229fc:	outs   dx,BYTE PTR gs:[rsi]
   1400229fe:	and    BYTE PTR [rax+0x25],ah
   140022a01:	xor    DWORD PTR [rdi],esp
   140022a03:	add    BYTE PTR [rax],al
   140022a05:	add    BYTE PTR [rax],al
   140022a07:	add    BYTE PTR [rbx+0x79],dl
   140022a0a:	outs   dx,BYTE PTR ds:[rsi]
   140022a0b:	je     0x140022a6e
   140022a0d:	js     0x140022a2f
   140022a0f:	gs jb  0x140022a84
   140022a12:	outs   dx,DWORD PTR ds:[rsi]
   140022a13:	jb     0x140022a15
   140022a15:	add    BYTE PTR [rax],al
   140022a17:	add    BYTE PTR [rcx+0x51],dl
   140022a1a:	ins    DWORD PTR es:[rdi],dx
   140022a1b:	ins    BYTE PTR es:[rdi],dx
   140022a1c:	push   rax
   140022a1d:	(bad)  
   140022a1e:	jb     0x140022a93
   140022a20:	gs jb  0x140022a23
   140022a23:	add    BYTE PTR [rax],al
   140022a25:	add    BYTE PTR [rax],al
   140022a27:	add    BYTE PTR [rbp+0x6e],dl
   140022a2a:	gs js  0x140022a9d
   140022a2d:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140022a32:	and    BYTE PTR [rdi+rbp*2+0x6b],dh
   140022a36:	outs   dx,BYTE PTR gs:[rsi]
   140022a38:	and    BYTE PTR [rax+0x25],ah
   140022a3b:	xor    DWORD PTR [rdi],esp
   140022a3d:	add    BYTE PTR [rax],al
   140022a3f:	add    BYTE PTR [rcx+0x67],cl
   140022a42:	outs   dx,BYTE PTR ds:[rsi]
   140022a43:	outs   dx,DWORD PTR ds:[rsi]
   140022a44:	jb     0x140022aab
   140022a46:	and    BYTE PTR fs:[rcx+0x6e],ah
   140022a4a:	outs   dx,BYTE PTR ds:[rsi]
   140022a4b:	outs   dx,DWORD PTR ds:[rsi]
   140022a4c:	je     0x140022aaf
   140022a4e:	je     0x140022ab9
   140022a50:	outs   dx,DWORD PTR ds:[rsi]
   140022a51:	outs   dx,BYTE PTR ds:[rsi]
   140022a52:	add    BYTE PTR [rax],al
   140022a54:	add    BYTE PTR [rax],al
   140022a56:	add    BYTE PTR [rax],al
   140022a58:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140022a5a:	imul   bp,WORD PTR [rsi+0x69],0x7974
	...
   140022a6c:	add    BYTE PTR [rax],al
   140022a6e:	lock mov edi,0x0
   140022a74:	add    BYTE PTR [rax],al
   140022a76:	lock (bad) 
	...
   140022a80:	sbb    eax,0x42000000
   140022a85:	add    BYTE PTR [rax],al
   140022a87:	add    BYTE PTR [rbx+0x0],al
   140022a8a:	add    BYTE PTR [rax],al
   140022a8c:	add    BYTE PTR [rax],r8b
   140022a8f:	add    BYTE PTR [rsi+0x0],bl
   140022a92:	add    BYTE PTR [rax],al
   140022a94:	add    al,0x0
   140022a96:	add    BYTE PTR [rax],al
   140022a98:	add    eax,0x6000000
   140022a9d:	add    BYTE PTR [rax],al
   140022a9f:	add    BYTE PTR [rcx],cl
   140022aa1:	add    BYTE PTR [rax],al
   140022aa3:	add    BYTE PTR [rdx],cl
   140022aa5:	add    BYTE PTR [rax],al
   140022aa7:	add    BYTE PTR [rbx],cl
   140022aa9:	add    BYTE PTR [rax],al
   140022aab:	add    BYTE PTR [rsi],cl
   140022aad:	add    BYTE PTR [rax],al
   140022aaf:	add    BYTE PTR [rax],dl
   140022ab1:	add    BYTE PTR [rax],al
   140022ab3:	add    BYTE PTR [rbx+0x0],dl
   140022ab6:	add    BYTE PTR [rax],al
   140022ab8:	adc    al,0x0
   140022aba:	add    BYTE PTR [rax],al
   140022abc:	adc    eax,0x16000000
   140022ac1:	add    BYTE PTR [rax],al
   140022ac3:	add    BYTE PTR [rsi],bl
   140022ac5:	add    BYTE PTR [rax],al
   140022ac7:	add    BYTE PTR [rdi],bl
   140022ac9:	add    BYTE PTR [rax],al
   140022acb:	add    BYTE PTR [rax],ah
   140022acd:	add    BYTE PTR [rax],al
   140022acf:	add    BYTE PTR [rbx],ch
   140022ad1:	add    BYTE PTR [rax],al
   140022ad3:	add    BYTE PTR [rcx+0x0],dl
   140022ad6:	add    BYTE PTR [rax],al
   140022ad8:	cmp    eax,DWORD PTR [rax]
   140022ada:	add    BYTE PTR [rax],al
   140022adc:	add    BYTE PTR [r8],r8b
   140022adf:	add    BYTE PTR [rsi+0x0],al
   140022ae2:	add    BYTE PTR [rax],al
   140022ae4:	rex.RXB add BYTE PTR [r8],r8b
   140022ae7:	add    BYTE PTR [rdx+0x0],dl
   140022aea:	add    BYTE PTR [rax],al
   140022aec:	rex.WB add BYTE PTR [r8],al
   140022aef:	add    BYTE PTR [rdx+0x0],cl
   140022af2:	add    BYTE PTR [rax],al
   140022af4:	rex.WXB add BYTE PTR [r8],al
   140022af7:	add    BYTE PTR [rax+rax*1+0x0],cl
   140022afb:	add    BYTE PTR [rbp+0x0],cl
   140022afe:	add    BYTE PTR [rax],al
   140022b00:	push   rsp
   140022b01:	add    BYTE PTR [rax],al
   140022b03:	add    BYTE PTR [rbp+0x0],dl
   140022b06:	add    BYTE PTR [rax],al
   140022b08:	push   rsi
   140022b09:	add    BYTE PTR [rax],al
   140022b0b:	add    BYTE PTR [rsi+0x0],cl
	...
   140022b16:	add    BYTE PTR [rax],al
   140022b18:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140022b1a:	jbe    0x140022b7d
   140022b1c:	ins    BYTE PTR es:[rdi],dx
   140022b1d:	imul   esp,DWORD PTR [rax+riz*1+0x72],0x6c756765
   140022b25:	(bad)  
   140022b26:	jb     0x140022b48
   140022b28:	gs js  0x140022b9b
   140022b2b:	jb     0x140022b92
   140022b2d:	jae    0x140022ba2
   140022b2f:	imul   ebp,DWORD PTR [rdi+0x6e],0x616c6620
   140022b36:	and    BYTE PTR [edi],ah
   140022b39:	and    eax,0x2730
   140022b3e:	add    BYTE PTR [rax],al
   140022b40:	push   rbp
   140022b41:	outs   dx,BYTE PTR ds:[rsi]
   140022b42:	je     0x140022ba9
   140022b44:	jb     0x140022bb3
   140022b46:	imul   ebp,DWORD PTR [rsi+0x61],0x20646574
   140022b4d:	jb     0x140022bb4
   140022b4f:	addr32 jne 0x140022bbe
   140022b52:	(bad)  
   140022b53:	jb     0x140022b75
   140022b55:	gs js  0x140022bc8
   140022b58:	jb     0x140022bbf
   140022b5a:	jae    0x140022bcf
   140022b5c:	imul   ebp,DWORD PTR [rdi+0x6e],0x616c6320
   140022b63:	jae    0x140022bd8
   140022b65:	add    BYTE PTR [rax],al
   140022b67:	add    BYTE PTR [rbp+0x6e],dl
   140022b6a:	je     0x140022bd1
   140022b6c:	jb     0x140022bdb
   140022b6e:	imul   ebp,DWORD PTR [rsi+0x61],0x20646574
   140022b75:	jb     0x140022bdc
   140022b77:	addr32 jne 0x140022be6
   140022b7a:	(bad)  
   140022b7b:	jb     0x140022b9d
   140022b7d:	gs js  0x140022bf0
   140022b80:	jb     0x140022be7
   140022b82:	jae    0x140022bf7
   140022b84:	imul   ebp,DWORD PTR [rdi+0x6e],0x63616220
   140022b8b:	imul   esi,DWORD PTR [rbx+0x6c],0x61
   140022b8f:	jae    0x140022bf9
   140022b91:	and    BYTE PTR [rbx+0x65],dh
   140022b94:	jno    0x140022c0b
   140022b96:	outs   dx,BYTE PTR gs:[rsi]
   140022b98:	movsxd esp,DWORD PTR [rbp+0x0]
   140022b9b:	add    BYTE PTR [rax],al
   140022b9d:	add    BYTE PTR [rax],al
   140022b9f:	add    BYTE PTR [rbp+0x6e],dl
   140022ba2:	je     0x140022c09
   140022ba4:	jb     0x140022c13
   140022ba6:	imul   ebp,DWORD PTR [rsi+0x61],0x20646574
   140022bad:	jb     0x140022c14
   140022baf:	addr32 jne 0x140022c1e
   140022bb2:	(bad)  
   140022bb3:	jb     0x140022bd5
   140022bb5:	gs js  0x140022c28
   140022bb8:	jb     0x140022c1f
   140022bba:	jae    0x140022c2f
   140022bbc:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696c20
   140022bc3:	gs jb  0x140022c27
   140022bc6:	ins    BYTE PTR es:[rdi],dx
   140022bc7:	add    BYTE PTR [rcx+0x6c],cl
   140022bca:	ins    BYTE PTR es:[rdi],dx
   140022bcb:	gs addr32 (bad) 
   140022bce:	ins    BYTE PTR es:[rdi],dx
   140022bcf:	and    BYTE PTR [rbx+0x79],dh
   140022bd2:	outs   dx,BYTE PTR ds:[rsi]
   140022bd3:	je     0x140022c36
   140022bd5:	js     0x140022bf7
   140022bd7:	outs   dx,WORD PTR ds:[rsi]
   140022bd9:	jb     0x140022bfb
   140022bdb:	gs js  0x140022c4e
   140022bde:	outs   dx,DWORD PTR ds:[rsi]
   140022bdf:	outs   dx,BYTE PTR ds:[rsi]
   140022be0:	outs   dx,BYTE PTR gs:[rsi]
   140022be2:	je     0x140022c4d
   140022be4:	(bad)  
   140022be5:	ins    BYTE PTR es:[rdi],dx
   140022be6:	and    BYTE PTR [rsi+0x75],ch
   140022be9:	ins    DWORD PTR es:[rdi],dx
   140022bea:	(bad)  
   140022beb:	gs jb  0x140022bee
   140022bee:	add    BYTE PTR [rax],al
   140022bf0:	rex.B je 0x140022c13
   140022bf3:	ins    BYTE PTR es:[rdi],dx
   140022bf4:	gs (bad) 
   140022bf6:	jae    0x140022c6c
   140022bf8:	and    BYTE PTR [rdi+0x6e],ch
   140022bfb:	and    BYTE PTR gs:[rax+0x65],ch
   140022bff:	js     0x140022c62
   140022c01:	fs movsxd ebp,DWORD PTR gs:[rcx+0x6d]
   140022c06:	(bad)  
   140022c07:	ins    BYTE PTR es:[rdi],dx
   140022c08:	and    BYTE PTR [rcx+rbp*2+0x67],ah
   140022c0c:	imul   esi,DWORD PTR [rax+riz*1+0x69],0x65722073
   140022c14:	jno    0x140022c8b
   140022c16:	imul   esi,DWORD PTR [rdx+0x65],0x66612064
   140022c1d:	je     0x140022c84
   140022c1f:	jb     0x140022c41
   140022c21:	(bad)  
   140022c22:	xor    BYTE PTR [rip+0x2731],ah        # 0x140025359
   140022c28:	rex.R
   140022c29:	movsxd ebp,DWORD PTR gs:[rcx+0x6d]
   140022c2d:	(bad)  
   140022c2e:	ins    BYTE PTR es:[rdi],dx
   140022c2f:	and    BYTE PTR [rsi+0x75],ch
   140022c32:	ins    DWORD PTR es:[rdi],dx
   140022c33:	(bad)  
   140022c34:	gs jb  0x140022caa
   140022c37:	and    BYTE PTR [rbx+0x61],ah
   140022c3a:	outs   dx,BYTE PTR ds:[rsi]
   140022c3b:	(bad)  
   140022c3c:	je     0x140022c5e
   140022c3e:	jae    0x140022cb4
   140022c40:	(bad)  
   140022c41:	jb     0x140022cb7
   140022c43:	and    BYTE PTR [rdi+0x69],dh
   140022c46:	je     0x140022cb0
   140022c48:	and    BYTE PTR [rdi],ah
   140022c4a:	xor    BYTE PTR [rdi],ah
   140022c4c:	add    BYTE PTR [rax],al
   140022c4e:	add    BYTE PTR [rax],al
   140022c50:	movsxd r14,DWORD PTR [r9+r12*2+0x6c]
   140022c55:	and    BYTE PTR [rbp+0x73],ah
   140022c58:	movsxd esp,DWORD PTR [rcx+0x70]
   140022c5b:	and    BYTE PTR gs:[rbx+0x65],dh
   140022c5f:	jno    0x140022cd6
   140022c61:	outs   dx,BYTE PTR gs:[rsi]
   140022c63:	movsxd esp,DWORD PTR [rbp+0x73]
   140022c66:	and    BYTE PTR [rcx+0x72],ah
   140022c69:	and    BYTE PTR gs:[rsi+0x6f],ch
   140022c6d:	je     0x140022c8f
   140022c6f:	(bad)  
   140022c70:	ins    BYTE PTR es:[rdi],dx
   140022c71:	ins    BYTE PTR es:[rdi],dx
   140022c72:	outs   dx,DWORD PTR ds:[rsi]
   140022c73:	ja     0x140022cda
   140022c75:	add    BYTE PTR fs:[rax],al
   140022c78:	push   rbp
   140022c79:	outs   dx,BYTE PTR ds:[rsi]
   140022c7a:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
   140022c7e:	gs and BYTE PTR fs:[rbx+0x74],dh
   140022c83:	jb     0x140022cee
   140022c85:	outs   dx,BYTE PTR ds:[rsi]
   140022c86:	and    BYTE PTR [ecx+0x74],ah
   140022c8a:	and    BYTE PTR [rbp+0x6e],ah
   140022c8d:	and    BYTE PTR fs:[rdi+0x66],ch
   140022c91:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
   140022c95:	add    BYTE PTR gs:[rax],al
   140022c98:	rex.WB ins BYTE PTR es:[rdi],dx
   140022c9a:	ins    BYTE PTR es:[rdi],dx
   140022c9b:	gs addr32 (bad) 
   140022c9e:	ins    BYTE PTR es:[rdi],dx
   140022c9f:	and    BYTE PTR [rax+0x65],ch
   140022ca2:	js     0x140022d05
   140022ca4:	fs movsxd ebp,DWORD PTR gs:[rcx+0x6d]
   140022ca9:	(bad)  
   140022caa:	ins    BYTE PTR es:[rdi],dx
   140022cab:	and    BYTE PTR [rbp+0x73],ah
   140022cae:	movsxd esp,DWORD PTR [rcx+0x70]
   140022cb1:	and    BYTE PTR gs:[rbx+0x65],dh
   140022cb5:	jno    0x140022d2c
   140022cb7:	outs   dx,BYTE PTR gs:[rsi]
   140022cb9:	movsxd esp,DWORD PTR [rbp+0x0]
   140022cbc:	add    BYTE PTR [rax],al
   140022cbe:	add    BYTE PTR [rax],al
   140022cc0:	rex.WB ins BYTE PTR es:[rdi],dx
   140022cc2:	ins    BYTE PTR es:[rdi],dx
   140022cc3:	gs addr32 (bad) 
   140022cc6:	ins    BYTE PTR es:[rdi],dx
   140022cc7:	and    BYTE PTR [rbp+0x6e],dh
   140022cca:	imul   esp,DWORD PTR [rbx+0x6f],0x65206564
   140022cd1:	jae    0x140022d36
   140022cd3:	(bad)  
   140022cd4:	jo     0x140022d3b
   140022cd6:	and    BYTE PTR [rbx+0x65],dh
   140022cd9:	jno    0x140022d50
   140022cdb:	outs   dx,BYTE PTR gs:[rsi]
   140022cdd:	movsxd esp,DWORD PTR [rbp+0x0]
   140022ce0:	push   rbx
   140022ce1:	je     0x140022d55
   140022ce3:	(bad)  
   140022ce4:	jns    0x140022d06
   140022ce6:	outs   dx,BYTE PTR ds:[rsi]
   140022ce7:	gs ja  0x140022d56
   140022cea:	imul   ebp,DWORD PTR [rsi+0x65],0x206e6920
   140022cf1:	jae    0x140022d67
   140022cf3:	jb     0x140022d5e
   140022cf5:	outs   dx,BYTE PTR ds:[rsi]
   140022cf6:	and    BYTE PTR [ecx+ebp*2+0x74],ch
   140022cfb:	gs jb  0x140022d5f
   140022cfe:	ins    BYTE PTR es:[rdi],dx
   140022cff:	add    BYTE PTR [rbp+0x6f],cl
   140022d02:	fs jne 0x140022d71
   140022d05:	and    BYTE PTR gs:[rcx+0x6d],ch
   140022d09:	jo     0x140022d7a
   140022d0b:	jb     0x140022d81
   140022d0d:	and    BYTE PTR [rdx+0x65],dh
   140022d10:	jno    0x140022d87
   140022d12:	imul   esi,DWORD PTR [rdx+0x65],0x20612073
   140022d19:	jno    0x140022d90
   140022d1b:	(bad)  
   140022d1c:	ins    BYTE PTR es:[rdi],dx
   140022d1d:	imul   esp,DWORD PTR [rsi+0x69],0x7265
   140022d24:	add    BYTE PTR [rax],al
   140022d26:	add    BYTE PTR [rax],al
   140022d28:	imul   r13d,DWORD PTR [rbp+r12*2+0x20],0x6f706d69
   140022d31:	jb     0x140022da7
   140022d33:	and    BYTE PTR [rdx+0x65],dh
   140022d36:	jno    0x140022dad
   140022d38:	imul   esi,DWORD PTR [rdx+0x65],0x20612073
   140022d3f:	jno    0x140022db6
   140022d41:	(bad)  
   140022d42:	ins    BYTE PTR es:[rdi],dx
   140022d43:	imul   esp,DWORD PTR [rsi+0x69],0x7265
   140022d4a:	add    BYTE PTR [rax],al
   140022d4c:	add    BYTE PTR [rax],al
   140022d4e:	add    BYTE PTR [rax],al
   140022d50:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140022d52:	jbe    0x140022db5
   140022d54:	ins    BYTE PTR es:[rdi],dx
   140022d55:	imul   esp,DWORD PTR [rax+riz*1+0x69],0x726f706d
   140022d5d:	je     0x140022d7f
   140022d5f:	jno    0x140022dd6
   140022d61:	(bad)  
   140022d62:	ins    BYTE PTR es:[rdi],dx
   140022d63:	imul   esp,DWORD PTR [rsi+0x69],0x7265
   140022d6a:	add    BYTE PTR [rax],al
   140022d6c:	add    BYTE PTR [rax],al
   140022d6e:	add    BYTE PTR [rax],al
   140022d70:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140022d72:	fs jne 0x140022de1
   140022d75:	and    BYTE PTR gs:[rcx+0x6d],ch
   140022d79:	jo     0x140022dea
   140022d7b:	jb     0x140022df1
   140022d7d:	and    BYTE PTR [rdx+0x65],dh
   140022d80:	jno    0x140022df7
   140022d82:	imul   esi,DWORD PTR [rdx+0x65],0x20612073
   140022d89:	jbe    0x140022df0
   140022d8b:	jb     0x140022e00
   140022d8d:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
   140022d94:	(bad)  
   140022d95:	jae    0x140022d97
   140022d97:	add    BYTE PTR [rcx+0x6e],cl
   140022d9a:	jbe    0x140022dfd
   140022d9c:	ins    BYTE PTR es:[rdi],dx
   140022d9d:	imul   esp,DWORD PTR [rax+riz*1+0x6d],0x6c75646f
   140022da5:	and    BYTE PTR gs:[rbp+0x52],dl
   140022da9:	rex.WB add BYTE PTR [r8],al
   140022dac:	add    BYTE PTR [rax],al
   140022dae:	add    BYTE PTR [rax],al
   140022db0:	rex.WB ins DWORD PTR es:[rdi],dx
   140022db2:	jo     0x140022e23
   140022db4:	jb     0x140022e2a
   140022db6:	gs and BYTE PTR fs:[rsi+0x69],ah
   140022dbb:	ins    BYTE PTR es:[rdi],dx
   140022dbc:	and    BYTE PTR gs:[rbp+0x75],ch
   140022dc0:	jae    0x140022e36
   140022dc2:	and    BYTE PTR [rdx+0x65],ah
   140022dc5:	and    BYTE PTR [rcx+0x20],ah
   140022dc8:	jae    0x140022e2d
   140022dca:	jb     0x140022e35
   140022dcc:	jo     0x140022e42
   140022dce:	add    BYTE PTR [rax],al
   140022dd0:	push   0x73
   140022dd2:	add    BYTE PTR [rax],al
   140022dd4:	add    BYTE PTR [rax],al
   140022dd6:	add    BYTE PTR [rax],al
   140022dd8:	ins    BYTE PTR es:[rdi],dx
   140022dd9:	imul   esp,DWORD PTR [rdx+0x72],0x797261
   140022de0:	imul   ebp,DWORD PTR [rbp+0x70],0x74726f
   140022de7:	add    BYTE PTR [rax+0x72],dh
   140022dea:	(bad)  
   140022deb:	ins    DWORD PTR es:[edi],dx
   140022ded:	(bad)  
   140022dee:	add    BYTE PTR [rax],al
   140022df0:	jae    0x140022e57
   140022df2:	je     0x140022df4
   140022df4:	addr32 gs je 0x140022df8
   140022df8:	outs   dx,DWORD PTR ds:[rsi]
   140022df9:	outs   dx,BYTE PTR ds:[rsi]
   140022dfa:	add    BYTE PTR [rax],al
   140022dfc:	jo     0x140022e73
   140022dfe:	(bad)  
   140022dff:	ins    BYTE PTR es:[rdi],dx
   140022e00:	imul   esp,DWORD PTR [rbx+0x0],0x0
   140022e07:	add    BYTE PTR [rbx+0x6f],ah
   140022e0a:	ins    DWORD PTR es:[rdi],dx
   140022e0b:	ins    DWORD PTR es:[rdi],dx
   140022e0c:	outs   dx,BYTE PTR gs:[rsi]
   140022e0e:	je     0x140022e10
   140022e10:	ins    DWORD PTR es:[rdi],dx
   140022e11:	jne    0x140022e7f
   140022e13:	je     0x140022e7e
   140022e15:	ins    BYTE PTR es:[rdi],dx
   140022e16:	imul   ebp,DWORD PTR [rsi+0x65],0x72747320
   140022e1d:	imul   ebp,DWORD PTR [rsi+0x67],0x74696c20
   140022e24:	gs jb  0x140022e88
   140022e27:	ins    BYTE PTR es:[rdi],dx
	...
   140022e30:	jb     0x140022e97
   140022e32:	jae    0x140022e99
   140022e34:	jb     0x140022eac
   140022e36:	gs and BYTE PTR fs:[rdi+0x6f],dh
   140022e3b:	jb     0x140022ea1
   140022e3d:	add    BYTE PTR [rax],al
   140022e3f:	add    BYTE PTR [rbp+riz*2+0x62],ah
   140022e43:	jne    0x140022eac
   140022e45:	addr32 gs jb 0x140022e49
   140022e49:	add    BYTE PTR [rax],al
   140022e4b:	add    BYTE PTR [rbx+0x6f],ah
   140022e4e:	outs   dx,BYTE PTR ds:[rsi]
   140022e4f:	jae    0x140022ec5
   140022e51:	add    BYTE PTR [rax],al
   140022e53:	add    BYTE PTR [rsi+0x61],ah
   140022e56:	ins    BYTE PTR es:[rdi],dx
   140022e57:	jae    0x140022ebe
   140022e59:	add    BYTE PTR [rax],al
   140022e5b:	add    BYTE PTR [rdx+rsi*2+0x75],dh
   140022e5f:	add    BYTE PTR gs:[rax],al
   140022e62:	add    BYTE PTR [rax],al
   140022e64:	outs   dx,BYTE PTR ds:[rsi]
   140022e65:	jne    0x140022ed3
   140022e67:	ins    BYTE PTR es:[rdi],dx
   140022e68:	add    BYTE PTR [rax],al
   140022e6a:	add    BYTE PTR [rax],al
   140022e6c:	pop    rsi
   140022e6d:	cmp    eax,0x5e0000
   140022e72:	add    BYTE PTR [rax],al
   140022e74:	ja     0x140022edf
   140022e76:	je     0x140022ee0
   140022e78:	add    BYTE PTR [rax],al
   140022e7a:	add    BYTE PTR [rax],al
   140022e7c:	ja     0x140022ee6
   140022e7e:	imul   ebp,DWORD PTR [rbp+riz*2+0x0],0x6f760000
   140022e86:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x61760000
   140022e8e:	jb     0x140022e90
   140022e90:	je     0x140022f0b
   140022e92:	jo     0x140022ef9
   140022e94:	outs   dx,DWORD PTR ds:[rsi]
   140022e95:	data16 add BYTE PTR [rax],al
   140022e98:	je     0x140022f0c
   140022e9a:	jns    0x140022e9c
   140022e9c:	jle    0x140022e9e
   140022e9e:	add    BYTE PTR [rax],al
   140022ea0:	je     0x140022f0a
   140022ea2:	jb     0x140022f13
   140022ea4:	ja     0x140022ea6
   140022ea6:	add    BYTE PTR [rax],al
   140022ea8:	je     0x140022f12
   140022eaa:	imul   esi,DWORD PTR [rbx+0x0],0x73000000
   140022eb1:	ja     0x140022f1c
   140022eb3:	je     0x140022f18
   140022eb5:	push   0x65720000
   140022eba:	(bad)  
   140022ebb:	outs   dx,DWORD PTR fs:[rsi]
   140022ebd:	outs   dx,BYTE PTR ds:[rsi]
   140022ebe:	ins    BYTE PTR es:[rdi],dx
   140022ebf:	jns    0x140022ec1
   140022ec1:	add    BYTE PTR [rax],al
   140022ec3:	add    BYTE PTR [rbx+0x69],dh
   140022ec6:	outs   dx,BYTE PTR ds:[esi]
   140022ec8:	(bad)  
   140022ec9:	ins    BYTE PTR es:[rdi],dx
   140022eca:	add    BYTE PTR [rax],al
   140022ecc:	add    BYTE PTR [rax],al
   140022ece:	add    BYTE PTR [rax],al
   140022ed0:	jo     0x140022f44
   140022ed2:	outs   dx,DWORD PTR ds:[rsi]
   140022ed3:	jo     0x140022f3a
   140022ed5:	jb     0x140022f4b
   140022ed7:	jns    0x140022ed9
   140022ed9:	add    BYTE PTR [rax],al
   140022edb:	add    BYTE PTR [rax],al
   140022edd:	add    BYTE PTR [rax],al
   140022edf:	add    BYTE PTR [rbx+0x74],dh
   140022ee2:	jb     0x140022f4d
   140022ee4:	outs   dx,BYTE PTR ds:[rsi]
   140022ee5:	and    BYTE PTR [ecx+ebp*2+0x74],ch
   140022eea:	gs jb  0x140022f4e
   140022eed:	ins    BYTE PTR es:[rdi],dx
   140022eee:	add    BYTE PTR [rax],al
   140022ef0:	sub    bh,BYTE PTR [rip+0x2a0000]        # 0x1402c2ef6
   140022ef6:	add    BYTE PTR [rax],al
   140022ef8:	cmp    eax,DWORD PTR [rax]
   140022efa:	add    BYTE PTR [rax],al
   140022efc:	sub    DWORD PTR [rax],eax
   140022efe:	add    BYTE PTR [rax],al
   140022f00:	jb     0x140022f67
   140022f02:	je     0x140022f79
   140022f04:	jb     0x140022f74
   140022f06:	add    BYTE PTR [rax],al
   140022f08:	and    eax,0x2500003d
   140022f0d:	add    BYTE PTR [rax],al
   140022f0f:	add    BYTE PTR [rbp+0x0],bl
   140022f12:	add    BYTE PTR [rax],al
   140022f14:	jge    0x140022f16
   140022f16:	add    BYTE PTR [rax],al
   140022f18:	(bad)  
   140022f19:	add    BYTE PTR [rax],al
   140022f1b:	add    BYTE PTR [rbx],ch
   140022f1d:	sub    eax,DWORD PTR [rax]
   140022f1f:	add    BYTE PTR [rbx],ch
   140022f21:	cmp    eax,0x2b0000
   140022f26:	add    BYTE PTR [rax],al
   140022f28:	jl     0x140022fa6
   140022f2a:	add    BYTE PTR [rax],al
   140022f2c:	jl     0x140022f6b
   140022f2e:	add    BYTE PTR [rax],al
   140022f30:	jl     0x140022f32
   140022f32:	add    BYTE PTR [rax],al
   140022f34:	add    BYTE PTR [rax],al
   140022f36:	add    BYTE PTR [rax],al
   140022f38:	outs   dx,BYTE PTR ds:[rsi]
   140022f39:	jne    0x140022fa8
   140022f3b:	gs jb  0x140022fa7
   140022f3e:	movsxd esp,DWORD PTR [rax]
   140022f40:	ins    BYTE PTR es:[rdi],dx
   140022f41:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x21006c61
   140022f49:	cmp    eax,0x3d21003d
   140022f4e:	add    BYTE PTR [rax],al
   140022f50:	and    DWORD PTR [rax],eax
   140022f52:	add    BYTE PTR [rax],al
   140022f54:	outs   dx,BYTE PTR ds:[rsi]
   140022f55:	gs ja  0x140022f58
   140022f58:	sub    eax,0x2d00002d
   140022f5d:	cmp    eax,0x3c3c0000
   140022f62:	cmp    eax,0x3c3c00
   140022f67:	add    BYTE PTR [rax+rax*1],bh
   140022f6a:	add    BYTE PTR [rax],al
   140022f6c:	sub    BYTE PTR [rax],al
   140022f6e:	add    BYTE PTR [rax],al
   140022f70:	cmp    al,0x3d
   140022f72:	add    BYTE PTR [rax],al
   140022f74:	pop    rbx
   140022f75:	add    BYTE PTR [rax],al
   140022f77:	add    BYTE PTR [rbx+0x0],bh
   140022f7a:	add    BYTE PTR [rax],al
   140022f7c:	add    BYTE PTR [rax],al
   140022f7e:	add    BYTE PTR [rax],al
   140022f80:	imul   ebp,DWORD PTR [rsi+0x73],0x636e6174
   140022f87:	outs   dx,DWORD PTR gs:[rsi]
   140022f89:	data16 add BYTE PTR [rax],al
   140022f8c:	imul   ebp,DWORD PTR [rsi+0x0],0x666900
   140022f93:	add    BYTE PTR [rax],al
   140022f95:	add    BYTE PTR [rax],al
   140022f97:	add    BYTE PTR [rcx+0x64],ch
   140022f9a:	outs   dx,BYTE PTR gs:[rsi]
   140022f9c:	je     0x140023007
   140022f9e:	imul   sp,WORD PTR [rbp+0x72],0x0
   140022fa4:	ds ds ds cmp eax,0x0
   140022fac:	ds ds add BYTE PTR ds:[rsi],bh
   140022fb1:	ds cmp eax,0x3e3e00
   140022fb7:	add    BYTE PTR [rsi],bh
   140022fb9:	add    BYTE PTR [rax],al
   140022fbb:	add    BYTE PTR [rsi],bh
   140022fbd:	cmp    eax,0x75660000
   140022fc2:	outs   dx,BYTE PTR ds:[rsi]
   140022fc3:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140022fc7:	outs   dx,BYTE PTR ds:[rsi]
   140022fc8:	add    BYTE PTR [rax],al
   140022fca:	add    BYTE PTR [rax],al
   140022fcc:	outs   dx,WORD PTR ds:[rsi]
   140022fce:	jb     0x140022fd0
   140022fd0:	imul   bp,WORD PTR [rsi+0x61],0x6c6c
   140022fd6:	jns    0x140022fd8
   140022fd8:	cmp    eax,0x3d003d3d
   140022fdd:	cmp    eax,0x3d0000
   140022fe2:	add    BYTE PTR [rax],al
   140022fe4:	gs ins BYTE PTR es:[rdi],dx
   140022fe6:	jae    0x14002304d
   140022fe8:	add    BYTE PTR [rax],al
   140022fea:	add    BYTE PTR [rax],al
   140022fec:	add    BYTE PTR cs:[rax],al
   140022fef:	add    BYTE PTR [rdi+rbp*2+0x0],ah
   140022ff3:	add    BYTE PTR [rdi],ch
   140022ff5:	cmp    eax,0x2f0000
   140022ffa:	add    BYTE PTR [rax],al
   140022ffc:	fs gs ins BYTE PTR es:[rdi],dx
   140022fff:	gs je  0x140023067
   140023002:	add    BYTE PTR [rax],al
   140023004:	add    BYTE PTR [rax],al
   140023006:	add    BYTE PTR [rax],al
   140023008:	fs gs data16 (bad) 
   14002300c:	jne    0x14002307a
   14002300e:	je     0x140023010
   140023010:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140023013:	je     0x14002307e
   140023015:	outs   dx,BYTE PTR ds:[rsi]
   140023016:	jne    0x14002307d
   140023018:	add    BYTE PTR [rax],al
   14002301a:	add    BYTE PTR [rax],al
   14002301c:	sub    al,0x0
   14002301e:	add    BYTE PTR [rax],al
   140023020:	cmp    al,BYTE PTR [rax]
   140023022:	add    BYTE PTR [rax],al
   140023024:	movsxd esp,DWORD PTR [rcx+0x74]
   140023027:	movsxd ebp,DWORD PTR [rax+0x0]
   14002302a:	add    BYTE PTR [rax],al
   14002302c:	movsxd esp,DWORD PTR [rcx+0x73]
   14002302f:	add    BYTE PTR gs:[rax],al
   140023032:	add    BYTE PTR [rax],al
   140023034:	(bad)
   140023039:	add    BYTE PTR [rax],al
   14002303b:	add    BYTE PTR [rsi],ah
   14002303d:	cmp    eax,0x26260000
   140023042:	add    BYTE PTR [rax],al
   140023044:	add    BYTE PTR es:[rax],al
   140023047:	add    BYTE PTR [rbp+0x6e],ah
   14002304a:	and    BYTE PTR fs:[rdi+0x66],ch
   14002304e:	and    BYTE PTR [rsi+0x69],ah
   140023051:	ins    BYTE PTR es:[rdi],dx
   140023052:	add    BYTE PTR gs:[rax],al
	...
   14002305d:	add    BYTE PTR [rax],al
   14002305f:	add    BYTE PTR [rax+0x30],cl
   140023062:	add    al,BYTE PTR [rax+0x1]
   140023065:	add    BYTE PTR [rax],al
   140023067:	add    BYTE PTR [rax+rsi*1+0x2],al
   14002306b:	rex add DWORD PTR [rax],eax
   14002306e:	add    BYTE PTR [rax],al
   140023070:	xor    BYTE PTR [rdx],al
   140023073:	rex add DWORD PTR [rax],eax
   140023076:	add    BYTE PTR [rax],al
   140023078:	cmp    al,0x30
   14002307a:	add    al,BYTE PTR [rax+0x1]
   14002307d:	add    BYTE PTR [rax],al
   14002307f:	add    BYTE PTR [rax+rsi*1],dh
   140023082:	add    al,BYTE PTR [rax+0x1]
   140023085:	add    BYTE PTR [rax],al
   140023087:	add    BYTE PTR [rax+rsi*1],ch
   14002308a:	add    al,BYTE PTR [rax+0x1]
   14002308d:	add    BYTE PTR [rax],al
   14002308f:	add    BYTE PTR [rax+rsi*1],ah
   140023092:	add    al,BYTE PTR [rax+0x1]
   140023095:	add    BYTE PTR [rax],al
   140023097:	add    BYTE PTR [rax],ah
   140023099:	xor    BYTE PTR [rdx],al
   14002309b:	rex add DWORD PTR [rax],eax
   14002309e:	add    BYTE PTR [rax],al
   1400230a0:	sbb    al,0x30
   1400230a2:	add    al,BYTE PTR [rax+0x1]
   1400230a5:	add    BYTE PTR [rax],al
   1400230a7:	add    BYTE PTR [rax],dl
   1400230a9:	xor    BYTE PTR [rdx],al
   1400230ab:	rex add DWORD PTR [rax],eax
   1400230ae:	add    BYTE PTR [rax],al
   1400230b0:	or     BYTE PTR [rax],dh
   1400230b2:	add    al,BYTE PTR [rax+0x1]
   1400230b5:	add    BYTE PTR [rax],al
   1400230b7:	add    ah,bh
   1400230b9:	(bad)  
   1400230ba:	add    al,BYTE PTR [rax+0x1]
   1400230bd:	add    BYTE PTR [rax],al
   1400230bf:	add    al,bh
   1400230c1:	(bad)  
   1400230c2:	add    al,BYTE PTR [rax+0x1]
   1400230c5:	add    BYTE PTR [rax],al
   1400230c7:	add    ah,dh
   1400230c9:	(bad)  
   1400230ca:	add    al,BYTE PTR [rax+0x1]
   1400230cd:	add    BYTE PTR [rax],al
   1400230cf:	add    al,dh
   1400230d1:	(bad)  
   1400230d2:	add    al,BYTE PTR [rax+0x1]
   1400230d5:	add    BYTE PTR [rax],al
   1400230d7:	add    ah,ch
   1400230d9:	(bad)  
   1400230da:	add    al,BYTE PTR [rax+0x1]
   1400230dd:	add    BYTE PTR [rax],al
   1400230df:	add    ah,ah
   1400230e1:	(bad)  
   1400230e2:	add    al,BYTE PTR [rax+0x1]
   1400230e5:	add    BYTE PTR [rax],al
   1400230e7:	add    al,ah
   1400230e9:	(bad)  
   1400230ea:	add    al,BYTE PTR [rax+0x1]
   1400230ed:	add    BYTE PTR [rax],al
   1400230ef:	add    ah,bl
   1400230f1:	(bad)  
   1400230f2:	add    al,BYTE PTR [rax+0x1]
   1400230f5:	add    BYTE PTR [rax],al
   1400230f7:	add    al,bl
   1400230f9:	(bad)  
   1400230fa:	add    al,BYTE PTR [rax+0x1]
   1400230fd:	add    BYTE PTR [rax],al
   1400230ff:	add    al,dl
   140023101:	(bad)  
   140023102:	add    al,BYTE PTR [rax+0x1]
   140023105:	add    BYTE PTR [rax],al
   140023107:	add    ah,cl
   140023109:	(bad)  
   14002310a:	add    al,BYTE PTR [rax+0x1]
   14002310d:	add    BYTE PTR [rax],al
   14002310f:	add    al,al
   140023111:	(bad)  
   140023112:	add    al,BYTE PTR [rax+0x1]
   140023115:	add    BYTE PTR [rax],al
   140023117:	add    BYTE PTR [rdi+rbp*1+0x14002],bh
   14002311e:	add    BYTE PTR [rax],al
   140023120:	mov    eax,0x140022f
   140023125:	add    BYTE PTR [rax],al
   140023127:	add    BYTE PTR [rdi+rbp*1+0x14002],dh
   14002312e:	add    BYTE PTR [rax],al
   140023130:	mov    al,0x2f
   140023132:	add    al,BYTE PTR [rax+0x1]
   140023135:	add    BYTE PTR [rax],al
   140023137:	add    BYTE PTR [rdi+rbp*1+0x14002],ch
   14002313e:	add    BYTE PTR [rax],al
   140023140:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140023141:	(bad)  
   140023142:	add    al,BYTE PTR [rax+0x1]
   140023145:	add    BYTE PTR [rax],al
   140023147:	add    BYTE PTR [rax+0x140022f],bl
   14002314d:	add    BYTE PTR [rax],al
   14002314f:	add    BYTE PTR [rax+0x140022f],dl
   140023155:	add    BYTE PTR [rax],al
   140023157:	add    BYTE PTR [rdi+rbp*1+0x14002],cl
   14002315e:	add    BYTE PTR [rax],al
   140023160:	sub    BYTE PTR [rdi],0x2
   140023163:	rex add DWORD PTR [rax],eax
   140023166:	add    BYTE PTR [rax],al
   140023168:	js     0x140023199
   14002316a:	add    al,BYTE PTR [rax+0x1]
   14002316d:	add    BYTE PTR [rax],al
   14002316f:	add    BYTE PTR [rdi+rbp*1+0x2],dh
   140023173:	rex add DWORD PTR [rax],eax
   140023176:	add    BYTE PTR [rax],al
   140023178:	jo     0x1400231a9
   14002317a:	add    al,BYTE PTR [rax+0x1]
   14002317d:	add    BYTE PTR [rax],al
   14002317f:	add    BYTE PTR [rdi+rbp*1+0x2],ch
   140023183:	rex add DWORD PTR [rax],eax
   140023186:	add    BYTE PTR [rax],al
   140023188:	push   0x140022f
   14002318d:	add    BYTE PTR [rax],al
   14002318f:	add    BYTE PTR [rdi+rbp*1+0x2],ah
   140023193:	rex add DWORD PTR [rax],eax
   140023196:	add    BYTE PTR [rax],al
   140023198:	(bad)  
   140023199:	(bad)  
   14002319a:	add    al,BYTE PTR [rax+0x1]
   14002319d:	add    BYTE PTR [rax],al
   14002319f:	add    BYTE PTR [rax],dh
   1400231a1:	or     eax,DWORD PTR [rdx]
   1400231a3:	rex add DWORD PTR [rax],eax
   1400231a6:	add    BYTE PTR [rax],al
   1400231a8:	pop    rsp
   1400231a9:	(bad)  
   1400231aa:	add    al,BYTE PTR [rax+0x1]
   1400231ad:	add    BYTE PTR [rax],al
   1400231af:	add    BYTE PTR [rax+0x2f],bl
   1400231b2:	add    al,BYTE PTR [rax+0x1]
   1400231b5:	add    BYTE PTR [rax],al
   1400231b7:	add    BYTE PTR [rdi+rbp*1+0x2],dl
   1400231bb:	rex add DWORD PTR [rax],eax
   1400231be:	add    BYTE PTR [rax],al
   1400231c0:	push   rax
   1400231c1:	(bad)  
   1400231c2:	add    al,BYTE PTR [rax+0x1]
   1400231c5:	add    BYTE PTR [rax],al
   1400231c7:	add    BYTE PTR [rdi+rbp*1+0x2],cl
   1400231cb:	rex add DWORD PTR [rax],eax
   1400231ce:	add    BYTE PTR [rax],al
   1400231d0:	rex.W (bad) 
   1400231d2:	add    al,BYTE PTR [rax+0x1]
   1400231d5:	add    BYTE PTR [rax],al
   1400231d7:	add    BYTE PTR [rax],bh
   1400231d9:	(bad)  
   1400231da:	add    al,BYTE PTR [rax+0x1]
   1400231dd:	add    BYTE PTR [rax],al
   1400231df:	add    BYTE PTR [rax],dh
   1400231e1:	(bad)  
   1400231e2:	add    al,BYTE PTR [rax+0x1]
   1400231e5:	add    BYTE PTR [rax],al
   1400231e7:	add    BYTE PTR [rdi+rbp*1],ch
   1400231ea:	add    al,BYTE PTR [rax+0x1]
   1400231ed:	add    BYTE PTR [rax],al
   1400231ef:	add    BYTE PTR [rax],ch
   1400231f1:	(bad)  
   1400231f2:	add    al,BYTE PTR [rax+0x1]
   1400231f5:	add    BYTE PTR [rax],al
   1400231f7:	add    BYTE PTR [rdi+rbp*1],ah
   1400231fa:	add    al,BYTE PTR [rax+0x1]
   1400231fd:	add    BYTE PTR [rax],al
   1400231ff:	add    BYTE PTR [rax],ah
   140023201:	(bad)  
   140023202:	add    al,BYTE PTR [rax+0x1]
   140023205:	add    BYTE PTR [rax],al
   140023207:	add    BYTE PTR [rdi+rbp*1],bl
   14002320a:	add    al,BYTE PTR [rax+0x1]
   14002320d:	add    BYTE PTR [rax],al
   14002320f:	add    BYTE PTR [rax],bl
   140023211:	(bad)  
   140023212:	add    al,BYTE PTR [rax+0x1]
   140023215:	add    BYTE PTR [rax],al
   140023217:	add    BYTE PTR [rdi+rbp*1],dl
   14002321a:	add    al,BYTE PTR [rax+0x1]
   14002321d:	add    BYTE PTR [rax],al
   14002321f:	add    BYTE PTR [rax],dl
   140023221:	(bad)  
   140023222:	add    al,BYTE PTR [rax+0x1]
   140023225:	add    BYTE PTR [rax],al
   140023227:	add    BYTE PTR [rdi+rbp*1],cl
   14002322a:	add    al,BYTE PTR [rax+0x1]
   14002322d:	add    BYTE PTR [rax],al
   14002322f:	add    BYTE PTR [rax],cl
   140023231:	(bad)  
   140023232:	add    al,BYTE PTR [rax+0x1]
   140023235:	add    BYTE PTR [rax],al
   140023237:	add    BYTE PTR [rax],al
   140023239:	(bad)  
   14002323a:	add    al,BYTE PTR [rax+0x1]
   14002323d:	add    BYTE PTR [rax],al
   14002323f:	add    ah,bh
   140023241:	add    al,BYTE PTR cs:[rax+0x1]
   140023245:	add    BYTE PTR [rax],al
   140023247:	add    al,bh
   140023249:	add    al,BYTE PTR cs:[rax+0x1]
	...
   140023255:	add    BYTE PTR [rax],al
   140023257:	add    ah,dh
   140023259:	add    al,BYTE PTR cs:[rax+0x1]
   14002325d:	add    BYTE PTR [rax],al
   14002325f:	add    al,dh
   140023261:	add    al,BYTE PTR cs:[rax+0x1]
   140023265:	add    BYTE PTR [rax],al
   140023267:	add    al,ah
   140023269:	add    al,BYTE PTR cs:[rax+0x1]
   14002326d:	add    BYTE PTR [rax],al
   14002326f:	add    al,dl
   140023271:	add    al,BYTE PTR cs:[rax+0x1]
   140023275:	add    BYTE PTR [rax],al
   140023277:	add    ah,al
   140023279:	add    al,BYTE PTR cs:[rax+0x1]
   14002327d:	add    BYTE PTR [rax],al
   14002327f:	add    BYTE PTR [rax+0x140022e],bh
   140023285:	add    BYTE PTR [rax],al
   140023287:	add    BYTE PTR [rax+0x140022e],dh
   14002328d:	add    BYTE PTR [rax],al
   14002328f:	add    BYTE PTR [rax+0x140022e],ch
   140023295:	add    BYTE PTR [rax],al
   140023297:	add    BYTE PTR [rax+0x140022e],ah
   14002329d:	add    BYTE PTR [rax],al
   14002329f:	add    BYTE PTR [rsi+rbp*1+0x14002],bl
   1400232a6:	add    BYTE PTR [rax],al
   1400232a8:	cwde   
   1400232a9:	add    al,BYTE PTR cs:[rax+0x1]
   1400232ad:	add    BYTE PTR [rax],al
   1400232af:	add    BYTE PTR [rax+0x140022e],dl
   1400232b5:	add    BYTE PTR [rax],al
   1400232b7:	add    BYTE PTR [rsi+rbp*1+0x14002],cl
   1400232be:	add    BYTE PTR [rax],al
   1400232c0:	test   BYTE PTR [rsi],ch
   1400232c2:	add    al,BYTE PTR [rax+0x1]
   1400232c5:	add    BYTE PTR [rax],al
   1400232c7:	add    BYTE PTR [rsi+rbp*1+0x2],bh
   1400232cb:	rex add DWORD PTR [rax],eax
   1400232ce:	add    BYTE PTR [rax],al
   1400232d0:	je     0x140023300
   1400232d2:	add    al,BYTE PTR [rax+0x1]
   1400232d5:	add    BYTE PTR [rax],al
   1400232d7:	add    BYTE PTR [rax+0x2e],dh
   1400232da:	add    al,BYTE PTR [rax+0x1]
   1400232dd:	add    BYTE PTR [rax],al
   1400232df:	add    BYTE PTR [rsi+rbp*1+0x2],ch
   1400232e3:	rex add DWORD PTR [rax],eax
   1400232e6:	add    BYTE PTR [rax],al
   1400232e8:	fs add al,BYTE PTR cs:[rax+0x1]
   1400232ed:	add    BYTE PTR [rax],al
   1400232ef:	add    BYTE PTR [rsi+rbp*1+0x2],bl
   1400232f3:	rex add DWORD PTR [rax],eax
   1400232f6:	add    BYTE PTR [rax],al
   1400232f8:	push   rsp
   1400232f9:	add    al,BYTE PTR cs:[rax+0x1]
   1400232fd:	add    BYTE PTR [rax],al
   1400232ff:	add    BYTE PTR [rsi+rbp*1+0x2],cl
   140023303:	rex add DWORD PTR [rax],eax
   140023306:	add    BYTE PTR [rax],al
   140023308:	rex
   140023309:	add    al,BYTE PTR cs:[rax+0x1]
   14002330d:	add    BYTE PTR [rax],al
   14002330f:	add    BYTE PTR [rax],dh
   140023311:	add    al,BYTE PTR cs:[rax+0x1]
   140023315:	add    BYTE PTR [rax],al
   140023317:	add    BYTE PTR [rax],dl
   140023319:	add    al,BYTE PTR cs:[rax+0x1]
   14002331d:	add    BYTE PTR [rax],al
   14002331f:	add    BYTE PTR [rax],cl
   140023321:	add    al,BYTE PTR cs:[rax+0x1]
	...
   14002332d:	add    BYTE PTR [rax],al
   14002332f:	add    ah,bh
   140023331:	sub    eax,0x14002
   140023336:	add    BYTE PTR [rax],al
   140023338:	loopne 0x140023367
   14002333a:	add    al,BYTE PTR [rax+0x1]
   14002333d:	add    BYTE PTR [rax],al
   14002333f:	add    al,ch
   140023341:	sub    eax,0x14002
   140023346:	add    BYTE PTR [rax],al
   140023348:	xchg   esp,eax
   140023349:	sub    eax,0x14002
   14002334e:	add    BYTE PTR [rax],al
   140023350:	clc    
   140023351:	sub    eax,0x14002
   140023356:	add    BYTE PTR [rax],al
   140023358:	hlt    
   140023359:	sub    eax,0x14002
   14002335e:	add    BYTE PTR [rax],al
   140023360:	lock sub eax,0x14002
	...
   1400233ae:	add    BYTE PTR [rax],al
   1400233b0:	push   0x0
   1400233b2:	push   0x0
   1400233b4:	push   0x0
   1400233b6:	push   0x0
   1400233b8:	push   0x0
   1400233ba:	push   0x0
   1400233bc:	imul   eax,DWORD PTR [rax],0x71
   1400233bf:	add    BYTE PTR [rcx+0x0],dh
   1400233c2:	je     0x1400233c4
   1400233c4:	je     0x1400233c6
   1400233c6:	je     0x1400233c8
   1400233c8:	je     0x1400233ca
   1400233ca:	ja     0x1400233cc
   1400233cc:	jns    0x1400233ce
   1400233ce:	jne    0x1400233d0
   1400233d0:	jne    0x1400233d2
   1400233d2:	jbe    0x1400233d4
   1400233d4:	jbe    0x1400233d6
   1400233d6:	jbe    0x1400233d8
   1400233d8:	jbe    0x1400233da
   1400233da:	jbe    0x1400233dc
   1400233dc:	jbe    0x1400233de
   1400233de:	jbe    0x1400233e0
   1400233e0:	jbe    0x1400233e2
   1400233e2:	jp     0x1400233e4
   1400233e4:	jnp    0x1400233e6
   1400233e6:	jae    0x1400233e8
   1400233e8:	jb     0x1400233ea
   1400233ea:	jle    0x1400233ec
   1400233ec:	jle    0x1400233ee
   1400233ee:	jg     0x1400233f0
   1400233f0:	jg     0x1400233f2
   1400233f2:	add    BYTE PTR [rax],0x80
   1400233f5:	add    BYTE PTR [rbp+0x0],bh
   1400233f8:	outs   dx,DWORD PTR ds:[rsi]
   1400233f9:	add    BYTE PTR [rdi+0x0],ch
   1400233fc:	outs   dx,DWORD PTR ds:[rsi]
   1400233fd:	add    BYTE PTR [rdi+0x0],ch
   140023400:	(bad)  
   140023401:	add    BYTE PTR [rdx-0x7dff7e00],al
   140023407:	add    BYTE PTR [rdx-0x7dff7e00],al
   14002340d:	add    BYTE PTR [rdi+0x0],ch
   140023410:	mov    al,BYTE PTR [rax]
   140023412:	mov    al,BYTE PTR [rax]
   140023414:	mov    al,BYTE PTR [rax]
   140023416:	mov    eax,DWORD PTR [rax]
   140023418:	mov    eax,DWORD PTR [rax]
   14002341a:	mov    WORD PTR [rax],es
   14002341c:	mov    WORD PTR [rax],es
   14002341e:	outs   dx,DWORD PTR ds:[rsi]
   14002341f:	add    BYTE PTR [rdi+0x0],ch
   140023422:	outs   dx,DWORD PTR ds:[rsi]
   140023423:	add    BYTE PTR [rdi+0x0],ch
   140023426:	outs   dx,DWORD PTR ds:[rsi]
   140023427:	add    BYTE PTR [rdi+0x0],ch
   14002342a:	outs   dx,DWORD PTR ds:[rsi]
   14002342b:	add    BYTE PTR [rdi+0x0],ch
   14002342e:	outs   dx,DWORD PTR ds:[rsi]
   14002342f:	add    BYTE PTR [rdi+0x0],ch
   140023432:	outs   dx,DWORD PTR ds:[rsi]
   140023433:	add    BYTE PTR [rdi+0x0],ch
   140023436:	outs   dx,DWORD PTR ds:[rsi]
   140023437:	add    BYTE PTR [rdi+0x0],ch
   14002343a:	outs   dx,DWORD PTR ds:[rsi]
   14002343b:	add    BYTE PTR [rdi+0x0],ch
   14002343e:	outs   dx,DWORD PTR ds:[rsi]
   14002343f:	add    BYTE PTR [rdi+0x0],ch
   140023442:	jl     0x140023444
   140023444:	jl     0x140023446
   140023446:	jl     0x140023448
   140023448:	jl     0x14002344a
   14002344a:	jl     0x14002344c
   14002344c:	jl     0x14002344e
   14002344e:	jl     0x140023450
   140023450:	pop    QWORD PTR [rax]
   140023452:	pop    QWORD PTR [rax]
   140023454:	pop    QWORD PTR [rax]
   140023456:	pop    QWORD PTR [rax]
   140023458:	pop    QWORD PTR [rax]
   14002345a:	pop    QWORD PTR [rax]
   14002345c:	pop    QWORD PTR [rax]
   14002345e:	pop    QWORD PTR [rax]
   140023460:	pop    QWORD PTR [rax]
   140023462:	pop    QWORD PTR [rax]
   140023464:	pop    QWORD PTR [rax]
   140023466:	pop    QWORD PTR [rax]
   140023468:	pop    QWORD PTR [rax]
   14002346a:	pop    QWORD PTR [rax]
   14002346c:	pop    QWORD PTR [rax]
   14002346e:	pop    QWORD PTR [rax]
   140023470:	pop    QWORD PTR [rax]
   140023472:	pop    QWORD PTR [rax]
   140023474:	add    DWORD PTR [rax],0x910091
   14002347a:	xchg   ecx,eax
   14002347b:	add    BYTE PTR [rcx-0x6fff7000],dl
   140023481:	add    BYTE PTR [rbp-0x6aff6b00],dl
   140023487:	add    BYTE PTR [rbx-0x69ff6d00],dl
   14002348d:	add    BYTE PTR [rsi-0x69ff6a00],dl
   140023493:	add    BYTE PTR [rcx-0x66ff6700],bl
   140023499:	add    BYTE PTR [rcx-0x66ff6700],bl
   14002349f:	add    BYTE PTR [rcx-0x66ff6700],bl
   1400234a5:	add    BYTE PTR [rcx-0x66ff6700],bl
   1400234ab:	add    BYTE PTR [rcx-0x66ff6700],bl
   1400234b1:	add    BYTE PTR [rcx-0x66ff6700],bl
   1400234b7:	add    BYTE PTR [rcx-0x66ff6700],bl
   1400234bd:	add    BYTE PTR [rcx-0x66ff6700],bl
   1400234c3:	add    BYTE PTR [rcx-0x66ff6700],bl
   1400234c9:	add    BYTE PTR [rcx-0x66ff6700],bl
   1400234cf:	add    BYTE PTR [rcx-0x65ff6600],bl
   1400234d5:	add    BYTE PTR [rax+0x0],bh
   1400234d8:	js     0x1400234da
   1400234da:	js     0x1400234dc
   1400234dc:	js     0x1400234de
   1400234de:	js     0x1400234e0
   1400234e0:	popf   
   1400234e1:	add    BYTE PTR [rbp-0x61ff6200],bl
   1400234e7:	add    BYTE PTR [rsi-0x63ff6200],bl
   1400234ed:	add    BYTE PTR [rax+rax*1+0x9f009f],bl
   1400234f4:	movabs al,ds:0xa100a100a100a000
   1400234fd:	add    BYTE PTR [rdx-0x5dff5e00],ah
   140023503:	add    BYTE PTR [rdx-0x5dff5e00],ah
   140023509:	add    BYTE PTR [rdx-0x5dff5e00],ah
   14002350f:	add    BYTE PTR [rdx-0x5cff5d00],ah
   140023515:	add    BYTE PTR [rbx-0x5bff5d00],ah
   14002351b:	add    BYTE PTR [rax+rax*1+0xa500a4],ah
   140023522:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140023523:	add    BYTE PTR [rbp-0x59ff5b00],ah
   140023529:	add    BYTE PTR [rsi-0x59ff5a00],ah
   14002352f:	add    BYTE PTR [rsi-0x59ff5a00],ah
   140023535:	add    BYTE PTR [rdi-0x58ff5900],ah
   14002353b:	add    BYTE PTR [rdi-0x58ff5900],ah
   140023541:	add    BYTE PTR [rax-0x57ff5800],ch
   140023547:	add    BYTE PTR [rax-0x56ff5800],ch
   14002354d:	add    BYTE PTR [rcx-0x56ff5700],ch
   140023553:	add    BYTE PTR [rcx-0x55ff5600],ch
   140023559:	add    BYTE PTR [rbx-0x53ff5500],ch
   14002355f:	add    BYTE PTR [rax+rax*1+0xad00ad],ch
   140023566:	scas   al,BYTE PTR es:[rdi]
   140023567:	add    BYTE PTR [rsi-0x50ff5100],ch
   14002356d:	add    BYTE PTR [rax-0x4eff5000],dh
   140023573:	add    BYTE PTR [rcx-0x4dff4e00],dh
   140023579:	add    BYTE PTR [rbx-0x4bff4d00],dh
   14002357f:	add    BYTE PTR [rax+rax*1+0xb500b5],dh
   140023586:	xchg   esp,eax
   140023587:	add    BYTE PTR [rax+rax*1+0xb600b6],dl
   14002358e:	mov    bh,0x0
   140023590:	mov    bh,0x0
   140023592:	mov    bh,0x0
   140023594:	mov    bh,0x0
   140023596:	mov    bh,0x0
   140023598:	mov    bh,0x0
   14002359a:	mov    bh,0x0
   14002359c:	mov    bh,0x0
   14002359e:	mov    bh,0x0
   1400235a0:	mov    bh,0x0
   1400235a2:	mov    bh,0x0
   1400235a4:	mov    bh,0x0
   1400235a6:	ins    DWORD PTR es:[rdi],dx
   1400235a7:	add    BYTE PTR [rbp+0x0],ch
   1400235aa:	mov    eax,0xb900b800
   1400235af:	add    BYTE PTR [rcx-0x45ff4600],bh
   1400235b5:	add    BYTE PTR [rax+rax*1+0x6c],ch
   1400235b9:	add    BYTE PTR [rax+rax*1+0x6c],ch
   1400235bd:	add    BYTE PTR [rax+rax*1+0x6c],ch
   1400235c1:	add    BYTE PTR [rax+rax*1+0x6c],ch
   1400235c5:	add    BYTE PTR [rax+rax*1+0x6c],ch
   1400235c9:	add    BYTE PTR [rax+rax*1+0x6c],ch
   1400235cd:	add    BYTE PTR [rax+rax*1+0x6c],ch
   1400235d1:	add    BYTE PTR [rax+rax*1-0x7d],ch
   1400235d5:	add    bl,al
   1400235d7:	add    bl,al
   1400235d9:	add    dl,al
   1400235db:	add    dl,al
   1400235dd:	add    BYTE PTR [rsi-0x3bff7200],cl
   1400235e3:	add    ah,al
   1400235e5:	add    ch,al
   1400235e7:	add    ch,al
   1400235e9:	add    bh,al
   1400235eb:	add    bh,al
   1400235ed:	add    dh,al
   1400235ef:	add    al,cl
   1400235f1:	add    bl,cl
   1400235f3:	add    cl,cl
   1400235f5:	add    cl,cl
   1400235f7:	add    ah,cl
   1400235f9:	add    dl,cl
   1400235fb:	add    dl,cl
   1400235fd:	add    BYTE PTR [rax+rax*1+0x850085],al
   140023604:	xchg   BYTE PTR [rax],al
   140023606:	xchg   BYTE PTR [rax],al
   140023608:	mov    ebx,0xbb00bb00
   14002360d:	add    BYTE PTR [rbx-0x44ff4500],bh
   140023613:	add    BYTE PTR [rbx-0x43ff4500],bh
   140023619:	add    BYTE PTR [rax+rax*1+0xbc00bc],bh
   140023620:	mov    ebp,0xbd00bd00
   140023625:	add    BYTE PTR [rbp-0x41ff4200],bh
   14002362b:	add    BYTE PTR [rdi-0x32ff7800],al
   140023631:	add    ch,cl
   140023633:	add    al,dl
   140023635:	add    al,dl
   140023637:	add    dh,cl
   140023639:	add    dh,cl
   14002363b:	add    cl,dl
   14002363d:	add    bh,cl
   14002363f:	add    BYTE PTR [rdi-0x3fff4000],bh
   140023645:	add    BYTE PTR [rcx-0x76ff7700],cl
   14002364b:	add    dl,dl
   14002364d:	add    bl,dl
   14002364f:	add    cl,al
   140023651:	add    cl,al
   140023653:	add    ah,dl
   140023655:	add    BYTE PTR [rbp-0x64ff6500],cl
   14002365b:	add    ch,dl
   14002365d:	add    ch,dl
   14002365f:	add    BYTE PTR [rax-0x68ff6800],bl
   140023665:	add    BYTE PTR [rdi+0x7000d600],dl
   14002366b:	add    BYTE PTR [rax+0x0],dh
   14002366e:	xlat   BYTE PTR ds:[rbx]
   14002366f:	add    bh,dl
   140023671:	add    BYTE PTR [rsi+0x0],ch
   140023674:	outs   dx,BYTE PTR ds:[rsi]
   140023675:	add    BYTE PTR [rdx-0x27ff6e00],dl
   14002367b:	add    BYTE PTR [rax],al
   14002367d:	add    BYTE PTR [rax],al
   14002367f:	add    BYTE PTR [rdx],al
   140023681:	add    BYTE PTR [rdx],al
   140023683:	add    BYTE PTR [rdx],al
   140023685:	add    BYTE PTR [rdx],al
   140023687:	add    BYTE PTR [rdx],al
   140023689:	add    BYTE PTR [rdx],al
   14002368b:	add    BYTE PTR [rdx],al
   14002368d:	add    BYTE PTR [rcx],al
   14002368f:	add    BYTE PTR [rcx],al
   140023691:	add    BYTE PTR [rcx],al
   140023693:	add    BYTE PTR [rcx],al
   140023695:	add    BYTE PTR [rdx],al
   140023697:	add    BYTE PTR [rdx],al
   140023699:	add    BYTE PTR [rcx],al
   14002369b:	add    BYTE PTR [rcx],al
   14002369d:	add    BYTE PTR [rdx],al
   14002369f:	add    BYTE PTR [rdx],al
   1400236a1:	add    BYTE PTR [rdx],al
   1400236a3:	add    BYTE PTR [rdx],al
   1400236a5:	add    BYTE PTR [rbx],al
   1400236a7:	add    BYTE PTR [rbx],al
   1400236a9:	add    BYTE PTR [rip+0x4000500],al        # 0x144023baf
   1400236af:	add    BYTE PTR [rax+rax*1],al
   1400236b2:	add    al,BYTE PTR [rax]
   1400236b4:	add    al,BYTE PTR [rax]
   1400236b6:	add    BYTE PTR [rax],al
   1400236b8:	add    DWORD PTR [rax],eax
   1400236ba:	add    DWORD PTR [rax],eax
   1400236bc:	add    al,BYTE PTR [rax]
   1400236be:	add    DWORD PTR [rax],eax
   1400236c0:	add    eax,DWORD PTR [rax]
   1400236c2:	add    al,BYTE PTR [rax]
   1400236c4:	add    eax,DWORD PTR [rax]
   1400236c6:	add    al,BYTE PTR [rax]
   1400236c8:	add    DWORD PTR [rax],eax
   1400236ca:	add    eax,0x4000400
   1400236cf:	add    BYTE PTR [rcx],al
   1400236d1:	add    BYTE PTR [rcx],al
   1400236d3:	add    BYTE PTR [rcx],al
   1400236d5:	add    BYTE PTR [rcx],al
   1400236d7:	add    BYTE PTR [rcx],al
   1400236d9:	add    BYTE PTR [rcx],al
   1400236db:	add    BYTE PTR [rcx],al
   1400236dd:	add    BYTE PTR [rbx],al
   1400236df:	add    BYTE PTR [rcx],al
   1400236e1:	add    BYTE PTR [rcx],al
   1400236e3:	add    BYTE PTR [rcx],al
   1400236e5:	add    BYTE PTR [rax],al
   1400236e7:	add    BYTE PTR [rcx],al
   1400236e9:	add    BYTE PTR [rdx],al
   1400236eb:	add    BYTE PTR [rax+rax*1],al
   1400236ee:	(bad)  
   1400236ef:	add    BYTE PTR [rsi],al
   1400236f1:	add    BYTE PTR [rbx],al
   1400236f3:	add    BYTE PTR [rbx],al
   1400236f5:	add    BYTE PTR [rdi],al
   1400236f7:	add    BYTE PTR [rdi],al
   1400236f9:	add    BYTE PTR [rax+rax*1],al
   1400236fc:	add    al,0x0
   1400236fe:	add    eax,0x5000500
   140023703:	add    BYTE PTR [rsi],al
   140023705:	add    BYTE PTR [rsi],al
   140023707:	add    BYTE PTR [rdx],cl
   140023709:	add    BYTE PTR [rsi],al
   14002370b:	add    BYTE PTR [rdi],al
   14002370d:	add    BYTE PTR [rcx],al
   14002370f:	add    BYTE PTR [rcx],al
   140023711:	add    BYTE PTR [rcx],al
   140023713:	add    BYTE PTR [rcx],al
   140023715:	add    BYTE PTR [rcx],al
   140023717:	add    BYTE PTR [rcx],al
   140023719:	add    BYTE PTR [rcx],al
   14002371b:	add    BYTE PTR [rcx],al
   14002371d:	add    BYTE PTR [rcx],al
   14002371f:	add    BYTE PTR [rcx],al
   140023721:	add    BYTE PTR [rcx],al
   140023723:	add    BYTE PTR [rcx],al
   140023725:	add    BYTE PTR [rcx],al
   140023727:	add    BYTE PTR [rcx],al
   140023729:	add    BYTE PTR [rcx],al
   14002372b:	add    BYTE PTR [rcx],al
   14002372d:	add    BYTE PTR [rcx],al
   14002372f:	add    BYTE PTR [rcx],al
   140023731:	add    BYTE PTR [rcx],al
   140023733:	add    BYTE PTR [rdx],al
   140023735:	add    BYTE PTR [rbx],al
   140023737:	add    BYTE PTR [rbx],al
   140023739:	add    BYTE PTR [rax+rax*1],al
   14002373c:	add    eax,0x4000300
   140023741:	add    BYTE PTR [rbx],al
   140023743:	add    BYTE PTR [rcx],al
   140023745:	add    BYTE PTR [rcx],al
   140023747:	add    BYTE PTR [rdx],al
   140023749:	add    BYTE PTR [rbx],al
   14002374b:	add    BYTE PTR [rax+rax*1],al
   14002374e:	add    DWORD PTR [rax],eax
   140023750:	add    al,BYTE PTR [rax]
   140023752:	add    eax,DWORD PTR [rax]
   140023754:	(bad)  
   140023755:	add    BYTE PTR [rax],cl
   140023757:	add    BYTE PTR [rcx],al
   140023759:	add    BYTE PTR [rbx],al
   14002375b:	add    BYTE PTR [rcx],al
   14002375d:	add    BYTE PTR [rcx],al
   14002375f:	add    BYTE PTR [rcx],al
   140023761:	add    BYTE PTR [rcx],al
   140023763:	add    BYTE PTR [rcx],al
   140023765:	add    BYTE PTR [rcx],al
   140023767:	add    BYTE PTR [rcx],al
   140023769:	add    BYTE PTR [rcx],al
   14002376b:	add    BYTE PTR [rcx],al
   14002376d:	add    BYTE PTR [rcx],al
   14002376f:	add    BYTE PTR [rcx],al
   140023771:	add    BYTE PTR [rcx],al
   140023773:	add    BYTE PTR [rcx],al
   140023775:	add    BYTE PTR [rcx],al
   140023777:	add    BYTE PTR [rcx],al
   140023779:	add    BYTE PTR [rcx],al
   14002377b:	add    BYTE PTR [rcx],al
   14002377d:	add    BYTE PTR [rcx],al
   14002377f:	add    BYTE PTR [rcx],al
   140023781:	add    BYTE PTR [rcx],al
   140023783:	add    BYTE PTR [rcx],al
   140023785:	add    BYTE PTR [rcx],al
   140023787:	add    BYTE PTR [rcx],al
   140023789:	add    BYTE PTR [rcx],al
   14002378b:	add    BYTE PTR [rcx],al
   14002378d:	add    BYTE PTR [rcx],al
   14002378f:	add    BYTE PTR [rcx],al
   140023791:	add    BYTE PTR [rcx],al
   140023793:	add    BYTE PTR [rcx],al
   140023795:	add    BYTE PTR [rcx],al
   140023797:	add    BYTE PTR [rcx],al
   140023799:	add    BYTE PTR [rcx],al
   14002379b:	add    BYTE PTR [rcx],al
   14002379d:	add    BYTE PTR [rcx],al
   14002379f:	add    BYTE PTR [rcx],al
   1400237a1:	add    BYTE PTR [rcx],al
   1400237a3:	add    BYTE PTR [rcx],al
   1400237a5:	add    BYTE PTR [rcx],al
   1400237a7:	add    BYTE PTR [rcx],al
   1400237a9:	add    BYTE PTR [rax+rax*1],al
   1400237ac:	add    eax,DWORD PTR [rax]
   1400237ae:	add    eax,0x2000100
   1400237b3:	add    BYTE PTR [rax+rax*1],al
   1400237b6:	add    al,0x0
   1400237b8:	add    al,0x0
   1400237ba:	add    eax,DWORD PTR [rax]
   1400237bc:	add    BYTE PTR [rax],al
   1400237be:	add    DWORD PTR [rax],eax
   1400237c0:	add    DWORD PTR [rax],eax
   1400237c2:	add    eax,DWORD PTR [rax]
   1400237c4:	add    DWORD PTR [rax],eax
   1400237c6:	add    DWORD PTR [rax],eax
   1400237c8:	add    DWORD PTR [rax],eax
   1400237ca:	add    al,BYTE PTR [rax]
   1400237cc:	add    al,BYTE PTR [rax]
   1400237ce:	add    DWORD PTR [rax],eax
   1400237d0:	add    al,BYTE PTR [rax]
   1400237d2:	add    al,BYTE PTR [rax]
   1400237d4:	add    al,BYTE PTR [rax]
   1400237d6:	add    al,BYTE PTR [rax]
   1400237d8:	add    al,BYTE PTR [rax]
   1400237da:	add    al,BYTE PTR [rax]
   1400237dc:	add    al,BYTE PTR [rax]
   1400237de:	add    al,BYTE PTR [rax]
   1400237e0:	add    al,BYTE PTR [rax]
   1400237e2:	add    DWORD PTR [rax],eax
   1400237e4:	add    eax,DWORD PTR [rax]
   1400237e6:	add    eax,DWORD PTR [rax]
   1400237e8:	add    eax,DWORD PTR [rax]
   1400237ea:	add    DWORD PTR [rax],eax
   1400237ec:	add    eax,DWORD PTR [rax]
   1400237ee:	add    eax,DWORD PTR [rax]
   1400237f0:	add    DWORD PTR [rax],eax
   1400237f2:	add    eax,DWORD PTR [rax]
   1400237f4:	add    eax,DWORD PTR [rax]
   1400237f6:	add    eax,DWORD PTR [rax]
   1400237f8:	add    DWORD PTR [rax],eax
   1400237fa:	add    eax,DWORD PTR [rax]
   1400237fc:	add    eax,DWORD PTR [rax]
   1400237fe:	add    eax,DWORD PTR [rax]
   140023800:	add    eax,DWORD PTR [rax]
   140023802:	add    eax,DWORD PTR [rax]
   140023804:	add    eax,DWORD PTR [rax]
   140023806:	add    DWORD PTR [rax],eax
   140023808:	add    eax,DWORD PTR [rax]
   14002380a:	add    eax,DWORD PTR [rax]
   14002380c:	add    eax,DWORD PTR [rax]
   14002380e:	add    eax,DWORD PTR [rax]
   140023810:	add    eax,DWORD PTR [rax]
   140023812:	add    DWORD PTR [rax],eax
   140023814:	add    eax,DWORD PTR [rax]
   140023816:	add    eax,DWORD PTR [rax]
   140023818:	add    eax,DWORD PTR [rax]
   14002381a:	add    eax,DWORD PTR [rax]
   14002381c:	add    DWORD PTR [rax],eax
   14002381e:	add    eax,DWORD PTR [rax]
   140023820:	add    eax,DWORD PTR [rax]
   140023822:	add    eax,DWORD PTR [rax]
   140023824:	add    eax,DWORD PTR [rax]
   140023826:	add    DWORD PTR [rax],eax
   140023828:	add    eax,DWORD PTR [rax]
   14002382a:	add    DWORD PTR [rax],eax
   14002382c:	add    eax,DWORD PTR [rax]
   14002382e:	add    DWORD PTR [rax],eax
   140023830:	add    eax,DWORD PTR [rax]
   140023832:	add    DWORD PTR [rax],eax
   140023834:	add    eax,DWORD PTR [rax]
   140023836:	add    DWORD PTR [rax],eax
   140023838:	add    eax,DWORD PTR [rax]
   14002383a:	add    DWORD PTR [rax],eax
   14002383c:	add    eax,DWORD PTR [rax]
   14002383e:	add    DWORD PTR [rax],eax
   140023840:	add    eax,DWORD PTR [rax]
   140023842:	add    DWORD PTR [rax],eax
   140023844:	add    eax,DWORD PTR [rax]
   140023846:	add    DWORD PTR [rax],eax
   140023848:	add    eax,DWORD PTR [rax]
   14002384a:	add    DWORD PTR [rax],eax
   14002384c:	add    eax,DWORD PTR [rax]
   14002384e:	add    DWORD PTR [rax],eax
   140023850:	add    eax,0x5000100
   140023855:	add    BYTE PTR [rcx],al
   140023857:	add    BYTE PTR [rbx],al
   140023859:	add    BYTE PTR [rcx],al
   14002385b:	add    BYTE PTR [rbx],al
   14002385d:	add    BYTE PTR [rcx],al
   14002385f:	add    BYTE PTR [rcx],al
   140023861:	add    BYTE PTR [rcx],al
   140023863:	add    BYTE PTR [rcx],al
   140023865:	add    BYTE PTR [rcx],al
   140023867:	add    BYTE PTR [rcx],al
   140023869:	add    BYTE PTR [rcx],al
   14002386b:	add    BYTE PTR [rcx],al
   14002386d:	add    BYTE PTR [rcx],al
   14002386f:	add    BYTE PTR [rcx],al
   140023871:	add    BYTE PTR [rcx],al
   140023873:	add    BYTE PTR [rcx],al
   140023875:	add    BYTE PTR [rcx],al
   140023877:	add    BYTE PTR [rbx],al
   140023879:	add    BYTE PTR [rax],al
   14002387b:	add    BYTE PTR [rcx],al
   14002387d:	add    BYTE PTR [rcx],al
   14002387f:	add    BYTE PTR [rbx],al
   140023881:	add    BYTE PTR [rax],al
   140023883:	add    BYTE PTR [rcx],al
   140023885:	add    BYTE PTR [rcx],al
   140023887:	add    BYTE PTR [rcx],al
   140023889:	add    BYTE PTR [rcx],al
   14002388b:	add    BYTE PTR [rcx],al
   14002388d:	add    BYTE PTR [rcx],al
   14002388f:	add    BYTE PTR [rcx],al
   140023891:	add    BYTE PTR [rcx],al
   140023893:	add    BYTE PTR [rcx],al
   140023895:	add    BYTE PTR [rcx],al
   140023897:	add    BYTE PTR [rcx],al
   140023899:	add    BYTE PTR [rcx],al
   14002389b:	add    BYTE PTR [rcx],al
   14002389d:	add    BYTE PTR [rcx],al
   14002389f:	add    BYTE PTR [rcx],al
   1400238a1:	add    BYTE PTR [rcx],al
   1400238a3:	add    BYTE PTR [rbx],al
   1400238a5:	add    BYTE PTR [rcx],al
   1400238a7:	add    BYTE PTR [rdx],al
   1400238a9:	add    BYTE PTR [rax],al
   1400238ab:	add    BYTE PTR [rcx],al
   1400238ad:	add    BYTE PTR [rbx],al
   1400238af:	add    BYTE PTR [rbx],al
   1400238b1:	add    BYTE PTR [rcx],al
   1400238b3:	add    BYTE PTR [rcx],al
   1400238b5:	add    BYTE PTR [rcx],al
   1400238b7:	add    BYTE PTR [rbx],al
   1400238b9:	add    BYTE PTR [rcx],al
   1400238bb:	add    BYTE PTR [rbx],al
   1400238bd:	add    BYTE PTR [rdx],al
   1400238bf:	add    BYTE PTR [rdx],al
   1400238c1:	add    BYTE PTR [rdx],al
   1400238c3:	add    BYTE PTR [rax],al
   1400238c5:	add    BYTE PTR [rcx],al
   1400238c7:	add    BYTE PTR [rdx],al
   1400238c9:	add    BYTE PTR [rax],al
   1400238cb:	add    BYTE PTR [rcx],al
   1400238cd:	add    BYTE PTR [rcx],al
   1400238cf:	add    BYTE PTR [rdx],al
   1400238d1:	add    BYTE PTR [rdx],al
   1400238d3:	add    BYTE PTR [rdi],al
   1400238d5:	add    BYTE PTR [rip+0x7000700],al        # 0x147023fdb
   1400238db:	add    BYTE PTR [rdi],al
   1400238dd:	add    BYTE PTR [rip+0xa000900],al        # 0x14a0241e3
   1400238e3:	add    BYTE PTR [rdi],al
   1400238e5:	add    BYTE PTR [rax],cl
   1400238e7:	add    BYTE PTR [rdx],al
   1400238e9:	add    BYTE PTR [rdx],al
   1400238eb:	add    BYTE PTR [rbx],al
   1400238ed:	add    BYTE PTR [rbx],al
   1400238ef:	add    BYTE PTR [rdx],al
   1400238f1:	add    BYTE PTR [rdx],al
   1400238f3:	add    BYTE PTR [rbx],al
   1400238f5:	add    BYTE PTR [rbx],al
   1400238f7:	add    BYTE PTR [rbx],al
   1400238f9:	add    BYTE PTR [rbx],al
   1400238fb:	add    BYTE PTR [rip+0x3000500],al        # 0x143023e01
   140023901:	add    BYTE PTR [rip+0x2000100],al        # 0x142023a07
   140023907:	add    BYTE PTR [rax],al
   140023909:	add    BYTE PTR [rcx],al
   14002390b:	add    BYTE PTR [rax+rax*1],al
   14002390e:	add    eax,DWORD PTR [rax]
   140023910:	add    eax,DWORD PTR [rax]
   140023912:	add    eax,DWORD PTR [rax]
   140023914:	add    eax,DWORD PTR [rax]
   140023916:	add    eax,DWORD PTR [rax]
   140023918:	add    eax,DWORD PTR [rax]
   14002391a:	add    al,0x0
   14002391c:	add    eax,0x2000200
   140023921:	add    BYTE PTR [rdx],al
   140023923:	add    BYTE PTR [rcx],al
   140023925:	add    BYTE PTR [rax],cl
   140023927:	add    BYTE PTR [rax],cl
   140023929:	add    BYTE PTR [rdi],al
   14002392b:	add    BYTE PTR [rcx],al
   14002392d:	add    BYTE PTR [rbx],al
   14002392f:	add    BYTE PTR [rax],al
   140023931:	add    BYTE PTR [rcx],al
   140023933:	add    BYTE PTR [rax],al
   140023935:	add    BYTE PTR [rcx],al
   140023937:	add    BYTE PTR [rcx],al
   140023939:	add    BYTE PTR [rcx],al
   14002393b:	add    BYTE PTR [rcx],al
   14002393d:	add    BYTE PTR [rcx],al
   14002393f:	add    BYTE PTR [rdx],al
   140023941:	add    BYTE PTR [rcx],al
   140023943:	add    BYTE PTR [rcx],al
   140023945:	add    BYTE PTR [rax],al
   140023947:	add    BYTE PTR [rcx],al
   140023949:	add    BYTE PTR [rdx],al
	...
   140023953:	add    BYTE PTR [rax+rax*1],bl
   140023956:	add    BYTE PTR [rax],al
   140023958:	add    BYTE PTR [rax],al
   14002395a:	add    BYTE PTR [rax],al
   14002395c:	sbb    al,0x0
   14002395e:	add    BYTE PTR [rax],al
   140023960:	mov    ecx,0xd800fc00
   140023965:	add    al,ah
   140023967:	add    ah,bl
   140023969:	add    BYTE PTR [rax+rax*1+0xd400ec],ah
   140023970:	add    eax,DWORD PTR [rax]
   140023972:	xchg   ebp,eax
   140023973:	add    BYTE PTR [rdx+0x0],dl
   140023976:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140023977:	add    ah,ah
   140023979:	add    al,ch
   14002397b:	add    BYTE PTR [rcx-0x5cff4a00],bl
   140023981:	add    BYTE PTR [rax-0x35ff6c00],ch
   140023987:	add    BYTE PTR [rbp+0x59000000],bh
   14002398d:	add    BYTE PTR [rdx+0x0],bl
   140023990:	push   rbp
   140023991:	add    BYTE PTR [rax],al
   140023993:	add    BYTE PTR [rdi+0x0],cl
   140023996:	rex.WX add BYTE PTR [rcx+r8*1+0x0],spl
   14002399b:	add    BYTE PTR [rax],al
   14002399d:	add    BYTE PTR [rax],al
   14002399f:	add    BYTE PTR [rax],al
   1400239a1:	add    BYTE PTR [rdi+0x0],dl
   1400239a4:	add    BYTE PTR [rax],al
   1400239a6:	add    BYTE PTR [rax],al
   1400239a8:	push   rbx
   1400239a9:	add    BYTE PTR [rsi+0x0],dl
   1400239ac:	rex.WRX add BYTE PTR [rax],r8b
   1400239af:	add    BYTE PTR [rax],al
   1400239b1:	add    BYTE PTR [rbx+0x0],cl
   1400239b4:	rex.WRB add BYTE PTR [r8+0x0],r10b
   1400239b8:	rex.WR add BYTE PTR [rax+0x0],r11b
   1400239bc:	push   rcx
   1400239bd:	add    BYTE PTR [rax],al
   1400239bf:	add    BYTE PTR [rax+rax*1+0x0],dl
   1400239c3:	add    BYTE PTR [rax],al
   1400239c5:	add    BYTE PTR [rdx+0x0],dh
   1400239cb:	add    BYTE PTR [rbp-0x58ff4800],ah
   1400239d1:	add    BYTE PTR [rsi+0x0],ah
   1400239d7:	add    BYTE PTR [rax],al
   1400239d9:	add    BYTE PTR [rax+rax*1+0xb300b5],dh
   1400239e0:	mov    bh,0x0
   1400239e2:	add    BYTE PTR [rax],al
   1400239e4:	(bad)  
	...
   1400239ed:	add    bl,cl
	...
   1400239fb:	add    cl,al
   1400239fd:	add    BYTE PTR [rax],al
   1400239ff:	add    BYTE PTR [rax],al
   140023a01:	add    BYTE PTR [rax],al
   140023a03:	add    BYTE PTR [rbx-0x45ff4400],bh
   140023a09:	add    BYTE PTR [rdi-0x3dff3d00],bh
   140023a0f:	add    al,al
   140023a11:	add    BYTE PTR [rsi-0x33ff3300],bh
   140023a17:	add    dh,cl
   140023a19:	add    BYTE PTR [rax],al
   140023a1b:	add    ch,bl
   140023a1d:	add    BYTE PTR [rax],al
   140023a1f:	add    cl,bl
   140023a21:	add    BYTE PTR [rax],al
   140023a23:	add    BYTE PTR [rax],al
   140023a25:	add    BYTE PTR [rdi-0x61ff6e00],bl
   140023a2b:	add    BYTE PTR [rbx+0x74007300],dl
   140023a31:	add    BYTE PTR [rbp+0x0],dh
   140023a34:	mov    es,WORD PTR [rax]
   140023a36:	jbe    0x140023a38
   140023a38:	pop    QWORD PTR [rax]
   140023a3a:	ja     0x140023a3c
   140023a3c:	js     0x140023a3e
   140023a3e:	jns    0x140023a40
   140023a40:	jp     0x140023a42
   140023a42:	jnp    0x140023a44
   140023a44:	jl     0x140023a46
   140023a46:	jge    0x140023a48
   140023a48:	jle    0x140023a4a
   140023a4a:	jg     0x140023a4c
   140023a4c:	add    BYTE PTR [rax],0x81
   140023a4f:	add    BYTE PTR [rdx-0x6fff7d00],al
   140023a55:	add    BYTE PTR [rax+rax*1+0x860085],al
   140023a5c:	xchg   DWORD PTR [rax],eax
   140023a5e:	mov    BYTE PTR [rax],al
   140023a60:	mov    DWORD PTR [rax],eax
   140023a62:	mov    al,BYTE PTR [rax]
   140023a64:	mov    eax,DWORD PTR [rax]
   140023a66:	mov    WORD PTR [rax],es
   140023a68:	lea    eax,[rax]
   140023a6a:	xchg   ecx,eax
   140023a6b:	add    BYTE PTR [rax],al
   140023a6d:	add    BYTE PTR [rax],al
   140023a6f:	add    BYTE PTR [rbp-0x5fff0300],bl
   140023a75:	add    BYTE PTR [rax],al
   140023a77:	add    BYTE PTR [rcx-0x5e000000],ah
   140023a7d:	add    BYTE PTR [rax+rax*1+0xf90000],bl
   140023a84:	repnz add al,dh
   140023a87:	add    bh,dh
   140023a89:	add    al,bh
   140023a8b:	add    dh,dh
   140023a8d:	add    ch,dh
   140023a8f:	add    bl,bh
   140023a91:	add    ah,dh
   140023a93:	add    bl,dh
   140023a95:	add    cl,dh
   140023a97:	add    dl,bh
   140023a99:	add    ch,ch
   140023a9b:	add    BYTE PTR [rax],al
   140023a9d:	add    cl,ah
   140023a9f:	add    BYTE PTR [rax],al
   140023aa1:	add    BYTE PTR [rax],al
   140023aa3:	add    ch,ah
   140023aa5:	add    BYTE PTR [rax],al
   140023aa7:	add    BYTE PTR [rax],al
   140023aa9:	add    cl,ch
   140023aab:	add    BYTE PTR [rax],al
   140023aad:	add    BYTE PTR [rax],al
   140023aaf:	add    BYTE PTR [rdi+0x9700],bl
   140023ab5:	add    BYTE PTR [rsi-0x65000000],dl
   140023abb:	add    BYTE PTR [rcx+0x59000000],ch
   140023ac1:	add    DWORD PTR [rcx+0x1],ebx
   140023ac4:	pop    rdx
   140023ac5:	add    DWORD PTR [rax],eax
   140023ac7:	add    BYTE PTR [rdi+0x1],dl
   140023aca:	add    BYTE PTR [rax],al
   140023acc:	pop    rax
   140023acd:	add    DWORD PTR [rax],eax
   140023acf:	add    BYTE PTR [rbx+0x1],bl
   140023ad2:	add    al,0x1
   140023ad4:	or     eax,DWORD PTR [rcx]
   140023ad6:	or     al,BYTE PTR [rcx]
   140023ad8:	adc    al,BYTE PTR [rcx]
   140023ada:	(bad)  
   140023adb:	add    DWORD PTR [rax],eax
   140023add:	add    BYTE PTR [rdi],al
   140023adf:	add    DWORD PTR [rax],eax
   140023ae1:	add    BYTE PTR [rcx+rax*1+0x0],bl
   140023ae5:	add    BYTE PTR [rbx+0x1],ah
   140023ae8:	or     BYTE PTR [rcx],al
   140023aea:	or     DWORD PTR [rcx],eax
   140023aec:	push   rdx
   140023aed:	add    BYTE PTR [rsi],cl
   140023aef:	add    DWORD PTR [rcx+rax*1],ecx
   140023af2:	(bad)  
   140023af3:	add    DWORD PTR [rbp+0x1],ebx
   140023af6:	(bad)
   140023afb:	add    BYTE PTR [rdx],bl
   140023afd:	add    DWORD PTR [rax],eax
   140023aff:	add    BYTE PTR [rax],al
   140023b01:	add    BYTE PTR [rax],al
   140023b03:	add    BYTE PTR [rax],al
   140023b05:	add    BYTE PTR [rbx+0x1],dl
   140023b08:	add    BYTE PTR [rax],al
   140023b0a:	fs add esi,edi
   140023b0d:	add    BYTE PTR [rax],ch
   140023b0f:	add    DWORD PTR [rax],eax
   140023b11:	add    BYTE PTR [rax],al
   140023b13:	add    BYTE PTR [rax],al
   140023b15:	add    BYTE PTR [rbx],bl
   140023b17:	add    DWORD PTR [rax],eax
   140023b19:	add    BYTE PTR [rax],al
   140023b1b:	add    BYTE PTR [rax],dl
   140023b1d:	add    DWORD PTR [rcx],edx
   140023b1f:	add    DWORD PTR [rax],eax
   140023b21:	add    BYTE PTR [rip+0x29010d01],al        # 0x169034828
   140023b27:	add    DWORD PTR [rdx],ebp
   140023b29:	add    DWORD PTR [rax],eax
   140023b2b:	add    BYTE PTR [rcx+0x1],bl
   140023b2e:	add    BYTE PTR [rax],al
   140023b30:	add    BYTE PTR [rax],al
   140023b32:	pop    rbx
   140023b33:	add    DWORD PTR [rax],eax
   140023b35:	add    BYTE PTR [rcx+rax*1+0x55],dl
   140023b39:	add    DWORD PTR [rax],eax
   140023b3b:	add    BYTE PTR [rcx+0x1],cl
   140023b3e:	(bad)  
   140023b3f:	add    DWORD PTR [rax],eax
   140023b41:	add    BYTE PTR [rcx],bh
   140023b43:	add    DWORD PTR [rdx],edi
   140023b45:	add    DWORD PTR [rbx],edi
   140023b47:	add    DWORD PTR [rcx+rax*1],edi
   140023b4a:	add    BYTE PTR [rax],al
   140023b4c:	xor    eax,0x37013601
   140023b51:	add    DWORD PTR [rax],edi
   140023b53:	add    DWORD PTR [rcx+0x1],edx
   140023b56:	push   rdx
   140023b57:	add    DWORD PTR [rax],eax
	...
   140023b61:	add    BYTE PTR [rip+0x2f012e01],ch        # 0x16f036968
   140023b67:	add    DWORD PTR [rdx],eax
   140023b69:	add    DWORD PTR [rax],eax
   140023b6b:	add    edx,ebx
   140023b6d:	add    dl,ah
   140023b6f:	add    dh,bl
   140023b71:	add    dh,ch
   140023b73:	add    dh,dl
   140023b75:	add    BYTE PTR [rbx],al
   140023b77:	add    DWORD PTR [rax],eax
   140023b79:	add    BYTE PTR [rbp-0x15ff1a00],ah
   140023b7f:	add    bh,cl
   140023b81:	add    ah,al
   140023b83:	add    BYTE PTR [rax],al
   140023b85:	add    BYTE PTR [rax],al
   140023b87:	add    bh,dl
	...
   140023b91:	add    al,dl
	...
   140023b9b:	add    BYTE PTR [rax],al
   140023b9d:	add    al,cl
   140023b9f:	add    dh,al
   140023ba1:	add    cl,cl
   140023ba3:	add    bh,al
   140023ba5:	add    ch,al
   140023ba7:	add    dl,dl
   140023ba9:	add    cl,dl
   140023bab:	add    bl,dl
   140023bad:	add    BYTE PTR [rax],al
   140023baf:	add    bh,bl
   140023bb1:	add    BYTE PTR [rax],al
   140023bb3:	add    bl,bl
   140023bb5:	add    BYTE PTR [rax],al
   140023bb7:	add    BYTE PTR [rcx],al
   140023bb9:	add    DWORD PTR [rbp-0x11000000],esp
   140023bbf:	add    dh,bh
   140023bc1:	add    bh,bh
   140023bc3:	add    BYTE PTR [rax],al
   140023bc5:	add    dh,bh
   140023bc7:	add    BYTE PTR [rax],al
   140023bc9:	add    BYTE PTR [rax],al
   140023bcb:	add    BYTE PTR [rcx],dh
   140023bcd:	add    DWORD PTR [rax],eax
   140023bcf:	add    BYTE PTR [rax],al
   140023bd1:	add    BYTE PTR [rax],al
   140023bd3:	add    BYTE PTR [rbx],dh
   140023bd5:	add    DWORD PTR [rax],eax
   140023bd7:	add    bl,ah
   140023bd9:	add    BYTE PTR [rax],al
   140023bdb:	add    BYTE PTR [rax],al
   140023bdd:	add    bh,ah
   140023bdf:	add    BYTE PTR [rax],al
   140023be1:	add    BYTE PTR [rax],al
   140023be3:	add    bl,ch
   140023be5:	add    BYTE PTR [rsi],ah
   140023be7:	add    DWORD PTR [rax],eax
   140023be9:	add    BYTE PTR [rsi],bl
   140023beb:	add    DWORD PTR [rdi],esp
   140023bed:	add    DWORD PTR [rcx],esp
   140023bef:	add    DWORD PTR [rax],eax
   140023bf1:	add    BYTE PTR [rip+0xfffffffffe000001],ah        # 0x13e023bf8
   140023bf7:	add    BYTE PTR [rdi],bl
   140023bf9:	add    DWORD PTR [rax],eax
   140023bfb:	add    dh,bh
   140023bfd:	add    BYTE PTR [rax],al
   140023bff:	add    BYTE PTR [rax],al
   140023c01:	add    BYTE PTR [rdx],dh
   140023c03:	add    DWORD PTR [rax],eax
   140023c05:	add    BYTE PTR [rax],al
   140023c07:	add    BYTE PTR [rax],al
   140023c09:	add    BYTE PTR [rcx+rax*1],dh
   140023c0c:	add    BYTE PTR [rax],al
   140023c0e:	add    BYTE PTR [rax],al
   140023c10:	add    BYTE PTR [rax],al
   140023c12:	sub    al,0x1
   140023c14:	add    BYTE PTR [rax],al
   140023c16:	sub    eax,DWORD PTR [rcx]
   140023c18:	push   rdx
   140023c19:	add    BYTE PTR [rbp+0x0],ch
   140023c1c:	add    DWORD PTR gs:[rax],eax
   140023c1f:	add    BYTE PTR [rax],al
   140023c21:	add    BYTE PTR [rdx+0x0],dh
   140023c24:	adc    al,0x1
   140023c26:	(bad)  
   140023c27:	add    DWORD PTR [rax],eax
   140023c29:	add    BYTE PTR [rbx+0x0],dh
   140023c2c:	sbb    al,BYTE PTR [rcx]
   140023c2e:	jbe    0x140023c30
   140023c30:	pop    QWORD PTR [rax]
   140023c32:	js     0x140023c34
   140023c34:	jns    0x140023c36
   140023c36:	push   rbp
   140023c37:	add    BYTE PTR [rbp+0x0],bh
   140023c3a:	jle    0x140023c3c
   140023c3c:	rex.WRXB add BYTE PTR [r15+0x0],r15b
   140023c40:	(bad)  
   140023c41:	add    BYTE PTR [rbx+0x0],dl
   140023c44:	push   rsi
   140023c45:	add    dh,bh
   140023c47:	add    BYTE PTR [rax+0x0],dl
   140023c4a:	pop    rax
   140023c4b:	add    BYTE PTR [rbp-0x78ffaf00],al
   140023c51:	add    BYTE PTR [rax+rax*1-0x77],dl
   140023c55:	add    BYTE PTR [rdx-0x73fee500],cl
   140023c5b:	add    BYTE PTR [rbp+0x9100],cl
   140023c61:	add    BYTE PTR [rdi+0x0],ch
   140023c64:	outs   dx,BYTE PTR ds:[rsi]
   140023c65:	add    BYTE PTR [rcx+0x0],dh
   140023c68:	(bad)  
   140023c69:	add    BYTE PTR [rax+0x0],dh
   140023c6c:	(bad)  
   140023c6d:	add    BYTE PTR [rax],al
   140023c6f:	add    BYTE PTR [rdx+0x0],ch
   140023c72:	adc    eax,0x11301
   140023c77:	add    BYTE PTR [rax],al
   140023c79:	add    BYTE PTR [rax],al
   140023c7b:	add    BYTE PTR [rbx+0x1],bl
   140023c7e:	add    BYTE PTR [rax],al
   140023c80:	imul   eax,DWORD PTR [rax],0xffffff99
   140023c83:	add    BYTE PTR [rdx+0x9f00],bl
   140023c89:	add    BYTE PTR [rax+0x3d000000],bl
   140023c8f:	add    DWORD PTR [rsi],edi
   140023c91:	add    DWORD PTR [rax],eax
   140023c93:	add    BYTE PTR [rcx+0x1],bl
   140023c96:	add    BYTE PTR [rax],al
   140023c98:	add    BYTE PTR [rax],al
   140023c9a:	pop    rbx
   140023c9b:	add    DWORD PTR [rax],eax
   140023c9d:	add    BYTE PTR [rax+rax*1+0x0],ch
   140023ca1:	add    BYTE PTR [rax],al
   140023ca3:	add    BYTE PTR [rax],al
   140023ca5:	add    BYTE PTR [rax+0x1],al
   140023ca8:	add    DWORD PTR [r11+0x1],r8d
   140023cac:	rex.RX add DWORD PTR [rax],r8d
   140023caf:	add    BYTE PTR [rax],al
   140023cb1:	add    BYTE PTR [rcx+rax*1+0x45],al
   140023cb5:	add    DWORD PTR [rax],eax
   140023cb7:	add    BYTE PTR [rcx+0x1],al
   140023cba:	add    BYTE PTR [rax],al
   140023cbc:	rex.X add DWORD PTR [rsi],edx
   140023cbf:	add    DWORD PTR [rax+0x1],ecx
   140023cc2:	add    BYTE PTR [rax],al
   140023cc4:	(bad)  
   140023cc5:	add    DWORD PTR [rdi+0x1],eax
   140023cc8:	add    BYTE PTR [rax],al
   140023cca:	rex.WX add QWORD PTR [rbx+0x1],rcx
   140023cce:	add    BYTE PTR [rax],al
   140023cd0:	(bad)  
   140023cd1:	add    DWORD PTR [rcx+rax*1+0x4d],ecx
   140023cd5:	add    DWORD PTR [rax],eax
   140023cd7:	add    BYTE PTR [rax],al
   140023cd9:	add    BYTE PTR [rsi+0x1],cl
   140023cdc:	add    BYTE PTR [rax],al
   140023cde:	add    BYTE PTR [rax],al
   140023ce0:	add    BYTE PTR [rax],al
   140023ce2:	rex.WRXB add QWORD PTR [r8+0x1],r10
   140023ce6:	stos   DWORD PTR es:[rdi],eax
   140023ce7:	add    BYTE PTR [rdx+0x0],ch
   140023ced:	add    BYTE PTR [rax],al
   140023cef:	add    BYTE PTR [rax],dh
   140023cf1:	add    DWORD PTR [rax],eax
   140023cf3:	add    BYTE PTR [rax],al
   140023cf5:	add    BYTE PTR [rax],al
   140023cf7:	add    BYTE PTR [rdi],bh
   140023cf9:	add    DWORD PTR [rbx],esp
   140023cfb:	add    DWORD PTR [rcx+rax*1],ebx
   140023cfe:	add    BYTE PTR [rax],al
   140023d00:	and    al,0x1
   140023d02:	and    BYTE PTR [rcx],al
   140023d04:	add    BYTE PTR [rax],al
   140023d06:	and    al,BYTE PTR [rcx]
   140023d08:	sbb    BYTE PTR [rcx],al
   140023d0a:	add    BYTE PTR [rax],al
   140023d0c:	sbb    DWORD PTR [rcx],eax
   140023d0e:	sbb    eax,0x1
   140023d13:	add    BYTE PTR [rbx+0x1],bl
   140023d16:	add    BYTE PTR [rax],al
   140023d18:	push   rsi
   140023d19:	add    DWORD PTR [rax+rax*1+0x0],esp
   140023d1d:	add    BYTE PTR [rax],al
   140023d1f:	add    BYTE PTR [rax+0x0],ch
   140023d22:	pop    rbx
   140023d23:	add    BYTE PTR [rax],al
   140023d25:	add    BYTE PTR [rbp+0x0],bl
   140023d28:	data16 add BYTE PTR [rax],al
   140023d2b:	add    BYTE PTR [rsi+0x0],bl
   140023d2e:	add    BYTE PTR [ecx+0x0],ch
   140023d32:	pop    rdi
   140023d33:	add    BYTE PTR [rbp+0x0],ah
   140023d36:	pop    rsp
   140023d37:	add    BYTE PTR [rax],al
   140023d39:	add    BYTE PTR [rdx+0x0],ah
   140023d3c:	scas   eax,DWORD PTR es:[rdi]
   140023d3d:	add    BYTE PTR [rbp-0x51ff4f00],ch
   140023d43:	add    BYTE PTR [rax+rax*1+0x15e00b0],ch
   140023d4a:	(bad)  
   140023d4b:	add    BYTE PTR [rdi+0x1],bl
   140023d4e:	add    al,0x0
   140023d50:	add    al,BYTE PTR [rax]
   140023d52:	rex.W add BYTE PTR [rbx+0x0],spl
   140023d56:	add    BYTE PTR [rax],al
   140023d58:	add    BYTE PTR [rax],al
   140023d5a:	rex.WXB add BYTE PTR [r13+0x0],cl
   140023d5e:	rex.WR add BYTE PTR [rip+0x500],r12b        # 0x140024265
   140023d65:	add    BYTE PTR [rcx+0x0],cl
   140023d68:	add    BYTE PTR [rax],al
   140023d6a:	xor    eax,DWORD PTR [rax]
   140023d6c:	xor    al,BYTE PTR [rax]
   140023d6e:	xor    DWORD PTR [rax],eax
   140023d70:	add    BYTE PTR [rax],al
   140023d72:	add    BYTE PTR [rax],al
   140023d74:	add    BYTE PTR [rax],al
   140023d77:	add    BYTE PTR [rcx+0x0],al
   140023d7a:	sub    DWORD PTR [rax],eax
   140023d7c:	sub    al,BYTE PTR [rax]
   140023d7e:	sub    eax,DWORD PTR [rax]
   140023d80:	sub    al,0x0
   140023d82:	add    BYTE PTR cs:[rdi],ch
   140023d85:	add    BYTE PTR [rax+rax*1+0x2d],al
   140023d89:	add    BYTE PTR [rax],al
   140023d8b:	add    BYTE PTR [rbx],dh
	...
   140023d95:	add    BYTE PTR [rax],al
   140023d97:	add    BYTE PTR [rax+rax*1],bh
   140023d9a:	add    BYTE PTR [rax],al
   140023d9c:	cmp    eax,0x0
   140023da1:	add    BYTE PTR [rax],ah
   140023da3:	add    BYTE PTR [rax],al
   140023da5:	add    BYTE PTR [rax],al
   140023da7:	add    BYTE PTR [rbp+0x0],al
   140023daa:	and    DWORD PTR [rax],eax
   140023dac:	add    BYTE PTR [rax],al
   140023dae:	and    al,0x0
   140023db0:	and    al,BYTE PTR [rax]
   140023db2:	(bad)  
   140023db3:	add    BYTE PTR [rax],al
   140023db5:	add    BYTE PTR [rbx],ah
   140023db7:	add    BYTE PTR [rdi],bl
   140023db9:	add    BYTE PTR [rax],al
   140023dbb:	add    BYTE PTR [rsi],bh
   140023dbd:	add    BYTE PTR [rax],al
   140023dbf:	add    BYTE PTR [rdi],bh
   140023dc1:	add    BYTE PTR [rcx+0x42000000],bl
   140023dc7:	add    BYTE PTR [rsi+0x0],al
	...
   140023dd2:	cdq    
   140023dd3:	add    BYTE PTR [rsi],dl
   140023dd5:	add    DWORD PTR [rax],eax
   140023dd7:	add    BYTE PTR [rbx+0x0],al
   140023dda:	push   rdx
   140023ddb:	add    BYTE PTR [rbx+0x0],dh
   140023dde:	sbb    al,BYTE PTR [rcx]
   140023de0:	jbe    0x140023de2
   140023de2:	pop    QWORD PTR [rax]
   140023de4:	js     0x140023de6
   140023de6:	jns    0x140023de8
   140023de8:	push   rbp
   140023de9:	add    BYTE PTR [rbp+0x0],bh
   140023dec:	jle    0x140023dee
   140023dee:	jg     0x140023df0
   140023df0:	(bad)  
   140023df1:	add    BYTE PTR [rbx+0x0],dl
   140023df4:	push   rsi
   140023df5:	add    dh,bh
   140023df7:	add    BYTE PTR [rax+0x0],bl
   140023dfa:	test   DWORD PTR [rax],eax
   140023dfc:	push   rcx
   140023dfd:	add    BYTE PTR [rdi-0x76ffac00],al
   140023e03:	add    BYTE PTR [rdx-0x73fee500],cl
   140023e09:	add    BYTE PTR [rbp+0x47009100],cl
   140023e0f:	add    BYTE PTR [rax],al
   140023e11:	add    BYTE PTR [rdx],bh
   140023e13:	add    BYTE PTR [rax+rax*1],dh
   140023e16:	cmp    eax,DWORD PTR [rax]
   140023e18:	xor    eax,0x0
   140023e1d:	add    BYTE PTR [rax],al
   140023e1f:	add    BYTE PTR [rax],al
   140023e21:	add    BYTE PTR [rdi],dh
   140023e23:	add    BYTE PTR [rax],al
   140023e25:	add    BYTE PTR [rax],bh
   140023e27:	add    BYTE PTR [rcx],bh
   140023e29:	add    BYTE PTR [rsi],dh
	...
   140023e33:	add    BYTE PTR [rax],dh
   140023e35:	add    BYTE PTR [rax],al
   140023e37:	add    BYTE PTR [rsi],ah
   140023e39:	add    BYTE PTR [rdi],ah
   140023e3b:	add    BYTE PTR [rax],al
   140023e3d:	add    BYTE PTR [rax],ch
   140023e3f:	add    BYTE PTR [rax],cl
   140023e41:	add    BYTE PTR [rax],al
   140023e43:	add    BYTE PTR [rax],al
   140023e45:	add    BYTE PTR [rcx],cl
   140023e47:	add    BYTE PTR [rax],al
   140023e49:	add    BYTE PTR [rbx],cl
   140023e4b:	add    BYTE PTR [rax],al
   140023e4d:	add    BYTE PTR [rdx],cl
   140023e4f:	add    BYTE PTR [rax],al
   140023e51:	add    BYTE PTR [rcx],al
   140023e53:	add    BYTE PTR [rbx],bl
   140023e55:	add    BYTE PTR [rdi],cl
   140023e57:	add    BYTE PTR [rsi],cl
   140023e59:	add    BYTE PTR [rdx],bl
   140023e5b:	add    BYTE PTR [rip+0x1d000c00],cl        # 0x15d024a61
   140023e61:	add    BYTE PTR [rdi],al
   140023e63:	add    BYTE PTR [rax],al
   140023e65:	add    BYTE PTR [rdx],dl
   140023e67:	add    BYTE PTR [rax],al
   140023e69:	add    BYTE PTR [rbx],dl
   140023e6b:	add    BYTE PTR [rax],al
   140023e6d:	add    BYTE PTR [rax],bl
   140023e6f:	add    BYTE PTR [rcx],bl
   140023e71:	add    BYTE PTR [rax],al
   140023e73:	add    BYTE PTR [rax+rax*1],dl
   140023e76:	adc    eax,0x16000000
   140023e7b:	add    BYTE PTR [rdi],dl
   140023e7d:	add    BYTE PTR [rax],dl
   140023e7f:	add    BYTE PTR [rcx],dl
   140023e81:	add    BYTE PTR [rsi+0x1],ah
	...
   140023e90:	(bad)  
   140023e91:	add    BYTE PTR [rcx-0x39ff2cfe],al
   140023e97:	add    cl,dl
   140023e99:	add    BYTE PTR [rcx],cl
   140023e9b:	add    bh,ch
   140023e9d:	add    DWORD PTR [rdx+rax*1-0x77],edi
   140023ea1:	add    bh,ah
   140023ea3:	add    DWORD PTR [rbx+0x2],edi
   140023ea6:	jg     0x140023eaa
   140023ea8:	jge    0x140023eac
   140023eaa:	test   DWORD PTR [rdx],eax
   140023eac:	(bad)  
   140023ead:	add    BYTE PTR [rdx+0x7e028002],al
   140023eb3:	add    dl,BYTE PTR [rdx]
   140023eb5:	add    BYTE PTR [rax],cl
   140023eb7:	add    dh,BYTE PTR [rdx]
   140023eb9:	add    ch,BYTE PTR [rax]
   140023ebb:	add    ch,BYTE PTR [rdi]
   140023ebd:	add    ch,BYTE PTR [rdx]
   140023ebf:	add    bl,BYTE PTR [rbx]
   140023ec1:	add    al,cl
   140023ec3:	add    ch,al
   140023ec5:	add    bh,al
   140023ec7:	add    ah,cl
   140023ec9:	add    dl,ch
   140023ecb:	add    ah,dl
   140023ecd:	add    bh,ah
   140023ecf:	add    BYTE PTR [rdi],bl
   140023ed1:	add    ah,BYTE PTR [rbp+0x2]
   140023ed4:	fs add cl,bl
   140023ed7:	add    cl,ch
   140023ed9:	add    BYTE PTR [rdx],bl
   140023edb:	add    bh,ah
   140023edd:	add    esi,esp
   140023edf:	add    DWORD PTR [rdi+0x1],esp
   140023ee2:	add    WORD PTR [rcx],cx
   140023ee5:	add    BYTE PTR [rbp+0x1],ah
   140023ee8:	push   0xffffffffe000ca01
   140023eed:	add    DWORD PTR [rcx+0x1],ebp
   140023ef0:	ins    DWORD PTR es:[rdi],dx
   140023ef1:	add    BYTE PTR [rcx],dl
   140023ef3:	add    BYTE PTR [rbx+0xd001800],dl
   140023ef9:	add    BYTE PTR [rdx+0x19001300],dl
   140023eff:	add    BYTE PTR [rbx],bh
   140023f01:	add    BYTE PTR [rdi],dl
   140023f03:	add    BYTE PTR [rax],cl
   140023f05:	add    BYTE PTR [rax+rax*1],bl
   140023f08:	sbb    eax,DWORD PTR [rax]
   140023f0a:	sbb    BYTE PTR [rcx],al
   140023f0c:	lldt   WORD PTR [rdx]
   140023f0f:	add    DWORD PTR [rdx],ecx
   140023f11:	add    BYTE PTR [rsi],cl
   140023f13:	add    DWORD PTR [rax+rax*1],ecx
   140023f16:	adc    BYTE PTR [rcx],al
   140023f18:	or     eax,DWORD PTR [rax]
   140023f1a:	lgdt   [rax+rax*1]
   140023f1e:	(bad)  
   140023f1f:	add    DWORD PTR [rip+0xe011700],edx        # 0x14e035625
   140023f25:	add    BYTE PTR [rcx],dl
   140023f27:	add    DWORD PTR [rip+0xffffffff9e013601],ecx        # 0xde03752e
   140023f2d:	add    DWORD PTR [rbx],edx
   140023f2f:	add    DWORD PTR [rcx+rax*1],edx
   140023f32:	int    0x0
   140023f34:	ret    
   140023f35:	add    dl,al
   140023f37:	add    al,dl
   140023f39:	add    bh,cl
   140023f3b:	add    dh,ah
   140023f3d:	add    ah,al
   140023f3f:	add    BYTE PTR [rcx+rax*1+0x6b],ch
   140023f43:	add    eax,ebp
   140023f45:	add    bh,dl
   140023f47:	add    esi,edx
   140023f49:	add    DWORD PTR [rcx+rax*1+0x4d],ecx
   140023f4d:	add    ecx,ebx
   140023f4f:	add    DWORD PTR [rdi+0x1],ecx
   140023f52:	fadd   DWORD PTR [rcx]
   140023f54:	rex.WRX add QWORD PTR [rbx-0x4dfe50ff],r13
   140023f5b:	add    DWORD PTR [rsi-0x3efe52ff],ebp
   140023f61:	add    edx,eax
   140023f63:	add    eax,ecx
   140023f65:	add    BYTE PTR [rdx-0x2dff3700],bh
   140023f6b:	add    BYTE PTR [rax],al
   140023f6d:	add    BYTE PTR [rax],al
   140023f6f:	add    BYTE PTR [rax],cl
   140023f71:	add    ecx,ecx
   140023f73:	add    al,0x94
   140023f75:	or     dl,BYTE PTR [rdx+rcx*1+0x3aa0a2e]
   140023f7c:	pop    rsi
   140023f7d:	add    BYTE PTR [rax+0x0],ch
   140023f80:	ja     0x140023f82
   140023f82:	xchg   esi,eax
   140023f83:	call   FWORD PTR [rax+rax*1+0x4f]
   140023f87:	add    BYTE PTR [rcx+0x0],dl
   140023f8a:	(bad)  
   140023f8b:	add    DWORD PTR [rsi+0x4e0107ff],edx
   140023f91:	add    BYTE PTR [rsi-0x71006901],dl
   140023f97:	add    bl,BYTE PTR [rcx+0x0]
   140023f9a:	jge    0x140023f9c
   140023f9c:	add    eax,DWORD PTR [rcx]
   140023f9e:	in     eax,0x0
   140023fa0:	xchg   esi,eax
   140023fa1:	call   QWORD PTR [rsi+0x42ff96ff]
   140023fa7:	add    DWORD PTR [rdx],edi
   140023fa9:	add    ecx,ecx
   140023fab:	add    al,0x96
   140023fad:	call   QWORD PTR [rsi-0x63006901]
   140023fb3:	add    DWORD PTR [rsi-0x3006901],edx
   140023fb9:	or     BYTE PTR [rcx-0x36fb36fa],dh
   140023fbf:	add    al,0xc9
   140023fc1:	add    al,0x96
   140023fc3:	dec    DWORD PTR [rdx+0x3]
   140023fc6:	leave  
   140023fc7:	add    al,0x96
   140023fc9:	call   QWORD PTR [rsi-0x36006901]
   140023fcf:	add    al,0xc9
   140023fd1:	add    al,0x96
   140023fd3:	call   QWORD PTR [rsi-0x69006901]
   140023fd9:	call   QWORD PTR [rsi-0x36006901]
   140023fdf:	add    al,0x96
   140023fe1:	dec    ecx
   140023fe3:	add    al,0xc9
   140023fe5:	add    al,0x96
   140023fe7:	dec    ecx
   140023fe9:	add    al,0xc9
   140023feb:	add    al,0x8d
   140023fed:	add    al,bl
   140023fef:	add    BYTE PTR [rsi-0x36006901],dl
   140023ff5:	add    al,0xc9
   140023ff7:	add    al,0xc9
   140023ff9:	add    al,0x96
   140023ffb:	call   QWORD PTR [rsi-0x2e006901]
   140024001:	add    cl,cl
   140024003:	add    al,0x19
   140024005:	add    ecx,ecx
   140024007:	add    al,0xc9
   140024009:	add    al,0xc9
   14002400b:	add    al,0xc9
   14002400d:	add    al,0x6f
   14002400f:	add    ecx,ecx
   140024011:	add    al,0xc9
   140024013:	add    al,0xc9
   140024015:	add    al,0xc9
   140024017:	add    al,0xc9
   140024019:	add    al,0xc9
   14002401b:	add    al,0xdb
   14002401d:	add    cl,cl
   14002401f:	add    al,0xc9
   140024021:	add    al,0xc9
   140024023:	add    al,0x65
   140024025:	add    BYTE PTR [rsi+0x0],ah
   140024028:	jae    0x14002402a
   14002402a:	cmp    al,BYTE PTR [rcx]
   14002402c:	cmp    al,BYTE PTR [rcx]
   14002402e:	cmp    al,BYTE PTR [rcx]
   140024030:	cmp    al,BYTE PTR [rcx]
   140024032:	cmp    al,BYTE PTR [rcx]
   140024034:	add    DWORD PTR gs:[rbx+0x1],ebx
   140024038:	push   rcx
   140024039:	add    ecx,ecx
   14002403b:	add    al,0x47
   14002403d:	add    cl,cl
   14002403f:	add    al,0x46
   140024041:	add    BYTE PTR [rsi-0x36fb36f8],dl
   140024047:	add    al,0x96
   140024049:	call   QWORD PTR [rsi-0x69006901]
   14002404f:	call   QWORD PTR [rsi-0x69006901]
   140024055:	call   QWORD PTR [rsi-0x69006901]
   14002405b:	call   QWORD PTR [rsi-0x69006901]
   140024061:	call   QWORD PTR [rsi-0x69006901]
   140024067:	call   QWORD PTR [rsi-0x69006901]
   14002406d:	call   QWORD PTR [rsi-0x69006901]
   140024073:	call   QWORD PTR [rsi-0x69006901]
   140024079:	call   QWORD PTR [rsi-0x69006901]
   14002407f:	call   QWORD PTR [rsi-0x69006901]
   140024085:	call   QWORD PTR [rsi-0x69006901]
   14002408b:	jmp    QWORD PTR [rdx+0x0]
   14002408e:	leave  
   14002408f:	add    al,0x96
   140024091:	call   QWORD PTR [rsi+0x410042ff]
   140024097:	add    BYTE PTR [rsi-0x69fb3601],dl
   14002409d:	call   QWORD PTR [rsi-0x69fb3601]
   1400240a3:	call   QWORD PTR [rsi-0x69006901]
   1400240a9:	call   QWORD PTR [rsi-0x69006901]
   1400240af:	call   QWORD PTR [rsi-0x69006901]
   1400240b5:	call   QWORD PTR [rsi-0x69006901]
   1400240bb:	dec    ecx
   1400240bd:	add    al,0x2c
   1400240bf:	add    cl,cl
   1400240c1:	add    al,0xc9
   1400240c3:	add    al,0x40
   1400240c5:	add    BYTE PTR [rcx],bh
   1400240c7:	add    cl,cl
   1400240c9:	add    al,0x96
   1400240cb:	call   QWORD PTR [rsi-0x36fb36f8]
   1400240d1:	add    al,0x96
   1400240d3:	dec    DWORD PTR [rcx+0x31ff9600]
   1400240d9:	add    BYTE PTR [rsi+0x5dff96ff],dl
   1400240df:	add    BYTE PTR [rax+0x1],bl
   1400240e2:	fiadd  DWORD PTR [rcx]
   1400240e4:	pop    rdi
   1400240e5:	add    BYTE PTR [rsi+0x0],dl
   1400240e8:	xchg   esi,eax
   1400240e9:	inc    DWORD PTR [rsi+0x55ff9601]
   1400240ef:	add    BYTE PTR [rdx+rcx*1-0x69006a],dl
   1400240f6:	xchg   esi,eax
   1400240f7:	call   QWORD PTR [rsi-0x42006901]
   1400240fd:	add    BYTE PTR [rsi-0x69fe2501],dl
   140024103:	call   QWORD PTR [rax+0x0]
   140024106:	xchg   esi,eax
   140024107:	call   QWORD PTR [rsi+0x53ff96ff]
   14002410d:	add    BYTE PTR [rsi-0x69006901],dl
   140024113:	call   QWORD PTR [rdx+rcx*1-0x69006a]
   14002411a:	(bad)  
   14002411b:	add    DWORD PTR [rsi-0x7dfdd801],edx
   140024121:	add    BYTE PTR [rsi],ch
   140024123:	or     ch,BYTE PTR [rsi]
   140024125:	add    BYTE PTR [rbx],dh
   140024127:	add    BYTE PTR [rax+rax*1],dh
   14002412a:	(bad)  
   14002412b:	or     ecx,ecx
   14002412d:	add    al,0x96
   14002412f:	(bad)  
   140024130:	(bad)  
   140024131:	add    cl,cl
   140024133:	add    al,0x38
   140024135:	add    BYTE PTR [rsi+0x3c003aff],dl
   14002413b:	add    BYTE PTR [rsi-0x25006901],dl
   140024141:	add    DWORD PTR [rsi-0x69006901],edx
   140024147:	call   QWORD PTR [rsi-0x25ffc201]
   14002414d:	add    DWORD PTR [rsi],edi
   14002414f:	add    BYTE PTR [rbx+0x0],al
   140024152:	xchg   esp,eax
   140024153:	or     al,BYTE PTR [rax+rax*1-0x6a]
   140024157:	call   QWORD PTR [rsi-0x69f5d101]
   14002415d:	call   QWORD PTR [rsi-0x69ffa801]
   140024163:	call   QWORD PTR [rsi-0x69006901]
   140024169:	jmp    FWORD PTR [rsi+0x0]
   14002416c:	xchg   esi,eax
   14002416d:	call   QWORD PTR [rsi-0x69006901]
   140024173:	call   QWORD PTR [rsi-0x17006901]
   140024179:	inc    DWORD PTR [rbp+0x0]
   14002417c:	leave  
   14002417d:	add    al,0x7a
   14002417f:	add    BYTE PTR [rdi-0x69006a00],cl
   140024185:	call   QWORD PTR [rsi-0x69fa7401]
   14002418b:	dec    DWORD PTR [rdx+0x0]
   14002418e:	rex.WR add BYTE PTR [rbp+0x0],r9b
   140024192:	xchg   esi,eax
   140024193:	dec    DWORD PTR [rip+0x48004901]        # 0x188028a9a
   140024199:	add    BYTE PTR [rbx+0x2],ah
   14002419c:	rex.WXB add BYTE PTR [r10+0x0],sil
   1400241a0:	lea    eax,[rcx]
   1400241a2:	cmp    al,BYTE PTR [rcx]
   1400241a4:	fiadd  DWORD PTR [rcx]
   1400241a6:	leave  
   1400241a7:	add    al,0x1f
   1400241a9:	add    ecx,ecx
   1400241ab:	add    al,0xc9
   1400241ad:	add    al,0xc9
   1400241af:	add    al,0xc9
   1400241b1:	add    al,0x8d
   1400241b3:	add    ecx,ecx
   1400241b5:	add    al,0xc9
   1400241b7:	add    al,0xc9
   1400241b9:	add    al,0xc9
   1400241bb:	add    al,0xc9
   1400241bd:	add    al,0xda
   1400241bf:	add    bh,dl
   1400241c1:	add    dh,al
   1400241c3:	add    al,al
   1400241c5:	add    BYTE PTR [rsi-0x72fe7300],dh
   1400241cb:	add    DWORD PTR [rax],edi
   1400241cd:	add    ecx,ecx
   1400241cf:	add    al,0x37
   1400241d1:	add    cl,cl
   1400241d3:	add    al,0x3b
   1400241d5:	add    cl,cl
   1400241d7:	add    al,0x96
   1400241d9:	dec    DWORD PTR [rsi-0x69fb36fe]
   1400241df:	dec    ecx
   1400241e1:	add    al,0x36
   1400241e3:	add    BYTE PTR [rip+0x3204c900],dh        # 0x172070ae9
   1400241e9:	add    BYTE PTR [rsi],ch
   1400241eb:	or     dl,BYTE PTR [rsi+0x7c04c9ff]
   1400241f1:	add    BYTE PTR [rsi],ch
   1400241f3:	or     dl,BYTE PTR [rsi+0x5a04c9ff]
   1400241f9:	add    cl,cl
   1400241fb:	add    al,0xc9
   1400241fd:	add    al,0x69
   1400241ff:	add    BYTE PTR [rax+0x0],bl
   140024202:	leave  
   140024203:	add    al,0x96
   140024205:	call   QWORD PTR [rax+rax*1-0x63]
   140024209:	add    ch,ah
   14002420b:	call   QWORD PTR [rsi-0x36006901]
   140024211:	add    al,0x96
   140024213:	(bad)  
   140024214:	fiadd  DWORD PTR [rcx]
   140024216:	leave  
   140024217:	add    al,0x96
   140024219:	call   QWORD PTR [rdx+0x0]
   14002421c:	leave  
   14002421d:	add    al,0x5b
   14002421f:	add    BYTE PTR [rsi],ch
   140024221:	or     dl,BYTE PTR [rsi+0x7804c9ff]
   140024227:	add    BYTE PTR [rsi],ch
   140024229:	or     dl,BYTE PTR [rsi+0x6704c9ff]
   14002422f:	add    BYTE PTR [rsi],ch
   140024231:	or     dh,bh
   140024233:	jmp    FWORD PTR [rsi]
   140024235:	or     dl,BYTE PTR [rsi-0x69000101]
   14002423b:	dec    DWORD PTR [rbx]
   14002423d:	add    dl,ah
   14002423f:	call   QWORD PTR [rcx]
   140024241:	add    BYTE PTR [rsi+0x2eff96ff],dl
   140024247:	or     bl,bl
   140024249:	call   rbp
   14002424b:	add    DWORD PTR [rdi],ecx
   14002424d:	add    BYTE PTR [rdi],ah
   14002424f:	add    cl,BYTE PTR [rdx+0x2e04c900]
   140024255:	or     cl,BYTE PTR [rsi]
   140024257:	add    al,dh
   140024259:	push   QWORD PTR [rcx-0x13f69dff]
   14002425f:	dec    DWORD PTR [rdx+0x3]
   140024262:	(bad)  
   140024263:	add    BYTE PTR [rip+0x62052c00],al        # 0x1a2076e69
   140024269:	or     DWORD PTR [rax+rax*1],eax
   14002426c:	fdiv   st(7),st
   14002426e:	add    al,BYTE PTR [rax]
   140024270:	leave  
   140024271:	add    al,0x7
   140024273:	add    dh,ch
   140024275:	dec    ecx
   140024277:	add    al,0xa
   140024279:	add    cl,cl
   14002427b:	add    al,0xe6
   14002427d:	push   rbx
   14002427f:	dec    eax
   140024281:	or     DWORD PTR [rsi-0x69006901],edx
   140024287:	call   QWORD PTR [rsi-0x69006901]
   14002428d:	dec    ecx
   14002428f:	add    al,0x96
   140024291:	call   QWORD PTR [rsi-0x20006901]
   140024297:	inc    ebp
   140024299:	jmp    rdi
   14002429b:	call   QWORD PTR [rdx+rcx*1-0x69ffe9]
   1400242a2:	(bad)
   1400242a5:	dec    ecx
   1400242a7:	add    al,0xf4
   1400242a9:	call   QWORD PTR [rsi-0x69ff7301]
   1400242af:	call   QWORD PTR [rsi-0x25ffe901]
   1400242b5:	add    esp,edi
   1400242b7:	call   FWORD PTR [rdx]
   1400242b9:	add    BYTE PTR [rdx+rcx*1-0x69fff4],dl
   1400242c0:	leave  
   1400242c1:	add    al,0x71
   1400242c3:	add    BYTE PTR [rsi],bl
   1400242c5:	add    BYTE PTR [rsi-0x69ff7101],dl
   1400242cb:	dec    DWORD PTR [rsi-0x36ff8700]
   1400242d1:	add    al,0x96
   1400242d3:	(bad)  
   1400242d4:	std    
   1400242d5:	jmp    FWORD PTR [rip+0xfffffffffbff9600]        # 0x13c01d8db
   1400242db:	call   QWORD PTR [rsi-0x69f5d101]
   1400242e1:	jmp    FWORD PTR [rax+rax*1+0x2e]
   1400242e5:	or     dl,BYTE PTR [rsi-0x69ff3001]
   1400242eb:	call   QWORD PTR [rsi+0x2e006aff]
   1400242f1:	or     ah,BYTE PTR [rip+0x19ff9600]        # 0x15a01d8f7
   1400242f7:	add    BYTE PTR [rax+rax*1],ah
   1400242fa:	xchg   esi,eax
   1400242fb:	(bad)  
   1400242fc:	fiadd  DWORD PTR [rcx]
   1400242fe:	add    BYTE PTR es:[rax],ch
   140024301:	add    BYTE PTR [rsi-0x69006901],dl
   140024307:	call   QWORD PTR [rsi-0x77fb3601]
   14002430d:	add    BYTE PTR [rsi],ch
   14002430f:	or     dl,BYTE PTR [rsi-0x59fb3601]
   140024315:	add    BYTE PTR [rsi],ch
   140024317:	or     dl,BYTE PTR [rsi-0x69fff201]
   14002431d:	dec    eax
   14002431f:	add    BYTE PTR [rsi-0x36006901],dl
   140024325:	add    al,0x96
   140024327:	call   QWORD PTR [rsi-0x69fe2501]
   14002432d:	call   QWORD PTR [rsi+0x10ffefff]
   140024333:	add    BYTE PTR [rdx+rcx*1-0x69000b],dl
   14002433a:	xchg   esi,eax
   14002433b:	inc    DWORD PTR [rbx-0x69f8ed00]
   140024341:	call   QWORD PTR [rsi-0x69f9b001]
   140024347:	call   QWORD PTR [rsi-0x69fa1201]
   14002434d:	call   QWORD PTR [rsi-0x69006901]
   140024353:	call   QWORD PTR [rsi+0x6dff96ff]
   140024359:	add    BYTE PTR [rsi-0x69006901],dl
   14002435f:	call   QWORD PTR [rsi-0x69006901]
   140024365:	call   QWORD PTR [rsi-0x69006901]
   14002436b:	call   QWORD PTR [rdx+rcx*1-0x69006a]
   140024372:	xchg   esi,eax
   140024373:	(bad)  
   140024374:	jmp    0x12d023079
   140024379:	add    bl,BYTE PTR [rax+0x29ffc400]
   14002437f:	add    BYTE PTR [rsi-0x40006901],dl
   140024385:	add    BYTE PTR [rsi-0x69ff4e01],dl
   14002438b:	call   QWORD PTR [rsi-0x7c006901]
   140024391:	add    ebx,ecx
   140024393:	add    BYTE PTR [rsi-0x69f88d01],dl
   140024399:	call   QWORD PTR [rsi-0x69006901]
   14002439f:	call   QWORD PTR [rsi-0x69006901]
   1400243a5:	call   QWORD PTR [rsi-0x4b006901]
   1400243ab:	add    BYTE PTR [rbx],ch
   1400243ad:	add    BYTE PTR [rax+0x1],bh
   1400243b0:	scas   al,BYTE PTR es:[rdi]
   1400243b1:	add    BYTE PTR [rax],dh
   1400243b3:	add    dl,bl
   1400243b5:	add    eax,esi
   1400243b7:	add    BYTE PTR [rsi-0x69fff701],dl
   1400243bd:	(bad)  
   1400243be:	in     al,dx
   1400243bf:	add    ch,BYTE PTR [rdi+0x0]
   1400243c2:	xchg   esi,eax
   1400243c3:	(bad)  
   1400243c4:	(bad)  
   1400243c5:	(bad)  
   1400243c6:	in     al,dx
   1400243c7:	add    dl,BYTE PTR [rsi+0x6aff96ff]
   1400243cd:	add    al,0x96
   1400243cf:	call   QWORD PTR [rsi+0xaff96ff]
   1400243d5:	add    al,0x96
   1400243d7:	call   QWORD PTR [rsi-0x69ff1b01]
   1400243dd:	push   QWORD PTR [rdx+0x7]
   1400243e0:	xchg   esi,eax
   1400243e1:	jmp    QWORD PTR [rdi]
   1400243e3:	add    DWORD PTR [rip+0xffffffff96ff9600],edx        # 0xd701d9e9
   1400243e9:	(bad)  
   1400243ea:	mov    eax,0x27017b00
   1400243ef:	add    cl,dl
   1400243f1:	(bad)  
   1400243f2:	and    BYTE PTR [rcx],al
   1400243f4:	cli    
   1400243f5:	or     dl,BYTE PTR [rdx]
   1400243f7:	add    BYTE PTR [rsi-0x1dffdd01],dl
   1400243fd:	add    DWORD PTR [rcx],esp
   1400243ff:	add    BYTE PTR [rdi],ah
   140024401:	add    cl,BYTE PTR [rdx+0x2e04c900]
   140024407:	or     bl,BYTE PTR [rdi]
   140024409:	add    BYTE PTR [rcx],cl
   14002440b:	add    BYTE PTR [rdi-0x7cfffcff],cl
   140024411:	add    dl,BYTE PTR [rbx]
   140024413:	add    BYTE PTR [rip+0x1c052c00],bl        # 0x15c077019
   140024419:	add    BYTE PTR [rcx],al
   14002441b:	add    BYTE PTR [rbx],bl
   14002441d:	add    cl,cl
   14002441f:	add    al,0x18
   140024421:	add    BYTE PTR [rax],al
   140024423:	add    cl,cl
   140024425:	add    al,0x14
   140024427:	add    cl,cl
   140024429:	add    al,0xf9
   14002442b:	(bad)  
   14002442c:	clc    
   14002442d:	call   QWORD PTR [rsi-0x69ff3e01]
   140024433:	dec    ebp
   140024435:	add    BYTE PTR [rsi+0x2a002fff],dl
   14002443b:	add    BYTE PTR [rcx+0x1],cl
   14002443e:	rol    BYTE PTR [rax],1
   140024440:	(bad)  
   140024441:	add    DWORD PTR [rsi-0x69ff7f01],edx
   140024447:	call   QWORD PTR [rsi+0x30ff96ff]
   14002444d:	or     ah,ch
   14002444f:	add    dh,BYTE PTR [rcx-0x69ffdcfa]
   140024455:	inc    DWORD PTR [rax+rax*1-0x69006a]
   14002445c:	and    BYTE PTR [rax],al
   14002445e:	xchg   esi,eax
   14002445f:	call   QWORD PTR [rsi-0x13fd1301]
   140024465:	add    bl,BYTE PTR [rsi+0x0]
   140024468:	in     al,dx
   140024469:	add    dl,BYTE PTR [rsi-0x69ff0501]
   14002446f:	push   QWORD PTR [rax+rax*1-0x6a]
   140024473:	call   QWORD PTR [rsi-0x16ff1601]
   140024479:	add    BYTE PTR [rsi-0x69006901],dl
   14002447f:	call   QWORD PTR [rsi-0x76006901]
   140024485:	add    DWORD PTR [rsi-0x69ff2901],edx
   14002448b:	jmp    QWORD PTR [rax+rax*1-0x6a]
   14002448f:	call   QWORD PTR [rsi-0x69fe2501]
   140024495:	call   QWORD PTR [rsi-0x69ff9f01]
   14002449b:	call   QWORD PTR [rsi-0x69006901]
   1400244a1:	call   QWORD PTR [rsi+0xfff91ff]
   1400244a7:	add    BYTE PTR [rdi+0x0],al
   1400244aa:	push   rdi
   1400244ab:	add    BYTE PTR [rax+0x0],dl
   1400244ae:	xor    DWORD PTR [rcx],eax
   1400244b0:	cli    
   1400244b1:	call   QWORD PTR [rcx-0x6e006e01]
   1400244b7:	call   QWORD PTR [rcx-0x6e006e01]
   1400244bd:	call   QWORD PTR [rcx-0x6e006e01]
   1400244c3:	call   QWORD PTR [rcx-0x6e006e01]
   1400244c9:	call   rsi
   1400244cb:	call   QWORD PTR [rcx-0x6e006e01]
   1400244d1:	call   QWORD PTR [rcx-0x6e006e01]
   1400244d7:	call   QWORD PTR [rcx-0x6e006e01]
   1400244dd:	call   FWORD PTR [rdi+0x0]
   1400244e0:	xchg   ecx,eax
   1400244e1:	call   QWORD PTR [rcx+0x3ff91ff]
   1400244e7:	add    BYTE PTR [rcx-0x4006e01],dl
   1400244ed:	push   rbp
   1400244ef:	dec    DWORD PTR [rcx]
   1400244f1:	add    BYTE PTR [rbp+0x0],ch
   1400244f4:	pop    rbx
   1400244f5:	add    BYTE PTR [rcx+0x2d003eff],dl
   1400244fb:	add    BYTE PTR [rcx-0x6e006e01],dl
   140024501:	push   QWORD PTR [rdx]
   140024503:	add    BYTE PTR [rdi],bh
   140024505:	add    BYTE PTR [rcx-0x6e006e01],dl
   14002450b:	call   QWORD PTR [rcx-0x6e006e01]
   140024511:	jmp    QWORD PTR [rax]
   140024513:	add    BYTE PTR [rcx-0x3aff3401],dl
   140024519:	add    BYTE PTR [rcx-0x4dff4201],dl
   14002451f:	add    BYTE PTR [rcx-0x6e006e01],dl
   140024525:	call   QWORD PTR [rcx-0x46ff4901]
   14002452b:	add    BYTE PTR [rax+rax*1-0x6e006f],bh
   140024532:	xchg   ecx,eax
   140024533:	call   QWORD PTR [rcx-0x6eff3e01]
   140024539:	inc    esi
   14002453b:	add    BYTE PTR [rax+0x72007100],ch
   140024541:	add    BYTE PTR [rcx+0x740085ff],dl
   140024547:	add    BYTE PTR [rbx+0x0],bh
   14002454a:	add    DWORD PTR [rax],0x840082
   140024550:	xchg   ecx,eax
   140024551:	dec    DWORD PTR [rax-0x71ff7500]
   140024557:	add    BYTE PTR [rcx-0x6e006e01],dl
   14002455d:	call   QWORD PTR [rcx-0x6e006e01]
   140024563:	call   QWORD PTR [rcx-0x6e006e01]
   140024569:	call   QWORD PTR [rcx-0x6b006e01]
   14002456f:	add    BYTE PTR [rcx-0x6eff6801],dl
   140024575:	(bad)  
   140024576:	mov    edx,0xdb000600
   14002457b:	call   QWORD PTR [rcx-0x6e006e01]
   140024581:	call   QWORD PTR [rcx-0x6e006e01]
   140024587:	call   QWORD PTR [rcx-0x6e006e01]
   14002458d:	call   QWORD PTR [rcx-0x6e006e01]
   140024593:	call   QWORD PTR [rcx-0x6e006e01]
   140024599:	call   QWORD PTR [rcx-0x6e006e01]
   14002459f:	call   QWORD PTR [rcx-0x6e006e01]
   1400245a5:	call   QWORD PTR [rcx-0x6e006e01]
   1400245ab:	call   QWORD PTR [rcx-0x6e006e01]
   1400245b1:	call   QWORD PTR [rcx-0x6e006e01]
   1400245b7:	call   QWORD PTR [rcx-0x6e006e01]
   1400245bd:	call   QWORD PTR [rcx+0x2aff91ff]
   1400245c3:	add    BYTE PTR [rcx-0x6e006e01],dl
   1400245c9:	call   QWORD PTR [rcx+0x16ff91ff]
   1400245cf:	add    BYTE PTR [rcx+0x2ff91ff],dl
   1400245d5:	add    BYTE PTR [rcx-0x6e006e01],dl
   1400245db:	call   QWORD PTR [rcx-0x6e006e01]
   1400245e1:	call   QWORD PTR [rcx-0x6e006e01]
   1400245e7:	call   QWORD PTR [rcx-0x6e006e01]
   1400245ed:	call   QWORD PTR [rcx-0x6eff9f01]
   1400245f3:	inc    DWORD PTR [rdx+0x0]
   1400245f6:	adc    eax,0x91ff9100
   1400245fb:	inc    DWORD PTR [rax]
   1400245fd:	add    BYTE PTR [rcx+0x230112ff],dl
   140024603:	add    BYTE PTR [rax+0x0],bl
   140024606:	xchg   ecx,eax
   140024607:	call   QWORD PTR [rcx-0x6e006e01]
   14002460d:	call   QWORD PTR [rcx-0x6e006e01]
   140024613:	jmp    FWORD PTR [rcx]
   140024615:	add    BYTE PTR [rbx+0x0],cl
   140024618:	xchg   ecx,eax
   140024619:	call   QWORD PTR [rcx+0x31ff91ff]
   14002461f:	add    BYTE PTR [rcx+0x30ff91ff],dl
   140024625:	add    BYTE PTR [rcx-0x6e006e01],dl
   14002462b:	call   QWORD PTR [rcx-0x6e006e01]
   140024631:	call   QWORD PTR [rcx-0x6effc601]
   140024637:	call   QWORD PTR [rcx-0x6e006e01]
   14002463d:	call   QWORD PTR [rcx-0x6e006e01]
   140024643:	call   QWORD PTR [rcx+0x4dff91ff]
   140024649:	add    BYTE PTR [rcx+0x36ff91ff],dl
   14002464f:	add    BYTE PTR [rcx-0x6effe401],dl
   140024655:	push   rbx
   140024657:	add    BYTE PTR [rcx-0x6effe601],dl
   14002465d:	jmp    QWORD PTR [rax-0x6effdc00]
   140024663:	call   QWORD PTR [rcx+0x2800a9ff]
   140024669:	add    BYTE PTR [rcx-0x6e006e01],dl
   14002466f:	call   QWORD PTR [rcx+0x38ff91ff]
   140024675:	add    BYTE PTR [rcx-0x6e006e01],dl
   14002467b:	call   QWORD PTR [rcx-0x4b006e01]
   140024681:	add    BYTE PTR [rcx-0x5c006e01],dl
   140024687:	add    BYTE PTR [rcx-0x6e006e01],dl
   14002468d:	push   rsi
   14002468f:	add    BYTE PTR [rcx-0x6e006e01],dl
   140024695:	call   QWORD PTR [rcx-0x6e006e01]
   14002469b:	call   QWORD PTR [rcx-0x6e006e01]
   1400246a1:	call   QWORD PTR [rcx-0x6e006e01]
   1400246a7:	call   QWORD PTR [rcx-0x6e006e01]
   1400246ad:	call   QWORD PTR [rcx-0x6efff701]
   1400246b3:	call   QWORD PTR [rcx-0x6e006e01]
   1400246b9:	call   QWORD PTR [rcx-0x6effba01]
   1400246bf:	call   QWORD PTR [rcx-0x6e006e01]
   1400246c5:	call   QWORD PTR [rcx-0x6e006e01]
   1400246cb:	call   QWORD PTR [rcx-0x6e006e01]
   1400246d1:	call   QWORD PTR [rcx-0x6e006e01]
   1400246d7:	(bad)  
   1400246d8:	cmp    eax,0x9100d300
   1400246dd:	call   QWORD PTR [rax]
   1400246df:	add    DWORD PTR [rcx],eax
   1400246e1:	add    DWORD PTR [rax],eax
   1400246e3:	add    esp,ebp
   1400246e5:	add    BYTE PTR [rcx+0x530051ff],dl
   1400246eb:	add    BYTE PTR [rbp+0x0],dl
   1400246ee:	add    BYTE PTR [rsi+0x0],r11b
   1400246f2:	xchg   ecx,eax
   1400246f3:	call   QWORD PTR [rcx-0x6e006e01]
   1400246f9:	call   QWORD PTR [rcx-0x6e006e01]
   1400246ff:	call   QWORD PTR [rcx-0x6eff1401]
   140024705:	(bad)  
   140024706:	fiadd  DWORD PTR [rax]
   140024708:	xchg   ecx,eax
   140024709:	call   rcx
   14002470b:	add    BYTE PTR [rcx-0xb006e01],dl
   140024711:	add    BYTE PTR [rcx-0x6eff1c01],dl
   140024717:	call   QWORD PTR [rcx-0x6eff1b01]
   14002471d:	(bad)  
   14002471e:	out    dx,al
   14002471f:	add    BYTE PTR [rcx-0x6effde01],dl
   140024725:	jmp    QWORD PTR [rdi-0xa006f00]
   14002472b:	add    BYTE PTR [rcx-0x1ff0201],dl
   140024731:	add    BYTE PTR [rcx-0x1e006e01],dl
   140024737:	add    BYTE PTR [rcx-0x6e006e01],dl
   14002473d:	call   QWORD PTR [rcx-0x6e006e01]
   140024743:	(bad)  
   140024744:	fld    DWORD PTR [rax]
   140024746:	xchg   ecx,eax
   140024747:	inc    edx
   140024749:	add    ch,dl
   14002474b:	add    BYTE PTR [rcx-0x2f006e01],dl
   140024751:	add    BYTE PTR [rcx-0x6eff3001],dl
   140024757:	push   QWORD PTR [rax+rax*1]
   14002475a:	xchg   ecx,eax
   14002475b:	dec    ebp
   14002475d:	add    BYTE PTR [rcx-0x6effc801],dl
   140024763:	dec    ecx
   140024765:	add    BYTE PTR [rcx-0x6eff3801],dl
   14002476b:	call   QWORD PTR [rcx-0x6e006e01]
   140024771:	call   QWORD PTR [rcx-0x6e006e01]
   140024777:	call   QWORD PTR [rcx-0x6efee901]
   14002477d:	jmp    QWORD PTR [rdi]
   14002477f:	add    BYTE PTR [rcx-0x6effdd01],dl
   140024785:	jmp    FWORD PTR [rbp-0x6eff2500]
   14002478b:	call   QWORD PTR [rcx-0x18ffca01]
   140024791:	add    BYTE PTR [rcx-0x6effb601],dl
   140024797:	call   QWORD PTR [rcx+0x3b002cff]
   14002479d:	add    BYTE PTR [rcx-0x6e006e01],dl
   1400247a3:	jmp    FWORD PTR [rdi]
   1400247a5:	add    BYTE PTR [rcx+0x660018ff],dl
   1400247ab:	add    BYTE PTR [rcx-0x6eff9a01],dl
   1400247b1:	call   QWORD PTR [rcx-0x6eff9001]
   1400247b7:	call   QWORD PTR [rcx-0x6e006e01]
   1400247bd:	call   QWORD PTR [rcx+0x1aff91ff]
   1400247c3:	add    BYTE PTR [rcx-0x6e006e01],dl
   1400247c9:	call   QWORD PTR [rcx-0x6e006e01]
   1400247cf:	inc    DWORD PTR [rcx+0x0]
   1400247d2:	xchg   ecx,eax
   1400247d3:	call   QWORD PTR [rcx-0x6e006e01]
   1400247d9:	dec    DWORD PTR [rax+rax*1-0x6f]
   1400247dd:	call   QWORD PTR [rcx-0x6e006e01]
   1400247e3:	call   QWORD PTR [rcx+0x4fff91ff]
   1400247e9:	add    BYTE PTR [rcx+0x59ff91ff],dl
   1400247ef:	add    BYTE PTR [rcx+0x33ff91ff],dl
   1400247f5:	add    BYTE PTR [rcx-0x6e006e01],dl
   1400247fb:	call   QWORD PTR [rcx-0x3d006e01]
   140024801:	call   QWORD PTR [rcx-0x6effda01]
   140024807:	inc    ecx
   140024809:	call   QWORD PTR [rcx-0x6e006e01]
   14002480f:	call   QWORD PTR [rcx-0x6efe7c01]
   140024815:	call   QWORD PTR [rcx-0x6efef701]
   14002481b:	call   QWORD PTR [rcx-0x6e006e01]
   140024821:	call   QWORD PTR [rcx-0x35ff6101]
   140024827:	call   QWORD PTR [rcx+0x1cff91ff]
   14002482d:	add    BYTE PTR [rcx-0x6effd901],dl
   140024833:	call   QWORD PTR [rdi]
   140024835:	add    BYTE PTR [rcx-0x6e006e01],dl
   14002483b:	call   QWORD PTR [rcx-0x6effd401]
   140024841:	dec    DWORD PTR [rsi+0x0]
   140024844:	xchg   ecx,eax
   140024845:	(bad)  
   140024846:	cmp    al,BYTE PTR [rax]
   140024848:	xchg   ecx,eax
   140024849:	inc    DWORD PTR [rbx+0x0]
   14002484c:	xchg   ecx,eax
   14002484d:	call   QWORD PTR [rcx-0x6e006e01]
   140024853:	call   QWORD PTR [rcx+0x12ff91ff]
   140024859:	add    BYTE PTR [rcx-0x3c006e01],dl
   14002485f:	add    BYTE PTR [rcx-0x6e006e01],dl
   140024865:	call   QWORD PTR [rcx-0x6eff5e01]
   14002486b:	call   QWORD PTR [rcx-0x6e006e01]
   140024871:	call   QWORD PTR [rax+rax*1]
   140024874:	xchg   ecx,eax
   140024875:	call   QWORD PTR [rcx-0x6eff6201]
   14002487b:	call   QWORD PTR [rcx-0x6effe001]
   140024881:	call   QWORD PTR [rcx-0x6e006e01]
   140024887:	call   QWORD PTR [rcx-0x6e006e01]
   14002488d:	call   QWORD PTR [rcx-0x6e006e01]
   140024893:	call   QWORD PTR [rcx-0x6e006e01]
   140024899:	call   QWORD PTR [rcx-0x6e006e01]
   14002489f:	dec    esi
   1400248a1:	add    BYTE PTR [rcx-0x6e006e01],dl
   1400248a7:	call   QWORD PTR [rcx-0x6006e01]
   1400248ad:	call   QWORD PTR [rcx-0x6e006e01]
   1400248b3:	call   QWORD PTR [rcx-0x6e006e01]
   1400248b9:	call   QWORD PTR [rcx-0x6e001701]
   1400248bf:	call   QWORD PTR [rcx-0xb006e01]
   1400248c5:	call   QWORD PTR [rcx+0x56ff91ff]
   1400248cb:	add    DWORD PTR [rcx-0x6e006e01],edx
   1400248d1:	call   QWORD PTR [rcx-0x6e006e01]
   1400248d7:	call   QWORD PTR [rcx-0x6e006e01]
   1400248dd:	call   QWORD PTR [rcx-0xf006e01]
   1400248e3:	jmp    rax
   1400248e5:	call   QWORD PTR [rcx-0x6efffa01]
   1400248eb:	call   QWORD PTR [rcx-0x6e006e01]
   1400248f1:	call   FWORD PTR [rax-0x6e006f00]
   1400248f7:	call   QWORD PTR [rcx-0x6eff0701]
   1400248fd:	call   QWORD PTR [rcx-0x6efeb501]
   140024903:	call   QWORD PTR [rcx+0x44ff91ff]
   140024909:	add    DWORD PTR [rcx-0x6e006e01],edx
   14002490f:	call   QWORD PTR [rcx-0x6efe7e01]
   140024915:	call   QWORD PTR [rcx-0x6e001401]
   14002491b:	call   QWORD PTR [rcx+0xe0001ff]
   140024921:	add    BYTE PTR [rcx-0x6efe9001],dl
   140024927:	(bad)  
   140024928:	call   0xd102552d
   14002492d:	call   QWORD PTR [rcx-0x6efff401]
   140024933:	dec    DWORD PTR [rdx]
   140024935:	add    BYTE PTR [rcx-0x72ff5b01],dl
   14002493b:	add    BYTE PTR [rcx+0x7ff91ff],dl
   140024941:	add    BYTE PTR [rcx-0x6effbf01],dl
   140024947:	call   QWORD PTR [rcx-0x6effec01]
   14002494d:	call   QWORD PTR [rcx+0x11ff91ff]
   140024953:	add    BYTE PTR [rcx+0x3cffffff],dl
   140024959:	add    BYTE PTR [rcx-0x6effd101],dl
   14002495f:	call   QWORD PTR [rcx-0x6e006e01]
   140024965:	call   QWORD PTR [rcx-0x6e000e01]
   14002496b:	call   QWORD PTR [rcx-0x1006e01]
   140024971:	(bad)  
   140024972:	out    dx,eax
   140024973:	(bad)  
   140024974:	cld    
   140024975:	call   QWORD PTR [rcx-0x6e006e01]
   14002497b:	call   QWORD PTR [rcx-0x1b006e01]
   140024981:	add    DWORD PTR [rdx-0x2fec700],ecx
   140024987:	call   QWORD PTR [rcx-0x6e006e01]
   14002498d:	call   QWORD PTR [rcx-0x6efffb01]
   140024993:	call   QWORD PTR [rcx+0x10000dff]
   140024999:	add    BYTE PTR [rcx+0x0],ah
   14002499c:	jg     0x14002499e
   14002499e:	xchg   ecx,eax
   14002499f:	call   QWORD PTR [rcx-0x6e006e01]
   1400249a5:	call   QWORD PTR [rcx-0x6e006e01]
   1400249ab:	call   QWORD PTR [rcx-0x6e006e01]
   1400249b1:	call   QWORD PTR [rcx-0x6e006e01]
   1400249b7:	push   rdx
   1400249b9:	call   QWORD PTR [rcx-0x6e006e01]
   1400249bf:	call   QWORD PTR [rcx-0x6e006e01]
   1400249c5:	(bad)  
   1400249c6:	clc    
   1400249c7:	call   QWORD PTR [rcx-0x6e006e01]
   1400249cd:	call   QWORD PTR [rcx-0x6e006e01]
   1400249d3:	call   QWORD PTR [rcx+0xff91ff]
   1400249d9:	add    BYTE PTR [rax],al
   1400249db:	add    BYTE PTR [rax],al
   1400249dd:	add    BYTE PTR [rax],al
   1400249df:	add    BYTE PTR [rax-0x4ffe6aff],ch
   1400249e5:	add    DWORD PTR [rcx+rax*1+0xf5015a],edx
   1400249ec:	cmp    eax,0x96016202
   1400249f1:	add    DWORD PTR [rdx-0x1],edi
   1400249f4:	int    0x1
   1400249f6:	nop
   1400249f7:	dec    DWORD PTR [rdi+0x78ff7dff]
   1400249fd:	inc    eax
   1400249ff:	add    DWORD PTR [rsi+0x1],ebx
   140024a02:	jne    0x140024a03
   140024a04:	xchg   edx,eax
   140024a05:	add    DWORD PTR [rax-0x7afef3ff],ecx
   140024a0b:	push   QWORD PTR [rdx-0x1]
   140024a0e:	rol    DWORD PTR [rcx],1
   140024a10:	pop    QWORD PTR [rcx]
   140024a12:	mov    es,WORD PTR [rcx]
   140024a14:	jge    0x140024a15
   140024a16:	jne    0x140024a17
   140024a18:	rol    DWORD PTR [rcx],1
   140024a1a:	int    0x1
   140024a1c:	fiadd  DWORD PTR [rcx]
   140024a1e:	js     0x140024a1f
   140024a20:	cs add al,al
   140024a23:	add    DWORD PTR [rdx-0x1],edi
   140024a26:	nop
   140024a27:	dec    DWORD PTR [rdi-0x7afe5701]
   140024a2d:	call   FWORD PTR [rsi+0x1]
   140024a30:	jb     0x140024a31
   140024a32:	cmc    
   140024a33:	add    BYTE PTR [rdi],ah
   140024a35:	add    ah,cl
   140024a37:	add    esp,esp
   140024a39:	add    DWORD PTR [rcx+rax*1],ecx
   140024a3c:	add    cl,BYTE PTR [rdx+rax*1]
   140024a40:	popf   
   140024a41:	add    edx,esp
   140024a43:	add    DWORD PTR [rsi-0x48fdd1ff],esi
   140024a49:	add    DWORD PTR [rip+0x67022e01],eax        # 0x1a7047850
   140024a4f:	add    ah,BYTE PTR [rcx+rax*1+0x1a201c4]
   140024a56:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140024a57:	add    DWORD PTR [rbx],ebx
   140024a59:	add    esi,eax
   140024a5b:	add    DWORD PTR [rdi-0x53fe5400],ecx
   140024a61:	add    BYTE PTR [rsi],ch
   140024a63:	add    ah,BYTE PTR [rsi+0x2e01a700]
   140024a69:	add    al,al
   140024a6b:	add    DWORD PTR [rax+0x2],esp
   140024a6e:	rex.WB add BYTE PTR [r10],spl
   140024a71:	add    al,al
   140024a73:	add    DWORD PTR [rbp+0x11b00],edx
   140024a79:	add    BYTE PTR [rbx+0x1],al
   140024a7c:	cwde   
   140024a7d:	add    DWORD PTR [rax],eax
   140024a7f:	add    BYTE PTR [rax],ah
   140024a81:	add    dh,BYTE PTR [rbx]
   140024a83:	add    DWORD PTR [rcx+rax*1],ecx
   140024a86:	add    BYTE PTR [rax],al
   140024a88:	add    BYTE PTR [rax],al
   140024a8a:	add    BYTE PTR [rax],al
   140024a8c:	pop    QWORD PTR [rax]
   140024a8e:	mov    eax,0xc0015e00
   140024a93:	add    ebp,esi
   140024a95:	add    BYTE PTR [rsi+0x49006500],ah
   140024a9b:	add    ch,cl
   140024a9d:	add    DWORD PTR [rcx+0x1],ecx
   140024aa0:	rol    DWORD PTR [rcx],1
   140024aa2:	out    dx,al
   140024aa3:	add    al,cl
   140024aa5:	add    DWORD PTR [rax+0x5000f101],ebp
   140024aab:	add    DWORD PTR [rdx+0x2],ebp
   140024aae:	mov    ebp,0x6029900
   140024ab3:	add    DWORD PTR [rdi+0x14300],ecx
   140024ab9:	add    BYTE PTR [rbp-0x70fec300],dh
   140024abf:	add    bl,al
   140024ac1:	add    DWORD PTR [rax],eax
   140024ac3:	add    BYTE PTR [rbx],bh
   140024ac5:	add    DWORD PTR [rdx-0x70ff70ff],edi
   140024acb:	add    al,al
   140024acd:	add    BYTE PTR [rbx],ch
   140024acf:	add    al,BYTE PTR [rax]
   140024ad1:	add    BYTE PTR [rdi-0xcff1000],cl
   140024ad7:	add    BYTE PTR [rdi],ch
   140024ad9:	add    DWORD PTR [rdi+0x6501c400],edx
   140024adf:	add    BYTE PTR [rdi-0x70ff4700],cl
   140024ae5:	add    BYTE PTR [rbx+0x38008f01],dh
   140024aeb:	add    DWORD PTR [rcx],esi
   140024aed:	add    esp,esi
   140024aef:	add    BYTE PTR [rax],al
   140024af1:	add    BYTE PTR [rax],al
   140024af3:	add    BYTE PTR [rdi],ch
   140024af5:	add    edx,ebp
   140024af7:	add    DWORD PTR [rbx],ebp
   140024af9:	add    bh,BYTE PTR [rax+rax*1]
   140024afc:	cmp    al,0x0
   140024afe:	push   rsi
   140024aff:	add    DWORD PTR [rdi-0x40ff7100],ecx
   140024b05:	add    BYTE PTR [rax-0x4ff03ff],dh
   140024b0b:	add    BYTE PTR [rdi+0x0],ah
   140024b0e:	pop    rax
   140024b0f:	add    DWORD PTR [rip+0xffffffff90003d00],edi        # 0xd0028815
   140024b15:	add    BYTE PTR [rax+rax*1],bh
   140024b18:	xor    DWORD PTR [rcx],eax
   140024b1a:	xchg   esi,eax
   140024b1b:	add    dl,BYTE PTR [rbp+0x67003c02]
   140024b21:	add    BYTE PTR [rax+0x60028f02],dl
   140024b27:	add    DWORD PTR [rbp+0x1],eax
   140024b2a:	push   rdx
   140024b2b:	add    DWORD PTR [rip+0x46022c00],edi        # 0x186047731
   140024b31:	add    ebp,esi
   140024b33:	add    DWORD PTR [rip+0x10100],edi        # 0x140034c39
   140024b39:	add    DWORD PTR [rdx-0x57ff70ff],ebp
   140024b3f:	add    BYTE PTR [rcx+rax*1+0x2970298],dh
   140024b46:	test   eax,0x1e015c00
   140024b4b:	add    cl,BYTE PTR [rax]
   140024b4d:	add    DWORD PTR [rax+0x0],eax
   140024b50:	add    DWORD PTR [r9+0x2],edi
   140024b54:	jp     0x140024b58
   140024b56:	jmp    0x140024b59
   140024b58:	je     0x140024b5c
   140024b5a:	ins    BYTE PTR es:[rdi],dx
   140024b5b:	add    ch,BYTE PTR [rbx+0x2]
   140024b5e:	add    eax,DWORD PTR [rcx]
   140024b60:	add    al,BYTE PTR [rcx]
   140024b62:	mov    bl,0x0
   140024b64:	add    BYTE PTR [r14-0x70fe3100],bpl
   140024b6b:	add    BYTE PTR [rsi+0x2],ch
   140024b6e:	add    eax,DWORD PTR [rcx]
   140024b70:	add    al,BYTE PTR [rcx]
   140024b72:	movabs al,ds:0x9010b020d019f01
   140024b7b:	add    DWORD PTR [rip+0xffffffffdd005702],ecx        # 0x11d02a283
   140024b81:	add    DWORD PTR [rax+0x0],ebx
   140024b84:	adc    eax,DWORD PTR [rdx]
   140024b86:	add    BYTE PTR [rax],al
   140024b88:	scas   al,BYTE PTR es:[rdi]
   140024b89:	add    BYTE PTR [rip+0xffffffff8f00af02],cl        # 0xcf02fa91
   140024b8f:	add    BYTE PTR [rbx+0x53005701],bl
   140024b95:	add    DWORD PTR [rax+0x0],ebx
   140024b98:	pop    rcx
   140024b99:	add    BYTE PTR [rdx+0x0],al
   140024b9c:	add    BYTE PTR [rax],al
   140024b9e:	push   rdi
   140024b9f:	add    BYTE PTR [rsi],ch
   140024ba1:	add    bl,BYTE PTR [rax+0x0]
   140024ba4:	rol    DWORD PTR [rcx],cl
   140024ba6:	lar    eax,WORD PTR [rdx+0x0]
   140024baa:	(bad)  
   140024bac:	pop    rcx
   140024bad:	add    BYTE PTR [rdi-0x64fef600],ch
   140024bb3:	add    DWORD PTR [rip+0x59023702],ecx        # 0x1990482bb
   140024bb9:	add    BYTE PTR [rip+0x20e02],cl        # 0x1400459c1
   140024bbf:	add    BYTE PTR [rdi+0x0],dl
   140024bc2:	rex.X add BYTE PTR [rax+0x0],bl
   140024bc6:	push   rdi
   140024bc7:	add    BYTE PTR [rdi+0x0],dl
   140024bca:	pop    rax
   140024bcb:	add    BYTE PTR [rax+0x0],bl
   140024bce:	and    eax,0xf00ae02
   140024bd3:	add    ch,ah
   140024bd5:	add    bl,ch
   140024bd7:	add    BYTE PTR [rdi],cl
   140024bd9:	add    bl,BYTE PTR [rcx+0x0]
   140024bdc:	movsxd eax,DWORD PTR [rdx]
   140024bde:	(bad)  
   140024bdf:	add    bl,BYTE PTR [rcx+0x0]
   140024be2:	pop    rcx
   140024be3:	add    BYTE PTR [rax],al
   140024be5:	add    BYTE PTR [rdi],cl
   140024be7:	add    cl,BYTE PTR [rsi]
   140024be9:	add    bl,dh
   140024beb:	add    esp,ebx
   140024bed:	add    DWORD PTR [rsi],ecx
   140024bef:	add    dl,BYTE PTR [rdx+rax*1]
   140024bf2:	adc    al,BYTE PTR [rdx]
   140024bf4:	rex.XB add BYTE PTR [r15-0x42fe4200],bpl
   140024bfb:	add    DWORD PTR [rsi],ecx
   140024bfd:	add    al,BYTE PTR [rax]
   140024bff:	add    BYTE PTR [rax+rax*1+0x43],al
   140024c03:	add    BYTE PTR [rsi-0x6dfd6d00],ch
   140024c09:	add    ch,BYTE PTR [rcx+0x0]
   140024c0c:	add    BYTE PTR [rax],al
   140024c0e:	add    BYTE PTR [rdi],r9b
   140024c11:	add    cl,BYTE PTR [rbx+0x0]
   140024c14:	rex.WR add BYTE PTR [rdi],r9b
   140024c17:	add    al,BYTE PTR [rax]
   140024c19:	add    BYTE PTR [rdi+0x2],ch
   140024c1c:	rex.XB add BYTE PTR [rip+0x38011e01],bl        # 0x178036a24
   140024c23:	add    dh,BYTE PTR [rsi]
   140024c25:	add    cl,BYTE PTR [rsi]
   140024c27:	add    al,BYTE PTR [rax+rax*1-0x51]
   140024c2b:	add    BYTE PTR [rsi],cl
   140024c2d:	add    dh,BYTE PTR [rax-0x73ff9600]
   140024c33:	add    ch,BYTE PTR [rbx+0x0]
   140024c36:	rex.WXB add BYTE PTR [r8+r8*1+0x26],cl
   140024c3b:	add    ah,BYTE PTR [rdx+rax*1]
   140024c3e:	scas   al,BYTE PTR es:[rdi]
   140024c3f:	add    BYTE PTR [rax],al
   140024c41:	add    BYTE PTR [rip+0xffffffff91011e01],bl        # 0xd1036a48
   140024c47:	add    cl,BYTE PTR [rbp+0x0]
   140024c4a:	rex.WRX add BYTE PTR [rsi-0x74fd7300],r13b
   140024c51:	add    al,BYTE PTR [rax]
   140024c53:	add    BYTE PTR [rdi],bl
   140024c55:	add    DWORD PTR [rax],esp
   140024c57:	add    DWORD PTR [rax],eax
	...
   140024c61:	add    BYTE PTR [rbp+0xafff],bl
   140024c67:	add    BYTE PTR [rax+0x4d000000],dh
   140024c6d:	add    BYTE PTR [rsi+0x0],cl
   140024c70:	popf   
   140024c71:	jmp    FWORD PTR [rdi-0x50000000]
   140024c77:	add    BYTE PTR [rdi],bl
   140024c79:	add    DWORD PTR [rax],esp
   140024c7b:	add    DWORD PTR [rax],eax
   140024c7d:	add    BYTE PTR [rdx],ah
   140024c7f:	add    DWORD PTR [rbx],esp
   140024c81:	add    DWORD PTR [rax],eax
   140024c83:	add    BYTE PTR [rax],al
   140024c85:	add    BYTE PTR [rdi+0x0],dl
   140024c88:	add    BYTE PTR [rax],al
   140024c8a:	pop    rax
   140024c8b:	add    BYTE PTR [rax],al
   140024c8d:	add    BYTE PTR [rdx+0x50012402],cl
   140024c93:	add    BYTE PTR [rcx+0x0],dl
   140024c96:	and    eax,0x26002301
   140024c9b:	add    DWORD PTR [rax],eax
   140024c9d:	add    BYTE PTR [rax],al
   140024c9f:	add    BYTE PTR [rcx+0x0],bl
   140024ca2:	push   rdx
   140024ca3:	add    BYTE PTR [rbx+0x0],dl
   140024ca6:	add    BYTE PTR [rax],al
   140024ca8:	add    BYTE PTR [rax],al
   140024caa:	push   rsp
   140024cab:	add    BYTE PTR [rbx],ah
   140024cad:	add    BYTE PTR [rbp+0x0],dl
   140024cb0:	push   rax
   140024cb1:	add    BYTE PTR [rcx+0x0],dl
   140024cb4:	(bad)  
   140024cb5:	add    BYTE PTR [rip+0x1000400],al        # 0x1410250bb
   140024cbb:	add    BYTE PTR [rbx],al
   140024cbd:	add    BYTE PTR [rdx],al
   140024cbf:	add    BYTE PTR [rdx+0x0],dl
   140024cc2:	push   rbx
   140024cc3:	add    BYTE PTR [rax+0x0],dl
   140024cc6:	push   rcx
   140024cc7:	add    BYTE PTR [rax+rax*1+0x23],dl
   140024ccb:	add    BYTE PTR [rbp+0x0],dl
   140024cce:	add    BYTE PTR [rax],al
   140024cd0:	add    BYTE PTR [rax],al
   140024cd2:	add    BYTE PTR [rax],al
   140024cd4:	push   rdx
   140024cd5:	add    BYTE PTR [rbx+0x0],dl
   140024cd8:	push   rax
   140024cd9:	add    BYTE PTR [rcx+0x0],dl
   140024cdc:	push   rsp
   140024cdd:	add    BYTE PTR [rax],al
   140024cdf:	add    BYTE PTR [rbp+0x0],dl
   140024ce2:	xor    DWORD PTR [rax],eax
   140024ce4:	xor    al,0x0
   140024ce6:	xor    al,BYTE PTR [rax]
   140024ce8:	push   rdx
   140024ce9:	add    BYTE PTR [rbx+0x0],dl
   140024cec:	push   rax
   140024ced:	add    BYTE PTR [rcx+0x0],dl
   140024cf0:	push   rsp
   140024cf1:	add    BYTE PTR [rax],al
   140024cf3:	add    BYTE PTR [rbp+0x0],dl
   140024cf6:	xor    DWORD PTR [rax],eax
   140024cf8:	xor    al,0x0
   140024cfa:	xor    al,BYTE PTR [rax]
   140024cfc:	push   rdx
   140024cfd:	add    BYTE PTR [rbx+0x0],dl
   140024d00:	add    BYTE PTR [rax],al
   140024d02:	add    BYTE PTR [rax],al
   140024d04:	push   rsp
   140024d05:	add    BYTE PTR [rax],al
   140024d07:	add    BYTE PTR [rbp+0x0],dl
   140024d0a:	and    eax,DWORD PTR [rax]
   140024d0c:	add    BYTE PTR [rax],al
   140024d0e:	add    BYTE PTR [rax],al
   140024d10:	and    eax,DWORD PTR [rax]
   140024d12:	add    BYTE PTR [rax],al
   140024d14:	xor    DWORD PTR [rax],eax
   140024d16:	xor    al,0x0
   140024d18:	xor    al,BYTE PTR [rax]
   140024d1a:	add    BYTE PTR cs:[rdx],ah
   140024d1d:	add    BYTE PTR [rbx],dh
   140024d1f:	add    BYTE PTR [rbx],ah
   140024d21:	add    BYTE PTR [rax],al
   140024d23:	add    BYTE PTR [rax],al
   140024d25:	add    BYTE PTR [rbx],ah
   140024d27:	add    BYTE PTR [rdx],ah
   140024d29:	add    DWORD PTR [rbx],esp
   140024d2b:	add    DWORD PTR [rbx],esp
   140024d2d:	add    BYTE PTR [rsi],ch
   140024d2f:	add    BYTE PTR [rdx],ah
   140024d31:	add    BYTE PTR [rbx],dh
   140024d33:	add    BYTE PTR [rax],al
   140024d35:	add    BYTE PTR [rax],al
   140024d37:	add    BYTE PTR [rbx],ah
   140024d39:	add    BYTE PTR [rcx+rax*1],ah
   140024d3c:	add    BYTE PTR [rax],al
   140024d3e:	add    BYTE PTR [rax],al
   140024d40:	and    eax,0x26000001
   140024d45:	add    DWORD PTR [rax+0x0],edi
   140024d4b:	add    BYTE PTR [rsi],ch
   140024d4d:	add    BYTE PTR [rdx],ah
   140024d4f:	add    BYTE PTR [rbx],dh
   140024d51:	add    BYTE PTR [rbx],ah
   140024d53:	add    BYTE PTR [rcx],dh
   140024d55:	add    BYTE PTR [rax+rax*1],dh
   140024d58:	xor    al,BYTE PTR [rax]
   140024d5a:	xor    DWORD PTR [rax],eax
   140024d5c:	xor    al,0x0
   140024d5e:	xor    al,BYTE PTR [rax]
   140024d60:	mov    eax,0x0
   140024d65:	add    BYTE PTR [rax],al
   140024d67:	add    BYTE PTR [rax],al
   140024d69:	add    BYTE PTR [rcx],dh
   140024d6b:	add    BYTE PTR [rax+rax*1],dh
   140024d6e:	xor    al,BYTE PTR [rax]
   140024d70:	xor    DWORD PTR [rax],eax
   140024d72:	xor    al,0x0
   140024d74:	xor    al,BYTE PTR [rax]
   140024d76:	xor    DWORD PTR [rax],eax
   140024d78:	xor    al,0x0
   140024d7a:	xor    al,BYTE PTR [rax]
   140024d7c:	and    eax,DWORD PTR [rax]
   140024d7e:	add    BYTE PTR [rax],al
   140024d80:	add    BYTE PTR [rax],al
   140024d82:	xor    DWORD PTR [rax],eax
   140024d84:	xor    al,0x0
   140024d86:	xor    al,BYTE PTR [rax]
   140024d88:	add    BYTE PTR [rax],al
   140024d8a:	mov    eax,0x22002e00
   140024d8f:	add    BYTE PTR [rbx],dh
   140024d91:	add    BYTE PTR [rsi],ch
   140024d93:	add    BYTE PTR [rdx],ah
   140024d95:	add    BYTE PTR [rbx],dh
   140024d97:	add    BYTE PTR [rax],al
   140024d99:	add    BYTE PTR [rax],al
   140024d9b:	add    BYTE PTR [rcx],dh
   140024d9d:	add    BYTE PTR [rax+rax*1],dh
   140024da0:	xor    al,BYTE PTR [rax]
   140024da2:	add    BYTE PTR cs:[rdx],ah
   140024da5:	add    BYTE PTR [rbx],dh
   140024da7:	add    BYTE PTR [rsi],ch
   140024da9:	add    BYTE PTR [rdx],ah
   140024dab:	add    BYTE PTR [rbx],dh
   140024dad:	add    BYTE PTR [rsi],ch
   140024daf:	add    BYTE PTR [rdx],ah
   140024db1:	add    BYTE PTR [rbx],dh
   140024db3:	add    BYTE PTR [rax],al
   140024db5:	add    BYTE PTR [rax],al
   140024db7:	add    BYTE PTR [rax],al
   140024db9:	add    BYTE PTR [rsi],ch
   140024dbb:	add    BYTE PTR [rdx],ah
   140024dbd:	add    BYTE PTR [rbx],dh
   140024dbf:	add    BYTE PTR [rax],al
   140024dc1:	add    BYTE PTR [rax],al
   140024dc3:	add    BYTE PTR [rbx],ah
   140024dc5:	add    BYTE PTR [rcx],dh
   140024dc7:	add    BYTE PTR [rax+rax*1],dh
   140024dca:	xor    al,BYTE PTR [rax]
   140024dcc:	add    BYTE PTR [rax],al
   140024dce:	and    eax,DWORD PTR [rax]
   140024dd0:	add    BYTE PTR [rax],al
   140024dd2:	add    BYTE PTR [rax],al
   140024dd4:	add    BYTE PTR cs:[rdx],ah
   140024dd7:	add    BYTE PTR [rbx],dh
   140024dd9:	add    BYTE PTR [rax],al
   140024ddb:	add    BYTE PTR [rax],al
   140024ddd:	add    BYTE PTR [rbx],ah
	...
   140024deb:	add    BYTE PTR [rax],al
   140024ded:	add    BYTE PTR [rbx],ah
	...
   140024dfb:	add    BYTE PTR [rax],al
   140024dfd:	add    BYTE PTR [rsi],ch
   140024dff:	add    BYTE PTR [rdx],ah
   140024e01:	add    BYTE PTR [rbx],dh
   140024e03:	add    dl,bh
   140024e05:	add    cl,bh
   140024e07:	add    BYTE PTR [rax],al
   140024e09:	add    BYTE PTR [rax],al
   140024e0b:	add    BYTE PTR [rax],al
   140024e0d:	add    BYTE PTR [rcx],dh
   140024e0f:	add    BYTE PTR [rax+rax*1],dh
   140024e12:	xor    al,BYTE PTR [rax]
   140024e14:	add    BYTE PTR [rax],al
   140024e16:	add    BYTE PTR [rax],al
   140024e18:	xor    DWORD PTR [rax],eax
   140024e1a:	xor    al,0x0
   140024e1c:	xor    al,BYTE PTR [rax]
   140024e1e:	cli    
   140024e1f:	add    cl,bh
   140024e21:	add    BYTE PTR [rax],al
   140024e23:	add    BYTE PTR [rax],al
   140024e25:	add    BYTE PTR [rax],al
   140024e27:	add    BYTE PTR [rcx],dh
   140024e29:	add    BYTE PTR [rax+rax*1],dh
   140024e2c:	xor    al,BYTE PTR [rax]
   140024e2e:	cli    
   140024e2f:	add    cl,bh
   140024e31:	add    BYTE PTR [rax],al
   140024e33:	add    BYTE PTR [rax],al
   140024e35:	add    BYTE PTR [rax],al
   140024e37:	add    BYTE PTR [rcx],dh
   140024e39:	add    BYTE PTR [rax+rax*1],dh
   140024e3c:	xor    al,BYTE PTR [rax]
	...
   140024e46:	add    BYTE PTR cs:[rdx],ah
   140024e49:	add    BYTE PTR [rbx],dh
   140024e4b:	add    BYTE PTR [rax],al
   140024e4d:	add    BYTE PTR [rax],al
   140024e4f:	add    BYTE PTR [rsi],ch
   140024e51:	add    BYTE PTR [rdx],ah
   140024e53:	add    BYTE PTR [rbx],dh
	...
   140024e5d:	add    BYTE PTR [rax],al
   140024e5f:	add    BYTE PTR [rsi],ch
   140024e61:	add    BYTE PTR [rdx],ah
   140024e63:	add    BYTE PTR [rbx],dh
   140024e65:	add    BYTE PTR [rax],al
   140024e67:	add    BYTE PTR [rbx],ah
   140024e69:	add    BYTE PTR [rax],al
   140024e6b:	add    BYTE PTR [rax],al
   140024e6d:	add    BYTE PTR [rax],al
   140024e6f:	add    BYTE PTR [rsi],ch
   140024e71:	add    BYTE PTR [rdx],ah
   140024e73:	add    BYTE PTR [rbx],dh
	...
   140024ea5:	add    BYTE PTR [rax],al
   140024ea7:	add    bh,bh
   140024ea9:	add    dh,bh
   140024eab:	add    BYTE PTR [rcx+0x0],bl
   140024eb1:	add    BYTE PTR [rcx],dh
   140024eb3:	add    BYTE PTR [rax+rax*1],dh
   140024eb6:	xor    al,BYTE PTR [rax]
	...
   140024ec0:	(bad)  
   140024ec1:	add    BYTE PTR [rax],al
   140024ec3:	add    BYTE PTR [rax],al
   140024ec5:	add    BYTE PTR [rax],al
   140024ec7:	add    BYTE PTR [rbx+0x0],bl
	...
   140024ed9:	add    BYTE PTR [rax+rax*1+0x9d0000],bl
   140024ee0:	add    BYTE PTR [rax],al
   140024ee2:	add    BYTE PTR [rax],al
   140024ee4:	(bad)  
   140024ee5:	add    DWORD PTR [rax],eax
   140024ee7:	add    BYTE PTR [rax],al
   140024ee9:	add    BYTE PTR [rsi],ch
   140024eeb:	add    BYTE PTR [rdx],ah
   140024eed:	add    BYTE PTR [rbx],dh
   140024eef:	add    BYTE PTR [rax],al
   140024ef1:	add    BYTE PTR [rax],al
   140024ef3:	add    BYTE PTR [rsi-0x61000000],bl
   140024ef9:	add    BYTE PTR [rax+0x0],al
   140024efc:	add    BYTE PTR [rax],al
   140024efe:	(bad)  
   140024eff:	add    BYTE PTR [rdi],bl
   140024f01:	add    BYTE PTR [rcx+0x0],bl
   140024f07:	add    BYTE PTR [rax+0x0],ah
   140024f0d:	add    BYTE PTR [rcx+0x21004100],ah
   140024f13:	add    BYTE PTR [rax],al
   140024f15:	add    BYTE PTR [rdx-0x5e000000],bl
   140024f1b:	add    BYTE PTR [rax],al
   140024f1d:	add    BYTE PTR [rbx+0x2300],bl
   140024f23:	add    BYTE PTR [rax],al
   140024f25:	add    BYTE PTR [rbx+0x25002400],ah
   140024f2b:	add    BYTE PTR [rax],al
   140024f2d:	add    BYTE PTR [rsi],ah
   140024f2f:	add    BYTE PTR [rax+rax*1+0x9d0000],bl
   140024f36:	add    BYTE PTR [rax],al
   140024f38:	add    BYTE PTR [rax],al
   140024f3a:	add    BYTE PTR [rax],al
   140024f3c:	sub    al,BYTE PTR [rax]
   140024f3e:	add    BYTE PTR [rax],al
   140024f40:	add    BYTE PTR [rax],al
   140024f42:	add    BYTE PTR [rax],al
   140024f44:	sub    eax,0xa400
   140024f49:	add    BYTE PTR [rsi-0x61000000],bl
   140024f4f:	add    BYTE PTR [rax+0x0],al
	...
   140024f5e:	movabs al,ds:0x4100a10000000000
   140024f67:	add    BYTE PTR [rip+0x34003100],dh        # 0x17402806d
   140024f6d:	add    BYTE PTR [rdx],dh
   140024f6f:	add    BYTE PTR [rdx+0x3600],ah
   140024f75:	add    BYTE PTR [rax],al
   140024f77:	add    BYTE PTR [rax],al
   140024f79:	add    BYTE PTR [rax],al
   140024f7b:	add    BYTE PTR [rbx+0x0],ah
   140024f81:	add    BYTE PTR [rax],al
   140024f83:	add    BYTE PTR [rax],al
   140024f85:	add    BYTE PTR [rax],al
   140024f87:	add    BYTE PTR [rax+rax*1],ch
   140024f8a:	cmp    BYTE PTR [rax],al
   140024f8c:	and    BYTE PTR [rax],al
   140024f8e:	add    BYTE PTR [rax],al
   140024f90:	add    BYTE PTR [rax],al
   140024f92:	add    BYTE PTR [rax],al
   140024f94:	sub    DWORD PTR [rax],eax
   140024f96:	add    BYTE PTR [rax],al
   140024f98:	add    BYTE PTR [rax],al
   140024f9a:	add    BYTE PTR [rax],al
   140024f9c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140024f9d:	add    BYTE PTR [rax],al
   140024f9f:	add    BYTE PTR [rax],al
   140024fa1:	add    BYTE PTR [rsi],ch
   140024fa3:	add    BYTE PTR [rdx],ah
   140024fa5:	add    BYTE PTR [rbx],dh
	...
   140024fcf:	add    BYTE PTR [rsi],bl
   140024fd1:	add    BYTE PTR [rdi],bl
	...
   140024fe3:	add    BYTE PTR [rcx],ah
	...
   140024ff1:	add    BYTE PTR [rbx],ah
   140024ff3:	add    BYTE PTR [rax],al
   140024ff5:	add    BYTE PTR [rax],al
   140024ff7:	add    BYTE PTR [rax],al
   140024ff9:	add    BYTE PTR [rax+rax*1],ah
   140024ffc:	and    eax,0x26000000
	...
   14002500d:	add    BYTE PTR [rdx+rax*1],al
   140025010:	add    BYTE PTR [rax],al
   140025012:	add    BYTE PTR [rax],al
   140025014:	add    BYTE PTR [rax],al
   140025016:	sub    eax,0x0
	...
   140025037:	add    BYTE PTR [rax],al
   140025039:	add    BYTE PTR [rip+0x34003100],dh        # 0x17402813f
   14002503f:	add    BYTE PTR [rdx],dh
   140025041:	add    BYTE PTR [rax],al
   140025043:	add    BYTE PTR [rsi],dh
	...
   140025059:	add    BYTE PTR [rax+rax*1],ch
   14002505c:	cmp    BYTE PTR [rax],al
   14002505e:	and    BYTE PTR [rax],al
   140025060:	add    BYTE PTR [rax],al
   140025062:	add    BYTE PTR [rax],al
   140025064:	add    BYTE PTR [rax],al
   140025066:	sub    DWORD PTR [rax],eax
	...
   140025074:	add    BYTE PTR cs:[rdx],ah
   140025077:	add    BYTE PTR [rbx],dh
	...
   140025089:	add    BYTE PTR [rax],al
   14002508b:	add    BYTE PTR [rsi],bl
   14002508d:	add    BYTE PTR [rdi],bl
	...
   14002509f:	add    BYTE PTR [rcx],ah
	...
   1400250ad:	add    BYTE PTR [rbx],ah
   1400250af:	add    BYTE PTR [rax],al
   1400250b1:	add    BYTE PTR [rax],al
   1400250b3:	add    BYTE PTR [rax],al
   1400250b5:	add    BYTE PTR [rax+rax*1],ah
   1400250b8:	and    eax,0x26000000
	...
   1400250c9:	add    BYTE PTR [rdx],ch
   1400250cb:	add    BYTE PTR [rax],al
   1400250cd:	add    BYTE PTR [rax],al
   1400250cf:	add    BYTE PTR [rax],al
   1400250d1:	add    BYTE PTR [rip+0x0],ch        # 0x1400250d7
	...
   1400250f3:	add    BYTE PTR [rax],al
   1400250f5:	add    BYTE PTR [rip+0x34003100],dh        # 0x1740281fb
   1400250fb:	add    BYTE PTR [rdx],dh
   1400250fd:	add    BYTE PTR [rax],al
   1400250ff:	add    BYTE PTR [rsi],dh
	...
   140025115:	add    BYTE PTR [rax+rax*1],ch
   140025118:	cmp    BYTE PTR [rax],al
   14002511a:	and    BYTE PTR [rax],al
   14002511c:	add    BYTE PTR [rax],al
   14002511e:	add    BYTE PTR [rax],al
   140025120:	add    BYTE PTR [rax],al
   140025122:	sub    DWORD PTR [rax],eax
	...
   140025130:	add    BYTE PTR cs:[rdx],ah
   140025133:	add    BYTE PTR [rbx],dh
	...
   140025145:	add    BYTE PTR [rax],al
   140025147:	add    BYTE PTR [rbx],al
   140025149:	add    al,BYTE PTR [rax]
   14002514b:	add    BYTE PTR [rsi],bl
   14002514d:	add    BYTE PTR [rdi],bl
	...
   14002515f:	add    bl,bl
	...
   14002516d:	add    BYTE PTR [rbx],ah
   14002516f:	add    BYTE PTR [rax],al
   140025171:	add    BYTE PTR [rax],al
   140025173:	add    BYTE PTR [rax],al
   140025175:	add    BYTE PTR [rax+rax*1],ah
   140025178:	and    eax,0x26000000
	...
   140025189:	add    BYTE PTR [rdx+rax*1],al
   14002518c:	add    BYTE PTR [rax],al
   14002518e:	add    BYTE PTR [rax],al
   140025190:	add    BYTE PTR [rax],al
   140025192:	sub    eax,0x0
	...
   1400251b3:	add    BYTE PTR [rax],al
   1400251b5:	add    BYTE PTR [rip+0x7020500],dh        # 0x1470456bb
   1400251bb:	add    al,BYTE PTR [rsi]
   1400251bd:	add    al,BYTE PTR [rax]
   1400251bf:	add    BYTE PTR [rsi],dh
	...
   1400251c9:	add    bl,ah
	...
   1400251d3:	add    BYTE PTR [rax],al
   1400251d5:	add    BYTE PTR [rax+rax*1],ch
   1400251d8:	cmp    BYTE PTR [rax],al
   1400251da:	and    BYTE PTR [rax],al
   1400251dc:	(bad)  
   1400251dd:	add    BYTE PTR [rax],al
   1400251df:	add    BYTE PTR [rax],al
   1400251e1:	add    BYTE PTR [rcx],ch
	...
   1400251ef:	add    BYTE PTR [rsi],ch
   1400251f1:	add    BYTE PTR [rdx],ah
   1400251f3:	add    BYTE PTR [rbx],dh
	...
   140025205:	add    BYTE PTR [rax],al
   140025207:	add    BYTE PTR [rbx],al
   140025209:	add    al,BYTE PTR [rax]
   14002520b:	add    BYTE PTR [rsi],bl
   14002520d:	add    BYTE PTR [rdi],bl
	...
   14002521f:	add    bl,bl
	...
   14002522d:	add    BYTE PTR [rbx],ah
   14002522f:	add    BYTE PTR [rax],al
   140025231:	add    BYTE PTR [rax],al
   140025233:	add    BYTE PTR [rax],al
   140025235:	add    BYTE PTR [rax+rax*1],ah
   140025238:	and    eax,0x26000000
	...
   140025249:	add    BYTE PTR [rdx+rax*1],al
   14002524c:	add    BYTE PTR [rax],al
   14002524e:	add    BYTE PTR [rax],al
   140025250:	add    BYTE PTR [rax],al
   140025252:	sub    eax,0x0
	...
   14002525f:	add    BYTE PTR [rax],al
   140025261:	add    BYTE PTR [rbx],dh
   140025263:	add    al,BYTE PTR [rax]
	...
   140025275:	add    BYTE PTR [rip+0x7020500],dh        # 0x14704577b
   14002527b:	add    al,BYTE PTR [rsi]
   14002527d:	add    al,BYTE PTR [rax]
   14002527f:	add    BYTE PTR [rsi],dh
	...
   140025289:	add    bl,ah
	...
   140025293:	add    BYTE PTR [rax],al
   140025295:	add    BYTE PTR [rax+rax*1],ch
   140025298:	cmp    BYTE PTR [rax],al
   14002529a:	and    BYTE PTR [rax],al
   14002529c:	(bad)  
   14002529d:	add    BYTE PTR [rax],al
   14002529f:	add    BYTE PTR [rax],al
   1400252a1:	add    BYTE PTR [rcx],ch
	...
   1400252af:	add    BYTE PTR [rsi],ch
   1400252b1:	add    BYTE PTR [rdx],ah
   1400252b3:	add    BYTE PTR [rbx],dh
	...
   1400252c5:	add    BYTE PTR [rax],al
   1400252c7:	add    BYTE PTR [rbx],al
   1400252c9:	add    al,BYTE PTR [rax]
   1400252cb:	add    BYTE PTR [rsi],bl
   1400252cd:	add    BYTE PTR [rdi],bl
	...
   1400252df:	add    bl,bl
	...
   1400252ed:	add    BYTE PTR [rbx],ah
   1400252ef:	add    BYTE PTR [rax],al
   1400252f1:	add    BYTE PTR [rax],al
   1400252f3:	add    BYTE PTR [rax],al
   1400252f5:	add    BYTE PTR [rax+rax*1],ah
   1400252f8:	and    eax,0x26000000
	...
   140025309:	add    BYTE PTR [rdx+rax*1],al
   14002530c:	add    BYTE PTR [rax],al
   14002530e:	add    BYTE PTR [rax],al
   140025310:	add    BYTE PTR [rax],al
   140025312:	sub    eax,0x0
	...
   14002531f:	add    BYTE PTR [rax],al
   140025321:	add    BYTE PTR [rax],dh
   140025323:	add    al,BYTE PTR [rax]
	...
   140025335:	add    BYTE PTR [rip+0x7020500],dh        # 0x14704583b
   14002533b:	add    al,BYTE PTR [rsi]
   14002533d:	add    al,BYTE PTR [rax]
   14002533f:	add    BYTE PTR [rsi],dh
	...
   140025349:	add    bl,ah
	...
   140025353:	add    BYTE PTR [rax],al
   140025355:	add    BYTE PTR [rax+rax*1],ch
   140025358:	cmp    BYTE PTR [rax],al
   14002535a:	and    BYTE PTR [rax],al
   14002535c:	(bad)  
   14002535d:	add    BYTE PTR [rax],al
   14002535f:	add    BYTE PTR [rax],al
   140025361:	add    BYTE PTR [rcx],ch
	...
   14002536f:	add    BYTE PTR [rsi],ch
   140025371:	add    BYTE PTR [rdx],ah
   140025373:	add    BYTE PTR [rbx],dh
	...
   140025385:	add    BYTE PTR [rax],al
   140025387:	add    BYTE PTR [rip+0x1f001e00],bl        # 0x15f02718d
	...
   14002539d:	add    BYTE PTR [rcx],ah
	...
   1400253ab:	add    BYTE PTR [rbx],ah
   1400253ad:	add    BYTE PTR [rax],al
   1400253af:	add    BYTE PTR [rax],al
   1400253b1:	add    BYTE PTR [rax],al
   1400253b3:	add    BYTE PTR [rax+rax*1],ah
   1400253b6:	and    eax,0x26000000
   1400253bb:	add    BYTE PTR [rax],al
   1400253bd:	add    BYTE PTR [rax],al
   1400253bf:	add    BYTE PTR [rax],al
   1400253c1:	add    BYTE PTR [rdi],ah
   1400253c3:	add    BYTE PTR [rax],al
   1400253c5:	add    BYTE PTR [rax],ch
   1400253c7:	add    BYTE PTR [rdx],ch
   1400253c9:	add    BYTE PTR [rbx],ch
   1400253cb:	add    BYTE PTR [rax],al
   1400253cd:	add    BYTE PTR [rax],al
   1400253cf:	add    BYTE PTR [rip+0x0],ch        # 0x1400253d5
   1400253d5:	add    BYTE PTR [rax],al
   1400253d7:	add    BYTE PTR [rdi],ch
   1400253d9:	add    BYTE PTR [rax],al
   1400253db:	add    BYTE PTR [rax],dh
	...
   1400253f1:	add    BYTE PTR [rax],al
   1400253f3:	add    BYTE PTR [rip+0x34003100],dh        # 0x1740284f9
   1400253f9:	add    BYTE PTR [rdx],dh
   1400253fb:	add    BYTE PTR [rax],al
   1400253fd:	add    BYTE PTR [rsi],dh
   1400253ff:	add    BYTE PTR [rax],al
   140025401:	add    BYTE PTR [rdi],dh
   140025403:	add    BYTE PTR [rax],al
   140025405:	add    BYTE PTR [rcx],bh
   140025407:	add    BYTE PTR [rax],al
   140025409:	add    BYTE PTR [rdx],bh
	...
   140025413:	add    BYTE PTR [rax+rax*1],ch
   140025416:	cmp    BYTE PTR [rax],al
   140025418:	and    BYTE PTR [rax],al
   14002541a:	add    BYTE PTR [rax],al
   14002541c:	add    BYTE PTR [rax],al
   14002541e:	add    BYTE PTR [rax],al
   140025420:	sub    DWORD PTR [rax],eax
	...
   14002542e:	add    BYTE PTR cs:[rdx],ah
   140025431:	add    BYTE PTR [rbx],dh
	...
   140025443:	add    BYTE PTR [rax],al
   140025445:	add    BYTE PTR [rdi+rdi*8+0x0],bh
   140025449:	add    BYTE PTR [rax],al
   14002544b:	add    BYTE PTR [rax],al
   14002544d:	add    BYTE PTR [rip+0x1f001e00],bl        # 0x15f027253
	...
   140025463:	add    BYTE PTR [rcx],ah
	...
   140025471:	add    BYTE PTR [rbx],ah
   140025473:	add    BYTE PTR [rax],al
   140025475:	add    BYTE PTR [rax],al
   140025477:	add    BYTE PTR [rax],al
   140025479:	add    BYTE PTR [rax+rax*1],ah
   14002547c:	and    eax,0x26000000
   140025481:	add    BYTE PTR [rax],al
   140025483:	add    BYTE PTR [rax],al
   140025485:	add    BYTE PTR [rax],al
   140025487:	add    BYTE PTR [rdi],ah
   140025489:	add    BYTE PTR [rax],al
   14002548b:	add    BYTE PTR [rax],ch
   14002548d:	add    BYTE PTR [rdx],ch
   14002548f:	add    BYTE PTR [rbx],ch
   140025491:	add    BYTE PTR [rax],al
   140025493:	add    BYTE PTR [rax],al
   140025495:	add    BYTE PTR [rip+0x0],ch        # 0x14002549b
   14002549b:	add    BYTE PTR [rax],al
   14002549d:	add    BYTE PTR [rdi],ch
   14002549f:	add    BYTE PTR [rax],al
   1400254a1:	add    BYTE PTR [rax],dh
	...
   1400254b7:	add    BYTE PTR [rax],al
   1400254b9:	add    BYTE PTR [rip+0x34003100],dh        # 0x1740285bf
   1400254bf:	add    BYTE PTR [rdx],dh
   1400254c1:	add    BYTE PTR [rax],al
   1400254c3:	add    BYTE PTR [rsi],dh
   1400254c5:	add    BYTE PTR [rax],al
   1400254c7:	add    BYTE PTR [rdi],dh
   1400254c9:	add    BYTE PTR [rax],al
   1400254cb:	add    BYTE PTR [rcx],bh
   1400254cd:	add    BYTE PTR [rax],al
   1400254cf:	add    BYTE PTR [rdx],bh
	...
   1400254d9:	add    BYTE PTR [rax+rax*1],ch
   1400254dc:	cmp    BYTE PTR [rax],al
   1400254de:	and    BYTE PTR [rax],al
   1400254e0:	add    BYTE PTR [rax],al
   1400254e2:	add    BYTE PTR [rax],al
   1400254e4:	add    BYTE PTR [rax],al
   1400254e6:	sub    DWORD PTR [rax],eax
	...
   1400254f4:	add    BYTE PTR cs:[rdx],ah
   1400254f7:	add    BYTE PTR [rbx],dh
	...
   140025509:	add    BYTE PTR [rax],al
   14002550b:	add    BYTE PTR [rip+0x1f001e00],bl        # 0x15f027311
	...
   140025521:	add    BYTE PTR [rcx],ah
	...
   14002552f:	add    BYTE PTR [rbx],ah
   140025531:	add    BYTE PTR [rax],al
   140025533:	add    BYTE PTR [rax],al
   140025535:	add    BYTE PTR [rax],al
   140025537:	add    BYTE PTR [rax+rax*1],ah
   14002553a:	and    eax,0x26000000
   14002553f:	add    BYTE PTR [rax],al
   140025541:	add    BYTE PTR [rax],al
   140025543:	add    BYTE PTR [rax],al
   140025545:	add    BYTE PTR [rdi],ah
   140025547:	add    BYTE PTR [rax],al
   140025549:	add    BYTE PTR [rax],ch
   14002554b:	add    BYTE PTR [rdx],ch
   14002554d:	add    BYTE PTR [rbx],ch
   14002554f:	add    BYTE PTR [rax],al
   140025551:	add    BYTE PTR [rax],al
   140025553:	add    BYTE PTR [rip+0x0],ch        # 0x140025559
   140025559:	add    BYTE PTR [rax],al
   14002555b:	add    BYTE PTR [rdi],ch
   14002555d:	add    BYTE PTR [rax],al
   14002555f:	add    BYTE PTR [rax],dh
	...
   140025575:	add    BYTE PTR [rax],al
   140025577:	add    BYTE PTR [rip+0x34003100],dh        # 0x17402867d
   14002557d:	add    BYTE PTR [rdx],dh
   14002557f:	add    BYTE PTR [rax],al
   140025581:	add    BYTE PTR [rsi],dh
   140025583:	add    BYTE PTR [rax],al
   140025585:	add    BYTE PTR [rdi],dh
   140025587:	add    BYTE PTR [rax],al
   140025589:	add    BYTE PTR [rcx],bh
   14002558b:	add    BYTE PTR [rdx],bl
   14002558d:	add    DWORD PTR [rdx],edi
	...
   140025597:	add    BYTE PTR [rax+rax*1],ch
   14002559a:	cmp    BYTE PTR [rax],al
   14002559c:	and    BYTE PTR [rax],al
   14002559e:	add    BYTE PTR [rax],al
   1400255a0:	add    BYTE PTR [rax],al
   1400255a2:	add    BYTE PTR [rax],al
   1400255a4:	sub    DWORD PTR [rax],eax
	...
   1400255b2:	add    BYTE PTR cs:[rdx],ah
   1400255b5:	add    BYTE PTR [rbx],dh
	...
   1400255c7:	add    BYTE PTR [rax],al
   1400255c9:	add    al,dh
   1400255cb:	add    DWORD PTR [rax],eax
   1400255cd:	add    BYTE PTR [rax],al
   1400255cf:	add    BYTE PTR [rip+0x1f001e00],bl        # 0x15f0273d5
	...
   1400255e5:	add    BYTE PTR [rcx],ah
	...
   1400255f3:	add    BYTE PTR [rbx],ah
   1400255f5:	add    BYTE PTR [rax],al
   1400255f7:	add    BYTE PTR [rax],al
   1400255f9:	add    BYTE PTR [rax],al
   1400255fb:	add    BYTE PTR [rax+rax*1],ah
   1400255fe:	and    eax,0x26000000
   140025603:	add    BYTE PTR [rax],al
   140025605:	add    BYTE PTR [rax],al
   140025607:	add    BYTE PTR [rax],al
   140025609:	add    BYTE PTR [rdi],ah
   14002560b:	add    BYTE PTR [rax],al
   14002560d:	add    BYTE PTR [rax],ch
   14002560f:	add    BYTE PTR [rdx],ch
   140025611:	add    BYTE PTR [rbx],ch
   140025613:	add    BYTE PTR [rax],al
   140025615:	add    BYTE PTR [rax],al
   140025617:	add    BYTE PTR [rip+0x0],ch        # 0x14002561d
   14002561d:	add    BYTE PTR [rax],al
   14002561f:	add    BYTE PTR [rdi],ch
   140025621:	add    BYTE PTR [rax],al
   140025623:	add    BYTE PTR [rax],dh
   140025625:	add    BYTE PTR [rax],al
   140025627:	add    BYTE PTR [rax],al
   140025629:	add    cl,dh
   14002562b:	add    DWORD PTR [rax],eax
	...
   140025639:	add    BYTE PTR [rax],al
   14002563b:	add    BYTE PTR [rip+0x34003100],dh        # 0x174028741
   140025641:	add    BYTE PTR [rdx],dh
   140025643:	add    BYTE PTR [rax],al
   140025645:	add    BYTE PTR [rsi],dh
   140025647:	add    BYTE PTR [rax],al
   140025649:	add    BYTE PTR [rdi],dh
   14002564b:	add    BYTE PTR [rax],al
   14002564d:	add    BYTE PTR [rcx],bh
   14002564f:	add    BYTE PTR [rax],al
   140025651:	add    BYTE PTR [rdx],bh
	...
   14002565b:	add    BYTE PTR [rax+rax*1],ch
   14002565e:	cmp    BYTE PTR [rax],al
   140025660:	and    BYTE PTR [rax],al
   140025662:	add    BYTE PTR [rax],al
   140025664:	add    BYTE PTR [rax],al
   140025666:	add    BYTE PTR [rax],al
   140025668:	sub    DWORD PTR [rax],eax
	...
   140025676:	add    BYTE PTR cs:[rdx],ah
   140025679:	add    BYTE PTR [rbx],dh
	...
   14002568b:	add    BYTE PTR [rax],al
   14002568d:	add    al,ch
   14002568f:	add    DWORD PTR [rax],eax
   140025691:	add    BYTE PTR [rax],al
   140025693:	add    BYTE PTR [rip+0x1f001e00],bl        # 0x15f027499
	...
   1400256a9:	add    BYTE PTR [rcx],ah
	...
   1400256b7:	add    BYTE PTR [rbx],ah
   1400256b9:	add    BYTE PTR [rax],al
   1400256bb:	add    BYTE PTR [rax],al
   1400256bd:	add    BYTE PTR [rax],al
   1400256bf:	add    BYTE PTR [rax+rax*1],ah
   1400256c2:	and    eax,0x26000000
   1400256c7:	add    BYTE PTR [rax],al
   1400256c9:	add    BYTE PTR [rax],al
   1400256cb:	add    BYTE PTR [rax],al
   1400256cd:	add    BYTE PTR [rdi],ah
   1400256cf:	add    BYTE PTR [rax],al
   1400256d1:	add    BYTE PTR [rax],ch
   1400256d3:	add    BYTE PTR [rdx],ch
   1400256d5:	add    BYTE PTR [rbx],ch
   1400256d7:	add    BYTE PTR [rax],al
   1400256d9:	add    BYTE PTR [rax],al
   1400256db:	add    BYTE PTR [rip+0x0],ch        # 0x1400256e1
   1400256e1:	add    BYTE PTR [rax],al
   1400256e3:	add    BYTE PTR [rdi],ch
   1400256e5:	add    BYTE PTR [rax],al
   1400256e7:	add    BYTE PTR [rax],dh
   1400256e9:	add    BYTE PTR [rax],al
   1400256eb:	add    BYTE PTR [rax],al
   1400256ed:	add    dh,ch
   1400256ef:	add    DWORD PTR [rax],eax
	...
   1400256fd:	add    BYTE PTR [rax],al
   1400256ff:	add    BYTE PTR [rip+0x34003100],dh        # 0x174028805
   140025705:	add    BYTE PTR [rdx],dh
   140025707:	add    BYTE PTR [rax],al
   140025709:	add    BYTE PTR [rsi],dh
   14002570b:	add    BYTE PTR [rax],al
   14002570d:	add    BYTE PTR [rdi],dh
   14002570f:	add    BYTE PTR [rax],al
   140025711:	add    BYTE PTR [rcx],bh
   140025713:	add    BYTE PTR [rax],al
   140025715:	add    BYTE PTR [rdx],bh
	...
   14002571f:	add    BYTE PTR [rax+rax*1],ch
   140025722:	cmp    BYTE PTR [rax],al
   140025724:	and    BYTE PTR [rax],al
   140025726:	add    BYTE PTR [rax],al
   140025728:	add    BYTE PTR [rax],al
   14002572a:	add    BYTE PTR [rax],al
   14002572c:	sub    DWORD PTR [rax],eax
	...
   14002573a:	add    BYTE PTR cs:[rdx],ah
   14002573d:	add    BYTE PTR [rbx],dh
	...
   14002574f:	add    BYTE PTR [rax],al
   140025751:	add    al,ch
   140025753:	add    DWORD PTR [rax],eax
   140025755:	add    BYTE PTR [rax],al
   140025757:	add    BYTE PTR [rip+0x1f001e00],bl        # 0x15f02755d
	...
   14002576d:	add    BYTE PTR [rcx],ah
	...
   14002577b:	add    BYTE PTR [rbx],ah
   14002577d:	add    BYTE PTR [rax],al
   14002577f:	add    BYTE PTR [rax],al
   140025781:	add    BYTE PTR [rax],al
   140025783:	add    BYTE PTR [rax+rax*1],ah
   140025786:	and    eax,0x26000000
   14002578b:	add    BYTE PTR [rax],al
   14002578d:	add    BYTE PTR [rax],al
   14002578f:	add    BYTE PTR [rax],al
   140025791:	add    BYTE PTR [rdi],ah
   140025793:	add    BYTE PTR [rax],al
   140025795:	add    BYTE PTR [rax],ch
   140025797:	add    BYTE PTR [rdx],ch
   140025799:	add    BYTE PTR [rbx],ch
   14002579b:	add    BYTE PTR [rax],al
   14002579d:	add    BYTE PTR [rax],al
   14002579f:	add    BYTE PTR [rip+0x0],ch        # 0x1400257a5
   1400257a5:	add    BYTE PTR [rax],al
   1400257a7:	add    BYTE PTR [rdi],ch
   1400257a9:	add    BYTE PTR [rax],al
   1400257ab:	add    BYTE PTR [rax],dh
   1400257ad:	add    BYTE PTR [rax],al
   1400257af:	add    BYTE PTR [rax],al
   1400257b1:	add    cl,ch
   1400257b3:	add    DWORD PTR [rax],eax
	...
   1400257c1:	add    BYTE PTR [rax],al
   1400257c3:	add    BYTE PTR [rip+0x34003100],dh        # 0x1740288c9
   1400257c9:	add    BYTE PTR [rdx],dh
   1400257cb:	add    BYTE PTR [rax],al
   1400257cd:	add    BYTE PTR [rsi],dh
   1400257cf:	add    BYTE PTR [rax],al
   1400257d1:	add    BYTE PTR [rdi],dh
   1400257d3:	add    BYTE PTR [rax],al
   1400257d5:	add    BYTE PTR [rcx],bh
   1400257d7:	add    BYTE PTR [rax],al
   1400257d9:	add    BYTE PTR [rdx],bh
	...
   1400257e3:	add    BYTE PTR [rax+rax*1],ch
   1400257e6:	cmp    BYTE PTR [rax],al
   1400257e8:	and    BYTE PTR [rax],al
   1400257ea:	add    BYTE PTR [rax],al
   1400257ec:	add    BYTE PTR [rax],al
   1400257ee:	add    BYTE PTR [rax],al
   1400257f0:	sub    DWORD PTR [rax],eax
	...
   1400257fe:	add    BYTE PTR cs:[rdx],ah
   140025801:	add    BYTE PTR [rbx],dh
	...
   140025813:	add    BYTE PTR [rax],al
   140025815:	add    al,dh
   140025817:	add    DWORD PTR [rax],eax
   140025819:	add    BYTE PTR [rax],al
   14002581b:	add    BYTE PTR [rip+0x1f001e00],bl        # 0x15f027621
	...
   140025831:	add    BYTE PTR [rcx],ah
	...
   14002583f:	add    BYTE PTR [rbx],ah
   140025841:	add    BYTE PTR [rax],al
   140025843:	add    BYTE PTR [rax],al
   140025845:	add    BYTE PTR [rax],al
   140025847:	add    BYTE PTR [rax+rax*1],ah
   14002584a:	and    eax,0x26000000
   14002584f:	add    BYTE PTR [rax],al
   140025851:	add    BYTE PTR [rax],al
   140025853:	add    BYTE PTR [rax],al
   140025855:	add    BYTE PTR [rdi],ah
   140025857:	add    BYTE PTR [rax],al
   140025859:	add    BYTE PTR [rax],ch
   14002585b:	add    BYTE PTR [rdx],ch
   14002585d:	add    BYTE PTR [rbx],ch
   14002585f:	add    BYTE PTR [rax],al
   140025861:	add    BYTE PTR [rax],al
   140025863:	add    BYTE PTR [rip+0x0],ch        # 0x140025869
   140025869:	add    BYTE PTR [rax],al
   14002586b:	add    BYTE PTR [rdi],ch
   14002586d:	add    BYTE PTR [rax],al
   14002586f:	add    BYTE PTR [rax],dh
   140025871:	add    BYTE PTR [rax],al
   140025873:	add    BYTE PTR [rax],al
   140025875:	add    bl,dh
   140025877:	add    DWORD PTR [rax],eax
	...
   140025885:	add    BYTE PTR [rax],al
   140025887:	add    BYTE PTR [rip+0x34003100],dh        # 0x17402898d
   14002588d:	add    BYTE PTR [rdx],dh
   14002588f:	add    BYTE PTR [rax],al
   140025891:	add    BYTE PTR [rsi],dh
   140025893:	add    BYTE PTR [rax],al
   140025895:	add    BYTE PTR [rdi],dh
   140025897:	add    BYTE PTR [rax],al
   140025899:	add    BYTE PTR [rcx],bh
   14002589b:	add    BYTE PTR [rax],al
   14002589d:	add    BYTE PTR [rdx],bh
	...
   1400258a7:	add    BYTE PTR [rax+rax*1],ch
   1400258aa:	cmp    BYTE PTR [rax],al
   1400258ac:	and    BYTE PTR [rax],al
   1400258ae:	add    BYTE PTR [rax],al
   1400258b0:	add    BYTE PTR [rax],al
   1400258b2:	add    BYTE PTR [rax],al
   1400258b4:	sub    DWORD PTR [rax],eax
	...
   1400258c2:	add    BYTE PTR cs:[rdx],ah
   1400258c5:	add    BYTE PTR [rbx],dh
	...
   1400258d7:	add    BYTE PTR [rax],al
   1400258d9:	add    BYTE PTR [rip+0x1f001e00],bl        # 0x15f0276df
	...
   1400258ef:	add    BYTE PTR [rcx],ah
	...
   1400258fd:	add    BYTE PTR [rbx],ah
   1400258ff:	add    ah,bl
   140025901:	add    BYTE PTR [rax],al
   140025903:	add    BYTE PTR [rax],al
   140025905:	add    ch,bl
   140025907:	add    BYTE PTR [rip+0x26000000],ah        # 0x16602590d
   14002590d:	add    BYTE PTR [rax],al
   14002590f:	add    BYTE PTR [rax],al
   140025911:	add    BYTE PTR [rax],al
   140025913:	add    BYTE PTR [rdi],ah
   140025915:	add    BYTE PTR [rax],al
   140025917:	add    BYTE PTR [rax],ch
   140025919:	add    BYTE PTR [rdx],ch
   14002591b:	add    BYTE PTR [rbx],ch
   14002591d:	add    BYTE PTR [rax],al
   14002591f:	add    BYTE PTR [rax],al
   140025921:	add    BYTE PTR [rip+0x0],ch        # 0x140025927
   140025927:	add    BYTE PTR [rax],al
   140025929:	add    BYTE PTR [rdi],ch
   14002592b:	add    BYTE PTR [rax],al
   14002592d:	add    BYTE PTR [rax],dh
	...
   14002593b:	add    BYTE PTR [rax],al
   14002593d:	add    bh,bl
   14002593f:	add    BYTE PTR [rax],al
   140025941:	add    BYTE PTR [rax],al
   140025943:	add    BYTE PTR [rax],al
   140025945:	add    BYTE PTR [rip+0x34003100],dh        # 0x174028a4b
   14002594b:	add    BYTE PTR [rdx],dh
   14002594d:	add    al,ah
   14002594f:	add    BYTE PTR [rsi],dh
   140025951:	add    BYTE PTR [rax],al
   140025953:	add    BYTE PTR [rdi],dh
   140025955:	add    dl,ah
   140025957:	add    BYTE PTR [rcx],bh
   140025959:	add    BYTE PTR [rax],al
   14002595b:	add    BYTE PTR [rdx],bh
   14002595d:	add    BYTE PTR [rax],al
   14002595f:	add    ch,ah
   140025961:	add    BYTE PTR [rax],al
   140025963:	add    BYTE PTR [rax],al
   140025965:	add    BYTE PTR [rax+rax*1],ch
   140025968:	cmp    BYTE PTR [rax],al
   14002596a:	and    BYTE PTR [rax],al
   14002596c:	add    BYTE PTR [rax],al
   14002596e:	add    BYTE PTR [rax],al
   140025970:	add    BYTE PTR [rax],al
   140025972:	sub    DWORD PTR [rax],eax
	...
   140025980:	add    BYTE PTR cs:[rdx],ah
   140025983:	add    BYTE PTR [rbx],dh
	...
   140025995:	add    BYTE PTR [rax],al
   140025997:	add    BYTE PTR [rip+0x1f001e00],bl        # 0x15f02779d
	...
   1400259ad:	add    BYTE PTR [rcx],ah
	...
   1400259bb:	add    BYTE PTR [rbx],ah
   1400259bd:	add    ah,bl
   1400259bf:	add    BYTE PTR [rax],al
   1400259c1:	add    BYTE PTR [rax],al
   1400259c3:	add    BYTE PTR [rdx+0x2],al
   1400259c6:	and    eax,0x26000000
   1400259cb:	add    BYTE PTR [rax],al
   1400259cd:	add    BYTE PTR [rax],al
   1400259cf:	add    BYTE PTR [rax],al
   1400259d1:	add    BYTE PTR [rdi],ah
   1400259d3:	add    BYTE PTR [rax],al
   1400259d5:	add    BYTE PTR [rax],ch
   1400259d7:	add    BYTE PTR [rdx],ch
   1400259d9:	add    BYTE PTR [rbx],ch
   1400259db:	add    BYTE PTR [rax],al
   1400259dd:	add    BYTE PTR [rax],al
   1400259df:	add    BYTE PTR [rip+0x0],ch        # 0x1400259e5
   1400259e5:	add    BYTE PTR [rax],al
   1400259e7:	add    BYTE PTR [rdi],ch
   1400259e9:	add    BYTE PTR [rax],al
   1400259eb:	add    BYTE PTR [rax],dh
	...
   1400259f9:	add    BYTE PTR [rax],al
   1400259fb:	add    bh,bl
   1400259fd:	add    BYTE PTR [rax],al
   1400259ff:	add    BYTE PTR [rax],al
   140025a01:	add    BYTE PTR [rax],al
   140025a03:	add    BYTE PTR [rip+0x34003100],dh        # 0x174028b09
   140025a09:	add    BYTE PTR [rdx],dh
   140025a0b:	add    al,ah
   140025a0d:	add    BYTE PTR [rsi],dh
   140025a0f:	add    BYTE PTR [rax],al
   140025a11:	add    BYTE PTR [rdi],dh
   140025a13:	add    dl,ah
   140025a15:	add    BYTE PTR [rcx],bh
   140025a17:	add    BYTE PTR [rax],al
   140025a19:	add    BYTE PTR [rdx],bh
   140025a1b:	add    BYTE PTR [rax],al
   140025a1d:	add    ch,ah
   140025a1f:	add    BYTE PTR [rax],al
   140025a21:	add    BYTE PTR [rax],al
   140025a23:	add    BYTE PTR [rax+rax*1],ch
   140025a26:	cmp    BYTE PTR [rax],al
   140025a28:	and    BYTE PTR [rax],al
   140025a2a:	add    BYTE PTR [rax],al
   140025a2c:	add    BYTE PTR [rax],al
   140025a2e:	add    BYTE PTR [rax],al
   140025a30:	sub    DWORD PTR [rax],eax
	...
   140025a3e:	add    BYTE PTR cs:[rdx],ah
   140025a41:	add    BYTE PTR [rbx],dh
	...
   140025a53:	add    BYTE PTR [rax],al
   140025a55:	add    BYTE PTR [rip+0x1f001e00],bl        # 0x15f02785b
	...
   140025a6b:	add    BYTE PTR [rcx],ah
	...
   140025a79:	add    BYTE PTR [rbx],ah
   140025a7b:	add    ah,bl
   140025a7d:	add    BYTE PTR [rax],al
   140025a7f:	add    BYTE PTR [rax],al
   140025a81:	add    BYTE PTR [rdx+0x2],al
   140025a84:	jo     0x140025a88
   140025a86:	add    BYTE PTR [rax],al
   140025a88:	add    BYTE PTR es:[rax],al
   140025a8b:	add    BYTE PTR [rax],al
   140025a8d:	add    BYTE PTR [rax],al
   140025a8f:	add    BYTE PTR [rdi],ah
   140025a91:	add    BYTE PTR [rax],al
   140025a93:	add    BYTE PTR [rax],ch
   140025a95:	add    BYTE PTR [rdx],ch
   140025a97:	add    BYTE PTR [rbx],ch
   140025a99:	add    BYTE PTR [rax],al
   140025a9b:	add    BYTE PTR [rax],al
   140025a9d:	add    BYTE PTR [rip+0x0],ch        # 0x140025aa3
   140025aa3:	add    BYTE PTR [rax],al
   140025aa5:	add    BYTE PTR [rdi],ch
   140025aa7:	add    BYTE PTR [rax],al
   140025aa9:	add    BYTE PTR [rax],dh
	...
   140025ab7:	add    BYTE PTR [rax],al
   140025ab9:	add    bh,bl
   140025abb:	add    BYTE PTR [rax],al
   140025abd:	add    BYTE PTR [rax],al
   140025abf:	add    BYTE PTR [rax],al
   140025ac1:	add    BYTE PTR [rip+0x34003100],dh        # 0x174028bc7
   140025ac7:	add    BYTE PTR [rdx],dh
   140025ac9:	add    al,ah
   140025acb:	add    BYTE PTR [rsi],dh
   140025acd:	add    BYTE PTR [rax],al
   140025acf:	add    BYTE PTR [rdi],dh
   140025ad1:	add    dl,ah
   140025ad3:	add    BYTE PTR [rcx],bh
   140025ad5:	add    BYTE PTR [rax],al
   140025ad7:	add    BYTE PTR [rdx],bh
   140025ad9:	add    BYTE PTR [rax],al
   140025adb:	add    ch,ah
   140025add:	add    BYTE PTR [rax],al
   140025adf:	add    BYTE PTR [rax],al
   140025ae1:	add    BYTE PTR [rax+rax*1],ch
   140025ae4:	cmp    BYTE PTR [rax],al
   140025ae6:	and    BYTE PTR [rax],al
   140025ae8:	add    BYTE PTR [rax],al
   140025aea:	add    BYTE PTR [rax],al
   140025aec:	add    BYTE PTR [rax],al
   140025aee:	sub    DWORD PTR [rax],eax
	...
   140025afc:	add    BYTE PTR cs:[rdx],ah
   140025aff:	add    BYTE PTR [rbx],dh
	...
   140025b11:	add    BYTE PTR [rax],al
   140025b13:	add    BYTE PTR [rdi+0x0],ch
   140025b16:	jo     0x140025b18
   140025b18:	jno    0x140025b1a
   140025b1a:	add    BYTE PTR [rax],al
   140025b1c:	add    BYTE PTR [rax],al
   140025b1e:	jae    0x140025b20
   140025b20:	jne    0x140025b22
   140025b22:	jbe    0x140025b24
   140025b24:	add    BYTE PTR [rax],al
   140025b26:	add    BYTE PTR [rax],al
   140025b28:	ja     0x140025b2a
   140025b2a:	add    BYTE PTR [rax],al
   140025b2c:	js     0x140025b2e
   140025b2e:	add    BYTE PTR [rax],al
   140025b30:	add    BYTE PTR [rax],al
   140025b32:	add    BYTE PTR [rax],al
   140025b34:	jp     0x140025b36
   140025b36:	jnp    0x140025b38
   140025b38:	jl     0x140025b3a
	...
   140025b46:	and    eax,DWORD PTR [rax]
   140025b48:	jge    0x140025b4a
   140025b4a:	jle    0x140025b4c
   140025b4c:	jg     0x140025b4e
	...
   140025b62:	add    BYTE PTR [rax],0x0
	...
   140025b81:	add    BYTE PTR [rbx+0x0],al
	...
   140025b8f:	add    BYTE PTR [rcx],dh
   140025b91:	add    BYTE PTR [rax+rax*1],dh
   140025b94:	xor    al,BYTE PTR [rax]
   140025b96:	test   BYTE PTR [rax],al
   140025b98:	test   DWORD PTR [rax],eax
   140025b9a:	xchg   BYTE PTR [rax],al
   140025b9c:	add    BYTE PTR [rax],al
   140025b9e:	mov    BYTE PTR [rax],al
   140025ba0:	mov    DWORD PTR [rax],eax
   140025ba2:	mov    al,BYTE PTR [rax]
   140025ba4:	mov    eax,DWORD PTR [rax]
   140025ba6:	mov    WORD PTR [rax],es
   140025ba8:	lea    eax,[rax]
   140025baa:	add    BYTE PTR [rax],al
   140025bac:	add    BYTE PTR [rax],al
   140025bae:	add    DWORD PTR [rax],0x790087
   140025bb4:	jb     0x140025bb6
   140025bb6:	je     0x140025bb8
   140025bb8:	(bad)  
	...
   140025bc5:	add    BYTE PTR [rax],al
   140025bc7:	add    BYTE PTR [rsi],ch
   140025bc9:	add    BYTE PTR [rdx],ah
   140025bcb:	add    BYTE PTR [rbx],dh
	...
   140025bdd:	add    BYTE PTR [rax],al
   140025bdf:	add    BYTE PTR [rdi+0x0],ch
   140025be2:	jo     0x140025be4
   140025be4:	jno    0x140025be6
   140025be6:	add    BYTE PTR [rax],al
   140025be8:	add    BYTE PTR [rax],al
   140025bea:	jae    0x140025bec
   140025bec:	jne    0x140025bee
   140025bee:	jbe    0x140025bf0
   140025bf0:	add    BYTE PTR [rax],al
   140025bf2:	add    BYTE PTR [rax],al
   140025bf4:	ja     0x140025bf6
   140025bf6:	add    BYTE PTR [rax],al
   140025bf8:	js     0x140025bfa
   140025bfa:	add    BYTE PTR [rax],al
   140025bfc:	add    BYTE PTR [rax],al
   140025bfe:	add    BYTE PTR [rax],al
   140025c00:	jp     0x140025c02
   140025c02:	jnp    0x140025c04
   140025c04:	jl     0x140025c06
	...
   140025c12:	and    eax,DWORD PTR [rax]
   140025c14:	jge    0x140025c16
   140025c16:	jle    0x140025c18
   140025c18:	jg     0x140025c1a
	...
   140025c2e:	add    BYTE PTR [rax],0x0
   140025c31:	add    BYTE PTR [rax],al
   140025c33:	add    BYTE PTR [rax],al
   140025c35:	add    BYTE PTR [rbx+0x1],cl
	...
   140025c4b:	add    BYTE PTR [rax],al
   140025c4d:	add    BYTE PTR [rbx+0x0],al
   140025c53:	add    BYTE PTR [rax],al
   140025c55:	add    BYTE PTR [rax],al
   140025c57:	add    BYTE PTR [rax],al
   140025c59:	add    BYTE PTR [rbp+0x34003101],cl
   140025c5f:	add    BYTE PTR [rdx],dh
   140025c61:	add    BYTE PTR [rax+rax*1+0x860085],al
   140025c68:	add    BYTE PTR [rax],al
   140025c6a:	mov    BYTE PTR [rax],al
   140025c6c:	mov    DWORD PTR [rax],eax
   140025c6e:	mov    al,BYTE PTR [rax]
   140025c70:	mov    eax,DWORD PTR [rax]
   140025c72:	mov    WORD PTR [rax],es
   140025c74:	lea    eax,[rax]
   140025c76:	add    BYTE PTR [rax],al
   140025c78:	add    BYTE PTR [rax],al
   140025c7a:	add    DWORD PTR [rax],0x790087
   140025c80:	jb     0x140025c82
   140025c82:	je     0x140025c84
   140025c84:	(bad)  
	...
   140025c91:	add    BYTE PTR [rax],al
   140025c93:	add    BYTE PTR [rsi],ch
   140025c95:	add    BYTE PTR [rsi+0x1],dh
   140025c98:	jl     0x140025c9b
	...
   140025caa:	add    BYTE PTR [rax],al
   140025cac:	outs   dx,DWORD PTR ds:[rsi]
   140025cad:	add    BYTE PTR [rax+0x0],dh
   140025cb0:	jno    0x140025cb2
   140025cb2:	add    BYTE PTR [rax],al
   140025cb4:	add    BYTE PTR [rax],al
   140025cb6:	jae    0x140025cb8
   140025cb8:	jne    0x140025cba
   140025cba:	jbe    0x140025cbc
   140025cbc:	add    BYTE PTR [rax],al
   140025cbe:	add    BYTE PTR [rax],al
   140025cc0:	ja     0x140025cc2
   140025cc2:	add    BYTE PTR [rax],al
   140025cc4:	js     0x140025cc6
   140025cc6:	add    BYTE PTR [rax],al
   140025cc8:	add    BYTE PTR [rax],al
   140025cca:	add    BYTE PTR [rax],al
   140025ccc:	jp     0x140025cce
   140025cce:	jnp    0x140025cd0
   140025cd0:	jl     0x140025cd2
	...
   140025cde:	and    eax,DWORD PTR [rax]
   140025ce0:	jge    0x140025ce2
   140025ce2:	jle    0x140025ce4
   140025ce4:	jg     0x140025ce6
	...
   140025cfa:	add    BYTE PTR [rax],0x0
   140025cfd:	add    BYTE PTR [rax],al
   140025cff:	add    BYTE PTR [rax],al
   140025d01:	add    BYTE PTR [rbx+0x1],cl
	...
   140025d17:	add    BYTE PTR [rax],al
   140025d19:	add    BYTE PTR [rbx+0x0],al
   140025d1f:	add    BYTE PTR [rax],al
   140025d21:	add    BYTE PTR [rax],al
   140025d23:	add    BYTE PTR [rax],al
   140025d25:	add    BYTE PTR [rbp+0x34003101],cl
   140025d2b:	add    BYTE PTR [rdx],dh
   140025d2d:	add    BYTE PTR [rax+rax*1+0x860085],al
   140025d34:	add    BYTE PTR [rax],al
   140025d36:	mov    BYTE PTR [rax],al
   140025d38:	mov    DWORD PTR [rax],eax
   140025d3a:	mov    al,BYTE PTR [rax]
   140025d3c:	mov    eax,DWORD PTR [rax]
   140025d3e:	mov    WORD PTR [rax],es
   140025d40:	lea    eax,[rax]
   140025d42:	add    BYTE PTR [rax],al
   140025d44:	add    BYTE PTR [rax],al
   140025d46:	add    DWORD PTR [rax],0x790087
   140025d4c:	jb     0x140025d4e
   140025d4e:	je     0x140025d50
   140025d50:	(bad)  
	...
   140025d5d:	add    BYTE PTR [rax],al
   140025d5f:	add    BYTE PTR [rsi],ch
   140025d61:	add    BYTE PTR [rdx],ah
   140025d63:	add    BYTE PTR [rbx],dh
	...
   140025d75:	add    BYTE PTR [rax],al
   140025d77:	add    BYTE PTR [rdi+0x0],ch
   140025d7a:	jo     0x140025d7c
   140025d7c:	jno    0x140025d7e
   140025d7e:	add    BYTE PTR [rax],al
   140025d80:	add    BYTE PTR [rax],al
   140025d82:	jae    0x140025d84
   140025d84:	jne    0x140025d86
   140025d86:	jbe    0x140025d88
   140025d88:	add    BYTE PTR [rax],al
   140025d8a:	add    BYTE PTR [rax],al
   140025d8c:	ja     0x140025d8e
   140025d8e:	add    BYTE PTR [rax],al
   140025d90:	js     0x140025d92
   140025d92:	add    BYTE PTR [rax],al
   140025d94:	add    BYTE PTR [rax],al
   140025d96:	add    BYTE PTR [rax],al
   140025d98:	jp     0x140025d9a
   140025d9a:	jnp    0x140025d9c
   140025d9c:	jl     0x140025d9e
	...
   140025daa:	and    eax,DWORD PTR [rax]
   140025dac:	jge    0x140025dae
   140025dae:	jle    0x140025db0
   140025db0:	jg     0x140025db2
	...
   140025dc6:	add    BYTE PTR [rax],0x0
   140025dc9:	add    BYTE PTR [rax],al
   140025dcb:	add    BYTE PTR [rax],al
   140025dcd:	add    BYTE PTR [rbx+0x1],cl
	...
   140025ddb:	add    BYTE PTR [rax],al
   140025ddd:	add    BYTE PTR [rcx+rax*1+0x0],cl
   140025de4:	add    BYTE PTR [rax],al
   140025de6:	add    DWORD PTR [rax],0x0
	...
   140025df1:	add    BYTE PTR [rbp+0x34003101],cl
   140025df7:	add    BYTE PTR [rdx],dh
   140025df9:	add    BYTE PTR [rax+rax*1+0x860085],al
   140025e00:	add    BYTE PTR [rax],al
   140025e02:	mov    BYTE PTR [rax],al
   140025e04:	mov    DWORD PTR [rax],eax
   140025e06:	mov    al,BYTE PTR [rax]
   140025e08:	mov    eax,DWORD PTR [rax]
   140025e0a:	mov    WORD PTR [rax],es
   140025e0c:	lea    eax,[rax]
   140025e0e:	add    BYTE PTR [rax],al
   140025e10:	add    BYTE PTR [rax],al
   140025e12:	add    DWORD PTR [rax],0x790087
   140025e18:	jb     0x140025e1a
   140025e1a:	je     0x140025e1c
   140025e1c:	(bad)  
	...
   140025e29:	add    BYTE PTR [rax],al
   140025e2b:	add    BYTE PTR [rsi],ch
   140025e2d:	add    BYTE PTR [rsi+0x1],dh
   140025e30:	jl     0x140025e33
	...
   140025e42:	add    BYTE PTR [rax],al
   140025e44:	(bad)  
	...
   140025e4d:	add    bh,dl
   140025e4f:	add    BYTE PTR [rax],al
   140025e51:	add    BYTE PTR [rip+0x1f001e00],bl        # 0x15f027c57
   140025e57:	add    cl,bl
	...
   140025e65:	add    dl,bl
   140025e67:	add    BYTE PTR [rcx],ah
	...
   140025e75:	add    BYTE PTR [rbx],ah
   140025e77:	add    ah,bl
   140025e79:	add    BYTE PTR [rax],al
   140025e7b:	add    BYTE PTR [rax],al
   140025e7d:	add    ch,bl
   140025e7f:	add    BYTE PTR [rip+0x26000000],ah        # 0x166025e85
   140025e85:	add    BYTE PTR [rax],al
   140025e87:	add    BYTE PTR [rax],al
   140025e89:	add    BYTE PTR [rax],al
   140025e8b:	add    BYTE PTR [rdi],ah
   140025e8d:	add    BYTE PTR [rax],al
   140025e8f:	add    BYTE PTR [rax],ch
   140025e91:	add    BYTE PTR [rdx],ch
   140025e93:	add    BYTE PTR [rbx],ch
   140025e95:	add    BYTE PTR [rax],al
   140025e97:	add    BYTE PTR [rax],al
   140025e99:	add    BYTE PTR [rip+0x0],ch        # 0x140025e9f
   140025e9f:	add    BYTE PTR [rax],al
   140025ea1:	add    BYTE PTR [rdi],ch
   140025ea3:	add    BYTE PTR [rax],al
   140025ea5:	add    BYTE PTR [rax],dh
	...
   140025eaf:	add    BYTE PTR [rax],al
   140025eb1:	add    dh,bl
   140025eb3:	add    BYTE PTR [rax],al
   140025eb5:	add    bh,bl
   140025eb7:	add    BYTE PTR [rax],al
   140025eb9:	add    BYTE PTR [rax],al
   140025ebb:	add    BYTE PTR [rax],al
   140025ebd:	add    BYTE PTR [rip+0x34003100],dh        # 0x174028fc3
   140025ec3:	add    BYTE PTR [rdx],dh
   140025ec5:	add    al,ah
   140025ec7:	add    BYTE PTR [rsi],dh
   140025ec9:	add    cl,ah
   140025ecb:	add    BYTE PTR [rdi],dh
   140025ecd:	add    dl,ah
   140025ecf:	add    BYTE PTR [rcx],bh
   140025ed1:	add    bl,ah
   140025ed3:	add    BYTE PTR [rdx],bh
   140025ed5:	add    ah,ah
   140025ed7:	add    ch,ah
   140025ed9:	add    BYTE PTR [rax],al
   140025edb:	add    BYTE PTR [rax],al
   140025edd:	add    BYTE PTR [rax+rax*1],ch
   140025ee0:	cmp    BYTE PTR [rax],al
   140025ee2:	and    BYTE PTR [rax],al
   140025ee4:	(bad)  
   140025ee5:	add    al,bl
   140025ee7:	add    BYTE PTR [rax],al
   140025ee9:	add    BYTE PTR [rcx],ch
	...
   140025ef7:	add    BYTE PTR [rsi],ch
   140025ef9:	add    BYTE PTR [rdx],ah
   140025efb:	add    BYTE PTR [rbx],dh
	...
   140025f0d:	add    BYTE PTR [rax],al
   140025f0f:	add    ch,dl
	...
   140025f19:	add    bh,dl
   140025f1b:	add    BYTE PTR [rax],al
   140025f1d:	add    BYTE PTR [rip+0x1f001e00],bl        # 0x15f027d23
   140025f23:	add    cl,bl
	...
   140025f31:	add    dl,bl
   140025f33:	add    bl,bl
	...
   140025f41:	add    BYTE PTR [rbx],ah
   140025f43:	add    ah,bl
   140025f45:	add    BYTE PTR [rax],al
   140025f47:	add    BYTE PTR [rax],al
   140025f49:	add    ch,bl
   140025f4b:	add    BYTE PTR [rip+0x26000000],ah        # 0x166025f51
   140025f51:	add    BYTE PTR [rax],al
   140025f53:	add    BYTE PTR [rax],al
   140025f55:	add    BYTE PTR [rax],al
   140025f57:	add    BYTE PTR [rdi],ah
   140025f59:	add    BYTE PTR [rax],al
   140025f5b:	add    BYTE PTR [rax],ch
   140025f5d:	add    BYTE PTR [rdx],ch
   140025f5f:	add    BYTE PTR [rbx],ch
   140025f61:	add    BYTE PTR [rax],al
   140025f63:	add    BYTE PTR [rax],al
   140025f65:	add    BYTE PTR [rip+0x0],ch        # 0x140025f6b
   140025f6b:	add    BYTE PTR [rax],al
   140025f6d:	add    BYTE PTR [rdi],ch
   140025f6f:	add    BYTE PTR [rax],al
   140025f71:	add    BYTE PTR [rax],dh
	...
   140025f7b:	add    BYTE PTR [rax],al
   140025f7d:	add    dh,bl
   140025f7f:	add    BYTE PTR [rax],al
   140025f81:	add    bh,bl
   140025f83:	add    BYTE PTR [rax],al
   140025f85:	add    BYTE PTR [rax],al
   140025f87:	add    BYTE PTR [rax],al
   140025f89:	add    BYTE PTR [rip+0x34003100],dh        # 0x17402908f
   140025f8f:	add    BYTE PTR [rdx],dh
   140025f91:	add    al,ah
   140025f93:	add    BYTE PTR [rsi],dh
   140025f95:	add    cl,ah
   140025f97:	add    BYTE PTR [rdi],dh
   140025f99:	add    dl,ah
   140025f9b:	add    BYTE PTR [rcx],bh
   140025f9d:	add    bl,ah
   140025f9f:	add    BYTE PTR [rdx],bh
   140025fa1:	add    ah,ah
   140025fa3:	add    ch,ah
   140025fa5:	add    BYTE PTR [rax],al
   140025fa7:	add    BYTE PTR [rax],al
   140025fa9:	add    BYTE PTR [rax+rax*1],ch
   140025fac:	cmp    BYTE PTR [rax],al
   140025fae:	and    BYTE PTR [rax],al
   140025fb0:	(bad)  
   140025fb1:	add    al,bl
   140025fb3:	add    BYTE PTR [rax],al
   140025fb5:	add    BYTE PTR [rcx],ch
	...
   140025fc3:	add    BYTE PTR [rsi],ch
   140025fc5:	add    BYTE PTR [rdx],ah
   140025fc7:	add    BYTE PTR [rbx],dh
	...
   140025fd9:	add    BYTE PTR [rax],al
   140025fdb:	add    BYTE PTR [rsi+0x2],al
   140025fde:	jo     0x140025fe0
   140025fe0:	jno    0x140025fe2
   140025fe2:	add    BYTE PTR [rax],al
   140025fe4:	add    BYTE PTR [rax],al
   140025fe6:	rex.W add sil,BYTE PTR [rbp+0x0]
   140025fea:	rex.WX add bl,BYTE PTR [rsi]
   140025fed:	add    BYTE PTR [rdi],bl
   140025fef:	add    BYTE PTR [rbx+0x2],cl
   140025ff2:	add    BYTE PTR [rax],al
   140025ff4:	js     0x140025ff6
   140025ff6:	add    BYTE PTR [rax],al
   140025ff8:	add    BYTE PTR [rax],al
   140025ffa:	add    BYTE PTR [rax],al
   140025ffc:	jp     0x140025ffe
   140025ffe:	rex.WRB add r9b,BYTE PTR [r14+0x2]
	...
   14002600e:	and    eax,DWORD PTR [rax]
   140026010:	rex.WRXB add r15b,BYTE PTR [r14+0x0]
   140026014:	jg     0x140026016
   140026016:	fld    QWORD PTR [rax]
   140026018:	and    eax,0x26000000
   14002601d:	add    BYTE PTR [rax],al
   14002601f:	add    BYTE PTR [rax],al
   140026021:	add    BYTE PTR [rax],al
   140026023:	add    BYTE PTR [rdi],ah
   140026025:	add    BYTE PTR [rax],al
   140026027:	add    BYTE PTR [rax],ch
   140026029:	add    BYTE PTR [rax+0x2],dl
   14002602c:	sub    eax,DWORD PTR [rax]
   14002602e:	add    BYTE PTR [rax],al
   140026030:	add    BYTE PTR [rax],al
   140026032:	push   rdx
   140026033:	add    al,BYTE PTR [rax]
   140026035:	add    BYTE PTR [rax],al
   140026037:	add    BYTE PTR [rax],al
   140026039:	add    BYTE PTR [rdi],ch
   14002603b:	add    BYTE PTR [rax],al
   14002603d:	add    BYTE PTR [rax],dh
	...
   140026047:	add    BYTE PTR [rax],al
   140026049:	add    BYTE PTR [rbx+0x2],dl
   14002604c:	add    BYTE PTR [rax],al
   14002604e:	fild   WORD PTR [rax]
   140026050:	add    BYTE PTR [rax],al
   140026052:	add    BYTE PTR [rax],al
   140026054:	add    BYTE PTR [rax],al
   140026056:	push   rsp
   140026057:	add    dh,BYTE PTR [rcx]
   140026059:	add    BYTE PTR [rax+rax*1],dh
   14002605c:	xor    al,BYTE PTR [rax]
   14002605e:	push   rbp
   14002605f:	add    dl,BYTE PTR [rsi+0x2]
   140026062:	push   rdi
   140026063:	add    dh,BYTE PTR [rdi]
   140026065:	add    BYTE PTR [rcx+0x2],bl
   140026068:	pop    rdx
   140026069:	add    bl,BYTE PTR [rbx+0x2]
   14002606c:	pop    rsp
   14002606d:	add    bl,BYTE PTR [rbp+0x2]
   140026070:	pop    rsi
   140026071:	add    al,BYTE PTR [rax]
   140026073:	add    BYTE PTR [rax],al
   140026075:	add    BYTE PTR [rcx+0x2],dl
   140026078:	pop    rax
   140026079:	add    cl,BYTE PTR [rdx+rax*1+0x47]
   14002607d:	add    cl,BYTE PTR [rcx+0x2]
   140026080:	(bad)  
   140026081:	add    BYTE PTR [rcx],ch
	...
   14002608f:	add    BYTE PTR [rsi],ch
   140026091:	add    BYTE PTR [rsi+0x1],dh
   140026094:	jl     0x140026097
	...
   1400260a6:	add    BYTE PTR [rax],al
   1400260a8:	ins    DWORD PTR es:[rdi],dx
   1400260a9:	add    DWORD PTR [rax+0x0],esi
   1400260ac:	jno    0x1400260ae
   1400260ae:	add    BYTE PTR [rax],al
   1400260b0:	add    BYTE PTR [rax],al
   1400260b2:	outs   dx,DWORD PTR ds:[rsi]
   1400260b3:	add    DWORD PTR [rbp+0x0],esi
   1400260b6:	jno    0x1400260b9
   1400260b8:	(bad)  
   1400260b9:	add    BYTE PTR [rdi],bl
   1400260bb:	add    BYTE PTR [rdx+0x1],dh
   1400260be:	add    BYTE PTR [rax],al
   1400260c0:	js     0x1400260c2
   1400260c2:	add    BYTE PTR [rax],al
   1400260c4:	add    BYTE PTR [rax],al
   1400260c6:	add    BYTE PTR [rax],al
   1400260c8:	jp     0x1400260ca
   1400260ca:	je     0x1400260cd
   1400260cc:	jne    0x1400260cf
	...
   1400260da:	and    eax,DWORD PTR [rax]
   1400260dc:	ja     0x1400260df
   1400260de:	jle    0x1400260e0
   1400260e0:	jg     0x1400260e2
   1400260e2:	fld    QWORD PTR [rax]
   1400260e4:	and    eax,0x26000000
   1400260e9:	add    BYTE PTR [rax],al
   1400260eb:	add    BYTE PTR [rax],al
   1400260ed:	add    BYTE PTR [rax],al
   1400260ef:	add    BYTE PTR [rdi],ah
   1400260f1:	add    BYTE PTR [rax],al
   1400260f3:	add    BYTE PTR [rax],ch
   1400260f5:	add    BYTE PTR [rax+0x1],bh
   1400260f8:	sub    eax,DWORD PTR [rax]
   1400260fa:	add    BYTE PTR [rax],al
   1400260fc:	add    BYTE PTR [rax],al
   1400260fe:	jp     0x140026101
   140026100:	add    BYTE PTR [rax],al
   140026102:	add    BYTE PTR [rax],al
   140026104:	add    BYTE PTR [rax],al
   140026106:	(bad)  
   140026107:	add    BYTE PTR [rax],al
   140026109:	add    BYTE PTR [rax],dh
   14002610b:	add    BYTE PTR [rax],al
   14002610d:	add    dl,ch
   14002610f:	inc    BYTE PTR [rax]
   140026111:	add    BYTE PTR [rax],al
   140026113:	add    BYTE PTR [rax],al
   140026115:	add    BYTE PTR [rbx+0x1],bh
   140026118:	add    BYTE PTR [rax],al
   14002611a:	fild   WORD PTR [rax]
   14002611c:	add    BYTE PTR [rax],al
   14002611e:	add    BYTE PTR [rax],al
   140026120:	add    BYTE PTR [rax],al
   140026122:	jge    0x140026125
   140026124:	xor    DWORD PTR [rax],eax
   140026126:	xor    al,0x0
   140026128:	xor    al,BYTE PTR [rax]
   14002612a:	jle    0x14002612d
   14002612c:	jg     0x14002612f
   14002612e:	add    BYTE PTR [rcx],0x37
   140026131:	add    BYTE PTR [rdx-0x7bfe7cff],al
   140026137:	add    DWORD PTR [rbp-0x78fe79ff],eax
   14002613d:	add    DWORD PTR [rax],eax
   14002613f:	add    BYTE PTR [rax],al
   140026141:	add    BYTE PTR [rcx+0x1],bh
   140026144:	add    DWORD PTR [rcx],0x16e0173
   14002614a:	jo     0x14002614d
   14002614c:	(bad)  
   14002614d:	add    BYTE PTR [rcx],ch
	...
   14002615b:	add    BYTE PTR [rsi],ch
   14002615d:	add    BYTE PTR [rsi+0x1],dh
   140026160:	jl     0x140026163
	...
   140026172:	add    BYTE PTR [rax],al
   140026174:	and    DWORD PTR [rdx],eax
   140026176:	cmp    al,0x2
   140026178:	xor    eax,0x8e027802
   14002617d:	add    dl,BYTE PTR [rax+rax*1+0x21d0211]
   140026184:	adc    BYTE PTR [rdx],al
   140026186:	mov    es,WORD PTR [rax]
   140026188:	xchg   esp,eax
   140026189:	add    al,BYTE PTR [rdi]
   14002618b:	add    esp,esi
   14002618d:	add    DWORD PTR [rcx+0x68026901],ecx
   140026193:	add    ch,BYTE PTR [rbp+0x2]
   140026196:	data16 add dl,BYTE PTR [rax]
   140026199:	add    BYTE PTR [rbp+0x2],dh
   14002619c:	mov    esp,0x3900b701
   1400261a1:	add    DWORD PTR [rbx],esp
   1400261a3:	add    bh,BYTE PTR [rdi+0x7700b701]
   1400261a9:	add    al,BYTE PTR [rbx-0x7ff02fe]
   1400261af:	add    BYTE PTR [rdx+rax*1+0x23f01e5],al
   1400261b6:	add    bl,BYTE PTR ds:[rdi+0x2]
   1400261ba:	cwde   
   1400261bb:	add    BYTE PTR [rax+0x1],al
   1400261be:	mov    ch,0x1
   1400261c0:	mov    dl,0x0
   1400261c2:	cmp    DWORD PTR [rcx],eax
   1400261c4:	mov    ecx,0xad01b101
   1400261c9:	add    BYTE PTR [rdi-0x2ff5b00],dh
   1400261cf:	add    dh,cl
   1400261d1:	add    DWORD PTR [rcx],edi
   1400261d3:	add    ecx,ecx
   1400261d5:	add    DWORD PTR [rdi-0x3afe43ff],edi
   1400261db:	add    ebp,edi
   1400261dd:	add    dl,cl
   1400261df:	add    DWORD PTR [rcx-0x38fea4ff],ebp
   1400261e5:	add    eax,edi
   1400261e7:	add    BYTE PTR [rdi+0x1],bl
   1400261ea:	mov    esp,0xd201db00
   1400261ef:	add    edx,esi
   1400261f1:	add    DWORD PTR [rbx-0x40ff6a00],ebp
   1400261f7:	add    esi,ecx
   1400261f9:	add    BYTE PTR [rsi-0x2bfe7000],bh
   1400261ff:	add    DWORD PTR [rax],eax
   140026201:	add    BYTE PTR [rdi-0x10ff0800],dh
   140026207:	add    ebp,edx
   140026209:	add    ebp,ebp
   14002620b:	add    BYTE PTR [rcx-0x66fe76ff],bl
   140026211:	add    DWORD PTR [rbx+0x1],ecx
   140026214:	rol    BYTE PTR [rcx],1
   140026216:	test   DWORD PTR [rax],0xce0200
   14002621c:	xchg   ecx,eax
   14002621d:	add    dh,cl
   14002621f:	add    BYTE PTR [rsi],bh
   140026221:	add    BYTE PTR [rcx-0x31fe04ff],bl
   140026227:	add    BYTE PTR [rax],al
   140026229:	add    bh,bh
   14002622b:	add    DWORD PTR [rax],eax
   14002622d:	add    BYTE PTR [rax+rax*1+0xce0000],bh
   140026234:	(bad)  
   140026235:	add    BYTE PTR [rax+rax*1+0x3e00ce],bh
   14002623c:	ds add al,bh
   14002623f:	add    esp,ecx
   140026241:	add    DWORD PTR [rcx-0x31ffc1ff],esp
   140026247:	add    cl,bh
   140026249:	add    esi,ecx
   14002624b:	add    BYTE PTR [rdi-0x68fd79fe],al
   140026251:	add    DWORD PTR [rax],eax
   140026253:	add    BYTE PTR [rax],al
   140026255:	add    BYTE PTR [rdx-0x65ffc1ff],bl
   14002625b:	add    ebx,ecx
   14002625d:	add    DWORD PTR [rsi],edi
   14002625f:	add    BYTE PTR [rax+rax*1+0x3e01fa],dl
   140026266:	mov    ebx,0x15003e00
   14002626b:	add    DWORD PTR [rdx-0x63fe5cff],ebx
   140026271:	add    DWORD PTR [rdx],ebp
   140026273:	add    DWORD PTR [rcx],ebx
   140026275:	add    DWORD PTR [rcx+0x9401],ecx
   14002627b:	add    BYTE PTR [rax],al
   14002627d:	add    BYTE PTR [rax],al
   14002627f:	add    BYTE PTR [rsi-0x55ffc1ff],ah
   140026285:	add    BYTE PTR [rsi],bh
   140026287:	add    BYTE PTR [rax+rax*1+0x127003e],dh
   14002628e:	add    al,BYTE PTR [rdx]
   140026290:	sub    BYTE PTR [rcx],al
   140026292:	add    al,0x1
   140026294:	sub    DWORD PTR [rcx],eax
   140026296:	add    BYTE PTR ds:[rax+0x3e01f702],cl
   14002629d:	add    BYTE PTR [rsi],bh
   14002629f:	add    BYTE PTR [rsi],bh
   1400262a1:	add    BYTE PTR [rsi+0x2b020200],dh
   1400262a7:	add    DWORD PTR [rdx+0x3e003e01],ecx
   1400262ad:	add    ah,cl
   1400262af:	add    ebx,ecx
   1400262b1:	add    esi,ecx
   1400262b3:	add    BYTE PTR [rdx+0x1],ch
   1400262b6:	jbe    0x1400262ba
   1400262b8:	push   0x1
   1400262ba:	add    BYTE PTR ds:[rdi+0x201f600],ah
   1400262c1:	add    bh,BYTE PTR [rsi]
   1400262c3:	add    BYTE PTR [rsi],bh
   1400262c5:	add    BYTE PTR [rdx+0x1],al
   1400262c8:	add    BYTE PTR ds:[rcx],ch
   1400262cb:	add    bh,BYTE PTR [rcx+rax*1+0x640063]
   1400262d2:	pop    rbp
   1400262d3:	add    dh,cl
   1400262d5:	add    BYTE PTR [rsi],bh
   1400262d7:	add    BYTE PTR [rcx+rax*1-0x32],ah
   1400262db:	add    dh,bh
   1400262dd:	add    esi,ecx
   1400262df:	add    BYTE PTR [rsi+0x0],bl
   1400262e2:	add    BYTE PTR ds:[rsi],bh
   1400262e5:	add    dh,cl
   1400262e7:	add    BYTE PTR [rsi],bh
   1400262e9:	add    BYTE PTR [rsi],bh
   1400262eb:	add    BYTE PTR [rdi+0x0],bl
   1400262ee:	(bad)  
   1400262ef:	add    BYTE PTR [rsi],bh
   1400262f1:	add    BYTE PTR [rcx+0x0],ah
   1400262f4:	push   rsi
   1400262f5:	add    BYTE PTR [rsi],bh
   1400262f7:	add    BYTE PTR [rdx+0x0],bl
   1400262fa:	in     eax,dx
   1400262fb:	add    DWORD PTR [rsi],edi
   1400262fd:	add    BYTE PTR [rbx+0x0],bl
   140026300:	mov    esp,0x5c01ec00
   140026305:	add    BYTE PTR [rbx+0x1],ah
   140026308:	add    BYTE PTR ds:[rcx+0x1],ah
   14002630c:	ins    BYTE PTR es:[rdi],dx
   14002630d:	add    BYTE PTR [rsi],bh
   14002630f:	add    bl,ah
   140026311:	add    DWORD PTR [rbp+0x1],ebx
   140026314:	repnz add BYTE PTR [rcx+0x1],bl
   140026318:	test   DWORD PTR [rax],0x14b0139
   14002631e:	(bad)  
   14002631f:	add    DWORD PTR [rsi+0x0],esp
   140026322:	push   0xffffffffce013900
   140026327:	add    BYTE PTR [rsi],bh
   140026329:	add    dh,cl
   14002632b:	add    BYTE PTR [rsi+0x3e010400],dh
   140026331:	add    dh,cl
   140026333:	add    dh,cl
   140026335:	add    dh,cl
   140026337:	add    bh,ch
   140026339:	add    BYTE PTR [rsi],bh
   14002633b:	add    BYTE PTR [rdx+0x0],ah
   14002633e:	mov    dh,0x0
   140026340:	cmp    DWORD PTR [rcx],eax
   140026342:	cmp    DWORD PTR [rcx],eax
   140026344:	add    BYTE PTR ds:[rsi+0x0],ch
   140026348:	push   0x1
   14002634a:	rex.W add BYTE PTR [rsi],dil
   14002634d:	add    dh,cl
   14002634f:	add    BYTE PTR [rbp+0x0],al
   140026352:	add    BYTE PTR ds:[rsi],bh
   140026355:	add    DWORD PTR [rsi+0x0],eax
   140026358:	add    BYTE PTR ds:[rsi],bh
   14002635b:	add    BYTE PTR [rdi+0x0],al
   14002635e:	add    al,0x1
   140026360:	(bad)  
   140026361:	add    BYTE PTR [rsi],bh
   140026363:	add    dh,dh
   140026365:	add    BYTE PTR [rcx+0x3e024501],cl
   14002636b:	add    BYTE PTR [rsi],bh
   14002636d:	add    ah,cl
   14002636f:	add    DWORD PTR [rax],eax
   140026371:	add    BYTE PTR [rdx+0x0],cl
   140026374:	(bad)  
   140026375:	add    BYTE PTR [rsi],bh
   140026377:	add    BYTE PTR [rdi+0x0],cl
   14002637a:	retf   
   14002637b:	add    DWORD PTR [rax],eax
   14002637d:	add    dh,cl
   14002637f:	add    BYTE PTR [rdx],al
   140026381:	add    dh,BYTE PTR [rip+0x3e00ce01]        # 0x17e033188
   140026387:	add    BYTE PTR [rdx+0x1],ch
   14002638a:	sub    eax,0x11902
   14002638f:	add    BYTE PTR [rcx],bl
   140026391:	add    DWORD PTR [rip+0x3e01],esi        # 0x14002a198
   140026397:	add    BYTE PTR [rcx+rax*1],bl
   14002639a:	xchg   ebx,eax
   14002639b:	add    DWORD PTR [rcx],ebx
   14002639d:	add    DWORD PTR [rcx],ebx
   14002639f:	add    DWORD PTR [rax],eax
   1400263a1:	add    BYTE PTR [rip+0x19101],dh        # 0x14003f4a8
   1400263a7:	add    dh,cl
   1400263a9:	add    BYTE PTR [rdx],dh
   1400263ab:	add    DWORD PTR [rcx],ebx
   1400263ad:	add    DWORD PTR [rcx+rax*1],esi
   1400263b0:	push   rdi
   1400263b1:	add    edi,ebx
   1400263b3:	add    DWORD PTR [rcx+rax*1+0x3e],edx
   1400263b7:	add    BYTE PTR [rsi],bh
   1400263b9:	add    BYTE PTR [rbp+0x1],dl
   1400263bc:	ins    BYTE PTR es:[rdi],dx
   1400263bd:	add    BYTE PTR [rcx+0x1],dl
   1400263c0:	sbb    DWORD PTR [rcx],eax
   1400263c2:	sbb    DWORD PTR [rcx],eax
   1400263c4:	(bad)  
   1400263c5:	add    BYTE PTR [rsi],ch
   1400263c7:	add    DWORD PTR [rip+0x3e01],esi        # 0x14002a1ce
   1400263cd:	add    BYTE PTR [rdx+0x1],cl
   1400263d0:	xor    BYTE PTR [rcx],al
   1400263d2:	sbb    DWORD PTR [rcx],eax
   1400263d4:	sbb    DWORD PTR [rcx],eax
   1400263d6:	cmp    al,BYTE PTR [rcx]
   1400263d8:	cmp    al,0x1
   1400263da:	add    BYTE PTR ds:[rip+0x3e000001],dh        # 0x17e0263e2
   1400263e1:	add    BYTE PTR [rsi],bh
   1400263e3:	add    BYTE PTR [rcx],bl
   1400263e5:	add    DWORD PTR [rcx],ebx
   1400263e7:	add    DWORD PTR [rcx+rax*1+0x19],eax
   1400263eb:	add    DWORD PTR [rcx],ebx
   1400263ed:	add    DWORD PTR [rip+0x2012c01],ebp        # 0x142038ff4
   1400263f3:	add    dh,BYTE PTR [rdi]
   1400263f5:	add    DWORD PTR [rsi+0x0],ebp
   1400263f8:	mov    cl,0x0
   1400263fa:	add    BYTE PTR [rax],al
   1400263fc:	rex.RXB add DWORD PTR [r8],r8d
   1400263ff:	add    BYTE PTR [rsi],bh
   140026401:	add    BYTE PTR [rcx],bh
   140026403:	add    cl,BYTE PTR [rdx]
   140026405:	add    dh,BYTE PTR [rdx+rax*1]
   140026408:	add    QWORD PTR [rcx],rbx
   14002640b:	add    DWORD PTR [rcx],ebp
   14002640d:	add    ah,BYTE PTR [rcx]
   14002640f:	add    DWORD PTR [rbx+0x2],esi
   140026412:	xor    DWORD PTR [rdx],eax
   140026414:	add    BYTE PTR [rax],al
   140026416:	add    BYTE PTR [rax],al
   140026418:	add    al,BYTE PTR [rdx]
   14002641a:	add    BYTE PTR [rax],al
   14002641c:	add    DWORD PTR [rdx],eax
   14002641e:	or     eax,DWORD PTR [rdx]
   140026420:	add    BYTE PTR [rax],al
   140026422:	add    BYTE PTR [rax],al
   140026424:	add    al,BYTE PTR [rdx]
   140026426:	add    BYTE PTR [rax],al
   140026428:	add    BYTE PTR [rax],al
   14002642a:	or     al,BYTE PTR [rdx]
	...
   140026434:	mov    ebx,0x20a01
   140026439:	add    ch,ah
   14002643b:	add    DWORD PTR [rax],eax
   14002643d:	add    BYTE PTR [rax],al
   14002643f:	add    BYTE PTR [rax],al
   140026441:	add    BYTE PTR [rcx],al
   140026443:	add    cl,BYTE PTR [rbx]
   140026445:	add    al,BYTE PTR [rax]
   140026447:	add    BYTE PTR [rax],al
   140026449:	add    BYTE PTR [rax],al
   14002644b:	add    BYTE PTR [rax],al
   14002644d:	add    BYTE PTR [rcx],al
   14002644f:	add    cl,BYTE PTR [rbx]
   140026451:	add    dl,BYTE PTR [rip+0x17021602]        # 0x157047a59
   140026457:	add    bl,BYTE PTR [rax]
   140026459:	add    bl,BYTE PTR [rdx+rax*1]
   14002645c:	sbb    DWORD PTR [rdx],eax
   14002645e:	sbb    al,BYTE PTR [rdx]
	...
   14002646c:	add    BYTE PTR [rax],al
   14002646e:	add    al,BYTE PTR [r8]
	...
   14002647d:	add    BYTE PTR [rdx+0x1],ch
   140026480:	add    al,BYTE PTR [r10+r8*1+0x15]
   140026485:	add    dl,BYTE PTR [rsi]
   140026487:	add    dl,BYTE PTR [rdi]
   140026489:	add    bl,BYTE PTR [rax]
   14002648b:	add    bl,BYTE PTR [rdx+rax*1]
   14002648e:	sbb    DWORD PTR [rdx],eax
   140026490:	sbb    al,BYTE PTR [rdx]
   140026492:	cmp    DWORD PTR [rdx],eax
	...
   14002649c:	add    BYTE PTR [rax],al
   14002649e:	(bad)  
   14002649f:	add    BYTE PTR [rax],al
   1400264a1:	add    BYTE PTR [rax],al
   1400264a3:	add    BYTE PTR [rdx],bh
   1400264a5:	add    bh,BYTE PTR [rbx]
   1400264a7:	add    dl,BYTE PTR [rip+0x17021602]        # 0x157047aaf
   1400264ad:	add    bl,BYTE PTR [rax]
   1400264af:	add    bl,BYTE PTR [rdx+rax*1]
   1400264b2:	sbb    DWORD PTR [rdx],eax
   1400264b4:	sbb    al,BYTE PTR [rdx]
	...
   14002652a:	mov    eax,0x1
	...
   140026557:	add    BYTE PTR [rcx+0x2],al
	...
   14002656a:	jno    0x14002656e
   14002656c:	jb     0x140026570
   14002656e:	adc    eax,0x17021602
   140026573:	add    bl,BYTE PTR [rax]
   140026575:	add    bl,BYTE PTR [rdx+rax*1]
   140026578:	sbb    DWORD PTR [rdx],eax
   14002657a:	sbb    al,BYTE PTR [rdx]
	...
   140026620:	and    al,0x0
   140026622:	cmp    al,0x0
   140026624:	add    eax,0x1f002400
   140026629:	add    BYTE PTR [rdi],al
   14002662b:	add    BYTE PTR [rdx+0x0],al
   14002662e:	adc    BYTE PTR [rax],al
   140026630:	and    DWORD PTR [rax],eax
   140026632:	(bad)  
   140026633:	add    BYTE PTR [rax+rax*1],ah
   140026636:	(bad)  
   140026637:	add    BYTE PTR [rdi],al
   140026639:	add    BYTE PTR [rdi],al
   14002663b:	add    BYTE PTR [rdi],al
   14002663d:	add    BYTE PTR [rcx],ah
   14002663f:	add    BYTE PTR [rax+rax*1],ah
   140026642:	(bad)  
   140026643:	add    BYTE PTR [rdi],dh
   140026645:	add    BYTE PTR [rax],cl
   140026647:	add    BYTE PTR [rax+rax*1],ah
   14002664a:	(bad)  
   14002664b:	add    BYTE PTR [rdi],al
   14002664d:	add    BYTE PTR [rax+rax*1],ah
   140026650:	(bad)  
   140026651:	add    BYTE PTR [rdi],dh
   140026653:	add    BYTE PTR [rdi],al
   140026655:	add    BYTE PTR [rdi],al
   140026657:	add    BYTE PTR [rax+rax*1],ah
   14002665a:	and    al,0x0
   14002665c:	adc    DWORD PTR [rax],eax
   14002665e:	(bad)  
   14002665f:	add    BYTE PTR [rcx],ah
   140026661:	add    BYTE PTR [rcx],ah
   140026663:	add    BYTE PTR [rdi],al
   140026665:	add    BYTE PTR [rdi],al
   140026667:	add    BYTE PTR [rdi],al
   140026669:	add    BYTE PTR [rax+rax*1],ah
   14002666c:	(bad)  
   14002666d:	add    BYTE PTR [rax+rax*1],ah
   140026670:	(bad)  
   140026671:	add    BYTE PTR [rdi],al
   140026673:	add    BYTE PTR [rdx],ah
   140026675:	add    BYTE PTR [rax+rax*1],bh
   140026678:	(bad)  
   140026679:	add    BYTE PTR [rax+rax*1],ah
   14002667c:	(bad)  
   14002667d:	add    BYTE PTR [rdx+0x0],al
   140026680:	cmp    al,0x0
   140026682:	and    DWORD PTR [rax],eax
   140026684:	(bad)  
   140026685:	add    BYTE PTR [rcx],ah
   140026687:	add    BYTE PTR [rdi],al
   140026689:	add    BYTE PTR [rbp+0x0],cl
   14002668c:	and    DWORD PTR [rax],eax
   14002668e:	or     BYTE PTR [rax],al
   140026690:	cmp    al,0x0
   140026692:	adc    al,0x0
   140026694:	and    al,0x0
   140026696:	and    DWORD PTR [rax],eax
   140026698:	add    DWORD PTR [rax],eax
   14002669a:	and    al,0x0
   14002669c:	or     BYTE PTR [rax],al
   14002669e:	and    DWORD PTR [rax],eax
   1400266a0:	(bad)  
   1400266a1:	add    BYTE PTR [rcx],ah
   1400266a3:	add    BYTE PTR [rdx],al
   1400266a5:	add    BYTE PTR [rdi],dh
   1400266a7:	add    BYTE PTR [rcx],ah
   1400266a9:	add    BYTE PTR [rcx],ah
   1400266ab:	add    BYTE PTR [rip+0x18000100],bl        # 0x1580267b1
   1400266b1:	add    BYTE PTR [rcx],ah
   1400266b3:	add    BYTE PTR [rax],cl
   1400266b5:	add    BYTE PTR [rcx],al
   1400266b7:	add    bh,bh
   1400266b9:	inc    DWORD PTR [rdx]
   1400266bb:	add    BYTE PTR [rdi],dh
   1400266bd:	add    bh,bh
   1400266bf:	jmp    QWORD PTR [rip+0x24000800]        # 0x164026ec5
   1400266c5:	add    bh,bh
   1400266c7:	(bad)  
   1400266c8:	(bad)  
   1400266c9:	(bad)  
   1400266ca:	(bad)  
   1400266cb:	dec    DWORD PTR [rax]
   1400266cd:	add    BYTE PTR [rax+rax*1],ah
   1400266d0:	and    al,0x0
   1400266d2:	and    DWORD PTR [rax],eax
   1400266d4:	(bad)  
   1400266d5:	add    BYTE PTR [rdx],al
   1400266d7:	add    BYTE PTR [rax],dh
   1400266d9:	add    BYTE PTR [rcx],al
   1400266db:	add    BYTE PTR [rax+rax*1],ah
   1400266de:	(bad)  
   1400266df:	add    BYTE PTR [rax+rax*1],ah
   1400266e2:	and    al,0x0
   1400266e4:	cmp    al,0x0
   1400266e6:	and    al,0x0
   1400266e8:	and    DWORD PTR [rax],eax
   1400266ea:	adc    DWORD PTR [rax],eax
   1400266ec:	cmp    al,0x0
   1400266ee:	or     BYTE PTR [rax],al
   1400266f0:	add    BYTE PTR [rax],al
   1400266f2:	and    al,0x0
   1400266f4:	or     BYTE PTR [rax],al
   1400266f6:	add    al,BYTE PTR [rax]
   1400266f8:	(bad)  
   1400266f9:	(bad)  
   1400266fa:	cmp    al,0x0
   1400266fc:	cmp    al,0x0
   1400266fe:	or     BYTE PTR [rax],al
   140026700:	(bad)  
   140026701:	add    bh,bh
   140026703:	(bad)  
   140026704:	cmp    eax,0x8000700
   140026709:	add    BYTE PTR [rax],cl
   14002670b:	add    BYTE PTR [rcx],ah
   14002670d:	add    BYTE PTR [rax],cl
   14002670f:	add    bh,bh
   140026711:	dec    DWORD PTR [rax]
   140026713:	add    BYTE PTR [rax+rax*1],bh
   140026716:	(bad)  
   140026717:	add    BYTE PTR [rax],dh
   140026719:	add    BYTE PTR [rax+rax*1],bh
   14002671c:	adc    al,0x0
   14002671e:	xor    BYTE PTR [rax],al
   140026720:	or     BYTE PTR [rax],al
   140026722:	and    al,0x0
   140026724:	or     BYTE PTR [rax],al
   140026726:	or     al,BYTE PTR [rax]
   140026728:	or     BYTE PTR [rax],al
   14002672a:	cmp    eax,0x37004f00
   14002672f:	add    bh,bh
   140026731:	(bad)  
   140026732:	(bad)  
   140026733:	push   QWORD PTR [rax]
   140026735:	add    BYTE PTR [rax],cl
   140026737:	add    BYTE PTR [rax],cl
   140026739:	add    BYTE PTR [rax],ch
   14002673b:	add    BYTE PTR [rax],ch
   14002673d:	add    BYTE PTR [rip+0x8000800],bh        # 0x148026f43
   140026743:	add    BYTE PTR [rax+rax*1],bh
   140026746:	add    eax,0x3e003d00
   14002674b:	add    BYTE PTR [rdi+0x0],cl
   14002674e:	cmp    al,0x0
   140026750:	xor    eax,DWORD PTR [rax]
   140026752:	xor    eax,DWORD PTR [rax]
   140026754:	cmp    BYTE PTR [rax],al
   140026756:	sub    BYTE PTR [rax],al
   140026758:	rex.WRXB add BYTE PTR [rip+0x28003e00],r15b        # 0x16802a55f
   14002675f:	add    BYTE PTR [rdi+0x0],cl
   140026762:	cmp    eax,0x3c003e00
   140026767:	add    BYTE PTR [rdx],dh
   140026769:	add    BYTE PTR [rax],cl
   14002676b:	add    BYTE PTR [rbx],dh
   14002676d:	add    BYTE PTR [rax],bh
   14002676f:	add    BYTE PTR [rsi],dh
   140026771:	add    BYTE PTR [rax+rax*1],bh
   140026774:	xor    eax,DWORD PTR [rax]
   140026776:	cmp    eax,0x3c003e00
   14002677b:	add    BYTE PTR [rax],cl
   14002677d:	add    BYTE PTR [rdx],dh
   14002677f:	add    BYTE PTR [rdi],dh
   140026781:	add    BYTE PTR [rip+0x36003e00],bh        # 0x17602a587
   140026787:	add    BYTE PTR [rax+rax*1],bh
   14002678a:	sbb    eax,0x2a003c00
   14002678f:	add    BYTE PTR [rax+rax*1],bh
   140026792:	pop    rbx
   140026793:	add    BYTE PTR [rax+rax*1+0x38],bl
   140026797:	add    BYTE PTR [rax],bh
   140026799:	add    BYTE PTR [rip+0x3d003e00],bh        # 0x17d02a59f
   14002679f:	add    BYTE PTR [rsi],bh
   1400267a1:	add    BYTE PTR [rax],bh
   1400267a3:	add    BYTE PTR [rip+0x3c000f00],dh        # 0x17c0276a9
   1400267a9:	add    BYTE PTR [rax],cl
   1400267ab:	add    BYTE PTR [rdi],al
   1400267ad:	add    BYTE PTR [rip+0x3d003e00],bh        # 0x17d02a5b3
   1400267b3:	add    BYTE PTR [rsi],bh
   1400267b5:	add    BYTE PTR [rip+0x3e003d00],bl        # 0x17e02a4bb
   1400267bb:	add    BYTE PTR [rip+0x8001900],bl        # 0x1480280c1
   1400267c1:	add    BYTE PTR [rbx],bl
   1400267c3:	add    BYTE PTR [rdi],al
   1400267c5:	add    bh,bh
   1400267c7:	dec    DWORD PTR [rdi]
   1400267c9:	add    BYTE PTR [rip+0x8002200],bl        # 0x1480289cf
   1400267cf:	add    BYTE PTR [rax+rax*1],ah
   1400267d2:	sbb    DWORD PTR [rax],eax
   1400267d4:	cmp    eax,0x26001b00
   1400267d9:	add    BYTE PTR [rax+rax*1],cl
   1400267dc:	(bad)  
   1400267dd:	call   FWORD PTR [rcx]
   1400267df:	add    BYTE PTR [rcx],ah
   1400267e1:	add    BYTE PTR [rbx],bl
   1400267e3:	add    BYTE PTR [rax+rax*1],bh
   1400267e6:	rex.WXB add BYTE PTR [r8+r8*1],cl
   1400267ea:	and    al,0x0
   1400267ec:	add    BYTE PTR es:[rdx],ah
   1400267ef:	add    BYTE PTR [rcx+0x0],bl
   1400267f2:	and    al,0x0
   1400267f4:	sbb    eax,0x26000700
   1400267f9:	add    BYTE PTR [rip+0xffffffffff005600],bl        # 0x13f02bdff
   1400267ff:	call   FWORD PTR [rcx]
   140026801:	add    BYTE PTR [rax+rax*1],cl
   140026804:	sbb    eax,DWORD PTR [rax]
   140026806:	sbb    DWORD PTR [rax],eax
   140026808:	sbb    DWORD PTR [rax],eax
   14002680a:	sbb    eax,DWORD PTR [rax]
   14002680c:	sbb    eax,DWORD PTR [rax]
   14002680e:	(bad)  
   14002680f:	add    BYTE PTR [rdi],cl
   140026811:	add    BYTE PTR [rbx+0x0],cl
   140026814:	cmp    eax,0x4b003e00
   140026819:	add    BYTE PTR [rsi],ah
   14002681b:	add    BYTE PTR [rip+0x26003e00],bh        # 0x16602a621
   140026821:	add    BYTE PTR [rsi],ah
   140026823:	add    bh,bh
   140026825:	dec    DWORD PTR [rbx+0x0]
   140026828:	push   rsi
   140026829:	add    BYTE PTR [rip+0x56003e00],bh        # 0x19602a62f
   14002682f:	add    BYTE PTR [rip+0x39003e00],bh        # 0x17902a635
   140026835:	add    BYTE PTR [rdx],ah
   140026837:	add    BYTE PTR [rip+0x56003e00],bh        # 0x19602a63d
   14002683d:	add    bh,bh
   14002683f:	(bad)  
   140026840:	(bad)  
   140026841:	add    BYTE PTR [rcx],bh
   140026843:	add    BYTE PTR [rdi],cl
   140026845:	add    BYTE PTR [rip+0xf003e00],bh        # 0x14f02a64b
   14002684b:	add    bh,bh
   14002684d:	(bad)  
   14002684e:	(bad)  
   14002684f:	add    BYTE PTR [rbx+0x0],cl
   140026852:	adc    al,BYTE PTR [rax]
   140026854:	adc    eax,DWORD PTR [rax]
   140026856:	rex.WXB add r15b,dil
   140026859:	call   FWORD PTR [rsi+0x0]
   14002685c:	cmp    DWORD PTR [rax],eax
   14002685e:	adc    al,BYTE PTR [rax]
   140026860:	adc    eax,DWORD PTR [rax]
   140026862:	cmp    eax,0x56003e00
   140026867:	add    BYTE PTR [rdi],bh
   140026869:	add    BYTE PTR [rdx],ah
   14002686b:	add    BYTE PTR [rsi+0x0],dl
   14002686e:	and    al,0x0
   140026870:	and    al,BYTE PTR [rax]
   140026872:	(bad)  
   140026873:	add    BYTE PTR [rax+rax*1],ah
   140026876:	adc    al,BYTE PTR [rax]
   140026878:	adc    eax,DWORD PTR [rax]
   14002687a:	cmp    eax,0xf003e00
   14002687f:	add    bh,bh
   140026881:	call   QWORD PTR [rdx]
   140026883:	add    BYTE PTR [rbx],dl
   140026885:	add    BYTE PTR [rbp+0x0],bl
   140026888:	sub    eax,0xf002e00
   14002688d:	add    BYTE PTR [rip+0xffffffffff003e00],bh        # 0x13f02a693
   140026893:	jmp    FWORD PTR [rip+0xffffffffff002e00]        # 0x13f029699
   140026899:	(bad)  
   14002689a:	(bad)  
   14002689b:	(bad)  
   14002689c:	(bad)  
   14002689d:	(bad)  
   14002689e:	(bad)  
   14002689f:	(bad)  
   1400268a0:	(bad)  
   1400268a1:	jmp    QWORD PTR [rcx]
   1400268a3:	add    BYTE PTR [rdx],ah
   1400268a5:	add    bh,bh
   1400268a7:	jmp    QWORD PTR [rax+rax*1]
   1400268aa:	(bad)  
   1400268ab:	jmp    FWORD PTR [rip+0x21002e00]        # 0x1610296b1
   1400268b1:	add    BYTE PTR [rdx],ah
   1400268b3:	add    bh,bh
   1400268b5:	jmp    QWORD PTR [rax+rax*1]
   1400268b8:	sub    eax,0xff002e00
   1400268bd:	call   QWORD PTR [rdi]
   1400268bf:	add    BYTE PTR [rax],bl
   1400268c1:	add    bh,bh
   1400268c3:	(bad)  
   1400268c4:	(bad)  
   1400268c5:	call   FWORD PTR [rcx]
   1400268c7:	add    bh,bh
   1400268c9:	call   FWORD PTR [rbx]
   1400268cb:	add    bh,bh
   1400268cd:	call   FWORD PTR [rbp+0x0]
   1400268d0:	and    BYTE PTR [rax],al
   1400268d2:	(bad)  
   1400268d3:	add    BYTE PTR [rax],bl
   1400268d5:	add    BYTE PTR [rbx],ah
   1400268d7:	add    BYTE PTR [rip+0xffffffffff002500],bl        # 0x13f028ddd
   1400268dd:	(bad)  
   1400268de:	(bad)  
   1400268df:	jmp    QWORD PTR [rsi]
   1400268e1:	add    BYTE PTR [rdi],bl
   1400268e3:	add    BYTE PTR [rax],ah
   1400268e5:	add    bh,bh
   1400268e7:	(bad)  
   1400268e8:	(bad)  
   1400268e9:	jmp    QWORD PTR [rbx]
   1400268eb:	add    BYTE PTR [rip+0x17002500],bl        # 0x157028df1
   1400268f1:	add    BYTE PTR [rax],bl
   1400268f3:	add    BYTE PTR [rdx+0x0],ah
   1400268f6:	movsxd eax,DWORD PTR [rax]
   1400268f8:	add    BYTE PTR fs:[rbp+0x0],ah
   1400268fc:	data16 add BYTE PTR [rdi+0x0],ah
   140026900:	(bad)  
   140026901:	add    BYTE PTR [rax],ah
   140026903:	add    BYTE PTR [rdi],dl
   140026905:	add    BYTE PTR [rax],bl
   140026907:	add    BYTE PTR [rbx],ah
   140026909:	add    BYTE PTR [rip+0xffffffffff002500],bl        # 0x13f028e0f
   14002690f:	(bad)  
   140026910:	(bad)  
   140026911:	(bad)  
   140026912:	(bad)  
   140026913:	call   FWORD PTR [rdi]
   140026915:	add    BYTE PTR [rax],ah
   140026917:	add    BYTE PTR [rdi],dl
   140026919:	add    BYTE PTR [rax],bl
   14002691b:	add    BYTE PTR [rbx],ah
   14002691d:	add    bh,bh
   14002691f:	jmp    QWORD PTR [rip+0x43004200]        # 0x18302ab25
   140026925:	add    BYTE PTR [rax+rax*1+0x1f],al
   140026929:	add    BYTE PTR [rax],ah
   14002692b:	add    BYTE PTR [rdi],dl
   14002692d:	add    BYTE PTR [rax],bl
   14002692f:	add    BYTE PTR [rbx],ah
   140026931:	add    bh,bh
   140026933:	jmp    QWORD PTR [rip+0x43004200]        # 0x18302ab39
   140026939:	add    BYTE PTR [rax+rax*1+0x1f],al
   14002693d:	add    BYTE PTR [rax],ah
   14002693f:	add    bh,bh
   140026941:	(bad)  
   140026942:	(bad)  
   140026943:	jmp    QWORD PTR [rbx]
   140026945:	add    bh,bh
   140026947:	jmp    QWORD PTR [rip+0xffffffffff001d00]        # 0x13f02864d
   14002694d:	(bad)  
   14002694e:	(bad)  
   14002694f:	call   FWORD PTR [rip+0x42ffff00]        # 0x183026855
   140026955:	add    BYTE PTR [rbx+0x0],al
   140026958:	add    BYTE PTR [rsi+0x0],r11b
   14002695c:	pop    rdi
   14002695d:	add    BYTE PTR [rax+0x0],ah
   140026960:	sbb    eax,0xffffff00
   140026965:	call   FWORD PTR [rip+0x18001700]        # 0x15802806b
   14002696b:	add    BYTE PTR [rip+0x5f005e00],bl        # 0x19f02c771
   140026971:	add    BYTE PTR [rax+0x0],ah
   140026974:	(bad)  
   140026975:	(bad)  
   140026976:	(bad)  
   140026977:	call   FWORD PTR [rip+0xffffffffff002000]        # 0x13f02897d
   14002697d:	(bad)  
   14002697e:	(bad)  
   14002697f:	jmp    QWORD PTR [rbx]
   140026981:	add    bh,bh
   140026983:	jmp    QWORD PTR [rip+0xffffffffff002400]        # 0x13f028d89
   140026989:	(bad)  
   14002698a:	(bad)  
   14002698b:	call   FWORD PTR [rsi+0x0]
   14002698e:	pop    rdi
   14002698f:	add    BYTE PTR [rax+0x0],ah
   140026992:	sbb    eax,0x43004200
   140026997:	add    BYTE PTR [rax+rax*1+0x42],al
   14002699b:	add    BYTE PTR [rbx+0x0],al
   14002699e:	add    BYTE PTR [rax+rax*1],r12b
   1400269a2:	(bad)  
   1400269a3:	(bad)  
   1400269a4:	(bad)  
   1400269a5:	(bad)  
   1400269a6:	(bad)  
   1400269a7:	(bad)  
   1400269a8:	(bad)  
   1400269a9:	inc    DWORD PTR [rdx+0x0]
   1400269ac:	add    BYTE PTR [r8+r8*1+0x42],al
   1400269b1:	add    BYTE PTR [rbx+0x0],al
   1400269b4:	add    BYTE PTR [rdx+0x0],r8b
   1400269b8:	add    BYTE PTR [r8+r8*1+0x1d],al
   1400269bd:	add    bh,bh
   1400269bf:	(bad)  
   1400269c0:	(bad)  
   1400269c1:	inc    DWORD PTR [rdx+0x0]
   1400269c4:	add    BYTE PTR [r8+r8*1-0x1],al
   1400269c9:	jmp    QWORD PTR [rax+rax*1]
   1400269cc:	pop    rsi
   1400269cd:	add    BYTE PTR [rdi+0x0],bl
   1400269d0:	(bad)  
   1400269d1:	add    BYTE PTR [rsi+0x0],bl
   1400269d4:	pop    rdi
   1400269d5:	add    BYTE PTR [rax+0x0],ah
   1400269d8:	(bad)  
   1400269d9:	(bad)  
   1400269da:	(bad)  
   1400269db:	inc    DWORD PTR [rdx+0x0]
   1400269de:	add    BYTE PTR [r8+r8*1+0x5e],al
   1400269e3:	add    BYTE PTR [rdi+0x0],bl
   1400269e6:	(bad)  
   1400269e7:	add    BYTE PTR [rsi+0x0],bl
   1400269ea:	pop    rdi
   1400269eb:	add    BYTE PTR [rax+0x0],ah
   1400269ee:	pop    rsi
   1400269ef:	add    BYTE PTR [rdi+0x0],bl
   1400269f2:	(bad)  
   1400269f3:	add    bh,bh
   1400269f5:	(bad)  
   1400269f6:	(bad)  
   1400269f7:	(bad)  
   1400269f8:	(bad)  
   1400269f9:	call   FWORD PTR [rsi+0x0]
   1400269fc:	pop    rdi
   1400269fd:	add    BYTE PTR [rax+0x0],ah
   140026a00:	(bad)  
   140026a01:	(bad)  
   140026a02:	(bad)  
   140026a03:	call   FWORD PTR [rip+0x43004200]        # 0x18302ac09
   140026a09:	add    BYTE PTR [rax+rax*1-0x1],al
   140026a0d:	call   FWORD PTR [rip+0xffffffffffffff00]        # 0x140026913
   140026a13:	call   FWORD PTR [rsi+0x0]
   140026a16:	pop    rdi
   140026a17:	add    BYTE PTR [rax+0x0],ah
   140026a1a:	(bad)  
   140026a1b:	(bad)  
   140026a1c:	(bad)  
   140026a1d:	call   FWORD PTR [rip+0xffffffffffffff00]        # 0x140026923
   140026a23:	(bad)  
   140026a24:	(bad)  
   140026a25:	(bad)  
   140026a26:	(bad)  
   140026a27:	(bad)  
   140026a28:	(bad)  
   140026a29:	(bad)  
   140026a2a:	(bad)  
   140026a2b:	(bad)  
   140026a2c:	(bad)  
   140026a2d:	call   FWORD PTR [rip+0xffffffffffffff00]        # 0x140026933
   140026a33:	(bad)  
   140026a34:	(bad)  
   140026a35:	(bad)  
   140026a36:	(bad)  
   140026a37:	(bad)  
   140026a38:	(bad)  
   140026a39:	(bad)  
   140026a3a:	(bad)  
   140026a3b:	(bad)  
   140026a3c:	(bad)  
   140026a3d:	call   FWORD PTR [rsi+0x0]
   140026a40:	pop    rdi
   140026a41:	add    BYTE PTR [rax+0x0],ah
   140026a44:	cmp    eax,0xff003e00
   140026a49:	(bad)  
   140026a4a:	(bad)  
   140026a4b:	(bad)  
   140026a4c:	(bad)  
   140026a4d:	inc    DWORD PTR [rdx+0x0]
   140026a50:	add    BYTE PTR [r8+r8*1-0x1],al
   140026a55:	(bad)  
   140026a56:	(bad)  
   140026a57:	inc    DWORD PTR [rdx+0x0]
   140026a5a:	add    BYTE PTR [r8+r8*1+0x3d],al
   140026a5f:	add    BYTE PTR [rsi],bh
   140026a61:	add    bh,bh
   140026a63:	(bad)  
   140026a64:	(bad)  
   140026a65:	(bad)  
   140026a66:	(bad)  
   140026a67:	inc    DWORD PTR [rdx+0x0]
   140026a6a:	add    BYTE PTR [r8+r8*1+0x3d],al
   140026a6f:	add    BYTE PTR [rsi],bh
   140026a71:	add    bh,bh
   140026a73:	(bad)  
   140026a74:	(bad)  
   140026a75:	(bad)  
   140026a76:	(bad)  
   140026a77:	inc    DWORD PTR [rdx+0x0]
   140026a7a:	add    BYTE PTR [r8+r8*1-0x1],al
   140026a7f:	(bad)  
   140026a80:	(bad)  
   140026a81:	(bad)  
   140026a82:	(bad)  
   140026a83:	(bad)  
   140026a84:	(bad)  
   140026a85:	call   FWORD PTR [rsi+0x0]
   140026a88:	pop    rdi
   140026a89:	add    BYTE PTR [rax+0x0],ah
   140026a8c:	(bad)  
   140026a8d:	(bad)  
   140026a8e:	(bad)  
   140026a8f:	call   FWORD PTR [rsi+0x0]
   140026a92:	pop    rdi
   140026a93:	add    BYTE PTR [rax+0x0],ah
   140026a96:	(bad)  
   140026a97:	(bad)  
   140026a98:	(bad)  
   140026a99:	(bad)  
   140026a9a:	(bad)  
   140026a9b:	(bad)  
   140026a9c:	(bad)  
   140026a9d:	(bad)  
   140026a9e:	(bad)  
   140026a9f:	call   FWORD PTR [rsi+0x0]
   140026aa2:	pop    rdi
   140026aa3:	add    BYTE PTR [rax+0x0],ah
   140026aa6:	(bad)  
   140026aa7:	call   FWORD PTR [rip+0xffffffffffffff00]        # 0x1400269ad
   140026aad:	(bad)  
   140026aae:	(bad)  
   140026aaf:	call   FWORD PTR [rsi+0x0]
   140026ab2:	pop    rdi
   140026ab3:	add    BYTE PTR [rax+0x0],ah
   140026ab6:	(bad)  
   140026ab7:	(bad)  
   140026ab8:	(bad)  
   140026ab9:	(bad)  
   140026aba:	(bad)  
   140026abb:	(bad)  
   140026abc:	(bad)  
   140026abd:	(bad)  
   140026abe:	(bad)  
   140026abf:	(bad)  
   140026ac0:	(bad)  
   140026ac1:	(bad)  
   140026ac2:	(bad)  
   140026ac3:	(bad)  
   140026ac4:	(bad)  
   140026ac5:	(bad)  
   140026ac6:	(bad)  
   140026ac7:	(bad)  
   140026ac8:	(bad)  
   140026ac9:	(bad)  
   140026aca:	(bad)  
   140026acb:	(bad)  
   140026acc:	(bad)  
   140026acd:	(bad)  
   140026ace:	(bad)  
   140026acf:	(bad)  
   140026ad0:	(bad)  
   140026ad1:	(bad)  
   140026ad2:	(bad)  
   140026ad3:	(bad)  
   140026ad4:	(bad)  
   140026ad5:	(bad)  
   140026ad6:	(bad)  
   140026ad7:	(bad)  
   140026ad8:	(bad)  
   140026ad9:	(bad)  
   140026ada:	(bad)  
   140026adb:	(bad)  
   140026adc:	(bad)  
   140026add:	(bad)  
   140026ade:	(bad)  
   140026adf:	(bad)  
   140026ae0:	(bad)  
   140026ae1:	(bad)  
   140026ae2:	(bad)  
   140026ae3:	(bad)  
   140026ae4:	(bad)  
   140026ae5:	(bad)  
   140026ae6:	(bad)  
   140026ae7:	(bad)  
   140026ae8:	cmp    eax,0x3003e00
   140026aed:	add    bh,bh
   140026aef:	(bad)  
   140026af0:	(bad)  
   140026af1:	inc    DWORD PTR [rdx+0x0]
   140026af4:	add    BYTE PTR [r8+r8*1-0x1],al
   140026af9:	(bad)  
   140026afa:	(bad)  
   140026afb:	(bad)  
   140026afc:	(bad)  
   140026afd:	(bad)  
   140026afe:	(bad)  
   140026aff:	dec    DWORD PTR [rip+0xffffffffffffff00]        # 0x140026a05
   140026b05:	(bad)  
   140026b06:	(bad)  
   140026b07:	call   QWORD PTR [rcx]
   140026b09:	add    bh,bh
   140026b0b:	(bad)  
   140026b0c:	(bad)  
   140026b0d:	(bad)  
   140026b0e:	(bad)  
   140026b0f:	(bad)  
   140026b10:	(bad)  
   140026b11:	(bad)  
   140026b12:	(bad)  
   140026b13:	(bad)  
   140026b14:	(bad)  
   140026b15:	(bad)  
   140026b16:	(bad)  
   140026b17:	(bad)  
   140026b18:	(bad)  
   140026b19:	call   FWORD PTR [rdx]
   140026b1b:	add    bh,bh
   140026b1d:	call   FWORD PTR [rax+rax*1]
   140026b20:	(bad)  
   140026b21:	(bad)  
   140026b22:	(bad)  
   140026b23:	call   FWORD PTR [rdi]
   140026b25:	add    bh,bh
   140026b27:	(bad)  
   140026b28:	(bad)  
   140026b29:	call   FWORD PTR [rsi+0x0]
   140026b2c:	pop    rdi
   140026b2d:	add    BYTE PTR [rax+0x0],ah
   140026b30:	(bad)  
   140026b31:	(bad)  
   140026b32:	(bad)  
   140026b33:	jmp    QWORD PTR [rdi]
   140026b35:	add    bh,bh
   140026b37:	jmp    FWORD PTR [rcx]
   140026b39:	add    BYTE PTR [rdx],ch
   140026b3b:	add    bh,bh
   140026b3d:	dec    DWORD PTR [rax+rax*1]
   140026b40:	or     eax,0xff000300
   140026b45:	(bad)  
   140026b46:	(bad)  
   140026b47:	push   QWORD PTR [rcx]
   140026b49:	add    bh,bh
   140026b4b:	(bad)  
   140026b4c:	(bad)  
   140026b4d:	push   QWORD PTR [rax+rax*1]
   140026b50:	xor    eax,0xff001600
   140026b55:	dec    DWORD PTR [rip+0x3affff00]        # 0x17b026a5b
   140026b5b:	add    bh,bh
   140026b5d:	call   QWORD PTR [rcx]
   140026b5f:	add    BYTE PTR [rip+0xffffffffffffff00],bl        # 0x140026a65
   140026b65:	inc    DWORD PTR [rax+0x0]
   140026b68:	and    DWORD PTR [rax],eax
   140026b6a:	and    al,BYTE PTR [rax]
   140026b6c:	(bad)  
   140026b6d:	jmp    QWORD PTR [rax+rax*1]
   140026b70:	sbb    al,BYTE PTR [rax]
   140026b72:	(bad)  
   140026b73:	call   FWORD PTR [rax+rax*1]
   140026b76:	(bad)  
   140026b77:	(bad)  
   140026b78:	(bad)  
   140026b79:	(bad)  
   140026b7a:	(bad)  
   140026b7b:	jmp    FWORD PTR [rbx]
   140026b7d:	add    bh,bh
   140026b7f:	(bad)  
   140026b80:	(bad)  
   140026b81:	(bad)  
   140026b82:	(bad)  
   140026b83:	jmp    FWORD PTR [rdi]
   140026b85:	add    BYTE PTR [rax+0x0],dl
   140026b88:	(bad)  
   140026b89:	jmp    QWORD PTR [rdi]
   140026b8b:	add    bh,bh
   140026b8d:	jmp    FWORD PTR [rcx]
   140026b8f:	add    BYTE PTR [rdx],ch
   140026b91:	add    bh,bh
   140026b93:	(bad)  
   140026b94:	(bad)  
   140026b95:	(bad)  
   140026b96:	(bad)  
   140026b97:	(bad)  
   140026b98:	(bad)  
   140026b99:	(bad)  
   140026b9a:	(bad)  
   140026b9b:	(bad)  
   140026b9c:	(bad)  
   140026b9d:	push   QWORD PTR [rcx]
   140026b9f:	add    bh,bh
   140026ba1:	(bad)  
   140026ba2:	(bad)  
   140026ba3:	push   QWORD PTR [rax+rax*1]
   140026ba6:	xor    eax,0x42004100
   140026bab:	add    BYTE PTR [rbx+0x0],al
   140026bae:	add    BYTE PTR [rdx],r15b
   140026bb1:	add    BYTE PTR [rsi+0x0],al
   140026bb4:	(bad)  
   140026bb5:	(bad)  
   140026bb6:	(bad)  
   140026bb7:	(bad)  
   140026bb8:	(bad)  
   140026bb9:	(bad)  
   140026bba:	(bad)  
   140026bbb:	inc    DWORD PTR [rax+0x0]
   140026bbe:	(bad)  
   140026bbf:	(bad)  
   140026bc0:	(bad)  
   140026bc1:	(bad)  
   140026bc2:	(bad)  
   140026bc3:	(bad)  
   140026bc4:	(bad)  
   140026bc5:	(bad)  
   140026bc6:	(bad)  
   140026bc7:	call   QWORD PTR [rcx+0x0]
   140026bca:	push   rdx
   140026bcb:	add    BYTE PTR [rbx+0x0],dl
   140026bce:	(bad)  
   140026bcf:	(bad)  
   140026bd0:	(bad)  
   140026bd1:	(bad)  
   140026bd2:	(bad)  
   140026bd3:	call   QWORD PTR [rdi+0x0]
   140026bd6:	(bad)  
   140026bd7:	(bad)  
   140026bd8:	(bad)  
   140026bd9:	(bad)  
   140026bda:	(bad)  
   140026bdb:	call   QWORD PTR [rax+0x0]
   140026bde:	(bad)  
   140026bdf:	(bad)  
   140026be0:	(bad)  
   140026be1:	call   FWORD PTR [rsi+0x0]
   140026be4:	pop    rdi
   140026be5:	add    BYTE PTR [rax+0x0],ah
   140026be8:	(bad)  
   140026be9:	(bad)  
   140026bea:	(bad)  
   140026beb:	(bad)  
   140026bec:	(bad)  
   140026bed:	(bad)  
   140026bee:	(bad)  
   140026bef:	(bad)  
   140026bf0:	(bad)  
   140026bf1:	(bad)  
   140026bf2:	(bad)  
   140026bf3:	(bad)  
   140026bf4:	(bad)  
   140026bf5:	(bad)  
   140026bf6:	(bad)  
   140026bf7:	(bad)  
   140026bf8:	(bad)  
   140026bf9:	(bad)  
   140026bfa:	(bad)  
   140026bfb:	(bad)  
   140026bfc:	(bad)  
   140026bfd:	(bad)  
   140026bfe:	(bad)  
   140026bff:	(bad)  
   140026c00:	(bad)  
   140026c01:	(bad)  
   140026c02:	(bad)  
   140026c03:	(bad)  
   140026c04:	(bad)  
   140026c05:	(bad)  
   140026c06:	(bad)  
   140026c07:	(bad)  
   140026c08:	(bad)  
   140026c09:	(bad)  
   140026c0a:	(bad)  
   140026c0b:	(bad)  
   140026c0c:	(bad)  
   140026c0d:	(bad)  
   140026c0e:	(bad)  
   140026c0f:	dec    DWORD PTR [rax+rax*1]
   140026c12:	or     eax,0xffffff00
   140026c17:	(bad)  
   140026c18:	(bad)  
   140026c19:	(bad)  
   140026c1a:	(bad)  
   140026c1b:	(bad)  
   140026c1c:	(bad)  
   140026c1d:	(bad)  
   140026c1e:	(bad)  
   140026c1f:	(bad)  
   140026c20:	(bad)  
   140026c21:	(bad)  
   140026c22:	(bad)  
   140026c23:	call   QWORD PTR [rsi]
   140026c25:	add    bh,bh
   140026c27:	(bad)  
   140026c28:	(bad)  
   140026c29:	(bad)  
   140026c2a:	(bad)  
   140026c2b:	(bad)  
   140026c2c:	(bad)  
   140026c2d:	(bad)  
   140026c2e:	(bad)  
   140026c2f:	(bad)  
   140026c30:	(bad)  
   140026c31:	call   FWORD PTR [rip+0xffffffffffffff00]        # 0x140026b37
   140026c37:	(bad)  
   140026c38:	(bad)  
   140026c39:	jmp    QWORD PTR [rcx]
   140026c3b:	add    BYTE PTR [rdx],ah
   140026c3d:	add    bh,bh
   140026c3f:	jmp    QWORD PTR [rax+rax*1]
   140026c42:	(bad)  
   140026c43:	(bad)  
   140026c44:	(bad)  
   140026c45:	(bad)  
   140026c46:	(bad)  
   140026c47:	(bad)  
   140026c48:	(bad)  
   140026c49:	(bad)  
   140026c4a:	(bad)  
   140026c4b:	(bad)  
   140026c4c:	(bad)  
   140026c4d:	jmp    FWORD PTR [rbx]
   140026c4f:	add    bh,bh
   140026c51:	(bad)  
   140026c52:	(bad)  
   140026c53:	(bad)  
   140026c54:	(bad)  
   140026c55:	jmp    FWORD PTR [rdi]
   140026c57:	add    bh,bh
   140026c59:	(bad)  
   140026c5a:	(bad)  
   140026c5b:	(bad)  
   140026c5c:	(bad)  
   140026c5d:	(bad)  
   140026c5e:	(bad)  
   140026c5f:	(bad)  
   140026c60:	(bad)  
   140026c61:	(bad)  
   140026c62:	(bad)  
   140026c63:	(bad)  
   140026c64:	(bad)  
   140026c65:	(bad)  
   140026c66:	(bad)  
   140026c67:	(bad)  
   140026c68:	(bad)  
   140026c69:	(bad)  
   140026c6a:	(bad)  
   140026c6b:	(bad)  
   140026c6c:	(bad)  
   140026c6d:	(bad)  
   140026c6e:	(bad)  
   140026c6f:	(bad)  
   140026c70:	(bad)  
   140026c71:	(bad)  
   140026c72:	(bad)  
   140026c73:	(bad)  
   140026c74:	(bad)  
   140026c75:	(bad)  
   140026c76:	(bad)  
   140026c77:	(bad)  
   140026c78:	(bad)  
   140026c79:	inc    DWORD PTR [rcx+0x0]
   140026c7c:	rex.X add BYTE PTR [rbx+0x0],al
   140026c80:	add    dil,r15b
   140026c83:	inc    DWORD PTR [rsi+0x0]
   140026c86:	(bad)  
   140026c87:	(bad)  
   140026c88:	(bad)  
   140026c89:	(bad)  
   140026c8a:	(bad)  
   140026c8b:	(bad)  
   140026c8c:	(bad)  
   140026c8d:	(bad)  
   140026c8e:	(bad)  
   140026c8f:	(bad)  
   140026c90:	(bad)  
   140026c91:	(bad)  
   140026c92:	(bad)  
   140026c93:	(bad)  
   140026c94:	(bad)  
   140026c95:	(bad)  
   140026c96:	(bad)  
   140026c97:	(bad)  
   140026c98:	(bad)  
   140026c99:	call   QWORD PTR [rcx+0x0]
   140026c9c:	push   rdx
   140026c9d:	add    BYTE PTR [rbx+0x0],dl
   140026ca0:	(bad)  
   140026ca1:	(bad)  
   140026ca2:	(bad)  
   140026ca3:	(bad)  
   140026ca4:	(bad)  
   140026ca5:	call   QWORD PTR [rdi+0x0]
   140026ca8:	(bad)  
   140026ca9:	(bad)  
   140026caa:	(bad)  
   140026cab:	(bad)  
   140026cac:	(bad)  
   140026cad:	(bad)  
   140026cae:	(bad)  
   140026caf:	(bad)  
   140026cb0:	(bad)  
   140026cb1:	(bad)  
   140026cb2:	(bad)  
   140026cb3:	call   FWORD PTR [rsi+0x0]
   140026cb6:	pop    rdi
   140026cb7:	add    BYTE PTR [rax+0x0],ah
   140026cba:	(bad)  
   140026cbb:	(bad)  
   140026cbc:	(bad)  
   140026cbd:	(bad)  
   140026cbe:	(bad)  
   140026cbf:	(bad)  
   140026cc0:	(bad)  
   140026cc1:	(bad)  
   140026cc2:	(bad)  
   140026cc3:	(bad)  
   140026cc4:	(bad)  
   140026cc5:	(bad)  
   140026cc6:	(bad)  
   140026cc7:	(bad)  
   140026cc8:	(bad)  
   140026cc9:	(bad)  
   140026cca:	(bad)  
   140026ccb:	dec    DWORD PTR [rax+rax*1]
   140026cce:	or     eax,0xffffff00
   140026cd3:	(bad)  
   140026cd4:	(bad)  
   140026cd5:	(bad)  
   140026cd6:	(bad)  
   140026cd7:	(bad)  
   140026cd8:	(bad)  
   140026cd9:	(bad)  
   140026cda:	(bad)  
   140026cdb:	(bad)  
   140026cdc:	(bad)  
   140026cdd:	(bad)  
   140026cde:	(bad)  
   140026cdf:	call   QWORD PTR [rsi]
   140026ce1:	add    bh,bh
   140026ce3:	(bad)  
   140026ce4:	(bad)  
   140026ce5:	(bad)  
   140026ce6:	(bad)  
   140026ce7:	(bad)  
   140026ce8:	(bad)  
   140026ce9:	(bad)  
   140026cea:	(bad)  
   140026ceb:	(bad)  
   140026cec:	(bad)  
   140026ced:	call   FWORD PTR [rip+0xffffffffffffff00]        # 0x140026bf3
   140026cf3:	(bad)  
   140026cf4:	(bad)  
   140026cf5:	jmp    QWORD PTR [rcx]
   140026cf7:	add    BYTE PTR [rdx],ah
   140026cf9:	add    bh,bh
   140026cfb:	jmp    QWORD PTR [rax+rax*1]
   140026cfe:	(bad)  
   140026cff:	(bad)  
   140026d00:	(bad)  
   140026d01:	(bad)  
   140026d02:	(bad)  
   140026d03:	(bad)  
   140026d04:	(bad)  
   140026d05:	(bad)  
   140026d06:	(bad)  
   140026d07:	(bad)  
   140026d08:	(bad)  
   140026d09:	jmp    FWORD PTR [rbx]
   140026d0b:	add    bh,bh
   140026d0d:	(bad)  
   140026d0e:	(bad)  
   140026d0f:	(bad)  
   140026d10:	(bad)  
   140026d11:	jmp    FWORD PTR [rdi]
   140026d13:	add    bh,bh
   140026d15:	(bad)  
   140026d16:	(bad)  
   140026d17:	(bad)  
   140026d18:	(bad)  
   140026d19:	(bad)  
   140026d1a:	(bad)  
   140026d1b:	(bad)  
   140026d1c:	(bad)  
   140026d1d:	(bad)  
   140026d1e:	(bad)  
   140026d1f:	(bad)  
   140026d20:	(bad)  
   140026d21:	(bad)  
   140026d22:	(bad)  
   140026d23:	(bad)  
   140026d24:	(bad)  
   140026d25:	(bad)  
   140026d26:	(bad)  
   140026d27:	(bad)  
   140026d28:	(bad)  
   140026d29:	(bad)  
   140026d2a:	(bad)  
   140026d2b:	(bad)  
   140026d2c:	(bad)  
   140026d2d:	(bad)  
   140026d2e:	(bad)  
   140026d2f:	(bad)  
   140026d30:	(bad)  
   140026d31:	(bad)  
   140026d32:	(bad)  
   140026d33:	(bad)  
   140026d34:	(bad)  
   140026d35:	inc    DWORD PTR [rcx+0x0]
   140026d38:	rex.X add BYTE PTR [rbx+0x0],al
   140026d3c:	add    dil,r15b
   140026d3f:	inc    DWORD PTR [rsi+0x0]
   140026d42:	(bad)  
   140026d43:	(bad)  
   140026d44:	(bad)  
   140026d45:	(bad)  
   140026d46:	(bad)  
   140026d47:	(bad)  
   140026d48:	(bad)  
   140026d49:	(bad)  
   140026d4a:	(bad)  
   140026d4b:	(bad)  
   140026d4c:	(bad)  
   140026d4d:	(bad)  
   140026d4e:	(bad)  
   140026d4f:	(bad)  
   140026d50:	(bad)  
   140026d51:	(bad)  
   140026d52:	(bad)  
   140026d53:	(bad)  
   140026d54:	(bad)  
   140026d55:	call   QWORD PTR [rcx+0x0]
   140026d58:	push   rdx
   140026d59:	add    BYTE PTR [rbx+0x0],dl
   140026d5c:	(bad)  
   140026d5d:	(bad)  
   140026d5e:	(bad)  
   140026d5f:	(bad)  
   140026d60:	(bad)  
   140026d61:	call   QWORD PTR [rdi+0x0]
   140026d64:	(bad)  
   140026d65:	(bad)  
   140026d66:	(bad)  
   140026d67:	(bad)  
   140026d68:	(bad)  
   140026d69:	(bad)  
   140026d6a:	(bad)  
   140026d6b:	(bad)  
   140026d6c:	(bad)  
   140026d6d:	(bad)  
   140026d6e:	(bad)  
   140026d6f:	call   FWORD PTR [rsi+0x0]
   140026d72:	pop    rdi
   140026d73:	add    BYTE PTR [rax+0x0],ah
   140026d76:	(bad)  
   140026d77:	(bad)  
   140026d78:	(bad)  
   140026d79:	(bad)  
   140026d7a:	(bad)  
   140026d7b:	(bad)  
   140026d7c:	(bad)  
   140026d7d:	(bad)  
   140026d7e:	(bad)  
   140026d7f:	(bad)  
   140026d80:	(bad)  
   140026d81:	(bad)  
   140026d82:	(bad)  
   140026d83:	(bad)  
   140026d84:	(bad)  
   140026d85:	(bad)  
   140026d86:	(bad)  
   140026d87:	dec    DWORD PTR [rdx]
   140026d89:	add    bh,bh
   140026d8b:	dec    DWORD PTR [rax+rax*1]
   140026d8e:	or     eax,0xffffff00
   140026d93:	(bad)  
   140026d94:	(bad)  
   140026d95:	(bad)  
   140026d96:	(bad)  
   140026d97:	(bad)  
   140026d98:	(bad)  
   140026d99:	(bad)  
   140026d9a:	(bad)  
   140026d9b:	(bad)  
   140026d9c:	(bad)  
   140026d9d:	(bad)  
   140026d9e:	(bad)  
   140026d9f:	call   QWORD PTR [rsi]
   140026da1:	add    bh,bh
   140026da3:	(bad)  
   140026da4:	(bad)  
   140026da5:	(bad)  
   140026da6:	(bad)  
   140026da7:	(bad)  
   140026da8:	(bad)  
   140026da9:	(bad)  
   140026daa:	(bad)  
   140026dab:	(bad)  
   140026dac:	(bad)  
   140026dad:	call   FWORD PTR [rip+0xffffffffffffff00]        # 0x140026cb3
   140026db3:	(bad)  
   140026db4:	(bad)  
   140026db5:	jmp    QWORD PTR [rcx]
   140026db7:	add    BYTE PTR [rdx],ah
   140026db9:	add    bh,bh
   140026dbb:	jmp    QWORD PTR [rax+rax*1]
   140026dbe:	(bad)  
   140026dbf:	(bad)  
   140026dc0:	(bad)  
   140026dc1:	(bad)  
   140026dc2:	(bad)  
   140026dc3:	(bad)  
   140026dc4:	(bad)  
   140026dc5:	(bad)  
   140026dc6:	(bad)  
   140026dc7:	(bad)  
   140026dc8:	(bad)  
   140026dc9:	jmp    FWORD PTR [rbx]
   140026dcb:	add    bh,bh
   140026dcd:	(bad)  
   140026dce:	(bad)  
   140026dcf:	(bad)  
   140026dd0:	(bad)  
   140026dd1:	jmp    FWORD PTR [rdi]
   140026dd3:	add    bh,bh
   140026dd5:	(bad)  
   140026dd6:	(bad)  
   140026dd7:	(bad)  
   140026dd8:	(bad)  
   140026dd9:	(bad)  
   140026dda:	(bad)  
   140026ddb:	(bad)  
   140026ddc:	(bad)  
   140026ddd:	(bad)  
   140026dde:	(bad)  
   140026ddf:	(bad)  
   140026de0:	(bad)  
   140026de1:	(bad)  
   140026de2:	(bad)  
   140026de3:	(bad)  
   140026de4:	(bad)  
   140026de5:	(bad)  
   140026de6:	(bad)  
   140026de7:	(bad)  
   140026de8:	(bad)  
   140026de9:	(bad)  
   140026dea:	(bad)  
   140026deb:	(bad)  
   140026dec:	(bad)  
   140026ded:	(bad)  
   140026dee:	(bad)  
   140026def:	(bad)  
   140026df0:	(bad)  
   140026df1:	(bad)  
   140026df2:	(bad)  
   140026df3:	(bad)  
   140026df4:	(bad)  
   140026df5:	inc    DWORD PTR [rcx+0x0]
   140026df8:	rex.X add BYTE PTR [rbx+0x0],al
   140026dfc:	add    dil,r15b
   140026dff:	inc    DWORD PTR [rsi+0x0]
   140026e02:	(bad)  
   140026e03:	(bad)  
   140026e04:	(bad)  
   140026e05:	(bad)  
   140026e06:	(bad)  
   140026e07:	(bad)  
   140026e08:	(bad)  
   140026e09:	dec    DWORD PTR [rbx+0x0]
   140026e0c:	(bad)  
   140026e0d:	(bad)  
   140026e0e:	(bad)  
   140026e0f:	(bad)  
   140026e10:	(bad)  
   140026e11:	(bad)  
   140026e12:	(bad)  
   140026e13:	(bad)  
   140026e14:	(bad)  
   140026e15:	call   QWORD PTR [rcx+0x0]
   140026e18:	push   rdx
   140026e19:	add    BYTE PTR [rbx+0x0],dl
   140026e1c:	push   rsp
   140026e1d:	add    bh,bh
   140026e1f:	(bad)  
   140026e20:	(bad)  
   140026e21:	call   QWORD PTR [rdi+0x0]
   140026e24:	(bad)  
   140026e25:	(bad)  
   140026e26:	(bad)  
   140026e27:	(bad)  
   140026e28:	(bad)  
   140026e29:	(bad)  
   140026e2a:	(bad)  
   140026e2b:	(bad)  
   140026e2c:	(bad)  
   140026e2d:	(bad)  
   140026e2e:	(bad)  
   140026e2f:	call   FWORD PTR [rsi+0x0]
   140026e32:	pop    rdi
   140026e33:	add    BYTE PTR [rax+0x0],ah
   140026e36:	(bad)  
   140026e37:	(bad)  
   140026e38:	(bad)  
   140026e39:	(bad)  
   140026e3a:	(bad)  
   140026e3b:	(bad)  
   140026e3c:	(bad)  
   140026e3d:	(bad)  
   140026e3e:	(bad)  
   140026e3f:	(bad)  
   140026e40:	(bad)  
   140026e41:	(bad)  
   140026e42:	(bad)  
   140026e43:	(bad)  
   140026e44:	(bad)  
   140026e45:	(bad)  
   140026e46:	(bad)  
   140026e47:	dec    DWORD PTR [rdx]
   140026e49:	add    bh,bh
   140026e4b:	dec    DWORD PTR [rax+rax*1]
   140026e4e:	or     eax,0xffffff00
   140026e53:	(bad)  
   140026e54:	(bad)  
   140026e55:	(bad)  
   140026e56:	(bad)  
   140026e57:	(bad)  
   140026e58:	(bad)  
   140026e59:	(bad)  
   140026e5a:	(bad)  
   140026e5b:	(bad)  
   140026e5c:	(bad)  
   140026e5d:	(bad)  
   140026e5e:	(bad)  
   140026e5f:	call   QWORD PTR [rsi]
   140026e61:	add    bh,bh
   140026e63:	(bad)  
   140026e64:	(bad)  
   140026e65:	(bad)  
   140026e66:	(bad)  
   140026e67:	(bad)  
   140026e68:	(bad)  
   140026e69:	(bad)  
   140026e6a:	(bad)  
   140026e6b:	(bad)  
   140026e6c:	(bad)  
   140026e6d:	call   FWORD PTR [rip+0xffffffffffffff00]        # 0x140026d73
   140026e73:	(bad)  
   140026e74:	(bad)  
   140026e75:	jmp    QWORD PTR [rcx]
   140026e77:	add    BYTE PTR [rdx],ah
   140026e79:	add    bh,bh
   140026e7b:	jmp    QWORD PTR [rax+rax*1]
   140026e7e:	(bad)  
   140026e7f:	(bad)  
   140026e80:	(bad)  
   140026e81:	(bad)  
   140026e82:	(bad)  
   140026e83:	(bad)  
   140026e84:	(bad)  
   140026e85:	(bad)  
   140026e86:	(bad)  
   140026e87:	(bad)  
   140026e88:	(bad)  
   140026e89:	jmp    FWORD PTR [rbx]
   140026e8b:	add    bh,bh
   140026e8d:	(bad)  
   140026e8e:	(bad)  
   140026e8f:	(bad)  
   140026e90:	(bad)  
   140026e91:	jmp    FWORD PTR [rdi]
   140026e93:	add    bh,bh
   140026e95:	(bad)  
   140026e96:	(bad)  
   140026e97:	(bad)  
   140026e98:	(bad)  
   140026e99:	(bad)  
   140026e9a:	(bad)  
   140026e9b:	(bad)  
   140026e9c:	(bad)  
   140026e9d:	(bad)  
   140026e9e:	(bad)  
   140026e9f:	(bad)  
   140026ea0:	(bad)  
   140026ea1:	push   QWORD PTR [rdi]
   140026ea3:	add    bh,bh
   140026ea5:	(bad)  
   140026ea6:	(bad)  
   140026ea7:	(bad)  
   140026ea8:	(bad)  
   140026ea9:	(bad)  
   140026eaa:	(bad)  
   140026eab:	(bad)  
   140026eac:	(bad)  
   140026ead:	(bad)  
   140026eae:	(bad)  
   140026eaf:	(bad)  
   140026eb0:	(bad)  
   140026eb1:	(bad)  
   140026eb2:	(bad)  
   140026eb3:	(bad)  
   140026eb4:	(bad)  
   140026eb5:	inc    DWORD PTR [rcx+0x0]
   140026eb8:	rex.X add BYTE PTR [rbx+0x0],al
   140026ebc:	add    dil,r15b
   140026ebf:	inc    DWORD PTR [rsi+0x0]
   140026ec2:	(bad)  
   140026ec3:	(bad)  
   140026ec4:	(bad)  
   140026ec5:	(bad)  
   140026ec6:	(bad)  
   140026ec7:	(bad)  
   140026ec8:	(bad)  
   140026ec9:	dec    DWORD PTR [rbx+0x0]
   140026ecc:	(bad)  
   140026ecd:	(bad)  
   140026ece:	(bad)  
   140026ecf:	(bad)  
   140026ed0:	(bad)  
   140026ed1:	(bad)  
   140026ed2:	(bad)  
   140026ed3:	(bad)  
   140026ed4:	(bad)  
   140026ed5:	call   QWORD PTR [rcx+0x0]
   140026ed8:	push   rdx
   140026ed9:	add    BYTE PTR [rbx+0x0],dl
   140026edc:	push   rsp
   140026edd:	add    bh,bh
   140026edf:	(bad)  
   140026ee0:	(bad)  
   140026ee1:	call   QWORD PTR [rdi+0x0]
   140026ee4:	(bad)  
   140026ee5:	(bad)  
   140026ee6:	(bad)  
   140026ee7:	(bad)  
   140026ee8:	(bad)  
   140026ee9:	(bad)  
   140026eea:	(bad)  
   140026eeb:	(bad)  
   140026eec:	(bad)  
   140026eed:	(bad)  
   140026eee:	(bad)  
   140026eef:	call   FWORD PTR [rsi+0x0]
   140026ef2:	pop    rdi
   140026ef3:	add    BYTE PTR [rax+0x0],ah
   140026ef6:	(bad)  
   140026ef7:	(bad)  
   140026ef8:	(bad)  
   140026ef9:	(bad)  
   140026efa:	(bad)  
   140026efb:	(bad)  
   140026efc:	(bad)  
   140026efd:	(bad)  
   140026efe:	(bad)  
   140026eff:	(bad)  
   140026f00:	(bad)  
   140026f01:	(bad)  
   140026f02:	(bad)  
   140026f03:	(bad)  
   140026f04:	(bad)  
   140026f05:	(bad)  
   140026f06:	(bad)  
   140026f07:	dec    DWORD PTR [rdx]
   140026f09:	add    bh,bh
   140026f0b:	dec    DWORD PTR [rax+rax*1]
   140026f0e:	or     eax,0xffffff00
   140026f13:	(bad)  
   140026f14:	(bad)  
   140026f15:	(bad)  
   140026f16:	(bad)  
   140026f17:	(bad)  
   140026f18:	(bad)  
   140026f19:	(bad)  
   140026f1a:	(bad)  
   140026f1b:	(bad)  
   140026f1c:	(bad)  
   140026f1d:	(bad)  
   140026f1e:	(bad)  
   140026f1f:	call   QWORD PTR [rsi]
   140026f21:	add    bh,bh
   140026f23:	(bad)  
   140026f24:	(bad)  
   140026f25:	(bad)  
   140026f26:	(bad)  
   140026f27:	(bad)  
   140026f28:	(bad)  
   140026f29:	(bad)  
   140026f2a:	(bad)  
   140026f2b:	(bad)  
   140026f2c:	(bad)  
   140026f2d:	call   FWORD PTR [rip+0xffffffffffffff00]        # 0x140026e33
   140026f33:	(bad)  
   140026f34:	(bad)  
   140026f35:	jmp    QWORD PTR [rcx]
   140026f37:	add    BYTE PTR [rdx],ah
   140026f39:	add    bh,bh
   140026f3b:	jmp    QWORD PTR [rax+rax*1]
   140026f3e:	(bad)  
   140026f3f:	(bad)  
   140026f40:	(bad)  
   140026f41:	(bad)  
   140026f42:	(bad)  
   140026f43:	(bad)  
   140026f44:	(bad)  
   140026f45:	(bad)  
   140026f46:	(bad)  
   140026f47:	(bad)  
   140026f48:	(bad)  
   140026f49:	jmp    FWORD PTR [rbx]
   140026f4b:	add    bh,bh
   140026f4d:	(bad)  
   140026f4e:	(bad)  
   140026f4f:	(bad)  
   140026f50:	(bad)  
   140026f51:	jmp    FWORD PTR [rdi]
   140026f53:	add    bh,bh
   140026f55:	(bad)  
   140026f56:	(bad)  
   140026f57:	(bad)  
   140026f58:	(bad)  
   140026f59:	(bad)  
   140026f5a:	(bad)  
   140026f5b:	(bad)  
   140026f5c:	(bad)  
   140026f5d:	(bad)  
   140026f5e:	(bad)  
   140026f5f:	(bad)  
   140026f60:	(bad)  
   140026f61:	push   QWORD PTR [rdi]
   140026f63:	add    bh,bh
   140026f65:	(bad)  
   140026f66:	(bad)  
   140026f67:	(bad)  
   140026f68:	(bad)  
   140026f69:	(bad)  
   140026f6a:	(bad)  
   140026f6b:	(bad)  
   140026f6c:	(bad)  
   140026f6d:	(bad)  
   140026f6e:	(bad)  
   140026f6f:	(bad)  
   140026f70:	(bad)  
   140026f71:	(bad)  
   140026f72:	(bad)  
   140026f73:	(bad)  
   140026f74:	(bad)  
   140026f75:	inc    DWORD PTR [rcx+0x0]
   140026f78:	rex.X add BYTE PTR [rbx+0x0],al
   140026f7c:	add    dil,r15b
   140026f7f:	inc    DWORD PTR [rsi+0x0]
   140026f82:	(bad)  
   140026f83:	(bad)  
   140026f84:	(bad)  
   140026f85:	(bad)  
   140026f86:	(bad)  
   140026f87:	(bad)  
   140026f88:	(bad)  
   140026f89:	dec    DWORD PTR [rbx+0x0]
   140026f8c:	(bad)  
   140026f8d:	(bad)  
   140026f8e:	(bad)  
   140026f8f:	(bad)  
   140026f90:	(bad)  
   140026f91:	(bad)  
   140026f92:	(bad)  
   140026f93:	(bad)  
   140026f94:	(bad)  
   140026f95:	call   QWORD PTR [rcx+0x0]
   140026f98:	push   rdx
   140026f99:	add    BYTE PTR [rbx+0x0],dl
   140026f9c:	push   rsp
   140026f9d:	add    bh,bh
   140026f9f:	(bad)  
   140026fa0:	(bad)  
   140026fa1:	call   QWORD PTR [rdi+0x0]
   140026fa4:	(bad)  
   140026fa5:	(bad)  
   140026fa6:	(bad)  
   140026fa7:	(bad)  
   140026fa8:	(bad)  
   140026fa9:	(bad)  
   140026faa:	(bad)  
   140026fab:	(bad)  
   140026fac:	(bad)  
   140026fad:	(bad)  
   140026fae:	(bad)  
   140026faf:	call   FWORD PTR [rsi+0x0]
   140026fb2:	pop    rdi
   140026fb3:	add    BYTE PTR [rax+0x0],ah
   140026fb6:	(bad)  
   140026fb7:	(bad)  
   140026fb8:	(bad)  
   140026fb9:	(bad)  
   140026fba:	(bad)  
   140026fbb:	(bad)  
   140026fbc:	(bad)  
   140026fbd:	(bad)  
   140026fbe:	(bad)  
   140026fbf:	(bad)  
   140026fc0:	(bad)  
   140026fc1:	(bad)  
   140026fc2:	(bad)  
   140026fc3:	(bad)  
   140026fc4:	(bad)  
   140026fc5:	(bad)  
   140026fc6:	(bad)  
   140026fc7:	dec    DWORD PTR [rbx]
   140026fc9:	add    BYTE PTR [rax+rax*1],cl
   140026fcc:	or     eax,0xffffff00
   140026fd1:	(bad)  
   140026fd2:	(bad)  
   140026fd3:	(bad)  
   140026fd4:	(bad)  
   140026fd5:	(bad)  
   140026fd6:	(bad)  
   140026fd7:	(bad)  
   140026fd8:	(bad)  
   140026fd9:	(bad)  
   140026fda:	(bad)  
   140026fdb:	(bad)  
   140026fdc:	(bad)  
   140026fdd:	call   QWORD PTR [rsi]
   140026fdf:	add    bh,bh
   140026fe1:	(bad)  
   140026fe2:	(bad)  
   140026fe3:	(bad)  
   140026fe4:	(bad)  
   140026fe5:	(bad)  
   140026fe6:	(bad)  
   140026fe7:	(bad)  
   140026fe8:	(bad)  
   140026fe9:	(bad)  
   140026fea:	(bad)  
   140026feb:	call   FWORD PTR [rip+0xffffffffffffff00]        # 0x140026ef1
   140026ff1:	(bad)  
   140026ff2:	(bad)  
   140026ff3:	jmp    QWORD PTR [rcx]
   140026ff5:	add    BYTE PTR [rdx],ah
   140026ff7:	add    bh,bh
   140026ff9:	jmp    QWORD PTR [rax+rax*1]
   140026ffc:	(bad)  
   140026ffd:	(bad)  
   140026ffe:	(bad)  
   140026fff:	(bad)  
   140027000:	(bad)  
   140027001:	jmp    FWORD PTR [rax]
   140027003:	add    bh,bh
   140027005:	jmp    FWORD PTR [rdx]
   140027007:	add    BYTE PTR [rbx],ch
   140027009:	add    BYTE PTR [rax+rax*1],ch
   14002700c:	(bad)  
   14002700d:	(bad)  
   14002700e:	(bad)  
   14002700f:	jmp    FWORD PTR [rdi]
   140027011:	add    bh,bh
   140027013:	(bad)  
   140027014:	(bad)  
   140027015:	(bad)  
   140027016:	(bad)  
   140027017:	push   QWORD PTR [rbx]
   140027019:	add    bh,bh
   14002701b:	push   QWORD PTR [rip+0xffffffffffffff00]        # 0x140026f21
   140027021:	(bad)  
   140027022:	(bad)  
   140027023:	(bad)  
   140027024:	(bad)  
   140027025:	(bad)  
   140027026:	(bad)  
   140027027:	(bad)  
   140027028:	(bad)  
   140027029:	(bad)  
   14002702a:	(bad)  
   14002702b:	(bad)  
   14002702c:	(bad)  
   14002702d:	(bad)  
   14002702e:	(bad)  
   14002702f:	(bad)  
   140027030:	(bad)  
   140027031:	(bad)  
   140027032:	(bad)  
   140027033:	inc    DWORD PTR [rcx+0x0]
   140027036:	rex.X add BYTE PTR [rbx+0x0],al
   14002703a:	add    dil,r15b
   14002703d:	inc    DWORD PTR [rsi+0x0]
   140027040:	(bad)  
   140027041:	dec    DWORD PTR [rax+0x0]
   140027044:	(bad)  
   140027045:	dec    DWORD PTR [rdx+0x0]
   140027048:	(bad)  
   140027049:	dec    DWORD PTR [rax+rax*1-0x1]
   14002704d:	(bad)  
   14002704e:	(bad)  
   14002704f:	(bad)  
   140027050:	(bad)  
   140027051:	(bad)  
   140027052:	(bad)  
   140027053:	call   QWORD PTR [rcx+0x0]
   140027056:	push   rdx
   140027057:	add    BYTE PTR [rbx+0x0],dl
   14002705a:	(bad)  
   14002705b:	(bad)  
   14002705c:	(bad)  
   14002705d:	(bad)  
   14002705e:	(bad)  
   14002705f:	call   QWORD PTR [rdi+0x0]
   140027062:	(bad)  
   140027063:	(bad)  
   140027064:	(bad)  
   140027065:	(bad)  
   140027066:	(bad)  
   140027067:	(bad)  
   140027068:	(bad)  
   140027069:	(bad)  
   14002706a:	(bad)  
   14002706b:	(bad)  
   14002706c:	(bad)  
   14002706d:	call   FWORD PTR [rsi+0x0]
   140027070:	pop    rdi
   140027071:	add    BYTE PTR [rax+0x0],ah
   140027074:	(bad)  
   140027075:	(bad)  
   140027076:	(bad)  
   140027077:	(bad)  
   140027078:	(bad)  
   140027079:	(bad)  
   14002707a:	(bad)  
   14002707b:	(bad)  
   14002707c:	(bad)  
   14002707d:	(bad)  
   14002707e:	(bad)  
   14002707f:	(bad)  
   140027080:	(bad)  
   140027081:	(bad)  
   140027082:	(bad)  
   140027083:	(bad)  
   140027084:	(bad)  
   140027085:	inc    DWORD PTR [rdi]
   140027087:	add    bh,bh
   140027089:	(bad)  
   14002708a:	(bad)  
   14002708b:	(bad)  
   14002708c:	(bad)  
   14002708d:	dec    DWORD PTR [rbx]
   14002708f:	add    BYTE PTR [rax+rax*1],cl
   140027092:	or     eax,0xffffff00
   140027097:	(bad)  
   140027098:	(bad)  
   140027099:	(bad)  
   14002709a:	(bad)  
   14002709b:	(bad)  
   14002709c:	(bad)  
   14002709d:	(bad)  
   14002709e:	(bad)  
   14002709f:	(bad)  
   1400270a0:	(bad)  
   1400270a1:	(bad)  
   1400270a2:	(bad)  
   1400270a3:	call   QWORD PTR [rsi]
   1400270a5:	add    bh,bh
   1400270a7:	(bad)  
   1400270a8:	(bad)  
   1400270a9:	(bad)  
   1400270aa:	(bad)  
   1400270ab:	(bad)  
   1400270ac:	(bad)  
   1400270ad:	(bad)  
   1400270ae:	(bad)  
   1400270af:	(bad)  
   1400270b0:	(bad)  
   1400270b1:	call   FWORD PTR [rip+0xffffffffffffff00]        # 0x140026fb7
   1400270b7:	(bad)  
   1400270b8:	(bad)  
   1400270b9:	jmp    QWORD PTR [rcx]
   1400270bb:	add    BYTE PTR [rdx],ah
   1400270bd:	add    bh,bh
   1400270bf:	jmp    QWORD PTR [rax+rax*1]
   1400270c2:	(bad)  
   1400270c3:	(bad)  
   1400270c4:	(bad)  
   1400270c5:	(bad)  
   1400270c6:	(bad)  
   1400270c7:	jmp    FWORD PTR [rax]
   1400270c9:	add    bh,bh
   1400270cb:	jmp    FWORD PTR [rdx]
   1400270cd:	add    BYTE PTR [rbx],ch
   1400270cf:	add    BYTE PTR [rax+rax*1],ch
   1400270d2:	(bad)  
   1400270d3:	(bad)  
   1400270d4:	(bad)  
   1400270d5:	jmp    FWORD PTR [rdi]
   1400270d7:	add    bh,bh
   1400270d9:	(bad)  
   1400270da:	(bad)  
   1400270db:	(bad)  
   1400270dc:	(bad)  
   1400270dd:	push   QWORD PTR [rbx]
   1400270df:	add    bh,bh
   1400270e1:	push   QWORD PTR [rip+0xffffffffffffff00]        # 0x140026fe7
   1400270e7:	(bad)  
   1400270e8:	(bad)  
   1400270e9:	(bad)  
   1400270ea:	(bad)  
   1400270eb:	(bad)  
   1400270ec:	(bad)  
   1400270ed:	(bad)  
   1400270ee:	(bad)  
   1400270ef:	(bad)  
   1400270f0:	(bad)  
   1400270f1:	(bad)  
   1400270f2:	(bad)  
   1400270f3:	(bad)  
   1400270f4:	(bad)  
   1400270f5:	(bad)  
   1400270f6:	(bad)  
   1400270f7:	(bad)  
   1400270f8:	(bad)  
   1400270f9:	inc    DWORD PTR [rcx+0x0]
   1400270fc:	rex.X add BYTE PTR [rbx+0x0],al
   140027100:	add    dil,r15b
   140027103:	inc    DWORD PTR [rsi+0x0]
   140027106:	(bad)  
   140027107:	dec    DWORD PTR [rax+0x0]
   14002710a:	(bad)  
   14002710b:	dec    DWORD PTR [rdx+0x0]
   14002710e:	(bad)  
   14002710f:	dec    DWORD PTR [rax+rax*1-0x1]
   140027113:	(bad)  
   140027114:	(bad)  
   140027115:	(bad)  
   140027116:	(bad)  
   140027117:	(bad)  
   140027118:	(bad)  
   140027119:	call   QWORD PTR [rcx+0x0]
   14002711c:	push   rdx
   14002711d:	add    BYTE PTR [rbx+0x0],dl
   140027120:	(bad)  
   140027121:	(bad)  
   140027122:	(bad)  
   140027123:	(bad)  
   140027124:	(bad)  
   140027125:	call   QWORD PTR [rdi+0x0]
   140027128:	(bad)  
   140027129:	(bad)  
   14002712a:	(bad)  
   14002712b:	(bad)  
   14002712c:	(bad)  
   14002712d:	(bad)  
   14002712e:	(bad)  
   14002712f:	(bad)  
   140027130:	(bad)  
   140027131:	(bad)  
   140027132:	(bad)  
   140027133:	call   FWORD PTR [rsi+0x0]
   140027136:	pop    rdi
   140027137:	add    BYTE PTR [rax+0x0],ah
   14002713a:	(bad)  
   14002713b:	(bad)  
   14002713c:	(bad)  
   14002713d:	(bad)  
   14002713e:	(bad)  
   14002713f:	(bad)  
   140027140:	(bad)  
   140027141:	(bad)  
   140027142:	(bad)  
   140027143:	(bad)  
   140027144:	(bad)  
   140027145:	(bad)  
   140027146:	(bad)  
   140027147:	(bad)  
   140027148:	(bad)  
   140027149:	(bad)  
   14002714a:	(bad)  
   14002714b:	dec    DWORD PTR [rbx]
   14002714d:	add    BYTE PTR [rax+rax*1],cl
   140027150:	or     eax,0xffffff00
   140027155:	(bad)  
   140027156:	(bad)  
   140027157:	(bad)  
   140027158:	(bad)  
   140027159:	(bad)  
   14002715a:	(bad)  
   14002715b:	(bad)  
   14002715c:	(bad)  
   14002715d:	(bad)  
   14002715e:	(bad)  
   14002715f:	(bad)  
   140027160:	(bad)  
   140027161:	call   QWORD PTR [rsi]
   140027163:	add    bh,bh
   140027165:	(bad)  
   140027166:	(bad)  
   140027167:	(bad)  
   140027168:	(bad)  
   140027169:	(bad)  
   14002716a:	(bad)  
   14002716b:	(bad)  
   14002716c:	(bad)  
   14002716d:	(bad)  
   14002716e:	(bad)  
   14002716f:	call   FWORD PTR [rip+0xffffffffffffff00]        # 0x140027075
   140027175:	(bad)  
   140027176:	(bad)  
   140027177:	jmp    QWORD PTR [rcx]
   140027179:	add    BYTE PTR [rdx],ah
   14002717b:	add    bh,bh
   14002717d:	jmp    QWORD PTR [rax+rax*1]
   140027180:	(bad)  
   140027181:	(bad)  
   140027182:	(bad)  
   140027183:	(bad)  
   140027184:	(bad)  
   140027185:	jmp    FWORD PTR [rax]
   140027187:	add    bh,bh
   140027189:	jmp    FWORD PTR [rdx]
   14002718b:	add    BYTE PTR [rbx],ch
   14002718d:	add    BYTE PTR [rax+rax*1],ch
   140027190:	(bad)  
   140027191:	(bad)  
   140027192:	(bad)  
   140027193:	jmp    FWORD PTR [rdi]
   140027195:	add    bh,bh
   140027197:	(bad)  
   140027198:	(bad)  
   140027199:	(bad)  
   14002719a:	(bad)  
   14002719b:	push   QWORD PTR [rbx]
   14002719d:	add    bh,bh
   14002719f:	push   QWORD PTR [rip+0xffffffffffffff00]        # 0x1400270a5
   1400271a5:	(bad)  
   1400271a6:	(bad)  
   1400271a7:	(bad)  
   1400271a8:	(bad)  
   1400271a9:	(bad)  
   1400271aa:	(bad)  
   1400271ab:	(bad)  
   1400271ac:	(bad)  
   1400271ad:	(bad)  
   1400271ae:	(bad)  
   1400271af:	(bad)  
   1400271b0:	(bad)  
   1400271b1:	(bad)  
   1400271b2:	(bad)  
   1400271b3:	(bad)  
   1400271b4:	(bad)  
   1400271b5:	(bad)  
   1400271b6:	(bad)  
   1400271b7:	inc    DWORD PTR [rcx+0x0]
   1400271ba:	rex.X add BYTE PTR [rbx+0x0],al
   1400271be:	add    dil,r15b
   1400271c1:	inc    DWORD PTR [rsi+0x0]
   1400271c4:	(bad)  
   1400271c5:	dec    DWORD PTR [rax+0x0]
   1400271c8:	(bad)  
   1400271c9:	dec    DWORD PTR [rdx+0x0]
   1400271cc:	rex.WXB add BYTE PTR [r8+r8*1-0x1],cl
   1400271d1:	(bad)  
   1400271d2:	(bad)  
   1400271d3:	(bad)  
   1400271d4:	(bad)  
   1400271d5:	(bad)  
   1400271d6:	(bad)  
   1400271d7:	call   QWORD PTR [rcx+0x0]
   1400271da:	push   rdx
   1400271db:	add    BYTE PTR [rbx+0x0],dl
   1400271de:	(bad)  
   1400271df:	(bad)  
   1400271e0:	(bad)  
   1400271e1:	(bad)  
   1400271e2:	(bad)  
   1400271e3:	call   QWORD PTR [rdi+0x0]
   1400271e6:	(bad)  
   1400271e7:	(bad)  
   1400271e8:	(bad)  
   1400271e9:	(bad)  
   1400271ea:	(bad)  
   1400271eb:	(bad)  
   1400271ec:	(bad)  
   1400271ed:	(bad)  
   1400271ee:	(bad)  
   1400271ef:	(bad)  
   1400271f0:	(bad)  
   1400271f1:	call   FWORD PTR [rsi+0x0]
   1400271f4:	pop    rdi
   1400271f5:	add    BYTE PTR [rax+0x0],ah
   1400271f8:	(bad)  
   1400271f9:	(bad)  
   1400271fa:	(bad)  
   1400271fb:	(bad)  
   1400271fc:	(bad)  
   1400271fd:	(bad)  
   1400271fe:	(bad)  
   1400271ff:	(bad)  
   140027200:	(bad)  
   140027201:	(bad)  
   140027202:	(bad)  
   140027203:	(bad)  
   140027204:	(bad)  
   140027205:	(bad)  
   140027206:	(bad)  
   140027207:	(bad)  
   140027208:	(bad)  
   140027209:	dec    DWORD PTR [rax]
   14002720b:	add    bh,bh
   14002720d:	(bad)  
   14002720e:	(bad)  
   14002720f:	dec    DWORD PTR [rbx]
   140027211:	add    BYTE PTR [rax+rax*1],cl
   140027214:	or     eax,0xffffff00
   140027219:	(bad)  
   14002721a:	(bad)  
   14002721b:	(bad)  
   14002721c:	(bad)  
   14002721d:	(bad)  
   14002721e:	(bad)  
   14002721f:	(bad)  
   140027220:	(bad)  
   140027221:	(bad)  
   140027222:	(bad)  
   140027223:	(bad)  
   140027224:	(bad)  
   140027225:	call   QWORD PTR [rsi]
   140027227:	add    bh,bh
   140027229:	(bad)  
   14002722a:	(bad)  
   14002722b:	(bad)  
   14002722c:	(bad)  
   14002722d:	(bad)  
   14002722e:	(bad)  
   14002722f:	(bad)  
   140027230:	(bad)  
   140027231:	(bad)  
   140027232:	(bad)  
   140027233:	call   FWORD PTR [rip+0xffffffffffffff00]        # 0x140027139
   140027239:	(bad)  
   14002723a:	(bad)  
   14002723b:	jmp    QWORD PTR [rcx]
   14002723d:	add    BYTE PTR [rdx],ah
   14002723f:	add    bh,bh
   140027241:	jmp    QWORD PTR [rax+rax*1]
   140027244:	(bad)  
   140027245:	(bad)  
   140027246:	(bad)  
   140027247:	(bad)  
   140027248:	(bad)  
   140027249:	jmp    FWORD PTR [rax]
   14002724b:	add    bh,bh
   14002724d:	jmp    FWORD PTR [rdx]
   14002724f:	add    BYTE PTR [rbx],ch
   140027251:	add    BYTE PTR [rax+rax*1],ch
   140027254:	(bad)  
   140027255:	(bad)  
   140027256:	(bad)  
   140027257:	jmp    FWORD PTR [rdi]
   140027259:	add    bh,bh
   14002725b:	(bad)  
   14002725c:	(bad)  
   14002725d:	(bad)  
   14002725e:	(bad)  
   14002725f:	push   QWORD PTR [rbx]
   140027261:	add    bh,bh
   140027263:	push   QWORD PTR [rip+0xffffffffffffff00]        # 0x140027169
   140027269:	(bad)  
   14002726a:	cmp    BYTE PTR [rax],al
   14002726c:	(bad)  
   14002726d:	(bad)  
   14002726e:	(bad)  
   14002726f:	(bad)  
   140027270:	(bad)  
   140027271:	(bad)  
   140027272:	(bad)  
   140027273:	(bad)  
   140027274:	(bad)  
   140027275:	(bad)  
   140027276:	(bad)  
   140027277:	(bad)  
   140027278:	(bad)  
   140027279:	(bad)  
   14002727a:	(bad)  
   14002727b:	inc    DWORD PTR [rcx+0x0]
   14002727e:	rex.X add BYTE PTR [rbx+0x0],al
   140027282:	add    dil,r15b
   140027285:	inc    DWORD PTR [rsi+0x0]
   140027288:	(bad)  
   140027289:	dec    DWORD PTR [rax+0x0]
   14002728c:	(bad)  
   14002728d:	dec    DWORD PTR [rdx+0x0]
   140027290:	(bad)  
   140027291:	dec    DWORD PTR [rax+rax*1-0x1]
   140027295:	(bad)  
   140027296:	(bad)  
   140027297:	(bad)  
   140027298:	(bad)  
   140027299:	(bad)  
   14002729a:	(bad)  
   14002729b:	call   QWORD PTR [rcx+0x0]
   14002729e:	push   rdx
   14002729f:	add    BYTE PTR [rbx+0x0],dl
   1400272a2:	(bad)  
   1400272a3:	(bad)  
   1400272a4:	(bad)  
   1400272a5:	(bad)  
   1400272a6:	(bad)  
   1400272a7:	call   QWORD PTR [rdi+0x0]
   1400272aa:	(bad)  
   1400272ab:	(bad)  
   1400272ac:	(bad)  
   1400272ad:	(bad)  
   1400272ae:	(bad)  
   1400272af:	(bad)  
   1400272b0:	(bad)  
   1400272b1:	(bad)  
   1400272b2:	(bad)  
   1400272b3:	(bad)  
   1400272b4:	(bad)  
   1400272b5:	call   FWORD PTR [rsi+0x0]
   1400272b8:	pop    rdi
   1400272b9:	add    BYTE PTR [rax+0x0],ah
   1400272bc:	(bad)  
   1400272bd:	(bad)  
   1400272be:	(bad)  
   1400272bf:	(bad)  
   1400272c0:	(bad)  
   1400272c1:	(bad)  
   1400272c2:	(bad)  
   1400272c3:	(bad)  
   1400272c4:	(bad)  
   1400272c5:	(bad)  
   1400272c6:	(bad)  
   1400272c7:	(bad)  
   1400272c8:	(bad)  
   1400272c9:	(bad)  
   1400272ca:	(bad)  
   1400272cb:	(bad)  
   1400272cc:	(bad)  
   1400272cd:	dec    DWORD PTR [rax]
   1400272cf:	add    bh,bh
   1400272d1:	(bad)  
   1400272d2:	(bad)  
   1400272d3:	dec    DWORD PTR [rbx]
   1400272d5:	add    BYTE PTR [rax+rax*1],cl
   1400272d8:	or     eax,0xffffff00
   1400272dd:	(bad)  
   1400272de:	(bad)  
   1400272df:	(bad)  
   1400272e0:	(bad)  
   1400272e1:	(bad)  
   1400272e2:	(bad)  
   1400272e3:	(bad)  
   1400272e4:	(bad)  
   1400272e5:	(bad)  
   1400272e6:	(bad)  
   1400272e7:	(bad)  
   1400272e8:	(bad)  
   1400272e9:	call   QWORD PTR [rsi]
   1400272eb:	add    bh,bh
   1400272ed:	(bad)  
   1400272ee:	(bad)  
   1400272ef:	(bad)  
   1400272f0:	(bad)  
   1400272f1:	(bad)  
   1400272f2:	(bad)  
   1400272f3:	(bad)  
   1400272f4:	(bad)  
   1400272f5:	(bad)  
   1400272f6:	(bad)  
   1400272f7:	call   FWORD PTR [rip+0xffffffffffffff00]        # 0x1400271fd
   1400272fd:	(bad)  
   1400272fe:	(bad)  
   1400272ff:	jmp    QWORD PTR [rcx]
   140027301:	add    BYTE PTR [rdx],ah
   140027303:	add    bh,bh
   140027305:	jmp    QWORD PTR [rax+rax*1]
   140027308:	(bad)  
   140027309:	(bad)  
   14002730a:	(bad)  
   14002730b:	(bad)  
   14002730c:	(bad)  
   14002730d:	jmp    FWORD PTR [rax]
   14002730f:	add    bh,bh
   140027311:	jmp    FWORD PTR [rdx]
   140027313:	add    BYTE PTR [rbx],ch
   140027315:	add    BYTE PTR [rax+rax*1],ch
   140027318:	(bad)  
   140027319:	(bad)  
   14002731a:	(bad)  
   14002731b:	jmp    FWORD PTR [rdi]
   14002731d:	add    bh,bh
   14002731f:	(bad)  
   140027320:	(bad)  
   140027321:	(bad)  
   140027322:	(bad)  
   140027323:	push   QWORD PTR [rbx]
   140027325:	add    bh,bh
   140027327:	push   QWORD PTR [rip+0xffffffffffffff00]        # 0x14002722d
   14002732d:	(bad)  
   14002732e:	cmp    BYTE PTR [rax],al
   140027330:	(bad)  
   140027331:	(bad)  
   140027332:	(bad)  
   140027333:	(bad)  
   140027334:	(bad)  
   140027335:	(bad)  
   140027336:	(bad)  
   140027337:	(bad)  
   140027338:	(bad)  
   140027339:	(bad)  
   14002733a:	(bad)  
   14002733b:	(bad)  
   14002733c:	(bad)  
   14002733d:	(bad)  
   14002733e:	(bad)  
   14002733f:	inc    DWORD PTR [rcx+0x0]
   140027342:	rex.X add BYTE PTR [rbx+0x0],al
   140027346:	add    dil,r15b
   140027349:	inc    DWORD PTR [rsi+0x0]
   14002734c:	(bad)  
   14002734d:	dec    DWORD PTR [rax+0x0]
   140027350:	(bad)  
   140027351:	dec    DWORD PTR [rdx+0x0]
   140027354:	(bad)  
   140027355:	dec    DWORD PTR [rax+rax*1-0x1]
   140027359:	(bad)  
   14002735a:	(bad)  
   14002735b:	(bad)  
   14002735c:	(bad)  
   14002735d:	(bad)  
   14002735e:	(bad)  
   14002735f:	call   QWORD PTR [rcx+0x0]
   140027362:	push   rdx
   140027363:	add    BYTE PTR [rbx+0x0],dl
   140027366:	(bad)  
   140027367:	(bad)  
   140027368:	(bad)  
   140027369:	(bad)  
   14002736a:	(bad)  
   14002736b:	call   QWORD PTR [rdi+0x0]
   14002736e:	(bad)  
   14002736f:	(bad)  
   140027370:	(bad)  
   140027371:	(bad)  
   140027372:	(bad)  
   140027373:	(bad)  
   140027374:	(bad)  
   140027375:	(bad)  
   140027376:	(bad)  
   140027377:	(bad)  
   140027378:	(bad)  
   140027379:	call   FWORD PTR [rsi+0x0]
   14002737c:	pop    rdi
   14002737d:	add    BYTE PTR [rax+0x0],ah
   140027380:	(bad)  
   140027381:	(bad)  
   140027382:	(bad)  
   140027383:	(bad)  
   140027384:	(bad)  
   140027385:	(bad)  
   140027386:	(bad)  
   140027387:	(bad)  
   140027388:	(bad)  
   140027389:	(bad)  
   14002738a:	(bad)  
   14002738b:	(bad)  
   14002738c:	(bad)  
   14002738d:	(bad)  
   14002738e:	(bad)  
   14002738f:	(bad)  
   140027390:	(bad)  
   140027391:	dec    DWORD PTR [rax]
   140027393:	add    bh,bh
   140027395:	(bad)  
   140027396:	(bad)  
   140027397:	dec    DWORD PTR [rbx]
   140027399:	add    BYTE PTR [rax+rax*1],cl
   14002739c:	or     eax,0xffffff00
   1400273a1:	(bad)  
   1400273a2:	(bad)  
   1400273a3:	(bad)  
   1400273a4:	(bad)  
   1400273a5:	(bad)  
   1400273a6:	(bad)  
   1400273a7:	(bad)  
   1400273a8:	(bad)  
   1400273a9:	(bad)  
   1400273aa:	(bad)  
   1400273ab:	(bad)  
   1400273ac:	(bad)  
   1400273ad:	call   QWORD PTR [rsi]
   1400273af:	add    bh,bh
   1400273b1:	(bad)  
   1400273b2:	(bad)  
   1400273b3:	(bad)  
   1400273b4:	(bad)  
   1400273b5:	(bad)  
   1400273b6:	(bad)  
   1400273b7:	(bad)  
   1400273b8:	(bad)  
   1400273b9:	(bad)  
   1400273ba:	(bad)  
   1400273bb:	call   FWORD PTR [rip+0xffffffffffffff00]        # 0x1400272c1
   1400273c1:	(bad)  
   1400273c2:	(bad)  
   1400273c3:	jmp    QWORD PTR [rcx]
   1400273c5:	add    BYTE PTR [rdx],ah
   1400273c7:	add    bh,bh
   1400273c9:	jmp    QWORD PTR [rax+rax*1]
   1400273cc:	(bad)  
   1400273cd:	(bad)  
   1400273ce:	(bad)  
   1400273cf:	(bad)  
   1400273d0:	(bad)  
   1400273d1:	jmp    FWORD PTR [rax]
   1400273d3:	add    bh,bh
   1400273d5:	jmp    FWORD PTR [rdx]
   1400273d7:	add    BYTE PTR [rbx],ch
   1400273d9:	add    BYTE PTR [rax+rax*1],ch
   1400273dc:	(bad)  
   1400273dd:	(bad)  
   1400273de:	(bad)  
   1400273df:	jmp    FWORD PTR [rdi]
   1400273e1:	add    bh,bh
   1400273e3:	(bad)  
   1400273e4:	(bad)  
   1400273e5:	(bad)  
   1400273e6:	(bad)  
   1400273e7:	push   QWORD PTR [rbx]
   1400273e9:	add    bh,bh
   1400273eb:	push   QWORD PTR [rip+0xffffffffffffff00]        # 0x1400272f1
   1400273f1:	(bad)  
   1400273f2:	cmp    BYTE PTR [rax],al
   1400273f4:	(bad)  
   1400273f5:	(bad)  
   1400273f6:	(bad)  
   1400273f7:	(bad)  
   1400273f8:	(bad)  
   1400273f9:	(bad)  
   1400273fa:	(bad)  
   1400273fb:	(bad)  
   1400273fc:	(bad)  
   1400273fd:	(bad)  
   1400273fe:	(bad)  
   1400273ff:	(bad)  
   140027400:	(bad)  
   140027401:	(bad)  
   140027402:	(bad)  
   140027403:	inc    DWORD PTR [rcx+0x0]
   140027406:	rex.X add BYTE PTR [rbx+0x0],al
   14002740a:	add    dil,r15b
   14002740d:	inc    DWORD PTR [rsi+0x0]
   140027410:	(bad)  
   140027411:	dec    DWORD PTR [rax+0x0]
   140027414:	(bad)  
   140027415:	dec    DWORD PTR [rdx+0x0]
   140027418:	(bad)  
   140027419:	dec    DWORD PTR [rax+rax*1-0x1]
   14002741d:	(bad)  
   14002741e:	(bad)  
   14002741f:	(bad)  
   140027420:	(bad)  
   140027421:	(bad)  
   140027422:	(bad)  
   140027423:	call   QWORD PTR [rcx+0x0]
   140027426:	push   rdx
   140027427:	add    BYTE PTR [rbx+0x0],dl
   14002742a:	(bad)  
   14002742b:	(bad)  
   14002742c:	(bad)  
   14002742d:	(bad)  
   14002742e:	(bad)  
   14002742f:	call   QWORD PTR [rdi+0x0]
   140027432:	(bad)  
   140027433:	(bad)  
   140027434:	(bad)  
   140027435:	(bad)  
   140027436:	(bad)  
   140027437:	(bad)  
   140027438:	(bad)  
   140027439:	(bad)  
   14002743a:	(bad)  
   14002743b:	(bad)  
   14002743c:	(bad)  
   14002743d:	call   FWORD PTR [rsi+0x0]
   140027440:	pop    rdi
   140027441:	add    BYTE PTR [rax+0x0],ah
   140027444:	(bad)  
   140027445:	(bad)  
   140027446:	(bad)  
   140027447:	(bad)  
   140027448:	(bad)  
   140027449:	(bad)  
   14002744a:	(bad)  
   14002744b:	(bad)  
   14002744c:	(bad)  
   14002744d:	(bad)  
   14002744e:	(bad)  
   14002744f:	(bad)  
   140027450:	(bad)  
   140027451:	(bad)  
   140027452:	(bad)  
   140027453:	(bad)  
   140027454:	(bad)  
   140027455:	dec    DWORD PTR [rax]
   140027457:	add    bh,bh
   140027459:	(bad)  
   14002745a:	(bad)  
   14002745b:	dec    DWORD PTR [rbx]
   14002745d:	add    BYTE PTR [rax+rax*1],cl
   140027460:	or     eax,0xffffff00
   140027465:	(bad)  
   140027466:	(bad)  
   140027467:	(bad)  
   140027468:	(bad)  
   140027469:	(bad)  
   14002746a:	(bad)  
   14002746b:	(bad)  
   14002746c:	(bad)  
   14002746d:	(bad)  
   14002746e:	(bad)  
   14002746f:	(bad)  
   140027470:	(bad)  
   140027471:	call   QWORD PTR [rsi]
   140027473:	add    bh,bh
   140027475:	(bad)  
   140027476:	(bad)  
   140027477:	(bad)  
   140027478:	(bad)  
   140027479:	(bad)  
   14002747a:	(bad)  
   14002747b:	(bad)  
   14002747c:	(bad)  
   14002747d:	(bad)  
   14002747e:	(bad)  
   14002747f:	call   FWORD PTR [rip+0xffffffffffffff00]        # 0x140027385
   140027485:	(bad)  
   140027486:	(bad)  
   140027487:	jmp    QWORD PTR [rcx]
   140027489:	add    BYTE PTR [rdx],ah
   14002748b:	add    bh,bh
   14002748d:	jmp    QWORD PTR [rax+rax*1]
   140027490:	(bad)  
   140027491:	(bad)  
   140027492:	(bad)  
   140027493:	(bad)  
   140027494:	(bad)  
   140027495:	jmp    FWORD PTR [rax]
   140027497:	add    bh,bh
   140027499:	jmp    FWORD PTR [rdx]
   14002749b:	add    BYTE PTR [rbx],ch
   14002749d:	add    BYTE PTR [rax+rax*1],ch
   1400274a0:	(bad)  
   1400274a1:	(bad)  
   1400274a2:	(bad)  
   1400274a3:	jmp    FWORD PTR [rdi]
   1400274a5:	add    bh,bh
   1400274a7:	(bad)  
   1400274a8:	(bad)  
   1400274a9:	(bad)  
   1400274aa:	(bad)  
   1400274ab:	push   QWORD PTR [rbx]
   1400274ad:	add    bh,bh
   1400274af:	push   QWORD PTR [rip+0xffffffffffffff00]        # 0x1400273b5
   1400274b5:	(bad)  
   1400274b6:	cmp    BYTE PTR [rax],al
   1400274b8:	(bad)  
   1400274b9:	(bad)  
   1400274ba:	(bad)  
   1400274bb:	(bad)  
   1400274bc:	(bad)  
   1400274bd:	(bad)  
   1400274be:	(bad)  
   1400274bf:	(bad)  
   1400274c0:	(bad)  
   1400274c1:	(bad)  
   1400274c2:	(bad)  
   1400274c3:	(bad)  
   1400274c4:	(bad)  
   1400274c5:	(bad)  
   1400274c6:	(bad)  
   1400274c7:	inc    DWORD PTR [rcx+0x0]
   1400274ca:	rex.X add BYTE PTR [rbx+0x0],al
   1400274ce:	add    dil,r15b
   1400274d1:	inc    DWORD PTR [rsi+0x0]
   1400274d4:	(bad)  
   1400274d5:	dec    DWORD PTR [rax+0x0]
   1400274d8:	(bad)  
   1400274d9:	dec    DWORD PTR [rdx+0x0]
   1400274dc:	(bad)  
   1400274dd:	dec    DWORD PTR [rax+rax*1-0x1]
   1400274e1:	(bad)  
   1400274e2:	(bad)  
   1400274e3:	(bad)  
   1400274e4:	(bad)  
   1400274e5:	(bad)  
   1400274e6:	(bad)  
   1400274e7:	call   QWORD PTR [rcx+0x0]
   1400274ea:	push   rdx
   1400274eb:	add    BYTE PTR [rbx+0x0],dl
   1400274ee:	(bad)  
   1400274ef:	(bad)  
   1400274f0:	(bad)  
   1400274f1:	(bad)  
   1400274f2:	(bad)  
   1400274f3:	call   QWORD PTR [rdi+0x0]
   1400274f6:	(bad)  
   1400274f7:	(bad)  
   1400274f8:	(bad)  
   1400274f9:	(bad)  
   1400274fa:	(bad)  
   1400274fb:	(bad)  
   1400274fc:	(bad)  
   1400274fd:	(bad)  
   1400274fe:	(bad)  
   1400274ff:	(bad)  
   140027500:	(bad)  
   140027501:	call   FWORD PTR [rsi+0x0]
   140027504:	pop    rdi
   140027505:	add    BYTE PTR [rax+0x0],ah
   140027508:	(bad)  
   140027509:	(bad)  
   14002750a:	(bad)  
   14002750b:	(bad)  
   14002750c:	(bad)  
   14002750d:	(bad)  
   14002750e:	(bad)  
   14002750f:	(bad)  
   140027510:	(bad)  
   140027511:	(bad)  
   140027512:	(bad)  
   140027513:	(bad)  
   140027514:	(bad)  
   140027515:	(bad)  
   140027516:	(bad)  
   140027517:	(bad)  
   140027518:	(bad)  
   140027519:	dec    DWORD PTR [rbx]
   14002751b:	add    BYTE PTR [rax+rax*1],cl
   14002751e:	or     eax,0xffffff00
   140027523:	(bad)  
   140027524:	(bad)  
   140027525:	(bad)  
   140027526:	(bad)  
   140027527:	(bad)  
   140027528:	(bad)  
   140027529:	(bad)  
   14002752a:	(bad)  
   14002752b:	(bad)  
   14002752c:	(bad)  
   14002752d:	(bad)  
   14002752e:	(bad)  
   14002752f:	call   QWORD PTR [rsi]
   140027531:	add    bh,bh
   140027533:	(bad)  
   140027534:	(bad)  
   140027535:	(bad)  
   140027536:	(bad)  
   140027537:	(bad)  
   140027538:	(bad)  
   140027539:	(bad)  
   14002753a:	(bad)  
   14002753b:	(bad)  
   14002753c:	(bad)  
   14002753d:	call   FWORD PTR [rip+0xffffffffff001e00]        # 0x13f029343
   140027543:	(bad)  
   140027544:	(bad)  
   140027545:	jmp    QWORD PTR [rcx]
   140027547:	add    BYTE PTR [rdx],ah
   140027549:	add    bh,bh
   14002754b:	jmp    QWORD PTR [rax+rax*1]
   14002754e:	(bad)  
   14002754f:	(bad)  
   140027550:	(bad)  
   140027551:	(bad)  
   140027552:	(bad)  
   140027553:	jmp    FWORD PTR [rax]
   140027555:	add    bh,bh
   140027557:	jmp    FWORD PTR [rdx]
   140027559:	add    BYTE PTR [rbx],ch
   14002755b:	add    BYTE PTR [rax+rax*1],ch
   14002755e:	(bad)  
   14002755f:	(bad)  
   140027560:	(bad)  
   140027561:	jmp    FWORD PTR [rdi]
   140027563:	add    bh,bh
   140027565:	(bad)  
   140027566:	(bad)  
   140027567:	(bad)  
   140027568:	(bad)  
   140027569:	push   QWORD PTR [rbx]
   14002756b:	add    bh,bh
   14002756d:	push   QWORD PTR [rip+0xffffffffffffff00]        # 0x140027473
   140027573:	(bad)  
   140027574:	(bad)  
   140027575:	(bad)  
   140027576:	(bad)  
   140027577:	(bad)  
   140027578:	(bad)  
   140027579:	(bad)  
   14002757a:	(bad)  
   14002757b:	(bad)  
   14002757c:	(bad)  
   14002757d:	(bad)  
   14002757e:	cmp    eax,0xffffff00
   140027583:	(bad)  
   140027584:	(bad)  
   140027585:	inc    DWORD PTR [rcx+0x0]
   140027588:	rex.X add BYTE PTR [rbx+0x0],al
   14002758c:	add    BYTE PTR [rbp+0x0],r8b
   140027590:	rex.RX add dil,r15b
   140027593:	dec    DWORD PTR [rax+0x0]
   140027596:	rex.WB add BYTE PTR [r10+0x0],cl
   14002759a:	(bad)  
   14002759b:	dec    DWORD PTR [rax+rax*1-0x1]
   14002759f:	dec    DWORD PTR [rsi+0x0]
   1400275a2:	(bad)  
   1400275a3:	(bad)  
   1400275a4:	(bad)  
   1400275a5:	call   QWORD PTR [rcx+0x0]
   1400275a8:	push   rdx
   1400275a9:	add    BYTE PTR [rbx+0x0],dl
   1400275ac:	(bad)  
   1400275ad:	(bad)  
   1400275ae:	(bad)  
   1400275af:	(bad)  
   1400275b0:	(bad)  
   1400275b1:	call   QWORD PTR [rdi+0x0]
   1400275b4:	(bad)  
   1400275b5:	(bad)  
   1400275b6:	(bad)  
   1400275b7:	(bad)  
   1400275b8:	(bad)  
   1400275b9:	(bad)  
   1400275ba:	(bad)  
   1400275bb:	(bad)  
   1400275bc:	(bad)  
   1400275bd:	(bad)  
   1400275be:	(bad)  
   1400275bf:	call   FWORD PTR [rsi+0x0]
   1400275c2:	pop    rdi
   1400275c3:	add    BYTE PTR [rax+0x0],ah
   1400275c6:	(bad)  
   1400275c7:	(bad)  
   1400275c8:	(bad)  
   1400275c9:	(bad)  
   1400275ca:	(bad)  
   1400275cb:	(bad)  
   1400275cc:	(bad)  
   1400275cd:	(bad)  
   1400275ce:	(bad)  
   1400275cf:	(bad)  
   1400275d0:	(bad)  
   1400275d1:	(bad)  
   1400275d2:	(bad)  
   1400275d3:	(bad)  
   1400275d4:	(bad)  
   1400275d5:	(bad)  
   1400275d6:	(bad)  
   1400275d7:	dec    DWORD PTR [rbx]
   1400275d9:	add    BYTE PTR [rax+rax*1],cl
   1400275dc:	or     eax,0xffffff00
   1400275e1:	(bad)  
   1400275e2:	(bad)  
   1400275e3:	(bad)  
   1400275e4:	(bad)  
   1400275e5:	(bad)  
   1400275e6:	(bad)  
   1400275e7:	(bad)  
   1400275e8:	(bad)  
   1400275e9:	(bad)  
   1400275ea:	(bad)  
   1400275eb:	(bad)  
   1400275ec:	(bad)  
   1400275ed:	call   QWORD PTR [rsi]
   1400275ef:	add    bh,bh
   1400275f1:	(bad)  
   1400275f2:	(bad)  
   1400275f3:	(bad)  
   1400275f4:	(bad)  
   1400275f5:	(bad)  
   1400275f6:	(bad)  
   1400275f7:	(bad)  
   1400275f8:	(bad)  
   1400275f9:	(bad)  
   1400275fa:	(bad)  
   1400275fb:	call   FWORD PTR [rip+0xffffffffff001e00]        # 0x13f029401
   140027601:	(bad)  
   140027602:	(bad)  
   140027603:	jmp    QWORD PTR [rcx]
   140027605:	add    BYTE PTR [rdx],ah
   140027607:	add    bh,bh
   140027609:	jmp    QWORD PTR [rax+rax*1]
   14002760c:	(bad)  
   14002760d:	(bad)  
   14002760e:	(bad)  
   14002760f:	(bad)  
   140027610:	(bad)  
   140027611:	jmp    FWORD PTR [rax]
   140027613:	add    bh,bh
   140027615:	jmp    FWORD PTR [rdx]
   140027617:	add    BYTE PTR [rbx],ch
   140027619:	add    BYTE PTR [rax+rax*1],ch
   14002761c:	(bad)  
   14002761d:	(bad)  
   14002761e:	(bad)  
   14002761f:	jmp    FWORD PTR [rdi]
   140027621:	add    bh,bh
   140027623:	(bad)  
   140027624:	(bad)  
   140027625:	(bad)  
   140027626:	(bad)  
   140027627:	push   QWORD PTR [rbx]
   140027629:	add    bh,bh
   14002762b:	push   QWORD PTR [rip+0xffffffffffffff00]        # 0x140027531
   140027631:	(bad)  
   140027632:	(bad)  
   140027633:	(bad)  
   140027634:	(bad)  
   140027635:	(bad)  
   140027636:	(bad)  
   140027637:	(bad)  
   140027638:	(bad)  
   140027639:	(bad)  
   14002763a:	(bad)  
   14002763b:	(bad)  
   14002763c:	cmp    eax,0xffffff00
   140027641:	(bad)  
   140027642:	(bad)  
   140027643:	inc    DWORD PTR [rcx+0x0]
   140027646:	rex.X add BYTE PTR [rbx+0x0],al
   14002764a:	add    BYTE PTR [rbp+0x0],r8b
   14002764e:	rex.RX add dil,r15b
   140027651:	dec    DWORD PTR [rax+0x0]
   140027654:	rex.WB add BYTE PTR [r10+0x0],cl
   140027658:	(bad)  
   140027659:	dec    DWORD PTR [rax+rax*1-0x1]
   14002765d:	dec    DWORD PTR [rsi+0x0]
   140027660:	(bad)  
   140027661:	(bad)  
   140027662:	(bad)  
   140027663:	call   QWORD PTR [rcx+0x0]
   140027666:	push   rdx
   140027667:	add    BYTE PTR [rbx+0x0],dl
   14002766a:	(bad)  
   14002766b:	(bad)  
   14002766c:	(bad)  
   14002766d:	(bad)  
   14002766e:	(bad)  
   14002766f:	call   QWORD PTR [rdi+0x0]
   140027672:	(bad)  
   140027673:	(bad)  
   140027674:	(bad)  
   140027675:	(bad)  
   140027676:	(bad)  
   140027677:	(bad)  
   140027678:	(bad)  
   140027679:	(bad)  
   14002767a:	(bad)  
   14002767b:	(bad)  
   14002767c:	(bad)  
   14002767d:	call   FWORD PTR [rsi+0x0]
   140027680:	pop    rdi
   140027681:	add    BYTE PTR [rax+0x0],ah
   140027684:	(bad)  
   140027685:	(bad)  
   140027686:	(bad)  
   140027687:	(bad)  
   140027688:	(bad)  
   140027689:	(bad)  
   14002768a:	(bad)  
   14002768b:	(bad)  
   14002768c:	(bad)  
   14002768d:	(bad)  
   14002768e:	(bad)  
   14002768f:	(bad)  
   140027690:	(bad)  
   140027691:	(bad)  
   140027692:	(bad)  
   140027693:	(bad)  
   140027694:	(bad)  
   140027695:	dec    DWORD PTR [rbx]
   140027697:	add    BYTE PTR [rax+rax*1],cl
   14002769a:	or     eax,0xffffff00
   14002769f:	(bad)  
   1400276a0:	(bad)  
   1400276a1:	(bad)  
   1400276a2:	(bad)  
   1400276a3:	(bad)  
   1400276a4:	(bad)  
   1400276a5:	(bad)  
   1400276a6:	(bad)  
   1400276a7:	(bad)  
   1400276a8:	(bad)  
   1400276a9:	(bad)  
   1400276aa:	(bad)  
   1400276ab:	call   QWORD PTR [rsi]
   1400276ad:	add    bh,bh
   1400276af:	(bad)  
   1400276b0:	(bad)  
   1400276b1:	(bad)  
   1400276b2:	(bad)  
   1400276b3:	(bad)  
   1400276b4:	(bad)  
   1400276b5:	(bad)  
   1400276b6:	(bad)  
   1400276b7:	(bad)  
   1400276b8:	(bad)  
   1400276b9:	call   FWORD PTR [rip+0xffffffffff001e00]        # 0x13f0294bf
   1400276bf:	(bad)  
   1400276c0:	(bad)  
   1400276c1:	jmp    QWORD PTR [rcx]
   1400276c3:	add    BYTE PTR [rdx],ah
   1400276c5:	add    bh,bh
   1400276c7:	jmp    QWORD PTR [rax+rax*1]
   1400276ca:	(bad)  
   1400276cb:	(bad)  
   1400276cc:	(bad)  
   1400276cd:	(bad)  
   1400276ce:	(bad)  
   1400276cf:	jmp    FWORD PTR [rax]
   1400276d1:	add    bh,bh
   1400276d3:	jmp    FWORD PTR [rdx]
   1400276d5:	add    BYTE PTR [rbx],ch
   1400276d7:	add    BYTE PTR [rax+rax*1],ch
   1400276da:	(bad)  
   1400276db:	(bad)  
   1400276dc:	(bad)  
   1400276dd:	jmp    FWORD PTR [rdi]
   1400276df:	add    bh,bh
   1400276e1:	(bad)  
   1400276e2:	(bad)  
   1400276e3:	(bad)  
   1400276e4:	(bad)  
   1400276e5:	push   QWORD PTR [rbx]
   1400276e7:	add    bh,bh
   1400276e9:	push   QWORD PTR [rip+0xffffffffffffff00]        # 0x1400275ef
   1400276ef:	(bad)  
   1400276f0:	(bad)  
   1400276f1:	(bad)  
   1400276f2:	(bad)  
   1400276f3:	(bad)  
   1400276f4:	(bad)  
   1400276f5:	(bad)  
   1400276f6:	(bad)  
   1400276f7:	(bad)  
   1400276f8:	(bad)  
   1400276f9:	(bad)  
   1400276fa:	cmp    eax,0xffffff00
   1400276ff:	(bad)  
   140027700:	(bad)  
   140027701:	inc    DWORD PTR [rcx+0x0]
   140027704:	rex.X add BYTE PTR [rbx+0x0],al
   140027708:	add    BYTE PTR [rbp+0x0],r8b
   14002770c:	rex.RX add dil,r15b
   14002770f:	dec    DWORD PTR [rax+0x0]
   140027712:	rex.WB add BYTE PTR [r10+0x0],cl
   140027716:	(bad)  
   140027717:	dec    DWORD PTR [rax+rax*1-0x1]
   14002771b:	dec    DWORD PTR [rsi+0x0]
   14002771e:	(bad)  
   14002771f:	(bad)  
   140027720:	(bad)  
   140027721:	call   QWORD PTR [rcx+0x0]
   140027724:	push   rdx
   140027725:	add    BYTE PTR [rbx+0x0],dl
   140027728:	(bad)  
   140027729:	(bad)  
   14002772a:	(bad)  
   14002772b:	(bad)  
   14002772c:	(bad)  
   14002772d:	call   QWORD PTR [rdi+0x0]
   140027730:	(bad)  
   140027731:	(bad)  
   140027732:	(bad)  
   140027733:	(bad)  
   140027734:	(bad)  
   140027735:	(bad)  
   140027736:	(bad)  
   140027737:	(bad)  
   140027738:	(bad)  
   140027739:	(bad)  
   14002773a:	(bad)  
   14002773b:	call   FWORD PTR [rsi+0x0]
   14002773e:	pop    rdi
   14002773f:	add    BYTE PTR [rax+0x0],ah
   140027742:	(bad)  
   140027743:	(bad)  
   140027744:	(bad)  
   140027745:	(bad)  
   140027746:	(bad)  
   140027747:	(bad)  
   140027748:	(bad)  
   140027749:	(bad)  
   14002774a:	(bad)  
   14002774b:	(bad)  
   14002774c:	(bad)  
   14002774d:	(bad)  
   14002774e:	(bad)  
   14002774f:	(bad)  
   140027750:	(bad)  
   140027751:	(bad)  
   140027752:	(bad)  
   140027753:	inc    DWORD PTR [rax+rax*1]
   140027756:	add    eax,0xff000600
   14002775b:	(bad)  
   14002775c:	(bad)  
   14002775d:	dec    DWORD PTR [rcx]
   14002775f:	add    BYTE PTR [rdx],cl
   140027761:	add    BYTE PTR [rbx],cl
   140027763:	add    bh,bh
   140027765:	(bad)  
   140027766:	(bad)  
   140027767:	dec    DWORD PTR [rsi]
   140027769:	add    bh,bh
   14002776b:	call   QWORD PTR [rax]
   14002776d:	add    bh,bh
   14002776f:	(bad)  
   140027770:	(bad)  
   140027771:	(bad)  
   140027772:	(bad)  
   140027773:	call   QWORD PTR [rax+rax*1]
   140027776:	adc    eax,0xff001600
   14002777b:	(bad)  
   14002777c:	(bad)  
   14002777d:	(bad)  
   14002777e:	(bad)  
   14002777f:	(bad)  
   140027780:	(bad)  
   140027781:	(bad)  
   140027782:	(bad)  
   140027783:	(bad)  
   140027784:	(bad)  
   140027785:	call   FWORD PTR [rip+0x1f001e00]        # 0x15f02958b
   14002778b:	add    BYTE PTR [rax],ah
   14002778d:	add    bh,bh
   14002778f:	(bad)  
   140027790:	(bad)  
   140027791:	(bad)  
   140027792:	(bad)  
   140027793:	(bad)  
   140027794:	(bad)  
   140027795:	(bad)  
   140027796:	(bad)  
   140027797:	(bad)  
   140027798:	(bad)  
   140027799:	(bad)  
   14002779a:	(bad)  
   14002779b:	(bad)  
   14002779c:	(bad)  
   14002779d:	(bad)  
   14002779e:	(bad)  
   14002779f:	(bad)  
   1400277a0:	(bad)  
   1400277a1:	jmp    FWORD PTR [rbx]
   1400277a3:	add    bh,bh
   1400277a5:	(bad)  
   1400277a6:	(bad)  
   1400277a7:	(bad)  
   1400277a8:	(bad)  
   1400277a9:	(bad)  
   1400277aa:	(bad)  
   1400277ab:	(bad)  
   1400277ac:	(bad)  
   1400277ad:	(bad)  
   1400277ae:	(bad)  
   1400277af:	(bad)  
   1400277b0:	(bad)  
   1400277b1:	(bad)  
   1400277b2:	(bad)  
   1400277b3:	(bad)  
   1400277b4:	(bad)  
   1400277b5:	(bad)  
   1400277b6:	(bad)  
   1400277b7:	(bad)  
   1400277b8:	(bad)  
   1400277b9:	(bad)  
   1400277ba:	(bad)  
   1400277bb:	(bad)  
   1400277bc:	(bad)  
   1400277bd:	(bad)  
   1400277be:	(bad)  
   1400277bf:	(bad)  
   1400277c0:	(bad)  
   1400277c1:	(bad)  
   1400277c2:	cmp    eax,DWORD PTR [rax]
   1400277c4:	(bad)  
   1400277c5:	(bad)  
   1400277c6:	(bad)  
   1400277c7:	(bad)  
   1400277c8:	(bad)  
   1400277c9:	(bad)  
   1400277ca:	(bad)  
   1400277cb:	(bad)  
   1400277cc:	(bad)  
   1400277cd:	(bad)  
   1400277ce:	(bad)  
   1400277cf:	inc    DWORD PTR [rdx+0x0]
   1400277d2:	add    BYTE PTR [r8+r8*1+0x45],al
   1400277d7:	add    BYTE PTR [rsi+0x0],al
   1400277da:	rex.RXB add r15b,r15b
   1400277dd:	dec    DWORD PTR [rcx+0x0]
   1400277e0:	rex.WX add BYTE PTR [rbx+0x0],cl
   1400277e4:	rex.WR add BYTE PTR [rbp+0x0],r9b
   1400277e8:	rex.WRX add dil,r15b
   1400277eb:	(bad)  
   1400277ec:	(bad)  
   1400277ed:	call   QWORD PTR [rcx+0x0]
   1400277f0:	push   rdx
   1400277f1:	add    BYTE PTR [rbx+0x0],dl
   1400277f4:	push   rsp
   1400277f5:	add    BYTE PTR [rbp+0x0],dl
   1400277f8:	push   rsi
   1400277f9:	add    bh,bh
   1400277fb:	(bad)  
   1400277fc:	(bad)  
   1400277fd:	(bad)  
   1400277fe:	(bad)  
   1400277ff:	(bad)  
   140027800:	(bad)  
   140027801:	(bad)  
   140027802:	(bad)  
   140027803:	(bad)  
   140027804:	(bad)  
   140027805:	(bad)  
   140027806:	(bad)  
   140027807:	call   FWORD PTR [rsi+0x0]
   14002780a:	pop    rdi
   14002780b:	add    BYTE PTR [rax+0x0],ah
   14002780e:	(bad)  
   14002780f:	(bad)  
   140027810:	(bad)  
   140027811:	(bad)  
   140027812:	(bad)  
   140027813:	(bad)  
   140027814:	(bad)  
   140027815:	(bad)  
   140027816:	(bad)  
   140027817:	(bad)  
   140027818:	(bad)  
   140027819:	(bad)  
   14002781a:	(bad)  
   14002781b:	(bad)  
   14002781c:	(bad)  
   14002781d:	(bad)  
   14002781e:	(bad)  
   14002781f:	inc    DWORD PTR [rax+rax*1]
   140027822:	add    eax,0xff000600
   140027827:	(bad)  
   140027828:	(bad)  
   140027829:	dec    DWORD PTR [rcx]
   14002782b:	add    BYTE PTR [rdx],cl
   14002782d:	add    BYTE PTR [rbx],cl
   14002782f:	add    bh,bh
   140027831:	(bad)  
   140027832:	(bad)  
   140027833:	dec    DWORD PTR [rsi]
   140027835:	add    bh,bh
   140027837:	call   QWORD PTR [rax]
   140027839:	add    bh,bh
   14002783b:	(bad)  
   14002783c:	(bad)  
   14002783d:	(bad)  
   14002783e:	(bad)  
   14002783f:	call   QWORD PTR [rax+rax*1]
   140027842:	adc    eax,0xff001600
   140027847:	(bad)  
   140027848:	(bad)  
   140027849:	(bad)  
   14002784a:	(bad)  
   14002784b:	(bad)  
   14002784c:	(bad)  
   14002784d:	(bad)  
   14002784e:	(bad)  
   14002784f:	(bad)  
   140027850:	(bad)  
   140027851:	call   FWORD PTR [rip+0x1f001e00]        # 0x15f029657
   140027857:	add    BYTE PTR [rax],ah
   140027859:	add    bh,bh
   14002785b:	(bad)  
   14002785c:	(bad)  
   14002785d:	(bad)  
   14002785e:	(bad)  
   14002785f:	(bad)  
   140027860:	(bad)  
   140027861:	(bad)  
   140027862:	(bad)  
   140027863:	(bad)  
   140027864:	(bad)  
   140027865:	(bad)  
   140027866:	(bad)  
   140027867:	(bad)  
   140027868:	(bad)  
   140027869:	(bad)  
   14002786a:	(bad)  
   14002786b:	(bad)  
   14002786c:	(bad)  
   14002786d:	jmp    FWORD PTR [rbx]
   14002786f:	add    bh,bh
   140027871:	(bad)  
   140027872:	(bad)  
   140027873:	(bad)  
   140027874:	(bad)  
   140027875:	jmp    FWORD PTR [rdi]
   140027877:	add    bh,bh
   140027879:	(bad)  
   14002787a:	(bad)  
   14002787b:	(bad)  
   14002787c:	(bad)  
   14002787d:	(bad)  
   14002787e:	(bad)  
   14002787f:	(bad)  
   140027880:	(bad)  
   140027881:	(bad)  
   140027882:	(bad)  
   140027883:	(bad)  
   140027884:	(bad)  
   140027885:	(bad)  
   140027886:	(bad)  
   140027887:	(bad)  
   140027888:	(bad)  
   140027889:	(bad)  
   14002788a:	(bad)  
   14002788b:	(bad)  
   14002788c:	(bad)  
   14002788d:	(bad)  
   14002788e:	cmp    eax,DWORD PTR [rax]
   140027890:	(bad)  
   140027891:	(bad)  
   140027892:	(bad)  
   140027893:	(bad)  
   140027894:	(bad)  
   140027895:	(bad)  
   140027896:	(bad)  
   140027897:	(bad)  
   140027898:	(bad)  
   140027899:	inc    DWORD PTR [rcx+0x0]
   14002789c:	rex.X add BYTE PTR [rbx+0x0],al
   1400278a0:	add    BYTE PTR [rbp+0x0],r8b
   1400278a4:	rex.RX add BYTE PTR [rdi+0x0],r8b
   1400278a8:	(bad)  
   1400278a9:	dec    DWORD PTR [rcx+0x0]
   1400278ac:	rex.WX add BYTE PTR [rbx+0x0],cl
   1400278b0:	rex.WR add BYTE PTR [rbp+0x0],r9b
   1400278b4:	rex.WRX add dil,r15b
   1400278b7:	(bad)  
   1400278b8:	(bad)  
   1400278b9:	call   QWORD PTR [rcx+0x0]
   1400278bc:	push   rdx
   1400278bd:	add    BYTE PTR [rbx+0x0],dl
   1400278c0:	push   rsp
   1400278c1:	add    BYTE PTR [rbp+0x0],dl
   1400278c4:	push   rsi
   1400278c5:	add    bh,bh
   1400278c7:	(bad)  
   1400278c8:	(bad)  
   1400278c9:	(bad)  
   1400278ca:	(bad)  
   1400278cb:	(bad)  
   1400278cc:	(bad)  
   1400278cd:	(bad)  
   1400278ce:	(bad)  
   1400278cf:	(bad)  
   1400278d0:	(bad)  
   1400278d1:	(bad)  
   1400278d2:	(bad)  
   1400278d3:	call   FWORD PTR [rsi+0x0]
   1400278d6:	pop    rdi
   1400278d7:	add    BYTE PTR [rax+0x0],ah
   1400278da:	(bad)  
   1400278db:	(bad)  
   1400278dc:	(bad)  
   1400278dd:	(bad)  
   1400278de:	(bad)  
   1400278df:	(bad)  
   1400278e0:	(bad)  
   1400278e1:	(bad)  
   1400278e2:	(bad)  
   1400278e3:	(bad)  
   1400278e4:	(bad)  
   1400278e5:	(bad)  
   1400278e6:	(bad)  
   1400278e7:	(bad)  
   1400278e8:	(bad)  
   1400278e9:	(bad)  
   1400278ea:	(bad)  
   1400278eb:	inc    DWORD PTR [rax+rax*1]
   1400278ee:	add    eax,0xff000600
   1400278f3:	(bad)  
   1400278f4:	(bad)  
   1400278f5:	dec    DWORD PTR [rcx]
   1400278f7:	add    BYTE PTR [rdx],cl
   1400278f9:	add    BYTE PTR [rbx],cl
   1400278fb:	add    bh,bh
   1400278fd:	(bad)  
   1400278fe:	(bad)  
   1400278ff:	dec    DWORD PTR [rsi]
   140027901:	add    bh,bh
   140027903:	call   QWORD PTR [rax]
   140027905:	add    bh,bh
   140027907:	(bad)  
   140027908:	(bad)  
   140027909:	(bad)  
   14002790a:	(bad)  
   14002790b:	call   QWORD PTR [rax+rax*1]
   14002790e:	adc    eax,0xff001600
   140027913:	(bad)  
   140027914:	(bad)  
   140027915:	(bad)  
   140027916:	(bad)  
   140027917:	(bad)  
   140027918:	(bad)  
   140027919:	(bad)  
   14002791a:	(bad)  
   14002791b:	(bad)  
   14002791c:	(bad)  
   14002791d:	call   FWORD PTR [rip+0x1f001e00]        # 0x15f029723
   140027923:	add    BYTE PTR [rax],ah
   140027925:	add    bh,bh
   140027927:	(bad)  
   140027928:	(bad)  
   140027929:	(bad)  
   14002792a:	(bad)  
   14002792b:	(bad)  
   14002792c:	(bad)  
   14002792d:	(bad)  
   14002792e:	(bad)  
   14002792f:	(bad)  
   140027930:	(bad)  
   140027931:	(bad)  
   140027932:	(bad)  
   140027933:	(bad)  
   140027934:	(bad)  
   140027935:	(bad)  
   140027936:	(bad)  
   140027937:	(bad)  
   140027938:	(bad)  
   140027939:	jmp    FWORD PTR [rbx]
   14002793b:	add    bh,bh
   14002793d:	(bad)  
   14002793e:	(bad)  
   14002793f:	(bad)  
   140027940:	(bad)  
   140027941:	jmp    FWORD PTR [rdi]
   140027943:	add    bh,bh
   140027945:	(bad)  
   140027946:	(bad)  
   140027947:	(bad)  
   140027948:	(bad)  
   140027949:	(bad)  
   14002794a:	(bad)  
   14002794b:	(bad)  
   14002794c:	(bad)  
   14002794d:	(bad)  
   14002794e:	(bad)  
   14002794f:	(bad)  
   140027950:	(bad)  
   140027951:	(bad)  
   140027952:	(bad)  
   140027953:	(bad)  
   140027954:	(bad)  
   140027955:	(bad)  
   140027956:	(bad)  
   140027957:	(bad)  
   140027958:	(bad)  
   140027959:	(bad)  
   14002795a:	cmp    eax,DWORD PTR [rax]
   14002795c:	(bad)  
   14002795d:	(bad)  
   14002795e:	(bad)  
   14002795f:	(bad)  
   140027960:	(bad)  
   140027961:	(bad)  
   140027962:	(bad)  
   140027963:	(bad)  
   140027964:	(bad)  
   140027965:	inc    DWORD PTR [rcx+0x0]
   140027968:	rex.X add BYTE PTR [rbx+0x0],al
   14002796c:	add    BYTE PTR [rbp+0x0],r8b
   140027970:	rex.RX add BYTE PTR [rdi+0x0],r8b
   140027974:	(bad)  
   140027975:	dec    DWORD PTR [rcx+0x0]
   140027978:	rex.WX add BYTE PTR [rbx+0x0],cl
   14002797c:	rex.WR add BYTE PTR [rbp+0x0],r9b
   140027980:	rex.WRX add dil,r15b
   140027983:	(bad)  
   140027984:	(bad)  
   140027985:	call   QWORD PTR [rcx+0x0]
   140027988:	push   rdx
   140027989:	add    BYTE PTR [rbx+0x0],dl
   14002798c:	push   rsp
   14002798d:	add    BYTE PTR [rbp+0x0],dl
   140027990:	push   rsi
   140027991:	add    bh,bh
   140027993:	(bad)  
   140027994:	(bad)  
   140027995:	(bad)  
   140027996:	(bad)  
   140027997:	(bad)  
   140027998:	(bad)  
   140027999:	(bad)  
   14002799a:	(bad)  
   14002799b:	(bad)  
   14002799c:	(bad)  
   14002799d:	(bad)  
   14002799e:	(bad)  
   14002799f:	call   FWORD PTR [rsi+0x0]
   1400279a2:	pop    rdi
   1400279a3:	add    BYTE PTR [rax+0x0],ah
   1400279a6:	(bad)  
   1400279a7:	(bad)  
   1400279a8:	(bad)  
   1400279a9:	(bad)  
   1400279aa:	(bad)  
   1400279ab:	(bad)  
   1400279ac:	(bad)  
   1400279ad:	(bad)  
   1400279ae:	(bad)  
   1400279af:	(bad)  
   1400279b0:	(bad)  
   1400279b1:	(bad)  
   1400279b2:	(bad)  
   1400279b3:	(bad)  
   1400279b4:	(bad)  
   1400279b5:	(bad)  
   1400279b6:	(bad)  
   1400279b7:	inc    DWORD PTR [rax+rax*1]
   1400279ba:	add    eax,0xff000600
   1400279bf:	(bad)  
   1400279c0:	(bad)  
   1400279c1:	dec    DWORD PTR [rcx]
   1400279c3:	add    BYTE PTR [rdx],cl
   1400279c5:	add    BYTE PTR [rbx],cl
   1400279c7:	add    bh,bh
   1400279c9:	(bad)  
   1400279ca:	(bad)  
   1400279cb:	dec    DWORD PTR [rsi]
   1400279cd:	add    bh,bh
   1400279cf:	call   QWORD PTR [rax]
   1400279d1:	add    bh,bh
   1400279d3:	(bad)  
   1400279d4:	(bad)  
   1400279d5:	(bad)  
   1400279d6:	(bad)  
   1400279d7:	call   QWORD PTR [rax+rax*1]
   1400279da:	adc    eax,0xff001600
   1400279df:	(bad)  
   1400279e0:	(bad)  
   1400279e1:	(bad)  
   1400279e2:	(bad)  
   1400279e3:	(bad)  
   1400279e4:	(bad)  
   1400279e5:	(bad)  
   1400279e6:	(bad)  
   1400279e7:	(bad)  
   1400279e8:	(bad)  
   1400279e9:	call   FWORD PTR [rip+0x1f001e00]        # 0x15f0297ef
   1400279ef:	add    BYTE PTR [rax],ah
   1400279f1:	add    bh,bh
   1400279f3:	(bad)  
   1400279f4:	(bad)  
   1400279f5:	(bad)  
   1400279f6:	(bad)  
   1400279f7:	(bad)  
   1400279f8:	(bad)  
   1400279f9:	(bad)  
   1400279fa:	(bad)  
   1400279fb:	(bad)  
   1400279fc:	(bad)  
   1400279fd:	(bad)  
   1400279fe:	(bad)  
   1400279ff:	(bad)  
   140027a00:	(bad)  
   140027a01:	(bad)  
   140027a02:	(bad)  
   140027a03:	(bad)  
   140027a04:	(bad)  
   140027a05:	jmp    FWORD PTR [rbx]
   140027a07:	add    bh,bh
   140027a09:	(bad)  
   140027a0a:	(bad)  
   140027a0b:	(bad)  
   140027a0c:	(bad)  
   140027a0d:	jmp    FWORD PTR [rdi]
   140027a0f:	add    bh,bh
   140027a11:	(bad)  
   140027a12:	(bad)  
   140027a13:	(bad)  
   140027a14:	(bad)  
   140027a15:	(bad)  
   140027a16:	(bad)  
   140027a17:	(bad)  
   140027a18:	(bad)  
   140027a19:	(bad)  
   140027a1a:	(bad)  
   140027a1b:	(bad)  
   140027a1c:	(bad)  
   140027a1d:	push   QWORD PTR [rdi]
   140027a1f:	add    bh,bh
   140027a21:	(bad)  
   140027a22:	(bad)  
   140027a23:	(bad)  
   140027a24:	(bad)  
   140027a25:	(bad)  
   140027a26:	cmp    eax,DWORD PTR [rax]
   140027a28:	(bad)  
   140027a29:	(bad)  
   140027a2a:	(bad)  
   140027a2b:	(bad)  
   140027a2c:	(bad)  
   140027a2d:	(bad)  
   140027a2e:	(bad)  
   140027a2f:	(bad)  
   140027a30:	(bad)  
   140027a31:	inc    DWORD PTR [rcx+0x0]
   140027a34:	rex.X add BYTE PTR [rbx+0x0],al
   140027a38:	add    BYTE PTR [rbp+0x0],r8b
   140027a3c:	rex.RX add BYTE PTR [rdi+0x0],r8b
   140027a40:	(bad)  
   140027a41:	dec    DWORD PTR [rcx+0x0]
   140027a44:	rex.WX add BYTE PTR [rbx+0x0],cl
   140027a48:	rex.WR add BYTE PTR [rbp+0x0],r9b
   140027a4c:	rex.WRX add dil,r15b
   140027a4f:	(bad)  
   140027a50:	(bad)  
   140027a51:	call   QWORD PTR [rcx+0x0]
   140027a54:	push   rdx
   140027a55:	add    BYTE PTR [rbx+0x0],dl
   140027a58:	push   rsp
   140027a59:	add    BYTE PTR [rbp+0x0],dl
   140027a5c:	push   rsi
   140027a5d:	add    bh,bh
   140027a5f:	(bad)  
   140027a60:	(bad)  
   140027a61:	(bad)  
   140027a62:	(bad)  
   140027a63:	(bad)  
   140027a64:	(bad)  
   140027a65:	(bad)  
   140027a66:	(bad)  
   140027a67:	(bad)  
   140027a68:	(bad)  
   140027a69:	(bad)  
   140027a6a:	(bad)  
   140027a6b:	call   FWORD PTR [rsi+0x0]
   140027a6e:	pop    rdi
   140027a6f:	add    BYTE PTR [rax+0x0],ah
   140027a72:	(bad)  
   140027a73:	(bad)  
   140027a74:	(bad)  
   140027a75:	(bad)  
   140027a76:	(bad)  
   140027a77:	(bad)  
   140027a78:	(bad)  
   140027a79:	(bad)  
   140027a7a:	(bad)  
   140027a7b:	(bad)  
   140027a7c:	(bad)  
   140027a7d:	(bad)  
   140027a7e:	(bad)  
   140027a7f:	(bad)  
   140027a80:	(bad)  
   140027a81:	(bad)  
   140027a82:	(bad)  
   140027a83:	inc    DWORD PTR [rax+rax*1]
   140027a86:	(bad)  
   140027a87:	(bad)  
   140027a88:	(bad)  
   140027a89:	(bad)  
   140027a8a:	(bad)  
   140027a8b:	(bad)  
   140027a8c:	(bad)  
   140027a8d:	dec    DWORD PTR [rcx]
   140027a8f:	add    bh,bh
   140027a91:	dec    DWORD PTR [rbx]
   140027a93:	add    BYTE PTR [rax+rax*1],cl
   140027a96:	or     eax,0xff000e00
   140027a9b:	(bad)  
   140027a9c:	(bad)  
   140027a9d:	(bad)  
   140027a9e:	(bad)  
   140027a9f:	(bad)  
   140027aa0:	(bad)  
   140027aa1:	(bad)  
   140027aa2:	(bad)  
   140027aa3:	(bad)  
   140027aa4:	(bad)  
   140027aa5:	call   QWORD PTR [rip+0xffffffffff001600]        # 0x13f0290ab
   140027aab:	(bad)  
   140027aac:	(bad)  
   140027aad:	(bad)  
   140027aae:	(bad)  
   140027aaf:	(bad)  
   140027ab0:	(bad)  
   140027ab1:	(bad)  
   140027ab2:	(bad)  
   140027ab3:	(bad)  
   140027ab4:	(bad)  
   140027ab5:	call   FWORD PTR [rip+0xffffffffff001e00]        # 0x13f0298bb
   140027abb:	(bad)  
   140027abc:	(bad)  
   140027abd:	jmp    QWORD PTR [rcx]
   140027abf:	add    BYTE PTR [rdx],ah
   140027ac1:	add    bh,bh
   140027ac3:	jmp    QWORD PTR [rax+rax*1]
   140027ac6:	(bad)  
   140027ac7:	(bad)  
   140027ac8:	(bad)  
   140027ac9:	(bad)  
   140027aca:	(bad)  
   140027acb:	jmp    FWORD PTR [rax]
   140027acd:	add    bh,bh
   140027acf:	jmp    FWORD PTR [rdx]
   140027ad1:	add    BYTE PTR [rbx],ch
   140027ad3:	add    BYTE PTR [rax+rax*1],ch
   140027ad6:	(bad)  
   140027ad7:	(bad)  
   140027ad8:	(bad)  
   140027ad9:	jmp    FWORD PTR [rdi]
   140027adb:	add    bh,bh
   140027add:	(bad)  
   140027ade:	(bad)  
   140027adf:	(bad)  
   140027ae0:	(bad)  
   140027ae1:	push   QWORD PTR [rbx]
   140027ae3:	add    bh,bh
   140027ae5:	push   QWORD PTR [rip+0xffffffffffffff00]        # 0x1400279eb
   140027aeb:	(bad)  
   140027aec:	(bad)  
   140027aed:	(bad)  
   140027aee:	(bad)  
   140027aef:	(bad)  
   140027af0:	(bad)  
   140027af1:	(bad)  
   140027af2:	cmp    eax,DWORD PTR [rax]
   140027af4:	(bad)  
   140027af5:	(bad)  
   140027af6:	cmp    eax,0xffffff00
   140027afb:	(bad)  
   140027afc:	(bad)  
   140027afd:	inc    DWORD PTR [rcx+0x0]
   140027b00:	rex.X add BYTE PTR [rbx+0x0],al
   140027b04:	add    BYTE PTR [rbp+0x0],r8b
   140027b08:	rex.RX add BYTE PTR [rdi+0x0],r8b
   140027b0c:	rex.W add BYTE PTR [rcx+0x0],cl
   140027b10:	rex.WX add BYTE PTR [rbx+0x0],cl
   140027b14:	rex.WR add BYTE PTR [rbp+0x0],r9b
   140027b18:	rex.WRX add dil,r15b
   140027b1b:	(bad)  
   140027b1c:	(bad)  
   140027b1d:	call   QWORD PTR [rcx+0x0]
   140027b20:	push   rdx
   140027b21:	add    BYTE PTR [rbx+0x0],dl
   140027b24:	push   rsp
   140027b25:	add    BYTE PTR [rbp+0x0],dl
   140027b28:	(bad)  
   140027b29:	call   QWORD PTR [rdi+0x0]
   140027b2c:	(bad)  
   140027b2d:	(bad)  
   140027b2e:	(bad)  
   140027b2f:	(bad)  
   140027b30:	(bad)  
   140027b31:	(bad)  
   140027b32:	(bad)  
   140027b33:	(bad)  
   140027b34:	(bad)  
   140027b35:	(bad)  
   140027b36:	(bad)  
   140027b37:	call   FWORD PTR [rsi+0x0]
   140027b3a:	pop    rdi
   140027b3b:	add    BYTE PTR [rax+0x0],ah
   140027b3e:	(bad)  
   140027b3f:	(bad)  
   140027b40:	(bad)  
   140027b41:	(bad)  
   140027b42:	(bad)  
   140027b43:	(bad)  
   140027b44:	(bad)  
   140027b45:	(bad)  
   140027b46:	(bad)  
   140027b47:	(bad)  
   140027b48:	(bad)  
   140027b49:	(bad)  
   140027b4a:	(bad)  
   140027b4b:	(bad)  
   140027b4c:	(bad)  
   140027b4d:	(bad)  
   140027b4e:	(bad)  
   140027b4f:	inc    DWORD PTR [rax+rax*1]
   140027b52:	(bad)  
   140027b53:	(bad)  
   140027b54:	(bad)  
   140027b55:	(bad)  
   140027b56:	(bad)  
   140027b57:	(bad)  
   140027b58:	(bad)  
   140027b59:	dec    DWORD PTR [rcx]
   140027b5b:	add    bh,bh
   140027b5d:	dec    DWORD PTR [rbx]
   140027b5f:	add    BYTE PTR [rax+rax*1],cl
   140027b62:	or     eax,0xff000e00
   140027b67:	(bad)  
   140027b68:	(bad)  
   140027b69:	(bad)  
   140027b6a:	(bad)  
   140027b6b:	(bad)  
   140027b6c:	(bad)  
   140027b6d:	(bad)  
   140027b6e:	(bad)  
   140027b6f:	(bad)  
   140027b70:	(bad)  
   140027b71:	call   QWORD PTR [rip+0xffffffffff001600]        # 0x13f029177
   140027b77:	(bad)  
   140027b78:	(bad)  
   140027b79:	(bad)  
   140027b7a:	(bad)  
   140027b7b:	(bad)  
   140027b7c:	(bad)  
   140027b7d:	(bad)  
   140027b7e:	(bad)  
   140027b7f:	(bad)  
   140027b80:	(bad)  
   140027b81:	call   FWORD PTR [rip+0xffffffffff001e00]        # 0x13f029987
   140027b87:	(bad)  
   140027b88:	(bad)  
   140027b89:	jmp    QWORD PTR [rcx]
   140027b8b:	add    BYTE PTR [rdx],ah
   140027b8d:	add    bh,bh
   140027b8f:	jmp    QWORD PTR [rax+rax*1]
   140027b92:	(bad)  
   140027b93:	(bad)  
   140027b94:	(bad)  
   140027b95:	(bad)  
   140027b96:	(bad)  
   140027b97:	jmp    FWORD PTR [rax]
   140027b99:	add    bh,bh
   140027b9b:	jmp    FWORD PTR [rdx]
   140027b9d:	add    BYTE PTR [rbx],ch
   140027b9f:	add    BYTE PTR [rax+rax*1],ch
   140027ba2:	(bad)  
   140027ba3:	(bad)  
   140027ba4:	(bad)  
   140027ba5:	jmp    FWORD PTR [rdi]
   140027ba7:	add    bh,bh
   140027ba9:	(bad)  
   140027baa:	(bad)  
   140027bab:	(bad)  
   140027bac:	(bad)  
   140027bad:	push   QWORD PTR [rbx]
   140027baf:	add    bh,bh
   140027bb1:	push   QWORD PTR [rip+0xffffffffffffff00]        # 0x140027ab7
   140027bb7:	(bad)  
   140027bb8:	(bad)  
   140027bb9:	(bad)  
   140027bba:	(bad)  
   140027bbb:	(bad)  
   140027bbc:	(bad)  
   140027bbd:	(bad)  
   140027bbe:	cmp    eax,DWORD PTR [rax]
   140027bc0:	(bad)  
   140027bc1:	(bad)  
   140027bc2:	cmp    eax,0xffffff00
   140027bc7:	(bad)  
   140027bc8:	(bad)  
   140027bc9:	inc    DWORD PTR [rcx+0x0]
   140027bcc:	rex.X add BYTE PTR [rbx+0x0],al
   140027bd0:	add    BYTE PTR [rbp+0x0],r8b
   140027bd4:	rex.RX add BYTE PTR [rdi+0x0],r8b
   140027bd8:	rex.W add BYTE PTR [rcx+0x0],cl
   140027bdc:	rex.WX add BYTE PTR [rbx+0x0],cl
   140027be0:	rex.WR add BYTE PTR [rbp+0x0],r9b
   140027be4:	rex.WRX add dil,r15b
   140027be7:	(bad)  
   140027be8:	(bad)  
   140027be9:	call   QWORD PTR [rcx+0x0]
   140027bec:	push   rdx
   140027bed:	add    BYTE PTR [rbx+0x0],dl
   140027bf0:	push   rsp
   140027bf1:	add    BYTE PTR [rbp+0x0],dl
   140027bf4:	(bad)  
   140027bf5:	call   QWORD PTR [rdi+0x0]
   140027bf8:	(bad)  
   140027bf9:	(bad)  
   140027bfa:	(bad)  
   140027bfb:	(bad)  
   140027bfc:	(bad)  
   140027bfd:	(bad)  
   140027bfe:	(bad)  
   140027bff:	(bad)  
   140027c00:	(bad)  
   140027c01:	(bad)  
   140027c02:	(bad)  
   140027c03:	call   FWORD PTR [rsi+0x0]
   140027c06:	pop    rdi
   140027c07:	add    BYTE PTR [rax+0x0],ah
   140027c0a:	(bad)  
   140027c0b:	(bad)  
   140027c0c:	(bad)  
   140027c0d:	(bad)  
   140027c0e:	(bad)  
   140027c0f:	(bad)  
   140027c10:	(bad)  
   140027c11:	(bad)  
   140027c12:	(bad)  
   140027c13:	(bad)  
   140027c14:	(bad)  
   140027c15:	(bad)  
   140027c16:	(bad)  
   140027c17:	(bad)  
   140027c18:	(bad)  
   140027c19:	(bad)  
   140027c1a:	(bad)  
   140027c1b:	inc    DWORD PTR [rax+rax*1]
   140027c1e:	add    eax,0xff000600
   140027c23:	(bad)  
   140027c24:	(bad)  
   140027c25:	dec    DWORD PTR [rcx]
   140027c27:	add    BYTE PTR [rdx],cl
   140027c29:	add    BYTE PTR [rbx],cl
   140027c2b:	add    BYTE PTR [rax+rax*1],cl
   140027c2e:	or     eax,0xff000e00
   140027c33:	call   QWORD PTR [rax]
   140027c35:	add    bh,bh
   140027c37:	(bad)  
   140027c38:	(bad)  
   140027c39:	(bad)  
   140027c3a:	(bad)  
   140027c3b:	call   QWORD PTR [rax+rax*1]
   140027c3e:	adc    eax,0xff001600
   140027c43:	(bad)  
   140027c44:	(bad)  
   140027c45:	(bad)  
   140027c46:	(bad)  
   140027c47:	(bad)  
   140027c48:	(bad)  
   140027c49:	(bad)  
   140027c4a:	(bad)  
   140027c4b:	(bad)  
   140027c4c:	(bad)  
   140027c4d:	call   FWORD PTR [rip+0x1f001e00]        # 0x15f029a53
   140027c53:	add    BYTE PTR [rax],ah
   140027c55:	add    BYTE PTR [rcx],ah
   140027c57:	add    BYTE PTR [rdx],ah
   140027c59:	add    bh,bh
   140027c5b:	jmp    QWORD PTR [rax+rax*1]
   140027c5e:	(bad)  
   140027c5f:	(bad)  
   140027c60:	(bad)  
   140027c61:	(bad)  
   140027c62:	(bad)  
   140027c63:	jmp    FWORD PTR [rax]
   140027c65:	add    bh,bh
   140027c67:	jmp    FWORD PTR [rdx]
   140027c69:	add    BYTE PTR [rbx],ch
   140027c6b:	add    BYTE PTR [rax+rax*1],ch
   140027c6e:	(bad)  
   140027c6f:	(bad)  
   140027c70:	(bad)  
   140027c71:	jmp    FWORD PTR [rdi]
   140027c73:	add    bh,bh
   140027c75:	(bad)  
   140027c76:	(bad)  
   140027c77:	(bad)  
   140027c78:	(bad)  
   140027c79:	push   QWORD PTR [rbx]
   140027c7b:	add    bh,bh
   140027c7d:	push   QWORD PTR [rip+0xffffffffffffff00]        # 0x140027b83
   140027c83:	(bad)  
   140027c84:	(bad)  
   140027c85:	(bad)  
   140027c86:	(bad)  
   140027c87:	(bad)  
   140027c88:	(bad)  
   140027c89:	(bad)  
   140027c8a:	cmp    eax,DWORD PTR [rax]
   140027c8c:	(bad)  
   140027c8d:	(bad)  
   140027c8e:	cmp    eax,0xffffff00
   140027c93:	(bad)  
   140027c94:	(bad)  
   140027c95:	inc    DWORD PTR [rcx+0x0]
   140027c98:	rex.X add BYTE PTR [rbx+0x0],al
   140027c9c:	add    BYTE PTR [rbp+0x0],r8b
   140027ca0:	rex.RX add BYTE PTR [rdi+0x0],r8b
   140027ca4:	rex.W add BYTE PTR [rcx+0x0],cl
   140027ca8:	rex.WX add BYTE PTR [rbx+0x0],cl
   140027cac:	rex.WR add BYTE PTR [rbp+0x0],r9b
   140027cb0:	rex.WRX add dil,r15b
   140027cb3:	(bad)  
   140027cb4:	(bad)  
   140027cb5:	call   QWORD PTR [rcx+0x0]
   140027cb8:	push   rdx
   140027cb9:	add    BYTE PTR [rbx+0x0],dl
   140027cbc:	push   rsp
   140027cbd:	add    BYTE PTR [rbp+0x0],dl
   140027cc0:	push   rsi
   140027cc1:	add    BYTE PTR [rdi+0x0],dl
   140027cc4:	(bad)  
   140027cc5:	(bad)  
   140027cc6:	(bad)  
   140027cc7:	(bad)  
   140027cc8:	(bad)  
   140027cc9:	(bad)  
   140027cca:	(bad)  
   140027ccb:	(bad)  
   140027ccc:	(bad)  
   140027ccd:	(bad)  
   140027cce:	(bad)  
   140027ccf:	call   FWORD PTR [rsi+0x0]
   140027cd2:	pop    rdi
   140027cd3:	add    BYTE PTR [rax+0x0],ah
   140027cd6:	(bad)  
   140027cd7:	(bad)  
   140027cd8:	(bad)  
   140027cd9:	(bad)  
   140027cda:	(bad)  
   140027cdb:	(bad)  
   140027cdc:	(bad)  
   140027cdd:	(bad)  
   140027cde:	(bad)  
   140027cdf:	(bad)  
   140027ce0:	(bad)  
   140027ce1:	(bad)  
   140027ce2:	(bad)  
   140027ce3:	(bad)  
   140027ce4:	(bad)  
   140027ce5:	(bad)  
   140027ce6:	(bad)  
   140027ce7:	inc    DWORD PTR [rax+rax*1]
   140027cea:	add    eax,0xff000600
   140027cef:	(bad)  
   140027cf0:	(bad)  
   140027cf1:	dec    DWORD PTR [rcx]
   140027cf3:	add    BYTE PTR [rdx],cl
   140027cf5:	add    BYTE PTR [rbx],cl
   140027cf7:	add    BYTE PTR [rax+rax*1],cl
   140027cfa:	or     eax,0xff000e00
   140027cff:	call   QWORD PTR [rax]
   140027d01:	add    bh,bh
   140027d03:	(bad)  
   140027d04:	(bad)  
   140027d05:	(bad)  
   140027d06:	(bad)  
   140027d07:	call   QWORD PTR [rax+rax*1]
   140027d0a:	adc    eax,0xff001600
   140027d0f:	(bad)  
   140027d10:	(bad)  
   140027d11:	(bad)  
   140027d12:	(bad)  
   140027d13:	(bad)  
   140027d14:	(bad)  
   140027d15:	(bad)  
   140027d16:	(bad)  
   140027d17:	(bad)  
   140027d18:	(bad)  
   140027d19:	call   FWORD PTR [rip+0x1f001e00]        # 0x15f029b1f
   140027d1f:	add    BYTE PTR [rax],ah
   140027d21:	add    BYTE PTR [rcx],ah
   140027d23:	add    BYTE PTR [rdx],ah
   140027d25:	add    bh,bh
   140027d27:	jmp    QWORD PTR [rax+rax*1]
   140027d2a:	(bad)  
   140027d2b:	(bad)  
   140027d2c:	(bad)  
   140027d2d:	(bad)  
   140027d2e:	(bad)  
   140027d2f:	jmp    FWORD PTR [rax]
   140027d31:	add    bh,bh
   140027d33:	jmp    FWORD PTR [rdx]
   140027d35:	add    BYTE PTR [rbx],ch
   140027d37:	add    BYTE PTR [rax+rax*1],ch
   140027d3a:	(bad)  
   140027d3b:	(bad)  
   140027d3c:	(bad)  
   140027d3d:	jmp    FWORD PTR [rdi]
   140027d3f:	add    bh,bh
   140027d41:	(bad)  
   140027d42:	(bad)  
   140027d43:	(bad)  
   140027d44:	(bad)  
   140027d45:	push   QWORD PTR [rbx]
   140027d47:	add    bh,bh
   140027d49:	push   QWORD PTR [rip+0x37ffff00]        # 0x178027c4f
   140027d4f:	add    bh,bh
   140027d51:	(bad)  
   140027d52:	(bad)  
   140027d53:	(bad)  
   140027d54:	(bad)  
   140027d55:	(bad)  
   140027d56:	cmp    eax,DWORD PTR [rax]
   140027d58:	(bad)  
   140027d59:	(bad)  
   140027d5a:	cmp    eax,0xffffff00
   140027d5f:	(bad)  
   140027d60:	(bad)  
   140027d61:	inc    DWORD PTR [rcx+0x0]
   140027d64:	rex.X add BYTE PTR [rbx+0x0],al
   140027d68:	add    BYTE PTR [rbp+0x0],r8b
   140027d6c:	rex.RX add BYTE PTR [rdi+0x0],r8b
   140027d70:	rex.W add BYTE PTR [rcx+0x0],cl
   140027d74:	rex.WX add BYTE PTR [rbx+0x0],cl
   140027d78:	rex.WR add BYTE PTR [rbp+0x0],r9b
   140027d7c:	rex.WRX add dil,r15b
   140027d7f:	(bad)  
   140027d80:	(bad)  
   140027d81:	call   QWORD PTR [rcx+0x0]
   140027d84:	push   rdx
   140027d85:	add    BYTE PTR [rbx+0x0],dl
   140027d88:	push   rsp
   140027d89:	add    BYTE PTR [rbp+0x0],dl
   140027d8c:	push   rsi
   140027d8d:	add    BYTE PTR [rdi+0x0],dl
   140027d90:	(bad)  
   140027d91:	(bad)  
   140027d92:	(bad)  
   140027d93:	(bad)  
   140027d94:	(bad)  
   140027d95:	(bad)  
   140027d96:	(bad)  
   140027d97:	(bad)  
   140027d98:	(bad)  
   140027d99:	(bad)  
   140027d9a:	(bad)  
   140027d9b:	call   FWORD PTR [rsi+0x0]
   140027d9e:	pop    rdi
   140027d9f:	add    BYTE PTR [rax+0x0],ah
   140027da2:	(bad)  
   140027da3:	(bad)  
   140027da4:	(bad)  
   140027da5:	(bad)  
   140027da6:	(bad)  
   140027da7:	(bad)  
   140027da8:	(bad)  
   140027da9:	(bad)  
   140027daa:	(bad)  
   140027dab:	(bad)  
   140027dac:	(bad)  
   140027dad:	(bad)  
   140027dae:	(bad)  
   140027daf:	(bad)  
   140027db0:	(bad)  
   140027db1:	(bad)  
   140027db2:	(bad)  
   140027db3:	jmp    QWORD PTR [rax]
   140027db5:	add    BYTE PTR [rsi],dl
   140027db7:	add    BYTE PTR [rdx],dl
   140027db9:	add    BYTE PTR [rcx],cl
   140027dbb:	add    BYTE PTR [rdx],dl
   140027dbd:	add    BYTE PTR [rdx],ch
   140027dbf:	add    BYTE PTR [rdx],dl
   140027dc1:	add    BYTE PTR [rsi],cl
   140027dc3:	add    BYTE PTR [rax],ah
   140027dc5:	add    BYTE PTR [rbx],al
   140027dc7:	add    BYTE PTR [rdx],dl
   140027dc9:	add    BYTE PTR [rbx],al
   140027dcb:	add    BYTE PTR [rbx],al
   140027dcd:	add    BYTE PTR [rdx],dl
   140027dcf:	add    BYTE PTR [rdx],dl
   140027dd1:	add    BYTE PTR [rax],ah
   140027dd3:	add    BYTE PTR [rdx],dl
   140027dd5:	add    BYTE PTR [rax],ah
   140027dd7:	add    BYTE PTR [rbx],al
   140027dd9:	add    BYTE PTR [rsi],dl
   140027ddb:	add    BYTE PTR [rbx],al
   140027ddd:	add    BYTE PTR [rdx],dl
   140027ddf:	add    BYTE PTR [rbx],al
   140027de1:	add    BYTE PTR [rdx],dl
   140027de3:	add    BYTE PTR [rcx],bl
   140027de5:	add    BYTE PTR [rdx],dl
   140027de7:	add    BYTE PTR [rsi],dl
   140027de9:	add    BYTE PTR [rsi],cl
   140027deb:	add    BYTE PTR [rdx],dl
   140027ded:	add    BYTE PTR [rdx],dl
   140027def:	add    BYTE PTR [rsi],cl
   140027df1:	add    BYTE PTR [rdx],ch
   140027df3:	add    BYTE PTR [rdx],dl
   140027df5:	add    BYTE PTR [rax],ah
   140027df7:	add    BYTE PTR [rsi],dl
   140027df9:	add    BYTE PTR [rbp+0x0],cl
   140027dfc:	add    eax,DWORD PTR [rax]
   140027dfe:	add    BYTE PTR fs:[rbx],al
   140027e01:	add    BYTE PTR [rbx],al
   140027e03:	add    BYTE PTR [rbx],al
   140027e05:	add    BYTE PTR [rdi+0x0],ah
   140027e08:	sub    al,BYTE PTR [rax]
   140027e0a:	adc    al,BYTE PTR [rax]
   140027e0c:	sub    al,BYTE PTR [rax]
   140027e0e:	adc    al,BYTE PTR [rax]
   140027e10:	add    eax,DWORD PTR [rax]
   140027e12:	add    eax,DWORD PTR [rax]
   140027e14:	sbb    DWORD PTR [rax],eax
   140027e16:	sbb    DWORD PTR [rax],eax
   140027e18:	add    eax,DWORD PTR [rax]
   140027e1a:	imul   eax,DWORD PTR [rax],0x190012
   140027e20:	add    eax,DWORD PTR [rax]
   140027e22:	add    eax,DWORD PTR [rax]
   140027e24:	adc    al,BYTE PTR [rax]
   140027e26:	adc    al,BYTE PTR [rax]
   140027e28:	add    eax,DWORD PTR [rax]
   140027e2a:	adc    al,BYTE PTR [rax]
   140027e2c:	sub    al,BYTE PTR [rax]
   140027e2e:	add    eax,DWORD PTR [rax]
   140027e30:	sub    al,BYTE PTR [rax]
   140027e32:	sub    al,BYTE PTR [rax]
   140027e34:	sub    al,BYTE PTR [rax]
   140027e36:	sbb    DWORD PTR [rax],eax
   140027e38:	adc    al,BYTE PTR [rax]
   140027e3a:	adc    al,BYTE PTR [rax]
   140027e3c:	sub    al,BYTE PTR [rax]
   140027e3e:	add    al,BYTE PTR [rax]
   140027e40:	(bad)  
   140027e41:	call   QWORD PTR [rdx]
   140027e43:	add    BYTE PTR [rdx],dl
   140027e45:	add    BYTE PTR [rdx],ch
   140027e47:	add    BYTE PTR [rdx],dl
   140027e49:	add    BYTE PTR [rdx],dl
   140027e4b:	add    BYTE PTR [rsi],cl
   140027e4d:	add    BYTE PTR [rdx],dl
   140027e4f:	add    BYTE PTR [rsi],cl
   140027e51:	add    BYTE PTR [rdx],dl
   140027e53:	add    BYTE PTR [rdx],al
   140027e55:	add    BYTE PTR [rax+rax*1],al
   140027e58:	add    al,BYTE PTR [rax]
   140027e5a:	adc    al,BYTE PTR [rax]
   140027e5c:	sub    al,BYTE PTR [rax]
   140027e5e:	adc    al,BYTE PTR [rax]
   140027e60:	add    BYTE PTR ss:[rsi],cl
   140027e63:	add    BYTE PTR [rax],bh
   140027e65:	add    BYTE PTR [rdx],dl
   140027e67:	add    bh,bh
   140027e69:	inc    DWORD PTR [rax+rax*1]
   140027e6c:	(bad)  
   140027e6d:	call   QWORD PTR [rdx]
   140027e6f:	add    bh,bh
   140027e71:	call   QWORD PTR [rdx]
   140027e73:	add    BYTE PTR [rdx],dl
   140027e75:	add    BYTE PTR [rdx],dl
   140027e77:	add    BYTE PTR [rdx],dl
   140027e79:	add    BYTE PTR [rsi],dh
   140027e7b:	add    BYTE PTR [rsi],dh
   140027e7d:	add    BYTE PTR [rax],bh
   140027e7f:	add    BYTE PTR [rax],bh
   140027e81:	add    BYTE PTR [rax+rax*1],ch
   140027e84:	add    BYTE PTR ss:[rdx],dl
   140027e87:	add    BYTE PTR [rax],bh
   140027e89:	add    BYTE PTR [rdx],dl
   140027e8b:	add    BYTE PTR [rbx],cl
   140027e8d:	add    BYTE PTR [rax+rax*1],cl
   140027e90:	sub    eax,0xffffff00
   140027e95:	push   QWORD PTR [rbx]
   140027e97:	add    BYTE PTR [rsi],dh
   140027e99:	add    BYTE PTR [rbx],dh
   140027e9b:	add    BYTE PTR [rax],bh
   140027e9d:	add    BYTE PTR [rsi],dh
   140027e9f:	add    BYTE PTR [rdx],ch
   140027ea1:	add    BYTE PTR [rax],bh
   140027ea3:	add    BYTE PTR [rsi],dh
   140027ea5:	add    BYTE PTR [rsi],ch
   140027ea7:	add    BYTE PTR [rsi],dh
   140027ea9:	add    BYTE PTR [rsi],dh
   140027eab:	add    BYTE PTR [rbx],dh
   140027ead:	add    BYTE PTR [rsi],ch
   140027eaf:	add    BYTE PTR [rdx],dh
   140027eb1:	add    BYTE PTR [rbx],bh
   140027eb3:	add    BYTE PTR [rbx],bh
   140027eb5:	add    BYTE PTR [rdx],dl
   140027eb7:	add    BYTE PTR [rdx],ch
   140027eb9:	add    bh,bh
   140027ebb:	(bad)  
   140027ebc:	(bad)  
   140027ebd:	(bad)  
   140027ebe:	(bad)  
   140027ebf:	jmp    FWORD PTR [rip+0x46003600]        # 0x18602b4c5
   140027ec5:	add    BYTE PTR [rsi],dh
   140027ec7:	add    BYTE PTR [rdx],dh
   140027ec9:	add    BYTE PTR [rsi],dh
   140027ecb:	add    BYTE PTR [rbx],bh
   140027ecd:	add    BYTE PTR [rsi],cl
   140027ecf:	add    BYTE PTR [rbx],bh
   140027ed1:	add    BYTE PTR [rdx],al
   140027ed3:	add    BYTE PTR [rbx],bh
   140027ed5:	add    BYTE PTR [rsi],dh
   140027ed7:	add    BYTE PTR [rbx],dl
   140027ed9:	add    BYTE PTR [rax],bh
   140027edb:	add    BYTE PTR [rsi],dh
   140027edd:	add    BYTE PTR [rsi],dh
   140027edf:	add    BYTE PTR [rsi],dh
   140027ee1:	add    BYTE PTR [rax],bh
   140027ee3:	add    BYTE PTR [rsi],cl
   140027ee5:	add    BYTE PTR [rbx],bh
   140027ee7:	add    BYTE PTR [rbx],ch
   140027ee9:	add    BYTE PTR [rsi],dh
   140027eeb:	add    BYTE PTR [rsi],dh
   140027eed:	add    BYTE PTR [rax],bh
   140027eef:	add    BYTE PTR [rax],bh
   140027ef1:	add    BYTE PTR [rdx],dl
   140027ef3:	add    BYTE PTR [rdx],al
   140027ef5:	add    BYTE PTR [rdi],dl
   140027ef7:	add    BYTE PTR [rdx],al
   140027ef9:	add    BYTE PTR [rsi],dh
   140027efb:	add    BYTE PTR [rax+rax*1+0x38],al
   140027eff:	add    BYTE PTR [rsi],cl
   140027f01:	add    BYTE PTR [rsi],dh
   140027f03:	add    BYTE PTR [rsi],dh
   140027f05:	add    BYTE PTR [rdx],al
   140027f07:	add    BYTE PTR [rsi],dh
   140027f09:	add    BYTE PTR [rbx],dl
   140027f0b:	add    BYTE PTR [rbx],al
   140027f0d:	add    BYTE PTR [rax+rax*1],bh
   140027f10:	cmp    al,0x0
   140027f12:	cmp    eax,DWORD PTR [rax]
   140027f14:	adc    al,BYTE PTR [rax]
   140027f16:	add    BYTE PTR ss:[rdx],dl
   140027f19:	add    BYTE PTR [rdx],dl
   140027f1b:	add    BYTE PTR [rbp+0x0],ch
   140027f1e:	adc    al,BYTE PTR [rax]
   140027f20:	cmp    eax,DWORD PTR [rax]
   140027f22:	add    BYTE PTR ss:[rsi],dh
   140027f25:	add    BYTE PTR [rdx],dl
   140027f27:	add    BYTE PTR [rsi],dh
   140027f29:	add    BYTE PTR [rsi],dh
   140027f2b:	add    BYTE PTR [rbx],bh
   140027f2d:	add    BYTE PTR [rbx],bh
   140027f2f:	add    BYTE PTR [rsi],dh
   140027f31:	add    BYTE PTR [rbx],bh
   140027f33:	add    BYTE PTR [rbx],bh
   140027f35:	add    BYTE PTR [rsi],dh
   140027f37:	add    BYTE PTR [rdx],bh
   140027f39:	add    BYTE PTR [rsi],ah
   140027f3b:	add    BYTE PTR [rsi],dh
   140027f3d:	add    BYTE PTR [rdx],bh
   140027f3f:	add    BYTE PTR [rdx],dl
   140027f41:	add    BYTE PTR [rdx],ch
   140027f43:	add    BYTE PTR [rdx],bh
   140027f45:	add    BYTE PTR [rdx],al
   140027f47:	add    BYTE PTR [rsi],dh
   140027f49:	add    BYTE PTR [rdx],al
   140027f4b:	add    BYTE PTR [rdx],dl
   140027f4d:	add    BYTE PTR [rsi],dh
   140027f4f:	add    BYTE PTR [rip+0x2d000200],ch        # 0x16d028155
   140027f55:	add    BYTE PTR [rdx],al
   140027f57:	add    BYTE PTR [rax+rax*1],al
   140027f5a:	add    eax,DWORD PTR [rax]
   140027f5c:	adc    al,BYTE PTR [rax]
   140027f5e:	adc    al,BYTE PTR [rax]
   140027f60:	rex.X add BYTE PTR [rax+0x0],al
   140027f64:	add    eax,DWORD PTR [rax]
   140027f66:	adc    al,BYTE PTR [rax]
   140027f68:	add    BYTE PTR ss:[rdx],dl
   140027f6b:	add    BYTE PTR [rax],bh
   140027f6d:	add    BYTE PTR [rdx],al
   140027f6f:	add    BYTE PTR [rsi],dh
   140027f71:	add    BYTE PTR [rdx],dl
   140027f73:	add    BYTE PTR [rdx],dl
   140027f75:	add    BYTE PTR [rdx],dl
   140027f77:	add    BYTE PTR [rsi],ch
   140027f79:	add    BYTE PTR [rsi],dh
   140027f7b:	add    BYTE PTR [rax+rax*1],bh
   140027f7e:	cmp    BYTE PTR [rax],al
   140027f80:	add    eax,DWORD PTR [rax]
   140027f82:	add    eax,DWORD PTR [rax]
   140027f84:	add    BYTE PTR ss:[rdi],ch
   140027f87:	add    BYTE PTR [rdx],al
   140027f89:	add    BYTE PTR [rcx],bh
   140027f8b:	add    BYTE PTR [rsi],dh
   140027f8d:	add    BYTE PTR [rdx],dl
   140027f8f:	add    BYTE PTR [rax],bh
   140027f91:	add    BYTE PTR [rsi],dh
   140027f93:	add    BYTE PTR [rdx],al
   140027f95:	add    BYTE PTR [rax],bh
   140027f97:	add    BYTE PTR [rsi],dh
   140027f99:	add    BYTE PTR [rsi],dh
   140027f9b:	add    BYTE PTR [rax],bh
   140027f9d:	add    BYTE PTR [rdx],al
   140027f9f:	add    BYTE PTR [rcx],bh
   140027fa1:	add    BYTE PTR [rsi],dh
   140027fa3:	add    BYTE PTR [rdx],al
   140027fa5:	add    BYTE PTR [rdx],dl
   140027fa7:	add    BYTE PTR [rdx],dl
   140027fa9:	add    BYTE PTR [rsi],dh
   140027fab:	add    BYTE PTR [rsi],dh
   140027fad:	add    BYTE PTR [rax],bh
   140027faf:	add    bh,bh
   140027fb1:	(bad)  
   140027fb2:	add    BYTE PTR ds:[rdx],dl
   140027fb5:	add    BYTE PTR [rsi],dh
   140027fb7:	add    BYTE PTR [rax+rax*1],bh
   140027fba:	cmp    BYTE PTR [rax],al
   140027fbc:	(bad)  
   140027fbd:	call   QWORD PTR [rdx]
   140027fbf:	add    BYTE PTR [rsi],cl
   140027fc1:	add    BYTE PTR [rsi],dh
   140027fc3:	add    BYTE PTR [rdx],dl
   140027fc5:	add    BYTE PTR [rsi],dh
   140027fc7:	add    BYTE PTR [rdx],al
   140027fc9:	add    BYTE PTR [rbx],dl
   140027fcb:	add    BYTE PTR [rbx],bh
   140027fcd:	add    bh,bh
   140027fcf:	(bad)  
   140027fd0:	cmp    eax,DWORD PTR [rax]
   140027fd2:	add    BYTE PTR ss:[rsi],dh
   140027fd5:	add    bh,bh
   140027fd7:	(bad)  
   140027fd8:	(bad)  
   140027fd9:	add    BYTE PTR [rax+rax*1],ch
   140027fdc:	cmp    eax,DWORD PTR [rax]
   140027fde:	cmp    eax,DWORD PTR [rax]
   140027fe0:	(bad)  
   140027fe1:	push   QWORD PTR [rsi]
   140027fe3:	add    BYTE PTR [rdx],al
   140027fe5:	add    bh,bh
   140027fe7:	call   QWORD PTR [rdx]
   140027fe9:	add    BYTE PTR [rcx+0x0],al
   140027fec:	cmp    eax,DWORD PTR [rax]
   140027fee:	rex.WR add BYTE PTR [rsi+0x0],r9b
   140027ff2:	pop    rsp
   140027ff3:	add    BYTE PTR [rsi+0x0],bl
   140027ff6:	add    BYTE PTR ss:[rsi],dh
   140027ff9:	add    BYTE PTR [rsi+0x0],cl
   140027ffc:	adc    al,BYTE PTR [rax]
   140027ffe:	rex.WR add BYTE PTR [rbx],r15b
   140028001:	add    BYTE PTR [rbx],bh
   140028003:	add    BYTE PTR [rdx],dl
   140028005:	add    BYTE PTR [rip+0x36003600],bh        # 0x17602b60b
   14002800b:	add    bh,bh
   14002800d:	dec    DWORD PTR [rax+rax*1+0x43]
   140028011:	add    BYTE PTR [rbx],bh
   140028013:	add    BYTE PTR [rbx],bh
   140028015:	add    BYTE PTR [rsi+0x0],cl
   140028018:	rex.WRX add BYTE PTR [rsi],r14b
   14002801b:	add    BYTE PTR [rsi],dh
   14002801d:	add    bh,bh
   14002801f:	push   QWORD PTR [rsi]
   140028021:	add    BYTE PTR [rsi],dh
   140028023:	add    BYTE PTR [rbx],bh
   140028025:	add    BYTE PTR [rbx],bh
   140028027:	add    BYTE PTR [rbp+0x0],al
   14002802a:	cmp    eax,DWORD PTR [rax]
   14002802c:	cmp    eax,DWORD PTR [rax]
   14002802e:	cmp    eax,0xe003d00
   140028033:	add    BYTE PTR [rax+rax*1+0x2f],cl
   140028037:	add    BYTE PTR [rax],dh
   140028039:	add    bh,bh
   14002803b:	inc    DWORD PTR [rdi+0x0]
   14002803e:	(bad)  
   14002803f:	push   QWORD PTR [rsi]
   140028041:	add    BYTE PTR [rsi],cl
   140028043:	add    BYTE PTR [rdi],dl
   140028045:	add    BYTE PTR [rip+0x3b004c00],al        # 0x17b02cc4b
   14002804b:	add    BYTE PTR [rbx],dl
   14002804d:	add    BYTE PTR [rip+0x5001500],bh        # 0x145029553
   140028053:	add    bh,bh
   140028055:	(bad)  
   140028056:	(bad)  
   140028057:	dec    DWORD PTR [rsi]
   140028059:	add    bh,bh
   14002805b:	jmp    QWORD PTR [rbx]
   14002805d:	add    BYTE PTR [rax+rax*1],ah
   140028060:	(bad)  
   140028061:	(bad)  
   140028062:	(bad)  
   140028063:	dec    DWORD PTR [rsi]
   140028065:	add    bh,bh
   140028067:	(bad)  
   140028068:	(bad)  
   140028069:	call   QWORD PTR [rdi]
   14002806b:	add    bh,bh
   14002806d:	(bad)  
   14002806e:	(bad)  
   14002806f:	(bad)  
   140028070:	(bad)  
   140028071:	(bad)  
   140028072:	(bad)  
   140028073:	call   FWORD PTR [rax+0x0]
   140028076:	(bad)  
   140028077:	add    bh,bh
   140028079:	jmp    FWORD PTR [rdx]
   14002807b:	add    bh,bh
   14002807d:	(bad)  
   14002807e:	(bad)  
   14002807f:	(bad)  
   140028080:	(bad)  
   140028081:	jmp    QWORD PTR [rbx]
   140028083:	add    BYTE PTR [rax+rax*1],ah
   140028086:	(bad)  
   140028087:	(bad)  
   140028088:	(bad)  
   140028089:	(bad)  
   14002808a:	(bad)  
   14002808b:	(bad)  
   14002808c:	(bad)  
   14002808d:	jmp    QWORD PTR [rbx]
   14002808f:	add    BYTE PTR [rax+rax*1],ah
   140028092:	sbb    DWORD PTR [rax],eax
   140028094:	sbb    al,BYTE PTR [rax]
   140028096:	sbb    eax,DWORD PTR [rax]
   140028098:	sbb    al,0x0
   14002809a:	sbb    eax,0x1f001e00
   14002809f:	add    bh,bh
   1400280a1:	(bad)  
   1400280a2:	(bad)  
   1400280a3:	(bad)  
   1400280a4:	(bad)  
   1400280a5:	(bad)  
   1400280a6:	(bad)  
   1400280a7:	(bad)  
   1400280a8:	(bad)  
   1400280a9:	(bad)  
   1400280aa:	(bad)  
   1400280ab:	(bad)  
   1400280ac:	(bad)  
   1400280ad:	dec    DWORD PTR [rsi]
   1400280af:	add    bh,bh
   1400280b1:	(bad)  
   1400280b2:	(bad)  
   1400280b3:	(bad)  
   1400280b4:	(bad)  
   1400280b5:	(bad)  
   1400280b6:	(bad)  
   1400280b7:	(bad)  
   1400280b8:	(bad)  
   1400280b9:	(bad)  
   1400280ba:	(bad)  
   1400280bb:	(bad)  
   1400280bc:	(bad)  
   1400280bd:	inc    DWORD PTR [rdx]
   1400280bf:	add    BYTE PTR [rdi],dl
   1400280c1:	add    BYTE PTR [rax],bl
   1400280c3:	add    BYTE PTR [rcx],bl
   1400280c5:	add    BYTE PTR [rdx],bl
   1400280c7:	add    BYTE PTR [rbx],bl
   1400280c9:	add    BYTE PTR [rax+rax*1],bl
   1400280cc:	sbb    eax,0x1f001e00
   1400280d1:	add    BYTE PTR [rsi],cl
   1400280d3:	add    bh,bh
   1400280d5:	(bad)  
   1400280d6:	(bad)  
   1400280d7:	(bad)  
   1400280d8:	(bad)  
   1400280d9:	(bad)  
   1400280da:	(bad)  
   1400280db:	(bad)  
   1400280dc:	(bad)  
   1400280dd:	call   QWORD PTR [rdx]
   1400280df:	add    bh,bh
   1400280e1:	(bad)  
   1400280e2:	(bad)  
   1400280e3:	call   QWORD PTR [rdi]
   1400280e5:	add    BYTE PTR [rax],bl
   1400280e7:	add    BYTE PTR [rcx],bl
   1400280e9:	add    BYTE PTR [rdx],bl
   1400280eb:	add    BYTE PTR [rbx],bl
   1400280ed:	add    BYTE PTR [rax+rax*1],bl
   1400280f0:	sbb    eax,0x1f001e00
   1400280f5:	add    bh,bh
   1400280f7:	(bad)  
   1400280f8:	(bad)  
   1400280f9:	(bad)  
   1400280fa:	(bad)  
   1400280fb:	(bad)  
   1400280fc:	(bad)  
   1400280fd:	(bad)  
   1400280fe:	(bad)  
   1400280ff:	(bad)  
   140028100:	(bad)  
   140028101:	(bad)  
   140028102:	(bad)  
   140028103:	(bad)  
   140028104:	(bad)  
   140028105:	(bad)  
   140028106:	(bad)  
   140028107:	(bad)  
   140028108:	(bad)  
   140028109:	(bad)  
   14002810a:	(bad)  
   14002810b:	(bad)  
   14002810c:	(bad)  
   14002810d:	(bad)  
   14002810e:	(bad)  
   14002810f:	(bad)  
   140028110:	(bad)  
   140028111:	(bad)  
   140028112:	(bad)  
   140028113:	(bad)  
   140028114:	(bad)  
   140028115:	(bad)  
   140028116:	(bad)  
   140028117:	(bad)  
   140028118:	(bad)  
   140028119:	(bad)  
   14002811a:	(bad)  
   14002811b:	(bad)  
   14002811c:	(bad)  
   14002811d:	(bad)  
   14002811e:	(bad)  
   14002811f:	(bad)  
   140028120:	(bad)  
   140028121:	(bad)  
   140028122:	(bad)  
   140028123:	(bad)  
   140028124:	(bad)  
   140028125:	(bad)  
   140028126:	(bad)  
   140028127:	(bad)  
   140028128:	(bad)  
   140028129:	(bad)  
   14002812a:	(bad)  
   14002812b:	(bad)  
   14002812c:	(bad)  
   14002812d:	(bad)  
   14002812e:	(bad)  
   14002812f:	(bad)  
   140028130:	(bad)  
   140028131:	(bad)  
   140028132:	(bad)  
   140028133:	(bad)  
   140028134:	(bad)  
   140028135:	(bad)  
   140028136:	(bad)  
   140028137:	(bad)  
   140028138:	(bad)  
   140028139:	(bad)  
   14002813a:	(bad)  
   14002813b:	(bad)  
   14002813c:	(bad)  
   14002813d:	(bad)  
   14002813e:	(bad)  
   14002813f:	(bad)  
   140028140:	(bad)  
   140028141:	(bad)  
   140028142:	(bad)  
   140028143:	(bad)  
   140028144:	(bad)  
   140028145:	(bad)  
   140028146:	(bad)  
   140028147:	(bad)  
   140028148:	(bad)  
   140028149:	(bad)  
   14002814a:	(bad)  
   14002814b:	(bad)  
   14002814c:	(bad)  
   14002814d:	(bad)  
   14002814e:	(bad)  
   14002814f:	(bad)  
   140028150:	(bad)  
   140028151:	(bad)  
   140028152:	(bad)  
   140028153:	(bad)  
   140028154:	(bad)  
   140028155:	(bad)  
   140028156:	(bad)  
   140028157:	(bad)  
   140028158:	(bad)  
   140028159:	(bad)  
   14002815a:	(bad)  
   14002815b:	(bad)  
   14002815c:	(bad)  
   14002815d:	(bad)  
   14002815e:	(bad)  
   14002815f:	(bad)  
   140028160:	(bad)  
   140028161:	(bad)  
   140028162:	(bad)  
   140028163:	(bad)  
   140028164:	(bad)  
   140028165:	(bad)  
   140028166:	(bad)  
   140028167:	(bad)  
   140028168:	(bad)  
   140028169:	call   FWORD PTR [rax+0x0]
   14002816c:	(bad)  
   14002816d:	(bad)  
   14002816e:	(bad)  
   14002816f:	(bad)  
   140028170:	(bad)  
   140028171:	(bad)  
   140028172:	(bad)  
   140028173:	(bad)  
   140028174:	(bad)  
   140028175:	(bad)  
   140028176:	(bad)  
   140028177:	(bad)  
   140028178:	(bad)  
   140028179:	(bad)  
   14002817a:	(bad)  
   14002817b:	(bad)  
   14002817c:	(bad)  
   14002817d:	(bad)  
   14002817e:	(bad)  
   14002817f:	(bad)  
   140028180:	(bad)  
   140028181:	(bad)  
   140028182:	(bad)  
   140028183:	(bad)  
   140028184:	(bad)  
   140028185:	(bad)  
   140028186:	(bad)  
   140028187:	(bad)  
   140028188:	(bad)  
   140028189:	(bad)  
   14002818a:	(bad)  
   14002818b:	(bad)  
   14002818c:	(bad)  
   14002818d:	(bad)  
   14002818e:	(bad)  
   14002818f:	(bad)  
   140028190:	(bad)  
   140028191:	(bad)  
   140028192:	(bad)  
   140028193:	(bad)  
   140028194:	(bad)  
   140028195:	(bad)  
   140028196:	(bad)  
   140028197:	dec    DWORD PTR [rsi]
   140028199:	add    bh,bh
   14002819b:	(bad)  
   14002819c:	(bad)  
   14002819d:	(bad)  
   14002819e:	(bad)  
   14002819f:	(bad)  
   1400281a0:	(bad)  
   1400281a1:	(bad)  
   1400281a2:	(bad)  
   1400281a3:	(bad)  
   1400281a4:	(bad)  
   1400281a5:	(bad)  
   1400281a6:	(bad)  
   1400281a7:	(bad)  
   1400281a8:	(bad)  
   1400281a9:	call   QWORD PTR [rdi]
   1400281ab:	add    BYTE PTR [rax],bl
   1400281ad:	add    BYTE PTR [rcx],bl
   1400281af:	add    BYTE PTR [rdx],bl
   1400281b1:	add    BYTE PTR [rbx],bl
   1400281b3:	add    BYTE PTR [rax+rax*1],bl
   1400281b6:	sbb    eax,0x1f001e00
   1400281bb:	add    bh,bh
   1400281bd:	(bad)  
   1400281be:	(bad)  
   1400281bf:	(bad)  
   1400281c0:	(bad)  
   1400281c1:	(bad)  
   1400281c2:	(bad)  
   1400281c3:	(bad)  
   1400281c4:	(bad)  
   1400281c5:	(bad)  
   1400281c6:	(bad)  
   1400281c7:	(bad)  
   1400281c8:	(bad)  
   1400281c9:	(bad)  
   1400281ca:	(bad)  
   1400281cb:	(bad)  
   1400281cc:	(bad)  
   1400281cd:	(bad)  
   1400281ce:	(bad)  
   1400281cf:	(bad)  
   1400281d0:	(bad)  
   1400281d1:	(bad)  
   1400281d2:	(bad)  
   1400281d3:	(bad)  
   1400281d4:	(bad)  
   1400281d5:	(bad)  
   1400281d6:	(bad)  
   1400281d7:	(bad)  
   1400281d8:	(bad)  
   1400281d9:	(bad)  
   1400281da:	(bad)  
   1400281db:	(bad)  
   1400281dc:	(bad)  
   1400281dd:	(bad)  
   1400281de:	(bad)  
   1400281df:	(bad)  
   1400281e0:	(bad)  
   1400281e1:	(bad)  
   1400281e2:	(bad)  
   1400281e3:	(bad)  
   1400281e4:	(bad)  
   1400281e5:	(bad)  
   1400281e6:	(bad)  
   1400281e7:	(bad)  
   1400281e8:	(bad)  
   1400281e9:	(bad)  
   1400281ea:	(bad)  
   1400281eb:	(bad)  
   1400281ec:	(bad)  
   1400281ed:	(bad)  
   1400281ee:	(bad)  
   1400281ef:	(bad)  
   1400281f0:	(bad)  
   1400281f1:	(bad)  
   1400281f2:	(bad)  
   1400281f3:	(bad)  
   1400281f4:	(bad)  
   1400281f5:	(bad)  
   1400281f6:	(bad)  
   1400281f7:	(bad)  
   1400281f8:	(bad)  
   1400281f9:	(bad)  
   1400281fa:	(bad)  
   1400281fb:	(bad)  
   1400281fc:	(bad)  
   1400281fd:	(bad)  
   1400281fe:	(bad)  
   1400281ff:	(bad)  
   140028200:	(bad)  
   140028201:	(bad)  
   140028202:	(bad)  
   140028203:	(bad)  
   140028204:	(bad)  
   140028205:	(bad)  
   140028206:	(bad)  
   140028207:	(bad)  
   140028208:	(bad)  
   140028209:	(bad)  
   14002820a:	(bad)  
   14002820b:	(bad)  
   14002820c:	(bad)  
   14002820d:	(bad)  
   14002820e:	(bad)  
   14002820f:	(bad)  
   140028210:	(bad)  
   140028211:	(bad)  
   140028212:	(bad)  
   140028213:	(bad)  
   140028214:	(bad)  
   140028215:	(bad)  
   140028216:	(bad)  
   140028217:	(bad)  
   140028218:	(bad)  
   140028219:	(bad)  
   14002821a:	(bad)  
   14002821b:	(bad)  
   14002821c:	(bad)  
   14002821d:	(bad)  
   14002821e:	(bad)  
   14002821f:	(bad)  
   140028220:	(bad)  
   140028221:	(bad)  
   140028222:	(bad)  
   140028223:	(bad)  
   140028224:	(bad)  
   140028225:	(bad)  
   140028226:	(bad)  
   140028227:	(bad)  
   140028228:	(bad)  
   140028229:	(bad)  
   14002822a:	(bad)  
   14002822b:	(bad)  
   14002822c:	(bad)  
   14002822d:	(bad)  
   14002822e:	(bad)  
   14002822f:	(bad)  
   140028230:	(bad)  
   140028231:	(bad)  
   140028232:	(bad)  
   140028233:	(bad)  
   140028234:	(bad)  
   140028235:	(bad)  
   140028236:	(bad)  
   140028237:	(bad)  
   140028238:	(bad)  
   140028239:	(bad)  
   14002823a:	(bad)  
   14002823b:	(bad)  
   14002823c:	(bad)  
   14002823d:	(bad)  
   14002823e:	(bad)  
   14002823f:	(bad)  
   140028240:	(bad)  
   140028241:	(bad)  
   140028242:	(bad)  
   140028243:	(bad)  
   140028244:	(bad)  
   140028245:	(bad)  
   140028246:	(bad)  
   140028247:	(bad)  
   140028248:	(bad)  
   140028249:	(bad)  
   14002824a:	(bad)  
   14002824b:	(bad)  
   14002824c:	(bad)  
   14002824d:	(bad)  
   14002824e:	(bad)  
   14002824f:	(bad)  
   140028250:	(bad)  
   140028251:	(bad)  
   140028252:	(bad)  
   140028253:	(bad)  
   140028254:	(bad)  
   140028255:	(bad)  
   140028256:	(bad)  
   140028257:	(bad)  
   140028258:	(bad)  
   140028259:	inc    DWORD PTR [rax]
   14002825b:	add    BYTE PTR [rax],al
   14002825d:	add    BYTE PTR [rax],al
   14002825f:	add    BYTE PTR [rax+0x14002b9],ah
   140028265:	add    BYTE PTR [rax],al
   140028267:	add    ah,bl
   140028269:	in     eax,dx
   14002826a:	add    DWORD PTR [rax+0x1],eax
   14002826d:	add    BYTE PTR [rax],al
   14002826f:	add    BYTE PTR [rax],dl
   140028271:	add    eax,DWORD PTR es:[rax+0x1]
   140028275:	add    BYTE PTR [rax],al
   140028277:	add    BYTE PTR [rax+0x1400326],dh
   14002827d:	add    BYTE PTR [rax],al
   14002827f:	add    BYTE PTR [rcx],al
	...
   140028289:	add    BYTE PTR [rax],al
   14002828b:	add    BYTE PTR [rax],cl
   14002828d:	adc    BYTE PTR [rbx],al
   14002828f:	add    BYTE PTR [rax-0x7ffffd7e],ch
   140028295:	(bad)  
   140028296:	add    al,BYTE PTR [rax]
	...
   1400282b0:	add    DWORD PTR [rax],eax
   1400282b2:	add    BYTE PTR [rax],al
   1400282b4:	rol    BYTE PTR [rdx+0x2],0x0
   1400282bb:	add    BYTE PTR [rax],al
   1400282bd:	add    BYTE PTR [rax],al
   1400282bf:	add    al,dl
   1400282c1:	(bad)  
   1400282c2:	add    al,BYTE PTR [rax]
	...
   1400282d0:	or     BYTE PTR [rax],dl
   1400282d2:	add    eax,DWORD PTR [rax]
	...
   1400282dc:	(bad)  
   1400282dd:	(bad)  
   1400282de:	(bad)  
   1400282df:	inc    DWORD PTR [rax]
   1400282e1:	add    BYTE PTR [rax],al
   1400282e3:	add    BYTE PTR [rax+0x0],al
   1400282e6:	add    BYTE PTR [rax],al
   1400282e8:	test   al,0x82
   1400282ea:	add    al,BYTE PTR [rax]
	...
   1400282f8:	add    DWORD PTR [rax],eax
	...
   140028302:	add    BYTE PTR [rax],al
   140028304:	adc    BYTE PTR [rax],0x3
   140028307:	add    BYTE PTR [rax],ah
   140028309:	add    DWORD PTR [rdx],0x0
   14002830c:	clc    
   14002830d:	(bad)  
   14002830e:	add    al,BYTE PTR [rax]
	...
   140028328:	add    al,BYTE PTR [rax]
   14002832a:	add    BYTE PTR [rax],al
   14002832c:	cmp    BYTE PTR [rbx+0x2],al
   140028332:	add    BYTE PTR [rax],al
   140028334:	add    BYTE PTR [rax],al
   140028336:	add    BYTE PTR [rax],al
   140028338:	push   rax
   140028339:	add    DWORD PTR [rdx],0x0
   14002833c:	rol    BYTE PTR [rdx+0x2],1
	...
   14002834e:	add    BYTE PTR [rax],al
   140028350:	adc    BYTE PTR [rax],0x3
   140028353:	add    BYTE PTR [rcx],al
   140028355:	add    BYTE PTR [rax],al
   140028357:	add    BYTE PTR [rax],al
   140028359:	add    BYTE PTR [rax],al
   14002835b:	add    bh,bh
   14002835d:	(bad)  
   14002835e:	(bad)  
   14002835f:	inc    DWORD PTR [rax]
   140028361:	add    BYTE PTR [rax],al
   140028363:	add    BYTE PTR [rax+0x0],al
   140028366:	add    BYTE PTR [rax],al
   140028368:	and    BYTE PTR [rbx+0x2],al
	...
   140028376:	add    BYTE PTR [rax],al
   140028378:	add    DWORD PTR [rax],eax
	...
   140028382:	add    BYTE PTR [rax],al
   140028384:	mov    al,0x10
   140028386:	add    eax,DWORD PTR [rax]
   140028388:	movabs al,ds:0x28378000283
	...
   1400283a5:	add    BYTE PTR [rax],al
   1400283a7:	add    BYTE PTR [rdx],al
   1400283a9:	add    BYTE PTR [rax],al
   1400283ab:	add    BYTE PTR [rax+0x283],bh
   1400283b1:	add    BYTE PTR [rax],al
   1400283b3:	add    BYTE PTR [rax],al
   1400283b5:	add    BYTE PTR [rax],al
   1400283b7:	add    al,dl
   1400283b9:	add    DWORD PTR [rdx],0x0
   1400283bc:	clc    
   1400283bd:	add    DWORD PTR [rdx],0x0
	...
   1400283d0:	mov    al,0x10
   1400283d2:	add    eax,DWORD PTR [rax]
   1400283d4:	add    DWORD PTR [rax],eax
   1400283d6:	add    BYTE PTR [rax],al
   1400283d8:	add    BYTE PTR [rax],al
   1400283da:	add    BYTE PTR [rax],al
   1400283dc:	(bad)  
   1400283dd:	(bad)  
   1400283de:	(bad)  
   1400283df:	inc    DWORD PTR [rax]
   1400283e1:	add    BYTE PTR [rax],al
   1400283e3:	add    BYTE PTR [rax+0x0],al
   1400283e6:	add    BYTE PTR [rax],al
   1400283e8:	movabs al,ds:0x283
   1400283f1:	add    BYTE PTR [rax],al
   1400283f3:	add    BYTE PTR [rax],al
   1400283f5:	add    BYTE PTR [rax],al
   1400283f7:	add    al,bl
   1400283f9:	adc    BYTE PTR [rbx],al
   1400283fb:	add    BYTE PTR [rax],al
   1400283fd:	add    BYTE PTR [rax],al
   1400283ff:	add    BYTE PTR [rax],cl
   140028401:	add    BYTE PTR [rax],al
   140028403:	add    bh,bh
   140028405:	(bad)  
   140028406:	(bad)  
   140028407:	inc    DWORD PTR [rax]
   140028409:	add    BYTE PTR [rax],al
   14002840b:	add    BYTE PTR [rax+0x0],al
   14002840e:	add    BYTE PTR [rax],al
   140028410:	and    BYTE PTR [rdx+rax*1+0x0],al
	...
   140028427:	add    BYTE PTR [rcx],al
   140028429:	add    BYTE PTR [rax],al
   14002842b:	add    BYTE PTR [rax],bh
   14002842d:	test   BYTE PTR [rdx],al
	...
   140028437:	add    BYTE PTR [rax-0x7c],cl
   14002843a:	add    al,BYTE PTR [rax]
	...
   140028448:	fcom   DWORD PTR [rax]
   14002844a:	add    eax,DWORD PTR [rax]
	...
   140028454:	(bad)  
   140028455:	(bad)  
   140028456:	(bad)  
   140028457:	inc    DWORD PTR [rax]
   140028459:	add    BYTE PTR [rax],al
   14002845b:	add    BYTE PTR [rax+0x0],al
   14002845e:	add    BYTE PTR [rax],al
   140028460:	and    BYTE PTR [rdx+rax*1+0x0],al
	...
   140028477:	add    BYTE PTR [rbx],al
   140028479:	add    BYTE PTR [rax],al
   14002847b:	add    BYTE PTR [rax+0x284],cl
   140028481:	add    BYTE PTR [rax],al
   140028483:	add    BYTE PTR [rax],al
   140028485:	add    BYTE PTR [rax],al
   140028487:	add    BYTE PTR [rax-0x2ffffd7c],ch
   14002848d:	add    DWORD PTR [rdx],0x0
   140028490:	clc    
   140028491:	add    DWORD PTR [rdx],0x0
	...
   1400284a8:	add    BYTE PTR [rcx],dl
   1400284aa:	add    eax,DWORD PTR [rax]
   1400284ac:	add    al,BYTE PTR [rax]
   1400284ae:	add    BYTE PTR [rax],al
   1400284b0:	add    BYTE PTR [rax],al
   1400284b2:	add    BYTE PTR [rax],al
   1400284b4:	(bad)  
   1400284b5:	(bad)  
   1400284b6:	(bad)  
   1400284b7:	inc    DWORD PTR [rax]
   1400284b9:	add    BYTE PTR [rax],al
   1400284bb:	add    BYTE PTR [rax+0x0],al
   1400284be:	add    BYTE PTR [rax],al
   1400284c0:	jo     0x140028446
   1400284c2:	add    al,BYTE PTR [rax]
	...
   1400284d8:	add    eax,DWORD PTR [rax]
   1400284da:	add    BYTE PTR [rax],al
   1400284dc:	call   0x140028765
   1400284e1:	add    BYTE PTR [rax],al
   1400284e3:	add    BYTE PTR [rax],al
   1400284e5:	add    BYTE PTR [rax],al
   1400284e7:	add    BYTE PTR [rax],cl
   1400284e9:	test   DWORD PTR [rdx],eax
   1400284eb:	add    al,dl
   1400284ed:	add    DWORD PTR [rdx],0x0
   1400284f0:	clc    
   1400284f1:	add    DWORD PTR [rdx],0x0
	...
   140028508:	xor    BYTE PTR [rcx],dl
   14002850a:	add    eax,DWORD PTR [rax]
   14002850c:	add    al,BYTE PTR [rax]
   14002850e:	add    BYTE PTR [rax],al
   140028510:	add    BYTE PTR [rax],al
   140028512:	add    BYTE PTR [rax],al
   140028514:	(bad)  
   140028515:	(bad)  
   140028516:	(bad)  
   140028517:	inc    DWORD PTR [rax]
   140028519:	add    BYTE PTR [rax],al
   14002851b:	add    BYTE PTR [rax+0x0],al
   14002851e:	add    BYTE PTR [rax],al
   140028520:	rol    BYTE PTR [rdx+rax*1+0x0],1
	...
   14002852f:	add    BYTE PTR [rcx],al
	...
   140028539:	add    BYTE PTR [rax],al
   14002853b:	add    BYTE PTR [rax+0x11],ah
   14002853e:	add    eax,DWORD PTR [rax]
   140028540:	pop    rax
   140028541:	test   DWORD PTR [rdx],eax
   140028543:	add    BYTE PTR [rax],dh
   140028545:	test   DWORD PTR [rdx],eax
	...
   14002855f:	add    BYTE PTR [rax+rax*1],al
   140028562:	add    BYTE PTR [rax],al
   140028564:	jo     0x1400284eb
   140028566:	add    al,BYTE PTR [rax]
	...
   140028570:	cwde   
   140028571:	test   DWORD PTR [rdx],eax
   140028573:	add    BYTE PTR [rax-0x2ffffd7c],ch
   140028579:	add    DWORD PTR [rdx],0x0
   14002857c:	clc    
   14002857d:	add    DWORD PTR [rdx],0x0
	...
   140028598:	(bad)  
   140028599:	adc    DWORD PTR [rbx],eax
   14002859b:	add    BYTE PTR [rbx],al
   14002859d:	add    BYTE PTR [rax],al
   14002859f:	add    BYTE PTR [rax],al
   1400285a1:	add    BYTE PTR [rax],al
   1400285a3:	add    bh,bh
   1400285a5:	(bad)  
   1400285a6:	(bad)  
   1400285a7:	inc    DWORD PTR [rax]
   1400285a9:	add    BYTE PTR [rax],al
   1400285ab:	add    BYTE PTR [rax+0x0],al
   1400285ae:	add    BYTE PTR [rax],al
   1400285b0:	pop    rax
   1400285b1:	test   DWORD PTR [rdx],eax
	...
   1400285bf:	add    BYTE PTR [rcx],al
	...
   1400285c9:	add    BYTE PTR [rax],al
   1400285cb:	add    BYTE PTR [rax-0x17fffcef],bl
   1400285d1:	test   DWORD PTR [rdx],eax
   1400285d3:	add    al,al
   1400285d5:	test   DWORD PTR [rdx],eax
	...
   1400285ef:	add    BYTE PTR [rax+rax*1],al
   1400285f2:	add    BYTE PTR [rax],al
   1400285f4:	add    BYTE PTR [rsi+0x2],al
   1400285fa:	add    BYTE PTR [rax],al
   1400285fc:	add    BYTE PTR [rax],al
   1400285fe:	add    BYTE PTR [rax],al
   140028600:	sub    BYTE PTR [rsi-0x7b57fffe],al
   140028606:	add    al,BYTE PTR [rax]
   140028608:	rol    BYTE PTR [rbx-0x7c07fffe],1
   14002860e:	add    al,BYTE PTR [rax]
	...
   140028628:	cwde   
   140028629:	adc    DWORD PTR [rbx],eax
   14002862b:	add    BYTE PTR [rbx],al
   14002862d:	add    BYTE PTR [rax],al
   14002862f:	add    BYTE PTR [rax],al
   140028631:	add    BYTE PTR [rax],al
   140028633:	add    bh,bh
   140028635:	(bad)  
   140028636:	(bad)  
   140028637:	inc    DWORD PTR [rax]
   140028639:	add    BYTE PTR [rax],al
   14002863b:	add    BYTE PTR [rax+0x0],al
   14002863e:	add    BYTE PTR [rax],al
   140028640:	call   0x1400288ca
	...
   14002864d:	add    BYTE PTR [rax],al
   14002864f:	add    BYTE PTR [rcx],al
	...
   140028659:	add    BYTE PTR [rax],al
   14002865b:	add    al,cl
   14002865d:	adc    DWORD PTR [rbx],eax
   14002865f:	add    BYTE PTR [rax-0x7a],bh
   140028662:	add    al,BYTE PTR [rax]
   140028664:	push   rax
   140028665:	xchg   BYTE PTR [rdx],al
	...
   14002867f:	add    BYTE PTR [rax+rax*1],al
   140028682:	add    BYTE PTR [rax],al
   140028684:	nop
   140028685:	xchg   BYTE PTR [rdx],al
	...
   14002868f:	add    BYTE PTR [rax-0x57fffd7a],bh
   140028695:	test   BYTE PTR [rdx],al
   140028697:	add    al,dl
   140028699:	add    DWORD PTR [rdx],0x0
   14002869c:	clc    
   14002869d:	add    DWORD PTR [rdx],0x0
	...
   1400286b8:	enter  0x311,0x0
   1400286bc:	add    eax,DWORD PTR [rax]
   1400286be:	add    BYTE PTR [rax],al
   1400286c0:	add    BYTE PTR [rax],al
   1400286c2:	add    BYTE PTR [rax],al
   1400286c4:	(bad)  
   1400286c5:	(bad)  
   1400286c6:	(bad)  
   1400286c7:	inc    DWORD PTR [rax]
   1400286c9:	add    BYTE PTR [rax],al
   1400286cb:	add    BYTE PTR [rax+0x0],al
   1400286ce:	add    BYTE PTR [rax],al
   1400286d0:	js     0x140028658
   1400286d2:	add    al,BYTE PTR [rax]
	...
   1400286e0:	add    DWORD PTR [rax],eax
	...
   1400286ea:	add    BYTE PTR [rax],al
   1400286ec:	add    BYTE PTR [rdx],dl
   1400286ee:	add    eax,DWORD PTR [rax]
   1400286f0:	or     BYTE PTR [rdi-0x791ffffe],al
   1400286f6:	add    al,BYTE PTR [rax]
	...
   140028710:	add    al,0x0
   140028712:	add    BYTE PTR [rax],al
   140028714:	and    BYTE PTR [rdi+0x2],al
   14002871a:	add    BYTE PTR [rax],al
   14002871c:	add    BYTE PTR [rax],al
   14002871e:	add    BYTE PTR [rax],al
   140028720:	xchg   QWORD PTR [rdx],rax
   140028723:	add    BYTE PTR [rax-0x2ffffd7c],ch
   140028729:	add    DWORD PTR [rdx],0x0
   14002872c:	clc    
   14002872d:	add    DWORD PTR [rdx],0x0
	...
   140028748:	add    BYTE PTR [rdx],dl
   14002874a:	add    eax,DWORD PTR [rax]
   14002874c:	add    eax,DWORD PTR [rax]
   14002874e:	add    BYTE PTR [rax],al
   140028750:	add    BYTE PTR [rax],al
   140028752:	add    BYTE PTR [rax],al
   140028754:	(bad)  
   140028755:	(bad)  
   140028756:	(bad)  
   140028757:	inc    DWORD PTR [rax]
   140028759:	add    BYTE PTR [rax],al
   14002875b:	add    BYTE PTR [rax+0x0],al
   14002875e:	add    BYTE PTR [rax],al
   140028760:	or     BYTE PTR [rdi+0x2],al
	...
   14002876e:	add    BYTE PTR [rax],al
   140028770:	add    DWORD PTR [rax],eax
	...
   14002877a:	add    BYTE PTR [rax],al
   14002877c:	xor    BYTE PTR [rdx],dl
   14002877e:	add    eax,DWORD PTR [rax]
   140028780:	cwde   
   140028781:	xchg   DWORD PTR [rdx],eax
   140028783:	add    BYTE PTR [rax-0x79],dh
   140028786:	add    al,BYTE PTR [rax]
	...
   1400287a0:	add    al,0x0
   1400287a2:	add    BYTE PTR [rax],al
   1400287a4:	mov    al,0x87
   1400287a6:	add    al,BYTE PTR [rax]
	...
   1400287b0:	fadd   DWORD PTR [rdi-0x7b57fffe]
   1400287b6:	add    al,BYTE PTR [rax]
   1400287b8:	rol    BYTE PTR [rbx-0x7c07fffe],1
   1400287be:	add    al,BYTE PTR [rax]
	...
   1400287d8:	xor    BYTE PTR [rdx],dl
   1400287da:	add    eax,DWORD PTR [rax]
   1400287dc:	add    eax,DWORD PTR [rax]
   1400287de:	add    BYTE PTR [rax],al
   1400287e0:	add    BYTE PTR [rax],al
   1400287e2:	add    BYTE PTR [rax],al
   1400287e4:	(bad)  
   1400287e5:	(bad)  
   1400287e6:	(bad)  
   1400287e7:	inc    DWORD PTR [rax]
   1400287e9:	add    BYTE PTR [rax],al
   1400287eb:	add    BYTE PTR [rax+0x0],al
   1400287ee:	add    BYTE PTR [rax],al
   1400287f0:	cwde   
   1400287f1:	xchg   DWORD PTR [rdx],eax
	...
   1400287ff:	add    BYTE PTR [rcx],al
	...
   140028809:	add    BYTE PTR [rax],al
   14002880b:	add    BYTE PTR [rax+0x12],ah
   14002880e:	add    eax,DWORD PTR [rax]
   140028810:	sub    BYTE PTR [rax-0x77fffffe],cl
   140028816:	add    al,BYTE PTR [rax]
	...
   140028830:	add    al,0x0
   140028832:	add    BYTE PTR [rax],al
   140028834:	mov    BYTE PTR [rdx],al
	...
   14002883f:	add    BYTE PTR [rax-0x78],ch
   140028842:	add    al,BYTE PTR [rax]
   140028844:	test   al,0x84
   140028846:	add    al,BYTE PTR [rax]
   140028848:	rol    BYTE PTR [rbx-0x7c07fffe],1
   14002884e:	add    al,BYTE PTR [rax]
	...
   140028868:	(bad)  
   140028869:	adc    al,BYTE PTR [rbx]
   14002886b:	add    BYTE PTR [rbx],al
   14002886d:	add    BYTE PTR [rax],al
   14002886f:	add    BYTE PTR [rax],al
   140028871:	add    BYTE PTR [rax],al
   140028873:	add    bh,bh
   140028875:	(bad)  
   140028876:	(bad)  
   140028877:	inc    DWORD PTR [rax]
   140028879:	add    BYTE PTR [rax],al
   14002887b:	add    BYTE PTR [rax+0x0],al
   14002887e:	add    BYTE PTR [rax],al
   140028880:	sub    BYTE PTR [rax+0x2],cl
	...
   14002888e:	add    BYTE PTR [rax],al
   140028890:	add    DWORD PTR [rax],eax
	...
   14002889a:	add    BYTE PTR [rax],al
   14002889c:	nop
   14002889d:	adc    al,BYTE PTR [rbx]
   14002889f:	add    BYTE PTR [rax-0x6ffffd78],bh
   1400288a5:	mov    BYTE PTR [rdx],al
	...
   1400288bf:	add    BYTE PTR [rax+rax*1],al
   1400288c2:	add    BYTE PTR [rax],al
   1400288c4:	ror    BYTE PTR [rax+0x2],1
   1400288ca:	add    BYTE PTR [rax],al
   1400288cc:	add    BYTE PTR [rax],al
   1400288ce:	add    BYTE PTR [rax],al
   1400288d0:	clc    
   1400288d1:	mov    BYTE PTR [rdx],al
   1400288d3:	add    BYTE PTR [rax-0x2ffffd7c],ch
   1400288d9:	add    DWORD PTR [rdx],0x0
   1400288dc:	clc    
   1400288dd:	add    DWORD PTR [rdx],0x0
	...
   1400288f8:	nop
   1400288f9:	adc    al,BYTE PTR [rbx]
   1400288fb:	add    BYTE PTR [rbx],al
   1400288fd:	add    BYTE PTR [rax],al
   1400288ff:	add    BYTE PTR [rax],al
   140028901:	add    BYTE PTR [rax],al
   140028903:	add    bh,bh
   140028905:	(bad)  
   140028906:	(bad)  
   140028907:	inc    DWORD PTR [rax]
   140028909:	add    BYTE PTR [rax],al
   14002890b:	add    BYTE PTR [rax+0x0],al
   14002890e:	add    BYTE PTR [rax],al
   140028910:	mov    eax,0x288
	...
   14002891d:	add    BYTE PTR [rax],al
   14002891f:	add    BYTE PTR [rcx],al
	...
   140028929:	add    BYTE PTR [rax],al
   14002892b:	add    al,al
   14002892d:	adc    al,BYTE PTR [rbx]
   14002892f:	add    BYTE PTR [rax-0x77],cl
   140028932:	add    al,BYTE PTR [rax]
   140028934:	and    BYTE PTR [rcx+0x2],cl
	...
   14002894e:	add    BYTE PTR [rax],al
   140028950:	add    al,0x0
   140028952:	add    BYTE PTR [rax],al
   140028954:	(bad)  
   140028955:	mov    DWORD PTR [rdx],eax
	...
   14002895f:	add    BYTE PTR [rax-0x57fffd77],cl
   140028965:	test   BYTE PTR [rdx],al
   140028967:	add    al,dl
   140028969:	add    DWORD PTR [rdx],0x0
   14002896c:	clc    
   14002896d:	add    DWORD PTR [rdx],0x0
	...
   140028988:	rcl    BYTE PTR [rdx],0x3
   14002898b:	add    BYTE PTR [rbx],al
   14002898d:	add    BYTE PTR [rax],al
   14002898f:	add    BYTE PTR [rax],al
   140028991:	add    BYTE PTR [rax],al
   140028993:	add    bh,bh
   140028995:	(bad)  
   140028996:	(bad)  
   140028997:	inc    DWORD PTR [rax]
   140028999:	add    BYTE PTR [rax],al
   14002899b:	add    BYTE PTR [rax+0x0],al
   14002899e:	add    BYTE PTR [rax],al
   1400289a0:	mov    QWORD PTR [rdx],rax
	...
   1400289af:	add    BYTE PTR [rcx],al
	...
   1400289b9:	add    BYTE PTR [rax],al
   1400289bb:	add    al,dh
   1400289bd:	adc    al,BYTE PTR [rbx]
   1400289bf:	add    al,bl
   1400289c1:	mov    DWORD PTR [rdx],eax
   1400289c3:	add    BYTE PTR [rax+0x289],dh
	...
   1400289dd:	add    BYTE PTR [rax],al
   1400289df:	add    BYTE PTR [rax+rax*1],al
   1400289e2:	add    BYTE PTR [rax],al
   1400289e4:	lock mov DWORD PTR [rdx],eax
	...
   1400289ef:	add    BYTE PTR [rax],bl
   1400289f1:	mov    al,BYTE PTR [rdx]
   1400289f3:	add    BYTE PTR [rax-0x2ffffd7c],ch
   1400289f9:	add    DWORD PTR [rdx],0x0
   1400289fc:	clc    
   1400289fd:	add    DWORD PTR [rdx],0x0
	...
   140028a18:	lock adc al,BYTE PTR [rbx]
   140028a1b:	add    BYTE PTR [rbx],al
   140028a1d:	add    BYTE PTR [rax],al
   140028a1f:	add    BYTE PTR [rax],al
   140028a21:	add    BYTE PTR [rax],al
   140028a23:	add    bh,bh
   140028a25:	(bad)  
   140028a26:	(bad)  
   140028a27:	inc    DWORD PTR [rax]
   140028a29:	add    BYTE PTR [rax],al
   140028a2b:	add    BYTE PTR [rax+0x0],al
   140028a2e:	add    BYTE PTR [rax],al
   140028a30:	fmul   DWORD PTR [rcx+0x2]
	...
   140028a3e:	add    BYTE PTR [rax],al
   140028a40:	add    DWORD PTR [rax],eax
	...
   140028a4a:	add    BYTE PTR [rax],al
   140028a4c:	and    BYTE PTR [rbx],dl
   140028a4e:	add    eax,DWORD PTR [rax]
   140028a50:	push   0x4000028a
   140028a55:	mov    al,BYTE PTR [rdx]
	...
   140028a6f:	add    BYTE PTR [rax+rax*1],al
   140028a72:	add    BYTE PTR [rax],al
   140028a74:	or     BYTE PTR [rdx+0x2],0x0
   140028a7b:	add    BYTE PTR [rax],al
   140028a7d:	add    BYTE PTR [rax],al
   140028a7f:	add    BYTE PTR [rax-0x57fffd76],ch
   140028a85:	test   BYTE PTR [rdx],al
   140028a87:	add    al,dl
   140028a89:	add    DWORD PTR [rdx],0x0
   140028a8c:	clc    
   140028a8d:	add    DWORD PTR [rdx],0x0
	...
   140028aa8:	and    BYTE PTR [rbx],dl
   140028aaa:	add    eax,DWORD PTR [rax]
   140028aac:	add    eax,DWORD PTR [rax]
   140028aae:	add    BYTE PTR [rax],al
   140028ab0:	add    BYTE PTR [rax],al
   140028ab2:	add    BYTE PTR [rax],al
   140028ab4:	(bad)  
   140028ab5:	(bad)  
   140028ab6:	(bad)  
   140028ab7:	inc    DWORD PTR [rax]
   140028ab9:	add    BYTE PTR [rax],al
   140028abb:	add    BYTE PTR [rax+0x0],al
   140028abe:	add    BYTE PTR [rax],al
   140028ac0:	push   0x28a
	...
   140028acd:	add    BYTE PTR [rax],al
   140028acf:	add    BYTE PTR [rcx],al
	...
   140028ad9:	add    BYTE PTR [rax],al
   140028adb:	add    BYTE PTR [rax+0x13],dl
   140028ade:	add    eax,DWORD PTR [rax]
   140028ae0:	clc    
   140028ae1:	mov    al,BYTE PTR [rdx]
   140028ae3:	add    al,dl
   140028ae5:	mov    al,BYTE PTR [rdx]
	...
   140028aff:	add    BYTE PTR [rax+rax*1],al
   140028b02:	add    BYTE PTR [rax],al
   140028b04:	adc    BYTE PTR [rbx+0x2],cl
   140028b0a:	add    BYTE PTR [rax],al
   140028b0c:	add    BYTE PTR [rax],al
   140028b0e:	add    BYTE PTR [rax],al
   140028b10:	cmp    BYTE PTR [rbx-0x7b57fffe],cl
   140028b16:	add    al,BYTE PTR [rax]
   140028b18:	rol    BYTE PTR [rbx-0x7c07fffe],1
   140028b1e:	add    al,BYTE PTR [rax]
	...
   140028b38:	push   rax
   140028b39:	adc    eax,DWORD PTR [rbx]
   140028b3b:	add    BYTE PTR [rbx],al
   140028b3d:	add    BYTE PTR [rax],al
   140028b3f:	add    BYTE PTR [rax],al
   140028b41:	add    BYTE PTR [rax],al
   140028b43:	add    bh,bh
   140028b45:	(bad)  
   140028b46:	(bad)  
   140028b47:	inc    DWORD PTR [rax]
   140028b49:	add    BYTE PTR [rax],al
   140028b4b:	add    BYTE PTR [rax+0x0],al
   140028b4e:	add    BYTE PTR [rax],al
   140028b50:	clc    
   140028b51:	mov    al,BYTE PTR [rdx]
	...
   140028b5f:	add    BYTE PTR [rcx],al
	...
   140028b69:	add    BYTE PTR [rax],al
   140028b6b:	add    BYTE PTR [rax-0x77fffced],al
   140028b71:	mov    eax,DWORD PTR [rdx]
   140028b73:	add    BYTE PTR [rax-0x75],ah
   140028b76:	add    al,BYTE PTR [rax]
	...
   140028b90:	add    eax,DWORD PTR [rax]
   140028b92:	add    BYTE PTR [rax],al
   140028b94:	movabs al,ds:0x28b
   140028b9d:	add    BYTE PTR [rax],al
   140028b9f:	add    al,al
   140028ba1:	mov    eax,DWORD PTR [rdx]
   140028ba3:	add    al,dl
   140028ba5:	add    DWORD PTR [rdx],0x0
   140028ba8:	clc    
   140028ba9:	add    DWORD PTR [rdx],0x0
	...
   140028bc0:	adc    BYTE PTR [rbx],0x3
   140028bc3:	add    BYTE PTR [rdx],al
   140028bc5:	add    BYTE PTR [rax],al
   140028bc7:	add    BYTE PTR [rax],al
   140028bc9:	add    BYTE PTR [rax],al
   140028bcb:	add    bh,bh
   140028bcd:	(bad)  
   140028bce:	(bad)  
   140028bcf:	inc    DWORD PTR [rax]
   140028bd1:	add    BYTE PTR [rax],al
   140028bd3:	add    BYTE PTR [rax+0x0],al
   140028bd6:	add    BYTE PTR [rax],al
   140028bd8:	mov    BYTE PTR [rbx+0x2],cl
	...
   140028be6:	add    BYTE PTR [rax],al
   140028be8:	add    DWORD PTR [rax],eax
	...
   140028bf2:	add    BYTE PTR [rax],al
   140028bf4:	mov    al,0x13
   140028bf6:	add    eax,DWORD PTR [rax]
   140028bf8:	adc    BYTE PTR [rdx+rax*1+0x28be800],cl
	...
   140028c17:	add    BYTE PTR [rbx],al
   140028c19:	add    BYTE PTR [rax],al
   140028c1b:	add    BYTE PTR [rax],ch
   140028c1d:	mov    WORD PTR [rdx],es
	...
   140028c27:	add    BYTE PTR [rax-0x74],cl
   140028c2a:	add    al,BYTE PTR [rax]
   140028c2c:	rol    BYTE PTR [rbx-0x7c07fffe],1
   140028c32:	add    al,BYTE PTR [rax]
	...
   140028c48:	mov    al,0x13
   140028c4a:	add    eax,DWORD PTR [rax]
   140028c4c:	add    al,BYTE PTR [rax]
   140028c4e:	add    BYTE PTR [rax],al
   140028c50:	add    BYTE PTR [rax],al
   140028c52:	add    BYTE PTR [rax],al
   140028c54:	(bad)  
   140028c55:	(bad)  
   140028c56:	(bad)  
   140028c57:	inc    DWORD PTR [rax]
   140028c59:	add    BYTE PTR [rax],al
   140028c5b:	add    BYTE PTR [rax+0x0],al
   140028c5e:	add    BYTE PTR [rax],al
   140028c60:	adc    BYTE PTR [rdx+rax*1+0x0],cl
	...
   140028c77:	add    BYTE PTR [rbx],al
   140028c79:	add    BYTE PTR [rax],al
   140028c7b:	add    BYTE PTR [rax+0x28c],cl
   140028c81:	add    BYTE PTR [rax],al
   140028c83:	add    BYTE PTR [rax],al
   140028c85:	add    BYTE PTR [rax],al
   140028c87:	add    BYTE PTR [rax-0x2ffffd74],ch
   140028c8d:	add    DWORD PTR [rdx],0x0
   140028c90:	clc    
   140028c91:	add    DWORD PTR [rdx],0x0
	...
   140028ca8:	loopne 0x140028cbd
   140028caa:	add    eax,DWORD PTR [rax]
   140028cac:	add    al,BYTE PTR [rax]
   140028cae:	add    BYTE PTR [rax],al
   140028cb0:	add    BYTE PTR [rax],al
   140028cb2:	add    BYTE PTR [rax],al
   140028cb4:	(bad)  
   140028cb5:	(bad)  
   140028cb6:	(bad)  
   140028cb7:	inc    DWORD PTR [rax]
   140028cb9:	add    BYTE PTR [rax],al
   140028cbb:	add    BYTE PTR [rax+0x0],al
   140028cbe:	add    BYTE PTR [rax],al
   140028cc0:	jo     0x140028c4e
   140028cc2:	add    al,BYTE PTR [rax]
	...
   140028cd8:	add    eax,DWORD PTR [rax]
   140028cda:	add    BYTE PTR [rax],al
   140028cdc:	call   0x140028f6d
   140028ce1:	add    BYTE PTR [rax],al
   140028ce3:	add    BYTE PTR [rax],al
   140028ce5:	add    BYTE PTR [rax],al
   140028ce7:	add    BYTE PTR [rax],cl
   140028ce9:	lea    eax,[rdx]
   140028ceb:	add    al,dl
   140028ced:	add    DWORD PTR [rdx],0x0
   140028cf0:	clc    
   140028cf1:	add    DWORD PTR [rdx],0x0
	...
   140028d08:	adc    BYTE PTR [rbx+rax*1],dl
   140028d0b:	add    BYTE PTR [rdx],al
   140028d0d:	add    BYTE PTR [rax],al
   140028d0f:	add    BYTE PTR [rax],al
   140028d11:	add    BYTE PTR [rax],al
   140028d13:	add    bh,bh
   140028d15:	(bad)  
   140028d16:	(bad)  
   140028d17:	inc    DWORD PTR [rax]
   140028d19:	add    BYTE PTR [rax],al
   140028d1b:	add    BYTE PTR [rax+0x0],al
   140028d1e:	add    BYTE PTR [rax],al
   140028d20:	ror    BYTE PTR [rdx+rax*1+0x0],1
	...
   140028d2f:	add    BYTE PTR [rcx],al
	...
   140028d39:	add    BYTE PTR [rax],al
   140028d3b:	add    BYTE PTR [rax+0x14],cl
   140028d3e:	add    eax,DWORD PTR [rax]
   140028d40:	pop    rax
   140028d41:	lea    eax,[rdx]
   140028d43:	add    BYTE PTR [rax],dh
   140028d45:	lea    eax,[rdx]
	...
   140028d5f:	add    BYTE PTR [rbx],al
   140028d61:	add    BYTE PTR [rax],al
   140028d63:	add    BYTE PTR [rax-0x73],dh
   140028d66:	add    al,BYTE PTR [rax]
	...
   140028d70:	nop
   140028d71:	lea    eax,[rdx]
   140028d73:	add    al,dl
   140028d75:	add    DWORD PTR [rdx],0x0
   140028d78:	clc    
   140028d79:	add    DWORD PTR [rdx],0x0
	...
   140028d90:	rex.W adc al,0x3
   140028d93:	add    BYTE PTR [rdx],al
   140028d95:	add    BYTE PTR [rax],al
   140028d97:	add    BYTE PTR [rax],al
   140028d99:	add    BYTE PTR [rax],al
   140028d9b:	add    bh,bh
   140028d9d:	(bad)  
   140028d9e:	(bad)  
   140028d9f:	inc    DWORD PTR [rax]
   140028da1:	add    BYTE PTR [rax],al
   140028da3:	add    BYTE PTR [rax+0x0],al
   140028da6:	add    BYTE PTR [rax],al
   140028da8:	pop    rax
   140028da9:	lea    eax,[rdx]
	...
   140028db7:	add    BYTE PTR [rcx],al
	...
   140028dc1:	add    BYTE PTR [rax],al
   140028dc3:	add    BYTE PTR [rax-0x1ffffcec],al
   140028dc9:	lea    eax,[rdx]
   140028dcb:	add    BYTE PTR [rax+0x28d],bh
	...
   140028de5:	add    BYTE PTR [rax],al
   140028de7:	add    BYTE PTR [rax+rax*1],al
   140028dea:	add    BYTE PTR [rax],al
   140028dec:	clc    
   140028ded:	lea    eax,[rdx]
	...
   140028df7:	add    BYTE PTR [rax],ah
   140028df9:	mov    es,WORD PTR [rdx]
   140028dfb:	add    BYTE PTR [rax],cl
   140028dfd:	lea    eax,[rdx]
   140028dff:	add    al,dl
   140028e01:	add    DWORD PTR [rdx],0x0
   140028e04:	clc    
   140028e05:	add    DWORD PTR [rdx],0x0
	...
   140028e20:	adc    BYTE PTR [rbx+rax*1],0x0
   140028e24:	add    eax,DWORD PTR [rax]
   140028e26:	add    BYTE PTR [rax],al
   140028e28:	add    BYTE PTR [rax],al
   140028e2a:	add    BYTE PTR [rax],al
   140028e2c:	(bad)  
   140028e2d:	(bad)  
   140028e2e:	(bad)  
   140028e2f:	inc    DWORD PTR [rax]
   140028e31:	add    BYTE PTR [rax],al
   140028e33:	add    BYTE PTR [rax+0x0],al
   140028e36:	add    BYTE PTR [rax],al
   140028e38:	loopne 0x140028dc7
   140028e3a:	add    al,BYTE PTR [rax]
	...
   140028e48:	add    DWORD PTR [rax],eax
	...
   140028e52:	add    BYTE PTR [rax],al
   140028e54:	mov    eax,0x70000314
   140028e59:	mov    es,WORD PTR [rdx]
   140028e5b:	add    BYTE PTR [rax-0x72],cl
   140028e5e:	add    al,BYTE PTR [rax]
	...
   140028e78:	add    al,0x0
   140028e7a:	add    BYTE PTR [rax],al
   140028e7c:	mov    BYTE PTR [rsi+0x2],cl
   140028e82:	add    BYTE PTR [rax],al
   140028e84:	add    BYTE PTR [rax],al
   140028e86:	add    BYTE PTR [rax],al
   140028e88:	mov    al,0x8e
   140028e8a:	add    al,BYTE PTR [rax]
   140028e8c:	or     BYTE PTR [rbp-0x7c2ffffe],cl
   140028e92:	add    al,BYTE PTR [rax]
   140028e94:	clc    
   140028e95:	add    DWORD PTR [rdx],0x0
	...
   140028eb0:	mov    eax,0x3000314
   140028eb5:	add    BYTE PTR [rax],al
   140028eb7:	add    BYTE PTR [rax],al
   140028eb9:	add    BYTE PTR [rax],al
   140028ebb:	add    bh,bh
   140028ebd:	(bad)  
   140028ebe:	(bad)  
   140028ebf:	inc    DWORD PTR [rax]
   140028ec1:	add    BYTE PTR [rax],al
   140028ec3:	add    BYTE PTR [rax+0x0],al
   140028ec6:	add    BYTE PTR [rax],al
   140028ec8:	jo     0x140028e58
   140028eca:	add    al,BYTE PTR [rax]
	...
   140028ed8:	add    DWORD PTR [rax],eax
	...
   140028ee2:	add    BYTE PTR [rax],al
   140028ee4:	lock adc al,0x3
   140028ee7:	add    BYTE PTR [rax],al
   140028ee9:	pop    QWORD PTR [rdx]
   140028eeb:	add    al,bl
   140028eed:	mov    es,WORD PTR [rdx]
	...
   140028f07:	add    BYTE PTR [rax+rax*1],al
   140028f0a:	add    BYTE PTR [rax],al
   140028f0c:	sbb    BYTE PTR [rdi+0x2],cl
   140028f12:	add    BYTE PTR [rax],al
   140028f14:	add    BYTE PTR [rax],al
   140028f16:	add    BYTE PTR [rax],al
   140028f18:	rex pop QWORD PTR [rdx]
   140028f1b:	add    BYTE PTR [rax-0x2ffffd74],ch
   140028f21:	add    DWORD PTR [rdx],0x0
   140028f24:	clc    
   140028f25:	add    DWORD PTR [rdx],0x0
	...
   140028f40:	lock adc al,0x3
   140028f43:	add    BYTE PTR [rbx],al
   140028f45:	add    BYTE PTR [rax],al
   140028f47:	add    BYTE PTR [rax],al
   140028f49:	add    BYTE PTR [rax],al
   140028f4b:	add    bh,bh
   140028f4d:	(bad)  
   140028f4e:	(bad)  
   140028f4f:	inc    DWORD PTR [rax]
   140028f51:	add    BYTE PTR [rax],al
   140028f53:	add    BYTE PTR [rax+0x0],al
   140028f56:	add    BYTE PTR [rax],al
   140028f58:	add    BYTE PTR [rdi+0x2],cl
	...
   140028f66:	add    BYTE PTR [rax],al
   140028f68:	add    DWORD PTR [rax],eax
	...
   140028f72:	add    BYTE PTR [rax],al
   140028f74:	sub    BYTE PTR [rip+0xffffffff8f900003],dl        # 0xcf928f7d
   140028f7a:	add    al,BYTE PTR [rax]
   140028f7c:	push   0x28f
	...
   140028f95:	add    BYTE PTR [rax],al
   140028f97:	add    BYTE PTR [rax+rax*1],al
   140028f9a:	add    BYTE PTR [rax],al
   140028f9c:	test   al,0x8f
   140028f9e:	add    al,BYTE PTR [rax]
	...
   140028fa8:	ror    BYTE PTR [rdi-0x7357fffe],1
   140028fae:	add    al,BYTE PTR [rax]
   140028fb0:	rol    BYTE PTR [rbx-0x7c07fffe],1
   140028fb6:	add    al,BYTE PTR [rax]
	...
   140028fd0:	sub    BYTE PTR [rip+0x30003],dl        # 0x140058fd9
   140028fd6:	add    BYTE PTR [rax],al
   140028fd8:	add    BYTE PTR [rax],al
   140028fda:	add    BYTE PTR [rax],al
   140028fdc:	(bad)  
   140028fdd:	(bad)  
   140028fde:	(bad)  
   140028fdf:	inc    DWORD PTR [rax]
   140028fe1:	add    BYTE PTR [rax],al
   140028fe3:	add    BYTE PTR [rax+0x0],al
   140028fe6:	add    BYTE PTR [rax],al
   140028fe8:	nop
   140028fe9:	pop    QWORD PTR [rdx]
	...
   140028ff7:	add    BYTE PTR [rcx],al
	...
   140029001:	add    BYTE PTR [rax],al
   140029003:	add    BYTE PTR [rax+0x15],ch
   140029006:	add    eax,DWORD PTR [rax]
   140029008:	and    BYTE PTR [rax-0x7007fffe],dl
   14002900e:	add    al,BYTE PTR [rax]
	...
   140029028:	add    al,0x0
   14002902a:	add    BYTE PTR [rax],al
   14002902c:	cmp    BYTE PTR [rax+0x2],dl
   140029032:	add    BYTE PTR [rax],al
   140029034:	add    BYTE PTR [rax],al
   140029036:	add    BYTE PTR [rax],al
   140029038:	(bad)  
   140029039:	nop
   14002903a:	add    al,BYTE PTR [rax]
   14002903c:	test   al,0x8c
   14002903e:	add    al,BYTE PTR [rax]
   140029040:	rol    BYTE PTR [rbx-0x7c07fffe],1
   140029046:	add    al,BYTE PTR [rax]
	...
   140029060:	push   0x3000315
   140029065:	add    BYTE PTR [rax],al
   140029067:	add    BYTE PTR [rax],al
   140029069:	add    BYTE PTR [rax],al
   14002906b:	add    bh,bh
   14002906d:	(bad)  
   14002906e:	(bad)  
   14002906f:	inc    DWORD PTR [rax]
   140029071:	add    BYTE PTR [rax],al
   140029073:	add    BYTE PTR [rax+0x0],al
   140029076:	add    BYTE PTR [rax],al
   140029078:	and    BYTE PTR [rax+0x2],dl
	...
   140029086:	add    BYTE PTR [rax],al
   140029088:	add    DWORD PTR [rax],eax
	...
   140029092:	add    BYTE PTR [rax],al
   140029094:	test   al,0x15
   140029096:	add    eax,DWORD PTR [rax]
   140029098:	mov    al,0x90
   14002909a:	add    al,BYTE PTR [rax]
   14002909c:	mov    BYTE PTR [rax+0x2],dl
	...
   1400290b6:	add    BYTE PTR [rax],al
   1400290b8:	add    al,0x0
   1400290ba:	add    BYTE PTR [rax],al
   1400290bc:	enter  0x290,0x0
	...
   1400290c8:	lock nop
   1400290ca:	add    al,BYTE PTR [rax]
   1400290cc:	test   al,0x84
   1400290ce:	add    al,BYTE PTR [rax]
   1400290d0:	rol    BYTE PTR [rbx-0x7c07fffe],1
   1400290d6:	add    al,BYTE PTR [rax]
	...
   1400290f0:	test   al,0x15
   1400290f2:	add    eax,DWORD PTR [rax]
   1400290f4:	add    eax,DWORD PTR [rax]
   1400290f6:	add    BYTE PTR [rax],al
   1400290f8:	add    BYTE PTR [rax],al
   1400290fa:	add    BYTE PTR [rax],al
   1400290fc:	(bad)  
   1400290fd:	(bad)  
   1400290fe:	(bad)  
   1400290ff:	inc    DWORD PTR [rax]
   140029101:	add    BYTE PTR [rax],al
   140029103:	add    BYTE PTR [rax+0x0],al
   140029106:	add    BYTE PTR [rax],al
   140029108:	mov    al,0x90
   14002910a:	add    al,BYTE PTR [rax]
	...
   140029118:	add    DWORD PTR [rax],eax
	...
   140029122:	add    BYTE PTR [rax],al
   140029124:	loopne 0x14002913b
   140029126:	add    eax,DWORD PTR [rax]
   140029128:	rex xchg ecx,eax
   14002912a:	add    al,BYTE PTR [rax]
   14002912c:	sbb    BYTE PTR [rcx+0x2],dl
	...
   140029146:	add    BYTE PTR [rax],al
   140029148:	add    al,0x0
   14002914a:	add    BYTE PTR [rax],al
   14002914c:	pop    rax
   14002914d:	xchg   ecx,eax
   14002914e:	add    al,BYTE PTR [rax]
	...
   140029158:	adc    BYTE PTR [rcx-0x7b57fffe],0x2
   14002915f:	add    al,dl
   140029161:	add    DWORD PTR [rdx],0x0
   140029164:	clc    
   140029165:	add    DWORD PTR [rdx],0x0
	...
   140029180:	loopne 0x140029197
   140029182:	add    eax,DWORD PTR [rax]
   140029184:	add    eax,DWORD PTR [rax]
   140029186:	add    BYTE PTR [rax],al
   140029188:	add    BYTE PTR [rax],al
   14002918a:	add    BYTE PTR [rax],al
   14002918c:	(bad)  
   14002918d:	(bad)  
   14002918e:	(bad)  
   14002918f:	inc    DWORD PTR [rax]
   140029191:	add    BYTE PTR [rax],al
   140029193:	add    BYTE PTR [rax+0x0],al
   140029196:	add    BYTE PTR [rax],al
   140029198:	rex xchg ecx,eax
   14002919a:	add    al,BYTE PTR [rax]
	...
   1400291a8:	add    DWORD PTR [rax],eax
	...
   1400291b2:	add    BYTE PTR [rax],al
   1400291b4:	sbb    BYTE PTR [rsi],dl
   1400291b6:	add    eax,DWORD PTR [rax]
   1400291b8:	rcl    BYTE PTR [rcx-0x6e57fffe],1
   1400291be:	add    al,BYTE PTR [rax]
	...
   1400291d8:	add    al,0x0
   1400291da:	add    BYTE PTR [rax],al
   1400291dc:	call   0x140029472
   1400291e1:	add    BYTE PTR [rax],al
   1400291e3:	add    BYTE PTR [rax],al
   1400291e5:	add    BYTE PTR [rax],al
   1400291e7:	add    BYTE PTR [rax],dl
   1400291e9:	xchg   edx,eax
   1400291ea:	add    al,BYTE PTR [rax]
   1400291ec:	test   al,0x84
   1400291ee:	add    al,BYTE PTR [rax]
   1400291f0:	rol    BYTE PTR [rbx-0x7c07fffe],1
   1400291f6:	add    al,BYTE PTR [rax]
	...
   140029210:	sbb    BYTE PTR [rsi],dl
   140029212:	add    eax,DWORD PTR [rax]
   140029214:	add    eax,DWORD PTR [rax]
   140029216:	add    BYTE PTR [rax],al
   140029218:	add    BYTE PTR [rax],al
   14002921a:	add    BYTE PTR [rax],al
   14002921c:	(bad)  
   14002921d:	(bad)  
   14002921e:	(bad)  
   14002921f:	inc    DWORD PTR [rax]
   140029221:	add    BYTE PTR [rax],al
   140029223:	add    BYTE PTR [rax+0x0],al
   140029226:	add    BYTE PTR [rax],al
   140029228:	rcl    BYTE PTR [rcx+0x2],1
	...
   140029236:	add    BYTE PTR [rax],al
   140029238:	add    DWORD PTR [rax],eax
	...
   140029242:	add    BYTE PTR [rax],al
   140029244:	push   rax
   140029245:	(bad)  
   140029246:	add    eax,DWORD PTR [rax]
   140029248:	(bad)  
   140029249:	xchg   edx,eax
   14002924a:	add    al,BYTE PTR [rax]
   14002924c:	cmp    BYTE PTR [rdx+0x2],dl
	...
   140029266:	add    BYTE PTR [rax],al
   140029268:	add    al,0x0
   14002926a:	add    BYTE PTR [rax],al
   14002926c:	js     0x140029200
   14002926e:	add    al,BYTE PTR [rax]
	...
   140029278:	movabs al,ds:0xd0000284a8000292
   140029281:	add    DWORD PTR [rdx],0x0
   140029284:	clc    
   140029285:	add    DWORD PTR [rdx],0x0
	...
   1400292a0:	push   rax
   1400292a1:	(bad)  
   1400292a2:	add    eax,DWORD PTR [rax]
   1400292a4:	add    eax,DWORD PTR [rax]
   1400292a6:	add    BYTE PTR [rax],al
   1400292a8:	add    BYTE PTR [rax],al
   1400292aa:	add    BYTE PTR [rax],al
   1400292ac:	(bad)  
   1400292ad:	(bad)  
   1400292ae:	(bad)  
   1400292af:	inc    DWORD PTR [rax]
   1400292b1:	add    BYTE PTR [rax],al
   1400292b3:	add    BYTE PTR [rax+0x0],al
   1400292b6:	add    BYTE PTR [rax],al
   1400292b8:	(bad)  
   1400292b9:	xchg   edx,eax
   1400292ba:	add    al,BYTE PTR [rax]
	...
   1400292c8:	add    DWORD PTR [rax],eax
	...
   1400292d2:	add    BYTE PTR [rax],al
   1400292d4:	adc    BYTE PTR [rsi],0x3
   1400292d7:	add    al,dh
   1400292d9:	xchg   edx,eax
   1400292da:	add    al,BYTE PTR [rax]
   1400292dc:	enter  0x292,0x0
	...
   1400292f8:	add    al,0x0
   1400292fa:	add    BYTE PTR [rax],al
   1400292fc:	or     BYTE PTR [rbx+0x2],dl
   140029302:	add    BYTE PTR [rax],al
   140029304:	add    BYTE PTR [rax],al
   140029306:	add    BYTE PTR [rax],al
   140029308:	xor    BYTE PTR [rbx-0x7b57fffe],dl
   14002930e:	add    al,BYTE PTR [rax]
   140029310:	rol    BYTE PTR [rbx-0x7c07fffe],1
   140029316:	add    al,BYTE PTR [rax]
	...
   140029330:	adc    BYTE PTR [rsi],0x3
   140029333:	add    BYTE PTR [rbx],al
   140029335:	add    BYTE PTR [rax],al
   140029337:	add    BYTE PTR [rax],al
   140029339:	add    BYTE PTR [rax],al
   14002933b:	add    bh,bh
   14002933d:	(bad)  
   14002933e:	(bad)  
   14002933f:	inc    DWORD PTR [rax]
   140029341:	add    BYTE PTR [rax],al
   140029343:	add    BYTE PTR [rax+0x0],al
   140029346:	add    BYTE PTR [rax],al
   140029348:	lock xchg edx,eax
   14002934a:	add    al,BYTE PTR [rax]
	...
   140029358:	add    DWORD PTR [rax],eax
	...
   140029362:	add    BYTE PTR [rax],al
   140029364:	mov    al,0x16
   140029366:	add    eax,DWORD PTR [rax]
   140029368:	adc    BYTE PTR [rbx-0x6ca7fffe],0x2
	...
   140029387:	add    BYTE PTR [rbx],al
   140029389:	add    BYTE PTR [rax],al
   14002938b:	add    BYTE PTR [rax+0x293],bl
   140029391:	add    BYTE PTR [rax],al
   140029393:	add    BYTE PTR [rax],al
   140029395:	add    BYTE PTR [rax],al
   140029397:	add    BYTE PTR [rax-0x2ffffd6d],bh
   14002939d:	add    DWORD PTR [rdx],0x0
   1400293a0:	clc    
   1400293a1:	add    DWORD PTR [rdx],0x0
	...
   1400293b8:	mov    al,0x16
   1400293ba:	add    eax,DWORD PTR [rax]
   1400293bc:	add    al,BYTE PTR [rax]
   1400293be:	add    BYTE PTR [rax],al
   1400293c0:	add    BYTE PTR [rax],al
   1400293c2:	add    BYTE PTR [rax],al
   1400293c4:	(bad)  
   1400293c5:	(bad)  
   1400293c6:	(bad)  
   1400293c7:	inc    DWORD PTR [rax]
   1400293c9:	add    BYTE PTR [rax],al
   1400293cb:	add    BYTE PTR [rax+0x0],al
   1400293ce:	add    BYTE PTR [rax],al
   1400293d0:	adc    BYTE PTR [rbx+0x2],0x0
	...
   1400293df:	add    BYTE PTR [rcx],al
	...
   1400293e9:	add    BYTE PTR [rax],al
   1400293eb:	add    al,ah
   1400293ed:	(bad)  
   1400293ee:	add    eax,DWORD PTR [rax]
   1400293f0:	or     BYTE PTR [rdx+rax*1+0x293e000],dl
	...
   14002940f:	add    BYTE PTR [rax+rax*1],al
   140029412:	add    BYTE PTR [rax],al
   140029414:	and    BYTE PTR [rdx+rax*1+0x0],dl
   14002941b:	add    BYTE PTR [rax],al
   14002941d:	add    BYTE PTR [rax],al
   14002941f:	add    BYTE PTR [rax-0x6c],cl
   140029422:	add    al,BYTE PTR [rax]
   140029424:	test   al,0x84
   140029426:	add    al,BYTE PTR [rax]
   140029428:	rol    BYTE PTR [rbx-0x7c07fffe],1
   14002942e:	add    al,BYTE PTR [rax]
	...
   140029448:	loopne 0x140029460
   14002944a:	add    eax,DWORD PTR [rax]
   14002944c:	add    eax,DWORD PTR [rax]
   14002944e:	add    BYTE PTR [rax],al
   140029450:	add    BYTE PTR [rax],al
   140029452:	add    BYTE PTR [rax],al
   140029454:	(bad)  
   140029455:	(bad)  
   140029456:	(bad)  
   140029457:	inc    DWORD PTR [rax]
   140029459:	add    BYTE PTR [rax],al
   14002945b:	add    BYTE PTR [rax+0x0],al
   14002945e:	add    BYTE PTR [rax],al
   140029460:	or     BYTE PTR [rdx+rax*1+0x0],dl
	...
   14002946f:	add    BYTE PTR [rcx],al
	...
   140029479:	add    BYTE PTR [rax],al
   14002947b:	add    BYTE PTR [rax],ah
   14002947d:	(bad)  
   14002947e:	add    eax,DWORD PTR [rax]
   140029480:	cwde   
   140029481:	xchg   esp,eax
   140029482:	add    al,BYTE PTR [rax]
   140029484:	jo     0x14002941a
   140029486:	add    al,BYTE PTR [rax]
	...
   1400294a0:	add    al,0x0
   1400294a2:	add    BYTE PTR [rax],al
   1400294a4:	mov    al,0x94
   1400294a6:	add    al,BYTE PTR [rax]
	...
   1400294b0:	fcom   DWORD PTR [rdx+rax*1+0x284a800]
   1400294b7:	add    al,dl
   1400294b9:	add    DWORD PTR [rdx],0x0
   1400294bc:	clc    
   1400294bd:	add    DWORD PTR [rdx],0x0
	...
   1400294d8:	and    BYTE PTR [rdi],dl
   1400294da:	add    eax,DWORD PTR [rax]
   1400294dc:	add    eax,DWORD PTR [rax]
   1400294de:	add    BYTE PTR [rax],al
   1400294e0:	add    BYTE PTR [rax],al
   1400294e2:	add    BYTE PTR [rax],al
   1400294e4:	(bad)  
   1400294e5:	(bad)  
   1400294e6:	(bad)  
   1400294e7:	inc    DWORD PTR [rax]
   1400294e9:	add    BYTE PTR [rax],al
   1400294eb:	add    BYTE PTR [rax+0x0],al
   1400294ee:	add    BYTE PTR [rax],al
   1400294f0:	cwde   
   1400294f1:	xchg   esp,eax
   1400294f2:	add    al,BYTE PTR [rax]
	...
   140029500:	add    DWORD PTR [rax],eax
	...
   14002950a:	add    BYTE PTR [rax],al
   14002950c:	(bad)  
   14002950d:	(bad)  
   14002950e:	add    eax,DWORD PTR [rax]
   140029510:	sub    BYTE PTR [rbp-0x6afffffe],dl
   140029516:	add    al,BYTE PTR [rax]
	...
   140029530:	add    al,0x0
   140029532:	add    BYTE PTR [rax],al
   140029534:	rex xchg ebp,eax
   140029536:	add    al,BYTE PTR [rax]
	...
   140029540:	push   0xffffffffa8000295
   140029545:	test   BYTE PTR [rdx],al
   140029547:	add    al,dl
   140029549:	add    DWORD PTR [rdx],0x0
   14002954c:	clc    
   14002954d:	add    DWORD PTR [rdx],0x0
	...
   140029568:	(bad)  
   140029569:	(bad)  
   14002956a:	add    eax,DWORD PTR [rax]
   14002956c:	add    eax,DWORD PTR [rax]
   14002956e:	add    BYTE PTR [rax],al
   140029570:	add    BYTE PTR [rax],al
   140029572:	add    BYTE PTR [rax],al
   140029574:	(bad)  
   140029575:	(bad)  
   140029576:	(bad)  
   140029577:	inc    DWORD PTR [rax]
   140029579:	add    BYTE PTR [rax],al
   14002957b:	add    BYTE PTR [rax+0x0],al
   14002957e:	add    BYTE PTR [rax],al
   140029580:	sub    BYTE PTR [rbp+0x2],dl
	...
   14002958e:	add    BYTE PTR [rax],al
   140029590:	add    DWORD PTR [rax],eax
	...
   14002959a:	add    BYTE PTR [rax],al
   14002959c:	cwde   
   14002959d:	(bad)  
   14002959e:	add    eax,DWORD PTR [rax]
   1400295a0:	mov    eax,0x90000295
   1400295a5:	xchg   ebp,eax
   1400295a6:	add    al,BYTE PTR [rax]
	...
   1400295c0:	add    al,0x0
   1400295c2:	add    BYTE PTR [rax],al
   1400295c4:	rcl    BYTE PTR [rbp+0x2],1
   1400295ca:	add    BYTE PTR [rax],al
   1400295cc:	add    BYTE PTR [rax],al
   1400295ce:	add    BYTE PTR [rax],al
   1400295d0:	clc    
   1400295d1:	xchg   ebp,eax
   1400295d2:	add    al,BYTE PTR [rax]
   1400295d4:	test   al,0x84
   1400295d6:	add    al,BYTE PTR [rax]
   1400295d8:	rol    BYTE PTR [rbx-0x7c07fffe],1
   1400295de:	add    al,BYTE PTR [rax]
	...
   1400295f8:	cwde   
   1400295f9:	(bad)  
   1400295fa:	add    eax,DWORD PTR [rax]
   1400295fc:	add    eax,DWORD PTR [rax]
   1400295fe:	add    BYTE PTR [rax],al
   140029600:	add    BYTE PTR [rax],al
   140029602:	add    BYTE PTR [rax],al
   140029604:	(bad)  
   140029605:	(bad)  
   140029606:	(bad)  
   140029607:	inc    DWORD PTR [rax]
   140029609:	add    BYTE PTR [rax],al
   14002960b:	add    BYTE PTR [rax+0x0],al
   14002960e:	add    BYTE PTR [rax],al
   140029610:	mov    eax,0x295
	...
   14002961d:	add    BYTE PTR [rax],al
   14002961f:	add    BYTE PTR [rcx],al
	...
   140029629:	add    BYTE PTR [rax],al
   14002962b:	add    al,cl
   14002962d:	(bad)  
   14002962e:	add    eax,DWORD PTR [rax]
   140029630:	xchg   rsi,rax
   140029632:	add    al,BYTE PTR [rax]
   140029634:	and    BYTE PTR [rsi+0x2],dl
	...
   14002964e:	add    BYTE PTR [rax],al
   140029650:	add    al,0x0
   140029652:	add    BYTE PTR [rax],al
   140029654:	(bad)  
   140029655:	xchg   esi,eax
   140029656:	add    al,BYTE PTR [rax]
	...
   140029660:	mov    BYTE PTR [rsi-0x7b57fffe],dl
   140029666:	add    al,BYTE PTR [rax]
   140029668:	rol    BYTE PTR [rbx-0x7c07fffe],1
   14002966e:	add    al,BYTE PTR [rax]
	...
   140029688:	enter  0x317,0x0
   14002968c:	add    eax,DWORD PTR [rax]
   14002968e:	add    BYTE PTR [rax],al
   140029690:	add    BYTE PTR [rax],al
   140029692:	add    BYTE PTR [rax],al
   140029694:	(bad)  
   140029695:	(bad)  
   140029696:	(bad)  
   140029697:	inc    DWORD PTR [rax]
   140029699:	add    BYTE PTR [rax],al
   14002969b:	add    BYTE PTR [rax+0x0],al
   14002969e:	add    BYTE PTR [rax],al
   1400296a0:	xchg   rsi,rax
   1400296a2:	add    al,BYTE PTR [rax]
	...
   1400296b0:	add    DWORD PTR [rax],eax
	...
   1400296ba:	add    BYTE PTR [rax],al
   1400296bc:	add    BYTE PTR [rax],bl
   1400296be:	add    eax,DWORD PTR [rax]
   1400296c0:	fcom   DWORD PTR [rsi-0x694ffffe]
   1400296c6:	add    al,BYTE PTR [rax]
	...
   1400296e0:	add    al,0x0
   1400296e2:	add    BYTE PTR [rax],al
   1400296e4:	lock xchg esi,eax
   1400296e6:	add    al,BYTE PTR [rax]
	...
   1400296f0:	sbb    BYTE PTR [rdi-0x7b57fffe],dl
   1400296f6:	add    al,BYTE PTR [rax]
   1400296f8:	rol    BYTE PTR [rbx-0x7c07fffe],1
   1400296fe:	add    al,BYTE PTR [rax]
	...
   140029718:	add    BYTE PTR [rax],bl
   14002971a:	add    eax,DWORD PTR [rax]
   14002971c:	add    eax,DWORD PTR [rax]
   14002971e:	add    BYTE PTR [rax],al
   140029720:	add    BYTE PTR [rax],al
   140029722:	add    BYTE PTR [rax],al
   140029724:	(bad)  
   140029725:	(bad)  
   140029726:	(bad)  
   140029727:	inc    DWORD PTR [rax]
   140029729:	add    BYTE PTR [rax],al
   14002972b:	add    BYTE PTR [rax+0x0],al
   14002972e:	add    BYTE PTR [rax],al
   140029730:	fcom   DWORD PTR [rsi+0x2]
	...
   14002973e:	add    BYTE PTR [rax],al
   140029740:	add    DWORD PTR [rax],eax
	...
   14002974a:	add    BYTE PTR [rax],al
   14002974c:	cmp    BYTE PTR [rax],bl
   14002974e:	add    eax,DWORD PTR [rax]
   140029750:	push   0x40000297
   140029755:	xchg   edi,eax
   140029756:	add    al,BYTE PTR [rax]
	...
   140029770:	add    al,0x0
   140029772:	add    BYTE PTR [rax],al
   140029774:	adc    BYTE PTR [rdi+0x2],0x0
   14002977b:	add    BYTE PTR [rax],al
   14002977d:	add    BYTE PTR [rax],al
   14002977f:	add    BYTE PTR [rax-0x57fffd69],ch
   140029785:	test   BYTE PTR [rdx],al
   140029787:	add    al,dl
   140029789:	add    DWORD PTR [rdx],0x0
   14002978c:	clc    
   14002978d:	add    DWORD PTR [rdx],0x0
	...
   1400297a8:	cmp    BYTE PTR [rax],bl
   1400297aa:	add    eax,DWORD PTR [rax]
   1400297ac:	add    eax,DWORD PTR [rax]
   1400297ae:	add    BYTE PTR [rax],al
   1400297b0:	add    BYTE PTR [rax],al
   1400297b2:	add    BYTE PTR [rax],al
   1400297b4:	(bad)  
   1400297b5:	(bad)  
   1400297b6:	(bad)  
   1400297b7:	inc    DWORD PTR [rax]
   1400297b9:	add    BYTE PTR [rax],al
   1400297bb:	add    BYTE PTR [rax+0x0],al
   1400297be:	add    BYTE PTR [rax],al
   1400297c0:	push   0x297
	...
   1400297cd:	add    BYTE PTR [rax],al
   1400297cf:	add    BYTE PTR [rcx],al
	...
   1400297d9:	add    BYTE PTR [rax],al
   1400297db:	add    BYTE PTR [rax+0x18],dh
   1400297de:	add    eax,DWORD PTR [rax]
   1400297e0:	clc    
   1400297e1:	xchg   edi,eax
   1400297e2:	add    al,BYTE PTR [rax]
   1400297e4:	rcl    BYTE PTR [rdi+0x2],1
	...
   1400297fe:	add    BYTE PTR [rax],al
   140029800:	add    al,0x0
   140029802:	add    BYTE PTR [rax],al
   140029804:	adc    BYTE PTR [rax+0x2],bl
   14002980a:	add    BYTE PTR [rax],al
   14002980c:	add    BYTE PTR [rax],al
   14002980e:	add    BYTE PTR [rax],al
   140029810:	cmp    BYTE PTR [rax-0x7b57fffe],bl
   140029816:	add    al,BYTE PTR [rax]
   140029818:	rol    BYTE PTR [rbx-0x7c07fffe],1
   14002981e:	add    al,BYTE PTR [rax]
	...
   140029838:	jo     0x140029852
   14002983a:	add    eax,DWORD PTR [rax]
   14002983c:	add    eax,DWORD PTR [rax]
   14002983e:	add    BYTE PTR [rax],al
   140029840:	add    BYTE PTR [rax],al
   140029842:	add    BYTE PTR [rax],al
   140029844:	(bad)  
   140029845:	(bad)  
   140029846:	(bad)  
   140029847:	inc    DWORD PTR [rax]
   140029849:	add    BYTE PTR [rax],al
   14002984b:	add    BYTE PTR [rax+0x0],al
   14002984e:	add    BYTE PTR [rax],al
   140029850:	clc    
   140029851:	xchg   edi,eax
   140029852:	add    al,BYTE PTR [rax]
	...
   140029860:	add    DWORD PTR [rax],eax
	...
   14002986a:	add    BYTE PTR [rax],al
   14002986c:	test   al,0x18
   14002986e:	add    eax,DWORD PTR [rax]
   140029870:	mov    BYTE PTR [rax-0x679ffffe],bl
   140029876:	add    al,BYTE PTR [rax]
	...
   140029890:	add    al,0x0
   140029892:	add    BYTE PTR [rax],al
   140029894:	movabs al,ds:0x298
   14002989d:	add    BYTE PTR [rax],al
   14002989f:	add    al,cl
   1400298a1:	cwde   
   1400298a2:	add    al,BYTE PTR [rax]
   1400298a4:	test   al,0x84
   1400298a6:	add    al,BYTE PTR [rax]
   1400298a8:	rol    BYTE PTR [rbx-0x7c07fffe],1
   1400298ae:	add    al,BYTE PTR [rax]
	...
   1400298c8:	test   al,0x18
   1400298ca:	add    eax,DWORD PTR [rax]
   1400298cc:	add    eax,DWORD PTR [rax]
   1400298ce:	add    BYTE PTR [rax],al
   1400298d0:	add    BYTE PTR [rax],al
   1400298d2:	add    BYTE PTR [rax],al
   1400298d4:	(bad)  
   1400298d5:	(bad)  
   1400298d6:	(bad)  
   1400298d7:	inc    DWORD PTR [rax]
   1400298d9:	add    BYTE PTR [rax],al
   1400298db:	add    BYTE PTR [rax+0x0],al
   1400298de:	add    BYTE PTR [rax],al
   1400298e0:	mov    BYTE PTR [rax+0x2],bl
	...
   1400298ee:	add    BYTE PTR [rax],al
   1400298f0:	add    DWORD PTR [rax],eax
	...
   1400298fa:	add    BYTE PTR [rax],al
   1400298fc:	loopne 0x140029916
   1400298fe:	add    eax,DWORD PTR [rax]
   140029900:	sbb    BYTE PTR [rcx-0x670ffffe],bl
   140029906:	add    al,BYTE PTR [rax]
	...
   140029920:	add    al,0x0
   140029922:	add    BYTE PTR [rax],al
   140029924:	xor    BYTE PTR [rcx+0x2],bl
   14002992a:	add    BYTE PTR [rax],al
   14002992c:	add    BYTE PTR [rax],al
   14002992e:	add    BYTE PTR [rax],al
   140029930:	pop    rax
   140029931:	cdq    
   140029932:	add    al,BYTE PTR [rax]
   140029934:	test   al,0x84
   140029936:	add    al,BYTE PTR [rax]
   140029938:	rol    BYTE PTR [rbx-0x7c07fffe],1
   14002993e:	add    al,BYTE PTR [rax]
	...
   140029958:	loopne 0x140029972
   14002995a:	add    eax,DWORD PTR [rax]
   14002995c:	add    eax,DWORD PTR [rax]
   14002995e:	add    BYTE PTR [rax],al
   140029960:	add    BYTE PTR [rax],al
   140029962:	add    BYTE PTR [rax],al
   140029964:	(bad)  
   140029965:	(bad)  
   140029966:	(bad)  
   140029967:	inc    DWORD PTR [rax]
   140029969:	add    BYTE PTR [rax],al
   14002996b:	add    BYTE PTR [rax+0x0],al
   14002996e:	add    BYTE PTR [rax],al
   140029970:	sbb    BYTE PTR [rcx+0x2],bl
	...
   14002997e:	add    BYTE PTR [rax],al
   140029980:	add    DWORD PTR [rax],eax
	...
   14002998a:	add    BYTE PTR [rax],al
   14002998c:	sbb    BYTE PTR [rcx],bl
   14002998e:	add    eax,DWORD PTR [rax]
   140029990:	test   al,0x99
   140029992:	add    al,BYTE PTR [rax]
   140029994:	sbb    BYTE PTR [rcx+0x2],0x0
	...
   1400299af:	add    BYTE PTR [rax+rax*1],al
   1400299b2:	add    BYTE PTR [rax],al
   1400299b4:	rcr    BYTE PTR [rcx+0x2],0x0
   1400299bb:	add    BYTE PTR [rax],al
   1400299bd:	add    BYTE PTR [rax],al
   1400299bf:	add    al,ch
   1400299c1:	cdq    
   1400299c2:	add    al,BYTE PTR [rax]
   1400299c4:	test   al,0x84
   1400299c6:	add    al,BYTE PTR [rax]
   1400299c8:	rol    BYTE PTR [rbx-0x7c07fffe],1
   1400299ce:	add    al,BYTE PTR [rax]
	...
   1400299e8:	sbb    BYTE PTR [rcx],bl
   1400299ea:	add    eax,DWORD PTR [rax]
   1400299ec:	add    eax,DWORD PTR [rax]
   1400299ee:	add    BYTE PTR [rax],al
   1400299f0:	add    BYTE PTR [rax],al
   1400299f2:	add    BYTE PTR [rax],al
   1400299f4:	(bad)  
   1400299f5:	(bad)  
   1400299f6:	(bad)  
   1400299f7:	inc    DWORD PTR [rax]
   1400299f9:	add    BYTE PTR [rax],al
   1400299fb:	add    BYTE PTR [rax+0x0],al
   1400299fe:	add    BYTE PTR [rax],al
   140029a00:	test   al,0x99
   140029a02:	add    al,BYTE PTR [rax]
	...
   140029a10:	add    DWORD PTR [rax],eax
	...
   140029a1a:	add    BYTE PTR [rax],al
   140029a1c:	sbb    QWORD PTR [rbx],rax
   140029a1f:	add    BYTE PTR [rax],bh
   140029a21:	(bad)  
   140029a22:	add    al,BYTE PTR [rax]
   140029a24:	adc    BYTE PTR [rdx+0x2],bl
	...
   140029a3e:	add    BYTE PTR [rax],al
   140029a40:	add    al,0x0
   140029a42:	add    BYTE PTR [rax],al
   140029a44:	push   rax
   140029a45:	(bad)  
   140029a46:	add    al,BYTE PTR [rax]
	...
   140029a50:	js     0x1400299ec
   140029a52:	add    al,BYTE PTR [rax]
   140029a54:	test   al,0x84
   140029a56:	add    al,BYTE PTR [rax]
   140029a58:	rol    BYTE PTR [rbx-0x7c07fffe],1
   140029a5e:	add    al,BYTE PTR [rax]
	...
   140029a78:	sbb    QWORD PTR [rbx],rax
   140029a7b:	add    BYTE PTR [rbx],al
   140029a7d:	add    BYTE PTR [rax],al
   140029a7f:	add    BYTE PTR [rax],al
   140029a81:	add    BYTE PTR [rax],al
   140029a83:	add    bh,bh
   140029a85:	(bad)  
   140029a86:	(bad)  
   140029a87:	inc    DWORD PTR [rax]
   140029a89:	add    BYTE PTR [rax],al
   140029a8b:	add    BYTE PTR [rax+0x0],al
   140029a8e:	add    BYTE PTR [rax],al
   140029a90:	cmp    BYTE PTR [rdx+0x2],bl
	...
   140029a9e:	add    BYTE PTR [rax],al
   140029aa0:	add    DWORD PTR [rax],eax
	...
   140029aaa:	add    BYTE PTR [rax],al
   140029aac:	sbb    BYTE PTR [rcx],0x3
   140029aaf:	add    al,cl
   140029ab1:	(bad)  
   140029ab2:	add    al,BYTE PTR [rax]
   140029ab4:	movabs al,ds:0x29a
	...
   140029acd:	add    BYTE PTR [rax],al
   140029acf:	add    BYTE PTR [rax+rax*1],al
   140029ad2:	add    BYTE PTR [rax],al
   140029ad4:	loopne 0x140029a70
   140029ad6:	add    al,BYTE PTR [rax]
	...
   140029ae0:	or     BYTE PTR [rbx-0x7b57fffe],bl
   140029ae6:	add    al,BYTE PTR [rax]
   140029ae8:	rol    BYTE PTR [rbx-0x7c07fffe],1
   140029aee:	add    al,BYTE PTR [rax]
	...
   140029b08:	sbb    BYTE PTR [rcx],0x3
   140029b0b:	add    BYTE PTR [rbx],al
   140029b0d:	add    BYTE PTR [rax],al
   140029b0f:	add    BYTE PTR [rax],al
   140029b11:	add    BYTE PTR [rax],al
   140029b13:	add    bh,bh
   140029b15:	(bad)  
   140029b16:	(bad)  
   140029b17:	inc    DWORD PTR [rax]
   140029b19:	add    BYTE PTR [rax],al
   140029b1b:	add    BYTE PTR [rax+0x0],al
   140029b1e:	add    BYTE PTR [rax],al
   140029b20:	enter  0x29a,0x0
	...
   140029b30:	add    DWORD PTR [rax],eax
	...
   140029b3a:	add    BYTE PTR [rax],al
   140029b3c:	mov    eax,0x58000319
   140029b41:	fwait
   140029b42:	add    al,BYTE PTR [rax]
   140029b44:	xor    BYTE PTR [rbx+0x2],bl
	...
   140029b5e:	add    BYTE PTR [rax],al
   140029b60:	add    al,0x0
   140029b62:	add    BYTE PTR [rax],al
   140029b64:	jo     0x140029b01
   140029b66:	add    al,BYTE PTR [rax]
	...
   140029b70:	cwde   
   140029b71:	fwait
   140029b72:	add    al,BYTE PTR [rax]
   140029b74:	test   al,0x84
   140029b76:	add    al,BYTE PTR [rax]
   140029b78:	rol    BYTE PTR [rbx-0x7c07fffe],1
   140029b7e:	add    al,BYTE PTR [rax]
	...
   140029b98:	mov    eax,0x3000319
   140029b9d:	add    BYTE PTR [rax],al
   140029b9f:	add    BYTE PTR [rax],al
   140029ba1:	add    BYTE PTR [rax],al
   140029ba3:	add    bh,bh
   140029ba5:	(bad)  
   140029ba6:	(bad)  
   140029ba7:	inc    DWORD PTR [rax]
   140029ba9:	add    BYTE PTR [rax],al
   140029bab:	add    BYTE PTR [rax+0x0],al
   140029bae:	add    BYTE PTR [rax],al
   140029bb0:	pop    rax
   140029bb1:	fwait
   140029bb2:	add    al,BYTE PTR [rax]
	...
   140029bc0:	add    DWORD PTR [rax],eax
	...
   140029bca:	add    BYTE PTR [rax],al
   140029bcc:	call   0x128029eea
   140029bd1:	fwait
   140029bd2:	add    al,BYTE PTR [rax]
   140029bd4:	rcr    BYTE PTR [rbx+0x2],0x0
	...
   140029bef:	add    BYTE PTR [rax+rax*1],al
   140029bf2:	add    BYTE PTR [rax],al
   140029bf4:	add    BYTE PTR [rdx+rax*1+0x0],bl
   140029bfb:	add    BYTE PTR [rax],al
   140029bfd:	add    BYTE PTR [rax],al
   140029bff:	add    BYTE PTR [rax],ch
   140029c01:	pushf  
   140029c02:	add    al,BYTE PTR [rax]
   140029c04:	or     BYTE PTR [rbp-0x7c2ffffe],al
   140029c0a:	add    al,BYTE PTR [rax]
   140029c0c:	clc    
   140029c0d:	add    DWORD PTR [rdx],0x0
	...
   140029c28:	call   0x143029f46
   140029c2d:	add    BYTE PTR [rax],al
   140029c2f:	add    BYTE PTR [rax],al
   140029c31:	add    BYTE PTR [rax],al
   140029c33:	add    bh,bh
   140029c35:	(bad)  
   140029c36:	(bad)  
   140029c37:	inc    DWORD PTR [rax]
   140029c39:	add    BYTE PTR [rax],al
   140029c3b:	add    BYTE PTR [rax+0x0],al
   140029c3e:	add    BYTE PTR [rax],al
   140029c40:	call   0x140029ee0
	...
   140029c4d:	add    BYTE PTR [rax],al
   140029c4f:	add    BYTE PTR [rcx],al
	...
   140029c59:	add    BYTE PTR [rax],al
   140029c5b:	add    BYTE PTR [rax],dl
   140029c5d:	sbb    al,BYTE PTR [rbx]
   140029c5f:	add    BYTE PTR [rax-0x64],bh
   140029c62:	add    al,BYTE PTR [rax]
   140029c64:	push   rax
   140029c65:	pushf  
   140029c66:	add    al,BYTE PTR [rax]
	...
   140029c80:	add    eax,DWORD PTR [rax]
   140029c82:	add    BYTE PTR [rax],al
   140029c84:	nop
   140029c85:	pushf  
   140029c86:	add    al,BYTE PTR [rax]
	...
   140029c90:	mov    al,0x9c
   140029c92:	add    al,BYTE PTR [rax]
   140029c94:	rol    BYTE PTR [rbx-0x7c07fffe],1
   140029c9a:	add    al,BYTE PTR [rax]
	...
   140029cb0:	adc    BYTE PTR [rdx],bl
   140029cb2:	add    eax,DWORD PTR [rax]
   140029cb4:	add    al,BYTE PTR [rax]
   140029cb6:	add    BYTE PTR [rax],al
   140029cb8:	add    BYTE PTR [rax],al
   140029cba:	add    BYTE PTR [rax],al
   140029cbc:	(bad)  
   140029cbd:	(bad)  
   140029cbe:	(bad)  
   140029cbf:	inc    DWORD PTR [rax]
   140029cc1:	add    BYTE PTR [rax],al
   140029cc3:	add    BYTE PTR [rax+0x0],al
   140029cc6:	add    BYTE PTR [rax],al
   140029cc8:	js     0x140029c66
   140029cca:	add    al,BYTE PTR [rax]
	...
   140029cd8:	add    DWORD PTR [rax],eax
	...
   140029ce2:	add    BYTE PTR [rax],al
   140029ce4:	sbb    al,BYTE PTR [rbx]
   140029ce7:	add    BYTE PTR [rax],al
   140029ce9:	popf   
   140029cea:	add    al,BYTE PTR [rax]
   140029cec:	fcomp  DWORD PTR [rdx+rax*1+0x0]
	...
   140029d07:	add    BYTE PTR [rax+rax*1],al
   140029d0a:	add    BYTE PTR [rax],al
   140029d0c:	sbb    BYTE PTR [rbp+0x2],bl
   140029d12:	add    BYTE PTR [rax],al
   140029d14:	add    BYTE PTR [rax],al
   140029d16:	add    BYTE PTR [rax],al
   140029d18:	rex popf 
   140029d1a:	add    al,BYTE PTR [rax]
   140029d1c:	or     BYTE PTR [rbp-0x7c2ffffe],al
   140029d22:	add    al,BYTE PTR [rax]
   140029d24:	clc    
   140029d25:	add    DWORD PTR [rdx],0x0
	...
   140029d40:	sbb    al,BYTE PTR [rbx]
   140029d43:	add    BYTE PTR [rbx],al
   140029d45:	add    BYTE PTR [rax],al
   140029d47:	add    BYTE PTR [rax],al
   140029d49:	add    BYTE PTR [rax],al
   140029d4b:	add    bh,bh
   140029d4d:	(bad)  
   140029d4e:	(bad)  
   140029d4f:	inc    DWORD PTR [rax]
   140029d51:	add    BYTE PTR [rax],al
   140029d53:	add    BYTE PTR [rax+0x0],al
   140029d56:	add    BYTE PTR [rax],al
   140029d58:	add    BYTE PTR [rbp+0x2],bl
	...
   140029d66:	add    BYTE PTR [rax],al
   140029d68:	add    DWORD PTR [rax],eax
	...
   140029d72:	add    BYTE PTR [rax],al
   140029d74:	js     0x140029d90
   140029d76:	add    eax,DWORD PTR [rax]
   140029d78:	nop
   140029d79:	popf   
   140029d7a:	add    al,BYTE PTR [rax]
   140029d7c:	push   0x29d
	...
   140029d95:	add    BYTE PTR [rax],al
   140029d97:	add    BYTE PTR [rbx],al
   140029d99:	add    BYTE PTR [rax],al
   140029d9b:	add    BYTE PTR [rax+0x29d],ch
   140029da1:	add    BYTE PTR [rax],al
   140029da3:	add    BYTE PTR [rax],al
   140029da5:	add    BYTE PTR [rax],al
   140029da7:	add    al,cl
   140029da9:	popf   
   140029daa:	add    al,BYTE PTR [rax]
   140029dac:	rol    BYTE PTR [rbx-0x7c07fffe],1
   140029db2:	add    al,BYTE PTR [rax]
	...
   140029dc8:	js     0x140029de4
   140029dca:	add    eax,DWORD PTR [rax]
   140029dcc:	add    al,BYTE PTR [rax]
   140029dce:	add    BYTE PTR [rax],al
   140029dd0:	add    BYTE PTR [rax],al
   140029dd2:	add    BYTE PTR [rax],al
   140029dd4:	(bad)  
   140029dd5:	(bad)  
   140029dd6:	(bad)  
   140029dd7:	inc    DWORD PTR [rax]
   140029dd9:	add    BYTE PTR [rax],al
   140029ddb:	add    BYTE PTR [rax+0x0],al
   140029dde:	add    BYTE PTR [rax],al
   140029de0:	nop
   140029de1:	popf   
   140029de2:	add    al,BYTE PTR [rax]
	...
   140029df0:	add    DWORD PTR [rax],eax
	...
   140029dfa:	add    BYTE PTR [rax],al
   140029dfc:	mov    al,0x1a
   140029dfe:	add    eax,DWORD PTR [rax]
   140029e00:	sbb    BYTE PTR [rsi-0x620ffffe],bl
   140029e06:	add    al,BYTE PTR [rax]
	...
   140029e20:	add    eax,DWORD PTR [rax]
   140029e22:	add    BYTE PTR [rax],al
   140029e24:	xor    BYTE PTR [rsi+0x2],bl
   140029e2a:	add    BYTE PTR [rax],al
   140029e2c:	add    BYTE PTR [rax],al
   140029e2e:	add    BYTE PTR [rax],al
   140029e30:	push   rax
   140029e31:	sahf   
   140029e32:	add    al,BYTE PTR [rax]
   140029e34:	rol    BYTE PTR [rbx-0x7c07fffe],1
   140029e3a:	add    al,BYTE PTR [rax]
	...
   140029e50:	mov    al,0x1a
   140029e52:	add    eax,DWORD PTR [rax]
   140029e54:	add    al,BYTE PTR [rax]
   140029e56:	add    BYTE PTR [rax],al
   140029e58:	add    BYTE PTR [rax],al
   140029e5a:	add    BYTE PTR [rax],al
   140029e5c:	(bad)  
   140029e5d:	(bad)  
   140029e5e:	(bad)  
   140029e5f:	inc    DWORD PTR [rax]
   140029e61:	add    BYTE PTR [rax],al
   140029e63:	add    BYTE PTR [rax+0x0],al
   140029e66:	add    BYTE PTR [rax],al
   140029e68:	sbb    BYTE PTR [rsi+0x2],bl
	...
   140029e76:	add    BYTE PTR [rax],al
   140029e78:	add    DWORD PTR [rax],eax
	...
   140029e82:	add    BYTE PTR [rax],al
   140029e84:	lock sbb al,BYTE PTR [rbx]
   140029e87:	add    BYTE PTR [rax+0x7800029e],ah
   140029e8d:	sahf   
   140029e8e:	add    al,BYTE PTR [rax]
	...
   140029ea8:	add    al,0x0
   140029eaa:	add    BYTE PTR [rax],al
   140029eac:	mov    eax,0x29e
   140029eb1:	add    BYTE PTR [rax],al
   140029eb3:	add    BYTE PTR [rax],al
   140029eb5:	add    BYTE PTR [rax],al
   140029eb7:	add    al,ah
   140029eb9:	sahf   
   140029eba:	add    al,BYTE PTR [rax]
   140029ebc:	or     BYTE PTR [rbp-0x7c2ffffe],al
   140029ec2:	add    al,BYTE PTR [rax]
   140029ec4:	clc    
   140029ec5:	add    DWORD PTR [rdx],0x0
	...
   140029ee0:	lock sbb al,BYTE PTR [rbx]
   140029ee3:	add    BYTE PTR [rbx],al
   140029ee5:	add    BYTE PTR [rax],al
   140029ee7:	add    BYTE PTR [rax],al
   140029ee9:	add    BYTE PTR [rax],al
   140029eeb:	add    bh,bh
   140029eed:	(bad)  
   140029eee:	(bad)  
   140029eef:	inc    DWORD PTR [rax]
   140029ef1:	add    BYTE PTR [rax],al
   140029ef3:	add    BYTE PTR [rax+0x0],al
   140029ef6:	add    BYTE PTR [rax],al
   140029ef8:	movabs al,ds:0x29e
   140029f01:	add    BYTE PTR [rax],al
   140029f03:	add    BYTE PTR [rax],al
   140029f05:	add    BYTE PTR [rax],al
   140029f07:	add    BYTE PTR [rcx],al
	...
   140029f11:	add    BYTE PTR [rax],al
   140029f13:	add    BYTE PTR [rax],ah
   140029f15:	sbb    eax,DWORD PTR [rbx]
   140029f17:	add    BYTE PTR [rax],dh
   140029f19:	lahf   
   140029f1a:	add    al,BYTE PTR [rax]
   140029f1c:	or     BYTE PTR [rdi+0x2],bl
	...
   140029f36:	add    BYTE PTR [rax],al
   140029f38:	add    al,0x0
   140029f3a:	add    BYTE PTR [rax],al
   140029f3c:	rex.W lahf 
   140029f3e:	add    al,BYTE PTR [rax]
	...
   140029f48:	jo     0x140029ee9
   140029f4a:	add    al,BYTE PTR [rax]
   140029f4c:	or     BYTE PTR [rbp-0x7c2ffffe],al
   140029f52:	add    al,BYTE PTR [rax]
   140029f54:	clc    
   140029f55:	add    DWORD PTR [rdx],0x0
	...
   140029f70:	and    BYTE PTR [rbx],bl
   140029f72:	add    eax,DWORD PTR [rax]
   140029f74:	add    eax,DWORD PTR [rax]
   140029f76:	add    BYTE PTR [rax],al
   140029f78:	add    BYTE PTR [rax],al
   140029f7a:	add    BYTE PTR [rax],al
   140029f7c:	(bad)  
   140029f7d:	(bad)  
   140029f7e:	(bad)  
   140029f7f:	inc    DWORD PTR [rax]
   140029f81:	add    BYTE PTR [rax],al
   140029f83:	add    BYTE PTR [rax+0x0],al
   140029f86:	add    BYTE PTR [rax],al
   140029f88:	xor    BYTE PTR [rdi+0x2],bl
	...
   140029f96:	add    BYTE PTR [rax],al
   140029f98:	add    DWORD PTR [rax],eax
	...
   140029fa2:	add    BYTE PTR [rax],al
   140029fa4:	pop    rax
   140029fa5:	sbb    eax,DWORD PTR [rbx]
   140029fa7:	add    al,al
   140029fa9:	lahf   
   140029faa:	add    al,BYTE PTR [rax]
   140029fac:	cwde   
   140029fad:	lahf   
   140029fae:	add    al,BYTE PTR [rax]
	...
   140029fc8:	add    al,0x0
   140029fca:	add    BYTE PTR [rax],al
   140029fcc:	fcomp  DWORD PTR [rdi+0x2]
   140029fd2:	add    BYTE PTR [rax],al
   140029fd4:	add    BYTE PTR [rax],al
   140029fd6:	add    BYTE PTR [rax],al
   140029fd8:	add    BYTE PTR [rax-0x7af7fffe],ah
   140029fde:	add    al,BYTE PTR [rax]
   140029fe0:	rol    BYTE PTR [rbx-0x7c07fffe],1
   140029fe6:	add    al,BYTE PTR [rax]
	...
   14002a000:	pop    rax
   14002a001:	sbb    eax,DWORD PTR [rbx]
   14002a003:	add    BYTE PTR [rbx],al
   14002a005:	add    BYTE PTR [rax],al
   14002a007:	add    BYTE PTR [rax],al
   14002a009:	add    BYTE PTR [rax],al
   14002a00b:	add    bh,bh
   14002a00d:	(bad)  
   14002a00e:	(bad)  
   14002a00f:	inc    DWORD PTR [rax]
   14002a011:	add    BYTE PTR [rax],al
   14002a013:	add    BYTE PTR [rax+0x0],al
   14002a016:	add    BYTE PTR [rax],al
   14002a018:	rcr    BYTE PTR [rdi+0x2],0x0
	...
   14002a027:	add    BYTE PTR [rcx],al
	...
   14002a031:	add    BYTE PTR [rax],al
   14002a033:	add    BYTE PTR [rax+0x5000031b],cl
   14002a039:	movabs al,ds:0x2a0280002
	...
   14002a056:	add    BYTE PTR [rax],al
   14002a058:	add    al,0x0
   14002a05a:	add    BYTE PTR [rax],al
   14002a05c:	push   0x2a0
   14002a061:	add    BYTE PTR [rax],al
   14002a063:	add    BYTE PTR [rax],al
   14002a065:	add    BYTE PTR [rax],al
   14002a067:	add    BYTE PTR [rax+0x80002a0],dl
   14002a06d:	test   DWORD PTR [rdx],eax
   14002a06f:	add    al,dl
   14002a071:	add    DWORD PTR [rdx],0x0
   14002a074:	clc    
   14002a075:	add    DWORD PTR [rdx],0x0
	...
   14002a090:	mov    BYTE PTR [rbx],bl
   14002a092:	add    eax,DWORD PTR [rax]
   14002a094:	add    eax,DWORD PTR [rax]
   14002a096:	add    BYTE PTR [rax],al
   14002a098:	add    BYTE PTR [rax],al
   14002a09a:	add    BYTE PTR [rax],al
   14002a09c:	(bad)  
   14002a09d:	(bad)  
   14002a09e:	(bad)  
   14002a09f:	inc    DWORD PTR [rax]
   14002a0a1:	add    BYTE PTR [rax],al
   14002a0a3:	add    BYTE PTR [rax+0x0],al
   14002a0a6:	add    BYTE PTR [rax],al
   14002a0a8:	push   rax
   14002a0a9:	movabs al,ds:0x2
   14002a0b2:	add    BYTE PTR [rax],al
   14002a0b4:	add    BYTE PTR [rax],al
   14002a0b6:	add    BYTE PTR [rax],al
   14002a0b8:	add    DWORD PTR [rax],eax
	...
   14002a0c2:	add    BYTE PTR [rax],al
   14002a0c4:	rcr    BYTE PTR [rbx],0x3
   14002a0c7:	add    al,ah
   14002a0c9:	movabs al,ds:0x2a0b80002
	...
   14002a0e6:	add    BYTE PTR [rax],al
   14002a0e8:	add    al,0x0
   14002a0ea:	add    BYTE PTR [rax],al
   14002a0ec:	clc    
   14002a0ed:	movabs al,ds:0x2
   14002a0f6:	add    BYTE PTR [rax],al
   14002a0f8:	and    BYTE PTR [rcx-0x7af7fffe],ah
   14002a0fe:	add    al,BYTE PTR [rax]
   14002a100:	rol    BYTE PTR [rbx-0x7c07fffe],1
   14002a106:	add    al,BYTE PTR [rax]
	...
   14002a120:	rcr    BYTE PTR [rbx],0x3
   14002a123:	add    BYTE PTR [rbx],al
   14002a125:	add    BYTE PTR [rax],al
   14002a127:	add    BYTE PTR [rax],al
   14002a129:	add    BYTE PTR [rax],al
   14002a12b:	add    bh,bh
   14002a12d:	(bad)  
   14002a12e:	(bad)  
   14002a12f:	inc    DWORD PTR [rax]
   14002a131:	add    BYTE PTR [rax],al
   14002a133:	add    BYTE PTR [rax+0x0],al
   14002a136:	add    BYTE PTR [rax],al
   14002a138:	loopne 0x14002a0da
   14002a13a:	add    al,BYTE PTR [rax]
	...
   14002a148:	add    DWORD PTR [rax],eax
	...
   14002a152:	add    BYTE PTR [rax],al
   14002a154:	lock sbb eax,DWORD PTR [rbx]
   14002a157:	add    BYTE PTR [rax-0x5f],dh
   14002a15a:	add    al,BYTE PTR [rax]
   14002a15c:	movabs rax,ds:0x2
	...
   14002a176:	add    BYTE PTR [rax],al
   14002a178:	add    al,0x0
   14002a17a:	add    BYTE PTR [rax],al
   14002a17c:	mov    BYTE PTR [rcx+0x2],ah
   14002a182:	add    BYTE PTR [rax],al
   14002a184:	add    BYTE PTR [rax],al
   14002a186:	add    BYTE PTR [rax],al
   14002a188:	mov    al,0xa1
   14002a18a:	add    al,BYTE PTR [rax]
   14002a18c:	or     BYTE PTR [rbp-0x7c2ffffe],al
   14002a192:	add    al,BYTE PTR [rax]
   14002a194:	clc    
   14002a195:	add    DWORD PTR [rdx],0x0
	...
   14002a1b0:	lock sbb eax,DWORD PTR [rbx]
   14002a1b3:	add    BYTE PTR [rbx],al
   14002a1b5:	add    BYTE PTR [rax],al
   14002a1b7:	add    BYTE PTR [rax],al
   14002a1b9:	add    BYTE PTR [rax],al
   14002a1bb:	add    bh,bh
   14002a1bd:	(bad)  
   14002a1be:	(bad)  
   14002a1bf:	inc    DWORD PTR [rax]
   14002a1c1:	add    BYTE PTR [rax],al
   14002a1c3:	add    BYTE PTR [rax+0x0],al
   14002a1c6:	add    BYTE PTR [rax],al
   14002a1c8:	jo     0x14002a16b
   14002a1ca:	add    al,BYTE PTR [rax]
	...
   14002a1d8:	add    DWORD PTR [rax],eax
	...
   14002a1e2:	add    BYTE PTR [rax],al
   14002a1e4:	and    BYTE PTR [rbx+rax*1],bl
   14002a1e7:	add    BYTE PTR [rax],al
   14002a1e9:	movabs ds:0x2a1d80002,al
	...
   14002a206:	add    BYTE PTR [rax],al
   14002a208:	add    al,0x0
   14002a20a:	add    BYTE PTR [rax],al
   14002a20c:	sbb    BYTE PTR [rdx+0x2],ah
   14002a212:	add    BYTE PTR [rax],al
   14002a214:	add    BYTE PTR [rax],al
   14002a216:	add    BYTE PTR [rax],al
   14002a218:	movabs ds:0x83d0000285080002,al
   14002a222:	add    al,BYTE PTR [rax]
   14002a224:	clc    
   14002a225:	add    DWORD PTR [rdx],0x0
	...
   14002a240:	and    BYTE PTR [rbx+rax*1],bl
   14002a243:	add    BYTE PTR [rbx],al
   14002a245:	add    BYTE PTR [rax],al
   14002a247:	add    BYTE PTR [rax],al
   14002a249:	add    BYTE PTR [rax],al
   14002a24b:	add    bh,bh
   14002a24d:	(bad)  
   14002a24e:	(bad)  
   14002a24f:	inc    DWORD PTR [rax]
   14002a251:	add    BYTE PTR [rax],al
   14002a253:	add    BYTE PTR [rax+0x0],al
   14002a256:	add    BYTE PTR [rax],al
   14002a258:	add    BYTE PTR [rdx+0x2],ah
	...
   14002a266:	add    BYTE PTR [rax],al
   14002a268:	add    DWORD PTR [rax],eax
	...
   14002a272:	add    BYTE PTR [rax],al
   14002a274:	pop    rax
   14002a275:	sbb    al,0x3
   14002a277:	add    BYTE PTR [rax+0x680002a2],dl
   14002a27d:	movabs ds:0x2,al
	...
   14002a296:	add    BYTE PTR [rax],al
   14002a298:	add    al,0x0
   14002a29a:	add    BYTE PTR [rax],al
   14002a29c:	test   al,0xa2
   14002a29e:	add    al,BYTE PTR [rax]
	...
   14002a2a8:	shl    BYTE PTR [rdx-0x7af7fffe],1
   14002a2ae:	add    al,BYTE PTR [rax]
   14002a2b0:	rol    BYTE PTR [rbx-0x7c07fffe],1
   14002a2b6:	add    al,BYTE PTR [rax]
	...
   14002a2d0:	pop    rax
   14002a2d1:	sbb    al,0x3
   14002a2d3:	add    BYTE PTR [rbx],al
   14002a2d5:	add    BYTE PTR [rax],al
   14002a2d7:	add    BYTE PTR [rax],al
   14002a2d9:	add    BYTE PTR [rax],al
   14002a2db:	add    bh,bh
   14002a2dd:	(bad)  
   14002a2de:	(bad)  
   14002a2df:	inc    DWORD PTR [rax]
   14002a2e1:	add    BYTE PTR [rax],al
   14002a2e3:	add    BYTE PTR [rax+0x0],al
   14002a2e6:	add    BYTE PTR [rax],al
   14002a2e8:	nop
   14002a2e9:	movabs ds:0x2,al
   14002a2f2:	add    BYTE PTR [rax],al
   14002a2f4:	add    BYTE PTR [rax],al
   14002a2f6:	add    BYTE PTR [rax],al
   14002a2f8:	add    DWORD PTR [rax],eax
	...
   14002a302:	add    BYTE PTR [rax],al
   14002a304:	nop
   14002a305:	sbb    al,0x3
   14002a307:	add    BYTE PTR [rax],ah
   14002a309:	movabs ds:0x2a2f80002,eax
	...
   14002a326:	add    BYTE PTR [rax],al
   14002a328:	add    al,0x0
   14002a32a:	add    BYTE PTR [rax],al
   14002a32c:	cmp    BYTE PTR [rbx+0x2],ah
   14002a332:	add    BYTE PTR [rax],al
   14002a334:	add    BYTE PTR [rax],al
   14002a336:	add    BYTE PTR [rax],al
   14002a338:	(bad)  
   14002a339:	movabs ds:0x83d0000285080002,eax
   14002a342:	add    al,BYTE PTR [rax]
   14002a344:	clc    
   14002a345:	add    DWORD PTR [rdx],0x0
	...
   14002a360:	nop
   14002a361:	sbb    al,0x3
   14002a363:	add    BYTE PTR [rbx],al
   14002a365:	add    BYTE PTR [rax],al
   14002a367:	add    BYTE PTR [rax],al
   14002a369:	add    BYTE PTR [rax],al
   14002a36b:	add    bh,bh
   14002a36d:	(bad)  
   14002a36e:	(bad)  
   14002a36f:	inc    DWORD PTR [rax]
   14002a371:	add    BYTE PTR [rax],al
   14002a373:	add    BYTE PTR [rax+0x0],al
   14002a376:	add    BYTE PTR [rax],al
   14002a378:	and    BYTE PTR [rbx+0x2],ah
	...
   14002a386:	add    BYTE PTR [rax],al
   14002a388:	add    DWORD PTR [rax],eax
	...
   14002a392:	add    BYTE PTR [rax],al
   14002a394:	enter  0x31c,0x0
   14002a398:	mov    al,0xa3
   14002a39a:	add    al,BYTE PTR [rax]
   14002a39c:	mov    BYTE PTR [rbx+0x2],ah
	...
   14002a3b6:	add    BYTE PTR [rax],al
   14002a3b8:	add    al,0x0
   14002a3ba:	add    BYTE PTR [rax],al
   14002a3bc:	enter  0x2a3,0x0
	...
   14002a3c8:	lock movabs ds:0x83d0000285080002,eax
   14002a3d2:	add    al,BYTE PTR [rax]
   14002a3d4:	clc    
   14002a3d5:	add    DWORD PTR [rdx],0x0
	...
   14002a3f0:	enter  0x31c,0x0
   14002a3f4:	add    eax,DWORD PTR [rax]
   14002a3f6:	add    BYTE PTR [rax],al
   14002a3f8:	add    BYTE PTR [rax],al
   14002a3fa:	add    BYTE PTR [rax],al
   14002a3fc:	(bad)  
   14002a3fd:	(bad)  
   14002a3fe:	(bad)  
   14002a3ff:	inc    DWORD PTR [rax]
   14002a401:	add    BYTE PTR [rax],al
   14002a403:	add    BYTE PTR [rax+0x0],al
   14002a406:	add    BYTE PTR [rax],al
   14002a408:	mov    al,0xa3
   14002a40a:	add    al,BYTE PTR [rax]
	...
   14002a418:	add    DWORD PTR [rax],eax
	...
   14002a422:	add    BYTE PTR [rax],al
   14002a424:	add    BYTE PTR [rip+0xffffffffa4400003],bl        # 0xe442a42d
   14002a42a:	add    al,BYTE PTR [rax]
   14002a42c:	sbb    BYTE PTR [rdx+rax*1+0x0],ah
	...
   14002a447:	add    BYTE PTR [rax+rax*1],al
   14002a44a:	add    BYTE PTR [rax],al
   14002a44c:	pop    rax
   14002a44d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002a44e:	add    al,BYTE PTR [rax]
	...
   14002a458:	and    BYTE PTR [rdx+rax*1+0x2850800],0x0
   14002a460:	rol    BYTE PTR [rbx-0x7c07fffe],1
   14002a466:	add    al,BYTE PTR [rax]
	...
   14002a480:	add    BYTE PTR [rip+0x30003],bl        # 0x14005a489
   14002a486:	add    BYTE PTR [rax],al
   14002a488:	add    BYTE PTR [rax],al
   14002a48a:	add    BYTE PTR [rax],al
   14002a48c:	(bad)  
   14002a48d:	(bad)  
   14002a48e:	(bad)  
   14002a48f:	inc    DWORD PTR [rax]
   14002a491:	add    BYTE PTR [rax],al
   14002a493:	add    BYTE PTR [rax+0x0],al
   14002a496:	add    BYTE PTR [rax],al
   14002a498:	rex movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002a49a:	add    al,BYTE PTR [rax]
	...
   14002a4a8:	add    DWORD PTR [rax],eax
	...
   14002a4b2:	add    BYTE PTR [rax],al
   14002a4b4:	xor    BYTE PTR [rip+0xffffffffa4d00003],bl        # 0xe4d2a4bd
   14002a4ba:	add    al,BYTE PTR [rax]
   14002a4bc:	test   al,0xa4
   14002a4be:	add    al,BYTE PTR [rax]
	...
   14002a4d8:	add    al,0x0
   14002a4da:	add    BYTE PTR [rax],al
   14002a4dc:	call   0x14002a785
   14002a4e1:	add    BYTE PTR [rax],al
   14002a4e3:	add    BYTE PTR [rax],al
   14002a4e5:	add    BYTE PTR [rax],al
   14002a4e7:	add    BYTE PTR [rax],dl
   14002a4e9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002a4ea:	add    al,BYTE PTR [rax]
   14002a4ec:	or     BYTE PTR [rbp-0x7c2ffffe],al
   14002a4f2:	add    al,BYTE PTR [rax]
   14002a4f4:	clc    
   14002a4f5:	add    DWORD PTR [rdx],0x0
	...
   14002a510:	xor    BYTE PTR [rip+0x30003],bl        # 0x14005a519
   14002a516:	add    BYTE PTR [rax],al
   14002a518:	add    BYTE PTR [rax],al
   14002a51a:	add    BYTE PTR [rax],al
   14002a51c:	(bad)  
   14002a51d:	(bad)  
   14002a51e:	(bad)  
   14002a51f:	inc    DWORD PTR [rax]
   14002a521:	add    BYTE PTR [rax],al
   14002a523:	add    BYTE PTR [rax+0x0],al
   14002a526:	add    BYTE PTR [rax],al
   14002a528:	shl    BYTE PTR [rdx+rax*1+0x0],1
	...
   14002a537:	add    BYTE PTR [rcx],al
	...
   14002a541:	add    BYTE PTR [rax],al
   14002a543:	add    BYTE PTR [rax+0x1d],ch
   14002a546:	add    eax,DWORD PTR [rax]
   14002a548:	(bad)  
   14002a549:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002a54a:	add    al,BYTE PTR [rax]
   14002a54c:	cmp    BYTE PTR [rbp+0x2],ah
	...
   14002a566:	add    BYTE PTR [rax],al
   14002a568:	add    al,0x0
   14002a56a:	add    BYTE PTR [rax],al
   14002a56c:	js     0x14002a513
   14002a56e:	add    al,BYTE PTR [rax]
	...
   14002a578:	movabs al,ds:0xd0000285080002a5
   14002a581:	add    DWORD PTR [rdx],0x0
   14002a584:	clc    
   14002a585:	add    DWORD PTR [rdx],0x0
	...
   14002a5a0:	push   0x300031d
   14002a5a5:	add    BYTE PTR [rax],al
   14002a5a7:	add    BYTE PTR [rax],al
   14002a5a9:	add    BYTE PTR [rax],al
   14002a5ab:	add    bh,bh
   14002a5ad:	(bad)  
   14002a5ae:	(bad)  
   14002a5af:	inc    DWORD PTR [rax]
   14002a5b1:	add    BYTE PTR [rax],al
   14002a5b3:	add    BYTE PTR [rax+0x0],al
   14002a5b6:	add    BYTE PTR [rax],al
   14002a5b8:	(bad)  
   14002a5b9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002a5ba:	add    al,BYTE PTR [rax]
	...
   14002a5c8:	add    DWORD PTR [rax],eax
	...
   14002a5d2:	add    BYTE PTR [rax],al
   14002a5d4:	cwde   
   14002a5d5:	sbb    eax,0xa5f00003
   14002a5da:	add    al,BYTE PTR [rax]
   14002a5dc:	enter  0x2a5,0x0
	...
   14002a5f8:	add    eax,DWORD PTR [rax]
   14002a5fa:	add    BYTE PTR [rax],al
   14002a5fc:	or     BYTE PTR [rsi+0x2],ah
   14002a602:	add    BYTE PTR [rax],al
   14002a604:	add    BYTE PTR [rax],al
   14002a606:	add    BYTE PTR [rax],al
   14002a608:	sub    BYTE PTR [rsi-0x7c2ffffe],ah
   14002a60e:	add    al,BYTE PTR [rax]
   14002a610:	clc    
   14002a611:	add    DWORD PTR [rdx],0x0
	...
   14002a628:	cwde   
   14002a629:	sbb    eax,0x20003
   14002a62e:	add    BYTE PTR [rax],al
   14002a630:	add    BYTE PTR [rax],al
   14002a632:	add    BYTE PTR [rax],al
   14002a634:	(bad)  
   14002a635:	(bad)  
   14002a636:	(bad)  
   14002a637:	inc    DWORD PTR [rax]
   14002a639:	add    BYTE PTR [rax],al
   14002a63b:	add    BYTE PTR [rax+0x0],al
   14002a63e:	add    BYTE PTR [rax],al
   14002a640:	lock movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002a642:	add    al,BYTE PTR [rax]
	...
   14002a650:	add    DWORD PTR [rax],eax
	...
   14002a65a:	add    BYTE PTR [rax],al
   14002a65c:	enter  0x31d,0x0
   14002a660:	js     0x14002a608
   14002a662:	add    al,BYTE PTR [rax]
   14002a664:	push   rax
   14002a665:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002a666:	add    al,BYTE PTR [rax]
	...
   14002a680:	add    al,0x0
   14002a682:	add    BYTE PTR [rax],al
   14002a684:	nop
   14002a685:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002a686:	add    al,BYTE PTR [rax]
	...
   14002a690:	mov    eax,0x80002a6
   14002a695:	test   DWORD PTR [rdx],eax
   14002a697:	add    al,dl
   14002a699:	add    DWORD PTR [rdx],0x0
   14002a69c:	clc    
   14002a69d:	add    DWORD PTR [rdx],0x0
	...
   14002a6b8:	enter  0x31d,0x0
   14002a6bc:	add    eax,DWORD PTR [rax]
   14002a6be:	add    BYTE PTR [rax],al
   14002a6c0:	add    BYTE PTR [rax],al
   14002a6c2:	add    BYTE PTR [rax],al
   14002a6c4:	(bad)  
   14002a6c5:	(bad)  
   14002a6c6:	(bad)  
   14002a6c7:	inc    DWORD PTR [rax]
   14002a6c9:	add    BYTE PTR [rax],al
   14002a6cb:	add    BYTE PTR [rax+0x0],al
   14002a6ce:	add    BYTE PTR [rax],al
   14002a6d0:	js     0x14002a678
   14002a6d2:	add    al,BYTE PTR [rax]
	...
   14002a6e0:	add    DWORD PTR [rax],eax
	...
   14002a6ea:	add    BYTE PTR [rax],al
   14002a6ec:	add    BYTE PTR [rsi],bl
   14002a6ee:	add    eax,DWORD PTR [rax]
   14002a6f0:	or     BYTE PTR [rdi-0x591ffffe],ah
   14002a6f6:	add    al,BYTE PTR [rax]
	...
   14002a710:	add    eax,DWORD PTR [rax]
   14002a712:	add    BYTE PTR [rax],al
   14002a714:	and    BYTE PTR [rdi+0x2],ah
   14002a71a:	add    BYTE PTR [rax],al
   14002a71c:	add    BYTE PTR [rax],al
   14002a71e:	add    BYTE PTR [rax],al
   14002a720:	rex cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002a722:	add    al,BYTE PTR [rax]
   14002a724:	rol    BYTE PTR [rbx-0x7c07fffe],1
   14002a72a:	add    al,BYTE PTR [rax]
	...
   14002a740:	add    BYTE PTR [rsi],bl
   14002a742:	add    eax,DWORD PTR [rax]
   14002a744:	add    al,BYTE PTR [rax]
   14002a746:	add    BYTE PTR [rax],al
   14002a748:	add    BYTE PTR [rax],al
   14002a74a:	add    BYTE PTR [rax],al
   14002a74c:	(bad)  
   14002a74d:	(bad)  
   14002a74e:	(bad)  
   14002a74f:	inc    DWORD PTR [rax]
   14002a751:	add    BYTE PTR [rax],al
   14002a753:	add    BYTE PTR [rax+0x0],al
   14002a756:	add    BYTE PTR [rax],al
   14002a758:	or     BYTE PTR [rdi+0x2],ah
	...
   14002a766:	add    BYTE PTR [rax],al
   14002a768:	add    DWORD PTR [rax],eax
	...
   14002a772:	add    BYTE PTR [rax],al
   14002a774:	xor    BYTE PTR [rsi],bl
   14002a776:	add    eax,DWORD PTR [rax]
   14002a778:	nop
   14002a779:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002a77a:	add    al,BYTE PTR [rax]
   14002a77c:	push   0x2a7
	...
   14002a795:	add    BYTE PTR [rax],al
   14002a797:	add    BYTE PTR [rbx],al
   14002a799:	add    BYTE PTR [rax],al
   14002a79b:	add    BYTE PTR [rax+0x2a7],ch
   14002a7a1:	add    BYTE PTR [rax],al
   14002a7a3:	add    BYTE PTR [rax],al
   14002a7a5:	add    BYTE PTR [rax],al
   14002a7a7:	add    al,cl
   14002a7a9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002a7aa:	add    al,BYTE PTR [rax]
   14002a7ac:	rol    BYTE PTR [rbx-0x7c07fffe],1
   14002a7b2:	add    al,BYTE PTR [rax]
	...
   14002a7c8:	xor    BYTE PTR [rsi],bl
   14002a7ca:	add    eax,DWORD PTR [rax]
   14002a7cc:	add    al,BYTE PTR [rax]
   14002a7ce:	add    BYTE PTR [rax],al
   14002a7d0:	add    BYTE PTR [rax],al
   14002a7d2:	add    BYTE PTR [rax],al
   14002a7d4:	(bad)  
   14002a7d5:	(bad)  
   14002a7d6:	(bad)  
   14002a7d7:	inc    DWORD PTR [rax]
   14002a7d9:	add    BYTE PTR [rax],al
   14002a7db:	add    BYTE PTR [rax+0x0],al
   14002a7de:	add    BYTE PTR [rax],al
   14002a7e0:	nop
   14002a7e1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002a7e2:	add    al,BYTE PTR [rax]
	...
   14002a7f0:	add    DWORD PTR [rax],eax
	...
   14002a7fa:	add    BYTE PTR [rax],al
   14002a7fc:	(bad)  
   14002a7fd:	(bad)  
   14002a7fe:	add    eax,DWORD PTR [rax]
   14002a800:	sbb    BYTE PTR [rax-0x580ffffe],ch
   14002a806:	add    al,BYTE PTR [rax]
	...
   14002a820:	add    eax,DWORD PTR [rax]
   14002a822:	add    BYTE PTR [rax],al
   14002a824:	xor    BYTE PTR [rax+0x2],ch
   14002a82a:	add    BYTE PTR [rax],al
   14002a82c:	add    BYTE PTR [rax],al
   14002a82e:	add    BYTE PTR [rax],al
   14002a830:	push   rax
   14002a831:	test   al,0x2
   14002a833:	add    al,dl
   14002a835:	add    DWORD PTR [rdx],0x0
   14002a838:	clc    
   14002a839:	add    DWORD PTR [rdx],0x0
	...
   14002a850:	(bad)  
   14002a851:	(bad)  
   14002a852:	add    eax,DWORD PTR [rax]
   14002a854:	add    al,BYTE PTR [rax]
   14002a856:	add    BYTE PTR [rax],al
   14002a858:	add    BYTE PTR [rax],al
   14002a85a:	add    BYTE PTR [rax],al
   14002a85c:	(bad)  
   14002a85d:	(bad)  
   14002a85e:	(bad)  
   14002a85f:	inc    DWORD PTR [rax]
   14002a861:	add    BYTE PTR [rax],al
   14002a863:	add    BYTE PTR [rax+0x0],al
   14002a866:	add    BYTE PTR [rax],al
   14002a868:	sbb    BYTE PTR [rax+0x2],ch
	...
   14002a876:	add    BYTE PTR [rax],al
   14002a878:	add    DWORD PTR [rax],eax
	...
   14002a882:	add    BYTE PTR [rax],al
   14002a884:	nop
   14002a885:	(bad)  
   14002a886:	add    eax,DWORD PTR [rax]
   14002a888:	movabs al,ds:0x2a8780002a8
	...
   14002a8a5:	add    BYTE PTR [rax],al
   14002a8a7:	add    BYTE PTR [rax+rax*1],al
   14002a8aa:	add    BYTE PTR [rax],al
   14002a8ac:	mov    eax,0x2a8
   14002a8b1:	add    BYTE PTR [rax],al
   14002a8b3:	add    BYTE PTR [rax],al
   14002a8b5:	add    BYTE PTR [rax],al
   14002a8b7:	add    al,ah
   14002a8b9:	test   al,0x2
   14002a8bb:	add    BYTE PTR [rax],cl
   14002a8bd:	test   DWORD PTR [rdx],eax
   14002a8bf:	add    al,dl
   14002a8c1:	add    DWORD PTR [rdx],0x0
   14002a8c4:	clc    
   14002a8c5:	add    DWORD PTR [rdx],0x0
	...
   14002a8e0:	nop
   14002a8e1:	(bad)  
   14002a8e2:	add    eax,DWORD PTR [rax]
   14002a8e4:	add    eax,DWORD PTR [rax]
   14002a8e6:	add    BYTE PTR [rax],al
   14002a8e8:	add    BYTE PTR [rax],al
   14002a8ea:	add    BYTE PTR [rax],al
   14002a8ec:	(bad)  
   14002a8ed:	(bad)  
   14002a8ee:	(bad)  
   14002a8ef:	inc    DWORD PTR [rax]
   14002a8f1:	add    BYTE PTR [rax],al
   14002a8f3:	add    BYTE PTR [rax+0x0],al
   14002a8f6:	add    BYTE PTR [rax],al
   14002a8f8:	movabs al,ds:0x2a8
   14002a901:	add    BYTE PTR [rax],al
   14002a903:	add    BYTE PTR [rax],al
   14002a905:	add    BYTE PTR [rax],al
   14002a907:	add    BYTE PTR [rcx],al
	...
   14002a911:	add    BYTE PTR [rax],al
   14002a913:	add    al,cl
   14002a915:	(bad)  
   14002a916:	add    eax,DWORD PTR [rax]
   14002a918:	xor    BYTE PTR [rcx-0x56f7fffe],ch
   14002a91e:	add    al,BYTE PTR [rax]
	...
   14002a938:	add    al,0x0
   14002a93a:	add    BYTE PTR [rax],al
   14002a93c:	test   rax,0x2
   14002a942:	add    BYTE PTR [rax],al
   14002a944:	add    BYTE PTR [rax],al
   14002a946:	add    BYTE PTR [rax],al
   14002a948:	jo     0x14002a8f3
   14002a94a:	add    al,BYTE PTR [rax]
   14002a94c:	or     BYTE PTR [rbp-0x7c2ffffe],al
   14002a952:	add    al,BYTE PTR [rax]
   14002a954:	clc    
   14002a955:	add    DWORD PTR [rdx],0x0
	...
   14002a970:	enter  0x31e,0x0
   14002a974:	add    eax,DWORD PTR [rax]
   14002a976:	add    BYTE PTR [rax],al
   14002a978:	add    BYTE PTR [rax],al
   14002a97a:	add    BYTE PTR [rax],al
   14002a97c:	(bad)  
   14002a97d:	(bad)  
   14002a97e:	(bad)  
   14002a97f:	inc    DWORD PTR [rax]
   14002a981:	add    BYTE PTR [rax],al
   14002a983:	add    BYTE PTR [rax+0x0],al
   14002a986:	add    BYTE PTR [rax],al
   14002a988:	xor    BYTE PTR [rcx+0x2],ch
	...
   14002a996:	add    BYTE PTR [rax],al
   14002a998:	add    DWORD PTR [rax],eax
	...
   14002a9a2:	add    BYTE PTR [rax],al
   14002a9a4:	clc    
   14002a9a5:	(bad)  
   14002a9a6:	add    eax,DWORD PTR [rax]
   14002a9a8:	shr    BYTE PTR [rcx-0x5667fffe],0x2
	...
   14002a9c7:	add    BYTE PTR [rbx],al
   14002a9c9:	add    BYTE PTR [rax],al
   14002a9cb:	add    al,bl
   14002a9cd:	test   eax,0x2
   14002a9d2:	add    BYTE PTR [rax],al
   14002a9d4:	add    BYTE PTR [rax],al
   14002a9d6:	add    BYTE PTR [rax],al
   14002a9d8:	clc    
   14002a9d9:	test   eax,0x83d00002
   14002a9de:	add    al,BYTE PTR [rax]
   14002a9e0:	clc    
   14002a9e1:	add    DWORD PTR [rdx],0x0
	...
   14002a9f8:	clc    
   14002a9f9:	(bad)  
   14002a9fa:	add    eax,DWORD PTR [rax]
   14002a9fc:	add    al,BYTE PTR [rax]
   14002a9fe:	add    BYTE PTR [rax],al
   14002aa00:	add    BYTE PTR [rax],al
   14002aa02:	add    BYTE PTR [rax],al
   14002aa04:	(bad)  
   14002aa05:	(bad)  
   14002aa06:	(bad)  
   14002aa07:	inc    DWORD PTR [rax]
   14002aa09:	add    BYTE PTR [rax],al
   14002aa0b:	add    BYTE PTR [rax+0x0],al
   14002aa0e:	add    BYTE PTR [rax],al
   14002aa10:	shr    BYTE PTR [rcx+0x2],0x0
	...
   14002aa1f:	add    BYTE PTR [rcx],al
	...
   14002aa29:	add    BYTE PTR [rax],al
   14002aa2b:	add    BYTE PTR [rax],ah
   14002aa2d:	(bad)  
   14002aa2e:	add    eax,DWORD PTR [rax]
   14002aa30:	rex.W stos BYTE PTR es:[rdi],al
   14002aa32:	add    al,BYTE PTR [rax]
   14002aa34:	and    BYTE PTR [rdx+0x2],ch
	...
   14002aa4e:	add    BYTE PTR [rax],al
   14002aa50:	add    eax,DWORD PTR [rax]
   14002aa52:	add    BYTE PTR [rax],al
   14002aa54:	(bad)  
   14002aa55:	stos   BYTE PTR es:[rdi],al
   14002aa56:	add    al,BYTE PTR [rax]
	...
   14002aa60:	sub    BYTE PTR [rdx-0x7c2ffffe],0x2
   14002aa67:	add    al,bh
   14002aa69:	add    DWORD PTR [rdx],0x0
	...
   14002aa80:	and    BYTE PTR [rdi],bl
   14002aa82:	add    eax,DWORD PTR [rax]
   14002aa84:	add    al,BYTE PTR [rax]
   14002aa86:	add    BYTE PTR [rax],al
   14002aa88:	add    BYTE PTR [rax],al
   14002aa8a:	add    BYTE PTR [rax],al
   14002aa8c:	(bad)  
   14002aa8d:	(bad)  
   14002aa8e:	(bad)  
   14002aa8f:	inc    DWORD PTR [rax]
   14002aa91:	add    BYTE PTR [rax],al
   14002aa93:	add    BYTE PTR [rax+0x0],al
   14002aa96:	add    BYTE PTR [rax],al
   14002aa98:	rex.W stos BYTE PTR es:[rdi],al
   14002aa9a:	add    al,BYTE PTR [rax]
	...
   14002aaa8:	add    DWORD PTR [rax],eax
	...
   14002aab2:	add    BYTE PTR [rax],al
   14002aab4:	push   rax
   14002aab5:	(bad)  
   14002aab6:	add    eax,DWORD PTR [rax]
   14002aab8:	shr    BYTE PTR [rdx-0x5557fffe],1
   14002aabe:	add    al,BYTE PTR [rax]
	...
   14002aad8:	add    al,0x0
   14002aada:	add    BYTE PTR [rax],al
   14002aadc:	call   0x14002ad8b
   14002aae1:	add    BYTE PTR [rax],al
   14002aae3:	add    BYTE PTR [rax],al
   14002aae5:	add    BYTE PTR [rax],al
   14002aae7:	add    BYTE PTR [rax],dl
   14002aae9:	stos   DWORD PTR es:[rdi],eax
   14002aaea:	add    al,BYTE PTR [rax]
   14002aaec:	or     BYTE PTR [rbp-0x7c2ffffe],al
   14002aaf2:	add    al,BYTE PTR [rax]
   14002aaf4:	clc    
   14002aaf5:	add    DWORD PTR [rdx],0x0
	...
   14002ab10:	push   rax
   14002ab11:	(bad)  
   14002ab12:	add    eax,DWORD PTR [rax]
   14002ab14:	add    eax,DWORD PTR [rax]
   14002ab16:	add    BYTE PTR [rax],al
   14002ab18:	add    BYTE PTR [rax],al
   14002ab1a:	add    BYTE PTR [rax],al
   14002ab1c:	(bad)  
   14002ab1d:	(bad)  
   14002ab1e:	(bad)  
   14002ab1f:	inc    DWORD PTR [rax]
   14002ab21:	add    BYTE PTR [rax],al
   14002ab23:	add    BYTE PTR [rax+0x0],al
   14002ab26:	add    BYTE PTR [rax],al
   14002ab28:	shr    BYTE PTR [rdx+0x2],1
	...
   14002ab36:	add    BYTE PTR [rax],al
   14002ab38:	add    DWORD PTR [rax],eax
	...
   14002ab42:	add    BYTE PTR [rax],al
   14002ab44:	sbb    BYTE PTR [rdi],0x3
   14002ab47:	add    BYTE PTR [rax-0x55],ah
   14002ab4a:	add    al,BYTE PTR [rax]
   14002ab4c:	cmp    BYTE PTR [rbx+0x2],ch
	...
   14002ab66:	add    BYTE PTR [rax],al
   14002ab68:	add    al,0x0
   14002ab6a:	add    BYTE PTR [rax],al
   14002ab6c:	js     0x14002ab19
   14002ab6e:	add    al,BYTE PTR [rax]
	...
   14002ab78:	movabs al,ds:0xd0000284a80002ab
   14002ab81:	add    DWORD PTR [rdx],0x0
   14002ab84:	clc    
   14002ab85:	add    DWORD PTR [rdx],0x0
	...
   14002aba0:	sbb    BYTE PTR [rdi],0x3
   14002aba3:	add    BYTE PTR [rbx],al
   14002aba5:	add    BYTE PTR [rax],al
   14002aba7:	add    BYTE PTR [rax],al
   14002aba9:	add    BYTE PTR [rax],al
   14002abab:	add    bh,bh
   14002abad:	(bad)  
   14002abae:	(bad)  
   14002abaf:	inc    DWORD PTR [rax]
   14002abb1:	add    BYTE PTR [rax],al
   14002abb3:	add    BYTE PTR [rax+0x0],al
   14002abb6:	add    BYTE PTR [rax],al
   14002abb8:	(bad)  
   14002abb9:	stos   DWORD PTR es:[rdi],eax
   14002abba:	add    al,BYTE PTR [rax]
	...
   14002abc8:	add    DWORD PTR [rax],eax
	...
   14002abd2:	add    BYTE PTR [rax],al
   14002abd4:	mov    eax,0xf000031f
   14002abd9:	stos   DWORD PTR es:[rdi],eax
   14002abda:	add    al,BYTE PTR [rax]
   14002abdc:	enter  0x2ab,0x0
	...
   14002abf8:	add    eax,0x8000000
   14002abfd:	lods   al,BYTE PTR ds:[rsi]
   14002abfe:	add    al,BYTE PTR [rax]
	...
   14002ac08:	cmp    BYTE PTR [rdx+rax*1+0x2aba000],ch
   14002ac0f:	add    BYTE PTR [rax-0x2ffffd7c],ch
   14002ac15:	add    DWORD PTR [rdx],0x0
   14002ac18:	clc    
   14002ac19:	add    DWORD PTR [rdx],0x0
	...
   14002ac38:	mov    eax,0x400031f
   14002ac3d:	add    BYTE PTR [rax],al
   14002ac3f:	add    BYTE PTR [rax],al
   14002ac41:	add    BYTE PTR [rax],al
   14002ac43:	add    bh,bh
   14002ac45:	(bad)  
   14002ac46:	(bad)  
   14002ac47:	inc    DWORD PTR [rax]
   14002ac49:	add    BYTE PTR [rax],al
   14002ac4b:	add    BYTE PTR [rax+0x0],al
   14002ac4e:	add    BYTE PTR [rax],al
   14002ac50:	lock stos DWORD PTR es:[rdi],eax
   14002ac52:	add    al,BYTE PTR [rax]
	...
   14002ac60:	add    DWORD PTR [rax],eax
	...
   14002ac6a:	add    BYTE PTR [rax],al
   14002ac6c:	lock (bad) 
   14002ac6e:	add    eax,DWORD PTR [rax]
   14002ac70:	mov    BYTE PTR [rdx+rax*1+0x2ac6000],ch
	...
   14002ac8f:	add    BYTE PTR [rbx],al
   14002ac91:	add    BYTE PTR [rax],al
   14002ac93:	add    BYTE PTR [rax+0x2ac],ah
   14002ac99:	add    BYTE PTR [rax],al
   14002ac9b:	add    BYTE PTR [rax],al
   14002ac9d:	add    BYTE PTR [rax],al
   14002ac9f:	add    al,al
   14002aca1:	lods   al,BYTE PTR ds:[rsi]
   14002aca2:	add    al,BYTE PTR [rax]
   14002aca4:	rol    BYTE PTR [rbx-0x7c07fffe],1
   14002acaa:	add    al,BYTE PTR [rax]
	...
   14002acc0:	lock (bad) 
   14002acc2:	add    eax,DWORD PTR [rax]
   14002acc4:	add    al,BYTE PTR [rax]
   14002acc6:	add    BYTE PTR [rax],al
   14002acc8:	add    BYTE PTR [rax],al
   14002acca:	add    BYTE PTR [rax],al
   14002accc:	(bad)  
   14002accd:	(bad)  
   14002acce:	(bad)  
   14002accf:	inc    DWORD PTR [rax]
   14002acd1:	add    BYTE PTR [rax],al
   14002acd3:	add    BYTE PTR [rax+0x0],al
   14002acd6:	add    BYTE PTR [rax],al
   14002acd8:	mov    BYTE PTR [rdx+rax*1+0x0],ch
	...
   14002acef:	add    BYTE PTR [rbx],al
   14002acf1:	add    BYTE PTR [rax],al
   14002acf3:	add    BYTE PTR [rax],al
   14002acf5:	lods   eax,DWORD PTR ds:[rsi]
   14002acf6:	add    al,BYTE PTR [rax]
	...
   14002ad00:	and    BYTE PTR [rbp-0x7c2ffffe],ch
   14002ad06:	add    al,BYTE PTR [rax]
   14002ad08:	clc    
   14002ad09:	add    DWORD PTR [rdx],0x0
	...
   14002ad20:	sub    BYTE PTR [rax],ah
   14002ad22:	add    eax,DWORD PTR [rax]
   14002ad24:	add    al,BYTE PTR [rax]
   14002ad26:	add    BYTE PTR [rax],al
   14002ad28:	add    BYTE PTR [rax],al
   14002ad2a:	add    BYTE PTR [rax],al
   14002ad2c:	(bad)  
   14002ad2d:	(bad)  
   14002ad2e:	(bad)  
   14002ad2f:	inc    DWORD PTR [rax]
   14002ad31:	add    BYTE PTR [rax],al
   14002ad33:	add    BYTE PTR [rax+0x0],al
   14002ad36:	add    BYTE PTR [rax],al
   14002ad38:	call   0x14002afe9
	...
   14002ad45:	add    BYTE PTR [rax],al
   14002ad47:	add    BYTE PTR [rcx],al
	...
   14002ad51:	add    BYTE PTR [rax],al
   14002ad53:	add    BYTE PTR [rax+0x20],bl
   14002ad56:	add    eax,DWORD PTR [rax]
   14002ad58:	jo     0x14002ad07
   14002ad5a:	add    al,BYTE PTR [rax]
   14002ad5c:	lods   rax,QWORD PTR ds:[rsi]
   14002ad5e:	add    al,BYTE PTR [rax]
	...
   14002ad78:	add    eax,DWORD PTR [rax]
   14002ad7a:	add    BYTE PTR [rax],al
   14002ad7c:	mov    BYTE PTR [rbp+0x2],ch
   14002ad82:	add    BYTE PTR [rax],al
   14002ad84:	add    BYTE PTR [rax],al
   14002ad86:	add    BYTE PTR [rax],al
   14002ad88:	test   al,0xad
   14002ad8a:	add    al,BYTE PTR [rax]
   14002ad8c:	rol    BYTE PTR [rbx-0x7c07fffe],1
   14002ad92:	add    al,BYTE PTR [rax]
	...
   14002ada8:	pop    rax
   14002ada9:	and    BYTE PTR [rbx],al
   14002adab:	add    BYTE PTR [rdx],al
   14002adad:	add    BYTE PTR [rax],al
   14002adaf:	add    BYTE PTR [rax],al
   14002adb1:	add    BYTE PTR [rax],al
   14002adb3:	add    bh,bh
   14002adb5:	(bad)  
   14002adb6:	(bad)  
   14002adb7:	inc    DWORD PTR [rax]
   14002adb9:	add    BYTE PTR [rax],al
   14002adbb:	add    BYTE PTR [rax+0x0],al
   14002adbe:	add    BYTE PTR [rax],al
   14002adc0:	jo     0x14002ad6f
   14002adc2:	add    al,BYTE PTR [rax]
	...
   14002add0:	add    DWORD PTR [rax],eax
	...
   14002adda:	add    BYTE PTR [rax],al
   14002addc:	mov    BYTE PTR [rax],ah
   14002adde:	add    eax,DWORD PTR [rax]
   14002ade0:	clc    
   14002ade1:	lods   eax,DWORD PTR ds:[rsi]
   14002ade2:	add    al,BYTE PTR [rax]
   14002ade4:	shr    BYTE PTR [rbp+0x2],1
	...
   14002adfe:	add    BYTE PTR [rax],al
   14002ae00:	add    eax,DWORD PTR [rax]
   14002ae02:	add    BYTE PTR [rax],al
   14002ae04:	adc    BYTE PTR [rsi+0x2],ch
   14002ae0a:	add    BYTE PTR [rax],al
   14002ae0c:	add    BYTE PTR [rax],al
   14002ae0e:	add    BYTE PTR [rax],al
   14002ae10:	xor    BYTE PTR [rsi-0x7c2ffffe],ch
   14002ae16:	add    al,BYTE PTR [rax]
   14002ae18:	clc    
   14002ae19:	add    DWORD PTR [rdx],0x0
	...
   14002ae30:	mov    BYTE PTR [rax],ah
   14002ae32:	add    eax,DWORD PTR [rax]
   14002ae34:	add    al,BYTE PTR [rax]
   14002ae36:	add    BYTE PTR [rax],al
   14002ae38:	add    BYTE PTR [rax],al
   14002ae3a:	add    BYTE PTR [rax],al
   14002ae3c:	(bad)  
   14002ae3d:	(bad)  
   14002ae3e:	(bad)  
   14002ae3f:	inc    DWORD PTR [rax]
   14002ae41:	add    BYTE PTR [rax],al
   14002ae43:	add    BYTE PTR [rax+0x0],al
   14002ae46:	add    BYTE PTR [rax],al
   14002ae48:	clc    
   14002ae49:	lods   eax,DWORD PTR ds:[rsi]
   14002ae4a:	add    al,BYTE PTR [rax]
	...
   14002ae58:	add    DWORD PTR [rax],eax
	...
   14002ae62:	add    BYTE PTR [rax],al
   14002ae64:	mov    eax,0x80000320
   14002ae69:	scas   al,BYTE PTR es:[rdi]
   14002ae6a:	add    al,BYTE PTR [rax]
   14002ae6c:	pop    rax
   14002ae6d:	scas   al,BYTE PTR es:[rdi]
   14002ae6e:	add    al,BYTE PTR [rax]
	...
   14002ae88:	add    eax,DWORD PTR [rax]
   14002ae8a:	add    BYTE PTR [rax],al
   14002ae8c:	cwde   
   14002ae8d:	scas   al,BYTE PTR es:[rdi]
   14002ae8e:	add    al,BYTE PTR [rax]
	...
   14002ae98:	mov    eax,0xd00002ae
   14002ae9d:	add    DWORD PTR [rdx],0x0
   14002aea0:	clc    
   14002aea1:	add    DWORD PTR [rdx],0x0
	...
   14002aeb8:	mov    eax,0x2000320
   14002aebd:	add    BYTE PTR [rax],al
   14002aebf:	add    BYTE PTR [rax],al
   14002aec1:	add    BYTE PTR [rax],al
   14002aec3:	add    bh,bh
   14002aec5:	(bad)  
   14002aec6:	(bad)  
   14002aec7:	inc    DWORD PTR [rax]
   14002aec9:	add    BYTE PTR [rax],al
   14002aecb:	add    BYTE PTR [rax+0x0],al
   14002aece:	add    BYTE PTR [rax],al
   14002aed0:	sub    BYTE PTR [rsi+0x2],0x0
	...
   14002aedf:	add    BYTE PTR [rcx],al
	...
   14002aee9:	add    BYTE PTR [rax],al
   14002aeeb:	add    al,ch
   14002aeed:	and    BYTE PTR [rbx],al
   14002aeef:	add    BYTE PTR [rax],cl
   14002aef1:	scas   eax,DWORD PTR es:[rdi]
   14002aef2:	add    al,BYTE PTR [rax]
   14002aef4:	loopne 0x14002aea4
   14002aef6:	add    al,BYTE PTR [rax]
	...
   14002af10:	add    al,0x0
   14002af12:	add    BYTE PTR [rax],al
   14002af14:	and    BYTE PTR [rdi+0x2],ch
   14002af1a:	add    BYTE PTR [rax],al
   14002af1c:	add    BYTE PTR [rax],al
   14002af1e:	add    BYTE PTR [rax],al
   14002af20:	scas   rax,QWORD PTR es:[rdi]
   14002af22:	add    al,BYTE PTR [rax]
   14002af24:	and    BYTE PTR [rbp-0x7c2ffffe],ch
   14002af2a:	add    al,BYTE PTR [rax]
   14002af2c:	clc    
   14002af2d:	add    DWORD PTR [rdx],0x0
	...
   14002af48:	call   0x14302b26d
   14002af4d:	add    BYTE PTR [rax],al
   14002af4f:	add    BYTE PTR [rax],al
   14002af51:	add    BYTE PTR [rax],al
   14002af53:	add    bh,bh
   14002af55:	(bad)  
   14002af56:	(bad)  
   14002af57:	inc    DWORD PTR [rax]
   14002af59:	add    BYTE PTR [rax],al
   14002af5b:	add    BYTE PTR [rax+0x0],al
   14002af5e:	add    BYTE PTR [rax],al
   14002af60:	or     BYTE PTR [rdi+0x2],ch
	...
   14002af6e:	add    BYTE PTR [rax],al
   14002af70:	add    DWORD PTR [rax],eax
	...
   14002af7a:	add    BYTE PTR [rax],al
   14002af7c:	and    BYTE PTR [rcx],ah
   14002af7e:	add    eax,DWORD PTR [rax]
   14002af80:	cwde   
   14002af81:	scas   eax,DWORD PTR es:[rdi]
   14002af82:	add    al,BYTE PTR [rax]
   14002af84:	jo     0x14002af35
   14002af86:	add    al,BYTE PTR [rax]
	...
   14002afa0:	add    al,0x0
   14002afa2:	add    BYTE PTR [rax],al
   14002afa4:	mov    al,0xaf
   14002afa6:	add    al,BYTE PTR [rax]
	...
   14002afb0:	fsubr  DWORD PTR [rdi-0x52dffffe]
   14002afb6:	add    al,BYTE PTR [rax]
   14002afb8:	rol    BYTE PTR [rbx-0x7c07fffe],1
   14002afbe:	add    al,BYTE PTR [rax]
	...
   14002afd8:	and    BYTE PTR [rcx],ah
   14002afda:	add    eax,DWORD PTR [rax]
   14002afdc:	add    eax,DWORD PTR [rax]
   14002afde:	add    BYTE PTR [rax],al
   14002afe0:	add    BYTE PTR [rax],al
   14002afe2:	add    BYTE PTR [rax],al
   14002afe4:	(bad)  
   14002afe5:	(bad)  
   14002afe6:	(bad)  
   14002afe7:	inc    DWORD PTR [rax]
   14002afe9:	add    BYTE PTR [rax],al
   14002afeb:	add    BYTE PTR [rax+0x0],al
   14002afee:	add    BYTE PTR [rax],al
   14002aff0:	cwde   
   14002aff1:	scas   eax,DWORD PTR es:[rdi]
   14002aff2:	add    al,BYTE PTR [rax]
	...
   14002b000:	add    DWORD PTR [rax],eax
	...
   14002b00a:	add    BYTE PTR [rax],al
   14002b00c:	pop    rax
   14002b00d:	and    DWORD PTR [rbx],eax
   14002b00f:	add    BYTE PTR [rax],ch
   14002b011:	mov    al,0x2
   14002b013:	add    BYTE PTR [rax],al
   14002b015:	mov    al,0x2
	...
   14002b02f:	add    BYTE PTR [rax+rax*1],al
   14002b032:	add    BYTE PTR [rax],al
   14002b034:	mov    al,0x2
	...
   14002b03f:	add    BYTE PTR [rax-0x50],ch
   14002b042:	add    al,BYTE PTR [rax]
   14002b044:	or     BYTE PTR [rbp-0x7c2ffffe],al
   14002b04a:	add    al,BYTE PTR [rax]
   14002b04c:	clc    
   14002b04d:	add    DWORD PTR [rdx],0x0
	...
   14002b068:	pop    rax
   14002b069:	and    DWORD PTR [rbx],eax
   14002b06b:	add    BYTE PTR [rbx],al
   14002b06d:	add    BYTE PTR [rax],al
   14002b06f:	add    BYTE PTR [rax],al
   14002b071:	add    BYTE PTR [rax],al
   14002b073:	add    bh,bh
   14002b075:	(bad)  
   14002b076:	(bad)  
   14002b077:	inc    DWORD PTR [rax]
   14002b079:	add    BYTE PTR [rax],al
   14002b07b:	add    BYTE PTR [rax+0x0],al
   14002b07e:	add    BYTE PTR [rax],al
   14002b080:	sub    BYTE PTR [rax+0x2],dh
	...
   14002b08e:	add    BYTE PTR [rax],al
   14002b090:	add    DWORD PTR [rax],eax
	...
   14002b09a:	add    BYTE PTR [rax],al
   14002b09c:	nop
   14002b09d:	and    DWORD PTR [rbx],eax
   14002b09f:	add    BYTE PTR [rax-0x6ffffd50],bh
   14002b0a5:	mov    al,0x2
	...
   14002b0bf:	add    BYTE PTR [rbx],al
   14002b0c1:	add    BYTE PTR [rax],al
   14002b0c3:	add    al,dl
   14002b0c5:	mov    al,0x2
	...
   14002b0cf:	add    al,dh
   14002b0d1:	mov    al,0x2
   14002b0d3:	add    al,dl
   14002b0d5:	add    DWORD PTR [rdx],0x0
   14002b0d8:	clc    
   14002b0d9:	add    DWORD PTR [rdx],0x0
	...
   14002b0f0:	nop
   14002b0f1:	and    DWORD PTR [rbx],eax
   14002b0f3:	add    BYTE PTR [rdx],al
   14002b0f5:	add    BYTE PTR [rax],al
   14002b0f7:	add    BYTE PTR [rax],al
   14002b0f9:	add    BYTE PTR [rax],al
   14002b0fb:	add    bh,bh
   14002b0fd:	(bad)  
   14002b0fe:	(bad)  
   14002b0ff:	inc    DWORD PTR [rax]
   14002b101:	add    BYTE PTR [rax],al
   14002b103:	add    BYTE PTR [rax+0x0],al
   14002b106:	add    BYTE PTR [rax],al
   14002b108:	mov    eax,0x2b0
	...
   14002b115:	add    BYTE PTR [rax],al
   14002b117:	add    BYTE PTR [rcx],al
	...
   14002b121:	add    BYTE PTR [rax],al
   14002b123:	add    al,al
   14002b125:	and    DWORD PTR [rbx],eax
   14002b127:	add    BYTE PTR [rax-0x4f],al
   14002b12a:	add    al,BYTE PTR [rax]
   14002b12c:	sbb    BYTE PTR [rcx+0x2],dh
	...
   14002b146:	add    BYTE PTR [rax],al
   14002b148:	add    eax,DWORD PTR [rax]
   14002b14a:	add    BYTE PTR [rax],al
   14002b14c:	pop    rax
   14002b14d:	mov    cl,0x2
	...
   14002b157:	add    BYTE PTR [rax-0x4f],bh
   14002b15a:	add    al,BYTE PTR [rax]
   14002b15c:	rol    BYTE PTR [rbx-0x7c07fffe],1
   14002b162:	add    al,BYTE PTR [rax]
	...
   14002b178:	shl    BYTE PTR [rcx],0x3
   14002b17b:	add    BYTE PTR [rdx],al
   14002b17d:	add    BYTE PTR [rax],al
   14002b17f:	add    BYTE PTR [rax],al
   14002b181:	add    BYTE PTR [rax],al
   14002b183:	add    bh,bh
   14002b185:	(bad)  
   14002b186:	(bad)  
   14002b187:	inc    DWORD PTR [rax]
   14002b189:	add    BYTE PTR [rax],al
   14002b18b:	add    BYTE PTR [rax+0x0],al
   14002b18e:	add    BYTE PTR [rax],al
   14002b190:	mov    cl,0x2
	...
   14002b19f:	add    BYTE PTR [rcx],al
	...
   14002b1a9:	add    BYTE PTR [rax],al
   14002b1ab:	add    al,dh
   14002b1ad:	and    DWORD PTR [rbx],eax
   14002b1af:	add    al,cl
   14002b1b1:	mov    cl,0x2
   14002b1b3:	add    BYTE PTR [rax+0x2b1],ah
	...
   14002b1cd:	add    BYTE PTR [rax],al
   14002b1cf:	add    BYTE PTR [rbx],al
   14002b1d1:	add    BYTE PTR [rax],al
   14002b1d3:	add    al,ah
   14002b1d5:	mov    cl,0x2
	...
   14002b1df:	add    BYTE PTR [rax],al
   14002b1e1:	mov    dl,0x2
   14002b1e3:	add    al,dl
   14002b1e5:	add    DWORD PTR [rdx],0x0
   14002b1e8:	clc    
   14002b1e9:	add    DWORD PTR [rdx],0x0
	...
   14002b200:	lock and DWORD PTR [rbx],eax
   14002b203:	add    BYTE PTR [rdx],al
   14002b205:	add    BYTE PTR [rax],al
   14002b207:	add    BYTE PTR [rax],al
   14002b209:	add    BYTE PTR [rax],al
   14002b20b:	add    bh,bh
   14002b20d:	(bad)  
   14002b20e:	(bad)  
   14002b20f:	inc    DWORD PTR [rax]
   14002b211:	add    BYTE PTR [rax],al
   14002b213:	add    BYTE PTR [rax+0x0],al
   14002b216:	add    BYTE PTR [rax],al
   14002b218:	enter  0x2b1,0x0
	...
   14002b228:	add    DWORD PTR [rax],eax
	...
   14002b232:	add    BYTE PTR [rax],al
   14002b234:	sub    BYTE PTR [rdx],ah
   14002b236:	add    eax,DWORD PTR [rax]
   14002b238:	push   rax
   14002b239:	mov    dl,0x2
   14002b23b:	add    BYTE PTR [rax],ch
   14002b23d:	mov    dl,0x2
	...
   14002b257:	add    BYTE PTR [rbx],al
   14002b259:	add    BYTE PTR [rax],al
   14002b25b:	add    BYTE PTR [rax-0x4e],ch
   14002b25e:	add    al,BYTE PTR [rax]
	...
   14002b268:	mov    BYTE PTR [rdx-0x7c2ffffe],dh
   14002b26e:	add    al,BYTE PTR [rax]
   14002b270:	clc    
   14002b271:	add    DWORD PTR [rdx],0x0
	...
   14002b288:	sub    BYTE PTR [rdx],ah
   14002b28a:	add    eax,DWORD PTR [rax]
   14002b28c:	add    al,BYTE PTR [rax]
   14002b28e:	add    BYTE PTR [rax],al
   14002b290:	add    BYTE PTR [rax],al
   14002b292:	add    BYTE PTR [rax],al
   14002b294:	(bad)  
   14002b295:	(bad)  
   14002b296:	(bad)  
   14002b297:	inc    DWORD PTR [rax]
   14002b299:	add    BYTE PTR [rax],al
   14002b29b:	add    BYTE PTR [rax+0x0],al
   14002b29e:	add    BYTE PTR [rax],al
   14002b2a0:	push   rax
   14002b2a1:	mov    dl,0x2
	...
   14002b2af:	add    BYTE PTR [rcx],al
	...
   14002b2b9:	add    BYTE PTR [rax],al
   14002b2bb:	add    BYTE PTR [rax+0x22],ah
   14002b2be:	add    eax,DWORD PTR [rax]
   14002b2c0:	fdiv   DWORD PTR [rdx-0x4d4ffffe]
   14002b2c6:	add    al,BYTE PTR [rax]
	...
   14002b2e0:	add    eax,DWORD PTR [rax]
   14002b2e2:	add    BYTE PTR [rax],al
   14002b2e4:	lock mov dl,0x2
	...
   14002b2ef:	add    BYTE PTR [rax],dl
   14002b2f1:	mov    bl,0x2
   14002b2f3:	add    al,dl
   14002b2f5:	add    DWORD PTR [rdx],0x0
   14002b2f8:	clc    
   14002b2f9:	add    DWORD PTR [rdx],0x0
	...
   14002b310:	(bad)  
   14002b311:	and    al,BYTE PTR [rbx]
   14002b313:	add    BYTE PTR [rdx],al
   14002b315:	add    BYTE PTR [rax],al
   14002b317:	add    BYTE PTR [rax],al
   14002b319:	add    BYTE PTR [rax],al
   14002b31b:	add    bh,bh
   14002b31d:	(bad)  
   14002b31e:	(bad)  
   14002b31f:	inc    DWORD PTR [rax]
   14002b321:	add    BYTE PTR [rax],al
   14002b323:	add    BYTE PTR [rax+0x0],al
   14002b326:	add    BYTE PTR [rax],al
   14002b328:	fdiv   DWORD PTR [rdx+0x2]
	...
   14002b336:	add    BYTE PTR [rax],al
   14002b338:	add    DWORD PTR [rax],eax
	...
   14002b342:	add    BYTE PTR [rax],al
   14002b344:	nop
   14002b345:	and    al,BYTE PTR [rbx]
   14002b347:	add    BYTE PTR [rax-0x4d],ah
   14002b34a:	add    al,BYTE PTR [rax]
   14002b34c:	cmp    BYTE PTR [rbx+0x2],dh
	...
   14002b366:	add    BYTE PTR [rax],al
   14002b368:	add    eax,DWORD PTR [rax]
   14002b36a:	add    BYTE PTR [rax],al
   14002b36c:	js     0x14002b321
   14002b36e:	add    al,BYTE PTR [rax]
	...
   14002b378:	cwde   
   14002b379:	mov    bl,0x2
   14002b37b:	add    al,dl
   14002b37d:	add    DWORD PTR [rdx],0x0
   14002b380:	clc    
   14002b381:	add    DWORD PTR [rdx],0x0
	...
   14002b398:	nop
   14002b399:	and    al,BYTE PTR [rbx]
   14002b39b:	add    BYTE PTR [rdx],al
   14002b39d:	add    BYTE PTR [rax],al
   14002b39f:	add    BYTE PTR [rax],al
   14002b3a1:	add    BYTE PTR [rax],al
   14002b3a3:	add    bh,bh
   14002b3a5:	(bad)  
   14002b3a6:	(bad)  
   14002b3a7:	inc    DWORD PTR [rax]
   14002b3a9:	add    BYTE PTR [rax],al
   14002b3ab:	add    BYTE PTR [rax+0x0],al
   14002b3ae:	add    BYTE PTR [rax],al
   14002b3b0:	(bad)  
   14002b3b1:	mov    bl,0x2
	...
   14002b3bf:	add    BYTE PTR [rcx],al
	...
   14002b3c9:	add    BYTE PTR [rax],al
   14002b3cb:	add    al,cl
   14002b3cd:	and    al,BYTE PTR [rbx]
   14002b3cf:	add    al,ch
   14002b3d1:	mov    bl,0x2
   14002b3d3:	add    al,al
   14002b3d5:	mov    bl,0x2
	...
   14002b3ef:	add    BYTE PTR [rbx],al
   14002b3f1:	add    BYTE PTR [rax],al
   14002b3f3:	add    BYTE PTR [rax],al
   14002b3f5:	mov    ah,0x2
	...
   14002b3ff:	add    BYTE PTR [rax],ah
   14002b401:	mov    ah,0x2
   14002b403:	add    al,dl
   14002b405:	add    DWORD PTR [rdx],0x0
   14002b408:	clc    
   14002b409:	add    DWORD PTR [rdx],0x0
	...
   14002b420:	enter  0x322,0x0
   14002b424:	add    al,BYTE PTR [rax]
   14002b426:	add    BYTE PTR [rax],al
   14002b428:	add    BYTE PTR [rax],al
   14002b42a:	add    BYTE PTR [rax],al
   14002b42c:	(bad)  
   14002b42d:	(bad)  
   14002b42e:	(bad)  
   14002b42f:	inc    DWORD PTR [rax]
   14002b431:	add    BYTE PTR [rax],al
   14002b433:	add    BYTE PTR [rax+0x0],al
   14002b436:	add    BYTE PTR [rax],al
   14002b438:	call   0x14002b6f0
	...
   14002b445:	add    BYTE PTR [rax],al
   14002b447:	add    BYTE PTR [rcx],al
	...
   14002b451:	add    BYTE PTR [rax],al
   14002b453:	add    al,bh
   14002b455:	and    al,BYTE PTR [rbx]
   14002b457:	add    BYTE PTR [rax-0x4c],dh
   14002b45a:	add    al,BYTE PTR [rax]
   14002b45c:	rex.W mov spl,0x2
	...
   14002b477:	add    BYTE PTR [rbx],al
   14002b479:	add    BYTE PTR [rax],al
   14002b47b:	add    BYTE PTR [rax+0x2b4],cl
   14002b481:	add    BYTE PTR [rax],al
   14002b483:	add    BYTE PTR [rax],al
   14002b485:	add    BYTE PTR [rax],al
   14002b487:	add    BYTE PTR [rax-0x2ffffd4c],ch
   14002b48d:	add    DWORD PTR [rdx],0x0
   14002b490:	clc    
   14002b491:	add    DWORD PTR [rdx],0x0
	...
   14002b4a8:	clc    
   14002b4a9:	and    al,BYTE PTR [rbx]
   14002b4ab:	add    BYTE PTR [rdx],al
   14002b4ad:	add    BYTE PTR [rax],al
   14002b4af:	add    BYTE PTR [rax],al
   14002b4b1:	add    BYTE PTR [rax],al
   14002b4b3:	add    bh,bh
   14002b4b5:	(bad)  
   14002b4b6:	(bad)  
   14002b4b7:	inc    DWORD PTR [rax]
   14002b4b9:	add    BYTE PTR [rax],al
   14002b4bb:	add    BYTE PTR [rax+0x0],al
   14002b4be:	add    BYTE PTR [rax],al
   14002b4c0:	jo     0x14002b476
   14002b4c2:	add    al,BYTE PTR [rax]
	...
   14002b4d0:	add    DWORD PTR [rax],eax
	...
   14002b4da:	add    BYTE PTR [rax],al
   14002b4dc:	xor    BYTE PTR [rbx],ah
   14002b4de:	add    eax,DWORD PTR [rax]
   14002b4e0:	clc    
   14002b4e1:	mov    ah,0x2
   14002b4e3:	add    al,dl
   14002b4e5:	mov    ah,0x2
	...
   14002b4ff:	add    BYTE PTR [rbx],al
   14002b501:	add    BYTE PTR [rax],al
   14002b503:	add    BYTE PTR [rax],dl
   14002b505:	mov    ch,0x2
	...
   14002b50f:	add    BYTE PTR [rax],dh
   14002b511:	mov    ch,0x2
   14002b513:	add    al,dl
   14002b515:	add    DWORD PTR [rdx],0x0
   14002b518:	clc    
   14002b519:	add    DWORD PTR [rdx],0x0
	...
   14002b530:	xor    BYTE PTR [rbx],ah
   14002b532:	add    eax,DWORD PTR [rax]
   14002b534:	add    al,BYTE PTR [rax]
   14002b536:	add    BYTE PTR [rax],al
   14002b538:	add    BYTE PTR [rax],al
   14002b53a:	add    BYTE PTR [rax],al
   14002b53c:	(bad)  
   14002b53d:	(bad)  
   14002b53e:	(bad)  
   14002b53f:	inc    DWORD PTR [rax]
   14002b541:	add    BYTE PTR [rax],al
   14002b543:	add    BYTE PTR [rax+0x0],al
   14002b546:	add    BYTE PTR [rax],al
   14002b548:	clc    
   14002b549:	mov    ah,0x2
	...
   14002b557:	add    BYTE PTR [rcx],al
	...
   14002b561:	add    BYTE PTR [rax],al
   14002b563:	add    BYTE PTR [rax+0x23],ch
   14002b566:	add    eax,DWORD PTR [rax]
   14002b568:	xor    BYTE PTR [rbp-0x4aa7fffe],0x2
	...
   14002b587:	add    BYTE PTR [rbx],al
   14002b589:	add    BYTE PTR [rax],al
   14002b58b:	add    BYTE PTR [rax+0x2b5],bl
   14002b591:	add    BYTE PTR [rax],al
   14002b593:	add    BYTE PTR [rax],al
   14002b595:	add    BYTE PTR [rax],al
   14002b597:	add    BYTE PTR [rax-0x2ffffd4b],bh
   14002b59d:	add    DWORD PTR [rdx],0x0
   14002b5a0:	clc    
   14002b5a1:	add    DWORD PTR [rdx],0x0
	...
   14002b5b8:	push   0x2000323
   14002b5bd:	add    BYTE PTR [rax],al
   14002b5bf:	add    BYTE PTR [rax],al
   14002b5c1:	add    BYTE PTR [rax],al
   14002b5c3:	add    bh,bh
   14002b5c5:	(bad)  
   14002b5c6:	(bad)  
   14002b5c7:	inc    DWORD PTR [rax]
   14002b5c9:	add    BYTE PTR [rax],al
   14002b5cb:	add    BYTE PTR [rax+0x0],al
   14002b5ce:	add    BYTE PTR [rax],al
   14002b5d0:	xor    BYTE PTR [rbp+0x2],0x0
	...
   14002b5e7:	add    BYTE PTR [rbx],al
   14002b5e9:	add    BYTE PTR [rax],al
   14002b5eb:	add    al,bh
   14002b5ed:	mov    ch,0x2
	...
   14002b5f7:	add    BYTE PTR [rax],bl
   14002b5f9:	mov    dh,0x2
   14002b5fb:	add    al,dl
   14002b5fd:	add    DWORD PTR [rdx],0x0
   14002b600:	clc    
   14002b601:	add    DWORD PTR [rdx],0x0
	...
   14002b618:	movabs al,ds:0x2000323
   14002b621:	add    BYTE PTR [rax],al
   14002b623:	add    bh,bh
   14002b625:	(bad)  
   14002b626:	(bad)  
   14002b627:	inc    DWORD PTR [rax]
   14002b629:	add    BYTE PTR [rax],al
   14002b62b:	add    BYTE PTR [rax+0x0],al
   14002b62e:	add    BYTE PTR [rax],al
   14002b630:	loopne 0x14002b5e7
   14002b632:	add    al,BYTE PTR [rax]
	...
   14002b640:	add    DWORD PTR [rax],eax
	...
   14002b64a:	add    BYTE PTR [rax],al
   14002b64c:	shl    BYTE PTR [rbx],1
   14002b64e:	add    eax,DWORD PTR [rax]
   14002b650:	push   0x400002b6
   14002b655:	mov    dh,0x2
	...
   14002b66f:	add    BYTE PTR [rax+rax*1],al
   14002b672:	add    BYTE PTR [rax],al
   14002b674:	xor    BYTE PTR [rsi+0x2],0x0
   14002b67b:	add    BYTE PTR [rax],al
   14002b67d:	add    BYTE PTR [rax],al
   14002b67f:	add    BYTE PTR [rax+0x180002b6],ch
   14002b685:	mov    dh,0x2
   14002b687:	add    al,dl
   14002b689:	add    DWORD PTR [rdx],0x0
   14002b68c:	clc    
   14002b68d:	add    DWORD PTR [rdx],0x0
	...
   14002b6a8:	shl    BYTE PTR [rbx],1
   14002b6aa:	add    eax,DWORD PTR [rax]
   14002b6ac:	add    eax,DWORD PTR [rax]
   14002b6ae:	add    BYTE PTR [rax],al
   14002b6b0:	add    BYTE PTR [rax],al
   14002b6b2:	add    BYTE PTR [rax],al
   14002b6b4:	(bad)  
   14002b6b5:	(bad)  
   14002b6b6:	(bad)  
   14002b6b7:	inc    DWORD PTR [rax]
   14002b6b9:	add    BYTE PTR [rax],al
   14002b6bb:	add    BYTE PTR [rax+0x0],al
   14002b6be:	add    BYTE PTR [rax],al
   14002b6c0:	push   0x2b6
	...
   14002b6cd:	add    BYTE PTR [rax],al
   14002b6cf:	add    BYTE PTR [rcx],al
	...
   14002b6d9:	add    BYTE PTR [rax],al
   14002b6db:	add    BYTE PTR [rax],cl
   14002b6dd:	and    al,0x3
   14002b6df:	add    al,bh
   14002b6e1:	mov    dh,0x2
   14002b6e3:	add    al,dl
   14002b6e5:	mov    dh,0x2
	...
   14002b6ff:	add    BYTE PTR [rax+rax*1],al
   14002b702:	add    BYTE PTR [rax],al
   14002b704:	adc    BYTE PTR [rdi+0x2],dh
   14002b70a:	add    BYTE PTR [rax],al
   14002b70c:	add    BYTE PTR [rax],al
   14002b70e:	add    BYTE PTR [rax],al
   14002b710:	cmp    BYTE PTR [rdi-0x49e7fffe],dh
   14002b716:	add    al,BYTE PTR [rax]
   14002b718:	rol    BYTE PTR [rbx-0x7c07fffe],1
   14002b71e:	add    al,BYTE PTR [rax]
	...
   14002b738:	or     BYTE PTR [rbx+rax*1],ah
   14002b73b:	add    BYTE PTR [rbx],al
   14002b73d:	add    BYTE PTR [rax],al
   14002b73f:	add    BYTE PTR [rax],al
   14002b741:	add    BYTE PTR [rax],al
   14002b743:	add    bh,bh
   14002b745:	(bad)  
   14002b746:	(bad)  
   14002b747:	inc    DWORD PTR [rax]
   14002b749:	add    BYTE PTR [rax],al
   14002b74b:	add    BYTE PTR [rax+0x0],al
   14002b74e:	add    BYTE PTR [rax],al
   14002b750:	clc    
   14002b751:	mov    dh,0x2
	...
   14002b75f:	add    BYTE PTR [rcx],al
	...
   14002b769:	add    BYTE PTR [rax],al
   14002b76b:	add    BYTE PTR [rax+0x24],al
   14002b76e:	add    eax,DWORD PTR [rax]
   14002b770:	mov    BYTE PTR [rdi-0x489ffffe],dh
   14002b776:	add    al,BYTE PTR [rax]
	...
   14002b790:	add    al,0x0
   14002b792:	add    BYTE PTR [rax],al
   14002b794:	movabs al,ds:0x2b7
   14002b79d:	add    BYTE PTR [rax],al
   14002b79f:	add    al,cl
   14002b7a1:	mov    bh,0x2
   14002b7a3:	add    BYTE PTR [rax],bl
   14002b7a5:	mov    dh,0x2
   14002b7a7:	add    al,dl
   14002b7a9:	add    DWORD PTR [rdx],0x0
   14002b7ac:	clc    
   14002b7ad:	add    DWORD PTR [rdx],0x0
	...
   14002b7c8:	and    al,0x3
   14002b7cb:	add    BYTE PTR [rbx],al
   14002b7cd:	add    BYTE PTR [rax],al
   14002b7cf:	add    BYTE PTR [rax],al
   14002b7d1:	add    BYTE PTR [rax],al
   14002b7d3:	add    bh,bh
   14002b7d5:	(bad)  
   14002b7d6:	(bad)  
   14002b7d7:	inc    DWORD PTR [rax]
   14002b7d9:	add    BYTE PTR [rax],al
   14002b7db:	add    BYTE PTR [rax+0x0],al
   14002b7de:	add    BYTE PTR [rax],al
   14002b7e0:	mov    BYTE PTR [rdi+0x2],dh
	...
   14002b7ee:	add    BYTE PTR [rax],al
   14002b7f0:	add    DWORD PTR [rax],eax
	...
   14002b7fa:	add    BYTE PTR [rax],al
   14002b7fc:	js     0x14002b822
   14002b7fe:	add    eax,DWORD PTR [rax]
   14002b800:	sbb    BYTE PTR [rax-0x480ffffe],bh
   14002b806:	add    al,BYTE PTR [rax]
	...
   14002b820:	add    al,0x0
   14002b822:	add    BYTE PTR [rax],al
   14002b824:	xor    BYTE PTR [rax+0x2],bh
   14002b82a:	add    BYTE PTR [rax],al
   14002b82c:	add    BYTE PTR [rax],al
   14002b82e:	add    BYTE PTR [rax],al
   14002b830:	pop    rax
   14002b831:	mov    eax,0xb6180002
   14002b836:	add    al,BYTE PTR [rax]
   14002b838:	rol    BYTE PTR [rbx-0x7c07fffe],1
   14002b83e:	add    al,BYTE PTR [rax]
	...
   14002b858:	js     0x14002b87e
   14002b85a:	add    eax,DWORD PTR [rax]
   14002b85c:	add    eax,DWORD PTR [rax]
   14002b85e:	add    BYTE PTR [rax],al
   14002b860:	add    BYTE PTR [rax],al
   14002b862:	add    BYTE PTR [rax],al
   14002b864:	(bad)  
   14002b865:	(bad)  
   14002b866:	(bad)  
   14002b867:	inc    DWORD PTR [rax]
   14002b869:	add    BYTE PTR [rax],al
   14002b86b:	add    BYTE PTR [rax+0x0],al
   14002b86e:	add    BYTE PTR [rax],al
   14002b870:	sbb    BYTE PTR [rax+0x2],bh
	...
   14002b87e:	add    BYTE PTR [rax],al
   14002b880:	add    DWORD PTR [rax],eax
	...
   14002b88a:	add    BYTE PTR [rax],al
   14002b88c:	mov    al,0x24
   14002b88e:	add    eax,DWORD PTR [rax]
   14002b890:	test   al,0xb8
   14002b892:	add    al,BYTE PTR [rax]
   14002b894:	cmp    BYTE PTR [rax+0x2],0x0
	...
   14002b8af:	add    BYTE PTR [rax+rax*1],al
   14002b8b2:	add    BYTE PTR [rax],al
   14002b8b4:	sar    BYTE PTR [rax+0x2],0x0
   14002b8bb:	add    BYTE PTR [rax],al
   14002b8bd:	add    BYTE PTR [rax],al
   14002b8bf:	add    al,ch
   14002b8c1:	mov    eax,0xb6180002
   14002b8c6:	add    al,BYTE PTR [rax]
   14002b8c8:	rol    BYTE PTR [rbx-0x7c07fffe],1
   14002b8ce:	add    al,BYTE PTR [rax]
	...
   14002b8e8:	mov    al,0x24
   14002b8ea:	add    eax,DWORD PTR [rax]
   14002b8ec:	add    eax,DWORD PTR [rax]
   14002b8ee:	add    BYTE PTR [rax],al
   14002b8f0:	add    BYTE PTR [rax],al
   14002b8f2:	add    BYTE PTR [rax],al
   14002b8f4:	(bad)  
   14002b8f5:	(bad)  
   14002b8f6:	(bad)  
   14002b8f7:	inc    DWORD PTR [rax]
   14002b8f9:	add    BYTE PTR [rax],al
   14002b8fb:	add    BYTE PTR [rax+0x0],al
   14002b8fe:	add    BYTE PTR [rax],al
   14002b900:	test   al,0xb8
   14002b902:	add    al,BYTE PTR [rax]
	...
   14002b910:	add    DWORD PTR [rax],eax
	...
   14002b91a:	add    BYTE PTR [rax],al
   14002b91c:	loopne 0x14002b942
   14002b91e:	add    eax,DWORD PTR [rax]
   14002b920:	cmp    BYTE PTR [rcx-0x46effffe],bh
   14002b926:	add    al,BYTE PTR [rax]
	...
   14002b940:	add    al,0x0
   14002b942:	add    BYTE PTR [rax],al
   14002b944:	push   rax
   14002b945:	mov    ecx,0x2
   14002b94a:	add    BYTE PTR [rax],al
   14002b94c:	add    BYTE PTR [rax],al
   14002b94e:	add    BYTE PTR [rax],al
   14002b950:	js     0x14002b90b
   14002b952:	add    al,BYTE PTR [rax]
   14002b954:	sbb    BYTE PTR [rsi-0x7c2ffffe],dh
   14002b95a:	add    al,BYTE PTR [rax]
   14002b95c:	clc    
   14002b95d:	add    DWORD PTR [rdx],0x0
	...
   14002b978:	loopne 0x14002b99e
   14002b97a:	add    eax,DWORD PTR [rax]
   14002b97c:	add    eax,DWORD PTR [rax]
   14002b97e:	add    BYTE PTR [rax],al
   14002b980:	add    BYTE PTR [rax],al
   14002b982:	add    BYTE PTR [rax],al
   14002b984:	(bad)  
   14002b985:	(bad)  
   14002b986:	(bad)  
   14002b987:	inc    DWORD PTR [rax]
   14002b989:	add    BYTE PTR [rax],al
   14002b98b:	add    BYTE PTR [rax+0x0],al
   14002b98e:	add    BYTE PTR [rax],al
   14002b990:	cmp    BYTE PTR [rcx+0x2],bh
	...
   14002b99e:	add    BYTE PTR [rax],al
   14002b9a0:	add    DWORD PTR [rax],eax
	...
   14002b9aa:	add    BYTE PTR [rax],al
   14002b9ac:	jo     0x14002b9d3
   14002b9ae:	add    eax,DWORD PTR [rax]
   14002b9b0:	enter  0x2b9,0x0
   14002b9b4:	movabs al,ds:0x2b9
	...
   14002b9cd:	add    BYTE PTR [rax],al
   14002b9cf:	add    BYTE PTR [rcx],al
   14002b9d1:	add    BYTE PTR [rax],al
   14002b9d3:	add    al,ah
   14002b9d5:	mov    ecx,0x2
   14002b9da:	add    BYTE PTR [rax],al
   14002b9dc:	add    BYTE PTR [rax],al
   14002b9de:	add    BYTE PTR [rax],al
   14002b9e0:	lock mov ecx,0x2
	...
   14002b9ee:	add    BYTE PTR [rax],al
   14002b9f0:	jo     0x14002ba17
   14002b9f2:	add    eax,DWORD PTR [rax]
	...
   14002b9fc:	(bad)  
   14002b9fd:	(bad)  
   14002b9fe:	(bad)  
   14002b9ff:	inc    DWORD PTR [rax]
   14002ba01:	add    BYTE PTR [rax],al
   14002ba03:	add    BYTE PTR [rax+0x0],al
   14002ba06:	add    BYTE PTR [rax],al
   14002ba08:	enter  0x2b9,0x0
	...
   14002ba38:	add    DWORD PTR [rdx],ecx
   14002ba3a:	add    al,0x0
   14002ba3c:	or     dh,BYTE PTR [rdx+rcx*1]
   14002ba3f:	add    BYTE PTR [rdx],cl
   14002ba41:	jb     0x14002ba49
   14002ba43:	jo     0x14002ba46
   14002ba45:	adc    al,0x6
   14002ba47:	add    BYTE PTR [rsp+riz*2],dl
   14002ba4a:	(bad)  
   14002ba4b:	add    BYTE PTR [rsp+rsi*1],dl
   14002ba4e:	(bad)  
   14002ba4f:	add    BYTE PTR [rdx+rsi*1],dl
   14002ba52:	adc    BYTE PTR [rax+0x1],dh
   14002ba55:	clts   
   14002ba57:	add    BYTE PTR [rdi],cl
   14002ba59:	or     DWORD PTR fs:[rax],eax
   14002ba5c:	sysenter 
   14002ba5e:	or     BYTE PTR [rax],al
   14002ba60:	rsqrtps xmm1,XMMWORD PTR [rbx]
   14002ba63:	jo     0x14002ba7e
   14002ba65:	or     al,0x3
   14002ba67:	add    BYTE PTR [rdx+rax*2],cl
   14002ba6a:	or     al,dh
   14002ba6c:	(bad)  
   14002ba6d:	push   rax
   14002ba6e:	add    BYTE PTR [rax],al
   14002ba70:	push   0xffffffffffffffee
   14002ba72:	add    DWORD PTR [rax],eax
   14002ba74:	pop    rax
   14002ba75:	or     BYTE PTR [rdx],al
   14002ba77:	add    BYTE PTR [rcx],bl
   14002ba79:	sbb    eax,0x92140008
   14002ba7e:	adc    al,dh
   14002ba80:	(bad)  
   14002ba81:	loopne 0x14002ba8f
   14002ba83:	ror    BYTE PTR [rdx],1
   14002ba85:	ror    BYTE PTR [rax],0x70
   14002ba88:	(bad)  
   14002ba89:	(bad)  
   14002ba8a:	(bad)  
   14002ba8b:	xor    BYTE PTR [rdx-0x12],ch
   14002ba8e:	add    DWORD PTR [rax],eax
   14002ba90:	pop    rax
   14002ba91:	or     BYTE PTR [rdx],al
	...
   14002ba9b:	add    BYTE PTR [rcx],al
   14002ba9d:	add    BYTE PTR [rax],al
   14002ba9f:	add    BYTE PTR [rcx],al
   14002baa1:	add    BYTE PTR [rax],al
   14002baa3:	add    BYTE PTR [rax+0x2ba],ch
	...
   14002bab1:	add    BYTE PTR [rax],al
   14002bab3:	add    BYTE PTR [rax+0x480001f7],al
   14002bab9:	add    BYTE PTR [rax],al
   14002babb:	add    BYTE PTR [rax+0x13],dh
   14002babe:	add    BYTE PTR [rax],al
   14002bac0:	(bad)  
   14002bac1:	(bad)  
   14002bac2:	(bad)  
   14002bac3:	jmp    QWORD PTR [rdx]
   14002bac5:	adc    al,0x0
   14002bac7:	add    BYTE PTR [rax],al
   14002bac9:	add    BYTE PTR [rax],al
   14002bacb:	add    BYTE PTR [rbx+0x15],bl
   14002bace:	add    BYTE PTR [rax],al
   14002bad0:	(bad)  
   14002bad1:	(bad)  
   14002bad2:	(bad)  
   14002bad3:	inc    DWORD PTR [rax+0x1f7]
   14002bad9:	add    BYTE PTR [rax],al
   14002badb:	add    BYTE PTR [rdi+0x10001f7],cl
   14002bae1:	add    BYTE PTR [rax],al
   14002bae3:	add    BYTE PTR [rdi+0x1f7],ch
   14002bae9:	add    BYTE PTR [rax],al
   14002baeb:	add    BYTE PTR [rcx],bl
   14002baed:	or     al,0x3
   14002baef:	add    BYTE PTR [rdx+rax*2],cl
   14002baf2:	or     al,dl
   14002baf4:	(bad)  
   14002baf5:	push   rax
   14002baf6:	add    BYTE PTR [rax],al
   14002baf8:	push   0xffffffffffffffee
   14002bafa:	add    DWORD PTR [rax],eax
   14002bafc:	or     BYTE PTR [rax],0x2
   14002baff:	add    BYTE PTR [rcx],bl
   14002bb01:	and    DWORD PTR [rax],ecx
   14002bb03:	add    BYTE PTR [rax],bl
   14002bb05:	xchg   edx,eax
   14002bb06:	adc    al,0xf0
   14002bb08:	adc    ah,al
   14002bb0a:	adc    al,dl
   14002bb0c:	(bad)  
   14002bb0d:	ror    BYTE PTR [rax+rsi*2],0xb
   14002bb11:	(bad)  
   14002bb12:	or     dh,BYTE PTR [rax]
   14002bb14:	push   0xffffffffffffffee
   14002bb16:	add    DWORD PTR [rax],eax
   14002bb18:	or     BYTE PTR [rax],0x2
	...
   14002bb23:	add    BYTE PTR [rcx],al
   14002bb25:	add    BYTE PTR [rax],al
   14002bb27:	add    BYTE PTR [rcx],al
   14002bb29:	add    BYTE PTR [rax],al
   14002bb2b:	add    BYTE PTR [rax],dh
   14002bb2d:	mov    ebx,0x2
	...
   14002bb3a:	add    BYTE PTR [rax],al
   14002bb3c:	shl    bh,1
   14002bb3e:	add    DWORD PTR [rax],eax
   14002bb40:	rex.W add BYTE PTR [rax],al
   14002bb43:	add    al,dl
   14002bb45:	adc    eax,0xffff0000
   14002bb4a:	(bad)  
   14002bb4b:	jmp    QWORD PTR [rax+0x16]
   14002bb51:	add    BYTE PTR [rax],al
   14002bb53:	add    BYTE PTR [rdi+rdx*1+0x0],bh
   14002bb57:	add    bh,bh
   14002bb59:	(bad)  
   14002bb5a:	(bad)  
   14002bb5b:	call   rax
   14002bb5d:	test   DWORD PTR [rcx],0x0
   14002bb63:	add    bh,bl
   14002bb65:	test   DWORD PTR [rcx],0x100
   14002bb6b:	add    bh,bh
   14002bb6d:	test   DWORD PTR [rcx],0x0
   14002bb73:	add    BYTE PTR [rcx],bl
   14002bb75:	or     eax,DWORD PTR [rbx]
   14002bb77:	add    BYTE PTR [rbx],cl
   14002bb79:	rex.X (bad) 
   14002bb7b:	push   rax
   14002bb7c:	(bad)  
   14002bb7d:	xor    BYTE PTR [rax],al
   14002bb7f:	add    BYTE PTR [rdx-0x12],ch
   14002bb82:	add    DWORD PTR [rax],eax
   14002bb84:	test   al,0x8
   14002bb86:	add    al,BYTE PTR [rax]
   14002bb88:	sbb    DWORD PTR [rsi],esp
   14002bb8a:	or     al,BYTE PTR [rax]
   14002bb8c:	es je  0x14002bba0
   14002bb8f:	add    BYTE PTR [rdx],ah
   14002bb91:	adc    BYTE PTR fs:[rax],al
   14002bb94:	(bad)  
   14002bb95:	xor    al,0xf
   14002bb97:	add    BYTE PTR [rcx],dl
   14002bb99:	xchg   edx,eax
   14002bb9a:	or     eax,0x9d00be0
   14002bb9f:	shr    BYTE PTR [rdx-0x12],0x1
   14002bba3:	add    BYTE PTR [rax+0x208],ch
   14002bba9:	add    BYTE PTR [rax],al
   14002bbab:	add    BYTE PTR [rax],al
   14002bbad:	add    BYTE PTR [rax],al
   14002bbaf:	add    BYTE PTR [rcx],al
   14002bbb1:	add    BYTE PTR [rax],al
   14002bbb3:	add    BYTE PTR [rcx],al
   14002bbb5:	add    BYTE PTR [rax],al
   14002bbb7:	add    BYTE PTR [rbx+rdi*4+0x2],bh
	...
   14002bbc6:	add    BYTE PTR [rax],al
   14002bbc8:	and    al,bh
   14002bbca:	add    DWORD PTR [rax],eax
   14002bbcc:	rex.W add BYTE PTR [rax],al
   14002bbcf:	add    BYTE PTR [rax],al
   14002bbd1:	sbb    BYTE PTR [rax],al
   14002bbd3:	add    bh,bh
   14002bbd5:	(bad)  
   14002bbd6:	(bad)  
   14002bbd7:	push   QWORD PTR [rbp+0x18]
   14002bbdd:	add    BYTE PTR [rax],al
   14002bbdf:	add    BYTE PTR [rcx+rbx*1+0x0],dh
   14002bbe3:	add    bh,bh
   14002bbe5:	(bad)  
   14002bbe6:	(bad)  
   14002bbe7:	jmp    QWORD PTR [rax]
   14002bbe9:	clc    
   14002bbea:	add    DWORD PTR [rax],eax
   14002bbec:	add    BYTE PTR [rax],al
   14002bbee:	add    BYTE PTR [rax],al
   14002bbf0:	cs clc 
   14002bbf2:	add    DWORD PTR [rax],eax
   14002bbf4:	add    DWORD PTR [rax],eax
   14002bbf6:	add    BYTE PTR [rax],al
   14002bbf8:	rex.WXB clc 
   14002bbfa:	add    DWORD PTR [rax],eax
   14002bbfc:	add    BYTE PTR [rax],al
   14002bbfe:	add    BYTE PTR [rax],al
   14002bc00:	sbb    DWORD PTR [rbx+rax*1],ecx
   14002bc03:	add    BYTE PTR [rdx+rax*2],cl
   14002bc06:	or     al,al
   14002bc08:	(bad)  
   14002bc09:	push   rax
   14002bc0a:	add    BYTE PTR [rax],al
   14002bc0c:	push   0xffffffffffffffee
   14002bc0e:	add    DWORD PTR [rax],eax
   14002bc10:	ror    BYTE PTR [rax],1
   14002bc12:	add    al,BYTE PTR [rax]
   14002bc14:	sbb    DWORD PTR [rsi],esp
   14002bc16:	or     al,BYTE PTR [rax]
   14002bc18:	es je  0x14002bc2c
   14002bc1b:	add    BYTE PTR [rdx],ah
   14002bc1d:	adc    BYTE PTR fs:[rax],al
   14002bc20:	(bad)  
   14002bc21:	xor    al,0xf
   14002bc23:	add    BYTE PTR [rcx],dl
   14002bc25:	xchg   edx,eax
   14002bc26:	or     eax,0x9d00be0
   14002bc2b:	shr    BYTE PTR [rdx-0x12],0x1
   14002bc2f:	add    al,dl
   14002bc31:	or     BYTE PTR [rdx],al
	...
   14002bc3b:	add    BYTE PTR [rcx],al
   14002bc3d:	add    BYTE PTR [rax],al
   14002bc3f:	add    BYTE PTR [rcx],al
   14002bc41:	add    BYTE PTR [rax],al
   14002bc43:	add    BYTE PTR [rax-0x44],cl
   14002bc46:	add    al,BYTE PTR [rax]
	...
   14002bc54:	(bad)  
   14002bc55:	clc    
   14002bc56:	add    DWORD PTR [rax],eax
   14002bc58:	rex.W add BYTE PTR [rax],al
   14002bc5b:	add    bh,bh
   14002bc5d:	(bad)  
   14002bc5e:	(bad)  
   14002bc5f:	inc    DWORD PTR [rax]
   14002bc61:	add    BYTE PTR [rax],al
   14002bc63:	add    bh,bh
   14002bc65:	(bad)  
   14002bc66:	(bad)  
   14002bc67:	inc    DWORD PTR [rax]
   14002bc69:	add    BYTE PTR [rax],al
   14002bc6b:	add    al,dh
   14002bc6d:	sbb    DWORD PTR [rax],eax
   14002bc6f:	add    bh,bh
   14002bc71:	(bad)  
   14002bc72:	(bad)  
   14002bc73:	dec    DWORD PTR [rdx+0x1a]
   14002bc79:	add    BYTE PTR [rax],al
   14002bc7b:	add    BYTE PTR [rdx],bh
   14002bc7d:	sbb    eax,DWORD PTR [rax]
   14002bc7f:	add    bh,bh
   14002bc81:	(bad)  
   14002bc82:	(bad)  
   14002bc83:	jmp    QWORD PTR [rax-0x8]
   14002bc86:	add    DWORD PTR [rax],eax
   14002bc88:	add    BYTE PTR [rax],al
   14002bc8a:	add    BYTE PTR [rax],al
   14002bc8c:	outs   dx,DWORD PTR ds:[rsi]
   14002bc8d:	clc    
   14002bc8e:	add    DWORD PTR [rax],eax
   14002bc90:	add    DWORD PTR [rax],eax
   14002bc92:	add    BYTE PTR [rax],al
   14002bc94:	mov    eax,?
   14002bc96:	add    DWORD PTR [rax],eax
   14002bc98:	add    BYTE PTR [rax],al
   14002bc9a:	add    BYTE PTR [rax],al
   14002bc9c:	and    DWORD PTR [rax],eax
   14002bc9e:	add    BYTE PTR [rax],al
   14002bca0:	loopne 0x14002bcbd
   14002bca2:	add    BYTE PTR [rax],al
   14002bca4:	or     DWORD PTR [rax+rax*1],ebx
   14002bca7:	add    ah,ah
   14002bca9:	mov    esp,0x5210002
   14002bcae:	add    al,BYTE PTR [rax]
   14002bcb0:	add    eax,0xe0000674
   14002bcb5:	sbb    eax,DWORD PTR [rax]
   14002bcb7:	add    BYTE PTR [rcx],cl
   14002bcb9:	sbb    al,0x0
   14002bcbb:	add    ah,ah
   14002bcbd:	mov    esp,0x210002
   14002bcc2:	add    BYTE PTR [rax],al
   14002bcc4:	loopne 0x14002bce2
   14002bcc6:	add    BYTE PTR [rax],al
   14002bcc8:	or     DWORD PTR [rip+0xffffffffbce40000],ebx        # 0xfce6bcce
   14002bcce:	add    al,BYTE PTR [rax]
   14002bcd0:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b407bcd8
   14002bcd6:	(bad)  
   14002bcd7:	add    al,ah
   14002bcd9:	sbb    al,0x0
   14002bcdb:	add    BYTE PTR [rcx],cl
   14002bcdd:	sbb    eax,0xbce40000
   14002bce2:	add    al,BYTE PTR [rax]
   14002bce4:	add    DWORD PTR [rdi],ecx
   14002bce6:	(bad)  
   14002bce7:	add    BYTE PTR [rdi],cl
   14002bce9:	push   rsp
   14002bcea:	or     BYTE PTR [rax],al
   14002bcec:	sysenter 
   14002bcee:	(bad)  
   14002bcef:	add    BYTE PTR [rdi],cl
   14002bcf1:	xor    cl,BYTE PTR [rbx]
   14002bcf3:	(bad)  
   14002bcf4:	and    DWORD PTR [rax],eax
   14002bcf6:	add    BYTE PTR [rax],al
   14002bcf8:	(bad)  
   14002bcf9:	sbb    eax,0x1d810000
   14002bcfe:	add    BYTE PTR [rax],al
   14002bd00:	sbb    BYTE PTR [rbp+0x5210002],bh
   14002bd06:	add    al,BYTE PTR [rax]
   14002bd08:	add    eax,0x60000634
   14002bd0d:	sbb    eax,0x1d810000
   14002bd12:	add    BYTE PTR [rax],al
   14002bd14:	sbb    BYTE PTR [rbp+0x18010002],bh
   14002bd1a:	(bad)  
   14002bd1b:	add    BYTE PTR [rax],bl
   14002bd1d:	or     BYTE PTR fs:[rax],al
   14002bd20:	sbb    BYTE PTR [rdi+rax*1+0x0],dl
   14002bd24:	sbb    BYTE PTR [rdx],dh
   14002bd26:	adc    al,0x70
   14002bd28:	and    DWORD PTR [rax],eax
   14002bd2a:	add    BYTE PTR [rax],al
   14002bd2c:	and    BYTE PTR [rsi],bl
   14002bd2e:	add    BYTE PTR [rax],al
   14002bd30:	rex.RXB (bad) 
   14002bd32:	add    BYTE PTR [rax],al
   14002bd34:	rex.WR movabs rbp,0x3405000205210002
   14002bd3e:	(bad)  
   14002bd3f:	add    BYTE PTR [rax],ah
   14002bd41:	(bad)  
   14002bd42:	add    BYTE PTR [rax],al
   14002bd44:	rex.RXB (bad) 
   14002bd46:	add    BYTE PTR [rax],al
   14002bd48:	rex.WR movabs rbp,0x640f00060f010002
   14002bd52:	or     BYTE PTR [rax],al
   14002bd54:	andps  xmm0,XMMWORD PTR [rdi]
   14002bd57:	add    BYTE PTR [rdi],cl
   14002bd59:	xor    cl,BYTE PTR [rbx]
   14002bd5b:	jo     0x14002bd76
   14002bd5d:	sbb    eax,DWORD PTR [rbx]
   14002bd5f:	add    BYTE PTR [rcx],cl
   14002bd61:	add    DWORD PTR [rdx],edx
   14002bd63:	add    BYTE PTR [rdx],al
   14002bd65:	xor    BYTE PTR [rax],al
   14002bd67:	add    ah,dl
   14002bd69:	out    dx,al
   14002bd6a:	add    DWORD PTR [rax],eax
   14002bd6c:	add    BYTE PTR [rax],0x0
   14002bd6f:	add    BYTE PTR [rcx],al
   14002bd71:	sbb    cl,BYTE PTR [rdx]
   14002bd73:	add    BYTE PTR [rdx],bl
   14002bd75:	je     0x14002bd80
   14002bd77:	add    BYTE PTR [rdx],bl
   14002bd79:	or     BYTE PTR fs:[rax],al
   14002bd7c:	sbb    dl,BYTE PTR [rdi+rax*1+0x0]
   14002bd80:	sbb    dh,BYTE PTR [rsi+rax*1]
   14002bd83:	add    BYTE PTR [rdx],bl
   14002bd85:	xor    dl,BYTE PTR [rsi]
   14002bd87:	shl    BYTE PTR [rcx],0x0
   14002bd8a:	add    BYTE PTR [rax],al
   14002bd8c:	(bad)  
   14002bd8d:	and    eax,DWORD PTR [rax]
   14002bd8f:	add    BYTE PTR [rbp+0x23],bh
   14002bd92:	add    BYTE PTR [rax],al
   14002bd94:	adc    al,0xbe
   14002bd96:	add    al,BYTE PTR [rax]
   14002bd98:	and    DWORD PTR [rsi],edx
   14002bd9a:	(bad)  
   14002bd9b:	add    BYTE PTR [rsi],dl
   14002bd9d:	je     0x14002bda3
   14002bd9f:	add    BYTE PTR [rdx],cl
   14002bda1:	fs (bad) 
   14002bda3:	add    BYTE PTR [rip+0x60000634],al        # 0x1a002c3dd
   14002bda9:	and    eax,DWORD PTR [rax]
   14002bdab:	add    BYTE PTR [rbp+0x23],bh
   14002bdae:	add    BYTE PTR [rax],al
   14002bdb0:	adc    al,0xbe
   14002bdb2:	add    al,BYTE PTR [rax]
   14002bdb4:	and    DWORD PTR [rax],eax
   14002bdb6:	add    BYTE PTR [rax],al
   14002bdb8:	(bad)  
   14002bdb9:	and    al,0x0
   14002bdbb:	add    BYTE PTR [rcx-0x23ffffdc],al
   14002bdc1:	mov    ebp,0xa210002
   14002bdc6:	add    al,0x0
   14002bdc8:	or     al,ah
   14002bdca:	or     al,BYTE PTR [rax]
   14002bdcc:	add    eax,0x60000964
   14002bdd1:	and    al,0x0
   14002bdd3:	add    BYTE PTR [rcx-0x23ffffdc],al
   14002bdd9:	mov    ebp,0x8010002
   14002bdde:	add    al,0x0
   14002bde0:	or     BYTE PTR [rdx],dh
   14002bde2:	add    al,0x70
   14002bde4:	add    edx,DWORD PTR [rax+0x2]
   14002bde7:	xor    BYTE PTR [rcx],ah
   14002bde9:	add    BYTE PTR [rax],al
   14002bdeb:	add    BYTE PTR [rax+0x26],al
   14002bdee:	add    BYTE PTR [rax],al
   14002bdf0:	pop    rbp
   14002bdf1:	add    BYTE PTR es:[rax],al
   14002bdf4:	adc    al,0xbe
   14002bdf6:	add    al,BYTE PTR [rax]
   14002bdf8:	and    DWORD PTR [rsi],edx
   14002bdfa:	(bad)  
   14002bdfb:	add    BYTE PTR [rsi],dl
   14002bdfd:	je     0x14002be03
   14002bdff:	add    BYTE PTR [rdx],cl
   14002be01:	fs (bad) 
   14002be03:	add    BYTE PTR [rip+0x40000634],al        # 0x18002c43d
   14002be09:	add    BYTE PTR es:[rax],al
   14002be0c:	pop    rbp
   14002be0d:	add    BYTE PTR es:[rax],al
   14002be10:	adc    al,0xbe
   14002be12:	add    al,BYTE PTR [rax]
   14002be14:	add    DWORD PTR [rcx+rax*1],eax
   14002be17:	add    BYTE PTR [rdx+rax*2],al
   14002be1a:	add    BYTE PTR [rax],al
   14002be1c:	add    DWORD PTR [rdi],ecx
   14002be1e:	(bad)  
   14002be1f:	add    BYTE PTR [rdi],cl
   14002be21:	fs (bad) 
   14002be23:	add    BYTE PTR [rdi],cl
   14002be25:	xor    al,0x6
   14002be27:	add    BYTE PTR [rdi],cl
   14002be29:	xor    cl,BYTE PTR [rbx]
   14002be2b:	jo     0x14002be2e
   14002be2d:	sbb    cl,BYTE PTR [rdx]
   14002be2f:	add    BYTE PTR [rdx],bl
   14002be31:	push   rsp
   14002be32:	or     al,0x0
   14002be34:	sbb    dh,BYTE PTR [rdx+rcx*1]
   14002be37:	add    BYTE PTR [rdx],bl
   14002be39:	xor    dl,BYTE PTR [rsi]
   14002be3b:	loopne 0x14002be51
   14002be3d:	rcl    BYTE PTR [rdx],1
   14002be3f:	rcl    BYTE PTR [rax],0x70
   14002be42:	punpcklbw mm4,DWORD PTR [rcx]
   14002be45:	add    BYTE PTR [rax],al
   14002be47:	add    BYTE PTR [rax],al
   14002be49:	sub    eax,0x2d1a0000
   14002be4e:	add    BYTE PTR [rax],al
   14002be50:	and    ch,al
   14002be52:	add    al,BYTE PTR [rax]
   14002be54:	and    DWORD PTR [rip+0x34050002],eax        # 0x17407be5c
   14002be5a:	(bad)  
   14002be5b:	add    BYTE PTR [rax],al
   14002be5d:	sub    eax,0x2d1a0000
   14002be62:	add    BYTE PTR [rax],al
   14002be64:	and    ch,al
   14002be66:	add    al,BYTE PTR [rax]
   14002be68:	add    DWORD PTR [rdx],ecx
   14002be6a:	add    al,0x0
   14002be6c:	or     dh,BYTE PTR [rax+rcx*1]
   14002be6f:	add    BYTE PTR [rdx],cl
   14002be71:	push   rdx
   14002be72:	(bad)  
   14002be73:	jo     0x14002be76
   14002be75:	sbb    al,0xc
   14002be77:	add    BYTE PTR [rsp+riz*2],bl
   14002be7a:	(bad)  
   14002be7b:	add    BYTE PTR [rsp+rdx*2],bl
   14002be7e:	or     eax,0xc341c00
   14002be83:	add    BYTE PTR [rdx+rdx*2],bl
   14002be86:	sbb    al,dh
   14002be88:	(bad)  
   14002be89:	loopne 0x14002be9f
   14002be8b:	rcl    BYTE PTR [rdx],1
   14002be8d:	rcl    BYTE PTR [rax],0x70
   14002be90:	and    DWORD PTR [rip+0xffffffffe42d0008],ebp        # 0x1242fbe9e
   14002be96:	(bad)  
   14002be97:	add    BYTE PTR [rip+0x100063d4],ah        # 0x150032271
   14002be9d:	(bad)  
   14002be9e:	add    BYTE PTR fs:[rax],cl
   14002bea1:	imul   eax,DWORD PTR fs:[rax],0xffffffa0
   14002bea5:	xor    DWORD PTR [rax],eax
   14002bea7:	add    dl,dh
   14002bea9:	xor    al,BYTE PTR [rax]
   14002beab:	add    BYTE PTR [rax+0x10002be],dh
   14002beb1:	adc    DWORD PTR [rsi],eax
   14002beb3:	add    BYTE PTR [rcx],dl
   14002beb5:	add    DWORD PTR [rbp+0x0],esp
   14002beb8:	or     dh,al
   14002beba:	or     BYTE PTR [rax+0x7],dh
   14002bebd:	push   rax
   14002bebe:	(bad)  
   14002bebf:	xor    BYTE PTR [rcx],ah
   14002bec1:	add    BYTE PTR [rax],al
   14002bec3:	add    BYTE PTR [rax],al
   14002bec5:	cmp    al,0x0
   14002bec7:	add    BYTE PTR [rsi+rdi*1],ch
   14002beca:	add    BYTE PTR [rax],al
   14002becc:	in     al,0xbe
   14002bece:	add    al,BYTE PTR [rax]
   14002bed0:	and    DWORD PTR [rip+0x54050002],eax        # 0x19407bed8
   14002bed6:	or     al,BYTE PTR [rax]
   14002bed8:	add    BYTE PTR [rax+rax*1],bh
   14002bedb:	add    BYTE PTR [rsi+rdi*1],ch
   14002bede:	add    BYTE PTR [rax],al
   14002bee0:	in     al,0xbe
   14002bee2:	add    al,BYTE PTR [rax]
   14002bee4:	add    DWORD PTR [rip+0x74150008],edx        # 0x1b417bef2
   14002beea:	or     eax,0xc641500
   14002beef:	add    BYTE PTR [rip+0x15000b34],dl        # 0x15502ca29
   14002bef5:	jb     0x14002bf08
   14002bef7:	rol    BYTE PTR [rcx],0x3b
   14002befa:	or     BYTE PTR [rax],al
   14002befc:	cmp    esi,DWORD PTR [rdi+rax*1+0x0]
   14002bf00:	ss xor al,0x6
   14002bf03:	add    BYTE PTR [rdi],cl
   14002bf05:	push   rsp
   14002bf06:	or     DWORD PTR [rax],eax
   14002bf08:	rdmsr  
   14002bf0a:	or     esp,DWORD PTR [rax+0x21]
   14002bf0d:	add    BYTE PTR [rax],al
   14002bf0f:	add    al,dl
   14002bf11:	(bad)  
   14002bf12:	add    BYTE PTR [rax],al
   14002bf14:	rex
   14002bf15:	add    BYTE PTR [rax],al
   14002bf18:	xor    al,0xbf
   14002bf1a:	add    al,BYTE PTR [rax]
   14002bf1c:	and    DWORD PTR [rdx],ecx
   14002bf1e:	add    al,0x0
   14002bf20:	or     ah,BYTE PTR [rcx+rcx*1+0x0]
   14002bf24:	add    eax,0xd0000854
   14002bf29:	(bad)  
   14002bf2a:	add    BYTE PTR [rax],al
   14002bf2c:	rex
   14002bf2d:	add    BYTE PTR [rax],al
   14002bf30:	xor    al,0xbf
   14002bf32:	add    al,BYTE PTR [rax]
   14002bf34:	add    DWORD PTR [rdi+rax*1],ebp
   14002bf37:	add    BYTE PTR [rsp+rdx*8],ch
   14002bf3a:	add    al,0x0
   14002bf3c:	(bad)  
   14002bf3d:	(bad)  
   14002bf3e:	or     al,BYTE PTR [rax]
   14002bf40:	(bad)  
   14002bf41:	rex.X add esi,DWORD PTR [rax+0x2]
   14002bf45:	xor    BYTE PTR [rax],al
   14002bf47:	add    BYTE PTR [rcx],ah
   14002bf49:	add    BYTE PTR [rax],al
   14002bf4b:	add    al,dl
   14002bf4d:	add    BYTE PTR [rax],al
   14002bf50:	sbb    eax,DWORD PTR [rcx+0x0]
   14002bf53:	add    BYTE PTR [rdi+rdi*4+0x2],ch
   14002bf57:	add    BYTE PTR [rcx],ah
   14002bf59:	or     BYTE PTR [rdx],al
   14002bf5b:	add    BYTE PTR [rax],cl
   14002bf5d:	push   rsp
   14002bf5e:	adc    al,0x0
   14002bf60:	rol    BYTE PTR [rax+0x0],1
   14002bf63:	add    BYTE PTR [rbx],bl
   14002bf65:	add    BYTE PTR [r8],al
   14002bf68:	ins    BYTE PTR es:[rdi],dx
   14002bf69:	mov    edi,0x12010002
   14002bf6e:	(bad)  
   14002bf6f:	add    BYTE PTR [rdx],dl
   14002bf71:	fs (bad) 
   14002bf73:	add    BYTE PTR [rdx],dl
   14002bf75:	xor    al,0x15
   14002bf77:	add    BYTE PTR [rdx],dl
   14002bf79:	add    DWORD PTR [rdx],edx
   14002bf7b:	add    BYTE PTR [rbx],cl
   14002bf7d:	jo     0x14002bf7f
   14002bf7f:	add    BYTE PTR [rcx],ah
   14002bf81:	add    BYTE PTR [rax],al
   14002bf83:	add    BYTE PTR [rax],al
   14002bf85:	rex.X add BYTE PTR [rax],al
   14002bf88:	xor    BYTE PTR [rdx+0x0],al
   14002bf8b:	add    BYTE PTR [rax+0x210002bf],dh
   14002bf91:	(bad)  
   14002bf92:	or     BYTE PTR [rax],al
   14002bf94:	(bad)  
   14002bf95:	add    BYTE PTR fs:[rsp+r14*8],cl
   14002bf9a:	add    BYTE PTR [rax],cl
   14002bf9d:	je     0x14002bfe0
   14002bf9f:	add    BYTE PTR [rsp+rsi*1],al
   14002bfa2:	rex.WX add BYTE PTR [rax],al
   14002bfa5:	rex.X add BYTE PTR [rax],al
   14002bfa8:	xor    BYTE PTR [rdx+0x0],al
   14002bfab:	add    BYTE PTR [rax+0x10002bf],dh
   14002bfb1:	adc    DWORD PTR [rsi],eax
   14002bfb3:	add    BYTE PTR [rcx],dl
   14002bfb5:	add    DWORD PTR [rbx+0x0],eax
   14002bfb8:	or     ah,al
   14002bfba:	or     al,dl
   14002bfbc:	(bad)  
   14002bfbd:	rol    BYTE PTR [rax+rdx*2],0x1
   14002bfc1:	adc    ecx,DWORD PTR [rcx]
   14002bfc3:	add    BYTE PTR [rbx],dl
   14002bfc5:	xor    al,0x18
   14002bfc7:	add    BYTE PTR [rbx],dl
   14002bfc9:	add    DWORD PTR [rdx],edx
   14002bfcb:	add    BYTE PTR [rax+rdx*8],cl
   14002bfce:	or     al,al
   14002bfd0:	or     BYTE PTR [rax+0x7],dh
   14002bfd3:	(bad)  
   14002bfd4:	(bad)  
   14002bfd5:	push   rax
   14002bfd6:	add    BYTE PTR [rax],al
   14002bfd8:	add    DWORD PTR [rcx],esp
   14002bfda:	or     eax,DWORD PTR [rax]
   14002bfdc:	and    DWORD PTR [rsi+riz*2],esi
   14002bfdf:	add    BYTE PTR [rcx],ah
   14002bfe1:	add    DWORD PTR [rax+rax*1+0x1a],ebx
   14002bfe5:	lock sbb al,ah
   14002bfe8:	(bad)  
   14002bfe9:	rcl    BYTE PTR [rax+rax*8],1
   14002bfec:	adc    dh,BYTE PTR [rax+0x11]
   14002bfef:	(bad)  
   14002bff0:	adc    BYTE PTR [rax+0x0],dl
   14002bff3:	add    BYTE PTR [rcx],ah
   14002bff5:	add    BYTE PTR [rax],al
   14002bff7:	add    BYTE PTR [rax-0x1fffffa6],ah
   14002bffd:	pop    rdx
   14002bffe:	add    BYTE PTR [rax],al
   14002c000:	sbb    al,al
   14002c002:	add    al,BYTE PTR [rax]
   14002c004:	and    DWORD PTR [rax],ecx
   14002c006:	add    al,BYTE PTR [rax]
   14002c008:	or     BYTE PTR [rsp+rdx*1+0x0],dh
   14002c00c:	movabs al,ds:0x1800005ae000005a
   14002c015:	rol    BYTE PTR [rdx],0x0
   14002c018:	add    DWORD PTR [rip+0x340d0005],ecx        # 0x1740fc023
   14002c01e:	adc    eax,0x12010d00
   14002c023:	add    BYTE PTR [rsi],al
   14002c025:	(bad)  
   14002c026:	add    BYTE PTR [rax],al
   14002c028:	and    DWORD PTR [rax],eax
   14002c02a:	add    BYTE PTR [rax],al
   14002c02c:	push   rax
   14002c02d:	pop    rsp
   14002c02e:	add    BYTE PTR [rax],al
   14002c030:	(bad)  
   14002c031:	pop    rsp
   14002c032:	add    BYTE PTR [rax],al
   14002c034:	mov    ah,0xc0
   14002c036:	add    al,BYTE PTR [rax]
   14002c038:	and    DWORD PTR [rax],eax
   14002c03a:	add    BYTE PTR [rax],al
   14002c03c:	(bad)  
   14002c03d:	pop    rsp
   14002c03e:	add    BYTE PTR [rax],al
   14002c040:	push   0xffffffff9c00005c
   14002c045:	rol    BYTE PTR [rdx],0x0
   14002c048:	and    DWORD PTR [rax],eax
   14002c04a:	or     BYTE PTR [rax],al
   14002c04c:	add    ah,al
   14002c04e:	and    BYTE PTR [rax],al
   14002c050:	add    BYTE PTR [rdi+riz*1+0x0],ah
   14002c054:	add    BYTE PTR [rsi+riz*1+0x0],dl
   14002c058:	add    BYTE PTR ds:0x5c6000,dh
   14002c05f:	add    BYTE PTR [rax+0x5c],ch
   14002c062:	add    BYTE PTR [rax],al
   14002c064:	pushf  
   14002c065:	rol    BYTE PTR [rdx],0x0
   14002c068:	and    DWORD PTR [rbx],esp
   14002c06a:	or     BYTE PTR [rax],al
   14002c06c:	and    eax,esp
   14002c06e:	and    BYTE PTR [rax],al
   14002c070:	sbb    esp,DWORD PTR [rdi+riz*1+0x0]
   14002c074:	adc    BYTE PTR [rsi+riz*1+0x0],dl
   14002c078:	or     BYTE PTR ds:0x5c6800,dh
   14002c07f:	add    BYTE PTR [rbp+rbx*2+0x0],ch
   14002c083:	add    BYTE PTR [rax+0x210002c0],cl
   14002c089:	add    al,0x2
   14002c08b:	add    BYTE PTR [rsp+rsi*8],al
   14002c08e:	(bad)  
   14002c08f:	add    BYTE PTR [rax+0x5c],ah
   14002c092:	add    BYTE PTR [rax],al
   14002c094:	push   0xffffffff9c00005c
   14002c099:	rol    BYTE PTR [rdx],0x0
   14002c09c:	and    DWORD PTR [rax],ecx
   14002c09e:	add    al,0x0
   14002c0a0:	or     ah,dl
   14002c0a2:	(bad)  
   14002c0a3:	add    BYTE PTR [rsp+rsi*2],al
   14002c0a6:	and    DWORD PTR [rax],eax
   14002c0a8:	push   rax
   14002c0a9:	pop    rsp
   14002c0aa:	add    BYTE PTR [rax],al
   14002c0ac:	(bad)  
   14002c0ad:	pop    rsp
   14002c0ae:	add    BYTE PTR [rax],al
   14002c0b0:	mov    ah,0xc0
   14002c0b2:	add    al,BYTE PTR [rax]
   14002c0b4:	add    DWORD PTR [rax],edx
   14002c0b6:	add    eax,DWORD PTR [rax]
   14002c0b8:	adc    BYTE PTR [rcx],al
   14002c0ba:	and    al,BYTE PTR [rax]
   14002c0bc:	or     eax,esp
   14002c0be:	add    BYTE PTR [rax],al
   14002c0c0:	and    DWORD PTR [rax],eax
   14002c0c2:	add    BYTE PTR [rax],al
   14002c0c4:	rex movsxd eax,DWORD PTR [rax]
   14002c0c7:	add    BYTE PTR [rbx+riz*2+0x0],dl
   14002c0cb:	add    BYTE PTR [rcx+rax*8],dl
   14002c0ce:	add    al,BYTE PTR [rax]
   14002c0d0:	and    DWORD PTR [rax],eax
   14002c0d2:	add    al,0x0
   14002c0d4:	add    ah,dl
   14002c0d6:	cmp    DWORD PTR [rax],eax
   14002c0d8:	add    BYTE PTR [rbx+rdi*1+0x0],dh
   14002c0dc:	rex movsxd eax,DWORD PTR [rax]
   14002c0df:	add    BYTE PTR [rbx+riz*2+0x0],dl
   14002c0e3:	add    BYTE PTR [rcx+rax*8],dl
   14002c0e6:	add    al,BYTE PTR [rax]
   14002c0e8:	and    DWORD PTR [rsi+rcx*1],ebx
   14002c0eb:	add    BYTE PTR [rsp+rsi*8],bl
   14002c0ee:	cmp    BYTE PTR [rax],al
   14002c0f0:	sbb    ah,dl
   14002c0f2:	cmp    DWORD PTR [rax],eax
   14002c0f4:	adc    al,0xc4
   14002c0f6:	cmp    al,BYTE PTR [rax]
   14002c0f8:	adc    BYTE PTR [rbx+rdi*1+0x0],dh
   14002c0fc:	or     al,0x64
   14002c0fe:	cmp    al,0x0
   14002c100:	or     BYTE PTR [rbp+rdi*1+0x0],dl
   14002c104:	add    al,0x34
   14002c106:	add    BYTE PTR [r8+0x63],al
   14002c10a:	add    BYTE PTR [rax],al
   14002c10c:	push   rsp
   14002c10d:	movsxd eax,DWORD PTR [rax]
   14002c10f:	add    BYTE PTR [rcx+rax*8],dl
   14002c112:	add    al,BYTE PTR [rax]
   14002c114:	add    DWORD PTR [rbx+rax*1],edx
   14002c117:	add    BYTE PTR [rcx+rax*1],dl
   14002c11a:	add    BYTE PTR ds:[rip+0x210000e0],cl        # 0x16102c201
   14002c121:	add    BYTE PTR [rax],al
   14002c123:	add    al,dl
   14002c125:	jb     0x14002c127
   14002c127:	add    BYTE PTR [rax],bh
   14002c129:	jae    0x14002c12b
   14002c12b:	add    BYTE PTR [rcx+rax*8+0x2],al
   14002c12f:	add    BYTE PTR [rcx],ah
   14002c131:	add    eax,0x34050002
   14002c136:	or     BYTE PTR [rax],al
   14002c138:	shl    BYTE PTR [rdx+0x0],1
   14002c13b:	add    BYTE PTR [rax],bh
   14002c13d:	jae    0x14002c13f
   14002c13f:	add    BYTE PTR [rcx+rax*8+0x2],al
   14002c143:	add    BYTE PTR [rcx],al
   14002c145:	adc    ecx,DWORD PTR [rax]
   14002c147:	add    BYTE PTR [rbx],dl
   14002c149:	or     al,BYTE PTR fs:[rax]
   14002c14c:	adc    edx,DWORD PTR [rcx+rcx*1+0x0]
   14002c150:	adc    esi,DWORD PTR [rdx]
   14002c152:	(bad)  
   14002c154:	or     eax,0x1700bc0
   14002c159:	ret    
   14002c15a:	or     DWORD PTR [rax],eax
   14002c15c:	ret    
   14002c15d:	xor    BYTE PTR fs:[rax],al
   14002c160:	mov    ebx,0xc003154
   14002c165:	add    DWORD PTR [rdx],esi
   14002c167:	add    BYTE PTR [rip+0x27003c0],al        # 0x14272c52d
   14002c16d:	xor    BYTE PTR [rax],al
   14002c16f:	add    BYTE PTR [rcx],ah
   14002c171:	add    BYTE PTR [rax],al
   14002c173:	add    BYTE PTR [rax],dl
   14002c175:	jle    0x14002c177
   14002c177:	add    BYTE PTR [rip+0xffffffffe400007e],bl        # 0x12402c1fb
   14002c17d:	rol    DWORD PTR [rdx],0x0
   14002c180:	and    DWORD PTR [rax],eax
   14002c182:	add    BYTE PTR [rax],al
   14002c184:	sbb    eax,0x2200007e
   14002c189:	jle    0x14002c18b
   14002c18b:	add    al,dl
   14002c18d:	rol    DWORD PTR [rdx],0x0
   14002c190:	and    DWORD PTR [rax],eax
   14002c192:	add    BYTE PTR [rax],al
   14002c194:	and    bh,BYTE PTR [rsi+0x0]
   14002c197:	add    BYTE PTR [rdx+0x7f],cl
   14002c19a:	add    BYTE PTR [rax],al
   14002c19c:	mov    eax,0x210002c1
   14002c1a1:	or     al,BYTE PTR [rax+rax*1]
   14002c1a4:	or     dl,ah
   14002c1a6:	(bad)  
   14002c1a7:	add    BYTE PTR [rip+0x220007c4],al        # 0x16202c971
   14002c1ad:	jle    0x14002c1af
   14002c1af:	add    BYTE PTR [rdx+0x7f],cl
   14002c1b2:	add    BYTE PTR [rax],al
   14002c1b4:	mov    eax,0x210002c1
   14002c1b9:	stos   DWORD PTR es:[rdi],eax
   14002c1ba:	add    al,0x0
   14002c1bc:	stos   DWORD PTR es:[rdi],eax
   14002c1bd:	push   rsp
   14002c1be:	(bad)  
   14002c1bf:	add    BYTE PTR [rip+0x1d000f64],al        # 0x15d02d129
   14002c1c5:	jle    0x14002c1c7
   14002c1c7:	add    BYTE PTR [rdx],ah
   14002c1c9:	jle    0x14002c1cb
   14002c1cb:	add    al,dl
   14002c1cd:	rol    DWORD PTR [rdx],0x0
   14002c1d0:	and    DWORD PTR [rip+0x34050002],eax        # 0x17407c1d8
   14002c1d6:	or     eax,0x7e1000
   14002c1db:	add    BYTE PTR [rip+0xffffffffe400007e],bl        # 0x12402c25f
   14002c1e1:	rol    DWORD PTR [rdx],0x0
   14002c1e4:	add    DWORD PTR [rdx],ecx
   14002c1e6:	add    al,0x0
   14002c1e8:	or     dh,BYTE PTR [rdx+0x6]
   14002c1eb:	lock add al,0xe0
   14002c1ee:	add    dh,BYTE PTR [rax+0x1]
   14002c1f1:	or     eax,0x340d0005
   14002c1f6:	and    al,BYTE PTR [rax]
   14002c1f8:	or     eax,0x6002001
   14002c1fd:	jo     0x14002c1ff
   14002c1ff:	add    BYTE PTR [rcx],ah
   14002c201:	add    BYTE PTR [rax],al
   14002c203:	add    BYTE PTR [rax-0x7e],al
   14002c206:	add    BYTE PTR [rax],al
   14002c208:	cmc    
   14002c209:	(bad)  
   14002c20a:	add    BYTE PTR [rax],al
   14002c20c:	sub    dl,al
   14002c20e:	add    al,BYTE PTR [rax]
   14002c210:	and    DWORD PTR [rax],edx
   14002c212:	add    al,0x0
   14002c214:	adc    ah,dl
   14002c216:	(bad)  
   14002c217:	add    BYTE PTR [rax],cl
   14002c219:	fs cmp eax,0x824000
   14002c21f:	add    ch,dh
   14002c221:	(bad)  
   14002c222:	add    BYTE PTR [rax],al
   14002c224:	sub    dl,al
   14002c226:	add    al,BYTE PTR [rax]
   14002c228:	add    DWORD PTR [rdx+0x7],esp
   14002c22b:	add    BYTE PTR [rdx+0x54],ah
   14002c22e:	cmp    al,0x0
   14002c230:	or     al,0x1
   14002c232:	cmp    BYTE PTR [rax],al
   14002c234:	add    eax,0x27003c0
   14002c239:	xor    BYTE PTR [rax],al
   14002c23b:	add    BYTE PTR [rcx],ah
   14002c23d:	add    BYTE PTR [rax],al
   14002c23f:	add    BYTE PTR [rax-0x64ffff7b],al
   14002c245:	test   DWORD PTR [rax],eax
   14002c247:	add    BYTE PTR [rdx+rax*8+0x210002],al
   14002c24e:	add    BYTE PTR [rax],al
   14002c250:	fwait
   14002c251:	test   DWORD PTR [rax],eax
   14002c253:	add    BYTE PTR [rsi-0x7a],dl
   14002c256:	add    BYTE PTR [rax],al
   14002c258:	jo     0x14002c21c
   14002c25a:	add    al,BYTE PTR [rax]
   14002c25c:	and    DWORD PTR [rax],ecx
   14002c25e:	add    al,BYTE PTR [rax]
   14002c260:	or     ah,al
   14002c262:	ins    BYTE PTR es:[rdi],dx
   14002c263:	add    BYTE PTR [rbx+0x56000085],bl
   14002c269:	xchg   BYTE PTR [rax],al
   14002c26b:	add    BYTE PTR [rax-0x3e],dh
   14002c26e:	add    al,BYTE PTR [rax]
   14002c270:	and    DWORD PTR [rax],ecx
   14002c272:	add    al,BYTE PTR [rax]
   14002c274:	or     ah,dl
   14002c276:	imul   eax,DWORD PTR [rax],0xffffff80
   14002c279:	test   DWORD PTR [rax],eax
   14002c27b:	add    BYTE PTR [rbx-0x7bffff7b],bl
   14002c281:	ret    0x2
   14002c284:	add    DWORD PTR [rax+rcx*1],edx
   14002c287:	add    BYTE PTR [rcx+rax*1],dl
   14002c28a:	ins    DWORD PTR es:[rdi],dx
   14002c28b:	add    BYTE PTR [rip+0x9e00bf0],cl        # 0x149e2ce81
   14002c291:	jo     0x14002c29b
   14002c293:	(bad)  
   14002c294:	(bad)  
   14002c295:	push   rax
   14002c296:	(bad)  
   14002c297:	xor    BYTE PTR [rcx],ah
   14002c299:	add    BYTE PTR [rdx],al
   14002c29b:	add    BYTE PTR [rax],al
   14002c29d:	(bad)  
   14002c29e:	sbb    eax,0x9f6000
   14002c2a3:	add    BYTE PTR [rbx-0x2fffff61],bl
   14002c2a9:	ret    0x2
   14002c2ac:	and    DWORD PTR [rax],eax
   14002c2ae:	add    BYTE PTR [rax],al
   14002c2b0:	(bad)  
   14002c2b1:	lahf   
   14002c2b2:	add    BYTE PTR [rax],al
   14002c2b4:	fwait
   14002c2b5:	lahf   
   14002c2b6:	add    BYTE PTR [rax],al
   14002c2b8:	rol    dl,1
   14002c2ba:	add    al,BYTE PTR [rax]
   14002c2bc:	and    DWORD PTR [rdx+rax*1],eax
   14002c2bf:	add    BYTE PTR [rsp+rax*8],al
   14002c2c2:	sbb    eax,0x9f6000
   14002c2c7:	add    BYTE PTR [rbx-0x2fffff61],bl
   14002c2cd:	ret    0x2
   14002c2d0:	add    DWORD PTR [rax],edx
   14002c2d2:	(bad)  
   14002c2d3:	add    BYTE PTR [rax],dl
   14002c2d5:	add    DWORD PTR [rsi],edx
   14002c2d7:	add    BYTE PTR [rcx],cl
   14002c2d9:	rol    BYTE PTR [rdi],1
   14002c2db:	jo     0x14002c2e3
   14002c2dd:	(bad)  
   14002c2de:	add    eax,0x300450
   14002c2e3:	add    BYTE PTR [rcx],ah
   14002c2e5:	add    BYTE PTR [rax],al
   14002c2e7:	add    BYTE PTR [rax-0x32ffff5d],ah
   14002c2ed:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002c2ee:	add    BYTE PTR [rax],al
   14002c2f0:	or     al,0xc3
   14002c2f2:	add    al,BYTE PTR [rax]
   14002c2f4:	and    DWORD PTR [rax],edx
   14002c2f6:	add    al,0x0
   14002c2f8:	adc    ah,dh
   14002c2fa:	cmp    eax,DWORD PTR [rax]
   14002c2fc:	or     ah,al
   14002c2fe:	cmp    al,0x0
   14002c300:	movabs al,ds:0xc0000a4cd0000a3
   14002c309:	ret    
   14002c30a:	add    al,BYTE PTR [rax]
   14002c30c:	add    DWORD PTR [rax+rcx*1],edx
   14002c30f:	add    BYTE PTR [rcx+rax*1],dl
   14002c312:	cmp    eax,0xbe00d00
   14002c317:	ror    BYTE PTR [rcx],1
   14002c319:	jo     0x14002c323
   14002c31b:	(bad)  
   14002c31c:	(bad)  
   14002c31d:	push   rax
   14002c31e:	(bad)  
   14002c31f:	xor    BYTE PTR [rcx],al
   14002c321:	sbb    eax,0x11d000a
   14002c326:	sbb    eax,0x14f01600
   14002c32b:	loopne 0x14002c33f
   14002c32d:	rcl    BYTE PTR [rax],1
   14002c32f:	ror    BYTE PTR [rsi],0x70
   14002c332:	or     eax,0xb500c60
   14002c337:	xor    BYTE PTR [rcx],al
   14002c339:	adc    al,0xa
   14002c33b:	add    BYTE PTR [rcx+rax*1],dl
   14002c33e:	sbb    eax,DWORD PTR [rax]
   14002c340:	or     eax,0x9e00bf0
   14002c345:	rol    BYTE PTR [rdi],1
   14002c347:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x14362c7be
   14002c34e:	add    dh,BYTE PTR [rax]
   14002c350:	and    DWORD PTR [rdx+0x8],eax
   14002c353:	add    BYTE PTR [rdx-0xc],al
   14002c356:	sub    al,BYTE PTR [rax]
   14002c358:	cmp    ah,ah
   14002c35a:	sub    eax,DWORD PTR [rax]
   14002c35c:	adc    ah,dl
   14002c35e:	sub    al,0x0
   14002c360:	or     BYTE PTR [rbx+rsi*1+0x0],dl
   14002c364:	jo     0x14002c327
   14002c366:	add    BYTE PTR [rax],al
   14002c368:	movabs ds:0x10002c3700000c2,al
   14002c371:	adc    BYTE PTR [rsi],al
   14002c373:	add    BYTE PTR [rax],dl
   14002c375:	add    DWORD PTR [rip+0x7c00900],ebp        # 0x147c2cc7b
   14002c37b:	jo     0x14002c383
   14002c37d:	(bad)  
   14002c37e:	add    eax,0x2130
   14002c383:	add    BYTE PTR [rax-0x41fffe07],dl
   14002c389:	stc    
   14002c38a:	add    DWORD PTR [rax],eax
   14002c38c:	mov    ah,al
   14002c38e:	add    al,BYTE PTR [rax]
   14002c390:	and    DWORD PTR [rdx],ecx
   14002c392:	add    al,0x0
   14002c394:	or     ah,BYTE PTR [rdi+rax*1+0x0]
   14002c398:	add    eax,0x90000634
   14002c39d:	stc    
   14002c39e:	add    DWORD PTR [rax],eax
   14002c3a0:	mov    esi,0x880001f9
   14002c3a5:	(bad)
   14002c3a9:	(bad)  
   14002c3aa:	add    al,BYTE PTR [rax]
   14002c3ac:	(bad)  
   14002c3ad:	push   rdx
   14002c3ae:	add    dh,BYTE PTR [rax]
   14002c3b0:	add    DWORD PTR [rsi],eax
   14002c3b2:	add    al,BYTE PTR [rax]
   14002c3b4:	(bad)  
   14002c3b5:	xor    al,BYTE PTR [rdx]
   14002c3b7:	xor    BYTE PTR [rcx],al
   14002c3b9:	(bad)  
   14002c3ba:	add    al,BYTE PTR [rax]
   14002c3bc:	(bad)  
   14002c3bd:	jb     0x14002c3c1
   14002c3bf:	xor    BYTE PTR [rcx],al
   14002c3c1:	adc    al,0x8
   14002c3c3:	add    BYTE PTR [rsp+rsi*1],dl
   14002c3c6:	or     al,BYTE PTR [rax]
   14002c3c8:	adc    al,0x32
   14002c3ca:	adc    al,dl
   14002c3cc:	(bad)  
   14002c3cd:	ror    BYTE PTR [rax+rsi*2],0xb
   14002c3d1:	(bad)  
   14002c3d2:	or     dl,BYTE PTR [rax+0x21]
   14002c3d5:	add    BYTE PTR [rax],al
   14002c3d7:	add    BYTE PTR [rax],ah
   14002c3d9:	in     eax,dx
   14002c3da:	add    BYTE PTR [rax],al
   14002c3dc:	pushf  
   14002c3dd:	out    dx,al
   14002c3de:	add    BYTE PTR [rax],al
   14002c3e0:	clc    
   14002c3e1:	ret    
   14002c3e2:	add    al,BYTE PTR [rax]
   14002c3e4:	and    DWORD PTR [rax],ecx
   14002c3e6:	add    al,BYTE PTR [rax]
   14002c3e8:	or     ah,dh
   14002c3ea:	sbb    BYTE PTR [rax],al
   14002c3ec:	and    ch,ch
   14002c3ee:	add    BYTE PTR [rax],al
   14002c3f0:	pushf  
   14002c3f1:	out    dx,al
   14002c3f2:	add    BYTE PTR [rax],al
   14002c3f4:	clc    
   14002c3f5:	ret    
   14002c3f6:	add    al,BYTE PTR [rax]
   14002c3f8:	add    DWORD PTR [rcx+0xc],edx
   14002c3fb:	add    BYTE PTR [rcx-0x3c],dl
   14002c3fe:	and    BYTE PTR [rax],al
   14002c400:	xor    BYTE PTR [rdi+rbx*1+0x0],ah
   14002c404:	sbb    eax,0x10001e54
   14002c409:	add    DWORD PTR [rcx],ebx
   14002c40b:	add    BYTE PTR [rcx],cl
   14002c40d:	loopne 0x14002c416
   14002c40f:	rol    BYTE PTR [rip+0x1300470],1        # 0x14132c885
   14002c415:	sbb    BYTE PTR [rax],cl
   14002c417:	add    BYTE PTR [rax],bl
   14002c419:	or     DWORD PTR fs:[rax],eax
   14002c41c:	sbb    BYTE PTR [rax+rcx*1+0x0],dl
   14002c420:	sbb    BYTE PTR [rsi+rax*1],dh
   14002c423:	add    BYTE PTR [rax],bl
   14002c425:	xor    dl,BYTE PTR [rax+rsi*2]
   14002c428:	add    DWORD PTR [rdx+rcx*1],edx
   14002c42b:	add    BYTE PTR [rcx+rax*1],dl
   14002c42e:	jns    0x14002c430
   14002c430:	or     eax,0x9e00bf0
   14002c435:	rol    BYTE PTR [rdi],1
   14002c437:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x14362c8ae
   14002c43e:	add    dh,BYTE PTR [rax]
   14002c440:	and    DWORD PTR [rax],eax
   14002c442:	add    BYTE PTR [rax],al
   14002c444:	rex
   14002c445:	add    DWORD PTR [eax],eax
   14002c448:	push   rax
   14002c449:	add    DWORD PTR [eax],eax
   14002c44c:	mov    ah,al
   14002c44e:	add    al,BYTE PTR [rax]
   14002c450:	and    DWORD PTR [rax],eax
   14002c452:	add    BYTE PTR [rax],al
   14002c454:	push   rax
   14002c455:	add    DWORD PTR [eax],eax
   14002c458:	pop    rsp
   14002c459:	add    DWORD PTR [eax],eax
   14002c45c:	je     0x14002c422
   14002c45e:	add    al,BYTE PTR [rax]
   14002c460:	and    DWORD PTR [rip+0x64050002],eax        # 0x1a407c468
   14002c466:	(bad)  
   14002c467:	add    BYTE PTR [rax+0x67],dl
   14002c46a:	add    DWORD PTR [rax],eax
   14002c46c:	pop    rsp
   14002c46d:	add    DWORD PTR [eax],eax
   14002c470:	je     0x14002c436
   14002c472:	add    al,BYTE PTR [rax]
   14002c474:	and    DWORD PTR [rip+0x34050002],eax        # 0x17407c47c
   14002c47a:	(bad)  
   14002c47b:	add    BYTE PTR [rax+0x67],al
   14002c47e:	add    DWORD PTR [rax],eax
   14002c480:	push   rax
   14002c481:	add    DWORD PTR [eax],eax
   14002c484:	mov    ah,al
   14002c486:	add    al,BYTE PTR [rax]
   14002c488:	add    DWORD PTR [rsi],eax
   14002c48a:	add    al,BYTE PTR [rax]
   14002c48c:	(bad)  
   14002c48d:	xor    al,BYTE PTR [rdx]
   14002c48f:	jo     0x14002c4b2
   14002c491:	sub    DWORD PTR [rax+rax*1],eax
   14002c494:	sub    DWORD PTR [rax+rcx*1+0x0],esi
   14002c498:	add    BYTE PTR [rax+0x2],ch
   14002c49b:	add    BYTE PTR [rax-0x26fffe99],dh
   14002c4a1:	add    DWORD PTR [eax],eax
   14002c4a4:	test   al,0xc3
   14002c4a6:	add    al,BYTE PTR [rax]
   14002c4a8:	and    DWORD PTR [rip+0x68050002],eax        # 0x1a807c4b0
   14002c4ae:	add    al,BYTE PTR [rax]
   14002c4b0:	mov    al,0x67
   14002c4b2:	add    DWORD PTR [rax],eax
   14002c4b4:	fldenv [rdi+0x1]
   14002c4b7:	add    BYTE PTR [rax+0x210002c3],ch
   14002c4bd:	add    BYTE PTR [rax],al
   14002c4bf:	add    BYTE PTR [rax],dl
   14002c4c1:	ins    BYTE PTR es:[rdi],dx
   14002c4c2:	add    DWORD PTR [rax],eax
   14002c4c4:	sub    eax,0x1400016c
   14002c4c9:	mov    esi,0x16210002
   14002c4ce:	(bad)  
   14002c4cf:	add    BYTE PTR [rsi],dl
   14002c4d1:	je     0x14002c4d7
   14002c4d3:	add    BYTE PTR [rdx],cl
   14002c4d5:	fs (bad) 
   14002c4d7:	add    BYTE PTR [rip+0x10000634],al        # 0x15002cb11
   14002c4dd:	ins    BYTE PTR es:[rdi],dx
   14002c4de:	add    DWORD PTR [rax],eax
   14002c4e0:	sub    eax,0x1400016c
   14002c4e5:	mov    esi,0x210002
   14002c4ea:	add    BYTE PTR [rax],al
   14002c4ec:	push   rax
   14002c4ed:	outs   dx,BYTE PTR ds:[rsi]
   14002c4ee:	add    DWORD PTR [rax],eax
   14002c4f0:	jo     0x14002c560
   14002c4f2:	add    DWORD PTR [rax],eax
   14002c4f4:	and    ch,al
   14002c4f6:	add    al,BYTE PTR [rax]
   14002c4f8:	and    DWORD PTR [rax],eax
   14002c4fa:	add    al,BYTE PTR [rax]
   14002c4fc:	add    BYTE PTR [rsi+rax*1],dh
   14002c4ff:	add    BYTE PTR [rax+0x6e],dl
   14002c502:	add    DWORD PTR [rax],eax
   14002c504:	jo     0x14002c574
   14002c506:	add    DWORD PTR [rax],eax
   14002c508:	and    ch,al
   14002c50a:	add    al,BYTE PTR [rax]
   14002c50c:	and    DWORD PTR [rip+0x34050002],eax        # 0x17407c514
   14002c512:	(bad)  
   14002c513:	add    BYTE PTR [rax+0x6e],dl
   14002c516:	add    DWORD PTR [rax],eax
   14002c518:	jo     0x14002c588
   14002c51a:	add    DWORD PTR [rax],eax
   14002c51c:	and    ch,al
   14002c51e:	add    al,BYTE PTR [rax]
   14002c520:	add    DWORD PTR [rcx+rax*1],eax
   14002c523:	add    BYTE PTR [rdx+riz*2],al
   14002c526:	add    BYTE PTR [rax],al
   14002c528:	add    DWORD PTR [rax+rcx*1],edx
   14002c52b:	add    BYTE PTR [rsp+riz*2],dl
   14002c52e:	or     BYTE PTR [rax],al
   14002c530:	adc    al,0x54
   14002c532:	(bad)  
   14002c533:	add    BYTE PTR [rsp+rsi*1],dl
   14002c536:	(bad)  
   14002c537:	add    BYTE PTR [rdx+rsi*1],dl
   14002c53a:	adc    BYTE PTR [rax+0x1],dh
   14002c53d:	or     DWORD PTR [rcx],eax
   14002c53f:	add    BYTE PTR [rcx],cl
   14002c541:	rex.X add BYTE PTR [rax],al
   14002c544:	add    DWORD PTR [rcx],ecx
   14002c546:	add    DWORD PTR [rax],eax
   14002c548:	or     DWORD PTR [rdx+0x0],esp
   14002c54b:	add    BYTE PTR [rcx],al
   14002c54d:	(bad)  
   14002c54e:	or     BYTE PTR [rax],al
   14002c550:	(bad)  
   14002c551:	push   rsp
   14002c552:	or     eax,DWORD PTR [rax]
   14002c554:	(bad)  
   14002c555:	xor    al,0x8
   14002c557:	add    BYTE PTR [rsi],dl
   14002c559:	xor    dl,BYTE PTR [rdx]
   14002c55b:	rcl    BYTE PTR [rax],0x70
   14002c55e:	punpcklbw mm4,DWORD PTR [rcx]
   14002c561:	add    BYTE PTR [rax],al
   14002c563:	add    BYTE PTR [rax+0x7000186],dl
   14002c569:	xchg   DWORD PTR [rcx],eax
   14002c56b:	add    BYTE PTR [rbp+rax*8+0x12210002],cl
   14002c572:	(bad)  
   14002c573:	add    BYTE PTR [rdx],dl
   14002c575:	je     0x14002c57d
   14002c577:	add    BYTE PTR [rip+0x5000e64],cl        # 0x14502d3e1
   14002c57d:	push   rsp
   14002c57e:	or     eax,0x1869000
   14002c583:	add    BYTE PTR [rdi],al
   14002c585:	xchg   DWORD PTR [rcx],eax
   14002c587:	add    BYTE PTR [rbp+rax*8+0xc010002],cl
   14002c58e:	add    eax,0x8620c00
   14002c593:	loopne 0x14002c59b
   14002c595:	rol    BYTE PTR [rax+rax*8],1
   14002c598:	add    dh,BYTE PTR [rax]
   14002c59a:	add    BYTE PTR [rax],al
   14002c59c:	and    DWORD PTR [rax],eax
   14002c59e:	add    BYTE PTR [rax],al
   14002c5a0:	mov    al,0x87
   14002c5a2:	add    DWORD PTR [rax],eax
   14002c5a4:	cmc    
   14002c5a5:	xchg   DWORD PTR [rcx],eax
   14002c5a7:	add    ah,al
   14002c5a9:	(bad)
   14002c5ac:	and    DWORD PTR [rdx],ecx
   14002c5ae:	add    al,0x0
   14002c5b0:	or     dh,BYTE PTR [rdi+rax*1+0x0]
   14002c5b4:	add    eax,0xb0000634
   14002c5b9:	xchg   DWORD PTR [rcx],eax
   14002c5bb:	add    ch,dh
   14002c5bd:	xchg   DWORD PTR [rcx],eax
   14002c5bf:	add    ah,al
   14002c5c1:	(bad)
   14002c5c4:	add    DWORD PTR [rax],edx
   14002c5c6:	(bad)  
   14002c5c7:	add    BYTE PTR [rax],dl
   14002c5c9:	or     DWORD PTR fs:[rax],eax
   14002c5cc:	adc    BYTE PTR [rax+rcx*1+0x0],dl
   14002c5d0:	adc    BYTE PTR [rdx],dh
   14002c5d2:	or     al,0xc0
   14002c5d4:	add    DWORD PTR [rax],ecx
   14002c5d6:	add    al,0x0
   14002c5d8:	or     BYTE PTR [rdx+0x60037004],dh
   14002c5de:	add    dh,BYTE PTR [rax]
   14002c5e0:	and    DWORD PTR [rax],eax
   14002c5e2:	add    BYTE PTR [rax],al
   14002c5e4:	or     BYTE PTR [rcx+rax*1+0x18cd300],0x0
   14002c5ec:	add    al,0xc6
   14002c5ee:	add    al,BYTE PTR [rax]
   14002c5f0:	and    DWORD PTR [rax],ecx
   14002c5f2:	add    al,BYTE PTR [rax]
   14002c5f4:	or     ah,ah
   14002c5f6:	and    al,BYTE PTR [rax]
   14002c5f8:	or     BYTE PTR [rcx+rax*1+0x18cd300],0x0
   14002c600:	add    al,0xc6
   14002c602:	add    al,BYTE PTR [rax]
   14002c604:	add    DWORD PTR [rsi],edx
   14002c606:	or     DWORD PTR [rax],eax
   14002c608:	(bad)  
   14002c609:	add    DWORD PTR [rdx],ebx
   14002c60b:	add    BYTE PTR [rdi],cl
   14002c60d:	lock or eax,0x9c00bd0
   14002c613:	jo     0x14002c61d
   14002c615:	(bad)  
   14002c616:	(bad)  
   14002c617:	push   rax
   14002c618:	(bad)  
   14002c619:	xor    BYTE PTR [rax],al
   14002c61b:	add    BYTE PTR [rcx],ah
   14002c61d:	add    BYTE PTR [rdx],cl
   14002c61f:	add    BYTE PTR [rax],al
   14002c621:	(bad)  
   14002c622:	sub    eax,DWORD PTR [rax]
   14002c624:	add    ah,al
   14002c626:	sub    al,0x0
   14002c628:	add    BYTE PTR [rbp+rbp*1+0x0],dh
   14002c62c:	add    BYTE PTR [rsi+rbp*1+0x0],ah
   14002c630:	add    BYTE PTR [rdi+rbp*1],dh
   14002c633:	add    BYTE PTR [rax],dl
   14002c635:	cwde   
   14002c636:	add    DWORD PTR [rax],eax
   14002c638:	xor    al,0x98
   14002c63a:	add    DWORD PTR [rax],eax
   14002c63c:	mov    BYTE PTR fs:[rdx],0x0
   14002c640:	and    DWORD PTR [rdx],esi
   14002c642:	or     al,BYTE PTR [rax]
   14002c644:	xor    dh,BYTE PTR [rbp+rbp*1+0x0]
   14002c648:	and    BYTE PTR [rsi+rbp*1+0x0],ah
   14002c64c:	sbb    BYTE PTR [rdi+rbp*1],dh
   14002c64f:	add    BYTE PTR [rax],dl
   14002c651:	(bad)  
   14002c652:	sub    eax,DWORD PTR [rax]
   14002c654:	or     ah,al
   14002c656:	sub    al,0x0
   14002c658:	adc    BYTE PTR [rax-0x67cbffff],bl
   14002c65e:	add    DWORD PTR [rax],eax
   14002c660:	mov    BYTE PTR fs:[rdx],0x0
   14002c664:	add    DWORD PTR [rcx],ecx
   14002c666:	add    eax,DWORD PTR [rax]
   14002c668:	or     DWORD PTR [rcx],eax
   14002c66a:	xor    BYTE PTR [rax],al
   14002c66c:	add    dl,BYTE PTR [rax+0x0]
   14002c66f:	add    BYTE PTR [rcx],ah
   14002c671:	add    BYTE PTR [rax],cl
   14002c673:	add    BYTE PTR [rax],al
   14002c675:	in     al,0x28
   14002c677:	add    BYTE PTR [rax],al
   14002c679:	(bad)  
   14002c67a:	sub    DWORD PTR [rax],eax
   14002c67c:	add    BYTE PTR [rdx+rbp*1+0x0],dh
   14002c680:	add    BYTE PTR [rcx+rsi*1+0x0],ah
   14002c684:	(bad)  
   14002c685:	mov    al,0x1
   14002c687:	add    BYTE PTR [rax-0x4ffffe50],ah
   14002c68d:	mov    BYTE PTR [rdx],0x0
   14002c690:	and    DWORD PTR [rdi],esp
   14002c692:	or     BYTE PTR [rax],al
   14002c694:	(bad)  
   14002c695:	je     0x14002c6c1
   14002c697:	add    BYTE PTR [rax],bl
   14002c699:	in     al,0x28
   14002c69b:	add    BYTE PTR [rax],dl
   14002c69d:	(bad)  
   14002c69e:	sub    DWORD PTR [rax],eax
   14002c6a0:	or     BYTE PTR [rcx+rsi*1+0x0],ah
   14002c6a4:	(bad)  
   14002c6a5:	mov    al,0x1
   14002c6a7:	add    BYTE PTR [rax-0x4ffffe50],ah
   14002c6ad:	mov    BYTE PTR [rdx],0x0
   14002c6b0:	add    DWORD PTR [rsi],ecx
   14002c6b2:	(bad)  
   14002c6b3:	add    BYTE PTR [rsi],cl
   14002c6b5:	add    DWORD PTR [rbx],ebp
   14002c6b7:	add    BYTE PTR [rdi],al
   14002c6b9:	lock add eax,0x25003d0
   14002c6bf:	xor    BYTE PTR [rcx],ah
   14002c6c1:	add    BYTE PTR [rax],al
   14002c6c3:	add    BYTE PTR [rax],al
   14002c6c5:	mov    ebx,0xbb230001
   14002c6ca:	add    DWORD PTR [rax],eax
   14002c6cc:	nop
   14002c6cd:	iret   
   14002c6ce:	add    al,BYTE PTR [rax]
   14002c6d0:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b407c6d8
   14002c6d6:	(bad)  
   14002c6d7:	add    BYTE PTR [rax],al
   14002c6d9:	mov    ebx,0xbb230001
   14002c6de:	add    DWORD PTR [rax],eax
   14002c6e0:	nop
   14002c6e1:	iret   
   14002c6e2:	add    al,BYTE PTR [rax]
   14002c6e4:	and    DWORD PTR [rax],eax
   14002c6e6:	add    BYTE PTR [rax],al
   14002c6e8:	cmp    BYTE PTR [rbp-0x425cffff],0x1
   14002c6ef:	add    BYTE PTR [rax+0x210002cf],dl
   14002c6f5:	add    eax,0x74050002
   14002c6fa:	(bad)  
   14002c6fb:	add    BYTE PTR [rax-0x5cfffe43],al
   14002c701:	mov    ebp,0xcf900001
   14002c706:	add    al,BYTE PTR [rax]
   14002c708:	and    DWORD PTR [rax],eax
   14002c70a:	add    BYTE PTR [rax],al
   14002c70c:	xor    BYTE PTR [rsi-0x41acffff],bh
   14002c712:	add    DWORD PTR [rax],eax
   14002c714:	nop
   14002c715:	iret   
   14002c716:	add    al,BYTE PTR [rax]
   14002c718:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b407c720
   14002c71e:	(bad)  
   14002c71f:	add    BYTE PTR [rax],dh
   14002c721:	mov    esi,0xbe530001
   14002c726:	add    DWORD PTR [rax],eax
   14002c728:	nop
   14002c729:	iret   
   14002c72a:	add    al,BYTE PTR [rax]
   14002c72c:	and    DWORD PTR [rax],eax
   14002c72e:	add    BYTE PTR [rax],al
   14002c730:	mov    al,0xbe
   14002c732:	add    DWORD PTR [rax],eax
   14002c734:	xlat   BYTE PTR ds:[rbx]
   14002c735:	mov    esi,0xc7740001
   14002c73a:	add    al,BYTE PTR [rax]
   14002c73c:	and    DWORD PTR [rax],eax
   14002c73e:	add    BYTE PTR [rax],al
   14002c740:	xlat   BYTE PTR ds:[rbx]
   14002c741:	mov    esi,0xbee40001
   14002c746:	add    DWORD PTR [rax],eax
   14002c748:	(bad)  
   14002c749:	mov    DWORD PTR [rdx],0x2052100
   14002c74f:	add    BYTE PTR [rip+0xffffffffd7000764],al        # 0x11702ceb9
   14002c755:	mov    esi,0xbee40001
   14002c75a:	add    DWORD PTR [rax],eax
   14002c75c:	(bad)  
   14002c75d:	mov    DWORD PTR [rdx],0x2052100
   14002c763:	add    BYTE PTR [rip+0xffffffffb0000634],al        # 0xf002cd9d
   14002c769:	mov    esi,0xbed70001
   14002c76e:	add    DWORD PTR [rax],eax
   14002c770:	je     0x14002c739
   14002c772:	add    al,BYTE PTR [rax]
   14002c774:	add    DWORD PTR [rdx],ecx
   14002c776:	add    al,0x0
   14002c778:	or     dl,BYTE PTR [rax+rcx*1+0x0]
   14002c77c:	or     dh,BYTE PTR [rdx]
   14002c77e:	(bad)  
   14002c77f:	jo     0x14002c7a2
   14002c781:	add    BYTE PTR [rax],al
   14002c783:	add    al,al
   14002c785:	mov    edi,0xbfe30001
   14002c78a:	add    DWORD PTR [rax],eax
   14002c78c:	nop
   14002c78d:	iret   
   14002c78e:	add    al,BYTE PTR [rax]
   14002c790:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b407c798
   14002c796:	(bad)  
   14002c797:	add    al,al
   14002c799:	mov    edi,0xbfe30001
   14002c79e:	add    DWORD PTR [rax],eax
   14002c7a0:	nop
   14002c7a1:	iret   
   14002c7a2:	add    al,BYTE PTR [rax]
   14002c7a4:	and    DWORD PTR [rax],eax
   14002c7a6:	add    BYTE PTR [rax],al
   14002c7a8:	jo     0x14002c76a
   14002c7aa:	add    DWORD PTR [rax],eax
   14002c7ac:	xchg   edi,eax
   14002c7ad:	rol    BYTE PTR [rcx],0x0
   14002c7b0:	nop
   14002c7b1:	iret   
   14002c7b2:	add    al,BYTE PTR [rax]
   14002c7b4:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b407c7bc
   14002c7ba:	(bad)  
   14002c7bb:	add    BYTE PTR [rax-0x40],dh
   14002c7be:	add    DWORD PTR [rax],eax
   14002c7c0:	xchg   edi,eax
   14002c7c1:	rol    BYTE PTR [rcx],0x0
   14002c7c4:	nop
   14002c7c5:	iret   
   14002c7c6:	add    al,BYTE PTR [rax]
   14002c7c8:	and    DWORD PTR [rax],eax
   14002c7ca:	add    BYTE PTR [rax],al
   14002c7cc:	push   rax
   14002c7cd:	rol    DWORD PTR [rcx],0x0
   14002c7d0:	jae    0x14002c793
   14002c7d2:	add    DWORD PTR [rax],eax
   14002c7d4:	mov    eax,0x210002d1
   14002c7d9:	add    BYTE PTR [rax],al
   14002c7db:	add    BYTE PTR [rbx-0x3f],dh
   14002c7de:	add    DWORD PTR [rax],eax
   14002c7e0:	add    cl,0x1
   14002c7e3:	add    ah,bh
   14002c7e5:	mov    DWORD PTR [rdx],0x2052100
   14002c7eb:	add    BYTE PTR [rip+0x73000774],al        # 0x1b302cf65
   14002c7f1:	rol    DWORD PTR [rcx],0x0
   14002c7f4:	add    cl,0x1
   14002c7f7:	add    ah,bh
   14002c7f9:	mov    DWORD PTR [rdx],0x2052100
   14002c7ff:	add    BYTE PTR [rip+0x50000634],al        # 0x19002ce39
   14002c805:	rol    DWORD PTR [rcx],0x0
   14002c808:	jae    0x14002c7cb
   14002c80a:	add    DWORD PTR [rax],eax
   14002c80c:	mov    eax,0x10002d1
   14002c811:	or     al,BYTE PTR [rax+rax*1]
   14002c814:	or     dh,BYTE PTR [rsi+rax*1]
   14002c817:	add    BYTE PTR [rdx],cl
   14002c819:	xor    al,BYTE PTR [rsi]
   14002c81b:	jo     0x14002c83e
   14002c81d:	add    BYTE PTR [rax],al
   14002c81f:	add    BYTE PTR [rax-0x2cfffe3e],dh
   14002c825:	ret    0x1
   14002c828:	nop
   14002c829:	iret   
   14002c82a:	add    al,BYTE PTR [rax]
   14002c82c:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b407c834
   14002c832:	(bad)  
   14002c833:	add    BYTE PTR [rax-0x2cfffe3e],dh
   14002c839:	ret    0x1
   14002c83c:	nop
   14002c83d:	iret   
   14002c83e:	add    al,BYTE PTR [rax]
   14002c840:	and    DWORD PTR [rax],eax
   14002c842:	add    BYTE PTR [rax],al
   14002c844:	(bad)  
   14002c845:	ret    
   14002c846:	add    DWORD PTR [rax],eax
   14002c848:	add    ebx,0x1
   14002c84b:	add    BYTE PTR [rax+0x210002cf],dl
   14002c851:	add    eax,0x74050002
   14002c856:	(bad)  
   14002c857:	add    BYTE PTR [rax-0x3d],ah
   14002c85a:	add    DWORD PTR [rax],eax
   14002c85c:	add    ebx,0x1
   14002c85f:	add    BYTE PTR [rax+0x210002cf],dl
   14002c865:	add    BYTE PTR [rax],al
   14002c867:	add    al,ah
   14002c869:	ret    
   14002c86a:	add    DWORD PTR [rax],eax
   14002c86c:	add    eax,esp
   14002c86e:	add    DWORD PTR [rax],eax
   14002c870:	nop
   14002c871:	iret   
   14002c872:	add    al,BYTE PTR [rax]
   14002c874:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b407c87c
   14002c87a:	(bad)  
   14002c87b:	add    al,ah
   14002c87d:	ret    
   14002c87e:	add    DWORD PTR [rax],eax
   14002c880:	add    eax,esp
   14002c882:	add    DWORD PTR [rax],eax
   14002c884:	nop
   14002c885:	iret   
   14002c886:	add    al,BYTE PTR [rax]
   14002c888:	and    DWORD PTR [rax],eax
   14002c88a:	add    BYTE PTR [rax],al
   14002c88c:	nop
   14002c88d:	(bad)
   14002c891:	(bad)
   14002c895:	iret   
   14002c896:	add    al,BYTE PTR [rax]
   14002c898:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b407c8a0
   14002c89e:	(bad)  
   14002c89f:	add    BYTE PTR [rax-0x4cfffe3c],dl
   14002c8a5:	(bad)
   14002c8a9:	iret   
   14002c8aa:	add    al,BYTE PTR [rax]
   14002c8ac:	and    DWORD PTR [rax],eax
   14002c8ae:	add    BYTE PTR [rax],al
   14002c8b0:	adc    ch,al
   14002c8b2:	add    DWORD PTR [rax],eax
   14002c8b4:	xor    eax,ebp
   14002c8b6:	add    DWORD PTR [rax],eax
   14002c8b8:	nop
   14002c8b9:	iret   
   14002c8ba:	add    al,BYTE PTR [rax]
   14002c8bc:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b407c8c4
   14002c8c2:	(bad)  
   14002c8c3:	add    BYTE PTR [rax],dl
   14002c8c5:	(bad)
   14002c8c8:	xor    eax,ebp
   14002c8ca:	add    DWORD PTR [rax],eax
   14002c8cc:	nop
   14002c8cd:	iret   
   14002c8ce:	add    al,BYTE PTR [rax]
   14002c8d0:	and    DWORD PTR [rax],eax
   14002c8d2:	add    BYTE PTR [rax],al
   14002c8d4:	rol    ch,0x1
   14002c8d7:	add    bl,ah
   14002c8d9:	(bad)
   14002c8dc:	mov    eax,0x210002d1
   14002c8e1:	add    BYTE PTR [rax],al
   14002c8e3:	add    bl,ah
   14002c8e5:	(bad)
   14002c8e8:	(bad)
   14002c8ec:	add    al,0xc9
   14002c8ee:	add    al,BYTE PTR [rax]
   14002c8f0:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b407c8f8
   14002c8f6:	(bad)  
   14002c8f7:	add    bl,ah
   14002c8f9:	(bad)
   14002c8fc:	(bad)
   14002c900:	add    al,0xc9
   14002c902:	add    al,BYTE PTR [rax]
   14002c904:	and    DWORD PTR [rip+0x34050002],eax        # 0x17407c90c
   14002c90a:	(bad)  
   14002c90b:	add    al,al
   14002c90d:	(bad)
   14002c910:	jrcxz  0x14002c8d7
   14002c912:	add    DWORD PTR [rax],eax
   14002c914:	mov    eax,0x210002d1
   14002c919:	add    BYTE PTR [rax],al
   14002c91b:	add    BYTE PTR [rax-0x3a],ah
   14002c91e:	add    DWORD PTR [rax],eax
   14002c920:	add    esi,0x1
   14002c923:	add    BYTE PTR [rax+0x210002cf],dl
   14002c929:	add    eax,0x74050002
   14002c92e:	(bad)  
   14002c92f:	add    BYTE PTR [rax-0x3a],ah
   14002c932:	add    DWORD PTR [rax],eax
   14002c934:	add    esi,0x1
   14002c937:	add    BYTE PTR [rax+0x210002cf],dl
   14002c93d:	add    BYTE PTR [rax],al
   14002c93f:	add    al,ah
   14002c941:	mov    BYTE PTR [rcx],0x0
   14002c944:	add    eax,edi
   14002c946:	add    DWORD PTR [rax],eax
   14002c948:	nop
   14002c949:	iret   
   14002c94a:	add    al,BYTE PTR [rax]
   14002c94c:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b407c954
   14002c952:	(bad)  
   14002c953:	add    al,ah
   14002c955:	mov    BYTE PTR [rcx],0x0
   14002c958:	add    eax,edi
   14002c95a:	add    DWORD PTR [rax],eax
   14002c95c:	nop
   14002c95d:	iret   
   14002c95e:	add    al,BYTE PTR [rax]
   14002c960:	and    DWORD PTR [rax],eax
   14002c962:	add    BYTE PTR [rax],al
   14002c964:	(bad)  
   14002c965:	mov    DWORD PTR [rcx],0x1c78300
   14002c96b:	add    BYTE PTR [rax+0x210002cf],dl
   14002c971:	add    eax,0x74050002
   14002c976:	(bad)  
   14002c977:	add    BYTE PTR [rax-0x39],ah
   14002c97a:	add    DWORD PTR [rax],eax
   14002c97c:	add    edi,0x1
   14002c97f:	add    BYTE PTR [rax+0x210002cf],dl
   14002c985:	add    BYTE PTR [rax],al
   14002c987:	add    al,ah
   14002c989:	mov    DWORD PTR [rcx],0x1c80300
   14002c98f:	add    BYTE PTR [rax+0x210002cf],dl
   14002c995:	add    eax,0x74050002
   14002c99a:	(bad)  
   14002c99b:	add    al,ah
   14002c99d:	mov    DWORD PTR [rcx],0x1c80300
   14002c9a3:	add    BYTE PTR [rax+0x210002cf],dl
   14002c9a9:	add    BYTE PTR [rax],al
   14002c9ab:	add    BYTE PTR [rax-0x38],ah
   14002c9ae:	add    DWORD PTR [rax],eax
   14002c9b0:	or     eax,0x1
   14002c9b3:	add    BYTE PTR [rax+0x210002cf],dl
   14002c9b9:	add    eax,0x74050002
   14002c9be:	(bad)  
   14002c9bf:	add    BYTE PTR [rax-0x38],ah
   14002c9c2:	add    DWORD PTR [rax],eax
   14002c9c4:	or     eax,0x1
   14002c9c7:	add    BYTE PTR [rax+0x210002cf],dl
   14002c9cd:	add    BYTE PTR [rax],al
   14002c9cf:	add    al,ah
   14002c9d1:	enter  0x1,0x3
   14002c9d5:	leave  
   14002c9d6:	add    DWORD PTR [rax],eax
   14002c9d8:	nop
   14002c9d9:	iret   
   14002c9da:	add    al,BYTE PTR [rax]
   14002c9dc:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b407c9e4
   14002c9e2:	(bad)  
   14002c9e3:	add    al,ah
   14002c9e5:	enter  0x1,0x3
   14002c9e9:	leave  
   14002c9ea:	add    DWORD PTR [rax],eax
   14002c9ec:	nop
   14002c9ed:	iret   
   14002c9ee:	add    al,BYTE PTR [rax]
   14002c9f0:	and    DWORD PTR [rax],eax
   14002c9f2:	add    BYTE PTR [rax],al
   14002c9f4:	(bad)  
   14002c9f5:	leave  
   14002c9f6:	add    DWORD PTR [rax],eax
   14002c9f8:	or     ecx,0x1
   14002c9fb:	add    BYTE PTR [rax+0x210002cf],dl
   14002ca01:	add    eax,0x74050002
   14002ca06:	(bad)  
   14002ca07:	add    BYTE PTR [rax-0x37],ah
   14002ca0a:	add    DWORD PTR [rax],eax
   14002ca0c:	or     ecx,0x1
   14002ca0f:	add    BYTE PTR [rax+0x210002cf],dl
   14002ca15:	add    BYTE PTR [rax],al
   14002ca17:	add    al,ah
   14002ca19:	leave  
   14002ca1a:	add    DWORD PTR [rax],eax
   14002ca1c:	add    ecx,edx
   14002ca1e:	add    DWORD PTR [rax],eax
   14002ca20:	nop
   14002ca21:	iret   
   14002ca22:	add    al,BYTE PTR [rax]
   14002ca24:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b407ca2c
   14002ca2a:	(bad)  
   14002ca2b:	add    al,ah
   14002ca2d:	leave  
   14002ca2e:	add    DWORD PTR [rax],eax
   14002ca30:	add    ecx,edx
   14002ca32:	add    DWORD PTR [rax],eax
   14002ca34:	nop
   14002ca35:	iret   
   14002ca36:	add    al,BYTE PTR [rax]
   14002ca38:	and    DWORD PTR [rax],eax
   14002ca3a:	add    BYTE PTR [rax],al
   14002ca3c:	(bad)  
   14002ca3d:	retf   0x1
   14002ca40:	or     edx,0x1
   14002ca43:	add    BYTE PTR [rax+0x210002cf],dl
   14002ca49:	add    eax,0x74050002
   14002ca4e:	(bad)  
   14002ca4f:	add    BYTE PTR [rax-0x36],ah
   14002ca52:	add    DWORD PTR [rax],eax
   14002ca54:	or     edx,0x1
   14002ca57:	add    BYTE PTR [rax+0x210002cf],dl
   14002ca5d:	add    BYTE PTR [rax],al
   14002ca5f:	add    al,ah
   14002ca61:	retf   0x1
   14002ca64:	add    ecx,ebx
   14002ca66:	add    DWORD PTR [rax],eax
   14002ca68:	nop
   14002ca69:	iret   
   14002ca6a:	add    al,BYTE PTR [rax]
   14002ca6c:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b407ca74
   14002ca72:	(bad)  
   14002ca73:	add    al,ah
   14002ca75:	retf   0x1
   14002ca78:	add    ecx,ebx
   14002ca7a:	add    DWORD PTR [rax],eax
   14002ca7c:	nop
   14002ca7d:	iret   
   14002ca7e:	add    al,BYTE PTR [rax]
   14002ca80:	and    DWORD PTR [rax],eax
   14002ca82:	add    BYTE PTR [rax],al
   14002ca84:	(bad)  
   14002ca85:	retf   
   14002ca86:	add    DWORD PTR [rax],eax
   14002ca88:	or     ebx,0x1
   14002ca8b:	add    BYTE PTR [rax+0x210002cf],dl
   14002ca91:	add    eax,0x74050002
   14002ca96:	(bad)  
   14002ca97:	add    BYTE PTR [rax-0x35],ah
   14002ca9a:	add    DWORD PTR [rax],eax
   14002ca9c:	or     ebx,0x1
   14002ca9f:	add    BYTE PTR [rax+0x210002cf],dl
   14002caa5:	add    BYTE PTR [rax],al
   14002caa7:	add    al,ah
   14002caa9:	retf   
   14002caaa:	add    DWORD PTR [rax],eax
   14002caac:	add    ecx,esp
   14002caae:	add    DWORD PTR [rax],eax
   14002cab0:	nop
   14002cab1:	iret   
   14002cab2:	add    al,BYTE PTR [rax]
   14002cab4:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b407cabc
   14002caba:	(bad)  
   14002cabb:	add    al,ah
   14002cabd:	retf   
   14002cabe:	add    DWORD PTR [rax],eax
   14002cac0:	add    ecx,esp
   14002cac2:	add    DWORD PTR [rax],eax
   14002cac4:	nop
   14002cac5:	iret   
   14002cac6:	add    al,BYTE PTR [rax]
   14002cac8:	and    DWORD PTR [rax],eax
   14002caca:	add    BYTE PTR [rax],al
   14002cacc:	nop
   14002cacd:	int3   
   14002cace:	add    DWORD PTR [rax],eax
   14002cad0:	mov    bh,0xcc
   14002cad2:	add    DWORD PTR [rax],eax
   14002cad4:	nop
   14002cad5:	iret   
   14002cad6:	add    al,BYTE PTR [rax]
   14002cad8:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b407cae0
   14002cade:	(bad)  
   14002cadf:	add    BYTE PTR [rax-0x48fffe34],dl
   14002cae5:	int3   
   14002cae6:	add    DWORD PTR [rax],eax
   14002cae8:	nop
   14002cae9:	iret   
   14002caea:	add    al,BYTE PTR [rax]
   14002caec:	and    DWORD PTR [rax],eax
   14002caee:	add    BYTE PTR [rax],al
   14002caf0:	jo     0x14002cabf
   14002caf2:	add    DWORD PTR [rax],eax
   14002caf4:	xchg   ebx,eax
   14002caf5:	int    0x1
   14002caf7:	add    BYTE PTR [rax+0x210002cf],dl
   14002cafd:	add    eax,0x74050002
   14002cb02:	(bad)  
   14002cb03:	add    BYTE PTR [rax-0x33],dh
   14002cb06:	add    DWORD PTR [rax],eax
   14002cb08:	xchg   ebx,eax
   14002cb09:	int    0x1
   14002cb0b:	add    BYTE PTR [rax+0x210002cf],dl
   14002cb11:	add    BYTE PTR [rax],al
   14002cb13:	add    BYTE PTR [rax],ah
   14002cb15:	(bad)  
   14002cb16:	add    DWORD PTR [rax],eax
   14002cb18:	rex.XB (bad) 
   14002cb1a:	add    DWORD PTR [rax],eax
   14002cb1c:	nop
   14002cb1d:	iret   
   14002cb1e:	add    al,BYTE PTR [rax]
   14002cb20:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b407cb28
   14002cb26:	(bad)  
   14002cb27:	add    BYTE PTR [rax],ah
   14002cb29:	(bad)  
   14002cb2a:	add    DWORD PTR [rax],eax
   14002cb2c:	rex.XB (bad) 
   14002cb2e:	add    DWORD PTR [rax],eax
   14002cb30:	nop
   14002cb31:	iret   
   14002cb32:	add    al,BYTE PTR [rax]
   14002cb34:	and    DWORD PTR [rax],eax
   14002cb36:	add    BYTE PTR [rax],al
   14002cb38:	movabs al,ds:0xb80001cec30001ce
   14002cb41:	rol    DWORD PTR [rdx],1
   14002cb43:	add    BYTE PTR [rcx],ah
   14002cb45:	add    BYTE PTR [rax],al
   14002cb47:	add    bl,al
   14002cb49:	(bad)  
   14002cb4a:	add    DWORD PTR [rax],eax
   14002cb4c:	ror    dh,1
   14002cb4e:	add    DWORD PTR [rax],eax
   14002cb50:	push   0x210002cb
   14002cb55:	add    eax,0x74050002
   14002cb5a:	(bad)  
   14002cb5b:	add    bl,al
   14002cb5d:	(bad)  
   14002cb5e:	add    DWORD PTR [rax],eax
   14002cb60:	ror    dh,1
   14002cb62:	add    DWORD PTR [rax],eax
   14002cb64:	push   0x210002cb
   14002cb69:	add    eax,0x34050002
   14002cb6e:	(bad)  
   14002cb6f:	add    BYTE PTR [rax-0x3cfffe32],ah
   14002cb75:	(bad)  
   14002cb76:	add    DWORD PTR [rax],eax
   14002cb78:	mov    eax,0x210002d1
   14002cb7d:	add    BYTE PTR [rax],al
   14002cb7f:	add    BYTE PTR [rax-0x31],al
   14002cb82:	add    DWORD PTR [rax],eax
   14002cb84:	movsxd ecx,edi
   14002cb86:	add    DWORD PTR [rax],eax
   14002cb88:	nop
   14002cb89:	iret   
   14002cb8a:	add    al,BYTE PTR [rax]
   14002cb8c:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b407cb94
   14002cb92:	(bad)  
   14002cb93:	add    BYTE PTR [rax-0x31],al
   14002cb96:	add    DWORD PTR [rax],eax
   14002cb98:	movsxd ecx,edi
   14002cb9a:	add    DWORD PTR [rax],eax
   14002cb9c:	nop
   14002cb9d:	iret   
   14002cb9e:	add    al,BYTE PTR [rax]
   14002cba0:	and    DWORD PTR [rax],eax
   14002cba2:	add    BYTE PTR [rax],al
   14002cba4:	ror    bh,0x1
   14002cba7:	add    bl,ah
   14002cba9:	iret   
   14002cbaa:	add    DWORD PTR [rax],eax
   14002cbac:	mov    eax,0x210002d1
   14002cbb1:	add    BYTE PTR [rax],al
   14002cbb3:	add    bl,ah
   14002cbb5:	iret   
   14002cbb6:	add    DWORD PTR [rax],eax
   14002cbb8:	lock iret 
   14002cbba:	add    DWORD PTR [rax],eax
   14002cbbc:	(bad)  
   14002cbbd:	retf   
   14002cbbe:	add    al,BYTE PTR [rax]
   14002cbc0:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b407cbc8
   14002cbc6:	(bad)  
   14002cbc7:	add    bl,ah
   14002cbc9:	iret   
   14002cbca:	add    DWORD PTR [rax],eax
   14002cbcc:	lock iret 
   14002cbce:	add    DWORD PTR [rax],eax
   14002cbd0:	(bad)  
   14002cbd1:	retf   
   14002cbd2:	add    al,BYTE PTR [rax]
   14002cbd4:	and    DWORD PTR [rip+0x34050002],eax        # 0x17407cbdc
   14002cbda:	(bad)  
   14002cbdb:	add    al,al
   14002cbdd:	iret   
   14002cbde:	add    DWORD PTR [rax],eax
   14002cbe0:	jrcxz  0x14002cbb1
   14002cbe2:	add    DWORD PTR [rax],eax
   14002cbe4:	mov    eax,0x210002d1
   14002cbe9:	add    BYTE PTR [rax],al
   14002cbeb:	add    BYTE PTR [rax-0x30],ah
   14002cbee:	add    DWORD PTR [rax],eax
   14002cbf0:	adc    eax,0x1
   14002cbf3:	add    BYTE PTR [rax+0x210002cf],dl
   14002cbf9:	add    eax,0x74050002
   14002cbfe:	(bad)  
   14002cbff:	add    BYTE PTR [rax-0x30],ah
   14002cc02:	add    DWORD PTR [rax],eax
   14002cc04:	adc    eax,0x1
   14002cc07:	add    BYTE PTR [rax+0x210002cf],dl
   14002cc0d:	add    BYTE PTR [rax],al
   14002cc0f:	add    BYTE PTR [rax],ah
   14002cc11:	rol    DWORD PTR [rcx],1
   14002cc13:	add    BYTE PTR [rbx-0x2f],al
   14002cc16:	add    DWORD PTR [rax],eax
   14002cc18:	nop
   14002cc19:	iret   
   14002cc1a:	add    al,BYTE PTR [rax]
   14002cc1c:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b407cc24
   14002cc22:	(bad)  
   14002cc23:	add    BYTE PTR [rax],ah
   14002cc25:	rol    DWORD PTR [rcx],1
   14002cc27:	add    BYTE PTR [rbx-0x2f],al
   14002cc2a:	add    DWORD PTR [rax],eax
   14002cc2c:	nop
   14002cc2d:	iret   
   14002cc2e:	add    al,BYTE PTR [rax]
   14002cc30:	and    DWORD PTR [rax],eax
   14002cc32:	add    BYTE PTR [rax],al
   14002cc34:	movabs al,ds:0x900001d1c70001d1
   14002cc3d:	iret   
   14002cc3e:	add    al,BYTE PTR [rax]
   14002cc40:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b407cc48
   14002cc46:	(bad)  
   14002cc47:	add    BYTE PTR [rax-0x38fffe2f],ah
   14002cc4d:	rol    DWORD PTR [rcx],1
   14002cc4f:	add    BYTE PTR [rax+0x210002cf],dl
   14002cc55:	add    BYTE PTR [rax],al
   14002cc57:	add    BYTE PTR [rax-0x5cfffe2e],al
   14002cc5d:	rol    BYTE PTR [rcx],cl
   14002cc5f:	add    BYTE PTR [rax+0x210002cf],dl
   14002cc65:	add    eax,0x74050002
   14002cc6a:	(bad)  
   14002cc6b:	add    BYTE PTR [rax-0x5cfffe2e],al
   14002cc71:	rol    BYTE PTR [rcx],cl
   14002cc73:	add    BYTE PTR [rax+0x210002cf],dl
   14002cc79:	add    BYTE PTR [rax],al
   14002cc7b:	add    BYTE PTR [rax],dh
   14002cc7d:	rol    DWORD PTR [rcx],cl
   14002cc7f:	add    BYTE PTR [rbx-0x2d],dl
   14002cc82:	add    DWORD PTR [rax],eax
   14002cc84:	nop
   14002cc85:	iret   
   14002cc86:	add    al,BYTE PTR [rax]
   14002cc88:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b407cc90
   14002cc8e:	(bad)  
   14002cc8f:	add    BYTE PTR [rax],dh
   14002cc91:	rol    DWORD PTR [rcx],cl
   14002cc93:	add    BYTE PTR [rbx-0x2d],dl
   14002cc96:	add    DWORD PTR [rax],eax
   14002cc98:	nop
   14002cc99:	iret   
   14002cc9a:	add    al,BYTE PTR [rax]
   14002cc9c:	and    DWORD PTR [rax],eax
   14002cc9e:	add    BYTE PTR [rax],al
   14002cca0:	loopne 0x14002cc75
   14002cca2:	add    DWORD PTR [rax],eax
   14002cca4:	(bad)  
   14002cca5:	(bad)  
   14002cca6:	add    DWORD PTR [rax],eax
   14002cca8:	nop
   14002cca9:	iret   
   14002ccaa:	add    al,BYTE PTR [rax]
   14002ccac:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b407ccb4
   14002ccb2:	(bad)  
   14002ccb3:	add    al,ah
   14002ccb5:	rol    DWORD PTR [rcx],cl
   14002ccb7:	add    BYTE PTR [rdi],al
   14002ccb9:	(bad)  
   14002ccba:	add    DWORD PTR [rax],eax
   14002ccbc:	nop
   14002ccbd:	iret   
   14002ccbe:	add    al,BYTE PTR [rax]
   14002ccc0:	and    DWORD PTR [rax],eax
   14002ccc2:	add    BYTE PTR [rax],al
   14002ccc4:	lock (bad) 
   14002ccc6:	add    DWORD PTR [rax],eax
   14002ccc8:	(bad)  
   14002ccc9:	(bad)  
   14002ccca:	add    DWORD PTR [rax],eax
   14002cccc:	nop
   14002cccd:	iret   
   14002ccce:	add    al,BYTE PTR [rax]
   14002ccd0:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b407ccd8
   14002ccd6:	(bad)  
   14002ccd7:	add    al,dh
   14002ccd9:	(bad)  
   14002ccda:	add    DWORD PTR [rax],eax
   14002ccdc:	(bad)  
   14002ccdd:	(bad)  
   14002ccde:	add    DWORD PTR [rax],eax
   14002cce0:	nop
   14002cce1:	iret   
   14002cce2:	add    al,BYTE PTR [rax]
   14002cce4:	and    DWORD PTR [rax],eax
   14002cce6:	add    BYTE PTR [rax],al
   14002cce8:	add    dh,dl
   14002ccea:	add    DWORD PTR [rax],eax
   14002ccec:	(bad)  
   14002cced:	(bad)  
   14002ccee:	add    DWORD PTR [rax],eax
   14002ccf0:	nop
   14002ccf1:	iret   
   14002ccf2:	add    al,BYTE PTR [rax]
   14002ccf4:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b407ccfc
   14002ccfa:	(bad)  
   14002ccfb:	add    BYTE PTR [rax],al
   14002ccfd:	(bad)  
   14002ccfe:	add    DWORD PTR [rax],eax
   14002cd00:	(bad)  
   14002cd01:	(bad)  
   14002cd02:	add    DWORD PTR [rax],eax
   14002cd04:	nop
   14002cd05:	iret   
   14002cd06:	add    al,BYTE PTR [rax]
   14002cd08:	and    DWORD PTR [rax],eax
   14002cd0a:	add    BYTE PTR [rax],al
   14002cd0c:	loopne 0x14002cce4
   14002cd0e:	add    DWORD PTR [rax],eax
   14002cd10:	(bad)  
   14002cd11:	xlat   BYTE PTR ds:[rbx]
   14002cd12:	add    DWORD PTR [rax],eax
   14002cd14:	nop
   14002cd15:	iret   
   14002cd16:	add    al,BYTE PTR [rax]
   14002cd18:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b407cd20
   14002cd1e:	(bad)  
   14002cd1f:	add    al,ah
   14002cd21:	(bad)  
   14002cd22:	add    DWORD PTR [rax],eax
   14002cd24:	(bad)  
   14002cd25:	xlat   BYTE PTR ds:[rbx]
   14002cd26:	add    DWORD PTR [rax],eax
   14002cd28:	nop
   14002cd29:	iret   
   14002cd2a:	add    al,BYTE PTR [rax]
   14002cd2c:	and    DWORD PTR [rax],eax
   14002cd2e:	add    BYTE PTR [rax],al
   14002cd30:	rex fadd DWORD PTR [rcx]
   14002cd33:	add    BYTE PTR [rbx-0x28],ah
   14002cd36:	add    DWORD PTR [rax],eax
   14002cd38:	nop
   14002cd39:	iret   
   14002cd3a:	add    al,BYTE PTR [rax]
   14002cd3c:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b407cd44
   14002cd42:	(bad)  
   14002cd43:	add    BYTE PTR [rax-0x28],al
   14002cd46:	add    DWORD PTR [rax],eax
   14002cd48:	movsxd ebx,eax
   14002cd4a:	add    DWORD PTR [rax],eax
   14002cd4c:	nop
   14002cd4d:	iret   
   14002cd4e:	add    al,BYTE PTR [rax]
   14002cd50:	and    DWORD PTR [rax],eax
   14002cd52:	add    BYTE PTR [rax],al
   14002cd54:	rcr    al,0x1
   14002cd57:	add    bl,ah
   14002cd59:	fadd   DWORD PTR [rcx]
   14002cd5b:	add    BYTE PTR [rax+0x210002cf],dl
   14002cd61:	add    eax,0x74050002
   14002cd66:	(bad)  
   14002cd67:	add    al,al
   14002cd69:	fadd   DWORD PTR [rcx]
   14002cd6b:	add    bl,ah
   14002cd6d:	fadd   DWORD PTR [rcx]
   14002cd6f:	add    BYTE PTR [rax+0x210002cf],dl
   14002cd75:	add    BYTE PTR [rax],al
   14002cd77:	add    BYTE PTR [rax-0x27],dh
   14002cd7a:	add    DWORD PTR [rax],eax
   14002cd7c:	xchg   ebx,eax
   14002cd7d:	fld    DWORD PTR [rcx]
   14002cd7f:	add    BYTE PTR [rax+0x210002cf],dl
   14002cd85:	add    eax,0x74050002
   14002cd8a:	(bad)  
   14002cd8b:	add    BYTE PTR [rax-0x27],dh
   14002cd8e:	add    DWORD PTR [rax],eax
   14002cd90:	xchg   ebx,eax
   14002cd91:	fld    DWORD PTR [rcx]
   14002cd93:	add    BYTE PTR [rax+0x210002cf],dl
   14002cd99:	add    BYTE PTR [rax],al
   14002cd9b:	add    BYTE PTR [rax],ah
   14002cd9d:	fiadd  DWORD PTR [rcx]
   14002cd9f:	add    BYTE PTR [rdi-0x26],al
   14002cda2:	add    DWORD PTR [rax],eax
   14002cda4:	nop
   14002cda5:	iret   
   14002cda6:	add    al,BYTE PTR [rax]
   14002cda8:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b407cdb0
   14002cdae:	(bad)  
   14002cdaf:	add    BYTE PTR [rax],ah
   14002cdb1:	fiadd  DWORD PTR [rcx]
   14002cdb3:	add    BYTE PTR [rdi-0x26],al
   14002cdb6:	add    DWORD PTR [rax],eax
   14002cdb8:	nop
   14002cdb9:	iret   
   14002cdba:	add    al,BYTE PTR [rax]
   14002cdbc:	and    DWORD PTR [rax],eax
   14002cdbe:	add    BYTE PTR [rax],al
   14002cdc0:	add    bl,bl
   14002cdc2:	add    DWORD PTR [rax],eax
   14002cdc4:	and    ebx,ebx
   14002cdc6:	add    DWORD PTR [rax],eax
   14002cdc8:	mov    eax,0x210002d1
   14002cdcd:	add    BYTE PTR [rax],al
   14002cdcf:	add    BYTE PTR [rbx],ah
   14002cdd1:	fild   DWORD PTR [rcx]
   14002cdd3:	add    BYTE PTR [rax],dh
   14002cdd5:	fild   DWORD PTR [rcx]
   14002cdd7:	add    al,dh
   14002cdd9:	int    0x2
   14002cddb:	add    BYTE PTR [rcx],ah
   14002cddd:	add    eax,0x74050002
   14002cde2:	(bad)  
   14002cde3:	add    BYTE PTR [rbx],ah
   14002cde5:	fild   DWORD PTR [rcx]
   14002cde7:	add    BYTE PTR [rax],dh
   14002cde9:	fild   DWORD PTR [rcx]
   14002cdeb:	add    al,dh
   14002cded:	int    0x2
   14002cdef:	add    BYTE PTR [rcx],ah
   14002cdf1:	add    eax,0x34050002
   14002cdf6:	(bad)  
   14002cdf7:	add    BYTE PTR [rax],al
   14002cdf9:	fild   DWORD PTR [rcx]
   14002cdfb:	add    BYTE PTR [rbx],ah
   14002cdfd:	fild   DWORD PTR [rcx]
   14002cdff:	add    BYTE PTR [rax+0x210002d1],bh
   14002ce05:	add    BYTE PTR [rax],al
   14002ce07:	add    BYTE PTR [rax-0x3cfffe25],ah
   14002ce0d:	fild   DWORD PTR [rcx]
   14002ce0f:	add    BYTE PTR [rax+0x210002cf],dl
   14002ce15:	add    eax,0x74050002
   14002ce1a:	(bad)  
   14002ce1b:	add    BYTE PTR [rax-0x3cfffe25],ah
   14002ce21:	fild   DWORD PTR [rcx]
   14002ce23:	add    BYTE PTR [rax+0x210002cf],dl
   14002ce29:	add    BYTE PTR [rax],al
   14002ce2b:	add    BYTE PTR [rax-0x24],dl
   14002ce2e:	add    DWORD PTR [rax],eax
   14002ce30:	jae    0x14002ce0e
   14002ce32:	add    DWORD PTR [rax],eax
   14002ce34:	nop
   14002ce35:	iret   
   14002ce36:	add    al,BYTE PTR [rax]
   14002ce38:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b407ce40
   14002ce3e:	(bad)  
   14002ce3f:	add    BYTE PTR [rax-0x24],dl
   14002ce42:	add    DWORD PTR [rax],eax
   14002ce44:	jae    0x14002ce22
   14002ce46:	add    DWORD PTR [rax],eax
   14002ce48:	nop
   14002ce49:	iret   
   14002ce4a:	add    al,BYTE PTR [rax]
   14002ce4c:	and    DWORD PTR [rax],eax
   14002ce4e:	add    BYTE PTR [rax],al
   14002ce50:	rcr    ah,1
   14002ce52:	add    DWORD PTR [rax],eax
   14002ce54:	repz fadd QWORD PTR [rcx]
   14002ce57:	add    BYTE PTR [rax+0x210002cf],dl
   14002ce5d:	add    eax,0x74050002
   14002ce62:	(bad)  
   14002ce63:	add    al,dl
   14002ce65:	fadd   QWORD PTR [rcx]
   14002ce67:	add    bl,dh
   14002ce69:	fadd   QWORD PTR [rcx]
   14002ce6b:	add    BYTE PTR [rax+0x210002cf],dl
   14002ce71:	add    BYTE PTR [rax],al
   14002ce73:	add    BYTE PTR [rax-0x23],dl
   14002ce76:	add    DWORD PTR [rax],eax
   14002ce78:	jo     0x14002ce57
   14002ce7a:	add    DWORD PTR [rax],eax
   14002ce7c:	nop
   14002ce7d:	iret   
   14002ce7e:	add    al,BYTE PTR [rax]
   14002ce80:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b407ce88
   14002ce86:	(bad)  
   14002ce87:	add    BYTE PTR [rax-0x23],dl
   14002ce8a:	add    DWORD PTR [rax],eax
   14002ce8c:	jo     0x14002ce6b
   14002ce8e:	add    DWORD PTR [rax],eax
   14002ce90:	nop
   14002ce91:	iret   
   14002ce92:	add    al,BYTE PTR [rax]
   14002ce94:	and    DWORD PTR [rax],eax
   14002ce96:	add    BYTE PTR [rax],al
   14002ce98:	rcr    ch,1
   14002ce9a:	add    DWORD PTR [rax],eax
   14002ce9c:	hlt    
   14002ce9d:	fld    QWORD PTR [rcx]
   14002ce9f:	add    BYTE PTR [rax+0x210002cf],dl
   14002cea5:	add    eax,0x74050002
   14002ceaa:	(bad)  
   14002ceab:	add    al,dl
   14002cead:	fld    QWORD PTR [rcx]
   14002ceaf:	add    ah,dh
   14002ceb1:	fld    QWORD PTR [rcx]
   14002ceb3:	add    BYTE PTR [rax+0x210002cf],dl
   14002ceb9:	add    BYTE PTR [rax],al
   14002cebb:	add    BYTE PTR [rax-0x2ffffe22],dh
   14002cec1:	fiadd  WORD PTR [rcx]
   14002cec3:	add    BYTE PTR [rax+0x210002cf],dl
   14002cec9:	add    eax,0x74050002
   14002cece:	(bad)  
   14002cecf:	add    BYTE PTR [rax-0x2ffffe22],dh
   14002ced5:	fiadd  WORD PTR [rcx]
   14002ced7:	add    BYTE PTR [rax+0x210002cf],dl
   14002cedd:	add    BYTE PTR [rax],al
   14002cedf:	add    BYTE PTR [rax],dh
   14002cee1:	fild   WORD PTR [rcx]
   14002cee3:	add    BYTE PTR [rax-0x21],dl
   14002cee6:	add    DWORD PTR [rax],eax
   14002cee8:	nop
   14002cee9:	iret   
   14002ceea:	add    al,BYTE PTR [rax]
   14002ceec:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b407cef4
   14002cef2:	(bad)  
   14002cef3:	add    BYTE PTR [rax],dh
   14002cef5:	fild   WORD PTR [rcx]
   14002cef7:	add    BYTE PTR [rax-0x21],dl
   14002cefa:	add    DWORD PTR [rax],eax
   14002cefc:	nop
   14002cefd:	iret   
   14002cefe:	add    al,BYTE PTR [rax]
   14002cf00:	and    DWORD PTR [rax],eax
   14002cf02:	add    BYTE PTR [rax],al
   14002cf04:	mov    al,0xdf
   14002cf06:	add    DWORD PTR [rax],eax
   14002cf08:	rcr    bh,1
   14002cf0a:	add    DWORD PTR [rax],eax
   14002cf0c:	nop
   14002cf0d:	iret   
   14002cf0e:	add    al,BYTE PTR [rax]
   14002cf10:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b407cf18
   14002cf16:	(bad)  
   14002cf17:	add    BYTE PTR [rax-0x2ffffe21],dh
   14002cf1d:	fild   WORD PTR [rcx]
   14002cf1f:	add    BYTE PTR [rax+0x210002cf],dl
   14002cf25:	add    BYTE PTR [rax],al
   14002cf27:	add    BYTE PTR [rax-0x20],ah
   14002cf2a:	add    DWORD PTR [rax],eax
   14002cf2c:	and    al,0x1
   14002cf2f:	add    BYTE PTR [rax+0x210002cf],dl
   14002cf35:	add    eax,0x74050002
   14002cf3a:	(bad)  
   14002cf3b:	add    BYTE PTR [rax-0x20],ah
   14002cf3e:	add    DWORD PTR [rax],eax
   14002cf40:	and    al,0x1
   14002cf43:	add    BYTE PTR [rax+0x210002cf],dl
   14002cf49:	add    BYTE PTR [rax],al
   14002cf4b:	add    BYTE PTR [rax-0x1f],dl
   14002cf4e:	add    DWORD PTR [rax],eax
   14002cf50:	jo     0x14002cf33
   14002cf52:	add    DWORD PTR [rax],eax
   14002cf54:	nop
   14002cf55:	iret   
   14002cf56:	add    al,BYTE PTR [rax]
   14002cf58:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b407cf60
   14002cf5e:	(bad)  
   14002cf5f:	add    BYTE PTR [rax-0x1f],dl
   14002cf62:	add    DWORD PTR [rax],eax
   14002cf64:	jo     0x14002cf47
   14002cf66:	add    DWORD PTR [rax],eax
   14002cf68:	nop
   14002cf69:	iret   
   14002cf6a:	add    al,BYTE PTR [rax]
   14002cf6c:	and    DWORD PTR [rax],eax
   14002cf6e:	add    BYTE PTR [rax],al
   14002cf70:	shl    cl,1
   14002cf72:	add    DWORD PTR [rax],eax
   14002cf74:	lock loope 0x14002cf78
   14002cf77:	add    BYTE PTR [rax+0x210002cf],dl
   14002cf7d:	add    eax,0x74050002
   14002cf82:	(bad)  
   14002cf83:	add    al,dl
   14002cf85:	loope  0x14002cf88
   14002cf87:	add    al,dh
   14002cf89:	loope  0x14002cf8c
   14002cf8b:	add    BYTE PTR [rax+0x10002cf],dl
   14002cf91:	or     al,BYTE PTR [rax+rax*1]
   14002cf94:	or     dh,BYTE PTR [rdi+rax*1]
   14002cf97:	add    BYTE PTR [rdx],cl
   14002cf99:	xor    al,BYTE PTR [rsi]
   14002cf9b:	(bad)  
   14002cf9c:	and    DWORD PTR [rax],eax
   14002cf9e:	add    BYTE PTR [rax],al
   14002cfa0:	push   rax
   14002cfa1:	loop   0x14002cfa4
   14002cfa3:	add    BYTE PTR [rax-0x1e],dh
   14002cfa6:	add    DWORD PTR [rax],eax
   14002cfa8:	mov    eax,0x210002d1
   14002cfad:	add    BYTE PTR [rax],al
   14002cfaf:	add    BYTE PTR [rax-0x1e],dh
   14002cfb2:	add    DWORD PTR [rax],eax
   14002cfb4:	jge    0x14002cf98
   14002cfb6:	add    DWORD PTR [rax],eax
   14002cfb8:	ror    bh,1
   14002cfba:	add    al,BYTE PTR [rax]
   14002cfbc:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b407cfc4
   14002cfc2:	(bad)  
   14002cfc3:	add    BYTE PTR [rax-0x1e],dh
   14002cfc6:	add    DWORD PTR [rax],eax
   14002cfc8:	jge    0x14002cfac
   14002cfca:	add    DWORD PTR [rax],eax
   14002cfcc:	ror    bh,1
   14002cfce:	add    al,BYTE PTR [rax]
   14002cfd0:	and    DWORD PTR [rip+0x34050002],eax        # 0x17407cfd8
   14002cfd6:	(bad)  
   14002cfd7:	add    BYTE PTR [rax-0x1e],dl
   14002cfda:	add    DWORD PTR [rax],eax
   14002cfdc:	jo     0x14002cfc0
   14002cfde:	add    DWORD PTR [rax],eax
   14002cfe0:	mov    eax,0x210002d1
   14002cfe5:	add    BYTE PTR [rax],al
   14002cfe7:	add    al,ah
   14002cfe9:	loop   0x14002cfec
   14002cfeb:	add    BYTE PTR [rax],al
   14002cfed:	jrcxz  0x14002cff0
   14002cfef:	add    BYTE PTR [rax+0x210002cf],dl
   14002cff5:	add    eax,0x74050002
   14002cffa:	(bad)  
   14002cffb:	add    al,ah
   14002cffd:	loop   0x14002d000
   14002cfff:	add    BYTE PTR [rax],al
   14002d001:	jrcxz  0x14002d004
   14002d003:	add    BYTE PTR [rax+0x210002cf],dl
   14002d009:	add    BYTE PTR [rax],al
   14002d00b:	add    BYTE PTR [rax-0x1d],ah
   14002d00e:	add    DWORD PTR [rax],eax
   14002d010:	and    bl,0x1
   14002d013:	add    BYTE PTR [rax+0x210002cf],dl
   14002d019:	add    eax,0x74050002
   14002d01e:	(bad)  
   14002d01f:	add    BYTE PTR [rax-0x1d],ah
   14002d022:	add    DWORD PTR [rax],eax
   14002d024:	and    bl,0x1
   14002d027:	add    BYTE PTR [rax+0x210002cf],dl
   14002d02d:	add    BYTE PTR [rax],al
   14002d02f:	add    BYTE PTR [rax],ah
   14002d031:	in     al,0x1
   14002d033:	add    BYTE PTR [rbx-0x1c],al
   14002d036:	add    DWORD PTR [rax],eax
   14002d038:	nop
   14002d039:	iret   
   14002d03a:	add    al,BYTE PTR [rax]
   14002d03c:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b407d044
   14002d042:	(bad)  
   14002d043:	add    BYTE PTR [rax],ah
   14002d045:	in     al,0x1
   14002d047:	add    BYTE PTR [rbx-0x1c],al
   14002d04a:	add    DWORD PTR [rax],eax
   14002d04c:	nop
   14002d04d:	iret   
   14002d04e:	add    al,BYTE PTR [rax]
   14002d050:	and    DWORD PTR [rax],eax
   14002d052:	add    BYTE PTR [rax],al
   14002d054:	shl    ah,1
   14002d056:	add    DWORD PTR [rax],eax
   14002d058:	repz in al,0x1
   14002d05b:	add    BYTE PTR [rax+0x210002cf],dl
   14002d061:	add    eax,0x74050002
   14002d066:	(bad)  
   14002d067:	add    al,dl
   14002d069:	in     al,0x1
   14002d06b:	add    bl,dh
   14002d06d:	in     al,0x1
   14002d06f:	add    BYTE PTR [rax+0x210002cf],dl
   14002d075:	add    BYTE PTR [rax],al
   14002d077:	add    BYTE PTR [rax-0x5cfffe1b],al
   14002d07d:	in     eax,0x1
   14002d07f:	add    BYTE PTR [rax+0x210002cf],dl
   14002d085:	add    eax,0x74050002
   14002d08a:	(bad)  
   14002d08b:	add    BYTE PTR [rax-0x5cfffe1b],al
   14002d091:	in     eax,0x1
   14002d093:	add    BYTE PTR [rax+0x210002cf],dl
   14002d099:	add    BYTE PTR [rax],al
   14002d09b:	add    BYTE PTR [rax],dh
   14002d09d:	out    0x1,al
   14002d09f:	add    BYTE PTR [rbx-0x1a],dl
   14002d0a2:	add    DWORD PTR [rax],eax
   14002d0a4:	nop
   14002d0a5:	iret   
   14002d0a6:	add    al,BYTE PTR [rax]
   14002d0a8:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b407d0b0
   14002d0ae:	(bad)  
   14002d0af:	add    BYTE PTR [rax],dh
   14002d0b1:	out    0x1,al
   14002d0b3:	add    BYTE PTR [rbx-0x1a],dl
   14002d0b6:	add    DWORD PTR [rax],eax
   14002d0b8:	nop
   14002d0b9:	iret   
   14002d0ba:	add    al,BYTE PTR [rax]
   14002d0bc:	and    DWORD PTR [rax],eax
   14002d0be:	add    BYTE PTR [rax],al
   14002d0c0:	lock out 0x1,al
   14002d0c3:	add    BYTE PTR [rdi],dl
   14002d0c5:	out    0x1,eax
   14002d0c7:	add    BYTE PTR [rax+0x210002cf],dl
   14002d0cd:	add    eax,0x74050002
   14002d0d2:	(bad)  
   14002d0d3:	add    al,dh
   14002d0d5:	out    0x1,al
   14002d0d7:	add    BYTE PTR [rdi],dl
   14002d0d9:	out    0x1,eax
   14002d0db:	add    BYTE PTR [rax+0x210002cf],dl
   14002d0e1:	add    BYTE PTR [rax],al
   14002d0e3:	add    al,dl
   14002d0e5:	out    0x1,eax
   14002d0e7:	add    bl,dh
   14002d0e9:	out    0x1,eax
   14002d0eb:	add    BYTE PTR [rax+0x210002cf],dl
   14002d0f1:	add    eax,0x74050002
   14002d0f6:	(bad)  
   14002d0f7:	add    al,dl
   14002d0f9:	out    0x1,eax
   14002d0fb:	add    bl,dh
   14002d0fd:	out    0x1,eax
   14002d0ff:	add    BYTE PTR [rax+0x210002cf],dl
   14002d105:	add    BYTE PTR [rax],al
   14002d107:	add    BYTE PTR [rax-0x5cfffe18],al
   14002d10d:	call   0x10f92d113
   14002d112:	add    al,BYTE PTR [rax]
   14002d114:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b407d11c
   14002d11a:	(bad)  
   14002d11b:	add    BYTE PTR [rax-0x5cfffe18],al
   14002d121:	call   0x10f92d127
   14002d126:	add    al,BYTE PTR [rax]
   14002d128:	and    DWORD PTR [rax],eax
   14002d12a:	add    BYTE PTR [rax],al
   14002d12c:	xor    cl,ch
   14002d12e:	add    DWORD PTR [rax],eax
   14002d130:	push   rbx
   14002d131:	jmp    0x111bad137
   14002d136:	add    al,BYTE PTR [rax]
   14002d138:	and    DWORD PTR [rax],eax
   14002d13a:	add    BYTE PTR [rax],al
   14002d13c:	push   rbx
   14002d13d:	jmp    0x12962d143
   14002d142:	add    DWORD PTR [rax],eax
   14002d144:	pop    rsp
   14002d145:	rol    DWORD PTR [rdx],1
   14002d147:	add    BYTE PTR [rcx],ah
   14002d149:	add    eax,0x74050002
   14002d14e:	(bad)  
   14002d14f:	add    BYTE PTR [rbx-0x17],dl
   14002d152:	add    DWORD PTR [rax],eax
   14002d154:	(bad)  
   14002d155:	jmp    0x1115ed15b
   14002d15a:	add    al,BYTE PTR [rax]
   14002d15c:	and    DWORD PTR [rip+0x34050002],eax        # 0x17407d164
   14002d162:	(bad)  
   14002d163:	add    BYTE PTR [rax],dh
   14002d165:	jmp    0x12955d16b
   14002d16a:	add    DWORD PTR [rax],eax
   14002d16c:	mov    eax,0x210002d1
   14002d171:	add    BYTE PTR [rax],al
   14002d173:	add    al,dl
   14002d175:	jmp    0x129f5d17b
   14002d17a:	add    DWORD PTR [rax],eax
   14002d17c:	mov    eax,0x210002d1
   14002d181:	add    BYTE PTR [rax],al
   14002d183:	add    bl,dh
   14002d185:	jmp    0x12a02d18b
   14002d18a:	add    DWORD PTR [rax],eax
   14002d18c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002d18d:	rol    DWORD PTR [rdx],1
   14002d18f:	add    BYTE PTR [rcx],ah
   14002d191:	add    eax,0x74050002
   14002d196:	(bad)  
   14002d197:	add    bl,dh
   14002d199:	jmp    0x12a02d19f
   14002d19e:	add    DWORD PTR [rax],eax
   14002d1a0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002d1a1:	rol    DWORD PTR [rdx],1
   14002d1a3:	add    BYTE PTR [rcx],ah
   14002d1a5:	add    eax,0x34050002
   14002d1aa:	(bad)  
   14002d1ab:	add    al,dl
   14002d1ad:	jmp    0x129f5d1b3
   14002d1b2:	add    DWORD PTR [rax],eax
   14002d1b4:	mov    eax,0x10002d1
   14002d1b9:	or     al,BYTE PTR [rax+rax*1]
   14002d1bc:	or     dl,BYTE PTR [rax+rcx*1+0x0]
   14002d1c0:	or     dh,BYTE PTR [rdx]
   14002d1c2:	(bad)  
   14002d1c3:	(bad)  
   14002d1c4:	and    DWORD PTR [rax],eax
   14002d1c6:	add    BYTE PTR [rax],al
   14002d1c8:	mov    al,0xea
   14002d1ca:	add    DWORD PTR [rax],eax
   14002d1cc:	shr    edx,cl
   14002d1ce:	add    DWORD PTR [rax],eax
   14002d1d0:	nop
   14002d1d1:	iret   
   14002d1d2:	add    al,BYTE PTR [rax]
   14002d1d4:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b407d1dc
   14002d1da:	(bad)  
   14002d1db:	add    BYTE PTR [rax-0x2cfffe16],dh
   14002d1e1:	(bad)  
   14002d1e2:	add    DWORD PTR [rax],eax
   14002d1e4:	nop
   14002d1e5:	iret   
   14002d1e6:	add    al,BYTE PTR [rax]
   14002d1e8:	and    DWORD PTR [rax],eax
   14002d1ea:	add    BYTE PTR [rax],al
   14002d1ec:	jo     0x14002d1d9
   14002d1ee:	add    DWORD PTR [rax],eax
   14002d1f0:	xchg   ebx,eax
   14002d1f1:	jmp    0x14002d1f4
   14002d1f3:	add    BYTE PTR [rax+0x210002cf],dl
   14002d1f9:	add    eax,0x74050002
   14002d1fe:	(bad)  
   14002d1ff:	add    BYTE PTR [rax-0x15],dh
   14002d202:	add    DWORD PTR [rax],eax
   14002d204:	xchg   ebx,eax
   14002d205:	jmp    0x14002d208
   14002d207:	add    BYTE PTR [rax+0x210002cf],dl
   14002d20d:	add    BYTE PTR [rax],al
   14002d20f:	add    al,dh
   14002d211:	jmp    0x14002d214
   14002d213:	add    BYTE PTR [rbx],dl
   14002d215:	in     al,dx
   14002d216:	add    DWORD PTR [rax],eax
   14002d218:	nop
   14002d219:	iret   
   14002d21a:	add    al,BYTE PTR [rax]
   14002d21c:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b407d224
   14002d222:	(bad)  
   14002d223:	add    al,dh
   14002d225:	jmp    0x14002d228
   14002d227:	add    BYTE PTR [rbx],dl
   14002d229:	in     al,dx
   14002d22a:	add    DWORD PTR [rax],eax
   14002d22c:	nop
   14002d22d:	iret   
   14002d22e:	add    al,BYTE PTR [rax]
   14002d230:	and    DWORD PTR [rax],eax
   14002d232:	add    BYTE PTR [rax],al
   14002d234:	movabs al,ds:0x900001ecc30001ec
   14002d23d:	iret   
   14002d23e:	add    al,BYTE PTR [rax]
   14002d240:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b407d248
   14002d246:	(bad)  
   14002d247:	add    BYTE PTR [rax-0x3cfffe14],ah
   14002d24d:	in     al,dx
   14002d24e:	add    DWORD PTR [rax],eax
   14002d250:	nop
   14002d251:	iret   
   14002d252:	add    al,BYTE PTR [rax]
   14002d254:	adc    DWORD PTR [rsi],eax
   14002d256:	add    al,BYTE PTR [rax]
   14002d258:	(bad)  
   14002d259:	xor    al,BYTE PTR [rdx]
   14002d25b:	xor    dh,dl
   14002d25d:	hlt    
   14002d25e:	add    DWORD PTR [rax],eax
   14002d260:	add    DWORD PTR [rax],eax
   14002d262:	add    BYTE PTR [rax],al
   14002d264:	addr32 out dx,eax
   14002d266:	add    DWORD PTR [rax],eax
   14002d268:	int    0xef
   14002d26a:	add    DWORD PTR [rax],eax
   14002d26c:	sahf   
   14002d26d:	clc    
   14002d26e:	add    DWORD PTR [rax],eax
   14002d270:	add    BYTE PTR [rax],al
   14002d272:	add    BYTE PTR [rax],al
   14002d274:	add    DWORD PTR [rsi],eax
   14002d276:	add    al,BYTE PTR [rax]
   14002d278:	(bad)  
   14002d279:	xor    al,BYTE PTR [rdx]
   14002d27b:	push   rax
   14002d27c:	or     DWORD PTR [rdx],ecx
   14002d27e:	add    al,0x0
   14002d280:	or     ah,BYTE PTR [rsi+rax*1+0x0]
   14002d284:	or     dh,BYTE PTR [rdx]
   14002d286:	(bad)  
   14002d287:	jo     0x14002d25f
   14002d289:	hlt    
   14002d28a:	add    DWORD PTR [rax],eax
   14002d28c:	add    DWORD PTR [rax],eax
   14002d28e:	add    BYTE PTR [rax],al
   14002d290:	push   0xfffffffffffffff0
   14002d292:	add    DWORD PTR [rax],eax
   14002d294:	test   al,0xf1
   14002d296:	add    DWORD PTR [rax],eax
   14002d298:	mov    bh,0xf8
   14002d29a:	add    DWORD PTR [rax],eax
   14002d29c:	test   al,0xf1
   14002d29e:	add    DWORD PTR [rax],eax
   14002d2a0:	or     DWORD PTR [rdi],edx
   14002d2a2:	(bad)  
   14002d2a3:	add    BYTE PTR [rdi],dl
   14002d2a5:	xor    al,0xd
   14002d2a7:	add    BYTE PTR [rdi],dl
   14002d2a9:	jb     0x14002d2be
   14002d2ab:	rcl    BYTE PTR [rcx],0x70
   14002d2ae:	adc    BYTE PTR [rax-0x2a],ah
   14002d2b1:	hlt    
   14002d2b2:	add    DWORD PTR [rax],eax
   14002d2b4:	add    DWORD PTR [rax],eax
   14002d2b6:	add    BYTE PTR [rax],al
   14002d2b8:	add    esi,ebx
   14002d2ba:	add    DWORD PTR [rax],eax
   14002d2bc:	sbb    eax,0xd30001f3
   14002d2c1:	clc    
   14002d2c2:	add    DWORD PTR [rax],eax
   14002d2c4:	sbb    eax,0x110001f3
   14002d2c9:	sbb    BYTE PTR [rip+0x14621800],al        # 0x15464eacf
   14002d2cf:	rcl    BYTE PTR [rdx],0x70
   14002d2d2:	adc    DWORD PTR [rax+0x10],esp
   14002d2d5:	xor    BYTE PTR [rax],al
   14002d2d7:	add    dh,dl
   14002d2d9:	hlt    
   14002d2da:	add    DWORD PTR [rax],eax
   14002d2dc:	add    DWORD PTR [rax],eax
   14002d2de:	add    BYTE PTR [rax],al
   14002d2e0:	pop    rdi
   14002d2e1:	repz add DWORD PTR [rax],eax
   14002d2e4:	xor    bl,0x1
   14002d2e7:	add    BYTE PTR [rdx],dl
   14002d2e9:	stc    
   14002d2ea:	add    DWORD PTR [rax],eax
   14002d2ec:	add    BYTE PTR [rax],al
   14002d2ee:	add    BYTE PTR [rax],al
   14002d2f0:	add    DWORD PTR [rdx+rax*1],ecx
   14002d2f3:	add    BYTE PTR [rcx+rax*1],cl
   14002d2f6:	adc    DWORD PTR [rax],eax
   14002d2f8:	or     DWORD PTR [rcx+rax*1],eax
   14002d2fb:	add    BYTE PTR [rdx+rax*2],al
   14002d2fe:	add    BYTE PTR [rax],al
   14002d300:	(bad)  
   14002d301:	hlt    
   14002d302:	add    DWORD PTR [rax],eax
   14002d304:	add    DWORD PTR [rax],eax
   14002d306:	add    BYTE PTR [rax],al
   14002d308:	push   rdi
   14002d309:	test   BYTE PTR [rcx],0x0
   14002d30c:	mov    dh,dh
   14002d30e:	add    DWORD PTR [rax],eax
   14002d310:	rex stc 
   14002d312:	add    DWORD PTR [rax],eax
   14002d314:	mov    dh,dh
   14002d316:	add    DWORD PTR [rax],eax
   14002d318:	add    DWORD PTR [rdx],ecx
   14002d31a:	add    al,0x0
   14002d31c:	or     dh,BYTE PTR [rax+rcx*1]
   14002d31f:	add    BYTE PTR [rdx],cl
   14002d321:	xor    al,BYTE PTR [rsi]
   14002d323:	jo     0x14002d325
   14002d325:	add    BYTE PTR [rax],al
   14002d327:	add    BYTE PTR [rax],al
   14002d329:	add    BYTE PTR [rax],al
   14002d32b:	add    BYTE PTR [rdx-0x12],dl
   14002d32e:	add    DWORD PTR [rax],eax
   14002d330:	add    BYTE PTR [rax],al
   14002d332:	add    BYTE PTR [rax],al
   14002d334:	rol    QWORD PTR [rdx],cl
	...
   14002d347:	add    BYTE PTR [rdx],al
   14002d349:	add    BYTE PTR [rax],al
   14002d34b:	add    BYTE PTR [rax-0x2d],ah
   14002d34e:	add    al,BYTE PTR [rax]
   14002d350:	mov    bl,dl
   14002d352:	add    al,BYTE PTR [rax]
	...
   14002d364:	xor    BYTE PTR [rax],dl
   14002d366:	add    eax,DWORD PTR [rax]
   14002d368:	add    BYTE PTR [rax],al
   14002d36a:	add    BYTE PTR [rax],al
   14002d36c:	(bad)  
   14002d36d:	(bad)  
   14002d36e:	(bad)  
   14002d36f:	inc    DWORD PTR [rax]
   14002d371:	add    BYTE PTR [rax],al
   14002d373:	add    BYTE PTR [rax],bl
   14002d375:	add    BYTE PTR [rax],al
   14002d377:	add    BYTE PTR [rax-0x12],bl
   14002d37a:	add    DWORD PTR [rax],eax
	...
   14002d38c:	pop    rax
   14002d38d:	adc    BYTE PTR [rbx],al
   14002d38f:	add    BYTE PTR [rax],al
   14002d391:	add    BYTE PTR [rax],al
   14002d393:	add    bh,bh
   14002d395:	(bad)  
   14002d396:	(bad)  
   14002d397:	inc    DWORD PTR [rax]
   14002d399:	add    BYTE PTR [rax],al
   14002d39b:	add    BYTE PTR [rax],bl
   14002d39d:	add    BYTE PTR [rax],al
   14002d39f:	add    BYTE PTR [rsi-0x12],bl
   14002d3a2:	add    DWORD PTR [rax],eax
	...
   14002d3ac:	loopne 0x14002d384
   14002d3ae:	add    al,BYTE PTR [rax]
	...
   14002d3b8:	test   BYTE PTR es:[rdx],0x0
   14002d3bc:	rol    BYTE PTR [rdx],1
   14002d3be:	add    al,BYTE PTR [rax]
   14002d3c0:	mov    ah,dl
   14002d3c2:	add    al,BYTE PTR [rax]
	...
   14002d3cc:	(bad)  
   14002d3cd:	inc    BYTE PTR [rdx]
   14002d3cf:	add    BYTE PTR [rax+0x0],bh
   14002d3d2:	add    al,BYTE PTR [rax]
   14002d3d4:	cwde   
   14002d3d5:	(bad)  
   14002d3d6:	add    al,BYTE PTR [rax]
	...
   14002d3e0:	rex.WR inc QWORD PTR [rdx]
   14002d3e3:	add    BYTE PTR [rax+0x10000201],cl
   14002d3e9:	(bad)  
   14002d3ea:	add    al,BYTE PTR [rax]
	...
   14002d3f4:	or     al,0x2
   14002d3f6:	add    eax,DWORD PTR [rax]
   14002d3f8:	add    BYTE PTR [rax],al
   14002d3fa:	add    al,BYTE PTR [rax]
	...
   14002d410:	fadd   QWORD PTR [rcx]
   14002d412:	add    eax,DWORD PTR [rax]
   14002d414:	add    BYTE PTR [rax],al
   14002d416:	add    BYTE PTR [rax],al
   14002d418:	mov    BYTE PTR [rcx],0x3
   14002d41b:	add    BYTE PTR [rax],al
   14002d41d:	add    BYTE PTR [rax],al
   14002d41f:	add    BYTE PTR [rsi+0x301],dh
   14002d425:	add    BYTE PTR [rax],al
   14002d427:	add    BYTE PTR [rcx+rax*1+0x3],bl
   14002d42e:	add    BYTE PTR [rax],al
   14002d430:	mov    BYTE PTR [rcx],al
   14002d432:	add    eax,DWORD PTR [rax]
   14002d434:	add    BYTE PTR [rax],al
   14002d436:	add    BYTE PTR [rax],al
   14002d438:	outs   dx,BYTE PTR ds:[rsi]
   14002d439:	add    DWORD PTR [rbx],eax
   14002d43b:	add    BYTE PTR [rax],al
   14002d43d:	add    BYTE PTR [rax],al
   14002d43f:	add    BYTE PTR [rdx+0x1],bl
   14002d442:	add    eax,DWORD PTR [rax]
   14002d444:	add    BYTE PTR [rax],al
   14002d446:	add    BYTE PTR [rax],al
   14002d448:	rex.RX add DWORD PTR [rbx],r8d
   14002d44b:	add    BYTE PTR [rax],al
   14002d44d:	add    BYTE PTR [rax],al
   14002d44f:	add    BYTE PTR [rax],ch
   14002d451:	add    DWORD PTR [rbx],eax
   14002d453:	add    BYTE PTR [rax],al
   14002d455:	add    BYTE PTR [rax],al
   14002d457:	add    BYTE PTR [rcx+rax*1],cl
   14002d45a:	add    eax,DWORD PTR [rax]
   14002d45c:	add    BYTE PTR [rax],al
   14002d45e:	add    BYTE PTR [rax],al
   14002d460:	clc    
   14002d461:	add    BYTE PTR [rbx],al
   14002d463:	add    BYTE PTR [rax],al
   14002d465:	add    BYTE PTR [rax],al
   14002d467:	add    ah,ah
   14002d469:	add    BYTE PTR [rbx],al
   14002d46b:	add    BYTE PTR [rax],al
   14002d46d:	add    BYTE PTR [rax],al
   14002d46f:	add    ah,bl
   14002d471:	add    BYTE PTR [rbx],al
   14002d473:	add    BYTE PTR [rax],al
   14002d475:	add    BYTE PTR [rax],al
   14002d477:	add    dl,dh
   14002d479:	add    DWORD PTR [rbx],eax
	...
   14002d487:	add    BYTE PTR [rdx],dh
   14002d489:	test   BYTE PTR [rdx],0x0
   14002d48c:	add    BYTE PTR [rax],al
   14002d48e:	add    BYTE PTR [rax],al
   14002d490:	jo     0x14002d488
   14002d492:	add    al,BYTE PTR [rax]
   14002d494:	add    BYTE PTR [rax],al
   14002d496:	add    BYTE PTR [rax],al
   14002d498:	mov    dh,dh
   14002d49a:	add    al,BYTE PTR [rax]
   14002d49c:	add    BYTE PTR [rax],al
   14002d49e:	add    BYTE PTR [rax],al
   14002d4a0:	mov    al,0xf6
   14002d4a2:	add    al,BYTE PTR [rax]
   14002d4a4:	add    BYTE PTR [rax],al
   14002d4a6:	add    BYTE PTR [rax],al
   14002d4a8:	lock test BYTE PTR [rdx],0x0
   14002d4ac:	add    BYTE PTR [rax],al
   14002d4ae:	add    BYTE PTR [rax],al
   14002d4b0:	and    bh,dh
   14002d4b2:	add    al,BYTE PTR [rax]
   14002d4b4:	add    BYTE PTR [rax],al
   14002d4b6:	add    BYTE PTR [rax],al
   14002d4b8:	test   DWORD PTR ds:[rdx],0x0
   14002d4bf:	add    BYTE PTR [rdx-0x9],ah
   14002d4c2:	add    al,BYTE PTR [rax]
   14002d4c4:	add    BYTE PTR [rax],al
   14002d4c6:	add    BYTE PTR [rax],al
   14002d4c8:	jle    0x14002d4c1
   14002d4ca:	add    al,BYTE PTR [rax]
   14002d4cc:	add    BYTE PTR [rax],al
   14002d4ce:	add    BYTE PTR [rax],al
   14002d4d0:	ret    0x2f7
   14002d4d3:	add    BYTE PTR [rax],al
   14002d4d5:	add    BYTE PTR [rax],al
   14002d4d7:	add    BYTE PTR [rax],al
   14002d4d9:	clc    
   14002d4da:	add    al,BYTE PTR [rax]
   14002d4dc:	add    BYTE PTR [rax],al
   14002d4de:	add    BYTE PTR [rax],al
   14002d4e0:	and    bh,al
   14002d4e2:	add    al,BYTE PTR [rax]
   14002d4e4:	add    BYTE PTR [rax],al
   14002d4e6:	add    BYTE PTR [rax],al
   14002d4e8:	push   0x2f8
   14002d4ed:	add    BYTE PTR [rax],al
   14002d4ef:	add    BYTE PTR [rax+0x2f8],ch
   14002d4f5:	add    BYTE PTR [rax],al
   14002d4f7:	add    dl,ch
   14002d4f9:	clc    
   14002d4fa:	add    al,BYTE PTR [rax]
   14002d4fc:	add    BYTE PTR [rax],al
   14002d4fe:	add    BYTE PTR [rax],al
   14002d500:	(bad)  
   14002d501:	stc    
   14002d502:	add    al,BYTE PTR [rax]
   14002d504:	add    BYTE PTR [rax],al
   14002d506:	add    BYTE PTR [rax],al
   14002d508:	push   rdx
   14002d509:	stc    
   14002d50a:	add    al,BYTE PTR [rax]
   14002d50c:	add    BYTE PTR [rax],al
   14002d50e:	add    BYTE PTR [rax],al
   14002d510:	ins    BYTE PTR es:[rdi],dx
   14002d511:	stc    
   14002d512:	add    al,BYTE PTR [rax]
   14002d514:	add    BYTE PTR [rax],al
   14002d516:	add    BYTE PTR [rax],al
   14002d518:	cwde   
   14002d519:	stc    
   14002d51a:	add    al,BYTE PTR [rax]
   14002d51c:	add    BYTE PTR [rax],al
   14002d51e:	add    BYTE PTR [rax],al
   14002d520:	fdivr  st,st(1)
   14002d522:	add    al,BYTE PTR [rax]
   14002d524:	add    BYTE PTR [rax],al
   14002d526:	add    BYTE PTR [rax],al
   14002d528:	and    dl,bh
   14002d52a:	add    al,BYTE PTR [rax]
   14002d52c:	add    BYTE PTR [rax],al
   14002d52e:	add    BYTE PTR [rax],al
   14002d530:	(bad)  
   14002d531:	cli    
   14002d532:	add    al,BYTE PTR [rax]
   14002d534:	add    BYTE PTR [rax],al
   14002d536:	add    BYTE PTR [rax],al
   14002d538:	mov    al,0xfa
   14002d53a:	add    al,BYTE PTR [rax]
   14002d53c:	add    BYTE PTR [rax],al
   14002d53e:	add    BYTE PTR [rax],al
   14002d540:	data16 sti 
   14002d542:	add    al,BYTE PTR [rax]
   14002d544:	add    BYTE PTR [rax],al
   14002d546:	add    BYTE PTR [rax],al
   14002d548:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002d549:	sti    
   14002d54a:	add    al,BYTE PTR [rax]
   14002d54c:	add    BYTE PTR [rax],al
   14002d54e:	add    BYTE PTR [rax],al
   14002d550:	out    dx,al
   14002d551:	sti    
   14002d552:	add    al,BYTE PTR [rax]
   14002d554:	add    BYTE PTR [rax],al
   14002d556:	add    BYTE PTR [rax],al
   14002d558:	rex.X cld 
   14002d55a:	add    al,BYTE PTR [rax]
   14002d55c:	add    BYTE PTR [rax],al
   14002d55e:	add    BYTE PTR [rax],al
   14002d560:	mov    bh,ah
   14002d562:	add    al,BYTE PTR [rax]
   14002d564:	add    BYTE PTR [rax],al
   14002d566:	add    BYTE PTR [rax],al
   14002d568:	cmp    ch,bh
   14002d56a:	add    al,BYTE PTR [rax]
   14002d56c:	add    BYTE PTR [rax],al
   14002d56e:	add    BYTE PTR [rax],al
   14002d570:	je     0x14002d56f
   14002d572:	add    al,BYTE PTR [rax]
   14002d574:	add    BYTE PTR [rax],al
   14002d576:	add    BYTE PTR [rax],al
   14002d578:	mov    dh,0xfd
   14002d57a:	add    al,BYTE PTR [rax]
   14002d57c:	add    BYTE PTR [rax],al
   14002d57e:	add    BYTE PTR [rax],al
   14002d580:	repnz std 
   14002d582:	add    al,BYTE PTR [rax]
   14002d584:	add    BYTE PTR [rax],al
   14002d586:	add    BYTE PTR [rax],al
   14002d588:	push   rax
   14002d589:	test   BYTE PTR [rdx],0x0
	...
   14002d598:	xchg   esi,eax
   14002d599:	inc    BYTE PTR [rdx]
   14002d59b:	add    BYTE PTR [rax],al
   14002d59d:	add    BYTE PTR [rax],al
   14002d59f:	add    BYTE PTR [rdx-0x2],bh
   14002d5a2:	add    al,BYTE PTR [rax]
   14002d5a4:	add    BYTE PTR [rax],al
   14002d5a6:	add    BYTE PTR [rax],al
   14002d5a8:	mov    eax,0x2fe
   14002d5ad:	add    BYTE PTR [rax],al
   14002d5af:	add    BYTE PTR [rsi+rdi*8+0x2],al
   14002d5b3:	add    BYTE PTR [rax],al
   14002d5b5:	add    BYTE PTR [rax],al
   14002d5b7:	add    BYTE PTR [rsi+rdi*8],dh
   14002d5ba:	add    al,BYTE PTR [rax]
   14002d5bc:	add    BYTE PTR [rax],al
   14002d5be:	add    BYTE PTR [rax],al
   14002d5c0:	sub    bh,dh
   14002d5c2:	add    al,BYTE PTR [rax]
   14002d5c4:	add    BYTE PTR [rax],al
   14002d5c6:	add    BYTE PTR [rax],al
   14002d5c8:	fdiv   st(6),st
   14002d5ca:	add    al,BYTE PTR [rax]
   14002d5cc:	add    BYTE PTR [rax],al
   14002d5ce:	add    BYTE PTR [rax],al
   14002d5d0:	out    dx,al
   14002d5d1:	inc    BYTE PTR [rdx]
   14002d5d3:	add    BYTE PTR [rax],al
   14002d5d5:	add    BYTE PTR [rax],al
   14002d5d7:	add    BYTE PTR [rdi+rdi*8],al
   14002d5da:	add    al,BYTE PTR [rax]
   14002d5dc:	add    BYTE PTR [rax],al
   14002d5de:	add    BYTE PTR [rax],al
   14002d5e0:	adc    bh,bh
   14002d5e2:	add    al,BYTE PTR [rax]
   14002d5e4:	add    BYTE PTR [rax],al
   14002d5e6:	add    BYTE PTR [rax],al
   14002d5e8:	sbb    al,0xff
   14002d5ea:	add    al,BYTE PTR [rax]
   14002d5ec:	add    BYTE PTR [rax],al
   14002d5ee:	add    BYTE PTR [rax],al
   14002d5f0:	inc    DWORD PTR es:[rdx]
   14002d5f3:	add    BYTE PTR [rax],al
   14002d5f5:	add    BYTE PTR [rax],al
   14002d5f7:	add    BYTE PTR [rdx],dh
   14002d5f9:	inc    DWORD PTR [rdx]
   14002d5fb:	add    BYTE PTR [rax],al
   14002d5fd:	add    BYTE PTR [rax],al
   14002d5ff:	add    BYTE PTR [rdx],bh
   14002d601:	inc    DWORD PTR [rdx]
   14002d603:	add    BYTE PTR [rax],al
   14002d605:	add    BYTE PTR [rax],al
   14002d607:	add    BYTE PTR [rdi+rdi*8+0x2],al
   14002d60b:	add    BYTE PTR [rax],al
   14002d60d:	add    BYTE PTR [rax],al
   14002d60f:	add    BYTE PTR [rax-0x1],bl
   14002d612:	add    al,BYTE PTR [rax]
   14002d614:	add    BYTE PTR [rax],al
   14002d616:	add    BYTE PTR [rax],al
   14002d618:	jo     0x14002d619
   14002d61a:	add    al,BYTE PTR [rax]
   14002d61c:	add    BYTE PTR [rax],al
   14002d61e:	add    BYTE PTR [rax],al
   14002d620:	jp     0x14002d621
   14002d622:	add    al,BYTE PTR [rax]
   14002d624:	add    BYTE PTR [rax],al
   14002d626:	add    BYTE PTR [rax],al
   14002d628:	mov    bh,bh
   14002d62a:	add    al,BYTE PTR [rax]
   14002d62c:	add    BYTE PTR [rax],al
   14002d62e:	add    BYTE PTR [rax],al
   14002d630:	(bad)  
   14002d631:	inc    DWORD PTR [rdx]
   14002d633:	add    BYTE PTR [rax],al
   14002d635:	add    BYTE PTR [rax],al
   14002d637:	add    BYTE PTR [rdx+0x2ff],ah
   14002d63d:	add    BYTE PTR [rax],al
   14002d63f:	add    BYTE PTR [rdi+rdi*8+0x2],ch
   14002d646:	add    BYTE PTR [rax],al
   14002d648:	mov    esi,0x2ff
   14002d64d:	add    BYTE PTR [rax],al
   14002d64f:	add    ah,cl
   14002d651:	inc    DWORD PTR [rdx]
   14002d653:	add    BYTE PTR [rax],al
   14002d655:	add    BYTE PTR [rax],al
   14002d657:	add    ah,bl
   14002d659:	inc    DWORD PTR [rdx]
   14002d65b:	add    BYTE PTR [rax],al
   14002d65d:	add    BYTE PTR [rax],al
   14002d65f:	add    dl,ch
   14002d661:	inc    DWORD PTR [rdx]
   14002d663:	add    BYTE PTR [rax],al
   14002d665:	add    BYTE PTR [rax],al
   14002d667:	add    dl,dh
   14002d669:	inc    DWORD PTR [rdx]
   14002d66b:	add    BYTE PTR [rax],al
   14002d66d:	add    BYTE PTR [rax],al
   14002d66f:	add    ah,bh
   14002d671:	inc    DWORD PTR [rdx]
   14002d673:	add    BYTE PTR [rax],al
   14002d675:	add    BYTE PTR [rax],al
   14002d677:	add    BYTE PTR [rax+rax*1],al
   14002d67a:	add    eax,DWORD PTR [rax]
   14002d67c:	add    BYTE PTR [rax],al
   14002d67e:	add    BYTE PTR [rax],al
   14002d680:	adc    BYTE PTR [rax],al
   14002d682:	add    eax,DWORD PTR [rax]
   14002d684:	add    BYTE PTR [rax],al
   14002d686:	add    BYTE PTR [rax],al
   14002d688:	sbb    al,0x0
   14002d68a:	add    eax,DWORD PTR [rax]
   14002d68c:	add    BYTE PTR [rax],al
   14002d68e:	add    BYTE PTR [rax],al
   14002d690:	sub    al,BYTE PTR [rax]
   14002d692:	add    eax,DWORD PTR [rax]
   14002d694:	add    BYTE PTR [rax],al
   14002d696:	add    BYTE PTR [rax],al
   14002d698:	add    BYTE PTR [rbx],al
   14002d69b:	add    BYTE PTR [rax],al
   14002d69d:	add    BYTE PTR [rax],al
   14002d69f:	add    BYTE PTR [rax+rax*1+0x3],dl
   14002d6a3:	add    BYTE PTR [rax],al
   14002d6a5:	add    BYTE PTR [rax],al
   14002d6a7:	add    BYTE PTR [rax+0x0],ah
   14002d6aa:	add    eax,DWORD PTR [rax]
   14002d6ac:	add    BYTE PTR [rax],al
   14002d6ae:	add    BYTE PTR [rax],al
   14002d6b0:	push   0x0
   14002d6b2:	add    eax,DWORD PTR [rax]
   14002d6b4:	add    BYTE PTR [rax],al
   14002d6b6:	add    BYTE PTR [rax],al
   14002d6b8:	jl     0x14002d6ba
   14002d6ba:	add    eax,DWORD PTR [rax]
   14002d6bc:	add    BYTE PTR [rax],al
   14002d6be:	add    BYTE PTR [rax],al
   14002d6c0:	inc    BYTE PTR fs:[rdx]
   14002d6c3:	add    BYTE PTR [rax],al
   14002d6c5:	add    BYTE PTR [rax],al
   14002d6c7:	add    dh,al
   14002d6c9:	add    BYTE PTR [rbx],al
   14002d6cb:	add    BYTE PTR [rax],al
   14002d6cd:	add    BYTE PTR [rax],al
   14002d6cf:	add    BYTE PTR [rax+0x300],dl
	...
   14002d6dd:	add    BYTE PTR [rax],al
   14002d6df:	add    BYTE PTR [rsi-0x16],ah
   14002d6e2:	add    al,BYTE PTR [rax]
   14002d6e4:	add    BYTE PTR [rax],al
   14002d6e6:	add    BYTE PTR [rax],al
   14002d6e8:	mov    dh,0xea
   14002d6ea:	add    al,BYTE PTR [rax]
   14002d6ec:	add    BYTE PTR [rax],al
   14002d6ee:	add    BYTE PTR [rax],al
   14002d6f0:	call   0x14002d9df
   14002d6f5:	add    BYTE PTR [rax],al
   14002d6f7:	add    BYTE PTR [rax],ah
   14002d6f9:	jmp    0x14002d6fd
   14002d6fb:	add    BYTE PTR [rax],al
   14002d6fd:	add    BYTE PTR [rax],al
   14002d6ff:	add    BYTE PTR [rdx-0x15],cl
   14002d702:	add    al,BYTE PTR [rax]
   14002d704:	add    BYTE PTR [rax],al
   14002d706:	add    BYTE PTR [rax],al
   14002d708:	mov    ch,bl
   14002d70a:	add    al,BYTE PTR [rax]
   14002d70c:	add    BYTE PTR [rax],al
   14002d70e:	add    BYTE PTR [rax],al
   14002d710:	int3   
   14002d711:	jmp    0x14002d715
   14002d713:	add    BYTE PTR [rax],al
   14002d715:	add    BYTE PTR [rax],al
   14002d717:	add    BYTE PTR [rsi],al
   14002d719:	in     al,dx
   14002d71a:	add    al,BYTE PTR [rax]
   14002d71c:	add    BYTE PTR [rax],al
   14002d71e:	add    BYTE PTR [rax],al
   14002d720:	ds in  al,dx
   14002d722:	add    al,BYTE PTR [rax]
   14002d724:	add    BYTE PTR [rax],al
   14002d726:	add    BYTE PTR [rax],al
   14002d728:	js     0x14002d716
   14002d72a:	add    al,BYTE PTR [rax]
   14002d72c:	add    BYTE PTR [rax],al
   14002d72e:	add    BYTE PTR [rax],al
   14002d730:	scas   al,BYTE PTR es:[rdi]
   14002d731:	in     al,dx
   14002d732:	add    al,BYTE PTR [rax]
   14002d734:	add    BYTE PTR [rax],al
   14002d736:	add    BYTE PTR [rax],al
   14002d738:	fsubr  st,st(4)
   14002d73a:	add    al,BYTE PTR [rax]
   14002d73c:	add    BYTE PTR [rax],al
   14002d73e:	add    BYTE PTR [rax],al
   14002d740:	clc    
   14002d741:	in     al,dx
   14002d742:	add    al,BYTE PTR [rax]
   14002d744:	add    BYTE PTR [rax],al
   14002d746:	add    BYTE PTR [rax],al
   14002d748:	push   rdx
   14002d749:	in     eax,dx
   14002d74a:	add    al,BYTE PTR [rax]
   14002d74c:	add    BYTE PTR [rax],al
   14002d74e:	add    BYTE PTR [rax],al
   14002d750:	test   ch,ch
   14002d752:	add    al,BYTE PTR [rax]
   14002d754:	add    BYTE PTR [rax],al
   14002d756:	add    BYTE PTR [rax],al
   14002d758:	lods   al,BYTE PTR ds:[rsi]
   14002d759:	in     eax,dx
   14002d75a:	add    al,BYTE PTR [rax]
   14002d75c:	add    BYTE PTR [rax],al
   14002d75e:	add    BYTE PTR [rax],al
   14002d760:	and    dh,ch
   14002d762:	add    al,BYTE PTR [rax]
   14002d764:	add    BYTE PTR [rax],al
   14002d766:	add    BYTE PTR [rax],al
   14002d768:	xor    al,0xee
   14002d76a:	add    al,BYTE PTR [rax]
   14002d76c:	add    BYTE PTR [rax],al
   14002d76e:	add    BYTE PTR [rax],al
   14002d770:	push   rax
   14002d771:	out    dx,al
   14002d772:	add    al,BYTE PTR [rax]
   14002d774:	add    BYTE PTR [rax],al
   14002d776:	add    BYTE PTR [rax],al
   14002d778:	(bad)  
   14002d779:	out    dx,al
   14002d77a:	add    al,BYTE PTR [rax]
   14002d77c:	add    BYTE PTR [rax],al
   14002d77e:	add    BYTE PTR [rax],al
   14002d780:	movabs al,ds:0xe4000000000002ee
   14002d789:	out    dx,al
   14002d78a:	add    al,BYTE PTR [rax]
   14002d78c:	add    BYTE PTR [rax],al
   14002d78e:	add    BYTE PTR [rax],al
   14002d790:	push   rsp
   14002d791:	out    dx,eax
   14002d792:	add    al,BYTE PTR [rax]
   14002d794:	add    BYTE PTR [rax],al
   14002d796:	add    BYTE PTR [rax],al
   14002d798:	(bad)  
   14002d799:	out    dx,eax
   14002d79a:	add    al,BYTE PTR [rax]
   14002d79c:	add    BYTE PTR [rax],al
   14002d79e:	add    BYTE PTR [rax],al
   14002d7a0:	lods   al,BYTE PTR ds:[rsi]
   14002d7a1:	out    dx,eax
   14002d7a2:	add    al,BYTE PTR [rax]
   14002d7a4:	add    BYTE PTR [rax],al
   14002d7a6:	add    BYTE PTR [rax],al
   14002d7a8:	(bad)  
   14002d7a9:	out    dx,eax
   14002d7aa:	add    al,BYTE PTR [rax]
   14002d7ac:	add    BYTE PTR [rax],al
   14002d7ae:	add    BYTE PTR [rax],al
   14002d7b0:	cmp    dh,al
   14002d7b2:	add    al,BYTE PTR [rax]
   14002d7b4:	add    BYTE PTR [rax],al
   14002d7b6:	add    BYTE PTR [rax],al
   14002d7b8:	lock add al,BYTE PTR fs:[rax]
   14002d7bc:	add    BYTE PTR [rax],al
   14002d7be:	add    BYTE PTR [rax],al
   14002d7c0:	test   al,dh
   14002d7c2:	add    al,BYTE PTR [rax]
   14002d7c4:	add    BYTE PTR [rax],al
   14002d7c6:	add    BYTE PTR [rax],al
   14002d7c8:	sahf   
   14002d7c9:	lock add al,BYTE PTR [rax]
   14002d7cc:	add    BYTE PTR [rax],al
   14002d7ce:	add    BYTE PTR [rax],al
   14002d7d0:	mov    edx,0x2f0
   14002d7d5:	add    BYTE PTR [rax],al
   14002d7d7:	add    dl,ch
   14002d7d9:	lock add al,BYTE PTR [rax]
   14002d7dc:	add    BYTE PTR [rax],al
   14002d7de:	add    BYTE PTR [rax],al
   14002d7e0:	(bad)  
   14002d7e1:	icebp  
   14002d7e2:	add    al,BYTE PTR [rax]
   14002d7e4:	add    BYTE PTR [rax],al
   14002d7e6:	add    BYTE PTR [rax],al
   14002d7e8:	pop    rax
   14002d7e9:	icebp  
   14002d7ea:	add    al,BYTE PTR [rax]
   14002d7ec:	add    BYTE PTR [rax],al
   14002d7ee:	add    BYTE PTR [rax],al
   14002d7f0:	cmp    al,0xea
   14002d7f2:	add    al,BYTE PTR [rax]
   14002d7f4:	add    BYTE PTR [rax],al
   14002d7f6:	add    BYTE PTR [rax],al
   14002d7f8:	stos   BYTE PTR es:[rdi],al
   14002d7f9:	icebp  
   14002d7fa:	add    al,BYTE PTR [rax]
   14002d7fc:	add    BYTE PTR [rax],al
   14002d7fe:	add    BYTE PTR [rax],al
   14002d800:	call   0x14002daf6
   14002d805:	add    BYTE PTR [rax],al
   14002d807:	add    BYTE PTR [rax],cl
   14002d809:	repnz add al,BYTE PTR [rax]
   14002d80c:	add    BYTE PTR [rax],al
   14002d80e:	add    BYTE PTR [rax],al
   14002d810:	xor    dh,dl
   14002d812:	add    al,BYTE PTR [rax]
   14002d814:	add    BYTE PTR [rax],al
   14002d816:	add    BYTE PTR [rax],al
   14002d818:	pop    rax
   14002d819:	repnz add al,BYTE PTR [rax]
   14002d81c:	add    BYTE PTR [rax],al
   14002d81e:	add    BYTE PTR [rax],al
   14002d820:	xchg   edx,eax
   14002d821:	repnz add al,BYTE PTR [rax]
   14002d824:	add    BYTE PTR [rax],al
   14002d826:	add    BYTE PTR [rax],al
   14002d828:	(bad)  
   14002d829:	repnz add al,BYTE PTR [rax]
   14002d82c:	add    BYTE PTR [rax],al
   14002d82e:	add    BYTE PTR [rax],al
   14002d830:	repnz repnz add al,BYTE PTR [rax]
   14002d834:	add    BYTE PTR [rax],al
   14002d836:	add    BYTE PTR [rax],al
   14002d838:	sbb    bl,dh
   14002d83a:	add    al,BYTE PTR [rax]
   14002d83c:	add    BYTE PTR [rax],al
   14002d83e:	add    BYTE PTR [rax],al
   14002d840:	cmp    bl,dh
   14002d842:	add    al,BYTE PTR [rax]
   14002d844:	add    BYTE PTR [rax],al
   14002d846:	add    BYTE PTR [rax],al
   14002d848:	pop    rax
   14002d849:	repz add al,BYTE PTR [rax]
   14002d84c:	add    BYTE PTR [rax],al
   14002d84e:	add    BYTE PTR [rax],al
   14002d850:	jl     0x14002d845
   14002d852:	add    al,BYTE PTR [rax]
   14002d854:	add    BYTE PTR [rax],al
   14002d856:	add    BYTE PTR [rax],al
   14002d858:	test   al,0xf3
   14002d85a:	add    al,BYTE PTR [rax]
   14002d85c:	add    BYTE PTR [rax],al
   14002d85e:	add    BYTE PTR [rax],al
   14002d860:	loopne 0x14002d855
   14002d862:	add    al,BYTE PTR [rax]
   14002d864:	add    BYTE PTR [rax],al
   14002d866:	add    BYTE PTR [rax],al
   14002d868:	add    ah,dh
   14002d86a:	add    al,BYTE PTR [rax]
   14002d86c:	add    BYTE PTR [rax],al
   14002d86e:	add    BYTE PTR [rax],al
   14002d870:	sbb    dh,ah
   14002d872:	add    al,BYTE PTR [rax]
   14002d874:	add    BYTE PTR [rax],al
   14002d876:	add    BYTE PTR [rax],al
   14002d878:	xor    al,0xf4
   14002d87a:	add    al,BYTE PTR [rax]
   14002d87c:	add    BYTE PTR [rax],al
   14002d87e:	add    BYTE PTR [rax],al
   14002d880:	rex.WRX hlt 
   14002d882:	add    al,BYTE PTR [rax]
   14002d884:	add    BYTE PTR [rax],al
   14002d886:	add    BYTE PTR [rax],al
   14002d888:	pop    rsi
   14002d889:	hlt    
   14002d88a:	add    al,BYTE PTR [rax]
   14002d88c:	add    BYTE PTR [rax],al
   14002d88e:	add    BYTE PTR [rax],al
   14002d890:	jbe    0x14002d886
   14002d892:	add    al,BYTE PTR [rax]
   14002d894:	add    BYTE PTR [rax],al
   14002d896:	add    BYTE PTR [rax],al
   14002d898:	xchg   ah,dh
   14002d89a:	add    al,BYTE PTR [rax]
   14002d89c:	add    BYTE PTR [rax],al
   14002d89e:	add    BYTE PTR [rax],al
   14002d8a0:	mov    dl,0xf4
   14002d8a2:	add    al,BYTE PTR [rax]
   14002d8a4:	add    BYTE PTR [rax],al
   14002d8a6:	add    BYTE PTR [rax],al
   14002d8a8:	(bad)  
   14002d8a9:	hlt    
   14002d8aa:	add    al,BYTE PTR [rax]
   14002d8ac:	add    BYTE PTR [rax],al
   14002d8ae:	add    BYTE PTR [rax],al
   14002d8b0:	repnz hlt 
   14002d8b2:	add    al,BYTE PTR [rax]
   14002d8b4:	add    BYTE PTR [rax],al
   14002d8b6:	add    BYTE PTR [rax],al
   14002d8b8:	or     al,0xf5
   14002d8ba:	add    al,BYTE PTR [rax]
   14002d8bc:	add    BYTE PTR [rax],al
   14002d8be:	add    BYTE PTR [rax],al
   14002d8c0:	xor    al,0xf5
   14002d8c2:	add    al,BYTE PTR [rax]
   14002d8c4:	add    BYTE PTR [rax],al
   14002d8c6:	add    BYTE PTR [rax],al
   14002d8c8:	pop    rax
   14002d8c9:	cmc    
   14002d8ca:	add    al,BYTE PTR [rax]
   14002d8cc:	add    BYTE PTR [rax],al
   14002d8ce:	add    BYTE PTR [rax],al
   14002d8d0:	jle    0x14002d8c7
   14002d8d2:	add    al,BYTE PTR [rax]
   14002d8d4:	add    BYTE PTR [rax],al
   14002d8d6:	add    BYTE PTR [rax],al
   14002d8d8:	(bad)  
   14002d8d9:	cmc    
   14002d8da:	add    al,BYTE PTR [rax]
   14002d8dc:	add    BYTE PTR [rax],al
   14002d8de:	add    BYTE PTR [rax],al
   14002d8e0:	mov    esp,0x2f5
   14002d8e5:	add    BYTE PTR [rax],al
   14002d8e7:	add    dl,ch
   14002d8e9:	cmc    
   14002d8ea:	add    al,BYTE PTR [rax]
   14002d8ec:	add    BYTE PTR [rax],al
   14002d8ee:	add    BYTE PTR [rax],al
   14002d8f0:	add    al,0xf6
   14002d8f2:	add    al,BYTE PTR [rax]
   14002d8f4:	add    BYTE PTR [rax],al
   14002d8f6:	add    BYTE PTR [rax],al
   14002d8f8:	and    ch,dl
   14002d8fa:	add    al,BYTE PTR [rax]
   14002d8fc:	add    BYTE PTR [rax],al
   14002d8fe:	add    BYTE PTR [rax],al
   14002d900:	or     dl,ch
   14002d902:	add    al,BYTE PTR [rax]
   14002d904:	add    BYTE PTR [rax],al
   14002d906:	add    BYTE PTR [rax],al
   14002d908:	fsubr  st,st(1)
   14002d90a:	add    al,BYTE PTR [rax]
   14002d90c:	add    BYTE PTR [rax],al
   14002d90e:	add    BYTE PTR [rax],al
   14002d910:	mov    ah,0xe9
   14002d912:	add    al,BYTE PTR [rax]
   14002d914:	add    BYTE PTR [rax],al
   14002d916:	add    BYTE PTR [rax],al
   14002d918:	mov    ecx,gs
   14002d91a:	add    al,BYTE PTR [rax]
   14002d91c:	add    BYTE PTR [rax],al
   14002d91e:	add    BYTE PTR [rax],al
   14002d920:	push   rsp
   14002d921:	jmp    0x14002d928
   14002d926:	add    BYTE PTR [rax],al
   14002d928:	xor    cl,ch
   14002d92a:	add    al,BYTE PTR [rax]
   14002d92c:	add    BYTE PTR [rax],al
   14002d92e:	add    BYTE PTR [rax],al
   14002d930:	or     al,0xe9
   14002d932:	add    al,BYTE PTR [rax]
   14002d934:	add    BYTE PTR [rax],al
   14002d936:	add    BYTE PTR [rax],al
   14002d938:	in     al,0xe8
   14002d93a:	add    al,BYTE PTR [rax]
   14002d93c:	add    BYTE PTR [rax],al
   14002d93e:	add    BYTE PTR [rax],al
   14002d940:	test   al,0xe8
   14002d942:	add    al,BYTE PTR [rax]
   14002d944:	add    BYTE PTR [rax],al
   14002d946:	add    BYTE PTR [rax],al
   14002d948:	(bad)  
   14002d949:	call   0x14002d950
   14002d94e:	add    BYTE PTR [rax],al
   14002d950:	rex.X call 0x14002d958
   14002d956:	add    BYTE PTR [rax],al
   14002d958:	and    ch,al
   14002d95a:	add    al,BYTE PTR [rax]
   14002d95c:	add    BYTE PTR [rax],al
   14002d95e:	add    BYTE PTR [rax],al
   14002d960:	or     al,ch
   14002d962:	add    al,BYTE PTR [rax]
   14002d964:	add    BYTE PTR [rax],al
   14002d966:	add    BYTE PTR [rax],al
   14002d968:	hlt    
   14002d969:	out    0x2,eax
   14002d96b:	add    BYTE PTR [rax],al
   14002d96d:	add    BYTE PTR [rax],al
   14002d96f:	add    BYTE PTR [rdi+riz*8+0x2],dh
   14002d976:	add    BYTE PTR [rax],al
   14002d978:	xchg   edx,eax
   14002d979:	out    0x2,eax
   14002d97b:	add    BYTE PTR [rax],al
   14002d97d:	add    BYTE PTR [rax],al
   14002d97f:	add    BYTE PTR [rsi-0x19],ah
   14002d982:	add    al,BYTE PTR [rax]
   14002d984:	add    BYTE PTR [rax],al
   14002d986:	add    BYTE PTR [rax],al
   14002d988:	rex.X out 0x2,eax
   14002d98b:	add    BYTE PTR [rax],al
   14002d98d:	add    BYTE PTR [rax],al
   14002d98f:	add    BYTE PTR [rsi],bl
   14002d991:	out    0x2,eax
   14002d993:	add    BYTE PTR [rax],al
   14002d995:	add    BYTE PTR [rax],al
   14002d997:	add    dl,bl
   14002d999:	out    0x2,al
   14002d99b:	add    BYTE PTR [rax],al
   14002d99d:	add    BYTE PTR [rax],al
   14002d99f:	add    BYTE PTR [rax+0x2e6],dh
   14002d9a5:	add    BYTE PTR [rax],al
   14002d9a7:	add    BYTE PTR [rdx+0x2e6],bl
   14002d9ad:	add    BYTE PTR [rax],al
   14002d9af:	add    BYTE PTR [rdx-0x1a],ch
   14002d9b2:	add    al,BYTE PTR [rax]
   14002d9b4:	add    BYTE PTR [rax],al
   14002d9b6:	add    BYTE PTR [rax],al
   14002d9b8:	rex.X out 0x2,al
   14002d9bb:	add    BYTE PTR [rax],al
   14002d9bd:	add    BYTE PTR [rax],al
   14002d9bf:	add    BYTE PTR [rax],ch
   14002d9c1:	out    0x2,al
   14002d9c3:	add    BYTE PTR [rax],al
   14002d9c5:	add    BYTE PTR [rax],al
   14002d9c7:	add    BYTE PTR [rdx],cl
   14002d9c9:	out    0x2,al
   14002d9cb:	add    BYTE PTR [rax],al
   14002d9cd:	add    BYTE PTR [rax],al
   14002d9cf:	add    al,dl
   14002d9d1:	in     eax,0x2
   14002d9d3:	add    BYTE PTR [rax],al
   14002d9d5:	add    BYTE PTR [rax],al
   14002d9d7:	add    BYTE PTR [rax+0x2e5],dh
   14002d9dd:	add    BYTE PTR [rax],al
   14002d9df:	add    BYTE PTR [rdx+0x2e5],dl
   14002d9e5:	add    BYTE PTR [rax],al
   14002d9e7:	add    BYTE PTR [rdx-0x1b],bh
   14002d9ea:	add    al,BYTE PTR [rax]
   14002d9ec:	add    BYTE PTR [rax],al
   14002d9ee:	add    BYTE PTR [rax],al
   14002d9f0:	pop    rax
   14002d9f1:	in     eax,0x2
   14002d9f3:	add    BYTE PTR [rax],al
   14002d9f5:	add    BYTE PTR [rax],al
   14002d9f7:	add    BYTE PTR [rdx],bl
   14002d9f9:	in     eax,0x2
   14002d9fb:	add    BYTE PTR [rax],al
   14002d9fd:	add    BYTE PTR [rax],al
   14002d9ff:	add    ah,ch
   14002da01:	in     al,0x2
   14002da03:	add    BYTE PTR [rax],al
   14002da05:	add    BYTE PTR [rax],al
   14002da07:	add    BYTE PTR [rsp+riz*8+0x2],cl
   14002da0e:	add    BYTE PTR [rax],al
   14002da10:	data16 in al,0x2
   14002da13:	add    BYTE PTR [rax],al
   14002da15:	add    BYTE PTR [rax],al
   14002da17:	add    BYTE PTR [rdx-0x1c],dl
   14002da1a:	add    al,BYTE PTR [rax]
   14002da1c:	add    BYTE PTR [rax],al
   14002da1e:	add    BYTE PTR [rax],al
   14002da20:	es in  al,0x2
   14002da23:	add    BYTE PTR [rax],al
   14002da25:	add    BYTE PTR [rax],al
   14002da27:	add    dh,dh
   14002da29:	jrcxz  0x14002da2d
   14002da2b:	add    BYTE PTR [rax],al
   14002da2d:	add    BYTE PTR [rax],al
   14002da2f:	add    al,bl
   14002da31:	jrcxz  0x14002da35
   14002da33:	add    BYTE PTR [rax],al
   14002da35:	add    BYTE PTR [rax],al
   14002da37:	add    BYTE PTR [rsi+0x2e3],dh
   14002da3d:	add    BYTE PTR [rax],al
   14002da3f:	add    BYTE PTR [rsi-0x1d],ch
   14002da42:	add    al,BYTE PTR [rax]
   14002da44:	add    BYTE PTR [rax],al
   14002da46:	add    BYTE PTR [rax],al
   14002da48:	rex.WX jrcxz 0x14002da4d
   14002da4b:	add    BYTE PTR [rax],al
   14002da4d:	add    BYTE PTR [rax],al
   14002da4f:	add    BYTE PTR [rbx+riz*8],ch
   14002da52:	add    al,BYTE PTR [rax]
   14002da54:	add    BYTE PTR [rax],al
   14002da56:	add    BYTE PTR [rax],al
   14002da58:	or     ah,bl
   14002da5a:	add    al,BYTE PTR [rax]
   14002da5c:	add    BYTE PTR [rax],al
   14002da5e:	add    BYTE PTR [rax],al
   14002da60:	out    0xe2,al
   14002da62:	add    al,BYTE PTR [rax]
   14002da64:	add    BYTE PTR [rax],al
   14002da66:	add    BYTE PTR [rax],al
   14002da68:	ret    0x2e2
   14002da6b:	add    BYTE PTR [rax],al
   14002da6d:	add    BYTE PTR [rax],al
   14002da6f:	add    BYTE PTR [rax+0x2e2],dl
   14002da75:	add    BYTE PTR [rax],al
   14002da77:	add    BYTE PTR [rdx+riz*8+0x2],bl
   14002da7b:	add    BYTE PTR [rax],al
   14002da7d:	add    BYTE PTR [rax],al
   14002da7f:	add    BYTE PTR [rax],dh
   14002da81:	loop   0x14002da85
   14002da83:	add    BYTE PTR [rax],al
   14002da85:	add    BYTE PTR [rax],al
   14002da87:	add    BYTE PTR [rax],cl
   14002da89:	loop   0x14002da8d
   14002da8b:	add    BYTE PTR [rax],al
   14002da8d:	add    BYTE PTR [rax],al
   14002da8f:	add    dl,dl
   14002da91:	loope  0x14002da95
   14002da93:	add    BYTE PTR [rax],al
   14002da95:	add    BYTE PTR [rax],al
   14002da97:	add    BYTE PTR [rcx+riz*8+0x2],ch
   14002da9e:	add    BYTE PTR [rax],al
   14002daa0:	mov    fs,ecx
   14002daa2:	add    al,BYTE PTR [rax]
   14002daa4:	add    BYTE PTR [rax],al
   14002daa6:	add    BYTE PTR [rax],al
   14002daa8:	(bad)  
   14002daaa:	add    al,BYTE PTR [rax]
   14002daac:	add    BYTE PTR [rax],al
   14002daae:	add    BYTE PTR [rax],al
   14002dab0:	sub    ah,cl
   14002dab2:	add    al,BYTE PTR [rax]
   14002dab4:	add    BYTE PTR [rax],al
   14002dab6:	add    BYTE PTR [rax],al
   14002dab8:	(bad)  
   14002dab9:	loopne 0x14002dabd
   14002dabb:	add    BYTE PTR [rax],al
   14002dabd:	add    BYTE PTR [rax],al
   14002dabf:	add    BYTE PTR [rsi+0x2e0],al
   14002dac5:	add    BYTE PTR [rax],al
   14002dac7:	add    BYTE PTR [rdx-0x20],dl
   14002daca:	add    al,BYTE PTR [rax]
   14002dacc:	add    BYTE PTR [rax],al
   14002dace:	add    BYTE PTR [rax],al
   14002dad0:	sub    ah,al
   14002dad2:	add    al,BYTE PTR [rax]
   14002dad4:	add    BYTE PTR [rax],al
   14002dad6:	add    BYTE PTR [rax],al
   14002dad8:	movabs ds:0x7a000000000002df,al
   14002dae1:	fild   WORD PTR [rdx]
   14002dae3:	add    BYTE PTR [rax],al
   14002dae5:	add    BYTE PTR [rax],al
   14002dae7:	add    BYTE PTR [rsi-0x21],cl
   14002daea:	add    al,BYTE PTR [rax]
   14002daec:	add    BYTE PTR [rax],al
   14002daee:	add    BYTE PTR [rax],al
   14002daf0:	fild   WORD PTR es:[rdx]
   14002daf3:	add    BYTE PTR [rax],al
   14002daf5:	add    BYTE PTR [rax],al
   14002daf7:	add    BYTE PTR [rsi],al
   14002daf9:	fild   WORD PTR [rdx]
   14002dafb:	add    BYTE PTR [rax],al
   14002dafd:	add    BYTE PTR [rax],al
   14002daff:	add    dl,ch
   14002db01:	fiadd  WORD PTR [rdx]
   14002db03:	add    BYTE PTR [rax],al
   14002db05:	add    BYTE PTR [rax],al
   14002db07:	add    al,dl
   14002db09:	fiadd  WORD PTR [rdx]
   14002db0b:	add    BYTE PTR [rax],al
   14002db0d:	add    BYTE PTR [rax],al
   14002db0f:	add    BYTE PTR [rdx+0x2de],dh
   14002db15:	add    BYTE PTR [rax],al
   14002db17:	add    BYTE PTR [rdx+0x2de],bl
   14002db1d:	add    BYTE PTR [rax],al
   14002db1f:	add    BYTE PTR [rsi-0x22],bh
   14002db22:	add    al,BYTE PTR [rax]
   14002db24:	add    BYTE PTR [rax],al
   14002db26:	add    BYTE PTR [rax],al
   14002db28:	pop    rsi
   14002db29:	fiadd  WORD PTR [rdx]
   14002db2b:	add    BYTE PTR [rax],al
   14002db2d:	add    BYTE PTR [rax],al
   14002db2f:	add    BYTE PTR [rsi+rbx*8],ch
   14002db32:	add    al,BYTE PTR [rax]
   14002db34:	add    BYTE PTR [rax],al
   14002db36:	add    BYTE PTR [rax],al
   14002db38:	(bad)  
   14002db39:	fld    QWORD PTR [rdx]
   14002db3b:	add    BYTE PTR [rax],al
   14002db3d:	add    BYTE PTR [rax],al
   14002db3f:	add    BYTE PTR [rsi+rbx*8],al
   14002db42:	add    al,BYTE PTR [rax]
   14002db44:	add    BYTE PTR [rax],al
   14002db46:	add    BYTE PTR [rax],al
   14002db48:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002db49:	fld    QWORD PTR [rdx]
   14002db4b:	add    BYTE PTR [rax],al
   14002db4d:	add    BYTE PTR [rax],al
   14002db4f:	add    BYTE PTR [rax-0x23],bh
   14002db52:	add    al,BYTE PTR [rax]
   14002db54:	add    BYTE PTR [rax],al
   14002db56:	add    BYTE PTR [rax],al
   14002db58:	(bad)  
   14002db59:	fld    QWORD PTR [rdx]
   14002db5b:	add    BYTE PTR [rax],al
   14002db5d:	add    BYTE PTR [rax],al
   14002db5f:	add    BYTE PTR [rax-0x23],al
   14002db62:	add    al,BYTE PTR [rax]
   14002db64:	add    BYTE PTR [rax],al
   14002db66:	add    BYTE PTR [rax],al
   14002db68:	sbb    al,0xdd
   14002db6a:	add    al,BYTE PTR [rax]
   14002db6c:	add    BYTE PTR [rax],al
   14002db6e:	add    BYTE PTR [rax],al
   14002db70:	neg    ah
   14002db72:	add    al,BYTE PTR [rax]
   14002db74:	add    BYTE PTR [rax],al
   14002db76:	add    BYTE PTR [rax],al
   14002db78:	mov    edx,0x2dc
   14002db7d:	add    BYTE PTR [rax],al
   14002db7f:	add    BYTE PTR [rdx+0x2dc],dl
   14002db85:	add    BYTE PTR [rax],al
   14002db87:	add    BYTE PTR [rdx-0x24],ch
   14002db8a:	add    al,BYTE PTR [rax]
   14002db8c:	add    BYTE PTR [rax],al
   14002db8e:	add    BYTE PTR [rax],al
   14002db90:	push   rsp
   14002db91:	fadd   QWORD PTR [rdx]
   14002db93:	add    BYTE PTR [rax],al
   14002db95:	add    BYTE PTR [rax],al
   14002db97:	add    BYTE PTR [rsp+rbx*8],ch
   14002db9a:	add    al,BYTE PTR [rax]
   14002db9c:	add    BYTE PTR [rax],al
   14002db9e:	add    BYTE PTR [rax],al
   14002dba0:	or     bl,ah
   14002dba2:	add    al,BYTE PTR [rax]
   14002dba4:	add    BYTE PTR [rax],al
   14002dba6:	add    BYTE PTR [rax],al
   14002dba8:	out    dx,al
   14002dba9:	fild   DWORD PTR [rdx]
   14002dbab:	add    BYTE PTR [rax],al
   14002dbad:	add    BYTE PTR [rax],al
   14002dbaf:	add    BYTE PTR [rcx+rsi*8+0x2],bh
   14002dbb3:	add    BYTE PTR [rax],al
   14002dbb5:	add    BYTE PTR [rax],al
   14002dbb7:	add    al,cl
   14002dbb9:	fild   DWORD PTR [rdx]
	...
   14002dbc7:	add    al,cl
   14002dbc9:	(bad)  
   14002dbca:	(bad)  
   14002dbcb:	(bad)  
   14002dbcc:	jo     0x14002dc3e
   14002dbce:	outs   dx,BYTE PTR gs:[rsi]
   14002dbd0:	fs rex push rcx
   14002dbd3:	push   rbx
   14002dbd4:	je     0x14002dc48
   14002dbd6:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14002dbdd:	rex.B
   14002dbde:	rex.B
   14002dbdf:	rex.B
   14002dbe0:	rex.RB
   14002dbe1:	push   r14
   14002dbe3:	xor    DWORD PTR [rax+0x41],eax
   14002dbe6:	rex.RB
   14002dbe7:	rex.X push rsi
   14002dbe9:	xor    DWORD PTR [rax+0x40],eax
   14002dbec:	pop    rdx
   14002dbed:	add    BYTE PTR [rsi+0x303f3f01],cl
   14002dbf3:	push   rcx
   14002dbf4:	push   rbx
   14002dbf5:	je     0x14002dc69
   14002dbf7:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14002dbfe:	rex.B
   14002dbff:	rex.B
   14002dc00:	rex
   14002dc01:	rex.B
   14002dc02:	rex.RB
   14002dc03:	rex.X push rsi
   14002dc05:	xor    BYTE PTR [rax+0x40],al
   14002dc08:	pop    rdx
   14002dc09:	add    BYTE PTR [rdi+0x0],dl
   14002dc0c:	(bad)  
   14002dc0d:	(bad)  
   14002dc0e:	xor    BYTE PTR [rcx+0x43],dl
   14002dc11:	push   0x40407261
   14002dc16:	push   rcx
   14002dc17:	rex.RB
   14002dc18:	rex.B
   14002dc19:	rex.B
   14002dc1a:	rex push rbp
   14002dc1c:	push   rcx
   14002dc1d:	rex.WR (bad) 
   14002dc1f:	je     0x14002dc8a
   14002dc21:	outs   dx,BYTE PTR ds:[rsi]
   14002dc22:	xor    DWORD PTR [rbx+0x68],eax
   14002dc25:	(bad)  
   14002dc26:	jb     0x14002dc68
   14002dc28:	rex
   14002dc29:	rex pop rdx
   14002dc2b:	add    BYTE PTR [rax+0x6f633f08],bl
   14002dc31:	outs   dx,BYTE PTR ds:[rsi]
   14002dc32:	jae    0x14002dca8
   14002dc34:	rex.R (bad) 
   14002dc36:	je     0x14002dc99
   14002dc38:	rex push rcx
   14002dc3a:	push   rbx
   14002dc3b:	je     0x14002dcaf
   14002dc3d:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14002dc44:	rex.X
   14002dc45:	push   r8
   14002dc47:	rex.RB
   14002dc48:	rex.X push rsi
   14002dc4a:	push   rcx
   14002dc4b:	rex.XB push 0x40407261
   14002dc51:	pop    rax
   14002dc52:	pop    rdx
   14002dc53:	add    al,dl
   14002dc55:	add    bh,BYTE PTR [rdi]
   14002dc57:	(bad)  
   14002dc58:	xor    DWORD PTR [rcx+0x53],edx
   14002dc5b:	je     0x14002dccf
   14002dc5d:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14002dc64:	rex.B
   14002dc65:	rex.B
   14002dc66:	rex pop rax
   14002dc68:	pop    rdx
   14002dc69:	add    BYTE PTR [rdx+0x383f3f04],al
   14002dc6f:	push   rcx
   14002dc70:	push   rbx
   14002dc71:	je     0x14002dce5
   14002dc73:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14002dc7a:	rex.X
   14002dc7b:	pop    r15
   14002dc7d:	rex.WRX push rsi
   14002dc7f:	push   rcx
   14002dc80:	rex.WR (bad) 
   14002dc82:	je     0x14002dced
   14002dc84:	outs   dx,BYTE PTR ds:[rsi]
   14002dc85:	xor    DWORD PTR [rbx+0x74],edx
   14002dc88:	jb     0x14002dcf3
   14002dc8a:	outs   dx,BYTE PTR ds:[rsi]
   14002dc8b:	addr32 rex
   14002dc8d:	rex
   14002dc8e:	rex pop rdx
   14002dc90:	add    BYTE PTR [rax],al
   14002dc92:	loopne 0x14002dcab
   14002dc94:	(bad)  
   14002dc95:	jae    0x14002dd0c
   14002dc97:	data16 imul di,WORD PTR [rax+0x40],0x4651
   14002dc9e:	imul   ebp,DWORD PTR [rbp+riz*2+0x49],0x406f666e
   14002dca6:	rex push rcx
   14002dca8:	rex.RB
   14002dca9:	rex.X
   14002dcaa:	rex.B (bad) 
   14002dcac:	push   r14
   14002dcae:	push   rcx
   14002dcaf:	push   rbx
   14002dcb0:	je     0x14002dd24
   14002dcb2:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   14002dcb9:	add    BYTE PTR [rdi+0x17],ch
   14002dcbc:	(bad)  
   14002dcbd:	jae    0x14002dd33
   14002dcbf:	(bad)  
   14002dcc0:	jb     0x14002dd36
   14002dcc2:	jae    0x14002dd1b
   14002dcc4:	imul   esi,DWORD PTR [rax+rbp*2+0x40],0x72745351
   14002dccc:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14002dcd3:	rex.X
   14002dcd4:	pop    r15
   14002dcd6:	rex.WRX
   14002dcd7:	rex.B
   14002dcd8:	rex.RB
   14002dcd9:	rex.X push rsi
   14002dcdb:	xor    DWORD PTR [rax+0x57],eax
   14002dcde:	xor    al,0x43
   14002dce0:	(bad)  
   14002dce1:	jae    0x14002dd48
   14002dce3:	push   rbx
   14002dce4:	outs   dx,BYTE PTR gs:[rsi]
   14002dce6:	jae    0x14002dd51
   14002dce8:	je     0x14002dd53
   14002dcea:	jbe    0x14002dd55
   14002dcec:	je     0x14002dd67
   14002dcee:	rex push rcx
   14002dcf0:	je     0x14002dd32
   14002dcf2:	rex
   14002dcf3:	rex pop rdx
   14002dcf5:	add    cl,dl
   14002dcf7:	(bad)  
   14002dcf8:	(bad)  
   14002dcf9:	jae    0x14002dd63
   14002dcfb:	(bad)  
   14002dcfc:	jb     0x14002dd63
   14002dcfe:	fs pop rdi
   14002dd00:	outs   dx,BYTE PTR ds:[rsi]
   14002dd01:	jne    0x14002dd6f
   14002dd03:	ins    BYTE PTR es:[rdi],dx
   14002dd04:	rex push rcx
   14002dd06:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   14002dd0e:	rex
   14002dd0f:	xor    dl,BYTE PTR [rbp+0x44]
   14002dd13:	(bad)  
   14002dd14:	je     0x14002dd77
   14002dd16:	rex xor DWORD PTR [rax+0x42],eax
   14002dd1a:	add    BYTE PTR [rax],al
   14002dd1c:	rcl    BYTE PTR [rsi],cl
   14002dd1e:	(bad)  
   14002dd1f:	jae    0x14002dd89
   14002dd21:	(bad)  
   14002dd22:	jb     0x14002dd89
   14002dd24:	fs pop rdi
   14002dd26:	outs   dx,BYTE PTR ds:[rsi]
   14002dd27:	jne    0x14002dd95
   14002dd29:	ins    BYTE PTR es:[rdi],dx
   14002dd2a:	rex push rcx
   14002dd2c:	rex.WRB (bad) 
   14002dd2e:	jo     0x14002dd74
   14002dd30:	(bad)  
   14002dd31:	je     0x14002dd94
   14002dd33:	rex.X (bad) 
   14002dd35:	jae    0x14002dd9c
   14002dd37:	rex
   14002dd38:	xor    dl,BYTE PTR [rbp+0x31]
   14002dd3c:	rex
   14002dd3d:	rex.X add BYTE PTR [rax],al
   14002dd40:	iret   
   14002dd41:	(bad)  
   14002dd42:	(bad)  
   14002dd43:	jae    0x14002ddad
   14002dd45:	(bad)  
   14002dd46:	jb     0x14002ddad
   14002dd48:	fs pop rdi
   14002dd4a:	outs   dx,BYTE PTR ds:[rsi]
   14002dd4b:	jne    0x14002ddb9
   14002dd4d:	ins    BYTE PTR es:[rdi],dx
   14002dd4e:	rex push rcx
   14002dd50:	rex.W (bad) 
   14002dd52:	jae    0x14002ddbc
   14002dd54:	rex.R (bad) 
   14002dd56:	je     0x14002ddb9
   14002dd58:	rex
   14002dd59:	xor    dl,BYTE PTR [rbp+0x31]
   14002dd5d:	rex
   14002dd5e:	rex.X add bl,bpl
   14002dd61:	add    bh,BYTE PTR [rdi]
   14002dd63:	(bad)  
   14002dd64:	xor    DWORD PTR [rcx+0x56],edx
   14002dd67:	(bad)  
   14002dd68:	jb     0x14002ddd3
   14002dd6a:	(bad)  
   14002dd6b:	outs   dx,BYTE PTR ds:[rsi]
   14002dd6c:	je     0x14002ddae
   14002dd6e:	rex push rcx
   14002dd70:	rex.RB
   14002dd71:	rex.B
   14002dd72:	rex.B
   14002dd73:	rex pop rax
   14002dd75:	pop    rdx
   14002dd76:	add    BYTE PTR [rax],al
   14002dd78:	xchg   edx,eax
   14002dd79:	adc    BYTE PTR [rdi],bh
   14002dd7b:	outs   dx,BYTE PTR ds:[rsi]
   14002dd7c:	gs js  0x14002ddf3
   14002dd7f:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14002dd81:	fs gs rex push rcx
   14002dd85:	rex.W (bad) 
   14002dd87:	jae    0x14002ddf1
   14002dd89:	rex.R (bad) 
   14002dd8b:	je     0x14002ddee
   14002dd8d:	rex
   14002dd8e:	rex push rbx
   14002dd90:	push   r8
   14002dd92:	rex.RB
   14002dd93:	push   r13
   14002dd95:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14002dd97:	fs rex xor DWORD PTR gs:[rax+0x50],eax
   14002dd9d:	rex.RB
   14002dd9e:	push   r13
   14002dda0:	xor    dh,BYTE PTR [rcx]
   14002dda2:	rex
   14002dda3:	rex pop rdx
   14002dda5:	add    ch,ah
   14002dda7:	add    DWORD PTR [rdi],edi
   14002dda9:	(bad)  
   14002ddaa:	xor    BYTE PTR [rcx+0x56],dl
   14002ddad:	(bad)  
   14002ddae:	jb     0x14002de19
   14002ddb0:	(bad)  
   14002ddb1:	outs   dx,BYTE PTR ds:[rsi]
   14002ddb2:	je     0x14002ddf4
   14002ddb4:	rex push rcx
   14002ddb6:	rex.RB
   14002ddb7:	rex.B
   14002ddb8:	rex.B
   14002ddb9:	rex
   14002ddba:	rex.B
   14002ddbb:	rex.RB
   14002ddbc:	rex.X push rsi
   14002ddbe:	xor    BYTE PTR [rax+0x40],al
   14002ddc1:	pop    rdx
   14002ddc2:	add    BYTE PTR [rax],al
   14002ddc4:	sub    ecx,DWORD PTR [rcx]
   14002ddc6:	(bad)  
   14002ddc7:	movsxd esi,DWORD PTR [rdx+0x65]
   14002ddca:	(bad)  
   14002ddcb:	je     0x14002de32
   14002ddcd:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14002ddcf:	fs gs rex push rcx
   14002ddd3:	rex.WRB (bad) 
   14002ddd5:	jo     0x14002de1b
   14002ddd7:	(bad)  
   14002ddd8:	je     0x14002de3b
   14002ddda:	rex.X (bad) 
   14002dddc:	jae    0x14002de43
   14002ddde:	rex
   14002dddf:	rex push rcx
   14002dde1:	rex.RB
   14002dde2:	rex.B
   14002dde3:	push   r8
   14002dde5:	rex.RB
   14002dde6:	push   r13
   14002dde8:	push   rcx
   14002dde9:	rex.WRB (bad) 
   14002ddeb:	jo     0x14002de3b
   14002dded:	outs   dx,DWORD PTR ds:[rsi]
   14002ddee:	fs gs rex.X (bad) 
   14002ddf2:	jae    0x14002de59
   14002ddf4:	rex
   14002ddf5:	rex
   14002ddf6:	rex.W
   14002ddf7:	rex.W push rax
   14002ddf9:	rex.RB
   14002ddfa:	push   r13
   14002ddfc:	xor    al,BYTE PTR [rax+0x5f]
   14002ddff:	rex.WRX
   14002de00:	rex pop rdx
   14002de02:	add    BYTE PTR [rax],al
   14002de04:	sbb    eax,0x72633f09
   14002de09:	gs (bad) 
   14002de0b:	je     0x14002de72
   14002de0d:	rex.R (bad) 
   14002de0f:	je     0x14002de72
   14002de11:	rex push rcx
   14002de13:	rex.WRB (bad) 
   14002de15:	jo     0x14002de5b
   14002de17:	(bad)  
   14002de18:	je     0x14002de7b
   14002de1a:	rex.X (bad) 
   14002de1c:	jae    0x14002de83
   14002de1e:	rex
   14002de1f:	rex push rbx
   14002de21:	push   r8
   14002de23:	rex.RB
   14002de24:	push   r13
   14002de26:	xor    DWORD PTR [rax+0x58],eax
   14002de29:	pop    rdx
   14002de2a:	add    BYTE PTR [rax],al
   14002de2c:	jge    0x14002de3f
   14002de2e:	(bad)  
   14002de2f:	jo     0x14002dea3
   14002de31:	gs jbe 0x14002de9d
   14002de34:	outs   dx,DWORD PTR ds:[rsi]
   14002de35:	jne    0x14002deaa
   14002de37:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14002de39:	fs gs rex push rcx
   14002de3d:	rex.W (bad) 
   14002de3f:	jae    0x14002dea9
   14002de41:	rex.R (bad) 
   14002de43:	je     0x14002dea6
   14002de45:	rex
   14002de46:	rex push rbx
   14002de48:	push   r8
   14002de4a:	rex.RB
   14002de4b:	push   r13
   14002de4d:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14002de4f:	fs rex xor DWORD PTR gs:[rax+0x50],eax
   14002de55:	rex.RB
   14002de56:	push   r13
   14002de58:	xor    dh,BYTE PTR [rcx]
   14002de5a:	rex
   14002de5b:	rex pop rdx
   14002de5d:	add    BYTE PTR [rdi],ch
   14002de5f:	or     BYTE PTR [rdi],bh
   14002de61:	movsxd ebp,DWORD PTR [rbp+0x70]
   14002de64:	rex push rcx
   14002de66:	push   rsi
   14002de67:	(bad)  
   14002de68:	jb     0x14002ded3
   14002de6a:	(bad)  
   14002de6b:	outs   dx,BYTE PTR ds:[rsi]
   14002de6c:	je     0x14002deae
   14002de6e:	rex push rcx
   14002de70:	rex.RB
   14002de71:	rex.X
   14002de72:	pop    r15
   14002de74:	rex.WRX
   14002de75:	rex.B
   14002de76:	rex.RB
   14002de77:	rex.X push rsi
   14002de79:	xor    DWORD PTR [rax+0x40],eax
   14002de7c:	pop    rdx
   14002de7d:	add    bh,bh
   14002de7f:	add    al,0x3f
   14002de81:	(bad)  
   14002de82:	rex.WRB
   14002de83:	rex pop rcx
   14002de85:	pop    r15
   14002de87:	rex.WRX
   14002de88:	rex.B
   14002de89:	rex.RB
   14002de8a:	rex.X push rsi
   14002de8c:	push   rcx
   14002de8d:	push   rbx
   14002de8e:	je     0x14002df02
   14002de90:	imul   ebp,DWORD PTR [rsi+0x67],0x40304040
   14002de97:	pop    rdx
   14002de98:	add    BYTE PTR [rax],al
   14002de9a:	mov    eax,DWORD PTR [rdx]
   14002de9c:	(bad)  
   14002de9d:	(bad)  
   14002de9e:	xor    DWORD PTR [rcx+0x46],edx
   14002dea1:	imul   ebp,DWORD PTR [rbp+riz*2+0x49],0x406f666e
   14002dea9:	rex push rcx
   14002deab:	rex.RB
   14002deac:	rex.B
   14002dead:	rex.B
   14002deae:	rex pop rax
   14002deb0:	pop    rdx
   14002deb1:	add    BYTE PTR [rax+rax*1+0x51303f3f],dh
   14002deb8:	imul   r13d,DWORD PTR [rbp+r12*2+0x49],0x406f666e
   14002dec1:	rex push rcx
   14002dec3:	rex.RB
   14002dec4:	rex.B
   14002dec5:	rex.B
   14002dec6:	rex
   14002dec7:	rex.B
   14002dec8:	rex.RB
   14002dec9:	rex.X push rsi
   14002decb:	xor    BYTE PTR [rax+0x40],al
   14002dece:	pop    rdx
   14002decf:	add    BYTE PTR [rsi+0x2],ah
   14002ded2:	(bad)  
   14002ded3:	(bad)  
   14002ded4:	xor    DWORD PTR [rcx+0x42],edx
   14002ded7:	jns    0x14002df4d
   14002ded9:	gs rex.B jb 0x14002df4f
   14002dedd:	(bad)  
   14002dede:	jns    0x14002df20
   14002dee0:	rex push rcx
   14002dee2:	rex.RB
   14002dee3:	rex.B
   14002dee4:	rex.B
   14002dee5:	rex pop rax
   14002dee7:	pop    rdx
   14002dee8:	add    BYTE PTR [rax],al
   14002deea:	(bad)  
   14002deeb:	add    al,0x3f
   14002deed:	(bad)  
   14002deee:	cmp    BYTE PTR [rax+0x59],al
   14002def1:	pop    r15
   14002def3:	rex.WRX
   14002def4:	rex.B
   14002def5:	rex.RB
   14002def6:	rex.X push rsi
   14002def8:	push   rcx
   14002def9:	push   rbx
   14002defa:	je     0x14002df6e
   14002defc:	imul   ebp,DWORD PTR [rsi+0x67],0x40304040
   14002df03:	pop    rdx
   14002df04:	add    BYTE PTR [rax],al
   14002df06:	add    BYTE PTR [r15],r15b
   14002df09:	(bad)  
   14002df0a:	xor    BYTE PTR [rcx+0x42],dl
   14002df0d:	jns    0x14002df83
   14002df0f:	gs rex.B jb 0x14002df85
   14002df13:	(bad)  
   14002df14:	jns    0x14002df56
   14002df16:	rex push rcx
   14002df18:	rex.RB
   14002df19:	rex.B
   14002df1a:	rex.B
   14002df1b:	rex
   14002df1c:	rex.B
   14002df1d:	rex.RB
   14002df1e:	rex.X push rsi
   14002df20:	xor    BYTE PTR [rax+0x40],al
   14002df23:	pop    rdx
   14002df24:	add    BYTE PTR [rax],al
   14002df26:	xchg   esp,eax
   14002df27:	adc    BYTE PTR [rdi],bh
   14002df29:	outs   dx,BYTE PTR ds:[rsi]
   14002df2a:	gs js  0x14002dfa1
   14002df2d:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14002df2f:	fs gs rex push rcx
   14002df33:	rex.WRB (bad) 
   14002df35:	jo     0x14002df85
   14002df37:	outs   dx,DWORD PTR ds:[rsi]
   14002df38:	fs gs rex.X (bad) 
   14002df3c:	jae    0x14002dfa3
   14002df3e:	rex
   14002df3f:	rex push rcx
   14002df41:	rex.RB
   14002df42:	rex.X
   14002df43:	push   r8
   14002df45:	rex.RB
   14002df46:	rex.X push rbp
   14002df48:	xor    DWORD PTR [rax+0x58],eax
   14002df4b:	pop    rdx
   14002df4c:	add    BYTE PTR [rax],al
   14002df4e:	jg     0x14002df61
   14002df50:	(bad)  
   14002df51:	jo     0x14002dfc5
   14002df53:	gs jbe 0x14002dfbf
   14002df56:	outs   dx,DWORD PTR ds:[rsi]
   14002df57:	jne    0x14002dfcc
   14002df59:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14002df5b:	fs gs rex push rcx
   14002df5f:	rex.WRB (bad) 
   14002df61:	jo     0x14002dfb1
   14002df63:	outs   dx,DWORD PTR ds:[rsi]
   14002df64:	fs gs rex.X (bad) 
   14002df68:	jae    0x14002dfcf
   14002df6a:	rex
   14002df6b:	rex push rcx
   14002df6d:	rex.RB
   14002df6e:	rex.X
   14002df6f:	push   r8
   14002df71:	rex.RB
   14002df72:	rex.X push rbp
   14002df74:	xor    DWORD PTR [rax+0x58],eax
   14002df77:	pop    rdx
   14002df78:	add    BYTE PTR [rax],al
   14002df7a:	mov    DWORD PTR [rdx],ecx
   14002df7c:	(bad)  
   14002df7d:	imul   esi,DWORD PTR fs:[rbx+0x70],0x4065736f
   14002df85:	push   rcx
   14002df86:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   14002df8e:	rex
   14002df8f:	rex push rbx
   14002df91:	pop    r8
   14002df93:	push   rax
   14002df94:	rex.RB
   14002df95:	push   r13
   14002df97:	rex.R (bad) 
   14002df99:	je     0x14002dffc
   14002df9b:	rex xor DWORD PTR [rax+0x40],eax
   14002df9f:	pop    rdx
   14002dfa0:	add    BYTE PTR [rax],al
   14002dfa2:	xchg   esp,eax
   14002dfa3:	adc    edi,DWORD PTR [rdi]
   14002dfa5:	jb     0x14002e00c
   14002dfa7:	imul   esi,DWORD PTR [ebx+0x74],0x6f4e7265
   14002dfaf:	jb     0x14002e01e
   14002dfb1:	(bad)  
   14002dfb2:	ins    BYTE PTR es:[rdi],dx
   14002dfb3:	imul   edi,DWORD PTR [rdx+0x65],0x70795464
   14002dfba:	gs rex push rcx
   14002dfbd:	rex.WRB
   14002dfbe:	gs je  0x14002e022
   14002dfc1:	push   rsp
   14002dfc2:	jns    0x14002e034
   14002dfc4:	gs rex
   14002dfc6:	rex push rbx
   14002dfc8:	rex.B
   14002dfc9:	rex.W
   14002dfca:	rex.B
   14002dfcb:	rex.RB
   14002dfcc:	rex.X push rsi
   14002dfce:	push   rcx
   14002dfcf:	rex.X jns 0x14002e046
   14002dfd2:	gs rex.B jb 0x14002e048
   14002dfd6:	(bad)  
   14002dfd7:	jns    0x14002e019
   14002dfd9:	rex push rax
   14002dfdb:	ss pop r8
   14002dfde:	push   rax
   14002dfdf:	rex.RB
   14002dfe0:	pop    r8
   14002dfe2:	rex pop rdx
   14002dfe4:	push   rax
   14002dfe5:	ss push r8
   14002dfe8:	rex.RB
   14002dfe9:	pop    r8
   14002dfeb:	xor    DWORD PTR [rax+0x45],edx
   14002dfee:	rex.X pop rax
   14002dff0:	rex pop rdx
   14002dff2:	rex.W push rsi
   14002dff4:	(bad)  
   14002dff5:	and    al,0x51
   14002dff7:	rex.RX ins BYTE PTR es:[rdi],dx
   14002dff9:	(bad)  
   14002dffa:	addr32 jae 0x14002e03d
   14002dffd:	push   rdi
   14002dffe:	xor    al,0x54
   14002e000:	jns    0x14002e072
   14002e002:	gs rex.RX ins BYTE PTR es:[rdi],dx
   14002e005:	(bad)  
   14002e006:	addr32 rex push rcx
   14002e009:	rex.WRB
   14002e00a:	gs je  0x14002e06e
   14002e00d:	push   rsp
   14002e00e:	jns    0x14002e080
   14002e010:	gs rex
   14002e012:	rex
   14002e013:	rex
   14002e014:	rex push rax
   14002e016:	rex.RB
   14002e017:	rex.X push rbp
   14002e019:	push   rcx
   14002e01a:	rex.WRB
   14002e01b:	gs je  0x14002e07f
   14002e01e:	rex.WRXB (bad) 
   14002e020:	push   0x65
   14002e022:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14002e026:	rex pop rdx
   14002e028:	add    BYTE PTR [rax],al
   14002e02a:	test   eax,0x6c613f06
   14002e02f:	ins    BYTE PTR es:[rdi],dx
   14002e030:	outs   dx,DWORD PTR ds:[rsi]
   14002e031:	movsxd esp,DWORD PTR [rcx+0x74]
   14002e034:	rex.WRX outs dx,DWORD PTR gs:[rsi]
   14002e037:	fs gs rex push rcx
   14002e03b:	rex.W (bad) 
   14002e03d:	jae    0x14002e0a7
   14002e03f:	rex.R (bad) 
   14002e041:	je     0x14002e0a4
   14002e043:	rex
   14002e044:	rex push rcx
   14002e046:	rex.RB
   14002e047:	rex.B
   14002e048:	push   r8
   14002e04a:	rex.RB
   14002e04b:	pop    r8
   14002e04d:	rex.W
   14002e04e:	rex pop rdx
   14002e050:	add    BYTE PTR [rax],al
   14002e052:	rcr    BYTE PTR [rax],1
   14002e054:	(bad)  
   14002e055:	je     0x14002e0c6
   14002e057:	rex.WRX (bad) 
   14002e059:	je     0x14002e0c4
   14002e05b:	jbe    0x14002e0c2
   14002e05d:	push   rbx
   14002e05e:	gs jo  0x14002e0c2
   14002e061:	jb     0x14002e0c4
   14002e063:	je     0x14002e0d4
   14002e065:	jb     0x14002e0da
   14002e067:	rex push rcx
   14002e069:	imul   r14d,DWORD PTR [rdx+0x40],0x3f415340
   14002e071:	push   r14
   14002e073:	push   rcx
   14002e074:	push   rbx
   14002e075:	je     0x14002e0e9
   14002e077:	imul   ebp,DWORD PTR [rsi+0x67],0x45414040
   14002e07e:	rex.X push rsi
   14002e080:	xor    al,BYTE PTR [rax+0x40]
   14002e083:	pop    rdx
   14002e084:	add    BYTE PTR [rax],al
   14002e086:	outs   dx,DWORD PTR ds:[rsi]
   14002e087:	(bad)  
   14002e089:	ins    BYTE PTR es:[rdi],dx
   14002e08a:	outs   dx,DWORD PTR ds:[rsi]
   14002e08b:	movsxd esp,DWORD PTR [rcx+0x74]
   14002e08e:	imul   ebp,DWORD PTR [rdi+0x6e],0x694c5140
   14002e095:	(bad)  
   14002e097:	(bad)  
   14002e098:	jb     0x14002e113
   14002e09a:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14002e09c:	outs   dx,WORD PTR ds:[rsi]
   14002e09e:	rex
   14002e09f:	rex push rbx
   14002e0a1:	rex.B (bad) 
   14002e0a3:	push   r14
   14002e0a5:	push   rcx
   14002e0a6:	push   rbx
   14002e0a7:	je     0x14002e11b
   14002e0a9:	imul   ebp,DWORD PTR [rsi+0x67],0x34574040
   14002e0b0:	imul   r12,QWORD PTR [rdx+0x72],0x4c797261
   14002e0b8:	outs   dx,DWORD PTR ds:[rsi]
   14002e0b9:	movsxd esp,DWORD PTR [rcx+0x74]
   14002e0bc:	imul   ebp,DWORD PTR [rdi+0x6e],0x40403140
   14002e0c3:	pop    rdx
   14002e0c4:	add    BYTE PTR [rax],al
   14002e0c6:	stc    
   14002e0c7:	sbb    BYTE PTR [rdi],bh
   14002e0c9:	je     0x14002e13a
   14002e0cb:	push   rbx
   14002e0cc:	je     0x14002e132
   14002e0ce:	push   rdi
   14002e0cf:	push   rbx
   14002e0d0:	je     0x14002e144
   14002e0d2:	imul   ebp,DWORD PTR [rsi+0x67],0x74535140
   14002e0d9:	jb     0x14002e144
   14002e0db:	outs   dx,BYTE PTR ds:[rsi]
   14002e0dc:	addr32 rex
   14002e0de:	rex push rcx
   14002e0e0:	rex.RB
   14002e0e1:	rex.X
   14002e0e2:	rex.B (bad) 
   14002e0e4:	push   r14
   14002e0e6:	(bad)  
   14002e0e7:	and    al,0x62
   14002e0e9:	(bad)  
   14002e0ea:	jae    0x14002e155
   14002e0ec:	movsxd ebx,DWORD PTR [rdi+0x73]
   14002e0ef:	je     0x14002e163
   14002e0f1:	imul   ebp,DWORD PTR [rsi+0x67],0x55575f40
   14002e0f8:	(bad)  
   14002e0f9:	and    al,0x63
   14002e0fb:	push   0x745f7261
   14002e100:	jb     0x14002e163
   14002e102:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x7340575f
   14002e10a:	je     0x14002e170
   14002e10c:	rex
   14002e10d:	rex push rsi
   14002e10f:	(bad)  
   14002e110:	and    al,0x61
   14002e112:	ins    BYTE PTR es:[rdi],dx
   14002e113:	ins    BYTE PTR es:[rdi],dx
   14002e114:	outs   dx,DWORD PTR ds:[rsi]
   14002e115:	movsxd esp,DWORD PTR [rcx+0x74]
   14002e118:	outs   dx,DWORD PTR ds:[rsi]
   14002e119:	jb     0x14002e15b
   14002e11b:	pop    rdi
   14002e11c:	push   rdi
   14002e11d:	xor    al,BYTE PTR [rax+0x40]
   14002e121:	jae    0x14002e197
   14002e123:	fs rex
   14002e125:	rex pop rax
   14002e127:	pop    rdx
   14002e128:	add    BYTE PTR [rax],al
   14002e12a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002e12b:	adc    BYTE PTR [rdi],bh
   14002e12d:	outs   dx,BYTE PTR ds:[rsi]
   14002e12e:	outs   dx,DWORD PTR ds:[rsi]
   14002e12f:	jb     0x14002e19e
   14002e131:	(bad)  
   14002e132:	ins    BYTE PTR es:[rdi],dx
   14002e133:	imul   edi,DWORD PTR [rdx+0x65],0x70795464
   14002e13a:	gs rex push rcx
   14002e13d:	rex.WRB
   14002e13e:	gs je  0x14002e1a2
   14002e141:	rex.WRXB (bad) 
   14002e143:	push   0x65
   14002e145:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14002e149:	push   rbx
   14002e14a:	rex.B (bad) 
   14002e14c:	push   r14
   14002e14e:	push   rcx
   14002e14f:	rex.X jns 0x14002e1c6
   14002e152:	gs rex.B jb 0x14002e1c8
   14002e156:	(bad)  
   14002e157:	jns    0x14002e199
   14002e159:	rex push rax
   14002e15b:	rex.RB
   14002e15c:	rex.X
   14002e15d:	rex.R
   14002e15e:	rex pop rdx
   14002e160:	add    BYTE PTR [rax],al
   14002e162:	xchg   ecx,eax
   14002e163:	add    DWORD PTR [rdi],edi
   14002e165:	(bad)  
   14002e166:	xor    BYTE PTR [rcx+0x53],dl
   14002e169:	je     0x14002e1dd
   14002e16b:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14002e172:	rex.B
   14002e173:	rex.B
   14002e174:	rex
   14002e175:	rex.W push rdi
   14002e177:	xor    al,0x49
   14002e179:	outs   dx,BYTE PTR ds:[rsi]
   14002e17a:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x617a696c
   14002e182:	je     0x14002e1ed
   14002e184:	outs   dx,DWORD PTR ds:[rsi]
   14002e185:	outs   dx,BYTE PTR ds:[rsi]
   14002e186:	rex push rcx
   14002e188:	je     0x14002e1ca
   14002e18a:	rex
   14002e18b:	rex pop rdx
   14002e18d:	add    bl,ch
   14002e18f:	adc    DWORD PTR [rdi],edi
   14002e191:	jno    0x14002e1db
   14002e193:	(bad)  
   14002e194:	jae    0x14002e1fe
   14002e196:	rex
   14002e197:	rex pop rcx
   14002e199:	rex.B
   14002e19a:	rex.WB
   14002e19b:	rex.B
   14002e19c:	rex.RB
   14002e19d:	rex.X push rsi
   14002e19f:	push   rcx
   14002e1a0:	push   rbx
   14002e1a1:	je     0x14002e215
   14002e1a3:	imul   ebp,DWORD PTR [rsi+0x67],0x40494040
   14002e1aa:	pop    rdx
   14002e1ab:	add    BYTE PTR [rsi],cl
   14002e1ad:	or     al,0x3f
   14002e1af:	data16 jb 0x14002e217
   14002e1b2:	gs rex.R (bad) 
   14002e1b5:	je     0x14002e218
   14002e1b7:	rex push rcx
   14002e1b9:	rex.WRB (bad) 
   14002e1bb:	jo     0x14002e201
   14002e1bd:	(bad)  
   14002e1be:	je     0x14002e221
   14002e1c0:	rex.X (bad) 
   14002e1c2:	jae    0x14002e229
   14002e1c4:	rex
   14002e1c5:	rex push rbx
   14002e1c7:	pop    r8
   14002e1c9:	push   rax
   14002e1ca:	rex.RB
   14002e1cb:	push   r13
   14002e1cd:	xor    DWORD PTR [rax+0x40],eax
   14002e1d0:	pop    rdx
   14002e1d1:	add    BYTE PTR [rcx],dl
   14002e1d3:	or     al,0x3f
   14002e1d5:	data16 jb 0x14002e23d
   14002e1d8:	gs push rsp
   14002e1da:	jb     0x14002e241
   14002e1dc:	gs rex push rcx
   14002e1df:	rex.WRB (bad) 
   14002e1e1:	jo     0x14002e227
   14002e1e3:	(bad)  
   14002e1e4:	je     0x14002e247
   14002e1e6:	rex.X (bad) 
   14002e1e8:	jae    0x14002e24f
   14002e1ea:	rex
   14002e1eb:	rex push rcx
   14002e1ed:	rex.RB
   14002e1ee:	rex.B
   14002e1ef:	pop    r8
   14002e1f1:	push   rax
   14002e1f2:	rex.RB
   14002e1f3:	push   r13
   14002e1f5:	push   rcx
   14002e1f6:	rex.WRB (bad) 
   14002e1f8:	jo     0x14002e248
   14002e1fa:	outs   dx,DWORD PTR ds:[rsi]
   14002e1fb:	fs gs rex.X (bad) 
   14002e1ff:	jae    0x14002e266
   14002e201:	rex
   14002e202:	rex
   14002e203:	rex.W
   14002e204:	rex pop rdx
   14002e206:	add    BYTE PTR [rax],al
   14002e208:	push   rbx
   14002e209:	or     bh,BYTE PTR [rdi]
   14002e20b:	fs gs je 0x14002e270
   14002e20f:	movsxd ebp,DWORD PTR [rax+0x40]
   14002e212:	push   rcx
   14002e213:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   14002e21b:	rex
   14002e21c:	rex push rcx
   14002e21e:	rex.RB
   14002e21f:	rex.B
   14002e220:	push   r8
   14002e222:	rex.RB
   14002e223:	push   r13
   14002e225:	rex.R (bad) 
   14002e227:	je     0x14002e28a
   14002e229:	rex xor DWORD PTR [rax+0x48],eax
   14002e22d:	rex pop rdx
   14002e22f:	add    BYTE PTR [rdi+0x13],bh
   14002e232:	(bad)  
   14002e233:	jb     0x14002e29a
   14002e235:	movsxd esp,DWORD PTR [rcx+0x6c]
   14002e238:	movsxd ecx,DWORD PTR [rbp+0x6f]
   14002e23b:	jae    0x14002e2b1
   14002e23d:	rex.WR
   14002e23e:	gs data16 je 0x14002e290
   14002e242:	outs   dx,DWORD PTR ds:[rsi]
   14002e243:	fs gs rex push rcx
   14002e247:	rex.WRB (bad) 
   14002e249:	jo     0x14002e28f
   14002e24b:	(bad)  
   14002e24c:	je     0x14002e2af
   14002e24e:	rex.X (bad) 
   14002e250:	jae    0x14002e2b7
   14002e252:	rex
   14002e253:	rex push rcx
   14002e255:	rex.RB
   14002e256:	rex.B
   14002e257:	pop    r8
   14002e259:	pop    rax
   14002e25a:	pop    rdx
   14002e25b:	add    BYTE PTR [rdx],dl
   14002e25d:	or     al,0x3f
   14002e25f:	data16 jb 0x14002e2c7
   14002e262:	gs pop rdi
   14002e264:	push   0x65706c65
   14002e269:	jb     0x14002e2ab
   14002e26b:	push   rcx
   14002e26c:	rex.W (bad) 
   14002e26e:	jae    0x14002e2d8
   14002e270:	rex.R (bad) 
   14002e272:	je     0x14002e2d5
   14002e274:	rex
   14002e275:	rex push rcx
   14002e277:	rex.RB
   14002e278:	rex.B
   14002e279:	pop    r8
   14002e27b:	push   rax
   14002e27c:	ss pop r8
   14002e27f:	push   rax
   14002e280:	rex.RB
   14002e281:	push   r13
   14002e283:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14002e285:	fs rex xor DWORD PTR gs:[rax+0x40],eax
   14002e28b:	pop    rdx
   14002e28c:	rex pop rdx
   14002e28e:	add    BYTE PTR [rax],al
   14002e290:	pop    rbx
   14002e291:	or     bh,BYTE PTR [rdi]
   14002e293:	fs gs je 0x14002e2f8
   14002e297:	movsxd ebp,DWORD PTR [rax+0x5f]
   14002e29a:	addr32 jb 0x14002e30c
   14002e29d:	ja     0x14002e2df
   14002e29f:	push   rcx
   14002e2a0:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   14002e2a8:	rex
   14002e2a9:	rex push rcx
   14002e2ab:	rex.RB
   14002e2ac:	rex.B
   14002e2ad:	push   r8
   14002e2af:	rex.RB
   14002e2b0:	push   r13
   14002e2b2:	rex.R (bad) 
   14002e2b4:	je     0x14002e317
   14002e2b6:	rex xor DWORD PTR [rax+0x50],eax
   14002e2ba:	rex.RB
   14002e2bb:	rex.B
   14002e2bc:	rex.W
   14002e2bd:	rex.W
   14002e2be:	rex pop rdx
   14002e2c0:	add    BYTE PTR [rax],al
   14002e2c2:	(bad)  
   14002e2c4:	(bad)  
   14002e2c5:	data16 jb 0x14002e32d
   14002e2c8:	rex.WRX outs dx,DWORD PTR gs:[rsi]
   14002e2cb:	fs gs rex push rcx
   14002e2cf:	rex.W (bad) 
   14002e2d1:	jae    0x14002e33b
   14002e2d3:	rex.R (bad) 
   14002e2d5:	je     0x14002e338
   14002e2d7:	rex
   14002e2d8:	rex push rcx
   14002e2da:	rex.RB
   14002e2db:	rex.B
   14002e2dc:	pop    r8
   14002e2de:	push   rax
   14002e2df:	rex.RB
   14002e2e0:	pop    r8
   14002e2e2:	rex pop rdx
   14002e2e4:	add    BYTE PTR [rax],al
   14002e2e6:	fmul   QWORD PTR [rax]
   14002e2e8:	(bad)  
   14002e2e9:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14002e2ec:	jbe    0x14002e353
   14002e2ee:	jb     0x14002e364
   14002e2f0:	rex push rcx
   14002e2f2:	push   rsi
   14002e2f3:	(bad)  
   14002e2f4:	jb     0x14002e35f
   14002e2f6:	(bad)  
   14002e2f7:	outs   dx,BYTE PTR ds:[rsi]
   14002e2f8:	je     0x14002e33a
   14002e2fa:	rex push rcx
   14002e2fc:	rex.RB
   14002e2fd:	rex.X
   14002e2fe:	pop    r15
   14002e300:	rex.WRX
   14002e301:	rex.W push rax
   14002e303:	rex.RB
   14002e304:	pop    r8
   14002e306:	rex pop rdx
   14002e308:	add    BYTE PTR [rax],al
   14002e30a:	(bad)  
   14002e30b:	or     BYTE PTR [rdi],bh
   14002e30d:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14002e310:	jae    0x14002e386
   14002e312:	rex.R (bad) 
   14002e314:	je     0x14002e377
   14002e316:	rex push rcx
   14002e318:	push   rsi
   14002e319:	(bad)  
   14002e31a:	jb     0x14002e385
   14002e31c:	(bad)  
   14002e31d:	outs   dx,BYTE PTR ds:[rsi]
   14002e31e:	je     0x14002e360
   14002e320:	rex push rcx
   14002e322:	rex.RB
   14002e323:	rex.X
   14002e324:	push   r8
   14002e326:	rex.RB
   14002e327:	rex.X pop rax
   14002e329:	pop    rax
   14002e32a:	pop    rdx
   14002e32b:	add    BYTE PTR [rdx+0x73753f1a],al
   14002e331:	gs jb  0x14002e388
   14002e334:	jns    0x14002e3a6
   14002e336:	gs rex push rcx
   14002e339:	push   rsi
   14002e33a:	(bad)  
   14002e33b:	jb     0x14002e3a6
   14002e33d:	(bad)  
   14002e33e:	outs   dx,BYTE PTR ds:[rsi]
   14002e33f:	je     0x14002e381
   14002e341:	rex push rcx
   14002e343:	rex.RB
   14002e344:	rex.X
   14002e345:	rex.B
   14002e346:	rex.W pop rax
   14002e348:	pop    rdx
   14002e349:	add    dh,al
   14002e34b:	(bad)  
   14002e34c:	(bad)  
   14002e34d:	(bad)  
   14002e34e:	jo     0x14002e3c0
   14002e350:	outs   dx,BYTE PTR gs:[rsi]
   14002e352:	fs rex push rcx
   14002e355:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   14002e35d:	rex
   14002e35e:	rex push rcx
   14002e360:	rex.RB
   14002e361:	rex.B
   14002e362:	push   r8
   14002e364:	rex.RB
   14002e365:	push   r8
   14002e367:	rex.RB
   14002e368:	pop    r8
   14002e36a:	pop    rax
   14002e36b:	pop    rdx
   14002e36c:	add    BYTE PTR [rax],al
   14002e36e:	pop    rsi
   14002e36f:	or     bh,BYTE PTR [rdi]
   14002e371:	fs gs je 0x14002e3d6
   14002e375:	movsxd ebp,DWORD PTR [rax+0x5f]
   14002e378:	push   0x65706c65
   14002e37d:	jb     0x14002e3bf
   14002e37f:	push   rcx
   14002e380:	rex.W (bad) 
   14002e382:	jae    0x14002e3ec
   14002e384:	rex.R (bad) 
   14002e386:	je     0x14002e3e9
   14002e388:	rex
   14002e389:	rex push rcx
   14002e38b:	rex.RB
   14002e38c:	rex.B
   14002e38d:	push   r8
   14002e38f:	rex.RB
   14002e390:	push   r13
   14002e392:	xor    DWORD PTR [rax+0x50],eax
   14002e395:	ss pop r8
   14002e398:	push   rax
   14002e399:	rex.RB
   14002e39a:	push   r13
   14002e39c:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14002e39e:	fs rex xor DWORD PTR gs:[rax+0x50],eax
   14002e3a4:	rex.RB
   14002e3a5:	pop    r8
   14002e3a7:	rex pop rdx
   14002e3a9:	push   rax
   14002e3aa:	ss pop r8
   14002e3ad:	xor    BYTE PTR [rax+0x5a],al
   14002e3b0:	rex.W
   14002e3b1:	rex.W
   14002e3b2:	rex pop rdx
   14002e3b4:	add    BYTE PTR [rax],al
   14002e3b6:	xchg   esi,eax
   14002e3b7:	add    edi,DWORD PTR [rdi]
   14002e3b9:	(bad)  
   14002e3ba:	xor    al,0x51
   14002e3bc:	push   rsi
   14002e3bd:	(bad)  
   14002e3be:	jb     0x14002e429
   14002e3c0:	(bad)  
   14002e3c1:	outs   dx,BYTE PTR ds:[rsi]
   14002e3c2:	je     0x14002e404
   14002e3c4:	rex push rcx
   14002e3c6:	rex.RB
   14002e3c7:	rex.B
   14002e3c8:	rex.B
   14002e3c9:	rex.B
   14002e3ca:	rex.RB
   14002e3cb:	push   r14
   14002e3cd:	xor    BYTE PTR [rax+0x41],al
   14002e3d0:	rex.RB
   14002e3d1:	rex.X push rsi
   14002e3d3:	xor    BYTE PTR [rax+0x40],al
   14002e3d6:	pop    rdx
   14002e3d7:	add    BYTE PTR [rip+0x6c633f08],ah        # 0x1ac6622e5
   14002e3dd:	outs   dx,DWORD PTR ds:[rsi]
   14002e3de:	jae    0x14002e445
   14002e3e0:	rex push rcx
   14002e3e2:	imul   r13d,DWORD PTR [rbp+r12*2+0x44],0x63697665
   14002e3eb:	gs rex
   14002e3ed:	rex push rbp
   14002e3ef:	rex.RB
   14002e3f0:	rex.B
   14002e3f1:	pop    r8
   14002e3f3:	pop    rax
   14002e3f4:	pop    rdx
   14002e3f5:	add    BYTE PTR [rdi+0xc],dl
   14002e3f8:	(bad)  
   14002e3f9:	data16 jb 0x14002e46b
   14002e3fc:	ins    DWORD PTR es:[rdi],dx
   14002e3fd:	push   rbp
   14002e3fe:	je     0x14002e466
   14002e400:	cmp    BYTE PTR [rax+0x51],al
   14002e403:	push   rbx
   14002e404:	je     0x14002e478
   14002e406:	imul   ebp,DWORD PTR [rsi+0x67],0x41534040
   14002e40d:	(bad)  
   14002e40e:	push   r14
   14002e410:	xor    DWORD PTR [rax+0x41],eax
   14002e413:	rex.RB
   14002e414:	rex.X push rsi
   14002e416:	push   rcx
   14002e417:	rex.X jns 0x14002e48e
   14002e41a:	gs rex.B jb 0x14002e490
   14002e41e:	(bad)  
   14002e41f:	jns    0x14002e461
   14002e421:	rex
   14002e422:	rex pop rdx
   14002e424:	add    BYTE PTR [rax],al
   14002e426:	adc    r15,QWORD PTR [rdi]
   14002e429:	jb     0x14002e490
   14002e42b:	(bad)  
   14002e42c:	fs rex.B ins BYTE PTR es:[rdi],dx
   14002e42f:	ins    BYTE PTR es:[rdi],dx
   14002e430:	rex push rcx
   14002e432:	rex.WB
   14002e433:	rex.WRXB
   14002e434:	rex.R
   14002e435:	gs jbe 0x14002e4a1
   14002e438:	movsxd esp,DWORD PTR [rbp+0x40]
   14002e43b:	rex push rcx
   14002e43d:	rex.RB
   14002e43e:	rex.B
   14002e43f:	rex.B (bad) 
   14002e441:	push   r14
   14002e443:	push   rcx
   14002e444:	rex.X jns 0x14002e4bb
   14002e447:	gs rex.B jb 0x14002e4bd
   14002e44b:	(bad)  
   14002e44c:	jns    0x14002e48e
   14002e44e:	rex pop rax
   14002e450:	pop    rdx
   14002e451:	add    BYTE PTR [rcx+0x313f3f02],cl
   14002e457:	push   rcx
   14002e458:	imul   r13d,DWORD PTR [rbp+r12*2+0x40],0x41455540
   14002e461:	rex.B
   14002e462:	rex pop rax
   14002e464:	pop    rdx
   14002e465:	add    BYTE PTR [rcx+0x69663f0b],ch
   14002e46b:	ins    BYTE PTR es:[rdi],dx
   14002e46c:	gs rex.WRX (bad) 
   14002e46f:	ins    DWORD PTR es:[rdi],dx
   14002e470:	gs rex push rcx
   14002e473:	imul   r13d,DWORD PTR [rbp+r12*2+0x40],0x42455540
   14002e47c:	rex.B (bad) 
   14002e47e:	push   r14
   14002e480:	push   rcx
   14002e481:	push   rbx
   14002e482:	je     0x14002e4f6
   14002e484:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   14002e48b:	add    ch,dh
   14002e48d:	sbb    BYTE PTR [rdi],bh
   14002e48f:	je     0x14002e500
   14002e491:	push   rbx
   14002e492:	je     0x14002e4f8
   14002e494:	push   rbx
   14002e495:	je     0x14002e509
   14002e497:	imul   ebp,DWORD PTR [rsi+0x67],0x74535140
   14002e49e:	jb     0x14002e509
   14002e4a0:	outs   dx,BYTE PTR ds:[rsi]
   14002e4a1:	addr32 rex
   14002e4a3:	rex push rcx
   14002e4a5:	rex.RB
   14002e4a6:	rex.X
   14002e4a7:	rex.B (bad) 
   14002e4a9:	push   r14
   14002e4ab:	(bad)  
   14002e4ac:	and    al,0x62
   14002e4ae:	(bad)  
   14002e4af:	jae    0x14002e51a
   14002e4b1:	movsxd ebx,DWORD PTR [rdi+0x73]
   14002e4b4:	je     0x14002e528
   14002e4b6:	imul   ebp,DWORD PTR [rsi+0x67],0x3f554440
   14002e4bd:	and    al,0x63
   14002e4bf:	push   0x745f7261
   14002e4c4:	jb     0x14002e527
   14002e4c6:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14002e4ce:	fs rex
   14002e4d0:	rex push rsi
   14002e4d2:	(bad)  
   14002e4d3:	and    al,0x61
   14002e4d5:	ins    BYTE PTR es:[rdi],dx
   14002e4d6:	ins    BYTE PTR es:[rdi],dx
   14002e4d7:	outs   dx,DWORD PTR ds:[rsi]
   14002e4d8:	movsxd esp,DWORD PTR [rcx+0x74]
   14002e4db:	outs   dx,DWORD PTR ds:[rsi]
   14002e4dc:	jb     0x14002e51e
   14002e4de:	rex.R
   14002e4df:	xor    al,BYTE PTR [rax+0x40]
   14002e4e3:	jae    0x14002e559
   14002e4e5:	fs rex
   14002e4e7:	rex pop rax
   14002e4e9:	pop    rdx
   14002e4ea:	add    BYTE PTR [rax],al
   14002e4ec:	cmp    eax,0x72653f0b
   14002e4f1:	jb     0x14002e562
   14002e4f3:	jb     0x14002e548
   14002e4f5:	je     0x14002e569
   14002e4f7:	imul   ebp,DWORD PTR [rsi+0x67],0x4f495140
   14002e4fe:	rex.R
   14002e4ff:	gs jbe 0x14002e56b
   14002e502:	movsxd esp,DWORD PTR [rbp+0x40]
   14002e505:	rex push rcx
   14002e507:	rex.RB
   14002e508:	rex.X
   14002e509:	rex.B (bad) 
   14002e50b:	push   r14
   14002e50d:	push   rcx
   14002e50e:	push   rbx
   14002e50f:	je     0x14002e583
   14002e511:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   14002e518:	add    BYTE PTR [rax],al
   14002e51a:	(bad)  
   14002e51b:	adc    BYTE PTR [rdi],bh
   14002e51d:	outs   dx,DWORD PTR ds:[rsi]
   14002e51e:	jo     0x14002e585
   14002e520:	outs   dx,BYTE PTR ds:[rsi]
   14002e521:	rex push rcx
   14002e523:	imul   r13d,DWORD PTR [rbp+r12*2+0x40],0x41455540
   14002e52c:	pop    r15
   14002e52e:	rex.WRX push rsi
   14002e530:	(bad)  
   14002e531:	and    al,0x51
   14002e533:	rex.RX ins BYTE PTR es:[rdi],dx
   14002e535:	(bad)  
   14002e536:	addr32 jae 0x14002e579
   14002e539:	push   rdi
   14002e53a:	xor    al,0x4f
   14002e53c:	jo     0x14002e5a3
   14002e53e:	outs   dx,BYTE PTR ds:[rsi]
   14002e53f:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14002e541:	fs gs rex.RX ins BYTE PTR es:[rdi],dx
   14002e545:	(bad)  
   14002e546:	addr32 rex push rcx
   14002e549:	rex.WB
   14002e54a:	rex.WRXB
   14002e54b:	rex.R
   14002e54c:	gs jbe 0x14002e5b8
   14002e54f:	movsxd esp,DWORD PTR [rbp+0x40]
   14002e552:	rex
   14002e553:	rex
   14002e554:	rex
   14002e555:	rex pop rdx
   14002e557:	add    BYTE PTR [rbp+0x303f3f00],ch
   14002e55d:	push   rcx
   14002e55e:	imul   r13d,DWORD PTR [rbp+r12*2+0x40],0x41455140
   14002e567:	rex.B
   14002e568:	rex
   14002e569:	rex.B
   14002e56a:	rex.RB
   14002e56b:	rex.X push rsi
   14002e56d:	push   rcx
   14002e56e:	push   rbx
   14002e56f:	je     0x14002e5e3
   14002e571:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   14002e578:	add    BYTE PTR [rax],al
   14002e57a:	(bad)  
   14002e57b:	add    bh,BYTE PTR [rdi]
   14002e57d:	(bad)  
   14002e57e:	xor    BYTE PTR [rcx+0x56],dl
   14002e581:	(bad)  
   14002e582:	jb     0x14002e5ed
   14002e584:	(bad)  
   14002e585:	outs   dx,BYTE PTR ds:[rsi]
   14002e586:	je     0x14002e5c8
   14002e588:	rex push rcx
   14002e58a:	rex.RB
   14002e58b:	rex.B
   14002e58c:	rex.B
   14002e58d:	rex pop rax
   14002e58f:	pop    rdx
   14002e590:	add    BYTE PTR [rax],al
   14002e592:	scas   al,BYTE PTR es:[rdi]
   14002e593:	adc    edi,DWORD PTR [rdi]
   14002e595:	jb     0x14002e5fc
   14002e597:	push   0x40687361
   14002e59c:	push   rcx
   14002e59d:	rex.W (bad) 
   14002e59f:	jae    0x14002e609
   14002e5a1:	rex.R (bad) 
   14002e5a3:	je     0x14002e606
   14002e5a5:	rex
   14002e5a6:	rex push rcx
   14002e5a8:	rex.RB
   14002e5a9:	rex.B
   14002e5aa:	pop    r8
   14002e5ac:	rex.W
   14002e5ad:	rex pop rdx
   14002e5af:	add    ah,al
   14002e5b1:	or     al,0x3f
   14002e5b3:	push   0x68537361
   14002e5b8:	jb     0x14002e62f
   14002e5ba:	outs   dx,BYTE PTR ds:[rsi]
   14002e5bb:	imul   eax,DWORD PTR [rax+0x51],0x48
   14002e5bf:	(bad)  
   14002e5c0:	jae    0x14002e62a
   14002e5c2:	rex.R (bad) 
   14002e5c4:	je     0x14002e627
   14002e5c6:	rex
   14002e5c7:	rex push rcx
   14002e5c9:	rex.RB
   14002e5ca:	rex.B
   14002e5cb:	pop    r8
   14002e5cd:	pop    rax
   14002e5ce:	pop    rdx
   14002e5cf:	add    al,ch
   14002e5d1:	add    DWORD PTR [rdi],edi
   14002e5d3:	(bad)  
   14002e5d4:	xor    BYTE PTR [rcx+0x56],dl
   14002e5d7:	(bad)  
   14002e5d8:	jb     0x14002e643
   14002e5da:	(bad)  
   14002e5db:	outs   dx,BYTE PTR ds:[rsi]
   14002e5dc:	je     0x14002e61e
   14002e5de:	rex push rcx
   14002e5e0:	rex.RB
   14002e5e1:	rex.B
   14002e5e2:	rex.B
   14002e5e3:	rex
   14002e5e4:	rex.B
   14002e5e5:	rex.RB
   14002e5e6:	rex.X push rsi
   14002e5e8:	(bad)  
   14002e5e9:	and    al,0x51
   14002e5eb:	rex.WRB (bad) 
   14002e5ed:	jo     0x14002e62f
   14002e5ef:	push   rsi
   14002e5f0:	push   rcx
   14002e5f1:	push   rbx
   14002e5f2:	je     0x14002e666
   14002e5f4:	imul   ebp,DWORD PTR [rsi+0x67],0x51564040
   14002e5fb:	push   rsi
   14002e5fc:	(bad)  
   14002e5fd:	jb     0x14002e668
   14002e5ff:	(bad)  
   14002e600:	outs   dx,BYTE PTR ds:[rsi]
   14002e601:	je     0x14002e643
   14002e603:	rex
   14002e604:	rex
   14002e605:	rex
   14002e606:	rex pop rdx
   14002e608:	add    BYTE PTR [rax],al
   14002e60a:	sbb    edx,DWORD PTR [rax]
   14002e60c:	(bad)  
   14002e60d:	ins    DWORD PTR es:[rdi],dx
   14002e60e:	imul   esp,DWORD PTR [rax+rax*2+0x51],0x69727453
   14002e616:	outs   dx,BYTE PTR ds:[rsi]
   14002e617:	addr32 rex
   14002e619:	rex push rcx
   14002e61b:	rex.RB
   14002e61c:	rex.X
   14002e61d:	rex.B (bad) 
   14002e61f:	push   r14
   14002e621:	xor    DWORD PTR [rax+0x48],eax
   14002e624:	rex.W
   14002e625:	rex pop rdx
   14002e627:	add    cl,dh
   14002e629:	(bad)  
   14002e62a:	(bad)  
   14002e62b:	movsxd ebp,DWORD PTR [rax+0x6f]
   14002e62e:	jo     0x14002e670
   14002e630:	push   rcx
   14002e631:	push   rbx
   14002e632:	je     0x14002e6a6
   14002e634:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14002e63b:	rex.B
   14002e63c:	pop    r8
   14002e63e:	rex.W
   14002e63f:	rex pop rdx
   14002e641:	add    ch,cl
   14002e643:	(bad)  
   14002e644:	(bad)  
   14002e645:	(bad)  
   14002e646:	jo     0x14002e6b8
   14002e648:	outs   dx,BYTE PTR gs:[rsi]
   14002e64a:	fs rex push rcx
   14002e64d:	push   rbx
   14002e64e:	je     0x14002e6c2
   14002e650:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14002e657:	rex.B
   14002e658:	rex.B
   14002e659:	rex.B
   14002e65a:	rex.RB
   14002e65b:	push   r14
   14002e65d:	xor    DWORD PTR [rax+0x56],eax
   14002e660:	push   rcx
   14002e661:	rex.XB push 0x40407261
   14002e667:	rex pop rdx
   14002e669:	add    dl,cl
   14002e66b:	(bad)  
   14002e66c:	(bad)  
   14002e66d:	(bad)  
   14002e66e:	jo     0x14002e6e0
   14002e670:	outs   dx,BYTE PTR gs:[rsi]
   14002e672:	fs rex push rcx
   14002e675:	push   rbx
   14002e676:	je     0x14002e6ea
   14002e678:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14002e67f:	rex.B
   14002e680:	rex.B
   14002e681:	rex.B
   14002e682:	rex.RB
   14002e683:	push   r14
   14002e685:	xor    DWORD PTR [rax+0x41],eax
   14002e688:	rex.RB
   14002e689:	rex.X push rsi
   14002e68b:	push   rcx
   14002e68c:	push   rbx
   14002e68d:	je     0x14002e701
   14002e68f:	imul   ebp,DWORD PTR [rsi+0x67],0x40666552
   14002e696:	rex
   14002e697:	rex pop rdx
   14002e699:	add    BYTE PTR [rdi+0x303f3f01],dl
   14002e69f:	push   rcx
   14002e6a0:	push   rbx
   14002e6a1:	je     0x14002e715
   14002e6a3:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14002e6aa:	rex.B
   14002e6ab:	rex.B
   14002e6ac:	rex pop rax
   14002e6ae:	pop    rdx
   14002e6af:	add    bl,bh
   14002e6b1:	(bad)  
   14002e6b2:	(bad)  
   14002e6b3:	movsxd ebp,DWORD PTR [rbp+riz*2+0x61]
   14002e6b7:	outs   dx,BYTE PTR ds:[rsi]
   14002e6b8:	push   rax
   14002e6b9:	(bad)  
   14002e6ba:	je     0x14002e724
   14002e6bc:	rex push rcx
   14002e6be:	imul   r14d,DWORD PTR [rdx+0x40],0x3f415340
   14002e6c6:	push   r14
   14002e6c8:	push   rcx
   14002e6c9:	push   rbx
   14002e6ca:	je     0x14002e73e
   14002e6cc:	imul   ebp,DWORD PTR [rsi+0x67],0x45414040
   14002e6d3:	rex.X push rsi
   14002e6d5:	xor    al,BYTE PTR [rax+0x40]
   14002e6d8:	pop    rdx
   14002e6d9:	add    BYTE PTR [rsi],al
   14002e6db:	or     edi,DWORD PTR [rdi]
   14002e6dd:	outs   dx,BYTE PTR gs:[rsi]
   14002e6df:	fs jae 0x14002e739
   14002e6e2:	imul   esi,DWORD PTR [rax+rbp*2+0x40],0x72745351
   14002e6ea:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14002e6f1:	rex.X
   14002e6f2:	pop    r15
   14002e6f4:	rex.WRX push rsi
   14002e6f6:	push   rcx
   14002e6f7:	rex.WR (bad) 
   14002e6f9:	je     0x14002e764
   14002e6fb:	outs   dx,BYTE PTR ds:[rsi]
   14002e6fc:	xor    DWORD PTR [rbx+0x74],edx
   14002e6ff:	jb     0x14002e76a
   14002e701:	outs   dx,BYTE PTR ds:[rsi]
   14002e702:	addr32 rex
   14002e704:	rex push rdi
   14002e706:	xor    al,0x43
   14002e708:	(bad)  
   14002e709:	jae    0x14002e770
   14002e70b:	push   rbx
   14002e70c:	outs   dx,BYTE PTR gs:[rsi]
   14002e70e:	jae    0x14002e779
   14002e710:	je     0x14002e77b
   14002e712:	jbe    0x14002e77d
   14002e714:	je     0x14002e78f
   14002e716:	rex push rcx
   14002e718:	je     0x14002e75a
   14002e71a:	rex
   14002e71b:	rex pop rdx
   14002e71d:	add    BYTE PTR [rax+0xc],bl
   14002e720:	(bad)  
   14002e721:	data16 jb 0x14002e793
   14002e724:	ins    DWORD PTR es:[rdi],dx
   14002e725:	push   rbp
   14002e726:	je     0x14002e78e
   14002e728:	cmp    BYTE PTR [rax+0x51],al
   14002e72b:	push   rbx
   14002e72c:	je     0x14002e7a0
   14002e72e:	imul   ebp,DWORD PTR [rsi+0x67],0x41534040
   14002e735:	(bad)  
   14002e736:	push   r14
   14002e738:	xor    DWORD PTR [rax+0x50],eax
   14002e73b:	rex.RB
   14002e73c:	rex.X
   14002e73d:	rex.R
   14002e73e:	rex.W
   14002e73f:	rex pop rdx
   14002e741:	add    bh,bh
   14002e743:	add    DWORD PTR [rdi],edi
   14002e745:	(bad)  
   14002e746:	xor    BYTE PTR [rcx+0x56],dl
   14002e749:	(bad)  
   14002e74a:	jb     0x14002e7b5
   14002e74c:	(bad)  
   14002e74d:	outs   dx,BYTE PTR ds:[rsi]
   14002e74e:	je     0x14002e790
   14002e750:	rex push rcx
   14002e752:	rex.RB
   14002e753:	rex.B
   14002e754:	rex.B
   14002e755:	rex
   14002e756:	rex.B
   14002e757:	rex.RB
   14002e758:	rex.X push rsi
   14002e75a:	push   rcx
   14002e75b:	push   rbx
   14002e75c:	je     0x14002e7d0
   14002e75e:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   14002e765:	add    BYTE PTR [rcx],dl
   14002e767:	sbb    DWORD PTR [rdi],edi
   14002e769:	je     0x14002e7da
   14002e76b:	push   rbx
   14002e76c:	je     0x14002e7e0
   14002e76e:	imul   ebp,DWORD PTR [rsi+0x67],0x74535140
   14002e775:	jb     0x14002e7e0
   14002e777:	outs   dx,BYTE PTR ds:[rsi]
   14002e778:	addr32 push rdx
   14002e77a:	gs data16 rex
   14002e77d:	rex push rcx
   14002e77f:	rex.RB
   14002e780:	rex.X
   14002e781:	rex.B (bad) 
   14002e783:	push   r14
   14002e785:	push   rcx
   14002e786:	push   rbx
   14002e787:	je     0x14002e7fb
   14002e789:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   14002e790:	add    BYTE PTR [rax],al
   14002e792:	jle    0x14002e797
   14002e794:	(bad)  
   14002e795:	(bad)  
   14002e796:	xor    al,0x51
   14002e798:	push   rbx
   14002e799:	je     0x14002e80d
   14002e79b:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14002e7a2:	rex.B
   14002e7a3:	rex.B
   14002e7a4:	rex.B
   14002e7a5:	rex.RB
   14002e7a6:	push   r14
   14002e7a8:	xor    BYTE PTR [rax+0x41],al
   14002e7ab:	rex.RB
   14002e7ac:	rex.X push rsi
   14002e7ae:	xor    BYTE PTR [rax+0x40],al
   14002e7b1:	pop    rdx
   14002e7b2:	add    BYTE PTR [rax],al
   14002e7b4:	sub    al,0xf
   14002e7b6:	(bad)  
   14002e7b7:	ins    BYTE PTR es:[rdi],dx
   14002e7b8:	(bad)  
   14002e7b9:	jae    0x14002e82f
   14002e7bb:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14002e7bd:	fs gs js 0x14002e810
   14002e7c1:	rex push cx
   14002e7c4:	push   rbx
   14002e7c5:	je     0x14002e839
   14002e7c7:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14002e7ce:	rex.X
   14002e7cf:	rex.B
   14002e7d0:	rex.W push rsi
   14002e7d2:	push   rcx
   14002e7d3:	rex.XB push 0x40407261
   14002e7d9:	rex.W push rdi
   14002e7db:	xor    al,0x43
   14002e7dd:	(bad)  
   14002e7de:	jae    0x14002e845
   14002e7e0:	push   rbx
   14002e7e1:	outs   dx,BYTE PTR gs:[rsi]
   14002e7e3:	jae    0x14002e84e
   14002e7e5:	je     0x14002e850
   14002e7e7:	jbe    0x14002e852
   14002e7e9:	je     0x14002e864
   14002e7eb:	rex push rcx
   14002e7ed:	je     0x14002e82f
   14002e7ef:	rex
   14002e7f0:	rex pop rdx
   14002e7f2:	add    BYTE PTR [rax],al
   14002e7f4:	jns    0x14002e7f8
   14002e7f6:	(bad)  
   14002e7f7:	(bad)  
   14002e7f8:	xor    DWORD PTR [rcx+0x44],edx
   14002e7fb:	imul   esi,DWORD PTR [rdx+0x40],0x41455140
   14002e802:	rex.B
   14002e803:	rex pop rax
   14002e805:	pop    rdx
   14002e806:	add    BYTE PTR [rax],al
   14002e808:	jl     0x14002e815
   14002e80a:	(bad)  
   14002e80b:	gs js  0x14002e877
   14002e80e:	jae    0x14002e884
   14002e810:	jae    0x14002e852
   14002e812:	push   rcx
   14002e813:	imul   r14d,DWORD PTR [rdx+0x40],0x42455140
   14002e81b:	pop    r15
   14002e81d:	rex.WRX pop rax
   14002e81f:	pop    rdx
   14002e820:	add    BYTE PTR [rax],al
   14002e822:	mov    BYTE PTR [rax],al
   14002e824:	(bad)  
   14002e825:	(bad)  
   14002e826:	xor    BYTE PTR [rcx+0x44],dl
   14002e829:	imul   esi,DWORD PTR [rdx+0x40],0x41455140
   14002e830:	rex.B
   14002e831:	rex
   14002e832:	rex.B
   14002e833:	rex.RB
   14002e834:	rex.X push rsi
   14002e836:	push   rcx
   14002e837:	push   rbx
   14002e838:	je     0x14002e8ac
   14002e83a:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   14002e841:	add    BYTE PTR [rbx+0x14],cl
   14002e844:	(bad)  
   14002e845:	jb     0x14002e8ac
   14002e847:	jo     0x14002e8b5
   14002e849:	(bad)  
   14002e84a:	movsxd esp,DWORD PTR [rbp+0x40]
   14002e84d:	push   rcx
   14002e84e:	push   rbx
   14002e84f:	je     0x14002e8c3
   14002e851:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14002e858:	rex.B
   14002e859:	rex.B
   14002e85a:	rex.B
   14002e85b:	rex.RB
   14002e85c:	push   r14
   14002e85e:	xor    DWORD PTR [rax+0x56],eax
   14002e861:	push   rcx
   14002e862:	rex.XB push 0x40407261
   14002e868:	xor    BYTE PTR [rdi+0x34],dl
   14002e86b:	rex.XB (bad) 
   14002e86d:	jae    0x14002e8d4
   14002e86f:	push   rbx
   14002e870:	outs   dx,BYTE PTR gs:[rsi]
   14002e872:	jae    0x14002e8dd
   14002e874:	je     0x14002e8df
   14002e876:	jbe    0x14002e8e1
   14002e878:	je     0x14002e8f3
   14002e87a:	rex push rcx
   14002e87c:	je     0x14002e8be
   14002e87e:	rex
   14002e87f:	rex pop rdx
   14002e881:	add    BYTE PTR [rsi+0x303f3f01],dl
   14002e887:	push   rcx
   14002e888:	push   rbx
   14002e889:	je     0x14002e8fd
   14002e88b:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14002e892:	rex.B
   14002e893:	rex.B
   14002e894:	rex push rsi
   14002e896:	push   rcx
   14002e897:	rex.WR (bad) 
   14002e899:	je     0x14002e904
   14002e89b:	outs   dx,BYTE PTR ds:[rsi]
   14002e89c:	xor    DWORD PTR [rbx+0x74],edx
   14002e89f:	jb     0x14002e90a
   14002e8a1:	outs   dx,BYTE PTR ds:[rsi]
   14002e8a2:	addr32 rex
   14002e8a4:	rex
   14002e8a5:	rex pop rdx
   14002e8a7:	add    BYTE PTR [rbx],cl
   14002e8a9:	or     eax,0x646e693f
   14002e8ae:	gs js  0x14002e900
   14002e8b1:	rex push cx
   14002e8b4:	push   rbx
   14002e8b5:	je     0x14002e929
   14002e8b7:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14002e8be:	rex.X
   14002e8bf:	rex.B
   14002e8c0:	rex.W push rsi
   14002e8c2:	push   rcx
   14002e8c3:	rex.XB push 0x40407261
   14002e8c9:	rex.W push rdi
   14002e8cb:	xor    al,0x43
   14002e8cd:	(bad)  
   14002e8ce:	jae    0x14002e935
   14002e8d0:	push   rbx
   14002e8d1:	outs   dx,BYTE PTR gs:[rsi]
   14002e8d3:	jae    0x14002e93e
   14002e8d5:	je     0x14002e940
   14002e8d7:	jbe    0x14002e942
   14002e8d9:	je     0x14002e954
   14002e8db:	rex push rcx
   14002e8dd:	je     0x14002e91f
   14002e8df:	rex
   14002e8e0:	rex pop rdx
   14002e8e2:	add    BYTE PTR [rax],al
   14002e8e4:	add    BYTE PTR [rdx],al
   14002e8e6:	(bad)  
   14002e8e7:	(bad)  
   14002e8e8:	xor    BYTE PTR [rcx+0x56],dl
   14002e8eb:	(bad)  
   14002e8ec:	jb     0x14002e957
   14002e8ee:	(bad)  
   14002e8ef:	outs   dx,BYTE PTR ds:[rsi]
   14002e8f0:	je     0x14002e932
   14002e8f2:	rex push rcx
   14002e8f4:	rex.RB
   14002e8f5:	rex.B
   14002e8f6:	rex.B
   14002e8f7:	rex
   14002e8f8:	rex.B
   14002e8f9:	rex.RB
   14002e8fa:	rex.X push rsi
   14002e8fc:	push   rcx
   14002e8fd:	push   rbx
   14002e8fe:	je     0x14002e972
   14002e900:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   14002e907:	rex
   14002e908:	rex
   14002e909:	rex pop rdx
   14002e90b:	add    dh,ch
   14002e90d:	(bad)  
   14002e90e:	(bad)  
   14002e90f:	jae    0x14002e97a
   14002e911:	ins    DWORD PTR es:[rdi],dx
   14002e912:	jo     0x14002e980
   14002e914:	imul   esp,DWORD PTR [rsi+0x69],0x51406465
   14002e91b:	push   rbx
   14002e91c:	je     0x14002e990
   14002e91e:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14002e925:	rex.X
   14002e926:	rex.B (bad) 
   14002e928:	push   r14
   14002e92a:	xor    DWORD PTR [rax+0x58],eax
   14002e92d:	pop    rdx
   14002e92e:	add    BYTE PTR [rax],al
   14002e930:	push   rbp
   14002e931:	add    eax,0x51593f3f
   14002e936:	push   rbx
   14002e937:	je     0x14002e9ab
   14002e939:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14002e940:	rex.B
   14002e941:	rex.B
   14002e942:	rex.B
   14002e943:	rex.RB
   14002e944:	push   r14
   14002e946:	xor    BYTE PTR [rax+0x56],al
   14002e949:	push   rcx
   14002e94a:	rex.XB push 0x40407261
   14002e950:	rex pop rdx
   14002e952:	add    BYTE PTR [rax],al
   14002e954:	sub    dl,BYTE PTR [rdi]
   14002e956:	(bad)  
   14002e957:	jae    0x14002e9c9
   14002e959:	ins    BYTE PTR es:[rdi],dx
   14002e95a:	imul   esi,DWORD PTR [rax+rax*2+0x51],0x65747942
   14002e962:	rex.B jb 0x14002e9d7
   14002e965:	(bad)  
   14002e966:	jns    0x14002e9a8
   14002e968:	rex push rcx
   14002e96a:	rex.RB
   14002e96b:	rex.X
   14002e96c:	rex.B (bad) 
   14002e96e:	push   r14
   14002e970:	(bad)  
   14002e971:	and    al,0x51
   14002e973:	imul   r14,QWORD PTR [rbx+0x74],0x42515640
   14002e97b:	jns    0x14002e9f1
   14002e97d:	gs rex.B jb 0x14002e9f3
   14002e981:	(bad)  
   14002e982:	jns    0x14002e9c4
   14002e984:	rex
   14002e985:	rex
   14002e986:	rex
   14002e987:	rex.R
   14002e988:	rex pop rdx
   14002e98a:	add    BYTE PTR [rax],al
   14002e98c:	outs   dx,BYTE PTR ds:[rsi]
   14002e98d:	(bad)  
   14002e98e:	(bad)  
   14002e98f:	jae    0x14002ea05
   14002e991:	(bad)  
   14002e992:	jb     0x14002ea08
   14002e994:	jae    0x14002e9ed
   14002e996:	imul   esi,DWORD PTR [rax+rbp*2+0x40],0x74794251
   14002e99e:	gs rex.B jb 0x14002ea14
   14002e9a2:	(bad)  
   14002e9a3:	jns    0x14002e9e5
   14002e9a5:	rex push rcx
   14002e9a7:	rex.RB
   14002e9a8:	rex.X
   14002e9a9:	pop    r15
   14002e9ab:	rex.WRX push rax
   14002e9ad:	rex.RB
   14002e9ae:	rex.X
   14002e9af:	rex.R
   14002e9b0:	rex pop rdx
   14002e9b2:	add    BYTE PTR [rax],al
   14002e9b4:	sbb    DWORD PTR [rbx],eax
   14002e9b6:	(bad)  
   14002e9b7:	(bad)  
   14002e9b8:	xor    al,0x51
   14002e9ba:	rex.X jns 0x14002ea31
   14002e9bd:	gs rex.B jb 0x14002ea33
   14002e9c1:	(bad)  
   14002e9c2:	jns    0x14002ea04
   14002e9c4:	rex push rcx
   14002e9c6:	rex.RB
   14002e9c7:	rex.B
   14002e9c8:	rex.B
   14002e9c9:	rex.B
   14002e9ca:	rex.RB
   14002e9cb:	push   r14
   14002e9cd:	xor    BYTE PTR [rax+0x41],al
   14002e9d0:	rex.RB
   14002e9d1:	rex.X push rsi
   14002e9d3:	xor    BYTE PTR [rax+0x40],al
   14002e9d6:	pop    rdx
   14002e9d7:	add    BYTE PTR [rbx+0x13],bl
   14002e9da:	(bad)  
   14002e9db:	jb     0x14002ea42
   14002e9dd:	(bad)  
   14002e9de:	imul   r13,QWORD PTR fs:[rsi+0x65],0x4f495140
   14002e9e7:	rex.R
   14002e9e8:	gs jbe 0x14002ea54
   14002e9eb:	movsxd esp,DWORD PTR [rbp+0x40]
   14002e9ee:	rex push rcx
   14002e9f0:	rex.RB
   14002e9f1:	rex.B
   14002e9f2:	rex.B (bad) 
   14002e9f4:	push   r14
   14002e9f6:	push   rcx
   14002e9f7:	rex.X jns 0x14002ea6e
   14002e9fa:	gs rex.B jb 0x14002ea70
   14002e9fe:	(bad)  
   14002e9ff:	jns    0x14002ea41
   14002ea01:	rex pop rdi
   14002ea03:	rex.WX
   14002ea04:	rex pop rdx
   14002ea06:	add    BYTE PTR [rax],al
   14002ea08:	rex.WX add BYTE PTR [rdi],dil
   14002ea0b:	(bad)  
   14002ea0c:	xor    BYTE PTR [rcx+0x42],dl
   14002ea0f:	jns    0x14002ea85
   14002ea11:	gs rex.B jb 0x14002ea87
   14002ea15:	(bad)  
   14002ea16:	jns    0x14002ea58
   14002ea18:	rex push rcx
   14002ea1a:	rex.RB
   14002ea1b:	rex.B
   14002ea1c:	rex.B
   14002ea1d:	rex pop rax
   14002ea1f:	pop    rdx
   14002ea20:	add    BYTE PTR [rax],al
   14002ea22:	jge    0x14002ea2f
   14002ea24:	(bad)  
   14002ea25:	gs js  0x14002ea91
   14002ea28:	jae    0x14002ea9e
   14002ea2a:	jae    0x14002ea6c
   14002ea2c:	push   rcx
   14002ea2d:	imul   r13d,DWORD PTR [rbp+r12*2+0x40],0x42455140
   14002ea36:	pop    r15
   14002ea38:	rex.WRX pop rax
   14002ea3a:	pop    rdx
   14002ea3b:	add    ah,ch
   14002ea3d:	or     edi,DWORD PTR [rdi]
   14002ea3f:	imul   si,WORD PTR [rdx+0x73],0x4e74
   14002ea45:	outs   dx,DWORD PTR ds:[rsi]
   14002ea46:	fs gs rex push rcx
   14002ea4a:	rex.W (bad) 
   14002ea4c:	jae    0x14002eab6
   14002ea4e:	rex.R (bad) 
   14002ea50:	je     0x14002eab3
   14002ea52:	rex
   14002ea53:	rex push rcx
   14002ea55:	rex.RB
   14002ea56:	rex.B
   14002ea57:	push   r8
   14002ea59:	rex.RB
   14002ea5a:	push   r13
   14002ea5c:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14002ea5e:	fs rex xor DWORD PTR gs:[rax+0x58],eax
   14002ea64:	pop    rdx
   14002ea65:	add    BYTE PTR [rip+0x303f3f00],bh        # 0x17042296b
   14002ea6b:	push   rcx
   14002ea6c:	rex.B jae 0x14002eae2
   14002ea6f:	outs   dx,DWORD PTR ds:[rsi]
   14002ea70:	movsxd ebp,DWORD PTR [rcx+0x61]
   14002ea73:	je     0x14002eade
   14002ea75:	jbe    0x14002eadc
   14002ea77:	rex.WB je 0x14002eadf
   14002ea7a:	jb     0x14002eadd
   14002ea7c:	(bad)  
   14002ea7d:	ins    BYTE PTR es:[rdi],dx
   14002ea7e:	gs rex
   14002ea80:	rex push rcx
   14002ea82:	rex.RB
   14002ea83:	rex.B
   14002ea84:	rex.B
   14002ea85:	rex push rsi
   14002ea87:	push   rcx
   14002ea88:	rex.B jae 0x14002eafe
   14002ea8b:	outs   dx,DWORD PTR ds:[rsi]
   14002ea8c:	movsxd ebp,DWORD PTR [rcx+0x61]
   14002ea8f:	je     0x14002eafa
   14002ea91:	jbe    0x14002eaf8
   14002ea93:	rex.WB je 0x14002eafb
   14002ea96:	jb     0x14002eaf9
   14002ea98:	(bad)  
   14002ea99:	ins    BYTE PTR es:[rdi],dx
   14002ea9a:	gs rex.WB ins DWORD PTR es:[rdi],dx
   14002ea9d:	jo     0x14002eb0b
   14002ea9f:	rex push rcx
   14002eaa1:	je     0x14002eaf0
   14002eaa3:	gs je  0x14002eb07
   14002eaa6:	push   rsp
   14002eaa7:	jns    0x14002eb19
   14002eaa9:	gs push rax
   14002eaab:	jb     0x14002eb16
   14002eaad:	jbe    0x14002eb10
   14002eaaf:	je     0x14002eb16
   14002eab1:	rex
   14002eab2:	rex
   14002eab3:	rex pop rdx
   14002eab5:	add    bh,bh
   14002eab7:	add    bh,BYTE PTR [rdi]
   14002eab9:	(bad)  
   14002eaba:	xor    DWORD PTR [rbx+0x6f],esp
   14002eabd:	outs   dx,BYTE PTR ds:[rsi]
   14002eabe:	jae    0x14002eb34
   14002eac0:	pop    rdi
   14002eac1:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
   14002eac9:	rex push rcx
   14002eacb:	rex.B jae 0x14002eb41
   14002eace:	outs   dx,DWORD PTR ds:[rsi]
   14002eacf:	movsxd ebp,DWORD PTR [rcx+0x61]
   14002ead2:	je     0x14002eb3d
   14002ead4:	jbe    0x14002eb3b
   14002ead6:	rex.WB je 0x14002eb3e
   14002ead9:	jb     0x14002eb3c
   14002eadb:	(bad)  
   14002eadc:	ins    BYTE PTR es:[rdi],dx
   14002eadd:	gs rex
   14002eadf:	rex push rcx
   14002eae1:	rex.RB
   14002eae2:	rex.B
   14002eae3:	rex.B
   14002eae4:	rex pop rax
   14002eae6:	pop    rdx
   14002eae7:	add    bl,ch
   14002eae9:	add    al,0x3f
   14002eaeb:	(bad)  
   14002eaec:	movsxd r13d,DWORD PTR [r15+0x6e]
   14002eaf0:	jae    0x14002eb66
   14002eaf2:	pop    rdi
   14002eaf3:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
   14002eafb:	rex push rcx
   14002eafd:	rex.B jae 0x14002eb73
   14002eb00:	outs   dx,DWORD PTR ds:[rsi]
   14002eb01:	movsxd ebp,DWORD PTR [rcx+0x61]
   14002eb04:	je     0x14002eb6f
   14002eb06:	jbe    0x14002eb6d
   14002eb08:	rex.WB je 0x14002eb70
   14002eb0b:	jb     0x14002eb6e
   14002eb0d:	(bad)  
   14002eb0e:	ins    BYTE PTR es:[rdi],dx
   14002eb0f:	gs rex
   14002eb11:	rex push rcx
   14002eb13:	rex.RB
   14002eb14:	rex.B
   14002eb15:	rex.B
   14002eb16:	rex.B
   14002eb17:	rex.RB
   14002eb18:	push   r13
   14002eb1a:	xor    BYTE PTR [rcx],dh
   14002eb1c:	rex pop rax
   14002eb1e:	pop    rdx
   14002eb1f:	add    BYTE PTR [rax],bl
   14002eb21:	sbb    DWORD PTR [rdi],edi
   14002eb23:	je     0x14002eb94
   14002eb25:	push   rbx
   14002eb26:	je     0x14002eb9a
   14002eb28:	imul   ebp,DWORD PTR [rsi+0x67],0x61565140
   14002eb2f:	jb     0x14002eb9a
   14002eb31:	(bad)  
   14002eb32:	outs   dx,BYTE PTR ds:[rsi]
   14002eb33:	je     0x14002eb75
   14002eb35:	rex push rcx
   14002eb37:	rex.RB
   14002eb38:	rex.X
   14002eb39:	rex.B (bad) 
   14002eb3b:	push   r14
   14002eb3d:	push   rcx
   14002eb3e:	push   rbx
   14002eb3f:	je     0x14002ebb3
   14002eb41:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   14002eb48:	add    BYTE PTR [rax],al
   14002eb4a:	add    BYTE PTR [rdi],cl
   14002eb4c:	(bad)  
   14002eb4d:	imul   esp,DWORD PTR [rbp+0x79],0x40
   14002eb51:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14002eb54:	jae    0x14002ebca
   14002eb56:	pop    rdi
   14002eb57:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
   14002eb5f:	rex push rcx
   14002eb61:	rex.B jae 0x14002ebd7
   14002eb64:	outs   dx,DWORD PTR ds:[rsi]
   14002eb65:	movsxd ebp,DWORD PTR [rcx+0x61]
   14002eb68:	je     0x14002ebd3
   14002eb6a:	jbe    0x14002ebd1
   14002eb6c:	rex.WB je 0x14002ebd4
   14002eb6f:	jb     0x14002ebd2
   14002eb71:	(bad)  
   14002eb72:	ins    BYTE PTR es:[rdi],dx
   14002eb73:	gs rex
   14002eb75:	rex push rcx
   14002eb77:	rex.RB
   14002eb78:	rex.X
   14002eb79:	rex.B (bad) 
   14002eb7b:	rex.X push rsi
   14002eb7d:	push   rcx
   14002eb7e:	push   rsi
   14002eb7f:	(bad)  
   14002eb80:	jb     0x14002ebeb
   14002eb82:	(bad)  
   14002eb83:	outs   dx,BYTE PTR ds:[rsi]
   14002eb84:	je     0x14002ebc6
   14002eb86:	rex pop rax
   14002eb88:	pop    rdx
   14002eb89:	add    BYTE PTR [rdx+0x61763f1a],ah
   14002eb8f:	ins    BYTE PTR es:[rdi],dx
   14002eb90:	jne    0x14002ebf7
   14002eb92:	rex movsxd ebp,DWORD PTR [rdi+0x6e]
   14002eb96:	jae    0x14002ec0c
   14002eb98:	pop    rdi
   14002eb99:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
   14002eba1:	rex push rcx
   14002eba3:	rex.B jae 0x14002ec19
   14002eba6:	outs   dx,DWORD PTR ds:[rsi]
   14002eba7:	movsxd ebp,DWORD PTR [rcx+0x61]
   14002ebaa:	je     0x14002ec15
   14002ebac:	jbe    0x14002ec13
   14002ebae:	rex.WB je 0x14002ec16
   14002ebb1:	jb     0x14002ec14
   14002ebb3:	(bad)  
   14002ebb4:	ins    BYTE PTR es:[rdi],dx
   14002ebb5:	gs rex
   14002ebb7:	rex push rcx
   14002ebb9:	rex.RB
   14002ebba:	rex.X
   14002ebbb:	rex.B (bad) 
   14002ebbd:	rex.X push rsi
   14002ebbf:	push   rcx
   14002ebc0:	push   rsi
   14002ebc1:	(bad)  
   14002ebc2:	jb     0x14002ec2d
   14002ebc4:	(bad)  
   14002ebc5:	outs   dx,BYTE PTR ds:[rsi]
   14002ebc6:	je     0x14002ec08
   14002ebc8:	rex pop rax
   14002ebca:	pop    rdx
   14002ebcb:	add    dl,al
   14002ebcd:	add    al,0x3f
   14002ebcf:	(bad)  
   14002ebd0:	cmp    DWORD PTR [rbx+0x6f],esp
   14002ebd3:	outs   dx,BYTE PTR ds:[rsi]
   14002ebd4:	jae    0x14002ec4a
   14002ebd6:	pop    rdi
   14002ebd7:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
   14002ebdf:	rex push rcx
   14002ebe1:	rex.B jae 0x14002ec57
   14002ebe4:	outs   dx,DWORD PTR ds:[rsi]
   14002ebe5:	movsxd ebp,DWORD PTR [rcx+0x61]
   14002ebe8:	je     0x14002ec53
   14002ebea:	jbe    0x14002ec51
   14002ebec:	rex.WB je 0x14002ec54
   14002ebef:	jb     0x14002ec52
   14002ebf1:	(bad)  
   14002ebf2:	ins    BYTE PTR es:[rdi],dx
   14002ebf3:	gs rex
   14002ebf5:	rex push rcx
   14002ebf7:	rex.RB
   14002ebf8:	rex.X
   14002ebf9:	pop    r15
   14002ebfb:	rex.WRX
   14002ebfc:	rex.B
   14002ebfd:	rex.RB
   14002ebfe:	rex.X push rbp
   14002ec00:	xor    BYTE PTR [rcx],dh
   14002ec02:	rex
   14002ec03:	rex pop rdx
   14002ec05:	add    ah,bl
   14002ec07:	or     bh,BYTE PTR [rdi]
   14002ec09:	outs   dx,BYTE PTR gs:[rsi]
   14002ec0b:	fs rex push rcx
   14002ec0e:	rex.B jae 0x14002ec84
   14002ec11:	outs   dx,DWORD PTR ds:[rsi]
   14002ec12:	movsxd ebp,DWORD PTR [rcx+0x61]
   14002ec15:	je     0x14002ec80
   14002ec17:	jbe    0x14002ec7e
   14002ec19:	rex.WB je 0x14002ec81
   14002ec1c:	jb     0x14002ec7f
   14002ec1e:	(bad)  
   14002ec1f:	ins    BYTE PTR es:[rdi],dx
   14002ec20:	gs rex
   14002ec22:	rex push rcx
   14002ec24:	rex.RB
   14002ec25:	rex.X
   14002ec26:	rex.B (bad) 
   14002ec28:	push   r13
   14002ec2a:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14002ec2d:	jae    0x14002eca3
   14002ec2f:	pop    rdi
   14002ec30:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
   14002ec38:	rex xor DWORD PTR [rax+0x58],eax
   14002ec3c:	pop    rdx
   14002ec3d:	add    BYTE PTR [rbx],bh
   14002ec3f:	(bad)  
   14002ec40:	(bad)  
   14002ec41:	(bad)  
   14002ec42:	imul   ebp,DWORD PTR gs:[esi+0x40],0x73734151
   14002ec4b:	outs   dx,DWORD PTR ds:[rsi]
   14002ec4c:	movsxd ebp,DWORD PTR [rcx+0x61]
   14002ec4f:	je     0x14002ecba
   14002ec51:	jbe    0x14002ecb8
   14002ec53:	rex.WB je 0x14002ecbb
   14002ec56:	jb     0x14002ecb9
   14002ec58:	(bad)  
   14002ec59:	ins    BYTE PTR es:[rdi],dx
   14002ec5a:	gs rex
   14002ec5c:	rex push rcx
   14002ec5e:	rex.RB
   14002ec5f:	rex.X
   14002ec60:	rex.B (bad) 
   14002ec62:	push   r13
   14002ec64:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14002ec67:	jae    0x14002ecdd
   14002ec69:	pop    rdi
   14002ec6a:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
   14002ec72:	rex xor DWORD PTR [rax+0x58],eax
   14002ec76:	pop    rdx
   14002ec77:	add    al,al
   14002ec79:	or     al,0x3f
   14002ec7b:	push   0x65527361
   14002ec80:	imul   esi,DWORD PTR [ebx+0x74],0x64657265
   14002ec88:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14002ec8a:	outs   dx,BYTE PTR ds:[rsi]
   14002ec8b:	jbe    0x14002ecf2
   14002ec8d:	jb     0x14002ed03
   14002ec8f:	gs jb  0x14002ecd8
   14002ec92:	jne    0x14002ed02
   14002ec94:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14002ec98:	outs   dx,BYTE PTR ds:[rsi]
   14002ec99:	rex push rcx
   14002ec9b:	rex.WRB
   14002ec9c:	gs je  0x14002ed00
   14002ec9f:	push   rsp
   14002eca0:	jns    0x14002ed12
   14002eca2:	gs rex
   14002eca4:	rex push rbx
   14002eca6:	pop    r15
   14002eca8:	rex.WRX
   14002eca9:	rex.W
   14002ecaa:	rex.W
   14002ecab:	rex pop rdx
   14002ecad:	add    BYTE PTR [rdi],bl
   14002ecaf:	(bad)  
   14002ecb0:	(bad)  
   14002ecb1:	jae    0x14002ed18
   14002ecb3:	je     0x14002ed05
   14002ecb5:	(bad)  
   14002ecb6:	jb     0x14002ed1d
   14002ecb8:	outs   dx,BYTE PTR ds:[rsi]
   14002ecb9:	je     0x14002ecfb
   14002ecbb:	push   rcx
   14002ecbc:	rex.WRB (bad) 
   14002ecbe:	jo     0x14002ed0e
   14002ecc0:	outs   dx,DWORD PTR ds:[rsi]
   14002ecc1:	fs gs rex.X (bad) 
   14002ecc5:	jae    0x14002ed2c
   14002ecc7:	rex
   14002ecc8:	rex push rcx
   14002ecca:	rex.RB
   14002eccb:	rex.B
   14002eccc:	pop    r8
   14002ecce:	push   rax
   14002eccf:	rex.RB
   14002ecd0:	push   r13
   14002ecd2:	xor    DWORD PTR [rax+0x40],eax
   14002ecd5:	pop    rdx
   14002ecd6:	add    BYTE PTR [rax],al
   14002ecd8:	inc    DWORD PTR [rsi]
   14002ecda:	(bad)  
   14002ecdb:	(bad)  
   14002ecdc:	je     0x14002ed1e
   14002ecde:	push   rcx
   14002ecdf:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   14002ece7:	rex
   14002ece8:	rex push rcx
   14002ecea:	rex.RB
   14002eceb:	rex.X
   14002ecec:	push   r8
   14002ecee:	rex.RB
   14002ecef:	push   r8
   14002ecf1:	rex.RB
   14002ecf2:	pop    r8
   14002ecf4:	rex.W
   14002ecf5:	rex pop rdx
   14002ecf7:	add    BYTE PTR [rdi],ch
   14002ecf9:	(bad)  
   14002ecfa:	(bad)  
   14002ecfb:	jae    0x14002ed6d
   14002ecfd:	ins    BYTE PTR es:[rdi],dx
   14002ecfe:	imul   esi,DWORD PTR [rax+rax*2+0x51],0x69727453
   14002ed06:	outs   dx,BYTE PTR ds:[rsi]
   14002ed07:	addr32 rex
   14002ed09:	rex push rcx
   14002ed0b:	rex.RB
   14002ed0c:	rex.X
   14002ed0d:	rex.B (bad) 
   14002ed0f:	push   r14
   14002ed11:	push   rcx
   14002ed12:	push   rbx
   14002ed13:	je     0x14002ed87
   14002ed15:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   14002ed1c:	rex
   14002ed1d:	rex push rsi
   14002ed1f:	push   rcx
   14002ed20:	rex.XB push 0x40407261
   14002ed26:	push   rdi
   14002ed27:	xor    al,0x53
   14002ed29:	jo     0x14002ed97
   14002ed2b:	imul   esi,DWORD PTR [rdx+rax*2+0x65],0x69766168
   14002ed33:	outs   dx,DWORD PTR ds:[rsi]
   14002ed34:	jb     0x14002ed76
   14002ed36:	xor    DWORD PTR [rax+0x57],eax
   14002ed39:	xor    al,0x43
   14002ed3b:	(bad)  
   14002ed3c:	jae    0x14002eda3
   14002ed3e:	push   rbx
   14002ed3f:	outs   dx,BYTE PTR gs:[rsi]
   14002ed41:	jae    0x14002edac
   14002ed43:	je     0x14002edae
   14002ed45:	jbe    0x14002edb0
   14002ed47:	je     0x14002edc2
   14002ed49:	rex push rcx
   14002ed4b:	je     0x14002ed8d
   14002ed4d:	rex
   14002ed4e:	rex pop rdx
   14002ed50:	add    BYTE PTR [rax],al
   14002ed52:	sbb    al,0x19
   14002ed54:	(bad)  
   14002ed55:	je     0x14002edc6
   14002ed57:	push   rbx
   14002ed58:	je     0x14002edcc
   14002ed5a:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   14002ed61:	rex push rcx
   14002ed63:	push   rsi
   14002ed64:	(bad)  
   14002ed65:	jb     0x14002edd0
   14002ed67:	(bad)  
   14002ed68:	outs   dx,BYTE PTR ds:[rsi]
   14002ed69:	je     0x14002edab
   14002ed6b:	rex push rcx
   14002ed6d:	rex.RB
   14002ed6e:	rex.X
   14002ed6f:	rex.B (bad) 
   14002ed71:	push   r14
   14002ed73:	push   rcx
   14002ed74:	push   rbx
   14002ed75:	je     0x14002ede9
   14002ed77:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   14002ed7e:	rex
   14002ed7f:	rex pop rax
   14002ed81:	pop    rdx
   14002ed82:	add    BYTE PTR [rax],al
   14002ed84:	or     al,0x2
   14002ed86:	(bad)  
   14002ed87:	(bad)  
   14002ed88:	xor    BYTE PTR [rcx+0x56],dl
   14002ed8b:	(bad)  
   14002ed8c:	jb     0x14002edf7
   14002ed8e:	(bad)  
   14002ed8f:	outs   dx,BYTE PTR ds:[rsi]
   14002ed90:	je     0x14002edd2
   14002ed92:	rex push rcx
   14002ed94:	rex.RB
   14002ed95:	rex.B
   14002ed96:	rex.B
   14002ed97:	rex push rsi
   14002ed99:	push   rcx
   14002ed9a:	rex.WR (bad) 
   14002ed9c:	je     0x14002ee07
   14002ed9e:	outs   dx,BYTE PTR ds:[rsi]
   14002ed9f:	xor    DWORD PTR [rbx+0x74],edx
   14002eda2:	jb     0x14002ee0d
   14002eda4:	outs   dx,BYTE PTR ds:[rsi]
   14002eda5:	addr32 rex
   14002eda7:	rex
   14002eda8:	rex pop rdx
   14002edaa:	add    BYTE PTR [rax],al
   14002edac:	jmp    0x1b0722cc1
   14002edb1:	outs   dx,BYTE PTR gs:[rsi]
   14002edb3:	rex push rcx
   14002edb5:	imul   r13d,DWORD PTR [rbp+r12*2+0x40],0x41455140
   14002edbe:	pop    r15
   14002edc0:	rex.WRX push rax
   14002edc2:	rex.RB
   14002edc3:	push   r13
   14002edc5:	pop    rdi
   14002edc6:	imul   ebp,DWORD PTR [rdi+0x62],0x40406675
   14002edcd:	push   rsi
   14002edce:	(bad)  
   14002edcf:	and    al,0x51
   14002edd1:	rex.RX ins BYTE PTR es:[rdi],dx
   14002edd3:	(bad)  
   14002edd4:	addr32 jae 0x14002ee17
   14002edd7:	push   rdi
   14002edd8:	xor    al,0x4f
   14002edda:	jo     0x14002ee41
   14002eddc:	outs   dx,BYTE PTR ds:[rsi]
   14002eddd:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14002eddf:	fs gs rex.RX ins BYTE PTR es:[rdi],dx
   14002ede3:	(bad)  
   14002ede4:	addr32 rex push rcx
   14002ede7:	rex.WB
   14002ede8:	rex.WRXB
   14002ede9:	rex.R
   14002edea:	gs jbe 0x14002ee56
   14002eded:	movsxd esp,DWORD PTR [rbp+0x40]
   14002edf0:	rex
   14002edf1:	rex
   14002edf2:	rex push rsi
   14002edf4:	(bad)  
   14002edf5:	and    al,0x51
   14002edf7:	rex.RX ins BYTE PTR es:[rdi],dx
   14002edf9:	(bad)  
   14002edfa:	addr32 jae 0x14002ee3d
   14002edfd:	push   rdi
   14002edfe:	xor    al,0x46
   14002ee00:	imul   ebp,DWORD PTR [rbp+riz*2+0x48],0x6c646e61
   14002ee08:	gs rex.RX ins BYTE PTR es:[rdi],dx
   14002ee0b:	(bad)  
   14002ee0c:	addr32 rex push rcx
   14002ee0f:	imul   r13d,DWORD PTR [rbp+r12*2+0x44],0x63697665
   14002ee18:	gs rex
   14002ee1a:	rex
   14002ee1b:	rex
   14002ee1c:	rex
   14002ee1d:	rex pop rdx
   14002ee1f:	add    BYTE PTR [rax+0x303f3f00],dh
   14002ee25:	push   rcx
   14002ee26:	imul   r13d,DWORD PTR [rbp+r12*2+0x40],0x41455140
   14002ee2f:	rex.B
   14002ee30:	rex pop rax
   14002ee32:	pop    rdx
   14002ee33:	add    BYTE PTR [rdx+0x2],bh
   14002ee36:	(bad)  
   14002ee37:	(bad)  
   14002ee38:	xor    DWORD PTR [rcx+0x44],edx
   14002ee3b:	imul   esi,DWORD PTR [rdx+0x49],0x61726574
   14002ee42:	je     0x14002eeb3
   14002ee44:	jb     0x14002ee86
   14002ee46:	rex push rcx
   14002ee48:	rex.RB
   14002ee49:	rex.B
   14002ee4a:	rex.B
   14002ee4b:	rex pop rax
   14002ee4d:	pop    rdx
   14002ee4e:	add    BYTE PTR [rax],al
   14002ee50:	cmp    eax,DWORD PTR [rsi]
   14002ee52:	(bad)  
   14002ee53:	(bad)  
   14002ee54:	(bad)
   14002ee59:	je     0x14002eec0
   14002ee5b:	imul   r13d,DWORD PTR [rbp+r12*2+0x50],0x40687461
   14002ee64:	push   rcx
   14002ee65:	imul   r13d,DWORD PTR [rbp+r12*2+0x49],0x406f666e
   14002ee6e:	rex push rcx
   14002ee70:	rex.RB
   14002ee71:	rex.X
   14002ee72:	rex.B (bad) 
   14002ee74:	push   r14
   14002ee76:	push   rcx
   14002ee77:	push   rbx
   14002ee78:	je     0x14002eeec
   14002ee7a:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   14002ee81:	add    BYTE PTR [rdx],al
   14002ee83:	(bad)  
   14002ee84:	(bad)  
   14002ee85:	imul   esi,DWORD PTR [rbx+0x46],0x40656c69
   14002ee8c:	push   rcx
   14002ee8d:	imul   r13d,DWORD PTR [rbp+r12*2+0x49],0x406f666e
   14002ee96:	rex push rcx
   14002ee98:	rex.RB
   14002ee99:	rex.X
   14002ee9a:	pop    r15
   14002ee9c:	rex.WRX pop rax
   14002ee9e:	pop    rdx
   14002ee9f:	add    BYTE PTR [rcx*1+0x646e693f],cl
   14002eea6:	gs js  0x14002eef8
   14002eea9:	rex push cx
   14002eeac:	push   rbx
   14002eead:	je     0x14002ef21
   14002eeaf:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14002eeb6:	rex.X
   14002eeb7:	rex.B
   14002eeb8:	rex.W push rsi
   14002eeba:	push   rcx
   14002eebb:	rex.WR (bad) 
   14002eebd:	je     0x14002ef28
   14002eebf:	outs   dx,BYTE PTR ds:[rsi]
   14002eec0:	xor    DWORD PTR [rbx+0x74],edx
   14002eec3:	jb     0x14002ef2e
   14002eec5:	outs   dx,BYTE PTR ds:[rsi]
   14002eec6:	addr32 rex
   14002eec8:	rex
   14002eec9:	rex.W push rdi
   14002eecb:	xor    al,0x43
   14002eecd:	(bad)  
   14002eece:	jae    0x14002ef35
   14002eed0:	push   rbx
   14002eed1:	outs   dx,BYTE PTR gs:[rsi]
   14002eed3:	jae    0x14002ef3e
   14002eed5:	je     0x14002ef40
   14002eed7:	jbe    0x14002ef42
   14002eed9:	je     0x14002ef54
   14002eedb:	rex push rcx
   14002eedd:	je     0x14002ef1f
   14002eedf:	rex
   14002eee0:	rex pop rdx
   14002eee2:	add    BYTE PTR [rax],al
   14002eee4:	adc    ecx,DWORD PTR [rbx]
   14002eee6:	(bad)  
   14002eee7:	outs   dx,BYTE PTR gs:[rsi]
   14002eee9:	je     0x14002ef5d
   14002eeeb:	jns    0x14002ef36
   14002eeed:	outs   dx,BYTE PTR ds:[rsi]
   14002eeee:	outs   dx,WORD PTR ds:[rsi]
   14002eef0:	imul   r14,QWORD PTR [rbx+0x74],0x69445140
   14002eef8:	jb     0x14002ef3a
   14002eefa:	rex push rcx
   14002eefc:	rex.RB
   14002eefd:	rex.X
   14002eefe:	rex.B (bad) 
   14002ef00:	push   r14
   14002ef02:	(bad)  
   14002ef03:	and    al,0x51
   14002ef05:	imul   r14,QWORD PTR [rbx+0x74],0x46515640
   14002ef0d:	imul   ebp,DWORD PTR [rbp+riz*2+0x49],0x406f666e
   14002ef15:	rex
   14002ef16:	rex
   14002ef17:	rex push rsi
   14002ef19:	(bad)  
   14002ef1a:	and    al,0x51
   14002ef1c:	rex.RX ins BYTE PTR es:[rdi],dx
   14002ef1e:	(bad)  
   14002ef1f:	addr32 jae 0x14002ef62
   14002ef22:	push   rdi
   14002ef23:	xor    al,0x46
   14002ef25:	imul   ebp,DWORD PTR [rsp+rsi*2+0x65],0x44514072
   14002ef2d:	imul   esi,DWORD PTR [rdx+0x40],0x56404040
   14002ef34:	(bad)  
   14002ef35:	and    al,0x51
   14002ef37:	rex.RX ins BYTE PTR es:[rdi],dx
   14002ef39:	(bad)  
   14002ef3a:	addr32 jae 0x14002ef7d
   14002ef3d:	push   rdi
   14002ef3e:	xor    al,0x53
   14002ef40:	outs   dx,DWORD PTR ds:[rsi]
   14002ef41:	jb     0x14002efb7
   14002ef43:	rex.RX ins BYTE PTR es:[rdi],dx
   14002ef45:	(bad)  
   14002ef46:	addr32 rex push rcx
   14002ef49:	imul   r14d,DWORD PTR [rdx+0x40],0x40404040
   14002ef51:	pop    rdx
   14002ef52:	add    BYTE PTR [rax],al
   14002ef54:	mov    ah,0xb
   14002ef56:	(bad)  
   14002ef57:	imul   bp,WORD PTR [rbp+riz*2+0x50],0x7461
   14002ef5e:	push   0x69445140
   14002ef63:	jb     0x14002efae
   14002ef65:	je     0x14002efcc
   14002ef67:	jb     0x14002efca
   14002ef69:	je     0x14002efda
   14002ef6b:	jb     0x14002efad
   14002ef6d:	rex push rcx
   14002ef6f:	rex.RB
   14002ef70:	rex.X
   14002ef71:	rex.B (bad) 
   14002ef73:	push   r14
   14002ef75:	push   rcx
   14002ef76:	push   rbx
   14002ef77:	je     0x14002efeb
   14002ef79:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   14002ef80:	add    BYTE PTR [rax],al
   14002ef82:	nop
   14002ef83:	adc    BYTE PTR [rdi],bh
   14002ef85:	outs   dx,BYTE PTR ds:[rsi]
   14002ef86:	gs js  0x14002effd
   14002ef89:	rex push rcx
   14002ef8b:	imul   r14d,DWORD PTR [rdx+0x49],0x61726574
   14002ef93:	je     0x14002f004
   14002ef95:	jb     0x14002efd7
   14002ef97:	rex push rcx
   14002ef99:	rex.RB
   14002ef9a:	rex.B
   14002ef9b:	rex.B (bad) 
   14002ef9d:	push   r14
   14002ef9f:	push   rcx
   14002efa0:	push   rbx
   14002efa1:	je     0x14002f015
   14002efa3:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   14002efaa:	add    BYTE PTR [rax],al
   14002efac:	mov    ah,0xc
   14002efae:	(bad)  
   14002efaf:	push   0x654e7361
   14002efb4:	js     0x14002f02a
   14002efb6:	rex push rcx
   14002efb8:	imul   r14d,DWORD PTR [rdx+0x49],0x61726574
   14002efc0:	je     0x14002f031
   14002efc2:	jb     0x14002f004
   14002efc4:	rex push rcx
   14002efc6:	rex.RB
   14002efc7:	rex.X
   14002efc8:	pop    r15
   14002efca:	rex.WRX pop rax
   14002efcc:	pop    rdx
   14002efcd:	add    BYTE PTR [rbx+0x303f3f00],cl
   14002efd3:	push   rcx
   14002efd4:	imul   r14d,DWORD PTR [rdx+0x49],0x61726574
   14002efdc:	je     0x14002f04d
   14002efde:	jb     0x14002f020
   14002efe0:	rex push rcx
   14002efe2:	rex.RB
   14002efe3:	rex.B
   14002efe4:	rex.B
   14002efe5:	rex
   14002efe6:	rex.B
   14002efe7:	rex.RB
   14002efe8:	rex.X push rsi
   14002efea:	push   rcx
   14002efeb:	push   rbx
   14002efec:	je     0x14002f060
   14002efee:	imul   ebp,DWORD PTR [rsi+0x67],0x3f564040
   14002eff5:	and    al,0x51
   14002eff7:	rex.RX ins BYTE PTR es:[rdi],dx
   14002eff9:	(bad)  
   14002effa:	addr32 jae 0x14002f03d
   14002effd:	push   rdi
   14002effe:	xor    al,0x46
   14002f000:	imul   ebp,DWORD PTR [rsp+rsi*2+0x65],0x44514072
   14002f008:	imul   esi,DWORD PTR [rdx+0x40],0x56404040
   14002f00f:	(bad)  
   14002f010:	and    al,0x51
   14002f012:	rex.RX ins BYTE PTR es:[rdi],dx
   14002f014:	(bad)  
   14002f015:	addr32 jae 0x14002f058
   14002f018:	push   rdi
   14002f019:	xor    al,0x49
   14002f01b:	je     0x14002f082
   14002f01d:	jb     0x14002f080
   14002f01f:	je     0x14002f090
   14002f021:	jb     0x14002f069
   14002f023:	ins    BYTE PTR es:[rdi],dx
   14002f024:	(bad)  
   14002f025:	addr32 rex push rcx
   14002f028:	imul   r14d,DWORD PTR [rdx+0x49],0x61726574
   14002f030:	je     0x14002f0a1
   14002f032:	jb     0x14002f074
   14002f034:	rex
   14002f035:	rex
   14002f036:	rex
   14002f037:	rex pop rdx
   14002f039:	add    BYTE PTR [rdi+0x61633f07],bl
   14002f03f:	outs   dx,BYTE PTR ds:[rsi]
   14002f040:	outs   dx,DWORD PTR ds:[rsi]
   14002f041:	outs   dx,BYTE PTR ds:[rsi]
   14002f042:	imul   esp,DWORD PTR [rbx+0x61],0x7461506c
   14002f049:	push   0x69445140
   14002f04e:	jb     0x14002f090
   14002f050:	rex push rcx
   14002f052:	rex.RB
   14002f053:	rex.X
   14002f054:	rex.B (bad) 
   14002f056:	push   r14
   14002f058:	push   rcx
   14002f059:	push   rbx
   14002f05a:	je     0x14002f0ce
   14002f05c:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   14002f063:	add    dh,bl
   14002f065:	sbb    bh,BYTE PTR [rdi]
   14002f067:	ja     0x14002f0d2
   14002f069:	ins    BYTE PTR es:[rdi],dx
   14002f06a:	ins    BYTE PTR es:[rdi],dx
   14002f06b:	rex.RXB jb 0x14002f0dd
   14002f06e:	ja     0x14002f0b0
   14002f070:	push   rcx
   14002f071:	rex.W (bad) 
   14002f073:	jae    0x14002f0dd
   14002f075:	rex.R (bad) 
   14002f077:	je     0x14002f0da
   14002f079:	rex
   14002f07a:	rex push rcx
   14002f07c:	rex.RB
   14002f07d:	rex.B
   14002f07e:	pop    r15
   14002f080:	rex.WRX pop rax
   14002f082:	pop    rdx
   14002f083:	add    BYTE PTR [rdx+0x313f3f02],bl
   14002f089:	push   rcx
   14002f08a:	rex.WX jae 0x14002f0fc
   14002f08d:	outs   dx,BYTE PTR ds:[rsi]
   14002f08e:	rex.B jb 0x14002f103
   14002f091:	(bad)  
   14002f092:	jns    0x14002f0d4
   14002f094:	rex push rcx
   14002f096:	rex.RB
   14002f097:	rex.B
   14002f098:	rex.B
   14002f099:	rex pop rax
   14002f09b:	pop    rdx
   14002f09c:	add    BYTE PTR [rax],al
   14002f09e:	fwait
   14002f09f:	add    bh,BYTE PTR [rdi]
   14002f0a1:	(bad)  
   14002f0a2:	xor    DWORD PTR [rcx+0x4a],edx
   14002f0a5:	jae    0x14002f116
   14002f0a7:	outs   dx,BYTE PTR ds:[rsi]
   14002f0a8:	rex.R outs dx,DWORD PTR ds:[rsi]
   14002f0aa:	movsxd esi,DWORD PTR [rbp+0x6d]
   14002f0ad:	outs   dx,BYTE PTR gs:[rsi]
   14002f0af:	je     0x14002f0f1
   14002f0b1:	rex push rcx
   14002f0b3:	rex.RB
   14002f0b4:	rex.B
   14002f0b5:	rex.B
   14002f0b6:	rex pop rax
   14002f0b8:	pop    rdx
   14002f0b9:	add    BYTE PTR [rsi+0x6f743f18],bl
   14002f0bf:	rex.WX jae 0x14002f131
   14002f0c2:	outs   dx,BYTE PTR ds:[rsi]
   14002f0c3:	rex push rcx
   14002f0c5:	rex.WX jae 0x14002f137
   14002f0c8:	outs   dx,BYTE PTR ds:[rsi]
   14002f0c9:	rex.R outs dx,DWORD PTR ds:[rsi]
   14002f0cb:	movsxd esi,DWORD PTR [rbp+0x6d]
   14002f0ce:	outs   dx,BYTE PTR gs:[rsi]
   14002f0d0:	je     0x14002f112
   14002f0d2:	rex push rcx
   14002f0d4:	rex.RB
   14002f0d5:	rex.X
   14002f0d6:	rex.B (bad) 
   14002f0d8:	push   r14
   14002f0da:	push   rcx
   14002f0db:	rex.X jns 0x14002f152
   14002f0de:	gs rex.B jb 0x14002f154
   14002f0e2:	(bad)  
   14002f0e3:	jns    0x14002f125
   14002f0e5:	rex pop rax
   14002f0e7:	pop    rdx
   14002f0e8:	add    BYTE PTR [rax],al
   14002f0ea:	loopne 0x14002f0ec
   14002f0ec:	(bad)  
   14002f0ed:	(bad)  
   14002f0ee:	xor    BYTE PTR [rcx+0x4a],dl
   14002f0f1:	jae    0x14002f162
   14002f0f3:	outs   dx,BYTE PTR ds:[rsi]
   14002f0f4:	rex.R outs dx,DWORD PTR ds:[rsi]
   14002f0f6:	movsxd esi,DWORD PTR [rbp+0x6d]
   14002f0f9:	outs   dx,BYTE PTR gs:[rsi]
   14002f0fb:	je     0x14002f13d
   14002f0fd:	rex push rcx
   14002f0ff:	rex.RB
   14002f100:	rex.B
   14002f101:	rex.B
   14002f102:	rex
   14002f103:	rex.B
   14002f104:	rex.RB
   14002f105:	rex.X push rsi
   14002f107:	push   rcx
   14002f108:	rex.WX jae 0x14002f17a
   14002f10b:	outs   dx,BYTE PTR ds:[rsi]
   14002f10c:	rex.B jb 0x14002f181
   14002f10f:	(bad)  
   14002f110:	jns    0x14002f152
   14002f112:	rex
   14002f113:	rex pop rdx
   14002f115:	add    BYTE PTR [rbp+0xc],bl
   14002f118:	(bad)  
   14002f119:	data16 jb 0x14002f18b
   14002f11c:	ins    DWORD PTR es:[rdi],dx
   14002f11d:	push   rsi
   14002f11e:	(bad)  
   14002f11f:	jb     0x14002f18a
   14002f121:	(bad)  
   14002f122:	outs   dx,BYTE PTR ds:[rsi]
   14002f123:	je     0x14002f171
   14002f125:	imul   esi,DWORD PTR [rbx+0x74],0x734a5140
   14002f12c:	outs   dx,DWORD PTR ds:[rsi]
   14002f12d:	outs   dx,BYTE PTR ds:[rsi]
   14002f12e:	rex.B jb 0x14002f1a3
   14002f131:	(bad)  
   14002f132:	jns    0x14002f174
   14002f134:	rex push rbx
   14002f136:	rex.B (bad) 
   14002f138:	push   r14
   14002f13a:	xor    DWORD PTR [rax+0x41],eax
   14002f13d:	rex.RB
   14002f13e:	rex.X push rsi
   14002f140:	(bad)  
   14002f141:	and    al,0x51
   14002f143:	imul   r14,QWORD PTR [rbx+0x74],0x56515640
   14002f14b:	(bad)  
   14002f14c:	jb     0x14002f1b7
   14002f14e:	(bad)  
   14002f14f:	outs   dx,BYTE PTR ds:[rsi]
   14002f150:	je     0x14002f192
   14002f152:	rex
   14002f153:	rex
   14002f154:	rex
   14002f155:	rex pop rdx
   14002f157:	add    BYTE PTR [rsi+0x6f633f08],dl
   14002f15d:	outs   dx,BYTE PTR ds:[rsi]
   14002f15e:	jae    0x14002f1d4
   14002f160:	rex.R (bad) 
   14002f162:	je     0x14002f1c5
   14002f164:	rex push rcx
   14002f166:	rex.X jns 0x14002f1dd
   14002f169:	gs rex.B jb 0x14002f1df
   14002f16d:	(bad)  
   14002f16e:	jns    0x14002f1b0
   14002f170:	rex push rcx
   14002f172:	rex.RB
   14002f173:	rex.X
   14002f174:	push   r8
   14002f176:	rex.RB
   14002f177:	rex.X
   14002f178:	rex.R pop rax
   14002f17a:	pop    rdx
   14002f17b:	add    BYTE PTR [rbx+0x6f743f18],dh
   14002f181:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14002f183:	movsxd esp,DWORD PTR [rcx+0x6c]
   14002f186:	cmp    BYTE PTR [rdx+0x69],al
   14002f189:	je     0x14002f1cb
   14002f18b:	push   rcx
   14002f18c:	push   rbx
   14002f18d:	je     0x14002f201
   14002f18f:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14002f196:	rex.X
   14002f197:	rex.B (bad) 
   14002f199:	push   r14
   14002f19b:	push   rcx
   14002f19c:	rex.X jns 0x14002f213
   14002f19f:	gs rex.B jb 0x14002f215
   14002f1a3:	(bad)  
   14002f1a4:	jns    0x14002f1e6
   14002f1a6:	rex pop rax
   14002f1a8:	pop    rdx
   14002f1a9:	add    BYTE PTR [rcx+0x17],dh
   14002f1ac:	(bad)  
   14002f1ad:	jae    0x14002f223
   14002f1af:	(bad)  
   14002f1b0:	jb     0x14002f226
   14002f1b2:	jae    0x14002f20b
   14002f1b4:	imul   esi,DWORD PTR [rax+rbp*2+0x40],0x72745351
   14002f1bc:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14002f1c3:	rex.X
   14002f1c4:	pop    r15
   14002f1c6:	rex.WRX push rsi
   14002f1c8:	push   rcx
   14002f1c9:	rex.XB push 0x40407261
   14002f1cf:	push   rdi
   14002f1d0:	xor    al,0x43
   14002f1d2:	(bad)  
   14002f1d3:	jae    0x14002f23a
   14002f1d5:	push   rbx
   14002f1d6:	outs   dx,BYTE PTR gs:[rsi]
   14002f1d8:	jae    0x14002f243
   14002f1da:	je     0x14002f245
   14002f1dc:	jbe    0x14002f247
   14002f1de:	je     0x14002f259
   14002f1e0:	rex push rcx
   14002f1e2:	je     0x14002f224
   14002f1e4:	rex
   14002f1e5:	rex pop rdx
   14002f1e7:	add    BYTE PTR [rdi+0x2],ch
   14002f1ea:	(bad)  
   14002f1eb:	(bad)  
   14002f1ec:	xor    DWORD PTR [rcx+0x43],edx
   14002f1ef:	outs   dx,DWORD PTR ds:[rsi]
   14002f1f0:	jb     0x14002f257
   14002f1f2:	rex.B jo 0x14002f265
   14002f1f5:	ins    BYTE PTR es:[rdi],dx
   14002f1f6:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14002f1fd:	rex
   14002f1fe:	rex push rbp
   14002f200:	rex.RB
   14002f201:	rex.B
   14002f202:	rex.B
   14002f203:	rex pop rax
   14002f205:	pop    rdx
   14002f206:	add    BYTE PTR [rax],al
   14002f208:	sub    al,BYTE PTR [rdi]
   14002f20a:	(bad)  
   14002f20b:	(bad)  
   14002f20d:	jae    0x14002f274
   14002f20f:	rex.WRX (bad) 
   14002f211:	ins    DWORD PTR es:[rdi],dx
   14002f212:	gs rex push rcx
   14002f215:	imul   r13d,DWORD PTR [rbp+r12*2+0x49],0x406f666e
   14002f21e:	rex push rcx
   14002f220:	rex.RB
   14002f221:	rex.X
   14002f222:	rex.B (bad) 
   14002f224:	push   r14
   14002f226:	push   rcx
   14002f227:	push   rbx
   14002f228:	je     0x14002f29c
   14002f22a:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   14002f231:	add    BYTE PTR [rdi+0x303f3f00],dh
   14002f237:	push   rcx
   14002f238:	imul   r13d,DWORD PTR [rbp+r12*2+0x49],0x406f666e
   14002f241:	rex push rcx
   14002f243:	rex.RB
   14002f244:	rex.B
   14002f245:	rex.B
   14002f246:	rex
   14002f247:	rex.B
   14002f248:	rex.RB
   14002f249:	rex.X push rsi
   14002f24b:	push   rcx
   14002f24c:	push   rbx
   14002f24d:	je     0x14002f2c1
   14002f24f:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   14002f256:	add    BYTE PTR [rax],al
   14002f258:	(bad)  
   14002f259:	(bad)  
   14002f25a:	(bad)  
   14002f25b:	(bad)  
   14002f25c:	jo     0x14002f2ce
   14002f25e:	ins    BYTE PTR es:[rdi],dx
   14002f25f:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14002f266:	imul   r13d,DWORD PTR [rbp+r12*2+0x50],0x40687461
   14002f26f:	push   rcx
   14002f270:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14002f272:	jb     0x14002f2d9
   14002f274:	rex.B jo 0x14002f2e7
   14002f277:	ins    BYTE PTR es:[rdi],dx
   14002f278:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14002f27f:	rex
   14002f280:	rex push rbx
   14002f282:	rex.B (bad) 
   14002f284:	push   r14
   14002f286:	push   rcx
   14002f287:	push   rbx
   14002f288:	je     0x14002f2fc
   14002f28a:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   14002f291:	add    dl,dh
   14002f293:	(bad)  
   14002f294:	(bad)  
   14002f295:	(bad)  
   14002f296:	jb     0x14002f2ff
   14002f298:	jne    0x14002f307
   14002f29a:	outs   dx,BYTE PTR gs:[rsi]
   14002f29c:	je     0x14002f311
   14002f29e:	rex push rcx
   14002f2a0:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14002f2a2:	jb     0x14002f309
   14002f2a4:	rex.B jo 0x14002f317
   14002f2a7:	ins    BYTE PTR es:[rdi],dx
   14002f2a8:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14002f2af:	rex
   14002f2b0:	rex push rbx
   14002f2b2:	rex.B (bad) 
   14002f2b4:	push   r14
   14002f2b6:	push   rcx
   14002f2b7:	push   rbx
   14002f2b8:	je     0x14002f32c
   14002f2ba:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   14002f2c1:	rex
   14002f2c2:	rex pop rax
   14002f2c4:	pop    rdx
   14002f2c5:	add    BYTE PTR [rdx+0x0],ch
   14002f2c8:	(bad)  
   14002f2c9:	(bad)  
   14002f2ca:	xor    BYTE PTR [rcx+0x43],dl
   14002f2cd:	outs   dx,DWORD PTR ds:[rsi]
   14002f2ce:	jb     0x14002f335
   14002f2d0:	rex.B jo 0x14002f343
   14002f2d3:	ins    BYTE PTR es:[rdi],dx
   14002f2d4:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14002f2db:	rex
   14002f2dc:	rex push rcx
   14002f2de:	rex.RB
   14002f2df:	rex.B
   14002f2e0:	rex.B
   14002f2e1:	rex
   14002f2e2:	rex.B
   14002f2e3:	rex.RB
   14002f2e4:	rex.B
   14002f2e5:	rex.W push rax
   14002f2e7:	rex.RB
   14002f2e8:	push   r8
   14002f2ea:	rex.RB
   14002f2eb:	rex.B
   14002f2ec:	rex.R
   14002f2ed:	rex.W
   14002f2ee:	rex pop rdx
   14002f2f0:	add    BYTE PTR [rax],al
   14002f2f2:	cmp    BYTE PTR [rdx],bl
   14002f2f4:	(bad)  
   14002f2f5:	jne    0x14002f365
   14002f2f7:	imul   esp,DWORD PTR [rbx+0x6f],0x51406564
   14002f2fe:	push   rbx
   14002f2ff:	je     0x14002f373
   14002f301:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14002f308:	rex.X
   14002f309:	push   r8
   14002f30b:	rex.RB
   14002f30c:	rex.X push rsi
   14002f30e:	push   rcx
   14002f30f:	rex.XB push 0x40407261
   14002f315:	pop    rax
   14002f316:	pop    rdx
   14002f317:	add    ah,al
   14002f319:	adc    BYTE PTR [rdi],bh
   14002f31b:	outs   dx,BYTE PTR ds:[rsi]
   14002f31c:	jne    0x14002f38b
   14002f31e:	(bad)  
   14002f31f:	gs jb  0x14002f362
   14002f322:	push   rcx
   14002f323:	push   rbx
   14002f324:	je     0x14002f398
   14002f326:	imul   ebp,DWORD PTR [rsi+0x67],0x41534040
   14002f32d:	(bad)  
   14002f32e:	push   r14
   14002f330:	xor    DWORD PTR [rax+0x4e],eax
   14002f333:	rex.R
   14002f334:	rex.W
   14002f335:	rex pop rdx
   14002f337:	add    BYTE PTR [rsi+0x303f3f01],bl
   14002f33d:	push   rcx
   14002f33e:	push   rbx
   14002f33f:	je     0x14002f3b3
   14002f341:	imul   ebp,DWORD PTR [rsi+0x67],0x40666552
   14002f348:	rex push rcx
   14002f34a:	rex.RB
   14002f34b:	rex.B
   14002f34c:	rex.B
   14002f34d:	rex
   14002f34e:	rex.B
   14002f34f:	rex.RB
   14002f350:	rex.X push rsi
   14002f352:	xor    BYTE PTR [rax+0x40],al
   14002f355:	pop    rdx
   14002f356:	add    BYTE PTR [rax],al
   14002f358:	test   DWORD PTR [rbx],eax
   14002f35a:	(bad)  
   14002f35b:	(bad)  
   14002f35c:	xor    al,0x51
   14002f35e:	push   rbx
   14002f35f:	je     0x14002f3d3
   14002f361:	imul   ebp,DWORD PTR [rsi+0x67],0x40666552
   14002f368:	rex push rcx
   14002f36a:	rex.RB
   14002f36b:	rex.B
   14002f36c:	rex.B
   14002f36d:	rex.B
   14002f36e:	rex.RB
   14002f36f:	push   r14
   14002f371:	xor    BYTE PTR [rax+0x41],al
   14002f374:	rex.RB
   14002f375:	rex.X push rsi
   14002f377:	xor    BYTE PTR [rax+0x40],al
   14002f37a:	pop    rdx
   14002f37b:	add    ch,ah
   14002f37d:	(bad)  
   14002f37e:	(bad)  
   14002f37f:	(bad)  
   14002f380:	jb     0x14002f3e9
   14002f382:	rex push rcx
   14002f384:	push   rbx
   14002f385:	je     0x14002f3f9
   14002f387:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14002f38e:	rex.X
   14002f38f:	rex.B (bad) 
   14002f391:	push   r14
   14002f393:	xor    DWORD PTR [rax+0x41],eax
   14002f396:	rex.RB
   14002f397:	rex.X push rsi
   14002f399:	xor    DWORD PTR [rax+0x48],eax
   14002f39c:	push   rsi
   14002f39d:	push   rcx
   14002f39e:	rex.XB push 0x40407261
   14002f3a4:	rex pop rdx
   14002f3a6:	add    BYTE PTR [rax],al
   14002f3a8:	lock sbb DWORD PTR [rdi],edi
   14002f3ab:	je     0x14002f41f
   14002f3ad:	(bad)  
   14002f3ae:	outs   dx,BYTE PTR ds:[rsi]
   14002f3af:	jae    0x14002f41d
   14002f3b1:	(bad)  
   14002f3b2:	je     0x14002f419
   14002f3b4:	rex push rcx
   14002f3b6:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14002f3b8:	jb     0x14002f41f
   14002f3ba:	rex.B jo 0x14002f42d
   14002f3bd:	ins    BYTE PTR es:[rdi],dx
   14002f3be:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14002f3c5:	rex
   14002f3c6:	rex push rbx
   14002f3c8:	rex.B (bad) 
   14002f3ca:	push   r14
   14002f3cc:	push   rcx
   14002f3cd:	push   rbx
   14002f3ce:	je     0x14002f442
   14002f3d0:	imul   ebp,DWORD PTR [rsi+0x67],0x45504040
   14002f3d7:	rex.X
   14002f3d8:	xor    BYTE PTR [rax],r14b
   14002f3db:	rex.W
   14002f3dc:	rex pop rdx
   14002f3de:	add    BYTE PTR [rax],al
   14002f3e0:	rex.W (bad) 
   14002f3e2:	(bad)  
   14002f3e3:	imul   esi,DWORD PTR [rbx+0x4e],0x406c6c75
   14002f3ea:	push   rcx
   14002f3eb:	push   rbx
   14002f3ec:	je     0x14002f460
   14002f3ee:	imul   ebp,DWORD PTR [rsi+0x67],0x40666552
   14002f3f5:	rex push rcx
   14002f3f7:	rex.RB
   14002f3f8:	rex.X
   14002f3f9:	pop    r15
   14002f3fb:	rex.WRX pop rax
   14002f3fd:	pop    rdx
   14002f3fe:	add    BYTE PTR [rax],al
   14002f400:	rol    DWORD PTR [rdx],cl
   14002f402:	(bad)  
   14002f403:	(bad)  
   14002f404:	xor    DWORD PTR [rcx+0x53],edx
   14002f407:	je     0x14002f47b
   14002f409:	imul   ebp,DWORD PTR [rsi+0x67],0x40666552
   14002f410:	rex push rcx
   14002f412:	rex.RB
   14002f413:	rex.B
   14002f414:	rex.B
   14002f415:	rex pop rax
   14002f417:	pop    rdx
   14002f418:	add    BYTE PTR [rax],al
   14002f41a:	movabs eax,ds:0x72745351303f3f01
   14002f423:	imul   ebp,DWORD PTR [rsi+0x67],0x40666552
   14002f42a:	rex push rcx
   14002f42c:	rex.RB
   14002f42d:	rex.B
   14002f42e:	rex.B
   14002f42f:	rex pop rax
   14002f431:	pop    rdx
   14002f432:	add    BYTE PTR [rax],al
   14002f434:	jae    0x14002f437
   14002f436:	(bad)  
   14002f437:	(bad)  
   14002f438:	xor    BYTE PTR [rcx+0x53],dl
   14002f43b:	push   0x64657261
   14002f440:	rex.R (bad) 
   14002f442:	je     0x14002f4a5
   14002f444:	rex
   14002f445:	rex push rcx
   14002f447:	rex.RB
   14002f448:	rex.B
   14002f449:	rex.B
   14002f44a:	rex pop rax
   14002f44c:	pop    rdx
   14002f44d:	add    bh,dh
   14002f44f:	adc    DWORD PTR [rdi],edi
   14002f451:	jno    0x14002f49c
   14002f453:	outs   dx,BYTE PTR ds:[rsi]
   14002f454:	data16 rex
   14002f456:	rex pop rcx
   14002f458:	rex.B
   14002f459:	rex.WRX pop rax
   14002f45b:	pop    rdx
   14002f45c:	add    BYTE PTR [rax],al
   14002f45e:	rex.XB adc dil,BYTE PTR [r15]
   14002f461:	jno    0x14002f4d6
   14002f463:	je     0x14002f4d7
   14002f465:	movsxd ebp,DWORD PTR [rbp+0x70]
   14002f468:	rex
   14002f469:	rex pop rcx
   14002f46b:	rex.B
   14002f46c:	rex.W push rax
   14002f46e:	rex.RB
   14002f46f:	rex.X
   14002f470:	xor    BYTE PTR [rax+0x5a],r8b
   14002f474:	add    BYTE PTR [rax],al
   14002f476:	(bad)  
   14002f477:	adc    bh,BYTE PTR [rdi]
   14002f479:	jno    0x14002f4ce
   14002f47b:	rex.WRX (bad) 
   14002f47d:	rex.WRX
   14002f47e:	rex
   14002f47f:	rex pop rcx
   14002f481:	rex.B
   14002f482:	rex.WRX pop rax
   14002f484:	pop    rdx
   14002f485:	add    BYTE PTR [rip+0x696d3f10],bl        # 0x1a970339b
   14002f48b:	fs push rdx
   14002f48d:	gs rex push cx
   14002f491:	push   rbx
   14002f492:	je     0x14002f506
   14002f494:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14002f49b:	rex.X
   14002f49c:	rex.B (bad) 
   14002f49e:	push   r14
   14002f4a0:	push   rcx
   14002f4a1:	push   rbx
   14002f4a2:	je     0x14002f516
   14002f4a4:	imul   ebp,DWORD PTR [rsi+0x67],0x40666552
   14002f4ab:	rex
   14002f4ac:	rex.W
   14002f4ad:	rex.W
   14002f4ae:	rex pop rdx
   14002f4b0:	add    BYTE PTR [rax],al
   14002f4b2:	xchg   ebx,eax
   14002f4b3:	add    DWORD PTR [rdi],edi
   14002f4b5:	(bad)  
   14002f4b6:	xor    BYTE PTR [rcx+0x53],dl
   14002f4b9:	je     0x14002f52d
   14002f4bb:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14002f4c2:	rex.B
   14002f4c3:	rex.B
   14002f4c4:	rex push rax
   14002f4c6:	rex.RB
   14002f4c7:	rex.X push rsi
   14002f4c9:	push   rcx
   14002f4ca:	rex.XB push 0x40407261
   14002f4d0:	rex.W
   14002f4d1:	rex pop rdx
   14002f4d3:	add    BYTE PTR [rsi+0x14],bl
   14002f4d6:	(bad)  
   14002f4d7:	jb     0x14002f53e
   14002f4d9:	jae    0x14002f540
   14002f4db:	jb     0x14002f553
   14002f4dd:	gs rex push rcx
   14002f4e0:	push   rbx
   14002f4e1:	je     0x14002f555
   14002f4e3:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14002f4ea:	rex.B
   14002f4eb:	pop    r8
   14002f4ed:	rex.W
   14002f4ee:	rex pop rdx
   14002f4f0:	add    BYTE PTR [rax],al
   14002f4f2:	or     eax,0x6c633f08
   14002f4f7:	gs (bad) 
   14002f4f9:	jb     0x14002f53b
   14002f4fb:	push   rcx
   14002f4fc:	push   rbx
   14002f4fd:	je     0x14002f571
   14002f4ff:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14002f506:	rex.B
   14002f507:	pop    r8
   14002f509:	pop    rax
   14002f50a:	pop    rdx
   14002f50b:	add    BYTE PTR [rdi+0x61633f07],bh
   14002f511:	je     0x14002f578
   14002f513:	outs   dx,DWORD PTR ds:[esi]
   14002f515:	jb     0x14002f590
   14002f517:	rex push rcx
   14002f519:	rex.XB push 0x40407261
   14002f51f:	push   rbx
   14002f520:	rex.B (bad) 
   14002f522:	push   r15
   14002f524:	xor    al,0x43
   14002f526:	(bad)  
   14002f527:	je     0x14002f58e
   14002f529:	outs   dx,DWORD PTR ds:[esi]
   14002f52b:	jb     0x14002f5a6
   14002f52d:	rex xor DWORD PTR [rax+0x49],eax
   14002f531:	rex pop rdx
   14002f533:	add    BYTE PTR [rsi+rcx*1],bl
   14002f536:	(bad)  
   14002f537:	imul   esi,DWORD PTR [rbx+0x4c],0x65747465
   14002f53e:	jb     0x14002f58f
   14002f540:	jb     0x14002f590
   14002f542:	jne    0x14002f5b1
   14002f544:	(bad)  
   14002f545:	gs jb  0x14002f588
   14002f548:	push   rcx
   14002f549:	rex.XB push 0x40407261
   14002f54f:	push   rbx
   14002f550:	pop    r15
   14002f552:	rex.WRX
   14002f553:	rex.WB
   14002f554:	rex pop rdx
   14002f556:	add    BYTE PTR [rax],al
   14002f558:	out    dx,al
   14002f559:	(bad)  
   14002f55a:	(bad)  
   14002f55b:	(bad)  
   14002f55c:	jb     0x14002f5c5
   14002f55e:	rex push rcx
   14002f560:	push   rbx
   14002f561:	je     0x14002f5d5
   14002f563:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14002f56a:	rex.X
   14002f56b:	rex.B (bad) 
   14002f56d:	push   r14
   14002f56f:	xor    DWORD PTR [rax+0x56],eax
   14002f572:	push   rcx
   14002f573:	rex.XB push 0x40407261
   14002f579:	rex.W xor BYTE PTR [rax+0x5a],al
   14002f57d:	add    BYTE PTR [rcx+0x14],bh
   14002f580:	(bad)  
   14002f581:	jb     0x14002f5e8
   14002f583:	jae    0x14002f5ee
   14002f585:	jp     0x14002f5ec
   14002f587:	rex push rcx
   14002f589:	push   rbx
   14002f58a:	je     0x14002f5fe
   14002f58c:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14002f593:	rex.B
   14002f594:	pop    r8
   14002f596:	rex.W
   14002f597:	rex pop rdx
   14002f599:	add    BYTE PTR [rcx+0x12],cl
   14002f59c:	(bad)  
   14002f59d:	jno    0x14002f612
   14002f59f:	je     0x14002f613
   14002f5a1:	je     0x14002f612
   14002f5a3:	fs rex
   14002f5a5:	rex pop rcx
   14002f5a7:	rex.B
   14002f5a8:	rex.WRX push rax
   14002f5aa:	rex.RB
   14002f5ab:	rex.X
   14002f5ac:	rex.R push rax
   14002f5ae:	rex.RB
   14002f5af:	push   r8
   14002f5b1:	rex.RB
   14002f5b2:	rex.X
   14002f5b3:	rex.R push rax
   14002f5b5:	rex.RB
   14002f5b6:	pop    r15
   14002f5b8:	rex.WRX
   14002f5b9:	rex pop rdx
   14002f5bb:	add    BYTE PTR [rdx+0xd],bl
   14002f5be:	(bad)  
   14002f5bf:	imul   ebp,DWORD PTR [rsi+0x73],0x40747265
   14002f5c6:	push   rcx
   14002f5c7:	push   rbx
   14002f5c8:	je     0x14002f63c
   14002f5ca:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14002f5d1:	rex.B
   14002f5d2:	rex.B
   14002f5d3:	rex.B
   14002f5d4:	rex.RB
   14002f5d5:	push   r14
   14002f5d7:	xor    DWORD PTR [rax+0x48],eax
   14002f5da:	push   rax
   14002f5db:	rex.RB
   14002f5dc:	rex.X push rsi
   14002f5de:	push   rcx
   14002f5df:	rex.XB push 0x40407261
   14002f5e5:	rex.W
   14002f5e6:	rex pop rdx
   14002f5e8:	add    BYTE PTR [rax],al
   14002f5ea:	popf   
   14002f5eb:	(bad)  
   14002f5ec:	(bad)  
   14002f5ed:	imul   esi,DWORD PTR [rbx+0x53],0x65636170
   14002f5f4:	rex push rcx
   14002f5f6:	rex.XB push 0x40407261
   14002f5fc:	push   rbx
   14002f5fd:	pop    r15
   14002f5ff:	rex.WRX
   14002f600:	rex.WB
   14002f601:	rex pop rdx
   14002f603:	add    BYTE PTR [rcx],al
   14002f605:	(bad)  
   14002f606:	(bad)  
   14002f607:	(bad)  
   14002f608:	je     0x14002f64a
   14002f60a:	push   rcx
   14002f60b:	push   rbx
   14002f60c:	je     0x14002f680
   14002f60e:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14002f615:	rex.X
   14002f616:	rex.B (bad) 
   14002f618:	rex.X push rsi
   14002f61a:	push   rcx
   14002f61b:	rex.XB push 0x40407261
   14002f621:	rex.W
   14002f622:	rex pop rdx
   14002f624:	add    BYTE PTR [rax],al
   14002f626:	push   rcx
   14002f627:	je     0x14002f65e
   14002f629:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14002f62b:	jb     0x14002f692
   14002f62d:	cs fs ins BYTE PTR es:[rdi],dx
   14002f630:	ins    BYTE PTR es:[rdi],dx
   14002f631:	add    BYTE PTR [rbp+0x5],bl
   14002f634:	(bad)  
   14002f635:	pop    rdi
   14002f636:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14002f638:	movsxd ebp,DWORD PTR [rbx+0x40]
   14002f63b:	pop    rdi
   14002f63c:	rex.WRB jne 0x14002f6b3
   14002f63f:	gs js  0x14002f682
   14002f642:	jae    0x14002f6b8
   14002f644:	fs rex
   14002f646:	rex push rcx
   14002f648:	rex.RB
   14002f649:	rex.B
   14002f64a:	pop    r8
   14002f64c:	pop    rax
   14002f64d:	pop    rdx
   14002f64e:	add    BYTE PTR [rax],al
   14002f650:	loopne 0x14002f657
   14002f652:	(bad)  
   14002f653:	pop    rdi
   14002f654:	push   rbp
   14002f655:	outs   dx,BYTE PTR ds:[rsi]
   14002f656:	ins    BYTE PTR es:[rdi],dx
   14002f657:	outs   dx,DWORD PTR ds:[rsi]
   14002f658:	movsxd ebp,DWORD PTR [rbx+0x40]
   14002f65b:	pop    rdi
   14002f65c:	rex.WRB jne 0x14002f6d3
   14002f65f:	gs js  0x14002f6a2
   14002f662:	jae    0x14002f6d8
   14002f664:	fs rex
   14002f666:	rex push rcx
   14002f668:	rex.RB
   14002f669:	rex.B
   14002f66a:	pop    r8
   14002f66c:	pop    rax
   14002f66d:	pop    rdx
   14002f66e:	add    BYTE PTR [rax],al
   14002f670:	xchg   ebx,eax
   14002f671:	add    bh,BYTE PTR [rdi]
   14002f673:	(bad)  
   14002f674:	xor    DWORD PTR [rdi+0x4c],ebx
   14002f677:	outs   dx,DWORD PTR ds:[rsi]
   14002f678:	movsxd ebp,DWORD PTR [rbx+0x69]
   14002f67b:	je     0x14002f6bd
   14002f67d:	jae    0x14002f6f3
   14002f67f:	fs rex
   14002f681:	rex push rcx
   14002f683:	rex.RB
   14002f684:	rex.B
   14002f685:	rex.B
   14002f686:	rex pop rax
   14002f688:	pop    rdx
   14002f689:	add    dh,bh
   14002f68b:	add    al,0x3f
   14002f68d:	pop    rdi
   14002f68e:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14002f690:	movsxd esi,DWORD PTR [rdx+0x65]
   14002f693:	data16 rex
   14002f695:	data16 (bad) 
   14002f697:	movsxd esp,DWORD PTR [rbp+0x74]
   14002f69a:	rex ins BYTE PTR es:[rdi],dx
   14002f69c:	outs   dx,DWORD PTR ds:[rsi]
   14002f69d:	movsxd esp,DWORD PTR [rcx+0x6c]
   14002f6a0:	gs rex jae 0x14002f718
   14002f6a4:	fs rex
   14002f6a6:	rex push rcx
   14002f6a8:	rex.RB
   14002f6a9:	rex.B
   14002f6aa:	pop    r8
   14002f6ac:	pop    rax
   14002f6ad:	pop    rdx
   14002f6ae:	add    BYTE PTR [rax],al
   14002f6b0:	movabs ds:0x61637465475f3f04,al
   14002f6b9:	je     0x14002f6fb
   14002f6bb:	(bad)  
   14002f6bc:	and    al,0x63
   14002f6be:	je     0x14002f739
   14002f6c0:	jo     0x14002f727
   14002f6c2:	rex pop rdi
   14002f6c4:	push   rdi
   14002f6c5:	rex jae 0x14002f73c
   14002f6c8:	fs rex
   14002f6ca:	rex push rbx
   14002f6cc:	pop    r15
   14002f6ce:	rex.WXB push r8
   14002f6d0:	rex.RB
   14002f6d1:	push   r8
   14002f6d3:	rex.RB
   14002f6d4:	rex.X push rsi
   14002f6d6:	data16 (bad) 
   14002f6d8:	movsxd esp,DWORD PTR [rbp+0x74]
   14002f6db:	rex ins BYTE PTR es:[rdi],dx
   14002f6dd:	outs   dx,DWORD PTR ds:[rsi]
   14002f6de:	movsxd esp,DWORD PTR [rcx+0x6c]
   14002f6e1:	xor    al,BYTE PTR gs:[rax+0x50]
   14002f6e6:	rex.RB
   14002f6e7:	rex.X push rsi
   14002f6e9:	xor    al,0x32
   14002f6eb:	rex
   14002f6ec:	rex pop rdx
   14002f6ee:	add    BYTE PTR [rax],al
   14002f6f0:	mov    DWORD PTR [rdi+rdi*1],0x7465475f
   14002f6f7:	data16 (bad) 
   14002f6f9:	movsxd esp,DWORD PTR [rbp+0x74]
   14002f6fc:	rex ins BYTE PTR es:[rdi],dx
   14002f6fe:	outs   dx,DWORD PTR ds:[rsi]
   14002f6ff:	movsxd esp,DWORD PTR [rcx+0x6c]
   14002f702:	gs rex jae 0x14002f77a
   14002f706:	fs rex
   14002f708:	rex push rcx
   14002f70a:	rex.RB
   14002f70b:	rex.X
   14002f70c:	push   r8
   14002f70e:	rex.RB
   14002f70f:	rex.X push rsi
   14002f711:	data16 (bad) 
   14002f713:	movsxd esp,DWORD PTR [rbp+0x74]
   14002f716:	rex xor DWORD PTR [rdx],esi
   14002f719:	rex pop rdi
   14002f71b:	rex.WXB
   14002f71c:	rex pop rdx
   14002f71e:	add    BYTE PTR [rax],al
   14002f720:	push   rsi
   14002f721:	add    edi,DWORD PTR [rdi]
   14002f723:	(bad)  
   14002f724:	imul   esp,DWORD PTR [rax+r8*2+0x6c],0x6c61636f
   14002f72d:	gs rex jae 0x14002f7a5
   14002f731:	fs rex
   14002f733:	rex push rcx
   14002f735:	rex.RB
   14002f736:	rex.B
   14002f737:	pop    r15
   14002f739:	rex.WXB pop r8
   14002f73b:	pop    rdx
   14002f73c:	add    BYTE PTR [rax],al
   14002f73e:	mov    edi,0x64693f08
   14002f743:	rex (bad) 
   14002f745:	and    al,0x63
   14002f747:	je     0x14002f7c2
   14002f749:	jo     0x14002f7b0
   14002f74b:	rex pop rdi
   14002f74d:	push   rdi
   14002f74e:	rex jae 0x14002f7c5
   14002f751:	fs rex
   14002f753:	xor    dl,BYTE PTR [rsi+0x30]
   14002f757:	ins    BYTE PTR es:[rdi],dx
   14002f758:	outs   dx,DWORD PTR ds:[rsi]
   14002f759:	movsxd esp,DWORD PTR [rcx+0x6c]
   14002f75c:	xor    al,BYTE PTR gs:[rax+0x41]
   14002f761:	add    BYTE PTR [rdx+rax*1],bl
   14002f764:	(bad)  
   14002f765:	(bad)  
   14002f766:	xor    BYTE PTR [rdi+0x4c],bl
   14002f769:	outs   dx,DWORD PTR ds:[rsi]
   14002f76a:	movsxd ebp,DWORD PTR [rbx+0x69]
   14002f76d:	je     0x14002f7af
   14002f76f:	jae    0x14002f7e5
   14002f771:	fs rex
   14002f773:	rex push rcx
   14002f775:	rex.RB
   14002f776:	rex.B
   14002f777:	rex.B
   14002f778:	rex
   14002f779:	rex.W
   14002f77a:	rex pop rdx
   14002f77c:	add    BYTE PTR [rax],al
   14002f77e:	(bad)  
   14002f77f:	or     BYTE PTR [rdi],bh
   14002f781:	data16 ins BYTE PTR es:[rdi],dx
   14002f783:	jne    0x14002f7f8
   14002f785:	push   0x62243f40
   14002f78a:	(bad)  
   14002f78b:	jae    0x14002f7f6
   14002f78d:	movsxd ebx,DWORD PTR [rdi+0x6f]
   14002f790:	jae    0x14002f806
   14002f792:	jb     0x14002f7f9
   14002f794:	(bad)  
   14002f795:	ins    DWORD PTR es:[rdi],dx
   14002f796:	rex
   14002f797:	rex.R push rbp
   14002f799:	(bad)  
   14002f79a:	and    al,0x63
   14002f79c:	push   0x745f7261
   14002f7a1:	jb     0x14002f804
   14002f7a3:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14002f7ab:	fs rex
   14002f7ad:	rex
   14002f7ae:	rex jae 0x14002f825
   14002f7b1:	fs rex
   14002f7b3:	rex push rcx
   14002f7b5:	rex.RB
   14002f7b6:	rex.B
   14002f7b7:	rex.B
   14002f7b8:	rex.B
   14002f7b9:	rex.RB
   14002f7ba:	push   r14
   14002f7bc:	xor    DWORD PTR [rdx],esi
   14002f7be:	rex pop rax
   14002f7c0:	pop    rdx
   14002f7c1:	add    BYTE PTR [rsi+0x4f5f3f05],al
   14002f7c7:	jae    0x14002f82f
   14002f7c9:	js     0x14002f80b
   14002f7cb:	(bad)  
   14002f7cc:	and    al,0x62
   14002f7ce:	(bad)  
   14002f7cf:	jae    0x14002f83a
   14002f7d1:	movsxd ebx,DWORD PTR [rdi+0x6f]
   14002f7d4:	jae    0x14002f84a
   14002f7d6:	jb     0x14002f83d
   14002f7d8:	(bad)  
   14002f7d9:	ins    DWORD PTR es:[rdi],dx
   14002f7da:	rex
   14002f7db:	rex.R push rbp
   14002f7dd:	(bad)  
   14002f7de:	and    al,0x63
   14002f7e0:	push   0x745f7261
   14002f7e5:	jb     0x14002f848
   14002f7e7:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14002f7ef:	fs rex
   14002f7f1:	rex
   14002f7f2:	rex jae 0x14002f869
   14002f7f5:	fs rex
   14002f7f7:	rex push rcx
   14002f7f9:	rex.RB
   14002f7fa:	rex.B
   14002f7fb:	pop    r8
   14002f7fd:	pop    rax
   14002f7fe:	pop    rdx
   14002f7ff:	add    dl,bh
   14002f801:	or     edi,DWORD PTR [rdi]
   14002f803:	jne    0x14002f873
   14002f805:	movsxd esp,DWORD PTR [rcx+0x75]
   14002f808:	addr32 push 0x78655f74
   14002f80e:	movsxd esp,DWORD PTR [rbp+0x70]
   14002f811:	je     0x14002f87c
   14002f813:	outs   dx,DWORD PTR ds:[rsi]
   14002f814:	outs   dx,BYTE PTR ds:[rsi]
   14002f815:	rex jae 0x14002f88c
   14002f818:	fs rex
   14002f81a:	rex pop rcx
   14002f81c:	pop    r15
   14002f81e:	rex.WRX pop rax
   14002f820:	pop    rdx
   14002f821:	add    BYTE PTR [rcx],bh
   14002f823:	or     BYTE PTR [rdi],bh
   14002f825:	data16 ins BYTE PTR es:[rdi],dx
   14002f827:	jne    0x14002f89c
   14002f829:	push   0x62243f40
   14002f82e:	(bad)  
   14002f82f:	jae    0x14002f89a
   14002f831:	movsxd ebx,DWORD PTR [rdi+0x6f]
   14002f834:	jae    0x14002f8aa
   14002f836:	jb     0x14002f89d
   14002f838:	(bad)  
   14002f839:	ins    DWORD PTR es:[rdi],dx
   14002f83a:	rex pop rdi
   14002f83c:	push   rdi
   14002f83d:	push   rbp
   14002f83e:	(bad)  
   14002f83f:	and    al,0x63
   14002f841:	push   0x745f7261
   14002f846:	jb     0x14002f8a9
   14002f848:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x7340575f
   14002f850:	je     0x14002f8b6
   14002f852:	rex
   14002f853:	rex
   14002f854:	rex jae 0x14002f8cb
   14002f857:	fs rex
   14002f859:	rex push rcx
   14002f85b:	rex.RB
   14002f85c:	rex.B
   14002f85d:	rex.B
   14002f85e:	rex.B
   14002f85f:	rex.RB
   14002f860:	push   r14
   14002f862:	xor    DWORD PTR [rdx],esi
   14002f864:	rex pop rax
   14002f866:	pop    rdx
   14002f867:	add    BYTE PTR [rax+0x4f5f3f05],cl
   14002f86d:	jae    0x14002f8d5
   14002f86f:	js     0x14002f8b1
   14002f871:	(bad)  
   14002f872:	and    al,0x62
   14002f874:	(bad)  
   14002f875:	jae    0x14002f8e0
   14002f877:	movsxd ebx,DWORD PTR [rdi+0x6f]
   14002f87a:	jae    0x14002f8f0
   14002f87c:	jb     0x14002f8e3
   14002f87e:	(bad)  
   14002f87f:	ins    DWORD PTR es:[rdi],dx
   14002f880:	rex pop rdi
   14002f882:	push   rdi
   14002f883:	push   rbp
   14002f884:	(bad)  
   14002f885:	and    al,0x63
   14002f887:	push   0x745f7261
   14002f88c:	jb     0x14002f8ef
   14002f88e:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x7340575f
   14002f896:	je     0x14002f8fc
   14002f898:	rex
   14002f899:	rex
   14002f89a:	rex jae 0x14002f911
   14002f89d:	fs rex
   14002f89f:	rex push rcx
   14002f8a1:	rex.RB
   14002f8a2:	rex.B
   14002f8a3:	pop    r8
   14002f8a5:	pop    rax
   14002f8a6:	pop    rdx
   14002f8a7:	add    BYTE PTR [rsi+0xb],bl
   14002f8aa:	(bad)  
   14002f8ab:	jae    0x14002f912
   14002f8ad:	je     0x14002f922
   14002f8af:	je     0x14002f912
   14002f8b1:	je     0x14002f918
   14002f8b3:	rex (bad) 
   14002f8b5:	and    al,0x62
   14002f8b7:	(bad)  
   14002f8b8:	jae    0x14002f923
   14002f8ba:	movsxd ebx,DWORD PTR [rdi+0x69]
   14002f8bd:	outs   dx,DWORD PTR ds:[rsi]
   14002f8be:	jae    0x14002f900
   14002f8c0:	pop    rdi
   14002f8c1:	push   rdi
   14002f8c2:	push   rbp
   14002f8c3:	(bad)  
   14002f8c4:	and    al,0x63
   14002f8c6:	push   0x745f7261
   14002f8cb:	jb     0x14002f92e
   14002f8cd:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x7340575f
   14002f8d5:	je     0x14002f93b
   14002f8d7:	rex
   14002f8d8:	rex
   14002f8d9:	rex jae 0x14002f950
   14002f8dc:	fs rex
   14002f8de:	rex push rcx
   14002f8e0:	rex.RB
   14002f8e1:	rex.B
   14002f8e2:	pop    r8
   14002f8e4:	rex.W pop rdi
   14002f8e6:	rex.WRX
   14002f8e7:	rex pop rdx
   14002f8e9:	add    BYTE PTR [rsp+rcx*1],bl
   14002f8ec:	(bad)  
   14002f8ed:	ja     0x14002f958
   14002f8ef:	fs outs dx,BYTE PTR gs:[rsi]
   14002f8f2:	rex (bad) 
   14002f8f4:	and    al,0x63
   14002f8f6:	je     0x14002f971
   14002f8f8:	jo     0x14002f95f
   14002f8fa:	rex pop rdi
   14002f8fc:	push   rdi
   14002f8fd:	rex jae 0x14002f974
   14002f900:	fs rex
   14002f902:	rex push rcx
   14002f904:	rex.RB
   14002f905:	rex.X
   14002f906:	pop    r15
   14002f908:	push   rdi
   14002f909:	rex.R
   14002f90a:	rex pop rdx
   14002f90c:	add    BYTE PTR [rax],al
   14002f90e:	mov    ecx,DWORD PTR [rbx]
   14002f910:	(bad)  
   14002f911:	jae    0x14002f983
   14002f913:	jne    0x14002f989
   14002f915:	movsxd eax,DWORD PTR [rax+0x3f]
   14002f918:	and    al,0x62
   14002f91a:	(bad)  
   14002f91b:	jae    0x14002f986
   14002f91d:	movsxd ebx,DWORD PTR [rdi+0x73]
   14002f920:	je     0x14002f994
   14002f922:	gs (bad) 
   14002f924:	ins    DWORD PTR es:[rdi],dx
   14002f925:	(bad)  
   14002f926:	jne    0x14002f98e
   14002f928:	rex pop rdi
   14002f92a:	push   rdi
   14002f92b:	push   rbp
   14002f92c:	(bad)  
   14002f92d:	and    al,0x63
   14002f92f:	push   0x745f7261
   14002f934:	jb     0x14002f997
   14002f936:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x7340575f
   14002f93e:	je     0x14002f9a4
   14002f940:	rex
   14002f941:	rex
   14002f942:	rex jae 0x14002f9b9
   14002f945:	fs rex
   14002f947:	rex push rcx
   14002f949:	rex.RB
   14002f94a:	rex.B
   14002f94b:	rex.B
   14002f94c:	rex.RXB pop r15
   14002f94e:	push   rdi
   14002f94f:	rex pop rdx
   14002f951:	add    BYTE PTR [rdx+rax*1+0x6c313f3f],bl
   14002f958:	outs   dx,DWORD PTR ds:[rsi]
   14002f959:	movsxd esp,DWORD PTR [rcx+0x6c]
   14002f95c:	gs rex jae 0x14002f9d4
   14002f960:	fs rex
   14002f962:	rex push rcx
   14002f964:	rex.RB
   14002f965:	rex.B
   14002f966:	rex.B
   14002f967:	rex pop rax
   14002f969:	pop    rdx
   14002f96a:	add    BYTE PTR [rax],al
   14002f96c:	sahf   
   14002f96d:	or     BYTE PTR [rdi],bh
   14002f96f:	addr32 gs je 0x14002f9df
   14002f973:	outs   dx,DWORD PTR ds:[rsi]
   14002f974:	movsxd eax,DWORD PTR [rax+0x69]
   14002f977:	outs   dx,DWORD PTR ds:[rsi]
   14002f978:	jae    0x14002f9d9
   14002f97a:	(bad)  
   14002f97c:	jae    0x14002f9e3
   14002f97e:	rex jae 0x14002f9f5
   14002f981:	fs rex
   14002f983:	rex push rcx
   14002f985:	rex.RB
   14002f986:	rex.X
   14002f987:	rex.B (bad) 
   14002f989:	push   r14
   14002f98b:	ins    BYTE PTR es:[rdi],dx
   14002f98c:	outs   dx,DWORD PTR ds:[rsi]
   14002f98d:	movsxd esp,DWORD PTR [rcx+0x6c]
   14002f990:	xor    al,BYTE PTR gs:[rax+0x58]
   14002f995:	pop    rdx
   14002f996:	add    BYTE PTR [rax],al
   14002f998:	pop    rdx
   14002f999:	or     edi,DWORD PTR [rdi]
   14002f99b:	jae    0x14002fa02
   14002f99d:	je     0x14002fa12
   14002f99f:	je     0x14002fa02
   14002f9a1:	je     0x14002fa08
   14002f9a3:	rex (bad) 
   14002f9a5:	and    al,0x62
   14002f9a7:	(bad)  
   14002f9a8:	jae    0x14002fa13
   14002f9aa:	movsxd ebx,DWORD PTR [rdi+0x69]
   14002f9ad:	outs   dx,DWORD PTR ds:[rsi]
   14002f9ae:	jae    0x14002f9f0
   14002f9b0:	rex.R push rbp
   14002f9b2:	(bad)  
   14002f9b3:	and    al,0x63
   14002f9b5:	push   0x745f7261
   14002f9ba:	jb     0x14002fa1d
   14002f9bc:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14002f9c4:	fs rex
   14002f9c6:	rex
   14002f9c7:	rex jae 0x14002fa3e
   14002f9ca:	fs rex
   14002f9cc:	rex push rcx
   14002f9ce:	rex.RB
   14002f9cf:	rex.B
   14002f9d0:	pop    r8
   14002f9d2:	rex.W pop rdi
   14002f9d4:	rex.WRX
   14002f9d5:	rex pop rdx
   14002f9d7:	add    BYTE PTR [rbx+rcx*1+0x7570733f],cl
   14002f9de:	je     0x14002fa4e
   14002f9e0:	rex (bad) 
   14002f9e2:	and    al,0x62
   14002f9e4:	(bad)  
   14002f9e5:	jae    0x14002fa50
   14002f9e7:	movsxd ebx,DWORD PTR [rdi+0x73]
   14002f9ea:	je     0x14002fa5e
   14002f9ec:	gs (bad) 
   14002f9ee:	ins    DWORD PTR es:[rdi],dx
   14002f9ef:	(bad)  
   14002f9f0:	jne    0x14002fa58
   14002f9f2:	rex
   14002f9f3:	rex.R push rbp
   14002f9f5:	(bad)  
   14002f9f6:	and    al,0x63
   14002f9f8:	push   0x745f7261
   14002f9fd:	jb     0x14002fa60
   14002f9ff:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14002fa07:	fs rex
   14002fa09:	rex
   14002fa0a:	rex jae 0x14002fa81
   14002fa0d:	fs rex
   14002fa0f:	rex push rcx
   14002fa11:	rex.RB
   14002fa12:	rex.B
   14002fa13:	pop    r15
   14002fa15:	rex.WX push rax
   14002fa17:	rex.RB
   14002fa18:	rex.X
   14002fa19:	rex.R pop rdi
   14002fa1b:	rex.WX
   14002fa1c:	rex pop rdx
   14002fa1e:	add    BYTE PTR [rax],al
   14002fa20:	mov    DWORD PTR [rbx],ecx
   14002fa22:	(bad)  
   14002fa23:	jae    0x14002fa95
   14002fa25:	jne    0x14002fa9b
   14002fa27:	movsxd eax,DWORD PTR [rax+0x3f]
   14002fa2a:	and    al,0x62
   14002fa2c:	(bad)  
   14002fa2d:	jae    0x14002fa98
   14002fa2f:	movsxd ebx,DWORD PTR [rdi+0x73]
   14002fa32:	je     0x14002faa6
   14002fa34:	gs (bad) 
   14002fa36:	ins    DWORD PTR es:[rdi],dx
   14002fa37:	(bad)  
   14002fa38:	jne    0x14002faa0
   14002fa3a:	rex
   14002fa3b:	rex.R push rbp
   14002fa3d:	(bad)  
   14002fa3e:	and    al,0x63
   14002fa40:	push   0x745f7261
   14002fa45:	jb     0x14002faa8
   14002fa47:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14002fa4f:	fs rex
   14002fa51:	rex
   14002fa52:	rex jae 0x14002fac9
   14002fa55:	fs rex
   14002fa57:	rex push rcx
   14002fa59:	rex.RB
   14002fa5a:	rex.B
   14002fa5b:	rex.B
   14002fa5c:	rex.W
   14002fa5d:	rex.R
   14002fa5e:	rex pop rdx
   14002fa60:	add    BYTE PTR [rax],al
   14002fa62:	(bad)  
   14002fa63:	add    bh,BYTE PTR [rdi]
   14002fa65:	(bad)  
   14002fa66:	xor    DWORD PTR [rdi],edi
   14002fa68:	and    al,0x62
   14002fa6a:	(bad)  
   14002fa6b:	jae    0x14002fad6
   14002fa6d:	movsxd ebx,DWORD PTR [rdi+0x73]
   14002fa70:	je     0x14002fae4
   14002fa72:	imul   ebp,DWORD PTR [rsi+0x67],0x55575f40
   14002fa79:	(bad)  
   14002fa7a:	and    al,0x63
   14002fa7c:	push   0x745f7261
   14002fa81:	jb     0x14002fae4
   14002fa83:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x7340575f
   14002fa8b:	je     0x14002faf1
   14002fa8d:	rex
   14002fa8e:	rex push rsi
   14002fa90:	(bad)  
   14002fa91:	and    al,0x61
   14002fa93:	ins    BYTE PTR es:[rdi],dx
   14002fa94:	ins    BYTE PTR es:[rdi],dx
   14002fa95:	outs   dx,DWORD PTR ds:[rsi]
   14002fa96:	movsxd esp,DWORD PTR [rcx+0x74]
   14002fa99:	outs   dx,DWORD PTR ds:[rsi]
   14002fa9a:	jb     0x14002fadc
   14002fa9c:	pop    rdi
   14002fa9d:	push   rdi
   14002fa9e:	xor    al,BYTE PTR [rax+0x40]
   14002faa2:	jae    0x14002fb18
   14002faa4:	fs rex
   14002faa6:	rex push rcx
   14002faa8:	rex.RB
   14002faa9:	rex.B
   14002faaa:	rex.B
   14002faab:	rex pop rax
   14002faad:	pop    rdx
   14002faae:	add    BYTE PTR [rax],al
   14002fab0:	sub    eax,DWORD PTR [rax]
   14002fab2:	(bad)  
   14002fab3:	(bad)  
   14002fab4:	and    al,0x3f
   14002fab6:	ss pop rdi
   14002fab8:	push   rdi
   14002fab9:	push   rbp
   14002faba:	(bad)  
   14002fabb:	and    al,0x63
   14002fabd:	push   0x745f7261
   14002fac2:	jb     0x14002fb25
   14002fac4:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x7340575f
   14002facc:	je     0x14002fb32
   14002face:	rex
   14002facf:	rex push rsi
   14002fad1:	(bad)  
   14002fad2:	and    al,0x61
   14002fad4:	ins    BYTE PTR es:[rdi],dx
   14002fad5:	ins    BYTE PTR es:[rdi],dx
   14002fad6:	outs   dx,DWORD PTR ds:[rsi]
   14002fad7:	movsxd esp,DWORD PTR [rcx+0x74]
   14002fada:	outs   dx,DWORD PTR ds:[rsi]
   14002fadb:	jb     0x14002fb1d
   14002fadd:	pop    rdi
   14002fade:	push   rdi
   14002fadf:	rex xor DWORD PTR [rax+0x40],eax
   14002fae3:	jae    0x14002fb59
   14002fae5:	fs rex
   14002fae7:	rex pop rcx
   14002fae9:	rex.B
   14002faea:	rex.B
   14002faeb:	rex.RB
   14002faec:	push   r14
   14002faee:	(bad)  
   14002faef:	and    al,0x62
   14002faf1:	(bad)  
   14002faf2:	jae    0x14002fb5d
   14002faf4:	movsxd ebx,DWORD PTR [rdi+0x6f]
   14002faf7:	jae    0x14002fb6d
   14002faf9:	jb     0x14002fb60
   14002fafb:	(bad)  
   14002fafc:	ins    DWORD PTR es:[rdi],dx
   14002fafd:	rex pop rdi
   14002faff:	push   rdi
   14002fb00:	push   rbp
   14002fb01:	(bad)  
   14002fb02:	and    al,0x63
   14002fb04:	push   0x745f7261
   14002fb09:	jb     0x14002fb6c
   14002fb0b:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x7340575f
   14002fb13:	je     0x14002fb79
   14002fb15:	rex
   14002fb16:	rex
   14002fb17:	xor    BYTE PTR [rax+0x41],al
   14002fb1b:	rex.RB
   14002fb1c:	push   r14
   14002fb1e:	xor    DWORD PTR [rax],esi
   14002fb20:	rex
   14002fb21:	rex.B
   14002fb22:	rex.RB
   14002fb23:	rex.X push rsi
   14002fb25:	(bad)  
   14002fb26:	and    al,0x62
   14002fb28:	(bad)  
   14002fb29:	jae    0x14002fb94
   14002fb2b:	movsxd ebx,DWORD PTR [rdi+0x73]
   14002fb2e:	je     0x14002fba2
   14002fb30:	imul   ebp,DWORD PTR [rsi+0x67],0x55575f40
   14002fb37:	(bad)  
   14002fb38:	and    al,0x63
   14002fb3a:	push   0x745f7261
   14002fb3f:	jb     0x14002fba2
   14002fb41:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x7340575f
   14002fb49:	je     0x14002fbaf
   14002fb4b:	rex
   14002fb4c:	rex push rsi
   14002fb4e:	(bad)  
   14002fb4f:	and    al,0x61
   14002fb51:	ins    BYTE PTR es:[rdi],dx
   14002fb52:	ins    BYTE PTR es:[rdi],dx
   14002fb53:	outs   dx,DWORD PTR ds:[rsi]
   14002fb54:	movsxd esp,DWORD PTR [rcx+0x74]
   14002fb57:	outs   dx,DWORD PTR ds:[rsi]
   14002fb58:	jb     0x14002fb9a
   14002fb5a:	pop    rdi
   14002fb5b:	push   rdi
   14002fb5c:	xor    al,BYTE PTR [rax+0x40]
   14002fb60:	xor    BYTE PTR [rax+0x40],al
   14002fb63:	pop    rdx
   14002fb64:	add    BYTE PTR [rax],al
   14002fb66:	or     eax,0x63773f0c
   14002fb6b:	gs jb  0x14002fbe0
   14002fb6e:	rex jae 0x14002fbe5
   14002fb71:	fs rex
   14002fb73:	rex xor edx,DWORD PTR [rsi+0x3f]
   14002fb77:	and    al,0x62
   14002fb79:	(bad)  
   14002fb7a:	jae    0x14002fbe5
   14002fb7c:	movsxd ebx,DWORD PTR [rdi+0x6f]
   14002fb7f:	jae    0x14002fbf5
   14002fb81:	jb     0x14002fbe8
   14002fb83:	(bad)  
   14002fb84:	ins    DWORD PTR es:[rdi],dx
   14002fb85:	rex pop rdi
   14002fb87:	push   rdi
   14002fb88:	push   rbp
   14002fb89:	(bad)  
   14002fb8a:	and    al,0x63
   14002fb8c:	push   0x745f7261
   14002fb91:	jb     0x14002fbf4
   14002fb93:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x7340575f
   14002fb9b:	je     0x14002fc01
   14002fb9d:	rex
   14002fb9e:	rex
   14002fb9f:	rex xor DWORD PTR [rax+0x41],eax
   14002fba3:	add    BYTE PTR [rdi+0x2],bl
   14002fba6:	(bad)  
   14002fba7:	(bad)  
   14002fba8:	xor    DWORD PTR [rdi],edi
   14002fbaa:	and    al,0x62
   14002fbac:	(bad)  
   14002fbad:	jae    0x14002fc18
   14002fbaf:	movsxd ebx,DWORD PTR [rdi+0x73]
   14002fbb2:	je     0x14002fc26
   14002fbb4:	imul   ebp,DWORD PTR [rsi+0x67],0x3f554440
   14002fbbb:	and    al,0x63
   14002fbbd:	push   0x745f7261
   14002fbc2:	jb     0x14002fc25
   14002fbc4:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14002fbcc:	fs rex
   14002fbce:	rex push rsi
   14002fbd0:	(bad)  
   14002fbd1:	and    al,0x61
   14002fbd3:	ins    BYTE PTR es:[rdi],dx
   14002fbd4:	ins    BYTE PTR es:[rdi],dx
   14002fbd5:	outs   dx,DWORD PTR ds:[rsi]
   14002fbd6:	movsxd esp,DWORD PTR [rcx+0x74]
   14002fbd9:	outs   dx,DWORD PTR ds:[rsi]
   14002fbda:	jb     0x14002fc1c
   14002fbdc:	rex.R
   14002fbdd:	xor    al,BYTE PTR [rax+0x40]
   14002fbe1:	jae    0x14002fc57
   14002fbe3:	fs rex
   14002fbe5:	rex push rcx
   14002fbe7:	rex.RB
   14002fbe8:	rex.B
   14002fbe9:	rex.B
   14002fbea:	rex pop rax
   14002fbec:	pop    rdx
   14002fbed:	add    BYTE PTR [rip+0x363f3f03],bl        # 0x176423af6
   14002fbf3:	(bad)  
   14002fbf4:	and    al,0x62
   14002fbf6:	(bad)  
   14002fbf7:	jae    0x14002fc62
   14002fbf9:	movsxd ebx,DWORD PTR [rdi+0x6f]
   14002fbfc:	jae    0x14002fc72
   14002fbfe:	jb     0x14002fc65
   14002fc00:	(bad)  
   14002fc01:	ins    DWORD PTR es:[rdi],dx
   14002fc02:	rex
   14002fc03:	rex.R push rbp
   14002fc05:	(bad)  
   14002fc06:	and    al,0x63
   14002fc08:	push   0x745f7261
   14002fc0d:	jb     0x14002fc70
   14002fc0f:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14002fc17:	fs rex
   14002fc19:	rex
   14002fc1a:	rex jae 0x14002fc91
   14002fc1d:	fs rex
   14002fc1f:	rex push rcx
   14002fc21:	rex.RB
   14002fc22:	rex.B
   14002fc23:	rex.B
   14002fc24:	rex.B
   14002fc25:	rex.RB
   14002fc26:	push   r14
   14002fc28:	xor    BYTE PTR [rcx],dh
   14002fc2a:	rex push rax
   14002fc2c:	ss rex.B
   14002fc2e:	rex.B
   14002fc2f:	rex.RB
   14002fc30:	push   r14
   14002fc32:	xor    BYTE PTR [rcx],dh
   14002fc34:	rex
   14002fc35:	rex.B
   14002fc36:	rex.RB
   14002fc37:	push   r14
   14002fc39:	xor    BYTE PTR [rcx],dh
   14002fc3b:	rex
   14002fc3c:	rex pop rdx
   14002fc3e:	rex pop rdx
   14002fc40:	add    BYTE PTR [rax],al
   14002fc42:	mov    edx,0x6e653f07
   14002fc47:	fs ins BYTE PTR es:[rdi],dx
   14002fc49:	rex jae 0x14002fcc0
   14002fc4c:	fs rex
   14002fc4e:	rex pop rcx
   14002fc50:	rex.B
   14002fc51:	rex.B
   14002fc52:	rex.RB
   14002fc53:	push   r14
   14002fc55:	(bad)  
   14002fc56:	and    al,0x62
   14002fc58:	(bad)  
   14002fc59:	jae    0x14002fcc4
   14002fc5b:	movsxd ebx,DWORD PTR [rdi+0x6f]
   14002fc5e:	jae    0x14002fcd4
   14002fc60:	jb     0x14002fcc7
   14002fc62:	(bad)  
   14002fc63:	ins    DWORD PTR es:[rdi],dx
   14002fc64:	rex
   14002fc65:	rex.R push rbp
   14002fc67:	(bad)  
   14002fc68:	and    al,0x63
   14002fc6a:	push   0x745f7261
   14002fc6f:	jb     0x14002fcd2
   14002fc71:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14002fc79:	fs rex
   14002fc7b:	rex
   14002fc7c:	rex xor DWORD PTR [rax+0x41],eax
   14002fc80:	rex.RB
   14002fc81:	push   r14
   14002fc83:	xor    dh,BYTE PTR [rcx]
   14002fc85:	rex
   14002fc86:	rex pop rdx
   14002fc88:	add    BYTE PTR [rax],al
   14002fc8a:	(bad)  
   14002fc8b:	add    BYTE PTR [rdi],bh
   14002fc8d:	(bad)  
   14002fc8e:	and    al,0x3f
   14002fc90:	ss rex.R push rbp
   14002fc93:	(bad)  
   14002fc94:	and    al,0x63
   14002fc96:	push   0x745f7261
   14002fc9b:	jb     0x14002fcfe
   14002fc9d:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14002fca5:	fs rex
   14002fca7:	rex push rsi
   14002fca9:	(bad)  
   14002fcaa:	and    al,0x61
   14002fcac:	ins    BYTE PTR es:[rdi],dx
   14002fcad:	ins    BYTE PTR es:[rdi],dx
   14002fcae:	outs   dx,DWORD PTR ds:[rsi]
   14002fcaf:	movsxd esp,DWORD PTR [rcx+0x74]
   14002fcb2:	outs   dx,DWORD PTR ds:[rsi]
   14002fcb3:	jb     0x14002fcf5
   14002fcb5:	rex.R
   14002fcb6:	rex xor DWORD PTR [rax+0x40],eax
   14002fcba:	jae    0x14002fd30
   14002fcbc:	fs rex
   14002fcbe:	rex pop rcx
   14002fcc0:	rex.B
   14002fcc1:	rex.B
   14002fcc2:	rex.RB
   14002fcc3:	push   r14
   14002fcc5:	(bad)  
   14002fcc6:	and    al,0x62
   14002fcc8:	(bad)  
   14002fcc9:	jae    0x14002fd34
   14002fccb:	movsxd ebx,DWORD PTR [rdi+0x6f]
   14002fcce:	jae    0x14002fd44
   14002fcd0:	jb     0x14002fd37
   14002fcd2:	(bad)  
   14002fcd3:	ins    DWORD PTR es:[rdi],dx
   14002fcd4:	rex
   14002fcd5:	rex.R push rbp
   14002fcd7:	(bad)  
   14002fcd8:	and    al,0x63
   14002fcda:	push   0x745f7261
   14002fcdf:	jb     0x14002fd42
   14002fce1:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14002fce9:	fs rex
   14002fceb:	rex
   14002fcec:	xor    BYTE PTR [rax+0x41],al
   14002fcf0:	rex.RB
   14002fcf1:	push   r14
   14002fcf3:	xor    DWORD PTR [rax],esi
   14002fcf5:	rex
   14002fcf6:	rex.B
   14002fcf7:	rex.RB
   14002fcf8:	rex.X push rsi
   14002fcfa:	(bad)  
   14002fcfb:	and    al,0x62
   14002fcfd:	(bad)  
   14002fcfe:	jae    0x14002fd69
   14002fd00:	movsxd ebx,DWORD PTR [rdi+0x73]
   14002fd03:	je     0x14002fd77
   14002fd05:	imul   ebp,DWORD PTR [rsi+0x67],0x3f554440
   14002fd0c:	and    al,0x63
   14002fd0e:	push   0x745f7261
   14002fd13:	jb     0x14002fd76
   14002fd15:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14002fd1d:	fs rex
   14002fd1f:	rex push rsi
   14002fd21:	(bad)  
   14002fd22:	and    al,0x61
   14002fd24:	ins    BYTE PTR es:[rdi],dx
   14002fd25:	ins    BYTE PTR es:[rdi],dx
   14002fd26:	outs   dx,DWORD PTR ds:[rsi]
   14002fd27:	movsxd esp,DWORD PTR [rcx+0x74]
   14002fd2a:	outs   dx,DWORD PTR ds:[rsi]
   14002fd2b:	jb     0x14002fd6d
   14002fd2d:	rex.R
   14002fd2e:	xor    al,BYTE PTR [rax+0x40]
   14002fd32:	xor    BYTE PTR [rax+0x40],al
   14002fd35:	pop    rdx
   14002fd36:	add    BYTE PTR [rax],al
   14002fd38:	push   rax
   14002fd39:	(bad)  
   14002fd3a:	(bad)  
   14002fd3b:	movsxd esp,DWORD PTR [rbp+0x72]
   14002fd3e:	jb     0x14002fd80
   14002fd40:	jae    0x14002fdb6
   14002fd42:	fs rex
   14002fd44:	rex xor edx,DWORD PTR [rsi+0x3f]
   14002fd48:	and    al,0x62
   14002fd4a:	(bad)  
   14002fd4b:	jae    0x14002fdb6
   14002fd4d:	movsxd ebx,DWORD PTR [rdi+0x6f]
   14002fd50:	jae    0x14002fdc6
   14002fd52:	jb     0x14002fdb9
   14002fd54:	(bad)  
   14002fd55:	ins    DWORD PTR es:[rdi],dx
   14002fd56:	rex
   14002fd57:	rex.R push rbp
   14002fd59:	(bad)  
   14002fd5a:	and    al,0x63
   14002fd5c:	push   0x745f7261
   14002fd61:	jb     0x14002fdc4
   14002fd63:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14002fd6b:	fs rex
   14002fd6d:	rex
   14002fd6e:	rex xor DWORD PTR [rax+0x41],eax
   14002fd72:	add    BYTE PTR [rax],al
   14002fd74:	(bad)  
   14002fd75:	add    edi,DWORD PTR [rdi]
   14002fd77:	(bad)  
   14002fd78:	ss (bad) 
   14002fd7a:	and    al,0x62
   14002fd7c:	(bad)  
   14002fd7d:	jae    0x14002fde8
   14002fd7f:	movsxd ebx,DWORD PTR [rdi+0x6f]
   14002fd82:	jae    0x14002fdf8
   14002fd84:	jb     0x14002fdeb
   14002fd86:	(bad)  
   14002fd87:	ins    DWORD PTR es:[rdi],dx
   14002fd88:	rex
   14002fd89:	rex.R push rbp
   14002fd8b:	(bad)  
   14002fd8c:	and    al,0x63
   14002fd8e:	push   0x745f7261
   14002fd93:	jb     0x14002fdf6
   14002fd95:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14002fd9d:	fs rex
   14002fd9f:	rex
   14002fda0:	rex jae 0x14002fe17
   14002fda3:	fs rex
   14002fda5:	rex push rcx
   14002fda7:	rex.RB
   14002fda8:	rex.B
   14002fda9:	rex.B
   14002fdaa:	rex.B
   14002fdab:	rex.RB
   14002fdac:	push   r14
   14002fdae:	xor    BYTE PTR [rcx],dh
   14002fdb0:	rex
   14002fdb1:	rex.WB
   14002fdb2:	rex pop rdx
   14002fdb4:	add    BYTE PTR [rax],al
   14002fdb6:	cwde   
   14002fdb7:	(bad)  
   14002fdb8:	(bad)  
   14002fdb9:	movsxd ebp,DWORD PTR [rdi+0x75]
   14002fdbc:	je     0x14002fdfe
   14002fdbe:	jae    0x14002fe34
   14002fdc0:	fs rex
   14002fdc2:	rex xor edx,DWORD PTR [rsi+0x3f]
   14002fdc6:	and    al,0x62
   14002fdc8:	(bad)  
   14002fdc9:	jae    0x14002fe34
   14002fdcb:	movsxd ebx,DWORD PTR [rdi+0x6f]
   14002fdce:	jae    0x14002fe44
   14002fdd0:	jb     0x14002fe37
   14002fdd2:	(bad)  
   14002fdd3:	ins    DWORD PTR es:[rdi],dx
   14002fdd4:	rex
   14002fdd5:	rex.R push rbp
   14002fdd7:	(bad)  
   14002fdd8:	and    al,0x63
   14002fdda:	push   0x745f7261
   14002fddf:	jb     0x14002fe42
   14002fde1:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14002fde9:	fs rex
   14002fdeb:	rex
   14002fdec:	rex xor DWORD PTR [rax+0x41],eax
   14002fdf0:	add    BYTE PTR [rax],al
   14002fdf2:	jp     0x14002fdf8
   14002fdf4:	(bad)  
   14002fdf5:	pop    rdi
   14002fdf6:	rex.R
   14002fdf7:	movsxd esi,DWORD PTR gs:[rdx+0x65]
   14002fdfb:	data16 rex
   14002fdfd:	data16 (bad) 
   14002fdff:	movsxd esp,DWORD PTR [rbp+0x74]
   14002fe02:	rex ins BYTE PTR es:[rdi],dx
   14002fe04:	outs   dx,DWORD PTR ds:[rsi]
   14002fe05:	movsxd esp,DWORD PTR [rcx+0x6c]
   14002fe08:	gs rex jae 0x14002fe80
   14002fe0c:	fs rex
   14002fe0e:	rex push rcx
   14002fe10:	rex.RB
   14002fe11:	rex.B
   14002fe12:	push   r8
   14002fe14:	rex.RB
   14002fe15:	push   r14
   14002fe17:	xor    DWORD PTR [rdx],esi
   14002fe19:	xor    eax,DWORD PTR [rax+0x58]
   14002fe1c:	pop    rdx
   14002fe1d:	add    BYTE PTR [rbp+0x53],cl
   14002fe20:	push   rsi
   14002fe21:	rex.XB push r8
   14002fe23:	cmp    DWORD PTR [rax],esi
   14002fe25:	cs fs ins BYTE PTR es:[rdi],dx
   14002fe28:	ins    BYTE PTR es:[rdi],dx
   14002fe29:	add    al,dh
   14002fe2b:	add    al,0x6d
   14002fe2d:	gs ins DWORD PTR es:[rdi],dx
   14002fe2f:	movsxd esi,DWORD PTR [rax+0x79]
   14002fe32:	add    BYTE PTR [rax],al
   14002fe34:	adc    eax,DWORD PTR [rax]
   14002fe36:	(bad)  
   14002fe37:	(bad)  
   14002fe38:	xor    eax,DWORD PTR [rax+0x59]
   14002fe3b:	pop    r8
   14002fe3d:	push   rax
   14002fe3e:	rex.RB
   14002fe3f:	pop    r8
   14002fe41:	rex pop rdx
   14002fe43:	add    BYTE PTR [rip+0x303f3f00],al        # 0x170423d49
   14002fe49:	(bad)
   14002fe4e:	(bad)  
   14002fe4f:	jae    0x14002fec5
   14002fe51:	rex jae 0x14002fec8
   14002fe54:	fs rex
   14002fe56:	rex push rcx
   14002fe58:	rex.RB
   14002fe59:	rex.B
   14002fe5a:	rex.B
   14002fe5b:	rex push rax
   14002fe5d:	rex.RB
   14002fe5e:	rex.X
   14002fe5f:	rex.R
   14002fe60:	rex pop rdx
   14002fe62:	add    BYTE PTR [rax],al
   14002fe64:	rex.WB add BYTE PTR [r15+0x43],bl
   14002fe68:	js     0x14002fee2
   14002fe6a:	push   rsp
   14002fe6b:	push   0x45776f72
   14002fe70:	js     0x14002fed5
   14002fe72:	gs jo  0x14002fee9
   14002fe75:	imul   ebp,DWORD PTR [rdi+0x6e],0xd0000
   14002fe7c:	(bad)  
   14002fe7d:	(bad)  
   14002fe7e:	xor    DWORD PTR [rdx+0x61],esp
   14002fe81:	fs pop rdi
   14002fe83:	movsxd esp,DWORD PTR [rcx+0x73]
   14002fe86:	je     0x14002fec8
   14002fe88:	jae    0x14002fefe
   14002fe8a:	fs rex
   14002fe8c:	rex push rbp
   14002fe8e:	rex.RB
   14002fe8f:	rex.B
   14002fe90:	rex.B
   14002fe91:	rex pop rax
   14002fe93:	pop    rdx
   14002fe94:	add    BYTE PTR [rax],al
   14002fe96:	add    al,0x0
   14002fe98:	(bad)  
   14002fe99:	(bad)  
   14002fe9a:	xor    BYTE PTR [rdx+0x61],ah
   14002fe9d:	fs pop rdi
   14002fe9f:	movsxd esp,DWORD PTR [rcx+0x73]
   14002fea2:	je     0x14002fee4
   14002fea4:	jae    0x14002ff1a
   14002fea6:	fs rex
   14002fea8:	rex push rcx
   14002feaa:	rex.RB
   14002feab:	rex.B
   14002feac:	rex.B
   14002fead:	rex
   14002feae:	rex.B
   14002feaf:	rex.RB
   14002feb0:	rex.X push rsi
   14002feb2:	xor    BYTE PTR [rcx],dh
   14002feb4:	rex
   14002feb5:	rex pop rdx
   14002feb7:	add    BYTE PTR [rdx],cl
   14002feb9:	add    BYTE PTR [rdi],bh
   14002febb:	(bad)  
   14002febc:	xor    BYTE PTR [rbp+0x78],ah
   14002febf:	movsxd esp,DWORD PTR [rbp+0x70]
   14002fec2:	je     0x14002ff2d
   14002fec4:	outs   dx,DWORD PTR ds:[rsi]
   14002fec5:	outs   dx,BYTE PTR ds:[rsi]
   14002fec6:	rex jae 0x14002ff3d
   14002fec9:	fs rex
   14002fecb:	rex push rcx
   14002fecd:	rex.RB
   14002fece:	rex.B
   14002fecf:	rex.B
   14002fed0:	rex
   14002fed1:	rex.B
   14002fed2:	rex.RB
   14002fed3:	rex.X push rsi
   14002fed5:	xor    BYTE PTR [rcx],dh
   14002fed7:	rex
   14002fed8:	rex pop rdx
   14002feda:	add    BYTE PTR [rax],al
   14002fedc:	adc    DWORD PTR [rax],eax
   14002fede:	(bad)  
   14002fedf:	(bad)  
   14002fee0:	xor    al,BYTE PTR [rax+0x59]
   14002fee3:	push   r8
   14002fee5:	rex.RB
   14002fee6:	pop    r8
   14002fee8:	pop    rdi
   14002fee9:	rex.WXB
   14002feea:	rex pop rdx
   14002feec:	add    BYTE PTR [rax],al
   14002feee:	movsxd eax,DWORD PTR [rax]
   14002fef0:	pop    rdi
   14002fef1:	pop    rdi
   14002fef2:	rex.XB js 0x14002ff6d
   14002fef5:	rex.RX jb 0x14002ff59
   14002fef8:	ins    DWORD PTR es:[rdi],dx
   14002fef9:	gs rex.W (bad) 
   14002fefc:	outs   dx,BYTE PTR ds:[rsi]
   14002fefd:	fs ins BYTE PTR es:[rdi],dx
   14002feff:	gs jb  0x14002ff35
   14002ff02:	add    BYTE PTR [rax],al
   14002ff04:	xchg   edx,eax
   14002ff05:	add    BYTE PTR [rdi+0x5f],bl
   14002ff08:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
   14002ff0f:	movsxd eax,DWORD PTR [rax]
   14002ff11:	add    ch,ah
   14002ff13:	add    al,0x6d
   14002ff15:	(bad)  
   14002ff16:	ins    BYTE PTR es:[rdi],dx
   14002ff17:	ins    BYTE PTR es:[rdi],dx
   14002ff18:	outs   dx,DWORD PTR ds:[rsi]
   14002ff19:	movsxd eax,DWORD PTR [rax]
   14002ff1b:	add    BYTE PTR [rsi],al
   14002ff1d:	add    eax,0x6c616572
   14002ff22:	ins    BYTE PTR es:[rdi],dx
   14002ff23:	outs   dx,DWORD PTR ds:[rsi]
   14002ff24:	movsxd eax,DWORD PTR [rax]
   14002ff26:	lock add bl,BYTE PTR [rdi+0x70]
   14002ff2a:	jne    0x14002ff9e
   14002ff2c:	movsxd esp,DWORD PTR gs:[rcx+0x6c]
   14002ff30:	ins    BYTE PTR es:[rdi],dx
   14002ff31:	add    BYTE PTR [rsp+rax*1+0x65657266],ch
   14002ff38:	add    BYTE PTR [rax],al
   14002ff3a:	xor    al,BYTE PTR [rip+0x74727473]        # 0x1b47573b3
   14002ff40:	outs   dx,DWORD PTR ds:[rsi]
   14002ff41:	add    BYTE PTR fs:[rax],al
   14002ff44:	jae    0x14002ff4a
   14002ff46:	(bad)  
   14002ff47:	(bad)  
   14002ff48:	outs   dx,DWORD PTR ds:[rsi]
   14002ff49:	jb     0x14002ffbf
   14002ff4b:	add    BYTE PTR [rbp+0x53],cl
   14002ff4e:	push   rsi
   14002ff4f:	rex.XB push r10
   14002ff51:	cmp    DWORD PTR [rax],esi
   14002ff53:	cs fs ins BYTE PTR es:[rdi],dx
   14002ff56:	ins    BYTE PTR es:[rdi],dx
   14002ff57:	add    BYTE PTR [rcx+0x0],bl
   14002ff5a:	pop    rdi
   14002ff5b:	pop    rdi
   14002ff5c:	rex.XB pop r15
   14002ff5e:	jae    0x14002ffd0
   14002ff60:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14002ff64:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   14002ff6b:	ins    BYTE PTR es:[rdi],dx
   14002ff6c:	gs jb  0x14002ff6f
   14002ff6f:	add    BYTE PTR [rbx+rax*1+0x6c6e755f],ah
   14002ff76:	outs   dx,DWORD PTR ds:[rsi]
   14002ff77:	movsxd ebp,DWORD PTR [rbx+0x0]
   14002ff7a:	test   DWORD PTR [rax],eax
   14002ff7c:	pop    rdi
   14002ff7d:	pop    rdi
   14002ff7e:	fs ins BYTE PTR es:[rdi],dx
   14002ff80:	ins    BYTE PTR es:[rdi],dx
   14002ff81:	outs   dx,DWORD PTR ds:[rsi]
   14002ff82:	outs   dx,BYTE PTR ds:[rsi]
   14002ff83:	gs js  0x14002ffef
   14002ff86:	je     0x14002ff88
   14002ff88:	(bad)  
   14002ff89:	add    DWORD PTR [rdi+0x65],ebx
   14002ff8c:	outs   dx,BYTE PTR ds:[rsi]
   14002ff8d:	movsxd ebp,DWORD PTR [rdi+0x64]
   14002ff90:	gs pop rdi
   14002ff92:	jo     0x140030003
   14002ff94:	imul   ebp,DWORD PTR [rsi+0x74],0x3d007265
   14002ff9b:	add    bl,BYTE PTR [rdi+0x6c]
   14002ff9e:	outs   dx,DWORD PTR ds:[rsi]
   14002ff9f:	movsxd ebp,DWORD PTR [rbx+0x0]
   14002ffa2:	in     al,0x2
   14002ffa4:	pop    rdi
   14002ffa5:	outs   dx,DWORD PTR ds:[rsi]
   14002ffa6:	outs   dx,BYTE PTR ds:[rsi]
   14002ffa7:	gs js  0x140030013
   14002ffaa:	je     0x14002ffac
   14002ffac:	sub    eax,0x65645f01
   14002ffb1:	movsxd ebp,DWORD PTR [rdi+0x64]
   14002ffb4:	gs pop rdi
   14002ffb6:	jo     0x140030027
   14002ffb8:	imul   ebp,DWORD PTR [rsi+0x74],0xe2007265
   14002ffbf:	add    BYTE PTR [rdi+0x61],bl
   14002ffc2:	ins    DWORD PTR es:[rdi],dx
   14002ffc3:	jae    0x14003002c
   14002ffc5:	pop    rdi
   14002ffc6:	gs js  0x140030032
   14002ffc9:	je     0x14002ffcb
   14002ffcb:	add    BYTE PTR [rax+0x675f5f00],dl
   14002ffd1:	gs je  0x140030041
   14002ffd4:	(bad)  
   14002ffd5:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   14002ffdc:	push   rbp
   14002ffdd:	add    BYTE PTR [rdi+0x58],bl
   14002ffe0:	movsxd esi,DWORD PTR [rax+0x74]
   14002ffe3:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x1460072
   14002ffec:	pop    rdi
   14002ffed:	gs js  0x140030059
   14002fff0:	je     0x14002fff2
   14002fff2:	stc    
   14002fff3:	add    BYTE PTR [rdi+0x63],bl
   14002fff6:	gs js  0x140030062
   14002fff9:	je     0x14002fffb
   14002fffb:	add    BYTE PTR [rcx+0x69786504],dl
   140030001:	je     0x140030003
   140030003:	add    BYTE PTR [rcx+0x695f5f00],dl
   140030009:	outs   dx,BYTE PTR ds:[rsi]
   14003000a:	imul   esi,DWORD PTR [rbp+riz*2+0x6e],0x1ce0076
   140030012:	pop    rdi
   140030013:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   14003001a:	ins    DWORD PTR es:[rdi],dx
   14003001b:	add    bh,cl
   14003001d:	add    DWORD PTR [rdi+0x69],ebx
   140030020:	outs   dx,BYTE PTR ds:[rsi]
   140030021:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x655f6d72
   140030029:	add    BYTE PTR [rcx],cl
   14003002b:	add    DWORD PTR [rdi+0x63],ebx
   14003002e:	outs   dx,DWORD PTR ds:[rsi]
   14003002f:	outs   dx,BYTE PTR ds:[rsi]
   140030030:	imul   sp,WORD PTR [rdi+0x74],0x7268
   140030036:	gs (bad) 
   140030038:	fs ins BYTE PTR es:[rdi],dx
   14003003a:	outs   dx,DWORD PTR ds:[rsi]
   14003003b:	movsxd esp,DWORD PTR [rcx+0x6c]
   14003003e:	add    BYTE PTR gs:[rdi+0x735f5f00],bh
   140030045:	gs je  0x1400300bd
   140030048:	jae    0x1400300af
   14003004a:	jb     0x1400300b9
   14003004c:	(bad)  
   14003004d:	je     0x1400300b7
   14003004f:	gs jb  0x1400300c4
   140030052:	add    BYTE PTR [rax],al
   140030054:	or     BYTE PTR [rcx],al
   140030056:	pop    rdi
   140030057:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14003005a:	ins    DWORD PTR es:[rdi],dx
   14003005b:	outs   dx,DWORD PTR ds:[rsi]
   14003005c:	fs add BYTE PTR gs:[rax],al
   140030060:	(bad)
   140030065:	outs   dx,DWORD PTR ds:[rsi]
   140030066:	fs add BYTE PTR gs:[rax],al
   14003006a:	mov    esp,0x735f5f00
   14003006f:	gs je  0x1400300d1
   140030072:	(bad)  
   140030073:	jo     0x1400300e5
   140030075:	pop    rdi
   140030076:	je     0x1400300f1
   140030078:	jo     0x1400300df
   14003007a:	add    BYTE PTR [rax],al
   14003007c:	rex.XB add BYTE PTR [r15],dil
   14003007f:	je     0x1400300e6
   140030081:	jb     0x1400300f0
   140030083:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   14003008a:	pop    rcx
   14003008b:	pop    r8
   14003008d:	pop    rax
   14003008e:	pop    rdx
   14003008f:	add    BYTE PTR [rax],bh
   140030091:	add    BYTE PTR [rdi],bh
   140030093:	pop    rdi
   140030094:	je     0x14003010f
   140030096:	jo     0x1400300fd
   140030098:	pop    rdi
   140030099:	imul   ebp,DWORD PTR [rsi+0x66],0x74645f6f
   1400300a0:	outs   dx,DWORD PTR ds:[rsi]
   1400300a1:	jb     0x140030102
   1400300a3:	imul   ebp,DWORD PTR [rsi+0x74],0x616e7265
   1400300aa:	ins    BYTE PTR es:[rdi],dx
   1400300ab:	pop    rdi
   1400300ac:	ins    DWORD PTR es:[rdi],dx
   1400300ad:	gs je  0x140030118
   1400300b0:	outs   dx,DWORD PTR ds:[rsi]
   1400300b1:	fs rex je 0x14003012e
   1400300b5:	jo     0x14003011c
   1400300b7:	pop    rdi
   1400300b8:	imul   ebp,DWORD PTR [rsi+0x66],0x5140406f
   1400300bf:	rex.RB
   1400300c0:	rex.B
   1400300c1:	pop    r8
   1400300c3:	pop    rax
   1400300c4:	pop    rdx
   1400300c5:	add    BYTE PTR [rbx+0x635f5f00],al
   1400300cb:	jb     0x140030141
   1400300cd:	pop    rdi
   1400300ce:	fs gs (bad) 
   1400300d1:	jne    0x14003013a
   1400300d3:	addr32 gs jb 0x140030136
   1400300d7:	push   0x6b6f6f
   1400300dc:	rol    BYTE PTR [rbx+rdx*2],0x6c
   1400300e0:	gs gs jo 0x1400300e4
   1400300e4:	(bad)  
   1400300e5:	add    al,0x54
   1400300e7:	gs jb  0x140030157
   1400300ea:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   1400300f1:	outs   dx,DWORD PTR ds:[rsi]
   1400300f2:	movsxd esp,DWORD PTR [rbp+0x73]
   1400300f5:	jae    0x1400300f7
   1400300f7:	add    dh,al
   1400300f9:	add    DWORD PTR [rdi+0x65],eax
   1400300fc:	je     0x140030141
   1400300fe:	jne    0x140030172
   140030100:	jb     0x140030167
   140030102:	outs   dx,BYTE PTR ds:[rsi]
   140030103:	je     0x140030155
   140030105:	jb     0x140030176
   140030107:	movsxd esp,DWORD PTR [rbp+0x73]
   14003010a:	jae    0x14003010c
   14003010c:	loop   0x140030112
   14003010e:	push   rbp
   14003010f:	outs   dx,BYTE PTR ds:[rsi]
   140030110:	push   0x6c646e61
   140030115:	gs fs rex.RB js 0x14003017d
   14003011a:	gs jo  0x140030191
   14003011d:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140030124:	gs jb  0x140030127
   140030127:	add    BYTE PTR [rbx+0x74655304],dh
   14003012d:	push   rbp
   14003012e:	outs   dx,BYTE PTR ds:[rsi]
   14003012f:	push   0x6c646e61
   140030134:	gs fs rex.RB js 0x14003019c
   140030139:	gs jo  0x1400301b0
   14003013c:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140030143:	gs jb  0x140030146
   140030146:	add    al,BYTE PTR [rbx]
   140030148:	rex.WB jae 0x14003018f
   14003014b:	gs (bad) 
   14003014d:	jne    0x1400301b6
   14003014f:	addr32 gs jb 0x1400301a3
   140030153:	jb     0x1400301ba
   140030155:	jae    0x1400301bc
   140030157:	outs   dx,BYTE PTR ds:[rsi]
   140030158:	je     0x14003015a
   14003015a:	es add al,0x52
   14003015d:	je     0x1400301cb
   14003015f:	push   rsi
   140030160:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   140030167:	outs   dx,BYTE PTR ds:[rsi]
   140030168:	ja     0x1400301d3
   14003016a:	outs   dx,BYTE PTR ds:[rsi]
   14003016b:	add    BYTE PTR fs:[rax],al
   14003016e:	(bad)  
   14003016f:	add    al,0x52
   140030171:	je     0x1400301df
   140030173:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140030175:	outs   dx,DWORD PTR ds:[rsi]
   140030176:	imul   esi,DWORD PTR [rbp+0x70],0x46
   14003017a:	jne    0x1400301ea
   14003017c:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140030180:	outs   dx,BYTE PTR ds:[rsi]
   140030181:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140030183:	je     0x1400301f7
   140030185:	jns    0x140030187
   140030187:	add    BYTE PTR [rax],bl
   140030189:	add    al,0x52
   14003018b:	je     0x1400301f9
   14003018d:	rex.XB (bad) 
   14003018f:	jo     0x140030205
   140030191:	jne    0x140030205
   140030193:	rex.XB outs dx,DWORD PTR gs:[rsi]
   140030196:	outs   dx,BYTE PTR ds:[rsi]
   140030197:	je     0x1400301fe
   140030199:	js     0x14003020f
   14003019b:	add    BYTE PTR [rcx+0x65755103],ch
   1400301a1:	jb     0x14003021c
   1400301a3:	push   rax
   1400301a4:	gs jb  0x14003020d
   1400301a7:	outs   dx,DWORD PTR ds:[rsi]
   1400301a8:	jb     0x140030217
   1400301aa:	(bad)  
   1400301ab:	outs   dx,BYTE PTR ds:[rsi]
   1400301ac:	movsxd esp,DWORD PTR [rbp+0x43]
   1400301af:	outs   dx,DWORD PTR ds:[rsi]
   1400301b0:	jne    0x140030220
   1400301b2:	je     0x140030219
   1400301b4:	jb     0x1400301b6
   1400301b6:	(bad)  
   1400301b7:	add    al,BYTE PTR [rdi+0x65]
   1400301ba:	je     0x140030210
   1400301bc:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   1400301c3:	je     0x1400301c5
   1400301c5:	add    bl,cl
   1400301c7:	add    DWORD PTR [rdi+0x65],eax
   1400301ca:	je     0x14003020f
   1400301cc:	jne    0x140030240
   1400301ce:	jb     0x140030235
   1400301d0:	outs   dx,BYTE PTR ds:[rsi]
   1400301d1:	je     0x140030227
   1400301d3:	push   0x64616572
   1400301d8:	rex.WB
   1400301d9:	add    BYTE PTR fs:[rax],al
   1400301dc:	mov    DWORD PTR [rcx],0x43746547
   1400301e2:	jne    0x140030256
   1400301e4:	jb     0x14003024b
   1400301e6:	outs   dx,BYTE PTR ds:[rsi]
   1400301e7:	je     0x140030239
   1400301e9:	jb     0x14003025a
   1400301eb:	movsxd esp,DWORD PTR [rbp+0x73]
   1400301ee:	jae    0x140030239
   1400301f0:	add    BYTE PTR fs:[rax+0x74654702],al
   1400301f7:	push   rbx
   1400301f8:	jns    0x14003026d
   1400301fa:	je     0x140030261
   1400301fc:	ins    DWORD PTR es:[rdi],dx
   1400301fd:	push   rsp
   1400301fe:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   140030205:	ins    BYTE PTR es:[rdi],dx
   140030206:	gs push rsp
   140030208:	imul   ebp,DWORD PTR [rbp+0x65],0x52454b00
   14003020f:	rex.WRX
   140030210:	rex.RB
   140030211:	xor    r14,QWORD PTR [rdx]
   140030214:	cs fs ins BYTE PTR es:[rdi],dx
   140030217:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .data:

0000000140031000 <.data>:
   140031000:	add    BYTE PTR [rax],cl
   140031002:	add    al,BYTE PTR [rax+0x1]
   140031005:	add    BYTE PTR [rax],al
   140031007:	add    BYTE PTR [rax-0x7e],ch
   14003100a:	add    al,BYTE PTR [rax+0x1]
	...
   140031015:	add    BYTE PTR [rax],al
   140031017:	add    BYTE PTR [rsi],ch
   140031019:	(bad)  
   14003101a:	push   r14
   14003101c:	imul   r14d,DWORD PTR [rdx+0x65],0x76697463
   140031024:	gs jae 0x140031067
   140031027:	push   rcx
   140031028:	push   rcx
   140031029:	ins    DWORD PTR es:[rdi],dx
   14003102a:	ins    BYTE PTR es:[rdi],dx
   14003102b:	rex.WX push rbx
   14003102d:	rex
   14003102e:	add    BYTE PTR [rax-0x7e],bpl
   140031032:	add    al,BYTE PTR [rax+0x1]
	...
   14003103d:	add    BYTE PTR [rax],al
   14003103f:	add    BYTE PTR [rsi],ch
   140031041:	(bad)  
   140031042:	push   r14
   140031044:	(bad)
   140031049:	(bad)  
   14003104a:	jae    0x1400310c0
   14003104c:	rex jae 0x1400310c3
   14003104f:	fs rex
   140031051:	add    BYTE PTR [rax],al
   140031054:	add    BYTE PTR [rax],al
   140031056:	add    BYTE PTR [rax],al
   140031058:	push   0x1400282
	...
   140031065:	add    BYTE PTR [rax],al
   140031067:	add    BYTE PTR [rsi],ch
   140031069:	(bad)  
   14003106a:	push   r14
   14003106c:	gs js  0x1400310d2
   14003106f:	gs jo  0x1400310e6
   140031072:	imul   ebp,DWORD PTR [rdi+0x6e],0x64747340
   140031079:	rex
   14003107a:	add    BYTE PTR [rax],al
   14003107d:	add    BYTE PTR [rax],al
   14003107f:	add    BYTE PTR [rax-0x7e],ch
   140031082:	add    al,BYTE PTR [rax+0x1]
	...
   14003108d:	add    BYTE PTR [rax],al
   14003108f:	add    BYTE PTR [rsi],ch
   140031091:	(bad)  
   140031092:	push   r13
   140031094:	rex.WB ins DWORD PTR es:[rdi],dx
   140031096:	jo     0x140031107
   140031098:	jb     0x14003110e
   14003109a:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14003109c:	ins    BYTE PTR es:[rdi],dx
   14003109d:	ins    BYTE PTR es:[rdi],dx
   14003109e:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   1400310a3:	rex
   1400310a4:	add    BYTE PTR [rax],al
   1400310a7:	add    BYTE PTR [rax],al
   1400310a9:	or     BYTE PTR [rdx],al
   1400310ab:	rex add DWORD PTR [rax],eax
   1400310ae:	add    BYTE PTR [rax],al
   1400310b0:	push   0x1400282
	...
   1400310bd:	add    BYTE PTR [rax],al
   1400310bf:	add    BYTE PTR [rsi],ch
   1400310c1:	(bad)  
   1400310c2:	push   r14
   1400310c4:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   1400310c6:	fs gs rex
   1400310c9:	push   r11
   1400310cb:	push   rsp
   1400310cc:	rex push rcx
   1400310ce:	push   rcx
   1400310cf:	ins    DWORD PTR es:[rdi],dx
   1400310d0:	ins    BYTE PTR es:[rdi],dx
   1400310d1:	rex.WX push rbx
   1400310d3:	rex
   1400310d4:	add    BYTE PTR [rax],al
   1400310d7:	add    BYTE PTR [rax-0x7e],ch
   1400310da:	add    al,BYTE PTR [rax+0x1]
	...
   1400310e5:	add    BYTE PTR [rax],al
   1400310e7:	add    BYTE PTR [rsi],ch
   1400310e9:	(bad)  
   1400310ea:	push   r14
   1400310ec:	rex.WRB (bad) 
   1400310ee:	outs   dx,BYTE PTR ds:[rsi]
   1400310ef:	(bad)  
   1400310f0:	addr32 gs fs rex push rcx
   1400310f5:	push   rcx
   1400310f6:	ins    DWORD PTR es:[rdi],dx
   1400310f7:	ins    BYTE PTR es:[rdi],dx
   1400310f8:	rex.WX push rbx
   1400310fa:	rex
   1400310fb:	add    BYTE PTR [rax],al
   1400310fe:	add    BYTE PTR [rax],al
   140031100:	push   0x1400282
	...
   14003110d:	add    BYTE PTR [rax],al
   14003110f:	add    BYTE PTR [rsi],ch
   140031111:	(bad)  
   140031112:	push   r14
   140031114:	rex.RB js 0x140031187
   140031117:	jb     0x14003117e
   140031119:	jae    0x14003118e
   14003111b:	imul   ebp,DWORD PTR [rdi+0x6e],0x65646f4e
   140031122:	rex
   140031123:	push   r11
   140031125:	push   rsp
   140031126:	rex push rcx
   140031128:	push   rcx
   140031129:	ins    DWORD PTR es:[rdi],dx
   14003112a:	ins    BYTE PTR es:[rdi],dx
   14003112b:	rex.WX push rbx
   14003112d:	rex
   14003112e:	add    BYTE PTR [rax-0x7e],bpl
   140031132:	add    al,BYTE PTR [rax+0x1]
	...
   14003113d:	add    BYTE PTR [rax],al
   14003113f:	add    BYTE PTR [rsi],ch
   140031141:	(bad)  
   140031142:	push   r14
   140031144:	push   rbx
   140031145:	je     0x1400311a8
   140031147:	je     0x1400311ae
   140031149:	ins    DWORD PTR es:[rdi],dx
   14003114a:	outs   dx,BYTE PTR gs:[rsi]
   14003114c:	je     0x14003118e
   14003114e:	push   r11
   140031150:	push   rsp
   140031151:	rex push rcx
   140031153:	push   rcx
   140031154:	ins    DWORD PTR es:[rdi],dx
   140031155:	ins    BYTE PTR es:[rdi],dx
   140031156:	rex.WX push rbx
   140031158:	rex
   140031159:	add    BYTE PTR [rax],al
   14003115c:	add    BYTE PTR [rax],al
   14003115e:	add    BYTE PTR [rax],al
   140031160:	push   0x1400282
	...
   14003116d:	add    BYTE PTR [rax],al
   14003116f:	add    BYTE PTR [rsi],ch
   140031171:	(bad)  
   140031172:	push   r14
   140031174:	rex.WRX
   140031175:	gs jae 0x1400311ec
   140031178:	gs fs rex.RB js 0x1400311ed
   14003117d:	jb     0x1400311e4
   14003117f:	jae    0x1400311f4
   140031181:	imul   ebp,DWORD PTR [rdi+0x6e],0x54534140
   140031188:	rex push rcx
   14003118a:	push   rcx
   14003118b:	ins    DWORD PTR es:[rdi],dx
   14003118c:	ins    BYTE PTR es:[rdi],dx
   14003118d:	rex.WX push rbx
   14003118f:	rex
   140031190:	add    BYTE PTR [rax],al
   140031193:	add    BYTE PTR [rax],al
   140031195:	add    BYTE PTR [rax],al
   140031197:	add    BYTE PTR [rax-0x7e],ch
   14003119a:	add    al,BYTE PTR [rax+0x1]
	...
   1400311a5:	add    BYTE PTR [rax],al
   1400311a7:	add    BYTE PTR [rsi],ch
   1400311a9:	(bad)  
   1400311aa:	push   r14
   1400311ac:	push   rsp
   1400311ad:	push   0x78457369
   1400311b2:	jo     0x140031226
   1400311b4:	gs jae 0x14003122a
   1400311b7:	imul   ebp,DWORD PTR [rdi+0x6e],0x54534140
   1400311be:	rex push rcx
   1400311c0:	push   rcx
   1400311c1:	ins    DWORD PTR es:[rdi],dx
   1400311c2:	ins    BYTE PTR es:[rdi],dx
   1400311c3:	rex.WX push rbx
   1400311c5:	rex
   1400311c6:	add    BYTE PTR [rax-0x7e],bpl
   1400311ca:	add    al,BYTE PTR [rax+0x1]
	...
   1400311d5:	add    BYTE PTR [rax],al
   1400311d7:	add    BYTE PTR [rsi],ch
   1400311d9:	(bad)  
   1400311da:	push   r14
   1400311dc:	rex.WB
   1400311dd:	fs outs dx,BYTE PTR gs:[rsi]
   1400311e0:	je     0x14003124b
   1400311e2:	imul   sp,WORD PTR [rbp+0x72],0x7845
   1400311e8:	jo     0x14003125c
   1400311ea:	gs jae 0x140031260
   1400311ed:	imul   ebp,DWORD PTR [rdi+0x6e],0x54534140
   1400311f4:	rex push rcx
   1400311f6:	push   rcx
   1400311f7:	ins    DWORD PTR es:[rdi],dx
   1400311f8:	ins    BYTE PTR es:[rdi],dx
   1400311f9:	rex.WX push rbx
   1400311fb:	rex
   1400311fc:	add    BYTE PTR [rax],al
   1400311ff:	add    BYTE PTR [rax-0x7e],ch
   140031202:	add    al,BYTE PTR [rax+0x1]
	...
   14003120d:	add    BYTE PTR [rax],al
   14003120f:	add    BYTE PTR [rsi],ch
   140031211:	(bad)  
   140031212:	push   r14
   140031214:	rex.WRX jne 0x140031283
   140031217:	ins    BYTE PTR es:[rdi],dx
   140031218:	rex.RB js 0x14003128b
   14003121b:	jb     0x140031282
   14003121d:	jae    0x140031292
   14003121f:	imul   ebp,DWORD PTR [rdi+0x6e],0x54534140
   140031226:	rex push rcx
   140031228:	push   rcx
   140031229:	ins    DWORD PTR es:[rdi],dx
   14003122a:	ins    BYTE PTR es:[rdi],dx
   14003122b:	rex.WX push rbx
   14003122d:	rex
   14003122e:	add    BYTE PTR [rax-0x7e],bpl
   140031232:	add    al,BYTE PTR [rax+0x1]
	...
   14003123d:	add    BYTE PTR [rax],al
   14003123f:	add    BYTE PTR [rsi],ch
   140031241:	(bad)  
   140031242:	push   r14
   140031244:	push   rsp
   140031245:	jb     0x1400312bc
   140031247:	imul   r14,QWORD PTR gs:[rbp+riz*2+0x72],0x41406c61
   140031251:	push   rbx
   140031252:	push   rsp
   140031253:	rex push rcx
   140031255:	push   rcx
   140031256:	ins    DWORD PTR es:[rdi],dx
   140031257:	ins    BYTE PTR es:[rdi],dx
   140031258:	rex.WX push rbx
   14003125a:	rex
   14003125b:	add    BYTE PTR [rax],al
   14003125e:	add    BYTE PTR [rax],al
   140031260:	push   0x1400282
	...
   14003126d:	add    BYTE PTR [rax],al
   14003126f:	add    BYTE PTR [rsi],ch
   140031271:	(bad)  
   140031272:	push   r14
   140031274:	rex.RX (bad) 
   140031276:	ins    BYTE PTR es:[rdi],dx
   140031277:	jae    0x1400312de
   140031279:	imul   r14,QWORD PTR [rbp+riz*2+0x72],0x41406c61
   140031282:	push   rbx
   140031283:	push   rsp
   140031284:	rex push rcx
   140031286:	push   rcx
   140031287:	ins    DWORD PTR es:[rdi],dx
   140031288:	ins    BYTE PTR es:[rdi],dx
   140031289:	rex.WX push rbx
   14003128b:	rex
   14003128c:	add    BYTE PTR [rax],al
   14003128f:	add    BYTE PTR [rax-0x7e],ch
   140031292:	add    al,BYTE PTR [rax+0x1]
	...
   14003129d:	add    BYTE PTR [rax],al
   14003129f:	add    BYTE PTR [rsi],ch
   1400312a1:	(bad)  
   1400312a2:	push   r14
   1400312a4:	rex.WRX jne 0x140031314
   1400312a7:	gs jb  0x140031313
   1400312aa:	movsxd ecx,DWORD PTR [rcx+rbp*2+0x74]
   1400312ae:	gs jb  0x140031312
   1400312b1:	ins    BYTE PTR es:[rdi],dx
   1400312b2:	rex
   1400312b3:	push   r11
   1400312b5:	push   rsp
   1400312b6:	rex push rcx
   1400312b8:	push   rcx
   1400312b9:	ins    DWORD PTR es:[rdi],dx
   1400312ba:	ins    BYTE PTR es:[rdi],dx
   1400312bb:	rex.WX push rbx
   1400312bd:	rex
   1400312be:	add    BYTE PTR [rax-0x7e],bpl
   1400312c2:	add    al,BYTE PTR [rax+0x1]
	...
   1400312cd:	add    BYTE PTR [rax],al
   1400312cf:	add    BYTE PTR [rsi],ch
   1400312d1:	(bad)  
   1400312d2:	push   r14
   1400312d4:	push   rbx
   1400312d5:	je     0x140031349
   1400312d7:	imul   ebp,DWORD PTR [rsi+0x67],0x6574694c
   1400312de:	jb     0x140031341
   1400312e0:	ins    BYTE PTR es:[rdi],dx
   1400312e1:	rex
   1400312e2:	push   r11
   1400312e4:	push   rsp
   1400312e5:	rex push rcx
   1400312e7:	push   rcx
   1400312e8:	ins    DWORD PTR es:[rdi],dx
   1400312e9:	ins    BYTE PTR es:[rdi],dx
   1400312ea:	rex.WX push rbx
   1400312ec:	rex
   1400312ed:	add    BYTE PTR [rax],al
   1400312f0:	push   0x1400282
	...
   1400312fd:	add    BYTE PTR [rax],al
   1400312ff:	add    BYTE PTR [rsi],ch
   140031301:	(bad)  
   140031302:	push   r14
   140031304:	push   rdx
   140031305:	gs addr32 rex.RB js 0x14003137a
   14003130a:	imul   r14,QWORD PTR [rbp+riz*2+0x72],0x41406c61
   140031313:	push   rbx
   140031314:	push   rsp
   140031315:	rex push rcx
   140031317:	push   rcx
   140031318:	ins    DWORD PTR es:[rdi],dx
   140031319:	ins    BYTE PTR es:[rdi],dx
   14003131a:	rex.WX push rbx
   14003131c:	rex
   14003131d:	add    BYTE PTR [rax],al
   140031320:	push   0x1400282
	...
   14003132d:	add    BYTE PTR [rax],al
   14003132f:	add    BYTE PTR [rsi],ch
   140031331:	(bad)  
   140031332:	push   r14
   140031334:	rex.B jb 0x1400313a9
   140031337:	(bad)  
   140031338:	jns    0x140031386
   14003133a:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x41406c61
   140031342:	push   rbx
   140031343:	push   rsp
   140031344:	rex push rcx
   140031346:	push   rcx
   140031347:	ins    DWORD PTR es:[rdi],dx
   140031348:	ins    BYTE PTR es:[rdi],dx
   140031349:	rex.WX push rbx
   14003134b:	rex
   14003134c:	add    BYTE PTR [rax],al
   14003134f:	add    BYTE PTR [rax-0x7e],ch
   140031352:	add    al,BYTE PTR [rax+0x1]
	...
   14003135d:	add    BYTE PTR [rax],al
   14003135f:	add    BYTE PTR [rsi],ch
   140031361:	(bad)  
   140031362:	push   r14
   140031364:	rex.WRXB (bad) 
   140031366:	push   0x65
   140031368:	movsxd esi,DWORD PTR [rsp+rcx*2+0x69]
   14003136c:	je     0x1400313d3
   14003136e:	jb     0x1400313d1
   140031370:	ins    BYTE PTR es:[rdi],dx
   140031371:	rex
   140031372:	push   r11
   140031374:	push   rsp
   140031375:	rex push rcx
   140031377:	push   rcx
   140031378:	ins    DWORD PTR es:[rdi],dx
   140031379:	ins    BYTE PTR es:[rdi],dx
   14003137a:	rex.WX push rbx
   14003137c:	rex
   14003137d:	add    BYTE PTR [rax],al
   140031380:	push   0x1400282
	...
   14003138d:	add    BYTE PTR [rax],al
   14003138f:	add    BYTE PTR [rsi],ch
   140031391:	(bad)  
   140031392:	push   r14
   140031394:	rex.RB ins BYTE PTR es:[rdi],dx
   140031396:	imul   esi,DWORD PTR [rbx+0x69],0x41406e6f
   14003139d:	push   rbx
   14003139e:	push   rsp
   14003139f:	rex push rcx
   1400313a1:	push   rcx
   1400313a2:	ins    DWORD PTR es:[rdi],dx
   1400313a3:	ins    BYTE PTR es:[rdi],dx
   1400313a4:	rex.WX push rbx
   1400313a6:	rex
   1400313a7:	add    BYTE PTR [rax],al
   1400313aa:	add    BYTE PTR [rax],al
   1400313ac:	add    BYTE PTR [rax],al
   1400313ae:	add    BYTE PTR [rax],al
   1400313b0:	push   0x1400282
	...
   1400313bd:	add    BYTE PTR [rax],al
   1400313bf:	add    BYTE PTR [rsi],ch
   1400313c1:	(bad)  
   1400313c2:	push   r14
   1400313c4:	rex.RB ins BYTE PTR es:[rdi],dx
   1400313c6:	gs ins DWORD PTR es:[rdi],dx
   1400313c8:	outs   dx,BYTE PTR gs:[rsi]
   1400313ca:	je     0x140031418
   1400313cc:	imul   esi,DWORD PTR [rbx+0x74],0x54534140
   1400313d3:	rex push rcx
   1400313d5:	push   rcx
   1400313d6:	ins    DWORD PTR es:[rdi],dx
   1400313d7:	ins    BYTE PTR es:[rdi],dx
   1400313d8:	rex.WX push rbx
   1400313da:	rex
   1400313db:	add    BYTE PTR [rax],al
   1400313de:	add    BYTE PTR [rax],al
   1400313e0:	push   0x1400282
	...
   1400313ed:	add    BYTE PTR [rax],al
   1400313ef:	add    BYTE PTR [rsi],ch
   1400313f1:	(bad)  
   1400313f2:	push   r14
   1400313f4:	push   rax
   1400313f5:	jb     0x140031466
   1400313f7:	jo     0x14003145e
   1400313f9:	jb     0x14003146f
   1400313fb:	jns    0x14003144b
   1400313fd:	(bad)  
   1400313fe:	ins    DWORD PTR es:[rdi],dx
   1400313ff:	gs rex
   140031401:	push   r11
   140031403:	push   rsp
   140031404:	rex push rcx
   140031406:	push   rcx
   140031407:	ins    DWORD PTR es:[rdi],dx
   140031408:	ins    BYTE PTR es:[rdi],dx
   140031409:	rex.WX push rbx
   14003140b:	rex
   14003140c:	add    BYTE PTR [rax],al
   14003140f:	add    BYTE PTR [rax-0x7e],ch
   140031412:	add    al,BYTE PTR [rax+0x1]
	...
   14003141d:	add    BYTE PTR [rax],al
   14003141f:	add    BYTE PTR [rsi],ch
   140031421:	(bad)  
   140031422:	push   r14
   140031424:	push   rax
   140031425:	jb     0x140031496
   140031427:	jo     0x14003148e
   140031429:	jb     0x14003149f
   14003142b:	jns    0x14003146e
   14003142d:	jae    0x1400314a2
   14003142f:	imul   esp,DWORD PTR [rdi+0x6e],0x746e656d
   140031436:	rex
   140031437:	push   r11
   140031439:	push   rsp
   14003143a:	rex push rcx
   14003143c:	push   rcx
   14003143d:	ins    DWORD PTR es:[rdi],dx
   14003143e:	ins    BYTE PTR es:[rdi],dx
   14003143f:	rex.WX push rbx
   140031441:	rex
   140031442:	add    BYTE PTR [rax],al
   140031445:	add    BYTE PTR [rax],al
   140031447:	add    BYTE PTR [rax-0x7e],ch
   14003144a:	add    al,BYTE PTR [rax+0x1]
	...
   140031455:	add    BYTE PTR [rax],al
   140031457:	add    BYTE PTR [rsi],ch
   140031459:	(bad)  
   14003145a:	push   r14
   14003145c:	push   rax
   14003145d:	jb     0x1400314ce
   14003145f:	jo     0x1400314c6
   140031461:	jb     0x1400314d7
   140031463:	jns    0x1400314a6
   140031465:	jae    0x1400314da
   140031467:	imul   esp,DWORD PTR [rdi+0x6e],0x746e656d
   14003146e:	imul   r14,QWORD PTR [rbx+0x74],0x54534140
   140031476:	rex push rcx
   140031478:	push   rcx
   140031479:	ins    DWORD PTR es:[rdi],dx
   14003147a:	ins    BYTE PTR es:[rdi],dx
   14003147b:	rex.WX push rbx
   14003147d:	rex
   14003147e:	add    BYTE PTR [rax-0x7e],bpl
   140031482:	add    al,BYTE PTR [rax+0x1]
	...
   14003148d:	add    BYTE PTR [rax],al
   14003148f:	add    BYTE PTR [rsi],ch
   140031491:	(bad)  
   140031492:	push   r14
   140031494:	push   rax
   140031495:	jb     0x140031506
   140031497:	jo     0x1400314fe
   140031499:	jb     0x14003150f
   14003149b:	jns    0x1400314eb
   14003149d:	(bad)  
   14003149e:	ins    DWORD PTR es:[rdi],dx
   14003149f:	rex.B outs dx,BYTE PTR gs:[rsi]
   1400314a2:	fs push rsi
   1400314a4:	(bad)  
   1400314a5:	ins    BYTE PTR es:[rdi],dx
   1400314a6:	jne    0x14003150d
   1400314a8:	rex
   1400314a9:	push   r11
   1400314ab:	push   rsp
   1400314ac:	rex push rcx
   1400314ae:	push   rcx
   1400314af:	ins    DWORD PTR es:[rdi],dx
   1400314b0:	ins    BYTE PTR es:[rdi],dx
   1400314b1:	rex.WX push rbx
   1400314b3:	rex
   1400314b4:	add    BYTE PTR [rax],al
   1400314b7:	add    BYTE PTR [rax-0x7e],ch
   1400314ba:	add    al,BYTE PTR [rax+0x1]
	...
   1400314c5:	add    BYTE PTR [rax],al
   1400314c7:	add    BYTE PTR [rsi],ch
   1400314c9:	(bad)  
   1400314ca:	push   r14
   1400314cc:	push   rax
   1400314cd:	jb     0x14003153e
   1400314cf:	jo     0x140031536
   1400314d1:	jb     0x140031547
   1400314d3:	jns    0x14003151c
   1400314d5:	gs je  0x14003154c
   1400314d8:	gs jb  0x14003152e
   1400314db:	gs je  0x140031552
   1400314de:	gs jb  0x140031521
   1400314e1:	push   r11
   1400314e3:	push   rsp
   1400314e4:	rex push rcx
   1400314e6:	push   rcx
   1400314e7:	ins    DWORD PTR es:[rdi],dx
   1400314e8:	ins    BYTE PTR es:[rdi],dx
   1400314e9:	rex.WX push rbx
   1400314eb:	rex
   1400314ec:	add    BYTE PTR [rax],al
   1400314ef:	add    BYTE PTR [rax-0x7e],ch
   1400314f2:	add    al,BYTE PTR [rax+0x1]
	...
   1400314fd:	add    BYTE PTR [rax],al
   1400314ff:	add    BYTE PTR [rsi],ch
   140031501:	(bad)  
   140031502:	push   r14
   140031504:	rex.WB
   140031505:	fs outs dx,BYTE PTR gs:[rsi]
   140031508:	je     0x140031573
   14003150a:	imul   sp,WORD PTR [rbp+0x72],0x7250
   140031510:	outs   dx,DWORD PTR ds:[rsi]
   140031511:	jo     0x140031578
   140031513:	jb     0x140031589
   140031515:	jns    0x140031565
   140031517:	(bad)  
   140031518:	ins    DWORD PTR es:[rdi],dx
   140031519:	gs rex
   14003151b:	push   r11
   14003151d:	push   rsp
   14003151e:	rex push rcx
   140031520:	push   rcx
   140031521:	ins    DWORD PTR es:[rdi],dx
   140031522:	ins    BYTE PTR es:[rdi],dx
   140031523:	rex.WX push rbx
   140031525:	rex
   140031526:	add    BYTE PTR [rax-0x7e],bpl
   14003152a:	add    al,BYTE PTR [rax+0x1]
	...
   140031535:	add    BYTE PTR [rax],al
   140031537:	add    BYTE PTR [rsi],ch
   140031539:	(bad)  
   14003153a:	push   r14
   14003153c:	push   rbx
   14003153d:	je     0x1400315b1
   14003153f:	imul   ebp,DWORD PTR [rsi+0x67],0x6574694c
   140031546:	jb     0x1400315a9
   140031548:	ins    BYTE PTR es:[rdi],dx
   140031549:	push   rax
   14003154a:	jb     0x1400315bb
   14003154c:	jo     0x1400315b3
   14003154e:	jb     0x1400315c4
   140031550:	jns    0x1400315a0
   140031552:	(bad)  
   140031553:	ins    DWORD PTR es:[rdi],dx
   140031554:	gs rex
   140031556:	push   r11
   140031558:	push   rsp
   140031559:	rex push rcx
   14003155b:	push   rcx
   14003155c:	ins    DWORD PTR es:[rdi],dx
   14003155d:	ins    BYTE PTR es:[rdi],dx
   14003155e:	rex.WX push rbx
   140031560:	rex
   140031561:	add    BYTE PTR [rax],al
   140031564:	add    BYTE PTR [rax],al
   140031566:	add    BYTE PTR [rax],al
   140031568:	push   0x1400282
	...
   140031575:	add    BYTE PTR [rax],al
   140031577:	add    BYTE PTR [rsi],ch
   140031579:	(bad)  
   14003157a:	push   r14
   14003157c:	rex.WRX jne 0x1400315ec
   14003157f:	gs jb  0x1400315eb
   140031582:	movsxd ecx,DWORD PTR [rcx+rbp*2+0x74]
   140031586:	gs jb  0x1400315ea
   140031589:	ins    BYTE PTR es:[rdi],dx
   14003158a:	push   rax
   14003158b:	jb     0x1400315fc
   14003158d:	jo     0x1400315f4
   14003158f:	jb     0x140031605
   140031591:	jns    0x1400315e1
   140031593:	(bad)  
   140031594:	ins    DWORD PTR es:[rdi],dx
   140031595:	gs rex
   140031597:	push   r11
   140031599:	push   rsp
   14003159a:	rex push rcx
   14003159c:	push   rcx
   14003159d:	ins    DWORD PTR es:[rdi],dx
   14003159e:	ins    BYTE PTR es:[rdi],dx
   14003159f:	rex.WX push rbx
   1400315a1:	rex
   1400315a2:	add    BYTE PTR [rax],al
   1400315a5:	add    BYTE PTR [rax],al
   1400315a7:	add    BYTE PTR [rax-0x7e],ch
   1400315aa:	add    al,BYTE PTR [rax+0x1]
	...
   1400315b5:	add    BYTE PTR [rax],al
   1400315b7:	add    BYTE PTR [rsi],ch
   1400315b9:	(bad)  
   1400315ba:	push   r14
   1400315bc:	rex.B jb 0x140031631
   1400315bf:	(bad)  
   1400315c0:	jns    0x14003160f
   1400315c2:	gs ins DWORD PTR es:[rdi],dx
   1400315c4:	(bad)  
   1400315c5:	gs jb  0x14003160d
   1400315c8:	js     0x14003163a
   1400315ca:	jb     0x140031631
   1400315cc:	jae    0x140031641
   1400315ce:	imul   ebp,DWORD PTR [rdi+0x6e],0x54534140
   1400315d5:	rex push rcx
   1400315d7:	push   rcx
   1400315d8:	ins    DWORD PTR es:[rdi],dx
   1400315d9:	ins    BYTE PTR es:[rdi],dx
   1400315da:	rex.WX push rbx
   1400315dc:	rex
   1400315dd:	add    BYTE PTR [rax],al
   1400315e0:	push   0x1400282
	...
   1400315ed:	add    BYTE PTR [rax],al
   1400315ef:	add    BYTE PTR [rsi],ch
   1400315f1:	(bad)  
   1400315f2:	push   r14
   1400315f4:	rex.RX imul r12d,DWORD PTR [rbp+0x6c],0x6d654d64
   1400315fc:	(bad)  
   1400315fd:	gs jb  0x140031645
   140031600:	js     0x140031672
   140031602:	jb     0x140031669
   140031604:	jae    0x140031679
   140031606:	imul   ebp,DWORD PTR [rdi+0x6e],0x54534140
   14003160d:	rex push rcx
   14003160f:	push   rcx
   140031610:	ins    DWORD PTR es:[rdi],dx
   140031611:	ins    BYTE PTR es:[rdi],dx
   140031612:	rex.WX push rbx
   140031614:	rex
   140031615:	add    BYTE PTR [rax],al
   140031618:	push   0x1400282
	...
   140031625:	add    BYTE PTR [rax],al
   140031627:	add    BYTE PTR [rsi],ch
   140031629:	(bad)  
   14003162a:	push   r14
   14003162c:	rex.WRX
   14003162d:	gs ja  0x14003167d
   140031630:	gs ins DWORD PTR es:[rdi],dx
   140031632:	(bad)  
   140031633:	gs jb  0x14003167b
   140031636:	js     0x1400316a8
   140031638:	jb     0x14003169f
   14003163a:	jae    0x1400316af
   14003163c:	imul   ebp,DWORD PTR [rdi+0x6e],0x54534140
   140031643:	rex push rcx
   140031645:	push   rcx
   140031646:	ins    DWORD PTR es:[rdi],dx
   140031647:	ins    BYTE PTR es:[rdi],dx
   140031648:	rex.WX push rbx
   14003164a:	rex
   14003164b:	add    BYTE PTR [rax],al
   14003164e:	add    BYTE PTR [rax],al
   140031650:	push   0x1400282
	...
   14003165d:	add    BYTE PTR [rax],al
   14003165f:	add    BYTE PTR [rsi],ch
   140031661:	(bad)  
   140031662:	push   r14
   140031664:	rex.WRX
   140031665:	gs ja  0x1400316ad
   140031668:	js     0x1400316da
   14003166a:	jb     0x1400316d1
   14003166c:	jae    0x1400316e1
   14003166e:	imul   ebp,DWORD PTR [rdi+0x6e],0x54534140
   140031675:	rex push rcx
   140031677:	push   rcx
   140031678:	ins    DWORD PTR es:[rdi],dx
   140031679:	ins    BYTE PTR es:[rdi],dx
   14003167a:	rex.WX push rbx
   14003167c:	rex
   14003167d:	add    BYTE PTR [rax],al
   140031680:	push   0x1400282
	...
   14003168d:	add    BYTE PTR [rax],al
   14003168f:	add    BYTE PTR [rsi],ch
   140031691:	(bad)  
   140031692:	push   r14
   140031694:	rex.XB (bad) 
   140031696:	ins    BYTE PTR es:[rdi],dx
   140031697:	ins    BYTE PTR es:[rdi],dx
   140031698:	rex.RB js 0x14003170b
   14003169b:	jb     0x140031702
   14003169d:	jae    0x140031712
   14003169f:	imul   ebp,DWORD PTR [rdi+0x6e],0x54534140
   1400316a6:	rex push rcx
   1400316a8:	push   rcx
   1400316a9:	ins    DWORD PTR es:[rdi],dx
   1400316aa:	ins    BYTE PTR es:[rdi],dx
   1400316ab:	rex.WX push rbx
   1400316ad:	rex
   1400316ae:	add    BYTE PTR [rax-0x7e],bpl
   1400316b2:	add    al,BYTE PTR [rax+0x1]
	...
   1400316bd:	add    BYTE PTR [rax],al
   1400316bf:	add    BYTE PTR [rsi],ch
   1400316c1:	(bad)  
   1400316c2:	push   r14
   1400316c4:	rex.B jb 0x14003172e
   1400316c7:	jne    0x140031736
   1400316c9:	outs   dx,BYTE PTR gs:[rsi]
   1400316cb:	je     0x140031719
   1400316cd:	imul   esi,DWORD PTR [rbx+0x74],0x54534140
   1400316d4:	rex push rcx
   1400316d6:	push   rcx
   1400316d7:	ins    DWORD PTR es:[rdi],dx
   1400316d8:	ins    BYTE PTR es:[rdi],dx
   1400316d9:	rex.WX push rbx
   1400316db:	rex
   1400316dc:	add    BYTE PTR [rax],al
   1400316df:	add    BYTE PTR [rax-0x7e],ch
   1400316e2:	add    al,BYTE PTR [rax+0x1]
	...
   1400316ed:	add    BYTE PTR [rax],al
   1400316ef:	add    BYTE PTR [rsi],ch
   1400316f1:	(bad)  
   1400316f2:	push   r14
   1400316f4:	push   rax
   1400316f5:	outs   dx,DWORD PTR ds:[rsi]
   1400316f6:	jae    0x14003176c
   1400316f8:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400316fa:	movsxd esi,DWORD PTR [rdx+0x65]
   1400316fd:	ins    DWORD PTR es:[rdi],dx
   1400316fe:	outs   dx,BYTE PTR gs:[rsi]
   140031700:	je     0x140031747
   140031702:	js     0x140031774
   140031704:	jb     0x14003176b
   140031706:	jae    0x14003177b
   140031708:	imul   ebp,DWORD PTR [rdi+0x6e],0x54534140
   14003170f:	rex push rcx
   140031711:	push   rcx
   140031712:	ins    DWORD PTR es:[rdi],dx
   140031713:	ins    BYTE PTR es:[rdi],dx
   140031714:	rex.WX push rbx
   140031716:	rex
   140031717:	add    BYTE PTR [rax],al
   14003171a:	add    BYTE PTR [rax],al
   14003171c:	add    BYTE PTR [rax],al
   14003171e:	add    BYTE PTR [rax],al
   140031720:	push   0x1400282
	...
   14003172d:	add    BYTE PTR [rax],al
   14003172f:	add    BYTE PTR [rsi],ch
   140031731:	(bad)  
   140031732:	push   r14
   140031734:	push   rax
   140031735:	outs   dx,DWORD PTR ds:[rsi]
   140031736:	jae    0x1400317ac
   140031738:	rex.R
   140031739:	movsxd esi,DWORD PTR gs:[rdx+0x65]
   14003173d:	ins    DWORD PTR es:[rdi],dx
   14003173e:	outs   dx,BYTE PTR gs:[rsi]
   140031740:	je     0x140031787
   140031742:	js     0x1400317b4
   140031744:	jb     0x1400317ab
   140031746:	jae    0x1400317bb
   140031748:	imul   ebp,DWORD PTR [rdi+0x6e],0x54534140
   14003174f:	rex push rcx
   140031751:	push   rcx
   140031752:	ins    DWORD PTR es:[rdi],dx
   140031753:	ins    BYTE PTR es:[rdi],dx
   140031754:	rex.WX push rbx
   140031756:	rex
   140031757:	add    BYTE PTR [rax],al
   14003175a:	add    BYTE PTR [rax],al
   14003175c:	add    BYTE PTR [rax],al
   14003175e:	add    BYTE PTR [rax],al
   140031760:	push   0x1400282
	...
   14003176d:	add    BYTE PTR [rax],al
   14003176f:	add    BYTE PTR [rsi],ch
   140031771:	(bad)  
   140031772:	push   r14
   140031774:	rex.R
   140031775:	gs ins BYTE PTR es:[rdi],dx
   140031777:	gs je  0x1400317df
   14003177a:	rex.RB js 0x1400317ed
   14003177d:	jb     0x1400317e4
   14003177f:	jae    0x1400317f4
   140031781:	imul   ebp,DWORD PTR [rdi+0x6e],0x54534140
   140031788:	rex push rcx
   14003178a:	push   rcx
   14003178b:	ins    DWORD PTR es:[rdi],dx
   14003178c:	ins    BYTE PTR es:[rdi],dx
   14003178d:	rex.WX push rbx
   14003178f:	rex
   140031790:	add    BYTE PTR [rax],al
   140031793:	add    BYTE PTR [rax],al
   140031795:	add    BYTE PTR [rax],al
   140031797:	add    BYTE PTR [rax-0x7e],ch
   14003179a:	add    al,BYTE PTR [rax+0x1]
	...
   1400317a5:	add    BYTE PTR [rax],al
   1400317a7:	add    BYTE PTR [rsi],ch
   1400317a9:	(bad)  
   1400317aa:	push   r14
   1400317ac:	push   rsi
   1400317ad:	outs   dx,DWORD PTR ds:[rsi]
   1400317ae:	imul   esp,DWORD PTR [rbp+rax*2+0x78],0x73657270
   1400317b6:	jae    0x140031821
   1400317b8:	outs   dx,DWORD PTR ds:[rsi]
   1400317b9:	outs   dx,BYTE PTR ds:[rsi]
   1400317ba:	rex
   1400317bb:	push   r11
   1400317bd:	push   rsp
   1400317be:	rex push rcx
   1400317c0:	push   rcx
   1400317c1:	ins    DWORD PTR es:[rdi],dx
   1400317c2:	ins    BYTE PTR es:[rdi],dx
   1400317c3:	rex.WX push rbx
   1400317c5:	rex
   1400317c6:	add    BYTE PTR [rax-0x7e],bpl
   1400317ca:	add    al,BYTE PTR [rax+0x1]
	...
   1400317d5:	add    BYTE PTR [rax],al
   1400317d7:	add    BYTE PTR [rsi],ch
   1400317d9:	(bad)  
   1400317da:	push   r14
   1400317dc:	push   rsp
   1400317dd:	jns    0x14003184f
   1400317df:	gs rex.WRXB
   1400317e1:	data16 rex.RB js 0x140031855
   1400317e5:	jb     0x14003184c
   1400317e7:	jae    0x14003185c
   1400317e9:	imul   ebp,DWORD PTR [rdi+0x6e],0x54534140
   1400317f0:	rex push rcx
   1400317f2:	push   rcx
   1400317f3:	ins    DWORD PTR es:[rdi],dx
   1400317f4:	ins    BYTE PTR es:[rdi],dx
   1400317f5:	rex.WX push rbx
   1400317f7:	rex
   1400317f8:	add    BYTE PTR [rax],al
   1400317fb:	add    BYTE PTR [rax],al
   1400317fd:	add    BYTE PTR [rax],al
   1400317ff:	add    BYTE PTR [rax-0x7e],ch
   140031802:	add    al,BYTE PTR [rax+0x1]
	...
   14003180d:	add    BYTE PTR [rax],al
   14003180f:	add    BYTE PTR [rsi],ch
   140031811:	(bad)  
   140031812:	push   r14
   140031814:	push   rax
   140031815:	jb     0x14003187c
   140031817:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140031819:	movsxd esi,DWORD PTR [rdx+0x65]
   14003181c:	ins    DWORD PTR es:[rdi],dx
   14003181d:	outs   dx,BYTE PTR gs:[rsi]
   14003181f:	je     0x140031866
   140031821:	js     0x140031893
   140031823:	jb     0x14003188a
   140031825:	jae    0x14003189a
   140031827:	imul   ebp,DWORD PTR [rdi+0x6e],0x54534140
   14003182e:	rex push rcx
   140031830:	push   rcx
   140031831:	ins    DWORD PTR es:[rdi],dx
   140031832:	ins    BYTE PTR es:[rdi],dx
   140031833:	rex.WX push rbx
   140031835:	rex
   140031836:	add    BYTE PTR [rax-0x7e],bpl
   14003183a:	add    al,BYTE PTR [rax+0x1]
	...
   140031845:	add    BYTE PTR [rax],al
   140031847:	add    BYTE PTR [rsi],ch
   140031849:	(bad)  
   14003184a:	push   r14
   14003184c:	push   rax
   14003184d:	jb     0x1400318b4
   14003184f:	rex.R
   140031850:	movsxd esi,DWORD PTR gs:[rdx+0x65]
   140031854:	ins    DWORD PTR es:[rdi],dx
   140031855:	outs   dx,BYTE PTR gs:[rsi]
   140031857:	je     0x14003189e
   140031859:	js     0x1400318cb
   14003185b:	jb     0x1400318c2
   14003185d:	jae    0x1400318d2
   14003185f:	imul   ebp,DWORD PTR [rdi+0x6e],0x54534140
   140031866:	rex push rcx
   140031868:	push   rcx
   140031869:	ins    DWORD PTR es:[rdi],dx
   14003186a:	ins    BYTE PTR es:[rdi],dx
   14003186b:	rex.WX push rbx
   14003186d:	rex
   14003186e:	add    BYTE PTR [rax-0x7e],bpl
   140031872:	add    al,BYTE PTR [rax+0x1]
	...
   14003187d:	add    BYTE PTR [rax],al
   14003187f:	add    BYTE PTR [rsi],ch
   140031881:	(bad)  
   140031882:	push   r14
   140031884:	push   rbp
   140031885:	outs   dx,BYTE PTR ds:[rsi]
   140031886:	(bad)  
   140031887:	jb     0x140031902
   140031889:	push   rax
   14003188a:	ins    BYTE PTR es:[rdi],dx
   14003188b:	jne    0x140031900
   14003188d:	rex.RB js 0x140031900
   140031890:	jb     0x1400318f7
   140031892:	jae    0x140031907
   140031894:	imul   ebp,DWORD PTR [rdi+0x6e],0x54534140
   14003189b:	rex push rcx
   14003189d:	push   rcx
   14003189e:	ins    DWORD PTR es:[rdi],dx
   14003189f:	ins    BYTE PTR es:[rdi],dx
   1400318a0:	rex.WX push rbx
   1400318a2:	rex
   1400318a3:	add    BYTE PTR [rax],al
   1400318a6:	add    BYTE PTR [rax],al
   1400318a8:	push   0x1400282
	...
   1400318b5:	add    BYTE PTR [rax],al
   1400318b7:	add    BYTE PTR [rsi],ch
   1400318b9:	(bad)  
   1400318ba:	push   r14
   1400318bc:	push   rbp
   1400318bd:	outs   dx,BYTE PTR ds:[rsi]
   1400318be:	(bad)  
   1400318bf:	jb     0x14003193a
   1400318c1:	imul   r13,QWORD PTR [r14+0x75],0x70784573
   1400318c9:	jb     0x140031930
   1400318cb:	jae    0x140031940
   1400318cd:	imul   ebp,DWORD PTR [rdi+0x6e],0x54534140
   1400318d4:	rex push rcx
   1400318d6:	push   rcx
   1400318d7:	ins    DWORD PTR es:[rdi],dx
   1400318d8:	ins    BYTE PTR es:[rdi],dx
   1400318d9:	rex.WX push rbx
   1400318db:	rex
   1400318dc:	add    BYTE PTR [rax],al
   1400318df:	add    BYTE PTR [rax-0x7e],ch
   1400318e2:	add    al,BYTE PTR [rax+0x1]
	...
   1400318ed:	add    BYTE PTR [rax],al
   1400318ef:	add    BYTE PTR [rsi],ch
   1400318f1:	(bad)  
   1400318f2:	push   r14
   1400318f4:	push   rsp
   1400318f5:	imul   ebp,DWORD PTR [rsp+riz*2+0x65],0x72707845
   1400318fd:	gs jae 0x140031973
   140031900:	imul   ebp,DWORD PTR [rdi+0x6e],0x54534140
   140031907:	rex push rcx
   140031909:	push   rcx
   14003190a:	ins    DWORD PTR es:[rdi],dx
   14003190b:	ins    BYTE PTR es:[rdi],dx
   14003190c:	rex.WX push rbx
   14003190e:	rex
   14003190f:	add    BYTE PTR [rax],al
   140031912:	add    BYTE PTR [rax],al
   140031914:	add    BYTE PTR [rax],al
   140031916:	add    BYTE PTR [rax],al
   140031918:	push   0x1400282
	...
   140031925:	add    BYTE PTR [rax],al
   140031927:	add    BYTE PTR [rsi],ch
   140031929:	(bad)  
   14003192a:	push   r14
   14003192c:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14003192e:	je     0x140031975
   140031930:	js     0x1400319a2
   140031932:	jb     0x140031999
   140031934:	jae    0x1400319a9
   140031936:	imul   ebp,DWORD PTR [rdi+0x6e],0x54534140
   14003193d:	rex push rcx
   14003193f:	push   rcx
   140031940:	ins    DWORD PTR es:[rdi],dx
   140031941:	ins    BYTE PTR es:[rdi],dx
   140031942:	rex.WX push rbx
   140031944:	rex
   140031945:	add    BYTE PTR [rax],al
   140031948:	push   0x1400282
	...
   140031955:	add    BYTE PTR [rax],al
   140031957:	add    BYTE PTR [rsi],ch
   140031959:	(bad)  
   14003195a:	push   r14
   14003195c:	rex.X imul ebp,DWORD PTR [rsi+0x61],0x78457972
   140031964:	jo     0x1400319d8
   140031966:	gs jae 0x1400319dc
   140031969:	imul   ebp,DWORD PTR [rdi+0x6e],0x54534140
   140031970:	rex push rcx
   140031972:	push   rcx
   140031973:	ins    DWORD PTR es:[rdi],dx
   140031974:	ins    BYTE PTR es:[rdi],dx
   140031975:	rex.WX push rbx
   140031977:	rex
   140031978:	add    BYTE PTR [rax],al
   14003197b:	add    BYTE PTR [rax],al
   14003197d:	add    BYTE PTR [rax],al
   14003197f:	add    BYTE PTR [rax-0x7e],ch
   140031982:	add    al,BYTE PTR [rax+0x1]
	...
   14003198d:	add    BYTE PTR [rax],al
   14003198f:	add    BYTE PTR [rsi],ch
   140031991:	(bad)  
   140031992:	push   r14
   140031994:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140031996:	outs   dx,BYTE PTR ds:[rsi]
   140031997:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x456c616e
   1400319a0:	js     0x140031a12
   1400319a2:	jb     0x140031a09
   1400319a4:	jae    0x140031a19
   1400319a6:	imul   ebp,DWORD PTR [rdi+0x6e],0x54534140
   1400319ad:	rex push rcx
   1400319af:	push   rcx
   1400319b0:	ins    DWORD PTR es:[rdi],dx
   1400319b1:	ins    BYTE PTR es:[rdi],dx
   1400319b2:	rex.WX push rbx
   1400319b4:	rex
   1400319b5:	add    BYTE PTR [rax],al
   1400319b8:	push   0x1400282
	...
   1400319c5:	add    BYTE PTR [rax],al
   1400319c7:	add    BYTE PTR [rsi],ch
   1400319c9:	(bad)  
   1400319ca:	push   r14
   1400319cc:	rex.RB js 0x140031a3f
   1400319cf:	jb     0x140031a36
   1400319d1:	jae    0x140031a46
   1400319d3:	imul   ebp,DWORD PTR [rdi+0x6e],0x54534140
   1400319da:	rex push rcx
   1400319dc:	push   rcx
   1400319dd:	ins    DWORD PTR es:[rdi],dx
   1400319de:	ins    BYTE PTR es:[rdi],dx
   1400319df:	rex.WX push rbx
   1400319e1:	rex
   1400319e2:	add    BYTE PTR [rax],al
   1400319e5:	add    BYTE PTR [rax],al
   1400319e7:	add    BYTE PTR [rax-0x7e],ch
   1400319ea:	add    al,BYTE PTR [rax+0x1]
	...
   1400319f5:	add    BYTE PTR [rax],al
   1400319f7:	add    BYTE PTR [rsi],ch
   1400319f9:	(bad)  
   1400319fa:	push   r14
   1400319fc:	rex.X ins BYTE PTR es:[rdi],dx
   1400319fe:	outs   dx,DWORD PTR ds:[rsi]
   1400319ff:	movsxd ebp,DWORD PTR [rbx+0x40]
   140031a02:	push   r11
   140031a04:	push   rsp
   140031a05:	rex push rcx
   140031a07:	push   rcx
   140031a08:	ins    DWORD PTR es:[rdi],dx
   140031a09:	ins    BYTE PTR es:[rdi],dx
   140031a0a:	rex.WX push rbx
   140031a0c:	rex
   140031a0d:	add    BYTE PTR [rax],al
   140031a10:	push   0x1400282
	...
   140031a1d:	add    BYTE PTR [rax],al
   140031a1f:	add    BYTE PTR [rsi],ch
   140031a21:	(bad)  
   140031a22:	push   r14
   140031a24:	push   rbx
   140031a25:	je     0x140031a88
   140031a27:	je     0x140031a8e
   140031a29:	ins    DWORD PTR es:[rdi],dx
   140031a2a:	outs   dx,BYTE PTR gs:[rsi]
   140031a2c:	je     0x140031a7a
   140031a2e:	imul   esi,DWORD PTR [rbx+0x74],0x54534140
   140031a35:	rex push rcx
   140031a37:	push   rcx
   140031a38:	ins    DWORD PTR es:[rdi],dx
   140031a39:	ins    BYTE PTR es:[rdi],dx
   140031a3a:	rex.WX push rbx
   140031a3c:	rex
   140031a3d:	add    BYTE PTR [rax],al
   140031a40:	push   0x1400282
	...
   140031a4d:	add    BYTE PTR [rax],al
   140031a4f:	add    BYTE PTR [rsi],ch
   140031a51:	(bad)  
   140031a52:	push   r14
   140031a54:	push   rsi
   140031a55:	(bad)  
   140031a56:	jb     0x140031ac1
   140031a58:	(bad)  
   140031a59:	(bad)  
   140031a5a:	ins    BYTE PTR es:[rdi],dx
   140031a5b:	gs push rbx
   140031a5d:	je     0x140031ac0
   140031a5f:	je     0x140031ac6
   140031a61:	ins    DWORD PTR es:[rdi],dx
   140031a62:	outs   dx,BYTE PTR gs:[rsi]
   140031a64:	je     0x140031aa6
   140031a66:	push   r11
   140031a68:	push   rsp
   140031a69:	rex push rcx
   140031a6b:	push   rcx
   140031a6c:	ins    DWORD PTR es:[rdi],dx
   140031a6d:	ins    BYTE PTR es:[rdi],dx
   140031a6e:	rex.WX push rbx
   140031a70:	rex
   140031a71:	add    BYTE PTR [rax],al
   140031a74:	add    BYTE PTR [rax],al
   140031a76:	add    BYTE PTR [rax],al
   140031a78:	push   0x1400282
	...
   140031a85:	add    BYTE PTR [rax],al
   140031a87:	add    BYTE PTR [rsi],ch
   140031a89:	(bad)  
   140031a8a:	push   r14
   140031a8c:	push   rsi
   140031a8d:	(bad)  
   140031a8e:	jb     0x140031af9
   140031a90:	(bad)  
   140031a91:	(bad)  
   140031a92:	ins    BYTE PTR es:[rdi],dx
   140031a93:	gs rex.R
   140031a95:	movsxd ebp,DWORD PTR gs:[rcx+riz*2+0x72]
   140031a9a:	(bad)  
   140031a9b:	je     0x140031b06
   140031a9d:	outs   dx,DWORD PTR ds:[rsi]
   140031a9e:	outs   dx,BYTE PTR ds:[rsi]
   140031a9f:	rex
   140031aa0:	push   r11
   140031aa2:	push   rsp
   140031aa3:	rex push rcx
   140031aa5:	push   rcx
   140031aa6:	ins    DWORD PTR es:[rdi],dx
   140031aa7:	ins    BYTE PTR es:[rdi],dx
   140031aa8:	rex.WX push rbx
   140031aaa:	rex
   140031aab:	add    BYTE PTR [rax],al
   140031aae:	add    BYTE PTR [rax],al
   140031ab0:	push   0x1400282
	...
   140031abd:	add    BYTE PTR [rax],al
   140031abf:	add    BYTE PTR [rsi],ch
   140031ac1:	(bad)  
   140031ac2:	push   r14
   140031ac4:	push   rsi
   140031ac5:	(bad)  
   140031ac6:	jb     0x140031b31
   140031ac8:	(bad)  
   140031ac9:	(bad)  
   140031aca:	ins    BYTE PTR es:[rdi],dx
   140031acb:	gs rex.R
   140031acd:	movsxd ebp,DWORD PTR gs:[rcx+riz*2+0x72]
   140031ad2:	(bad)  
   140031ad3:	je     0x140031b3e
   140031ad5:	outs   dx,DWORD PTR ds:[rsi]
   140031ad6:	outs   dx,BYTE PTR ds:[rsi]
   140031ad7:	imul   r14,QWORD PTR [rbx+0x74],0x54534140
   140031adf:	rex push rcx
   140031ae1:	push   rcx
   140031ae2:	ins    DWORD PTR es:[rdi],dx
   140031ae3:	ins    BYTE PTR es:[rdi],dx
   140031ae4:	rex.WX push rbx
   140031ae6:	rex
   140031ae7:	add    BYTE PTR [rax],al
   140031aea:	add    BYTE PTR [rax],al
   140031aec:	add    BYTE PTR [rax],al
   140031aee:	add    BYTE PTR [rax],al
   140031af0:	push   0x1400282
	...
   140031afd:	add    BYTE PTR [rax],al
   140031aff:	add    BYTE PTR [rsi],ch
   140031b01:	(bad)  
   140031b02:	push   r14
   140031b04:	rex.RB ins DWORD PTR es:[rdi],dx
   140031b06:	jo     0x140031b7c
   140031b08:	jns    0x140031b5d
   140031b0a:	je     0x140031b6d
   140031b0c:	je     0x140031b73
   140031b0e:	ins    DWORD PTR es:[rdi],dx
   140031b0f:	outs   dx,BYTE PTR gs:[rsi]
   140031b11:	je     0x140031b53
   140031b13:	push   r11
   140031b15:	push   rsp
   140031b16:	rex push rcx
   140031b18:	push   rcx
   140031b19:	ins    DWORD PTR es:[rdi],dx
   140031b1a:	ins    BYTE PTR es:[rdi],dx
   140031b1b:	rex.WX push rbx
   140031b1d:	rex
   140031b1e:	add    BYTE PTR [rax-0x7e],bpl
   140031b22:	add    al,BYTE PTR [rax+0x1]
	...
   140031b2d:	add    BYTE PTR [rax],al
   140031b2f:	add    BYTE PTR [rsi],ch
   140031b31:	(bad)  
   140031b32:	push   r14
   140031b34:	rex.RB js 0x140031ba7
   140031b37:	jb     0x140031b9e
   140031b39:	jae    0x140031bae
   140031b3b:	imul   ebp,DWORD PTR [rdi+0x6e],0x74617453
   140031b42:	gs ins DWORD PTR es:[rdi],dx
   140031b44:	outs   dx,BYTE PTR gs:[rsi]
   140031b46:	je     0x140031b88
   140031b48:	push   r11
   140031b4a:	push   rsp
   140031b4b:	rex push rcx
   140031b4d:	push   rcx
   140031b4e:	ins    DWORD PTR es:[rdi],dx
   140031b4f:	ins    BYTE PTR es:[rdi],dx
   140031b50:	rex.WX push rbx
   140031b52:	rex
   140031b53:	add    BYTE PTR [rax],al
   140031b56:	add    BYTE PTR [rax],al
   140031b58:	push   0x1400282
	...
   140031b65:	add    BYTE PTR [rax],al
   140031b67:	add    BYTE PTR [rsi],ch
   140031b69:	(bad)  
   140031b6a:	push   r14
   140031b6c:	rex.WB
   140031b6d:	push   bx
   140031b6f:	je     0x140031bd2
   140031b71:	je     0x140031bd8
   140031b73:	ins    DWORD PTR es:[rdi],dx
   140031b74:	outs   dx,BYTE PTR gs:[rsi]
   140031b76:	je     0x140031bb8
   140031b78:	push   r11
   140031b7a:	push   rsp
   140031b7b:	rex push rcx
   140031b7d:	push   rcx
   140031b7e:	ins    DWORD PTR es:[rdi],dx
   140031b7f:	ins    BYTE PTR es:[rdi],dx
   140031b80:	rex.WX push rbx
   140031b82:	rex
   140031b83:	add    BYTE PTR [rax],al
   140031b86:	add    BYTE PTR [rax],al
   140031b88:	push   0x1400282
	...
   140031b95:	add    BYTE PTR [rax],al
   140031b97:	add    BYTE PTR [rsi],ch
   140031b99:	(bad)  
   140031b9a:	push   r14
   140031b9c:	rex.R outs dx,DWORD PTR ds:[rsi]
   140031b9e:	push   rdi
   140031b9f:	push   0x53656c69
   140031ba4:	je     0x140031c07
   140031ba6:	je     0x140031c0d
   140031ba8:	ins    DWORD PTR es:[rdi],dx
   140031ba9:	outs   dx,BYTE PTR gs:[rsi]
   140031bab:	je     0x140031bed
   140031bad:	push   r11
   140031baf:	push   rsp
   140031bb0:	rex push rcx
   140031bb2:	push   rcx
   140031bb3:	ins    DWORD PTR es:[rdi],dx
   140031bb4:	ins    BYTE PTR es:[rdi],dx
   140031bb5:	rex.WX push rbx
   140031bb7:	rex
   140031bb8:	add    BYTE PTR [rax],al
   140031bbb:	add    BYTE PTR [rax],al
   140031bbd:	add    BYTE PTR [rax],al
   140031bbf:	add    BYTE PTR [rax-0x7e],ch
   140031bc2:	add    al,BYTE PTR [rax+0x1]
	...
   140031bcd:	add    BYTE PTR [rax],al
   140031bcf:	add    BYTE PTR [rsi],ch
   140031bd1:	(bad)  
   140031bd2:	push   r14
   140031bd4:	push   rdi
   140031bd5:	push   0x53656c69
   140031bda:	je     0x140031c3d
   140031bdc:	je     0x140031c43
   140031bde:	ins    DWORD PTR es:[rdi],dx
   140031bdf:	outs   dx,BYTE PTR gs:[rsi]
   140031be1:	je     0x140031c23
   140031be3:	push   r11
   140031be5:	push   rsp
   140031be6:	rex push rcx
   140031be8:	push   rcx
   140031be9:	ins    DWORD PTR es:[rdi],dx
   140031bea:	ins    BYTE PTR es:[rdi],dx
   140031beb:	rex.WX push rbx
   140031bed:	rex
   140031bee:	add    BYTE PTR [rax-0x7e],bpl
   140031bf2:	add    al,BYTE PTR [rax+0x1]
	...
   140031bfd:	add    BYTE PTR [rax],al
   140031bff:	add    BYTE PTR [rsi],ch
   140031c01:	(bad)  
   140031c02:	push   r14
   140031c04:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140031c06:	jb     0x140031c5b
   140031c08:	je     0x140031c6b
   140031c0a:	je     0x140031c71
   140031c0c:	ins    DWORD PTR es:[rdi],dx
   140031c0d:	outs   dx,BYTE PTR gs:[rsi]
   140031c0f:	je     0x140031c51
   140031c11:	push   r11
   140031c13:	push   rsp
   140031c14:	rex push rcx
   140031c16:	push   rcx
   140031c17:	ins    DWORD PTR es:[rdi],dx
   140031c18:	ins    BYTE PTR es:[rdi],dx
   140031c19:	rex.WX push rbx
   140031c1b:	rex
   140031c1c:	add    BYTE PTR [rax],al
   140031c1f:	add    BYTE PTR [rax-0x7e],ch
   140031c22:	add    al,BYTE PTR [rax+0x1]
	...
   140031c2d:	add    BYTE PTR [rax],al
   140031c2f:	add    BYTE PTR [rsi],ch
   140031c31:	(bad)  
   140031c32:	push   r14
   140031c34:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140031c36:	movsxd esp,DWORD PTR [rcx+0x6c]
   140031c39:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140031c3b:	jb     0x140031c90
   140031c3d:	je     0x140031ca0
   140031c3f:	je     0x140031ca6
   140031c41:	ins    DWORD PTR es:[rdi],dx
   140031c42:	outs   dx,BYTE PTR gs:[rsi]
   140031c44:	je     0x140031c86
   140031c46:	push   r11
   140031c48:	push   rsp
   140031c49:	rex push rcx
   140031c4b:	push   rcx
   140031c4c:	ins    DWORD PTR es:[rdi],dx
   140031c4d:	ins    BYTE PTR es:[rdi],dx
   140031c4e:	rex.WX push rbx
   140031c50:	rex
   140031c51:	add    BYTE PTR [rax],al
   140031c54:	add    BYTE PTR [rax],al
   140031c56:	add    BYTE PTR [rax],al
   140031c58:	push   0x1400282
	...
   140031c65:	add    BYTE PTR [rax],al
   140031c67:	add    BYTE PTR [rsi],ch
   140031c69:	(bad)  
   140031c6a:	push   r14
   140031c6c:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140031c6e:	jb     0x140031cb5
   140031c70:	(bad)  
   140031c71:	movsxd ebp,DWORD PTR [rax+0x53]
   140031c74:	je     0x140031cd7
   140031c76:	je     0x140031cdd
   140031c78:	ins    DWORD PTR es:[rdi],dx
   140031c79:	outs   dx,BYTE PTR gs:[rsi]
   140031c7b:	je     0x140031cbd
   140031c7d:	push   r11
   140031c7f:	push   rsp
   140031c80:	rex push rcx
   140031c82:	push   rcx
   140031c83:	ins    DWORD PTR es:[rdi],dx
   140031c84:	ins    BYTE PTR es:[rdi],dx
   140031c85:	rex.WX push rbx
   140031c87:	rex
   140031c88:	add    BYTE PTR [rax],al
   140031c8b:	add    BYTE PTR [rax],al
   140031c8d:	add    BYTE PTR [rax],al
   140031c8f:	add    BYTE PTR [rax-0x7e],ch
   140031c92:	add    al,BYTE PTR [rax+0x1]
	...
   140031c9d:	add    BYTE PTR [rax],al
   140031c9f:	add    BYTE PTR [rsi],ch
   140031ca1:	(bad)  
   140031ca2:	push   r14
   140031ca4:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140031ca6:	movsxd esp,DWORD PTR [rcx+0x6c]
   140031ca9:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140031cab:	jb     0x140031cf2
   140031cad:	(bad)  
   140031cae:	movsxd ebp,DWORD PTR [rax+0x53]
   140031cb1:	je     0x140031d14
   140031cb3:	je     0x140031d1a
   140031cb5:	ins    DWORD PTR es:[rdi],dx
   140031cb6:	outs   dx,BYTE PTR gs:[rsi]
   140031cb8:	je     0x140031cfa
   140031cba:	push   r11
   140031cbc:	push   rsp
   140031cbd:	rex push rcx
   140031cbf:	push   rcx
   140031cc0:	ins    DWORD PTR es:[rdi],dx
   140031cc1:	ins    BYTE PTR es:[rdi],dx
   140031cc2:	rex.WX push rbx
   140031cc4:	rex
   140031cc5:	add    BYTE PTR [rax],al
   140031cc8:	push   0x1400282
	...
   140031cd5:	add    BYTE PTR [rax],al
   140031cd7:	add    BYTE PTR [rsi],ch
   140031cd9:	(bad)  
   140031cda:	push   r14
   140031cdc:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140031cde:	outs   dx,BYTE PTR ds:[rsi]
   140031cdf:	je     0x140031d4a
   140031ce1:	outs   dx,BYTE PTR ds:[rsi]
   140031ce2:	jne    0x140031d49
   140031ce4:	push   rbx
   140031ce5:	je     0x140031d48
   140031ce7:	je     0x140031d4e
   140031ce9:	ins    DWORD PTR es:[rdi],dx
   140031cea:	outs   dx,BYTE PTR gs:[rsi]
   140031cec:	je     0x140031d2e
   140031cee:	push   r11
   140031cf0:	push   rsp
   140031cf1:	rex push rcx
   140031cf3:	push   rcx
   140031cf4:	ins    DWORD PTR es:[rdi],dx
   140031cf5:	ins    BYTE PTR es:[rdi],dx
   140031cf6:	rex.WX push rbx
   140031cf8:	rex
   140031cf9:	add    BYTE PTR [rax],al
   140031cfc:	add    BYTE PTR [rax],al
   140031cfe:	add    BYTE PTR [rax],al
   140031d00:	push   0x1400282
	...
   140031d0d:	add    BYTE PTR [rax],al
   140031d0f:	add    BYTE PTR [rsi],ch
   140031d11:	(bad)  
   140031d12:	push   r14
   140031d14:	rex.X jb 0x140031d7c
   140031d17:	(bad)  
   140031d18:	imul   edx,DWORD PTR [rbx+0x74],0x61
   140031d1c:	je     0x140031d83
   140031d1e:	ins    DWORD PTR es:[rdi],dx
   140031d1f:	outs   dx,BYTE PTR gs:[rsi]
   140031d21:	je     0x140031d63
   140031d23:	push   r11
   140031d25:	push   rsp
   140031d26:	rex push rcx
   140031d28:	push   rcx
   140031d29:	ins    DWORD PTR es:[rdi],dx
   140031d2a:	ins    BYTE PTR es:[rdi],dx
   140031d2b:	rex.WX push rbx
   140031d2d:	rex
   140031d2e:	add    BYTE PTR [rax-0x7e],bpl
   140031d32:	add    al,BYTE PTR [rax+0x1]
	...
   140031d3d:	add    BYTE PTR [rax],al
   140031d3f:	add    BYTE PTR [rsi],ch
   140031d41:	(bad)  
   140031d42:	push   r14
   140031d44:	push   rdx
   140031d45:	gs je  0x140031dbd
   140031d48:	jb     0x140031db8
   140031d4a:	push   rbx
   140031d4b:	je     0x140031dae
   140031d4d:	je     0x140031db4
   140031d4f:	ins    DWORD PTR es:[rdi],dx
   140031d50:	outs   dx,BYTE PTR gs:[rsi]
   140031d52:	je     0x140031d94
   140031d54:	push   r11
   140031d56:	push   rsp
   140031d57:	rex push rcx
   140031d59:	push   rcx
   140031d5a:	ins    DWORD PTR es:[rdi],dx
   140031d5b:	ins    BYTE PTR es:[rdi],dx
   140031d5c:	rex.WX push rbx
   140031d5e:	rex
   140031d5f:	add    BYTE PTR [rax],al
   140031d62:	add    BYTE PTR [rax],al
   140031d64:	add    BYTE PTR [rax],al
   140031d66:	add    BYTE PTR [rax],al
   140031d68:	push   0x1400282
	...
   140031d75:	add    BYTE PTR [rax],al
   140031d77:	add    BYTE PTR [rsi],ch
   140031d79:	(bad)  
   140031d7a:	push   r14
   140031d7c:	push   rdi
   140031d7d:	imul   esi,DWORD PTR [rax+rbp*2+0x53],0x65746174
   140031d85:	ins    DWORD PTR es:[rdi],dx
   140031d86:	outs   dx,BYTE PTR gs:[rsi]
   140031d88:	je     0x140031dca
   140031d8a:	push   r11
   140031d8c:	push   rsp
   140031d8d:	rex push rcx
   140031d8f:	push   rcx
   140031d90:	ins    DWORD PTR es:[rdi],dx
   140031d91:	ins    BYTE PTR es:[rdi],dx
   140031d92:	rex.WX push rbx
   140031d94:	rex
   140031d95:	add    BYTE PTR [rax],al
   140031d98:	push   0x1400282
	...
   140031da5:	add    BYTE PTR [rax],al
   140031da7:	add    BYTE PTR [rsi],ch
   140031da9:	(bad)  
   140031daa:	push   r14
   140031dac:	rex.XB (bad) 
   140031dae:	jae    0x140031e15
   140031db0:	rex.X ins BYTE PTR es:[rdi],dx
   140031db2:	outs   dx,DWORD PTR ds:[rsi]
   140031db3:	movsxd ebp,DWORD PTR [rbx+0x40]
   140031db6:	push   r11
   140031db8:	push   rsp
   140031db9:	rex push rcx
   140031dbb:	push   rcx
   140031dbc:	ins    DWORD PTR es:[rdi],dx
   140031dbd:	ins    BYTE PTR es:[rdi],dx
   140031dbe:	rex.WX push rbx
   140031dc0:	rex
   140031dc1:	add    BYTE PTR [rax],al
   140031dc4:	add    BYTE PTR [rax],al
   140031dc6:	add    BYTE PTR [rax],al
   140031dc8:	push   0x1400282
	...
   140031dd5:	add    BYTE PTR [rax],al
   140031dd7:	add    BYTE PTR [rsi],ch
   140031dd9:	(bad)  
   140031dda:	push   r14
   140031ddc:	push   rbx
   140031ddd:	ja     0x140031e48
   140031ddf:	je     0x140031e44
   140031de1:	push   0x74617453
   140031de6:	gs ins DWORD PTR es:[rdi],dx
   140031de8:	outs   dx,BYTE PTR gs:[rsi]
   140031dea:	je     0x140031e2c
   140031dec:	push   r11
   140031dee:	push   rsp
   140031def:	rex push rcx
   140031df1:	push   rcx
   140031df2:	ins    DWORD PTR es:[rdi],dx
   140031df3:	ins    BYTE PTR es:[rdi],dx
   140031df4:	rex.WX push rbx
   140031df6:	rex
   140031df7:	add    BYTE PTR [rax],al
   140031dfa:	add    BYTE PTR [rax],al
   140031dfc:	add    BYTE PTR [rax],al
   140031dfe:	add    BYTE PTR [rax],al
   140031e00:	push   0x1400282
	...
   140031e0d:	add    BYTE PTR [rax],al
   140031e0f:	add    BYTE PTR [rsi],ch
   140031e11:	(bad)  
   140031e12:	push   r14
   140031e14:	rex.XB (bad) 
   140031e16:	jae    0x140031e7d
   140031e18:	rex.XB ins BYTE PTR es:[rdi],dx
   140031e1a:	(bad)  
   140031e1b:	jne    0x140031e90
   140031e1d:	gs rex
   140031e1f:	push   r11
   140031e21:	push   rsp
   140031e22:	rex push rcx
   140031e24:	push   rcx
   140031e25:	ins    DWORD PTR es:[rdi],dx
   140031e26:	ins    BYTE PTR es:[rdi],dx
   140031e27:	rex.WX push rbx
   140031e29:	rex
   140031e2a:	add    BYTE PTR [rax],al
   140031e2d:	add    BYTE PTR [rax],al
   140031e2f:	add    BYTE PTR [rax-0x7e],ch
   140031e32:	add    al,BYTE PTR [rax+0x1]
	...
   140031e3d:	add    BYTE PTR [rax],al
   140031e3f:	add    BYTE PTR [rsi],ch
   140031e41:	(bad)  
   140031e42:	push   r14
   140031e44:	rex.XB (bad) 
   140031e46:	jae    0x140031ead
   140031e48:	rex.XB ins BYTE PTR es:[rdi],dx
   140031e4a:	(bad)  
   140031e4b:	jne    0x140031ec0
   140031e4d:	gs jae 0x140031e90
   140031e50:	push   r11
   140031e52:	push   rsp
   140031e53:	rex push rcx
   140031e55:	push   rcx
   140031e56:	ins    DWORD PTR es:[rdi],dx
   140031e57:	ins    BYTE PTR es:[rdi],dx
   140031e58:	rex.WX push rbx
   140031e5a:	rex
   140031e5b:	add    BYTE PTR [rax],al
   140031e5e:	add    BYTE PTR [rax],al
   140031e60:	push   0x1400282
	...
   140031e6d:	add    BYTE PTR [rax],al
   140031e6f:	add    BYTE PTR [rsi],ch
   140031e71:	(bad)  
   140031e72:	push   r14
   140031e74:	rex.R
   140031e75:	gs data16 (bad) 
   140031e78:	jne    0x140031ee6
   140031e7a:	je     0x140031ebf
   140031e7c:	ins    BYTE PTR es:[rdi],dx
   140031e7d:	(bad)  
   140031e7e:	jne    0x140031ef3
   140031e80:	gs rex
   140031e82:	push   r11
   140031e84:	push   rsp
   140031e85:	rex push rcx
   140031e87:	push   rcx
   140031e88:	ins    DWORD PTR es:[rdi],dx
   140031e89:	ins    BYTE PTR es:[rdi],dx
   140031e8a:	rex.WX push rbx
   140031e8c:	rex
   140031e8d:	add    BYTE PTR [rax],al
   140031e90:	push   0x1400282
	...
   140031e9d:	add    BYTE PTR [rax],al
   140031e9f:	add    BYTE PTR [rsi],ch
   140031ea1:	(bad)  
   140031ea2:	push   r14
   140031ea4:	rex.WR (bad) 
   140031ea6:	(bad)  
   140031ea7:	gs ins BYTE PTR es:[rdi],dx
   140031ea9:	ins    BYTE PTR es:[rdi],dx
   140031eaa:	gs fs push rbx
   140031ead:	je     0x140031f10
   140031eaf:	je     0x140031f16
   140031eb1:	ins    DWORD PTR es:[rdi],dx
   140031eb2:	outs   dx,BYTE PTR gs:[rsi]
   140031eb4:	je     0x140031ef6
   140031eb6:	push   r11
   140031eb8:	push   rsp
   140031eb9:	rex push rcx
   140031ebb:	push   rcx
   140031ebc:	ins    DWORD PTR es:[rdi],dx
   140031ebd:	ins    BYTE PTR es:[rdi],dx
   140031ebe:	rex.WX push rbx
   140031ec0:	rex
   140031ec1:	add    BYTE PTR [rax],al
   140031ec4:	add    BYTE PTR [rax],al
   140031ec6:	add    BYTE PTR [rax],al
   140031ec8:	push   0x1400282
	...
   140031ed5:	add    BYTE PTR [rax],al
   140031ed7:	add    BYTE PTR [rsi],ch
   140031ed9:	(bad)  
   140031eda:	push   r14
   140031edc:	push   rsp
   140031edd:	push   0x53776f72
   140031ee2:	je     0x140031f45
   140031ee4:	je     0x140031f4b
   140031ee6:	ins    DWORD PTR es:[rdi],dx
   140031ee7:	outs   dx,BYTE PTR gs:[rsi]
   140031ee9:	je     0x140031f2b
   140031eeb:	push   r11
   140031eed:	push   rsp
   140031eee:	rex push rcx
   140031ef0:	push   rcx
   140031ef1:	ins    DWORD PTR es:[rdi],dx
   140031ef2:	ins    BYTE PTR es:[rdi],dx
   140031ef3:	rex.WX push rbx
   140031ef5:	rex
   140031ef6:	add    BYTE PTR [rax-0x7e],bpl
   140031efa:	add    al,BYTE PTR [rax+0x1]
	...
   140031f05:	add    BYTE PTR [rax],al
   140031f07:	add    BYTE PTR [rsi],ch
   140031f09:	(bad)  
   140031f0a:	push   r14
   140031f0c:	rex.XB (bad) 
   140031f0e:	je     0x140031f73
   140031f10:	push   0x54534140
   140031f15:	rex push rcx
   140031f17:	push   rcx
   140031f18:	ins    DWORD PTR es:[rdi],dx
   140031f19:	ins    BYTE PTR es:[rdi],dx
   140031f1a:	rex.WX push rbx
   140031f1c:	rex
   140031f1d:	add    BYTE PTR [rax],al
   140031f20:	push   0x1400282
	...
   140031f2d:	add    BYTE PTR [rax],al
   140031f2f:	add    BYTE PTR [rsi],ch
   140031f31:	(bad)  
   140031f32:	push   r14
   140031f34:	rex.RX imul r13d,DWORD PTR [rsi+0x61],0x40796c6c
   140031f3c:	push   r11
   140031f3e:	push   rsp
   140031f3f:	rex push rcx
   140031f41:	push   rcx
   140031f42:	ins    DWORD PTR es:[rdi],dx
   140031f43:	ins    BYTE PTR es:[rdi],dx
   140031f44:	rex.WX push rbx
   140031f46:	rex
   140031f47:	add    BYTE PTR [rax],al
   140031f4a:	add    BYTE PTR [rax],al
   140031f4c:	add    BYTE PTR [rax],al
   140031f4e:	add    BYTE PTR [rax],al
   140031f50:	push   0x1400282
	...
   140031f5d:	add    BYTE PTR [rax],al
   140031f5f:	add    BYTE PTR [rsi],ch
   140031f61:	(bad)  
   140031f62:	push   r14
   140031f64:	push   rsp
   140031f65:	jb     0x140031fe0
   140031f67:	push   rbx
   140031f68:	je     0x140031fcb
   140031f6a:	je     0x140031fd1
   140031f6c:	ins    DWORD PTR es:[rdi],dx
   140031f6d:	outs   dx,BYTE PTR gs:[rsi]
   140031f6f:	je     0x140031fb1
   140031f71:	push   r11
   140031f73:	push   rsp
   140031f74:	rex push rcx
   140031f76:	push   rcx
   140031f77:	ins    DWORD PTR es:[rdi],dx
   140031f78:	ins    BYTE PTR es:[rdi],dx
   140031f79:	rex.WX push rbx
   140031f7b:	rex
   140031f7c:	add    BYTE PTR [rax],al
   140031f7f:	add    BYTE PTR [rax-0x7e],ch
   140031f82:	add    al,BYTE PTR [rax+0x1]
	...
   140031f8d:	add    BYTE PTR [rax],al
   140031f8f:	add    BYTE PTR [rsi],ch
   140031f91:	(bad)  
   140031f92:	push   r14
   140031f94:	rex.RX jne 0x140032005
   140031f97:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140031f9b:	outs   dx,BYTE PTR ds:[rsi]
   140031f9c:	rex.RB js 0x14003200f
   140031f9f:	jb     0x140032006
   140031fa1:	jae    0x140032016
   140031fa3:	imul   ebp,DWORD PTR [rdi+0x6e],0x54534140
   140031faa:	rex push rcx
   140031fac:	push   rcx
   140031fad:	ins    DWORD PTR es:[rdi],dx
   140031fae:	ins    BYTE PTR es:[rdi],dx
   140031faf:	rex.WX push rbx
   140031fb1:	rex
   140031fb2:	add    BYTE PTR [rax],al
   140031fb5:	add    BYTE PTR [rax],al
   140031fb7:	add    BYTE PTR [rax-0x7e],ch
   140031fba:	add    al,BYTE PTR [rax+0x1]
	...
   140031fc5:	add    BYTE PTR [rax],al
   140031fc7:	add    BYTE PTR [rsi],ch
   140031fc9:	(bad)  
   140031fca:	push   r14
   140031fcc:	rex.RX jne 0x14003203d
   140031fcf:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140031fd3:	outs   dx,BYTE PTR ds:[rsi]
   140031fd4:	rex.R
   140031fd5:	movsxd ebp,DWORD PTR gs:[rcx+riz*2+0x72]
   140031fda:	(bad)  
   140031fdb:	je     0x140032046
   140031fdd:	outs   dx,DWORD PTR ds:[rsi]
   140031fde:	outs   dx,BYTE PTR ds:[rsi]
   140031fdf:	rex
   140031fe0:	push   r11
   140031fe2:	push   rsp
   140031fe3:	rex push rcx
   140031fe5:	push   rcx
   140031fe6:	ins    DWORD PTR es:[rdi],dx
   140031fe7:	ins    BYTE PTR es:[rdi],dx
   140031fe8:	rex.WX push rbx
   140031fea:	rex
   140031feb:	add    BYTE PTR [rax],al
   140031fee:	add    BYTE PTR [rax],al
   140031ff0:	push   0x1400282
	...
   140031ffd:	add    BYTE PTR [rax],al
   140031fff:	add    BYTE PTR [rsi],ch
   140032001:	(bad)  
   140032002:	push   r14
   140032004:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140032006:	jb     0x140032075
   140032008:	(bad)  
   140032009:	ins    BYTE PTR es:[rdi],dx
   14003200a:	push   rax
   14003200b:	(bad)  
   14003200c:	jb     0x14003206f
   14003200e:	ins    DWORD PTR es:[rdi],dx
   14003200f:	gs je  0x140032077
   140032012:	jb     0x140032060
   140032014:	imul   esi,DWORD PTR [rbx+0x74],0x54534140
   14003201b:	rex push rcx
   14003201d:	push   rcx
   14003201e:	ins    DWORD PTR es:[rdi],dx
   14003201f:	ins    BYTE PTR es:[rdi],dx
   140032020:	rex.WX push rbx
   140032022:	rex
   140032023:	add    BYTE PTR [rax],al
   140032026:	add    BYTE PTR [rax],al
   140032028:	push   0x1400282
	...
   140032035:	add    BYTE PTR [rax],al
   140032037:	add    BYTE PTR [rsi],ch
   140032039:	(bad)  
   14003203a:	push   r14
   14003203c:	push   rbx
   14003203d:	outs   dx,DWORD PTR ds:[rsi]
   14003203e:	jne    0x1400320b2
   140032040:	movsxd esp,DWORD PTR [rbp+0x45]
   140032043:	ins    BYTE PTR es:[rdi],dx
   140032044:	gs ins DWORD PTR es:[rdi],dx
   140032046:	outs   dx,BYTE PTR gs:[rsi]
   140032048:	je     0x14003208a
   14003204a:	push   r11
   14003204c:	push   rsp
   14003204d:	rex push rcx
   14003204f:	push   rcx
   140032050:	ins    DWORD PTR es:[rdi],dx
   140032051:	ins    BYTE PTR es:[rdi],dx
   140032052:	rex.WX push rbx
   140032054:	rex
   140032055:	add    BYTE PTR [rax],al
   140032058:	push   0x1400282
	...
   140032065:	add    BYTE PTR [rax],al
   140032067:	add    BYTE PTR [rsi],ch
   140032069:	(bad)  
   14003206a:	push   r14
   14003206c:	push   rbx
   14003206d:	outs   dx,DWORD PTR ds:[rsi]
   14003206e:	jne    0x1400320e2
   140032070:	movsxd esp,DWORD PTR [rbp+0x45]
   140032073:	ins    BYTE PTR es:[rdi],dx
   140032074:	gs ins DWORD PTR es:[rdi],dx
   140032076:	outs   dx,BYTE PTR gs:[rsi]
   140032078:	je     0x1400320ed
   14003207a:	rex
   14003207b:	push   r11
   14003207d:	push   rsp
   14003207e:	rex push rcx
   140032080:	push   rcx
   140032081:	ins    DWORD PTR es:[rdi],dx
   140032082:	ins    BYTE PTR es:[rdi],dx
   140032083:	rex.WX push rbx
   140032085:	rex
   140032086:	add    BYTE PTR [rax-0x7e],bpl
   14003208a:	add    al,BYTE PTR [rax+0x1]
	...
   140032095:	add    BYTE PTR [rax],al
   140032097:	add    BYTE PTR [rsi],ch
   140032099:	(bad)  
   14003209a:	push   r14
   14003209c:	rex.RX jne 0x14003210d
   14003209f:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   1400320a3:	outs   dx,BYTE PTR ds:[rsi]
   1400320a4:	rex.X outs dx,DWORD PTR ds:[rsi]
   1400320a6:	fs jns 0x1400320e9
   1400320a9:	push   r11
   1400320ab:	push   rsp
   1400320ac:	rex push rcx
   1400320ae:	push   rcx
   1400320af:	ins    DWORD PTR es:[rdi],dx
   1400320b0:	ins    BYTE PTR es:[rdi],dx
   1400320b1:	rex.WX push rbx
   1400320b3:	rex
   1400320b4:	add    BYTE PTR [rax],al
   1400320b7:	add    BYTE PTR [rax-0x7e],ch
   1400320ba:	add    al,BYTE PTR [rax+0x1]
	...
   1400320c5:	add    BYTE PTR [rax],al
   1400320c7:	add    BYTE PTR [rsi],ch
   1400320c9:	(bad)  
   1400320ca:	push   r14
   1400320cc:	push   rax
   1400320cd:	jb     0x14003213e
   1400320cf:	addr32 jb 0x140032133
   1400320d2:	ins    DWORD PTR es:[rdi],dx
   1400320d3:	rex
   1400320d4:	push   r11
   1400320d6:	push   rsp
   1400320d7:	rex push rcx
   1400320d9:	push   rcx
   1400320da:	ins    DWORD PTR es:[rdi],dx
   1400320db:	ins    BYTE PTR es:[rdi],dx
   1400320dc:	rex.WX push rbx
   1400320de:	rex
   1400320df:	add    BYTE PTR [rax],al
   1400320e2:	add    BYTE PTR [rax],al
   1400320e4:	add    BYTE PTR [rax],al
   1400320e6:	add    BYTE PTR [rax],al
   1400320e8:	push   0x1400282
	...
   1400320f5:	add    BYTE PTR [rax],al
   1400320f7:	add    BYTE PTR [rsi],ch
   1400320f9:	(bad)  
   1400320fa:	push   r14
   1400320fc:	rex.RX jne 0x14003216d
   1400320ff:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140032103:	outs   dx,BYTE PTR ds:[rsi]
   140032104:	push   rbx
   140032105:	outs   dx,DWORD PTR ds:[rsi]
   140032106:	jne    0x14003217a
   140032108:	movsxd esp,DWORD PTR [rbp+0x45]
   14003210b:	ins    BYTE PTR es:[rdi],dx
   14003210c:	gs ins DWORD PTR es:[rdi],dx
   14003210e:	outs   dx,BYTE PTR gs:[rsi]
   140032110:	je     0x140032152
   140032112:	push   r11
   140032114:	push   rsp
   140032115:	rex push rcx
   140032117:	push   rcx
   140032118:	ins    DWORD PTR es:[rdi],dx
   140032119:	ins    BYTE PTR es:[rdi],dx
   14003211a:	rex.WX push rbx
   14003211c:	rex
   14003211d:	add    BYTE PTR [rax],al
   140032120:	push   0x1400282
	...
   14003212d:	add    BYTE PTR [rax],al
   14003212f:	add    BYTE PTR [rsi],ch
   140032131:	(bad)  
   140032132:	push   r14
   140032134:	push   rbx
   140032135:	je     0x140032198
   140032137:	je     0x14003219e
   140032139:	ins    DWORD PTR es:[rdi],dx
   14003213a:	outs   dx,BYTE PTR gs:[rsi]
   14003213c:	je     0x140032191
   14003213e:	outs   dx,DWORD PTR ds:[rsi]
   14003213f:	jne    0x1400321b3
   140032141:	movsxd esp,DWORD PTR [rbp+0x45]
   140032144:	ins    BYTE PTR es:[rdi],dx
   140032145:	gs ins DWORD PTR es:[rdi],dx
   140032147:	outs   dx,BYTE PTR gs:[rsi]
   140032149:	je     0x14003218b
   14003214b:	push   r11
   14003214d:	push   rsp
   14003214e:	rex push rcx
   140032150:	push   rcx
   140032151:	ins    DWORD PTR es:[rdi],dx
   140032152:	ins    BYTE PTR es:[rdi],dx
   140032153:	rex.WX push rbx
   140032155:	rex
   140032156:	add    BYTE PTR [rax-0x7e],bpl
   14003215a:	add    al,BYTE PTR [rax+0x1]
	...
   140032165:	add    BYTE PTR [rax],al
   140032167:	add    BYTE PTR [rsi],ch
   140032169:	(bad)  
   14003216a:	push   r14
   14003216c:	rex.R
   14003216d:	gs (bad) 
   14003216f:	jne    0x1400321d8
   140032171:	addr32 gs jb 0x1400321c8
   140032175:	je     0x1400321d8
   140032177:	je     0x1400321de
   140032179:	ins    DWORD PTR es:[rdi],dx
   14003217a:	outs   dx,BYTE PTR gs:[rsi]
   14003217c:	je     0x1400321be
   14003217e:	push   r11
   140032180:	push   rsp
   140032181:	rex push rcx
   140032183:	push   rcx
   140032184:	ins    DWORD PTR es:[rdi],dx
   140032185:	ins    BYTE PTR es:[rdi],dx
   140032186:	rex.WX push rbx
   140032188:	rex
   140032189:	add    BYTE PTR [rax],al
   14003218c:	add    BYTE PTR [rax],al
   14003218e:	add    BYTE PTR [rax],al
   140032190:	push   0x1400282
	...
   14003219d:	add    BYTE PTR [rax],al
   14003219f:	add    BYTE PTR [rsi],ch
   1400321a1:	(bad)  
   1400321a2:	push   r14
   1400321a4:	push   rbp
   1400321a5:	imul   edx,DWORD PTR [rcx+0x75],0x66696c61
   1400321ac:	imul   esp,DWORD PTR [rbp+0x64],0x41406449
   1400321b3:	push   rbx
   1400321b4:	push   rsp
   1400321b5:	rex push rcx
   1400321b7:	push   rcx
   1400321b8:	ins    DWORD PTR es:[rdi],dx
   1400321b9:	ins    BYTE PTR es:[rdi],dx
   1400321ba:	rex.WX push rbx
   1400321bc:	rex
   1400321bd:	add    BYTE PTR [rax],al
   1400321c0:	push   0x1400282
	...
   1400321cd:	add    BYTE PTR [rax],al
   1400321cf:	add    BYTE PTR [rsi],ch
   1400321d1:	(bad)  
   1400321d2:	push   r14
   1400321d4:	push   rbp
   1400321d5:	imul   ecx,DWORD PTR [rcx+0x6d],0x74726f70
   1400321dc:	rex
   1400321dd:	push   r11
   1400321df:	push   rsp
   1400321e0:	rex push rcx
   1400321e2:	push   rcx
   1400321e3:	ins    DWORD PTR es:[rdi],dx
   1400321e4:	ins    BYTE PTR es:[rdi],dx
   1400321e5:	rex.WX push rbx
   1400321e7:	rex
   1400321e8:	add    BYTE PTR [rax],al
   1400321eb:	add    BYTE PTR [rax],al
   1400321ed:	add    BYTE PTR [rax],al
   1400321ef:	add    BYTE PTR [rax-0x7e],ch
   1400321f2:	add    al,BYTE PTR [rax+0x1]
	...
   1400321fd:	add    BYTE PTR [rax],al
   1400321ff:	add    BYTE PTR [rsi],ch
   140032201:	(bad)  
   140032202:	push   r14
   140032204:	push   rbp
   140032205:	imul   ecx,DWORD PTR [rdi+0x62],0x7463656a
   14003220c:	rex.WRB
   14003220d:	gs ins DWORD PTR es:[rdi],dx
   14003220f:	(bad)  
   140032210:	gs jb  0x14003225f
   140032213:	imul   esi,DWORD PTR [rbx+0x74],0x54534140
   14003221a:	rex push rcx
   14003221c:	push   rcx
   14003221d:	ins    DWORD PTR es:[rdi],dx
   14003221e:	ins    BYTE PTR es:[rdi],dx
   14003221f:	rex.WX push rbx
   140032221:	rex
   140032222:	add    BYTE PTR [rax],al
   140032225:	add    BYTE PTR [rax],al
   140032227:	add    BYTE PTR [rax-0x7e],ch
   14003222a:	add    al,BYTE PTR [rax+0x1]
	...
   140032235:	add    BYTE PTR [rax],al
   140032237:	add    BYTE PTR [rsi],ch
   140032239:	(bad)  
   14003223a:	push   r14
   14003223c:	push   rbp
   14003223d:	imul   edx,DWORD PTR [rcx+0x75],0x66696c61
   140032244:	imul   esp,DWORD PTR [rbp+0x64],0x67617250
   14003224b:	ins    DWORD PTR es:[rdi],dx
   14003224c:	(bad)  
   14003224d:	rex.WB
   14003224e:	fs rex
   140032250:	push   r11
   140032252:	push   rsp
   140032253:	rex push rcx
   140032255:	push   rcx
   140032256:	ins    DWORD PTR es:[rdi],dx
   140032257:	ins    BYTE PTR es:[rdi],dx
   140032258:	rex.WX push rbx
   14003225a:	rex
   14003225b:	add    BYTE PTR [rax],al
   14003225e:	add    BYTE PTR [rax],al
   140032260:	push   0x1400282
	...
   14003226d:	add    BYTE PTR [rax],al
   14003226f:	add    BYTE PTR [rsi],ch
   140032271:	(bad)  
   140032272:	push   r14
   140032274:	push   rbp
   140032275:	imul   edx,DWORD PTR [rax+0x72],0x616d6761
   14003227c:	rex
   14003227d:	push   r11
   14003227f:	push   rsp
   140032280:	rex push rcx
   140032282:	push   rcx
   140032283:	ins    DWORD PTR es:[rdi],dx
   140032284:	ins    BYTE PTR es:[rdi],dx
   140032285:	rex.WX push rbx
   140032287:	rex
   140032288:	add    BYTE PTR [rax],al
   14003228b:	add    BYTE PTR [rax],al
   14003228d:	add    BYTE PTR [rax],al
   14003228f:	add    BYTE PTR [rax-0x7e],ch
   140032292:	add    al,BYTE PTR [rax+0x1]
	...
   14003229d:	add    BYTE PTR [rax],al
   14003229f:	add    BYTE PTR [rsi],ch
   1400322a1:	(bad)  
   1400322a2:	push   r14
   1400322a4:	push   rbp
   1400322a5:	imul   ecx,DWORD PTR [rax+0x65],0x72656461
   1400322ac:	rex.WB je 0x140032314
   1400322af:	ins    DWORD PTR es:[rdi],dx
   1400322b0:	imul   r14,QWORD PTR [rbx+0x74],0x54534140
   1400322b8:	rex push rcx
   1400322ba:	push   rcx
   1400322bb:	ins    DWORD PTR es:[rdi],dx
   1400322bc:	ins    BYTE PTR es:[rdi],dx
   1400322bd:	rex.WX push rbx
   1400322bf:	rex
   1400322c0:	add    BYTE PTR [rax],al
   1400322c3:	add    BYTE PTR [rax],al
   1400322c5:	add    BYTE PTR [rax],al
   1400322c7:	add    BYTE PTR [rax-0x7e],ch
   1400322ca:	add    al,BYTE PTR [rax+0x1]
	...
   1400322d5:	add    BYTE PTR [rax],al
   1400322d7:	add    BYTE PTR [rsi],ch
   1400322d9:	(bad)  
   1400322da:	push   r14
   1400322dc:	push   rbp
   1400322dd:	imul   edx,DWORD PTR [rax+0x72],0x6172676f
   1400322e4:	ins    DWORD PTR es:[rdi],dx
   1400322e5:	rex
   1400322e6:	push   r11
   1400322e8:	push   rsp
   1400322e9:	rex push rcx
   1400322eb:	push   rcx
   1400322ec:	ins    DWORD PTR es:[rdi],dx
   1400322ed:	ins    BYTE PTR es:[rdi],dx
   1400322ee:	rex.WX push rbx
   1400322f0:	rex
   1400322f1:	add    BYTE PTR [rax],al
   1400322f4:	add    BYTE PTR [rax],al
   1400322f6:	add    BYTE PTR [rax],al
   1400322f8:	push   0x1400282
	...
   140032305:	add    BYTE PTR [rax],al
   140032307:	add    BYTE PTR [rsi],ch
   140032309:	(bad)  
   14003230a:	push   r14
   14003230c:	push   rbp
   14003230d:	imul   eax,DWORD PTR [rcx+0x72],0x4d796172
   140032314:	gs ins DWORD PTR es:[rdi],dx
   140032316:	(bad)  
   140032317:	gs jb  0x140032366
   14003231a:	imul   esi,DWORD PTR [rbx+0x74],0x54534140
   140032321:	rex push rcx
   140032323:	push   rcx
   140032324:	ins    DWORD PTR es:[rdi],dx
   140032325:	ins    BYTE PTR es:[rdi],dx
   140032326:	rex.WX push rbx
   140032328:	rex
   140032329:	add    BYTE PTR [rax],al
   14003232c:	add    BYTE PTR [rax],al
   14003232e:	add    BYTE PTR [rax],al
   140032330:	push   0x1400282
	...
   14003233d:	add    BYTE PTR [rax],al
   14003233f:	add    BYTE PTR [rsi],ch
   140032341:	(bad)  
   140032342:	push   r14
   140032344:	push   rbp
   140032345:	imul   ecx,DWORD PTR [rdi+0x62],0x7463656a
   14003234c:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14003234e:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140032356:	jb     0x140032398
   140032358:	push   r11
   14003235a:	push   rsp
   14003235b:	rex push rcx
   14003235d:	push   rcx
   14003235e:	ins    DWORD PTR es:[rdi],dx
   14003235f:	ins    BYTE PTR es:[rdi],dx
   140032360:	rex.WX push rbx
   140032362:	rex
   140032363:	add    BYTE PTR [rax],al
   140032366:	add    BYTE PTR [rax],al
   140032368:	push   0x1400282
	...
   140032375:	add    BYTE PTR [rax],al
   140032377:	add    BYTE PTR [rsi],ch
   140032379:	(bad)  
   14003237a:	push   r14
   14003237c:	push   rbp
   14003237d:	imul   edx,DWORD PTR [rax+0x61],0x656d6172
   140032384:	je     0x1400323eb
   140032386:	jb     0x1400323d4
   140032388:	imul   esi,DWORD PTR [rbx+0x74],0x54534140
   14003238f:	rex push rcx
   140032391:	push   rcx
   140032392:	ins    DWORD PTR es:[rdi],dx
   140032393:	ins    BYTE PTR es:[rdi],dx
   140032394:	rex.WX push rbx
   140032396:	rex
   140032397:	add    BYTE PTR [rax],al
   14003239a:	add    BYTE PTR [rax],al
   14003239c:	add    BYTE PTR [rax],al
   14003239e:	add    BYTE PTR [rax],al
   1400323a0:	push   0x1400282
	...
   1400323ad:	add    BYTE PTR [rax],al
   1400323af:	add    BYTE PTR [rsi],ch
   1400323b1:	(bad)  
   1400323b2:	push   r14
   1400323b4:	push   rbp
   1400323b5:	imul   ecx,DWORD PTR [rdi+0x62],0x7463656a
   1400323bc:	rex.WRB
   1400323bd:	gs ins DWORD PTR es:[rdi],dx
   1400323bf:	(bad)  
   1400323c0:	gs jb  0x140032403
   1400323c3:	push   r11
   1400323c5:	push   rsp
   1400323c6:	rex push rcx
   1400323c8:	push   rcx
   1400323c9:	ins    DWORD PTR es:[rdi],dx
   1400323ca:	ins    BYTE PTR es:[rdi],dx
   1400323cb:	rex.WX push rbx
   1400323cd:	rex
   1400323ce:	add    BYTE PTR [rax-0x7e],bpl
   1400323d2:	add    al,BYTE PTR [rax+0x1]
	...
   1400323dd:	add    BYTE PTR [rax],al
   1400323df:	add    BYTE PTR [rsi],ch
   1400323e1:	(bad)  
   1400323e2:	push   r14
   1400323e4:	push   rbp
   1400323e5:	imul   ecx,DWORD PTR [rdi+0x62],0x7463656a
   1400323ec:	rex.R
   1400323ed:	imul   bp,WORD PTR gs:[rsi+0x69],0x6974
   1400323f4:	outs   dx,DWORD PTR ds:[rsi]
   1400323f5:	outs   dx,BYTE PTR ds:[rsi]
   1400323f6:	rex
   1400323f7:	push   r11
   1400323f9:	push   rsp
   1400323fa:	rex push rcx
   1400323fc:	push   rcx
   1400323fd:	ins    DWORD PTR es:[rdi],dx
   1400323fe:	ins    BYTE PTR es:[rdi],dx
   1400323ff:	rex.WX push rbx
   140032401:	rex
   140032402:	add    BYTE PTR [rax],al
   140032405:	add    BYTE PTR [rax],al
   140032407:	add    BYTE PTR [rax-0x7e],ch
   14003240a:	add    al,BYTE PTR [rax+0x1]
	...
   140032415:	add    BYTE PTR [rax],al
   140032417:	add    BYTE PTR [rsi],ch
   140032419:	(bad)  
   14003241a:	push   r14
   14003241c:	push   rbp
   14003241d:	imul   edx,DWORD PTR [rbx+0x6f],0x65637275
   140032424:	rex.RB ins BYTE PTR es:[rdi],dx
   140032426:	gs ins DWORD PTR es:[rdi],dx
   140032428:	outs   dx,BYTE PTR gs:[rsi]
   14003242a:	je     0x14003246c
   14003242c:	push   r11
   14003242e:	push   rsp
   14003242f:	rex push rcx
   140032431:	push   rcx
   140032432:	ins    DWORD PTR es:[rdi],dx
   140032433:	ins    BYTE PTR es:[rdi],dx
   140032434:	rex.WX push rbx
   140032436:	rex
   140032437:	add    BYTE PTR [rax],al
   14003243a:	add    BYTE PTR [rax],al
   14003243c:	add    BYTE PTR [rax],al
   14003243e:	add    BYTE PTR [rax],al
   140032440:	push   0x1400282
	...
   14003244d:	add    BYTE PTR [rax],al
   14003244f:	add    BYTE PTR [rsi],ch
   140032451:	(bad)  
   140032452:	push   r14
   140032454:	push   rbp
   140032455:	imul   ecx,DWORD PTR [rdi+0x62],0x7463656a
   14003245c:	rex.X imul ebp,DWORD PTR [rsi+0x64],0x40676e69
   140032464:	push   r11
   140032466:	push   rsp
   140032467:	rex push rcx
   140032469:	push   rcx
   14003246a:	ins    DWORD PTR es:[rdi],dx
   14003246b:	ins    BYTE PTR es:[rdi],dx
   14003246c:	rex.WX push rbx
   14003246e:	rex
   14003246f:	add    BYTE PTR [rax],al
   140032472:	add    BYTE PTR [rax],al
   140032474:	add    BYTE PTR [rax],al
   140032476:	add    BYTE PTR [rax],al
   140032478:	push   0x1400282
	...
   140032485:	add    BYTE PTR [rax],al
   140032487:	add    BYTE PTR [rsi],ch
   140032489:	(bad)  
   14003248a:	push   r14
   14003248c:	push   rbp
   14003248d:	imul   edx,DWORD PTR [rbx+0x63],0x74706972
   140032494:	rex.X imul ebp,DWORD PTR [rsi+0x64],0x40676e69
   14003249c:	push   r11
   14003249e:	push   rsp
   14003249f:	rex push rcx
   1400324a1:	push   rcx
   1400324a2:	ins    DWORD PTR es:[rdi],dx
   1400324a3:	ins    BYTE PTR es:[rdi],dx
   1400324a4:	rex.WX push rbx
   1400324a6:	rex
   1400324a7:	add    BYTE PTR [rax],al
   1400324aa:	add    BYTE PTR [rax],al
   1400324ac:	add    BYTE PTR [rax],al
   1400324ae:	add    BYTE PTR [rax],al
   1400324b0:	push   0x1400282
	...
   1400324bd:	add    BYTE PTR [rax],al
   1400324bf:	add    BYTE PTR [rsi],ch
   1400324c1:	(bad)  
   1400324c2:	push   r14
   1400324c4:	push   rbp
   1400324c5:	imul   eax,DWORD PTR [rcx+0x72],0x42796172
   1400324cc:	imul   ebp,DWORD PTR [rsi+0x64],0x40676e69
   1400324d3:	push   r11
   1400324d5:	push   rsp
   1400324d6:	rex push rcx
   1400324d8:	push   rcx
   1400324d9:	ins    DWORD PTR es:[rdi],dx
   1400324da:	ins    BYTE PTR es:[rdi],dx
   1400324db:	rex.WX push rbx
   1400324dd:	rex
   1400324de:	add    BYTE PTR [rax-0x7e],bpl
   1400324e2:	add    al,BYTE PTR [rax+0x1]
	...
   1400324ed:	add    BYTE PTR [rax],al
   1400324ef:	add    BYTE PTR [rsi],ch
   1400324f1:	(bad)  
   1400324f2:	push   r14
   1400324f4:	push   rbp
   1400324f5:	imul   edx,DWORD PTR [rax+0x75],0x63696c62
   1400324fc:	rex.WRB
   1400324fd:	gs ins DWORD PTR es:[rdi],dx
   1400324ff:	(bad)  
   140032500:	gs jb  0x140032543
   140032503:	push   r11
   140032505:	push   rsp
   140032506:	rex push rcx
   140032508:	push   rcx
   140032509:	ins    DWORD PTR es:[rdi],dx
   14003250a:	ins    BYTE PTR es:[rdi],dx
   14003250b:	rex.WX push rbx
   14003250d:	rex
   14003250e:	add    BYTE PTR [rbx],sil
   140032511:	add    BYTE PTR [rax],al
   140032513:	add    BYTE PTR [rcx],dl
   140032515:	add    BYTE PTR [rax],al
   140032517:	add    BYTE PTR [rax],cl
   140032519:	add    BYTE PTR [rax],al
   14003251b:	add    BYTE PTR [rdi],al
   14003251d:	add    BYTE PTR [rax],al
   14003251f:	add    BYTE PTR [rip+0x3c000000],bh        # 0x17c032525
   140032525:	add    BYTE PTR [rax],al
   140032527:	add    BYTE PTR [rax],bh
   140032529:	add    BYTE PTR [rax],al
   14003252b:	add    BYTE PTR [rdi],dh
   14003252d:	add    BYTE PTR [rax],al
   14003252f:	add    BYTE PTR [rdi],ch
   140032531:	add    BYTE PTR [rax],al
   140032533:	add    BYTE PTR [rip+0x24000000],bl        # 0x164032539
   140032539:	add    BYTE PTR [rax],al
   14003253b:	add    BYTE PTR [rdx],ah
   14003253d:	add    BYTE PTR [rax],al
   14003253f:	add    BYTE PTR [rcx],ah
	...
   140032549:	or     BYTE PTR [rdx],al
   14003254b:	rex add DWORD PTR [rax],eax
   14003254e:	add    BYTE PTR [rax],al
   140032550:	add    BYTE PTR [rax],cl
   140032552:	add    al,BYTE PTR [rax+0x1]
   140032555:	add    BYTE PTR [rax],al
   140032557:	add    BYTE PTR [rax],al
   140032559:	or     BYTE PTR [rdx],al
   14003255b:	rex add DWORD PTR [rax],eax
   14003255e:	add    BYTE PTR [rax],al
   140032560:	add    BYTE PTR [rax],cl
   140032562:	add    al,BYTE PTR [rax+0x1]
   140032565:	add    BYTE PTR [rax],al
   140032567:	add    BYTE PTR [rax],al
   140032569:	or     BYTE PTR [rdx],al
   14003256b:	rex add DWORD PTR [rax],eax
   14003256e:	add    BYTE PTR [rax],al
   140032570:	push   0x1400282
	...
   14003257d:	add    BYTE PTR [rax],al
   14003257f:	add    BYTE PTR [rsi],ch
   140032581:	(bad)  
   140032582:	push   r14
   140032584:	je     0x1400325ff
   140032586:	jo     0x1400325ed
   140032588:	pop    rdi
   140032589:	imul   ebp,DWORD PTR [rsi+0x66],0x40406f
   140032590:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   140032596:	add    BYTE PTR [rax],al
   140032598:	int    0x5d
   14003259a:	and    dl,dl
   14003259c:	data16 (bad) 
   14003259e:	(bad)  
   14003259f:	push   QWORD PTR [rbp-0x68]
   1400325a2:	add    BYTE PTR [rax],al
   1400325a4:	(bad)  
   1400325a5:	(bad)  
   1400325a6:	(bad)  
   1400325a7:	(bad)  
   1400325a8:	(bad)  
   1400325a9:	(bad)  
   1400325aa:	(bad)  
   1400325ab:	(bad)  
   1400325ac:	(bad)  
   1400325ad:	(bad)  
   1400325ae:	(bad)  
   1400325af:	inc    DWORD PTR [rcx]
	...

Disassembly of section .pdata:

0000000140033000 <.pdata>:
   140033000:	adc    BYTE PTR [rax],dl
   140033002:	add    BYTE PTR [rax],al
   140033004:	adc    BYTE PTR ss:[rax],al
   140033007:	add    BYTE PTR [rax+0x400002c3],dh
   14003300d:	adc    BYTE PTR [rax],al
   14003300f:	add    bh,bh
   140033011:	adc    BYTE PTR [rax],al
   140033013:	add    BYTE PTR [rax],bh
   140033015:	mov    edx,0x11000002
   14003301a:	add    BYTE PTR [rax],al
   14003301c:	adc    QWORD PTR [rax],rax
   14003301f:	add    BYTE PTR [rax],dl
   140033021:	enter  0x2,0x60
   140033025:	adc    DWORD PTR [rax],eax
   140033027:	add    BYTE PTR [rbx+0x10000011],ch
   14003302d:	enter  0x2,0xb0
   140033031:	adc    DWORD PTR [rax],eax
   140033033:	add    BYTE PTR [rax],dl
   140033035:	adc    al,BYTE PTR [rax]
   140033037:	add    BYTE PTR [rdx+rdi*4+0x2],al
   14003303b:	add    BYTE PTR [rax],dl
   14003303d:	adc    al,BYTE PTR [rax]
   14003303f:	add    dh,ah
   140033041:	adc    al,BYTE PTR [rax]
   140033043:	add    BYTE PTR [rdx+rdi*4+0x2],dl
   140033047:	add    al,dh
   140033049:	adc    al,BYTE PTR [rax]
   14003304b:	add    BYTE PTR [rbp+0x13],ch
   14003304e:	add    BYTE PTR [rax],al
   140033050:	mov    al,0xc3
   140033052:	add    al,BYTE PTR [rax]
   140033054:	jo     0x140033069
   140033056:	add    BYTE PTR [rax],al
   140033058:	iret   
   140033059:	adc    eax,0xba780000
   14003305e:	add    al,BYTE PTR [rax]
   140033060:	rcl    BYTE PTR [rip+0x17fc0000],1        # 0x157ff3066
   140033066:	add    BYTE PTR [rax],al
   140033068:	add    BYTE PTR [rbx+0x18000002],bh
   14003306e:	add    BYTE PTR [rax],al
   140033070:	jmp    0x14003308b
   140033072:	add    BYTE PTR [rax],al
   140033074:	mov    BYTE PTR [rbx+0x19f00002],bh
   14003307a:	add    BYTE PTR [rax],al
   14003307c:	rcr    DWORD PTR [rbx],0x0
   14003307f:	add    BYTE PTR [rsp+rdi*4],dl
   140033082:	add    al,BYTE PTR [rax]
   140033084:	loopne 0x1400330a1
   140033086:	add    BYTE PTR [rax],al
   140033088:	or     DWORD PTR [rax+rax*1],ebx
   14003308b:	add    ah,ah
   14003308d:	mov    esp,0x1c090002
   140033092:	add    BYTE PTR [rax],al
   140033094:	cmp    BYTE PTR [rax+rax*1],bl
   140033097:	add    BYTE PTR [rsp+rdi*4+0x1c380002],ch
   14003309e:	add    BYTE PTR [rax],al
   1400330a0:	push   rcx
   1400330a1:	sbb    al,0x0
   1400330a3:	add    BYTE PTR [rsp+rdi*4+0x1c600002],bl
   1400330aa:	add    BYTE PTR [rax],al
   1400330ac:	ficomp WORD PTR [rax+rax*1]
   1400330af:	add    BYTE PTR [rsi+rdi*4],bl
   1400330b2:	add    al,BYTE PTR [rax]
   1400330b4:	loopne 0x1400330d2
   1400330b6:	add    BYTE PTR [rax],al
   1400330b8:	or     DWORD PTR [rip+0xffffffffbce40000],ebx        # 0xfce730be
   1400330be:	add    al,BYTE PTR [rax]
   1400330c0:	or     DWORD PTR [rip+0x1d390000],ebx        # 0x15d3c30c6
   1400330c6:	add    BYTE PTR [rax],al
   1400330c8:	sar    BYTE PTR [rdx+rax*1+0x1d3900],1
   1400330cf:	add    BYTE PTR [rdx+0x1d],dl
   1400330d2:	add    BYTE PTR [rax],al
   1400330d4:	sar    BYTE PTR [rdx+rax*1+0x1d6000],0x0
   1400330dc:	sbb    DWORD PTR [rip+0xffffffffbd180000],0x1d810002        # 0xfd1b30e6
   1400330e6:	add    BYTE PTR [rax],al
   1400330e8:	out    dx,al
   1400330e9:	sbb    eax,0xbd040000
   1400330ee:	add    al,BYTE PTR [rax]
   1400330f0:	out    dx,al
   1400330f1:	sbb    eax,0x1df00000
   1400330f6:	add    BYTE PTR [rax],al
   1400330f8:	hlt    
   1400330f9:	mov    esp,0x1df00002
   1400330fe:	add    BYTE PTR [rax],al
   140033100:	sbb    al,0x1e
   140033102:	add    BYTE PTR [rax],al
   140033104:	adc    al,0xbe
   140033106:	add    al,BYTE PTR [rax]
   140033108:	and    BYTE PTR [rsi],bl
   14003310a:	add    BYTE PTR [rax],al
   14003310c:	rex.RXB (bad) 
   14003310e:	add    BYTE PTR [rax],al
   140033110:	rex.WR movabs rbp,0x1e9900001e470002
   14003311a:	add    BYTE PTR [rax],al
   14003311c:	cmp    BYTE PTR [rbp+0x1e990002],bh
   140033122:	add    BYTE PTR [rax],al
   140033124:	lods   al,BYTE PTR ds:[rsi]
   140033125:	(bad)  
   140033126:	add    BYTE PTR [rax],al
   140033128:	sub    BYTE PTR [rbp+0x1eb00002],bh
   14003312e:	add    BYTE PTR [rax],al
   140033130:	int3   
   140033131:	(bad)  
   140033132:	add    BYTE PTR [rax],al
   140033134:	pop    rsp
   140033135:	mov    ebp,0x1fd00002
   14003313a:	add    BYTE PTR [rax],al
   14003313c:	adc    DWORD PTR [rax],esp
   14003313e:	add    BYTE PTR [rax],al
   140033140:	mov    al,0xc3
   140033142:	add    al,BYTE PTR [rax]
   140033144:	and    BYTE PTR [rax],ah
   140033146:	add    BYTE PTR [rax],al
   140033148:	(bad)  
   140033149:	and    DWORD PTR [rax],eax
   14003314b:	add    BYTE PTR [rax-0x43],dh
   14003314e:	add    al,BYTE PTR [rax]
   140033150:	adc    BYTE PTR [rcx],ah
   140033152:	add    BYTE PTR [rax],al
   140033154:	movsxd esp,DWORD PTR [rcx]
   140033156:	add    BYTE PTR [rax],al
   140033158:	adc    al,cl
   14003315a:	add    al,BYTE PTR [rax]
   14003315c:	jo     0x14003317f
   14003315e:	add    BYTE PTR [rax],al
   140033160:	mov    dh,0x21
   140033162:	add    BYTE PTR [rax],al
   140033164:	adc    al,cl
   140033166:	add    al,BYTE PTR [rax]
   140033168:	loopne 0x14003318b
   14003316a:	add    BYTE PTR [rax],al
   14003316c:	rex.RX and r8b,BYTE PTR [rax]
   14003316f:	add    BYTE PTR [rax],dl
   140033171:	enter  0x2,0x50
   140033175:	and    al,BYTE PTR [rax]
   140033177:	add    BYTE PTR [rdx+0x10000022],dl
   14003317d:	enter  0x2,0xf0
   140033181:	and    al,BYTE PTR [rax]
   140033183:	add    BYTE PTR [rbp+0x23],bl
   140033186:	add    BYTE PTR [rax],al
   140033188:	adc    al,cl
   14003318a:	add    al,BYTE PTR [rax]
   14003318c:	(bad)  
   14003318d:	and    eax,DWORD PTR [rax]
   14003318f:	add    BYTE PTR [rbp+0x23],bh
   140033192:	add    BYTE PTR [rax],al
   140033194:	adc    al,0xbe
   140033196:	add    al,BYTE PTR [rax]
   140033198:	jge    0x1400331bd
   14003319a:	add    BYTE PTR [rax],al
   14003319c:	fisub  DWORD PTR [rbx]
   14003319e:	add    BYTE PTR [rax],al
   1400331a0:	cwde   
   1400331a1:	mov    ebp,0x23da0002
   1400331a6:	add    BYTE PTR [rax],al
   1400331a8:	fbld   TBYTE PTR [rbx]
   1400331aa:	add    BYTE PTR [rax],al
   1400331ac:	mov    BYTE PTR [rbp+0x23e00002],bh
   1400331b2:	add    BYTE PTR [rax],al
   1400331b4:	push   rsi
   1400331b5:	and    al,0x0
   1400331b7:	add    BYTE PTR [rax],dl
   1400331b9:	enter  0x2,0x60
   1400331bd:	and    al,0x0
   1400331bf:	add    BYTE PTR [rcx-0x23ffffdc],al
   1400331c5:	mov    ebp,0x24810002
   1400331ca:	add    BYTE PTR [rax],al
   1400331cc:	movabs eax,ds:0xa10002bdc4000025
   1400331d5:	and    eax,0x25ac0000
   1400331da:	add    BYTE PTR [rax],al
   1400331dc:	mov    ah,0xbd
   1400331de:	add    al,BYTE PTR [rax]
   1400331e0:	mov    al,0x25
   1400331e2:	add    BYTE PTR [rax],al
   1400331e4:	(bad)  
   1400331e5:	add    BYTE PTR es:[rax],al
   1400331e8:	adc    al,cl
   1400331ea:	add    al,BYTE PTR [rax]
   1400331ec:	rex
   1400331ed:	add    BYTE PTR es:[rax],al
   1400331f0:	pop    rbp
   1400331f1:	add    BYTE PTR es:[rax],al
   1400331f4:	adc    al,0xbe
   1400331f6:	add    al,BYTE PTR [rax]
   1400331f8:	pop    rbp
   1400331f9:	add    BYTE PTR es:[rax],al
   1400331fc:	mov    edx,0xf8000026
   140033201:	mov    ebp,0x26ba0002
   140033206:	add    BYTE PTR [rax],al
   140033208:	mov    edi,0xe8000026
   14003320d:	mov    ebp,0x26c00002
   140033212:	add    BYTE PTR [rax],al
   140033214:	cli    
   140033215:	(bad)  
   140033216:	add    BYTE PTR [rax],al
   140033218:	sub    al,0xbe
   14003321a:	add    al,BYTE PTR [rax]
   14003321c:	add    BYTE PTR [rax],ch
   14003321e:	add    BYTE PTR [rax],al
   140033220:	push   0x1c000028
   140033225:	mov    esi,0x28700002
   14003322a:	add    BYTE PTR [rax],al
   14003322c:	(bad)  
   14003322d:	sub    BYTE PTR [rax],al
   14003322f:	add    BYTE PTR [rax],dl
   140033231:	enter  0x2,0xd0
   140033235:	sub    BYTE PTR [rax],al
   140033237:	add    BYTE PTR [rbp+0x29],cl
   14003323a:	add    BYTE PTR [rax],al
   14003323c:	sbb    al,0xbe
   14003323e:	add    al,BYTE PTR [rax]
   140033240:	push   rax
   140033241:	sub    DWORD PTR [rax],eax
   140033243:	add    BYTE PTR [rbp+0x10000029],bl
   140033249:	enter  0x2,0xa0
   14003324d:	sub    DWORD PTR [rax],eax
   14003324f:	add    dh,bl
   140033251:	sub    al,BYTE PTR [rax]
   140033253:	add    BYTE PTR [rsi+rdi*4],ch
   140033256:	add    al,BYTE PTR [rax]
   140033258:	loopne 0x140033284
   14003325a:	add    BYTE PTR [rax],al
   14003325c:	push   rcx
   14003325d:	sub    eax,DWORD PTR [rax]
   14003325f:	add    BYTE PTR [rax],dl
   140033261:	enter  0x2,0x60
   140033265:	sub    eax,DWORD PTR [rax]
   140033267:	add    BYTE PTR [rcx],ah
   140033269:	sub    al,0x0
   14003326b:	add    BYTE PTR [rax],ch
   14003326d:	(bad)
   140033270:	xor    BYTE PTR [rax+rax*1],ch
   140033273:	add    cl,dh
   140033275:	sub    al,0x0
   140033277:	add    BYTE PTR [rax],ch
   140033279:	(bad)
   14003327c:	add    BYTE PTR [rip+0x2d1a0000],ch        # 0x16d1d3282
   140033282:	add    BYTE PTR [rax],al
   140033284:	and    ch,al
   140033286:	add    al,BYTE PTR [rax]
   140033288:	sbb    ch,BYTE PTR [rip+0x2d770000]        # 0x16d7a328e
   14003328e:	add    BYTE PTR [rax],al
   140033290:	push   rsp
   140033291:	mov    esi,0x2d770002
   140033296:	add    BYTE PTR [rax],al
   140033298:	jl     0x1400332c7
   14003329a:	add    BYTE PTR [rax],al
   14003329c:	rex.R mov esi,0x2d800002
   1400332a2:	add    BYTE PTR [rax],al
   1400332a4:	(bad)  [rip+0xffffffffc8100000]        # 0x1081332aa
   1400332aa:	add    al,BYTE PTR [rax]
   1400332ac:	loopne 0x1400332db
   1400332ae:	add    BYTE PTR [rax],al
   1400332b0:	in     eax,0x2e
   1400332b2:	add    BYTE PTR [rax],al
   1400332b4:	adc    al,cl
   1400332b6:	add    al,BYTE PTR [rax]
   1400332b8:	lock add BYTE PTR cs:[rax],al
   1400332bc:	jnp    0x1400332ed
   1400332be:	add    BYTE PTR [rax],al
   1400332c0:	adc    al,cl
   1400332c2:	add    al,BYTE PTR [rax]
   1400332c4:	sub    BYTE PTR [rdi],0x0
   1400332c7:	add    dh,ch
   1400332c9:	(bad)  
   1400332ca:	add    BYTE PTR [rax],al
   1400332cc:	push   0xfffffffff00002be
   1400332d1:	(bad)  
   1400332d2:	add    BYTE PTR [rax],al
   1400332d4:	xor    BYTE PTR ds:[rax],al
   1400332d7:	add    BYTE PTR [rax],dl
   1400332d9:	enter  0x2,0x40
   1400332dd:	xor    BYTE PTR [rax],al
   1400332df:	add    BYTE PTR [rbp+0x10000030],cl
   1400332e5:	enter  0x2,0x90
   1400332e9:	xor    BYTE PTR [rax],al
   1400332eb:	add    BYTE PTR [rdx+0x74000031],bl
   1400332f1:	mov    esi,0x31a00002
   1400332f6:	add    BYTE PTR [rax],al
   1400332f8:	repnz xor al,BYTE PTR [rax]
   1400332fb:	add    BYTE PTR [rax-0xdfffd42],dh
   140033301:	xor    al,BYTE PTR [rax]
   140033303:	add    bl,bh
   140033305:	cmp    eax,DWORD PTR [rax]
   140033307:	add    BYTE PTR [rax+0x2be],dl
   14003330d:	cmp    al,0x0
   14003330f:	add    BYTE PTR [rsi+rdi*1],ch
   140033312:	add    BYTE PTR [rax],al
   140033314:	in     al,0xbe
   140033316:	add    al,BYTE PTR [rax]
   140033318:	sub    al,0x3e
   14003331a:	add    BYTE PTR [rax],al
   14003331c:	cmp    DWORD PTR [rsi],0xbed00000
   140033322:	add    al,BYTE PTR [rax]
   140033324:	cmp    DWORD PTR [rsi],0x3e9a0000
   14003332a:	add    BYTE PTR [rax],al
   14003332c:	sar    BYTE PTR [rsi+0x3ea00002],0x0
   140033333:	add    cl,cl
   140033335:	(bad)  
   140033336:	add    BYTE PTR [rax],al
   140033338:	clc    
   140033339:	mov    esi,0x3fd00002
   14003333e:	add    BYTE PTR [rax],al
   140033340:	rex
   140033341:	add    BYTE PTR [rax],al
   140033344:	xor    al,0xbf
   140033346:	add    al,BYTE PTR [rax]
   140033348:	rex
   140033349:	add    BYTE PTR [rax],al
   14003334c:	mov    dl,0x40
   14003334e:	add    BYTE PTR [rax],al
   140033350:	sbb    al,0xbf
   140033352:	add    al,BYTE PTR [rax]
   140033354:	mov    dl,0x40
   140033356:	add    BYTE PTR [rax],al
   140033358:	int    0x40
   14003335a:	add    BYTE PTR [rax],al
   14003335c:	or     al,0xbf
   14003335e:	add    al,BYTE PTR [rax]
   140033360:	rol    BYTE PTR [rax+0x0],1
   140033363:	add    BYTE PTR [rbx],bl
   140033365:	add    BYTE PTR [r8],al
   140033368:	ins    BYTE PTR es:[rdi],dx
   140033369:	mov    edi,0x411b0002
   14003336e:	add    BYTE PTR [rax],al
   140033370:	loope  0x1400333b3
   140033372:	add    BYTE PTR [rax],al
   140033374:	pop    rax
   140033375:	mov    edi,0x41e10002
   14003337a:	add    BYTE PTR [rax],al
   14003337c:	stc    
   14003337d:	add    BYTE PTR [r8],al
   140033380:	movabs rdi,0x4230000042000002
   14003338a:	add    BYTE PTR [rax],al
   14003338c:	mov    al,0xbf
   14003338e:	add    al,BYTE PTR [rax]
   140033390:	xor    BYTE PTR [rdx+0x0],al
   140033393:	add    BYTE PTR [rbx-0x6fffffb3],dh
   140033399:	mov    edi,0x4db30002
   14003339e:	add    BYTE PTR [rax],al
   1400333a0:	(bad)
   1400333a3:	add    BYTE PTR [rax-0x2ffffd41],al
   1400333a9:	rex.WRB add BYTE PTR [r8],r8b
   1400333ac:	sub    BYTE PTR [rdx+0x0],dl
   1400333af:	add    al,al
   1400333b1:	mov    edi,0x52300002
   1400333b6:	add    BYTE PTR [rax],al
   1400333b8:	(bad)  
   1400333b9:	pop    rdx
   1400333ba:	add    BYTE PTR [rax],al
   1400333bc:	fdivr  DWORD PTR [rdi+0x5aa00002]
   1400333c2:	add    BYTE PTR [rax],al
   1400333c4:	loopne 0x140033420
   1400333c6:	add    BYTE PTR [rax],al
   1400333c8:	sbb    al,al
   1400333ca:	add    al,BYTE PTR [rax]
   1400333cc:	loopne 0x140033428
   1400333ce:	add    BYTE PTR [rax],al
   1400333d0:	iret   
   1400333d1:	pop    rbx
   1400333d2:	add    BYTE PTR [rax],al
   1400333d4:	add    al,0xc0
   1400333d6:	add    al,BYTE PTR [rax]
   1400333d8:	iret   
   1400333d9:	pop    rbx
   1400333da:	add    BYTE PTR [rax],al
   1400333dc:	pop    r12
   1400333de:	add    BYTE PTR [rax],al
   1400333e0:	hlt    
   1400333e1:	mov    edi,0x5c500002
   1400333e6:	add    BYTE PTR [rax],al
   1400333e8:	(bad)  
   1400333e9:	pop    rsp
   1400333ea:	add    BYTE PTR [rax],al
   1400333ec:	mov    ah,0xc0
   1400333ee:	add    al,BYTE PTR [rax]
   1400333f0:	(bad)  
   1400333f1:	pop    rsp
   1400333f2:	add    BYTE PTR [rax],al
   1400333f4:	push   0xffffffff9c00005c
   1400333f9:	rol    BYTE PTR [rdx],0x0
   1400333fc:	push   0x6c00005c
   140033401:	pop    rbp
   140033402:	add    BYTE PTR [rax],al
   140033404:	mov    al,al
   140033406:	add    al,BYTE PTR [rax]
   140033408:	ins    BYTE PTR es:[rdi],dx
   140033409:	pop    rbp
   14003340a:	add    BYTE PTR [rax],al
   14003340c:	out    0x5f,eax
   14003340e:	add    BYTE PTR [rax],al
   140033410:	push   0xffffffffe70002c0
   140033415:	pop    rdi
   140033416:	add    BYTE PTR [rax],al
   140033418:	test   BYTE PTR [rdx+0x0],ah
   14003341b:	add    BYTE PTR [rax-0x40],cl
   14003341e:	add    al,BYTE PTR [rax]
   140033420:	test   BYTE PTR [rdx+0x0],ah
   140033423:	add    BYTE PTR [rdx],dl
   140033425:	movsxd eax,DWORD PTR [rax]
   140033427:	add    BYTE PTR [rax],bh
   140033429:	rol    BYTE PTR [rdx],0x0
   14003342c:	adc    ah,BYTE PTR [rbx+0x0]
   14003342f:	add    BYTE PTR [rbx],bh
   140033431:	movsxd eax,DWORD PTR [rax]
   140033433:	add    BYTE PTR [rax],ch
   140033435:	rol    BYTE PTR [rdx],0x0
   140033438:	rex movsxd eax,DWORD PTR [rax]
   14003343b:	add    BYTE PTR [rbx+riz*2+0x0],dl
   14003343f:	add    BYTE PTR [rcx+rax*8],dl
   140033442:	add    al,BYTE PTR [rax]
   140033444:	push   rsp
   140033445:	movsxd eax,DWORD PTR [rax]
   140033447:	add    BYTE PTR [rip+0xffffffffe8000072],al        # 0x1280334bf
   14003344d:	rol    BYTE PTR [rdx],0x0
   140033450:	add    eax,0x9c000072
   140033455:	jb     0x140033457
   140033457:	add    al,dl
   140033459:	rol    BYTE PTR [rdx],0x0
   14003345c:	pushf  
   14003345d:	jb     0x14003345f
   14003345f:	add    ch,al
   140033461:	jb     0x140033463
   140033463:	add    al,al
   140033465:	rol    BYTE PTR [rdx],0x0
   140033468:	shl    BYTE PTR [rdx+0x0],1
   14003346b:	add    BYTE PTR [rax],bh
   14003346d:	jae    0x14003346f
   14003346f:	add    BYTE PTR [rcx+rax*8+0x2],al
   140033473:	add    BYTE PTR [rax],bh
   140033475:	jae    0x140033477
   140033477:	add    BYTE PTR [rax+0x30000073],bh
   14003347d:	rol    DWORD PTR [rdx],0x0
   140033480:	mov    eax,0xd2000073
   140033485:	jae    0x140033487
   140033487:	add    BYTE PTR [rax],ah
   140033489:	rol    DWORD PTR [rdx],0x0
   14003348c:	loopne 0x140033501
   14003348e:	add    BYTE PTR [rax],al
   140033490:	or     edi,DWORD PTR [rsi+0x0]
   140033493:	add    BYTE PTR [rax-0x3f],bl
   140033496:	add    al,BYTE PTR [rax]
   140033498:	adc    BYTE PTR [rsi+0x0],bh
   14003349b:	add    BYTE PTR [rip+0xffffffffe400007e],bl        # 0x12403351f
   1400334a1:	rol    DWORD PTR [rdx],0x0
   1400334a4:	sbb    eax,0x2200007e
   1400334a9:	jle    0x1400334ab
   1400334ab:	add    al,dl
   1400334ad:	rol    DWORD PTR [rdx],0x0
   1400334b0:	and    bh,BYTE PTR [rsi+0x0]
   1400334b3:	add    BYTE PTR [rdx+0x7f],cl
   1400334b6:	add    BYTE PTR [rax],al
   1400334b8:	mov    eax,0x4a0002c1
   1400334bd:	jg     0x1400334bf
   1400334bf:	add    ch,ah
   1400334c1:	jg     0x1400334c3
   1400334c3:	add    BYTE PTR [rax-0x1afffd3f],ah
   1400334c9:	jg     0x1400334cb
   1400334cb:	add    dh,dh
   1400334cd:	jg     0x1400334cf
   1400334cf:	add    BYTE PTR [rax-0x9fffd3f],dl
   1400334d5:	jg     0x1400334d7
   1400334d7:	add    BYTE PTR [rax],ch
   1400334d9:	add    BYTE PTR [rax],0x0
   1400334dc:	add    cl,0x2
   1400334df:	add    BYTE PTR [rax],ch
   1400334e1:	add    BYTE PTR [rax],0x0
   1400334e4:	push   rsi
   1400334e5:	add    BYTE PTR [rax],0x0
   1400334e8:	jo     0x1400334ab
   1400334ea:	add    al,BYTE PTR [rax]
   1400334ec:	(bad)  
   1400334ed:	add    BYTE PTR [rax],0x0
   1400334f0:	rex (bad) 
   1400334f2:	add    BYTE PTR [rax],al
   1400334f4:	lock rol DWORD PTR [rdx],0x0
   1400334f8:	rex (bad) 
   1400334fa:	add    BYTE PTR [rax],al
   1400334fc:	cmc    
   1400334fd:	(bad)  
   1400334fe:	add    BYTE PTR [rax],al
   140033500:	sub    dl,al
   140033502:	add    al,BYTE PTR [rax]
   140033504:	cmc    
   140033505:	(bad)  
   140033506:	add    BYTE PTR [rax],al
   140033508:	jg     0x14003348e
   14003350a:	add    BYTE PTR [rax],al
   14003350c:	adc    dl,al
   14003350e:	add    al,BYTE PTR [rax]
   140033510:	jg     0x140033496
   140033512:	add    BYTE PTR [rax],al
   140033514:	jbe    0x14003349b
   140033516:	add    BYTE PTR [rax],al
   140033518:	add    dl,al
   14003351a:	add    al,BYTE PTR [rax]
   14003351c:	add    BYTE PTR [rbp-0x7a650000],0x0
   140033523:	add    BYTE PTR [rdx+rax*8-0x7a64fffe],al
   14003352a:	add    BYTE PTR [rax],al
   14003352c:	push   rsi
   14003352d:	xchg   BYTE PTR [rax],al
   14003352f:	add    BYTE PTR [rax-0x3e],dh
   140033532:	add    al,BYTE PTR [rax]
   140033534:	push   rsi
   140033535:	xchg   BYTE PTR [rax],al
   140033537:	add    dl,ah
   140033539:	sahf   
   14003353a:	add    BYTE PTR [rax],al
   14003353c:	pop    rsp
   14003353d:	ret    0x2
   140033540:	loop   0x1400334e0
   140033542:	add    BYTE PTR [rax],al
   140033544:	lock sahf 
   140033546:	add    BYTE PTR [rax],al
   140033548:	rex.WR ret 0x2
   14003354c:	lock sahf 
   14003354e:	add    BYTE PTR [rax],al
   140033550:	(bad)  
   140033551:	lahf   
   140033552:	add    BYTE PTR [rax],al
   140033554:	cmp    al,0xc2
   140033556:	add    al,BYTE PTR [rax]
   140033558:	(bad)  
   140033559:	lahf   
   14003355a:	add    BYTE PTR [rax],al
   14003355c:	fwait
   14003355d:	lahf   
   14003355e:	add    BYTE PTR [rax],al
   140033560:	rol    dl,1
   140033562:	add    al,BYTE PTR [rax]
   140033564:	fwait
   140033565:	lahf   
   140033566:	add    BYTE PTR [rax],al
   140033568:	adc    ah,BYTE PTR [rbx-0x3d440000]
   14003356e:	add    al,BYTE PTR [rax]
   140033570:	adc    ah,BYTE PTR [rbx-0x5c730000]
   140033576:	add    BYTE PTR [rax],al
   140033578:	lods   al,BYTE PTR ds:[rsi]
   140033579:	ret    0x2
   14003357c:	lea    esp,[rbx-0x5c660000]
   140033582:	add    BYTE PTR [rax],al
   140033584:	cwde   
   140033585:	ret    0x2
   140033588:	movabs al,ds:0xc0000a4cd0000a3
   140033591:	ret    
   140033592:	add    al,BYTE PTR [rax]
   140033594:	int    0xa4
   140033596:	add    BYTE PTR [rax],al
   140033598:	xchg   BYTE PTR [rbp-0x3d0c0000],ch
   14003359e:	add    al,BYTE PTR [rax]
   1400335a0:	xchg   BYTE PTR [rbp-0x51070000],ch
   1400335a6:	add    BYTE PTR [rax],al
   1400335a8:	in     al,0xc2
   1400335aa:	add    al,BYTE PTR [rax]
   1400335ac:	add    BYTE PTR [rdi-0x4c0c0000],ch
   1400335b2:	add    BYTE PTR [rax],al
   1400335b4:	and    bl,al
   1400335b6:	add    al,BYTE PTR [rax]
   1400335b8:	add    BYTE PTR [rax+rax*1+0xc16d00],dh
   1400335bf:	add    BYTE PTR [rax],bh
   1400335c1:	ret    
   1400335c2:	add    al,BYTE PTR [rax]
   1400335c4:	jo     0x140033587
   1400335c6:	add    BYTE PTR [rax],al
   1400335c8:	movabs ds:0xa20002c3700000c2,al
   1400335d1:	ret    0x0
   1400335d4:	retf   0xcc
   1400335d7:	add    BYTE PTR [rax-0x3d],dl
   1400335da:	add    al,BYTE PTR [rax]
   1400335dc:	ror    ah,1
   1400335de:	add    BYTE PTR [rax],al
   1400335e0:	mov    cs,ebp
   1400335e2:	add    BYTE PTR [rax],al
   1400335e4:	sub    ch,al
   1400335e6:	add    al,BYTE PTR [rax]
   1400335e8:	jo     0x1400335b9
   1400335ea:	add    BYTE PTR [rax],al
   1400335ec:	mov    bh,0xcf
   1400335ee:	add    BYTE PTR [rax],al
   1400335f0:	test   al,0xc3
   1400335f2:	add    al,BYTE PTR [rax]
   1400335f4:	ror    bh,0x0
   1400335f7:	add    dh,dh
   1400335f9:	iret   
   1400335fa:	add    BYTE PTR [rax],al
   1400335fc:	mov    al,0xc3
   1400335fe:	add    al,BYTE PTR [rax]
   140033600:	add    al,dl
   140033602:	add    BYTE PTR [rax],al
   140033604:	rol    BYTE PTR ss:[rax],1
   140033607:	add    BYTE PTR [rax+0x400002c3],dh
   14003360d:	rol    BYTE PTR [rax],1
   14003360f:	add    BYTE PTR [rdi-0x47ffff30],cl
   140033615:	ret    
   140033616:	add    al,BYTE PTR [rax]
   140033618:	mov    al,0xd1
   14003361a:	add    BYTE PTR [rax],al
   14003361c:	int3   
   14003361d:	rol    DWORD PTR [rax],1
   14003361f:	add    BYTE PTR [rax-0x2ffffd3d],dh
   140033625:	rol    DWORD PTR [rax],1
   140033627:	add    cl,bh
   140033629:	rol    DWORD PTR [rax],1
   14003362b:	add    BYTE PTR [rax-0x2ffffd3d],dh
   140033631:	rol    BYTE PTR [rax],cl
   140033633:	add    ah,ch
   140033635:	rol    BYTE PTR [rax],cl
   140033637:	add    BYTE PTR [rax-0xffffd3d],dh
   14003363d:	rol    BYTE PTR [rax],cl
   14003363f:	add    BYTE PTR [rsi],ah
   140033641:	rol    DWORD PTR [rax],cl
   140033643:	add    BYTE PTR [rax+0x300002c3],dh
   140033649:	rol    DWORD PTR [rax],cl
   14003364b:	add    BYTE PTR [rbx+rdx*8+0x0],cl
   14003364f:	add    BYTE PTR [rax-0x6ffffd3d],dh
   140033655:	rol    DWORD PTR [rax],cl
   140033657:	add    BYTE PTR [rbx+rdx*8-0x3c500000],ch
   14003365e:	add    al,BYTE PTR [rax]
   140033660:	and    ah,dl
   140033662:	add    BYTE PTR [rax],al
   140033664:	addr32 (bad) 
   140033666:	add    BYTE PTR [rax],al
   140033668:	test   al,0xc3
   14003366a:	add    al,BYTE PTR [rax]
   14003366c:	jo     0x140033644
   14003366e:	add    BYTE PTR [rax],al
   140033670:	mov    esi,ss
   140033672:	add    BYTE PTR [rax],al
   140033674:	mov    al,0xc3
   140033676:	add    al,BYTE PTR [rax]
   140033678:	(bad)  
   140033679:	fiadd  DWORD PTR [rax]
   14003367b:	add    BYTE PTR [rdi-0x57ffff26],ah
   140033681:	ret    
   140033682:	add    al,BYTE PTR [rax]
   140033684:	lock fiadd DWORD PTR [rax]
   140033687:	add    BYTE PTR [rdi],dh
   140033689:	fild   DWORD PTR [rax]
   14003368b:	add    BYTE PTR [rax-0x7ffffd3d],ch
   140033691:	fadd   QWORD PTR [rax]
   140033693:	add    BYTE PTR [rsp+rbx*8-0x3c500000],bl
   14003369a:	add    al,BYTE PTR [rax]
   14003369c:	movabs al,ds:0xb00000dd160000dc
   1400336a5:	ret    
   1400336a6:	add    al,BYTE PTR [rax]
   1400336a8:	jo     0x140033689
   1400336aa:	add    BYTE PTR [rax],al
   1400336ac:	mov    bh,0xdf
   1400336ae:	add    BYTE PTR [rax],al
   1400336b0:	test   al,0xc3
   1400336b2:	add    al,BYTE PTR [rax]
   1400336b4:	rcr    bh,0x0
   1400336b7:	add    BYTE PTR [rsi],bl
   1400336b9:	loopne 0x1400336bb
   1400336bb:	add    BYTE PTR [rax+0x200002c3],ch
   1400336c1:	loopne 0x1400336c3
   1400336c3:	add    BYTE PTR [rsi-0x20],bh
   1400336c6:	add    BYTE PTR [rax],al
   1400336c8:	test   al,0xc3
   1400336ca:	add    al,BYTE PTR [rax]
   1400336cc:	and    dl,0x0
   1400336cf:	add    bl,dl
   1400336d1:	loop   0x1400336d3
   1400336d3:	add    BYTE PTR [rax-0x1ffffd3d],dh
   1400336d9:	loop   0x1400336db
   1400336db:	add    BYTE PTR [rbx],dh
   1400336dd:	jrcxz  0x1400336df
   1400336df:	add    BYTE PTR [rax+0x400002c3],dh
   1400336e5:	jrcxz  0x1400336e7
   1400336e7:	add    BYTE PTR [rbx+riz*8+0x0],bl
   1400336eb:	add    BYTE PTR [rax+0x600002c3],dh
   1400336f1:	jrcxz  0x1400336f3
   1400336f3:	add    BYTE PTR [rdi-0x47ffff1d],ch
   1400336f9:	ret    
   1400336fa:	add    al,BYTE PTR [rax]
   1400336fc:	loopne 0x1400336e2
   1400336fe:	add    BYTE PTR [rax],al
   140033700:	(bad)  
   140033701:	in     eax,0x0
   140033703:	add    BYTE PTR [rax+0x100002c3],ch
   140033709:	out    0x0,al
   14003370b:	add    BYTE PTR [rsi+riz*8+0x0],bh
   14003370f:	add    BYTE PTR [rsi+rdi*4],bl
   140033712:	add    al,BYTE PTR [rax]
   140033714:	and    dh,0x0
   140033717:	add    BYTE PTR [rdi+riz*8-0x3c400000],cl
   14003371e:	add    al,BYTE PTR [rax]
   140033720:	nop
   140033721:	out    0x0,eax
   140033723:	add    BYTE PTR [rbx],cl
   140033725:	call   0xfe1f372a
   14003372a:	add    al,BYTE PTR [rax]
   14003372c:	add    dl,ch
   14003372e:	add    BYTE PTR [rax],al
   140033730:	imul   ebp,edx,0xc3b00000
   140033736:	add    al,BYTE PTR [rax]
   140033738:	mov    al,0xeb
   14003373a:	add    BYTE PTR [rax],al
   14003373c:	clc    
   14003373d:	jmp    0x14003373f
   14003373f:	add    BYTE PTR [rax+0x2c3],dh
   140033745:	in     al,dx
   140033746:	add    BYTE PTR [rax],al
   140033748:	rex.W in al,dx
   14003374a:	add    BYTE PTR [rax],al
   14003374c:	mov    al,0xc3
   14003374e:	add    al,BYTE PTR [rax]
   140033750:	push   rax
   140033751:	in     al,dx
   140033752:	add    BYTE PTR [rax],al
   140033754:	adc    al,0xed
   140033756:	add    BYTE PTR [rax],al
   140033758:	mov    al,0xc3
   14003375a:	add    al,BYTE PTR [rax]
   14003375c:	and    ch,ch
   14003375e:	add    BYTE PTR [rax],al
   140033760:	pushf  
   140033761:	out    dx,al
   140033762:	add    BYTE PTR [rax],al
   140033764:	clc    
   140033765:	ret    
   140033766:	add    al,BYTE PTR [rax]
   140033768:	pushf  
   140033769:	out    dx,al
   14003376a:	add    BYTE PTR [rax],al
   14003376c:	sbb    al,dh
   14003376e:	add    BYTE PTR [rax],al
   140033770:	in     al,0xc3
   140033772:	add    al,BYTE PTR [rax]
   140033774:	sbb    al,dh
   140033776:	add    BYTE PTR [rax],al
   140033778:	mov    ?,eax
   14003377a:	add    BYTE PTR [rax],al
   14003377c:	(bad)  
   14003377d:	ret    
   14003377e:	add    al,BYTE PTR [rax]
   140033780:	nop
   140033781:	lock add BYTE PTR [rax],al
   140033784:	imul   esi,ecx,0x0
   140033787:	add    BYTE PTR [rsp+rax*8],dl
   14003378a:	add    al,BYTE PTR [rax]
   14003378c:	jo     0x14003377f
   14003378e:	add    BYTE PTR [rax],al
   140033790:	ins    BYTE PTR es:[rdi],dx
   140033791:	repnz add BYTE PTR [rax],al
   140033794:	mov    al,0xc3
   140033796:	add    al,BYTE PTR [rax]
   140033798:	jo     0x14003378c
   14003379a:	add    BYTE PTR [rax],al
   14003379c:	(bad)  
   14003379d:	repnz add BYTE PTR [rax],al
   1400337a0:	mov    al,0xc3
   1400337a2:	add    al,BYTE PTR [rax]
   1400337a4:	loopne 0x140033798
   1400337a6:	add    BYTE PTR [rax],al
   1400337a8:	xor    ebx,esi
   1400337aa:	add    BYTE PTR [rax],al
   1400337ac:	adc    al,cl
   1400337ae:	add    al,BYTE PTR [rax]
   1400337b0:	rex
   1400337b1:	repz add BYTE PTR [rax],al
   1400337b4:	cmp    al,0x67
   1400337b6:	add    DWORD PTR [rax],eax
   1400337b8:	sub    ah,al
   1400337ba:	add    al,BYTE PTR [rax]
   1400337bc:	rex
   1400337bd:	add    DWORD PTR [eax],eax
   1400337c0:	push   rax
   1400337c1:	add    DWORD PTR [eax],eax
   1400337c4:	mov    ah,al
   1400337c6:	add    al,BYTE PTR [rax]
   1400337c8:	push   rax
   1400337c9:	add    DWORD PTR [eax],eax
   1400337cc:	pop    rsp
   1400337cd:	add    DWORD PTR [eax],eax
   1400337d0:	je     0x140033796
   1400337d2:	add    al,BYTE PTR [rax]
   1400337d4:	pop    rsp
   1400337d5:	add    DWORD PTR [eax],eax
   1400337d8:	xchg   ebx,eax
   1400337d9:	add    DWORD PTR [eax],eax
   1400337dc:	(bad)  
   1400337dd:	(bad)
   1400337e1:	add    DWORD PTR [eax],eax
   1400337e4:	movabs ds:0xa20002c450000167,al
   1400337ed:	add    DWORD PTR [eax],eax
   1400337f0:	test   al,0x67
   1400337f2:	add    DWORD PTR [rax],eax
   1400337f4:	(bad)
   1400337f9:	add    DWORD PTR [eax],eax
   1400337fc:	fldenv [rdi+0x1]
   1400337ff:	add    BYTE PTR [rax-0x26fffd3d],ch
   140033805:	add    DWORD PTR [eax],eax
   140033808:	cmp    eax,0xa8000168
   14003380d:	(bad)
   140033811:	push   0x6ad20001
   140033816:	add    DWORD PTR [rax],eax
   140033818:	nop
   140033819:	(bad)
   14003381d:	imul   eax,DWORD PTR [rcx],0x0
   140033820:	lahf   
   140033821:	imul   eax,DWORD PTR [rcx],0x0
   140033824:	sub    ch,al
   140033826:	add    al,BYTE PTR [rax]
   140033828:	movabs al,ds:0x4400016c0d00016b
   140033831:	mov    edx,0x6c100002
   140033836:	add    DWORD PTR [rax],eax
   140033838:	sub    eax,0x1400016c
   14003383d:	mov    esi,0x6c2d0002
   140033842:	add    DWORD PTR [rax],eax
   140033844:	mov    ch,BYTE PTR [rcx+rax*1+0x0]
   140033848:	int3   
   140033849:	(bad)
   14003384d:	ins    BYTE PTR es:[rdi],dx
   14003384e:	add    DWORD PTR [rax],eax
   140033850:	(bad)  
   140033851:	ins    BYTE PTR es:[rdi],dx
   140033852:	add    DWORD PTR [rax],eax
   140033854:	mov    esp,0x900002c4
   140033859:	ins    BYTE PTR es:[rdi],dx
   14003385a:	add    DWORD PTR [rax],eax
   14003385c:	xchg   ebp,eax
   14003385d:	ins    DWORD PTR es:[rdi],dx
   14003385e:	add    DWORD PTR [rax],eax
   140033860:	adc    al,0xc4
   140033862:	add    al,BYTE PTR [rax]
   140033864:	movabs al,ds:0x1c00016e0e00016d
   14003386d:	mov    esi,0x6e100002
   140033872:	add    DWORD PTR [rax],eax
   140033874:	rex.R outs dx,BYTE PTR ds:[rsi]
   140033876:	add    DWORD PTR [rax],eax
   140033878:	mov    al,0xc3
   14003387a:	add    al,BYTE PTR [rax]
   14003387c:	push   rax
   14003387d:	outs   dx,BYTE PTR ds:[rsi]
   14003387e:	add    DWORD PTR [rax],eax
   140033880:	jo     0x1400338f0
   140033882:	add    DWORD PTR [rax],eax
   140033884:	and    ch,al
   140033886:	add    al,BYTE PTR [rax]
   140033888:	jo     0x1400338f8
   14003388a:	add    DWORD PTR [rax],eax
   14003388c:	fsubr  QWORD PTR [rsi+0x1]
   14003388f:	add    BYTE PTR [rax*8+0x6edc0002],cl
   140033896:	add    DWORD PTR [rax],eax
   140033898:	out    0x6e,al
   14003389a:	add    DWORD PTR [rax],eax
   14003389c:	clc    
   14003389d:	(bad)
   1400338a1:	outs   dx,BYTE PTR ds:[rsi]
   1400338a2:	add    DWORD PTR [rax],eax
   1400338a4:	jmp    0x140033914
   1400338a6:	add    DWORD PTR [rax],eax
   1400338a8:	call   0x150033b71
   1400338ad:	jg     0x1400338b0
   1400338af:	add    dh,ch
   1400338b1:	jg     0x1400338b4
   1400338b3:	add    BYTE PTR [rsi+rdi*4],bl
   1400338b6:	add    al,BYTE PTR [rax]
   1400338b8:	add    BYTE PTR [rax-0x7eefffff],al
   1400338be:	add    DWORD PTR [rax],eax
   1400338c0:	sub    ch,al
   1400338c2:	add    al,BYTE PTR [rax]
   1400338c4:	movabs al,ds:0x1400018240000181
   1400338cd:	mov    esi,0x82b00002
   1400338d2:	add    DWORD PTR [rax],eax
   1400338d4:	ins    DWORD PTR es:[rdi],dx
   1400338d5:	add    DWORD PTR [rcx],0x0
   1400338d8:	cmp    al,0xc5
   1400338da:	add    al,BYTE PTR [rax]
   1400338dc:	jo     0x140033861
   1400338de:	add    DWORD PTR [rax],eax
   1400338e0:	adc    DWORD PTR [rcx+rax*1+0x2c54400],eax
   1400338e7:	add    BYTE PTR [rax],ah
   1400338e9:	test   BYTE PTR [rcx],al
   1400338eb:	add    BYTE PTR [rdi],bh
   1400338ed:	test   BYTE PTR [rcx],al
   1400338ef:	add    BYTE PTR [rax+0x700002c3],dh
   1400338f5:	test   BYTE PTR [rcx],al
   1400338f7:	add    BYTE PTR [rdi],dl
   1400338f9:	test   DWORD PTR [rcx],eax
   1400338fb:	add    BYTE PTR [rbp+rax*8+0x2],cl
   1400338ff:	add    BYTE PTR [rax],ah
   140033901:	test   DWORD PTR [rcx],eax
   140033903:	add    bh,al
   140033905:	test   DWORD PTR [rcx],eax
   140033907:	add    BYTE PTR [rbp+rax*8+0x2],cl
   14003390b:	add    BYTE PTR [rax+0x7000186],dl
   140033911:	xchg   DWORD PTR [rcx],eax
   140033913:	add    BYTE PTR [rbp+rax*8-0x78f8fffe],cl
   14003391a:	add    DWORD PTR [rax],eax
   14003391c:	xchg   edx,eax
   14003391d:	xchg   DWORD PTR [rcx],eax
   14003391f:	add    BYTE PTR [rax-0x3b],dh
   140033922:	add    al,BYTE PTR [rax]
   140033924:	xchg   edx,eax
   140033925:	xchg   DWORD PTR [rcx],eax
   140033927:	add    BYTE PTR [rbp+0x60000187],ch
   14003392d:	(bad)
   140033930:	mov    al,0x87
   140033932:	add    DWORD PTR [rax],eax
   140033934:	cmc    
   140033935:	xchg   DWORD PTR [rcx],eax
   140033937:	add    ah,al
   140033939:	(bad)
   14003393c:	cmc    
   14003393d:	xchg   DWORD PTR [rcx],eax
   14003393f:	add    BYTE PTR [rdx-0x53fffe78],ah
   140033945:	(bad)
   140033948:	movabs ds:0x9c000188c0000188,al
   140033951:	(bad)
   140033954:	ror    BYTE PTR [rax-0x7384ffff],0x1
   14003395b:	add    ah,dl
   14003395d:	(bad)
   140033960:	or     BYTE PTR [rcx+rax*1+0x18cd300],0x0
   140033968:	add    al,0xc6
   14003396a:	add    al,BYTE PTR [rax]
   14003396c:	ror    DWORD PTR [rcx+rax*1+0x18df000],cl
   140033973:	add    al,dh
   140033975:	(bad)
   140033978:	lock lea eax,[rcx]
   14003397b:	add    BYTE PTR [rax],dl
   14003397d:	cwde   
   14003397e:	add    DWORD PTR [rax],eax
   140033980:	loopne 0x140033947
   140033982:	add    al,BYTE PTR [rax]
   140033984:	adc    BYTE PTR [rax-0x67cbffff],bl
   14003398a:	add    DWORD PTR [rax],eax
   14003398c:	mov    BYTE PTR fs:[rdx],0x0
   140033990:	xor    al,0x98
   140033992:	add    DWORD PTR [rax],eax
   140033994:	ins    BYTE PTR es:[rdi],dx
   140033995:	lods   eax,DWORD PTR ds:[rsi]
   140033996:	add    DWORD PTR [rax],eax
   140033998:	rex mov BYTE PTR [rdx],0x0
   14003399c:	ins    BYTE PTR es:[rdi],dx
   14003399d:	lods   eax,DWORD PTR ds:[rsi]
   14003399e:	add    DWORD PTR [rax],eax
   1400339a0:	jrcxz  0x140033950
   1400339a2:	add    DWORD PTR [rax],eax
   1400339a4:	sbb    al,0xc6
   1400339a6:	add    al,BYTE PTR [rax]
   1400339a8:	lock scas al,BYTE PTR es:[rdi]
   1400339aa:	add    DWORD PTR [rax],eax
   1400339ac:	pop    rbx
   1400339ad:	mov    al,0x1
   1400339af:	add    BYTE PTR [rax],ch
   1400339b1:	(bad)
   1400339b4:	(bad)  
   1400339b5:	mov    al,0x1
   1400339b7:	add    BYTE PTR [rax-0x4ffffe50],ah
   1400339bd:	mov    BYTE PTR [rdx],0x0
   1400339c0:	movabs al,ds:0x900001ba340001b0
   1400339c9:	mov    BYTE PTR [rdx],0x0
   1400339cc:	xor    al,0xba
   1400339ce:	add    DWORD PTR [rax],eax
   1400339d0:	fnstcw WORD PTR [rdx-0x398fffff]
   1400339d6:	add    al,BYTE PTR [rax]
   1400339d8:	add    BYTE PTR [rbx-0x44dcffff],bh
   1400339de:	add    DWORD PTR [rax],eax
   1400339e0:	nop
   1400339e1:	iret   
   1400339e2:	add    al,BYTE PTR [rax]
   1400339e4:	and    edi,DWORD PTR [rbx-0x44a1ffff]
   1400339ea:	add    DWORD PTR [rax],eax
   1400339ec:	rol    dh,1
   1400339ee:	add    al,BYTE PTR [rax]
   1400339f0:	pop    rsi
   1400339f1:	mov    ebx,0xbb780001
   1400339f6:	add    DWORD PTR [rax],eax
   1400339f8:	rol    dh,0x2
   1400339fb:	add    BYTE PTR [rax-0x46fffe45],al
   140033a01:	mov    ebx,0xc8100001
   140033a06:	add    al,BYTE PTR [rax]
   140033a08:	sar    BYTE PTR [rbx-0x4406ffff],0x1
   140033a0f:	add    BYTE PTR [rax],dl
   140033a11:	enter  0x2,0x0
   140033a15:	mov    esp,0xbc390001
   140033a1a:	add    DWORD PTR [rax],eax
   140033a1c:	adc    al,cl
   140033a1e:	add    al,BYTE PTR [rax]
   140033a20:	rex mov esp,0xbc790001
   140033a26:	add    DWORD PTR [rax],eax
   140033a28:	adc    al,cl
   140033a2a:	add    al,BYTE PTR [rax]
   140033a2c:	cmp    BYTE PTR [rcx+rax*1+0x1bcb900],0x0
   140033a34:	adc    al,cl
   140033a36:	add    al,BYTE PTR [rax]
   140033a38:	sar    BYTE PTR [rcx+rax*1+0x1bcf900],0x0
   140033a40:	adc    al,cl
   140033a42:	add    al,BYTE PTR [rax]
   140033a44:	add    BYTE PTR [rbp-0x42c6ffff],bh
   140033a4a:	add    DWORD PTR [rax],eax
   140033a4c:	adc    al,cl
   140033a4e:	add    al,BYTE PTR [rax]
   140033a50:	rex mov ebp,0xbd790001
   140033a56:	add    DWORD PTR [rax],eax
   140033a58:	adc    al,cl
   140033a5a:	add    al,BYTE PTR [rax]
   140033a5c:	cmp    BYTE PTR [rbp-0x425cffff],0x1
   140033a63:	add    BYTE PTR [rax-0x5cfffd31],dl
   140033a69:	mov    ebp,0xbe0f0001
   140033a6e:	add    DWORD PTR [rax],eax
   140033a70:	hlt    
   140033a71:	mov    BYTE PTR [rdx],0x0
   140033a74:	movsx  eax,BYTE PTR [rcx]
   140033a77:	add    BYTE PTR [rcx],ch
   140033a79:	mov    esi,0xc6e40001
   140033a7e:	add    al,BYTE PTR [rax]
   140033a80:	xor    BYTE PTR [rsi-0x41acffff],bh
   140033a86:	add    DWORD PTR [rax],eax
   140033a88:	nop
   140033a89:	iret   
   140033a8a:	add    al,BYTE PTR [rax]
   140033a8c:	push   rbx
   140033a8d:	mov    esi,0xbe8e0001
   140033a92:	add    DWORD PTR [rax],eax
   140033a94:	sbb    bh,al
   140033a96:	add    al,BYTE PTR [rax]
   140033a98:	mov    ?,WORD PTR [rsi-0x4157ffff]
   140033a9e:	add    DWORD PTR [rax],eax
   140033aa0:	or     bh,al
   140033aa2:	add    al,BYTE PTR [rax]
   140033aa4:	mov    al,0xbe
   140033aa6:	add    DWORD PTR [rax],eax
   140033aa8:	xlat   BYTE PTR ds:[rbx]
   140033aa9:	mov    esi,0xc7740001
   140033aae:	add    al,BYTE PTR [rax]
   140033ab0:	xlat   BYTE PTR ds:[rbx]
   140033ab1:	mov    esi,0xbee40001
   140033ab6:	add    DWORD PTR [rax],eax
   140033ab8:	(bad)  
   140033ab9:	mov    DWORD PTR [rdx],0x1bee400
   140033abf:	add    BYTE PTR [rax-0x41],ah
   140033ac2:	add    DWORD PTR [rax],eax
   140033ac4:	rex.WR mov QWORD PTR [rdx],0x1bf6000
   140033acb:	add    BYTE PTR [rbp-0x41],ah
   140033ace:	add    DWORD PTR [rax],eax
   140033ad0:	cmp    al,0xc7
   140033ad2:	add    al,BYTE PTR [rax]
   140033ad4:	gs mov edi,0xbf7f0001
   140033ada:	add    DWORD PTR [rax],eax
   140033adc:	sub    al,0xc7
   140033ade:	add    al,BYTE PTR [rax]
   140033ae0:	cmp    BYTE PTR [rdi-0x4046ffff],0x1
   140033ae7:	add    BYTE PTR [rax],dl
   140033ae9:	enter  0x2,0xc0
   140033aed:	mov    edi,0xbfe30001
   140033af2:	add    DWORD PTR [rax],eax
   140033af4:	nop
   140033af5:	iret   
   140033af6:	add    al,BYTE PTR [rax]
   140033af8:	jrcxz  0x140033ab9
   140033afa:	add    DWORD PTR [rax],eax
   140033afc:	rex.WRXB rol BYTE PTR [r9],0x0
   140033b00:	nop
   140033b01:	mov    DWORD PTR [rdx],0x1c04f00
   140033b07:	add    BYTE PTR [rcx-0x40],ch
   140033b0a:	add    DWORD PTR [rax],eax
   140033b0c:	add    bh,0x2
   140033b0f:	add    BYTE PTR [rax-0x40],dh
   140033b12:	add    DWORD PTR [rax],eax
   140033b14:	xchg   edi,eax
   140033b15:	rol    BYTE PTR [rcx],0x0
   140033b18:	nop
   140033b19:	iret   
   140033b1a:	add    al,BYTE PTR [rax]
   140033b1c:	xchg   edi,eax
   140033b1d:	rol    BYTE PTR [rcx],0x0
   140033b20:	xor    al,0xc1
   140033b22:	add    DWORD PTR [rax],eax
   140033b24:	mov    ah,0xc7
   140033b26:	add    al,BYTE PTR [rax]
   140033b28:	xor    al,0xc1
   140033b2a:	add    DWORD PTR [rax],eax
   140033b2c:	rex.WRX rol QWORD PTR [rcx],0x0
   140033b30:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140033b31:	mov    DWORD PTR [rdx],0x1c15000
   140033b37:	add    BYTE PTR [rbx-0x3f],dh
   140033b3a:	add    DWORD PTR [rax],eax
   140033b3c:	mov    eax,0x730002d1
   140033b41:	rol    DWORD PTR [rcx],0x0
   140033b44:	add    cl,0x1
   140033b47:	add    ah,bh
   140033b49:	mov    DWORD PTR [rdx],0x1c18000
   140033b4f:	add    ah,al
   140033b51:	rol    DWORD PTR [rcx],0x0
   140033b54:	call   0x104033e20
   140033b59:	rol    DWORD PTR [rcx],0x0
   140033b5c:	leave  
   140033b5d:	rol    DWORD PTR [rcx],0x0
   140033b60:	fadd   st,st(7)
   140033b62:	add    al,BYTE PTR [rax]
   140033b64:	leave  
   140033b65:	rol    DWORD PTR [rcx],0x0
   140033b68:	jrcxz  0x140033b2b
   140033b6a:	add    DWORD PTR [rax],eax
   140033b6c:	enter  0x2c7,0x0
   140033b70:	lock rol DWORD PTR [rcx],0x0
   140033b74:	sub    edx,eax
   140033b76:	add    DWORD PTR [rax],eax
   140033b78:	adc    al,cl
   140033b7a:	add    al,BYTE PTR [rax]
   140033b7c:	xor    dl,al
   140033b7e:	add    DWORD PTR [rax],eax
   140033b80:	imul   eax,edx,0xc8100001
   140033b86:	add    al,BYTE PTR [rax]
   140033b88:	jo     0x140033b4c
   140033b8a:	add    DWORD PTR [rax],eax
   140033b8c:	test   eax,0x100001c2
   140033b91:	enter  0x2,0xb0
   140033b95:	ret    0x1
   140033b98:	rol    edx,cl
   140033b9a:	add    DWORD PTR [rax],eax
   140033b9c:	nop
   140033b9d:	iret   
   140033b9e:	add    al,BYTE PTR [rax]
   140033ba0:	rol    edx,cl
   140033ba2:	add    DWORD PTR [rax],eax
   140033ba4:	(bad)  
   140033ba5:	ret    
   140033ba6:	add    DWORD PTR [rax],eax
   140033ba8:	sub    al,0xc8
   140033baa:	add    al,BYTE PTR [rax]
   140033bac:	(bad)  
   140033bad:	ret    
   140033bae:	add    DWORD PTR [rax],eax
   140033bb0:	pop    rcx
   140033bb1:	ret    
   140033bb2:	add    DWORD PTR [rax],eax
   140033bb4:	sbb    al,0xc8
   140033bb6:	add    al,BYTE PTR [rax]
   140033bb8:	(bad)  
   140033bb9:	ret    
   140033bba:	add    DWORD PTR [rax],eax
   140033bbc:	add    ebx,0x1
   140033bbf:	add    BYTE PTR [rax-0x7cfffd31],dl
   140033bc5:	ret    
   140033bc6:	add    DWORD PTR [rax],eax
   140033bc8:	mov    esi,0x500001c3
   140033bcd:	enter  0x2,0xbe
   140033bd1:	ret    
   140033bd2:	add    DWORD PTR [rax],eax
   140033bd4:	fadd   st,st(3)
   140033bd6:	add    DWORD PTR [rax],eax
   140033bd8:	rex enter 0x2,0xe0
   140033bdd:	ret    
   140033bde:	add    DWORD PTR [rax],eax
   140033be0:	add    eax,esp
   140033be2:	add    DWORD PTR [rax],eax
   140033be4:	nop
   140033be5:	iret   
   140033be6:	add    al,BYTE PTR [rax]
   140033be8:	add    eax,esp
   140033bea:	add    DWORD PTR [rax],eax
   140033bec:	outs   dx,DWORD PTR ds:[rsi]
   140033bed:	(bad)
   140033bf1:	enter  0x2,0x6f
   140033bf5:	(bad)
   140033bf9:	(bad)
   140033bfd:	enter  0x2,0x90
   140033c01:	(bad)
   140033c05:	(bad)
   140033c09:	iret   
   140033c0a:	add    al,BYTE PTR [rax]
   140033c0c:	mov    bl,0xc4
   140033c0e:	add    DWORD PTR [rax],eax
   140033c10:	out    dx,al
   140033c11:	(bad)
   140033c15:	enter  0x2,0xee
   140033c19:	(bad)
   140033c1d:	(bad)
   140033c20:	mov    al,cl
   140033c22:	add    al,BYTE PTR [rax]
   140033c24:	adc    ch,al
   140033c26:	add    DWORD PTR [rax],eax
   140033c28:	xor    eax,ebp
   140033c2a:	add    DWORD PTR [rax],eax
   140033c2c:	nop
   140033c2d:	iret   
   140033c2e:	add    al,BYTE PTR [rax]
   140033c30:	xor    eax,ebp
   140033c32:	add    DWORD PTR [rax],eax
   140033c34:	lahf   
   140033c35:	(bad)
   140033c38:	mov    esp,0x9f0002c8
   140033c3d:	(bad)
   140033c40:	mov    ecx,0xac0001c5
   140033c45:	enter  0x2,0xc0
   140033c49:	(bad)
   140033c4c:	jrcxz  0x140033c13
   140033c4e:	add    DWORD PTR [rax],eax
   140033c50:	mov    eax,0xe30002d1
   140033c55:	(bad)
   140033c58:	(bad)
   140033c5c:	add    al,0xc9
   140033c5e:	add    al,BYTE PTR [rax]
   140033c60:	(bad)
   140033c64:	xor    al,0xc6
   140033c66:	add    DWORD PTR [rax],eax
   140033c68:	lock enter 0x2,0x34
   140033c6d:	mov    BYTE PTR [rcx],0x0
   140033c70:	cmp    esi,eax
   140033c72:	add    DWORD PTR [rax],eax
   140033c74:	loopne 0x140033c3e
   140033c76:	add    al,BYTE PTR [rax]
   140033c78:	cmp    esi,eax
   140033c7a:	add    DWORD PTR [rax],eax
   140033c7c:	push   rbx
   140033c7d:	mov    BYTE PTR [rcx],0x0
   140033c80:	ror    al,1
   140033c82:	add    al,BYTE PTR [rax]
   140033c84:	(bad)  
   140033c85:	mov    BYTE PTR [rcx],0x0
   140033c88:	add    esi,0x1
   140033c8b:	add    BYTE PTR [rax-0x7cfffd31],dl
   140033c91:	mov    BYTE PTR [rcx],0x0
   140033c94:	mov    esi,0x280001c6
   140033c99:	leave  
   140033c9a:	add    al,BYTE PTR [rax]
   140033c9c:	mov    esi,0xd80001c6
   140033ca1:	mov    BYTE PTR [rcx],0x0
   140033ca4:	sbb    cl,cl
   140033ca6:	add    al,BYTE PTR [rax]
   140033ca8:	loopne 0x140033c70
   140033caa:	add    DWORD PTR [rax],eax
   140033cac:	add    eax,edi
   140033cae:	add    DWORD PTR [rax],eax
   140033cb0:	nop
   140033cb1:	iret   
   140033cb2:	add    al,BYTE PTR [rax]
   140033cb4:	add    eax,edi
   140033cb6:	add    DWORD PTR [rax],eax
   140033cb8:	mov    DWORD PTR ds:[rcx],0x2c94c00
   140033cbf:	add    BYTE PTR [rsi],bh
   140033cc1:	mov    DWORD PTR [rcx],0x1c75800
   140033cc7:	add    BYTE PTR [rcx+rcx*8],bh
   140033cca:	add    al,BYTE PTR [rax]
   140033ccc:	(bad)  
   140033ccd:	mov    DWORD PTR [rcx],0x1c78300
   140033cd3:	add    BYTE PTR [rax-0x7cfffd31],dl
   140033cd9:	mov    DWORD PTR [rcx],0x1c7be00
   140033cdf:	add    BYTE PTR [rax-0x37],dh
   140033ce2:	add    al,BYTE PTR [rax]
   140033ce4:	mov    esi,0xd80001c7
   140033ce9:	mov    DWORD PTR [rcx],0x2c96000
   140033cef:	add    al,ah
   140033cf1:	mov    DWORD PTR [rcx],0x1c80300
   140033cf7:	add    BYTE PTR [rax+0x30002cf],dl
   140033cfd:	enter  0x1,0x3e
   140033d01:	enter  0x1,0x94
   140033d05:	leave  
   140033d06:	add    al,BYTE PTR [rax]
   140033d08:	ds enter 0x1,0x58
   140033d0d:	enter  0x1,0x84
   140033d11:	leave  
   140033d12:	add    al,BYTE PTR [rax]
   140033d14:	(bad)  
   140033d15:	enter  0x1,0x83
   140033d19:	enter  0x1,0x90
   140033d1d:	iret   
   140033d1e:	add    al,BYTE PTR [rax]
   140033d20:	or     eax,0x1
   140033d23:	add    BYTE PTR [rsi-0x47fffe38],bh
   140033d29:	leave  
   140033d2a:	add    al,BYTE PTR [rax]
   140033d2c:	mov    esi,0xd80001c8
   140033d31:	enter  0x1,0xa8
   140033d35:	leave  
   140033d36:	add    al,BYTE PTR [rax]
   140033d38:	loopne 0x140033d02
   140033d3a:	add    DWORD PTR [rax],eax
   140033d3c:	add    ecx,ecx
   140033d3e:	add    DWORD PTR [rax],eax
   140033d40:	nop
   140033d41:	iret   
   140033d42:	add    al,BYTE PTR [rax]
   140033d44:	add    ecx,ecx
   140033d46:	add    DWORD PTR [rax],eax
   140033d48:	ds leave 
   140033d4a:	add    DWORD PTR [rax],eax
   140033d4c:	fmul   st(1),st
   140033d4e:	add    al,BYTE PTR [rax]
   140033d50:	ds leave 
   140033d52:	add    DWORD PTR [rax],eax
   140033d54:	pop    rax
   140033d55:	leave  
   140033d56:	add    DWORD PTR [rax],eax
   140033d58:	int3   
   140033d59:	leave  
   140033d5a:	add    al,BYTE PTR [rax]
   140033d5c:	(bad)  
   140033d5d:	leave  
   140033d5e:	add    DWORD PTR [rax],eax
   140033d60:	or     ecx,0x1
   140033d63:	add    BYTE PTR [rax-0x7cfffd31],dl
   140033d69:	leave  
   140033d6a:	add    DWORD PTR [rax],eax
   140033d6c:	mov    esi,0x1c9
   140033d71:	retf   0x2
   140033d74:	mov    esi,0xd80001c9
   140033d79:	leave  
   140033d7a:	add    DWORD PTR [rax],eax
   140033d7c:	lock leave 
   140033d7e:	add    al,BYTE PTR [rax]
   140033d80:	loopne 0x140033d4b
   140033d82:	add    DWORD PTR [rax],eax
   140033d84:	add    ecx,edx
   140033d86:	add    DWORD PTR [rax],eax
   140033d88:	nop
   140033d89:	iret   
   140033d8a:	add    al,BYTE PTR [rax]
   140033d8c:	add    ecx,edx
   140033d8e:	add    DWORD PTR [rax],eax
   140033d90:	ds retf 0x1
   140033d94:	and    al,0xca
   140033d96:	add    al,BYTE PTR [rax]
   140033d98:	ds retf 0x1
   140033d9c:	pop    rax
   140033d9d:	retf   0x1
   140033da0:	adc    al,0xca
   140033da2:	add    al,BYTE PTR [rax]
   140033da4:	(bad)  
   140033da5:	retf   0x1
   140033da8:	or     edx,0x1
   140033dab:	add    BYTE PTR [rax-0x7cfffd31],dl
   140033db1:	retf   0x1
   140033db4:	mov    esi,0x480001ca
   140033db9:	retf   0x2
   140033dbc:	mov    esi,0xd80001ca
   140033dc1:	retf   0x1
   140033dc4:	cmp    dl,cl
   140033dc6:	add    al,BYTE PTR [rax]
   140033dc8:	loopne 0x140033d94
   140033dca:	add    DWORD PTR [rax],eax
   140033dcc:	add    ecx,ebx
   140033dce:	add    DWORD PTR [rax],eax
   140033dd0:	nop
   140033dd1:	iret   
   140033dd2:	add    al,BYTE PTR [rax]
   140033dd4:	add    ecx,ebx
   140033dd6:	add    DWORD PTR [rax],eax
   140033dd8:	ds retf 
   140033dda:	add    DWORD PTR [rax],eax
   140033ddc:	ins    BYTE PTR es:[rdi],dx
   140033ddd:	retf   0x2
   140033de0:	ds retf 
   140033de2:	add    DWORD PTR [rax],eax
   140033de4:	pop    rax
   140033de5:	retf   
   140033de6:	add    DWORD PTR [rax],eax
   140033de8:	pop    rsp
   140033de9:	retf   0x2
   140033dec:	(bad)  
   140033ded:	retf   
   140033dee:	add    DWORD PTR [rax],eax
   140033df0:	or     ebx,0x1
   140033df3:	add    BYTE PTR [rax-0x7cfffd31],dl
   140033df9:	retf   
   140033dfa:	add    DWORD PTR [rax],eax
   140033dfc:	mov    esi,0x900001cb
   140033e01:	retf   0x2
   140033e04:	mov    esi,0xd80001cb
   140033e09:	retf   
   140033e0a:	add    DWORD PTR [rax],eax
   140033e0c:	or     dl,0x2
   140033e0f:	add    al,ah
   140033e11:	retf   
   140033e12:	add    DWORD PTR [rax],eax
   140033e14:	add    ecx,esp
   140033e16:	add    DWORD PTR [rax],eax
   140033e18:	nop
   140033e19:	iret   
   140033e1a:	add    al,BYTE PTR [rax]
   140033e1c:	add    ecx,esp
   140033e1e:	add    DWORD PTR [rax],eax
   140033e20:	outs   dx,DWORD PTR ds:[rsi]
   140033e21:	int3   
   140033e22:	add    DWORD PTR [rax],eax
   140033e24:	mov    ah,0xca
   140033e26:	add    al,BYTE PTR [rax]
   140033e28:	outs   dx,DWORD PTR ds:[rsi]
   140033e29:	int3   
   140033e2a:	add    DWORD PTR [rax],eax
   140033e2c:	mov    esp,ecx
   140033e2e:	add    DWORD PTR [rax],eax
   140033e30:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140033e31:	retf   0x2
   140033e34:	nop
   140033e35:	int3   
   140033e36:	add    DWORD PTR [rax],eax
   140033e38:	mov    bh,0xcc
   140033e3a:	add    DWORD PTR [rax],eax
   140033e3c:	nop
   140033e3d:	iret   
   140033e3e:	add    al,BYTE PTR [rax]
   140033e40:	mov    bh,0xcc
   140033e42:	add    DWORD PTR [rax],eax
   140033e44:	push   rsp
   140033e45:	int    0x1
   140033e47:	add    al,bl
   140033e49:	retf   0x2
   140033e4c:	push   rsp
   140033e4d:	int    0x1
   140033e4f:	add    BYTE PTR [rsi-0x33],ch
   140033e52:	add    DWORD PTR [rax],eax
   140033e54:	enter  0x2ca,0x0
   140033e58:	jo     0x140033e27
   140033e5a:	add    DWORD PTR [rax],eax
   140033e5c:	xchg   ebx,eax
   140033e5d:	int    0x1
   140033e5f:	add    BYTE PTR [rax-0x6cfffd31],dl
   140033e65:	int    0x1
   140033e67:	add    bh,bh
   140033e69:	int    0x1
   140033e6b:	add    ah,bh
   140033e6d:	retf   0x2
   140033e70:	dec    ebp
   140033e72:	add    DWORD PTR [rax],eax
   140033e74:	sbb    esi,ecx
   140033e76:	add    DWORD PTR [rax],eax
   140033e78:	in     al,dx
   140033e79:	retf   0x2
   140033e7c:	and    dh,cl
   140033e7e:	add    DWORD PTR [rax],eax
   140033e80:	rex.XB (bad) 
   140033e82:	add    DWORD PTR [rax],eax
   140033e84:	nop
   140033e85:	iret   
   140033e86:	add    al,BYTE PTR [rax]
   140033e88:	rex.XB (bad) 
   140033e8a:	add    DWORD PTR [rax],eax
   140033e8c:	jle    0x140033e5c
   140033e8e:	add    DWORD PTR [rax],eax
   140033e90:	and    bl,cl
   140033e92:	add    al,BYTE PTR [rax]
   140033e94:	jle    0x140033e64
   140033e96:	add    DWORD PTR [rax],eax
   140033e98:	cwde   
   140033e99:	(bad)  
   140033e9a:	add    DWORD PTR [rax],eax
   140033e9c:	adc    bl,cl
   140033e9e:	add    al,BYTE PTR [rax]
   140033ea0:	movabs al,ds:0xb80001cec30001ce
   140033ea9:	rol    DWORD PTR [rdx],1
   140033eab:	add    bl,al
   140033ead:	(bad)  
   140033eae:	add    DWORD PTR [rax],eax
   140033eb0:	ror    dh,1
   140033eb2:	add    DWORD PTR [rax],eax
   140033eb4:	push   0xffffffffd00002cb
   140033eb9:	(bad)  
   140033eba:	add    DWORD PTR [rax],eax
   140033ebc:	adc    al,0xcf
   140033ebe:	add    DWORD PTR [rax],eax
   140033ec0:	push   rsp
   140033ec1:	retf   
   140033ec2:	add    al,BYTE PTR [rax]
   140033ec4:	adc    al,0xcf
   140033ec6:	add    DWORD PTR [rax],eax
   140033ec8:	sbb    edi,ecx
   140033eca:	add    DWORD PTR [rax],eax
   140033ecc:	rex.R retf 
   140033ece:	add    al,BYTE PTR [rax]
   140033ed0:	sbb    edi,ecx
   140033ed2:	add    DWORD PTR [rax],eax
   140033ed4:	xor    ecx,edi
   140033ed6:	add    DWORD PTR [rax],eax
   140033ed8:	xor    al,0xcb
   140033eda:	add    al,BYTE PTR [rax]
   140033edc:	rex iret 
   140033ede:	add    DWORD PTR [rax],eax
   140033ee0:	movsxd ecx,edi
   140033ee2:	add    DWORD PTR [rax],eax
   140033ee4:	nop
   140033ee5:	iret   
   140033ee6:	add    al,BYTE PTR [rax]
   140033ee8:	movsxd ecx,edi
   140033eea:	add    DWORD PTR [rax],eax
   140033eec:	sahf   
   140033eed:	iret   
   140033eee:	add    DWORD PTR [rax],eax
   140033ef0:	mov    ebx,cs
   140033ef2:	add    al,BYTE PTR [rax]
   140033ef4:	sahf   
   140033ef5:	iret   
   140033ef6:	add    DWORD PTR [rax],eax
   140033ef8:	mov    eax,0x7c0001cf
   140033efd:	retf   
   140033efe:	add    al,BYTE PTR [rax]
   140033f00:	ror    bh,0x1
   140033f03:	add    bl,ah
   140033f05:	iret   
   140033f06:	add    DWORD PTR [rax],eax
   140033f08:	mov    eax,0xe30002d1
   140033f0d:	iret   
   140033f0e:	add    DWORD PTR [rax],eax
   140033f10:	lock iret 
   140033f12:	add    DWORD PTR [rax],eax
   140033f14:	(bad)  
   140033f15:	retf   
   140033f16:	add    al,BYTE PTR [rax]
   140033f18:	lock iret 
   140033f1a:	add    DWORD PTR [rax],eax
   140033f1c:	xor    al,0xd0
   140033f1e:	add    DWORD PTR [rax],eax
   140033f20:	ror    bl,0x2
   140033f23:	add    BYTE PTR [rax+rdx*8],dh
   140033f26:	add    DWORD PTR [rax],eax
   140033f28:	cmp    eax,edx
   140033f2a:	add    DWORD PTR [rax],eax
   140033f2c:	mov    al,0xcb
   140033f2e:	add    al,BYTE PTR [rax]
   140033f30:	cmp    eax,edx
   140033f32:	add    DWORD PTR [rax],eax
   140033f34:	push   rbx
   140033f35:	rol    BYTE PTR [rcx],1
   140033f37:	add    BYTE PTR [rax+0x600002cb],ah
   140033f3d:	rol    BYTE PTR [rcx],1
   140033f3f:	add    BYTE PTR [rbx-0x6ffffe30],al
   140033f45:	iret   
   140033f46:	add    al,BYTE PTR [rax]
   140033f48:	adc    eax,0x1
   140033f4b:	add    BYTE PTR [rsi-0x7fffe30],bh
   140033f51:	retf   
   140033f52:	add    al,BYTE PTR [rax]
   140033f54:	mov    esi,0xd80001d0
   140033f59:	rol    BYTE PTR [rcx],1
   140033f5b:	add    al,ch
   140033f5d:	retf   
   140033f5e:	add    al,BYTE PTR [rax]
   140033f60:	loopne 0x140033f32
   140033f62:	add    DWORD PTR [rax],eax
   140033f64:	sbb    ecx,edx
   140033f66:	add    DWORD PTR [rax],eax
   140033f68:	adc    al,cl
   140033f6a:	add    al,BYTE PTR [rax]
   140033f6c:	and    cl,dl
   140033f6e:	add    DWORD PTR [rax],eax
   140033f70:	rex.XB rol DWORD PTR [r9],1
   140033f73:	add    BYTE PTR [rax+0x430002cf],dl
   140033f79:	rol    DWORD PTR [rcx],1
   140033f7b:	add    BYTE PTR [rsi-0x2f],bh
   140033f7e:	add    DWORD PTR [rax],eax
   140033f80:	sbb    al,0xcc
   140033f82:	add    al,BYTE PTR [rax]
   140033f84:	jle    0x140033f57
   140033f86:	add    DWORD PTR [rax],eax
   140033f88:	cwde   
   140033f89:	rol    DWORD PTR [rcx],1
   140033f8b:	add    BYTE PTR [rsp+rcx*8],cl
   140033f8e:	add    al,BYTE PTR [rax]
   140033f90:	movabs al,ds:0x900001d1c70001d1
   140033f99:	iret   
   140033f9a:	add    al,BYTE PTR [rax]
   140033f9c:	(bad)  
   140033f9d:	rol    DWORD PTR [rcx],1
   140033f9f:	add    BYTE PTR [rdx+rdx*8+0x1],ah
   140033fa3:	add    BYTE PTR [rax-0x34],al
   140033fa6:	add    al,BYTE PTR [rax]
   140033fa8:	rol    BYTE PTR fs:[rcx],cl
   140033fab:	add    BYTE PTR [rsi-0x2e],bh
   140033fae:	add    DWORD PTR [rax],eax
   140033fb0:	xor    ah,cl
   140033fb2:	add    al,BYTE PTR [rax]
   140033fb4:	adc    dl,0x1
   140033fb7:	add    BYTE PTR [rbx-0x6ffffe2e],ah
   140033fbd:	iret   
   140033fbe:	add    al,BYTE PTR [rax]
   140033fc0:	movabs ds:0x640001d30f0001d2,eax
   140033fc9:	int3   
   140033fca:	add    al,BYTE PTR [rax]
   140033fcc:	psrlq  mm0,QWORD PTR [rcx]
   140033fcf:	add    BYTE PTR [rcx],ch
   140033fd1:	rol    DWORD PTR [rcx],cl
   140033fd3:	add    BYTE PTR [rsp+rcx*8+0x2],dl
   140033fd7:	add    BYTE PTR [rax],dh
   140033fd9:	rol    DWORD PTR [rcx],cl
   140033fdb:	add    BYTE PTR [rbx-0x2d],dl
   140033fde:	add    DWORD PTR [rax],eax
   140033fe0:	nop
   140033fe1:	iret   
   140033fe2:	add    al,BYTE PTR [rax]
   140033fe4:	push   rbx
   140033fe5:	rol    DWORD PTR [rcx],cl
   140033fe7:	add    BYTE PTR [rdi-0x77fffe2d],bh
   140033fed:	int3   
   140033fee:	add    al,BYTE PTR [rax]
   140033ff0:	mov    edi,0xd90001d3
   140033ff5:	rol    DWORD PTR [rcx],cl
   140033ff7:	add    BYTE PTR [rax-0x34],bh
   140033ffa:	add    al,BYTE PTR [rax]
   140033ffc:	loopne 0x140033fd1
   140033ffe:	add    DWORD PTR [rax],eax
   140034000:	(bad)  
   140034001:	(bad)  
   140034002:	add    DWORD PTR [rax],eax
   140034004:	nop
   140034005:	iret   
   140034006:	add    al,BYTE PTR [rax]
   140034008:	(bad)  
   140034009:	(bad)  
   14003400a:	add    DWORD PTR [rax],eax
   14003400c:	(bad)  
   14003400d:	(bad)  
   14003400e:	add    DWORD PTR [rax],eax
   140034010:	lods   al,BYTE PTR ds:[rsi]
   140034011:	int3   
   140034012:	add    al,BYTE PTR [rax]
   140034014:	(bad)  
   140034015:	(bad)  
   140034016:	add    DWORD PTR [rax],eax
   140034018:	out    dx,eax
   140034019:	(bad)  
   14003401a:	add    DWORD PTR [rax],eax
   14003401c:	pushf  
   14003401d:	int3   
   14003401e:	add    al,BYTE PTR [rax]
   140034020:	lock (bad) 
   140034022:	add    DWORD PTR [rax],eax
   140034024:	(bad)  
   140034025:	(bad)  
   140034026:	add    DWORD PTR [rax],eax
   140034028:	nop
   140034029:	iret   
   14003402a:	add    al,BYTE PTR [rax]
   14003402c:	(bad)  
   14003402d:	(bad)  
   14003402e:	add    DWORD PTR [rax],eax
   140034030:	in     eax,0xd5
   140034032:	add    DWORD PTR [rax],eax
   140034034:	ror    ah,1
   140034036:	add    al,BYTE PTR [rax]
   140034038:	in     eax,0xd5
   14003403a:	add    DWORD PTR [rax],eax
   14003403c:	call   rbp
   14003403e:	add    DWORD PTR [rax],eax
   140034040:	ror    ah,0x2
   140034043:	add    BYTE PTR [rax],al
   140034045:	(bad)  
   140034046:	add    DWORD PTR [rax],eax
   140034048:	(bad)  
   140034049:	(bad)  
   14003404a:	add    DWORD PTR [rax],eax
   14003404c:	nop
   14003404d:	iret   
   14003404e:	add    al,BYTE PTR [rax]
   140034050:	(bad)  
   140034051:	(bad)  
   140034052:	add    DWORD PTR [rax],eax
   140034054:	(bad)  
   140034055:	(bad)  
   140034056:	add    DWORD PTR [rax],eax
   140034058:	hlt    
   140034059:	int3   
   14003405a:	add    al,BYTE PTR [rax]
   14003405c:	(bad)  
   14003405d:	(bad)  
   14003405e:	add    DWORD PTR [rax],eax
   140034060:	(bad)  
   140034062:	add    DWORD PTR [rax],eax
   140034064:	in     al,0xcc
   140034066:	add    al,BYTE PTR [rax]
   140034068:	loopne 0x140034040
   14003406a:	add    DWORD PTR [rax],eax
   14003406c:	(bad)  
   14003406d:	xlat   BYTE PTR ds:[rbx]
   14003406e:	add    DWORD PTR [rax],eax
   140034070:	nop
   140034071:	iret   
   140034072:	add    al,BYTE PTR [rax]
   140034074:	(bad)  
   140034075:	xlat   BYTE PTR ds:[rbx]
   140034076:	add    DWORD PTR [rax],eax
   140034078:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140034079:	xlat   BYTE PTR ds:[rbx]
   14003407a:	add    DWORD PTR [rax],eax
   14003407c:	sbb    ch,cl
   14003407e:	add    al,BYTE PTR [rax]
   140034080:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140034081:	xlat   BYTE PTR ds:[rbx]
   140034082:	add    DWORD PTR [rax],eax
   140034084:	mov    esi,0x80001d7
   140034089:	int    0x2
   14003408b:	add    al,al
   14003408d:	xlat   BYTE PTR ds:[rbx]
   14003408e:	add    DWORD PTR [rax],eax
   140034090:	stc    
   140034091:	xlat   BYTE PTR ds:[rbx]
   140034092:	add    DWORD PTR [rax],eax
   140034094:	adc    al,cl
   140034096:	add    al,BYTE PTR [rax]
   140034098:	add    al,bl
   14003409a:	add    DWORD PTR [rax],eax
   14003409c:	cmp    eax,ebx
   14003409e:	add    DWORD PTR [rax],eax
   1400340a0:	adc    al,cl
   1400340a2:	add    al,BYTE PTR [rax]
   1400340a4:	rex fadd DWORD PTR [rcx]
   1400340a7:	add    BYTE PTR [rbx-0x28],ah
   1400340aa:	add    DWORD PTR [rax],eax
   1400340ac:	nop
   1400340ad:	iret   
   1400340ae:	add    al,BYTE PTR [rax]
   1400340b0:	movsxd ebx,eax
   1400340b2:	add    DWORD PTR [rax],eax
   1400340b4:	sahf   
   1400340b5:	fadd   DWORD PTR [rcx]
   1400340b7:	add    BYTE PTR [rcx*8-0x2761fffe],bh
   1400340be:	add    DWORD PTR [rax],eax
   1400340c0:	mov    eax,0x2c0001d8
   1400340c5:	int    0x2
   1400340c7:	add    al,al
   1400340c9:	fadd   DWORD PTR [rcx]
   1400340cb:	add    bl,ah
   1400340cd:	fadd   DWORD PTR [rcx]
   1400340cf:	add    BYTE PTR [rax-0x1cfffd31],dl
   1400340d5:	fadd   DWORD PTR [rcx]
   1400340d7:	add    BYTE PTR [rdi-0x27],cl
   1400340da:	add    DWORD PTR [rax],eax
   1400340dc:	(bad)  
   1400340dd:	int    0x2
   1400340df:	add    BYTE PTR [rdi-0x27],cl
   1400340e2:	add    DWORD PTR [rax],eax
   1400340e4:	imul   ebx,ecx,0xcd500001
   1400340ea:	add    al,BYTE PTR [rax]
   1400340ec:	jo     0x1400340c7
   1400340ee:	add    DWORD PTR [rax],eax
   1400340f0:	xchg   ebx,eax
   1400340f1:	fld    DWORD PTR [rcx]
   1400340f3:	add    BYTE PTR [rax-0x6cfffd31],dl
   1400340f9:	fld    DWORD PTR [rcx]
   1400340fb:	add    bh,bh
   1400340fd:	fld    DWORD PTR [rcx]
   1400340ff:	add    BYTE PTR [rbp+rcx*8-0x2600fffe],al
   140034106:	add    DWORD PTR [rax],eax
   140034108:	sbb    edx,ebx
   14003410a:	add    DWORD PTR [rax],eax
   14003410c:	je     0x1400340db
   14003410e:	add    al,BYTE PTR [rax]
   140034110:	and    dl,bl
   140034112:	add    DWORD PTR [rax],eax
   140034114:	rex.RXB fiadd DWORD PTR [r9]
   140034117:	add    BYTE PTR [rax+0x470002cf],dl
   14003411d:	fiadd  DWORD PTR [rcx]
   14003411f:	add    ah,ah
   140034121:	fiadd  DWORD PTR [rcx]
   140034123:	add    BYTE PTR [rax-0x1bfffd33],ch
   140034129:	fiadd  DWORD PTR [rcx]
   14003412b:	add    dh,bh
   14003412d:	fiadd  DWORD PTR [rcx]
   14003412f:	add    BYTE PTR [rax+0x2cd],bl
   140034135:	fild   DWORD PTR [rcx]
   140034137:	add    BYTE PTR [rbx],ah
   140034139:	fild   DWORD PTR [rcx]
   14003413b:	add    BYTE PTR [rax+0x230002d1],bh
   140034141:	fild   DWORD PTR [rcx]
   140034143:	add    BYTE PTR [rax],dh
   140034145:	fild   DWORD PTR [rcx]
   140034147:	add    al,dh
   140034149:	int    0x2
   14003414b:	add    BYTE PTR [rax],dh
   14003414d:	fild   DWORD PTR [rcx]
   14003414f:	add    BYTE PTR [rbx+rbx*8+0x1],dh
   140034153:	add    ah,bl
   140034155:	int    0x2
   140034157:	add    BYTE PTR [rbx+rbx*8+0x1],dh
   14003415b:	add    BYTE PTR [rcx-0x25],bh
   14003415e:	add    DWORD PTR [rax],eax
   140034160:	int3   
   140034161:	int    0x2
   140034163:	add    BYTE PTR [rcx-0x25],bh
   140034166:	add    DWORD PTR [rax],eax
   140034168:	xchg   ebx,eax
   140034169:	fild   DWORD PTR [rcx]
   14003416b:	add    BYTE PTR [rbp+rcx*8-0x245ffffe],bh
   140034172:	add    DWORD PTR [rax],eax
   140034174:	ret    
   140034175:	fild   DWORD PTR [rcx]
   140034177:	add    BYTE PTR [rax-0x3cfffd31],dl
   14003417d:	fild   DWORD PTR [rcx]
   14003417f:	add    BYTE PTR [rdi],ch
   140034181:	fadd   QWORD PTR [rcx]
   140034183:	add    BYTE PTR [rsi+rcx*8],dl
   140034186:	add    al,BYTE PTR [rax]
   140034188:	(bad)  
   140034189:	fadd   QWORD PTR [rcx]
   14003418b:	add    BYTE PTR [rcx-0x24],cl
   14003418e:	add    DWORD PTR [rax],eax
   140034190:	add    al,0xce
   140034192:	add    al,BYTE PTR [rax]
   140034194:	push   rax
   140034195:	fadd   QWORD PTR [rcx]
   140034197:	add    BYTE PTR [rbx-0x24],dh
   14003419a:	add    DWORD PTR [rax],eax
   14003419c:	nop
   14003419d:	iret   
   14003419e:	add    al,BYTE PTR [rax]
   1400341a0:	jae    0x14003417e
   1400341a2:	add    DWORD PTR [rax],eax
   1400341a4:	scas   al,BYTE PTR es:[rdi]
   1400341a5:	fadd   QWORD PTR [rcx]
   1400341a7:	add    BYTE PTR [rax],bh
   1400341a9:	(bad)  
   1400341aa:	add    al,BYTE PTR [rax]
   1400341ac:	scas   al,BYTE PTR es:[rdi]
   1400341ad:	fadd   QWORD PTR [rcx]
   1400341af:	add    al,cl
   1400341b1:	fadd   QWORD PTR [rcx]
   1400341b3:	add    BYTE PTR [rax],ch
   1400341b5:	(bad)  
   1400341b6:	add    al,BYTE PTR [rax]
   1400341b8:	rcr    ah,1
   1400341ba:	add    DWORD PTR [rax],eax
   1400341bc:	repz fadd QWORD PTR [rcx]
   1400341bf:	add    BYTE PTR [rax-0xcfffd31],dl
   1400341c5:	fadd   QWORD PTR [rcx]
   1400341c7:	add    BYTE PTR [rsi],ch
   1400341c9:	fld    QWORD PTR [rcx]
   1400341cb:	add    BYTE PTR [rsi+rcx*8+0x2],bl
   1400341cf:	add    BYTE PTR [rsi],ch
   1400341d1:	fld    QWORD PTR [rcx]
   1400341d3:	add    BYTE PTR [rax-0x23],cl
   1400341d6:	add    DWORD PTR [rax],eax
   1400341d8:	rex.WR (bad) 
   1400341da:	add    al,BYTE PTR [rax]
   1400341dc:	push   rax
   1400341dd:	fld    QWORD PTR [rcx]
   1400341df:	add    BYTE PTR [rax-0x23],dh
   1400341e2:	add    DWORD PTR [rax],eax
   1400341e4:	nop
   1400341e5:	iret   
   1400341e6:	add    al,BYTE PTR [rax]
   1400341e8:	jo     0x1400341c7
   1400341ea:	add    DWORD PTR [rax],eax
   1400341ec:	stos   DWORD PTR es:[rdi],eax
   1400341ed:	fld    QWORD PTR [rcx]
   1400341ef:	add    BYTE PTR [rax-0x54fffd32],al
   1400341f5:	fld    QWORD PTR [rcx]
   1400341f7:	add    ch,al
   1400341f9:	fld    QWORD PTR [rcx]
   1400341fb:	add    BYTE PTR [rax-0x32],dh
   1400341fe:	add    al,BYTE PTR [rax]
   140034200:	rcr    ch,1
   140034202:	add    DWORD PTR [rax],eax
   140034204:	hlt    
   140034205:	fld    QWORD PTR [rcx]
   140034207:	add    BYTE PTR [rax-0xbfffd31],dl
   14003420d:	fld    QWORD PTR [rcx]
   14003420f:	add    BYTE PTR [rcx-0x5bfffe22],dl
   140034215:	(bad)  
   140034216:	add    al,BYTE PTR [rax]
   140034218:	xchg   ecx,eax
   140034219:	fiadd  WORD PTR [rcx]
   14003421b:	add    BYTE PTR [rbx-0x6bfffe22],ch
   140034221:	(bad)  
   140034222:	add    al,BYTE PTR [rax]
   140034224:	mov    al,0xde
   140034226:	add    DWORD PTR [rax],eax
   140034228:	rcr    dh,1
   14003422a:	add    DWORD PTR [rax],eax
   14003422c:	nop
   14003422d:	iret   
   14003422e:	add    al,BYTE PTR [rax]
   140034230:	rcr    dh,1
   140034232:	add    DWORD PTR [rax],eax
   140034234:	or     ebx,edi
   140034236:	add    DWORD PTR [rax],eax
   140034238:	enter  0x2ce,0x0
   14003423c:	or     ebx,edi
   14003423e:	add    DWORD PTR [rax],eax
   140034240:	and    eax,0xb80001df
   140034245:	(bad)  
   140034246:	add    al,BYTE PTR [rax]
   140034248:	xor    bh,bl
   14003424a:	add    DWORD PTR [rax],eax
   14003424c:	push   rax
   14003424d:	fild   WORD PTR [rcx]
   14003424f:	add    BYTE PTR [rax+0x500002cf],dl
   140034255:	fild   WORD PTR [rcx]
   140034257:	add    BYTE PTR [rbx-0x13fffe21],cl
   14003425d:	(bad)  
   14003425e:	add    al,BYTE PTR [rax]
   140034260:	mov    ebx,edi
   140034262:	add    DWORD PTR [rax],eax
   140034264:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140034265:	fild   WORD PTR [rcx]
   140034267:	add    ah,bl
   140034269:	(bad)  
   14003426a:	add    al,BYTE PTR [rax]
   14003426c:	mov    al,0xdf
   14003426e:	add    DWORD PTR [rax],eax
   140034270:	rcr    bh,1
   140034272:	add    DWORD PTR [rax],eax
   140034274:	nop
   140034275:	iret   
   140034276:	add    al,BYTE PTR [rax]
   140034278:	rcr    bh,1
   14003427a:	add    DWORD PTR [rax],eax
   14003427c:	cmp    al,0xe0
   14003427e:	add    DWORD PTR [rax],eax
   140034280:	adc    bh,cl
   140034282:	add    al,BYTE PTR [rax]
   140034284:	cmp    al,0xe0
   140034286:	add    DWORD PTR [rax],eax
   140034288:	push   rsi
   140034289:	loopne 0x14003428c
   14003428b:	add    BYTE PTR [rax],al
   14003428d:	iret   
   14003428e:	add    al,BYTE PTR [rax]
   140034290:	(bad)  
   140034291:	loopne 0x140034294
   140034293:	add    BYTE PTR [rax-0x6ffffe20],al
   140034299:	iret   
   14003429a:	add    al,BYTE PTR [rax]
   14003429c:	and    al,0x1
   14003429f:	add    ah,ch
   1400342a1:	loopne 0x1400342a4
   1400342a3:	add    BYTE PTR [rdi+rcx*8],dh
   1400342a6:	add    al,BYTE PTR [rax]
   1400342a8:	in     al,dx
   1400342a9:	loopne 0x1400342ac
   1400342ab:	add    BYTE PTR [rsi],al
   1400342ad:	loope  0x1400342b0
   1400342af:	add    BYTE PTR [rdi+rcx*8],ah
   1400342b2:	add    al,BYTE PTR [rax]
   1400342b4:	adc    cl,ah
   1400342b6:	add    DWORD PTR [rax],eax
   1400342b8:	rex.RX loope 0x1400342bc
   1400342bb:	add    BYTE PTR [rax],dl
   1400342bd:	enter  0x2,0x50
   1400342c1:	loope  0x1400342c4
   1400342c3:	add    BYTE PTR [rax-0x1f],dh
   1400342c6:	add    DWORD PTR [rax],eax
   1400342c8:	nop
   1400342c9:	iret   
   1400342ca:	add    al,BYTE PTR [rax]
   1400342cc:	jo     0x1400342af
   1400342ce:	add    DWORD PTR [rax],eax
   1400342d0:	stos   DWORD PTR es:[rdi],eax
   1400342d1:	loope  0x1400342d4
   1400342d3:	add    BYTE PTR [rax-0x31],bl
   1400342d6:	add    al,BYTE PTR [rax]
   1400342d8:	stos   DWORD PTR es:[rdi],eax
   1400342d9:	loope  0x1400342dc
   1400342db:	add    ch,al
   1400342dd:	loope  0x1400342e0
   1400342df:	add    BYTE PTR [rax-0x31],cl
   1400342e2:	add    al,BYTE PTR [rax]
   1400342e4:	shl    cl,1
   1400342e6:	add    DWORD PTR [rax],eax
   1400342e8:	lock loope 0x1400342ec
   1400342eb:	add    BYTE PTR [rax-0xffffd31],dl
   1400342f1:	loope  0x1400342f4
   1400342f3:	add    BYTE PTR [rbx],ch
   1400342f5:	loop   0x1400342f8
   1400342f7:	add    BYTE PTR [rdi+rcx*8+0x2],bh
   1400342fb:	add    BYTE PTR [rbx],ch
   1400342fd:	loop   0x140034300
   1400342ff:	add    BYTE PTR [rbp-0x1e],al
   140034302:	add    DWORD PTR [rax],eax
   140034304:	ins    BYTE PTR es:[rdi],dx
   140034305:	iret   
   140034306:	add    al,BYTE PTR [rax]
   140034308:	push   rax
   140034309:	loop   0x14003430c
   14003430b:	add    BYTE PTR [rax-0x1e],dh
   14003430e:	add    DWORD PTR [rax],eax
   140034310:	mov    eax,0x700002d1
   140034315:	loop   0x140034318
   140034317:	add    BYTE PTR [rbp-0x1e],bh
   14003431a:	add    DWORD PTR [rax],eax
   14003431c:	ror    bh,1
   14003431e:	add    al,BYTE PTR [rax]
   140034320:	jge    0x140034304
   140034322:	add    DWORD PTR [rax],eax
   140034324:	shl    edx,0x1
   140034327:	add    BYTE PTR [rdi+rcx*8-0x1d3efffe],bh
   14003432e:	add    DWORD PTR [rax],eax
   140034330:	(bad)  
   140034331:	loop   0x140034334
   140034333:	add    BYTE PTR [rdi+rcx*8-0x1d39fffe],ch
   14003433a:	add    DWORD PTR [rax],eax
   14003433c:	loopne 0x140034320
   14003433e:	add    DWORD PTR [rax],eax
   140034340:	pushf  
   140034341:	iret   
   140034342:	add    al,BYTE PTR [rax]
   140034344:	loopne 0x140034328
   140034346:	add    DWORD PTR [rax],eax
   140034348:	add    bl,ah
   14003434a:	add    DWORD PTR [rax],eax
   14003434c:	nop
   14003434d:	iret   
   14003434e:	add    al,BYTE PTR [rax]
   140034350:	add    bl,ah
   140034352:	add    DWORD PTR [rax],eax
   140034354:	cmp    esp,ebx
   140034356:	add    DWORD PTR [rax],eax
   140034358:	hlt    
   140034359:	iret   
   14003435a:	add    al,BYTE PTR [rax]
   14003435c:	cmp    esp,ebx
   14003435e:	add    DWORD PTR [rax],eax
   140034360:	push   rbp
   140034361:	jrcxz  0x140034364
   140034363:	add    ah,ah
   140034365:	iret   
   140034366:	add    al,BYTE PTR [rax]
   140034368:	(bad)  
   140034369:	jrcxz  0x14003436c
   14003436b:	add    BYTE PTR [rax-0x6ffffe1d],al
   140034371:	iret   
   140034372:	add    al,BYTE PTR [rax]
   140034374:	and    bl,0x1
   140034377:	add    BYTE PTR [rbx+0x180001e3],bh
   14003437d:	rol    BYTE PTR [rdx],1
   14003437f:	add    BYTE PTR [rbx-0x2afffe1d],bh
   140034385:	jrcxz  0x140034388
   140034387:	add    BYTE PTR [rax],cl
   140034389:	rol    BYTE PTR [rdx],1
   14003438b:	add    al,ah
   14003438d:	jrcxz  0x140034390
   14003438f:	add    BYTE PTR [rsi],dl
   140034391:	in     al,0x1
   140034393:	add    BYTE PTR [rax],dl
   140034395:	enter  0x2,0x20
   140034399:	in     al,0x1
   14003439b:	add    BYTE PTR [rbx-0x1c],al
   14003439e:	add    DWORD PTR [rax],eax
   1400343a0:	nop
   1400343a1:	iret   
   1400343a2:	add    al,BYTE PTR [rax]
   1400343a4:	rex.XB in al,0x1
   1400343a7:	add    BYTE PTR [rdi+0x3c0001e4],ch
   1400343ad:	rol    BYTE PTR [rdx],1
   1400343af:	add    BYTE PTR [rdi-0x36fffe1c],ch
   1400343b5:	in     al,0x1
   1400343b7:	add    BYTE PTR [rax+rdx*8],ch
   1400343ba:	add    al,BYTE PTR [rax]
   1400343bc:	shl    ah,1
   1400343be:	add    DWORD PTR [rax],eax
   1400343c0:	repz in al,0x1
   1400343c3:	add    BYTE PTR [rax-0xcfffd31],dl
   1400343c9:	in     al,0x1
   1400343cb:	add    BYTE PTR [rdi-0x1b],bl
   1400343ce:	add    DWORD PTR [rax],eax
   1400343d0:	(bad)  
   1400343d1:	rol    BYTE PTR [rdx],1
   1400343d3:	add    BYTE PTR [rdi-0x1b],bl
   1400343d6:	add    DWORD PTR [rax],eax
   1400343d8:	jns    0x1400343bf
   1400343da:	add    DWORD PTR [rax],eax
   1400343dc:	push   rax
   1400343dd:	rol    BYTE PTR [rdx],1
   1400343df:	add    BYTE PTR [rax-0x5cfffe1b],al
   1400343e5:	in     eax,0x1
   1400343e7:	add    BYTE PTR [rax-0x5cfffd31],dl
   1400343ed:	in     eax,0x1
   1400343ef:	add    BYTE PTR [rdi],cl
   1400343f1:	out    0x1,al
   1400343f3:	add    BYTE PTR [rax+rdx*8-0x19f0fffe],al
   1400343fa:	add    DWORD PTR [rax],eax
   1400343fc:	sub    esi,esp
   1400343fe:	add    DWORD PTR [rax],eax
   140034400:	je     0x1400343d2
   140034402:	add    al,BYTE PTR [rax]
   140034404:	xor    dh,ah
   140034406:	add    DWORD PTR [rax],eax
   140034408:	push   rbx
   140034409:	out    0x1,al
   14003440b:	add    BYTE PTR [rax+0x530002cf],dl
   140034411:	out    0x1,al
   140034413:	add    BYTE PTR [rsi-0x57fffe1a],cl
   140034419:	rol    BYTE PTR [rdx],1
   14003441b:	add    BYTE PTR [rsi-0x57fffe1a],cl
   140034421:	out    0x1,al
   140034423:	add    BYTE PTR [rax-0x4ffffd30],bl
   140034429:	out    0x1,al
   14003442b:	add    cl,ch
   14003442d:	out    0x1,al
   14003442f:	add    BYTE PTR [rax],dl
   140034431:	enter  0x2,0xf0
   140034435:	out    0x1,al
   140034437:	add    BYTE PTR [rdi],dl
   140034439:	out    0x1,eax
   14003443b:	add    BYTE PTR [rax+0x170002cf],dl
   140034441:	out    0x1,eax
   140034443:	add    BYTE PTR [rdi+riz*8-0x2f33ffff],dh
   14003444a:	add    al,BYTE PTR [rax]
   14003444c:	mov    ah,0xe7
   14003444e:	add    DWORD PTR [rax],eax
   140034450:	(bad)  
   140034451:	out    0x1,eax
   140034453:	add    BYTE PTR [rax+rdx*8-0x182ffffe],bh
   14003445a:	add    DWORD PTR [rax],eax
   14003445c:	repz out 0x1,eax
   14003445f:	add    BYTE PTR [rax-0xcfffd31],dl
   140034465:	out    0x1,eax
   140034467:	add    BYTE PTR [rdi-0x18],bl
   14003446a:	add    DWORD PTR [rax],eax
   14003446c:	lock rol BYTE PTR [rdx],1
   14003446f:	add    BYTE PTR [rdi-0x18],bl
   140034472:	add    DWORD PTR [rax],eax
   140034474:	jns    0x14003445e
   140034476:	add    DWORD PTR [rax],eax
   140034478:	loopne 0x14003444a
   14003447a:	add    al,BYTE PTR [rax]
   14003447c:	sub    al,0x1
   14003447f:	add    BYTE PTR [rbx-0x6ffffe18],ah
   140034485:	iret   
   140034486:	add    al,BYTE PTR [rax]
   140034488:	movabs ds:0x140001e90f0001e8,eax
   140034491:	rol    DWORD PTR [rdx],1
   140034493:	add    BYTE PTR [rdi],cl
   140034495:	jmp    0x1292c449b
   14003449a:	add    DWORD PTR [rax],eax
   14003449c:	add    al,0xd1
   14003449e:	add    al,BYTE PTR [rax]
   1400344a0:	xor    cl,ch
   1400344a2:	add    DWORD PTR [rax],eax
   1400344a4:	push   rbx
   1400344a5:	jmp    0x111bb44ab
   1400344aa:	add    al,BYTE PTR [rax]
   1400344ac:	push   rbx
   1400344ad:	jmp    0x1296344b3
   1400344b2:	add    DWORD PTR [rax],eax
   1400344b4:	pop    rsp
   1400344b5:	rol    DWORD PTR [rdx],1
   1400344b7:	add    BYTE PTR [rax-0x17],ah
   1400344ba:	add    DWORD PTR [rax],eax
   1400344bc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400344bd:	jmp    0x1114b44c3
   1400344c2:	add    al,BYTE PTR [rax]
   1400344c4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400344c5:	jmp    0x129ac44cb
   1400344ca:	add    DWORD PTR [rax],eax
   1400344cc:	cmp    cl,dl
   1400344ce:	add    al,BYTE PTR [rax]
   1400344d0:	test   eax,0xc30001e9
   1400344d5:	jmp    0x1112b44db
   1400344da:	add    al,BYTE PTR [rax]
   1400344dc:	shr    cl,1
   1400344de:	add    DWORD PTR [rax],eax
   1400344e0:	repz jmp 0x111bb44e7
   1400344e6:	add    al,BYTE PTR [rax]
   1400344e8:	repz jmp 0x12a0344ef
   1400344ee:	add    DWORD PTR [rax],eax
   1400344f0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400344f1:	rol    DWORD PTR [rdx],1
   1400344f3:	add    BYTE PTR [rax],al
   1400344f5:	(bad)  
   1400344f6:	add    DWORD PTR [rax],eax
   1400344f8:	rex.R (bad) 
   1400344fa:	add    DWORD PTR [rax],eax
   1400344fc:	nop
   1400344fd:	rol    DWORD PTR [rdx],1
   1400344ff:	add    BYTE PTR [rdx+rbp*8+0x1],al
   140034503:	add    BYTE PTR [rcx-0x16],cl
   140034506:	add    DWORD PTR [rax],eax
   140034508:	adc    cl,0x2
   14003450b:	add    BYTE PTR [rcx-0x16],cl
   14003450e:	add    DWORD PTR [rax],eax
   140034510:	movsxd ebp,edx
   140034512:	add    DWORD PTR [rax],eax
   140034514:	jo     0x1400344e7
   140034516:	add    al,BYTE PTR [rax]
   140034518:	jo     0x140034504
   14003451a:	add    DWORD PTR [rax],eax
   14003451c:	test   eax,0x100001ea
   140034521:	enter  0x2,0xb0
   140034525:	(bad)  
   140034526:	add    DWORD PTR [rax],eax
   140034528:	shr    edx,cl
   14003452a:	add    DWORD PTR [rax],eax
   14003452c:	nop
   14003452d:	iret   
   14003452e:	add    al,BYTE PTR [rax]
   140034530:	shr    edx,cl
   140034532:	add    DWORD PTR [rax],eax
   140034534:	(bad)  
   140034535:	jmp    0x140034538
   140034537:	add    ah,dl
   140034539:	rol    DWORD PTR [rdx],1
   14003453b:	add    BYTE PTR [rsi],cl
   14003453d:	jmp    0x140034540
   14003453f:	add    BYTE PTR [rax],ch
   140034541:	jmp    0x140034544
   140034543:	add    ah,al
   140034545:	rol    DWORD PTR [rdx],1
   140034547:	add    BYTE PTR [rax],dh
   140034549:	jmp    0x14003454c
   14003454b:	add    BYTE PTR [rcx-0x15],ch
   14003454e:	add    DWORD PTR [rax],eax
   140034550:	adc    al,cl
   140034552:	add    al,BYTE PTR [rax]
   140034554:	jo     0x140034541
   140034556:	add    DWORD PTR [rax],eax
   140034558:	xchg   ebx,eax
   140034559:	jmp    0x14003455c
   14003455b:	add    BYTE PTR [rax-0x6cfffd31],dl
   140034561:	jmp    0x140034564
   140034563:	add    dh,cl
   140034565:	jmp    0x140034568
   140034567:	add    al,bh
   140034569:	rol    DWORD PTR [rdx],1
   14003456b:	add    dh,cl
   14003456d:	jmp    0x140034570
   14003456f:	add    al,ch
   140034571:	jmp    0x140034574
   140034573:	add    al,ch
   140034575:	rol    DWORD PTR [rdx],1
   140034577:	add    al,dh
   140034579:	jmp    0x14003457c
   14003457b:	add    BYTE PTR [rbx],dl
   14003457d:	in     al,dx
   14003457e:	add    DWORD PTR [rax],eax
   140034580:	nop
   140034581:	iret   
   140034582:	add    al,BYTE PTR [rax]
   140034584:	adc    ebp,esp
   140034586:	add    DWORD PTR [rax],eax
   140034588:	jg     0x140034576
   14003458a:	add    DWORD PTR [rax],eax
   14003458c:	sbb    al,0xd2
   14003458e:	add    al,BYTE PTR [rax]
   140034590:	jg     0x14003457e
   140034592:	add    DWORD PTR [rax],eax
   140034594:	cdq    
   140034595:	in     al,dx
   140034596:	add    DWORD PTR [rax],eax
   140034598:	or     al,0xd2
   14003459a:	add    al,BYTE PTR [rax]
   14003459c:	movabs al,ds:0x900001ecc30001ec
   1400345a5:	iret   
   1400345a6:	add    al,BYTE PTR [rax]
   1400345a8:	ret    
   1400345a9:	in     al,dx
   1400345aa:	add    DWORD PTR [rax],eax
   1400345ac:	(bad)  
   1400345ad:	in     al,dx
   1400345ae:	add    DWORD PTR [rax],eax
   1400345b0:	rol    BYTE PTR [rdx],cl
   1400345b3:	add    dh,bh
   1400345b5:	in     al,dx
   1400345b6:	add    DWORD PTR [rax],eax
   1400345b8:	sbb    ch,ch
   1400345ba:	add    DWORD PTR [rax],eax
   1400345bc:	xor    dl,dl
   1400345be:	add    al,BYTE PTR [rax]
   1400345c0:	sbb    ch,ch
   1400345c2:	add    DWORD PTR [rax],eax
   1400345c4:	jns    0x1400345b3
   1400345c6:	add    DWORD PTR [rax],eax
   1400345c8:	mov    al,0xc3
   1400345ca:	add    al,BYTE PTR [rax]
   1400345cc:	jl     0x1400345bb
   1400345ce:	add    DWORD PTR [rax],eax
   1400345d0:	shr    ebp,cl
   1400345d2:	add    DWORD PTR [rax],eax
   1400345d4:	mov    al,0xc3
   1400345d6:	add    al,BYTE PTR [rax]
   1400345d8:	fsub   st(5),st
   1400345da:	add    DWORD PTR [rax],eax
   1400345dc:	rex.RB out dx,al
   1400345de:	add    DWORD PTR [rax],eax
   1400345e0:	sbb    al,0xbe
   1400345e2:	add    al,BYTE PTR [rax]
   1400345e4:	jo     0x1400345d4
   1400345e6:	add    DWORD PTR [rax],eax
   1400345e8:	shr    esi,cl
   1400345ea:	add    DWORD PTR [rax],eax
   1400345ec:	mov    al,0xc3
   1400345ee:	add    al,BYTE PTR [rax]
   1400345f0:	(bad)  
   1400345f1:	out    dx,al
   1400345f2:	add    DWORD PTR [rax],eax
   1400345f4:	icebp  
   1400345f5:	out    dx,al
   1400345f6:	add    DWORD PTR [rax],eax
   1400345f8:	adc    al,0xbe
   1400345fa:	add    al,BYTE PTR [rax]
   1400345fc:	xor    bh,ch
   1400345fe:	add    DWORD PTR [rax],eax
   140034600:	loopne 0x1400345f1
   140034602:	add    DWORD PTR [rax],eax
   140034604:	push   rsp
   140034605:	rol    BYTE PTR [rdx],cl
   140034607:	add    al,ah
   140034609:	out    dx,eax
   14003460a:	add    DWORD PTR [rax],eax
   14003460c:	imul   edi
   14003460e:	add    DWORD PTR [rax],eax
   140034610:	adc    al,0xbe
   140034612:	add    al,BYTE PTR [rax]
   140034614:	clc    
   140034615:	out    dx,eax
   140034616:	add    DWORD PTR [rax],eax
   140034618:	pop    rbp
   140034619:	lock add DWORD PTR [rax],eax
   14003461c:	and    ch,al
   14003461e:	add    al,BYTE PTR [rax]
   140034620:	(bad)  
   140034621:	lock add DWORD PTR [rax],eax
   140034624:	loopne 0x140034617
   140034626:	add    DWORD PTR [rax],eax
   140034628:	jl     0x1400345fc
   14003462a:	add    al,BYTE PTR [rax]
   14003462c:	loopne 0x14003461f
   14003462e:	add    DWORD PTR [rax],eax
   140034630:	(bad)
   140034633:	add    BYTE PTR [rsi+rdi*4],dl
   140034636:	add    al,BYTE PTR [rax]
   140034638:	enter  0x1f2,0x0
   14003463c:	(bad)  
   14003463e:	add    DWORD PTR [rax],eax
   140034640:	adc    al,0xbe
   140034642:	add    al,BYTE PTR [rax]
   140034644:	loopne 0x140034638
   140034646:	add    DWORD PTR [rax],eax
   140034648:	sub    esi,ebx
   14003464a:	add    DWORD PTR [rax],eax
   14003464c:	movabs al,ds:0x8a0001f32c0002d2
   140034655:	repz add DWORD PTR [rax],eax
   140034658:	enter  0x2d2,0x0
   14003465c:	mov    ebx,?
   14003465e:	add    DWORD PTR [rax],eax
   140034660:	(bad)  
   140034661:	hlt    
   140034662:	add    DWORD PTR [rax],eax
   140034664:	lock rol BYTE PTR [rdx],cl
   140034667:	add    al,dh
   140034669:	hlt    
   14003466a:	add    DWORD PTR [rax],eax
   14003466c:	xor    ebp,esi
   14003466e:	add    DWORD PTR [rax],eax
   140034670:	adc    al,0xbe
   140034672:	add    al,BYTE PTR [rax]
   140034674:	xor    al,0xf5
   140034676:	add    DWORD PTR [rax],eax
   140034678:	rex.WR cmc 
   14003467a:	add    DWORD PTR [rax],eax
   14003467c:	adc    al,0xbe
   14003467e:	add    al,BYTE PTR [rax]
   140034680:	push   rsp
   140034681:	cmc    
   140034682:	add    DWORD PTR [rax],eax
   140034684:	mov    ebp,?
   140034686:	add    DWORD PTR [rax],eax
   140034688:	adc    al,cl
   14003468a:	add    al,BYTE PTR [rax]
   14003468c:	mov    ebp,?
   14003468e:	add    DWORD PTR [rax],eax
   140034690:	(bad)  
   140034691:	cmc    
   140034692:	add    DWORD PTR [rax],eax
   140034694:	adc    al,cl
   140034696:	add    al,BYTE PTR [rax]
   140034698:	push   rax
   140034699:	test   BYTE PTR [rcx],0x0
   14003469c:	xchg   ecx,eax
   14003469d:	test   BYTE PTR [rcx],0x0
   1400346a0:	clc    
   1400346a1:	rol    BYTE PTR [rdx],cl
   1400346a3:	add    BYTE PTR [rsi+rsi*8-0x8a8ffff],ah
   1400346aa:	add    DWORD PTR [rax],eax
   1400346ac:	sbb    bl,dl
   1400346ae:	add    al,BYTE PTR [rax]
   1400346b0:	xor    bh,0x1
   1400346b3:	add    cl,al
   1400346b5:	test   DWORD PTR [rcx],0x2ba6400
   1400346bb:	add    al,dl
   1400346bd:	test   DWORD PTR [rcx],0x1f81100
   1400346c3:	add    ah,ch
   1400346c5:	mov    edx,0xf8200002
   1400346ca:	add    DWORD PTR [rax],eax
   1400346cc:	pop    rsp
   1400346cd:	clc    
   1400346ce:	add    DWORD PTR [rax],eax
   1400346d0:	je     0x14003468d
   1400346d2:	add    al,BYTE PTR [rax]
   1400346d4:	(bad)  
   1400346d5:	clc    
   1400346d6:	add    DWORD PTR [rax],eax
   1400346d8:	sahf   
   1400346d9:	clc    
   1400346da:	add    DWORD PTR [rax],eax
   1400346dc:	add    BYTE PTR [rdx+rax*1+0x1f89e00],bh
   1400346e3:	add    BYTE PTR [rdi+0x740001f8],dh
   1400346e9:	rol    BYTE PTR [rdx],cl
   1400346eb:	add    BYTE PTR [rdi-0x2cfffe08],dh
   1400346f1:	clc    
   1400346f2:	add    DWORD PTR [rax],eax
   1400346f4:	je     0x1400346c8
   1400346f6:	add    al,BYTE PTR [rax]
   1400346f8:	sar    eax,cl
   1400346fa:	add    DWORD PTR [rax],eax
   1400346fc:	adc    bh,cl
   1400346fe:	add    DWORD PTR [rax],eax
   140034700:	je     0x1400346d4
   140034702:	add    al,BYTE PTR [rax]
   140034704:	adc    bh,cl
   140034706:	add    DWORD PTR [rax],eax
   140034708:	cmp    al,0xf9
   14003470a:	add    DWORD PTR [rax],eax
   14003470c:	je     0x1400346e0
   14003470e:	add    al,BYTE PTR [rax]
   140034710:	rex stc 
   140034712:	add    DWORD PTR [rax],eax
   140034714:	(bad)  
   140034715:	stc    
   140034716:	add    DWORD PTR [rax],eax
   140034718:	je     0x1400346ec
   14003471a:	add    al,BYTE PTR [rax]
   14003471c:	nop
   14003471d:	stc    
   14003471e:	add    DWORD PTR [rax],eax
   140034720:	mov    esi,0x880001f9
   140034725:	(bad)
   140034729:	stc    
   14003472a:	add    DWORD PTR [rax],eax
   14003472c:	add    eax,0x900001fa
   140034731:	ret    
   140034732:	add    al,BYTE PTR [rax]
   140034734:	add    eax,0xb0001fa
   140034739:	cli    
   14003473a:	add    DWORD PTR [rax],eax
   14003473c:	add    bl,0x2
	...

Disassembly of section .rsrc:

0000000140035000 <.rsrc>:
	...
   140035008:	add    al,0x0
   14003500a:	add    BYTE PTR [rax],al
   14003500c:	add    BYTE PTR [rax],al
   14003500e:	add    DWORD PTR [rax],eax
   140035010:	sbb    BYTE PTR [rax],al
   140035012:	add    BYTE PTR [rax],al
   140035014:	sbb    BYTE PTR [rax],al
   140035016:	add    BYTE PTR [rax+0x0],al
   14003501c:	add    BYTE PTR [rax],al
   14003501e:	add    BYTE PTR [rax],al
   140035020:	add    al,0x0
   140035022:	add    BYTE PTR [rax],al
   140035024:	add    BYTE PTR [rax],al
   140035026:	add    DWORD PTR [rax],eax
   140035028:	add    DWORD PTR [rax],eax
   14003502a:	add    BYTE PTR [rax],al
   14003502c:	xor    BYTE PTR [rax],al
   14003502e:	add    BYTE PTR [rax+0x0],al
   140035034:	add    BYTE PTR [rax],al
   140035036:	add    BYTE PTR [rax],al
   140035038:	add    al,0x0
   14003503a:	add    BYTE PTR [rax],al
   14003503c:	add    BYTE PTR [rax],al
   14003503e:	add    DWORD PTR [rax],eax
   140035040:	or     DWORD PTR [rax+rax*1],eax
   140035043:	add    BYTE PTR [rax+0x0],cl
   140035046:	add    BYTE PTR [rax],al
   140035048:	pop    rax
   140035049:	push   rax
   14003504a:	add    eax,DWORD PTR [rax]
   14003504c:	push   0x3
   14003504e:	add    BYTE PTR [rax],al
   140035050:	in     al,0x4
   140035052:	add    BYTE PTR [rax],al
   140035054:	add    BYTE PTR [rax],al
   140035056:	add    BYTE PTR [rax],al
   140035058:	cmp    al,0x61
   14003505a:	jae    0x1400350cf
   14003505c:	gs ins DWORD PTR es:[rdi],dx
   14003505e:	(bad)  
   14003505f:	ins    BYTE PTR es:[rdi],dx
   140035060:	jns    0x140035082
   140035062:	js     0x1400350d1
   140035064:	ins    BYTE PTR es:[rdi],dx
   140035065:	outs   dx,BYTE PTR ds:[rsi]
   140035066:	jae    0x1400350a5
   140035068:	and    dh,BYTE PTR [rbp+0x72]
   14003506b:	outs   dx,BYTE PTR ds:[rsi]
   14003506c:	cmp    dh,BYTE PTR [rbx+0x63]
   14003506f:	push   0x73616d65
   140035074:	sub    eax,0x7263696d
   140035079:	outs   dx,DWORD PTR ds:[rsi]
   14003507a:	jae    0x1400350eb
   14003507c:	data16 je 0x1400350ac
   14003507f:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140035082:	cmp    ah,BYTE PTR [rcx+0x73]
   140035085:	ins    DWORD PTR es:[rdi],dx
   140035086:	cs jbe 0x1400350ba
   140035089:	and    ah,BYTE PTR [rax]
   14003508b:	ins    DWORD PTR es:[rdi],dx
   14003508c:	(bad)  
   14003508d:	outs   dx,BYTE PTR ds:[rsi]
   14003508e:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   140035095:	jb     0x14003510a
   140035097:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14003509e:	xor    BYTE PTR [rdx],ah
   1400350a0:	ds or  eax,0x3c20200a
   1400350a6:	je     0x14003511a
   1400350a8:	jne    0x14003511d
   1400350aa:	je     0x1400350f5
   1400350ac:	outs   dx,BYTE PTR ds:[rsi]
   1400350ad:	outs   dx,WORD PTR ds:[rsi]
   1400350af:	and    BYTE PTR [rax+0x6d],bh
   1400350b2:	ins    BYTE PTR es:[rdi],dx
   1400350b3:	outs   dx,BYTE PTR ds:[rsi]
   1400350b4:	jae    0x1400350f3
   1400350b6:	and    dh,BYTE PTR [rbp+0x72]
   1400350b9:	outs   dx,BYTE PTR ds:[rsi]
   1400350ba:	cmp    dh,BYTE PTR [rbx+0x63]
   1400350bd:	push   0x73616d65
   1400350c2:	sub    eax,0x7263696d
   1400350c7:	outs   dx,DWORD PTR ds:[rsi]
   1400350c8:	jae    0x140035139
   1400350ca:	data16 je 0x1400350fa
   1400350cd:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400350d0:	cmp    ah,BYTE PTR [rcx+0x73]
   1400350d3:	ins    DWORD PTR es:[rdi],dx
   1400350d4:	cs jbe 0x14003510a
   1400350d7:	and    bh,BYTE PTR [rsi]
   1400350d9:	or     eax,0x2020200a
   1400350de:	and    BYTE PTR [rbx+rsi*2],bh
   1400350e1:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   1400350e5:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   1400350ed:	and    BYTE PTR [rax],ah
   1400350ef:	and    BYTE PTR [rax],ah
   1400350f1:	cmp    al,0x72
   1400350f3:	gs jno 0x14003516b
   1400350f6:	gs jae 0x14003516d
   1400350f9:	gs fs push rax
   1400350fc:	jb     0x140035167
   1400350fe:	jbe    0x140035169
   140035100:	ins    BYTE PTR es:[rdi],dx
   140035101:	gs addr32 gs jae 0x140035144
   140035106:	or     eax,0x2020200a
   14003510b:	and    BYTE PTR [rax],ah
   14003510d:	and    BYTE PTR [rax],ah
   14003510f:	and    BYTE PTR [rdx+rsi*2],bh
   140035112:	gs jno 0x14003518a
   140035115:	gs jae 0x14003518c
   140035118:	gs fs rex.RB js 0x140035182
   14003511d:	movsxd esi,DWORD PTR [rbp+0x74]
   140035120:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   140035127:	ins    BYTE PTR es:[rdi],dx
   140035128:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14003512c:	gs ins BYTE PTR es:[rdi],dx
   14003512e:	cmp    eax,0x49736122
   140035133:	outs   dx,BYTE PTR ds:[rsi]
   140035134:	jbe    0x1400351a5
   140035136:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14003513a:	and    BYTE PTR [rbp+0x69],dh
   14003513d:	movsxd esp,DWORD PTR [r11+0x65]
   140035141:	jae    0x1400351b6
   140035143:	cmp    eax,0x6c616622
   140035148:	jae    0x1400351af
   14003514a:	and    bh,BYTE PTR [rsi]
   14003514c:	cmp    al,0x2f
   14003514e:	jb     0x1400351b5
   140035150:	jno    0x1400351c7
   140035152:	gs jae 0x1400351c9
   140035155:	gs fs rex.RB js 0x1400351bf
   14003515a:	movsxd esi,DWORD PTR [rbp+0x74]
   14003515d:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   140035164:	ins    BYTE PTR es:[rdi],dx
   140035165:	ds or  eax,0x2020200a
   14003516b:	and    BYTE PTR [rax],ah
   14003516d:	and    BYTE PTR [rdi+rbp*1],bh
   140035170:	jb     0x1400351d7
   140035172:	jno    0x1400351e9
   140035174:	gs jae 0x1400351eb
   140035177:	gs fs push rax
   14003517a:	jb     0x1400351e5
   14003517c:	jbe    0x1400351e7
   14003517e:	ins    BYTE PTR es:[rdi],dx
   14003517f:	gs addr32 gs jae 0x1400351c2
   140035184:	or     eax,0x2020200a
   140035189:	and    BYTE PTR [rdi+rbp*1],bh
   14003518c:	jae    0x1400351f3
   14003518e:	movsxd esi,DWORD PTR [rbp+0x72]
   140035191:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   140035199:	cmp    al,0x2f
   14003519b:	je     0x14003520f
   14003519d:	jne    0x140035212
   14003519f:	je     0x1400351ea
   1400351a1:	outs   dx,BYTE PTR ds:[rsi]
   1400351a2:	outs   dx,WORD PTR ds:[rsi]
   1400351a4:	ds or  eax,0x3c20200a
   1400351aa:	fs gs jo 0x140035213
   1400351ae:	outs   dx,BYTE PTR ds:[rsi]
   1400351af:	fs outs dx,BYTE PTR gs:[rsi]
   1400351b2:	movsxd edi,DWORD PTR [rcx+0x3e]
   1400351b5:	or     eax,0x2020200a
   1400351ba:	and    BYTE PTR [rsp+riz*2],bh
   1400351bd:	gs jo  0x140035225
   1400351c0:	outs   dx,BYTE PTR ds:[rsi]
   1400351c1:	fs outs dx,BYTE PTR gs:[rsi]
   1400351c4:	je     0x140035207
   1400351c6:	jae    0x14003523b
   1400351c8:	gs ins DWORD PTR es:[rdi],dx
   1400351ca:	(bad)  
   1400351cb:	ins    BYTE PTR es:[rdi],dx
   1400351cc:	jns    0x14003520c
   1400351ce:	or     eax,0x2020200a
   1400351d3:	and    BYTE PTR [rax],ah
   1400351d5:	and    BYTE PTR [rcx+riz*2],bh
   1400351d8:	jae    0x14003524d
   1400351da:	gs ins DWORD PTR es:[rdi],dx
   1400351dc:	(bad)  
   1400351dd:	ins    BYTE PTR es:[rdi],dx
   1400351de:	jns    0x140035229
   1400351e0:	fs outs dx,BYTE PTR gs:[rsi]
   1400351e3:	je     0x14003524e
   1400351e5:	je     0x140035260
   1400351e7:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   1400351eb:	gs cmp eax,0x6e697722
   1400351f1:	xor    esi,DWORD PTR [rdx]
   1400351f3:	and    ah,BYTE PTR [rax]
   1400351f5:	outs   dx,BYTE PTR ds:[rsi]
   1400351f6:	(bad)  
   1400351f7:	ins    DWORD PTR es:[rdi],dx
   1400351f8:	gs cmp eax,0x63694d22
   1400351fe:	jb     0x14003526f
   140035200:	jae    0x140035271
   140035202:	data16 je 0x140035233
   140035205:	push   rdi
   140035206:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14003520d:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14003520f:	ins    DWORD PTR es:[rdi],dx
   140035210:	ins    DWORD PTR es:[rdi],dx
   140035211:	outs   dx,DWORD PTR ds:[rsi]
   140035212:	outs   dx,BYTE PTR ds:[rsi]
   140035213:	sub    eax,0x746e6f43
   140035218:	jb     0x140035289
   14003521a:	ins    BYTE PTR es:[rdi],dx
   14003521b:	jae    0x14003523f
   14003521d:	and    BYTE PTR [rsi+0x65],dh
   140035220:	jb     0x140035295
   140035222:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e36223d
   140035229:	xor    BYTE PTR [rsi],ch
   14003522b:	xor    BYTE PTR [rsi],ch
   14003522d:	xor    BYTE PTR [rdx],ah
   14003522f:	and    BYTE PTR [rax+0x75],dh
   140035232:	(bad)  
   140035233:	ins    BYTE PTR es:[rdi],dx
   140035234:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
   14003523b:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
   14003523f:	and    dh,BYTE PTR [rsi]
   140035241:	xor    eax,0x36623539
   140035246:	xor    al,0x31
   140035248:	xor    al,0x34
   14003524a:	movsxd esp,DWORD PTR [rbx+0x66]
   14003524d:	xor    DWORD PTR [rsi+riz*2+0x22],esp
   140035251:	and    BYTE PTR [rcx+riz*2+0x6e],ch
   140035255:	addr32 jne 0x1400352b9
   140035258:	addr32 gs cmp eax,0x20222a22
   14003525f:	jo     0x1400352d3
   140035261:	outs   dx,DWORD PTR ds:[rsi]
   140035262:	movsxd esp,DWORD PTR [rbp+0x73]
   140035265:	jae    0x1400352d6
   140035267:	jb     0x1400352aa
   140035269:	jb     0x1400352ce
   14003526b:	push   0x63657469
   140035270:	je     0x1400352e7
   140035272:	jb     0x1400352d9
   140035274:	cmp    eax,0x3e222a22
   140035279:	cmp    al,0x2f
   14003527b:	(bad)  
   14003527c:	jae    0x1400352f1
   14003527e:	gs ins DWORD PTR es:[rdi],dx
   140035280:	(bad)  
   140035281:	ins    BYTE PTR es:[rdi],dx
   140035282:	jns    0x1400352cd
   140035284:	fs outs dx,BYTE PTR gs:[rsi]
   140035287:	je     0x1400352f2
   140035289:	je     0x140035304
   14003528b:	ds or  eax,0x2020200a
   140035291:	and    BYTE PTR [rdi+rbp*1],bh
   140035294:	fs gs jo 0x1400352fd
   140035298:	outs   dx,BYTE PTR ds:[rsi]
   140035299:	fs outs dx,BYTE PTR gs:[rsi]
   14003529c:	je     0x1400352df
   14003529e:	jae    0x140035313
   1400352a0:	gs ins DWORD PTR es:[rdi],dx
   1400352a2:	(bad)  
   1400352a3:	ins    BYTE PTR es:[rdi],dx
   1400352a4:	jns    0x1400352e4
   1400352a6:	or     eax,0x3c20200a
   1400352ab:	(bad)  
   1400352ac:	fs gs jo 0x140035315
   1400352b0:	outs   dx,BYTE PTR ds:[rsi]
   1400352b1:	fs outs dx,BYTE PTR gs:[rsi]
   1400352b4:	movsxd edi,DWORD PTR [rcx+0x3e]
   1400352b7:	or     eax,0x3c20200a
   1400352bc:	fs gs jo 0x140035325
   1400352c0:	outs   dx,BYTE PTR ds:[rsi]
   1400352c1:	fs outs dx,BYTE PTR gs:[rsi]
   1400352c4:	movsxd edi,DWORD PTR [rcx+0x3e]
   1400352c7:	or     eax,0x2020200a
   1400352cc:	and    BYTE PTR [rsp+riz*2],bh
   1400352cf:	gs jo  0x140035337
   1400352d2:	outs   dx,BYTE PTR ds:[rsi]
   1400352d3:	fs outs dx,BYTE PTR gs:[rsi]
   1400352d6:	je     0x140035319
   1400352d8:	jae    0x14003534d
   1400352da:	gs ins DWORD PTR es:[rdi],dx
   1400352dc:	(bad)  
   1400352dd:	ins    BYTE PTR es:[rdi],dx
   1400352de:	jns    0x14003531e
   1400352e0:	or     eax,0x2020200a
   1400352e5:	and    BYTE PTR [rax],ah
   1400352e7:	and    BYTE PTR [rcx+riz*2],bh
   1400352ea:	jae    0x14003535f
   1400352ec:	gs ins DWORD PTR es:[rdi],dx
   1400352ee:	(bad)  
   1400352ef:	ins    BYTE PTR es:[rdi],dx
   1400352f0:	jns    0x14003533b
   1400352f2:	fs outs dx,BYTE PTR gs:[rsi]
   1400352f5:	je     0x140035360
   1400352f7:	je     0x140035372
   1400352f9:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   1400352fd:	gs cmp eax,0x6e697722
   140035303:	xor    esi,DWORD PTR [rdx]
   140035305:	and    ah,BYTE PTR [rax]
   140035307:	outs   dx,BYTE PTR ds:[rsi]
   140035308:	(bad)  
   140035309:	ins    DWORD PTR es:[rdi],dx
   14003530a:	gs cmp eax,0x63694d22
   140035310:	jb     0x140035381
   140035312:	jae    0x140035383
   140035314:	data16 je 0x140035345
   140035317:	push   rsi
   140035318:	rex.XB cmp DWORD PTR [r8],esi
   14003531b:	cs rex.XB push r10
   14003531e:	push   rsp
   14003531f:	and    ah,BYTE PTR [rax]
   140035321:	jbe    0x140035388
   140035323:	jb     0x140035398
   140035325:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e39223d
   14003532c:	xor    BYTE PTR [rsi],ch
   14003532e:	xor    dh,BYTE PTR [rcx]
   140035330:	xor    BYTE PTR [rdx],dh
   140035332:	xor    ch,BYTE PTR [rsi]
   140035334:	cmp    BYTE PTR [rdx],ah
   140035336:	and    BYTE PTR [rax+0x72],dh
   140035339:	outs   dx,DWORD PTR ds:[rsi]
   14003533a:	movsxd esp,DWORD PTR [rbp+0x73]
   14003533d:	jae    0x1400353ae
   14003533f:	jb     0x140035382
   140035341:	jb     0x1400353a6
   140035343:	push   0x63657469
   140035348:	je     0x1400353bf
   14003534a:	jb     0x1400353b1
   14003534c:	cmp    eax,0x646d6122
   140035351:	ss xor al,0x22
   140035354:	and    BYTE PTR [rax+0x75],dh
   140035357:	(bad)  
   140035358:	ins    BYTE PTR es:[rdi],dx
   140035359:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
   140035360:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
   140035364:	and    dh,BYTE PTR [rcx]
   140035366:	movsxd di,DWORD PTR [rax]
   140035369:	(bad)  
   14003536b:	(bad)  
   14003536c:	cmp    DWORD PTR [rcx+0x31],esp
   14003536f:	xor    DWORD PTR gs:[rax],edi
   140035372:	xor    esp,DWORD PTR gs:[rdx+0x22]
   140035376:	ds cmp al,0x2f
   140035379:	(bad)  
   14003537a:	jae    0x1400353ef
   14003537c:	gs ins DWORD PTR es:[rdi],dx
   14003537e:	(bad)  
   14003537f:	ins    BYTE PTR es:[rdi],dx
   140035380:	jns    0x1400353cb
   140035382:	fs outs dx,BYTE PTR gs:[rsi]
   140035385:	je     0x1400353f0
   140035387:	je     0x140035402
   140035389:	ds or  eax,0x2020200a
   14003538f:	and    BYTE PTR [rdi+rbp*1],bh
   140035392:	fs gs jo 0x1400353fb
   140035396:	outs   dx,BYTE PTR ds:[rsi]
   140035397:	fs outs dx,BYTE PTR gs:[rsi]
   14003539a:	je     0x1400353dd
   14003539c:	jae    0x140035411
   14003539e:	gs ins DWORD PTR es:[rdi],dx
   1400353a0:	(bad)  
   1400353a1:	ins    BYTE PTR es:[rdi],dx
   1400353a2:	jns    0x1400353e2
   1400353a4:	or     eax,0x3c20200a
   1400353a9:	(bad)  
   1400353aa:	fs gs jo 0x140035413
   1400353ae:	outs   dx,BYTE PTR ds:[rsi]
   1400353af:	fs outs dx,BYTE PTR gs:[rsi]
   1400353b2:	movsxd edi,DWORD PTR [rcx+0x3e]
   1400353b5:	or     eax,0x612f3c0a
   1400353ba:	jae    0x14003542f
   1400353bc:	gs ins DWORD PTR es:[rdi],dx
   1400353be:	(bad)  
   1400353bf:	ins    BYTE PTR es:[rdi],dx
   1400353c0:	jns    0x140035400
   1400353c2:	push   rax
   1400353c3:	rex.B

Disassembly of section .reloc:

0000000140036000 <.reloc>:
   140036000:	add    BYTE PTR [rax],al
   140036002:	add    al,BYTE PTR [rax]
   140036004:	in     al,dx
   140036005:	add    BYTE PTR [rax],al
   140036007:	add    al,al
   140036009:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003600a:	enter  0xe0a7,0xa7
   14003600e:	call   0x158ab70ba
   140036013:	test   al,0x20
   140036015:	test   al,0x28
   140036017:	test   al,0x30
   140036019:	test   al,0x0
   14003601b:	stos   BYTE PTR es:[rdi],al
   14003601c:	or     BYTE PTR [rdx-0x55e755f0],ch
   140036022:	and    BYTE PTR [rdx-0x53675370],ch
   140036028:	movabs al,ds:0xc0acb8acb0aca8ac
   140036031:	lods   al,BYTE PTR ds:[rsi]
   140036032:	enter  0xd0ac,0xac
   140036036:	loopne 0x140035fe4
   140036038:	call   0x138b050e9
   14003603d:	lods   al,BYTE PTR ds:[rsi]
   14003603e:	add    BYTE PTR [rbp-0x52ef52f8],ch
   140036044:	sbb    BYTE PTR [rbp-0x52cf52e0],ch
   14003604a:	cmp    BYTE PTR [rbp-0x52b752c0],ch
   140036050:	push   rax
   140036051:	lods   eax,DWORD PTR ds:[rsi]
   140036052:	pop    rax
   140036053:	lods   eax,DWORD PTR ds:[rsi]
   140036054:	(bad)  
   140036055:	lods   eax,DWORD PTR ds:[rsi]
   140036056:	push   0xffffffff80ad70ad
   14003605b:	lods   eax,DWORD PTR ds:[rsi]
   14003605c:	mov    BYTE PTR [rbp-0x52675270],ch
   140036062:	movabs al,ds:0xc0adb8adb0ada8ad
   14003606b:	lods   eax,DWORD PTR ds:[rsi]
   14003606c:	shr    BYTE PTR [rbp-0x521f5228],1
   140036072:	call   0x138b15124
   140036077:	lods   eax,DWORD PTR ds:[rsi]
   140036078:	add    BYTE PTR [rsi-0x51ef51f8],ch
   14003607e:	and    BYTE PTR [rsi-0x51cf51d8],ch
   140036084:	cmp    BYTE PTR [rsi-0x51b751c0],ch
   14003608a:	push   rax
   14003608b:	scas   al,BYTE PTR es:[rdi]
   14003608c:	pop    rax
   14003608d:	scas   al,BYTE PTR es:[rdi]
   14003608e:	(bad)  
   14003608f:	scas   al,BYTE PTR es:[rdi]
   140036090:	jo     0x140036040
   140036092:	js     0x140036042
   140036094:	sub    BYTE PTR [rsi-0x516f5178],0x98
   14003609b:	scas   al,BYTE PTR es:[rdi]
   14003609c:	movabs al,ds:0xc8aec0aeb0aea8ae
   1400360a5:	scas   al,BYTE PTR es:[rdi]
   1400360a6:	shr    BYTE PTR [rsi-0x511f5128],1
   1400360ac:	call   0x138b2515f
   1400360b1:	scas   al,BYTE PTR es:[rdi]
   1400360b2:	add    BYTE PTR [rdi-0x50e750f0],ch
   1400360b8:	and    BYTE PTR [rdi-0x50cf50d8],ch
   1400360be:	cmp    BYTE PTR [rdi-0x50b750c0],ch
   1400360c4:	push   rax
   1400360c5:	scas   eax,DWORD PTR es:[rdi]
   1400360c6:	(bad)  
   1400360c7:	scas   eax,DWORD PTR es:[rdi]
   1400360c8:	push   0x78af70af
   1400360cd:	scas   eax,DWORD PTR es:[rdi]
   1400360ce:	sub    BYTE PTR [rdi-0x506f5078],0x98
   1400360d5:	scas   eax,DWORD PTR es:[rdi]
   1400360d6:	movabs al,ds:0xc8afc0afb8afb0af
   1400360df:	scas   eax,DWORD PTR es:[rdi]
   1400360e0:	shr    BYTE PTR [rdi-0x501f5028],1
   1400360e6:	call   0x140b3519a
   1400360eb:	add    BYTE PTR [rax],al
   1400360ed:	adc    BYTE PTR [rdx],al
   1400360ef:	add    BYTE PTR [rax+0x3],ch
   1400360f5:	movabs al,ds:0xa020a018a010a008
   1400360fe:	sub    BYTE PTR [rax-0x5fc75fd0],ah
   140036104:	movabs al,ds:0xa068a060a058a050
   14003610e:	jo     0x1400360b0
   140036110:	js     0x1400360b2
   140036112:	and    BYTE PTR [rax-0x5f6f5f78],0xa0
   140036119:	movabs al,ds:0xa0c0a0b8a0b0a0a8
   140036122:	enter  0xd0a0,0xa0
   140036126:	fsub   DWORD PTR [rax-0x5f0f5f20]
   14003612c:	clc    
   14003612d:	movabs al,ds:0xa118a110a108a100
   140036136:	and    BYTE PTR [rcx-0x5ecf5ed8],ah
   14003613c:	rex movabs eax,ds:0xa160a158a150a148
   140036146:	push   0x78a170a1
   14003614b:	movabs eax,ds:0xa1a0a198a190a180
   140036154:	test   al,0xa1
   140036156:	mov    al,0xa1
   140036158:	mov    eax,0xc8a1c0a1
   14003615d:	movabs eax,ds:0xa1f0a1e8a1e0a1d0
   140036166:	clc    
   140036167:	movabs eax,ds:0xa218a210a208a200
   140036170:	and    BYTE PTR [rdx-0x5dcf5dd8],ah
   140036176:	cmp    BYTE PTR [rdx-0x5db75dc0],ah
   14003617c:	push   rax
   14003617d:	movabs ds:0xa270a268a260a258,al
   140036186:	js     0x14003612a
   140036188:	and    BYTE PTR [rdx-0x5d6f5d78],0x98
   14003618f:	movabs ds:0xa2b8a2b0a2a8a2a0,al
   140036198:	shl    BYTE PTR [rdx-0x5d2f5d38],0xd8
   14003619f:	movabs ds:0xa2f8a2f0a2e8a2e0,al
   1400361a8:	add    BYTE PTR [rbx-0x5cef5cf8],ah
   1400361ae:	and    BYTE PTR [rbx-0x5ccf5cd8],ah
   1400361b4:	cmp    BYTE PTR [rbx-0x5cb75cc0],ah
   1400361ba:	push   rax
   1400361bb:	movabs ds:0xa378a370a360a358,eax
   1400361c4:	and    BYTE PTR [rbx-0x5c6f5c78],0x98
   1400361cb:	movabs ds:0xa3c0a3b0a3a8a3a0,eax
   1400361d4:	enter  0xd0a3,0xa3
   1400361d8:	fsub   DWORD PTR [rbx-0x5c175c20]
   1400361de:	lock movabs ds:0xa418a410a400a3f8,eax
   1400361e8:	and    BYTE PTR [rax+rbp*1+0x38a430a4],ah
   1400361ef:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400361f0:	rex movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400361f2:	rex.W movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400361f4:	push   rax
   1400361f5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400361f6:	(bad)  
   1400361f7:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400361f8:	push   0x78a470a4
   1400361fd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400361fe:	and    BYTE PTR [rax+rcx*4-0x675b6f5c],0xa4
   140036206:	movabs al,ds:0xc8a4c0a4b8a4b0a4
   14003620f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140036210:	shl    BYTE PTR [rax+rbx*8-0x175b1f5c],1
   140036217:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140036218:	lock movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003621a:	add    BYTE PTR [rbp-0x5aef5af8],ah
   140036220:	sbb    BYTE PTR [rbp-0x5ad75ae0],ah
   140036226:	xor    BYTE PTR [rbp-0x5abf5ac8],ah
   14003622c:	push   rax
   14003622d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003622e:	pop    rax
   14003622f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140036230:	(bad)  
   140036231:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140036232:	push   0x78a570a5
   140036237:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140036238:	and    BYTE PTR [rbp-0x5a6f5a78],0xa0
   14003623f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140036240:	test   al,0xa5
   140036242:	mov    al,0xa5
   140036244:	mov    eax,0xc8a5c0a5
   140036249:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003624a:	shl    BYTE PTR [rbp-0x5a1f5a28],1
   140036250:	lock movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140036252:	clc    
   140036253:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140036254:	add    BYTE PTR [rsi-0x59ef59f8],ah
   14003625a:	sbb    BYTE PTR [rsi-0x59d759e0],ah
   140036260:	xor    BYTE PTR [rsi-0x59b759c0],ah
   140036266:	push   rax
   140036267:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140036268:	pop    rax
   140036269:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003626a:	(bad)  
   14003626b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003626c:	push   0x78a670a6
   140036271:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140036272:	and    BYTE PTR [rsi-0x59675970],0xa0
   140036279:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003627a:	test   al,0xa6
   14003627c:	mov    al,0xa6
   14003627e:	mov    eax,0xc8a6c0a6
   140036283:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140036284:	shl    BYTE PTR [rsi-0x59175920],1
   14003628a:	lock cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003628c:	clc    
   14003628d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003628e:	add    BYTE PTR [rdi-0x58ef58f8],ah
   140036294:	sbb    BYTE PTR [rdi-0x58cf58e0],ah
   14003629a:	cmp    BYTE PTR [rdi-0x58b758c0],ah
   1400362a0:	push   rax
   1400362a1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400362a2:	pop    rax
   1400362a3:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400362a4:	(bad)  
   1400362a5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400362a6:	push   0xffffffff80a770a7
   1400362ab:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400362ac:	mov    BYTE PTR [rdi-0x58675870],ah
   1400362b2:	movabs al,ds:0xc0a7b8a7b0a7a8a7
   1400362bb:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400362bc:	shl    BYTE PTR [rdi-0x581f5828],1
   1400362c2:	call   0x138ab536e
   1400362c7:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400362c8:	add    BYTE PTR [rax-0x57ef57f8],ch
   1400362ce:	and    BYTE PTR [rax-0x57cf57d8],ch
   1400362d4:	cmp    BYTE PTR [rax-0x57b757c0],ch
   1400362da:	push   rax
   1400362db:	test   al,0x58
   1400362dd:	test   al,0x60
   1400362df:	test   al,0x70
   1400362e1:	test   al,0x78
   1400362e3:	test   al,0x80
   1400362e5:	test   al,0x88
   1400362e7:	test   al,0x90
   1400362e9:	test   al,0x98
   1400362eb:	test   al,0xa0
   1400362ed:	test   al,0xa8
   1400362ef:	test   al,0xb0
   1400362f1:	test   al,0xc0
   1400362f3:	test   al,0xc8
   1400362f5:	test   al,0xd0
   1400362f7:	test   al,0xd8
   1400362f9:	test   al,0xe0
   1400362fb:	test   al,0xe8
   1400362fd:	test   al,0xf0
   1400362ff:	test   al,0xf8
   140036301:	test   al,0x0
   140036303:	test   eax,0xa918a910
   140036308:	and    BYTE PTR [rcx-0x56cf56d8],ch
   14003630e:	cmp    BYTE PTR [rcx-0x56b756c0],ch
   140036314:	push   rax
   140036315:	test   eax,0xa968a960
   14003631a:	jo     0x1400362c5
   14003631c:	js     0x1400362c7
   14003631e:	sub    BYTE PTR [rcx-0x566f5678],0x98
   140036325:	test   eax,0xa9b0a9a0
   14003632a:	mov    eax,0xc8a9c0a9
   14003632f:	test   eax,0xa9d8a9d0
   140036334:	loopne 0x1400362df
   140036336:	call   0x140ad53e4
   14003633b:	stos   BYTE PTR es:[rdi],al
   14003633c:	or     BYTE PTR [rdx-0x55e755f0],ch
   140036342:	and    BYTE PTR [rdx-0x55cf55d8],ch
   140036348:	cmp    BYTE PTR [rdx-0x55af55c0],ch
   14003634e:	pop    rax
   14003634f:	stos   BYTE PTR es:[rdi],al
   140036350:	(bad)  
   140036351:	stos   BYTE PTR es:[rdi],al
   140036352:	push   0x78aa70aa
   140036357:	stos   BYTE PTR es:[rdi],al
   140036358:	sub    BYTE PTR [rdx-0x556f5578],0xa0
   14003635f:	stos   BYTE PTR es:[rdi],al
   140036360:	test   al,0xaa
   140036362:	mov    al,0xaa
   140036364:	mov    eax,0xc8aac0aa
   140036369:	stos   BYTE PTR es:[rdi],al
   14003636a:	shr    BYTE PTR [rdx-0x551f5528],1
   140036370:	lock stos BYTE PTR es:[rdi],al
   140036372:	clc    
   140036373:	stos   BYTE PTR es:[rdi],al
   140036374:	add    BYTE PTR [rbx-0x54ef54f8],ch
   14003637a:	sbb    BYTE PTR [rbx-0x54d754e0],ch
   140036380:	xor    BYTE PTR [rbx-0x54b754c0],ch
   140036386:	push   rax
   140036387:	stos   DWORD PTR es:[rdi],eax
   140036388:	pop    rax
   140036389:	stos   DWORD PTR es:[rdi],eax
   14003638a:	(bad)  
   14003638b:	stos   DWORD PTR es:[rdi],eax
   14003638c:	push   0x78ab70ab
   140036391:	stos   DWORD PTR es:[rdi],eax
   140036392:	sub    BYTE PTR [rbx-0x54675470],0xa0
   140036399:	stos   DWORD PTR es:[rdi],eax
   14003639a:	test   al,0xab
   14003639c:	mov    al,0xab
   14003639e:	mov    eax,0xc8abc0ab
   1400363a3:	stos   DWORD PTR es:[rdi],eax
   1400363a4:	shr    BYTE PTR [rbx-0x54175420],1
   1400363aa:	lock stos DWORD PTR es:[rdi],eax
   1400363ac:	clc    
   1400363ad:	stos   DWORD PTR es:[rdi],eax
   1400363ae:	add    BYTE PTR [rax+rcx*1+0x18ac10ac],ch
   1400363b5:	lods   al,BYTE PTR ds:[rsi]
   1400363b6:	and    BYTE PTR [rax+rsi*1+0x40ac38ac],ch
   1400363bd:	lods   al,BYTE PTR ds:[rsi]
   1400363be:	rex.W lods al,BYTE PTR ds:[rsi]
   1400363c0:	push   rax
   1400363c1:	lods   al,BYTE PTR ds:[rsi]
   1400363c2:	pop    rax
   1400363c3:	lods   al,BYTE PTR ds:[rsi]
   1400363c4:	(bad)  
   1400363c5:	lods   al,BYTE PTR ds:[rsi]
   1400363c6:	push   0xffffffff80ac70ac
   1400363cb:	lods   al,BYTE PTR ds:[rsi]
   1400363cc:	mov    BYTE PTR [rax+rdx*4-0x5f536754],ch
   1400363d3:	lods   al,BYTE PTR ds:[rsi]
   1400363d4:	test   al,0xac
   1400363d6:	mov    al,0xac
   1400363d8:	mov    eax,0xd0acc0ac
   1400363dd:	lods   al,BYTE PTR ds:[rsi]
   1400363de:	fsubr  DWORD PTR [rax+riz*8-0xf531754]
   1400363e5:	lods   al,BYTE PTR ds:[rsi]
   1400363e6:	clc    
   1400363e7:	lods   al,BYTE PTR ds:[rsi]
   1400363e8:	add    BYTE PTR [rbp-0x52ef52f8],ch
   1400363ee:	and    BYTE PTR [rbp-0x52cf52d8],ch
   1400363f4:	cmp    BYTE PTR [rbp-0x52b752c0],ch
   1400363fa:	push   rax
   1400363fb:	lods   eax,DWORD PTR ds:[rsi]
   1400363fc:	pop    rax
   1400363fd:	lods   eax,DWORD PTR ds:[rsi]
   1400363fe:	(bad)  
   1400363ff:	lods   eax,DWORD PTR ds:[rsi]
   140036400:	jo     0x1400363af
   140036402:	js     0x1400363b1
   140036404:	sub    BYTE PTR [rbp-0x526f5278],0x98
   14003640b:	lods   eax,DWORD PTR ds:[rsi]
   14003640c:	movabs al,ds:0xc8adc0adb0ada8ad
   140036415:	lods   eax,DWORD PTR ds:[rsi]
   140036416:	shr    BYTE PTR [rbp-0x521f5228],1
   14003641c:	call   0x138b154ce
   140036421:	lods   eax,DWORD PTR ds:[rsi]
   140036422:	add    BYTE PTR [rsi-0x51e751f0],ch
   140036428:	and    BYTE PTR [rsi-0x51cf51d8],ch
   14003642e:	cmp    BYTE PTR [rsi-0x51b751c0],ch
   140036434:	push   rax
   140036435:	scas   al,BYTE PTR es:[rdi]
   140036436:	(bad)  
   140036437:	scas   al,BYTE PTR es:[rdi]
   140036438:	push   0x78ae70ae
   14003643d:	scas   al,BYTE PTR es:[rdi]
   14003643e:	sub    BYTE PTR [rsi-0x516f5178],0x98
   140036445:	scas   al,BYTE PTR es:[rdi]
   140036446:	movabs al,ds:0xc8aec0aeb8aeb0ae
   14003644f:	scas   al,BYTE PTR es:[rdi]
   140036450:	shr    BYTE PTR [rsi-0x511f5128],1
   140036456:	call   0x140b25509
   14003645b:	scas   eax,DWORD PTR es:[rdi]
   14003645c:	or     BYTE PTR [rdi-0x50e750f0],ch
   140036462:	and    BYTE PTR [rdi-0x50cf50d8],ch
   140036468:	cmp    BYTE PTR [rdi-0x50af50c0],ch
   14003646e:	pop    rax
   14003646f:	scas   eax,DWORD PTR es:[rdi]
   140036470:	(bad)  
   140036471:	scas   eax,DWORD PTR es:[rdi]
   140036472:	push   0x78af70af
   140036477:	scas   eax,DWORD PTR es:[rdi]
   140036478:	sub    BYTE PTR [rdi-0x506f5078],0xa0
   14003647f:	scas   eax,DWORD PTR es:[rdi]
   140036480:	test   al,0xaf
   140036482:	mov    al,0xaf
   140036484:	mov    eax,0xc8afc0af
   140036489:	scas   eax,DWORD PTR es:[rdi]
   14003648a:	shr    BYTE PTR [rdi-0x501f5028],1
   140036490:	lock scas eax,DWORD PTR es:[rdi]
   140036492:	clc    
   140036493:	scas   eax,DWORD PTR es:[rdi]
   140036494:	add    BYTE PTR [rax],ah
   140036496:	add    al,BYTE PTR [rax]
   140036498:	xor    al,0x2
   14003649a:	add    BYTE PTR [rax],al
   14003649c:	add    BYTE PTR [rax-0x5fef5ff8],ah
   1400364a2:	sbb    BYTE PTR [rax-0x5fd75fe0],ah
   1400364a8:	xor    BYTE PTR [rax-0x5fb75fc0],ah
   1400364ae:	push   rax
   1400364af:	movabs al,ds:0xa070a068a060a058
   1400364b8:	js     0x14003645a
   1400364ba:	and    BYTE PTR [rax-0x5f675f70],0xa0
   1400364c1:	movabs al,ds:0xa0c0a0b8a0b0a0a8
   1400364ca:	enter  0xd0a0,0xa0
   1400364ce:	loopne 0x140036470
   1400364d0:	call   0x138a45575
   1400364d5:	movabs al,ds:0xa118a110a108a100
   1400364de:	and    BYTE PTR [rcx-0x5ec75ed0],ah
   1400364e4:	rex movabs eax,ds:0xa160a158a150a148
   1400364ee:	push   0xffffffff80a170a1
   1400364f3:	movabs eax,ds:0xa1a0a198a190a188
   1400364fc:	test   al,0xa1
   1400364fe:	mov    al,0xa1
   140036500:	mov    eax,0xd0a1c0a1
   140036505:	movabs eax,ds:0xa1f0a1e8a1e0a1d8
   14003650e:	clc    
   14003650f:	movabs eax,ds:0xa220a210a208a200
   140036518:	sub    BYTE PTR [rdx-0x5dc75dd0],ah
   14003651e:	movabs ds:0xa260a258a250a248,al
   140036528:	jo     0x1400364cc
   14003652a:	js     0x1400364ce
   14003652c:	and    BYTE PTR [rdx-0x5d6f5d78],0x98
   140036533:	movabs ds:0xa2c0a2b0a2a8a2a0,al
   14003653c:	enter  0xd0a2,0xa2
   140036540:	fsub   DWORD PTR [rdx-0x5d175d20]
   140036546:	lock movabs ds:0xa318a310a300a2f8,al
   140036550:	and    BYTE PTR [rbx-0x5ccf5cd8],ah
   140036556:	cmp    BYTE PTR [rbx-0x5cb75cc0],ah
   14003655c:	push   rax
   14003655d:	movabs ds:0xa378a370a368a360,eax
   140036566:	and    BYTE PTR [rbx-0x5c6f5c78],0x98
   14003656d:	movabs ds:0xa3c0a3b8a3b0a3a0,eax
   140036576:	enter  0xd0a3,0xa3
   14003657a:	fsub   DWORD PTR [rbx-0x5c175c20]
   140036580:	lock movabs ds:0xa418a410a408a400,eax
   14003658a:	and    BYTE PTR [rax+rbp*1+0x38a430a4],ah
   140036591:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140036592:	rex movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140036594:	push   rax
   140036595:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140036596:	pop    rax
   140036597:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140036598:	(bad)  
   140036599:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003659a:	push   0x78a470a4
   14003659f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400365a0:	and    BYTE PTR [rax+rcx*4-0x5f5b6f5c],0xa4
   1400365a8:	test   al,0xa4
   1400365aa:	mov    al,0xa4
   1400365ac:	mov    eax,0xc8a4c0a4
   1400365b1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400365b2:	shl    BYTE PTR [rax+rbx*8-0xf5b1f5c],1
   1400365b9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400365ba:	clc    
   1400365bb:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400365bc:	add    BYTE PTR [rbp-0x5aef5af8],ah
   1400365c2:	sbb    BYTE PTR [rbp-0x5ad75ae0],ah
   1400365c8:	xor    BYTE PTR [rbp-0x5ab75ac0],ah
   1400365ce:	push   rax
   1400365cf:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400365d0:	pop    rax
   1400365d1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400365d2:	(bad)  
   1400365d3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400365d4:	push   0x78a570a5
   1400365d9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400365da:	and    BYTE PTR [rbp-0x5a675a70],0xa0
   1400365e1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400365e2:	test   al,0xa5
   1400365e4:	mov    al,0xa5
   1400365e6:	mov    eax,0xc8a5c0a5
   1400365eb:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400365ec:	shl    BYTE PTR [rbp-0x5a175a20],1
   1400365f2:	lock movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400365f4:	clc    
   1400365f5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400365f6:	add    BYTE PTR [rsi-0x59ef59f8],ah
   1400365fc:	sbb    BYTE PTR [rsi-0x59cf59e0],ah
   140036602:	cmp    BYTE PTR [rsi-0x59b759c0],ah
   140036608:	push   rax
   140036609:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003660a:	pop    rax
   14003660b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003660c:	(bad)  
   14003660d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003660e:	push   0xffffffff80a670a6
   140036613:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140036614:	mov    BYTE PTR [rsi-0x59675970],ah
   14003661a:	movabs al,ds:0xc0a6b8a6b0a6a8a6
   140036623:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140036624:	shl    BYTE PTR [rsi-0x591f5928],1
   14003662a:	call   0x138aa56d5
   14003662f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140036630:	add    BYTE PTR [rdi-0x58ef58f8],ah
   140036636:	and    BYTE PTR [rdi-0x58cf58d8],ah
   14003663c:	cmp    BYTE PTR [rdi-0x58b758c0],ah
   140036642:	push   rax
   140036643:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140036644:	pop    rax
   140036645:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140036646:	(bad)  
   140036647:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140036648:	jo     0x1400365f1
   14003664a:	js     0x1400365f3
   14003664c:	and    BYTE PTR [rdi-0x586f5878],0x98
   140036653:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140036654:	movabs al,ds:0xc8a7c0a7b0a7a8a7
   14003665d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003665e:	shl    BYTE PTR [rdi-0x581f5828],1
   140036664:	call   0x138ab5710
   140036669:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003666a:	add    BYTE PTR [rax-0x57e757f0],ch
   140036670:	and    BYTE PTR [rax-0x57cf57d8],ch
   140036676:	cmp    BYTE PTR [rax-0x57b757c0],ch
   14003667c:	push   rax
   14003667d:	test   al,0x60
   14003667f:	test   al,0x68
   140036681:	test   al,0x70
   140036683:	test   al,0x78
   140036685:	test   al,0x80
   140036687:	test   al,0x88
   140036689:	test   al,0x90
   14003668b:	test   al,0x98
   14003668d:	test   al,0xa0
   14003668f:	test   al,0xb0
   140036691:	test   al,0xb8
   140036693:	test   al,0xc0
   140036695:	test   al,0xc8
   140036697:	test   al,0xd0
   140036699:	test   al,0xd8
   14003669b:	test   al,0xe0
   14003669d:	test   al,0xe8
   14003669f:	test   al,0xf0
   1400366a1:	test   al,0x0
   1400366a3:	test   eax,0xa910a908
   1400366a8:	sbb    BYTE PTR [rcx-0x56d756e0],ch
   1400366ae:	xor    BYTE PTR [rcx-0x56bf56c8],ch
   1400366b4:	push   rax
   1400366b5:	test   eax,0xa960a958
   1400366ba:	push   0x78a970a9
   1400366bf:	test   eax,0xa988a980
   1400366c4:	nop
   1400366c5:	test   eax,0x30000000
   1400366ca:	add    al,BYTE PTR [rax]
   1400366cc:	enter  0x0,0x0
   1400366d0:	(bad)  
   1400366d1:	movabs al,ds:0xa080a078a070a068
   1400366da:	mov    BYTE PTR [rax-0x5f675f70],ah
   1400366e0:	movabs al,ds:0xc0a0b8a0b0a0a8a0
   1400366e9:	movabs al,ds:0xa0e0a0d8a0d0a0c8
   1400366f2:	call   0x138a45797
   1400366f7:	movabs al,ds:0xa118a110a108a100
   140036700:	and    BYTE PTR [rcx-0x5ecf5ed8],ah
   140036706:	cmp    BYTE PTR [rcx-0x5eb75ec0],ah
   14003670c:	push   rax
   14003670d:	movabs eax,ds:0xa170a168a160a158
   140036716:	js     0x1400366b9
   140036718:	and    BYTE PTR [rcx-0x5e6f5e78],0x98
   14003671f:	movabs eax,ds:0xa1b8a1b0a1a8a1a0
   140036728:	shl    BYTE PTR [rcx-0x5e2f5e38],0xd8
   14003672f:	movabs eax,ds:0xa1f8a1f0a1e8a1e0
   140036738:	add    BYTE PTR [rdx-0x5def5df8],ah
   14003673e:	sbb    BYTE PTR [rdx-0x5dd75de0],ah
   140036744:	xor    BYTE PTR [rdx-0x5dbf5dc8],ah
   14003674a:	rex.W movabs ds:0xa270a268a260a258,al
   140036754:	js     0x1400366f8
   140036756:	and    BYTE PTR [rdx-0x5d6f5d78],0x98
   14003675d:	movabs ds:0xa2b8a2b0a2a8a2a0,al
   140036766:	shl    BYTE PTR [rdx-0x5d2f5d38],0xd8
   14003676d:	movabs ds:0xa2f8a2f0a2e8a2e0,al
   140036776:	add    BYTE PTR [rbx-0x5cef5cf8],ah
   14003677c:	sbb    BYTE PTR [rbx-0x5ccf5ce0],ah
   140036782:	cmp    BYTE PTR [rbx-0x5cb75cc0],ah
   140036788:	push   rax
   140036789:	movabs ds:0x80000000a360a358,eax
   140036792:	add    al,BYTE PTR [rax]
   140036794:	adc    BYTE PTR [rax],al
   140036796:	add    BYTE PTR [rax],al
   140036798:	(bad)  
   140036799:	movabs ds:0x1000a278a270a268,al
   1400367a2:	add    eax,DWORD PTR [rax]
   1400367a4:	lods   al,BYTE PTR ds:[rsi]
   1400367a5:	add    BYTE PTR [rax],al
   1400367a7:	add    BYTE PTR [rax],al
   1400367a9:	movabs al,ds:0xa080a058a030a008
   1400367b2:	test   al,0xa0
   1400367b4:	mov    al,0xa0
   1400367b6:	fsub   DWORD PTR [rax-0x5ecf5f00]
   1400367bc:	(bad)  
   1400367bd:	movabs eax,ds:0xa230a200a1c8a198
   1400367c6:	(bad)  
   1400367c7:	movabs ds:0xa320a2f0a2c0a290,al
   1400367d0:	push   rax
   1400367d1:	movabs ds:0xa410a3e0a3b0a380,eax
   1400367da:	rex.W movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400367dc:	and    BYTE PTR [rax+rdi*4+0x28a4f0a4],0xa5
   1400367e4:	push   0xffffffffe0a5a8a5
   1400367e9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400367ea:	sbb    BYTE PTR [rsi-0x597f59b0],ah
   1400367f0:	mov    al,0xa6
   1400367f2:	loopne 0x14003679a
   1400367f4:	and    BYTE PTR [rdi-0x586758a0],ah
   1400367fa:	enter  0xa7,0xa8
   1400367fe:	cmp    BYTE PTR [rax-0x57575790],ch
   140036804:	loopne 0x1400367ae
   140036806:	sbb    BYTE PTR [rcx-0x567f56b8],ch
   14003680c:	mov    eax,0x10a9e8a9
   140036811:	stos   BYTE PTR es:[rdi],al
   140036812:	stos   BYTE PTR es:[rdi],al
   140036814:	js     0x1400367c0
   140036816:	mov    al,0xaa
   140036818:	lock stos BYTE PTR es:[rdi],al
   14003681a:	and    BYTE PTR [rbx-0x547754a8],ch
   140036820:	shr    BYTE PTR [rbx-0x53df5410],0x58
   140036827:	lods   al,BYTE PTR ds:[rsi]
   140036828:	nop
   140036829:	lods   al,BYTE PTR ds:[rsi]
   14003682a:	enter  0xac,0xad
   14003682e:	xor    BYTE PTR [rbp-0x52675298],ch
   140036834:	enter  0xad,0xae
   140036838:	xor    BYTE PTR [rsi-0x516f51a0],ch
   14003683e:	enter  0xf8ae,0xae
   140036842:	and    BYTE PTR [rdi-0x507f50b0],ch
   140036848:	mov    eax,0xaff0af
   14003684d:	and    BYTE PTR [rbx],al
   14003684f:	add    BYTE PTR [rax+rax*1+0x0],al
   140036853:	add    BYTE PTR [rax],ch
   140036855:	movabs al,ds:0xa0e8a0b8a088a058
   14003685e:	and    BYTE PTR [rcx-0x5e6f5ea8],ah
   140036864:	shl    BYTE PTR [rcx-0x5dd75e10],0x60
   14003686b:	movabs ds:0xa330a2f8a2c8a290,al
   140036874:	push   0xffffffffd0a3a0a3
   140036879:	movabs ds:0xa4b0a478a440a408,eax
   140036882:	loopne 0x140036828
   140036884:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   140036886:	push   rax
   140036887:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140036888:	pop    rax
   140036889:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003688a:	(bad)  
   14003688b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003688c:	push   0xa570a5
	...
