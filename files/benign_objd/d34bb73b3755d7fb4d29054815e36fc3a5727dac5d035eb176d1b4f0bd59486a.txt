
d34bb73b3755d7fb4d29054815e36fc3a5727dac5d035eb176d1b4f0bd59486a.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	ret    0x0
   140001003:	int3   
   140001004:	int3   
   140001005:	int3   
   140001006:	int3   
   140001007:	int3   
   140001008:	int3   
   140001009:	int3   
   14000100a:	int3   
   14000100b:	int3   
   14000100c:	int3   
   14000100d:	int3   
   14000100e:	int3   
   14000100f:	int3   
   140001010:	rex push rbx
   140001012:	sub    rsp,0x20
   140001016:	lea    rax,[rip+0x1f7fb]        # 0x140020818
   14000101d:	mov    rbx,rcx
   140001020:	mov    QWORD PTR [rcx],rax
   140001023:	test   dl,0x1
   140001026:	je     0x14000102d
   140001028:	call   0x14001ee46
   14000102d:	mov    rax,rbx
   140001030:	add    rsp,0x20
   140001034:	pop    rbx
   140001035:	ret    
   140001036:	int3   
   140001037:	int3   
   140001038:	int3   
   140001039:	int3   
   14000103a:	int3   
   14000103b:	int3   
   14000103c:	int3   
   14000103d:	int3   
   14000103e:	int3   
   14000103f:	int3   
   140001040:	mov    QWORD PTR [rsp+0x8],rbx
   140001045:	push   rdi
   140001046:	sub    rsp,0x40
   14000104a:	mov    rdi,rcx
   14000104d:	lea    rcx,[rsp+0x58]
   140001052:	xor    edx,edx
   140001054:	call   QWORD PTR [rip+0x1f056]        # 0x1400200b0
   14000105a:	mov    r11,QWORD PTR [rip+0x3155f]        # 0x1400325c0
   140001061:	mov    rcx,QWORD PTR [rip+0x1f040]        # 0x1400200a8
   140001068:	mov    QWORD PTR [rsp+0x60],r11
   14000106d:	call   QWORD PTR [rip+0x1f02d]        # 0x1400200a0
   140001073:	mov    rcx,rdi
   140001076:	mov    rdx,rax
   140001079:	call   QWORD PTR [rip+0x1f019]        # 0x140020098
   14000107f:	mov    rbx,rax
   140001082:	test   rax,rax
   140001085:	jne    0x1400010e6
   140001087:	mov    rbx,QWORD PTR [rsp+0x60]
   14000108c:	test   rbx,rbx
   14000108f:	jne    0x1400010e6
   140001091:	lea    rcx,[rsp+0x60]
   140001096:	mov    rdx,rdi
   140001099:	call   QWORD PTR [rip+0x1eff1]        # 0x140020090
   14000109f:	cmp    rax,0xffffffffffffffff
   1400010a3:	jne    0x1400010c9
   1400010a5:	lea    rdx,[rip+0x1f79c]        # 0x140020848
   1400010ac:	lea    rcx,[rsp+0x20]
   1400010b1:	call   QWORD PTR [rip+0x1f0e9]        # 0x1400201a0
   1400010b7:	lea    rdx,[rip+0x2c26a]        # 0x14002d328
   1400010be:	lea    rcx,[rsp+0x20]
   1400010c3:	call   0x14001ee4c
   1400010c8:	int3   
   1400010c9:	mov    rbx,QWORD PTR [rsp+0x60]
   1400010ce:	mov    rcx,rbx
   1400010d1:	mov    QWORD PTR [rip+0x314e8],rbx        # 0x1400325c0
   1400010d8:	call   QWORD PTR [rip+0x1efaa]        # 0x140020088
   1400010de:	mov    rcx,rbx
   1400010e1:	call   0x14001ed7c
   1400010e6:	lea    rcx,[rsp+0x58]
   1400010eb:	call   QWORD PTR [rip+0x1ef8f]        # 0x140020080
   1400010f1:	mov    rax,rbx
   1400010f4:	mov    rbx,QWORD PTR [rsp+0x50]
   1400010f9:	add    rsp,0x40
   1400010fd:	pop    rdi
   1400010fe:	ret    
   1400010ff:	int3   
   140001100:	mov    QWORD PTR [rsp+0x8],rbx
   140001105:	push   rdi
   140001106:	sub    rsp,0x20
   14000110a:	mov    rbx,rcx
   14000110d:	mov    ecx,0x8
   140001112:	mov    rdi,rdx
   140001115:	call   0x14001ee64
   14000111a:	test   rax,rax
   14000111d:	je     0x140001136
   14000111f:	mov    rdx,QWORD PTR [rdi]
   140001122:	mov    r8,QWORD PTR [rdx]
   140001125:	mov    QWORD PTR [rax],r8
   140001128:	mov    QWORD PTR [rbx],rax
   14000112b:	mov    rbx,QWORD PTR [rsp+0x30]
   140001130:	add    rsp,0x20
   140001134:	pop    rdi
   140001135:	ret    
   140001136:	mov    QWORD PTR [rbx],0x0
   14000113d:	mov    rbx,QWORD PTR [rsp+0x30]
   140001142:	add    rsp,0x20
   140001146:	pop    rdi
   140001147:	ret    
   140001148:	int3   
   140001149:	int3   
   14000114a:	int3   
   14000114b:	int3   
   14000114c:	int3   
   14000114d:	int3   
   14000114e:	int3   
   14000114f:	int3   
   140001150:	mov    rcx,QWORD PTR [rcx]
   140001153:	jmp    0x14001ee46
   140001158:	int3   
   140001159:	int3   
   14000115a:	int3   
   14000115b:	int3   
   14000115c:	int3   
   14000115d:	int3   
   14000115e:	int3   
   14000115f:	int3   
   140001160:	mov    QWORD PTR [rsp+0x8],rbx
   140001165:	push   rdi
   140001166:	sub    rsp,0x20
   14000116a:	mov    ecx,0x10
   14000116f:	mov    rdi,r8
   140001172:	mov    rbx,rdx
   140001175:	call   0x14001ee64
   14000117a:	test   rax,rax
   14000117d:	je     0x140001199
   14000117f:	mov    rdx,rdi
   140001182:	mov    rcx,rax
   140001185:	call   QWORD PTR [rip+0x1f5ad]        # 0x140020738
   14000118b:	mov    QWORD PTR [rbx],rax
   14000118e:	mov    rbx,QWORD PTR [rsp+0x30]
   140001193:	add    rsp,0x20
   140001197:	pop    rdi
   140001198:	ret    
   140001199:	mov    QWORD PTR [rbx],0x0
   1400011a0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400011a5:	add    rsp,0x20
   1400011a9:	pop    rdi
   1400011aa:	ret    
   1400011ab:	int3   
   1400011ac:	int3   
   1400011ad:	int3   
   1400011ae:	int3   
   1400011af:	int3   
   1400011b0:	cmp    rdx,r8
   1400011b3:	je     0x14000120e
   1400011b5:	mov    QWORD PTR [rsp+0x8],rbx
   1400011ba:	mov    QWORD PTR [rsp+0x10],rsi
   1400011bf:	push   rdi
   1400011c0:	sub    rsp,0x20
   1400011c4:	mov    rdi,r9
   1400011c7:	mov    rsi,r8
   1400011ca:	mov    rbx,rdx
   1400011cd:	nop    DWORD PTR [rax]
   1400011d0:	mov    ecx,0x10
   1400011d5:	call   0x14001ee64
   1400011da:	test   rax,rax
   1400011dd:	je     0x1400011ed
   1400011df:	mov    rdx,QWORD PTR [rdi]
   1400011e2:	mov    rcx,rax
   1400011e5:	call   QWORD PTR [rip+0x1f54d]        # 0x140020738
   1400011eb:	jmp    0x1400011ef
   1400011ed:	xor    eax,eax
   1400011ef:	mov    QWORD PTR [rbx],rax
   1400011f2:	add    rbx,0x8
   1400011f6:	add    rdi,0x8
   1400011fa:	cmp    rbx,rsi
   1400011fd:	jne    0x1400011d0
   1400011ff:	mov    rbx,QWORD PTR [rsp+0x30]
   140001204:	mov    rsi,QWORD PTR [rsp+0x38]
   140001209:	add    rsp,0x20
   14000120d:	pop    rdi
   14000120e:	repz ret 
   140001210:	mov    QWORD PTR [rsp+0x8],rbx
   140001215:	mov    QWORD PTR [rsp+0x10],rsi
   14000121a:	push   rdi
   14000121b:	sub    rsp,0x30
   14000121f:	xor    r9d,r9d
   140001222:	mov    rsi,rdx
   140001225:	mov    rdi,rcx
   140001228:	lea    edx,[r9+0x30]
   14000122c:	lea    r8d,[r9+0x8]
   140001230:	mov    rcx,rsi
   140001233:	mov    BYTE PTR [rsp+0x20],0x0
   140001238:	call   QWORD PTR [rip+0x1f4ea]        # 0x140020728
   14000123e:	lea    rcx,[rax+0x18]
   140001242:	mov    rbx,rax
   140001245:	test   rcx,rcx
   140001248:	je     0x140001254
   14000124a:	lea    rdx,[rdi+0x18]
   14000124e:	call   QWORD PTR [rip+0x1f544]        # 0x140020798
   140001254:	lea    rcx,[rbx+0x20]
   140001258:	test   rcx,rcx
   14000125b:	je     0x140001267
   14000125d:	lea    rdx,[rdi+0x20]
   140001261:	call   QWORD PTR [rip+0x1f4d1]        # 0x140020738
   140001267:	test   BYTE PTR [rdi],0x1
   14000126a:	je     0x140001272
   14000126c:	or     QWORD PTR [rbx],0x1
   140001270:	jmp    0x140001276
   140001272:	and    QWORD PTR [rbx],0xfffffffffffffffe
   140001276:	mov    rcx,QWORD PTR [rdi+0x8]
   14000127a:	test   rcx,rcx
   14000127d:	je     0x140001294
   14000127f:	mov    rdx,rsi
   140001282:	call   0x140001210
   140001287:	mov    QWORD PTR [rbx+0x8],rax
   14000128b:	and    QWORD PTR [rax],0x3
   14000128f:	or     QWORD PTR [rax],rbx
   140001292:	jmp    0x14000129c
   140001294:	mov    QWORD PTR [rbx+0x8],0x0
   14000129c:	mov    rcx,QWORD PTR [rdi+0x10]
   1400012a0:	test   rcx,rcx
   1400012a3:	je     0x1400012cb
   1400012a5:	mov    rdx,rsi
   1400012a8:	call   0x140001210
   1400012ad:	mov    QWORD PTR [rbx+0x10],rax
   1400012b1:	and    QWORD PTR [rax],0x3
   1400012b5:	or     QWORD PTR [rax],rbx
   1400012b8:	mov    rax,rbx
   1400012bb:	mov    rbx,QWORD PTR [rsp+0x40]
   1400012c0:	mov    rsi,QWORD PTR [rsp+0x48]
   1400012c5:	add    rsp,0x30
   1400012c9:	pop    rdi
   1400012ca:	ret    
   1400012cb:	mov    rsi,QWORD PTR [rsp+0x48]
   1400012d0:	mov    QWORD PTR [rbx+0x10],0x0
   1400012d8:	mov    rax,rbx
   1400012db:	mov    rbx,QWORD PTR [rsp+0x40]
   1400012e0:	add    rsp,0x30
   1400012e4:	pop    rdi
   1400012e5:	ret    
   1400012e6:	int3   
   1400012e7:	int3   
   1400012e8:	int3   
   1400012e9:	int3   
   1400012ea:	int3   
   1400012eb:	int3   
   1400012ec:	int3   
   1400012ed:	int3   
   1400012ee:	int3   
   1400012ef:	int3   
   1400012f0:	rex push rbx
   1400012f2:	sub    rsp,0x20
   1400012f6:	mov    rbx,rcx
   1400012f9:	test   rdx,rdx
   1400012fc:	je     0x140001317
   1400012fe:	test   rcx,rcx
   140001301:	je     0x140001362
   140001303:	mov    r8d,0x70
   140001309:	call   0x14001edd4
   14000130e:	mov    rax,rbx
   140001311:	add    rsp,0x20
   140001315:	pop    rbx
   140001316:	ret    
   140001317:	test   rcx,rcx
   14000131a:	je     0x140001362
   14000131c:	xor    eax,eax
   14000131e:	mov    QWORD PTR [rcx],rax
   140001321:	mov    QWORD PTR [rcx+0x8],rax
   140001325:	mov    DWORD PTR [rcx+0x10],eax
   140001328:	mov    DWORD PTR [rcx+0x14],eax
   14000132b:	mov    DWORD PTR [rcx+0x18],eax
   14000132e:	mov    DWORD PTR [rcx+0x1c],eax
   140001331:	mov    QWORD PTR [rcx+0x20],rax
   140001335:	mov    QWORD PTR [rcx+0x28],rax
   140001339:	mov    QWORD PTR [rcx+0x30],rax
   14000133d:	mov    QWORD PTR [rcx+0x38],rax
   140001341:	mov    QWORD PTR [rcx+0x40],rax
   140001345:	mov    QWORD PTR [rcx+0x48],rax
   140001349:	mov    QWORD PTR [rcx+0x50],rax
   14000134d:	mov    QWORD PTR [rcx+0x58],rax
   140001351:	mov    QWORD PTR [rcx+0x60],rax
   140001355:	mov    QWORD PTR [rcx+0x68],rax
   140001359:	mov    rax,rbx
   14000135c:	add    rsp,0x20
   140001360:	pop    rbx
   140001361:	ret    
   140001362:	xor    eax,eax
   140001364:	mov    rbx,rax
   140001367:	add    rsp,0x20
   14000136b:	pop    rbx
   14000136c:	ret    
   14000136d:	int3   
   14000136e:	int3   
   14000136f:	int3   
   140001370:	mov    QWORD PTR [rsp+0x8],rcx
   140001375:	push   rbx
   140001376:	push   rsi
   140001377:	push   rdi
   140001378:	push   r12
   14000137a:	push   r13
   14000137c:	push   r14
   14000137e:	push   r15
   140001380:	sub    rsp,0x50
   140001384:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14000138d:	mov    r14,rdx
   140001390:	mov    r12,rcx
   140001393:	xor    esi,esi
   140001395:	mov    DWORD PTR [rsp+0x20],esi
   140001399:	xor    eax,eax
   14000139b:	or     rcx,0xffffffffffffffff
   14000139f:	mov    rdi,rdx
   1400013a2:	repnz scas al,BYTE PTR es:[rdi]
   1400013a4:	not    rcx
   1400013a7:	lea    r13,[rcx-0x1]
   1400013ab:	mov    rax,QWORD PTR [r12]
   1400013af:	movsxd rcx,DWORD PTR [rax+0x4]
   1400013b3:	mov    rbx,QWORD PTR [rcx+r12*1+0x28]
   1400013b8:	test   rbx,rbx
   1400013bb:	jle    0x1400013c7
   1400013bd:	cmp    rbx,r13
   1400013c0:	jle    0x1400013c7
   1400013c2:	sub    rbx,r13
   1400013c5:	jmp    0x1400013c9
   1400013c7:	xor    ebx,ebx
   1400013c9:	mov    rdi,r12
   1400013cc:	mov    QWORD PTR [rsp+0x40],r12
   1400013d1:	mov    rcx,QWORD PTR [rcx+r12*1+0x48]
   1400013d6:	test   rcx,rcx
   1400013d9:	je     0x1400013e5
   1400013db:	add    rcx,0x8
   1400013df:	call   QWORD PTR [rip+0x1ec93]        # 0x140020078
   1400013e5:	mov    rax,QWORD PTR [r12]
   1400013e9:	movsxd rcx,DWORD PTR [rax+0x4]
   1400013ed:	cmp    DWORD PTR [rcx+r12*1+0x10],esi
   1400013f2:	jne    0x140001404
   1400013f4:	mov    rcx,QWORD PTR [rcx+r12*1+0x50]
   1400013f9:	test   rcx,rcx
   1400013fc:	je     0x140001404
   1400013fe:	call   QWORD PTR [rip+0x1eccc]        # 0x1400200d0
   140001404:	mov    rax,QWORD PTR [r12]
   140001408:	movsxd rcx,DWORD PTR [rax+0x4]
   14000140c:	cmp    DWORD PTR [rcx+r12*1+0x10],esi
   140001411:	sete   al
   140001414:	test   al,al
   140001416:	jne    0x140001422
   140001418:	mov    esi,0x4
   14000141d:	jmp    0x140001573
   140001422:	mov    rax,QWORD PTR [r12]
   140001426:	movsxd rcx,DWORD PTR [rax+0x4]
   14000142a:	add    rcx,r12
   14000142d:	lea    rdx,[rsp+0xa0]
   140001435:	call   QWORD PTR [rip+0x1ecc5]        # 0x140020100
   14000143b:	mov    rcx,rax
   14000143e:	call   0x140001040
   140001443:	mov    QWORD PTR [rsp+0xa8],rax
   14000144b:	lea    rcx,[rsp+0xa0]
   140001453:	call   QWORD PTR [rip+0x1ec9f]        # 0x1400200f8
   140001459:	mov    rdx,QWORD PTR [r12]
   14000145d:	movsxd rcx,DWORD PTR [rdx+0x4]
   140001461:	mov    edx,DWORD PTR [rcx+r12*1+0x18]
   140001466:	and    edx,0x1c0
   14000146c:	cmp    edx,0x40
   14000146f:	je     0x1400014ac
   140001471:	mov    edi,0xffff
   140001476:	test   rbx,rbx
   140001479:	jle    0x1400014b1
   14000147b:	mov    rax,QWORD PTR [r12]
   14000147f:	movsxd rcx,DWORD PTR [rax+0x4]
   140001483:	movzx  edx,WORD PTR [rcx+r12*1+0x58]
   140001489:	mov    rcx,QWORD PTR [rcx+r12*1+0x48]
   14000148e:	call   QWORD PTR [rip+0x1ec5c]        # 0x1400200f0
   140001494:	cmp    di,ax
   140001497:	jne    0x1400014a2
   140001499:	or     esi,0x4
   14000149c:	mov    DWORD PTR [rsp+0x20],esi
   1400014a0:	jmp    0x1400014b1
   1400014a2:	dec    rbx
   1400014a5:	mov    QWORD PTR [rsp+0x28],rbx
   1400014aa:	jmp    0x140001476
   1400014ac:	mov    edi,0xffff
   1400014b1:	mov    r15d,0x4
   1400014b7:	test   esi,esi
   1400014b9:	jne    0x14000154a
   1400014bf:	test   r13,r13
   1400014c2:	jle    0x140001514
   1400014c4:	mov    rax,QWORD PTR [r12]
   1400014c8:	movsxd rcx,DWORD PTR [rax+0x4]
   1400014cc:	mov    rdi,QWORD PTR [rcx+r12*1+0x48]
   1400014d1:	movzx  edx,BYTE PTR [r14]
   1400014d5:	mov    rcx,QWORD PTR [rsp+0xa8]
   1400014dd:	call   QWORD PTR [rip+0x1ec05]        # 0x1400200e8
   1400014e3:	movzx  edx,ax
   1400014e6:	mov    rcx,rdi
   1400014e9:	call   QWORD PTR [rip+0x1ec01]        # 0x1400200f0
   1400014ef:	mov    edi,0xffff
   1400014f4:	cmp    di,ax
   1400014f7:	cmove  esi,r15d
   1400014fb:	mov    DWORD PTR [rsp+0x20],esi
   1400014ff:	dec    r13
   140001502:	mov    QWORD PTR [rsp+0x38],r13
   140001507:	inc    r14
   14000150a:	mov    QWORD PTR [rsp+0x98],r14
   140001512:	jmp    0x1400014b7
   140001514:	test   rbx,rbx
   140001517:	jle    0x14000154a
   140001519:	mov    rax,QWORD PTR [r12]
   14000151d:	movsxd rcx,DWORD PTR [rax+0x4]
   140001521:	movzx  edx,WORD PTR [rcx+r12*1+0x58]
   140001527:	mov    rcx,QWORD PTR [rcx+r12*1+0x48]
   14000152c:	call   QWORD PTR [rip+0x1ebbe]        # 0x1400200f0
   140001532:	cmp    di,ax
   140001535:	jne    0x140001540
   140001537:	or     esi,r15d
   14000153a:	mov    DWORD PTR [rsp+0x20],esi
   14000153e:	jmp    0x14000154a
   140001540:	dec    rbx
   140001543:	mov    QWORD PTR [rsp+0x28],rbx
   140001548:	jmp    0x140001514
   14000154a:	mov    rax,QWORD PTR [r12]
   14000154e:	movsxd rcx,DWORD PTR [rax+0x4]
   140001552:	mov    QWORD PTR [rcx+r12*1+0x28],0x0
   14000155b:	mov    rdi,QWORD PTR [rsp+0x40]
   140001560:	jmp    0x140001573
   140001562:	mov    r12,QWORD PTR [rsp+0x90]
   14000156a:	mov    esi,DWORD PTR [rsp+0x20]
   14000156e:	mov    rdi,QWORD PTR [rsp+0x40]
   140001573:	mov    rax,QWORD PTR [r12]
   140001577:	movsxd rcx,DWORD PTR [rax+0x4]
   14000157b:	add    rcx,r12
   14000157e:	xor    r8d,r8d
   140001581:	mov    edx,esi
   140001583:	call   QWORD PTR [rip+0x1eb57]        # 0x1400200e0
   140001589:	call   QWORD PTR [rip+0x1eb39]        # 0x1400200c8
   14000158f:	test   al,al
   140001591:	jne    0x14000159c
   140001593:	mov    rcx,rdi
   140001596:	call   QWORD PTR [rip+0x1eb3c]        # 0x1400200d8
   14000159c:	mov    rax,QWORD PTR [rdi]
   14000159f:	movsxd rcx,DWORD PTR [rax+0x4]
   1400015a3:	mov    rcx,QWORD PTR [rcx+rdi*1+0x48]
   1400015a8:	test   rcx,rcx
   1400015ab:	je     0x1400015bc
   1400015ad:	add    rcx,0x8
   1400015b1:	call   QWORD PTR [rip+0x1ebc1]        # 0x140020178
   1400015b7:	mov    rax,r12
   1400015ba:	jmp    0x1400015bf
   1400015bc:	mov    rax,r12
   1400015bf:	add    rsp,0x50
   1400015c3:	pop    r15
   1400015c5:	pop    r14
   1400015c7:	pop    r13
   1400015c9:	pop    r12
   1400015cb:	pop    rdi
   1400015cc:	pop    rsi
   1400015cd:	pop    rbx
   1400015ce:	ret    
   1400015cf:	int3   
   1400015d0:	mov    BYTE PTR [rsp+0x10],dl
   1400015d4:	mov    QWORD PTR [rsp+0x8],rcx
   1400015d9:	push   rbx
   1400015da:	push   rsi
   1400015db:	push   rdi
   1400015dc:	push   r12
   1400015de:	push   r13
   1400015e0:	push   r14
   1400015e2:	push   r15
   1400015e4:	sub    rsp,0x50
   1400015e8:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   1400015f1:	mov    rsi,rcx
   1400015f4:	xor    r12d,r12d
   1400015f7:	mov    DWORD PTR [rsp+0x20],r12d
   1400015fc:	mov    r14,rcx
   1400015ff:	mov    QWORD PTR [rsp+0x38],rcx
   140001604:	mov    rax,QWORD PTR [rcx]
   140001607:	movsxd r8,DWORD PTR [rax+0x4]
   14000160b:	mov    rcx,QWORD PTR [r8+rcx*1+0x48]
   140001610:	test   rcx,rcx
   140001613:	je     0x14000161f
   140001615:	add    rcx,0x8
   140001619:	call   QWORD PTR [rip+0x1ea59]        # 0x140020078
   14000161f:	mov    rax,QWORD PTR [rsi]
   140001622:	movsxd rcx,DWORD PTR [rax+0x4]
   140001626:	cmp    DWORD PTR [rcx+rsi*1+0x10],r12d
   14000162b:	jne    0x14000163d
   14000162d:	mov    rcx,QWORD PTR [rcx+rsi*1+0x50]
   140001632:	test   rcx,rcx
   140001635:	je     0x14000163d
   140001637:	call   QWORD PTR [rip+0x1ea93]        # 0x1400200d0
   14000163d:	mov    rcx,QWORD PTR [rsi]
   140001640:	movsxd rax,DWORD PTR [rcx+0x4]
   140001644:	cmp    DWORD PTR [rax+rsi*1+0x10],r12d
   140001649:	sete   al
   14000164c:	test   al,al
   14000164e:	je     0x140001790
   140001654:	movsxd rcx,DWORD PTR [rcx+0x4]
   140001658:	add    rcx,rsi
   14000165b:	lea    rdx,[rsp+0xa0]
   140001663:	call   QWORD PTR [rip+0x1ea97]        # 0x140020100
   140001669:	mov    rcx,rax
   14000166c:	call   0x140001040
   140001671:	mov    QWORD PTR [rsp+0xa8],rax
   140001679:	lea    rcx,[rsp+0xa0]
   140001681:	call   QWORD PTR [rip+0x1ea71]        # 0x1400200f8
   140001687:	mov    r11,QWORD PTR [rsi]
   14000168a:	movsxd rcx,DWORD PTR [r11+0x4]
   14000168e:	mov    rdi,QWORD PTR [rcx+rsi*1+0x28]
   140001693:	cmp    rdi,0x1
   140001697:	jg     0x14000169d
   140001699:	xor    edi,edi
   14000169b:	jmp    0x1400016a0
   14000169d:	dec    rdi
   1400016a0:	mov    rax,QWORD PTR [rsi]
   1400016a3:	movsxd rcx,DWORD PTR [rax+0x4]
   1400016a7:	mov    eax,DWORD PTR [rcx+rsi*1+0x18]
   1400016ab:	and    eax,0x1c0
   1400016b0:	cmp    eax,0x40
   1400016b3:	je     0x1400016fd
   1400016b5:	mov    r13d,0x4
   1400016bb:	mov    r15d,0xffff
   1400016c1:	test   r12d,r12d
   1400016c4:	jne    0x14000177c
   1400016ca:	test   rdi,rdi
   1400016cd:	jle    0x140001709
   1400016cf:	mov    rax,QWORD PTR [rsi]
   1400016d2:	movsxd rcx,DWORD PTR [rax+0x4]
   1400016d6:	movzx  edx,WORD PTR [rcx+rsi*1+0x58]
   1400016db:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   1400016e0:	call   QWORD PTR [rip+0x1ea0a]        # 0x1400200f0
   1400016e6:	cmp    r15w,ax
   1400016ea:	cmove  r12d,r13d
   1400016ee:	mov    DWORD PTR [rsp+0x20],r12d
   1400016f3:	dec    rdi
   1400016f6:	mov    QWORD PTR [rsp+0x28],rdi
   1400016fb:	jmp    0x1400016c1
   1400016fd:	mov    r13d,0x4
   140001703:	mov    r15d,0xffff
   140001709:	mov    rax,QWORD PTR [rsi]
   14000170c:	movsxd rcx,DWORD PTR [rax+0x4]
   140001710:	mov    rbx,QWORD PTR [rcx+rsi*1+0x48]
   140001715:	movzx  edx,BYTE PTR [rsp+0x98]
   14000171d:	mov    rcx,QWORD PTR [rsp+0xa8]
   140001725:	call   QWORD PTR [rip+0x1e9bd]        # 0x1400200e8
   14000172b:	movzx  edx,ax
   14000172e:	mov    rcx,rbx
   140001731:	call   QWORD PTR [rip+0x1e9b9]        # 0x1400200f0
   140001737:	cmp    r15w,ax
   14000173b:	cmove  r12d,r13d
   14000173f:	mov    DWORD PTR [rsp+0x20],r12d
   140001744:	test   r12d,r12d
   140001747:	jne    0x14000177c
   140001749:	test   rdi,rdi
   14000174c:	jle    0x14000177c
   14000174e:	mov    rax,QWORD PTR [rsi]
   140001751:	movsxd rcx,DWORD PTR [rax+0x4]
   140001755:	movzx  edx,WORD PTR [rcx+rsi*1+0x58]
   14000175a:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   14000175f:	call   QWORD PTR [rip+0x1e98b]        # 0x1400200f0
   140001765:	cmp    r15w,ax
   140001769:	cmove  r12d,r13d
   14000176d:	mov    DWORD PTR [rsp+0x20],r12d
   140001772:	dec    rdi
   140001775:	mov    QWORD PTR [rsp+0x28],rdi
   14000177a:	jmp    0x140001744
   14000177c:	jmp    0x140001790
   14000177e:	mov    rsi,QWORD PTR [rsp+0x90]
   140001786:	mov    r12d,DWORD PTR [rsp+0x20]
   14000178b:	mov    r14,QWORD PTR [rsp+0x38]
   140001790:	mov    rax,QWORD PTR [rsi]
   140001793:	movsxd rcx,DWORD PTR [rax+0x4]
   140001797:	mov    QWORD PTR [rcx+rsi*1+0x28],0x0
   1400017a0:	mov    rax,QWORD PTR [rsi]
   1400017a3:	movsxd rcx,DWORD PTR [rax+0x4]
   1400017a7:	add    rcx,rsi
   1400017aa:	xor    r8d,r8d
   1400017ad:	mov    edx,r12d
   1400017b0:	call   QWORD PTR [rip+0x1e92a]        # 0x1400200e0
   1400017b6:	call   QWORD PTR [rip+0x1e90c]        # 0x1400200c8
   1400017bc:	test   al,al
   1400017be:	jne    0x1400017c9
   1400017c0:	mov    rcx,r14
   1400017c3:	call   QWORD PTR [rip+0x1e90f]        # 0x1400200d8
   1400017c9:	mov    rax,QWORD PTR [r14]
   1400017cc:	movsxd rcx,DWORD PTR [rax+0x4]
   1400017d0:	mov    rcx,QWORD PTR [rcx+r14*1+0x48]
   1400017d5:	test   rcx,rcx
   1400017d8:	je     0x1400017e9
   1400017da:	add    rcx,0x8
   1400017de:	call   QWORD PTR [rip+0x1e994]        # 0x140020178
   1400017e4:	mov    rax,rsi
   1400017e7:	jmp    0x1400017ec
   1400017e9:	mov    rax,rsi
   1400017ec:	add    rsp,0x50
   1400017f0:	pop    r15
   1400017f2:	pop    r14
   1400017f4:	pop    r13
   1400017f6:	pop    r12
   1400017f8:	pop    rdi
   1400017f9:	pop    rsi
   1400017fa:	pop    rbx
   1400017fb:	ret    
   1400017fc:	int3   
   1400017fd:	int3   
   1400017fe:	int3   
   1400017ff:	int3   
   140001800:	mov    rax,rsp
   140001803:	mov    QWORD PTR [rax+0x8],rcx
   140001807:	push   r12
   140001809:	push   r13
   14000180b:	push   r14
   14000180d:	sub    rsp,0x50
   140001811:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14000181a:	mov    QWORD PTR [rax+0x10],rbx
   14000181e:	mov    QWORD PTR [rax+0x18],rsi
   140001822:	mov    QWORD PTR [rax+0x20],rdi
   140001826:	mov    r14,rdx
   140001829:	mov    rsi,rcx
   14000182c:	xor    ebx,ebx
   14000182e:	mov    DWORD PTR [rax-0x48],ebx
   140001831:	xor    eax,eax
   140001833:	or     rcx,0xffffffffffffffff
   140001837:	mov    rdi,rdx
   14000183a:	repnz scas al,BYTE PTR es:[rdi]
   14000183c:	not    rcx
   14000183f:	lea    r13,[rcx-0x1]
   140001843:	mov    rax,QWORD PTR [rsi]
   140001846:	movsxd rcx,DWORD PTR [rax+0x4]
   14000184a:	mov    rdi,QWORD PTR [rcx+rsi*1+0x28]
   14000184f:	test   rdi,rdi
   140001852:	jle    0x14000185e
   140001854:	cmp    rdi,r13
   140001857:	jle    0x14000185e
   140001859:	sub    rdi,r13
   14000185c:	jmp    0x140001860
   14000185e:	xor    edi,edi
   140001860:	mov    r12,rsi
   140001863:	mov    QWORD PTR [rsp+0x38],rsi
   140001868:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   14000186d:	test   rcx,rcx
   140001870:	je     0x14000187c
   140001872:	add    rcx,0x8
   140001876:	call   QWORD PTR [rip+0x1e7fc]        # 0x140020078
   14000187c:	mov    rax,QWORD PTR [rsi]
   14000187f:	movsxd rcx,DWORD PTR [rax+0x4]
   140001883:	cmp    DWORD PTR [rcx+rsi*1+0x10],ebx
   140001887:	jne    0x140001899
   140001889:	mov    rcx,QWORD PTR [rcx+rsi*1+0x50]
   14000188e:	test   rcx,rcx
   140001891:	je     0x140001899
   140001893:	call   QWORD PTR [rip+0x1e81f]        # 0x1400200b8
   140001899:	mov    rax,QWORD PTR [rsi]
   14000189c:	movsxd rcx,DWORD PTR [rax+0x4]
   1400018a0:	cmp    DWORD PTR [rcx+rsi*1+0x10],ebx
   1400018a4:	sete   al
   1400018a7:	test   al,al
   1400018a9:	jne    0x1400018b5
   1400018ab:	mov    ebx,0x4
   1400018b0:	jmp    0x140001984
   1400018b5:	mov    rax,QWORD PTR [rsi]
   1400018b8:	movsxd rcx,DWORD PTR [rax+0x4]
   1400018bc:	mov    eax,DWORD PTR [rcx+rsi*1+0x18]
   1400018c0:	and    eax,0x1c0
   1400018c5:	cmp    eax,0x40
   1400018c8:	je     0x140001908
   1400018ca:	nop    WORD PTR [rax+rax*1+0x0]
   1400018d0:	test   rdi,rdi
   1400018d3:	jle    0x140001904
   1400018d5:	mov    rax,QWORD PTR [rsi]
   1400018d8:	movsxd rcx,DWORD PTR [rax+0x4]
   1400018dc:	movzx  edx,BYTE PTR [rcx+rsi*1+0x58]
   1400018e1:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   1400018e6:	call   QWORD PTR [rip+0x1e82c]        # 0x140020118
   1400018ec:	cmp    eax,0xffffffff
   1400018ef:	jne    0x1400018fa
   1400018f1:	or     ebx,0x4
   1400018f4:	mov    DWORD PTR [rsp+0x20],ebx
   1400018f8:	jmp    0x140001904
   1400018fa:	dec    rdi
   1400018fd:	mov    QWORD PTR [rsp+0x28],rdi
   140001902:	jmp    0x1400018d0
   140001904:	test   ebx,ebx
   140001906:	jne    0x140001964
   140001908:	mov    rax,QWORD PTR [rsi]
   14000190b:	movsxd rcx,DWORD PTR [rax+0x4]
   14000190f:	mov    r8,r13
   140001912:	mov    rdx,r14
   140001915:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   14000191a:	call   QWORD PTR [rip+0x1e7f0]        # 0x140020110
   140001920:	cmp    rax,r13
   140001923:	je     0x140001930
   140001925:	mov    ebx,0x4
   14000192a:	mov    DWORD PTR [rsp+0x20],ebx
   14000192e:	jmp    0x140001964
   140001930:	test   rdi,rdi
   140001933:	jle    0x140001964
   140001935:	mov    rax,QWORD PTR [rsi]
   140001938:	movsxd rcx,DWORD PTR [rax+0x4]
   14000193c:	movzx  edx,BYTE PTR [rcx+rsi*1+0x58]
   140001941:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   140001946:	call   QWORD PTR [rip+0x1e7cc]        # 0x140020118
   14000194c:	cmp    eax,0xffffffff
   14000194f:	jne    0x14000195a
   140001951:	or     ebx,0x4
   140001954:	mov    DWORD PTR [rsp+0x20],ebx
   140001958:	jmp    0x140001964
   14000195a:	dec    rdi
   14000195d:	mov    QWORD PTR [rsp+0x28],rdi
   140001962:	jmp    0x140001930
   140001964:	mov    rax,QWORD PTR [rsi]
   140001967:	movsxd rcx,DWORD PTR [rax+0x4]
   14000196b:	mov    QWORD PTR [rcx+rsi*1+0x28],0x0
   140001974:	jmp    0x140001984
   140001976:	mov    rsi,QWORD PTR [rsp+0x70]
   14000197b:	mov    ebx,DWORD PTR [rsp+0x20]
   14000197f:	mov    r12,QWORD PTR [rsp+0x38]
   140001984:	mov    rax,QWORD PTR [rsi]
   140001987:	movsxd rcx,DWORD PTR [rax+0x4]
   14000198b:	add    rcx,rsi
   14000198e:	xor    r8d,r8d
   140001991:	mov    edx,ebx
   140001993:	call   QWORD PTR [rip+0x1e76f]        # 0x140020108
   140001999:	call   QWORD PTR [rip+0x1e729]        # 0x1400200c8
   14000199f:	test   al,al
   1400019a1:	jne    0x1400019ac
   1400019a3:	mov    rcx,r12
   1400019a6:	call   QWORD PTR [rip+0x1e714]        # 0x1400200c0
   1400019ac:	mov    rax,QWORD PTR [r12]
   1400019b0:	movsxd rcx,DWORD PTR [rax+0x4]
   1400019b4:	mov    rcx,QWORD PTR [rcx+r12*1+0x48]
   1400019b9:	test   rcx,rcx
   1400019bc:	je     0x1400019cd
   1400019be:	add    rcx,0x8
   1400019c2:	call   QWORD PTR [rip+0x1e7b0]        # 0x140020178
   1400019c8:	mov    rax,rsi
   1400019cb:	jmp    0x1400019d0
   1400019cd:	mov    rax,rsi
   1400019d0:	lea    r11,[rsp+0x50]
   1400019d5:	mov    rbx,QWORD PTR [r11+0x28]
   1400019d9:	mov    rsi,QWORD PTR [r11+0x30]
   1400019dd:	mov    rdi,QWORD PTR [r11+0x38]
   1400019e1:	mov    rsp,r11
   1400019e4:	pop    r14
   1400019e6:	pop    r13
   1400019e8:	pop    r12
   1400019ea:	ret    
   1400019eb:	int3   
   1400019ec:	int3   
   1400019ed:	int3   
   1400019ee:	int3   
   1400019ef:	int3   
   1400019f0:	mov    rax,rsp
   1400019f3:	mov    QWORD PTR [rax+0x8],rcx
   1400019f7:	push   r12
   1400019f9:	push   r13
   1400019fb:	push   r14
   1400019fd:	sub    rsp,0x50
   140001a01:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140001a0a:	mov    QWORD PTR [rax+0x10],rbx
   140001a0e:	mov    QWORD PTR [rax+0x18],rsi
   140001a12:	mov    QWORD PTR [rax+0x20],rdi
   140001a16:	movzx  r14d,dl
   140001a1a:	mov    rdi,rcx
   140001a1d:	xor    esi,esi
   140001a1f:	mov    DWORD PTR [rax-0x48],esi
   140001a22:	mov    r13,rcx
   140001a25:	mov    QWORD PTR [rsp+0x38],rcx
   140001a2a:	mov    rax,QWORD PTR [rcx]
   140001a2d:	movsxd r8,DWORD PTR [rax+0x4]
   140001a31:	mov    rcx,QWORD PTR [r8+rcx*1+0x48]
   140001a36:	test   rcx,rcx
   140001a39:	je     0x140001a45
   140001a3b:	add    rcx,0x8
   140001a3f:	call   QWORD PTR [rip+0x1e633]        # 0x140020078
   140001a45:	mov    rax,QWORD PTR [rdi]
   140001a48:	movsxd rcx,DWORD PTR [rax+0x4]
   140001a4c:	cmp    DWORD PTR [rcx+rdi*1+0x10],esi
   140001a50:	jne    0x140001a62
   140001a52:	mov    rcx,QWORD PTR [rcx+rdi*1+0x50]
   140001a57:	test   rcx,rcx
   140001a5a:	je     0x140001a62
   140001a5c:	call   QWORD PTR [rip+0x1e656]        # 0x1400200b8
   140001a62:	mov    rax,QWORD PTR [rdi]
   140001a65:	movsxd rbx,DWORD PTR [rax+0x4]
   140001a69:	cmp    DWORD PTR [rbx+rdi*1+0x10],esi
   140001a6d:	sete   al
   140001a70:	test   al,al
   140001a72:	je     0x140001b4a
   140001a78:	mov    rbx,QWORD PTR [rbx+rdi*1+0x28]
   140001a7d:	cmp    rbx,0x1
   140001a81:	jg     0x140001a87
   140001a83:	xor    ebx,ebx
   140001a85:	jmp    0x140001a8a
   140001a87:	dec    rbx
   140001a8a:	mov    rax,QWORD PTR [rdi]
   140001a8d:	movsxd rcx,DWORD PTR [rax+0x4]
   140001a91:	mov    eax,DWORD PTR [rcx+rdi*1+0x18]
   140001a95:	and    eax,0x1c0
   140001a9a:	cmp    eax,0x40
   140001a9d:	je     0x140001ade
   140001a9f:	mov    r12d,0x4
   140001aa5:	test   esi,esi
   140001aa7:	jne    0x140001b3a
   140001aad:	test   rbx,rbx
   140001ab0:	jle    0x140001ae4
   140001ab2:	mov    rax,QWORD PTR [rdi]
   140001ab5:	movsxd rcx,DWORD PTR [rax+0x4]
   140001ab9:	movzx  edx,BYTE PTR [rcx+rdi*1+0x58]
   140001abe:	mov    rcx,QWORD PTR [rcx+rdi*1+0x48]
   140001ac3:	call   QWORD PTR [rip+0x1e64f]        # 0x140020118
   140001ac9:	cmp    eax,0xffffffff
   140001acc:	cmove  esi,r12d
   140001ad0:	mov    DWORD PTR [rsp+0x20],esi
   140001ad4:	dec    rbx
   140001ad7:	mov    QWORD PTR [rsp+0x28],rbx
   140001adc:	jmp    0x140001aa5
   140001ade:	mov    r12d,0x4
   140001ae4:	mov    rax,QWORD PTR [rdi]
   140001ae7:	movsxd rcx,DWORD PTR [rax+0x4]
   140001aeb:	movzx  edx,r14b
   140001aef:	mov    rcx,QWORD PTR [rcx+rdi*1+0x48]
   140001af4:	call   QWORD PTR [rip+0x1e61e]        # 0x140020118
   140001afa:	cmp    eax,0xffffffff
   140001afd:	cmove  esi,r12d
   140001b01:	mov    DWORD PTR [rsp+0x20],esi
   140001b05:	test   esi,esi
   140001b07:	jne    0x140001b3a
   140001b09:	test   rbx,rbx
   140001b0c:	jle    0x140001b3a
   140001b0e:	mov    rax,QWORD PTR [rdi]
   140001b11:	movsxd rcx,DWORD PTR [rax+0x4]
   140001b15:	movzx  edx,BYTE PTR [rcx+rdi*1+0x58]
   140001b1a:	mov    rcx,QWORD PTR [rcx+rdi*1+0x48]
   140001b1f:	call   QWORD PTR [rip+0x1e5f3]        # 0x140020118
   140001b25:	cmp    eax,0xffffffff
   140001b28:	cmove  esi,r12d
   140001b2c:	mov    DWORD PTR [rsp+0x20],esi
   140001b30:	dec    rbx
   140001b33:	mov    QWORD PTR [rsp+0x28],rbx
   140001b38:	jmp    0x140001b05
   140001b3a:	jmp    0x140001b4a
   140001b3c:	mov    rdi,QWORD PTR [rsp+0x70]
   140001b41:	mov    esi,DWORD PTR [rsp+0x20]
   140001b45:	mov    r13,QWORD PTR [rsp+0x38]
   140001b4a:	mov    rax,QWORD PTR [rdi]
   140001b4d:	movsxd rcx,DWORD PTR [rax+0x4]
   140001b51:	mov    QWORD PTR [rcx+rdi*1+0x28],0x0
   140001b5a:	mov    rax,QWORD PTR [rdi]
   140001b5d:	movsxd rcx,DWORD PTR [rax+0x4]
   140001b61:	add    rcx,rdi
   140001b64:	xor    r8d,r8d
   140001b67:	mov    edx,esi
   140001b69:	call   QWORD PTR [rip+0x1e599]        # 0x140020108
   140001b6f:	call   QWORD PTR [rip+0x1e553]        # 0x1400200c8
   140001b75:	test   al,al
   140001b77:	jne    0x140001b82
   140001b79:	mov    rcx,r13
   140001b7c:	call   QWORD PTR [rip+0x1e53e]        # 0x1400200c0
   140001b82:	mov    rax,QWORD PTR [r13+0x0]
   140001b86:	movsxd rcx,DWORD PTR [rax+0x4]
   140001b8a:	mov    rcx,QWORD PTR [rcx+r13*1+0x48]
   140001b8f:	test   rcx,rcx
   140001b92:	je     0x140001ba3
   140001b94:	add    rcx,0x8
   140001b98:	call   QWORD PTR [rip+0x1e5da]        # 0x140020178
   140001b9e:	mov    rax,rdi
   140001ba1:	jmp    0x140001ba6
   140001ba3:	mov    rax,rdi
   140001ba6:	lea    r11,[rsp+0x50]
   140001bab:	mov    rbx,QWORD PTR [r11+0x28]
   140001baf:	mov    rsi,QWORD PTR [r11+0x30]
   140001bb3:	mov    rdi,QWORD PTR [r11+0x38]
   140001bb7:	mov    rsp,r11
   140001bba:	pop    r14
   140001bbc:	pop    r13
   140001bbe:	pop    r12
   140001bc0:	ret    
   140001bc1:	int3   
   140001bc2:	int3   
   140001bc3:	int3   
   140001bc4:	int3   
   140001bc5:	int3   
   140001bc6:	int3   
   140001bc7:	int3   
   140001bc8:	int3   
   140001bc9:	int3   
   140001bca:	int3   
   140001bcb:	int3   
   140001bcc:	int3   
   140001bcd:	int3   
   140001bce:	int3   
   140001bcf:	int3   
   140001bd0:	mov    r8,QWORD PTR [rcx]
   140001bd3:	mov    rcx,QWORD PTR [rdx]
   140001bd6:	mov    rcx,QWORD PTR [rcx]
   140001bd9:	cmp    QWORD PTR [r8],rcx
   140001bdc:	sete   al
   140001bdf:	ret    
   140001be0:	mov    QWORD PTR [rsp+0x10],rbx
   140001be5:	mov    QWORD PTR [rsp+0x18],rbp
   140001bea:	push   rsi
   140001beb:	sub    rsp,0x20
   140001bef:	movsxd rax,DWORD PTR [rdx+0xc]
   140001bf3:	mov    rbp,rdx
   140001bf6:	lea    rbx,[rdx+rax*8+0x10]
   140001bfb:	movsxd rax,DWORD PTR [rdx+0x8]
   140001bff:	lea    rsi,[rdx+rax*8+0x10]
   140001c04:	cmp    rsi,rbx
   140001c07:	je     0x140001c38
   140001c09:	mov    QWORD PTR [rsp+0x30],rdi
   140001c0e:	xchg   ax,ax
   140001c10:	mov    rdi,QWORD PTR [rbx-0x8]
   140001c14:	sub    rbx,0x8
   140001c18:	test   rdi,rdi
   140001c1b:	je     0x140001c2e
   140001c1d:	mov    rcx,rdi
   140001c20:	call   QWORD PTR [rip+0x1eb22]        # 0x140020748
   140001c26:	mov    rcx,rdi
   140001c29:	call   0x14001ee46
   140001c2e:	cmp    rbx,rsi
   140001c31:	jne    0x140001c10
   140001c33:	mov    rdi,QWORD PTR [rsp+0x30]
   140001c38:	mov    rcx,rbp
   140001c3b:	mov    rbx,QWORD PTR [rsp+0x38]
   140001c40:	mov    rbp,QWORD PTR [rsp+0x40]
   140001c45:	add    rsp,0x20
   140001c49:	pop    rsi
   140001c4a:	rex.W jmp QWORD PTR [rip+0x1ea7f]        # 0x1400206d0
   140001c51:	int3   
   140001c52:	int3   
   140001c53:	int3   
   140001c54:	int3   
   140001c55:	int3   
   140001c56:	int3   
   140001c57:	int3   
   140001c58:	int3   
   140001c59:	int3   
   140001c5a:	int3   
   140001c5b:	int3   
   140001c5c:	int3   
   140001c5d:	int3   
   140001c5e:	int3   
   140001c5f:	int3   
   140001c60:	mov    QWORD PTR [rsp+0x8],rbx
   140001c65:	mov    QWORD PTR [rsp+0x10],rsi
   140001c6a:	push   rdi
   140001c6b:	sub    rsp,0x20
   140001c6f:	mov    rbx,QWORD PTR [rcx+0x10]
   140001c73:	mov    rsi,rdx
   140001c76:	test   rbx,rbx
   140001c79:	je     0x140001ccc
   140001c7b:	xor    edi,edi
   140001c7d:	nop    DWORD PTR [rax]
   140001c80:	lea    rcx,[rbx+0x18]
   140001c84:	mov    rdx,rsi
   140001c87:	call   QWORD PTR [rip+0x1ea83]        # 0x140020710
   140001c8d:	test   al,al
   140001c8f:	jne    0x140001c9a
   140001c91:	mov    rdi,rbx
   140001c94:	mov    rbx,QWORD PTR [rbx+0x8]
   140001c98:	jmp    0x140001c9e
   140001c9a:	mov    rbx,QWORD PTR [rbx+0x10]
   140001c9e:	test   rbx,rbx
   140001ca1:	jne    0x140001c80
   140001ca3:	test   rdi,rdi
   140001ca6:	je     0x140001ccc
   140001ca8:	lea    rdx,[rdi+0x18]
   140001cac:	mov    rcx,rsi
   140001caf:	call   QWORD PTR [rip+0x1ea5b]        # 0x140020710
   140001cb5:	test   al,al
   140001cb7:	jne    0x140001ccc
   140001cb9:	mov    rax,rdi
   140001cbc:	mov    rbx,QWORD PTR [rsp+0x30]
   140001cc1:	mov    rsi,QWORD PTR [rsp+0x38]
   140001cc6:	add    rsp,0x20
   140001cca:	pop    rdi
   140001ccb:	ret    
   140001ccc:	mov    rbx,QWORD PTR [rsp+0x30]
   140001cd1:	mov    rsi,QWORD PTR [rsp+0x38]
   140001cd6:	xor    eax,eax
   140001cd8:	add    rsp,0x20
   140001cdc:	pop    rdi
   140001cdd:	ret    
   140001cde:	int3   
   140001cdf:	int3   
   140001ce0:	mov    QWORD PTR [rsp+0x10],rbx
   140001ce5:	mov    QWORD PTR [rsp+0x18],rbp
   140001cea:	push   rsi
   140001ceb:	sub    rsp,0x20
   140001cef:	movsxd rax,DWORD PTR [rdx+0xc]
   140001cf3:	mov    rbp,rdx
   140001cf6:	lea    rbx,[rdx+rax*8+0x10]
   140001cfb:	movsxd rax,DWORD PTR [rdx+0x8]
   140001cff:	lea    rsi,[rdx+rax*8+0x10]
   140001d04:	cmp    rsi,rbx
   140001d07:	je     0x140001d39
   140001d09:	mov    QWORD PTR [rsp+0x30],rdi
   140001d0e:	xchg   ax,ax
   140001d10:	mov    rdi,QWORD PTR [rbx-0x8]
   140001d14:	sub    rbx,0x8
   140001d18:	test   rdi,rdi
   140001d1b:	je     0x140001d2f
   140001d1d:	lea    rcx,[rdi+0x18]
   140001d21:	call   QWORD PTR [rip+0x1ea59]        # 0x140020780
   140001d27:	mov    rcx,rdi
   140001d2a:	call   0x14001ee46
   140001d2f:	cmp    rbx,rsi
   140001d32:	jne    0x140001d10
   140001d34:	mov    rdi,QWORD PTR [rsp+0x30]
   140001d39:	mov    rcx,rbp
   140001d3c:	mov    rbx,QWORD PTR [rsp+0x38]
   140001d41:	mov    rbp,QWORD PTR [rsp+0x40]
   140001d46:	add    rsp,0x20
   140001d4a:	pop    rsi
   140001d4b:	rex.W jmp QWORD PTR [rip+0x1e97e]        # 0x1400206d0
   140001d52:	int3   
   140001d53:	int3   
   140001d54:	int3   
   140001d55:	int3   
   140001d56:	int3   
   140001d57:	int3   
   140001d58:	int3   
   140001d59:	int3   
   140001d5a:	int3   
   140001d5b:	int3   
   140001d5c:	int3   
   140001d5d:	int3   
   140001d5e:	int3   
   140001d5f:	int3   
   140001d60:	cmp    rdx,r8
   140001d63:	je     0x140001dee
   140001d69:	mov    QWORD PTR [rsp+0x10],rbp
   140001d6e:	mov    QWORD PTR [rsp+0x18],rsi
   140001d73:	push   rdi
   140001d74:	sub    rsp,0x20
   140001d78:	mov    rsi,r9
   140001d7b:	mov    rbp,r8
   140001d7e:	mov    rdi,rdx
   140001d81:	mov    QWORD PTR [rsp+0x30],rbx
   140001d86:	mov    ecx,0x20
   140001d8b:	call   0x14001ee64
   140001d90:	mov    rbx,rax
   140001d93:	test   rax,rax
   140001d96:	je     0x140001dc8
   140001d98:	mov    rdx,QWORD PTR [rsi]
   140001d9b:	add    rdx,0x18
   140001d9f:	mov    ecx,DWORD PTR [rdx-0x18]
   140001da2:	mov    DWORD PTR [rax],ecx
   140001da4:	mov    ecx,DWORD PTR [rdx-0x14]
   140001da7:	mov    DWORD PTR [rax+0x4],ecx
   140001daa:	mov    ecx,DWORD PTR [rdx-0x10]
   140001dad:	mov    DWORD PTR [rax+0x8],ecx
   140001db0:	mov    ecx,DWORD PTR [rdx-0xc]
   140001db3:	mov    DWORD PTR [rax+0xc],ecx
   140001db6:	mov    eax,DWORD PTR [rdx-0x8]
   140001db9:	lea    rcx,[rbx+0x18]
   140001dbd:	mov    DWORD PTR [rbx+0x10],eax
   140001dc0:	call   QWORD PTR [rip+0x1e9d2]        # 0x140020798
   140001dc6:	jmp    0x140001dca
   140001dc8:	xor    ebx,ebx
   140001dca:	mov    QWORD PTR [rdi],rbx
   140001dcd:	add    rdi,0x8
   140001dd1:	add    rsi,0x8
   140001dd5:	cmp    rdi,rbp
   140001dd8:	jne    0x140001d86
   140001dda:	mov    rbx,QWORD PTR [rsp+0x30]
   140001ddf:	mov    rbp,QWORD PTR [rsp+0x38]
   140001de4:	mov    rsi,QWORD PTR [rsp+0x40]
   140001de9:	add    rsp,0x20
   140001ded:	pop    rdi
   140001dee:	repz ret 
   140001df0:	sub    rsp,0x28
   140001df4:	mov    r8,rdx
   140001df7:	test   rdx,rdx
   140001dfa:	je     0x140001e17
   140001dfc:	mov    eax,DWORD PTR [rcx+0x8]
   140001dff:	mov    QWORD PTR [rdx],0x0
   140001e06:	mov    DWORD PTR [rdx+0x8],eax
   140001e09:	lea    rdx,[rcx+0x10]
   140001e0d:	lea    rcx,[r8+0x10]
   140001e11:	call   QWORD PTR [rip+0x1e981]        # 0x140020798
   140001e17:	add    rsp,0x28
   140001e1b:	ret    
   140001e1c:	int3   
   140001e1d:	int3   
   140001e1e:	int3   
   140001e1f:	int3   
   140001e20:	mov    QWORD PTR [rsp+0x10],rbp
   140001e25:	mov    QWORD PTR [rsp+0x18],rsi
   140001e2a:	push   rdi
   140001e2b:	sub    rsp,0x20
   140001e2f:	mov    esi,r8d
   140001e32:	mov    r8,QWORD PTR [rcx]
   140001e35:	mov    rdi,rcx
   140001e38:	mov    ecx,DWORD PTR [r8+0x20]
   140001e3c:	mov    rbp,rdx
   140001e3f:	test   ecx,ecx
   140001e41:	je     0x140001e99
   140001e43:	xor    edx,edx
   140001e45:	mov    eax,esi
   140001e47:	mov    QWORD PTR [rsp+0x30],rbx
   140001e4c:	div    ecx
   140001e4e:	mov    rax,QWORD PTR [r8+0x8]
   140001e52:	lea    rbx,[rax+rdx*8]
   140001e56:	mov    rax,QWORD PTR [rax+rdx*8]
   140001e5a:	cmp    rax,r8
   140001e5d:	je     0x140001e81
   140001e5f:	nop
   140001e60:	cmp    esi,DWORD PTR [rax+0x8]
   140001e63:	jne    0x140001e76
   140001e65:	lea    rdx,[rax+0x10]
   140001e69:	mov    rcx,rbp
   140001e6c:	call   QWORD PTR [rip+0x1e87e]        # 0x1400206f0
   140001e72:	test   al,al
   140001e74:	jne    0x140001e81
   140001e76:	mov    rbx,QWORD PTR [rbx]
   140001e79:	mov    rax,QWORD PTR [rbx]
   140001e7c:	cmp    rax,QWORD PTR [rdi]
   140001e7f:	jne    0x140001e60
   140001e81:	mov    rax,rbx
   140001e84:	mov    rbx,QWORD PTR [rsp+0x30]
   140001e89:	mov    rbp,QWORD PTR [rsp+0x38]
   140001e8e:	mov    rsi,QWORD PTR [rsp+0x40]
   140001e93:	add    rsp,0x20
   140001e97:	pop    rdi
   140001e98:	ret    
   140001e99:	mov    rbp,QWORD PTR [rsp+0x38]
   140001e9e:	mov    rsi,QWORD PTR [rsp+0x40]
   140001ea3:	mov    rax,rdi
   140001ea6:	add    rsp,0x20
   140001eaa:	pop    rdi
   140001eab:	ret    
   140001eac:	int3   
   140001ead:	int3   
   140001eae:	int3   
   140001eaf:	int3   
   140001eb0:	rex push rbx
   140001eb2:	sub    rsp,0x90
   140001eb9:	mov    rax,QWORD PTR [rip+0x306d0]        # 0x140032590
   140001ec0:	xor    rax,rsp
   140001ec3:	mov    QWORD PTR [rsp+0x80],rax
   140001ecb:	lea    rdx,[rsp+0x58]
   140001ed0:	call   QWORD PTR [rip+0x1e7d2]        # 0x1400206a8
   140001ed6:	lea    rcx,[rsp+0x20]
   140001edb:	mov    edx,0x8
   140001ee0:	call   QWORD PTR [rip+0x1e7ca]        # 0x1400206b0
   140001ee6:	lea    rdx,[rsp+0x20]
   140001eeb:	lea    rcx,[rsp+0x28]
   140001ef0:	call   QWORD PTR [rip+0x1e7c2]        # 0x1400206b8
   140001ef6:	lea    rdx,[rsp+0x30]
   140001efb:	mov    rcx,rax
   140001efe:	call   QWORD PTR [rip+0x1e7a4]        # 0x1400206a8
   140001f04:	mov    rcx,QWORD PTR [rip+0x1e225]        # 0x140020130
   140001f0b:	lea    rdx,[rip+0x1eab6]        # 0x1400209c8
   140001f12:	mov    rbx,rax
   140001f15:	call   0x140001370
   140001f1a:	lea    rdx,[rsp+0x58]
   140001f1f:	mov    rcx,rax
   140001f22:	call   QWORD PTR [rip+0x1e200]        # 0x140020128
   140001f28:	lea    rdx,[rip+0x1ea41]        # 0x140020970
   140001f2f:	mov    rcx,rax
   140001f32:	call   0x140001370
   140001f37:	lea    rdx,[rsp+0x58]
   140001f3c:	mov    rcx,rax
   140001f3f:	call   QWORD PTR [rip+0x1e1e3]        # 0x140020128
   140001f45:	lea    rdx,[rip+0x1e9d4]        # 0x140020920
   140001f4c:	mov    rcx,rax
   140001f4f:	call   0x140001370
   140001f54:	lea    rdx,[rsp+0x58]
   140001f59:	mov    rcx,rax
   140001f5c:	call   QWORD PTR [rip+0x1e1c6]        # 0x140020128
   140001f62:	lea    rdx,[rip+0x1e98f]        # 0x1400208f8
   140001f69:	mov    rcx,rax
   140001f6c:	call   0x140001370
   140001f71:	mov    rdx,rbx
   140001f74:	mov    rcx,rax
   140001f77:	call   QWORD PTR [rip+0x1e1ab]        # 0x140020128
   140001f7d:	mov    dl,0xa
   140001f7f:	mov    rcx,rax
   140001f82:	call   0x1400015d0
   140001f87:	lea    rcx,[rsp+0x30]
   140001f8c:	call   QWORD PTR [rip+0x1e18e]        # 0x140020120
   140001f92:	lea    rcx,[rsp+0x28]
   140001f97:	call   QWORD PTR [rip+0x1e7e3]        # 0x140020780
   140001f9d:	lea    rcx,[rsp+0x20]
   140001fa2:	call   QWORD PTR [rip+0x1e7d8]        # 0x140020780
   140001fa8:	lea    rcx,[rsp+0x58]
   140001fad:	call   QWORD PTR [rip+0x1e16d]        # 0x140020120
   140001fb3:	mov    rcx,QWORD PTR [rsp+0x80]
   140001fbb:	xor    rcx,rsp
   140001fbe:	call   0x14001ef10
   140001fc3:	add    rsp,0x90
   140001fca:	pop    rbx
   140001fcb:	ret    
   140001fcc:	int3   
   140001fcd:	int3   
   140001fce:	int3   
   140001fcf:	int3   
   140001fd0:	rex push rbx
   140001fd2:	sub    rsp,0x20
   140001fd6:	mov    rbx,rcx
   140001fd9:	nop    DWORD PTR [rax+0x0]
   140001fe0:	lea    rcx,[rbx+0x18]
   140001fe4:	call   QWORD PTR [rip+0x1e796]        # 0x140020780
   140001fea:	lea    rcx,[rbx+0x20]
   140001fee:	call   QWORD PTR [rip+0x1e754]        # 0x140020748
   140001ff4:	mov    rcx,QWORD PTR [rbx+0x8]
   140001ff8:	test   rcx,rcx
   140001ffb:	je     0x140002002
   140001ffd:	call   0x140001fd0
   140002002:	mov    rbx,QWORD PTR [rbx+0x10]
   140002006:	test   rbx,rbx
   140002009:	jne    0x140001fe0
   14000200b:	add    rsp,0x20
   14000200f:	pop    rbx
   140002010:	ret    
   140002011:	int3   
   140002012:	int3   
   140002013:	int3   
   140002014:	int3   
   140002015:	int3   
   140002016:	int3   
   140002017:	int3   
   140002018:	int3   
   140002019:	int3   
   14000201a:	int3   
   14000201b:	int3   
   14000201c:	int3   
   14000201d:	int3   
   14000201e:	int3   
   14000201f:	int3   
   140002020:	mov    QWORD PTR [rsp+0x8],rbx
   140002025:	mov    QWORD PTR [rsp+0x10],rbp
   14000202a:	mov    QWORD PTR [rsp+0x18],rsi
   14000202f:	mov    QWORD PTR [rsp+0x20],rdi
   140002034:	push   r12
   140002036:	sub    rsp,0x20
   14000203a:	mov    r9,QWORD PTR [rcx]
   14000203d:	mov    r12,rdx
   140002040:	mov    rbp,rcx
   140002043:	mov    rax,QWORD PTR [r9]
   140002046:	mov    r8,QWORD PTR [rax]
   140002049:	mov    rax,QWORD PTR [r9+0x8]
   14000204d:	mov    r10d,DWORD PTR [r8+0x4]
   140002051:	mov    r8,QWORD PTR [rax]
   140002054:	mov    rax,QWORD PTR [rcx+0x8]
   140002058:	mov    r9d,DWORD PTR [r8+0x4]
   14000205c:	mov    r8,QWORD PTR [rax]
   14000205f:	mov    rcx,r12
   140002062:	mov    edx,DWORD PTR [r8+0x4]
   140002066:	xor    r8d,r8d
   140002069:	add    edx,r9d
   14000206c:	add    edx,r10d
   14000206f:	call   QWORD PTR [rip+0x1e623]        # 0x140020698
   140002075:	mov    rcx,r12
   140002078:	call   QWORD PTR [rip+0x1e70a]        # 0x140020788
   14000207e:	mov    rdi,QWORD PTR [rbp+0x0]
   140002082:	mov    rcx,QWORD PTR [rdi]
   140002085:	mov    rsi,rax
   140002088:	mov    rdx,QWORD PTR [rcx]
   14000208b:	movsxd rbx,DWORD PTR [rdx+0x4]
   14000208f:	add    rbx,rbx
   140002092:	call   QWORD PTR [rip+0x1e6f0]        # 0x140020788
   140002098:	mov    r8,rbx
   14000209b:	mov    rdx,rax
   14000209e:	mov    rcx,rsi
   1400020a1:	call   0x14001edd4
   1400020a6:	mov    rcx,QWORD PTR [rdi+0x8]
   1400020aa:	add    rsi,rbx
   1400020ad:	mov    rax,QWORD PTR [rcx]
   1400020b0:	movsxd rbx,DWORD PTR [rax+0x4]
   1400020b4:	add    rbx,rbx
   1400020b7:	call   QWORD PTR [rip+0x1e6cb]        # 0x140020788
   1400020bd:	mov    r8,rbx
   1400020c0:	mov    rdx,rax
   1400020c3:	mov    rcx,rsi
   1400020c6:	call   0x14001edd4
   1400020cb:	mov    rcx,QWORD PTR [rbp+0x8]
   1400020cf:	add    rsi,rbx
   1400020d2:	mov    rax,QWORD PTR [rcx]
   1400020d5:	movsxd rbx,DWORD PTR [rax+0x4]
   1400020d9:	add    rbx,rbx
   1400020dc:	call   QWORD PTR [rip+0x1e6a6]        # 0x140020788
   1400020e2:	mov    r8,rbx
   1400020e5:	mov    rdx,rax
   1400020e8:	mov    rcx,rsi
   1400020eb:	call   0x14001edd4
   1400020f0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400020f5:	mov    rbp,QWORD PTR [rsp+0x38]
   1400020fa:	mov    rsi,QWORD PTR [rsp+0x40]
   1400020ff:	mov    rdi,QWORD PTR [rsp+0x48]
   140002104:	mov    rax,r12
   140002107:	add    rsp,0x20
   14000210b:	pop    r12
   14000210d:	ret    
   14000210e:	int3   
   14000210f:	int3   
   140002110:	mov    QWORD PTR [rsp+0x8],rbx
   140002115:	push   rdi
   140002116:	sub    rsp,0x20
   14000211a:	mov    rax,QWORD PTR [rcx]
   14000211d:	mov    rdi,rdx
   140002120:	cmp    QWORD PTR [rax+0x10],0x0
   140002125:	je     0x14000212d
   140002127:	mov    rbx,QWORD PTR [rax+0x20]
   14000212b:	jmp    0x140002131
   14000212d:	lea    rbx,[rax+0x8]
   140002131:	mov    ecx,0x8
   140002136:	call   0x14001ee64
   14000213b:	test   rax,rax
   14000213e:	je     0x140002151
   140002140:	mov    QWORD PTR [rax],rbx
   140002143:	mov    QWORD PTR [rdi],rax
   140002146:	mov    rbx,QWORD PTR [rsp+0x30]
   14000214b:	add    rsp,0x20
   14000214f:	pop    rdi
   140002150:	ret    
   140002151:	mov    QWORD PTR [rdi],0x0
   140002158:	mov    rbx,QWORD PTR [rsp+0x30]
   14000215d:	add    rsp,0x20
   140002161:	pop    rdi
   140002162:	ret    
   140002163:	int3   
   140002164:	int3   
   140002165:	int3   
   140002166:	int3   
   140002167:	int3   
   140002168:	int3   
   140002169:	int3   
   14000216a:	int3   
   14000216b:	int3   
   14000216c:	int3   
   14000216d:	int3   
   14000216e:	int3   
   14000216f:	int3   
   140002170:	mov    QWORD PTR [rsp+0x8],rbx
   140002175:	push   rdi
   140002176:	sub    rsp,0x20
   14000217a:	mov    rbx,QWORD PTR [rcx]
   14000217d:	mov    ecx,0x8
   140002182:	mov    rdi,rdx
   140002185:	add    rbx,0x8
   140002189:	call   0x14001ee64
   14000218e:	test   rax,rax
   140002191:	je     0x1400021a4
   140002193:	mov    QWORD PTR [rax],rbx
   140002196:	mov    QWORD PTR [rdi],rax
   140002199:	mov    rbx,QWORD PTR [rsp+0x30]
   14000219e:	add    rsp,0x20
   1400021a2:	pop    rdi
   1400021a3:	ret    
   1400021a4:	mov    QWORD PTR [rdi],0x0
   1400021ab:	mov    rbx,QWORD PTR [rsp+0x30]
   1400021b0:	add    rsp,0x20
   1400021b4:	pop    rdi
   1400021b5:	ret    
   1400021b6:	int3   
   1400021b7:	int3   
   1400021b8:	int3   
   1400021b9:	int3   
   1400021ba:	int3   
   1400021bb:	int3   
   1400021bc:	int3   
   1400021bd:	int3   
   1400021be:	int3   
   1400021bf:	int3   
   1400021c0:	mov    rax,QWORD PTR [rdx]
   1400021c3:	mov    DWORD PTR [rcx],r8d
   1400021c6:	mov    DWORD PTR [rcx+0x10],r9d
   1400021ca:	mov    rdx,QWORD PTR [rax]
   1400021cd:	mov    rax,rcx
   1400021d0:	add    rdx,0x20
   1400021d4:	mov    QWORD PTR [rcx+0x8],rdx
   1400021d8:	ret    
   1400021d9:	int3   
   1400021da:	int3   
   1400021db:	int3   
   1400021dc:	int3   
   1400021dd:	int3   
   1400021de:	int3   
   1400021df:	int3   
   1400021e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400021e5:	push   rdi
   1400021e6:	sub    rsp,0x20
   1400021ea:	mov    rbx,QWORD PTR [rcx]
   1400021ed:	mov    rdi,rdx
   1400021f0:	mov    ecx,DWORD PTR [rbx+0x20]
   1400021f3:	mov    rax,QWORD PTR [rbx+0x8]
   1400021f7:	test   ecx,ecx
   1400021f9:	je     0x140002214
   1400021fb:	nop    DWORD PTR [rax+rax*1+0x0]
   140002200:	dec    ecx
   140002202:	cmp    QWORD PTR [rax],rbx
   140002205:	jne    0x140002211
   140002207:	add    rax,0x8
   14000220b:	test   ecx,ecx
   14000220d:	jne    0x140002200
   14000220f:	jmp    0x140002214
   140002211:	mov    rbx,QWORD PTR [rax]
   140002214:	mov    ecx,0x8
   140002219:	call   0x14001ee64
   14000221e:	test   rax,rax
   140002221:	je     0x140002234
   140002223:	mov    QWORD PTR [rax],rbx
   140002226:	mov    QWORD PTR [rdi],rax
   140002229:	mov    rbx,QWORD PTR [rsp+0x30]
   14000222e:	add    rsp,0x20
   140002232:	pop    rdi
   140002233:	ret    
   140002234:	mov    QWORD PTR [rdi],0x0
   14000223b:	mov    rbx,QWORD PTR [rsp+0x30]
   140002240:	add    rsp,0x20
   140002244:	pop    rdi
   140002245:	ret    
   140002246:	int3   
   140002247:	int3   
   140002248:	int3   
   140002249:	int3   
   14000224a:	int3   
   14000224b:	int3   
   14000224c:	int3   
   14000224d:	int3   
   14000224e:	int3   
   14000224f:	int3   
   140002250:	mov    QWORD PTR [rsp+0x8],rbx
   140002255:	push   rdi
   140002256:	sub    rsp,0x20
   14000225a:	mov    rbx,QWORD PTR [rcx]
   14000225d:	mov    ecx,0x8
   140002262:	mov    rdi,rdx
   140002265:	call   0x14001ee64
   14000226a:	test   rax,rax
   14000226d:	je     0x140002280
   14000226f:	mov    QWORD PTR [rax],rbx
   140002272:	mov    QWORD PTR [rdi],rax
   140002275:	mov    rbx,QWORD PTR [rsp+0x30]
   14000227a:	add    rsp,0x20
   14000227e:	pop    rdi
   14000227f:	ret    
   140002280:	mov    QWORD PTR [rdi],0x0
   140002287:	mov    rbx,QWORD PTR [rsp+0x30]
   14000228c:	add    rsp,0x20
   140002290:	pop    rdi
   140002291:	ret    
   140002292:	int3   
   140002293:	int3   
   140002294:	int3   
   140002295:	int3   
   140002296:	int3   
   140002297:	int3   
   140002298:	int3   
   140002299:	int3   
   14000229a:	int3   
   14000229b:	int3   
   14000229c:	int3   
   14000229d:	int3   
   14000229e:	int3   
   14000229f:	int3   
   1400022a0:	mov    rax,QWORD PTR [rdx]
   1400022a3:	mov    DWORD PTR [rcx],r8d
   1400022a6:	mov    DWORD PTR [rcx+0x10],r9d
   1400022aa:	mov    rdx,QWORD PTR [rax]
   1400022ad:	mov    rax,rcx
   1400022b0:	add    rdx,0x10
   1400022b4:	mov    QWORD PTR [rcx+0x8],rdx
   1400022b8:	ret    
   1400022b9:	int3   
   1400022ba:	int3   
   1400022bb:	int3   
   1400022bc:	int3   
   1400022bd:	int3   
   1400022be:	int3   
   1400022bf:	int3   
   1400022c0:	mov    rax,QWORD PTR [rdx]
   1400022c3:	mov    DWORD PTR [rcx],r8d
   1400022c6:	mov    DWORD PTR [rcx+0x10],r9d
   1400022ca:	mov    rdx,QWORD PTR [rax]
   1400022cd:	mov    rax,rcx
   1400022d0:	add    rdx,0x18
   1400022d4:	mov    QWORD PTR [rcx+0x8],rdx
   1400022d8:	ret    
   1400022d9:	int3   
   1400022da:	int3   
   1400022db:	int3   
   1400022dc:	int3   
   1400022dd:	int3   
   1400022de:	int3   
   1400022df:	int3   
   1400022e0:	add    rcx,0x10
   1400022e4:	rex.W jmp QWORD PTR [rip+0x1e495]        # 0x140020780
   1400022eb:	int3   
   1400022ec:	int3   
   1400022ed:	int3   
   1400022ee:	int3   
   1400022ef:	int3   
   1400022f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400022f5:	push   rdi
   1400022f6:	sub    rsp,0x20
   1400022fa:	mov    rdi,QWORD PTR [rcx+0x10]
   1400022fe:	mov    rbx,rcx
   140002301:	test   rdi,rdi
   140002304:	je     0x140002349
   140002306:	lea    rcx,[rdi+0x18]
   14000230a:	call   QWORD PTR [rip+0x1e470]        # 0x140020780
   140002310:	lea    rcx,[rdi+0x20]
   140002314:	call   QWORD PTR [rip+0x1e42e]        # 0x140020748
   14000231a:	mov    rcx,QWORD PTR [rdi+0x8]
   14000231e:	test   rcx,rcx
   140002321:	je     0x140002328
   140002323:	call   0x140001fd0
   140002328:	mov    rcx,QWORD PTR [rdi+0x10]
   14000232c:	test   rcx,rcx
   14000232f:	je     0x140002336
   140002331:	call   0x140001fd0
   140002336:	mov    rdx,QWORD PTR [rbx+0x10]
   14000233a:	mov    r8d,0x8
   140002340:	mov    rcx,rbx
   140002343:	call   QWORD PTR [rip+0x1e337]        # 0x140020680
   140002349:	mov    rcx,rbx
   14000234c:	mov    rbx,QWORD PTR [rsp+0x30]
   140002351:	add    rsp,0x20
   140002355:	pop    rdi
   140002356:	rex.W jmp QWORD PTR [rip+0x1e32b]        # 0x140020688
   14000235d:	int3   
   14000235e:	int3   
   14000235f:	int3   
   140002360:	sub    rsp,0x28
   140002364:	mov    rdx,QWORD PTR [rcx]
   140002367:	mov    eax,DWORD PTR [rdx]
   140002369:	test   eax,eax
   14000236b:	je     0x14000237d
   14000236d:	cmp    eax,0xffffffff
   140002370:	je     0x1400023da
   140002372:	lock add DWORD PTR [rdx],0xffffffff
   140002376:	setne  al
   140002379:	test   al,al
   14000237b:	jne    0x1400023da
   14000237d:	mov    QWORD PTR [rsp+0x30],rbx
   140002382:	mov    QWORD PTR [rsp+0x38],rsi
   140002387:	mov    rsi,QWORD PTR [rcx]
   14000238a:	movsxd rax,DWORD PTR [rsi+0xc]
   14000238e:	mov    QWORD PTR [rsp+0x20],rdi
   140002393:	lea    rbx,[rsi+rax*8+0x10]
   140002398:	movsxd rax,DWORD PTR [rsi+0x8]
   14000239c:	lea    rdi,[rsi+rax*8+0x10]
   1400023a1:	cmp    rdi,rbx
   1400023a4:	je     0x1400023c2
   1400023a6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400023b0:	sub    rbx,0x8
   1400023b4:	mov    rcx,rbx
   1400023b7:	call   QWORD PTR [rip+0x1e3c3]        # 0x140020780
   1400023bd:	cmp    rbx,rdi
   1400023c0:	jne    0x1400023b0
   1400023c2:	mov    rcx,rsi
   1400023c5:	call   QWORD PTR [rip+0x1e305]        # 0x1400206d0
   1400023cb:	mov    rdi,QWORD PTR [rsp+0x20]
   1400023d0:	mov    rsi,QWORD PTR [rsp+0x38]
   1400023d5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400023da:	add    rsp,0x28
   1400023de:	ret    
   1400023df:	int3   
   1400023e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400023e5:	push   rdi
   1400023e6:	sub    rsp,0x20
   1400023ea:	mov    rax,QWORD PTR [rdx]
   1400023ed:	mov    rbx,rcx
   1400023f0:	mov    rdi,rdx
   1400023f3:	mov    QWORD PTR [rcx],rax
   1400023f6:	mov    ecx,DWORD PTR [rax]
   1400023f8:	test   ecx,ecx
   1400023fa:	je     0x140002413
   1400023fc:	cmp    ecx,0xffffffff
   1400023ff:	je     0x140002448
   140002401:	lock add DWORD PTR [rax],0x1
   140002405:	mov    rax,rbx
   140002408:	mov    rbx,QWORD PTR [rsp+0x30]
   14000240d:	add    rsp,0x20
   140002411:	pop    rdi
   140002412:	ret    
   140002413:	mov    edx,DWORD PTR [rax+0x4]
   140002416:	mov    rcx,rbx
   140002419:	call   QWORD PTR [rip+0x1e259]        # 0x140020678
   14000241f:	mov    rcx,QWORD PTR [rbx]
   140002422:	mov    r11,QWORD PTR [rdi]
   140002425:	movsxd rax,DWORD PTR [r11+0x8]
   140002429:	lea    r9,[r11+rax*8+0x10]
   14000242e:	movsxd rax,DWORD PTR [rcx+0xc]
   140002432:	lea    r8,[rcx+rax*8+0x10]
   140002437:	movsxd rax,DWORD PTR [rcx+0x8]
   14000243b:	lea    rdx,[rcx+rax*8+0x10]
   140002440:	mov    rcx,rbx
   140002443:	call   0x1400011b0
   140002448:	mov    rax,rbx
   14000244b:	mov    rbx,QWORD PTR [rsp+0x30]
   140002450:	add    rsp,0x20
   140002454:	pop    rdi
   140002455:	ret    
   140002456:	int3   
   140002457:	int3   
   140002458:	int3   
   140002459:	int3   
   14000245a:	int3   
   14000245b:	int3   
   14000245c:	int3   
   14000245d:	int3   
   14000245e:	int3   
   14000245f:	int3   
   140002460:	rex push rbx
   140002462:	push   rbp
   140002463:	push   rdi
   140002464:	sub    rsp,0x20
   140002468:	mov    rbx,QWORD PTR [rdx]
   14000246b:	mov    rdi,rdx
   14000246e:	mov    rbp,rcx
   140002471:	cmp    QWORD PTR [rcx],rbx
   140002474:	je     0x1400025a1
   14000247a:	mov    QWORD PTR [rsp+0x40],rbx
   14000247f:	mov    eax,DWORD PTR [rbx]
   140002481:	mov    QWORD PTR [rsp+0x48],rsi
   140002486:	mov    QWORD PTR [rsp+0x50],r12
   14000248b:	test   eax,eax
   14000248d:	je     0x14000249f
   14000248f:	cmp    eax,0xffffffff
   140002492:	je     0x140002509
   140002494:	lock add DWORD PTR [rbx],0x1
   140002498:	mov    rbx,QWORD PTR [rsp+0x40]
   14000249d:	jmp    0x140002509
   14000249f:	mov    edx,DWORD PTR [rbx+0x4]
   1400024a2:	lea    rcx,[rsp+0x40]
   1400024a7:	call   QWORD PTR [rip+0x1e1cb]        # 0x140020678
   1400024ad:	mov    rbx,QWORD PTR [rsp+0x40]
   1400024b2:	mov    rcx,QWORD PTR [rdi]
   1400024b5:	movsxd rax,DWORD PTR [rbx+0xc]
   1400024b9:	lea    r12,[rbx+rax*8+0x10]
   1400024be:	movsxd rax,DWORD PTR [rcx+0x8]
   1400024c2:	lea    rsi,[rcx+rax*8+0x10]
   1400024c7:	movsxd rax,DWORD PTR [rbx+0x8]
   1400024cb:	lea    rdi,[rbx+rax*8+0x10]
   1400024d0:	cmp    rdi,r12
   1400024d3:	je     0x140002509
   1400024d5:	mov    ecx,0x10
   1400024da:	call   0x14001ee64
   1400024df:	test   rax,rax
   1400024e2:	je     0x1400024f2
   1400024e4:	mov    rdx,QWORD PTR [rsi]
   1400024e7:	mov    rcx,rax
   1400024ea:	call   QWORD PTR [rip+0x1e248]        # 0x140020738
   1400024f0:	jmp    0x1400024f4
   1400024f2:	xor    eax,eax
   1400024f4:	mov    QWORD PTR [rdi],rax
   1400024f7:	add    rdi,0x8
   1400024fb:	add    rsi,0x8
   1400024ff:	cmp    rdi,r12
   140002502:	jne    0x1400024d5
   140002504:	mov    rbx,QWORD PTR [rsp+0x40]
   140002509:	lea    rax,[rsp+0x40]
   14000250e:	cmp    rax,rbp
   140002511:	je     0x140002523
   140002513:	mov    rax,rbx
   140002516:	mov    rbx,QWORD PTR [rbp+0x0]
   14000251a:	mov    QWORD PTR [rsp+0x40],rbx
   14000251f:	mov    QWORD PTR [rbp+0x0],rax
   140002523:	mov    eax,DWORD PTR [rbx]
   140002525:	test   eax,eax
   140002527:	je     0x14000253e
   140002529:	cmp    eax,0xffffffff
   14000252c:	je     0x14000258c
   14000252e:	lock add DWORD PTR [rbx],0xffffffff
   140002532:	setne  al
   140002535:	test   al,al
   140002537:	jne    0x14000258c
   140002539:	mov    rbx,QWORD PTR [rsp+0x40]
   14000253e:	movsxd rax,DWORD PTR [rbx+0xc]
   140002542:	lea    rdi,[rbx+rax*8+0x10]
   140002547:	movsxd rax,DWORD PTR [rbx+0x8]
   14000254b:	lea    r12,[rbx+rax*8+0x10]
   140002550:	cmp    r12,rdi
   140002553:	je     0x140002583
   140002555:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140002560:	mov    rsi,QWORD PTR [rdi-0x8]
   140002564:	sub    rdi,0x8
   140002568:	test   rsi,rsi
   14000256b:	je     0x14000257e
   14000256d:	mov    rcx,rsi
   140002570:	call   QWORD PTR [rip+0x1e1d2]        # 0x140020748
   140002576:	mov    rcx,rsi
   140002579:	call   0x14001ee46
   14000257e:	cmp    rdi,r12
   140002581:	jne    0x140002560
   140002583:	mov    rcx,rbx
   140002586:	call   QWORD PTR [rip+0x1e144]        # 0x1400206d0
   14000258c:	mov    rsi,QWORD PTR [rsp+0x48]
   140002591:	mov    r12,QWORD PTR [rsp+0x50]
   140002596:	mov    rax,rbp
   140002599:	add    rsp,0x20
   14000259d:	pop    rdi
   14000259e:	pop    rbp
   14000259f:	pop    rbx
   1400025a0:	ret    
   1400025a1:	mov    rax,rcx
   1400025a4:	add    rsp,0x20
   1400025a8:	pop    rdi
   1400025a9:	pop    rbp
   1400025aa:	pop    rbx
   1400025ab:	ret    
   1400025ac:	int3   
   1400025ad:	int3   
   1400025ae:	int3   
   1400025af:	int3   
   1400025b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400025b5:	push   rdi
   1400025b6:	sub    rsp,0x20
   1400025ba:	mov    rax,QWORD PTR [rdx]
   1400025bd:	mov    rbx,rcx
   1400025c0:	mov    rdi,rdx
   1400025c3:	mov    ecx,DWORD PTR [rax]
   1400025c5:	test   ecx,ecx
   1400025c7:	je     0x1400025e6
   1400025c9:	cmp    ecx,0xffffffff
   1400025cc:	je     0x1400025d2
   1400025ce:	lock add DWORD PTR [rax],0x1
   1400025d2:	mov    rax,QWORD PTR [rdx]
   1400025d5:	mov    QWORD PTR [rbx],rax
   1400025d8:	mov    rax,rbx
   1400025db:	mov    rbx,QWORD PTR [rsp+0x30]
   1400025e0:	add    rsp,0x20
   1400025e4:	pop    rdi
   1400025e5:	ret    
   1400025e6:	call   QWORD PTR [rip+0x1e144]        # 0x140020730
   1400025ec:	mov    QWORD PTR [rbx],rax
   1400025ef:	mov    rcx,QWORD PTR [rdi]
   1400025f2:	mov    rcx,QWORD PTR [rcx+0x10]
   1400025f6:	test   rcx,rcx
   1400025f9:	je     0x140002629
   1400025fb:	mov    rdx,rax
   1400025fe:	call   0x140001210
   140002603:	mov    rcx,QWORD PTR [rbx]
   140002606:	mov    QWORD PTR [rcx+0x10],rax
   14000260a:	mov    rax,QWORD PTR [rbx]
   14000260d:	mov    rdx,QWORD PTR [rax+0x10]
   140002611:	add    rax,0x8
   140002615:	mov    ecx,DWORD PTR [rdx]
   140002617:	and    ecx,0x3
   14000261a:	or     rcx,rax
   14000261d:	mov    QWORD PTR [rdx],rcx
   140002620:	mov    rcx,QWORD PTR [rbx]
   140002623:	call   QWORD PTR [rip+0x1e047]        # 0x140020670
   140002629:	mov    rax,rbx
   14000262c:	mov    rbx,QWORD PTR [rsp+0x30]
   140002631:	add    rsp,0x20
   140002635:	pop    rdi
   140002636:	ret    
   140002637:	int3   
   140002638:	int3   
   140002639:	int3   
   14000263a:	int3   
   14000263b:	int3   
   14000263c:	int3   
   14000263d:	int3   
   14000263e:	int3   
   14000263f:	int3   
   140002640:	sub    rsp,0x28
   140002644:	mov    rdx,QWORD PTR [rcx]
   140002647:	mov    eax,DWORD PTR [rdx]
   140002649:	test   eax,eax
   14000264b:	je     0x14000265d
   14000264d:	cmp    eax,0xffffffff
   140002650:	je     0x1400026ba
   140002652:	lock add DWORD PTR [rdx],0xffffffff
   140002656:	setne  al
   140002659:	test   al,al
   14000265b:	jne    0x1400026ba
   14000265d:	mov    QWORD PTR [rsp+0x30],rbx
   140002662:	mov    QWORD PTR [rsp+0x38],rsi
   140002667:	mov    rsi,QWORD PTR [rcx]
   14000266a:	movsxd rax,DWORD PTR [rsi+0xc]
   14000266e:	mov    QWORD PTR [rsp+0x20],rdi
   140002673:	lea    rbx,[rsi+rax*8+0x10]
   140002678:	movsxd rax,DWORD PTR [rsi+0x8]
   14000267c:	lea    rdi,[rsi+rax*8+0x10]
   140002681:	cmp    rdi,rbx
   140002684:	je     0x1400026a2
   140002686:	data16 nop WORD PTR [rax+rax*1+0x0]
   140002690:	sub    rbx,0x8
   140002694:	mov    rcx,rbx
   140002697:	call   QWORD PTR [rip+0x1e06b]        # 0x140020708
   14000269d:	cmp    rbx,rdi
   1400026a0:	jne    0x140002690
   1400026a2:	mov    rcx,rsi
   1400026a5:	call   QWORD PTR [rip+0x1e025]        # 0x1400206d0
   1400026ab:	mov    rdi,QWORD PTR [rsp+0x20]
   1400026b0:	mov    rsi,QWORD PTR [rsp+0x38]
   1400026b5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400026ba:	add    rsp,0x28
   1400026be:	ret    
   1400026bf:	int3   
   1400026c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400026c5:	mov    QWORD PTR [rsp+0x18],rbp
   1400026ca:	mov    DWORD PTR [rsp+0x10],edx
   1400026ce:	push   rsi
   1400026cf:	push   rdi
   1400026d0:	push   r12
   1400026d2:	push   r13
   1400026d4:	push   r14
   1400026d6:	sub    rsp,0x20
   1400026da:	mov    rdx,QWORD PTR [rcx]
   1400026dd:	movsxd r13,r8d
   1400026e0:	mov    r12,rcx
   1400026e3:	movsxd rax,DWORD PTR [rdx+0x8]
   1400026e7:	mov    r8d,r13d
   1400026ea:	lea    r14,[rdx+rax*8+0x10]
   1400026ef:	lea    rdx,[rsp+0x58]
   1400026f4:	call   QWORD PTR [rip+0x1df66]        # 0x140020660
   1400026fa:	mov    r10,QWORD PTR [r12]
   1400026fe:	movsxd rdx,DWORD PTR [rsp+0x58]
   140002703:	movsxd r9,DWORD PTR [r10+0x8]
   140002707:	mov    rsi,rax
   14000270a:	mov    rdi,r14
   14000270d:	add    rdx,r9
   140002710:	lea    rbx,[r10+r9*8+0x10]
   140002715:	lea    rbp,[r10+rdx*8+0x10]
   14000271a:	cmp    rbx,rbp
   14000271d:	je     0x14000273e
   14000271f:	nop
   140002720:	test   rbx,rbx
   140002723:	je     0x140002731
   140002725:	mov    rdx,rdi
   140002728:	mov    rcx,rbx
   14000272b:	call   QWORD PTR [rip+0x1e067]        # 0x140020798
   140002731:	add    rbx,0x8
   140002735:	add    rdi,0x8
   140002739:	cmp    rbx,rbp
   14000273c:	jne    0x140002720
   14000273e:	mov    r8,QWORD PTR [r12]
   140002742:	movsxd rdx,DWORD PTR [rsp+0x58]
   140002747:	movsxd rcx,DWORD PTR [r8+0x8]
   14000274b:	movsxd rax,DWORD PTR [r8+0xc]
   14000274f:	lea    rdi,[r14+rdx*8]
   140002753:	add    rcx,rdx
   140002756:	lea    rbp,[r8+rax*8+0x10]
   14000275b:	add    rcx,r13
   14000275e:	lea    rbx,[r8+rcx*8+0x10]
   140002763:	cmp    rbx,rbp
   140002766:	je     0x140002786
   140002768:	test   rbx,rbx
   14000276b:	je     0x140002779
   14000276d:	mov    rdx,rdi
   140002770:	mov    rcx,rbx
   140002773:	call   QWORD PTR [rip+0x1e01f]        # 0x140020798
   140002779:	add    rbx,0x8
   14000277d:	add    rdi,0x8
   140002781:	cmp    rbx,rbp
   140002784:	jne    0x140002768
   140002786:	mov    eax,DWORD PTR [rsi]
   140002788:	test   eax,eax
   14000278a:	je     0x14000279c
   14000278c:	cmp    eax,0xffffffff
   14000278f:	je     0x1400027ce
   140002791:	lock add DWORD PTR [rsi],0xffffffff
   140002795:	setne  al
   140002798:	test   al,al
   14000279a:	jne    0x1400027ce
   14000279c:	movsxd rax,DWORD PTR [rsi+0xc]
   1400027a0:	lea    rbx,[rsi+rax*8+0x10]
   1400027a5:	movsxd rax,DWORD PTR [rsi+0x8]
   1400027a9:	lea    rdi,[rsi+rax*8+0x10]
   1400027ae:	cmp    rdi,rbx
   1400027b1:	je     0x1400027c5
   1400027b3:	sub    rbx,0x8
   1400027b7:	mov    rcx,rbx
   1400027ba:	call   QWORD PTR [rip+0x1dfc0]        # 0x140020780
   1400027c0:	cmp    rbx,rdi
   1400027c3:	jne    0x1400027b3
   1400027c5:	mov    rcx,rsi
   1400027c8:	call   QWORD PTR [rip+0x1df02]        # 0x1400206d0
   1400027ce:	mov    rdx,QWORD PTR [r12]
   1400027d2:	movsxd rax,DWORD PTR [rsp+0x58]
   1400027d7:	mov    rbx,QWORD PTR [rsp+0x50]
   1400027dc:	movsxd rcx,DWORD PTR [rdx+0x8]
   1400027e0:	mov    rbp,QWORD PTR [rsp+0x60]
   1400027e5:	add    rcx,rax
   1400027e8:	lea    rax,[rdx+rcx*8+0x10]
   1400027ed:	add    rsp,0x20
   1400027f1:	pop    r14
   1400027f3:	pop    r13
   1400027f5:	pop    r12
   1400027f7:	pop    rdi
   1400027f8:	pop    rsi
   1400027f9:	ret    
   1400027fa:	int3   
   1400027fb:	int3   
   1400027fc:	int3   
   1400027fd:	int3   
   1400027fe:	int3   
   1400027ff:	int3   
   140002800:	mov    QWORD PTR [rsp+0x8],rbx
   140002805:	mov    QWORD PTR [rsp+0x10],rsi
   14000280a:	push   rdi
   14000280b:	sub    rsp,0x20
   14000280f:	mov    rsi,rcx
   140002812:	mov    rcx,QWORD PTR [rcx]
   140002815:	mov    rdi,r8
   140002818:	call   0x140001c60
   14000281d:	mov    rbx,rax
   140002820:	test   rax,rax
   140002823:	jne    0x14000282c
   140002825:	mov    rbx,QWORD PTR [rsi]
   140002828:	add    rbx,0x8
   14000282c:	mov    ecx,0x8
   140002831:	call   0x14001ee64
   140002836:	test   rax,rax
   140002839:	je     0x140002851
   14000283b:	mov    QWORD PTR [rax],rbx
   14000283e:	mov    QWORD PTR [rdi],rax
   140002841:	mov    rbx,QWORD PTR [rsp+0x30]
   140002846:	mov    rsi,QWORD PTR [rsp+0x38]
   14000284b:	add    rsp,0x20
   14000284f:	pop    rdi
   140002850:	ret    
   140002851:	mov    rbx,QWORD PTR [rsp+0x30]
   140002856:	mov    rsi,QWORD PTR [rsp+0x38]
   14000285b:	mov    QWORD PTR [rdi],0x0
   140002862:	add    rsp,0x20
   140002866:	pop    rdi
   140002867:	ret    
   140002868:	int3   
   140002869:	int3   
   14000286a:	int3   
   14000286b:	int3   
   14000286c:	int3   
   14000286d:	int3   
   14000286e:	int3   
   14000286f:	int3   
   140002870:	mov    QWORD PTR [rsp+0x8],rbx
   140002875:	push   rdi
   140002876:	sub    rsp,0x20
   14000287a:	mov    rdi,QWORD PTR [rcx]
   14000287d:	mov    ecx,DWORD PTR [rdi+0x20]
   140002880:	mov    rax,QWORD PTR [rdi+0x8]
   140002884:	test   ecx,ecx
   140002886:	je     0x140002897
   140002888:	dec    ecx
   14000288a:	cmp    QWORD PTR [rax],rdi
   14000288d:	jne    0x1400028bf
   14000288f:	add    rax,0x8
   140002893:	test   ecx,ecx
   140002895:	jne    0x140002888
   140002897:	mov    rax,rdi
   14000289a:	xor    ebx,ebx
   14000289c:	cmp    rax,rdi
   14000289f:	je     0x1400028b2
   1400028a1:	mov    rcx,rax
   1400028a4:	inc    rbx
   1400028a7:	call   QWORD PTR [rip+0x1de93]        # 0x140020740
   1400028ad:	cmp    rax,rdi
   1400028b0:	jne    0x1400028a1
   1400028b2:	mov    eax,ebx
   1400028b4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400028b9:	add    rsp,0x20
   1400028bd:	pop    rdi
   1400028be:	ret    
   1400028bf:	mov    rax,QWORD PTR [rax]
   1400028c2:	jmp    0x14000289a
   1400028c4:	int3   
   1400028c5:	int3   
   1400028c6:	int3   
   1400028c7:	int3   
   1400028c8:	int3   
   1400028c9:	int3   
   1400028ca:	int3   
   1400028cb:	int3   
   1400028cc:	int3   
   1400028cd:	int3   
   1400028ce:	int3   
   1400028cf:	int3   
   1400028d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400028d5:	mov    QWORD PTR [rsp+0x10],rsi
   1400028da:	push   rdi
   1400028db:	sub    rsp,0x20
   1400028df:	mov    rax,QWORD PTR [rcx]
   1400028e2:	mov    rdi,r8
   1400028e5:	xor    r8d,r8d
   1400028e8:	mov    rbx,rdx
   1400028eb:	mov    rsi,rcx
   1400028ee:	cmp    DWORD PTR [rax+0x20],r8d
   1400028f2:	je     0x140002903
   1400028f4:	mov    edx,DWORD PTR [rax+0x24]
   1400028f7:	mov    rcx,rbx
   1400028fa:	call   QWORD PTR [rip+0x1dd90]        # 0x140020690
   140002900:	mov    r8d,eax
   140002903:	mov    rdx,rbx
   140002906:	mov    rcx,rsi
   140002909:	call   0x140001e20
   14000290e:	mov    ecx,0x8
   140002913:	mov    rbx,QWORD PTR [rax]
   140002916:	call   0x14001ee64
   14000291b:	test   rax,rax
   14000291e:	je     0x140002936
   140002920:	mov    QWORD PTR [rax],rbx
   140002923:	mov    QWORD PTR [rdi],rax
   140002926:	mov    rbx,QWORD PTR [rsp+0x30]
   14000292b:	mov    rsi,QWORD PTR [rsp+0x38]
   140002930:	add    rsp,0x20
   140002934:	pop    rdi
   140002935:	ret    
   140002936:	mov    rbx,QWORD PTR [rsp+0x30]
   14000293b:	mov    rsi,QWORD PTR [rsp+0x38]
   140002940:	mov    QWORD PTR [rdi],0x0
   140002947:	add    rsp,0x20
   14000294b:	pop    rdi
   14000294c:	ret    
   14000294d:	int3   
   14000294e:	int3   
   14000294f:	int3   
   140002950:	mov    QWORD PTR [rsp+0x8],rbx
   140002955:	push   rdi
   140002956:	sub    rsp,0x20
   14000295a:	mov    rdi,QWORD PTR [rcx]
   14000295d:	mov    ebx,edx
   14000295f:	test   edx,edx
   140002961:	jle    0x140002975
   140002963:	mov    rcx,QWORD PTR [rdi]
   140002966:	call   QWORD PTR [rip+0x1ddd4]        # 0x140020740
   14000296c:	dec    ebx
   14000296e:	mov    QWORD PTR [rdi],rax
   140002971:	test   ebx,ebx
   140002973:	jg     0x140002963
   140002975:	test   ebx,ebx
   140002977:	jns    0x140002992
   140002979:	neg    ebx
   14000297b:	nop    DWORD PTR [rax+rax*1+0x0]
   140002980:	mov    rcx,QWORD PTR [rdi]
   140002983:	call   QWORD PTR [rip+0x1dd97]        # 0x140020720
   140002989:	sub    rbx,0x1
   14000298d:	mov    QWORD PTR [rdi],rax
   140002990:	jne    0x140002980
   140002992:	mov    rbx,QWORD PTR [rsp+0x30]
   140002997:	add    rsp,0x20
   14000299b:	pop    rdi
   14000299c:	ret    
   14000299d:	int3   
   14000299e:	int3   
   14000299f:	int3   
   1400029a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400029a5:	mov    QWORD PTR [rsp+0x18],rbp
   1400029aa:	mov    DWORD PTR [rsp+0x10],edx
   1400029ae:	push   rsi
   1400029af:	push   rdi
   1400029b0:	push   r12
   1400029b2:	push   r13
   1400029b4:	push   r14
   1400029b6:	sub    rsp,0x20
   1400029ba:	mov    rdx,QWORD PTR [rcx]
   1400029bd:	movsxd r13,r8d
   1400029c0:	mov    r12,rcx
   1400029c3:	movsxd rax,DWORD PTR [rdx+0x8]
   1400029c7:	mov    r8d,r13d
   1400029ca:	lea    r14,[rdx+rax*8+0x10]
   1400029cf:	lea    rdx,[rsp+0x58]
   1400029d4:	call   QWORD PTR [rip+0x1dc86]        # 0x140020660
   1400029da:	mov    r10,QWORD PTR [r12]
   1400029de:	movsxd rdx,DWORD PTR [rsp+0x58]
   1400029e3:	movsxd r9,DWORD PTR [r10+0x8]
   1400029e7:	mov    rbp,rax
   1400029ea:	mov    rdi,r14
   1400029ed:	add    rdx,r9
   1400029f0:	lea    rbx,[r10+r9*8+0x10]
   1400029f5:	lea    rsi,[r10+rdx*8+0x10]
   1400029fa:	cmp    rbx,rsi
   1400029fd:	je     0x140002a2f
   1400029ff:	nop
   140002a00:	mov    ecx,0x10
   140002a05:	call   0x14001ee64
   140002a0a:	test   rax,rax
   140002a0d:	je     0x140002a1d
   140002a0f:	mov    rdx,QWORD PTR [rdi]
   140002a12:	mov    rcx,rax
   140002a15:	call   QWORD PTR [rip+0x1dd1d]        # 0x140020738
   140002a1b:	jmp    0x140002a1f
   140002a1d:	xor    eax,eax
   140002a1f:	mov    QWORD PTR [rbx],rax
   140002a22:	add    rbx,0x8
   140002a26:	add    rdi,0x8
   140002a2a:	cmp    rbx,rsi
   140002a2d:	jne    0x140002a00
   140002a2f:	mov    r8,QWORD PTR [r12]
   140002a33:	movsxd rdx,DWORD PTR [rsp+0x58]
   140002a38:	movsxd rcx,DWORD PTR [r8+0x8]
   140002a3c:	movsxd rax,DWORD PTR [r8+0xc]
   140002a40:	lea    rdi,[r14+rdx*8]
   140002a44:	add    rcx,rdx
   140002a47:	lea    rsi,[r8+rax*8+0x10]
   140002a4c:	add    rcx,r13
   140002a4f:	lea    rbx,[r8+rcx*8+0x10]
   140002a54:	cmp    rbx,rsi
   140002a57:	je     0x140002a8f
   140002a59:	nop    DWORD PTR [rax+0x0]
   140002a60:	mov    ecx,0x10
   140002a65:	call   0x14001ee64
   140002a6a:	test   rax,rax
   140002a6d:	je     0x140002a7d
   140002a6f:	mov    rdx,QWORD PTR [rdi]
   140002a72:	mov    rcx,rax
   140002a75:	call   QWORD PTR [rip+0x1dcbd]        # 0x140020738
   140002a7b:	jmp    0x140002a7f
   140002a7d:	xor    eax,eax
   140002a7f:	mov    QWORD PTR [rbx],rax
   140002a82:	add    rbx,0x8
   140002a86:	add    rdi,0x8
   140002a8a:	cmp    rbx,rsi
   140002a8d:	jne    0x140002a60
   140002a8f:	mov    eax,DWORD PTR [rbp+0x0]
   140002a92:	test   eax,eax
   140002a94:	je     0x140002aa7
   140002a96:	cmp    eax,0xffffffff
   140002a99:	je     0x140002ab2
   140002a9b:	lock add DWORD PTR [rbp+0x0],0xffffffff
   140002aa0:	setne  al
   140002aa3:	test   al,al
   140002aa5:	jne    0x140002ab2
   140002aa7:	mov    rdx,rbp
   140002aaa:	mov    rcx,r12
   140002aad:	call   0x140001be0
   140002ab2:	mov    rdx,QWORD PTR [r12]
   140002ab6:	movsxd rax,DWORD PTR [rsp+0x58]
   140002abb:	mov    rbx,QWORD PTR [rsp+0x50]
   140002ac0:	movsxd rcx,DWORD PTR [rdx+0x8]
   140002ac4:	mov    rbp,QWORD PTR [rsp+0x60]
   140002ac9:	add    rcx,rax
   140002acc:	lea    rax,[rdx+rcx*8+0x10]
   140002ad1:	add    rsp,0x20
   140002ad5:	pop    r14
   140002ad7:	pop    r13
   140002ad9:	pop    r12
   140002adb:	pop    rdi
   140002adc:	pop    rsi
   140002add:	ret    
   140002ade:	int3   
   140002adf:	int3   
   140002ae0:	mov    QWORD PTR [rsp+0x8],rbx
   140002ae5:	push   rdi
   140002ae6:	sub    rsp,0x20
   140002aea:	mov    rbx,rcx
   140002aed:	call   QWORD PTR [rip+0x1dc3d]        # 0x140020730
   140002af3:	mov    rdx,QWORD PTR [rbx]
   140002af6:	mov    rcx,QWORD PTR [rdx+0x10]
   140002afa:	mov    rdi,rax
   140002afd:	test   rcx,rcx
   140002b00:	je     0x140002b19
   140002b02:	mov    rdx,rax
   140002b05:	call   0x140001210
   140002b0a:	lea    rcx,[rdi+0x8]
   140002b0e:	mov    QWORD PTR [rdi+0x10],rax
   140002b12:	and    QWORD PTR [rax],0x3
   140002b16:	or     QWORD PTR [rax],rcx
   140002b19:	mov    rcx,QWORD PTR [rbx]
   140002b1c:	mov    eax,DWORD PTR [rcx]
   140002b1e:	test   eax,eax
   140002b20:	je     0x140002b32
   140002b22:	cmp    eax,0xffffffff
   140002b25:	je     0x140002b3a
   140002b27:	lock add DWORD PTR [rcx],0xffffffff
   140002b2b:	setne  al
   140002b2e:	test   al,al
   140002b30:	jne    0x140002b3a
   140002b32:	mov    rcx,QWORD PTR [rbx]
   140002b35:	call   0x1400022f0
   140002b3a:	mov    rcx,rdi
   140002b3d:	mov    QWORD PTR [rbx],rdi
   140002b40:	mov    rbx,QWORD PTR [rsp+0x30]
   140002b45:	add    rsp,0x20
   140002b49:	pop    rdi
   140002b4a:	rex.W jmp QWORD PTR [rip+0x1db1f]        # 0x140020670
   140002b51:	int3   
   140002b52:	int3   
   140002b53:	int3   
   140002b54:	int3   
   140002b55:	int3   
   140002b56:	int3   
   140002b57:	int3   
   140002b58:	int3   
   140002b59:	int3   
   140002b5a:	int3   
   140002b5b:	int3   
   140002b5c:	int3   
   140002b5d:	int3   
   140002b5e:	int3   
   140002b5f:	int3   
   140002b60:	mov    QWORD PTR [rsp+0x8],rbx
   140002b65:	mov    QWORD PTR [rsp+0x10],rbp
   140002b6a:	mov    QWORD PTR [rsp+0x18],rsi
   140002b6f:	push   rdi
   140002b70:	sub    rsp,0x20
   140002b74:	mov    r8,QWORD PTR [rcx]
   140002b77:	mov    rbx,rcx
   140002b7a:	movsxd rax,DWORD PTR [r8+0x8]
   140002b7e:	lea    rdi,[r8+rax*8+0x10]
   140002b83:	call   QWORD PTR [rip+0x1daef]        # 0x140020678
   140002b89:	mov    rdx,QWORD PTR [rbx]
   140002b8c:	movsxd rcx,DWORD PTR [rdx+0xc]
   140002b90:	mov    rsi,rax
   140002b93:	lea    rbp,[rdx+rcx*8+0x10]
   140002b98:	movsxd rcx,DWORD PTR [rdx+0x8]
   140002b9c:	lea    rbx,[rdx+rcx*8+0x10]
   140002ba1:	cmp    rbx,rbp
   140002ba4:	je     0x140002bc4
   140002ba6:	test   rbx,rbx
   140002ba9:	je     0x140002bb7
   140002bab:	mov    rdx,rdi
   140002bae:	mov    rcx,rbx
   140002bb1:	call   QWORD PTR [rip+0x1db31]        # 0x1400206e8
   140002bb7:	add    rbx,0x8
   140002bbb:	add    rdi,0x8
   140002bbf:	cmp    rbx,rbp
   140002bc2:	jne    0x140002ba6
   140002bc4:	mov    eax,DWORD PTR [rsi]
   140002bc6:	test   eax,eax
   140002bc8:	je     0x140002bda
   140002bca:	cmp    eax,0xffffffff
   140002bcd:	je     0x140002c0c
   140002bcf:	lock add DWORD PTR [rsi],0xffffffff
   140002bd3:	setne  al
   140002bd6:	test   al,al
   140002bd8:	jne    0x140002c0c
   140002bda:	movsxd rax,DWORD PTR [rsi+0xc]
   140002bde:	lea    rbx,[rsi+rax*8+0x10]
   140002be3:	movsxd rax,DWORD PTR [rsi+0x8]
   140002be7:	lea    rdi,[rsi+rax*8+0x10]
   140002bec:	cmp    rdi,rbx
   140002bef:	je     0x140002c03
   140002bf1:	sub    rbx,0x8
   140002bf5:	mov    rcx,rbx
   140002bf8:	call   QWORD PTR [rip+0x1dafa]        # 0x1400206f8
   140002bfe:	cmp    rbx,rdi
   140002c01:	jne    0x140002bf1
   140002c03:	mov    rcx,rsi
   140002c06:	call   QWORD PTR [rip+0x1dac4]        # 0x1400206d0
   140002c0c:	mov    rbx,QWORD PTR [rsp+0x30]
   140002c11:	mov    rbp,QWORD PTR [rsp+0x38]
   140002c16:	mov    rsi,QWORD PTR [rsp+0x40]
   140002c1b:	add    rsp,0x20
   140002c1f:	pop    rdi
   140002c20:	ret    
   140002c21:	int3   
   140002c22:	int3   
   140002c23:	int3   
   140002c24:	int3   
   140002c25:	int3   
   140002c26:	int3   
   140002c27:	int3   
   140002c28:	int3   
   140002c29:	int3   
   140002c2a:	int3   
   140002c2b:	int3   
   140002c2c:	int3   
   140002c2d:	int3   
   140002c2e:	int3   
   140002c2f:	int3   
   140002c30:	mov    QWORD PTR [rsp+0x8],rbx
   140002c35:	mov    QWORD PTR [rsp+0x10],rbp
   140002c3a:	mov    QWORD PTR [rsp+0x18],rsi
   140002c3f:	push   rdi
   140002c40:	sub    rsp,0x20
   140002c44:	mov    r8,QWORD PTR [rcx]
   140002c47:	mov    rbx,rcx
   140002c4a:	movsxd rax,DWORD PTR [r8+0x8]
   140002c4e:	lea    rdi,[r8+rax*8+0x10]
   140002c53:	call   QWORD PTR [rip+0x1da1f]        # 0x140020678
   140002c59:	mov    rdx,QWORD PTR [rbx]
   140002c5c:	movsxd rcx,DWORD PTR [rdx+0xc]
   140002c60:	mov    rsi,rax
   140002c63:	lea    rbp,[rdx+rcx*8+0x10]
   140002c68:	movsxd rcx,DWORD PTR [rdx+0x8]
   140002c6c:	lea    rbx,[rdx+rcx*8+0x10]
   140002c71:	cmp    rbx,rbp
   140002c74:	je     0x140002c94
   140002c76:	test   rbx,rbx
   140002c79:	je     0x140002c87
   140002c7b:	mov    rdx,rdi
   140002c7e:	mov    rcx,rbx
   140002c81:	call   QWORD PTR [rip+0x1db11]        # 0x140020798
   140002c87:	add    rbx,0x8
   140002c8b:	add    rdi,0x8
   140002c8f:	cmp    rbx,rbp
   140002c92:	jne    0x140002c76
   140002c94:	mov    eax,DWORD PTR [rsi]
   140002c96:	test   eax,eax
   140002c98:	je     0x140002caa
   140002c9a:	cmp    eax,0xffffffff
   140002c9d:	je     0x140002cdc
   140002c9f:	lock add DWORD PTR [rsi],0xffffffff
   140002ca3:	setne  al
   140002ca6:	test   al,al
   140002ca8:	jne    0x140002cdc
   140002caa:	movsxd rax,DWORD PTR [rsi+0xc]
   140002cae:	lea    rbx,[rsi+rax*8+0x10]
   140002cb3:	movsxd rax,DWORD PTR [rsi+0x8]
   140002cb7:	lea    rdi,[rsi+rax*8+0x10]
   140002cbc:	cmp    rdi,rbx
   140002cbf:	je     0x140002cd3
   140002cc1:	sub    rbx,0x8
   140002cc5:	mov    rcx,rbx
   140002cc8:	call   QWORD PTR [rip+0x1dab2]        # 0x140020780
   140002cce:	cmp    rbx,rdi
   140002cd1:	jne    0x140002cc1
   140002cd3:	mov    rcx,rsi
   140002cd6:	call   QWORD PTR [rip+0x1d9f4]        # 0x1400206d0
   140002cdc:	mov    rbx,QWORD PTR [rsp+0x30]
   140002ce1:	mov    rbp,QWORD PTR [rsp+0x38]
   140002ce6:	mov    rsi,QWORD PTR [rsp+0x40]
   140002ceb:	add    rsp,0x20
   140002cef:	pop    rdi
   140002cf0:	ret    
   140002cf1:	int3   
   140002cf2:	int3   
   140002cf3:	int3   
   140002cf4:	int3   
   140002cf5:	int3   
   140002cf6:	int3   
   140002cf7:	int3   
   140002cf8:	int3   
   140002cf9:	int3   
   140002cfa:	int3   
   140002cfb:	int3   
   140002cfc:	int3   
   140002cfd:	int3   
   140002cfe:	int3   
   140002cff:	int3   
   140002d00:	sub    rsp,0x38
   140002d04:	mov    eax,DWORD PTR [rip+0x2f8be]        # 0x1400325c8
   140002d0a:	test   eax,eax
   140002d0c:	jne    0x140002d77
   140002d0e:	lea    rdx,[rip+0x1dcbb]        # 0x1400209d0
   140002d15:	lea    rcx,[rsp+0x48]
   140002d1a:	mov    QWORD PTR [rsp+0x30],rbx
   140002d1f:	call   QWORD PTR [rip+0x1d97b]        # 0x1400206a0
   140002d25:	lea    r8,[rip+0xffffffffffffe5c4]        # 0x1400012f0
   140002d2c:	lea    rdx,[rip+0xffffffffffffe2cd]        # 0x140001000
   140002d33:	lea    rcx,[rsp+0x48]
   140002d38:	mov    r9d,0x70
   140002d3e:	mov    QWORD PTR [rsp+0x28],0x0
   140002d47:	mov    DWORD PTR [rsp+0x40],0x7
   140002d4f:	mov    DWORD PTR [rsp+0x20],0x107
   140002d57:	call   QWORD PTR [rip+0x1d96b]        # 0x1400206c8
   140002d5d:	lea    rcx,[rsp+0x48]
   140002d62:	mov    ebx,eax
   140002d64:	call   QWORD PTR [rip+0x1d98e]        # 0x1400206f8
   140002d6a:	mov    DWORD PTR [rip+0x2f858],ebx        # 0x1400325c8
   140002d70:	mov    eax,ebx
   140002d72:	mov    rbx,QWORD PTR [rsp+0x30]
   140002d77:	add    rsp,0x38
   140002d7b:	ret    
   140002d7c:	int3   
   140002d7d:	int3   
   140002d7e:	int3   
   140002d7f:	int3   
   140002d80:	mov    QWORD PTR [rsp+0x8],rbx
   140002d85:	push   rdi
   140002d86:	sub    rsp,0x20
   140002d8a:	mov    r8,QWORD PTR [rcx+0x8]
   140002d8e:	mov    rbx,rcx
   140002d91:	add    rcx,0x8
   140002d95:	mov    eax,DWORD PTR [r8]
   140002d98:	mov    edi,edx
   140002d9a:	test   eax,eax
   140002d9c:	je     0x140002daf
   140002d9e:	cmp    eax,0xffffffff
   140002da1:	je     0x140002db7
   140002da3:	lock add DWORD PTR [r8],0xffffffff
   140002da8:	setne  al
   140002dab:	test   al,al
   140002dad:	jne    0x140002db7
   140002daf:	mov    rdx,QWORD PTR [rcx]
   140002db2:	call   0x140001be0
   140002db7:	lea    rax,[rip+0x1da5a]        # 0x140020818
   140002dbe:	mov    QWORD PTR [rbx],rax
   140002dc1:	test   dil,0x1
   140002dc5:	je     0x140002dcf
   140002dc7:	mov    rcx,rbx
   140002dca:	call   0x14001ee46
   140002dcf:	mov    rax,rbx
   140002dd2:	mov    rbx,QWORD PTR [rsp+0x30]
   140002dd7:	add    rsp,0x20
   140002ddb:	pop    rdi
   140002ddc:	ret    
   140002ddd:	int3   
   140002dde:	int3   
   140002ddf:	int3   
   140002de0:	mov    QWORD PTR [rsp+0x8],rbx
   140002de5:	push   rdi
   140002de6:	sub    rsp,0x20
   140002dea:	mov    rbx,rcx
   140002ded:	mov    rcx,rdx
   140002df0:	mov    rdi,rdx
   140002df3:	call   QWORD PTR [rip+0x1d847]        # 0x140020640
   140002df9:	mov    rcx,rdi
   140002dfc:	cmp    eax,0x8
   140002dff:	jne    0x140002e20
   140002e01:	call   QWORD PTR [rip+0x1d841]        # 0x140020648
   140002e07:	mov    rcx,rbx
   140002e0a:	mov    rdx,rax
   140002e0d:	call   0x1400025b0
   140002e12:	mov    rax,rbx
   140002e15:	mov    rbx,QWORD PTR [rsp+0x30]
   140002e1a:	add    rsp,0x20
   140002e1e:	pop    rdi
   140002e1f:	ret    
   140002e20:	mov    rax,QWORD PTR [rip+0x1d931]        # 0x140020758
   140002e27:	lea    r8,[rsp+0x40]
   140002e2c:	mov    edx,0x8
   140002e31:	mov    QWORD PTR [rsp+0x40],rax
   140002e36:	call   QWORD PTR [rip+0x1d814]        # 0x140020650
   140002e3c:	mov    rcx,QWORD PTR [rsp+0x40]
   140002e41:	test   al,al
   140002e43:	je     0x140002ead
   140002e45:	mov    eax,DWORD PTR [rcx]
   140002e47:	test   eax,eax
   140002e49:	je     0x140002e5e
   140002e4b:	cmp    eax,0xffffffff
   140002e4e:	je     0x140002e59
   140002e50:	lock add DWORD PTR [rcx],0x1
   140002e54:	mov    rcx,QWORD PTR [rsp+0x40]
   140002e59:	mov    QWORD PTR [rbx],rcx
   140002e5c:	jmp    0x140002eb7
   140002e5e:	call   QWORD PTR [rip+0x1d8cc]        # 0x140020730
   140002e64:	mov    rcx,QWORD PTR [rsp+0x40]
   140002e69:	mov    QWORD PTR [rbx],rax
   140002e6c:	mov    r8,QWORD PTR [rcx+0x10]
   140002e70:	test   r8,r8
   140002e73:	je     0x140002eb7
   140002e75:	mov    rdx,rax
   140002e78:	mov    rcx,r8
   140002e7b:	call   0x140001210
   140002e80:	mov    rcx,QWORD PTR [rbx]
   140002e83:	mov    QWORD PTR [rcx+0x10],rax
   140002e87:	mov    rax,QWORD PTR [rbx]
   140002e8a:	mov    rdx,QWORD PTR [rax+0x10]
   140002e8e:	add    rax,0x8
   140002e92:	mov    ecx,DWORD PTR [rdx]
   140002e94:	and    ecx,0x3
   140002e97:	or     rcx,rax
   140002e9a:	mov    QWORD PTR [rdx],rcx
   140002e9d:	mov    rcx,QWORD PTR [rbx]
   140002ea0:	call   QWORD PTR [rip+0x1d7ca]        # 0x140020670
   140002ea6:	mov    rcx,QWORD PTR [rsp+0x40]
   140002eab:	jmp    0x140002eb7
   140002ead:	mov    rax,QWORD PTR [rip+0x1d8a4]        # 0x140020758
   140002eb4:	mov    QWORD PTR [rbx],rax
   140002eb7:	mov    eax,DWORD PTR [rcx]
   140002eb9:	test   eax,eax
   140002ebb:	je     0x140002ed2
   140002ebd:	cmp    eax,0xffffffff
   140002ec0:	je     0x140002ed7
   140002ec2:	lock add DWORD PTR [rcx],0xffffffff
   140002ec6:	setne  al
   140002ec9:	test   al,al
   140002ecb:	jne    0x140002ed7
   140002ecd:	mov    rcx,QWORD PTR [rsp+0x40]
   140002ed2:	call   0x1400022f0
   140002ed7:	mov    rax,rbx
   140002eda:	mov    rbx,QWORD PTR [rsp+0x30]
   140002edf:	add    rsp,0x20
   140002ee3:	pop    rdi
   140002ee4:	ret    
   140002ee5:	int3   
   140002ee6:	int3   
   140002ee7:	int3   
   140002ee8:	int3   
   140002ee9:	int3   
   140002eea:	int3   
   140002eeb:	int3   
   140002eec:	int3   
   140002eed:	int3   
   140002eee:	int3   
   140002eef:	int3   
   140002ef0:	mov    QWORD PTR [rsp+0x8],rbx
   140002ef5:	push   rdi
   140002ef6:	sub    rsp,0x20
   140002efa:	mov    rax,QWORD PTR [rcx]
   140002efd:	mov    rdi,rdx
   140002f00:	mov    rbx,rcx
   140002f03:	mov    r8d,DWORD PTR [rax]
   140002f06:	cmp    r8d,0x1
   140002f0a:	je     0x140002f5d
   140002f0c:	test   r8d,r8d
   140002f0f:	je     0x140002f5d
   140002f11:	mov    edx,0x7fffffff
   140002f16:	mov    r8d,0x1
   140002f1c:	call   0x1400029a0
   140002f21:	mov    ecx,0x10
   140002f26:	mov    rbx,rax
   140002f29:	call   0x14001ee64
   140002f2e:	test   rax,rax
   140002f31:	je     0x140002f4d
   140002f33:	mov    rdx,rdi
   140002f36:	mov    rcx,rax
   140002f39:	call   QWORD PTR [rip+0x1d7f9]        # 0x140020738
   140002f3f:	mov    QWORD PTR [rbx],rax
   140002f42:	mov    rbx,QWORD PTR [rsp+0x30]
   140002f47:	add    rsp,0x20
   140002f4b:	pop    rdi
   140002f4c:	ret    
   140002f4d:	xor    eax,eax
   140002f4f:	mov    QWORD PTR [rbx],rax
   140002f52:	mov    rbx,QWORD PTR [rsp+0x30]
   140002f57:	add    rsp,0x20
   140002f5b:	pop    rdi
   140002f5c:	ret    
   140002f5d:	call   QWORD PTR [rip+0x1d6d5]        # 0x140020638
   140002f63:	mov    r8,rdi
   140002f66:	mov    rcx,rbx
   140002f69:	mov    rdx,rax
   140002f6c:	mov    rbx,QWORD PTR [rsp+0x30]
   140002f71:	add    rsp,0x20
   140002f75:	pop    rdi
   140002f76:	jmp    0x140001160
   140002f7b:	int3   
   140002f7c:	int3   
   140002f7d:	int3   
   140002f7e:	int3   
   140002f7f:	int3   
   140002f80:	mov    QWORD PTR [rsp+0x8],rbx
   140002f85:	push   rdi
   140002f86:	sub    rsp,0x30
   140002f8a:	mov    rbx,rcx
   140002f8d:	mov    rcx,QWORD PTR [rcx]
   140002f90:	lea    r8,[rip+0xfffffffffffff349]        # 0x1400022e0
   140002f97:	lea    rdx,[rip+0xffffffffffffee52]        # 0x140001df0
   140002f9e:	mov    r9d,0x18
   140002fa4:	mov    DWORD PTR [rsp+0x20],0x8
   140002fac:	call   QWORD PTR [rip+0x1d67e]        # 0x140020630
   140002fb2:	mov    rdi,rax
   140002fb5:	mov    rax,QWORD PTR [rbx]
   140002fb8:	mov    ecx,DWORD PTR [rax+0x10]
   140002fbb:	test   ecx,ecx
   140002fbd:	je     0x140002fd0
   140002fbf:	cmp    ecx,0xffffffff
   140002fc2:	je     0x140002fe0
   140002fc4:	lock add DWORD PTR [rax+0x10],0xffffffff
   140002fc9:	setne  al
   140002fcc:	test   al,al
   140002fce:	jne    0x140002fe0
   140002fd0:	mov    rcx,QWORD PTR [rbx]
   140002fd3:	lea    rdx,[rip+0xfffffffffffff306]        # 0x1400022e0
   140002fda:	call   QWORD PTR [rip+0x1d688]        # 0x140020668
   140002fe0:	mov    QWORD PTR [rbx],rdi
   140002fe3:	mov    rbx,QWORD PTR [rsp+0x40]
   140002fe8:	add    rsp,0x30
   140002fec:	pop    rdi
   140002fed:	ret    
   140002fee:	int3   
   140002fef:	int3   
   140002ff0:	mov    QWORD PTR [rsp+0x8],rbx
   140002ff5:	push   rdi
   140002ff6:	sub    rsp,0x20
   140002ffa:	mov    rax,QWORD PTR [rcx]
   140002ffd:	cmp    QWORD PTR [rax+0x10],0x0
   140003002:	lea    rbx,[rax+0x8]
   140003006:	je     0x14000300e
   140003008:	mov    rax,QWORD PTR [rax+0x20]
   14000300c:	jmp    0x140003012
   14000300e:	add    rax,0x8
   140003012:	xor    edi,edi
   140003014:	cmp    rax,rbx
   140003017:	je     0x140003031
   140003019:	nop    DWORD PTR [rax+0x0]
   140003020:	mov    rcx,rax
   140003023:	inc    rdi
   140003026:	call   QWORD PTR [rip+0x1d6b4]        # 0x1400206e0
   14000302c:	cmp    rax,rbx
   14000302f:	jne    0x140003020
   140003031:	mov    eax,edi
   140003033:	mov    rbx,QWORD PTR [rsp+0x30]
   140003038:	add    rsp,0x20
   14000303c:	pop    rdi
   14000303d:	ret    
   14000303e:	int3   
   14000303f:	int3   
   140003040:	mov    QWORD PTR [rsp+0x8],rbx
   140003045:	push   rdi
   140003046:	sub    rsp,0x20
   14000304a:	mov    rdi,QWORD PTR [rcx]
   14000304d:	mov    ebx,edx
   14000304f:	test   edx,edx
   140003051:	jle    0x140003065
   140003053:	mov    rcx,QWORD PTR [rdi]
   140003056:	call   QWORD PTR [rip+0x1d684]        # 0x1400206e0
   14000305c:	dec    ebx
   14000305e:	mov    QWORD PTR [rdi],rax
   140003061:	test   ebx,ebx
   140003063:	jg     0x140003053
   140003065:	test   ebx,ebx
   140003067:	jns    0x140003082
   140003069:	neg    ebx
   14000306b:	nop    DWORD PTR [rax+rax*1+0x0]
   140003070:	mov    rcx,QWORD PTR [rdi]
   140003073:	call   QWORD PTR [rip+0x1d65f]        # 0x1400206d8
   140003079:	sub    rbx,0x1
   14000307d:	mov    QWORD PTR [rdi],rax
   140003080:	jne    0x140003070
   140003082:	mov    rbx,QWORD PTR [rsp+0x30]
   140003087:	add    rsp,0x20
   14000308b:	pop    rdi
   14000308c:	ret    
   14000308d:	int3   
   14000308e:	int3   
   14000308f:	int3   
   140003090:	mov    QWORD PTR [rsp+0x8],rbx
   140003095:	mov    QWORD PTR [rsp+0x10],rbp
   14000309a:	mov    QWORD PTR [rsp+0x18],rsi
   14000309f:	push   rdi
   1400030a0:	push   r12
   1400030a2:	push   r13
   1400030a4:	push   r14
   1400030a6:	push   r15
   1400030a8:	sub    rsp,0x30
   1400030ac:	mov    rax,QWORD PTR [rcx]
   1400030af:	mov    rbp,rdx
   1400030b2:	mov    r15,r9
   1400030b5:	mov    edx,DWORD PTR [rax]
   1400030b7:	mov    r12,r8
   1400030ba:	mov    r14,rcx
   1400030bd:	cmp    edx,0x1
   1400030c0:	je     0x1400030cb
   1400030c2:	test   edx,edx
   1400030c4:	je     0x1400030cb
   1400030c6:	call   0x140002ae0
   1400030cb:	mov    rax,QWORD PTR [r14]
   1400030ce:	xor    esi,esi
   1400030d0:	mov    dil,0x1
   1400030d3:	mov    rbx,QWORD PTR [rax+0x10]
   1400030d7:	lea    r13,[rax+0x8]
   1400030db:	test   rbx,rbx
   1400030de:	je     0x140003135
   1400030e0:	lea    rcx,[rbx+0x18]
   1400030e4:	mov    rdx,r12
   1400030e7:	mov    r13,rbx
   1400030ea:	call   QWORD PTR [rip+0x1d620]        # 0x140020710
   1400030f0:	test   al,al
   1400030f2:	jne    0x140003100
   1400030f4:	mov    rsi,rbx
   1400030f7:	mov    rbx,QWORD PTR [rbx+0x8]
   1400030fb:	mov    dil,0x1
   1400030fe:	jmp    0x140003107
   140003100:	mov    rbx,QWORD PTR [rbx+0x10]
   140003104:	xor    dil,dil
   140003107:	test   rbx,rbx
   14000310a:	jne    0x1400030e0
   14000310c:	test   rsi,rsi
   14000310f:	je     0x140003135
   140003111:	lea    rdx,[rsi+0x18]
   140003115:	mov    rcx,r12
   140003118:	call   QWORD PTR [rip+0x1d5f2]        # 0x140020710
   14000311e:	test   al,al
   140003120:	jne    0x140003135
   140003122:	lea    rcx,[rsi+0x20]
   140003126:	mov    rdx,r15
   140003129:	call   QWORD PTR [rip+0x1d4f9]        # 0x140020628
   14000312f:	mov    QWORD PTR [rbp+0x0],rsi
   140003133:	jmp    0x14000317a
   140003135:	mov    rcx,QWORD PTR [r14]
   140003138:	mov    edx,0x30
   14000313d:	mov    r9,r13
   140003140:	lea    r8d,[rdx-0x28]
   140003144:	mov    BYTE PTR [rsp+0x20],dil
   140003149:	call   QWORD PTR [rip+0x1d5d9]        # 0x140020728
   14000314f:	mov    rbx,rax
   140003152:	lea    rcx,[rax+0x18]
   140003156:	test   rcx,rcx
   140003159:	je     0x140003164
   14000315b:	mov    rdx,r12
   14000315e:	call   QWORD PTR [rip+0x1d634]        # 0x140020798
   140003164:	lea    rcx,[rbx+0x20]
   140003168:	test   rcx,rcx
   14000316b:	je     0x140003176
   14000316d:	mov    rdx,r15
   140003170:	call   QWORD PTR [rip+0x1d5c2]        # 0x140020738
   140003176:	mov    QWORD PTR [rbp+0x0],rbx
   14000317a:	mov    rbx,QWORD PTR [rsp+0x60]
   14000317f:	mov    rsi,QWORD PTR [rsp+0x70]
   140003184:	mov    rax,rbp
   140003187:	mov    rbp,QWORD PTR [rsp+0x68]
   14000318c:	add    rsp,0x30
   140003190:	pop    r15
   140003192:	pop    r14
   140003194:	pop    r13
   140003196:	pop    r12
   140003198:	pop    rdi
   140003199:	ret    
   14000319a:	int3   
   14000319b:	int3   
   14000319c:	int3   
   14000319d:	int3   
   14000319e:	int3   
   14000319f:	int3   
   1400031a0:	mov    QWORD PTR [rsp+0x8],rcx
   1400031a5:	push   rbx
   1400031a6:	push   rbp
   1400031a7:	push   rdi
   1400031a8:	push   r15
   1400031aa:	sub    rsp,0x328
   1400031b1:	mov    r15,rcx
   1400031b4:	lea    rcx,[rsp+0x50]
   1400031b9:	xor    ebp,ebp
   1400031bb:	mov    DWORD PTR [rsp+0x360],ebp
   1400031c2:	call   QWORD PTR [rip+0x1d418]        # 0x1400205e0
   1400031c8:	lea    edx,[rbp+0x1]
   1400031cb:	lea    rcx,[rsp+0x50]
   1400031d0:	mov    DWORD PTR [rsp+0x360],0x1
   1400031db:	call   QWORD PTR [rip+0x1d407]        # 0x1400205e8
   1400031e1:	test   al,al
   1400031e3:	jne    0x1400032f2
   1400031e9:	lea    rdx,[rsp+0x70]
   1400031ee:	lea    rcx,[rsp+0x50]
   1400031f3:	call   QWORD PTR [rip+0x1d3f7]        # 0x1400205f0
   1400031f9:	lea    rdx,[rsp+0x1c8]
   140003201:	mov    rcx,rax
   140003204:	call   QWORD PTR [rip+0x1d3ee]        # 0x1400205f8
   14000320a:	lea    rdx,[rsp+0xa0]
   140003212:	lea    rcx,[rsp+0x50]
   140003217:	mov    rdi,rax
   14000321a:	call   QWORD PTR [rip+0x1d3e0]        # 0x140020600
   140003220:	lea    rcx,[rsp+0x98]
   140003228:	mov    rdx,rax
   14000322b:	call   QWORD PTR [rip+0x1d487]        # 0x1400206b8
   140003231:	lea    rdx,[rsp+0x1a0]
   140003239:	mov    rcx,rax
   14000323c:	call   QWORD PTR [rip+0x1d3b6]        # 0x1400205f8
   140003242:	mov    rcx,QWORD PTR [rip+0x1cf0f]        # 0x140020158
   140003249:	lea    rdx,[rip+0x1d7d8]        # 0x140020a28
   140003250:	mov    rbx,rax
   140003253:	call   0x140001800
   140003258:	mov    rdx,rbx
   14000325b:	mov    rcx,rax
   14000325e:	call   QWORD PTR [rip+0x1ceec]        # 0x140020150
   140003264:	mov    dl,0x3a
   140003266:	mov    rcx,rax
   140003269:	call   0x1400019f0
   14000326e:	mov    rdx,rdi
   140003271:	mov    rcx,rax
   140003274:	call   QWORD PTR [rip+0x1ced6]        # 0x140020150
   14000327a:	mov    rdx,QWORD PTR [rip+0x1cec7]        # 0x140020148
   140003281:	mov    rcx,rax
   140003284:	call   QWORD PTR [rip+0x1ceb6]        # 0x140020140
   14000328a:	lea    rcx,[rsp+0x1a0]
   140003292:	call   QWORD PTR [rip+0x1cea0]        # 0x140020138
   140003298:	lea    rcx,[rsp+0x98]
   1400032a0:	call   QWORD PTR [rip+0x1d4da]        # 0x140020780
   1400032a6:	lea    rcx,[rsp+0xa0]
   1400032ae:	call   QWORD PTR [rip+0x1d4cc]        # 0x140020780
   1400032b4:	lea    rcx,[rsp+0x1c8]
   1400032bc:	call   QWORD PTR [rip+0x1ce76]        # 0x140020138
   1400032c2:	lea    rcx,[rsp+0x70]
   1400032c7:	call   QWORD PTR [rip+0x1d4b3]        # 0x140020780
   1400032cd:	mov    r11,QWORD PTR [rip+0x1d48c]        # 0x140020760
   1400032d4:	lea    rcx,[rsp+0x50]
   1400032d9:	mov    QWORD PTR [r15],r11
   1400032dc:	call   QWORD PTR [rip+0x1d326]        # 0x140020608
   1400032e2:	mov    rax,r15
   1400032e5:	add    rsp,0x328
   1400032ec:	pop    r15
   1400032ee:	pop    rdi
   1400032ef:	pop    rbp
   1400032f0:	pop    rbx
   1400032f1:	ret    
   1400032f2:	mov    QWORD PTR [rsp+0x358],rsi
   1400032fa:	mov    QWORD PTR [rsp+0x320],r12
   140003302:	lea    rdx,[rsp+0x80]
   14000330a:	lea    rcx,[rsp+0x50]
   14000330f:	mov    QWORD PTR [rsp+0x318],r13
   140003317:	mov    QWORD PTR [rsp+0x310],r14
   14000331f:	call   QWORD PTR [rip+0x1d2eb]        # 0x140020610
   140003325:	lea    rcx,[rsp+0x60]
   14000332a:	mov    rdx,rax
   14000332d:	call   QWORD PTR [rip+0x1d2e5]        # 0x140020618
   140003333:	lea    rcx,[rsp+0x80]
   14000333b:	call   QWORD PTR [rip+0x1d3b7]        # 0x1400206f8
   140003341:	lea    rcx,[rsp+0x50]
   140003346:	call   QWORD PTR [rip+0x1d2d4]        # 0x140020620
   14000334c:	lea    rcx,[rsp+0xb0]
   140003354:	call   0x140016da0
   140003359:	mov    rax,QWORD PTR [rip+0x1d400]        # 0x140020760
   140003360:	lea    r11,[rip+0x1d6a1]        # 0x140020a08
   140003367:	lea    rdx,[rsp+0x40]
   14000336c:	lea    rcx,[rsp+0xb0]
   140003374:	mov    QWORD PTR [rsp+0x48],rax
   140003379:	mov    QWORD PTR [rsp+0x40],r11
   14000337e:	call   0x140016b20
   140003383:	lea    rdx,[rsp+0xb0]
   14000338b:	lea    rcx,[rsp+0x100]
   140003393:	call   0x140017f10
   140003398:	xor    r9d,r9d
   14000339b:	lea    rdx,[rsp+0x60]
   1400033a0:	lea    r8d,[r9+0x1]
   1400033a4:	lea    rcx,[rsp+0x100]
   1400033ac:	call   0x140018000
   1400033b1:	lea    rdx,[rsp+0xb0]
   1400033b9:	lea    rcx,[rsp+0x1f0]
   1400033c1:	call   0x14000f170
   1400033c6:	lea    rcx,[rsp+0x1f0]
   1400033ce:	mov    edx,0x67
   1400033d3:	call   0x14000f340
   1400033d8:	mov    rbx,QWORD PTR [rsp+0x308]
   1400033e0:	mov    QWORD PTR [rsp+0x368],rbx
   1400033e8:	mov    eax,DWORD PTR [rbx]
   1400033ea:	test   eax,eax
   1400033ec:	je     0x140003408
   1400033ee:	cmp    eax,0xffffffff
   1400033f1:	je     0x1400034ac
   1400033f7:	lock add DWORD PTR [rbx],0x1
   1400033fb:	mov    rbx,QWORD PTR [rsp+0x368]
   140003403:	jmp    0x1400034ac
   140003408:	mov    edx,DWORD PTR [rbx+0x4]
   14000340b:	lea    rcx,[rsp+0x368]
   140003413:	call   QWORD PTR [rip+0x1d25f]        # 0x140020678
   140003419:	mov    rbx,QWORD PTR [rsp+0x368]
   140003421:	mov    rcx,QWORD PTR [rsp+0x308]
   140003429:	movsxd rax,DWORD PTR [rbx+0xc]
   14000342d:	lea    r12,[rbx+rax*8+0x10]
   140003432:	movsxd rax,DWORD PTR [rcx+0x8]
   140003436:	lea    rsi,[rcx+rax*8+0x10]
   14000343b:	movsxd rax,DWORD PTR [rbx+0x8]
   14000343f:	lea    rdi,[rbx+rax*8+0x10]
   140003444:	cmp    rdi,r12
   140003447:	je     0x1400034ac
   140003449:	nop    DWORD PTR [rax+0x0]
   140003450:	mov    ecx,0x20
   140003455:	call   0x14001ee64
   14000345a:	mov    rbx,rax
   14000345d:	test   rax,rax
   140003460:	je     0x140003492
   140003462:	mov    rdx,QWORD PTR [rsi]
   140003465:	add    rdx,0x18
   140003469:	mov    ecx,DWORD PTR [rdx-0x18]
   14000346c:	mov    DWORD PTR [rax],ecx
   14000346e:	mov    ecx,DWORD PTR [rdx-0x14]
   140003471:	mov    DWORD PTR [rax+0x4],ecx
   140003474:	mov    ecx,DWORD PTR [rdx-0x10]
   140003477:	mov    DWORD PTR [rax+0x8],ecx
   14000347a:	mov    ecx,DWORD PTR [rdx-0xc]
   14000347d:	mov    DWORD PTR [rax+0xc],ecx
   140003480:	mov    eax,DWORD PTR [rdx-0x8]
   140003483:	lea    rcx,[rbx+0x18]
   140003487:	mov    DWORD PTR [rbx+0x10],eax
   14000348a:	call   QWORD PTR [rip+0x1d308]        # 0x140020798
   140003490:	jmp    0x140003494
   140003492:	xor    ebx,ebx
   140003494:	mov    QWORD PTR [rdi],rbx
   140003497:	add    rdi,0x8
   14000349b:	add    rsi,0x8
   14000349f:	cmp    rdi,r12
   1400034a2:	jne    0x140003450
   1400034a4:	mov    rbx,QWORD PTR [rsp+0x368]
   1400034ac:	mov    QWORD PTR [rsp+0x20],rbx
   1400034b1:	mov    eax,DWORD PTR [rbx]
   1400034b3:	mov    rdx,rbx
   1400034b6:	test   eax,eax
   1400034b8:	je     0x1400034d9
   1400034ba:	cmp    eax,0xffffffff
   1400034bd:	je     0x140003575
   1400034c3:	lock add DWORD PTR [rbx],0x1
   1400034c7:	mov    rbx,QWORD PTR [rsp+0x368]
   1400034cf:	mov    rdx,QWORD PTR [rsp+0x20]
   1400034d4:	jmp    0x140003575
   1400034d9:	mov    edx,DWORD PTR [rbx+0x4]
   1400034dc:	lea    rcx,[rsp+0x20]
   1400034e1:	call   QWORD PTR [rip+0x1d191]        # 0x140020678
   1400034e7:	mov    rdx,QWORD PTR [rsp+0x20]
   1400034ec:	mov    rbx,QWORD PTR [rsp+0x368]
   1400034f4:	movsxd rax,DWORD PTR [rdx+0xc]
   1400034f8:	lea    r12,[rdx+rax*8+0x10]
   1400034fd:	movsxd rax,DWORD PTR [rbx+0x8]
   140003501:	lea    rsi,[rbx+rax*8+0x10]
   140003506:	movsxd rax,DWORD PTR [rdx+0x8]
   14000350a:	lea    rdi,[rdx+rax*8+0x10]
   14000350f:	cmp    rdi,r12
   140003512:	je     0x140003575
   140003514:	mov    ecx,0x20
   140003519:	call   0x14001ee64
   14000351e:	mov    rbx,rax
   140003521:	test   rax,rax
   140003524:	je     0x140003556
   140003526:	mov    rdx,QWORD PTR [rsi]
   140003529:	add    rdx,0x18
   14000352d:	mov    ecx,DWORD PTR [rdx-0x18]
   140003530:	mov    DWORD PTR [rax],ecx
   140003532:	mov    ecx,DWORD PTR [rdx-0x14]
   140003535:	mov    DWORD PTR [rax+0x4],ecx
   140003538:	mov    ecx,DWORD PTR [rdx-0x10]
   14000353b:	mov    DWORD PTR [rax+0x8],ecx
   14000353e:	mov    ecx,DWORD PTR [rdx-0xc]
   140003541:	mov    DWORD PTR [rax+0xc],ecx
   140003544:	mov    eax,DWORD PTR [rdx-0x8]
   140003547:	lea    rcx,[rbx+0x18]
   14000354b:	mov    DWORD PTR [rbx+0x10],eax
   14000354e:	call   QWORD PTR [rip+0x1d244]        # 0x140020798
   140003554:	jmp    0x140003558
   140003556:	xor    ebx,ebx
   140003558:	mov    QWORD PTR [rdi],rbx
   14000355b:	add    rdi,0x8
   14000355f:	add    rsi,0x8
   140003563:	cmp    rdi,r12
   140003566:	jne    0x140003514
   140003568:	mov    rbx,QWORD PTR [rsp+0x368]
   140003570:	mov    rdx,QWORD PTR [rsp+0x20]
   140003575:	mov    DWORD PTR [rsp+0x28],ebp
   140003579:	movsxd rax,DWORD PTR [rdx+0x8]
   14000357d:	lea    rcx,[rdx+rax*8+0x10]
   140003582:	mov    QWORD PTR [rsp+0x30],rcx
   140003587:	movsxd rax,DWORD PTR [rdx+0xc]
   14000358b:	lea    rcx,[rdx+rax*8+0x10]
   140003590:	mov    QWORD PTR [rsp+0x38],rcx
   140003595:	mov    eax,DWORD PTR [rbx]
   140003597:	test   eax,eax
   140003599:	je     0x1400035b3
   14000359b:	cmp    eax,0xffffffff
   14000359e:	je     0x140003600
   1400035a0:	lock add DWORD PTR [rbx],0xffffffff
   1400035a4:	setne  al
   1400035a7:	test   al,al
   1400035a9:	jne    0x140003600
   1400035ab:	mov    rbx,QWORD PTR [rsp+0x368]
   1400035b3:	movsxd rax,DWORD PTR [rbx+0xc]
   1400035b7:	lea    rdi,[rbx+rax*8+0x10]
   1400035bc:	movsxd rax,DWORD PTR [rbx+0x8]
   1400035c0:	lea    r12,[rbx+rax*8+0x10]
   1400035c5:	cmp    r12,rdi
   1400035c8:	je     0x1400035f4
   1400035ca:	nop    WORD PTR [rax+rax*1+0x0]
   1400035d0:	mov    rsi,QWORD PTR [rdi-0x8]
   1400035d4:	sub    rdi,0x8
   1400035d8:	test   rsi,rsi
   1400035db:	je     0x1400035ef
   1400035dd:	lea    rcx,[rsi+0x18]
   1400035e1:	call   QWORD PTR [rip+0x1d199]        # 0x140020780
   1400035e7:	mov    rcx,rsi
   1400035ea:	call   0x14001ee46
   1400035ef:	cmp    rdi,r12
   1400035f2:	jne    0x1400035d0
   1400035f4:	mov    rcx,rbx
   1400035f7:	call   QWORD PTR [rip+0x1d0d3]        # 0x1400206d0
   1400035fd:	nop    DWORD PTR [rax]
   140003600:	mov    eax,DWORD PTR [rsp+0x28]
   140003604:	inc    DWORD PTR [rsp+0x28]
   140003608:	test   eax,eax
   14000360a:	jne    0x14000361d
   14000360c:	mov    rax,QWORD PTR [rsp+0x38]
   140003611:	cmp    QWORD PTR [rsp+0x30],rax
   140003616:	je     0x14000361d
   140003618:	mov    r14b,0x1
   14000361b:	jmp    0x140003620
   14000361d:	xor    r14b,r14b
   140003620:	test   bpl,0x2
   140003624:	je     0x14000368d
   140003626:	mov    rsi,QWORD PTR [rsp+0x78]
   14000362b:	and    ebp,0xfffffffd
   14000362e:	mov    eax,DWORD PTR [rsi]
   140003630:	test   eax,eax
   140003632:	je     0x140003649
   140003634:	cmp    eax,0xffffffff
   140003637:	je     0x14000368d
   140003639:	lock add DWORD PTR [rsi],0xffffffff
   14000363d:	setne  al
   140003640:	test   al,al
   140003642:	jne    0x14000368d
   140003644:	mov    rsi,QWORD PTR [rsp+0x78]
   140003649:	movsxd rax,DWORD PTR [rsi+0xc]
   14000364d:	lea    rbx,[rsi+rax*8+0x10]
   140003652:	movsxd rax,DWORD PTR [rsi+0x8]
   140003656:	lea    r12,[rsi+rax*8+0x10]
   14000365b:	cmp    r12,rbx
   14000365e:	je     0x140003684
   140003660:	mov    rdi,QWORD PTR [rbx-0x8]
   140003664:	sub    rbx,0x8
   140003668:	test   rdi,rdi
   14000366b:	je     0x14000367f
   14000366d:	lea    rcx,[rdi+0x18]
   140003671:	call   QWORD PTR [rip+0x1d109]        # 0x140020780
   140003677:	mov    rcx,rdi
   14000367a:	call   0x14001ee46
   14000367f:	cmp    rbx,r12
   140003682:	jne    0x140003660
   140003684:	mov    rcx,rsi
   140003687:	call   QWORD PTR [rip+0x1d043]        # 0x1400206d0
   14000368d:	test   r14b,r14b
   140003690:	je     0x140003a13
   140003696:	mov    rax,QWORD PTR [rsp+0x30]
   14000369b:	mov    r15,QWORD PTR [rax]
   14000369e:	test   bpl,0x4
   1400036a2:	je     0x140003720
   1400036a4:	mov    rsi,QWORD PTR [rsp+0x90]
   1400036ac:	and    ebp,0xfffffffb
   1400036af:	mov    eax,DWORD PTR [rsi]
   1400036b1:	test   eax,eax
   1400036b3:	je     0x1400036cd
   1400036b5:	cmp    eax,0xffffffff
   1400036b8:	je     0x140003720
   1400036ba:	lock add DWORD PTR [rsi],0xffffffff
   1400036be:	setne  al
   1400036c1:	test   al,al
   1400036c3:	jne    0x140003720
   1400036c5:	mov    rsi,QWORD PTR [rsp+0x90]
   1400036cd:	movsxd rax,DWORD PTR [rsi+0xc]
   1400036d1:	lea    rbx,[rsi+rax*8+0x10]
   1400036d6:	movsxd rax,DWORD PTR [rsi+0x8]
   1400036da:	lea    r12,[rsi+rax*8+0x10]
   1400036df:	cmp    r12,rbx
   1400036e2:	je     0x140003714
   1400036e4:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400036f0:	mov    rdi,QWORD PTR [rbx-0x8]
   1400036f4:	sub    rbx,0x8
   1400036f8:	test   rdi,rdi
   1400036fb:	je     0x14000370f
   1400036fd:	lea    rcx,[rdi+0x18]
   140003701:	call   QWORD PTR [rip+0x1d079]        # 0x140020780
   140003707:	mov    rcx,rdi
   14000370a:	call   0x14001ee46
   14000370f:	cmp    rbx,r12
   140003712:	jne    0x1400036f0
   140003714:	mov    rcx,rsi
   140003717:	call   QWORD PTR [rip+0x1cfb3]        # 0x1400206d0
   14000371d:	nop    DWORD PTR [rax]
   140003720:	mov    r14d,DWORD PTR [rsp+0x28]
   140003725:	test   bpl,0x10
   140003729:	je     0x14000379d
   14000372b:	mov    rsi,QWORD PTR [rsp+0x88]
   140003733:	and    ebp,0xffffffef
   140003736:	mov    eax,DWORD PTR [rsi]
   140003738:	test   eax,eax
   14000373a:	je     0x14000374c
   14000373c:	cmp    eax,0xffffffff
   14000373f:	je     0x14000379d
   140003741:	lock add DWORD PTR [rsi],0xffffffff
   140003745:	setne  al
   140003748:	test   al,al
   14000374a:	jne    0x14000379d
   14000374c:	mov    rsi,QWORD PTR [rsp+0x88]
   140003754:	movsxd rax,DWORD PTR [rsi+0xc]
   140003758:	lea    rbx,[rsi+rax*8+0x10]
   14000375d:	movsxd rax,DWORD PTR [rsi+0x8]
   140003761:	lea    r12,[rsi+rax*8+0x10]
   140003766:	cmp    r12,rbx
   140003769:	je     0x140003794
   14000376b:	nop    DWORD PTR [rax+rax*1+0x0]
   140003770:	mov    rdi,QWORD PTR [rbx-0x8]
   140003774:	sub    rbx,0x8
   140003778:	test   rdi,rdi
   14000377b:	je     0x14000378f
   14000377d:	lea    rcx,[rdi+0x18]
   140003781:	call   QWORD PTR [rip+0x1cff9]        # 0x140020780
   140003787:	mov    rcx,rdi
   14000378a:	call   0x14001ee46
   14000378f:	cmp    rbx,r12
   140003792:	jne    0x140003770
   140003794:	mov    rcx,rsi
   140003797:	call   QWORD PTR [rip+0x1cf33]        # 0x1400206d0
   14000379d:	test   r14d,r14d
   1400037a0:	je     0x140003832
   1400037a6:	cmp    DWORD PTR [r15],0x1
   1400037aa:	je     0x1400038c2
   1400037b0:	dec    DWORD PTR [rsp+0x28]
   1400037b4:	test   bpl,0x8
   1400037b8:	je     0x140003720
   1400037be:	mov    rsi,QWORD PTR [rsp+0x68]
   1400037c3:	and    ebp,0xfffffff7
   1400037c6:	mov    eax,DWORD PTR [rsi]
   1400037c8:	test   eax,eax
   1400037ca:	je     0x1400037e4
   1400037cc:	cmp    eax,0xffffffff
   1400037cf:	je     0x140003720
   1400037d5:	lock add DWORD PTR [rsi],0xffffffff
   1400037d9:	setne  al
   1400037dc:	test   al,al
   1400037de:	jne    0x140003720
   1400037e4:	mov    rsi,QWORD PTR [rsp+0x68]
   1400037e9:	movsxd rax,DWORD PTR [rsi+0xc]
   1400037ed:	lea    rbx,[rsi+rax*8+0x10]
   1400037f2:	movsxd rax,DWORD PTR [rsi+0x8]
   1400037f6:	lea    r12,[rsi+rax*8+0x10]
   1400037fb:	cmp    r12,rbx
   1400037fe:	je     0x140003824
   140003800:	mov    rdi,QWORD PTR [rbx-0x8]
   140003804:	sub    rbx,0x8
   140003808:	test   rdi,rdi
   14000380b:	je     0x14000381f
   14000380d:	lea    rcx,[rdi+0x18]
   140003811:	call   QWORD PTR [rip+0x1cf69]        # 0x140020780
   140003817:	mov    rcx,rdi
   14000381a:	call   0x14001ee46
   14000381f:	cmp    rbx,r12
   140003822:	jne    0x140003800
   140003824:	mov    rcx,rsi
   140003827:	call   QWORD PTR [rip+0x1cea3]        # 0x1400206d0
   14000382d:	jmp    0x140003720
   140003832:	add    QWORD PTR [rsp+0x30],0x8
   140003838:	test   bpl,0x1
   14000383c:	je     0x140003600
   140003842:	mov    rsi,QWORD PTR [rsp+0xa8]
   14000384a:	and    ebp,0xfffffffe
   14000384d:	mov    eax,DWORD PTR [rsi]
   14000384f:	test   eax,eax
   140003851:	je     0x140003873
   140003853:	cmp    eax,0xffffffff
   140003856:	je     0x140003600
   14000385c:	lock add DWORD PTR [rsi],0xffffffff
   140003860:	setne  al
   140003863:	test   al,al
   140003865:	jne    0x140003600
   14000386b:	mov    rsi,QWORD PTR [rsp+0xa8]
   140003873:	movsxd rax,DWORD PTR [rsi+0xc]
   140003877:	lea    rbx,[rsi+rax*8+0x10]
   14000387c:	movsxd rax,DWORD PTR [rsi+0x8]
   140003880:	lea    r12,[rsi+rax*8+0x10]
   140003885:	cmp    r12,rbx
   140003888:	je     0x1400038b4
   14000388a:	nop    WORD PTR [rax+rax*1+0x0]
   140003890:	mov    rdi,QWORD PTR [rbx-0x8]
   140003894:	sub    rbx,0x8
   140003898:	test   rdi,rdi
   14000389b:	je     0x1400038af
   14000389d:	lea    rcx,[rdi+0x18]
   1400038a1:	call   QWORD PTR [rip+0x1ced9]        # 0x140020780
   1400038a7:	mov    rcx,rdi
   1400038aa:	call   0x14001ee46
   1400038af:	cmp    rbx,r12
   1400038b2:	jne    0x140003890
   1400038b4:	mov    rcx,rsi
   1400038b7:	call   QWORD PTR [rip+0x1ce13]        # 0x1400206d0
   1400038bd:	jmp    0x140003600
   1400038c2:	mov    rax,QWORD PTR [rip+0x1ce97]        # 0x140020760
   1400038c9:	mov    r12,QWORD PTR [rsp+0x350]
   1400038d1:	mov    rsi,QWORD PTR [rsp+0x20]
   1400038d6:	mov    QWORD PTR [r12],rax
   1400038da:	mov    eax,DWORD PTR [rsi]
   1400038dc:	test   eax,eax
   1400038de:	je     0x1400038f5
   1400038e0:	cmp    eax,0xffffffff
   1400038e3:	je     0x14000393d
   1400038e5:	lock add DWORD PTR [rsi],0xffffffff
   1400038e9:	setne  al
   1400038ec:	test   al,al
   1400038ee:	jne    0x14000393d
   1400038f0:	mov    rsi,QWORD PTR [rsp+0x20]
   1400038f5:	movsxd rax,DWORD PTR [rsi+0xc]
   1400038f9:	lea    rbx,[rsi+rax*8+0x10]
   1400038fe:	movsxd rax,DWORD PTR [rsi+0x8]
   140003902:	lea    rbp,[rsi+rax*8+0x10]
   140003907:	cmp    rbp,rbx
   14000390a:	je     0x140003934
   14000390c:	nop    DWORD PTR [rax+0x0]
   140003910:	mov    rdi,QWORD PTR [rbx-0x8]
   140003914:	sub    rbx,0x8
   140003918:	test   rdi,rdi
   14000391b:	je     0x14000392f
   14000391d:	lea    rcx,[rdi+0x18]
   140003921:	call   QWORD PTR [rip+0x1ce59]        # 0x140020780
   140003927:	mov    rcx,rdi
   14000392a:	call   0x14001ee46
   14000392f:	cmp    rbx,rbp
   140003932:	jne    0x140003910
   140003934:	mov    rcx,rsi
   140003937:	call   QWORD PTR [rip+0x1cd93]        # 0x1400206d0
   14000393d:	lea    rcx,[rsp+0x1f0]
   140003945:	call   0x14000f270
   14000394a:	lea    rcx,[rsp+0x118]
   140003952:	call   QWORD PTR [rip+0x1ce28]        # 0x140020780
   140003958:	lea    rcx,[rsp+0x110]
   140003960:	call   QWORD PTR [rip+0x1ce1a]        # 0x140020780
   140003966:	lea    rcx,[rsp+0x108]
   14000396e:	call   QWORD PTR [rip+0x1ce0c]        # 0x140020780
   140003974:	mov    rsi,QWORD PTR [rsp+0x48]
   140003979:	mov    eax,DWORD PTR [rsi]
   14000397b:	test   eax,eax
   14000397d:	je     0x140003994
   14000397f:	cmp    eax,0xffffffff
   140003982:	je     0x1400039dc
   140003984:	lock add DWORD PTR [rsi],0xffffffff
   140003988:	setne  al
   14000398b:	test   al,al
   14000398d:	jne    0x1400039dc
   14000398f:	mov    rsi,QWORD PTR [rsp+0x48]
   140003994:	movsxd rax,DWORD PTR [rsi+0xc]
   140003998:	lea    rbx,[rsi+rax*8+0x10]
   14000399d:	movsxd rax,DWORD PTR [rsi+0x8]
   1400039a1:	lea    rbp,[rsi+rax*8+0x10]
   1400039a6:	cmp    rbp,rbx
   1400039a9:	je     0x1400039d3
   1400039ab:	nop    DWORD PTR [rax+rax*1+0x0]
   1400039b0:	mov    rdi,QWORD PTR [rbx-0x8]
   1400039b4:	sub    rbx,0x8
   1400039b8:	test   rdi,rdi
   1400039bb:	je     0x1400039ce
   1400039bd:	mov    rcx,rdi
   1400039c0:	call   QWORD PTR [rip+0x1cd82]        # 0x140020748
   1400039c6:	mov    rcx,rdi
   1400039c9:	call   0x14001ee46
   1400039ce:	cmp    rbx,rbp
   1400039d1:	jne    0x1400039b0
   1400039d3:	mov    rcx,rsi
   1400039d6:	call   QWORD PTR [rip+0x1ccf4]        # 0x1400206d0
   1400039dc:	lea    rax,[rip+0x1ce35]        # 0x140020818
   1400039e3:	lea    rcx,[rsp+0xb0]
   1400039eb:	mov    QWORD PTR [rsp+0x40],rax
   1400039f0:	call   0x140016e10
   1400039f5:	lea    rcx,[rsp+0x60]
   1400039fa:	call   QWORD PTR [rip+0x1cd80]        # 0x140020780
   140003a00:	lea    rcx,[rsp+0x50]
   140003a05:	call   QWORD PTR [rip+0x1cbfd]        # 0x140020608
   140003a0b:	mov    rax,r12
   140003a0e:	jmp    0x140003bce
   140003a13:	mov    rsi,QWORD PTR [rsp+0x20]
   140003a18:	mov    eax,DWORD PTR [rsi]
   140003a1a:	test   eax,eax
   140003a1c:	je     0x140003a33
   140003a1e:	cmp    eax,0xffffffff
   140003a21:	je     0x140003a7d
   140003a23:	lock add DWORD PTR [rsi],0xffffffff
   140003a27:	setne  al
   140003a2a:	test   al,al
   140003a2c:	jne    0x140003a7d
   140003a2e:	mov    rsi,QWORD PTR [rsp+0x20]
   140003a33:	movsxd rax,DWORD PTR [rsi+0xc]
   140003a37:	lea    rbx,[rsi+rax*8+0x10]
   140003a3c:	movsxd rax,DWORD PTR [rsi+0x8]
   140003a40:	lea    rbp,[rsi+rax*8+0x10]
   140003a45:	cmp    rbp,rbx
   140003a48:	je     0x140003a74
   140003a4a:	nop    WORD PTR [rax+rax*1+0x0]
   140003a50:	mov    rdi,QWORD PTR [rbx-0x8]
   140003a54:	sub    rbx,0x8
   140003a58:	test   rdi,rdi
   140003a5b:	je     0x140003a6f
   140003a5d:	lea    rcx,[rdi+0x18]
   140003a61:	call   QWORD PTR [rip+0x1cd19]        # 0x140020780
   140003a67:	mov    rcx,rdi
   140003a6a:	call   0x14001ee46
   140003a6f:	cmp    rbx,rbp
   140003a72:	jne    0x140003a50
   140003a74:	mov    rcx,rsi
   140003a77:	call   QWORD PTR [rip+0x1cc53]        # 0x1400206d0
   140003a7d:	mov    rax,QWORD PTR [rsp+0x48]
   140003a82:	mov    r15,QWORD PTR [rsp+0x350]
   140003a8a:	mov    QWORD PTR [r15],rax
   140003a8d:	mov    ecx,DWORD PTR [rax]
   140003a8f:	test   ecx,ecx
   140003a91:	je     0x140003a9e
   140003a93:	cmp    ecx,0xffffffff
   140003a96:	je     0x140003b01
   140003a98:	lock add DWORD PTR [rax],0x1
   140003a9c:	jmp    0x140003b01
   140003a9e:	mov    edx,DWORD PTR [rax+0x4]
   140003aa1:	mov    rcx,r15
   140003aa4:	call   QWORD PTR [rip+0x1cbce]        # 0x140020678
   140003aaa:	mov    r11,QWORD PTR [r15]
   140003aad:	mov    rcx,QWORD PTR [rsp+0x48]
   140003ab2:	movsxd rax,DWORD PTR [r11+0xc]
   140003ab6:	lea    rsi,[r11+rax*8+0x10]
   140003abb:	movsxd rax,DWORD PTR [rcx+0x8]
   140003abf:	lea    rdi,[rcx+rax*8+0x10]
   140003ac4:	movsxd rax,DWORD PTR [r11+0x8]
   140003ac8:	lea    rbx,[r11+rax*8+0x10]
   140003acd:	cmp    rbx,rsi
   140003ad0:	je     0x140003b01
   140003ad2:	mov    ecx,0x10
   140003ad7:	call   0x14001ee64
   140003adc:	test   rax,rax
   140003adf:	je     0x140003aef
   140003ae1:	mov    rdx,QWORD PTR [rdi]
   140003ae4:	mov    rcx,rax
   140003ae7:	call   QWORD PTR [rip+0x1cc4b]        # 0x140020738
   140003aed:	jmp    0x140003af1
   140003aef:	xor    eax,eax
   140003af1:	mov    QWORD PTR [rbx],rax
   140003af4:	add    rbx,0x8
   140003af8:	add    rdi,0x8
   140003afc:	cmp    rbx,rsi
   140003aff:	jne    0x140003ad2
   140003b01:	lea    rcx,[rsp+0x1f0]
   140003b09:	call   0x14000f270
   140003b0e:	lea    rcx,[rsp+0x118]
   140003b16:	call   QWORD PTR [rip+0x1cc64]        # 0x140020780
   140003b1c:	lea    rcx,[rsp+0x110]
   140003b24:	call   QWORD PTR [rip+0x1cc56]        # 0x140020780
   140003b2a:	lea    rcx,[rsp+0x108]
   140003b32:	call   QWORD PTR [rip+0x1cc48]        # 0x140020780
   140003b38:	mov    rsi,QWORD PTR [rsp+0x48]
   140003b3d:	mov    eax,DWORD PTR [rsi]
   140003b3f:	test   eax,eax
   140003b41:	je     0x140003b58
   140003b43:	cmp    eax,0xffffffff
   140003b46:	je     0x140003b9c
   140003b48:	lock add DWORD PTR [rsi],0xffffffff
   140003b4c:	setne  al
   140003b4f:	test   al,al
   140003b51:	jne    0x140003b9c
   140003b53:	mov    rsi,QWORD PTR [rsp+0x48]
   140003b58:	movsxd rax,DWORD PTR [rsi+0xc]
   140003b5c:	lea    rbx,[rsi+rax*8+0x10]
   140003b61:	movsxd rax,DWORD PTR [rsi+0x8]
   140003b65:	lea    rbp,[rsi+rax*8+0x10]
   140003b6a:	cmp    rbp,rbx
   140003b6d:	je     0x140003b93
   140003b6f:	nop
   140003b70:	mov    rdi,QWORD PTR [rbx-0x8]
   140003b74:	sub    rbx,0x8
   140003b78:	test   rdi,rdi
   140003b7b:	je     0x140003b8e
   140003b7d:	mov    rcx,rdi
   140003b80:	call   QWORD PTR [rip+0x1cbc2]        # 0x140020748
   140003b86:	mov    rcx,rdi
   140003b89:	call   0x14001ee46
   140003b8e:	cmp    rbx,rbp
   140003b91:	jne    0x140003b70
   140003b93:	mov    rcx,rsi
   140003b96:	call   QWORD PTR [rip+0x1cb34]        # 0x1400206d0
   140003b9c:	lea    rax,[rip+0x1cc75]        # 0x140020818
   140003ba3:	lea    rcx,[rsp+0xb0]
   140003bab:	mov    QWORD PTR [rsp+0x40],rax
   140003bb0:	call   0x140016e10
   140003bb5:	lea    rcx,[rsp+0x60]
   140003bba:	call   QWORD PTR [rip+0x1cbc0]        # 0x140020780
   140003bc0:	lea    rcx,[rsp+0x50]
   140003bc5:	call   QWORD PTR [rip+0x1ca3d]        # 0x140020608
   140003bcb:	mov    rax,r15
   140003bce:	mov    r13,QWORD PTR [rsp+0x318]
   140003bd6:	mov    r12,QWORD PTR [rsp+0x320]
   140003bde:	mov    rsi,QWORD PTR [rsp+0x358]
   140003be6:	mov    r14,QWORD PTR [rsp+0x310]
   140003bee:	add    rsp,0x328
   140003bf5:	pop    r15
   140003bf7:	pop    rdi
   140003bf8:	pop    rbp
   140003bf9:	pop    rbx
   140003bfa:	ret    
   140003bfb:	int3   
   140003bfc:	int3   
   140003bfd:	int3   
   140003bfe:	int3   
   140003bff:	int3   
   140003c00:	mov    QWORD PTR [rsp+0x10],rbx
   140003c05:	mov    QWORD PTR [rsp+0x18],rsi
   140003c0a:	mov    QWORD PTR [rsp+0x20],rdi
   140003c0f:	push   r12
   140003c11:	sub    rsp,0x40
   140003c15:	mov    rbx,r8
   140003c18:	mov    r12,rcx
   140003c1b:	call   0x1400023e0
   140003c20:	mov    r11,QWORD PTR [rbx]
   140003c23:	mov    QWORD PTR [rsp+0x20],r11
   140003c28:	mov    eax,DWORD PTR [r11]
   140003c2b:	test   eax,eax
   140003c2d:	je     0x140003c44
   140003c2f:	cmp    eax,0xffffffff
   140003c32:	je     0x140003cb4
   140003c38:	lock add DWORD PTR [r11],0x1
   140003c3d:	mov    r11,QWORD PTR [rsp+0x20]
   140003c42:	jmp    0x140003cb4
   140003c44:	mov    edx,DWORD PTR [r11+0x4]
   140003c48:	lea    rcx,[rsp+0x20]
   140003c4d:	call   QWORD PTR [rip+0x1ca25]        # 0x140020678
   140003c53:	mov    r11,QWORD PTR [rbx]
   140003c56:	movsxd rax,DWORD PTR [r11+0x8]
   140003c5a:	lea    rdi,[r11+rax*8+0x10]
   140003c5f:	mov    r11,QWORD PTR [rsp+0x20]
   140003c64:	movsxd rax,DWORD PTR [r11+0xc]
   140003c68:	lea    rsi,[r11+rax*8+0x10]
   140003c6d:	movsxd rax,DWORD PTR [r11+0x8]
   140003c71:	lea    rbx,[r11+rax*8+0x10]
   140003c76:	cmp    rbx,rsi
   140003c79:	je     0x140003cb4
   140003c7b:	nop    DWORD PTR [rax+rax*1+0x0]
   140003c80:	mov    ecx,0x10
   140003c85:	call   0x14001ee64
   140003c8a:	test   rax,rax
   140003c8d:	je     0x140003c9d
   140003c8f:	mov    rdx,QWORD PTR [rdi]
   140003c92:	mov    rcx,rax
   140003c95:	call   QWORD PTR [rip+0x1ca9d]        # 0x140020738
   140003c9b:	jmp    0x140003c9f
   140003c9d:	xor    eax,eax
   140003c9f:	mov    QWORD PTR [rbx],rax
   140003ca2:	add    rbx,0x8
   140003ca6:	add    rdi,0x8
   140003caa:	cmp    rbx,rsi
   140003cad:	jne    0x140003c80
   140003caf:	mov    r11,QWORD PTR [rsp+0x20]
   140003cb4:	mov    DWORD PTR [rsp+0x28],0x0
   140003cbc:	movsxd rax,DWORD PTR [r11+0x8]
   140003cc0:	lea    rcx,[r11+rax*8+0x10]
   140003cc5:	mov    QWORD PTR [rsp+0x30],rcx
   140003cca:	movsxd rax,DWORD PTR [r11+0xc]
   140003cce:	lea    rdx,[r11+rax*8+0x10]
   140003cd3:	mov    QWORD PTR [rsp+0x38],rdx
   140003cd8:	nop    DWORD PTR [rax+rax*1+0x0]
   140003ce0:	mov    eax,0x1
   140003ce5:	mov    DWORD PTR [rsp+0x28],eax
   140003ce9:	cmp    rcx,rdx
   140003cec:	je     0x140003e08
   140003cf2:	mov    rsi,QWORD PTR [rcx]
   140003cf5:	test   eax,eax
   140003cf7:	je     0x140003df0
   140003cfd:	mov    rcx,QWORD PTR [r12]
   140003d01:	movsxd rax,DWORD PTR [rcx+0xc]
   140003d05:	lea    rdi,[rcx+rax*8+0x10]
   140003d0a:	movsxd rax,DWORD PTR [rcx+0x8]
   140003d0e:	lea    rbx,[rcx+rax*8+0x10]
   140003d13:	cmp    rbx,rdi
   140003d16:	je     0x140003d3d
   140003d18:	nop    DWORD PTR [rax+rax*1+0x0]
   140003d20:	mov    rcx,QWORD PTR [rbx]
   140003d23:	mov    rdx,rsi
   140003d26:	call   QWORD PTR [rip+0x1c9ec]        # 0x140020718
   140003d2c:	test   al,al
   140003d2e:	jne    0x140003de1
   140003d34:	add    rbx,0x8
   140003d38:	cmp    rbx,rdi
   140003d3b:	jne    0x140003d20
   140003d3d:	mov    rax,QWORD PTR [r12]
   140003d41:	mov    ecx,DWORD PTR [rax]
   140003d43:	cmp    ecx,0x1
   140003d46:	je     0x140003da3
   140003d48:	test   ecx,ecx
   140003d4a:	je     0x140003da3
   140003d4c:	mov    edx,0x7fffffff
   140003d51:	mov    r8d,0x1
   140003d57:	mov    rcx,r12
   140003d5a:	call   0x1400029a0
   140003d5f:	mov    ecx,0x10
   140003d64:	mov    rbx,rax
   140003d67:	call   0x14001ee64
   140003d6c:	test   rax,rax
   140003d6f:	je     0x140003d8f
   140003d71:	mov    rdx,rsi
   140003d74:	mov    rcx,rax
   140003d77:	call   QWORD PTR [rip+0x1c9bb]        # 0x140020738
   140003d7d:	mov    QWORD PTR [rbx],rax
   140003d80:	mov    eax,DWORD PTR [rsp+0x28]
   140003d84:	dec    eax
   140003d86:	mov    DWORD PTR [rsp+0x28],eax
   140003d8a:	jmp    0x140003cf5
   140003d8f:	xor    eax,eax
   140003d91:	mov    QWORD PTR [rbx],rax
   140003d94:	mov    eax,DWORD PTR [rsp+0x28]
   140003d98:	dec    eax
   140003d9a:	mov    DWORD PTR [rsp+0x28],eax
   140003d9e:	jmp    0x140003cf5
   140003da3:	mov    rcx,r12
   140003da6:	call   QWORD PTR [rip+0x1c88c]        # 0x140020638
   140003dac:	mov    ecx,0x10
   140003db1:	mov    rbx,rax
   140003db4:	call   0x14001ee64
   140003db9:	test   rax,rax
   140003dbc:	je     0x140003ddc
   140003dbe:	mov    rdx,rsi
   140003dc1:	mov    rcx,rax
   140003dc4:	call   QWORD PTR [rip+0x1c96e]        # 0x140020738
   140003dca:	mov    QWORD PTR [rbx],rax
   140003dcd:	mov    eax,DWORD PTR [rsp+0x28]
   140003dd1:	dec    eax
   140003dd3:	mov    DWORD PTR [rsp+0x28],eax
   140003dd7:	jmp    0x140003cf5
   140003ddc:	xor    eax,eax
   140003dde:	mov    QWORD PTR [rbx],rax
   140003de1:	mov    eax,DWORD PTR [rsp+0x28]
   140003de5:	dec    eax
   140003de7:	mov    DWORD PTR [rsp+0x28],eax
   140003deb:	jmp    0x140003cf5
   140003df0:	mov    rcx,QWORD PTR [rsp+0x30]
   140003df5:	mov    rdx,QWORD PTR [rsp+0x38]
   140003dfa:	add    rcx,0x8
   140003dfe:	mov    QWORD PTR [rsp+0x30],rcx
   140003e03:	jmp    0x140003ce0
   140003e08:	mov    rsi,QWORD PTR [rsp+0x20]
   140003e0d:	mov    eax,DWORD PTR [rsi]
   140003e0f:	test   eax,eax
   140003e11:	je     0x140003e28
   140003e13:	cmp    eax,0xffffffff
   140003e16:	je     0x140003e81
   140003e18:	lock add DWORD PTR [rsi],0xffffffff
   140003e1c:	setne  al
   140003e1f:	test   al,al
   140003e21:	jne    0x140003e81
   140003e23:	mov    rsi,QWORD PTR [rsp+0x20]
   140003e28:	movsxd rax,DWORD PTR [rsi+0xc]
   140003e2c:	mov    QWORD PTR [rsp+0x50],rbp
   140003e31:	lea    rbx,[rsi+rax*8+0x10]
   140003e36:	movsxd rax,DWORD PTR [rsi+0x8]
   140003e3a:	lea    rbp,[rsi+rax*8+0x10]
   140003e3f:	cmp    rbp,rbx
   140003e42:	je     0x140003e73
   140003e44:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140003e50:	mov    rdi,QWORD PTR [rbx-0x8]
   140003e54:	sub    rbx,0x8
   140003e58:	test   rdi,rdi
   140003e5b:	je     0x140003e6e
   140003e5d:	mov    rcx,rdi
   140003e60:	call   QWORD PTR [rip+0x1c8e2]        # 0x140020748
   140003e66:	mov    rcx,rdi
   140003e69:	call   0x14001ee46
   140003e6e:	cmp    rbx,rbp
   140003e71:	jne    0x140003e50
   140003e73:	mov    rcx,rsi
   140003e76:	call   QWORD PTR [rip+0x1c854]        # 0x1400206d0
   140003e7c:	mov    rbp,QWORD PTR [rsp+0x50]
   140003e81:	mov    rbx,QWORD PTR [rsp+0x58]
   140003e86:	mov    rsi,QWORD PTR [rsp+0x60]
   140003e8b:	mov    rdi,QWORD PTR [rsp+0x68]
   140003e90:	mov    rax,r12
   140003e93:	add    rsp,0x40
   140003e97:	pop    r12
   140003e99:	ret    
   140003e9a:	int3   
   140003e9b:	int3   
   140003e9c:	int3   
   140003e9d:	int3   
   140003e9e:	int3   
   140003e9f:	int3   
   140003ea0:	mov    QWORD PTR [rsp+0x20],rbp
   140003ea5:	mov    QWORD PTR [rsp+0x18],r8
   140003eaa:	push   rsi
   140003eab:	sub    rsp,0x20
   140003eaf:	mov    rsi,rcx
   140003eb2:	mov    rcx,QWORD PTR [rcx]
   140003eb5:	mov    rbp,rdx
   140003eb8:	cmp    r8,rcx
   140003ebb:	jne    0x140003ece
   140003ebd:	mov    QWORD PTR [rdx],r8
   140003ec0:	mov    rax,rdx
   140003ec3:	mov    rbp,QWORD PTR [rsp+0x48]
   140003ec8:	add    rsp,0x20
   140003ecc:	pop    rsi
   140003ecd:	ret    
   140003ece:	mov    eax,DWORD PTR [rcx+0x10]
   140003ed1:	mov    QWORD PTR [rsp+0x30],rbx
   140003ed6:	mov    QWORD PTR [rsp+0x38],rdi
   140003edb:	cmp    eax,0x1
   140003ede:	je     0x140003f57
   140003ee0:	test   eax,eax
   140003ee2:	je     0x140003f57
   140003ee4:	mov    eax,DWORD PTR [r8+0x8]
   140003ee8:	xor    edx,edx
   140003eea:	xor    ebx,ebx
   140003eec:	div    DWORD PTR [rcx+0x20]
   140003eef:	mov    rax,QWORD PTR [rcx+0x8]
   140003ef3:	movsxd rdi,edx
   140003ef6:	mov    rax,QWORD PTR [rax+rdi*8]
   140003efa:	cmp    rax,r8
   140003efd:	je     0x140003f12
   140003eff:	nop
   140003f00:	mov    rcx,rax
   140003f03:	inc    ebx
   140003f05:	call   QWORD PTR [rip+0x1c835]        # 0x140020740
   140003f0b:	cmp    rax,QWORD PTR [rsp+0x40]
   140003f10:	jne    0x140003f00
   140003f12:	mov    rax,QWORD PTR [rsi]
   140003f15:	mov    ecx,DWORD PTR [rax+0x10]
   140003f18:	cmp    ecx,0x1
   140003f1b:	je     0x140003f29
   140003f1d:	test   ecx,ecx
   140003f1f:	je     0x140003f29
   140003f21:	mov    rcx,rsi
   140003f24:	call   0x140002f80
   140003f29:	mov    rax,QWORD PTR [rsi]
   140003f2c:	mov    r8,QWORD PTR [rax+0x8]
   140003f30:	mov    r8,QWORD PTR [r8+rdi*8]
   140003f34:	mov    QWORD PTR [rsp+0x40],r8
   140003f39:	test   ebx,ebx
   140003f3b:	jle    0x140003f57
   140003f3d:	nop    DWORD PTR [rax]
   140003f40:	mov    rcx,r8
   140003f43:	dec    ebx
   140003f45:	call   QWORD PTR [rip+0x1c7f5]        # 0x140020740
   140003f4b:	mov    r8,rax
   140003f4e:	mov    QWORD PTR [rsp+0x40],rax
   140003f53:	test   ebx,ebx
   140003f55:	jg     0x140003f40
   140003f57:	mov    rcx,r8
   140003f5a:	call   QWORD PTR [rip+0x1c7e0]        # 0x140020740
   140003f60:	mov    r8,QWORD PTR [rsi]
   140003f63:	mov    rdi,QWORD PTR [rsp+0x40]
   140003f68:	mov    rbx,rax
   140003f6b:	mov    eax,DWORD PTR [rdi+0x8]
   140003f6e:	xor    edx,edx
   140003f70:	div    DWORD PTR [r8+0x20]
   140003f74:	mov    rax,QWORD PTR [r8+0x8]
   140003f78:	cmp    QWORD PTR [rax+rdx*8],rdi
   140003f7c:	lea    r8,[rax+rdx*8]
   140003f80:	je     0x140003f8a
   140003f82:	mov    r8,QWORD PTR [r8]
   140003f85:	cmp    QWORD PTR [r8],rdi
   140003f88:	jne    0x140003f82
   140003f8a:	mov    rax,QWORD PTR [rdi]
   140003f8d:	lea    rcx,[rdi+0x10]
   140003f91:	mov    QWORD PTR [r8],rax
   140003f94:	call   QWORD PTR [rip+0x1c7e6]        # 0x140020780
   140003f9a:	mov    rcx,QWORD PTR [rsi]
   140003f9d:	mov    rdx,rdi
   140003fa0:	call   QWORD PTR [rip+0x1c6b2]        # 0x140020658
   140003fa6:	mov    r11,QWORD PTR [rsi]
   140003fa9:	mov    rdi,QWORD PTR [rsp+0x38]
   140003fae:	dec    DWORD PTR [r11+0x14]
   140003fb2:	mov    QWORD PTR [rbp+0x0],rbx
   140003fb6:	mov    rbx,QWORD PTR [rsp+0x30]
   140003fbb:	mov    rax,rbp
   140003fbe:	mov    rbp,QWORD PTR [rsp+0x48]
   140003fc3:	add    rsp,0x20
   140003fc7:	pop    rsi
   140003fc8:	ret    
   140003fc9:	int3   
   140003fca:	int3   
   140003fcb:	int3   
   140003fcc:	int3   
   140003fcd:	int3   
   140003fce:	int3   
   140003fcf:	int3   
   140003fd0:	rex push rbx
   140003fd2:	push   rdi
   140003fd3:	sub    rsp,0x28
   140003fd7:	mov    rax,QWORD PTR [rcx]
   140003fda:	mov    rbx,rdx
   140003fdd:	mov    rdi,rcx
   140003fe0:	cmp    DWORD PTR [rax+0x14],0x0
   140003fe4:	jne    0x140003fef
   140003fe6:	xor    eax,eax
   140003fe8:	add    rsp,0x28
   140003fec:	pop    rdi
   140003fed:	pop    rbx
   140003fee:	ret    
   140003fef:	mov    eax,DWORD PTR [rax+0x10]
   140003ff2:	mov    QWORD PTR [rsp+0x50],r12
   140003ff7:	mov    QWORD PTR [rsp+0x20],r13
   140003ffc:	cmp    eax,0x1
   140003fff:	je     0x14000400a
   140004001:	test   eax,eax
   140004003:	je     0x14000400a
   140004005:	call   0x140002f80
   14000400a:	mov    rax,QWORD PTR [rdi]
   14000400d:	xor    r8d,r8d
   140004010:	mov    r13d,DWORD PTR [rax+0x14]
   140004014:	cmp    DWORD PTR [rax+0x20],r8d
   140004018:	je     0x140004029
   14000401a:	mov    edx,DWORD PTR [rax+0x24]
   14000401d:	mov    rcx,rbx
   140004020:	call   QWORD PTR [rip+0x1c66a]        # 0x140020690
   140004026:	mov    r8d,eax
   140004029:	mov    rdx,rbx
   14000402c:	mov    rcx,rdi
   14000402f:	call   0x140001e20
   140004034:	mov    r12,rax
   140004037:	mov    rax,QWORD PTR [rdi]
   14000403a:	cmp    QWORD PTR [r12],rax
   14000403e:	je     0x1400040b2
   140004040:	mov    QWORD PTR [rsp+0x40],rbp
   140004045:	mov    QWORD PTR [rsp+0x48],rsi
   14000404a:	nop    WORD PTR [rax+rax*1+0x0]
   140004050:	mov    rdx,QWORD PTR [r12]
   140004054:	mov    rsi,QWORD PTR [rdx]
   140004057:	cmp    rsi,QWORD PTR [rdi]
   14000405a:	je     0x140004073
   14000405c:	lea    rcx,[rsi+0x10]
   140004060:	add    rdx,0x10
   140004064:	call   QWORD PTR [rip+0x1c686]        # 0x1400206f0
   14000406a:	test   al,al
   14000406c:	je     0x140004073
   14000406e:	mov    bpl,0x1
   140004071:	jmp    0x140004076
   140004073:	xor    bpl,bpl
   140004076:	mov    rbx,QWORD PTR [r12]
   14000407a:	lea    rcx,[rbx+0x10]
   14000407e:	call   QWORD PTR [rip+0x1c6fc]        # 0x140020780
   140004084:	mov    rcx,QWORD PTR [rdi]
   140004087:	mov    rdx,rbx
   14000408a:	call   QWORD PTR [rip+0x1c5c8]        # 0x140020658
   140004090:	mov    QWORD PTR [r12],rsi
   140004094:	mov    rcx,QWORD PTR [rdi]
   140004097:	dec    DWORD PTR [rcx+0x14]
   14000409a:	test   bpl,bpl
   14000409d:	jne    0x140004050
   14000409f:	mov    rcx,QWORD PTR [rdi]
   1400040a2:	call   QWORD PTR [rip+0x1c520]        # 0x1400205c8
   1400040a8:	mov    rsi,QWORD PTR [rsp+0x48]
   1400040ad:	mov    rbp,QWORD PTR [rsp+0x40]
   1400040b2:	mov    rcx,QWORD PTR [rdi]
   1400040b5:	mov    r12,QWORD PTR [rsp+0x50]
   1400040ba:	sub    r13d,DWORD PTR [rcx+0x14]
   1400040be:	mov    eax,r13d
   1400040c1:	mov    r13,QWORD PTR [rsp+0x20]
   1400040c6:	add    rsp,0x28
   1400040ca:	pop    rdi
   1400040cb:	pop    rbx
   1400040cc:	ret    
   1400040cd:	int3   
   1400040ce:	int3   
   1400040cf:	int3   
   1400040d0:	mov    QWORD PTR [rsp+0x10],rbx
   1400040d5:	mov    QWORD PTR [rsp+0x18],rsi
   1400040da:	push   rdi
   1400040db:	sub    rsp,0x90
   1400040e2:	mov    rdi,rdx
   1400040e5:	mov    rbx,rcx
   1400040e8:	call   0x140002d00
   1400040ed:	mov    rcx,rdi
   1400040f0:	mov    esi,eax
   1400040f2:	call   QWORD PTR [rip+0x1c548]        # 0x140020640
   1400040f8:	cmp    esi,eax
   1400040fa:	jne    0x14000411b
   1400040fc:	mov    rcx,rdi
   1400040ff:	call   QWORD PTR [rip+0x1c543]        # 0x140020648
   140004105:	mov    rcx,rbx
   140004108:	mov    r8d,0x70
   14000410e:	mov    rdx,rax
   140004111:	call   0x14001edd4
   140004116:	jmp    0x1400041e1
   14000411b:	mov    QWORD PTR [rsp+0xa0],rbp
   140004123:	xor    ebp,ebp
   140004125:	lea    r8,[rsp+0x20]
   14000412a:	mov    edx,esi
   14000412c:	mov    rcx,rdi
   14000412f:	mov    QWORD PTR [rsp+0x20],rbp
   140004134:	mov    QWORD PTR [rsp+0x28],rbp
   140004139:	mov    DWORD PTR [rsp+0x30],ebp
   14000413d:	mov    DWORD PTR [rsp+0x34],ebp
   140004141:	mov    DWORD PTR [rsp+0x38],ebp
   140004145:	mov    DWORD PTR [rsp+0x3c],ebp
   140004149:	mov    QWORD PTR [rsp+0x40],rbp
   14000414e:	mov    QWORD PTR [rsp+0x48],rbp
   140004153:	mov    QWORD PTR [rsp+0x50],rbp
   140004158:	mov    QWORD PTR [rsp+0x58],rbp
   14000415d:	mov    QWORD PTR [rsp+0x60],rbp
   140004162:	mov    QWORD PTR [rsp+0x68],rbp
   140004167:	mov    QWORD PTR [rsp+0x70],rbp
   14000416c:	mov    QWORD PTR [rsp+0x78],rbp
   140004171:	mov    QWORD PTR [rsp+0x80],rbp
   140004179:	mov    QWORD PTR [rsp+0x88],rbp
   140004181:	call   QWORD PTR [rip+0x1c4c9]        # 0x140020650
   140004187:	test   al,al
   140004189:	je     0x14000419e
   14000418b:	lea    rdx,[rsp+0x20]
   140004190:	lea    r8d,[rbp+0x70]
   140004194:	mov    rcx,rbx
   140004197:	call   0x14001edd4
   14000419c:	jmp    0x1400041d9
   14000419e:	mov    QWORD PTR [rbx],rbp
   1400041a1:	mov    QWORD PTR [rbx+0x8],rbp
   1400041a5:	mov    DWORD PTR [rbx+0x10],ebp
   1400041a8:	mov    DWORD PTR [rbx+0x14],ebp
   1400041ab:	mov    DWORD PTR [rbx+0x18],ebp
   1400041ae:	mov    DWORD PTR [rbx+0x1c],ebp
   1400041b1:	mov    QWORD PTR [rbx+0x20],rbp
   1400041b5:	mov    QWORD PTR [rbx+0x28],rbp
   1400041b9:	mov    QWORD PTR [rbx+0x30],rbp
   1400041bd:	mov    QWORD PTR [rbx+0x38],rbp
   1400041c1:	mov    QWORD PTR [rbx+0x40],rbp
   1400041c5:	mov    QWORD PTR [rbx+0x48],rbp
   1400041c9:	mov    QWORD PTR [rbx+0x50],rbp
   1400041cd:	mov    QWORD PTR [rbx+0x58],rbp
   1400041d1:	mov    QWORD PTR [rbx+0x60],rbp
   1400041d5:	mov    QWORD PTR [rbx+0x68],rbp
   1400041d9:	mov    rbp,QWORD PTR [rsp+0xa0]
   1400041e1:	lea    r11,[rsp+0x90]
   1400041e9:	mov    rax,rbx
   1400041ec:	mov    rbx,QWORD PTR [r11+0x18]
   1400041f0:	mov    rsi,QWORD PTR [r11+0x20]
   1400041f4:	mov    rsp,r11
   1400041f7:	pop    rdi
   1400041f8:	ret    
   1400041f9:	int3   
   1400041fa:	int3   
   1400041fb:	int3   
   1400041fc:	int3   
   1400041fd:	int3   
   1400041fe:	int3   
   1400041ff:	int3   
   140004200:	mov    r11,rsp
   140004203:	push   rbp
   140004204:	push   r12
   140004206:	push   r13
   140004208:	push   r14
   14000420a:	sub    rsp,0x218
   140004211:	mov    rax,QWORD PTR [rip+0x1c548]        # 0x140020760
   140004218:	mov    r14,r9
   14000421b:	mov    r13,r8
   14000421e:	mov    rbp,rdx
   140004221:	mov    r12,rcx
   140004224:	mov    QWORD PTR [rcx],rax
   140004227:	test   rdx,rdx
   14000422a:	je     0x140004db3
   140004230:	mov    QWORD PTR [r11+0x18],rbx
   140004234:	mov    QWORD PTR [r11-0x30],rdi
   140004238:	mov    QWORD PTR [r11-0x38],r15
   14000423c:	lea    r15,[rip+0x1c841]        # 0x140020a84
   140004243:	mov    QWORD PTR [r11-0x28],rsi
   140004247:	nop    WORD PTR [rax+rax*1+0x0]
   140004250:	mov    rbx,QWORD PTR [rbp+0x10]
   140004254:	mov    rcx,QWORD PTR [rip+0x1c4fd]        # 0x140020758
   14000425b:	mov    QWORD PTR [rsp+0x20],rcx
   140004260:	test   rbx,rbx
   140004263:	je     0x140004d66
   140004269:	cmp    DWORD PTR [rbx+0x8],0x50
   14000426d:	jne    0x140004d66
   140004273:	cmp    DWORD PTR [rbx+0x1c],0x0
   140004277:	je     0x14000488c
   14000427d:	lea    rcx,[rbx+0x10]
   140004281:	lea    rdx,[rsp+0x28]
   140004286:	call   QWORD PTR [rip+0x1c2e4]        # 0x140020570
   14000428c:	lea    rdx,[rsp+0x28]
   140004291:	lea    rcx,[rsp+0xb8]
   140004299:	call   QWORD PTR [rip+0x1c2d9]        # 0x140020578
   14000429f:	lea    rdx,[rip+0x1c7d6]        # 0x140020a7c
   1400042a6:	lea    rcx,[rsp+0x68]
   1400042ab:	mov    r8d,0x4
   1400042b1:	call   QWORD PTR [rip+0x1c2c9]        # 0x140020580
   1400042b7:	mov    rcx,QWORD PTR [rsp+0x20]
   1400042bc:	mov    edx,DWORD PTR [rcx]
   1400042be:	mov    rbx,rax
   1400042c1:	cmp    edx,0x1
   1400042c4:	je     0x140004333
   1400042c6:	test   edx,edx
   1400042c8:	je     0x140004333
   1400042ca:	call   QWORD PTR [rip+0x1c460]        # 0x140020730
   1400042d0:	mov    rcx,QWORD PTR [rsp+0x20]
   1400042d5:	mov    r8,QWORD PTR [rcx+0x10]
   1400042d9:	mov    rdi,rax
   1400042dc:	test   r8,r8
   1400042df:	je     0x140004300
   1400042e1:	mov    rdx,rax
   1400042e4:	mov    rcx,r8
   1400042e7:	call   0x140001210
   1400042ec:	lea    rcx,[rdi+0x8]
   1400042f0:	mov    QWORD PTR [rdi+0x10],rax
   1400042f4:	and    QWORD PTR [rax],0x3
   1400042f8:	or     QWORD PTR [rax],rcx
   1400042fb:	mov    rcx,QWORD PTR [rsp+0x20]
   140004300:	mov    eax,DWORD PTR [rcx]
   140004302:	test   eax,eax
   140004304:	je     0x14000431b
   140004306:	cmp    eax,0xffffffff
   140004309:	je     0x140004320
   14000430b:	lock add DWORD PTR [rcx],0xffffffff
   14000430f:	setne  al
   140004312:	test   al,al
   140004314:	jne    0x140004320
   140004316:	mov    rcx,QWORD PTR [rsp+0x20]
   14000431b:	call   0x1400022f0
   140004320:	mov    rcx,rdi
   140004323:	mov    QWORD PTR [rsp+0x20],rdi
   140004328:	call   QWORD PTR [rip+0x1c342]        # 0x140020670
   14000432e:	mov    rcx,QWORD PTR [rsp+0x20]
   140004333:	mov    rdx,rbx
   140004336:	call   0x140001c60
   14000433b:	test   rax,rax
   14000433e:	jne    0x14000437d
   140004340:	lea    rcx,[rsp+0x148]
   140004348:	call   QWORD PTR [rip+0x1c28a]        # 0x1400205d8
   14000434e:	lea    rdx,[rsp+0x1a0]
   140004356:	lea    rcx,[rsp+0x20]
   14000435b:	mov    r9,rax
   14000435e:	mov    r8,rbx
   140004361:	call   0x140003090
   140004366:	lea    rcx,[rsp+0x148]
   14000436e:	mov    rdi,QWORD PTR [rax]
   140004371:	add    rdi,0x20
   140004375:	call   QWORD PTR [rip+0x1c3cd]        # 0x140020748
   14000437b:	jmp    0x140004381
   14000437d:	lea    rdi,[rax+0x20]
   140004381:	lea    rdx,[rsp+0xb8]
   140004389:	mov    rcx,rdi
   14000438c:	call   QWORD PTR [rip+0x1c296]        # 0x140020628
   140004392:	lea    rcx,[rsp+0x68]
   140004397:	call   QWORD PTR [rip+0x1c3e3]        # 0x140020780
   14000439d:	lea    rcx,[rsp+0xb8]
   1400043a5:	call   QWORD PTR [rip+0x1c39d]        # 0x140020748
   1400043ab:	or     rcx,0xffffffffffffffff
   1400043af:	xor    eax,eax
   1400043b1:	mov    rdi,r15
   1400043b4:	mov    QWORD PTR [rsp+0x128],r15
   1400043bc:	lea    rdx,[rsp+0x160]
   1400043c4:	repnz scas al,BYTE PTR es:[rdi]
   1400043c6:	lea    r8d,[rax+0x1]
   1400043ca:	not    rcx
   1400043cd:	dec    rcx
   1400043d0:	mov    DWORD PTR [rsp+0x120],ecx
   1400043d7:	lea    rcx,[rsp+0x28]
   1400043dc:	movaps xmm0,XMMWORD PTR [rsp+0x120]
   1400043e4:	movdqa XMMWORD PTR [rsp+0x160],xmm0
   1400043ed:	call   QWORD PTR [rip+0x1c195]        # 0x140020588
   1400043f3:	test   al,al
   1400043f5:	je     0x140004546
   1400043fb:	lea    rdx,[rip+0x1c66e]        # 0x140020a70
   140004402:	lea    rcx,[rsp+0x60]
   140004407:	mov    r8d,0xa
   14000440d:	call   QWORD PTR [rip+0x1c16d]        # 0x140020580
   140004413:	lea    rcx,[rsp+0xf8]
   14000441b:	mov    rdx,rax
   14000441e:	call   QWORD PTR [rip+0x1c154]        # 0x140020578
   140004424:	lea    rdx,[rip+0x1c639]        # 0x140020a64
   14000442b:	lea    rcx,[rsp+0x90]
   140004433:	mov    r8d,0x4
   140004439:	call   QWORD PTR [rip+0x1c141]        # 0x140020580
   14000443f:	mov    rcx,QWORD PTR [rsp+0x20]
   140004444:	mov    edx,DWORD PTR [rcx]
   140004446:	mov    rbx,rax
   140004449:	cmp    edx,0x1
   14000444c:	je     0x1400044bb
   14000444e:	test   edx,edx
   140004450:	je     0x1400044bb
   140004452:	call   QWORD PTR [rip+0x1c2d8]        # 0x140020730
   140004458:	mov    rcx,QWORD PTR [rsp+0x20]
   14000445d:	mov    r8,QWORD PTR [rcx+0x10]
   140004461:	mov    rdi,rax
   140004464:	test   r8,r8
   140004467:	je     0x140004488
   140004469:	mov    rdx,rax
   14000446c:	mov    rcx,r8
   14000446f:	call   0x140001210
   140004474:	lea    rcx,[rdi+0x8]
   140004478:	mov    QWORD PTR [rdi+0x10],rax
   14000447c:	and    QWORD PTR [rax],0x3
   140004480:	or     QWORD PTR [rax],rcx
   140004483:	mov    rcx,QWORD PTR [rsp+0x20]
   140004488:	mov    eax,DWORD PTR [rcx]
   14000448a:	test   eax,eax
   14000448c:	je     0x1400044a3
   14000448e:	cmp    eax,0xffffffff
   140004491:	je     0x1400044a8
   140004493:	lock add DWORD PTR [rcx],0xffffffff
   140004497:	setne  al
   14000449a:	test   al,al
   14000449c:	jne    0x1400044a8
   14000449e:	mov    rcx,QWORD PTR [rsp+0x20]
   1400044a3:	call   0x1400022f0
   1400044a8:	mov    rcx,rdi
   1400044ab:	mov    QWORD PTR [rsp+0x20],rdi
   1400044b0:	call   QWORD PTR [rip+0x1c1ba]        # 0x140020670
   1400044b6:	mov    rcx,QWORD PTR [rsp+0x20]
   1400044bb:	mov    rdx,rbx
   1400044be:	call   0x140001c60
   1400044c3:	test   rax,rax
   1400044c6:	jne    0x140004505
   1400044c8:	lea    rcx,[rsp+0x178]
   1400044d0:	call   QWORD PTR [rip+0x1c102]        # 0x1400205d8
   1400044d6:	lea    rdx,[rsp+0x188]
   1400044de:	lea    rcx,[rsp+0x20]
   1400044e3:	mov    r9,rax
   1400044e6:	mov    r8,rbx
   1400044e9:	call   0x140003090
   1400044ee:	lea    rcx,[rsp+0x178]
   1400044f6:	mov    rdi,QWORD PTR [rax]
   1400044f9:	add    rdi,0x20
   1400044fd:	call   QWORD PTR [rip+0x1c245]        # 0x140020748
   140004503:	jmp    0x140004509
   140004505:	lea    rdi,[rax+0x20]
   140004509:	lea    rdx,[rsp+0xf8]
   140004511:	mov    rcx,rdi
   140004514:	call   QWORD PTR [rip+0x1c10e]        # 0x140020628
   14000451a:	lea    rcx,[rsp+0x90]
   140004522:	call   QWORD PTR [rip+0x1c258]        # 0x140020780
   140004528:	lea    rcx,[rsp+0xf8]
   140004530:	call   QWORD PTR [rip+0x1c212]        # 0x140020748
   140004536:	lea    rcx,[rsp+0x60]
   14000453b:	call   QWORD PTR [rip+0x1c23f]        # 0x140020780
   140004541:	jmp    0x14000468c
   140004546:	lea    rdx,[rip+0x1c50b]        # 0x140020a58
   14000454d:	lea    rcx,[rsp+0x70]
   140004552:	mov    r8d,0x9
   140004558:	call   QWORD PTR [rip+0x1c022]        # 0x140020580
   14000455e:	lea    rcx,[rsp+0xc8]
   140004566:	mov    rdx,rax
   140004569:	call   QWORD PTR [rip+0x1c009]        # 0x140020578
   14000456f:	lea    rdx,[rip+0x1c4ee]        # 0x140020a64
   140004576:	lea    rcx,[rsp+0xa0]
   14000457e:	mov    r8d,0x4
   140004584:	call   QWORD PTR [rip+0x1bff6]        # 0x140020580
   14000458a:	mov    rcx,QWORD PTR [rsp+0x20]
   14000458f:	mov    edx,DWORD PTR [rcx]
   140004591:	mov    rbx,rax
   140004594:	cmp    edx,0x1
   140004597:	je     0x140004606
   140004599:	test   edx,edx
   14000459b:	je     0x140004606
   14000459d:	call   QWORD PTR [rip+0x1c18d]        # 0x140020730
   1400045a3:	mov    rcx,QWORD PTR [rsp+0x20]
   1400045a8:	mov    r8,QWORD PTR [rcx+0x10]
   1400045ac:	mov    rdi,rax
   1400045af:	test   r8,r8
   1400045b2:	je     0x1400045d3
   1400045b4:	mov    rdx,rax
   1400045b7:	mov    rcx,r8
   1400045ba:	call   0x140001210
   1400045bf:	lea    rcx,[rdi+0x8]
   1400045c3:	mov    QWORD PTR [rdi+0x10],rax
   1400045c7:	and    QWORD PTR [rax],0x3
   1400045cb:	or     QWORD PTR [rax],rcx
   1400045ce:	mov    rcx,QWORD PTR [rsp+0x20]
   1400045d3:	mov    eax,DWORD PTR [rcx]
   1400045d5:	test   eax,eax
   1400045d7:	je     0x1400045ee
   1400045d9:	cmp    eax,0xffffffff
   1400045dc:	je     0x1400045f3
   1400045de:	lock add DWORD PTR [rcx],0xffffffff
   1400045e2:	setne  al
   1400045e5:	test   al,al
   1400045e7:	jne    0x1400045f3
   1400045e9:	mov    rcx,QWORD PTR [rsp+0x20]
   1400045ee:	call   0x1400022f0
   1400045f3:	mov    rcx,rdi
   1400045f6:	mov    QWORD PTR [rsp+0x20],rdi
   1400045fb:	call   QWORD PTR [rip+0x1c06f]        # 0x140020670
   140004601:	mov    rcx,QWORD PTR [rsp+0x20]
   140004606:	mov    rdx,rbx
   140004609:	call   0x140001c60
   14000460e:	test   rax,rax
   140004611:	jne    0x140004650
   140004613:	lea    rcx,[rsp+0x190]
   14000461b:	call   QWORD PTR [rip+0x1bfb7]        # 0x1400205d8
   140004621:	lea    rdx,[rsp+0x1e8]
   140004629:	lea    rcx,[rsp+0x20]
   14000462e:	mov    r9,rax
   140004631:	mov    r8,rbx
   140004634:	call   0x140003090
   140004639:	lea    rcx,[rsp+0x190]
   140004641:	mov    rdi,QWORD PTR [rax]
   140004644:	add    rdi,0x20
   140004648:	call   QWORD PTR [rip+0x1c0fa]        # 0x140020748
   14000464e:	jmp    0x140004654
   140004650:	lea    rdi,[rax+0x20]
   140004654:	lea    rdx,[rsp+0xc8]
   14000465c:	mov    rcx,rdi
   14000465f:	call   QWORD PTR [rip+0x1bfc3]        # 0x140020628
   140004665:	lea    rcx,[rsp+0xa0]
   14000466d:	call   QWORD PTR [rip+0x1c10d]        # 0x140020780
   140004673:	lea    rcx,[rsp+0xc8]
   14000467b:	call   QWORD PTR [rip+0x1c0c7]        # 0x140020748
   140004681:	lea    rcx,[rsp+0x70]
   140004686:	call   QWORD PTR [rip+0x1c0f4]        # 0x140020780
   14000468c:	mov    BYTE PTR [rsp+0x240],0x2f
   140004694:	mov    rax,QWORD PTR [r14]
   140004697:	xor    r8d,r8d
   14000469a:	mov    edx,DWORD PTR [rax+0x4]
   14000469d:	mov    rax,QWORD PTR [rsp+0x28]
   1400046a2:	mov    ecx,DWORD PTR [rax+0x4]
   1400046a5:	lea    edx,[rcx+rdx*1+0x1]
   1400046a9:	lea    rcx,[rsp+0x40]
   1400046ae:	call   QWORD PTR [rip+0x1bfe4]        # 0x140020698
   1400046b4:	lea    rcx,[rsp+0x40]
   1400046b9:	call   QWORD PTR [rip+0x1c0c9]        # 0x140020788
   1400046bf:	mov    rcx,QWORD PTR [r14]
   1400046c2:	movsxd rdi,DWORD PTR [rcx+0x4]
   1400046c6:	mov    rcx,r14
   1400046c9:	mov    rbx,rax
   1400046cc:	add    rdi,rdi
   1400046cf:	call   QWORD PTR [rip+0x1c0b3]        # 0x140020788
   1400046d5:	mov    r8,rdi
   1400046d8:	mov    rdx,rax
   1400046db:	mov    rcx,rbx
   1400046de:	call   0x14001edd4
   1400046e3:	movzx  edx,BYTE PTR [rsp+0x240]
   1400046eb:	lea    rcx,[rsp+0x248]
   1400046f3:	add    rbx,rdi
   1400046f6:	call   QWORD PTR [rip+0x1c094]        # 0x140020790
   1400046fc:	movzx  edx,WORD PTR [rsp+0x248]
   140004704:	mov    WORD PTR [rbx],dx
   140004707:	mov    rax,QWORD PTR [rsp+0x28]
   14000470c:	lea    rcx,[rsp+0x28]
   140004711:	movsxd rdi,DWORD PTR [rax+0x4]
   140004715:	add    rdi,rdi
   140004718:	call   QWORD PTR [rip+0x1c06a]        # 0x140020788
   14000471e:	lea    rcx,[rbx+0x2]
   140004722:	mov    rdx,rax
   140004725:	mov    r8,rdi
   140004728:	call   0x14001edd4
   14000472d:	lea    rdx,[rsp+0x40]
   140004732:	lea    rcx,[rsp+0x88]
   14000473a:	call   QWORD PTR [rip+0x1be50]        # 0x140020590
   140004740:	lea    rcx,[rsp+0xe8]
   140004748:	mov    rdx,rax
   14000474b:	call   QWORD PTR [rip+0x1be27]        # 0x140020578
   140004751:	lea    rdx,[rip+0x1c2f8]        # 0x140020a50
   140004758:	lea    rcx,[rsp+0xb0]
   140004760:	mov    r8d,0x4
   140004766:	call   QWORD PTR [rip+0x1be14]        # 0x140020580
   14000476c:	mov    rcx,QWORD PTR [rsp+0x20]
   140004771:	mov    edx,DWORD PTR [rcx]
   140004773:	mov    rbx,rax
   140004776:	cmp    edx,0x1
   140004779:	je     0x1400047e8
   14000477b:	test   edx,edx
   14000477d:	je     0x1400047e8
   14000477f:	call   QWORD PTR [rip+0x1bfab]        # 0x140020730
   140004785:	mov    rcx,QWORD PTR [rsp+0x20]
   14000478a:	mov    r8,QWORD PTR [rcx+0x10]
   14000478e:	mov    rdi,rax
   140004791:	test   r8,r8
   140004794:	je     0x1400047b5
   140004796:	mov    rdx,rax
   140004799:	mov    rcx,r8
   14000479c:	call   0x140001210
   1400047a1:	lea    rcx,[rdi+0x8]
   1400047a5:	mov    QWORD PTR [rdi+0x10],rax
   1400047a9:	and    QWORD PTR [rax],0x3
   1400047ad:	or     QWORD PTR [rax],rcx
   1400047b0:	mov    rcx,QWORD PTR [rsp+0x20]
   1400047b5:	mov    eax,DWORD PTR [rcx]
   1400047b7:	test   eax,eax
   1400047b9:	je     0x1400047d0
   1400047bb:	cmp    eax,0xffffffff
   1400047be:	je     0x1400047d5
   1400047c0:	lock add DWORD PTR [rcx],0xffffffff
   1400047c4:	setne  al
   1400047c7:	test   al,al
   1400047c9:	jne    0x1400047d5
   1400047cb:	mov    rcx,QWORD PTR [rsp+0x20]
   1400047d0:	call   0x1400022f0
   1400047d5:	mov    rcx,rdi
   1400047d8:	mov    QWORD PTR [rsp+0x20],rdi
   1400047dd:	call   QWORD PTR [rip+0x1be8d]        # 0x140020670
   1400047e3:	mov    rcx,QWORD PTR [rsp+0x20]
   1400047e8:	mov    rdx,rbx
   1400047eb:	call   0x140001c60
   1400047f0:	test   rax,rax
   1400047f3:	jne    0x140004832
   1400047f5:	lea    rcx,[rsp+0x1a8]
   1400047fd:	call   QWORD PTR [rip+0x1bdd5]        # 0x1400205d8
   140004803:	lea    rdx,[rsp+0x140]
   14000480b:	lea    rcx,[rsp+0x20]
   140004810:	mov    r9,rax
   140004813:	mov    r8,rbx
   140004816:	call   0x140003090
   14000481b:	lea    rcx,[rsp+0x1a8]
   140004823:	mov    rdi,QWORD PTR [rax]
   140004826:	add    rdi,0x20
   14000482a:	call   QWORD PTR [rip+0x1bf18]        # 0x140020748
   140004830:	jmp    0x140004836
   140004832:	lea    rdi,[rax+0x20]
   140004836:	lea    rdx,[rsp+0xe8]
   14000483e:	mov    rcx,rdi
   140004841:	call   QWORD PTR [rip+0x1bde1]        # 0x140020628
   140004847:	lea    rcx,[rsp+0xb0]
   14000484f:	call   QWORD PTR [rip+0x1bf2b]        # 0x140020780
   140004855:	lea    rcx,[rsp+0xe8]
   14000485d:	call   QWORD PTR [rip+0x1bee5]        # 0x140020748
   140004863:	lea    rcx,[rsp+0x88]
   14000486b:	call   QWORD PTR [rip+0x1bf0f]        # 0x140020780
   140004871:	lea    rcx,[rsp+0x40]
   140004876:	call   QWORD PTR [rip+0x1bf04]        # 0x140020780
   14000487c:	lea    rcx,[rsp+0x28]
   140004881:	call   QWORD PTR [rip+0x1bef9]        # 0x140020780
   140004887:	jmp    0x140004ca6
   14000488c:	lea    rcx,[rsp+0x30]
   140004891:	call   QWORD PTR [rip+0x1bd01]        # 0x140020598
   140004897:	mov    rdi,QWORD PTR [rbx+0x20]
   14000489b:	test   rdi,rdi
   14000489e:	je     0x1400048d3
   1400048a0:	lea    rdx,[rdi+0x18]
   1400048a4:	lea    rcx,[rsp+0x30]
   1400048a9:	call   QWORD PTR [rip+0x1bcf1]        # 0x1400205a0
   1400048af:	lea    rcx,[rsp+0x38]
   1400048b4:	mov    dl,0x2e
   1400048b6:	call   QWORD PTR [rip+0x1bed4]        # 0x140020790
   1400048bc:	lea    rcx,[rsp+0x30]
   1400048c1:	movzx  edx,WORD PTR [rax]
   1400048c4:	call   QWORD PTR [rip+0x1bcde]        # 0x1400205a8
   1400048ca:	mov    rdi,QWORD PTR [rdi+0x10]
   1400048ce:	test   rdi,rdi
   1400048d1:	jne    0x1400048a0
   1400048d3:	lea    rcx,[rsp+0x30]
   1400048d8:	mov    edx,0x1
   1400048dd:	call   QWORD PTR [rip+0x1bccd]        # 0x1400205b0
   1400048e3:	mov    rdx,QWORD PTR [rsp+0x30]
   1400048e8:	cmp    DWORD PTR [rdx+0x4],0x0
   1400048ec:	je     0x140004a11
   1400048f2:	lea    rdx,[rsp+0x30]
   1400048f7:	lea    rcx,[rsp+0x108]
   1400048ff:	call   QWORD PTR [rip+0x1bc73]        # 0x140020578
   140004905:	lea    rdx,[rip+0x1c170]        # 0x140020a7c
   14000490c:	lea    rcx,[rsp+0x48]
   140004911:	mov    r8d,0x4
   140004917:	call   QWORD PTR [rip+0x1bc63]        # 0x140020580
   14000491d:	mov    rcx,QWORD PTR [rsp+0x20]
   140004922:	mov    edx,DWORD PTR [rcx]
   140004924:	mov    rsi,rax
   140004927:	cmp    edx,0x1
   14000492a:	je     0x140004999
   14000492c:	test   edx,edx
   14000492e:	je     0x140004999
   140004930:	call   QWORD PTR [rip+0x1bdfa]        # 0x140020730
   140004936:	mov    rcx,QWORD PTR [rsp+0x20]
   14000493b:	mov    r8,QWORD PTR [rcx+0x10]
   14000493f:	mov    rdi,rax
   140004942:	test   r8,r8
   140004945:	je     0x140004966
   140004947:	mov    rdx,rax
   14000494a:	mov    rcx,r8
   14000494d:	call   0x140001210
   140004952:	lea    rcx,[rdi+0x8]
   140004956:	mov    QWORD PTR [rdi+0x10],rax
   14000495a:	and    QWORD PTR [rax],0x3
   14000495e:	or     QWORD PTR [rax],rcx
   140004961:	mov    rcx,QWORD PTR [rsp+0x20]
   140004966:	mov    eax,DWORD PTR [rcx]
   140004968:	test   eax,eax
   14000496a:	je     0x140004981
   14000496c:	cmp    eax,0xffffffff
   14000496f:	je     0x140004986
   140004971:	lock add DWORD PTR [rcx],0xffffffff
   140004975:	setne  al
   140004978:	test   al,al
   14000497a:	jne    0x140004986
   14000497c:	mov    rcx,QWORD PTR [rsp+0x20]
   140004981:	call   0x1400022f0
   140004986:	mov    rcx,rdi
   140004989:	mov    QWORD PTR [rsp+0x20],rdi
   14000498e:	call   QWORD PTR [rip+0x1bcdc]        # 0x140020670
   140004994:	mov    rcx,QWORD PTR [rsp+0x20]
   140004999:	mov    rdx,rsi
   14000499c:	call   0x140001c60
   1400049a1:	test   rax,rax
   1400049a4:	jne    0x1400049e3
   1400049a6:	lea    rcx,[rsp+0x1c0]
   1400049ae:	call   QWORD PTR [rip+0x1bc24]        # 0x1400205d8
   1400049b4:	lea    rdx,[rsp+0x1d0]
   1400049bc:	lea    rcx,[rsp+0x20]
   1400049c1:	mov    r9,rax
   1400049c4:	mov    r8,rsi
   1400049c7:	call   0x140003090
   1400049cc:	lea    rcx,[rsp+0x1c0]
   1400049d4:	mov    rdi,QWORD PTR [rax]
   1400049d7:	add    rdi,0x20
   1400049db:	call   QWORD PTR [rip+0x1bd67]        # 0x140020748
   1400049e1:	jmp    0x1400049e7
   1400049e3:	lea    rdi,[rax+0x20]
   1400049e7:	lea    rdx,[rsp+0x108]
   1400049ef:	mov    rcx,rdi
   1400049f2:	call   QWORD PTR [rip+0x1bc30]        # 0x140020628
   1400049f8:	lea    rcx,[rsp+0x48]
   1400049fd:	call   QWORD PTR [rip+0x1bd7d]        # 0x140020780
   140004a03:	lea    rcx,[rsp+0x108]
   140004a0b:	call   QWORD PTR [rip+0x1bd37]        # 0x140020748
   140004a11:	lea    rdx,[rip+0x1c030]        # 0x140020a48
   140004a18:	lea    rcx,[rsp+0xa8]
   140004a20:	mov    r8d,0x6
   140004a26:	call   QWORD PTR [rip+0x1bb54]        # 0x140020580
   140004a2c:	lea    rcx,[rsp+0x130]
   140004a34:	mov    rdx,rax
   140004a37:	call   QWORD PTR [rip+0x1bb3b]        # 0x140020578
   140004a3d:	lea    rdx,[rip+0x1c020]        # 0x140020a64
   140004a44:	lea    rcx,[rsp+0x98]
   140004a4c:	mov    r8d,0x4
   140004a52:	call   QWORD PTR [rip+0x1bb28]        # 0x140020580
   140004a58:	mov    rcx,QWORD PTR [rsp+0x20]
   140004a5d:	mov    edx,DWORD PTR [rcx]
   140004a5f:	mov    rsi,rax
   140004a62:	cmp    edx,0x1
   140004a65:	je     0x140004ad4
   140004a67:	test   edx,edx
   140004a69:	je     0x140004ad4
   140004a6b:	call   QWORD PTR [rip+0x1bcbf]        # 0x140020730
   140004a71:	mov    rcx,QWORD PTR [rsp+0x20]
   140004a76:	mov    r8,QWORD PTR [rcx+0x10]
   140004a7a:	mov    rdi,rax
   140004a7d:	test   r8,r8
   140004a80:	je     0x140004aa1
   140004a82:	mov    rdx,rax
   140004a85:	mov    rcx,r8
   140004a88:	call   0x140001210
   140004a8d:	lea    rcx,[rdi+0x8]
   140004a91:	mov    QWORD PTR [rdi+0x10],rax
   140004a95:	and    QWORD PTR [rax],0x3
   140004a99:	or     QWORD PTR [rax],rcx
   140004a9c:	mov    rcx,QWORD PTR [rsp+0x20]
   140004aa1:	mov    eax,DWORD PTR [rcx]
   140004aa3:	test   eax,eax
   140004aa5:	je     0x140004abc
   140004aa7:	cmp    eax,0xffffffff
   140004aaa:	je     0x140004ac1
   140004aac:	lock add DWORD PTR [rcx],0xffffffff
   140004ab0:	setne  al
   140004ab3:	test   al,al
   140004ab5:	jne    0x140004ac1
   140004ab7:	mov    rcx,QWORD PTR [rsp+0x20]
   140004abc:	call   0x1400022f0
   140004ac1:	mov    rcx,rdi
   140004ac4:	mov    QWORD PTR [rsp+0x20],rdi
   140004ac9:	call   QWORD PTR [rip+0x1bba1]        # 0x140020670
   140004acf:	mov    rcx,QWORD PTR [rsp+0x20]
   140004ad4:	mov    rdx,rsi
   140004ad7:	call   0x140001c60
   140004adc:	test   rax,rax
   140004adf:	jne    0x140004b1e
   140004ae1:	lea    rcx,[rsp+0x1d8]
   140004ae9:	call   QWORD PTR [rip+0x1bae9]        # 0x1400205d8
   140004aef:	lea    rdx,[rsp+0x170]
   140004af7:	lea    rcx,[rsp+0x20]
   140004afc:	mov    r9,rax
   140004aff:	mov    r8,rsi
   140004b02:	call   0x140003090
   140004b07:	lea    rcx,[rsp+0x1d8]
   140004b0f:	mov    rdi,QWORD PTR [rax]
   140004b12:	add    rdi,0x20
   140004b16:	call   QWORD PTR [rip+0x1bc2c]        # 0x140020748
   140004b1c:	jmp    0x140004b22
   140004b1e:	lea    rdi,[rax+0x20]
   140004b22:	lea    rdx,[rsp+0x130]
   140004b2a:	mov    rcx,rdi
   140004b2d:	call   QWORD PTR [rip+0x1baf5]        # 0x140020628
   140004b33:	lea    rcx,[rsp+0x98]
   140004b3b:	call   QWORD PTR [rip+0x1bc3f]        # 0x140020780
   140004b41:	lea    rcx,[rsp+0x130]
   140004b49:	call   QWORD PTR [rip+0x1bbf9]        # 0x140020748
   140004b4f:	lea    rcx,[rsp+0xa8]
   140004b57:	call   QWORD PTR [rip+0x1bc23]        # 0x140020780
   140004b5d:	mov    r9d,DWORD PTR [rbx+0x5c]
   140004b61:	mov    r8d,DWORD PTR [rbx+0x58]
   140004b65:	lea    rdx,[rsp+0x58]
   140004b6a:	mov    rcx,r13
   140004b6d:	call   QWORD PTR [rip+0x1ba45]        # 0x1400205b8
   140004b73:	lea    rcx,[rsp+0xd8]
   140004b7b:	mov    rdx,rax
   140004b7e:	call   QWORD PTR [rip+0x1b9f4]        # 0x140020578
   140004b84:	lea    rdx,[rip+0x1beb5]        # 0x140020a40
   140004b8b:	lea    rcx,[rsp+0x50]
   140004b90:	mov    r8d,0x7
   140004b96:	call   QWORD PTR [rip+0x1b9e4]        # 0x140020580
   140004b9c:	mov    rcx,QWORD PTR [rsp+0x20]
   140004ba1:	mov    edx,DWORD PTR [rcx]
   140004ba3:	mov    rbx,rax
   140004ba6:	cmp    edx,0x1
   140004ba9:	je     0x140004c18
   140004bab:	test   edx,edx
   140004bad:	je     0x140004c18
   140004baf:	call   QWORD PTR [rip+0x1bb7b]        # 0x140020730
   140004bb5:	mov    rcx,QWORD PTR [rsp+0x20]
   140004bba:	mov    r8,QWORD PTR [rcx+0x10]
   140004bbe:	mov    rdi,rax
   140004bc1:	test   r8,r8
   140004bc4:	je     0x140004be5
   140004bc6:	mov    rdx,rax
   140004bc9:	mov    rcx,r8
   140004bcc:	call   0x140001210
   140004bd1:	lea    rcx,[rdi+0x8]
   140004bd5:	mov    QWORD PTR [rdi+0x10],rax
   140004bd9:	and    QWORD PTR [rax],0x3
   140004bdd:	or     QWORD PTR [rax],rcx
   140004be0:	mov    rcx,QWORD PTR [rsp+0x20]
   140004be5:	mov    eax,DWORD PTR [rcx]
   140004be7:	test   eax,eax
   140004be9:	je     0x140004c00
   140004beb:	cmp    eax,0xffffffff
   140004bee:	je     0x140004c05
   140004bf0:	lock add DWORD PTR [rcx],0xffffffff
   140004bf4:	setne  al
   140004bf7:	test   al,al
   140004bf9:	jne    0x140004c05
   140004bfb:	mov    rcx,QWORD PTR [rsp+0x20]
   140004c00:	call   0x1400022f0
   140004c05:	mov    rcx,rdi
   140004c08:	mov    QWORD PTR [rsp+0x20],rdi
   140004c0d:	call   QWORD PTR [rip+0x1ba5d]        # 0x140020670
   140004c13:	mov    rcx,QWORD PTR [rsp+0x20]
   140004c18:	mov    rdx,rbx
   140004c1b:	call   0x140001c60
   140004c20:	test   rax,rax
   140004c23:	jne    0x140004c62
   140004c25:	lea    rcx,[rsp+0x1f0]
   140004c2d:	call   QWORD PTR [rip+0x1b9a5]        # 0x1400205d8
   140004c33:	lea    rdx,[rsp+0x1b8]
   140004c3b:	lea    rcx,[rsp+0x20]
   140004c40:	mov    r9,rax
   140004c43:	mov    r8,rbx
   140004c46:	call   0x140003090
   140004c4b:	lea    rcx,[rsp+0x1f0]
   140004c53:	mov    rdi,QWORD PTR [rax]
   140004c56:	add    rdi,0x20
   140004c5a:	call   QWORD PTR [rip+0x1bae8]        # 0x140020748
   140004c60:	jmp    0x140004c66
   140004c62:	lea    rdi,[rax+0x20]
   140004c66:	lea    rdx,[rsp+0xd8]
   140004c6e:	mov    rcx,rdi
   140004c71:	call   QWORD PTR [rip+0x1b9b1]        # 0x140020628
   140004c77:	lea    rcx,[rsp+0x50]
   140004c7c:	call   QWORD PTR [rip+0x1bafe]        # 0x140020780
   140004c82:	lea    rcx,[rsp+0xd8]
   140004c8a:	call   QWORD PTR [rip+0x1bab8]        # 0x140020748
   140004c90:	lea    rcx,[rsp+0x58]
   140004c95:	call   QWORD PTR [rip+0x1bae5]        # 0x140020780
   140004c9b:	lea    rcx,[rsp+0x30]
   140004ca0:	call   QWORD PTR [rip+0x1bada]        # 0x140020780
   140004ca6:	lea    rdx,[rsp+0x20]
   140004cab:	lea    rcx,[rsp+0x78]
   140004cb0:	call   QWORD PTR [rip+0x1b90a]        # 0x1400205c0
   140004cb6:	mov    rdx,QWORD PTR [r12]
   140004cba:	mov    eax,DWORD PTR [rdx]
   140004cbc:	cmp    eax,0x1
   140004cbf:	je     0x140004d04
   140004cc1:	test   eax,eax
   140004cc3:	je     0x140004d04
   140004cc5:	mov    edx,0x7fffffff
   140004cca:	mov    r8d,0x1
   140004cd0:	mov    rcx,r12
   140004cd3:	call   0x1400029a0
   140004cd8:	mov    ecx,0x10
   140004cdd:	mov    rdi,rax
   140004ce0:	call   0x14001ee64
   140004ce5:	test   rax,rax
   140004ce8:	je     0x140004cfd
   140004cea:	lea    rdx,[rsp+0x78]
   140004cef:	mov    rcx,rax
   140004cf2:	call   QWORD PTR [rip+0x1ba40]        # 0x140020738
   140004cf8:	mov    QWORD PTR [rdi],rax
   140004cfb:	jmp    0x140004d34
   140004cfd:	xor    eax,eax
   140004cff:	mov    QWORD PTR [rdi],rax
   140004d02:	jmp    0x140004d34
   140004d04:	mov    rcx,r12
   140004d07:	call   QWORD PTR [rip+0x1b92b]        # 0x140020638
   140004d0d:	mov    ecx,0x10
   140004d12:	mov    rdi,rax
   140004d15:	call   0x14001ee64
   140004d1a:	test   rax,rax
   140004d1d:	je     0x140004d2f
   140004d1f:	lea    rdx,[rsp+0x78]
   140004d24:	mov    rcx,rax
   140004d27:	call   QWORD PTR [rip+0x1ba0b]        # 0x140020738
   140004d2d:	jmp    0x140004d31
   140004d2f:	xor    eax,eax
   140004d31:	mov    QWORD PTR [rdi],rax
   140004d34:	lea    rcx,[rsp+0x78]
   140004d39:	call   QWORD PTR [rip+0x1ba09]        # 0x140020748
   140004d3f:	mov    rcx,QWORD PTR [rsp+0x20]
   140004d44:	mov    eax,DWORD PTR [rcx]
   140004d46:	test   eax,eax
   140004d48:	je     0x140004d5f
   140004d4a:	cmp    eax,0xffffffff
   140004d4d:	je     0x140004d86
   140004d4f:	lock add DWORD PTR [rcx],0xffffffff
   140004d53:	setne  al
   140004d56:	test   al,al
   140004d58:	jne    0x140004d86
   140004d5a:	mov    rcx,QWORD PTR [rsp+0x20]
   140004d5f:	call   0x1400022f0
   140004d64:	jmp    0x140004d86
   140004d66:	mov    eax,DWORD PTR [rcx]
   140004d68:	test   eax,eax
   140004d6a:	je     0x140004d81
   140004d6c:	cmp    eax,0xffffffff
   140004d6f:	je     0x140004d86
   140004d71:	lock add DWORD PTR [rcx],0xffffffff
   140004d75:	setne  al
   140004d78:	test   al,al
   140004d7a:	jne    0x140004d86
   140004d7c:	mov    rcx,QWORD PTR [rsp+0x20]
   140004d81:	call   0x1400022f0
   140004d86:	mov    rbp,QWORD PTR [rbp+0x18]
   140004d8a:	test   rbp,rbp
   140004d8d:	jne    0x140004250
   140004d93:	mov    r15,QWORD PTR [rsp+0x200]
   140004d9b:	mov    rdi,QWORD PTR [rsp+0x208]
   140004da3:	mov    rsi,QWORD PTR [rsp+0x210]
   140004dab:	mov    rbx,QWORD PTR [rsp+0x250]
   140004db3:	mov    rax,r12
   140004db6:	add    rsp,0x218
   140004dbd:	pop    r14
   140004dbf:	pop    r13
   140004dc1:	pop    r12
   140004dc3:	pop    rbp
   140004dc4:	ret    
   140004dc5:	int3   
   140004dc6:	int3   
   140004dc7:	int3   
   140004dc8:	int3   
   140004dc9:	int3   
   140004dca:	int3   
   140004dcb:	int3   
   140004dcc:	int3   
   140004dcd:	int3   
   140004dce:	int3   
   140004dcf:	int3   
   140004dd0:	mov    QWORD PTR [rsp+0x8],rbx
   140004dd5:	push   rbp
   140004dd6:	push   rsi
   140004dd7:	push   rdi
   140004dd8:	push   r12
   140004dda:	push   r13
   140004ddc:	sub    rsp,0x90
   140004de3:	mov    r12,rcx
   140004de6:	lea    rcx,[rsp+0x30]
   140004deb:	mov    rsi,r8
   140004dee:	call   QWORD PTR [rip+0x1b9a4]        # 0x140020798
   140004df4:	lea    rcx,[rsp+0x70]
   140004df9:	mov    dl,0x2f
   140004dfb:	call   QWORD PTR [rip+0x1b98f]        # 0x140020790
   140004e01:	lea    rcx,[rsp+0x72]
   140004e06:	mov    dl,0x2e
   140004e08:	mov    rbx,rax
   140004e0b:	call   QWORD PTR [rip+0x1b97f]        # 0x140020790
   140004e11:	movzx  r8d,WORD PTR [rbx]
   140004e15:	movzx  edx,WORD PTR [rax]
   140004e18:	lea    rcx,[rsp+0x30]
   140004e1d:	mov    r9d,0x1
   140004e23:	call   QWORD PTR [rip+0x1b717]        # 0x140020540
   140004e29:	mov    rax,QWORD PTR [rsp+0x30]
   140004e2e:	mov    BYTE PTR [rsp+0xd0],0x2e
   140004e36:	mov    edx,DWORD PTR [rax+0x4]
   140004e39:	mov    rax,QWORD PTR [rsi]
   140004e3c:	xor    r8d,r8d
   140004e3f:	mov    ecx,DWORD PTR [rax+0x4]
   140004e42:	lea    edx,[rcx+rdx*1+0x1]
   140004e46:	lea    rcx,[rsp+0x60]
   140004e4b:	call   QWORD PTR [rip+0x1b847]        # 0x140020698
   140004e51:	lea    rcx,[rsp+0x60]
   140004e56:	call   QWORD PTR [rip+0x1b92c]        # 0x140020788
   140004e5c:	mov    rcx,QWORD PTR [rsp+0x30]
   140004e61:	movsxd rbx,DWORD PTR [rcx+0x4]
   140004e65:	lea    rcx,[rsp+0x30]
   140004e6a:	mov    rdi,rax
   140004e6d:	add    rbx,rbx
   140004e70:	call   QWORD PTR [rip+0x1b912]        # 0x140020788
   140004e76:	mov    r8,rbx
   140004e79:	mov    rdx,rax
   140004e7c:	mov    rcx,rdi
   140004e7f:	call   0x14001edd4
   140004e84:	movzx  edx,BYTE PTR [rsp+0xd0]
   140004e8c:	lea    rcx,[rsp+0x2a]
   140004e91:	add    rdi,rbx
   140004e94:	call   QWORD PTR [rip+0x1b8f6]        # 0x140020790
   140004e9a:	movzx  r11d,WORD PTR [rsp+0x2a]
   140004ea0:	mov    WORD PTR [rdi],r11w
   140004ea4:	mov    rax,QWORD PTR [rsi]
   140004ea7:	mov    rcx,rsi
   140004eaa:	movsxd rbx,DWORD PTR [rax+0x4]
   140004eae:	add    rbx,rbx
   140004eb1:	call   QWORD PTR [rip+0x1b8d1]        # 0x140020788
   140004eb7:	lea    rcx,[rdi+0x2]
   140004ebb:	mov    rdx,rax
   140004ebe:	mov    r8,rbx
   140004ec1:	call   0x14001edd4
   140004ec6:	lea    rdx,[rsp+0x60]
   140004ecb:	lea    rcx,[rsp+0x20]
   140004ed0:	call   QWORD PTR [rip+0x1b8c2]        # 0x140020798
   140004ed6:	lea    rcx,[rsp+0x60]
   140004edb:	call   QWORD PTR [rip+0x1b89f]        # 0x140020780
   140004ee1:	xor    r13d,r13d
   140004ee4:	or     ebp,0xffffffff
   140004ee7:	nop    WORD PTR [rax+rax*1+0x0]
   140004ef0:	mov    rcx,QWORD PTR [rip+0x2d6d9]        # 0x1400325d0
   140004ef7:	mov    QWORD PTR [rsp+0x40],rcx
   140004efc:	mov    eax,DWORD PTR [rcx]
   140004efe:	test   eax,eax
   140004f00:	je     0x140004f0d
   140004f02:	cmp    eax,0xffffffff
   140004f05:	je     0x140004f6a
   140004f07:	lock add DWORD PTR [rcx],0x1
   140004f0b:	jmp    0x140004f65
   140004f0d:	mov    edx,DWORD PTR [rcx+0x4]
   140004f10:	lea    rcx,[rsp+0x40]
   140004f15:	call   QWORD PTR [rip+0x1b75d]        # 0x140020678
   140004f1b:	mov    rcx,QWORD PTR [rsp+0x40]
   140004f20:	mov    r11,QWORD PTR [rip+0x2d6a9]        # 0x1400325d0
   140004f27:	movsxd rax,DWORD PTR [r11+0x8]
   140004f2b:	lea    rdi,[r11+rax*8+0x10]
   140004f30:	movsxd rax,DWORD PTR [rcx+0xc]
   140004f34:	lea    rsi,[rcx+rax*8+0x10]
   140004f39:	movsxd rax,DWORD PTR [rcx+0x8]
   140004f3d:	lea    rbx,[rcx+rax*8+0x10]
   140004f42:	cmp    rbx,rsi
   140004f45:	je     0x140004f6a
   140004f47:	test   rbx,rbx
   140004f4a:	je     0x140004f58
   140004f4c:	mov    rdx,rdi
   140004f4f:	mov    rcx,rbx
   140004f52:	call   QWORD PTR [rip+0x1b840]        # 0x140020798
   140004f58:	add    rbx,0x8
   140004f5c:	add    rdi,0x8
   140004f60:	cmp    rbx,rsi
   140004f63:	jne    0x140004f47
   140004f65:	mov    rcx,QWORD PTR [rsp+0x40]
   140004f6a:	mov    DWORD PTR [rsp+0x48],r13d
   140004f6f:	movsxd rax,DWORD PTR [rcx+0x8]
   140004f73:	lea    rsi,[rcx+rax*8+0x10]
   140004f78:	mov    QWORD PTR [rsp+0x50],rsi
   140004f7d:	movsxd rax,DWORD PTR [rcx+0xc]
   140004f81:	lea    rdx,[rcx+rax*8+0x10]
   140004f86:	mov    QWORD PTR [rsp+0x58],rdx
   140004f8b:	nop    DWORD PTR [rax+rax*1+0x0]
   140004f90:	mov    eax,0x1
   140004f95:	mov    DWORD PTR [rsp+0x48],eax
   140004f99:	cmp    rsi,rdx
   140004f9c:	je     0x1400050c3
   140004fa2:	test   eax,eax
   140004fa4:	je     0x1400050ab
   140004faa:	mov    BYTE PTR [rsp+0xd8],0x2f
   140004fb2:	mov    rax,QWORD PTR [rsi]
   140004fb5:	xor    r8d,r8d
   140004fb8:	mov    edx,DWORD PTR [rax+0x4]
   140004fbb:	mov    rax,QWORD PTR [rsp+0x20]
   140004fc0:	mov    ecx,DWORD PTR [rax+0x4]
   140004fc3:	lea    edx,[rcx+rdx*1+0x1]
   140004fc7:	lea    rcx,[rsp+0x68]
   140004fcc:	call   QWORD PTR [rip+0x1b6c6]        # 0x140020698
   140004fd2:	lea    rcx,[rsp+0x68]
   140004fd7:	call   QWORD PTR [rip+0x1b7ab]        # 0x140020788
   140004fdd:	mov    rcx,QWORD PTR [rsi]
   140004fe0:	movsxd rbx,DWORD PTR [rcx+0x4]
   140004fe4:	mov    rcx,rsi
   140004fe7:	mov    rdi,rax
   140004fea:	add    rbx,rbx
   140004fed:	call   QWORD PTR [rip+0x1b795]        # 0x140020788
   140004ff3:	mov    r8,rbx
   140004ff6:	mov    rdx,rax
   140004ff9:	mov    rcx,rdi
   140004ffc:	call   0x14001edd4
   140005001:	movzx  edx,BYTE PTR [rsp+0xd8]
   140005009:	lea    rcx,[rsp+0x28]
   14000500e:	add    rdi,rbx
   140005011:	call   QWORD PTR [rip+0x1b779]        # 0x140020790
   140005017:	movzx  r11d,WORD PTR [rsp+0x28]
   14000501d:	mov    WORD PTR [rdi],r11w
   140005021:	mov    rax,QWORD PTR [rsp+0x20]
   140005026:	lea    rcx,[rsp+0x20]
   14000502b:	movsxd rbx,DWORD PTR [rax+0x4]
   14000502f:	add    rbx,rbx
   140005032:	call   QWORD PTR [rip+0x1b750]        # 0x140020788
   140005038:	lea    rcx,[rdi+0x2]
   14000503c:	mov    rdx,rax
   14000503f:	mov    r8,rbx
   140005042:	call   0x14001edd4
   140005047:	lea    rdx,[rsp+0x68]
   14000504c:	lea    rcx,[rsp+0x38]
   140005051:	call   QWORD PTR [rip+0x1b539]        # 0x140020590
   140005057:	lea    rcx,[rsp+0x68]
   14000505c:	call   QWORD PTR [rip+0x1b71e]        # 0x140020780
   140005062:	lea    rdx,[rsp+0x38]
   140005067:	lea    rcx,[rsp+0x78]
   14000506c:	call   QWORD PTR [rip+0x1b4d6]        # 0x140020548
   140005072:	mov    rcx,rax
   140005075:	call   QWORD PTR [rip+0x1b4d5]        # 0x140020550
   14000507b:	lea    rcx,[rsp+0x78]
   140005080:	movzx  ebx,al
   140005083:	call   QWORD PTR [rip+0x1b4cf]        # 0x140020558
   140005089:	test   bl,bl
   14000508b:	jne    0x140005182
   140005091:	lea    rcx,[rsp+0x38]
   140005096:	call   QWORD PTR [rip+0x1b6e4]        # 0x140020780
   14000509c:	mov    eax,DWORD PTR [rsp+0x48]
   1400050a0:	dec    eax
   1400050a2:	mov    DWORD PTR [rsp+0x48],eax
   1400050a6:	jmp    0x140004fa2
   1400050ab:	mov    rsi,QWORD PTR [rsp+0x50]
   1400050b0:	mov    rdx,QWORD PTR [rsp+0x58]
   1400050b5:	add    rsi,0x8
   1400050b9:	mov    QWORD PTR [rsp+0x50],rsi
   1400050be:	jmp    0x140004f90
   1400050c3:	mov    rdi,QWORD PTR [rsp+0x40]
   1400050c8:	mov    eax,DWORD PTR [rdi]
   1400050ca:	test   eax,eax
   1400050cc:	je     0x1400050e3
   1400050ce:	cmp    eax,0xffffffff
   1400050d1:	je     0x14000511b
   1400050d3:	lock add DWORD PTR [rdi],0xffffffff
   1400050d7:	setne  al
   1400050da:	test   al,al
   1400050dc:	jne    0x14000511b
   1400050de:	mov    rdi,QWORD PTR [rsp+0x40]
   1400050e3:	movsxd rax,DWORD PTR [rdi+0xc]
   1400050e7:	lea    rbx,[rdi+rax*8+0x10]
   1400050ec:	movsxd rax,DWORD PTR [rdi+0x8]
   1400050f0:	lea    rsi,[rdi+rax*8+0x10]
   1400050f5:	cmp    rsi,rbx
   1400050f8:	je     0x140005112
   1400050fa:	nop    WORD PTR [rax+rax*1+0x0]
   140005100:	sub    rbx,0x8
   140005104:	mov    rcx,rbx
   140005107:	call   QWORD PTR [rip+0x1b673]        # 0x140020780
   14000510d:	cmp    rbx,rsi
   140005110:	jne    0x140005100
   140005112:	mov    rcx,rdi
   140005115:	call   QWORD PTR [rip+0x1b5b5]        # 0x1400206d0
   14000511b:	lea    rcx,[rsp+0x74]
   140005120:	mov    dl,0x2e
   140005122:	call   QWORD PTR [rip+0x1b668]        # 0x140020790
   140005128:	lea    rcx,[rsp+0x20]
   14000512d:	mov    r9d,0x1
   140005133:	movzx  edx,WORD PTR [rax]
   140005136:	mov    r8d,ebp
   140005139:	call   QWORD PTR [rip+0x1b421]        # 0x140020560
   14000513f:	cmp    eax,0xffffffff
   140005142:	je     0x1400051ef
   140005148:	lea    rdx,[rsp+0x80]
   140005150:	lea    rcx,[rsp+0x20]
   140005155:	mov    r9d,eax
   140005158:	xor    r8d,r8d
   14000515b:	call   QWORD PTR [rip+0x1b457]        # 0x1400205b8
   140005161:	lea    rcx,[rsp+0x20]
   140005166:	mov    rdx,rax
   140005169:	call   QWORD PTR [rip+0x1b3f9]        # 0x140020568
   14000516f:	lea    rcx,[rsp+0x80]
   140005177:	call   QWORD PTR [rip+0x1b603]        # 0x140020780
   14000517d:	jmp    0x140004ef0
   140005182:	lea    rdx,[rsp+0x38]
   140005187:	mov    rcx,r12
   14000518a:	call   QWORD PTR [rip+0x1b608]        # 0x140020798
   140005190:	lea    rcx,[rsp+0x38]
   140005195:	call   QWORD PTR [rip+0x1b5e5]        # 0x140020780
   14000519b:	mov    rdi,QWORD PTR [rsp+0x40]
   1400051a0:	mov    eax,DWORD PTR [rdi]
   1400051a2:	test   eax,eax
   1400051a4:	je     0x1400051bb
   1400051a6:	cmp    eax,0xffffffff
   1400051a9:	je     0x1400051f8
   1400051ab:	lock add DWORD PTR [rdi],0xffffffff
   1400051af:	setne  al
   1400051b2:	test   al,al
   1400051b4:	jne    0x1400051f8
   1400051b6:	mov    rdi,QWORD PTR [rsp+0x40]
   1400051bb:	movsxd rax,DWORD PTR [rdi+0xc]
   1400051bf:	lea    rbx,[rdi+rax*8+0x10]
   1400051c4:	movsxd rax,DWORD PTR [rdi+0x8]
   1400051c8:	lea    rsi,[rdi+rax*8+0x10]
   1400051cd:	cmp    rsi,rbx
   1400051d0:	je     0x1400051e4
   1400051d2:	sub    rbx,0x8
   1400051d6:	mov    rcx,rbx
   1400051d9:	call   QWORD PTR [rip+0x1b5a1]        # 0x140020780
   1400051df:	cmp    rbx,rsi
   1400051e2:	jne    0x1400051d2
   1400051e4:	mov    rcx,rdi
   1400051e7:	call   QWORD PTR [rip+0x1b4e3]        # 0x1400206d0
   1400051ed:	jmp    0x1400051f8
   1400051ef:	mov    rcx,r12
   1400051f2:	call   QWORD PTR [rip+0x1b3a0]        # 0x140020598
   1400051f8:	lea    rcx,[rsp+0x20]
   1400051fd:	call   QWORD PTR [rip+0x1b57d]        # 0x140020780
   140005203:	lea    rcx,[rsp+0x30]
   140005208:	call   QWORD PTR [rip+0x1b572]        # 0x140020780
   14000520e:	mov    rbx,QWORD PTR [rsp+0xc0]
   140005216:	mov    rax,r12
   140005219:	add    rsp,0x90
   140005220:	pop    r13
   140005222:	pop    r12
   140005224:	pop    rdi
   140005225:	pop    rsi
   140005226:	pop    rbp
   140005227:	ret    
   140005228:	int3   
   140005229:	int3   
   14000522a:	int3   
   14000522b:	int3   
   14000522c:	int3   
   14000522d:	int3   
   14000522e:	int3   
   14000522f:	int3   
   140005230:	mov    QWORD PTR [rsp+0x18],rbx
   140005235:	mov    QWORD PTR [rsp+0x10],rdx
   14000523a:	mov    QWORD PTR [rsp+0x8],rcx
   14000523f:	push   rbp
   140005240:	push   rsi
   140005241:	push   rdi
   140005242:	push   r12
   140005244:	push   r13
   140005246:	push   r14
   140005248:	push   r15
   14000524a:	sub    rsp,0x2e0
   140005251:	lea    rcx,[rsp+0x80]
   140005259:	xor    r12d,r12d
   14000525c:	mov    r15,r8
   14000525f:	mov    DWORD PTR [rsp+0x338],r12d
   140005267:	call   0x140016da0
   14000526c:	lea    rdx,[rsp+0x80]
   140005274:	lea    rcx,[rsp+0xd0]
   14000527c:	call   0x140017f10
   140005281:	lea    r8d,[r12+0x1]
   140005286:	lea    rcx,[rsp+0xd0]
   14000528e:	mov    r9b,0x1
   140005291:	mov    rdx,r15
   140005294:	call   0x140018000
   140005299:	lea    rdx,[rsp+0x80]
   1400052a1:	lea    rcx,[rsp+0x1c0]
   1400052a9:	call   0x14000f170
   1400052ae:	lea    edx,[r12+0x62]
   1400052b3:	lea    rcx,[rsp+0x1c0]
   1400052bb:	call   0x14000f340
   1400052c0:	mov    rbx,QWORD PTR [rsp+0x2d8]
   1400052c8:	test   al,al
   1400052ca:	je     0x1400053a0
   1400052d0:	mov    QWORD PTR [rsp+0x20],rbx
   1400052d5:	mov    eax,DWORD PTR [rbx]
   1400052d7:	mov    r12d,0x1
   1400052dd:	mov    rdi,rbx
   1400052e0:	test   eax,eax
   1400052e2:	je     0x1400052f6
   1400052e4:	cmp    eax,0xffffffff
   1400052e7:	je     0x140005393
   1400052ed:	lock add DWORD PTR [rbx],r12d
   1400052f1:	jmp    0x140005386
   1400052f6:	mov    edx,DWORD PTR [rbx+0x4]
   1400052f9:	lea    rcx,[rsp+0x20]
   1400052fe:	call   QWORD PTR [rip+0x1b374]        # 0x140020678
   140005304:	mov    rdi,QWORD PTR [rsp+0x20]
   140005309:	mov    rbx,QWORD PTR [rsp+0x2d8]
   140005311:	movsxd rax,DWORD PTR [rdi+0xc]
   140005315:	lea    r13,[rdi+rax*8+0x10]
   14000531a:	movsxd rax,DWORD PTR [rbx+0x8]
   14000531e:	lea    rbp,[rbx+rax*8+0x10]
   140005323:	movsxd rax,DWORD PTR [rdi+0x8]
   140005327:	lea    rsi,[rdi+rax*8+0x10]
   14000532c:	cmp    rsi,r13
   14000532f:	je     0x140005393
   140005331:	mov    ecx,0x20
   140005336:	call   0x14001ee64
   14000533b:	mov    rbx,rax
   14000533e:	test   rax,rax
   140005341:	je     0x140005374
   140005343:	mov    rdx,QWORD PTR [rbp+0x0]
   140005347:	add    rdx,0x18
   14000534b:	mov    ecx,DWORD PTR [rdx-0x18]
   14000534e:	mov    DWORD PTR [rax],ecx
   140005350:	mov    ecx,DWORD PTR [rdx-0x14]
   140005353:	mov    DWORD PTR [rax+0x4],ecx
   140005356:	mov    ecx,DWORD PTR [rdx-0x10]
   140005359:	mov    DWORD PTR [rax+0x8],ecx
   14000535c:	mov    ecx,DWORD PTR [rdx-0xc]
   14000535f:	mov    DWORD PTR [rax+0xc],ecx
   140005362:	mov    eax,DWORD PTR [rdx-0x8]
   140005365:	lea    rcx,[rbx+0x18]
   140005369:	mov    DWORD PTR [rbx+0x10],eax
   14000536c:	call   QWORD PTR [rip+0x1b426]        # 0x140020798
   140005372:	jmp    0x140005376
   140005374:	xor    ebx,ebx
   140005376:	mov    QWORD PTR [rsi],rbx
   140005379:	add    rsi,0x8
   14000537d:	add    rbp,0x8
   140005381:	cmp    rsi,r13
   140005384:	jne    0x140005331
   140005386:	mov    rdi,QWORD PTR [rsp+0x20]
   14000538b:	mov    rbx,QWORD PTR [rsp+0x2d8]
   140005393:	mov    eax,DWORD PTR [rdi+0x8]
   140005396:	cmp    DWORD PTR [rdi+0xc],eax
   140005399:	jne    0x1400053a5
   14000539b:	xor    r13b,r13b
   14000539e:	jmp    0x1400053a8
   1400053a0:	mov    rdi,QWORD PTR [rsp+0x20]
   1400053a5:	mov    r13b,0x1
   1400053a8:	test   r12b,0x1
   1400053ac:	je     0x140005425
   1400053ae:	mov    eax,DWORD PTR [rdi]
   1400053b0:	and    r12d,0xfffffffe
   1400053b4:	test   eax,eax
   1400053b6:	je     0x1400053cd
   1400053b8:	cmp    eax,0xffffffff
   1400053bb:	je     0x140005425
   1400053bd:	lock add DWORD PTR [rdi],0xffffffff
   1400053c1:	setne  al
   1400053c4:	test   al,al
   1400053c6:	jne    0x14000541d
   1400053c8:	mov    rdi,QWORD PTR [rsp+0x20]
   1400053cd:	movsxd rax,DWORD PTR [rdi+0xc]
   1400053d1:	lea    rbx,[rdi+rax*8+0x10]
   1400053d6:	movsxd rax,DWORD PTR [rdi+0x8]
   1400053da:	lea    rbp,[rdi+rax*8+0x10]
   1400053df:	cmp    rbp,rbx
   1400053e2:	je     0x140005414
   1400053e4:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400053f0:	mov    rsi,QWORD PTR [rbx-0x8]
   1400053f4:	sub    rbx,0x8
   1400053f8:	test   rsi,rsi
   1400053fb:	je     0x14000540f
   1400053fd:	lea    rcx,[rsi+0x18]
   140005401:	call   QWORD PTR [rip+0x1b379]        # 0x140020780
   140005407:	mov    rcx,rsi
   14000540a:	call   0x14001ee46
   14000540f:	cmp    rbx,rbp
   140005412:	jne    0x1400053f0
   140005414:	mov    rcx,rdi
   140005417:	call   QWORD PTR [rip+0x1b2b3]        # 0x1400206d0
   14000541d:	mov    rbx,QWORD PTR [rsp+0x2d8]
   140005425:	test   r13b,r13b
   140005428:	je     0x140005a04
   14000542e:	mov    QWORD PTR [rsp+0x338],rbx
   140005436:	mov    eax,DWORD PTR [rbx]
   140005438:	test   eax,eax
   14000543a:	je     0x14000544e
   14000543c:	cmp    eax,0xffffffff
   14000543f:	je     0x1400054ec
   140005445:	lock add DWORD PTR [rbx],0x1
   140005449:	jmp    0x1400054e4
   14000544e:	mov    edx,DWORD PTR [rbx+0x4]
   140005451:	lea    rcx,[rsp+0x338]
   140005459:	call   QWORD PTR [rip+0x1b219]        # 0x140020678
   14000545f:	mov    rbx,QWORD PTR [rsp+0x338]
   140005467:	mov    rcx,QWORD PTR [rsp+0x2d8]
   14000546f:	movsxd rax,DWORD PTR [rbx+0xc]
   140005473:	lea    rbp,[rbx+rax*8+0x10]
   140005478:	movsxd rax,DWORD PTR [rcx+0x8]
   14000547c:	lea    rsi,[rcx+rax*8+0x10]
   140005481:	movsxd rax,DWORD PTR [rbx+0x8]
   140005485:	lea    rdi,[rbx+rax*8+0x10]
   14000548a:	cmp    rdi,rbp
   14000548d:	je     0x1400054ec
   14000548f:	nop
   140005490:	mov    ecx,0x20
   140005495:	call   0x14001ee64
   14000549a:	mov    rbx,rax
   14000549d:	test   rax,rax
   1400054a0:	je     0x1400054d2
   1400054a2:	mov    rdx,QWORD PTR [rsi]
   1400054a5:	add    rdx,0x18
   1400054a9:	mov    ecx,DWORD PTR [rdx-0x18]
   1400054ac:	mov    DWORD PTR [rax],ecx
   1400054ae:	mov    ecx,DWORD PTR [rdx-0x14]
   1400054b1:	mov    DWORD PTR [rax+0x4],ecx
   1400054b4:	mov    ecx,DWORD PTR [rdx-0x10]
   1400054b7:	mov    DWORD PTR [rax+0x8],ecx
   1400054ba:	mov    ecx,DWORD PTR [rdx-0xc]
   1400054bd:	mov    DWORD PTR [rax+0xc],ecx
   1400054c0:	mov    eax,DWORD PTR [rdx-0x8]
   1400054c3:	lea    rcx,[rbx+0x18]
   1400054c7:	mov    DWORD PTR [rbx+0x10],eax
   1400054ca:	call   QWORD PTR [rip+0x1b2c8]        # 0x140020798
   1400054d0:	jmp    0x1400054d4
   1400054d2:	xor    ebx,ebx
   1400054d4:	mov    QWORD PTR [rdi],rbx
   1400054d7:	add    rdi,0x8
   1400054db:	add    rsi,0x8
   1400054df:	cmp    rdi,rbp
   1400054e2:	jne    0x140005490
   1400054e4:	mov    rbx,QWORD PTR [rsp+0x338]
   1400054ec:	mov    QWORD PTR [rsp+0x28],rbx
   1400054f1:	mov    eax,DWORD PTR [rbx]
   1400054f3:	mov    rdx,rbx
   1400054f6:	test   eax,eax
   1400054f8:	je     0x14000550c
   1400054fa:	cmp    eax,0xffffffff
   1400054fd:	je     0x1400055b1
   140005503:	lock add DWORD PTR [rbx],0x1
   140005507:	jmp    0x1400055a4
   14000550c:	mov    edx,DWORD PTR [rbx+0x4]
   14000550f:	lea    rcx,[rsp+0x28]
   140005514:	call   QWORD PTR [rip+0x1b15e]        # 0x140020678
   14000551a:	mov    rdx,QWORD PTR [rsp+0x28]
   14000551f:	mov    rbx,QWORD PTR [rsp+0x338]
   140005527:	movsxd rax,DWORD PTR [rdx+0xc]
   14000552b:	lea    rbp,[rdx+rax*8+0x10]
   140005530:	movsxd rax,DWORD PTR [rbx+0x8]
   140005534:	lea    rsi,[rbx+rax*8+0x10]
   140005539:	movsxd rax,DWORD PTR [rdx+0x8]
   14000553d:	lea    rdi,[rdx+rax*8+0x10]
   140005542:	cmp    rdi,rbp
   140005545:	je     0x1400055b1
   140005547:	nop    WORD PTR [rax+rax*1+0x0]
   140005550:	mov    ecx,0x20
   140005555:	call   0x14001ee64
   14000555a:	mov    rbx,rax
   14000555d:	test   rax,rax
   140005560:	je     0x140005592
   140005562:	mov    rdx,QWORD PTR [rsi]
   140005565:	add    rdx,0x18
   140005569:	mov    ecx,DWORD PTR [rdx-0x18]
   14000556c:	mov    DWORD PTR [rax],ecx
   14000556e:	mov    ecx,DWORD PTR [rdx-0x14]
   140005571:	mov    DWORD PTR [rax+0x4],ecx
   140005574:	mov    ecx,DWORD PTR [rdx-0x10]
   140005577:	mov    DWORD PTR [rax+0x8],ecx
   14000557a:	mov    ecx,DWORD PTR [rdx-0xc]
   14000557d:	mov    DWORD PTR [rax+0xc],ecx
   140005580:	mov    eax,DWORD PTR [rdx-0x8]
   140005583:	lea    rcx,[rbx+0x18]
   140005587:	mov    DWORD PTR [rbx+0x10],eax
   14000558a:	call   QWORD PTR [rip+0x1b208]        # 0x140020798
   140005590:	jmp    0x140005594
   140005592:	xor    ebx,ebx
   140005594:	mov    QWORD PTR [rdi],rbx
   140005597:	add    rdi,0x8
   14000559b:	add    rsi,0x8
   14000559f:	cmp    rdi,rbp
   1400055a2:	jne    0x140005550
   1400055a4:	mov    rdx,QWORD PTR [rsp+0x28]
   1400055a9:	mov    rbx,QWORD PTR [rsp+0x338]
   1400055b1:	mov    DWORD PTR [rsp+0x30],0x0
   1400055b9:	movsxd rax,DWORD PTR [rdx+0x8]
   1400055bd:	lea    rcx,[rdx+rax*8+0x10]
   1400055c2:	mov    QWORD PTR [rsp+0x38],rcx
   1400055c7:	movsxd rax,DWORD PTR [rdx+0xc]
   1400055cb:	lea    rcx,[rdx+rax*8+0x10]
   1400055d0:	mov    QWORD PTR [rsp+0x40],rcx
   1400055d5:	mov    eax,DWORD PTR [rbx]
   1400055d7:	test   eax,eax
   1400055d9:	je     0x1400055f3
   1400055db:	cmp    eax,0xffffffff
   1400055de:	je     0x140005640
   1400055e0:	lock add DWORD PTR [rbx],0xffffffff
   1400055e4:	setne  al
   1400055e7:	test   al,al
   1400055e9:	jne    0x140005640
   1400055eb:	mov    rbx,QWORD PTR [rsp+0x338]
   1400055f3:	movsxd rax,DWORD PTR [rbx+0xc]
   1400055f7:	lea    rdi,[rbx+rax*8+0x10]
   1400055fc:	movsxd rax,DWORD PTR [rbx+0x8]
   140005600:	lea    rbp,[rbx+rax*8+0x10]
   140005605:	cmp    rbp,rdi
   140005608:	je     0x140005634
   14000560a:	nop    WORD PTR [rax+rax*1+0x0]
   140005610:	mov    rsi,QWORD PTR [rdi-0x8]
   140005614:	sub    rdi,0x8
   140005618:	test   rsi,rsi
   14000561b:	je     0x14000562f
   14000561d:	lea    rcx,[rsi+0x18]
   140005621:	call   QWORD PTR [rip+0x1b159]        # 0x140020780
   140005627:	mov    rcx,rsi
   14000562a:	call   0x14001ee46
   14000562f:	cmp    rdi,rbp
   140005632:	jne    0x140005610
   140005634:	mov    rcx,rbx
   140005637:	call   QWORD PTR [rip+0x1b093]        # 0x1400206d0
   14000563d:	nop    DWORD PTR [rax]
   140005640:	mov    eax,DWORD PTR [rsp+0x30]
   140005644:	inc    DWORD PTR [rsp+0x30]
   140005648:	test   eax,eax
   14000564a:	jne    0x14000565d
   14000564c:	mov    rax,QWORD PTR [rsp+0x40]
   140005651:	cmp    QWORD PTR [rsp+0x38],rax
   140005656:	je     0x14000565d
   140005658:	mov    r13b,0x1
   14000565b:	jmp    0x140005660
   14000565d:	xor    r13b,r13b
   140005660:	test   r12b,0x4
   140005664:	je     0x1400056ce
   140005666:	mov    rsi,QWORD PTR [rsp+0x58]
   14000566b:	and    r12d,0xfffffffb
   14000566f:	mov    eax,DWORD PTR [rsi]
   140005671:	test   eax,eax
   140005673:	je     0x14000568a
   140005675:	cmp    eax,0xffffffff
   140005678:	je     0x1400056ce
   14000567a:	lock add DWORD PTR [rsi],0xffffffff
   14000567e:	setne  al
   140005681:	test   al,al
   140005683:	jne    0x1400056ce
   140005685:	mov    rsi,QWORD PTR [rsp+0x58]
   14000568a:	movsxd rax,DWORD PTR [rsi+0xc]
   14000568e:	lea    rbx,[rsi+rax*8+0x10]
   140005693:	movsxd rax,DWORD PTR [rsi+0x8]
   140005697:	lea    rbp,[rsi+rax*8+0x10]
   14000569c:	cmp    rbp,rbx
   14000569f:	je     0x1400056c5
   1400056a1:	mov    rdi,QWORD PTR [rbx-0x8]
   1400056a5:	sub    rbx,0x8
   1400056a9:	test   rdi,rdi
   1400056ac:	je     0x1400056c0
   1400056ae:	lea    rcx,[rdi+0x18]
   1400056b2:	call   QWORD PTR [rip+0x1b0c8]        # 0x140020780
   1400056b8:	mov    rcx,rdi
   1400056bb:	call   0x14001ee46
   1400056c0:	cmp    rbx,rbp
   1400056c3:	jne    0x1400056a1
   1400056c5:	mov    rcx,rsi
   1400056c8:	call   QWORD PTR [rip+0x1b002]        # 0x1400206d0
   1400056ce:	test   r13b,r13b
   1400056d1:	je     0x14000598c
   1400056d7:	mov    rax,QWORD PTR [rsp+0x38]
   1400056dc:	mov    r15,QWORD PTR [rax]
   1400056df:	test   r12b,0x8
   1400056e3:	je     0x140005750
   1400056e5:	mov    rsi,QWORD PTR [rsp+0x50]
   1400056ea:	and    r12d,0xfffffff7
   1400056ee:	mov    eax,DWORD PTR [rsi]
   1400056f0:	test   eax,eax
   1400056f2:	je     0x140005709
   1400056f4:	cmp    eax,0xffffffff
   1400056f7:	je     0x140005750
   1400056f9:	lock add DWORD PTR [rsi],0xffffffff
   1400056fd:	setne  al
   140005700:	test   al,al
   140005702:	jne    0x140005750
   140005704:	mov    rsi,QWORD PTR [rsp+0x50]
   140005709:	movsxd rax,DWORD PTR [rsi+0xc]
   14000570d:	lea    rbx,[rsi+rax*8+0x10]
   140005712:	movsxd rax,DWORD PTR [rsi+0x8]
   140005716:	lea    rbp,[rsi+rax*8+0x10]
   14000571b:	cmp    rbp,rbx
   14000571e:	je     0x140005744
   140005720:	mov    rdi,QWORD PTR [rbx-0x8]
   140005724:	sub    rbx,0x8
   140005728:	test   rdi,rdi
   14000572b:	je     0x14000573f
   14000572d:	lea    rcx,[rdi+0x18]
   140005731:	call   QWORD PTR [rip+0x1b049]        # 0x140020780
   140005737:	mov    rcx,rdi
   14000573a:	call   0x14001ee46
   14000573f:	cmp    rbx,rbp
   140005742:	jne    0x140005720
   140005744:	mov    rcx,rsi
   140005747:	call   QWORD PTR [rip+0x1af83]        # 0x1400206d0
   14000574d:	nop    DWORD PTR [rax]
   140005750:	mov    r13d,DWORD PTR [rsp+0x30]
   140005755:	test   r12b,0x20
   140005759:	je     0x1400057cd
   14000575b:	mov    rsi,QWORD PTR [rsp+0x60]
   140005760:	and    r12d,0xffffffdf
   140005764:	mov    eax,DWORD PTR [rsi]
   140005766:	test   eax,eax
   140005768:	je     0x14000577a
   14000576a:	cmp    eax,0xffffffff
   14000576d:	je     0x1400057cd
   14000576f:	lock add DWORD PTR [rsi],0xffffffff
   140005773:	setne  al
   140005776:	test   al,al
   140005778:	jne    0x1400057cd
   14000577a:	mov    rsi,QWORD PTR [rsp+0x60]
   14000577f:	movsxd rax,DWORD PTR [rsi+0xc]
   140005783:	lea    rbx,[rsi+rax*8+0x10]
   140005788:	movsxd rax,DWORD PTR [rsi+0x8]
   14000578c:	lea    rbp,[rsi+rax*8+0x10]
   140005791:	cmp    rbp,rbx
   140005794:	je     0x1400057c4
   140005796:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400057a0:	mov    rdi,QWORD PTR [rbx-0x8]
   1400057a4:	sub    rbx,0x8
   1400057a8:	test   rdi,rdi
   1400057ab:	je     0x1400057bf
   1400057ad:	lea    rcx,[rdi+0x18]
   1400057b1:	call   QWORD PTR [rip+0x1afc9]        # 0x140020780
   1400057b7:	mov    rcx,rdi
   1400057ba:	call   0x14001ee46
   1400057bf:	cmp    rbx,rbp
   1400057c2:	jne    0x1400057a0
   1400057c4:	mov    rcx,rsi
   1400057c7:	call   QWORD PTR [rip+0x1af03]        # 0x1400206d0
   1400057cd:	test   r13d,r13d
   1400057d0:	je     0x140005909
   1400057d6:	lea    rcx,[r15+0x18]
   1400057da:	lea    rdx,[rsp+0x198]
   1400057e2:	call   QWORD PTR [rip+0x1ae10]        # 0x1400205f8
   1400057e8:	mov    rdx,QWORD PTR [rsp+0x328]
   1400057f0:	lea    rcx,[rsp+0x70]
   1400057f5:	mov    rbx,rax
   1400057f8:	call   QWORD PTR [rip+0x1aeba]        # 0x1400206b8
   1400057fe:	lea    rdx,[rsp+0x170]
   140005806:	mov    rcx,rax
   140005809:	call   QWORD PTR [rip+0x1ade9]        # 0x1400205f8
   14000580f:	mov    rcx,QWORD PTR [rip+0x1a942]        # 0x140020158
   140005816:	mov    rdx,rax
   140005819:	call   QWORD PTR [rip+0x1a931]        # 0x140020150
   14000581f:	mov    dl,0x3a
   140005821:	mov    rcx,rax
   140005824:	call   0x1400019f0
   140005829:	mov    edx,DWORD PTR [r15+0xc]
   14000582d:	mov    rcx,rax
   140005830:	call   QWORD PTR [rip+0x1a92a]        # 0x140020160
   140005836:	mov    dl,0x3a
   140005838:	mov    rcx,rax
   14000583b:	call   0x1400019f0
   140005840:	mov    rdx,rbx
   140005843:	mov    rcx,rax
   140005846:	call   QWORD PTR [rip+0x1a904]        # 0x140020150
   14000584c:	mov    rdx,QWORD PTR [rip+0x1a8f5]        # 0x140020148
   140005853:	mov    rcx,rax
   140005856:	call   QWORD PTR [rip+0x1a8e4]        # 0x140020140
   14000585c:	lea    rcx,[rsp+0x170]
   140005864:	call   QWORD PTR [rip+0x1a8ce]        # 0x140020138
   14000586a:	lea    rcx,[rsp+0x70]
   14000586f:	call   QWORD PTR [rip+0x1af0b]        # 0x140020780
   140005875:	lea    rcx,[rsp+0x198]
   14000587d:	call   QWORD PTR [rip+0x1a8b5]        # 0x140020138
   140005883:	dec    DWORD PTR [rsp+0x30]
   140005887:	test   r12b,0x10
   14000588b:	je     0x140005750
   140005891:	mov    rsi,QWORD PTR [rsp+0x68]
   140005896:	and    r12d,0xffffffef
   14000589a:	mov    eax,DWORD PTR [rsi]
   14000589c:	test   eax,eax
   14000589e:	je     0x1400058b8
   1400058a0:	cmp    eax,0xffffffff
   1400058a3:	je     0x140005750
   1400058a9:	lock add DWORD PTR [rsi],0xffffffff
   1400058ad:	setne  al
   1400058b0:	test   al,al
   1400058b2:	jne    0x140005750
   1400058b8:	mov    rsi,QWORD PTR [rsp+0x68]
   1400058bd:	movsxd rax,DWORD PTR [rsi+0xc]
   1400058c1:	lea    rbx,[rsi+rax*8+0x10]
   1400058c6:	movsxd rax,DWORD PTR [rsi+0x8]
   1400058ca:	lea    rbp,[rsi+rax*8+0x10]
   1400058cf:	cmp    rbp,rbx
   1400058d2:	je     0x140005744
   1400058d8:	nop    DWORD PTR [rax+rax*1+0x0]
   1400058e0:	mov    rdi,QWORD PTR [rbx-0x8]
   1400058e4:	sub    rbx,0x8
   1400058e8:	test   rdi,rdi
   1400058eb:	je     0x1400058ff
   1400058ed:	lea    rcx,[rdi+0x18]
   1400058f1:	call   QWORD PTR [rip+0x1ae89]        # 0x140020780
   1400058f7:	mov    rcx,rdi
   1400058fa:	call   0x14001ee46
   1400058ff:	cmp    rbx,rbp
   140005902:	jne    0x1400058e0
   140005904:	jmp    0x140005744
   140005909:	add    QWORD PTR [rsp+0x38],0x8
   14000590f:	test   r12b,0x2
   140005913:	je     0x140005640
   140005919:	mov    rsi,QWORD PTR [rsp+0x48]
   14000591e:	and    r12d,0xfffffffd
   140005922:	mov    eax,DWORD PTR [rsi]
   140005924:	test   eax,eax
   140005926:	je     0x140005945
   140005928:	cmp    eax,0xffffffff
   14000592b:	je     0x140005640
   140005931:	lock add DWORD PTR [rsi],0xffffffff
   140005935:	setne  al
   140005938:	test   al,al
   14000593a:	jne    0x140005640
   140005940:	mov    rsi,QWORD PTR [rsp+0x48]
   140005945:	movsxd rax,DWORD PTR [rsi+0xc]
   140005949:	lea    rbx,[rsi+rax*8+0x10]
   14000594e:	movsxd rax,DWORD PTR [rsi+0x8]
   140005952:	lea    rbp,[rsi+rax*8+0x10]
   140005957:	cmp    rbp,rbx
   14000595a:	je     0x140005984
   14000595c:	nop    DWORD PTR [rax+0x0]
   140005960:	mov    rdi,QWORD PTR [rbx-0x8]
   140005964:	sub    rbx,0x8
   140005968:	test   rdi,rdi
   14000596b:	je     0x14000597f
   14000596d:	lea    rcx,[rdi+0x18]
   140005971:	call   QWORD PTR [rip+0x1ae09]        # 0x140020780
   140005977:	mov    rcx,rdi
   14000597a:	call   0x14001ee46
   14000597f:	cmp    rbx,rbp
   140005982:	jne    0x140005960
   140005984:	mov    rcx,rsi
   140005987:	jmp    0x140005637
   14000598c:	mov    rsi,QWORD PTR [rsp+0x28]
   140005991:	mov    eax,DWORD PTR [rsi]
   140005993:	test   eax,eax
   140005995:	je     0x1400059ac
   140005997:	cmp    eax,0xffffffff
   14000599a:	je     0x1400059f0
   14000599c:	lock add DWORD PTR [rsi],0xffffffff
   1400059a0:	setne  al
   1400059a3:	test   al,al
   1400059a5:	jne    0x1400059f0
   1400059a7:	mov    rsi,QWORD PTR [rsp+0x28]
   1400059ac:	movsxd rax,DWORD PTR [rsi+0xc]
   1400059b0:	lea    rbx,[rsi+rax*8+0x10]
   1400059b5:	movsxd rax,DWORD PTR [rsi+0x8]
   1400059b9:	lea    rbp,[rsi+rax*8+0x10]
   1400059be:	cmp    rbp,rbx
   1400059c1:	je     0x1400059e7
   1400059c3:	mov    rdi,QWORD PTR [rbx-0x8]
   1400059c7:	sub    rbx,0x8
   1400059cb:	test   rdi,rdi
   1400059ce:	je     0x1400059e2
   1400059d0:	lea    rcx,[rdi+0x18]
   1400059d4:	call   QWORD PTR [rip+0x1ada6]        # 0x140020780
   1400059da:	mov    rcx,rdi
   1400059dd:	call   0x14001ee46
   1400059e2:	cmp    rbx,rbp
   1400059e5:	jne    0x1400059c3
   1400059e7:	mov    rcx,rsi
   1400059ea:	call   QWORD PTR [rip+0x1ace0]        # 0x1400206d0
   1400059f0:	mov    rbx,QWORD PTR [rsp+0x320]
   1400059f8:	mov    rax,QWORD PTR [rip+0x1ad61]        # 0x140020760
   1400059ff:	mov    QWORD PTR [rbx],rax
   140005a02:	jmp    0x140005a38
   140005a04:	mov    rdx,QWORD PTR [rsp+0x1f8]
   140005a0c:	test   rdx,rdx
   140005a0f:	je     0x140005a17
   140005a11:	cmp    DWORD PTR [rdx+0x8],0x57
   140005a15:	je     0x140005a19
   140005a17:	xor    edx,edx
   140005a19:	mov    rbx,QWORD PTR [rsp+0x320]
   140005a21:	mov    r9,QWORD PTR [rsp+0x328]
   140005a29:	mov    rdx,QWORD PTR [rdx+0x10]
   140005a2d:	mov    rcx,rbx
   140005a30:	mov    r8,r15
   140005a33:	call   0x140004200
   140005a38:	lea    rcx,[rsp+0x1c0]
   140005a40:	call   0x14000f270
   140005a45:	lea    rcx,[rsp+0xe8]
   140005a4d:	call   QWORD PTR [rip+0x1ad2d]        # 0x140020780
   140005a53:	lea    rcx,[rsp+0xe0]
   140005a5b:	call   QWORD PTR [rip+0x1ad1f]        # 0x140020780
   140005a61:	lea    rcx,[rsp+0xd8]
   140005a69:	call   QWORD PTR [rip+0x1ad11]        # 0x140020780
   140005a6f:	lea    rcx,[rsp+0x80]
   140005a77:	call   0x140016e10
   140005a7c:	mov    rax,rbx
   140005a7f:	mov    rbx,QWORD PTR [rsp+0x330]
   140005a87:	add    rsp,0x2e0
   140005a8e:	pop    r15
   140005a90:	pop    r14
   140005a92:	pop    r13
   140005a94:	pop    r12
   140005a96:	pop    rdi
   140005a97:	pop    rsi
   140005a98:	pop    rbp
   140005a99:	ret    
   140005a9a:	int3   
   140005a9b:	int3   
   140005a9c:	int3   
   140005a9d:	int3   
   140005a9e:	int3   
   140005a9f:	int3   
   140005aa0:	mov    QWORD PTR [rsp+0x10],rbx
   140005aa5:	push   rsi
   140005aa6:	sub    rsp,0x90
   140005aad:	mov    rsi,rcx
   140005ab0:	lea    rcx,[rsp+0x20]
   140005ab5:	mov    rbx,rdx
   140005ab8:	call   QWORD PTR [rip+0x1ab22]        # 0x1400205e0
   140005abe:	lea    rcx,[rsp+0x20]
   140005ac3:	mov    edx,0x1
   140005ac8:	call   QWORD PTR [rip+0x1ab1a]        # 0x1400205e8
   140005ace:	test   al,al
   140005ad0:	jne    0x140005bcf
   140005ad6:	lea    rdx,[rsp+0x38]
   140005adb:	lea    rcx,[rsp+0x20]
   140005ae0:	mov    QWORD PTR [rsp+0xa0],rdi
   140005ae8:	call   QWORD PTR [rip+0x1ab02]        # 0x1400205f0
   140005aee:	lea    rdx,[rsp+0x68]
   140005af3:	mov    rcx,rax
   140005af6:	call   QWORD PTR [rip+0x1aafc]        # 0x1400205f8
   140005afc:	lea    rdx,[rsp+0x30]
   140005b01:	lea    rcx,[rsp+0x20]
   140005b06:	mov    rdi,rax
   140005b09:	call   QWORD PTR [rip+0x1aaf1]        # 0x140020600
   140005b0f:	lea    rcx,[rsp+0xb8]
   140005b17:	mov    rdx,rax
   140005b1a:	call   QWORD PTR [rip+0x1ab98]        # 0x1400206b8
   140005b20:	lea    rdx,[rsp+0x40]
   140005b25:	mov    rcx,rax
   140005b28:	call   QWORD PTR [rip+0x1aaca]        # 0x1400205f8
   140005b2e:	mov    rcx,QWORD PTR [rip+0x1a623]        # 0x140020158
   140005b35:	lea    rdx,[rip+0x1aeec]        # 0x140020a28
   140005b3c:	mov    rbx,rax
   140005b3f:	call   0x140001800
   140005b44:	mov    rdx,rbx
   140005b47:	mov    rcx,rax
   140005b4a:	call   QWORD PTR [rip+0x1a600]        # 0x140020150
   140005b50:	mov    dl,0x3a
   140005b52:	mov    rcx,rax
   140005b55:	call   0x1400019f0
   140005b5a:	mov    rdx,rdi
   140005b5d:	mov    rcx,rax
   140005b60:	call   QWORD PTR [rip+0x1a5ea]        # 0x140020150
   140005b66:	mov    rdx,QWORD PTR [rip+0x1a5db]        # 0x140020148
   140005b6d:	mov    rcx,rax
   140005b70:	call   QWORD PTR [rip+0x1a5ca]        # 0x140020140
   140005b76:	lea    rcx,[rsp+0x40]
   140005b7b:	call   QWORD PTR [rip+0x1a5b7]        # 0x140020138
   140005b81:	lea    rcx,[rsp+0xb8]
   140005b89:	call   QWORD PTR [rip+0x1abf1]        # 0x140020780
   140005b8f:	lea    rcx,[rsp+0x30]
   140005b94:	call   QWORD PTR [rip+0x1abe6]        # 0x140020780
   140005b9a:	lea    rcx,[rsp+0x68]
   140005b9f:	call   QWORD PTR [rip+0x1a593]        # 0x140020138
   140005ba5:	lea    rcx,[rsp+0x38]
   140005baa:	call   QWORD PTR [rip+0x1abd0]        # 0x140020780
   140005bb0:	mov    r11,QWORD PTR [rip+0x1aba9]        # 0x140020760
   140005bb7:	lea    rcx,[rsp+0x20]
   140005bbc:	mov    QWORD PTR [rsi],r11
   140005bbf:	call   QWORD PTR [rip+0x1aa43]        # 0x140020608
   140005bc5:	mov    rdi,QWORD PTR [rsp+0xa0]
   140005bcd:	jmp    0x140005c2d
   140005bcf:	lea    rdx,[rsp+0xb8]
   140005bd7:	lea    rcx,[rsp+0x20]
   140005bdc:	call   QWORD PTR [rip+0x1aa2e]        # 0x140020610
   140005be2:	lea    rcx,[rsp+0xb0]
   140005bea:	mov    rdx,rax
   140005bed:	call   QWORD PTR [rip+0x1aa25]        # 0x140020618
   140005bf3:	lea    rcx,[rsp+0xb8]
   140005bfb:	call   QWORD PTR [rip+0x1aaf7]        # 0x1400206f8
   140005c01:	lea    r8,[rsp+0xb0]
   140005c09:	mov    rdx,rbx
   140005c0c:	mov    rcx,rsi
   140005c0f:	call   0x140005230
   140005c14:	lea    rcx,[rsp+0xb0]
   140005c1c:	call   QWORD PTR [rip+0x1ab5e]        # 0x140020780
   140005c22:	lea    rcx,[rsp+0x20]
   140005c27:	call   QWORD PTR [rip+0x1a9db]        # 0x140020608
   140005c2d:	mov    rax,rsi
   140005c30:	mov    rbx,QWORD PTR [rsp+0xa8]
   140005c38:	add    rsp,0x90
   140005c3f:	pop    rsi
   140005c40:	ret    
   140005c41:	int3   
   140005c42:	int3   
   140005c43:	int3   
   140005c44:	int3   
   140005c45:	int3   
   140005c46:	int3   
   140005c47:	int3   
   140005c48:	int3   
   140005c49:	int3   
   140005c4a:	int3   
   140005c4b:	int3   
   140005c4c:	int3   
   140005c4d:	int3   
   140005c4e:	int3   
   140005c4f:	int3   
   140005c50:	mov    rax,rsp
   140005c53:	mov    QWORD PTR [rax+0x8],rcx
   140005c57:	push   r14
   140005c59:	sub    rsp,0x110
   140005c60:	mov    QWORD PTR [rax-0x10],rdi
   140005c64:	mov    QWORD PTR [rax-0x20],r13
   140005c68:	mov    QWORD PTR [rax-0x28],r15
   140005c6c:	mov    rax,QWORD PTR [rip+0x1aae5]        # 0x140020758
   140005c73:	mov    r15,rdx
   140005c76:	lea    rcx,[rsp+0x68]
   140005c7b:	lea    rdx,[rip+0x1adee]        # 0x140020a70
   140005c82:	mov    r8d,0xa
   140005c88:	mov    QWORD PTR [rsp+0x30],rax
   140005c8d:	call   QWORD PTR [rip+0x1a8ed]        # 0x140020580
   140005c93:	lea    rcx,[rsp+0x90]
   140005c9b:	mov    rdx,rax
   140005c9e:	call   QWORD PTR [rip+0x1a8d4]        # 0x140020578
   140005ca4:	lea    rdx,[rip+0x1adb9]        # 0x140020a64
   140005cab:	xor    eax,eax
   140005cad:	mov    rdi,rdx
   140005cb0:	mov    QWORD PTR [rsp+0x58],rdx
   140005cb5:	or     r14,0xffffffffffffffff
   140005cb9:	mov    rcx,r14
   140005cbc:	lea    rdx,[rsp+0xb0]
   140005cc4:	repnz scas al,BYTE PTR es:[rdi]
   140005cc6:	not    rcx
   140005cc9:	dec    rcx
   140005ccc:	mov    DWORD PTR [rsp+0x50],ecx
   140005cd0:	lea    rcx,[rsp+0x38]
   140005cd5:	movaps xmm0,XMMWORD PTR [rsp+0x50]
   140005cda:	movdqa XMMWORD PTR [rsp+0xb0],xmm0
   140005ce3:	call   QWORD PTR [rip+0x1a84f]        # 0x140020538
   140005ce9:	mov    rdx,QWORD PTR [rsp+0x30]
   140005cee:	mov    eax,DWORD PTR [rdx]
   140005cf0:	cmp    eax,0x1
   140005cf3:	je     0x140005d68
   140005cf5:	test   eax,eax
   140005cf7:	je     0x140005d68
   140005cf9:	call   QWORD PTR [rip+0x1aa31]        # 0x140020730
   140005cff:	mov    rcx,QWORD PTR [rsp+0x30]
   140005d04:	mov    rdi,rax
   140005d07:	mov    rax,QWORD PTR [rcx+0x10]
   140005d0b:	test   rax,rax
   140005d0e:	je     0x140005d2f
   140005d10:	mov    rdx,rdi
   140005d13:	mov    rcx,rax
   140005d16:	call   0x140001210
   140005d1b:	lea    rcx,[rdi+0x8]
   140005d1f:	mov    QWORD PTR [rdi+0x10],rax
   140005d23:	and    QWORD PTR [rax],0x3
   140005d27:	or     QWORD PTR [rax],rcx
   140005d2a:	mov    rcx,QWORD PTR [rsp+0x30]
   140005d2f:	mov    eax,DWORD PTR [rcx]
   140005d31:	test   eax,eax
   140005d33:	je     0x140005d50
   140005d35:	cmp    eax,0xffffffff
   140005d38:	je     0x140005d55
   140005d3a:	mov    eax,r14d
   140005d3d:	lock xadd DWORD PTR [rcx],eax
   140005d41:	add    eax,0xffffffff
   140005d44:	setne  al
   140005d47:	test   al,al
   140005d49:	jne    0x140005d55
   140005d4b:	mov    rcx,QWORD PTR [rsp+0x30]
   140005d50:	call   0x1400022f0
   140005d55:	mov    rcx,rdi
   140005d58:	mov    QWORD PTR [rsp+0x30],rdi
   140005d5d:	call   QWORD PTR [rip+0x1a90d]        # 0x140020670
   140005d63:	mov    rdx,QWORD PTR [rsp+0x30]
   140005d68:	mov    rdi,QWORD PTR [rdx+0x10]
   140005d6c:	mov    QWORD PTR [rsp+0x128],rbx
   140005d74:	mov    QWORD PTR [rsp+0x130],rbp
   140005d7c:	xor    r13d,r13d
   140005d7f:	mov    QWORD PTR [rsp+0x138],rsi
   140005d87:	mov    QWORD PTR [rsp+0x100],r12
   140005d8f:	test   rdi,rdi
   140005d92:	je     0x140005de6
   140005d94:	mov    rbx,r13
   140005d97:	nop    WORD PTR [rax+rax*1+0x0]
   140005da0:	lea    rcx,[rdi+0x18]
   140005da4:	lea    rdx,[rsp+0x38]
   140005da9:	call   QWORD PTR [rip+0x1a961]        # 0x140020710
   140005daf:	test   al,al
   140005db1:	jne    0x140005dbc
   140005db3:	mov    rbx,rdi
   140005db6:	mov    rdi,QWORD PTR [rdi+0x8]
   140005dba:	jmp    0x140005dc0
   140005dbc:	mov    rdi,QWORD PTR [rdi+0x10]
   140005dc0:	test   rdi,rdi
   140005dc3:	jne    0x140005da0
   140005dc5:	test   rbx,rbx
   140005dc8:	je     0x140005de6
   140005dca:	lea    rdx,[rbx+0x18]
   140005dce:	lea    rcx,[rsp+0x38]
   140005dd3:	call   QWORD PTR [rip+0x1a937]        # 0x140020710
   140005dd9:	test   al,al
   140005ddb:	jne    0x140005de6
   140005ddd:	lea    rcx,[rbx+0x20]
   140005de1:	jmp    0x140005f46
   140005de6:	lea    rcx,[rsp+0xd0]
   140005dee:	call   QWORD PTR [rip+0x1a7e4]        # 0x1400205d8
   140005df4:	mov    rcx,QWORD PTR [rsp+0x30]
   140005df9:	mov    edx,DWORD PTR [rcx]
   140005dfb:	mov    r12,rax
   140005dfe:	cmp    edx,0x1
   140005e01:	je     0x140005e76
   140005e03:	test   edx,edx
   140005e05:	je     0x140005e76
   140005e07:	call   QWORD PTR [rip+0x1a923]        # 0x140020730
   140005e0d:	mov    rcx,QWORD PTR [rsp+0x30]
   140005e12:	mov    r8,QWORD PTR [rcx+0x10]
   140005e16:	mov    rdi,rax
   140005e19:	test   r8,r8
   140005e1c:	je     0x140005e3d
   140005e1e:	mov    rdx,rax
   140005e21:	mov    rcx,r8
   140005e24:	call   0x140001210
   140005e29:	lea    rcx,[rdi+0x8]
   140005e2d:	mov    QWORD PTR [rdi+0x10],rax
   140005e31:	and    QWORD PTR [rax],0x3
   140005e35:	or     QWORD PTR [rax],rcx
   140005e38:	mov    rcx,QWORD PTR [rsp+0x30]
   140005e3d:	mov    eax,DWORD PTR [rcx]
   140005e3f:	test   eax,eax
   140005e41:	je     0x140005e5e
   140005e43:	cmp    eax,0xffffffff
   140005e46:	je     0x140005e63
   140005e48:	mov    eax,r14d
   140005e4b:	lock xadd DWORD PTR [rcx],eax
   140005e4f:	add    eax,0xffffffff
   140005e52:	setne  al
   140005e55:	test   al,al
   140005e57:	jne    0x140005e63
   140005e59:	mov    rcx,QWORD PTR [rsp+0x30]
   140005e5e:	call   0x1400022f0
   140005e63:	mov    rcx,rdi
   140005e66:	mov    QWORD PTR [rsp+0x30],rdi
   140005e6b:	call   QWORD PTR [rip+0x1a7ff]        # 0x140020670
   140005e71:	mov    rcx,QWORD PTR [rsp+0x30]
   140005e76:	mov    rbx,QWORD PTR [rcx+0x10]
   140005e7a:	lea    rbp,[rcx+0x8]
   140005e7e:	mov    rdi,r13
   140005e81:	mov    sil,0x1
   140005e84:	test   rbx,rbx
   140005e87:	je     0x140005eef
   140005e89:	nop    DWORD PTR [rax+0x0]
   140005e90:	lea    rcx,[rbx+0x18]
   140005e94:	lea    rdx,[rsp+0x38]
   140005e99:	mov    rbp,rbx
   140005e9c:	call   QWORD PTR [rip+0x1a86e]        # 0x140020710
   140005ea2:	test   al,al
   140005ea4:	jne    0x140005eb2
   140005ea6:	mov    rdi,rbx
   140005ea9:	mov    rbx,QWORD PTR [rbx+0x8]
   140005ead:	mov    sil,0x1
   140005eb0:	jmp    0x140005eb9
   140005eb2:	mov    rbx,QWORD PTR [rbx+0x10]
   140005eb6:	xor    sil,sil
   140005eb9:	test   rbx,rbx
   140005ebc:	jne    0x140005e90
   140005ebe:	test   rdi,rdi
   140005ec1:	je     0x140005eea
   140005ec3:	lea    rdx,[rdi+0x18]
   140005ec7:	lea    rcx,[rsp+0x38]
   140005ecc:	call   QWORD PTR [rip+0x1a83e]        # 0x140020710
   140005ed2:	test   al,al
   140005ed4:	jne    0x140005eea
   140005ed6:	lea    rcx,[rdi+0x20]
   140005eda:	mov    rdx,r12
   140005edd:	call   QWORD PTR [rip+0x1a745]        # 0x140020628
   140005ee3:	mov    QWORD PTR [rsp+0x70],rdi
   140005ee8:	jmp    0x140005f34
   140005eea:	mov    rcx,QWORD PTR [rsp+0x30]
   140005eef:	mov    edx,0x30
   140005ef4:	mov    r9,rbp
   140005ef7:	mov    BYTE PTR [rsp+0x20],sil
   140005efc:	lea    r8d,[rdx-0x28]
   140005f00:	call   QWORD PTR [rip+0x1a822]        # 0x140020728
   140005f06:	mov    rdi,rax
   140005f09:	lea    rcx,[rax+0x18]
   140005f0d:	test   rcx,rcx
   140005f10:	je     0x140005f1d
   140005f12:	lea    rdx,[rsp+0x38]
   140005f17:	call   QWORD PTR [rip+0x1a87b]        # 0x140020798
   140005f1d:	lea    rcx,[rdi+0x20]
   140005f21:	test   rcx,rcx
   140005f24:	je     0x140005f2f
   140005f26:	mov    rdx,r12
   140005f29:	call   QWORD PTR [rip+0x1a809]        # 0x140020738
   140005f2f:	mov    QWORD PTR [rsp+0x70],rdi
   140005f34:	lea    rcx,[rsp+0xd0]
   140005f3c:	call   QWORD PTR [rip+0x1a806]        # 0x140020748
   140005f42:	lea    rcx,[rdi+0x20]
   140005f46:	lea    rdx,[rsp+0x90]
   140005f4e:	call   QWORD PTR [rip+0x1a6d4]        # 0x140020628
   140005f54:	lea    rcx,[rsp+0x38]
   140005f59:	call   QWORD PTR [rip+0x1a821]        # 0x140020780
   140005f5f:	lea    rcx,[rsp+0x90]
   140005f67:	call   QWORD PTR [rip+0x1a7db]        # 0x140020748
   140005f6d:	lea    rcx,[rsp+0x68]
   140005f72:	call   QWORD PTR [rip+0x1a808]        # 0x140020780
   140005f78:	lea    rcx,[rsp+0xa0]
   140005f80:	mov    rdx,r15
   140005f83:	call   QWORD PTR [rip+0x1a5ef]        # 0x140020578
   140005f89:	lea    rdx,[rip+0x1aac0]        # 0x140020a50
   140005f90:	xor    eax,eax
   140005f92:	mov    rdi,rdx
   140005f95:	mov    QWORD PTR [rsp+0x88],rdx
   140005f9d:	mov    rcx,r14
   140005fa0:	repnz scas al,BYTE PTR es:[rdi]
   140005fa2:	lea    rdx,[rsp+0xc0]
   140005faa:	not    rcx
   140005fad:	dec    rcx
   140005fb0:	mov    DWORD PTR [rsp+0x80],ecx
   140005fb7:	lea    rcx,[rsp+0x40]
   140005fbc:	movaps xmm0,XMMWORD PTR [rsp+0x80]
   140005fc4:	movdqa XMMWORD PTR [rsp+0xc0],xmm0
   140005fcd:	call   QWORD PTR [rip+0x1a565]        # 0x140020538
   140005fd3:	mov    rdx,QWORD PTR [rsp+0x30]
   140005fd8:	mov    eax,DWORD PTR [rdx]
   140005fda:	mov    r15,QWORD PTR [rsp+0xf0]
   140005fe2:	cmp    eax,0x1
   140005fe5:	je     0x14000605a
   140005fe7:	test   eax,eax
   140005fe9:	je     0x14000605a
   140005feb:	call   QWORD PTR [rip+0x1a73f]        # 0x140020730
   140005ff1:	mov    rcx,QWORD PTR [rsp+0x30]
   140005ff6:	mov    rdi,rax
   140005ff9:	mov    rax,QWORD PTR [rcx+0x10]
   140005ffd:	test   rax,rax
   140006000:	je     0x140006021
   140006002:	mov    rdx,rdi
   140006005:	mov    rcx,rax
   140006008:	call   0x140001210
   14000600d:	lea    rcx,[rdi+0x8]
   140006011:	mov    QWORD PTR [rdi+0x10],rax
   140006015:	and    QWORD PTR [rax],0x3
   140006019:	or     QWORD PTR [rax],rcx
   14000601c:	mov    rcx,QWORD PTR [rsp+0x30]
   140006021:	mov    eax,DWORD PTR [rcx]
   140006023:	test   eax,eax
   140006025:	je     0x140006042
   140006027:	cmp    eax,0xffffffff
   14000602a:	je     0x140006047
   14000602c:	mov    eax,r14d
   14000602f:	lock xadd DWORD PTR [rcx],eax
   140006033:	add    eax,0xffffffff
   140006036:	setne  al
   140006039:	test   al,al
   14000603b:	jne    0x140006047
   14000603d:	mov    rcx,QWORD PTR [rsp+0x30]
   140006042:	call   0x1400022f0
   140006047:	mov    rcx,rdi
   14000604a:	mov    QWORD PTR [rsp+0x30],rdi
   14000604f:	call   QWORD PTR [rip+0x1a61b]        # 0x140020670
   140006055:	mov    rdx,QWORD PTR [rsp+0x30]
   14000605a:	mov    rdi,QWORD PTR [rdx+0x10]
   14000605e:	test   rdi,rdi
   140006061:	je     0x1400060b6
   140006063:	mov    rbx,r13
   140006066:	data16 nop WORD PTR [rax+rax*1+0x0]
   140006070:	lea    rcx,[rdi+0x18]
   140006074:	lea    rdx,[rsp+0x40]
   140006079:	call   QWORD PTR [rip+0x1a691]        # 0x140020710
   14000607f:	test   al,al
   140006081:	jne    0x14000608c
   140006083:	mov    rbx,rdi
   140006086:	mov    rdi,QWORD PTR [rdi+0x8]
   14000608a:	jmp    0x140006090
   14000608c:	mov    rdi,QWORD PTR [rdi+0x10]
   140006090:	test   rdi,rdi
   140006093:	jne    0x140006070
   140006095:	test   rbx,rbx
   140006098:	je     0x1400060b6
   14000609a:	lea    rdx,[rbx+0x18]
   14000609e:	lea    rcx,[rsp+0x40]
   1400060a3:	call   QWORD PTR [rip+0x1a667]        # 0x140020710
   1400060a9:	test   al,al
   1400060ab:	jne    0x1400060b6
   1400060ad:	lea    rcx,[rbx+0x20]
   1400060b1:	jmp    0x140006216
   1400060b6:	lea    rcx,[rsp+0xe0]
   1400060be:	call   QWORD PTR [rip+0x1a514]        # 0x1400205d8
   1400060c4:	mov    rcx,QWORD PTR [rsp+0x30]
   1400060c9:	mov    edx,DWORD PTR [rcx]
   1400060cb:	mov    r12,rax
   1400060ce:	cmp    edx,0x1
   1400060d1:	je     0x140006146
   1400060d3:	test   edx,edx
   1400060d5:	je     0x140006146
   1400060d7:	call   QWORD PTR [rip+0x1a653]        # 0x140020730
   1400060dd:	mov    rcx,QWORD PTR [rsp+0x30]
   1400060e2:	mov    r8,QWORD PTR [rcx+0x10]
   1400060e6:	mov    rdi,rax
   1400060e9:	test   r8,r8
   1400060ec:	je     0x14000610d
   1400060ee:	mov    rdx,rax
   1400060f1:	mov    rcx,r8
   1400060f4:	call   0x140001210
   1400060f9:	lea    rcx,[rdi+0x8]
   1400060fd:	mov    QWORD PTR [rdi+0x10],rax
   140006101:	and    QWORD PTR [rax],0x3
   140006105:	or     QWORD PTR [rax],rcx
   140006108:	mov    rcx,QWORD PTR [rsp+0x30]
   14000610d:	mov    eax,DWORD PTR [rcx]
   14000610f:	test   eax,eax
   140006111:	je     0x14000612e
   140006113:	cmp    eax,0xffffffff
   140006116:	je     0x140006133
   140006118:	mov    eax,r14d
   14000611b:	lock xadd DWORD PTR [rcx],eax
   14000611f:	add    eax,0xffffffff
   140006122:	setne  al
   140006125:	test   al,al
   140006127:	jne    0x140006133
   140006129:	mov    rcx,QWORD PTR [rsp+0x30]
   14000612e:	call   0x1400022f0
   140006133:	mov    rcx,rdi
   140006136:	mov    QWORD PTR [rsp+0x30],rdi
   14000613b:	call   QWORD PTR [rip+0x1a52f]        # 0x140020670
   140006141:	mov    rcx,QWORD PTR [rsp+0x30]
   140006146:	mov    rbx,QWORD PTR [rcx+0x10]
   14000614a:	lea    rbp,[rcx+0x8]
   14000614e:	mov    rdi,r13
   140006151:	mov    sil,0x1
   140006154:	test   rbx,rbx
   140006157:	je     0x1400061bf
   140006159:	nop    DWORD PTR [rax+0x0]
   140006160:	lea    rcx,[rbx+0x18]
   140006164:	lea    rdx,[rsp+0x40]
   140006169:	mov    rbp,rbx
   14000616c:	call   QWORD PTR [rip+0x1a59e]        # 0x140020710
   140006172:	test   al,al
   140006174:	jne    0x140006182
   140006176:	mov    rdi,rbx
   140006179:	mov    rbx,QWORD PTR [rbx+0x8]
   14000617d:	mov    sil,0x1
   140006180:	jmp    0x140006189
   140006182:	mov    rbx,QWORD PTR [rbx+0x10]
   140006186:	xor    sil,sil
   140006189:	test   rbx,rbx
   14000618c:	jne    0x140006160
   14000618e:	test   rdi,rdi
   140006191:	je     0x1400061ba
   140006193:	lea    rdx,[rdi+0x18]
   140006197:	lea    rcx,[rsp+0x40]
   14000619c:	call   QWORD PTR [rip+0x1a56e]        # 0x140020710
   1400061a2:	test   al,al
   1400061a4:	jne    0x1400061ba
   1400061a6:	lea    rcx,[rdi+0x20]
   1400061aa:	mov    rdx,r12
   1400061ad:	call   QWORD PTR [rip+0x1a475]        # 0x140020628
   1400061b3:	mov    QWORD PTR [rsp+0x60],rdi
   1400061b8:	jmp    0x140006204
   1400061ba:	mov    rcx,QWORD PTR [rsp+0x30]
   1400061bf:	mov    edx,0x30
   1400061c4:	mov    r9,rbp
   1400061c7:	mov    BYTE PTR [rsp+0x20],sil
   1400061cc:	lea    r8d,[rdx-0x28]
   1400061d0:	call   QWORD PTR [rip+0x1a552]        # 0x140020728
   1400061d6:	mov    rdi,rax
   1400061d9:	lea    rcx,[rax+0x18]
   1400061dd:	test   rcx,rcx
   1400061e0:	je     0x1400061ed
   1400061e2:	lea    rdx,[rsp+0x40]
   1400061e7:	call   QWORD PTR [rip+0x1a5ab]        # 0x140020798
   1400061ed:	lea    rcx,[rdi+0x20]
   1400061f1:	test   rcx,rcx
   1400061f4:	je     0x1400061ff
   1400061f6:	mov    rdx,r12
   1400061f9:	call   QWORD PTR [rip+0x1a539]        # 0x140020738
   1400061ff:	mov    QWORD PTR [rsp+0x60],rdi
   140006204:	lea    rcx,[rsp+0xe0]
   14000620c:	call   QWORD PTR [rip+0x1a536]        # 0x140020748
   140006212:	lea    rcx,[rdi+0x20]
   140006216:	lea    rdx,[rsp+0xa0]
   14000621e:	call   QWORD PTR [rip+0x1a404]        # 0x140020628
   140006224:	lea    rcx,[rsp+0x40]
   140006229:	call   QWORD PTR [rip+0x1a551]        # 0x140020780
   14000622f:	lea    rcx,[rsp+0xa0]
   140006237:	call   QWORD PTR [rip+0x1a50b]        # 0x140020748
   14000623d:	lea    rdx,[rsp+0x30]
   140006242:	lea    rcx,[rsp+0x50]
   140006247:	call   QWORD PTR [rip+0x1a373]        # 0x1400205c0
   14000624d:	mov    rcx,QWORD PTR [rsp+0x120]
   140006255:	mov    r12,QWORD PTR [rsp+0x100]
   14000625d:	mov    rax,QWORD PTR [rcx+0x8]
   140006261:	mov    rsi,QWORD PTR [rsp+0x138]
   140006269:	mov    rbp,QWORD PTR [rsp+0x130]
   140006271:	mov    edx,DWORD PTR [rax]
   140006273:	mov    rbx,QWORD PTR [rsp+0x128]
   14000627b:	add    rcx,0x8
   14000627f:	cmp    edx,0x1
   140006282:	je     0x1400062c0
   140006284:	test   edx,edx
   140006286:	je     0x1400062c0
   140006288:	mov    edx,0x7fffffff
   14000628d:	mov    r8d,0x1
   140006293:	call   0x1400029a0
   140006298:	mov    ecx,0x10
   14000629d:	mov    rdi,rax
   1400062a0:	call   0x14001ee64
   1400062a5:	test   rax,rax
   1400062a8:	je     0x1400062bb
   1400062aa:	lea    rdx,[rsp+0x50]
   1400062af:	mov    rcx,rax
   1400062b2:	call   QWORD PTR [rip+0x1a480]        # 0x140020738
   1400062b8:	mov    r13,rax
   1400062bb:	mov    QWORD PTR [rdi],r13
   1400062be:	jmp    0x1400062ec
   1400062c0:	call   QWORD PTR [rip+0x1a372]        # 0x140020638
   1400062c6:	mov    ecx,0x10
   1400062cb:	mov    rdi,rax
   1400062ce:	call   0x14001ee64
   1400062d3:	test   rax,rax
   1400062d6:	je     0x1400062e9
   1400062d8:	lea    rdx,[rsp+0x50]
   1400062dd:	mov    rcx,rax
   1400062e0:	call   QWORD PTR [rip+0x1a452]        # 0x140020738
   1400062e6:	mov    r13,rax
   1400062e9:	mov    QWORD PTR [rdi],r13
   1400062ec:	lea    rcx,[rsp+0x50]
   1400062f1:	call   QWORD PTR [rip+0x1a451]        # 0x140020748
   1400062f7:	mov    rcx,QWORD PTR [rsp+0x30]
   1400062fc:	mov    r13,QWORD PTR [rsp+0xf8]
   140006304:	mov    eax,DWORD PTR [rcx]
   140006306:	mov    rdi,QWORD PTR [rsp+0x108]
   14000630e:	test   eax,eax
   140006310:	je     0x14000632c
   140006312:	cmp    eax,0xffffffff
   140006315:	je     0x140006331
   140006317:	lock xadd DWORD PTR [rcx],r14d
   14000631c:	add    r14d,0xffffffff
   140006320:	setne  al
   140006323:	test   al,al
   140006325:	jne    0x140006331
   140006327:	mov    rcx,QWORD PTR [rsp+0x30]
   14000632c:	call   0x1400022f0
   140006331:	add    rsp,0x110
   140006338:	pop    r14
   14000633a:	ret    
   14000633b:	int3   
   14000633c:	int3   
   14000633d:	int3   
   14000633e:	int3   
   14000633f:	int3   
   140006340:	mov    rax,rsp
   140006343:	mov    QWORD PTR [rax+0x18],r8
   140006347:	mov    QWORD PTR [rax+0x8],rcx
   14000634b:	push   r14
   14000634d:	sub    rsp,0x1f0
   140006354:	mov    QWORD PTR [rax+0x10],rbx
   140006358:	mov    QWORD PTR [rax-0x10],rbp
   14000635c:	mov    QWORD PTR [rax-0x18],rsi
   140006360:	mov    QWORD PTR [rax-0x20],rdi
   140006364:	mov    QWORD PTR [rax-0x28],r12
   140006368:	mov    QWORD PTR [rax-0x30],r13
   14000636c:	mov    QWORD PTR [rax-0x38],r15
   140006370:	mov    rax,QWORD PTR [rip+0x1a3e1]        # 0x140020758
   140006377:	mov    r15,rdx
   14000637a:	lea    rcx,[rsp+0x70]
   14000637f:	mov    dl,0x2f
   140006381:	mov    QWORD PTR [rsp+0x30],rax
   140006386:	call   QWORD PTR [rip+0x1a404]        # 0x140020790
   14000638c:	mov    r9d,0x1
   140006392:	xor    r8d,r8d
   140006395:	movzx  edx,WORD PTR [rax]
   140006398:	mov    rcx,r15
   14000639b:	call   QWORD PTR [rip+0x1a18f]        # 0x140020530
   1400063a1:	cmp    eax,0xffffffff
   1400063a4:	je     0x140006958
   1400063aa:	lea    rdx,[rip+0x1a6a7]        # 0x140020a58
   1400063b1:	lea    rcx,[rsp+0xa0]
   1400063b9:	mov    r8d,0x9
   1400063bf:	call   QWORD PTR [rip+0x1a1bb]        # 0x140020580
   1400063c5:	lea    rcx,[rsp+0xd8]
   1400063cd:	mov    rdx,rax
   1400063d0:	call   QWORD PTR [rip+0x1a1a2]        # 0x140020578
   1400063d6:	lea    rdx,[rip+0x1a687]        # 0x140020a64
   1400063dd:	xor    eax,eax
   1400063df:	mov    rdi,rdx
   1400063e2:	mov    QWORD PTR [rsp+0x88],rdx
   1400063ea:	or     r14,0xffffffffffffffff
   1400063ee:	mov    rcx,r14
   1400063f1:	lea    rdx,[rsp+0x160]
   1400063f9:	repnz scas al,BYTE PTR es:[rdi]
   1400063fb:	not    rcx
   1400063fe:	dec    rcx
   140006401:	mov    DWORD PTR [rsp+0x80],ecx
   140006408:	lea    rcx,[rsp+0x58]
   14000640d:	movaps xmm0,XMMWORD PTR [rsp+0x80]
   140006415:	movdqa XMMWORD PTR [rsp+0x160],xmm0
   14000641e:	call   QWORD PTR [rip+0x1a114]        # 0x140020538
   140006424:	mov    rdx,QWORD PTR [rsp+0x30]
   140006429:	mov    eax,DWORD PTR [rdx]
   14000642b:	cmp    eax,0x1
   14000642e:	je     0x1400064a3
   140006430:	test   eax,eax
   140006432:	je     0x1400064a3
   140006434:	call   QWORD PTR [rip+0x1a2f6]        # 0x140020730
   14000643a:	mov    rcx,QWORD PTR [rsp+0x30]
   14000643f:	mov    rdi,rax
   140006442:	mov    rax,QWORD PTR [rcx+0x10]
   140006446:	test   rax,rax
   140006449:	je     0x14000646a
   14000644b:	mov    rdx,rdi
   14000644e:	mov    rcx,rax
   140006451:	call   0x140001210
   140006456:	lea    rcx,[rdi+0x8]
   14000645a:	mov    QWORD PTR [rdi+0x10],rax
   14000645e:	and    QWORD PTR [rax],0x3
   140006462:	or     QWORD PTR [rax],rcx
   140006465:	mov    rcx,QWORD PTR [rsp+0x30]
   14000646a:	mov    eax,DWORD PTR [rcx]
   14000646c:	test   eax,eax
   14000646e:	je     0x14000648b
   140006470:	cmp    eax,0xffffffff
   140006473:	je     0x140006490
   140006475:	mov    eax,r14d
   140006478:	lock xadd DWORD PTR [rcx],eax
   14000647c:	add    eax,0xffffffff
   14000647f:	setne  al
   140006482:	test   al,al
   140006484:	jne    0x140006490
   140006486:	mov    rcx,QWORD PTR [rsp+0x30]
   14000648b:	call   0x1400022f0
   140006490:	mov    rcx,rdi
   140006493:	mov    QWORD PTR [rsp+0x30],rdi
   140006498:	call   QWORD PTR [rip+0x1a1d2]        # 0x140020670
   14000649e:	mov    rdx,QWORD PTR [rsp+0x30]
   1400064a3:	mov    rdi,QWORD PTR [rdx+0x10]
   1400064a7:	xor    r13d,r13d
   1400064aa:	test   rdi,rdi
   1400064ad:	je     0x140006506
   1400064af:	mov    rbx,r13
   1400064b2:	data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400064c0:	lea    rcx,[rdi+0x18]
   1400064c4:	lea    rdx,[rsp+0x58]
   1400064c9:	call   QWORD PTR [rip+0x1a241]        # 0x140020710
   1400064cf:	test   al,al
   1400064d1:	jne    0x1400064dc
   1400064d3:	mov    rbx,rdi
   1400064d6:	mov    rdi,QWORD PTR [rdi+0x8]
   1400064da:	jmp    0x1400064e0
   1400064dc:	mov    rdi,QWORD PTR [rdi+0x10]
   1400064e0:	test   rdi,rdi
   1400064e3:	jne    0x1400064c0
   1400064e5:	test   rbx,rbx
   1400064e8:	je     0x140006506
   1400064ea:	lea    rdx,[rbx+0x18]
   1400064ee:	lea    rcx,[rsp+0x58]
   1400064f3:	call   QWORD PTR [rip+0x1a217]        # 0x140020710
   1400064f9:	test   al,al
   1400064fb:	jne    0x140006506
   1400064fd:	lea    rcx,[rbx+0x20]
   140006501:	jmp    0x14000666c
   140006506:	lea    rcx,[rsp+0x138]
   14000650e:	call   QWORD PTR [rip+0x1a0c4]        # 0x1400205d8
   140006514:	mov    rcx,QWORD PTR [rsp+0x30]
   140006519:	mov    edx,DWORD PTR [rcx]
   14000651b:	mov    r12,rax
   14000651e:	cmp    edx,0x1
   140006521:	je     0x140006596
   140006523:	test   edx,edx
   140006525:	je     0x140006596
   140006527:	call   QWORD PTR [rip+0x1a203]        # 0x140020730
   14000652d:	mov    rcx,QWORD PTR [rsp+0x30]
   140006532:	mov    r8,QWORD PTR [rcx+0x10]
   140006536:	mov    rdi,rax
   140006539:	test   r8,r8
   14000653c:	je     0x14000655d
   14000653e:	mov    rdx,rax
   140006541:	mov    rcx,r8
   140006544:	call   0x140001210
   140006549:	lea    rcx,[rdi+0x8]
   14000654d:	mov    QWORD PTR [rdi+0x10],rax
   140006551:	and    QWORD PTR [rax],0x3
   140006555:	or     QWORD PTR [rax],rcx
   140006558:	mov    rcx,QWORD PTR [rsp+0x30]
   14000655d:	mov    eax,DWORD PTR [rcx]
   14000655f:	test   eax,eax
   140006561:	je     0x14000657e
   140006563:	cmp    eax,0xffffffff
   140006566:	je     0x140006583
   140006568:	mov    eax,r14d
   14000656b:	lock xadd DWORD PTR [rcx],eax
   14000656f:	add    eax,0xffffffff
   140006572:	setne  al
   140006575:	test   al,al
   140006577:	jne    0x140006583
   140006579:	mov    rcx,QWORD PTR [rsp+0x30]
   14000657e:	call   0x1400022f0
   140006583:	mov    rcx,rdi
   140006586:	mov    QWORD PTR [rsp+0x30],rdi
   14000658b:	call   QWORD PTR [rip+0x1a0df]        # 0x140020670
   140006591:	mov    rcx,QWORD PTR [rsp+0x30]
   140006596:	mov    rbx,QWORD PTR [rcx+0x10]
   14000659a:	lea    rbp,[rcx+0x8]
   14000659e:	mov    rdi,r13
   1400065a1:	mov    sil,0x1
   1400065a4:	test   rbx,rbx
   1400065a7:	je     0x140006612
   1400065a9:	nop    DWORD PTR [rax+0x0]
   1400065b0:	lea    rcx,[rbx+0x18]
   1400065b4:	lea    rdx,[rsp+0x58]
   1400065b9:	mov    rbp,rbx
   1400065bc:	call   QWORD PTR [rip+0x1a14e]        # 0x140020710
   1400065c2:	test   al,al
   1400065c4:	jne    0x1400065d2
   1400065c6:	mov    rdi,rbx
   1400065c9:	mov    rbx,QWORD PTR [rbx+0x8]
   1400065cd:	mov    sil,0x1
   1400065d0:	jmp    0x1400065d9
   1400065d2:	mov    rbx,QWORD PTR [rbx+0x10]
   1400065d6:	xor    sil,sil
   1400065d9:	test   rbx,rbx
   1400065dc:	jne    0x1400065b0
   1400065de:	test   rdi,rdi
   1400065e1:	je     0x14000660d
   1400065e3:	lea    rdx,[rdi+0x18]
   1400065e7:	lea    rcx,[rsp+0x58]
   1400065ec:	call   QWORD PTR [rip+0x1a11e]        # 0x140020710
   1400065f2:	test   al,al
   1400065f4:	jne    0x14000660d
   1400065f6:	lea    rcx,[rdi+0x20]
   1400065fa:	mov    rdx,r12
   1400065fd:	call   QWORD PTR [rip+0x1a025]        # 0x140020628
   140006603:	mov    QWORD PTR [rsp+0xb0],rdi
   14000660b:	jmp    0x14000665a
   14000660d:	mov    rcx,QWORD PTR [rsp+0x30]
   140006612:	mov    edx,0x30
   140006617:	mov    r9,rbp
   14000661a:	mov    BYTE PTR [rsp+0x20],sil
   14000661f:	lea    r8d,[rdx-0x28]
   140006623:	call   QWORD PTR [rip+0x1a0ff]        # 0x140020728
   140006629:	mov    rdi,rax
   14000662c:	lea    rcx,[rax+0x18]
   140006630:	test   rcx,rcx
   140006633:	je     0x140006640
   140006635:	lea    rdx,[rsp+0x58]
   14000663a:	call   QWORD PTR [rip+0x1a158]        # 0x140020798
   140006640:	lea    rcx,[rdi+0x20]
   140006644:	test   rcx,rcx
   140006647:	je     0x140006652
   140006649:	mov    rdx,r12
   14000664c:	call   QWORD PTR [rip+0x1a0e6]        # 0x140020738
   140006652:	mov    QWORD PTR [rsp+0xb0],rdi
   14000665a:	lea    rcx,[rsp+0x138]
   140006662:	call   QWORD PTR [rip+0x1a0e0]        # 0x140020748
   140006668:	lea    rcx,[rdi+0x20]
   14000666c:	lea    rdx,[rsp+0xd8]
   140006674:	call   QWORD PTR [rip+0x19fae]        # 0x140020628
   14000667a:	lea    rcx,[rsp+0x58]
   14000667f:	call   QWORD PTR [rip+0x1a0fb]        # 0x140020780
   140006685:	lea    rcx,[rsp+0xd8]
   14000668d:	call   QWORD PTR [rip+0x1a0b5]        # 0x140020748
   140006693:	lea    rcx,[rsp+0xa0]
   14000669b:	call   QWORD PTR [rip+0x1a0df]        # 0x140020780
   1400066a1:	lea    rcx,[rsp+0x90]
   1400066a9:	mov    rdx,r15
   1400066ac:	call   QWORD PTR [rip+0x19ec6]        # 0x140020578
   1400066b2:	lea    rdx,[rip+0x1a3c3]        # 0x140020a7c
   1400066b9:	xor    eax,eax
   1400066bb:	mov    rdi,rdx
   1400066be:	mov    QWORD PTR [rsp+0x68],rdx
   1400066c3:	mov    rcx,r14
   1400066c6:	repnz scas al,BYTE PTR es:[rdi]
   1400066c8:	lea    rdx,[rsp+0x180]
   1400066d0:	not    rcx
   1400066d3:	dec    rcx
   1400066d6:	mov    DWORD PTR [rsp+0x60],ecx
   1400066da:	lea    rcx,[rsp+0x50]
   1400066df:	movaps xmm0,XMMWORD PTR [rsp+0x60]
   1400066e4:	movdqa XMMWORD PTR [rsp+0x180],xmm0
   1400066ed:	call   QWORD PTR [rip+0x19e45]        # 0x140020538
   1400066f3:	mov    rdx,QWORD PTR [rsp+0x30]
   1400066f8:	mov    eax,DWORD PTR [rdx]
   1400066fa:	cmp    eax,0x1
   1400066fd:	je     0x140006772
   1400066ff:	test   eax,eax
   140006701:	je     0x140006772
   140006703:	call   QWORD PTR [rip+0x1a027]        # 0x140020730
   140006709:	mov    rcx,QWORD PTR [rsp+0x30]
   14000670e:	mov    rdi,rax
   140006711:	mov    rax,QWORD PTR [rcx+0x10]
   140006715:	test   rax,rax
   140006718:	je     0x140006739
   14000671a:	mov    rdx,rdi
   14000671d:	mov    rcx,rax
   140006720:	call   0x140001210
   140006725:	lea    rcx,[rdi+0x8]
   140006729:	mov    QWORD PTR [rdi+0x10],rax
   14000672d:	and    QWORD PTR [rax],0x3
   140006731:	or     QWORD PTR [rax],rcx
   140006734:	mov    rcx,QWORD PTR [rsp+0x30]
   140006739:	mov    eax,DWORD PTR [rcx]
   14000673b:	test   eax,eax
   14000673d:	je     0x14000675a
   14000673f:	cmp    eax,0xffffffff
   140006742:	je     0x14000675f
   140006744:	mov    eax,r14d
   140006747:	lock xadd DWORD PTR [rcx],eax
   14000674b:	add    eax,0xffffffff
   14000674e:	setne  al
   140006751:	test   al,al
   140006753:	jne    0x14000675f
   140006755:	mov    rcx,QWORD PTR [rsp+0x30]
   14000675a:	call   0x1400022f0
   14000675f:	mov    rcx,rdi
   140006762:	mov    QWORD PTR [rsp+0x30],rdi
   140006767:	call   QWORD PTR [rip+0x19f03]        # 0x140020670
   14000676d:	mov    rdx,QWORD PTR [rsp+0x30]
   140006772:	mov    rdi,QWORD PTR [rdx+0x10]
   140006776:	test   rdi,rdi
   140006779:	je     0x1400067c6
   14000677b:	mov    rbx,r13
   14000677e:	xchg   ax,ax
   140006780:	lea    rcx,[rdi+0x18]
   140006784:	lea    rdx,[rsp+0x50]
   140006789:	call   QWORD PTR [rip+0x19f81]        # 0x140020710
   14000678f:	test   al,al
   140006791:	jne    0x14000679c
   140006793:	mov    rbx,rdi
   140006796:	mov    rdi,QWORD PTR [rdi+0x8]
   14000679a:	jmp    0x1400067a0
   14000679c:	mov    rdi,QWORD PTR [rdi+0x10]
   1400067a0:	test   rdi,rdi
   1400067a3:	jne    0x140006780
   1400067a5:	test   rbx,rbx
   1400067a8:	je     0x1400067c6
   1400067aa:	lea    rdx,[rbx+0x18]
   1400067ae:	lea    rcx,[rsp+0x50]
   1400067b3:	call   QWORD PTR [rip+0x19f57]        # 0x140020710
   1400067b9:	test   al,al
   1400067bb:	jne    0x1400067c6
   1400067bd:	lea    rcx,[rbx+0x20]
   1400067c1:	jmp    0x14000692c
   1400067c6:	lea    rcx,[rsp+0x118]
   1400067ce:	call   QWORD PTR [rip+0x19e04]        # 0x1400205d8
   1400067d4:	mov    rcx,QWORD PTR [rsp+0x30]
   1400067d9:	mov    edx,DWORD PTR [rcx]
   1400067db:	mov    r12,rax
   1400067de:	cmp    edx,0x1
   1400067e1:	je     0x140006856
   1400067e3:	test   edx,edx
   1400067e5:	je     0x140006856
   1400067e7:	call   QWORD PTR [rip+0x19f43]        # 0x140020730
   1400067ed:	mov    rcx,QWORD PTR [rsp+0x30]
   1400067f2:	mov    r8,QWORD PTR [rcx+0x10]
   1400067f6:	mov    rdi,rax
   1400067f9:	test   r8,r8
   1400067fc:	je     0x14000681d
   1400067fe:	mov    rdx,rax
   140006801:	mov    rcx,r8
   140006804:	call   0x140001210
   140006809:	lea    rcx,[rdi+0x8]
   14000680d:	mov    QWORD PTR [rdi+0x10],rax
   140006811:	and    QWORD PTR [rax],0x3
   140006815:	or     QWORD PTR [rax],rcx
   140006818:	mov    rcx,QWORD PTR [rsp+0x30]
   14000681d:	mov    eax,DWORD PTR [rcx]
   14000681f:	test   eax,eax
   140006821:	je     0x14000683e
   140006823:	cmp    eax,0xffffffff
   140006826:	je     0x140006843
   140006828:	mov    eax,r14d
   14000682b:	lock xadd DWORD PTR [rcx],eax
   14000682f:	add    eax,0xffffffff
   140006832:	setne  al
   140006835:	test   al,al
   140006837:	jne    0x140006843
   140006839:	mov    rcx,QWORD PTR [rsp+0x30]
   14000683e:	call   0x1400022f0
   140006843:	mov    rcx,rdi
   140006846:	mov    QWORD PTR [rsp+0x30],rdi
   14000684b:	call   QWORD PTR [rip+0x19e1f]        # 0x140020670
   140006851:	mov    rcx,QWORD PTR [rsp+0x30]
   140006856:	mov    rbx,QWORD PTR [rcx+0x10]
   14000685a:	lea    rbp,[rcx+0x8]
   14000685e:	mov    rdi,r13
   140006861:	mov    sil,0x1
   140006864:	test   rbx,rbx
   140006867:	je     0x1400068d2
   140006869:	nop    DWORD PTR [rax+0x0]
   140006870:	lea    rcx,[rbx+0x18]
   140006874:	lea    rdx,[rsp+0x50]
   140006879:	mov    rbp,rbx
   14000687c:	call   QWORD PTR [rip+0x19e8e]        # 0x140020710
   140006882:	test   al,al
   140006884:	jne    0x140006892
   140006886:	mov    rdi,rbx
   140006889:	mov    rbx,QWORD PTR [rbx+0x8]
   14000688d:	mov    sil,0x1
   140006890:	jmp    0x140006899
   140006892:	mov    rbx,QWORD PTR [rbx+0x10]
   140006896:	xor    sil,sil
   140006899:	test   rbx,rbx
   14000689c:	jne    0x140006870
   14000689e:	test   rdi,rdi
   1400068a1:	je     0x1400068cd
   1400068a3:	lea    rdx,[rdi+0x18]
   1400068a7:	lea    rcx,[rsp+0x50]
   1400068ac:	call   QWORD PTR [rip+0x19e5e]        # 0x140020710
   1400068b2:	test   al,al
   1400068b4:	jne    0x1400068cd
   1400068b6:	lea    rcx,[rdi+0x20]
   1400068ba:	mov    rdx,r12
   1400068bd:	call   QWORD PTR [rip+0x19d65]        # 0x140020628
   1400068c3:	mov    QWORD PTR [rsp+0xc0],rdi
   1400068cb:	jmp    0x14000691a
   1400068cd:	mov    rcx,QWORD PTR [rsp+0x30]
   1400068d2:	mov    edx,0x30
   1400068d7:	mov    r9,rbp
   1400068da:	mov    BYTE PTR [rsp+0x20],sil
   1400068df:	lea    r8d,[rdx-0x28]
   1400068e3:	call   QWORD PTR [rip+0x19e3f]        # 0x140020728
   1400068e9:	mov    rdi,rax
   1400068ec:	lea    rcx,[rax+0x18]
   1400068f0:	test   rcx,rcx
   1400068f3:	je     0x140006900
   1400068f5:	lea    rdx,[rsp+0x50]
   1400068fa:	call   QWORD PTR [rip+0x19e98]        # 0x140020798
   140006900:	lea    rcx,[rdi+0x20]
   140006904:	test   rcx,rcx
   140006907:	je     0x140006912
   140006909:	mov    rdx,r12
   14000690c:	call   QWORD PTR [rip+0x19e26]        # 0x140020738
   140006912:	mov    QWORD PTR [rsp+0xc0],rdi
   14000691a:	lea    rcx,[rsp+0x118]
   140006922:	call   QWORD PTR [rip+0x19e20]        # 0x140020748
   140006928:	lea    rcx,[rdi+0x20]
   14000692c:	lea    rdx,[rsp+0x90]
   140006934:	call   QWORD PTR [rip+0x19cee]        # 0x140020628
   14000693a:	lea    rcx,[rsp+0x50]
   14000693f:	call   QWORD PTR [rip+0x19e3b]        # 0x140020780
   140006945:	lea    rcx,[rsp+0x90]
   14000694d:	call   QWORD PTR [rip+0x19df5]        # 0x140020748
   140006953:	jmp    0x1400071b3
   140006958:	lea    rdx,[rip+0x1a0e9]        # 0x140020a48
   14000695f:	lea    rcx,[rsp+0xc8]
   140006967:	mov    r8d,0x6
   14000696d:	call   QWORD PTR [rip+0x19c0d]        # 0x140020580
   140006973:	lea    rcx,[rsp+0xf8]
   14000697b:	mov    rdx,rax
   14000697e:	call   QWORD PTR [rip+0x19bf4]        # 0x140020578
   140006984:	lea    rdx,[rip+0x1a0d9]        # 0x140020a64
   14000698b:	xor    eax,eax
   14000698d:	mov    rdi,rdx
   140006990:	mov    QWORD PTR [rsp+0x98],rdx
   140006998:	or     r14,0xffffffffffffffff
   14000699c:	mov    rcx,r14
   14000699f:	lea    rdx,[rsp+0x1a0]
   1400069a7:	repnz scas al,BYTE PTR es:[rdi]
   1400069a9:	not    rcx
   1400069ac:	dec    rcx
   1400069af:	mov    DWORD PTR [rsp+0x90],ecx
   1400069b6:	lea    rcx,[rsp+0x38]
   1400069bb:	movaps xmm0,XMMWORD PTR [rsp+0x90]
   1400069c3:	movdqa XMMWORD PTR [rsp+0x1a0],xmm0
   1400069cc:	call   QWORD PTR [rip+0x19b66]        # 0x140020538
   1400069d2:	mov    rdx,QWORD PTR [rsp+0x30]
   1400069d7:	mov    eax,DWORD PTR [rdx]
   1400069d9:	cmp    eax,0x1
   1400069dc:	je     0x140006a51
   1400069de:	test   eax,eax
   1400069e0:	je     0x140006a51
   1400069e2:	call   QWORD PTR [rip+0x19d48]        # 0x140020730
   1400069e8:	mov    rcx,QWORD PTR [rsp+0x30]
   1400069ed:	mov    rdi,rax
   1400069f0:	mov    rax,QWORD PTR [rcx+0x10]
   1400069f4:	test   rax,rax
   1400069f7:	je     0x140006a18
   1400069f9:	mov    rdx,rdi
   1400069fc:	mov    rcx,rax
   1400069ff:	call   0x140001210
   140006a04:	lea    rcx,[rdi+0x8]
   140006a08:	mov    QWORD PTR [rdi+0x10],rax
   140006a0c:	and    QWORD PTR [rax],0x3
   140006a10:	or     QWORD PTR [rax],rcx
   140006a13:	mov    rcx,QWORD PTR [rsp+0x30]
   140006a18:	mov    eax,DWORD PTR [rcx]
   140006a1a:	test   eax,eax
   140006a1c:	je     0x140006a39
   140006a1e:	cmp    eax,0xffffffff
   140006a21:	je     0x140006a3e
   140006a23:	mov    eax,r14d
   140006a26:	lock xadd DWORD PTR [rcx],eax
   140006a2a:	add    eax,0xffffffff
   140006a2d:	setne  al
   140006a30:	test   al,al
   140006a32:	jne    0x140006a3e
   140006a34:	mov    rcx,QWORD PTR [rsp+0x30]
   140006a39:	call   0x1400022f0
   140006a3e:	mov    rcx,rdi
   140006a41:	mov    QWORD PTR [rsp+0x30],rdi
   140006a46:	call   QWORD PTR [rip+0x19c24]        # 0x140020670
   140006a4c:	mov    rdx,QWORD PTR [rsp+0x30]
   140006a51:	mov    rdi,QWORD PTR [rdx+0x10]
   140006a55:	xor    r13d,r13d
   140006a58:	test   rdi,rdi
   140006a5b:	je     0x140006aa6
   140006a5d:	mov    rbx,r13
   140006a60:	lea    rcx,[rdi+0x18]
   140006a64:	lea    rdx,[rsp+0x38]
   140006a69:	call   QWORD PTR [rip+0x19ca1]        # 0x140020710
   140006a6f:	test   al,al
   140006a71:	jne    0x140006a7c
   140006a73:	mov    rbx,rdi
   140006a76:	mov    rdi,QWORD PTR [rdi+0x8]
   140006a7a:	jmp    0x140006a80
   140006a7c:	mov    rdi,QWORD PTR [rdi+0x10]
   140006a80:	test   rdi,rdi
   140006a83:	jne    0x140006a60
   140006a85:	test   rbx,rbx
   140006a88:	je     0x140006aa6
   140006a8a:	lea    rdx,[rbx+0x18]
   140006a8e:	lea    rcx,[rsp+0x38]
   140006a93:	call   QWORD PTR [rip+0x19c77]        # 0x140020710
   140006a99:	test   al,al
   140006a9b:	jne    0x140006aa6
   140006a9d:	lea    rcx,[rbx+0x20]
   140006aa1:	jmp    0x140006c0c
   140006aa6:	lea    rcx,[rsp+0x128]
   140006aae:	call   QWORD PTR [rip+0x19b24]        # 0x1400205d8
   140006ab4:	mov    rcx,QWORD PTR [rsp+0x30]
   140006ab9:	mov    edx,DWORD PTR [rcx]
   140006abb:	mov    r12,rax
   140006abe:	cmp    edx,0x1
   140006ac1:	je     0x140006b36
   140006ac3:	test   edx,edx
   140006ac5:	je     0x140006b36
   140006ac7:	call   QWORD PTR [rip+0x19c63]        # 0x140020730
   140006acd:	mov    rcx,QWORD PTR [rsp+0x30]
   140006ad2:	mov    r8,QWORD PTR [rcx+0x10]
   140006ad6:	mov    rdi,rax
   140006ad9:	test   r8,r8
   140006adc:	je     0x140006afd
   140006ade:	mov    rdx,rax
   140006ae1:	mov    rcx,r8
   140006ae4:	call   0x140001210
   140006ae9:	lea    rcx,[rdi+0x8]
   140006aed:	mov    QWORD PTR [rdi+0x10],rax
   140006af1:	and    QWORD PTR [rax],0x3
   140006af5:	or     QWORD PTR [rax],rcx
   140006af8:	mov    rcx,QWORD PTR [rsp+0x30]
   140006afd:	mov    eax,DWORD PTR [rcx]
   140006aff:	test   eax,eax
   140006b01:	je     0x140006b1e
   140006b03:	cmp    eax,0xffffffff
   140006b06:	je     0x140006b23
   140006b08:	mov    eax,r14d
   140006b0b:	lock xadd DWORD PTR [rcx],eax
   140006b0f:	add    eax,0xffffffff
   140006b12:	setne  al
   140006b15:	test   al,al
   140006b17:	jne    0x140006b23
   140006b19:	mov    rcx,QWORD PTR [rsp+0x30]
   140006b1e:	call   0x1400022f0
   140006b23:	mov    rcx,rdi
   140006b26:	mov    QWORD PTR [rsp+0x30],rdi
   140006b2b:	call   QWORD PTR [rip+0x19b3f]        # 0x140020670
   140006b31:	mov    rcx,QWORD PTR [rsp+0x30]
   140006b36:	mov    rbx,QWORD PTR [rcx+0x10]
   140006b3a:	lea    rbp,[rcx+0x8]
   140006b3e:	mov    rdi,r13
   140006b41:	mov    sil,0x1
   140006b44:	test   rbx,rbx
   140006b47:	je     0x140006bb2
   140006b49:	nop    DWORD PTR [rax+0x0]
   140006b50:	lea    rcx,[rbx+0x18]
   140006b54:	lea    rdx,[rsp+0x38]
   140006b59:	mov    rbp,rbx
   140006b5c:	call   QWORD PTR [rip+0x19bae]        # 0x140020710
   140006b62:	test   al,al
   140006b64:	jne    0x140006b72
   140006b66:	mov    rdi,rbx
   140006b69:	mov    rbx,QWORD PTR [rbx+0x8]
   140006b6d:	mov    sil,0x1
   140006b70:	jmp    0x140006b79
   140006b72:	mov    rbx,QWORD PTR [rbx+0x10]
   140006b76:	xor    sil,sil
   140006b79:	test   rbx,rbx
   140006b7c:	jne    0x140006b50
   140006b7e:	test   rdi,rdi
   140006b81:	je     0x140006bad
   140006b83:	lea    rdx,[rdi+0x18]
   140006b87:	lea    rcx,[rsp+0x38]
   140006b8c:	call   QWORD PTR [rip+0x19b7e]        # 0x140020710
   140006b92:	test   al,al
   140006b94:	jne    0x140006bad
   140006b96:	lea    rcx,[rdi+0x20]
   140006b9a:	mov    rdx,r12
   140006b9d:	call   QWORD PTR [rip+0x19a85]        # 0x140020628
   140006ba3:	mov    QWORD PTR [rsp+0xd0],rdi
   140006bab:	jmp    0x140006bfa
   140006bad:	mov    rcx,QWORD PTR [rsp+0x30]
   140006bb2:	mov    edx,0x30
   140006bb7:	mov    r9,rbp
   140006bba:	mov    BYTE PTR [rsp+0x20],sil
   140006bbf:	lea    r8d,[rdx-0x28]
   140006bc3:	call   QWORD PTR [rip+0x19b5f]        # 0x140020728
   140006bc9:	mov    rdi,rax
   140006bcc:	lea    rcx,[rax+0x18]
   140006bd0:	test   rcx,rcx
   140006bd3:	je     0x140006be0
   140006bd5:	lea    rdx,[rsp+0x38]
   140006bda:	call   QWORD PTR [rip+0x19bb8]        # 0x140020798
   140006be0:	lea    rcx,[rdi+0x20]
   140006be4:	test   rcx,rcx
   140006be7:	je     0x140006bf2
   140006be9:	mov    rdx,r12
   140006bec:	call   QWORD PTR [rip+0x19b46]        # 0x140020738
   140006bf2:	mov    QWORD PTR [rsp+0xd0],rdi
   140006bfa:	lea    rcx,[rsp+0x128]
   140006c02:	call   QWORD PTR [rip+0x19b40]        # 0x140020748
   140006c08:	lea    rcx,[rdi+0x20]
   140006c0c:	lea    rdx,[rsp+0xf8]
   140006c14:	call   QWORD PTR [rip+0x19a0e]        # 0x140020628
   140006c1a:	lea    rcx,[rsp+0x38]
   140006c1f:	call   QWORD PTR [rip+0x19b5b]        # 0x140020780
   140006c25:	lea    rcx,[rsp+0xf8]
   140006c2d:	call   QWORD PTR [rip+0x19b15]        # 0x140020748
   140006c33:	lea    rcx,[rsp+0xc8]
   140006c3b:	call   QWORD PTR [rip+0x19b3f]        # 0x140020780
   140006c41:	lea    rcx,[rsp+0xe8]
   140006c49:	mov    rdx,r15
   140006c4c:	call   QWORD PTR [rip+0x19926]        # 0x140020578
   140006c52:	lea    rdx,[rip+0x19e23]        # 0x140020a7c
   140006c59:	xor    eax,eax
   140006c5b:	mov    rdi,rdx
   140006c5e:	mov    QWORD PTR [rsp+0x68],rdx
   140006c63:	mov    rcx,r14
   140006c66:	repnz scas al,BYTE PTR es:[rdi]
   140006c68:	lea    rdx,[rsp+0x150]
   140006c70:	not    rcx
   140006c73:	dec    rcx
   140006c76:	mov    DWORD PTR [rsp+0x60],ecx
   140006c7a:	lea    rcx,[rsp+0x40]
   140006c7f:	movaps xmm0,XMMWORD PTR [rsp+0x60]
   140006c84:	movdqa XMMWORD PTR [rsp+0x150],xmm0
   140006c8d:	call   QWORD PTR [rip+0x198a5]        # 0x140020538
   140006c93:	mov    rdx,QWORD PTR [rsp+0x30]
   140006c98:	mov    eax,DWORD PTR [rdx]
   140006c9a:	cmp    eax,0x1
   140006c9d:	je     0x140006d12
   140006c9f:	test   eax,eax
   140006ca1:	je     0x140006d12
   140006ca3:	call   QWORD PTR [rip+0x19a87]        # 0x140020730
   140006ca9:	mov    rcx,QWORD PTR [rsp+0x30]
   140006cae:	mov    rdi,rax
   140006cb1:	mov    rax,QWORD PTR [rcx+0x10]
   140006cb5:	test   rax,rax
   140006cb8:	je     0x140006cd9
   140006cba:	mov    rdx,rdi
   140006cbd:	mov    rcx,rax
   140006cc0:	call   0x140001210
   140006cc5:	lea    rcx,[rdi+0x8]
   140006cc9:	mov    QWORD PTR [rdi+0x10],rax
   140006ccd:	and    QWORD PTR [rax],0x3
   140006cd1:	or     QWORD PTR [rax],rcx
   140006cd4:	mov    rcx,QWORD PTR [rsp+0x30]
   140006cd9:	mov    eax,DWORD PTR [rcx]
   140006cdb:	test   eax,eax
   140006cdd:	je     0x140006cfa
   140006cdf:	cmp    eax,0xffffffff
   140006ce2:	je     0x140006cff
   140006ce4:	mov    eax,r14d
   140006ce7:	lock xadd DWORD PTR [rcx],eax
   140006ceb:	add    eax,0xffffffff
   140006cee:	setne  al
   140006cf1:	test   al,al
   140006cf3:	jne    0x140006cff
   140006cf5:	mov    rcx,QWORD PTR [rsp+0x30]
   140006cfa:	call   0x1400022f0
   140006cff:	mov    rcx,rdi
   140006d02:	mov    QWORD PTR [rsp+0x30],rdi
   140006d07:	call   QWORD PTR [rip+0x19963]        # 0x140020670
   140006d0d:	mov    rdx,QWORD PTR [rsp+0x30]
   140006d12:	mov    rdi,QWORD PTR [rdx+0x10]
   140006d16:	test   rdi,rdi
   140006d19:	je     0x140006d66
   140006d1b:	mov    rbx,r13
   140006d1e:	xchg   ax,ax
   140006d20:	lea    rcx,[rdi+0x18]
   140006d24:	lea    rdx,[rsp+0x40]
   140006d29:	call   QWORD PTR [rip+0x199e1]        # 0x140020710
   140006d2f:	test   al,al
   140006d31:	jne    0x140006d3c
   140006d33:	mov    rbx,rdi
   140006d36:	mov    rdi,QWORD PTR [rdi+0x8]
   140006d3a:	jmp    0x140006d40
   140006d3c:	mov    rdi,QWORD PTR [rdi+0x10]
   140006d40:	test   rdi,rdi
   140006d43:	jne    0x140006d20
   140006d45:	test   rbx,rbx
   140006d48:	je     0x140006d66
   140006d4a:	lea    rdx,[rbx+0x18]
   140006d4e:	lea    rcx,[rsp+0x40]
   140006d53:	call   QWORD PTR [rip+0x199b7]        # 0x140020710
   140006d59:	test   al,al
   140006d5b:	jne    0x140006d66
   140006d5d:	lea    rcx,[rbx+0x20]
   140006d61:	jmp    0x140006ecc
   140006d66:	lea    rcx,[rsp+0x170]
   140006d6e:	call   QWORD PTR [rip+0x19864]        # 0x1400205d8
   140006d74:	mov    rcx,QWORD PTR [rsp+0x30]
   140006d79:	mov    edx,DWORD PTR [rcx]
   140006d7b:	mov    r12,rax
   140006d7e:	cmp    edx,0x1
   140006d81:	je     0x140006df6
   140006d83:	test   edx,edx
   140006d85:	je     0x140006df6
   140006d87:	call   QWORD PTR [rip+0x199a3]        # 0x140020730
   140006d8d:	mov    rcx,QWORD PTR [rsp+0x30]
   140006d92:	mov    r8,QWORD PTR [rcx+0x10]
   140006d96:	mov    rdi,rax
   140006d99:	test   r8,r8
   140006d9c:	je     0x140006dbd
   140006d9e:	mov    rdx,rax
   140006da1:	mov    rcx,r8
   140006da4:	call   0x140001210
   140006da9:	lea    rcx,[rdi+0x8]
   140006dad:	mov    QWORD PTR [rdi+0x10],rax
   140006db1:	and    QWORD PTR [rax],0x3
   140006db5:	or     QWORD PTR [rax],rcx
   140006db8:	mov    rcx,QWORD PTR [rsp+0x30]
   140006dbd:	mov    eax,DWORD PTR [rcx]
   140006dbf:	test   eax,eax
   140006dc1:	je     0x140006dde
   140006dc3:	cmp    eax,0xffffffff
   140006dc6:	je     0x140006de3
   140006dc8:	mov    eax,r14d
   140006dcb:	lock xadd DWORD PTR [rcx],eax
   140006dcf:	add    eax,0xffffffff
   140006dd2:	setne  al
   140006dd5:	test   al,al
   140006dd7:	jne    0x140006de3
   140006dd9:	mov    rcx,QWORD PTR [rsp+0x30]
   140006dde:	call   0x1400022f0
   140006de3:	mov    rcx,rdi
   140006de6:	mov    QWORD PTR [rsp+0x30],rdi
   140006deb:	call   QWORD PTR [rip+0x1987f]        # 0x140020670
   140006df1:	mov    rcx,QWORD PTR [rsp+0x30]
   140006df6:	mov    rbx,QWORD PTR [rcx+0x10]
   140006dfa:	lea    rbp,[rcx+0x8]
   140006dfe:	mov    rdi,r13
   140006e01:	mov    sil,0x1
   140006e04:	test   rbx,rbx
   140006e07:	je     0x140006e72
   140006e09:	nop    DWORD PTR [rax+0x0]
   140006e10:	lea    rcx,[rbx+0x18]
   140006e14:	lea    rdx,[rsp+0x40]
   140006e19:	mov    rbp,rbx
   140006e1c:	call   QWORD PTR [rip+0x198ee]        # 0x140020710
   140006e22:	test   al,al
   140006e24:	jne    0x140006e32
   140006e26:	mov    rdi,rbx
   140006e29:	mov    rbx,QWORD PTR [rbx+0x8]
   140006e2d:	mov    sil,0x1
   140006e30:	jmp    0x140006e39
   140006e32:	mov    rbx,QWORD PTR [rbx+0x10]
   140006e36:	xor    sil,sil
   140006e39:	test   rbx,rbx
   140006e3c:	jne    0x140006e10
   140006e3e:	test   rdi,rdi
   140006e41:	je     0x140006e6d
   140006e43:	lea    rdx,[rdi+0x18]
   140006e47:	lea    rcx,[rsp+0x40]
   140006e4c:	call   QWORD PTR [rip+0x198be]        # 0x140020710
   140006e52:	test   al,al
   140006e54:	jne    0x140006e6d
   140006e56:	lea    rcx,[rdi+0x20]
   140006e5a:	mov    rdx,r12
   140006e5d:	call   QWORD PTR [rip+0x197c5]        # 0x140020628
   140006e63:	mov    QWORD PTR [rsp+0xb8],rdi
   140006e6b:	jmp    0x140006eba
   140006e6d:	mov    rcx,QWORD PTR [rsp+0x30]
   140006e72:	mov    edx,0x30
   140006e77:	mov    r9,rbp
   140006e7a:	mov    BYTE PTR [rsp+0x20],sil
   140006e7f:	lea    r8d,[rdx-0x28]
   140006e83:	call   QWORD PTR [rip+0x1989f]        # 0x140020728
   140006e89:	mov    rdi,rax
   140006e8c:	lea    rcx,[rax+0x18]
   140006e90:	test   rcx,rcx
   140006e93:	je     0x140006ea0
   140006e95:	lea    rdx,[rsp+0x40]
   140006e9a:	call   QWORD PTR [rip+0x198f8]        # 0x140020798
   140006ea0:	lea    rcx,[rdi+0x20]
   140006ea4:	test   rcx,rcx
   140006ea7:	je     0x140006eb2
   140006ea9:	mov    rdx,r12
   140006eac:	call   QWORD PTR [rip+0x19886]        # 0x140020738
   140006eb2:	mov    QWORD PTR [rsp+0xb8],rdi
   140006eba:	lea    rcx,[rsp+0x170]
   140006ec2:	call   QWORD PTR [rip+0x19880]        # 0x140020748
   140006ec8:	lea    rcx,[rdi+0x20]
   140006ecc:	lea    rdx,[rsp+0xe8]
   140006ed4:	call   QWORD PTR [rip+0x1974e]        # 0x140020628
   140006eda:	lea    rcx,[rsp+0x40]
   140006edf:	call   QWORD PTR [rip+0x1989b]        # 0x140020780
   140006ee5:	lea    rcx,[rsp+0xe8]
   140006eed:	call   QWORD PTR [rip+0x19855]        # 0x140020748
   140006ef3:	mov    rdx,QWORD PTR [rsp+0x210]
   140006efb:	lea    rcx,[rsp+0x108]
   140006f03:	call   QWORD PTR [rip+0x1966f]        # 0x140020578
   140006f09:	lea    rdx,[rip+0x19b30]        # 0x140020a40
   140006f10:	xor    eax,eax
   140006f12:	mov    rdi,rdx
   140006f15:	mov    QWORD PTR [rsp+0x68],rdx
   140006f1a:	mov    rcx,r14
   140006f1d:	repnz scas al,BYTE PTR es:[rdi]
   140006f1f:	lea    rdx,[rsp+0x190]
   140006f27:	not    rcx
   140006f2a:	dec    rcx
   140006f2d:	mov    DWORD PTR [rsp+0x60],ecx
   140006f31:	lea    rcx,[rsp+0x48]
   140006f36:	movaps xmm0,XMMWORD PTR [rsp+0x60]
   140006f3b:	movdqa XMMWORD PTR [rsp+0x190],xmm0
   140006f44:	call   QWORD PTR [rip+0x195ee]        # 0x140020538
   140006f4a:	mov    rdx,QWORD PTR [rsp+0x30]
   140006f4f:	mov    eax,DWORD PTR [rdx]
   140006f51:	cmp    eax,0x1
   140006f54:	je     0x140006fc9
   140006f56:	test   eax,eax
   140006f58:	je     0x140006fc9
   140006f5a:	call   QWORD PTR [rip+0x197d0]        # 0x140020730
   140006f60:	mov    rcx,QWORD PTR [rsp+0x30]
   140006f65:	mov    rdi,rax
   140006f68:	mov    rax,QWORD PTR [rcx+0x10]
   140006f6c:	test   rax,rax
   140006f6f:	je     0x140006f90
   140006f71:	mov    rdx,rdi
   140006f74:	mov    rcx,rax
   140006f77:	call   0x140001210
   140006f7c:	lea    rcx,[rdi+0x8]
   140006f80:	mov    QWORD PTR [rdi+0x10],rax
   140006f84:	and    QWORD PTR [rax],0x3
   140006f88:	or     QWORD PTR [rax],rcx
   140006f8b:	mov    rcx,QWORD PTR [rsp+0x30]
   140006f90:	mov    eax,DWORD PTR [rcx]
   140006f92:	test   eax,eax
   140006f94:	je     0x140006fb1
   140006f96:	cmp    eax,0xffffffff
   140006f99:	je     0x140006fb6
   140006f9b:	mov    eax,r14d
   140006f9e:	lock xadd DWORD PTR [rcx],eax
   140006fa2:	add    eax,0xffffffff
   140006fa5:	setne  al
   140006fa8:	test   al,al
   140006faa:	jne    0x140006fb6
   140006fac:	mov    rcx,QWORD PTR [rsp+0x30]
   140006fb1:	call   0x1400022f0
   140006fb6:	mov    rcx,rdi
   140006fb9:	mov    QWORD PTR [rsp+0x30],rdi
   140006fbe:	call   QWORD PTR [rip+0x196ac]        # 0x140020670
   140006fc4:	mov    rdx,QWORD PTR [rsp+0x30]
   140006fc9:	mov    rdi,QWORD PTR [rdx+0x10]
   140006fcd:	test   rdi,rdi
   140006fd0:	je     0x140007026
   140006fd2:	mov    rbx,r13
   140006fd5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140006fe0:	lea    rcx,[rdi+0x18]
   140006fe4:	lea    rdx,[rsp+0x48]
   140006fe9:	call   QWORD PTR [rip+0x19721]        # 0x140020710
   140006fef:	test   al,al
   140006ff1:	jne    0x140006ffc
   140006ff3:	mov    rbx,rdi
   140006ff6:	mov    rdi,QWORD PTR [rdi+0x8]
   140006ffa:	jmp    0x140007000
   140006ffc:	mov    rdi,QWORD PTR [rdi+0x10]
   140007000:	test   rdi,rdi
   140007003:	jne    0x140006fe0
   140007005:	test   rbx,rbx
   140007008:	je     0x140007026
   14000700a:	lea    rdx,[rbx+0x18]
   14000700e:	lea    rcx,[rsp+0x48]
   140007013:	call   QWORD PTR [rip+0x196f7]        # 0x140020710
   140007019:	test   al,al
   14000701b:	jne    0x140007026
   14000701d:	lea    rcx,[rbx+0x20]
   140007021:	jmp    0x14000718c
   140007026:	lea    rcx,[rsp+0x1b0]
   14000702e:	call   QWORD PTR [rip+0x195a4]        # 0x1400205d8
   140007034:	mov    rcx,QWORD PTR [rsp+0x30]
   140007039:	mov    edx,DWORD PTR [rcx]
   14000703b:	mov    r12,rax
   14000703e:	cmp    edx,0x1
   140007041:	je     0x1400070b6
   140007043:	test   edx,edx
   140007045:	je     0x1400070b6
   140007047:	call   QWORD PTR [rip+0x196e3]        # 0x140020730
   14000704d:	mov    rcx,QWORD PTR [rsp+0x30]
   140007052:	mov    r8,QWORD PTR [rcx+0x10]
   140007056:	mov    rdi,rax
   140007059:	test   r8,r8
   14000705c:	je     0x14000707d
   14000705e:	mov    rdx,rax
   140007061:	mov    rcx,r8
   140007064:	call   0x140001210
   140007069:	lea    rcx,[rdi+0x8]
   14000706d:	mov    QWORD PTR [rdi+0x10],rax
   140007071:	and    QWORD PTR [rax],0x3
   140007075:	or     QWORD PTR [rax],rcx
   140007078:	mov    rcx,QWORD PTR [rsp+0x30]
   14000707d:	mov    eax,DWORD PTR [rcx]
   14000707f:	test   eax,eax
   140007081:	je     0x14000709e
   140007083:	cmp    eax,0xffffffff
   140007086:	je     0x1400070a3
   140007088:	mov    eax,r14d
   14000708b:	lock xadd DWORD PTR [rcx],eax
   14000708f:	add    eax,0xffffffff
   140007092:	setne  al
   140007095:	test   al,al
   140007097:	jne    0x1400070a3
   140007099:	mov    rcx,QWORD PTR [rsp+0x30]
   14000709e:	call   0x1400022f0
   1400070a3:	mov    rcx,rdi
   1400070a6:	mov    QWORD PTR [rsp+0x30],rdi
   1400070ab:	call   QWORD PTR [rip+0x195bf]        # 0x140020670
   1400070b1:	mov    rcx,QWORD PTR [rsp+0x30]
   1400070b6:	mov    rbx,QWORD PTR [rcx+0x10]
   1400070ba:	lea    rbp,[rcx+0x8]
   1400070be:	mov    rdi,r13
   1400070c1:	mov    sil,0x1
   1400070c4:	test   rbx,rbx
   1400070c7:	je     0x140007132
   1400070c9:	nop    DWORD PTR [rax+0x0]
   1400070d0:	lea    rcx,[rbx+0x18]
   1400070d4:	lea    rdx,[rsp+0x48]
   1400070d9:	mov    rbp,rbx
   1400070dc:	call   QWORD PTR [rip+0x1962e]        # 0x140020710
   1400070e2:	test   al,al
   1400070e4:	jne    0x1400070f2
   1400070e6:	mov    rdi,rbx
   1400070e9:	mov    rbx,QWORD PTR [rbx+0x8]
   1400070ed:	mov    sil,0x1
   1400070f0:	jmp    0x1400070f9
   1400070f2:	mov    rbx,QWORD PTR [rbx+0x10]
   1400070f6:	xor    sil,sil
   1400070f9:	test   rbx,rbx
   1400070fc:	jne    0x1400070d0
   1400070fe:	test   rdi,rdi
   140007101:	je     0x14000712d
   140007103:	lea    rdx,[rdi+0x18]
   140007107:	lea    rcx,[rsp+0x48]
   14000710c:	call   QWORD PTR [rip+0x195fe]        # 0x140020710
   140007112:	test   al,al
   140007114:	jne    0x14000712d
   140007116:	lea    rcx,[rdi+0x20]
   14000711a:	mov    rdx,r12
   14000711d:	call   QWORD PTR [rip+0x19505]        # 0x140020628
   140007123:	mov    QWORD PTR [rsp+0xa8],rdi
   14000712b:	jmp    0x14000717a
   14000712d:	mov    rcx,QWORD PTR [rsp+0x30]
   140007132:	mov    edx,0x30
   140007137:	mov    r9,rbp
   14000713a:	mov    BYTE PTR [rsp+0x20],sil
   14000713f:	lea    r8d,[rdx-0x28]
   140007143:	call   QWORD PTR [rip+0x195df]        # 0x140020728
   140007149:	mov    rdi,rax
   14000714c:	lea    rcx,[rax+0x18]
   140007150:	test   rcx,rcx
   140007153:	je     0x140007160
   140007155:	lea    rdx,[rsp+0x48]
   14000715a:	call   QWORD PTR [rip+0x19638]        # 0x140020798
   140007160:	lea    rcx,[rdi+0x20]
   140007164:	test   rcx,rcx
   140007167:	je     0x140007172
   140007169:	mov    rdx,r12
   14000716c:	call   QWORD PTR [rip+0x195c6]        # 0x140020738
   140007172:	mov    QWORD PTR [rsp+0xa8],rdi
   14000717a:	lea    rcx,[rsp+0x1b0]
   140007182:	call   QWORD PTR [rip+0x195c0]        # 0x140020748
   140007188:	lea    rcx,[rdi+0x20]
   14000718c:	lea    rdx,[rsp+0x108]
   140007194:	call   QWORD PTR [rip+0x1948e]        # 0x140020628
   14000719a:	lea    rcx,[rsp+0x48]
   14000719f:	call   QWORD PTR [rip+0x195db]        # 0x140020780
   1400071a5:	lea    rcx,[rsp+0x108]
   1400071ad:	call   QWORD PTR [rip+0x19595]        # 0x140020748
   1400071b3:	lea    rdx,[rsp+0x30]
   1400071b8:	lea    rcx,[rsp+0x80]
   1400071c0:	call   QWORD PTR [rip+0x193fa]        # 0x1400205c0
   1400071c6:	mov    rcx,QWORD PTR [rsp+0x200]
   1400071ce:	mov    r15,QWORD PTR [rsp+0x1c0]
   1400071d6:	mov    rax,QWORD PTR [rcx+0x8]
   1400071da:	mov    r12,QWORD PTR [rsp+0x1d0]
   1400071e2:	mov    rsi,QWORD PTR [rsp+0x1e0]
   1400071ea:	mov    edx,DWORD PTR [rax]
   1400071ec:	mov    rbp,QWORD PTR [rsp+0x1e8]
   1400071f4:	mov    rbx,QWORD PTR [rsp+0x208]
   1400071fc:	add    rcx,0x8
   140007200:	cmp    edx,0x1
   140007203:	je     0x140007244
   140007205:	test   edx,edx
   140007207:	je     0x140007244
   140007209:	mov    edx,0x7fffffff
   14000720e:	mov    r8d,0x1
   140007214:	call   0x1400029a0
   140007219:	mov    ecx,0x10
   14000721e:	mov    rdi,rax
   140007221:	call   0x14001ee64
   140007226:	test   rax,rax
   140007229:	je     0x14000723f
   14000722b:	lea    rdx,[rsp+0x80]
   140007233:	mov    rcx,rax
   140007236:	call   QWORD PTR [rip+0x194fc]        # 0x140020738
   14000723c:	mov    r13,rax
   14000723f:	mov    QWORD PTR [rdi],r13
   140007242:	jmp    0x140007273
   140007244:	call   QWORD PTR [rip+0x193ee]        # 0x140020638
   14000724a:	mov    ecx,0x10
   14000724f:	mov    rdi,rax
   140007252:	call   0x14001ee64
   140007257:	test   rax,rax
   14000725a:	je     0x140007270
   14000725c:	lea    rdx,[rsp+0x80]
   140007264:	mov    rcx,rax
   140007267:	call   QWORD PTR [rip+0x194cb]        # 0x140020738
   14000726d:	mov    r13,rax
   140007270:	mov    QWORD PTR [rdi],r13
   140007273:	lea    rcx,[rsp+0x80]
   14000727b:	call   QWORD PTR [rip+0x194c7]        # 0x140020748
   140007281:	mov    rcx,QWORD PTR [rsp+0x30]
   140007286:	mov    r13,QWORD PTR [rsp+0x1c8]
   14000728e:	mov    eax,DWORD PTR [rcx]
   140007290:	mov    rdi,QWORD PTR [rsp+0x1d8]
   140007298:	test   eax,eax
   14000729a:	je     0x1400072b6
   14000729c:	cmp    eax,0xffffffff
   14000729f:	je     0x1400072bb
   1400072a1:	lock xadd DWORD PTR [rcx],r14d
   1400072a6:	add    r14d,0xffffffff
   1400072aa:	setne  al
   1400072ad:	test   al,al
   1400072af:	jne    0x1400072bb
   1400072b1:	mov    rcx,QWORD PTR [rsp+0x30]
   1400072b6:	call   0x1400022f0
   1400072bb:	add    rsp,0x1f0
   1400072c2:	pop    r14
   1400072c4:	ret    
   1400072c5:	int3   
   1400072c6:	int3   
   1400072c7:	int3   
   1400072c8:	int3   
   1400072c9:	int3   
   1400072ca:	int3   
   1400072cb:	int3   
   1400072cc:	int3   
   1400072cd:	int3   
   1400072ce:	int3   
   1400072cf:	int3   
   1400072d0:	mov    QWORD PTR [rsp+0x10],rbp
   1400072d5:	mov    QWORD PTR [rsp+0x18],rsi
   1400072da:	push   rdi
   1400072db:	push   r12
   1400072dd:	push   r13
   1400072df:	sub    rsp,0x20
   1400072e3:	mov    rax,QWORD PTR [rcx]
   1400072e6:	mov    rdi,rcx
   1400072e9:	mov    r12,r8
   1400072ec:	mov    ecx,DWORD PTR [rax+0x10]
   1400072ef:	mov    rsi,rdx
   1400072f2:	cmp    ecx,0x1
   1400072f5:	je     0x140007303
   1400072f7:	test   ecx,ecx
   1400072f9:	je     0x140007303
   1400072fb:	mov    rcx,rdi
   1400072fe:	call   0x140002f80
   140007303:	mov    rax,QWORD PTR [rdi]
   140007306:	mov    rcx,r12
   140007309:	mov    edx,DWORD PTR [rax+0x24]
   14000730c:	call   QWORD PTR [rip+0x1937e]        # 0x140020690
   140007312:	mov    rdx,r12
   140007315:	mov    rcx,rdi
   140007318:	mov    r8d,eax
   14000731b:	mov    r13d,eax
   14000731e:	call   0x140001e20
   140007323:	mov    rcx,QWORD PTR [rdi]
   140007326:	mov    rdx,QWORD PTR [rax]
   140007329:	mov    rbp,rax
   14000732c:	cmp    rdx,rcx
   14000732f:	jne    0x1400073b8
   140007335:	mov    edx,DWORD PTR [rcx+0x20]
   140007338:	mov    QWORD PTR [rsp+0x40],rbx
   14000733d:	cmp    DWORD PTR [rcx+0x14],edx
   140007340:	jl     0x140007372
   140007342:	movsx  edx,WORD PTR [rcx+0x1e]
   140007346:	inc    edx
   140007348:	call   QWORD PTR [rip+0x19282]        # 0x1400205d0
   14000734e:	mov    r11,QWORD PTR [rdi]
   140007351:	mov    rcx,r12
   140007354:	mov    edx,DWORD PTR [r11+0x24]
   140007358:	call   QWORD PTR [rip+0x19332]        # 0x140020690
   14000735e:	mov    rdx,r12
   140007361:	mov    rcx,rdi
   140007364:	mov    r8d,eax
   140007367:	mov    r13d,eax
   14000736a:	call   0x140001e20
   14000736f:	mov    rbp,rax
   140007372:	mov    rcx,QWORD PTR [rdi]
   140007375:	mov    edx,0x8
   14000737a:	call   QWORD PTR [rip+0x19340]        # 0x1400206c0
   140007380:	mov    rbx,rax
   140007383:	test   rax,rax
   140007386:	je     0x1400073a2
   140007388:	mov    rax,QWORD PTR [rbp+0x0]
   14000738c:	lea    rcx,[rbx+0x10]
   140007390:	mov    rdx,r12
   140007393:	mov    QWORD PTR [rbx],rax
   140007396:	mov    DWORD PTR [rbx+0x8],r13d
   14000739a:	call   QWORD PTR [rip+0x193f8]        # 0x140020798
   1400073a0:	jmp    0x1400073a4
   1400073a2:	xor    ebx,ebx
   1400073a4:	mov    QWORD PTR [rbp+0x0],rbx
   1400073a8:	mov    rax,QWORD PTR [rdi]
   1400073ab:	mov    QWORD PTR [rsi],rbx
   1400073ae:	inc    DWORD PTR [rax+0x14]
   1400073b1:	mov    rbx,QWORD PTR [rsp+0x40]
   1400073b6:	jmp    0x1400073bb
   1400073b8:	mov    QWORD PTR [rsi],rdx
   1400073bb:	mov    rbp,QWORD PTR [rsp+0x48]
   1400073c0:	mov    rax,rsi
   1400073c3:	mov    rsi,QWORD PTR [rsp+0x50]
   1400073c8:	add    rsp,0x20
   1400073cc:	pop    r13
   1400073ce:	pop    r12
   1400073d0:	pop    rdi
   1400073d1:	ret    
   1400073d2:	int3   
   1400073d3:	int3   
   1400073d4:	int3   
   1400073d5:	int3   
   1400073d6:	int3   
   1400073d7:	int3   
   1400073d8:	int3   
   1400073d9:	int3   
   1400073da:	int3   
   1400073db:	int3   
   1400073dc:	int3   
   1400073dd:	int3   
   1400073de:	int3   
   1400073df:	int3   
   1400073e0:	rex push rbx
   1400073e2:	push   rdi
   1400073e3:	push   r12
   1400073e5:	sub    rsp,0x190
   1400073ec:	mov    rdi,rdx
   1400073ef:	mov    r12,rcx
   1400073f2:	lea    rdx,[rip+0x1971f]        # 0x140020b18
   1400073f9:	lea    rcx,[rsp+0xb8]
   140007401:	mov    r8d,0x7
   140007407:	call   QWORD PTR [rip+0x19173]        # 0x140020580
   14000740d:	lea    rcx,[rsp+0x50]
   140007412:	mov    rdx,rdi
   140007415:	mov    rbx,rax
   140007418:	call   QWORD PTR [rip+0x1937a]        # 0x140020798
   14000741e:	lea    rcx,[rsp+0x50]
   140007423:	mov    rdx,rbx
   140007426:	call   QWORD PTR [rip+0x1937c]        # 0x1400207a8
   14000742c:	lea    rdx,[rsp+0x50]
   140007431:	lea    rcx,[rsp+0x68]
   140007436:	call   QWORD PTR [rip+0x191a4]        # 0x1400205e0
   14000743c:	lea    rcx,[rsp+0x50]
   140007441:	call   QWORD PTR [rip+0x19339]        # 0x140020780
   140007447:	lea    rcx,[rsp+0xb8]
   14000744f:	call   QWORD PTR [rip+0x1932b]        # 0x140020780
   140007455:	lea    rcx,[rsp+0x68]
   14000745a:	call   QWORD PTR [rip+0x19088]        # 0x1400204e8
   140007460:	test   al,al
   140007462:	jne    0x140007489
   140007464:	mov    rax,QWORD PTR [rip+0x192ed]        # 0x140020758
   14000746b:	lea    rcx,[rsp+0x68]
   140007470:	mov    QWORD PTR [r12],rax
   140007474:	call   QWORD PTR [rip+0x1918e]        # 0x140020608
   14000747a:	mov    rax,r12
   14000747d:	add    rsp,0x190
   140007484:	pop    r12
   140007486:	pop    rdi
   140007487:	pop    rbx
   140007488:	ret    
   140007489:	lea    rcx,[rsp+0x68]
   14000748e:	mov    edx,0x11
   140007493:	mov    QWORD PTR [rsp+0x188],rbp
   14000749b:	mov    QWORD PTR [rsp+0x180],rsi
   1400074a3:	call   QWORD PTR [rip+0x1913f]        # 0x1400205e8
   1400074a9:	lea    rcx,[rsp+0x38]
   1400074ae:	call   QWORD PTR [rip+0x190e4]        # 0x140020598
   1400074b4:	lea    rcx,[rsp+0x40]
   1400074b9:	call   QWORD PTR [rip+0x190d9]        # 0x140020598
   1400074bf:	mov    r11,QWORD PTR [rip+0x1929a]        # 0x140020760
   1400074c6:	lea    rcx,[rsp+0x20]
   1400074cb:	mov    QWORD PTR [rsp+0x30],r11
   1400074d0:	call   QWORD PTR [rip+0x1901a]        # 0x1400204f0
   1400074d6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400074e0:	lea    rdx,[rsp+0x98]
   1400074e8:	lea    rcx,[rsp+0x68]
   1400074ed:	xor    r8d,r8d
   1400074f0:	call   QWORD PTR [rip+0x19002]        # 0x1400204f8
   1400074f6:	lea    rcx,[rsp+0x20]
   1400074fb:	mov    rdx,rax
   1400074fe:	call   QWORD PTR [rip+0x18ffc]        # 0x140020500
   140007504:	lea    rcx,[rsp+0x98]
   14000750c:	call   QWORD PTR [rip+0x191e6]        # 0x1400206f8
   140007512:	lea    rdx,[rip+0x195f3]        # 0x140020b0c
   140007519:	lea    rcx,[rsp+0x20]
   14000751e:	call   QWORD PTR [rip+0x18fe4]        # 0x140020508
   140007524:	test   al,al
   140007526:	je     0x1400075ee
   14000752c:	lea    rdx,[rsp+0x58]
   140007531:	lea    rcx,[rsp+0x20]
   140007536:	mov    r8b,0x20
   140007539:	call   QWORD PTR [rip+0x18fd1]        # 0x140020510
   14000753f:	mov    rcx,QWORD PTR [rax]
   140007542:	movsxd rax,DWORD PTR [rcx+0x8]
   140007546:	lea    rdx,[rcx+rax*8+0x18]
   14000754b:	lea    rcx,[rsp+0xd0]
   140007553:	call   QWORD PTR [rip+0x190bf]        # 0x140020618
   140007559:	lea    rcx,[rsp+0x38]
   14000755e:	mov    rdx,rax
   140007561:	call   QWORD PTR [rip+0x19241]        # 0x1400207a8
   140007567:	lea    rcx,[rsp+0xd0]
   14000756f:	call   QWORD PTR [rip+0x1920b]        # 0x140020780
   140007575:	mov    rdi,QWORD PTR [rsp+0x58]
   14000757a:	mov    eax,DWORD PTR [rdi]
   14000757c:	test   eax,eax
   14000757e:	je     0x140007595
   140007580:	cmp    eax,0xffffffff
   140007583:	je     0x1400075cb
   140007585:	lock add DWORD PTR [rdi],0xffffffff
   140007589:	setne  al
   14000758c:	test   al,al
   14000758e:	jne    0x1400075cb
   140007590:	mov    rdi,QWORD PTR [rsp+0x58]
   140007595:	movsxd rax,DWORD PTR [rdi+0xc]
   140007599:	lea    rbx,[rdi+rax*8+0x10]
   14000759e:	movsxd rax,DWORD PTR [rdi+0x8]
   1400075a2:	lea    rsi,[rdi+rax*8+0x10]
   1400075a7:	cmp    rsi,rbx
   1400075aa:	je     0x1400075c2
   1400075ac:	nop    DWORD PTR [rax+0x0]
   1400075b0:	sub    rbx,0x8
   1400075b4:	mov    rcx,rbx
   1400075b7:	call   QWORD PTR [rip+0x1913b]        # 0x1400206f8
   1400075bd:	cmp    rbx,rsi
   1400075c0:	jne    0x1400075b0
   1400075c2:	mov    rcx,rdi
   1400075c5:	call   QWORD PTR [rip+0x19105]        # 0x1400206d0
   1400075cb:	lea    rcx,[rsp+0x1b8]
   1400075d3:	mov    dl,0x20
   1400075d5:	call   QWORD PTR [rip+0x191b5]        # 0x140020790
   1400075db:	lea    rcx,[rsp+0x38]
   1400075e0:	movzx  edx,WORD PTR [rax]
   1400075e3:	call   QWORD PTR [rip+0x18f2f]        # 0x140020518
   1400075e9:	jmp    0x14000790b
   1400075ee:	lea    rdx,[rip+0x1950b]        # 0x140020b00
   1400075f5:	lea    rcx,[rsp+0x20]
   1400075fa:	call   QWORD PTR [rip+0x18f08]        # 0x140020508
   140007600:	test   al,al
   140007602:	je     0x1400076ce
   140007608:	lea    rdx,[rsp+0x60]
   14000760d:	lea    rcx,[rsp+0x20]
   140007612:	mov    r8b,0x20
   140007615:	call   QWORD PTR [rip+0x18ef5]        # 0x140020510
   14000761b:	mov    rcx,QWORD PTR [rax]
   14000761e:	movsxd rax,DWORD PTR [rcx+0x8]
   140007622:	lea    rdx,[rcx+rax*8+0x18]
   140007627:	lea    rcx,[rsp+0xe0]
   14000762f:	call   QWORD PTR [rip+0x18fe3]        # 0x140020618
   140007635:	lea    rcx,[rsp+0x40]
   14000763a:	mov    rdx,rax
   14000763d:	call   QWORD PTR [rip+0x19165]        # 0x1400207a8
   140007643:	lea    rcx,[rsp+0xe0]
   14000764b:	call   QWORD PTR [rip+0x1912f]        # 0x140020780
   140007651:	mov    rdi,QWORD PTR [rsp+0x60]
   140007656:	mov    eax,DWORD PTR [rdi]
   140007658:	test   eax,eax
   14000765a:	je     0x140007671
   14000765c:	cmp    eax,0xffffffff
   14000765f:	je     0x1400076ab
   140007661:	lock add DWORD PTR [rdi],0xffffffff
   140007665:	setne  al
   140007668:	test   al,al
   14000766a:	jne    0x1400076ab
   14000766c:	mov    rdi,QWORD PTR [rsp+0x60]
   140007671:	movsxd rax,DWORD PTR [rdi+0xc]
   140007675:	lea    rbx,[rdi+rax*8+0x10]
   14000767a:	movsxd rax,DWORD PTR [rdi+0x8]
   14000767e:	lea    rsi,[rdi+rax*8+0x10]
   140007683:	cmp    rsi,rbx
   140007686:	je     0x1400076a2
   140007688:	nop    DWORD PTR [rax+rax*1+0x0]
   140007690:	sub    rbx,0x8
   140007694:	mov    rcx,rbx
   140007697:	call   QWORD PTR [rip+0x1905b]        # 0x1400206f8
   14000769d:	cmp    rbx,rsi
   1400076a0:	jne    0x140007690
   1400076a2:	mov    rcx,rdi
   1400076a5:	call   QWORD PTR [rip+0x19025]        # 0x1400206d0
   1400076ab:	lea    rcx,[rsp+0x1c0]
   1400076b3:	mov    dl,0x20
   1400076b5:	call   QWORD PTR [rip+0x190d5]        # 0x140020790
   1400076bb:	lea    rcx,[rsp+0x40]
   1400076c0:	movzx  edx,WORD PTR [rax]
   1400076c3:	call   QWORD PTR [rip+0x18e4f]        # 0x140020518
   1400076c9:	jmp    0x14000790b
   1400076ce:	lea    rdx,[rip+0x19423]        # 0x140020af8
   1400076d5:	lea    rcx,[rsp+0x20]
   1400076da:	call   QWORD PTR [rip+0x18e28]        # 0x140020508
   1400076e0:	test   al,al
   1400076e2:	je     0x14000790b
   1400076e8:	lea    rdx,[rsp+0x28]
   1400076ed:	lea    rcx,[rsp+0x20]
   1400076f2:	mov    r8b,0x20
   1400076f5:	call   QWORD PTR [rip+0x18e15]        # 0x140020510
   1400076fb:	mov    r11,QWORD PTR [rsp+0x28]
   140007700:	mov    eax,DWORD PTR [r11+0xc]
   140007704:	sub    eax,DWORD PTR [r11+0x8]
   140007708:	cmp    eax,0x3
   14000770b:	je     0x140007735
   14000770d:	mov    rcx,QWORD PTR [rip+0x18a44]        # 0x140020158
   140007714:	lea    rdx,[rip+0x1939d]        # 0x140020ab8
   14000771b:	call   0x140001800
   140007720:	mov    rdx,QWORD PTR [rip+0x18a21]        # 0x140020148
   140007727:	mov    rcx,rax
   14000772a:	call   QWORD PTR [rip+0x18a10]        # 0x140020140
   140007730:	jmp    0x1400078b1
   140007735:	mov    eax,DWORD PTR [r11]
   140007738:	cmp    eax,0x1
   14000773b:	je     0x140007754
   14000773d:	test   eax,eax
   14000773f:	je     0x140007754
   140007741:	mov    edx,DWORD PTR [r11+0x4]
   140007745:	lea    rcx,[rsp+0x28]
   14000774a:	call   0x140002b60
   14000774f:	mov    r11,QWORD PTR [rsp+0x28]
   140007754:	movsxd rax,DWORD PTR [r11+0x8]
   140007758:	lea    rsi,[r11+rax*8+0x20]
   14000775d:	mov    eax,DWORD PTR [r11]
   140007760:	cmp    eax,0x1
   140007763:	je     0x14000777c
   140007765:	test   eax,eax
   140007767:	je     0x14000777c
   140007769:	mov    edx,DWORD PTR [r11+0x4]
   14000776d:	lea    rcx,[rsp+0x28]
   140007772:	call   0x140002b60
   140007777:	mov    r11,QWORD PTR [rsp+0x28]
   14000777c:	movsxd rax,DWORD PTR [r11+0x8]
   140007780:	lea    rdx,[rip+0x19329]        # 0x140020ab0
   140007787:	lea    rcx,[rsp+0xa8]
   14000778f:	mov    r8d,0x1
   140007795:	lea    rdi,[r11+rax*8+0x18]
   14000779a:	call   QWORD PTR [rip+0x18de0]        # 0x140020580
   1400077a0:	lea    rcx,[rsp+0xd8]
   1400077a8:	mov    rdx,rdi
   1400077ab:	mov    rbx,rax
   1400077ae:	call   QWORD PTR [rip+0x18e64]        # 0x140020618
   1400077b4:	lea    rcx,[rsp+0x78]
   1400077b9:	mov    QWORD PTR [rsp+0x118],rax
   1400077c1:	lea    rax,[rsp+0x118]
   1400077c9:	mov    rdx,rsi
   1400077cc:	mov    QWORD PTR [rsp+0xf8],rax
   1400077d4:	mov    QWORD PTR [rsp+0x120],rbx
   1400077dc:	call   QWORD PTR [rip+0x18e36]        # 0x140020618
   1400077e2:	lea    rdx,[rsp+0xc8]
   1400077ea:	mov    rcx,rax
   1400077ed:	call   QWORD PTR [rip+0x18d2d]        # 0x140020520
   1400077f3:	lea    rdx,[rsp+0x48]
   1400077f8:	lea    rcx,[rsp+0xf8]
   140007800:	mov    QWORD PTR [rsp+0x100],rax
   140007808:	call   0x140002020
   14000780d:	mov    r11,QWORD PTR [rsp+0x30]
   140007812:	mov    eax,DWORD PTR [r11]
   140007815:	cmp    eax,0x1
   140007818:	je     0x140007848
   14000781a:	test   eax,eax
   14000781c:	je     0x140007848
   14000781e:	lea    rcx,[rsp+0x30]
   140007823:	mov    edx,0x7fffffff
   140007828:	mov    r8d,0x1
   14000782e:	call   0x1400026c0
   140007833:	test   rax,rax
   140007836:	je     0x140007871
   140007838:	lea    rdx,[rsp+0x48]
   14000783d:	mov    rcx,rax
   140007840:	call   QWORD PTR [rip+0x18f52]        # 0x140020798
   140007846:	jmp    0x140007871
   140007848:	lea    rdx,[rsp+0x48]
   14000784d:	lea    rcx,[rsp+0xb0]
   140007855:	call   QWORD PTR [rip+0x18f3d]        # 0x140020798
   14000785b:	lea    rcx,[rsp+0x30]
   140007860:	call   QWORD PTR [rip+0x18dd2]        # 0x140020638
   140007866:	mov    rcx,QWORD PTR [rsp+0xb0]
   14000786e:	mov    QWORD PTR [rax],rcx
   140007871:	lea    rcx,[rsp+0x48]
   140007876:	call   QWORD PTR [rip+0x18f04]        # 0x140020780
   14000787c:	lea    rcx,[rsp+0xd8]
   140007884:	call   QWORD PTR [rip+0x18ef6]        # 0x140020780
   14000788a:	lea    rcx,[rsp+0xa8]
   140007892:	call   QWORD PTR [rip+0x18ee8]        # 0x140020780
   140007898:	lea    rcx,[rsp+0xc8]
   1400078a0:	call   QWORD PTR [rip+0x18eda]        # 0x140020780
   1400078a6:	lea    rcx,[rsp+0x78]
   1400078ab:	call   QWORD PTR [rip+0x18ecf]        # 0x140020780
   1400078b1:	mov    rdi,QWORD PTR [rsp+0x28]
   1400078b6:	mov    eax,DWORD PTR [rdi]
   1400078b8:	test   eax,eax
   1400078ba:	je     0x1400078d1
   1400078bc:	cmp    eax,0xffffffff
   1400078bf:	je     0x14000790b
   1400078c1:	lock add DWORD PTR [rdi],0xffffffff
   1400078c5:	setne  al
   1400078c8:	test   al,al
   1400078ca:	jne    0x14000790b
   1400078cc:	mov    rdi,QWORD PTR [rsp+0x28]
   1400078d1:	movsxd rax,DWORD PTR [rdi+0xc]
   1400078d5:	lea    rbx,[rdi+rax*8+0x10]
   1400078da:	movsxd rax,DWORD PTR [rdi+0x8]
   1400078de:	lea    rsi,[rdi+rax*8+0x10]
   1400078e3:	cmp    rsi,rbx
   1400078e6:	je     0x140007902
   1400078e8:	nop    DWORD PTR [rax+rax*1+0x0]
   1400078f0:	sub    rbx,0x8
   1400078f4:	mov    rcx,rbx
   1400078f7:	call   QWORD PTR [rip+0x18dfb]        # 0x1400206f8
   1400078fd:	cmp    rbx,rsi
   140007900:	jne    0x1400078f0
   140007902:	mov    rcx,rdi
   140007905:	call   QWORD PTR [rip+0x18dc5]        # 0x1400206d0
   14000790b:	mov    rax,QWORD PTR [rsp+0x20]
   140007910:	cmp    DWORD PTR [rax+0x4],0x0
   140007914:	jg     0x1400074e0
   14000791a:	mov    rbx,QWORD PTR [rip+0x18e37]        # 0x140020758
   140007921:	lea    rdx,[rsp+0xa0]
   140007929:	lea    rcx,[rsp+0x38]
   14000792e:	mov    QWORD PTR [rsp+0x1c8],rbx
   140007936:	call   QWORD PTR [rip+0x18be4]        # 0x140020520
   14000793c:	lea    rcx,[rsp+0x108]
   140007944:	mov    rdx,rax
   140007947:	call   QWORD PTR [rip+0x18c2b]        # 0x140020578
   14000794d:	lea    rdx,[rip+0x19154]        # 0x140020aa8
   140007954:	lea    rcx,[rsp+0x90]
   14000795c:	mov    r8d,0x7
   140007962:	call   QWORD PTR [rip+0x18c18]        # 0x140020580
   140007968:	mov    ecx,DWORD PTR [rbx]
   14000796a:	mov    rsi,rax
   14000796d:	cmp    ecx,0x1
   140007970:	je     0x1400079d9
   140007972:	test   ecx,ecx
   140007974:	je     0x1400079d9
   140007976:	call   QWORD PTR [rip+0x18db4]        # 0x140020730
   14000797c:	mov    rcx,QWORD PTR [rbx+0x10]
   140007980:	mov    rdi,rax
   140007983:	test   rcx,rcx
   140007986:	je     0x14000799f
   140007988:	mov    rdx,rax
   14000798b:	call   0x140001210
   140007990:	lea    rcx,[rdi+0x8]
   140007994:	mov    QWORD PTR [rdi+0x10],rax
   140007998:	and    QWORD PTR [rax],0x3
   14000799c:	or     QWORD PTR [rax],rcx
   14000799f:	mov    eax,DWORD PTR [rbx]
   1400079a1:	test   eax,eax
   1400079a3:	je     0x1400079bd
   1400079a5:	cmp    eax,0xffffffff
   1400079a8:	je     0x1400079c5
   1400079aa:	lock add DWORD PTR [rbx],0xffffffff
   1400079ae:	setne  al
   1400079b1:	test   al,al
   1400079b3:	jne    0x1400079c5
   1400079b5:	mov    rbx,QWORD PTR [rsp+0x1c8]
   1400079bd:	mov    rcx,rbx
   1400079c0:	call   0x1400022f0
   1400079c5:	mov    rbx,rdi
   1400079c8:	mov    rcx,rdi
   1400079cb:	mov    QWORD PTR [rsp+0x1c8],rbx
   1400079d3:	call   QWORD PTR [rip+0x18c97]        # 0x140020670
   1400079d9:	mov    rdx,rsi
   1400079dc:	mov    rcx,rbx
   1400079df:	call   0x140001c60
   1400079e4:	test   rax,rax
   1400079e7:	jne    0x140007a31
   1400079e9:	lea    rcx,[rsp+0x140]
   1400079f1:	call   QWORD PTR [rip+0x18be1]        # 0x1400205d8
   1400079f7:	lea    rdx,[rsp+0x138]
   1400079ff:	lea    rcx,[rsp+0x1c8]
   140007a07:	mov    r9,rax
   140007a0a:	mov    r8,rsi
   140007a0d:	call   0x140003090
   140007a12:	lea    rcx,[rsp+0x140]
   140007a1a:	mov    rdi,QWORD PTR [rax]
   140007a1d:	add    rdi,0x20
   140007a21:	call   QWORD PTR [rip+0x18d21]        # 0x140020748
   140007a27:	mov    rbx,QWORD PTR [rsp+0x1c8]
   140007a2f:	jmp    0x140007a35
   140007a31:	lea    rdi,[rax+0x20]
   140007a35:	lea    rdx,[rsp+0x108]
   140007a3d:	mov    rcx,rdi
   140007a40:	call   QWORD PTR [rip+0x18be2]        # 0x140020628
   140007a46:	lea    rcx,[rsp+0x90]
   140007a4e:	call   QWORD PTR [rip+0x18d2c]        # 0x140020780
   140007a54:	lea    rcx,[rsp+0x108]
   140007a5c:	call   QWORD PTR [rip+0x18ce6]        # 0x140020748
   140007a62:	lea    rcx,[rsp+0xa0]
   140007a6a:	call   QWORD PTR [rip+0x18d10]        # 0x140020780
   140007a70:	lea    rdx,[rsp+0xc0]
   140007a78:	lea    rcx,[rsp+0x40]
   140007a7d:	call   QWORD PTR [rip+0x18a9d]        # 0x140020520
   140007a83:	lea    rcx,[rsp+0x128]
   140007a8b:	mov    rdx,rax
   140007a8e:	call   QWORD PTR [rip+0x18ae4]        # 0x140020578
   140007a94:	lea    rdx,[rip+0x18ffd]        # 0x140020a98
   140007a9b:	lea    rcx,[rsp+0x88]
   140007aa3:	mov    r8d,0xa
   140007aa9:	call   QWORD PTR [rip+0x18ad1]        # 0x140020580
   140007aaf:	mov    ecx,DWORD PTR [rbx]
   140007ab1:	mov    rsi,rax
   140007ab4:	cmp    ecx,0x1
   140007ab7:	je     0x140007b20
   140007ab9:	test   ecx,ecx
   140007abb:	je     0x140007b20
   140007abd:	call   QWORD PTR [rip+0x18c6d]        # 0x140020730
   140007ac3:	mov    rcx,QWORD PTR [rbx+0x10]
   140007ac7:	mov    rdi,rax
   140007aca:	test   rcx,rcx
   140007acd:	je     0x140007ae6
   140007acf:	mov    rdx,rax
   140007ad2:	call   0x140001210
   140007ad7:	lea    rcx,[rdi+0x8]
   140007adb:	mov    QWORD PTR [rdi+0x10],rax
   140007adf:	and    QWORD PTR [rax],0x3
   140007ae3:	or     QWORD PTR [rax],rcx
   140007ae6:	mov    eax,DWORD PTR [rbx]
   140007ae8:	test   eax,eax
   140007aea:	je     0x140007b04
   140007aec:	cmp    eax,0xffffffff
   140007aef:	je     0x140007b0c
   140007af1:	lock add DWORD PTR [rbx],0xffffffff
   140007af5:	setne  al
   140007af8:	test   al,al
   140007afa:	jne    0x140007b0c
   140007afc:	mov    rbx,QWORD PTR [rsp+0x1c8]
   140007b04:	mov    rcx,rbx
   140007b07:	call   0x1400022f0
   140007b0c:	mov    rbx,rdi
   140007b0f:	mov    rcx,rdi
   140007b12:	mov    QWORD PTR [rsp+0x1c8],rbx
   140007b1a:	call   QWORD PTR [rip+0x18b50]        # 0x140020670
   140007b20:	mov    rdx,rsi
   140007b23:	mov    rcx,rbx
   140007b26:	call   0x140001c60
   140007b2b:	test   rax,rax
   140007b2e:	jne    0x140007b78
   140007b30:	lea    rcx,[rsp+0x158]
   140007b38:	call   QWORD PTR [rip+0x18a9a]        # 0x1400205d8
   140007b3e:	lea    rdx,[rsp+0x150]
   140007b46:	lea    rcx,[rsp+0x1c8]
   140007b4e:	mov    r9,rax
   140007b51:	mov    r8,rsi
   140007b54:	call   0x140003090
   140007b59:	lea    rcx,[rsp+0x158]
   140007b61:	mov    rdi,QWORD PTR [rax]
   140007b64:	add    rdi,0x20
   140007b68:	call   QWORD PTR [rip+0x18bda]        # 0x140020748
   140007b6e:	mov    rbx,QWORD PTR [rsp+0x1c8]
   140007b76:	jmp    0x140007b7c
   140007b78:	lea    rdi,[rax+0x20]
   140007b7c:	lea    rdx,[rsp+0x128]
   140007b84:	mov    rcx,rdi
   140007b87:	call   QWORD PTR [rip+0x18a9b]        # 0x140020628
   140007b8d:	lea    rcx,[rsp+0x88]
   140007b95:	call   QWORD PTR [rip+0x18be5]        # 0x140020780
   140007b9b:	lea    rcx,[rsp+0x128]
   140007ba3:	call   QWORD PTR [rip+0x18b9f]        # 0x140020748
   140007ba9:	lea    rcx,[rsp+0xc0]
   140007bb1:	call   QWORD PTR [rip+0x18bc9]        # 0x140020780
   140007bb7:	mov    r11,QWORD PTR [rsp+0x30]
   140007bbc:	mov    eax,DWORD PTR [r11+0xc]
   140007bc0:	cmp    eax,DWORD PTR [r11+0x8]
   140007bc4:	je     0x140007cf2
   140007bca:	lea    rdx,[rsp+0x30]
   140007bcf:	lea    rcx,[rsp+0xe8]
   140007bd7:	call   QWORD PTR [rip+0x1894b]        # 0x140020528
   140007bdd:	lea    rdx,[rip+0x18ea4]        # 0x140020a88
   140007be4:	lea    rcx,[rsp+0x80]
   140007bec:	mov    r8d,0xc
   140007bf2:	call   QWORD PTR [rip+0x18988]        # 0x140020580
   140007bf8:	mov    ecx,DWORD PTR [rbx]
   140007bfa:	mov    rsi,rax
   140007bfd:	cmp    ecx,0x1
   140007c00:	je     0x140007c69
   140007c02:	test   ecx,ecx
   140007c04:	je     0x140007c69
   140007c06:	call   QWORD PTR [rip+0x18b24]        # 0x140020730
   140007c0c:	mov    rcx,QWORD PTR [rbx+0x10]
   140007c10:	mov    rdi,rax
   140007c13:	test   rcx,rcx
   140007c16:	je     0x140007c2f
   140007c18:	mov    rdx,rax
   140007c1b:	call   0x140001210
   140007c20:	lea    rcx,[rdi+0x8]
   140007c24:	mov    QWORD PTR [rdi+0x10],rax
   140007c28:	and    QWORD PTR [rax],0x3
   140007c2c:	or     QWORD PTR [rax],rcx
   140007c2f:	mov    eax,DWORD PTR [rbx]
   140007c31:	test   eax,eax
   140007c33:	je     0x140007c4d
   140007c35:	cmp    eax,0xffffffff
   140007c38:	je     0x140007c55
   140007c3a:	lock add DWORD PTR [rbx],0xffffffff
   140007c3e:	setne  al
   140007c41:	test   al,al
   140007c43:	jne    0x140007c55
   140007c45:	mov    rbx,QWORD PTR [rsp+0x1c8]
   140007c4d:	mov    rcx,rbx
   140007c50:	call   0x1400022f0
   140007c55:	mov    rbx,rdi
   140007c58:	mov    rcx,rdi
   140007c5b:	mov    QWORD PTR [rsp+0x1c8],rbx
   140007c63:	call   QWORD PTR [rip+0x18a07]        # 0x140020670
   140007c69:	mov    rdx,rsi
   140007c6c:	mov    rcx,rbx
   140007c6f:	call   0x140001c60
   140007c74:	test   rax,rax
   140007c77:	jne    0x140007cc1
   140007c79:	lea    rcx,[rsp+0x170]
   140007c81:	call   QWORD PTR [rip+0x18951]        # 0x1400205d8
   140007c87:	lea    rdx,[rsp+0x168]
   140007c8f:	lea    rcx,[rsp+0x1c8]
   140007c97:	mov    r9,rax
   140007c9a:	mov    r8,rsi
   140007c9d:	call   0x140003090
   140007ca2:	lea    rcx,[rsp+0x170]
   140007caa:	mov    rdi,QWORD PTR [rax]
   140007cad:	add    rdi,0x20
   140007cb1:	call   QWORD PTR [rip+0x18a91]        # 0x140020748
   140007cb7:	mov    rbx,QWORD PTR [rsp+0x1c8]
   140007cbf:	jmp    0x140007cc5
   140007cc1:	lea    rdi,[rax+0x20]
   140007cc5:	lea    rdx,[rsp+0xe8]
   140007ccd:	mov    rcx,rdi
   140007cd0:	call   QWORD PTR [rip+0x18952]        # 0x140020628
   140007cd6:	lea    rcx,[rsp+0x80]
   140007cde:	call   QWORD PTR [rip+0x18a9c]        # 0x140020780
   140007ce4:	lea    rcx,[rsp+0xe8]
   140007cec:	call   QWORD PTR [rip+0x18a56]        # 0x140020748
   140007cf2:	mov    eax,DWORD PTR [rbx]
   140007cf4:	test   eax,eax
   140007cf6:	je     0x140007d0f
   140007cf8:	cmp    eax,0xffffffff
   140007cfb:	je     0x140007d09
   140007cfd:	lock add DWORD PTR [rbx],0x1
   140007d01:	mov    rbx,QWORD PTR [rsp+0x1c8]
   140007d09:	mov    QWORD PTR [r12],rbx
   140007d0d:	jmp    0x140007d43
   140007d0f:	call   QWORD PTR [rip+0x18a1b]        # 0x140020730
   140007d15:	mov    rcx,QWORD PTR [rbx+0x10]
   140007d19:	mov    QWORD PTR [r12],rax
   140007d1d:	test   rcx,rcx
   140007d20:	je     0x140007d43
   140007d22:	mov    rdx,rax
   140007d25:	call   0x140001210
   140007d2a:	mov    rcx,QWORD PTR [r12]
   140007d2e:	mov    QWORD PTR [rcx+0x10],rax
   140007d32:	and    QWORD PTR [rax],0x3
   140007d36:	lea    rdx,[rcx+0x8]
   140007d3a:	or     QWORD PTR [rax],rdx
   140007d3d:	call   QWORD PTR [rip+0x1892d]        # 0x140020670
   140007d43:	mov    eax,DWORD PTR [rbx]
   140007d45:	test   eax,eax
   140007d47:	je     0x140007d61
   140007d49:	cmp    eax,0xffffffff
   140007d4c:	je     0x140007d69
   140007d4e:	lock add DWORD PTR [rbx],0xffffffff
   140007d52:	setne  al
   140007d55:	test   al,al
   140007d57:	jne    0x140007d69
   140007d59:	mov    rbx,QWORD PTR [rsp+0x1c8]
   140007d61:	mov    rcx,rbx
   140007d64:	call   0x1400022f0
   140007d69:	lea    rcx,[rsp+0x20]
   140007d6e:	call   QWORD PTR [rip+0x18984]        # 0x1400206f8
   140007d74:	mov    rdi,QWORD PTR [rsp+0x30]
   140007d79:	mov    eax,DWORD PTR [rdi]
   140007d7b:	test   eax,eax
   140007d7d:	je     0x140007d94
   140007d7f:	cmp    eax,0xffffffff
   140007d82:	je     0x140007dcb
   140007d84:	lock add DWORD PTR [rdi],0xffffffff
   140007d88:	setne  al
   140007d8b:	test   al,al
   140007d8d:	jne    0x140007dcb
   140007d8f:	mov    rdi,QWORD PTR [rsp+0x30]
   140007d94:	movsxd rax,DWORD PTR [rdi+0xc]
   140007d98:	lea    rbx,[rdi+rax*8+0x10]
   140007d9d:	movsxd rax,DWORD PTR [rdi+0x8]
   140007da1:	lea    rsi,[rdi+rax*8+0x10]
   140007da6:	cmp    rsi,rbx
   140007da9:	je     0x140007dc2
   140007dab:	nop    DWORD PTR [rax+rax*1+0x0]
   140007db0:	sub    rbx,0x8
   140007db4:	mov    rcx,rbx
   140007db7:	call   QWORD PTR [rip+0x189c3]        # 0x140020780
   140007dbd:	cmp    rbx,rsi
   140007dc0:	jne    0x140007db0
   140007dc2:	mov    rcx,rdi
   140007dc5:	call   QWORD PTR [rip+0x18905]        # 0x1400206d0
   140007dcb:	lea    rcx,[rsp+0x40]
   140007dd0:	call   QWORD PTR [rip+0x189aa]        # 0x140020780
   140007dd6:	lea    rcx,[rsp+0x38]
   140007ddb:	call   QWORD PTR [rip+0x1899f]        # 0x140020780
   140007de1:	lea    rcx,[rsp+0x68]
   140007de6:	call   QWORD PTR [rip+0x1881c]        # 0x140020608
   140007dec:	mov    rsi,QWORD PTR [rsp+0x180]
   140007df4:	mov    rbp,QWORD PTR [rsp+0x188]
   140007dfc:	mov    rax,r12
   140007dff:	add    rsp,0x190
   140007e06:	pop    r12
   140007e08:	pop    rdi
   140007e09:	pop    rbx
   140007e0a:	ret    
   140007e0b:	int3   
   140007e0c:	int3   
   140007e0d:	int3   
   140007e0e:	int3   
   140007e0f:	int3   
   140007e10:	rex push rdi
   140007e12:	push   r14
   140007e14:	push   r15
   140007e16:	sub    rsp,0x40
   140007e1a:	mov    rdi,QWORD PTR [rcx]
   140007e1d:	mov    QWORD PTR [rsp+0x68],rbx
   140007e22:	mov    QWORD PTR [rsp+0x78],rsi
   140007e27:	mov    eax,DWORD PTR [rdi+0x10]
   140007e2a:	mov    rsi,rdx
   140007e2d:	mov    r14,rcx
   140007e30:	test   eax,eax
   140007e32:	je     0x140007e3e
   140007e34:	cmp    eax,0xffffffff
   140007e37:	je     0x140007e3e
   140007e39:	lock add DWORD PTR [rdi+0x10],0x1
   140007e3e:	test   BYTE PTR [rdi+0x28],0x1
   140007e42:	jne    0x140007ea3
   140007e44:	mov    eax,DWORD PTR [rdi+0x10]
   140007e47:	cmp    eax,0x1
   140007e4a:	je     0x140007ea3
   140007e4c:	test   eax,eax
   140007e4e:	je     0x140007ea3
   140007e50:	lea    r8,[rip+0xffffffffffffa489]        # 0x1400022e0
   140007e57:	lea    rdx,[rip+0xffffffffffff9f92]        # 0x140001df0
   140007e5e:	mov    r9d,0x18
   140007e64:	mov    rcx,rdi
   140007e67:	mov    DWORD PTR [rsp+0x20],0x8
   140007e6f:	call   QWORD PTR [rip+0x187bb]        # 0x140020630
   140007e75:	mov    ecx,DWORD PTR [rdi+0x10]
   140007e78:	mov    rbx,rax
   140007e7b:	test   ecx,ecx
   140007e7d:	je     0x140007e90
   140007e7f:	cmp    ecx,0xffffffff
   140007e82:	je     0x140007ea0
   140007e84:	lock add DWORD PTR [rdi+0x10],0xffffffff
   140007e89:	setne  cl
   140007e8c:	test   cl,cl
   140007e8e:	jne    0x140007ea0
   140007e90:	lea    rdx,[rip+0xffffffffffffa449]        # 0x1400022e0
   140007e97:	mov    rcx,rdi
   140007e9a:	call   QWORD PTR [rip+0x187c8]        # 0x140020668
   140007ea0:	mov    rdi,rbx
   140007ea3:	mov    rbx,QWORD PTR [rsi]
   140007ea6:	mov    eax,DWORD PTR [rbx+0x10]
   140007ea9:	mov    QWORD PTR [rsp+0x60],rbx
   140007eae:	lea    rsi,[rbx+0x10]
   140007eb2:	test   eax,eax
   140007eb4:	je     0x140007ec4
   140007eb6:	cmp    eax,0xffffffff
   140007eb9:	je     0x140007ec4
   140007ebb:	lock add DWORD PTR [rsi],0x1
   140007ebf:	mov    rbx,QWORD PTR [rsp+0x60]
   140007ec4:	test   BYTE PTR [rbx+0x28],0x1
   140007ec8:	mov    QWORD PTR [rsp+0x70],rbp
   140007ecd:	jne    0x140007f35
   140007ecf:	mov    eax,DWORD PTR [rsi]
   140007ed1:	cmp    eax,0x1
   140007ed4:	je     0x140007f35
   140007ed6:	test   eax,eax
   140007ed8:	je     0x140007f35
   140007eda:	lea    r8,[rip+0xffffffffffffa3ff]        # 0x1400022e0
   140007ee1:	lea    rdx,[rip+0xffffffffffff9f08]        # 0x140001df0
   140007ee8:	mov    r9d,0x18
   140007eee:	mov    rcx,rbx
   140007ef1:	mov    DWORD PTR [rsp+0x20],0x8
   140007ef9:	call   QWORD PTR [rip+0x18731]        # 0x140020630
   140007eff:	mov    ecx,DWORD PTR [rsi]
   140007f01:	mov    rbp,rax
   140007f04:	test   ecx,ecx
   140007f06:	je     0x140007f1d
   140007f08:	cmp    ecx,0xffffffff
   140007f0b:	je     0x140007f2d
   140007f0d:	lock add DWORD PTR [rsi],0xffffffff
   140007f11:	setne  cl
   140007f14:	test   cl,cl
   140007f16:	jne    0x140007f2d
   140007f18:	mov    rbx,QWORD PTR [rsp+0x60]
   140007f1d:	lea    rdx,[rip+0xffffffffffffa3bc]        # 0x1400022e0
   140007f24:	mov    rcx,rbx
   140007f27:	call   QWORD PTR [rip+0x1873b]        # 0x140020668
   140007f2d:	mov    rbx,rbp
   140007f30:	mov    QWORD PTR [rsp+0x60],rbx
   140007f35:	mov    rcx,rdi
   140007f38:	mov    rsi,rdi
   140007f3b:	call   QWORD PTR [rip+0x1849f]        # 0x1400203e0
   140007f41:	cmp    rdi,rax
   140007f44:	je     0x140007fe5
   140007f4a:	mov    QWORD PTR [rsp+0x38],r12
   140007f4f:	mov    QWORD PTR [rsp+0x30],r13
   140007f54:	mov    rcx,rsi
   140007f57:	call   QWORD PTR [rip+0x187c3]        # 0x140020720
   140007f5d:	cmp    DWORD PTR [rbx+0x20],0x0
   140007f61:	mov    rsi,rax
   140007f64:	je     0x140007fc9
   140007f66:	mov    edx,DWORD PTR [rbx+0x24]
   140007f69:	lea    rcx,[rax+0x10]
   140007f6d:	call   QWORD PTR [rip+0x1871d]        # 0x140020690
   140007f73:	mov    ecx,DWORD PTR [rbx+0x20]
   140007f76:	mov    r13d,eax
   140007f79:	test   ecx,ecx
   140007f7b:	je     0x140007fc9
   140007f7d:	xor    edx,edx
   140007f7f:	div    ecx
   140007f81:	mov    rcx,QWORD PTR [rbx+0x8]
   140007f85:	lea    rbp,[rcx+rdx*8]
   140007f89:	mov    rcx,QWORD PTR [rcx+rdx*8]
   140007f8d:	cmp    rcx,rbx
   140007f90:	je     0x140007fb7
   140007f92:	cmp    r13d,DWORD PTR [rcx+0x8]
   140007f96:	jne    0x140007faa
   140007f98:	lea    rdx,[rcx+0x10]
   140007f9c:	lea    rcx,[rsi+0x10]
   140007fa0:	call   QWORD PTR [rip+0x1874a]        # 0x1400206f0
   140007fa6:	test   al,al
   140007fa8:	jne    0x140007fb7
   140007faa:	mov    rbp,QWORD PTR [rbp+0x0]
   140007fae:	mov    rcx,QWORD PTR [rbp+0x0]
   140007fb2:	cmp    rcx,rbx
   140007fb5:	jne    0x140007f92
   140007fb7:	cmp    QWORD PTR [rbp+0x0],rbx
   140007fbb:	je     0x140007fc9
   140007fbd:	lea    rdx,[rsi+0x10]
   140007fc1:	mov    rcx,r14
   140007fc4:	call   0x140003fd0
   140007fc9:	mov    rcx,rdi
   140007fcc:	call   QWORD PTR [rip+0x1840e]        # 0x1400203e0
   140007fd2:	cmp    rsi,rax
   140007fd5:	jne    0x140007f54
   140007fdb:	mov    r13,QWORD PTR [rsp+0x30]
   140007fe0:	mov    r12,QWORD PTR [rsp+0x38]
   140007fe5:	mov    eax,DWORD PTR [rbx+0x10]
   140007fe8:	mov    rsi,QWORD PTR [rsp+0x78]
   140007fed:	mov    rbp,QWORD PTR [rsp+0x70]
   140007ff2:	test   eax,eax
   140007ff4:	je     0x14000800c
   140007ff6:	cmp    eax,0xffffffff
   140007ff9:	je     0x14000801c
   140007ffb:	lock add DWORD PTR [rbx+0x10],0xffffffff
   140008000:	setne  al
   140008003:	test   al,al
   140008005:	jne    0x14000801c
   140008007:	mov    rbx,QWORD PTR [rsp+0x60]
   14000800c:	lea    rdx,[rip+0xffffffffffffa2cd]        # 0x1400022e0
   140008013:	mov    rcx,rbx
   140008016:	call   QWORD PTR [rip+0x1864c]        # 0x140020668
   14000801c:	mov    eax,DWORD PTR [rdi+0x10]
   14000801f:	mov    rbx,QWORD PTR [rsp+0x68]
   140008024:	test   eax,eax
   140008026:	je     0x140008039
   140008028:	cmp    eax,0xffffffff
   14000802b:	je     0x140008049
   14000802d:	lock add DWORD PTR [rdi+0x10],0xffffffff
   140008032:	setne  al
   140008035:	test   al,al
   140008037:	jne    0x140008049
   140008039:	lea    rdx,[rip+0xffffffffffffa2a0]        # 0x1400022e0
   140008040:	mov    rcx,rdi
   140008043:	call   QWORD PTR [rip+0x1861f]        # 0x140020668
   140008049:	mov    rax,r14
   14000804c:	add    rsp,0x40
   140008050:	pop    r15
   140008052:	pop    r14
   140008054:	pop    rdi
   140008055:	ret    
   140008056:	int3   
   140008057:	int3   
   140008058:	int3   
   140008059:	int3   
   14000805a:	int3   
   14000805b:	int3   
   14000805c:	int3   
   14000805d:	int3   
   14000805e:	int3   
   14000805f:	int3   
   140008060:	mov    QWORD PTR [rsp+0x8],rbx
   140008065:	push   rdi
   140008066:	sub    rsp,0x100
   14000806d:	mov    rdi,rcx
   140008070:	mov    rcx,rdx
   140008073:	mov    rbx,rdx
   140008076:	call   QWORD PTR [rip+0x185c4]        # 0x140020640
   14000807c:	cmp    eax,0x8
   14000807f:	jne    0x140008155
   140008085:	mov    rcx,rbx
   140008088:	call   QWORD PTR [rip+0x185ba]        # 0x140020648
   14000808e:	mov    QWORD PTR [rsp+0x20],rax
   140008093:	xor    eax,eax
   140008095:	mov    QWORD PTR [rsp+0x28],rax
   14000809a:	mov    DWORD PTR [rsp+0x34],eax
   14000809e:	mov    DWORD PTR [rsp+0x3c],eax
   1400080a2:	lea    rax,[rip+0xffffffffffffaf47]        # 0x140002ff0
   1400080a9:	mov    QWORD PTR [rsp+0x40],rax
   1400080ae:	lea    rax,[rip+0xffffffffffffa74b]        # 0x140002800
   1400080b5:	mov    QWORD PTR [rsp+0x48],rax
   1400080ba:	lea    rax,[rip+0xffffffffffffa04f]        # 0x140002110
   1400080c1:	mov    QWORD PTR [rsp+0x50],rax
   1400080c6:	lea    rax,[rip+0xffffffffffffa0a3]        # 0x140002170
   1400080cd:	mov    QWORD PTR [rsp+0x58],rax
   1400080d2:	lea    rax,[rip+0xffffffffffffaf67]        # 0x140003040
   1400080d9:	mov    QWORD PTR [rsp+0x60],rax
   1400080de:	lea    rax,[rip+0xffffffffffffa1db]        # 0x1400022c0
   1400080e5:	mov    QWORD PTR [rsp+0x68],rax
   1400080ea:	lea    rax,[rip+0xffffffffffffa0cf]        # 0x1400021c0
   1400080f1:	mov    QWORD PTR [rsp+0x70],rax
   1400080f6:	lea    rax,[rip+0xffffffffffff9053]        # 0x140001150
   1400080fd:	mov    QWORD PTR [rsp+0x78],rax
   140008102:	lea    rax,[rip+0xffffffffffff9ac7]        # 0x140001bd0
   140008109:	mov    QWORD PTR [rsp+0x80],rax
   140008111:	lea    rax,[rip+0xffffffffffff8fe8]        # 0x140001100
   140008118:	lea    rcx,[rsp+0x90]
   140008120:	lea    rdx,[rsp+0x20]
   140008125:	mov    r8d,0x70
   14000812b:	mov    DWORD PTR [rsp+0x38],0x29
   140008133:	mov    DWORD PTR [rsp+0x30],0xa
   14000813b:	mov    QWORD PTR [rsp+0x88],rax
   140008143:	call   0x14001edd4
   140008148:	lea    rdx,[rsp+0x90]
   140008150:	jmp    0x140008223
   140008155:	cmp    eax,0x1c
   140008158:	jne    0x1400081f6
   14000815e:	mov    rcx,rbx
   140008161:	call   QWORD PTR [rip+0x184e1]        # 0x140020648
   140008167:	mov    QWORD PTR [rsp+0x20],rax
   14000816c:	xor    eax,eax
   14000816e:	mov    QWORD PTR [rsp+0x28],rax
   140008173:	mov    DWORD PTR [rsp+0x34],eax
   140008177:	mov    DWORD PTR [rsp+0x3c],eax
   14000817b:	lea    rax,[rip+0xffffffffffffa6ee]        # 0x140002870
   140008182:	mov    QWORD PTR [rsp+0x40],rax
   140008187:	lea    rax,[rip+0xffffffffffffa742]        # 0x1400028d0
   14000818e:	mov    QWORD PTR [rsp+0x48],rax
   140008193:	lea    rax,[rip+0xffffffffffffa046]        # 0x1400021e0
   14000819a:	mov    QWORD PTR [rsp+0x50],rax
   14000819f:	lea    rax,[rip+0xffffffffffffa0aa]        # 0x140002250
   1400081a6:	mov    QWORD PTR [rsp+0x58],rax
   1400081ab:	lea    rax,[rip+0xffffffffffffa79e]        # 0x140002950
   1400081b2:	mov    QWORD PTR [rsp+0x60],rax
   1400081b7:	lea    rax,[rip+0xffffffffffffa0e2]        # 0x1400022a0
   1400081be:	mov    QWORD PTR [rsp+0x68],rax
   1400081c3:	lea    rax,[rip+0xffffffffffffa0f6]        # 0x1400022c0
   1400081ca:	mov    QWORD PTR [rsp+0x70],rax
   1400081cf:	lea    rax,[rip+0xffffffffffff8f7a]        # 0x140001150
   1400081d6:	mov    QWORD PTR [rsp+0x78],rax
   1400081db:	lea    rax,[rip+0xffffffffffff99ee]        # 0x140001bd0
   1400081e2:	mov    QWORD PTR [rsp+0x80],rax
   1400081ea:	lea    rax,[rip+0xffffffffffff8f0f]        # 0x140001100
   1400081f1:	jmp    0x140008118
   1400081f6:	lea    rcx,[rsp+0x90]
   1400081fe:	mov    rdx,rbx
   140008201:	call   0x1400040d0
   140008206:	lea    rcx,[rsp+0x20]
   14000820b:	lea    rdx,[rsp+0x90]
   140008213:	mov    r8d,0x70
   140008219:	call   0x14001edd4
   14000821e:	lea    rdx,[rsp+0x20]
   140008223:	mov    rcx,rdi
   140008226:	call   QWORD PTR [rip+0x180a4]        # 0x1400202d0
   14000822c:	mov    rbx,QWORD PTR [rsp+0x110]
   140008234:	mov    rax,rdi
   140008237:	add    rsp,0x100
   14000823e:	pop    rdi
   14000823f:	ret    
   140008240:	rex push rbx
   140008242:	push   rdi
   140008243:	push   r12
   140008245:	sub    rsp,0x1c0
   14000824c:	mov    r12,rcx
   14000824f:	mov    rcx,rdx
   140008252:	mov    rbx,rdx
   140008255:	call   QWORD PTR [rip+0x183e5]        # 0x140020640
   14000825b:	mov    edi,eax
   14000825d:	cmp    eax,0x1c
   140008260:	je     0x14000828f
   140008262:	call   0x140002d00
   140008267:	mov    ecx,edi
   140008269:	mov    edx,eax
   14000826b:	call   QWORD PTR [rip+0x180a7]        # 0x140020318
   140008271:	test   al,al
   140008273:	jne    0x14000828f
   140008275:	mov    rdx,rbx
   140008278:	mov    rcx,r12
   14000827b:	call   0x140002de0
   140008280:	mov    rax,r12
   140008283:	add    rsp,0x1c0
   14000828a:	pop    r12
   14000828c:	pop    rdi
   14000828d:	pop    rbx
   14000828e:	ret    
   14000828f:	lea    rcx,[rsp+0x150]
   140008297:	mov    rdx,rbx
   14000829a:	mov    QWORD PTR [rsp+0x1e0],rbp
   1400082a2:	call   0x140008060
   1400082a7:	mov    rbx,QWORD PTR [rip+0x184aa]        # 0x140020758
   1400082ae:	lea    rdx,[rsp+0x50]
   1400082b3:	lea    rcx,[rsp+0x150]
   1400082bb:	call   QWORD PTR [rip+0x1804f]        # 0x140020310
   1400082c1:	lea    rdx,[rsp+0xd0]
   1400082c9:	lea    rcx,[rsp+0x150]
   1400082d1:	call   QWORD PTR [rip+0x18031]        # 0x140020308
   1400082d7:	lea    rdx,[rsp+0xd0]
   1400082df:	lea    rcx,[rsp+0x50]
   1400082e4:	call   QWORD PTR [rip+0x18016]        # 0x140020300
   1400082ea:	or     ebp,0xffffffff
   1400082ed:	test   al,al
   1400082ef:	je     0x14000847f
   1400082f5:	mov    QWORD PTR [rsp+0x1e8],rsi
   1400082fd:	mov    QWORD PTR [rsp+0x1f8],r13
   140008305:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140008310:	lea    rdx,[rsp+0x30]
   140008315:	lea    rcx,[rsp+0x50]
   14000831a:	call   QWORD PTR [rip+0x17fd8]        # 0x1400202f8
   140008320:	lea    rdx,[rsp+0x40]
   140008325:	lea    rcx,[rsp+0x50]
   14000832a:	mov    r13,rax
   14000832d:	call   QWORD PTR [rip+0x17fbd]        # 0x1400202f0
   140008333:	lea    rdx,[rsp+0x1f0]
   14000833b:	mov    rcx,rax
   14000833e:	call   QWORD PTR [rip+0x17fa4]        # 0x1400202e8
   140008344:	mov    ecx,DWORD PTR [rbx]
   140008346:	mov    rsi,rax
   140008349:	cmp    ecx,0x1
   14000834c:	je     0x1400083aa
   14000834e:	test   ecx,ecx
   140008350:	je     0x1400083aa
   140008352:	call   QWORD PTR [rip+0x183d8]        # 0x140020730
   140008358:	mov    rcx,QWORD PTR [rbx+0x10]
   14000835c:	mov    rdi,rax
   14000835f:	test   rcx,rcx
   140008362:	je     0x14000837b
   140008364:	mov    rdx,rax
   140008367:	call   0x140001210
   14000836c:	lea    rcx,[rdi+0x8]
   140008370:	mov    QWORD PTR [rdi+0x10],rax
   140008374:	and    QWORD PTR [rax],0x3
   140008378:	or     QWORD PTR [rax],rcx
   14000837b:	mov    eax,DWORD PTR [rbx]
   14000837d:	test   eax,eax
   14000837f:	je     0x140008396
   140008381:	cmp    eax,0xffffffff
   140008384:	je     0x14000839e
   140008386:	mov    eax,ebp
   140008388:	lock xadd DWORD PTR [rbx],eax
   14000838c:	add    eax,0xffffffff
   14000838f:	setne  al
   140008392:	test   al,al
   140008394:	jne    0x14000839e
   140008396:	mov    rcx,rbx
   140008399:	call   0x1400022f0
   14000839e:	mov    rcx,rdi
   1400083a1:	mov    rbx,rdi
   1400083a4:	call   QWORD PTR [rip+0x182c6]        # 0x140020670
   1400083aa:	mov    rdi,QWORD PTR [rbx+0x10]
   1400083ae:	lea    r9,[rbx+0x8]
   1400083b2:	mov    al,0x1
   1400083b4:	test   rdi,rdi
   1400083b7:	je     0x1400083e8
   1400083b9:	nop    DWORD PTR [rax+0x0]
   1400083c0:	lea    rcx,[rdi+0x18]
   1400083c4:	mov    rdx,rsi
   1400083c7:	call   QWORD PTR [rip+0x18343]        # 0x140020710
   1400083cd:	mov    r9,rdi
   1400083d0:	test   al,al
   1400083d2:	sete   al
   1400083d5:	test   al,al
   1400083d7:	je     0x1400083df
   1400083d9:	mov    rdi,QWORD PTR [rdi+0x8]
   1400083dd:	jmp    0x1400083e3
   1400083df:	mov    rdi,QWORD PTR [rdi+0x10]
   1400083e3:	test   rdi,rdi
   1400083e6:	jne    0x1400083c0
   1400083e8:	mov    edx,0x30
   1400083ed:	mov    rcx,rbx
   1400083f0:	mov    BYTE PTR [rsp+0x20],al
   1400083f4:	lea    r8d,[rdx-0x28]
   1400083f8:	call   QWORD PTR [rip+0x1832a]        # 0x140020728
   1400083fe:	mov    rdi,rax
   140008401:	lea    rcx,[rax+0x18]
   140008405:	test   rcx,rcx
   140008408:	je     0x140008413
   14000840a:	mov    rdx,rsi
   14000840d:	call   QWORD PTR [rip+0x18385]        # 0x140020798
   140008413:	lea    rcx,[rdi+0x20]
   140008417:	test   rcx,rcx
   14000841a:	je     0x140008425
   14000841c:	mov    rdx,r13
   14000841f:	call   QWORD PTR [rip+0x18313]        # 0x140020738
   140008425:	lea    rcx,[rsp+0x1f0]
   14000842d:	call   QWORD PTR [rip+0x1834d]        # 0x140020780
   140008433:	lea    rcx,[rsp+0x40]
   140008438:	call   QWORD PTR [rip+0x1830a]        # 0x140020748
   14000843e:	lea    rcx,[rsp+0x30]
   140008443:	call   QWORD PTR [rip+0x182ff]        # 0x140020748
   140008449:	lea    rcx,[rsp+0x50]
   14000844e:	call   QWORD PTR [rip+0x17e8c]        # 0x1400202e0
   140008454:	lea    rdx,[rsp+0xd0]
   14000845c:	lea    rcx,[rsp+0x50]
   140008461:	call   QWORD PTR [rip+0x17e99]        # 0x140020300
   140008467:	test   al,al
   140008469:	jne    0x140008310
   14000846f:	mov    r13,QWORD PTR [rsp+0x1f8]
   140008477:	mov    rsi,QWORD PTR [rsp+0x1e8]
   14000847f:	lea    rcx,[rsp+0xd0]
   140008487:	call   QWORD PTR [rip+0x17e4b]        # 0x1400202d8
   14000848d:	lea    rcx,[rsp+0x50]
   140008492:	call   QWORD PTR [rip+0x17e40]        # 0x1400202d8
   140008498:	mov    r11d,DWORD PTR [rbx]
   14000849b:	test   r11d,r11d
   14000849e:	je     0x1400084b0
   1400084a0:	cmp    r11d,0xffffffff
   1400084a4:	je     0x1400084aa
   1400084a6:	lock add DWORD PTR [rbx],0x1
   1400084aa:	mov    QWORD PTR [r12],rbx
   1400084ae:	jmp    0x1400084f4
   1400084b0:	call   QWORD PTR [rip+0x1827a]        # 0x140020730
   1400084b6:	mov    QWORD PTR [r12],rax
   1400084ba:	mov    rcx,QWORD PTR [rbx+0x10]
   1400084be:	test   rcx,rcx
   1400084c1:	je     0x1400084f4
   1400084c3:	mov    rdx,rax
   1400084c6:	call   0x140001210
   1400084cb:	mov    rcx,QWORD PTR [r12]
   1400084cf:	mov    QWORD PTR [rcx+0x10],rax
   1400084d3:	mov    rax,QWORD PTR [r12]
   1400084d7:	mov    rdx,QWORD PTR [rax+0x10]
   1400084db:	lea    rcx,[rax+0x8]
   1400084df:	mov    eax,DWORD PTR [rdx]
   1400084e1:	and    eax,0x3
   1400084e4:	or     rcx,rax
   1400084e7:	mov    QWORD PTR [rdx],rcx
   1400084ea:	mov    rcx,QWORD PTR [r12]
   1400084ee:	call   QWORD PTR [rip+0x1817c]        # 0x140020670
   1400084f4:	mov    eax,DWORD PTR [rbx]
   1400084f6:	test   eax,eax
   1400084f8:	je     0x14000850a
   1400084fa:	cmp    eax,0xffffffff
   1400084fd:	je     0x14000855f
   1400084ff:	lock add DWORD PTR [rbx],0xffffffff
   140008503:	setne  al
   140008506:	test   al,al
   140008508:	jne    0x14000855f
   14000850a:	mov    rdi,QWORD PTR [rbx+0x10]
   14000850e:	test   rdi,rdi
   140008511:	je     0x140008556
   140008513:	lea    rcx,[rdi+0x18]
   140008517:	call   QWORD PTR [rip+0x18263]        # 0x140020780
   14000851d:	lea    rcx,[rdi+0x20]
   140008521:	call   QWORD PTR [rip+0x18221]        # 0x140020748
   140008527:	mov    rcx,QWORD PTR [rdi+0x8]
   14000852b:	test   rcx,rcx
   14000852e:	je     0x140008535
   140008530:	call   0x140001fd0
   140008535:	mov    rcx,QWORD PTR [rdi+0x10]
   140008539:	test   rcx,rcx
   14000853c:	je     0x140008543
   14000853e:	call   0x140001fd0
   140008543:	mov    rdx,QWORD PTR [rbx+0x10]
   140008547:	mov    r8d,0x8
   14000854d:	mov    rcx,rbx
   140008550:	call   QWORD PTR [rip+0x1812a]        # 0x140020680
   140008556:	mov    rcx,rbx
   140008559:	call   QWORD PTR [rip+0x18129]        # 0x140020688
   14000855f:	mov    rbp,QWORD PTR [rsp+0x1e0]
   140008567:	mov    rax,r12
   14000856a:	add    rsp,0x1c0
   140008571:	pop    r12
   140008573:	pop    rdi
   140008574:	pop    rbx
   140008575:	ret    
   140008576:	int3   
   140008577:	int3   
   140008578:	int3   
   140008579:	int3   
   14000857a:	int3   
   14000857b:	int3   
   14000857c:	int3   
   14000857d:	int3   
   14000857e:	int3   
   14000857f:	int3   
   140008580:	mov    QWORD PTR [rsp+0x8],rcx
   140008585:	push   rbx
   140008586:	push   rbp
   140008587:	push   rsi
   140008588:	push   rdi
   140008589:	push   r14
   14000858b:	push   r15
   14000858d:	sub    rsp,0x368
   140008594:	mov    rax,QWORD PTR [rip+0x181c5]        # 0x140020760
   14000859b:	mov    QWORD PTR [rsp+0x358],r13
   1400085a3:	mov    rbx,rdx
   1400085a6:	mov    QWORD PTR [rcx],rax
   1400085a9:	mov    rdi,QWORD PTR [rdx]
   1400085ac:	mov    r15,rcx
   1400085af:	mov    QWORD PTR [rsp+0x38],rdi
   1400085b4:	mov    eax,DWORD PTR [rdi]
   1400085b6:	test   eax,eax
   1400085b8:	je     0x1400085ca
   1400085ba:	cmp    eax,0xffffffff
   1400085bd:	je     0x140008634
   1400085bf:	lock add DWORD PTR [rdi],0x1
   1400085c3:	mov    rdi,QWORD PTR [rsp+0x38]
   1400085c8:	jmp    0x140008634
   1400085ca:	mov    edx,DWORD PTR [rdi+0x4]
   1400085cd:	lea    rcx,[rsp+0x38]
   1400085d2:	call   QWORD PTR [rip+0x180a0]        # 0x140020678
   1400085d8:	mov    rdi,QWORD PTR [rsp+0x38]
   1400085dd:	mov    rdx,QWORD PTR [rbx]
   1400085e0:	movsxd rax,DWORD PTR [rdx+0x8]
   1400085e4:	lea    rsi,[rdx+rax*8+0x10]
   1400085e9:	movsxd rax,DWORD PTR [rdi+0xc]
   1400085ed:	lea    rbp,[rdi+rax*8+0x10]
   1400085f2:	movsxd rax,DWORD PTR [rdi+0x8]
   1400085f6:	lea    rbx,[rdi+rax*8+0x10]
   1400085fb:	cmp    rbx,rbp
   1400085fe:	je     0x140008634
   140008600:	mov    ecx,0x10
   140008605:	call   0x14001ee64
   14000860a:	test   rax,rax
   14000860d:	je     0x14000861d
   14000860f:	mov    rdx,QWORD PTR [rsi]
   140008612:	mov    rcx,rax
   140008615:	call   QWORD PTR [rip+0x1811d]        # 0x140020738
   14000861b:	jmp    0x14000861f
   14000861d:	xor    eax,eax
   14000861f:	mov    QWORD PTR [rbx],rax
   140008622:	add    rbx,0x8
   140008626:	add    rsi,0x8
   14000862a:	cmp    rbx,rbp
   14000862d:	jne    0x140008600
   14000862f:	mov    rdi,QWORD PTR [rsp+0x38]
   140008634:	mov    eax,DWORD PTR [rdi+0xc]
   140008637:	xor    r13d,r13d
   14000863a:	or     r14,0xffffffffffffffff
   14000863e:	sub    eax,DWORD PTR [rdi+0x8]
   140008641:	mov    DWORD PTR [rsp+0x3b0],r13d
   140008649:	mov    QWORD PTR [rsp+0x60],r13
   14000864e:	test   eax,eax
   140008650:	jle    0x140009ee2
   140008656:	mov    QWORD PTR [rsp+0x360],r12
   14000865e:	xchg   ax,ax
   140008660:	mov    eax,DWORD PTR [rdi]
   140008662:	cmp    eax,0x1
   140008665:	je     0x140008761
   14000866b:	test   eax,eax
   14000866d:	je     0x140008761
   140008673:	movsxd rax,DWORD PTR [rdi+0x8]
   140008677:	mov    edx,DWORD PTR [rdi+0x4]
   14000867a:	lea    rcx,[rsp+0x38]
   14000867f:	lea    rsi,[rdi+rax*8+0x10]
   140008684:	call   QWORD PTR [rip+0x17fee]        # 0x140020678
   14000868a:	mov    rdi,QWORD PTR [rsp+0x38]
   14000868f:	movsxd rcx,DWORD PTR [rdi+0xc]
   140008693:	mov    r12,rax
   140008696:	lea    rbp,[rdi+rcx*8+0x10]
   14000869b:	movsxd rcx,DWORD PTR [rdi+0x8]
   14000869f:	lea    rbx,[rdi+rcx*8+0x10]
   1400086a4:	cmp    rbx,rbp
   1400086a7:	je     0x1400086e4
   1400086a9:	nop    DWORD PTR [rax+0x0]
   1400086b0:	mov    ecx,0x10
   1400086b5:	call   0x14001ee64
   1400086ba:	test   rax,rax
   1400086bd:	je     0x1400086cd
   1400086bf:	mov    rdx,QWORD PTR [rsi]
   1400086c2:	mov    rcx,rax
   1400086c5:	call   QWORD PTR [rip+0x1806d]        # 0x140020738
   1400086cb:	jmp    0x1400086cf
   1400086cd:	xor    eax,eax
   1400086cf:	mov    QWORD PTR [rbx],rax
   1400086d2:	add    rbx,0x8
   1400086d6:	add    rsi,0x8
   1400086da:	cmp    rbx,rbp
   1400086dd:	jne    0x1400086b0
   1400086df:	mov    rdi,QWORD PTR [rsp+0x38]
   1400086e4:	mov    eax,DWORD PTR [r12]
   1400086e8:	test   eax,eax
   1400086ea:	je     0x14000870b
   1400086ec:	cmp    eax,0xffffffff
   1400086ef:	je     0x140008761
   1400086f1:	mov    eax,r14d
   1400086f4:	lock xadd DWORD PTR [r12],eax
   1400086fa:	add    eax,0xffffffff
   1400086fd:	setne  al
   140008700:	test   al,al
   140008702:	je     0x14000870b
   140008704:	mov    rdi,QWORD PTR [rsp+0x38]
   140008709:	jmp    0x140008761
   14000870b:	movsxd rax,DWORD PTR [r12+0xc]
   140008710:	lea    rdi,[r12+rax*8+0x10]
   140008715:	movsxd rax,DWORD PTR [r12+0x8]
   14000871a:	lea    rsi,[r12+rax*8+0x10]
   14000871f:	cmp    rsi,rdi
   140008722:	je     0x140008753
   140008724:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140008730:	mov    rbx,QWORD PTR [rdi-0x8]
   140008734:	sub    rdi,0x8
   140008738:	test   rbx,rbx
   14000873b:	je     0x14000874e
   14000873d:	mov    rcx,rbx
   140008740:	call   QWORD PTR [rip+0x18002]        # 0x140020748
   140008746:	mov    rcx,rbx
   140008749:	call   0x14001ee46
   14000874e:	cmp    rdi,rsi
   140008751:	jne    0x140008730
   140008753:	mov    rcx,r12
   140008756:	call   QWORD PTR [rip+0x17f74]        # 0x1400206d0
   14000875c:	mov    rdi,QWORD PTR [rsp+0x38]
   140008761:	movsxd rdx,DWORD PTR [rdi+0x8]
   140008765:	lea    rcx,[rsp+0x3b8]
   14000876d:	add    rdx,QWORD PTR [rsp+0x60]
   140008772:	mov    rdx,QWORD PTR [rdi+rdx*8+0x10]
   140008777:	call   0x140008240
   14000877c:	lea    rdx,[rip+0x182c5]        # 0x140020a48
   140008783:	xor    eax,eax
   140008785:	mov    rdi,rdx
   140008788:	mov    QWORD PTR [rsp+0x158],rdx
   140008790:	mov    rcx,r14
   140008793:	repnz scas al,BYTE PTR es:[rdi]
   140008795:	lea    rdx,[rsp+0x280]
   14000879d:	not    rcx
   1400087a0:	dec    rcx
   1400087a3:	mov    DWORD PTR [rsp+0x150],ecx
   1400087aa:	lea    rcx,[rsp+0x200]
   1400087b2:	movaps xmm0,XMMWORD PTR [rsp+0x150]
   1400087ba:	movdqa XMMWORD PTR [rsp+0x280],xmm0
   1400087c3:	call   QWORD PTR [rip+0x17b77]        # 0x140020340
   1400087c9:	lea    rdx,[rip+0x18294]        # 0x140020a64
   1400087d0:	lea    rcx,[rsp+0xb8]
   1400087d8:	mov    r8d,0x4
   1400087de:	call   QWORD PTR [rip+0x17d9c]        # 0x140020580
   1400087e4:	mov    rcx,QWORD PTR [rsp+0x3b8]
   1400087ec:	mov    edx,DWORD PTR [rcx]
   1400087ee:	mov    r12,rax
   1400087f1:	cmp    edx,0x1
   1400087f4:	je     0x14000887c
   1400087fa:	test   edx,edx
   1400087fc:	je     0x14000887c
   1400087fe:	call   QWORD PTR [rip+0x17f2c]        # 0x140020730
   140008804:	mov    rcx,QWORD PTR [rsp+0x3b8]
   14000880c:	mov    r8,QWORD PTR [rcx+0x10]
   140008810:	mov    rdi,rax
   140008813:	test   r8,r8
   140008816:	je     0x14000883a
   140008818:	mov    rdx,rax
   14000881b:	mov    rcx,r8
   14000881e:	call   0x140001210
   140008823:	lea    rcx,[rdi+0x8]
   140008827:	mov    QWORD PTR [rdi+0x10],rax
   14000882b:	and    QWORD PTR [rax],0x3
   14000882f:	or     QWORD PTR [rax],rcx
   140008832:	mov    rcx,QWORD PTR [rsp+0x3b8]
   14000883a:	mov    eax,DWORD PTR [rcx]
   14000883c:	test   eax,eax
   14000883e:	je     0x14000885e
   140008840:	cmp    eax,0xffffffff
   140008843:	je     0x140008863
   140008845:	mov    eax,r14d
   140008848:	lock xadd DWORD PTR [rcx],eax
   14000884c:	add    eax,0xffffffff
   14000884f:	setne  al
   140008852:	test   al,al
   140008854:	jne    0x140008863
   140008856:	mov    rcx,QWORD PTR [rsp+0x3b8]
   14000885e:	call   0x1400022f0
   140008863:	mov    rcx,rdi
   140008866:	mov    QWORD PTR [rsp+0x3b8],rdi
   14000886e:	call   QWORD PTR [rip+0x17dfc]        # 0x140020670
   140008874:	mov    rcx,QWORD PTR [rsp+0x3b8]
   14000887c:	mov    rdi,QWORD PTR [rcx+0x10]
   140008880:	test   rdi,rdi
   140008883:	je     0x1400088d2
   140008885:	xor    ebx,ebx
   140008887:	nop    WORD PTR [rax+rax*1+0x0]
   140008890:	lea    rcx,[rdi+0x18]
   140008894:	mov    rdx,r12
   140008897:	call   QWORD PTR [rip+0x17e73]        # 0x140020710
   14000889d:	test   al,al
   14000889f:	jne    0x1400088aa
   1400088a1:	mov    rbx,rdi
   1400088a4:	mov    rdi,QWORD PTR [rdi+0x8]
   1400088a8:	jmp    0x1400088ae
   1400088aa:	mov    rdi,QWORD PTR [rdi+0x10]
   1400088ae:	test   rdi,rdi
   1400088b1:	jne    0x140008890
   1400088b3:	test   rbx,rbx
   1400088b6:	je     0x1400088d2
   1400088b8:	lea    rdx,[rbx+0x18]
   1400088bc:	mov    rcx,r12
   1400088bf:	call   QWORD PTR [rip+0x17e4b]        # 0x140020710
   1400088c5:	test   al,al
   1400088c7:	jne    0x1400088d2
   1400088c9:	add    rbx,0x20
   1400088cd:	jmp    0x140008a51
   1400088d2:	lea    rcx,[rsp+0x318]
   1400088da:	call   QWORD PTR [rip+0x17cf8]        # 0x1400205d8
   1400088e0:	mov    rcx,QWORD PTR [rsp+0x3b8]
   1400088e8:	mov    edx,DWORD PTR [rcx]
   1400088ea:	mov    r13,rax
   1400088ed:	cmp    edx,0x1
   1400088f0:	je     0x140008978
   1400088f6:	test   edx,edx
   1400088f8:	je     0x140008978
   1400088fa:	call   QWORD PTR [rip+0x17e30]        # 0x140020730
   140008900:	mov    rcx,QWORD PTR [rsp+0x3b8]
   140008908:	mov    r8,QWORD PTR [rcx+0x10]
   14000890c:	mov    rdi,rax
   14000890f:	test   r8,r8
   140008912:	je     0x140008936
   140008914:	mov    rdx,rax
   140008917:	mov    rcx,r8
   14000891a:	call   0x140001210
   14000891f:	lea    rcx,[rdi+0x8]
   140008923:	mov    QWORD PTR [rdi+0x10],rax
   140008927:	and    QWORD PTR [rax],0x3
   14000892b:	or     QWORD PTR [rax],rcx
   14000892e:	mov    rcx,QWORD PTR [rsp+0x3b8]
   140008936:	mov    eax,DWORD PTR [rcx]
   140008938:	test   eax,eax
   14000893a:	je     0x14000895a
   14000893c:	cmp    eax,0xffffffff
   14000893f:	je     0x14000895f
   140008941:	mov    eax,r14d
   140008944:	lock xadd DWORD PTR [rcx],eax
   140008948:	add    eax,0xffffffff
   14000894b:	setne  al
   14000894e:	test   al,al
   140008950:	jne    0x14000895f
   140008952:	mov    rcx,QWORD PTR [rsp+0x3b8]
   14000895a:	call   0x1400022f0
   14000895f:	mov    rcx,rdi
   140008962:	mov    QWORD PTR [rsp+0x3b8],rdi
   14000896a:	call   QWORD PTR [rip+0x17d00]        # 0x140020670
   140008970:	mov    rcx,QWORD PTR [rsp+0x3b8]
   140008978:	mov    rbx,QWORD PTR [rcx+0x10]
   14000897c:	xor    edi,edi
   14000897e:	lea    rbp,[rcx+0x8]
   140008982:	mov    sil,0x1
   140008985:	test   rbx,rbx
   140008988:	je     0x1400089f1
   14000898a:	nop    WORD PTR [rax+rax*1+0x0]
   140008990:	lea    rcx,[rbx+0x18]
   140008994:	mov    rdx,r12
   140008997:	mov    rbp,rbx
   14000899a:	call   QWORD PTR [rip+0x17d70]        # 0x140020710
   1400089a0:	test   al,al
   1400089a2:	jne    0x1400089b0
   1400089a4:	mov    rdi,rbx
   1400089a7:	mov    rbx,QWORD PTR [rbx+0x8]
   1400089ab:	mov    sil,0x1
   1400089ae:	jmp    0x1400089b7
   1400089b0:	mov    rbx,QWORD PTR [rbx+0x10]
   1400089b4:	xor    sil,sil
   1400089b7:	test   rbx,rbx
   1400089ba:	jne    0x140008990
   1400089bc:	test   rdi,rdi
   1400089bf:	je     0x1400089e9
   1400089c1:	lea    rdx,[rdi+0x18]
   1400089c5:	mov    rcx,r12
   1400089c8:	call   QWORD PTR [rip+0x17d42]        # 0x140020710
   1400089ce:	test   al,al
   1400089d0:	jne    0x1400089e9
   1400089d2:	lea    rcx,[rdi+0x20]
   1400089d6:	mov    rdx,r13
   1400089d9:	call   QWORD PTR [rip+0x17c49]        # 0x140020628
   1400089df:	mov    QWORD PTR [rsp+0x110],rdi
   1400089e7:	jmp    0x140008a37
   1400089e9:	mov    rcx,QWORD PTR [rsp+0x3b8]
   1400089f1:	mov    edx,0x30
   1400089f6:	mov    r9,rbp
   1400089f9:	mov    BYTE PTR [rsp+0x20],sil
   1400089fe:	lea    r8d,[rdx-0x28]
   140008a02:	call   QWORD PTR [rip+0x17d20]        # 0x140020728
   140008a08:	mov    rdi,rax
   140008a0b:	lea    rcx,[rax+0x18]
   140008a0f:	test   rcx,rcx
   140008a12:	je     0x140008a1d
   140008a14:	mov    rdx,r12
   140008a17:	call   QWORD PTR [rip+0x17d7b]        # 0x140020798
   140008a1d:	lea    rcx,[rdi+0x20]
   140008a21:	test   rcx,rcx
   140008a24:	je     0x140008a2f
   140008a26:	mov    rdx,r13
   140008a29:	call   QWORD PTR [rip+0x17d09]        # 0x140020738
   140008a2f:	mov    QWORD PTR [rsp+0x110],rdi
   140008a37:	lea    rcx,[rsp+0x318]
   140008a3f:	lea    rbx,[rdi+0x20]
   140008a43:	call   QWORD PTR [rip+0x17cff]        # 0x140020748
   140008a49:	mov    r13d,DWORD PTR [rsp+0x3b0]
   140008a51:	lea    rdx,[rsp+0x200]
   140008a59:	mov    rcx,rbx
   140008a5c:	call   QWORD PTR [rip+0x17cb6]        # 0x140020718
   140008a62:	lea    rcx,[rsp+0xb8]
   140008a6a:	movzx  edi,al
   140008a6d:	call   QWORD PTR [rip+0x17d0d]        # 0x140020780
   140008a73:	lea    rcx,[rsp+0x200]
   140008a7b:	call   QWORD PTR [rip+0x17cc7]        # 0x140020748
   140008a81:	test   dil,dil
   140008a84:	je     0x140009e51
   140008a8a:	lea    rcx,[rsp+0x2f8]
   140008a92:	call   QWORD PTR [rip+0x17b40]        # 0x1400205d8
   140008a98:	lea    rdx,[rip+0x17fa1]        # 0x140020a40
   140008a9f:	lea    rcx,[rsp+0x138]
   140008aa7:	mov    r8d,0x7
   140008aad:	mov    rbp,rax
   140008ab0:	call   QWORD PTR [rip+0x17aca]        # 0x140020580
   140008ab6:	mov    rcx,QWORD PTR [rsp+0x3b8]
   140008abe:	mov    rdi,QWORD PTR [rcx+0x10]
   140008ac2:	mov    rsi,rax
   140008ac5:	test   rdi,rdi
   140008ac8:	je     0x140008b0d
   140008aca:	xor    ebx,ebx
   140008acc:	nop    DWORD PTR [rax+0x0]
   140008ad0:	lea    rcx,[rdi+0x18]
   140008ad4:	mov    rdx,rsi
   140008ad7:	call   QWORD PTR [rip+0x17c33]        # 0x140020710
   140008add:	test   al,al
   140008adf:	jne    0x140008aea
   140008ae1:	mov    rbx,rdi
   140008ae4:	mov    rdi,QWORD PTR [rdi+0x8]
   140008ae8:	jmp    0x140008aee
   140008aea:	mov    rdi,QWORD PTR [rdi+0x10]
   140008aee:	test   rdi,rdi
   140008af1:	jne    0x140008ad0
   140008af3:	test   rbx,rbx
   140008af6:	je     0x140008b0d
   140008af8:	lea    rdx,[rbx+0x18]
   140008afc:	mov    rcx,rsi
   140008aff:	call   QWORD PTR [rip+0x17c0b]        # 0x140020710
   140008b05:	test   al,al
   140008b07:	jne    0x140008b0d
   140008b09:	lea    rbp,[rbx+0x20]
   140008b0d:	lea    rcx,[rsp+0x1e0]
   140008b15:	mov    rdx,rbp
   140008b18:	call   QWORD PTR [rip+0x17c1a]        # 0x140020738
   140008b1e:	lea    rcx,[rsp+0x2a0]
   140008b26:	call   QWORD PTR [rip+0x17aac]        # 0x1400205d8
   140008b2c:	lea    rdx,[rip+0x17f49]        # 0x140020a7c
   140008b33:	lea    rcx,[rsp+0x128]
   140008b3b:	mov    r8d,0x4
   140008b41:	mov    rbp,rax
   140008b44:	call   QWORD PTR [rip+0x17a36]        # 0x140020580
   140008b4a:	mov    rcx,QWORD PTR [rsp+0x3b8]
   140008b52:	mov    rdi,QWORD PTR [rcx+0x10]
   140008b56:	mov    rsi,rax
   140008b59:	test   rdi,rdi
   140008b5c:	je     0x140008b9d
   140008b5e:	xor    ebx,ebx
   140008b60:	lea    rcx,[rdi+0x18]
   140008b64:	mov    rdx,rsi
   140008b67:	call   QWORD PTR [rip+0x17ba3]        # 0x140020710
   140008b6d:	test   al,al
   140008b6f:	jne    0x140008b7a
   140008b71:	mov    rbx,rdi
   140008b74:	mov    rdi,QWORD PTR [rdi+0x8]
   140008b78:	jmp    0x140008b7e
   140008b7a:	mov    rdi,QWORD PTR [rdi+0x10]
   140008b7e:	test   rdi,rdi
   140008b81:	jne    0x140008b60
   140008b83:	test   rbx,rbx
   140008b86:	je     0x140008b9d
   140008b88:	lea    rdx,[rbx+0x18]
   140008b8c:	mov    rcx,rsi
   140008b8f:	call   QWORD PTR [rip+0x17b7b]        # 0x140020710
   140008b95:	test   al,al
   140008b97:	jne    0x140008b9d
   140008b99:	lea    rbp,[rbx+0x20]
   140008b9d:	lea    rcx,[rsp+0x180]
   140008ba5:	mov    rdx,rbp
   140008ba8:	call   QWORD PTR [rip+0x17b8a]        # 0x140020738
   140008bae:	lea    rdx,[rsp+0xc0]
   140008bb6:	lea    rcx,[rsp+0x1e0]
   140008bbe:	call   QWORD PTR [rip+0x17724]        # 0x1400202e8
   140008bc4:	lea    rdx,[rsp+0xb0]
   140008bcc:	lea    rcx,[rsp+0x180]
   140008bd4:	mov    rdi,rax
   140008bd7:	call   QWORD PTR [rip+0x1770b]        # 0x1400202e8
   140008bdd:	lea    rcx,[rsp+0x58]
   140008be2:	mov    rdx,rax
   140008be5:	mov    r8,rdi
   140008be8:	call   0x140004dd0
   140008bed:	lea    rcx,[rsp+0xb0]
   140008bf5:	call   QWORD PTR [rip+0x17b85]        # 0x140020780
   140008bfb:	lea    rcx,[rsp+0x180]
   140008c03:	call   QWORD PTR [rip+0x17b3f]        # 0x140020748
   140008c09:	lea    rcx,[rsp+0x128]
   140008c11:	call   QWORD PTR [rip+0x17b69]        # 0x140020780
   140008c17:	lea    rcx,[rsp+0x2a0]
   140008c1f:	call   QWORD PTR [rip+0x17b23]        # 0x140020748
   140008c25:	lea    rcx,[rsp+0xc0]
   140008c2d:	call   QWORD PTR [rip+0x17b4d]        # 0x140020780
   140008c33:	lea    rcx,[rsp+0x1e0]
   140008c3b:	call   QWORD PTR [rip+0x17b07]        # 0x140020748
   140008c41:	lea    rcx,[rsp+0x138]
   140008c49:	call   QWORD PTR [rip+0x17b31]        # 0x140020780
   140008c4f:	lea    rcx,[rsp+0x2f8]
   140008c57:	call   QWORD PTR [rip+0x17aeb]        # 0x140020748
   140008c5d:	mov    rdx,QWORD PTR [rsp+0x58]
   140008c62:	cmp    DWORD PTR [rdx+0x4],0x0
   140008c66:	je     0x140008db0
   140008c6c:	lea    rdx,[rsp+0x58]
   140008c71:	lea    rcx,[rsp+0x1a0]
   140008c79:	call   QWORD PTR [rip+0x178f9]        # 0x140020578
   140008c7f:	lea    rdx,[rip+0x17dca]        # 0x140020a50
   140008c86:	lea    rcx,[rsp+0xd8]
   140008c8e:	mov    r8d,0x4
   140008c94:	call   QWORD PTR [rip+0x178e6]        # 0x140020580
   140008c9a:	mov    rcx,QWORD PTR [rsp+0x3b8]
   140008ca2:	mov    edx,DWORD PTR [rcx]
   140008ca4:	mov    rbx,rax
   140008ca7:	cmp    edx,0x1
   140008caa:	je     0x140008d32
   140008cb0:	test   edx,edx
   140008cb2:	je     0x140008d32
   140008cb4:	call   QWORD PTR [rip+0x17a76]        # 0x140020730
   140008cba:	mov    rcx,QWORD PTR [rsp+0x3b8]
   140008cc2:	mov    r8,QWORD PTR [rcx+0x10]
   140008cc6:	mov    rdi,rax
   140008cc9:	test   r8,r8
   140008ccc:	je     0x140008cf0
   140008cce:	mov    rdx,rax
   140008cd1:	mov    rcx,r8
   140008cd4:	call   0x140001210
   140008cd9:	lea    rcx,[rdi+0x8]
   140008cdd:	mov    QWORD PTR [rdi+0x10],rax
   140008ce1:	and    QWORD PTR [rax],0x3
   140008ce5:	or     QWORD PTR [rax],rcx
   140008ce8:	mov    rcx,QWORD PTR [rsp+0x3b8]
   140008cf0:	mov    eax,DWORD PTR [rcx]
   140008cf2:	test   eax,eax
   140008cf4:	je     0x140008d14
   140008cf6:	cmp    eax,0xffffffff
   140008cf9:	je     0x140008d19
   140008cfb:	mov    eax,r14d
   140008cfe:	lock xadd DWORD PTR [rcx],eax
   140008d02:	add    eax,0xffffffff
   140008d05:	setne  al
   140008d08:	test   al,al
   140008d0a:	jne    0x140008d19
   140008d0c:	mov    rcx,QWORD PTR [rsp+0x3b8]
   140008d14:	call   0x1400022f0
   140008d19:	mov    rcx,rdi
   140008d1c:	mov    QWORD PTR [rsp+0x3b8],rdi
   140008d24:	call   QWORD PTR [rip+0x17946]        # 0x140020670
   140008d2a:	mov    rcx,QWORD PTR [rsp+0x3b8]
   140008d32:	mov    rdx,rbx
   140008d35:	call   0x140001c60
   140008d3a:	test   rax,rax
   140008d3d:	jne    0x140008d7f
   140008d3f:	lea    rcx,[rsp+0x2c0]
   140008d47:	call   QWORD PTR [rip+0x1788b]        # 0x1400205d8
   140008d4d:	lea    rdx,[rsp+0x338]
   140008d55:	lea    rcx,[rsp+0x3b8]
   140008d5d:	mov    r9,rax
   140008d60:	mov    r8,rbx
   140008d63:	call   0x140003090
   140008d68:	lea    rcx,[rsp+0x2c0]
   140008d70:	mov    rdi,QWORD PTR [rax]
   140008d73:	add    rdi,0x20
   140008d77:	call   QWORD PTR [rip+0x179cb]        # 0x140020748
   140008d7d:	jmp    0x140008d83
   140008d7f:	lea    rdi,[rax+0x20]
   140008d83:	lea    rdx,[rsp+0x1a0]
   140008d8b:	mov    rcx,rdi
   140008d8e:	call   QWORD PTR [rip+0x17894]        # 0x140020628
   140008d94:	lea    rcx,[rsp+0xd8]
   140008d9c:	call   QWORD PTR [rip+0x179de]        # 0x140020780
   140008da2:	lea    rcx,[rsp+0x1a0]
   140008daa:	call   QWORD PTR [rip+0x17998]        # 0x140020748
   140008db0:	lea    rcx,[rsp+0x248]
   140008db8:	call   QWORD PTR [rip+0x1781a]        # 0x1400205d8
   140008dbe:	lea    rdx,[rip+0x17c8b]        # 0x140020a50
   140008dc5:	lea    rcx,[rsp+0x130]
   140008dcd:	mov    r8d,0x4
   140008dd3:	mov    rbp,rax
   140008dd6:	call   QWORD PTR [rip+0x177a4]        # 0x140020580
   140008ddc:	mov    rcx,QWORD PTR [rsp+0x3b8]
   140008de4:	mov    rdi,QWORD PTR [rcx+0x10]
   140008de8:	mov    rsi,rax
   140008deb:	test   rdi,rdi
   140008dee:	je     0x140008e2f
   140008df0:	xor    ebx,ebx
   140008df2:	lea    rcx,[rdi+0x18]
   140008df6:	mov    rdx,rsi
   140008df9:	call   QWORD PTR [rip+0x17911]        # 0x140020710
   140008dff:	test   al,al
   140008e01:	jne    0x140008e0c
   140008e03:	mov    rbx,rdi
   140008e06:	mov    rdi,QWORD PTR [rdi+0x8]
   140008e0a:	jmp    0x140008e10
   140008e0c:	mov    rdi,QWORD PTR [rdi+0x10]
   140008e10:	test   rdi,rdi
   140008e13:	jne    0x140008df2
   140008e15:	test   rbx,rbx
   140008e18:	je     0x140008e2f
   140008e1a:	lea    rdx,[rbx+0x18]
   140008e1e:	mov    rcx,rsi
   140008e21:	call   QWORD PTR [rip+0x178e9]        # 0x140020710
   140008e27:	test   al,al
   140008e29:	jne    0x140008e2f
   140008e2b:	lea    rbp,[rbx+0x20]
   140008e2f:	lea    rcx,[rsp+0x220]
   140008e37:	mov    rdx,rbp
   140008e3a:	call   QWORD PTR [rip+0x178f8]        # 0x140020738
   140008e40:	lea    rdx,[rsp+0x148]
   140008e48:	lea    rcx,[rsp+0x220]
   140008e50:	call   QWORD PTR [rip+0x17492]        # 0x1400202e8
   140008e56:	lea    rcx,[rsp+0x48]
   140008e5b:	mov    rdx,rax
   140008e5e:	call   0x1400073e0
   140008e63:	lea    rcx,[rsp+0x148]
   140008e6b:	call   QWORD PTR [rip+0x1790f]        # 0x140020780
   140008e71:	lea    rcx,[rsp+0x220]
   140008e79:	call   QWORD PTR [rip+0x178c9]        # 0x140020748
   140008e7f:	lea    rcx,[rsp+0x130]
   140008e87:	call   QWORD PTR [rip+0x178f3]        # 0x140020780
   140008e8d:	lea    rcx,[rsp+0x248]
   140008e95:	call   QWORD PTR [rip+0x178ad]        # 0x140020748
   140008e9b:	lea    rcx,[rsp+0x258]
   140008ea3:	call   QWORD PTR [rip+0x1772f]        # 0x1400205d8
   140008ea9:	lea    rdx,[rip+0x17bf8]        # 0x140020aa8
   140008eb0:	lea    rcx,[rsp+0xf0]
   140008eb8:	mov    r8d,0x7
   140008ebe:	mov    rbp,rax
   140008ec1:	call   QWORD PTR [rip+0x176b9]        # 0x140020580
   140008ec7:	mov    r12,QWORD PTR [rsp+0x48]
   140008ecc:	mov    rdi,QWORD PTR [r12+0x10]
   140008ed1:	mov    rsi,rax
   140008ed4:	test   rdi,rdi
   140008ed7:	je     0x140008f1d
   140008ed9:	xor    ebx,ebx
   140008edb:	nop    DWORD PTR [rax+rax*1+0x0]
   140008ee0:	lea    rcx,[rdi+0x18]
   140008ee4:	mov    rdx,rsi
   140008ee7:	call   QWORD PTR [rip+0x17823]        # 0x140020710
   140008eed:	test   al,al
   140008eef:	jne    0x140008efa
   140008ef1:	mov    rbx,rdi
   140008ef4:	mov    rdi,QWORD PTR [rdi+0x8]
   140008ef8:	jmp    0x140008efe
   140008efa:	mov    rdi,QWORD PTR [rdi+0x10]
   140008efe:	test   rdi,rdi
   140008f01:	jne    0x140008ee0
   140008f03:	test   rbx,rbx
   140008f06:	je     0x140008f1d
   140008f08:	lea    rdx,[rbx+0x18]
   140008f0c:	mov    rcx,rsi
   140008f0f:	call   QWORD PTR [rip+0x177fb]        # 0x140020710
   140008f15:	test   al,al
   140008f17:	jne    0x140008f1d
   140008f19:	lea    rbp,[rbx+0x20]
   140008f1d:	lea    rcx,[rsp+0x1c0]
   140008f25:	mov    rdx,rbp
   140008f28:	call   QWORD PTR [rip+0x1780a]        # 0x140020738
   140008f2e:	lea    rdx,[rsp+0x68]
   140008f33:	lea    rcx,[rsp+0x1c0]
   140008f3b:	call   QWORD PTR [rip+0x173a7]        # 0x1400202e8
   140008f41:	lea    rcx,[rsp+0x1c0]
   140008f49:	call   QWORD PTR [rip+0x177f9]        # 0x140020748
   140008f4f:	lea    rcx,[rsp+0xf0]
   140008f57:	call   QWORD PTR [rip+0x17823]        # 0x140020780
   140008f5d:	lea    rcx,[rsp+0x258]
   140008f65:	call   QWORD PTR [rip+0x177dd]        # 0x140020748
   140008f6b:	lea    rcx,[rsp+0x270]
   140008f73:	call   QWORD PTR [rip+0x1765f]        # 0x1400205d8
   140008f79:	lea    rdx,[rip+0x17b18]        # 0x140020a98
   140008f80:	lea    rcx,[rsp+0x120]
   140008f88:	mov    r8d,0xa
   140008f8e:	mov    rbp,rax
   140008f91:	call   QWORD PTR [rip+0x175e9]        # 0x140020580
   140008f97:	mov    rdi,QWORD PTR [r12+0x10]
   140008f9c:	mov    rsi,rax
   140008f9f:	test   rdi,rdi
   140008fa2:	je     0x140008fed
   140008fa4:	xor    ebx,ebx
   140008fa6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140008fb0:	lea    rcx,[rdi+0x18]
   140008fb4:	mov    rdx,rsi
   140008fb7:	call   QWORD PTR [rip+0x17753]        # 0x140020710
   140008fbd:	test   al,al
   140008fbf:	jne    0x140008fca
   140008fc1:	mov    rbx,rdi
   140008fc4:	mov    rdi,QWORD PTR [rdi+0x8]
   140008fc8:	jmp    0x140008fce
   140008fca:	mov    rdi,QWORD PTR [rdi+0x10]
   140008fce:	test   rdi,rdi
   140008fd1:	jne    0x140008fb0
   140008fd3:	test   rbx,rbx
   140008fd6:	je     0x140008fed
   140008fd8:	lea    rdx,[rbx+0x18]
   140008fdc:	mov    rcx,rsi
   140008fdf:	call   QWORD PTR [rip+0x1772b]        # 0x140020710
   140008fe5:	test   al,al
   140008fe7:	jne    0x140008fed
   140008fe9:	lea    rbp,[rbx+0x20]
   140008fed:	lea    rcx,[rsp+0x160]
   140008ff5:	mov    rdx,rbp
   140008ff8:	call   QWORD PTR [rip+0x1773a]        # 0x140020738
   140008ffe:	lea    rdx,[rsp+0x50]
   140009003:	lea    rcx,[rsp+0x160]
   14000900b:	call   QWORD PTR [rip+0x172d7]        # 0x1400202e8
   140009011:	lea    rcx,[rsp+0x160]
   140009019:	call   QWORD PTR [rip+0x17729]        # 0x140020748
   14000901f:	lea    rcx,[rsp+0x120]
   140009027:	call   QWORD PTR [rip+0x17753]        # 0x140020780
   14000902d:	lea    rcx,[rsp+0x270]
   140009035:	call   QWORD PTR [rip+0x1770d]        # 0x140020748
   14000903b:	mov    rdx,QWORD PTR [rsp+0x68]
   140009040:	cmp    DWORD PTR [rdx+0x4],0x0
   140009044:	je     0x14000918e
   14000904a:	lea    rdx,[rsp+0x68]
   14000904f:	lea    rcx,[rsp+0x170]
   140009057:	call   QWORD PTR [rip+0x1751b]        # 0x140020578
   14000905d:	lea    rdx,[rip+0x17aa8]        # 0x140020b0c
   140009064:	lea    rcx,[rsp+0x100]
   14000906c:	mov    r8d,0x6
   140009072:	call   QWORD PTR [rip+0x17508]        # 0x140020580
   140009078:	mov    rcx,QWORD PTR [rsp+0x3b8]
   140009080:	mov    edx,DWORD PTR [rcx]
   140009082:	mov    rbx,rax
   140009085:	cmp    edx,0x1
   140009088:	je     0x140009110
   14000908e:	test   edx,edx
   140009090:	je     0x140009110
   140009092:	call   QWORD PTR [rip+0x17698]        # 0x140020730
   140009098:	mov    rcx,QWORD PTR [rsp+0x3b8]
   1400090a0:	mov    r8,QWORD PTR [rcx+0x10]
   1400090a4:	mov    rdi,rax
   1400090a7:	test   r8,r8
   1400090aa:	je     0x1400090ce
   1400090ac:	mov    rdx,rax
   1400090af:	mov    rcx,r8
   1400090b2:	call   0x140001210
   1400090b7:	lea    rcx,[rdi+0x8]
   1400090bb:	mov    QWORD PTR [rdi+0x10],rax
   1400090bf:	and    QWORD PTR [rax],0x3
   1400090c3:	or     QWORD PTR [rax],rcx
   1400090c6:	mov    rcx,QWORD PTR [rsp+0x3b8]
   1400090ce:	mov    eax,DWORD PTR [rcx]
   1400090d0:	test   eax,eax
   1400090d2:	je     0x1400090f2
   1400090d4:	cmp    eax,0xffffffff
   1400090d7:	je     0x1400090f7
   1400090d9:	mov    eax,r14d
   1400090dc:	lock xadd DWORD PTR [rcx],eax
   1400090e0:	add    eax,0xffffffff
   1400090e3:	setne  al
   1400090e6:	test   al,al
   1400090e8:	jne    0x1400090f7
   1400090ea:	mov    rcx,QWORD PTR [rsp+0x3b8]
   1400090f2:	call   0x1400022f0
   1400090f7:	mov    rcx,rdi
   1400090fa:	mov    QWORD PTR [rsp+0x3b8],rdi
   140009102:	call   QWORD PTR [rip+0x17568]        # 0x140020670
   140009108:	mov    rcx,QWORD PTR [rsp+0x3b8]
   140009110:	mov    rdx,rbx
   140009113:	call   0x140001c60
   140009118:	test   rax,rax
   14000911b:	jne    0x14000915d
   14000911d:	lea    rcx,[rsp+0x290]
   140009125:	call   QWORD PTR [rip+0x174ad]        # 0x1400205d8
   14000912b:	lea    rdx,[rsp+0x340]
   140009133:	lea    rcx,[rsp+0x3b8]
   14000913b:	mov    r9,rax
   14000913e:	mov    r8,rbx
   140009141:	call   0x140003090
   140009146:	lea    rcx,[rsp+0x290]
   14000914e:	mov    rdi,QWORD PTR [rax]
   140009151:	add    rdi,0x20
   140009155:	call   QWORD PTR [rip+0x175ed]        # 0x140020748
   14000915b:	jmp    0x140009161
   14000915d:	lea    rdi,[rax+0x20]
   140009161:	lea    rdx,[rsp+0x170]
   140009169:	mov    rcx,rdi
   14000916c:	call   QWORD PTR [rip+0x174b6]        # 0x140020628
   140009172:	lea    rcx,[rsp+0x100]
   14000917a:	call   QWORD PTR [rip+0x17600]        # 0x140020780
   140009180:	lea    rcx,[rsp+0x170]
   140009188:	call   QWORD PTR [rip+0x175ba]        # 0x140020748
   14000918e:	mov    rax,QWORD PTR [rsp+0x50]
   140009193:	cmp    DWORD PTR [rax+0x4],0x0
   140009197:	je     0x1400092e1
   14000919d:	lea    rdx,[rsp+0x50]
   1400091a2:	lea    rcx,[rsp+0x190]
   1400091aa:	call   QWORD PTR [rip+0x173c8]        # 0x140020578
   1400091b0:	lea    rdx,[rip+0x17949]        # 0x140020b00
   1400091b7:	lea    rcx,[rsp+0x140]
   1400091bf:	mov    r8d,0x9
   1400091c5:	call   QWORD PTR [rip+0x173b5]        # 0x140020580
   1400091cb:	mov    rcx,QWORD PTR [rsp+0x3b8]
   1400091d3:	mov    edx,DWORD PTR [rcx]
   1400091d5:	mov    rbx,rax
   1400091d8:	cmp    edx,0x1
   1400091db:	je     0x140009263
   1400091e1:	test   edx,edx
   1400091e3:	je     0x140009263
   1400091e5:	call   QWORD PTR [rip+0x17545]        # 0x140020730
   1400091eb:	mov    rcx,QWORD PTR [rsp+0x3b8]
   1400091f3:	mov    r8,QWORD PTR [rcx+0x10]
   1400091f7:	mov    rdi,rax
   1400091fa:	test   r8,r8
   1400091fd:	je     0x140009221
   1400091ff:	mov    rdx,rax
   140009202:	mov    rcx,r8
   140009205:	call   0x140001210
   14000920a:	lea    rcx,[rdi+0x8]
   14000920e:	mov    QWORD PTR [rdi+0x10],rax
   140009212:	and    QWORD PTR [rax],0x3
   140009216:	or     QWORD PTR [rax],rcx
   140009219:	mov    rcx,QWORD PTR [rsp+0x3b8]
   140009221:	mov    eax,DWORD PTR [rcx]
   140009223:	test   eax,eax
   140009225:	je     0x140009245
   140009227:	cmp    eax,0xffffffff
   14000922a:	je     0x14000924a
   14000922c:	mov    eax,r14d
   14000922f:	lock xadd DWORD PTR [rcx],eax
   140009233:	add    eax,0xffffffff
   140009236:	setne  al
   140009239:	test   al,al
   14000923b:	jne    0x14000924a
   14000923d:	mov    rcx,QWORD PTR [rsp+0x3b8]
   140009245:	call   0x1400022f0
   14000924a:	mov    rcx,rdi
   14000924d:	mov    QWORD PTR [rsp+0x3b8],rdi
   140009255:	call   QWORD PTR [rip+0x17415]        # 0x140020670
   14000925b:	mov    rcx,QWORD PTR [rsp+0x3b8]
   140009263:	mov    rdx,rbx
   140009266:	call   0x140001c60
   14000926b:	test   rax,rax
   14000926e:	jne    0x1400092b0
   140009270:	lea    rcx,[rsp+0x2b0]
   140009278:	call   QWORD PTR [rip+0x1735a]        # 0x1400205d8
   14000927e:	lea    rdx,[rsp+0x240]
   140009286:	lea    rcx,[rsp+0x3b8]
   14000928e:	mov    r9,rax
   140009291:	mov    r8,rbx
   140009294:	call   0x140003090
   140009299:	lea    rcx,[rsp+0x2b0]
   1400092a1:	mov    rdi,QWORD PTR [rax]
   1400092a4:	add    rdi,0x20
   1400092a8:	call   QWORD PTR [rip+0x1749a]        # 0x140020748
   1400092ae:	jmp    0x1400092b4
   1400092b0:	lea    rdi,[rax+0x20]
   1400092b4:	lea    rdx,[rsp+0x190]
   1400092bc:	mov    rcx,rdi
   1400092bf:	call   QWORD PTR [rip+0x17363]        # 0x140020628
   1400092c5:	lea    rcx,[rsp+0x140]
   1400092cd:	call   QWORD PTR [rip+0x174ad]        # 0x140020780
   1400092d3:	lea    rcx,[rsp+0x190]
   1400092db:	call   QWORD PTR [rip+0x17467]        # 0x140020748
   1400092e1:	lea    rdx,[rip+0x177a0]        # 0x140020a88
   1400092e8:	lea    rcx,[rsp+0xa0]
   1400092f0:	mov    r8d,0xc
   1400092f6:	call   QWORD PTR [rip+0x17284]        # 0x140020580
   1400092fc:	mov    rdi,QWORD PTR [r12+0x10]
   140009301:	mov    rsi,rax
   140009304:	test   rdi,rdi
   140009307:	je     0x140009349
   140009309:	xor    ebx,ebx
   14000930b:	nop    DWORD PTR [rax+rax*1+0x0]
   140009310:	lea    rcx,[rdi+0x18]
   140009314:	mov    rdx,rsi
   140009317:	call   QWORD PTR [rip+0x173f3]        # 0x140020710
   14000931d:	test   al,al
   14000931f:	jne    0x14000932a
   140009321:	mov    rbx,rdi
   140009324:	mov    rdi,QWORD PTR [rdi+0x8]
   140009328:	jmp    0x14000932e
   14000932a:	mov    rdi,QWORD PTR [rdi+0x10]
   14000932e:	test   rdi,rdi
   140009331:	jne    0x140009310
   140009333:	test   rbx,rbx
   140009336:	je     0x140009349
   140009338:	lea    rdx,[rbx+0x18]
   14000933c:	mov    rcx,rsi
   14000933f:	call   QWORD PTR [rip+0x173cb]        # 0x140020710
   140009345:	test   al,al
   140009347:	je     0x14000934b
   140009349:	xor    ebx,ebx
   14000934b:	lea    rcx,[rsp+0xa0]
   140009353:	test   rbx,rbx
   140009356:	setne  dil
   14000935a:	call   QWORD PTR [rip+0x17420]        # 0x140020780
   140009360:	test   dil,dil
   140009363:	je     0x140009e05
   140009369:	lea    rcx,[rsp+0x2d0]
   140009371:	call   QWORD PTR [rip+0x17261]        # 0x1400205d8
   140009377:	lea    rdx,[rip+0x1770a]        # 0x140020a88
   14000937e:	lea    rcx,[rsp+0xe0]
   140009386:	mov    r8d,0xc
   14000938c:	mov    rdi,rax
   14000938f:	call   QWORD PTR [rip+0x171eb]        # 0x140020580
   140009395:	mov    rcx,QWORD PTR [rsp+0x48]
   14000939a:	mov    rdx,rax
   14000939d:	call   0x140001c60
   1400093a2:	test   rax,rax
   1400093a5:	je     0x1400093ab
   1400093a7:	lea    rdi,[rax+0x20]
   1400093ab:	lea    rcx,[rsp+0x1b0]
   1400093b3:	mov    rdx,rdi
   1400093b6:	call   QWORD PTR [rip+0x1737c]        # 0x140020738
   1400093bc:	lea    rdx,[rsp+0x70]
   1400093c1:	lea    rcx,[rsp+0x1b0]
   1400093c9:	call   QWORD PTR [rip+0x16f69]        # 0x140020338
   1400093cf:	lea    rcx,[rsp+0x1b0]
   1400093d7:	call   QWORD PTR [rip+0x1736b]        # 0x140020748
   1400093dd:	lea    rcx,[rsp+0xe0]
   1400093e5:	call   QWORD PTR [rip+0x17395]        # 0x140020780
   1400093eb:	lea    rcx,[rsp+0x2d0]
   1400093f3:	call   QWORD PTR [rip+0x1734f]        # 0x140020748
   1400093f9:	mov    rcx,QWORD PTR [rsp+0x70]
   1400093fe:	mov    QWORD PTR [rsp+0x78],rcx
   140009403:	mov    eax,DWORD PTR [rcx]
   140009405:	test   eax,eax
   140009407:	je     0x140009419
   140009409:	cmp    eax,0xffffffff
   14000940c:	je     0x140009474
   14000940e:	lock add DWORD PTR [rcx],0x1
   140009412:	mov    rcx,QWORD PTR [rsp+0x78]
   140009417:	jmp    0x140009474
   140009419:	mov    edx,DWORD PTR [rcx+0x4]
   14000941c:	lea    rcx,[rsp+0x78]
   140009421:	call   QWORD PTR [rip+0x17251]        # 0x140020678
   140009427:	mov    rcx,QWORD PTR [rsp+0x78]
   14000942c:	mov    rdx,QWORD PTR [rsp+0x70]
   140009431:	movsxd rax,DWORD PTR [rdx+0x8]
   140009435:	lea    rbx,[rdx+rax*8+0x10]
   14000943a:	movsxd rax,DWORD PTR [rcx+0xc]
   14000943e:	lea    rsi,[rcx+rax*8+0x10]
   140009443:	movsxd rax,DWORD PTR [rcx+0x8]
   140009447:	lea    rdi,[rcx+rax*8+0x10]
   14000944c:	cmp    rdi,rsi
   14000944f:	je     0x140009474
   140009451:	test   rdi,rdi
   140009454:	je     0x140009462
   140009456:	mov    rdx,rbx
   140009459:	mov    rcx,rdi
   14000945c:	call   QWORD PTR [rip+0x17336]        # 0x140020798
   140009462:	add    rdi,0x8
   140009466:	add    rbx,0x8
   14000946a:	cmp    rdi,rsi
   14000946d:	jne    0x140009451
   14000946f:	mov    rcx,QWORD PTR [rsp+0x78]
   140009474:	mov    DWORD PTR [rsp+0x80],0x0
   14000947f:	movsxd rax,DWORD PTR [rcx+0x8]
   140009483:	lea    r15,[rcx+rax*8+0x10]
   140009488:	mov    QWORD PTR [rsp+0x88],r15
   140009490:	movsxd rax,DWORD PTR [rcx+0xc]
   140009494:	lea    rdx,[rcx+rax*8+0x10]
   140009499:	mov    QWORD PTR [rsp+0x90],rdx
   1400094a1:	mov    eax,0x1
   1400094a6:	mov    DWORD PTR [rsp+0x80],eax
   1400094ad:	cmp    r15,rdx
   1400094b0:	je     0x140009de1
   1400094b6:	test   eax,eax
   1400094b8:	je     0x140009dc0
   1400094be:	lea    rcx,[rsp+0x3a8]
   1400094c6:	mov    dl,0x20
   1400094c8:	call   QWORD PTR [rip+0x172c2]        # 0x140020790
   1400094ce:	lea    rdx,[rsp+0x98]
   1400094d6:	xor    r9d,r9d
   1400094d9:	movzx  r8d,WORD PTR [rax]
   1400094dd:	mov    rcx,r15
   1400094e0:	mov    DWORD PTR [rsp+0x20],0x1
   1400094e8:	call   QWORD PTR [rip+0x16e42]        # 0x140020330
   1400094ee:	mov    rdi,rax
   1400094f1:	mov    rcx,QWORD PTR [rax]
   1400094f4:	mov    QWORD PTR [rsp+0x40],rcx
   1400094f9:	mov    edx,DWORD PTR [rcx]
   1400094fb:	test   edx,edx
   1400094fd:	je     0x14000950a
   1400094ff:	cmp    edx,0xffffffff
   140009502:	je     0x14000955e
   140009504:	lock add DWORD PTR [rcx],0x1
   140009508:	jmp    0x14000955e
   14000950a:	mov    edx,DWORD PTR [rcx+0x4]
   14000950d:	lea    rcx,[rsp+0x40]
   140009512:	call   QWORD PTR [rip+0x17160]        # 0x140020678
   140009518:	mov    rdx,QWORD PTR [rsp+0x40]
   14000951d:	mov    rcx,QWORD PTR [rdi]
   140009520:	movsxd rax,DWORD PTR [rdx+0xc]
   140009524:	lea    rsi,[rdx+rax*8+0x10]
   140009529:	movsxd rax,DWORD PTR [rcx+0x8]
   14000952d:	lea    rbx,[rcx+rax*8+0x10]
   140009532:	movsxd rax,DWORD PTR [rdx+0x8]
   140009536:	lea    rdi,[rdx+rax*8+0x10]
   14000953b:	cmp    rdi,rsi
   14000953e:	je     0x14000955e
   140009540:	test   rdi,rdi
   140009543:	je     0x140009551
   140009545:	mov    rdx,rbx
   140009548:	mov    rcx,rdi
   14000954b:	call   QWORD PTR [rip+0x17247]        # 0x140020798
   140009551:	add    rdi,0x8
   140009555:	add    rbx,0x8
   140009559:	cmp    rdi,rsi
   14000955c:	jne    0x140009540
   14000955e:	mov    rbx,QWORD PTR [rsp+0x98]
   140009566:	mov    eax,DWORD PTR [rbx]
   140009568:	test   eax,eax
   14000956a:	je     0x14000958a
   14000956c:	cmp    eax,0xffffffff
   14000956f:	je     0x1400095bc
   140009571:	mov    eax,r14d
   140009574:	lock xadd DWORD PTR [rbx],eax
   140009578:	add    eax,0xffffffff
   14000957b:	setne  al
   14000957e:	test   al,al
   140009580:	jne    0x1400095bc
   140009582:	mov    rbx,QWORD PTR [rsp+0x98]
   14000958a:	movsxd rax,DWORD PTR [rbx+0xc]
   14000958e:	lea    rdi,[rbx+rax*8+0x10]
   140009593:	movsxd rax,DWORD PTR [rbx+0x8]
   140009597:	lea    rsi,[rbx+rax*8+0x10]
   14000959c:	cmp    rsi,rdi
   14000959f:	je     0x1400095b3
   1400095a1:	sub    rdi,0x8
   1400095a5:	mov    rcx,rdi
   1400095a8:	call   QWORD PTR [rip+0x171d2]        # 0x140020780
   1400095ae:	cmp    rdi,rsi
   1400095b1:	jne    0x1400095a1
   1400095b3:	mov    rcx,rbx
   1400095b6:	call   QWORD PTR [rip+0x17114]        # 0x1400206d0
   1400095bc:	mov    rax,QWORD PTR [rip+0x17195]        # 0x140020758
   1400095c3:	lea    rdx,[rip+0x1747e]        # 0x140020a48
   1400095ca:	lea    rcx,[rsp+0x108]
   1400095d2:	mov    r8d,0x6
   1400095d8:	mov    QWORD PTR [rsp+0x30],rax
   1400095dd:	call   QWORD PTR [rip+0x16f9d]        # 0x140020580
   1400095e3:	lea    rcx,[rsp+0x1d0]
   1400095eb:	mov    rdx,rax
   1400095ee:	call   QWORD PTR [rip+0x16f84]        # 0x140020578
   1400095f4:	lea    rdx,[rip+0x17469]        # 0x140020a64
   1400095fb:	lea    rcx,[rsp+0xf8]
   140009603:	mov    r8d,0x4
   140009609:	call   QWORD PTR [rip+0x16f71]        # 0x140020580
   14000960f:	mov    rcx,QWORD PTR [rsp+0x30]
   140009614:	mov    edx,DWORD PTR [rcx]
   140009616:	mov    r12,rax
   140009619:	cmp    edx,0x1
   14000961c:	je     0x1400096e6
   140009622:	test   edx,edx
   140009624:	je     0x1400096e6
   14000962a:	call   QWORD PTR [rip+0x17100]        # 0x140020730
   140009630:	mov    rdi,QWORD PTR [rsp+0x30]
   140009635:	mov    rcx,QWORD PTR [rdi+0x10]
   140009639:	mov    rsi,rax
   14000963c:	test   rcx,rcx
   14000963f:	je     0x14000965d
   140009641:	mov    rdx,rax
   140009644:	call   0x140001210
   140009649:	lea    rcx,[rsi+0x8]
   14000964d:	mov    QWORD PTR [rsi+0x10],rax
   140009651:	and    QWORD PTR [rax],0x3
   140009655:	or     QWORD PTR [rax],rcx
   140009658:	mov    rdi,QWORD PTR [rsp+0x30]
   14000965d:	mov    eax,DWORD PTR [rdi]
   14000965f:	test   eax,eax
   140009661:	je     0x14000967e
   140009663:	cmp    eax,0xffffffff
   140009666:	je     0x1400096d3
   140009668:	mov    eax,r14d
   14000966b:	lock xadd DWORD PTR [rdi],eax
   14000966f:	add    eax,0xffffffff
   140009672:	setne  al
   140009675:	test   al,al
   140009677:	jne    0x1400096d3
   140009679:	mov    rdi,QWORD PTR [rsp+0x30]
   14000967e:	mov    rbx,QWORD PTR [rdi+0x10]
   140009682:	test   rbx,rbx
   140009685:	je     0x1400096ca
   140009687:	lea    rcx,[rbx+0x18]
   14000968b:	call   QWORD PTR [rip+0x170ef]        # 0x140020780
   140009691:	lea    rcx,[rbx+0x20]
   140009695:	call   QWORD PTR [rip+0x170ad]        # 0x140020748
   14000969b:	mov    rcx,QWORD PTR [rbx+0x8]
   14000969f:	test   rcx,rcx
   1400096a2:	je     0x1400096a9
   1400096a4:	call   0x140001fd0
   1400096a9:	mov    rcx,QWORD PTR [rbx+0x10]
   1400096ad:	test   rcx,rcx
   1400096b0:	je     0x1400096b7
   1400096b2:	call   0x140001fd0
   1400096b7:	mov    rdx,QWORD PTR [rdi+0x10]
   1400096bb:	mov    r8d,0x8
   1400096c1:	mov    rcx,rdi
   1400096c4:	call   QWORD PTR [rip+0x16fb6]        # 0x140020680
   1400096ca:	mov    rcx,rdi
   1400096cd:	call   QWORD PTR [rip+0x16fb5]        # 0x140020688
   1400096d3:	mov    rcx,rsi
   1400096d6:	mov    QWORD PTR [rsp+0x30],rsi
   1400096db:	call   QWORD PTR [rip+0x16f8f]        # 0x140020670
   1400096e1:	mov    rcx,QWORD PTR [rsp+0x30]
   1400096e6:	mov    rdi,QWORD PTR [rcx+0x10]
   1400096ea:	test   rdi,rdi
   1400096ed:	je     0x140009733
   1400096ef:	xor    ebx,ebx
   1400096f1:	lea    rcx,[rdi+0x18]
   1400096f5:	mov    rdx,r12
   1400096f8:	call   QWORD PTR [rip+0x17012]        # 0x140020710
   1400096fe:	test   al,al
   140009700:	jne    0x14000970b
   140009702:	mov    rbx,rdi
   140009705:	mov    rdi,QWORD PTR [rdi+0x8]
   140009709:	jmp    0x14000970f
   14000970b:	mov    rdi,QWORD PTR [rdi+0x10]
   14000970f:	test   rdi,rdi
   140009712:	jne    0x1400096f1
   140009714:	test   rbx,rbx
   140009717:	je     0x140009733
   140009719:	lea    rdx,[rbx+0x18]
   14000971d:	mov    rcx,r12
   140009720:	call   QWORD PTR [rip+0x16fea]        # 0x140020710
   140009726:	test   al,al
   140009728:	jne    0x140009733
   14000972a:	lea    rcx,[rbx+0x20]
   14000972e:	jmp    0x1400098e6
   140009733:	lea    rcx,[rsp+0x2e8]
   14000973b:	call   QWORD PTR [rip+0x16e97]        # 0x1400205d8
   140009741:	mov    rcx,QWORD PTR [rsp+0x30]
   140009746:	mov    edx,DWORD PTR [rcx]
   140009748:	mov    r13,rax
   14000974b:	cmp    edx,0x1
   14000974e:	je     0x140009818
   140009754:	test   edx,edx
   140009756:	je     0x140009818
   14000975c:	call   QWORD PTR [rip+0x16fce]        # 0x140020730
   140009762:	mov    rdi,QWORD PTR [rsp+0x30]
   140009767:	mov    rcx,QWORD PTR [rdi+0x10]
   14000976b:	mov    rsi,rax
   14000976e:	test   rcx,rcx
   140009771:	je     0x14000978f
   140009773:	mov    rdx,rax
   140009776:	call   0x140001210
   14000977b:	lea    rcx,[rsi+0x8]
   14000977f:	mov    QWORD PTR [rsi+0x10],rax
   140009783:	and    QWORD PTR [rax],0x3
   140009787:	or     QWORD PTR [rax],rcx
   14000978a:	mov    rdi,QWORD PTR [rsp+0x30]
   14000978f:	mov    eax,DWORD PTR [rdi]
   140009791:	test   eax,eax
   140009793:	je     0x1400097b0
   140009795:	cmp    eax,0xffffffff
   140009798:	je     0x140009805
   14000979a:	mov    eax,r14d
   14000979d:	lock xadd DWORD PTR [rdi],eax
   1400097a1:	add    eax,0xffffffff
   1400097a4:	setne  al
   1400097a7:	test   al,al
   1400097a9:	jne    0x140009805
   1400097ab:	mov    rdi,QWORD PTR [rsp+0x30]
   1400097b0:	mov    rbx,QWORD PTR [rdi+0x10]
   1400097b4:	test   rbx,rbx
   1400097b7:	je     0x1400097fc
   1400097b9:	lea    rcx,[rbx+0x18]
   1400097bd:	call   QWORD PTR [rip+0x16fbd]        # 0x140020780
   1400097c3:	lea    rcx,[rbx+0x20]
   1400097c7:	call   QWORD PTR [rip+0x16f7b]        # 0x140020748
   1400097cd:	mov    rcx,QWORD PTR [rbx+0x8]
   1400097d1:	test   rcx,rcx
   1400097d4:	je     0x1400097db
   1400097d6:	call   0x140001fd0
   1400097db:	mov    rcx,QWORD PTR [rbx+0x10]
   1400097df:	test   rcx,rcx
   1400097e2:	je     0x1400097e9
   1400097e4:	call   0x140001fd0
   1400097e9:	mov    rdx,QWORD PTR [rdi+0x10]
   1400097ed:	mov    r8d,0x8
   1400097f3:	mov    rcx,rdi
   1400097f6:	call   QWORD PTR [rip+0x16e84]        # 0x140020680
   1400097fc:	mov    rcx,rdi
   1400097ff:	call   QWORD PTR [rip+0x16e83]        # 0x140020688
   140009805:	mov    rcx,rsi
   140009808:	mov    QWORD PTR [rsp+0x30],rsi
   14000980d:	call   QWORD PTR [rip+0x16e5d]        # 0x140020670
   140009813:	mov    rcx,QWORD PTR [rsp+0x30]
   140009818:	mov    rbx,QWORD PTR [rcx+0x10]
   14000981c:	xor    edi,edi
   14000981e:	lea    rbp,[rcx+0x8]
   140009822:	mov    sil,0x1
   140009825:	test   rbx,rbx
   140009828:	je     0x14000988e
   14000982a:	nop    WORD PTR [rax+rax*1+0x0]
   140009830:	lea    rcx,[rbx+0x18]
   140009834:	mov    rdx,r12
   140009837:	mov    rbp,rbx
   14000983a:	call   QWORD PTR [rip+0x16ed0]        # 0x140020710
   140009840:	test   al,al
   140009842:	jne    0x140009850
   140009844:	mov    rdi,rbx
   140009847:	mov    rbx,QWORD PTR [rbx+0x8]
   14000984b:	mov    sil,0x1
   14000984e:	jmp    0x140009857
   140009850:	mov    rbx,QWORD PTR [rbx+0x10]
   140009854:	xor    sil,sil
   140009857:	test   rbx,rbx
   14000985a:	jne    0x140009830
   14000985c:	test   rdi,rdi
   14000985f:	je     0x140009889
   140009861:	lea    rdx,[rdi+0x18]
   140009865:	mov    rcx,r12
   140009868:	call   QWORD PTR [rip+0x16ea2]        # 0x140020710
   14000986e:	test   al,al
   140009870:	jne    0x140009889
   140009872:	lea    rcx,[rdi+0x20]
   140009876:	mov    rdx,r13
   140009879:	call   QWORD PTR [rip+0x16da9]        # 0x140020628
   14000987f:	mov    QWORD PTR [rsp+0xe8],rdi
   140009887:	jmp    0x1400098d4
   140009889:	mov    rcx,QWORD PTR [rsp+0x30]
   14000988e:	mov    edx,0x30
   140009893:	mov    r9,rbp
   140009896:	mov    BYTE PTR [rsp+0x20],sil
   14000989b:	lea    r8d,[rdx-0x28]
   14000989f:	call   QWORD PTR [rip+0x16e83]        # 0x140020728
   1400098a5:	mov    rdi,rax
   1400098a8:	lea    rcx,[rax+0x18]
   1400098ac:	test   rcx,rcx
   1400098af:	je     0x1400098ba
   1400098b1:	mov    rdx,r12
   1400098b4:	call   QWORD PTR [rip+0x16ede]        # 0x140020798
   1400098ba:	lea    rcx,[rdi+0x20]
   1400098be:	test   rcx,rcx
   1400098c1:	je     0x1400098cc
   1400098c3:	mov    rdx,r13
   1400098c6:	call   QWORD PTR [rip+0x16e6c]        # 0x140020738
   1400098cc:	mov    QWORD PTR [rsp+0xe8],rdi
   1400098d4:	lea    rcx,[rsp+0x2e8]
   1400098dc:	call   QWORD PTR [rip+0x16e66]        # 0x140020748
   1400098e2:	lea    rcx,[rdi+0x20]
   1400098e6:	lea    rdx,[rsp+0x1d0]
   1400098ee:	call   QWORD PTR [rip+0x16d34]        # 0x140020628
   1400098f4:	lea    rcx,[rsp+0xf8]
   1400098fc:	call   QWORD PTR [rip+0x16e7e]        # 0x140020780
   140009902:	lea    rcx,[rsp+0x1d0]
   14000990a:	call   QWORD PTR [rip+0x16e38]        # 0x140020748
   140009910:	lea    rcx,[rsp+0x108]
   140009918:	call   QWORD PTR [rip+0x16e62]        # 0x140020780
   14000991e:	mov    rcx,QWORD PTR [rsp+0x40]
   140009923:	mov    eax,DWORD PTR [rcx]
   140009925:	cmp    eax,0x1
   140009928:	je     0x1400099f0
   14000992e:	test   eax,eax
   140009930:	je     0x1400099f0
   140009936:	movsxd rax,DWORD PTR [rcx+0x8]
   14000993a:	mov    edx,DWORD PTR [rcx+0x4]
   14000993d:	lea    rbx,[rcx+rax*8+0x10]
   140009942:	lea    rcx,[rsp+0x40]
   140009947:	call   QWORD PTR [rip+0x16d2b]        # 0x140020678
   14000994d:	mov    rcx,QWORD PTR [rsp+0x40]
   140009952:	movsxd rdx,DWORD PTR [rcx+0xc]
   140009956:	mov    rsi,rax
   140009959:	lea    rbp,[rcx+rdx*8+0x10]
   14000995e:	movsxd rdx,DWORD PTR [rcx+0x8]
   140009962:	lea    rdi,[rcx+rdx*8+0x10]
   140009967:	cmp    rdi,rbp
   14000996a:	je     0x140009993
   14000996c:	nop    DWORD PTR [rax+0x0]
   140009970:	test   rdi,rdi
   140009973:	je     0x140009981
   140009975:	mov    rdx,rbx
   140009978:	mov    rcx,rdi
   14000997b:	call   QWORD PTR [rip+0x16e17]        # 0x140020798
   140009981:	add    rdi,0x8
   140009985:	add    rbx,0x8
   140009989:	cmp    rdi,rbp
   14000998c:	jne    0x140009970
   14000998e:	mov    rcx,QWORD PTR [rsp+0x40]
   140009993:	mov    eax,DWORD PTR [rsi]
   140009995:	test   eax,eax
   140009997:	je     0x1400099b6
   140009999:	cmp    eax,0xffffffff
   14000999c:	je     0x1400099f0
   14000999e:	mov    eax,r14d
   1400099a1:	lock xadd DWORD PTR [rsi],eax
   1400099a5:	add    eax,0xffffffff
   1400099a8:	setne  al
   1400099ab:	test   al,al
   1400099ad:	je     0x1400099b6
   1400099af:	mov    rcx,QWORD PTR [rsp+0x40]
   1400099b4:	jmp    0x1400099f0
   1400099b6:	movsxd rax,DWORD PTR [rsi+0xc]
   1400099ba:	lea    rdi,[rsi+rax*8+0x10]
   1400099bf:	movsxd rax,DWORD PTR [rsi+0x8]
   1400099c3:	lea    rbx,[rsi+rax*8+0x10]
   1400099c8:	cmp    rbx,rdi
   1400099cb:	je     0x1400099e2
   1400099cd:	nop    DWORD PTR [rax]
   1400099d0:	sub    rdi,0x8
   1400099d4:	mov    rcx,rdi
   1400099d7:	call   QWORD PTR [rip+0x16da3]        # 0x140020780
   1400099dd:	cmp    rdi,rbx
   1400099e0:	jne    0x1400099d0
   1400099e2:	mov    rcx,rsi
   1400099e5:	call   QWORD PTR [rip+0x16ce5]        # 0x1400206d0
   1400099eb:	mov    rcx,QWORD PTR [rsp+0x40]
   1400099f0:	movsxd rax,DWORD PTR [rcx+0x8]
   1400099f4:	lea    rdx,[rcx+rax*8+0x10]
   1400099f9:	lea    rcx,[rsp+0x1f0]
   140009a01:	call   QWORD PTR [rip+0x16b71]        # 0x140020578
   140009a07:	lea    rdx,[rip+0x1706e]        # 0x140020a7c
   140009a0e:	lea    rcx,[rsp+0x118]
   140009a16:	mov    r8d,0x4
   140009a1c:	call   QWORD PTR [rip+0x16b5e]        # 0x140020580
   140009a22:	mov    rcx,QWORD PTR [rsp+0x30]
   140009a27:	mov    edx,DWORD PTR [rcx]
   140009a29:	mov    rbx,rax
   140009a2c:	cmp    edx,0x1
   140009a2f:	je     0x140009aa4
   140009a31:	test   edx,edx
   140009a33:	je     0x140009aa4
   140009a35:	call   QWORD PTR [rip+0x16cf5]        # 0x140020730
   140009a3b:	mov    rcx,QWORD PTR [rsp+0x30]
   140009a40:	mov    r8,QWORD PTR [rcx+0x10]
   140009a44:	mov    rdi,rax
   140009a47:	test   r8,r8
   140009a4a:	je     0x140009a6b
   140009a4c:	mov    rdx,rax
   140009a4f:	mov    rcx,r8
   140009a52:	call   0x140001210
   140009a57:	lea    rcx,[rdi+0x8]
   140009a5b:	mov    QWORD PTR [rdi+0x10],rax
   140009a5f:	and    QWORD PTR [rax],0x3
   140009a63:	or     QWORD PTR [rax],rcx
   140009a66:	mov    rcx,QWORD PTR [rsp+0x30]
   140009a6b:	mov    eax,DWORD PTR [rcx]
   140009a6d:	test   eax,eax
   140009a6f:	je     0x140009a8c
   140009a71:	cmp    eax,0xffffffff
   140009a74:	je     0x140009a91
   140009a76:	mov    eax,r14d
   140009a79:	lock xadd DWORD PTR [rcx],eax
   140009a7d:	add    eax,0xffffffff
   140009a80:	setne  al
   140009a83:	test   al,al
   140009a85:	jne    0x140009a91
   140009a87:	mov    rcx,QWORD PTR [rsp+0x30]
   140009a8c:	call   0x1400022f0
   140009a91:	mov    rcx,rdi
   140009a94:	mov    QWORD PTR [rsp+0x30],rdi
   140009a99:	call   QWORD PTR [rip+0x16bd1]        # 0x140020670
   140009a9f:	mov    rcx,QWORD PTR [rsp+0x30]
   140009aa4:	mov    rdx,rbx
   140009aa7:	call   0x140001c60
   140009aac:	test   rax,rax
   140009aaf:	jne    0x140009aee
   140009ab1:	lea    rcx,[rsp+0x308]
   140009ab9:	call   QWORD PTR [rip+0x16b19]        # 0x1400205d8
   140009abf:	lea    rdx,[rsp+0x268]
   140009ac7:	lea    rcx,[rsp+0x30]
   140009acc:	mov    r9,rax
   140009acf:	mov    r8,rbx
   140009ad2:	call   0x140003090
   140009ad7:	lea    rcx,[rsp+0x308]
   140009adf:	mov    rdi,QWORD PTR [rax]
   140009ae2:	add    rdi,0x20
   140009ae6:	call   QWORD PTR [rip+0x16c5c]        # 0x140020748
   140009aec:	jmp    0x140009af2
   140009aee:	lea    rdi,[rax+0x20]
   140009af2:	lea    rdx,[rsp+0x1f0]
   140009afa:	mov    rcx,rdi
   140009afd:	call   QWORD PTR [rip+0x16b25]        # 0x140020628
   140009b03:	lea    rcx,[rsp+0x118]
   140009b0b:	call   QWORD PTR [rip+0x16c6f]        # 0x140020780
   140009b11:	lea    rcx,[rsp+0x1f0]
   140009b19:	call   QWORD PTR [rip+0x16c29]        # 0x140020748
   140009b1f:	mov    rdx,QWORD PTR [rsp+0x40]
   140009b24:	mov    eax,DWORD PTR [rdx]
   140009b26:	cmp    eax,0x1
   140009b29:	je     0x140009b3c
   140009b2b:	test   eax,eax
   140009b2d:	je     0x140009b3c
   140009b2f:	mov    edx,DWORD PTR [rdx+0x4]
   140009b32:	lea    rcx,[rsp+0x40]
   140009b37:	call   0x140002c30
   140009b3c:	lea    rcx,[rsp+0x40]
   140009b41:	mov    edx,0x1
   140009b46:	call   QWORD PTR [rip+0x167dc]        # 0x140020328
   140009b4c:	lea    rcx,[rsp+0x210]
   140009b54:	mov    rdx,rax
   140009b57:	call   QWORD PTR [rip+0x16a1b]        # 0x140020578
   140009b5d:	lea    rdx,[rip+0x16edc]        # 0x140020a40
   140009b64:	lea    rcx,[rsp+0xa8]
   140009b6c:	mov    r8d,0x7
   140009b72:	call   QWORD PTR [rip+0x16a08]        # 0x140020580
   140009b78:	mov    rcx,QWORD PTR [rsp+0x30]
   140009b7d:	mov    edx,DWORD PTR [rcx]
   140009b7f:	mov    rbx,rax
   140009b82:	cmp    edx,0x1
   140009b85:	je     0x140009bfc
   140009b87:	test   edx,edx
   140009b89:	je     0x140009bfc
   140009b8b:	call   QWORD PTR [rip+0x16b9f]        # 0x140020730
   140009b91:	mov    rcx,QWORD PTR [rsp+0x30]
   140009b96:	mov    r8,QWORD PTR [rcx+0x10]
   140009b9a:	mov    rdi,rax
   140009b9d:	test   r8,r8
   140009ba0:	je     0x140009bc3
   140009ba2:	mov    rdx,rax
   140009ba5:	mov    rcx,r8
   140009ba8:	call   0x140001210
   140009bad:	lea    rdx,[rdi+0x8]
   140009bb1:	mov    rcx,rax
   140009bb4:	mov    QWORD PTR [rdi+0x10],rax
   140009bb8:	call   QWORD PTR [rip+0x16762]        # 0x140020320
   140009bbe:	mov    rcx,QWORD PTR [rsp+0x30]
   140009bc3:	mov    eax,DWORD PTR [rcx]
   140009bc5:	test   eax,eax
   140009bc7:	je     0x140009be4
   140009bc9:	cmp    eax,0xffffffff
   140009bcc:	je     0x140009be9
   140009bce:	mov    eax,r14d
   140009bd1:	lock xadd DWORD PTR [rcx],eax
   140009bd5:	add    eax,0xffffffff
   140009bd8:	setne  al
   140009bdb:	test   al,al
   140009bdd:	jne    0x140009be9
   140009bdf:	mov    rcx,QWORD PTR [rsp+0x30]
   140009be4:	call   0x1400022f0
   140009be9:	mov    rcx,rdi
   140009bec:	mov    QWORD PTR [rsp+0x30],rdi
   140009bf1:	call   QWORD PTR [rip+0x16a79]        # 0x140020670
   140009bf7:	mov    rcx,QWORD PTR [rsp+0x30]
   140009bfc:	mov    rdx,rbx
   140009bff:	call   0x140001c60
   140009c04:	test   rax,rax
   140009c07:	jne    0x140009c46
   140009c09:	lea    rcx,[rsp+0x328]
   140009c11:	call   QWORD PTR [rip+0x169c1]        # 0x1400205d8
   140009c17:	lea    rdx,[rsp+0x2e0]
   140009c1f:	lea    rcx,[rsp+0x30]
   140009c24:	mov    r9,rax
   140009c27:	mov    r8,rbx
   140009c2a:	call   0x140003090
   140009c2f:	lea    rcx,[rsp+0x328]
   140009c37:	mov    rdi,QWORD PTR [rax]
   140009c3a:	add    rdi,0x20
   140009c3e:	call   QWORD PTR [rip+0x16b04]        # 0x140020748
   140009c44:	jmp    0x140009c4a
   140009c46:	lea    rdi,[rax+0x20]
   140009c4a:	lea    rdx,[rsp+0x210]
   140009c52:	mov    rcx,rdi
   140009c55:	call   QWORD PTR [rip+0x169cd]        # 0x140020628
   140009c5b:	lea    rcx,[rsp+0xa8]
   140009c63:	call   QWORD PTR [rip+0x16b17]        # 0x140020780
   140009c69:	lea    rcx,[rsp+0x210]
   140009c71:	call   QWORD PTR [rip+0x16ad1]        # 0x140020748
   140009c77:	lea    rdx,[rsp+0x30]
   140009c7c:	lea    rcx,[rsp+0xc8]
   140009c84:	call   QWORD PTR [rip+0x16936]        # 0x1400205c0
   140009c8a:	mov    rdx,QWORD PTR [rsp+0x38]
   140009c8f:	mov    eax,DWORD PTR [rdx]
   140009c91:	cmp    eax,0x1
   140009c94:	je     0x140009cde
   140009c96:	test   eax,eax
   140009c98:	je     0x140009cde
   140009c9a:	lea    rcx,[rsp+0x38]
   140009c9f:	mov    edx,0x7fffffff
   140009ca4:	mov    r8d,0x1
   140009caa:	call   0x1400029a0
   140009caf:	mov    ecx,0x10
   140009cb4:	mov    rdi,rax
   140009cb7:	call   0x14001ee64
   140009cbc:	test   rax,rax
   140009cbf:	je     0x140009cd7
   140009cc1:	lea    rdx,[rsp+0xc8]
   140009cc9:	mov    rcx,rax
   140009ccc:	call   QWORD PTR [rip+0x16a66]        # 0x140020738
   140009cd2:	mov    QWORD PTR [rdi],rax
   140009cd5:	jmp    0x140009d13
   140009cd7:	xor    eax,eax
   140009cd9:	mov    QWORD PTR [rdi],rax
   140009cdc:	jmp    0x140009d13
   140009cde:	lea    rcx,[rsp+0x38]
   140009ce3:	call   QWORD PTR [rip+0x1694f]        # 0x140020638
   140009ce9:	mov    ecx,0x10
   140009cee:	mov    rdi,rax
   140009cf1:	call   0x14001ee64
   140009cf6:	test   rax,rax
   140009cf9:	je     0x140009d0e
   140009cfb:	lea    rdx,[rsp+0xc8]
   140009d03:	mov    rcx,rax
   140009d06:	call   QWORD PTR [rip+0x16a2c]        # 0x140020738
   140009d0c:	jmp    0x140009d10
   140009d0e:	xor    eax,eax
   140009d10:	mov    QWORD PTR [rdi],rax
   140009d13:	lea    rcx,[rsp+0xc8]
   140009d1b:	call   QWORD PTR [rip+0x16a27]        # 0x140020748
   140009d21:	mov    rcx,QWORD PTR [rsp+0x30]
   140009d26:	mov    eax,DWORD PTR [rcx]
   140009d28:	test   eax,eax
   140009d2a:	je     0x140009d47
   140009d2c:	cmp    eax,0xffffffff
   140009d2f:	je     0x140009d4c
   140009d31:	mov    eax,r14d
   140009d34:	lock xadd DWORD PTR [rcx],eax
   140009d38:	add    eax,0xffffffff
   140009d3b:	setne  al
   140009d3e:	test   al,al
   140009d40:	jne    0x140009d4c
   140009d42:	mov    rcx,QWORD PTR [rsp+0x30]
   140009d47:	call   0x1400022f0
   140009d4c:	mov    rbx,QWORD PTR [rsp+0x40]
   140009d51:	mov    eax,DWORD PTR [rbx]
   140009d53:	test   eax,eax
   140009d55:	je     0x140009d72
   140009d57:	cmp    eax,0xffffffff
   140009d5a:	je     0x140009dab
   140009d5c:	mov    eax,r14d
   140009d5f:	lock xadd DWORD PTR [rbx],eax
   140009d63:	add    eax,0xffffffff
   140009d66:	setne  al
   140009d69:	test   al,al
   140009d6b:	jne    0x140009dab
   140009d6d:	mov    rbx,QWORD PTR [rsp+0x40]
   140009d72:	movsxd rax,DWORD PTR [rbx+0xc]
   140009d76:	lea    rdi,[rbx+rax*8+0x10]
   140009d7b:	movsxd rax,DWORD PTR [rbx+0x8]
   140009d7f:	lea    rsi,[rbx+rax*8+0x10]
   140009d84:	cmp    rsi,rdi
   140009d87:	je     0x140009da2
   140009d89:	nop    DWORD PTR [rax+0x0]
   140009d90:	sub    rdi,0x8
   140009d94:	mov    rcx,rdi
   140009d97:	call   QWORD PTR [rip+0x169e3]        # 0x140020780
   140009d9d:	cmp    rdi,rsi
   140009da0:	jne    0x140009d90
   140009da2:	mov    rcx,rbx
   140009da5:	call   QWORD PTR [rip+0x16925]        # 0x1400206d0
   140009dab:	mov    eax,DWORD PTR [rsp+0x80]
   140009db2:	dec    eax
   140009db4:	mov    DWORD PTR [rsp+0x80],eax
   140009dbb:	jmp    0x1400094b6
   140009dc0:	mov    r15,QWORD PTR [rsp+0x88]
   140009dc8:	mov    rdx,QWORD PTR [rsp+0x90]
   140009dd0:	add    r15,0x8
   140009dd4:	mov    QWORD PTR [rsp+0x88],r15
   140009ddc:	jmp    0x1400094a1
   140009de1:	lea    rcx,[rsp+0x78]
   140009de6:	call   0x140002360
   140009deb:	lea    rcx,[rsp+0x70]
   140009df0:	call   0x140002360
   140009df5:	mov    r13d,DWORD PTR [rsp+0x3b0]
   140009dfd:	mov    r15,QWORD PTR [rsp+0x3a0]
   140009e05:	lea    rcx,[rsp+0x50]
   140009e0a:	call   QWORD PTR [rip+0x16970]        # 0x140020780
   140009e10:	lea    rcx,[rsp+0x68]
   140009e15:	call   QWORD PTR [rip+0x16965]        # 0x140020780
   140009e1b:	mov    rdx,QWORD PTR [rsp+0x48]
   140009e20:	mov    eax,DWORD PTR [rdx]
   140009e22:	test   eax,eax
   140009e24:	je     0x140009e3c
   140009e26:	cmp    eax,0xffffffff
   140009e29:	je     0x140009e46
   140009e2b:	mov    eax,r14d
   140009e2e:	lock xadd DWORD PTR [rdx],eax
   140009e32:	add    eax,0xffffffff
   140009e35:	setne  al
   140009e38:	test   al,al
   140009e3a:	jne    0x140009e46
   140009e3c:	mov    rcx,QWORD PTR [rsp+0x48]
   140009e41:	call   0x1400022f0
   140009e46:	lea    rcx,[rsp+0x58]
   140009e4b:	call   QWORD PTR [rip+0x1692f]        # 0x140020780
   140009e51:	lea    rdx,[rsp+0x3b8]
   140009e59:	lea    rcx,[rsp+0x230]
   140009e61:	call   QWORD PTR [rip+0x16759]        # 0x1400205c0
   140009e67:	lea    rdx,[rsp+0x230]
   140009e6f:	mov    rcx,r15
   140009e72:	call   0x140002ef0
   140009e77:	lea    rcx,[rsp+0x230]
   140009e7f:	call   QWORD PTR [rip+0x168c3]        # 0x140020748
   140009e85:	mov    rcx,QWORD PTR [rsp+0x3b8]
   140009e8d:	mov    eax,DWORD PTR [rcx]
   140009e8f:	test   eax,eax
   140009e91:	je     0x140009eb1
   140009e93:	cmp    eax,0xffffffff
   140009e96:	je     0x140009eb6
   140009e98:	mov    eax,r14d
   140009e9b:	lock xadd DWORD PTR [rcx],eax
   140009e9f:	add    eax,0xffffffff
   140009ea2:	setne  al
   140009ea5:	test   al,al
   140009ea7:	jne    0x140009eb6
   140009ea9:	mov    rcx,QWORD PTR [rsp+0x3b8]
   140009eb1:	call   0x1400022f0
   140009eb6:	mov    rdi,QWORD PTR [rsp+0x38]
   140009ebb:	inc    QWORD PTR [rsp+0x60]
   140009ec0:	inc    r13d
   140009ec3:	mov    eax,DWORD PTR [rdi+0xc]
   140009ec6:	mov    DWORD PTR [rsp+0x3b0],r13d
   140009ece:	sub    eax,DWORD PTR [rdi+0x8]
   140009ed1:	cmp    r13d,eax
   140009ed4:	jl     0x140008660
   140009eda:	mov    r12,QWORD PTR [rsp+0x360]
   140009ee2:	mov    eax,DWORD PTR [rdi]
   140009ee4:	mov    r13,QWORD PTR [rsp+0x358]
   140009eec:	test   eax,eax
   140009eee:	je     0x140009f0a
   140009ef0:	cmp    eax,0xffffffff
   140009ef3:	je     0x140009f4d
   140009ef5:	lock xadd DWORD PTR [rdi],r14d
   140009efa:	add    r14d,0xffffffff
   140009efe:	setne  al
   140009f01:	test   al,al
   140009f03:	jne    0x140009f4d
   140009f05:	mov    rdi,QWORD PTR [rsp+0x38]
   140009f0a:	movsxd rax,DWORD PTR [rdi+0xc]
   140009f0e:	lea    rbx,[rdi+rax*8+0x10]
   140009f13:	movsxd rax,DWORD PTR [rdi+0x8]
   140009f17:	lea    rbp,[rdi+rax*8+0x10]
   140009f1c:	cmp    rbp,rbx
   140009f1f:	je     0x140009f44
   140009f21:	mov    rsi,QWORD PTR [rbx-0x8]
   140009f25:	sub    rbx,0x8
   140009f29:	test   rsi,rsi
   140009f2c:	je     0x140009f3f
   140009f2e:	mov    rcx,rsi
   140009f31:	call   QWORD PTR [rip+0x16811]        # 0x140020748
   140009f37:	mov    rcx,rsi
   140009f3a:	call   0x14001ee46
   140009f3f:	cmp    rbx,rbp
   140009f42:	jne    0x140009f21
   140009f44:	mov    rcx,rdi
   140009f47:	call   QWORD PTR [rip+0x16783]        # 0x1400206d0
   140009f4d:	mov    rax,r15
   140009f50:	add    rsp,0x368
   140009f57:	pop    r15
   140009f59:	pop    r14
   140009f5b:	pop    rdi
   140009f5c:	pop    rsi
   140009f5d:	pop    rbp
   140009f5e:	pop    rbx
   140009f5f:	ret    
   140009f60:	mov    r11,rsp
   140009f63:	push   rbx
   140009f64:	push   rbp
   140009f65:	push   rsi
   140009f66:	push   rdi
   140009f67:	push   r13
   140009f69:	sub    rsp,0xb0
   140009f70:	mov    rbx,QWORD PTR [rip+0x167e9]        # 0x140020760
   140009f77:	mov    r13,rcx
   140009f7a:	mov    rsi,rdx
   140009f7d:	lea    rdx,[rip+0x16bac]        # 0x140020b30
   140009f84:	xor    eax,eax
   140009f86:	or     rbp,0xffffffffffffffff
   140009f8a:	mov    rdi,rdx
   140009f8d:	mov    QWORD PTR [rsp+0x28],rdx
   140009f92:	mov    rcx,rbp
   140009f95:	repnz scas al,BYTE PTR es:[rdi]
   140009f97:	lea    rdx,[r11-0x48]
   140009f9b:	mov    QWORD PTR [r11+0x10],r12
   140009f9f:	not    rcx
   140009fa2:	mov    QWORD PTR [r11+0x20],rbx
   140009fa6:	dec    rcx
   140009fa9:	mov    DWORD PTR [rsp+0x20],ecx
   140009fad:	mov    rcx,rsi
   140009fb0:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   140009fb5:	movdqa XMMWORD PTR [r11-0x48],xmm0
   140009fbb:	call   QWORD PTR [rip+0x167b7]        # 0x140020778
   140009fc1:	test   al,al
   140009fc3:	je     0x14000a127
   140009fc9:	lea    rcx,[rsp+0x20]
   140009fce:	call   QWORD PTR [rip+0x1637c]        # 0x140020350
   140009fd4:	mov    DWORD PTR [rsp+0xe0],0x0
   140009fdf:	mov    DWORD PTR [rsp+0xf0],0x1
   140009fea:	call   QWORD PTR [rip+0x161d8]        # 0x1400201c8
   140009ff0:	lea    r8d,[rbp+0x2]
   140009ff4:	lea    rcx,[rsp+0x20]
   140009ff9:	mov    rdx,rax
   140009ffc:	xor    r9d,r9d
   140009fff:	call   QWORD PTR [rip+0x16343]        # 0x140020348
   14000a005:	test   al,al
   14000a007:	je     0x14000a117
   14000a00d:	lea    rdx,[rip+0x16b14]        # 0x140020b28
   14000a014:	xor    eax,eax
   14000a016:	mov    rcx,rbp
   14000a019:	mov    rdi,rdx
   14000a01c:	mov    QWORD PTR [rsp+0x58],rdx
   14000a021:	lea    rdx,[rsp+0x70]
   14000a026:	repnz scas al,BYTE PTR es:[rdi]
   14000a028:	not    rcx
   14000a02b:	dec    rcx
   14000a02e:	mov    DWORD PTR [rsp+0x50],ecx
   14000a032:	lea    rcx,[rsp+0x40]
   14000a037:	movaps xmm0,XMMWORD PTR [rsp+0x50]
   14000a03c:	movdqa XMMWORD PTR [rsp+0x70],xmm0
   14000a042:	call   QWORD PTR [rip+0x164f0]        # 0x140020538
   14000a048:	lea    rdx,[rsp+0x50]
   14000a04d:	lea    rcx,[rsp+0x20]
   14000a052:	call   QWORD PTR [rip+0x165b8]        # 0x140020610
   14000a058:	lea    rcx,[rsp+0x60]
   14000a05d:	mov    rdx,rax
   14000a060:	call   QWORD PTR [rip+0x165b2]        # 0x140020618
   14000a066:	lea    rdx,[rsp+0x40]
   14000a06b:	lea    rcx,[rsp+0x48]
   14000a070:	mov    r8,rax
   14000a073:	call   0x140005230
   14000a078:	lea    rcx,[rsp+0xf8]
   14000a080:	mov    rdx,rax
   14000a083:	call   0x140002460
   14000a088:	mov    rsi,QWORD PTR [rsp+0x48]
   14000a08d:	mov    eax,DWORD PTR [rsi]
   14000a08f:	test   eax,eax
   14000a091:	je     0x14000a0ab
   14000a093:	cmp    eax,ebp
   14000a095:	je     0x14000a0ee
   14000a097:	mov    eax,ebp
   14000a099:	lock xadd DWORD PTR [rsi],eax
   14000a09d:	add    eax,ebp
   14000a09f:	setne  al
   14000a0a2:	test   al,al
   14000a0a4:	jne    0x14000a0ee
   14000a0a6:	mov    rsi,QWORD PTR [rsp+0x48]
   14000a0ab:	movsxd rax,DWORD PTR [rsi+0xc]
   14000a0af:	lea    rdi,[rsi+rax*8+0x10]
   14000a0b4:	movsxd rax,DWORD PTR [rsi+0x8]
   14000a0b8:	lea    r12,[rsi+rax*8+0x10]
   14000a0bd:	cmp    r12,rdi
   14000a0c0:	je     0x14000a0e5
   14000a0c2:	mov    rbx,QWORD PTR [rdi-0x8]
   14000a0c6:	sub    rdi,0x8
   14000a0ca:	test   rbx,rbx
   14000a0cd:	je     0x14000a0e0
   14000a0cf:	mov    rcx,rbx
   14000a0d2:	call   QWORD PTR [rip+0x16670]        # 0x140020748
   14000a0d8:	mov    rcx,rbx
   14000a0db:	call   0x14001ee46
   14000a0e0:	cmp    rdi,r12
   14000a0e3:	jne    0x14000a0c2
   14000a0e5:	mov    rcx,rsi
   14000a0e8:	call   QWORD PTR [rip+0x165e2]        # 0x1400206d0
   14000a0ee:	lea    rcx,[rsp+0x60]
   14000a0f3:	call   QWORD PTR [rip+0x16687]        # 0x140020780
   14000a0f9:	lea    rcx,[rsp+0x50]
   14000a0fe:	call   QWORD PTR [rip+0x165f4]        # 0x1400206f8
   14000a104:	lea    rcx,[rsp+0x40]
   14000a109:	call   QWORD PTR [rip+0x16671]        # 0x140020780
   14000a10f:	mov    rbx,QWORD PTR [rsp+0xf8]
   14000a117:	lea    rcx,[rsp+0x20]
   14000a11c:	call   QWORD PTR [rip+0x164e6]        # 0x140020608
   14000a122:	jmp    0x14000a2f4
   14000a127:	lea    rdx,[rip+0x169f2]        # 0x140020b20
   14000a12e:	xor    eax,eax
   14000a130:	mov    rcx,rbp
   14000a133:	mov    rdi,rdx
   14000a136:	mov    QWORD PTR [rsp+0x28],rdx
   14000a13b:	lea    r8d,[rax+0x1]
   14000a13f:	repnz scas al,BYTE PTR es:[rdi]
   14000a141:	lea    rdx,[rsp+0x80]
   14000a149:	not    rcx
   14000a14c:	dec    rcx
   14000a14f:	mov    DWORD PTR [rsp+0x20],ecx
   14000a153:	mov    rcx,rsi
   14000a156:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14000a15b:	movdqa XMMWORD PTR [rsp+0x80],xmm0
   14000a164:	call   QWORD PTR [rip+0x1641e]        # 0x140020588
   14000a16a:	test   al,al
   14000a16c:	je     0x14000a20c
   14000a172:	lea    rcx,[rsp+0x30]
   14000a177:	mov    rdx,rsi
   14000a17a:	call   0x140005aa0
   14000a17f:	lea    rcx,[rsp+0xf8]
   14000a187:	mov    rdx,rax
   14000a18a:	call   0x140002460
   14000a18f:	mov    rsi,QWORD PTR [rsp+0x30]
   14000a194:	mov    eax,DWORD PTR [rsi]
   14000a196:	test   eax,eax
   14000a198:	je     0x14000a1bc
   14000a19a:	cmp    eax,0xffffffff
   14000a19d:	je     0x14000a38d
   14000a1a3:	mov    eax,ebp
   14000a1a5:	lock xadd DWORD PTR [rsi],eax
   14000a1a9:	add    eax,0xffffffff
   14000a1ac:	setne  al
   14000a1af:	test   al,al
   14000a1b1:	jne    0x14000a38d
   14000a1b7:	mov    rsi,QWORD PTR [rsp+0x30]
   14000a1bc:	movsxd rax,DWORD PTR [rsi+0xc]
   14000a1c0:	lea    rdi,[rsi+rax*8+0x10]
   14000a1c5:	movsxd rax,DWORD PTR [rsi+0x8]
   14000a1c9:	lea    r12,[rsi+rax*8+0x10]
   14000a1ce:	cmp    r12,rdi
   14000a1d1:	je     0x14000a1f6
   14000a1d3:	mov    rbx,QWORD PTR [rdi-0x8]
   14000a1d7:	sub    rdi,0x8
   14000a1db:	test   rbx,rbx
   14000a1de:	je     0x14000a1f1
   14000a1e0:	mov    rcx,rbx
   14000a1e3:	call   QWORD PTR [rip+0x1655f]        # 0x140020748
   14000a1e9:	mov    rcx,rbx
   14000a1ec:	call   0x14001ee46
   14000a1f1:	cmp    rdi,r12
   14000a1f4:	jne    0x14000a1d3
   14000a1f6:	mov    rcx,rsi
   14000a1f9:	call   QWORD PTR [rip+0x164d1]        # 0x1400206d0
   14000a1ff:	mov    rbx,QWORD PTR [rsp+0xf8]
   14000a207:	jmp    0x14000a2f4
   14000a20c:	lea    rdx,[rip+0x16871]        # 0x140020a84
   14000a213:	xor    eax,eax
   14000a215:	mov    rcx,rbp
   14000a218:	mov    rdi,rdx
   14000a21b:	mov    QWORD PTR [rsp+0x28],rdx
   14000a220:	lea    r8d,[rax+0x1]
   14000a224:	repnz scas al,BYTE PTR es:[rdi]
   14000a226:	lea    rdx,[rsp+0xa0]
   14000a22e:	not    rcx
   14000a231:	dec    rcx
   14000a234:	mov    DWORD PTR [rsp+0x20],ecx
   14000a238:	mov    rcx,rsi
   14000a23b:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14000a240:	movdqa XMMWORD PTR [rsp+0xa0],xmm0
   14000a249:	call   QWORD PTR [rip+0x16339]        # 0x140020588
   14000a24f:	test   al,al
   14000a251:	je     0x14000a2f4
   14000a257:	lea    rcx,[rsp+0x38]
   14000a25c:	mov    rdx,rsi
   14000a25f:	call   0x1400031a0
   14000a264:	lea    rcx,[rsp+0xf8]
   14000a26c:	mov    rdx,rax
   14000a26f:	call   0x140002460
   14000a274:	mov    rsi,QWORD PTR [rsp+0x38]
   14000a279:	mov    eax,DWORD PTR [rsi]
   14000a27b:	test   eax,eax
   14000a27d:	je     0x14000a2a1
   14000a27f:	cmp    eax,0xffffffff
   14000a282:	je     0x14000a38d
   14000a288:	mov    eax,ebp
   14000a28a:	lock xadd DWORD PTR [rsi],eax
   14000a28e:	add    eax,0xffffffff
   14000a291:	setne  al
   14000a294:	test   al,al
   14000a296:	jne    0x14000a38d
   14000a29c:	mov    rsi,QWORD PTR [rsp+0x38]
   14000a2a1:	movsxd rax,DWORD PTR [rsi+0xc]
   14000a2a5:	lea    rdi,[rsi+rax*8+0x10]
   14000a2aa:	movsxd rax,DWORD PTR [rsi+0x8]
   14000a2ae:	lea    r12,[rsi+rax*8+0x10]
   14000a2b3:	cmp    r12,rdi
   14000a2b6:	je     0x14000a2e3
   14000a2b8:	nop    DWORD PTR [rax+rax*1+0x0]
   14000a2c0:	mov    rbx,QWORD PTR [rdi-0x8]
   14000a2c4:	sub    rdi,0x8
   14000a2c8:	test   rbx,rbx
   14000a2cb:	je     0x14000a2de
   14000a2cd:	mov    rcx,rbx
   14000a2d0:	call   QWORD PTR [rip+0x16472]        # 0x140020748
   14000a2d6:	mov    rcx,rbx
   14000a2d9:	call   0x14001ee46
   14000a2de:	cmp    rdi,r12
   14000a2e1:	jne    0x14000a2c0
   14000a2e3:	mov    rcx,rsi
   14000a2e6:	call   QWORD PTR [rip+0x163e4]        # 0x1400206d0
   14000a2ec:	mov    rbx,QWORD PTR [rsp+0xf8]
   14000a2f4:	lea    rdx,[rsp+0xf8]
   14000a2fc:	mov    rcx,r13
   14000a2ff:	call   0x140008580
   14000a304:	mov    edx,DWORD PTR [rbx]
   14000a306:	mov    r12,QWORD PTR [rsp+0xe8]
   14000a30e:	test   edx,edx
   14000a310:	je     0x14000a32d
   14000a312:	cmp    edx,0xffffffff
   14000a315:	je     0x14000a37c
   14000a317:	lock xadd DWORD PTR [rbx],ebp
   14000a31b:	add    ebp,0xffffffff
   14000a31e:	setne  al
   14000a321:	test   al,al
   14000a323:	jne    0x14000a37c
   14000a325:	mov    rbx,QWORD PTR [rsp+0xf8]
   14000a32d:	movsxd rax,DWORD PTR [rbx+0xc]
   14000a331:	lea    rdi,[rbx+rax*8+0x10]
   14000a336:	movsxd rax,DWORD PTR [rbx+0x8]
   14000a33a:	lea    rbp,[rbx+rax*8+0x10]
   14000a33f:	cmp    rbp,rdi
   14000a342:	je     0x14000a373
   14000a344:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000a350:	mov    rsi,QWORD PTR [rdi-0x8]
   14000a354:	sub    rdi,0x8
   14000a358:	test   rsi,rsi
   14000a35b:	je     0x14000a36e
   14000a35d:	mov    rcx,rsi
   14000a360:	call   QWORD PTR [rip+0x163e2]        # 0x140020748
   14000a366:	mov    rcx,rsi
   14000a369:	call   0x14001ee46
   14000a36e:	cmp    rdi,rbp
   14000a371:	jne    0x14000a350
   14000a373:	mov    rcx,rbx
   14000a376:	call   QWORD PTR [rip+0x16354]        # 0x1400206d0
   14000a37c:	mov    rax,r13
   14000a37f:	add    rsp,0xb0
   14000a386:	pop    r13
   14000a388:	pop    rdi
   14000a389:	pop    rsi
   14000a38a:	pop    rbp
   14000a38b:	pop    rbx
   14000a38c:	ret    
   14000a38d:	mov    rbx,QWORD PTR [rsp+0xf8]
   14000a395:	jmp    0x14000a2f4
   14000a39a:	int3   
   14000a39b:	int3   
   14000a39c:	int3   
   14000a39d:	int3   
   14000a39e:	int3   
   14000a39f:	int3   
   14000a3a0:	mov    QWORD PTR [rsp+0x8],rcx
   14000a3a5:	push   rbx
   14000a3a6:	push   rbp
   14000a3a7:	push   rsi
   14000a3a8:	push   rdi
   14000a3a9:	push   r13
   14000a3ab:	push   r14
   14000a3ad:	sub    rsp,0x1e8
   14000a3b4:	mov    rax,QWORD PTR [rdx]
   14000a3b7:	mov    rdi,QWORD PTR [rip+0x163a2]        # 0x140020760
   14000a3be:	mov    r14,rcx
   14000a3c1:	cmp    DWORD PTR [rax+0x4],0x0
   14000a3c5:	mov    QWORD PTR [rsp+0x30],rdi
   14000a3ca:	jne    0x14000a488
   14000a3d0:	mov    QWORD PTR [rcx],rdi
   14000a3d3:	mov    eax,DWORD PTR [rdi]
   14000a3d5:	test   eax,eax
   14000a3d7:	je     0x14000a3e9
   14000a3d9:	cmp    eax,0xffffffff
   14000a3dc:	je     0x14000a418
   14000a3de:	lock add DWORD PTR [rdi],0x1
   14000a3e2:	mov    rdi,QWORD PTR [rsp+0x30]
   14000a3e7:	jmp    0x14000a418
   14000a3e9:	mov    edx,DWORD PTR [rdi+0x4]
   14000a3ec:	call   QWORD PTR [rip+0x16286]        # 0x140020678
   14000a3f2:	mov    r11,QWORD PTR [r14]
   14000a3f5:	movsxd rax,DWORD PTR [rdi+0x8]
   14000a3f9:	lea    r9,[rdi+rax*8+0x10]
   14000a3fe:	movsxd rax,DWORD PTR [r11+0xc]
   14000a402:	mov    rcx,r14
   14000a405:	lea    r8,[r11+rax*8+0x10]
   14000a40a:	movsxd rax,DWORD PTR [r11+0x8]
   14000a40e:	lea    rdx,[r11+rax*8+0x10]
   14000a413:	call   0x1400011b0
   14000a418:	mov    eax,DWORD PTR [rdi]
   14000a41a:	test   eax,eax
   14000a41c:	je     0x14000a444
   14000a41e:	cmp    eax,0xffffffff
   14000a421:	je     0x14000aedc
   14000a427:	or     r13,0xffffffffffffffff
   14000a42b:	lock xadd DWORD PTR [rdi],r13d
   14000a430:	add    r13d,0xffffffff
   14000a434:	setne  al
   14000a437:	test   al,al
   14000a439:	jne    0x14000aedc
   14000a43f:	mov    rdi,QWORD PTR [rsp+0x30]
   14000a444:	movsxd rax,DWORD PTR [rdi+0xc]
   14000a448:	lea    rbx,[rdi+rax*8+0x10]
   14000a44d:	movsxd rax,DWORD PTR [rdi+0x8]
   14000a451:	lea    rbp,[rdi+rax*8+0x10]
   14000a456:	cmp    rbp,rbx
   14000a459:	je     0x14000aed3
   14000a45f:	nop
   14000a460:	mov    rsi,QWORD PTR [rbx-0x8]
   14000a464:	sub    rbx,0x8
   14000a468:	test   rsi,rsi
   14000a46b:	je     0x14000a47e
   14000a46d:	mov    rcx,rsi
   14000a470:	call   QWORD PTR [rip+0x162d2]        # 0x140020748
   14000a476:	mov    rcx,rsi
   14000a479:	call   0x14001ee46
   14000a47e:	cmp    rbx,rbp
   14000a481:	jne    0x14000a460
   14000a483:	jmp    0x14000aed3
   14000a488:	lea    rcx,[rsp+0x40]
   14000a48d:	mov    r9d,0x2
   14000a493:	mov    r8d,0x4400
   14000a499:	mov    DWORD PTR [rsp+0x238],0x2
   14000a4a4:	call   QWORD PTR [rip+0x15eee]        # 0x140020398
   14000a4aa:	mov    r11,QWORD PTR [rip+0x162af]        # 0x140020760
   14000a4b1:	lea    rcx,[rsp+0x40]
   14000a4b6:	mov    QWORD PTR [rsp+0x38],r11
   14000a4bb:	call   QWORD PTR [rip+0x15ecf]        # 0x140020390
   14000a4c1:	or     r13,0xffffffffffffffff
   14000a4c5:	test   al,al
   14000a4c7:	je     0x14000ad86
   14000a4cd:	mov    QWORD PTR [rsp+0x1e0],r12
   14000a4d5:	mov    QWORD PTR [rsp+0x1d8],r15
   14000a4dd:	mov    DWORD PTR [rsp+0x228],r13d
   14000a4e5:	lea    r15,[rip+0x1634c]        # 0x140020838
   14000a4ec:	mov    DWORD PTR [rsp+0x230],r13d
   14000a4f4:	lea    rbp,[rip+0x1669d]        # 0x140020b98
   14000a4fb:	lea    r12,[rip+0x1667e]        # 0x140020b80
   14000a502:	lea    r14,[rip+0x1665f]        # 0x140020b68
   14000a509:	nop    DWORD PTR [rax+0x0]
   14000a510:	lea    rdx,[rsp+0xb0]
   14000a518:	lea    rcx,[rsp+0x40]
   14000a51d:	call   QWORD PTR [rip+0x15e65]        # 0x140020388
   14000a523:	lea    rcx,[rsp+0xb0]
   14000a52b:	call   QWORD PTR [rip+0x1624f]        # 0x140020780
   14000a531:	lea    rdx,[rsp+0x20]
   14000a536:	lea    rcx,[rsp+0x40]
   14000a53b:	call   QWORD PTR [rip+0x15e3f]        # 0x140020380
   14000a541:	lea    rdx,[rsp+0x20]
   14000a546:	lea    rcx,[rsp+0xb8]
   14000a54e:	call   QWORD PTR [rip+0x15ff4]        # 0x140020548
   14000a554:	mov    r9d,DWORD PTR [rsp+0x228]
   14000a55c:	mov    r8d,DWORD PTR [rsp+0x230]
   14000a564:	lea    rdx,[rsp+0x28]
   14000a569:	mov    rcx,rax
   14000a56c:	call   QWORD PTR [rip+0x15e06]        # 0x140020378
   14000a572:	lea    rcx,[rsp+0xb8]
   14000a57a:	call   QWORD PTR [rip+0x15fd8]        # 0x140020558
   14000a580:	mov    rdx,QWORD PTR [rsp+0x28]
   14000a585:	movsxd rax,DWORD PTR [rdx+0xc]
   14000a589:	lea    rsi,[rdx+rax*8+0x10]
   14000a58e:	movsxd rax,DWORD PTR [rdx+0x8]
   14000a592:	lea    rbx,[rdx+rax*8+0x10]
   14000a597:	mov    QWORD PTR [rsp+0x160],rsi
   14000a59f:	mov    QWORD PTR [rsp+0x130],rbx
   14000a5a7:	mov    QWORD PTR [rsp+0xa0],rbx
   14000a5af:	cmp    rbx,rsi
   14000a5b2:	je     0x14000a62d
   14000a5b4:	xor    eax,eax
   14000a5b6:	mov    rcx,r13
   14000a5b9:	mov    rdi,r15
   14000a5bc:	repnz scas al,BYTE PTR es:[rdi]
   14000a5be:	mov    QWORD PTR [rsp+0xc8],r15
   14000a5c6:	lea    rdx,[rsp+0x88]
   14000a5ce:	not    rcx
   14000a5d1:	dec    rcx
   14000a5d4:	mov    DWORD PTR [rsp+0xc0],ecx
   14000a5db:	mov    rcx,rbx
   14000a5de:	movaps xmm0,XMMWORD PTR [rsp+0xc0]
   14000a5e6:	movdqa XMMWORD PTR [rsp+0x1a0],xmm0
   14000a5ef:	call   QWORD PTR [rip+0x1617b]        # 0x140020770
   14000a5f5:	lea    rdx,[rsp+0x1a0]
   14000a5fd:	mov    rcx,rax
   14000a600:	call   QWORD PTR [rip+0x16172]        # 0x140020778
   14000a606:	lea    rcx,[rsp+0x88]
   14000a60e:	movzx  edi,al
   14000a611:	call   QWORD PTR [rip+0x16169]        # 0x140020780
   14000a617:	test   dil,dil
   14000a61a:	jne    0x14000a62d
   14000a61c:	add    rbx,0x8
   14000a620:	mov    QWORD PTR [rsp+0xa0],rbx
   14000a628:	cmp    rbx,rsi
   14000a62b:	jne    0x14000a5b4
   14000a62d:	cmp    rbx,rsi
   14000a630:	je     0x14000a70b
   14000a636:	mov    rax,QWORD PTR [rsp+0x38]
   14000a63b:	mov    ecx,DWORD PTR [rax]
   14000a63d:	cmp    ecx,0x1
   14000a640:	je     0x14000a670
   14000a642:	test   ecx,ecx
   14000a644:	je     0x14000a670
   14000a646:	lea    rcx,[rsp+0x38]
   14000a64b:	mov    edx,0x7fffffff
   14000a650:	mov    r8d,0x1
   14000a656:	call   0x1400026c0
   14000a65b:	test   rax,rax
   14000a65e:	je     0x14000a699
   14000a660:	lea    rdx,[rsp+0x20]
   14000a665:	mov    rcx,rax
   14000a668:	call   QWORD PTR [rip+0x1612a]        # 0x140020798
   14000a66e:	jmp    0x14000a699
   14000a670:	lea    rdx,[rsp+0x20]
   14000a675:	lea    rcx,[rsp+0x90]
   14000a67d:	call   QWORD PTR [rip+0x16115]        # 0x140020798
   14000a683:	lea    rcx,[rsp+0x38]
   14000a688:	call   QWORD PTR [rip+0x15faa]        # 0x140020638
   14000a68e:	mov    rcx,QWORD PTR [rsp+0x90]
   14000a696:	mov    QWORD PTR [rax],rcx
   14000a699:	mov    rbx,QWORD PTR [rsp+0x28]
   14000a69e:	mov    eax,DWORD PTR [rbx]
   14000a6a0:	test   eax,eax
   14000a6a2:	je     0x14000a6bf
   14000a6a4:	cmp    eax,0xffffffff
   14000a6a7:	je     0x14000a6fb
   14000a6a9:	mov    eax,r13d
   14000a6ac:	lock xadd DWORD PTR [rbx],eax
   14000a6b0:	add    eax,0xffffffff
   14000a6b3:	setne  al
   14000a6b6:	test   al,al
   14000a6b8:	jne    0x14000a6fb
   14000a6ba:	mov    rbx,QWORD PTR [rsp+0x28]
   14000a6bf:	movsxd rax,DWORD PTR [rbx+0xc]
   14000a6c3:	lea    rdi,[rbx+rax*8+0x10]
   14000a6c8:	movsxd rax,DWORD PTR [rbx+0x8]
   14000a6cc:	lea    rsi,[rbx+rax*8+0x10]
   14000a6d1:	cmp    rsi,rdi
   14000a6d4:	je     0x14000a6f2
   14000a6d6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000a6e0:	sub    rdi,0x8
   14000a6e4:	mov    rcx,rdi
   14000a6e7:	call   QWORD PTR [rip+0x1601b]        # 0x140020708
   14000a6ed:	cmp    rdi,rsi
   14000a6f0:	jne    0x14000a6e0
   14000a6f2:	mov    rcx,rbx
   14000a6f5:	call   QWORD PTR [rip+0x15fd5]        # 0x1400206d0
   14000a6fb:	lea    rcx,[rsp+0x20]
   14000a700:	call   QWORD PTR [rip+0x1607a]        # 0x140020780
   14000a706:	jmp    0x14000ad56
   14000a70b:	mov    rax,QWORD PTR [rsp+0x38]
   14000a710:	lea    rdx,[rsp+0x20]
   14000a715:	movsxd rcx,DWORD PTR [rax+0xc]
   14000a719:	lea    rsi,[rax+rcx*8+0x10]
   14000a71e:	lea    rcx,[rsp+0x80]
   14000a726:	call   QWORD PTR [rip+0x1606c]        # 0x140020798
   14000a72c:	mov    rdx,QWORD PTR [rsp+0x38]
   14000a731:	lea    rcx,[rsp+0x78]
   14000a736:	movsxd rax,DWORD PTR [rdx+0xc]
   14000a73a:	lea    rbx,[rdx+rax*8+0x10]
   14000a73f:	movsxd rax,DWORD PTR [rdx+0x8]
   14000a743:	lea    rdi,[rdx+rax*8+0x10]
   14000a748:	lea    rdx,[rsp+0x80]
   14000a750:	mov    QWORD PTR [rsp+0x1c8],rbx
   14000a758:	mov    QWORD PTR [rsp+0x1c0],rdi
   14000a760:	call   QWORD PTR [rip+0x16032]        # 0x140020798
   14000a766:	mov    QWORD PTR [rsp+0x98],rdi
   14000a76e:	cmp    rdi,rbx
   14000a771:	je     0x14000a7a9
   14000a773:	data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000a780:	lea    rcx,[rsp+0x78]
   14000a785:	mov    r8d,0x1
   14000a78b:	mov    rdx,rdi
   14000a78e:	call   QWORD PTR [rip+0x15fd4]        # 0x140020768
   14000a794:	test   al,al
   14000a796:	jne    0x14000a7a9
   14000a798:	add    rdi,0x8
   14000a79c:	mov    QWORD PTR [rsp+0x98],rdi
   14000a7a4:	cmp    rdi,rbx
   14000a7a7:	jne    0x14000a780
   14000a7a9:	lea    rcx,[rsp+0x78]
   14000a7ae:	call   QWORD PTR [rip+0x15fcc]        # 0x140020780
   14000a7b4:	lea    rcx,[rsp+0x80]
   14000a7bc:	call   QWORD PTR [rip+0x15fbe]        # 0x140020780
   14000a7c2:	cmp    rdi,rsi
   14000a7c5:	je     0x14000a83b
   14000a7c7:	mov    rbx,QWORD PTR [rsp+0x28]
   14000a7cc:	mov    eax,DWORD PTR [rbx]
   14000a7ce:	test   eax,eax
   14000a7d0:	je     0x14000a7ed
   14000a7d2:	cmp    eax,0xffffffff
   14000a7d5:	je     0x14000a82b
   14000a7d7:	mov    eax,r13d
   14000a7da:	lock xadd DWORD PTR [rbx],eax
   14000a7de:	add    eax,0xffffffff
   14000a7e1:	setne  al
   14000a7e4:	test   al,al
   14000a7e6:	jne    0x14000a82b
   14000a7e8:	mov    rbx,QWORD PTR [rsp+0x28]
   14000a7ed:	movsxd rax,DWORD PTR [rbx+0xc]
   14000a7f1:	lea    rdi,[rbx+rax*8+0x10]
   14000a7f6:	movsxd rax,DWORD PTR [rbx+0x8]
   14000a7fa:	lea    rsi,[rbx+rax*8+0x10]
   14000a7ff:	cmp    rsi,rdi
   14000a802:	je     0x14000a822
   14000a804:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000a810:	sub    rdi,0x8
   14000a814:	mov    rcx,rdi
   14000a817:	call   QWORD PTR [rip+0x15eeb]        # 0x140020708
   14000a81d:	cmp    rdi,rsi
   14000a820:	jne    0x14000a810
   14000a822:	mov    rcx,rbx
   14000a825:	call   QWORD PTR [rip+0x15ea5]        # 0x1400206d0
   14000a82b:	lea    rcx,[rsp+0x20]
   14000a830:	call   QWORD PTR [rip+0x15f4a]        # 0x140020780
   14000a836:	jmp    0x14000ad56
   14000a83b:	xor    eax,eax
   14000a83d:	mov    rcx,r13
   14000a840:	mov    rdi,rbp
   14000a843:	repnz scas al,BYTE PTR es:[rdi]
   14000a845:	mov    QWORD PTR [rsp+0x118],rbp
   14000a84d:	lea    rdx,[rsp+0x180]
   14000a855:	not    rcx
   14000a858:	lea    r9d,[rax+0x1]
   14000a85c:	xor    r8d,r8d
   14000a85f:	dec    rcx
   14000a862:	mov    DWORD PTR [rsp+0x110],ecx
   14000a869:	lea    rcx,[rsp+0x20]
   14000a86e:	movaps xmm0,XMMWORD PTR [rsp+0x110]
   14000a876:	movdqa XMMWORD PTR [rsp+0x180],xmm0
   14000a87f:	call   QWORD PTR [rip+0x15aeb]        # 0x140020370
   14000a885:	cmp    eax,0xffffffff
   14000a888:	jne    0x14000acf0
   14000a88e:	xor    eax,eax
   14000a890:	mov    rcx,r13
   14000a893:	mov    rdi,r12
   14000a896:	repnz scas al,BYTE PTR es:[rdi]
   14000a898:	mov    QWORD PTR [rsp+0xf8],r12
   14000a8a0:	lea    rdx,[rsp+0x140]
   14000a8a8:	not    rcx
   14000a8ab:	lea    r9d,[rax+0x1]
   14000a8af:	xor    r8d,r8d
   14000a8b2:	dec    rcx
   14000a8b5:	mov    DWORD PTR [rsp+0xf0],ecx
   14000a8bc:	lea    rcx,[rsp+0x20]
   14000a8c1:	movaps xmm0,XMMWORD PTR [rsp+0xf0]
   14000a8c9:	movdqa XMMWORD PTR [rsp+0x140],xmm0
   14000a8d2:	call   QWORD PTR [rip+0x15a98]        # 0x140020370
   14000a8d8:	cmp    eax,0xffffffff
   14000a8db:	jne    0x14000acf0
   14000a8e1:	xor    eax,eax
   14000a8e3:	mov    rcx,r13
   14000a8e6:	mov    rdi,r14
   14000a8e9:	repnz scas al,BYTE PTR es:[rdi]
   14000a8eb:	mov    QWORD PTR [rsp+0xd8],r14
   14000a8f3:	lea    rdx,[rsp+0x150]
   14000a8fb:	not    rcx
   14000a8fe:	lea    r9d,[rax+0x1]
   14000a902:	xor    r8d,r8d
   14000a905:	dec    rcx
   14000a908:	mov    DWORD PTR [rsp+0xd0],ecx
   14000a90f:	lea    rcx,[rsp+0x20]
   14000a914:	movaps xmm0,XMMWORD PTR [rsp+0xd0]
   14000a91c:	movdqa XMMWORD PTR [rsp+0x150],xmm0
   14000a925:	call   QWORD PTR [rip+0x15a45]        # 0x140020370
   14000a92b:	cmp    eax,0xffffffff
   14000a92e:	jne    0x14000acf0
   14000a934:	lea    rdx,[rip+0x16215]        # 0x140020b50
   14000a93b:	xor    eax,eax
   14000a93d:	mov    rcx,r13
   14000a940:	mov    rdi,rdx
   14000a943:	mov    QWORD PTR [rsp+0xe8],rdx
   14000a94b:	lea    r9d,[rax+0x1]
   14000a94f:	repnz scas al,BYTE PTR es:[rdi]
   14000a951:	lea    rdx,[rsp+0x170]
   14000a959:	xor    r8d,r8d
   14000a95c:	not    rcx
   14000a95f:	dec    rcx
   14000a962:	mov    DWORD PTR [rsp+0xe0],ecx
   14000a969:	lea    rcx,[rsp+0x20]
   14000a96e:	movaps xmm0,XMMWORD PTR [rsp+0xe0]
   14000a976:	movdqa XMMWORD PTR [rsp+0x170],xmm0
   14000a97f:	call   QWORD PTR [rip+0x159eb]        # 0x140020370
   14000a985:	cmp    eax,0xffffffff
   14000a988:	jne    0x14000acf0
   14000a98e:	lea    rdx,[rip+0x161ab]        # 0x140020b40
   14000a995:	xor    eax,eax
   14000a997:	mov    rcx,r13
   14000a99a:	mov    rdi,rdx
   14000a99d:	mov    QWORD PTR [rsp+0x108],rdx
   14000a9a5:	lea    r9d,[rax+0x1]
   14000a9a9:	repnz scas al,BYTE PTR es:[rdi]
   14000a9ab:	lea    rdx,[rsp+0x190]
   14000a9b3:	xor    r8d,r8d
   14000a9b6:	not    rcx
   14000a9b9:	dec    rcx
   14000a9bc:	mov    DWORD PTR [rsp+0x100],ecx
   14000a9c3:	lea    rcx,[rsp+0x20]
   14000a9c8:	movaps xmm0,XMMWORD PTR [rsp+0x100]
   14000a9d0:	movdqa XMMWORD PTR [rsp+0x190],xmm0
   14000a9d9:	call   QWORD PTR [rip+0x15991]        # 0x140020370
   14000a9df:	cmp    eax,0xffffffff
   14000a9e2:	jne    0x14000acf0
   14000a9e8:	lea    rdx,[rip+0x16149]        # 0x140020b38
   14000a9ef:	xor    eax,eax
   14000a9f1:	mov    rcx,r13
   14000a9f4:	mov    rdi,rdx
   14000a9f7:	mov    QWORD PTR [rsp+0x128],rdx
   14000a9ff:	lea    r9d,[rax+0x1]
   14000aa03:	repnz scas al,BYTE PTR es:[rdi]
   14000aa05:	lea    rdx,[rsp+0x1b0]
   14000aa0d:	xor    r8d,r8d
   14000aa10:	not    rcx
   14000aa13:	dec    rcx
   14000aa16:	mov    DWORD PTR [rsp+0x120],ecx
   14000aa1d:	lea    rcx,[rsp+0x20]
   14000aa22:	movaps xmm0,XMMWORD PTR [rsp+0x120]
   14000aa2a:	movdqa XMMWORD PTR [rsp+0x1b0],xmm0
   14000aa33:	call   QWORD PTR [rip+0x15937]        # 0x140020370
   14000aa39:	cmp    eax,0xffffffff
   14000aa3c:	jne    0x14000acf0
   14000aa42:	mov    rdx,QWORD PTR [rsp+0x28]
   14000aa47:	mov    QWORD PTR [rsp+0x48],rdx
   14000aa4c:	mov    eax,DWORD PTR [rdx]
   14000aa4e:	test   eax,eax
   14000aa50:	je     0x14000aa62
   14000aa52:	cmp    eax,0xffffffff
   14000aa55:	je     0x14000aac3
   14000aa57:	lock add DWORD PTR [rdx],0x1
   14000aa5b:	mov    rdx,QWORD PTR [rsp+0x48]
   14000aa60:	jmp    0x14000aac3
   14000aa62:	mov    edx,DWORD PTR [rdx+0x4]
   14000aa65:	lea    rcx,[rsp+0x48]
   14000aa6a:	call   QWORD PTR [rip+0x15c08]        # 0x140020678
   14000aa70:	mov    rdx,QWORD PTR [rsp+0x48]
   14000aa75:	movsxd rax,DWORD PTR [rdx+0xc]
   14000aa79:	lea    rsi,[rdx+rax*8+0x10]
   14000aa7e:	mov    rax,QWORD PTR [rsp+0x28]
   14000aa83:	movsxd rcx,DWORD PTR [rax+0x8]
   14000aa87:	lea    rbx,[rax+rcx*8+0x10]
   14000aa8c:	movsxd rax,DWORD PTR [rdx+0x8]
   14000aa90:	lea    rdi,[rdx+rax*8+0x10]
   14000aa95:	cmp    rdi,rsi
   14000aa98:	je     0x14000aac3
   14000aa9a:	nop    WORD PTR [rax+rax*1+0x0]
   14000aaa0:	test   rdi,rdi
   14000aaa3:	je     0x14000aab1
   14000aaa5:	mov    rdx,rbx
   14000aaa8:	mov    rcx,rdi
   14000aaab:	call   QWORD PTR [rip+0x15c4f]        # 0x140020700
   14000aab1:	add    rdi,0x8
   14000aab5:	add    rbx,0x8
   14000aab9:	cmp    rdi,rsi
   14000aabc:	jne    0x14000aaa0
   14000aabe:	mov    rdx,QWORD PTR [rsp+0x48]
   14000aac3:	mov    DWORD PTR [rsp+0x50],0x0
   14000aacb:	movsxd rax,DWORD PTR [rdx+0x8]
   14000aacf:	lea    r12,[rdx+rax*8+0x10]
   14000aad4:	mov    QWORD PTR [rsp+0x58],r12
   14000aad9:	movsxd rax,DWORD PTR [rdx+0xc]
   14000aadd:	lea    rcx,[rdx+rax*8+0x10]
   14000aae2:	mov    QWORD PTR [rsp+0x60],rcx
   14000aae7:	nop    WORD PTR [rax+rax*1+0x0]
   14000aaf0:	mov    eax,0x1
   14000aaf5:	mov    DWORD PTR [rsp+0x50],eax
   14000aaf9:	cmp    r12,rcx
   14000aafc:	je     0x14000ac71
   14000ab02:	test   eax,eax
   14000ab04:	je     0x14000ac59
   14000ab0a:	mov    rcx,r12
   14000ab0d:	call   QWORD PTR [rip+0x15855]        # 0x140020368
   14000ab13:	test   al,al
   14000ab15:	je     0x14000ac4a
   14000ab1b:	lea    rdx,[rsp+0xa8]
   14000ab23:	mov    rcx,r12
   14000ab26:	call   QWORD PTR [rip+0x15834]        # 0x140020360
   14000ab2c:	lea    rcx,[rsp+0x70]
   14000ab31:	mov    rdx,rax
   14000ab34:	call   0x140009f60
   14000ab39:	lea    rdx,[rsp+0x30]
   14000ab3e:	lea    rcx,[rsp+0x68]
   14000ab43:	mov    r8,rax
   14000ab46:	call   0x140003c00
   14000ab4b:	lea    rcx,[rsp+0x30]
   14000ab50:	mov    rdx,rax
   14000ab53:	call   0x140002460
   14000ab58:	mov    rsi,QWORD PTR [rsp+0x68]
   14000ab5d:	mov    eax,DWORD PTR [rsi]
   14000ab5f:	test   eax,eax
   14000ab61:	je     0x14000ab7e
   14000ab63:	cmp    eax,0xffffffff
   14000ab66:	je     0x14000abcc
   14000ab68:	mov    eax,r13d
   14000ab6b:	lock xadd DWORD PTR [rsi],eax
   14000ab6f:	add    eax,0xffffffff
   14000ab72:	setne  al
   14000ab75:	test   al,al
   14000ab77:	jne    0x14000abcc
   14000ab79:	mov    rsi,QWORD PTR [rsp+0x68]
   14000ab7e:	movsxd rax,DWORD PTR [rsi+0xc]
   14000ab82:	lea    rdi,[rsi+rax*8+0x10]
   14000ab87:	movsxd rax,DWORD PTR [rsi+0x8]
   14000ab8b:	lea    rbp,[rsi+rax*8+0x10]
   14000ab90:	cmp    rbp,rdi
   14000ab93:	je     0x14000abc3
   14000ab95:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000aba0:	mov    rbx,QWORD PTR [rdi-0x8]
   14000aba4:	sub    rdi,0x8
   14000aba8:	test   rbx,rbx
   14000abab:	je     0x14000abbe
   14000abad:	mov    rcx,rbx
   14000abb0:	call   QWORD PTR [rip+0x15b92]        # 0x140020748
   14000abb6:	mov    rcx,rbx
   14000abb9:	call   0x14001ee46
   14000abbe:	cmp    rdi,rbp
   14000abc1:	jne    0x14000aba0
   14000abc3:	mov    rcx,rsi
   14000abc6:	call   QWORD PTR [rip+0x15b04]        # 0x1400206d0
   14000abcc:	mov    rsi,QWORD PTR [rsp+0x70]
   14000abd1:	mov    eax,DWORD PTR [rsi]
   14000abd3:	test   eax,eax
   14000abd5:	je     0x14000abf2
   14000abd7:	cmp    eax,0xffffffff
   14000abda:	je     0x14000ac3c
   14000abdc:	mov    eax,r13d
   14000abdf:	lock xadd DWORD PTR [rsi],eax
   14000abe3:	add    eax,0xffffffff
   14000abe6:	setne  al
   14000abe9:	test   al,al
   14000abeb:	jne    0x14000ac3c
   14000abed:	mov    rsi,QWORD PTR [rsp+0x70]
   14000abf2:	movsxd rax,DWORD PTR [rsi+0xc]
   14000abf6:	lea    rdi,[rsi+rax*8+0x10]
   14000abfb:	movsxd rax,DWORD PTR [rsi+0x8]
   14000abff:	lea    rbp,[rsi+rax*8+0x10]
   14000ac04:	cmp    rbp,rdi
   14000ac07:	je     0x14000ac33
   14000ac09:	nop    DWORD PTR [rax+0x0]
   14000ac10:	mov    rbx,QWORD PTR [rdi-0x8]
   14000ac14:	sub    rdi,0x8
   14000ac18:	test   rbx,rbx
   14000ac1b:	je     0x14000ac2e
   14000ac1d:	mov    rcx,rbx
   14000ac20:	call   QWORD PTR [rip+0x15b22]        # 0x140020748
   14000ac26:	mov    rcx,rbx
   14000ac29:	call   0x14001ee46
   14000ac2e:	cmp    rdi,rbp
   14000ac31:	jne    0x14000ac10
   14000ac33:	mov    rcx,rsi
   14000ac36:	call   QWORD PTR [rip+0x15a94]        # 0x1400206d0
   14000ac3c:	lea    rcx,[rsp+0xa8]
   14000ac44:	call   QWORD PTR [rip+0x15b36]        # 0x140020780
   14000ac4a:	mov    eax,DWORD PTR [rsp+0x50]
   14000ac4e:	dec    eax
   14000ac50:	mov    DWORD PTR [rsp+0x50],eax
   14000ac54:	jmp    0x14000ab02
   14000ac59:	mov    r12,QWORD PTR [rsp+0x58]
   14000ac5e:	mov    rcx,QWORD PTR [rsp+0x60]
   14000ac63:	add    r12,0x8
   14000ac67:	mov    QWORD PTR [rsp+0x58],r12
   14000ac6c:	jmp    0x14000aaf0
   14000ac71:	mov    rbx,QWORD PTR [rsp+0x48]
   14000ac76:	mov    eax,DWORD PTR [rbx]
   14000ac78:	test   eax,eax
   14000ac7a:	je     0x14000ac97
   14000ac7c:	cmp    eax,0xffffffff
   14000ac7f:	je     0x14000accb
   14000ac81:	mov    eax,r13d
   14000ac84:	lock xadd DWORD PTR [rbx],eax
   14000ac88:	add    eax,0xffffffff
   14000ac8b:	setne  al
   14000ac8e:	test   al,al
   14000ac90:	jne    0x14000accb
   14000ac92:	mov    rbx,QWORD PTR [rsp+0x48]
   14000ac97:	movsxd rax,DWORD PTR [rbx+0xc]
   14000ac9b:	lea    rdi,[rbx+rax*8+0x10]
   14000aca0:	movsxd rax,DWORD PTR [rbx+0x8]
   14000aca4:	lea    rsi,[rbx+rax*8+0x10]
   14000aca9:	cmp    rsi,rdi
   14000acac:	je     0x14000acc2
   14000acae:	xchg   ax,ax
   14000acb0:	sub    rdi,0x8
   14000acb4:	mov    rcx,rdi
   14000acb7:	call   QWORD PTR [rip+0x15a4b]        # 0x140020708
   14000acbd:	cmp    rdi,rsi
   14000acc0:	jne    0x14000acb0
   14000acc2:	mov    rcx,rbx
   14000acc5:	call   QWORD PTR [rip+0x15a05]        # 0x1400206d0
   14000accb:	lea    rcx,[rsp+0x28]
   14000acd0:	call   0x140002640
   14000acd5:	lea    rcx,[rsp+0x20]
   14000acda:	call   QWORD PTR [rip+0x15aa0]        # 0x140020780
   14000ace0:	lea    rbp,[rip+0x15eb1]        # 0x140020b98
   14000ace7:	lea    r12,[rip+0x15e92]        # 0x140020b80
   14000acee:	jmp    0x14000ad56
   14000acf0:	mov    rbx,QWORD PTR [rsp+0x28]
   14000acf5:	mov    eax,DWORD PTR [rbx]
   14000acf7:	test   eax,eax
   14000acf9:	je     0x14000ad16
   14000acfb:	cmp    eax,0xffffffff
   14000acfe:	je     0x14000ad4b
   14000ad00:	mov    eax,r13d
   14000ad03:	lock xadd DWORD PTR [rbx],eax
   14000ad07:	add    eax,0xffffffff
   14000ad0a:	setne  al
   14000ad0d:	test   al,al
   14000ad0f:	jne    0x14000ad4b
   14000ad11:	mov    rbx,QWORD PTR [rsp+0x28]
   14000ad16:	movsxd rax,DWORD PTR [rbx+0xc]
   14000ad1a:	lea    rdi,[rbx+rax*8+0x10]
   14000ad1f:	movsxd rax,DWORD PTR [rbx+0x8]
   14000ad23:	lea    rsi,[rbx+rax*8+0x10]
   14000ad28:	cmp    rsi,rdi
   14000ad2b:	je     0x14000ad42
   14000ad2d:	nop    DWORD PTR [rax]
   14000ad30:	sub    rdi,0x8
   14000ad34:	mov    rcx,rdi
   14000ad37:	call   QWORD PTR [rip+0x159cb]        # 0x140020708
   14000ad3d:	cmp    rdi,rsi
   14000ad40:	jne    0x14000ad30
   14000ad42:	mov    rcx,rbx
   14000ad45:	call   QWORD PTR [rip+0x15985]        # 0x1400206d0
   14000ad4b:	lea    rcx,[rsp+0x20]
   14000ad50:	call   QWORD PTR [rip+0x15a2a]        # 0x140020780
   14000ad56:	lea    rcx,[rsp+0x40]
   14000ad5b:	call   QWORD PTR [rip+0x1562f]        # 0x140020390
   14000ad61:	test   al,al
   14000ad63:	jne    0x14000a510
   14000ad69:	mov    rdi,QWORD PTR [rsp+0x30]
   14000ad6e:	mov    r14,QWORD PTR [rsp+0x220]
   14000ad76:	mov    r15,QWORD PTR [rsp+0x1d8]
   14000ad7e:	mov    r12,QWORD PTR [rsp+0x1e0]
   14000ad86:	mov    QWORD PTR [r14],rdi
   14000ad89:	mov    eax,DWORD PTR [rdi]
   14000ad8b:	test   eax,eax
   14000ad8d:	je     0x14000ad9f
   14000ad8f:	cmp    eax,0xffffffff
   14000ad92:	je     0x14000adff
   14000ad94:	lock add DWORD PTR [rdi],0x1
   14000ad98:	mov    rdi,QWORD PTR [rsp+0x30]
   14000ad9d:	jmp    0x14000adff
   14000ad9f:	mov    edx,DWORD PTR [rdi+0x4]
   14000ada2:	mov    rcx,r14
   14000ada5:	call   QWORD PTR [rip+0x158cd]        # 0x140020678
   14000adab:	mov    r11,QWORD PTR [r14]
   14000adae:	movsxd rax,DWORD PTR [r11+0xc]
   14000adb2:	lea    rbp,[r11+rax*8+0x10]
   14000adb7:	movsxd rax,DWORD PTR [rdi+0x8]
   14000adbb:	lea    rsi,[rdi+rax*8+0x10]
   14000adc0:	movsxd rax,DWORD PTR [r11+0x8]
   14000adc4:	lea    rbx,[r11+rax*8+0x10]
   14000adc9:	cmp    rbx,rbp
   14000adcc:	je     0x14000adff
   14000adce:	xchg   ax,ax
   14000add0:	mov    ecx,0x10
   14000add5:	call   0x14001ee64
   14000adda:	test   rax,rax
   14000addd:	je     0x14000aded
   14000addf:	mov    rdx,QWORD PTR [rsi]
   14000ade2:	mov    rcx,rax
   14000ade5:	call   QWORD PTR [rip+0x1594d]        # 0x140020738
   14000adeb:	jmp    0x14000adef
   14000aded:	xor    eax,eax
   14000adef:	mov    QWORD PTR [rbx],rax
   14000adf2:	add    rbx,0x8
   14000adf6:	add    rsi,0x8
   14000adfa:	cmp    rbx,rbp
   14000adfd:	jne    0x14000add0
   14000adff:	mov    rsi,QWORD PTR [rsp+0x38]
   14000ae04:	mov    eax,DWORD PTR [rsi]
   14000ae06:	test   eax,eax
   14000ae08:	je     0x14000ae2e
   14000ae0a:	cmp    eax,0xffffffff
   14000ae0d:	je     0x14000ae6b
   14000ae0f:	mov    eax,r13d
   14000ae12:	lock xadd DWORD PTR [rsi],eax
   14000ae16:	add    eax,0xffffffff
   14000ae19:	setne  al
   14000ae1c:	test   al,al
   14000ae1e:	jne    0x14000aeef
   14000ae24:	mov    rdi,QWORD PTR [rsp+0x30]
   14000ae29:	mov    rsi,QWORD PTR [rsp+0x38]
   14000ae2e:	movsxd rax,DWORD PTR [rsi+0xc]
   14000ae32:	lea    rbx,[rsi+rax*8+0x10]
   14000ae37:	movsxd rax,DWORD PTR [rsi+0x8]
   14000ae3b:	lea    rbp,[rsi+rax*8+0x10]
   14000ae40:	cmp    rbp,rbx
   14000ae43:	je     0x14000ae62
   14000ae45:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000ae50:	sub    rbx,0x8
   14000ae54:	mov    rcx,rbx
   14000ae57:	call   QWORD PTR [rip+0x15923]        # 0x140020780
   14000ae5d:	cmp    rbx,rbp
   14000ae60:	jne    0x14000ae50
   14000ae62:	mov    rcx,rsi
   14000ae65:	call   QWORD PTR [rip+0x15865]        # 0x1400206d0
   14000ae6b:	lea    rcx,[rsp+0x40]
   14000ae70:	call   QWORD PTR [rip+0x154e2]        # 0x140020358
   14000ae76:	mov    r11d,DWORD PTR [rdi]
   14000ae79:	test   r11d,r11d
   14000ae7c:	je     0x14000ae99
   14000ae7e:	cmp    r11d,0xffffffff
   14000ae82:	je     0x14000aedc
   14000ae84:	lock xadd DWORD PTR [rdi],r13d
   14000ae89:	add    r13d,0xffffffff
   14000ae8d:	setne  al
   14000ae90:	test   al,al
   14000ae92:	jne    0x14000aedc
   14000ae94:	mov    rdi,QWORD PTR [rsp+0x30]
   14000ae99:	movsxd rax,DWORD PTR [rdi+0xc]
   14000ae9d:	lea    rbx,[rdi+rax*8+0x10]
   14000aea2:	movsxd rax,DWORD PTR [rdi+0x8]
   14000aea6:	lea    rbp,[rdi+rax*8+0x10]
   14000aeab:	cmp    rbp,rbx
   14000aeae:	je     0x14000aed3
   14000aeb0:	mov    rsi,QWORD PTR [rbx-0x8]
   14000aeb4:	sub    rbx,0x8
   14000aeb8:	test   rsi,rsi
   14000aebb:	je     0x14000aece
   14000aebd:	mov    rcx,rsi
   14000aec0:	call   QWORD PTR [rip+0x15882]        # 0x140020748
   14000aec6:	mov    rcx,rsi
   14000aec9:	call   0x14001ee46
   14000aece:	cmp    rbx,rbp
   14000aed1:	jne    0x14000aeb0
   14000aed3:	mov    rcx,rdi
   14000aed6:	call   QWORD PTR [rip+0x157f4]        # 0x1400206d0
   14000aedc:	mov    rax,r14
   14000aedf:	add    rsp,0x1e8
   14000aee6:	pop    r14
   14000aee8:	pop    r13
   14000aeea:	pop    rdi
   14000aeeb:	pop    rsi
   14000aeec:	pop    rbp
   14000aeed:	pop    rbx
   14000aeee:	ret    
   14000aeef:	mov    rdi,QWORD PTR [rsp+0x30]
   14000aef4:	jmp    0x14000ae6b
   14000aef9:	int3   
   14000aefa:	int3   
   14000aefb:	int3   
   14000aefc:	int3   
   14000aefd:	int3   
   14000aefe:	int3   
   14000aeff:	int3   
   14000af00:	mov    QWORD PTR [rsp+0x10],rdx
   14000af05:	mov    QWORD PTR [rsp+0x8],rcx
   14000af0a:	push   rbx
   14000af0b:	push   rbp
   14000af0c:	push   rsi
   14000af0d:	push   rdi
   14000af0e:	push   r12
   14000af10:	push   r13
   14000af12:	push   r14
   14000af14:	push   r15
   14000af16:	sub    rsp,0xe8
   14000af1d:	mov    rax,QWORD PTR [rip+0x1582c]        # 0x140020750
   14000af24:	mov    r13,rdx
   14000af27:	mov    r12,rcx
   14000af2a:	mov    QWORD PTR [rcx],rax
   14000af2d:	mov    rdx,QWORD PTR [rdx]
   14000af30:	mov    QWORD PTR [rsp+0x20],rdx
   14000af35:	mov    eax,DWORD PTR [rdx]
   14000af37:	test   eax,eax
   14000af39:	je     0x14000af46
   14000af3b:	cmp    eax,0xffffffff
   14000af3e:	je     0x14000afb4
   14000af40:	lock add DWORD PTR [rdx],0x1
   14000af44:	jmp    0x14000afaf
   14000af46:	mov    edx,DWORD PTR [rdx+0x4]
   14000af49:	lea    rcx,[rsp+0x20]
   14000af4e:	call   QWORD PTR [rip+0x15724]        # 0x140020678
   14000af54:	mov    rdx,QWORD PTR [r13+0x0]
   14000af58:	movsxd rax,DWORD PTR [rdx+0x8]
   14000af5c:	lea    rbx,[rdx+rax*8+0x10]
   14000af61:	mov    rdx,QWORD PTR [rsp+0x20]
   14000af66:	movsxd rax,DWORD PTR [rdx+0xc]
   14000af6a:	lea    rsi,[rdx+rax*8+0x10]
   14000af6f:	movsxd rax,DWORD PTR [rdx+0x8]
   14000af73:	lea    rdi,[rdx+rax*8+0x10]
   14000af78:	cmp    rdi,rsi
   14000af7b:	je     0x14000afb4
   14000af7d:	nop    DWORD PTR [rax]
   14000af80:	mov    ecx,0x10
   14000af85:	call   0x14001ee64
   14000af8a:	test   rax,rax
   14000af8d:	je     0x14000af9d
   14000af8f:	mov    rdx,QWORD PTR [rbx]
   14000af92:	mov    rcx,rax
   14000af95:	call   QWORD PTR [rip+0x1579d]        # 0x140020738
   14000af9b:	jmp    0x14000af9f
   14000af9d:	xor    eax,eax
   14000af9f:	mov    QWORD PTR [rdi],rax
   14000afa2:	add    rdi,0x8
   14000afa6:	add    rbx,0x8
   14000afaa:	cmp    rdi,rsi
   14000afad:	jne    0x14000af80
   14000afaf:	mov    rdx,QWORD PTR [rsp+0x20]
   14000afb4:	mov    DWORD PTR [rsp+0x28],0x0
   14000afbc:	movsxd rax,DWORD PTR [rdx+0x8]
   14000afc0:	or     r14,0xffffffffffffffff
   14000afc4:	lea    rcx,[rdx+rax*8+0x10]
   14000afc9:	mov    QWORD PTR [rsp+0x30],rcx
   14000afce:	movsxd rax,DWORD PTR [rdx+0xc]
   14000afd2:	lea    rdx,[rdx+rax*8+0x10]
   14000afd7:	mov    QWORD PTR [rsp+0x38],rdx
   14000afdc:	nop    DWORD PTR [rax+0x0]
   14000afe0:	mov    eax,0x1
   14000afe5:	mov    DWORD PTR [rsp+0x28],eax
   14000afe9:	cmp    rcx,rdx
   14000afec:	je     0x14000b306
   14000aff2:	mov    r15,QWORD PTR [rcx]
   14000aff5:	test   eax,eax
   14000aff7:	je     0x14000b2ee
   14000affd:	lea    rcx,[rsp+0x40]
   14000b002:	mov    rdx,r15
   14000b005:	call   0x140008240
   14000b00a:	lea    rcx,[rsp+0xa0]
   14000b012:	call   QWORD PTR [rip+0x155c0]        # 0x1400205d8
   14000b018:	lea    rdx,[rip+0x15a31]        # 0x140020a50
   14000b01f:	lea    rcx,[rsp+0x60]
   14000b024:	mov    r8d,0x4
   14000b02a:	mov    r12,rax
   14000b02d:	call   QWORD PTR [rip+0x1554d]        # 0x140020580
   14000b033:	mov    rbx,QWORD PTR [rsp+0x40]
   14000b038:	mov    rdi,QWORD PTR [rbx+0x10]
   14000b03c:	lea    r13,[rbx+0x10]
   14000b040:	mov    rbp,rax
   14000b043:	test   rdi,rdi
   14000b046:	je     0x14000b08d
   14000b048:	xor    esi,esi
   14000b04a:	nop    WORD PTR [rax+rax*1+0x0]
   14000b050:	lea    rcx,[rdi+0x18]
   14000b054:	mov    rdx,rbp
   14000b057:	call   QWORD PTR [rip+0x156b3]        # 0x140020710
   14000b05d:	test   al,al
   14000b05f:	jne    0x14000b06a
   14000b061:	mov    rsi,rdi
   14000b064:	mov    rdi,QWORD PTR [rdi+0x8]
   14000b068:	jmp    0x14000b06e
   14000b06a:	mov    rdi,QWORD PTR [rdi+0x10]
   14000b06e:	test   rdi,rdi
   14000b071:	jne    0x14000b050
   14000b073:	test   rsi,rsi
   14000b076:	je     0x14000b08d
   14000b078:	lea    rdx,[rsi+0x18]
   14000b07c:	mov    rcx,rbp
   14000b07f:	call   QWORD PTR [rip+0x1568b]        # 0x140020710
   14000b085:	test   al,al
   14000b087:	jne    0x14000b08d
   14000b089:	lea    r12,[rsi+0x20]
   14000b08d:	lea    rcx,[rsp+0x68]
   14000b092:	mov    rdx,r12
   14000b095:	call   QWORD PTR [rip+0x1569d]        # 0x140020738
   14000b09b:	lea    rdx,[rsp+0x140]
   14000b0a3:	lea    rcx,[rsp+0x68]
   14000b0a8:	call   QWORD PTR [rip+0x1523a]        # 0x1400202e8
   14000b0ae:	lea    rcx,[rsp+0x68]
   14000b0b3:	call   QWORD PTR [rip+0x1568f]        # 0x140020748
   14000b0b9:	lea    rcx,[rsp+0x60]
   14000b0be:	call   QWORD PTR [rip+0x156bc]        # 0x140020780
   14000b0c4:	lea    rcx,[rsp+0xa0]
   14000b0cc:	call   QWORD PTR [rip+0x15676]        # 0x140020748
   14000b0d2:	lea    rcx,[rsp+0xc0]
   14000b0da:	call   QWORD PTR [rip+0x154f8]        # 0x1400205d8
   14000b0e0:	lea    rdx,[rip+0x1597d]        # 0x140020a64
   14000b0e7:	lea    rcx,[rsp+0x48]
   14000b0ec:	mov    r8d,0x4
   14000b0f2:	mov    r12,rax
   14000b0f5:	call   QWORD PTR [rip+0x15485]        # 0x140020580
   14000b0fb:	mov    rdi,QWORD PTR [r13+0x0]
   14000b0ff:	mov    rbp,rax
   14000b102:	test   rdi,rdi
   14000b105:	je     0x14000b14d
   14000b107:	xor    esi,esi
   14000b109:	nop    DWORD PTR [rax+0x0]
   14000b110:	lea    rcx,[rdi+0x18]
   14000b114:	mov    rdx,rbp
   14000b117:	call   QWORD PTR [rip+0x155f3]        # 0x140020710
   14000b11d:	test   al,al
   14000b11f:	jne    0x14000b12a
   14000b121:	mov    rsi,rdi
   14000b124:	mov    rdi,QWORD PTR [rdi+0x8]
   14000b128:	jmp    0x14000b12e
   14000b12a:	mov    rdi,QWORD PTR [rdi+0x10]
   14000b12e:	test   rdi,rdi
   14000b131:	jne    0x14000b110
   14000b133:	test   rsi,rsi
   14000b136:	je     0x14000b14d
   14000b138:	lea    rdx,[rsi+0x18]
   14000b13c:	mov    rcx,rbp
   14000b13f:	call   QWORD PTR [rip+0x155cb]        # 0x140020710
   14000b145:	test   al,al
   14000b147:	jne    0x14000b14d
   14000b149:	lea    r12,[rsi+0x20]
   14000b14d:	lea    rcx,[rsp+0x78]
   14000b152:	mov    rdx,r12
   14000b155:	call   QWORD PTR [rip+0x155dd]        # 0x140020738
   14000b15b:	lea    rdx,[rsp+0x148]
   14000b163:	lea    rcx,[rsp+0x78]
   14000b168:	call   QWORD PTR [rip+0x1517a]        # 0x1400202e8
   14000b16e:	lea    rcx,[rsp+0x78]
   14000b173:	call   QWORD PTR [rip+0x155cf]        # 0x140020748
   14000b179:	lea    rcx,[rsp+0x48]
   14000b17e:	call   QWORD PTR [rip+0x155fc]        # 0x140020780
   14000b184:	lea    rcx,[rsp+0xc0]
   14000b18c:	call   QWORD PTR [rip+0x155b6]        # 0x140020748
   14000b192:	lea    rsi,[rip+0x158af]        # 0x140020a48
   14000b199:	xor    eax,eax
   14000b19b:	mov    rcx,r14
   14000b19e:	mov    rdi,rsi
   14000b1a1:	mov    QWORD PTR [rsp+0x98],rsi
   14000b1a9:	repnz scas al,BYTE PTR es:[rdi]
   14000b1ab:	lea    rdx,[rsp+0xb0]
   14000b1b3:	not    rcx
   14000b1b6:	dec    rcx
   14000b1b9:	mov    DWORD PTR [rsp+0x90],ecx
   14000b1c0:	lea    rcx,[rsp+0x148]
   14000b1c8:	movaps xmm0,XMMWORD PTR [rsp+0x90]
   14000b1d0:	movdqa XMMWORD PTR [rsp+0xb0],xmm0
   14000b1d9:	call   QWORD PTR [rip+0x15599]        # 0x140020778
   14000b1df:	test   al,al
   14000b1e1:	je     0x14000b245
   14000b1e3:	mov    rax,QWORD PTR [rsp+0x140]
   14000b1eb:	cmp    DWORD PTR [rax+0x4],0x0
   14000b1ef:	je     0x14000b245
   14000b1f1:	lea    rdx,[rsp+0x140]
   14000b1f9:	lea    rcx,[rsp+0x50]
   14000b1fe:	call   QWORD PTR [rip+0x15344]        # 0x140020548
   14000b204:	lea    rdx,[rsp+0x58]
   14000b209:	mov    rcx,rax
   14000b20c:	call   QWORD PTR [rip+0x1518e]        # 0x1400203a0
   14000b212:	mov    r12,QWORD PTR [rsp+0x130]
   14000b21a:	lea    rdx,[rsp+0xd0]
   14000b222:	mov    rcx,r12
   14000b225:	mov    r8,rax
   14000b228:	call   0x1400072d0
   14000b22d:	lea    rcx,[rsp+0x58]
   14000b232:	call   QWORD PTR [rip+0x15548]        # 0x140020780
   14000b238:	lea    rcx,[rsp+0x50]
   14000b23d:	call   QWORD PTR [rip+0x15315]        # 0x140020558
   14000b243:	jmp    0x14000b24d
   14000b245:	mov    r12,QWORD PTR [rsp+0x130]
   14000b24d:	lea    rcx,[rsp+0x148]
   14000b255:	call   QWORD PTR [rip+0x15525]        # 0x140020780
   14000b25b:	lea    rcx,[rsp+0x140]
   14000b263:	call   QWORD PTR [rip+0x15517]        # 0x140020780
   14000b269:	mov    edx,DWORD PTR [rbx]
   14000b26b:	test   edx,edx
   14000b26d:	je     0x14000b28a
   14000b26f:	cmp    edx,0xffffffff
   14000b272:	je     0x14000b2df
   14000b274:	mov    eax,r14d
   14000b277:	lock xadd DWORD PTR [rbx],eax
   14000b27b:	add    eax,0xffffffff
   14000b27e:	setne  al
   14000b281:	test   al,al
   14000b283:	jne    0x14000b2df
   14000b285:	mov    rbx,QWORD PTR [rsp+0x40]
   14000b28a:	mov    rdi,QWORD PTR [r13+0x0]
   14000b28e:	test   rdi,rdi
   14000b291:	je     0x14000b2d6
   14000b293:	lea    rcx,[rdi+0x18]
   14000b297:	call   QWORD PTR [rip+0x154e3]        # 0x140020780
   14000b29d:	lea    rcx,[rdi+0x20]
   14000b2a1:	call   QWORD PTR [rip+0x154a1]        # 0x140020748
   14000b2a7:	mov    rcx,QWORD PTR [rdi+0x8]
   14000b2ab:	test   rcx,rcx
   14000b2ae:	je     0x14000b2b5
   14000b2b0:	call   0x140001fd0
   14000b2b5:	mov    rcx,QWORD PTR [rdi+0x10]
   14000b2b9:	test   rcx,rcx
   14000b2bc:	je     0x14000b2c3
   14000b2be:	call   0x140001fd0
   14000b2c3:	mov    rdx,QWORD PTR [r13+0x0]
   14000b2c7:	mov    r8d,0x8
   14000b2cd:	mov    rcx,rbx
   14000b2d0:	call   QWORD PTR [rip+0x153aa]        # 0x140020680
   14000b2d6:	mov    rcx,rbx
   14000b2d9:	call   QWORD PTR [rip+0x153a9]        # 0x140020688
   14000b2df:	mov    eax,DWORD PTR [rsp+0x28]
   14000b2e3:	dec    eax
   14000b2e5:	mov    DWORD PTR [rsp+0x28],eax
   14000b2e9:	jmp    0x14000aff5
   14000b2ee:	mov    rcx,QWORD PTR [rsp+0x30]
   14000b2f3:	mov    rdx,QWORD PTR [rsp+0x38]
   14000b2f8:	add    rcx,0x8
   14000b2fc:	mov    QWORD PTR [rsp+0x30],rcx
   14000b301:	jmp    0x14000afe0
   14000b306:	mov    rsi,QWORD PTR [rsp+0x20]
   14000b30b:	mov    eax,DWORD PTR [rsi]
   14000b30d:	test   eax,eax
   14000b30f:	je     0x14000b32c
   14000b311:	cmp    eax,0xffffffff
   14000b314:	je     0x14000b36f
   14000b316:	mov    eax,r14d
   14000b319:	lock xadd DWORD PTR [rsi],eax
   14000b31d:	add    eax,0xffffffff
   14000b320:	setne  al
   14000b323:	test   al,al
   14000b325:	jne    0x14000b36f
   14000b327:	mov    rsi,QWORD PTR [rsp+0x20]
   14000b32c:	movsxd rax,DWORD PTR [rsi+0xc]
   14000b330:	lea    rdi,[rsi+rax*8+0x10]
   14000b335:	movsxd rax,DWORD PTR [rsi+0x8]
   14000b339:	lea    rbp,[rsi+rax*8+0x10]
   14000b33e:	cmp    rbp,rdi
   14000b341:	je     0x14000b366
   14000b343:	mov    rbx,QWORD PTR [rdi-0x8]
   14000b347:	sub    rdi,0x8
   14000b34b:	test   rbx,rbx
   14000b34e:	je     0x14000b361
   14000b350:	mov    rcx,rbx
   14000b353:	call   QWORD PTR [rip+0x153ef]        # 0x140020748
   14000b359:	mov    rcx,rbx
   14000b35c:	call   0x14001ee46
   14000b361:	cmp    rdi,rbp
   14000b364:	jne    0x14000b343
   14000b366:	mov    rcx,rsi
   14000b369:	call   QWORD PTR [rip+0x15361]        # 0x1400206d0
   14000b36f:	mov    r13,QWORD PTR [rsp+0x138]
   14000b377:	mov    rax,QWORD PTR [r13+0x0]
   14000b37b:	mov    ecx,DWORD PTR [rax]
   14000b37d:	test   ecx,ecx
   14000b37f:	je     0x14000b396
   14000b381:	cmp    ecx,0xffffffff
   14000b384:	je     0x14000b3dd
   14000b386:	lock xadd DWORD PTR [rax],r14d
   14000b38b:	add    r14d,0xffffffff
   14000b38f:	setne  al
   14000b392:	test   al,al
   14000b394:	jne    0x14000b3dd
   14000b396:	mov    rbp,QWORD PTR [r13+0x0]
   14000b39a:	movsxd rax,DWORD PTR [rbp+0xc]
   14000b39e:	lea    rdi,[rbp+rax*8+0x10]
   14000b3a3:	movsxd rax,DWORD PTR [rbp+0x8]
   14000b3a7:	lea    rsi,[rbp+rax*8+0x10]
   14000b3ac:	cmp    rsi,rdi
   14000b3af:	je     0x14000b3d4
   14000b3b1:	mov    rbx,QWORD PTR [rdi-0x8]
   14000b3b5:	sub    rdi,0x8
   14000b3b9:	test   rbx,rbx
   14000b3bc:	je     0x14000b3cf
   14000b3be:	mov    rcx,rbx
   14000b3c1:	call   QWORD PTR [rip+0x15381]        # 0x140020748
   14000b3c7:	mov    rcx,rbx
   14000b3ca:	call   0x14001ee46
   14000b3cf:	cmp    rdi,rsi
   14000b3d2:	jne    0x14000b3b1
   14000b3d4:	mov    rcx,rbp
   14000b3d7:	call   QWORD PTR [rip+0x152f3]        # 0x1400206d0
   14000b3dd:	mov    rax,r12
   14000b3e0:	add    rsp,0xe8
   14000b3e7:	pop    r15
   14000b3e9:	pop    r14
   14000b3eb:	pop    r13
   14000b3ed:	pop    r12
   14000b3ef:	pop    rdi
   14000b3f0:	pop    rsi
   14000b3f1:	pop    rbp
   14000b3f2:	pop    rbx
   14000b3f3:	ret    
   14000b3f4:	int3   
   14000b3f5:	int3   
   14000b3f6:	int3   
   14000b3f7:	int3   
   14000b3f8:	int3   
   14000b3f9:	int3   
   14000b3fa:	int3   
   14000b3fb:	int3   
   14000b3fc:	int3   
   14000b3fd:	int3   
   14000b3fe:	int3   
   14000b3ff:	int3   
   14000b400:	rex push rbx
   14000b402:	push   rbp
   14000b403:	push   rsi
   14000b404:	push   rdi
   14000b405:	push   r12
   14000b407:	push   r13
   14000b409:	push   r14
   14000b40b:	push   r15
   14000b40d:	sub    rsp,0xd8
   14000b414:	mov    rax,QWORD PTR [rip+0x15345]        # 0x140020760
   14000b41b:	mov    rbx,rdx
   14000b41e:	mov    r13,r8
   14000b421:	mov    QWORD PTR [rcx],rax
   14000b424:	mov    rdx,QWORD PTR [rdx]
   14000b427:	mov    r15,rcx
   14000b42a:	mov    QWORD PTR [rsp+0x88],rdx
   14000b432:	mov    eax,DWORD PTR [rdx]
   14000b434:	test   eax,eax
   14000b436:	je     0x14000b443
   14000b438:	cmp    eax,0xffffffff
   14000b43b:	je     0x14000b4a6
   14000b43d:	lock add DWORD PTR [rdx],0x1
   14000b441:	jmp    0x14000b49e
   14000b443:	mov    edx,DWORD PTR [rdx+0x4]
   14000b446:	lea    rcx,[rsp+0x88]
   14000b44e:	call   QWORD PTR [rip+0x15224]        # 0x140020678
   14000b454:	mov    rdx,QWORD PTR [rsp+0x88]
   14000b45c:	mov    r11,QWORD PTR [rbx]
   14000b45f:	movsxd rax,DWORD PTR [r11+0x8]
   14000b463:	lea    rdi,[r11+rax*8+0x10]
   14000b468:	movsxd rax,DWORD PTR [rdx+0xc]
   14000b46c:	lea    rsi,[rdx+rax*8+0x10]
   14000b471:	movsxd rax,DWORD PTR [rdx+0x8]
   14000b475:	lea    rbx,[rdx+rax*8+0x10]
   14000b47a:	cmp    rbx,rsi
   14000b47d:	je     0x14000b4a6
   14000b47f:	nop
   14000b480:	test   rbx,rbx
   14000b483:	je     0x14000b491
   14000b485:	mov    rdx,rdi
   14000b488:	mov    rcx,rbx
   14000b48b:	call   QWORD PTR [rip+0x15307]        # 0x140020798
   14000b491:	add    rbx,0x8
   14000b495:	add    rdi,0x8
   14000b499:	cmp    rbx,rsi
   14000b49c:	jne    0x14000b480
   14000b49e:	mov    rdx,QWORD PTR [rsp+0x88]
   14000b4a6:	mov    DWORD PTR [rsp+0x90],0x0
   14000b4b1:	movsxd rax,DWORD PTR [rdx+0x8]
   14000b4b5:	lea    r12,[rdx+rax*8+0x10]
   14000b4ba:	mov    QWORD PTR [rsp+0x98],r12
   14000b4c2:	movsxd rax,DWORD PTR [rdx+0xc]
   14000b4c6:	lea    rcx,[rdx+rax*8+0x10]
   14000b4cb:	mov    QWORD PTR [rsp+0xa0],rcx
   14000b4d3:	data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000b4e0:	mov    eax,0x1
   14000b4e5:	mov    DWORD PTR [rsp+0x90],eax
   14000b4ec:	cmp    r12,rcx
   14000b4ef:	je     0x14000b635
   14000b4f5:	test   eax,eax
   14000b4f7:	je     0x14000b614
   14000b4fd:	lea    rcx,[rsp+0x50]
   14000b502:	mov    rdx,r12
   14000b505:	call   0x14000a3a0
   14000b50a:	lea    r8,[rsp+0x50]
   14000b50f:	lea    rcx,[rsp+0xb8]
   14000b517:	mov    rdx,r15
   14000b51a:	call   0x140003c00
   14000b51f:	mov    rcx,r15
   14000b522:	mov    rdx,rax
   14000b525:	call   0x140002460
   14000b52a:	mov    rsi,QWORD PTR [rsp+0xb8]
   14000b532:	mov    eax,DWORD PTR [rsi]
   14000b534:	test   eax,eax
   14000b536:	je     0x14000b550
   14000b538:	cmp    eax,0xffffffff
   14000b53b:	je     0x14000b59c
   14000b53d:	lock add DWORD PTR [rsi],0xffffffff
   14000b541:	setne  al
   14000b544:	test   al,al
   14000b546:	jne    0x14000b59c
   14000b548:	mov    rsi,QWORD PTR [rsp+0xb8]
   14000b550:	movsxd rax,DWORD PTR [rsi+0xc]
   14000b554:	lea    rbx,[rsi+rax*8+0x10]
   14000b559:	movsxd rax,DWORD PTR [rsi+0x8]
   14000b55d:	lea    rbp,[rsi+rax*8+0x10]
   14000b562:	cmp    rbp,rbx
   14000b565:	je     0x14000b593
   14000b567:	nop    WORD PTR [rax+rax*1+0x0]
   14000b570:	mov    rdi,QWORD PTR [rbx-0x8]
   14000b574:	sub    rbx,0x8
   14000b578:	test   rdi,rdi
   14000b57b:	je     0x14000b58e
   14000b57d:	mov    rcx,rdi
   14000b580:	call   QWORD PTR [rip+0x151c2]        # 0x140020748
   14000b586:	mov    rcx,rdi
   14000b589:	call   0x14001ee46
   14000b58e:	cmp    rbx,rbp
   14000b591:	jne    0x14000b570
   14000b593:	mov    rcx,rsi
   14000b596:	call   QWORD PTR [rip+0x15134]        # 0x1400206d0
   14000b59c:	mov    rsi,QWORD PTR [rsp+0x50]
   14000b5a1:	mov    eax,DWORD PTR [rsi]
   14000b5a3:	test   eax,eax
   14000b5a5:	je     0x14000b5bc
   14000b5a7:	cmp    eax,0xffffffff
   14000b5aa:	je     0x14000b5ff
   14000b5ac:	lock add DWORD PTR [rsi],0xffffffff
   14000b5b0:	setne  al
   14000b5b3:	test   al,al
   14000b5b5:	jne    0x14000b5ff
   14000b5b7:	mov    rsi,QWORD PTR [rsp+0x50]
   14000b5bc:	movsxd rax,DWORD PTR [rsi+0xc]
   14000b5c0:	lea    rbx,[rsi+rax*8+0x10]
   14000b5c5:	movsxd rax,DWORD PTR [rsi+0x8]
   14000b5c9:	lea    rbp,[rsi+rax*8+0x10]
   14000b5ce:	cmp    rbp,rbx
   14000b5d1:	je     0x14000b5f6
   14000b5d3:	mov    rdi,QWORD PTR [rbx-0x8]
   14000b5d7:	sub    rbx,0x8
   14000b5db:	test   rdi,rdi
   14000b5de:	je     0x14000b5f1
   14000b5e0:	mov    rcx,rdi
   14000b5e3:	call   QWORD PTR [rip+0x1515f]        # 0x140020748
   14000b5e9:	mov    rcx,rdi
   14000b5ec:	call   0x14001ee46
   14000b5f1:	cmp    rbx,rbp
   14000b5f4:	jne    0x14000b5d3
   14000b5f6:	mov    rcx,rsi
   14000b5f9:	call   QWORD PTR [rip+0x150d1]        # 0x1400206d0
   14000b5ff:	mov    eax,DWORD PTR [rsp+0x90]
   14000b606:	dec    eax
   14000b608:	mov    DWORD PTR [rsp+0x90],eax
   14000b60f:	jmp    0x14000b4f5
   14000b614:	mov    r12,QWORD PTR [rsp+0x98]
   14000b61c:	mov    rcx,QWORD PTR [rsp+0xa0]
   14000b624:	add    r12,0x8
   14000b628:	mov    QWORD PTR [rsp+0x98],r12
   14000b630:	jmp    0x14000b4e0
   14000b635:	mov    rdi,QWORD PTR [rsp+0x88]
   14000b63d:	mov    eax,DWORD PTR [rdi]
   14000b63f:	test   eax,eax
   14000b641:	je     0x14000b65b
   14000b643:	cmp    eax,0xffffffff
   14000b646:	je     0x14000b68d
   14000b648:	lock add DWORD PTR [rdi],0xffffffff
   14000b64c:	setne  al
   14000b64f:	test   al,al
   14000b651:	jne    0x14000b68d
   14000b653:	mov    rdi,QWORD PTR [rsp+0x88]
   14000b65b:	movsxd rax,DWORD PTR [rdi+0xc]
   14000b65f:	lea    rbx,[rdi+rax*8+0x10]
   14000b664:	movsxd rax,DWORD PTR [rdi+0x8]
   14000b668:	lea    rsi,[rdi+rax*8+0x10]
   14000b66d:	cmp    rsi,rbx
   14000b670:	je     0x14000b684
   14000b672:	sub    rbx,0x8
   14000b676:	mov    rcx,rbx
   14000b679:	call   QWORD PTR [rip+0x15101]        # 0x140020780
   14000b67f:	cmp    rbx,rsi
   14000b682:	jne    0x14000b672
   14000b684:	mov    rcx,rdi
   14000b687:	call   QWORD PTR [rip+0x15043]        # 0x1400206d0
   14000b68d:	mov    rcx,QWORD PTR [r13+0x0]
   14000b691:	mov    QWORD PTR [rsp+0x68],rcx
   14000b696:	mov    eax,DWORD PTR [rcx]
   14000b698:	test   eax,eax
   14000b69a:	je     0x14000b6a7
   14000b69c:	cmp    eax,0xffffffff
   14000b69f:	je     0x14000b703
   14000b6a1:	lock add DWORD PTR [rcx],0x1
   14000b6a5:	jmp    0x14000b6fe
   14000b6a7:	mov    edx,DWORD PTR [rcx+0x4]
   14000b6aa:	lea    rcx,[rsp+0x68]
   14000b6af:	call   QWORD PTR [rip+0x14fc3]        # 0x140020678
   14000b6b5:	mov    rcx,QWORD PTR [rsp+0x68]
   14000b6ba:	mov    r11,QWORD PTR [r13+0x0]
   14000b6be:	movsxd rax,DWORD PTR [r11+0x8]
   14000b6c2:	lea    rdi,[r11+rax*8+0x10]
   14000b6c7:	movsxd rax,DWORD PTR [rcx+0xc]
   14000b6cb:	lea    rsi,[rcx+rax*8+0x10]
   14000b6d0:	movsxd rax,DWORD PTR [rcx+0x8]
   14000b6d4:	lea    rbx,[rcx+rax*8+0x10]
   14000b6d9:	cmp    rbx,rsi
   14000b6dc:	je     0x14000b703
   14000b6de:	xchg   ax,ax
   14000b6e0:	test   rbx,rbx
   14000b6e3:	je     0x14000b6f1
   14000b6e5:	mov    rdx,rdi
   14000b6e8:	mov    rcx,rbx
   14000b6eb:	call   QWORD PTR [rip+0x150a7]        # 0x140020798
   14000b6f1:	add    rbx,0x8
   14000b6f5:	add    rdi,0x8
   14000b6f9:	cmp    rbx,rsi
   14000b6fc:	jne    0x14000b6e0
   14000b6fe:	mov    rcx,QWORD PTR [rsp+0x68]
   14000b703:	mov    DWORD PTR [rsp+0x70],0x0
   14000b70b:	movsxd rax,DWORD PTR [rcx+0x8]
   14000b70f:	lea    r12,[rcx+rax*8+0x10]
   14000b714:	mov    QWORD PTR [rsp+0x78],r12
   14000b719:	movsxd rax,DWORD PTR [rcx+0xc]
   14000b71d:	lea    rdx,[rcx+rax*8+0x10]
   14000b722:	mov    QWORD PTR [rsp+0x80],rdx
   14000b72a:	nop    WORD PTR [rax+rax*1+0x0]
   14000b730:	mov    eax,0x1
   14000b735:	mov    DWORD PTR [rsp+0x70],eax
   14000b739:	cmp    r12,rdx
   14000b73c:	je     0x14000b879
   14000b742:	test   eax,eax
   14000b744:	je     0x14000b85e
   14000b74a:	lea    rcx,[rsp+0x60]
   14000b74f:	mov    rdx,r12
   14000b752:	call   0x140009f60
   14000b757:	lea    r8,[rsp+0x60]
   14000b75c:	lea    rcx,[rsp+0xa8]
   14000b764:	mov    rdx,r15
   14000b767:	call   0x140003c00
   14000b76c:	mov    rcx,r15
   14000b76f:	mov    rdx,rax
   14000b772:	call   0x140002460
   14000b777:	mov    rsi,QWORD PTR [rsp+0xa8]
   14000b77f:	mov    eax,DWORD PTR [rsi]
   14000b781:	test   eax,eax
   14000b783:	je     0x14000b79d
   14000b785:	cmp    eax,0xffffffff
   14000b788:	je     0x14000b7ec
   14000b78a:	lock add DWORD PTR [rsi],0xffffffff
   14000b78e:	setne  al
   14000b791:	test   al,al
   14000b793:	jne    0x14000b7ec
   14000b795:	mov    rsi,QWORD PTR [rsp+0xa8]
   14000b79d:	movsxd rax,DWORD PTR [rsi+0xc]
   14000b7a1:	lea    rbx,[rsi+rax*8+0x10]
   14000b7a6:	movsxd rax,DWORD PTR [rsi+0x8]
   14000b7aa:	lea    rbp,[rsi+rax*8+0x10]
   14000b7af:	cmp    rbp,rbx
   14000b7b2:	je     0x14000b7e3
   14000b7b4:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000b7c0:	mov    rdi,QWORD PTR [rbx-0x8]
   14000b7c4:	sub    rbx,0x8
   14000b7c8:	test   rdi,rdi
   14000b7cb:	je     0x14000b7de
   14000b7cd:	mov    rcx,rdi
   14000b7d0:	call   QWORD PTR [rip+0x14f72]        # 0x140020748
   14000b7d6:	mov    rcx,rdi
   14000b7d9:	call   0x14001ee46
   14000b7de:	cmp    rbx,rbp
   14000b7e1:	jne    0x14000b7c0
   14000b7e3:	mov    rcx,rsi
   14000b7e6:	call   QWORD PTR [rip+0x14ee4]        # 0x1400206d0
   14000b7ec:	mov    rsi,QWORD PTR [rsp+0x60]
   14000b7f1:	mov    eax,DWORD PTR [rsi]
   14000b7f3:	test   eax,eax
   14000b7f5:	je     0x14000b80c
   14000b7f7:	cmp    eax,0xffffffff
   14000b7fa:	je     0x14000b84f
   14000b7fc:	lock add DWORD PTR [rsi],0xffffffff
   14000b800:	setne  al
   14000b803:	test   al,al
   14000b805:	jne    0x14000b84f
   14000b807:	mov    rsi,QWORD PTR [rsp+0x60]
   14000b80c:	movsxd rax,DWORD PTR [rsi+0xc]
   14000b810:	lea    rbx,[rsi+rax*8+0x10]
   14000b815:	movsxd rax,DWORD PTR [rsi+0x8]
   14000b819:	lea    rbp,[rsi+rax*8+0x10]
   14000b81e:	cmp    rbp,rbx
   14000b821:	je     0x14000b846
   14000b823:	mov    rdi,QWORD PTR [rbx-0x8]
   14000b827:	sub    rbx,0x8
   14000b82b:	test   rdi,rdi
   14000b82e:	je     0x14000b841
   14000b830:	mov    rcx,rdi
   14000b833:	call   QWORD PTR [rip+0x14f0f]        # 0x140020748
   14000b839:	mov    rcx,rdi
   14000b83c:	call   0x14001ee46
   14000b841:	cmp    rbx,rbp
   14000b844:	jne    0x14000b823
   14000b846:	mov    rcx,rsi
   14000b849:	call   QWORD PTR [rip+0x14e81]        # 0x1400206d0
   14000b84f:	mov    eax,DWORD PTR [rsp+0x70]
   14000b853:	dec    eax
   14000b855:	mov    DWORD PTR [rsp+0x70],eax
   14000b859:	jmp    0x14000b742
   14000b85e:	mov    r12,QWORD PTR [rsp+0x78]
   14000b863:	mov    rdx,QWORD PTR [rsp+0x80]
   14000b86b:	add    r12,0x8
   14000b86f:	mov    QWORD PTR [rsp+0x78],r12
   14000b874:	jmp    0x14000b730
   14000b879:	mov    rdi,QWORD PTR [rsp+0x68]
   14000b87e:	mov    eax,DWORD PTR [rdi]
   14000b880:	test   eax,eax
   14000b882:	je     0x14000b899
   14000b884:	cmp    eax,0xffffffff
   14000b887:	je     0x14000b8cb
   14000b889:	lock add DWORD PTR [rdi],0xffffffff
   14000b88d:	setne  al
   14000b890:	test   al,al
   14000b892:	jne    0x14000b8cb
   14000b894:	mov    rdi,QWORD PTR [rsp+0x68]
   14000b899:	movsxd rax,DWORD PTR [rdi+0xc]
   14000b89d:	lea    rbx,[rdi+rax*8+0x10]
   14000b8a2:	movsxd rax,DWORD PTR [rdi+0x8]
   14000b8a6:	lea    rsi,[rdi+rax*8+0x10]
   14000b8ab:	cmp    rsi,rbx
   14000b8ae:	je     0x14000b8c2
   14000b8b0:	sub    rbx,0x8
   14000b8b4:	mov    rcx,rbx
   14000b8b7:	call   QWORD PTR [rip+0x14ec3]        # 0x140020780
   14000b8bd:	cmp    rbx,rsi
   14000b8c0:	jne    0x14000b8b0
   14000b8c2:	mov    rcx,rdi
   14000b8c5:	call   QWORD PTR [rip+0x14e05]        # 0x1400206d0
   14000b8cb:	mov    rax,QWORD PTR [r15]
   14000b8ce:	mov    QWORD PTR [rsp+0x58],rax
   14000b8d3:	mov    ecx,DWORD PTR [rax]
   14000b8d5:	test   ecx,ecx
   14000b8d7:	je     0x14000b8e4
   14000b8d9:	cmp    ecx,0xffffffff
   14000b8dc:	je     0x14000b94f
   14000b8de:	lock add DWORD PTR [rax],0x1
   14000b8e2:	jmp    0x14000b94f
   14000b8e4:	mov    edx,DWORD PTR [rax+0x4]
   14000b8e7:	lea    rcx,[rsp+0x58]
   14000b8ec:	call   QWORD PTR [rip+0x14d86]        # 0x140020678
   14000b8f2:	mov    r11,QWORD PTR [r15]
   14000b8f5:	movsxd rax,DWORD PTR [r11+0x8]
   14000b8f9:	lea    rdi,[r11+rax*8+0x10]
   14000b8fe:	mov    rax,QWORD PTR [rsp+0x58]
   14000b903:	movsxd rcx,DWORD PTR [rax+0xc]
   14000b907:	lea    rsi,[rax+rcx*8+0x10]
   14000b90c:	movsxd rcx,DWORD PTR [rax+0x8]
   14000b910:	lea    rbx,[rax+rcx*8+0x10]
   14000b915:	cmp    rbx,rsi
   14000b918:	je     0x14000b94f
   14000b91a:	nop    WORD PTR [rax+rax*1+0x0]
   14000b920:	mov    ecx,0x10
   14000b925:	call   0x14001ee64
   14000b92a:	test   rax,rax
   14000b92d:	je     0x14000b93d
   14000b92f:	mov    rdx,QWORD PTR [rdi]
   14000b932:	mov    rcx,rax
   14000b935:	call   QWORD PTR [rip+0x14dfd]        # 0x140020738
   14000b93b:	jmp    0x14000b93f
   14000b93d:	xor    eax,eax
   14000b93f:	mov    QWORD PTR [rbx],rax
   14000b942:	add    rbx,0x8
   14000b946:	add    rdi,0x8
   14000b94a:	cmp    rbx,rsi
   14000b94d:	jne    0x14000b920
   14000b94f:	lea    rdx,[rsp+0x58]
   14000b954:	lea    rcx,[rsp+0x130]
   14000b95c:	call   0x14000af00
   14000b961:	mov    rbx,QWORD PTR [rsp+0x130]
   14000b969:	mov    r11,QWORD PTR [rip+0x14de0]        # 0x140020750
   14000b970:	cmp    DWORD PTR [rbx+0x14],0x0
   14000b974:	mov    QWORD PTR [rsp+0x138],r11
   14000b97c:	je     0x14000c0e9
   14000b982:	mov    eax,DWORD PTR [rbx+0x10]
   14000b985:	cmp    eax,0x1
   14000b988:	je     0x14000b9f3
   14000b98a:	test   eax,eax
   14000b98c:	je     0x14000b9f3
   14000b98e:	lea    r8,[rip+0xffffffffffff694b]        # 0x1400022e0
   14000b995:	lea    rdx,[rip+0xffffffffffff6454]        # 0x140001df0
   14000b99c:	mov    r9d,0x18
   14000b9a2:	mov    rcx,rbx
   14000b9a5:	mov    DWORD PTR [rsp+0x20],0x8
   14000b9ad:	call   QWORD PTR [rip+0x14c7d]        # 0x140020630
   14000b9b3:	mov    rcx,QWORD PTR [rsp+0x130]
   14000b9bb:	mov    rbx,rax
   14000b9be:	mov    eax,DWORD PTR [rcx+0x10]
   14000b9c1:	test   eax,eax
   14000b9c3:	je     0x14000b9de
   14000b9c5:	cmp    eax,0xffffffff
   14000b9c8:	je     0x14000b9eb
   14000b9ca:	lock add DWORD PTR [rcx+0x10],0xffffffff
   14000b9cf:	setne  al
   14000b9d2:	test   al,al
   14000b9d4:	jne    0x14000b9eb
   14000b9d6:	mov    rcx,QWORD PTR [rsp+0x130]
   14000b9de:	lea    rdx,[rip+0xffffffffffff68fb]        # 0x1400022e0
   14000b9e5:	call   QWORD PTR [rip+0x14c7d]        # 0x140020668
   14000b9eb:	mov    QWORD PTR [rsp+0x130],rbx
   14000b9f3:	mov    rcx,rbx
   14000b9f6:	call   QWORD PTR [rip+0x149e4]        # 0x1400203e0
   14000b9fc:	lea    rcx,[rsp+0x30]
   14000ba01:	lea    rdx,[rax+0x10]
   14000ba05:	call   QWORD PTR [rip+0x14d8d]        # 0x140020798
   14000ba0b:	mov    rbx,QWORD PTR [rsp+0x130]
   14000ba13:	mov    eax,DWORD PTR [rbx+0x10]
   14000ba16:	cmp    eax,0x1
   14000ba19:	je     0x14000ba84
   14000ba1b:	test   eax,eax
   14000ba1d:	je     0x14000ba84
   14000ba1f:	lea    r8,[rip+0xffffffffffff68ba]        # 0x1400022e0
   14000ba26:	lea    rdx,[rip+0xffffffffffff63c3]        # 0x140001df0
   14000ba2d:	mov    r9d,0x18
   14000ba33:	mov    rcx,rbx
   14000ba36:	mov    DWORD PTR [rsp+0x20],0x8
   14000ba3e:	call   QWORD PTR [rip+0x14bec]        # 0x140020630
   14000ba44:	mov    rcx,QWORD PTR [rsp+0x130]
   14000ba4c:	mov    rbx,rax
   14000ba4f:	mov    eax,DWORD PTR [rcx+0x10]
   14000ba52:	test   eax,eax
   14000ba54:	je     0x14000ba6f
   14000ba56:	cmp    eax,0xffffffff
   14000ba59:	je     0x14000ba7c
   14000ba5b:	lock add DWORD PTR [rcx+0x10],0xffffffff
   14000ba60:	setne  al
   14000ba63:	test   al,al
   14000ba65:	jne    0x14000ba7c
   14000ba67:	mov    rcx,QWORD PTR [rsp+0x130]
   14000ba6f:	lea    rdx,[rip+0xffffffffffff686a]        # 0x1400022e0
   14000ba76:	call   QWORD PTR [rip+0x14bec]        # 0x140020668
   14000ba7c:	mov    QWORD PTR [rsp+0x130],rbx
   14000ba84:	mov    rcx,rbx
   14000ba87:	call   QWORD PTR [rip+0x14953]        # 0x1400203e0
   14000ba8d:	lea    rdx,[rsp+0xc0]
   14000ba95:	lea    rcx,[rsp+0x130]
   14000ba9d:	mov    r8,rax
   14000baa0:	mov    QWORD PTR [rsp+0xc8],rax
   14000baa8:	call   0x140003ea0
   14000baad:	mov    rbx,QWORD PTR [rsp+0x138]
   14000bab5:	mov    eax,DWORD PTR [rbx+0x10]
   14000bab8:	cmp    eax,0x1
   14000babb:	je     0x14000bb1e
   14000babd:	test   eax,eax
   14000babf:	je     0x14000bb1e
   14000bac1:	lea    r8,[rip+0xffffffffffff6818]        # 0x1400022e0
   14000bac8:	lea    rdx,[rip+0xffffffffffff6321]        # 0x140001df0
   14000bacf:	mov    r9d,0x18
   14000bad5:	mov    rcx,rbx
   14000bad8:	mov    DWORD PTR [rsp+0x20],0x8
   14000bae0:	call   QWORD PTR [rip+0x14b4a]        # 0x140020630
   14000bae6:	mov    ecx,DWORD PTR [rbx+0x10]
   14000bae9:	mov    rdi,rax
   14000baec:	test   ecx,ecx
   14000baee:	je     0x14000bb01
   14000baf0:	cmp    ecx,0xffffffff
   14000baf3:	je     0x14000bb16
   14000baf5:	lock add DWORD PTR [rbx+0x10],0xffffffff
   14000bafa:	setne  cl
   14000bafd:	test   cl,cl
   14000baff:	jne    0x14000bb16
   14000bb01:	mov    rcx,QWORD PTR [rsp+0x138]
   14000bb09:	lea    rdx,[rip+0xffffffffffff67d0]        # 0x1400022e0
   14000bb10:	call   QWORD PTR [rip+0x14b52]        # 0x140020668
   14000bb16:	mov    QWORD PTR [rsp+0x138],rdi
   14000bb1e:	mov    rbx,QWORD PTR [rsp+0x138]
   14000bb26:	lea    rcx,[rsp+0x30]
   14000bb2b:	mov    edx,DWORD PTR [rbx+0x24]
   14000bb2e:	lea    rbp,[rbx+0x24]
   14000bb32:	call   QWORD PTR [rip+0x14b58]        # 0x140020690
   14000bb38:	mov    ecx,DWORD PTR [rbx+0x20]
   14000bb3b:	lea    r12,[rbx+0x20]
   14000bb3f:	mov    esi,eax
   14000bb41:	mov    DWORD PTR [rsp+0x120],eax
   14000bb48:	test   ecx,ecx
   14000bb4a:	je     0x14000bb8b
   14000bb4c:	xor    edx,edx
   14000bb4e:	div    ecx
   14000bb50:	mov    rcx,QWORD PTR [rbx+0x8]
   14000bb54:	lea    rdi,[rcx+rdx*8]
   14000bb58:	mov    rcx,QWORD PTR [rcx+rdx*8]
   14000bb5c:	cmp    rcx,rbx
   14000bb5f:	je     0x14000bb93
   14000bb61:	cmp    esi,DWORD PTR [rcx+0x8]
   14000bb64:	jne    0x14000bb79
   14000bb66:	lea    rdx,[rcx+0x10]
   14000bb6a:	lea    rcx,[rsp+0x30]
   14000bb6f:	call   QWORD PTR [rip+0x14b7b]        # 0x1400206f0
   14000bb75:	test   al,al
   14000bb77:	jne    0x14000bb93
   14000bb79:	mov    rdi,QWORD PTR [rdi]
   14000bb7c:	mov    rcx,QWORD PTR [rdi]
   14000bb7f:	cmp    rcx,QWORD PTR [rsp+0x138]
   14000bb87:	jne    0x14000bb61
   14000bb89:	jmp    0x14000bb93
   14000bb8b:	lea    rdi,[rsp+0x138]
   14000bb93:	mov    rbx,QWORD PTR [rsp+0x138]
   14000bb9b:	cmp    QWORD PTR [rdi],rbx
   14000bb9e:	jne    0x14000bc5c
   14000bba4:	mov    rcx,rbx
   14000bba7:	call   QWORD PTR [rip+0x147fb]        # 0x1400203a8
   14000bbad:	test   al,al
   14000bbaf:	je     0x14000bc17
   14000bbb1:	mov    edx,DWORD PTR [rbp+0x0]
   14000bbb4:	lea    rcx,[rsp+0x30]
   14000bbb9:	call   QWORD PTR [rip+0x14ad1]        # 0x140020690
   14000bbbf:	mov    ecx,DWORD PTR [r12]
   14000bbc3:	mov    esi,eax
   14000bbc5:	mov    DWORD PTR [rsp+0x120],eax
   14000bbcc:	test   ecx,ecx
   14000bbce:	je     0x14000bc0f
   14000bbd0:	xor    edx,edx
   14000bbd2:	div    ecx
   14000bbd4:	mov    rax,QWORD PTR [rbx+0x8]
   14000bbd8:	lea    rdi,[rax+rdx*8]
   14000bbdc:	mov    rax,QWORD PTR [rax+rdx*8]
   14000bbe0:	cmp    rax,rbx
   14000bbe3:	je     0x14000bc17
   14000bbe5:	cmp    esi,DWORD PTR [rax+0x8]
   14000bbe8:	jne    0x14000bbfd
   14000bbea:	lea    rdx,[rax+0x10]
   14000bbee:	lea    rcx,[rsp+0x30]
   14000bbf3:	call   QWORD PTR [rip+0x14af7]        # 0x1400206f0
   14000bbf9:	test   al,al
   14000bbfb:	jne    0x14000bc17
   14000bbfd:	mov    rdi,QWORD PTR [rdi]
   14000bc00:	mov    rax,QWORD PTR [rdi]
   14000bc03:	cmp    rax,QWORD PTR [rsp+0x138]
   14000bc0b:	jne    0x14000bbe5
   14000bc0d:	jmp    0x14000bc17
   14000bc0f:	lea    rdi,[rsp+0x138]
   14000bc17:	mov    rcx,QWORD PTR [rsp+0x138]
   14000bc1f:	mov    edx,0x8
   14000bc24:	call   QWORD PTR [rip+0x14a96]        # 0x1400206c0
   14000bc2a:	mov    rbx,rax
   14000bc2d:	test   rax,rax
   14000bc30:	je     0x14000bc4c
   14000bc32:	mov    rcx,QWORD PTR [rdi]
   14000bc35:	lea    rdx,[rsp+0x30]
   14000bc3a:	mov    DWORD PTR [rax+0x8],esi
   14000bc3d:	mov    QWORD PTR [rax],rcx
   14000bc40:	lea    rcx,[rax+0x10]
   14000bc44:	call   QWORD PTR [rip+0x14b4e]        # 0x140020798
   14000bc4a:	jmp    0x14000bc4e
   14000bc4c:	xor    ebx,ebx
   14000bc4e:	mov    QWORD PTR [rdi],rbx
   14000bc51:	mov    rax,QWORD PTR [rsp+0x138]
   14000bc59:	inc    DWORD PTR [rax+0x14]
   14000bc5c:	lea    rdx,[rsp+0x30]
   14000bc61:	lea    rcx,[rsp+0x40]
   14000bc66:	call   0x14000a3a0
   14000bc6b:	lea    r8,[rsp+0x40]
   14000bc70:	lea    rcx,[rsp+0xb0]
   14000bc78:	mov    rdx,r15
   14000bc7b:	call   0x140003c00
   14000bc80:	mov    rcx,r15
   14000bc83:	mov    rdx,rax
   14000bc86:	call   0x140002460
   14000bc8b:	mov    rsi,QWORD PTR [rsp+0xb0]
   14000bc93:	mov    eax,DWORD PTR [rsi]
   14000bc95:	test   eax,eax
   14000bc97:	je     0x14000bcb1
   14000bc99:	cmp    eax,0xffffffff
   14000bc9c:	je     0x14000bcfc
   14000bc9e:	lock add DWORD PTR [rsi],0xffffffff
   14000bca2:	setne  al
   14000bca5:	test   al,al
   14000bca7:	jne    0x14000bcfc
   14000bca9:	mov    rsi,QWORD PTR [rsp+0xb0]
   14000bcb1:	movsxd rax,DWORD PTR [rsi+0xc]
   14000bcb5:	lea    rbx,[rsi+rax*8+0x10]
   14000bcba:	movsxd rax,DWORD PTR [rsi+0x8]
   14000bcbe:	lea    rbp,[rsi+rax*8+0x10]
   14000bcc3:	cmp    rbp,rbx
   14000bcc6:	je     0x14000bcf3
   14000bcc8:	nop    DWORD PTR [rax+rax*1+0x0]
   14000bcd0:	mov    rdi,QWORD PTR [rbx-0x8]
   14000bcd4:	sub    rbx,0x8
   14000bcd8:	test   rdi,rdi
   14000bcdb:	je     0x14000bcee
   14000bcdd:	mov    rcx,rdi
   14000bce0:	call   QWORD PTR [rip+0x14a62]        # 0x140020748
   14000bce6:	mov    rcx,rdi
   14000bce9:	call   0x14001ee46
   14000bcee:	cmp    rbx,rbp
   14000bcf1:	jne    0x14000bcd0
   14000bcf3:	mov    rcx,rsi
   14000bcf6:	call   QWORD PTR [rip+0x149d4]        # 0x1400206d0
   14000bcfc:	mov    rax,QWORD PTR [r15]
   14000bcff:	mov    QWORD PTR [rsp+0x48],rax
   14000bd04:	mov    ecx,DWORD PTR [rax]
   14000bd06:	test   ecx,ecx
   14000bd08:	je     0x14000bd15
   14000bd0a:	cmp    ecx,0xffffffff
   14000bd0d:	je     0x14000bd7f
   14000bd0f:	lock add DWORD PTR [rax],0x1
   14000bd13:	jmp    0x14000bd7f
   14000bd15:	mov    edx,DWORD PTR [rax+0x4]
   14000bd18:	lea    rcx,[rsp+0x48]
   14000bd1d:	call   QWORD PTR [rip+0x14955]        # 0x140020678
   14000bd23:	mov    r11,QWORD PTR [r15]
   14000bd26:	movsxd rax,DWORD PTR [r11+0x8]
   14000bd2a:	lea    rdi,[r11+rax*8+0x10]
   14000bd2f:	mov    rax,QWORD PTR [rsp+0x48]
   14000bd34:	movsxd rcx,DWORD PTR [rax+0xc]
   14000bd38:	lea    rsi,[rax+rcx*8+0x10]
   14000bd3d:	movsxd rcx,DWORD PTR [rax+0x8]
   14000bd41:	lea    rbx,[rax+rcx*8+0x10]
   14000bd46:	cmp    rbx,rsi
   14000bd49:	je     0x14000bd7f
   14000bd4b:	nop    DWORD PTR [rax+rax*1+0x0]
   14000bd50:	mov    ecx,0x10
   14000bd55:	call   0x14001ee64
   14000bd5a:	test   rax,rax
   14000bd5d:	je     0x14000bd6d
   14000bd5f:	mov    rdx,QWORD PTR [rdi]
   14000bd62:	mov    rcx,rax
   14000bd65:	call   QWORD PTR [rip+0x149cd]        # 0x140020738
   14000bd6b:	jmp    0x14000bd6f
   14000bd6d:	xor    eax,eax
   14000bd6f:	mov    QWORD PTR [rbx],rax
   14000bd72:	add    rbx,0x8
   14000bd76:	add    rdi,0x8
   14000bd7a:	cmp    rbx,rsi
   14000bd7d:	jne    0x14000bd50
   14000bd7f:	lea    rdx,[rsp+0x48]
   14000bd84:	lea    rcx,[rsp+0x38]
   14000bd89:	call   0x14000af00
   14000bd8e:	lea    rdx,[rsp+0x138]
   14000bd96:	lea    rcx,[rsp+0x38]
   14000bd9b:	call   0x140007e10
   14000bda0:	mov    rdi,QWORD PTR [rsp+0x38]
   14000bda5:	mov    eax,DWORD PTR [rdi+0x10]
   14000bda8:	test   eax,eax
   14000bdaa:	je     0x14000bdb6
   14000bdac:	cmp    eax,0xffffffff
   14000bdaf:	je     0x14000bdb6
   14000bdb1:	lock add DWORD PTR [rdi+0x10],0x1
   14000bdb6:	test   BYTE PTR [rdi+0x28],0x1
   14000bdba:	jne    0x14000be1b
   14000bdbc:	mov    eax,DWORD PTR [rdi+0x10]
   14000bdbf:	cmp    eax,0x1
   14000bdc2:	je     0x14000be1b
   14000bdc4:	test   eax,eax
   14000bdc6:	je     0x14000be1b
   14000bdc8:	lea    r8,[rip+0xffffffffffff6511]        # 0x1400022e0
   14000bdcf:	lea    rdx,[rip+0xffffffffffff601a]        # 0x140001df0
   14000bdd6:	mov    r9d,0x18
   14000bddc:	mov    rcx,rdi
   14000bddf:	mov    DWORD PTR [rsp+0x20],0x8
   14000bde7:	call   QWORD PTR [rip+0x14843]        # 0x140020630
   14000bded:	mov    ecx,DWORD PTR [rdi+0x10]
   14000bdf0:	mov    rbx,rax
   14000bdf3:	test   ecx,ecx
   14000bdf5:	je     0x14000be08
   14000bdf7:	cmp    ecx,0xffffffff
   14000bdfa:	je     0x14000be18
   14000bdfc:	lock add DWORD PTR [rdi+0x10],0xffffffff
   14000be01:	setne  cl
   14000be04:	test   cl,cl
   14000be06:	jne    0x14000be18
   14000be08:	lea    rdx,[rip+0xffffffffffff64d1]        # 0x1400022e0
   14000be0f:	mov    rcx,rdi
   14000be12:	call   QWORD PTR [rip+0x14850]        # 0x140020668
   14000be18:	mov    rdi,rbx
   14000be1b:	mov    rcx,rdi
   14000be1e:	mov    rsi,rdi
   14000be21:	call   QWORD PTR [rip+0x145b9]        # 0x1400203e0
   14000be27:	cmp    rdi,rax
   14000be2a:	je     0x14000c012
   14000be30:	mov    rcx,rsi
   14000be33:	call   QWORD PTR [rip+0x148e7]        # 0x140020720
   14000be39:	mov    rbx,QWORD PTR [rsp+0x130]
   14000be41:	mov    rsi,rax
   14000be44:	mov    eax,DWORD PTR [rbx+0x10]
   14000be47:	cmp    eax,0x1
   14000be4a:	je     0x14000beb5
   14000be4c:	test   eax,eax
   14000be4e:	je     0x14000beb5
   14000be50:	lea    r8,[rip+0xffffffffffff6489]        # 0x1400022e0
   14000be57:	lea    rdx,[rip+0xffffffffffff5f92]        # 0x140001df0
   14000be5e:	mov    r9d,0x18
   14000be64:	mov    rcx,rbx
   14000be67:	mov    DWORD PTR [rsp+0x20],0x8
   14000be6f:	call   QWORD PTR [rip+0x147bb]        # 0x140020630
   14000be75:	mov    rcx,QWORD PTR [rsp+0x130]
   14000be7d:	mov    rbx,rax
   14000be80:	mov    eax,DWORD PTR [rcx+0x10]
   14000be83:	test   eax,eax
   14000be85:	je     0x14000bea0
   14000be87:	cmp    eax,0xffffffff
   14000be8a:	je     0x14000bead
   14000be8c:	lock add DWORD PTR [rcx+0x10],0xffffffff
   14000be91:	setne  al
   14000be94:	test   al,al
   14000be96:	jne    0x14000bead
   14000be98:	mov    rcx,QWORD PTR [rsp+0x130]
   14000bea0:	lea    rdx,[rip+0xffffffffffff6439]        # 0x1400022e0
   14000bea7:	call   QWORD PTR [rip+0x147bb]        # 0x140020668
   14000bead:	mov    QWORD PTR [rsp+0x130],rbx
   14000beb5:	mov    edx,DWORD PTR [rbx+0x24]
   14000beb8:	lea    rcx,[rsi+0x10]
   14000bebc:	call   QWORD PTR [rip+0x147ce]        # 0x140020690
   14000bec2:	mov    rcx,QWORD PTR [rsp+0x130]
   14000beca:	mov    r8d,DWORD PTR [rcx+0x20]
   14000bece:	mov    r12d,eax
   14000bed1:	mov    DWORD PTR [rsp+0x128],eax
   14000bed8:	test   r8d,r8d
   14000bedb:	je     0x14000bf23
   14000bedd:	xor    edx,edx
   14000bedf:	div    r8d
   14000bee2:	mov    r8d,edx
   14000bee5:	mov    rdx,QWORD PTR [rcx+0x8]
   14000bee9:	lea    rbx,[rdx+r8*8]
   14000beed:	mov    rdx,QWORD PTR [rdx+r8*8]
   14000bef1:	cmp    rdx,rcx
   14000bef4:	je     0x14000bf2b
   14000bef6:	cmp    r12d,DWORD PTR [rdx+0x8]
   14000befa:	jne    0x14000bf16
   14000befc:	lea    rcx,[rsi+0x10]
   14000bf00:	add    rdx,0x10
   14000bf04:	call   QWORD PTR [rip+0x147e6]        # 0x1400206f0
   14000bf0a:	mov    rcx,QWORD PTR [rsp+0x130]
   14000bf12:	test   al,al
   14000bf14:	jne    0x14000bf2b
   14000bf16:	mov    rbx,QWORD PTR [rbx]
   14000bf19:	mov    rdx,QWORD PTR [rbx]
   14000bf1c:	cmp    rdx,rcx
   14000bf1f:	jne    0x14000bef6
   14000bf21:	jmp    0x14000bf2b
   14000bf23:	lea    rbx,[rsp+0x130]
   14000bf2b:	cmp    QWORD PTR [rbx],rcx
   14000bf2e:	jne    0x14000c000
   14000bf34:	call   QWORD PTR [rip+0x1446e]        # 0x1400203a8
   14000bf3a:	test   al,al
   14000bf3c:	je     0x14000bfbb
   14000bf3e:	mov    rax,QWORD PTR [rsp+0x130]
   14000bf46:	lea    rcx,[rsi+0x10]
   14000bf4a:	mov    edx,DWORD PTR [rax+0x24]
   14000bf4d:	call   QWORD PTR [rip+0x1473d]        # 0x140020690
   14000bf53:	mov    rcx,QWORD PTR [rsp+0x130]
   14000bf5b:	mov    r8d,DWORD PTR [rcx+0x20]
   14000bf5f:	mov    r12d,eax
   14000bf62:	mov    DWORD PTR [rsp+0x128],eax
   14000bf69:	test   r8d,r8d
   14000bf6c:	je     0x14000bfb1
   14000bf6e:	xor    edx,edx
   14000bf70:	div    r8d
   14000bf73:	mov    rax,QWORD PTR [rcx+0x8]
   14000bf77:	lea    rbx,[rax+rdx*8]
   14000bf7b:	mov    rax,QWORD PTR [rax+rdx*8]
   14000bf7f:	cmp    rax,rcx
   14000bf82:	je     0x14000bfc3
   14000bf84:	cmp    r12d,DWORD PTR [rax+0x8]
   14000bf88:	jne    0x14000bfa4
   14000bf8a:	lea    rdx,[rax+0x10]
   14000bf8e:	lea    rcx,[rsi+0x10]
   14000bf92:	call   QWORD PTR [rip+0x14758]        # 0x1400206f0
   14000bf98:	mov    rcx,QWORD PTR [rsp+0x130]
   14000bfa0:	test   al,al
   14000bfa2:	jne    0x14000bfc3
   14000bfa4:	mov    rbx,QWORD PTR [rbx]
   14000bfa7:	mov    rax,QWORD PTR [rbx]
   14000bfaa:	cmp    rax,rcx
   14000bfad:	jne    0x14000bf84
   14000bfaf:	jmp    0x14000bfc3
   14000bfb1:	lea    rbx,[rsp+0x130]
   14000bfb9:	jmp    0x14000bfc3
   14000bfbb:	mov    rcx,QWORD PTR [rsp+0x130]
   14000bfc3:	mov    edx,0x8
   14000bfc8:	call   QWORD PTR [rip+0x146f2]        # 0x1400206c0
   14000bfce:	mov    rbp,rax
   14000bfd1:	test   rax,rax
   14000bfd4:	je     0x14000bff0
   14000bfd6:	mov    rcx,QWORD PTR [rbx]
   14000bfd9:	lea    rdx,[rsi+0x10]
   14000bfdd:	mov    DWORD PTR [rax+0x8],r12d
   14000bfe1:	mov    QWORD PTR [rax],rcx
   14000bfe4:	lea    rcx,[rax+0x10]
   14000bfe8:	call   QWORD PTR [rip+0x147aa]        # 0x140020798
   14000bfee:	jmp    0x14000bff2
   14000bff0:	xor    ebp,ebp
   14000bff2:	mov    QWORD PTR [rbx],rbp
   14000bff5:	mov    rax,QWORD PTR [rsp+0x130]
   14000bffd:	inc    DWORD PTR [rax+0x14]
   14000c000:	mov    rcx,rdi
   14000c003:	call   QWORD PTR [rip+0x143d7]        # 0x1400203e0
   14000c009:	cmp    rsi,rax
   14000c00c:	jne    0x14000be30
   14000c012:	mov    eax,DWORD PTR [rdi+0x10]
   14000c015:	test   eax,eax
   14000c017:	je     0x14000c02a
   14000c019:	cmp    eax,0xffffffff
   14000c01c:	je     0x14000c03a
   14000c01e:	lock add DWORD PTR [rdi+0x10],0xffffffff
   14000c023:	setne  al
   14000c026:	test   al,al
   14000c028:	jne    0x14000c03a
   14000c02a:	lea    rdx,[rip+0xffffffffffff62af]        # 0x1400022e0
   14000c031:	mov    rcx,rdi
   14000c034:	call   QWORD PTR [rip+0x1462e]        # 0x140020668
   14000c03a:	mov    rcx,QWORD PTR [rsp+0x38]
   14000c03f:	mov    eax,DWORD PTR [rcx+0x10]
   14000c042:	test   eax,eax
   14000c044:	je     0x14000c05c
   14000c046:	cmp    eax,0xffffffff
   14000c049:	je     0x14000c069
   14000c04b:	lock add DWORD PTR [rcx+0x10],0xffffffff
   14000c050:	setne  al
   14000c053:	test   al,al
   14000c055:	jne    0x14000c069
   14000c057:	mov    rcx,QWORD PTR [rsp+0x38]
   14000c05c:	lea    rdx,[rip+0xffffffffffff627d]        # 0x1400022e0
   14000c063:	call   QWORD PTR [rip+0x145ff]        # 0x140020668
   14000c069:	mov    rsi,QWORD PTR [rsp+0x40]
   14000c06e:	mov    eax,DWORD PTR [rsi]
   14000c070:	test   eax,eax
   14000c072:	je     0x14000c089
   14000c074:	cmp    eax,0xffffffff
   14000c077:	je     0x14000c0cc
   14000c079:	lock add DWORD PTR [rsi],0xffffffff
   14000c07d:	setne  al
   14000c080:	test   al,al
   14000c082:	jne    0x14000c0cc
   14000c084:	mov    rsi,QWORD PTR [rsp+0x40]
   14000c089:	movsxd rax,DWORD PTR [rsi+0xc]
   14000c08d:	lea    rbx,[rsi+rax*8+0x10]
   14000c092:	movsxd rax,DWORD PTR [rsi+0x8]
   14000c096:	lea    rbp,[rsi+rax*8+0x10]
   14000c09b:	cmp    rbp,rbx
   14000c09e:	je     0x14000c0c3
   14000c0a0:	mov    rdi,QWORD PTR [rbx-0x8]
   14000c0a4:	sub    rbx,0x8
   14000c0a8:	test   rdi,rdi
   14000c0ab:	je     0x14000c0be
   14000c0ad:	mov    rcx,rdi
   14000c0b0:	call   QWORD PTR [rip+0x14692]        # 0x140020748
   14000c0b6:	mov    rcx,rdi
   14000c0b9:	call   0x14001ee46
   14000c0be:	cmp    rbx,rbp
   14000c0c1:	jne    0x14000c0a0
   14000c0c3:	mov    rcx,rsi
   14000c0c6:	call   QWORD PTR [rip+0x14604]        # 0x1400206d0
   14000c0cc:	lea    rcx,[rsp+0x30]
   14000c0d1:	call   QWORD PTR [rip+0x146a9]        # 0x140020780
   14000c0d7:	mov    rbx,QWORD PTR [rsp+0x130]
   14000c0df:	cmp    DWORD PTR [rbx+0x14],0x0
   14000c0e3:	jne    0x14000b982
   14000c0e9:	mov    rcx,QWORD PTR [rsp+0x138]
   14000c0f1:	mov    eax,DWORD PTR [rcx+0x10]
   14000c0f4:	test   eax,eax
   14000c0f6:	je     0x14000c109
   14000c0f8:	cmp    eax,0xffffffff
   14000c0fb:	je     0x14000c126
   14000c0fd:	lock add DWORD PTR [rcx+0x10],0xffffffff
   14000c102:	setne  al
   14000c105:	test   al,al
   14000c107:	jne    0x14000c11e
   14000c109:	mov    rcx,QWORD PTR [rsp+0x138]
   14000c111:	lea    rdx,[rip+0xffffffffffff61c8]        # 0x1400022e0
   14000c118:	call   QWORD PTR [rip+0x1454a]        # 0x140020668
   14000c11e:	mov    rbx,QWORD PTR [rsp+0x130]
   14000c126:	mov    eax,DWORD PTR [rbx+0x10]
   14000c129:	test   eax,eax
   14000c12b:	je     0x14000c146
   14000c12d:	cmp    eax,0xffffffff
   14000c130:	je     0x14000c156
   14000c132:	lock add DWORD PTR [rbx+0x10],0xffffffff
   14000c137:	setne  al
   14000c13a:	test   al,al
   14000c13c:	jne    0x14000c156
   14000c13e:	mov    rbx,QWORD PTR [rsp+0x130]
   14000c146:	lea    rdx,[rip+0xffffffffffff6193]        # 0x1400022e0
   14000c14d:	mov    rcx,rbx
   14000c150:	call   QWORD PTR [rip+0x14512]        # 0x140020668
   14000c156:	mov    rax,r15
   14000c159:	add    rsp,0xd8
   14000c160:	pop    r15
   14000c162:	pop    r14
   14000c164:	pop    r13
   14000c166:	pop    r12
   14000c168:	pop    rdi
   14000c169:	pop    rsi
   14000c16a:	pop    rbp
   14000c16b:	pop    rbx
   14000c16c:	ret    
   14000c16d:	int3   
   14000c16e:	int3   
   14000c16f:	int3   
   14000c170:	mov    DWORD PTR [rsp+0x8],ecx
   14000c174:	push   rbx
   14000c175:	push   rsi
   14000c176:	push   rdi
   14000c177:	push   r12
   14000c179:	sub    rsp,0x168
   14000c180:	mov    r8,rdx
   14000c183:	lea    rcx,[rsp+0xb8]
   14000c18b:	lea    rdx,[rsp+0x190]
   14000c193:	mov    r9d,0x50602
   14000c199:	call   QWORD PTR [rip+0x14279]        # 0x140020418
   14000c19f:	lea    rcx,[rsp+0x20]
   14000c1a4:	call   QWORD PTR [rip+0x14266]        # 0x140020410
   14000c1aa:	lea    rcx,[rsp+0xd0]
   14000c1b2:	call   QWORD PTR [rip+0x14250]        # 0x140020408
   14000c1b8:	lea    rcx,[rsp+0xd8]
   14000c1c0:	mov    rdx,rax
   14000c1c3:	call   QWORD PTR [rip+0x14237]        # 0x140020400
   14000c1c9:	lea    rdx,[rsp+0x48]
   14000c1ce:	mov    rcx,rax
   14000c1d1:	call   QWORD PTR [rip+0x14221]        # 0x1400203f8
   14000c1d7:	lea    rcx,[rsp+0xd8]
   14000c1df:	call   QWORD PTR [rip+0x14523]        # 0x140020708
   14000c1e5:	lea    rcx,[rsp+0xd0]
   14000c1ed:	call   QWORD PTR [rip+0x1458d]        # 0x140020780
   14000c1f3:	mov    rdx,QWORD PTR [rsp+0x20]
   14000c1f8:	mov    eax,DWORD PTR [rdx+0xc]
   14000c1fb:	sub    eax,DWORD PTR [rdx+0x8]
   14000c1fe:	cmp    eax,0x2
   14000c201:	jge    0x14000c29b
   14000c207:	lea    rcx,[rsp+0x48]
   14000c20c:	call   0x140001eb0
   14000c211:	lea    rcx,[rsp+0x48]
   14000c216:	call   QWORD PTR [rip+0x14564]        # 0x140020780
   14000c21c:	mov    rbx,QWORD PTR [rsp+0x20]
   14000c221:	mov    eax,DWORD PTR [rbx]
   14000c223:	test   eax,eax
   14000c225:	je     0x14000c245
   14000c227:	cmp    eax,0xffffffff
   14000c22a:	je     0x14000c27b
   14000c22c:	or     r12,0xffffffffffffffff
   14000c230:	lock xadd DWORD PTR [rbx],r12d
   14000c235:	add    r12d,0xffffffff
   14000c239:	setne  al
   14000c23c:	test   al,al
   14000c23e:	jne    0x14000c27b
   14000c240:	mov    rbx,QWORD PTR [rsp+0x20]
   14000c245:	movsxd rax,DWORD PTR [rbx+0xc]
   14000c249:	lea    rdi,[rbx+rax*8+0x10]
   14000c24e:	movsxd rax,DWORD PTR [rbx+0x8]
   14000c252:	lea    rsi,[rbx+rax*8+0x10]
   14000c257:	cmp    rsi,rdi
   14000c25a:	je     0x14000c272
   14000c25c:	nop    DWORD PTR [rax+0x0]
   14000c260:	sub    rdi,0x8
   14000c264:	mov    rcx,rdi
   14000c267:	call   QWORD PTR [rip+0x14513]        # 0x140020780
   14000c26d:	cmp    rdi,rsi
   14000c270:	jne    0x14000c260
   14000c272:	mov    rcx,rbx
   14000c275:	call   QWORD PTR [rip+0x14455]        # 0x1400206d0
   14000c27b:	lea    rcx,[rsp+0xb8]
   14000c283:	call   QWORD PTR [rip+0x14167]        # 0x1400203f0
   14000c289:	mov    eax,0x1
   14000c28e:	add    rsp,0x168
   14000c295:	pop    r12
   14000c297:	pop    rdi
   14000c298:	pop    rsi
   14000c299:	pop    rbx
   14000c29a:	ret    
   14000c29b:	mov    r8,QWORD PTR [rip+0x144be]        # 0x140020760
   14000c2a2:	mov    QWORD PTR [rsp+0x198],rbp
   14000c2aa:	mov    QWORD PTR [rsp+0x160],r13
   14000c2b2:	mov    QWORD PTR [rsp+0x28],r8
   14000c2b7:	mov    QWORD PTR [rsp+0x38],r8
   14000c2bc:	mov    QWORD PTR [rsp+0x30],r8
   14000c2c1:	mov    ecx,DWORD PTR [rdx+0x8]
   14000c2c4:	mov    eax,DWORD PTR [rdx+0xc]
   14000c2c7:	mov    ebx,0x1
   14000c2cc:	sub    eax,ecx
   14000c2ce:	or     r12,0xffffffffffffffff
   14000c2d2:	mov    QWORD PTR [rsp+0x158],r14
   14000c2da:	cmp    eax,ebx
   14000c2dc:	mov    QWORD PTR [rsp+0x150],r15
   14000c2e4:	jle    0x14000c704
   14000c2ea:	lea    r13,[rip+0x1483f]        # 0x140020b30
   14000c2f1:	lea    r14,[rip+0x14988]        # 0x140020c80
   14000c2f8:	lea    r15,[rip+0x14971]        # 0x140020c70
   14000c2ff:	nop
   14000c300:	movsxd rcx,ecx
   14000c303:	movsxd rax,ebx
   14000c306:	xor    esi,esi
   14000c308:	add    rcx,rax
   14000c30b:	inc    ebx
   14000c30d:	lea    rbp,[rdx+rcx*8+0x10]
   14000c312:	lea    rcx,[rsp+0x1a0]
   14000c31a:	mov    dl,0x2d
   14000c31c:	call   QWORD PTR [rip+0x1446e]        # 0x140020790
   14000c322:	lea    r8d,[rsi+0x1]
   14000c326:	mov    rcx,rbp
   14000c329:	movzx  edx,WORD PTR [rax]
   14000c32c:	call   QWORD PTR [rip+0x140b6]        # 0x1400203e8
   14000c332:	test   al,al
   14000c334:	je     0x14000c561
   14000c33a:	xor    eax,eax
   14000c33c:	mov    rcx,r12
   14000c33f:	mov    rdi,r13
   14000c342:	repnz scas al,BYTE PTR es:[rdi]
   14000c344:	mov    QWORD PTR [rsp+0xa8],r13
   14000c34c:	lea    rdx,[rsp+0xf0]
   14000c354:	not    rcx
   14000c357:	dec    rcx
   14000c35a:	mov    DWORD PTR [rsp+0xa0],ecx
   14000c361:	mov    rcx,rbp
   14000c364:	movaps xmm0,XMMWORD PTR [rsp+0xa0]
   14000c36c:	movdqa XMMWORD PTR [rsp+0xf0],xmm0
   14000c375:	call   QWORD PTR [rip+0x143fd]        # 0x140020778
   14000c37b:	test   al,al
   14000c37d:	jne    0x14000c561
   14000c383:	xor    eax,eax
   14000c385:	mov    rcx,r12
   14000c388:	mov    rdi,r14
   14000c38b:	repnz scas al,BYTE PTR es:[rdi]
   14000c38d:	mov    QWORD PTR [rsp+0x88],r14
   14000c395:	lea    rdx,[rsp+0x110]
   14000c39d:	not    rcx
   14000c3a0:	dec    rcx
   14000c3a3:	mov    DWORD PTR [rsp+0x80],ecx
   14000c3aa:	mov    rcx,rbp
   14000c3ad:	movaps xmm0,XMMWORD PTR [rsp+0x80]
   14000c3b5:	movdqa XMMWORD PTR [rsp+0x110],xmm0
   14000c3be:	call   QWORD PTR [rip+0x143b4]        # 0x140020778
   14000c3c4:	test   al,al
   14000c3c6:	je     0x14000c3f9
   14000c3c8:	mov    rdx,QWORD PTR [rsp+0x20]
   14000c3cd:	mov    eax,DWORD PTR [rdx+0xc]
   14000c3d0:	sub    eax,DWORD PTR [rdx+0x8]
   14000c3d3:	cmp    ebx,eax
   14000c3d5:	jl     0x14000c3ef
   14000c3d7:	mov    rcx,QWORD PTR [rip+0x13d7a]        # 0x140020158
   14000c3de:	lea    rdx,[rip+0x1486b]        # 0x140020c50
   14000c3e5:	call   0x140001800
   14000c3ea:	mov    rdx,QWORD PTR [rsp+0x20]
   14000c3ef:	lea    rsi,[rsp+0x28]
   14000c3f4:	jmp    0x14000c5d1
   14000c3f9:	xor    eax,eax
   14000c3fb:	mov    rcx,r12
   14000c3fe:	mov    rdi,r15
   14000c401:	repnz scas al,BYTE PTR es:[rdi]
   14000c403:	mov    QWORD PTR [rsp+0x98],r15
   14000c40b:	lea    rdx,[rsp+0x130]
   14000c413:	not    rcx
   14000c416:	dec    rcx
   14000c419:	mov    DWORD PTR [rsp+0x90],ecx
   14000c420:	mov    rcx,rbp
   14000c423:	movaps xmm0,XMMWORD PTR [rsp+0x90]
   14000c42b:	movdqa XMMWORD PTR [rsp+0x130],xmm0
   14000c434:	call   QWORD PTR [rip+0x1433e]        # 0x140020778
   14000c43a:	test   al,al
   14000c43c:	je     0x14000c46f
   14000c43e:	mov    rdx,QWORD PTR [rsp+0x20]
   14000c443:	mov    eax,DWORD PTR [rdx+0xc]
   14000c446:	sub    eax,DWORD PTR [rdx+0x8]
   14000c449:	cmp    ebx,eax
   14000c44b:	jl     0x14000c465
   14000c44d:	mov    rcx,QWORD PTR [rip+0x13d04]        # 0x140020158
   14000c454:	lea    rdx,[rip+0x147d5]        # 0x140020c30
   14000c45b:	call   0x140001800
   14000c460:	mov    rdx,QWORD PTR [rsp+0x20]
   14000c465:	lea    rsi,[rsp+0x38]
   14000c46a:	jmp    0x14000c5d1
   14000c46f:	lea    rdx,[rip+0x147aa]        # 0x140020c20
   14000c476:	xor    eax,eax
   14000c478:	mov    rcx,r12
   14000c47b:	mov    rdi,rdx
   14000c47e:	mov    QWORD PTR [rsp+0x58],rdx
   14000c483:	lea    rdx,[rsp+0x100]
   14000c48b:	repnz scas al,BYTE PTR es:[rdi]
   14000c48d:	not    rcx
   14000c490:	dec    rcx
   14000c493:	mov    DWORD PTR [rsp+0x50],ecx
   14000c497:	mov    rcx,rbp
   14000c49a:	movaps xmm0,XMMWORD PTR [rsp+0x50]
   14000c49f:	movdqa XMMWORD PTR [rsp+0x100],xmm0
   14000c4a8:	call   QWORD PTR [rip+0x142ca]        # 0x140020778
   14000c4ae:	test   al,al
   14000c4b0:	je     0x14000c4e3
   14000c4b2:	mov    rdx,QWORD PTR [rsp+0x20]
   14000c4b7:	mov    eax,DWORD PTR [rdx+0xc]
   14000c4ba:	sub    eax,DWORD PTR [rdx+0x8]
   14000c4bd:	cmp    ebx,eax
   14000c4bf:	jl     0x14000c4d9
   14000c4c1:	mov    rcx,QWORD PTR [rip+0x13c90]        # 0x140020158
   14000c4c8:	lea    rdx,[rip+0x14731]        # 0x140020c00
   14000c4cf:	call   0x140001800
   14000c4d4:	mov    rdx,QWORD PTR [rsp+0x20]
   14000c4d9:	lea    rsi,[rsp+0x38]
   14000c4de:	jmp    0x14000c5d1
   14000c4e3:	lea    rdx,[rip+0x14706]        # 0x140020bf0
   14000c4ea:	xor    eax,eax
   14000c4ec:	mov    rcx,r12
   14000c4ef:	mov    rdi,rdx
   14000c4f2:	mov    QWORD PTR [rsp+0xe8],rdx
   14000c4fa:	lea    rdx,[rsp+0x120]
   14000c502:	repnz scas al,BYTE PTR es:[rdi]
   14000c504:	not    rcx
   14000c507:	dec    rcx
   14000c50a:	mov    DWORD PTR [rsp+0xe0],ecx
   14000c511:	mov    rcx,rbp
   14000c514:	movaps xmm0,XMMWORD PTR [rsp+0xe0]
   14000c51c:	movdqa XMMWORD PTR [rsp+0x120],xmm0
   14000c525:	call   QWORD PTR [rip+0x1424d]        # 0x140020778
   14000c52b:	test   al,al
   14000c52d:	je     0x14000c739
   14000c533:	mov    rdx,QWORD PTR [rsp+0x20]
   14000c538:	mov    eax,DWORD PTR [rdx+0xc]
   14000c53b:	sub    eax,DWORD PTR [rdx+0x8]
   14000c53e:	cmp    ebx,eax
   14000c540:	jl     0x14000c55a
   14000c542:	mov    rcx,QWORD PTR [rip+0x13c0f]        # 0x140020158
   14000c549:	lea    rdx,[rip+0x14678]        # 0x140020bc8
   14000c550:	call   0x140001800
   14000c555:	mov    rdx,QWORD PTR [rsp+0x20]
   14000c55a:	lea    rsi,[rsp+0x30]
   14000c55f:	jmp    0x14000c5d1
   14000c561:	mov    rax,QWORD PTR [rsp+0x28]
   14000c566:	mov    ecx,DWORD PTR [rax]
   14000c568:	cmp    ecx,0x1
   14000c56b:	je     0x14000c5a5
   14000c56d:	test   ecx,ecx
   14000c56f:	je     0x14000c5a5
   14000c571:	lea    rcx,[rsp+0x28]
   14000c576:	mov    edx,0x7fffffff
   14000c57b:	mov    r8d,0x1
   14000c581:	call   0x1400026c0
   14000c586:	test   rax,rax
   14000c589:	je     0x14000c59e
   14000c58b:	mov    rdx,rbp
   14000c58e:	mov    rcx,rax
   14000c591:	call   QWORD PTR [rip+0x14201]        # 0x140020798
   14000c597:	mov    rdx,QWORD PTR [rsp+0x20]
   14000c59c:	jmp    0x14000c5d1
   14000c59e:	mov    rdx,QWORD PTR [rsp+0x20]
   14000c5a3:	jmp    0x14000c5d1
   14000c5a5:	lea    rcx,[rsp+0xc8]
   14000c5ad:	mov    rdx,rbp
   14000c5b0:	call   QWORD PTR [rip+0x141e2]        # 0x140020798
   14000c5b6:	lea    rcx,[rsp+0x28]
   14000c5bb:	call   QWORD PTR [rip+0x14077]        # 0x140020638
   14000c5c1:	mov    rcx,QWORD PTR [rsp+0xc8]
   14000c5c9:	mov    QWORD PTR [rax],rcx
   14000c5cc:	mov    rdx,QWORD PTR [rsp+0x20]
   14000c5d1:	mov    eax,DWORD PTR [rdx+0xc]
   14000c5d4:	sub    eax,DWORD PTR [rdx+0x8]
   14000c5d7:	cmp    ebx,eax
   14000c5d9:	jge    0x14000c6ef
   14000c5df:	nop
   14000c5e0:	movsxd rcx,DWORD PTR [rdx+0x8]
   14000c5e4:	movsxd rax,ebx
   14000c5e7:	add    rcx,rax
   14000c5ea:	lea    rdx,[rdx+rcx*8+0x10]
   14000c5ef:	lea    rcx,[rsp+0x40]
   14000c5f4:	call   QWORD PTR [rip+0x1419e]        # 0x140020798
   14000c5fa:	lea    rcx,[rsp+0x1a8]
   14000c602:	mov    dl,0x2d
   14000c604:	call   QWORD PTR [rip+0x14186]        # 0x140020790
   14000c60a:	lea    rcx,[rsp+0x40]
   14000c60f:	mov    r8d,0x1
   14000c615:	movzx  edx,WORD PTR [rax]
   14000c618:	call   QWORD PTR [rip+0x13dca]        # 0x1400203e8
   14000c61e:	test   al,al
   14000c620:	je     0x14000c660
   14000c622:	xor    eax,eax
   14000c624:	mov    rcx,r12
   14000c627:	mov    rdi,r13
   14000c62a:	repnz scas al,BYTE PTR es:[rdi]
   14000c62c:	mov    QWORD PTR [rsp+0x78],r13
   14000c631:	lea    rdx,[rsp+0x140]
   14000c639:	not    rcx
   14000c63c:	dec    rcx
   14000c63f:	mov    DWORD PTR [rsp+0x70],ecx
   14000c643:	lea    rcx,[rsp+0x40]
   14000c648:	movaps xmm0,XMMWORD PTR [rsp+0x70]
   14000c64d:	movdqa XMMWORD PTR [rsp+0x140],xmm0
   14000c656:	call   QWORD PTR [rip+0x1411c]        # 0x140020778
   14000c65c:	test   al,al
   14000c65e:	je     0x14000c6df
   14000c660:	mov    rax,QWORD PTR [rsi]
   14000c663:	inc    ebx
   14000c665:	mov    ecx,DWORD PTR [rax]
   14000c667:	cmp    ecx,0x1
   14000c66a:	je     0x14000c698
   14000c66c:	test   ecx,ecx
   14000c66e:	je     0x14000c698
   14000c670:	mov    edx,0x7fffffff
   14000c675:	mov    r8d,0x1
   14000c67b:	mov    rcx,rsi
   14000c67e:	call   0x1400026c0
   14000c683:	test   rax,rax
   14000c686:	je     0x14000c6bf
   14000c688:	lea    rdx,[rsp+0x40]
   14000c68d:	mov    rcx,rax
   14000c690:	call   QWORD PTR [rip+0x14102]        # 0x140020798
   14000c696:	jmp    0x14000c6bf
   14000c698:	lea    rdx,[rsp+0x40]
   14000c69d:	lea    rcx,[rsp+0xb0]
   14000c6a5:	call   QWORD PTR [rip+0x140ed]        # 0x140020798
   14000c6ab:	mov    rcx,rsi
   14000c6ae:	call   QWORD PTR [rip+0x13f84]        # 0x140020638
   14000c6b4:	mov    rcx,QWORD PTR [rsp+0xb0]
   14000c6bc:	mov    QWORD PTR [rax],rcx
   14000c6bf:	lea    rcx,[rsp+0x40]
   14000c6c4:	call   QWORD PTR [rip+0x140b6]        # 0x140020780
   14000c6ca:	mov    rdx,QWORD PTR [rsp+0x20]
   14000c6cf:	mov    eax,DWORD PTR [rdx+0xc]
   14000c6d2:	sub    eax,DWORD PTR [rdx+0x8]
   14000c6d5:	cmp    ebx,eax
   14000c6d7:	jl     0x14000c5e0
   14000c6dd:	jmp    0x14000c6ef
   14000c6df:	lea    rcx,[rsp+0x40]
   14000c6e4:	call   QWORD PTR [rip+0x14096]        # 0x140020780
   14000c6ea:	mov    rdx,QWORD PTR [rsp+0x20]
   14000c6ef:	mov    ecx,DWORD PTR [rdx+0x8]
   14000c6f2:	mov    eax,DWORD PTR [rdx+0xc]
   14000c6f5:	sub    eax,ecx
   14000c6f7:	cmp    ebx,eax
   14000c6f9:	jl     0x14000c300
   14000c6ff:	mov    r8,QWORD PTR [rsp+0x30]
   14000c704:	cmp    QWORD PTR [rip+0x25ec5],r8        # 0x1400325d0
   14000c70b:	je     0x14000ca0b
   14000c711:	mov    QWORD PTR [rsp+0x50],r8
   14000c716:	mov    eax,DWORD PTR [r8]
   14000c719:	test   eax,eax
   14000c71b:	je     0x14000c945
   14000c721:	cmp    eax,0xffffffff
   14000c724:	je     0x14000c9a3
   14000c72a:	lock add DWORD PTR [r8],0x1
   14000c72f:	mov    r8,QWORD PTR [rsp+0x50]
   14000c734:	jmp    0x14000c9a3
   14000c739:	lea    rcx,[rsp+0x80]
   14000c741:	mov    rdx,rbp
   14000c744:	call   QWORD PTR [rip+0x1404e]        # 0x140020798
   14000c74a:	lea    rdx,[rsp+0x90]
   14000c752:	mov    rcx,rax
   14000c755:	call   QWORD PTR [rip+0x14045]        # 0x1400207a0
   14000c75b:	mov    rcx,rax
   14000c75e:	call   QWORD PTR [rip+0x13c74]        # 0x1400203d8
   14000c764:	mov    rcx,QWORD PTR [rip+0x139ed]        # 0x140020158
   14000c76b:	lea    rdx,[rip+0x1443e]        # 0x140020bb0
   14000c772:	mov    rdi,rax
   14000c775:	call   0x140001800
   14000c77a:	mov    rdx,rdi
   14000c77d:	mov    rcx,rax
   14000c780:	call   0x140001800
   14000c785:	lea    rdx,[rip+0x1441c]        # 0x140020ba8
   14000c78c:	mov    rcx,rax
   14000c78f:	call   0x140001800
   14000c794:	lea    rcx,[rsp+0x90]
   14000c79c:	call   QWORD PTR [rip+0x13f56]        # 0x1400206f8
   14000c7a2:	lea    rcx,[rsp+0x80]
   14000c7aa:	call   QWORD PTR [rip+0x13fd0]        # 0x140020780
   14000c7b0:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c7b5:	mov    eax,DWORD PTR [rbx]
   14000c7b7:	test   eax,eax
   14000c7b9:	je     0x14000c7d6
   14000c7bb:	cmp    eax,0xffffffff
   14000c7be:	je     0x14000c80b
   14000c7c0:	mov    eax,r12d
   14000c7c3:	lock xadd DWORD PTR [rbx],eax
   14000c7c7:	add    eax,0xffffffff
   14000c7ca:	setne  al
   14000c7cd:	test   al,al
   14000c7cf:	jne    0x14000c80b
   14000c7d1:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c7d6:	movsxd rax,DWORD PTR [rbx+0xc]
   14000c7da:	lea    rdi,[rbx+rax*8+0x10]
   14000c7df:	movsxd rax,DWORD PTR [rbx+0x8]
   14000c7e3:	lea    rsi,[rbx+rax*8+0x10]
   14000c7e8:	cmp    rsi,rdi
   14000c7eb:	je     0x14000c802
   14000c7ed:	nop    DWORD PTR [rax]
   14000c7f0:	sub    rdi,0x8
   14000c7f4:	mov    rcx,rdi
   14000c7f7:	call   QWORD PTR [rip+0x13f83]        # 0x140020780
   14000c7fd:	cmp    rdi,rsi
   14000c800:	jne    0x14000c7f0
   14000c802:	mov    rcx,rbx
   14000c805:	call   QWORD PTR [rip+0x13ec5]        # 0x1400206d0
   14000c80b:	mov    rbx,QWORD PTR [rsp+0x38]
   14000c810:	mov    eax,DWORD PTR [rbx]
   14000c812:	test   eax,eax
   14000c814:	je     0x14000c831
   14000c816:	cmp    eax,0xffffffff
   14000c819:	je     0x14000c86b
   14000c81b:	mov    eax,r12d
   14000c81e:	lock xadd DWORD PTR [rbx],eax
   14000c822:	add    eax,0xffffffff
   14000c825:	setne  al
   14000c828:	test   al,al
   14000c82a:	jne    0x14000c86b
   14000c82c:	mov    rbx,QWORD PTR [rsp+0x38]
   14000c831:	movsxd rax,DWORD PTR [rbx+0xc]
   14000c835:	lea    rdi,[rbx+rax*8+0x10]
   14000c83a:	movsxd rax,DWORD PTR [rbx+0x8]
   14000c83e:	lea    rsi,[rbx+rax*8+0x10]
   14000c843:	cmp    rsi,rdi
   14000c846:	je     0x14000c862
   14000c848:	nop    DWORD PTR [rax+rax*1+0x0]
   14000c850:	sub    rdi,0x8
   14000c854:	mov    rcx,rdi
   14000c857:	call   QWORD PTR [rip+0x13f23]        # 0x140020780
   14000c85d:	cmp    rdi,rsi
   14000c860:	jne    0x14000c850
   14000c862:	mov    rcx,rbx
   14000c865:	call   QWORD PTR [rip+0x13e65]        # 0x1400206d0
   14000c86b:	mov    rbx,QWORD PTR [rsp+0x28]
   14000c870:	mov    eax,DWORD PTR [rbx]
   14000c872:	test   eax,eax
   14000c874:	je     0x14000c891
   14000c876:	cmp    eax,0xffffffff
   14000c879:	je     0x14000c8cb
   14000c87b:	mov    eax,r12d
   14000c87e:	lock xadd DWORD PTR [rbx],eax
   14000c882:	add    eax,0xffffffff
   14000c885:	setne  al
   14000c888:	test   al,al
   14000c88a:	jne    0x14000c8cb
   14000c88c:	mov    rbx,QWORD PTR [rsp+0x28]
   14000c891:	movsxd rax,DWORD PTR [rbx+0xc]
   14000c895:	lea    rdi,[rbx+rax*8+0x10]
   14000c89a:	movsxd rax,DWORD PTR [rbx+0x8]
   14000c89e:	lea    rsi,[rbx+rax*8+0x10]
   14000c8a3:	cmp    rsi,rdi
   14000c8a6:	je     0x14000c8c2
   14000c8a8:	nop    DWORD PTR [rax+rax*1+0x0]
   14000c8b0:	sub    rdi,0x8
   14000c8b4:	mov    rcx,rdi
   14000c8b7:	call   QWORD PTR [rip+0x13ec3]        # 0x140020780
   14000c8bd:	cmp    rdi,rsi
   14000c8c0:	jne    0x14000c8b0
   14000c8c2:	mov    rcx,rbx
   14000c8c5:	call   QWORD PTR [rip+0x13e05]        # 0x1400206d0
   14000c8cb:	lea    rcx,[rsp+0x48]
   14000c8d0:	call   QWORD PTR [rip+0x13eaa]        # 0x140020780
   14000c8d6:	mov    rbx,QWORD PTR [rsp+0x20]
   14000c8db:	mov    eax,DWORD PTR [rbx]
   14000c8dd:	test   eax,eax
   14000c8df:	je     0x14000c8fb
   14000c8e1:	cmp    eax,0xffffffff
   14000c8e4:	je     0x14000c92d
   14000c8e6:	lock xadd DWORD PTR [rbx],r12d
   14000c8eb:	add    r12d,0xffffffff
   14000c8ef:	setne  al
   14000c8f2:	test   al,al
   14000c8f4:	jne    0x14000c92d
   14000c8f6:	mov    rbx,QWORD PTR [rsp+0x20]
   14000c8fb:	movsxd rax,DWORD PTR [rbx+0xc]
   14000c8ff:	lea    rdi,[rbx+rax*8+0x10]
   14000c904:	movsxd rax,DWORD PTR [rbx+0x8]
   14000c908:	lea    rsi,[rbx+rax*8+0x10]
   14000c90d:	cmp    rsi,rdi
   14000c910:	je     0x14000c924
   14000c912:	sub    rdi,0x8
   14000c916:	mov    rcx,rdi
   14000c919:	call   QWORD PTR [rip+0x13e61]        # 0x140020780
   14000c91f:	cmp    rdi,rsi
   14000c922:	jne    0x14000c912
   14000c924:	mov    rcx,rbx
   14000c927:	call   QWORD PTR [rip+0x13da3]        # 0x1400206d0
   14000c92d:	lea    rcx,[rsp+0xb8]
   14000c935:	call   QWORD PTR [rip+0x13ab5]        # 0x1400203f0
   14000c93b:	mov    eax,0x1
   14000c940:	jmp    0x14000cc9d
   14000c945:	mov    edx,DWORD PTR [r8+0x4]
   14000c949:	lea    rcx,[rsp+0x50]
   14000c94e:	call   QWORD PTR [rip+0x13d24]        # 0x140020678
   14000c954:	mov    r8,QWORD PTR [rsp+0x50]
   14000c959:	movsxd rax,DWORD PTR [r8+0xc]
   14000c95d:	lea    rsi,[r8+rax*8+0x10]
   14000c962:	mov    rax,QWORD PTR [rsp+0x30]
   14000c967:	movsxd rcx,DWORD PTR [rax+0x8]
   14000c96b:	lea    rbx,[rax+rcx*8+0x10]
   14000c970:	movsxd rax,DWORD PTR [r8+0x8]
   14000c974:	lea    rdi,[r8+rax*8+0x10]
   14000c979:	cmp    rdi,rsi
   14000c97c:	je     0x14000c9a3
   14000c97e:	xchg   ax,ax
   14000c980:	test   rdi,rdi
   14000c983:	je     0x14000c991
   14000c985:	mov    rdx,rbx
   14000c988:	mov    rcx,rdi
   14000c98b:	call   QWORD PTR [rip+0x13e07]        # 0x140020798
   14000c991:	add    rdi,0x8
   14000c995:	add    rbx,0x8
   14000c999:	cmp    rdi,rsi
   14000c99c:	jne    0x14000c980
   14000c99e:	mov    r8,QWORD PTR [rsp+0x50]
   14000c9a3:	mov    rbx,QWORD PTR [rip+0x25c26]        # 0x1400325d0
   14000c9aa:	mov    QWORD PTR [rip+0x25c1f],r8        # 0x1400325d0
   14000c9b1:	mov    QWORD PTR [rsp+0x50],rbx
   14000c9b6:	mov    eax,DWORD PTR [rbx]
   14000c9b8:	test   eax,eax
   14000c9ba:	je     0x14000c9d7
   14000c9bc:	cmp    eax,0xffffffff
   14000c9bf:	je     0x14000ca0b
   14000c9c1:	mov    eax,r12d
   14000c9c4:	lock xadd DWORD PTR [rbx],eax
   14000c9c8:	add    eax,0xffffffff
   14000c9cb:	setne  al
   14000c9ce:	test   al,al
   14000c9d0:	jne    0x14000ca0b
   14000c9d2:	mov    rbx,QWORD PTR [rsp+0x50]
   14000c9d7:	movsxd rax,DWORD PTR [rbx+0xc]
   14000c9db:	lea    rdi,[rbx+rax*8+0x10]
   14000c9e0:	movsxd rax,DWORD PTR [rbx+0x8]
   14000c9e4:	lea    rsi,[rbx+rax*8+0x10]
   14000c9e9:	cmp    rsi,rdi
   14000c9ec:	je     0x14000ca02
   14000c9ee:	xchg   ax,ax
   14000c9f0:	sub    rdi,0x8
   14000c9f4:	mov    rcx,rdi
   14000c9f7:	call   QWORD PTR [rip+0x13d83]        # 0x140020780
   14000c9fd:	cmp    rdi,rsi
   14000ca00:	jne    0x14000c9f0
   14000ca02:	mov    rcx,rbx
   14000ca05:	call   QWORD PTR [rip+0x13cc5]        # 0x1400206d0
   14000ca0b:	lea    r8,[rsp+0x38]
   14000ca10:	lea    rdx,[rsp+0x28]
   14000ca15:	lea    rcx,[rsp+0x60]
   14000ca1a:	call   0x14000b400
   14000ca1f:	lea    rdx,[rsp+0x60]
   14000ca24:	lea    rcx,[rsp+0x70]
   14000ca29:	call   QWORD PTR [rip+0x139a1]        # 0x1400203d0
   14000ca2f:	lea    rcx,[rsp+0xa0]
   14000ca37:	mov    rdx,rax
   14000ca3a:	call   QWORD PTR [rip+0x13988]        # 0x1400203c8
   14000ca40:	lea    rdx,[rsp+0x68]
   14000ca45:	mov    rcx,rax
   14000ca48:	call   QWORD PTR [rip+0x13972]        # 0x1400203c0
   14000ca4e:	lea    rcx,[rsp+0xa0]
   14000ca56:	call   QWORD PTR [rip+0x1395c]        # 0x1400203b8
   14000ca5c:	lea    rcx,[rsp+0x70]
   14000ca61:	call   QWORD PTR [rip+0x13949]        # 0x1400203b0
   14000ca67:	lea    rcx,[rsp+0x68]
   14000ca6c:	call   QWORD PTR [rip+0x13966]        # 0x1400203d8
   14000ca72:	mov    rcx,QWORD PTR [rip+0x136ef]        # 0x140020168
   14000ca79:	mov    rdx,rax
   14000ca7c:	call   0x140001800
   14000ca81:	mov    rdx,QWORD PTR [rip+0x136c0]        # 0x140020148
   14000ca88:	mov    rcx,rax
   14000ca8b:	call   QWORD PTR [rip+0x136af]        # 0x140020140
   14000ca91:	lea    rcx,[rsp+0x68]
   14000ca96:	call   QWORD PTR [rip+0x13c5c]        # 0x1400206f8
   14000ca9c:	mov    rsi,QWORD PTR [rsp+0x60]
   14000caa1:	mov    eax,DWORD PTR [rsi]
   14000caa3:	test   eax,eax
   14000caa5:	je     0x14000cac2
   14000caa7:	cmp    eax,0xffffffff
   14000caaa:	je     0x14000cb0c
   14000caac:	mov    eax,r12d
   14000caaf:	lock xadd DWORD PTR [rsi],eax
   14000cab3:	add    eax,0xffffffff
   14000cab6:	setne  al
   14000cab9:	test   al,al
   14000cabb:	jne    0x14000cb0c
   14000cabd:	mov    rsi,QWORD PTR [rsp+0x60]
   14000cac2:	movsxd rax,DWORD PTR [rsi+0xc]
   14000cac6:	lea    rdi,[rsi+rax*8+0x10]
   14000cacb:	movsxd rax,DWORD PTR [rsi+0x8]
   14000cacf:	lea    rbp,[rsi+rax*8+0x10]
   14000cad4:	cmp    rbp,rdi
   14000cad7:	je     0x14000cb03
   14000cad9:	nop    DWORD PTR [rax+0x0]
   14000cae0:	mov    rbx,QWORD PTR [rdi-0x8]
   14000cae4:	sub    rdi,0x8
   14000cae8:	test   rbx,rbx
   14000caeb:	je     0x14000cafe
   14000caed:	mov    rcx,rbx
   14000caf0:	call   QWORD PTR [rip+0x13c52]        # 0x140020748
   14000caf6:	mov    rcx,rbx
   14000caf9:	call   0x14001ee46
   14000cafe:	cmp    rdi,rbp
   14000cb01:	jne    0x14000cae0
   14000cb03:	mov    rcx,rsi
   14000cb06:	call   QWORD PTR [rip+0x13bc4]        # 0x1400206d0
   14000cb0c:	mov    rbx,QWORD PTR [rsp+0x30]
   14000cb11:	mov    eax,DWORD PTR [rbx]
   14000cb13:	test   eax,eax
   14000cb15:	je     0x14000cb32
   14000cb17:	cmp    eax,0xffffffff
   14000cb1a:	je     0x14000cb6b
   14000cb1c:	mov    eax,r12d
   14000cb1f:	lock xadd DWORD PTR [rbx],eax
   14000cb23:	add    eax,0xffffffff
   14000cb26:	setne  al
   14000cb29:	test   al,al
   14000cb2b:	jne    0x14000cb6b
   14000cb2d:	mov    rbx,QWORD PTR [rsp+0x30]
   14000cb32:	movsxd rax,DWORD PTR [rbx+0xc]
   14000cb36:	lea    rdi,[rbx+rax*8+0x10]
   14000cb3b:	movsxd rax,DWORD PTR [rbx+0x8]
   14000cb3f:	lea    rsi,[rbx+rax*8+0x10]
   14000cb44:	cmp    rsi,rdi
   14000cb47:	je     0x14000cb62
   14000cb49:	nop    DWORD PTR [rax+0x0]
   14000cb50:	sub    rdi,0x8
   14000cb54:	mov    rcx,rdi
   14000cb57:	call   QWORD PTR [rip+0x13c23]        # 0x140020780
   14000cb5d:	cmp    rdi,rsi
   14000cb60:	jne    0x14000cb50
   14000cb62:	mov    rcx,rbx
   14000cb65:	call   QWORD PTR [rip+0x13b65]        # 0x1400206d0
   14000cb6b:	mov    rbx,QWORD PTR [rsp+0x38]
   14000cb70:	mov    eax,DWORD PTR [rbx]
   14000cb72:	test   eax,eax
   14000cb74:	je     0x14000cb91
   14000cb76:	cmp    eax,0xffffffff
   14000cb79:	je     0x14000cbcb
   14000cb7b:	mov    eax,r12d
   14000cb7e:	lock xadd DWORD PTR [rbx],eax
   14000cb82:	add    eax,0xffffffff
   14000cb85:	setne  al
   14000cb88:	test   al,al
   14000cb8a:	jne    0x14000cbcb
   14000cb8c:	mov    rbx,QWORD PTR [rsp+0x38]
   14000cb91:	movsxd rax,DWORD PTR [rbx+0xc]
   14000cb95:	lea    rdi,[rbx+rax*8+0x10]
   14000cb9a:	movsxd rax,DWORD PTR [rbx+0x8]
   14000cb9e:	lea    rsi,[rbx+rax*8+0x10]
   14000cba3:	cmp    rsi,rdi
   14000cba6:	je     0x14000cbc2
   14000cba8:	nop    DWORD PTR [rax+rax*1+0x0]
   14000cbb0:	sub    rdi,0x8
   14000cbb4:	mov    rcx,rdi
   14000cbb7:	call   QWORD PTR [rip+0x13bc3]        # 0x140020780
   14000cbbd:	cmp    rdi,rsi
   14000cbc0:	jne    0x14000cbb0
   14000cbc2:	mov    rcx,rbx
   14000cbc5:	call   QWORD PTR [rip+0x13b05]        # 0x1400206d0
   14000cbcb:	mov    rbx,QWORD PTR [rsp+0x28]
   14000cbd0:	mov    eax,DWORD PTR [rbx]
   14000cbd2:	test   eax,eax
   14000cbd4:	je     0x14000cbf1
   14000cbd6:	cmp    eax,0xffffffff
   14000cbd9:	je     0x14000cc2b
   14000cbdb:	mov    eax,r12d
   14000cbde:	lock xadd DWORD PTR [rbx],eax
   14000cbe2:	add    eax,0xffffffff
   14000cbe5:	setne  al
   14000cbe8:	test   al,al
   14000cbea:	jne    0x14000cc2b
   14000cbec:	mov    rbx,QWORD PTR [rsp+0x28]
   14000cbf1:	movsxd rax,DWORD PTR [rbx+0xc]
   14000cbf5:	lea    rdi,[rbx+rax*8+0x10]
   14000cbfa:	movsxd rax,DWORD PTR [rbx+0x8]
   14000cbfe:	lea    rsi,[rbx+rax*8+0x10]
   14000cc03:	cmp    rsi,rdi
   14000cc06:	je     0x14000cc22
   14000cc08:	nop    DWORD PTR [rax+rax*1+0x0]
   14000cc10:	sub    rdi,0x8
   14000cc14:	mov    rcx,rdi
   14000cc17:	call   QWORD PTR [rip+0x13b63]        # 0x140020780
   14000cc1d:	cmp    rdi,rsi
   14000cc20:	jne    0x14000cc10
   14000cc22:	mov    rcx,rbx
   14000cc25:	call   QWORD PTR [rip+0x13aa5]        # 0x1400206d0
   14000cc2b:	lea    rcx,[rsp+0x48]
   14000cc30:	call   QWORD PTR [rip+0x13b4a]        # 0x140020780
   14000cc36:	mov    rbx,QWORD PTR [rsp+0x20]
   14000cc3b:	mov    eax,DWORD PTR [rbx]
   14000cc3d:	test   eax,eax
   14000cc3f:	je     0x14000cc5b
   14000cc41:	cmp    eax,0xffffffff
   14000cc44:	je     0x14000cc8d
   14000cc46:	lock xadd DWORD PTR [rbx],r12d
   14000cc4b:	add    r12d,0xffffffff
   14000cc4f:	setne  al
   14000cc52:	test   al,al
   14000cc54:	jne    0x14000cc8d
   14000cc56:	mov    rbx,QWORD PTR [rsp+0x20]
   14000cc5b:	movsxd rax,DWORD PTR [rbx+0xc]
   14000cc5f:	lea    rdi,[rbx+rax*8+0x10]
   14000cc64:	movsxd rax,DWORD PTR [rbx+0x8]
   14000cc68:	lea    rsi,[rbx+rax*8+0x10]
   14000cc6d:	cmp    rsi,rdi
   14000cc70:	je     0x14000cc84
   14000cc72:	sub    rdi,0x8
   14000cc76:	mov    rcx,rdi
   14000cc79:	call   QWORD PTR [rip+0x13b01]        # 0x140020780
   14000cc7f:	cmp    rdi,rsi
   14000cc82:	jne    0x14000cc72
   14000cc84:	mov    rcx,rbx
   14000cc87:	call   QWORD PTR [rip+0x13a43]        # 0x1400206d0
   14000cc8d:	lea    rcx,[rsp+0xb8]
   14000cc95:	call   QWORD PTR [rip+0x13755]        # 0x1400203f0
   14000cc9b:	xor    eax,eax
   14000cc9d:	mov    r14,QWORD PTR [rsp+0x158]
   14000cca5:	mov    r13,QWORD PTR [rsp+0x160]
   14000ccad:	mov    rbp,QWORD PTR [rsp+0x198]
   14000ccb5:	mov    r15,QWORD PTR [rsp+0x150]
   14000ccbd:	add    rsp,0x168
   14000ccc4:	pop    r12
   14000ccc6:	pop    rdi
   14000ccc7:	pop    rsi
   14000ccc8:	pop    rbx
   14000ccc9:	ret    
   14000ccca:	int3   
   14000cccb:	int3   
   14000cccc:	int3   
   14000cccd:	int3   
   14000ccce:	int3   
   14000cccf:	int3   
   14000ccd0:	mov    QWORD PTR [rsp+0x8],rbx
   14000ccd5:	mov    QWORD PTR [rsp+0x10],rbp
   14000ccda:	mov    QWORD PTR [rsp+0x18],rsi
   14000ccdf:	push   rdi
   14000cce0:	sub    rsp,0x20
   14000cce4:	mov    eax,DWORD PTR [rcx+0x10]
   14000cce7:	inc    DWORD PTR [rcx+0x14]
   14000ccea:	mov    rbp,rdx
   14000cced:	mov    rbx,rcx
   14000ccf0:	cmp    DWORD PTR [rcx+0x14],eax
   14000ccf3:	jne    0x14000cd44
   14000ccf5:	test   eax,eax
   14000ccf7:	jne    0x14000cd02
   14000ccf9:	mov    DWORD PTR [rcx+0x10],0x8
   14000cd00:	jmp    0x14000cd07
   14000cd02:	add    eax,eax
   14000cd04:	mov    DWORD PTR [rcx+0x10],eax
   14000cd07:	movsxd rdx,DWORD PTR [rcx+0x10]
   14000cd0b:	mov    rcx,QWORD PTR [rcx+0x8]
   14000cd0f:	shl    rdx,0x3
   14000cd13:	call   QWORD PTR [rip+0x134bf]        # 0x1400201d8
   14000cd19:	movsxd rdx,DWORD PTR [rbx+0x14]
   14000cd1d:	cmp    edx,DWORD PTR [rbx+0x10]
   14000cd20:	mov    QWORD PTR [rbx+0x8],rax
   14000cd24:	mov    rcx,rdx
   14000cd27:	jge    0x14000cd44
   14000cd29:	shl    rcx,0x3
   14000cd2d:	xor    r8d,r8d
   14000cd30:	mov    rax,QWORD PTR [rbx+0x8]
   14000cd34:	inc    edx
   14000cd36:	add    rcx,0x8
   14000cd3a:	mov    QWORD PTR [rcx+rax*1-0x8],r8
   14000cd3f:	cmp    edx,DWORD PTR [rbx+0x10]
   14000cd42:	jl     0x14000cd30
   14000cd44:	movsxd rdi,DWORD PTR [rbx+0x14]
   14000cd48:	mov    rsi,QWORD PTR [rbx+0x8]
   14000cd4c:	cmp    QWORD PTR [rsi+rdi*8],0x0
   14000cd51:	jne    0x14000cd62
   14000cd53:	mov    ecx,0x2000
   14000cd58:	call   QWORD PTR [rip+0x13472]        # 0x1400201d0
   14000cd5e:	mov    QWORD PTR [rsi+rdi*8],rax
   14000cd62:	mov    rax,QWORD PTR [rsi+rdi*8]
   14000cd66:	mov    rsi,QWORD PTR [rsp+0x40]
   14000cd6b:	lea    rcx,[rax+0x2000]
   14000cd72:	mov    QWORD PTR [rbx+0x20],rcx
   14000cd76:	lea    rcx,[rax+rbp*1]
   14000cd7a:	mov    rbp,QWORD PTR [rsp+0x38]
   14000cd7f:	mov    QWORD PTR [rbx+0x18],rcx
   14000cd83:	mov    rbx,QWORD PTR [rsp+0x30]
   14000cd88:	add    rsp,0x20
   14000cd8c:	pop    rdi
   14000cd8d:	ret    
   14000cd8e:	int3   
   14000cd8f:	int3   
   14000cd90:	lea    r9,[rip+0xffffffffffff3269]        # 0x140000000
   14000cd97:	movsxd r8,ecx
   14000cd9a:	movsx  eax,WORD PTR [r9+r8*2+0x23f70]
   14000cda3:	add    eax,edx
   14000cda5:	js     0x14000cdc1
   14000cda7:	movsxd rcx,eax
   14000cdaa:	movsx  eax,WORD PTR [r9+rcx*2+0x26620]
   14000cdb3:	cmp    eax,edx
   14000cdb5:	jne    0x14000cdc1
   14000cdb7:	movsx  eax,WORD PTR [r9+rcx*2+0x249e0]
   14000cdc0:	ret    
   14000cdc1:	movsx  eax,WORD PTR [r9+r8*2+0x23950]
   14000cdca:	neg    eax
   14000cdcc:	ret    
   14000cdcd:	int3   
   14000cdce:	int3   
   14000cdcf:	int3   
   14000cdd0:	mov    eax,DWORD PTR [rcx+0x10]
   14000cdd3:	mov    DWORD PTR [rdx],eax
   14000cdd5:	mov    eax,DWORD PTR [rcx+0x14]
   14000cdd8:	mov    DWORD PTR [rdx+0x4],eax
   14000cddb:	mov    eax,DWORD PTR [rcx+0x18]
   14000cdde:	mov    DWORD PTR [rdx+0x8],eax
   14000cde1:	mov    eax,DWORD PTR [rcx+0x1c]
   14000cde4:	mov    DWORD PTR [rdx+0xc],eax
   14000cde7:	mov    rax,rdx
   14000cdea:	ret    
   14000cdeb:	int3   
   14000cdec:	int3   
   14000cded:	int3   
   14000cdee:	int3   
   14000cdef:	int3   
   14000cdf0:	xor    r9d,r9d
   14000cdf3:	lea    rax,[rip+0x1416e]        # 0x140020f68
   14000cdfa:	mov    QWORD PTR [rcx],rax
   14000cdfd:	mov    DWORD PTR [rcx+0x8],r9d
   14000ce01:	mov    rax,QWORD PTR [rdx]
   14000ce04:	mov    QWORD PTR [rcx+0x10],rax
   14000ce08:	mov    eax,DWORD PTR [rdx+0x8]
   14000ce0b:	mov    DWORD PTR [rcx+0x18],eax
   14000ce0e:	mov    eax,DWORD PTR [rdx+0xc]
   14000ce11:	mov    DWORD PTR [rcx+0x1c],eax
   14000ce14:	mov    DWORD PTR [rcx+0x20],r8d
   14000ce18:	mov    DWORD PTR [rcx+0x24],r9d
   14000ce1c:	mov    DWORD PTR [rcx+0x28],r9d
   14000ce20:	mov    DWORD PTR [rcx+0x2c],r9d
   14000ce24:	mov    DWORD PTR [rcx+0x30],r9d
   14000ce28:	mov    DWORD PTR [rcx+0x8],0x37
   14000ce2f:	mov    rax,rcx
   14000ce32:	ret    
   14000ce33:	int3   
   14000ce34:	int3   
   14000ce35:	int3   
   14000ce36:	int3   
   14000ce37:	int3   
   14000ce38:	int3   
   14000ce39:	int3   
   14000ce3a:	int3   
   14000ce3b:	int3   
   14000ce3c:	int3   
   14000ce3d:	int3   
   14000ce3e:	int3   
   14000ce3f:	int3   
   14000ce40:	mov    eax,DWORD PTR [rcx+0x24]
   14000ce43:	mov    DWORD PTR [rdx],eax
   14000ce45:	mov    eax,DWORD PTR [rcx+0x28]
   14000ce48:	mov    DWORD PTR [rdx+0x4],eax
   14000ce4b:	mov    eax,DWORD PTR [rcx+0x2c]
   14000ce4e:	mov    DWORD PTR [rdx+0x8],eax
   14000ce51:	mov    eax,DWORD PTR [rcx+0x30]
   14000ce54:	mov    DWORD PTR [rdx+0xc],eax
   14000ce57:	mov    rax,rdx
   14000ce5a:	ret    
   14000ce5b:	int3   
   14000ce5c:	int3   
   14000ce5d:	int3   
   14000ce5e:	int3   
   14000ce5f:	int3   
   14000ce60:	mov    QWORD PTR [rcx+0x18],rdx
   14000ce64:	lea    rax,[rip+0x1414d]        # 0x140020fb8
   14000ce6b:	mov    QWORD PTR [rcx],rax
   14000ce6e:	xor    eax,eax
   14000ce70:	mov    QWORD PTR [rcx+0x10],rax
   14000ce74:	mov    DWORD PTR [rcx+0x20],eax
   14000ce77:	mov    DWORD PTR [rcx+0x24],eax
   14000ce7a:	mov    DWORD PTR [rcx+0x28],eax
   14000ce7d:	mov    DWORD PTR [rcx+0x2c],eax
   14000ce80:	mov    DWORD PTR [rcx+0x30],eax
   14000ce83:	mov    DWORD PTR [rcx+0x34],eax
   14000ce86:	mov    DWORD PTR [rcx+0x38],eax
   14000ce89:	mov    DWORD PTR [rcx+0x3c],eax
   14000ce8c:	mov    DWORD PTR [rcx+0x40],eax
   14000ce8f:	mov    DWORD PTR [rcx+0x44],eax
   14000ce92:	mov    DWORD PTR [rcx+0x48],eax
   14000ce95:	mov    DWORD PTR [rcx+0x4c],eax
   14000ce98:	mov    DWORD PTR [rcx+0x8],0x2
   14000ce9f:	mov    rax,rcx
   14000cea2:	ret    
   14000cea3:	int3   
   14000cea4:	int3   
   14000cea5:	int3   
   14000cea6:	int3   
   14000cea7:	int3   
   14000cea8:	int3   
   14000cea9:	int3   
   14000ceaa:	int3   
   14000ceab:	int3   
   14000ceac:	int3   
   14000cead:	int3   
   14000ceae:	int3   
   14000ceaf:	int3   
   14000ceb0:	mov    QWORD PTR [rcx+0x10],rdx
   14000ceb4:	lea    rax,[rip+0x140fd]        # 0x140020fb8
   14000cebb:	mov    QWORD PTR [rcx],rax
   14000cebe:	xor    eax,eax
   14000cec0:	mov    QWORD PTR [rcx+0x18],rax
   14000cec4:	mov    DWORD PTR [rcx+0x20],eax
   14000cec7:	mov    DWORD PTR [rcx+0x24],eax
   14000ceca:	mov    DWORD PTR [rcx+0x28],eax
   14000cecd:	mov    DWORD PTR [rcx+0x2c],eax
   14000ced0:	mov    DWORD PTR [rcx+0x30],eax
   14000ced3:	mov    DWORD PTR [rcx+0x34],eax
   14000ced6:	mov    DWORD PTR [rcx+0x38],eax
   14000ced9:	mov    DWORD PTR [rcx+0x3c],eax
   14000cedc:	mov    DWORD PTR [rcx+0x40],eax
   14000cedf:	mov    DWORD PTR [rcx+0x44],eax
   14000cee2:	mov    DWORD PTR [rcx+0x48],eax
   14000cee5:	mov    DWORD PTR [rcx+0x4c],eax
   14000cee8:	mov    DWORD PTR [rcx+0x8],0x2
   14000ceef:	mov    rax,rcx
   14000cef2:	ret    
   14000cef3:	int3   
   14000cef4:	int3   
   14000cef5:	int3   
   14000cef6:	int3   
   14000cef7:	int3   
   14000cef8:	int3   
   14000cef9:	int3   
   14000cefa:	int3   
   14000cefb:	int3   
   14000cefc:	int3   
   14000cefd:	int3   
   14000cefe:	int3   
   14000ceff:	int3   
   14000cf00:	mov    QWORD PTR [rcx+0x10],rdx
   14000cf04:	mov    QWORD PTR [rcx+0x18],r8
   14000cf08:	lea    rax,[rip+0x140a9]        # 0x140020fb8
   14000cf0f:	mov    QWORD PTR [rcx],rax
   14000cf12:	xor    eax,eax
   14000cf14:	mov    DWORD PTR [rcx+0x20],eax
   14000cf17:	mov    DWORD PTR [rcx+0x24],eax
   14000cf1a:	mov    DWORD PTR [rcx+0x28],eax
   14000cf1d:	mov    DWORD PTR [rcx+0x2c],eax
   14000cf20:	mov    DWORD PTR [rcx+0x30],eax
   14000cf23:	mov    DWORD PTR [rcx+0x34],eax
   14000cf26:	mov    DWORD PTR [rcx+0x38],eax
   14000cf29:	mov    DWORD PTR [rcx+0x3c],eax
   14000cf2c:	mov    DWORD PTR [rcx+0x40],eax
   14000cf2f:	mov    DWORD PTR [rcx+0x44],eax
   14000cf32:	mov    DWORD PTR [rcx+0x48],eax
   14000cf35:	mov    DWORD PTR [rcx+0x4c],eax
   14000cf38:	mov    DWORD PTR [rcx+0x8],0x2
   14000cf3f:	mov    rax,rcx
   14000cf42:	ret    
   14000cf43:	int3   
   14000cf44:	int3   
   14000cf45:	int3   
   14000cf46:	int3   
   14000cf47:	int3   
   14000cf48:	int3   
   14000cf49:	int3   
   14000cf4a:	int3   
   14000cf4b:	int3   
   14000cf4c:	int3   
   14000cf4d:	int3   
   14000cf4e:	int3   
   14000cf4f:	int3   
   14000cf50:	mov    eax,DWORD PTR [rcx+0x18]
   14000cf53:	mov    DWORD PTR [rdx],eax
   14000cf55:	mov    eax,DWORD PTR [rcx+0x1c]
   14000cf58:	mov    DWORD PTR [rdx+0x4],eax
   14000cf5b:	mov    eax,DWORD PTR [rcx+0x20]
   14000cf5e:	mov    DWORD PTR [rdx+0x8],eax
   14000cf61:	mov    eax,DWORD PTR [rcx+0x24]
   14000cf64:	mov    DWORD PTR [rdx+0xc],eax
   14000cf67:	mov    rax,rdx
   14000cf6a:	ret    
   14000cf6b:	int3   
   14000cf6c:	int3   
   14000cf6d:	int3   
   14000cf6e:	int3   
   14000cf6f:	int3   
   14000cf70:	rex push rbx
   14000cf72:	sub    rsp,0x30
   14000cf76:	cmp    QWORD PTR [rcx+0x10],0x0
   14000cf7b:	mov    rbx,rdx
   14000cf7e:	je     0x14000cf94
   14000cf80:	mov    rcx,QWORD PTR [rcx+0x10]
   14000cf84:	lea    rdx,[rsp+0x20]
   14000cf89:	mov    rax,QWORD PTR [rcx]
   14000cf8c:	call   QWORD PTR [rax+0x38]
   14000cf8f:	mov    rcx,rax
   14000cf92:	jmp    0x14000cf98
   14000cf94:	add    rcx,0x18
   14000cf98:	mov    eax,DWORD PTR [rcx]
   14000cf9a:	mov    DWORD PTR [rbx],eax
   14000cf9c:	mov    eax,DWORD PTR [rcx+0x4]
   14000cf9f:	mov    DWORD PTR [rbx+0x4],eax
   14000cfa2:	mov    eax,DWORD PTR [rcx+0x8]
   14000cfa5:	mov    DWORD PTR [rbx+0x8],eax
   14000cfa8:	mov    eax,DWORD PTR [rcx+0xc]
   14000cfab:	mov    DWORD PTR [rbx+0xc],eax
   14000cfae:	mov    rax,rbx
   14000cfb1:	add    rsp,0x30
   14000cfb5:	pop    rbx
   14000cfb6:	ret    
   14000cfb7:	int3   
   14000cfb8:	int3   
   14000cfb9:	int3   
   14000cfba:	int3   
   14000cfbb:	int3   
   14000cfbc:	int3   
   14000cfbd:	int3   
   14000cfbe:	int3   
   14000cfbf:	int3   
   14000cfc0:	rex push rbx
   14000cfc2:	sub    rsp,0x20
   14000cfc6:	cmp    QWORD PTR [rcx+0x10],0x0
   14000cfcb:	mov    rbx,rdx
   14000cfce:	je     0x14000cfe3
   14000cfd0:	mov    rcx,QWORD PTR [rcx+0x10]
   14000cfd4:	mov    rax,QWORD PTR [rcx]
   14000cfd7:	call   QWORD PTR [rax+0x30]
   14000cfda:	mov    rax,rbx
   14000cfdd:	add    rsp,0x20
   14000cfe1:	pop    rbx
   14000cfe2:	ret    
   14000cfe3:	mov    rcx,QWORD PTR [rcx+0x18]
   14000cfe7:	mov    rax,QWORD PTR [rcx]
   14000cfea:	call   QWORD PTR [rax+0x30]
   14000cfed:	mov    rax,rbx
   14000cff0:	add    rsp,0x20
   14000cff4:	pop    rbx
   14000cff5:	ret    
   14000cff6:	int3   
   14000cff7:	int3   
   14000cff8:	int3   
   14000cff9:	int3   
   14000cffa:	int3   
   14000cffb:	int3   
   14000cffc:	int3   
   14000cffd:	int3   
   14000cffe:	int3   
   14000cfff:	int3   
   14000d000:	rex push rbx
   14000d002:	sub    rsp,0x20
   14000d006:	cmp    QWORD PTR [rcx+0x20],0x0
   14000d00b:	mov    rbx,rdx
   14000d00e:	je     0x14000d023
   14000d010:	mov    rcx,QWORD PTR [rcx+0x20]
   14000d014:	mov    rax,QWORD PTR [rcx]
   14000d017:	call   QWORD PTR [rax+0x38]
   14000d01a:	mov    rax,rbx
   14000d01d:	add    rsp,0x20
   14000d021:	pop    rbx
   14000d022:	ret    
   14000d023:	mov    rcx,QWORD PTR [rcx+0x18]
   14000d027:	mov    rax,QWORD PTR [rcx]
   14000d02a:	call   QWORD PTR [rax+0x38]
   14000d02d:	mov    rax,rbx
   14000d030:	add    rsp,0x20
   14000d034:	pop    rbx
   14000d035:	ret    
   14000d036:	int3   
   14000d037:	int3   
   14000d038:	int3   
   14000d039:	int3   
   14000d03a:	int3   
   14000d03b:	int3   
   14000d03c:	int3   
   14000d03d:	int3   
   14000d03e:	int3   
   14000d03f:	int3   
   14000d040:	rex push rbx
   14000d042:	sub    rsp,0x40
   14000d046:	cmp    QWORD PTR [rcx+0x18],0x0
   14000d04b:	mov    rbx,rdx
   14000d04e:	je     0x14000d05b
   14000d050:	mov    rcx,QWORD PTR [rcx+0x18]
   14000d054:	lea    rdx,[rsp+0x20]
   14000d059:	jmp    0x14000d064
   14000d05b:	mov    rcx,QWORD PTR [rcx+0x10]
   14000d05f:	lea    rdx,[rsp+0x30]
   14000d064:	mov    rax,QWORD PTR [rcx]
   14000d067:	call   QWORD PTR [rax+0x38]
   14000d06a:	mov    r11,rax
   14000d06d:	mov    eax,DWORD PTR [rax]
   14000d06f:	mov    DWORD PTR [rbx],eax
   14000d071:	mov    eax,DWORD PTR [r11+0x4]
   14000d075:	mov    DWORD PTR [rbx+0x4],eax
   14000d078:	mov    eax,DWORD PTR [r11+0x8]
   14000d07c:	mov    DWORD PTR [rbx+0x8],eax
   14000d07f:	mov    eax,DWORD PTR [r11+0xc]
   14000d083:	mov    DWORD PTR [rbx+0xc],eax
   14000d086:	mov    rax,rbx
   14000d089:	add    rsp,0x40
   14000d08d:	pop    rbx
   14000d08e:	ret    
   14000d08f:	int3   
   14000d090:	mov    QWORD PTR [rcx+0x10],rdx
   14000d094:	lea    rax,[rip+0x140fd]        # 0x140021198
   14000d09b:	mov    QWORD PTR [rcx],rax
   14000d09e:	xor    eax,eax
   14000d0a0:	mov    DWORD PTR [rcx+0x18],eax
   14000d0a3:	mov    DWORD PTR [rcx+0x1c],eax
   14000d0a6:	mov    DWORD PTR [rcx+0x20],eax
   14000d0a9:	mov    DWORD PTR [rcx+0x24],eax
   14000d0ac:	mov    DWORD PTR [rcx+0x28],eax
   14000d0af:	mov    DWORD PTR [rcx+0x2c],eax
   14000d0b2:	mov    DWORD PTR [rcx+0x30],eax
   14000d0b5:	mov    DWORD PTR [rcx+0x34],eax
   14000d0b8:	mov    DWORD PTR [rcx+0x38],eax
   14000d0bb:	mov    QWORD PTR [rcx+0x40],rax
   14000d0bf:	mov    DWORD PTR [rcx+0x48],eax
   14000d0c2:	mov    DWORD PTR [rcx+0x4c],eax
   14000d0c5:	mov    DWORD PTR [rcx+0x50],eax
   14000d0c8:	mov    DWORD PTR [rcx+0x54],eax
   14000d0cb:	mov    DWORD PTR [rcx+0x58],eax
   14000d0ce:	mov    DWORD PTR [rcx+0x5c],eax
   14000d0d1:	mov    DWORD PTR [rcx+0x60],eax
   14000d0d4:	mov    DWORD PTR [rcx+0x64],eax
   14000d0d7:	mov    QWORD PTR [rcx+0x68],r8
   14000d0db:	mov    DWORD PTR [rcx+0x70],eax
   14000d0de:	mov    DWORD PTR [rcx+0x74],eax
   14000d0e1:	mov    DWORD PTR [rcx+0x78],eax
   14000d0e4:	mov    DWORD PTR [rcx+0x7c],eax
   14000d0e7:	mov    DWORD PTR [rcx+0x8],0x34
   14000d0ee:	mov    rax,rcx
   14000d0f1:	ret    
   14000d0f2:	int3   
   14000d0f3:	int3   
   14000d0f4:	int3   
   14000d0f5:	int3   
   14000d0f6:	int3   
   14000d0f7:	int3   
   14000d0f8:	int3   
   14000d0f9:	int3   
   14000d0fa:	int3   
   14000d0fb:	int3   
   14000d0fc:	int3   
   14000d0fd:	int3   
   14000d0fe:	int3   
   14000d0ff:	int3   
   14000d100:	mov    QWORD PTR [rcx+0x10],rdx
   14000d104:	mov    DWORD PTR [rcx+0x18],0x1
   14000d10b:	lea    rax,[rip+0x14086]        # 0x140021198
   14000d112:	mov    QWORD PTR [rcx],rax
   14000d115:	xor    eax,eax
   14000d117:	mov    DWORD PTR [rcx+0x1c],eax
   14000d11a:	mov    DWORD PTR [rcx+0x20],eax
   14000d11d:	mov    DWORD PTR [rcx+0x24],eax
   14000d120:	mov    DWORD PTR [rcx+0x28],eax
   14000d123:	mov    DWORD PTR [rcx+0x2c],eax
   14000d126:	mov    DWORD PTR [rcx+0x30],eax
   14000d129:	mov    DWORD PTR [rcx+0x34],eax
   14000d12c:	mov    DWORD PTR [rcx+0x38],eax
   14000d12f:	mov    QWORD PTR [rcx+0x40],r8
   14000d133:	mov    DWORD PTR [rcx+0x48],eax
   14000d136:	mov    DWORD PTR [rcx+0x4c],eax
   14000d139:	mov    DWORD PTR [rcx+0x50],eax
   14000d13c:	mov    DWORD PTR [rcx+0x54],eax
   14000d13f:	mov    DWORD PTR [rcx+0x58],eax
   14000d142:	mov    DWORD PTR [rcx+0x5c],eax
   14000d145:	mov    DWORD PTR [rcx+0x60],eax
   14000d148:	mov    DWORD PTR [rcx+0x64],eax
   14000d14b:	mov    QWORD PTR [rcx+0x68],r9
   14000d14f:	mov    DWORD PTR [rcx+0x70],eax
   14000d152:	mov    DWORD PTR [rcx+0x74],eax
   14000d155:	mov    DWORD PTR [rcx+0x78],eax
   14000d158:	mov    DWORD PTR [rcx+0x7c],eax
   14000d15b:	mov    DWORD PTR [rcx+0x8],0x34
   14000d162:	mov    rax,rcx
   14000d165:	ret    
   14000d166:	int3   
   14000d167:	int3   
   14000d168:	int3   
   14000d169:	int3   
   14000d16a:	int3   
   14000d16b:	int3   
   14000d16c:	int3   
   14000d16d:	int3   
   14000d16e:	int3   
   14000d16f:	int3   
   14000d170:	mov    eax,DWORD PTR [rcx+0x1c]
   14000d173:	mov    DWORD PTR [rdx],eax
   14000d175:	mov    eax,DWORD PTR [rcx+0x20]
   14000d178:	mov    DWORD PTR [rdx+0x4],eax
   14000d17b:	mov    eax,DWORD PTR [rcx+0x24]
   14000d17e:	mov    DWORD PTR [rdx+0x8],eax
   14000d181:	mov    eax,DWORD PTR [rcx+0x28]
   14000d184:	mov    DWORD PTR [rdx+0xc],eax
   14000d187:	mov    rax,rdx
   14000d18a:	ret    
   14000d18b:	int3   
   14000d18c:	int3   
   14000d18d:	int3   
   14000d18e:	int3   
   14000d18f:	int3   
   14000d190:	mov    eax,DWORD PTR [rcx+0x70]
   14000d193:	mov    DWORD PTR [rdx],eax
   14000d195:	mov    eax,DWORD PTR [rcx+0x74]
   14000d198:	mov    DWORD PTR [rdx+0x4],eax
   14000d19b:	mov    eax,DWORD PTR [rcx+0x78]
   14000d19e:	mov    DWORD PTR [rdx+0x8],eax
   14000d1a1:	mov    eax,DWORD PTR [rcx+0x7c]
   14000d1a4:	mov    DWORD PTR [rdx+0xc],eax
   14000d1a7:	mov    rax,rdx
   14000d1aa:	ret    
   14000d1ab:	int3   
   14000d1ac:	int3   
   14000d1ad:	int3   
   14000d1ae:	int3   
   14000d1af:	int3   
   14000d1b0:	rex push rbx
   14000d1b2:	sub    rsp,0x20
   14000d1b6:	add    rcx,0x20
   14000d1ba:	mov    rbx,rdx
   14000d1bd:	call   QWORD PTR [rip+0x133ad]        # 0x140020570
   14000d1c3:	mov    rax,rbx
   14000d1c6:	add    rsp,0x20
   14000d1ca:	pop    rbx
   14000d1cb:	ret    
   14000d1cc:	int3   
   14000d1cd:	int3   
   14000d1ce:	int3   
   14000d1cf:	int3   
   14000d1d0:	rex push rbx
   14000d1d2:	sub    rsp,0x20
   14000d1d6:	movsd  xmm1,QWORD PTR [rcx+0x20]
   14000d1db:	mov    r9d,0x10
   14000d1e1:	mov    r8b,0x67
   14000d1e4:	mov    rcx,rdx
   14000d1e7:	mov    rbx,rdx
   14000d1ea:	call   QWORD PTR [rip+0x13238]        # 0x140020428
   14000d1f0:	mov    rax,rbx
   14000d1f3:	add    rsp,0x20
   14000d1f7:	pop    rbx
   14000d1f8:	ret    
   14000d1f9:	int3   
   14000d1fa:	int3   
   14000d1fb:	int3   
   14000d1fc:	int3   
   14000d1fd:	int3   
   14000d1fe:	int3   
   14000d1ff:	int3   
   14000d200:	mov    eax,DWORD PTR [rcx+0x30]
   14000d203:	mov    DWORD PTR [rdx],eax
   14000d205:	mov    eax,DWORD PTR [rcx+0x34]
   14000d208:	mov    DWORD PTR [rdx+0x4],eax
   14000d20b:	mov    eax,DWORD PTR [rcx+0x38]
   14000d20e:	mov    DWORD PTR [rdx+0x8],eax
   14000d211:	mov    eax,DWORD PTR [rcx+0x3c]
   14000d214:	mov    DWORD PTR [rdx+0xc],eax
   14000d217:	mov    rax,rdx
   14000d21a:	ret    
   14000d21b:	int3   
   14000d21c:	int3   
   14000d21d:	int3   
   14000d21e:	int3   
   14000d21f:	int3   
   14000d220:	mov    QWORD PTR [rcx+0x10],rdx
   14000d224:	xor    r9d,r9d
   14000d227:	lea    rax,[rip+0x140fa]        # 0x140021328
   14000d22e:	mov    QWORD PTR [rcx],rax
   14000d231:	mov    DWORD PTR [rcx+0x8],r9d
   14000d235:	mov    rax,QWORD PTR [r8]
   14000d238:	mov    QWORD PTR [rcx+0x18],rax
   14000d23c:	mov    eax,DWORD PTR [r8+0x8]
   14000d240:	mov    DWORD PTR [rcx+0x20],eax
   14000d243:	mov    eax,DWORD PTR [r8+0xc]
   14000d247:	mov    DWORD PTR [rcx+0x24],eax
   14000d24a:	mov    DWORD PTR [rcx+0x28],r9d
   14000d24e:	mov    DWORD PTR [rcx+0x2c],r9d
   14000d252:	mov    DWORD PTR [rcx+0x30],r9d
   14000d256:	mov    DWORD PTR [rcx+0x34],r9d
   14000d25a:	mov    DWORD PTR [rcx+0x38],r9d
   14000d25e:	mov    DWORD PTR [rcx+0x3c],r9d
   14000d262:	mov    DWORD PTR [rcx+0x40],r9d
   14000d266:	mov    DWORD PTR [rcx+0x44],r9d
   14000d26a:	mov    DWORD PTR [rcx+0x8],0x18
   14000d271:	mov    rax,rcx
   14000d274:	ret    
   14000d275:	int3   
   14000d276:	int3   
   14000d277:	int3   
   14000d278:	int3   
   14000d279:	int3   
   14000d27a:	int3   
   14000d27b:	int3   
   14000d27c:	int3   
   14000d27d:	int3   
   14000d27e:	int3   
   14000d27f:	int3   
   14000d280:	mov    QWORD PTR [rcx+0x10],rdx
   14000d284:	mov    QWORD PTR [rcx+0x18],r8
   14000d288:	lea    rax,[rip+0x140e9]        # 0x140021378
   14000d28f:	mov    QWORD PTR [rcx],rax
   14000d292:	xor    eax,eax
   14000d294:	mov    DWORD PTR [rcx+0x20],eax
   14000d297:	mov    DWORD PTR [rcx+0x24],eax
   14000d29a:	mov    DWORD PTR [rcx+0x28],eax
   14000d29d:	mov    DWORD PTR [rcx+0x2c],eax
   14000d2a0:	mov    DWORD PTR [rcx+0x30],eax
   14000d2a3:	mov    DWORD PTR [rcx+0x34],eax
   14000d2a6:	mov    DWORD PTR [rcx+0x38],eax
   14000d2a9:	mov    DWORD PTR [rcx+0x3c],eax
   14000d2ac:	mov    DWORD PTR [rcx+0x40],eax
   14000d2af:	mov    DWORD PTR [rcx+0x44],eax
   14000d2b2:	mov    DWORD PTR [rcx+0x48],eax
   14000d2b5:	mov    DWORD PTR [rcx+0x4c],eax
   14000d2b8:	mov    DWORD PTR [rcx+0x8],0x28
   14000d2bf:	mov    rax,rcx
   14000d2c2:	ret    
   14000d2c3:	int3   
   14000d2c4:	int3   
   14000d2c5:	int3   
   14000d2c6:	int3   
   14000d2c7:	int3   
   14000d2c8:	int3   
   14000d2c9:	int3   
   14000d2ca:	int3   
   14000d2cb:	int3   
   14000d2cc:	int3   
   14000d2cd:	int3   
   14000d2ce:	int3   
   14000d2cf:	int3   
   14000d2d0:	rex push rbx
   14000d2d2:	sub    rsp,0x20
   14000d2d6:	mov    rcx,QWORD PTR [rcx+0x10]
   14000d2da:	mov    rbx,rdx
   14000d2dd:	mov    rax,QWORD PTR [rcx]
   14000d2e0:	call   QWORD PTR [rax+0x30]
   14000d2e3:	mov    rax,rbx
   14000d2e6:	add    rsp,0x20
   14000d2ea:	pop    rbx
   14000d2eb:	ret    
   14000d2ec:	int3   
   14000d2ed:	int3   
   14000d2ee:	int3   
   14000d2ef:	int3   
   14000d2f0:	rex push rbx
   14000d2f2:	sub    rsp,0x20
   14000d2f6:	cmp    QWORD PTR [rcx+0x18],0x0
   14000d2fb:	mov    rbx,rdx
   14000d2fe:	je     0x14000d313
   14000d300:	mov    rcx,QWORD PTR [rcx+0x18]
   14000d304:	mov    rax,QWORD PTR [rcx]
   14000d307:	call   QWORD PTR [rax+0x38]
   14000d30a:	mov    rax,rbx
   14000d30d:	add    rsp,0x20
   14000d311:	pop    rbx
   14000d312:	ret    
   14000d313:	mov    rcx,QWORD PTR [rcx+0x10]
   14000d317:	mov    rax,QWORD PTR [rcx]
   14000d31a:	call   QWORD PTR [rax+0x38]
   14000d31d:	mov    rax,rbx
   14000d320:	add    rsp,0x20
   14000d324:	pop    rbx
   14000d325:	ret    
   14000d326:	int3   
   14000d327:	int3   
   14000d328:	int3   
   14000d329:	int3   
   14000d32a:	int3   
   14000d32b:	int3   
   14000d32c:	int3   
   14000d32d:	int3   
   14000d32e:	int3   
   14000d32f:	int3   
   14000d330:	rex push rbx
   14000d332:	sub    rsp,0x20
   14000d336:	mov    rcx,QWORD PTR [rcx+0x10]
   14000d33a:	mov    rbx,rdx
   14000d33d:	mov    rax,QWORD PTR [rcx]
   14000d340:	call   QWORD PTR [rax+0x38]
   14000d343:	mov    rax,rbx
   14000d346:	add    rsp,0x20
   14000d34a:	pop    rbx
   14000d34b:	ret    
   14000d34c:	int3   
   14000d34d:	int3   
   14000d34e:	int3   
   14000d34f:	int3   
   14000d350:	mov    QWORD PTR [rcx+0x10],rdx
   14000d354:	mov    QWORD PTR [rcx+0x18],r8
   14000d358:	mov    QWORD PTR [rcx+0x20],r9
   14000d35c:	lea    rax,[rip+0x14515]        # 0x140021878
   14000d363:	mov    QWORD PTR [rcx],rax
   14000d366:	xor    eax,eax
   14000d368:	mov    DWORD PTR [rcx+0x28],eax
   14000d36b:	mov    DWORD PTR [rcx+0x2c],eax
   14000d36e:	mov    DWORD PTR [rcx+0x30],eax
   14000d371:	mov    DWORD PTR [rcx+0x34],eax
   14000d374:	mov    DWORD PTR [rcx+0x38],eax
   14000d377:	mov    DWORD PTR [rcx+0x3c],eax
   14000d37a:	mov    DWORD PTR [rcx+0x40],eax
   14000d37d:	mov    DWORD PTR [rcx+0x44],eax
   14000d380:	mov    DWORD PTR [rcx+0x8],0xc
   14000d387:	mov    rax,rcx
   14000d38a:	ret    
   14000d38b:	int3   
   14000d38c:	int3   
   14000d38d:	int3   
   14000d38e:	int3   
   14000d38f:	int3   
   14000d390:	rex push rbx
   14000d392:	sub    rsp,0x20
   14000d396:	mov    rcx,QWORD PTR [rcx+0x18]
   14000d39a:	mov    rbx,rdx
   14000d39d:	mov    rax,QWORD PTR [rcx]
   14000d3a0:	call   QWORD PTR [rax+0x38]
   14000d3a3:	mov    rax,rbx
   14000d3a6:	add    rsp,0x20
   14000d3aa:	pop    rbx
   14000d3ab:	ret    
   14000d3ac:	int3   
   14000d3ad:	int3   
   14000d3ae:	int3   
   14000d3af:	int3   
   14000d3b0:	xor    r9d,r9d
   14000d3b3:	lea    rax,[rip+0x1464e]        # 0x140021a08
   14000d3ba:	mov    QWORD PTR [rcx],rax
   14000d3bd:	mov    DWORD PTR [rcx+0x8],r9d
   14000d3c1:	mov    rax,QWORD PTR [rdx]
   14000d3c4:	mov    QWORD PTR [rcx+0x10],rax
   14000d3c8:	mov    eax,DWORD PTR [rdx+0x8]
   14000d3cb:	mov    DWORD PTR [rcx+0x18],eax
   14000d3ce:	mov    eax,DWORD PTR [rdx+0xc]
   14000d3d1:	mov    DWORD PTR [rcx+0x1c],eax
   14000d3d4:	mov    QWORD PTR [rcx+0x20],r8
   14000d3d8:	mov    BYTE PTR [rcx+0x28],r9b
   14000d3dc:	mov    DWORD PTR [rcx+0x2c],r9d
   14000d3e0:	mov    DWORD PTR [rcx+0x30],r9d
   14000d3e4:	mov    DWORD PTR [rcx+0x34],r9d
   14000d3e8:	mov    DWORD PTR [rcx+0x38],r9d
   14000d3ec:	mov    rax,rcx
   14000d3ef:	mov    DWORD PTR [rcx+0x8],0x48
   14000d3f6:	ret    
   14000d3f7:	int3   
   14000d3f8:	int3   
   14000d3f9:	int3   
   14000d3fa:	int3   
   14000d3fb:	int3   
   14000d3fc:	int3   
   14000d3fd:	int3   
   14000d3fe:	int3   
   14000d3ff:	int3   
   14000d400:	mov    eax,DWORD PTR [rcx+0x2c]
   14000d403:	mov    DWORD PTR [rdx],eax
   14000d405:	mov    eax,DWORD PTR [rcx+0x30]
   14000d408:	mov    DWORD PTR [rdx+0x4],eax
   14000d40b:	mov    eax,DWORD PTR [rcx+0x34]
   14000d40e:	mov    DWORD PTR [rdx+0x8],eax
   14000d411:	mov    eax,DWORD PTR [rcx+0x38]
   14000d414:	mov    DWORD PTR [rdx+0xc],eax
   14000d417:	mov    rax,rdx
   14000d41a:	ret    
   14000d41b:	int3   
   14000d41c:	int3   
   14000d41d:	int3   
   14000d41e:	int3   
   14000d41f:	int3   
   14000d420:	rex push rbx
   14000d422:	sub    rsp,0x30
   14000d426:	cmp    QWORD PTR [rcx+0x20],0x0
   14000d42b:	mov    rbx,rdx
   14000d42e:	je     0x14000d444
   14000d430:	mov    rcx,QWORD PTR [rcx+0x20]
   14000d434:	lea    rdx,[rsp+0x20]
   14000d439:	mov    rax,QWORD PTR [rcx]
   14000d43c:	call   QWORD PTR [rax+0x38]
   14000d43f:	mov    rcx,rax
   14000d442:	jmp    0x14000d448
   14000d444:	add    rcx,0x2c
   14000d448:	mov    eax,DWORD PTR [rcx]
   14000d44a:	mov    DWORD PTR [rbx],eax
   14000d44c:	mov    eax,DWORD PTR [rcx+0x4]
   14000d44f:	mov    DWORD PTR [rbx+0x4],eax
   14000d452:	mov    eax,DWORD PTR [rcx+0x8]
   14000d455:	mov    DWORD PTR [rbx+0x8],eax
   14000d458:	mov    eax,DWORD PTR [rcx+0xc]
   14000d45b:	mov    DWORD PTR [rbx+0xc],eax
   14000d45e:	mov    rax,rbx
   14000d461:	add    rsp,0x30
   14000d465:	pop    rbx
   14000d466:	ret    
   14000d467:	int3   
   14000d468:	int3   
   14000d469:	int3   
   14000d46a:	int3   
   14000d46b:	int3   
   14000d46c:	int3   
   14000d46d:	int3   
   14000d46e:	int3   
   14000d46f:	int3   
   14000d470:	mov    rax,QWORD PTR [rcx+0x18]
   14000d474:	mov    QWORD PTR [rcx+0x18],0x0
   14000d47c:	test   dl,dl
   14000d47e:	je     0x14000d4a1
   14000d480:	mov    rdx,rax
   14000d483:	test   rax,rax
   14000d486:	je     0x14000d4a1
   14000d488:	nop    DWORD PTR [rax+rax*1+0x0]
   14000d490:	mov    rcx,QWORD PTR [rdx+0x10]
   14000d494:	mov    BYTE PTR [rcx+0x28],0x1
   14000d498:	mov    rdx,QWORD PTR [rdx+0x18]
   14000d49c:	test   rdx,rdx
   14000d49f:	jne    0x14000d490
   14000d4a1:	repz ret 
   14000d4a3:	int3   
   14000d4a4:	int3   
   14000d4a5:	int3   
   14000d4a6:	int3   
   14000d4a7:	int3   
   14000d4a8:	int3   
   14000d4a9:	int3   
   14000d4aa:	int3   
   14000d4ab:	int3   
   14000d4ac:	int3   
   14000d4ad:	int3   
   14000d4ae:	int3   
   14000d4af:	int3   
   14000d4b0:	mov    QWORD PTR [rcx+0x10],rdx
   14000d4b4:	mov    QWORD PTR [rcx+0x18],r8
   14000d4b8:	mov    QWORD PTR [rcx+0x20],r9
   14000d4bc:	lea    rax,[rip+0x14685]        # 0x140021b48
   14000d4c3:	mov    QWORD PTR [rcx],rax
   14000d4c6:	xor    eax,eax
   14000d4c8:	mov    DWORD PTR [rcx+0x28],eax
   14000d4cb:	mov    DWORD PTR [rcx+0x2c],eax
   14000d4ce:	mov    DWORD PTR [rcx+0x30],eax
   14000d4d1:	mov    DWORD PTR [rcx+0x34],eax
   14000d4d4:	mov    DWORD PTR [rcx+0x38],eax
   14000d4d7:	mov    DWORD PTR [rcx+0x3c],eax
   14000d4da:	mov    DWORD PTR [rcx+0x40],eax
   14000d4dd:	mov    DWORD PTR [rcx+0x44],eax
   14000d4e0:	mov    DWORD PTR [rcx+0x48],eax
   14000d4e3:	mov    DWORD PTR [rcx+0x4c],eax
   14000d4e6:	mov    DWORD PTR [rcx+0x50],eax
   14000d4e9:	mov    DWORD PTR [rcx+0x54],eax
   14000d4ec:	mov    DWORD PTR [rcx+0x58],eax
   14000d4ef:	mov    DWORD PTR [rcx+0x5c],eax
   14000d4f2:	mov    DWORD PTR [rcx+0x60],eax
   14000d4f5:	mov    DWORD PTR [rcx+0x64],eax
   14000d4f8:	mov    DWORD PTR [rcx+0x8],0x23
   14000d4ff:	mov    rax,rcx
   14000d502:	ret    
   14000d503:	int3   
   14000d504:	int3   
   14000d505:	int3   
   14000d506:	int3   
   14000d507:	int3   
   14000d508:	int3   
   14000d509:	int3   
   14000d50a:	int3   
   14000d50b:	int3   
   14000d50c:	int3   
   14000d50d:	int3   
   14000d50e:	int3   
   14000d50f:	int3   
   14000d510:	mov    QWORD PTR [rcx+0x10],rdx
   14000d514:	mov    QWORD PTR [rcx+0x18],r8
   14000d518:	lea    rax,[rip+0x14679]        # 0x140021b98
   14000d51f:	mov    QWORD PTR [rcx],rax
   14000d522:	xor    eax,eax
   14000d524:	mov    DWORD PTR [rcx+0x20],eax
   14000d527:	mov    DWORD PTR [rcx+0x24],eax
   14000d52a:	mov    DWORD PTR [rcx+0x28],eax
   14000d52d:	mov    DWORD PTR [rcx+0x2c],eax
   14000d530:	mov    DWORD PTR [rcx+0x30],eax
   14000d533:	mov    DWORD PTR [rcx+0x34],eax
   14000d536:	mov    DWORD PTR [rcx+0x38],eax
   14000d539:	mov    DWORD PTR [rcx+0x3c],eax
   14000d53c:	mov    DWORD PTR [rcx+0x40],eax
   14000d53f:	mov    DWORD PTR [rcx+0x44],eax
   14000d542:	mov    DWORD PTR [rcx+0x48],eax
   14000d545:	mov    DWORD PTR [rcx+0x4c],eax
   14000d548:	mov    DWORD PTR [rcx+0x50],eax
   14000d54b:	mov    DWORD PTR [rcx+0x54],eax
   14000d54e:	mov    DWORD PTR [rcx+0x58],eax
   14000d551:	mov    DWORD PTR [rcx+0x5c],eax
   14000d554:	mov    DWORD PTR [rcx+0x60],eax
   14000d557:	mov    DWORD PTR [rcx+0x64],eax
   14000d55a:	mov    DWORD PTR [rcx+0x68],eax
   14000d55d:	mov    DWORD PTR [rcx+0x6c],eax
   14000d560:	mov    DWORD PTR [rcx+0x8],0x11
   14000d567:	mov    rax,rcx
   14000d56a:	ret    
   14000d56b:	int3   
   14000d56c:	int3   
   14000d56d:	int3   
   14000d56e:	int3   
   14000d56f:	int3   
   14000d570:	mov    eax,DWORD PTR [rcx+0x60]
   14000d573:	mov    DWORD PTR [rdx],eax
   14000d575:	mov    eax,DWORD PTR [rcx+0x64]
   14000d578:	mov    DWORD PTR [rdx+0x4],eax
   14000d57b:	mov    eax,DWORD PTR [rcx+0x68]
   14000d57e:	mov    DWORD PTR [rdx+0x8],eax
   14000d581:	mov    eax,DWORD PTR [rcx+0x6c]
   14000d584:	mov    DWORD PTR [rdx+0xc],eax
   14000d587:	mov    rax,rdx
   14000d58a:	ret    
   14000d58b:	int3   
   14000d58c:	int3   
   14000d58d:	int3   
   14000d58e:	int3   
   14000d58f:	int3   
   14000d590:	mov    QWORD PTR [rcx+0x10],rdx
   14000d594:	mov    QWORD PTR [rcx+0x18],r8
   14000d598:	lea    rax,[rip+0x14649]        # 0x140021be8
   14000d59f:	mov    QWORD PTR [rcx],rax
   14000d5a2:	xor    eax,eax
   14000d5a4:	mov    DWORD PTR [rcx+0x20],eax
   14000d5a7:	mov    DWORD PTR [rcx+0x24],eax
   14000d5aa:	mov    DWORD PTR [rcx+0x28],eax
   14000d5ad:	mov    DWORD PTR [rcx+0x2c],eax
   14000d5b0:	mov    DWORD PTR [rcx+0x30],eax
   14000d5b3:	mov    DWORD PTR [rcx+0x34],eax
   14000d5b6:	mov    DWORD PTR [rcx+0x38],eax
   14000d5b9:	mov    DWORD PTR [rcx+0x3c],eax
   14000d5bc:	mov    DWORD PTR [rcx+0x40],eax
   14000d5bf:	mov    DWORD PTR [rcx+0x44],eax
   14000d5c2:	mov    DWORD PTR [rcx+0x48],eax
   14000d5c5:	mov    DWORD PTR [rcx+0x4c],eax
   14000d5c8:	mov    DWORD PTR [rcx+0x8],0x4c
   14000d5cf:	mov    rax,rcx
   14000d5d2:	ret    
   14000d5d3:	int3   
   14000d5d4:	int3   
   14000d5d5:	int3   
   14000d5d6:	int3   
   14000d5d7:	int3   
   14000d5d8:	int3   
   14000d5d9:	int3   
   14000d5da:	int3   
   14000d5db:	int3   
   14000d5dc:	int3   
   14000d5dd:	int3   
   14000d5de:	int3   
   14000d5df:	int3   
   14000d5e0:	mov    eax,DWORD PTR [rcx+0x20]
   14000d5e3:	mov    DWORD PTR [rdx],eax
   14000d5e5:	mov    eax,DWORD PTR [rcx+0x24]
   14000d5e8:	mov    DWORD PTR [rdx+0x4],eax
   14000d5eb:	mov    eax,DWORD PTR [rcx+0x28]
   14000d5ee:	mov    DWORD PTR [rdx+0x8],eax
   14000d5f1:	mov    eax,DWORD PTR [rcx+0x2c]
   14000d5f4:	mov    DWORD PTR [rdx+0xc],eax
   14000d5f7:	mov    rax,rdx
   14000d5fa:	ret    
   14000d5fb:	int3   
   14000d5fc:	int3   
   14000d5fd:	int3   
   14000d5fe:	int3   
   14000d5ff:	int3   
   14000d600:	mov    QWORD PTR [rcx+0x10],rdx
   14000d604:	mov    QWORD PTR [rcx+0x18],r8
   14000d608:	mov    QWORD PTR [rcx+0x20],r9
   14000d60c:	lea    rax,[rip+0x14625]        # 0x140021c38
   14000d613:	mov    QWORD PTR [rcx],rax
   14000d616:	mov    rax,QWORD PTR [rsp+0x28]
   14000d61b:	mov    QWORD PTR [rcx+0x28],rax
   14000d61f:	xor    eax,eax
   14000d621:	mov    DWORD PTR [rcx+0x30],eax
   14000d624:	mov    DWORD PTR [rcx+0x34],eax
   14000d627:	mov    DWORD PTR [rcx+0x38],eax
   14000d62a:	mov    DWORD PTR [rcx+0x3c],eax
   14000d62d:	mov    DWORD PTR [rcx+0x40],eax
   14000d630:	mov    DWORD PTR [rcx+0x44],eax
   14000d633:	mov    DWORD PTR [rcx+0x48],eax
   14000d636:	mov    DWORD PTR [rcx+0x4c],eax
   14000d639:	mov    DWORD PTR [rcx+0x50],eax
   14000d63c:	mov    DWORD PTR [rcx+0x54],eax
   14000d63f:	mov    DWORD PTR [rcx+0x58],eax
   14000d642:	mov    DWORD PTR [rcx+0x5c],eax
   14000d645:	mov    DWORD PTR [rcx+0x60],eax
   14000d648:	mov    DWORD PTR [rcx+0x64],eax
   14000d64b:	mov    DWORD PTR [rcx+0x68],eax
   14000d64e:	mov    DWORD PTR [rcx+0x6c],eax
   14000d651:	mov    DWORD PTR [rcx+0x70],eax
   14000d654:	mov    DWORD PTR [rcx+0x74],eax
   14000d657:	mov    DWORD PTR [rcx+0x78],eax
   14000d65a:	mov    DWORD PTR [rcx+0x7c],eax
   14000d65d:	mov    DWORD PTR [rcx+0x8],0x1b
   14000d664:	mov    rax,rcx
   14000d667:	ret    
   14000d668:	int3   
   14000d669:	int3   
   14000d66a:	int3   
   14000d66b:	int3   
   14000d66c:	int3   
   14000d66d:	int3   
   14000d66e:	int3   
   14000d66f:	int3   
   14000d670:	rex push rbx
   14000d672:	sub    rsp,0x20
   14000d676:	mov    rcx,QWORD PTR [rcx+0x28]
   14000d67a:	mov    rbx,rdx
   14000d67d:	mov    rax,QWORD PTR [rcx]
   14000d680:	call   QWORD PTR [rax+0x38]
   14000d683:	mov    rax,rbx
   14000d686:	add    rsp,0x20
   14000d68a:	pop    rbx
   14000d68b:	ret    
   14000d68c:	int3   
   14000d68d:	int3   
   14000d68e:	int3   
   14000d68f:	int3   
   14000d690:	mov    QWORD PTR [rcx+0x10],rdx
   14000d694:	mov    QWORD PTR [rcx+0x18],r8
   14000d698:	mov    QWORD PTR [rcx+0x20],r9
   14000d69c:	lea    rax,[rip+0x145e5]        # 0x140021c88
   14000d6a3:	mov    QWORD PTR [rcx],rax
   14000d6a6:	mov    rax,QWORD PTR [rsp+0x28]
   14000d6ab:	mov    QWORD PTR [rcx+0x28],rax
   14000d6af:	xor    eax,eax
   14000d6b1:	mov    DWORD PTR [rcx+0x30],eax
   14000d6b4:	mov    DWORD PTR [rcx+0x34],eax
   14000d6b7:	mov    DWORD PTR [rcx+0x38],eax
   14000d6ba:	mov    DWORD PTR [rcx+0x3c],eax
   14000d6bd:	mov    DWORD PTR [rcx+0x40],eax
   14000d6c0:	mov    DWORD PTR [rcx+0x44],eax
   14000d6c3:	mov    DWORD PTR [rcx+0x48],eax
   14000d6c6:	mov    DWORD PTR [rcx+0x4c],eax
   14000d6c9:	mov    DWORD PTR [rcx+0x50],eax
   14000d6cc:	mov    DWORD PTR [rcx+0x54],eax
   14000d6cf:	mov    DWORD PTR [rcx+0x58],eax
   14000d6d2:	mov    DWORD PTR [rcx+0x5c],eax
   14000d6d5:	mov    DWORD PTR [rcx+0x60],eax
   14000d6d8:	mov    DWORD PTR [rcx+0x64],eax
   14000d6db:	mov    DWORD PTR [rcx+0x68],eax
   14000d6de:	mov    DWORD PTR [rcx+0x6c],eax
   14000d6e1:	mov    DWORD PTR [rcx+0x70],eax
   14000d6e4:	mov    DWORD PTR [rcx+0x74],eax
   14000d6e7:	mov    DWORD PTR [rcx+0x78],eax
   14000d6ea:	mov    DWORD PTR [rcx+0x7c],eax
   14000d6ed:	mov    DWORD PTR [rcx+0x80],eax
   14000d6f3:	mov    DWORD PTR [rcx+0x84],eax
   14000d6f9:	mov    DWORD PTR [rcx+0x88],eax
   14000d6ff:	mov    DWORD PTR [rcx+0x8c],eax
   14000d705:	mov    DWORD PTR [rcx+0x8],0x26
   14000d70c:	mov    rax,rcx
   14000d70f:	ret    
   14000d710:	mov    QWORD PTR [rcx+0x10],rdx
   14000d714:	mov    QWORD PTR [rcx+0x18],r8
   14000d718:	mov    QWORD PTR [rcx+0x20],r9
   14000d71c:	lea    rax,[rip+0x145b5]        # 0x140021cd8
   14000d723:	mov    QWORD PTR [rcx],rax
   14000d726:	xor    eax,eax
   14000d728:	mov    DWORD PTR [rcx+0x28],eax
   14000d72b:	mov    DWORD PTR [rcx+0x2c],eax
   14000d72e:	mov    DWORD PTR [rcx+0x30],eax
   14000d731:	mov    DWORD PTR [rcx+0x34],eax
   14000d734:	mov    DWORD PTR [rcx+0x38],eax
   14000d737:	mov    DWORD PTR [rcx+0x3c],eax
   14000d73a:	mov    DWORD PTR [rcx+0x40],eax
   14000d73d:	mov    DWORD PTR [rcx+0x44],eax
   14000d740:	mov    DWORD PTR [rcx+0x48],eax
   14000d743:	mov    DWORD PTR [rcx+0x4c],eax
   14000d746:	mov    DWORD PTR [rcx+0x50],eax
   14000d749:	mov    DWORD PTR [rcx+0x54],eax
   14000d74c:	mov    DWORD PTR [rcx+0x58],eax
   14000d74f:	mov    DWORD PTR [rcx+0x5c],eax
   14000d752:	mov    DWORD PTR [rcx+0x60],eax
   14000d755:	mov    DWORD PTR [rcx+0x64],eax
   14000d758:	mov    DWORD PTR [rcx+0x8],0x1a
   14000d75f:	mov    rax,rcx
   14000d762:	ret    
   14000d763:	int3   
   14000d764:	int3   
   14000d765:	int3   
   14000d766:	int3   
   14000d767:	int3   
   14000d768:	int3   
   14000d769:	int3   
   14000d76a:	int3   
   14000d76b:	int3   
   14000d76c:	int3   
   14000d76d:	int3   
   14000d76e:	int3   
   14000d76f:	int3   
   14000d770:	mov    QWORD PTR [rcx+0x10],rdx
   14000d774:	mov    QWORD PTR [rcx+0x18],r8
   14000d778:	mov    QWORD PTR [rcx+0x20],r9
   14000d77c:	lea    rax,[rip+0x145a5]        # 0x140021d28
   14000d783:	mov    QWORD PTR [rcx],rax
   14000d786:	xor    eax,eax
   14000d788:	mov    DWORD PTR [rcx+0x28],eax
   14000d78b:	mov    DWORD PTR [rcx+0x2c],eax
   14000d78e:	mov    DWORD PTR [rcx+0x30],eax
   14000d791:	mov    DWORD PTR [rcx+0x34],eax
   14000d794:	mov    DWORD PTR [rcx+0x38],eax
   14000d797:	mov    DWORD PTR [rcx+0x3c],eax
   14000d79a:	mov    DWORD PTR [rcx+0x40],eax
   14000d79d:	mov    DWORD PTR [rcx+0x44],eax
   14000d7a0:	mov    DWORD PTR [rcx+0x48],eax
   14000d7a3:	mov    DWORD PTR [rcx+0x4c],eax
   14000d7a6:	mov    DWORD PTR [rcx+0x50],eax
   14000d7a9:	mov    DWORD PTR [rcx+0x54],eax
   14000d7ac:	mov    DWORD PTR [rcx+0x58],eax
   14000d7af:	mov    DWORD PTR [rcx+0x5c],eax
   14000d7b2:	mov    DWORD PTR [rcx+0x60],eax
   14000d7b5:	mov    DWORD PTR [rcx+0x64],eax
   14000d7b8:	mov    DWORD PTR [rcx+0x68],eax
   14000d7bb:	mov    DWORD PTR [rcx+0x6c],eax
   14000d7be:	mov    DWORD PTR [rcx+0x70],eax
   14000d7c1:	mov    DWORD PTR [rcx+0x74],eax
   14000d7c4:	mov    DWORD PTR [rcx+0x8],0x25
   14000d7cb:	mov    rax,rcx
   14000d7ce:	ret    
   14000d7cf:	int3   
   14000d7d0:	xor    r8d,r8d
   14000d7d3:	lea    rax,[rip+0x1459e]        # 0x140021d78
   14000d7da:	mov    QWORD PTR [rcx],rax
   14000d7dd:	mov    DWORD PTR [rcx+0x8],r8d
   14000d7e1:	mov    rax,QWORD PTR [rdx]
   14000d7e4:	mov    QWORD PTR [rcx+0x10],rax
   14000d7e8:	mov    eax,DWORD PTR [rdx+0x8]
   14000d7eb:	mov    DWORD PTR [rcx+0x18],eax
   14000d7ee:	mov    eax,DWORD PTR [rdx+0xc]
   14000d7f1:	mov    DWORD PTR [rcx+0x1c],eax
   14000d7f4:	mov    DWORD PTR [rcx+0x20],r8d
   14000d7f8:	mov    DWORD PTR [rcx+0x24],r8d
   14000d7fc:	mov    DWORD PTR [rcx+0x28],r8d
   14000d800:	mov    DWORD PTR [rcx+0x2c],r8d
   14000d804:	mov    DWORD PTR [rcx+0x30],r8d
   14000d808:	mov    DWORD PTR [rcx+0x34],r8d
   14000d80c:	mov    DWORD PTR [rcx+0x38],r8d
   14000d810:	mov    DWORD PTR [rcx+0x3c],r8d
   14000d814:	mov    DWORD PTR [rcx+0x40],r8d
   14000d818:	mov    DWORD PTR [rcx+0x44],r8d
   14000d81c:	mov    DWORD PTR [rcx+0x48],r8d
   14000d820:	mov    DWORD PTR [rcx+0x4c],r8d
   14000d824:	mov    rax,rcx
   14000d827:	mov    DWORD PTR [rcx+0x8],0xd
   14000d82e:	ret    
   14000d82f:	int3   
   14000d830:	xor    r8d,r8d
   14000d833:	lea    rax,[rip+0x1458e]        # 0x140021dc8
   14000d83a:	mov    QWORD PTR [rcx],rax
   14000d83d:	mov    DWORD PTR [rcx+0x8],r8d
   14000d841:	mov    rax,QWORD PTR [rdx]
   14000d844:	mov    QWORD PTR [rcx+0x10],rax
   14000d848:	mov    eax,DWORD PTR [rdx+0x8]
   14000d84b:	mov    DWORD PTR [rcx+0x18],eax
   14000d84e:	mov    eax,DWORD PTR [rdx+0xc]
   14000d851:	mov    DWORD PTR [rcx+0x1c],eax
   14000d854:	mov    DWORD PTR [rcx+0x20],r8d
   14000d858:	mov    DWORD PTR [rcx+0x24],r8d
   14000d85c:	mov    DWORD PTR [rcx+0x28],r8d
   14000d860:	mov    DWORD PTR [rcx+0x2c],r8d
   14000d864:	mov    DWORD PTR [rcx+0x30],r8d
   14000d868:	mov    DWORD PTR [rcx+0x34],r8d
   14000d86c:	mov    DWORD PTR [rcx+0x38],r8d
   14000d870:	mov    DWORD PTR [rcx+0x3c],r8d
   14000d874:	mov    DWORD PTR [rcx+0x40],r8d
   14000d878:	mov    DWORD PTR [rcx+0x44],r8d
   14000d87c:	mov    DWORD PTR [rcx+0x48],r8d
   14000d880:	mov    DWORD PTR [rcx+0x4c],r8d
   14000d884:	mov    rax,rcx
   14000d887:	mov    DWORD PTR [rcx+0x8],0x6
   14000d88e:	ret    
   14000d88f:	int3   
   14000d890:	mov    eax,DWORD PTR [rcx+0x40]
   14000d893:	mov    DWORD PTR [rdx],eax
   14000d895:	mov    eax,DWORD PTR [rcx+0x44]
   14000d898:	mov    DWORD PTR [rdx+0x4],eax
   14000d89b:	mov    eax,DWORD PTR [rcx+0x48]
   14000d89e:	mov    DWORD PTR [rdx+0x8],eax
   14000d8a1:	mov    eax,DWORD PTR [rcx+0x4c]
   14000d8a4:	mov    DWORD PTR [rdx+0xc],eax
   14000d8a7:	mov    rax,rdx
   14000d8aa:	ret    
   14000d8ab:	int3   
   14000d8ac:	int3   
   14000d8ad:	int3   
   14000d8ae:	int3   
   14000d8af:	int3   
   14000d8b0:	mov    QWORD PTR [rcx+0x10],rdx
   14000d8b4:	lea    rax,[rip+0x1455d]        # 0x140021e18
   14000d8bb:	mov    QWORD PTR [rcx],rax
   14000d8be:	xor    eax,eax
   14000d8c0:	mov    DWORD PTR [rcx+0x18],eax
   14000d8c3:	mov    DWORD PTR [rcx+0x1c],eax
   14000d8c6:	mov    DWORD PTR [rcx+0x20],eax
   14000d8c9:	mov    DWORD PTR [rcx+0x24],eax
   14000d8cc:	mov    DWORD PTR [rcx+0x28],eax
   14000d8cf:	mov    DWORD PTR [rcx+0x2c],eax
   14000d8d2:	mov    DWORD PTR [rcx+0x30],eax
   14000d8d5:	mov    DWORD PTR [rcx+0x34],eax
   14000d8d8:	mov    DWORD PTR [rcx+0x8],0x38
   14000d8df:	mov    rax,rcx
   14000d8e2:	ret    
   14000d8e3:	int3   
   14000d8e4:	int3   
   14000d8e5:	int3   
   14000d8e6:	int3   
   14000d8e7:	int3   
   14000d8e8:	int3   
   14000d8e9:	int3   
   14000d8ea:	int3   
   14000d8eb:	int3   
   14000d8ec:	int3   
   14000d8ed:	int3   
   14000d8ee:	int3   
   14000d8ef:	int3   
   14000d8f0:	mov    QWORD PTR [rcx+0x10],rdx
   14000d8f4:	mov    QWORD PTR [rcx+0x18],r8
   14000d8f8:	lea    rax,[rip+0x14569]        # 0x140021e68
   14000d8ff:	mov    QWORD PTR [rcx],rax
   14000d902:	xor    eax,eax
   14000d904:	mov    DWORD PTR [rcx+0x20],eax
   14000d907:	mov    DWORD PTR [rcx+0x24],eax
   14000d90a:	mov    DWORD PTR [rcx+0x28],eax
   14000d90d:	mov    DWORD PTR [rcx+0x2c],eax
   14000d910:	mov    DWORD PTR [rcx+0x30],eax
   14000d913:	mov    DWORD PTR [rcx+0x34],eax
   14000d916:	mov    DWORD PTR [rcx+0x38],eax
   14000d919:	mov    DWORD PTR [rcx+0x3c],eax
   14000d91c:	mov    DWORD PTR [rcx+0x40],eax
   14000d91f:	mov    DWORD PTR [rcx+0x44],eax
   14000d922:	mov    DWORD PTR [rcx+0x48],eax
   14000d925:	mov    DWORD PTR [rcx+0x4c],eax
   14000d928:	mov    DWORD PTR [rcx+0x8],0x4d
   14000d92f:	mov    rax,rcx
   14000d932:	ret    
   14000d933:	int3   
   14000d934:	int3   
   14000d935:	int3   
   14000d936:	int3   
   14000d937:	int3   
   14000d938:	int3   
   14000d939:	int3   
   14000d93a:	int3   
   14000d93b:	int3   
   14000d93c:	int3   
   14000d93d:	int3   
   14000d93e:	int3   
   14000d93f:	int3   
   14000d940:	mov    QWORD PTR [rcx+0x10],rdx
   14000d944:	mov    QWORD PTR [rcx+0x18],r8
   14000d948:	mov    QWORD PTR [rcx+0x20],r9
   14000d94c:	lea    rax,[rip+0x14565]        # 0x140021eb8
   14000d953:	mov    QWORD PTR [rcx],rax
   14000d956:	xor    eax,eax
   14000d958:	mov    DWORD PTR [rcx+0x28],eax
   14000d95b:	mov    DWORD PTR [rcx+0x2c],eax
   14000d95e:	mov    DWORD PTR [rcx+0x30],eax
   14000d961:	mov    DWORD PTR [rcx+0x34],eax
   14000d964:	mov    DWORD PTR [rcx+0x38],eax
   14000d967:	mov    DWORD PTR [rcx+0x3c],eax
   14000d96a:	mov    DWORD PTR [rcx+0x40],eax
   14000d96d:	mov    DWORD PTR [rcx+0x44],eax
   14000d970:	mov    DWORD PTR [rcx+0x8],0x8
   14000d977:	mov    rax,rcx
   14000d97a:	ret    
   14000d97b:	int3   
   14000d97c:	int3   
   14000d97d:	int3   
   14000d97e:	int3   
   14000d97f:	int3   
   14000d980:	mov    eax,DWORD PTR [rcx+0x38]
   14000d983:	mov    DWORD PTR [rdx],eax
   14000d985:	mov    eax,DWORD PTR [rcx+0x3c]
   14000d988:	mov    DWORD PTR [rdx+0x4],eax
   14000d98b:	mov    eax,DWORD PTR [rcx+0x40]
   14000d98e:	mov    DWORD PTR [rdx+0x8],eax
   14000d991:	mov    eax,DWORD PTR [rcx+0x44]
   14000d994:	mov    DWORD PTR [rdx+0xc],eax
   14000d997:	mov    rax,rdx
   14000d99a:	ret    
   14000d99b:	int3   
   14000d99c:	int3   
   14000d99d:	int3   
   14000d99e:	int3   
   14000d99f:	int3   
   14000d9a0:	mov    QWORD PTR [rcx+0x10],rdx
   14000d9a4:	mov    QWORD PTR [rcx+0x18],r8
   14000d9a8:	lea    rax,[rip+0x14559]        # 0x140021f08
   14000d9af:	mov    QWORD PTR [rcx],rax
   14000d9b2:	xor    eax,eax
   14000d9b4:	mov    DWORD PTR [rcx+0x20],eax
   14000d9b7:	mov    DWORD PTR [rcx+0x24],eax
   14000d9ba:	mov    DWORD PTR [rcx+0x28],eax
   14000d9bd:	mov    DWORD PTR [rcx+0x2c],eax
   14000d9c0:	mov    DWORD PTR [rcx+0x30],eax
   14000d9c3:	mov    DWORD PTR [rcx+0x34],eax
   14000d9c6:	mov    DWORD PTR [rcx+0x38],eax
   14000d9c9:	mov    DWORD PTR [rcx+0x3c],eax
   14000d9cc:	mov    DWORD PTR [rcx+0x40],eax
   14000d9cf:	mov    DWORD PTR [rcx+0x44],eax
   14000d9d2:	mov    DWORD PTR [rcx+0x48],eax
   14000d9d5:	mov    DWORD PTR [rcx+0x4c],eax
   14000d9d8:	mov    DWORD PTR [rcx+0x8],0x3f
   14000d9df:	mov    rax,rcx
   14000d9e2:	ret    
   14000d9e3:	int3   
   14000d9e4:	int3   
   14000d9e5:	int3   
   14000d9e6:	int3   
   14000d9e7:	int3   
   14000d9e8:	int3   
   14000d9e9:	int3   
   14000d9ea:	int3   
   14000d9eb:	int3   
   14000d9ec:	int3   
   14000d9ed:	int3   
   14000d9ee:	int3   
   14000d9ef:	int3   
   14000d9f0:	mov    r8,QWORD PTR [rcx+0x18]
   14000d9f4:	mov    eax,DWORD PTR [r8+0x38]
   14000d9f8:	mov    DWORD PTR [rdx],eax
   14000d9fa:	mov    eax,DWORD PTR [r8+0x3c]
   14000d9fe:	mov    DWORD PTR [rdx+0x4],eax
   14000da01:	mov    eax,DWORD PTR [r8+0x40]
   14000da05:	mov    DWORD PTR [rdx+0x8],eax
   14000da08:	mov    eax,DWORD PTR [r8+0x44]
   14000da0c:	mov    DWORD PTR [rdx+0xc],eax
   14000da0f:	mov    rax,rdx
   14000da12:	ret    
   14000da13:	int3   
   14000da14:	int3   
   14000da15:	int3   
   14000da16:	int3   
   14000da17:	int3   
   14000da18:	int3   
   14000da19:	int3   
   14000da1a:	int3   
   14000da1b:	int3   
   14000da1c:	int3   
   14000da1d:	int3   
   14000da1e:	int3   
   14000da1f:	int3   
   14000da20:	mov    QWORD PTR [rcx+0x10],rdx
   14000da24:	mov    QWORD PTR [rcx+0x18],r8
   14000da28:	lea    rax,[rip+0x14529]        # 0x140021f58
   14000da2f:	mov    QWORD PTR [rcx],rax
   14000da32:	xor    eax,eax
   14000da34:	mov    DWORD PTR [rcx+0x20],eax
   14000da37:	mov    DWORD PTR [rcx+0x24],eax
   14000da3a:	mov    DWORD PTR [rcx+0x28],eax
   14000da3d:	mov    DWORD PTR [rcx+0x2c],eax
   14000da40:	mov    DWORD PTR [rcx+0x30],eax
   14000da43:	mov    DWORD PTR [rcx+0x34],eax
   14000da46:	mov    DWORD PTR [rcx+0x38],eax
   14000da49:	mov    DWORD PTR [rcx+0x3c],eax
   14000da4c:	mov    DWORD PTR [rcx+0x8],0x9
   14000da53:	mov    rax,rcx
   14000da56:	ret    
   14000da57:	int3   
   14000da58:	int3   
   14000da59:	int3   
   14000da5a:	int3   
   14000da5b:	int3   
   14000da5c:	int3   
   14000da5d:	int3   
   14000da5e:	int3   
   14000da5f:	int3   
   14000da60:	rex push rbx
   14000da62:	sub    rsp,0x30
   14000da66:	cmp    QWORD PTR [rcx+0x18],0x0
   14000da6b:	mov    rbx,rdx
   14000da6e:	je     0x14000da84
   14000da70:	mov    rcx,QWORD PTR [rcx+0x18]
   14000da74:	lea    rdx,[rsp+0x20]
   14000da79:	mov    rax,QWORD PTR [rcx]
   14000da7c:	call   QWORD PTR [rax+0x38]
   14000da7f:	mov    rcx,rax
   14000da82:	jmp    0x14000da88
   14000da84:	add    rcx,0x30
   14000da88:	mov    eax,DWORD PTR [rcx]
   14000da8a:	mov    DWORD PTR [rbx],eax
   14000da8c:	mov    eax,DWORD PTR [rcx+0x4]
   14000da8f:	mov    DWORD PTR [rbx+0x4],eax
   14000da92:	mov    eax,DWORD PTR [rcx+0x8]
   14000da95:	mov    DWORD PTR [rbx+0x8],eax
   14000da98:	mov    eax,DWORD PTR [rcx+0xc]
   14000da9b:	mov    DWORD PTR [rbx+0xc],eax
   14000da9e:	mov    rax,rbx
   14000daa1:	add    rsp,0x30
   14000daa5:	pop    rbx
   14000daa6:	ret    
   14000daa7:	int3   
   14000daa8:	int3   
   14000daa9:	int3   
   14000daaa:	int3   
   14000daab:	int3   
   14000daac:	int3   
   14000daad:	int3   
   14000daae:	int3   
   14000daaf:	int3   
   14000dab0:	mov    QWORD PTR [rcx+0x10],rdx
   14000dab4:	lea    rax,[rip+0x1453d]        # 0x140021ff8
   14000dabb:	mov    QWORD PTR [rcx],rax
   14000dabe:	xor    eax,eax
   14000dac0:	mov    DWORD PTR [rcx+0x18],eax
   14000dac3:	mov    DWORD PTR [rcx+0x1c],eax
   14000dac6:	mov    DWORD PTR [rcx+0x20],eax
   14000dac9:	mov    DWORD PTR [rcx+0x24],eax
   14000dacc:	mov    DWORD PTR [rcx+0x28],eax
   14000dacf:	mov    DWORD PTR [rcx+0x2c],eax
   14000dad2:	mov    DWORD PTR [rcx+0x30],eax
   14000dad5:	mov    DWORD PTR [rcx+0x34],eax
   14000dad8:	mov    DWORD PTR [rcx+0x8],0xf
   14000dadf:	mov    rax,rcx
   14000dae2:	ret    
   14000dae3:	int3   
   14000dae4:	int3   
   14000dae5:	int3   
   14000dae6:	int3   
   14000dae7:	int3   
   14000dae8:	int3   
   14000dae9:	int3   
   14000daea:	int3   
   14000daeb:	int3   
   14000daec:	int3   
   14000daed:	int3   
   14000daee:	int3   
   14000daef:	int3   
   14000daf0:	rex push rbx
   14000daf2:	sub    rsp,0x30
   14000daf6:	cmp    QWORD PTR [rcx+0x10],0x0
   14000dafb:	mov    rbx,rdx
   14000dafe:	je     0x14000db14
   14000db00:	mov    rcx,QWORD PTR [rcx+0x10]
   14000db04:	lea    rdx,[rsp+0x20]
   14000db09:	mov    rax,QWORD PTR [rcx]
   14000db0c:	call   QWORD PTR [rax+0x38]
   14000db0f:	mov    rcx,rax
   14000db12:	jmp    0x14000db18
   14000db14:	add    rcx,0x28
   14000db18:	mov    eax,DWORD PTR [rcx]
   14000db1a:	mov    DWORD PTR [rbx],eax
   14000db1c:	mov    eax,DWORD PTR [rcx+0x4]
   14000db1f:	mov    DWORD PTR [rbx+0x4],eax
   14000db22:	mov    eax,DWORD PTR [rcx+0x8]
   14000db25:	mov    DWORD PTR [rbx+0x8],eax
   14000db28:	mov    eax,DWORD PTR [rcx+0xc]
   14000db2b:	mov    DWORD PTR [rbx+0xc],eax
   14000db2e:	mov    rax,rbx
   14000db31:	add    rsp,0x30
   14000db35:	pop    rbx
   14000db36:	ret    
   14000db37:	int3   
   14000db38:	int3   
   14000db39:	int3   
   14000db3a:	int3   
   14000db3b:	int3   
   14000db3c:	int3   
   14000db3d:	int3   
   14000db3e:	int3   
   14000db3f:	int3   
   14000db40:	xor    r9d,r9d
   14000db43:	lea    rax,[rip+0x144fe]        # 0x140022048
   14000db4a:	mov    QWORD PTR [rcx],rax
   14000db4d:	mov    DWORD PTR [rcx+0x8],r9d
   14000db51:	mov    rax,QWORD PTR [rdx]
   14000db54:	mov    QWORD PTR [rcx+0x10],rax
   14000db58:	mov    eax,DWORD PTR [rdx+0x8]
   14000db5b:	mov    DWORD PTR [rcx+0x18],eax
   14000db5e:	mov    eax,DWORD PTR [rdx+0xc]
   14000db61:	mov    DWORD PTR [rcx+0x1c],eax
   14000db64:	mov    QWORD PTR [rcx+0x20],r8
   14000db68:	mov    DWORD PTR [rcx+0x28],r9d
   14000db6c:	mov    DWORD PTR [rcx+0x2c],r9d
   14000db70:	mov    DWORD PTR [rcx+0x30],r9d
   14000db74:	mov    DWORD PTR [rcx+0x34],r9d
   14000db78:	mov    DWORD PTR [rcx+0x38],r9d
   14000db7c:	mov    DWORD PTR [rcx+0x3c],r9d
   14000db80:	mov    DWORD PTR [rcx+0x40],r9d
   14000db84:	mov    DWORD PTR [rcx+0x44],r9d
   14000db88:	mov    rax,rcx
   14000db8b:	mov    DWORD PTR [rcx+0x8],0x24
   14000db92:	ret    
   14000db93:	int3   
   14000db94:	int3   
   14000db95:	int3   
   14000db96:	int3   
   14000db97:	int3   
   14000db98:	int3   
   14000db99:	int3   
   14000db9a:	int3   
   14000db9b:	int3   
   14000db9c:	int3   
   14000db9d:	int3   
   14000db9e:	int3   
   14000db9f:	int3   
   14000dba0:	mov    QWORD PTR [rcx+0x10],rdx
   14000dba4:	lea    rax,[rip+0x144ed]        # 0x140022098
   14000dbab:	mov    QWORD PTR [rcx],rax
   14000dbae:	xor    eax,eax
   14000dbb0:	mov    DWORD PTR [rcx+0x18],eax
   14000dbb3:	mov    DWORD PTR [rcx+0x1c],eax
   14000dbb6:	mov    DWORD PTR [rcx+0x20],eax
   14000dbb9:	mov    DWORD PTR [rcx+0x24],eax
   14000dbbc:	mov    DWORD PTR [rcx+0x28],eax
   14000dbbf:	mov    DWORD PTR [rcx+0x2c],eax
   14000dbc2:	mov    DWORD PTR [rcx+0x30],eax
   14000dbc5:	mov    DWORD PTR [rcx+0x34],eax
   14000dbc8:	mov    DWORD PTR [rcx+0x8],0x41
   14000dbcf:	mov    rax,rcx
   14000dbd2:	ret    
   14000dbd3:	int3   
   14000dbd4:	int3   
   14000dbd5:	int3   
   14000dbd6:	int3   
   14000dbd7:	int3   
   14000dbd8:	int3   
   14000dbd9:	int3   
   14000dbda:	int3   
   14000dbdb:	int3   
   14000dbdc:	int3   
   14000dbdd:	int3   
   14000dbde:	int3   
   14000dbdf:	int3   
   14000dbe0:	xor    r9d,r9d
   14000dbe3:	lea    rax,[rip+0x144fe]        # 0x1400220e8
   14000dbea:	mov    QWORD PTR [rcx],rax
   14000dbed:	mov    DWORD PTR [rcx+0x8],r9d
   14000dbf1:	mov    rax,QWORD PTR [rdx]
   14000dbf4:	mov    QWORD PTR [rcx+0x10],rax
   14000dbf8:	mov    eax,DWORD PTR [rdx+0x8]
   14000dbfb:	mov    DWORD PTR [rcx+0x18],eax
   14000dbfe:	mov    eax,DWORD PTR [rdx+0xc]
   14000dc01:	mov    DWORD PTR [rcx+0x1c],eax
   14000dc04:	mov    QWORD PTR [rcx+0x20],r8
   14000dc08:	mov    DWORD PTR [rcx+0x28],r9d
   14000dc0c:	mov    DWORD PTR [rcx+0x2c],r9d
   14000dc10:	mov    DWORD PTR [rcx+0x30],r9d
   14000dc14:	mov    DWORD PTR [rcx+0x34],r9d
   14000dc18:	mov    DWORD PTR [rcx+0x38],r9d
   14000dc1c:	mov    DWORD PTR [rcx+0x3c],r9d
   14000dc20:	mov    DWORD PTR [rcx+0x40],r9d
   14000dc24:	mov    DWORD PTR [rcx+0x44],r9d
   14000dc28:	mov    DWORD PTR [rcx+0x48],r9d
   14000dc2c:	mov    DWORD PTR [rcx+0x4c],r9d
   14000dc30:	mov    DWORD PTR [rcx+0x50],r9d
   14000dc34:	mov    DWORD PTR [rcx+0x54],r9d
   14000dc38:	mov    DWORD PTR [rcx+0x58],r9d
   14000dc3c:	mov    DWORD PTR [rcx+0x5c],r9d
   14000dc40:	mov    DWORD PTR [rcx+0x60],r9d
   14000dc44:	mov    DWORD PTR [rcx+0x64],r9d
   14000dc48:	mov    DWORD PTR [rcx+0x8],0xb
   14000dc4f:	mov    rax,rcx
   14000dc52:	ret    
   14000dc53:	int3   
   14000dc54:	int3   
   14000dc55:	int3   
   14000dc56:	int3   
   14000dc57:	int3   
   14000dc58:	int3   
   14000dc59:	int3   
   14000dc5a:	int3   
   14000dc5b:	int3   
   14000dc5c:	int3   
   14000dc5d:	int3   
   14000dc5e:	int3   
   14000dc5f:	int3   
   14000dc60:	mov    eax,DWORD PTR [rcx+0x28]
   14000dc63:	mov    DWORD PTR [rdx],eax
   14000dc65:	mov    eax,DWORD PTR [rcx+0x2c]
   14000dc68:	mov    DWORD PTR [rdx+0x4],eax
   14000dc6b:	mov    eax,DWORD PTR [rcx+0x30]
   14000dc6e:	mov    DWORD PTR [rdx+0x8],eax
   14000dc71:	mov    eax,DWORD PTR [rcx+0x34]
   14000dc74:	mov    DWORD PTR [rdx+0xc],eax
   14000dc77:	mov    rax,rdx
   14000dc7a:	ret    
   14000dc7b:	int3   
   14000dc7c:	int3   
   14000dc7d:	int3   
   14000dc7e:	int3   
   14000dc7f:	int3   
   14000dc80:	rex push rbx
   14000dc82:	sub    rsp,0x20
   14000dc86:	mov    rcx,QWORD PTR [rcx+0x20]
   14000dc8a:	mov    rbx,rdx
   14000dc8d:	mov    rax,QWORD PTR [rcx]
   14000dc90:	call   QWORD PTR [rax+0x38]
   14000dc93:	mov    rax,rbx
   14000dc96:	add    rsp,0x20
   14000dc9a:	pop    rbx
   14000dc9b:	ret    
   14000dc9c:	int3   
   14000dc9d:	int3   
   14000dc9e:	int3   
   14000dc9f:	int3   
   14000dca0:	rex push rbx
   14000dca2:	sub    rsp,0x20
   14000dca6:	mov    rax,QWORD PTR [rcx+0x20]
   14000dcaa:	mov    rbx,rdx
   14000dcad:	test   rax,rax
   14000dcb0:	je     0x14000dcd6
   14000dcb2:	mov    rcx,QWORD PTR [rax+0x10]
   14000dcb6:	mov    eax,DWORD PTR [rcx+0x28]
   14000dcb9:	mov    DWORD PTR [rdx],eax
   14000dcbb:	mov    eax,DWORD PTR [rcx+0x2c]
   14000dcbe:	mov    DWORD PTR [rdx+0x4],eax
   14000dcc1:	mov    eax,DWORD PTR [rcx+0x30]
   14000dcc4:	mov    DWORD PTR [rdx+0x8],eax
   14000dcc7:	mov    eax,DWORD PTR [rcx+0x34]
   14000dcca:	mov    DWORD PTR [rdx+0xc],eax
   14000dccd:	mov    rax,rdx
   14000dcd0:	add    rsp,0x20
   14000dcd4:	pop    rbx
   14000dcd5:	ret    
   14000dcd6:	mov    rax,QWORD PTR [rcx+0x18]
   14000dcda:	test   rax,rax
   14000dcdd:	je     0x14000dd03
   14000dcdf:	mov    rcx,QWORD PTR [rax+0x20]
   14000dce3:	mov    eax,DWORD PTR [rcx+0x28]
   14000dce6:	mov    DWORD PTR [rdx],eax
   14000dce8:	mov    eax,DWORD PTR [rcx+0x2c]
   14000dceb:	mov    DWORD PTR [rdx+0x4],eax
   14000dcee:	mov    eax,DWORD PTR [rcx+0x30]
   14000dcf1:	mov    DWORD PTR [rdx+0x8],eax
   14000dcf4:	mov    eax,DWORD PTR [rcx+0x34]
   14000dcf7:	mov    DWORD PTR [rdx+0xc],eax
   14000dcfa:	mov    rax,rbx
   14000dcfd:	add    rsp,0x20
   14000dd01:	pop    rbx
   14000dd02:	ret    
   14000dd03:	mov    rcx,QWORD PTR [rcx+0x10]
   14000dd07:	mov    rax,QWORD PTR [rcx]
   14000dd0a:	call   QWORD PTR [rax+0x38]
   14000dd0d:	mov    rax,rbx
   14000dd10:	add    rsp,0x20
   14000dd14:	pop    rbx
   14000dd15:	ret    
   14000dd16:	int3   
   14000dd17:	int3   
   14000dd18:	int3   
   14000dd19:	int3   
   14000dd1a:	int3   
   14000dd1b:	int3   
   14000dd1c:	int3   
   14000dd1d:	int3   
   14000dd1e:	int3   
   14000dd1f:	int3   
   14000dd20:	xor    r10d,r10d
   14000dd23:	lea    rax,[rip+0x144ae]        # 0x1400221d8
   14000dd2a:	mov    QWORD PTR [rcx],rax
   14000dd2d:	mov    DWORD PTR [rcx+0x8],r10d
   14000dd31:	mov    rax,QWORD PTR [rdx]
   14000dd34:	mov    QWORD PTR [rcx+0x10],rax
   14000dd38:	mov    eax,DWORD PTR [rdx+0x8]
   14000dd3b:	mov    DWORD PTR [rcx+0x18],eax
   14000dd3e:	mov    eax,DWORD PTR [rdx+0xc]
   14000dd41:	mov    DWORD PTR [rcx+0x1c],eax
   14000dd44:	mov    QWORD PTR [rcx+0x20],r8
   14000dd48:	mov    QWORD PTR [rcx+0x28],r9
   14000dd4c:	mov    DWORD PTR [rcx+0x30],r10d
   14000dd50:	mov    DWORD PTR [rcx+0x34],r10d
   14000dd54:	mov    DWORD PTR [rcx+0x38],r10d
   14000dd58:	mov    DWORD PTR [rcx+0x3c],r10d
   14000dd5c:	mov    DWORD PTR [rcx+0x40],r10d
   14000dd60:	mov    DWORD PTR [rcx+0x44],r10d
   14000dd64:	mov    DWORD PTR [rcx+0x48],r10d
   14000dd68:	mov    DWORD PTR [rcx+0x4c],r10d
   14000dd6c:	mov    DWORD PTR [rcx+0x50],r10d
   14000dd70:	mov    DWORD PTR [rcx+0x54],r10d
   14000dd74:	mov    DWORD PTR [rcx+0x58],r10d
   14000dd78:	mov    DWORD PTR [rcx+0x5c],r10d
   14000dd7c:	mov    DWORD PTR [rcx+0x60],r10d
   14000dd80:	mov    DWORD PTR [rcx+0x64],r10d
   14000dd84:	mov    DWORD PTR [rcx+0x68],r10d
   14000dd88:	mov    DWORD PTR [rcx+0x6c],r10d
   14000dd8c:	mov    DWORD PTR [rcx+0x70],r10d
   14000dd90:	mov    DWORD PTR [rcx+0x74],r10d
   14000dd94:	mov    DWORD PTR [rcx+0x78],r10d
   14000dd98:	mov    DWORD PTR [rcx+0x7c],r10d
   14000dd9c:	mov    DWORD PTR [rcx+0x80],r10d
   14000dda3:	mov    DWORD PTR [rcx+0x84],r10d
   14000ddaa:	mov    DWORD PTR [rcx+0x88],r10d
   14000ddb1:	mov    DWORD PTR [rcx+0x8c],r10d
   14000ddb8:	mov    DWORD PTR [rcx+0x8],0x1f
   14000ddbf:	mov    rax,rcx
   14000ddc2:	ret    
   14000ddc3:	int3   
   14000ddc4:	int3   
   14000ddc5:	int3   
   14000ddc6:	int3   
   14000ddc7:	int3   
   14000ddc8:	int3   
   14000ddc9:	int3   
   14000ddca:	int3   
   14000ddcb:	int3   
   14000ddcc:	int3   
   14000ddcd:	int3   
   14000ddce:	int3   
   14000ddcf:	int3   
   14000ddd0:	mov    eax,DWORD PTR [rcx+0x80]
   14000ddd6:	mov    DWORD PTR [rdx],eax
   14000ddd8:	mov    eax,DWORD PTR [rcx+0x84]
   14000ddde:	mov    DWORD PTR [rdx+0x4],eax
   14000dde1:	mov    eax,DWORD PTR [rcx+0x88]
   14000dde7:	mov    DWORD PTR [rdx+0x8],eax
   14000ddea:	mov    eax,DWORD PTR [rcx+0x8c]
   14000ddf0:	mov    DWORD PTR [rdx+0xc],eax
   14000ddf3:	mov    rax,rdx
   14000ddf6:	ret    
   14000ddf7:	int3   
   14000ddf8:	int3   
   14000ddf9:	int3   
   14000ddfa:	int3   
   14000ddfb:	int3   
   14000ddfc:	int3   
   14000ddfd:	int3   
   14000ddfe:	int3   
   14000ddff:	int3   
   14000de00:	xor    r10d,r10d
   14000de03:	lea    rax,[rip+0x143ce]        # 0x1400221d8
   14000de0a:	mov    QWORD PTR [rcx],rax
   14000de0d:	mov    DWORD PTR [rcx+0x8],r10d
   14000de11:	mov    rax,QWORD PTR [rdx]
   14000de14:	mov    QWORD PTR [rcx+0x10],rax
   14000de18:	mov    eax,DWORD PTR [rdx+0x8]
   14000de1b:	mov    DWORD PTR [rcx+0x18],eax
   14000de1e:	mov    eax,DWORD PTR [rdx+0xc]
   14000de21:	mov    DWORD PTR [rcx+0x1c],eax
   14000de24:	mov    QWORD PTR [rcx+0x20],r8
   14000de28:	mov    QWORD PTR [rcx+0x28],r9
   14000de2c:	mov    DWORD PTR [rcx+0x30],r10d
   14000de30:	mov    DWORD PTR [rcx+0x34],r10d
   14000de34:	mov    DWORD PTR [rcx+0x38],r10d
   14000de38:	mov    DWORD PTR [rcx+0x3c],r10d
   14000de3c:	mov    DWORD PTR [rcx+0x40],r10d
   14000de40:	mov    DWORD PTR [rcx+0x44],r10d
   14000de44:	mov    DWORD PTR [rcx+0x48],r10d
   14000de48:	mov    DWORD PTR [rcx+0x4c],r10d
   14000de4c:	mov    DWORD PTR [rcx+0x50],r10d
   14000de50:	mov    DWORD PTR [rcx+0x54],r10d
   14000de54:	mov    DWORD PTR [rcx+0x58],r10d
   14000de58:	mov    DWORD PTR [rcx+0x5c],r10d
   14000de5c:	mov    DWORD PTR [rcx+0x60],r10d
   14000de60:	mov    DWORD PTR [rcx+0x64],r10d
   14000de64:	mov    DWORD PTR [rcx+0x68],r10d
   14000de68:	mov    DWORD PTR [rcx+0x6c],r10d
   14000de6c:	mov    DWORD PTR [rcx+0x70],r10d
   14000de70:	mov    DWORD PTR [rcx+0x74],r10d
   14000de74:	mov    DWORD PTR [rcx+0x78],r10d
   14000de78:	mov    DWORD PTR [rcx+0x7c],r10d
   14000de7c:	lea    rax,[rip+0x143a5]        # 0x140022228
   14000de83:	mov    DWORD PTR [rcx+0x80],r10d
   14000de8a:	mov    DWORD PTR [rcx+0x84],r10d
   14000de91:	mov    DWORD PTR [rcx+0x88],r10d
   14000de98:	mov    DWORD PTR [rcx+0x8c],r10d
   14000de9f:	mov    QWORD PTR [rcx],rax
   14000dea2:	mov    rax,rcx
   14000dea5:	mov    DWORD PTR [rcx+0x8],0x1e
   14000deac:	ret    
   14000dead:	int3   
   14000deae:	int3   
   14000deaf:	int3   
   14000deb0:	xor    r8d,r8d
   14000deb3:	lea    rax,[rip+0x143be]        # 0x140022278
   14000deba:	mov    QWORD PTR [rcx],rax
   14000debd:	mov    DWORD PTR [rcx+0x8],r8d
   14000dec1:	mov    rax,QWORD PTR [rdx]
   14000dec4:	mov    QWORD PTR [rcx+0x10],rax
   14000dec8:	mov    eax,DWORD PTR [rdx+0x8]
   14000decb:	mov    DWORD PTR [rcx+0x18],eax
   14000dece:	mov    eax,DWORD PTR [rdx+0xc]
   14000ded1:	mov    DWORD PTR [rcx+0x1c],eax
   14000ded4:	mov    QWORD PTR [rcx+0x20],rcx
   14000ded8:	mov    DWORD PTR [rcx+0x28],r8d
   14000dedc:	mov    DWORD PTR [rcx+0x2c],r8d
   14000dee0:	mov    DWORD PTR [rcx+0x30],r8d
   14000dee4:	mov    DWORD PTR [rcx+0x34],r8d
   14000dee8:	mov    DWORD PTR [rcx+0x38],r8d
   14000deec:	mov    DWORD PTR [rcx+0x3c],r8d
   14000def0:	mov    DWORD PTR [rcx+0x40],r8d
   14000def4:	mov    DWORD PTR [rcx+0x44],r8d
   14000def8:	mov    rax,rcx
   14000defb:	mov    DWORD PTR [rcx+0x8],0x1c
   14000df02:	ret    
   14000df03:	int3   
   14000df04:	int3   
   14000df05:	int3   
   14000df06:	int3   
   14000df07:	int3   
   14000df08:	int3   
   14000df09:	int3   
   14000df0a:	int3   
   14000df0b:	int3   
   14000df0c:	int3   
   14000df0d:	int3   
   14000df0e:	int3   
   14000df0f:	int3   
   14000df10:	xor    r9d,r9d
   14000df13:	lea    rax,[rip+0x1435e]        # 0x140022278
   14000df1a:	mov    QWORD PTR [rcx],rax
   14000df1d:	mov    DWORD PTR [rcx+0x8],r9d
   14000df21:	mov    rax,QWORD PTR [r8]
   14000df24:	mov    QWORD PTR [rcx+0x10],rax
   14000df28:	mov    eax,DWORD PTR [r8+0x8]
   14000df2c:	mov    DWORD PTR [rcx+0x18],eax
   14000df2f:	mov    eax,DWORD PTR [r8+0xc]
   14000df33:	mov    DWORD PTR [rcx+0x1c],eax
   14000df36:	mov    DWORD PTR [rcx+0x28],r9d
   14000df3a:	mov    DWORD PTR [rcx+0x2c],r9d
   14000df3e:	mov    DWORD PTR [rcx+0x30],r9d
   14000df42:	mov    DWORD PTR [rcx+0x34],r9d
   14000df46:	mov    DWORD PTR [rcx+0x38],r9d
   14000df4a:	mov    DWORD PTR [rcx+0x3c],r9d
   14000df4e:	mov    DWORD PTR [rcx+0x40],r9d
   14000df52:	mov    DWORD PTR [rcx+0x44],r9d
   14000df56:	mov    DWORD PTR [rcx+0x8],0x1c
   14000df5d:	mov    rax,QWORD PTR [rdx+0x20]
   14000df61:	mov    QWORD PTR [rcx+0x20],rax
   14000df65:	mov    QWORD PTR [rdx+0x20],rcx
   14000df69:	mov    rax,rcx
   14000df6c:	ret    
   14000df6d:	int3   
   14000df6e:	int3   
   14000df6f:	int3   
   14000df70:	rex push rbx
   14000df72:	sub    rsp,0x30
   14000df76:	cmp    QWORD PTR [rcx+0x20],0x0
   14000df7b:	mov    rbx,rdx
   14000df7e:	je     0x14000df94
   14000df80:	mov    rcx,QWORD PTR [rcx+0x20]
   14000df84:	lea    rdx,[rsp+0x20]
   14000df89:	mov    rax,QWORD PTR [rcx]
   14000df8c:	call   QWORD PTR [rax+0x38]
   14000df8f:	mov    rcx,rax
   14000df92:	jmp    0x14000df98
   14000df94:	add    rcx,0x38
   14000df98:	mov    eax,DWORD PTR [rcx]
   14000df9a:	mov    DWORD PTR [rbx],eax
   14000df9c:	mov    eax,DWORD PTR [rcx+0x4]
   14000df9f:	mov    DWORD PTR [rbx+0x4],eax
   14000dfa2:	mov    eax,DWORD PTR [rcx+0x8]
   14000dfa5:	mov    DWORD PTR [rbx+0x8],eax
   14000dfa8:	mov    eax,DWORD PTR [rcx+0xc]
   14000dfab:	mov    DWORD PTR [rbx+0xc],eax
   14000dfae:	mov    rax,rbx
   14000dfb1:	add    rsp,0x30
   14000dfb5:	pop    rbx
   14000dfb6:	ret    
   14000dfb7:	int3   
   14000dfb8:	int3   
   14000dfb9:	int3   
   14000dfba:	int3   
   14000dfbb:	int3   
   14000dfbc:	int3   
   14000dfbd:	int3   
   14000dfbe:	int3   
   14000dfbf:	int3   
   14000dfc0:	rex push rbx
   14000dfc2:	sub    rsp,0x30
   14000dfc6:	cmp    QWORD PTR [rcx+0x10],0x0
   14000dfcb:	mov    rbx,rdx
   14000dfce:	je     0x14000dfe4
   14000dfd0:	mov    rcx,QWORD PTR [rcx+0x10]
   14000dfd4:	lea    rdx,[rsp+0x20]
   14000dfd9:	mov    rax,QWORD PTR [rcx]
   14000dfdc:	call   QWORD PTR [rax+0x30]
   14000dfdf:	mov    r11,rax
   14000dfe2:	jmp    0x14000dffb
   14000dfe4:	xor    eax,eax
   14000dfe6:	lea    r11,[rsp+0x20]
   14000dfeb:	mov    DWORD PTR [rsp+0x20],eax
   14000dfef:	mov    DWORD PTR [rsp+0x24],eax
   14000dff3:	mov    DWORD PTR [rsp+0x28],eax
   14000dff7:	mov    DWORD PTR [rsp+0x2c],eax
   14000dffb:	mov    eax,DWORD PTR [r11]
   14000dffe:	mov    DWORD PTR [rbx],eax
   14000e000:	mov    eax,DWORD PTR [r11+0x4]
   14000e004:	mov    DWORD PTR [rbx+0x4],eax
   14000e007:	mov    eax,DWORD PTR [r11+0x8]
   14000e00b:	mov    DWORD PTR [rbx+0x8],eax
   14000e00e:	mov    eax,DWORD PTR [r11+0xc]
   14000e012:	mov    DWORD PTR [rbx+0xc],eax
   14000e015:	mov    rax,rbx
   14000e018:	add    rsp,0x30
   14000e01c:	pop    rbx
   14000e01d:	ret    
   14000e01e:	int3   
   14000e01f:	int3   
   14000e020:	rex push rbx
   14000e022:	sub    rsp,0x30
   14000e026:	cmp    QWORD PTR [rcx+0x10],0x0
   14000e02b:	mov    rbx,rdx
   14000e02e:	je     0x14000e044
   14000e030:	mov    rcx,QWORD PTR [rcx+0x10]
   14000e034:	lea    rdx,[rsp+0x20]
   14000e039:	mov    rax,QWORD PTR [rcx]
   14000e03c:	call   QWORD PTR [rax+0x38]
   14000e03f:	mov    r11,rax
   14000e042:	jmp    0x14000e05b
   14000e044:	xor    eax,eax
   14000e046:	lea    r11,[rsp+0x20]
   14000e04b:	mov    DWORD PTR [rsp+0x20],eax
   14000e04f:	mov    DWORD PTR [rsp+0x24],eax
   14000e053:	mov    DWORD PTR [rsp+0x28],eax
   14000e057:	mov    DWORD PTR [rsp+0x2c],eax
   14000e05b:	mov    eax,DWORD PTR [r11]
   14000e05e:	mov    DWORD PTR [rbx],eax
   14000e060:	mov    eax,DWORD PTR [r11+0x4]
   14000e064:	mov    DWORD PTR [rbx+0x4],eax
   14000e067:	mov    eax,DWORD PTR [r11+0x8]
   14000e06b:	mov    DWORD PTR [rbx+0x8],eax
   14000e06e:	mov    eax,DWORD PTR [r11+0xc]
   14000e072:	mov    DWORD PTR [rbx+0xc],eax
   14000e075:	mov    rax,rbx
   14000e078:	add    rsp,0x30
   14000e07c:	pop    rbx
   14000e07d:	ret    
   14000e07e:	int3   
   14000e07f:	int3   
   14000e080:	lea    rax,[rip+0x143d1]        # 0x140022458
   14000e087:	mov    QWORD PTR [rcx],rax
   14000e08a:	xor    eax,eax
   14000e08c:	mov    DWORD PTR [rcx+0x10],eax
   14000e08f:	mov    DWORD PTR [rcx+0x14],eax
   14000e092:	mov    DWORD PTR [rcx+0x18],eax
   14000e095:	mov    DWORD PTR [rcx+0x1c],eax
   14000e098:	mov    DWORD PTR [rcx+0x20],eax
   14000e09b:	mov    DWORD PTR [rcx+0x24],eax
   14000e09e:	mov    DWORD PTR [rcx+0x28],eax
   14000e0a1:	mov    DWORD PTR [rcx+0x2c],eax
   14000e0a4:	mov    DWORD PTR [rcx+0x8],0xe
   14000e0ab:	mov    rax,rcx
   14000e0ae:	ret    
   14000e0af:	int3   
   14000e0b0:	mov    QWORD PTR [rcx+0x10],rcx
   14000e0b4:	xor    r8d,r8d
   14000e0b7:	lea    rax,[rip+0x143ea]        # 0x1400224a8
   14000e0be:	mov    QWORD PTR [rcx],rax
   14000e0c1:	mov    DWORD PTR [rcx+0x8],r8d
   14000e0c5:	mov    rax,QWORD PTR [rdx]
   14000e0c8:	mov    QWORD PTR [rcx+0x18],rax
   14000e0cc:	mov    eax,DWORD PTR [rdx+0x8]
   14000e0cf:	mov    DWORD PTR [rcx+0x20],eax
   14000e0d2:	mov    eax,DWORD PTR [rdx+0xc]
   14000e0d5:	mov    DWORD PTR [rcx+0x24],eax
   14000e0d8:	mov    DWORD PTR [rcx+0x28],r8d
   14000e0dc:	mov    DWORD PTR [rcx+0x2c],r8d
   14000e0e0:	mov    DWORD PTR [rcx+0x30],r8d
   14000e0e4:	mov    DWORD PTR [rcx+0x34],r8d
   14000e0e8:	mov    rax,rcx
   14000e0eb:	mov    DWORD PTR [rcx+0x8],0x5a
   14000e0f2:	ret    
   14000e0f3:	int3   
   14000e0f4:	int3   
   14000e0f5:	int3   
   14000e0f6:	int3   
   14000e0f7:	int3   
   14000e0f8:	int3   
   14000e0f9:	int3   
   14000e0fa:	int3   
   14000e0fb:	int3   
   14000e0fc:	int3   
   14000e0fd:	int3   
   14000e0fe:	int3   
   14000e0ff:	int3   
   14000e100:	xor    r8d,r8d
   14000e103:	lea    rax,[rip+0x143ee]        # 0x1400224f8
   14000e10a:	mov    QWORD PTR [rcx],rax
   14000e10d:	mov    DWORD PTR [rcx+0x8],r8d
   14000e111:	mov    rax,QWORD PTR [rdx]
   14000e114:	mov    QWORD PTR [rcx+0x10],rax
   14000e118:	mov    eax,DWORD PTR [rdx+0x8]
   14000e11b:	mov    DWORD PTR [rcx+0x18],eax
   14000e11e:	mov    eax,DWORD PTR [rdx+0xc]
   14000e121:	mov    DWORD PTR [rcx+0x1c],eax
   14000e124:	mov    QWORD PTR [rcx+0x20],r8
   14000e128:	mov    QWORD PTR [rcx+0x28],r8
   14000e12c:	mov    DWORD PTR [rcx+0x30],r8d
   14000e130:	mov    DWORD PTR [rcx+0x34],r8d
   14000e134:	mov    DWORD PTR [rcx+0x38],r8d
   14000e138:	mov    DWORD PTR [rcx+0x3c],r8d
   14000e13c:	mov    DWORD PTR [rcx+0x40],r8d
   14000e140:	mov    DWORD PTR [rcx+0x44],r8d
   14000e144:	mov    DWORD PTR [rcx+0x48],r8d
   14000e148:	mov    DWORD PTR [rcx+0x4c],r8d
   14000e14c:	mov    DWORD PTR [rcx+0x50],r8d
   14000e150:	mov    DWORD PTR [rcx+0x54],r8d
   14000e154:	mov    DWORD PTR [rcx+0x58],r8d
   14000e158:	mov    DWORD PTR [rcx+0x5c],r8d
   14000e15c:	mov    DWORD PTR [rcx+0x60],r8d
   14000e160:	mov    DWORD PTR [rcx+0x64],r8d
   14000e164:	mov    DWORD PTR [rcx+0x68],r8d
   14000e168:	mov    DWORD PTR [rcx+0x6c],r8d
   14000e16c:	mov    DWORD PTR [rcx+0x70],r8d
   14000e170:	mov    DWORD PTR [rcx+0x74],r8d
   14000e174:	mov    DWORD PTR [rcx+0x78],r8d
   14000e178:	mov    DWORD PTR [rcx+0x7c],r8d
   14000e17c:	mov    DWORD PTR [rcx+0x80],r8d
   14000e183:	mov    DWORD PTR [rcx+0x84],r8d
   14000e18a:	mov    DWORD PTR [rcx+0x88],r8d
   14000e191:	mov    DWORD PTR [rcx+0x8c],r8d
   14000e198:	mov    DWORD PTR [rcx+0x90],r8d
   14000e19f:	mov    DWORD PTR [rcx+0x94],r8d
   14000e1a6:	mov    rax,rcx
   14000e1a9:	mov    DWORD PTR [rcx+0x8],0x50
   14000e1b0:	ret    
   14000e1b1:	int3   
   14000e1b2:	int3   
   14000e1b3:	int3   
   14000e1b4:	int3   
   14000e1b5:	int3   
   14000e1b6:	int3   
   14000e1b7:	int3   
   14000e1b8:	int3   
   14000e1b9:	int3   
   14000e1ba:	int3   
   14000e1bb:	int3   
   14000e1bc:	int3   
   14000e1bd:	int3   
   14000e1be:	int3   
   14000e1bf:	int3   
   14000e1c0:	lea    rax,[rip+0x14331]        # 0x1400224f8
   14000e1c7:	mov    QWORD PTR [rcx],rax
   14000e1ca:	xor    eax,eax
   14000e1cc:	mov    QWORD PTR [rcx+0x10],rax
   14000e1d0:	mov    DWORD PTR [rcx+0x18],eax
   14000e1d3:	mov    DWORD PTR [rcx+0x1c],eax
   14000e1d6:	mov    QWORD PTR [rcx+0x20],rdx
   14000e1da:	mov    QWORD PTR [rcx+0x28],rax
   14000e1de:	mov    DWORD PTR [rcx+0x30],eax
   14000e1e1:	mov    DWORD PTR [rcx+0x34],eax
   14000e1e4:	mov    DWORD PTR [rcx+0x38],eax
   14000e1e7:	mov    DWORD PTR [rcx+0x3c],eax
   14000e1ea:	mov    DWORD PTR [rcx+0x40],eax
   14000e1ed:	mov    DWORD PTR [rcx+0x44],eax
   14000e1f0:	mov    DWORD PTR [rcx+0x48],eax
   14000e1f3:	mov    DWORD PTR [rcx+0x4c],eax
   14000e1f6:	mov    DWORD PTR [rcx+0x50],eax
   14000e1f9:	mov    DWORD PTR [rcx+0x54],eax
   14000e1fc:	mov    DWORD PTR [rcx+0x58],eax
   14000e1ff:	mov    DWORD PTR [rcx+0x5c],eax
   14000e202:	mov    DWORD PTR [rcx+0x60],eax
   14000e205:	mov    DWORD PTR [rcx+0x64],eax
   14000e208:	mov    DWORD PTR [rcx+0x68],eax
   14000e20b:	mov    DWORD PTR [rcx+0x6c],eax
   14000e20e:	mov    DWORD PTR [rcx+0x70],eax
   14000e211:	mov    DWORD PTR [rcx+0x74],eax
   14000e214:	mov    DWORD PTR [rcx+0x78],eax
   14000e217:	mov    DWORD PTR [rcx+0x7c],eax
   14000e21a:	mov    DWORD PTR [rcx+0x80],eax
   14000e220:	mov    DWORD PTR [rcx+0x84],eax
   14000e226:	mov    DWORD PTR [rcx+0x88],eax
   14000e22c:	mov    DWORD PTR [rcx+0x8c],eax
   14000e232:	mov    DWORD PTR [rcx+0x90],eax
   14000e238:	mov    DWORD PTR [rcx+0x94],eax
   14000e23e:	mov    DWORD PTR [rcx+0x8],0x50
   14000e245:	mov    rax,rcx
   14000e248:	ret    
   14000e249:	int3   
   14000e24a:	int3   
   14000e24b:	int3   
   14000e24c:	int3   
   14000e24d:	int3   
   14000e24e:	int3   
   14000e24f:	int3   
   14000e250:	mov    eax,DWORD PTR [rcx+0x88]
   14000e256:	mov    DWORD PTR [rdx],eax
   14000e258:	mov    eax,DWORD PTR [rcx+0x8c]
   14000e25e:	mov    DWORD PTR [rdx+0x4],eax
   14000e261:	mov    eax,DWORD PTR [rcx+0x90]
   14000e267:	mov    DWORD PTR [rdx+0x8],eax
   14000e26a:	mov    eax,DWORD PTR [rcx+0x94]
   14000e270:	mov    DWORD PTR [rdx+0xc],eax
   14000e273:	mov    rax,rdx
   14000e276:	ret    
   14000e277:	int3   
   14000e278:	int3   
   14000e279:	int3   
   14000e27a:	int3   
   14000e27b:	int3   
   14000e27c:	int3   
   14000e27d:	int3   
   14000e27e:	int3   
   14000e27f:	int3   
   14000e280:	rex push rbx
   14000e282:	sub    rsp,0x20
   14000e286:	cmp    QWORD PTR [rcx+0x10],0x0
   14000e28b:	mov    rbx,rdx
   14000e28e:	je     0x14000e2a3
   14000e290:	mov    rcx,QWORD PTR [rcx+0x10]
   14000e294:	mov    rax,QWORD PTR [rcx]
   14000e297:	call   QWORD PTR [rax+0x30]
   14000e29a:	mov    rax,rbx
   14000e29d:	add    rsp,0x20
   14000e2a1:	pop    rbx
   14000e2a2:	ret    
   14000e2a3:	cmp    QWORD PTR [rcx+0x18],0x0
   14000e2a8:	je     0x14000e2bd
   14000e2aa:	mov    rcx,QWORD PTR [rcx+0x18]
   14000e2ae:	mov    rax,QWORD PTR [rcx]
   14000e2b1:	call   QWORD PTR [rax+0x30]
   14000e2b4:	mov    rax,rbx
   14000e2b7:	add    rsp,0x20
   14000e2bb:	pop    rbx
   14000e2bc:	ret    
   14000e2bd:	xor    eax,eax
   14000e2bf:	mov    DWORD PTR [rdx],eax
   14000e2c1:	mov    DWORD PTR [rdx+0x4],eax
   14000e2c4:	mov    DWORD PTR [rdx+0x8],eax
   14000e2c7:	mov    DWORD PTR [rdx+0xc],eax
   14000e2ca:	mov    rax,rbx
   14000e2cd:	add    rsp,0x20
   14000e2d1:	pop    rbx
   14000e2d2:	ret    
   14000e2d3:	int3   
   14000e2d4:	int3   
   14000e2d5:	int3   
   14000e2d6:	int3   
   14000e2d7:	int3   
   14000e2d8:	int3   
   14000e2d9:	int3   
   14000e2da:	int3   
   14000e2db:	int3   
   14000e2dc:	int3   
   14000e2dd:	int3   
   14000e2de:	int3   
   14000e2df:	int3   
   14000e2e0:	rex push rbx
   14000e2e2:	sub    rsp,0x20
   14000e2e6:	cmp    QWORD PTR [rcx+0x18],0x0
   14000e2eb:	mov    rbx,rdx
   14000e2ee:	je     0x14000e303
   14000e2f0:	mov    rcx,QWORD PTR [rcx+0x18]
   14000e2f4:	mov    rax,QWORD PTR [rcx]
   14000e2f7:	call   QWORD PTR [rax+0x38]
   14000e2fa:	mov    rax,rbx
   14000e2fd:	add    rsp,0x20
   14000e301:	pop    rbx
   14000e302:	ret    
   14000e303:	cmp    QWORD PTR [rcx+0x10],0x0
   14000e308:	je     0x14000e31d
   14000e30a:	mov    rcx,QWORD PTR [rcx+0x10]
   14000e30e:	mov    rax,QWORD PTR [rcx]
   14000e311:	call   QWORD PTR [rax+0x38]
   14000e314:	mov    rax,rbx
   14000e317:	add    rsp,0x20
   14000e31b:	pop    rbx
   14000e31c:	ret    
   14000e31d:	xor    eax,eax
   14000e31f:	mov    DWORD PTR [rdx],eax
   14000e321:	mov    DWORD PTR [rdx+0x4],eax
   14000e324:	mov    DWORD PTR [rdx+0x8],eax
   14000e327:	mov    DWORD PTR [rdx+0xc],eax
   14000e32a:	mov    rax,rbx
   14000e32d:	add    rsp,0x20
   14000e331:	pop    rbx
   14000e332:	ret    
   14000e333:	int3   
   14000e334:	int3   
   14000e335:	int3   
   14000e336:	int3   
   14000e337:	int3   
   14000e338:	int3   
   14000e339:	int3   
   14000e33a:	int3   
   14000e33b:	int3   
   14000e33c:	int3   
   14000e33d:	int3   
   14000e33e:	int3   
   14000e33f:	int3   
   14000e340:	rex push rbx
   14000e342:	sub    rsp,0x20
   14000e346:	mov    rcx,QWORD PTR [rcx+0x18]
   14000e34a:	mov    rbx,rdx
   14000e34d:	mov    rax,QWORD PTR [rcx]
   14000e350:	call   QWORD PTR [rax+0x30]
   14000e353:	mov    rax,rbx
   14000e356:	add    rsp,0x20
   14000e35a:	pop    rbx
   14000e35b:	ret    
   14000e35c:	int3   
   14000e35d:	int3   
   14000e35e:	int3   
   14000e35f:	int3   
   14000e360:	rex push rbx
   14000e362:	sub    rsp,0x40
   14000e366:	cmp    QWORD PTR [rcx+0x10],0x0
   14000e36b:	mov    rbx,rdx
   14000e36e:	je     0x14000e37b
   14000e370:	mov    rcx,QWORD PTR [rcx+0x10]
   14000e374:	lea    rdx,[rsp+0x20]
   14000e379:	jmp    0x14000e384
   14000e37b:	mov    rcx,QWORD PTR [rcx+0x18]
   14000e37f:	lea    rdx,[rsp+0x30]
   14000e384:	mov    rax,QWORD PTR [rcx]
   14000e387:	call   QWORD PTR [rax+0x38]
   14000e38a:	mov    r11,rax
   14000e38d:	mov    eax,DWORD PTR [rax]
   14000e38f:	mov    DWORD PTR [rbx],eax
   14000e391:	mov    eax,DWORD PTR [r11+0x4]
   14000e395:	mov    DWORD PTR [rbx+0x4],eax
   14000e398:	mov    eax,DWORD PTR [r11+0x8]
   14000e39c:	mov    DWORD PTR [rbx+0x8],eax
   14000e39f:	mov    eax,DWORD PTR [r11+0xc]
   14000e3a3:	mov    DWORD PTR [rbx+0xc],eax
   14000e3a6:	mov    rax,rbx
   14000e3a9:	add    rsp,0x40
   14000e3ad:	pop    rbx
   14000e3ae:	ret    
   14000e3af:	int3   
   14000e3b0:	xor    r9d,r9d
   14000e3b3:	lea    rax,[rip+0x143be]        # 0x140022778
   14000e3ba:	mov    QWORD PTR [rcx],rax
   14000e3bd:	mov    DWORD PTR [rcx+0x8],r9d
   14000e3c1:	mov    rax,QWORD PTR [rdx]
   14000e3c4:	mov    QWORD PTR [rcx+0x10],rax
   14000e3c8:	mov    eax,DWORD PTR [rdx+0x8]
   14000e3cb:	mov    DWORD PTR [rcx+0x18],eax
   14000e3ce:	mov    eax,DWORD PTR [rdx+0xc]
   14000e3d1:	mov    DWORD PTR [rcx+0x1c],eax
   14000e3d4:	mov    rax,QWORD PTR [r8]
   14000e3d7:	mov    QWORD PTR [rcx+0x20],rax
   14000e3db:	mov    eax,DWORD PTR [r8+0x8]
   14000e3df:	mov    DWORD PTR [rcx+0x28],eax
   14000e3e2:	mov    eax,DWORD PTR [r8+0xc]
   14000e3e6:	mov    DWORD PTR [rcx+0x2c],eax
   14000e3e9:	mov    QWORD PTR [rcx+0x30],rcx
   14000e3ed:	mov    DWORD PTR [rcx+0x38],r9d
   14000e3f1:	mov    DWORD PTR [rcx+0x3c],r9d
   14000e3f5:	mov    DWORD PTR [rcx+0x40],r9d
   14000e3f9:	mov    DWORD PTR [rcx+0x44],r9d
   14000e3fd:	mov    DWORD PTR [rcx+0x48],r9d
   14000e401:	mov    DWORD PTR [rcx+0x4c],r9d
   14000e405:	mov    DWORD PTR [rcx+0x50],r9d
   14000e409:	mov    DWORD PTR [rcx+0x54],r9d
   14000e40d:	mov    DWORD PTR [rcx+0x58],r9d
   14000e411:	mov    DWORD PTR [rcx+0x5c],r9d
   14000e415:	mov    DWORD PTR [rcx+0x60],r9d
   14000e419:	mov    DWORD PTR [rcx+0x64],r9d
   14000e41d:	mov    rax,rcx
   14000e420:	mov    DWORD PTR [rcx+0x8],0x58
   14000e427:	ret    
   14000e428:	int3   
   14000e429:	int3   
   14000e42a:	int3   
   14000e42b:	int3   
   14000e42c:	int3   
   14000e42d:	int3   
   14000e42e:	int3   
   14000e42f:	int3   
   14000e430:	xor    r10d,r10d
   14000e433:	lea    rax,[rip+0x1433e]        # 0x140022778
   14000e43a:	mov    QWORD PTR [rcx],rax
   14000e43d:	mov    DWORD PTR [rcx+0x8],r10d
   14000e441:	mov    rax,QWORD PTR [r8]
   14000e444:	mov    QWORD PTR [rcx+0x10],rax
   14000e448:	mov    eax,DWORD PTR [r8+0x8]
   14000e44c:	mov    DWORD PTR [rcx+0x18],eax
   14000e44f:	mov    eax,DWORD PTR [r8+0xc]
   14000e453:	mov    DWORD PTR [rcx+0x1c],eax
   14000e456:	mov    rax,QWORD PTR [r9]
   14000e459:	mov    QWORD PTR [rcx+0x20],rax
   14000e45d:	mov    eax,DWORD PTR [r9+0x8]
   14000e461:	mov    DWORD PTR [rcx+0x28],eax
   14000e464:	mov    eax,DWORD PTR [r9+0xc]
   14000e468:	mov    DWORD PTR [rcx+0x2c],eax
   14000e46b:	mov    DWORD PTR [rcx+0x38],r10d
   14000e46f:	mov    DWORD PTR [rcx+0x3c],r10d
   14000e473:	mov    DWORD PTR [rcx+0x40],r10d
   14000e477:	mov    DWORD PTR [rcx+0x44],r10d
   14000e47b:	mov    DWORD PTR [rcx+0x48],r10d
   14000e47f:	mov    DWORD PTR [rcx+0x4c],r10d
   14000e483:	mov    DWORD PTR [rcx+0x50],r10d
   14000e487:	mov    DWORD PTR [rcx+0x54],r10d
   14000e48b:	mov    DWORD PTR [rcx+0x58],r10d
   14000e48f:	mov    DWORD PTR [rcx+0x5c],r10d
   14000e493:	mov    DWORD PTR [rcx+0x60],r10d
   14000e497:	mov    DWORD PTR [rcx+0x64],r10d
   14000e49b:	mov    DWORD PTR [rcx+0x8],0x58
   14000e4a2:	mov    rax,QWORD PTR [rdx+0x30]
   14000e4a6:	mov    QWORD PTR [rcx+0x30],rax
   14000e4aa:	mov    QWORD PTR [rdx+0x30],rcx
   14000e4ae:	mov    rax,rcx
   14000e4b1:	ret    
   14000e4b2:	int3   
   14000e4b3:	int3   
   14000e4b4:	int3   
   14000e4b5:	int3   
   14000e4b6:	int3   
   14000e4b7:	int3   
   14000e4b8:	int3   
   14000e4b9:	int3   
   14000e4ba:	int3   
   14000e4bb:	int3   
   14000e4bc:	int3   
   14000e4bd:	int3   
   14000e4be:	int3   
   14000e4bf:	int3   
   14000e4c0:	mov    eax,DWORD PTR [rcx+0x48]
   14000e4c3:	mov    DWORD PTR [rdx],eax
   14000e4c5:	mov    eax,DWORD PTR [rcx+0x4c]
   14000e4c8:	mov    DWORD PTR [rdx+0x4],eax
   14000e4cb:	mov    eax,DWORD PTR [rcx+0x50]
   14000e4ce:	mov    DWORD PTR [rdx+0x8],eax
   14000e4d1:	mov    eax,DWORD PTR [rcx+0x54]
   14000e4d4:	mov    DWORD PTR [rdx+0xc],eax
   14000e4d7:	mov    rax,rdx
   14000e4da:	ret    
   14000e4db:	int3   
   14000e4dc:	int3   
   14000e4dd:	int3   
   14000e4de:	int3   
   14000e4df:	int3   
   14000e4e0:	rex push rbx
   14000e4e2:	sub    rsp,0x30
   14000e4e6:	cmp    QWORD PTR [rcx+0x30],0x0
   14000e4eb:	mov    rbx,rdx
   14000e4ee:	je     0x14000e504
   14000e4f0:	mov    rcx,QWORD PTR [rcx+0x30]
   14000e4f4:	lea    rdx,[rsp+0x20]
   14000e4f9:	mov    rax,QWORD PTR [rcx]
   14000e4fc:	call   QWORD PTR [rax+0x38]
   14000e4ff:	mov    rcx,rax
   14000e502:	jmp    0x14000e508
   14000e504:	add    rcx,0x58
   14000e508:	mov    eax,DWORD PTR [rcx]
   14000e50a:	mov    DWORD PTR [rbx],eax
   14000e50c:	mov    eax,DWORD PTR [rcx+0x4]
   14000e50f:	mov    DWORD PTR [rbx+0x4],eax
   14000e512:	mov    eax,DWORD PTR [rcx+0x8]
   14000e515:	mov    DWORD PTR [rbx+0x8],eax
   14000e518:	mov    eax,DWORD PTR [rcx+0xc]
   14000e51b:	mov    DWORD PTR [rbx+0xc],eax
   14000e51e:	mov    rax,rbx
   14000e521:	add    rsp,0x30
   14000e525:	pop    rbx
   14000e526:	ret    
   14000e527:	int3   
   14000e528:	int3   
   14000e529:	int3   
   14000e52a:	int3   
   14000e52b:	int3   
   14000e52c:	int3   
   14000e52d:	int3   
   14000e52e:	int3   
   14000e52f:	int3   
   14000e530:	mov    r8,QWORD PTR [rcx+0x18]
   14000e534:	mov    eax,DWORD PTR [r8+0x28]
   14000e538:	mov    DWORD PTR [rdx],eax
   14000e53a:	mov    eax,DWORD PTR [r8+0x2c]
   14000e53e:	mov    DWORD PTR [rdx+0x4],eax
   14000e541:	mov    eax,DWORD PTR [r8+0x30]
   14000e545:	mov    DWORD PTR [rdx+0x8],eax
   14000e548:	mov    eax,DWORD PTR [r8+0x34]
   14000e54c:	mov    DWORD PTR [rdx+0xc],eax
   14000e54f:	mov    rax,rdx
   14000e552:	ret    
   14000e553:	int3   
   14000e554:	int3   
   14000e555:	int3   
   14000e556:	int3   
   14000e557:	int3   
   14000e558:	int3   
   14000e559:	int3   
   14000e55a:	int3   
   14000e55b:	int3   
   14000e55c:	int3   
   14000e55d:	int3   
   14000e55e:	int3   
   14000e55f:	int3   
   14000e560:	cmp    BYTE PTR [rcx+0x38],0x0
   14000e564:	je     0x14000e58e
   14000e566:	mov    r8,QWORD PTR [rcx+0x18]
   14000e56a:	test   r8,r8
   14000e56d:	je     0x14000e58e
   14000e56f:	mov    eax,DWORD PTR [r8+0x28]
   14000e573:	mov    DWORD PTR [rdx],eax
   14000e575:	mov    eax,DWORD PTR [r8+0x2c]
   14000e579:	mov    DWORD PTR [rdx+0x4],eax
   14000e57c:	mov    eax,DWORD PTR [r8+0x30]
   14000e580:	mov    DWORD PTR [rdx+0x8],eax
   14000e583:	mov    eax,DWORD PTR [r8+0x34]
   14000e587:	mov    DWORD PTR [rdx+0xc],eax
   14000e58a:	mov    rax,rdx
   14000e58d:	ret    
   14000e58e:	mov    rcx,QWORD PTR [rcx+0x10]
   14000e592:	mov    eax,DWORD PTR [rcx+0x28]
   14000e595:	mov    DWORD PTR [rdx],eax
   14000e597:	mov    eax,DWORD PTR [rcx+0x2c]
   14000e59a:	mov    DWORD PTR [rdx+0x4],eax
   14000e59d:	mov    eax,DWORD PTR [rcx+0x30]
   14000e5a0:	mov    DWORD PTR [rdx+0x8],eax
   14000e5a3:	mov    eax,DWORD PTR [rcx+0x34]
   14000e5a6:	mov    DWORD PTR [rdx+0xc],eax
   14000e5a9:	mov    rax,rdx
   14000e5ac:	ret    
   14000e5ad:	int3   
   14000e5ae:	int3   
   14000e5af:	int3   
   14000e5b0:	mov    r8,QWORD PTR [rcx+0x20]
   14000e5b4:	mov    eax,DWORD PTR [r8+0x28]
   14000e5b8:	mov    DWORD PTR [rdx],eax
   14000e5ba:	mov    eax,DWORD PTR [r8+0x2c]
   14000e5be:	mov    DWORD PTR [rdx+0x4],eax
   14000e5c1:	mov    eax,DWORD PTR [r8+0x30]
   14000e5c5:	mov    DWORD PTR [rdx+0x8],eax
   14000e5c8:	mov    eax,DWORD PTR [r8+0x34]
   14000e5cc:	mov    DWORD PTR [rdx+0xc],eax
   14000e5cf:	mov    rax,rdx
   14000e5d2:	ret    
   14000e5d3:	int3   
   14000e5d4:	int3   
   14000e5d5:	int3   
   14000e5d6:	int3   
   14000e5d7:	int3   
   14000e5d8:	int3   
   14000e5d9:	int3   
   14000e5da:	int3   
   14000e5db:	int3   
   14000e5dc:	int3   
   14000e5dd:	int3   
   14000e5de:	int3   
   14000e5df:	int3   
   14000e5e0:	mov    r8,QWORD PTR [rcx+0x10]
   14000e5e4:	mov    eax,DWORD PTR [r8+0x28]
   14000e5e8:	mov    DWORD PTR [rdx],eax
   14000e5ea:	mov    eax,DWORD PTR [r8+0x2c]
   14000e5ee:	mov    DWORD PTR [rdx+0x4],eax
   14000e5f1:	mov    eax,DWORD PTR [r8+0x30]
   14000e5f5:	mov    DWORD PTR [rdx+0x8],eax
   14000e5f8:	mov    eax,DWORD PTR [r8+0x34]
   14000e5fc:	mov    DWORD PTR [rdx+0xc],eax
   14000e5ff:	mov    rax,rdx
   14000e602:	ret    
   14000e603:	int3   
   14000e604:	int3   
   14000e605:	int3   
   14000e606:	int3   
   14000e607:	int3   
   14000e608:	int3   
   14000e609:	int3   
   14000e60a:	int3   
   14000e60b:	int3   
   14000e60c:	int3   
   14000e60d:	int3   
   14000e60e:	int3   
   14000e60f:	int3   
   14000e610:	mov    QWORD PTR [rsp+0x8],rbx
   14000e615:	mov    QWORD PTR [rsp+0x10],rsi
   14000e61a:	push   rdi
   14000e61b:	sub    rsp,0x20
   14000e61f:	mov    rbx,QWORD PTR [rdx+0x50]
   14000e623:	xor    eax,eax
   14000e625:	mov    rsi,rcx
   14000e628:	mov    DWORD PTR [rcx],eax
   14000e62a:	mov    DWORD PTR [rcx+0x4],eax
   14000e62d:	mov    DWORD PTR [rcx+0x8],eax
   14000e630:	mov    DWORD PTR [rcx+0xc],eax
   14000e633:	lea    rcx,[rdx+0x8]
   14000e637:	mov    rdi,rdx
   14000e63a:	call   QWORD PTR [rip+0x11de0]        # 0x140020420
   14000e640:	mov    rdx,rbx
   14000e643:	sub    rbx,QWORD PTR [rdi+0x48]
   14000e647:	sub    rdx,rax
   14000e64a:	mov    eax,DWORD PTR [rdi+0x84]
   14000e650:	sar    rbx,1
   14000e653:	mov    DWORD PTR [rsi+0x4],eax
   14000e656:	mov    eax,DWORD PTR [rdi+0x88]
   14000e65c:	sar    rdx,1
   14000e65f:	inc    ebx
   14000e661:	mov    DWORD PTR [rsi+0x8],eax
   14000e664:	mov    DWORD PTR [rsi],edx
   14000e666:	mov    DWORD PTR [rsi+0xc],ebx
   14000e669:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e66e:	mov    rax,rsi
   14000e671:	mov    rsi,QWORD PTR [rsp+0x38]
   14000e676:	add    rsp,0x20
   14000e67a:	pop    rdi
   14000e67b:	ret    
   14000e67c:	int3   
   14000e67d:	int3   
   14000e67e:	int3   
   14000e67f:	int3   
   14000e680:	mov    QWORD PTR [rsp+0x8],rbx
   14000e685:	mov    DWORD PTR [rsp+0x10],edx
   14000e689:	push   rbp
   14000e68a:	push   rsi
   14000e68b:	push   rdi
   14000e68c:	push   r12
   14000e68e:	push   r13
   14000e690:	sub    rsp,0x20
   14000e694:	mov    eax,DWORD PTR [rcx+0x4]
   14000e697:	mov    rbp,QWORD PTR [rcx+0x8]
   14000e69b:	mov    rbx,rcx
   14000e69e:	cmp    edx,eax
   14000e6a0:	lea    r9,[rsp+0x58]
   14000e6a5:	lea    rcx,[rsp+0x60]
   14000e6aa:	cmovge r9,rcx
   14000e6ae:	movsxd r12,r8d
   14000e6b1:	xor    r13d,r13d
   14000e6b4:	mov    DWORD PTR [rsp+0x60],eax
   14000e6b8:	mov    edi,DWORD PTR [r9]
   14000e6bb:	mov    esi,edx
   14000e6bd:	cmp    r12d,DWORD PTR [rbx]
   14000e6c0:	je     0x14000e727
   14000e6c2:	cmp    r12d,0x4
   14000e6c6:	jle    0x14000e6da
   14000e6c8:	mov    rcx,r12
   14000e6cb:	shl    rcx,0x4
   14000e6cf:	call   QWORD PTR [rip+0x11afb]        # 0x1400201d0
   14000e6d5:	mov    DWORD PTR [rbx],r12d
   14000e6d8:	jmp    0x14000e6e4
   14000e6da:	lea    rax,[rbx+0x10]
   14000e6de:	mov    DWORD PTR [rbx],0x4
   14000e6e4:	mov    QWORD PTR [rbx+0x8],rax
   14000e6e8:	mov    DWORD PTR [rbx+0x4],r13d
   14000e6ec:	test   edi,edi
   14000e6ee:	jle    0x14000e727
   14000e6f0:	movsxd rcx,DWORD PTR [rbx+0x4]
   14000e6f4:	mov    rax,QWORD PTR [rbx+0x8]
   14000e6f8:	add    rcx,rcx
   14000e6fb:	lea    rdx,[rax+rcx*8]
   14000e6ff:	test   rdx,rdx
   14000e702:	je     0x14000e71f
   14000e704:	mov    eax,DWORD PTR [rbp+rcx*8+0x0]
   14000e708:	mov    DWORD PTR [rdx],eax
   14000e70a:	mov    eax,DWORD PTR [rbp+rcx*8+0x4]
   14000e70e:	mov    DWORD PTR [rdx+0x4],eax
   14000e711:	mov    eax,DWORD PTR [rbp+rcx*8+0x8]
   14000e715:	mov    DWORD PTR [rdx+0x8],eax
   14000e718:	mov    eax,DWORD PTR [rbp+rcx*8+0xc]
   14000e71c:	mov    DWORD PTR [rdx+0xc],eax
   14000e71f:	inc    DWORD PTR [rbx+0x4]
   14000e722:	cmp    DWORD PTR [rbx+0x4],edi
   14000e725:	jl     0x14000e6f0
   14000e727:	lea    rax,[rbx+0x10]
   14000e72b:	mov    DWORD PTR [rbx+0x4],edi
   14000e72e:	cmp    rbp,rax
   14000e731:	je     0x14000e742
   14000e733:	cmp    rbp,QWORD PTR [rbx+0x8]
   14000e737:	je     0x14000e742
   14000e739:	mov    rcx,rbp
   14000e73c:	call   QWORD PTR [rip+0x11aa6]        # 0x1400201e8
   14000e742:	cmp    DWORD PTR [rbx+0x4],esi
   14000e745:	jge    0x14000e77b
   14000e747:	nop    WORD PTR [rax+rax*1+0x0]
   14000e750:	movsxd rax,DWORD PTR [rbx+0x4]
   14000e754:	mov    rcx,rax
   14000e757:	lea    eax,[rax+0x1]
   14000e75a:	shl    rcx,0x4
   14000e75e:	add    rcx,QWORD PTR [rbx+0x8]
   14000e762:	mov    DWORD PTR [rbx+0x4],eax
   14000e765:	je     0x14000e776
   14000e767:	mov    DWORD PTR [rcx],r13d
   14000e76a:	mov    DWORD PTR [rcx+0x4],r13d
   14000e76e:	mov    DWORD PTR [rcx+0x8],r13d
   14000e772:	mov    DWORD PTR [rcx+0xc],r13d
   14000e776:	cmp    DWORD PTR [rbx+0x4],esi
   14000e779:	jl     0x14000e750
   14000e77b:	mov    rbx,QWORD PTR [rsp+0x50]
   14000e780:	add    rsp,0x20
   14000e784:	pop    r13
   14000e786:	pop    r12
   14000e788:	pop    rdi
   14000e789:	pop    rsi
   14000e78a:	pop    rbp
   14000e78b:	ret    
   14000e78c:	int3   
   14000e78d:	int3   
   14000e78e:	int3   
   14000e78f:	int3   
   14000e790:	mov    QWORD PTR [rsp+0x8],rbx
   14000e795:	mov    QWORD PTR [rsp+0x10],rsi
   14000e79a:	push   rdi
   14000e79b:	sub    rsp,0x20
   14000e79f:	mov    ecx,0x20
   14000e7a4:	mov    rsi,r8
   14000e7a7:	mov    rbx,rdx
   14000e7aa:	call   0x14001ee64
   14000e7af:	mov    rdi,rax
   14000e7b2:	test   rax,rax
   14000e7b5:	je     0x14000e7f4
   14000e7b7:	mov    ecx,DWORD PTR [rsi]
   14000e7b9:	lea    rdx,[rsi+0x18]
   14000e7bd:	mov    DWORD PTR [rax],ecx
   14000e7bf:	mov    ecx,DWORD PTR [rsi+0x4]
   14000e7c2:	mov    DWORD PTR [rax+0x4],ecx
   14000e7c5:	mov    ecx,DWORD PTR [rsi+0x8]
   14000e7c8:	mov    DWORD PTR [rax+0x8],ecx
   14000e7cb:	mov    ecx,DWORD PTR [rsi+0xc]
   14000e7ce:	mov    DWORD PTR [rax+0xc],ecx
   14000e7d1:	mov    ecx,DWORD PTR [rsi+0x10]
   14000e7d4:	mov    DWORD PTR [rax+0x10],ecx
   14000e7d7:	lea    rcx,[rax+0x18]
   14000e7db:	call   QWORD PTR [rip+0x11fb7]        # 0x140020798
   14000e7e1:	mov    QWORD PTR [rbx],rdi
   14000e7e4:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e7e9:	mov    rsi,QWORD PTR [rsp+0x38]
   14000e7ee:	add    rsp,0x20
   14000e7f2:	pop    rdi
   14000e7f3:	ret    
   14000e7f4:	mov    rsi,QWORD PTR [rsp+0x38]
   14000e7f9:	mov    QWORD PTR [rbx],0x0
   14000e800:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e805:	add    rsp,0x20
   14000e809:	pop    rdi
   14000e80a:	ret    
   14000e80b:	int3   
   14000e80c:	int3   
   14000e80d:	int3   
   14000e80e:	int3   
   14000e80f:	int3   
   14000e810:	mov    r8,rdx
   14000e813:	lea    rdx,[rcx+0x7]
   14000e817:	mov    rax,QWORD PTR [r8+0x18]
   14000e81b:	and    rdx,0xfffffffffffffff8
   14000e81f:	test   rax,rax
   14000e822:	je     0x14000e833
   14000e824:	lea    rcx,[rax+rdx*1]
   14000e828:	cmp    rcx,QWORD PTR [r8+0x20]
   14000e82c:	jae    0x14000e833
   14000e82e:	mov    QWORD PTR [r8+0x18],rcx
   14000e832:	ret    
   14000e833:	mov    rcx,r8
   14000e836:	jmp    0x14000ccd0
   14000e83b:	int3   
   14000e83c:	int3   
   14000e83d:	int3   
   14000e83e:	int3   
   14000e83f:	int3   
   14000e840:	lea    rax,[rip+0x12451]        # 0x140020c98
   14000e847:	mov    QWORD PTR [rcx],rax
   14000e84a:	mov    rax,rcx
   14000e84d:	ret    
   14000e84e:	int3   
   14000e84f:	int3   
   14000e850:	mov    DWORD PTR [rcx+0x10],0x1
   14000e857:	xor    r9d,r9d
   14000e85a:	lea    rax,[rip+0x140f7]        # 0x140022958
   14000e861:	mov    QWORD PTR [rcx],rax
   14000e864:	mov    DWORD PTR [rcx+0x8],r9d
   14000e868:	mov    QWORD PTR [rcx+0x18],r9
   14000e86c:	mov    DWORD PTR [rcx+0x20],r9d
   14000e870:	mov    DWORD PTR [rcx+0x24],r9d
   14000e874:	mov    rax,QWORD PTR [rdx]
   14000e877:	mov    QWORD PTR [rcx+0x28],rax
   14000e87b:	mov    eax,DWORD PTR [rdx+0x8]
   14000e87e:	mov    DWORD PTR [rcx+0x30],eax
   14000e881:	mov    eax,DWORD PTR [rdx+0xc]
   14000e884:	mov    DWORD PTR [rcx+0x34],eax
   14000e887:	mov    rax,QWORD PTR [r8]
   14000e88a:	mov    QWORD PTR [rcx+0x38],rax
   14000e88e:	mov    eax,DWORD PTR [r8+0x8]
   14000e892:	mov    DWORD PTR [rcx+0x40],eax
   14000e895:	mov    eax,DWORD PTR [r8+0xc]
   14000e899:	mov    DWORD PTR [rcx+0x44],eax
   14000e89c:	mov    QWORD PTR [rcx+0x48],r9
   14000e8a0:	mov    QWORD PTR [rcx+0x50],r9
   14000e8a4:	mov    BYTE PTR [rcx+0x58],r9b
   14000e8a8:	mov    BYTE PTR [rcx+0x59],r9b
   14000e8ac:	mov    QWORD PTR [rcx+0x60],r9
   14000e8b0:	mov    DWORD PTR [rcx+0x68],r9d
   14000e8b4:	mov    DWORD PTR [rcx+0x6c],r9d
   14000e8b8:	mov    DWORD PTR [rcx+0x70],r9d
   14000e8bc:	mov    DWORD PTR [rcx+0x74],r9d
   14000e8c0:	mov    DWORD PTR [rcx+0x78],r9d
   14000e8c4:	mov    DWORD PTR [rcx+0x7c],r9d
   14000e8c8:	mov    DWORD PTR [rcx+0x80],r9d
   14000e8cf:	mov    DWORD PTR [rcx+0x84],r9d
   14000e8d6:	mov    DWORD PTR [rcx+0x88],r9d
   14000e8dd:	mov    DWORD PTR [rcx+0x8c],r9d
   14000e8e4:	mov    DWORD PTR [rcx+0x90],r9d
   14000e8eb:	mov    DWORD PTR [rcx+0x94],r9d
   14000e8f2:	mov    DWORD PTR [rcx+0x98],r9d
   14000e8f9:	mov    DWORD PTR [rcx+0x9c],r9d
   14000e900:	mov    DWORD PTR [rcx+0xa0],r9d
   14000e907:	mov    DWORD PTR [rcx+0xa4],r9d
   14000e90e:	mov    DWORD PTR [rcx+0xa8],r9d
   14000e915:	mov    DWORD PTR [rcx+0xac],r9d
   14000e91c:	mov    DWORD PTR [rcx+0xb0],r9d
   14000e923:	mov    DWORD PTR [rcx+0xb4],r9d
   14000e92a:	mov    DWORD PTR [rcx+0xb8],r9d
   14000e931:	mov    DWORD PTR [rcx+0xbc],r9d
   14000e938:	mov    DWORD PTR [rcx+0xc0],r9d
   14000e93f:	mov    DWORD PTR [rcx+0xc4],r9d
   14000e946:	mov    DWORD PTR [rcx+0xc8],r9d
   14000e94d:	mov    DWORD PTR [rcx+0xcc],r9d
   14000e954:	mov    DWORD PTR [rcx+0xd0],r9d
   14000e95b:	mov    DWORD PTR [rcx+0xd4],r9d
   14000e962:	mov    DWORD PTR [rcx+0xd8],r9d
   14000e969:	mov    DWORD PTR [rcx+0xdc],r9d
   14000e970:	mov    DWORD PTR [rcx+0xe0],r9d
   14000e977:	mov    DWORD PTR [rcx+0xe4],r9d
   14000e97e:	mov    rax,rcx
   14000e981:	mov    DWORD PTR [rcx+0x8],0x59
   14000e988:	ret    
   14000e989:	int3   
   14000e98a:	int3   
   14000e98b:	int3   
   14000e98c:	int3   
   14000e98d:	int3   
   14000e98e:	int3   
   14000e98f:	int3   
   14000e990:	cmp    DWORD PTR [rcx+0x6c],0x0
   14000e994:	je     0x14000e9b1
   14000e996:	mov    eax,DWORD PTR [rcx+0x68]
   14000e999:	mov    DWORD PTR [rdx],eax
   14000e99b:	mov    eax,DWORD PTR [rcx+0x6c]
   14000e99e:	mov    DWORD PTR [rdx+0x4],eax
   14000e9a1:	mov    eax,DWORD PTR [rcx+0x70]
   14000e9a4:	mov    DWORD PTR [rdx+0x8],eax
   14000e9a7:	mov    eax,DWORD PTR [rcx+0x74]
   14000e9aa:	mov    DWORD PTR [rdx+0xc],eax
   14000e9ad:	mov    rax,rdx
   14000e9b0:	ret    
   14000e9b1:	cmp    DWORD PTR [rcx+0x7c],0x0
   14000e9b5:	je     0x14000e9d8
   14000e9b7:	mov    eax,DWORD PTR [rcx+0x78]
   14000e9ba:	mov    DWORD PTR [rdx],eax
   14000e9bc:	mov    eax,DWORD PTR [rcx+0x7c]
   14000e9bf:	mov    DWORD PTR [rdx+0x4],eax
   14000e9c2:	mov    eax,DWORD PTR [rcx+0x80]
   14000e9c8:	mov    DWORD PTR [rdx+0x8],eax
   14000e9cb:	mov    eax,DWORD PTR [rcx+0x84]
   14000e9d1:	mov    DWORD PTR [rdx+0xc],eax
   14000e9d4:	mov    rax,rdx
   14000e9d7:	ret    
   14000e9d8:	mov    eax,DWORD PTR [rcx+0x88]
   14000e9de:	mov    DWORD PTR [rdx],eax
   14000e9e0:	mov    eax,DWORD PTR [rcx+0x8c]
   14000e9e6:	mov    DWORD PTR [rdx+0x4],eax
   14000e9e9:	mov    eax,DWORD PTR [rcx+0x90]
   14000e9ef:	mov    DWORD PTR [rdx+0x8],eax
   14000e9f2:	mov    eax,DWORD PTR [rcx+0x94]
   14000e9f8:	mov    DWORD PTR [rdx+0xc],eax
   14000e9fb:	mov    rax,rdx
   14000e9fe:	ret    
   14000e9ff:	int3   
   14000ea00:	rex push rbx
   14000ea02:	sub    rsp,0x20
   14000ea06:	cmp    QWORD PTR [rcx+0x50],0x0
   14000ea0b:	mov    rbx,rdx
   14000ea0e:	je     0x14000ea23
   14000ea10:	mov    rcx,QWORD PTR [rcx+0x50]
   14000ea14:	mov    rax,QWORD PTR [rcx]
   14000ea17:	call   QWORD PTR [rax+0x38]
   14000ea1a:	mov    rax,rbx
   14000ea1d:	add    rsp,0x20
   14000ea21:	pop    rbx
   14000ea22:	ret    
   14000ea23:	cmp    QWORD PTR [rcx+0x48],0x0
   14000ea28:	je     0x14000ea3d
   14000ea2a:	mov    rcx,QWORD PTR [rcx+0x48]
   14000ea2e:	mov    rax,QWORD PTR [rcx]
   14000ea31:	call   QWORD PTR [rax+0x38]
   14000ea34:	mov    rax,rbx
   14000ea37:	add    rsp,0x20
   14000ea3b:	pop    rbx
   14000ea3c:	ret    
   14000ea3d:	mov    eax,DWORD PTR [rcx+0xd8]
   14000ea43:	mov    DWORD PTR [rdx],eax
   14000ea45:	mov    eax,DWORD PTR [rcx+0xdc]
   14000ea4b:	mov    DWORD PTR [rdx+0x4],eax
   14000ea4e:	mov    eax,DWORD PTR [rcx+0xe0]
   14000ea54:	mov    DWORD PTR [rdx+0x8],eax
   14000ea57:	mov    eax,DWORD PTR [rcx+0xe4]
   14000ea5d:	mov    DWORD PTR [rdx+0xc],eax
   14000ea60:	mov    rax,rbx
   14000ea63:	add    rsp,0x20
   14000ea67:	pop    rbx
   14000ea68:	ret    
   14000ea69:	int3   
   14000ea6a:	int3   
   14000ea6b:	int3   
   14000ea6c:	int3   
   14000ea6d:	int3   
   14000ea6e:	int3   
   14000ea6f:	int3   
   14000ea70:	mov    DWORD PTR [rcx+0x10],0x1
   14000ea77:	xor    r10d,r10d
   14000ea7a:	lea    rax,[rip+0x13ed7]        # 0x140022958
   14000ea81:	mov    QWORD PTR [rcx],rax
   14000ea84:	mov    DWORD PTR [rcx+0x8],r10d
   14000ea88:	mov    QWORD PTR [rcx+0x18],r10
   14000ea8c:	mov    DWORD PTR [rcx+0x20],r10d
   14000ea90:	mov    DWORD PTR [rcx+0x24],r10d
   14000ea94:	mov    rax,QWORD PTR [rdx]
   14000ea97:	mov    QWORD PTR [rcx+0x28],rax
   14000ea9b:	mov    eax,DWORD PTR [rdx+0x8]
   14000ea9e:	mov    DWORD PTR [rcx+0x30],eax
   14000eaa1:	mov    eax,DWORD PTR [rdx+0xc]
   14000eaa4:	mov    DWORD PTR [rcx+0x34],eax
   14000eaa7:	mov    rax,QWORD PTR [r8]
   14000eaaa:	mov    QWORD PTR [rcx+0x38],rax
   14000eaae:	mov    eax,DWORD PTR [r8+0x8]
   14000eab2:	mov    DWORD PTR [rcx+0x40],eax
   14000eab5:	mov    eax,DWORD PTR [r8+0xc]
   14000eab9:	mov    DWORD PTR [rcx+0x44],eax
   14000eabc:	mov    QWORD PTR [rcx+0x48],r9
   14000eac0:	mov    QWORD PTR [rcx+0x50],r10
   14000eac4:	mov    BYTE PTR [rcx+0x58],r10b
   14000eac8:	mov    BYTE PTR [rcx+0x59],r10b
   14000eacc:	mov    QWORD PTR [rcx+0x60],r10
   14000ead0:	mov    DWORD PTR [rcx+0x68],r10d
   14000ead4:	mov    DWORD PTR [rcx+0x6c],r10d
   14000ead8:	mov    DWORD PTR [rcx+0x70],r10d
   14000eadc:	mov    DWORD PTR [rcx+0x74],r10d
   14000eae0:	mov    DWORD PTR [rcx+0x78],r10d
   14000eae4:	mov    DWORD PTR [rcx+0x7c],r10d
   14000eae8:	mov    DWORD PTR [rcx+0x80],r10d
   14000eaef:	mov    DWORD PTR [rcx+0x84],r10d
   14000eaf6:	mov    DWORD PTR [rcx+0x88],r10d
   14000eafd:	mov    DWORD PTR [rcx+0x8c],r10d
   14000eb04:	mov    DWORD PTR [rcx+0x90],r10d
   14000eb0b:	mov    DWORD PTR [rcx+0x94],r10d
   14000eb12:	mov    DWORD PTR [rcx+0x98],r10d
   14000eb19:	mov    DWORD PTR [rcx+0x9c],r10d
   14000eb20:	mov    DWORD PTR [rcx+0xa0],r10d
   14000eb27:	mov    DWORD PTR [rcx+0xa4],r10d
   14000eb2e:	mov    DWORD PTR [rcx+0xa8],r10d
   14000eb35:	mov    DWORD PTR [rcx+0xac],r10d
   14000eb3c:	mov    DWORD PTR [rcx+0xb0],r10d
   14000eb43:	mov    DWORD PTR [rcx+0xb4],r10d
   14000eb4a:	mov    DWORD PTR [rcx+0xb8],r10d
   14000eb51:	mov    DWORD PTR [rcx+0xbc],r10d
   14000eb58:	mov    DWORD PTR [rcx+0xc0],r10d
   14000eb5f:	mov    DWORD PTR [rcx+0xc4],r10d
   14000eb66:	mov    DWORD PTR [rcx+0xc8],r10d
   14000eb6d:	mov    DWORD PTR [rcx+0xcc],r10d
   14000eb74:	mov    DWORD PTR [rcx+0xd0],r10d
   14000eb7b:	mov    DWORD PTR [rcx+0xd4],r10d
   14000eb82:	mov    DWORD PTR [rcx+0xd8],r10d
   14000eb89:	mov    DWORD PTR [rcx+0xdc],r10d
   14000eb90:	mov    DWORD PTR [rcx+0xe0],r10d
   14000eb97:	mov    DWORD PTR [rcx+0xe4],r10d
   14000eb9e:	mov    rax,rcx
   14000eba1:	mov    DWORD PTR [rcx+0x8],0x59
   14000eba8:	ret    
   14000eba9:	int3   
   14000ebaa:	int3   
   14000ebab:	int3   
   14000ebac:	int3   
   14000ebad:	int3   
   14000ebae:	int3   
   14000ebaf:	int3   
   14000ebb0:	rex push rbx
   14000ebb2:	sub    rsp,0x20
   14000ebb6:	mov    rcx,QWORD PTR [rcx+0x10]
   14000ebba:	mov    rbx,rdx
   14000ebbd:	test   rcx,rcx
   14000ebc0:	je     0x14000ebe2
   14000ebc2:	cmp    DWORD PTR [rcx+0x8],0x1e
   14000ebc6:	jne    0x14000ebd7
   14000ebc8:	mov    rax,QWORD PTR [rcx]
   14000ebcb:	call   QWORD PTR [rax+0x30]
   14000ebce:	mov    rax,rbx
   14000ebd1:	add    rsp,0x20
   14000ebd5:	pop    rbx
   14000ebd6:	ret    
   14000ebd7:	test   rcx,rcx
   14000ebda:	je     0x14000ebe2
   14000ebdc:	cmp    DWORD PTR [rcx+0x8],0x4a
   14000ebe0:	je     0x14000ebc8
   14000ebe2:	xor    eax,eax
   14000ebe4:	mov    DWORD PTR [rdx],eax
   14000ebe6:	mov    DWORD PTR [rdx+0x4],eax
   14000ebe9:	mov    DWORD PTR [rdx+0x8],eax
   14000ebec:	mov    DWORD PTR [rdx+0xc],eax
   14000ebef:	mov    rax,rbx
   14000ebf2:	add    rsp,0x20
   14000ebf6:	pop    rbx
   14000ebf7:	ret    
   14000ebf8:	int3   
   14000ebf9:	int3   
   14000ebfa:	int3   
   14000ebfb:	int3   
   14000ebfc:	int3   
   14000ebfd:	int3   
   14000ebfe:	int3   
   14000ebff:	int3   
   14000ec00:	rex push rbx
   14000ec02:	sub    rsp,0x20
   14000ec06:	mov    rcx,QWORD PTR [rcx+0x10]
   14000ec0a:	mov    rbx,rdx
   14000ec0d:	test   rcx,rcx
   14000ec10:	je     0x14000ec32
   14000ec12:	cmp    DWORD PTR [rcx+0x8],0x1e
   14000ec16:	jne    0x14000ec27
   14000ec18:	mov    rax,QWORD PTR [rcx]
   14000ec1b:	call   QWORD PTR [rax+0x38]
   14000ec1e:	mov    rax,rbx
   14000ec21:	add    rsp,0x20
   14000ec25:	pop    rbx
   14000ec26:	ret    
   14000ec27:	test   rcx,rcx
   14000ec2a:	je     0x14000ec32
   14000ec2c:	cmp    DWORD PTR [rcx+0x8],0x4a
   14000ec30:	je     0x14000ec18
   14000ec32:	xor    eax,eax
   14000ec34:	mov    DWORD PTR [rdx],eax
   14000ec36:	mov    DWORD PTR [rdx+0x4],eax
   14000ec39:	mov    DWORD PTR [rdx+0x8],eax
   14000ec3c:	mov    DWORD PTR [rdx+0xc],eax
   14000ec3f:	mov    rax,rbx
   14000ec42:	add    rsp,0x20
   14000ec46:	pop    rbx
   14000ec47:	ret    
   14000ec48:	int3   
   14000ec49:	int3   
   14000ec4a:	int3   
   14000ec4b:	int3   
   14000ec4c:	int3   
   14000ec4d:	int3   
   14000ec4e:	int3   
   14000ec4f:	int3   
   14000ec50:	rex push rbx
   14000ec52:	sub    rsp,0x20
   14000ec56:	mov    rbx,rdx
   14000ec59:	test   rdx,rdx
   14000ec5c:	je     0x14000ed0c
   14000ec62:	cmp    DWORD PTR [rdx+0x8],0x21
   14000ec66:	jne    0x14000ed0c
   14000ec6c:	mov    rcx,QWORD PTR [rcx+0x8]
   14000ec70:	mov    r8,QWORD PTR [rcx+0x18]
   14000ec74:	test   r8,r8
   14000ec77:	je     0x14000ec89
   14000ec79:	lea    rax,[r8+0x38]
   14000ec7d:	cmp    rax,QWORD PTR [rcx+0x20]
   14000ec81:	jae    0x14000ec89
   14000ec83:	mov    QWORD PTR [rcx+0x18],rax
   14000ec87:	jmp    0x14000ec96
   14000ec89:	mov    edx,0x38
   14000ec8e:	call   0x14000ccd0
   14000ec93:	mov    r8,rax
   14000ec96:	xor    edx,edx
   14000ec98:	test   r8,r8
   14000ec9b:	je     0x14000ecdf
   14000ec9d:	mov    DWORD PTR [r8+0x8],edx
   14000eca1:	mov    QWORD PTR [r8+0x10],r8
   14000eca5:	lea    rax,[rip+0x138ec]        # 0x140022598
   14000ecac:	mov    QWORD PTR [r8],rax
   14000ecaf:	mov    rcx,QWORD PTR [rbx+0x10]
   14000ecb3:	mov    QWORD PTR [r8+0x18],rcx
   14000ecb7:	mov    eax,DWORD PTR [rbx+0x18]
   14000ecba:	mov    DWORD PTR [r8+0x20],eax
   14000ecbe:	mov    eax,DWORD PTR [rbx+0x1c]
   14000ecc1:	mov    DWORD PTR [r8+0x24],eax
   14000ecc5:	mov    DWORD PTR [r8+0x28],edx
   14000ecc9:	mov    DWORD PTR [r8+0x2c],edx
   14000eccd:	mov    DWORD PTR [r8+0x30],edx
   14000ecd1:	mov    DWORD PTR [r8+0x34],edx
   14000ecd5:	mov    DWORD PTR [r8+0x8],0x5b
   14000ecdd:	jmp    0x14000ece2
   14000ecdf:	mov    r8,rdx
   14000ece2:	mov    eax,DWORD PTR [rbx+0x20]
   14000ece5:	mov    DWORD PTR [r8+0x28],eax
   14000ece9:	mov    eax,DWORD PTR [rbx+0x24]
   14000ecec:	mov    DWORD PTR [r8+0x2c],eax
   14000ecf0:	mov    eax,DWORD PTR [rbx+0x28]
   14000ecf3:	mov    DWORD PTR [r8+0x30],eax
   14000ecf7:	mov    eax,DWORD PTR [rbx+0x2c]
   14000ecfa:	mov    DWORD PTR [r8+0x34],eax
   14000ecfe:	mov    rax,QWORD PTR [r8+0x10]
   14000ed02:	mov    QWORD PTR [r8+0x10],rdx
   14000ed06:	add    rsp,0x20
   14000ed0a:	pop    rbx
   14000ed0b:	ret    
   14000ed0c:	xor    eax,eax
   14000ed0e:	add    rsp,0x20
   14000ed12:	pop    rbx
   14000ed13:	ret    
   14000ed14:	int3   
   14000ed15:	int3   
   14000ed16:	int3   
   14000ed17:	int3   
   14000ed18:	int3   
   14000ed19:	int3   
   14000ed1a:	int3   
   14000ed1b:	int3   
   14000ed1c:	int3   
   14000ed1d:	int3   
   14000ed1e:	int3   
   14000ed1f:	int3   
   14000ed20:	mov    r11,rsp
   14000ed23:	push   rbx
   14000ed24:	push   rdi
   14000ed25:	push   r13
   14000ed27:	push   r14
   14000ed29:	sub    rsp,0xc8
   14000ed30:	xor    r14d,r14d
   14000ed33:	mov    r8d,0x4
   14000ed39:	mov    QWORD PTR [r11+0x8],rbp
   14000ed3d:	mov    rdi,rdx
   14000ed40:	lea    rax,[r11-0x68]
   14000ed44:	lea    rdx,[rsp+0x30]
   14000ed49:	mov    ebx,r14d
   14000ed4c:	mov    QWORD PTR [r11+0x10],rsi
   14000ed50:	mov    r13,rcx
   14000ed53:	mov    QWORD PTR [rsp+0x28],rdx
   14000ed58:	mov    DWORD PTR [rsp+0x20],r8d
   14000ed5d:	mov    DWORD PTR [r11-0x74],r14d
   14000ed61:	mov    DWORD PTR [rsp+0x24],ebx
   14000ed65:	mov    QWORD PTR [r11-0x70],rax
   14000ed69:	mov    DWORD PTR [r11-0x78],r8d
   14000ed6d:	mov    QWORD PTR [r11+0x18],r12
   14000ed71:	test   rdi,rdi
   14000ed74:	je     0x14000f038
   14000ed7a:	cmp    DWORD PTR [rdi+0x8],0x18
   14000ed7e:	jne    0x14000ee85
   14000ed84:	cmp    ebx,r8d
   14000ed87:	jne    0x14000ee00
   14000ed89:	lea    ebp,[rbx+rbx*1]
   14000ed8c:	mov    rsi,rdx
   14000ed8f:	cmp    ebp,r8d
   14000ed92:	je     0x14000eddf
   14000ed94:	cmp    ebp,0x4
   14000ed97:	jle    0x14000edb1
   14000ed99:	movsxd rcx,ebp
   14000ed9c:	shl    rcx,0x4
   14000eda0:	call   QWORD PTR [rip+0x1142a]        # 0x1400201d0
   14000eda6:	mov    DWORD PTR [rsp+0x20],ebp
   14000edaa:	mov    QWORD PTR [rsp+0x28],rax
   14000edaf:	jmp    0x14000edc3
   14000edb1:	lea    rax,[rsp+0x30]
   14000edb6:	mov    DWORD PTR [rsp+0x20],0x4
   14000edbe:	mov    QWORD PTR [rsp+0x28],rax
   14000edc3:	movsxd r8,ebx
   14000edc6:	mov    rdx,rsi
   14000edc9:	mov    rcx,rax
   14000edcc:	shl    r8,0x4
   14000edd0:	mov    DWORD PTR [rsp+0x24],r14d
   14000edd5:	call   0x14001edd4
   14000edda:	mov    rdx,QWORD PTR [rsp+0x28]
   14000eddf:	lea    rax,[rsp+0x30]
   14000ede4:	mov    DWORD PTR [rsp+0x24],ebx
   14000ede8:	cmp    rsi,rax
   14000edeb:	je     0x14000ee00
   14000eded:	cmp    rsi,rdx
   14000edf0:	je     0x14000ee00
   14000edf2:	mov    rcx,rsi
   14000edf5:	call   QWORD PTR [rip+0x113ed]        # 0x1400201e8
   14000edfb:	mov    rdx,QWORD PTR [rsp+0x28]
   14000ee00:	movsxd rcx,ebx
   14000ee03:	inc    ebx
   14000ee05:	shl    rcx,0x4
   14000ee09:	mov    DWORD PTR [rsp+0x24],ebx
   14000ee0d:	add    rcx,rdx
   14000ee10:	lea    rdx,[rdi+0x18]
   14000ee14:	call   QWORD PTR [rip+0x1161e]        # 0x140020438
   14000ee1a:	mov    ecx,DWORD PTR [rsp+0x74]
   14000ee1e:	cmp    ecx,DWORD PTR [rsp+0x70]
   14000ee22:	jne    0x14000ee38
   14000ee24:	lea    r8d,[rcx+rcx*1]
   14000ee28:	mov    edx,ecx
   14000ee2a:	lea    rcx,[rsp+0x70]
   14000ee2f:	call   0x14000e680
   14000ee34:	mov    ecx,DWORD PTR [rsp+0x74]
   14000ee38:	movsxd rax,ecx
   14000ee3b:	inc    ecx
   14000ee3d:	mov    DWORD PTR [rsp+0x74],ecx
   14000ee41:	mov    rcx,rax
   14000ee44:	mov    rax,QWORD PTR [rsp+0x78]
   14000ee49:	shl    rcx,0x4
   14000ee4d:	add    rcx,rax
   14000ee50:	je     0x14000ee6e
   14000ee52:	mov    eax,DWORD PTR [rdi+0x38]
   14000ee55:	mov    DWORD PTR [rcx],eax
   14000ee57:	mov    eax,DWORD PTR [rdi+0x3c]
   14000ee5a:	mov    DWORD PTR [rcx+0x4],eax
   14000ee5d:	mov    eax,DWORD PTR [rdi+0x40]
   14000ee60:	mov    DWORD PTR [rcx+0x8],eax
   14000ee63:	mov    eax,DWORD PTR [rdi+0x44]
   14000ee66:	mov    DWORD PTR [rcx+0xc],eax
   14000ee69:	mov    rax,QWORD PTR [rsp+0x78]
   14000ee6e:	mov    rdi,QWORD PTR [rdi+0x10]
   14000ee72:	mov    rdx,QWORD PTR [rsp+0x28]
   14000ee77:	mov    ebx,DWORD PTR [rsp+0x24]
   14000ee7b:	mov    r8d,DWORD PTR [rsp+0x20]
   14000ee80:	jmp    0x14000ed71
   14000ee85:	test   rdi,rdi
   14000ee88:	je     0x14000f038
   14000ee8e:	cmp    DWORD PTR [rdi+0x8],0x21
   14000ee92:	jne    0x14000f038
   14000ee98:	mov    rcx,QWORD PTR [r13+0x8]
   14000ee9c:	mov    QWORD PTR [rsp+0xc0],r15
   14000eea4:	mov    rbx,QWORD PTR [rcx+0x18]
   14000eea8:	test   rbx,rbx
   14000eeab:	je     0x14000eebd
   14000eead:	lea    rax,[rbx+0x38]
   14000eeb1:	cmp    rax,QWORD PTR [rcx+0x20]
   14000eeb5:	jae    0x14000eebd
   14000eeb7:	mov    QWORD PTR [rcx+0x18],rax
   14000eebb:	jmp    0x14000eeca
   14000eebd:	mov    edx,0x38
   14000eec2:	call   0x14000ccd0
   14000eec7:	mov    rbx,rax
   14000eeca:	lea    r15,[rip+0x135d7]        # 0x1400224a8
   14000eed1:	test   rbx,rbx
   14000eed4:	je     0x14000ef08
   14000eed6:	lea    rdx,[rdi+0x10]
   14000eeda:	lea    rcx,[rbx+0x18]
   14000eede:	mov    DWORD PTR [rbx+0x8],r14d
   14000eee2:	mov    QWORD PTR [rbx],r15
   14000eee5:	mov    QWORD PTR [rbx+0x10],rbx
   14000eee9:	call   QWORD PTR [rip+0x11541]        # 0x140020430
   14000eeef:	mov    DWORD PTR [rbx+0x28],r14d
   14000eef3:	mov    DWORD PTR [rbx+0x2c],r14d
   14000eef7:	mov    DWORD PTR [rbx+0x30],r14d
   14000eefb:	mov    DWORD PTR [rbx+0x34],r14d
   14000eeff:	mov    DWORD PTR [rbx+0x8],0x5a
   14000ef06:	jmp    0x14000ef0b
   14000ef08:	mov    rbx,r14
   14000ef0b:	mov    eax,DWORD PTR [rdi+0x20]
   14000ef0e:	mov    DWORD PTR [rbx+0x28],eax
   14000ef11:	mov    eax,DWORD PTR [rdi+0x24]
   14000ef14:	mov    DWORD PTR [rbx+0x2c],eax
   14000ef17:	mov    eax,DWORD PTR [rdi+0x28]
   14000ef1a:	mov    DWORD PTR [rbx+0x30],eax
   14000ef1d:	mov    eax,DWORD PTR [rdi+0x2c]
   14000ef20:	mov    DWORD PTR [rbx+0x34],eax
   14000ef23:	mov    eax,DWORD PTR [rsp+0x24]
   14000ef27:	dec    eax
   14000ef29:	movsxd rbp,eax
   14000ef2c:	cmp    eax,0xffffffff
   14000ef2f:	je     0x14000eff6
   14000ef35:	mov    rsi,rbp
   14000ef38:	lea    r12d,[rax+0x1]
   14000ef3c:	shl    rsi,0x4
   14000ef40:	shl    rbp,0x4
   14000ef44:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000ef50:	mov    rcx,QWORD PTR [r13+0x8]
   14000ef54:	mov    rdi,QWORD PTR [rcx+0x18]
   14000ef58:	test   rdi,rdi
   14000ef5b:	je     0x14000ef6d
   14000ef5d:	lea    rax,[rdi+0x38]
   14000ef61:	cmp    rax,QWORD PTR [rcx+0x20]
   14000ef65:	jae    0x14000ef6d
   14000ef67:	mov    QWORD PTR [rcx+0x18],rax
   14000ef6b:	jmp    0x14000ef7a
   14000ef6d:	mov    edx,0x38
   14000ef72:	call   0x14000ccd0
   14000ef77:	mov    rdi,rax
   14000ef7a:	test   rdi,rdi
   14000ef7d:	je     0x14000efc0
   14000ef7f:	mov    rdx,QWORD PTR [rsp+0x28]
   14000ef84:	lea    rcx,[rdi+0x18]
   14000ef88:	mov    DWORD PTR [rdi+0x8],r14d
   14000ef8c:	add    rdx,rbp
   14000ef8f:	mov    QWORD PTR [rdi],r15
   14000ef92:	call   QWORD PTR [rip+0x11498]        # 0x140020430
   14000ef98:	mov    DWORD PTR [rdi+0x28],r14d
   14000ef9c:	mov    DWORD PTR [rdi+0x2c],r14d
   14000efa0:	mov    DWORD PTR [rdi+0x30],r14d
   14000efa4:	mov    DWORD PTR [rdi+0x34],r14d
   14000efa8:	mov    DWORD PTR [rdi+0x8],0x5a
   14000efaf:	mov    rax,QWORD PTR [rbx+0x10]
   14000efb3:	mov    QWORD PTR [rdi+0x10],rax
   14000efb7:	mov    QWORD PTR [rbx+0x10],rdi
   14000efbb:	mov    rbx,rdi
   14000efbe:	jmp    0x14000efc3
   14000efc0:	mov    rbx,r14
   14000efc3:	mov    rcx,QWORD PTR [rsp+0x78]
   14000efc8:	sub    rbp,0x10
   14000efcc:	sub    rsi,0x10
   14000efd0:	sub    r12,0x1
   14000efd4:	mov    eax,DWORD PTR [rsi+rcx*1+0x10]
   14000efd8:	mov    DWORD PTR [rbx+0x28],eax
   14000efdb:	mov    eax,DWORD PTR [rsi+rcx*1+0x14]
   14000efdf:	mov    DWORD PTR [rbx+0x2c],eax
   14000efe2:	mov    eax,DWORD PTR [rsi+rcx*1+0x18]
   14000efe6:	mov    DWORD PTR [rbx+0x30],eax
   14000efe9:	mov    eax,DWORD PTR [rsi+rcx*1+0x1c]
   14000efed:	mov    DWORD PTR [rbx+0x34],eax
   14000eff0:	jne    0x14000ef50
   14000eff6:	mov    rdi,QWORD PTR [rbx+0x10]
   14000effa:	mov    r15,QWORD PTR [rsp+0xc0]
   14000f002:	mov    QWORD PTR [rbx+0x10],r14
   14000f006:	mov    rcx,QWORD PTR [rsp+0x78]
   14000f00b:	lea    rax,[rsp+0x80]
   14000f013:	cmp    rcx,rax
   14000f016:	je     0x14000f01e
   14000f018:	call   QWORD PTR [rip+0x111ca]        # 0x1400201e8
   14000f01e:	mov    rcx,QWORD PTR [rsp+0x28]
   14000f023:	lea    rax,[rsp+0x30]
   14000f028:	cmp    rcx,rax
   14000f02b:	je     0x14000f033
   14000f02d:	call   QWORD PTR [rip+0x111b5]        # 0x1400201e8
   14000f033:	mov    rax,rdi
   14000f036:	jmp    0x14000f068
   14000f038:	lea    rcx,[rsp+0x80]
   14000f040:	cmp    rax,rcx
   14000f043:	je     0x14000f053
   14000f045:	mov    rcx,rax
   14000f048:	call   QWORD PTR [rip+0x1119a]        # 0x1400201e8
   14000f04e:	mov    rdx,QWORD PTR [rsp+0x28]
   14000f053:	lea    rax,[rsp+0x30]
   14000f058:	cmp    rdx,rax
   14000f05b:	je     0x14000f066
   14000f05d:	mov    rcx,rdx
   14000f060:	call   QWORD PTR [rip+0x11182]        # 0x1400201e8
   14000f066:	xor    eax,eax
   14000f068:	mov    r12,QWORD PTR [rsp+0x100]
   14000f070:	mov    rsi,QWORD PTR [rsp+0xf8]
   14000f078:	mov    rbp,QWORD PTR [rsp+0xf0]
   14000f080:	add    rsp,0xc8
   14000f087:	pop    r14
   14000f089:	pop    r13
   14000f08b:	pop    rdi
   14000f08c:	pop    rbx
   14000f08d:	ret    
   14000f08e:	int3   
   14000f08f:	int3   
   14000f090:	mov    QWORD PTR [rsp+0x8],rbx
   14000f095:	mov    QWORD PTR [rsp+0x18],rbp
   14000f09a:	mov    QWORD PTR [rsp+0x20],rsi
   14000f09f:	mov    DWORD PTR [rsp+0x10],edx
   14000f0a3:	push   rdi
   14000f0a4:	sub    rsp,0x20
   14000f0a8:	mov    rdx,QWORD PTR [rcx]
   14000f0ab:	movsxd rdi,r8d
   14000f0ae:	mov    rbp,rcx
   14000f0b1:	movsxd rax,DWORD PTR [rdx+0x8]
   14000f0b5:	mov    r8d,edi
   14000f0b8:	lea    rbx,[rdx+rax*8+0x10]
   14000f0bd:	lea    rdx,[rsp+0x38]
   14000f0c2:	call   QWORD PTR [rip+0x11598]        # 0x140020660
   14000f0c8:	mov    r10,QWORD PTR [rbp+0x0]
   14000f0cc:	movsxd rdx,DWORD PTR [rsp+0x38]
   14000f0d1:	movsxd r9,DWORD PTR [r10+0x8]
   14000f0d5:	mov    rcx,rbp
   14000f0d8:	mov    rsi,rax
   14000f0db:	add    rdx,r9
   14000f0de:	lea    r8,[r10+rdx*8+0x10]
   14000f0e3:	lea    rdx,[r10+r9*8+0x10]
   14000f0e8:	mov    r9,rbx
   14000f0eb:	call   0x140001d60
   14000f0f0:	mov    rdx,QWORD PTR [rbp+0x0]
   14000f0f4:	movsxd r11,DWORD PTR [rsp+0x38]
   14000f0f9:	movsxd rcx,DWORD PTR [rdx+0xc]
   14000f0fd:	lea    r9,[rbx+r11*8]
   14000f101:	lea    r8,[rdx+rcx*8+0x10]
   14000f106:	movsxd rcx,DWORD PTR [rdx+0x8]
   14000f10a:	add    rcx,r11
   14000f10d:	add    rcx,rdi
   14000f110:	lea    rdx,[rdx+rcx*8+0x10]
   14000f115:	mov    rcx,rbp
   14000f118:	call   0x140001d60
   14000f11d:	mov    r11d,DWORD PTR [rsi]
   14000f120:	test   r11d,r11d
   14000f123:	je     0x14000f136
   14000f125:	cmp    r11d,0xffffffff
   14000f129:	je     0x14000f141
   14000f12b:	lock add DWORD PTR [rsi],0xffffffff
   14000f12f:	setne  al
   14000f132:	test   al,al
   14000f134:	jne    0x14000f141
   14000f136:	mov    rdx,rsi
   14000f139:	mov    rcx,rbp
   14000f13c:	call   0x140001ce0
   14000f141:	mov    rdx,QWORD PTR [rbp+0x0]
   14000f145:	movsxd rax,DWORD PTR [rsp+0x38]
   14000f14a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f14f:	movsxd rcx,DWORD PTR [rdx+0x8]
   14000f153:	mov    rbp,QWORD PTR [rsp+0x40]
   14000f158:	mov    rsi,QWORD PTR [rsp+0x48]
   14000f15d:	add    rcx,rax
   14000f160:	lea    rax,[rdx+rcx*8+0x10]
   14000f165:	add    rsp,0x20
   14000f169:	pop    rdi
   14000f16a:	ret    
   14000f16b:	int3   
   14000f16c:	int3   
   14000f16d:	int3   
   14000f16e:	int3   
   14000f16f:	int3   
   14000f170:	rex push rbx
   14000f172:	sub    rsp,0x20
   14000f176:	mov    rbx,rcx
   14000f179:	mov    QWORD PTR [rcx],rdx
   14000f17c:	mov    rcx,rdx
   14000f17f:	call   0x140016b30
   14000f184:	mov    QWORD PTR [rbx+0x8],rax
   14000f188:	xor    eax,eax
   14000f18a:	mov    DWORD PTR [rbx+0x10],eax
   14000f18d:	mov    DWORD PTR [rbx+0x14],eax
   14000f190:	mov    QWORD PTR [rbx+0x18],rax
   14000f194:	mov    QWORD PTR [rbx+0x20],rax
   14000f198:	mov    QWORD PTR [rbx+0x28],rax
   14000f19c:	mov    QWORD PTR [rbx+0x30],rax
   14000f1a0:	mov    QWORD PTR [rbx+0x38],rax
   14000f1a4:	mov    QWORD PTR [rbx+0x48],rax
   14000f1a8:	mov    DWORD PTR [rbx+0x50],eax
   14000f1ab:	mov    DWORD PTR [rbx+0x54],eax
   14000f1ae:	mov    DWORD PTR [rbx+0x58],eax
   14000f1b1:	mov    DWORD PTR [rbx+0x5c],eax
   14000f1b4:	mov    DWORD PTR [rbx+0x60],eax
   14000f1b7:	mov    DWORD PTR [rbx+0x64],eax
   14000f1ba:	mov    DWORD PTR [rbx+0x68],eax
   14000f1bd:	mov    DWORD PTR [rbx+0x6c],eax
   14000f1c0:	mov    DWORD PTR [rbx+0x70],eax
   14000f1c3:	mov    DWORD PTR [rbx+0x74],eax
   14000f1c6:	mov    DWORD PTR [rbx+0x88],eax
   14000f1cc:	mov    DWORD PTR [rbx+0x8c],eax
   14000f1d2:	mov    DWORD PTR [rbx+0x90],eax
   14000f1d8:	mov    DWORD PTR [rbx+0x94],eax
   14000f1de:	mov    QWORD PTR [rbx+0x98],rax
   14000f1e5:	mov    DWORD PTR [rbx+0xa0],eax
   14000f1eb:	mov    DWORD PTR [rbx+0xa4],eax
   14000f1f1:	mov    DWORD PTR [rbx+0xb8],eax
   14000f1f7:	mov    DWORD PTR [rbx+0xbc],eax
   14000f1fd:	mov    DWORD PTR [rbx+0xc0],eax
   14000f203:	mov    DWORD PTR [rbx+0xc4],eax
   14000f209:	mov    QWORD PTR [rbx+0xc8],rax
   14000f210:	mov    DWORD PTR [rbx+0xd0],eax
   14000f216:	mov    DWORD PTR [rbx+0xd4],eax
   14000f21c:	mov    DWORD PTR [rbx+0xe8],eax
   14000f222:	mov    DWORD PTR [rbx+0xec],eax
   14000f228:	mov    DWORD PTR [rbx+0xf0],eax
   14000f22e:	mov    DWORD PTR [rbx+0xf4],eax
   14000f234:	mov    QWORD PTR [rbx+0xf8],rax
   14000f23b:	mov    DWORD PTR [rbx+0x100],eax
   14000f241:	mov    DWORD PTR [rbx+0x104],eax
   14000f247:	mov    QWORD PTR [rbx+0x108],rax
   14000f24e:	mov    QWORD PTR [rbx+0x110],rax
   14000f255:	mov    rax,QWORD PTR [rip+0x11504]        # 0x140020760
   14000f25c:	mov    QWORD PTR [rbx+0x118],rax
   14000f263:	mov    rax,rbx
   14000f266:	add    rsp,0x20
   14000f26a:	pop    rbx
   14000f26b:	ret    
   14000f26c:	int3   
   14000f26d:	int3   
   14000f26e:	int3   
   14000f26f:	int3   
   14000f270:	rex push rbx
   14000f272:	sub    rsp,0x20
   14000f276:	cmp    DWORD PTR [rcx+0x14],0x0
   14000f27a:	mov    rbx,rcx
   14000f27d:	je     0x14000f2a7
   14000f27f:	mov    rcx,QWORD PTR [rcx+0x18]
   14000f283:	call   QWORD PTR [rip+0x10f5f]        # 0x1400201e8
   14000f289:	mov    rcx,QWORD PTR [rbx+0x20]
   14000f28d:	call   QWORD PTR [rip+0x10f55]        # 0x1400201e8
   14000f293:	mov    rcx,QWORD PTR [rbx+0x28]
   14000f297:	call   QWORD PTR [rip+0x10f4b]        # 0x1400201e8
   14000f29d:	mov    rcx,QWORD PTR [rbx+0x30]
   14000f2a1:	call   QWORD PTR [rip+0x10f41]        # 0x1400201e8
   14000f2a7:	lea    rcx,[rbx+0x118]
   14000f2ae:	mov    rdx,QWORD PTR [rcx]
   14000f2b1:	mov    eax,DWORD PTR [rdx]
   14000f2b3:	test   eax,eax
   14000f2b5:	je     0x14000f2c7
   14000f2b7:	cmp    eax,0xffffffff
   14000f2ba:	je     0x14000f2cf
   14000f2bc:	lock add DWORD PTR [rdx],0xffffffff
   14000f2c0:	setne  al
   14000f2c3:	test   al,al
   14000f2c5:	jne    0x14000f2cf
   14000f2c7:	mov    rdx,QWORD PTR [rcx]
   14000f2ca:	call   0x140001ce0
   14000f2cf:	add    rsp,0x20
   14000f2d3:	pop    rbx
   14000f2d4:	ret    
   14000f2d5:	int3   
   14000f2d6:	int3   
   14000f2d7:	int3   
   14000f2d8:	int3   
   14000f2d9:	int3   
   14000f2da:	int3   
   14000f2db:	int3   
   14000f2dc:	int3   
   14000f2dd:	int3   
   14000f2de:	int3   
   14000f2df:	int3   
   14000f2e0:	mov    QWORD PTR [rsp+0x8],rbx
   14000f2e5:	push   rdi
   14000f2e6:	sub    rsp,0x20
   14000f2ea:	mov    rax,QWORD PTR [rcx]
   14000f2ed:	mov    rdi,rdx
   14000f2f0:	mov    rbx,rcx
   14000f2f3:	mov    r8d,DWORD PTR [rax]
   14000f2f6:	cmp    r8d,0x1
   14000f2fa:	je     0x14000f313
   14000f2fc:	test   r8d,r8d
   14000f2ff:	je     0x14000f313
   14000f301:	mov    edx,0x7fffffff
   14000f306:	mov    r8d,0x1
   14000f30c:	call   0x14000f090
   14000f311:	jmp    0x14000f319
   14000f313:	call   QWORD PTR [rip+0x1131f]        # 0x140020638
   14000f319:	mov    r8,rdi
   14000f31c:	mov    rdx,rax
   14000f31f:	mov    rcx,rbx
   14000f322:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f327:	add    rsp,0x20
   14000f32b:	pop    rdi
   14000f32c:	jmp    0x14000e790
   14000f331:	int3   
   14000f332:	int3   
   14000f333:	int3   
   14000f334:	int3   
   14000f335:	int3   
   14000f336:	int3   
   14000f337:	int3   
   14000f338:	int3   
   14000f339:	int3   
   14000f33a:	int3   
   14000f33b:	int3   
   14000f33c:	int3   
   14000f33d:	int3   
   14000f33e:	int3   
   14000f33f:	int3   
   14000f340:	rex push rbx
   14000f342:	push   rbp
   14000f343:	push   rsi
   14000f344:	push   rdi
   14000f345:	push   r12
   14000f347:	push   r13
   14000f349:	push   r14
   14000f34b:	push   r15
   14000f34d:	sub    rsp,0x3c8
   14000f354:	mov    rbp,rcx
   14000f357:	mov    rcx,QWORD PTR [rcx]
   14000f35a:	xor    r12d,r12d
   14000f35d:	mov    edi,edx
   14000f35f:	mov    esi,r12d
   14000f362:	mov    DWORD PTR [rsp+0x30],r12d
   14000f367:	call   0x140016af0
   14000f36c:	lea    r14,[rbp+0x78]
   14000f370:	or     r15d,0xffffffff
   14000f374:	mov    rbx,rax
   14000f377:	mov    QWORD PTR [rsp+0x38],rax
   14000f37c:	xor    al,al
   14000f37e:	mov    DWORD PTR [r14],edi
   14000f381:	mov    r13d,r12d
   14000f384:	mov    BYTE PTR [rsp+0x418],al
   14000f38b:	mov    QWORD PTR [rbp+0x108],r14
   14000f392:	cmp    edi,0x67
   14000f395:	jne    0x14000f5a7
   14000f39b:	mov    rcx,rbx
   14000f39e:	call   0x140017ff0
   14000f3a3:	test   al,al
   14000f3a5:	jne    0x14000f5a7
   14000f3ab:	lea    rax,[rip+0x11466]        # 0x140020818
   14000f3b2:	mov    QWORD PTR [rsp+0xb8],rax
   14000f3ba:	mov    rcx,QWORD PTR [rbp+0x0]
   14000f3be:	call   0x140016b10
   14000f3c3:	lea    rdi,[rsp+0xb8]
   14000f3cb:	lea    rcx,[rsp+0x98]
   14000f3d3:	test   rax,rax
   14000f3d6:	mov    DWORD PTR [rsp+0x80],0x1
   14000f3e1:	mov    DWORD PTR [rsp+0x84],r12d
   14000f3e9:	mov    DWORD PTR [rsp+0x88],r12d
   14000f3f1:	mov    DWORD PTR [rsp+0x8c],r12d
   14000f3f9:	mov    DWORD PTR [rsp+0x90],r12d
   14000f401:	cmovne rdi,rax
   14000f405:	call   QWORD PTR [rip+0x1118d]        # 0x140020598
   14000f40b:	lea    r8,[rsp+0x80]
   14000f413:	mov    rdx,rdi
   14000f416:	mov    rcx,rbx
   14000f419:	call   0x14001b060
   14000f41e:	test   al,al
   14000f420:	jne    0x14000f4c4
   14000f426:	lea    rcx,[rbp+0x118]
   14000f42d:	mov    rax,QWORD PTR [rcx]
   14000f430:	mov    edx,DWORD PTR [rax]
   14000f432:	cmp    edx,0x1
   14000f435:	je     0x14000f44c
   14000f437:	test   edx,edx
   14000f439:	je     0x14000f44c
   14000f43b:	lea    r8d,[r12+0x1]
   14000f440:	mov    edx,0x7fffffff
   14000f445:	call   0x14000f090
   14000f44a:	jmp    0x14000f452
   14000f44c:	call   QWORD PTR [rip+0x111e6]        # 0x140020638
   14000f452:	mov    ecx,0x20
   14000f457:	mov    rbx,rax
   14000f45a:	call   0x14001ee64
   14000f45f:	mov    rdi,rax
   14000f462:	test   rax,rax
   14000f465:	je     0x14000f4b1
   14000f467:	mov    eax,DWORD PTR [rsp+0x80]
   14000f46e:	lea    rcx,[rsp+0x84]
   14000f476:	lea    rdx,[rsp+0x98]
   14000f47e:	mov    DWORD PTR [rdi],eax
   14000f480:	mov    eax,DWORD PTR [rcx]
   14000f482:	mov    DWORD PTR [rdi+0x4],eax
   14000f485:	mov    eax,DWORD PTR [rcx+0x4]
   14000f488:	mov    DWORD PTR [rdi+0x8],eax
   14000f48b:	mov    eax,DWORD PTR [rcx+0x8]
   14000f48e:	mov    DWORD PTR [rdi+0xc],eax
   14000f491:	mov    eax,DWORD PTR [rcx+0xc]
   14000f494:	lea    rcx,[rdi+0x18]
   14000f498:	mov    DWORD PTR [rdi+0x10],eax
   14000f49b:	call   QWORD PTR [rip+0x112f7]        # 0x140020798
   14000f4a1:	mov    QWORD PTR [rbx],rdi
   14000f4a4:	lea    rcx,[rsp+0x98]
   14000f4ac:	jmp    0x1400162e2
   14000f4b1:	mov    rdi,r12
   14000f4b4:	mov    QWORD PTR [rbx],r12
   14000f4b7:	lea    rcx,[rsp+0x98]
   14000f4bf:	jmp    0x1400162e2
   14000f4c4:	mov    eax,DWORD PTR [rbx+0x80]
   14000f4ca:	lea    rcx,[rbx+0x8]
   14000f4ce:	mov    DWORD PTR [rbp+0xa8],eax
   14000f4d4:	mov    rax,QWORD PTR [rbx+0x68]
   14000f4d8:	mov    QWORD PTR [rbp+0xb0],rax
   14000f4df:	mov    rdi,QWORD PTR [rbx+0x50]
   14000f4e3:	call   QWORD PTR [rip+0x10f37]        # 0x140020420
   14000f4e9:	mov    rcx,rdi
   14000f4ec:	sub    rdi,QWORD PTR [rbx+0x48]
   14000f4f0:	lea    rdx,[rbx+0x20]
   14000f4f4:	sub    rcx,rax
   14000f4f7:	mov    eax,DWORD PTR [rbx+0x84]
   14000f4fd:	sar    rdi,1
   14000f500:	mov    DWORD PTR [rsp+0x5c],eax
   14000f504:	mov    eax,DWORD PTR [rbx+0x88]
   14000f50a:	sar    rcx,1
   14000f50d:	mov    DWORD PTR [rsp+0x58],ecx
   14000f511:	lea    rcx,[rsp+0x58]
   14000f516:	mov    DWORD PTR [rsp+0x60],eax
   14000f51a:	inc    edi
   14000f51c:	mov    DWORD PTR [rsp+0x64],edi
   14000f520:	mov    eax,DWORD PTR [rcx]
   14000f522:	mov    DWORD PTR [rbp+0xb8],eax
   14000f528:	mov    eax,DWORD PTR [rcx+0x4]
   14000f52b:	mov    DWORD PTR [rbp+0xbc],eax
   14000f531:	mov    eax,DWORD PTR [rcx+0x8]
   14000f534:	mov    DWORD PTR [rbp+0xc0],eax
   14000f53a:	mov    eax,DWORD PTR [rcx+0xc]
   14000f53d:	lea    rcx,[rsp+0x140]
   14000f545:	mov    DWORD PTR [rbp+0xc4],eax
   14000f54b:	call   QWORD PTR [rip+0x10edf]        # 0x140020430
   14000f551:	mov    rax,QWORD PTR [rsp+0x140]
   14000f559:	mov    QWORD PTR [rbp+0xc8],rax
   14000f560:	mov    eax,DWORD PTR [rsp+0x148]
   14000f567:	lea    rcx,[rsp+0x98]
   14000f56f:	mov    DWORD PTR [rbp+0xd0],eax
   14000f575:	mov    eax,DWORD PTR [rsp+0x14c]
   14000f57c:	mov    DWORD PTR [rbp+0xd4],eax
   14000f582:	lea    rax,[rbp+0xd8]
   14000f589:	mov    QWORD PTR [rbp+0x110],rax
   14000f590:	call   QWORD PTR [rip+0x111ea]        # 0x140020780
   14000f596:	lea    rdx,[rip+0x1127b]        # 0x140020818
   14000f59d:	mov    QWORD PTR [rsp+0xb8],rdx
   14000f5a5:	jmp    0x14000f5b5
   14000f5a7:	lea    rax,[rbp+0xa8]
   14000f5ae:	mov    QWORD PTR [rbp+0x110],rax
   14000f5b5:	mov    DWORD PTR [rbp+0x10],0xffffffff
   14000f5bc:	lea    r9,[rip+0xffffffffffff0a3d]        # 0x140000000
   14000f5c3:	mov    QWORD PTR [rbp+0x38],r12
   14000f5c7:	inc    DWORD PTR [rbp+0x10]
   14000f5ca:	mov    eax,DWORD PTR [rbp+0x14]
   14000f5cd:	lea    rdi,[rip+0x1346c]        # 0x140022a40
   14000f5d4:	mov    edx,0xffffff96
   14000f5d9:	cmp    DWORD PTR [rbp+0x10],eax
   14000f5dc:	jne    0x14000f654
   14000f5de:	test   eax,eax
   14000f5e0:	jne    0x14000f5eb
   14000f5e2:	mov    DWORD PTR [rbp+0x14],0x80
   14000f5e9:	jmp    0x14000f5f0
   14000f5eb:	add    eax,eax
   14000f5ed:	mov    DWORD PTR [rbp+0x14],eax
   14000f5f0:	movsxd rdx,DWORD PTR [rbp+0x14]
   14000f5f4:	mov    rcx,QWORD PTR [rbp+0x18]
   14000f5f8:	shl    rdx,0x3
   14000f5fc:	call   QWORD PTR [rip+0x10bd6]        # 0x1400201d8
   14000f602:	mov    QWORD PTR [rbp+0x18],rax
   14000f606:	movsxd rdx,DWORD PTR [rbp+0x14]
   14000f60a:	mov    rcx,QWORD PTR [rbp+0x20]
   14000f60e:	shl    rdx,0x2
   14000f612:	call   QWORD PTR [rip+0x10bc0]        # 0x1400201d8
   14000f618:	mov    QWORD PTR [rbp+0x20],rax
   14000f61c:	movsxd rdx,DWORD PTR [rbp+0x14]
   14000f620:	mov    rcx,QWORD PTR [rbp+0x28]
   14000f624:	shl    rdx,0x4
   14000f628:	call   QWORD PTR [rip+0x10baa]        # 0x1400201d8
   14000f62e:	mov    QWORD PTR [rbp+0x28],rax
   14000f632:	movsxd rdx,DWORD PTR [rbp+0x14]
   14000f636:	mov    rcx,QWORD PTR [rbp+0x30]
   14000f63a:	shl    rdx,0x4
   14000f63e:	call   QWORD PTR [rip+0x10b94]        # 0x1400201d8
   14000f644:	lea    r9,[rip+0xffffffffffff09b5]        # 0x140000000
   14000f64b:	mov    edx,0xffffff96
   14000f650:	mov    QWORD PTR [rbp+0x30],rax
   14000f654:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000f658:	mov    rax,QWORD PTR [rbp+0x20]
   14000f65c:	mov    DWORD PTR [rax+rcx*4],r13d
   14000f660:	cmp    r15d,0xffffffff
   14000f664:	jne    0x14000f7a2
   14000f66a:	movsxd rax,r13d
   14000f66d:	cmp    dx,WORD PTR [r9+rax*2+0x23f70]
   14000f676:	je     0x14000f7a2
   14000f67c:	mov    eax,DWORD PTR [rbp+0x58]
   14000f67f:	mov    DWORD PTR [rbp+0x68],eax
   14000f682:	mov    eax,DWORD PTR [rbp+0x5c]
   14000f685:	mov    DWORD PTR [rbp+0x6c],eax
   14000f688:	mov    eax,DWORD PTR [rbp+0x60]
   14000f68b:	mov    DWORD PTR [rbp+0x70],eax
   14000f68e:	mov    eax,DWORD PTR [rbp+0x64]
   14000f691:	mov    DWORD PTR [rbp+0x74],eax
   14000f694:	mov    rax,QWORD PTR [rbp+0x110]
   14000f69b:	cmp    QWORD PTR [rbp+0x108],rax
   14000f6a2:	jne    0x14000f755
   14000f6a8:	mov    rcx,rbx
   14000f6ab:	call   0x14001aef0
   14000f6b0:	lea    rdx,[rbx+0x20]
   14000f6b4:	lea    rcx,[rsp+0x190]
   14000f6bc:	mov    r15d,eax
   14000f6bf:	mov    rax,QWORD PTR [rbx+0x68]
   14000f6c3:	mov    QWORD PTR [rbp+0x40],rax
   14000f6c7:	call   QWORD PTR [rip+0x10d63]        # 0x140020430
   14000f6cd:	mov    rax,QWORD PTR [rsp+0x190]
   14000f6d5:	mov    QWORD PTR [rbp+0x48],rax
   14000f6d9:	mov    eax,DWORD PTR [rsp+0x198]
   14000f6e0:	lea    rcx,[rbx+0x8]
   14000f6e4:	mov    DWORD PTR [rbp+0x50],eax
   14000f6e7:	mov    eax,DWORD PTR [rsp+0x19c]
   14000f6ee:	mov    DWORD PTR [rbp+0x54],eax
   14000f6f1:	mov    rdi,QWORD PTR [rbx+0x50]
   14000f6f5:	call   QWORD PTR [rip+0x10d25]        # 0x140020420
   14000f6fb:	mov    rcx,rdi
   14000f6fe:	sub    rdi,QWORD PTR [rbx+0x48]
   14000f702:	lea    r9,[rip+0xffffffffffff08f7]        # 0x140000000
   14000f709:	sub    rcx,rax
   14000f70c:	mov    eax,DWORD PTR [rbx+0x84]
   14000f712:	sar    rdi,1
   14000f715:	mov    DWORD PTR [rsp+0x5c],eax
   14000f719:	mov    eax,DWORD PTR [rbx+0x88]
   14000f71f:	sar    rcx,1
   14000f722:	mov    DWORD PTR [rsp+0x58],ecx
   14000f726:	lea    rcx,[rsp+0x58]
   14000f72b:	mov    DWORD PTR [rsp+0x60],eax
   14000f72f:	inc    edi
   14000f731:	mov    DWORD PTR [rsp+0x64],edi
   14000f735:	mov    eax,DWORD PTR [rcx]
   14000f737:	lea    rdi,[rip+0x13302]        # 0x140022a40
   14000f73e:	mov    DWORD PTR [rbp+0x58],eax
   14000f741:	mov    eax,DWORD PTR [rcx+0x4]
   14000f744:	mov    DWORD PTR [rbp+0x5c],eax
   14000f747:	mov    eax,DWORD PTR [rcx+0x8]
   14000f74a:	mov    DWORD PTR [rbp+0x60],eax
   14000f74d:	mov    eax,DWORD PTR [rcx+0xc]
   14000f750:	mov    DWORD PTR [rbp+0x64],eax
   14000f753:	jmp    0x14000f7a2
   14000f755:	mov    rcx,QWORD PTR [rbp+0x108]
   14000f75c:	mov    rax,QWORD PTR [rcx+0x8]
   14000f760:	mov    r15d,DWORD PTR [rcx]
   14000f763:	mov    QWORD PTR [rbp+0x40],rax
   14000f767:	mov    rax,QWORD PTR [rcx+0x20]
   14000f76b:	mov    QWORD PTR [rbp+0x48],rax
   14000f76f:	mov    eax,DWORD PTR [rcx+0x28]
   14000f772:	mov    DWORD PTR [rbp+0x50],eax
   14000f775:	mov    eax,DWORD PTR [rcx+0x2c]
   14000f778:	mov    DWORD PTR [rbp+0x54],eax
   14000f77b:	mov    rcx,QWORD PTR [rbp+0x108]
   14000f782:	mov    eax,DWORD PTR [rcx+0x10]
   14000f785:	mov    DWORD PTR [rbp+0x58],eax
   14000f788:	mov    eax,DWORD PTR [rcx+0x14]
   14000f78b:	mov    DWORD PTR [rbp+0x5c],eax
   14000f78e:	mov    eax,DWORD PTR [rcx+0x18]
   14000f791:	mov    DWORD PTR [rbp+0x60],eax
   14000f794:	mov    eax,DWORD PTR [rcx+0x1c]
   14000f797:	mov    DWORD PTR [rbp+0x64],eax
   14000f79a:	add    QWORD PTR [rbp+0x108],0x30
   14000f7a2:	movsxd rdx,r13d
   14000f7a5:	movsx  eax,WORD PTR [r9+rdx*2+0x23f70]
   14000f7ae:	add    eax,r15d
   14000f7b1:	js     0x14000f7cf
   14000f7b3:	movsxd rcx,eax
   14000f7b6:	movsx  eax,WORD PTR [r9+rcx*2+0x26620]
   14000f7bf:	cmp    eax,r15d
   14000f7c2:	jne    0x14000f7cf
   14000f7c4:	movsx  r13d,WORD PTR [r9+rcx*2+0x249e0]
   14000f7cd:	jmp    0x14000f7db
   14000f7cf:	movsx  r13d,WORD PTR [r9+rdx*2+0x23950]
   14000f7d8:	neg    r13d
   14000f7db:	test   r13d,r13d
   14000f7de:	jle    0x14000f84b
   14000f7e0:	cmp    r13d,0x299
   14000f7e7:	je     0x140015eb6
   14000f7ed:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000f7f1:	mov    rcx,QWORD PTR [rbp+0x18]
   14000f7f5:	mov    rax,QWORD PTR [rbp+0x40]
   14000f7f9:	mov    QWORD PTR [rcx+rdx*8],rax
   14000f7fd:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000f801:	mov    rax,QWORD PTR [rbp+0x48]
   14000f805:	shl    rcx,0x4
   14000f809:	or     r15d,0xffffffff
   14000f80d:	add    rcx,QWORD PTR [rbp+0x30]
   14000f811:	mov    QWORD PTR [rcx],rax
   14000f814:	mov    eax,DWORD PTR [rbp+0x50]
   14000f817:	mov    DWORD PTR [rcx+0x8],eax
   14000f81a:	mov    eax,DWORD PTR [rbp+0x54]
   14000f81d:	mov    DWORD PTR [rcx+0xc],eax
   14000f820:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000f824:	mov    eax,DWORD PTR [rbp+0x58]
   14000f827:	mov    rcx,QWORD PTR [rbp+0x28]
   14000f82b:	add    rdx,rdx
   14000f82e:	mov    DWORD PTR [rcx+rdx*8],eax
   14000f831:	mov    eax,DWORD PTR [rbp+0x5c]
   14000f834:	mov    DWORD PTR [rcx+rdx*8+0x4],eax
   14000f838:	mov    eax,DWORD PTR [rbp+0x60]
   14000f83b:	mov    DWORD PTR [rcx+rdx*8+0x8],eax
   14000f83f:	mov    eax,DWORD PTR [rbp+0x64]
   14000f842:	mov    DWORD PTR [rcx+rdx*8+0xc],eax
   14000f846:	jmp    0x140015565
   14000f84b:	jns    0x140015565
   14000f851:	or     ecx,0xffffffff
   14000f854:	sub    ecx,r13d
   14000f857:	movsxd r14,ecx
   14000f85a:	movsx  eax,WORD PTR [r9+r14*2+0x23680]
   14000f863:	sub    DWORD PTR [rbp+0x10],eax
   14000f866:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000f86a:	cmp    ecx,0x163
   14000f870:	ja     0x140015510
   14000f876:	movsxd rax,ecx
   14000f879:	movzx  eax,BYTE PTR [r9+rax*1+0x165d8]
   14000f882:	mov    ecx,DWORD PTR [r9+rax*4+0x16300]
   14000f88a:	add    rcx,r9
   14000f88d:	jmp    rcx
   14000f88f:	mov    rcx,QWORD PTR [rbp+0x18]
   14000f893:	mov    rax,QWORD PTR [rcx+rdx*8+0x8]
   14000f898:	mov    QWORD PTR [rcx+rdx*8],rax
   14000f89c:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000f8a0:	mov    rax,QWORD PTR [rbp+0x18]
   14000f8a4:	mov    rcx,QWORD PTR [rax+rcx*8]
   14000f8a8:	mov    QWORD PTR [rbp+0x38],rcx
   14000f8ac:	jmp    0x140015510
   14000f8b1:	mov    rcx,QWORD PTR [rbp+0x8]
   14000f8b5:	cmp    QWORD PTR [rcx+0x18],r12
   14000f8b9:	je     0x14000f8cf
   14000f8bb:	mov    r8,QWORD PTR [rcx+0x18]
   14000f8bf:	lea    rax,[r8+0x20]
   14000f8c3:	cmp    rax,QWORD PTR [rcx+0x20]
   14000f8c7:	jae    0x14000f8cf
   14000f8c9:	mov    QWORD PTR [rcx+0x18],rax
   14000f8cd:	jmp    0x14000f8e3
   14000f8cf:	mov    edx,0x20
   14000f8d4:	call   0x14000ccd0
   14000f8d9:	lea    r9,[rip+0xffffffffffff0720]        # 0x140000000
   14000f8e0:	mov    r8,rax
   14000f8e3:	test   r8,r8
   14000f8e6:	je     0x14000f934
   14000f8e8:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000f8ec:	mov    rax,QWORD PTR [rbp+0x18]
   14000f8f0:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   14000f8f5:	mov    rdi,QWORD PTR [rdx+0x10]
   14000f8f9:	mov    QWORD PTR [rdx+0x10],r12
   14000f8fd:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000f901:	mov    rax,QWORD PTR [rbp+0x18]
   14000f905:	mov    rdx,QWORD PTR [rax+rcx*8]
   14000f909:	lea    rax,[rip+0x12d78]        # 0x140022688
   14000f910:	mov    QWORD PTR [r8],rax
   14000f913:	mov    QWORD PTR [r8+0x10],rdx
   14000f917:	mov    QWORD PTR [r8+0x18],rdi
   14000f91b:	mov    DWORD PTR [r8+0x8],0x57
   14000f923:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000f927:	mov    rax,QWORD PTR [rbp+0x18]
   14000f92b:	mov    QWORD PTR [rax+rcx*8],r8
   14000f92f:	jmp    0x140015510
   14000f934:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000f938:	mov    rax,QWORD PTR [rbp+0x18]
   14000f93c:	mov    r8,r12
   14000f93f:	mov    QWORD PTR [rax+rcx*8],r12
   14000f943:	jmp    0x140015510
   14000f948:	mov    rax,QWORD PTR [rbp+0x18]
   14000f94c:	mov    rdx,QWORD PTR [rax+rdx*8]
   14000f950:	mov    rdi,QWORD PTR [rdx+0x18]
   14000f954:	mov    QWORD PTR [rdx+0x18],r12
   14000f958:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000f95c:	mov    rax,QWORD PTR [rbp+0x18]
   14000f960:	mov    QWORD PTR [rax+rcx*8],rdi
   14000f964:	jmp    0x140015510
   14000f969:	mov    rdx,QWORD PTR [rbp+0x8]
   14000f96d:	mov    ecx,0x20
   14000f972:	call   0x14000e810
   14000f977:	mov    rdi,rax
   14000f97a:	test   rax,rax
   14000f97d:	je     0x14000f9a6
   14000f97f:	mov    rax,QWORD PTR [rbp+0x18]
   14000f983:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000f987:	mov    rdx,QWORD PTR [rax+rcx*8]
   14000f98b:	lea    rax,[rip+0x12ca6]        # 0x140022638
   14000f992:	mov    QWORD PTR [rdi],rax
   14000f995:	mov    QWORD PTR [rdi+0x10],rdx
   14000f999:	mov    QWORD PTR [rdi+0x18],rdi
   14000f99d:	mov    DWORD PTR [rdi+0x8],0x5e
   14000f9a4:	jmp    0x14000f9a9
   14000f9a6:	mov    rdi,r12
   14000f9a9:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000f9ad:	mov    rax,QWORD PTR [rbp+0x18]
   14000f9b1:	lea    r9,[rip+0xffffffffffff0648]        # 0x140000000
   14000f9b8:	mov    QWORD PTR [rax+rcx*8],rdi
   14000f9bc:	jmp    0x140015510
   14000f9c1:	mov    rdx,QWORD PTR [rbp+0x8]
   14000f9c5:	mov    ecx,0x20
   14000f9ca:	call   0x14000e810
   14000f9cf:	mov    rdi,rax
   14000f9d2:	test   rax,rax
   14000f9d5:	je     0x14000f9a6
   14000f9d7:	mov    rax,QWORD PTR [rbp+0x18]
   14000f9db:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000f9df:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   14000f9e4:	mov    rcx,QWORD PTR [rax+rcx*8]
   14000f9e8:	lea    rax,[rip+0x12c49]        # 0x140022638
   14000f9ef:	mov    QWORD PTR [rdi],rax
   14000f9f2:	mov    QWORD PTR [rdi+0x10],rdx
   14000f9f6:	mov    DWORD PTR [rdi+0x8],0x5e
   14000f9fd:	mov    rax,QWORD PTR [rcx+0x18]
   14000fa01:	mov    QWORD PTR [rdi+0x18],rax
   14000fa05:	mov    QWORD PTR [rcx+0x18],rdi
   14000fa09:	jmp    0x14000f9a9
   14000fa0b:	mov    rdi,QWORD PTR [rbp+0x28]
   14000fa0f:	mov    rax,QWORD PTR [rbp+0x18]
   14000fa13:	lea    r8,[rdx+0x1]
   14000fa17:	mov    rdx,QWORD PTR [rax+rdx*8]
   14000fa1b:	add    r8,r8
   14000fa1e:	mov    eax,DWORD PTR [rdi+r8*8]
   14000fa22:	mov    DWORD PTR [rdx+0x28],eax
   14000fa25:	mov    eax,DWORD PTR [rdi+r8*8+0x4]
   14000fa2a:	mov    DWORD PTR [rdx+0x2c],eax
   14000fa2d:	mov    eax,DWORD PTR [rdi+r8*8+0x8]
   14000fa32:	mov    DWORD PTR [rdx+0x30],eax
   14000fa35:	mov    eax,DWORD PTR [rdi+r8*8+0xc]
   14000fa3a:	mov    DWORD PTR [rdx+0x34],eax
   14000fa3d:	jmp    0x140015510
   14000fa42:	mov    rax,QWORD PTR [rbp+0x18]
   14000fa46:	lea    r8,[rdx+0x1]
   14000fa4a:	mov    rdx,QWORD PTR [rax+rdx*8]
   14000fa4e:	mov    rdi,QWORD PTR [rbp+0x28]
   14000fa52:	add    r8,r8
   14000fa55:	mov    eax,DWORD PTR [rdi+r8*8]
   14000fa59:	mov    DWORD PTR [rdx+0x88],eax
   14000fa5f:	mov    eax,DWORD PTR [rdi+r8*8+0x4]
   14000fa64:	mov    DWORD PTR [rdx+0x8c],eax
   14000fa6a:	mov    eax,DWORD PTR [rdi+r8*8+0x8]
   14000fa6f:	mov    DWORD PTR [rdx+0x90],eax
   14000fa75:	mov    eax,DWORD PTR [rdi+r8*8+0xc]
   14000fa7a:	mov    DWORD PTR [rdx+0x94],eax
   14000fa80:	jmp    0x140015510
   14000fa85:	mov    rdi,QWORD PTR [rbp+0x28]
   14000fa89:	mov    rax,QWORD PTR [rbp+0x18]
   14000fa8d:	lea    r8,[rdx+0x1]
   14000fa91:	mov    rdx,QWORD PTR [rax+rdx*8]
   14000fa95:	add    r8,r8
   14000fa98:	mov    eax,DWORD PTR [rdi+r8*8]
   14000fa9c:	mov    DWORD PTR [rdx+0x58],eax
   14000fa9f:	mov    eax,DWORD PTR [rdi+r8*8+0x4]
   14000faa4:	mov    DWORD PTR [rdx+0x5c],eax
   14000faa7:	mov    eax,DWORD PTR [rdi+r8*8+0x8]
   14000faac:	mov    DWORD PTR [rdx+0x60],eax
   14000faaf:	mov    eax,DWORD PTR [rdi+r8*8+0xc]
   14000fab4:	mov    DWORD PTR [rdx+0x64],eax
   14000fab7:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000fabb:	mov    rax,QWORD PTR [rbp+0x18]
   14000fabf:	mov    rdx,QWORD PTR [rax+rcx*8]
   14000fac3:	lea    r8,[rcx+0x2]
   14000fac7:	jmp    0x14000fa4e
   14000fac9:	mov    rdi,QWORD PTR [rbp+0x28]
   14000facd:	mov    rax,QWORD PTR [rbp+0x18]
   14000fad1:	lea    r8,[rdx+0x1]
   14000fad5:	mov    rdx,QWORD PTR [rax+rdx*8]
   14000fad9:	add    r8,r8
   14000fadc:	mov    eax,DWORD PTR [rdi+r8*8]
   14000fae0:	mov    DWORD PTR [rdx+0x58],eax
   14000fae3:	mov    eax,DWORD PTR [rdi+r8*8+0x4]
   14000fae8:	mov    DWORD PTR [rdx+0x5c],eax
   14000faeb:	mov    eax,DWORD PTR [rdi+r8*8+0x8]
   14000faf0:	mov    DWORD PTR [rdx+0x60],eax
   14000faf3:	mov    eax,DWORD PTR [rdi+r8*8+0xc]
   14000faf8:	mov    DWORD PTR [rdx+0x64],eax
   14000fafb:	mov    rdi,QWORD PTR [rbp+0x28]
   14000faff:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000fb03:	mov    rax,QWORD PTR [rbp+0x18]
   14000fb07:	lea    r8,[rcx+0x2]
   14000fb0b:	mov    rdx,QWORD PTR [rax+rcx*8]
   14000fb0f:	add    r8,r8
   14000fb12:	mov    eax,DWORD PTR [rdi+r8*8]
   14000fb16:	mov    DWORD PTR [rdx+0x68],eax
   14000fb19:	mov    eax,DWORD PTR [rdi+r8*8+0x4]
   14000fb1e:	mov    DWORD PTR [rdx+0x6c],eax
   14000fb21:	mov    eax,DWORD PTR [rdi+r8*8+0x8]
   14000fb26:	mov    DWORD PTR [rdx+0x70],eax
   14000fb29:	mov    eax,DWORD PTR [rdi+r8*8+0xc]
   14000fb2e:	mov    DWORD PTR [rdx+0x74],eax
   14000fb31:	mov    rdi,QWORD PTR [rbp+0x28]
   14000fb35:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000fb39:	mov    rax,QWORD PTR [rbp+0x18]
   14000fb3d:	lea    r8,[rcx+0x3]
   14000fb41:	mov    rdx,QWORD PTR [rax+rcx*8]
   14000fb45:	add    r8,r8
   14000fb48:	mov    eax,DWORD PTR [rdi+r8*8]
   14000fb4c:	mov    DWORD PTR [rdx+0x78],eax
   14000fb4f:	mov    eax,DWORD PTR [rdi+r8*8+0x4]
   14000fb54:	mov    DWORD PTR [rdx+0x7c],eax
   14000fb57:	mov    eax,DWORD PTR [rdi+r8*8+0x8]
   14000fb5c:	mov    DWORD PTR [rdx+0x80],eax
   14000fb62:	mov    eax,DWORD PTR [rdi+r8*8+0xc]
   14000fb67:	mov    DWORD PTR [rdx+0x84],eax
   14000fb6d:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000fb71:	lea    eax,[rcx+0x3]
   14000fb74:	movsxd rdi,eax
   14000fb77:	mov    rax,QWORD PTR [rbp+0x18]
   14000fb7b:	mov    rdx,QWORD PTR [rax+rcx*8]
   14000fb7f:	shl    rdi,0x4
   14000fb83:	add    rdi,QWORD PTR [rbp+0x30]
   14000fb87:	mov    rax,QWORD PTR [rdi]
   14000fb8a:	mov    QWORD PTR [rdx+0x28],rax
   14000fb8e:	mov    eax,DWORD PTR [rdi+0x8]
   14000fb91:	mov    DWORD PTR [rdx+0x30],eax
   14000fb94:	mov    eax,DWORD PTR [rdi+0xc]
   14000fb97:	mov    DWORD PTR [rdx+0x34],eax
   14000fb9a:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000fb9e:	mov    rax,QWORD PTR [rbp+0x18]
   14000fba2:	mov    rdx,QWORD PTR [rax+rcx*8]
   14000fba6:	lea    r8,[rcx+0x4]
   14000fbaa:	jmp    0x14000fa4e
   14000fbaf:	mov    rdi,QWORD PTR [rbp+0x28]
   14000fbb3:	mov    rax,QWORD PTR [rbp+0x18]
   14000fbb7:	lea    r8,[rdx+0x1]
   14000fbbb:	mov    rdx,QWORD PTR [rax+rdx*8]
   14000fbbf:	add    r8,r8
   14000fbc2:	mov    eax,DWORD PTR [rdi+r8*8]
   14000fbc6:	mov    DWORD PTR [rdx+0x68],eax
   14000fbc9:	mov    eax,DWORD PTR [rdi+r8*8+0x4]
   14000fbce:	mov    DWORD PTR [rdx+0x6c],eax
   14000fbd1:	mov    eax,DWORD PTR [rdi+r8*8+0x8]
   14000fbd6:	mov    DWORD PTR [rdx+0x70],eax
   14000fbd9:	mov    eax,DWORD PTR [rdi+r8*8+0xc]
   14000fbde:	mov    DWORD PTR [rdx+0x74],eax
   14000fbe1:	mov    rdi,QWORD PTR [rbp+0x28]
   14000fbe5:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000fbe9:	mov    rax,QWORD PTR [rbp+0x18]
   14000fbed:	lea    r8,[rcx+0x2]
   14000fbf1:	mov    rdx,QWORD PTR [rax+rcx*8]
   14000fbf5:	add    r8,r8
   14000fbf8:	mov    eax,DWORD PTR [rdi+r8*8]
   14000fbfc:	mov    DWORD PTR [rdx+0x78],eax
   14000fbff:	mov    eax,DWORD PTR [rdi+r8*8+0x4]
   14000fc04:	mov    DWORD PTR [rdx+0x7c],eax
   14000fc07:	mov    eax,DWORD PTR [rdi+r8*8+0x8]
   14000fc0c:	mov    DWORD PTR [rdx+0x80],eax
   14000fc12:	mov    eax,DWORD PTR [rdi+r8*8+0xc]
   14000fc17:	mov    DWORD PTR [rdx+0x84],eax
   14000fc1d:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000fc21:	lea    eax,[rcx+0x2]
   14000fc24:	movsxd rdi,eax
   14000fc27:	mov    rax,QWORD PTR [rbp+0x18]
   14000fc2b:	mov    rdx,QWORD PTR [rax+rcx*8]
   14000fc2f:	shl    rdi,0x4
   14000fc33:	add    rdi,QWORD PTR [rbp+0x30]
   14000fc37:	mov    rax,QWORD PTR [rdi]
   14000fc3a:	mov    QWORD PTR [rdx+0x28],rax
   14000fc3e:	mov    eax,DWORD PTR [rdi+0x8]
   14000fc41:	mov    DWORD PTR [rdx+0x30],eax
   14000fc44:	mov    eax,DWORD PTR [rdi+0xc]
   14000fc47:	mov    DWORD PTR [rdx+0x34],eax
   14000fc4a:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000fc4e:	mov    rax,QWORD PTR [rbp+0x18]
   14000fc52:	mov    rdx,QWORD PTR [rax+rcx*8]
   14000fc56:	lea    r8,[rcx+0x3]
   14000fc5a:	jmp    0x14000fa4e
   14000fc5f:	lea    eax,[rdx+0x1]
   14000fc62:	mov    rdx,QWORD PTR [rbp+0x18]
   14000fc66:	mov    rdi,r12
   14000fc69:	movsxd rcx,eax
   14000fc6c:	mov    rdx,QWORD PTR [rdx+rcx*8]
   14000fc70:	mov    rcx,rbp
   14000fc73:	call   0x14000ec50
   14000fc78:	mov    rbx,rax
   14000fc7b:	test   rax,rax
   14000fc7e:	je     0x14000fcd0
   14000fc80:	mov    rdx,QWORD PTR [rbp+0x8]
   14000fc84:	mov    ecx,0x38
   14000fc89:	call   0x14000e810
   14000fc8e:	mov    rdi,rax
   14000fc91:	test   rax,rax
   14000fc94:	je     0x14000fccd
   14000fc96:	lea    rax,[rip+0x1294b]        # 0x1400225e8
   14000fc9d:	mov    QWORD PTR [rdi],rax
   14000fca0:	mov    QWORD PTR [rdi+0x10],rbx
   14000fca4:	mov    DWORD PTR [rdi+0x18],r12d
   14000fca8:	mov    DWORD PTR [rdi+0x1c],r12d
   14000fcac:	mov    DWORD PTR [rdi+0x20],r12d
   14000fcb0:	mov    DWORD PTR [rdi+0x24],r12d
   14000fcb4:	mov    DWORD PTR [rdi+0x28],r12d
   14000fcb8:	mov    DWORD PTR [rdi+0x2c],r12d
   14000fcbc:	mov    DWORD PTR [rdi+0x30],r12d
   14000fcc0:	mov    DWORD PTR [rdi+0x34],r12d
   14000fcc4:	mov    DWORD PTR [rdi+0x8],0x56
   14000fccb:	jmp    0x14000fcd0
   14000fccd:	mov    rdi,r12
   14000fcd0:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000fcd4:	mov    rax,QWORD PTR [rbp+0x18]
   14000fcd8:	mov    QWORD PTR [rax+rcx*8],rdi
   14000fcdc:	test   rdi,rdi
   14000fcdf:	je     0x140015ecb
   14000fce5:	mov    rcx,QWORD PTR [rbp+0x28]
   14000fce9:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000fced:	lea    r9,[rip+0xffffffffffff030c]        # 0x140000000
   14000fcf4:	add    rdx,rdx
   14000fcf7:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000fcfa:	mov    DWORD PTR [rdi+0x18],eax
   14000fcfd:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000fd01:	mov    DWORD PTR [rdi+0x1c],eax
   14000fd04:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000fd08:	mov    DWORD PTR [rdi+0x20],eax
   14000fd0b:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000fd0f:	mov    DWORD PTR [rdi+0x24],eax
   14000fd12:	jmp    0x140015510
   14000fd17:	mov    rcx,QWORD PTR [rbp+0x18]
   14000fd1b:	mov    rdi,r12
   14000fd1e:	mov    rbx,QWORD PTR [rcx+rdx*8+0x8]
   14000fd23:	test   rbx,rbx
   14000fd26:	je     0x14000fd4f
   14000fd28:	cmp    DWORD PTR [rbx+0x8],0x3d
   14000fd2c:	jne    0x14000fd4f
   14000fd2e:	mov    rdx,QWORD PTR [rbp+0x8]
   14000fd32:	mov    ecx,0x98
   14000fd37:	call   0x14000e810
   14000fd3c:	test   rax,rax
   14000fd3f:	je     0x14000fd8a
   14000fd41:	lea    rdx,[rbx+0x10]
   14000fd45:	mov    rcx,rax
   14000fd48:	call   0x14000e100
   14000fd4d:	jmp    0x14000fd87
   14000fd4f:	lea    eax,[rdx+0x1]
   14000fd52:	movsxd rdx,eax
   14000fd55:	mov    rdx,QWORD PTR [rcx+rdx*8]
   14000fd59:	mov    rcx,rbp
   14000fd5c:	call   0x14000ed20
   14000fd61:	mov    rbx,rax
   14000fd64:	test   rax,rax
   14000fd67:	je     0x14000fdb3
   14000fd69:	mov    rdx,QWORD PTR [rbp+0x8]
   14000fd6d:	mov    ecx,0x98
   14000fd72:	call   0x14000e810
   14000fd77:	test   rax,rax
   14000fd7a:	je     0x14000fd8a
   14000fd7c:	mov    rdx,rbx
   14000fd7f:	mov    rcx,rax
   14000fd82:	call   0x14000e1c0
   14000fd87:	mov    rdi,rax
   14000fd8a:	mov    rcx,QWORD PTR [rbp+0x28]
   14000fd8e:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000fd92:	inc    rdx
   14000fd95:	add    rdx,rdx
   14000fd98:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000fd9b:	mov    DWORD PTR [rdi+0x48],eax
   14000fd9e:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000fda2:	mov    DWORD PTR [rdi+0x4c],eax
   14000fda5:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000fda9:	mov    DWORD PTR [rdi+0x50],eax
   14000fdac:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000fdb0:	mov    DWORD PTR [rdi+0x54],eax
   14000fdb3:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000fdb7:	mov    rax,QWORD PTR [rbp+0x18]
   14000fdbb:	mov    QWORD PTR [rax+rcx*8],rdi
   14000fdbf:	test   rdi,rdi
   14000fdc2:	je     0x140015f84
   14000fdc8:	mov    rcx,QWORD PTR [rbp+0x28]
   14000fdcc:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000fdd0:	lea    r9,[rip+0xffffffffffff0229]        # 0x140000000
   14000fdd7:	add    rdx,rdx
   14000fdda:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000fddd:	mov    DWORD PTR [rdi+0x38],eax
   14000fde0:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000fde4:	mov    DWORD PTR [rdi+0x3c],eax
   14000fde7:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000fdeb:	mov    DWORD PTR [rdi+0x40],eax
   14000fdee:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000fdf2:	mov    DWORD PTR [rdi+0x44],eax
   14000fdf5:	jmp    0x140015510
   14000fdfa:	mov    rdx,QWORD PTR [rbp+0x8]
   14000fdfe:	mov    ecx,0x20
   14000fe03:	call   0x14000e810
   14000fe08:	mov    rdi,rax
   14000fe0b:	test   rax,rax
   14000fe0e:	je     0x14000f9a6
   14000fe14:	mov    rax,QWORD PTR [rbp+0x18]
   14000fe18:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000fe1c:	mov    rdx,QWORD PTR [rax+rcx*8]
   14000fe20:	lea    rax,[rip+0x12721]        # 0x140022548
   14000fe27:	mov    QWORD PTR [rdi],rax
   14000fe2a:	mov    QWORD PTR [rdi+0x10],rdi
   14000fe2e:	mov    QWORD PTR [rdi+0x18],rdx
   14000fe32:	mov    DWORD PTR [rdi+0x8],0x54
   14000fe39:	jmp    0x14000f9a9
   14000fe3e:	mov    rdx,QWORD PTR [rbp+0x8]
   14000fe42:	mov    ecx,0x20
   14000fe47:	call   0x14000e810
   14000fe4c:	mov    rdi,rax
   14000fe4f:	test   rax,rax
   14000fe52:	je     0x14000f9a6
   14000fe58:	mov    rax,QWORD PTR [rbp+0x18]
   14000fe5c:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000fe60:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   14000fe65:	mov    rcx,QWORD PTR [rax+rcx*8]
   14000fe69:	lea    rax,[rip+0x126d8]        # 0x140022548
   14000fe70:	mov    QWORD PTR [rdi],rax
   14000fe73:	mov    QWORD PTR [rdi+0x18],rdx
   14000fe77:	mov    DWORD PTR [rdi+0x8],0x54
   14000fe7e:	mov    rax,QWORD PTR [rcx+0x10]
   14000fe82:	mov    QWORD PTR [rdi+0x10],rax
   14000fe86:	mov    QWORD PTR [rcx+0x10],rdi
   14000fe8a:	jmp    0x14000f9a9
   14000fe8f:	mov    rdx,QWORD PTR [rbp+0x8]
   14000fe93:	mov    ecx,0x30
   14000fe98:	call   0x14000e810
   14000fe9d:	mov    rdi,rax
   14000fea0:	test   rax,rax
   14000fea3:	je     0x14000f9a6
   14000fea9:	mov    rax,QWORD PTR [rbp+0x18]
   14000fead:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000feb1:	mov    rdx,QWORD PTR [rax+rcx*8]
   14000feb5:	lea    rax,[rip+0x1281c]        # 0x1400226d8
   14000febc:	mov    QWORD PTR [rdi],rax
   14000febf:	mov    QWORD PTR [rdi+0x10],rdi
   14000fec3:	mov    QWORD PTR [rdi+0x18],rdx
   14000fec7:	mov    DWORD PTR [rdi+0x20],r12d
   14000fecb:	mov    DWORD PTR [rdi+0x24],r12d
   14000fecf:	mov    DWORD PTR [rdi+0x28],r12d
   14000fed3:	mov    DWORD PTR [rdi+0x2c],r12d
   14000fed7:	mov    DWORD PTR [rdi+0x8],0x55
   14000fede:	jmp    0x14000f9a9
   14000fee3:	mov    rdx,QWORD PTR [rbp+0x8]
   14000fee7:	mov    ecx,0x30
   14000feec:	call   0x14000e810
   14000fef1:	mov    rdi,rax
   14000fef4:	test   rax,rax
   14000fef7:	je     0x14000ff3d
   14000fef9:	mov    rax,QWORD PTR [rbp+0x18]
   14000fefd:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000ff01:	mov    rdx,QWORD PTR [rax+rcx*8+0x10]
   14000ff06:	mov    rcx,QWORD PTR [rax+rcx*8]
   14000ff0a:	lea    rax,[rip+0x127c7]        # 0x1400226d8
   14000ff11:	mov    QWORD PTR [rdi],rax
   14000ff14:	mov    QWORD PTR [rdi+0x18],rdx
   14000ff18:	mov    DWORD PTR [rdi+0x20],r12d
   14000ff1c:	mov    DWORD PTR [rdi+0x24],r12d
   14000ff20:	mov    DWORD PTR [rdi+0x28],r12d
   14000ff24:	mov    DWORD PTR [rdi+0x2c],r12d
   14000ff28:	mov    DWORD PTR [rdi+0x8],0x55
   14000ff2f:	mov    rax,QWORD PTR [rcx+0x10]
   14000ff33:	mov    QWORD PTR [rdi+0x10],rax
   14000ff37:	mov    QWORD PTR [rcx+0x10],rdi
   14000ff3b:	jmp    0x14000ff40
   14000ff3d:	mov    rdi,r12
   14000ff40:	mov    rcx,QWORD PTR [rbp+0x28]
   14000ff44:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000ff48:	inc    rdx
   14000ff4b:	add    rdx,rdx
   14000ff4e:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000ff51:	mov    DWORD PTR [rdi+0x20],eax
   14000ff54:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000ff58:	mov    DWORD PTR [rdi+0x24],eax
   14000ff5b:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000ff5f:	mov    DWORD PTR [rdi+0x28],eax
   14000ff62:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000ff66:	mov    DWORD PTR [rdi+0x2c],eax
   14000ff69:	jmp    0x14000f9a9
   14000ff6e:	mov    rdx,QWORD PTR [rbp+0x8]
   14000ff72:	mov    ecx,0x38
   14000ff77:	call   0x14000e810
   14000ff7c:	mov    rdi,rax
   14000ff7f:	test   rax,rax
   14000ff82:	je     0x14000ffbb
   14000ff84:	lea    rax,[rip+0x1279d]        # 0x140022728
   14000ff8b:	mov    QWORD PTR [rdi],rax
   14000ff8e:	mov    DWORD PTR [rdi+0x10],r12d
   14000ff92:	mov    DWORD PTR [rdi+0x14],r12d
   14000ff96:	mov    DWORD PTR [rdi+0x18],r12d
   14000ff9a:	mov    DWORD PTR [rdi+0x1c],r12d
   14000ff9e:	mov    QWORD PTR [rdi+0x20],r12
   14000ffa2:	mov    DWORD PTR [rdi+0x28],r12d
   14000ffa6:	mov    DWORD PTR [rdi+0x2c],r12d
   14000ffaa:	mov    DWORD PTR [rdi+0x30],r12d
   14000ffae:	mov    DWORD PTR [rdi+0x34],r12d
   14000ffb2:	mov    DWORD PTR [rdi+0x8],0x53
   14000ffb9:	jmp    0x14000ffbe
   14000ffbb:	mov    rdi,r12
   14000ffbe:	mov    rcx,QWORD PTR [rbp+0x28]
   14000ffc2:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000ffc6:	add    rdx,rdx
   14000ffc9:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000ffcc:	mov    DWORD PTR [rdi+0x10],eax
   14000ffcf:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000ffd3:	mov    DWORD PTR [rdi+0x14],eax
   14000ffd6:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14000ffda:	mov    DWORD PTR [rdi+0x18],eax
   14000ffdd:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14000ffe1:	mov    DWORD PTR [rdi+0x1c],eax
   14000ffe4:	mov    rcx,QWORD PTR [rbp+0x28]
   14000ffe8:	movsxd rdx,DWORD PTR [rbp+0x10]
   14000ffec:	inc    rdx
   14000ffef:	add    rdx,rdx
   14000fff2:	mov    eax,DWORD PTR [rcx+rdx*8]
   14000fff5:	mov    DWORD PTR [rdi+0x28],eax
   14000fff8:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14000fffc:	mov    DWORD PTR [rdi+0x2c],eax
   14000ffff:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140010003:	mov    DWORD PTR [rdi+0x30],eax
   140010006:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14001000a:	mov    DWORD PTR [rdi+0x34],eax
   14001000d:	jmp    0x14000f9a9
   140010012:	mov    rdx,QWORD PTR [rbp+0x8]
   140010016:	mov    ecx,0x38
   14001001b:	call   0x14000e810
   140010020:	mov    rdi,rax
   140010023:	test   rax,rax
   140010026:	je     0x140010074
   140010028:	movsxd rcx,DWORD PTR [rbp+0x10]
   14001002c:	mov    rax,QWORD PTR [rbp+0x18]
   140010030:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140010035:	lea    rcx,[rip+0x126ec]        # 0x140022728
   14001003c:	mov    rax,QWORD PTR [rdx+0x10]
   140010040:	mov    QWORD PTR [rdx+0x10],r12
   140010044:	mov    QWORD PTR [rdi],rcx
   140010047:	mov    DWORD PTR [rdi+0x10],r12d
   14001004b:	mov    DWORD PTR [rdi+0x14],r12d
   14001004f:	mov    DWORD PTR [rdi+0x18],r12d
   140010053:	mov    DWORD PTR [rdi+0x1c],r12d
   140010057:	mov    QWORD PTR [rdi+0x20],rax
   14001005b:	mov    DWORD PTR [rdi+0x28],r12d
   14001005f:	mov    DWORD PTR [rdi+0x2c],r12d
   140010063:	mov    DWORD PTR [rdi+0x30],r12d
   140010067:	mov    DWORD PTR [rdi+0x34],r12d
   14001006b:	mov    DWORD PTR [rdi+0x8],0x53
   140010072:	jmp    0x140010077
   140010074:	mov    rdi,r12
   140010077:	mov    rcx,QWORD PTR [rbp+0x28]
   14001007b:	movsxd rdx,DWORD PTR [rbp+0x10]
   14001007f:	add    rdx,rdx
   140010082:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010085:	mov    DWORD PTR [rdi+0x10],eax
   140010088:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14001008c:	mov    DWORD PTR [rdi+0x14],eax
   14001008f:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140010093:	mov    DWORD PTR [rdi+0x18],eax
   140010096:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14001009a:	mov    DWORD PTR [rdi+0x1c],eax
   14001009d:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400100a1:	add    rdx,0x2
   1400100a5:	mov    rcx,QWORD PTR [rbp+0x28]
   1400100a9:	add    rdx,rdx
   1400100ac:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400100af:	mov    DWORD PTR [rdi+0x28],eax
   1400100b2:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400100b6:	mov    DWORD PTR [rdi+0x2c],eax
   1400100b9:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400100bd:	mov    DWORD PTR [rdi+0x30],eax
   1400100c0:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400100c4:	mov    DWORD PTR [rdi+0x34],eax
   1400100c7:	jmp    0x14000f9a9
   1400100cc:	mov    rdx,QWORD PTR [rbp+0x8]
   1400100d0:	mov    ecx,0x20
   1400100d5:	call   0x14000e810
   1400100da:	mov    r11,rax
   1400100dd:	test   rax,rax
   1400100e0:	je     0x140010125
   1400100e2:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400100e6:	mov    rax,QWORD PTR [rbp+0x18]
   1400100ea:	lea    r9,[rip+0xfffffffffffeff0f]        # 0x140000000
   1400100f1:	mov    rdi,QWORD PTR [rax+rcx*8+0x8]
   1400100f6:	mov    rdx,QWORD PTR [rax+rcx*8]
   1400100fa:	lea    rax,[rip+0x126c7]        # 0x1400227c8
   140010101:	mov    QWORD PTR [r11],rax
   140010104:	mov    QWORD PTR [r11+0x10],rdx
   140010108:	mov    QWORD PTR [r11+0x18],rdi
   14001010c:	mov    DWORD PTR [r11+0x8],0x52
   140010114:	movsxd rcx,DWORD PTR [rbp+0x10]
   140010118:	mov    rax,QWORD PTR [rbp+0x18]
   14001011c:	mov    QWORD PTR [rax+rcx*8],r11
   140010120:	jmp    0x140015510
   140010125:	mov    r11,r12
   140010128:	movsxd rcx,DWORD PTR [rbp+0x10]
   14001012c:	mov    rax,QWORD PTR [rbp+0x18]
   140010130:	lea    r9,[rip+0xfffffffffffefec9]        # 0x140000000
   140010137:	mov    QWORD PTR [rax+rcx*8],r11
   14001013b:	jmp    0x140015510
   140010140:	mov    rdx,QWORD PTR [rbp+0x8]
   140010144:	mov    ecx,0x50
   140010149:	call   0x14000e810
   14001014e:	mov    r11,rax
   140010151:	test   rax,rax
   140010154:	je     0x1400101c3
   140010156:	movsxd rcx,DWORD PTR [rbp+0x10]
   14001015a:	mov    rax,QWORD PTR [rbp+0x18]
   14001015e:	mov    rdx,QWORD PTR [rax+rcx*8+0x18]
   140010163:	mov    rdi,QWORD PTR [rdx+0x10]
   140010167:	mov    QWORD PTR [rdx+0x10],r12
   14001016b:	mov    rax,QWORD PTR [rbp+0x18]
   14001016f:	movsxd rcx,DWORD PTR [rbp+0x10]
   140010173:	mov    rdx,QWORD PTR [rax+rcx*8]
   140010177:	lea    rax,[rip+0x1278a]        # 0x140022908
   14001017e:	mov    QWORD PTR [r11],rax
   140010181:	mov    QWORD PTR [r11+0x10],rdx
   140010185:	mov    QWORD PTR [r11+0x18],rdi
   140010189:	mov    DWORD PTR [r11+0x20],r12d
   14001018d:	mov    DWORD PTR [r11+0x24],r12d
   140010191:	mov    DWORD PTR [r11+0x28],r12d
   140010195:	mov    DWORD PTR [r11+0x2c],r12d
   140010199:	mov    DWORD PTR [r11+0x30],r12d
   14001019d:	mov    DWORD PTR [r11+0x34],r12d
   1400101a1:	mov    DWORD PTR [r11+0x38],r12d
   1400101a5:	mov    DWORD PTR [r11+0x3c],r12d
   1400101a9:	mov    DWORD PTR [r11+0x40],r12d
   1400101ad:	mov    DWORD PTR [r11+0x44],r12d
   1400101b1:	mov    DWORD PTR [r11+0x48],r12d
   1400101b5:	mov    DWORD PTR [r11+0x4c],r12d
   1400101b9:	mov    DWORD PTR [r11+0x8],0x4f
   1400101c1:	jmp    0x1400101c6
   1400101c3:	mov    r11,r12
   1400101c6:	mov    rcx,QWORD PTR [rbp+0x28]
   1400101ca:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400101ce:	lea    r9,[rip+0xfffffffffffefe2b]        # 0x140000000
   1400101d5:	inc    rdx
   1400101d8:	add    rdx,rdx
   1400101db:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400101de:	mov    DWORD PTR [r11+0x20],eax
   1400101e2:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400101e6:	mov    DWORD PTR [r11+0x24],eax
   1400101ea:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400101ee:	mov    DWORD PTR [r11+0x28],eax
   1400101f2:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400101f6:	mov    DWORD PTR [r11+0x2c],eax
   1400101fa:	mov    rcx,QWORD PTR [rbp+0x28]
   1400101fe:	movsxd rdx,DWORD PTR [rbp+0x10]
   140010202:	add    rdx,0x2
   140010206:	add    rdx,rdx
   140010209:	mov    eax,DWORD PTR [rcx+rdx*8]
   14001020c:	mov    DWORD PTR [r11+0x30],eax
   140010210:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140010214:	mov    DWORD PTR [r11+0x34],eax
   140010218:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14001021c:	mov    DWORD PTR [r11+0x38],eax
   140010220:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140010224:	mov    DWORD PTR [r11+0x3c],eax
   140010228:	mov    rcx,QWORD PTR [rbp+0x28]
   14001022c:	movsxd rdx,DWORD PTR [rbp+0x10]
   140010230:	add    rdx,0x4
   140010234:	add    rdx,rdx
   140010237:	mov    eax,DWORD PTR [rcx+rdx*8]
   14001023a:	mov    DWORD PTR [r11+0x40],eax
   14001023e:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140010242:	mov    DWORD PTR [r11+0x44],eax
   140010246:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14001024a:	mov    DWORD PTR [r11+0x48],eax
   14001024e:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140010252:	mov    DWORD PTR [r11+0x4c],eax
   140010256:	movsxd rcx,DWORD PTR [rbp+0x10]
   14001025a:	mov    rax,QWORD PTR [rbp+0x18]
   14001025e:	mov    QWORD PTR [rax+rcx*8],r11
   140010262:	jmp    0x140015510
   140010267:	mov    rdx,QWORD PTR [rbp+0x8]
   14001026b:	mov    ecx,0x40
   140010270:	call   0x14000e810
   140010275:	mov    r11,rax
   140010278:	test   rax,rax
   14001027b:	je     0x1400102c7
   14001027d:	mov    rax,QWORD PTR [rbp+0x18]
   140010281:	movsxd rcx,DWORD PTR [rbp+0x10]
   140010285:	mov    rdi,QWORD PTR [rax+rcx*8+0x18]
   14001028a:	mov    rdx,QWORD PTR [rax+rcx*8+0x10]
   14001028f:	mov    rcx,QWORD PTR [rax+rcx*8]
   140010293:	lea    rax,[rip+0x125ce]        # 0x140022868
   14001029a:	mov    QWORD PTR [r11],rax
   14001029d:	mov    QWORD PTR [r11+0x10],rcx
   1400102a1:	mov    QWORD PTR [r11+0x18],rdx
   1400102a5:	mov    QWORD PTR [r11+0x20],rdi
   1400102a9:	mov    DWORD PTR [r11+0x28],r12d
   1400102ad:	mov    DWORD PTR [r11+0x2c],r12d
   1400102b1:	mov    DWORD PTR [r11+0x30],r12d
   1400102b5:	mov    DWORD PTR [r11+0x34],r12d
   1400102b9:	mov    BYTE PTR [r11+0x38],r12b
   1400102bd:	mov    DWORD PTR [r11+0x8],0x51
   1400102c5:	jmp    0x1400102ca
   1400102c7:	mov    r11,r12
   1400102ca:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400102ce:	inc    rdx
   1400102d1:	mov    rcx,QWORD PTR [rbp+0x28]
   1400102d5:	add    rdx,rdx
   1400102d8:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400102db:	mov    DWORD PTR [r11+0x28],eax
   1400102df:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400102e3:	mov    DWORD PTR [r11+0x2c],eax
   1400102e7:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400102eb:	mov    DWORD PTR [r11+0x30],eax
   1400102ef:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400102f3:	mov    DWORD PTR [r11+0x34],eax
   1400102f7:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400102fb:	mov    rax,QWORD PTR [rbp+0x18]
   1400102ff:	lea    r9,[rip+0xfffffffffffefcfa]        # 0x140000000
   140010306:	mov    QWORD PTR [rax+rcx*8],r11
   14001030a:	jmp    0x140015510
   14001030f:	mov    rdx,QWORD PTR [rbp+0x8]
   140010313:	mov    ecx,0x40
   140010318:	call   0x14000e810
   14001031d:	mov    r11,rax
   140010320:	test   rax,rax
   140010323:	je     0x14001036f
   140010325:	mov    rax,QWORD PTR [rbp+0x18]
   140010329:	movsxd rcx,DWORD PTR [rbp+0x10]
   14001032d:	mov    rdi,QWORD PTR [rax+rcx*8+0x18]
   140010332:	mov    rdx,QWORD PTR [rax+rcx*8]
   140010336:	mov    rcx,QWORD PTR [rax+rcx*8+0x10]
   14001033b:	lea    rax,[rip+0x12526]        # 0x140022868
   140010342:	mov    QWORD PTR [r11],rax
   140010345:	mov    QWORD PTR [r11+0x10],rcx
   140010349:	mov    QWORD PTR [r11+0x18],rdx
   14001034d:	mov    QWORD PTR [r11+0x20],rdi
   140010351:	mov    DWORD PTR [r11+0x28],r12d
   140010355:	mov    DWORD PTR [r11+0x2c],r12d
   140010359:	mov    DWORD PTR [r11+0x30],r12d
   14001035d:	mov    DWORD PTR [r11+0x34],r12d
   140010361:	mov    BYTE PTR [r11+0x38],r12b
   140010365:	mov    DWORD PTR [r11+0x8],0x51
   14001036d:	jmp    0x140010372
   14001036f:	mov    r11,r12
   140010372:	mov    rcx,QWORD PTR [rbp+0x28]
   140010376:	movsxd rdx,DWORD PTR [rbp+0x10]
   14001037a:	lea    r9,[rip+0xfffffffffffefc7f]        # 0x140000000
   140010381:	inc    rdx
   140010384:	add    rdx,rdx
   140010387:	mov    eax,DWORD PTR [rcx+rdx*8]
   14001038a:	mov    DWORD PTR [r11+0x28],eax
   14001038e:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140010392:	mov    DWORD PTR [r11+0x2c],eax
   140010396:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14001039a:	mov    DWORD PTR [r11+0x30],eax
   14001039e:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400103a2:	mov    DWORD PTR [r11+0x34],eax
   1400103a6:	mov    BYTE PTR [r11+0x38],0x1
   1400103ab:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400103af:	mov    rax,QWORD PTR [rbp+0x18]
   1400103b3:	mov    QWORD PTR [rax+rcx*8],r11
   1400103b7:	jmp    0x140015510
   1400103bc:	mov    rdx,QWORD PTR [rbp+0x8]
   1400103c0:	mov    ecx,0x30
   1400103c5:	call   0x14000e810
   1400103ca:	mov    r11,rax
   1400103cd:	test   rax,rax
   1400103d0:	je     0x14001040f
   1400103d2:	mov    rax,QWORD PTR [rbp+0x18]
   1400103d6:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400103da:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   1400103df:	mov    rdx,QWORD PTR [rax+rcx*8]
   1400103e3:	lea    rax,[rip+0x124ce]        # 0x1400228b8
   1400103ea:	mov    QWORD PTR [r11],rax
   1400103ed:	mov    QWORD PTR [r11+0x10],rdx
   1400103f1:	mov    QWORD PTR [r11+0x18],rdi
   1400103f5:	mov    DWORD PTR [r11+0x20],r12d
   1400103f9:	mov    DWORD PTR [r11+0x24],r12d
   1400103fd:	mov    DWORD PTR [r11+0x28],r12d
   140010401:	mov    DWORD PTR [r11+0x2c],r12d
   140010405:	mov    DWORD PTR [r11+0x8],0x5c
   14001040d:	jmp    0x140010412
   14001040f:	mov    r11,r12
   140010412:	mov    rcx,QWORD PTR [rbp+0x28]
   140010416:	movsxd rdx,DWORD PTR [rbp+0x10]
   14001041a:	inc    rdx
   14001041d:	add    rdx,rdx
   140010420:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010423:	mov    DWORD PTR [r11+0x20],eax
   140010427:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14001042b:	mov    DWORD PTR [r11+0x24],eax
   14001042f:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140010433:	mov    DWORD PTR [r11+0x28],eax
   140010437:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14001043b:	mov    DWORD PTR [r11+0x2c],eax
   14001043f:	jmp    0x1400102f7
   140010444:	mov    rax,QWORD PTR [rbp+0x18]
   140010448:	mov    rdx,QWORD PTR [rax+rdx*8]
   14001044c:	mov    rdi,QWORD PTR [rdx+0x30]
   140010450:	mov    QWORD PTR [rdx+0x30],r12
   140010454:	movsxd rcx,DWORD PTR [rbp+0x10]
   140010458:	mov    rax,QWORD PTR [rbp+0x18]
   14001045c:	mov    QWORD PTR [rax+rcx*8],rdi
   140010460:	jmp    0x140015510
   140010465:	mov    rdx,QWORD PTR [rbp+0x8]
   140010469:	mov    ecx,0x68
   14001046e:	call   0x14000e810
   140010473:	mov    r11,rax
   140010476:	test   rax,rax
   140010479:	je     0x1400104a7
   14001047b:	movsxd rcx,DWORD PTR [rbp+0x10]
   14001047f:	mov    rdi,QWORD PTR [rbp+0x30]
   140010483:	lea    eax,[rcx+0x1]
   140010486:	mov    rdx,rcx
   140010489:	mov    rcx,r11
   14001048c:	movsxd r8,eax
   14001048f:	shl    rdx,0x4
   140010493:	shl    r8,0x4
   140010497:	add    rdx,rdi
   14001049a:	add    r8,rdi
   14001049d:	call   0x14000e3b0
   1400104a2:	mov    rdi,rax
   1400104a5:	jmp    0x1400104aa
   1400104a7:	mov    rdi,r12
   1400104aa:	mov    rcx,QWORD PTR [rbp+0x28]
   1400104ae:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400104b2:	add    rdx,rdx
   1400104b5:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400104b8:	mov    DWORD PTR [rdi+0x48],eax
   1400104bb:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400104bf:	mov    DWORD PTR [rdi+0x4c],eax
   1400104c2:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400104c6:	mov    DWORD PTR [rdi+0x50],eax
   1400104c9:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400104cd:	mov    DWORD PTR [rdi+0x54],eax
   1400104d0:	mov    rcx,QWORD PTR [rbp+0x28]
   1400104d4:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400104d8:	inc    rdx
   1400104db:	add    rdx,rdx
   1400104de:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400104e1:	mov    DWORD PTR [rdi+0x58],eax
   1400104e4:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400104e8:	mov    DWORD PTR [rdi+0x5c],eax
   1400104eb:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400104ef:	mov    DWORD PTR [rdi+0x60],eax
   1400104f2:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400104f6:	mov    DWORD PTR [rdi+0x64],eax
   1400104f9:	jmp    0x14000f9a9
   1400104fe:	mov    rdx,QWORD PTR [rbp+0x8]
   140010502:	mov    ecx,0x68
   140010507:	call   0x14000e810
   14001050c:	mov    rdi,rax
   14001050f:	test   rax,rax
   140010512:	je     0x14001054e
   140010514:	movsxd rdx,DWORD PTR [rbp+0x10]
   140010518:	mov    rcx,QWORD PTR [rbp+0x30]
   14001051c:	lea    eax,[rdx+0x3]
   14001051f:	movsxd r9,eax
   140010522:	lea    eax,[rdx+0x2]
   140010525:	movsxd r8,eax
   140010528:	mov    rax,rdx
   14001052b:	mov    rdx,QWORD PTR [rbp+0x18]
   14001052f:	mov    rdx,QWORD PTR [rdx+rax*8]
   140010533:	shl    r9,0x4
   140010537:	shl    r8,0x4
   14001053b:	add    r9,rcx
   14001053e:	add    r8,rcx
   140010541:	mov    rcx,rdi
   140010544:	call   0x14000e430
   140010549:	mov    rdi,rax
   14001054c:	jmp    0x140010551
   14001054e:	mov    rdi,r12
   140010551:	mov    rcx,QWORD PTR [rbp+0x28]
   140010555:	movsxd rdx,DWORD PTR [rbp+0x10]
   140010559:	add    rdx,0x2
   14001055d:	add    rdx,rdx
   140010560:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010563:	mov    DWORD PTR [rdi+0x48],eax
   140010566:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14001056a:	mov    DWORD PTR [rdi+0x4c],eax
   14001056d:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140010571:	mov    DWORD PTR [rdi+0x50],eax
   140010574:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140010578:	mov    DWORD PTR [rdi+0x54],eax
   14001057b:	mov    rcx,QWORD PTR [rbp+0x28]
   14001057f:	movsxd rdx,DWORD PTR [rbp+0x10]
   140010583:	inc    rdx
   140010586:	add    rdx,rdx
   140010589:	mov    eax,DWORD PTR [rcx+rdx*8]
   14001058c:	mov    DWORD PTR [rdi+0x38],eax
   14001058f:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140010593:	mov    DWORD PTR [rdi+0x3c],eax
   140010596:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14001059a:	mov    DWORD PTR [rdi+0x40],eax
   14001059d:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400105a1:	mov    DWORD PTR [rdi+0x44],eax
   1400105a4:	mov    rcx,QWORD PTR [rbp+0x28]
   1400105a8:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400105ac:	add    rdx,0x3
   1400105b0:	add    rdx,rdx
   1400105b3:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400105b6:	mov    DWORD PTR [rdi+0x58],eax
   1400105b9:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400105bd:	mov    DWORD PTR [rdi+0x5c],eax
   1400105c0:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400105c4:	mov    DWORD PTR [rdi+0x60],eax
   1400105c7:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400105cb:	mov    DWORD PTR [rdi+0x64],eax
   1400105ce:	jmp    0x14000f9a9
   1400105d3:	mov    rdx,QWORD PTR [rbp+0x8]
   1400105d7:	mov    ecx,0xe8
   1400105dc:	call   0x14000e810
   1400105e1:	mov    rbx,rax
   1400105e4:	test   rax,rax
   1400105e7:	je     0x140010621
   1400105e9:	mov    eax,DWORD PTR [rbp+0x10]
   1400105ec:	lea    rcx,[rsp+0x310]
   1400105f4:	or     esi,0x1
   1400105f7:	inc    eax
   1400105f9:	mov    DWORD PTR [rsp+0x30],esi
   1400105fd:	movsxd rdi,eax
   140010600:	shl    rdi,0x4
   140010604:	add    rdi,QWORD PTR [rbp+0x30]
   140010608:	call   QWORD PTR [rip+0xfe52]        # 0x140020460
   14001060e:	mov    r8,rdi
   140010611:	mov    rdx,rax
   140010614:	mov    rcx,rbx
   140010617:	call   0x14000e850
   14001061c:	mov    rdi,rax
   14001061f:	jmp    0x140010624
   140010621:	mov    rdi,r12
   140010624:	test   sil,0x1
   140010628:	je     0x14001063f
   14001062a:	and    esi,0xfffffffe
   14001062d:	lea    rcx,[rsp+0x310]
   140010635:	mov    DWORD PTR [rsp+0x30],esi
   140010639:	call   QWORD PTR [rip+0xfe19]        # 0x140020458
   14001063f:	mov    DWORD PTR [rdi+0x10],r12d
   140010643:	mov    rcx,QWORD PTR [rbp+0x28]
   140010647:	movsxd rdx,DWORD PTR [rbp+0x10]
   14001064b:	add    rdx,rdx
   14001064e:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010651:	mov    DWORD PTR [rdi+0x88],eax
   140010657:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14001065b:	mov    DWORD PTR [rdi+0x8c],eax
   140010661:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140010665:	mov    DWORD PTR [rdi+0x90],eax
   14001066b:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14001066f:	mov    DWORD PTR [rdi+0x94],eax
   140010675:	mov    rcx,QWORD PTR [rbp+0x28]
   140010679:	movsxd rdx,DWORD PTR [rbp+0x10]
   14001067d:	inc    rdx
   140010680:	add    rdx,rdx
   140010683:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010686:	mov    DWORD PTR [rdi+0xa8],eax
   14001068c:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140010690:	mov    DWORD PTR [rdi+0xac],eax
   140010696:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14001069a:	mov    DWORD PTR [rdi+0xb0],eax
   1400106a0:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400106a4:	mov    DWORD PTR [rdi+0xb4],eax
   1400106aa:	mov    rcx,QWORD PTR [rbp+0x28]
   1400106ae:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400106b2:	inc    rdx
   1400106b5:	add    rdx,rdx
   1400106b8:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400106bb:	mov    DWORD PTR [rdi+0xb8],eax
   1400106c1:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400106c5:	mov    DWORD PTR [rdi+0xbc],eax
   1400106cb:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400106cf:	mov    DWORD PTR [rdi+0xc0],eax
   1400106d5:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400106d9:	mov    DWORD PTR [rdi+0xc4],eax
   1400106df:	mov    rax,QWORD PTR [rbp+0x18]
   1400106e3:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400106e7:	mov    rcx,QWORD PTR [rax+rcx*8+0x18]
   1400106ec:	mov    QWORD PTR [rdi+0x60],rcx
   1400106f0:	mov    rcx,QWORD PTR [rbp+0x28]
   1400106f4:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400106f8:	add    rdx,0x5
   1400106fc:	add    rdx,rdx
   1400106ff:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010702:	mov    DWORD PTR [rdi+0xd8],eax
   140010708:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14001070c:	mov    DWORD PTR [rdi+0xdc],eax
   140010712:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140010716:	mov    DWORD PTR [rdi+0xe0],eax
   14001071c:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140010720:	mov    DWORD PTR [rdi+0xe4],eax
   140010726:	jmp    0x14000f9a9
   14001072b:	mov    rdx,QWORD PTR [rbp+0x8]
   14001072f:	mov    ecx,0xe8
   140010734:	call   0x14000e810
   140010739:	mov    rbx,rax
   14001073c:	test   rax,rax
   14001073f:	je     0x140010779
   140010741:	mov    eax,DWORD PTR [rbp+0x10]
   140010744:	lea    rcx,[rsp+0x370]
   14001074c:	or     esi,0x2
   14001074f:	inc    eax
   140010751:	mov    DWORD PTR [rsp+0x30],esi
   140010755:	movsxd rdi,eax
   140010758:	shl    rdi,0x4
   14001075c:	add    rdi,QWORD PTR [rbp+0x30]
   140010760:	call   QWORD PTR [rip+0xfcfa]        # 0x140020460
   140010766:	mov    r8,rdi
   140010769:	mov    rdx,rax
   14001076c:	mov    rcx,rbx
   14001076f:	call   0x14000e850
   140010774:	mov    rdi,rax
   140010777:	jmp    0x14001077c
   140010779:	mov    rdi,r12
   14001077c:	test   sil,0x2
   140010780:	je     0x140010797
   140010782:	and    esi,0xfffffffd
   140010785:	lea    rcx,[rsp+0x370]
   14001078d:	mov    DWORD PTR [rsp+0x30],esi
   140010791:	call   QWORD PTR [rip+0xfcc1]        # 0x140020458
   140010797:	mov    DWORD PTR [rdi+0x10],r12d
   14001079b:	mov    rcx,QWORD PTR [rbp+0x28]
   14001079f:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400107a3:	add    rdx,rdx
   1400107a6:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400107a9:	mov    DWORD PTR [rdi+0x88],eax
   1400107af:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400107b3:	mov    DWORD PTR [rdi+0x8c],eax
   1400107b9:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400107bd:	mov    DWORD PTR [rdi+0x90],eax
   1400107c3:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400107c7:	mov    DWORD PTR [rdi+0x94],eax
   1400107cd:	mov    rcx,QWORD PTR [rbp+0x28]
   1400107d1:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400107d5:	inc    rdx
   1400107d8:	add    rdx,rdx
   1400107db:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400107de:	mov    DWORD PTR [rdi+0xa8],eax
   1400107e4:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400107e8:	mov    DWORD PTR [rdi+0xac],eax
   1400107ee:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400107f2:	mov    DWORD PTR [rdi+0xb0],eax
   1400107f8:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400107fc:	mov    DWORD PTR [rdi+0xb4],eax
   140010802:	mov    rcx,QWORD PTR [rbp+0x28]
   140010806:	movsxd rdx,DWORD PTR [rbp+0x10]
   14001080a:	inc    rdx
   14001080d:	add    rdx,rdx
   140010810:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010813:	mov    DWORD PTR [rdi+0xb8],eax
   140010819:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14001081d:	mov    DWORD PTR [rdi+0xbc],eax
   140010823:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140010827:	mov    DWORD PTR [rdi+0xc0],eax
   14001082d:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140010831:	mov    DWORD PTR [rdi+0xc4],eax
   140010837:	mov    rcx,QWORD PTR [rbp+0x28]
   14001083b:	movsxd rdx,DWORD PTR [rbp+0x10]
   14001083f:	add    rdx,0x2
   140010843:	add    rdx,rdx
   140010846:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010849:	mov    DWORD PTR [rdi+0xd8],eax
   14001084f:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140010853:	mov    DWORD PTR [rdi+0xdc],eax
   140010859:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14001085d:	mov    DWORD PTR [rdi+0xe0],eax
   140010863:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140010867:	mov    DWORD PTR [rdi+0xe4],eax
   14001086d:	jmp    0x14000f9a9
   140010872:	mov    rdx,QWORD PTR [rbp+0x8]
   140010876:	mov    ecx,0xe8
   14001087b:	call   0x14000e810
   140010880:	mov    r11,rax
   140010883:	test   rax,rax
   140010886:	je     0x1400108b6
   140010888:	mov    ecx,DWORD PTR [rbp+0x10]
   14001088b:	mov    rdi,QWORD PTR [rbp+0x30]
   14001088f:	lea    eax,[rcx+0x5]
   140010892:	movsxd r8,eax
   140010895:	lea    eax,[rcx+0x3]
   140010898:	mov    rcx,r11
   14001089b:	movsxd rdx,eax
   14001089e:	shl    r8,0x4
   1400108a2:	shl    rdx,0x4
   1400108a6:	add    r8,rdi
   1400108a9:	add    rdx,rdi
   1400108ac:	call   0x14000e850
   1400108b1:	mov    rdi,rax
   1400108b4:	jmp    0x1400108b9
   1400108b6:	mov    rdi,r12
   1400108b9:	mov    eax,DWORD PTR [rbp+0x10]
   1400108bc:	lea    rcx,[rdi+0x18]
   1400108c0:	inc    eax
   1400108c2:	movsxd rdx,eax
   1400108c5:	shl    rdx,0x4
   1400108c9:	add    rdx,QWORD PTR [rbp+0x30]
   1400108cd:	call   QWORD PTR [rip+0xfb65]        # 0x140020438
   1400108d3:	mov    rcx,QWORD PTR [rbp+0x28]
   1400108d7:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400108db:	add    rdx,rdx
   1400108de:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400108e1:	mov    DWORD PTR [rdi+0x88],eax
   1400108e7:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400108eb:	mov    DWORD PTR [rdi+0x8c],eax
   1400108f1:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400108f5:	mov    DWORD PTR [rdi+0x90],eax
   1400108fb:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400108ff:	mov    DWORD PTR [rdi+0x94],eax
   140010905:	mov    rcx,QWORD PTR [rbp+0x28]
   140010909:	movsxd rdx,DWORD PTR [rbp+0x10]
   14001090d:	inc    rdx
   140010910:	add    rdx,rdx
   140010913:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010916:	mov    DWORD PTR [rdi+0x98],eax
   14001091c:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140010920:	mov    DWORD PTR [rdi+0x9c],eax
   140010926:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14001092a:	mov    DWORD PTR [rdi+0xa0],eax
   140010930:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140010934:	mov    DWORD PTR [rdi+0xa4],eax
   14001093a:	mov    rcx,QWORD PTR [rbp+0x28]
   14001093e:	movsxd rdx,DWORD PTR [rbp+0x10]
   140010942:	add    rdx,0x3
   140010946:	add    rdx,rdx
   140010949:	mov    eax,DWORD PTR [rcx+rdx*8]
   14001094c:	mov    DWORD PTR [rdi+0xa8],eax
   140010952:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140010956:	mov    DWORD PTR [rdi+0xac],eax
   14001095c:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140010960:	mov    DWORD PTR [rdi+0xb0],eax
   140010966:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14001096a:	mov    DWORD PTR [rdi+0xb4],eax
   140010970:	mov    rcx,QWORD PTR [rbp+0x28]
   140010974:	movsxd rdx,DWORD PTR [rbp+0x10]
   140010978:	add    rdx,0x5
   14001097c:	add    rdx,rdx
   14001097f:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010982:	mov    DWORD PTR [rdi+0xb8],eax
   140010988:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14001098c:	mov    DWORD PTR [rdi+0xbc],eax
   140010992:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140010996:	mov    DWORD PTR [rdi+0xc0],eax
   14001099c:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400109a0:	mov    DWORD PTR [rdi+0xc4],eax
   1400109a6:	mov    rcx,QWORD PTR [rbp+0x28]
   1400109aa:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400109ae:	add    rdx,0x6
   1400109b2:	add    rdx,rdx
   1400109b5:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400109b8:	mov    DWORD PTR [rdi+0xd8],eax
   1400109be:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400109c2:	mov    DWORD PTR [rdi+0xdc],eax
   1400109c8:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400109cc:	mov    DWORD PTR [rdi+0xe0],eax
   1400109d2:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400109d6:	mov    DWORD PTR [rdi+0xe4],eax
   1400109dc:	jmp    0x14000f9a9
   1400109e1:	mov    rdx,QWORD PTR [rbp+0x8]
   1400109e5:	mov    ecx,0xe8
   1400109ea:	call   0x14000e810
   1400109ef:	mov    r11,rax
   1400109f2:	test   rax,rax
   1400109f5:	je     0x140010a25
   1400109f7:	mov    ecx,DWORD PTR [rbp+0x10]
   1400109fa:	mov    rdi,QWORD PTR [rbp+0x30]
   1400109fe:	lea    eax,[rcx+0x2]
   140010a01:	movsxd r8,eax
   140010a04:	lea    eax,[rcx+0x1]
   140010a07:	mov    rcx,r11
   140010a0a:	movsxd rdx,eax
   140010a0d:	shl    r8,0x4
   140010a11:	shl    rdx,0x4
   140010a15:	add    r8,rdi
   140010a18:	add    rdx,rdi
   140010a1b:	call   0x14000e850
   140010a20:	mov    rdi,rax
   140010a23:	jmp    0x140010a28
   140010a25:	mov    rdi,r12
   140010a28:	mov    rcx,QWORD PTR [rbp+0x28]
   140010a2c:	movsxd rdx,DWORD PTR [rbp+0x10]
   140010a30:	add    rdx,rdx
   140010a33:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010a36:	mov    DWORD PTR [rdi+0x88],eax
   140010a3c:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140010a40:	mov    DWORD PTR [rdi+0x8c],eax
   140010a46:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140010a4a:	mov    DWORD PTR [rdi+0x90],eax
   140010a50:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140010a54:	mov    DWORD PTR [rdi+0x94],eax
   140010a5a:	mov    rcx,QWORD PTR [rbp+0x28]
   140010a5e:	movsxd rdx,DWORD PTR [rbp+0x10]
   140010a62:	inc    rdx
   140010a65:	add    rdx,rdx
   140010a68:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010a6b:	mov    DWORD PTR [rdi+0xa8],eax
   140010a71:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140010a75:	mov    DWORD PTR [rdi+0xac],eax
   140010a7b:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140010a7f:	mov    DWORD PTR [rdi+0xb0],eax
   140010a85:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140010a89:	mov    DWORD PTR [rdi+0xb4],eax
   140010a8f:	mov    rcx,QWORD PTR [rbp+0x28]
   140010a93:	movsxd rdx,DWORD PTR [rbp+0x10]
   140010a97:	add    rdx,0x2
   140010a9b:	add    rdx,rdx
   140010a9e:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010aa1:	mov    DWORD PTR [rdi+0xb8],eax
   140010aa7:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140010aab:	mov    DWORD PTR [rdi+0xbc],eax
   140010ab1:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140010ab5:	mov    DWORD PTR [rdi+0xc0],eax
   140010abb:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140010abf:	mov    DWORD PTR [rdi+0xc4],eax
   140010ac5:	mov    rcx,QWORD PTR [rbp+0x28]
   140010ac9:	movsxd rdx,DWORD PTR [rbp+0x10]
   140010acd:	add    rdx,0x3
   140010ad1:	add    rdx,rdx
   140010ad4:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010ad7:	mov    DWORD PTR [rdi+0xd8],eax
   140010add:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140010ae1:	mov    DWORD PTR [rdi+0xdc],eax
   140010ae7:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140010aeb:	mov    DWORD PTR [rdi+0xe0],eax
   140010af1:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140010af5:	mov    DWORD PTR [rdi+0xe4],eax
   140010afb:	jmp    0x14000f9a9
   140010b00:	mov    rdx,QWORD PTR [rbp+0x8]
   140010b04:	mov    ecx,0xe8
   140010b09:	call   0x14000e810
   140010b0e:	mov    r11,rax
   140010b11:	test   rax,rax
   140010b14:	je     0x140010b44
   140010b16:	mov    ecx,DWORD PTR [rbp+0x10]
   140010b19:	mov    rdi,QWORD PTR [rbp+0x30]
   140010b1d:	lea    eax,[rcx+0x3]
   140010b20:	movsxd r8,eax
   140010b23:	lea    eax,[rcx+0x2]
   140010b26:	mov    rcx,r11
   140010b29:	movsxd rdx,eax
   140010b2c:	shl    r8,0x4
   140010b30:	shl    rdx,0x4
   140010b34:	add    r8,rdi
   140010b37:	add    rdx,rdi
   140010b3a:	call   0x14000e850
   140010b3f:	mov    rdi,rax
   140010b42:	jmp    0x140010b47
   140010b44:	mov    rdi,r12
   140010b47:	mov    BYTE PTR [rdi+0x58],0x1
   140010b4b:	mov    rcx,QWORD PTR [rbp+0x28]
   140010b4f:	movsxd rdx,DWORD PTR [rbp+0x10]
   140010b53:	add    rdx,rdx
   140010b56:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010b59:	mov    DWORD PTR [rdi+0x68],eax
   140010b5c:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140010b60:	mov    DWORD PTR [rdi+0x6c],eax
   140010b63:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140010b67:	mov    DWORD PTR [rdi+0x70],eax
   140010b6a:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140010b6e:	mov    DWORD PTR [rdi+0x74],eax
   140010b71:	mov    rcx,QWORD PTR [rbp+0x28]
   140010b75:	movsxd rdx,DWORD PTR [rbp+0x10]
   140010b79:	inc    rdx
   140010b7c:	add    rdx,rdx
   140010b7f:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010b82:	mov    DWORD PTR [rdi+0x88],eax
   140010b88:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140010b8c:	mov    DWORD PTR [rdi+0x8c],eax
   140010b92:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140010b96:	mov    DWORD PTR [rdi+0x90],eax
   140010b9c:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140010ba0:	mov    DWORD PTR [rdi+0x94],eax
   140010ba6:	mov    rcx,QWORD PTR [rbp+0x28]
   140010baa:	movsxd rdx,DWORD PTR [rbp+0x10]
   140010bae:	add    rdx,0x2
   140010bb2:	add    rdx,rdx
   140010bb5:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010bb8:	mov    DWORD PTR [rdi+0xa8],eax
   140010bbe:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140010bc2:	mov    DWORD PTR [rdi+0xac],eax
   140010bc8:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140010bcc:	mov    DWORD PTR [rdi+0xb0],eax
   140010bd2:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140010bd6:	mov    DWORD PTR [rdi+0xb4],eax
   140010bdc:	mov    rcx,QWORD PTR [rbp+0x28]
   140010be0:	movsxd rdx,DWORD PTR [rbp+0x10]
   140010be4:	add    rdx,0x3
   140010be8:	add    rdx,rdx
   140010beb:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010bee:	mov    DWORD PTR [rdi+0xb8],eax
   140010bf4:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140010bf8:	mov    DWORD PTR [rdi+0xbc],eax
   140010bfe:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140010c02:	mov    DWORD PTR [rdi+0xc0],eax
   140010c08:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140010c0c:	mov    DWORD PTR [rdi+0xc4],eax
   140010c12:	mov    rcx,QWORD PTR [rbp+0x28]
   140010c16:	movsxd rdx,DWORD PTR [rbp+0x10]
   140010c1a:	add    rdx,0x4
   140010c1e:	add    rdx,rdx
   140010c21:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010c24:	mov    DWORD PTR [rdi+0xd8],eax
   140010c2a:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140010c2e:	mov    DWORD PTR [rdi+0xdc],eax
   140010c34:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140010c38:	mov    DWORD PTR [rdi+0xe0],eax
   140010c3e:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140010c42:	mov    DWORD PTR [rdi+0xe4],eax
   140010c48:	jmp    0x14000f9a9
   140010c4d:	mov    rdx,QWORD PTR [rbp+0x8]
   140010c51:	mov    ecx,0xe8
   140010c56:	call   0x14000e810
   140010c5b:	mov    r11,rax
   140010c5e:	test   rax,rax
   140010c61:	je     0x140010c9f
   140010c63:	mov    edx,DWORD PTR [rbp+0x10]
   140010c66:	mov    rcx,QWORD PTR [rbp+0x30]
   140010c6a:	mov    r9,QWORD PTR [rbp+0x18]
   140010c6e:	lea    eax,[rdx+0x4]
   140010c71:	movsxd rdi,eax
   140010c74:	lea    eax,[rdx+0x2]
   140010c77:	mov    r9,QWORD PTR [r9+rdi*8]
   140010c7b:	movsxd r8,eax
   140010c7e:	lea    eax,[rdx+0x1]
   140010c81:	movsxd rdx,eax
   140010c84:	shl    r8,0x4
   140010c88:	shl    rdx,0x4
   140010c8c:	add    r8,rcx
   140010c8f:	add    rdx,rcx
   140010c92:	mov    rcx,r11
   140010c95:	call   0x14000ea70
   140010c9a:	mov    rdi,rax
   140010c9d:	jmp    0x140010ca2
   140010c9f:	mov    rdi,r12
   140010ca2:	mov    rcx,QWORD PTR [rbp+0x28]
   140010ca6:	movsxd rdx,DWORD PTR [rbp+0x10]
   140010caa:	add    rdx,rdx
   140010cad:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010cb0:	mov    DWORD PTR [rdi+0x88],eax
   140010cb6:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140010cba:	mov    DWORD PTR [rdi+0x8c],eax
   140010cc0:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140010cc4:	mov    DWORD PTR [rdi+0x90],eax
   140010cca:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140010cce:	mov    DWORD PTR [rdi+0x94],eax
   140010cd4:	mov    rcx,QWORD PTR [rbp+0x28]
   140010cd8:	movsxd rdx,DWORD PTR [rbp+0x10]
   140010cdc:	inc    rdx
   140010cdf:	add    rdx,rdx
   140010ce2:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010ce5:	mov    DWORD PTR [rdi+0xa8],eax
   140010ceb:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140010cef:	mov    DWORD PTR [rdi+0xac],eax
   140010cf5:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140010cf9:	mov    DWORD PTR [rdi+0xb0],eax
   140010cff:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140010d03:	mov    DWORD PTR [rdi+0xb4],eax
   140010d09:	mov    rcx,QWORD PTR [rbp+0x28]
   140010d0d:	movsxd rdx,DWORD PTR [rbp+0x10]
   140010d11:	add    rdx,0x2
   140010d15:	add    rdx,rdx
   140010d18:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010d1b:	mov    DWORD PTR [rdi+0xb8],eax
   140010d21:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140010d25:	mov    DWORD PTR [rdi+0xbc],eax
   140010d2b:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140010d2f:	mov    DWORD PTR [rdi+0xc0],eax
   140010d35:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140010d39:	mov    DWORD PTR [rdi+0xc4],eax
   140010d3f:	mov    rcx,QWORD PTR [rbp+0x28]
   140010d43:	movsxd rdx,DWORD PTR [rbp+0x10]
   140010d47:	add    rdx,0x3
   140010d4b:	add    rdx,rdx
   140010d4e:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010d51:	mov    DWORD PTR [rdi+0xc8],eax
   140010d57:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140010d5b:	mov    DWORD PTR [rdi+0xcc],eax
   140010d61:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140010d65:	mov    DWORD PTR [rdi+0xd0],eax
   140010d6b:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140010d6f:	mov    DWORD PTR [rdi+0xd4],eax
   140010d75:	jmp    0x14000f9a9
   140010d7a:	mov    rdx,QWORD PTR [rbp+0x8]
   140010d7e:	mov    ecx,0xe8
   140010d83:	call   0x14000e810
   140010d88:	mov    r11,rax
   140010d8b:	test   rax,rax
   140010d8e:	je     0x140010dcc
   140010d90:	mov    edx,DWORD PTR [rbp+0x10]
   140010d93:	mov    rcx,QWORD PTR [rbp+0x30]
   140010d97:	mov    r9,QWORD PTR [rbp+0x18]
   140010d9b:	lea    eax,[rdx+0x5]
   140010d9e:	movsxd rdi,eax
   140010da1:	lea    eax,[rdx+0x3]
   140010da4:	mov    r9,QWORD PTR [r9+rdi*8]
   140010da8:	movsxd r8,eax
   140010dab:	lea    eax,[rdx+0x2]
   140010dae:	movsxd rdx,eax
   140010db1:	shl    r8,0x4
   140010db5:	shl    rdx,0x4
   140010db9:	add    r8,rcx
   140010dbc:	add    rdx,rcx
   140010dbf:	mov    rcx,r11
   140010dc2:	call   0x14000ea70
   140010dc7:	mov    rdi,rax
   140010dca:	jmp    0x140010dcf
   140010dcc:	mov    rdi,r12
   140010dcf:	mov    BYTE PTR [rdi+0x59],0x1
   140010dd3:	mov    rcx,QWORD PTR [rbp+0x28]
   140010dd7:	movsxd rdx,DWORD PTR [rbp+0x10]
   140010ddb:	add    rdx,rdx
   140010dde:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010de1:	mov    DWORD PTR [rdi+0x78],eax
   140010de4:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140010de8:	mov    DWORD PTR [rdi+0x7c],eax
   140010deb:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140010def:	mov    DWORD PTR [rdi+0x80],eax
   140010df5:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140010df9:	mov    DWORD PTR [rdi+0x84],eax
   140010dff:	mov    rcx,QWORD PTR [rbp+0x28]
   140010e03:	movsxd rdx,DWORD PTR [rbp+0x10]
   140010e07:	inc    rdx
   140010e0a:	add    rdx,rdx
   140010e0d:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010e10:	mov    DWORD PTR [rdi+0x88],eax
   140010e16:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140010e1a:	mov    DWORD PTR [rdi+0x8c],eax
   140010e20:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140010e24:	mov    DWORD PTR [rdi+0x90],eax
   140010e2a:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140010e2e:	mov    DWORD PTR [rdi+0x94],eax
   140010e34:	mov    rcx,QWORD PTR [rbp+0x28]
   140010e38:	movsxd rdx,DWORD PTR [rbp+0x10]
   140010e3c:	add    rdx,0x2
   140010e40:	add    rdx,rdx
   140010e43:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010e46:	mov    DWORD PTR [rdi+0xa8],eax
   140010e4c:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140010e50:	mov    DWORD PTR [rdi+0xac],eax
   140010e56:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140010e5a:	mov    DWORD PTR [rdi+0xb0],eax
   140010e60:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140010e64:	mov    DWORD PTR [rdi+0xb4],eax
   140010e6a:	mov    rcx,QWORD PTR [rbp+0x28]
   140010e6e:	movsxd rdx,DWORD PTR [rbp+0x10]
   140010e72:	add    rdx,0x3
   140010e76:	add    rdx,rdx
   140010e79:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010e7c:	mov    DWORD PTR [rdi+0xb8],eax
   140010e82:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140010e86:	mov    DWORD PTR [rdi+0xbc],eax
   140010e8c:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140010e90:	mov    DWORD PTR [rdi+0xc0],eax
   140010e96:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140010e9a:	mov    DWORD PTR [rdi+0xc4],eax
   140010ea0:	mov    rcx,QWORD PTR [rbp+0x28]
   140010ea4:	movsxd rdx,DWORD PTR [rbp+0x10]
   140010ea8:	add    rdx,0x4
   140010eac:	add    rdx,rdx
   140010eaf:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010eb2:	mov    DWORD PTR [rdi+0xc8],eax
   140010eb8:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140010ebc:	mov    DWORD PTR [rdi+0xcc],eax
   140010ec2:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140010ec6:	mov    DWORD PTR [rdi+0xd0],eax
   140010ecc:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140010ed0:	mov    DWORD PTR [rdi+0xd4],eax
   140010ed6:	jmp    0x14000f9a9
   140010edb:	mov    rdx,QWORD PTR [rbp+0x8]
   140010edf:	mov    ecx,0xe8
   140010ee4:	call   0x14000e810
   140010ee9:	mov    r11,rax
   140010eec:	test   rax,rax
   140010eef:	je     0x140010f2d
   140010ef1:	mov    edx,DWORD PTR [rbp+0x10]
   140010ef4:	mov    rcx,QWORD PTR [rbp+0x30]
   140010ef8:	mov    r9,QWORD PTR [rbp+0x18]
   140010efc:	lea    eax,[rdx+0x5]
   140010eff:	movsxd rdi,eax
   140010f02:	lea    eax,[rdx+0x3]
   140010f05:	mov    r9,QWORD PTR [r9+rdi*8]
   140010f09:	movsxd r8,eax
   140010f0c:	lea    eax,[rdx+0x2]
   140010f0f:	movsxd rdx,eax
   140010f12:	shl    r8,0x4
   140010f16:	shl    rdx,0x4
   140010f1a:	add    r8,rcx
   140010f1d:	add    rdx,rcx
   140010f20:	mov    rcx,r11
   140010f23:	call   0x14000ea70
   140010f28:	mov    rdi,rax
   140010f2b:	jmp    0x140010f30
   140010f2d:	mov    rdi,r12
   140010f30:	mov    BYTE PTR [rdi+0x58],0x1
   140010f34:	mov    rcx,QWORD PTR [rbp+0x28]
   140010f38:	movsxd rdx,DWORD PTR [rbp+0x10]
   140010f3c:	add    rdx,rdx
   140010f3f:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010f42:	mov    DWORD PTR [rdi+0x68],eax
   140010f45:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140010f49:	mov    DWORD PTR [rdi+0x6c],eax
   140010f4c:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140010f50:	mov    DWORD PTR [rdi+0x70],eax
   140010f53:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140010f57:	mov    DWORD PTR [rdi+0x74],eax
   140010f5a:	jmp    0x140010dff
   140010f5f:	mov    rdx,QWORD PTR [rbp+0x8]
   140010f63:	mov    ecx,0xe8
   140010f68:	call   0x14000e810
   140010f6d:	mov    r11,rax
   140010f70:	test   rax,rax
   140010f73:	je     0x140010fa3
   140010f75:	mov    ecx,DWORD PTR [rbp+0x10]
   140010f78:	mov    rdi,QWORD PTR [rbp+0x30]
   140010f7c:	lea    eax,[rcx+0x5]
   140010f7f:	movsxd r8,eax
   140010f82:	lea    eax,[rcx+0x3]
   140010f85:	mov    rcx,r11
   140010f88:	movsxd rdx,eax
   140010f8b:	shl    r8,0x4
   140010f8f:	shl    rdx,0x4
   140010f93:	add    r8,rdi
   140010f96:	add    rdx,rdi
   140010f99:	call   0x14000e850
   140010f9e:	mov    rsi,rax
   140010fa1:	jmp    0x140010fa6
   140010fa3:	mov    rsi,r12
   140010fa6:	mov    eax,DWORD PTR [rbp+0x10]
   140010fa9:	lea    rcx,[rsi+0x18]
   140010fad:	inc    eax
   140010faf:	movsxd rdx,eax
   140010fb2:	shl    rdx,0x4
   140010fb6:	add    rdx,QWORD PTR [rbp+0x30]
   140010fba:	call   QWORD PTR [rip+0xf478]        # 0x140020438
   140010fc0:	mov    rcx,QWORD PTR [rbp+0x28]
   140010fc4:	movsxd rdx,DWORD PTR [rbp+0x10]
   140010fc8:	add    rdx,rdx
   140010fcb:	mov    eax,DWORD PTR [rcx+rdx*8]
   140010fce:	mov    DWORD PTR [rsi+0x88],eax
   140010fd4:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140010fd8:	mov    DWORD PTR [rsi+0x8c],eax
   140010fde:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140010fe2:	mov    DWORD PTR [rsi+0x90],eax
   140010fe8:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140010fec:	mov    DWORD PTR [rsi+0x94],eax
   140010ff2:	mov    rcx,QWORD PTR [rbp+0x28]
   140010ff6:	movsxd rdx,DWORD PTR [rbp+0x10]
   140010ffa:	inc    rdx
   140010ffd:	add    rdx,rdx
   140011000:	mov    eax,DWORD PTR [rcx+rdx*8]
   140011003:	mov    DWORD PTR [rsi+0x98],eax
   140011009:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14001100d:	mov    DWORD PTR [rsi+0x9c],eax
   140011013:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140011017:	mov    DWORD PTR [rsi+0xa0],eax
   14001101d:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140011021:	mov    DWORD PTR [rsi+0xa4],eax
   140011027:	mov    rcx,QWORD PTR [rbp+0x28]
   14001102b:	movsxd rdx,DWORD PTR [rbp+0x10]
   14001102f:	add    rdx,0x3
   140011033:	add    rdx,rdx
   140011036:	mov    eax,DWORD PTR [rcx+rdx*8]
   140011039:	mov    DWORD PTR [rsi+0xa8],eax
   14001103f:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140011043:	mov    DWORD PTR [rsi+0xac],eax
   140011049:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14001104d:	mov    DWORD PTR [rsi+0xb0],eax
   140011053:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140011057:	mov    DWORD PTR [rsi+0xb4],eax
   14001105d:	mov    rcx,QWORD PTR [rbp+0x28]
   140011061:	movsxd rdx,DWORD PTR [rbp+0x10]
   140011065:	add    rdx,0x5
   140011069:	add    rdx,rdx
   14001106c:	mov    eax,DWORD PTR [rcx+rdx*8]
   14001106f:	mov    DWORD PTR [rsi+0xb8],eax
   140011075:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140011079:	mov    DWORD PTR [rsi+0xbc],eax
   14001107f:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140011083:	mov    DWORD PTR [rsi+0xc0],eax
   140011089:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14001108d:	mov    DWORD PTR [rsi+0xc4],eax
   140011093:	mov    rcx,QWORD PTR [rbp+0x28]
   140011097:	movsxd rdx,DWORD PTR [rbp+0x10]
   14001109b:	add    rdx,0x6
   14001109f:	add    rdx,rdx
   1400110a2:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400110a5:	mov    DWORD PTR [rsi+0xd8],eax
   1400110ab:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400110af:	mov    DWORD PTR [rsi+0xdc],eax
   1400110b5:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400110b9:	mov    DWORD PTR [rsi+0xe0],eax
   1400110bf:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400110c3:	mov    ecx,0x38
   1400110c8:	mov    DWORD PTR [rsi+0xe4],eax
   1400110ce:	mov    rdx,QWORD PTR [rbp+0x8]
   1400110d2:	call   0x14000e810
   1400110d7:	mov    rbx,rax
   1400110da:	test   rax,rax
   1400110dd:	je     0x140011125
   1400110df:	mov    eax,DWORD PTR [rbp+0x10]
   1400110e2:	lea    rcx,[rbx+0x18]
   1400110e6:	add    eax,0x5
   1400110e9:	movsxd rdx,eax
   1400110ec:	lea    rax,[rip+0x113b5]        # 0x1400224a8
   1400110f3:	shl    rdx,0x4
   1400110f7:	add    rdx,QWORD PTR [rbp+0x30]
   1400110fb:	mov    DWORD PTR [rbx+0x8],r12d
   1400110ff:	mov    QWORD PTR [rbx],rax
   140011102:	mov    QWORD PTR [rbx+0x10],rbx
   140011106:	call   QWORD PTR [rip+0xf324]        # 0x140020430
   14001110c:	mov    DWORD PTR [rbx+0x28],r12d
   140011110:	mov    DWORD PTR [rbx+0x2c],r12d
   140011114:	mov    DWORD PTR [rbx+0x30],r12d
   140011118:	mov    DWORD PTR [rbx+0x34],r12d
   14001111c:	mov    DWORD PTR [rbx+0x8],0x5a
   140011123:	jmp    0x140011128
   140011125:	mov    rbx,r12
   140011128:	mov    rcx,QWORD PTR [rbp+0x28]
   14001112c:	movsxd rdx,DWORD PTR [rbp+0x10]
   140011130:	add    rdx,0x5
   140011134:	add    rdx,rdx
   140011137:	mov    eax,DWORD PTR [rcx+rdx*8]
   14001113a:	mov    DWORD PTR [rbx+0x28],eax
   14001113d:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140011141:	mov    DWORD PTR [rbx+0x2c],eax
   140011144:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140011148:	mov    DWORD PTR [rbx+0x30],eax
   14001114b:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14001114f:	mov    ecx,0x50
   140011154:	mov    DWORD PTR [rbx+0x34],eax
   140011157:	mov    QWORD PTR [rbx+0x10],r12
   14001115b:	mov    rdx,QWORD PTR [rbp+0x8]
   14001115f:	call   0x14000e810
   140011164:	mov    rdi,rax
   140011167:	test   rax,rax
   14001116a:	je     0x1400111cc
   14001116c:	movsxd rcx,DWORD PTR [rbp+0x10]
   140011170:	mov    rax,QWORD PTR [rbp+0x18]
   140011174:	mov    rdx,QWORD PTR [rax+rcx*8+0x40]
   140011179:	lea    rcx,[rip+0x11788]        # 0x140022908
   140011180:	mov    rax,QWORD PTR [rdx+0x10]
   140011184:	mov    QWORD PTR [rdx+0x10],r12
   140011188:	mov    QWORD PTR [rdi],rcx
   14001118b:	mov    QWORD PTR [rdi+0x10],rbx
   14001118f:	mov    QWORD PTR [rdi+0x18],rax
   140011193:	mov    DWORD PTR [rdi+0x20],r12d
   140011197:	mov    DWORD PTR [rdi+0x24],r12d
   14001119b:	mov    DWORD PTR [rdi+0x28],r12d
   14001119f:	mov    DWORD PTR [rdi+0x2c],r12d
   1400111a3:	mov    DWORD PTR [rdi+0x30],r12d
   1400111a7:	mov    DWORD PTR [rdi+0x34],r12d
   1400111ab:	mov    DWORD PTR [rdi+0x38],r12d
   1400111af:	mov    DWORD PTR [rdi+0x3c],r12d
   1400111b3:	mov    DWORD PTR [rdi+0x40],r12d
   1400111b7:	mov    DWORD PTR [rdi+0x44],r12d
   1400111bb:	mov    DWORD PTR [rdi+0x48],r12d
   1400111bf:	mov    DWORD PTR [rdi+0x4c],r12d
   1400111c3:	mov    DWORD PTR [rdi+0x8],0x4f
   1400111ca:	jmp    0x1400111cf
   1400111cc:	mov    rdi,r12
   1400111cf:	mov    rcx,QWORD PTR [rbp+0x28]
   1400111d3:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400111d7:	lea    r9,[rip+0xfffffffffffeee22]        # 0x140000000
   1400111de:	add    rdx,0x6
   1400111e2:	add    rdx,rdx
   1400111e5:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400111e8:	mov    DWORD PTR [rdi+0x20],eax
   1400111eb:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400111ef:	mov    DWORD PTR [rdi+0x24],eax
   1400111f2:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400111f6:	mov    DWORD PTR [rdi+0x28],eax
   1400111f9:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400111fd:	mov    DWORD PTR [rdi+0x2c],eax
   140011200:	mov    rcx,QWORD PTR [rbp+0x28]
   140011204:	movsxd rdx,DWORD PTR [rbp+0x10]
   140011208:	add    rdx,0x7
   14001120c:	add    rdx,rdx
   14001120f:	mov    eax,DWORD PTR [rcx+rdx*8]
   140011212:	mov    DWORD PTR [rdi+0x30],eax
   140011215:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140011219:	mov    DWORD PTR [rdi+0x34],eax
   14001121c:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140011220:	mov    DWORD PTR [rdi+0x38],eax
   140011223:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140011227:	mov    DWORD PTR [rdi+0x3c],eax
   14001122a:	mov    rcx,QWORD PTR [rbp+0x28]
   14001122e:	movsxd rdx,DWORD PTR [rbp+0x10]
   140011232:	add    rdx,0x9
   140011236:	add    rdx,rdx
   140011239:	mov    eax,DWORD PTR [rcx+rdx*8]
   14001123c:	mov    DWORD PTR [rdi+0x40],eax
   14001123f:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140011243:	mov    DWORD PTR [rdi+0x44],eax
   140011246:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14001124a:	mov    DWORD PTR [rdi+0x48],eax
   14001124d:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140011251:	mov    DWORD PTR [rdi+0x4c],eax
   140011254:	mov    QWORD PTR [rsi+0x50],rdi
   140011258:	movsxd rcx,DWORD PTR [rbp+0x10]
   14001125c:	mov    rax,QWORD PTR [rbp+0x18]
   140011260:	mov    QWORD PTR [rax+rcx*8],rsi
   140011264:	mov    esi,DWORD PTR [rsp+0x30]
   140011268:	jmp    0x140015510
   14001126d:	mov    rdx,QWORD PTR [rbp+0x8]
   140011271:	mov    ecx,0xe8
   140011276:	call   0x14000e810
   14001127b:	mov    r11,rax
   14001127e:	test   rax,rax
   140011281:	je     0x1400112b1
   140011283:	mov    ecx,DWORD PTR [rbp+0x10]
   140011286:	mov    rdi,QWORD PTR [rbp+0x30]
   14001128a:	lea    eax,[rcx+0x2]
   14001128d:	movsxd r8,eax
   140011290:	lea    eax,[rcx+0x1]
   140011293:	mov    rcx,r11
   140011296:	movsxd rdx,eax
   140011299:	shl    r8,0x4
   14001129d:	shl    rdx,0x4
   1400112a1:	add    r8,rdi
   1400112a4:	add    rdx,rdi
   1400112a7:	call   0x14000e850
   1400112ac:	mov    rsi,rax
   1400112af:	jmp    0x1400112b4
   1400112b1:	mov    rsi,r12
   1400112b4:	mov    rcx,QWORD PTR [rbp+0x28]
   1400112b8:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400112bc:	add    rdx,rdx
   1400112bf:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400112c2:	mov    DWORD PTR [rsi+0x88],eax
   1400112c8:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400112cc:	mov    DWORD PTR [rsi+0x8c],eax
   1400112d2:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400112d6:	mov    DWORD PTR [rsi+0x90],eax
   1400112dc:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400112e0:	mov    DWORD PTR [rsi+0x94],eax
   1400112e6:	mov    rcx,QWORD PTR [rbp+0x28]
   1400112ea:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400112ee:	inc    rdx
   1400112f1:	add    rdx,rdx
   1400112f4:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400112f7:	mov    DWORD PTR [rsi+0xa8],eax
   1400112fd:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140011301:	mov    DWORD PTR [rsi+0xac],eax
   140011307:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14001130b:	mov    DWORD PTR [rsi+0xb0],eax
   140011311:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140011315:	mov    DWORD PTR [rsi+0xb4],eax
   14001131b:	mov    rcx,QWORD PTR [rbp+0x28]
   14001131f:	movsxd rdx,DWORD PTR [rbp+0x10]
   140011323:	add    rdx,0x2
   140011327:	add    rdx,rdx
   14001132a:	mov    eax,DWORD PTR [rcx+rdx*8]
   14001132d:	mov    DWORD PTR [rsi+0xb8],eax
   140011333:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140011337:	mov    DWORD PTR [rsi+0xbc],eax
   14001133d:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140011341:	mov    DWORD PTR [rsi+0xc0],eax
   140011347:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14001134b:	mov    DWORD PTR [rsi+0xc4],eax
   140011351:	mov    rcx,QWORD PTR [rbp+0x28]
   140011355:	movsxd rdx,DWORD PTR [rbp+0x10]
   140011359:	add    rdx,0x3
   14001135d:	add    rdx,rdx
   140011360:	mov    eax,DWORD PTR [rcx+rdx*8]
   140011363:	mov    DWORD PTR [rsi+0xd8],eax
   140011369:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14001136d:	mov    DWORD PTR [rsi+0xdc],eax
   140011373:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140011377:	mov    DWORD PTR [rsi+0xe0],eax
   14001137d:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140011381:	mov    ecx,0x38
   140011386:	mov    DWORD PTR [rsi+0xe4],eax
   14001138c:	mov    rdx,QWORD PTR [rbp+0x8]
   140011390:	call   0x14000e810
   140011395:	mov    rbx,rax
   140011398:	test   rax,rax
   14001139b:	je     0x1400113e3
   14001139d:	mov    eax,DWORD PTR [rbp+0x10]
   1400113a0:	lea    rcx,[rbx+0x18]
   1400113a4:	add    eax,0x2
   1400113a7:	movsxd rdx,eax
   1400113aa:	lea    rax,[rip+0x110f7]        # 0x1400224a8
   1400113b1:	shl    rdx,0x4
   1400113b5:	add    rdx,QWORD PTR [rbp+0x30]
   1400113b9:	mov    DWORD PTR [rbx+0x8],r12d
   1400113bd:	mov    QWORD PTR [rbx],rax
   1400113c0:	mov    QWORD PTR [rbx+0x10],rbx
   1400113c4:	call   QWORD PTR [rip+0xf066]        # 0x140020430
   1400113ca:	mov    DWORD PTR [rbx+0x28],r12d
   1400113ce:	mov    DWORD PTR [rbx+0x2c],r12d
   1400113d2:	mov    DWORD PTR [rbx+0x30],r12d
   1400113d6:	mov    DWORD PTR [rbx+0x34],r12d
   1400113da:	mov    DWORD PTR [rbx+0x8],0x5a
   1400113e1:	jmp    0x1400113e6
   1400113e3:	mov    rbx,r12
   1400113e6:	mov    rcx,QWORD PTR [rbp+0x28]
   1400113ea:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400113ee:	add    rdx,0x2
   1400113f2:	add    rdx,rdx
   1400113f5:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400113f8:	mov    DWORD PTR [rbx+0x28],eax
   1400113fb:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400113ff:	mov    DWORD PTR [rbx+0x2c],eax
   140011402:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140011406:	mov    DWORD PTR [rbx+0x30],eax
   140011409:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14001140d:	mov    ecx,0x40
   140011412:	mov    DWORD PTR [rbx+0x34],eax
   140011415:	mov    QWORD PTR [rbx+0x10],r12
   140011419:	mov    rdx,QWORD PTR [rbp+0x8]
   14001141d:	call   0x14000e810
   140011422:	mov    r11,rax
   140011425:	test   rax,rax
   140011428:	je     0x140011470
   14001142a:	mov    rax,QWORD PTR [rbp+0x18]
   14001142e:	movsxd rcx,DWORD PTR [rbp+0x10]
   140011432:	mov    rdi,QWORD PTR [rax+rcx*8+0x28]
   140011437:	mov    rdx,QWORD PTR [rax+rcx*8+0x20]
   14001143c:	lea    rax,[rip+0x11425]        # 0x140022868
   140011443:	mov    QWORD PTR [r11],rax
   140011446:	mov    QWORD PTR [r11+0x10],rbx
   14001144a:	mov    QWORD PTR [r11+0x18],rdx
   14001144e:	mov    QWORD PTR [r11+0x20],rdi
   140011452:	mov    DWORD PTR [r11+0x28],r12d
   140011456:	mov    DWORD PTR [r11+0x2c],r12d
   14001145a:	mov    DWORD PTR [r11+0x30],r12d
   14001145e:	mov    DWORD PTR [r11+0x34],r12d
   140011462:	mov    BYTE PTR [r11+0x38],r12b
   140011466:	mov    DWORD PTR [r11+0x8],0x51
   14001146e:	jmp    0x140011473
   140011470:	mov    r11,r12
   140011473:	movsxd rdx,DWORD PTR [rbp+0x10]
   140011477:	add    rdx,0x3
   14001147b:	mov    rcx,QWORD PTR [rbp+0x28]
   14001147f:	add    rdx,rdx
   140011482:	lea    r9,[rip+0xfffffffffffeeb77]        # 0x140000000
   140011489:	mov    eax,DWORD PTR [rcx+rdx*8]
   14001148c:	mov    DWORD PTR [r11+0x28],eax
   140011490:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140011494:	mov    DWORD PTR [r11+0x2c],eax
   140011498:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14001149c:	mov    DWORD PTR [r11+0x30],eax
   1400114a0:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400114a4:	mov    DWORD PTR [r11+0x34],eax
   1400114a8:	mov    QWORD PTR [rsi+0x50],r11
   1400114ac:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400114b0:	mov    rax,QWORD PTR [rbp+0x18]
   1400114b4:	mov    QWORD PTR [rax+rcx*8],rsi
   1400114b8:	mov    esi,DWORD PTR [rsp+0x30]
   1400114bc:	jmp    0x140015510
   1400114c1:	mov    rdx,QWORD PTR [rbp+0x8]
   1400114c5:	mov    ecx,0xe8
   1400114ca:	call   0x14000e810
   1400114cf:	mov    r11,rax
   1400114d2:	test   rax,rax
   1400114d5:	je     0x140011505
   1400114d7:	mov    ecx,DWORD PTR [rbp+0x10]
   1400114da:	mov    rdi,QWORD PTR [rbp+0x30]
   1400114de:	lea    eax,[rcx+0x3]
   1400114e1:	movsxd r8,eax
   1400114e4:	lea    eax,[rcx+0x2]
   1400114e7:	mov    rcx,r11
   1400114ea:	movsxd rdx,eax
   1400114ed:	shl    r8,0x4
   1400114f1:	shl    rdx,0x4
   1400114f5:	add    r8,rdi
   1400114f8:	add    rdx,rdi
   1400114fb:	call   0x14000e850
   140011500:	mov    rsi,rax
   140011503:	jmp    0x140011508
   140011505:	mov    rsi,r12
   140011508:	mov    BYTE PTR [rsi+0x59],0x1
   14001150c:	mov    rcx,QWORD PTR [rbp+0x28]
   140011510:	movsxd rdx,DWORD PTR [rbp+0x10]
   140011514:	add    rdx,rdx
   140011517:	mov    eax,DWORD PTR [rcx+rdx*8]
   14001151a:	mov    DWORD PTR [rsi+0x78],eax
   14001151d:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140011521:	mov    DWORD PTR [rsi+0x7c],eax
   140011524:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140011528:	mov    DWORD PTR [rsi+0x80],eax
   14001152e:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140011532:	mov    DWORD PTR [rsi+0x84],eax
   140011538:	mov    rcx,QWORD PTR [rbp+0x28]
   14001153c:	movsxd rdx,DWORD PTR [rbp+0x10]
   140011540:	inc    rdx
   140011543:	add    rdx,rdx
   140011546:	mov    eax,DWORD PTR [rcx+rdx*8]
   140011549:	mov    DWORD PTR [rsi+0x88],eax
   14001154f:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140011553:	mov    DWORD PTR [rsi+0x8c],eax
   140011559:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14001155d:	mov    DWORD PTR [rsi+0x90],eax
   140011563:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140011567:	mov    DWORD PTR [rsi+0x94],eax
   14001156d:	mov    rcx,QWORD PTR [rbp+0x28]
   140011571:	movsxd rdx,DWORD PTR [rbp+0x10]
   140011575:	add    rdx,0x2
   140011579:	add    rdx,rdx
   14001157c:	mov    eax,DWORD PTR [rcx+rdx*8]
   14001157f:	mov    DWORD PTR [rsi+0xa8],eax
   140011585:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140011589:	mov    DWORD PTR [rsi+0xac],eax
   14001158f:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140011593:	mov    DWORD PTR [rsi+0xb0],eax
   140011599:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14001159d:	mov    DWORD PTR [rsi+0xb4],eax
   1400115a3:	mov    rcx,QWORD PTR [rbp+0x28]
   1400115a7:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400115ab:	add    rdx,0x3
   1400115af:	add    rdx,rdx
   1400115b2:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400115b5:	mov    DWORD PTR [rsi+0xb8],eax
   1400115bb:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400115bf:	mov    DWORD PTR [rsi+0xbc],eax
   1400115c5:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400115c9:	mov    DWORD PTR [rsi+0xc0],eax
   1400115cf:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400115d3:	mov    DWORD PTR [rsi+0xc4],eax
   1400115d9:	mov    rcx,QWORD PTR [rbp+0x28]
   1400115dd:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400115e1:	add    rdx,0x4
   1400115e5:	add    rdx,rdx
   1400115e8:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400115eb:	mov    DWORD PTR [rsi+0xd8],eax
   1400115f1:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400115f5:	mov    DWORD PTR [rsi+0xdc],eax
   1400115fb:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400115ff:	mov    DWORD PTR [rsi+0xe0],eax
   140011605:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140011609:	mov    ecx,0x38
   14001160e:	mov    DWORD PTR [rsi+0xe4],eax
   140011614:	mov    rdx,QWORD PTR [rbp+0x8]
   140011618:	call   0x14000e810
   14001161d:	mov    rcx,rax
   140011620:	test   rax,rax
   140011623:	je     0x140011640
   140011625:	mov    eax,DWORD PTR [rbp+0x10]
   140011628:	add    eax,0x3
   14001162b:	movsxd rdx,eax
   14001162e:	shl    rdx,0x4
   140011632:	add    rdx,QWORD PTR [rbp+0x30]
   140011636:	call   0x14000e0b0
   14001163b:	mov    rbx,rax
   14001163e:	jmp    0x140011643
   140011640:	mov    rbx,r12
   140011643:	mov    rcx,QWORD PTR [rbp+0x28]
   140011647:	movsxd rdx,DWORD PTR [rbp+0x10]
   14001164b:	add    rdx,0x3
   14001164f:	add    rdx,rdx
   140011652:	mov    eax,DWORD PTR [rcx+rdx*8]
   140011655:	mov    DWORD PTR [rbx+0x28],eax
   140011658:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14001165c:	mov    DWORD PTR [rbx+0x2c],eax
   14001165f:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140011663:	mov    DWORD PTR [rbx+0x30],eax
   140011666:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14001166a:	mov    ecx,0x40
   14001166f:	mov    DWORD PTR [rbx+0x34],eax
   140011672:	mov    QWORD PTR [rbx+0x10],r12
   140011676:	mov    rdx,QWORD PTR [rbp+0x8]
   14001167a:	call   0x14000e810
   14001167f:	mov    r11,rax
   140011682:	test   rax,rax
   140011685:	je     0x1400116d8
   140011687:	mov    rax,QWORD PTR [rbp+0x18]
   14001168b:	movsxd rcx,DWORD PTR [rbp+0x10]
   14001168f:	mov    rdx,QWORD PTR [rax+rcx*8+0x28]
   140011694:	mov    rdi,QWORD PTR [rax+rcx*8+0x30]
   140011699:	lea    rax,[rip+0x111c8]        # 0x140022868
   1400116a0:	mov    QWORD PTR [r11],rax
   1400116a3:	mov    QWORD PTR [r11+0x10],rbx
   1400116a7:	mov    QWORD PTR [r11+0x18],rdx
   1400116ab:	mov    QWORD PTR [r11+0x20],rdi
   1400116af:	mov    DWORD PTR [r11+0x28],r12d
   1400116b3:	mov    DWORD PTR [r11+0x2c],r12d
   1400116b7:	mov    DWORD PTR [r11+0x30],r12d
   1400116bb:	mov    DWORD PTR [r11+0x34],r12d
   1400116bf:	mov    BYTE PTR [r11+0x38],r12b
   1400116c3:	mov    DWORD PTR [r11+0x8],0x51
   1400116cb:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400116cf:	add    rdx,0x4
   1400116d3:	jmp    0x14001147b
   1400116d8:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400116dc:	mov    r11,r12
   1400116df:	add    rdx,0x4
   1400116e3:	jmp    0x14001147b
   1400116e8:	mov    rdx,QWORD PTR [rbp+0x8]
   1400116ec:	mov    ecx,0x18
   1400116f1:	call   0x14000e810
   1400116f6:	mov    rdi,rax
   1400116f9:	test   rax,rax
   1400116fc:	je     0x14000f9a6
   140011702:	mov    rax,QWORD PTR [rbp+0x18]
   140011706:	movsxd rcx,DWORD PTR [rbp+0x10]
   14001170a:	mov    rdx,QWORD PTR [rax+rcx*8]
   14001170e:	lea    rax,[rip+0x11103]        # 0x140022818
   140011715:	mov    QWORD PTR [rdi],rax
   140011718:	mov    QWORD PTR [rdi+0x10],rdx
   14001171c:	mov    DWORD PTR [rdi+0x8],0x5d
   140011723:	jmp    0x14000f9a9
   140011728:	mov    rdx,QWORD PTR [rbp+0x8]
   14001172c:	mov    ecx,0x20
   140011731:	call   0x14000e810
   140011736:	mov    rdi,rax
   140011739:	test   rax,rax
   14001173c:	je     0x140011761
   14001173e:	lea    rax,[rip+0xf5f3]        # 0x140020d38
   140011745:	mov    QWORD PTR [rdi],rax
   140011748:	mov    DWORD PTR [rdi+0x10],r12d
   14001174c:	mov    DWORD PTR [rdi+0x14],r12d
   140011750:	mov    DWORD PTR [rdi+0x18],r12d
   140011754:	mov    DWORD PTR [rdi+0x1c],r12d
   140011758:	mov    DWORD PTR [rdi+0x8],0x40
   14001175f:	jmp    0x140011764
   140011761:	mov    rdi,r12
   140011764:	mov    rcx,QWORD PTR [rbp+0x28]
   140011768:	movsxd rdx,DWORD PTR [rbp+0x10]
   14001176c:	add    rdx,rdx
   14001176f:	mov    eax,DWORD PTR [rcx+rdx*8]
   140011772:	mov    DWORD PTR [rdi+0x10],eax
   140011775:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140011779:	mov    DWORD PTR [rdi+0x14],eax
   14001177c:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140011780:	mov    DWORD PTR [rdi+0x18],eax
   140011783:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140011787:	mov    DWORD PTR [rdi+0x1c],eax
   14001178a:	jmp    0x14000f9a9
   14001178f:	mov    rdx,QWORD PTR [rbp+0x8]
   140011793:	mov    ecx,0x30
   140011798:	call   0x14000e810
   14001179d:	mov    rdi,rax
   1400117a0:	test   rax,rax
   1400117a3:	je     0x1400117e2
   1400117a5:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400117a9:	lea    rcx,[rdi+0x10]
   1400117ad:	shl    rdx,0x4
   1400117b1:	add    rdx,QWORD PTR [rbp+0x30]
   1400117b5:	mov    DWORD PTR [rax+0x8],r12d
   1400117b9:	lea    rax,[rip+0xf5c8]        # 0x140020d88
   1400117c0:	mov    QWORD PTR [rdi],rax
   1400117c3:	call   QWORD PTR [rip+0xec67]        # 0x140020430
   1400117c9:	mov    DWORD PTR [rdi+0x20],r12d
   1400117cd:	mov    DWORD PTR [rdi+0x24],r12d
   1400117d1:	mov    DWORD PTR [rdi+0x28],r12d
   1400117d5:	mov    DWORD PTR [rdi+0x2c],r12d
   1400117d9:	mov    DWORD PTR [rdi+0x8],0x21
   1400117e0:	jmp    0x1400117e5
   1400117e2:	mov    rdi,r12
   1400117e5:	mov    rcx,QWORD PTR [rbp+0x28]
   1400117e9:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400117ed:	add    rdx,rdx
   1400117f0:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400117f3:	mov    DWORD PTR [rdi+0x20],eax
   1400117f6:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400117fa:	mov    DWORD PTR [rdi+0x24],eax
   1400117fd:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140011801:	mov    DWORD PTR [rdi+0x28],eax
   140011804:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140011808:	mov    DWORD PTR [rdi+0x2c],eax
   14001180b:	jmp    0x14000f9a9
   140011810:	mov    rdx,QWORD PTR [rbp+0x8]
   140011814:	mov    ecx,0x20
   140011819:	call   0x14000e810
   14001181e:	mov    rdi,rax
   140011821:	test   rax,rax
   140011824:	je     0x140011761
   14001182a:	lea    rax,[rip+0xf5a7]        # 0x140020dd8
   140011831:	mov    QWORD PTR [rdi],rax
   140011834:	mov    DWORD PTR [rdi+0x10],r12d
   140011838:	mov    DWORD PTR [rdi+0x14],r12d
   14001183c:	mov    DWORD PTR [rdi+0x18],r12d
   140011840:	mov    DWORD PTR [rdi+0x1c],r12d
   140011844:	mov    DWORD PTR [rdi+0x8],0x2a
   14001184b:	jmp    0x140011764
   140011850:	mov    rdx,QWORD PTR [rbp+0x8]
   140011854:	mov    ecx,0x20
   140011859:	call   0x14000e810
   14001185e:	mov    rdi,rax
   140011861:	test   rax,rax
   140011864:	je     0x140011761
   14001186a:	lea    rax,[rip+0xf5b7]        # 0x140020e28
   140011871:	mov    QWORD PTR [rdi],rax
   140011874:	mov    DWORD PTR [rdi+0x10],r12d
   140011878:	mov    DWORD PTR [rdi+0x14],r12d
   14001187c:	mov    DWORD PTR [rdi+0x18],r12d
   140011880:	mov    DWORD PTR [rdi+0x1c],r12d
   140011884:	mov    DWORD PTR [rdi+0x8],0x43
   14001188b:	jmp    0x140011764
   140011890:	mov    rdx,QWORD PTR [rbp+0x8]
   140011894:	mov    ecx,0x20
   140011899:	call   0x14000e810
   14001189e:	mov    rdi,rax
   1400118a1:	test   rax,rax
   1400118a4:	je     0x140011761
   1400118aa:	lea    rax,[rip+0xf5c7]        # 0x140020e78
   1400118b1:	mov    QWORD PTR [rdi],rax
   1400118b4:	mov    DWORD PTR [rdi+0x10],r12d
   1400118b8:	mov    DWORD PTR [rdi+0x14],r12d
   1400118bc:	mov    DWORD PTR [rdi+0x18],r12d
   1400118c0:	mov    DWORD PTR [rdi+0x1c],r12d
   1400118c4:	mov    DWORD PTR [rdi+0x8],0x17
   1400118cb:	jmp    0x140011764
   1400118d0:	mov    rdx,QWORD PTR [rbp+0x8]
   1400118d4:	mov    ecx,0x28
   1400118d9:	call   0x14000e810
   1400118de:	mov    rdi,rax
   1400118e1:	test   rax,rax
   1400118e4:	je     0x14001191b
   1400118e6:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400118ea:	mov    rax,QWORD PTR [rbp+0x18]
   1400118ee:	movsd  xmm0,QWORD PTR [rax+rcx*8]
   1400118f3:	lea    rax,[rip+0xf5ce]        # 0x140020ec8
   1400118fa:	mov    QWORD PTR [rdi],rax
   1400118fd:	movsd  QWORD PTR [rdi+0x10],xmm0
   140011902:	mov    DWORD PTR [rdi+0x18],r12d
   140011906:	mov    DWORD PTR [rdi+0x1c],r12d
   14001190a:	mov    DWORD PTR [rdi+0x20],r12d
   14001190e:	mov    DWORD PTR [rdi+0x24],r12d
   140011912:	mov    DWORD PTR [rdi+0x8],0x2b
   140011919:	jmp    0x14001191e
   14001191b:	mov    rdi,r12
   14001191e:	mov    rcx,QWORD PTR [rbp+0x28]
   140011922:	movsxd rdx,DWORD PTR [rbp+0x10]
   140011926:	add    rdx,rdx
   140011929:	mov    eax,DWORD PTR [rcx+rdx*8]
   14001192c:	mov    DWORD PTR [rdi+0x18],eax
   14001192f:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140011933:	mov    DWORD PTR [rdi+0x1c],eax
   140011936:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14001193a:	mov    DWORD PTR [rdi+0x20],eax
   14001193d:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140011941:	mov    DWORD PTR [rdi+0x24],eax
   140011944:	jmp    0x14000f9a9
   140011949:	mov    rdx,QWORD PTR [rbp+0x8]
   14001194d:	mov    ecx,0x30
   140011952:	call   0x14000e810
   140011957:	mov    rdi,rax
   14001195a:	test   rax,rax
   14001195d:	je     0x1400117e2
   140011963:	movsxd rdx,DWORD PTR [rbp+0x10]
   140011967:	lea    rcx,[rdi+0x10]
   14001196b:	shl    rdx,0x4
   14001196f:	add    rdx,QWORD PTR [rbp+0x30]
   140011973:	mov    DWORD PTR [rax+0x8],r12d
   140011977:	lea    rax,[rip+0xf59a]        # 0x140020f18
   14001197e:	mov    QWORD PTR [rdi],rax
   140011981:	call   QWORD PTR [rip+0xeaa9]        # 0x140020430
   140011987:	mov    DWORD PTR [rdi+0x20],r12d
   14001198b:	mov    DWORD PTR [rdi+0x24],r12d
   14001198f:	mov    DWORD PTR [rdi+0x28],r12d
   140011993:	mov    DWORD PTR [rdi+0x2c],r12d
   140011997:	mov    DWORD PTR [rdi+0x8],0x3d
   14001199e:	jmp    0x1400117e5
   1400119a3:	xor    edx,edx
   1400119a5:	mov    rcx,rbx
   1400119a8:	call   0x1400188c0
   1400119ad:	test   al,al
   1400119af:	je     0x14001603d
   1400119b5:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400119b9:	mov    rcx,QWORD PTR [rbp+0x28]
   1400119bd:	mov    eax,DWORD PTR [rbx+0x84]
   1400119c3:	add    rdx,rdx
   1400119c6:	mov    DWORD PTR [rcx+rdx*8+0x4],eax
   1400119ca:	mov    rcx,QWORD PTR [rbp+0x28]
   1400119ce:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400119d2:	add    rdx,rdx
   1400119d5:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400119d8:	mov    DWORD PTR [rbp+0x58],eax
   1400119db:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400119df:	mov    DWORD PTR [rbp+0x5c],eax
   1400119e2:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400119e6:	mov    DWORD PTR [rbp+0x60],eax
   1400119e9:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400119ed:	mov    ecx,0x38
   1400119f2:	mov    DWORD PTR [rbp+0x64],eax
   1400119f5:	mov    rdx,QWORD PTR [rbp+0x8]
   1400119f9:	call   0x14000e810
   1400119fe:	mov    rbx,rax
   140011a01:	test   rax,rax
   140011a04:	je     0x140011a53
   140011a06:	mov    rdx,QWORD PTR [rsp+0x38]
   140011a0b:	lea    rcx,[rsp+0xd0]
   140011a13:	or     esi,0xc
   140011a16:	mov    edi,DWORD PTR [rdx+0x7c]
   140011a19:	add    rdx,0x10
   140011a1d:	mov    DWORD PTR [rsp+0x30],esi
   140011a21:	call   QWORD PTR [rip+0xed71]        # 0x140020798
   140011a27:	mov    rcx,QWORD PTR [rbp+0x0]
   140011a2b:	lea    r8,[rsp+0xd0]
   140011a33:	lea    rdx,[rsp+0x320]
   140011a3b:	call   0x140016b40
   140011a40:	mov    r8d,edi
   140011a43:	mov    rcx,rbx
   140011a46:	mov    rdx,rax
   140011a49:	call   0x14000cdf0
   140011a4e:	mov    rdi,rax
   140011a51:	jmp    0x140011a56
   140011a53:	mov    rdi,r12
   140011a56:	test   sil,0x8
   140011a5a:	je     0x140011a71
   140011a5c:	and    esi,0xfffffff7
   140011a5f:	lea    rcx,[rsp+0x320]
   140011a67:	mov    DWORD PTR [rsp+0x30],esi
   140011a6b:	call   QWORD PTR [rip+0xe9e7]        # 0x140020458
   140011a71:	test   sil,0x4
   140011a75:	je     0x140011a8c
   140011a77:	and    esi,0xfffffffb
   140011a7a:	lea    rcx,[rsp+0xd0]
   140011a82:	mov    DWORD PTR [rsp+0x30],esi
   140011a86:	call   QWORD PTR [rip+0xecf4]        # 0x140020780
   140011a8c:	mov    rcx,QWORD PTR [rbp+0x28]
   140011a90:	movsxd rdx,DWORD PTR [rbp+0x10]
   140011a94:	add    rdx,rdx
   140011a97:	mov    eax,DWORD PTR [rcx+rdx*8]
   140011a9a:	mov    DWORD PTR [rdi+0x24],eax
   140011a9d:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140011aa1:	mov    DWORD PTR [rdi+0x28],eax
   140011aa4:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140011aa8:	mov    DWORD PTR [rdi+0x2c],eax
   140011aab:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140011aaf:	mov    DWORD PTR [rdi+0x30],eax
   140011ab2:	jmp    0x14000f9a9
   140011ab7:	mov    edx,0x1
   140011abc:	mov    rcx,rbx
   140011abf:	call   0x1400188c0
   140011ac4:	test   al,al
   140011ac6:	je     0x1400160c9
   140011acc:	movsxd rdx,DWORD PTR [rbp+0x10]
   140011ad0:	mov    rcx,QWORD PTR [rbp+0x28]
   140011ad4:	mov    eax,DWORD PTR [rbx+0x84]
   140011ada:	add    rdx,rdx
   140011add:	mov    DWORD PTR [rcx+rdx*8+0x4],eax
   140011ae1:	mov    rcx,QWORD PTR [rbp+0x28]
   140011ae5:	movsxd rdx,DWORD PTR [rbp+0x10]
   140011ae9:	add    rdx,rdx
   140011aec:	mov    eax,DWORD PTR [rcx+rdx*8]
   140011aef:	mov    DWORD PTR [rbp+0x58],eax
   140011af2:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140011af6:	mov    DWORD PTR [rbp+0x5c],eax
   140011af9:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140011afd:	mov    DWORD PTR [rbp+0x60],eax
   140011b00:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140011b04:	mov    ecx,0x38
   140011b09:	mov    DWORD PTR [rbp+0x64],eax
   140011b0c:	mov    rdx,QWORD PTR [rbp+0x8]
   140011b10:	call   0x14000e810
   140011b15:	mov    rbx,rax
   140011b18:	test   rax,rax
   140011b1b:	je     0x140011b6a
   140011b1d:	mov    rdx,QWORD PTR [rsp+0x38]
   140011b22:	lea    rcx,[rsp+0xe0]
   140011b2a:	or     esi,0x30
   140011b2d:	mov    edi,DWORD PTR [rdx+0x7c]
   140011b30:	add    rdx,0x10
   140011b34:	mov    DWORD PTR [rsp+0x30],esi
   140011b38:	call   QWORD PTR [rip+0xec5a]        # 0x140020798
   140011b3e:	mov    rcx,QWORD PTR [rbp+0x0]
   140011b42:	lea    r8,[rsp+0xe0]
   140011b4a:	lea    rdx,[rsp+0x380]
   140011b52:	call   0x140016b40
   140011b57:	mov    r8d,edi
   140011b5a:	mov    rcx,rbx
   140011b5d:	mov    rdx,rax
   140011b60:	call   0x14000cdf0
   140011b65:	mov    rdi,rax
   140011b68:	jmp    0x140011b6d
   140011b6a:	mov    rdi,r12
   140011b6d:	test   sil,0x20
   140011b71:	je     0x140011b88
   140011b73:	and    esi,0xffffffdf
   140011b76:	lea    rcx,[rsp+0x380]
   140011b7e:	mov    DWORD PTR [rsp+0x30],esi
   140011b82:	call   QWORD PTR [rip+0xe8d0]        # 0x140020458
   140011b88:	test   sil,0x10
   140011b8c:	je     0x140011ba3
   140011b8e:	and    esi,0xffffffef
   140011b91:	lea    rcx,[rsp+0xe0]
   140011b99:	mov    DWORD PTR [rsp+0x30],esi
   140011b9d:	call   QWORD PTR [rip+0xebdd]        # 0x140020780
   140011ba3:	mov    rcx,QWORD PTR [rbp+0x28]
   140011ba7:	movsxd rdx,DWORD PTR [rbp+0x10]
   140011bab:	add    rdx,rdx
   140011bae:	mov    eax,DWORD PTR [rcx+rdx*8]
   140011bb1:	mov    DWORD PTR [rdi+0x24],eax
   140011bb4:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140011bb8:	mov    DWORD PTR [rdi+0x28],eax
   140011bbb:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140011bbf:	mov    DWORD PTR [rdi+0x2c],eax
   140011bc2:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140011bc6:	mov    DWORD PTR [rdi+0x30],eax
   140011bc9:	jmp    0x14000f9a9
   140011bce:	mov    rdx,QWORD PTR [rbp+0x8]
   140011bd2:	mov    ecx,0x50
   140011bd7:	call   0x14000e810
   140011bdc:	mov    rdi,rax
   140011bdf:	test   rax,rax
   140011be2:	je     0x140011c2f
   140011be4:	lea    rax,[rip+0xf3cd]        # 0x140020fb8
   140011beb:	mov    QWORD PTR [rdi],rax
   140011bee:	mov    QWORD PTR [rdi+0x10],r12
   140011bf2:	mov    QWORD PTR [rdi+0x18],r12
   140011bf6:	mov    DWORD PTR [rdi+0x20],r12d
   140011bfa:	mov    DWORD PTR [rdi+0x24],r12d
   140011bfe:	mov    DWORD PTR [rdi+0x28],r12d
   140011c02:	mov    DWORD PTR [rdi+0x2c],r12d
   140011c06:	mov    DWORD PTR [rdi+0x30],r12d
   140011c0a:	mov    DWORD PTR [rdi+0x34],r12d
   140011c0e:	mov    DWORD PTR [rdi+0x38],r12d
   140011c12:	mov    DWORD PTR [rdi+0x3c],r12d
   140011c16:	mov    DWORD PTR [rdi+0x40],r12d
   140011c1a:	mov    DWORD PTR [rdi+0x44],r12d
   140011c1e:	mov    DWORD PTR [rdi+0x48],r12d
   140011c22:	mov    DWORD PTR [rdi+0x4c],r12d
   140011c26:	mov    DWORD PTR [rdi+0x8],0x2
   140011c2d:	jmp    0x140011c32
   140011c2f:	mov    rdi,r12
   140011c32:	mov    rcx,QWORD PTR [rbp+0x28]
   140011c36:	movsxd rdx,DWORD PTR [rbp+0x10]
   140011c3a:	add    rdx,rdx
   140011c3d:	mov    eax,DWORD PTR [rcx+rdx*8]
   140011c40:	mov    DWORD PTR [rdi+0x20],eax
   140011c43:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140011c47:	mov    DWORD PTR [rdi+0x24],eax
   140011c4a:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140011c4e:	mov    DWORD PTR [rdi+0x28],eax
   140011c51:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140011c55:	mov    DWORD PTR [rdi+0x2c],eax
   140011c58:	movsxd rdx,DWORD PTR [rbp+0x10]
   140011c5c:	inc    rdx
   140011c5f:	mov    rcx,QWORD PTR [rbp+0x28]
   140011c63:	add    rdx,rdx
   140011c66:	mov    eax,DWORD PTR [rcx+rdx*8]
   140011c69:	mov    DWORD PTR [rdi+0x40],eax
   140011c6c:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140011c70:	mov    DWORD PTR [rdi+0x44],eax
   140011c73:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140011c77:	mov    DWORD PTR [rdi+0x48],eax
   140011c7a:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140011c7e:	mov    DWORD PTR [rdi+0x4c],eax
   140011c81:	jmp    0x14000f9a9
   140011c86:	mov    rdx,QWORD PTR [rbp+0x8]
   140011c8a:	mov    ecx,0x50
   140011c8f:	call   0x14000e810
   140011c94:	mov    rdi,rax
   140011c97:	test   rax,rax
   140011c9a:	je     0x140011cbe
   140011c9c:	movsxd rcx,DWORD PTR [rbp+0x10]
   140011ca0:	mov    rax,QWORD PTR [rbp+0x18]
   140011ca4:	mov    rcx,QWORD PTR [rax+rcx*8+0x8]
   140011ca9:	mov    rdx,QWORD PTR [rcx+0x10]
   140011cad:	mov    QWORD PTR [rcx+0x10],r12
   140011cb1:	mov    rcx,rdi
   140011cb4:	call   0x14000ce60
   140011cb9:	mov    rdi,rax
   140011cbc:	jmp    0x140011cc1
   140011cbe:	mov    rdi,r12
   140011cc1:	mov    rcx,QWORD PTR [rbp+0x28]
   140011cc5:	movsxd rdx,DWORD PTR [rbp+0x10]
   140011cc9:	add    rdx,rdx
   140011ccc:	mov    eax,DWORD PTR [rcx+rdx*8]
   140011ccf:	mov    DWORD PTR [rdi+0x20],eax
   140011cd2:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140011cd6:	mov    DWORD PTR [rdi+0x24],eax
   140011cd9:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140011cdd:	mov    DWORD PTR [rdi+0x28],eax
   140011ce0:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140011ce4:	mov    DWORD PTR [rdi+0x2c],eax
   140011ce7:	mov    rcx,QWORD PTR [rbp+0x28]
   140011ceb:	movsxd rdx,DWORD PTR [rbp+0x10]
   140011cef:	add    rdx,0x2
   140011cf3:	add    rdx,rdx
   140011cf6:	mov    eax,DWORD PTR [rcx+rdx*8]
   140011cf9:	mov    DWORD PTR [rdi+0x40],eax
   140011cfc:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140011d00:	mov    DWORD PTR [rdi+0x44],eax
   140011d03:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140011d07:	mov    DWORD PTR [rdi+0x48],eax
   140011d0a:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140011d0e:	mov    DWORD PTR [rdi+0x4c],eax
   140011d11:	jmp    0x14000f9a9
   140011d16:	mov    rdx,QWORD PTR [rbp+0x8]
   140011d1a:	mov    ecx,0x50
   140011d1f:	call   0x14000e810
   140011d24:	mov    rdi,rax
   140011d27:	test   rax,rax
   140011d2a:	je     0x140011cbe
   140011d2c:	movsxd rcx,DWORD PTR [rbp+0x10]
   140011d30:	mov    rax,QWORD PTR [rbp+0x18]
   140011d34:	mov    rcx,QWORD PTR [rax+rcx*8+0x8]
   140011d39:	mov    rdx,QWORD PTR [rcx+0x20]
   140011d3d:	mov    QWORD PTR [rcx+0x20],r12
   140011d41:	mov    rcx,rdi
   140011d44:	call   0x14000ceb0
   140011d49:	mov    rdi,rax
   140011d4c:	jmp    0x140011cc1
   140011d51:	mov    rdx,QWORD PTR [rbp+0x8]
   140011d55:	mov    ecx,0x50
   140011d5a:	call   0x14000e810
   140011d5f:	mov    rdi,rax
   140011d62:	test   rax,rax
   140011d65:	je     0x140011dc7
   140011d67:	movsxd rcx,DWORD PTR [rbp+0x10]
   140011d6b:	mov    rax,QWORD PTR [rbp+0x18]
   140011d6f:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140011d74:	lea    rcx,[rip+0xf23d]        # 0x140020fb8
   140011d7b:	mov    rax,QWORD PTR [rdx+0x20]
   140011d7f:	mov    QWORD PTR [rdx+0x20],r12
   140011d83:	mov    QWORD PTR [rdi],rcx
   140011d86:	mov    QWORD PTR [rdi+0x10],rax
   140011d8a:	mov    QWORD PTR [rdi+0x18],r12
   140011d8e:	mov    DWORD PTR [rdi+0x20],r12d
   140011d92:	mov    DWORD PTR [rdi+0x24],r12d
   140011d96:	mov    DWORD PTR [rdi+0x28],r12d
   140011d9a:	mov    DWORD PTR [rdi+0x2c],r12d
   140011d9e:	mov    DWORD PTR [rdi+0x30],r12d
   140011da2:	mov    DWORD PTR [rdi+0x34],r12d
   140011da6:	mov    DWORD PTR [rdi+0x38],r12d
   140011daa:	mov    DWORD PTR [rdi+0x3c],r12d
   140011dae:	mov    DWORD PTR [rdi+0x40],r12d
   140011db2:	mov    DWORD PTR [rdi+0x44],r12d
   140011db6:	mov    DWORD PTR [rdi+0x48],r12d
   140011dba:	mov    DWORD PTR [rdi+0x4c],r12d
   140011dbe:	mov    DWORD PTR [rdi+0x8],0x2
   140011dc5:	jmp    0x140011dca
   140011dc7:	mov    rdi,r12
   140011dca:	mov    rcx,QWORD PTR [rbp+0x28]
   140011dce:	movsxd rdx,DWORD PTR [rbp+0x10]
   140011dd2:	add    rdx,rdx
   140011dd5:	mov    eax,DWORD PTR [rcx+rdx*8]
   140011dd8:	mov    DWORD PTR [rdi+0x20],eax
   140011ddb:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140011ddf:	mov    DWORD PTR [rdi+0x24],eax
   140011de2:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140011de6:	mov    DWORD PTR [rdi+0x28],eax
   140011de9:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140011ded:	mov    DWORD PTR [rdi+0x2c],eax
   140011df0:	mov    rcx,QWORD PTR [rbp+0x28]
   140011df4:	movsxd rdx,DWORD PTR [rbp+0x10]
   140011df8:	add    rdx,0x2
   140011dfc:	add    rdx,rdx
   140011dff:	mov    eax,DWORD PTR [rcx+rdx*8]
   140011e02:	mov    DWORD PTR [rdi+0x30],eax
   140011e05:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140011e09:	mov    DWORD PTR [rdi+0x34],eax
   140011e0c:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140011e10:	mov    DWORD PTR [rdi+0x38],eax
   140011e13:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140011e17:	mov    DWORD PTR [rdi+0x3c],eax
   140011e1a:	mov    rcx,QWORD PTR [rbp+0x28]
   140011e1e:	movsxd rdx,DWORD PTR [rbp+0x10]
   140011e22:	add    rdx,0x3
   140011e26:	add    rdx,rdx
   140011e29:	mov    eax,DWORD PTR [rcx+rdx*8]
   140011e2c:	mov    DWORD PTR [rdi+0x40],eax
   140011e2f:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140011e33:	mov    DWORD PTR [rdi+0x44],eax
   140011e36:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140011e3a:	mov    DWORD PTR [rdi+0x48],eax
   140011e3d:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140011e41:	mov    DWORD PTR [rdi+0x4c],eax
   140011e44:	jmp    0x14000f9a9
   140011e49:	mov    rdx,QWORD PTR [rbp+0x8]
   140011e4d:	mov    ecx,0x50
   140011e52:	call   0x14000e810
   140011e57:	mov    rdi,rax
   140011e5a:	test   rax,rax
   140011e5d:	je     0x140011e96
   140011e5f:	movsxd rcx,DWORD PTR [rbp+0x10]
   140011e63:	mov    rax,QWORD PTR [rbp+0x18]
   140011e67:	mov    rdx,QWORD PTR [rax+rcx*8+0x18]
   140011e6c:	mov    r8,QWORD PTR [rdx+0x10]
   140011e70:	mov    QWORD PTR [rdx+0x10],r12
   140011e74:	movsxd rcx,DWORD PTR [rbp+0x10]
   140011e78:	mov    rax,QWORD PTR [rbp+0x18]
   140011e7c:	mov    rcx,QWORD PTR [rax+rcx*8+0x8]
   140011e81:	mov    rdx,QWORD PTR [rcx+0x20]
   140011e85:	mov    QWORD PTR [rcx+0x20],r12
   140011e89:	mov    rcx,rdi
   140011e8c:	call   0x14000cf00
   140011e91:	mov    rdi,rax
   140011e94:	jmp    0x140011e99
   140011e96:	mov    rdi,r12
   140011e99:	mov    rcx,QWORD PTR [rbp+0x28]
   140011e9d:	movsxd rdx,DWORD PTR [rbp+0x10]
   140011ea1:	add    rdx,rdx
   140011ea4:	mov    eax,DWORD PTR [rcx+rdx*8]
   140011ea7:	mov    DWORD PTR [rdi+0x20],eax
   140011eaa:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140011eae:	mov    DWORD PTR [rdi+0x24],eax
   140011eb1:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140011eb5:	mov    DWORD PTR [rdi+0x28],eax
   140011eb8:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140011ebc:	mov    DWORD PTR [rdi+0x2c],eax
   140011ebf:	mov    rcx,QWORD PTR [rbp+0x28]
   140011ec3:	movsxd rdx,DWORD PTR [rbp+0x10]
   140011ec7:	add    rdx,0x2
   140011ecb:	add    rdx,rdx
   140011ece:	mov    eax,DWORD PTR [rcx+rdx*8]
   140011ed1:	mov    DWORD PTR [rdi+0x30],eax
   140011ed4:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140011ed8:	mov    DWORD PTR [rdi+0x34],eax
   140011edb:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140011edf:	mov    DWORD PTR [rdi+0x38],eax
   140011ee2:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140011ee6:	mov    DWORD PTR [rdi+0x3c],eax
   140011ee9:	mov    rcx,QWORD PTR [rbp+0x28]
   140011eed:	movsxd rdx,DWORD PTR [rbp+0x10]
   140011ef1:	add    rdx,0x4
   140011ef5:	add    rdx,rdx
   140011ef8:	mov    eax,DWORD PTR [rcx+rdx*8]
   140011efb:	mov    DWORD PTR [rdi+0x40],eax
   140011efe:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140011f02:	mov    DWORD PTR [rdi+0x44],eax
   140011f05:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140011f09:	mov    DWORD PTR [rdi+0x48],eax
   140011f0c:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140011f10:	mov    DWORD PTR [rdi+0x4c],eax
   140011f13:	jmp    0x14000f9a9
   140011f18:	mov    rax,QWORD PTR [rbp+0x18]
   140011f1c:	mov    ecx,0x38
   140011f21:	cmp    QWORD PTR [rax+rdx*8+0x8],r12
   140011f26:	mov    rdx,QWORD PTR [rbp+0x8]
   140011f2a:	je     0x140011f5e
   140011f2c:	call   0x14000e810
   140011f31:	mov    rdi,rax
   140011f34:	test   rax,rax
   140011f37:	je     0x140011fa2
   140011f39:	movsxd rcx,DWORD PTR [rbp+0x10]
   140011f3d:	mov    rax,QWORD PTR [rbp+0x18]
   140011f41:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140011f46:	lea    rcx,[rip+0xf0bb]        # 0x140021008
   140011f4d:	mov    rax,QWORD PTR [rdx+0x18]
   140011f51:	mov    QWORD PTR [rdx+0x18],r12
   140011f55:	mov    QWORD PTR [rdi],rcx
   140011f58:	mov    QWORD PTR [rdi+0x10],rax
   140011f5c:	jmp    0x140011f79
   140011f5e:	call   0x14000e810
   140011f63:	mov    rdi,rax
   140011f66:	test   rax,rax
   140011f69:	je     0x140011fa2
   140011f6b:	lea    rax,[rip+0xf096]        # 0x140021008
   140011f72:	mov    QWORD PTR [rdi],rax
   140011f75:	mov    QWORD PTR [rdi+0x10],r12
   140011f79:	mov    DWORD PTR [rdi+0x18],r12d
   140011f7d:	mov    DWORD PTR [rdi+0x1c],r12d
   140011f81:	mov    DWORD PTR [rdi+0x20],r12d
   140011f85:	mov    DWORD PTR [rdi+0x24],r12d
   140011f89:	mov    DWORD PTR [rdi+0x28],r12d
   140011f8d:	mov    DWORD PTR [rdi+0x2c],r12d
   140011f91:	mov    DWORD PTR [rdi+0x30],r12d
   140011f95:	mov    DWORD PTR [rdi+0x34],r12d
   140011f99:	mov    DWORD PTR [rdi+0x8],0x2d
   140011fa0:	jmp    0x140011fa5
   140011fa2:	mov    rdi,r12
   140011fa5:	mov    rcx,QWORD PTR [rbp+0x28]
   140011fa9:	movsxd rdx,DWORD PTR [rbp+0x10]
   140011fad:	add    rdx,rdx
   140011fb0:	mov    eax,DWORD PTR [rcx+rdx*8]
   140011fb3:	mov    DWORD PTR [rdi+0x18],eax
   140011fb6:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140011fba:	mov    DWORD PTR [rdi+0x1c],eax
   140011fbd:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140011fc1:	mov    DWORD PTR [rdi+0x20],eax
   140011fc4:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140011fc8:	mov    DWORD PTR [rdi+0x24],eax
   140011fcb:	jmp    0x14001009d
   140011fd0:	mov    rdx,QWORD PTR [rbp+0x8]
   140011fd4:	mov    ecx,0x38
   140011fd9:	call   0x14000e810
   140011fde:	mov    rdi,rax
   140011fe1:	test   rax,rax
   140011fe4:	je     0x140012032
   140011fe6:	movsxd rcx,DWORD PTR [rbp+0x10]
   140011fea:	mov    rax,QWORD PTR [rbp+0x18]
   140011fee:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140011ff3:	lea    rcx,[rip+0xf00e]        # 0x140021008
   140011ffa:	mov    rax,QWORD PTR [rdx+0x18]
   140011ffe:	mov    QWORD PTR [rdx+0x18],r12
   140012002:	mov    QWORD PTR [rdi],rcx
   140012005:	mov    QWORD PTR [rdi+0x10],rax
   140012009:	mov    DWORD PTR [rdi+0x18],r12d
   14001200d:	mov    DWORD PTR [rdi+0x1c],r12d
   140012011:	mov    DWORD PTR [rdi+0x20],r12d
   140012015:	mov    DWORD PTR [rdi+0x24],r12d
   140012019:	mov    DWORD PTR [rdi+0x28],r12d
   14001201d:	mov    DWORD PTR [rdi+0x2c],r12d
   140012021:	mov    DWORD PTR [rdi+0x30],r12d
   140012025:	mov    DWORD PTR [rdi+0x34],r12d
   140012029:	mov    DWORD PTR [rdi+0x8],0x2d
   140012030:	jmp    0x140012035
   140012032:	mov    rdi,r12
   140012035:	mov    rcx,QWORD PTR [rbp+0x28]
   140012039:	movsxd rdx,DWORD PTR [rbp+0x10]
   14001203d:	add    rdx,rdx
   140012040:	mov    eax,DWORD PTR [rcx+rdx*8]
   140012043:	mov    DWORD PTR [rdi+0x18],eax
   140012046:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14001204a:	mov    DWORD PTR [rdi+0x1c],eax
   14001204d:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140012051:	mov    DWORD PTR [rdi+0x20],eax
   140012054:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140012058:	mov    DWORD PTR [rdi+0x24],eax
   14001205b:	movsxd rdx,DWORD PTR [rbp+0x10]
   14001205f:	add    rdx,0x3
   140012063:	jmp    0x1400100a5
   140012068:	mov    rdx,QWORD PTR [rbp+0x8]
   14001206c:	mov    ecx,0x38
   140012071:	call   0x14000e810
   140012076:	mov    rdi,rax
   140012079:	test   rax,rax
   14001207c:	je     0x140011fa2
   140012082:	mov    rax,QWORD PTR [rbp+0x18]
   140012086:	movsxd rcx,DWORD PTR [rbp+0x10]
   14001208a:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   14001208f:	lea    rax,[rip+0xec52]        # 0x140020ce8
   140012096:	mov    QWORD PTR [rdi],rax
   140012099:	mov    QWORD PTR [rdi+0x10],rdx
   14001209d:	mov    DWORD PTR [rdi+0x18],r12d
   1400120a1:	mov    DWORD PTR [rdi+0x1c],r12d
   1400120a5:	mov    DWORD PTR [rdi+0x20],r12d
   1400120a9:	mov    DWORD PTR [rdi+0x24],r12d
   1400120ad:	mov    DWORD PTR [rdi+0x28],r12d
   1400120b1:	mov    DWORD PTR [rdi+0x2c],r12d
   1400120b5:	mov    DWORD PTR [rdi+0x30],r12d
   1400120b9:	mov    DWORD PTR [rdi+0x34],r12d
   1400120bd:	mov    DWORD PTR [rdi+0x8],0x4e
   1400120c4:	jmp    0x140011fa5
   1400120c9:	mov    rax,QWORD PTR [rbp+0x18]
   1400120cd:	mov    rbx,QWORD PTR [rax+rdx*8]
   1400120d1:	test   rbx,rbx
   1400120d4:	je     0x1400121a3
   1400120da:	cmp    DWORD PTR [rbx+0x8],0x3
   1400120de:	jne    0x1400121a3
   1400120e4:	or     rcx,0xffffffffffffffff
   1400120e8:	xor    eax,eax
   1400120ea:	lea    rdx,[rsp+0x340]
   1400120f2:	repnz scas al,BYTE PTR es:[rdi]
   1400120f4:	lea    rax,[rip+0x10945]        # 0x140022a40
   1400120fb:	not    rcx
   1400120fe:	mov    QWORD PTR [rsp+0x48],rax
   140012103:	dec    rcx
   140012106:	mov    DWORD PTR [rsp+0x40],ecx
   14001210a:	lea    rcx,[rsp+0xf0]
   140012112:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140012117:	movdqa XMMWORD PTR [rsp+0x340],xmm0
   140012120:	call   QWORD PTR [rip+0xe412]        # 0x140020538
   140012126:	mov    DWORD PTR [rsp+0x210],r12d
   14001212e:	mov    eax,DWORD PTR [rbx+0x20]
   140012131:	lea    rcx,[rsp+0x214]
   140012139:	lea    rdx,[rsp+0xf0]
   140012141:	mov    DWORD PTR [rcx],eax
   140012143:	mov    eax,DWORD PTR [rbx+0x24]
   140012146:	mov    DWORD PTR [rcx+0x4],eax
   140012149:	mov    eax,DWORD PTR [rbx+0x28]
   14001214c:	mov    DWORD PTR [rcx+0x8],eax
   14001214f:	mov    eax,DWORD PTR [rbx+0x2c]
   140012152:	mov    DWORD PTR [rcx+0xc],eax
   140012155:	lea    rcx,[rsp+0x228]
   14001215d:	call   QWORD PTR [rip+0xe635]        # 0x140020798
   140012163:	lea    rcx,[rbp+0x118]
   14001216a:	lea    rdx,[rsp+0x210]
   140012172:	call   0x14000f2e0
   140012177:	lea    rcx,[rsp+0x228]
   14001217f:	call   QWORD PTR [rip+0xe5fb]        # 0x140020780
   140012185:	lea    rcx,[rsp+0xf0]
   14001218d:	call   QWORD PTR [rip+0xe5ed]        # 0x140020780
   140012193:	movsxd rdx,DWORD PTR [rbp+0x10]
   140012197:	mov    rcx,QWORD PTR [rbp+0x18]
   14001219b:	mov    rax,QWORD PTR [rbx+0x10]
   14001219f:	mov    QWORD PTR [rcx+rdx*8],rax
   1400121a3:	movsxd rax,DWORD PTR [rbp+0x10]
   1400121a7:	mov    rdx,QWORD PTR [rbp+0x18]
   1400121ab:	mov    rcx,rbp
   1400121ae:	mov    rdx,QWORD PTR [rdx+rax*8]
   1400121b2:	call   0x14000ed20
   1400121b7:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400121bb:	mov    rdx,rax
   1400121be:	test   rax,rax
   1400121c1:	mov    rax,QWORD PTR [rbp+0x18]
   1400121c5:	je     0x140016155
   1400121cb:	mov    QWORD PTR [rax+rcx*8],rdx
   1400121cf:	lea    r9,[rip+0xfffffffffffede2a]        # 0x140000000
   1400121d6:	jmp    0x140015510
   1400121db:	mov    rdx,QWORD PTR [rbp+0x8]
   1400121df:	mov    ecx,0x38
   1400121e4:	call   0x14000e810
   1400121e9:	mov    rdi,rax
   1400121ec:	test   rax,rax
   1400121ef:	je     0x14000f9a6
   1400121f5:	mov    rax,QWORD PTR [rbp+0x18]
   1400121f9:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400121fd:	mov    rdx,QWORD PTR [rax+rcx*8]
   140012201:	lea    rax,[rip+0xeea0]        # 0x1400210a8
   140012208:	mov    QWORD PTR [rdi],rax
   14001220b:	mov    QWORD PTR [rdi+0x10],r12
   14001220f:	mov    QWORD PTR [rdi+0x18],rdx
   140012213:	mov    QWORD PTR [rdi+0x20],rdi
   140012217:	mov    DWORD PTR [rdi+0x28],r12d
   14001221b:	mov    DWORD PTR [rdi+0x2c],r12d
   14001221f:	mov    DWORD PTR [rdi+0x30],r12d
   140012223:	mov    DWORD PTR [rdi+0x34],r12d
   140012227:	mov    DWORD PTR [rdi+0x8],0x12
   14001222e:	jmp    0x14000f9a9
   140012233:	mov    rdx,QWORD PTR [rbp+0x8]
   140012237:	mov    ecx,0x38
   14001223c:	call   0x14000e810
   140012241:	mov    r11,rax
   140012244:	test   rax,rax
   140012247:	je     0x140010125
   14001224d:	movsxd rcx,DWORD PTR [rbp+0x10]
   140012251:	mov    r8,QWORD PTR [rbp+0x18]
   140012255:	lea    eax,[rcx+0x1]
   140012258:	mov    rcx,QWORD PTR [r8+rcx*8]
   14001225c:	mov    rdx,QWORD PTR [rcx+0x10]
   140012260:	mov    QWORD PTR [rcx+0x10],r12
   140012264:	movsxd rdi,eax
   140012267:	mov    rax,QWORD PTR [r8+rdi*8]
   14001226b:	lea    rcx,[rip+0xee36]        # 0x1400210a8
   140012272:	mov    QWORD PTR [r11],rcx
   140012275:	mov    QWORD PTR [r11+0x10],rdx
   140012279:	mov    QWORD PTR [r11+0x18],rax
   14001227d:	mov    QWORD PTR [r11+0x20],r11
   140012281:	mov    DWORD PTR [r11+0x28],r12d
   140012285:	mov    DWORD PTR [r11+0x2c],r12d
   140012289:	mov    DWORD PTR [r11+0x30],r12d
   14001228d:	mov    DWORD PTR [r11+0x34],r12d
   140012291:	mov    DWORD PTR [r11+0x8],0x12
   140012299:	jmp    0x140010128
   14001229e:	mov    rdx,QWORD PTR [rbp+0x8]
   1400122a2:	mov    ecx,0x38
   1400122a7:	call   0x14000e810
   1400122ac:	mov    rdi,rax
   1400122af:	test   rax,rax
   1400122b2:	je     0x140012306
   1400122b4:	mov    rax,QWORD PTR [rbp+0x18]
   1400122b8:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400122bc:	mov    rdx,QWORD PTR [rax+rcx*8+0x10]
   1400122c1:	mov    rcx,QWORD PTR [rax+rcx*8]
   1400122c5:	lea    rax,[rip+0xeddc]        # 0x1400210a8
   1400122cc:	mov    QWORD PTR [rdi],rax
   1400122cf:	mov    QWORD PTR [rdi+0x10],r12
   1400122d3:	mov    QWORD PTR [rdi+0x18],rdx
   1400122d7:	mov    DWORD PTR [rdi+0x28],r12d
   1400122db:	mov    DWORD PTR [rdi+0x2c],r12d
   1400122df:	mov    DWORD PTR [rdi+0x30],r12d
   1400122e3:	mov    DWORD PTR [rdi+0x34],r12d
   1400122e7:	mov    DWORD PTR [rdi+0x8],0x12
   1400122ee:	mov    rax,QWORD PTR [rcx+0x20]
   1400122f2:	mov    QWORD PTR [rdi+0x20],rax
   1400122f6:	mov    QWORD PTR [rcx+0x20],rdi
   1400122fa:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400122fe:	inc    rdx
   140012301:	jmp    0x1400100a5
   140012306:	movsxd rdx,DWORD PTR [rbp+0x10]
   14001230a:	mov    rdi,r12
   14001230d:	inc    rdx
   140012310:	jmp    0x1400100a5
   140012315:	mov    rdx,QWORD PTR [rbp+0x8]
   140012319:	mov    ecx,0x38
   14001231e:	call   0x14000e810
   140012323:	mov    r11,rax
   140012326:	test   rax,rax
   140012329:	je     0x1400102c7
   14001232f:	mov    r8,QWORD PTR [rbp+0x18]
   140012333:	movsxd rcx,DWORD PTR [rbp+0x10]
   140012337:	lea    eax,[rcx+0x3]
   14001233a:	mov    rcx,QWORD PTR [r8+rcx*8+0x10]
   14001233f:	mov    rdi,QWORD PTR [rcx+0x10]
   140012343:	mov    QWORD PTR [rcx+0x10],r12
   140012347:	movsxd rcx,DWORD PTR [rbp+0x10]
   14001234b:	movsxd rdx,eax
   14001234e:	mov    rax,QWORD PTR [rbp+0x18]
   140012352:	mov    rdx,QWORD PTR [r8+rdx*8]
   140012356:	mov    r8,QWORD PTR [rax+rcx*8]
   14001235a:	lea    rax,[rip+0xed47]        # 0x1400210a8
   140012361:	mov    QWORD PTR [r11],rax
   140012364:	mov    QWORD PTR [r11+0x10],rdi
   140012368:	mov    QWORD PTR [r11+0x18],rdx
   14001236c:	mov    DWORD PTR [r11+0x28],r12d
   140012370:	mov    DWORD PTR [r11+0x2c],r12d
   140012374:	mov    DWORD PTR [r11+0x30],r12d
   140012378:	mov    DWORD PTR [r11+0x34],r12d
   14001237c:	mov    DWORD PTR [r11+0x8],0x12
   140012384:	mov    rax,QWORD PTR [r8+0x20]
   140012388:	mov    QWORD PTR [r11+0x20],rax
   14001238c:	mov    QWORD PTR [r8+0x20],r11
   140012390:	jmp    0x1400102ca
   140012395:	mov    rdx,QWORD PTR [rbp+0x8]
   140012399:	mov    ecx,0x28
   14001239e:	call   0x14000e810
   1400123a3:	mov    rdi,rax
   1400123a6:	test   rax,rax
   1400123a9:	je     0x14001191b
   1400123af:	lea    rax,[rip+0xeca2]        # 0x140021058
   1400123b6:	mov    QWORD PTR [rdi],rax
   1400123b9:	mov    QWORD PTR [rdi+0x10],rdi
   1400123bd:	mov    DWORD PTR [rdi+0x18],r12d
   1400123c1:	mov    DWORD PTR [rdi+0x1c],r12d
   1400123c5:	mov    DWORD PTR [rdi+0x20],r12d
   1400123c9:	mov    DWORD PTR [rdi+0x24],r12d
   1400123cd:	mov    DWORD PTR [rdi+0x8],0x13
   1400123d4:	jmp    0x14001191e
   1400123d9:	mov    rdx,QWORD PTR [rbp+0x8]
   1400123dd:	mov    ecx,0x28
   1400123e2:	call   0x14000e810
   1400123e7:	mov    rdi,rax
   1400123ea:	test   rax,rax
   1400123ed:	je     0x14001242a
   1400123ef:	mov    rax,QWORD PTR [rbp+0x18]
   1400123f3:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400123f7:	mov    rdx,QWORD PTR [rax+rcx*8]
   1400123fb:	lea    rax,[rip+0xec56]        # 0x140021058
   140012402:	mov    QWORD PTR [rdi],rax
   140012405:	mov    DWORD PTR [rdi+0x18],r12d
   140012409:	mov    DWORD PTR [rdi+0x1c],r12d
   14001240d:	mov    DWORD PTR [rdi+0x20],r12d
   140012411:	mov    DWORD PTR [rdi+0x24],r12d
   140012415:	mov    DWORD PTR [rdi+0x8],0x13
   14001241c:	mov    rax,QWORD PTR [rdx+0x10]
   140012420:	mov    QWORD PTR [rdi+0x10],rax
   140012424:	mov    QWORD PTR [rdx+0x10],rdi
   140012428:	jmp    0x14001242d
   14001242a:	mov    rdi,r12
   14001242d:	mov    rcx,QWORD PTR [rbp+0x28]
   140012431:	movsxd rdx,DWORD PTR [rbp+0x10]
   140012435:	inc    rdx
   140012438:	add    rdx,rdx
   14001243b:	mov    eax,DWORD PTR [rcx+rdx*8]
   14001243e:	mov    DWORD PTR [rdi+0x18],eax
   140012441:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140012445:	mov    DWORD PTR [rdi+0x1c],eax
   140012448:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14001244c:	mov    DWORD PTR [rdi+0x20],eax
   14001244f:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140012453:	mov    DWORD PTR [rdi+0x24],eax
   140012456:	jmp    0x14000f9a9
   14001245b:	mov    rdx,QWORD PTR [rbp+0x8]
   14001245f:	mov    ecx,0x40
   140012464:	call   0x14000e810
   140012469:	mov    rdi,rax
   14001246c:	test   rax,rax
   14001246f:	je     0x14001242a
   140012471:	movsxd rcx,DWORD PTR [rbp+0x10]
   140012475:	mov    rax,QWORD PTR [rbp+0x18]
   140012479:	mov    rdx,QWORD PTR [rax+rcx*8+0x10]
   14001247e:	mov    rax,QWORD PTR [rax+rcx*8]
   140012482:	mov    QWORD PTR [rdi+0x10],rax
   140012486:	lea    rax,[rip+0xecbb]        # 0x140021148
   14001248d:	mov    QWORD PTR [rdi],rax
   140012490:	mov    DWORD PTR [rdi+0x18],r12d
   140012494:	mov    DWORD PTR [rdi+0x1c],r12d
   140012498:	mov    DWORD PTR [rdi+0x20],r12d
   14001249c:	mov    DWORD PTR [rdi+0x24],r12d
   1400124a0:	mov    QWORD PTR [rdi+0x28],rdx
   1400124a4:	mov    DWORD PTR [rdi+0x30],r12d
   1400124a8:	mov    DWORD PTR [rdi+0x34],r12d
   1400124ac:	mov    DWORD PTR [rdi+0x38],r12d
   1400124b0:	mov    DWORD PTR [rdi+0x3c],r12d
   1400124b4:	mov    DWORD PTR [rdi+0x8],0x36
   1400124bb:	jmp    0x14001242d
   1400124c0:	mov    rdx,QWORD PTR [rbp+0x8]
   1400124c4:	mov    ecx,0x80
   1400124c9:	call   0x14000e810
   1400124ce:	mov    r11,rax
   1400124d1:	test   rax,rax
   1400124d4:	je     0x1400124fe
   1400124d6:	mov    ecx,DWORD PTR [rbp+0x10]
   1400124d9:	mov    rdi,QWORD PTR [rbp+0x18]
   1400124dd:	lea    eax,[rcx+0x5]
   1400124e0:	movsxd r8,eax
   1400124e3:	lea    eax,[rcx+0x1]
   1400124e6:	mov    rcx,r11
   1400124e9:	mov    r8,QWORD PTR [rdi+r8*8]
   1400124ed:	movsxd rdx,eax
   1400124f0:	mov    rdx,QWORD PTR [rdi+rdx*8]
   1400124f4:	call   0x14000d090
   1400124f9:	mov    rdi,rax
   1400124fc:	jmp    0x140012501
   1400124fe:	mov    rdi,r12
   140012501:	mov    rcx,QWORD PTR [rbp+0x28]
   140012505:	movsxd rdx,DWORD PTR [rbp+0x10]
   140012509:	add    rdx,rdx
   14001250c:	mov    eax,DWORD PTR [rcx+rdx*8]
   14001250f:	mov    DWORD PTR [rdi+0x1c],eax
   140012512:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140012516:	mov    DWORD PTR [rdi+0x20],eax
   140012519:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14001251d:	mov    DWORD PTR [rdi+0x24],eax
   140012520:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140012524:	mov    DWORD PTR [rdi+0x28],eax
   140012527:	mov    rcx,QWORD PTR [rbp+0x28]
   14001252b:	movsxd rdx,DWORD PTR [rbp+0x10]
   14001252f:	add    rdx,0x2
   140012533:	add    rdx,rdx
   140012536:	mov    eax,DWORD PTR [rcx+rdx*8]
   140012539:	mov    DWORD PTR [rdi+0x2c],eax
   14001253c:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140012540:	mov    DWORD PTR [rdi+0x30],eax
   140012543:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140012547:	mov    DWORD PTR [rdi+0x34],eax
   14001254a:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14001254e:	mov    DWORD PTR [rdi+0x38],eax
   140012551:	mov    rcx,QWORD PTR [rbp+0x28]
   140012555:	movsxd rdx,DWORD PTR [rbp+0x10]
   140012559:	add    rdx,0x3
   14001255d:	add    rdx,rdx
   140012560:	mov    eax,DWORD PTR [rcx+rdx*8]
   140012563:	mov    DWORD PTR [rdi+0x48],eax
   140012566:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14001256a:	mov    DWORD PTR [rdi+0x4c],eax
   14001256d:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140012571:	mov    DWORD PTR [rdi+0x50],eax
   140012574:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140012578:	mov    DWORD PTR [rdi+0x54],eax
   14001257b:	mov    rcx,QWORD PTR [rbp+0x28]
   14001257f:	movsxd rdx,DWORD PTR [rbp+0x10]
   140012583:	add    rdx,0x4
   140012587:	add    rdx,rdx
   14001258a:	mov    eax,DWORD PTR [rcx+rdx*8]
   14001258d:	mov    DWORD PTR [rdi+0x58],eax
   140012590:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140012594:	mov    DWORD PTR [rdi+0x5c],eax
   140012597:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14001259b:	mov    DWORD PTR [rdi+0x60],eax
   14001259e:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400125a2:	mov    DWORD PTR [rdi+0x64],eax
   1400125a5:	mov    rcx,QWORD PTR [rbp+0x28]
   1400125a9:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400125ad:	add    rdx,0x6
   1400125b1:	add    rdx,rdx
   1400125b4:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400125b7:	mov    DWORD PTR [rdi+0x70],eax
   1400125ba:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400125be:	mov    DWORD PTR [rdi+0x74],eax
   1400125c1:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400125c5:	mov    DWORD PTR [rdi+0x78],eax
   1400125c8:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400125cc:	mov    DWORD PTR [rdi+0x7c],eax
   1400125cf:	jmp    0x14000f9a9
   1400125d4:	mov    rdx,QWORD PTR [rbp+0x8]
   1400125d8:	mov    ecx,0x80
   1400125dd:	call   0x14000e810
   1400125e2:	mov    r11,rax
   1400125e5:	test   rax,rax
   1400125e8:	je     0x14001261c
   1400125ea:	mov    ecx,DWORD PTR [rbp+0x10]
   1400125ed:	mov    rdi,QWORD PTR [rbp+0x18]
   1400125f1:	lea    eax,[rcx+0x6]
   1400125f4:	movsxd r9,eax
   1400125f7:	lea    eax,[rcx+0x3]
   1400125fa:	mov    r9,QWORD PTR [rdi+r9*8]
   1400125fe:	movsxd r8,eax
   140012601:	lea    eax,[rcx+0x1]
   140012604:	mov    r8,QWORD PTR [rdi+r8*8]
   140012608:	movsxd rdx,eax
   14001260b:	mov    rcx,r11
   14001260e:	mov    rdx,QWORD PTR [rdi+rdx*8]
   140012612:	call   0x14000d100
   140012617:	mov    rdi,rax
   14001261a:	jmp    0x14001261f
   14001261c:	mov    rdi,r12
   14001261f:	mov    rcx,QWORD PTR [rbp+0x28]
   140012623:	movsxd rdx,DWORD PTR [rbp+0x10]
   140012627:	add    rdx,rdx
   14001262a:	mov    eax,DWORD PTR [rcx+rdx*8]
   14001262d:	mov    DWORD PTR [rdi+0x1c],eax
   140012630:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140012634:	mov    DWORD PTR [rdi+0x20],eax
   140012637:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14001263b:	mov    DWORD PTR [rdi+0x24],eax
   14001263e:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140012642:	mov    DWORD PTR [rdi+0x28],eax
   140012645:	mov    rcx,QWORD PTR [rbp+0x28]
   140012649:	movsxd rdx,DWORD PTR [rbp+0x10]
   14001264d:	add    rdx,0x2
   140012651:	add    rdx,rdx
   140012654:	mov    eax,DWORD PTR [rcx+rdx*8]
   140012657:	mov    DWORD PTR [rdi+0x2c],eax
   14001265a:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14001265e:	mov    DWORD PTR [rdi+0x30],eax
   140012661:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140012665:	mov    DWORD PTR [rdi+0x34],eax
   140012668:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14001266c:	mov    DWORD PTR [rdi+0x38],eax
   14001266f:	mov    rcx,QWORD PTR [rbp+0x28]
   140012673:	movsxd rdx,DWORD PTR [rbp+0x10]
   140012677:	add    rdx,0x4
   14001267b:	add    rdx,rdx
   14001267e:	mov    eax,DWORD PTR [rcx+rdx*8]
   140012681:	mov    DWORD PTR [rdi+0x48],eax
   140012684:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140012688:	mov    DWORD PTR [rdi+0x4c],eax
   14001268b:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14001268f:	mov    DWORD PTR [rdi+0x50],eax
   140012692:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140012696:	mov    DWORD PTR [rdi+0x54],eax
   140012699:	mov    rcx,QWORD PTR [rbp+0x28]
   14001269d:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400126a1:	add    rdx,0x5
   1400126a5:	add    rdx,rdx
   1400126a8:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400126ab:	mov    DWORD PTR [rdi+0x58],eax
   1400126ae:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400126b2:	mov    DWORD PTR [rdi+0x5c],eax
   1400126b5:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400126b9:	mov    DWORD PTR [rdi+0x60],eax
   1400126bc:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400126c0:	mov    DWORD PTR [rdi+0x64],eax
   1400126c3:	mov    rcx,QWORD PTR [rbp+0x28]
   1400126c7:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400126cb:	add    rdx,0x7
   1400126cf:	add    rdx,rdx
   1400126d2:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400126d5:	mov    DWORD PTR [rdi+0x70],eax
   1400126d8:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400126dc:	mov    DWORD PTR [rdi+0x74],eax
   1400126df:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400126e3:	mov    DWORD PTR [rdi+0x78],eax
   1400126e6:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400126ea:	mov    DWORD PTR [rdi+0x7c],eax
   1400126ed:	jmp    0x14000f9a9
   1400126f2:	mov    rdx,QWORD PTR [rbp+0x8]
   1400126f6:	mov    ecx,0x30
   1400126fb:	call   0x14000e810
   140012700:	mov    rdi,rax
   140012703:	test   rax,rax
   140012706:	je     0x14000f9a6
   14001270c:	mov    rax,QWORD PTR [rbp+0x18]
   140012710:	movsxd rcx,DWORD PTR [rbp+0x10]
   140012714:	mov    rdx,QWORD PTR [rax+rcx*8]
   140012718:	lea    rax,[rip+0xe9d9]        # 0x1400210f8
   14001271f:	mov    QWORD PTR [rdi],rax
   140012722:	mov    QWORD PTR [rdi+0x10],rdx
   140012726:	mov    QWORD PTR [rdi+0x18],rdi
   14001272a:	mov    DWORD PTR [rdi+0x20],r12d
   14001272e:	mov    DWORD PTR [rdi+0x24],r12d
   140012732:	mov    DWORD PTR [rdi+0x28],r12d
   140012736:	mov    DWORD PTR [rdi+0x2c],r12d
   14001273a:	mov    DWORD PTR [rdi+0x8],0x33
   140012741:	jmp    0x14000f9a9
   140012746:	mov    rdx,QWORD PTR [rbp+0x8]
   14001274a:	mov    ecx,0x30
   14001274f:	call   0x14000e810
   140012754:	mov    rdi,rax
   140012757:	test   rax,rax
   14001275a:	je     0x14000ff3d
   140012760:	mov    rax,QWORD PTR [rbp+0x18]
   140012764:	movsxd rcx,DWORD PTR [rbp+0x10]
   140012768:	mov    rdx,QWORD PTR [rax+rcx*8+0x10]
   14001276d:	mov    rcx,QWORD PTR [rax+rcx*8]
   140012771:	lea    rax,[rip+0xe980]        # 0x1400210f8
   140012778:	mov    QWORD PTR [rdi],rax
   14001277b:	mov    QWORD PTR [rdi+0x10],rdx
   14001277f:	mov    DWORD PTR [rdi+0x20],r12d
   140012783:	mov    DWORD PTR [rdi+0x24],r12d
   140012787:	mov    DWORD PTR [rdi+0x28],r12d
   14001278b:	mov    DWORD PTR [rdi+0x2c],r12d
   14001278f:	mov    DWORD PTR [rdi+0x8],0x33
   140012796:	mov    rax,QWORD PTR [rcx+0x18]
   14001279a:	mov    QWORD PTR [rdi+0x18],rax
   14001279e:	mov    QWORD PTR [rcx+0x18],rdi
   1400127a2:	jmp    0x14000ff40
   1400127a7:	mov    rdx,QWORD PTR [rbp+0x8]
   1400127ab:	mov    ecx,0x30
   1400127b0:	call   0x14000e810
   1400127b5:	mov    rdi,rax
   1400127b8:	test   rax,rax
   1400127bb:	je     0x140011761
   1400127c1:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400127c5:	lea    rcx,[rdi+0x20]
   1400127c9:	shl    rdx,0x4
   1400127cd:	add    rdx,QWORD PTR [rbp+0x30]
   1400127d1:	mov    DWORD PTR [rax+0x10],r12d
   1400127d5:	mov    DWORD PTR [rax+0x14],r12d
   1400127d9:	mov    DWORD PTR [rax+0x18],r12d
   1400127dd:	mov    DWORD PTR [rax+0x1c],r12d
   1400127e1:	mov    DWORD PTR [rax+0x8],0x35
   1400127e8:	lea    rax,[rip+0xe9f9]        # 0x1400211e8
   1400127ef:	mov    QWORD PTR [rdi],rax
   1400127f2:	call   QWORD PTR [rip+0xdc38]        # 0x140020430
   1400127f8:	mov    DWORD PTR [rdi+0x8],0x22
   1400127ff:	jmp    0x140011764
   140012804:	mov    rdx,QWORD PTR [rbp+0x8]
   140012808:	mov    ecx,0x30
   14001280d:	call   0x14000e810
   140012812:	mov    rdi,rax
   140012815:	test   rax,rax
   140012818:	je     0x140011761
   14001281e:	movsxd rdx,DWORD PTR [rbp+0x10]
   140012822:	lea    rcx,[rdi+0x20]
   140012826:	shl    rdx,0x4
   14001282a:	add    rdx,QWORD PTR [rbp+0x30]
   14001282e:	mov    DWORD PTR [rax+0x10],r12d
   140012832:	mov    DWORD PTR [rax+0x14],r12d
   140012836:	mov    DWORD PTR [rax+0x18],r12d
   14001283a:	mov    DWORD PTR [rax+0x1c],r12d
   14001283e:	mov    DWORD PTR [rax+0x8],0x35
   140012845:	lea    rax,[rip+0xe9ec]        # 0x140021238
   14001284c:	mov    QWORD PTR [rdi],rax
   14001284f:	call   QWORD PTR [rip+0xdbdb]        # 0x140020430
   140012855:	mov    DWORD PTR [rdi+0x8],0x3e
   14001285c:	jmp    0x140011764
   140012861:	mov    rdx,QWORD PTR [rbp+0x8]
   140012865:	mov    ecx,0x28
   14001286a:	call   0x14000e810
   14001286f:	mov    rdi,rax
   140012872:	test   rax,rax
   140012875:	je     0x140011761
   14001287b:	movsxd rcx,DWORD PTR [rbp+0x10]
   14001287f:	mov    rax,QWORD PTR [rbp+0x18]
   140012883:	movsd  xmm0,QWORD PTR [rax+rcx*8]
   140012888:	mov    DWORD PTR [rdi+0x10],r12d
   14001288c:	mov    DWORD PTR [rdi+0x14],r12d
   140012890:	mov    DWORD PTR [rdi+0x18],r12d
   140012894:	mov    DWORD PTR [rdi+0x1c],r12d
   140012898:	lea    rax,[rip+0xe9e9]        # 0x140021288
   14001289f:	movsd  QWORD PTR [rdi+0x20],xmm0
   1400128a4:	mov    QWORD PTR [rdi],rax
   1400128a7:	mov    DWORD PTR [rdi+0x8],0x2c
   1400128ae:	jmp    0x140011764
   1400128b3:	mov    rdx,QWORD PTR [rbp+0x8]
   1400128b7:	mov    ecx,0x40
   1400128bc:	call   0x14000e810
   1400128c1:	mov    r11,rax
   1400128c4:	test   rax,rax
   1400128c7:	je     0x140012916
   1400128c9:	mov    rax,QWORD PTR [rbp+0x18]
   1400128cd:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400128d1:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   1400128d6:	mov    rdx,QWORD PTR [rax+rcx*8]
   1400128da:	lea    rax,[rip+0xe9f7]        # 0x1400212d8
   1400128e1:	mov    QWORD PTR [r11],rax
   1400128e4:	mov    QWORD PTR [r11+0x10],rdx
   1400128e8:	mov    QWORD PTR [r11+0x18],rdi
   1400128ec:	mov    DWORD PTR [r11+0x20],r12d
   1400128f0:	mov    DWORD PTR [r11+0x24],r12d
   1400128f4:	mov    DWORD PTR [r11+0x28],r12d
   1400128f8:	mov    DWORD PTR [r11+0x2c],r12d
   1400128fc:	mov    DWORD PTR [r11+0x30],r12d
   140012900:	mov    DWORD PTR [r11+0x34],r12d
   140012904:	mov    DWORD PTR [r11+0x38],r12d
   140012908:	mov    DWORD PTR [r11+0x3c],r12d
   14001290c:	mov    DWORD PTR [r11+0x8],0x3
   140012914:	jmp    0x140012919
   140012916:	mov    r11,r12
   140012919:	mov    rcx,QWORD PTR [rbp+0x28]
   14001291d:	movsxd rdx,DWORD PTR [rbp+0x10]
   140012921:	lea    r9,[rip+0xfffffffffffed6d8]        # 0x140000000
   140012928:	inc    rdx
   14001292b:	add    rdx,rdx
   14001292e:	mov    eax,DWORD PTR [rcx+rdx*8]
   140012931:	mov    DWORD PTR [r11+0x20],eax
   140012935:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140012939:	mov    DWORD PTR [r11+0x24],eax
   14001293d:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140012941:	mov    DWORD PTR [r11+0x28],eax
   140012945:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140012949:	mov    DWORD PTR [r11+0x2c],eax
   14001294d:	mov    rcx,QWORD PTR [rbp+0x28]
   140012951:	movsxd rdx,DWORD PTR [rbp+0x10]
   140012955:	add    rdx,0x3
   140012959:	add    rdx,rdx
   14001295c:	mov    eax,DWORD PTR [rcx+rdx*8]
   14001295f:	mov    DWORD PTR [r11+0x30],eax
   140012963:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140012967:	mov    DWORD PTR [r11+0x34],eax
   14001296b:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14001296f:	mov    DWORD PTR [r11+0x38],eax
   140012973:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140012977:	mov    DWORD PTR [r11+0x3c],eax
   14001297b:	movsxd rcx,DWORD PTR [rbp+0x10]
   14001297f:	mov    rax,QWORD PTR [rbp+0x18]
   140012983:	mov    QWORD PTR [rax+rcx*8],r11
   140012987:	jmp    0x140015510
   14001298c:	mov    rdx,QWORD PTR [rbp+0x8]
   140012990:	mov    ecx,0x48
   140012995:	call   0x14000e810
   14001299a:	mov    rdi,rax
   14001299d:	test   rax,rax
   1400129a0:	je     0x1400129c9
   1400129a2:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400129a6:	mov    rdx,QWORD PTR [rbp+0x18]
   1400129aa:	mov    rdx,QWORD PTR [rdx+rcx*8]
   1400129ae:	lea    eax,[rcx+0x2]
   1400129b1:	mov    rcx,rdi
   1400129b4:	movsxd r8,eax
   1400129b7:	shl    r8,0x4
   1400129bb:	add    r8,QWORD PTR [rbp+0x30]
   1400129bf:	call   0x14000d220
   1400129c4:	mov    rdi,rax
   1400129c7:	jmp    0x1400129cc
   1400129c9:	mov    rdi,r12
   1400129cc:	mov    rcx,QWORD PTR [rbp+0x28]
   1400129d0:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400129d4:	inc    rdx
   1400129d7:	add    rdx,rdx
   1400129da:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400129dd:	mov    DWORD PTR [rdi+0x28],eax
   1400129e0:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400129e4:	mov    DWORD PTR [rdi+0x2c],eax
   1400129e7:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400129eb:	mov    DWORD PTR [rdi+0x30],eax
   1400129ee:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400129f2:	mov    DWORD PTR [rdi+0x34],eax
   1400129f5:	mov    rcx,QWORD PTR [rbp+0x28]
   1400129f9:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400129fd:	add    rdx,0x2
   140012a01:	add    rdx,rdx
   140012a04:	mov    eax,DWORD PTR [rcx+rdx*8]
   140012a07:	mov    DWORD PTR [rdi+0x38],eax
   140012a0a:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140012a0e:	mov    DWORD PTR [rdi+0x3c],eax
   140012a11:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140012a15:	mov    DWORD PTR [rdi+0x40],eax
   140012a18:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140012a1c:	mov    DWORD PTR [rdi+0x44],eax
   140012a1f:	jmp    0x14000f9a9
   140012a24:	mov    rdx,QWORD PTR [rbp+0x8]
   140012a28:	mov    ecx,0x50
   140012a2d:	call   0x14000e810
   140012a32:	mov    r11,rax
   140012a35:	test   rax,rax
   140012a38:	je     0x140011e96
   140012a3e:	mov    ecx,DWORD PTR [rbp+0x10]
   140012a41:	mov    rdi,QWORD PTR [rbp+0x18]
   140012a45:	lea    eax,[rcx+0x3]
   140012a48:	movsxd r8,eax
   140012a4b:	lea    eax,[rcx+0x1]
   140012a4e:	mov    rcx,r11
   140012a51:	mov    r8,QWORD PTR [rdi+r8*8]
   140012a55:	movsxd rdx,eax
   140012a58:	mov    rdx,QWORD PTR [rdi+rdx*8]
   140012a5c:	call   0x14000d280
   140012a61:	mov    rdi,rax
   140012a64:	jmp    0x140011e99
   140012a69:	mov    rdx,QWORD PTR [rbp+0x8]
   140012a6d:	mov    ecx,0x28
   140012a72:	call   0x14000e810
   140012a77:	mov    rdi,rax
   140012a7a:	test   rax,rax
   140012a7d:	je     0x14001191b
   140012a83:	mov    rax,QWORD PTR [rbp+0x18]
   140012a87:	movsxd rcx,DWORD PTR [rbp+0x10]
   140012a8b:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140012a90:	lea    rax,[rip+0xe931]        # 0x1400213c8
   140012a97:	mov    QWORD PTR [rdi],rax
   140012a9a:	mov    QWORD PTR [rdi+0x10],rdx
   140012a9e:	mov    DWORD PTR [rdi+0x18],r12d
   140012aa2:	mov    DWORD PTR [rdi+0x1c],r12d
   140012aa6:	mov    DWORD PTR [rdi+0x20],r12d
   140012aaa:	mov    DWORD PTR [rdi+0x24],r12d
   140012aae:	mov    DWORD PTR [rdi+0x8],0x27
   140012ab5:	jmp    0x14001191e
   140012aba:	mov    rdx,QWORD PTR [rbp+0x8]
   140012abe:	mov    ecx,0x40
   140012ac3:	call   0x14000e810
   140012ac8:	mov    r11,rax
   140012acb:	test   rax,rax
   140012ace:	je     0x140012916
   140012ad4:	mov    rax,QWORD PTR [rbp+0x18]
   140012ad8:	movsxd rcx,DWORD PTR [rbp+0x10]
   140012adc:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140012ae1:	mov    rdx,QWORD PTR [rax+rcx*8]
   140012ae5:	lea    rax,[rip+0xe92c]        # 0x140021418
   140012aec:	mov    QWORD PTR [r11],rax
   140012aef:	mov    QWORD PTR [r11+0x10],rdx
   140012af3:	mov    QWORD PTR [r11+0x18],rdi
   140012af7:	mov    DWORD PTR [r11+0x20],r12d
   140012afb:	mov    DWORD PTR [r11+0x24],r12d
   140012aff:	mov    DWORD PTR [r11+0x28],r12d
   140012b03:	mov    DWORD PTR [r11+0x2c],r12d
   140012b07:	mov    DWORD PTR [r11+0x30],r12d
   140012b0b:	mov    DWORD PTR [r11+0x34],r12d
   140012b0f:	mov    DWORD PTR [r11+0x38],r12d
   140012b13:	mov    DWORD PTR [r11+0x3c],r12d
   140012b17:	mov    DWORD PTR [r11+0x8],0x7
   140012b1f:	jmp    0x140012919
   140012b24:	mov    rdx,QWORD PTR [rbp+0x8]
   140012b28:	mov    ecx,0x30
   140012b2d:	call   0x14000e810
   140012b32:	mov    rdi,rax
   140012b35:	test   rax,rax
   140012b38:	je     0x14000f9a6
   140012b3e:	mov    rax,QWORD PTR [rbp+0x18]
   140012b42:	movsxd rcx,DWORD PTR [rbp+0x10]
   140012b46:	mov    rdx,QWORD PTR [rax+rcx*8]
   140012b4a:	lea    rax,[rip+0xe917]        # 0x140021468
   140012b51:	mov    QWORD PTR [rdi],rax
   140012b54:	mov    QWORD PTR [rdi+0x10],rdx
   140012b58:	mov    QWORD PTR [rdi+0x18],rdi
   140012b5c:	mov    DWORD PTR [rdi+0x20],r12d
   140012b60:	mov    DWORD PTR [rdi+0x24],r12d
   140012b64:	mov    DWORD PTR [rdi+0x28],r12d
   140012b68:	mov    DWORD PTR [rdi+0x2c],r12d
   140012b6c:	mov    DWORD PTR [rdi+0x8],0x1
   140012b73:	jmp    0x14000f9a9
   140012b78:	mov    rdx,QWORD PTR [rbp+0x8]
   140012b7c:	mov    ecx,0x30
   140012b81:	call   0x14000e810
   140012b86:	mov    rdi,rax
   140012b89:	test   rax,rax
   140012b8c:	je     0x14000ff3d
   140012b92:	mov    rax,QWORD PTR [rbp+0x18]
   140012b96:	movsxd rcx,DWORD PTR [rbp+0x10]
   140012b9a:	mov    rdx,QWORD PTR [rax+rcx*8+0x10]
   140012b9f:	mov    rcx,QWORD PTR [rax+rcx*8]
   140012ba3:	lea    rax,[rip+0xe8be]        # 0x140021468
   140012baa:	mov    QWORD PTR [rdi],rax
   140012bad:	mov    QWORD PTR [rdi+0x10],rdx
   140012bb1:	mov    DWORD PTR [rdi+0x20],r12d
   140012bb5:	mov    DWORD PTR [rdi+0x24],r12d
   140012bb9:	mov    DWORD PTR [rdi+0x28],r12d
   140012bbd:	mov    DWORD PTR [rdi+0x2c],r12d
   140012bc1:	mov    DWORD PTR [rdi+0x8],0x1
   140012bc8:	mov    rax,QWORD PTR [rcx+0x18]
   140012bcc:	mov    QWORD PTR [rdi+0x18],rax
   140012bd0:	mov    QWORD PTR [rcx+0x18],rdi
   140012bd4:	jmp    0x14000ff40
   140012bd9:	mov    rdx,QWORD PTR [rbp+0x8]
   140012bdd:	mov    ecx,0x28
   140012be2:	call   0x14000e810
   140012be7:	mov    rdi,rax
   140012bea:	test   rax,rax
   140012bed:	je     0x14001242a
   140012bf3:	mov    rax,QWORD PTR [rbp+0x18]
   140012bf7:	movsxd rcx,DWORD PTR [rbp+0x10]
   140012bfb:	mov    rdx,QWORD PTR [rax+rcx*8]
   140012bff:	lea    rax,[rip+0xe8b2]        # 0x1400214b8
   140012c06:	mov    QWORD PTR [rdi],rax
   140012c09:	mov    QWORD PTR [rdi+0x10],rdx
   140012c0d:	mov    DWORD PTR [rdi+0x18],r12d
   140012c11:	mov    DWORD PTR [rdi+0x1c],r12d
   140012c15:	mov    DWORD PTR [rdi+0x20],r12d
   140012c19:	mov    DWORD PTR [rdi+0x24],r12d
   140012c1d:	mov    DWORD PTR [rdi+0x8],0x2f
   140012c24:	jmp    0x14001242d
   140012c29:	mov    rdx,QWORD PTR [rbp+0x8]
   140012c2d:	mov    ecx,0x28
   140012c32:	call   0x14000e810
   140012c37:	mov    rdi,rax
   140012c3a:	test   rax,rax
   140012c3d:	je     0x14001242a
   140012c43:	mov    rax,QWORD PTR [rbp+0x18]
   140012c47:	movsxd rcx,DWORD PTR [rbp+0x10]
   140012c4b:	mov    rdx,QWORD PTR [rax+rcx*8]
   140012c4f:	lea    rax,[rip+0xe8b2]        # 0x140021508
   140012c56:	mov    QWORD PTR [rdi],rax
   140012c59:	mov    QWORD PTR [rdi+0x10],rdx
   140012c5d:	mov    DWORD PTR [rdi+0x18],r12d
   140012c61:	mov    DWORD PTR [rdi+0x1c],r12d
   140012c65:	mov    DWORD PTR [rdi+0x20],r12d
   140012c69:	mov    DWORD PTR [rdi+0x24],r12d
   140012c6d:	mov    DWORD PTR [rdi+0x8],0x2e
   140012c74:	jmp    0x14001242d
   140012c79:	mov    rdx,QWORD PTR [rbp+0x8]
   140012c7d:	mov    ecx,0x28
   140012c82:	call   0x14000e810
   140012c87:	mov    rdi,rax
   140012c8a:	test   rax,rax
   140012c8d:	je     0x14001191b
   140012c93:	mov    rax,QWORD PTR [rbp+0x18]
   140012c97:	movsxd rcx,DWORD PTR [rbp+0x10]
   140012c9b:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140012ca0:	lea    rax,[rip+0xe8b1]        # 0x140021558
   140012ca7:	mov    QWORD PTR [rdi],rax
   140012caa:	mov    QWORD PTR [rdi+0x10],rdx
   140012cae:	mov    DWORD PTR [rdi+0x18],r12d
   140012cb2:	mov    DWORD PTR [rdi+0x1c],r12d
   140012cb6:	mov    DWORD PTR [rdi+0x20],r12d
   140012cba:	mov    DWORD PTR [rdi+0x24],r12d
   140012cbe:	mov    DWORD PTR [rdi+0x8],0x10
   140012cc5:	jmp    0x14001191e
   140012cca:	mov    rdx,QWORD PTR [rbp+0x8]
   140012cce:	mov    ecx,0x28
   140012cd3:	call   0x14000e810
   140012cd8:	mov    rdi,rax
   140012cdb:	test   rax,rax
   140012cde:	je     0x14001191b
   140012ce4:	mov    rax,QWORD PTR [rbp+0x18]
   140012ce8:	movsxd rcx,DWORD PTR [rbp+0x10]
   140012cec:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140012cf1:	lea    rax,[rip+0xe8b0]        # 0x1400215a8
   140012cf8:	mov    QWORD PTR [rdi],rax
   140012cfb:	mov    QWORD PTR [rdi+0x10],rdx
   140012cff:	mov    DWORD PTR [rdi+0x18],r12d
   140012d03:	mov    DWORD PTR [rdi+0x1c],r12d
   140012d07:	mov    DWORD PTR [rdi+0x20],r12d
   140012d0b:	mov    DWORD PTR [rdi+0x24],r12d
   140012d0f:	mov    DWORD PTR [rdi+0x8],0x4b
   140012d16:	jmp    0x14001191e
   140012d1b:	mov    rdx,QWORD PTR [rbp+0x8]
   140012d1f:	mov    ecx,0x28
   140012d24:	call   0x14000e810
   140012d29:	mov    rdi,rax
   140012d2c:	test   rax,rax
   140012d2f:	je     0x14001191b
   140012d35:	mov    rax,QWORD PTR [rbp+0x18]
   140012d39:	movsxd rcx,DWORD PTR [rbp+0x10]
   140012d3d:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140012d42:	lea    rax,[rip+0xe8af]        # 0x1400215f8
   140012d49:	mov    QWORD PTR [rdi],rax
   140012d4c:	mov    QWORD PTR [rdi+0x10],rdx
   140012d50:	mov    DWORD PTR [rdi+0x18],r12d
   140012d54:	mov    DWORD PTR [rdi+0x1c],r12d
   140012d58:	mov    DWORD PTR [rdi+0x20],r12d
   140012d5c:	mov    DWORD PTR [rdi+0x24],r12d
   140012d60:	mov    DWORD PTR [rdi+0x8],0x45
   140012d67:	jmp    0x14001191e
   140012d6c:	mov    rdx,QWORD PTR [rbp+0x8]
   140012d70:	mov    ecx,0x28
   140012d75:	call   0x14000e810
   140012d7a:	mov    rdi,rax
   140012d7d:	test   rax,rax
   140012d80:	je     0x14001191b
   140012d86:	mov    rax,QWORD PTR [rbp+0x18]
   140012d8a:	movsxd rcx,DWORD PTR [rbp+0x10]
   140012d8e:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140012d93:	lea    rax,[rip+0xe8ae]        # 0x140021648
   140012d9a:	mov    QWORD PTR [rdi],rax
   140012d9d:	mov    QWORD PTR [rdi+0x10],rdx
   140012da1:	mov    DWORD PTR [rdi+0x18],r12d
   140012da5:	mov    DWORD PTR [rdi+0x1c],r12d
   140012da9:	mov    DWORD PTR [rdi+0x20],r12d
   140012dad:	mov    DWORD PTR [rdi+0x24],r12d
   140012db1:	mov    DWORD PTR [rdi+0x8],0x31
   140012db8:	jmp    0x14001191e
   140012dbd:	mov    rdx,QWORD PTR [rbp+0x8]
   140012dc1:	mov    ecx,0x28
   140012dc6:	call   0x14000e810
   140012dcb:	mov    rdi,rax
   140012dce:	test   rax,rax
   140012dd1:	je     0x14001191b
   140012dd7:	mov    rax,QWORD PTR [rbp+0x18]
   140012ddb:	movsxd rcx,DWORD PTR [rbp+0x10]
   140012ddf:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140012de4:	lea    rax,[rip+0xe8ad]        # 0x140021698
   140012deb:	mov    QWORD PTR [rdi],rax
   140012dee:	mov    QWORD PTR [rdi+0x10],rdx
   140012df2:	mov    DWORD PTR [rdi+0x18],r12d
   140012df6:	mov    DWORD PTR [rdi+0x1c],r12d
   140012dfa:	mov    DWORD PTR [rdi+0x20],r12d
   140012dfe:	mov    DWORD PTR [rdi+0x24],r12d
   140012e02:	mov    DWORD PTR [rdi+0x8],0x30
   140012e09:	jmp    0x14001191e
   140012e0e:	mov    rdx,QWORD PTR [rbp+0x8]
   140012e12:	mov    ecx,0x28
   140012e17:	call   0x14000e810
   140012e1c:	mov    rdi,rax
   140012e1f:	test   rax,rax
   140012e22:	je     0x14001191b
   140012e28:	mov    rax,QWORD PTR [rbp+0x18]
   140012e2c:	movsxd rcx,DWORD PTR [rbp+0x10]
   140012e30:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140012e35:	lea    rax,[rip+0xe8ac]        # 0x1400216e8
   140012e3c:	mov    QWORD PTR [rdi],rax
   140012e3f:	mov    QWORD PTR [rdi+0x10],rdx
   140012e43:	mov    DWORD PTR [rdi+0x18],r12d
   140012e47:	mov    DWORD PTR [rdi+0x1c],r12d
   140012e4b:	mov    DWORD PTR [rdi+0x20],r12d
   140012e4f:	mov    DWORD PTR [rdi+0x24],r12d
   140012e53:	mov    DWORD PTR [rdi+0x8],0x47
   140012e5a:	jmp    0x14001191e
   140012e5f:	mov    rdx,QWORD PTR [rbp+0x8]
   140012e63:	mov    ecx,0x28
   140012e68:	call   0x14000e810
   140012e6d:	mov    rdi,rax
   140012e70:	test   rax,rax
   140012e73:	je     0x14001191b
   140012e79:	mov    rax,QWORD PTR [rbp+0x18]
   140012e7d:	movsxd rcx,DWORD PTR [rbp+0x10]
   140012e81:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140012e86:	lea    rax,[rip+0xe8ab]        # 0x140021738
   140012e8d:	mov    QWORD PTR [rdi],rax
   140012e90:	mov    QWORD PTR [rdi+0x10],rdx
   140012e94:	mov    DWORD PTR [rdi+0x18],r12d
   140012e98:	mov    DWORD PTR [rdi+0x1c],r12d
   140012e9c:	mov    DWORD PTR [rdi+0x20],r12d
   140012ea0:	mov    DWORD PTR [rdi+0x24],r12d
   140012ea4:	mov    DWORD PTR [rdi+0x8],0x46
   140012eab:	jmp    0x14001191e
   140012eb0:	mov    rdx,QWORD PTR [rbp+0x8]
   140012eb4:	mov    ecx,0x28
   140012eb9:	call   0x14000e810
   140012ebe:	mov    rdi,rax
   140012ec1:	test   rax,rax
   140012ec4:	je     0x14001191b
   140012eca:	mov    rax,QWORD PTR [rbp+0x18]
   140012ece:	movsxd rcx,DWORD PTR [rbp+0x10]
   140012ed2:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140012ed7:	lea    rax,[rip+0xe8aa]        # 0x140021788
   140012ede:	mov    QWORD PTR [rdi],rax
   140012ee1:	mov    QWORD PTR [rdi+0x10],rdx
   140012ee5:	mov    DWORD PTR [rdi+0x18],r12d
   140012ee9:	mov    DWORD PTR [rdi+0x1c],r12d
   140012eed:	mov    DWORD PTR [rdi+0x20],r12d
   140012ef1:	mov    DWORD PTR [rdi+0x24],r12d
   140012ef5:	mov    DWORD PTR [rdi+0x8],0x42
   140012efc:	jmp    0x14001191e
   140012f01:	mov    rdx,QWORD PTR [rbp+0x8]
   140012f05:	mov    ecx,0x28
   140012f0a:	call   0x14000e810
   140012f0f:	mov    rdi,rax
   140012f12:	test   rax,rax
   140012f15:	je     0x14001191b
   140012f1b:	mov    rax,QWORD PTR [rbp+0x18]
   140012f1f:	movsxd rcx,DWORD PTR [rbp+0x10]
   140012f23:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140012f28:	lea    rax,[rip+0xe8a9]        # 0x1400217d8
   140012f2f:	mov    QWORD PTR [rdi],rax
   140012f32:	mov    QWORD PTR [rdi+0x10],rdx
   140012f36:	mov    DWORD PTR [rdi+0x18],r12d
   140012f3a:	mov    DWORD PTR [rdi+0x1c],r12d
   140012f3e:	mov    DWORD PTR [rdi+0x20],r12d
   140012f42:	mov    DWORD PTR [rdi+0x24],r12d
   140012f46:	mov    DWORD PTR [rdi+0x8],0x29
   140012f4d:	jmp    0x14001191e
   140012f52:	mov    rdx,QWORD PTR [rbp+0x8]
   140012f56:	mov    ecx,0x38
   140012f5b:	call   0x14000e810
   140012f60:	mov    r11,rax
   140012f63:	test   rax,rax
   140012f66:	je     0x1400102c7
   140012f6c:	mov    rax,QWORD PTR [rbp+0x18]
   140012f70:	movsxd rcx,DWORD PTR [rbp+0x10]
   140012f74:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140012f79:	mov    rdx,QWORD PTR [rax+rcx*8]
   140012f7d:	lea    rax,[rip+0xe8a4]        # 0x140021828
   140012f84:	mov    QWORD PTR [r11],rax
   140012f87:	mov    QWORD PTR [r11+0x10],rdx
   140012f8b:	mov    DWORD PTR [r11+0x18],0x16
   140012f93:	mov    QWORD PTR [r11+0x20],rdi
   140012f97:	mov    DWORD PTR [r11+0x28],r12d
   140012f9b:	mov    DWORD PTR [r11+0x2c],r12d
   140012f9f:	mov    DWORD PTR [r11+0x30],r12d
   140012fa3:	mov    DWORD PTR [r11+0x34],r12d
   140012fa7:	mov    DWORD PTR [r11+0x8],0x4
   140012faf:	jmp    0x1400102ca
   140012fb4:	mov    rdx,QWORD PTR [rbp+0x8]
   140012fb8:	mov    ecx,0x38
   140012fbd:	call   0x14000e810
   140012fc2:	mov    r11,rax
   140012fc5:	test   rax,rax
   140012fc8:	je     0x1400102c7
   140012fce:	mov    rax,QWORD PTR [rbp+0x18]
   140012fd2:	movsxd rcx,DWORD PTR [rbp+0x10]
   140012fd6:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140012fdb:	mov    rdx,QWORD PTR [rax+rcx*8]
   140012fdf:	lea    rax,[rip+0xe842]        # 0x140021828
   140012fe6:	mov    QWORD PTR [r11],rax
   140012fe9:	mov    QWORD PTR [r11+0x10],rdx
   140012fed:	mov    DWORD PTR [r11+0x18],0x8
   140012ff5:	mov    QWORD PTR [r11+0x20],rdi
   140012ff9:	mov    DWORD PTR [r11+0x28],r12d
   140012ffd:	mov    DWORD PTR [r11+0x2c],r12d
   140013001:	mov    DWORD PTR [r11+0x30],r12d
   140013005:	mov    DWORD PTR [r11+0x34],r12d
   140013009:	mov    DWORD PTR [r11+0x8],0x4
   140013011:	jmp    0x1400102ca
   140013016:	mov    rdx,QWORD PTR [rbp+0x8]
   14001301a:	mov    ecx,0x38
   14001301f:	call   0x14000e810
   140013024:	mov    r11,rax
   140013027:	test   rax,rax
   14001302a:	je     0x1400102c7
   140013030:	mov    rax,QWORD PTR [rbp+0x18]
   140013034:	movsxd rcx,DWORD PTR [rbp+0x10]
   140013038:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   14001303d:	mov    rdx,QWORD PTR [rax+rcx*8]
   140013041:	lea    rax,[rip+0xe7e0]        # 0x140021828
   140013048:	mov    QWORD PTR [r11],rax
   14001304b:	mov    QWORD PTR [r11+0x10],rdx
   14001304f:	mov    DWORD PTR [r11+0x18],0x14
   140013057:	mov    QWORD PTR [r11+0x20],rdi
   14001305b:	mov    DWORD PTR [r11+0x28],r12d
   14001305f:	mov    DWORD PTR [r11+0x2c],r12d
   140013063:	mov    DWORD PTR [r11+0x30],r12d
   140013067:	mov    DWORD PTR [r11+0x34],r12d
   14001306b:	mov    DWORD PTR [r11+0x8],0x4
   140013073:	jmp    0x1400102ca
   140013078:	mov    rdx,QWORD PTR [rbp+0x8]
   14001307c:	mov    ecx,0x38
   140013081:	call   0x14000e810
   140013086:	mov    r11,rax
   140013089:	test   rax,rax
   14001308c:	je     0x1400102c7
   140013092:	mov    rax,QWORD PTR [rbp+0x18]
   140013096:	movsxd rcx,DWORD PTR [rbp+0x10]
   14001309a:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   14001309f:	mov    rdx,QWORD PTR [rax+rcx*8]
   1400130a3:	lea    rax,[rip+0xe77e]        # 0x140021828
   1400130aa:	mov    QWORD PTR [r11],rax
   1400130ad:	mov    QWORD PTR [r11+0x10],rdx
   1400130b1:	mov    DWORD PTR [r11+0x18],r12d
   1400130b5:	mov    QWORD PTR [r11+0x20],rdi
   1400130b9:	mov    DWORD PTR [r11+0x28],r12d
   1400130bd:	mov    DWORD PTR [r11+0x2c],r12d
   1400130c1:	mov    DWORD PTR [r11+0x30],r12d
   1400130c5:	mov    DWORD PTR [r11+0x34],r12d
   1400130c9:	mov    DWORD PTR [r11+0x8],0x4
   1400130d1:	jmp    0x1400102ca
   1400130d6:	mov    rdx,QWORD PTR [rbp+0x8]
   1400130da:	mov    ecx,0x38
   1400130df:	call   0x14000e810
   1400130e4:	mov    r11,rax
   1400130e7:	test   rax,rax
   1400130ea:	je     0x1400102c7
   1400130f0:	mov    rax,QWORD PTR [rbp+0x18]
   1400130f4:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400130f8:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   1400130fd:	mov    rdx,QWORD PTR [rax+rcx*8]
   140013101:	lea    rax,[rip+0xe720]        # 0x140021828
   140013108:	mov    QWORD PTR [r11],rax
   14001310b:	mov    QWORD PTR [r11+0x10],rdx
   14001310f:	mov    DWORD PTR [r11+0x18],0x1f
   140013117:	mov    QWORD PTR [r11+0x20],rdi
   14001311b:	mov    DWORD PTR [r11+0x28],r12d
   14001311f:	mov    DWORD PTR [r11+0x2c],r12d
   140013123:	mov    DWORD PTR [r11+0x30],r12d
   140013127:	mov    DWORD PTR [r11+0x34],r12d
   14001312b:	mov    DWORD PTR [r11+0x8],0x4
   140013133:	jmp    0x1400102ca
   140013138:	mov    rdx,QWORD PTR [rbp+0x8]
   14001313c:	mov    ecx,0x38
   140013141:	call   0x14000e810
   140013146:	mov    r11,rax
   140013149:	test   rax,rax
   14001314c:	je     0x1400102c7
   140013152:	mov    rax,QWORD PTR [rbp+0x18]
   140013156:	movsxd rcx,DWORD PTR [rbp+0x10]
   14001315a:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   14001315f:	mov    rdx,QWORD PTR [rax+rcx*8]
   140013163:	lea    rax,[rip+0xe6be]        # 0x140021828
   14001316a:	mov    QWORD PTR [r11],rax
   14001316d:	mov    QWORD PTR [r11+0x10],rdx
   140013171:	mov    DWORD PTR [r11+0x18],0x11
   140013179:	mov    QWORD PTR [r11+0x20],rdi
   14001317d:	mov    DWORD PTR [r11+0x28],r12d
   140013181:	mov    DWORD PTR [r11+0x2c],r12d
   140013185:	mov    DWORD PTR [r11+0x30],r12d
   140013189:	mov    DWORD PTR [r11+0x34],r12d
   14001318d:	mov    DWORD PTR [r11+0x8],0x4
   140013195:	jmp    0x1400102ca
   14001319a:	mov    rdx,QWORD PTR [rbp+0x8]
   14001319e:	mov    ecx,0x38
   1400131a3:	call   0x14000e810
   1400131a8:	mov    r11,rax
   1400131ab:	test   rax,rax
   1400131ae:	je     0x1400102c7
   1400131b4:	mov    rax,QWORD PTR [rbp+0x18]
   1400131b8:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400131bc:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   1400131c1:	mov    rdx,QWORD PTR [rax+rcx*8]
   1400131c5:	lea    rax,[rip+0xe65c]        # 0x140021828
   1400131cc:	mov    QWORD PTR [r11],rax
   1400131cf:	mov    QWORD PTR [r11+0x10],rdx
   1400131d3:	mov    DWORD PTR [r11+0x18],0x1b
   1400131db:	mov    QWORD PTR [r11+0x20],rdi
   1400131df:	mov    DWORD PTR [r11+0x28],r12d
   1400131e3:	mov    DWORD PTR [r11+0x2c],r12d
   1400131e7:	mov    DWORD PTR [r11+0x30],r12d
   1400131eb:	mov    DWORD PTR [r11+0x34],r12d
   1400131ef:	mov    DWORD PTR [r11+0x8],0x4
   1400131f7:	jmp    0x1400102ca
   1400131fc:	mov    rdx,QWORD PTR [rbp+0x8]
   140013200:	mov    ecx,0x38
   140013205:	call   0x14000e810
   14001320a:	mov    r11,rax
   14001320d:	test   rax,rax
   140013210:	je     0x1400102c7
   140013216:	mov    rax,QWORD PTR [rbp+0x18]
   14001321a:	movsxd rcx,DWORD PTR [rbp+0x10]
   14001321e:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140013223:	mov    rdx,QWORD PTR [rax+rcx*8]
   140013227:	lea    rax,[rip+0xe5fa]        # 0x140021828
   14001322e:	mov    QWORD PTR [r11],rax
   140013231:	mov    QWORD PTR [r11+0x10],rdx
   140013235:	mov    DWORD PTR [r11+0x18],0x20
   14001323d:	mov    QWORD PTR [r11+0x20],rdi
   140013241:	mov    DWORD PTR [r11+0x28],r12d
   140013245:	mov    DWORD PTR [r11+0x2c],r12d
   140013249:	mov    DWORD PTR [r11+0x30],r12d
   14001324d:	mov    DWORD PTR [r11+0x34],r12d
   140013251:	mov    DWORD PTR [r11+0x8],0x4
   140013259:	jmp    0x1400102ca
   14001325e:	mov    rdx,QWORD PTR [rbp+0x8]
   140013262:	mov    ecx,0x38
   140013267:	call   0x14000e810
   14001326c:	mov    r11,rax
   14001326f:	test   rax,rax
   140013272:	je     0x1400102c7
   140013278:	mov    rax,QWORD PTR [rbp+0x18]
   14001327c:	movsxd rcx,DWORD PTR [rbp+0x10]
   140013280:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140013285:	mov    rdx,QWORD PTR [rax+rcx*8]
   140013289:	lea    rax,[rip+0xe598]        # 0x140021828
   140013290:	mov    QWORD PTR [r11],rax
   140013293:	mov    QWORD PTR [r11+0x10],rdx
   140013297:	mov    DWORD PTR [r11+0x18],0x13
   14001329f:	mov    QWORD PTR [r11+0x20],rdi
   1400132a3:	mov    DWORD PTR [r11+0x28],r12d
   1400132a7:	mov    DWORD PTR [r11+0x2c],r12d
   1400132ab:	mov    DWORD PTR [r11+0x30],r12d
   1400132af:	mov    DWORD PTR [r11+0x34],r12d
   1400132b3:	mov    DWORD PTR [r11+0x8],0x4
   1400132bb:	jmp    0x1400102ca
   1400132c0:	mov    rdx,QWORD PTR [rbp+0x8]
   1400132c4:	mov    ecx,0x38
   1400132c9:	call   0x14000e810
   1400132ce:	mov    r11,rax
   1400132d1:	test   rax,rax
   1400132d4:	je     0x1400102c7
   1400132da:	mov    rax,QWORD PTR [rbp+0x18]
   1400132de:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400132e2:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   1400132e7:	mov    rdx,QWORD PTR [rax+rcx*8]
   1400132eb:	lea    rax,[rip+0xe536]        # 0x140021828
   1400132f2:	mov    QWORD PTR [r11],rax
   1400132f5:	mov    QWORD PTR [r11+0x10],rdx
   1400132f9:	mov    DWORD PTR [r11+0x18],0xc
   140013301:	mov    QWORD PTR [r11+0x20],rdi
   140013305:	mov    DWORD PTR [r11+0x28],r12d
   140013309:	mov    DWORD PTR [r11+0x2c],r12d
   14001330d:	mov    DWORD PTR [r11+0x30],r12d
   140013311:	mov    DWORD PTR [r11+0x34],r12d
   140013315:	mov    DWORD PTR [r11+0x8],0x4
   14001331d:	jmp    0x1400102ca
   140013322:	mov    rdx,QWORD PTR [rbp+0x8]
   140013326:	mov    ecx,0x38
   14001332b:	call   0x14000e810
   140013330:	mov    r11,rax
   140013333:	test   rax,rax
   140013336:	je     0x1400102c7
   14001333c:	mov    rax,QWORD PTR [rbp+0x18]
   140013340:	movsxd rcx,DWORD PTR [rbp+0x10]
   140013344:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140013349:	mov    rdx,QWORD PTR [rax+rcx*8]
   14001334d:	lea    rax,[rip+0xe4d4]        # 0x140021828
   140013354:	mov    QWORD PTR [r11],rax
   140013357:	mov    QWORD PTR [r11+0x10],rdx
   14001335b:	mov    DWORD PTR [r11+0x18],0x10
   140013363:	mov    QWORD PTR [r11+0x20],rdi
   140013367:	mov    DWORD PTR [r11+0x28],r12d
   14001336b:	mov    DWORD PTR [r11+0x2c],r12d
   14001336f:	mov    DWORD PTR [r11+0x30],r12d
   140013373:	mov    DWORD PTR [r11+0x34],r12d
   140013377:	mov    DWORD PTR [r11+0x8],0x4
   14001337f:	jmp    0x1400102ca
   140013384:	mov    rdx,QWORD PTR [rbp+0x8]
   140013388:	mov    ecx,0x38
   14001338d:	call   0x14000e810
   140013392:	mov    r11,rax
   140013395:	test   rax,rax
   140013398:	je     0x1400102c7
   14001339e:	mov    rax,QWORD PTR [rbp+0x18]
   1400133a2:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400133a6:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   1400133ab:	mov    rdx,QWORD PTR [rax+rcx*8]
   1400133af:	lea    rax,[rip+0xe472]        # 0x140021828
   1400133b6:	mov    QWORD PTR [r11],rax
   1400133b9:	mov    QWORD PTR [r11+0x10],rdx
   1400133bd:	mov    DWORD PTR [r11+0x18],0xb
   1400133c5:	mov    QWORD PTR [r11+0x20],rdi
   1400133c9:	mov    DWORD PTR [r11+0x28],r12d
   1400133cd:	mov    DWORD PTR [r11+0x2c],r12d
   1400133d1:	mov    DWORD PTR [r11+0x30],r12d
   1400133d5:	mov    DWORD PTR [r11+0x34],r12d
   1400133d9:	mov    DWORD PTR [r11+0x8],0x4
   1400133e1:	jmp    0x1400102ca
   1400133e6:	mov    rdx,QWORD PTR [rbp+0x8]
   1400133ea:	mov    ecx,0x38
   1400133ef:	call   0x14000e810
   1400133f4:	mov    r11,rax
   1400133f7:	test   rax,rax
   1400133fa:	je     0x1400102c7
   140013400:	mov    rax,QWORD PTR [rbp+0x18]
   140013404:	movsxd rcx,DWORD PTR [rbp+0x10]
   140013408:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   14001340d:	mov    rdx,QWORD PTR [rax+rcx*8]
   140013411:	lea    rax,[rip+0xe410]        # 0x140021828
   140013418:	mov    QWORD PTR [r11],rax
   14001341b:	mov    QWORD PTR [r11+0x10],rdx
   14001341f:	mov    DWORD PTR [r11+0x18],0xf
   140013427:	mov    QWORD PTR [r11+0x20],rdi
   14001342b:	mov    DWORD PTR [r11+0x28],r12d
   14001342f:	mov    DWORD PTR [r11+0x2c],r12d
   140013433:	mov    DWORD PTR [r11+0x30],r12d
   140013437:	mov    DWORD PTR [r11+0x34],r12d
   14001343b:	mov    DWORD PTR [r11+0x8],0x4
   140013443:	jmp    0x1400102ca
   140013448:	mov    rdx,QWORD PTR [rbp+0x8]
   14001344c:	mov    ecx,0x38
   140013451:	call   0x14000e810
   140013456:	mov    r11,rax
   140013459:	test   rax,rax
   14001345c:	je     0x1400102c7
   140013462:	mov    rax,QWORD PTR [rbp+0x18]
   140013466:	movsxd rcx,DWORD PTR [rbp+0x10]
   14001346a:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   14001346f:	mov    rdx,QWORD PTR [rax+rcx*8]
   140013473:	lea    rax,[rip+0xe3ae]        # 0x140021828
   14001347a:	mov    QWORD PTR [r11],rax
   14001347d:	mov    QWORD PTR [r11+0x10],rdx
   140013481:	mov    DWORD PTR [r11+0x18],0xd
   140013489:	mov    QWORD PTR [r11+0x20],rdi
   14001348d:	mov    DWORD PTR [r11+0x28],r12d
   140013491:	mov    DWORD PTR [r11+0x2c],r12d
   140013495:	mov    DWORD PTR [r11+0x30],r12d
   140013499:	mov    DWORD PTR [r11+0x34],r12d
   14001349d:	mov    DWORD PTR [r11+0x8],0x4
   1400134a5:	jmp    0x1400102ca
   1400134aa:	mov    rdx,QWORD PTR [rbp+0x8]
   1400134ae:	mov    ecx,0x38
   1400134b3:	call   0x14000e810
   1400134b8:	mov    r11,rax
   1400134bb:	test   rax,rax
   1400134be:	je     0x1400102c7
   1400134c4:	mov    rax,QWORD PTR [rbp+0x18]
   1400134c8:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400134cc:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   1400134d1:	mov    rdx,QWORD PTR [rax+rcx*8]
   1400134d5:	lea    rax,[rip+0xe34c]        # 0x140021828
   1400134dc:	mov    QWORD PTR [r11],rax
   1400134df:	mov    QWORD PTR [r11+0x10],rdx
   1400134e3:	mov    DWORD PTR [r11+0x18],0xa
   1400134eb:	mov    QWORD PTR [r11+0x20],rdi
   1400134ef:	mov    DWORD PTR [r11+0x28],r12d
   1400134f3:	mov    DWORD PTR [r11+0x2c],r12d
   1400134f7:	mov    DWORD PTR [r11+0x30],r12d
   1400134fb:	mov    DWORD PTR [r11+0x34],r12d
   1400134ff:	mov    DWORD PTR [r11+0x8],0x4
   140013507:	jmp    0x1400102ca
   14001350c:	mov    rdx,QWORD PTR [rbp+0x8]
   140013510:	mov    ecx,0x38
   140013515:	call   0x14000e810
   14001351a:	mov    r11,rax
   14001351d:	test   rax,rax
   140013520:	je     0x1400102c7
   140013526:	mov    rax,QWORD PTR [rbp+0x18]
   14001352a:	movsxd rcx,DWORD PTR [rbp+0x10]
   14001352e:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140013533:	mov    rdx,QWORD PTR [rax+rcx*8]
   140013537:	lea    rax,[rip+0xe2ea]        # 0x140021828
   14001353e:	mov    QWORD PTR [r11],rax
   140013541:	mov    QWORD PTR [r11+0x10],rdx
   140013545:	mov    DWORD PTR [r11+0x18],0x18
   14001354d:	mov    QWORD PTR [r11+0x20],rdi
   140013551:	mov    DWORD PTR [r11+0x28],r12d
   140013555:	mov    DWORD PTR [r11+0x2c],r12d
   140013559:	mov    DWORD PTR [r11+0x30],r12d
   14001355d:	mov    DWORD PTR [r11+0x34],r12d
   140013561:	mov    DWORD PTR [r11+0x8],0x4
   140013569:	jmp    0x1400102ca
   14001356e:	mov    rdx,QWORD PTR [rbp+0x8]
   140013572:	mov    ecx,0x38
   140013577:	call   0x14000e810
   14001357c:	mov    r11,rax
   14001357f:	test   rax,rax
   140013582:	je     0x1400102c7
   140013588:	mov    rax,QWORD PTR [rbp+0x18]
   14001358c:	movsxd rcx,DWORD PTR [rbp+0x10]
   140013590:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140013595:	mov    rdx,QWORD PTR [rax+rcx*8]
   140013599:	lea    rax,[rip+0xe288]        # 0x140021828
   1400135a0:	mov    QWORD PTR [r11],rax
   1400135a3:	mov    QWORD PTR [r11+0x10],rdx
   1400135a7:	mov    DWORD PTR [r11+0x18],0x1d
   1400135af:	mov    QWORD PTR [r11+0x20],rdi
   1400135b3:	mov    DWORD PTR [r11+0x28],r12d
   1400135b7:	mov    DWORD PTR [r11+0x2c],r12d
   1400135bb:	mov    DWORD PTR [r11+0x30],r12d
   1400135bf:	mov    DWORD PTR [r11+0x34],r12d
   1400135c3:	mov    DWORD PTR [r11+0x8],0x4
   1400135cb:	jmp    0x1400102ca
   1400135d0:	mov    rdx,QWORD PTR [rbp+0x8]
   1400135d4:	mov    ecx,0x38
   1400135d9:	call   0x14000e810
   1400135de:	mov    r11,rax
   1400135e1:	test   rax,rax
   1400135e4:	je     0x1400102c7
   1400135ea:	mov    rax,QWORD PTR [rbp+0x18]
   1400135ee:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400135f2:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   1400135f7:	mov    rdx,QWORD PTR [rax+rcx*8]
   1400135fb:	lea    rax,[rip+0xe226]        # 0x140021828
   140013602:	mov    QWORD PTR [r11],rax
   140013605:	mov    QWORD PTR [r11+0x10],rdx
   140013609:	mov    DWORD PTR [r11+0x18],0x1e
   140013611:	mov    QWORD PTR [r11+0x20],rdi
   140013615:	mov    DWORD PTR [r11+0x28],r12d
   140013619:	mov    DWORD PTR [r11+0x2c],r12d
   14001361d:	mov    DWORD PTR [r11+0x30],r12d
   140013621:	mov    DWORD PTR [r11+0x34],r12d
   140013625:	mov    DWORD PTR [r11+0x8],0x4
   14001362d:	jmp    0x1400102ca
   140013632:	mov    rdx,QWORD PTR [rbp+0x8]
   140013636:	mov    ecx,0x38
   14001363b:	call   0x14000e810
   140013640:	mov    r11,rax
   140013643:	test   rax,rax
   140013646:	je     0x1400102c7
   14001364c:	mov    rax,QWORD PTR [rbp+0x18]
   140013650:	movsxd rcx,DWORD PTR [rbp+0x10]
   140013654:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140013659:	mov    rdx,QWORD PTR [rax+rcx*8]
   14001365d:	lea    rax,[rip+0xe1c4]        # 0x140021828
   140013664:	mov    QWORD PTR [r11],rax
   140013667:	mov    QWORD PTR [r11+0x10],rdx
   14001366b:	mov    DWORD PTR [r11+0x18],0x4
   140013673:	mov    QWORD PTR [r11+0x20],rdi
   140013677:	mov    DWORD PTR [r11+0x28],r12d
   14001367b:	mov    DWORD PTR [r11+0x2c],r12d
   14001367f:	mov    DWORD PTR [r11+0x30],r12d
   140013683:	mov    DWORD PTR [r11+0x34],r12d
   140013687:	mov    DWORD PTR [r11+0x8],0x4
   14001368f:	jmp    0x1400102ca
   140013694:	mov    rdx,QWORD PTR [rbp+0x8]
   140013698:	mov    ecx,0x38
   14001369d:	call   0x14000e810
   1400136a2:	mov    r11,rax
   1400136a5:	test   rax,rax
   1400136a8:	je     0x1400102c7
   1400136ae:	mov    rax,QWORD PTR [rbp+0x18]
   1400136b2:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400136b6:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   1400136bb:	mov    rdx,QWORD PTR [rax+rcx*8]
   1400136bf:	lea    rax,[rip+0xe162]        # 0x140021828
   1400136c6:	mov    QWORD PTR [r11],rax
   1400136c9:	mov    QWORD PTR [r11+0x10],rdx
   1400136cd:	mov    DWORD PTR [r11+0x18],0x6
   1400136d5:	mov    QWORD PTR [r11+0x20],rdi
   1400136d9:	mov    DWORD PTR [r11+0x28],r12d
   1400136dd:	mov    DWORD PTR [r11+0x2c],r12d
   1400136e1:	mov    DWORD PTR [r11+0x30],r12d
   1400136e5:	mov    DWORD PTR [r11+0x34],r12d
   1400136e9:	mov    DWORD PTR [r11+0x8],0x4
   1400136f1:	jmp    0x1400102ca
   1400136f6:	mov    rdx,QWORD PTR [rbp+0x8]
   1400136fa:	mov    ecx,0x38
   1400136ff:	call   0x14000e810
   140013704:	mov    r11,rax
   140013707:	test   rax,rax
   14001370a:	je     0x1400102c7
   140013710:	mov    rax,QWORD PTR [rbp+0x18]
   140013714:	movsxd rcx,DWORD PTR [rbp+0x10]
   140013718:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   14001371d:	mov    rdx,QWORD PTR [rax+rcx*8]
   140013721:	lea    rax,[rip+0xe100]        # 0x140021828
   140013728:	mov    QWORD PTR [r11],rax
   14001372b:	mov    QWORD PTR [r11+0x10],rdx
   14001372f:	mov    DWORD PTR [r11+0x18],0x5
   140013737:	mov    QWORD PTR [r11+0x20],rdi
   14001373b:	mov    DWORD PTR [r11+0x28],r12d
   14001373f:	mov    DWORD PTR [r11+0x2c],r12d
   140013743:	mov    DWORD PTR [r11+0x30],r12d
   140013747:	mov    DWORD PTR [r11+0x34],r12d
   14001374b:	mov    DWORD PTR [r11+0x8],0x4
   140013753:	jmp    0x1400102ca
   140013758:	mov    rdx,QWORD PTR [rbp+0x8]
   14001375c:	mov    ecx,0x38
   140013761:	call   0x14000e810
   140013766:	mov    r11,rax
   140013769:	test   rax,rax
   14001376c:	je     0x1400102c7
   140013772:	mov    rax,QWORD PTR [rbp+0x18]
   140013776:	movsxd rcx,DWORD PTR [rbp+0x10]
   14001377a:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   14001377f:	mov    rdx,QWORD PTR [rax+rcx*8]
   140013783:	lea    rax,[rip+0xe09e]        # 0x140021828
   14001378a:	mov    QWORD PTR [r11],rax
   14001378d:	mov    QWORD PTR [r11+0x10],rdx
   140013791:	mov    DWORD PTR [r11+0x18],0x1
   140013799:	mov    QWORD PTR [r11+0x20],rdi
   14001379d:	mov    DWORD PTR [r11+0x28],r12d
   1400137a1:	mov    DWORD PTR [r11+0x2c],r12d
   1400137a5:	mov    DWORD PTR [r11+0x30],r12d
   1400137a9:	mov    DWORD PTR [r11+0x34],r12d
   1400137ad:	mov    DWORD PTR [r11+0x8],0x4
   1400137b5:	jmp    0x1400102ca
   1400137ba:	mov    rdx,QWORD PTR [rbp+0x8]
   1400137be:	mov    ecx,0x38
   1400137c3:	call   0x14000e810
   1400137c8:	mov    r11,rax
   1400137cb:	test   rax,rax
   1400137ce:	je     0x1400102c7
   1400137d4:	mov    rax,QWORD PTR [rbp+0x18]
   1400137d8:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400137dc:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   1400137e1:	mov    rdx,QWORD PTR [rax+rcx*8]
   1400137e5:	lea    rax,[rip+0xe03c]        # 0x140021828
   1400137ec:	mov    QWORD PTR [r11],rax
   1400137ef:	mov    QWORD PTR [r11+0x10],rdx
   1400137f3:	mov    DWORD PTR [r11+0x18],0x19
   1400137fb:	mov    QWORD PTR [r11+0x20],rdi
   1400137ff:	mov    DWORD PTR [r11+0x28],r12d
   140013803:	mov    DWORD PTR [r11+0x2c],r12d
   140013807:	mov    DWORD PTR [r11+0x30],r12d
   14001380b:	mov    DWORD PTR [r11+0x34],r12d
   14001380f:	mov    DWORD PTR [r11+0x8],0x4
   140013817:	jmp    0x1400102ca
   14001381c:	mov    rdx,QWORD PTR [rbp+0x8]
   140013820:	mov    ecx,0x48
   140013825:	call   0x14000e810
   14001382a:	mov    r11,rax
   14001382d:	test   rax,rax
   140013830:	je     0x14001385f
   140013832:	movsxd rcx,DWORD PTR [rbp+0x10]
   140013836:	mov    rdi,QWORD PTR [rbp+0x18]
   14001383a:	mov    rdx,QWORD PTR [rdi+rcx*8]
   14001383e:	lea    eax,[rcx+0x4]
   140013841:	movsxd r9,eax
   140013844:	lea    eax,[rcx+0x2]
   140013847:	mov    rcx,r11
   14001384a:	mov    r9,QWORD PTR [rdi+r9*8]
   14001384e:	movsxd r8,eax
   140013851:	mov    r8,QWORD PTR [rdi+r8*8]
   140013855:	call   0x14000d350
   14001385a:	mov    rdi,rax
   14001385d:	jmp    0x140013862
   14001385f:	mov    rdi,r12
   140013862:	mov    rcx,QWORD PTR [rbp+0x28]
   140013866:	movsxd rdx,DWORD PTR [rbp+0x10]
   14001386a:	inc    rdx
   14001386d:	add    rdx,rdx
   140013870:	mov    eax,DWORD PTR [rcx+rdx*8]
   140013873:	mov    DWORD PTR [rdi+0x28],eax
   140013876:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14001387a:	mov    DWORD PTR [rdi+0x2c],eax
   14001387d:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140013881:	mov    DWORD PTR [rdi+0x30],eax
   140013884:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140013888:	mov    DWORD PTR [rdi+0x34],eax
   14001388b:	mov    rcx,QWORD PTR [rbp+0x28]
   14001388f:	movsxd rdx,DWORD PTR [rbp+0x10]
   140013893:	add    rdx,0x3
   140013897:	add    rdx,rdx
   14001389a:	mov    eax,DWORD PTR [rcx+rdx*8]
   14001389d:	mov    DWORD PTR [rdi+0x38],eax
   1400138a0:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400138a4:	mov    DWORD PTR [rdi+0x3c],eax
   1400138a7:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400138ab:	mov    DWORD PTR [rdi+0x40],eax
   1400138ae:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400138b2:	mov    DWORD PTR [rdi+0x44],eax
   1400138b5:	jmp    0x14000f9a9
   1400138ba:	mov    rdx,QWORD PTR [rbp+0x8]
   1400138be:	mov    ecx,0x38
   1400138c3:	call   0x14000e810
   1400138c8:	mov    r11,rax
   1400138cb:	test   rax,rax
   1400138ce:	je     0x1400102c7
   1400138d4:	mov    rax,QWORD PTR [rbp+0x18]
   1400138d8:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400138dc:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   1400138e1:	mov    edx,DWORD PTR [rax+rcx*8+0x8]
   1400138e5:	mov    rcx,QWORD PTR [rax+rcx*8]
   1400138e9:	lea    rax,[rip+0xdf38]        # 0x140021828
   1400138f0:	mov    QWORD PTR [r11],rax
   1400138f3:	mov    QWORD PTR [r11+0x10],rcx
   1400138f7:	mov    DWORD PTR [r11+0x18],edx
   1400138fb:	mov    QWORD PTR [r11+0x20],rdi
   1400138ff:	mov    DWORD PTR [r11+0x28],r12d
   140013903:	mov    DWORD PTR [r11+0x2c],r12d
   140013907:	mov    DWORD PTR [r11+0x30],r12d
   14001390b:	mov    DWORD PTR [r11+0x34],r12d
   14001390f:	mov    DWORD PTR [r11+0x8],0x4
   140013917:	jmp    0x1400102ca
   14001391c:	mov    rax,QWORD PTR [rbp+0x18]
   140013920:	mov    DWORD PTR [rax+rdx*8],0x3
   140013927:	jmp    0x140015510
   14001392c:	mov    rax,QWORD PTR [rbp+0x18]
   140013930:	mov    DWORD PTR [rax+rdx*8],0x17
   140013937:	jmp    0x140015510
   14001393c:	mov    rax,QWORD PTR [rbp+0x18]
   140013940:	mov    DWORD PTR [rax+rdx*8],0x9
   140013947:	jmp    0x140015510
   14001394c:	mov    rax,QWORD PTR [rbp+0x18]
   140013950:	mov    DWORD PTR [rax+rdx*8],0x15
   140013957:	jmp    0x140015510
   14001395c:	mov    rax,QWORD PTR [rbp+0x18]
   140013960:	mov    DWORD PTR [rax+rdx*8],0xe
   140013967:	jmp    0x140015510
   14001396c:	mov    rax,QWORD PTR [rbp+0x18]
   140013970:	mov    DWORD PTR [rax+rdx*8],0x7
   140013977:	jmp    0x140015510
   14001397c:	mov    rax,QWORD PTR [rbp+0x18]
   140013980:	mov    DWORD PTR [rax+rdx*8],0x12
   140013987:	jmp    0x140015510
   14001398c:	mov    rax,QWORD PTR [rbp+0x18]
   140013990:	mov    DWORD PTR [rax+rdx*8],0x1c
   140013997:	jmp    0x140015510
   14001399c:	mov    rax,QWORD PTR [rbp+0x18]
   1400139a0:	mov    DWORD PTR [rax+rdx*8],0x21
   1400139a7:	jmp    0x140015510
   1400139ac:	mov    rax,QWORD PTR [rbp+0x18]
   1400139b0:	mov    DWORD PTR [rax+rdx*8],0x2
   1400139b7:	jmp    0x140015510
   1400139bc:	mov    rax,QWORD PTR [rbp+0x18]
   1400139c0:	mov    DWORD PTR [rax+rdx*8],0x22
   1400139c7:	jmp    0x140015510
   1400139cc:	mov    rax,QWORD PTR [rbp+0x18]
   1400139d0:	mov    DWORD PTR [rax+rdx*8],0x1a
   1400139d7:	jmp    0x140015510
   1400139dc:	mov    rdx,QWORD PTR [rbp+0x8]
   1400139e0:	mov    ecx,0x30
   1400139e5:	call   0x14000e810
   1400139ea:	mov    r11,rax
   1400139ed:	test   rax,rax
   1400139f0:	je     0x14001040f
   1400139f6:	mov    rax,QWORD PTR [rbp+0x18]
   1400139fa:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400139fe:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140013a03:	mov    rdx,QWORD PTR [rax+rcx*8]
   140013a07:	lea    rax,[rip+0xdeba]        # 0x1400218c8
   140013a0e:	mov    QWORD PTR [r11],rax
   140013a11:	mov    QWORD PTR [r11+0x10],rdx
   140013a15:	mov    QWORD PTR [r11+0x18],rdi
   140013a19:	mov    DWORD PTR [r11+0x20],r12d
   140013a1d:	mov    DWORD PTR [r11+0x24],r12d
   140013a21:	mov    DWORD PTR [r11+0x28],r12d
   140013a25:	mov    DWORD PTR [r11+0x2c],r12d
   140013a29:	mov    DWORD PTR [r11+0x8],0x15
   140013a31:	jmp    0x140010412
   140013a36:	mov    rdx,QWORD PTR [rbp+0x8]
   140013a3a:	mov    ecx,0x38
   140013a3f:	call   0x14000e810
   140013a44:	mov    rdi,rax
   140013a47:	test   rax,rax
   140013a4a:	je     0x140011fa2
   140013a50:	mov    rax,QWORD PTR [rbp+0x18]
   140013a54:	movsxd rcx,DWORD PTR [rbp+0x10]
   140013a58:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140013a5d:	lea    rax,[rip+0xdeb4]        # 0x140021918
   140013a64:	mov    QWORD PTR [rdi],rax
   140013a67:	mov    QWORD PTR [rdi+0x10],rdx
   140013a6b:	mov    DWORD PTR [rdi+0x18],r12d
   140013a6f:	mov    DWORD PTR [rdi+0x1c],r12d
   140013a73:	mov    DWORD PTR [rdi+0x20],r12d
   140013a77:	mov    DWORD PTR [rdi+0x24],r12d
   140013a7b:	mov    DWORD PTR [rdi+0x28],r12d
   140013a7f:	mov    DWORD PTR [rdi+0x2c],r12d
   140013a83:	mov    DWORD PTR [rdi+0x30],r12d
   140013a87:	mov    DWORD PTR [rdi+0x34],r12d
   140013a8b:	mov    DWORD PTR [rdi+0x8],0x5
   140013a92:	jmp    0x140011fa5
   140013a97:	mov    rdx,QWORD PTR [rbp+0x8]
   140013a9b:	mov    ecx,0x20
   140013aa0:	call   0x14000e810
   140013aa5:	mov    rdi,rax
   140013aa8:	test   rax,rax
   140013aab:	je     0x14000f9a6
   140013ab1:	mov    rax,QWORD PTR [rbp+0x18]
   140013ab5:	movsxd rcx,DWORD PTR [rbp+0x10]
   140013ab9:	mov    rdx,QWORD PTR [rax+rcx*8]
   140013abd:	lea    rax,[rip+0xdea4]        # 0x140021968
   140013ac4:	mov    QWORD PTR [rdi],rax
   140013ac7:	mov    QWORD PTR [rdi+0x10],rdx
   140013acb:	mov    QWORD PTR [rdi+0x18],rdi
   140013acf:	mov    DWORD PTR [rdi+0x8],0x3b
   140013ad6:	jmp    0x14000f9a9
   140013adb:	mov    rdx,QWORD PTR [rbp+0x8]
   140013adf:	mov    ecx,0x20
   140013ae4:	call   0x14000e810
   140013ae9:	mov    rdi,rax
   140013aec:	test   rax,rax
   140013aef:	je     0x14000f9a6
   140013af5:	mov    rax,QWORD PTR [rbp+0x18]
   140013af9:	movsxd rcx,DWORD PTR [rbp+0x10]
   140013afd:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140013b02:	mov    rcx,QWORD PTR [rax+rcx*8]
   140013b06:	lea    rax,[rip+0xde5b]        # 0x140021968
   140013b0d:	mov    QWORD PTR [rdi],rax
   140013b10:	mov    QWORD PTR [rdi+0x10],rdx
   140013b14:	mov    DWORD PTR [rdi+0x8],0x3b
   140013b1b:	mov    rax,QWORD PTR [rcx+0x18]
   140013b1f:	mov    QWORD PTR [rdi+0x18],rax
   140013b23:	mov    QWORD PTR [rcx+0x18],rdi
   140013b27:	jmp    0x14000f9a9
   140013b2c:	mov    rdx,QWORD PTR [rbp+0x8]
   140013b30:	mov    ecx,0x38
   140013b35:	call   0x14000e810
   140013b3a:	mov    rbx,rax
   140013b3d:	test   rax,rax
   140013b40:	je     0x140013b99
   140013b42:	movsxd rax,DWORD PTR [rbp+0x10]
   140013b46:	mov    rdi,QWORD PTR [rbp+0x18]
   140013b4a:	mov    rdx,rax
   140013b4d:	inc    eax
   140013b4f:	cmp    DWORD PTR [rdi+rdx*8],0x54
   140013b53:	movsxd rcx,eax
   140013b56:	mov    rcx,QWORD PTR [rdi+rcx*8]
   140013b5a:	sete   dl
   140013b5d:	call   0x14000d470
   140013b62:	lea    rcx,[rip+0xde4f]        # 0x1400219b8
   140013b69:	mov    QWORD PTR [rbx],rcx
   140013b6c:	mov    QWORD PTR [rbx+0x10],rax
   140013b70:	mov    DWORD PTR [rbx+0x18],r12d
   140013b74:	mov    DWORD PTR [rbx+0x1c],r12d
   140013b78:	mov    DWORD PTR [rbx+0x20],r12d
   140013b7c:	mov    DWORD PTR [rbx+0x24],r12d
   140013b80:	mov    DWORD PTR [rbx+0x28],r12d
   140013b84:	mov    DWORD PTR [rbx+0x2c],r12d
   140013b88:	mov    DWORD PTR [rbx+0x30],r12d
   140013b8c:	mov    DWORD PTR [rbx+0x34],r12d
   140013b90:	mov    DWORD PTR [rbx+0x8],0x4a
   140013b97:	jmp    0x140013b9c
   140013b99:	mov    rbx,r12
   140013b9c:	mov    rcx,QWORD PTR [rbp+0x28]
   140013ba0:	movsxd rdx,DWORD PTR [rbp+0x10]
   140013ba4:	lea    r9,[rip+0xfffffffffffec455]        # 0x140000000
   140013bab:	add    rdx,rdx
   140013bae:	mov    eax,DWORD PTR [rcx+rdx*8]
   140013bb1:	mov    DWORD PTR [rbx+0x18],eax
   140013bb4:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140013bb8:	mov    DWORD PTR [rbx+0x1c],eax
   140013bbb:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140013bbf:	mov    DWORD PTR [rbx+0x20],eax
   140013bc2:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140013bc6:	mov    DWORD PTR [rbx+0x24],eax
   140013bc9:	mov    rcx,QWORD PTR [rbp+0x28]
   140013bcd:	movsxd rdx,DWORD PTR [rbp+0x10]
   140013bd1:	add    rdx,0x2
   140013bd5:	add    rdx,rdx
   140013bd8:	mov    eax,DWORD PTR [rcx+rdx*8]
   140013bdb:	mov    DWORD PTR [rbx+0x28],eax
   140013bde:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140013be2:	mov    DWORD PTR [rbx+0x2c],eax
   140013be5:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140013be9:	mov    DWORD PTR [rbx+0x30],eax
   140013bec:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140013bf0:	mov    DWORD PTR [rbx+0x34],eax
   140013bf3:	movsxd rcx,DWORD PTR [rbp+0x10]
   140013bf7:	mov    rax,QWORD PTR [rbp+0x18]
   140013bfb:	mov    QWORD PTR [rax+rcx*8],rbx
   140013bff:	jmp    0x140015510
   140013c04:	mov    rax,QWORD PTR [rbp+0x18]
   140013c08:	mov    DWORD PTR [rax+rdx*8],0x54
   140013c0f:	jmp    0x140015510
   140013c14:	mov    rax,QWORD PTR [rbp+0x18]
   140013c18:	mov    DWORD PTR [rax+rdx*8],0x4b
   140013c1f:	jmp    0x140015510
   140013c24:	mov    rdx,QWORD PTR [rbp+0x8]
   140013c28:	mov    ecx,0x30
   140013c2d:	call   0x14000e810
   140013c32:	mov    rdi,rax
   140013c35:	test   rax,rax
   140013c38:	je     0x14000f9a6
   140013c3e:	mov    rax,QWORD PTR [rbp+0x18]
   140013c42:	movsxd rcx,DWORD PTR [rbp+0x10]
   140013c46:	mov    rdx,QWORD PTR [rax+rcx*8]
   140013c4a:	lea    rax,[rip+0xde07]        # 0x140021a58
   140013c51:	mov    QWORD PTR [rdi],rax
   140013c54:	mov    QWORD PTR [rdi+0x10],rdx
   140013c58:	mov    QWORD PTR [rdi+0x18],rdi
   140013c5c:	mov    DWORD PTR [rdi+0x20],r12d
   140013c60:	mov    DWORD PTR [rdi+0x24],r12d
   140013c64:	mov    DWORD PTR [rdi+0x28],r12d
   140013c68:	mov    DWORD PTR [rdi+0x2c],r12d
   140013c6c:	mov    DWORD PTR [rdi+0x8],0x49
   140013c73:	jmp    0x14000f9a9
   140013c78:	mov    rdx,QWORD PTR [rbp+0x8]
   140013c7c:	mov    ecx,0x30
   140013c81:	call   0x14000e810
   140013c86:	mov    rdi,rax
   140013c89:	test   rax,rax
   140013c8c:	je     0x14000ff3d
   140013c92:	mov    rax,QWORD PTR [rbp+0x18]
   140013c96:	movsxd rcx,DWORD PTR [rbp+0x10]
   140013c9a:	mov    rdx,QWORD PTR [rax+rcx*8+0x10]
   140013c9f:	mov    rcx,QWORD PTR [rax+rcx*8]
   140013ca3:	lea    rax,[rip+0xddae]        # 0x140021a58
   140013caa:	mov    QWORD PTR [rdi],rax
   140013cad:	mov    QWORD PTR [rdi+0x10],rdx
   140013cb1:	mov    DWORD PTR [rdi+0x20],r12d
   140013cb5:	mov    DWORD PTR [rdi+0x24],r12d
   140013cb9:	mov    DWORD PTR [rdi+0x28],r12d
   140013cbd:	mov    DWORD PTR [rdi+0x2c],r12d
   140013cc1:	mov    DWORD PTR [rdi+0x8],0x49
   140013cc8:	mov    rax,QWORD PTR [rcx+0x18]
   140013ccc:	mov    QWORD PTR [rdi+0x18],rax
   140013cd0:	mov    QWORD PTR [rcx+0x18],rdi
   140013cd4:	jmp    0x14000ff40
   140013cd9:	mov    rdx,QWORD PTR [rbp+0x8]
   140013cdd:	mov    ecx,0x30
   140013ce2:	call   0x14000e810
   140013ce7:	mov    rdi,rax
   140013cea:	test   rax,rax
   140013ced:	je     0x14000f9a6
   140013cf3:	mov    rax,QWORD PTR [rbp+0x18]
   140013cf7:	movsxd rcx,DWORD PTR [rbp+0x10]
   140013cfb:	mov    rdx,QWORD PTR [rax+rcx*8+0x10]
   140013d00:	mov    rcx,QWORD PTR [rax+rcx*8]
   140013d04:	lea    rax,[rip+0xdd4d]        # 0x140021a58
   140013d0b:	mov    QWORD PTR [rdi],rax
   140013d0e:	mov    QWORD PTR [rdi+0x10],rdx
   140013d12:	mov    DWORD PTR [rdi+0x20],r12d
   140013d16:	mov    DWORD PTR [rdi+0x24],r12d
   140013d1a:	mov    DWORD PTR [rdi+0x28],r12d
   140013d1e:	mov    DWORD PTR [rdi+0x2c],r12d
   140013d22:	mov    DWORD PTR [rdi+0x8],0x49
   140013d29:	mov    rax,QWORD PTR [rcx+0x18]
   140013d2d:	mov    QWORD PTR [rdi+0x18],rax
   140013d31:	mov    QWORD PTR [rcx+0x18],rdi
   140013d35:	jmp    0x14000f9a9
   140013d3a:	mov    rdx,QWORD PTR [rbp+0x8]
   140013d3e:	mov    ecx,0x40
   140013d43:	call   0x14000e810
   140013d48:	mov    rdi,rax
   140013d4b:	test   rax,rax
   140013d4e:	je     0x140013d79
   140013d50:	movsxd rcx,DWORD PTR [rbp+0x10]
   140013d54:	mov    r8,QWORD PTR [rbp+0x18]
   140013d58:	lea    eax,[rcx+0x1]
   140013d5b:	mov    rdx,rcx
   140013d5e:	mov    rcx,rdi
   140013d61:	cdqe   
   140013d63:	shl    rdx,0x4
   140013d67:	mov    r8,QWORD PTR [r8+rax*8]
   140013d6b:	add    rdx,QWORD PTR [rbp+0x30]
   140013d6f:	call   0x14000d3b0
   140013d74:	mov    rdi,rax
   140013d77:	jmp    0x140013d7c
   140013d79:	mov    rdi,r12
   140013d7c:	mov    rcx,QWORD PTR [rbp+0x28]
   140013d80:	movsxd rdx,DWORD PTR [rbp+0x10]
   140013d84:	add    rdx,rdx
   140013d87:	mov    eax,DWORD PTR [rcx+rdx*8]
   140013d8a:	mov    DWORD PTR [rdi+0x2c],eax
   140013d8d:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140013d91:	mov    DWORD PTR [rdi+0x30],eax
   140013d94:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140013d98:	mov    DWORD PTR [rdi+0x34],eax
   140013d9b:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140013d9f:	mov    DWORD PTR [rdi+0x38],eax
   140013da2:	jmp    0x14000f9a9
   140013da7:	mov    rcx,QWORD PTR [rbp+0x18]
   140013dab:	mov    rax,QWORD PTR [rcx+rdx*8+0x8]
   140013db0:	mov    QWORD PTR [rcx+rdx*8],rax
   140013db4:	jmp    0x140015510
   140013db9:	mov    rdx,QWORD PTR [rbp+0x8]
   140013dbd:	mov    ecx,0x20
   140013dc2:	call   0x14000e810
   140013dc7:	mov    rdi,rax
   140013dca:	test   rax,rax
   140013dcd:	je     0x140011761
   140013dd3:	lea    rax,[rip+0xdcce]        # 0x140021aa8
   140013dda:	mov    QWORD PTR [rdi],rax
   140013ddd:	mov    DWORD PTR [rdi+0x10],r12d
   140013de1:	mov    DWORD PTR [rdi+0x14],r12d
   140013de5:	mov    DWORD PTR [rdi+0x18],r12d
   140013de9:	mov    DWORD PTR [rdi+0x1c],r12d
   140013ded:	mov    DWORD PTR [rdi+0x8],0x14
   140013df4:	jmp    0x140011764
   140013df9:	mov    rdx,QWORD PTR [rbp+0x8]
   140013dfd:	mov    ecx,0x28
   140013e02:	call   0x14000e810
   140013e07:	mov    rdi,rax
   140013e0a:	test   rax,rax
   140013e0d:	je     0x14001242a
   140013e13:	mov    rax,QWORD PTR [rbp+0x18]
   140013e17:	movsxd rcx,DWORD PTR [rbp+0x10]
   140013e1b:	mov    rdx,QWORD PTR [rax+rcx*8]
   140013e1f:	lea    rax,[rip+0xdcd2]        # 0x140021af8
   140013e26:	mov    QWORD PTR [rdi],rax
   140013e29:	mov    QWORD PTR [rdi+0x10],rdx
   140013e2d:	mov    DWORD PTR [rdi+0x18],r12d
   140013e31:	mov    DWORD PTR [rdi+0x1c],r12d
   140013e35:	mov    DWORD PTR [rdi+0x20],r12d
   140013e39:	mov    DWORD PTR [rdi+0x24],r12d
   140013e3d:	mov    DWORD PTR [rdi+0x8],0x16
   140013e44:	jmp    0x14001242d
   140013e49:	mov    rdx,QWORD PTR [rbp+0x8]
   140013e4d:	mov    ecx,0x68
   140013e52:	call   0x14000e810
   140013e57:	mov    r11,rax
   140013e5a:	test   rax,rax
   140013e5d:	je     0x140013e91
   140013e5f:	mov    ecx,DWORD PTR [rbp+0x10]
   140013e62:	mov    rdi,QWORD PTR [rbp+0x18]
   140013e66:	lea    eax,[rcx+0x6]
   140013e69:	movsxd r9,eax
   140013e6c:	lea    eax,[rcx+0x4]
   140013e6f:	mov    r9,QWORD PTR [rdi+r9*8]
   140013e73:	movsxd r8,eax
   140013e76:	lea    eax,[rcx+0x2]
   140013e79:	mov    r8,QWORD PTR [rdi+r8*8]
   140013e7d:	movsxd rdx,eax
   140013e80:	mov    rcx,r11
   140013e83:	mov    rdx,QWORD PTR [rdi+rdx*8]
   140013e87:	call   0x14000d4b0
   140013e8c:	mov    rdi,rax
   140013e8f:	jmp    0x140013e94
   140013e91:	mov    rdi,r12
   140013e94:	mov    rcx,QWORD PTR [rbp+0x28]
   140013e98:	movsxd rdx,DWORD PTR [rbp+0x10]
   140013e9c:	add    rdx,rdx
   140013e9f:	mov    eax,DWORD PTR [rcx+rdx*8]
   140013ea2:	mov    DWORD PTR [rdi+0x28],eax
   140013ea5:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140013ea9:	mov    DWORD PTR [rdi+0x2c],eax
   140013eac:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140013eb0:	mov    DWORD PTR [rdi+0x30],eax
   140013eb3:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140013eb7:	mov    DWORD PTR [rdi+0x34],eax
   140013eba:	mov    rcx,QWORD PTR [rbp+0x28]
   140013ebe:	movsxd rdx,DWORD PTR [rbp+0x10]
   140013ec2:	inc    rdx
   140013ec5:	add    rdx,rdx
   140013ec8:	mov    eax,DWORD PTR [rcx+rdx*8]
   140013ecb:	mov    DWORD PTR [rdi+0x38],eax
   140013ece:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140013ed2:	mov    DWORD PTR [rdi+0x3c],eax
   140013ed5:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140013ed9:	mov    DWORD PTR [rdi+0x40],eax
   140013edc:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140013ee0:	mov    DWORD PTR [rdi+0x44],eax
   140013ee3:	mov    rcx,QWORD PTR [rbp+0x28]
   140013ee7:	movsxd rdx,DWORD PTR [rbp+0x10]
   140013eeb:	add    rdx,0x3
   140013eef:	add    rdx,rdx
   140013ef2:	mov    eax,DWORD PTR [rcx+rdx*8]
   140013ef5:	mov    DWORD PTR [rdi+0x48],eax
   140013ef8:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140013efc:	mov    DWORD PTR [rdi+0x4c],eax
   140013eff:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140013f03:	mov    DWORD PTR [rdi+0x50],eax
   140013f06:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140013f0a:	mov    DWORD PTR [rdi+0x54],eax
   140013f0d:	mov    rcx,QWORD PTR [rbp+0x28]
   140013f11:	movsxd rdx,DWORD PTR [rbp+0x10]
   140013f15:	add    rdx,0x5
   140013f19:	add    rdx,rdx
   140013f1c:	mov    eax,DWORD PTR [rcx+rdx*8]
   140013f1f:	mov    DWORD PTR [rdi+0x58],eax
   140013f22:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140013f26:	mov    DWORD PTR [rdi+0x5c],eax
   140013f29:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140013f2d:	mov    DWORD PTR [rdi+0x60],eax
   140013f30:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140013f34:	mov    DWORD PTR [rdi+0x64],eax
   140013f37:	jmp    0x14000f9a9
   140013f3c:	mov    rdx,QWORD PTR [rbp+0x8]
   140013f40:	mov    ecx,0x68
   140013f45:	call   0x14000e810
   140013f4a:	mov    r11,rax
   140013f4d:	test   rax,rax
   140013f50:	je     0x140013f7d
   140013f52:	mov    ecx,DWORD PTR [rbp+0x10]
   140013f55:	mov    rdi,QWORD PTR [rbp+0x18]
   140013f59:	xor    r9d,r9d
   140013f5c:	lea    eax,[rcx+0x4]
   140013f5f:	movsxd r8,eax
   140013f62:	lea    eax,[rcx+0x2]
   140013f65:	mov    rcx,r11
   140013f68:	mov    r8,QWORD PTR [rdi+r8*8]
   140013f6c:	movsxd rdx,eax
   140013f6f:	mov    rdx,QWORD PTR [rdi+rdx*8]
   140013f73:	call   0x14000d4b0
   140013f78:	mov    rdi,rax
   140013f7b:	jmp    0x140013f80
   140013f7d:	mov    rdi,r12
   140013f80:	mov    rcx,QWORD PTR [rbp+0x28]
   140013f84:	movsxd rdx,DWORD PTR [rbp+0x10]
   140013f88:	add    rdx,rdx
   140013f8b:	mov    eax,DWORD PTR [rcx+rdx*8]
   140013f8e:	mov    DWORD PTR [rdi+0x28],eax
   140013f91:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140013f95:	mov    DWORD PTR [rdi+0x2c],eax
   140013f98:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140013f9c:	mov    DWORD PTR [rdi+0x30],eax
   140013f9f:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140013fa3:	mov    DWORD PTR [rdi+0x34],eax
   140013fa6:	mov    rcx,QWORD PTR [rbp+0x28]
   140013faa:	movsxd rdx,DWORD PTR [rbp+0x10]
   140013fae:	inc    rdx
   140013fb1:	add    rdx,rdx
   140013fb4:	mov    eax,DWORD PTR [rcx+rdx*8]
   140013fb7:	mov    DWORD PTR [rdi+0x38],eax
   140013fba:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140013fbe:	mov    DWORD PTR [rdi+0x3c],eax
   140013fc1:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140013fc5:	mov    DWORD PTR [rdi+0x40],eax
   140013fc8:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140013fcc:	mov    DWORD PTR [rdi+0x44],eax
   140013fcf:	mov    rcx,QWORD PTR [rbp+0x28]
   140013fd3:	movsxd rdx,DWORD PTR [rbp+0x10]
   140013fd7:	add    rdx,0x3
   140013fdb:	add    rdx,rdx
   140013fde:	mov    eax,DWORD PTR [rcx+rdx*8]
   140013fe1:	mov    DWORD PTR [rdi+0x48],eax
   140013fe4:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140013fe8:	mov    DWORD PTR [rdi+0x4c],eax
   140013feb:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140013fef:	mov    DWORD PTR [rdi+0x50],eax
   140013ff2:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140013ff6:	mov    DWORD PTR [rdi+0x54],eax
   140013ff9:	jmp    0x14000f9a9
   140013ffe:	mov    rdx,QWORD PTR [rbp+0x8]
   140014002:	mov    ecx,0x70
   140014007:	call   0x14000e810
   14001400c:	mov    r11,rax
   14001400f:	test   rax,rax
   140014012:	je     0x14001403c
   140014014:	mov    ecx,DWORD PTR [rbp+0x10]
   140014017:	mov    rdi,QWORD PTR [rbp+0x18]
   14001401b:	lea    eax,[rcx+0x4]
   14001401e:	movsxd r8,eax
   140014021:	lea    eax,[rcx+0x1]
   140014024:	mov    rcx,r11
   140014027:	mov    r8,QWORD PTR [rdi+r8*8]
   14001402b:	movsxd rdx,eax
   14001402e:	mov    rdx,QWORD PTR [rdi+rdx*8]
   140014032:	call   0x14000d510
   140014037:	mov    rdi,rax
   14001403a:	jmp    0x14001403f
   14001403c:	mov    rdi,r12
   14001403f:	mov    rcx,QWORD PTR [rbp+0x28]
   140014043:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014047:	add    rdx,rdx
   14001404a:	mov    eax,DWORD PTR [rcx+rdx*8]
   14001404d:	mov    DWORD PTR [rdi+0x20],eax
   140014050:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140014054:	mov    DWORD PTR [rdi+0x24],eax
   140014057:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14001405b:	mov    DWORD PTR [rdi+0x28],eax
   14001405e:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140014062:	mov    DWORD PTR [rdi+0x2c],eax
   140014065:	mov    rcx,QWORD PTR [rbp+0x28]
   140014069:	movsxd rdx,DWORD PTR [rbp+0x10]
   14001406d:	add    rdx,0x2
   140014071:	add    rdx,rdx
   140014074:	mov    eax,DWORD PTR [rcx+rdx*8]
   140014077:	mov    DWORD PTR [rdi+0x30],eax
   14001407a:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14001407e:	mov    DWORD PTR [rdi+0x34],eax
   140014081:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140014085:	mov    DWORD PTR [rdi+0x38],eax
   140014088:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14001408c:	mov    DWORD PTR [rdi+0x3c],eax
   14001408f:	mov    rcx,QWORD PTR [rbp+0x28]
   140014093:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014097:	add    rdx,0x3
   14001409b:	add    rdx,rdx
   14001409e:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400140a1:	mov    DWORD PTR [rdi+0x40],eax
   1400140a4:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400140a8:	mov    DWORD PTR [rdi+0x44],eax
   1400140ab:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400140af:	mov    DWORD PTR [rdi+0x48],eax
   1400140b2:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400140b6:	mov    DWORD PTR [rdi+0x4c],eax
   1400140b9:	mov    rcx,QWORD PTR [rbp+0x28]
   1400140bd:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400140c1:	add    rdx,0x5
   1400140c5:	add    rdx,rdx
   1400140c8:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400140cb:	mov    DWORD PTR [rdi+0x50],eax
   1400140ce:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400140d2:	mov    DWORD PTR [rdi+0x54],eax
   1400140d5:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400140d9:	mov    DWORD PTR [rdi+0x58],eax
   1400140dc:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400140e0:	mov    DWORD PTR [rdi+0x5c],eax
   1400140e3:	mov    rcx,QWORD PTR [rbp+0x28]
   1400140e7:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400140eb:	add    rdx,0x6
   1400140ef:	add    rdx,rdx
   1400140f2:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400140f5:	mov    DWORD PTR [rdi+0x60],eax
   1400140f8:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400140fc:	mov    DWORD PTR [rdi+0x64],eax
   1400140ff:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140014103:	mov    DWORD PTR [rdi+0x68],eax
   140014106:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14001410a:	mov    DWORD PTR [rdi+0x6c],eax
   14001410d:	jmp    0x14000f9a9
   140014112:	mov    rdx,QWORD PTR [rbp+0x8]
   140014116:	mov    ecx,0x50
   14001411b:	call   0x14000e810
   140014120:	mov    r11,rax
   140014123:	test   rax,rax
   140014126:	je     0x140014150
   140014128:	mov    ecx,DWORD PTR [rbp+0x10]
   14001412b:	mov    rdi,QWORD PTR [rbp+0x18]
   14001412f:	lea    eax,[rcx+0x4]
   140014132:	movsxd r8,eax
   140014135:	lea    eax,[rcx+0x2]
   140014138:	mov    rcx,r11
   14001413b:	mov    r8,QWORD PTR [rdi+r8*8]
   14001413f:	movsxd rdx,eax
   140014142:	mov    rdx,QWORD PTR [rdi+rdx*8]
   140014146:	call   0x14000d590
   14001414b:	mov    rdi,rax
   14001414e:	jmp    0x140014153
   140014150:	mov    rdi,r12
   140014153:	mov    rcx,QWORD PTR [rbp+0x28]
   140014157:	movsxd rdx,DWORD PTR [rbp+0x10]
   14001415b:	add    rdx,rdx
   14001415e:	mov    eax,DWORD PTR [rcx+rdx*8]
   140014161:	mov    DWORD PTR [rdi+0x20],eax
   140014164:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140014168:	mov    DWORD PTR [rdi+0x24],eax
   14001416b:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14001416f:	mov    DWORD PTR [rdi+0x28],eax
   140014172:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140014176:	mov    DWORD PTR [rdi+0x2c],eax
   140014179:	mov    rcx,QWORD PTR [rbp+0x28]
   14001417d:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014181:	inc    rdx
   140014184:	add    rdx,rdx
   140014187:	mov    eax,DWORD PTR [rcx+rdx*8]
   14001418a:	mov    DWORD PTR [rdi+0x30],eax
   14001418d:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140014191:	mov    DWORD PTR [rdi+0x34],eax
   140014194:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140014198:	mov    DWORD PTR [rdi+0x38],eax
   14001419b:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14001419f:	mov    DWORD PTR [rdi+0x3c],eax
   1400141a2:	mov    rcx,QWORD PTR [rbp+0x28]
   1400141a6:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400141aa:	add    rdx,0x3
   1400141ae:	add    rdx,rdx
   1400141b1:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400141b4:	mov    DWORD PTR [rdi+0x40],eax
   1400141b7:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400141bb:	mov    DWORD PTR [rdi+0x44],eax
   1400141be:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400141c2:	mov    DWORD PTR [rdi+0x48],eax
   1400141c5:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400141c9:	mov    DWORD PTR [rdi+0x4c],eax
   1400141cc:	jmp    0x14000f9a9
   1400141d1:	mov    rdx,QWORD PTR [rbp+0x8]
   1400141d5:	mov    ecx,0x80
   1400141da:	call   0x14000e810
   1400141df:	mov    r11,rax
   1400141e2:	test   rax,rax
   1400141e5:	je     0x140014228
   1400141e7:	mov    ecx,DWORD PTR [rbp+0x10]
   1400141ea:	mov    r10,QWORD PTR [rbp+0x18]
   1400141ee:	lea    eax,[rcx+0x8]
   1400141f1:	movsxd rdi,eax
   1400141f4:	lea    eax,[rcx+0x6]
   1400141f7:	movsxd r9,eax
   1400141fa:	lea    eax,[rcx+0x4]
   1400141fd:	mov    r9,QWORD PTR [r10+r9*8]
   140014201:	movsxd r8,eax
   140014204:	lea    eax,[rcx+0x2]
   140014207:	mov    r8,QWORD PTR [r10+r8*8]
   14001420b:	movsxd rdx,eax
   14001420e:	mov    rax,QWORD PTR [r10+rdi*8]
   140014212:	mov    rdx,QWORD PTR [r10+rdx*8]
   140014216:	mov    rcx,r11
   140014219:	mov    QWORD PTR [rsp+0x20],rax
   14001421e:	call   0x14000d600
   140014223:	mov    rdi,rax
   140014226:	jmp    0x14001422b
   140014228:	mov    rdi,r12
   14001422b:	mov    rcx,QWORD PTR [rbp+0x28]
   14001422f:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014233:	add    rdx,rdx
   140014236:	mov    eax,DWORD PTR [rcx+rdx*8]
   140014239:	mov    DWORD PTR [rdi+0x30],eax
   14001423c:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140014240:	mov    DWORD PTR [rdi+0x34],eax
   140014243:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140014247:	mov    DWORD PTR [rdi+0x38],eax
   14001424a:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14001424e:	mov    DWORD PTR [rdi+0x3c],eax
   140014251:	mov    rcx,QWORD PTR [rbp+0x28]
   140014255:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014259:	inc    rdx
   14001425c:	add    rdx,rdx
   14001425f:	mov    eax,DWORD PTR [rcx+rdx*8]
   140014262:	mov    DWORD PTR [rdi+0x40],eax
   140014265:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140014269:	mov    DWORD PTR [rdi+0x44],eax
   14001426c:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140014270:	mov    DWORD PTR [rdi+0x48],eax
   140014273:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140014277:	mov    DWORD PTR [rdi+0x4c],eax
   14001427a:	mov    rcx,QWORD PTR [rbp+0x28]
   14001427e:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014282:	add    rdx,0x3
   140014286:	add    rdx,rdx
   140014289:	mov    eax,DWORD PTR [rcx+rdx*8]
   14001428c:	mov    DWORD PTR [rdi+0x50],eax
   14001428f:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140014293:	mov    DWORD PTR [rdi+0x54],eax
   140014296:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14001429a:	mov    DWORD PTR [rdi+0x58],eax
   14001429d:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400142a1:	mov    DWORD PTR [rdi+0x5c],eax
   1400142a4:	mov    rcx,QWORD PTR [rbp+0x28]
   1400142a8:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400142ac:	add    rdx,0x5
   1400142b0:	add    rdx,rdx
   1400142b3:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400142b6:	mov    DWORD PTR [rdi+0x60],eax
   1400142b9:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400142bd:	mov    DWORD PTR [rdi+0x64],eax
   1400142c0:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400142c4:	mov    DWORD PTR [rdi+0x68],eax
   1400142c7:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400142cb:	mov    DWORD PTR [rdi+0x6c],eax
   1400142ce:	jmp    0x1400126c3
   1400142d3:	mov    rdx,QWORD PTR [rbp+0x8]
   1400142d7:	mov    ecx,0x90
   1400142dc:	call   0x14000e810
   1400142e1:	mov    r11,rax
   1400142e4:	test   rax,rax
   1400142e7:	je     0x14001432e
   1400142e9:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400142ed:	mov    r10,QWORD PTR [rbp+0x18]
   1400142f1:	lea    eax,[rcx+0x9]
   1400142f4:	movsxd rdi,eax
   1400142f7:	lea    eax,[rcx+0x7]
   1400142fa:	movsxd r9,eax
   1400142fd:	lea    eax,[rcx+0x5]
   140014300:	mov    rcx,QWORD PTR [r10+rcx*8+0x18]
   140014305:	mov    rdx,QWORD PTR [rcx+0x18]
   140014309:	mov    QWORD PTR [rcx+0x18],r12
   14001430d:	mov    r9,QWORD PTR [r10+r9*8]
   140014311:	movsxd r8,eax
   140014314:	mov    rax,QWORD PTR [r10+rdi*8]
   140014318:	mov    rcx,r11
   14001431b:	mov    r8,QWORD PTR [r10+r8*8]
   14001431f:	mov    QWORD PTR [rsp+0x20],rax
   140014324:	call   0x14000d690
   140014329:	mov    rdi,rax
   14001432c:	jmp    0x140014331
   14001432e:	mov    rdi,r12
   140014331:	mov    rcx,QWORD PTR [rbp+0x28]
   140014335:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014339:	add    rdx,rdx
   14001433c:	mov    eax,DWORD PTR [rcx+rdx*8]
   14001433f:	mov    DWORD PTR [rdi+0x30],eax
   140014342:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140014346:	mov    DWORD PTR [rdi+0x34],eax
   140014349:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14001434d:	mov    DWORD PTR [rdi+0x38],eax
   140014350:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140014354:	mov    DWORD PTR [rdi+0x3c],eax
   140014357:	mov    rcx,QWORD PTR [rbp+0x28]
   14001435b:	movsxd rdx,DWORD PTR [rbp+0x10]
   14001435f:	inc    rdx
   140014362:	add    rdx,rdx
   140014365:	mov    eax,DWORD PTR [rcx+rdx*8]
   140014368:	mov    DWORD PTR [rdi+0x40],eax
   14001436b:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14001436f:	mov    DWORD PTR [rdi+0x44],eax
   140014372:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140014376:	mov    DWORD PTR [rdi+0x48],eax
   140014379:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14001437d:	mov    DWORD PTR [rdi+0x4c],eax
   140014380:	mov    rcx,QWORD PTR [rbp+0x28]
   140014384:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014388:	add    rdx,0x2
   14001438c:	add    rdx,rdx
   14001438f:	mov    eax,DWORD PTR [rcx+rdx*8]
   140014392:	mov    DWORD PTR [rdi+0x50],eax
   140014395:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140014399:	mov    DWORD PTR [rdi+0x54],eax
   14001439c:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400143a0:	mov    DWORD PTR [rdi+0x58],eax
   1400143a3:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400143a7:	mov    DWORD PTR [rdi+0x5c],eax
   1400143aa:	mov    rcx,QWORD PTR [rbp+0x28]
   1400143ae:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400143b2:	add    rdx,0x4
   1400143b6:	add    rdx,rdx
   1400143b9:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400143bc:	mov    DWORD PTR [rdi+0x60],eax
   1400143bf:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400143c3:	mov    DWORD PTR [rdi+0x64],eax
   1400143c6:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400143ca:	mov    DWORD PTR [rdi+0x68],eax
   1400143cd:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400143d1:	mov    DWORD PTR [rdi+0x6c],eax
   1400143d4:	mov    rcx,QWORD PTR [rbp+0x28]
   1400143d8:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400143dc:	add    rdx,0x6
   1400143e0:	add    rdx,rdx
   1400143e3:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400143e6:	mov    DWORD PTR [rdi+0x70],eax
   1400143e9:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400143ed:	mov    DWORD PTR [rdi+0x74],eax
   1400143f0:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400143f4:	mov    DWORD PTR [rdi+0x78],eax
   1400143f7:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400143fb:	mov    DWORD PTR [rdi+0x7c],eax
   1400143fe:	mov    rcx,QWORD PTR [rbp+0x28]
   140014402:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014406:	add    rdx,0x8
   14001440a:	add    rdx,rdx
   14001440d:	mov    eax,DWORD PTR [rcx+rdx*8]
   140014410:	mov    DWORD PTR [rdi+0x80],eax
   140014416:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14001441a:	mov    DWORD PTR [rdi+0x84],eax
   140014420:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140014424:	mov    DWORD PTR [rdi+0x88],eax
   14001442a:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14001442e:	mov    DWORD PTR [rdi+0x8c],eax
   140014434:	jmp    0x14000f9a9
   140014439:	mov    rdx,QWORD PTR [rbp+0x8]
   14001443d:	mov    ecx,0x68
   140014442:	call   0x14000e810
   140014447:	mov    r11,rax
   14001444a:	test   rax,rax
   14001444d:	je     0x140013e91
   140014453:	mov    ecx,DWORD PTR [rbp+0x10]
   140014456:	mov    rdi,QWORD PTR [rbp+0x18]
   14001445a:	lea    eax,[rcx+0x6]
   14001445d:	movsxd r9,eax
   140014460:	lea    eax,[rcx+0x4]
   140014463:	mov    r9,QWORD PTR [rdi+r9*8]
   140014467:	movsxd r8,eax
   14001446a:	lea    eax,[rcx+0x2]
   14001446d:	mov    r8,QWORD PTR [rdi+r8*8]
   140014471:	movsxd rdx,eax
   140014474:	mov    rcx,r11
   140014477:	mov    rdx,QWORD PTR [rdi+rdx*8]
   14001447b:	call   0x14000d710
   140014480:	mov    rdi,rax
   140014483:	jmp    0x140013e94
   140014488:	mov    rdx,QWORD PTR [rbp+0x8]
   14001448c:	mov    ecx,0x78
   140014491:	call   0x14000e810
   140014496:	mov    r11,rax
   140014499:	test   rax,rax
   14001449c:	je     0x1400144d0
   14001449e:	mov    ecx,DWORD PTR [rbp+0x10]
   1400144a1:	mov    rdi,QWORD PTR [rbp+0x18]
   1400144a5:	lea    eax,[rcx+0x7]
   1400144a8:	movsxd r9,eax
   1400144ab:	lea    eax,[rcx+0x5]
   1400144ae:	mov    r9,QWORD PTR [rdi+r9*8]
   1400144b2:	movsxd r8,eax
   1400144b5:	lea    eax,[rcx+0x3]
   1400144b8:	mov    r8,QWORD PTR [rdi+r8*8]
   1400144bc:	movsxd rdx,eax
   1400144bf:	mov    rcx,r11
   1400144c2:	mov    rdx,QWORD PTR [rdi+rdx*8]
   1400144c6:	call   0x14000d770
   1400144cb:	mov    rdi,rax
   1400144ce:	jmp    0x1400144d3
   1400144d0:	mov    rdi,r12
   1400144d3:	mov    rcx,QWORD PTR [rbp+0x28]
   1400144d7:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400144db:	add    rdx,rdx
   1400144de:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400144e1:	mov    DWORD PTR [rdi+0x28],eax
   1400144e4:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400144e8:	mov    DWORD PTR [rdi+0x2c],eax
   1400144eb:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400144ef:	mov    DWORD PTR [rdi+0x30],eax
   1400144f2:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400144f6:	mov    DWORD PTR [rdi+0x34],eax
   1400144f9:	mov    rcx,QWORD PTR [rbp+0x28]
   1400144fd:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014501:	inc    rdx
   140014504:	add    rdx,rdx
   140014507:	mov    eax,DWORD PTR [rcx+rdx*8]
   14001450a:	mov    DWORD PTR [rdi+0x38],eax
   14001450d:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140014511:	mov    DWORD PTR [rdi+0x3c],eax
   140014514:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140014518:	mov    DWORD PTR [rdi+0x40],eax
   14001451b:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14001451f:	mov    DWORD PTR [rdi+0x44],eax
   140014522:	mov    rcx,QWORD PTR [rbp+0x28]
   140014526:	movsxd rdx,DWORD PTR [rbp+0x10]
   14001452a:	add    rdx,0x2
   14001452e:	add    rdx,rdx
   140014531:	mov    eax,DWORD PTR [rcx+rdx*8]
   140014534:	mov    DWORD PTR [rdi+0x48],eax
   140014537:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14001453b:	mov    DWORD PTR [rdi+0x4c],eax
   14001453e:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140014542:	mov    DWORD PTR [rdi+0x50],eax
   140014545:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140014549:	mov    DWORD PTR [rdi+0x54],eax
   14001454c:	mov    rcx,QWORD PTR [rbp+0x28]
   140014550:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014554:	add    rdx,0x4
   140014558:	add    rdx,rdx
   14001455b:	mov    eax,DWORD PTR [rcx+rdx*8]
   14001455e:	mov    DWORD PTR [rdi+0x58],eax
   140014561:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140014565:	mov    DWORD PTR [rdi+0x5c],eax
   140014568:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14001456c:	mov    DWORD PTR [rdi+0x60],eax
   14001456f:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140014573:	mov    DWORD PTR [rdi+0x64],eax
   140014576:	mov    rcx,QWORD PTR [rbp+0x28]
   14001457a:	movsxd rdx,DWORD PTR [rbp+0x10]
   14001457e:	add    rdx,0x6
   140014582:	add    rdx,rdx
   140014585:	mov    eax,DWORD PTR [rcx+rdx*8]
   140014588:	mov    DWORD PTR [rdi+0x68],eax
   14001458b:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14001458f:	mov    DWORD PTR [rdi+0x6c],eax
   140014592:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140014596:	mov    DWORD PTR [rdi+0x70],eax
   140014599:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14001459d:	mov    DWORD PTR [rdi+0x74],eax
   1400145a0:	jmp    0x14000f9a9
   1400145a5:	mov    rdx,QWORD PTR [rbp+0x8]
   1400145a9:	mov    ecx,0x50
   1400145ae:	call   0x14000e810
   1400145b3:	mov    rdi,rax
   1400145b6:	test   rax,rax
   1400145b9:	je     0x1400145e0
   1400145bb:	lea    rcx,[rsp+0x360]
   1400145c3:	or     esi,0x40
   1400145c6:	mov    DWORD PTR [rsp+0x30],esi
   1400145ca:	call   QWORD PTR [rip+0xbe90]        # 0x140020460
   1400145d0:	mov    rcx,rdi
   1400145d3:	mov    rdx,rax
   1400145d6:	call   0x14000d7d0
   1400145db:	mov    rdi,rax
   1400145de:	jmp    0x1400145e3
   1400145e0:	mov    rdi,r12
   1400145e3:	test   sil,0x40
   1400145e7:	je     0x140011c32
   1400145ed:	and    esi,0xffffffbf
   1400145f0:	lea    rcx,[rsp+0x360]
   1400145f8:	mov    DWORD PTR [rsp+0x30],esi
   1400145fc:	call   QWORD PTR [rip+0xbe56]        # 0x140020458
   140014602:	jmp    0x140011c32
   140014607:	mov    rdx,QWORD PTR [rbp+0x8]
   14001460b:	mov    ecx,0x50
   140014610:	call   0x14000e810
   140014615:	mov    rcx,rax
   140014618:	test   rax,rax
   14001461b:	je     0x140014637
   14001461d:	mov    eax,DWORD PTR [rbp+0x10]
   140014620:	inc    eax
   140014622:	movsxd rdx,eax
   140014625:	shl    rdx,0x4
   140014629:	add    rdx,QWORD PTR [rbp+0x30]
   14001462d:	call   0x14000d7d0
   140014632:	mov    rdi,rax
   140014635:	jmp    0x14001463a
   140014637:	mov    rdi,r12
   14001463a:	mov    rcx,QWORD PTR [rbp+0x28]
   14001463e:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014642:	add    rdx,rdx
   140014645:	mov    eax,DWORD PTR [rcx+rdx*8]
   140014648:	mov    DWORD PTR [rdi+0x20],eax
   14001464b:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14001464f:	mov    DWORD PTR [rdi+0x24],eax
   140014652:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140014656:	mov    DWORD PTR [rdi+0x28],eax
   140014659:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14001465d:	mov    DWORD PTR [rdi+0x2c],eax
   140014660:	mov    rcx,QWORD PTR [rbp+0x28]
   140014664:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014668:	inc    rdx
   14001466b:	add    rdx,rdx
   14001466e:	mov    eax,DWORD PTR [rcx+rdx*8]
   140014671:	mov    DWORD PTR [rdi+0x30],eax
   140014674:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140014678:	mov    DWORD PTR [rdi+0x34],eax
   14001467b:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14001467f:	mov    DWORD PTR [rdi+0x38],eax
   140014682:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140014686:	mov    DWORD PTR [rdi+0x3c],eax
   140014689:	movsxd rdx,DWORD PTR [rbp+0x10]
   14001468d:	add    rdx,0x2
   140014691:	jmp    0x140011c5f
   140014696:	mov    rdx,QWORD PTR [rbp+0x8]
   14001469a:	mov    ecx,0x50
   14001469f:	call   0x14000e810
   1400146a4:	mov    rdi,rax
   1400146a7:	test   rax,rax
   1400146aa:	je     0x1400146d2
   1400146ac:	bts    esi,0x7
   1400146b0:	lea    rcx,[rsp+0x300]
   1400146b8:	mov    DWORD PTR [rsp+0x30],esi
   1400146bc:	call   QWORD PTR [rip+0xbd9e]        # 0x140020460
   1400146c2:	mov    rcx,rdi
   1400146c5:	mov    rdx,rax
   1400146c8:	call   0x14000d830
   1400146cd:	mov    rdi,rax
   1400146d0:	jmp    0x1400146d5
   1400146d2:	mov    rdi,r12
   1400146d5:	test   sil,sil
   1400146d8:	jns    0x140011c32
   1400146de:	btr    esi,0x7
   1400146e2:	lea    rcx,[rsp+0x300]
   1400146ea:	mov    DWORD PTR [rsp+0x30],esi
   1400146ee:	call   QWORD PTR [rip+0xbd64]        # 0x140020458
   1400146f4:	jmp    0x140011c32
   1400146f9:	mov    rdx,QWORD PTR [rbp+0x8]
   1400146fd:	mov    ecx,0x50
   140014702:	call   0x14000e810
   140014707:	mov    rcx,rax
   14001470a:	test   rax,rax
   14001470d:	je     0x140014637
   140014713:	mov    eax,DWORD PTR [rbp+0x10]
   140014716:	inc    eax
   140014718:	movsxd rdx,eax
   14001471b:	shl    rdx,0x4
   14001471f:	add    rdx,QWORD PTR [rbp+0x30]
   140014723:	call   0x14000d830
   140014728:	mov    rdi,rax
   14001472b:	jmp    0x14001463a
   140014730:	mov    rdx,QWORD PTR [rbp+0x8]
   140014734:	mov    ecx,0x38
   140014739:	call   0x14000e810
   14001473e:	mov    rdi,rax
   140014741:	test   rax,rax
   140014744:	je     0x140011fa2
   14001474a:	mov    eax,DWORD PTR [rbp+0x10]
   14001474d:	mov    rdx,QWORD PTR [rbp+0x18]
   140014751:	inc    eax
   140014753:	movsxd rcx,eax
   140014756:	mov    rdx,QWORD PTR [rdx+rcx*8]
   14001475a:	mov    rcx,rdi
   14001475d:	call   0x14000d8b0
   140014762:	mov    rdi,rax
   140014765:	jmp    0x140011fa5
   14001476a:	mov    rdx,QWORD PTR [rbp+0x8]
   14001476e:	mov    ecx,0x50
   140014773:	call   0x14000e810
   140014778:	mov    r11,rax
   14001477b:	test   rax,rax
   14001477e:	je     0x1400147a8
   140014780:	mov    ecx,DWORD PTR [rbp+0x10]
   140014783:	mov    rdi,QWORD PTR [rbp+0x18]
   140014787:	lea    eax,[rcx+0x4]
   14001478a:	movsxd r8,eax
   14001478d:	lea    eax,[rcx+0x2]
   140014790:	mov    rcx,r11
   140014793:	mov    r8,QWORD PTR [rdi+r8*8]
   140014797:	movsxd rdx,eax
   14001479a:	mov    rdx,QWORD PTR [rdi+rdx*8]
   14001479e:	call   0x14000d8f0
   1400147a3:	mov    rdi,rax
   1400147a6:	jmp    0x1400147ab
   1400147a8:	mov    rdi,r12
   1400147ab:	mov    rcx,QWORD PTR [rbp+0x28]
   1400147af:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400147b3:	add    rdx,rdx
   1400147b6:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400147b9:	mov    DWORD PTR [rdi+0x20],eax
   1400147bc:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400147c0:	mov    DWORD PTR [rdi+0x24],eax
   1400147c3:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400147c7:	mov    DWORD PTR [rdi+0x28],eax
   1400147ca:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400147ce:	mov    DWORD PTR [rdi+0x2c],eax
   1400147d1:	mov    rcx,QWORD PTR [rbp+0x28]
   1400147d5:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400147d9:	inc    rdx
   1400147dc:	add    rdx,rdx
   1400147df:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400147e2:	mov    DWORD PTR [rdi+0x30],eax
   1400147e5:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400147e9:	mov    DWORD PTR [rdi+0x34],eax
   1400147ec:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400147f0:	mov    DWORD PTR [rdi+0x38],eax
   1400147f3:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400147f7:	mov    DWORD PTR [rdi+0x3c],eax
   1400147fa:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400147fe:	add    rdx,0x3
   140014802:	jmp    0x140011c5f
   140014807:	mov    rdx,QWORD PTR [rbp+0x8]
   14001480b:	mov    ecx,0x50
   140014810:	call   0x14000e810
   140014815:	mov    r11,rax
   140014818:	test   rax,rax
   14001481b:	je     0x1400147a8
   14001481d:	mov    ecx,DWORD PTR [rbp+0x10]
   140014820:	mov    rdi,QWORD PTR [rbp+0x18]
   140014824:	lea    eax,[rcx+0x4]
   140014827:	movsxd r8,eax
   14001482a:	lea    eax,[rcx+0x2]
   14001482d:	mov    rcx,r11
   140014830:	mov    r8,QWORD PTR [rdi+r8*8]
   140014834:	movsxd rdx,eax
   140014837:	mov    rdx,QWORD PTR [rdi+rdx*8]
   14001483b:	call   0x14000d9a0
   140014840:	mov    rdi,rax
   140014843:	jmp    0x1400147ab
   140014848:	mov    rdx,QWORD PTR [rbp+0x8]
   14001484c:	mov    ecx,0x48
   140014851:	call   0x14000e810
   140014856:	mov    rdi,rax
   140014859:	test   rax,rax
   14001485c:	je     0x1400148aa
   14001485e:	mov    rax,QWORD PTR [rbp+0x18]
   140014862:	movsxd rcx,DWORD PTR [rbp+0x10]
   140014866:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   14001486b:	lea    rax,[rip+0xd646]        # 0x140021eb8
   140014872:	mov    QWORD PTR [rdi],rax
   140014875:	mov    QWORD PTR [rdi+0x10],rdx
   140014879:	mov    QWORD PTR [rdi+0x18],r12
   14001487d:	mov    QWORD PTR [rdi+0x20],r12
   140014881:	mov    DWORD PTR [rdi+0x28],r12d
   140014885:	mov    DWORD PTR [rdi+0x2c],r12d
   140014889:	mov    DWORD PTR [rdi+0x30],r12d
   14001488d:	mov    DWORD PTR [rdi+0x34],r12d
   140014891:	mov    DWORD PTR [rdi+0x38],r12d
   140014895:	mov    DWORD PTR [rdi+0x3c],r12d
   140014899:	mov    DWORD PTR [rdi+0x40],r12d
   14001489d:	mov    DWORD PTR [rdi+0x44],r12d
   1400148a1:	mov    DWORD PTR [rdi+0x8],0x8
   1400148a8:	jmp    0x1400148ad
   1400148aa:	mov    rdi,r12
   1400148ad:	mov    rcx,QWORD PTR [rbp+0x28]
   1400148b1:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400148b5:	add    rdx,rdx
   1400148b8:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400148bb:	mov    DWORD PTR [rdi+0x28],eax
   1400148be:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400148c2:	mov    DWORD PTR [rdi+0x2c],eax
   1400148c5:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400148c9:	mov    DWORD PTR [rdi+0x30],eax
   1400148cc:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400148d0:	mov    DWORD PTR [rdi+0x34],eax
   1400148d3:	mov    rcx,QWORD PTR [rbp+0x28]
   1400148d7:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400148db:	add    rdx,0x2
   1400148df:	add    rdx,rdx
   1400148e2:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400148e5:	mov    DWORD PTR [rdi+0x38],eax
   1400148e8:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400148ec:	mov    DWORD PTR [rdi+0x3c],eax
   1400148ef:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400148f3:	mov    DWORD PTR [rdi+0x40],eax
   1400148f6:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400148fa:	mov    DWORD PTR [rdi+0x44],eax
   1400148fd:	jmp    0x14000f9a9
   140014902:	mov    rdx,QWORD PTR [rbp+0x8]
   140014906:	mov    ecx,0x48
   14001490b:	call   0x14000e810
   140014910:	mov    r11,rax
   140014913:	test   rax,rax
   140014916:	je     0x14001494a
   140014918:	mov    ecx,DWORD PTR [rbp+0x10]
   14001491b:	mov    rdi,QWORD PTR [rbp+0x18]
   14001491f:	lea    eax,[rcx+0x3]
   140014922:	movsxd r9,eax
   140014925:	lea    eax,[rcx+0x2]
   140014928:	mov    r9,QWORD PTR [rdi+r9*8]
   14001492c:	movsxd r8,eax
   14001492f:	lea    eax,[rcx+0x1]
   140014932:	mov    r8,QWORD PTR [rdi+r8*8]
   140014936:	movsxd rdx,eax
   140014939:	mov    rcx,r11
   14001493c:	mov    rdx,QWORD PTR [rdi+rdx*8]
   140014940:	call   0x14000d940
   140014945:	mov    rdi,rax
   140014948:	jmp    0x14001494d
   14001494a:	mov    rdi,r12
   14001494d:	mov    rcx,QWORD PTR [rbp+0x28]
   140014951:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014955:	add    rdx,rdx
   140014958:	mov    eax,DWORD PTR [rcx+rdx*8]
   14001495b:	mov    DWORD PTR [rdi+0x28],eax
   14001495e:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140014962:	mov    DWORD PTR [rdi+0x2c],eax
   140014965:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140014969:	mov    DWORD PTR [rdi+0x30],eax
   14001496c:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140014970:	mov    DWORD PTR [rdi+0x34],eax
   140014973:	mov    rcx,QWORD PTR [rbp+0x28]
   140014977:	movsxd rdx,DWORD PTR [rbp+0x10]
   14001497b:	add    rdx,0x4
   14001497f:	add    rdx,rdx
   140014982:	mov    eax,DWORD PTR [rcx+rdx*8]
   140014985:	mov    DWORD PTR [rdi+0x38],eax
   140014988:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14001498c:	mov    DWORD PTR [rdi+0x3c],eax
   14001498f:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140014993:	mov    DWORD PTR [rdi+0x40],eax
   140014996:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14001499a:	mov    DWORD PTR [rdi+0x44],eax
   14001499d:	jmp    0x14000f9a9
   1400149a2:	mov    rdx,QWORD PTR [rbp+0x8]
   1400149a6:	mov    ecx,0x20
   1400149ab:	call   0x14000e810
   1400149b0:	mov    rdi,rax
   1400149b3:	test   rax,rax
   1400149b6:	je     0x14000f9a6
   1400149bc:	mov    rax,QWORD PTR [rbp+0x18]
   1400149c0:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400149c4:	mov    rdx,QWORD PTR [rax+rcx*8]
   1400149c8:	lea    rax,[rip+0xd5d9]        # 0x140021fa8
   1400149cf:	mov    QWORD PTR [rdi],rax
   1400149d2:	mov    QWORD PTR [rdi+0x10],rdx
   1400149d6:	mov    QWORD PTR [rdi+0x18],rdi
   1400149da:	mov    DWORD PTR [rdi+0x8],0xa
   1400149e1:	jmp    0x14000f9a9
   1400149e6:	mov    rdx,QWORD PTR [rbp+0x8]
   1400149ea:	mov    ecx,0x20
   1400149ef:	call   0x14000e810
   1400149f4:	mov    rdi,rax
   1400149f7:	test   rax,rax
   1400149fa:	je     0x14000f9a6
   140014a00:	mov    rax,QWORD PTR [rbp+0x18]
   140014a04:	movsxd rcx,DWORD PTR [rbp+0x10]
   140014a08:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140014a0d:	mov    rcx,QWORD PTR [rax+rcx*8]
   140014a11:	lea    rax,[rip+0xd590]        # 0x140021fa8
   140014a18:	mov    QWORD PTR [rdi],rax
   140014a1b:	mov    QWORD PTR [rdi+0x10],rdx
   140014a1f:	mov    DWORD PTR [rdi+0x8],0xa
   140014a26:	mov    rax,QWORD PTR [rcx+0x18]
   140014a2a:	mov    QWORD PTR [rdi+0x18],rax
   140014a2e:	mov    QWORD PTR [rcx+0x18],rdi
   140014a32:	jmp    0x14000f9a9
   140014a37:	mov    rdx,QWORD PTR [rbp+0x8]
   140014a3b:	mov    ecx,0x40
   140014a40:	call   0x14000e810
   140014a45:	mov    r11,rax
   140014a48:	test   rax,rax
   140014a4b:	je     0x140014a75
   140014a4d:	mov    ecx,DWORD PTR [rbp+0x10]
   140014a50:	mov    rdi,QWORD PTR [rbp+0x18]
   140014a54:	lea    eax,[rcx+0x3]
   140014a57:	movsxd r8,eax
   140014a5a:	lea    eax,[rcx+0x1]
   140014a5d:	mov    rcx,r11
   140014a60:	mov    r8,QWORD PTR [rdi+r8*8]
   140014a64:	movsxd rdx,eax
   140014a67:	mov    rdx,QWORD PTR [rdi+rdx*8]
   140014a6b:	call   0x14000da20
   140014a70:	mov    rdi,rax
   140014a73:	jmp    0x140014a78
   140014a75:	mov    rdi,r12
   140014a78:	mov    rcx,QWORD PTR [rbp+0x28]
   140014a7c:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014a80:	add    rdx,rdx
   140014a83:	mov    eax,DWORD PTR [rcx+rdx*8]
   140014a86:	mov    DWORD PTR [rdi+0x20],eax
   140014a89:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140014a8d:	mov    DWORD PTR [rdi+0x24],eax
   140014a90:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140014a94:	mov    DWORD PTR [rdi+0x28],eax
   140014a97:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140014a9b:	mov    DWORD PTR [rdi+0x2c],eax
   140014a9e:	mov    rcx,QWORD PTR [rbp+0x28]
   140014aa2:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014aa6:	add    rdx,0x2
   140014aaa:	add    rdx,rdx
   140014aad:	mov    eax,DWORD PTR [rcx+rdx*8]
   140014ab0:	mov    DWORD PTR [rdi+0x30],eax
   140014ab3:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140014ab7:	mov    DWORD PTR [rdi+0x34],eax
   140014aba:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140014abe:	mov    DWORD PTR [rdi+0x38],eax
   140014ac1:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140014ac5:	mov    DWORD PTR [rdi+0x3c],eax
   140014ac8:	jmp    0x14000f9a9
   140014acd:	mov    rdx,QWORD PTR [rbp+0x8]
   140014ad1:	mov    ecx,0x38
   140014ad6:	call   0x14000e810
   140014adb:	mov    rdi,rax
   140014ade:	test   rax,rax
   140014ae1:	je     0x140014b01
   140014ae3:	mov    eax,DWORD PTR [rbp+0x10]
   140014ae6:	mov    rdx,QWORD PTR [rbp+0x18]
   140014aea:	add    eax,0x2
   140014aed:	movsxd rcx,eax
   140014af0:	mov    rdx,QWORD PTR [rdx+rcx*8]
   140014af4:	mov    rcx,rdi
   140014af7:	call   0x14000dab0
   140014afc:	mov    rdi,rax
   140014aff:	jmp    0x140014b04
   140014b01:	mov    rdi,r12
   140014b04:	mov    rcx,QWORD PTR [rbp+0x28]
   140014b08:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014b0c:	add    rdx,rdx
   140014b0f:	mov    eax,DWORD PTR [rcx+rdx*8]
   140014b12:	mov    DWORD PTR [rdi+0x18],eax
   140014b15:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140014b19:	mov    DWORD PTR [rdi+0x1c],eax
   140014b1c:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140014b20:	mov    DWORD PTR [rdi+0x20],eax
   140014b23:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140014b27:	mov    DWORD PTR [rdi+0x24],eax
   140014b2a:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014b2e:	inc    rdx
   140014b31:	jmp    0x1400100a5
   140014b36:	mov    rdx,QWORD PTR [rbp+0x8]
   140014b3a:	mov    ecx,0x48
   140014b3f:	call   0x14000e810
   140014b44:	mov    rdi,rax
   140014b47:	test   rax,rax
   140014b4a:	je     0x140014b75
   140014b4c:	movsxd rcx,DWORD PTR [rbp+0x10]
   140014b50:	mov    r8,QWORD PTR [rbp+0x18]
   140014b54:	lea    eax,[rcx+0x2]
   140014b57:	mov    rdx,rcx
   140014b5a:	mov    rcx,rdi
   140014b5d:	cdqe   
   140014b5f:	shl    rdx,0x4
   140014b63:	mov    r8,QWORD PTR [r8+rax*8]
   140014b67:	add    rdx,QWORD PTR [rbp+0x30]
   140014b6b:	call   0x14000db40
   140014b70:	mov    rdi,rax
   140014b73:	jmp    0x140014b78
   140014b75:	mov    rdi,r12
   140014b78:	mov    rcx,QWORD PTR [rbp+0x28]
   140014b7c:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014b80:	add    rdx,rdx
   140014b83:	mov    eax,DWORD PTR [rcx+rdx*8]
   140014b86:	mov    DWORD PTR [rdi+0x28],eax
   140014b89:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140014b8d:	mov    DWORD PTR [rdi+0x2c],eax
   140014b90:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140014b94:	mov    DWORD PTR [rdi+0x30],eax
   140014b97:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140014b9b:	mov    DWORD PTR [rdi+0x34],eax
   140014b9e:	mov    rcx,QWORD PTR [rbp+0x28]
   140014ba2:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014ba6:	inc    rdx
   140014ba9:	add    rdx,rdx
   140014bac:	mov    eax,DWORD PTR [rcx+rdx*8]
   140014baf:	mov    DWORD PTR [rdi+0x38],eax
   140014bb2:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140014bb6:	mov    DWORD PTR [rdi+0x3c],eax
   140014bb9:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140014bbd:	mov    DWORD PTR [rdi+0x40],eax
   140014bc0:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140014bc4:	mov    DWORD PTR [rdi+0x44],eax
   140014bc7:	jmp    0x14000f9a9
   140014bcc:	mov    rdx,QWORD PTR [rbp+0x8]
   140014bd0:	mov    ecx,0x38
   140014bd5:	call   0x14000e810
   140014bda:	mov    rdi,rax
   140014bdd:	test   rax,rax
   140014be0:	je     0x140011fa2
   140014be6:	mov    eax,DWORD PTR [rbp+0x10]
   140014be9:	mov    rdx,QWORD PTR [rbp+0x18]
   140014bed:	inc    eax
   140014bef:	movsxd rcx,eax
   140014bf2:	mov    rdx,QWORD PTR [rdx+rcx*8]
   140014bf6:	mov    rcx,rdi
   140014bf9:	call   0x14000dba0
   140014bfe:	mov    rdi,rax
   140014c01:	jmp    0x140011fa5
   140014c06:	mov    rdx,QWORD PTR [rbp+0x8]
   140014c0a:	mov    ecx,0x38
   140014c0f:	call   0x14000e810
   140014c14:	mov    r11,rax
   140014c17:	test   rax,rax
   140014c1a:	je     0x140014c65
   140014c1c:	mov    rax,QWORD PTR [rbp+0x18]
   140014c20:	movsxd rcx,DWORD PTR [rbp+0x10]
   140014c24:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140014c29:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140014c2e:	lea    rax,[rip+0xd553]        # 0x140022188
   140014c35:	mov    QWORD PTR [r11],rax
   140014c38:	mov    QWORD PTR [r11+0x10],rdx
   140014c3c:	mov    QWORD PTR [r11+0x18],rdi
   140014c40:	mov    QWORD PTR [r11+0x20],r12
   140014c44:	mov    DWORD PTR [r11+0x28],r12d
   140014c48:	mov    DWORD PTR [r11+0x2c],r12d
   140014c4c:	mov    DWORD PTR [r11+0x30],r12d
   140014c50:	mov    DWORD PTR [r11+0x34],r12d
   140014c54:	mov    DWORD PTR [r11+0x8],0x44
   140014c5c:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014c60:	jmp    0x1400102d1
   140014c65:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014c69:	mov    r11,r12
   140014c6c:	jmp    0x1400102d1
   140014c71:	mov    rdx,QWORD PTR [rbp+0x8]
   140014c75:	mov    ecx,0x38
   140014c7a:	call   0x14000e810
   140014c7f:	mov    r11,rax
   140014c82:	test   rax,rax
   140014c85:	je     0x140014c65
   140014c87:	mov    rax,QWORD PTR [rbp+0x18]
   140014c8b:	movsxd rcx,DWORD PTR [rbp+0x10]
   140014c8f:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
   140014c94:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140014c99:	lea    rax,[rip+0xd4e8]        # 0x140022188
   140014ca0:	mov    QWORD PTR [r11],rax
   140014ca3:	mov    QWORD PTR [r11+0x10],rdx
   140014ca7:	mov    QWORD PTR [r11+0x18],r12
   140014cab:	mov    QWORD PTR [r11+0x20],rdi
   140014caf:	jmp    0x140014c44
   140014cb1:	mov    rdx,QWORD PTR [rbp+0x8]
   140014cb5:	mov    ecx,0x38
   140014cba:	call   0x14000e810
   140014cbf:	mov    r11,rax
   140014cc2:	test   rax,rax
   140014cc5:	je     0x140014c65
   140014cc7:	mov    rax,QWORD PTR [rbp+0x18]
   140014ccb:	movsxd rcx,DWORD PTR [rbp+0x10]
   140014ccf:	mov    rdi,QWORD PTR [rax+rcx*8+0x18]
   140014cd4:	mov    rdx,QWORD PTR [rax+rcx*8+0x10]
   140014cd9:	mov    rcx,QWORD PTR [rax+rcx*8+0x8]
   140014cde:	lea    rax,[rip+0xd4a3]        # 0x140022188
   140014ce5:	mov    QWORD PTR [r11],rax
   140014ce8:	mov    QWORD PTR [r11+0x10],rcx
   140014cec:	mov    QWORD PTR [r11+0x18],rdx
   140014cf0:	mov    QWORD PTR [r11+0x20],rdi
   140014cf4:	jmp    0x140014c44
   140014cf9:	mov    rdx,QWORD PTR [rbp+0x8]
   140014cfd:	mov    ecx,0x68
   140014d02:	call   0x14000e810
   140014d07:	mov    r11,rax
   140014d0a:	test   rax,rax
   140014d0d:	je     0x140014d3b
   140014d0f:	mov    ecx,DWORD PTR [rbp+0x10]
   140014d12:	mov    r8,QWORD PTR [rbp+0x18]
   140014d16:	lea    eax,[rcx+0x4]
   140014d19:	movsxd rdi,eax
   140014d1c:	lea    eax,[rcx+0x2]
   140014d1f:	mov    rcx,r11
   140014d22:	mov    r8,QWORD PTR [r8+rdi*8]
   140014d26:	movsxd rdx,eax
   140014d29:	shl    rdx,0x4
   140014d2d:	add    rdx,QWORD PTR [rbp+0x30]
   140014d31:	call   0x14000dbe0
   140014d36:	mov    rdi,rax
   140014d39:	jmp    0x140014d3e
   140014d3b:	mov    rdi,r12
   140014d3e:	mov    rcx,QWORD PTR [rbp+0x28]
   140014d42:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014d46:	add    rdx,rdx
   140014d49:	mov    eax,DWORD PTR [rcx+rdx*8]
   140014d4c:	mov    DWORD PTR [rdi+0x28],eax
   140014d4f:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140014d53:	mov    DWORD PTR [rdi+0x2c],eax
   140014d56:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140014d5a:	mov    DWORD PTR [rdi+0x30],eax
   140014d5d:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140014d61:	mov    DWORD PTR [rdi+0x34],eax
   140014d64:	mov    rcx,QWORD PTR [rbp+0x28]
   140014d68:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014d6c:	inc    rdx
   140014d6f:	add    rdx,rdx
   140014d72:	mov    eax,DWORD PTR [rcx+rdx*8]
   140014d75:	mov    DWORD PTR [rdi+0x38],eax
   140014d78:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140014d7c:	mov    DWORD PTR [rdi+0x3c],eax
   140014d7f:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140014d83:	mov    DWORD PTR [rdi+0x40],eax
   140014d86:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140014d8a:	mov    DWORD PTR [rdi+0x44],eax
   140014d8d:	mov    rcx,QWORD PTR [rbp+0x28]
   140014d91:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014d95:	add    rdx,0x2
   140014d99:	add    rdx,rdx
   140014d9c:	mov    eax,DWORD PTR [rcx+rdx*8]
   140014d9f:	mov    DWORD PTR [rdi+0x48],eax
   140014da2:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140014da6:	mov    DWORD PTR [rdi+0x4c],eax
   140014da9:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140014dad:	mov    DWORD PTR [rdi+0x50],eax
   140014db0:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140014db4:	mov    DWORD PTR [rdi+0x54],eax
   140014db7:	jmp    0x1400105a4
   140014dbc:	mov    rdx,QWORD PTR [rbp+0x8]
   140014dc0:	mov    ecx,0x28
   140014dc5:	call   0x14000e810
   140014dca:	mov    rdi,rax
   140014dcd:	test   rax,rax
   140014dd0:	je     0x14001191b
   140014dd6:	mov    rax,QWORD PTR [rbp+0x18]
   140014dda:	movsxd rcx,DWORD PTR [rbp+0x10]
   140014dde:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140014de3:	lea    rax,[rip+0xd34e]        # 0x140022138
   140014dea:	mov    QWORD PTR [rdi],rax
   140014ded:	mov    QWORD PTR [rdi+0x10],rdx
   140014df1:	mov    DWORD PTR [rdi+0x18],r12d
   140014df5:	mov    DWORD PTR [rdi+0x1c],r12d
   140014df9:	mov    DWORD PTR [rdi+0x20],r12d
   140014dfd:	mov    DWORD PTR [rdi+0x24],r12d
   140014e01:	mov    DWORD PTR [rdi+0x8],0x19
   140014e08:	jmp    0x14001191e
   140014e0d:	mov    rdx,QWORD PTR [rbp+0x8]
   140014e11:	mov    ecx,0x30
   140014e16:	call   0x14000e810
   140014e1b:	test   rax,rax
   140014e1e:	je     0x140014e2d
   140014e20:	mov    rcx,rax
   140014e23:	call   0x14000e080
   140014e28:	mov    rdi,rax
   140014e2b:	jmp    0x140014e30
   140014e2d:	mov    rdi,r12
   140014e30:	mov    rcx,QWORD PTR [rbp+0x28]
   140014e34:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014e38:	add    rdx,rdx
   140014e3b:	mov    eax,DWORD PTR [rcx+rdx*8]
   140014e3e:	mov    DWORD PTR [rdi+0x10],eax
   140014e41:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140014e45:	mov    DWORD PTR [rdi+0x14],eax
   140014e48:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140014e4c:	mov    DWORD PTR [rdi+0x18],eax
   140014e4f:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140014e53:	mov    DWORD PTR [rdi+0x1c],eax
   140014e56:	mov    rcx,QWORD PTR [rbp+0x28]
   140014e5a:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014e5e:	inc    rdx
   140014e61:	add    rdx,rdx
   140014e64:	mov    eax,DWORD PTR [rcx+rdx*8]
   140014e67:	mov    DWORD PTR [rdi+0x20],eax
   140014e6a:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140014e6e:	mov    DWORD PTR [rdi+0x24],eax
   140014e71:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140014e75:	mov    DWORD PTR [rdi+0x28],eax
   140014e78:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140014e7c:	mov    DWORD PTR [rdi+0x2c],eax
   140014e7f:	jmp    0x14000f9a9
   140014e84:	mov    rdx,QWORD PTR [rbp+0x8]
   140014e88:	mov    ecx,0x90
   140014e8d:	call   0x14000e810
   140014e92:	mov    r11,rax
   140014e95:	test   rax,rax
   140014e98:	je     0x140014ed0
   140014e9a:	mov    ecx,DWORD PTR [rbp+0x10]
   140014e9d:	mov    rdi,QWORD PTR [rbp+0x18]
   140014ea1:	lea    eax,[rcx+0x6]
   140014ea4:	movsxd r9,eax
   140014ea7:	lea    eax,[rcx+0x3]
   140014eaa:	mov    r9,QWORD PTR [rdi+r9*8]
   140014eae:	movsxd r8,eax
   140014eb1:	lea    eax,[rcx+0x1]
   140014eb4:	mov    r8,QWORD PTR [rdi+r8*8]
   140014eb8:	movsxd rdx,eax
   140014ebb:	mov    rcx,r11
   140014ebe:	shl    rdx,0x4
   140014ec2:	add    rdx,QWORD PTR [rbp+0x30]
   140014ec6:	call   0x14000de00
   140014ecb:	mov    rdi,rax
   140014ece:	jmp    0x140014ed3
   140014ed0:	mov    rdi,r12
   140014ed3:	mov    rcx,QWORD PTR [rbp+0x28]
   140014ed7:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014edb:	add    rdx,rdx
   140014ede:	mov    eax,DWORD PTR [rcx+rdx*8]
   140014ee1:	mov    DWORD PTR [rdi+0x30],eax
   140014ee4:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140014ee8:	mov    DWORD PTR [rdi+0x34],eax
   140014eeb:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140014eef:	mov    DWORD PTR [rdi+0x38],eax
   140014ef2:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140014ef6:	mov    DWORD PTR [rdi+0x3c],eax
   140014ef9:	mov    rcx,QWORD PTR [rbp+0x28]
   140014efd:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014f01:	inc    rdx
   140014f04:	add    rdx,rdx
   140014f07:	mov    eax,DWORD PTR [rcx+rdx*8]
   140014f0a:	mov    DWORD PTR [rdi+0x40],eax
   140014f0d:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140014f11:	mov    DWORD PTR [rdi+0x44],eax
   140014f14:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140014f18:	mov    DWORD PTR [rdi+0x48],eax
   140014f1b:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140014f1f:	mov    DWORD PTR [rdi+0x4c],eax
   140014f22:	mov    rcx,QWORD PTR [rbp+0x28]
   140014f26:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014f2a:	add    rdx,0x2
   140014f2e:	add    rdx,rdx
   140014f31:	mov    eax,DWORD PTR [rcx+rdx*8]
   140014f34:	mov    DWORD PTR [rdi+0x50],eax
   140014f37:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140014f3b:	mov    DWORD PTR [rdi+0x54],eax
   140014f3e:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140014f42:	mov    DWORD PTR [rdi+0x58],eax
   140014f45:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140014f49:	mov    DWORD PTR [rdi+0x5c],eax
   140014f4c:	mov    rcx,QWORD PTR [rbp+0x28]
   140014f50:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014f54:	add    rdx,0x4
   140014f58:	add    rdx,rdx
   140014f5b:	mov    eax,DWORD PTR [rcx+rdx*8]
   140014f5e:	mov    DWORD PTR [rdi+0x60],eax
   140014f61:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140014f65:	mov    DWORD PTR [rdi+0x64],eax
   140014f68:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140014f6c:	mov    DWORD PTR [rdi+0x68],eax
   140014f6f:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140014f73:	mov    DWORD PTR [rdi+0x6c],eax
   140014f76:	mov    rcx,QWORD PTR [rbp+0x28]
   140014f7a:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014f7e:	add    rdx,0x5
   140014f82:	add    rdx,rdx
   140014f85:	mov    eax,DWORD PTR [rcx+rdx*8]
   140014f88:	mov    DWORD PTR [rdi+0x70],eax
   140014f8b:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140014f8f:	mov    DWORD PTR [rdi+0x74],eax
   140014f92:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140014f96:	mov    DWORD PTR [rdi+0x78],eax
   140014f99:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140014f9d:	mov    DWORD PTR [rdi+0x7c],eax
   140014fa0:	mov    rcx,QWORD PTR [rbp+0x28]
   140014fa4:	movsxd rdx,DWORD PTR [rbp+0x10]
   140014fa8:	add    rdx,0x7
   140014fac:	add    rdx,rdx
   140014faf:	mov    eax,DWORD PTR [rcx+rdx*8]
   140014fb2:	mov    DWORD PTR [rdi+0x80],eax
   140014fb8:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140014fbc:	mov    DWORD PTR [rdi+0x84],eax
   140014fc2:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140014fc6:	mov    DWORD PTR [rdi+0x88],eax
   140014fcc:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140014fd0:	mov    DWORD PTR [rdi+0x8c],eax
   140014fd6:	jmp    0x14000f9a9
   140014fdb:	mov    rdx,QWORD PTR [rbp+0x8]
   140014fdf:	mov    ecx,0x90
   140014fe4:	call   0x14000e810
   140014fe9:	mov    r11,rax
   140014fec:	test   rax,rax
   140014fef:	je     0x140015027
   140014ff1:	mov    ecx,DWORD PTR [rbp+0x10]
   140014ff4:	mov    rdi,QWORD PTR [rbp+0x18]
   140014ff8:	lea    eax,[rcx+0x6]
   140014ffb:	movsxd r9,eax
   140014ffe:	lea    eax,[rcx+0x3]
   140015001:	mov    r9,QWORD PTR [rdi+r9*8]
   140015005:	movsxd r8,eax
   140015008:	lea    eax,[rcx+0x1]
   14001500b:	mov    r8,QWORD PTR [rdi+r8*8]
   14001500f:	movsxd rdx,eax
   140015012:	mov    rcx,r11
   140015015:	shl    rdx,0x4
   140015019:	add    rdx,QWORD PTR [rbp+0x30]
   14001501d:	call   0x14000dd20
   140015022:	mov    rdi,rax
   140015025:	jmp    0x14001502a
   140015027:	mov    rdi,r12
   14001502a:	mov    rcx,QWORD PTR [rbp+0x28]
   14001502e:	movsxd rdx,DWORD PTR [rbp+0x10]
   140015032:	add    rdx,rdx
   140015035:	mov    eax,DWORD PTR [rcx+rdx*8]
   140015038:	mov    DWORD PTR [rdi+0x30],eax
   14001503b:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14001503f:	mov    DWORD PTR [rdi+0x34],eax
   140015042:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140015046:	mov    DWORD PTR [rdi+0x38],eax
   140015049:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14001504d:	mov    DWORD PTR [rdi+0x3c],eax
   140015050:	mov    eax,DWORD PTR [rbp+0x10]
   140015053:	inc    eax
   140015055:	movsxd rcx,eax
   140015058:	shl    rcx,0x4
   14001505c:	add    rcx,QWORD PTR [rbp+0x30]
   140015060:	call   QWORD PTR [rip+0xb3ea]        # 0x140020450
   140015066:	test   al,al
   140015068:	jne    0x140015093
   14001506a:	mov    rcx,QWORD PTR [rbp+0x28]
   14001506e:	movsxd rdx,DWORD PTR [rbp+0x10]
   140015072:	inc    rdx
   140015075:	add    rdx,rdx
   140015078:	mov    eax,DWORD PTR [rcx+rdx*8]
   14001507b:	mov    DWORD PTR [rdi+0x40],eax
   14001507e:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140015082:	mov    DWORD PTR [rdi+0x44],eax
   140015085:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140015089:	mov    DWORD PTR [rdi+0x48],eax
   14001508c:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140015090:	mov    DWORD PTR [rdi+0x4c],eax
   140015093:	mov    rcx,QWORD PTR [rbp+0x28]
   140015097:	movsxd rdx,DWORD PTR [rbp+0x10]
   14001509b:	add    rdx,0x2
   14001509f:	add    rdx,rdx
   1400150a2:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400150a5:	mov    DWORD PTR [rdi+0x50],eax
   1400150a8:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400150ac:	mov    DWORD PTR [rdi+0x54],eax
   1400150af:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400150b3:	mov    DWORD PTR [rdi+0x58],eax
   1400150b6:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400150ba:	mov    DWORD PTR [rdi+0x5c],eax
   1400150bd:	mov    rcx,QWORD PTR [rbp+0x28]
   1400150c1:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400150c5:	add    rdx,0x4
   1400150c9:	add    rdx,rdx
   1400150cc:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400150cf:	mov    DWORD PTR [rdi+0x60],eax
   1400150d2:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400150d6:	mov    DWORD PTR [rdi+0x64],eax
   1400150d9:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400150dd:	mov    DWORD PTR [rdi+0x68],eax
   1400150e0:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400150e4:	mov    DWORD PTR [rdi+0x6c],eax
   1400150e7:	mov    rcx,QWORD PTR [rbp+0x28]
   1400150eb:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400150ef:	add    rdx,0x5
   1400150f3:	add    rdx,rdx
   1400150f6:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400150f9:	mov    DWORD PTR [rdi+0x70],eax
   1400150fc:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140015100:	mov    DWORD PTR [rdi+0x74],eax
   140015103:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140015107:	mov    DWORD PTR [rdi+0x78],eax
   14001510a:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14001510e:	mov    DWORD PTR [rdi+0x7c],eax
   140015111:	mov    rcx,QWORD PTR [rbp+0x28]
   140015115:	movsxd rdx,DWORD PTR [rbp+0x10]
   140015119:	add    rdx,0x7
   14001511d:	add    rdx,rdx
   140015120:	mov    eax,DWORD PTR [rcx+rdx*8]
   140015123:	mov    DWORD PTR [rdi+0x80],eax
   140015129:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14001512d:	mov    DWORD PTR [rdi+0x84],eax
   140015133:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140015137:	mov    DWORD PTR [rdi+0x88],eax
   14001513d:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140015141:	mov    DWORD PTR [rdi+0x8c],eax
   140015147:	jmp    0x14000f9a9
   14001514c:	mov    rdx,QWORD PTR [rbp+0x8]
   140015150:	mov    ecx,0x90
   140015155:	call   0x14000e810
   14001515a:	mov    r13,rax
   14001515d:	test   rax,rax
   140015160:	je     0x1400151a7
   140015162:	mov    ecx,DWORD PTR [rbp+0x10]
   140015165:	bts    esi,0x8
   140015169:	lea    eax,[rcx+0x5]
   14001516c:	mov    DWORD PTR [rsp+0x30],esi
   140015170:	mov    rsi,QWORD PTR [rbp+0x18]
   140015174:	movsxd rbx,eax
   140015177:	lea    eax,[rcx+0x2]
   14001517a:	lea    rcx,[rsp+0x2f0]
   140015182:	movsxd rdi,eax
   140015185:	call   QWORD PTR [rip+0xb2d5]        # 0x140020460
   14001518b:	mov    r9,QWORD PTR [rsi+rbx*8]
   14001518f:	mov    r8,QWORD PTR [rsi+rdi*8]
   140015193:	mov    rcx,r13
   140015196:	mov    rdx,rax
   140015199:	call   0x14000dd20
   14001519e:	mov    esi,DWORD PTR [rsp+0x30]
   1400151a2:	mov    rdi,rax
   1400151a5:	jmp    0x1400151aa
   1400151a7:	mov    rdi,r12
   1400151aa:	bt     esi,0x8
   1400151ae:	jae    0x1400151c6
   1400151b0:	btr    esi,0x8
   1400151b4:	lea    rcx,[rsp+0x2f0]
   1400151bc:	mov    DWORD PTR [rsp+0x30],esi
   1400151c0:	call   QWORD PTR [rip+0xb292]        # 0x140020458
   1400151c6:	mov    rcx,QWORD PTR [rbp+0x28]
   1400151ca:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400151ce:	add    rdx,rdx
   1400151d1:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400151d4:	mov    DWORD PTR [rdi+0x30],eax
   1400151d7:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400151db:	mov    DWORD PTR [rdi+0x34],eax
   1400151de:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400151e2:	mov    DWORD PTR [rdi+0x38],eax
   1400151e5:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400151e9:	mov    DWORD PTR [rdi+0x3c],eax
   1400151ec:	mov    rcx,QWORD PTR [rbp+0x28]
   1400151f0:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400151f4:	inc    rdx
   1400151f7:	add    rdx,rdx
   1400151fa:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400151fd:	mov    DWORD PTR [rdi+0x50],eax
   140015200:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140015204:	mov    DWORD PTR [rdi+0x54],eax
   140015207:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14001520b:	mov    DWORD PTR [rdi+0x58],eax
   14001520e:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140015212:	mov    DWORD PTR [rdi+0x5c],eax
   140015215:	mov    rcx,QWORD PTR [rbp+0x28]
   140015219:	movsxd rdx,DWORD PTR [rbp+0x10]
   14001521d:	add    rdx,0x3
   140015221:	add    rdx,rdx
   140015224:	mov    eax,DWORD PTR [rcx+rdx*8]
   140015227:	mov    DWORD PTR [rdi+0x60],eax
   14001522a:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   14001522e:	mov    DWORD PTR [rdi+0x64],eax
   140015231:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   140015235:	mov    DWORD PTR [rdi+0x68],eax
   140015238:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   14001523c:	mov    DWORD PTR [rdi+0x6c],eax
   14001523f:	mov    rcx,QWORD PTR [rbp+0x28]
   140015243:	movsxd rdx,DWORD PTR [rbp+0x10]
   140015247:	add    rdx,0x4
   14001524b:	add    rdx,rdx
   14001524e:	mov    eax,DWORD PTR [rcx+rdx*8]
   140015251:	mov    DWORD PTR [rdi+0x70],eax
   140015254:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140015258:	mov    DWORD PTR [rdi+0x74],eax
   14001525b:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14001525f:	mov    DWORD PTR [rdi+0x78],eax
   140015262:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140015266:	mov    DWORD PTR [rdi+0x7c],eax
   140015269:	mov    rcx,QWORD PTR [rbp+0x28]
   14001526d:	movsxd rdx,DWORD PTR [rbp+0x10]
   140015271:	add    rdx,0x6
   140015275:	add    rdx,rdx
   140015278:	mov    eax,DWORD PTR [rcx+rdx*8]
   14001527b:	mov    DWORD PTR [rdi+0x80],eax
   140015281:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   140015285:	mov    DWORD PTR [rdi+0x84],eax
   14001528b:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   14001528f:	mov    DWORD PTR [rdi+0x88],eax
   140015295:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   140015299:	mov    DWORD PTR [rdi+0x8c],eax
   14001529f:	jmp    0x14000f9a9
   1400152a4:	mov    rdx,QWORD PTR [rbp+0x8]
   1400152a8:	mov    ecx,0x48
   1400152ad:	call   0x14000e810
   1400152b2:	test   rax,rax
   1400152b5:	je     0x1400152d0
   1400152b7:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400152bb:	mov    rcx,rax
   1400152be:	shl    rdx,0x4
   1400152c2:	add    rdx,QWORD PTR [rbp+0x30]
   1400152c6:	call   0x14000deb0
   1400152cb:	mov    rdi,rax
   1400152ce:	jmp    0x1400152d3
   1400152d0:	mov    rdi,r12
   1400152d3:	mov    rcx,QWORD PTR [rbp+0x28]
   1400152d7:	movsxd rdx,DWORD PTR [rbp+0x10]
   1400152db:	add    rdx,rdx
   1400152de:	mov    eax,DWORD PTR [rcx+rdx*8]
   1400152e1:	mov    DWORD PTR [rdi+0x38],eax
   1400152e4:	mov    eax,DWORD PTR [rcx+rdx*8+0x4]
   1400152e8:	mov    DWORD PTR [rdi+0x3c],eax
   1400152eb:	mov    eax,DWORD PTR [rcx+rdx*8+0x8]
   1400152ef:	mov    DWORD PTR [rdi+0x40],eax
   1400152f2:	mov    eax,DWORD PTR [rcx+rdx*8+0xc]
   1400152f6:	mov    DWORD PTR [rdi+0x44],eax
   1400152f9:	jmp    0x14000f9a9
   1400152fe:	mov    rdx,QWORD PTR [rbp+0x8]
   140015302:	mov    ecx,0x48
   140015307:	call   0x14000e810
   14001530c:	mov    rdi,rax
   14001530f:	test   rax,rax
   140015312:	je     0x1400129c9
   140015318:	movsxd rcx,DWORD PTR [rbp+0x10]
   14001531c:	mov    rdx,QWORD PTR [rbp+0x18]
   140015320:	mov    rdx,QWORD PTR [rdx+rcx*8]
   140015324:	lea    eax,[rcx+0x2]
   140015327:	mov    rcx,rdi
   14001532a:	movsxd r8,eax
   14001532d:	shl    r8,0x4
   140015331:	add    r8,QWORD PTR [rbp+0x30]
   140015335:	call   0x14000df10
   14001533a:	mov    rdi,rax
   14001533d:	jmp    0x1400129cc
   140015342:	mov    rax,QWORD PTR [rbp+0x18]
   140015346:	mov    rdx,QWORD PTR [rax+rdx*8]
   14001534a:	mov    rdi,QWORD PTR [rdx+0x20]
   14001534e:	mov    QWORD PTR [rdx+0x20],r12
   140015352:	movsxd rcx,DWORD PTR [rbp+0x10]
   140015356:	mov    rax,QWORD PTR [rbp+0x18]
   14001535a:	mov    QWORD PTR [rax+rcx*8],rdi
   14001535e:	jmp    0x140015510
   140015363:	mov    rdx,QWORD PTR [rbp+0x8]
   140015367:	mov    ecx,0x18
   14001536c:	call   0x14000e810
   140015371:	mov    rdi,rax
   140015374:	test   rax,rax
   140015377:	je     0x14000f9a6
   14001537d:	movsxd rcx,DWORD PTR [rbp+0x10]
   140015381:	mov    rax,QWORD PTR [rbp+0x18]
   140015385:	mov    rdx,QWORD PTR [rax+rcx*8]
   140015389:	lea    rcx,[rip+0xcf88]        # 0x140022318
   140015390:	mov    rax,QWORD PTR [rdx+0x18]
   140015394:	mov    QWORD PTR [rdx+0x18],r12
   140015398:	mov    QWORD PTR [rdi],rcx
   14001539b:	mov    QWORD PTR [rdi+0x10],rax
   14001539f:	mov    DWORD PTR [rdi+0x8],0x1d
   1400153a6:	jmp    0x14000f9a9
   1400153ab:	mov    rdx,QWORD PTR [rbp+0x8]
   1400153af:	mov    ecx,0x18
   1400153b4:	call   0x14000e810
   1400153b9:	mov    rdi,rax
   1400153bc:	test   rax,rax
   1400153bf:	je     0x14000f9a6
   1400153c5:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400153c9:	mov    rax,QWORD PTR [rbp+0x18]
   1400153cd:	mov    rdx,QWORD PTR [rax+rcx*8]
   1400153d1:	lea    rcx,[rip+0xcf90]        # 0x140022368
   1400153d8:	mov    rax,QWORD PTR [rdx+0x18]
   1400153dc:	mov    QWORD PTR [rdx+0x18],r12
   1400153e0:	mov    QWORD PTR [rdi],rcx
   1400153e3:	mov    QWORD PTR [rdi+0x10],rax
   1400153e7:	mov    DWORD PTR [rdi+0x8],0x32
   1400153ee:	jmp    0x14000f9a9
   1400153f3:	mov    rdx,QWORD PTR [rbp+0x8]
   1400153f7:	mov    ecx,0x20
   1400153fc:	call   0x14000e810
   140015401:	mov    rdi,rax
   140015404:	test   rax,rax
   140015407:	je     0x14000f9a6
   14001540d:	mov    rax,QWORD PTR [rbp+0x18]
   140015411:	movsxd rcx,DWORD PTR [rbp+0x10]
   140015415:	mov    rdx,QWORD PTR [rax+rcx*8]
   140015419:	lea    rax,[rip+0xcea8]        # 0x1400222c8
   140015420:	mov    QWORD PTR [rdi],rax
   140015423:	mov    QWORD PTR [rdi+0x10],rdx
   140015427:	mov    QWORD PTR [rdi+0x18],rdi
   14001542b:	mov    DWORD PTR [rdi+0x8],0x3a
   140015432:	jmp    0x14000f9a9
   140015437:	mov    rdx,QWORD PTR [rbp+0x8]
   14001543b:	mov    ecx,0x20
   140015440:	call   0x14000e810
   140015445:	mov    rdi,rax
   140015448:	test   rax,rax
   14001544b:	je     0x14000f9a6
   140015451:	mov    rax,QWORD PTR [rbp+0x18]
   140015455:	movsxd rcx,DWORD PTR [rbp+0x10]
   140015459:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   14001545e:	mov    rcx,QWORD PTR [rax+rcx*8]
   140015462:	lea    rax,[rip+0xce5f]        # 0x1400222c8
   140015469:	mov    QWORD PTR [rdi],rax
   14001546c:	mov    QWORD PTR [rdi+0x10],rdx
   140015470:	mov    DWORD PTR [rdi+0x8],0x3a
   140015477:	mov    rax,QWORD PTR [rcx+0x18]
   14001547b:	mov    QWORD PTR [rdi+0x18],rax
   14001547f:	mov    QWORD PTR [rcx+0x18],rdi
   140015483:	jmp    0x14000f9a9
   140015488:	mov    rdx,QWORD PTR [rbp+0x8]
   14001548c:	mov    ecx,0x18
   140015491:	call   0x14000e810
   140015496:	mov    rdi,rax
   140015499:	test   rax,rax
   14001549c:	je     0x14000f9a6
   1400154a2:	mov    rax,QWORD PTR [rbp+0x18]
   1400154a6:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400154aa:	mov    rdx,QWORD PTR [rax+rcx*8]
   1400154ae:	lea    rax,[rip+0xcf53]        # 0x140022408
   1400154b5:	mov    QWORD PTR [rdi],rax
   1400154b8:	mov    QWORD PTR [rdi+0x10],rdx
   1400154bc:	mov    DWORD PTR [rdi+0x8],0x3c
   1400154c3:	jmp    0x14000f9a9
   1400154c8:	mov    rdx,QWORD PTR [rbp+0x8]
   1400154cc:	mov    ecx,0x18
   1400154d1:	call   0x14000e810
   1400154d6:	mov    rdi,rax
   1400154d9:	test   rax,rax
   1400154dc:	je     0x14000f9a6
   1400154e2:	mov    rax,QWORD PTR [rbp+0x18]
   1400154e6:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400154ea:	mov    rdx,QWORD PTR [rax+rcx*8]
   1400154ee:	lea    rax,[rip+0xcec3]        # 0x1400223b8
   1400154f5:	mov    QWORD PTR [rdi],rax
   1400154f8:	mov    QWORD PTR [rdi+0x10],rdx
   1400154fc:	mov    DWORD PTR [rdi+0x8],0x20
   140015503:	jmp    0x14000f9a9
   140015508:	mov    rax,QWORD PTR [rbp+0x18]
   14001550c:	mov    QWORD PTR [rax+rdx*8],r12
   140015510:	mov    rax,QWORD PTR [rbp+0x20]
   140015514:	movsxd rcx,DWORD PTR [rbp+0x10]
   140015518:	movsx  edi,WORD PTR [r9+r14*2+0x233b0]
   140015521:	movsxd rdx,DWORD PTR [rax+rcx*4]
   140015525:	sub    edi,0x6a
   140015528:	movsx  eax,WORD PTR [r9+rdx*2+0x244a4]
   140015531:	add    eax,edi
   140015533:	js     0x140015550
   140015535:	movsxd rcx,eax
   140015538:	movsx  eax,WORD PTR [r9+rcx*2+0x27db4]
   140015541:	cmp    eax,edi
   140015543:	jne    0x140015550
   140015545:	movsx  r13d,WORD PTR [r9+rcx*2+0x26174]
   14001554e:	jmp    0x14001555c
   140015550:	movsxd rax,edi
   140015553:	movsx  r13d,WORD PTR [r9+rax*2+0x23e90]
   14001555c:	mov    rbx,QWORD PTR [rsp+0x38]
   140015561:	lea    r14,[rbp+0x78]
   140015565:	test   r13d,r13d
   140015568:	jne    0x14000f5c7
   14001556e:	mov    rax,QWORD PTR [rbp+0x110]
   140015575:	cmp    QWORD PTR [rbp+0x108],rax
   14001557c:	jne    0x1400162e8
   140015582:	movsxd rcx,DWORD PTR [rbp+0x10]
   140015586:	mov    rax,QWORD PTR [rbp+0x20]
   14001558a:	movsxd r13,DWORD PTR [rax+rcx*4]
   14001558e:	cmp    r15d,0xffffffff
   140015592:	je     0x1400156b4
   140015598:	movsx  eax,WORD PTR [r9+r13*2+0x23f70]
   1400155a1:	add    eax,0x3e
   1400155a4:	js     0x1400155c0
   1400155a6:	movsxd rcx,eax
   1400155a9:	cmp    WORD PTR [r9+rcx*2+0x26620],0x3e
   1400155b3:	jne    0x1400155c0
   1400155b5:	movsx  eax,WORD PTR [r9+rcx*2+0x249e0]
   1400155be:	jmp    0x1400155cb
   1400155c0:	movsx  eax,WORD PTR [r9+r13*2+0x23950]
   1400155c9:	neg    eax
   1400155cb:	test   eax,eax
   1400155cd:	je     0x1400155e5
   1400155cf:	mov    edx,r15d
   1400155d2:	mov    rcx,rbx
   1400155d5:	call   0x140018440
   1400155da:	test   al,al
   1400155dc:	jne    0x140015620
   1400155de:	lea    r9,[rip+0xfffffffffffeaa1b]        # 0x140000000
   1400155e5:	movsx  eax,WORD PTR [r9+r13*2+0x23f70]
   1400155ee:	add    eax,0x59
   1400155f1:	js     0x14001560d
   1400155f3:	movsxd rcx,eax
   1400155f6:	cmp    WORD PTR [r9+rcx*2+0x26620],0x59
   140015600:	jne    0x14001560d
   140015602:	movsx  eax,WORD PTR [r9+rcx*2+0x249e0]
   14001560b:	jmp    0x140015618
   14001560d:	movsx  eax,WORD PTR [r9+r13*2+0x23950]
   140015616:	neg    eax
   140015618:	test   eax,eax
   14001561a:	je     0x1400156b4
   140015620:	mov    DWORD PTR [r14],r15d
   140015623:	mov    rax,QWORD PTR [rbp+0x40]
   140015627:	lea    rdx,[rbp+0x48]
   14001562b:	lea    rcx,[r14+0x20]
   14001562f:	mov    QWORD PTR [r14+0x8],rax
   140015633:	call   QWORD PTR [rip+0xadff]        # 0x140020438
   140015639:	mov    eax,DWORD PTR [rbp+0x58]
   14001563c:	mov    r15d,0x3d
   140015642:	mov    DWORD PTR [r14+0x10],eax
   140015646:	mov    eax,DWORD PTR [rbp+0x5c]
   140015649:	mov    DWORD PTR [r14+0x14],eax
   14001564d:	mov    eax,DWORD PTR [rbp+0x60]
   140015650:	mov    DWORD PTR [r14+0x18],eax
   140015654:	mov    eax,DWORD PTR [rbp+0x64]
   140015657:	mov    DWORD PTR [r14+0x1c],eax
   14001565b:	mov    eax,DWORD PTR [rbp+0x68]
   14001565e:	mov    DWORD PTR [rbp+0x58],eax
   140015661:	mov    eax,DWORD PTR [rbp+0x6c]
   140015664:	mov    DWORD PTR [rbp+0x5c],eax
   140015667:	mov    eax,DWORD PTR [rbp+0x70]
   14001566a:	mov    DWORD PTR [rbp+0x60],eax
   14001566d:	mov    eax,DWORD PTR [rbp+0x74]
   140015670:	mov    DWORD PTR [rbp+0x64],eax
   140015673:	mov    eax,DWORD PTR [rbp+0x5c]
   140015676:	add    DWORD PTR [rbp+0x58],eax
   140015679:	mov    eax,DWORD PTR [rbp+0x5c]
   14001567c:	add    DWORD PTR [rbp+0x64],eax
   14001567f:	mov    DWORD PTR [rbp+0x5c],r12d
   140015683:	lea    rax,[rbp+0xa8]
   14001568a:	mov    QWORD PTR [rbp+0x108],r14
   140015691:	mov    QWORD PTR [rbp+0x40],r12
   140015695:	mov    QWORD PTR [rbp+0x110],rax
   14001569c:	lea    r9,[rip+0xfffffffffffea95d]        # 0x140000000
   1400156a3:	mov    edx,0xffffff96
   1400156a8:	lea    rdi,[rip+0xd391]        # 0x140022a40
   1400156af:	jmp    0x14000f660
   1400156b4:	mov    DWORD PTR [r14],r15d
   1400156b7:	mov    rax,QWORD PTR [rbp+0x40]
   1400156bb:	lea    rcx,[rbp+0x98]
   1400156c2:	lea    rdx,[rbp+0x48]
   1400156c6:	mov    BYTE PTR [rsp+0x418],0x1
   1400156ce:	mov    QWORD PTR [rbp+0x80],rax
   1400156d5:	call   QWORD PTR [rip+0xad5d]        # 0x140020438
   1400156db:	mov    eax,DWORD PTR [rbp+0x58]
   1400156de:	mov    rcx,rbx
   1400156e1:	mov    DWORD PTR [rbp+0x88],eax
   1400156e7:	mov    eax,DWORD PTR [rbp+0x5c]
   1400156ea:	mov    DWORD PTR [rbp+0x8c],eax
   1400156f0:	mov    eax,DWORD PTR [rbp+0x60]
   1400156f3:	mov    DWORD PTR [rbp+0x90],eax
   1400156f9:	mov    eax,DWORD PTR [rbp+0x64]
   1400156fc:	mov    DWORD PTR [rbp+0x94],eax
   140015702:	call   0x14001aef0
   140015707:	lea    rdx,[rbx+0x20]
   14001570b:	mov    DWORD PTR [rbp+0xa8],eax
   140015711:	lea    rcx,[rsp+0x1c0]
   140015719:	mov    r15d,eax
   14001571c:	movsd  xmm0,QWORD PTR [rbx+0x68]
   140015721:	movsd  QWORD PTR [rbp+0x40],xmm0
   140015726:	movsd  QWORD PTR [rbp+0xb0],xmm0
   14001572e:	call   QWORD PTR [rip+0xacfc]        # 0x140020430
   140015734:	lea    rdx,[rsp+0x1c0]
   14001573c:	lea    rcx,[rbp+0x48]
   140015740:	call   QWORD PTR [rip+0xacf2]        # 0x140020438
   140015746:	lea    rcx,[rbp+0xc8]
   14001574d:	mov    rdx,rax
   140015750:	call   QWORD PTR [rip+0xace2]        # 0x140020438
   140015756:	lea    rcx,[rsp+0x1c0]
   14001575e:	call   QWORD PTR [rip+0xacf4]        # 0x140020458
   140015764:	lea    rcx,[rsp+0x3a0]
   14001576c:	mov    rdx,rbx
   14001576f:	call   0x14000e610
   140015774:	lea    r8,[rip+0xfffffffffffea885]        # 0x140000000
   14001577b:	mov    rdx,rax
   14001577e:	mov    eax,DWORD PTR [rax]
   140015780:	mov    DWORD PTR [rbp+0x58],eax
   140015783:	mov    eax,DWORD PTR [rdx+0x4]
   140015786:	mov    DWORD PTR [rbp+0x5c],eax
   140015789:	mov    eax,DWORD PTR [rdx+0x8]
   14001578c:	mov    DWORD PTR [rbp+0x60],eax
   14001578f:	mov    eax,DWORD PTR [rdx+0xc]
   140015792:	mov    DWORD PTR [rbp+0x64],eax
   140015795:	mov    eax,DWORD PTR [rdx]
   140015797:	mov    DWORD PTR [rbp+0xb8],eax
   14001579d:	mov    eax,DWORD PTR [rdx+0x4]
   1400157a0:	mov    DWORD PTR [rbp+0xbc],eax
   1400157a6:	mov    eax,DWORD PTR [rdx+0x8]
   1400157a9:	mov    DWORD PTR [rbp+0xc0],eax
   1400157af:	mov    eax,DWORD PTR [rdx+0xc]
   1400157b2:	mov    DWORD PTR [rbp+0xc4],eax
   1400157b8:	movsx  eax,WORD PTR [r8+r13*2+0x23f70]
   1400157c1:	add    eax,r15d
   1400157c4:	js     0x1400157e2
   1400157c6:	movsxd rcx,eax
   1400157c9:	movsx  eax,WORD PTR [r8+rcx*2+0x26620]
   1400157d2:	cmp    eax,r15d
   1400157d5:	jne    0x1400157e2
   1400157d7:	movsx  eax,WORD PTR [r8+rcx*2+0x249e0]
   1400157e0:	jmp    0x1400157ed
   1400157e2:	movsx  eax,WORD PTR [r8+r13*2+0x23950]
   1400157eb:	neg    eax
   1400157ed:	test   eax,eax
   1400157ef:	je     0x140015a03
   1400157f5:	lea    rcx,[rsp+0x50]
   1400157fa:	call   QWORD PTR [rip+0xad98]        # 0x140020598
   140015800:	movsxd rdx,DWORD PTR [r14]
   140015803:	cmp    edx,0x69
   140015806:	ja     0x140015906
   14001580c:	mov    rax,rdx
   14001580f:	lea    rdx,[rip+0xfffffffffffea7ea]        # 0x140000000
   140015816:	mov    rdx,QWORD PTR [rdx+rax*8+0x23060]
   14001581e:	test   rdx,rdx
   140015821:	je     0x14001583d
   140015823:	or     rcx,0xffffffffffffffff
   140015827:	xor    eax,eax
   140015829:	mov    rdi,rdx
   14001582c:	repnz scas al,BYTE PTR es:[rdi]
   14001582e:	not    rcx
   140015831:	dec    rcx
   140015834:	mov    DWORD PTR [rsp+0x180],ecx
   14001583b:	jmp    0x140015845
   14001583d:	mov    DWORD PTR [rsp+0x180],r12d
   140015845:	mov    QWORD PTR [rsp+0x188],rdx
   14001584d:	movaps xmm0,XMMWORD PTR [rsp+0x180]
   140015855:	lea    rcx,[rsp+0x100]
   14001585d:	lea    rdx,[rsp+0x330]
   140015865:	movdqa XMMWORD PTR [rsp+0x330],xmm0
   14001586e:	call   QWORD PTR [rip+0xacc4]        # 0x140020538
   140015874:	lea    rcx,[rsp+0x410]
   14001587c:	mov    dl,0x20
   14001587e:	call   QWORD PTR [rip+0xaf0c]        # 0x140020790
   140015884:	lea    r8,[rip+0xd19d]        # 0x140022a28
   14001588b:	lea    rdx,[rip+0xd186]        # 0x140022a18
   140015892:	lea    rcx,[rsp+0x168]
   14001589a:	xor    r9d,r9d
   14001589d:	mov    DWORD PTR [rsp+0x20],0xffffffff
   1400158a5:	mov    rdi,rax
   1400158a8:	call   QWORD PTR [rip+0xab9a]        # 0x140020448
   1400158ae:	lea    r8,[rsp+0x100]
   1400158b6:	mov    rcx,rax
   1400158b9:	movzx  eax,WORD PTR [rdi]
   1400158bc:	lea    rdx,[rsp+0x170]
   1400158c4:	xor    r9d,r9d
   1400158c7:	mov    WORD PTR [rsp+0x20],ax
   1400158cc:	call   QWORD PTR [rip+0xab6e]        # 0x140020440
   1400158d2:	lea    rcx,[rsp+0x50]
   1400158d7:	mov    rdx,rax
   1400158da:	call   QWORD PTR [rip+0xac88]        # 0x140020568
   1400158e0:	lea    rcx,[rsp+0x170]
   1400158e8:	call   QWORD PTR [rip+0xae92]        # 0x140020780
   1400158ee:	lea    rcx,[rsp+0x168]
   1400158f6:	call   QWORD PTR [rip+0xae84]        # 0x140020780
   1400158fc:	lea    rcx,[rsp+0x100]
   140015904:	jmp    0x140015943
   140015906:	lea    r8,[rip+0xd0fb]        # 0x140022a08
   14001590d:	lea    rdx,[rip+0xd104]        # 0x140022a18
   140015914:	lea    rcx,[rsp+0x160]
   14001591c:	xor    r9d,r9d
   14001591f:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140015927:	call   QWORD PTR [rip+0xab1b]        # 0x140020448
   14001592d:	lea    rcx,[rsp+0x50]
   140015932:	mov    rdx,rax
   140015935:	call   QWORD PTR [rip+0xac2d]        # 0x140020568
   14001593b:	lea    rcx,[rsp+0x160]
   140015943:	call   QWORD PTR [rip+0xae37]        # 0x140020780
   140015949:	mov    DWORD PTR [rsp+0x1a0],0x1
   140015954:	mov    eax,DWORD PTR [rbp+0x88]
   14001595a:	lea    rcx,[rsp+0x1a4]
   140015962:	lea    rdx,[rsp+0x50]
   140015967:	mov    DWORD PTR [rcx],eax
   140015969:	mov    eax,DWORD PTR [rbp+0x8c]
   14001596f:	mov    DWORD PTR [rcx+0x4],eax
   140015972:	mov    eax,DWORD PTR [rbp+0x90]
   140015978:	mov    DWORD PTR [rcx+0x8],eax
   14001597b:	mov    eax,DWORD PTR [rbp+0x94]
   140015981:	mov    DWORD PTR [rcx+0xc],eax
   140015984:	lea    rcx,[rsp+0x1b8]
   14001598c:	call   QWORD PTR [rip+0xae06]        # 0x140020798
   140015992:	mov    rax,QWORD PTR [rbp+0x118]
   140015999:	mov    ecx,DWORD PTR [rax]
   14001599b:	cmp    ecx,0x1
   14001599e:	je     0x1400159bd
   1400159a0:	test   ecx,ecx
   1400159a2:	je     0x1400159bd
   1400159a4:	lea    rcx,[rbp+0x118]
   1400159ab:	mov    edx,0x7fffffff
   1400159b0:	mov    r8d,0x1
   1400159b6:	call   0x14000f090
   1400159bb:	jmp    0x1400159ca
   1400159bd:	lea    rcx,[rbp+0x118]
   1400159c4:	call   QWORD PTR [rip+0xac6e]        # 0x140020638
   1400159ca:	lea    r8,[rsp+0x1a0]
   1400159d2:	lea    rcx,[rbp+0x118]
   1400159d9:	mov    rdx,rax
   1400159dc:	call   0x14000e790
   1400159e1:	lea    rcx,[rsp+0x1b8]
   1400159e9:	call   QWORD PTR [rip+0xad91]        # 0x140020780
   1400159ef:	lea    rcx,[rsp+0x50]
   1400159f4:	call   QWORD PTR [rip+0xad86]        # 0x140020780
   1400159fa:	mov    esi,DWORD PTR [rsp+0x30]
   1400159fe:	jmp    0x14001569c
   140015a03:	mov    ecx,DWORD PTR [rip+0x1cb07]        # 0x140032510
   140015a09:	lea    rbx,[rip+0x1cb00]        # 0x140032510
   140015a10:	test   ecx,ecx
   140015a12:	je     0x140015a9d
   140015a18:	movsx  edi,WORD PTR [r8+r13*2+0x23f70]
   140015a21:	lea    eax,[rdi+rcx*1]
   140015a24:	test   eax,eax
   140015a26:	js     0x140015a43
   140015a28:	movsxd rdx,eax
   140015a2b:	movsx  eax,WORD PTR [r8+rdx*2+0x26620]
   140015a34:	cmp    eax,ecx
   140015a36:	jne    0x140015a43
   140015a38:	movsx  eax,WORD PTR [r8+rdx*2+0x249e0]
   140015a41:	jmp    0x140015a4e
   140015a43:	movsx  eax,WORD PTR [r8+r13*2+0x23950]
   140015a4c:	neg    eax
   140015a4e:	test   eax,eax
   140015a50:	jle    0x140015a92
   140015a52:	movsxd rdx,eax
   140015a55:	movsx  eax,WORD PTR [r8+rdx*2+0x23f70]
   140015a5e:	add    eax,r15d
   140015a61:	js     0x140015a7f
   140015a63:	movsxd rcx,eax
   140015a66:	movsx  eax,WORD PTR [r8+rcx*2+0x26620]
   140015a6f:	cmp    eax,r15d
   140015a72:	jne    0x140015a7f
   140015a74:	movsx  eax,WORD PTR [r8+rcx*2+0x249e0]
   140015a7d:	jmp    0x140015a8a
   140015a7f:	movsx  eax,WORD PTR [r8+rdx*2+0x23950]
   140015a88:	neg    eax
   140015a8a:	test   eax,eax
   140015a8c:	jne    0x140015b14
   140015a92:	mov    ecx,DWORD PTR [rbx+0x4]
   140015a95:	add    rbx,0x4
   140015a99:	test   ecx,ecx
   140015a9b:	jne    0x140015a21
   140015a9d:	mov    ebx,0x1
   140015aa2:	mov    rdi,rbx
   140015aa5:	cmp    rdi,0x6a
   140015aa9:	jge    0x140016212
   140015aaf:	cmp    rdi,0x3e
   140015ab3:	je     0x140015d1a
   140015ab9:	cmp    rdi,0x62
   140015abd:	je     0x140015d1a
   140015ac3:	cmp    rdi,0x64
   140015ac7:	je     0x140015d1a
   140015acd:	cmp    rdi,0x65
   140015ad1:	je     0x140015d1a
   140015ad7:	cmp    rdi,0x66
   140015adb:	je     0x140015d1a
   140015ae1:	movsx  eax,WORD PTR [r8+r13*2+0x23f70]
   140015aea:	add    eax,ebx
   140015aec:	js     0x140015cf8
   140015af2:	movsxd rcx,eax
   140015af5:	movsx  eax,WORD PTR [r8+rcx*2+0x26620]
   140015afe:	cmp    eax,ebx
   140015b00:	jne    0x140015cf8
   140015b06:	movsx  ecx,WORD PTR [r8+rcx*2+0x249e0]
   140015b0f:	jmp    0x140015d03
   140015b14:	movsxd rax,DWORD PTR [rbx]
   140015b17:	mov    rdx,QWORD PTR [r8+rax*8+0x23060]
   140015b1f:	test   rdx,rdx
   140015b22:	je     0x140015b3e
   140015b24:	or     rcx,0xffffffffffffffff
   140015b28:	xor    eax,eax
   140015b2a:	mov    rdi,rdx
   140015b2d:	repnz scas al,BYTE PTR es:[rdi]
   140015b2f:	not    rcx
   140015b32:	dec    rcx
   140015b35:	mov    DWORD PTR [rsp+0x110],ecx
   140015b3c:	jmp    0x140015b46
   140015b3e:	mov    DWORD PTR [rsp+0x110],r12d
   140015b46:	mov    QWORD PTR [rsp+0x118],rdx
   140015b4e:	movaps xmm0,XMMWORD PTR [rsp+0x110]
   140015b56:	lea    rcx,[rsp+0xd8]
   140015b5e:	lea    rdx,[rsp+0x350]
   140015b66:	movdqa XMMWORD PTR [rsp+0x350],xmm0
   140015b6f:	call   QWORD PTR [rip+0xa9c3]        # 0x140020538
   140015b75:	lea    rcx,[rsp+0x420]
   140015b7d:	mov    dl,0x20
   140015b7f:	call   QWORD PTR [rip+0xac0b]        # 0x140020790
   140015b85:	lea    r8,[rip+0xce64]        # 0x1400229f0
   140015b8c:	lea    rdx,[rip+0xce85]        # 0x140022a18
   140015b93:	lea    rcx,[rsp+0x128]
   140015b9b:	xor    r9d,r9d
   140015b9e:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140015ba6:	mov    rdi,rax
   140015ba9:	call   QWORD PTR [rip+0xa899]        # 0x140020448
   140015baf:	lea    r8,[rsp+0xd8]
   140015bb7:	mov    rcx,rax
   140015bba:	movzx  eax,WORD PTR [rdi]
   140015bbd:	lea    rdx,[rsp+0xa0]
   140015bc5:	xor    r9d,r9d
   140015bc8:	mov    WORD PTR [rsp+0x20],ax
   140015bcd:	call   QWORD PTR [rip+0xa86d]        # 0x140020440
   140015bd3:	lea    rcx,[rsp+0x128]
   140015bdb:	call   QWORD PTR [rip+0xab9f]        # 0x140020780
   140015be1:	lea    rcx,[rsp+0xd8]
   140015be9:	call   QWORD PTR [rip+0xab91]        # 0x140020780
   140015bef:	mov    DWORD PTR [rsp+0x1f0],0x1
   140015bfa:	mov    eax,DWORD PTR [rbp+0x88]
   140015c00:	lea    rcx,[rsp+0x1f4]
   140015c08:	lea    rdx,[rsp+0xa0]
   140015c10:	mov    DWORD PTR [rcx],eax
   140015c12:	mov    eax,DWORD PTR [rbp+0x8c]
   140015c18:	mov    DWORD PTR [rcx+0x4],eax
   140015c1b:	mov    eax,DWORD PTR [rbp+0x90]
   140015c21:	mov    DWORD PTR [rcx+0x8],eax
   140015c24:	mov    eax,DWORD PTR [rbp+0x94]
   140015c2a:	mov    DWORD PTR [rcx+0xc],eax
   140015c2d:	lea    rcx,[rsp+0x208]
   140015c35:	call   QWORD PTR [rip+0xab5d]        # 0x140020798
   140015c3b:	mov    rax,QWORD PTR [rbp+0x118]
   140015c42:	mov    ecx,DWORD PTR [rax]
   140015c44:	cmp    ecx,0x1
   140015c47:	je     0x140015c66
   140015c49:	test   ecx,ecx
   140015c4b:	je     0x140015c66
   140015c4d:	lea    rcx,[rbp+0x118]
   140015c54:	mov    edx,0x7fffffff
   140015c59:	mov    r8d,0x1
   140015c5f:	call   0x14000f090
   140015c64:	jmp    0x140015c73
   140015c66:	lea    rcx,[rbp+0x118]
   140015c6d:	call   QWORD PTR [rip+0xa9c5]        # 0x140020638
   140015c73:	lea    r8,[rsp+0x1f0]
   140015c7b:	lea    rcx,[rbp+0x118]
   140015c82:	mov    rdx,rax
   140015c85:	call   0x14000e790
   140015c8a:	lea    rcx,[rsp+0x208]
   140015c92:	call   QWORD PTR [rip+0xaae8]        # 0x140020780
   140015c98:	mov    r15d,DWORD PTR [rbx]
   140015c9b:	mov    QWORD PTR [rbp+0x40],r12
   140015c9f:	mov    eax,DWORD PTR [rbp+0x88]
   140015ca5:	lea    rcx,[rsp+0xa0]
   140015cad:	mov    DWORD PTR [rbp+0x58],eax
   140015cb0:	mov    eax,DWORD PTR [rbp+0x8c]
   140015cb6:	mov    DWORD PTR [rbp+0x5c],eax
   140015cb9:	mov    eax,DWORD PTR [rbp+0x90]
   140015cbf:	mov    DWORD PTR [rbp+0x60],eax
   140015cc2:	mov    eax,DWORD PTR [rbp+0x94]
   140015cc8:	mov    DWORD PTR [rbp+0x64],eax
   140015ccb:	mov    DWORD PTR [rbp+0x5c],r12d
   140015ccf:	lea    rax,[rbp+0xd8]
   140015cd6:	mov    QWORD PTR [rbp+0x108],r14
   140015cdd:	mov    QWORD PTR [rbp+0x110],rax
   140015ce4:	call   QWORD PTR [rip+0xaa96]        # 0x140020780
   140015cea:	mov    esi,DWORD PTR [rsp+0x30]
   140015cee:	mov    rbx,QWORD PTR [rsp+0x38]
   140015cf3:	jmp    0x14001569c
   140015cf8:	movsx  ecx,WORD PTR [r8+r13*2+0x23950]
   140015d01:	neg    ecx
   140015d03:	test   ecx,ecx
   140015d05:	jle    0x140015d1a
   140015d07:	mov    edx,r15d
   140015d0a:	call   0x14000cd90
   140015d0f:	test   eax,eax
   140015d11:	jne    0x140015d24
   140015d13:	lea    r8,[rip+0xfffffffffffea2e6]        # 0x140000000
   140015d1a:	inc    ebx
   140015d1c:	inc    rdi
   140015d1f:	jmp    0x140015aa5
   140015d24:	lea    rdx,[rip+0xfffffffffffea2d5]        # 0x140000000
   140015d2b:	mov    rdx,QWORD PTR [rdx+rdi*8+0x23060]
   140015d33:	test   rdx,rdx
   140015d36:	je     0x140015d52
   140015d38:	or     rcx,0xffffffffffffffff
   140015d3c:	xor    eax,eax
   140015d3e:	mov    rdi,rdx
   140015d41:	repnz scas al,BYTE PTR es:[rdi]
   140015d43:	not    rcx
   140015d46:	dec    rcx
   140015d49:	mov    DWORD PTR [rsp+0x150],ecx
   140015d50:	jmp    0x140015d5a
   140015d52:	mov    DWORD PTR [rsp+0x150],r12d
   140015d5a:	mov    QWORD PTR [rsp+0x158],rdx
   140015d62:	movaps xmm0,XMMWORD PTR [rsp+0x150]
   140015d6a:	lea    rcx,[rsp+0xf8]
   140015d72:	lea    rdx,[rsp+0x70]
   140015d77:	movdqa XMMWORD PTR [rsp+0x70],xmm0
   140015d7d:	call   QWORD PTR [rip+0xa7b5]        # 0x140020538
   140015d83:	lea    rcx,[rsp+0x428]
   140015d8b:	mov    dl,0x20
   140015d8d:	call   QWORD PTR [rip+0xa9fd]        # 0x140020790
   140015d93:	lea    r8,[rip+0xcc56]        # 0x1400229f0
   140015d9a:	lea    rdx,[rip+0xcc77]        # 0x140022a18
   140015da1:	lea    rcx,[rsp+0x138]
   140015da9:	xor    r9d,r9d
   140015dac:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140015db4:	mov    rdi,rax
   140015db7:	call   QWORD PTR [rip+0xa68b]        # 0x140020448
   140015dbd:	lea    r8,[rsp+0xf8]
   140015dc5:	mov    rcx,rax
   140015dc8:	movzx  eax,WORD PTR [rdi]
   140015dcb:	lea    rdx,[rsp+0xc8]
   140015dd3:	xor    r9d,r9d
   140015dd6:	mov    WORD PTR [rsp+0x20],ax
   140015ddb:	call   QWORD PTR [rip+0xa65f]        # 0x140020440
   140015de1:	lea    rcx,[rsp+0x138]
   140015de9:	call   QWORD PTR [rip+0xa991]        # 0x140020780
   140015def:	lea    rcx,[rsp+0xf8]
   140015df7:	call   QWORD PTR [rip+0xa983]        # 0x140020780
   140015dfd:	mov    DWORD PTR [rsp+0x270],0x1
   140015e08:	mov    eax,DWORD PTR [rbp+0x88]
   140015e0e:	lea    rcx,[rsp+0x274]
   140015e16:	lea    rdx,[rsp+0xc8]
   140015e1e:	mov    DWORD PTR [rcx],eax
   140015e20:	mov    eax,DWORD PTR [rbp+0x8c]
   140015e26:	mov    DWORD PTR [rcx+0x4],eax
   140015e29:	mov    eax,DWORD PTR [rbp+0x90]
   140015e2f:	mov    DWORD PTR [rcx+0x8],eax
   140015e32:	mov    eax,DWORD PTR [rbp+0x94]
   140015e38:	mov    DWORD PTR [rcx+0xc],eax
   140015e3b:	lea    rcx,[rsp+0x288]
   140015e43:	call   QWORD PTR [rip+0xa94f]        # 0x140020798
   140015e49:	lea    rcx,[rbp+0x118]
   140015e50:	lea    rdx,[rsp+0x270]
   140015e58:	call   0x14000f2e0
   140015e5d:	lea    rcx,[rsp+0x288]
   140015e65:	call   QWORD PTR [rip+0xa915]        # 0x140020780
   140015e6b:	mov    QWORD PTR [rbp+0x40],r12
   140015e6f:	mov    eax,DWORD PTR [rbp+0x88]
   140015e75:	mov    DWORD PTR [rbp+0x58],eax
   140015e78:	mov    eax,DWORD PTR [rbp+0x8c]
   140015e7e:	lea    rcx,[rsp+0xc8]
   140015e86:	mov    DWORD PTR [rbp+0x5c],eax
   140015e89:	mov    eax,DWORD PTR [rbp+0x90]
   140015e8f:	mov    r15d,ebx
   140015e92:	mov    DWORD PTR [rbp+0x60],eax
   140015e95:	mov    eax,DWORD PTR [rbp+0x94]
   140015e9b:	mov    DWORD PTR [rbp+0x64],eax
   140015e9e:	mov    DWORD PTR [rbp+0x5c],r12d
   140015ea2:	call   QWORD PTR [rip+0xa8d8]        # 0x140020780
   140015ea8:	mov    esi,DWORD PTR [rsp+0x30]
   140015eac:	mov    rbx,QWORD PTR [rsp+0x38]
   140015eb1:	jmp    0x14001569c
   140015eb6:	movzx  eax,BYTE PTR [rsp+0x418]
   140015ebe:	dec    DWORD PTR [rbp+0x10]
   140015ec1:	test   al,al
   140015ec3:	sete   al
   140015ec6:	jmp    0x1400162ea
   140015ecb:	or     rcx,0xffffffffffffffff
   140015ecf:	lea    rdx,[rip+0xcafa]        # 0x1400229d0
   140015ed6:	xor    eax,eax
   140015ed8:	mov    rdi,rdx
   140015edb:	mov    QWORD PTR [rsp+0x48],rdx
   140015ee0:	lea    rdx,[rsp+0x70]
   140015ee5:	repnz scas al,BYTE PTR es:[rdi]
   140015ee7:	not    rcx
   140015eea:	dec    rcx
   140015eed:	mov    DWORD PTR [rsp+0x40],ecx
   140015ef1:	lea    rcx,[rsp+0xe8]
   140015ef9:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140015efe:	movdqa XMMWORD PTR [rsp+0x70],xmm0
   140015f04:	call   QWORD PTR [rip+0xa62e]        # 0x140020538
   140015f0a:	movsxd rdx,DWORD PTR [rbp+0x10]
   140015f0e:	lea    rcx,[rsp+0x234]
   140015f16:	shl    rdx,0x4
   140015f1a:	add    rdx,QWORD PTR [rbp+0x28]
   140015f1e:	mov    DWORD PTR [rsp+0x230],0x1
   140015f29:	mov    eax,DWORD PTR [rdx]
   140015f2b:	mov    DWORD PTR [rcx],eax
   140015f2d:	mov    eax,DWORD PTR [rdx+0x4]
   140015f30:	mov    DWORD PTR [rcx+0x4],eax
   140015f33:	mov    eax,DWORD PTR [rdx+0x8]
   140015f36:	mov    DWORD PTR [rcx+0x8],eax
   140015f39:	mov    eax,DWORD PTR [rdx+0xc]
   140015f3c:	lea    rdx,[rsp+0xe8]
   140015f44:	mov    DWORD PTR [rcx+0xc],eax
   140015f47:	lea    rcx,[rsp+0x248]
   140015f4f:	call   QWORD PTR [rip+0xa843]        # 0x140020798
   140015f55:	lea    rcx,[rbp+0x118]
   140015f5c:	lea    rdx,[rsp+0x230]
   140015f64:	call   0x14000f2e0
   140015f69:	lea    rcx,[rsp+0x248]
   140015f71:	call   QWORD PTR [rip+0xa809]        # 0x140020780
   140015f77:	lea    rcx,[rsp+0xe8]
   140015f7f:	jmp    0x1400162e2
   140015f84:	or     rcx,0xffffffffffffffff
   140015f88:	lea    rdx,[rip+0xca09]        # 0x140022998
   140015f8f:	xor    eax,eax
   140015f91:	mov    rdi,rdx
   140015f94:	mov    QWORD PTR [rsp+0x48],rdx
   140015f99:	lea    rdx,[rsp+0x70]
   140015f9e:	repnz scas al,BYTE PTR es:[rdi]
   140015fa0:	not    rcx
   140015fa3:	dec    rcx
   140015fa6:	mov    DWORD PTR [rsp+0x40],ecx
   140015faa:	lea    rcx,[rsp+0xa8]
   140015fb2:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140015fb7:	movdqa XMMWORD PTR [rsp+0x70],xmm0
   140015fbd:	call   QWORD PTR [rip+0xa575]        # 0x140020538
   140015fc3:	movsxd rdx,DWORD PTR [rbp+0x10]
   140015fc7:	lea    rcx,[rsp+0x254]
   140015fcf:	shl    rdx,0x4
   140015fd3:	add    rdx,QWORD PTR [rbp+0x28]
   140015fd7:	mov    DWORD PTR [rsp+0x250],0x1
   140015fe2:	mov    eax,DWORD PTR [rdx]
   140015fe4:	mov    DWORD PTR [rcx],eax
   140015fe6:	mov    eax,DWORD PTR [rdx+0x4]
   140015fe9:	mov    DWORD PTR [rcx+0x4],eax
   140015fec:	mov    eax,DWORD PTR [rdx+0x8]
   140015fef:	mov    DWORD PTR [rcx+0x8],eax
   140015ff2:	mov    eax,DWORD PTR [rdx+0xc]
   140015ff5:	lea    rdx,[rsp+0xa8]
   140015ffd:	mov    DWORD PTR [rcx+0xc],eax
   140016000:	lea    rcx,[rsp+0x268]
   140016008:	call   QWORD PTR [rip+0xa78a]        # 0x140020798
   14001600e:	lea    rcx,[rbp+0x118]
   140016015:	lea    rdx,[rsp+0x250]
   14001601d:	call   0x14000f2e0
   140016022:	lea    rcx,[rsp+0x268]
   14001602a:	call   QWORD PTR [rip+0xa750]        # 0x140020780
   140016030:	lea    rcx,[rsp+0xa8]
   140016038:	jmp    0x1400162e2
   14001603d:	lea    rdx,[rsp+0x120]
   140016045:	mov    rcx,rbx
   140016048:	call   0x140018420
   14001604d:	lea    rcx,[rsp+0x3b0]
   140016055:	mov    rdx,rbx
   140016058:	mov    rdi,rax
   14001605b:	call   0x14000e610
   140016060:	mov    DWORD PTR [rsp+0x290],0x1
   14001606b:	mov    ecx,DWORD PTR [rax]
   14001606d:	lea    rdx,[rsp+0x294]
   140016075:	mov    DWORD PTR [rdx],ecx
   140016077:	mov    ecx,DWORD PTR [rax+0x4]
   14001607a:	mov    DWORD PTR [rdx+0x4],ecx
   14001607d:	mov    ecx,DWORD PTR [rax+0x8]
   140016080:	mov    DWORD PTR [rdx+0x8],ecx
   140016083:	mov    ecx,DWORD PTR [rax+0xc]
   140016086:	mov    DWORD PTR [rdx+0xc],ecx
   140016089:	lea    rcx,[rsp+0x2a8]
   140016091:	mov    rdx,rdi
   140016094:	call   QWORD PTR [rip+0xa6fe]        # 0x140020798
   14001609a:	lea    rcx,[rbp+0x118]
   1400160a1:	lea    rdx,[rsp+0x290]
   1400160a9:	call   0x14000f2e0
   1400160ae:	lea    rcx,[rsp+0x2a8]
   1400160b6:	call   QWORD PTR [rip+0xa6c4]        # 0x140020780
   1400160bc:	lea    rcx,[rsp+0x120]
   1400160c4:	jmp    0x1400162e2
   1400160c9:	lea    rdx,[rsp+0x130]
   1400160d1:	mov    rcx,rbx
   1400160d4:	call   0x140018420
   1400160d9:	lea    rcx,[rsp+0x390]
   1400160e1:	mov    rdx,rbx
   1400160e4:	mov    rdi,rax
   1400160e7:	call   0x14000e610
   1400160ec:	mov    DWORD PTR [rsp+0x2d0],0x1
   1400160f7:	mov    ecx,DWORD PTR [rax]
   1400160f9:	lea    rdx,[rsp+0x2d4]
   140016101:	mov    DWORD PTR [rdx],ecx
   140016103:	mov    ecx,DWORD PTR [rax+0x4]
   140016106:	mov    DWORD PTR [rdx+0x4],ecx
   140016109:	mov    ecx,DWORD PTR [rax+0x8]
   14001610c:	mov    DWORD PTR [rdx+0x8],ecx
   14001610f:	mov    ecx,DWORD PTR [rax+0xc]
   140016112:	mov    DWORD PTR [rdx+0xc],ecx
   140016115:	lea    rcx,[rsp+0x2e8]
   14001611d:	mov    rdx,rdi
   140016120:	call   QWORD PTR [rip+0xa672]        # 0x140020798
   140016126:	lea    rcx,[rbp+0x118]
   14001612d:	lea    rdx,[rsp+0x2d0]
   140016135:	call   0x14000f2e0
   14001613a:	lea    rcx,[rsp+0x2e8]
   140016142:	call   QWORD PTR [rip+0xa638]        # 0x140020780
   140016148:	lea    rcx,[rsp+0x130]
   140016150:	jmp    0x1400162e2
   140016155:	mov    QWORD PTR [rax+rcx*8],r12
   140016159:	or     rcx,0xffffffffffffffff
   14001615d:	lea    rdx,[rip+0xc86c]        # 0x1400229d0
   140016164:	mov    rdi,rdx
   140016167:	mov    QWORD PTR [rsp+0x48],rdx
   14001616c:	xor    eax,eax
   14001616e:	repnz scas al,BYTE PTR es:[rdi]
   140016170:	lea    rdx,[rsp+0x70]
   140016175:	not    rcx
   140016178:	dec    rcx
   14001617b:	mov    DWORD PTR [rsp+0x40],ecx
   14001617f:	lea    rcx,[rsp+0xb0]
   140016187:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   14001618c:	movdqa XMMWORD PTR [rsp+0x70],xmm0
   140016192:	call   QWORD PTR [rip+0xa3a0]        # 0x140020538
   140016198:	movsxd rdx,DWORD PTR [rbp+0x10]
   14001619c:	lea    rcx,[rsp+0x2b4]
   1400161a4:	shl    rdx,0x4
   1400161a8:	add    rdx,QWORD PTR [rbp+0x28]
   1400161ac:	mov    DWORD PTR [rsp+0x2b0],0x1
   1400161b7:	mov    eax,DWORD PTR [rdx]
   1400161b9:	mov    DWORD PTR [rcx],eax
   1400161bb:	mov    eax,DWORD PTR [rdx+0x4]
   1400161be:	mov    DWORD PTR [rcx+0x4],eax
   1400161c1:	mov    eax,DWORD PTR [rdx+0x8]
   1400161c4:	mov    DWORD PTR [rcx+0x8],eax
   1400161c7:	mov    eax,DWORD PTR [rdx+0xc]
   1400161ca:	lea    rdx,[rsp+0xb0]
   1400161d2:	mov    DWORD PTR [rcx+0xc],eax
   1400161d5:	lea    rcx,[rsp+0x2c8]
   1400161dd:	call   QWORD PTR [rip+0xa5b5]        # 0x140020798
   1400161e3:	lea    rcx,[rbp+0x118]
   1400161ea:	lea    rdx,[rsp+0x2b0]
   1400161f2:	call   0x14000f2e0
   1400161f7:	lea    rcx,[rsp+0x2c8]
   1400161ff:	call   QWORD PTR [rip+0xa57b]        # 0x140020780
   140016205:	lea    rcx,[rsp+0xb0]
   14001620d:	jmp    0x1400162e2
   140016212:	lea    r8,[rip+0xc7ef]        # 0x140022a08
   140016219:	lea    rdx,[rip+0xc7f8]        # 0x140022a18
   140016220:	lea    rcx,[rsp+0xc0]
   140016228:	xor    r9d,r9d
   14001622b:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140016233:	call   QWORD PTR [rip+0xa20f]        # 0x140020448
   140016239:	mov    DWORD PTR [rsp+0x1d0],0x1
   140016244:	mov    eax,DWORD PTR [rbp+0x88]
   14001624a:	lea    rcx,[rsp+0x1d4]
   140016252:	lea    rdx,[rsp+0xc0]
   14001625a:	mov    DWORD PTR [rcx],eax
   14001625c:	mov    eax,DWORD PTR [rbp+0x8c]
   140016262:	mov    DWORD PTR [rcx+0x4],eax
   140016265:	mov    eax,DWORD PTR [rbp+0x90]
   14001626b:	mov    DWORD PTR [rcx+0x8],eax
   14001626e:	mov    eax,DWORD PTR [rbp+0x94]
   140016274:	mov    DWORD PTR [rcx+0xc],eax
   140016277:	lea    rcx,[rsp+0x1e8]
   14001627f:	call   QWORD PTR [rip+0xa513]        # 0x140020798
   140016285:	add    rbp,0x118
   14001628c:	mov    rax,QWORD PTR [rbp+0x0]
   140016290:	mov    ecx,DWORD PTR [rax]
   140016292:	cmp    ecx,0x1
   140016295:	je     0x1400162b0
   140016297:	test   ecx,ecx
   140016299:	je     0x1400162b0
   14001629b:	mov    edx,0x7fffffff
   1400162a0:	mov    r8d,0x1
   1400162a6:	mov    rcx,rbp
   1400162a9:	call   0x14000f090
   1400162ae:	jmp    0x1400162b9
   1400162b0:	mov    rcx,rbp
   1400162b3:	call   QWORD PTR [rip+0xa37f]        # 0x140020638
   1400162b9:	lea    r8,[rsp+0x1d0]
   1400162c1:	mov    rdx,rax
   1400162c4:	mov    rcx,rbp
   1400162c7:	call   0x14000e790
   1400162cc:	lea    rcx,[rsp+0x1e8]
   1400162d4:	call   QWORD PTR [rip+0xa4a6]        # 0x140020780
   1400162da:	lea    rcx,[rsp+0xc0]
   1400162e2:	call   QWORD PTR [rip+0xa498]        # 0x140020780
   1400162e8:	xor    al,al
   1400162ea:	add    rsp,0x3c8
   1400162f1:	pop    r15
   1400162f3:	pop    r14
   1400162f5:	pop    r13
   1400162f7:	pop    r12
   1400162f9:	pop    rdi
   1400162fa:	pop    rsi
   1400162fb:	pop    rbp
   1400162fc:	pop    rbx
   1400162fd:	ret    
   1400162fe:	xchg   ax,ax
   140016300:	(bad)  
   140016301:	clc    
   140016302:	add    BYTE PTR [rax],al
   140016304:	mov    cl,0xf8
   140016306:	add    BYTE PTR [rax],al
   140016308:	rex.W stc 
   14001630a:	add    BYTE PTR [rax],al
   14001630c:	imul   edi,ecx,0xf9c10000
   140016312:	add    BYTE PTR [rax],al
   140016314:	or     edi,edx
   140016316:	add    BYTE PTR [rax],al
   140016318:	rex.X cli 
   14001631a:	add    BYTE PTR [rax],al
   14001631c:	test   edx,edi
   14001631e:	add    BYTE PTR [rax],al
   140016320:	leave  
   140016321:	cli    
   140016322:	add    BYTE PTR [rax],al
   140016324:	scas   eax,DWORD PTR es:[rdi]
   140016325:	sti    
   140016326:	add    BYTE PTR [rax],al
   140016328:	pop    rdi
   140016329:	cld    
   14001632a:	add    BYTE PTR [rax],al
   14001632c:	(bad)  
   14001632d:	std    
   14001632e:	add    BYTE PTR [rax],al
   140016330:	or     BYTE PTR [rbp+0x1],dl
   140016333:	add    dl,bh
   140016335:	std    
   140016336:	add    BYTE PTR [rax],al
   140016338:	inc    BYTE PTR ds:[rax]
   14001633b:	add    BYTE PTR [rdi-0x1cffff02],cl
   140016341:	inc    BYTE PTR [rax]
   140016343:	add    BYTE PTR [rsi-0x1],ch
   140016346:	add    BYTE PTR [rax],al
   140016348:	adc    al,BYTE PTR [rax]
   14001634a:	add    DWORD PTR [rax],eax
   14001634c:	int3   
   14001634d:	add    BYTE PTR [rcx],al
   14001634f:	add    BYTE PTR [rax+0x1],al
   140016352:	add    DWORD PTR [rax],eax
   140016354:	add    al,BYTE PTR [ecx]
   140016357:	add    BYTE PTR [rdi],cl
   140016359:	add    eax,DWORD PTR [rcx]
   14001635b:	add    BYTE PTR [rbx+rax*1+0x4440001],bh
   140016362:	add    DWORD PTR [rax],eax
   140016364:	gs add al,0x1
   140016367:	add    dh,bh
   140016369:	add    al,0x1
   14001636b:	add    bl,dl
   14001636d:	add    eax,0x72b0001
   140016372:	add    DWORD PTR [rax],eax
   140016374:	jb     0x14001637e
   140016376:	add    DWORD PTR [rax],eax
   140016378:	loope  0x140016383
   14001637a:	add    DWORD PTR [rax],eax
   14001637c:	add    BYTE PTR [rbx],cl
   14001637e:	add    DWORD PTR [rax],eax
   140016380:	rex.WRB or al,0x1
   140016383:	add    BYTE PTR [rdx+0xd],bh
   140016386:	add    DWORD PTR [rax],eax
   140016388:	fisttp DWORD PTR [rsi]
   14001638a:	add    DWORD PTR [rax],eax
   14001638c:	pop    rdi
   14001638d:	sgdt   [rax]
   140016390:	ins    DWORD PTR es:[rdi],dx
   140016391:	adc    al,BYTE PTR [rcx]
   140016393:	add    cl,al
   140016395:	adc    al,0x1
   140016397:	add    al,ch
   140016399:	(bad)  
   14001639a:	add    DWORD PTR [rax],eax
   14001639c:	sub    BYTE PTR [rdi],dl
   14001639e:	add    DWORD PTR [rax],eax
   1400163a0:	(bad)  
   1400163a1:	(bad)  
   1400163a2:	add    DWORD PTR [rax],eax
   1400163a4:	adc    BYTE PTR [rax],bl
   1400163a6:	add    DWORD PTR [rax],eax
   1400163a8:	push   rax
   1400163a9:	sbb    BYTE PTR [rcx],al
   1400163ab:	add    BYTE PTR [rax-0x2ffffee8],dl
   1400163b1:	sbb    BYTE PTR [rcx],al
   1400163b3:	add    BYTE PTR [rcx+0x19],cl
   1400163b6:	add    DWORD PTR [rax],eax
   1400163b8:	movabs ds:0xce00011ab7000119,eax
   1400163c1:	sbb    eax,DWORD PTR [rcx]
   1400163c3:	add    BYTE PTR [rsi+0x1600011c],al
   1400163c9:	sbb    eax,0x1d510001
   1400163ce:	add    DWORD PTR [rax],eax
   1400163d0:	rex.WB (bad) 
   1400163d2:	add    DWORD PTR [rax],eax
   1400163d4:	sbb    BYTE PTR [rdi],bl
   1400163d6:	add    DWORD PTR [rax],eax
   1400163d8:	rcr    BYTE PTR [rdi],1
   1400163da:	add    DWORD PTR [rax],eax
   1400163dc:	push   0xffffffffc9000120
   1400163e1:	and    BYTE PTR [rcx],al
   1400163e3:	add    bl,bl
   1400163e5:	and    DWORD PTR [rcx],eax
   1400163e7:	add    BYTE PTR [rbx],dh
   1400163e9:	and    al,BYTE PTR [rcx]
   1400163eb:	add    BYTE PTR [rsi+0x15000122],bl
   1400163f1:	and    eax,DWORD PTR [rcx]
   1400163f3:	add    BYTE PTR [rbp-0x26fffedd],dl
   1400163f9:	and    eax,DWORD PTR [rcx]
   1400163fb:	add    BYTE PTR [rbx+0x24],bl
   1400163fe:	add    DWORD PTR [rax],eax
   140016400:	shl    BYTE PTR [rcx+rax*1],0x0
   140016404:	(bad)  
   140016405:	and    eax,0x26f20001
   14001640a:	add    DWORD PTR [rax],eax
   14001640c:	rex.RX (bad) 
   14001640e:	add    DWORD PTR [rax],eax
   140016410:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140016411:	(bad)  
   140016412:	add    DWORD PTR [rax],eax
   140016414:	add    al,0x28
   140016416:	add    DWORD PTR [rax],eax
   140016418:	(bad)  
   140016419:	sub    BYTE PTR [rcx],al
   14001641b:	add    BYTE PTR [rbx-0x73fffed8],dh
   140016421:	sub    DWORD PTR [rcx],eax
   140016423:	add    BYTE PTR [rdx+rbp*1],ah
   140016426:	add    DWORD PTR [rax],eax
   140016428:	imul   ebp,DWORD PTR [rdx],0x2aba0001
   14001642e:	add    DWORD PTR [rax],eax
   140016430:	and    al,0x2b
   140016432:	add    DWORD PTR [rax],eax
   140016434:	js     0x140016461
   140016436:	add    DWORD PTR [rax],eax
   140016438:	fldcw  WORD PTR [rbx]
   14001643a:	add    DWORD PTR [rax],eax
   14001643c:	sub    DWORD PTR [rcx+rax*1],ebp
   14001643f:	add    BYTE PTR [rcx+0x2c],bh
   140016442:	add    DWORD PTR [rax],eax
   140016444:	retf   0x12c
   140016447:	add    BYTE PTR [rbx],bl
   140016449:	sub    eax,0x2d6c0001
   14001644e:	add    DWORD PTR [rax],eax
   140016450:	mov    ebp,0xe00012d
   140016455:	add    DWORD PTR cs:[rax],eax
   140016458:	pop    rdi
   140016459:	add    DWORD PTR cs:[rax],eax
   14001645c:	mov    al,0x2e
   14001645e:	add    DWORD PTR [rax],eax
   140016460:	add    DWORD PTR [rdi],ebp
   140016462:	add    DWORD PTR [rax],eax
   140016464:	push   rdx
   140016465:	(bad)  
   140016466:	add    DWORD PTR [rax],eax
   140016468:	mov    ah,0x2f
   14001646a:	add    DWORD PTR [rax],eax
   14001646c:	(bad)  
   14001646d:	xor    BYTE PTR [rcx],al
   14001646f:	add    BYTE PTR [rax+0x30],bh
   140016472:	add    DWORD PTR [rax],eax
   140016474:	(bad)  
   140016475:	xor    BYTE PTR [rcx],al
   140016477:	add    BYTE PTR [rax],bh
   140016479:	xor    DWORD PTR [rcx],eax
   14001647b:	add    BYTE PTR [rdx-0x3fffecf],bl
   140016481:	xor    DWORD PTR [rcx],eax
   140016483:	add    BYTE PTR [rsi+0x32],bl
   140016486:	add    DWORD PTR [rax],eax
   140016488:	shl    BYTE PTR [rdx],0x1
   14001648b:	add    BYTE PTR [rdx],ah
   14001648d:	xor    eax,DWORD PTR [rcx]
   14001648f:	add    BYTE PTR [rbx+rsi*1+0x33e60001],al
   140016496:	add    DWORD PTR [rax],eax
   140016498:	rex.W xor al,0x1
   14001649b:	add    BYTE PTR [rdx+0xc000134],ch
   1400164a1:	xor    eax,0x356e0001
   1400164a6:	add    DWORD PTR [rax],eax
   1400164a8:	shl    BYTE PTR [rip+0x36320001],1        # 0x1763364af
   1400164ae:	add    DWORD PTR [rax],eax
   1400164b0:	xchg   esp,eax
   1400164b1:	add    DWORD PTR ss:[rax],eax
   1400164b4:	div    BYTE PTR [rsi]
   1400164b6:	add    DWORD PTR [rax],eax
   1400164b8:	pop    rax
   1400164b9:	(bad)  
   1400164ba:	add    DWORD PTR [rax],eax
   1400164bc:	mov    edx,0x1c000137
   1400164c1:	cmp    BYTE PTR [rcx],al
   1400164c3:	add    BYTE PTR [rdx+0x1c000138],bh
   1400164c9:	cmp    DWORD PTR [rcx],eax
   1400164cb:	add    BYTE PTR [rcx+rdi*1],ch
   1400164ce:	add    DWORD PTR [rax],eax
   1400164d0:	cmp    al,0x39
   1400164d2:	add    DWORD PTR [rax],eax
   1400164d4:	cmp    QWORD PTR [rcx],r8
   1400164d7:	add    BYTE PTR [rcx+rdi*1+0x1],bl
   1400164db:	add    BYTE PTR [rcx+rdi*1+0x1],ch
   1400164df:	add    BYTE PTR [rcx+rdi*1+0x1],bh
   1400164e3:	add    BYTE PTR [rcx+rdi*1+0x399c0001],cl
   1400164ea:	add    DWORD PTR [rax],eax
   1400164ec:	lods   al,BYTE PTR ds:[rsi]
   1400164ed:	cmp    DWORD PTR [rcx],eax
   1400164ef:	add    BYTE PTR [rcx+rdi*1+0x39cc0001],bh
   1400164f6:	add    DWORD PTR [rax],eax
   1400164f8:	fdivr  QWORD PTR [rcx]
   1400164fa:	add    DWORD PTR [rax],eax
   1400164fc:	cmp    al,BYTE PTR ss:[rcx]
   1400164ff:	add    BYTE PTR [rdi-0x24fffec6],dl
   140016505:	cmp    al,BYTE PTR [rcx]
   140016507:	add    BYTE PTR [rbx+rdi*1],ch
   14001650a:	add    DWORD PTR [rax],eax
   14001650c:	add    al,0x3c
   14001650e:	add    DWORD PTR [rax],eax
   140016510:	adc    al,0x3c
   140016512:	add    DWORD PTR [rax],eax
   140016514:	and    al,0x3c
   140016516:	add    DWORD PTR [rax],eax
   140016518:	js     0x140016556
   14001651a:	add    DWORD PTR [rax],eax
   14001651c:	fnstcw WORD PTR [rcx+rax*1]
   14001651f:	add    BYTE PTR [rdx],bh
   140016521:	cmp    eax,0x3da70001
   140016526:	add    DWORD PTR [rax],eax
   140016528:	mov    ecx,0xf900013d
   14001652d:	cmp    eax,0x3e490001
   140016532:	add    DWORD PTR [rax],eax
   140016534:	cmp    al,0x3f
   140016536:	add    DWORD PTR [rax],eax
   140016538:	(bad)  
   140016539:	(bad)  
   14001653a:	add    DWORD PTR [rax],eax
   14001653c:	adc    al,BYTE PTR [rcx+0x1]
   14001653f:	add    cl,dl
   140016541:	add    DWORD PTR [r8],eax
   140016544:	rol    DWORD PTR [rdx+0x1],cl
   140016547:	add    BYTE PTR [rcx],bh
   140016549:	add    DWORD PTR [rax],r8d
   14001654c:	mov    BYTE PTR [rcx+rax*1+0x0],al
   140016550:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140016551:	add    DWORD PTR [r8],r8d
   140016554:	(bad)  
   140016555:	rex.RX add DWORD PTR [rax],r8d
   140016558:	xchg   esi,eax
   140016559:	rex.RX add DWORD PTR [rax],r8d
   14001655c:	stc    
   14001655d:	rex.RX add DWORD PTR [rax],r8d
   140016560:	xor    BYTE PTR [rdi+0x1],al
   140016563:	add    BYTE PTR [rdx+0x47],ch
   140016566:	add    DWORD PTR [rax],eax
   140016568:	(bad)  
   140016569:	add    QWORD PTR [rax],rax
   14001656c:	rex.W
   14001656d:	add    QWORD PTR [rax],rax
   140016570:	add    cl,BYTE PTR [rcx+0x1]
   140016573:	add    BYTE PTR [rdx-0x19fffeb7],ah
   140016579:	add    QWORD PTR [r8],rax
   14001657c:	(bad)  
   14001657d:	rex.WX add QWORD PTR [rax],rax
   140016580:	int    0x4a
   140016582:	add    DWORD PTR [rax],eax
   140016584:	rex.WXB add QWORD PTR ss:[r8],rax
   140016588:	int3   
   140016589:	rex.WXB add QWORD PTR [r8],rax
   14001658c:	(bad)  
   14001658d:	add    QWORD PTR [rax],r8
   140016590:	jno    0x1400165de
   140016592:	add    DWORD PTR [rax],eax
   140016594:	mov    cl,0x4c
   140016596:	add    DWORD PTR [rax],eax
   140016598:	stc    
   140016599:	add    QWORD PTR [rax],r8
   14001659c:	mov    esp,0xd00014d
   1400165a1:	rex.WRX add QWORD PTR [rax],r8
   1400165a4:	test   BYTE PTR [rsi+0x1],cl
   1400165a7:	add    bl,bl
   1400165a9:	rex.WRXB add QWORD PTR [r8],r8
   1400165ac:	rex.WR push rcx
   1400165ae:	add    DWORD PTR [rax],eax
   1400165b0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400165b1:	push   rdx
   1400165b2:	add    DWORD PTR [rax],eax
   1400165b4:	(bad)  
   1400165b5:	push   rdx
   1400165b6:	add    DWORD PTR [rax],eax
   1400165b8:	rex.X push rbx
   1400165ba:	add    DWORD PTR [rax],eax
   1400165bc:	movsxd edx,DWORD PTR [rbx+0x1]
   1400165bf:	add    BYTE PTR [rbx-0xcfffead],ch
   1400165c5:	push   rbx
   1400165c6:	add    DWORD PTR [rax],eax
   1400165c8:	(bad)  
   1400165c9:	push   rsp
   1400165ca:	add    DWORD PTR [rax],eax
   1400165cc:	mov    BYTE PTR [rcx+rax*1+0x0],dl
   1400165d0:	enter  0x154,0x0
   1400165d4:	adc    BYTE PTR [rbp+0x1],dl
   1400165d7:	add    BYTE PTR [rax],al
   1400165d9:	add    BYTE PTR [rax],al
   1400165db:	add    BYTE PTR [rax],al
   1400165dd:	add    BYTE PTR [rcx],al
   1400165df:	mov    ch,0x2
   1400165e1:	add    eax,DWORD PTR [rbx]
   1400165e3:	add    al,0x4
   1400165e5:	mov    ch,0xb5
   1400165e7:	mov    ch,0x5
   1400165e9:	mov    ch,0x6
   1400165eb:	mov    ch,0x7
   1400165ed:	mov    ch,0x8
   1400165ef:	mov    ch,0x9
   1400165f1:	or     cl,BYTE PTR [rbx]
   1400165f3:	or     al,0xd
   1400165f5:	or     eax,0x11100f0e
   1400165fa:	adc    dl,BYTE PTR [rbx]
   1400165fc:	mov    ch,0x14
   1400165fe:	adc    eax,0xb5b5b516
   140016603:	mov    ch,0xb5
   140016605:	mov    ch,0xb5
   140016607:	(bad)  
   140016608:	mov    ch,0xb5
   14001660a:	mov    ch,0xc
   14001660c:	sbb    BYTE PTR [rcx],bl
   14001660e:	sbb    dh,BYTE PTR [rbp-0x4ae34ae5]
   140016614:	sbb    eax,0x1fb51eb5
   140016619:	and    BYTE PTR [rcx],ah
   14001661b:	and    ah,BYTE PTR [rbx]
   14001661d:	and    al,0x25
   14001661f:	es es mov ch,0xb5
   140016623:	mov    ch,0xb5
   140016625:	mov    ch,0xb5
   140016627:	mov    ch,0x27
   140016629:	sub    BYTE PTR [rcx],ch
   14001662b:	sub    ch,BYTE PTR [rbx]
   14001662d:	sub    al,0x2d
   14001662f:	sub    eax,0x31302f2e
   140016634:	xor    dh,BYTE PTR [rbx]
   140016636:	xor    al,0x35
   140016638:	ss (bad) 
   14001663a:	cmp    BYTE PTR [rcx],bh
   14001663c:	cmp    bh,BYTE PTR [rbx]
   14001663e:	cmp    al,0x3d
   140016640:	ds (bad) 
   140016642:	rex
   140016643:	rex.B
   140016644:	rex.X
   140016645:	rex.XB
   140016646:	rex.R
   140016647:	rex.RB
   140016648:	rex.RX
   140016649:	rex.R mov bpl,0xb5
   14001664c:	mov    ch,0xb5
   14001664e:	mov    ch,0xb5
   140016650:	mov    ch,0xb5
   140016652:	mov    ch,0xb5
   140016654:	mov    ch,0xb5
   140016656:	mov    ch,0xb5
   140016658:	mov    ch,0xb5
   14001665a:	mov    ch,0xb5
   14001665c:	mov    ch,0xb5
   14001665e:	mov    ch,0xb5
   140016660:	mov    ch,0xb5
   140016662:	mov    ch,0xb5
   140016664:	mov    ch,0xb5
   140016666:	mov    ch,0xb5
   140016668:	mov    ch,0xb5
   14001666a:	mov    ch,0xb5
   14001666c:	mov    ch,0x47
   14001666e:	rex.W
   14001666f:	rex.WB mov r13b,0x4a
   140016672:	rex.WXB
   140016673:	rex.WXB
   140016674:	rex.RXB
   140016675:	rex.W or al,0x2
   140016678:	rex.WR
   140016679:	rex.WRB mov r13b,0xb5
   14001667c:	mov    ch,0x4e
   14001667e:	rex.WRXB mov r13b,0x50
   140016681:	push   rcx
   140016682:	push   rdx
   140016683:	push   rbx
   140016684:	push   rsp
   140016685:	push   rbp
   140016686:	push   rsi
   140016687:	push   rdi
   140016688:	pop    rax
   140016689:	mov    ch,0x59
   14001668b:	pop    rdx
   14001668c:	pop    rbx
   14001668d:	mov    ch,0x5c
   14001668f:	pop    rbp
   140016690:	mov    ch,0x5e
   140016692:	pop    rdi
   140016693:	(bad)  
   140016694:	mov    ch,0x61
   140016696:	(bad)
   14001669b:	mov    ch,0x61
   14001669d:	(bad)
   1400166a2:	addr32 push 0x67b56a69
   1400166a8:	push   0x6bb56a69
   1400166ad:	mov    ch,0x6b
   1400166af:	mov    ch,0x6c
   1400166b1:	mov    ch,0x6c
   1400166b3:	mov    ch,0x6d
   1400166b5:	mov    ch,0x6d
   1400166b7:	mov    ch,0x6e
   1400166b9:	mov    ch,0x6e
   1400166bb:	mov    ch,0x6f
   1400166bd:	mov    ch,0x6f
   1400166bf:	mov    ch,0x70
   1400166c1:	mov    ch,0x70
   1400166c3:	mov    ch,0x71
   1400166c5:	mov    ch,0x71
   1400166c7:	jb     0x14001673c
   1400166c9:	je     0x140016740
   1400166cb:	jbe    0x140016744
   1400166cd:	js     0x140016748
   1400166cf:	jp     0x14001674c
   1400166d1:	jl     0x140016750
   1400166d3:	mov    ch,0x7e
   1400166d5:	or     al,0xb5
   1400166d7:	mov    ch,0x7e
   1400166d9:	or     al,0xb5
   1400166db:	mov    ch,0xb5
   1400166dd:	mov    ch,0xb5
   1400166df:	mov    ch,0xb5
   1400166e1:	mov    ch,0xb5
   1400166e3:	mov    ch,0xb5
   1400166e5:	mov    ch,0xb5
   1400166e7:	mov    ch,0xb5
   1400166e9:	mov    ch,0x7f
   1400166eb:	add    BYTE PTR [rcx-0x7d4afdf4],0x83
   1400166f2:	test   BYTE PTR [rbp-0x77787a7a],al
   1400166f8:	mov    BYTE PTR [rcx+0xc89b50c],cl
   1400166fe:	mov    ch,0x8a
   140016700:	mov    ch,0x8b
   140016702:	mov    WORD PTR [rbp-0x70714a4b],cs
   140016708:	nop
   140016709:	xchg   ecx,eax
   14001670a:	xchg   edx,eax
   14001670b:	xchg   ebx,eax
   14001670c:	mov    ch,0x94
   14001670e:	mov    ch,0x95
   140016710:	mov    ch,0x96
   140016712:	mov    ch,0x97
   140016714:	mov    ch,0x98
   140016716:	cdq    
   140016717:	(bad)  
   140016718:	fwait
   140016719:	pushf  
   14001671a:	popf   
   14001671b:	sahf   
   14001671c:	or     al,0x2
   14001671e:	lahf   
   14001671f:	movabs al,ds:0xa7a6a5a4a3a2b5a1
   140016728:	mov    ch,0xa8
   14001672a:	mov    ch,0xa9
   14001672c:	stos   BYTE PTR es:[rdi],al
   14001672d:	stos   DWORD PTR es:[rdi],eax
   14001672e:	lods   al,BYTE PTR ds:[rsi]
   14001672f:	lods   eax,DWORD PTR ds:[rsi]
   140016730:	or     al,0xae
   140016732:	or     al,0xb5
   140016734:	scas   eax,DWORD PTR es:[rdi]
   140016735:	mov    ch,0xb0
   140016737:	mov    cl,0xb2
   140016739:	mov    bl,0xb4
   14001673b:	or     al,0xcc
   14001673d:	int3   
   14001673e:	int3   
   14001673f:	int3   
   140016740:	rex push rdi
   140016742:	sub    rsp,0x20
   140016746:	cmp    QWORD PTR [rcx+0x8],0x0
   14001674b:	mov    rdi,rcx
   14001674e:	je     0x1400167a2
   140016750:	mov    QWORD PTR [rsp+0x30],rbx
   140016755:	xor    ebx,ebx
   140016757:	cmp    DWORD PTR [rcx+0x10],ebx
   14001675a:	jle    0x140016793
   14001675c:	mov    QWORD PTR [rsp+0x38],rsi
   140016761:	mov    rsi,rbx
   140016764:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140016770:	mov    rax,QWORD PTR [rdi+0x8]
   140016774:	mov    rcx,QWORD PTR [rsi+rax*1]
   140016778:	test   rcx,rcx
   14001677b:	je     0x140016783
   14001677d:	call   QWORD PTR [rip+0x9a65]        # 0x1400201e8
   140016783:	inc    ebx
   140016785:	add    rsi,0x8
   140016789:	cmp    ebx,DWORD PTR [rdi+0x10]
   14001678c:	jl     0x140016770
   14001678e:	mov    rsi,QWORD PTR [rsp+0x38]
   140016793:	mov    rcx,QWORD PTR [rdi+0x8]
   140016797:	call   QWORD PTR [rip+0x9a4b]        # 0x1400201e8
   14001679d:	mov    rbx,QWORD PTR [rsp+0x30]
   1400167a2:	add    rsp,0x20
   1400167a6:	pop    rdi
   1400167a7:	ret    
   1400167a8:	int3   
   1400167a9:	int3   
   1400167aa:	int3   
   1400167ab:	int3   
   1400167ac:	int3   
   1400167ad:	int3   
   1400167ae:	int3   
   1400167af:	int3   
   1400167b0:	rex push rbx
   1400167b2:	sub    rsp,0x30
   1400167b6:	mov    r11d,r8d
   1400167b9:	mov    rbx,rcx
   1400167bc:	test   edx,edx
   1400167be:	jne    0x1400167cc
   1400167c0:	add    rsp,0x30
   1400167c4:	pop    rbx
   1400167c5:	rex.W jmp QWORD PTR [rip+0x9cb4]        # 0x140020480
   1400167cc:	movzx  eax,BYTE PTR [rbx]
   1400167cf:	movsd  xmm3,QWORD PTR [rip+0xc299]        # 0x140022a70
   1400167d7:	xor    ecx,ecx
   1400167d9:	movaps XMMWORD PTR [rsp+0x20],xmm6
   1400167de:	movapd xmm6,xmm3
   1400167e2:	cmp    al,0x2b
   1400167e4:	jne    0x1400167ed
   1400167e6:	mov    ecx,0x1
   1400167eb:	jmp    0x1400167fe
   1400167ed:	cmp    al,0x2d
   1400167ef:	jne    0x1400167fe
   1400167f1:	movsd  xmm6,QWORD PTR [rip+0xc26f]        # 0x140022a68
   1400167f9:	mov    ecx,0x1
   1400167fe:	mov    eax,edx
   140016800:	sub    eax,ecx
   140016802:	cmp    eax,0x2
   140016805:	jl     0x140016855
   140016807:	movsxd rax,ecx
   14001680a:	cmp    BYTE PTR [rax+rbx*1],0x30
   14001680e:	jne    0x140016855
   140016810:	movzx  eax,BYTE PTR [rax+rbx*1+0x1]
   140016815:	cmp    al,0x78
   140016817:	je     0x14001681d
   140016819:	cmp    al,0x58
   14001681b:	jne    0x140016848
   14001681d:	cmp    r8d,0x22
   140016821:	jge    0x140016848
   140016823:	test   r8d,r8d
   140016826:	je     0x14001683d
   140016828:	cmp    r8d,0x10
   14001682c:	je     0x14001683d
   14001682e:	xorpd  xmm0,xmm0
   140016832:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   140016837:	add    rsp,0x30
   14001683b:	pop    rbx
   14001683c:	ret    
   14001683d:	mov    r11d,0x10
   140016843:	add    ecx,0x2
   140016846:	jmp    0x140016861
   140016848:	test   r8d,r8d
   14001684b:	jne    0x140016861
   14001684d:	lea    r11d,[r8+0x8]
   140016851:	inc    ecx
   140016853:	jmp    0x140016861
   140016855:	mov    eax,0xa
   14001685a:	test   r8d,r8d
   14001685d:	cmove  r11d,eax
   140016861:	mov    QWORD PTR [rsp+0x40],rdi
   140016866:	movsxd rdi,ecx
   140016869:	movsxd r9,edx
   14001686c:	cmp    rdi,r9
   14001686f:	mov    r10d,ecx
   140016872:	mov    r8,rdi
   140016875:	jge    0x140016a94
   14001687b:	nop    DWORD PTR [rax+rax*1+0x0]
   140016880:	movzx  edx,BYTE PTR [r8+rbx*1]
   140016885:	lea    eax,[rdx-0x30]
   140016888:	cmp    al,0x9
   14001688a:	ja     0x140016894
   14001688c:	movsx  eax,dl
   14001688f:	sub    eax,0x30
   140016892:	jmp    0x1400168b0
   140016894:	lea    eax,[rdx-0x61]
   140016897:	cmp    al,0x19
   140016899:	ja     0x1400168a3
   14001689b:	movsx  eax,dl
   14001689e:	sub    eax,0x57
   1400168a1:	jmp    0x1400168b0
   1400168a3:	lea    eax,[rdx-0x41]
   1400168a6:	cmp    al,0x19
   1400168a8:	ja     0x1400168c4
   1400168aa:	movsx  eax,dl
   1400168ad:	sub    eax,0x37
   1400168b0:	cmp    eax,0xffffffff
   1400168b3:	je     0x1400168c4
   1400168b5:	cmp    eax,r11d
   1400168b8:	jge    0x1400168c4
   1400168ba:	inc    r8
   1400168bd:	inc    ecx
   1400168bf:	cmp    r8,r9
   1400168c2:	jl     0x140016880
   1400168c4:	cmp    r10d,ecx
   1400168c7:	je     0x140016a94
   1400168cd:	xorpd  xmm2,xmm2
   1400168d1:	lea    eax,[rcx-0x1]
   1400168d4:	movsxd rdx,eax
   1400168d7:	cmp    rdx,rdi
   1400168da:	jl     0x140016aba
   1400168e0:	mov    rax,rdx
   1400168e3:	sub    rax,rdi
   1400168e6:	inc    rax
   1400168e9:	cmp    rax,0x4
   1400168ed:	jl     0x140016a30
   1400168f3:	movd   xmm1,r11d
   1400168f8:	lea    r8,[rdi+0x3]
   1400168fc:	cvtdq2pd xmm1,xmm1
   140016900:	movzx  ecx,BYTE PTR [rbx+rdx*1]
   140016904:	lea    eax,[rcx-0x30]
   140016907:	cmp    al,0x9
   140016909:	ja     0x140016913
   14001690b:	movsx  eax,cl
   14001690e:	sub    eax,0x30
   140016911:	jmp    0x140016934
   140016913:	lea    eax,[rcx-0x61]
   140016916:	cmp    al,0x19
   140016918:	ja     0x140016922
   14001691a:	movsx  eax,cl
   14001691d:	sub    eax,0x57
   140016920:	jmp    0x140016934
   140016922:	lea    eax,[rcx-0x41]
   140016925:	cmp    al,0x19
   140016927:	ja     0x140016931
   140016929:	movsx  eax,cl
   14001692c:	sub    eax,0x37
   14001692f:	jmp    0x140016934
   140016931:	or     eax,0xffffffff
   140016934:	movzx  ecx,BYTE PTR [rbx+rdx*1-0x1]
   140016939:	movd   xmm0,eax
   14001693d:	lea    eax,[rcx-0x30]
   140016940:	cvtdq2pd xmm0,xmm0
   140016944:	mulsd  xmm0,xmm3
   140016948:	mulsd  xmm3,xmm1
   14001694c:	addsd  xmm2,xmm0
   140016950:	cmp    al,0x9
   140016952:	ja     0x14001695c
   140016954:	movsx  eax,cl
   140016957:	sub    eax,0x30
   14001695a:	jmp    0x14001697d
   14001695c:	lea    eax,[rcx-0x61]
   14001695f:	cmp    al,0x19
   140016961:	ja     0x14001696b
   140016963:	movsx  eax,cl
   140016966:	sub    eax,0x57
   140016969:	jmp    0x14001697d
   14001696b:	lea    eax,[rcx-0x41]
   14001696e:	cmp    al,0x19
   140016970:	ja     0x14001697a
   140016972:	movsx  eax,cl
   140016975:	sub    eax,0x37
   140016978:	jmp    0x14001697d
   14001697a:	or     eax,0xffffffff
   14001697d:	movzx  ecx,BYTE PTR [rbx+rdx*1-0x2]
   140016982:	movd   xmm0,eax
   140016986:	lea    eax,[rcx-0x30]
   140016989:	cvtdq2pd xmm0,xmm0
   14001698d:	mulsd  xmm0,xmm3
   140016991:	mulsd  xmm3,xmm1
   140016995:	addsd  xmm2,xmm0
   140016999:	cmp    al,0x9
   14001699b:	ja     0x1400169a5
   14001699d:	movsx  eax,cl
   1400169a0:	sub    eax,0x30
   1400169a3:	jmp    0x1400169c6
   1400169a5:	lea    eax,[rcx-0x61]
   1400169a8:	cmp    al,0x19
   1400169aa:	ja     0x1400169b4
   1400169ac:	movsx  eax,cl
   1400169af:	sub    eax,0x57
   1400169b2:	jmp    0x1400169c6
   1400169b4:	lea    eax,[rcx-0x41]
   1400169b7:	cmp    al,0x19
   1400169b9:	ja     0x1400169c3
   1400169bb:	movsx  eax,cl
   1400169be:	sub    eax,0x37
   1400169c1:	jmp    0x1400169c6
   1400169c3:	or     eax,0xffffffff
   1400169c6:	movzx  ecx,BYTE PTR [rbx+rdx*1-0x3]
   1400169cb:	movd   xmm0,eax
   1400169cf:	lea    eax,[rcx-0x30]
   1400169d2:	cvtdq2pd xmm0,xmm0
   1400169d6:	mulsd  xmm0,xmm3
   1400169da:	mulsd  xmm3,xmm1
   1400169de:	addsd  xmm2,xmm0
   1400169e2:	cmp    al,0x9
   1400169e4:	ja     0x1400169ee
   1400169e6:	movsx  eax,cl
   1400169e9:	sub    eax,0x30
   1400169ec:	jmp    0x140016a0f
   1400169ee:	lea    eax,[rcx-0x61]
   1400169f1:	cmp    al,0x19
   1400169f3:	ja     0x1400169fd
   1400169f5:	movsx  eax,cl
   1400169f8:	sub    eax,0x57
   1400169fb:	jmp    0x140016a0f
   1400169fd:	lea    eax,[rcx-0x41]
   140016a00:	cmp    al,0x19
   140016a02:	ja     0x140016a0c
   140016a04:	movsx  eax,cl
   140016a07:	sub    eax,0x37
   140016a0a:	jmp    0x140016a0f
   140016a0c:	or     eax,0xffffffff
   140016a0f:	movd   xmm0,eax
   140016a13:	sub    rdx,0x4
   140016a17:	cmp    rdx,r8
   140016a1a:	cvtdq2pd xmm0,xmm0
   140016a1e:	mulsd  xmm0,xmm3
   140016a22:	mulsd  xmm3,xmm1
   140016a26:	addsd  xmm2,xmm0
   140016a2a:	jge    0x140016900
   140016a30:	cmp    rdx,rdi
   140016a33:	jl     0x140016aba
   140016a39:	movd   xmm1,r11d
   140016a3e:	cvtdq2pd xmm1,xmm1
   140016a42:	movzx  ecx,BYTE PTR [rdx+rbx*1]
   140016a46:	lea    eax,[rcx-0x30]
   140016a49:	cmp    al,0x9
   140016a4b:	ja     0x140016a55
   140016a4d:	movsx  eax,cl
   140016a50:	sub    eax,0x30
   140016a53:	jmp    0x140016a76
   140016a55:	lea    eax,[rcx-0x61]
   140016a58:	cmp    al,0x19
   140016a5a:	ja     0x140016a64
   140016a5c:	movsx  eax,cl
   140016a5f:	sub    eax,0x57
   140016a62:	jmp    0x140016a76
   140016a64:	lea    eax,[rcx-0x41]
   140016a67:	cmp    al,0x19
   140016a69:	ja     0x140016a73
   140016a6b:	movsx  eax,cl
   140016a6e:	sub    eax,0x37
   140016a71:	jmp    0x140016a76
   140016a73:	or     eax,0xffffffff
   140016a76:	movd   xmm0,eax
   140016a7a:	dec    rdx
   140016a7d:	cmp    rdx,rdi
   140016a80:	cvtdq2pd xmm0,xmm0
   140016a84:	mulsd  xmm0,xmm3
   140016a88:	mulsd  xmm3,xmm1
   140016a8c:	addsd  xmm2,xmm0
   140016a90:	jge    0x140016a42
   140016a92:	jmp    0x140016aba
   140016a94:	lea    rdx,[rip+0xbfbd]        # 0x140022a58
   140016a9b:	mov    rcx,rbx
   140016a9e:	call   QWORD PTR [rip+0x99d4]        # 0x140020478
   140016aa4:	test   eax,eax
   140016aa6:	jne    0x140016ab0
   140016aa8:	call   QWORD PTR [rip+0x99c2]        # 0x140020470
   140016aae:	jmp    0x140016ab6
   140016ab0:	call   QWORD PTR [rip+0x99ca]        # 0x140020480
   140016ab6:	movapd xmm2,xmm0
   140016aba:	mov    rdi,QWORD PTR [rsp+0x40]
   140016abf:	mulsd  xmm2,xmm6
   140016ac3:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   140016ac8:	movapd xmm0,xmm2
   140016acc:	add    rsp,0x30
   140016ad0:	pop    rbx
   140016ad1:	ret    
   140016ad2:	int3   
   140016ad3:	int3   
   140016ad4:	int3   
   140016ad5:	int3   
   140016ad6:	int3   
   140016ad7:	int3   
   140016ad8:	int3   
   140016ad9:	int3   
   140016ada:	int3   
   140016adb:	int3   
   140016adc:	int3   
   140016add:	int3   
   140016ade:	int3   
   140016adf:	int3   
   140016ae0:	add    rcx,0x48
   140016ae4:	rex.W jmp QWORD PTR [rip+0x9a7d]        # 0x140020568
   140016aeb:	int3   
   140016aec:	int3   
   140016aed:	int3   
   140016aee:	int3   
   140016aef:	int3   
   140016af0:	mov    rax,QWORD PTR [rcx]
   140016af3:	ret    
   140016af4:	int3   
   140016af5:	int3   
   140016af6:	int3   
   140016af7:	int3   
   140016af8:	int3   
   140016af9:	int3   
   140016afa:	int3   
   140016afb:	int3   
   140016afc:	int3   
   140016afd:	int3   
   140016afe:	int3   
   140016aff:	int3   
   140016b00:	mov    QWORD PTR [rcx],rdx
   140016b03:	ret    
   140016b04:	int3   
   140016b05:	int3   
   140016b06:	int3   
   140016b07:	int3   
   140016b08:	int3   
   140016b09:	int3   
   140016b0a:	int3   
   140016b0b:	int3   
   140016b0c:	int3   
   140016b0d:	int3   
   140016b0e:	int3   
   140016b0f:	int3   
   140016b10:	mov    rax,QWORD PTR [rcx+0x8]
   140016b14:	ret    
   140016b15:	int3   
   140016b16:	int3   
   140016b17:	int3   
   140016b18:	int3   
   140016b19:	int3   
   140016b1a:	int3   
   140016b1b:	int3   
   140016b1c:	int3   
   140016b1d:	int3   
   140016b1e:	int3   
   140016b1f:	int3   
   140016b20:	mov    QWORD PTR [rcx+0x8],rdx
   140016b24:	ret    
   140016b25:	int3   
   140016b26:	int3   
   140016b27:	int3   
   140016b28:	int3   
   140016b29:	int3   
   140016b2a:	int3   
   140016b2b:	int3   
   140016b2c:	int3   
   140016b2d:	int3   
   140016b2e:	int3   
   140016b2f:	int3   
   140016b30:	lea    rax,[rcx+0x10]
   140016b34:	ret    
   140016b35:	int3   
   140016b36:	int3   
   140016b37:	int3   
   140016b38:	int3   
   140016b39:	int3   
   140016b3a:	int3   
   140016b3b:	int3   
   140016b3c:	int3   
   140016b3d:	int3   
   140016b3e:	int3   
   140016b3f:	int3   
   140016b40:	mov    QWORD PTR [rsp+0x8],rbx
   140016b45:	mov    QWORD PTR [rsp+0x10],rbp
   140016b4a:	mov    QWORD PTR [rsp+0x18],rsi
   140016b4f:	push   rdi
   140016b50:	sub    rsp,0x20
   140016b54:	mov    rax,QWORD PTR [rcx+0x40]
   140016b58:	lea    rsi,[rcx+0x40]
   140016b5c:	mov    rbp,rdx
   140016b5f:	mov    ebx,DWORD PTR [rax+0x4]
   140016b62:	mov    rdx,r8
   140016b65:	mov    rcx,rsi
   140016b68:	mov    rdi,r8
   140016b6b:	call   QWORD PTR [rip+0x9c37]        # 0x1400207a8
   140016b71:	mov    r11,QWORD PTR [rdi]
   140016b74:	mov    r9d,DWORD PTR [r11+0x4]
   140016b78:	mov    r8d,ebx
   140016b7b:	mov    rdx,rbp
   140016b7e:	mov    rcx,rsi
   140016b81:	call   QWORD PTR [rip+0x9901]        # 0x140020488
   140016b87:	mov    rbx,QWORD PTR [rsp+0x30]
   140016b8c:	mov    rsi,QWORD PTR [rsp+0x40]
   140016b91:	mov    rax,rbp
   140016b94:	mov    rbp,QWORD PTR [rsp+0x38]
   140016b99:	add    rsp,0x20
   140016b9d:	pop    rdi
   140016b9e:	ret    
   140016b9f:	int3   
   140016ba0:	cmp    rdx,r8
   140016ba3:	je     0x140016c0b
   140016ba5:	mov    QWORD PTR [rsp+0x8],rbx
   140016baa:	mov    QWORD PTR [rsp+0x10],rsi
   140016baf:	push   rdi
   140016bb0:	sub    rsp,0x20
   140016bb4:	mov    rdi,r9
   140016bb7:	mov    rsi,r8
   140016bba:	mov    rbx,rdx
   140016bbd:	nop    DWORD PTR [rax]
   140016bc0:	mov    ecx,0x10
   140016bc5:	call   0x14001ee64
   140016bca:	test   rax,rax
   140016bcd:	je     0x140016bea
   140016bcf:	mov    rdx,QWORD PTR [rdi]
   140016bd2:	mov    ecx,DWORD PTR [rdx]
   140016bd4:	mov    DWORD PTR [rax],ecx
   140016bd6:	mov    ecx,DWORD PTR [rdx+0x4]
   140016bd9:	mov    DWORD PTR [rax+0x4],ecx
   140016bdc:	mov    ecx,DWORD PTR [rdx+0x8]
   140016bdf:	mov    DWORD PTR [rax+0x8],ecx
   140016be2:	mov    ecx,DWORD PTR [rdx+0xc]
   140016be5:	mov    DWORD PTR [rax+0xc],ecx
   140016be8:	jmp    0x140016bec
   140016bea:	xor    eax,eax
   140016bec:	mov    QWORD PTR [rbx],rax
   140016bef:	add    rbx,0x8
   140016bf3:	add    rdi,0x8
   140016bf7:	cmp    rbx,rsi
   140016bfa:	jne    0x140016bc0
   140016bfc:	mov    rbx,QWORD PTR [rsp+0x30]
   140016c01:	mov    rsi,QWORD PTR [rsp+0x38]
   140016c06:	add    rsp,0x20
   140016c0a:	pop    rdi
   140016c0b:	repz ret 
   140016c0d:	int3   
   140016c0e:	int3   
   140016c0f:	int3   
   140016c10:	sub    rsp,0x28
   140016c14:	mov    rdx,QWORD PTR [rcx]
   140016c17:	mov    eax,DWORD PTR [rdx]
   140016c19:	test   eax,eax
   140016c1b:	je     0x140016c2d
   140016c1d:	cmp    eax,0xffffffff
   140016c20:	je     0x140016c8a
   140016c22:	lock add DWORD PTR [rdx],0xffffffff
   140016c26:	setne  al
   140016c29:	test   al,al
   140016c2b:	jne    0x140016c8a
   140016c2d:	mov    QWORD PTR [rsp+0x30],rbx
   140016c32:	mov    QWORD PTR [rsp+0x38],rsi
   140016c37:	mov    rsi,QWORD PTR [rcx]
   140016c3a:	movsxd rax,DWORD PTR [rsi+0xc]
   140016c3e:	mov    QWORD PTR [rsp+0x20],rdi
   140016c43:	lea    rbx,[rsi+rax*8+0x10]
   140016c48:	movsxd rax,DWORD PTR [rsi+0x8]
   140016c4c:	lea    rdi,[rsi+rax*8+0x10]
   140016c51:	cmp    rdi,rbx
   140016c54:	je     0x140016c72
   140016c56:	data16 nop WORD PTR [rax+rax*1+0x0]
   140016c60:	mov    rcx,QWORD PTR [rbx-0x8]
   140016c64:	sub    rbx,0x8
   140016c68:	call   0x14001ee46
   140016c6d:	cmp    rbx,rdi
   140016c70:	jne    0x140016c60
   140016c72:	mov    rcx,rsi
   140016c75:	call   QWORD PTR [rip+0x9a55]        # 0x1400206d0
   140016c7b:	mov    rdi,QWORD PTR [rsp+0x20]
   140016c80:	mov    rsi,QWORD PTR [rsp+0x38]
   140016c85:	mov    rbx,QWORD PTR [rsp+0x30]
   140016c8a:	add    rsp,0x28
   140016c8e:	ret    
   140016c8f:	int3   
   140016c90:	mov    QWORD PTR [rsp+0x8],rbx
   140016c95:	mov    QWORD PTR [rsp+0x18],rbp
   140016c9a:	mov    QWORD PTR [rsp+0x20],rsi
   140016c9f:	mov    DWORD PTR [rsp+0x10],edx
   140016ca3:	push   rdi
   140016ca4:	sub    rsp,0x20
   140016ca8:	mov    rdx,QWORD PTR [rcx]
   140016cab:	movsxd rdi,r8d
   140016cae:	mov    rbp,rcx
   140016cb1:	movsxd rax,DWORD PTR [rdx+0x8]
   140016cb5:	mov    r8d,edi
   140016cb8:	lea    rbx,[rdx+rax*8+0x10]
   140016cbd:	lea    rdx,[rsp+0x38]
   140016cc2:	call   QWORD PTR [rip+0x9998]        # 0x140020660
   140016cc8:	mov    r10,QWORD PTR [rbp+0x0]
   140016ccc:	movsxd rdx,DWORD PTR [rsp+0x38]
   140016cd1:	movsxd r9,DWORD PTR [r10+0x8]
   140016cd5:	mov    rcx,rbp
   140016cd8:	mov    rsi,rax
   140016cdb:	add    rdx,r9
   140016cde:	lea    r8,[r10+rdx*8+0x10]
   140016ce3:	lea    rdx,[r10+r9*8+0x10]
   140016ce8:	mov    r9,rbx
   140016ceb:	call   0x140016ba0
   140016cf0:	mov    rdx,QWORD PTR [rbp+0x0]
   140016cf4:	movsxd r11,DWORD PTR [rsp+0x38]
   140016cf9:	movsxd rcx,DWORD PTR [rdx+0xc]
   140016cfd:	lea    r9,[rbx+r11*8]
   140016d01:	lea    r8,[rdx+rcx*8+0x10]
   140016d06:	movsxd rcx,DWORD PTR [rdx+0x8]
   140016d0a:	add    rcx,r11
   140016d0d:	add    rcx,rdi
   140016d10:	lea    rdx,[rdx+rcx*8+0x10]
   140016d15:	mov    rcx,rbp
   140016d18:	call   0x140016ba0
   140016d1d:	mov    r11d,DWORD PTR [rsi]
   140016d20:	test   r11d,r11d
   140016d23:	je     0x140016d36
   140016d25:	cmp    r11d,0xffffffff
   140016d29:	je     0x140016d6b
   140016d2b:	lock add DWORD PTR [rsi],0xffffffff
   140016d2f:	setne  al
   140016d32:	test   al,al
   140016d34:	jne    0x140016d6b
   140016d36:	movsxd rax,DWORD PTR [rsi+0xc]
   140016d3a:	lea    rbx,[rsi+rax*8+0x10]
   140016d3f:	movsxd rax,DWORD PTR [rsi+0x8]
   140016d43:	lea    rdi,[rsi+rax*8+0x10]
   140016d48:	cmp    rdi,rbx
   140016d4b:	je     0x140016d62
   140016d4d:	nop    DWORD PTR [rax]
   140016d50:	mov    rcx,QWORD PTR [rbx-0x8]
   140016d54:	sub    rbx,0x8
   140016d58:	call   0x14001ee46
   140016d5d:	cmp    rbx,rdi
   140016d60:	jne    0x140016d50
   140016d62:	mov    rcx,rsi
   140016d65:	call   QWORD PTR [rip+0x9965]        # 0x1400206d0
   140016d6b:	mov    rdx,QWORD PTR [rbp+0x0]
   140016d6f:	movsxd rax,DWORD PTR [rsp+0x38]
   140016d74:	mov    rbx,QWORD PTR [rsp+0x30]
   140016d79:	movsxd rcx,DWORD PTR [rdx+0x8]
   140016d7d:	mov    rbp,QWORD PTR [rsp+0x40]
   140016d82:	mov    rsi,QWORD PTR [rsp+0x48]
   140016d87:	add    rcx,rax
   140016d8a:	lea    rax,[rdx+rcx*8+0x10]
   140016d8f:	add    rsp,0x20
   140016d93:	pop    rdi
   140016d94:	ret    
   140016d95:	int3   
   140016d96:	int3   
   140016d97:	int3   
   140016d98:	int3   
   140016d99:	int3   
   140016d9a:	int3   
   140016d9b:	int3   
   140016d9c:	int3   
   140016d9d:	int3   
   140016d9e:	int3   
   140016d9f:	int3   
   140016da0:	mov    QWORD PTR [rsp+0x8],rbx
   140016da5:	mov    QWORD PTR [rsp+0x10],rsi
   140016daa:	push   rdi
   140016dab:	sub    rsp,0x20
   140016daf:	xor    esi,esi
   140016db1:	mov    rdi,rcx
   140016db4:	add    rcx,0x10
   140016db8:	mov    QWORD PTR [rcx-0x10],rsi
   140016dbc:	mov    QWORD PTR [rcx-0x8],rsi
   140016dc0:	call   QWORD PTR [rip+0x96a2]        # 0x140020468
   140016dc6:	mov    QWORD PTR [rdi+0x18],rsi
   140016dca:	mov    DWORD PTR [rdi+0x20],esi
   140016dcd:	mov    DWORD PTR [rdi+0x24],0xffffffff
   140016dd4:	mov    QWORD PTR [rdi+0x28],rsi
   140016dd8:	mov    QWORD PTR [rdi+0x30],rsi
   140016ddc:	mov    rax,QWORD PTR [rip+0x997d]        # 0x140020760
   140016de3:	lea    rcx,[rdi+0x40]
   140016de7:	mov    QWORD PTR [rdi+0x38],rax
   140016deb:	call   QWORD PTR [rip+0x97a7]        # 0x140020598
   140016df1:	lea    rcx,[rdi+0x48]
   140016df5:	call   QWORD PTR [rip+0x979d]        # 0x140020598
   140016dfb:	mov    rbx,QWORD PTR [rsp+0x30]
   140016e00:	mov    rsi,QWORD PTR [rsp+0x38]
   140016e05:	mov    rax,rdi
   140016e08:	add    rsp,0x20
   140016e0c:	pop    rdi
   140016e0d:	ret    
   140016e0e:	int3   
   140016e0f:	int3   
   140016e10:	rex push rbx
   140016e12:	sub    rsp,0x20
   140016e16:	mov    rbx,rcx
   140016e19:	add    rcx,0x48
   140016e1d:	call   QWORD PTR [rip+0x995d]        # 0x140020780
   140016e23:	lea    rcx,[rbx+0x40]
   140016e27:	call   QWORD PTR [rip+0x9953]        # 0x140020780
   140016e2d:	lea    rcx,[rbx+0x38]
   140016e31:	call   0x140016c10
   140016e36:	lea    rcx,[rbx+0x10]
   140016e3a:	add    rsp,0x20
   140016e3e:	pop    rbx
   140016e3f:	jmp    0x140016740
   140016e44:	int3   
   140016e45:	int3   
   140016e46:	int3   
   140016e47:	int3   
   140016e48:	int3   
   140016e49:	int3   
   140016e4a:	int3   
   140016e4b:	int3   
   140016e4c:	int3   
   140016e4d:	int3   
   140016e4e:	int3   
   140016e4f:	int3   
   140016e50:	sub    rsp,0x38
   140016e54:	test   r8d,r8d
   140016e57:	jle    0x140016ee6
   140016e5d:	mov    eax,DWORD PTR [rsp+0x60]
   140016e61:	add    rcx,0x38
   140016e65:	mov    DWORD PTR [rsp+0x20],edx
   140016e69:	mov    DWORD PTR [rsp+0x2c],eax
   140016e6d:	mov    rax,QWORD PTR [rcx]
   140016e70:	mov    QWORD PTR [rsp+0x30],rbx
   140016e75:	mov    edx,DWORD PTR [rax]
   140016e77:	mov    DWORD PTR [rsp+0x24],r8d
   140016e7c:	mov    DWORD PTR [rsp+0x28],r9d
   140016e81:	cmp    edx,0x1
   140016e84:	je     0x140016e9c
   140016e86:	test   edx,edx
   140016e88:	je     0x140016e9c
   140016e8a:	mov    edx,0x7fffffff
   140016e8f:	mov    r8d,0x1
   140016e95:	call   0x140016c90
   140016e9a:	jmp    0x140016ea2
   140016e9c:	call   QWORD PTR [rip+0x9796]        # 0x140020638
   140016ea2:	mov    ecx,0x10
   140016ea7:	mov    rbx,rax
   140016eaa:	call   0x14001ee64
   140016eaf:	test   rax,rax
   140016eb2:	je     0x140016edc
   140016eb4:	lea    rdx,[rsp+0x20]
   140016eb9:	mov    ecx,DWORD PTR [rdx]
   140016ebb:	mov    DWORD PTR [rax],ecx
   140016ebd:	mov    ecx,DWORD PTR [rdx+0x4]
   140016ec0:	mov    DWORD PTR [rax+0x4],ecx
   140016ec3:	mov    ecx,DWORD PTR [rdx+0x8]
   140016ec6:	mov    DWORD PTR [rax+0x8],ecx
   140016ec9:	mov    ecx,DWORD PTR [rdx+0xc]
   140016ecc:	mov    DWORD PTR [rax+0xc],ecx
   140016ecf:	mov    QWORD PTR [rbx],rax
   140016ed2:	mov    rbx,QWORD PTR [rsp+0x30]
   140016ed7:	add    rsp,0x38
   140016edb:	ret    
   140016edc:	xor    eax,eax
   140016ede:	mov    QWORD PTR [rbx],rax
   140016ee1:	mov    rbx,QWORD PTR [rsp+0x30]
   140016ee6:	add    rsp,0x38
   140016eea:	ret    
   140016eeb:	int3   
   140016eec:	int3   
   140016eed:	int3   
   140016eee:	int3   
   140016eef:	int3   
   140016ef0:	movzx  eax,WORD PTR [rcx]
   140016ef3:	cmp    ax,0x66
   140016ef7:	jne    0x140016f15
   140016ef9:	cmp    WORD PTR [rcx+0x2],0x6f
   140016efe:	jne    0x140016fc2
   140016f04:	cmp    WORD PTR [rcx+0x4],0x72
   140016f09:	jne    0x140016fc2
   140016f0f:	mov    eax,0x15
   140016f14:	ret    
   140016f15:	cmp    ax,0x67
   140016f19:	jne    0x140016f37
   140016f1b:	cmp    WORD PTR [rcx+0x2],0x65
   140016f20:	jne    0x140016fc2
   140016f26:	cmp    WORD PTR [rcx+0x4],0x74
   140016f2b:	jne    0x140016fc2
   140016f31:	mov    eax,0x5f
   140016f36:	ret    
   140016f37:	cmp    ax,0x69
   140016f3b:	jne    0x140016f5b
   140016f3d:	cmp    WORD PTR [rcx+0x2],0x6e
   140016f42:	jne    0x140016fc2
   140016f44:	cmp    WORD PTR [rcx+0x4],0x74
   140016f49:	jne    0x140016fc2
   140016f4b:	mov    eax,0x1d
   140016f50:	mov    ecx,0x56
   140016f55:	test   dl,dl
   140016f57:	cmovne eax,ecx
   140016f5a:	ret    
   140016f5b:	cmp    ax,0x6e
   140016f5f:	jne    0x140016f75
   140016f61:	cmp    WORD PTR [rcx+0x2],0x65
   140016f66:	jne    0x140016fc2
   140016f68:	cmp    WORD PTR [rcx+0x4],0x77
   140016f6d:	jne    0x140016fc2
   140016f6f:	mov    eax,0x2b
   140016f74:	ret    
   140016f75:	cmp    ax,0x73
   140016f79:	jne    0x140016f8f
   140016f7b:	cmp    WORD PTR [rcx+0x2],0x65
   140016f80:	jne    0x140016fc2
   140016f82:	cmp    WORD PTR [rcx+0x4],0x74
   140016f87:	jne    0x140016fc2
   140016f89:	mov    eax,0x60
   140016f8e:	ret    
   140016f8f:	cmp    ax,0x74
   140016f93:	jne    0x140016fa9
   140016f95:	cmp    WORD PTR [rcx+0x2],0x72
   140016f9a:	jne    0x140016fc2
   140016f9c:	cmp    WORD PTR [rcx+0x4],0x79
   140016fa1:	jne    0x140016fc2
   140016fa3:	mov    eax,0x49
   140016fa8:	ret    
   140016fa9:	cmp    ax,0x76
   140016fad:	jne    0x140016fc2
   140016faf:	cmp    WORD PTR [rcx+0x2],0x61
   140016fb4:	jne    0x140016fc2
   140016fb6:	cmp    WORD PTR [rcx+0x4],0x72
   140016fbb:	mov    eax,0x4b
   140016fc0:	je     0x140016fc7
   140016fc2:	mov    eax,0x1d
   140016fc7:	repz ret 
   140016fc9:	int3   
   140016fca:	int3   
   140016fcb:	int3   
   140016fcc:	int3   
   140016fcd:	int3   
   140016fce:	int3   
   140016fcf:	int3   
   140016fd0:	movzx  eax,WORD PTR [rcx]
   140016fd3:	cmp    ax,0x62
   140016fd7:	jne    0x14001700a
   140016fd9:	cmp    WORD PTR [rcx+0x2],0x79
   140016fde:	jne    0x14001719c
   140016fe4:	cmp    WORD PTR [rcx+0x4],0x74
   140016fe9:	jne    0x14001719c
   140016fef:	cmp    WORD PTR [rcx+0x6],0x65
   140016ff4:	jne    0x14001719c
   140016ffa:	mov    eax,0x1d
   140016fff:	mov    ecx,0x56
   140017004:	test   dl,dl
   140017006:	cmovne eax,ecx
   140017009:	ret    
   14001700a:	cmp    ax,0x63
   14001700e:	jne    0x140017052
   140017010:	movzx  eax,WORD PTR [rcx+0x2]
   140017014:	cmp    ax,0x61
   140017018:	jne    0x140017036
   14001701a:	cmp    WORD PTR [rcx+0x4],0x73
   14001701f:	jne    0x14001719c
   140017025:	cmp    WORD PTR [rcx+0x6],0x65
   14001702a:	jne    0x14001719c
   140017030:	mov    eax,0x5
   140017035:	ret    
   140017036:	cmp    ax,0x68
   14001703a:	jne    0x14001719c
   140017040:	cmp    WORD PTR [rcx+0x4],0x61
   140017045:	jne    0x14001719c
   14001704b:	cmp    WORD PTR [rcx+0x6],0x72
   140017050:	jmp    0x140016ff4
   140017052:	cmp    ax,0x65
   140017056:	jne    0x1400170a4
   140017058:	movzx  eax,WORD PTR [rcx+0x2]
   14001705c:	cmp    ax,0x6c
   140017060:	jne    0x14001707e
   140017062:	cmp    WORD PTR [rcx+0x4],0x73
   140017067:	jne    0x14001719c
   14001706d:	cmp    WORD PTR [rcx+0x6],0x65
   140017072:	jne    0x14001719c
   140017078:	mov    eax,0x10
   14001707d:	ret    
   14001707e:	cmp    ax,0x6e
   140017082:	jne    0x14001719c
   140017088:	cmp    WORD PTR [rcx+0x4],0x75
   14001708d:	jne    0x14001719c
   140017093:	cmp    WORD PTR [rcx+0x6],0x6d
   140017098:	jne    0x14001719c
   14001709e:	mov    eax,0x56
   1400170a3:	ret    
   1400170a4:	cmp    ax,0x67
   1400170a8:	jne    0x1400170ca
   1400170aa:	cmp    WORD PTR [rcx+0x2],0x6f
   1400170af:	jne    0x14001719c
   1400170b5:	cmp    WORD PTR [rcx+0x4],0x74
   1400170ba:	jne    0x14001719c
   1400170c0:	cmp    WORD PTR [rcx+0x6],0x6f
   1400170c5:	jmp    0x140016ff4
   1400170ca:	cmp    ax,0x6c
   1400170ce:	jne    0x1400170f0
   1400170d0:	cmp    WORD PTR [rcx+0x2],0x6f
   1400170d5:	jne    0x14001719c
   1400170db:	cmp    WORD PTR [rcx+0x4],0x6e
   1400170e0:	jne    0x14001719c
   1400170e6:	cmp    WORD PTR [rcx+0x6],0x67
   1400170eb:	jmp    0x140016ff4
   1400170f0:	cmp    ax,0x6e
   1400170f4:	jne    0x14001711d
   1400170f6:	cmp    WORD PTR [rcx+0x2],0x75
   1400170fb:	jne    0x14001719c
   140017101:	cmp    WORD PTR [rcx+0x4],0x6c
   140017106:	jne    0x14001719c
   14001710c:	cmp    WORD PTR [rcx+0x6],0x6c
   140017111:	jne    0x14001719c
   140017117:	mov    eax,0x51
   14001711c:	ret    
   14001711d:	cmp    ax,0x74
   140017121:	jne    0x14001715b
   140017123:	movzx  eax,WORD PTR [rcx+0x2]
   140017127:	cmp    ax,0x68
   14001712b:	jne    0x140017141
   14001712d:	cmp    WORD PTR [rcx+0x4],0x69
   140017132:	jne    0x14001719c
   140017134:	cmp    WORD PTR [rcx+0x6],0x73
   140017139:	jne    0x14001719c
   14001713b:	mov    eax,0x46
   140017140:	ret    
   140017141:	cmp    ax,0x72
   140017145:	jne    0x14001719c
   140017147:	cmp    WORD PTR [rcx+0x4],0x75
   14001714c:	jne    0x14001719c
   14001714e:	cmp    WORD PTR [rcx+0x6],0x65
   140017153:	jne    0x14001719c
   140017155:	mov    eax,0x52
   14001715a:	ret    
   14001715b:	cmp    ax,0x76
   14001715f:	jne    0x14001717c
   140017161:	cmp    WORD PTR [rcx+0x2],0x6f
   140017166:	jne    0x14001719c
   140017168:	cmp    WORD PTR [rcx+0x4],0x69
   14001716d:	jne    0x14001719c
   14001716f:	cmp    WORD PTR [rcx+0x6],0x64
   140017174:	jne    0x14001719c
   140017176:	mov    eax,0x4c
   14001717b:	ret    
   14001717c:	cmp    ax,0x77
   140017180:	jne    0x14001719c
   140017182:	cmp    WORD PTR [rcx+0x2],0x69
   140017187:	jne    0x14001719c
   140017189:	cmp    WORD PTR [rcx+0x4],0x74
   14001718e:	jne    0x14001719c
   140017190:	cmp    WORD PTR [rcx+0x6],0x68
   140017195:	mov    eax,0x4e
   14001719a:	je     0x1400171a1
   14001719c:	mov    eax,0x1d
   1400171a1:	repz ret 
   1400171a3:	int3   
   1400171a4:	int3   
   1400171a5:	int3   
   1400171a6:	int3   
   1400171a7:	int3   
   1400171a8:	int3   
   1400171a9:	int3   
   1400171aa:	int3   
   1400171ab:	int3   
   1400171ac:	int3   
   1400171ad:	int3   
   1400171ae:	int3   
   1400171af:	int3   
   1400171b0:	movzx  eax,WORD PTR [rcx]
   1400171b3:	cmp    ax,0x62
   1400171b7:	jne    0x1400171eb
   1400171b9:	cmp    WORD PTR [rcx+0x2],0x72
   1400171be:	jne    0x1400173be
   1400171c4:	cmp    WORD PTR [rcx+0x4],0x65
   1400171c9:	jne    0x1400173be
   1400171cf:	cmp    WORD PTR [rcx+0x6],0x61
   1400171d4:	jne    0x1400173be
   1400171da:	cmp    WORD PTR [rcx+0x8],0x6b
   1400171df:	jne    0x1400173be
   1400171e5:	mov    eax,0x4
   1400171ea:	ret    
   1400171eb:	cmp    ax,0x63
   1400171ef:	jne    0x14001728e
   1400171f5:	movzx  eax,WORD PTR [rcx+0x2]
   1400171f9:	cmp    ax,0x61
   1400171fd:	jne    0x140017226
   1400171ff:	cmp    WORD PTR [rcx+0x4],0x74
   140017204:	jne    0x1400173be
   14001720a:	cmp    WORD PTR [rcx+0x6],0x63
   14001720f:	jne    0x1400173be
   140017215:	cmp    WORD PTR [rcx+0x8],0x68
   14001721a:	jne    0x1400173be
   140017220:	mov    eax,0x6
   140017225:	ret    
   140017226:	cmp    ax,0x6c
   14001722a:	jne    0x140017253
   14001722c:	cmp    WORD PTR [rcx+0x4],0x61
   140017231:	jne    0x1400173be
   140017237:	cmp    WORD PTR [rcx+0x6],0x73
   14001723c:	jne    0x1400173be
   140017242:	cmp    WORD PTR [rcx+0x8],0x73
   140017247:	jne    0x1400173be
   14001724d:	mov    eax,0x56
   140017252:	ret    
   140017253:	cmp    ax,0x6f
   140017257:	jne    0x1400173be
   14001725d:	cmp    WORD PTR [rcx+0x4],0x6e
   140017262:	jne    0x1400173be
   140017268:	cmp    WORD PTR [rcx+0x6],0x73
   14001726d:	jne    0x1400173be
   140017273:	cmp    WORD PTR [rcx+0x8],0x74
   140017278:	jne    0x1400173be
   14001727e:	mov    eax,0x56
   140017283:	mov    ecx,0x54
   140017288:	test   dl,dl
   14001728a:	cmovne eax,ecx
   14001728d:	ret    
   14001728e:	cmp    ax,0x66
   140017292:	jne    0x140017329
   140017298:	movzx  eax,WORD PTR [rcx+0x2]
   14001729c:	cmp    ax,0x61
   1400172a0:	jne    0x1400172c9
   1400172a2:	cmp    WORD PTR [rcx+0x4],0x6c
   1400172a7:	jne    0x1400173be
   1400172ad:	cmp    WORD PTR [rcx+0x6],0x73
   1400172b2:	jne    0x1400173be
   1400172b8:	cmp    WORD PTR [rcx+0x8],0x65
   1400172bd:	jne    0x1400173be
   1400172c3:	mov    eax,0x53
   1400172c8:	ret    
   1400172c9:	cmp    ax,0x69
   1400172cd:	jne    0x140017302
   1400172cf:	cmp    WORD PTR [rcx+0x4],0x6e
   1400172d4:	jne    0x1400173be
   1400172da:	cmp    WORD PTR [rcx+0x6],0x61
   1400172df:	jne    0x1400173be
   1400172e5:	cmp    WORD PTR [rcx+0x8],0x6c
   1400172ea:	jne    0x1400173be
   1400172f0:	mov    eax,0x56
   1400172f5:	mov    ecx,0x1d
   1400172fa:	test   dl,dl
   1400172fc:	cmovne ecx,eax
   1400172ff:	mov    eax,ecx
   140017301:	ret    
   140017302:	cmp    ax,0x6c
   140017306:	jne    0x1400173be
   14001730c:	cmp    WORD PTR [rcx+0x4],0x6f
   140017311:	jne    0x1400173be
   140017317:	cmp    WORD PTR [rcx+0x6],0x61
   14001731c:	jne    0x1400173be
   140017322:	cmp    WORD PTR [rcx+0x8],0x74
   140017327:	jmp    0x1400172ea
   140017329:	cmp    ax,0x73
   14001732d:	jne    0x14001736f
   14001732f:	movzx  eax,WORD PTR [rcx+0x2]
   140017333:	cmp    ax,0x68
   140017337:	jne    0x14001734e
   140017339:	cmp    WORD PTR [rcx+0x4],0x6f
   14001733e:	jne    0x1400173be
   140017340:	cmp    WORD PTR [rcx+0x6],0x72
   140017345:	jne    0x1400173be
   140017347:	cmp    WORD PTR [rcx+0x8],0x74
   14001734c:	jmp    0x1400172ea
   14001734e:	cmp    ax,0x75
   140017352:	jne    0x1400173be
   140017354:	cmp    WORD PTR [rcx+0x4],0x70
   140017359:	jne    0x1400173be
   14001735b:	cmp    WORD PTR [rcx+0x6],0x65
   140017360:	jne    0x1400173be
   140017362:	cmp    WORD PTR [rcx+0x8],0x72
   140017367:	jne    0x1400173be
   140017369:	mov    eax,0x56
   14001736e:	ret    
   14001736f:	cmp    ax,0x74
   140017373:	jne    0x140017397
   140017375:	cmp    WORD PTR [rcx+0x2],0x68
   14001737a:	jne    0x1400173be
   14001737c:	cmp    WORD PTR [rcx+0x4],0x72
   140017381:	jne    0x1400173be
   140017383:	cmp    WORD PTR [rcx+0x6],0x6f
   140017388:	jne    0x1400173be
   14001738a:	cmp    WORD PTR [rcx+0x8],0x77
   14001738f:	jne    0x1400173be
   140017391:	mov    eax,0x47
   140017396:	ret    
   140017397:	cmp    ax,0x77
   14001739b:	jne    0x1400173be
   14001739d:	cmp    WORD PTR [rcx+0x2],0x68
   1400173a2:	jne    0x1400173be
   1400173a4:	cmp    WORD PTR [rcx+0x4],0x69
   1400173a9:	jne    0x1400173be
   1400173ab:	cmp    WORD PTR [rcx+0x6],0x6c
   1400173b0:	jne    0x1400173be
   1400173b2:	cmp    WORD PTR [rcx+0x8],0x65
   1400173b7:	mov    eax,0x4d
   1400173bc:	je     0x1400173c3
   1400173be:	mov    eax,0x1d
   1400173c3:	repz ret 
   1400173c5:	int3   
   1400173c6:	int3   
   1400173c7:	int3   
   1400173c8:	int3   
   1400173c9:	int3   
   1400173ca:	int3   
   1400173cb:	int3   
   1400173cc:	int3   
   1400173cd:	int3   
   1400173ce:	int3   
   1400173cf:	int3   
   1400173d0:	movzx  eax,WORD PTR [rcx]
   1400173d3:	cmp    ax,0x64
   1400173d7:	jne    0x14001745d
   1400173dd:	movzx  eax,WORD PTR [rcx+0x2]
   1400173e1:	cmp    ax,0x65
   1400173e5:	jne    0x140017417
   1400173e7:	cmp    WORD PTR [rcx+0x4],0x6c
   1400173ec:	jne    0x1400176f1
   1400173f2:	cmp    WORD PTR [rcx+0x6],ax
   1400173f6:	jne    0x1400176f1
   1400173fc:	cmp    WORD PTR [rcx+0x8],0x74
   140017401:	jne    0x1400176f1
   140017407:	cmp    WORD PTR [rcx+0xa],ax
   14001740b:	jne    0x1400176f1
   140017411:	mov    eax,0xb
   140017416:	ret    
   140017417:	cmp    ax,0x6f
   14001741b:	jne    0x1400176f1
   140017421:	cmp    WORD PTR [rcx+0x4],0x75
   140017426:	jne    0x1400176f1
   14001742c:	cmp    WORD PTR [rcx+0x6],0x62
   140017431:	jne    0x1400176f1
   140017437:	cmp    WORD PTR [rcx+0x8],0x6c
   14001743c:	jne    0x1400176f1
   140017442:	cmp    WORD PTR [rcx+0xa],0x65
   140017447:	jne    0x1400176f1
   14001744d:	mov    ecx,0x56
   140017452:	mov    eax,0x1d
   140017457:	test   dl,dl
   140017459:	cmovne eax,ecx
   14001745c:	ret    
   14001745d:	cmp    ax,0x65
   140017461:	jne    0x1400174a0
   140017463:	cmp    WORD PTR [rcx+0x2],0x78
   140017468:	jne    0x1400176f1
   14001746e:	cmp    WORD PTR [rcx+0x4],0x70
   140017473:	jne    0x1400176f1
   140017479:	cmp    WORD PTR [rcx+0x6],0x6f
   14001747e:	jne    0x1400176f1
   140017484:	cmp    WORD PTR [rcx+0x8],0x72
   140017489:	jne    0x1400176f1
   14001748f:	cmp    WORD PTR [rcx+0xa],0x74
   140017494:	jne    0x1400176f1
   14001749a:	mov    eax,0x56
   14001749f:	ret    
   1400174a0:	cmp    ax,0x69
   1400174a4:	jne    0x1400174ef
   1400174a6:	cmp    WORD PTR [rcx+0x2],0x6d
   1400174ab:	jne    0x1400176f1
   1400174b1:	cmp    WORD PTR [rcx+0x4],0x70
   1400174b6:	jne    0x1400176f1
   1400174bc:	cmp    WORD PTR [rcx+0x6],0x6f
   1400174c1:	jne    0x1400176f1
   1400174c7:	cmp    WORD PTR [rcx+0x8],0x72
   1400174cc:	jne    0x1400176f1
   1400174d2:	cmp    WORD PTR [rcx+0xa],0x74
   1400174d7:	jne    0x1400176f1
   1400174dd:	mov    eax,0x5b
   1400174e2:	mov    ecx,0x56
   1400174e7:	test   dl,dl
   1400174e9:	cmovne ecx,eax
   1400174ec:	mov    eax,ecx
   1400174ee:	ret    
   1400174ef:	cmp    ax,0x6e
   1400174f3:	jne    0x140017520
   1400174f5:	cmp    WORD PTR [rcx+0x2],0x61
   1400174fa:	jne    0x1400176f1
   140017500:	cmp    WORD PTR [rcx+0x4],0x74
   140017505:	jne    0x1400176f1
   14001750b:	cmp    WORD PTR [rcx+0x6],0x69
   140017510:	jne    0x1400176f1
   140017516:	cmp    WORD PTR [rcx+0x8],0x76
   14001751b:	jmp    0x14001743c
   140017520:	cmp    ax,0x70
   140017524:	jne    0x1400175b6
   14001752a:	movzx  eax,WORD PTR [rcx+0x2]
   14001752e:	cmp    ax,0x75
   140017532:	jne    0x140017570
   140017534:	cmp    WORD PTR [rcx+0x4],0x62
   140017539:	jne    0x1400176f1
   14001753f:	cmp    WORD PTR [rcx+0x6],0x6c
   140017544:	jne    0x1400176f1
   14001754a:	cmp    WORD PTR [rcx+0x8],0x69
   14001754f:	jne    0x1400176f1
   140017555:	cmp    WORD PTR [rcx+0xa],0x63
   14001755a:	jne    0x1400176f1
   140017560:	mov    ecx,0x5a
   140017565:	mov    eax,0x1d
   14001756a:	test   dl,dl
   14001756c:	cmovne eax,ecx
   14001756f:	ret    
   140017570:	cmp    ax,0x72
   140017574:	jne    0x1400176f1
   14001757a:	cmp    WORD PTR [rcx+0x4],0x61
   14001757f:	jne    0x1400176f1
   140017585:	cmp    WORD PTR [rcx+0x6],0x67
   14001758a:	jne    0x1400176f1
   140017590:	cmp    WORD PTR [rcx+0x8],0x6d
   140017595:	jne    0x1400176f1
   14001759b:	cmp    WORD PTR [rcx+0xa],0x61
   1400175a0:	jne    0x1400176f1
   1400175a6:	mov    ecx,0x5c
   1400175ab:	mov    eax,0x1d
   1400175b0:	test   dl,dl
   1400175b2:	cmovne eax,ecx
   1400175b5:	ret    
   1400175b6:	cmp    ax,0x72
   1400175ba:	jne    0x1400175f8
   1400175bc:	cmp    WORD PTR [rcx+0x2],0x65
   1400175c1:	jne    0x1400176f1
   1400175c7:	cmp    WORD PTR [rcx+0x4],0x74
   1400175cc:	jne    0x1400176f1
   1400175d2:	cmp    WORD PTR [rcx+0x6],0x75
   1400175d7:	jne    0x1400176f1
   1400175dd:	cmp    WORD PTR [rcx+0x8],ax
   1400175e1:	jne    0x1400176f1
   1400175e7:	cmp    WORD PTR [rcx+0xa],0x6e
   1400175ec:	jne    0x1400176f1
   1400175f2:	mov    eax,0x3b
   1400175f7:	ret    
   1400175f8:	cmp    ax,0x73
   1400175fc:	jne    0x14001769b
   140017602:	test   dl,dl
   140017604:	je     0x14001763f
   140017606:	cmp    WORD PTR [rcx+0x2],0x69
   14001760b:	jne    0x14001763f
   14001760d:	cmp    WORD PTR [rcx+0x4],0x67
   140017612:	jne    0x1400176f1
   140017618:	cmp    WORD PTR [rcx+0x6],0x6e
   14001761d:	jne    0x1400176f1
   140017623:	cmp    WORD PTR [rcx+0x8],0x61
   140017628:	jne    0x1400176f1
   14001762e:	cmp    WORD PTR [rcx+0xa],0x6c
   140017633:	jne    0x1400176f1
   140017639:	mov    eax,0x43
   14001763e:	ret    
   14001763f:	movzx  eax,WORD PTR [rcx+0x2]
   140017643:	cmp    ax,0x74
   140017647:	jne    0x140017673
   140017649:	cmp    WORD PTR [rcx+0x4],0x61
   14001764e:	jne    0x1400176f1
   140017654:	cmp    WORD PTR [rcx+0x6],ax
   140017658:	jne    0x1400176f1
   14001765e:	cmp    WORD PTR [rcx+0x8],0x69
   140017663:	jne    0x1400176f1
   140017669:	cmp    WORD PTR [rcx+0xa],0x63
   14001766e:	jmp    0x140017447
   140017673:	cmp    ax,0x77
   140017677:	jne    0x1400176f1
   140017679:	cmp    WORD PTR [rcx+0x4],0x69
   14001767e:	jne    0x1400176f1
   140017680:	cmp    WORD PTR [rcx+0x6],0x74
   140017685:	jne    0x1400176f1
   140017687:	cmp    WORD PTR [rcx+0x8],0x63
   14001768c:	jne    0x1400176f1
   14001768e:	cmp    WORD PTR [rcx+0xa],0x68
   140017693:	jne    0x1400176f1
   140017695:	mov    eax,0x45
   14001769a:	ret    
   14001769b:	cmp    ax,0x74
   14001769f:	jne    0x1400176f1
   1400176a1:	movzx  eax,WORD PTR [rcx+0x2]
   1400176a5:	cmp    ax,0x68
   1400176a9:	jne    0x1400176ca
   1400176ab:	cmp    WORD PTR [rcx+0x4],0x72
   1400176b0:	jne    0x1400176f1
   1400176b2:	cmp    WORD PTR [rcx+0x6],0x6f
   1400176b7:	jne    0x1400176f1
   1400176b9:	cmp    WORD PTR [rcx+0x8],0x77
   1400176be:	jne    0x1400176f1
   1400176c0:	cmp    WORD PTR [rcx+0xa],0x73
   1400176c5:	jmp    0x140017447
   1400176ca:	cmp    ax,0x79
   1400176ce:	jne    0x1400176f1
   1400176d0:	cmp    WORD PTR [rcx+0x4],0x70
   1400176d5:	jne    0x1400176f1
   1400176d7:	cmp    WORD PTR [rcx+0x6],0x65
   1400176dc:	jne    0x1400176f1
   1400176de:	cmp    WORD PTR [rcx+0x8],0x6f
   1400176e3:	jne    0x1400176f1
   1400176e5:	cmp    WORD PTR [rcx+0xa],0x66
   1400176ea:	mov    eax,0x4a
   1400176ef:	je     0x1400176f6
   1400176f1:	mov    eax,0x1d
   1400176f6:	repz ret 
   1400176f8:	int3   
   1400176f9:	int3   
   1400176fa:	int3   
   1400176fb:	int3   
   1400176fc:	int3   
   1400176fd:	int3   
   1400176fe:	int3   
   1400176ff:	int3   
   140017700:	movzx  eax,WORD PTR [rcx]
   140017703:	cmp    ax,0x62
   140017707:	jne    0x14001775b
   140017709:	cmp    WORD PTR [rcx+0x2],0x6f
   14001770e:	jne    0x140017895
   140017714:	cmp    WORD PTR [rcx+0x4],0x6f
   140017719:	jne    0x140017895
   14001771f:	cmp    WORD PTR [rcx+0x6],0x6c
   140017724:	jne    0x140017895
   14001772a:	cmp    WORD PTR [rcx+0x8],0x65
   14001772f:	jne    0x140017895
   140017735:	cmp    WORD PTR [rcx+0xa],0x61
   14001773a:	jne    0x140017895
   140017740:	cmp    WORD PTR [rcx+0xc],0x6e
   140017745:	jne    0x140017895
   14001774b:	mov    eax,0x1d
   140017750:	mov    ecx,0x56
   140017755:	test   dl,dl
   140017757:	cmovne eax,ecx
   14001775a:	ret    
   14001775b:	cmp    ax,0x64
   14001775f:	jne    0x1400177a9
   140017761:	cmp    WORD PTR [rcx+0x2],0x65
   140017766:	jne    0x140017895
   14001776c:	cmp    WORD PTR [rcx+0x4],0x66
   140017771:	jne    0x140017895
   140017777:	cmp    WORD PTR [rcx+0x6],0x61
   14001777c:	jne    0x140017895
   140017782:	cmp    WORD PTR [rcx+0x8],0x75
   140017787:	jne    0x140017895
   14001778d:	cmp    WORD PTR [rcx+0xa],0x6c
   140017792:	jne    0x140017895
   140017798:	cmp    WORD PTR [rcx+0xc],0x74
   14001779d:	jne    0x140017895
   1400177a3:	mov    eax,0xa
   1400177a8:	ret    
   1400177a9:	cmp    ax,0x65
   1400177ad:	jne    0x1400177f6
   1400177af:	cmp    WORD PTR [rcx+0x2],0x78
   1400177b4:	jne    0x140017895
   1400177ba:	cmp    WORD PTR [rcx+0x4],0x74
   1400177bf:	jne    0x140017895
   1400177c5:	cmp    WORD PTR [rcx+0x6],ax
   1400177c9:	jne    0x140017895
   1400177cf:	cmp    WORD PTR [rcx+0x8],0x6e
   1400177d4:	jne    0x140017895
   1400177da:	cmp    WORD PTR [rcx+0xa],0x64
   1400177df:	jne    0x140017895
   1400177e5:	cmp    WORD PTR [rcx+0xc],0x73
   1400177ea:	jne    0x140017895
   1400177f0:	mov    eax,0x56
   1400177f5:	ret    
   1400177f6:	cmp    ax,0x66
   1400177fa:	jne    0x140017834
   1400177fc:	cmp    WORD PTR [rcx+0x2],0x69
   140017801:	jne    0x140017895
   140017807:	cmp    WORD PTR [rcx+0x4],0x6e
   14001780c:	jne    0x140017895
   140017812:	cmp    WORD PTR [rcx+0x6],0x61
   140017817:	jne    0x140017895
   140017819:	cmp    WORD PTR [rcx+0x8],0x6c
   14001781e:	jne    0x140017895
   140017820:	cmp    WORD PTR [rcx+0xa],0x6c
   140017825:	jne    0x140017895
   140017827:	cmp    WORD PTR [rcx+0xc],0x79
   14001782c:	jne    0x140017895
   14001782e:	mov    eax,0x14
   140017833:	ret    
   140017834:	cmp    ax,0x70
   140017838:	jne    0x140017895
   14001783a:	movzx  eax,WORD PTR [rcx+0x2]
   14001783e:	cmp    ax,0x61
   140017842:	jne    0x140017869
   140017844:	cmp    WORD PTR [rcx+0x4],0x63
   140017849:	jne    0x140017895
   14001784b:	cmp    WORD PTR [rcx+0x6],0x6b
   140017850:	jne    0x140017895
   140017852:	cmp    WORD PTR [rcx+0x8],ax
   140017856:	jne    0x140017895
   140017858:	cmp    WORD PTR [rcx+0xa],0x67
   14001785d:	jne    0x140017895
   14001785f:	cmp    WORD PTR [rcx+0xc],0x65
   140017864:	jmp    0x140017745
   140017869:	cmp    ax,0x72
   14001786d:	jne    0x140017895
   14001786f:	cmp    WORD PTR [rcx+0x4],0x69
   140017874:	jne    0x140017895
   140017876:	cmp    WORD PTR [rcx+0x6],0x76
   14001787b:	jne    0x140017895
   14001787d:	cmp    WORD PTR [rcx+0x8],0x61
   140017882:	jne    0x140017895
   140017884:	cmp    WORD PTR [rcx+0xa],0x74
   140017889:	jne    0x140017895
   14001788b:	cmp    WORD PTR [rcx+0xc],0x65
   140017890:	jmp    0x140017745
   140017895:	mov    eax,0x1d
   14001789a:	ret    
   14001789b:	int3   
   14001789c:	int3   
   14001789d:	int3   
   14001789e:	int3   
   14001789f:	int3   
   1400178a0:	movzx  eax,WORD PTR [rcx]
   1400178a3:	cmp    ax,0x61
   1400178a7:	jne    0x140017905
   1400178a9:	cmp    WORD PTR [rcx+0x2],0x62
   1400178ae:	jne    0x140017ae3
   1400178b4:	cmp    WORD PTR [rcx+0x4],0x73
   1400178b9:	jne    0x140017ae3
   1400178bf:	cmp    WORD PTR [rcx+0x6],0x74
   1400178c4:	jne    0x140017ae3
   1400178ca:	cmp    WORD PTR [rcx+0x8],0x72
   1400178cf:	jne    0x140017ae3
   1400178d5:	cmp    WORD PTR [rcx+0xa],ax
   1400178d9:	jne    0x140017ae3
   1400178df:	cmp    WORD PTR [rcx+0xc],0x63
   1400178e4:	jne    0x140017ae3
   1400178ea:	cmp    WORD PTR [rcx+0xe],0x74
   1400178ef:	jne    0x140017ae3
   1400178f5:	mov    eax,0x1d
   1400178fa:	mov    ecx,0x56
   1400178ff:	test   dl,dl
   140017901:	cmovne eax,ecx
   140017904:	ret    
   140017905:	cmp    ax,0x63
   140017909:	jne    0x14001795e
   14001790b:	cmp    WORD PTR [rcx+0x2],0x6f
   140017910:	jne    0x140017ae3
   140017916:	cmp    WORD PTR [rcx+0x4],0x6e
   14001791b:	jne    0x140017ae3
   140017921:	cmp    WORD PTR [rcx+0x6],0x74
   140017926:	jne    0x140017ae3
   14001792c:	cmp    WORD PTR [rcx+0x8],0x69
   140017931:	jne    0x140017ae3
   140017937:	cmp    WORD PTR [rcx+0xa],0x6e
   14001793c:	jne    0x140017ae3
   140017942:	cmp    WORD PTR [rcx+0xc],0x75
   140017947:	jne    0x140017ae3
   14001794d:	cmp    WORD PTR [rcx+0xe],0x65
   140017952:	jne    0x140017ae3
   140017958:	mov    eax,0x9
   14001795d:	ret    
   14001795e:	cmp    ax,0x64
   140017962:	jne    0x1400179b7
   140017964:	cmp    WORD PTR [rcx+0x2],0x65
   140017969:	jne    0x140017ae3
   14001796f:	cmp    WORD PTR [rcx+0x4],0x62
   140017974:	jne    0x140017ae3
   14001797a:	cmp    WORD PTR [rcx+0x6],0x75
   14001797f:	jne    0x140017ae3
   140017985:	cmp    WORD PTR [rcx+0x8],0x67
   14001798a:	jne    0x140017ae3
   140017990:	cmp    WORD PTR [rcx+0xa],0x67
   140017995:	jne    0x140017ae3
   14001799b:	cmp    WORD PTR [rcx+0xc],0x65
   1400179a0:	jne    0x140017ae3
   1400179a6:	cmp    WORD PTR [rcx+0xe],0x72
   1400179ab:	jne    0x140017ae3
   1400179b1:	mov    eax,0x55
   1400179b6:	ret    
   1400179b7:	cmp    ax,0x66
   1400179bb:	jne    0x140017a10
   1400179bd:	cmp    WORD PTR [rcx+0x2],0x75
   1400179c2:	jne    0x140017ae3
   1400179c8:	cmp    WORD PTR [rcx+0x4],0x6e
   1400179cd:	jne    0x140017ae3
   1400179d3:	cmp    WORD PTR [rcx+0x6],0x63
   1400179d8:	jne    0x140017ae3
   1400179de:	cmp    WORD PTR [rcx+0x8],0x74
   1400179e3:	jne    0x140017ae3
   1400179e9:	cmp    WORD PTR [rcx+0xa],0x69
   1400179ee:	jne    0x140017ae3
   1400179f4:	cmp    WORD PTR [rcx+0xc],0x6f
   1400179f9:	jne    0x140017ae3
   1400179ff:	cmp    WORD PTR [rcx+0xe],0x6e
   140017a04:	jne    0x140017ae3
   140017a0a:	mov    eax,0x16
   140017a0f:	ret    
   140017a10:	test   dl,dl
   140017a12:	je     0x140017aa9
   140017a18:	cmp    ax,0x70
   140017a1c:	jne    0x140017a6c
   140017a1e:	cmp    WORD PTR [rcx+0x2],0x72
   140017a23:	jne    0x140017ae3
   140017a29:	cmp    WORD PTR [rcx+0x4],0x6f
   140017a2e:	jne    0x140017ae3
   140017a34:	cmp    WORD PTR [rcx+0x6],ax
   140017a38:	jne    0x140017ae3
   140017a3e:	cmp    WORD PTR [rcx+0x8],0x65
   140017a43:	jne    0x140017ae3
   140017a49:	cmp    WORD PTR [rcx+0xa],0x72
   140017a4e:	jne    0x140017ae3
   140017a54:	cmp    WORD PTR [rcx+0xc],0x74
   140017a59:	jne    0x140017ae3
   140017a5f:	cmp    WORD PTR [rcx+0xe],0x79
   140017a64:	jne    0x140017ae3
   140017a66:	mov    eax,0x42
   140017a6b:	ret    
   140017a6c:	cmp    ax,0x72
   140017a70:	jne    0x140017aa9
   140017a72:	cmp    WORD PTR [rcx+0x2],0x65
   140017a77:	jne    0x140017ae3
   140017a79:	cmp    WORD PTR [rcx+0x4],0x61
   140017a7e:	jne    0x140017ae3
   140017a80:	cmp    WORD PTR [rcx+0x6],0x64
   140017a85:	jne    0x140017ae3
   140017a87:	cmp    WORD PTR [rcx+0x8],0x6f
   140017a8c:	jne    0x140017ae3
   140017a8e:	cmp    WORD PTR [rcx+0xa],0x6e
   140017a93:	jne    0x140017ae3
   140017a95:	cmp    WORD PTR [rcx+0xc],0x6c
   140017a9a:	jne    0x140017ae3
   140017a9c:	cmp    WORD PTR [rcx+0xe],0x79
   140017aa1:	jne    0x140017ae3
   140017aa3:	mov    eax,0x44
   140017aa8:	ret    
   140017aa9:	cmp    ax,0x76
   140017aad:	jne    0x140017ae3
   140017aaf:	cmp    WORD PTR [rcx+0x2],0x6f
   140017ab4:	jne    0x140017ae3
   140017ab6:	cmp    WORD PTR [rcx+0x4],0x6c
   140017abb:	jne    0x140017ae3
   140017abd:	cmp    WORD PTR [rcx+0x6],0x61
   140017ac2:	jne    0x140017ae3
   140017ac4:	cmp    WORD PTR [rcx+0x8],0x74
   140017ac9:	jne    0x140017ae3
   140017acb:	cmp    WORD PTR [rcx+0xa],0x69
   140017ad0:	jne    0x140017ae3
   140017ad2:	cmp    WORD PTR [rcx+0xc],0x6c
   140017ad7:	jne    0x140017ae3
   140017ad9:	cmp    WORD PTR [rcx+0xe],0x65
   140017ade:	jmp    0x1400178ef
   140017ae3:	mov    eax,0x1d
   140017ae8:	ret    
   140017ae9:	int3   
   140017aea:	int3   
   140017aeb:	int3   
   140017aec:	int3   
   140017aed:	int3   
   140017aee:	int3   
   140017aef:	int3   
   140017af0:	movzx  eax,WORD PTR [rcx]
   140017af3:	cmp    ax,0x69
   140017af7:	jne    0x140017b61
   140017af9:	cmp    WORD PTR [rcx+0x2],0x6e
   140017afe:	jne    0x140017bdf
   140017b04:	cmp    WORD PTR [rcx+0x4],0x74
   140017b09:	jne    0x140017bdf
   140017b0f:	cmp    WORD PTR [rcx+0x6],0x65
   140017b14:	jne    0x140017bdf
   140017b1a:	cmp    WORD PTR [rcx+0x8],0x72
   140017b1f:	jne    0x140017bdf
   140017b25:	cmp    WORD PTR [rcx+0xa],0x66
   140017b2a:	jne    0x140017bdf
   140017b30:	cmp    WORD PTR [rcx+0xc],0x61
   140017b35:	jne    0x140017bdf
   140017b3b:	cmp    WORD PTR [rcx+0xe],0x63
   140017b40:	jne    0x140017bdf
   140017b46:	cmp    WORD PTR [rcx+0x10],0x65
   140017b4b:	jne    0x140017bdf
   140017b51:	mov    eax,0x1d
   140017b56:	mov    ecx,0x56
   140017b5b:	test   dl,dl
   140017b5d:	cmovne eax,ecx
   140017b60:	ret    
   140017b61:	cmp    ax,0x70
   140017b65:	jne    0x140017b9f
   140017b67:	cmp    WORD PTR [rcx+0x2],0x72
   140017b6c:	jne    0x140017bdf
   140017b6e:	cmp    WORD PTR [rcx+0x4],0x6f
   140017b73:	jne    0x140017bdf
   140017b75:	cmp    WORD PTR [rcx+0x6],0x74
   140017b7a:	jne    0x140017bdf
   140017b7c:	cmp    WORD PTR [rcx+0x8],0x65
   140017b81:	jne    0x140017bdf
   140017b83:	cmp    WORD PTR [rcx+0xa],0x63
   140017b88:	jne    0x140017bdf
   140017b8a:	cmp    WORD PTR [rcx+0xc],0x74
   140017b8f:	jne    0x140017bdf
   140017b91:	cmp    WORD PTR [rcx+0xe],0x65
   140017b96:	jne    0x140017bdf
   140017b98:	cmp    WORD PTR [rcx+0x10],0x64
   140017b9d:	jmp    0x140017b4b
   140017b9f:	cmp    ax,0x74
   140017ba3:	jne    0x140017bdf
   140017ba5:	cmp    WORD PTR [rcx+0x2],0x72
   140017baa:	jne    0x140017bdf
   140017bac:	cmp    WORD PTR [rcx+0x4],0x61
   140017bb1:	jne    0x140017bdf
   140017bb3:	cmp    WORD PTR [rcx+0x6],0x6e
   140017bb8:	jne    0x140017bdf
   140017bba:	cmp    WORD PTR [rcx+0x8],0x73
   140017bbf:	jne    0x140017bdf
   140017bc1:	cmp    WORD PTR [rcx+0xa],0x69
   140017bc6:	jne    0x140017bdf
   140017bc8:	cmp    WORD PTR [rcx+0xc],0x65
   140017bcd:	jne    0x140017bdf
   140017bcf:	cmp    WORD PTR [rcx+0xe],0x6e
   140017bd4:	jne    0x140017bdf
   140017bd6:	cmp    WORD PTR [rcx+0x10],ax
   140017bda:	jmp    0x140017b4b
   140017bdf:	mov    eax,0x1d
   140017be4:	ret    
   140017be5:	int3   
   140017be6:	int3   
   140017be7:	int3   
   140017be8:	int3   
   140017be9:	int3   
   140017bea:	int3   
   140017beb:	int3   
   140017bec:	int3   
   140017bed:	int3   
   140017bee:	int3   
   140017bef:	int3   
   140017bf0:	cmp    WORD PTR [rcx],0x69
   140017bf4:	jne    0x140017c91
   140017bfa:	movzx  eax,WORD PTR [rcx+0x2]
   140017bfe:	cmp    ax,0x6d
   140017c02:	jne    0x140017c4f
   140017c04:	cmp    WORD PTR [rcx+0x4],0x70
   140017c09:	jne    0x140017c91
   140017c0f:	cmp    WORD PTR [rcx+0x6],0x6c
   140017c14:	jne    0x140017c91
   140017c16:	cmp    WORD PTR [rcx+0x8],0x65
   140017c1b:	jne    0x140017c91
   140017c1d:	cmp    WORD PTR [rcx+0xa],ax
   140017c21:	jne    0x140017c91
   140017c23:	cmp    WORD PTR [rcx+0xc],0x65
   140017c28:	jne    0x140017c91
   140017c2a:	cmp    WORD PTR [rcx+0xe],0x6e
   140017c2f:	jne    0x140017c91
   140017c31:	cmp    WORD PTR [rcx+0x10],0x74
   140017c36:	jne    0x140017c91
   140017c38:	cmp    WORD PTR [rcx+0x12],0x73
   140017c3d:	jne    0x140017c91
   140017c3f:	mov    eax,0x1d
   140017c44:	mov    ecx,0x56
   140017c49:	test   dl,dl
   140017c4b:	cmovne eax,ecx
   140017c4e:	ret    
   140017c4f:	cmp    ax,0x6e
   140017c53:	jne    0x140017c91
   140017c55:	cmp    WORD PTR [rcx+0x4],0x73
   140017c5a:	jne    0x140017c91
   140017c5c:	cmp    WORD PTR [rcx+0x6],0x74
   140017c61:	jne    0x140017c91
   140017c63:	cmp    WORD PTR [rcx+0x8],0x61
   140017c68:	jne    0x140017c91
   140017c6a:	cmp    WORD PTR [rcx+0xa],ax
   140017c6e:	jne    0x140017c91
   140017c70:	cmp    WORD PTR [rcx+0xc],0x63
   140017c75:	jne    0x140017c91
   140017c77:	cmp    WORD PTR [rcx+0xe],0x65
   140017c7c:	jne    0x140017c91
   140017c7e:	cmp    WORD PTR [rcx+0x10],0x6f
   140017c83:	jne    0x140017c91
   140017c85:	cmp    WORD PTR [rcx+0x12],0x66
   140017c8a:	mov    eax,0x20
   140017c8f:	je     0x140017c96
   140017c91:	mov    eax,0x1d
   140017c96:	repz ret 
   140017c98:	int3   
   140017c99:	int3   
   140017c9a:	int3   
   140017c9b:	int3   
   140017c9c:	int3   
   140017c9d:	int3   
   140017c9e:	int3   
   140017c9f:	int3   
   140017ca0:	add    r8d,0xfffffffe
   140017ca4:	mov    r10,rdx
   140017ca7:	cmp    r8d,0xa
   140017cab:	ja     0x140017d39
   140017cb1:	lea    rdx,[rip+0xfffffffffffe8348]        # 0x140000000
   140017cb8:	movsxd rax,r8d
   140017cbb:	mov    ecx,DWORD PTR [rdx+rax*4+0x17e34]
   140017cc2:	add    rcx,rdx
   140017cc5:	jmp    rcx
   140017cc7:	movzx  eax,WORD PTR [r10]
   140017ccb:	cmp    ax,0x61
   140017ccf:	jne    0x140017cea
   140017cd1:	cmp    WORD PTR [r10+0x2],0x73
   140017cd7:	jne    0x140017d39
   140017cd9:	mov    eax,0x1d
   140017cde:	mov    ecx,0x5d
   140017ce3:	test   r9b,r9b
   140017ce6:	cmovne eax,ecx
   140017ce9:	ret    
   140017cea:	cmp    ax,0x64
   140017cee:	jne    0x140017cfe
   140017cf0:	cmp    WORD PTR [r10+0x2],0x6f
   140017cf6:	jne    0x140017d39
   140017cf8:	mov    eax,0xe
   140017cfd:	ret    
   140017cfe:	cmp    ax,0x69
   140017d02:	jne    0x140017d21
   140017d04:	movzx  eax,WORD PTR [r10+0x2]
   140017d09:	cmp    ax,0x66
   140017d0d:	jne    0x140017d15
   140017d0f:	mov    eax,0x1e
   140017d14:	ret    
   140017d15:	cmp    ax,0x6e
   140017d19:	jne    0x140017d39
   140017d1b:	mov    eax,0x1f
   140017d20:	ret    
   140017d21:	test   r9b,r9b
   140017d24:	je     0x140017d39
   140017d26:	cmp    ax,0x6f
   140017d2a:	jne    0x140017d39
   140017d2c:	cmp    WORD PTR [r10+0x2],0x6e
   140017d32:	mov    eax,0x5e
   140017d37:	je     0x140017d3e
   140017d39:	mov    eax,0x1d
   140017d3e:	ret    
   140017d3f:	movzx  edx,r9b
   140017d43:	mov    rcx,r10
   140017d46:	jmp    0x140016ef0
   140017d4b:	movzx  edx,r9b
   140017d4f:	mov    rcx,r10
   140017d52:	jmp    0x140016fd0
   140017d57:	movzx  edx,r9b
   140017d5b:	mov    rcx,r10
   140017d5e:	jmp    0x1400171b0
   140017d63:	movzx  edx,r9b
   140017d67:	mov    rcx,r10
   140017d6a:	jmp    0x1400173d0
   140017d6f:	movzx  edx,r9b
   140017d73:	mov    rcx,r10
   140017d76:	jmp    0x140017700
   140017d7b:	movzx  edx,r9b
   140017d7f:	mov    rcx,r10
   140017d82:	jmp    0x1400178a0
   140017d87:	movzx  edx,r9b
   140017d8b:	mov    rcx,r10
   140017d8e:	jmp    0x140017af0
   140017d93:	movzx  edx,r9b
   140017d97:	mov    rcx,r10
   140017d9a:	jmp    0x140017bf0
   140017d9f:	cmp    WORD PTR [r10],0x73
   140017da4:	jne    0x140017d39
   140017da6:	cmp    WORD PTR [r10+0x2],0x79
   140017dac:	jne    0x140017d39
   140017dae:	cmp    WORD PTR [r10+0x4],0x6e
   140017db4:	jne    0x140017d39
   140017db6:	cmp    WORD PTR [r10+0x6],0x63
   140017dbc:	jne    0x140017d39
   140017dc2:	cmp    WORD PTR [r10+0x8],0x68
   140017dc8:	jne    0x140017d39
   140017dce:	cmp    WORD PTR [r10+0xa],0x72
   140017dd4:	jne    0x140017d39
   140017dda:	cmp    WORD PTR [r10+0xc],0x6f
   140017de0:	jne    0x140017d39
   140017de6:	cmp    WORD PTR [r10+0xe],0x6e
   140017dec:	jne    0x140017d39
   140017df2:	cmp    WORD PTR [r10+0x10],0x69
   140017df8:	jne    0x140017d39
   140017dfe:	cmp    WORD PTR [r10+0x12],0x7a
   140017e04:	jne    0x140017d39
   140017e0a:	cmp    WORD PTR [r10+0x14],0x65
   140017e10:	jne    0x140017d39
   140017e16:	cmp    WORD PTR [r10+0x16],0x64
   140017e1c:	jne    0x140017d39
   140017e22:	mov    eax,0x1d
   140017e27:	mov    ecx,0x56
   140017e2c:	test   r9b,r9b
   140017e2f:	cmovne eax,ecx
   140017e32:	ret    
   140017e33:	nop
   140017e34:	(bad)  
   140017e35:	jl     0x140017e38
   140017e37:	add    BYTE PTR [rdi],bh
   140017e39:	jge    0x140017e3c
   140017e3b:	add    BYTE PTR [rbx+0x7d],cl
   140017e3e:	add    DWORD PTR [rax],eax
   140017e40:	push   rdi
   140017e41:	jge    0x140017e44
   140017e43:	add    BYTE PTR [rbx+0x7d],ah
   140017e46:	add    DWORD PTR [rax],eax
   140017e48:	outs   dx,DWORD PTR ds:[rsi]
   140017e49:	jge    0x140017e4c
   140017e4b:	add    BYTE PTR [rbx+0x7d],bh
   140017e4e:	add    DWORD PTR [rax],eax
   140017e50:	xchg   DWORD PTR [rbp+0x1],edi
   140017e53:	add    BYTE PTR [rbx+0x3900017d],dl
   140017e59:	jge    0x140017e5c
   140017e5b:	add    BYTE PTR [rdi-0x72fffe83],bl
   140017e61:	ror    BYTE PTR [rbx+r9*4-0x2f],1
   140017e66:	cmp    ax,0x9
   140017e6a:	ja     0x140017e71
   140017e6c:	sub    dl,0x30
   140017e6f:	jmp    0x140017e82
   140017e71:	lea    eax,[rdx-0x61]
   140017e74:	cmp    ax,0x5
   140017e78:	ja     0x140017e7f
   140017e7a:	sub    dl,0x57
   140017e7d:	jmp    0x140017e82
   140017e7f:	sub    dl,0x37
   140017e82:	lea    eax,[r8-0x30]
   140017e86:	cmp    ax,0x9
   140017e8a:	ja     0x140017e92
   140017e8c:	sub    r8b,0x30
   140017e90:	jmp    0x140017ea6
   140017e92:	lea    eax,[r8-0x61]
   140017e96:	cmp    ax,0x5
   140017e9a:	ja     0x140017ea2
   140017e9c:	sub    r8b,0x57
   140017ea0:	jmp    0x140017ea6
   140017ea2:	sub    r8b,0x37
   140017ea6:	lea    eax,[r9-0x30]
   140017eaa:	cmp    ax,0x9
   140017eae:	ja     0x140017eb6
   140017eb0:	sub    r9b,0x30
   140017eb4:	jmp    0x140017eca
   140017eb6:	lea    eax,[r9-0x61]
   140017eba:	cmp    ax,0x5
   140017ebe:	ja     0x140017ec6
   140017ec0:	sub    r9b,0x57
   140017ec4:	jmp    0x140017eca
   140017ec6:	sub    r9b,0x37
   140017eca:	movzx  eax,WORD PTR [rsp+0x28]
   140017ecf:	lea    ecx,[rax-0x30]
   140017ed2:	cmp    cx,0x9
   140017ed6:	ja     0x140017edc
   140017ed8:	sub    al,0x30
   140017eda:	jmp    0x140017eeb
   140017edc:	lea    ecx,[rax-0x61]
   140017edf:	cmp    cx,0x5
   140017ee3:	ja     0x140017ee9
   140017ee5:	sub    al,0x57
   140017ee7:	jmp    0x140017eeb
   140017ee9:	sub    al,0x37
   140017eeb:	shl    dl,0x4
   140017eee:	shl    r9b,0x4
   140017ef2:	add    r9b,al
   140017ef5:	add    dl,r8b
   140017ef8:	movzx  eax,r9b
   140017efc:	movzx  ecx,dl
   140017eff:	shl    cx,0x8
   140017f03:	or     cx,ax
   140017f06:	mov    rax,r10
   140017f09:	mov    WORD PTR [r10],cx
   140017f0d:	ret    
   140017f0e:	int3   
   140017f0f:	int3   
   140017f10:	mov    QWORD PTR [rsp+0x8],rbx
   140017f15:	mov    QWORD PTR [rsp+0x10],rsi
   140017f1a:	push   rdi
   140017f1b:	sub    rsp,0x20
   140017f1f:	mov    rbx,rcx
   140017f22:	mov    QWORD PTR [rcx],rdx
   140017f25:	add    rcx,0x8
   140017f29:	mov    rdi,rdx
   140017f2c:	call   QWORD PTR [rip+0x8666]        # 0x140020598
   140017f32:	lea    rcx,[rbx+0x10]
   140017f36:	call   QWORD PTR [rip+0x865c]        # 0x140020598
   140017f3c:	lea    rcx,[rbx+0x18]
   140017f40:	call   QWORD PTR [rip+0x8652]        # 0x140020598
   140017f46:	xor    esi,esi
   140017f48:	lea    rcx,[rbx+0x58]
   140017f4c:	mov    QWORD PTR [rbx+0x20],rsi
   140017f50:	mov    DWORD PTR [rbx+0x28],esi
   140017f53:	mov    DWORD PTR [rbx+0x2c],esi
   140017f56:	mov    dl,0xa
   140017f58:	mov    QWORD PTR [rbx+0x30],rsi
   140017f5c:	mov    QWORD PTR [rbx+0x40],rsi
   140017f60:	mov    QWORD PTR [rbx+0x48],rsi
   140017f64:	mov    QWORD PTR [rbx+0x50],rsi
   140017f68:	call   QWORD PTR [rip+0x8822]        # 0x140020790
   140017f6e:	mov    DWORD PTR [rbx+0x5c],esi
   140017f71:	mov    DWORD PTR [rbx+0x60],esi
   140017f74:	mov    QWORD PTR [rbx+0x68],rsi
   140017f78:	mov    DWORD PTR [rbx+0x70],esi
   140017f7b:	mov    DWORD PTR [rbx+0x74],esi
   140017f7e:	mov    DWORD PTR [rbx+0x78],0xffffffff
   140017f85:	mov    DWORD PTR [rbx+0x7c],esi
   140017f88:	mov    DWORD PTR [rbx+0x80],esi
   140017f8e:	mov    DWORD PTR [rbx+0x84],esi
   140017f94:	mov    DWORD PTR [rbx+0x88],esi
   140017f9a:	mov    BYTE PTR [rbx+0x8c],sil
   140017fa1:	mov    BYTE PTR [rbx+0x8d],sil
   140017fa8:	mov    BYTE PTR [rbx+0x8e],sil
   140017faf:	mov    BYTE PTR [rbx+0x8f],sil
   140017fb6:	mov    BYTE PTR [rbx+0x90],sil
   140017fbd:	mov    BYTE PTR [rbx+0x91],0x1
   140017fc4:	mov    BYTE PTR [rbx+0x92],0x1
   140017fcb:	test   rdi,rdi
   140017fce:	je     0x140017fdb
   140017fd0:	mov    rdx,rbx
   140017fd3:	mov    rcx,rdi
   140017fd6:	call   0x140016b00
   140017fdb:	mov    rsi,QWORD PTR [rsp+0x38]
   140017fe0:	mov    rax,rbx
   140017fe3:	mov    rbx,QWORD PTR [rsp+0x30]
   140017fe8:	add    rsp,0x20
   140017fec:	pop    rdi
   140017fed:	ret    
   140017fee:	int3   
   140017fef:	int3   
   140017ff0:	mov    al,BYTE PTR [rcx+0x92]
   140017ff6:	ret    
   140017ff7:	int3   
   140017ff8:	int3   
   140017ff9:	int3   
   140017ffa:	int3   
   140017ffb:	int3   
   140017ffc:	int3   
   140017ffd:	int3   
   140017ffe:	int3   
   140017fff:	int3   
   140018000:	mov    QWORD PTR [rsp+0x8],rbx
   140018005:	mov    QWORD PTR [rsp+0x10],rbp
   14001800a:	mov    QWORD PTR [rsp+0x18],rsi
   14001800f:	push   rdi
   140018010:	sub    rsp,0x20
   140018014:	mov    rdi,rcx
   140018017:	mov    rcx,QWORD PTR [rcx]
   14001801a:	movzx  ebx,r9b
   14001801e:	mov    ebp,r8d
   140018021:	mov    rsi,rdx
   140018024:	test   rcx,rcx
   140018027:	je     0x14001802e
   140018029:	call   0x140016ae0
   14001802e:	lea    rcx,[rdi+0x8]
   140018032:	mov    rdx,rsi
   140018035:	mov    BYTE PTR [rdi+0x92],bl
   14001803b:	call   QWORD PTR [rip+0x8527]        # 0x140020568
   140018041:	lea    rcx,[rdi+0x10]
   140018045:	call   QWORD PTR [rip+0x8455]        # 0x1400204a0
   14001804b:	lea    rcx,[rdi+0x10]
   14001804f:	mov    edx,0x400
   140018054:	call   QWORD PTR [rip+0x843e]        # 0x140020498
   14001805a:	lea    rcx,[rdi+0x18]
   14001805e:	call   QWORD PTR [rip+0x843c]        # 0x1400204a0
   140018064:	xor    ebx,ebx
   140018066:	mov    rcx,rsi
   140018069:	mov    QWORD PTR [rdi+0x20],rbx
   14001806d:	mov    DWORD PTR [rdi+0x28],ebx
   140018070:	mov    DWORD PTR [rdi+0x2c],ebx
   140018073:	call   QWORD PTR [rip+0x83a7]        # 0x140020420
   140018079:	mov    QWORD PTR [rdi+0x30],rax
   14001807d:	mov    rcx,QWORD PTR [rsi]
   140018080:	movsxd rdx,DWORD PTR [rcx+0x4]
   140018084:	mov    QWORD PTR [rdi+0x40],rax
   140018088:	mov    QWORD PTR [rdi+0x48],rax
   14001808c:	lea    rcx,[rax+rdx*2]
   140018090:	mov    dl,0xa
   140018092:	mov    QWORD PTR [rdi+0x50],rax
   140018096:	mov    QWORD PTR [rdi+0x38],rcx
   14001809a:	lea    rcx,[rsp+0x48]
   14001809f:	call   QWORD PTR [rip+0x86eb]        # 0x140020790
   1400180a5:	movzx  r11d,WORD PTR [rsp+0x48]
   1400180ab:	mov    rsi,QWORD PTR [rsp+0x40]
   1400180b0:	mov    DWORD PTR [rdi+0x5c],ebx
   1400180b3:	mov    DWORD PTR [rdi+0x60],ebp
   1400180b6:	mov    QWORD PTR [rdi+0x68],rbx
   1400180ba:	mov    DWORD PTR [rdi+0x70],ebx
   1400180bd:	mov    DWORD PTR [rdi+0x74],ebx
   1400180c0:	mov    DWORD PTR [rdi+0x7c],ebx
   1400180c3:	mov    DWORD PTR [rdi+0x84],ebx
   1400180c9:	mov    DWORD PTR [rdi+0x88],ebp
   1400180cf:	mov    rbp,QWORD PTR [rsp+0x38]
   1400180d4:	mov    BYTE PTR [rdi+0x8c],bl
   1400180da:	mov    BYTE PTR [rdi+0x8d],bl
   1400180e0:	mov    BYTE PTR [rdi+0x8e],bl
   1400180e6:	mov    BYTE PTR [rdi+0x8f],bl
   1400180ec:	mov    BYTE PTR [rdi+0x90],bl
   1400180f2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400180f7:	mov    WORD PTR [rdi+0x58],r11w
   1400180fc:	mov    DWORD PTR [rdi+0x78],0xffffffff
   140018103:	mov    BYTE PTR [rdi+0x91],0x1
   14001810a:	add    rsp,0x20
   14001810e:	pop    rdi
   14001810f:	ret    
   140018110:	dec    ecx
   140018112:	cmp    ecx,0x4f
   140018115:	ja     0x140018138
   140018117:	lea    rdx,[rip+0xfffffffffffe7ee2]        # 0x140000000
   14001811e:	movsxd rax,ecx
   140018121:	movzx  eax,BYTE PTR [rdx+rax*1+0x18144]
   140018129:	mov    ecx,DWORD PTR [rdx+rax*4+0x1813c]
   140018130:	add    rcx,rdx
   140018133:	jmp    rcx
   140018135:	mov    al,0x1
   140018137:	ret    
   140018138:	xor    al,al
   14001813a:	ret    
   14001813b:	nop
   14001813c:	xor    eax,0x38000181
   140018141:	add    DWORD PTR [rcx],0x0
   140018147:	add    DWORD PTR [rcx],eax
   140018149:	add    DWORD PTR [rcx],eax
   14001814b:	add    DWORD PTR [rcx],eax
   14001814d:	add    DWORD PTR [rcx],eax
   14001814f:	add    BYTE PTR [rax],al
   140018151:	add    DWORD PTR [rcx],eax
   140018153:	add    DWORD PTR [rax],eax
   140018155:	add    BYTE PTR [rax],al
   140018157:	add    DWORD PTR [rcx],eax
   140018159:	add    DWORD PTR [rax],eax
   14001815b:	add    BYTE PTR [rax],al
   14001815d:	add    BYTE PTR [rax],al
   14001815f:	add    BYTE PTR [rcx],al
   140018161:	add    DWORD PTR [rcx],eax
   140018163:	add    DWORD PTR [rcx],eax
   140018165:	add    DWORD PTR [rax],eax
   140018167:	add    DWORD PTR [rax],eax
   140018169:	add    BYTE PTR [rax],al
   14001816b:	add    BYTE PTR [rax],al
   14001816d:	add    DWORD PTR [rcx],eax
   14001816f:	add    DWORD PTR [rax],eax
   140018171:	add    BYTE PTR [rcx],al
   140018173:	add    BYTE PTR [rax],al
   140018175:	add    BYTE PTR [rax],al
   140018177:	add    BYTE PTR [rcx],al
   140018179:	add    DWORD PTR [rcx],eax
   14001817b:	add    DWORD PTR [rax],eax
   14001817d:	add    BYTE PTR [rax],al
   14001817f:	add    DWORD PTR [rcx],eax
   140018181:	add    DWORD PTR [rax],eax
   140018183:	add    BYTE PTR [rcx],al
   140018185:	add    DWORD PTR [rcx],eax
   140018187:	add    DWORD PTR [rcx],eax
   140018189:	add    DWORD PTR [rcx],eax
   14001818b:	add    DWORD PTR [rcx],eax
   14001818d:	add    DWORD PTR [rcx],eax
   14001818f:	add    DWORD PTR [rcx],eax
   140018191:	add    DWORD PTR [rax],eax
   140018193:	add    ah,cl
   140018195:	int3   
   140018196:	int3   
   140018197:	int3   
   140018198:	int3   
   140018199:	int3   
   14001819a:	int3   
   14001819b:	int3   
   14001819c:	int3   
   14001819d:	int3   
   14001819e:	int3   
   14001819f:	int3   
   1400181a0:	sub    rsp,0x28
   1400181a4:	cmp    cx,0x61
   1400181a8:	jb     0x1400181b0
   1400181aa:	cmp    cx,0x7a
   1400181ae:	jbe    0x14001821a
   1400181b0:	cmp    cx,0x41
   1400181b4:	jb     0x1400181bc
   1400181b6:	cmp    cx,0x5a
   1400181ba:	jbe    0x14001821a
   1400181bc:	cmp    cx,0x30
   1400181c0:	jb     0x1400181c8
   1400181c2:	cmp    cx,0x39
   1400181c6:	jbe    0x14001821a
   1400181c8:	cmp    cx,0x24
   1400181cc:	je     0x14001821a
   1400181ce:	cmp    cx,0x5f
   1400181d2:	je     0x14001821a
   1400181d4:	mov    eax,0x200c
   1400181d9:	cmp    cx,ax
   1400181dc:	je     0x14001821a
   1400181de:	mov    eax,0x200d
   1400181e3:	cmp    cx,ax
   1400181e6:	je     0x14001821a
   1400181e8:	movzx  ecx,cx
   1400181eb:	call   QWORD PTR [rip+0x82b7]        # 0x1400204a8
   1400181f1:	cmp    eax,0x13
   1400181f4:	ja     0x140018213
   1400181f6:	lea    rdx,[rip+0xfffffffffffe7e03]        # 0x140000000
   1400181fd:	cdqe   
   1400181ff:	movzx  eax,BYTE PTR [rdx+rax*1+0x1822c]
   140018207:	mov    ecx,DWORD PTR [rdx+rax*4+0x18224]
   14001820e:	add    rcx,rdx
   140018211:	jmp    rcx
   140018213:	xor    al,al
   140018215:	add    rsp,0x28
   140018219:	ret    
   14001821a:	mov    al,0x1
   14001821c:	add    rsp,0x28
   140018220:	ret    
   140018221:	nop    DWORD PTR [rax]
   140018224:	sbb    al,BYTE PTR [rdx-0x7decffff]
   14001822a:	add    DWORD PTR [rax],eax
   14001822c:	add    BYTE PTR [rax],al
   14001822e:	add    DWORD PTR [rax],eax
   140018230:	add    BYTE PTR [rcx],al
   140018232:	add    DWORD PTR [rcx],eax
   140018234:	add    DWORD PTR [rcx],eax
   140018236:	add    DWORD PTR [rcx],eax
   140018238:	add    DWORD PTR [rcx],eax
   14001823a:	add    BYTE PTR [rax],al
   14001823c:	add    BYTE PTR [rax],al
   14001823e:	add    BYTE PTR [rax],al
   140018240:	movzx  eax,WORD PTR [rcx+0x58]
   140018244:	cmp    ax,0xa
   140018248:	je     0x140018267
   14001824a:	cmp    ax,0xd
   14001824e:	je     0x140018267
   140018250:	mov    ecx,0x2028
   140018255:	cmp    ax,cx
   140018258:	je     0x140018267
   14001825a:	mov    ecx,0x2029
   14001825f:	cmp    ax,cx
   140018262:	je     0x140018267
   140018264:	xor    al,al
   140018266:	ret    
   140018267:	mov    al,0x1
   140018269:	ret    
   14001826a:	int3   
   14001826b:	int3   
   14001826c:	int3   
   14001826d:	int3   
   14001826e:	int3   
   14001826f:	int3   
   140018270:	movzx  eax,WORD PTR [rcx+0x58]
   140018274:	cmp    eax,0xa
   140018277:	je     0x14001829f
   140018279:	cmp    eax,0xd
   14001827c:	je     0x14001828f
   14001827e:	cmp    eax,0x2027
   140018283:	jle    0x14001828c
   140018285:	cmp    eax,0x2029
   14001828a:	jle    0x14001829f
   14001828c:	xor    eax,eax
   14001828e:	ret    
   14001828f:	mov    rcx,QWORD PTR [rcx+0x30]
   140018293:	xor    eax,eax
   140018295:	cmp    WORD PTR [rcx],0xa
   140018299:	sete   al
   14001829c:	inc    eax
   14001829e:	ret    
   14001829f:	mov    eax,0x1
   1400182a4:	ret    
   1400182a5:	int3   
   1400182a6:	int3   
   1400182a7:	int3   
   1400182a8:	int3   
   1400182a9:	int3   
   1400182aa:	int3   
   1400182ab:	int3   
   1400182ac:	int3   
   1400182ad:	int3   
   1400182ae:	int3   
   1400182af:	int3   
   1400182b0:	mov    WORD PTR [rsp+0x8],cx
   1400182b5:	sub    rsp,0x28
   1400182b9:	lea    rcx,[rsp+0x38]
   1400182be:	mov    dl,0x61
   1400182c0:	call   QWORD PTR [rip+0x84ca]        # 0x140020790
   1400182c6:	movzx  eax,WORD PTR [rax]
   1400182c9:	cmp    WORD PTR [rsp+0x30],ax
   1400182ce:	jb     0x1400182e7
   1400182d0:	lea    rcx,[rsp+0x38]
   1400182d5:	mov    dl,0x7a
   1400182d7:	call   QWORD PTR [rip+0x84b3]        # 0x140020790
   1400182dd:	movzx  eax,WORD PTR [rax]
   1400182e0:	cmp    ax,WORD PTR [rsp+0x30]
   1400182e5:	jae    0x140018366
   1400182e7:	lea    rcx,[rsp+0x38]
   1400182ec:	mov    dl,0x41
   1400182ee:	call   QWORD PTR [rip+0x849c]        # 0x140020790
   1400182f4:	movzx  eax,WORD PTR [rax]
   1400182f7:	cmp    WORD PTR [rsp+0x30],ax
   1400182fc:	jb     0x140018315
   1400182fe:	lea    rcx,[rsp+0x38]
   140018303:	mov    dl,0x5a
   140018305:	call   QWORD PTR [rip+0x8485]        # 0x140020790
   14001830b:	movzx  eax,WORD PTR [rax]
   14001830e:	cmp    ax,WORD PTR [rsp+0x30]
   140018313:	jae    0x140018366
   140018315:	lea    rcx,[rsp+0x38]
   14001831a:	mov    dl,0x24
   14001831c:	call   QWORD PTR [rip+0x846e]        # 0x140020790
   140018322:	movzx  eax,WORD PTR [rax]
   140018325:	cmp    WORD PTR [rsp+0x30],ax
   14001832a:	je     0x140018366
   14001832c:	lea    rcx,[rsp+0x38]
   140018331:	mov    dl,0x5f
   140018333:	call   QWORD PTR [rip+0x8457]        # 0x140020790
   140018339:	mov    r11,rax
   14001833c:	movzx  eax,WORD PTR [rsp+0x30]
   140018341:	cmp    ax,WORD PTR [r11]
   140018345:	je     0x140018366
   140018347:	mov    ecx,0x80
   14001834c:	cmp    ax,cx
   14001834f:	jae    0x140018358
   140018351:	xor    al,al
   140018353:	add    rsp,0x28
   140018357:	ret    
   140018358:	movzx  ecx,ax
   14001835b:	call   QWORD PTR [rip+0x814f]        # 0x1400204b0
   140018361:	add    rsp,0x28
   140018365:	ret    
   140018366:	mov    al,0x1
   140018368:	add    rsp,0x28
   14001836c:	ret    
   14001836d:	int3   
   14001836e:	int3   
   14001836f:	int3   
   140018370:	mov    WORD PTR [rsp+0x8],cx
   140018375:	sub    rsp,0x38
   140018379:	lea    rcx,[rsp+0x48]
   14001837e:	mov    dl,0x30
   140018380:	call   QWORD PTR [rip+0x840a]        # 0x140020790
   140018386:	movzx  eax,WORD PTR [rax]
   140018389:	cmp    WORD PTR [rsp+0x40],ax
   14001838e:	jb     0x1400183a7
   140018390:	lea    rcx,[rsp+0x50]
   140018395:	mov    dl,0x39
   140018397:	call   QWORD PTR [rip+0x83f3]        # 0x140020790
   14001839d:	movzx  eax,WORD PTR [rax]
   1400183a0:	cmp    ax,WORD PTR [rsp+0x40]
   1400183a5:	jae    0x140018403
   1400183a7:	lea    rcx,[rsp+0x58]
   1400183ac:	mov    dl,0x61
   1400183ae:	call   QWORD PTR [rip+0x83dc]        # 0x140020790
   1400183b4:	movzx  eax,WORD PTR [rax]
   1400183b7:	cmp    WORD PTR [rsp+0x40],ax
   1400183bc:	jb     0x1400183d5
   1400183be:	lea    rcx,[rsp+0x20]
   1400183c3:	mov    dl,0x66
   1400183c5:	call   QWORD PTR [rip+0x83c5]        # 0x140020790
   1400183cb:	movzx  eax,WORD PTR [rax]
   1400183ce:	cmp    ax,WORD PTR [rsp+0x40]
   1400183d3:	jae    0x140018403
   1400183d5:	lea    rcx,[rsp+0x22]
   1400183da:	mov    dl,0x41
   1400183dc:	call   QWORD PTR [rip+0x83ae]        # 0x140020790
   1400183e2:	movzx  eax,WORD PTR [rax]
   1400183e5:	cmp    WORD PTR [rsp+0x40],ax
   1400183ea:	jb     0x14001840a
   1400183ec:	lea    rcx,[rsp+0x24]
   1400183f1:	mov    dl,0x46
   1400183f3:	call   QWORD PTR [rip+0x8397]        # 0x140020790
   1400183f9:	movzx  eax,WORD PTR [rax]
   1400183fc:	cmp    ax,WORD PTR [rsp+0x40]
   140018401:	jb     0x14001840a
   140018403:	mov    al,0x1
   140018405:	add    rsp,0x38
   140018409:	ret    
   14001840a:	xor    al,al
   14001840c:	add    rsp,0x38
   140018410:	ret    
   140018411:	int3   
   140018412:	int3   
   140018413:	int3   
   140018414:	int3   
   140018415:	int3   
   140018416:	int3   
   140018417:	int3   
   140018418:	int3   
   140018419:	int3   
   14001841a:	int3   
   14001841b:	int3   
   14001841c:	int3   
   14001841d:	int3   
   14001841e:	int3   
   14001841f:	int3   
   140018420:	rex push rbx
   140018422:	sub    rsp,0x20
   140018426:	mov    rbx,rdx
   140018429:	lea    rdx,[rcx+0x18]
   14001842d:	mov    rcx,rbx
   140018430:	call   QWORD PTR [rip+0x8362]        # 0x140020798
   140018436:	mov    rax,rbx
   140018439:	add    rsp,0x20
   14001843d:	pop    rbx
   14001843e:	ret    
   14001843f:	int3   
   140018440:	cmp    edx,0x37
   140018443:	je     0x14001845e
   140018445:	test   edx,edx
   140018447:	je     0x14001845e
   140018449:	cmp    BYTE PTR [rcx+0x8f],0x0
   140018450:	jne    0x14001845e
   140018452:	cmp    BYTE PTR [rcx+0x90],0x0
   140018459:	jne    0x14001845e
   14001845b:	xor    al,al
   14001845d:	ret    
   14001845e:	mov    al,0x1
   140018460:	ret    
   140018461:	int3   
   140018462:	int3   
   140018463:	int3   
   140018464:	int3   
   140018465:	int3   
   140018466:	int3   
   140018467:	int3   
   140018468:	int3   
   140018469:	int3   
   14001846a:	int3   
   14001846b:	int3   
   14001846c:	int3   
   14001846d:	int3   
   14001846e:	int3   
   14001846f:	int3   
   140018470:	mov    QWORD PTR [rsp+0x8],rbx
   140018475:	mov    QWORD PTR [rsp+0x20],rbp
   14001847a:	mov    DWORD PTR [rsp+0x10],edx
   14001847e:	push   rsi
   14001847f:	push   rdi
   140018480:	push   r12
   140018482:	sub    rsp,0x20
   140018486:	mov    eax,DWORD PTR [rcx+0x4]
   140018489:	mov    rsi,QWORD PTR [rcx+0x8]
   14001848d:	mov    rbx,rcx
   140018490:	cmp    edx,eax
   140018492:	lea    r9,[rsp+0x48]
   140018497:	lea    rcx,[rsp+0x50]
   14001849c:	cmovge r9,rcx
   1400184a0:	movsxd rbp,r8d
   1400184a3:	mov    DWORD PTR [rsp+0x50],eax
   1400184a7:	movsxd r12,DWORD PTR [r9]
   1400184aa:	mov    edi,edx
   1400184ac:	cmp    ebp,DWORD PTR [rbx]
   1400184ae:	je     0x1400184e5
   1400184b0:	cmp    ebp,0x20
   1400184b3:	jle    0x1400184c2
   1400184b5:	mov    rcx,rbp
   1400184b8:	call   QWORD PTR [rip+0x7d12]        # 0x1400201d0
   1400184be:	mov    DWORD PTR [rbx],ebp
   1400184c0:	jmp    0x1400184cc
   1400184c2:	lea    rax,[rbx+0x10]
   1400184c6:	mov    DWORD PTR [rbx],0x20
   1400184cc:	mov    r8,r12
   1400184cf:	mov    rdx,rsi
   1400184d2:	mov    rcx,rax
   1400184d5:	mov    QWORD PTR [rbx+0x8],rax
   1400184d9:	mov    DWORD PTR [rbx+0x4],0x0
   1400184e0:	call   0x14001edd4
   1400184e5:	lea    rax,[rbx+0x10]
   1400184e9:	mov    DWORD PTR [rbx+0x4],r12d
   1400184ed:	cmp    rsi,rax
   1400184f0:	je     0x140018501
   1400184f2:	cmp    rsi,QWORD PTR [rbx+0x8]
   1400184f6:	je     0x140018501
   1400184f8:	mov    rcx,rsi
   1400184fb:	call   QWORD PTR [rip+0x7ce7]        # 0x1400201e8
   140018501:	mov    rbp,QWORD PTR [rsp+0x58]
   140018506:	mov    DWORD PTR [rbx+0x4],edi
   140018509:	mov    rbx,QWORD PTR [rsp+0x40]
   14001850e:	add    rsp,0x20
   140018512:	pop    r12
   140018514:	pop    rdi
   140018515:	pop    rsi
   140018516:	ret    
   140018517:	int3   
   140018518:	int3   
   140018519:	int3   
   14001851a:	int3   
   14001851b:	int3   
   14001851c:	int3   
   14001851d:	int3   
   14001851e:	int3   
   14001851f:	int3   
   140018520:	mov    QWORD PTR [rsp+0x8],rbx
   140018525:	mov    QWORD PTR [rsp+0x20],rbp
   14001852a:	mov    DWORD PTR [rsp+0x10],edx
   14001852e:	push   rsi
   14001852f:	push   rdi
   140018530:	push   r12
   140018532:	sub    rsp,0x20
   140018536:	mov    eax,DWORD PTR [rcx+0x4]
   140018539:	mov    rsi,QWORD PTR [rcx+0x8]
   14001853d:	mov    rbx,rcx
   140018540:	cmp    edx,eax
   140018542:	lea    r9,[rsp+0x48]
   140018547:	lea    rcx,[rsp+0x50]
   14001854c:	cmovge r9,rcx
   140018550:	movsxd rbp,r8d
   140018553:	mov    DWORD PTR [rsp+0x50],eax
   140018557:	movsxd r12,DWORD PTR [r9]
   14001855a:	mov    edi,edx
   14001855c:	cmp    ebp,DWORD PTR [rbx]
   14001855e:	je     0x140018595
   140018560:	cmp    ebp,0x40
   140018563:	jle    0x140018572
   140018565:	mov    rcx,rbp
   140018568:	call   QWORD PTR [rip+0x7c62]        # 0x1400201d0
   14001856e:	mov    DWORD PTR [rbx],ebp
   140018570:	jmp    0x14001857c
   140018572:	lea    rax,[rbx+0x10]
   140018576:	mov    DWORD PTR [rbx],0x40
   14001857c:	mov    r8,r12
   14001857f:	mov    rdx,rsi
   140018582:	mov    rcx,rax
   140018585:	mov    QWORD PTR [rbx+0x8],rax
   140018589:	mov    DWORD PTR [rbx+0x4],0x0
   140018590:	call   0x14001edd4
   140018595:	lea    rax,[rbx+0x10]
   140018599:	mov    DWORD PTR [rbx+0x4],r12d
   14001859d:	cmp    rsi,rax
   1400185a0:	je     0x1400185b1
   1400185a2:	cmp    rsi,QWORD PTR [rbx+0x8]
   1400185a6:	je     0x1400185b1
   1400185a8:	mov    rcx,rsi
   1400185ab:	call   QWORD PTR [rip+0x7c37]        # 0x1400201e8
   1400185b1:	mov    rbp,QWORD PTR [rsp+0x58]
   1400185b6:	mov    DWORD PTR [rbx+0x4],edi
   1400185b9:	mov    rbx,QWORD PTR [rsp+0x40]
   1400185be:	add    rsp,0x20
   1400185c2:	pop    r12
   1400185c4:	pop    rdi
   1400185c5:	pop    rsi
   1400185c6:	ret    
   1400185c7:	int3   
   1400185c8:	int3   
   1400185c9:	int3   
   1400185ca:	int3   
   1400185cb:	int3   
   1400185cc:	int3   
   1400185cd:	int3   
   1400185ce:	int3   
   1400185cf:	int3   
   1400185d0:	movzx  eax,WORD PTR [rcx+0x58]
   1400185d4:	xor    r8d,r8d
   1400185d7:	mov    rdx,rcx
   1400185da:	cmp    eax,0xa
   1400185dd:	je     0x14001860b
   1400185df:	cmp    eax,0xd
   1400185e2:	je     0x1400185f7
   1400185e4:	cmp    eax,0x2027
   1400185e9:	jle    0x1400185f2
   1400185eb:	cmp    eax,0x2029
   1400185f0:	jle    0x14001860b
   1400185f2:	mov    r9d,r8d
   1400185f5:	jmp    0x140018611
   1400185f7:	mov    rax,QWORD PTR [rcx+0x30]
   1400185fb:	mov    r9d,r8d
   1400185fe:	cmp    WORD PTR [rax],0xa
   140018602:	sete   r9b
   140018606:	inc    r9d
   140018609:	jmp    0x140018611
   14001860b:	mov    r9d,0x1
   140018611:	mov    rcx,QWORD PTR [rcx+0x30]
   140018615:	add    rcx,0x2
   140018619:	movzx  eax,WORD PTR [rcx-0x2]
   14001861d:	mov    QWORD PTR [rdx+0x30],rcx
   140018621:	mov    WORD PTR [rdx+0x58],ax
   140018625:	cmp    r9d,0x2
   140018629:	jne    0x14001863a
   14001862b:	movzx  eax,WORD PTR [rcx]
   14001862e:	mov    WORD PTR [rdx+0x58],ax
   140018632:	lea    rax,[rcx+0x2]
   140018636:	mov    QWORD PTR [rdx+0x30],rax
   14001863a:	movzx  eax,WORD PTR [rdx+0x58]
   14001863e:	cmp    eax,0xa
   140018641:	je     0x140018656
   140018643:	cmp    eax,0xd
   140018646:	je     0x140018671
   140018648:	cmp    eax,0x2027
   14001864d:	jle    0x14001866f
   14001864f:	cmp    eax,0x2029
   140018654:	jg     0x14001866f
   140018656:	mov    rax,QWORD PTR [rdx+0x30]
   14001865a:	inc    DWORD PTR [rdx+0x60]
   14001865d:	mov    r8d,0x1
   140018663:	mov    ecx,r8d
   140018666:	lea    rcx,[rax+rcx*2-0x2]
   14001866b:	mov    QWORD PTR [rdx+0x40],rcx
   14001866f:	repz ret 
   140018671:	mov    rax,QWORD PTR [rdx+0x30]
   140018675:	cmp    WORD PTR [rax],0xa
   140018679:	sete   r8b
   14001867d:	inc    DWORD PTR [rdx+0x60]
   140018680:	inc    r8d
   140018683:	mov    ecx,r8d
   140018686:	lea    rcx,[rax+rcx*2-0x2]
   14001868b:	mov    QWORD PTR [rdx+0x40],rcx
   14001868f:	ret    
   140018690:	rex push rbx
   140018692:	push   r12
   140018694:	push   r13
   140018696:	push   r14
   140018698:	sub    rsp,0x38
   14001869c:	mov    r14,rcx
   14001869f:	mov    r12,rdx
   1400186a2:	lea    rcx,[rsp+0x60]
   1400186a7:	mov    dl,0x75
   1400186a9:	mov    r13,r8
   1400186ac:	call   QWORD PTR [rip+0x80de]        # 0x140020790
   1400186b2:	movzx  eax,WORD PTR [rax]
   1400186b5:	cmp    WORD PTR [r14+0x58],ax
   1400186ba:	jne    0x140018792
   1400186c0:	mov    rbx,QWORD PTR [r14+0x30]
   1400186c4:	movzx  ecx,WORD PTR [rbx]
   1400186c7:	call   0x140018370
   1400186cc:	test   al,al
   1400186ce:	je     0x140018792
   1400186d4:	movzx  ecx,WORD PTR [rbx+0x2]
   1400186d8:	call   0x140018370
   1400186dd:	test   al,al
   1400186df:	je     0x140018792
   1400186e5:	movzx  ecx,WORD PTR [rbx+0x4]
   1400186e9:	call   0x140018370
   1400186ee:	test   al,al
   1400186f0:	je     0x140018792
   1400186f6:	movzx  ecx,WORD PTR [rbx+0x6]
   1400186fa:	call   0x140018370
   1400186ff:	test   al,al
   140018701:	je     0x140018792
   140018707:	mov    QWORD PTR [rsp+0x68],rbp
   14001870c:	mov    rcx,r14
   14001870f:	mov    QWORD PTR [rsp+0x70],rsi
   140018714:	mov    QWORD PTR [rsp+0x30],rdi
   140018719:	call   0x1400185d0
   14001871e:	movzx  ebx,WORD PTR [r14+0x58]
   140018723:	mov    rcx,r14
   140018726:	call   0x1400185d0
   14001872b:	movzx  edi,WORD PTR [r14+0x58]
   140018730:	mov    rcx,r14
   140018733:	call   0x1400185d0
   140018738:	movzx  esi,WORD PTR [r14+0x58]
   14001873d:	mov    rcx,r14
   140018740:	call   0x1400185d0
   140018745:	movzx  ebp,WORD PTR [r14+0x58]
   14001874a:	mov    rcx,r14
   14001874d:	call   0x1400185d0
   140018752:	test   r13,r13
   140018755:	je     0x14001875c
   140018757:	mov    BYTE PTR [r13+0x0],0x1
   14001875c:	movzx  r9d,si
   140018760:	movzx  r8d,di
   140018764:	movzx  edx,bx
   140018767:	mov    rcx,r12
   14001876a:	mov    WORD PTR [rsp+0x20],bp
   14001876f:	call   0x140017e60
   140018774:	mov    rdi,QWORD PTR [rsp+0x30]
   140018779:	mov    rsi,QWORD PTR [rsp+0x70]
   14001877e:	mov    rbp,QWORD PTR [rsp+0x68]
   140018783:	mov    rax,r12
   140018786:	add    rsp,0x38
   14001878a:	pop    r14
   14001878c:	pop    r13
   14001878e:	pop    r12
   140018790:	pop    rbx
   140018791:	ret    
   140018792:	xor    eax,eax
   140018794:	mov    BYTE PTR [r13+0x0],0x0
   140018799:	mov    WORD PTR [r12],ax
   14001879e:	mov    rax,r12
   1400187a1:	add    rsp,0x38
   1400187a5:	pop    r14
   1400187a7:	pop    r13
   1400187a9:	pop    r12
   1400187ab:	pop    rbx
   1400187ac:	ret    
   1400187ad:	int3   
   1400187ae:	int3   
   1400187af:	int3   
   1400187b0:	mov    QWORD PTR [rsp+0x18],rbp
   1400187b5:	mov    QWORD PTR [rsp+0x20],rsi
   1400187ba:	push   r12
   1400187bc:	sub    rsp,0x20
   1400187c0:	mov    rax,QWORD PTR [rcx+0x30]
   1400187c4:	mov    rbp,rcx
   1400187c7:	mov    r12,r8
   1400187ca:	movzx  ecx,WORD PTR [rax]
   1400187cd:	mov    rsi,rdx
   1400187d0:	call   0x140018370
   1400187d5:	test   al,al
   1400187d7:	je     0x1400188a2
   1400187dd:	mov    rax,QWORD PTR [rbp+0x30]
   1400187e1:	movzx  ecx,WORD PTR [rax+0x2]
   1400187e5:	call   0x140018370
   1400187ea:	test   al,al
   1400187ec:	je     0x1400188a2
   1400187f2:	mov    rcx,rbp
   1400187f5:	mov    QWORD PTR [rsp+0x30],rbx
   1400187fa:	mov    QWORD PTR [rsp+0x38],rdi
   1400187ff:	call   0x1400185d0
   140018804:	movzx  ebx,WORD PTR [rbp+0x58]
   140018808:	mov    rcx,rbp
   14001880b:	call   0x1400185d0
   140018810:	movzx  edi,WORD PTR [rbp+0x58]
   140018814:	mov    rcx,rbp
   140018817:	call   0x1400185d0
   14001881c:	test   r12,r12
   14001881f:	je     0x140018826
   140018821:	mov    BYTE PTR [r12],0x1
   140018826:	cmp    bx,0x30
   14001882a:	jb     0x140018837
   14001882c:	cmp    bx,0x39
   140018830:	ja     0x140018837
   140018832:	sub    bl,0x30
   140018835:	jmp    0x14001884b
   140018837:	cmp    bx,0x61
   14001883b:	jb     0x140018848
   14001883d:	cmp    bx,0x66
   140018841:	ja     0x140018848
   140018843:	sub    bl,0x57
   140018846:	jmp    0x14001884b
   140018848:	sub    bl,0x37
   14001884b:	cmp    di,0x30
   14001884f:	jb     0x14001885d
   140018851:	cmp    di,0x39
   140018855:	ja     0x14001885d
   140018857:	sub    dil,0x30
   14001885b:	jmp    0x140018873
   14001885d:	cmp    di,0x61
   140018861:	jb     0x14001886f
   140018863:	cmp    di,0x66
   140018867:	ja     0x14001886f
   140018869:	sub    dil,0x57
   14001886d:	jmp    0x140018873
   14001886f:	sub    dil,0x37
   140018873:	movzx  eax,dil
   140018877:	mov    rdi,QWORD PTR [rsp+0x38]
   14001887c:	movzx  ecx,bl
   14001887f:	mov    rbx,QWORD PTR [rsp+0x30]
   140018884:	shl    cx,0x4
   140018888:	add    cx,ax
   14001888b:	mov    rax,rsi
   14001888e:	mov    WORD PTR [rsi],cx
   140018891:	mov    rbp,QWORD PTR [rsp+0x40]
   140018896:	mov    rsi,QWORD PTR [rsp+0x48]
   14001889b:	add    rsp,0x20
   14001889f:	pop    r12
   1400188a1:	ret    
   1400188a2:	mov    rbp,QWORD PTR [rsp+0x40]
   1400188a7:	xor    eax,eax
   1400188a9:	mov    BYTE PTR [r12],0x0
   1400188ae:	mov    WORD PTR [rsi],ax
   1400188b1:	mov    rax,rsi
   1400188b4:	mov    rsi,QWORD PTR [rsp+0x48]
   1400188b9:	add    rsp,0x20
   1400188bd:	pop    r12
   1400188bf:	ret    
   1400188c0:	rex push rbx
   1400188c2:	push   rsi
   1400188c3:	push   rdi
   1400188c4:	sub    rsp,0x60
   1400188c8:	mov    ebx,edx
   1400188ca:	mov    rsi,rcx
   1400188cd:	xor    edx,edx
   1400188cf:	add    rcx,0x10
   1400188d3:	call   QWORD PTR [rip+0x7be7]        # 0x1400204c0
   1400188d9:	mov    BYTE PTR [rsi+0x8c],0x1
   1400188e0:	mov    DWORD PTR [rsi+0x7c],0x0
   1400188e7:	cmp    ebx,0x1
   1400188ea:	jne    0x140018910
   1400188ec:	lea    rcx,[rsp+0x88]
   1400188f4:	mov    dl,0x3d
   1400188f6:	call   QWORD PTR [rip+0x7e94]        # 0x140020790
   1400188fc:	lea    rcx,[rsi+0x10]
   140018900:	movzx  edx,WORD PTR [rax]
   140018903:	call   QWORD PTR [rip+0x7c0f]        # 0x140020518
   140018909:	nop    DWORD PTR [rax+0x0]
   140018910:	movzx  ecx,WORD PTR [rsi+0x58]
   140018914:	sub    ecx,0x2f
   140018917:	je     0x140018b76
   14001891d:	sub    ecx,0x2c
   140018920:	je     0x140018a01
   140018926:	cmp    ecx,0x1
   140018929:	je     0x14001898b
   14001892b:	mov    rax,QWORD PTR [rsi+0x38]
   14001892f:	cmp    QWORD PTR [rsi+0x30],rax
   140018933:	ja     0x140018945
   140018935:	mov    rcx,rsi
   140018938:	call   0x140018240
   14001893d:	test   al,al
   14001893f:	je     0x140018acf
   140018945:	lea    r8,[rip+0xa254]        # 0x140022ba0
   14001894c:	lea    rdx,[rip+0xa0c5]        # 0x140022a18
   140018953:	lea    rcx,[rsp+0x30]
   140018958:	xor    r9d,r9d
   14001895b:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140018963:	call   QWORD PTR [rip+0x7adf]        # 0x140020448
   140018969:	lea    rcx,[rsi+0x18]
   14001896d:	mov    rdx,rax
   140018970:	call   QWORD PTR [rip+0x7bf2]        # 0x140020568
   140018976:	lea    rcx,[rsp+0x30]
   14001897b:	call   QWORD PTR [rip+0x7dff]        # 0x140020780
   140018981:	xor    al,al
   140018983:	add    rsp,0x60
   140018987:	pop    rdi
   140018988:	pop    rsi
   140018989:	pop    rbx
   14001898a:	ret    
   14001898b:	movzx  edx,WORD PTR [rsi+0x58]
   14001898f:	lea    rcx,[rsi+0x10]
   140018993:	call   QWORD PTR [rip+0x7b7f]        # 0x140020518
   140018999:	mov    rcx,rsi
   14001899c:	call   0x1400185d0
   1400189a1:	mov    r11,QWORD PTR [rsi+0x38]
   1400189a5:	cmp    QWORD PTR [rsi+0x30],r11
   1400189a9:	ja     0x1400189bb
   1400189ab:	mov    rcx,rsi
   1400189ae:	call   0x140018240
   1400189b3:	test   al,al
   1400189b5:	je     0x140018acf
   1400189bb:	lea    r8,[rip+0xa1a6]        # 0x140022b68
   1400189c2:	lea    rdx,[rip+0xa04f]        # 0x140022a18
   1400189c9:	lea    rcx,[rsp+0x38]
   1400189ce:	xor    r9d,r9d
   1400189d1:	mov    DWORD PTR [rsp+0x20],0xffffffff
   1400189d9:	call   QWORD PTR [rip+0x7a69]        # 0x140020448
   1400189df:	lea    rcx,[rsi+0x18]
   1400189e3:	mov    rdx,rax
   1400189e6:	call   QWORD PTR [rip+0x7b7c]        # 0x140020568
   1400189ec:	lea    rcx,[rsp+0x38]
   1400189f1:	call   QWORD PTR [rip+0x7d89]        # 0x140020780
   1400189f7:	xor    al,al
   1400189f9:	add    rsp,0x60
   1400189fd:	pop    rdi
   1400189fe:	pop    rsi
   1400189ff:	pop    rbx
   140018a00:	ret    
   140018a01:	movzx  edx,WORD PTR [rsi+0x58]
   140018a05:	lea    rcx,[rsi+0x10]
   140018a09:	call   QWORD PTR [rip+0x7b09]        # 0x140020518
   140018a0f:	mov    rcx,rsi
   140018a12:	call   0x1400185d0
   140018a17:	mov    rax,QWORD PTR [rsi+0x38]
   140018a1b:	cmp    QWORD PTR [rsi+0x30],rax
   140018a1f:	ja     0x140018ab6
   140018a25:	mov    rcx,rsi
   140018a28:	call   0x140018240
   140018a2d:	test   al,al
   140018a2f:	jne    0x140018ab6
   140018a35:	lea    rcx,[rsp+0x88]
   140018a3d:	mov    dl,0x5d
   140018a3f:	call   QWORD PTR [rip+0x7d4b]        # 0x140020790
   140018a45:	movzx  eax,WORD PTR [rax]
   140018a48:	cmp    WORD PTR [rsi+0x58],ax
   140018a4c:	je     0x140018ab6
   140018a4e:	lea    rcx,[rsp+0x80]
   140018a56:	mov    dl,0x5c
   140018a58:	call   QWORD PTR [rip+0x7d32]        # 0x140020790
   140018a5e:	movzx  edx,WORD PTR [rsi+0x58]
   140018a62:	lea    rcx,[rsi+0x10]
   140018a66:	movzx  eax,WORD PTR [rax]
   140018a69:	cmp    dx,ax
   140018a6c:	jne    0x140018a9a
   140018a6e:	call   QWORD PTR [rip+0x7aa4]        # 0x140020518
   140018a74:	mov    rcx,rsi
   140018a77:	call   0x1400185d0
   140018a7c:	mov    r11,QWORD PTR [rsi+0x38]
   140018a80:	cmp    QWORD PTR [rsi+0x30],r11
   140018a84:	ja     0x140018aea
   140018a86:	mov    rcx,rsi
   140018a89:	call   0x140018240
   140018a8e:	test   al,al
   140018a90:	jne    0x140018aea
   140018a92:	movzx  edx,WORD PTR [rsi+0x58]
   140018a96:	lea    rcx,[rsi+0x10]
   140018a9a:	call   QWORD PTR [rip+0x7a78]        # 0x140020518
   140018aa0:	mov    rcx,rsi
   140018aa3:	call   0x1400185d0
   140018aa8:	mov    rax,QWORD PTR [rsi+0x38]
   140018aac:	cmp    QWORD PTR [rsi+0x30],rax
   140018ab0:	jbe    0x140018a25
   140018ab6:	lea    rcx,[rsp+0x90]
   140018abe:	mov    dl,0x5d
   140018ac0:	call   QWORD PTR [rip+0x7cca]        # 0x140020790
   140018ac6:	movzx  eax,WORD PTR [rax]
   140018ac9:	cmp    WORD PTR [rsi+0x58],ax
   140018acd:	jne    0x140018b30
   140018acf:	movzx  edx,WORD PTR [rsi+0x58]
   140018ad3:	lea    rcx,[rsi+0x10]
   140018ad7:	call   QWORD PTR [rip+0x7a3b]        # 0x140020518
   140018add:	mov    rcx,rsi
   140018ae0:	call   0x1400185d0
   140018ae5:	jmp    0x140018910
   140018aea:	lea    r8,[rip+0xa077]        # 0x140022b68
   140018af1:	lea    rdx,[rip+0x9f20]        # 0x140022a18
   140018af8:	lea    rcx,[rsp+0x40]
   140018afd:	xor    r9d,r9d
   140018b00:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140018b08:	call   QWORD PTR [rip+0x793a]        # 0x140020448
   140018b0e:	lea    rcx,[rsi+0x18]
   140018b12:	mov    rdx,rax
   140018b15:	call   QWORD PTR [rip+0x7a4d]        # 0x140020568
   140018b1b:	lea    rcx,[rsp+0x40]
   140018b20:	call   QWORD PTR [rip+0x7c5a]        # 0x140020780
   140018b26:	xor    al,al
   140018b28:	add    rsp,0x60
   140018b2c:	pop    rdi
   140018b2d:	pop    rsi
   140018b2e:	pop    rbx
   140018b2f:	ret    
   140018b30:	lea    r8,[rip+0xa009]        # 0x140022b40
   140018b37:	lea    rdx,[rip+0x9eda]        # 0x140022a18
   140018b3e:	lea    rcx,[rsp+0x48]
   140018b43:	xor    r9d,r9d
   140018b46:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140018b4e:	call   QWORD PTR [rip+0x78f4]        # 0x140020448
   140018b54:	lea    rcx,[rsi+0x18]
   140018b58:	mov    rdx,rax
   140018b5b:	call   QWORD PTR [rip+0x7a07]        # 0x140020568
   140018b61:	lea    rcx,[rsp+0x48]
   140018b66:	call   QWORD PTR [rip+0x7c14]        # 0x140020780
   140018b6c:	xor    al,al
   140018b6e:	add    rsp,0x60
   140018b72:	pop    rdi
   140018b73:	pop    rsi
   140018b74:	pop    rbx
   140018b75:	ret    
   140018b76:	mov    rcx,rsi
   140018b79:	call   0x1400185d0
   140018b7e:	movzx  ecx,WORD PTR [rsi+0x58]
   140018b82:	mov    DWORD PTR [rsi+0x7c],0x0
   140018b89:	call   0x1400182b0
   140018b8e:	test   al,al
   140018b90:	je     0x140018bd9
   140018b92:	movzx  eax,WORD PTR [rsi+0x58]
   140018b96:	cmp    eax,0x67
   140018b99:	je     0x140018bb3
   140018b9b:	cmp    eax,0x69
   140018b9e:	je     0x140018bac
   140018ba0:	cmp    eax,0x6d
   140018ba3:	jne    0x140018bf6
   140018ba5:	mov    eax,0x4
   140018baa:	jmp    0x140018bb8
   140018bac:	mov    eax,0x2
   140018bb1:	jmp    0x140018bb8
   140018bb3:	mov    eax,0x1
   140018bb8:	mov    ecx,DWORD PTR [rsi+0x7c]
   140018bbb:	test   eax,ecx
   140018bbd:	jne    0x140018bf6
   140018bbf:	or     ecx,eax
   140018bc1:	mov    DWORD PTR [rsi+0x7c],ecx
   140018bc4:	mov    rcx,rsi
   140018bc7:	call   0x1400185d0
   140018bcc:	movzx  ecx,WORD PTR [rsi+0x58]
   140018bd0:	call   0x1400182b0
   140018bd5:	test   al,al
   140018bd7:	jne    0x140018b92
   140018bd9:	mov    rax,QWORD PTR [rsi+0x30]
   140018bdd:	sub    rax,QWORD PTR [rsi+0x50]
   140018be1:	sar    rax,1
   140018be4:	dec    eax
   140018be6:	mov    DWORD PTR [rsi+0x84],eax
   140018bec:	mov    al,0x1
   140018bee:	add    rsp,0x60
   140018bf2:	pop    rdi
   140018bf3:	pop    rsi
   140018bf4:	pop    rbx
   140018bf5:	ret    
   140018bf6:	movzx  ebx,WORD PTR [rsi+0x58]
   140018bfa:	lea    rcx,[rsp+0x98]
   140018c02:	mov    dl,0x20
   140018c04:	call   QWORD PTR [rip+0x7b86]        # 0x140020790
   140018c0a:	lea    r8,[rip+0x9f07]        # 0x140022b18
   140018c11:	lea    rdx,[rip+0x9e00]        # 0x140022a18
   140018c18:	lea    rcx,[rsp+0x58]
   140018c1d:	xor    r9d,r9d
   140018c20:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140018c28:	mov    rdi,rax
   140018c2b:	call   QWORD PTR [rip+0x7817]        # 0x140020448
   140018c31:	lea    rdx,[rsp+0x50]
   140018c36:	mov    rcx,rax
   140018c39:	movzx  eax,WORD PTR [rdi]
   140018c3c:	xor    r9d,r9d
   140018c3f:	movzx  r8d,bx
   140018c43:	mov    WORD PTR [rsp+0x20],ax
   140018c48:	call   QWORD PTR [rip+0x786a]        # 0x1400204b8
   140018c4e:	lea    rcx,[rsi+0x18]
   140018c52:	mov    rdx,rax
   140018c55:	call   QWORD PTR [rip+0x790d]        # 0x140020568
   140018c5b:	lea    rcx,[rsp+0x50]
   140018c60:	call   QWORD PTR [rip+0x7b1a]        # 0x140020780
   140018c66:	lea    rcx,[rsp+0x58]
   140018c6b:	call   QWORD PTR [rip+0x7b0f]        # 0x140020780
   140018c71:	xor    al,al
   140018c73:	add    rsp,0x60
   140018c77:	pop    rdi
   140018c78:	pop    rsi
   140018c79:	pop    rbx
   140018c7a:	ret    
   140018c7b:	int3   
   140018c7c:	int3   
   140018c7d:	int3   
   140018c7e:	int3   
   140018c7f:	int3   
   140018c80:	mov    WORD PTR [rsp+0x10],dx
   140018c85:	push   rbx
   140018c86:	push   rbp
   140018c87:	push   rsi
   140018c88:	push   rdi
   140018c89:	push   r12
   140018c8b:	push   r13
   140018c8d:	push   r15
   140018c8f:	sub    rsp,0xd0
   140018c96:	mov    rdi,rcx
   140018c99:	lea    rcx,[rsp+0x128]
   140018ca1:	mov    dl,0x30
   140018ca3:	call   QWORD PTR [rip+0x7ae7]        # 0x140020790
   140018ca9:	xor    r15d,r15d
   140018cac:	mov    r11,rax
   140018caf:	movzx  eax,WORD PTR [rsp+0x118]
   140018cb7:	cmp    ax,WORD PTR [r11]
   140018cbb:	je     0x140018eb1
   140018cc1:	movzx  ebx,WORD PTR [rdi+0x58]
   140018cc5:	mov    r13,QWORD PTR [rdi+0x30]
   140018cc9:	lea    rcx,[rsp+0x70]
   140018cce:	mov    QWORD PTR [rsp+0x68],rcx
   140018cd3:	mov    QWORD PTR [rsp+0x110],r14
   140018cdb:	mov    r14d,0xff
   140018ce1:	movzx  ecx,al
   140018ce4:	cmp    ax,r14w
   140018ce8:	mov    edx,0x40
   140018ced:	cmova  ecx,r15d
   140018cf1:	mov    esi,0x1
   140018cf6:	mov    DWORD PTR [rsp+0x60],edx
   140018cfa:	mov    BYTE PTR [rsp+0x70],cl
   140018cfe:	mov    DWORD PTR [rsp+0x64],esi
   140018d02:	movzx  ecx,bx
   140018d05:	cmp    ecx,0x39
   140018d08:	ja     0x140018d0f
   140018d0a:	cmp    ecx,0x30
   140018d0d:	jae    0x140018d2f
   140018d0f:	cmp    ecx,0x7f
   140018d12:	jbe    0x140018dcf
   140018d18:	call   QWORD PTR [rip+0x778a]        # 0x1400204a8
   140018d1e:	cmp    eax,0x3
   140018d21:	jne    0x140018dcf
   140018d27:	mov    esi,DWORD PTR [rsp+0x64]
   140018d2b:	mov    edx,DWORD PTR [rsp+0x60]
   140018d2f:	cmp    bx,r14w
   140018d33:	movzx  r12d,bl
   140018d37:	cmova  r12d,r15d
   140018d3b:	cmp    esi,edx
   140018d3d:	jne    0x140018da7
   140018d3f:	mov    rbx,QWORD PTR [rsp+0x68]
   140018d44:	lea    ebp,[rsi+rsi*1]
   140018d47:	cmp    ebp,edx
   140018d49:	je     0x140018d89
   140018d4b:	cmp    ebp,0x40
   140018d4e:	jle    0x140018d64
   140018d50:	movsxd rcx,ebp
   140018d53:	call   QWORD PTR [rip+0x7477]        # 0x1400201d0
   140018d59:	mov    DWORD PTR [rsp+0x60],ebp
   140018d5d:	mov    QWORD PTR [rsp+0x68],rax
   140018d62:	jmp    0x140018d76
   140018d64:	lea    rax,[rsp+0x70]
   140018d69:	mov    DWORD PTR [rsp+0x60],0x40
   140018d71:	mov    QWORD PTR [rsp+0x68],rax
   140018d76:	movsxd r8,esi
   140018d79:	mov    rdx,rbx
   140018d7c:	mov    rcx,rax
   140018d7f:	mov    DWORD PTR [rsp+0x64],r15d
   140018d84:	call   0x14001edd4
   140018d89:	lea    rax,[rsp+0x70]
   140018d8e:	mov    DWORD PTR [rsp+0x64],esi
   140018d92:	cmp    rbx,rax
   140018d95:	je     0x140018da7
   140018d97:	cmp    rbx,QWORD PTR [rsp+0x68]
   140018d9c:	je     0x140018da7
   140018d9e:	mov    rcx,rbx
   140018da1:	call   QWORD PTR [rip+0x7441]        # 0x1400201e8
   140018da7:	mov    rax,QWORD PTR [rsp+0x68]
   140018dac:	movsxd rcx,esi
   140018daf:	inc    esi
   140018db1:	mov    DWORD PTR [rsp+0x64],esi
   140018db5:	mov    BYTE PTR [rcx+rax*1],r12b
   140018db9:	mov    bx,WORD PTR [r13+0x0]
   140018dbe:	mov    esi,DWORD PTR [rsp+0x64]
   140018dc2:	mov    edx,DWORD PTR [rsp+0x60]
   140018dc6:	add    r13,0x2
   140018dca:	jmp    0x140018d02
   140018dcf:	lea    rcx,[rsp+0x128]
   140018dd7:	mov    dl,0x2e
   140018dd9:	call   QWORD PTR [rip+0x79b1]        # 0x140020790
   140018ddf:	mov    r14,QWORD PTR [rsp+0x110]
   140018de7:	cmp    bx,WORD PTR [rax]
   140018dea:	je     0x140018e8b
   140018df0:	lea    rcx,[rsp+0x128]
   140018df8:	mov    dl,0x65
   140018dfa:	call   QWORD PTR [rip+0x7990]        # 0x140020790
   140018e00:	cmp    bx,WORD PTR [rax]
   140018e03:	je     0x140018e8b
   140018e09:	lea    rcx,[rsp+0x128]
   140018e11:	mov    dl,0x45
   140018e13:	call   QWORD PTR [rip+0x7977]        # 0x140020790
   140018e19:	cmp    bx,WORD PTR [rax]
   140018e1c:	je     0x140018e8b
   140018e1e:	cmp    r13,QWORD PTR [rdi+0x30]
   140018e22:	je     0x140018e34
   140018e24:	lea    rax,[r13-0x2]
   140018e28:	mov    rcx,rdi
   140018e2b:	mov    QWORD PTR [rdi+0x30],rax
   140018e2f:	call   0x1400185d0
   140018e34:	mov    ecx,DWORD PTR [rsp+0x64]
   140018e38:	cmp    ecx,DWORD PTR [rsp+0x60]
   140018e3c:	jne    0x140018e52
   140018e3e:	lea    r8d,[rcx+rcx*1]
   140018e42:	mov    edx,ecx
   140018e44:	lea    rcx,[rsp+0x60]
   140018e49:	call   0x140018520
   140018e4e:	mov    ecx,DWORD PTR [rsp+0x64]
   140018e52:	movsxd rax,ecx
   140018e55:	inc    ecx
   140018e57:	xor    edx,edx
   140018e59:	mov    DWORD PTR [rsp+0x64],ecx
   140018e5d:	mov    rcx,rax
   140018e60:	mov    rax,QWORD PTR [rsp+0x68]
   140018e65:	mov    BYTE PTR [rcx+rax*1],r15b
   140018e69:	mov    rcx,QWORD PTR [rsp+0x68]
   140018e6e:	call   QWORD PTR [rip+0x737c]        # 0x1400201f0
   140018e74:	mov    rcx,QWORD PTR [rsp+0x68]
   140018e79:	lea    rax,[rsp+0x70]
   140018e7e:	cmp    rcx,rax
   140018e81:	movsd  QWORD PTR [rdi+0x68],xmm0
   140018e86:	jmp    0x1400197f1
   140018e8b:	mov    rcx,QWORD PTR [rsp+0x68]
   140018e90:	lea    rax,[rsp+0x70]
   140018e95:	cmp    rcx,rax
   140018e98:	je     0x140018f33
   140018e9e:	call   QWORD PTR [rip+0x7344]        # 0x1400201e8
   140018ea4:	mov    ax,WORD PTR [rsp+0x118]
   140018eac:	jmp    0x140018f3b
   140018eb1:	movzx  ecx,WORD PTR [rdi+0x58]
   140018eb5:	cmp    ecx,0x39
   140018eb8:	ja     0x140018ebf
   140018eba:	cmp    ecx,0x30
   140018ebd:	jae    0x140018ed7
   140018ebf:	cmp    ecx,0x7f
   140018ec2:	jbe    0x140018f3b
   140018ec4:	call   QWORD PTR [rip+0x75de]        # 0x1400204a8
   140018eca:	cmp    eax,0x3
   140018ecd:	jne    0x140018f33
   140018ecf:	mov    ax,WORD PTR [rsp+0x118]
   140018ed7:	cmp    BYTE PTR [rdi+0x92],r15b
   140018ede:	jne    0x140018f3b
   140018ee0:	lea    r8,[rip+0x9d41]        # 0x140022c28
   140018ee7:	lea    rdx,[rip+0x9b2a]        # 0x140022a18
   140018eee:	lea    rcx,[rsp+0x128]
   140018ef6:	xor    r9d,r9d
   140018ef9:	mov    DWORD PTR [rdi+0x5c],0x1
   140018f00:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140018f08:	call   QWORD PTR [rip+0x753a]        # 0x140020448
   140018f0e:	lea    rcx,[rdi+0x18]
   140018f12:	mov    rdx,rax
   140018f15:	call   QWORD PTR [rip+0x764d]        # 0x140020568
   140018f1b:	lea    rcx,[rsp+0x128]
   140018f23:	call   QWORD PTR [rip+0x7857]        # 0x140020780
   140018f29:	mov    eax,0x61
   140018f2e:	jmp    0x1400197fe
   140018f33:	mov    ax,WORD PTR [rsp+0x118]
   140018f3b:	lea    rcx,[rsp+0x40]
   140018f40:	mov    dl,0x30
   140018f42:	mov    DWORD PTR [rsp+0x30],0x20
   140018f4a:	mov    QWORD PTR [rsp+0x38],rcx
   140018f4f:	lea    rcx,[rsp+0x128]
   140018f57:	mov    DWORD PTR [rsp+0x34],0x1
   140018f5f:	mov    BYTE PTR [rsp+0x40],al
   140018f63:	call   QWORD PTR [rip+0x7827]        # 0x140020790
   140018f69:	movzx  eax,WORD PTR [rax]
   140018f6c:	cmp    WORD PTR [rsp+0x118],ax
   140018f74:	jne    0x140019197
   140018f7a:	lea    rcx,[rsp+0x128]
   140018f82:	mov    dl,0x78
   140018f84:	call   QWORD PTR [rip+0x7806]        # 0x140020790
   140018f8a:	movzx  ecx,WORD PTR [rdi+0x58]
   140018f8e:	cmp    cx,WORD PTR [rax]
   140018f91:	je     0x140018fb0
   140018f93:	lea    rcx,[rsp+0x128]
   140018f9b:	mov    dl,0x58
   140018f9d:	call   QWORD PTR [rip+0x77ed]        # 0x140020790
   140018fa3:	mov    cx,WORD PTR [rdi+0x58]
   140018fa7:	cmp    cx,WORD PTR [rax]
   140018faa:	jne    0x140019197
   140018fb0:	movzx  ebx,BYTE PTR [rdi+0x58]
   140018fb4:	mov    WORD PTR [rsp+0x118],cx
   140018fbc:	mov    ecx,DWORD PTR [rsp+0x34]
   140018fc0:	cmp    ecx,DWORD PTR [rsp+0x30]
   140018fc4:	jne    0x140018fda
   140018fc6:	lea    r8d,[rcx+rcx*1]
   140018fca:	mov    edx,ecx
   140018fcc:	lea    rcx,[rsp+0x30]
   140018fd1:	call   0x140018470
   140018fd6:	mov    ecx,DWORD PTR [rsp+0x34]
   140018fda:	movsxd rax,ecx
   140018fdd:	inc    ecx
   140018fdf:	mov    DWORD PTR [rsp+0x34],ecx
   140018fe3:	mov    rcx,rax
   140018fe6:	mov    rax,QWORD PTR [rsp+0x38]
   140018feb:	mov    BYTE PTR [rcx+rax*1],bl
   140018fee:	mov    rcx,rdi
   140018ff1:	call   0x1400185d0
   140018ff6:	movzx  ecx,WORD PTR [rdi+0x58]
   140018ffa:	call   0x140018370
   140018fff:	test   al,al
   140019001:	je     0x1400190b5
   140019007:	nop    WORD PTR [rax+rax*1+0x0]
   140019010:	movsxd rbx,DWORD PTR [rsp+0x34]
   140019015:	mov    eax,DWORD PTR [rsp+0x30]
   140019019:	movzx  r12d,BYTE PTR [rdi+0x58]
   14001901e:	cmp    ebx,eax
   140019020:	jne    0x14001908a
   140019022:	mov    rsi,QWORD PTR [rsp+0x38]
   140019027:	lea    ebp,[rbx+rbx*1]
   14001902a:	cmp    ebp,eax
   14001902c:	je     0x14001906c
   14001902e:	cmp    ebp,0x20
   140019031:	jle    0x140019047
   140019033:	movsxd rcx,ebp
   140019036:	call   QWORD PTR [rip+0x7194]        # 0x1400201d0
   14001903c:	mov    DWORD PTR [rsp+0x30],ebp
   140019040:	mov    QWORD PTR [rsp+0x38],rax
   140019045:	jmp    0x140019059
   140019047:	lea    rax,[rsp+0x40]
   14001904c:	mov    DWORD PTR [rsp+0x30],0x20
   140019054:	mov    QWORD PTR [rsp+0x38],rax
   140019059:	mov    r8,rbx
   14001905c:	mov    rdx,rsi
   14001905f:	mov    rcx,rax
   140019062:	mov    DWORD PTR [rsp+0x34],r15d
   140019067:	call   0x14001edd4
   14001906c:	lea    rax,[rsp+0x40]
   140019071:	mov    DWORD PTR [rsp+0x34],ebx
   140019075:	cmp    rsi,rax
   140019078:	je     0x14001908a
   14001907a:	cmp    rsi,QWORD PTR [rsp+0x38]
   14001907f:	je     0x14001908a
   140019081:	mov    rcx,rsi
   140019084:	call   QWORD PTR [rip+0x715e]        # 0x1400201e8
   14001908a:	mov    rax,QWORD PTR [rsp+0x38]
   14001908f:	mov    rcx,rbx
   140019092:	inc    ebx
   140019094:	mov    DWORD PTR [rsp+0x34],ebx
   140019098:	mov    BYTE PTR [rcx+rax*1],r12b
   14001909c:	mov    rcx,rdi
   14001909f:	call   0x1400185d0
   1400190a4:	movzx  ecx,WORD PTR [rdi+0x58]
   1400190a8:	call   0x140018370
   1400190ad:	test   al,al
   1400190af:	jne    0x140019010
   1400190b5:	mov    edx,DWORD PTR [rsp+0x34]
   1400190b9:	cmp    edx,0x3
   1400190bc:	jge    0x140019170
   1400190c2:	lea    rcx,[rsp+0x128]
   1400190ca:	mov    dl,0x20
   1400190cc:	mov    DWORD PTR [rdi+0x5c],0x2
   1400190d3:	call   QWORD PTR [rip+0x76b7]        # 0x140020790
   1400190d9:	lea    r8,[rip+0x9b10]        # 0x140022bf0
   1400190e0:	lea    rdx,[rip+0x9931]        # 0x140022a18
   1400190e7:	lea    rcx,[rsp+0xb8]
   1400190ef:	xor    r9d,r9d
   1400190f2:	mov    DWORD PTR [rsp+0x20],0xffffffff
   1400190fa:	mov    rbx,rax
   1400190fd:	call   QWORD PTR [rip+0x7345]        # 0x140020448
   140019103:	movzx  r8d,WORD PTR [rsp+0x118]
   14001910c:	mov    rcx,rax
   14001910f:	movzx  eax,WORD PTR [rbx]
   140019112:	lea    rdx,[rsp+0xc0]
   14001911a:	xor    r9d,r9d
   14001911d:	mov    WORD PTR [rsp+0x20],ax
   140019122:	call   QWORD PTR [rip+0x7390]        # 0x1400204b8
   140019128:	lea    rcx,[rdi+0x18]
   14001912c:	mov    rdx,rax
   14001912f:	call   QWORD PTR [rip+0x7433]        # 0x140020568
   140019135:	lea    rcx,[rsp+0xc0]
   14001913d:	call   QWORD PTR [rip+0x763d]        # 0x140020780
   140019143:	lea    rcx,[rsp+0xb8]
   14001914b:	call   QWORD PTR [rip+0x762f]        # 0x140020780
   140019151:	mov    rcx,QWORD PTR [rsp+0x38]
   140019156:	lea    r11,[rsp+0x40]
   14001915b:	cmp    rcx,r11
   14001915e:	je     0x140019166
   140019160:	call   QWORD PTR [rip+0x7082]        # 0x1400201e8
   140019166:	mov    eax,0x61
   14001916b:	jmp    0x1400197fe
   140019170:	mov    rcx,QWORD PTR [rsp+0x38]
   140019175:	mov    r8d,0x10
   14001917b:	call   0x1400167b0
   140019180:	mov    rcx,QWORD PTR [rsp+0x38]
   140019185:	lea    rax,[rsp+0x40]
   14001918a:	cmp    rcx,rax
   14001918d:	movsd  QWORD PTR [rdi+0x68],xmm0
   140019192:	jmp    0x1400197f1
   140019197:	movzx  ecx,WORD PTR [rdi+0x58]
   14001919b:	cmp    ecx,0x39
   14001919e:	ja     0x1400191a5
   1400191a0:	cmp    ecx,0x30
   1400191a3:	jae    0x1400191bd
   1400191a5:	cmp    ecx,0x7f
   1400191a8:	jbe    0x140019256
   1400191ae:	call   QWORD PTR [rip+0x72f4]        # 0x1400204a8
   1400191b4:	cmp    eax,0x3
   1400191b7:	jne    0x140019256
   1400191bd:	movsxd rbx,DWORD PTR [rsp+0x34]
   1400191c2:	mov    eax,DWORD PTR [rsp+0x30]
   1400191c6:	movzx  r12d,BYTE PTR [rdi+0x58]
   1400191cb:	cmp    ebx,eax
   1400191cd:	jne    0x140019237
   1400191cf:	mov    rsi,QWORD PTR [rsp+0x38]
   1400191d4:	lea    ebp,[rbx+rbx*1]
   1400191d7:	cmp    ebp,eax
   1400191d9:	je     0x140019219
   1400191db:	cmp    ebp,0x20
   1400191de:	jle    0x1400191f4
   1400191e0:	movsxd rcx,ebp
   1400191e3:	call   QWORD PTR [rip+0x6fe7]        # 0x1400201d0
   1400191e9:	mov    DWORD PTR [rsp+0x30],ebp
   1400191ed:	mov    QWORD PTR [rsp+0x38],rax
   1400191f2:	jmp    0x140019206
   1400191f4:	lea    rax,[rsp+0x40]
   1400191f9:	mov    DWORD PTR [rsp+0x30],0x20
   140019201:	mov    QWORD PTR [rsp+0x38],rax
   140019206:	mov    r8,rbx
   140019209:	mov    rdx,rsi
   14001920c:	mov    rcx,rax
   14001920f:	mov    DWORD PTR [rsp+0x34],r15d
   140019214:	call   0x14001edd4
   140019219:	lea    rax,[rsp+0x40]
   14001921e:	mov    DWORD PTR [rsp+0x34],ebx
   140019222:	cmp    rsi,rax
   140019225:	je     0x140019237
   140019227:	cmp    rsi,QWORD PTR [rsp+0x38]
   14001922c:	je     0x140019237
   14001922e:	mov    rcx,rsi
   140019231:	call   QWORD PTR [rip+0x6fb1]        # 0x1400201e8
   140019237:	mov    rax,QWORD PTR [rsp+0x38]
   14001923c:	mov    rcx,rbx
   14001923f:	inc    ebx
   140019241:	mov    DWORD PTR [rsp+0x34],ebx
   140019245:	mov    BYTE PTR [rcx+rax*1],r12b
   140019249:	mov    rcx,rdi
   14001924c:	call   0x1400185d0
   140019251:	jmp    0x140019197
   140019256:	lea    rcx,[rsp+0x128]
   14001925e:	mov    dl,0x2e
   140019260:	call   QWORD PTR [rip+0x752a]        # 0x140020790
   140019266:	movzx  eax,WORD PTR [rax]
   140019269:	cmp    WORD PTR [rdi+0x58],ax
   14001926d:	jne    0x14001953d
   140019273:	mov    ecx,DWORD PTR [rsp+0x34]
   140019277:	movzx  ebx,BYTE PTR [rdi+0x58]
   14001927b:	cmp    ecx,DWORD PTR [rsp+0x30]
   14001927f:	jne    0x140019295
   140019281:	lea    r8d,[rcx+rcx*1]
   140019285:	mov    edx,ecx
   140019287:	lea    rcx,[rsp+0x30]
   14001928c:	call   0x140018470
   140019291:	mov    ecx,DWORD PTR [rsp+0x34]
   140019295:	movsxd rax,ecx
   140019298:	inc    ecx
   14001929a:	mov    DWORD PTR [rsp+0x34],ecx
   14001929e:	mov    rcx,rax
   1400192a1:	mov    rax,QWORD PTR [rsp+0x38]
   1400192a6:	mov    BYTE PTR [rcx+rax*1],bl
   1400192a9:	mov    rcx,rdi
   1400192ac:	call   0x1400185d0
   1400192b1:	movzx  ecx,WORD PTR [rdi+0x58]
   1400192b5:	cmp    ecx,0x39
   1400192b8:	ja     0x1400192bf
   1400192ba:	cmp    ecx,0x30
   1400192bd:	jae    0x1400192d7
   1400192bf:	cmp    ecx,0x7f
   1400192c2:	jbe    0x140019370
   1400192c8:	call   QWORD PTR [rip+0x71da]        # 0x1400204a8
   1400192ce:	cmp    eax,0x3
   1400192d1:	jne    0x140019370
   1400192d7:	movsxd rbx,DWORD PTR [rsp+0x34]
   1400192dc:	mov    eax,DWORD PTR [rsp+0x30]
   1400192e0:	movzx  r12d,BYTE PTR [rdi+0x58]
   1400192e5:	cmp    ebx,eax
   1400192e7:	jne    0x140019351
   1400192e9:	mov    rsi,QWORD PTR [rsp+0x38]
   1400192ee:	lea    ebp,[rbx+rbx*1]
   1400192f1:	cmp    ebp,eax
   1400192f3:	je     0x140019333
   1400192f5:	cmp    ebp,0x20
   1400192f8:	jle    0x14001930e
   1400192fa:	movsxd rcx,ebp
   1400192fd:	call   QWORD PTR [rip+0x6ecd]        # 0x1400201d0
   140019303:	mov    DWORD PTR [rsp+0x30],ebp
   140019307:	mov    QWORD PTR [rsp+0x38],rax
   14001930c:	jmp    0x140019320
   14001930e:	lea    rax,[rsp+0x40]
   140019313:	mov    DWORD PTR [rsp+0x30],0x20
   14001931b:	mov    QWORD PTR [rsp+0x38],rax
   140019320:	mov    r8,rbx
   140019323:	mov    rdx,rsi
   140019326:	mov    rcx,rax
   140019329:	mov    DWORD PTR [rsp+0x34],r15d
   14001932e:	call   0x14001edd4
   140019333:	lea    rax,[rsp+0x40]
   140019338:	mov    DWORD PTR [rsp+0x34],ebx
   14001933c:	cmp    rsi,rax
   14001933f:	je     0x140019351
   140019341:	cmp    rsi,QWORD PTR [rsp+0x38]
   140019346:	je     0x140019351
   140019348:	mov    rcx,rsi
   14001934b:	call   QWORD PTR [rip+0x6e97]        # 0x1400201e8
   140019351:	mov    rax,QWORD PTR [rsp+0x38]
   140019356:	mov    rcx,rbx
   140019359:	inc    ebx
   14001935b:	mov    DWORD PTR [rsp+0x34],ebx
   14001935f:	mov    BYTE PTR [rcx+rax*1],r12b
   140019363:	mov    rcx,rdi
   140019366:	call   0x1400185d0
   14001936b:	jmp    0x1400192b1
   140019370:	lea    rcx,[rsp+0x128]
   140019378:	mov    dl,0x65
   14001937a:	call   QWORD PTR [rip+0x7410]        # 0x140020790
   140019380:	movzx  eax,WORD PTR [rax]
   140019383:	cmp    WORD PTR [rdi+0x58],ax
   140019387:	je     0x1400193a6
   140019389:	lea    rcx,[rsp+0x128]
   140019391:	mov    dl,0x45
   140019393:	call   QWORD PTR [rip+0x73f7]        # 0x140020790
   140019399:	movzx  eax,WORD PTR [rax]
   14001939c:	cmp    WORD PTR [rdi+0x58],ax
   1400193a0:	jne    0x140019702
   1400193a6:	mov    rax,QWORD PTR [rdi+0x30]
   1400193aa:	movzx  ecx,WORD PTR [rax]
   1400193ad:	cmp    ecx,0x39
   1400193b0:	ja     0x1400193b7
   1400193b2:	cmp    ecx,0x30
   1400193b5:	jae    0x140019429
   1400193b7:	cmp    ecx,0x7f
   1400193ba:	jbe    0x1400193c7
   1400193bc:	call   QWORD PTR [rip+0x70e6]        # 0x1400204a8
   1400193c2:	cmp    eax,0x3
   1400193c5:	je     0x140019429
   1400193c7:	lea    rcx,[rsp+0x128]
   1400193cf:	mov    dl,0x2b
   1400193d1:	call   QWORD PTR [rip+0x73b9]        # 0x140020790
   1400193d7:	mov    rcx,QWORD PTR [rdi+0x30]
   1400193db:	movzx  eax,WORD PTR [rax]
   1400193de:	cmp    WORD PTR [rcx],ax
   1400193e1:	je     0x140019403
   1400193e3:	lea    rcx,[rsp+0x128]
   1400193eb:	mov    dl,0x2d
   1400193ed:	call   QWORD PTR [rip+0x739d]        # 0x140020790
   1400193f3:	mov    rcx,QWORD PTR [rdi+0x30]
   1400193f7:	movzx  eax,WORD PTR [rax]
   1400193fa:	cmp    WORD PTR [rcx],ax
   1400193fd:	jne    0x140019702
   140019403:	movzx  ecx,WORD PTR [rcx+0x2]
   140019407:	cmp    ecx,0x39
   14001940a:	ja     0x140019411
   14001940c:	cmp    ecx,0x30
   14001940f:	jae    0x140019429
   140019411:	cmp    ecx,0x7f
   140019414:	jbe    0x140019702
   14001941a:	call   QWORD PTR [rip+0x7088]        # 0x1400204a8
   140019420:	cmp    eax,0x3
   140019423:	jne    0x140019702
   140019429:	mov    ecx,DWORD PTR [rsp+0x34]
   14001942d:	movzx  ebx,BYTE PTR [rdi+0x58]
   140019431:	cmp    ecx,DWORD PTR [rsp+0x30]
   140019435:	jne    0x14001944b
   140019437:	lea    r8d,[rcx+rcx*1]
   14001943b:	mov    edx,ecx
   14001943d:	lea    rcx,[rsp+0x30]
   140019442:	call   0x140018470
   140019447:	mov    ecx,DWORD PTR [rsp+0x34]
   14001944b:	movsxd rax,ecx
   14001944e:	inc    ecx
   140019450:	mov    DWORD PTR [rsp+0x34],ecx
   140019454:	mov    rcx,rax
   140019457:	mov    rax,QWORD PTR [rsp+0x38]
   14001945c:	mov    BYTE PTR [rcx+rax*1],bl
   14001945f:	mov    rcx,rdi
   140019462:	call   0x1400185d0
   140019467:	lea    rcx,[rsp+0x128]
   14001946f:	mov    dl,0x2b
   140019471:	call   QWORD PTR [rip+0x7319]        # 0x140020790
   140019477:	movzx  eax,WORD PTR [rax]
   14001947a:	cmp    WORD PTR [rdi+0x58],ax
   14001947e:	je     0x140019499
   140019480:	lea    rcx,[rsp+0x128]
   140019488:	mov    dl,0x2d
   14001948a:	call   QWORD PTR [rip+0x7300]        # 0x140020790
   140019490:	movzx  eax,WORD PTR [rax]
   140019493:	cmp    WORD PTR [rdi+0x58],ax
   140019497:	jne    0x1400194d7
   140019499:	mov    ecx,DWORD PTR [rsp+0x34]
   14001949d:	movzx  ebx,BYTE PTR [rdi+0x58]
   1400194a1:	cmp    ecx,DWORD PTR [rsp+0x30]
   1400194a5:	jne    0x1400194bb
   1400194a7:	lea    r8d,[rcx+rcx*1]
   1400194ab:	mov    edx,ecx
   1400194ad:	lea    rcx,[rsp+0x30]
   1400194b2:	call   0x140018470
   1400194b7:	mov    ecx,DWORD PTR [rsp+0x34]
   1400194bb:	movsxd rax,ecx
   1400194be:	inc    ecx
   1400194c0:	mov    DWORD PTR [rsp+0x34],ecx
   1400194c4:	mov    rcx,rax
   1400194c7:	mov    rax,QWORD PTR [rsp+0x38]
   1400194cc:	mov    BYTE PTR [rcx+rax*1],bl
   1400194cf:	mov    rcx,rdi
   1400194d2:	call   0x1400185d0
   1400194d7:	movzx  ecx,WORD PTR [rdi+0x58]
   1400194db:	cmp    ecx,0x39
   1400194de:	ja     0x1400194e5
   1400194e0:	cmp    ecx,0x30
   1400194e3:	jae    0x1400194fd
   1400194e5:	cmp    ecx,0x7f
   1400194e8:	jbe    0x140019702
   1400194ee:	call   QWORD PTR [rip+0x6fb4]        # 0x1400204a8
   1400194f4:	cmp    eax,0x3
   1400194f7:	jne    0x140019702
   1400194fd:	mov    ecx,DWORD PTR [rsp+0x34]
   140019501:	movzx  ebx,BYTE PTR [rdi+0x58]
   140019505:	cmp    ecx,DWORD PTR [rsp+0x30]
   140019509:	jne    0x14001951f
   14001950b:	lea    r8d,[rcx+rcx*1]
   14001950f:	mov    edx,ecx
   140019511:	lea    rcx,[rsp+0x30]
   140019516:	call   0x140018470
   14001951b:	mov    ecx,DWORD PTR [rsp+0x34]
   14001951f:	movsxd rax,ecx
   140019522:	inc    ecx
   140019524:	mov    DWORD PTR [rsp+0x34],ecx
   140019528:	mov    rcx,rax
   14001952b:	mov    rax,QWORD PTR [rsp+0x38]
   140019530:	mov    BYTE PTR [rcx+rax*1],bl
   140019533:	mov    rcx,rdi
   140019536:	call   0x1400185d0
   14001953b:	jmp    0x1400194d7
   14001953d:	lea    rcx,[rsp+0x128]
   140019545:	mov    dl,0x65
   140019547:	call   QWORD PTR [rip+0x7243]        # 0x140020790
   14001954d:	movzx  eax,WORD PTR [rax]
   140019550:	cmp    WORD PTR [rdi+0x58],ax
   140019554:	je     0x140019573
   140019556:	lea    rcx,[rsp+0x128]
   14001955e:	mov    dl,0x45
   140019560:	call   QWORD PTR [rip+0x722a]        # 0x140020790
   140019566:	movzx  eax,WORD PTR [rax]
   140019569:	cmp    WORD PTR [rdi+0x58],ax
   14001956d:	jne    0x140019702
   140019573:	mov    rax,QWORD PTR [rdi+0x30]
   140019577:	movzx  ecx,WORD PTR [rax]
   14001957a:	cmp    ecx,0x39
   14001957d:	ja     0x140019584
   14001957f:	cmp    ecx,0x30
   140019582:	jae    0x1400195f6
   140019584:	cmp    ecx,0x7f
   140019587:	jbe    0x140019594
   140019589:	call   QWORD PTR [rip+0x6f19]        # 0x1400204a8
   14001958f:	cmp    eax,0x3
   140019592:	je     0x1400195f6
   140019594:	lea    rcx,[rsp+0x128]
   14001959c:	mov    dl,0x2b
   14001959e:	call   QWORD PTR [rip+0x71ec]        # 0x140020790
   1400195a4:	mov    rcx,QWORD PTR [rdi+0x30]
   1400195a8:	movzx  eax,WORD PTR [rax]
   1400195ab:	cmp    WORD PTR [rcx],ax
   1400195ae:	je     0x1400195d0
   1400195b0:	lea    rcx,[rsp+0x128]
   1400195b8:	mov    dl,0x2d
   1400195ba:	call   QWORD PTR [rip+0x71d0]        # 0x140020790
   1400195c0:	mov    rcx,QWORD PTR [rdi+0x30]
   1400195c4:	movzx  eax,WORD PTR [rax]
   1400195c7:	cmp    WORD PTR [rcx],ax
   1400195ca:	jne    0x140019702
   1400195d0:	movzx  ecx,WORD PTR [rcx+0x2]
   1400195d4:	cmp    ecx,0x39
   1400195d7:	ja     0x1400195de
   1400195d9:	cmp    ecx,0x30
   1400195dc:	jae    0x1400195f6
   1400195de:	cmp    ecx,0x7f
   1400195e1:	jbe    0x140019702
   1400195e7:	call   QWORD PTR [rip+0x6ebb]        # 0x1400204a8
   1400195ed:	cmp    eax,0x3
   1400195f0:	jne    0x140019702
   1400195f6:	mov    ecx,DWORD PTR [rsp+0x34]
   1400195fa:	movzx  ebx,BYTE PTR [rdi+0x58]
   1400195fe:	cmp    ecx,DWORD PTR [rsp+0x30]
   140019602:	jne    0x140019618
   140019604:	lea    r8d,[rcx+rcx*1]
   140019608:	mov    edx,ecx
   14001960a:	lea    rcx,[rsp+0x30]
   14001960f:	call   0x140018470
   140019614:	mov    ecx,DWORD PTR [rsp+0x34]
   140019618:	movsxd rax,ecx
   14001961b:	inc    ecx
   14001961d:	mov    DWORD PTR [rsp+0x34],ecx
   140019621:	mov    rcx,rax
   140019624:	mov    rax,QWORD PTR [rsp+0x38]
   140019629:	mov    BYTE PTR [rcx+rax*1],bl
   14001962c:	mov    rcx,rdi
   14001962f:	call   0x1400185d0
   140019634:	lea    rcx,[rsp+0x128]
   14001963c:	mov    dl,0x2b
   14001963e:	call   QWORD PTR [rip+0x714c]        # 0x140020790
   140019644:	movzx  eax,WORD PTR [rax]
   140019647:	cmp    WORD PTR [rdi+0x58],ax
   14001964b:	je     0x140019666
   14001964d:	lea    rcx,[rsp+0x128]
   140019655:	mov    dl,0x2d
   140019657:	call   QWORD PTR [rip+0x7133]        # 0x140020790
   14001965d:	movzx  eax,WORD PTR [rax]
   140019660:	cmp    WORD PTR [rdi+0x58],ax
   140019664:	jne    0x1400196a4
   140019666:	mov    ecx,DWORD PTR [rsp+0x34]
   14001966a:	movzx  ebx,BYTE PTR [rdi+0x58]
   14001966e:	cmp    ecx,DWORD PTR [rsp+0x30]
   140019672:	jne    0x140019688
   140019674:	lea    r8d,[rcx+rcx*1]
   140019678:	mov    edx,ecx
   14001967a:	lea    rcx,[rsp+0x30]
   14001967f:	call   0x140018470
   140019684:	mov    ecx,DWORD PTR [rsp+0x34]
   140019688:	movsxd rax,ecx
   14001968b:	inc    ecx
   14001968d:	mov    DWORD PTR [rsp+0x34],ecx
   140019691:	mov    rcx,rax
   140019694:	mov    rax,QWORD PTR [rsp+0x38]
   140019699:	mov    BYTE PTR [rcx+rax*1],bl
   14001969c:	mov    rcx,rdi
   14001969f:	call   0x1400185d0
   1400196a4:	movzx  ecx,WORD PTR [rdi+0x58]
   1400196a8:	cmp    ecx,0x39
   1400196ab:	ja     0x1400196b2
   1400196ad:	cmp    ecx,0x30
   1400196b0:	jae    0x1400196c2
   1400196b2:	cmp    ecx,0x7f
   1400196b5:	jbe    0x140019702
   1400196b7:	call   QWORD PTR [rip+0x6deb]        # 0x1400204a8
   1400196bd:	cmp    eax,0x3
   1400196c0:	jne    0x140019702
   1400196c2:	mov    ecx,DWORD PTR [rsp+0x34]
   1400196c6:	movzx  ebx,BYTE PTR [rdi+0x58]
   1400196ca:	cmp    ecx,DWORD PTR [rsp+0x30]
   1400196ce:	jne    0x1400196e4
   1400196d0:	lea    r8d,[rcx+rcx*1]
   1400196d4:	mov    edx,ecx
   1400196d6:	lea    rcx,[rsp+0x30]
   1400196db:	call   0x140018470
   1400196e0:	mov    ecx,DWORD PTR [rsp+0x34]
   1400196e4:	movsxd rax,ecx
   1400196e7:	inc    ecx
   1400196e9:	mov    DWORD PTR [rsp+0x34],ecx
   1400196ed:	mov    rcx,rax
   1400196f0:	mov    rax,QWORD PTR [rsp+0x38]
   1400196f5:	mov    BYTE PTR [rcx+rax*1],bl
   1400196f8:	mov    rcx,rdi
   1400196fb:	call   0x1400185d0
   140019700:	jmp    0x1400196a4
   140019702:	mov    ecx,DWORD PTR [rsp+0x34]
   140019706:	cmp    ecx,0x1
   140019709:	jne    0x140019721
   14001970b:	mov    rcx,QWORD PTR [rsp+0x38]
   140019710:	lea    rax,[rsp+0x40]
   140019715:	mov    QWORD PTR [rdi+0x68],r15
   140019719:	cmp    rcx,rax
   14001971c:	jmp    0x1400197f1
   140019721:	cmp    ecx,DWORD PTR [rsp+0x30]
   140019725:	jne    0x14001973b
   140019727:	lea    r8d,[rcx+rcx*1]
   14001972b:	mov    edx,ecx
   14001972d:	lea    rcx,[rsp+0x30]
   140019732:	call   0x140018470
   140019737:	mov    ecx,DWORD PTR [rsp+0x34]
   14001973b:	movsxd rax,ecx
   14001973e:	inc    ecx
   140019740:	lea    r8,[rsp+0x120]
   140019748:	mov    DWORD PTR [rsp+0x34],ecx
   14001974c:	mov    rcx,rax
   14001974f:	mov    rax,QWORD PTR [rsp+0x38]
   140019754:	mov    BYTE PTR [rcx+rax*1],r15b
   140019758:	mov    rbx,QWORD PTR [rsp+0x38]
   14001975d:	lea    rdx,[rsp+0xb0]
   140019765:	mov    rcx,rbx
   140019768:	mov    QWORD PTR [rsp+0xb0],r15
   140019770:	mov    BYTE PTR [rsp+0x120],r15b
   140019778:	call   QWORD PTR [rip+0x6d4a]        # 0x1400204c8
   14001977e:	mov    eax,DWORD PTR [rsp+0x34]
   140019782:	dec    eax
   140019784:	movsxd rcx,eax
   140019787:	mov    rax,QWORD PTR [rsp+0xb0]
   14001978f:	movsd  QWORD PTR [rdi+0x68],xmm0
   140019794:	sub    rax,rbx
   140019797:	cmp    rax,rcx
   14001979a:	je     0x1400197e4
   14001979c:	lea    r8,[rip+0x9425]        # 0x140022bc8
   1400197a3:	lea    rdx,[rip+0x926e]        # 0x140022a18
   1400197aa:	lea    rcx,[rsp+0x128]
   1400197b2:	xor    r9d,r9d
   1400197b5:	mov    DWORD PTR [rdi+0x5c],0x7
   1400197bc:	mov    DWORD PTR [rsp+0x20],0xffffffff
   1400197c4:	call   QWORD PTR [rip+0x6c7e]        # 0x140020448
   1400197ca:	lea    rcx,[rdi+0x18]
   1400197ce:	mov    rdx,rax
   1400197d1:	call   QWORD PTR [rip+0x6d91]        # 0x140020568
   1400197d7:	lea    rcx,[rsp+0x128]
   1400197df:	jmp    0x14001914b
   1400197e4:	mov    rcx,QWORD PTR [rsp+0x38]
   1400197e9:	lea    rax,[rsp+0x40]
   1400197ee:	cmp    rcx,rax
   1400197f1:	je     0x1400197f9
   1400197f3:	call   QWORD PTR [rip+0x69ef]        # 0x1400201e8
   1400197f9:	mov    eax,0x2f
   1400197fe:	add    rsp,0xd0
   140019805:	pop    r15
   140019807:	pop    r13
   140019809:	pop    r12
   14001980b:	pop    rdi
   14001980c:	pop    rsi
   14001980d:	pop    rbp
   14001980e:	pop    rbx
   14001980f:	ret    
   140019810:	rex push rbp
   140019812:	sub    rsp,0x180
   140019819:	mov    eax,DWORD PTR [rcx+0x78]
   14001981c:	mov    rbp,rcx
   14001981f:	cmp    eax,0xffffffff
   140019822:	je     0x140019834
   140019824:	mov    DWORD PTR [rcx+0x78],0xffffffff
   14001982b:	add    rsp,0x180
   140019832:	pop    rbp
   140019833:	ret    
   140019834:	mov    QWORD PTR [rsp+0x160],r12
   14001983c:	mov    QWORD PTR [rsp+0x158],r13
   140019844:	mov    QWORD PTR [rsp+0x178],rbx
   14001984c:	mov    QWORD PTR [rsp+0x170],rsi
   140019854:	mov    BYTE PTR [rcx+0x8f],0x0
   14001985b:	xor    r12d,r12d
   14001985e:	mov    QWORD PTR [rsp+0x168],rdi
   140019866:	lea    r13,[rip+0xfffffffffffe6793]        # 0x140000000
   14001986d:	nop    DWORD PTR [rax]
   140019870:	mov    rax,QWORD PTR [rbp+0x40]
   140019874:	movzx  ecx,WORD PTR [rbp+0x58]
   140019878:	mov    BYTE PTR [rbp+0x8c],r12b
   14001987f:	mov    QWORD PTR [rbp+0x48],rax
   140019883:	call   QWORD PTR [rip+0x6c4f]        # 0x1400204d8
   140019889:	test   al,al
   14001988b:	je     0x1400198ef
   14001988d:	nop    DWORD PTR [rax]
   140019890:	mov    rcx,rbp
   140019893:	call   0x140018270
   140019898:	test   eax,eax
   14001989a:	je     0x1400198d9
   14001989c:	mov    ecx,eax
   14001989e:	mov    rax,QWORD PTR [rbp+0x30]
   1400198a2:	lea    rcx,[rax+rcx*2-0x2]
   1400198a7:	mov    QWORD PTR [rbp+0x48],rcx
   1400198ab:	cmp    BYTE PTR [rbp+0x8e],r12b
   1400198b2:	jne    0x140019ac9
   1400198b8:	cmp    DWORD PTR [rbp+0x70],0x2
   1400198bc:	mov    BYTE PTR [rbp+0x8f],0x1
   1400198c3:	jne    0x1400198d2
   1400198c5:	mov    BYTE PTR [rbp+0x8d],0x1
   1400198cc:	mov    DWORD PTR [rbp+0x70],r12d
   1400198d0:	jmp    0x1400198d9
   1400198d2:	mov    BYTE PTR [rbp+0x8d],r12b
   1400198d9:	mov    rcx,rbp
   1400198dc:	call   0x1400185d0
   1400198e1:	movzx  ecx,WORD PTR [rbp+0x58]
   1400198e5:	call   QWORD PTR [rip+0x6bed]        # 0x1400204d8
   1400198eb:	test   al,al
   1400198ed:	jne    0x140019890
   1400198ef:	mov    rcx,QWORD PTR [rbp+0x30]
   1400198f3:	lea    rax,[rcx-0x2]
   1400198f7:	mov    QWORD PTR [rbp+0x50],rax
   1400198fb:	mov    eax,DWORD PTR [rbp+0x60]
   1400198fe:	mov    DWORD PTR [rbp+0x88],eax
   140019904:	cmp    rcx,QWORD PTR [rbp+0x38]
   140019908:	ja     0x14001ad37
   14001990e:	movzx  ebx,WORD PTR [rbp+0x58]
   140019912:	mov    rcx,rbp
   140019915:	call   0x1400185d0
   14001991a:	lea    r11d,[rbx-0x21]
   14001991e:	cmp    r11d,0x5d
   140019922:	ja     0x14001a9fd
   140019928:	movsxd rax,r11d
   14001992b:	movzx  eax,BYTE PTR [r13+rax*1+0x1add8]
   140019934:	mov    ecx,DWORD PTR [r13+rax*4+0x1ad6c]
   14001993c:	add    rcx,r13
   14001993f:	jmp    rcx
   140019941:	lea    rcx,[rsp+0xa2]
   140019949:	mov    dl,0x2a
   14001994b:	call   QWORD PTR [rip+0x6e3f]        # 0x140020790
   140019951:	movzx  eax,WORD PTR [rax]
   140019954:	cmp    WORD PTR [rbp+0x58],ax
   140019958:	jne    0x140019a2c
   14001995e:	mov    rcx,rbp
   140019961:	call   0x1400185d0
   140019966:	data16 nop WORD PTR [rax+rax*1+0x0]
   140019970:	mov    rax,QWORD PTR [rbp+0x38]
   140019974:	cmp    QWORD PTR [rbp+0x30],rax
   140019978:	ja     0x140019ae8
   14001997e:	lea    rcx,[rsp+0xc0]
   140019986:	mov    dl,0x2a
   140019988:	call   QWORD PTR [rip+0x6e02]        # 0x140020790
   14001998e:	movzx  eax,WORD PTR [rax]
   140019991:	cmp    WORD PTR [rbp+0x58],ax
   140019995:	jne    0x140019a1f
   14001999b:	mov    rcx,rbp
   14001999e:	call   0x1400185d0
   1400199a3:	lea    rcx,[rsp+0xaa]
   1400199ab:	mov    dl,0x2f
   1400199ad:	call   QWORD PTR [rip+0x6ddd]        # 0x140020790
   1400199b3:	movzx  eax,WORD PTR [rax]
   1400199b6:	cmp    WORD PTR [rbp+0x58],ax
   1400199ba:	jne    0x140019970
   1400199bc:	mov    rcx,rbp
   1400199bf:	call   0x1400185d0
   1400199c4:	cmp    QWORD PTR [rbp+0x0],r12
   1400199c8:	je     0x140019870
   1400199ce:	mov    rdi,QWORD PTR [rbp+0x50]
   1400199d2:	mov    esi,DWORD PTR [rbp+0x88]
   1400199d8:	mov    rbx,QWORD PTR [rbp+0x50]
   1400199dc:	sub    rdi,QWORD PTR [rbp+0x48]
   1400199e0:	lea    rcx,[rbp+0x8]
   1400199e4:	sar    rdi,1
   1400199e7:	call   QWORD PTR [rip+0x6a33]        # 0x140020420
   1400199ed:	mov    r8,QWORD PTR [rbp+0x30]
   1400199f1:	mov    rcx,QWORD PTR [rbp+0x0]
   1400199f5:	sub    r8,rbx
   1400199f8:	mov    rdx,rbx
   1400199fb:	sub    rdx,rax
   1400199fe:	sar    r8,1
   140019a01:	lea    eax,[rdi+0x3]
   140019a04:	sar    rdx,1
   140019a07:	add    r8d,0xfffffffb
   140019a0b:	mov    r9d,esi
   140019a0e:	add    edx,0x2
   140019a11:	mov    DWORD PTR [rsp+0x20],eax
   140019a15:	call   0x140016e50
   140019a1a:	jmp    0x140019870
   140019a1f:	mov    rcx,rbp
   140019a22:	call   0x1400185d0
   140019a27:	jmp    0x140019970
   140019a2c:	lea    rcx,[rsp+0x76]
   140019a31:	mov    dl,0x2f
   140019a33:	call   QWORD PTR [rip+0x6d57]        # 0x140020790
   140019a39:	movzx  eax,WORD PTR [rax]
   140019a3c:	cmp    WORD PTR [rbp+0x58],ax
   140019a40:	jne    0x140019ae8
   140019a46:	mov    rax,QWORD PTR [rbp+0x38]
   140019a4a:	cmp    QWORD PTR [rbp+0x30],rax
   140019a4e:	ja     0x140019a6e
   140019a50:	mov    rcx,rbp
   140019a53:	call   0x140018240
   140019a58:	test   al,al
   140019a5a:	jne    0x140019a6e
   140019a5c:	mov    rcx,rbp
   140019a5f:	call   0x1400185d0
   140019a64:	mov    r11,QWORD PTR [rbp+0x38]
   140019a68:	cmp    QWORD PTR [rbp+0x30],r11
   140019a6c:	jbe    0x140019a50
   140019a6e:	cmp    QWORD PTR [rbp+0x0],r12
   140019a72:	je     0x140019870
   140019a78:	mov    rdi,QWORD PTR [rbp+0x50]
   140019a7c:	mov    esi,DWORD PTR [rbp+0x88]
   140019a82:	mov    rbx,QWORD PTR [rbp+0x50]
   140019a86:	sub    rdi,QWORD PTR [rbp+0x48]
   140019a8a:	lea    rcx,[rbp+0x8]
   140019a8e:	sar    rdi,1
   140019a91:	call   QWORD PTR [rip+0x6989]        # 0x140020420
   140019a97:	mov    r8,QWORD PTR [rbp+0x30]
   140019a9b:	mov    rcx,QWORD PTR [rbp+0x0]
   140019a9f:	sub    r8,rbx
   140019aa2:	mov    rdx,rbx
   140019aa5:	sub    rdx,rax
   140019aa8:	sar    r8,1
   140019aab:	lea    eax,[rdi+0x3]
   140019aae:	sar    rdx,1
   140019ab1:	add    r8d,0xfffffffd
   140019ab5:	mov    r9d,esi
   140019ab8:	add    edx,0x2
   140019abb:	mov    DWORD PTR [rsp+0x20],eax
   140019abf:	call   0x140016e50
   140019ac4:	jmp    0x140019870
   140019ac9:	mov    eax,DWORD PTR [rbp+0x60]
   140019acc:	mov    DWORD PTR [rbp+0x88],eax
   140019ad2:	mov    rax,QWORD PTR [rbp+0x30]
   140019ad6:	sub    rax,0x2
   140019ada:	mov    QWORD PTR [rbp+0x50],rax
   140019ade:	mov    eax,0x3d
   140019ae3:	jmp    0x14001ad39
   140019ae8:	lea    rcx,[rsp+0xc2]
   140019af0:	mov    dl,0x3d
   140019af2:	call   QWORD PTR [rip+0x6c98]        # 0x140020790
   140019af8:	movzx  eax,WORD PTR [rax]
   140019afb:	cmp    WORD PTR [rbp+0x58],ax
   140019aff:	jne    0x140019b13
   140019b01:	mov    rcx,rbp
   140019b04:	call   0x1400185d0
   140019b09:	mov    eax,0xd
   140019b0e:	jmp    0x14001ad39
   140019b13:	mov    eax,0xc
   140019b18:	jmp    0x14001ad39
   140019b1d:	mov    eax,0x48
   140019b22:	jmp    0x14001ad39
   140019b27:	mov    eax,0x37
   140019b2c:	jmp    0x14001ad39
   140019b31:	lea    rcx,[rsp+0x7a]
   140019b36:	mov    dl,0x7c
   140019b38:	call   QWORD PTR [rip+0x6c52]        # 0x140020790
   140019b3e:	movzx  eax,WORD PTR [rax]
   140019b41:	cmp    WORD PTR [rbp+0x58],ax
   140019b45:	jne    0x140019b59
   140019b47:	mov    rcx,rbp
   140019b4a:	call   0x1400185d0
   140019b4f:	mov    eax,0x32
   140019b54:	jmp    0x14001ad39
   140019b59:	lea    rcx,[rsp+0xc6]
   140019b61:	mov    dl,0x3d
   140019b63:	call   QWORD PTR [rip+0x6c27]        # 0x140020790
   140019b69:	movzx  eax,WORD PTR [rax]
   140019b6c:	cmp    WORD PTR [rbp+0x58],ax
   140019b70:	jne    0x140019b84
   140019b72:	mov    rcx,rbp
   140019b75:	call   0x1400185d0
   140019b7a:	mov    eax,0x31
   140019b7f:	jmp    0x14001ad39
   140019b84:	mov    eax,0x30
   140019b89:	jmp    0x14001ad39
   140019b8e:	mov    eax,0x21
   140019b93:	jmp    0x14001ad39
   140019b98:	lea    rcx,[rsp+0x7e]
   140019b9d:	mov    dl,0x3d
   140019b9f:	call   QWORD PTR [rip+0x6beb]        # 0x140020790
   140019ba5:	movzx  eax,WORD PTR [rax]
   140019ba8:	cmp    WORD PTR [rbp+0x58],ax
   140019bac:	jne    0x140019bc0
   140019bae:	mov    rcx,rbp
   140019bb1:	call   0x1400185d0
   140019bb6:	mov    eax,0x50
   140019bbb:	jmp    0x14001ad39
   140019bc0:	mov    eax,0x4f
   140019bc5:	jmp    0x14001ad39
   140019bca:	mov    eax,0x38
   140019bcf:	jmp    0x14001ad39
   140019bd4:	mov    eax,0x22
   140019bd9:	jmp    0x14001ad39
   140019bde:	mov    eax,0x36
   140019be3:	jmp    0x14001ad39
   140019be8:	lea    rcx,[rsp+0xb0]
   140019bf0:	mov    dl,0x3e
   140019bf2:	call   QWORD PTR [rip+0x6b98]        # 0x140020790
   140019bf8:	movzx  eax,WORD PTR [rax]
   140019bfb:	cmp    WORD PTR [rbp+0x58],ax
   140019bff:	jne    0x140019c98
   140019c05:	mov    rcx,rbp
   140019c08:	call   0x1400185d0
   140019c0d:	lea    rcx,[rsp+0x82]
   140019c15:	mov    dl,0x3e
   140019c17:	call   QWORD PTR [rip+0x6b73]        # 0x140020790
   140019c1d:	movzx  eax,WORD PTR [rax]
   140019c20:	cmp    WORD PTR [rbp+0x58],ax
   140019c24:	jne    0x140019c63
   140019c26:	mov    rcx,rbp
   140019c29:	call   0x1400185d0
   140019c2e:	lea    rcx,[rsp+0xbc]
   140019c36:	mov    dl,0x3d
   140019c38:	call   QWORD PTR [rip+0x6b52]        # 0x140020790
   140019c3e:	movzx  eax,WORD PTR [rax]
   140019c41:	cmp    WORD PTR [rbp+0x58],ax
   140019c45:	jne    0x140019c59
   140019c47:	mov    rcx,rbp
   140019c4a:	call   0x1400185d0
   140019c4f:	mov    eax,0x1c
   140019c54:	jmp    0x14001ad39
   140019c59:	mov    eax,0x1b
   140019c5e:	jmp    0x14001ad39
   140019c63:	lea    rcx,[rsp+0x86]
   140019c6b:	mov    dl,0x3d
   140019c6d:	call   QWORD PTR [rip+0x6b1d]        # 0x140020790
   140019c73:	movzx  eax,WORD PTR [rax]
   140019c76:	cmp    WORD PTR [rbp+0x58],ax
   140019c7a:	jne    0x140019c8e
   140019c7c:	mov    rcx,rbp
   140019c7f:	call   0x1400185d0
   140019c84:	mov    eax,0x1a
   140019c89:	jmp    0x14001ad39
   140019c8e:	mov    eax,0x19
   140019c93:	jmp    0x14001ad39
   140019c98:	lea    rcx,[rsp+0xb4]
   140019ca0:	mov    dl,0x3d
   140019ca2:	call   QWORD PTR [rip+0x6ae8]        # 0x140020790
   140019ca8:	movzx  eax,WORD PTR [rax]
   140019cab:	cmp    WORD PTR [rbp+0x58],ax
   140019caf:	jne    0x140019cc3
   140019cb1:	mov    rcx,rbp
   140019cb4:	call   0x1400185d0
   140019cb9:	mov    eax,0x17
   140019cbe:	jmp    0x14001ad39
   140019cc3:	mov    eax,0x18
   140019cc8:	jmp    0x14001ad39
   140019ccd:	lea    rcx,[rsp+0x8a]
   140019cd5:	mov    dl,0x3d
   140019cd7:	call   QWORD PTR [rip+0x6ab3]        # 0x140020790
   140019cdd:	movzx  eax,WORD PTR [rax]
   140019ce0:	cmp    WORD PTR [rbp+0x58],ax
   140019ce4:	jne    0x140019d23
   140019ce6:	mov    rcx,rbp
   140019ce9:	call   0x1400185d0
   140019cee:	lea    rcx,[rsp+0xc4]
   140019cf6:	mov    dl,0x3d
   140019cf8:	call   QWORD PTR [rip+0x6a92]        # 0x140020790
   140019cfe:	movzx  eax,WORD PTR [rax]
   140019d01:	cmp    WORD PTR [rbp+0x58],ax
   140019d05:	jne    0x140019d19
   140019d07:	mov    rcx,rbp
   140019d0a:	call   0x1400185d0
   140019d0f:	mov    eax,0x13
   140019d14:	jmp    0x14001ad39
   140019d19:	mov    eax,0x12
   140019d1e:	jmp    0x14001ad39
   140019d23:	mov    eax,0x11
   140019d28:	jmp    0x14001ad39
   140019d2d:	lea    rcx,[rsp+0x8e]
   140019d35:	mov    dl,0x3d
   140019d37:	call   QWORD PTR [rip+0x6a53]        # 0x140020790
   140019d3d:	movzx  eax,WORD PTR [rax]
   140019d40:	cmp    WORD PTR [rbp+0x58],ax
   140019d44:	jne    0x140019d58
   140019d46:	mov    rcx,rbp
   140019d49:	call   0x1400185d0
   140019d4e:	mov    eax,0x23
   140019d53:	jmp    0x14001ad39
   140019d58:	lea    rcx,[rsp+0xb8]
   140019d60:	mov    dl,0x3c
   140019d62:	call   QWORD PTR [rip+0x6a28]        # 0x140020790
   140019d68:	movzx  eax,WORD PTR [rax]
   140019d6b:	cmp    WORD PTR [rbp+0x58],ax
   140019d6f:	jne    0x140019dae
   140019d71:	mov    rcx,rbp
   140019d74:	call   0x1400185d0
   140019d79:	lea    rcx,[rsp+0x92]
   140019d81:	mov    dl,0x3d
   140019d83:	call   QWORD PTR [rip+0x6a07]        # 0x140020790
   140019d89:	movzx  eax,WORD PTR [rax]
   140019d8c:	cmp    WORD PTR [rbp+0x58],ax
   140019d90:	jne    0x140019da4
   140019d92:	mov    rcx,rbp
   140019d95:	call   0x1400185d0
   140019d9a:	mov    eax,0x27
   140019d9f:	jmp    0x14001ad39
   140019da4:	mov    eax,0x26
   140019da9:	jmp    0x14001ad39
   140019dae:	mov    eax,0x25
   140019db3:	jmp    0x14001ad39
   140019db8:	mov    eax,0x7
   140019dbd:	jmp    0x14001ad39
   140019dc2:	movzx  ecx,WORD PTR [rbp+0x58]
   140019dc6:	cmp    ecx,0x39
   140019dc9:	ja     0x140019dd0
   140019dcb:	cmp    ecx,0x30
   140019dce:	jae    0x140019de8
   140019dd0:	cmp    ecx,0x7f
   140019dd3:	jbe    0x14001a134
   140019dd9:	call   QWORD PTR [rip+0x66c9]        # 0x1400204a8
   140019ddf:	cmp    eax,0x3
   140019de2:	jne    0x14001a134
   140019de8:	lea    rax,[rsp+0x50]
   140019ded:	mov    edx,0x1
   140019df2:	mov    DWORD PTR [rsp+0x40],0x20
   140019dfa:	mov    QWORD PTR [rsp+0x48],rax
   140019dff:	mov    DWORD PTR [rsp+0x44],edx
   140019e03:	mov    BYTE PTR [rsp+0x50],bl
   140019e07:	movzx  ecx,WORD PTR [rbp+0x58]
   140019e0b:	cmp    ecx,0x39
   140019e0e:	ja     0x140019e15
   140019e10:	cmp    ecx,0x30
   140019e13:	jae    0x140019e29
   140019e15:	cmp    ecx,0x7f
   140019e18:	jbe    0x140019e64
   140019e1a:	call   QWORD PTR [rip+0x6688]        # 0x1400204a8
   140019e20:	cmp    eax,0x3
   140019e23:	jne    0x140019e64
   140019e25:	mov    edx,DWORD PTR [rsp+0x44]
   140019e29:	movzx  ebx,BYTE PTR [rbp+0x58]
   140019e2d:	cmp    edx,DWORD PTR [rsp+0x40]
   140019e31:	jne    0x140019e45
   140019e33:	lea    r8d,[rdx+rdx*1]
   140019e37:	lea    rcx,[rsp+0x40]
   140019e3c:	call   0x140018470
   140019e41:	mov    edx,DWORD PTR [rsp+0x44]
   140019e45:	mov    rax,QWORD PTR [rsp+0x48]
   140019e4a:	movsxd rcx,edx
   140019e4d:	inc    edx
   140019e4f:	mov    DWORD PTR [rsp+0x44],edx
   140019e53:	mov    BYTE PTR [rcx+rax*1],bl
   140019e56:	mov    rcx,rbp
   140019e59:	call   0x1400185d0
   140019e5e:	mov    edx,DWORD PTR [rsp+0x44]
   140019e62:	jmp    0x140019e07
   140019e64:	lea    rcx,[rsp+0xac]
   140019e6c:	mov    dl,0x65
   140019e6e:	call   QWORD PTR [rip+0x691c]        # 0x140020790
   140019e74:	movzx  eax,WORD PTR [rax]
   140019e77:	cmp    WORD PTR [rbp+0x58],ax
   140019e7b:	je     0x140019e9a
   140019e7d:	lea    rcx,[rsp+0x96]
   140019e85:	mov    dl,0x45
   140019e87:	call   QWORD PTR [rip+0x6903]        # 0x140020790
   140019e8d:	movzx  eax,WORD PTR [rax]
   140019e90:	cmp    WORD PTR [rbp+0x58],ax
   140019e94:	jne    0x14001a02e
   140019e9a:	mov    rax,QWORD PTR [rbp+0x30]
   140019e9e:	movzx  ecx,WORD PTR [rax]
   140019ea1:	cmp    ecx,0x39
   140019ea4:	ja     0x140019eab
   140019ea6:	cmp    ecx,0x30
   140019ea9:	jae    0x140019f1d
   140019eab:	cmp    ecx,0x7f
   140019eae:	jbe    0x140019ebb
   140019eb0:	call   QWORD PTR [rip+0x65f2]        # 0x1400204a8
   140019eb6:	cmp    eax,0x3
   140019eb9:	je     0x140019f1d
   140019ebb:	lea    rcx,[rsp+0xae]
   140019ec3:	mov    dl,0x2b
   140019ec5:	call   QWORD PTR [rip+0x68c5]        # 0x140020790
   140019ecb:	mov    rcx,QWORD PTR [rbp+0x30]
   140019ecf:	movzx  eax,WORD PTR [rax]
   140019ed2:	cmp    WORD PTR [rcx],ax
   140019ed5:	je     0x140019ef7
   140019ed7:	lea    rcx,[rsp+0x9a]
   140019edf:	mov    dl,0x2d
   140019ee1:	call   QWORD PTR [rip+0x68a9]        # 0x140020790
   140019ee7:	mov    rcx,QWORD PTR [rbp+0x30]
   140019eeb:	movzx  eax,WORD PTR [rax]
   140019eee:	cmp    WORD PTR [rcx],ax
   140019ef1:	jne    0x14001a02e
   140019ef7:	movzx  ecx,WORD PTR [rcx+0x2]
   140019efb:	cmp    ecx,0x39
   140019efe:	ja     0x140019f05
   140019f00:	cmp    ecx,0x30
   140019f03:	jae    0x140019f1d
   140019f05:	cmp    ecx,0x7f
   140019f08:	jbe    0x14001a02e
   140019f0e:	call   QWORD PTR [rip+0x6594]        # 0x1400204a8
   140019f14:	cmp    eax,0x3
   140019f17:	jne    0x14001a02e
   140019f1d:	mov    ecx,DWORD PTR [rsp+0x44]
   140019f21:	movzx  ebx,BYTE PTR [rbp+0x58]
   140019f25:	cmp    ecx,DWORD PTR [rsp+0x40]
   140019f29:	jne    0x140019f3f
   140019f2b:	lea    r8d,[rcx+rcx*1]
   140019f2f:	mov    edx,ecx
   140019f31:	lea    rcx,[rsp+0x40]
   140019f36:	call   0x140018470
   140019f3b:	mov    ecx,DWORD PTR [rsp+0x44]
   140019f3f:	movsxd rax,ecx
   140019f42:	inc    ecx
   140019f44:	mov    DWORD PTR [rsp+0x44],ecx
   140019f48:	mov    rcx,rax
   140019f4b:	mov    rax,QWORD PTR [rsp+0x48]
   140019f50:	mov    BYTE PTR [rcx+rax*1],bl
   140019f53:	mov    rcx,rbp
   140019f56:	call   0x1400185d0
   140019f5b:	lea    rcx,[rsp+0xb2]
   140019f63:	mov    dl,0x2b
   140019f65:	call   QWORD PTR [rip+0x6825]        # 0x140020790
   140019f6b:	movzx  eax,WORD PTR [rax]
   140019f6e:	cmp    WORD PTR [rbp+0x58],ax
   140019f72:	je     0x140019f8d
   140019f74:	lea    rcx,[rsp+0x9e]
   140019f7c:	mov    dl,0x2d
   140019f7e:	call   QWORD PTR [rip+0x680c]        # 0x140020790
   140019f84:	movzx  eax,WORD PTR [rax]
   140019f87:	cmp    WORD PTR [rbp+0x58],ax
   140019f8b:	jne    0x140019fd0
   140019f8d:	mov    ecx,DWORD PTR [rsp+0x44]
   140019f91:	movzx  ebx,BYTE PTR [rbp+0x58]
   140019f95:	cmp    ecx,DWORD PTR [rsp+0x40]
   140019f99:	jne    0x140019faf
   140019f9b:	lea    r8d,[rcx+rcx*1]
   140019f9f:	mov    edx,ecx
   140019fa1:	lea    rcx,[rsp+0x40]
   140019fa6:	call   0x140018470
   140019fab:	mov    ecx,DWORD PTR [rsp+0x44]
   140019faf:	movsxd rax,ecx
   140019fb2:	inc    ecx
   140019fb4:	mov    DWORD PTR [rsp+0x44],ecx
   140019fb8:	mov    rcx,rax
   140019fbb:	mov    rax,QWORD PTR [rsp+0x48]
   140019fc0:	mov    BYTE PTR [rcx+rax*1],bl
   140019fc3:	mov    rcx,rbp
   140019fc6:	call   0x1400185d0
   140019fcb:	nop    DWORD PTR [rax+rax*1+0x0]
   140019fd0:	movzx  ecx,WORD PTR [rbp+0x58]
   140019fd4:	cmp    ecx,0x39
   140019fd7:	ja     0x140019fde
   140019fd9:	cmp    ecx,0x30
   140019fdc:	jae    0x140019fee
   140019fde:	cmp    ecx,0x7f
   140019fe1:	jbe    0x14001a02e
   140019fe3:	call   QWORD PTR [rip+0x64bf]        # 0x1400204a8
   140019fe9:	cmp    eax,0x3
   140019fec:	jne    0x14001a02e
   140019fee:	mov    ecx,DWORD PTR [rsp+0x44]
   140019ff2:	movzx  ebx,BYTE PTR [rbp+0x58]
   140019ff6:	cmp    ecx,DWORD PTR [rsp+0x40]
   140019ffa:	jne    0x14001a010
   140019ffc:	lea    r8d,[rcx+rcx*1]
   14001a000:	mov    edx,ecx
   14001a002:	lea    rcx,[rsp+0x40]
   14001a007:	call   0x140018470
   14001a00c:	mov    ecx,DWORD PTR [rsp+0x44]
   14001a010:	movsxd rax,ecx
   14001a013:	inc    ecx
   14001a015:	mov    DWORD PTR [rsp+0x44],ecx
   14001a019:	mov    rcx,rax
   14001a01c:	mov    rax,QWORD PTR [rsp+0x48]
   14001a021:	mov    BYTE PTR [rcx+rax*1],bl
   14001a024:	mov    rcx,rbp
   14001a027:	call   0x1400185d0
   14001a02c:	jmp    0x140019fd0
   14001a02e:	mov    ecx,DWORD PTR [rsp+0x44]
   14001a032:	cmp    ecx,DWORD PTR [rsp+0x40]
   14001a036:	jne    0x14001a04c
   14001a038:	lea    r8d,[rcx+rcx*1]
   14001a03c:	mov    edx,ecx
   14001a03e:	lea    rcx,[rsp+0x40]
   14001a043:	call   0x140018470
   14001a048:	mov    ecx,DWORD PTR [rsp+0x44]
   14001a04c:	movsxd rax,ecx
   14001a04f:	inc    ecx
   14001a051:	lea    r8,[rsp+0x190]
   14001a059:	mov    DWORD PTR [rsp+0x44],ecx
   14001a05d:	mov    rcx,rax
   14001a060:	mov    rax,QWORD PTR [rsp+0x48]
   14001a065:	mov    BYTE PTR [rcx+rax*1],r12b
   14001a069:	mov    rbx,QWORD PTR [rsp+0x48]
   14001a06e:	lea    rdx,[rsp+0xc8]
   14001a076:	mov    rcx,rbx
   14001a079:	mov    QWORD PTR [rsp+0xc8],r12
   14001a081:	mov    BYTE PTR [rsp+0x190],r12b
   14001a089:	call   QWORD PTR [rip+0x6439]        # 0x1400204c8
   14001a08f:	mov    eax,DWORD PTR [rsp+0x44]
   14001a093:	dec    eax
   14001a095:	movsxd rcx,eax
   14001a098:	mov    rax,QWORD PTR [rsp+0xc8]
   14001a0a0:	movsd  QWORD PTR [rbp+0x68],xmm0
   14001a0a5:	sub    rax,rbx
   14001a0a8:	cmp    rax,rcx
   14001a0ab:	je     0x14001a115
   14001a0ad:	lea    r8,[rip+0x8b14]        # 0x140022bc8
   14001a0b4:	lea    rdx,[rip+0x895d]        # 0x140022a18
   14001a0bb:	lea    rcx,[rsp+0x120]
   14001a0c3:	xor    r9d,r9d
   14001a0c6:	mov    DWORD PTR [rbp+0x5c],0x7
   14001a0cd:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14001a0d5:	call   QWORD PTR [rip+0x636d]        # 0x140020448
   14001a0db:	lea    rcx,[rbp+0x18]
   14001a0df:	mov    rdx,rax
   14001a0e2:	call   QWORD PTR [rip+0x6480]        # 0x140020568
   14001a0e8:	lea    rcx,[rsp+0x120]
   14001a0f0:	call   QWORD PTR [rip+0x668a]        # 0x140020780
   14001a0f6:	mov    rcx,QWORD PTR [rsp+0x48]
   14001a0fb:	lea    r11,[rsp+0x50]
   14001a100:	cmp    rcx,r11
   14001a103:	je     0x14001a10b
   14001a105:	call   QWORD PTR [rip+0x60dd]        # 0x1400201e8
   14001a10b:	mov    eax,0x61
   14001a110:	jmp    0x14001ad39
   14001a115:	mov    rcx,QWORD PTR [rsp+0x48]
   14001a11a:	lea    rax,[rsp+0x50]
   14001a11f:	cmp    rcx,rax
   14001a122:	je     0x14001a12a
   14001a124:	call   QWORD PTR [rip+0x60be]        # 0x1400201e8
   14001a12a:	mov    eax,0x2f
   14001a12f:	jmp    0x14001ad39
   14001a134:	mov    eax,0xf
   14001a139:	jmp    0x14001ad39
   14001a13e:	lea    rcx,[rsp+0xb6]
   14001a146:	mov    dl,0x3d
   14001a148:	call   QWORD PTR [rip+0x6642]        # 0x140020790
   14001a14e:	movzx  eax,WORD PTR [rax]
   14001a151:	cmp    WORD PTR [rbp+0x58],ax
   14001a155:	jne    0x14001a169
   14001a157:	mov    rcx,rbp
   14001a15a:	call   0x1400185d0
   14001a15f:	mov    eax,0x29
   14001a164:	jmp    0x14001ad39
   14001a169:	lea    rcx,[rsp+0x70]
   14001a16e:	mov    dl,0x2d
   14001a170:	call   QWORD PTR [rip+0x661a]        # 0x140020790
   14001a176:	movzx  eax,WORD PTR [rax]
   14001a179:	cmp    WORD PTR [rbp+0x58],ax
   14001a17d:	jne    0x14001a1bd
   14001a17f:	mov    rcx,rbp
   14001a182:	call   0x1400185d0
   14001a187:	cmp    BYTE PTR [rbp+0x8f],r12b
   14001a18e:	je     0x14001a1b3
   14001a190:	cmp    BYTE PTR [rbp+0x91],r12b
   14001a197:	jne    0x14001a1b3
   14001a199:	cmp    BYTE PTR [rbp+0x8d],r12b
   14001a1a0:	jne    0x14001a1b3
   14001a1a2:	mov    DWORD PTR [rbp+0x78],0x2a
   14001a1a9:	mov    eax,0x3d
   14001a1ae:	jmp    0x14001ad39
   14001a1b3:	mov    eax,0x2a
   14001a1b8:	jmp    0x14001ad39
   14001a1bd:	mov    eax,0x28
   14001a1c2:	jmp    0x14001ad39
   14001a1c7:	mov    eax,0x8
   14001a1cc:	jmp    0x14001ad39
   14001a1d1:	lea    rcx,[rsp+0xba]
   14001a1d9:	mov    dl,0x3d
   14001a1db:	call   QWORD PTR [rip+0x65af]        # 0x140020790
   14001a1e1:	movzx  eax,WORD PTR [rax]
   14001a1e4:	cmp    WORD PTR [rbp+0x58],ax
   14001a1e8:	jne    0x14001a1fc
   14001a1ea:	mov    rcx,rbp
   14001a1ed:	call   0x1400185d0
   14001a1f2:	mov    eax,0x34
   14001a1f7:	jmp    0x14001ad39
   14001a1fc:	lea    rcx,[rsp+0xa6]
   14001a204:	mov    dl,0x2b
   14001a206:	call   QWORD PTR [rip+0x6584]        # 0x140020790
   14001a20c:	movzx  eax,WORD PTR [rax]
   14001a20f:	cmp    WORD PTR [rbp+0x58],ax
   14001a213:	jne    0x14001a253
   14001a215:	mov    rcx,rbp
   14001a218:	call   0x1400185d0
   14001a21d:	cmp    BYTE PTR [rbp+0x8f],r12b
   14001a224:	je     0x14001a249
   14001a226:	cmp    BYTE PTR [rbp+0x91],r12b
   14001a22d:	jne    0x14001a249
   14001a22f:	cmp    BYTE PTR [rbp+0x8d],r12b
   14001a236:	jne    0x14001a249
   14001a238:	mov    DWORD PTR [rbp+0x78],0x35
   14001a23f:	mov    eax,0x3d
   14001a244:	jmp    0x14001ad39
   14001a249:	mov    eax,0x35
   14001a24e:	jmp    0x14001ad39
   14001a253:	mov    eax,0x33
   14001a258:	jmp    0x14001ad39
   14001a25d:	lea    rcx,[rsp+0xbe]
   14001a265:	mov    dl,0x3d
   14001a267:	call   QWORD PTR [rip+0x6523]        # 0x140020790
   14001a26d:	movzx  eax,WORD PTR [rax]
   14001a270:	cmp    WORD PTR [rbp+0x58],ax
   14001a274:	jne    0x14001a288
   14001a276:	mov    rcx,rbp
   14001a279:	call   0x1400185d0
   14001a27e:	mov    eax,0x40
   14001a283:	jmp    0x14001ad39
   14001a288:	mov    eax,0x3f
   14001a28d:	jmp    0x14001ad39
   14001a292:	mov    eax,0x3c
   14001a297:	jmp    0x14001ad39
   14001a29c:	mov    eax,0x24
   14001a2a1:	jmp    0x14001ad39
   14001a2a6:	lea    rcx,[rsp+0x72]
   14001a2ab:	mov    dl,0x3d
   14001a2ad:	call   QWORD PTR [rip+0x64dd]        # 0x140020790
   14001a2b3:	movzx  eax,WORD PTR [rax]
   14001a2b6:	cmp    WORD PTR [rbp+0x58],ax
   14001a2ba:	jne    0x14001a2ce
   14001a2bc:	mov    rcx,rbp
   14001a2bf:	call   0x1400185d0
   14001a2c4:	mov    eax,0x3
   14001a2c9:	jmp    0x14001ad39
   14001a2ce:	lea    rcx,[rsp+0x74]
   14001a2d3:	mov    dl,0x26
   14001a2d5:	call   QWORD PTR [rip+0x64b5]        # 0x140020790
   14001a2db:	movzx  eax,WORD PTR [rax]
   14001a2de:	cmp    WORD PTR [rbp+0x58],ax
   14001a2e2:	jne    0x14001a2f6
   14001a2e4:	mov    rcx,rbp
   14001a2e7:	call   0x1400185d0
   14001a2ec:	mov    eax,0x2
   14001a2f1:	jmp    0x14001ad39
   14001a2f6:	mov    eax,0x1
   14001a2fb:	jmp    0x14001ad39
   14001a300:	lea    rcx,[rsp+0x78]
   14001a305:	mov    dl,0x3d
   14001a307:	call   QWORD PTR [rip+0x6483]        # 0x140020790
   14001a30d:	movzx  eax,WORD PTR [rax]
   14001a310:	cmp    WORD PTR [rbp+0x58],ax
   14001a314:	jne    0x14001a328
   14001a316:	mov    rcx,rbp
   14001a319:	call   0x1400185d0
   14001a31e:	mov    eax,0x3a
   14001a323:	jmp    0x14001ad39
   14001a328:	mov    eax,0x39
   14001a32d:	jmp    0x14001ad39
   14001a332:	lea    rcx,[rsp+0x7c]
   14001a337:	mov    dl,0x3d
   14001a339:	call   QWORD PTR [rip+0x6451]        # 0x140020790
   14001a33f:	movzx  eax,WORD PTR [rax]
   14001a342:	cmp    WORD PTR [rbp+0x58],ax
   14001a346:	jne    0x14001a385
   14001a348:	mov    rcx,rbp
   14001a34b:	call   0x1400185d0
   14001a350:	lea    rcx,[rsp+0x80]
   14001a358:	mov    dl,0x3d
   14001a35a:	call   QWORD PTR [rip+0x6430]        # 0x140020790
   14001a360:	movzx  eax,WORD PTR [rax]
   14001a363:	cmp    WORD PTR [rbp+0x58],ax
   14001a367:	jne    0x14001a37b
   14001a369:	mov    rcx,rbp
   14001a36c:	call   0x1400185d0
   14001a371:	mov    eax,0x2e
   14001a376:	jmp    0x14001ad39
   14001a37b:	mov    eax,0x2d
   14001a380:	jmp    0x14001ad39
   14001a385:	mov    eax,0x2c
   14001a38a:	jmp    0x14001ad39
   14001a38f:	cmp    QWORD PTR [rbp+0x0],0x0
   14001a394:	mov    rdi,QWORD PTR [rbp+0x30]
   14001a398:	je     0x14001a3e4
   14001a39a:	cmp    rdi,QWORD PTR [rbp+0x38]
   14001a39e:	ja     0x14001a3e4
   14001a3a0:	mov    rcx,rbp
   14001a3a3:	call   0x140018240
   14001a3a8:	test   al,al
   14001a3aa:	jne    0x14001a4ef
   14001a3b0:	lea    rcx,[rsp+0x84]
   14001a3b8:	mov    dl,0x5c
   14001a3ba:	call   QWORD PTR [rip+0x63d0]        # 0x140020790
   14001a3c0:	mov    cx,WORD PTR [rbp+0x58]
   14001a3c4:	cmp    cx,WORD PTR [rax]
   14001a3c7:	je     0x14001a3e4
   14001a3c9:	cmp    cx,bx
   14001a3cc:	je     0x14001a486
   14001a3d2:	mov    rcx,rbp
   14001a3d5:	call   0x1400185d0
   14001a3da:	mov    r11,QWORD PTR [rbp+0x38]
   14001a3de:	cmp    QWORD PTR [rbp+0x30],r11
   14001a3e2:	jbe    0x14001a3a0
   14001a3e4:	lea    rcx,[rbp+0x10]
   14001a3e8:	xor    edx,edx
   14001a3ea:	mov    BYTE PTR [rbp+0x8c],0x1
   14001a3f1:	call   QWORD PTR [rip+0x60c9]        # 0x1400204c0
   14001a3f7:	mov    rax,QWORD PTR [rbp+0x30]
   14001a3fb:	sub    rdi,0x2
   14001a3ff:	sub    rax,0x2
   14001a403:	cmp    rdi,rax
   14001a406:	je     0x14001a42e
   14001a408:	nop    DWORD PTR [rax+rax*1+0x0]
   14001a410:	movzx  edx,WORD PTR [rdi]
   14001a413:	lea    rcx,[rbp+0x10]
   14001a417:	call   QWORD PTR [rip+0x60fb]        # 0x140020518
   14001a41d:	mov    rax,QWORD PTR [rbp+0x30]
   14001a421:	add    rdi,0x2
   14001a425:	sub    rax,0x2
   14001a429:	cmp    rdi,rax
   14001a42c:	jne    0x14001a410
   14001a42e:	mov    rax,QWORD PTR [rbp+0x38]
   14001a432:	cmp    QWORD PTR [rbp+0x30],rax
   14001a436:	ja     0x14001a8fd
   14001a43c:	nop    DWORD PTR [rax+0x0]
   14001a440:	mov    rcx,rbp
   14001a443:	call   0x140018270
   14001a448:	mov    edi,eax
   14001a44a:	test   eax,eax
   14001a44c:	je     0x14001a550
   14001a452:	movzx  edx,WORD PTR [rbp+0x58]
   14001a456:	lea    rcx,[rbp+0x10]
   14001a45a:	mov    r12b,0x1
   14001a45d:	call   QWORD PTR [rip+0x60b5]        # 0x140020518
   14001a463:	cmp    edi,0x2
   14001a466:	jne    0x14001a479
   14001a468:	mov    rax,QWORD PTR [rbp+0x30]
   14001a46c:	lea    rcx,[rbp+0x10]
   14001a470:	movzx  edx,WORD PTR [rax]
   14001a473:	call   QWORD PTR [rip+0x609f]        # 0x140020518
   14001a479:	mov    rcx,rbp
   14001a47c:	call   0x1400185d0
   14001a481:	jmp    0x14001a8ef
   14001a486:	mov    rbx,QWORD PTR [rbp+0x30]
   14001a48a:	lea    rcx,[rbp+0x8]
   14001a48e:	sub    rbx,rdi
   14001a491:	sar    rbx,1
   14001a494:	call   QWORD PTR [rip+0x5f86]        # 0x140020420
   14001a49a:	mov    rcx,QWORD PTR [rbp+0x0]
   14001a49e:	sub    rdi,rax
   14001a4a1:	lea    rdx,[rsp+0xe8]
   14001a4a9:	mov    r9d,ebx
   14001a4ac:	sar    rdi,1
   14001a4af:	add    rcx,0x48
   14001a4b3:	lea    r8d,[rdi-0x1]
   14001a4b7:	call   QWORD PTR [rip+0x5fcb]        # 0x140020488
   14001a4bd:	mov    rax,QWORD PTR [rsp+0xe8]
   14001a4c5:	mov    rcx,rbp
   14001a4c8:	mov    QWORD PTR [rbp+0x20],rax
   14001a4cc:	mov    eax,DWORD PTR [rsp+0xf0]
   14001a4d3:	mov    DWORD PTR [rbp+0x28],eax
   14001a4d6:	mov    eax,DWORD PTR [rsp+0xf4]
   14001a4dd:	mov    DWORD PTR [rbp+0x2c],eax
   14001a4e0:	call   0x1400185d0
   14001a4e5:	mov    eax,0x41
   14001a4ea:	jmp    0x14001ad39
   14001a4ef:	cmp    BYTE PTR [rbp+0x92],0x0
   14001a4f6:	jne    0x14001a3e4
   14001a4fc:	mov    edx,0x1
   14001a501:	lea    r8,[rip+0x87d8]        # 0x140022ce0
   14001a508:	lea    rcx,[rsp+0x110]
   14001a510:	mov    DWORD PTR [rbp+0x5c],edx
   14001a513:	lea    rdx,[rip+0x84fe]        # 0x140022a18
   14001a51a:	xor    r9d,r9d
   14001a51d:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14001a525:	call   QWORD PTR [rip+0x5f1d]        # 0x140020448
   14001a52b:	lea    rcx,[rbp+0x18]
   14001a52f:	mov    rdx,rax
   14001a532:	call   QWORD PTR [rip+0x6030]        # 0x140020568
   14001a538:	lea    rcx,[rsp+0x110]
   14001a540:	call   QWORD PTR [rip+0x623a]        # 0x140020780
   14001a546:	mov    eax,0x61
   14001a54b:	jmp    0x14001ad39
   14001a550:	cmp    WORD PTR [rbp+0x58],bx
   14001a554:	je     0x14001a9a3
   14001a55a:	lea    rcx,[rsp+0x88]
   14001a562:	mov    dl,0x5c
   14001a564:	call   QWORD PTR [rip+0x6226]        # 0x140020790
   14001a56a:	movzx  eax,WORD PTR [rax]
   14001a56d:	cmp    WORD PTR [rbp+0x58],ax
   14001a571:	jne    0x14001a8d9
   14001a577:	mov    rcx,rbp
   14001a57a:	call   0x1400185d0
   14001a57f:	movzx  edi,WORD PTR [rbp+0x58]
   14001a583:	cmp    edi,0x2029
   14001a589:	mov    eax,edi
   14001a58b:	jg     0x14001a8c2
   14001a591:	cmp    eax,0x2028
   14001a596:	jge    0x14001a8b8
   14001a59c:	sub    eax,0xa
   14001a59f:	cmp    eax,0x6e
   14001a5a2:	ja     0x14001a8c2
   14001a5a8:	cdqe   
   14001a5aa:	movzx  eax,BYTE PTR [r13+rax*1+0x1ae74]
   14001a5b3:	mov    ecx,DWORD PTR [r13+rax*4+0x1ae38]
   14001a5bb:	add    rcx,r13
   14001a5be:	jmp    rcx
   14001a5c0:	lea    r8,[rsp+0x190]
   14001a5c8:	lea    rdx,[rsp+0x8c]
   14001a5d0:	mov    rcx,rbp
   14001a5d3:	mov    BYTE PTR [rsp+0x190],0x0
   14001a5db:	call   0x140018690
   14001a5e0:	cmp    BYTE PTR [rsp+0x190],0x0
   14001a5e8:	mov    di,WORD PTR [rax]
   14001a5eb:	jne    0x14001a8ca
   14001a5f1:	lea    r8,[rip+0x86c8]        # 0x140022cc0
   14001a5f8:	lea    rdx,[rip+0x8419]        # 0x140022a18
   14001a5ff:	lea    rcx,[rsp+0xe0]
   14001a607:	xor    r9d,r9d
   14001a60a:	mov    DWORD PTR [rbp+0x5c],0x5
   14001a611:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14001a619:	call   QWORD PTR [rip+0x5e29]        # 0x140020448
   14001a61f:	lea    rcx,[rbp+0x18]
   14001a623:	mov    rdx,rax
   14001a626:	call   QWORD PTR [rip+0x5f3c]        # 0x140020568
   14001a62c:	lea    rcx,[rsp+0xe0]
   14001a634:	call   QWORD PTR [rip+0x6146]        # 0x140020780
   14001a63a:	mov    eax,0x61
   14001a63f:	jmp    0x14001ad39
   14001a644:	lea    r8,[rsp+0x190]
   14001a64c:	lea    rdx,[rsp+0x90]
   14001a654:	mov    rcx,rbp
   14001a657:	mov    BYTE PTR [rsp+0x190],0x0
   14001a65f:	call   0x1400187b0
   14001a664:	cmp    BYTE PTR [rsp+0x190],0x0
   14001a66c:	mov    di,WORD PTR [rax]
   14001a66f:	jne    0x14001a8ca
   14001a675:	lea    r8,[rip+0x861c]        # 0x140022c98
   14001a67c:	lea    rdx,[rip+0x8395]        # 0x140022a18
   14001a683:	lea    rcx,[rsp+0x118]
   14001a68b:	xor    r9d,r9d
   14001a68e:	mov    DWORD PTR [rbp+0x5c],0x9
   14001a695:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14001a69d:	call   QWORD PTR [rip+0x5da5]        # 0x140020448
   14001a6a3:	lea    rcx,[rbp+0x18]
   14001a6a7:	mov    rdx,rax
   14001a6aa:	call   QWORD PTR [rip+0x5eb8]        # 0x140020568
   14001a6b0:	lea    rcx,[rsp+0x118]
   14001a6b8:	call   QWORD PTR [rip+0x60c2]        # 0x140020780
   14001a6be:	mov    eax,0x61
   14001a6c3:	jmp    0x14001ad39
   14001a6c8:	lea    rcx,[rsp+0x198]
   14001a6d0:	mov    dl,0x5c
   14001a6d2:	call   QWORD PTR [rip+0x60b8]        # 0x140020790
   14001a6d8:	mov    di,WORD PTR [rsp+0x198]
   14001a6e0:	mov    rcx,rbp
   14001a6e3:	call   0x1400185d0
   14001a6e8:	lea    rcx,[rbp+0x10]
   14001a6ec:	movzx  edx,di
   14001a6ef:	call   QWORD PTR [rip+0x5e23]        # 0x140020518
   14001a6f5:	jmp    0x14001a8ef
   14001a6fa:	lea    rcx,[rsp+0x1a0]
   14001a702:	mov    dl,0x27
   14001a704:	call   QWORD PTR [rip+0x6086]        # 0x140020790
   14001a70a:	mov    di,WORD PTR [rsp+0x1a0]
   14001a712:	mov    rcx,rbp
   14001a715:	call   0x1400185d0
   14001a71a:	lea    rcx,[rbp+0x10]
   14001a71e:	mov    dx,di
   14001a721:	call   QWORD PTR [rip+0x5df1]        # 0x140020518
   14001a727:	jmp    0x14001a8ef
   14001a72c:	lea    rcx,[rsp+0x1a8]
   14001a734:	mov    dl,0x22
   14001a736:	call   QWORD PTR [rip+0x6054]        # 0x140020790
   14001a73c:	mov    di,WORD PTR [rsp+0x1a8]
   14001a744:	mov    rcx,rbp
   14001a747:	call   0x1400185d0
   14001a74c:	lea    rcx,[rbp+0x10]
   14001a750:	mov    dx,di
   14001a753:	call   QWORD PTR [rip+0x5dbf]        # 0x140020518
   14001a759:	jmp    0x14001a8ef
   14001a75e:	lea    rcx,[rsp+0x3a]
   14001a763:	mov    dl,0x8
   14001a765:	call   QWORD PTR [rip+0x6025]        # 0x140020790
   14001a76b:	mov    di,WORD PTR [rsp+0x3a]
   14001a770:	mov    rcx,rbp
   14001a773:	call   0x1400185d0
   14001a778:	lea    rcx,[rbp+0x10]
   14001a77c:	mov    dx,di
   14001a77f:	call   QWORD PTR [rip+0x5d93]        # 0x140020518
   14001a785:	jmp    0x14001a8ef
   14001a78a:	lea    rcx,[rsp+0x34]
   14001a78f:	mov    dl,0xc
   14001a791:	call   QWORD PTR [rip+0x5ff9]        # 0x140020790
   14001a797:	mov    di,WORD PTR [rsp+0x34]
   14001a79c:	mov    rcx,rbp
   14001a79f:	call   0x1400185d0
   14001a7a4:	lea    rcx,[rbp+0x10]
   14001a7a8:	mov    dx,di
   14001a7ab:	call   QWORD PTR [rip+0x5d67]        # 0x140020518
   14001a7b1:	jmp    0x14001a8ef
   14001a7b6:	lea    rcx,[rsp+0x38]
   14001a7bb:	mov    dl,0xa
   14001a7bd:	call   QWORD PTR [rip+0x5fcd]        # 0x140020790
   14001a7c3:	mov    di,WORD PTR [rsp+0x38]
   14001a7c8:	mov    rcx,rbp
   14001a7cb:	call   0x1400185d0
   14001a7d0:	lea    rcx,[rbp+0x10]
   14001a7d4:	mov    dx,di
   14001a7d7:	call   QWORD PTR [rip+0x5d3b]        # 0x140020518
   14001a7dd:	jmp    0x14001a8ef
   14001a7e2:	lea    rcx,[rsp+0x30]
   14001a7e7:	mov    dl,0xd
   14001a7e9:	call   QWORD PTR [rip+0x5fa1]        # 0x140020790
   14001a7ef:	mov    di,WORD PTR [rsp+0x30]
   14001a7f4:	mov    rcx,rbp
   14001a7f7:	call   0x1400185d0
   14001a7fc:	lea    rcx,[rbp+0x10]
   14001a800:	mov    dx,di
   14001a803:	call   QWORD PTR [rip+0x5d0f]        # 0x140020518
   14001a809:	jmp    0x14001a8ef
   14001a80e:	lea    rcx,[rsp+0x32]
   14001a813:	mov    dl,0x9
   14001a815:	call   QWORD PTR [rip+0x5f75]        # 0x140020790
   14001a81b:	mov    di,WORD PTR [rsp+0x32]
   14001a820:	mov    rcx,rbp
   14001a823:	call   0x1400185d0
   14001a828:	lea    rcx,[rbp+0x10]
   14001a82c:	mov    dx,di
   14001a82f:	call   QWORD PTR [rip+0x5ce3]        # 0x140020518
   14001a835:	jmp    0x14001a8ef
   14001a83a:	lea    rcx,[rsp+0x36]
   14001a83f:	mov    dl,0xb
   14001a841:	call   QWORD PTR [rip+0x5f49]        # 0x140020790
   14001a847:	mov    di,WORD PTR [rsp+0x36]
   14001a84c:	mov    rcx,rbp
   14001a84f:	call   0x1400185d0
   14001a854:	lea    rcx,[rbp+0x10]
   14001a858:	mov    dx,di
   14001a85b:	call   QWORD PTR [rip+0x5cb7]        # 0x140020518
   14001a861:	jmp    0x14001a8ef
   14001a866:	mov    rax,QWORD PTR [rbp+0x30]
   14001a86a:	movzx  ecx,WORD PTR [rax]
   14001a86d:	cmp    ecx,0x39
   14001a870:	ja     0x14001a87b
   14001a872:	cmp    ecx,0x30
   14001a875:	jae    0x14001a950
   14001a87b:	cmp    ecx,0x7f
   14001a87e:	jbe    0x14001a88f
   14001a880:	call   QWORD PTR [rip+0x5c22]        # 0x1400204a8
   14001a886:	cmp    eax,0x3
   14001a889:	je     0x14001a950
   14001a88f:	mov    rcx,rbp
   14001a892:	call   0x1400185d0
   14001a897:	lea    rcx,[rsp+0x3c]
   14001a89c:	xor    edx,edx
   14001a89e:	call   QWORD PTR [rip+0x5eec]        # 0x140020790
   14001a8a4:	mov    di,WORD PTR [rsp+0x3c]
   14001a8a9:	lea    rcx,[rbp+0x10]
   14001a8ad:	mov    dx,di
   14001a8b0:	call   QWORD PTR [rip+0x5c62]        # 0x140020518
   14001a8b6:	jmp    0x14001a8ef
   14001a8b8:	mov    rcx,rbp
   14001a8bb:	call   0x1400185d0
   14001a8c0:	jmp    0x14001a8ef
   14001a8c2:	mov    rcx,rbp
   14001a8c5:	call   0x1400185d0
   14001a8ca:	lea    rcx,[rbp+0x10]
   14001a8ce:	mov    dx,di
   14001a8d1:	call   QWORD PTR [rip+0x5c41]        # 0x140020518
   14001a8d7:	jmp    0x14001a8ef
   14001a8d9:	movzx  edx,WORD PTR [rbp+0x58]
   14001a8dd:	lea    rcx,[rbp+0x10]
   14001a8e1:	call   QWORD PTR [rip+0x5c31]        # 0x140020518
   14001a8e7:	mov    rcx,rbp
   14001a8ea:	call   0x1400185d0
   14001a8ef:	mov    rax,QWORD PTR [rbp+0x38]
   14001a8f3:	cmp    QWORD PTR [rbp+0x30],rax
   14001a8f7:	jbe    0x14001a440
   14001a8fd:	lea    r8,[rip+0x8374]        # 0x140022c78
   14001a904:	lea    rdx,[rip+0x810d]        # 0x140022a18
   14001a90b:	lea    rcx,[rsp+0x128]
   14001a913:	xor    r9d,r9d
   14001a916:	mov    DWORD PTR [rbp+0x5c],0x3
   14001a91d:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14001a925:	call   QWORD PTR [rip+0x5b1d]        # 0x140020448
   14001a92b:	lea    rcx,[rbp+0x18]
   14001a92f:	mov    rdx,rax
   14001a932:	call   QWORD PTR [rip+0x5c30]        # 0x140020568
   14001a938:	lea    rcx,[rsp+0x128]
   14001a940:	call   QWORD PTR [rip+0x5e3a]        # 0x140020780
   14001a946:	mov    eax,0x61
   14001a94b:	jmp    0x14001ad39
   14001a950:	lea    r8,[rip+0x82f9]        # 0x140022c50
   14001a957:	lea    rdx,[rip+0x80ba]        # 0x140022a18
   14001a95e:	lea    rcx,[rsp+0xf8]
   14001a966:	xor    r9d,r9d
   14001a969:	mov    DWORD PTR [rbp+0x5c],0x4
   14001a970:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14001a978:	call   QWORD PTR [rip+0x5aca]        # 0x140020448
   14001a97e:	lea    rcx,[rbp+0x18]
   14001a982:	mov    rdx,rax
   14001a985:	call   QWORD PTR [rip+0x5bdd]        # 0x140020568
   14001a98b:	lea    rcx,[rsp+0xf8]
   14001a993:	call   QWORD PTR [rip+0x5de7]        # 0x140020780
   14001a999:	mov    eax,0x61
   14001a99e:	jmp    0x14001ad39
   14001a9a3:	mov    rcx,rbp
   14001a9a6:	call   0x1400185d0
   14001a9ab:	mov    rcx,QWORD PTR [rbp+0x0]
   14001a9af:	test   rcx,rcx
   14001a9b2:	je     0x14001a9d8
   14001a9b4:	lea    r8,[rbp+0x10]
   14001a9b8:	lea    rdx,[rsp+0x130]
   14001a9c0:	call   0x140016b40
   14001a9c5:	mov    rcx,QWORD PTR [rax]
   14001a9c8:	mov    QWORD PTR [rbp+0x20],rcx
   14001a9cc:	mov    ecx,DWORD PTR [rax+0x8]
   14001a9cf:	mov    DWORD PTR [rbp+0x28],ecx
   14001a9d2:	mov    eax,DWORD PTR [rax+0xc]
   14001a9d5:	mov    DWORD PTR [rbp+0x2c],eax
   14001a9d8:	mov    eax,0x41
   14001a9dd:	mov    ecx,0x57
   14001a9e2:	test   r12b,r12b
   14001a9e5:	cmovne eax,ecx
   14001a9e8:	jmp    0x14001ad39
   14001a9ed:	movzx  edx,bx
   14001a9f0:	mov    rcx,rbp
   14001a9f3:	call   0x140018c80
   14001a9f8:	jmp    0x14001ad39
   14001a9fd:	lea    rcx,[rsp+0x94]
   14001aa05:	mov    dl,0x5c
   14001aa07:	xor    sil,sil
   14001aa0a:	call   QWORD PTR [rip+0x5d80]        # 0x140020790
   14001aa10:	cmp    bx,WORD PTR [rax]
   14001aa13:	jne    0x14001aab9
   14001aa19:	lea    rcx,[rsp+0x98]
   14001aa21:	mov    dl,0x75
   14001aa23:	call   QWORD PTR [rip+0x5d67]        # 0x140020790
   14001aa29:	movzx  eax,WORD PTR [rax]
   14001aa2c:	cmp    WORD PTR [rbp+0x58],ax
   14001aa30:	jne    0x14001aab9
   14001aa36:	lea    r8,[rsp+0x190]
   14001aa3e:	lea    rdx,[rsp+0x9c]
   14001aa46:	mov    rcx,rbp
   14001aa49:	mov    sil,0x1
   14001aa4c:	mov    BYTE PTR [rsp+0x190],r12b
   14001aa54:	call   0x140018690
   14001aa59:	movzx  ebx,WORD PTR [rax]
   14001aa5c:	cmp    BYTE PTR [rsp+0x190],r12b
   14001aa64:	jne    0x14001aab9
   14001aa66:	lea    r8,[rip+0x8253]        # 0x140022cc0
   14001aa6d:	lea    rdx,[rip+0x7fa4]        # 0x140022a18
   14001aa74:	lea    rcx,[rsp+0xd0]
   14001aa7c:	xor    r9d,r9d
   14001aa7f:	mov    DWORD PTR [rbp+0x5c],0x5
   14001aa86:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14001aa8e:	call   QWORD PTR [rip+0x59b4]        # 0x140020448
   14001aa94:	lea    rcx,[rbp+0x18]
   14001aa98:	mov    rdx,rax
   14001aa9b:	call   QWORD PTR [rip+0x5ac7]        # 0x140020568
   14001aaa1:	lea    rcx,[rsp+0xd0]
   14001aaa9:	call   QWORD PTR [rip+0x5cd1]        # 0x140020780
   14001aaaf:	mov    eax,0x61
   14001aab4:	jmp    0x14001ad39
   14001aab9:	cmp    bx,0x61
   14001aabd:	jb     0x14001aac5
   14001aabf:	cmp    bx,0x7a
   14001aac3:	jbe    0x14001aafd
   14001aac5:	cmp    bx,0x41
   14001aac9:	jb     0x14001aad1
   14001aacb:	cmp    bx,0x5a
   14001aacf:	jbe    0x14001aafd
   14001aad1:	cmp    bx,0x24
   14001aad5:	je     0x14001aafd
   14001aad7:	cmp    bx,0x5f
   14001aadb:	je     0x14001aafd
   14001aadd:	movzx  ecx,bx
   14001aae0:	call   QWORD PTR [rip+0x59c2]        # 0x1400204a8
   14001aae6:	cmp    eax,0x4
   14001aae9:	je     0x14001aafd
   14001aaeb:	cmp    eax,0xd
   14001aaee:	jle    0x14001ac68
   14001aaf4:	cmp    eax,0x12
   14001aaf7:	jg     0x14001ac68
   14001aafd:	test   sil,sil
   14001ab00:	je     0x14001ab22
   14001ab02:	lea    rcx,[rbp+0x10]
   14001ab06:	xor    edx,edx
   14001ab08:	call   QWORD PTR [rip+0x59b2]        # 0x1400204c0
   14001ab0e:	lea    rcx,[rbp+0x10]
   14001ab12:	movzx  edx,bx
   14001ab15:	call   QWORD PTR [rip+0x59fd]        # 0x140020518
   14001ab1b:	mov    BYTE PTR [rbp+0x8c],0x1
   14001ab22:	movzx  ebx,WORD PTR [rbp+0x58]
   14001ab26:	lea    rcx,[rsp+0xa0]
   14001ab2e:	mov    dl,0x5c
   14001ab30:	call   QWORD PTR [rip+0x5c5a]        # 0x140020790
   14001ab36:	movzx  eax,WORD PTR [rax]
   14001ab39:	cmp    WORD PTR [rbp+0x58],ax
   14001ab3d:	jne    0x14001abf4
   14001ab43:	lea    rcx,[rsp+0xa4]
   14001ab4b:	mov    dl,0x75
   14001ab4d:	call   QWORD PTR [rip+0x5c3d]        # 0x140020790
   14001ab53:	mov    rcx,QWORD PTR [rbp+0x30]
   14001ab57:	movzx  eax,WORD PTR [rax]
   14001ab5a:	cmp    WORD PTR [rcx],ax
   14001ab5d:	jne    0x14001abf4
   14001ab63:	test   sil,sil
   14001ab66:	jne    0x14001ab9d
   14001ab68:	lea    rbx,[rbp+0x10]
   14001ab6c:	xor    edx,edx
   14001ab6e:	mov    sil,0x1
   14001ab71:	mov    rcx,rbx
   14001ab74:	call   QWORD PTR [rip+0x5946]        # 0x1400204c0
   14001ab7a:	mov    r8,QWORD PTR [rbp+0x50]
   14001ab7e:	mov    r9,QWORD PTR [rbp+0x30]
   14001ab82:	sub    r9,r8
   14001ab85:	xor    edx,edx
   14001ab87:	mov    rcx,rbx
   14001ab8a:	sar    r9,1
   14001ab8d:	dec    r9d
   14001ab90:	call   QWORD PTR [rip+0x593a]        # 0x1400204d0
   14001ab96:	mov    BYTE PTR [rbp+0x8c],sil
   14001ab9d:	mov    rcx,rbp
   14001aba0:	call   0x1400185d0
   14001aba5:	lea    r8,[rsp+0x190]
   14001abad:	lea    rdx,[rsp+0xa8]
   14001abb5:	mov    rcx,rbp
   14001abb8:	mov    BYTE PTR [rsp+0x190],r12b
   14001abc0:	call   0x140018690
   14001abc5:	movzx  ebx,WORD PTR [rax]
   14001abc8:	cmp    BYTE PTR [rsp+0x190],r12b
   14001abd0:	je     0x14001ac1f
   14001abd2:	movzx  ecx,bx
   14001abd5:	call   0x1400181a0
   14001abda:	test   al,al
   14001abdc:	je     0x14001ab22
   14001abe2:	lea    rcx,[rbp+0x10]
   14001abe6:	movzx  edx,bx
   14001abe9:	call   QWORD PTR [rip+0x5929]        # 0x140020518
   14001abef:	jmp    0x14001ab22
   14001abf4:	movzx  ecx,bx
   14001abf7:	call   0x1400181a0
   14001abfc:	test   al,al
   14001abfe:	je     0x14001ac72
   14001ac00:	test   sil,sil
   14001ac03:	je     0x14001ac12
   14001ac05:	lea    rcx,[rbp+0x10]
   14001ac09:	movzx  edx,bx
   14001ac0c:	call   QWORD PTR [rip+0x5906]        # 0x140020518
   14001ac12:	mov    rcx,rbp
   14001ac15:	call   0x1400185d0
   14001ac1a:	jmp    0x14001ab22
   14001ac1f:	lea    r8,[rip+0x809a]        # 0x140022cc0
   14001ac26:	lea    rdx,[rip+0x7deb]        # 0x140022a18
   14001ac2d:	lea    rcx,[rsp+0xd8]
   14001ac35:	xor    r9d,r9d
   14001ac38:	mov    DWORD PTR [rbp+0x5c],0x5
   14001ac3f:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14001ac47:	call   QWORD PTR [rip+0x57fb]        # 0x140020448
   14001ac4d:	lea    rcx,[rbp+0x18]
   14001ac51:	mov    rdx,rax
   14001ac54:	call   QWORD PTR [rip+0x590e]        # 0x140020568
   14001ac5a:	lea    rcx,[rsp+0xd8]
   14001ac62:	call   QWORD PTR [rip+0x5b18]        # 0x140020780
   14001ac68:	mov    eax,0x61
   14001ac6d:	jmp    0x14001ad39
   14001ac72:	mov    rdx,QWORD PTR [rbp+0x50]
   14001ac76:	mov    rdi,QWORD PTR [rbp+0x30]
   14001ac7a:	mov    ebx,0x1d
   14001ac7f:	sub    rdi,rdx
   14001ac82:	sar    rdi,1
   14001ac85:	dec    edi
   14001ac87:	mov    DWORD PTR [rbp+0x84],edi
   14001ac8d:	test   sil,sil
   14001ac90:	jne    0x14001aca7
   14001ac92:	movzx  r9d,BYTE PTR [rbp+0x92]
   14001ac9a:	mov    r8d,edi
   14001ac9d:	mov    rcx,rbp
   14001aca0:	call   0x140017ca0
   14001aca5:	mov    ebx,eax
   14001aca7:	mov    rcx,QWORD PTR [rbp+0x0]
   14001acab:	test   rcx,rcx
   14001acae:	je     0x14001ad33
   14001acb4:	cmp    ebx,0x1d
   14001acb7:	jne    0x14001ace6
   14001acb9:	test   sil,sil
   14001acbc:	je     0x14001ace6
   14001acbe:	lea    r8,[rbp+0x10]
   14001acc2:	lea    rdx,[rsp+0x140]
   14001acca:	call   0x140016b40
   14001accf:	mov    rcx,QWORD PTR [rax]
   14001acd2:	mov    QWORD PTR [rbp+0x20],rcx
   14001acd6:	mov    ecx,DWORD PTR [rax+0x8]
   14001acd9:	mov    DWORD PTR [rbp+0x28],ecx
   14001acdc:	mov    eax,DWORD PTR [rax+0xc]
   14001acdf:	mov    DWORD PTR [rbp+0x2c],eax
   14001ace2:	mov    eax,ebx
   14001ace4:	jmp    0x14001ad39
   14001ace6:	lea    rcx,[rbp+0x8]
   14001acea:	call   QWORD PTR [rip+0x5730]        # 0x140020420
   14001acf0:	mov    r8,QWORD PTR [rbp+0x50]
   14001acf4:	mov    rcx,QWORD PTR [rbp+0x0]
   14001acf8:	sub    r8,rax
   14001acfb:	lea    rdx,[rsp+0x100]
   14001ad03:	add    rcx,0x48
   14001ad07:	sar    r8,1
   14001ad0a:	mov    r9d,edi
   14001ad0d:	call   QWORD PTR [rip+0x5775]        # 0x140020488
   14001ad13:	mov    rax,QWORD PTR [rsp+0x100]
   14001ad1b:	mov    QWORD PTR [rbp+0x20],rax
   14001ad1f:	mov    eax,DWORD PTR [rsp+0x108]
   14001ad26:	mov    DWORD PTR [rbp+0x28],eax
   14001ad29:	mov    eax,DWORD PTR [rsp+0x10c]
   14001ad30:	mov    DWORD PTR [rbp+0x2c],eax
   14001ad33:	mov    eax,ebx
   14001ad35:	jmp    0x14001ad39
   14001ad37:	xor    eax,eax
   14001ad39:	mov    rsi,QWORD PTR [rsp+0x170]
   14001ad41:	mov    rdi,QWORD PTR [rsp+0x168]
   14001ad49:	mov    rbx,QWORD PTR [rsp+0x178]
   14001ad51:	mov    r12,QWORD PTR [rsp+0x160]
   14001ad59:	mov    r13,QWORD PTR [rsp+0x158]
   14001ad61:	add    rsp,0x180
   14001ad68:	pop    rbp
   14001ad69:	ret    
   14001ad6a:	xchg   ax,ax
   14001ad6c:	xor    ah,BYTE PTR [rbx-0x5c70ffff]
   14001ad72:	add    DWORD PTR [rax],eax
   14001ad74:	add    BYTE PTR [rbx-0x5d59ffff],ah
   14001ad7a:	add    DWORD PTR [rax],eax
   14001ad7c:	pushf  
   14001ad7d:	movabs ds:0xa25d0001a2920001,al
   14001ad86:	add    DWORD PTR [rax],eax
   14001ad88:	shl    DWORD PTR [rcx-0x5e38ffff],1
   14001ad8e:	add    DWORD PTR [rax],eax
   14001ad90:	movabs eax,ds:0x994100019dc20001
   14001ad9a:	add    DWORD PTR [rax],eax
   14001ad9c:	in     eax,dx
   14001ad9d:	test   eax,0x9db80001
   14001ada2:	add    DWORD PTR [rax],eax
   14001ada4:	(bad)  
   14001ada5:	movabs ds:0x9ccd00019d2d0001,al
   14001adae:	add    DWORD PTR [rax],eax
   14001adb0:	call   0x11e01af50
   14001adb5:	fwait
   14001adb6:	add    DWORD PTR [rax],eax
   14001adb8:	(bad)  
   14001adb9:	fwait
   14001adba:	add    DWORD PTR [rax],eax
   14001adbc:	retf   0x19b
   14001adbf:	add    BYTE PTR [rax-0x71fffe65],bl
   14001adc5:	fwait
   14001adc6:	add    DWORD PTR [rax],eax
   14001adc8:	xor    DWORD PTR [rbx-0x64d8ffff],ebx
   14001adce:	add    DWORD PTR [rax],eax
   14001add0:	sbb    eax,0xfd00019b
   14001add5:	test   eax,0x1000001
   14001adda:	sbb    bl,BYTE PTR [rdx]
   14001addc:	add    al,BYTE PTR [rbx]
   14001adde:	add    DWORD PTR [rax*1+0x9080706],eax
   14001ade5:	or     cl,BYTE PTR [rbx]
   14001ade7:	or     al,0xc
   14001ade9:	or     al,0xc
   14001adeb:	or     al,0xc
   14001aded:	or     al,0xc
   14001adef:	or     al,0xc
   14001adf1:	or     eax,0x11100f0e
   14001adf6:	adc    bl,BYTE PTR [rdx]
   14001adf8:	sbb    bl,BYTE PTR [rdx]
   14001adfa:	sbb    bl,BYTE PTR [rdx]
   14001adfc:	sbb    bl,BYTE PTR [rdx]
   14001adfe:	sbb    bl,BYTE PTR [rdx]
   14001ae00:	sbb    bl,BYTE PTR [rdx]
   14001ae02:	sbb    bl,BYTE PTR [rdx]
   14001ae04:	sbb    bl,BYTE PTR [rdx]
   14001ae06:	sbb    bl,BYTE PTR [rdx]
   14001ae08:	sbb    bl,BYTE PTR [rdx]
   14001ae0a:	sbb    bl,BYTE PTR [rdx]
   14001ae0c:	sbb    bl,BYTE PTR [rdx]
   14001ae0e:	sbb    bl,BYTE PTR [rdx]
   14001ae10:	sbb    bl,BYTE PTR [rdx]
   14001ae12:	adc    ebx,DWORD PTR [rdx]
   14001ae14:	adc    al,0x15
   14001ae16:	sbb    bl,BYTE PTR [rdx]
   14001ae18:	sbb    bl,BYTE PTR [rdx]
   14001ae1a:	sbb    bl,BYTE PTR [rdx]
   14001ae1c:	sbb    bl,BYTE PTR [rdx]
   14001ae1e:	sbb    bl,BYTE PTR [rdx]
   14001ae20:	sbb    bl,BYTE PTR [rdx]
   14001ae22:	sbb    bl,BYTE PTR [rdx]
   14001ae24:	sbb    bl,BYTE PTR [rdx]
   14001ae26:	sbb    bl,BYTE PTR [rdx]
   14001ae28:	sbb    bl,BYTE PTR [rdx]
   14001ae2a:	sbb    bl,BYTE PTR [rdx]
   14001ae2c:	sbb    bl,BYTE PTR [rdx]
   14001ae2e:	sbb    bl,BYTE PTR [rdx]
   14001ae30:	sbb    bl,BYTE PTR [rdx]
   14001ae32:	(bad)  
   14001ae33:	(bad)  
   14001ae34:	sbb    BYTE PTR [rcx],bl
   14001ae36:	xchg   ax,ax
   14001ae38:	mov    eax,0x2c0001a8
   14001ae3d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001ae3e:	add    DWORD PTR [rax],eax
   14001ae40:	cli    
   14001ae41:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001ae42:	add    DWORD PTR [rax],eax
   14001ae44:	data16 test al,0x1
   14001ae47:	add    BYTE PTR [rax-0x57],dl
   14001ae4a:	add    DWORD PTR [rax],eax
   14001ae4c:	enter  0x1a6,0x0
   14001ae50:	pop    rsi
   14001ae51:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001ae52:	add    DWORD PTR [rax],eax
   14001ae54:	mov    ah,BYTE PTR [rdi-0x5849ffff]
   14001ae5a:	add    DWORD PTR [rax],eax
   14001ae5c:	loop   0x14001ae05
   14001ae5e:	add    DWORD PTR [rax],eax
   14001ae60:	(bad)  
   14001ae61:	test   al,0x1
   14001ae63:	add    al,al
   14001ae65:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001ae66:	add    DWORD PTR [rax],eax
   14001ae68:	cmp    ch,BYTE PTR [rax-0x59bbffff]
   14001ae6e:	add    DWORD PTR [rax],eax
   14001ae70:	ret    0x1a8
   14001ae73:	add    BYTE PTR [rax],al
   14001ae75:	(bad)  
   14001ae76:	(bad)  
   14001ae77:	add    BYTE PTR [rsi],cl
   14001ae79:	(bad)  
   14001ae7a:	(bad)  
   14001ae7b:	(bad)  
   14001ae7c:	(bad)  
   14001ae7d:	(bad)  
   14001ae7e:	(bad)  
   14001ae7f:	(bad)  
   14001ae80:	(bad)  
   14001ae81:	(bad)  
   14001ae82:	(bad)  
   14001ae83:	(bad)  
   14001ae84:	(bad)  
   14001ae85:	(bad)  
   14001ae86:	(bad)  
   14001ae87:	(bad)  
   14001ae88:	(bad)  
   14001ae89:	(bad)  
   14001ae8a:	(bad)  
   14001ae8b:	(bad)  
   14001ae8c:	add    DWORD PTR [rsi],ecx
   14001ae8e:	(bad)  
   14001ae8f:	(bad)  
   14001ae90:	(bad)  
   14001ae91:	add    cl,BYTE PTR [rsi]
   14001ae93:	(bad)  
   14001ae94:	(bad)  
   14001ae95:	(bad)  
   14001ae96:	(bad)  
   14001ae97:	(bad)  
   14001ae98:	(bad)  
   14001ae99:	(bad)  
   14001ae9a:	add    eax,DWORD PTR [rsp+rax*1]
   14001ae9d:	add    al,0x4
   14001ae9f:	add    al,0x4
   14001aea1:	add    al,0x4
   14001aea3:	add    al,0xe
   14001aea5:	(bad)  
   14001aea6:	(bad)  
   14001aea7:	(bad)  
   14001aea8:	(bad)  
   14001aea9:	(bad)  
   14001aeaa:	(bad)  
   14001aeab:	(bad)  
   14001aeac:	(bad)  
   14001aead:	(bad)  
   14001aeae:	(bad)  
   14001aeaf:	(bad)  
   14001aeb0:	(bad)  
   14001aeb1:	(bad)  
   14001aeb2:	(bad)  
   14001aeb3:	(bad)  
   14001aeb4:	(bad)  
   14001aeb5:	(bad)  
   14001aeb6:	(bad)  
   14001aeb7:	(bad)  
   14001aeb8:	(bad)  
   14001aeb9:	(bad)  
   14001aeba:	(bad)  
   14001aebb:	(bad)  
   14001aebc:	(bad)  
   14001aebd:	(bad)  
   14001aebe:	(bad)  
   14001aebf:	(bad)  
   14001aec0:	(bad)  
   14001aec1:	(bad)  
   14001aec2:	(bad)  
   14001aec3:	(bad)  
   14001aec4:	(bad)  
   14001aec5:	(bad)  
   14001aec6:	add    eax,0xe0e0e0e
   14001aecb:	(bad)  
   14001aecc:	(bad)  
   14001aecd:	(bad)  
   14001aece:	(bad)  
   14001aecf:	(bad)  
   14001aed0:	(bad)  
   14001aed1:	(bad)  
   14001aed2:	(bad)  
   14001aed3:	(bad)  
   14001aed4:	(bad)  
   14001aed5:	(bad)  
   14001aed6:	(bad)  
   14001aed7:	(bad)  
   14001aed8:	or     BYTE PTR [rsi],cl
   14001aeda:	(bad)  
   14001aedb:	(bad)  
   14001aedc:	or     DWORD PTR [rsi],ecx
   14001aede:	or     cl,BYTE PTR [rbx]
   14001aee0:	or     al,0xe
   14001aee2:	or     eax,0xcccccccc
   14001aee7:	int3   
   14001aee8:	int3   
   14001aee9:	int3   
   14001aeea:	int3   
   14001aeeb:	int3   
   14001aeec:	int3   
   14001aeed:	int3   
   14001aeee:	int3   
   14001aeef:	int3   
   14001aef0:	mov    QWORD PTR [rsp+0x8],rbx
   14001aef5:	mov    QWORD PTR [rsp+0x10],rbp
   14001aefa:	mov    QWORD PTR [rsp+0x18],rsi
   14001aeff:	push   rdi
   14001af00:	sub    rsp,0x20
   14001af04:	mov    ebx,DWORD PTR [rcx+0x80]
   14001af0a:	xor    ebp,ebp
   14001af0c:	mov    rdi,rcx
   14001af0f:	mov    QWORD PTR [rcx+0x20],rbp
   14001af13:	mov    DWORD PTR [rcx+0x28],ebp
   14001af16:	mov    DWORD PTR [rcx+0x2c],ebp
   14001af19:	call   0x140019810
   14001af1e:	mov    rdx,QWORD PTR [rdi+0x30]
   14001af22:	mov    BYTE PTR [rdi+0x91],bpl
   14001af29:	sub    rdx,QWORD PTR [rdi+0x50]
   14001af2d:	mov    esi,eax
   14001af2f:	mov    DWORD PTR [rdi+0x80],eax
   14001af35:	sar    rdx,1
   14001af38:	mov    BYTE PTR [rdi+0x8e],bpl
   14001af3f:	dec    edx
   14001af41:	cmp    ebx,0x37
   14001af44:	sete   al
   14001af47:	mov    DWORD PTR [rdi+0x84],edx
   14001af4d:	mov    BYTE PTR [rdi+0x90],al
   14001af53:	lea    eax,[rsi-0x4]
   14001af56:	cmp    eax,0x4a
   14001af59:	ja     0x14001af96
   14001af5b:	lea    rdx,[rip+0xfffffffffffe509e]        # 0x140000000
   14001af62:	cdqe   
   14001af64:	movzx  eax,BYTE PTR [rdx+rax*1+0x1b010]
   14001af6c:	mov    ecx,DWORD PTR [rdx+rax*4+0x1affc]
   14001af73:	add    rcx,rdx
   14001af76:	jmp    rcx
   14001af78:	mov    DWORD PTR [rdi+0x70],0x1
   14001af7f:	mov    DWORD PTR [rdi+0x74],ebp
   14001af82:	jmp    0x14001afa8
   14001af84:	mov    DWORD PTR [rdi+0x70],0x2
   14001af8b:	jmp    0x14001afa8
   14001af8d:	mov    BYTE PTR [rdi+0x8e],0x1
   14001af94:	jmp    0x14001afa8
   14001af96:	mov    ecx,esi
   14001af98:	call   0x140018110
   14001af9d:	test   al,al
   14001af9f:	je     0x14001afa8
   14001afa1:	mov    BYTE PTR [rdi+0x91],0x1
   14001afa8:	mov    ecx,DWORD PTR [rdi+0x70]
   14001afab:	sub    ecx,0x1
   14001afae:	je     0x14001afc6
   14001afb0:	cmp    ecx,0x1
   14001afb3:	jne    0x14001afe4
   14001afb5:	cmp    esi,0xe
   14001afb8:	je     0x14001afe4
   14001afba:	mov    eax,esi
   14001afbc:	cmp    esi,0x10
   14001afbf:	je     0x14001afe6
   14001afc1:	mov    DWORD PTR [rdi+0x70],ebp
   14001afc4:	jmp    0x14001afe6
   14001afc6:	cmp    esi,0x3c
   14001afc9:	jne    0x14001afdc
   14001afcb:	add    DWORD PTR [rdi+0x74],0xffffffff
   14001afcf:	mov    eax,esi
   14001afd1:	jne    0x14001afe6
   14001afd3:	mov    DWORD PTR [rdi+0x70],0x2
   14001afda:	jmp    0x14001afe6
   14001afdc:	cmp    esi,0x24
   14001afdf:	jne    0x14001afe4
   14001afe1:	inc    DWORD PTR [rdi+0x74]
   14001afe4:	mov    eax,esi
   14001afe6:	mov    rbx,QWORD PTR [rsp+0x30]
   14001afeb:	mov    rbp,QWORD PTR [rsp+0x38]
   14001aff0:	mov    rsi,QWORD PTR [rsp+0x40]
   14001aff5:	add    rsp,0x20
   14001aff9:	pop    rdi
   14001affa:	ret    
   14001affb:	nop
   14001affc:	lea    ebp,[rdi-0x505effff]
   14001b002:	add    DWORD PTR [rax],eax
   14001b004:	test   BYTE PTR [rdi-0x5087ffff],ch
   14001b00a:	add    DWORD PTR [rax],eax
   14001b00c:	xchg   esi,eax
   14001b00d:	scas   eax,DWORD PTR es:[rdi]
   14001b00e:	add    DWORD PTR [rax],eax
   14001b010:	add    BYTE PTR [rsp+rax*1],al
   14001b013:	add    DWORD PTR [rax+rax*1],eax
   14001b016:	add    al,0x4
   14001b018:	add    al,0x4
   14001b01a:	add    al,BYTE PTR [rdx+rax*1]
   14001b01d:	add    al,0x4
   14001b01f:	add    al,0x4
   14001b021:	add    eax,DWORD PTR [rsp+rax*1]
   14001b024:	add    al,0x4
   14001b026:	add    al,0x4
   14001b028:	add    al,0x4
   14001b02a:	add    eax,DWORD PTR [rsp+rax*1]
   14001b02d:	add    DWORD PTR [rsp+rax*1],eax
   14001b030:	add    al,0x4
   14001b032:	add    al,0x4
   14001b034:	add    al,0x4
   14001b036:	add    al,0x4
   14001b038:	add    al,0x4
   14001b03a:	add    al,0x4
   14001b03c:	add    al,0x4
   14001b03e:	add    al,0x4
   14001b040:	add    al,0x4
   14001b042:	add    DWORD PTR [rsp+rax*1],eax
   14001b045:	add    al,0x4
   14001b047:	add    BYTE PTR [rcx+rax*1],al
   14001b04a:	add    al,0x4
   14001b04c:	add    al,0x4
   14001b04e:	add    al,0x4
   14001b050:	add    al,0x4
   14001b052:	add    al,0x0
   14001b054:	add    DWORD PTR [rsp+rax*1],eax
   14001b057:	add    al,0x4
   14001b059:	add    eax,DWORD PTR [rbx]
   14001b05b:	int3   
   14001b05c:	int3   
   14001b05d:	int3   
   14001b05e:	int3   
   14001b05f:	int3   
   14001b060:	rex push rbx
   14001b062:	push   rbp
   14001b063:	push   r13
   14001b065:	push   r15
   14001b067:	sub    rsp,0x158
   14001b06e:	xor    r13d,r13d
   14001b071:	mov    rbp,r8
   14001b074:	mov    r15,rdx
   14001b077:	mov    DWORD PTR [rsp+0x180],r13d
   14001b07f:	mov    rbx,rcx
   14001b082:	call   0x14001aef0
   14001b087:	cmp    DWORD PTR [rbx+0x80],0xf
   14001b08e:	je     0x14001b0a0
   14001b090:	mov    al,0x1
   14001b092:	add    rsp,0x158
   14001b099:	pop    r15
   14001b09b:	pop    r13
   14001b09d:	pop    rbp
   14001b09e:	pop    rbx
   14001b09f:	ret    
   14001b0a0:	mov    QWORD PTR [rsp+0x188],rsi
   14001b0a8:	mov    QWORD PTR [rsp+0x148],r12
   14001b0b0:	mov    QWORD PTR [rsp+0x140],r14
   14001b0b8:	lea    r14,[rip+0x7d29]        # 0x140022de8
   14001b0bf:	mov    QWORD PTR [rsp+0x150],rdi
   14001b0c7:	nop    WORD PTR [rax+rax*1+0x0]
   14001b0d0:	mov    r12,QWORD PTR [rbx+0x50]
   14001b0d4:	mov    esi,DWORD PTR [rbx+0x88]
   14001b0da:	mov    rcx,rbx
   14001b0dd:	sub    r12,QWORD PTR [rbx+0x48]
   14001b0e1:	sar    r12,1
   14001b0e4:	inc    r12d
   14001b0e7:	call   0x14001aef0
   14001b0ec:	mov    edx,DWORD PTR [rbx+0x80]
   14001b0f2:	cmp    edx,0x1d
   14001b0f5:	je     0x14001b100
   14001b0f7:	cmp    edx,0x56
   14001b0fa:	jne    0x14001b81d
   14001b100:	cmp    BYTE PTR [rbx+0x8c],0x0
   14001b107:	je     0x14001b11a
   14001b109:	lea    rdx,[rbx+0x10]
   14001b10d:	lea    rcx,[rsp+0x30]
   14001b112:	call   QWORD PTR [rip+0x5680]        # 0x140020798
   14001b118:	jmp    0x14001b155
   14001b11a:	cmp    edx,0x41
   14001b11d:	jne    0x14001b13f
   14001b11f:	mov    r8d,DWORD PTR [rbx+0x84]
   14001b126:	mov    rdx,QWORD PTR [rbx+0x50]
   14001b12a:	lea    rcx,[rsp+0x30]
   14001b12f:	sub    r8d,0x2
   14001b133:	add    rdx,0x2
   14001b137:	call   QWORD PTR [rip+0x5353]        # 0x140020490
   14001b13d:	jmp    0x14001b155
   14001b13f:	mov    r8d,DWORD PTR [rbx+0x84]
   14001b146:	mov    rdx,QWORD PTR [rbx+0x50]
   14001b14a:	lea    rcx,[rsp+0x30]
   14001b14f:	call   QWORD PTR [rip+0x533b]        # 0x140020490
   14001b155:	or     rcx,0xffffffffffffffff
   14001b159:	xor    eax,eax
   14001b15b:	mov    rdi,r14
   14001b15e:	repnz scas al,BYTE PTR es:[rdi]
   14001b160:	mov    QWORD PTR [rsp+0xa8],r14
   14001b168:	lea    rdx,[rsp+0xe0]
   14001b170:	not    rcx
   14001b173:	dec    rcx
   14001b176:	mov    DWORD PTR [rsp+0xa0],ecx
   14001b17d:	lea    rcx,[rsp+0x30]
   14001b182:	movaps xmm0,XMMWORD PTR [rsp+0xa0]
   14001b18a:	movdqa XMMWORD PTR [rsp+0xe0],xmm0
   14001b193:	call   QWORD PTR [rip+0x55df]        # 0x140020778
   14001b199:	test   al,al
   14001b19b:	jne    0x14001b1f0
   14001b19d:	or     rcx,0xffffffffffffffff
   14001b1a1:	lea    rdx,[rip+0x7c38]        # 0x140022de0
   14001b1a8:	xor    eax,eax
   14001b1aa:	mov    rdi,rdx
   14001b1ad:	mov    QWORD PTR [rsp+0x88],rdx
   14001b1b5:	lea    rdx,[rsp+0x100]
   14001b1bd:	repnz scas al,BYTE PTR es:[rdi]
   14001b1bf:	not    rcx
   14001b1c2:	dec    rcx
   14001b1c5:	mov    DWORD PTR [rsp+0x80],ecx
   14001b1cc:	lea    rcx,[rsp+0x30]
   14001b1d1:	movaps xmm0,XMMWORD PTR [rsp+0x80]
   14001b1d9:	movdqa XMMWORD PTR [rsp+0x100],xmm0
   14001b1e2:	call   QWORD PTR [rip+0x5590]        # 0x140020778
   14001b1e8:	test   al,al
   14001b1ea:	je     0x14001b874
   14001b1f0:	or     rcx,0xffffffffffffffff
   14001b1f4:	xor    eax,eax
   14001b1f6:	mov    rdi,r14
   14001b1f9:	repnz scas al,BYTE PTR es:[rdi]
   14001b1fb:	mov    QWORD PTR [rsp+0xc8],r14
   14001b203:	lea    rdx,[rsp+0x120]
   14001b20b:	not    rcx
   14001b20e:	dec    rcx
   14001b211:	mov    DWORD PTR [rsp+0xc0],ecx
   14001b218:	lea    rcx,[rsp+0x30]
   14001b21d:	movaps xmm0,XMMWORD PTR [rsp+0xc0]
   14001b225:	movdqa XMMWORD PTR [rsp+0x120],xmm0
   14001b22e:	call   QWORD PTR [rip+0x5544]        # 0x140020778
   14001b234:	test   al,al
   14001b236:	je     0x14001b32c
   14001b23c:	mov    rcx,rbx
   14001b23f:	call   0x14001aef0
   14001b244:	cmp    eax,0x1d
   14001b247:	jne    0x14001b2fd
   14001b24d:	or     rcx,0xffffffffffffffff
   14001b251:	lea    rdx,[rip+0x7b80]        # 0x140022dd8
   14001b258:	xor    eax,eax
   14001b25a:	mov    rdi,rdx
   14001b25d:	mov    QWORD PTR [rsp+0x98],rdx
   14001b265:	or     r13d,0x1
   14001b269:	repnz scas al,BYTE PTR es:[rdi]
   14001b26b:	not    rcx
   14001b26e:	dec    rcx
   14001b271:	mov    DWORD PTR [rsp+0x90],ecx
   14001b278:	movaps xmm0,XMMWORD PTR [rsp+0x90]
   14001b280:	movdqa XMMWORD PTR [rsp+0xf0],xmm0
   14001b289:	cmp    BYTE PTR [rbx+0x8c],al
   14001b28f:	je     0x14001b2a2
   14001b291:	lea    rdx,[rbx+0x10]
   14001b295:	lea    rcx,[rsp+0x50]
   14001b29a:	call   QWORD PTR [rip+0x54f8]        # 0x140020798
   14001b2a0:	jmp    0x14001b2e1
   14001b2a2:	cmp    DWORD PTR [rbx+0x80],0x41
   14001b2a9:	jne    0x14001b2cb
   14001b2ab:	mov    r8d,DWORD PTR [rbx+0x84]
   14001b2b2:	mov    rdx,QWORD PTR [rbx+0x50]
   14001b2b6:	lea    rcx,[rsp+0x50]
   14001b2bb:	sub    r8d,0x2
   14001b2bf:	add    rdx,0x2
   14001b2c3:	call   QWORD PTR [rip+0x51c7]        # 0x140020490
   14001b2c9:	jmp    0x14001b2e1
   14001b2cb:	mov    r8d,DWORD PTR [rbx+0x84]
   14001b2d2:	mov    rdx,QWORD PTR [rbx+0x50]
   14001b2d6:	lea    rcx,[rsp+0x50]
   14001b2db:	call   QWORD PTR [rip+0x51af]        # 0x140020490
   14001b2e1:	lea    rdx,[rsp+0xf0]
   14001b2e9:	lea    rcx,[rsp+0x50]
   14001b2ee:	call   QWORD PTR [rip+0x5484]        # 0x140020778
   14001b2f4:	test   al,al
   14001b2f6:	je     0x14001b2fd
   14001b2f8:	xor    dil,dil
   14001b2fb:	jmp    0x14001b300
   14001b2fd:	mov    dil,0x1
   14001b300:	test   r13b,0x1
   14001b304:	je     0x14001b315
   14001b306:	lea    rcx,[rsp+0x50]
   14001b30b:	and    r13d,0xfffffffe
   14001b30f:	call   QWORD PTR [rip+0x546b]        # 0x140020780
   14001b315:	test   dil,dil
   14001b318:	jne    0x14001b874
   14001b31e:	mov    rax,QWORD PTR [r15]
   14001b321:	mov    rcx,r15
   14001b324:	call   QWORD PTR [rax+0x8]
   14001b327:	jmp    0x14001b7f5
   14001b32c:	mov    rcx,rbx
   14001b32f:	call   0x14001aef0
   14001b334:	lea    rcx,[rsp+0x38]
   14001b339:	call   QWORD PTR [rip+0x5259]        # 0x140020598
   14001b33f:	lea    rcx,[rsp+0x40]
   14001b344:	call   QWORD PTR [rip+0x524e]        # 0x140020598
   14001b34a:	mov    eax,DWORD PTR [rbx+0x80]
   14001b350:	xor    r14b,r14b
   14001b353:	cmp    eax,0x41
   14001b356:	jne    0x14001b459
   14001b35c:	cmp    BYTE PTR [rbx+0x8c],0x0
   14001b363:	mov    r14b,0x1
   14001b366:	je     0x14001b379
   14001b368:	lea    rdx,[rbx+0x10]
   14001b36c:	lea    rcx,[rsp+0x68]
   14001b371:	call   QWORD PTR [rip+0x5421]        # 0x140020798
   14001b377:	jmp    0x14001b397
   14001b379:	mov    r8d,DWORD PTR [rbx+0x84]
   14001b380:	mov    rdx,QWORD PTR [rbx+0x50]
   14001b384:	lea    rcx,[rsp+0x68]
   14001b389:	sub    r8d,0x2
   14001b38d:	add    rdx,0x2
   14001b391:	call   QWORD PTR [rip+0x50f9]        # 0x140020490
   14001b397:	lea    rdx,[rsp+0x68]
   14001b39c:	lea    rcx,[rsp+0x38]
   14001b3a1:	call   QWORD PTR [rip+0x51c1]        # 0x140020568
   14001b3a7:	lea    rcx,[rsp+0x68]
   14001b3ac:	call   QWORD PTR [rip+0x53ce]        # 0x140020780
   14001b3b2:	or     rcx,0xffffffffffffffff
   14001b3b6:	lea    rdx,[rip+0x7a13]        # 0x140022dd0
   14001b3bd:	mov    rdi,rdx
   14001b3c0:	xor    eax,eax
   14001b3c2:	mov    QWORD PTR [rsp+0xb8],rdx
   14001b3ca:	repnz scas al,BYTE PTR es:[rdi]
   14001b3cc:	lea    r8d,[rax+0x1]
   14001b3d0:	lea    rdx,[rsp+0x110]
   14001b3d8:	not    rcx
   14001b3db:	dec    rcx
   14001b3de:	mov    DWORD PTR [rsp+0xb0],ecx
   14001b3e5:	lea    rcx,[rsp+0x38]
   14001b3ea:	movaps xmm0,XMMWORD PTR [rsp+0xb0]
   14001b3f2:	movdqa XMMWORD PTR [rsp+0x110],xmm0
   14001b3fb:	call   QWORD PTR [rip+0x5187]        # 0x140020588
   14001b401:	test   al,al
   14001b403:	jne    0x14001b5ef
   14001b409:	lea    r8,[rip+0x79a0]        # 0x140022db0
   14001b410:	lea    rdx,[rip+0x7601]        # 0x140022a18
   14001b417:	lea    rcx,[rsp+0x180]
   14001b41f:	xor    r9d,r9d
   14001b422:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14001b42a:	call   QWORD PTR [rip+0x5018]        # 0x140020448
   14001b430:	lea    rcx,[rbp+0x18]
   14001b434:	mov    rdx,rax
   14001b437:	call   QWORD PTR [rip+0x512b]        # 0x140020568
   14001b43d:	lea    rcx,[rsp+0x180]
   14001b445:	call   QWORD PTR [rip+0x5335]        # 0x140020780
   14001b44b:	mov    edx,DWORD PTR [rbx+0x88]
   14001b451:	mov    DWORD PTR [rbp+0xc],edx
   14001b454:	jmp    0x14001b9d3
   14001b459:	cmp    eax,0x1d
   14001b45c:	jne    0x14001b5ef
   14001b462:	mov    edx,DWORD PTR [rbx+0x80]
   14001b468:	lea    rcx,[rip+0x7611]        # 0x140022a80
   14001b46f:	mov    eax,0x1d
   14001b474:	cmp    eax,edx
   14001b476:	je     0x14001b4d3
   14001b478:	mov    eax,DWORD PTR [rcx+0x4]
   14001b47b:	add    rcx,0x4
   14001b47f:	test   eax,eax
   14001b481:	jne    0x14001b474
   14001b483:	lea    r8,[rip+0x790e]        # 0x140022d98
   14001b48a:	lea    rdx,[rip+0x7587]        # 0x140022a18
   14001b491:	lea    rcx,[rsp+0x180]
   14001b499:	xor    r9d,r9d
   14001b49c:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14001b4a4:	call   QWORD PTR [rip+0x4f9e]        # 0x140020448
   14001b4aa:	lea    rcx,[rbp+0x18]
   14001b4ae:	mov    rdx,rax
   14001b4b1:	call   QWORD PTR [rip+0x50b1]        # 0x140020568
   14001b4b7:	lea    rcx,[rsp+0x180]
   14001b4bf:	call   QWORD PTR [rip+0x52bb]        # 0x140020780
   14001b4c5:	mov    edx,DWORD PTR [rbx+0x88]
   14001b4cb:	mov    DWORD PTR [rbp+0xc],edx
   14001b4ce:	jmp    0x14001b9d3
   14001b4d3:	cmp    BYTE PTR [rbx+0x8c],0x0
   14001b4da:	je     0x14001b4ed
   14001b4dc:	lea    rdx,[rbx+0x10]
   14001b4e0:	lea    rcx,[rsp+0x60]
   14001b4e5:	call   QWORD PTR [rip+0x52ad]        # 0x140020798
   14001b4eb:	jmp    0x14001b528
   14001b4ed:	cmp    edx,0x41
   14001b4f0:	jne    0x14001b512
   14001b4f2:	mov    r8d,DWORD PTR [rbx+0x84]
   14001b4f9:	mov    rdx,QWORD PTR [rbx+0x50]
   14001b4fd:	lea    rcx,[rsp+0x60]
   14001b502:	sub    r8d,0x2
   14001b506:	add    rdx,0x2
   14001b50a:	call   QWORD PTR [rip+0x4f80]        # 0x140020490
   14001b510:	jmp    0x14001b528
   14001b512:	mov    r8d,DWORD PTR [rbx+0x84]
   14001b519:	mov    rdx,QWORD PTR [rbx+0x50]
   14001b51d:	lea    rcx,[rsp+0x60]
   14001b522:	call   QWORD PTR [rip+0x4f68]        # 0x140020490
   14001b528:	lea    rdx,[rsp+0x60]
   14001b52d:	lea    rcx,[rsp+0x38]
   14001b532:	call   QWORD PTR [rip+0x5270]        # 0x1400207a8
   14001b538:	lea    rcx,[rsp+0x60]
   14001b53d:	call   QWORD PTR [rip+0x523d]        # 0x140020780
   14001b543:	mov    rcx,rbx
   14001b546:	call   0x14001aef0
   14001b54b:	cmp    DWORD PTR [rbx+0x88],esi
   14001b551:	jne    0x14001b483
   14001b557:	cmp    DWORD PTR [rbx+0x80],0xf
   14001b55e:	jne    0x14001b597
   14001b560:	lea    rcx,[rsp+0x180]
   14001b568:	mov    dl,0x2e
   14001b56a:	call   QWORD PTR [rip+0x5220]        # 0x140020790
   14001b570:	lea    rcx,[rsp+0x38]
   14001b575:	movzx  edx,WORD PTR [rax]
   14001b578:	call   QWORD PTR [rip+0x502a]        # 0x1400205a8
   14001b57e:	mov    rcx,rbx
   14001b581:	call   0x14001aef0
   14001b586:	cmp    DWORD PTR [rbx+0x88],esi
   14001b58c:	je     0x14001b462
   14001b592:	jmp    0x14001b483
   14001b597:	cmp    DWORD PTR [rbx+0x80],0x2f
   14001b59e:	jne    0x14001b824
   14001b5a4:	cmp    BYTE PTR [rbx+0x8c],0x0
   14001b5ab:	je     0x14001b5be
   14001b5ad:	lea    rdx,[rbx+0x10]
   14001b5b1:	lea    rcx,[rsp+0x70]
   14001b5b6:	call   QWORD PTR [rip+0x51dc]        # 0x140020798
   14001b5bc:	jmp    0x14001b5d4
   14001b5be:	mov    r8d,DWORD PTR [rbx+0x84]
   14001b5c5:	mov    rdx,QWORD PTR [rbx+0x50]
   14001b5c9:	lea    rcx,[rsp+0x70]
   14001b5ce:	call   QWORD PTR [rip+0x4ebc]        # 0x140020490
   14001b5d4:	lea    rdx,[rsp+0x70]
   14001b5d9:	lea    rcx,[rsp+0x40]
   14001b5de:	call   QWORD PTR [rip+0x4f84]        # 0x140020568
   14001b5e4:	lea    rcx,[rsp+0x70]
   14001b5e9:	call   QWORD PTR [rip+0x5191]        # 0x140020780
   14001b5ef:	mov    rcx,rbx
   14001b5f2:	call   0x14001aef0
   14001b5f7:	cmp    eax,0x1d
   14001b5fa:	jne    0x14001b6b8
   14001b600:	or     rcx,0xffffffffffffffff
   14001b604:	lea    rdx,[rip+0x7789]        # 0x140022d94
   14001b60b:	xor    eax,eax
   14001b60d:	mov    rdi,rdx
   14001b610:	mov    QWORD PTR [rsp+0xd8],rdx
   14001b618:	or     r13d,0x2
   14001b61c:	repnz scas al,BYTE PTR es:[rdi]
   14001b61e:	not    rcx
   14001b621:	dec    rcx
   14001b624:	mov    DWORD PTR [rsp+0xd0],ecx
   14001b62b:	movaps xmm0,XMMWORD PTR [rsp+0xd0]
   14001b633:	movdqa XMMWORD PTR [rsp+0x130],xmm0
   14001b63c:	cmp    BYTE PTR [rbx+0x8c],al
   14001b642:	je     0x14001b655
   14001b644:	lea    rdx,[rbx+0x10]
   14001b648:	lea    rcx,[rsp+0x58]
   14001b64d:	call   QWORD PTR [rip+0x5145]        # 0x140020798
   14001b653:	jmp    0x14001b694
   14001b655:	cmp    DWORD PTR [rbx+0x80],0x41
   14001b65c:	jne    0x14001b67e
   14001b65e:	mov    r8d,DWORD PTR [rbx+0x84]
   14001b665:	mov    rdx,QWORD PTR [rbx+0x50]
   14001b669:	lea    rcx,[rsp+0x58]
   14001b66e:	sub    r8d,0x2
   14001b672:	add    rdx,0x2
   14001b676:	call   QWORD PTR [rip+0x4e14]        # 0x140020490
   14001b67c:	jmp    0x14001b694
   14001b67e:	mov    r8d,DWORD PTR [rbx+0x84]
   14001b685:	mov    rdx,QWORD PTR [rbx+0x50]
   14001b689:	lea    rcx,[rsp+0x58]
   14001b68e:	call   QWORD PTR [rip+0x4dfc]        # 0x140020490
   14001b694:	lea    rdx,[rsp+0x130]
   14001b69c:	lea    rcx,[rsp+0x58]
   14001b6a1:	call   QWORD PTR [rip+0x50d1]        # 0x140020778
   14001b6a7:	test   al,al
   14001b6a9:	je     0x14001b6b8
   14001b6ab:	cmp    DWORD PTR [rbx+0x88],esi
   14001b6b1:	jne    0x14001b6b8
   14001b6b3:	xor    dil,dil
   14001b6b6:	jmp    0x14001b6bb
   14001b6b8:	mov    dil,0x1
   14001b6bb:	test   r13b,0x2
   14001b6bf:	je     0x14001b6d0
   14001b6c1:	lea    rcx,[rsp+0x58]
   14001b6c6:	and    r13d,0xfffffffd
   14001b6ca:	call   QWORD PTR [rip+0x50b0]        # 0x140020780
   14001b6d0:	test   dil,dil
   14001b6d3:	jne    0x14001ba34
   14001b6d9:	mov    rcx,rbx
   14001b6dc:	call   0x14001aef0
   14001b6e1:	cmp    eax,0x1d
   14001b6e4:	jne    0x14001b93f
   14001b6ea:	cmp    DWORD PTR [rbx+0x88],esi
   14001b6f0:	jne    0x14001b93f
   14001b6f6:	cmp    BYTE PTR [rbx+0x8c],dil
   14001b6fd:	je     0x14001b710
   14001b6ff:	lea    rdx,[rbx+0x10]
   14001b703:	lea    rcx,[rsp+0x48]
   14001b708:	call   QWORD PTR [rip+0x508a]        # 0x140020798
   14001b70e:	jmp    0x14001b74f
   14001b710:	cmp    DWORD PTR [rbx+0x80],0x41
   14001b717:	jne    0x14001b739
   14001b719:	mov    r8d,DWORD PTR [rbx+0x84]
   14001b720:	mov    rdx,QWORD PTR [rbx+0x50]
   14001b724:	lea    rcx,[rsp+0x48]
   14001b729:	sub    r8d,0x2
   14001b72d:	add    rdx,0x2
   14001b731:	call   QWORD PTR [rip+0x4d59]        # 0x140020490
   14001b737:	jmp    0x14001b74f
   14001b739:	mov    r8d,DWORD PTR [rbx+0x84]
   14001b740:	mov    rdx,QWORD PTR [rbx+0x50]
   14001b744:	lea    rcx,[rsp+0x48]
   14001b749:	call   QWORD PTR [rip+0x4d41]        # 0x140020490
   14001b74f:	lea    rdx,[rsp+0x198]
   14001b757:	lea    rcx,[rsp+0x48]
   14001b75c:	xor    r8d,r8d
   14001b75f:	call   QWORD PTR [rip+0x4d7b]        # 0x1400204e0
   14001b765:	movzx  ecx,WORD PTR [rax]
   14001b768:	cmp    ecx,0x5a
   14001b76b:	ja     0x14001b772
   14001b76d:	cmp    ecx,0x41
   14001b770:	jae    0x14001b78a
   14001b772:	cmp    ecx,0x7f
   14001b775:	jbe    0x14001b8d4
   14001b77b:	call   QWORD PTR [rip+0x4d27]        # 0x1400204a8
   14001b781:	cmp    eax,0xe
   14001b784:	jne    0x14001b8d4
   14001b78a:	test   r14b,r14b
   14001b78d:	je     0x14001b7ac
   14001b78f:	mov    rax,QWORD PTR [r15]
   14001b792:	lea    r8,[rsp+0x48]
   14001b797:	lea    rdx,[rsp+0x38]
   14001b79c:	mov    r9d,esi
   14001b79f:	mov    rcx,r15
   14001b7a2:	mov    DWORD PTR [rsp+0x20],r12d
   14001b7a7:	call   QWORD PTR [rax+0x10]
   14001b7aa:	jmp    0x14001b7cd
   14001b7ac:	mov    rax,QWORD PTR [r15]
   14001b7af:	lea    r9,[rsp+0x48]
   14001b7b4:	lea    r8,[rsp+0x40]
   14001b7b9:	lea    rdx,[rsp+0x38]
   14001b7be:	mov    rcx,r15
   14001b7c1:	mov    DWORD PTR [rsp+0x28],r12d
   14001b7c6:	mov    DWORD PTR [rsp+0x20],esi
   14001b7ca:	call   QWORD PTR [rax+0x18]
   14001b7cd:	lea    rcx,[rsp+0x48]
   14001b7d2:	call   QWORD PTR [rip+0x4fa8]        # 0x140020780
   14001b7d8:	lea    rcx,[rsp+0x40]
   14001b7dd:	call   QWORD PTR [rip+0x4f9d]        # 0x140020780
   14001b7e3:	lea    rcx,[rsp+0x38]
   14001b7e8:	call   QWORD PTR [rip+0x4f92]        # 0x140020780
   14001b7ee:	lea    r14,[rip+0x75f3]        # 0x140022de8
   14001b7f5:	cmp    DWORD PTR [rbx+0x88],esi
   14001b7fb:	jne    0x14001b874
   14001b7fd:	mov    rcx,rbx
   14001b800:	call   0x14001aef0
   14001b805:	lea    rcx,[rsp+0x30]
   14001b80a:	call   QWORD PTR [rip+0x4f70]        # 0x140020780
   14001b810:	cmp    DWORD PTR [rbx+0x80],0xf
   14001b817:	je     0x14001b0d0
   14001b81d:	mov    al,0x1
   14001b81f:	jmp    0x14001ba06
   14001b824:	lea    r8,[rip+0x7545]        # 0x140022d70
   14001b82b:	lea    rdx,[rip+0x71e6]        # 0x140022a18
   14001b832:	lea    rcx,[rsp+0x180]
   14001b83a:	xor    r9d,r9d
   14001b83d:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14001b845:	call   QWORD PTR [rip+0x4bfd]        # 0x140020448
   14001b84b:	lea    rcx,[rbp+0x18]
   14001b84f:	mov    rdx,rax
   14001b852:	call   QWORD PTR [rip+0x4d10]        # 0x140020568
   14001b858:	lea    rcx,[rsp+0x180]
   14001b860:	call   QWORD PTR [rip+0x4f1a]        # 0x140020780
   14001b866:	mov    edx,DWORD PTR [rbx+0x88]
   14001b86c:	mov    DWORD PTR [rbp+0xc],edx
   14001b86f:	jmp    0x14001b9d3
   14001b874:	lea    r8,[rip+0x718d]        # 0x140022a08
   14001b87b:	lea    rdx,[rip+0x7196]        # 0x140022a18
   14001b882:	lea    rcx,[rsp+0x180]
   14001b88a:	xor    r9d,r9d
   14001b88d:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14001b895:	call   QWORD PTR [rip+0x4bad]        # 0x140020448
   14001b89b:	lea    rcx,[rbp+0x18]
   14001b89f:	mov    rdx,rax
   14001b8a2:	call   QWORD PTR [rip+0x4cc0]        # 0x140020568
   14001b8a8:	lea    rcx,[rsp+0x180]
   14001b8b0:	call   QWORD PTR [rip+0x4eca]        # 0x140020780
   14001b8b6:	mov    edx,DWORD PTR [rbx+0x88]
   14001b8bc:	mov    DWORD PTR [rbp+0xc],edx
   14001b8bf:	mov    rax,QWORD PTR [rbx+0x50]
   14001b8c3:	sub    rax,QWORD PTR [rbx+0x48]
   14001b8c7:	sar    rax,1
   14001b8ca:	inc    eax
   14001b8cc:	mov    DWORD PTR [rbp+0x10],eax
   14001b8cf:	jmp    0x14001b9f9
   14001b8d4:	lea    r8,[rip+0x7475]        # 0x140022d50
   14001b8db:	lea    rdx,[rip+0x7136]        # 0x140022a18
   14001b8e2:	lea    rcx,[rsp+0x180]
   14001b8ea:	xor    r9d,r9d
   14001b8ed:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14001b8f5:	call   QWORD PTR [rip+0x4b4d]        # 0x140020448
   14001b8fb:	lea    rcx,[rbp+0x18]
   14001b8ff:	mov    rdx,rax
   14001b902:	call   QWORD PTR [rip+0x4c60]        # 0x140020568
   14001b908:	lea    rcx,[rsp+0x180]
   14001b910:	call   QWORD PTR [rip+0x4e6a]        # 0x140020780
   14001b916:	mov    edx,DWORD PTR [rbx+0x88]
   14001b91c:	lea    rcx,[rsp+0x48]
   14001b921:	mov    DWORD PTR [rbp+0xc],edx
   14001b924:	mov    rax,QWORD PTR [rbx+0x50]
   14001b928:	sub    rax,QWORD PTR [rbx+0x48]
   14001b92c:	sar    rax,1
   14001b92f:	inc    eax
   14001b931:	mov    DWORD PTR [rbp+0x10],eax
   14001b934:	call   QWORD PTR [rip+0x4e46]        # 0x140020780
   14001b93a:	jmp    0x14001b9e3
   14001b93f:	test   r14b,r14b
   14001b942:	je     0x14001b988
   14001b944:	lea    r8,[rip+0x73dd]        # 0x140022d28
   14001b94b:	lea    rdx,[rip+0x70c6]        # 0x140022a18
   14001b952:	lea    rcx,[rsp+0x180]
   14001b95a:	xor    r9d,r9d
   14001b95d:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14001b965:	call   QWORD PTR [rip+0x4add]        # 0x140020448
   14001b96b:	lea    rcx,[rbp+0x18]
   14001b96f:	mov    rdx,rax
   14001b972:	call   QWORD PTR [rip+0x4bf0]        # 0x140020568
   14001b978:	lea    rcx,[rsp+0x180]
   14001b980:	call   QWORD PTR [rip+0x4dfa]        # 0x140020780
   14001b986:	jmp    0x14001b9ca
   14001b988:	lea    r8,[rip+0x7371]        # 0x140022d00
   14001b98f:	lea    rdx,[rip+0x7082]        # 0x140022a18
   14001b996:	lea    rcx,[rsp+0x180]
   14001b99e:	xor    r9d,r9d
   14001b9a1:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14001b9a9:	call   QWORD PTR [rip+0x4a99]        # 0x140020448
   14001b9af:	lea    rcx,[rbp+0x18]
   14001b9b3:	mov    rdx,rax
   14001b9b6:	call   QWORD PTR [rip+0x4bac]        # 0x140020568
   14001b9bc:	lea    rcx,[rsp+0x180]
   14001b9c4:	call   QWORD PTR [rip+0x4db6]        # 0x140020780
   14001b9ca:	mov    eax,DWORD PTR [rbx+0x88]
   14001b9d0:	mov    DWORD PTR [rbp+0xc],eax
   14001b9d3:	mov    rax,QWORD PTR [rbx+0x50]
   14001b9d7:	sub    rax,QWORD PTR [rbx+0x48]
   14001b9db:	sar    rax,1
   14001b9de:	inc    eax
   14001b9e0:	mov    DWORD PTR [rbp+0x10],eax
   14001b9e3:	lea    rcx,[rsp+0x40]
   14001b9e8:	call   QWORD PTR [rip+0x4d92]        # 0x140020780
   14001b9ee:	lea    rcx,[rsp+0x38]
   14001b9f3:	call   QWORD PTR [rip+0x4d87]        # 0x140020780
   14001b9f9:	lea    rcx,[rsp+0x30]
   14001b9fe:	call   QWORD PTR [rip+0x4d7c]        # 0x140020780
   14001ba04:	xor    al,al
   14001ba06:	mov    rdi,QWORD PTR [rsp+0x150]
   14001ba0e:	mov    r12,QWORD PTR [rsp+0x148]
   14001ba16:	mov    rsi,QWORD PTR [rsp+0x188]
   14001ba1e:	mov    r14,QWORD PTR [rsp+0x140]
   14001ba26:	add    rsp,0x158
   14001ba2d:	pop    r15
   14001ba2f:	pop    r13
   14001ba31:	pop    rbp
   14001ba32:	pop    rbx
   14001ba33:	ret    
   14001ba34:	test   r14b,r14b
   14001ba37:	je     0x14001ba7d
   14001ba39:	lea    r8,[rip+0x72e8]        # 0x140022d28
   14001ba40:	lea    rdx,[rip+0x6fd1]        # 0x140022a18
   14001ba47:	lea    rcx,[rsp+0x180]
   14001ba4f:	xor    r9d,r9d
   14001ba52:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14001ba5a:	call   QWORD PTR [rip+0x49e8]        # 0x140020448
   14001ba60:	lea    rcx,[rbp+0x18]
   14001ba64:	mov    rdx,rax
   14001ba67:	call   QWORD PTR [rip+0x4afb]        # 0x140020568
   14001ba6d:	lea    rcx,[rsp+0x180]
   14001ba75:	call   QWORD PTR [rip+0x4d05]        # 0x140020780
   14001ba7b:	jmp    0x14001babf
   14001ba7d:	lea    r8,[rip+0x727c]        # 0x140022d00
   14001ba84:	lea    rdx,[rip+0x6f8d]        # 0x140022a18
   14001ba8b:	lea    rcx,[rsp+0x180]
   14001ba93:	xor    r9d,r9d
   14001ba96:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14001ba9e:	call   QWORD PTR [rip+0x49a4]        # 0x140020448
   14001baa4:	lea    rcx,[rbp+0x18]
   14001baa8:	mov    rdx,rax
   14001baab:	call   QWORD PTR [rip+0x4ab7]        # 0x140020568
   14001bab1:	lea    rcx,[rsp+0x180]
   14001bab9:	call   QWORD PTR [rip+0x4cc1]        # 0x140020780
   14001babf:	mov    eax,DWORD PTR [rbx+0x88]
   14001bac5:	cmp    eax,esi
   14001bac7:	je     0x14001b9d0
   14001bacd:	mov    DWORD PTR [rbp+0xc],esi
   14001bad0:	mov    DWORD PTR [rbp+0x10],r12d
   14001bad4:	jmp    0x14001b9e3
   14001bad9:	int3   
   14001bada:	int3   
   14001badb:	int3   
   14001badc:	int3   
   14001badd:	int3   
   14001bade:	int3   
   14001badf:	int3   
   14001bae0:	xor    eax,eax
   14001bae2:	ret    
   14001bae3:	int3   
   14001bae4:	int3   
   14001bae5:	int3   
   14001bae6:	int3   
   14001bae7:	int3   
   14001bae8:	int3   
   14001bae9:	int3   
   14001baea:	int3   
   14001baeb:	int3   
   14001baec:	int3   
   14001baed:	int3   
   14001baee:	int3   
   14001baef:	int3   
   14001baf0:	mov    rax,rcx
   14001baf3:	ret    
   14001baf4:	int3   
   14001baf5:	int3   
   14001baf6:	int3   
   14001baf7:	int3   
   14001baf8:	int3   
   14001baf9:	int3   
   14001bafa:	int3   
   14001bafb:	int3   
   14001bafc:	int3   
   14001bafd:	int3   
   14001bafe:	int3   
   14001baff:	int3   
   14001bb00:	mov    QWORD PTR [rsp+0x10],rbx
   14001bb05:	push   rsi
   14001bb06:	sub    rsp,0x20
   14001bb0a:	mov    rax,QWORD PTR [rdx]
   14001bb0d:	mov    rbx,rdx
   14001bb10:	mov    rsi,rcx
   14001bb13:	mov    rdx,rcx
   14001bb16:	mov    rcx,rbx
   14001bb19:	call   QWORD PTR [rax+0x1f8]
   14001bb1f:	test   al,al
   14001bb21:	je     0x14001bb5e
   14001bb23:	mov    QWORD PTR [rsp+0x30],rdi
   14001bb28:	mov    rdi,QWORD PTR [rsi+0x10]
   14001bb2c:	test   rdi,rdi
   14001bb2f:	je     0x14001bb59
   14001bb31:	mov    rax,QWORD PTR [rbx]
   14001bb34:	mov    rdx,rdi
   14001bb37:	mov    rcx,rbx
   14001bb3a:	call   QWORD PTR [rax+0x8]
   14001bb3d:	test   al,al
   14001bb3f:	je     0x14001bb4d
   14001bb41:	mov    rax,QWORD PTR [rdi]
   14001bb44:	mov    rdx,rbx
   14001bb47:	mov    rcx,rdi
   14001bb4a:	call   QWORD PTR [rax+0x28]
   14001bb4d:	mov    rax,QWORD PTR [rbx]
   14001bb50:	mov    rdx,rdi
   14001bb53:	mov    rcx,rbx
   14001bb56:	call   QWORD PTR [rax+0x10]
   14001bb59:	mov    rdi,QWORD PTR [rsp+0x30]
   14001bb5e:	mov    rax,QWORD PTR [rbx]
   14001bb61:	mov    rdx,rsi
   14001bb64:	mov    rcx,rbx
   14001bb67:	mov    rbx,QWORD PTR [rsp+0x38]
   14001bb6c:	add    rsp,0x20
   14001bb70:	pop    rsi
   14001bb71:	rex.W jmp QWORD PTR [rax+0x4d8]
   14001bb78:	int3   
   14001bb79:	int3   
   14001bb7a:	int3   
   14001bb7b:	int3   
   14001bb7c:	int3   
   14001bb7d:	int3   
   14001bb7e:	int3   
   14001bb7f:	int3   
   14001bb80:	mov    QWORD PTR [rsp+0x8],rbx
   14001bb85:	push   rdi
   14001bb86:	sub    rsp,0x20
   14001bb8a:	mov    rax,QWORD PTR [rdx]
   14001bb8d:	mov    rdi,rdx
   14001bb90:	mov    rbx,rcx
   14001bb93:	mov    rdx,rcx
   14001bb96:	mov    rcx,rdi
   14001bb99:	call   QWORD PTR [rax+0x270]
   14001bb9f:	mov    r11,QWORD PTR [rdi]
   14001bba2:	mov    rdx,rbx
   14001bba5:	mov    rcx,rdi
   14001bba8:	mov    rbx,QWORD PTR [rsp+0x30]
   14001bbad:	add    rsp,0x20
   14001bbb1:	pop    rdi
   14001bbb2:	rex.WB jmp QWORD PTR [r11+0x550]
   14001bbb9:	int3   
   14001bbba:	int3   
   14001bbbb:	int3   
   14001bbbc:	int3   
   14001bbbd:	int3   
   14001bbbe:	int3   
   14001bbbf:	int3   
   14001bbc0:	mov    QWORD PTR [rsp+0x8],rbx
   14001bbc5:	push   rdi
   14001bbc6:	sub    rsp,0x20
   14001bbca:	mov    rax,QWORD PTR [rdx]
   14001bbcd:	mov    rdi,rdx
   14001bbd0:	mov    rbx,rcx
   14001bbd3:	mov    rdx,rcx
   14001bbd6:	mov    rcx,rdi
   14001bbd9:	call   QWORD PTR [rax+0x268]
   14001bbdf:	mov    r11,QWORD PTR [rdi]
   14001bbe2:	mov    rdx,rbx
   14001bbe5:	mov    rcx,rdi
   14001bbe8:	mov    rbx,QWORD PTR [rsp+0x30]
   14001bbed:	add    rsp,0x20
   14001bbf1:	pop    rdi
   14001bbf2:	rex.WB jmp QWORD PTR [r11+0x548]
   14001bbf9:	int3   
   14001bbfa:	int3   
   14001bbfb:	int3   
   14001bbfc:	int3   
   14001bbfd:	int3   
   14001bbfe:	int3   
   14001bbff:	int3   
   14001bc00:	mov    QWORD PTR [rsp+0x8],rbx
   14001bc05:	push   rdi
   14001bc06:	sub    rsp,0x20
   14001bc0a:	mov    rax,QWORD PTR [rdx]
   14001bc0d:	mov    rdi,rdx
   14001bc10:	mov    rbx,rcx
   14001bc13:	mov    rdx,rcx
   14001bc16:	mov    rcx,rdi
   14001bc19:	call   QWORD PTR [rax+0x260]
   14001bc1f:	mov    r11,QWORD PTR [rdi]
   14001bc22:	mov    rdx,rbx
   14001bc25:	mov    rcx,rdi
   14001bc28:	mov    rbx,QWORD PTR [rsp+0x30]
   14001bc2d:	add    rsp,0x20
   14001bc31:	pop    rdi
   14001bc32:	rex.WB jmp QWORD PTR [r11+0x540]
   14001bc39:	int3   
   14001bc3a:	int3   
   14001bc3b:	int3   
   14001bc3c:	int3   
   14001bc3d:	int3   
   14001bc3e:	int3   
   14001bc3f:	int3   
   14001bc40:	mov    QWORD PTR [rsp+0x8],rbx
   14001bc45:	push   rdi
   14001bc46:	sub    rsp,0x20
   14001bc4a:	mov    rax,QWORD PTR [rdx]
   14001bc4d:	mov    rdi,rdx
   14001bc50:	mov    rbx,rcx
   14001bc53:	mov    rdx,rcx
   14001bc56:	mov    rcx,rdi
   14001bc59:	call   QWORD PTR [rax+0x258]
   14001bc5f:	mov    r11,QWORD PTR [rdi]
   14001bc62:	mov    rdx,rbx
   14001bc65:	mov    rcx,rdi
   14001bc68:	mov    rbx,QWORD PTR [rsp+0x30]
   14001bc6d:	add    rsp,0x20
   14001bc71:	pop    rdi
   14001bc72:	rex.WB jmp QWORD PTR [r11+0x538]
   14001bc79:	int3   
   14001bc7a:	int3   
   14001bc7b:	int3   
   14001bc7c:	int3   
   14001bc7d:	int3   
   14001bc7e:	int3   
   14001bc7f:	int3   
   14001bc80:	mov    QWORD PTR [rsp+0x8],rbx
   14001bc85:	push   rdi
   14001bc86:	sub    rsp,0x20
   14001bc8a:	mov    rax,QWORD PTR [rdx]
   14001bc8d:	mov    rdi,rdx
   14001bc90:	mov    rbx,rcx
   14001bc93:	mov    rdx,rcx
   14001bc96:	mov    rcx,rdi
   14001bc99:	call   QWORD PTR [rax+0x250]
   14001bc9f:	mov    r11,QWORD PTR [rdi]
   14001bca2:	mov    rdx,rbx
   14001bca5:	mov    rcx,rdi
   14001bca8:	mov    rbx,QWORD PTR [rsp+0x30]
   14001bcad:	add    rsp,0x20
   14001bcb1:	pop    rdi
   14001bcb2:	rex.WB jmp QWORD PTR [r11+0x530]
   14001bcb9:	int3   
   14001bcba:	int3   
   14001bcbb:	int3   
   14001bcbc:	int3   
   14001bcbd:	int3   
   14001bcbe:	int3   
   14001bcbf:	int3   
   14001bcc0:	mov    QWORD PTR [rsp+0x8],rbx
   14001bcc5:	push   rdi
   14001bcc6:	sub    rsp,0x20
   14001bcca:	mov    rax,QWORD PTR [rdx]
   14001bccd:	mov    rdi,rdx
   14001bcd0:	mov    rbx,rcx
   14001bcd3:	mov    rdx,rcx
   14001bcd6:	mov    rcx,rdi
   14001bcd9:	call   QWORD PTR [rax+0x248]
   14001bcdf:	mov    r11,QWORD PTR [rdi]
   14001bce2:	mov    rdx,rbx
   14001bce5:	mov    rcx,rdi
   14001bce8:	mov    rbx,QWORD PTR [rsp+0x30]
   14001bced:	add    rsp,0x20
   14001bcf1:	pop    rdi
   14001bcf2:	rex.WB jmp QWORD PTR [r11+0x528]
   14001bcf9:	int3   
   14001bcfa:	int3   
   14001bcfb:	int3   
   14001bcfc:	int3   
   14001bcfd:	int3   
   14001bcfe:	int3   
   14001bcff:	int3   
   14001bd00:	mov    QWORD PTR [rsp+0x8],rbx
   14001bd05:	push   rdi
   14001bd06:	sub    rsp,0x20
   14001bd0a:	mov    rax,QWORD PTR [rdx]
   14001bd0d:	mov    rdi,rdx
   14001bd10:	mov    rbx,rcx
   14001bd13:	mov    rdx,rcx
   14001bd16:	mov    rcx,rdi
   14001bd19:	call   QWORD PTR [rax+0x240]
   14001bd1f:	mov    r11,QWORD PTR [rdi]
   14001bd22:	mov    rdx,rbx
   14001bd25:	mov    rcx,rdi
   14001bd28:	mov    rbx,QWORD PTR [rsp+0x30]
   14001bd2d:	add    rsp,0x20
   14001bd31:	pop    rdi
   14001bd32:	rex.WB jmp QWORD PTR [r11+0x520]
   14001bd39:	int3   
   14001bd3a:	int3   
   14001bd3b:	int3   
   14001bd3c:	int3   
   14001bd3d:	int3   
   14001bd3e:	int3   
   14001bd3f:	int3   
   14001bd40:	mov    QWORD PTR [rsp+0x8],rbx
   14001bd45:	push   rdi
   14001bd46:	sub    rsp,0x20
   14001bd4a:	mov    rax,QWORD PTR [rdx]
   14001bd4d:	mov    rdi,rdx
   14001bd50:	mov    rbx,rcx
   14001bd53:	mov    rdx,rcx
   14001bd56:	mov    rcx,rdi
   14001bd59:	call   QWORD PTR [rax+0x238]
   14001bd5f:	mov    r11,QWORD PTR [rdi]
   14001bd62:	mov    rdx,rbx
   14001bd65:	mov    rcx,rdi
   14001bd68:	mov    rbx,QWORD PTR [rsp+0x30]
   14001bd6d:	add    rsp,0x20
   14001bd71:	pop    rdi
   14001bd72:	rex.WB jmp QWORD PTR [r11+0x518]
   14001bd79:	int3   
   14001bd7a:	int3   
   14001bd7b:	int3   
   14001bd7c:	int3   
   14001bd7d:	int3   
   14001bd7e:	int3   
   14001bd7f:	int3   
   14001bd80:	mov    QWORD PTR [rsp+0x10],rbx
   14001bd85:	push   rsi
   14001bd86:	sub    rsp,0x20
   14001bd8a:	mov    rax,QWORD PTR [rdx]
   14001bd8d:	mov    rbx,rdx
   14001bd90:	mov    rsi,rcx
   14001bd93:	mov    rdx,rcx
   14001bd96:	mov    rcx,rbx
   14001bd99:	call   QWORD PTR [rax+0x230]
   14001bd9f:	test   al,al
   14001bda1:	je     0x14001be0f
   14001bda3:	mov    QWORD PTR [rsp+0x30],rdi
   14001bda8:	mov    rdi,QWORD PTR [rsi+0x10]
   14001bdac:	test   rdi,rdi
   14001bdaf:	je     0x14001bdd9
   14001bdb1:	mov    rax,QWORD PTR [rbx]
   14001bdb4:	mov    rdx,rdi
   14001bdb7:	mov    rcx,rbx
   14001bdba:	call   QWORD PTR [rax+0x8]
   14001bdbd:	test   al,al
   14001bdbf:	je     0x14001bdcd
   14001bdc1:	mov    rax,QWORD PTR [rdi]
   14001bdc4:	mov    rdx,rbx
   14001bdc7:	mov    rcx,rdi
   14001bdca:	call   QWORD PTR [rax+0x28]
   14001bdcd:	mov    rax,QWORD PTR [rbx]
   14001bdd0:	mov    rdx,rdi
   14001bdd3:	mov    rcx,rbx
   14001bdd6:	call   QWORD PTR [rax+0x10]
   14001bdd9:	mov    rdi,QWORD PTR [rsi+0x18]
   14001bddd:	test   rdi,rdi
   14001bde0:	je     0x14001be0a
   14001bde2:	mov    rax,QWORD PTR [rbx]
   14001bde5:	mov    rdx,rdi
   14001bde8:	mov    rcx,rbx
   14001bdeb:	call   QWORD PTR [rax+0x8]
   14001bdee:	test   al,al
   14001bdf0:	je     0x14001bdfe
   14001bdf2:	mov    rax,QWORD PTR [rdi]
   14001bdf5:	mov    rdx,rbx
   14001bdf8:	mov    rcx,rdi
   14001bdfb:	call   QWORD PTR [rax+0x28]
   14001bdfe:	mov    rax,QWORD PTR [rbx]
   14001be01:	mov    rdx,rdi
   14001be04:	mov    rcx,rbx
   14001be07:	call   QWORD PTR [rax+0x10]
   14001be0a:	mov    rdi,QWORD PTR [rsp+0x30]
   14001be0f:	mov    rax,QWORD PTR [rbx]
   14001be12:	mov    rdx,rsi
   14001be15:	mov    rcx,rbx
   14001be18:	mov    rbx,QWORD PTR [rsp+0x38]
   14001be1d:	add    rsp,0x20
   14001be21:	pop    rsi
   14001be22:	rex.W jmp QWORD PTR [rax+0x510]
   14001be29:	int3   
   14001be2a:	int3   
   14001be2b:	int3   
   14001be2c:	int3   
   14001be2d:	int3   
   14001be2e:	int3   
   14001be2f:	int3   
   14001be30:	mov    QWORD PTR [rsp+0x10],rbx
   14001be35:	push   rsi
   14001be36:	sub    rsp,0x20
   14001be3a:	mov    rax,QWORD PTR [rdx]
   14001be3d:	mov    rbx,rdx
   14001be40:	mov    rsi,rcx
   14001be43:	mov    rdx,rcx
   14001be46:	mov    rcx,rbx
   14001be49:	call   QWORD PTR [rax+0x228]
   14001be4f:	test   al,al
   14001be51:	je     0x14001be8e
   14001be53:	mov    QWORD PTR [rsp+0x30],rdi
   14001be58:	mov    rdi,QWORD PTR [rsi+0x10]
   14001be5c:	test   rdi,rdi
   14001be5f:	je     0x14001be89
   14001be61:	mov    rax,QWORD PTR [rbx]
   14001be64:	mov    rdx,rdi
   14001be67:	mov    rcx,rbx
   14001be6a:	call   QWORD PTR [rax+0x8]
   14001be6d:	test   al,al
   14001be6f:	je     0x14001be7d
   14001be71:	mov    rax,QWORD PTR [rdi]
   14001be74:	mov    rdx,rbx
   14001be77:	mov    rcx,rdi
   14001be7a:	call   QWORD PTR [rax+0x28]
   14001be7d:	mov    rax,QWORD PTR [rbx]
   14001be80:	mov    rdx,rdi
   14001be83:	mov    rcx,rbx
   14001be86:	call   QWORD PTR [rax+0x10]
   14001be89:	mov    rdi,QWORD PTR [rsp+0x30]
   14001be8e:	mov    rax,QWORD PTR [rbx]
   14001be91:	mov    rdx,rsi
   14001be94:	mov    rcx,rbx
   14001be97:	mov    rbx,QWORD PTR [rsp+0x38]
   14001be9c:	add    rsp,0x20
   14001bea0:	pop    rsi
   14001bea1:	rex.W jmp QWORD PTR [rax+0x508]
   14001bea8:	int3   
   14001bea9:	int3   
   14001beaa:	int3   
   14001beab:	int3   
   14001beac:	int3   
   14001bead:	int3   
   14001beae:	int3   
   14001beaf:	int3   
   14001beb0:	mov    QWORD PTR [rsp+0x18],rbp
   14001beb5:	push   rdi
   14001beb6:	sub    rsp,0x20
   14001beba:	mov    rax,QWORD PTR [rdx]
   14001bebd:	mov    rdi,rdx
   14001bec0:	mov    rbp,rcx
   14001bec3:	mov    rdx,rcx
   14001bec6:	mov    rcx,rdi
   14001bec9:	call   QWORD PTR [rax+0x220]
   14001becf:	test   al,al
   14001bed1:	je     0x14001bf65
   14001bed7:	mov    QWORD PTR [rsp+0x30],rbx
   14001bedc:	mov    rbx,rbp
   14001bedf:	test   rbp,rbp
   14001bee2:	je     0x14001bf60
   14001bee4:	mov    QWORD PTR [rsp+0x38],rsi
   14001bee9:	nop    DWORD PTR [rax+0x0]
   14001bef0:	mov    rsi,QWORD PTR [rbx+0x10]
   14001bef4:	test   rsi,rsi
   14001bef7:	je     0x14001bf21
   14001bef9:	mov    rax,QWORD PTR [rdi]
   14001befc:	mov    rdx,rsi
   14001beff:	mov    rcx,rdi
   14001bf02:	call   QWORD PTR [rax+0x8]
   14001bf05:	test   al,al
   14001bf07:	je     0x14001bf15
   14001bf09:	mov    rax,QWORD PTR [rsi]
   14001bf0c:	mov    rdx,rdi
   14001bf0f:	mov    rcx,rsi
   14001bf12:	call   QWORD PTR [rax+0x28]
   14001bf15:	mov    rax,QWORD PTR [rdi]
   14001bf18:	mov    rdx,rsi
   14001bf1b:	mov    rcx,rdi
   14001bf1e:	call   QWORD PTR [rax+0x10]
   14001bf21:	mov    rsi,QWORD PTR [rbx+0x18]
   14001bf25:	test   rsi,rsi
   14001bf28:	je     0x14001bf52
   14001bf2a:	mov    rax,QWORD PTR [rdi]
   14001bf2d:	mov    rdx,rsi
   14001bf30:	mov    rcx,rdi
   14001bf33:	call   QWORD PTR [rax+0x8]
   14001bf36:	test   al,al
   14001bf38:	je     0x14001bf46
   14001bf3a:	mov    rax,QWORD PTR [rsi]
   14001bf3d:	mov    rdx,rdi
   14001bf40:	mov    rcx,rsi
   14001bf43:	call   QWORD PTR [rax+0x28]
   14001bf46:	mov    rax,QWORD PTR [rdi]
   14001bf49:	mov    rdx,rsi
   14001bf4c:	mov    rcx,rdi
   14001bf4f:	call   QWORD PTR [rax+0x10]
   14001bf52:	mov    rbx,QWORD PTR [rbx+0x20]
   14001bf56:	test   rbx,rbx
   14001bf59:	jne    0x14001bef0
   14001bf5b:	mov    rsi,QWORD PTR [rsp+0x38]
   14001bf60:	mov    rbx,QWORD PTR [rsp+0x30]
   14001bf65:	mov    rax,QWORD PTR [rdi]
   14001bf68:	mov    rdx,rbp
   14001bf6b:	mov    rcx,rdi
   14001bf6e:	mov    rbp,QWORD PTR [rsp+0x40]
   14001bf73:	add    rsp,0x20
   14001bf77:	pop    rdi
   14001bf78:	rex.W jmp QWORD PTR [rax+0x500]
   14001bf7f:	int3   
   14001bf80:	mov    QWORD PTR [rsp+0x8],rbx
   14001bf85:	push   rdi
   14001bf86:	sub    rsp,0x20
   14001bf8a:	mov    rax,QWORD PTR [rdx]
   14001bf8d:	mov    rdi,rdx
   14001bf90:	mov    rbx,rcx
   14001bf93:	mov    rdx,rcx
   14001bf96:	mov    rcx,rdi
   14001bf99:	call   QWORD PTR [rax+0x218]
   14001bf9f:	mov    r11,QWORD PTR [rdi]
   14001bfa2:	mov    rdx,rbx
   14001bfa5:	mov    rcx,rdi
   14001bfa8:	mov    rbx,QWORD PTR [rsp+0x30]
   14001bfad:	add    rsp,0x20
   14001bfb1:	pop    rdi
   14001bfb2:	rex.WB jmp QWORD PTR [r11+0x4f8]
   14001bfb9:	int3   
   14001bfba:	int3   
   14001bfbb:	int3   
   14001bfbc:	int3   
   14001bfbd:	int3   
   14001bfbe:	int3   
   14001bfbf:	int3   
   14001bfc0:	mov    QWORD PTR [rsp+0x10],rbx
   14001bfc5:	push   rsi
   14001bfc6:	sub    rsp,0x20
   14001bfca:	mov    rax,QWORD PTR [rdx]
   14001bfcd:	mov    rbx,rdx
   14001bfd0:	mov    rsi,rcx
   14001bfd3:	mov    rdx,rcx
   14001bfd6:	mov    rcx,rbx
   14001bfd9:	call   QWORD PTR [rax+0x208]
   14001bfdf:	test   al,al
   14001bfe1:	je     0x14001c04f
   14001bfe3:	mov    QWORD PTR [rsp+0x30],rdi
   14001bfe8:	mov    rdi,QWORD PTR [rsi+0x10]
   14001bfec:	test   rdi,rdi
   14001bfef:	je     0x14001c019
   14001bff1:	mov    rax,QWORD PTR [rbx]
   14001bff4:	mov    rdx,rdi
   14001bff7:	mov    rcx,rbx
   14001bffa:	call   QWORD PTR [rax+0x8]
   14001bffd:	test   al,al
   14001bfff:	je     0x14001c00d
   14001c001:	mov    rax,QWORD PTR [rdi]
   14001c004:	mov    rdx,rbx
   14001c007:	mov    rcx,rdi
   14001c00a:	call   QWORD PTR [rax+0x28]
   14001c00d:	mov    rax,QWORD PTR [rbx]
   14001c010:	mov    rdx,rdi
   14001c013:	mov    rcx,rbx
   14001c016:	call   QWORD PTR [rax+0x10]
   14001c019:	mov    rdi,QWORD PTR [rsi+0x28]
   14001c01d:	test   rdi,rdi
   14001c020:	je     0x14001c04a
   14001c022:	mov    rax,QWORD PTR [rbx]
   14001c025:	mov    rdx,rdi
   14001c028:	mov    rcx,rbx
   14001c02b:	call   QWORD PTR [rax+0x8]
   14001c02e:	test   al,al
   14001c030:	je     0x14001c03e
   14001c032:	mov    rax,QWORD PTR [rdi]
   14001c035:	mov    rdx,rbx
   14001c038:	mov    rcx,rdi
   14001c03b:	call   QWORD PTR [rax+0x28]
   14001c03e:	mov    rax,QWORD PTR [rbx]
   14001c041:	mov    rdx,rdi
   14001c044:	mov    rcx,rbx
   14001c047:	call   QWORD PTR [rax+0x10]
   14001c04a:	mov    rdi,QWORD PTR [rsp+0x30]
   14001c04f:	mov    rax,QWORD PTR [rbx]
   14001c052:	mov    rdx,rsi
   14001c055:	mov    rcx,rbx
   14001c058:	mov    rbx,QWORD PTR [rsp+0x38]
   14001c05d:	add    rsp,0x20
   14001c061:	pop    rsi
   14001c062:	rex.W jmp QWORD PTR [rax+0x4e8]
   14001c069:	int3   
   14001c06a:	int3   
   14001c06b:	int3   
   14001c06c:	int3   
   14001c06d:	int3   
   14001c06e:	int3   
   14001c06f:	int3   
   14001c070:	mov    QWORD PTR [rsp+0x10],rbx
   14001c075:	push   rsi
   14001c076:	sub    rsp,0x20
   14001c07a:	mov    rax,QWORD PTR [rdx]
   14001c07d:	mov    rbx,rdx
   14001c080:	mov    rsi,rcx
   14001c083:	mov    rdx,rcx
   14001c086:	mov    rcx,rbx
   14001c089:	call   QWORD PTR [rax+0x200]
   14001c08f:	test   al,al
   14001c091:	je     0x14001c134
   14001c097:	mov    QWORD PTR [rsp+0x30],rdi
   14001c09c:	mov    rdi,QWORD PTR [rsi+0x10]
   14001c0a0:	test   rdi,rdi
   14001c0a3:	je     0x14001c0cd
   14001c0a5:	mov    rax,QWORD PTR [rbx]
   14001c0a8:	mov    rdx,rdi
   14001c0ab:	mov    rcx,rbx
   14001c0ae:	call   QWORD PTR [rax+0x8]
   14001c0b1:	test   al,al
   14001c0b3:	je     0x14001c0c1
   14001c0b5:	mov    rax,QWORD PTR [rdi]
   14001c0b8:	mov    rdx,rbx
   14001c0bb:	mov    rcx,rdi
   14001c0be:	call   QWORD PTR [rax+0x28]
   14001c0c1:	mov    rax,QWORD PTR [rbx]
   14001c0c4:	mov    rdx,rdi
   14001c0c7:	mov    rcx,rbx
   14001c0ca:	call   QWORD PTR [rax+0x10]
   14001c0cd:	mov    rdi,QWORD PTR [rsi+0x40]
   14001c0d1:	test   rdi,rdi
   14001c0d4:	je     0x14001c0fe
   14001c0d6:	mov    rax,QWORD PTR [rbx]
   14001c0d9:	mov    rdx,rdi
   14001c0dc:	mov    rcx,rbx
   14001c0df:	call   QWORD PTR [rax+0x8]
   14001c0e2:	test   al,al
   14001c0e4:	je     0x14001c0f2
   14001c0e6:	mov    rax,QWORD PTR [rdi]
   14001c0e9:	mov    rdx,rbx
   14001c0ec:	mov    rcx,rdi
   14001c0ef:	call   QWORD PTR [rax+0x28]
   14001c0f2:	mov    rax,QWORD PTR [rbx]
   14001c0f5:	mov    rdx,rdi
   14001c0f8:	mov    rcx,rbx
   14001c0fb:	call   QWORD PTR [rax+0x10]
   14001c0fe:	mov    rdi,QWORD PTR [rsi+0x68]
   14001c102:	test   rdi,rdi
   14001c105:	je     0x14001c12f
   14001c107:	mov    rax,QWORD PTR [rbx]
   14001c10a:	mov    rdx,rdi
   14001c10d:	mov    rcx,rbx
   14001c110:	call   QWORD PTR [rax+0x8]
   14001c113:	test   al,al
   14001c115:	je     0x14001c123
   14001c117:	mov    rax,QWORD PTR [rdi]
   14001c11a:	mov    rdx,rbx
   14001c11d:	mov    rcx,rdi
   14001c120:	call   QWORD PTR [rax+0x28]
   14001c123:	mov    rax,QWORD PTR [rbx]
   14001c126:	mov    rdx,rdi
   14001c129:	mov    rcx,rbx
   14001c12c:	call   QWORD PTR [rax+0x10]
   14001c12f:	mov    rdi,QWORD PTR [rsp+0x30]
   14001c134:	mov    rax,QWORD PTR [rbx]
   14001c137:	mov    rdx,rsi
   14001c13a:	mov    rcx,rbx
   14001c13d:	mov    rbx,QWORD PTR [rsp+0x38]
   14001c142:	add    rsp,0x20
   14001c146:	pop    rsi
   14001c147:	rex.W jmp QWORD PTR [rax+0x4e0]
   14001c14e:	int3   
   14001c14f:	int3   
   14001c150:	mov    QWORD PTR [rsp+0x18],rbp
   14001c155:	push   rsi
   14001c156:	sub    rsp,0x20
   14001c15a:	mov    rax,QWORD PTR [rdx]
   14001c15d:	mov    rsi,rdx
   14001c160:	mov    rbp,rcx
   14001c163:	mov    rdx,rcx
   14001c166:	mov    rcx,rsi
   14001c169:	call   QWORD PTR [rax+0x210]
   14001c16f:	test   al,al
   14001c171:	je     0x14001c1c9
   14001c173:	mov    QWORD PTR [rsp+0x30],rbx
   14001c178:	mov    rbx,rbp
   14001c17b:	test   rbp,rbp
   14001c17e:	je     0x14001c1c4
   14001c180:	mov    QWORD PTR [rsp+0x38],rdi
   14001c185:	mov    rdi,QWORD PTR [rbx+0x10]
   14001c189:	test   rdi,rdi
   14001c18c:	je     0x14001c1b6
   14001c18e:	mov    rax,QWORD PTR [rsi]
   14001c191:	mov    rdx,rdi
   14001c194:	mov    rcx,rsi
   14001c197:	call   QWORD PTR [rax+0x8]
   14001c19a:	test   al,al
   14001c19c:	je     0x14001c1aa
   14001c19e:	mov    rax,QWORD PTR [rdi]
   14001c1a1:	mov    rdx,rsi
   14001c1a4:	mov    rcx,rdi
   14001c1a7:	call   QWORD PTR [rax+0x28]
   14001c1aa:	mov    rax,QWORD PTR [rsi]
   14001c1ad:	mov    rdx,rdi
   14001c1b0:	mov    rcx,rsi
   14001c1b3:	call   QWORD PTR [rax+0x10]
   14001c1b6:	mov    rbx,QWORD PTR [rbx+0x18]
   14001c1ba:	test   rbx,rbx
   14001c1bd:	jne    0x14001c185
   14001c1bf:	mov    rdi,QWORD PTR [rsp+0x38]
   14001c1c4:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c1c9:	mov    rax,QWORD PTR [rsi]
   14001c1cc:	mov    rdx,rbp
   14001c1cf:	mov    rcx,rsi
   14001c1d2:	mov    rbp,QWORD PTR [rsp+0x40]
   14001c1d7:	add    rsp,0x20
   14001c1db:	pop    rsi
   14001c1dc:	rex.W jmp QWORD PTR [rax+0x4f0]
   14001c1e3:	int3   
   14001c1e4:	int3   
   14001c1e5:	int3   
   14001c1e6:	int3   
   14001c1e7:	int3   
   14001c1e8:	int3   
   14001c1e9:	int3   
   14001c1ea:	int3   
   14001c1eb:	int3   
   14001c1ec:	int3   
   14001c1ed:	int3   
   14001c1ee:	int3   
   14001c1ef:	int3   
   14001c1f0:	mov    QWORD PTR [rsp+0x8],rbx
   14001c1f5:	push   rdi
   14001c1f6:	sub    rsp,0x20
   14001c1fa:	mov    rax,QWORD PTR [rdx]
   14001c1fd:	mov    rdi,rdx
   14001c200:	mov    rbx,rcx
   14001c203:	mov    rdx,rcx
   14001c206:	mov    rcx,rdi
   14001c209:	call   QWORD PTR [rax+0x1f0]
   14001c20f:	mov    r11,QWORD PTR [rdi]
   14001c212:	mov    rdx,rbx
   14001c215:	mov    rcx,rdi
   14001c218:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c21d:	add    rsp,0x20
   14001c221:	pop    rdi
   14001c222:	rex.WB jmp QWORD PTR [r11+0x4d0]
   14001c229:	int3   
   14001c22a:	int3   
   14001c22b:	int3   
   14001c22c:	int3   
   14001c22d:	int3   
   14001c22e:	int3   
   14001c22f:	int3   
   14001c230:	mov    QWORD PTR [rsp+0x8],rbx
   14001c235:	push   rdi
   14001c236:	sub    rsp,0x20
   14001c23a:	mov    rax,QWORD PTR [rdx]
   14001c23d:	mov    rdi,rdx
   14001c240:	mov    rbx,rcx
   14001c243:	mov    rdx,rcx
   14001c246:	mov    rcx,rdi
   14001c249:	call   QWORD PTR [rax+0x1e8]
   14001c24f:	mov    r11,QWORD PTR [rdi]
   14001c252:	mov    rdx,rbx
   14001c255:	mov    rcx,rdi
   14001c258:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c25d:	add    rsp,0x20
   14001c261:	pop    rdi
   14001c262:	rex.WB jmp QWORD PTR [r11+0x4c8]
   14001c269:	int3   
   14001c26a:	int3   
   14001c26b:	int3   
   14001c26c:	int3   
   14001c26d:	int3   
   14001c26e:	int3   
   14001c26f:	int3   
   14001c270:	mov    QWORD PTR [rsp+0x8],rbx
   14001c275:	push   rdi
   14001c276:	sub    rsp,0x20
   14001c27a:	mov    rax,QWORD PTR [rdx]
   14001c27d:	mov    rdi,rdx
   14001c280:	mov    rbx,rcx
   14001c283:	mov    rdx,rcx
   14001c286:	mov    rcx,rdi
   14001c289:	call   QWORD PTR [rax+0x1e0]
   14001c28f:	mov    r11,QWORD PTR [rdi]
   14001c292:	mov    rdx,rbx
   14001c295:	mov    rcx,rdi
   14001c298:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c29d:	add    rsp,0x20
   14001c2a1:	pop    rdi
   14001c2a2:	rex.WB jmp QWORD PTR [r11+0x4c0]
   14001c2a9:	int3   
   14001c2aa:	int3   
   14001c2ab:	int3   
   14001c2ac:	int3   
   14001c2ad:	int3   
   14001c2ae:	int3   
   14001c2af:	int3   
   14001c2b0:	mov    QWORD PTR [rsp+0x10],rbx
   14001c2b5:	push   rsi
   14001c2b6:	sub    rsp,0x20
   14001c2ba:	mov    rax,QWORD PTR [rdx]
   14001c2bd:	mov    rbx,rdx
   14001c2c0:	mov    rsi,rcx
   14001c2c3:	mov    rdx,rcx
   14001c2c6:	mov    rcx,rbx
   14001c2c9:	call   QWORD PTR [rax+0x1d8]
   14001c2cf:	test   al,al
   14001c2d1:	je     0x14001c33f
   14001c2d3:	mov    QWORD PTR [rsp+0x30],rdi
   14001c2d8:	mov    rdi,QWORD PTR [rsi+0x10]
   14001c2dc:	test   rdi,rdi
   14001c2df:	je     0x14001c309
   14001c2e1:	mov    rax,QWORD PTR [rbx]
   14001c2e4:	mov    rdx,rdi
   14001c2e7:	mov    rcx,rbx
   14001c2ea:	call   QWORD PTR [rax+0x8]
   14001c2ed:	test   al,al
   14001c2ef:	je     0x14001c2fd
   14001c2f1:	mov    rax,QWORD PTR [rdi]
   14001c2f4:	mov    rdx,rbx
   14001c2f7:	mov    rcx,rdi
   14001c2fa:	call   QWORD PTR [rax+0x28]
   14001c2fd:	mov    rax,QWORD PTR [rbx]
   14001c300:	mov    rdx,rdi
   14001c303:	mov    rcx,rbx
   14001c306:	call   QWORD PTR [rax+0x10]
   14001c309:	mov    rdi,QWORD PTR [rsi+0x18]
   14001c30d:	test   rdi,rdi
   14001c310:	je     0x14001c33a
   14001c312:	mov    rax,QWORD PTR [rbx]
   14001c315:	mov    rdx,rdi
   14001c318:	mov    rcx,rbx
   14001c31b:	call   QWORD PTR [rax+0x8]
   14001c31e:	test   al,al
   14001c320:	je     0x14001c32e
   14001c322:	mov    rax,QWORD PTR [rdi]
   14001c325:	mov    rdx,rbx
   14001c328:	mov    rcx,rdi
   14001c32b:	call   QWORD PTR [rax+0x28]
   14001c32e:	mov    rax,QWORD PTR [rbx]
   14001c331:	mov    rdx,rdi
   14001c334:	mov    rcx,rbx
   14001c337:	call   QWORD PTR [rax+0x10]
   14001c33a:	mov    rdi,QWORD PTR [rsp+0x30]
   14001c33f:	mov    rax,QWORD PTR [rbx]
   14001c342:	mov    rdx,rsi
   14001c345:	mov    rcx,rbx
   14001c348:	mov    rbx,QWORD PTR [rsp+0x38]
   14001c34d:	add    rsp,0x20
   14001c351:	pop    rsi
   14001c352:	rex.W jmp QWORD PTR [rax+0x4b8]
   14001c359:	int3   
   14001c35a:	int3   
   14001c35b:	int3   
   14001c35c:	int3   
   14001c35d:	int3   
   14001c35e:	int3   
   14001c35f:	int3   
   14001c360:	mov    QWORD PTR [rsp+0x10],rbx
   14001c365:	push   rsi
   14001c366:	sub    rsp,0x20
   14001c36a:	mov    rax,QWORD PTR [rdx]
   14001c36d:	mov    rbx,rdx
   14001c370:	mov    rsi,rcx
   14001c373:	mov    rdx,rcx
   14001c376:	mov    rcx,rbx
   14001c379:	call   QWORD PTR [rax+0x1d0]
   14001c37f:	test   al,al
   14001c381:	je     0x14001c3be
   14001c383:	mov    QWORD PTR [rsp+0x30],rdi
   14001c388:	mov    rdi,QWORD PTR [rsi+0x10]
   14001c38c:	test   rdi,rdi
   14001c38f:	je     0x14001c3b9
   14001c391:	mov    rax,QWORD PTR [rbx]
   14001c394:	mov    rdx,rdi
   14001c397:	mov    rcx,rbx
   14001c39a:	call   QWORD PTR [rax+0x8]
   14001c39d:	test   al,al
   14001c39f:	je     0x14001c3ad
   14001c3a1:	mov    rax,QWORD PTR [rdi]
   14001c3a4:	mov    rdx,rbx
   14001c3a7:	mov    rcx,rdi
   14001c3aa:	call   QWORD PTR [rax+0x28]
   14001c3ad:	mov    rax,QWORD PTR [rbx]
   14001c3b0:	mov    rdx,rdi
   14001c3b3:	mov    rcx,rbx
   14001c3b6:	call   QWORD PTR [rax+0x10]
   14001c3b9:	mov    rdi,QWORD PTR [rsp+0x30]
   14001c3be:	mov    rax,QWORD PTR [rbx]
   14001c3c1:	mov    rdx,rsi
   14001c3c4:	mov    rcx,rbx
   14001c3c7:	mov    rbx,QWORD PTR [rsp+0x38]
   14001c3cc:	add    rsp,0x20
   14001c3d0:	pop    rsi
   14001c3d1:	rex.W jmp QWORD PTR [rax+0x4b0]
   14001c3d8:	int3   
   14001c3d9:	int3   
   14001c3da:	int3   
   14001c3db:	int3   
   14001c3dc:	int3   
   14001c3dd:	int3   
   14001c3de:	int3   
   14001c3df:	int3   
   14001c3e0:	mov    QWORD PTR [rsp+0x10],rbx
   14001c3e5:	push   rsi
   14001c3e6:	sub    rsp,0x20
   14001c3ea:	mov    rax,QWORD PTR [rdx]
   14001c3ed:	mov    rbx,rdx
   14001c3f0:	mov    rsi,rcx
   14001c3f3:	mov    rdx,rcx
   14001c3f6:	mov    rcx,rbx
   14001c3f9:	call   QWORD PTR [rax+0x1c8]
   14001c3ff:	test   al,al
   14001c401:	je     0x14001c46f
   14001c403:	mov    QWORD PTR [rsp+0x30],rdi
   14001c408:	mov    rdi,QWORD PTR [rsi+0x10]
   14001c40c:	test   rdi,rdi
   14001c40f:	je     0x14001c439
   14001c411:	mov    rax,QWORD PTR [rbx]
   14001c414:	mov    rdx,rdi
   14001c417:	mov    rcx,rbx
   14001c41a:	call   QWORD PTR [rax+0x8]
   14001c41d:	test   al,al
   14001c41f:	je     0x14001c42d
   14001c421:	mov    rax,QWORD PTR [rdi]
   14001c424:	mov    rdx,rbx
   14001c427:	mov    rcx,rdi
   14001c42a:	call   QWORD PTR [rax+0x28]
   14001c42d:	mov    rax,QWORD PTR [rbx]
   14001c430:	mov    rdx,rdi
   14001c433:	mov    rcx,rbx
   14001c436:	call   QWORD PTR [rax+0x10]
   14001c439:	mov    rdi,QWORD PTR [rsi+0x18]
   14001c43d:	test   rdi,rdi
   14001c440:	je     0x14001c46a
   14001c442:	mov    rax,QWORD PTR [rbx]
   14001c445:	mov    rdx,rdi
   14001c448:	mov    rcx,rbx
   14001c44b:	call   QWORD PTR [rax+0x8]
   14001c44e:	test   al,al
   14001c450:	je     0x14001c45e
   14001c452:	mov    rax,QWORD PTR [rdi]
   14001c455:	mov    rdx,rbx
   14001c458:	mov    rcx,rdi
   14001c45b:	call   QWORD PTR [rax+0x28]
   14001c45e:	mov    rax,QWORD PTR [rbx]
   14001c461:	mov    rdx,rdi
   14001c464:	mov    rcx,rbx
   14001c467:	call   QWORD PTR [rax+0x10]
   14001c46a:	mov    rdi,QWORD PTR [rsp+0x30]
   14001c46f:	mov    rax,QWORD PTR [rbx]
   14001c472:	mov    rdx,rsi
   14001c475:	mov    rcx,rbx
   14001c478:	mov    rbx,QWORD PTR [rsp+0x38]
   14001c47d:	add    rsp,0x20
   14001c481:	pop    rsi
   14001c482:	rex.W jmp QWORD PTR [rax+0x4a8]
   14001c489:	int3   
   14001c48a:	int3   
   14001c48b:	int3   
   14001c48c:	int3   
   14001c48d:	int3   
   14001c48e:	int3   
   14001c48f:	int3   
   14001c490:	mov    QWORD PTR [rsp+0x10],rbx
   14001c495:	push   rsi
   14001c496:	sub    rsp,0x20
   14001c49a:	mov    rax,QWORD PTR [rdx]
   14001c49d:	mov    rbx,rdx
   14001c4a0:	mov    rsi,rcx
   14001c4a3:	mov    rdx,rcx
   14001c4a6:	mov    rcx,rbx
   14001c4a9:	call   QWORD PTR [rax+0x1c0]
   14001c4af:	test   al,al
   14001c4b1:	je     0x14001c4ee
   14001c4b3:	mov    QWORD PTR [rsp+0x30],rdi
   14001c4b8:	mov    rdi,QWORD PTR [rsi+0x10]
   14001c4bc:	test   rdi,rdi
   14001c4bf:	je     0x14001c4e9
   14001c4c1:	mov    rax,QWORD PTR [rbx]
   14001c4c4:	mov    rdx,rdi
   14001c4c7:	mov    rcx,rbx
   14001c4ca:	call   QWORD PTR [rax+0x8]
   14001c4cd:	test   al,al
   14001c4cf:	je     0x14001c4dd
   14001c4d1:	mov    rax,QWORD PTR [rdi]
   14001c4d4:	mov    rdx,rbx
   14001c4d7:	mov    rcx,rdi
   14001c4da:	call   QWORD PTR [rax+0x28]
   14001c4dd:	mov    rax,QWORD PTR [rbx]
   14001c4e0:	mov    rdx,rdi
   14001c4e3:	mov    rcx,rbx
   14001c4e6:	call   QWORD PTR [rax+0x10]
   14001c4e9:	mov    rdi,QWORD PTR [rsp+0x30]
   14001c4ee:	mov    rax,QWORD PTR [rbx]
   14001c4f1:	mov    rdx,rsi
   14001c4f4:	mov    rcx,rbx
   14001c4f7:	mov    rbx,QWORD PTR [rsp+0x38]
   14001c4fc:	add    rsp,0x20
   14001c500:	pop    rsi
   14001c501:	rex.W jmp QWORD PTR [rax+0x4a0]
   14001c508:	int3   
   14001c509:	int3   
   14001c50a:	int3   
   14001c50b:	int3   
   14001c50c:	int3   
   14001c50d:	int3   
   14001c50e:	int3   
   14001c50f:	int3   
   14001c510:	mov    QWORD PTR [rsp+0x10],rbx
   14001c515:	push   rsi
   14001c516:	sub    rsp,0x20
   14001c51a:	mov    rax,QWORD PTR [rdx]
   14001c51d:	mov    rbx,rdx
   14001c520:	mov    rsi,rcx
   14001c523:	mov    rdx,rcx
   14001c526:	mov    rcx,rbx
   14001c529:	call   QWORD PTR [rax+0x1b8]
   14001c52f:	test   al,al
   14001c531:	je     0x14001c59f
   14001c533:	mov    QWORD PTR [rsp+0x30],rdi
   14001c538:	mov    rdi,QWORD PTR [rsi+0x10]
   14001c53c:	test   rdi,rdi
   14001c53f:	je     0x14001c569
   14001c541:	mov    rax,QWORD PTR [rbx]
   14001c544:	mov    rdx,rdi
   14001c547:	mov    rcx,rbx
   14001c54a:	call   QWORD PTR [rax+0x8]
   14001c54d:	test   al,al
   14001c54f:	je     0x14001c55d
   14001c551:	mov    rax,QWORD PTR [rdi]
   14001c554:	mov    rdx,rbx
   14001c557:	mov    rcx,rdi
   14001c55a:	call   QWORD PTR [rax+0x28]
   14001c55d:	mov    rax,QWORD PTR [rbx]
   14001c560:	mov    rdx,rdi
   14001c563:	mov    rcx,rbx
   14001c566:	call   QWORD PTR [rax+0x10]
   14001c569:	mov    rdi,QWORD PTR [rsi+0x18]
   14001c56d:	test   rdi,rdi
   14001c570:	je     0x14001c59a
   14001c572:	mov    rax,QWORD PTR [rbx]
   14001c575:	mov    rdx,rdi
   14001c578:	mov    rcx,rbx
   14001c57b:	call   QWORD PTR [rax+0x8]
   14001c57e:	test   al,al
   14001c580:	je     0x14001c58e
   14001c582:	mov    rax,QWORD PTR [rdi]
   14001c585:	mov    rdx,rbx
   14001c588:	mov    rcx,rdi
   14001c58b:	call   QWORD PTR [rax+0x28]
   14001c58e:	mov    rax,QWORD PTR [rbx]
   14001c591:	mov    rdx,rdi
   14001c594:	mov    rcx,rbx
   14001c597:	call   QWORD PTR [rax+0x10]
   14001c59a:	mov    rdi,QWORD PTR [rsp+0x30]
   14001c59f:	mov    rax,QWORD PTR [rbx]
   14001c5a2:	mov    rdx,rsi
   14001c5a5:	mov    rcx,rbx
   14001c5a8:	mov    rbx,QWORD PTR [rsp+0x38]
   14001c5ad:	add    rsp,0x20
   14001c5b1:	pop    rsi
   14001c5b2:	rex.W jmp QWORD PTR [rax+0x498]
   14001c5b9:	int3   
   14001c5ba:	int3   
   14001c5bb:	int3   
   14001c5bc:	int3   
   14001c5bd:	int3   
   14001c5be:	int3   
   14001c5bf:	int3   
   14001c5c0:	mov    QWORD PTR [rsp+0x18],rbp
   14001c5c5:	push   rsi
   14001c5c6:	sub    rsp,0x20
   14001c5ca:	mov    rax,QWORD PTR [rdx]
   14001c5cd:	mov    rsi,rdx
   14001c5d0:	mov    rbp,rcx
   14001c5d3:	mov    rdx,rcx
   14001c5d6:	mov    rcx,rsi
   14001c5d9:	call   QWORD PTR [rax+0x1b0]
   14001c5df:	test   al,al
   14001c5e1:	je     0x14001c639
   14001c5e3:	mov    QWORD PTR [rsp+0x30],rbx
   14001c5e8:	mov    rbx,rbp
   14001c5eb:	test   rbp,rbp
   14001c5ee:	je     0x14001c634
   14001c5f0:	mov    QWORD PTR [rsp+0x38],rdi
   14001c5f5:	mov    rdi,QWORD PTR [rbx+0x10]
   14001c5f9:	test   rdi,rdi
   14001c5fc:	je     0x14001c626
   14001c5fe:	mov    rax,QWORD PTR [rsi]
   14001c601:	mov    rdx,rdi
   14001c604:	mov    rcx,rsi
   14001c607:	call   QWORD PTR [rax+0x8]
   14001c60a:	test   al,al
   14001c60c:	je     0x14001c61a
   14001c60e:	mov    rax,QWORD PTR [rdi]
   14001c611:	mov    rdx,rsi
   14001c614:	mov    rcx,rdi
   14001c617:	call   QWORD PTR [rax+0x28]
   14001c61a:	mov    rax,QWORD PTR [rsi]
   14001c61d:	mov    rdx,rdi
   14001c620:	mov    rcx,rsi
   14001c623:	call   QWORD PTR [rax+0x10]
   14001c626:	mov    rbx,QWORD PTR [rbx+0x18]
   14001c62a:	test   rbx,rbx
   14001c62d:	jne    0x14001c5f5
   14001c62f:	mov    rdi,QWORD PTR [rsp+0x38]
   14001c634:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c639:	mov    rax,QWORD PTR [rsi]
   14001c63c:	mov    rdx,rbp
   14001c63f:	mov    rcx,rsi
   14001c642:	mov    rbp,QWORD PTR [rsp+0x40]
   14001c647:	add    rsp,0x20
   14001c64b:	pop    rsi
   14001c64c:	rex.W jmp QWORD PTR [rax+0x490]
   14001c653:	int3   
   14001c654:	int3   
   14001c655:	int3   
   14001c656:	int3   
   14001c657:	int3   
   14001c658:	int3   
   14001c659:	int3   
   14001c65a:	int3   
   14001c65b:	int3   
   14001c65c:	int3   
   14001c65d:	int3   
   14001c65e:	int3   
   14001c65f:	int3   
   14001c660:	mov    QWORD PTR [rsp+0x10],rbx
   14001c665:	push   rsi
   14001c666:	sub    rsp,0x20
   14001c66a:	mov    rax,QWORD PTR [rdx]
   14001c66d:	mov    rbx,rdx
   14001c670:	mov    rsi,rcx
   14001c673:	mov    rdx,rcx
   14001c676:	mov    rcx,rbx
   14001c679:	call   QWORD PTR [rax+0x1a8]
   14001c67f:	test   al,al
   14001c681:	je     0x14001c6be
   14001c683:	mov    QWORD PTR [rsp+0x30],rdi
   14001c688:	mov    rdi,QWORD PTR [rsi+0x10]
   14001c68c:	test   rdi,rdi
   14001c68f:	je     0x14001c6b9
   14001c691:	mov    rax,QWORD PTR [rbx]
   14001c694:	mov    rdx,rdi
   14001c697:	mov    rcx,rbx
   14001c69a:	call   QWORD PTR [rax+0x8]
   14001c69d:	test   al,al
   14001c69f:	je     0x14001c6ad
   14001c6a1:	mov    rax,QWORD PTR [rdi]
   14001c6a4:	mov    rdx,rbx
   14001c6a7:	mov    rcx,rdi
   14001c6aa:	call   QWORD PTR [rax+0x28]
   14001c6ad:	mov    rax,QWORD PTR [rbx]
   14001c6b0:	mov    rdx,rdi
   14001c6b3:	mov    rcx,rbx
   14001c6b6:	call   QWORD PTR [rax+0x10]
   14001c6b9:	mov    rdi,QWORD PTR [rsp+0x30]
   14001c6be:	mov    rax,QWORD PTR [rbx]
   14001c6c1:	mov    rdx,rsi
   14001c6c4:	mov    rcx,rbx
   14001c6c7:	mov    rbx,QWORD PTR [rsp+0x38]
   14001c6cc:	add    rsp,0x20
   14001c6d0:	pop    rsi
   14001c6d1:	rex.W jmp QWORD PTR [rax+0x488]
   14001c6d8:	int3   
   14001c6d9:	int3   
   14001c6da:	int3   
   14001c6db:	int3   
   14001c6dc:	int3   
   14001c6dd:	int3   
   14001c6de:	int3   
   14001c6df:	int3   
   14001c6e0:	mov    QWORD PTR [rsp+0x10],rbx
   14001c6e5:	push   rsi
   14001c6e6:	sub    rsp,0x20
   14001c6ea:	mov    rax,QWORD PTR [rdx]
   14001c6ed:	mov    rbx,rdx
   14001c6f0:	mov    rsi,rcx
   14001c6f3:	mov    rdx,rcx
   14001c6f6:	mov    rcx,rbx
   14001c6f9:	call   QWORD PTR [rax+0x1a0]
   14001c6ff:	test   al,al
   14001c701:	je     0x14001c73e
   14001c703:	mov    QWORD PTR [rsp+0x30],rdi
   14001c708:	mov    rdi,QWORD PTR [rsi+0x10]
   14001c70c:	test   rdi,rdi
   14001c70f:	je     0x14001c739
   14001c711:	mov    rax,QWORD PTR [rbx]
   14001c714:	mov    rdx,rdi
   14001c717:	mov    rcx,rbx
   14001c71a:	call   QWORD PTR [rax+0x8]
   14001c71d:	test   al,al
   14001c71f:	je     0x14001c72d
   14001c721:	mov    rax,QWORD PTR [rdi]
   14001c724:	mov    rdx,rbx
   14001c727:	mov    rcx,rdi
   14001c72a:	call   QWORD PTR [rax+0x28]
   14001c72d:	mov    rax,QWORD PTR [rbx]
   14001c730:	mov    rdx,rdi
   14001c733:	mov    rcx,rbx
   14001c736:	call   QWORD PTR [rax+0x10]
   14001c739:	mov    rdi,QWORD PTR [rsp+0x30]
   14001c73e:	mov    rax,QWORD PTR [rbx]
   14001c741:	mov    rdx,rsi
   14001c744:	mov    rcx,rbx
   14001c747:	mov    rbx,QWORD PTR [rsp+0x38]
   14001c74c:	add    rsp,0x20
   14001c750:	pop    rsi
   14001c751:	rex.W jmp QWORD PTR [rax+0x480]
   14001c758:	int3   
   14001c759:	int3   
   14001c75a:	int3   
   14001c75b:	int3   
   14001c75c:	int3   
   14001c75d:	int3   
   14001c75e:	int3   
   14001c75f:	int3   
   14001c760:	mov    QWORD PTR [rsp+0x10],rbx
   14001c765:	push   rsi
   14001c766:	sub    rsp,0x20
   14001c76a:	mov    rax,QWORD PTR [rdx]
   14001c76d:	mov    rbx,rdx
   14001c770:	mov    rsi,rcx
   14001c773:	mov    rdx,rcx
   14001c776:	mov    rcx,rbx
   14001c779:	call   QWORD PTR [rax+0x198]
   14001c77f:	test   al,al
   14001c781:	je     0x14001c7be
   14001c783:	mov    QWORD PTR [rsp+0x30],rdi
   14001c788:	mov    rdi,QWORD PTR [rsi+0x10]
   14001c78c:	test   rdi,rdi
   14001c78f:	je     0x14001c7b9
   14001c791:	mov    rax,QWORD PTR [rbx]
   14001c794:	mov    rdx,rdi
   14001c797:	mov    rcx,rbx
   14001c79a:	call   QWORD PTR [rax+0x8]
   14001c79d:	test   al,al
   14001c79f:	je     0x14001c7ad
   14001c7a1:	mov    rax,QWORD PTR [rdi]
   14001c7a4:	mov    rdx,rbx
   14001c7a7:	mov    rcx,rdi
   14001c7aa:	call   QWORD PTR [rax+0x28]
   14001c7ad:	mov    rax,QWORD PTR [rbx]
   14001c7b0:	mov    rdx,rdi
   14001c7b3:	mov    rcx,rbx
   14001c7b6:	call   QWORD PTR [rax+0x10]
   14001c7b9:	mov    rdi,QWORD PTR [rsp+0x30]
   14001c7be:	mov    rax,QWORD PTR [rbx]
   14001c7c1:	mov    rdx,rsi
   14001c7c4:	mov    rcx,rbx
   14001c7c7:	mov    rbx,QWORD PTR [rsp+0x38]
   14001c7cc:	add    rsp,0x20
   14001c7d0:	pop    rsi
   14001c7d1:	rex.W jmp QWORD PTR [rax+0x478]
   14001c7d8:	int3   
   14001c7d9:	int3   
   14001c7da:	int3   
   14001c7db:	int3   
   14001c7dc:	int3   
   14001c7dd:	int3   
   14001c7de:	int3   
   14001c7df:	int3   
   14001c7e0:	mov    QWORD PTR [rsp+0x10],rbx
   14001c7e5:	push   rsi
   14001c7e6:	sub    rsp,0x20
   14001c7ea:	mov    rax,QWORD PTR [rdx]
   14001c7ed:	mov    rbx,rdx
   14001c7f0:	mov    rsi,rcx
   14001c7f3:	mov    rdx,rcx
   14001c7f6:	mov    rcx,rbx
   14001c7f9:	call   QWORD PTR [rax+0x190]
   14001c7ff:	test   al,al
   14001c801:	je     0x14001c83e
   14001c803:	mov    QWORD PTR [rsp+0x30],rdi
   14001c808:	mov    rdi,QWORD PTR [rsi+0x10]
   14001c80c:	test   rdi,rdi
   14001c80f:	je     0x14001c839
   14001c811:	mov    rax,QWORD PTR [rbx]
   14001c814:	mov    rdx,rdi
   14001c817:	mov    rcx,rbx
   14001c81a:	call   QWORD PTR [rax+0x8]
   14001c81d:	test   al,al
   14001c81f:	je     0x14001c82d
   14001c821:	mov    rax,QWORD PTR [rdi]
   14001c824:	mov    rdx,rbx
   14001c827:	mov    rcx,rdi
   14001c82a:	call   QWORD PTR [rax+0x28]
   14001c82d:	mov    rax,QWORD PTR [rbx]
   14001c830:	mov    rdx,rdi
   14001c833:	mov    rcx,rbx
   14001c836:	call   QWORD PTR [rax+0x10]
   14001c839:	mov    rdi,QWORD PTR [rsp+0x30]
   14001c83e:	mov    rax,QWORD PTR [rbx]
   14001c841:	mov    rdx,rsi
   14001c844:	mov    rcx,rbx
   14001c847:	mov    rbx,QWORD PTR [rsp+0x38]
   14001c84c:	add    rsp,0x20
   14001c850:	pop    rsi
   14001c851:	rex.W jmp QWORD PTR [rax+0x470]
   14001c858:	int3   
   14001c859:	int3   
   14001c85a:	int3   
   14001c85b:	int3   
   14001c85c:	int3   
   14001c85d:	int3   
   14001c85e:	int3   
   14001c85f:	int3   
   14001c860:	mov    QWORD PTR [rsp+0x10],rbx
   14001c865:	push   rsi
   14001c866:	sub    rsp,0x20
   14001c86a:	mov    rax,QWORD PTR [rdx]
   14001c86d:	mov    rbx,rdx
   14001c870:	mov    rsi,rcx
   14001c873:	mov    rdx,rcx
   14001c876:	mov    rcx,rbx
   14001c879:	call   QWORD PTR [rax+0x188]
   14001c87f:	test   al,al
   14001c881:	je     0x14001c8be
   14001c883:	mov    QWORD PTR [rsp+0x30],rdi
   14001c888:	mov    rdi,QWORD PTR [rsi+0x10]
   14001c88c:	test   rdi,rdi
   14001c88f:	je     0x14001c8b9
   14001c891:	mov    rax,QWORD PTR [rbx]
   14001c894:	mov    rdx,rdi
   14001c897:	mov    rcx,rbx
   14001c89a:	call   QWORD PTR [rax+0x8]
   14001c89d:	test   al,al
   14001c89f:	je     0x14001c8ad
   14001c8a1:	mov    rax,QWORD PTR [rdi]
   14001c8a4:	mov    rdx,rbx
   14001c8a7:	mov    rcx,rdi
   14001c8aa:	call   QWORD PTR [rax+0x28]
   14001c8ad:	mov    rax,QWORD PTR [rbx]
   14001c8b0:	mov    rdx,rdi
   14001c8b3:	mov    rcx,rbx
   14001c8b6:	call   QWORD PTR [rax+0x10]
   14001c8b9:	mov    rdi,QWORD PTR [rsp+0x30]
   14001c8be:	mov    rax,QWORD PTR [rbx]
   14001c8c1:	mov    rdx,rsi
   14001c8c4:	mov    rcx,rbx
   14001c8c7:	mov    rbx,QWORD PTR [rsp+0x38]
   14001c8cc:	add    rsp,0x20
   14001c8d0:	pop    rsi
   14001c8d1:	rex.W jmp QWORD PTR [rax+0x468]
   14001c8d8:	int3   
   14001c8d9:	int3   
   14001c8da:	int3   
   14001c8db:	int3   
   14001c8dc:	int3   
   14001c8dd:	int3   
   14001c8de:	int3   
   14001c8df:	int3   
   14001c8e0:	mov    QWORD PTR [rsp+0x10],rbx
   14001c8e5:	push   rsi
   14001c8e6:	sub    rsp,0x20
   14001c8ea:	mov    rax,QWORD PTR [rdx]
   14001c8ed:	mov    rbx,rdx
   14001c8f0:	mov    rsi,rcx
   14001c8f3:	mov    rdx,rcx
   14001c8f6:	mov    rcx,rbx
   14001c8f9:	call   QWORD PTR [rax+0x180]
   14001c8ff:	test   al,al
   14001c901:	je     0x14001c93e
   14001c903:	mov    QWORD PTR [rsp+0x30],rdi
   14001c908:	mov    rdi,QWORD PTR [rsi+0x10]
   14001c90c:	test   rdi,rdi
   14001c90f:	je     0x14001c939
   14001c911:	mov    rax,QWORD PTR [rbx]
   14001c914:	mov    rdx,rdi
   14001c917:	mov    rcx,rbx
   14001c91a:	call   QWORD PTR [rax+0x8]
   14001c91d:	test   al,al
   14001c91f:	je     0x14001c92d
   14001c921:	mov    rax,QWORD PTR [rdi]
   14001c924:	mov    rdx,rbx
   14001c927:	mov    rcx,rdi
   14001c92a:	call   QWORD PTR [rax+0x28]
   14001c92d:	mov    rax,QWORD PTR [rbx]
   14001c930:	mov    rdx,rdi
   14001c933:	mov    rcx,rbx
   14001c936:	call   QWORD PTR [rax+0x10]
   14001c939:	mov    rdi,QWORD PTR [rsp+0x30]
   14001c93e:	mov    rax,QWORD PTR [rbx]
   14001c941:	mov    rdx,rsi
   14001c944:	mov    rcx,rbx
   14001c947:	mov    rbx,QWORD PTR [rsp+0x38]
   14001c94c:	add    rsp,0x20
   14001c950:	pop    rsi
   14001c951:	rex.W jmp QWORD PTR [rax+0x460]
   14001c958:	int3   
   14001c959:	int3   
   14001c95a:	int3   
   14001c95b:	int3   
   14001c95c:	int3   
   14001c95d:	int3   
   14001c95e:	int3   
   14001c95f:	int3   
   14001c960:	mov    QWORD PTR [rsp+0x10],rbx
   14001c965:	push   rsi
   14001c966:	sub    rsp,0x20
   14001c96a:	mov    rax,QWORD PTR [rdx]
   14001c96d:	mov    rbx,rdx
   14001c970:	mov    rsi,rcx
   14001c973:	mov    rdx,rcx
   14001c976:	mov    rcx,rbx
   14001c979:	call   QWORD PTR [rax+0x178]
   14001c97f:	test   al,al
   14001c981:	je     0x14001c9be
   14001c983:	mov    QWORD PTR [rsp+0x30],rdi
   14001c988:	mov    rdi,QWORD PTR [rsi+0x10]
   14001c98c:	test   rdi,rdi
   14001c98f:	je     0x14001c9b9
   14001c991:	mov    rax,QWORD PTR [rbx]
   14001c994:	mov    rdx,rdi
   14001c997:	mov    rcx,rbx
   14001c99a:	call   QWORD PTR [rax+0x8]
   14001c99d:	test   al,al
   14001c99f:	je     0x14001c9ad
   14001c9a1:	mov    rax,QWORD PTR [rdi]
   14001c9a4:	mov    rdx,rbx
   14001c9a7:	mov    rcx,rdi
   14001c9aa:	call   QWORD PTR [rax+0x28]
   14001c9ad:	mov    rax,QWORD PTR [rbx]
   14001c9b0:	mov    rdx,rdi
   14001c9b3:	mov    rcx,rbx
   14001c9b6:	call   QWORD PTR [rax+0x10]
   14001c9b9:	mov    rdi,QWORD PTR [rsp+0x30]
   14001c9be:	mov    rax,QWORD PTR [rbx]
   14001c9c1:	mov    rdx,rsi
   14001c9c4:	mov    rcx,rbx
   14001c9c7:	mov    rbx,QWORD PTR [rsp+0x38]
   14001c9cc:	add    rsp,0x20
   14001c9d0:	pop    rsi
   14001c9d1:	rex.W jmp QWORD PTR [rax+0x458]
   14001c9d8:	int3   
   14001c9d9:	int3   
   14001c9da:	int3   
   14001c9db:	int3   
   14001c9dc:	int3   
   14001c9dd:	int3   
   14001c9de:	int3   
   14001c9df:	int3   
   14001c9e0:	mov    QWORD PTR [rsp+0x10],rbx
   14001c9e5:	push   rsi
   14001c9e6:	sub    rsp,0x20
   14001c9ea:	mov    rax,QWORD PTR [rdx]
   14001c9ed:	mov    rbx,rdx
   14001c9f0:	mov    rsi,rcx
   14001c9f3:	mov    rdx,rcx
   14001c9f6:	mov    rcx,rbx
   14001c9f9:	call   QWORD PTR [rax+0x170]
   14001c9ff:	test   al,al
   14001ca01:	je     0x14001ca3e
   14001ca03:	mov    QWORD PTR [rsp+0x30],rdi
   14001ca08:	mov    rdi,QWORD PTR [rsi+0x10]
   14001ca0c:	test   rdi,rdi
   14001ca0f:	je     0x14001ca39
   14001ca11:	mov    rax,QWORD PTR [rbx]
   14001ca14:	mov    rdx,rdi
   14001ca17:	mov    rcx,rbx
   14001ca1a:	call   QWORD PTR [rax+0x8]
   14001ca1d:	test   al,al
   14001ca1f:	je     0x14001ca2d
   14001ca21:	mov    rax,QWORD PTR [rdi]
   14001ca24:	mov    rdx,rbx
   14001ca27:	mov    rcx,rdi
   14001ca2a:	call   QWORD PTR [rax+0x28]
   14001ca2d:	mov    rax,QWORD PTR [rbx]
   14001ca30:	mov    rdx,rdi
   14001ca33:	mov    rcx,rbx
   14001ca36:	call   QWORD PTR [rax+0x10]
   14001ca39:	mov    rdi,QWORD PTR [rsp+0x30]
   14001ca3e:	mov    rax,QWORD PTR [rbx]
   14001ca41:	mov    rdx,rsi
   14001ca44:	mov    rcx,rbx
   14001ca47:	mov    rbx,QWORD PTR [rsp+0x38]
   14001ca4c:	add    rsp,0x20
   14001ca50:	pop    rsi
   14001ca51:	rex.W jmp QWORD PTR [rax+0x450]
   14001ca58:	int3   
   14001ca59:	int3   
   14001ca5a:	int3   
   14001ca5b:	int3   
   14001ca5c:	int3   
   14001ca5d:	int3   
   14001ca5e:	int3   
   14001ca5f:	int3   
   14001ca60:	mov    QWORD PTR [rsp+0x10],rbx
   14001ca65:	push   rsi
   14001ca66:	sub    rsp,0x20
   14001ca6a:	mov    rax,QWORD PTR [rdx]
   14001ca6d:	mov    rbx,rdx
   14001ca70:	mov    rsi,rcx
   14001ca73:	mov    rdx,rcx
   14001ca76:	mov    rcx,rbx
   14001ca79:	call   QWORD PTR [rax+0x168]
   14001ca7f:	test   al,al
   14001ca81:	je     0x14001cabe
   14001ca83:	mov    QWORD PTR [rsp+0x30],rdi
   14001ca88:	mov    rdi,QWORD PTR [rsi+0x10]
   14001ca8c:	test   rdi,rdi
   14001ca8f:	je     0x14001cab9
   14001ca91:	mov    rax,QWORD PTR [rbx]
   14001ca94:	mov    rdx,rdi
   14001ca97:	mov    rcx,rbx
   14001ca9a:	call   QWORD PTR [rax+0x8]
   14001ca9d:	test   al,al
   14001ca9f:	je     0x14001caad
   14001caa1:	mov    rax,QWORD PTR [rdi]
   14001caa4:	mov    rdx,rbx
   14001caa7:	mov    rcx,rdi
   14001caaa:	call   QWORD PTR [rax+0x28]
   14001caad:	mov    rax,QWORD PTR [rbx]
   14001cab0:	mov    rdx,rdi
   14001cab3:	mov    rcx,rbx
   14001cab6:	call   QWORD PTR [rax+0x10]
   14001cab9:	mov    rdi,QWORD PTR [rsp+0x30]
   14001cabe:	mov    rax,QWORD PTR [rbx]
   14001cac1:	mov    rdx,rsi
   14001cac4:	mov    rcx,rbx
   14001cac7:	mov    rbx,QWORD PTR [rsp+0x38]
   14001cacc:	add    rsp,0x20
   14001cad0:	pop    rsi
   14001cad1:	rex.W jmp QWORD PTR [rax+0x448]
   14001cad8:	int3   
   14001cad9:	int3   
   14001cada:	int3   
   14001cadb:	int3   
   14001cadc:	int3   
   14001cadd:	int3   
   14001cade:	int3   
   14001cadf:	int3   
   14001cae0:	mov    QWORD PTR [rsp+0x10],rbx
   14001cae5:	push   rsi
   14001cae6:	sub    rsp,0x20
   14001caea:	mov    rax,QWORD PTR [rdx]
   14001caed:	mov    rbx,rdx
   14001caf0:	mov    rsi,rcx
   14001caf3:	mov    rdx,rcx
   14001caf6:	mov    rcx,rbx
   14001caf9:	call   QWORD PTR [rax+0x160]
   14001caff:	test   al,al
   14001cb01:	je     0x14001cb3e
   14001cb03:	mov    QWORD PTR [rsp+0x30],rdi
   14001cb08:	mov    rdi,QWORD PTR [rsi+0x10]
   14001cb0c:	test   rdi,rdi
   14001cb0f:	je     0x14001cb39
   14001cb11:	mov    rax,QWORD PTR [rbx]
   14001cb14:	mov    rdx,rdi
   14001cb17:	mov    rcx,rbx
   14001cb1a:	call   QWORD PTR [rax+0x8]
   14001cb1d:	test   al,al
   14001cb1f:	je     0x14001cb2d
   14001cb21:	mov    rax,QWORD PTR [rdi]
   14001cb24:	mov    rdx,rbx
   14001cb27:	mov    rcx,rdi
   14001cb2a:	call   QWORD PTR [rax+0x28]
   14001cb2d:	mov    rax,QWORD PTR [rbx]
   14001cb30:	mov    rdx,rdi
   14001cb33:	mov    rcx,rbx
   14001cb36:	call   QWORD PTR [rax+0x10]
   14001cb39:	mov    rdi,QWORD PTR [rsp+0x30]
   14001cb3e:	mov    rax,QWORD PTR [rbx]
   14001cb41:	mov    rdx,rsi
   14001cb44:	mov    rcx,rbx
   14001cb47:	mov    rbx,QWORD PTR [rsp+0x38]
   14001cb4c:	add    rsp,0x20
   14001cb50:	pop    rsi
   14001cb51:	rex.W jmp QWORD PTR [rax+0x440]
   14001cb58:	int3   
   14001cb59:	int3   
   14001cb5a:	int3   
   14001cb5b:	int3   
   14001cb5c:	int3   
   14001cb5d:	int3   
   14001cb5e:	int3   
   14001cb5f:	int3   
   14001cb60:	mov    QWORD PTR [rsp+0x10],rbx
   14001cb65:	push   rsi
   14001cb66:	sub    rsp,0x20
   14001cb6a:	mov    rax,QWORD PTR [rdx]
   14001cb6d:	mov    rbx,rdx
   14001cb70:	mov    rsi,rcx
   14001cb73:	mov    rdx,rcx
   14001cb76:	mov    rcx,rbx
   14001cb79:	call   QWORD PTR [rax+0x158]
   14001cb7f:	test   al,al
   14001cb81:	je     0x14001cbbe
   14001cb83:	mov    QWORD PTR [rsp+0x30],rdi
   14001cb88:	mov    rdi,QWORD PTR [rsi+0x10]
   14001cb8c:	test   rdi,rdi
   14001cb8f:	je     0x14001cbb9
   14001cb91:	mov    rax,QWORD PTR [rbx]
   14001cb94:	mov    rdx,rdi
   14001cb97:	mov    rcx,rbx
   14001cb9a:	call   QWORD PTR [rax+0x8]
   14001cb9d:	test   al,al
   14001cb9f:	je     0x14001cbad
   14001cba1:	mov    rax,QWORD PTR [rdi]
   14001cba4:	mov    rdx,rbx
   14001cba7:	mov    rcx,rdi
   14001cbaa:	call   QWORD PTR [rax+0x28]
   14001cbad:	mov    rax,QWORD PTR [rbx]
   14001cbb0:	mov    rdx,rdi
   14001cbb3:	mov    rcx,rbx
   14001cbb6:	call   QWORD PTR [rax+0x10]
   14001cbb9:	mov    rdi,QWORD PTR [rsp+0x30]
   14001cbbe:	mov    rax,QWORD PTR [rbx]
   14001cbc1:	mov    rdx,rsi
   14001cbc4:	mov    rcx,rbx
   14001cbc7:	mov    rbx,QWORD PTR [rsp+0x38]
   14001cbcc:	add    rsp,0x20
   14001cbd0:	pop    rsi
   14001cbd1:	rex.W jmp QWORD PTR [rax+0x438]
   14001cbd8:	int3   
   14001cbd9:	int3   
   14001cbda:	int3   
   14001cbdb:	int3   
   14001cbdc:	int3   
   14001cbdd:	int3   
   14001cbde:	int3   
   14001cbdf:	int3   
   14001cbe0:	mov    QWORD PTR [rsp+0x10],rbx
   14001cbe5:	push   rsi
   14001cbe6:	sub    rsp,0x20
   14001cbea:	mov    rax,QWORD PTR [rdx]
   14001cbed:	mov    rbx,rdx
   14001cbf0:	mov    rsi,rcx
   14001cbf3:	mov    rdx,rcx
   14001cbf6:	mov    rcx,rbx
   14001cbf9:	call   QWORD PTR [rax+0x150]
   14001cbff:	test   al,al
   14001cc01:	je     0x14001cc6f
   14001cc03:	mov    QWORD PTR [rsp+0x30],rdi
   14001cc08:	mov    rdi,QWORD PTR [rsi+0x10]
   14001cc0c:	test   rdi,rdi
   14001cc0f:	je     0x14001cc39
   14001cc11:	mov    rax,QWORD PTR [rbx]
   14001cc14:	mov    rdx,rdi
   14001cc17:	mov    rcx,rbx
   14001cc1a:	call   QWORD PTR [rax+0x8]
   14001cc1d:	test   al,al
   14001cc1f:	je     0x14001cc2d
   14001cc21:	mov    rax,QWORD PTR [rdi]
   14001cc24:	mov    rdx,rbx
   14001cc27:	mov    rcx,rdi
   14001cc2a:	call   QWORD PTR [rax+0x28]
   14001cc2d:	mov    rax,QWORD PTR [rbx]
   14001cc30:	mov    rdx,rdi
   14001cc33:	mov    rcx,rbx
   14001cc36:	call   QWORD PTR [rax+0x10]
   14001cc39:	mov    rdi,QWORD PTR [rsi+0x20]
   14001cc3d:	test   rdi,rdi
   14001cc40:	je     0x14001cc6a
   14001cc42:	mov    rax,QWORD PTR [rbx]
   14001cc45:	mov    rdx,rdi
   14001cc48:	mov    rcx,rbx
   14001cc4b:	call   QWORD PTR [rax+0x8]
   14001cc4e:	test   al,al
   14001cc50:	je     0x14001cc5e
   14001cc52:	mov    rax,QWORD PTR [rdi]
   14001cc55:	mov    rdx,rbx
   14001cc58:	mov    rcx,rdi
   14001cc5b:	call   QWORD PTR [rax+0x28]
   14001cc5e:	mov    rax,QWORD PTR [rbx]
   14001cc61:	mov    rdx,rdi
   14001cc64:	mov    rcx,rbx
   14001cc67:	call   QWORD PTR [rax+0x10]
   14001cc6a:	mov    rdi,QWORD PTR [rsp+0x30]
   14001cc6f:	mov    rax,QWORD PTR [rbx]
   14001cc72:	mov    rdx,rsi
   14001cc75:	mov    rcx,rbx
   14001cc78:	mov    rbx,QWORD PTR [rsp+0x38]
   14001cc7d:	add    rsp,0x20
   14001cc81:	pop    rsi
   14001cc82:	rex.W jmp QWORD PTR [rax+0x430]
   14001cc89:	int3   
   14001cc8a:	int3   
   14001cc8b:	int3   
   14001cc8c:	int3   
   14001cc8d:	int3   
   14001cc8e:	int3   
   14001cc8f:	int3   
   14001cc90:	mov    QWORD PTR [rsp+0x10],rbx
   14001cc95:	push   rsi
   14001cc96:	sub    rsp,0x20
   14001cc9a:	mov    rax,QWORD PTR [rdx]
   14001cc9d:	mov    rbx,rdx
   14001cca0:	mov    rsi,rcx
   14001cca3:	mov    rdx,rcx
   14001cca6:	mov    rcx,rbx
   14001cca9:	call   QWORD PTR [rax+0x148]
   14001ccaf:	test   al,al
   14001ccb1:	je     0x14001cd54
   14001ccb7:	mov    QWORD PTR [rsp+0x30],rdi
   14001ccbc:	mov    rdi,QWORD PTR [rsi+0x10]
   14001ccc0:	test   rdi,rdi
   14001ccc3:	je     0x14001cced
   14001ccc5:	mov    rax,QWORD PTR [rbx]
   14001ccc8:	mov    rdx,rdi
   14001cccb:	mov    rcx,rbx
   14001ccce:	call   QWORD PTR [rax+0x8]
   14001ccd1:	test   al,al
   14001ccd3:	je     0x14001cce1
   14001ccd5:	mov    rax,QWORD PTR [rdi]
   14001ccd8:	mov    rdx,rbx
   14001ccdb:	mov    rcx,rdi
   14001ccde:	call   QWORD PTR [rax+0x28]
   14001cce1:	mov    rax,QWORD PTR [rbx]
   14001cce4:	mov    rdx,rdi
   14001cce7:	mov    rcx,rbx
   14001ccea:	call   QWORD PTR [rax+0x10]
   14001cced:	mov    rdi,QWORD PTR [rsi+0x18]
   14001ccf1:	test   rdi,rdi
   14001ccf4:	je     0x14001cd1e
   14001ccf6:	mov    rax,QWORD PTR [rbx]
   14001ccf9:	mov    rdx,rdi
   14001ccfc:	mov    rcx,rbx
   14001ccff:	call   QWORD PTR [rax+0x8]
   14001cd02:	test   al,al
   14001cd04:	je     0x14001cd12
   14001cd06:	mov    rax,QWORD PTR [rdi]
   14001cd09:	mov    rdx,rbx
   14001cd0c:	mov    rcx,rdi
   14001cd0f:	call   QWORD PTR [rax+0x28]
   14001cd12:	mov    rax,QWORD PTR [rbx]
   14001cd15:	mov    rdx,rdi
   14001cd18:	mov    rcx,rbx
   14001cd1b:	call   QWORD PTR [rax+0x10]
   14001cd1e:	mov    rdi,QWORD PTR [rsi+0x20]
   14001cd22:	test   rdi,rdi
   14001cd25:	je     0x14001cd4f
   14001cd27:	mov    rax,QWORD PTR [rbx]
   14001cd2a:	mov    rdx,rdi
   14001cd2d:	mov    rcx,rbx
   14001cd30:	call   QWORD PTR [rax+0x8]
   14001cd33:	test   al,al
   14001cd35:	je     0x14001cd43
   14001cd37:	mov    rax,QWORD PTR [rdi]
   14001cd3a:	mov    rdx,rbx
   14001cd3d:	mov    rcx,rdi
   14001cd40:	call   QWORD PTR [rax+0x28]
   14001cd43:	mov    rax,QWORD PTR [rbx]
   14001cd46:	mov    rdx,rdi
   14001cd49:	mov    rcx,rbx
   14001cd4c:	call   QWORD PTR [rax+0x10]
   14001cd4f:	mov    rdi,QWORD PTR [rsp+0x30]
   14001cd54:	mov    rax,QWORD PTR [rbx]
   14001cd57:	mov    rdx,rsi
   14001cd5a:	mov    rcx,rbx
   14001cd5d:	mov    rbx,QWORD PTR [rsp+0x38]
   14001cd62:	add    rsp,0x20
   14001cd66:	pop    rsi
   14001cd67:	rex.W jmp QWORD PTR [rax+0x428]
   14001cd6e:	int3   
   14001cd6f:	int3   
   14001cd70:	mov    QWORD PTR [rsp+0x10],rbx
   14001cd75:	push   rsi
   14001cd76:	sub    rsp,0x20
   14001cd7a:	mov    rax,QWORD PTR [rdx]
   14001cd7d:	mov    rbx,rdx
   14001cd80:	mov    rsi,rcx
   14001cd83:	mov    rdx,rcx
   14001cd86:	mov    rcx,rbx
   14001cd89:	call   QWORD PTR [rax+0x140]
   14001cd8f:	test   al,al
   14001cd91:	je     0x14001cdff
   14001cd93:	mov    QWORD PTR [rsp+0x30],rdi
   14001cd98:	mov    rdi,QWORD PTR [rsi+0x10]
   14001cd9c:	test   rdi,rdi
   14001cd9f:	je     0x14001cdc9
   14001cda1:	mov    rax,QWORD PTR [rbx]
   14001cda4:	mov    rdx,rdi
   14001cda7:	mov    rcx,rbx
   14001cdaa:	call   QWORD PTR [rax+0x8]
   14001cdad:	test   al,al
   14001cdaf:	je     0x14001cdbd
   14001cdb1:	mov    rax,QWORD PTR [rdi]
   14001cdb4:	mov    rdx,rbx
   14001cdb7:	mov    rcx,rdi
   14001cdba:	call   QWORD PTR [rax+0x28]
   14001cdbd:	mov    rax,QWORD PTR [rbx]
   14001cdc0:	mov    rdx,rdi
   14001cdc3:	mov    rcx,rbx
   14001cdc6:	call   QWORD PTR [rax+0x10]
   14001cdc9:	mov    rdi,QWORD PTR [rsi+0x18]
   14001cdcd:	test   rdi,rdi
   14001cdd0:	je     0x14001cdfa
   14001cdd2:	mov    rax,QWORD PTR [rbx]
   14001cdd5:	mov    rdx,rdi
   14001cdd8:	mov    rcx,rbx
   14001cddb:	call   QWORD PTR [rax+0x8]
   14001cdde:	test   al,al
   14001cde0:	je     0x14001cdee
   14001cde2:	mov    rax,QWORD PTR [rdi]
   14001cde5:	mov    rdx,rbx
   14001cde8:	mov    rcx,rdi
   14001cdeb:	call   QWORD PTR [rax+0x28]
   14001cdee:	mov    rax,QWORD PTR [rbx]
   14001cdf1:	mov    rdx,rdi
   14001cdf4:	mov    rcx,rbx
   14001cdf7:	call   QWORD PTR [rax+0x10]
   14001cdfa:	mov    rdi,QWORD PTR [rsp+0x30]
   14001cdff:	mov    rax,QWORD PTR [rbx]
   14001ce02:	mov    rdx,rsi
   14001ce05:	mov    rcx,rbx
   14001ce08:	mov    rbx,QWORD PTR [rsp+0x38]
   14001ce0d:	add    rsp,0x20
   14001ce11:	pop    rsi
   14001ce12:	rex.W jmp QWORD PTR [rax+0x420]
   14001ce19:	int3   
   14001ce1a:	int3   
   14001ce1b:	int3   
   14001ce1c:	int3   
   14001ce1d:	int3   
   14001ce1e:	int3   
   14001ce1f:	int3   
   14001ce20:	mov    QWORD PTR [rsp+0x10],rbx
   14001ce25:	push   rsi
   14001ce26:	sub    rsp,0x20
   14001ce2a:	mov    rax,QWORD PTR [rdx]
   14001ce2d:	mov    rbx,rdx
   14001ce30:	mov    rsi,rcx
   14001ce33:	mov    rdx,rcx
   14001ce36:	mov    rcx,rbx
   14001ce39:	call   QWORD PTR [rax+0x138]
   14001ce3f:	test   al,al
   14001ce41:	je     0x14001ce7e
   14001ce43:	mov    QWORD PTR [rsp+0x30],rdi
   14001ce48:	mov    rdi,QWORD PTR [rsi+0x10]
   14001ce4c:	test   rdi,rdi
   14001ce4f:	je     0x14001ce79
   14001ce51:	mov    rax,QWORD PTR [rbx]
   14001ce54:	mov    rdx,rdi
   14001ce57:	mov    rcx,rbx
   14001ce5a:	call   QWORD PTR [rax+0x8]
   14001ce5d:	test   al,al
   14001ce5f:	je     0x14001ce6d
   14001ce61:	mov    rax,QWORD PTR [rdi]
   14001ce64:	mov    rdx,rbx
   14001ce67:	mov    rcx,rdi
   14001ce6a:	call   QWORD PTR [rax+0x28]
   14001ce6d:	mov    rax,QWORD PTR [rbx]
   14001ce70:	mov    rdx,rdi
   14001ce73:	mov    rcx,rbx
   14001ce76:	call   QWORD PTR [rax+0x10]
   14001ce79:	mov    rdi,QWORD PTR [rsp+0x30]
   14001ce7e:	mov    rax,QWORD PTR [rbx]
   14001ce81:	mov    rdx,rsi
   14001ce84:	mov    rcx,rbx
   14001ce87:	mov    rbx,QWORD PTR [rsp+0x38]
   14001ce8c:	add    rsp,0x20
   14001ce90:	pop    rsi
   14001ce91:	rex.W jmp QWORD PTR [rax+0x418]
   14001ce98:	int3   
   14001ce99:	int3   
   14001ce9a:	int3   
   14001ce9b:	int3   
   14001ce9c:	int3   
   14001ce9d:	int3   
   14001ce9e:	int3   
   14001ce9f:	int3   
   14001cea0:	mov    QWORD PTR [rsp+0x18],rbp
   14001cea5:	push   rsi
   14001cea6:	sub    rsp,0x20
   14001ceaa:	mov    rax,QWORD PTR [rdx]
   14001cead:	mov    rsi,rdx
   14001ceb0:	mov    rbp,rcx
   14001ceb3:	mov    rdx,rcx
   14001ceb6:	mov    rcx,rsi
   14001ceb9:	call   QWORD PTR [rax+0x130]
   14001cebf:	test   al,al
   14001cec1:	je     0x14001cf19
   14001cec3:	mov    QWORD PTR [rsp+0x30],rbx
   14001cec8:	mov    rbx,rbp
   14001cecb:	test   rbp,rbp
   14001cece:	je     0x14001cf14
   14001ced0:	mov    QWORD PTR [rsp+0x38],rdi
   14001ced5:	mov    rdi,QWORD PTR [rbx+0x10]
   14001ced9:	test   rdi,rdi
   14001cedc:	je     0x14001cf06
   14001cede:	mov    rax,QWORD PTR [rsi]
   14001cee1:	mov    rdx,rdi
   14001cee4:	mov    rcx,rsi
   14001cee7:	call   QWORD PTR [rax+0x8]
   14001ceea:	test   al,al
   14001ceec:	je     0x14001cefa
   14001ceee:	mov    rax,QWORD PTR [rdi]
   14001cef1:	mov    rdx,rsi
   14001cef4:	mov    rcx,rdi
   14001cef7:	call   QWORD PTR [rax+0x28]
   14001cefa:	mov    rax,QWORD PTR [rsi]
   14001cefd:	mov    rdx,rdi
   14001cf00:	mov    rcx,rsi
   14001cf03:	call   QWORD PTR [rax+0x10]
   14001cf06:	mov    rbx,QWORD PTR [rbx+0x18]
   14001cf0a:	test   rbx,rbx
   14001cf0d:	jne    0x14001ced5
   14001cf0f:	mov    rdi,QWORD PTR [rsp+0x38]
   14001cf14:	mov    rbx,QWORD PTR [rsp+0x30]
   14001cf19:	mov    rax,QWORD PTR [rsi]
   14001cf1c:	mov    rdx,rbp
   14001cf1f:	mov    rcx,rsi
   14001cf22:	mov    rbp,QWORD PTR [rsp+0x40]
   14001cf27:	add    rsp,0x20
   14001cf2b:	pop    rsi
   14001cf2c:	rex.W jmp QWORD PTR [rax+0x410]
   14001cf33:	int3   
   14001cf34:	int3   
   14001cf35:	int3   
   14001cf36:	int3   
   14001cf37:	int3   
   14001cf38:	int3   
   14001cf39:	int3   
   14001cf3a:	int3   
   14001cf3b:	int3   
   14001cf3c:	int3   
   14001cf3d:	int3   
   14001cf3e:	int3   
   14001cf3f:	int3   
   14001cf40:	mov    QWORD PTR [rsp+0x10],rbx
   14001cf45:	push   rsi
   14001cf46:	sub    rsp,0x20
   14001cf4a:	mov    rax,QWORD PTR [rdx]
   14001cf4d:	mov    rbx,rdx
   14001cf50:	mov    rsi,rcx
   14001cf53:	mov    rdx,rcx
   14001cf56:	mov    rcx,rbx
   14001cf59:	call   QWORD PTR [rax+0x128]
   14001cf5f:	test   al,al
   14001cf61:	je     0x14001cf9e
   14001cf63:	mov    QWORD PTR [rsp+0x30],rdi
   14001cf68:	mov    rdi,QWORD PTR [rsi+0x10]
   14001cf6c:	test   rdi,rdi
   14001cf6f:	je     0x14001cf99
   14001cf71:	mov    rax,QWORD PTR [rbx]
   14001cf74:	mov    rdx,rdi
   14001cf77:	mov    rcx,rbx
   14001cf7a:	call   QWORD PTR [rax+0x8]
   14001cf7d:	test   al,al
   14001cf7f:	je     0x14001cf8d
   14001cf81:	mov    rax,QWORD PTR [rdi]
   14001cf84:	mov    rdx,rbx
   14001cf87:	mov    rcx,rdi
   14001cf8a:	call   QWORD PTR [rax+0x28]
   14001cf8d:	mov    rax,QWORD PTR [rbx]
   14001cf90:	mov    rdx,rdi
   14001cf93:	mov    rcx,rbx
   14001cf96:	call   QWORD PTR [rax+0x10]
   14001cf99:	mov    rdi,QWORD PTR [rsp+0x30]
   14001cf9e:	mov    rax,QWORD PTR [rbx]
   14001cfa1:	mov    rdx,rsi
   14001cfa4:	mov    rcx,rbx
   14001cfa7:	mov    rbx,QWORD PTR [rsp+0x38]
   14001cfac:	add    rsp,0x20
   14001cfb0:	pop    rsi
   14001cfb1:	rex.W jmp QWORD PTR [rax+0x408]
   14001cfb8:	int3   
   14001cfb9:	int3   
   14001cfba:	int3   
   14001cfbb:	int3   
   14001cfbc:	int3   
   14001cfbd:	int3   
   14001cfbe:	int3   
   14001cfbf:	int3   
   14001cfc0:	mov    QWORD PTR [rsp+0x18],rbp
   14001cfc5:	push   rsi
   14001cfc6:	sub    rsp,0x20
   14001cfca:	mov    rax,QWORD PTR [rdx]
   14001cfcd:	mov    rsi,rdx
   14001cfd0:	mov    rbp,rcx
   14001cfd3:	mov    rdx,rcx
   14001cfd6:	mov    rcx,rsi
   14001cfd9:	call   QWORD PTR [rax+0x120]
   14001cfdf:	test   al,al
   14001cfe1:	je     0x14001d039
   14001cfe3:	mov    QWORD PTR [rsp+0x30],rbx
   14001cfe8:	mov    rbx,rbp
   14001cfeb:	test   rbp,rbp
   14001cfee:	je     0x14001d034
   14001cff0:	mov    QWORD PTR [rsp+0x38],rdi
   14001cff5:	mov    rdi,QWORD PTR [rbx+0x10]
   14001cff9:	test   rdi,rdi
   14001cffc:	je     0x14001d026
   14001cffe:	mov    rax,QWORD PTR [rsi]
   14001d001:	mov    rdx,rdi
   14001d004:	mov    rcx,rsi
   14001d007:	call   QWORD PTR [rax+0x8]
   14001d00a:	test   al,al
   14001d00c:	je     0x14001d01a
   14001d00e:	mov    rax,QWORD PTR [rdi]
   14001d011:	mov    rdx,rsi
   14001d014:	mov    rcx,rdi
   14001d017:	call   QWORD PTR [rax+0x28]
   14001d01a:	mov    rax,QWORD PTR [rsi]
   14001d01d:	mov    rdx,rdi
   14001d020:	mov    rcx,rsi
   14001d023:	call   QWORD PTR [rax+0x10]
   14001d026:	mov    rbx,QWORD PTR [rbx+0x18]
   14001d02a:	test   rbx,rbx
   14001d02d:	jne    0x14001cff5
   14001d02f:	mov    rdi,QWORD PTR [rsp+0x38]
   14001d034:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d039:	mov    rax,QWORD PTR [rsi]
   14001d03c:	mov    rdx,rbp
   14001d03f:	mov    rcx,rsi
   14001d042:	mov    rbp,QWORD PTR [rsp+0x40]
   14001d047:	add    rsp,0x20
   14001d04b:	pop    rsi
   14001d04c:	rex.W jmp QWORD PTR [rax+0x400]
   14001d053:	int3   
   14001d054:	int3   
   14001d055:	int3   
   14001d056:	int3   
   14001d057:	int3   
   14001d058:	int3   
   14001d059:	int3   
   14001d05a:	int3   
   14001d05b:	int3   
   14001d05c:	int3   
   14001d05d:	int3   
   14001d05e:	int3   
   14001d05f:	int3   
   14001d060:	mov    QWORD PTR [rsp+0x10],rbx
   14001d065:	push   rsi
   14001d066:	sub    rsp,0x20
   14001d06a:	mov    rax,QWORD PTR [rdx]
   14001d06d:	mov    rbx,rdx
   14001d070:	mov    rsi,rcx
   14001d073:	mov    rdx,rcx
   14001d076:	mov    rcx,rbx
   14001d079:	call   QWORD PTR [rax+0x118]
   14001d07f:	test   al,al
   14001d081:	je     0x14001d0be
   14001d083:	mov    QWORD PTR [rsp+0x30],rdi
   14001d088:	mov    rdi,QWORD PTR [rsi+0x20]
   14001d08c:	test   rdi,rdi
   14001d08f:	je     0x14001d0b9
   14001d091:	mov    rax,QWORD PTR [rbx]
   14001d094:	mov    rdx,rdi
   14001d097:	mov    rcx,rbx
   14001d09a:	call   QWORD PTR [rax+0x8]
   14001d09d:	test   al,al
   14001d09f:	je     0x14001d0ad
   14001d0a1:	mov    rax,QWORD PTR [rdi]
   14001d0a4:	mov    rdx,rbx
   14001d0a7:	mov    rcx,rdi
   14001d0aa:	call   QWORD PTR [rax+0x28]
   14001d0ad:	mov    rax,QWORD PTR [rbx]
   14001d0b0:	mov    rdx,rdi
   14001d0b3:	mov    rcx,rbx
   14001d0b6:	call   QWORD PTR [rax+0x10]
   14001d0b9:	mov    rdi,QWORD PTR [rsp+0x30]
   14001d0be:	mov    rax,QWORD PTR [rbx]
   14001d0c1:	mov    rdx,rsi
   14001d0c4:	mov    rcx,rbx
   14001d0c7:	mov    rbx,QWORD PTR [rsp+0x38]
   14001d0cc:	add    rsp,0x20
   14001d0d0:	pop    rsi
   14001d0d1:	rex.W jmp QWORD PTR [rax+0x3f8]
   14001d0d8:	int3   
   14001d0d9:	int3   
   14001d0da:	int3   
   14001d0db:	int3   
   14001d0dc:	int3   
   14001d0dd:	int3   
   14001d0de:	int3   
   14001d0df:	int3   
   14001d0e0:	mov    QWORD PTR [rsp+0x8],rbx
   14001d0e5:	push   rdi
   14001d0e6:	sub    rsp,0x20
   14001d0ea:	mov    rax,QWORD PTR [rdx]
   14001d0ed:	mov    rdi,rdx
   14001d0f0:	mov    rbx,rcx
   14001d0f3:	mov    rdx,rcx
   14001d0f6:	mov    rcx,rdi
   14001d0f9:	call   QWORD PTR [rax+0x110]
   14001d0ff:	mov    r11,QWORD PTR [rdi]
   14001d102:	mov    rdx,rbx
   14001d105:	mov    rcx,rdi
   14001d108:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d10d:	add    rsp,0x20
   14001d111:	pop    rdi
   14001d112:	rex.WB jmp QWORD PTR [r11+0x3f0]
   14001d119:	int3   
   14001d11a:	int3   
   14001d11b:	int3   
   14001d11c:	int3   
   14001d11d:	int3   
   14001d11e:	int3   
   14001d11f:	int3   
   14001d120:	mov    QWORD PTR [rsp+0x10],rbx
   14001d125:	push   rsi
   14001d126:	sub    rsp,0x20
   14001d12a:	mov    rax,QWORD PTR [rdx]
   14001d12d:	mov    rbx,rdx
   14001d130:	mov    rsi,rcx
   14001d133:	mov    rdx,rcx
   14001d136:	mov    rcx,rbx
   14001d139:	call   QWORD PTR [rax+0x108]
   14001d13f:	test   al,al
   14001d141:	je     0x14001d17e
   14001d143:	mov    QWORD PTR [rsp+0x30],rdi
   14001d148:	mov    rdi,QWORD PTR [rsi+0x10]
   14001d14c:	test   rdi,rdi
   14001d14f:	je     0x14001d179
   14001d151:	mov    rax,QWORD PTR [rbx]
   14001d154:	mov    rdx,rdi
   14001d157:	mov    rcx,rbx
   14001d15a:	call   QWORD PTR [rax+0x8]
   14001d15d:	test   al,al
   14001d15f:	je     0x14001d16d
   14001d161:	mov    rax,QWORD PTR [rdi]
   14001d164:	mov    rdx,rbx
   14001d167:	mov    rcx,rdi
   14001d16a:	call   QWORD PTR [rax+0x28]
   14001d16d:	mov    rax,QWORD PTR [rbx]
   14001d170:	mov    rdx,rdi
   14001d173:	mov    rcx,rbx
   14001d176:	call   QWORD PTR [rax+0x10]
   14001d179:	mov    rdi,QWORD PTR [rsp+0x30]
   14001d17e:	mov    rax,QWORD PTR [rbx]
   14001d181:	mov    rdx,rsi
   14001d184:	mov    rcx,rbx
   14001d187:	mov    rbx,QWORD PTR [rsp+0x38]
   14001d18c:	add    rsp,0x20
   14001d190:	pop    rsi
   14001d191:	rex.W jmp QWORD PTR [rax+0x3e8]
   14001d198:	int3   
   14001d199:	int3   
   14001d19a:	int3   
   14001d19b:	int3   
   14001d19c:	int3   
   14001d19d:	int3   
   14001d19e:	int3   
   14001d19f:	int3   
   14001d1a0:	mov    QWORD PTR [rsp+0x10],rbx
   14001d1a5:	push   rsi
   14001d1a6:	sub    rsp,0x20
   14001d1aa:	mov    rax,QWORD PTR [rdx]
   14001d1ad:	mov    rbx,rdx
   14001d1b0:	mov    rsi,rcx
   14001d1b3:	mov    rdx,rcx
   14001d1b6:	mov    rcx,rbx
   14001d1b9:	call   QWORD PTR [rax+0x100]
   14001d1bf:	test   al,al
   14001d1c1:	je     0x14001d264
   14001d1c7:	mov    QWORD PTR [rsp+0x30],rdi
   14001d1cc:	mov    rdi,QWORD PTR [rsi+0x10]
   14001d1d0:	test   rdi,rdi
   14001d1d3:	je     0x14001d1fd
   14001d1d5:	mov    rax,QWORD PTR [rbx]
   14001d1d8:	mov    rdx,rdi
   14001d1db:	mov    rcx,rbx
   14001d1de:	call   QWORD PTR [rax+0x8]
   14001d1e1:	test   al,al
   14001d1e3:	je     0x14001d1f1
   14001d1e5:	mov    rax,QWORD PTR [rdi]
   14001d1e8:	mov    rdx,rbx
   14001d1eb:	mov    rcx,rdi
   14001d1ee:	call   QWORD PTR [rax+0x28]
   14001d1f1:	mov    rax,QWORD PTR [rbx]
   14001d1f4:	mov    rdx,rdi
   14001d1f7:	mov    rcx,rbx
   14001d1fa:	call   QWORD PTR [rax+0x10]
   14001d1fd:	mov    rdi,QWORD PTR [rsi+0x18]
   14001d201:	test   rdi,rdi
   14001d204:	je     0x14001d22e
   14001d206:	mov    rax,QWORD PTR [rbx]
   14001d209:	mov    rdx,rdi
   14001d20c:	mov    rcx,rbx
   14001d20f:	call   QWORD PTR [rax+0x8]
   14001d212:	test   al,al
   14001d214:	je     0x14001d222
   14001d216:	mov    rax,QWORD PTR [rdi]
   14001d219:	mov    rdx,rbx
   14001d21c:	mov    rcx,rdi
   14001d21f:	call   QWORD PTR [rax+0x28]
   14001d222:	mov    rax,QWORD PTR [rbx]
   14001d225:	mov    rdx,rdi
   14001d228:	mov    rcx,rbx
   14001d22b:	call   QWORD PTR [rax+0x10]
   14001d22e:	mov    rdi,QWORD PTR [rsi+0x20]
   14001d232:	test   rdi,rdi
   14001d235:	je     0x14001d25f
   14001d237:	mov    rax,QWORD PTR [rbx]
   14001d23a:	mov    rdx,rdi
   14001d23d:	mov    rcx,rbx
   14001d240:	call   QWORD PTR [rax+0x8]
   14001d243:	test   al,al
   14001d245:	je     0x14001d253
   14001d247:	mov    rax,QWORD PTR [rdi]
   14001d24a:	mov    rdx,rbx
   14001d24d:	mov    rcx,rdi
   14001d250:	call   QWORD PTR [rax+0x28]
   14001d253:	mov    rax,QWORD PTR [rbx]
   14001d256:	mov    rdx,rdi
   14001d259:	mov    rcx,rbx
   14001d25c:	call   QWORD PTR [rax+0x10]
   14001d25f:	mov    rdi,QWORD PTR [rsp+0x30]
   14001d264:	mov    rax,QWORD PTR [rbx]
   14001d267:	mov    rdx,rsi
   14001d26a:	mov    rcx,rbx
   14001d26d:	mov    rbx,QWORD PTR [rsp+0x38]
   14001d272:	add    rsp,0x20
   14001d276:	pop    rsi
   14001d277:	rex.W jmp QWORD PTR [rax+0x3e0]
   14001d27e:	int3   
   14001d27f:	int3   
   14001d280:	mov    QWORD PTR [rsp+0x10],rbx
   14001d285:	push   rsi
   14001d286:	sub    rsp,0x20
   14001d28a:	mov    rax,QWORD PTR [rdx]
   14001d28d:	mov    rbx,rdx
   14001d290:	mov    rsi,rcx
   14001d293:	mov    rdx,rcx
   14001d296:	mov    rcx,rbx
   14001d299:	call   QWORD PTR [rax+0xf8]
   14001d29f:	test   al,al
   14001d2a1:	je     0x14001d30f
   14001d2a3:	mov    QWORD PTR [rsp+0x30],rdi
   14001d2a8:	mov    rdi,QWORD PTR [rsi+0x10]
   14001d2ac:	test   rdi,rdi
   14001d2af:	je     0x14001d2d9
   14001d2b1:	mov    rax,QWORD PTR [rbx]
   14001d2b4:	mov    rdx,rdi
   14001d2b7:	mov    rcx,rbx
   14001d2ba:	call   QWORD PTR [rax+0x8]
   14001d2bd:	test   al,al
   14001d2bf:	je     0x14001d2cd
   14001d2c1:	mov    rax,QWORD PTR [rdi]
   14001d2c4:	mov    rdx,rbx
   14001d2c7:	mov    rcx,rdi
   14001d2ca:	call   QWORD PTR [rax+0x28]
   14001d2cd:	mov    rax,QWORD PTR [rbx]
   14001d2d0:	mov    rdx,rdi
   14001d2d3:	mov    rcx,rbx
   14001d2d6:	call   QWORD PTR [rax+0x10]
   14001d2d9:	mov    rdi,QWORD PTR [rsi+0x18]
   14001d2dd:	test   rdi,rdi
   14001d2e0:	je     0x14001d30a
   14001d2e2:	mov    rax,QWORD PTR [rbx]
   14001d2e5:	mov    rdx,rdi
   14001d2e8:	mov    rcx,rbx
   14001d2eb:	call   QWORD PTR [rax+0x8]
   14001d2ee:	test   al,al
   14001d2f0:	je     0x14001d2fe
   14001d2f2:	mov    rax,QWORD PTR [rdi]
   14001d2f5:	mov    rdx,rbx
   14001d2f8:	mov    rcx,rdi
   14001d2fb:	call   QWORD PTR [rax+0x28]
   14001d2fe:	mov    rax,QWORD PTR [rbx]
   14001d301:	mov    rdx,rdi
   14001d304:	mov    rcx,rbx
   14001d307:	call   QWORD PTR [rax+0x10]
   14001d30a:	mov    rdi,QWORD PTR [rsp+0x30]
   14001d30f:	mov    rax,QWORD PTR [rbx]
   14001d312:	mov    rdx,rsi
   14001d315:	mov    rcx,rbx
   14001d318:	mov    rbx,QWORD PTR [rsp+0x38]
   14001d31d:	add    rsp,0x20
   14001d321:	pop    rsi
   14001d322:	rex.W jmp QWORD PTR [rax+0x3d8]
   14001d329:	int3   
   14001d32a:	int3   
   14001d32b:	int3   
   14001d32c:	int3   
   14001d32d:	int3   
   14001d32e:	int3   
   14001d32f:	int3   
   14001d330:	mov    QWORD PTR [rsp+0x10],rbx
   14001d335:	push   rsi
   14001d336:	sub    rsp,0x20
   14001d33a:	mov    rax,QWORD PTR [rdx]
   14001d33d:	mov    rbx,rdx
   14001d340:	mov    rsi,rcx
   14001d343:	mov    rdx,rcx
   14001d346:	mov    rcx,rbx
   14001d349:	call   QWORD PTR [rax+0xf0]
   14001d34f:	test   al,al
   14001d351:	je     0x14001d3bf
   14001d353:	mov    QWORD PTR [rsp+0x30],rdi
   14001d358:	mov    rdi,QWORD PTR [rsi+0x10]
   14001d35c:	test   rdi,rdi
   14001d35f:	je     0x14001d389
   14001d361:	mov    rax,QWORD PTR [rbx]
   14001d364:	mov    rdx,rdi
   14001d367:	mov    rcx,rbx
   14001d36a:	call   QWORD PTR [rax+0x8]
   14001d36d:	test   al,al
   14001d36f:	je     0x14001d37d
   14001d371:	mov    rax,QWORD PTR [rdi]
   14001d374:	mov    rdx,rbx
   14001d377:	mov    rcx,rdi
   14001d37a:	call   QWORD PTR [rax+0x28]
   14001d37d:	mov    rax,QWORD PTR [rbx]
   14001d380:	mov    rdx,rdi
   14001d383:	mov    rcx,rbx
   14001d386:	call   QWORD PTR [rax+0x10]
   14001d389:	mov    rdi,QWORD PTR [rsi+0x18]
   14001d38d:	test   rdi,rdi
   14001d390:	je     0x14001d3ba
   14001d392:	mov    rax,QWORD PTR [rbx]
   14001d395:	mov    rdx,rdi
   14001d398:	mov    rcx,rbx
   14001d39b:	call   QWORD PTR [rax+0x8]
   14001d39e:	test   al,al
   14001d3a0:	je     0x14001d3ae
   14001d3a2:	mov    rax,QWORD PTR [rdi]
   14001d3a5:	mov    rdx,rbx
   14001d3a8:	mov    rcx,rdi
   14001d3ab:	call   QWORD PTR [rax+0x28]
   14001d3ae:	mov    rax,QWORD PTR [rbx]
   14001d3b1:	mov    rdx,rdi
   14001d3b4:	mov    rcx,rbx
   14001d3b7:	call   QWORD PTR [rax+0x10]
   14001d3ba:	mov    rdi,QWORD PTR [rsp+0x30]
   14001d3bf:	mov    rax,QWORD PTR [rbx]
   14001d3c2:	mov    rdx,rsi
   14001d3c5:	mov    rcx,rbx
   14001d3c8:	mov    rbx,QWORD PTR [rsp+0x38]
   14001d3cd:	add    rsp,0x20
   14001d3d1:	pop    rsi
   14001d3d2:	rex.W jmp QWORD PTR [rax+0x3d0]
   14001d3d9:	int3   
   14001d3da:	int3   
   14001d3db:	int3   
   14001d3dc:	int3   
   14001d3dd:	int3   
   14001d3de:	int3   
   14001d3df:	int3   
   14001d3e0:	mov    QWORD PTR [rsp+0x10],rbx
   14001d3e5:	push   rsi
   14001d3e6:	sub    rsp,0x20
   14001d3ea:	mov    rax,QWORD PTR [rdx]
   14001d3ed:	mov    rbx,rdx
   14001d3f0:	mov    rsi,rcx
   14001d3f3:	mov    rdx,rcx
   14001d3f6:	mov    rcx,rbx
   14001d3f9:	call   QWORD PTR [rax+0xe8]
   14001d3ff:	test   al,al
   14001d401:	je     0x14001d4d5
   14001d407:	mov    QWORD PTR [rsp+0x30],rdi
   14001d40c:	mov    rdi,QWORD PTR [rsi+0x10]
   14001d410:	test   rdi,rdi
   14001d413:	je     0x14001d43d
   14001d415:	mov    rax,QWORD PTR [rbx]
   14001d418:	mov    rdx,rdi
   14001d41b:	mov    rcx,rbx
   14001d41e:	call   QWORD PTR [rax+0x8]
   14001d421:	test   al,al
   14001d423:	je     0x14001d431
   14001d425:	mov    rax,QWORD PTR [rdi]
   14001d428:	mov    rdx,rbx
   14001d42b:	mov    rcx,rdi
   14001d42e:	call   QWORD PTR [rax+0x28]
   14001d431:	mov    rax,QWORD PTR [rbx]
   14001d434:	mov    rdx,rdi
   14001d437:	mov    rcx,rbx
   14001d43a:	call   QWORD PTR [rax+0x10]
   14001d43d:	mov    rdi,QWORD PTR [rsi+0x18]
   14001d441:	test   rdi,rdi
   14001d444:	je     0x14001d46e
   14001d446:	mov    rax,QWORD PTR [rbx]
   14001d449:	mov    rdx,rdi
   14001d44c:	mov    rcx,rbx
   14001d44f:	call   QWORD PTR [rax+0x8]
   14001d452:	test   al,al
   14001d454:	je     0x14001d462
   14001d456:	mov    rax,QWORD PTR [rdi]
   14001d459:	mov    rdx,rbx
   14001d45c:	mov    rcx,rdi
   14001d45f:	call   QWORD PTR [rax+0x28]
   14001d462:	mov    rax,QWORD PTR [rbx]
   14001d465:	mov    rdx,rdi
   14001d468:	mov    rcx,rbx
   14001d46b:	call   QWORD PTR [rax+0x10]
   14001d46e:	mov    rdi,QWORD PTR [rsi+0x20]
   14001d472:	test   rdi,rdi
   14001d475:	je     0x14001d49f
   14001d477:	mov    rax,QWORD PTR [rbx]
   14001d47a:	mov    rdx,rdi
   14001d47d:	mov    rcx,rbx
   14001d480:	call   QWORD PTR [rax+0x8]
   14001d483:	test   al,al
   14001d485:	je     0x14001d493
   14001d487:	mov    rax,QWORD PTR [rdi]
   14001d48a:	mov    rdx,rbx
   14001d48d:	mov    rcx,rdi
   14001d490:	call   QWORD PTR [rax+0x28]
   14001d493:	mov    rax,QWORD PTR [rbx]
   14001d496:	mov    rdx,rdi
   14001d499:	mov    rcx,rbx
   14001d49c:	call   QWORD PTR [rax+0x10]
   14001d49f:	mov    rdi,QWORD PTR [rsi+0x28]
   14001d4a3:	test   rdi,rdi
   14001d4a6:	je     0x14001d4d0
   14001d4a8:	mov    rax,QWORD PTR [rbx]
   14001d4ab:	mov    rdx,rdi
   14001d4ae:	mov    rcx,rbx
   14001d4b1:	call   QWORD PTR [rax+0x8]
   14001d4b4:	test   al,al
   14001d4b6:	je     0x14001d4c4
   14001d4b8:	mov    rax,QWORD PTR [rdi]
   14001d4bb:	mov    rdx,rbx
   14001d4be:	mov    rcx,rdi
   14001d4c1:	call   QWORD PTR [rax+0x28]
   14001d4c4:	mov    rax,QWORD PTR [rbx]
   14001d4c7:	mov    rdx,rdi
   14001d4ca:	mov    rcx,rbx
   14001d4cd:	call   QWORD PTR [rax+0x10]
   14001d4d0:	mov    rdi,QWORD PTR [rsp+0x30]
   14001d4d5:	mov    rax,QWORD PTR [rbx]
   14001d4d8:	mov    rdx,rsi
   14001d4db:	mov    rcx,rbx
   14001d4de:	mov    rbx,QWORD PTR [rsp+0x38]
   14001d4e3:	add    rsp,0x20
   14001d4e7:	pop    rsi
   14001d4e8:	rex.W jmp QWORD PTR [rax+0x3c8]
   14001d4ef:	int3   
   14001d4f0:	mov    QWORD PTR [rsp+0x10],rbx
   14001d4f5:	push   rsi
   14001d4f6:	sub    rsp,0x20
   14001d4fa:	mov    rax,QWORD PTR [rdx]
   14001d4fd:	mov    rbx,rdx
   14001d500:	mov    rsi,rcx
   14001d503:	mov    rdx,rcx
   14001d506:	mov    rcx,rbx
   14001d509:	call   QWORD PTR [rax+0xe0]
   14001d50f:	test   al,al
   14001d511:	je     0x14001d5e5
   14001d517:	mov    QWORD PTR [rsp+0x30],rdi
   14001d51c:	mov    rdi,QWORD PTR [rsi+0x10]
   14001d520:	test   rdi,rdi
   14001d523:	je     0x14001d54d
   14001d525:	mov    rax,QWORD PTR [rbx]
   14001d528:	mov    rdx,rdi
   14001d52b:	mov    rcx,rbx
   14001d52e:	call   QWORD PTR [rax+0x8]
   14001d531:	test   al,al
   14001d533:	je     0x14001d541
   14001d535:	mov    rax,QWORD PTR [rdi]
   14001d538:	mov    rdx,rbx
   14001d53b:	mov    rcx,rdi
   14001d53e:	call   QWORD PTR [rax+0x28]
   14001d541:	mov    rax,QWORD PTR [rbx]
   14001d544:	mov    rdx,rdi
   14001d547:	mov    rcx,rbx
   14001d54a:	call   QWORD PTR [rax+0x10]
   14001d54d:	mov    rdi,QWORD PTR [rsi+0x18]
   14001d551:	test   rdi,rdi
   14001d554:	je     0x14001d57e
   14001d556:	mov    rax,QWORD PTR [rbx]
   14001d559:	mov    rdx,rdi
   14001d55c:	mov    rcx,rbx
   14001d55f:	call   QWORD PTR [rax+0x8]
   14001d562:	test   al,al
   14001d564:	je     0x14001d572
   14001d566:	mov    rax,QWORD PTR [rdi]
   14001d569:	mov    rdx,rbx
   14001d56c:	mov    rcx,rdi
   14001d56f:	call   QWORD PTR [rax+0x28]
   14001d572:	mov    rax,QWORD PTR [rbx]
   14001d575:	mov    rdx,rdi
   14001d578:	mov    rcx,rbx
   14001d57b:	call   QWORD PTR [rax+0x10]
   14001d57e:	mov    rdi,QWORD PTR [rsi+0x20]
   14001d582:	test   rdi,rdi
   14001d585:	je     0x14001d5af
   14001d587:	mov    rax,QWORD PTR [rbx]
   14001d58a:	mov    rdx,rdi
   14001d58d:	mov    rcx,rbx
   14001d590:	call   QWORD PTR [rax+0x8]
   14001d593:	test   al,al
   14001d595:	je     0x14001d5a3
   14001d597:	mov    rax,QWORD PTR [rdi]
   14001d59a:	mov    rdx,rbx
   14001d59d:	mov    rcx,rdi
   14001d5a0:	call   QWORD PTR [rax+0x28]
   14001d5a3:	mov    rax,QWORD PTR [rbx]
   14001d5a6:	mov    rdx,rdi
   14001d5a9:	mov    rcx,rbx
   14001d5ac:	call   QWORD PTR [rax+0x10]
   14001d5af:	mov    rdi,QWORD PTR [rsi+0x28]
   14001d5b3:	test   rdi,rdi
   14001d5b6:	je     0x14001d5e0
   14001d5b8:	mov    rax,QWORD PTR [rbx]
   14001d5bb:	mov    rdx,rdi
   14001d5be:	mov    rcx,rbx
   14001d5c1:	call   QWORD PTR [rax+0x8]
   14001d5c4:	test   al,al
   14001d5c6:	je     0x14001d5d4
   14001d5c8:	mov    rax,QWORD PTR [rdi]
   14001d5cb:	mov    rdx,rbx
   14001d5ce:	mov    rcx,rdi
   14001d5d1:	call   QWORD PTR [rax+0x28]
   14001d5d4:	mov    rax,QWORD PTR [rbx]
   14001d5d7:	mov    rdx,rdi
   14001d5da:	mov    rcx,rbx
   14001d5dd:	call   QWORD PTR [rax+0x10]
   14001d5e0:	mov    rdi,QWORD PTR [rsp+0x30]
   14001d5e5:	mov    rax,QWORD PTR [rbx]
   14001d5e8:	mov    rdx,rsi
   14001d5eb:	mov    rcx,rbx
   14001d5ee:	mov    rbx,QWORD PTR [rsp+0x38]
   14001d5f3:	add    rsp,0x20
   14001d5f7:	pop    rsi
   14001d5f8:	rex.W jmp QWORD PTR [rax+0x3c0]
   14001d5ff:	int3   
   14001d600:	mov    QWORD PTR [rsp+0x10],rbx
   14001d605:	push   rsi
   14001d606:	sub    rsp,0x20
   14001d60a:	mov    rax,QWORD PTR [rdx]
   14001d60d:	mov    rbx,rdx
   14001d610:	mov    rsi,rcx
   14001d613:	mov    rdx,rcx
   14001d616:	mov    rcx,rbx
   14001d619:	call   QWORD PTR [rax+0xd8]
   14001d61f:	test   al,al
   14001d621:	je     0x14001d6c4
   14001d627:	mov    QWORD PTR [rsp+0x30],rdi
   14001d62c:	mov    rdi,QWORD PTR [rsi+0x10]
   14001d630:	test   rdi,rdi
   14001d633:	je     0x14001d65d
   14001d635:	mov    rax,QWORD PTR [rbx]
   14001d638:	mov    rdx,rdi
   14001d63b:	mov    rcx,rbx
   14001d63e:	call   QWORD PTR [rax+0x8]
   14001d641:	test   al,al
   14001d643:	je     0x14001d651
   14001d645:	mov    rax,QWORD PTR [rdi]
   14001d648:	mov    rdx,rbx
   14001d64b:	mov    rcx,rdi
   14001d64e:	call   QWORD PTR [rax+0x28]
   14001d651:	mov    rax,QWORD PTR [rbx]
   14001d654:	mov    rdx,rdi
   14001d657:	mov    rcx,rbx
   14001d65a:	call   QWORD PTR [rax+0x10]
   14001d65d:	mov    rdi,QWORD PTR [rsi+0x18]
   14001d661:	test   rdi,rdi
   14001d664:	je     0x14001d68e
   14001d666:	mov    rax,QWORD PTR [rbx]
   14001d669:	mov    rdx,rdi
   14001d66c:	mov    rcx,rbx
   14001d66f:	call   QWORD PTR [rax+0x8]
   14001d672:	test   al,al
   14001d674:	je     0x14001d682
   14001d676:	mov    rax,QWORD PTR [rdi]
   14001d679:	mov    rdx,rbx
   14001d67c:	mov    rcx,rdi
   14001d67f:	call   QWORD PTR [rax+0x28]
   14001d682:	mov    rax,QWORD PTR [rbx]
   14001d685:	mov    rdx,rdi
   14001d688:	mov    rcx,rbx
   14001d68b:	call   QWORD PTR [rax+0x10]
   14001d68e:	mov    rdi,QWORD PTR [rsi+0x20]
   14001d692:	test   rdi,rdi
   14001d695:	je     0x14001d6bf
   14001d697:	mov    rax,QWORD PTR [rbx]
   14001d69a:	mov    rdx,rdi
   14001d69d:	mov    rcx,rbx
   14001d6a0:	call   QWORD PTR [rax+0x8]
   14001d6a3:	test   al,al
   14001d6a5:	je     0x14001d6b3
   14001d6a7:	mov    rax,QWORD PTR [rdi]
   14001d6aa:	mov    rdx,rbx
   14001d6ad:	mov    rcx,rdi
   14001d6b0:	call   QWORD PTR [rax+0x28]
   14001d6b3:	mov    rax,QWORD PTR [rbx]
   14001d6b6:	mov    rdx,rdi
   14001d6b9:	mov    rcx,rbx
   14001d6bc:	call   QWORD PTR [rax+0x10]
   14001d6bf:	mov    rdi,QWORD PTR [rsp+0x30]
   14001d6c4:	mov    rax,QWORD PTR [rbx]
   14001d6c7:	mov    rdx,rsi
   14001d6ca:	mov    rcx,rbx
   14001d6cd:	mov    rbx,QWORD PTR [rsp+0x38]
   14001d6d2:	add    rsp,0x20
   14001d6d6:	pop    rsi
   14001d6d7:	rex.W jmp QWORD PTR [rax+0x3b8]
   14001d6de:	int3   
   14001d6df:	int3   
   14001d6e0:	mov    QWORD PTR [rsp+0x10],rbx
   14001d6e5:	push   rsi
   14001d6e6:	sub    rsp,0x20
   14001d6ea:	mov    rax,QWORD PTR [rdx]
   14001d6ed:	mov    rbx,rdx
   14001d6f0:	mov    rsi,rcx
   14001d6f3:	mov    rdx,rcx
   14001d6f6:	mov    rcx,rbx
   14001d6f9:	call   QWORD PTR [rax+0xd0]
   14001d6ff:	test   al,al
   14001d701:	je     0x14001d7a4
   14001d707:	mov    QWORD PTR [rsp+0x30],rdi
   14001d70c:	mov    rdi,QWORD PTR [rsi+0x10]
   14001d710:	test   rdi,rdi
   14001d713:	je     0x14001d73d
   14001d715:	mov    rax,QWORD PTR [rbx]
   14001d718:	mov    rdx,rdi
   14001d71b:	mov    rcx,rbx
   14001d71e:	call   QWORD PTR [rax+0x8]
   14001d721:	test   al,al
   14001d723:	je     0x14001d731
   14001d725:	mov    rax,QWORD PTR [rdi]
   14001d728:	mov    rdx,rbx
   14001d72b:	mov    rcx,rdi
   14001d72e:	call   QWORD PTR [rax+0x28]
   14001d731:	mov    rax,QWORD PTR [rbx]
   14001d734:	mov    rdx,rdi
   14001d737:	mov    rcx,rbx
   14001d73a:	call   QWORD PTR [rax+0x10]
   14001d73d:	mov    rdi,QWORD PTR [rsi+0x18]
   14001d741:	test   rdi,rdi
   14001d744:	je     0x14001d76e
   14001d746:	mov    rax,QWORD PTR [rbx]
   14001d749:	mov    rdx,rdi
   14001d74c:	mov    rcx,rbx
   14001d74f:	call   QWORD PTR [rax+0x8]
   14001d752:	test   al,al
   14001d754:	je     0x14001d762
   14001d756:	mov    rax,QWORD PTR [rdi]
   14001d759:	mov    rdx,rbx
   14001d75c:	mov    rcx,rdi
   14001d75f:	call   QWORD PTR [rax+0x28]
   14001d762:	mov    rax,QWORD PTR [rbx]
   14001d765:	mov    rdx,rdi
   14001d768:	mov    rcx,rbx
   14001d76b:	call   QWORD PTR [rax+0x10]
   14001d76e:	mov    rdi,QWORD PTR [rsi+0x20]
   14001d772:	test   rdi,rdi
   14001d775:	je     0x14001d79f
   14001d777:	mov    rax,QWORD PTR [rbx]
   14001d77a:	mov    rdx,rdi
   14001d77d:	mov    rcx,rbx
   14001d780:	call   QWORD PTR [rax+0x8]
   14001d783:	test   al,al
   14001d785:	je     0x14001d793
   14001d787:	mov    rax,QWORD PTR [rdi]
   14001d78a:	mov    rdx,rbx
   14001d78d:	mov    rcx,rdi
   14001d790:	call   QWORD PTR [rax+0x28]
   14001d793:	mov    rax,QWORD PTR [rbx]
   14001d796:	mov    rdx,rdi
   14001d799:	mov    rcx,rbx
   14001d79c:	call   QWORD PTR [rax+0x10]
   14001d79f:	mov    rdi,QWORD PTR [rsp+0x30]
   14001d7a4:	mov    rax,QWORD PTR [rbx]
   14001d7a7:	mov    rdx,rsi
   14001d7aa:	mov    rcx,rbx
   14001d7ad:	mov    rbx,QWORD PTR [rsp+0x38]
   14001d7b2:	add    rsp,0x20
   14001d7b6:	pop    rsi
   14001d7b7:	rex.W jmp QWORD PTR [rax+0x3b0]
   14001d7be:	int3   
   14001d7bf:	int3   
   14001d7c0:	mov    QWORD PTR [rsp+0x8],rbx
   14001d7c5:	push   rdi
   14001d7c6:	sub    rsp,0x20
   14001d7ca:	mov    rax,QWORD PTR [rdx]
   14001d7cd:	mov    rdi,rdx
   14001d7d0:	mov    rbx,rcx
   14001d7d3:	mov    rdx,rcx
   14001d7d6:	mov    rcx,rdi
   14001d7d9:	call   QWORD PTR [rax+0xc8]
   14001d7df:	mov    r11,QWORD PTR [rdi]
   14001d7e2:	mov    rdx,rbx
   14001d7e5:	mov    rcx,rdi
   14001d7e8:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d7ed:	add    rsp,0x20
   14001d7f1:	pop    rdi
   14001d7f2:	rex.WB jmp QWORD PTR [r11+0x3a8]
   14001d7f9:	int3   
   14001d7fa:	int3   
   14001d7fb:	int3   
   14001d7fc:	int3   
   14001d7fd:	int3   
   14001d7fe:	int3   
   14001d7ff:	int3   
   14001d800:	mov    QWORD PTR [rsp+0x8],rbx
   14001d805:	push   rdi
   14001d806:	sub    rsp,0x20
   14001d80a:	mov    rax,QWORD PTR [rdx]
   14001d80d:	mov    rdi,rdx
   14001d810:	mov    rbx,rcx
   14001d813:	mov    rdx,rcx
   14001d816:	mov    rcx,rdi
   14001d819:	call   QWORD PTR [rax+0xc0]
   14001d81f:	mov    r11,QWORD PTR [rdi]
   14001d822:	mov    rdx,rbx
   14001d825:	mov    rcx,rdi
   14001d828:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d82d:	add    rsp,0x20
   14001d831:	pop    rdi
   14001d832:	rex.WB jmp QWORD PTR [r11+0x3a0]
   14001d839:	int3   
   14001d83a:	int3   
   14001d83b:	int3   
   14001d83c:	int3   
   14001d83d:	int3   
   14001d83e:	int3   
   14001d83f:	int3   
   14001d840:	mov    QWORD PTR [rsp+0x10],rbx
   14001d845:	push   rsi
   14001d846:	sub    rsp,0x20
   14001d84a:	mov    rax,QWORD PTR [rdx]
   14001d84d:	mov    rbx,rdx
   14001d850:	mov    rsi,rcx
   14001d853:	mov    rdx,rcx
   14001d856:	mov    rcx,rbx
   14001d859:	call   QWORD PTR [rax+0xb8]
   14001d85f:	test   al,al
   14001d861:	je     0x14001d89e
   14001d863:	mov    QWORD PTR [rsp+0x30],rdi
   14001d868:	mov    rdi,QWORD PTR [rsi+0x10]
   14001d86c:	test   rdi,rdi
   14001d86f:	je     0x14001d899
   14001d871:	mov    rax,QWORD PTR [rbx]
   14001d874:	mov    rdx,rdi
   14001d877:	mov    rcx,rbx
   14001d87a:	call   QWORD PTR [rax+0x8]
   14001d87d:	test   al,al
   14001d87f:	je     0x14001d88d
   14001d881:	mov    rax,QWORD PTR [rdi]
   14001d884:	mov    rdx,rbx
   14001d887:	mov    rcx,rdi
   14001d88a:	call   QWORD PTR [rax+0x28]
   14001d88d:	mov    rax,QWORD PTR [rbx]
   14001d890:	mov    rdx,rdi
   14001d893:	mov    rcx,rbx
   14001d896:	call   QWORD PTR [rax+0x10]
   14001d899:	mov    rdi,QWORD PTR [rsp+0x30]
   14001d89e:	mov    rax,QWORD PTR [rbx]
   14001d8a1:	mov    rdx,rsi
   14001d8a4:	mov    rcx,rbx
   14001d8a7:	mov    rbx,QWORD PTR [rsp+0x38]
   14001d8ac:	add    rsp,0x20
   14001d8b0:	pop    rsi
   14001d8b1:	rex.W jmp QWORD PTR [rax+0x398]
   14001d8b8:	int3   
   14001d8b9:	int3   
   14001d8ba:	int3   
   14001d8bb:	int3   
   14001d8bc:	int3   
   14001d8bd:	int3   
   14001d8be:	int3   
   14001d8bf:	int3   
   14001d8c0:	mov    QWORD PTR [rsp+0x10],rbx
   14001d8c5:	push   rsi
   14001d8c6:	sub    rsp,0x20
   14001d8ca:	mov    rax,QWORD PTR [rdx]
   14001d8cd:	mov    rbx,rdx
   14001d8d0:	mov    rsi,rcx
   14001d8d3:	mov    rdx,rcx
   14001d8d6:	mov    rcx,rbx
   14001d8d9:	call   QWORD PTR [rax+0xb0]
   14001d8df:	test   al,al
   14001d8e1:	je     0x14001d94f
   14001d8e3:	mov    QWORD PTR [rsp+0x30],rdi
   14001d8e8:	mov    rdi,QWORD PTR [rsi+0x10]
   14001d8ec:	test   rdi,rdi
   14001d8ef:	je     0x14001d919
   14001d8f1:	mov    rax,QWORD PTR [rbx]
   14001d8f4:	mov    rdx,rdi
   14001d8f7:	mov    rcx,rbx
   14001d8fa:	call   QWORD PTR [rax+0x8]
   14001d8fd:	test   al,al
   14001d8ff:	je     0x14001d90d
   14001d901:	mov    rax,QWORD PTR [rdi]
   14001d904:	mov    rdx,rbx
   14001d907:	mov    rcx,rdi
   14001d90a:	call   QWORD PTR [rax+0x28]
   14001d90d:	mov    rax,QWORD PTR [rbx]
   14001d910:	mov    rdx,rdi
   14001d913:	mov    rcx,rbx
   14001d916:	call   QWORD PTR [rax+0x10]
   14001d919:	mov    rdi,QWORD PTR [rsi+0x18]
   14001d91d:	test   rdi,rdi
   14001d920:	je     0x14001d94a
   14001d922:	mov    rax,QWORD PTR [rbx]
   14001d925:	mov    rdx,rdi
   14001d928:	mov    rcx,rbx
   14001d92b:	call   QWORD PTR [rax+0x8]
   14001d92e:	test   al,al
   14001d930:	je     0x14001d93e
   14001d932:	mov    rax,QWORD PTR [rdi]
   14001d935:	mov    rdx,rbx
   14001d938:	mov    rcx,rdi
   14001d93b:	call   QWORD PTR [rax+0x28]
   14001d93e:	mov    rax,QWORD PTR [rbx]
   14001d941:	mov    rdx,rdi
   14001d944:	mov    rcx,rbx
   14001d947:	call   QWORD PTR [rax+0x10]
   14001d94a:	mov    rdi,QWORD PTR [rsp+0x30]
   14001d94f:	mov    rax,QWORD PTR [rbx]
   14001d952:	mov    rdx,rsi
   14001d955:	mov    rcx,rbx
   14001d958:	mov    rbx,QWORD PTR [rsp+0x38]
   14001d95d:	add    rsp,0x20
   14001d961:	pop    rsi
   14001d962:	rex.W jmp QWORD PTR [rax+0x390]
   14001d969:	int3   
   14001d96a:	int3   
   14001d96b:	int3   
   14001d96c:	int3   
   14001d96d:	int3   
   14001d96e:	int3   
   14001d96f:	int3   
   14001d970:	mov    QWORD PTR [rsp+0x10],rbx
   14001d975:	push   rsi
   14001d976:	sub    rsp,0x20
   14001d97a:	mov    rax,QWORD PTR [rdx]
   14001d97d:	mov    rbx,rdx
   14001d980:	mov    rsi,rcx
   14001d983:	mov    rdx,rcx
   14001d986:	mov    rcx,rbx
   14001d989:	call   QWORD PTR [rax+0xa8]
   14001d98f:	test   al,al
   14001d991:	je     0x14001d9ff
   14001d993:	mov    QWORD PTR [rsp+0x30],rdi
   14001d998:	mov    rdi,QWORD PTR [rsi+0x10]
   14001d99c:	test   rdi,rdi
   14001d99f:	je     0x14001d9c9
   14001d9a1:	mov    rax,QWORD PTR [rbx]
   14001d9a4:	mov    rdx,rdi
   14001d9a7:	mov    rcx,rbx
   14001d9aa:	call   QWORD PTR [rax+0x8]
   14001d9ad:	test   al,al
   14001d9af:	je     0x14001d9bd
   14001d9b1:	mov    rax,QWORD PTR [rdi]
   14001d9b4:	mov    rdx,rbx
   14001d9b7:	mov    rcx,rdi
   14001d9ba:	call   QWORD PTR [rax+0x28]
   14001d9bd:	mov    rax,QWORD PTR [rbx]
   14001d9c0:	mov    rdx,rdi
   14001d9c3:	mov    rcx,rbx
   14001d9c6:	call   QWORD PTR [rax+0x10]
   14001d9c9:	mov    rdi,QWORD PTR [rsi+0x18]
   14001d9cd:	test   rdi,rdi
   14001d9d0:	je     0x14001d9fa
   14001d9d2:	mov    rax,QWORD PTR [rbx]
   14001d9d5:	mov    rdx,rdi
   14001d9d8:	mov    rcx,rbx
   14001d9db:	call   QWORD PTR [rax+0x8]
   14001d9de:	test   al,al
   14001d9e0:	je     0x14001d9ee
   14001d9e2:	mov    rax,QWORD PTR [rdi]
   14001d9e5:	mov    rdx,rbx
   14001d9e8:	mov    rcx,rdi
   14001d9eb:	call   QWORD PTR [rax+0x28]
   14001d9ee:	mov    rax,QWORD PTR [rbx]
   14001d9f1:	mov    rdx,rdi
   14001d9f4:	mov    rcx,rbx
   14001d9f7:	call   QWORD PTR [rax+0x10]
   14001d9fa:	mov    rdi,QWORD PTR [rsp+0x30]
   14001d9ff:	mov    rax,QWORD PTR [rbx]
   14001da02:	mov    rdx,rsi
   14001da05:	mov    rcx,rbx
   14001da08:	mov    rbx,QWORD PTR [rsp+0x38]
   14001da0d:	add    rsp,0x20
   14001da11:	pop    rsi
   14001da12:	rex.W jmp QWORD PTR [rax+0x388]
   14001da19:	int3   
   14001da1a:	int3   
   14001da1b:	int3   
   14001da1c:	int3   
   14001da1d:	int3   
   14001da1e:	int3   
   14001da1f:	int3   
   14001da20:	mov    QWORD PTR [rsp+0x10],rbx
   14001da25:	push   rsi
   14001da26:	sub    rsp,0x20
   14001da2a:	mov    rax,QWORD PTR [rdx]
   14001da2d:	mov    rbx,rdx
   14001da30:	mov    rsi,rcx
   14001da33:	mov    rdx,rcx
   14001da36:	mov    rcx,rbx
   14001da39:	call   QWORD PTR [rax+0xa0]
   14001da3f:	test   al,al
   14001da41:	je     0x14001dae4
   14001da47:	mov    QWORD PTR [rsp+0x30],rdi
   14001da4c:	mov    rdi,QWORD PTR [rsi+0x10]
   14001da50:	test   rdi,rdi
   14001da53:	je     0x14001da7d
   14001da55:	mov    rax,QWORD PTR [rbx]
   14001da58:	mov    rdx,rdi
   14001da5b:	mov    rcx,rbx
   14001da5e:	call   QWORD PTR [rax+0x8]
   14001da61:	test   al,al
   14001da63:	je     0x14001da71
   14001da65:	mov    rax,QWORD PTR [rdi]
   14001da68:	mov    rdx,rbx
   14001da6b:	mov    rcx,rdi
   14001da6e:	call   QWORD PTR [rax+0x28]
   14001da71:	mov    rax,QWORD PTR [rbx]
   14001da74:	mov    rdx,rdi
   14001da77:	mov    rcx,rbx
   14001da7a:	call   QWORD PTR [rax+0x10]
   14001da7d:	mov    rdi,QWORD PTR [rsi+0x18]
   14001da81:	test   rdi,rdi
   14001da84:	je     0x14001daae
   14001da86:	mov    rax,QWORD PTR [rbx]
   14001da89:	mov    rdx,rdi
   14001da8c:	mov    rcx,rbx
   14001da8f:	call   QWORD PTR [rax+0x8]
   14001da92:	test   al,al
   14001da94:	je     0x14001daa2
   14001da96:	mov    rax,QWORD PTR [rdi]
   14001da99:	mov    rdx,rbx
   14001da9c:	mov    rcx,rdi
   14001da9f:	call   QWORD PTR [rax+0x28]
   14001daa2:	mov    rax,QWORD PTR [rbx]
   14001daa5:	mov    rdx,rdi
   14001daa8:	mov    rcx,rbx
   14001daab:	call   QWORD PTR [rax+0x10]
   14001daae:	mov    rdi,QWORD PTR [rsi+0x20]
   14001dab2:	test   rdi,rdi
   14001dab5:	je     0x14001dadf
   14001dab7:	mov    rax,QWORD PTR [rbx]
   14001daba:	mov    rdx,rdi
   14001dabd:	mov    rcx,rbx
   14001dac0:	call   QWORD PTR [rax+0x8]
   14001dac3:	test   al,al
   14001dac5:	je     0x14001dad3
   14001dac7:	mov    rax,QWORD PTR [rdi]
   14001daca:	mov    rdx,rbx
   14001dacd:	mov    rcx,rdi
   14001dad0:	call   QWORD PTR [rax+0x28]
   14001dad3:	mov    rax,QWORD PTR [rbx]
   14001dad6:	mov    rdx,rdi
   14001dad9:	mov    rcx,rbx
   14001dadc:	call   QWORD PTR [rax+0x10]
   14001dadf:	mov    rdi,QWORD PTR [rsp+0x30]
   14001dae4:	mov    rax,QWORD PTR [rbx]
   14001dae7:	mov    rdx,rsi
   14001daea:	mov    rcx,rbx
   14001daed:	mov    rbx,QWORD PTR [rsp+0x38]
   14001daf2:	add    rsp,0x20
   14001daf6:	pop    rsi
   14001daf7:	rex.W jmp QWORD PTR [rax+0x380]
   14001dafe:	int3   
   14001daff:	int3   
   14001db00:	mov    QWORD PTR [rsp+0x18],rbp
   14001db05:	push   rsi
   14001db06:	sub    rsp,0x20
   14001db0a:	mov    rax,QWORD PTR [rdx]
   14001db0d:	mov    rsi,rdx
   14001db10:	mov    rbp,rcx
   14001db13:	mov    rdx,rcx
   14001db16:	mov    rcx,rsi
   14001db19:	call   QWORD PTR [rax+0x98]
   14001db1f:	test   al,al
   14001db21:	je     0x14001db79
   14001db23:	mov    QWORD PTR [rsp+0x30],rbx
   14001db28:	mov    rbx,rbp
   14001db2b:	test   rbp,rbp
   14001db2e:	je     0x14001db74
   14001db30:	mov    QWORD PTR [rsp+0x38],rdi
   14001db35:	mov    rdi,QWORD PTR [rbx+0x10]
   14001db39:	test   rdi,rdi
   14001db3c:	je     0x14001db66
   14001db3e:	mov    rax,QWORD PTR [rsi]
   14001db41:	mov    rdx,rdi
   14001db44:	mov    rcx,rsi
   14001db47:	call   QWORD PTR [rax+0x8]
   14001db4a:	test   al,al
   14001db4c:	je     0x14001db5a
   14001db4e:	mov    rax,QWORD PTR [rdi]
   14001db51:	mov    rdx,rsi
   14001db54:	mov    rcx,rdi
   14001db57:	call   QWORD PTR [rax+0x28]
   14001db5a:	mov    rax,QWORD PTR [rsi]
   14001db5d:	mov    rdx,rdi
   14001db60:	mov    rcx,rsi
   14001db63:	call   QWORD PTR [rax+0x10]
   14001db66:	mov    rbx,QWORD PTR [rbx+0x18]
   14001db6a:	test   rbx,rbx
   14001db6d:	jne    0x14001db35
   14001db6f:	mov    rdi,QWORD PTR [rsp+0x38]
   14001db74:	mov    rbx,QWORD PTR [rsp+0x30]
   14001db79:	mov    rax,QWORD PTR [rsi]
   14001db7c:	mov    rdx,rbp
   14001db7f:	mov    rcx,rsi
   14001db82:	mov    rbp,QWORD PTR [rsp+0x40]
   14001db87:	add    rsp,0x20
   14001db8b:	pop    rsi
   14001db8c:	rex.W jmp QWORD PTR [rax+0x378]
   14001db93:	int3   
   14001db94:	int3   
   14001db95:	int3   
   14001db96:	int3   
   14001db97:	int3   
   14001db98:	int3   
   14001db99:	int3   
   14001db9a:	int3   
   14001db9b:	int3   
   14001db9c:	int3   
   14001db9d:	int3   
   14001db9e:	int3   
   14001db9f:	int3   
   14001dba0:	mov    QWORD PTR [rsp+0x10],rbx
   14001dba5:	push   rsi
   14001dba6:	sub    rsp,0x20
   14001dbaa:	mov    rax,QWORD PTR [rdx]
   14001dbad:	mov    rbx,rdx
   14001dbb0:	mov    rsi,rcx
   14001dbb3:	mov    rdx,rcx
   14001dbb6:	mov    rcx,rbx
   14001dbb9:	call   QWORD PTR [rax+0x90]
   14001dbbf:	test   al,al
   14001dbc1:	je     0x14001dc2f
   14001dbc3:	mov    QWORD PTR [rsp+0x30],rdi
   14001dbc8:	mov    rdi,QWORD PTR [rsi+0x10]
   14001dbcc:	test   rdi,rdi
   14001dbcf:	je     0x14001dbf9
   14001dbd1:	mov    rax,QWORD PTR [rbx]
   14001dbd4:	mov    rdx,rdi
   14001dbd7:	mov    rcx,rbx
   14001dbda:	call   QWORD PTR [rax+0x8]
   14001dbdd:	test   al,al
   14001dbdf:	je     0x14001dbed
   14001dbe1:	mov    rax,QWORD PTR [rdi]
   14001dbe4:	mov    rdx,rbx
   14001dbe7:	mov    rcx,rdi
   14001dbea:	call   QWORD PTR [rax+0x28]
   14001dbed:	mov    rax,QWORD PTR [rbx]
   14001dbf0:	mov    rdx,rdi
   14001dbf3:	mov    rcx,rbx
   14001dbf6:	call   QWORD PTR [rax+0x10]
   14001dbf9:	mov    rdi,QWORD PTR [rsi+0x18]
   14001dbfd:	test   rdi,rdi
   14001dc00:	je     0x14001dc2a
   14001dc02:	mov    rax,QWORD PTR [rbx]
   14001dc05:	mov    rdx,rdi
   14001dc08:	mov    rcx,rbx
   14001dc0b:	call   QWORD PTR [rax+0x8]
   14001dc0e:	test   al,al
   14001dc10:	je     0x14001dc1e
   14001dc12:	mov    rax,QWORD PTR [rdi]
   14001dc15:	mov    rdx,rbx
   14001dc18:	mov    rcx,rdi
   14001dc1b:	call   QWORD PTR [rax+0x28]
   14001dc1e:	mov    rax,QWORD PTR [rbx]
   14001dc21:	mov    rdx,rdi
   14001dc24:	mov    rcx,rbx
   14001dc27:	call   QWORD PTR [rax+0x10]
   14001dc2a:	mov    rdi,QWORD PTR [rsp+0x30]
   14001dc2f:	mov    rax,QWORD PTR [rbx]
   14001dc32:	mov    rdx,rsi
   14001dc35:	mov    rcx,rbx
   14001dc38:	mov    rbx,QWORD PTR [rsp+0x38]
   14001dc3d:	add    rsp,0x20
   14001dc41:	pop    rsi
   14001dc42:	rex.W jmp QWORD PTR [rax+0x370]
   14001dc49:	int3   
   14001dc4a:	int3   
   14001dc4b:	int3   
   14001dc4c:	int3   
   14001dc4d:	int3   
   14001dc4e:	int3   
   14001dc4f:	int3   
   14001dc50:	mov    QWORD PTR [rsp+0x10],rbx
   14001dc55:	push   rsi
   14001dc56:	sub    rsp,0x20
   14001dc5a:	mov    rax,QWORD PTR [rdx]
   14001dc5d:	mov    rbx,rdx
   14001dc60:	mov    rsi,rcx
   14001dc63:	mov    rdx,rcx
   14001dc66:	mov    rcx,rbx
   14001dc69:	call   QWORD PTR [rax+0x88]
   14001dc6f:	test   al,al
   14001dc71:	je     0x14001dcae
   14001dc73:	mov    QWORD PTR [rsp+0x30],rdi
   14001dc78:	mov    rdi,QWORD PTR [rsi+0x10]
   14001dc7c:	test   rdi,rdi
   14001dc7f:	je     0x14001dca9
   14001dc81:	mov    rax,QWORD PTR [rbx]
   14001dc84:	mov    rdx,rdi
   14001dc87:	mov    rcx,rbx
   14001dc8a:	call   QWORD PTR [rax+0x8]
   14001dc8d:	test   al,al
   14001dc8f:	je     0x14001dc9d
   14001dc91:	mov    rax,QWORD PTR [rdi]
   14001dc94:	mov    rdx,rbx
   14001dc97:	mov    rcx,rdi
   14001dc9a:	call   QWORD PTR [rax+0x28]
   14001dc9d:	mov    rax,QWORD PTR [rbx]
   14001dca0:	mov    rdx,rdi
   14001dca3:	mov    rcx,rbx
   14001dca6:	call   QWORD PTR [rax+0x10]
   14001dca9:	mov    rdi,QWORD PTR [rsp+0x30]
   14001dcae:	mov    rax,QWORD PTR [rbx]
   14001dcb1:	mov    rdx,rsi
   14001dcb4:	mov    rcx,rbx
   14001dcb7:	mov    rbx,QWORD PTR [rsp+0x38]
   14001dcbc:	add    rsp,0x20
   14001dcc0:	pop    rsi
   14001dcc1:	rex.W jmp QWORD PTR [rax+0x368]
   14001dcc8:	int3   
   14001dcc9:	int3   
   14001dcca:	int3   
   14001dccb:	int3   
   14001dccc:	int3   
   14001dccd:	int3   
   14001dcce:	int3   
   14001dccf:	int3   
   14001dcd0:	mov    QWORD PTR [rsp+0x10],rbx
   14001dcd5:	push   rsi
   14001dcd6:	sub    rsp,0x20
   14001dcda:	mov    rax,QWORD PTR [rdx]
   14001dcdd:	mov    rbx,rdx
   14001dce0:	mov    rsi,rcx
   14001dce3:	mov    rdx,rcx
   14001dce6:	mov    rcx,rbx
   14001dce9:	call   QWORD PTR [rax+0x80]
   14001dcef:	test   al,al
   14001dcf1:	je     0x14001dd2e
   14001dcf3:	mov    QWORD PTR [rsp+0x30],rdi
   14001dcf8:	mov    rdi,QWORD PTR [rsi+0x20]
   14001dcfc:	test   rdi,rdi
   14001dcff:	je     0x14001dd29
   14001dd01:	mov    rax,QWORD PTR [rbx]
   14001dd04:	mov    rdx,rdi
   14001dd07:	mov    rcx,rbx
   14001dd0a:	call   QWORD PTR [rax+0x8]
   14001dd0d:	test   al,al
   14001dd0f:	je     0x14001dd1d
   14001dd11:	mov    rax,QWORD PTR [rdi]
   14001dd14:	mov    rdx,rbx
   14001dd17:	mov    rcx,rdi
   14001dd1a:	call   QWORD PTR [rax+0x28]
   14001dd1d:	mov    rax,QWORD PTR [rbx]
   14001dd20:	mov    rdx,rdi
   14001dd23:	mov    rcx,rbx
   14001dd26:	call   QWORD PTR [rax+0x10]
   14001dd29:	mov    rdi,QWORD PTR [rsp+0x30]
   14001dd2e:	mov    rax,QWORD PTR [rbx]
   14001dd31:	mov    rdx,rsi
   14001dd34:	mov    rcx,rbx
   14001dd37:	mov    rbx,QWORD PTR [rsp+0x38]
   14001dd3c:	add    rsp,0x20
   14001dd40:	pop    rsi
   14001dd41:	rex.W jmp QWORD PTR [rax+0x360]
   14001dd48:	int3   
   14001dd49:	int3   
   14001dd4a:	int3   
   14001dd4b:	int3   
   14001dd4c:	int3   
   14001dd4d:	int3   
   14001dd4e:	int3   
   14001dd4f:	int3   
   14001dd50:	mov    QWORD PTR [rsp+0x10],rbx
   14001dd55:	push   rsi
   14001dd56:	sub    rsp,0x20
   14001dd5a:	mov    rax,QWORD PTR [rdx]
   14001dd5d:	mov    rbx,rdx
   14001dd60:	mov    rsi,rcx
   14001dd63:	mov    rdx,rcx
   14001dd66:	mov    rcx,rbx
   14001dd69:	call   QWORD PTR [rax+0x78]
   14001dd6c:	test   al,al
   14001dd6e:	je     0x14001ddab
   14001dd70:	mov    QWORD PTR [rsp+0x30],rdi
   14001dd75:	mov    rdi,QWORD PTR [rsi+0x10]
   14001dd79:	test   rdi,rdi
   14001dd7c:	je     0x14001dda6
   14001dd7e:	mov    rax,QWORD PTR [rbx]
   14001dd81:	mov    rdx,rdi
   14001dd84:	mov    rcx,rbx
   14001dd87:	call   QWORD PTR [rax+0x8]
   14001dd8a:	test   al,al
   14001dd8c:	je     0x14001dd9a
   14001dd8e:	mov    rax,QWORD PTR [rdi]
   14001dd91:	mov    rdx,rbx
   14001dd94:	mov    rcx,rdi
   14001dd97:	call   QWORD PTR [rax+0x28]
   14001dd9a:	mov    rax,QWORD PTR [rbx]
   14001dd9d:	mov    rdx,rdi
   14001dda0:	mov    rcx,rbx
   14001dda3:	call   QWORD PTR [rax+0x10]
   14001dda6:	mov    rdi,QWORD PTR [rsp+0x30]
   14001ddab:	mov    rax,QWORD PTR [rbx]
   14001ddae:	mov    rdx,rsi
   14001ddb1:	mov    rcx,rbx
   14001ddb4:	mov    rbx,QWORD PTR [rsp+0x38]
   14001ddb9:	add    rsp,0x20
   14001ddbd:	pop    rsi
   14001ddbe:	rex.W jmp QWORD PTR [rax+0x358]
   14001ddc5:	int3   
   14001ddc6:	int3   
   14001ddc7:	int3   
   14001ddc8:	int3   
   14001ddc9:	int3   
   14001ddca:	int3   
   14001ddcb:	int3   
   14001ddcc:	int3   
   14001ddcd:	int3   
   14001ddce:	int3   
   14001ddcf:	int3   
   14001ddd0:	mov    QWORD PTR [rsp+0x10],rbx
   14001ddd5:	push   rsi
   14001ddd6:	sub    rsp,0x20
   14001ddda:	mov    rax,QWORD PTR [rdx]
   14001dddd:	mov    rbx,rdx
   14001dde0:	mov    rsi,rcx
   14001dde3:	mov    rdx,rcx
   14001dde6:	mov    rcx,rbx
   14001dde9:	call   QWORD PTR [rax+0x70]
   14001ddec:	test   al,al
   14001ddee:	je     0x14001de91
   14001ddf4:	mov    QWORD PTR [rsp+0x30],rdi
   14001ddf9:	mov    rdi,QWORD PTR [rsi+0x10]
   14001ddfd:	test   rdi,rdi
   14001de00:	je     0x14001de2a
   14001de02:	mov    rax,QWORD PTR [rbx]
   14001de05:	mov    rdx,rdi
   14001de08:	mov    rcx,rbx
   14001de0b:	call   QWORD PTR [rax+0x8]
   14001de0e:	test   al,al
   14001de10:	je     0x14001de1e
   14001de12:	mov    rax,QWORD PTR [rdi]
   14001de15:	mov    rdx,rbx
   14001de18:	mov    rcx,rdi
   14001de1b:	call   QWORD PTR [rax+0x28]
   14001de1e:	mov    rax,QWORD PTR [rbx]
   14001de21:	mov    rdx,rdi
   14001de24:	mov    rcx,rbx
   14001de27:	call   QWORD PTR [rax+0x10]
   14001de2a:	mov    rdi,QWORD PTR [rsi+0x18]
   14001de2e:	test   rdi,rdi
   14001de31:	je     0x14001de5b
   14001de33:	mov    rax,QWORD PTR [rbx]
   14001de36:	mov    rdx,rdi
   14001de39:	mov    rcx,rbx
   14001de3c:	call   QWORD PTR [rax+0x8]
   14001de3f:	test   al,al
   14001de41:	je     0x14001de4f
   14001de43:	mov    rax,QWORD PTR [rdi]
   14001de46:	mov    rdx,rbx
   14001de49:	mov    rcx,rdi
   14001de4c:	call   QWORD PTR [rax+0x28]
   14001de4f:	mov    rax,QWORD PTR [rbx]
   14001de52:	mov    rdx,rdi
   14001de55:	mov    rcx,rbx
   14001de58:	call   QWORD PTR [rax+0x10]
   14001de5b:	mov    rdi,QWORD PTR [rsi+0x20]
   14001de5f:	test   rdi,rdi
   14001de62:	je     0x14001de8c
   14001de64:	mov    rax,QWORD PTR [rbx]
   14001de67:	mov    rdx,rdi
   14001de6a:	mov    rcx,rbx
   14001de6d:	call   QWORD PTR [rax+0x8]
   14001de70:	test   al,al
   14001de72:	je     0x14001de80
   14001de74:	mov    rax,QWORD PTR [rdi]
   14001de77:	mov    rdx,rbx
   14001de7a:	mov    rcx,rdi
   14001de7d:	call   QWORD PTR [rax+0x28]
   14001de80:	mov    rax,QWORD PTR [rbx]
   14001de83:	mov    rdx,rdi
   14001de86:	mov    rcx,rbx
   14001de89:	call   QWORD PTR [rax+0x10]
   14001de8c:	mov    rdi,QWORD PTR [rsp+0x30]
   14001de91:	mov    rax,QWORD PTR [rbx]
   14001de94:	mov    rdx,rsi
   14001de97:	mov    rcx,rbx
   14001de9a:	mov    rbx,QWORD PTR [rsp+0x38]
   14001de9f:	add    rsp,0x20
   14001dea3:	pop    rsi
   14001dea4:	rex.W jmp QWORD PTR [rax+0x350]
   14001deab:	int3   
   14001deac:	int3   
   14001dead:	int3   
   14001deae:	int3   
   14001deaf:	int3   
   14001deb0:	mov    QWORD PTR [rsp+0x10],rbx
   14001deb5:	push   rsi
   14001deb6:	sub    rsp,0x20
   14001deba:	mov    rax,QWORD PTR [rdx]
   14001debd:	mov    rbx,rdx
   14001dec0:	mov    rsi,rcx
   14001dec3:	mov    rdx,rcx
   14001dec6:	mov    rcx,rbx
   14001dec9:	call   QWORD PTR [rax+0x68]
   14001decc:	test   al,al
   14001dece:	je     0x14001df0b
   14001ded0:	mov    QWORD PTR [rsp+0x30],rdi
   14001ded5:	mov    rdi,QWORD PTR [rsi+0x20]
   14001ded9:	test   rdi,rdi
   14001dedc:	je     0x14001df06
   14001dede:	mov    rax,QWORD PTR [rbx]
   14001dee1:	mov    rdx,rdi
   14001dee4:	mov    rcx,rbx
   14001dee7:	call   QWORD PTR [rax+0x8]
   14001deea:	test   al,al
   14001deec:	je     0x14001defa
   14001deee:	mov    rax,QWORD PTR [rdi]
   14001def1:	mov    rdx,rbx
   14001def4:	mov    rcx,rdi
   14001def7:	call   QWORD PTR [rax+0x28]
   14001defa:	mov    rax,QWORD PTR [rbx]
   14001defd:	mov    rdx,rdi
   14001df00:	mov    rcx,rbx
   14001df03:	call   QWORD PTR [rax+0x10]
   14001df06:	mov    rdi,QWORD PTR [rsp+0x30]
   14001df0b:	mov    rax,QWORD PTR [rbx]
   14001df0e:	mov    rdx,rsi
   14001df11:	mov    rcx,rbx
   14001df14:	mov    rbx,QWORD PTR [rsp+0x38]
   14001df19:	add    rsp,0x20
   14001df1d:	pop    rsi
   14001df1e:	rex.W jmp QWORD PTR [rax+0x348]
   14001df25:	int3   
   14001df26:	int3   
   14001df27:	int3   
   14001df28:	int3   
   14001df29:	int3   
   14001df2a:	int3   
   14001df2b:	int3   
   14001df2c:	int3   
   14001df2d:	int3   
   14001df2e:	int3   
   14001df2f:	int3   
   14001df30:	mov    QWORD PTR [rsp+0x10],rbx
   14001df35:	push   rsi
   14001df36:	sub    rsp,0x20
   14001df3a:	mov    rax,QWORD PTR [rdx]
   14001df3d:	mov    rbx,rdx
   14001df40:	mov    rsi,rcx
   14001df43:	mov    rdx,rcx
   14001df46:	mov    rcx,rbx
   14001df49:	call   QWORD PTR [rax+0x60]
   14001df4c:	test   al,al
   14001df4e:	je     0x14001df8b
   14001df50:	mov    QWORD PTR [rsp+0x30],rdi
   14001df55:	mov    rdi,QWORD PTR [rsi+0x10]
   14001df59:	test   rdi,rdi
   14001df5c:	je     0x14001df86
   14001df5e:	mov    rax,QWORD PTR [rbx]
   14001df61:	mov    rdx,rdi
   14001df64:	mov    rcx,rbx
   14001df67:	call   QWORD PTR [rax+0x8]
   14001df6a:	test   al,al
   14001df6c:	je     0x14001df7a
   14001df6e:	mov    rax,QWORD PTR [rdi]
   14001df71:	mov    rdx,rbx
   14001df74:	mov    rcx,rdi
   14001df77:	call   QWORD PTR [rax+0x28]
   14001df7a:	mov    rax,QWORD PTR [rbx]
   14001df7d:	mov    rdx,rdi
   14001df80:	mov    rcx,rbx
   14001df83:	call   QWORD PTR [rax+0x10]
   14001df86:	mov    rdi,QWORD PTR [rsp+0x30]
   14001df8b:	mov    rax,QWORD PTR [rbx]
   14001df8e:	mov    rdx,rsi
   14001df91:	mov    rcx,rbx
   14001df94:	mov    rbx,QWORD PTR [rsp+0x38]
   14001df99:	add    rsp,0x20
   14001df9d:	pop    rsi
   14001df9e:	rex.W jmp QWORD PTR [rax+0x340]
   14001dfa5:	int3   
   14001dfa6:	int3   
   14001dfa7:	int3   
   14001dfa8:	int3   
   14001dfa9:	int3   
   14001dfaa:	int3   
   14001dfab:	int3   
   14001dfac:	int3   
   14001dfad:	int3   
   14001dfae:	int3   
   14001dfaf:	int3   
   14001dfb0:	mov    QWORD PTR [rsp+0x10],rbx
   14001dfb5:	push   rsi
   14001dfb6:	sub    rsp,0x20
   14001dfba:	mov    rax,QWORD PTR [rdx]
   14001dfbd:	mov    rbx,rdx
   14001dfc0:	mov    rsi,rcx
   14001dfc3:	mov    rdx,rcx
   14001dfc6:	mov    rcx,rbx
   14001dfc9:	call   QWORD PTR [rax+0x58]
   14001dfcc:	test   al,al
   14001dfce:	je     0x14001e03c
   14001dfd0:	mov    QWORD PTR [rsp+0x30],rdi
   14001dfd5:	mov    rdi,QWORD PTR [rsi+0x20]
   14001dfd9:	test   rdi,rdi
   14001dfdc:	je     0x14001e006
   14001dfde:	mov    rax,QWORD PTR [rbx]
   14001dfe1:	mov    rdx,rdi
   14001dfe4:	mov    rcx,rbx
   14001dfe7:	call   QWORD PTR [rax+0x8]
   14001dfea:	test   al,al
   14001dfec:	je     0x14001dffa
   14001dfee:	mov    rax,QWORD PTR [rdi]
   14001dff1:	mov    rdx,rbx
   14001dff4:	mov    rcx,rdi
   14001dff7:	call   QWORD PTR [rax+0x28]
   14001dffa:	mov    rax,QWORD PTR [rbx]
   14001dffd:	mov    rdx,rdi
   14001e000:	mov    rcx,rbx
   14001e003:	call   QWORD PTR [rax+0x10]
   14001e006:	mov    rdi,QWORD PTR [rsi+0x28]
   14001e00a:	test   rdi,rdi
   14001e00d:	je     0x14001e037
   14001e00f:	mov    rax,QWORD PTR [rbx]
   14001e012:	mov    rdx,rdi
   14001e015:	mov    rcx,rbx
   14001e018:	call   QWORD PTR [rax+0x8]
   14001e01b:	test   al,al
   14001e01d:	je     0x14001e02b
   14001e01f:	mov    rax,QWORD PTR [rdi]
   14001e022:	mov    rdx,rbx
   14001e025:	mov    rcx,rdi
   14001e028:	call   QWORD PTR [rax+0x28]
   14001e02b:	mov    rax,QWORD PTR [rbx]
   14001e02e:	mov    rdx,rdi
   14001e031:	mov    rcx,rbx
   14001e034:	call   QWORD PTR [rax+0x10]
   14001e037:	mov    rdi,QWORD PTR [rsp+0x30]
   14001e03c:	mov    rax,QWORD PTR [rbx]
   14001e03f:	mov    rdx,rsi
   14001e042:	mov    rcx,rbx
   14001e045:	mov    rbx,QWORD PTR [rsp+0x38]
   14001e04a:	add    rsp,0x20
   14001e04e:	pop    rsi
   14001e04f:	rex.W jmp QWORD PTR [rax+0x338]
   14001e056:	int3   
   14001e057:	int3   
   14001e058:	int3   
   14001e059:	int3   
   14001e05a:	int3   
   14001e05b:	int3   
   14001e05c:	int3   
   14001e05d:	int3   
   14001e05e:	int3   
   14001e05f:	int3   
   14001e060:	mov    QWORD PTR [rsp+0x10],rbx
   14001e065:	push   rsi
   14001e066:	sub    rsp,0x20
   14001e06a:	mov    rax,QWORD PTR [rdx]
   14001e06d:	mov    rbx,rdx
   14001e070:	mov    rsi,rcx
   14001e073:	mov    rdx,rcx
   14001e076:	mov    rcx,rbx
   14001e079:	call   QWORD PTR [rax+0x50]
   14001e07c:	test   al,al
   14001e07e:	je     0x14001e0ec
   14001e080:	mov    QWORD PTR [rsp+0x30],rdi
   14001e085:	mov    rdi,QWORD PTR [rsi+0x20]
   14001e089:	test   rdi,rdi
   14001e08c:	je     0x14001e0b6
   14001e08e:	mov    rax,QWORD PTR [rbx]
   14001e091:	mov    rdx,rdi
   14001e094:	mov    rcx,rbx
   14001e097:	call   QWORD PTR [rax+0x8]
   14001e09a:	test   al,al
   14001e09c:	je     0x14001e0aa
   14001e09e:	mov    rax,QWORD PTR [rdi]
   14001e0a1:	mov    rdx,rbx
   14001e0a4:	mov    rcx,rdi
   14001e0a7:	call   QWORD PTR [rax+0x28]
   14001e0aa:	mov    rax,QWORD PTR [rbx]
   14001e0ad:	mov    rdx,rdi
   14001e0b0:	mov    rcx,rbx
   14001e0b3:	call   QWORD PTR [rax+0x10]
   14001e0b6:	mov    rdi,QWORD PTR [rsi+0x28]
   14001e0ba:	test   rdi,rdi
   14001e0bd:	je     0x14001e0e7
   14001e0bf:	mov    rax,QWORD PTR [rbx]
   14001e0c2:	mov    rdx,rdi
   14001e0c5:	mov    rcx,rbx
   14001e0c8:	call   QWORD PTR [rax+0x8]
   14001e0cb:	test   al,al
   14001e0cd:	je     0x14001e0db
   14001e0cf:	mov    rax,QWORD PTR [rdi]
   14001e0d2:	mov    rdx,rbx
   14001e0d5:	mov    rcx,rdi
   14001e0d8:	call   QWORD PTR [rax+0x28]
   14001e0db:	mov    rax,QWORD PTR [rbx]
   14001e0de:	mov    rdx,rdi
   14001e0e1:	mov    rcx,rbx
   14001e0e4:	call   QWORD PTR [rax+0x10]
   14001e0e7:	mov    rdi,QWORD PTR [rsp+0x30]
   14001e0ec:	mov    rax,QWORD PTR [rbx]
   14001e0ef:	mov    rdx,rsi
   14001e0f2:	mov    rcx,rbx
   14001e0f5:	mov    rbx,QWORD PTR [rsp+0x38]
   14001e0fa:	add    rsp,0x20
   14001e0fe:	pop    rsi
   14001e0ff:	rex.W jmp QWORD PTR [rax+0x330]
   14001e106:	int3   
   14001e107:	int3   
   14001e108:	int3   
   14001e109:	int3   
   14001e10a:	int3   
   14001e10b:	int3   
   14001e10c:	int3   
   14001e10d:	int3   
   14001e10e:	int3   
   14001e10f:	int3   
   14001e110:	mov    QWORD PTR [rsp+0x8],rbx
   14001e115:	push   rdi
   14001e116:	sub    rsp,0x20
   14001e11a:	mov    rax,QWORD PTR [rdx]
   14001e11d:	mov    rdi,rdx
   14001e120:	mov    rbx,rcx
   14001e123:	mov    rdx,rcx
   14001e126:	mov    rcx,rdi
   14001e129:	call   QWORD PTR [rax+0x48]
   14001e12c:	mov    r11,QWORD PTR [rdi]
   14001e12f:	mov    rdx,rbx
   14001e132:	mov    rcx,rdi
   14001e135:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e13a:	add    rsp,0x20
   14001e13e:	pop    rdi
   14001e13f:	rex.WB jmp QWORD PTR [r11+0x328]
   14001e146:	int3   
   14001e147:	int3   
   14001e148:	int3   
   14001e149:	int3   
   14001e14a:	int3   
   14001e14b:	int3   
   14001e14c:	int3   
   14001e14d:	int3   
   14001e14e:	int3   
   14001e14f:	int3   
   14001e150:	mov    QWORD PTR [rsp+0x10],rbx
   14001e155:	push   rsi
   14001e156:	sub    rsp,0x20
   14001e15a:	mov    rax,QWORD PTR [rdx]
   14001e15d:	mov    rbx,rdx
   14001e160:	mov    rsi,rcx
   14001e163:	mov    rdx,rcx
   14001e166:	mov    rcx,rbx
   14001e169:	call   QWORD PTR [rax+0x40]
   14001e16c:	test   al,al
   14001e16e:	je     0x14001e1ab
   14001e170:	mov    QWORD PTR [rsp+0x30],rdi
   14001e175:	mov    rdi,QWORD PTR [rsi+0x10]
   14001e179:	test   rdi,rdi
   14001e17c:	je     0x14001e1a6
   14001e17e:	mov    rax,QWORD PTR [rbx]
   14001e181:	mov    rdx,rdi
   14001e184:	mov    rcx,rbx
   14001e187:	call   QWORD PTR [rax+0x8]
   14001e18a:	test   al,al
   14001e18c:	je     0x14001e19a
   14001e18e:	mov    rax,QWORD PTR [rdi]
   14001e191:	mov    rdx,rbx
   14001e194:	mov    rcx,rdi
   14001e197:	call   QWORD PTR [rax+0x28]
   14001e19a:	mov    rax,QWORD PTR [rbx]
   14001e19d:	mov    rdx,rdi
   14001e1a0:	mov    rcx,rbx
   14001e1a3:	call   QWORD PTR [rax+0x10]
   14001e1a6:	mov    rdi,QWORD PTR [rsp+0x30]
   14001e1ab:	mov    rax,QWORD PTR [rbx]
   14001e1ae:	mov    rdx,rsi
   14001e1b1:	mov    rcx,rbx
   14001e1b4:	mov    rbx,QWORD PTR [rsp+0x38]
   14001e1b9:	add    rsp,0x20
   14001e1bd:	pop    rsi
   14001e1be:	rex.W jmp QWORD PTR [rax+0x320]
   14001e1c5:	int3   
   14001e1c6:	int3   
   14001e1c7:	int3   
   14001e1c8:	int3   
   14001e1c9:	int3   
   14001e1ca:	int3   
   14001e1cb:	int3   
   14001e1cc:	int3   
   14001e1cd:	int3   
   14001e1ce:	int3   
   14001e1cf:	int3   
   14001e1d0:	mov    QWORD PTR [rsp+0x10],rbx
   14001e1d5:	push   rsi
   14001e1d6:	sub    rsp,0x20
   14001e1da:	mov    rax,QWORD PTR [rdx]
   14001e1dd:	mov    rbx,rdx
   14001e1e0:	mov    rsi,rcx
   14001e1e3:	mov    rdx,rcx
   14001e1e6:	mov    rcx,rbx
   14001e1e9:	call   QWORD PTR [rax+0x38]
   14001e1ec:	test   al,al
   14001e1ee:	je     0x14001e22b
   14001e1f0:	mov    QWORD PTR [rsp+0x30],rdi
   14001e1f5:	mov    rdi,QWORD PTR [rsi+0x10]
   14001e1f9:	test   rdi,rdi
   14001e1fc:	je     0x14001e226
   14001e1fe:	mov    rax,QWORD PTR [rbx]
   14001e201:	mov    rdx,rdi
   14001e204:	mov    rcx,rbx
   14001e207:	call   QWORD PTR [rax+0x8]
   14001e20a:	test   al,al
   14001e20c:	je     0x14001e21a
   14001e20e:	mov    rax,QWORD PTR [rdi]
   14001e211:	mov    rdx,rbx
   14001e214:	mov    rcx,rdi
   14001e217:	call   QWORD PTR [rax+0x28]
   14001e21a:	mov    rax,QWORD PTR [rbx]
   14001e21d:	mov    rdx,rdi
   14001e220:	mov    rcx,rbx
   14001e223:	call   QWORD PTR [rax+0x10]
   14001e226:	mov    rdi,QWORD PTR [rsp+0x30]
   14001e22b:	mov    rax,QWORD PTR [rbx]
   14001e22e:	mov    rdx,rsi
   14001e231:	mov    rcx,rbx
   14001e234:	mov    rbx,QWORD PTR [rsp+0x38]
   14001e239:	add    rsp,0x20
   14001e23d:	pop    rsi
   14001e23e:	rex.W jmp QWORD PTR [rax+0x318]
   14001e245:	int3   
   14001e246:	int3   
   14001e247:	int3   
   14001e248:	int3   
   14001e249:	int3   
   14001e24a:	int3   
   14001e24b:	int3   
   14001e24c:	int3   
   14001e24d:	int3   
   14001e24e:	int3   
   14001e24f:	int3   
   14001e250:	mov    QWORD PTR [rsp+0x18],rbp
   14001e255:	push   rsi
   14001e256:	sub    rsp,0x20
   14001e25a:	mov    rax,QWORD PTR [rdx]
   14001e25d:	mov    rsi,rdx
   14001e260:	mov    rbp,rcx
   14001e263:	mov    rdx,rcx
   14001e266:	mov    rcx,rsi
   14001e269:	call   QWORD PTR [rax+0x30]
   14001e26c:	test   al,al
   14001e26e:	je     0x14001e2c6
   14001e270:	mov    QWORD PTR [rsp+0x30],rbx
   14001e275:	mov    rbx,rbp
   14001e278:	test   rbp,rbp
   14001e27b:	je     0x14001e2c1
   14001e27d:	mov    QWORD PTR [rsp+0x38],rdi
   14001e282:	mov    rdi,QWORD PTR [rbx+0x10]
   14001e286:	test   rdi,rdi
   14001e289:	je     0x14001e2b3
   14001e28b:	mov    rax,QWORD PTR [rsi]
   14001e28e:	mov    rdx,rdi
   14001e291:	mov    rcx,rsi
   14001e294:	call   QWORD PTR [rax+0x8]
   14001e297:	test   al,al
   14001e299:	je     0x14001e2a7
   14001e29b:	mov    rax,QWORD PTR [rdi]
   14001e29e:	mov    rdx,rsi
   14001e2a1:	mov    rcx,rdi
   14001e2a4:	call   QWORD PTR [rax+0x28]
   14001e2a7:	mov    rax,QWORD PTR [rsi]
   14001e2aa:	mov    rdx,rdi
   14001e2ad:	mov    rcx,rsi
   14001e2b0:	call   QWORD PTR [rax+0x10]
   14001e2b3:	mov    rbx,QWORD PTR [rbx+0x18]
   14001e2b7:	test   rbx,rbx
   14001e2ba:	jne    0x14001e282
   14001e2bc:	mov    rdi,QWORD PTR [rsp+0x38]
   14001e2c1:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e2c6:	mov    rax,QWORD PTR [rsi]
   14001e2c9:	mov    rdx,rbp
   14001e2cc:	mov    rcx,rsi
   14001e2cf:	mov    rbp,QWORD PTR [rsp+0x40]
   14001e2d4:	add    rsp,0x20
   14001e2d8:	pop    rsi
   14001e2d9:	rex.W jmp QWORD PTR [rax+0x310]
   14001e2e0:	mov    QWORD PTR [rsp+0x10],rbx
   14001e2e5:	push   rsi
   14001e2e6:	sub    rsp,0x20
   14001e2ea:	mov    rax,QWORD PTR [rdx]
   14001e2ed:	mov    rbx,rdx
   14001e2f0:	mov    rsi,rcx
   14001e2f3:	mov    rdx,rcx
   14001e2f6:	mov    rcx,rbx
   14001e2f9:	call   QWORD PTR [rax+0x28]
   14001e2fc:	test   al,al
   14001e2fe:	je     0x14001e33b
   14001e300:	mov    QWORD PTR [rsp+0x30],rdi
   14001e305:	mov    rdi,QWORD PTR [rsi+0x10]
   14001e309:	test   rdi,rdi
   14001e30c:	je     0x14001e336
   14001e30e:	mov    rax,QWORD PTR [rbx]
   14001e311:	mov    rdx,rdi
   14001e314:	mov    rcx,rbx
   14001e317:	call   QWORD PTR [rax+0x8]
   14001e31a:	test   al,al
   14001e31c:	je     0x14001e32a
   14001e31e:	mov    rax,QWORD PTR [rdi]
   14001e321:	mov    rdx,rbx
   14001e324:	mov    rcx,rdi
   14001e327:	call   QWORD PTR [rax+0x28]
   14001e32a:	mov    rax,QWORD PTR [rbx]
   14001e32d:	mov    rdx,rdi
   14001e330:	mov    rcx,rbx
   14001e333:	call   QWORD PTR [rax+0x10]
   14001e336:	mov    rdi,QWORD PTR [rsp+0x30]
   14001e33b:	mov    rax,QWORD PTR [rbx]
   14001e33e:	mov    rdx,rsi
   14001e341:	mov    rcx,rbx
   14001e344:	mov    rbx,QWORD PTR [rsp+0x38]
   14001e349:	add    rsp,0x20
   14001e34d:	pop    rsi
   14001e34e:	rex.W jmp QWORD PTR [rax+0x308]
   14001e355:	int3   
   14001e356:	int3   
   14001e357:	int3   
   14001e358:	int3   
   14001e359:	int3   
   14001e35a:	int3   
   14001e35b:	int3   
   14001e35c:	int3   
   14001e35d:	int3   
   14001e35e:	int3   
   14001e35f:	int3   
   14001e360:	mov    QWORD PTR [rsp+0x10],rbx
   14001e365:	push   rsi
   14001e366:	sub    rsp,0x20
   14001e36a:	mov    rax,QWORD PTR [rdx]
   14001e36d:	mov    rbx,rdx
   14001e370:	mov    rsi,rcx
   14001e373:	mov    rdx,rcx
   14001e376:	mov    rcx,rbx
   14001e379:	call   QWORD PTR [rax+0x20]
   14001e37c:	test   al,al
   14001e37e:	je     0x14001e3bb
   14001e380:	mov    QWORD PTR [rsp+0x30],rdi
   14001e385:	mov    rdi,QWORD PTR [rsi+0x10]
   14001e389:	test   rdi,rdi
   14001e38c:	je     0x14001e3b6
   14001e38e:	mov    rax,QWORD PTR [rbx]
   14001e391:	mov    rdx,rdi
   14001e394:	mov    rcx,rbx
   14001e397:	call   QWORD PTR [rax+0x8]
   14001e39a:	test   al,al
   14001e39c:	je     0x14001e3aa
   14001e39e:	mov    rax,QWORD PTR [rdi]
   14001e3a1:	mov    rdx,rbx
   14001e3a4:	mov    rcx,rdi
   14001e3a7:	call   QWORD PTR [rax+0x28]
   14001e3aa:	mov    rax,QWORD PTR [rbx]
   14001e3ad:	mov    rdx,rdi
   14001e3b0:	mov    rcx,rbx
   14001e3b3:	call   QWORD PTR [rax+0x10]
   14001e3b6:	mov    rdi,QWORD PTR [rsp+0x30]
   14001e3bb:	mov    rax,QWORD PTR [rbx]
   14001e3be:	mov    rdx,rsi
   14001e3c1:	mov    rcx,rbx
   14001e3c4:	mov    rbx,QWORD PTR [rsp+0x38]
   14001e3c9:	add    rsp,0x20
   14001e3cd:	pop    rsi
   14001e3ce:	rex.W jmp QWORD PTR [rax+0x300]
   14001e3d5:	int3   
   14001e3d6:	int3   
   14001e3d7:	int3   
   14001e3d8:	int3   
   14001e3d9:	int3   
   14001e3da:	int3   
   14001e3db:	int3   
   14001e3dc:	int3   
   14001e3dd:	int3   
   14001e3de:	int3   
   14001e3df:	int3   
   14001e3e0:	mov    QWORD PTR [rsp+0x8],rbx
   14001e3e5:	push   rdi
   14001e3e6:	sub    rsp,0x20
   14001e3ea:	mov    rax,QWORD PTR [rdx]
   14001e3ed:	mov    rdi,rdx
   14001e3f0:	mov    rbx,rcx
   14001e3f3:	mov    rdx,rcx
   14001e3f6:	mov    rcx,rdi
   14001e3f9:	call   QWORD PTR [rax+0x18]
   14001e3fc:	mov    r11,QWORD PTR [rdi]
   14001e3ff:	mov    rdx,rbx
   14001e402:	mov    rcx,rdi
   14001e405:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e40a:	add    rsp,0x20
   14001e40e:	pop    rdi
   14001e40f:	rex.WB jmp QWORD PTR [r11+0x2f8]
   14001e416:	int3   
   14001e417:	int3   
   14001e418:	int3   
   14001e419:	int3   
   14001e41a:	int3   
   14001e41b:	int3   
   14001e41c:	int3   
   14001e41d:	int3   
   14001e41e:	int3   
   14001e41f:	int3   
   14001e420:	mov    QWORD PTR [rsp+0x10],rbx
   14001e425:	push   rsi
   14001e426:	sub    rsp,0x20
   14001e42a:	mov    rax,QWORD PTR [rdx]
   14001e42d:	mov    rbx,rdx
   14001e430:	mov    rsi,rcx
   14001e433:	mov    rdx,rcx
   14001e436:	mov    rcx,rbx
   14001e439:	call   QWORD PTR [rax+0x2f0]
   14001e43f:	test   al,al
   14001e441:	je     0x14001e4af
   14001e443:	mov    QWORD PTR [rsp+0x30],rdi
   14001e448:	mov    rdi,QWORD PTR [rsi+0x10]
   14001e44c:	test   rdi,rdi
   14001e44f:	je     0x14001e479
   14001e451:	mov    rax,QWORD PTR [rbx]
   14001e454:	mov    rdx,rdi
   14001e457:	mov    rcx,rbx
   14001e45a:	call   QWORD PTR [rax+0x8]
   14001e45d:	test   al,al
   14001e45f:	je     0x14001e46d
   14001e461:	mov    rax,QWORD PTR [rdi]
   14001e464:	mov    rdx,rbx
   14001e467:	mov    rcx,rdi
   14001e46a:	call   QWORD PTR [rax+0x28]
   14001e46d:	mov    rax,QWORD PTR [rbx]
   14001e470:	mov    rdx,rdi
   14001e473:	mov    rcx,rbx
   14001e476:	call   QWORD PTR [rax+0x10]
   14001e479:	mov    rdi,QWORD PTR [rsi+0x18]
   14001e47d:	test   rdi,rdi
   14001e480:	je     0x14001e4aa
   14001e482:	mov    rax,QWORD PTR [rbx]
   14001e485:	mov    rdx,rdi
   14001e488:	mov    rcx,rbx
   14001e48b:	call   QWORD PTR [rax+0x8]
   14001e48e:	test   al,al
   14001e490:	je     0x14001e49e
   14001e492:	mov    rax,QWORD PTR [rdi]
   14001e495:	mov    rdx,rbx
   14001e498:	mov    rcx,rdi
   14001e49b:	call   QWORD PTR [rax+0x28]
   14001e49e:	mov    rax,QWORD PTR [rbx]
   14001e4a1:	mov    rdx,rdi
   14001e4a4:	mov    rcx,rbx
   14001e4a7:	call   QWORD PTR [rax+0x10]
   14001e4aa:	mov    rdi,QWORD PTR [rsp+0x30]
   14001e4af:	mov    rax,QWORD PTR [rbx]
   14001e4b2:	mov    rdx,rsi
   14001e4b5:	mov    rcx,rbx
   14001e4b8:	mov    rbx,QWORD PTR [rsp+0x38]
   14001e4bd:	add    rsp,0x20
   14001e4c1:	pop    rsi
   14001e4c2:	rex.W jmp QWORD PTR [rax+0x5d0]
   14001e4c9:	int3   
   14001e4ca:	int3   
   14001e4cb:	int3   
   14001e4cc:	int3   
   14001e4cd:	int3   
   14001e4ce:	int3   
   14001e4cf:	int3   
   14001e4d0:	mov    QWORD PTR [rsp+0x10],rbx
   14001e4d5:	push   rsi
   14001e4d6:	sub    rsp,0x20
   14001e4da:	mov    rax,QWORD PTR [rdx]
   14001e4dd:	mov    rbx,rdx
   14001e4e0:	mov    rsi,rcx
   14001e4e3:	mov    rdx,rcx
   14001e4e6:	mov    rcx,rbx
   14001e4e9:	call   QWORD PTR [rax+0x2d0]
   14001e4ef:	test   al,al
   14001e4f1:	je     0x14001e55f
   14001e4f3:	mov    QWORD PTR [rsp+0x30],rdi
   14001e4f8:	mov    rdi,QWORD PTR [rsi+0x48]
   14001e4fc:	test   rdi,rdi
   14001e4ff:	je     0x14001e529
   14001e501:	mov    rax,QWORD PTR [rbx]
   14001e504:	mov    rdx,rdi
   14001e507:	mov    rcx,rbx
   14001e50a:	call   QWORD PTR [rax+0x8]
   14001e50d:	test   al,al
   14001e50f:	je     0x14001e51d
   14001e511:	mov    rax,QWORD PTR [rdi]
   14001e514:	mov    rdx,rbx
   14001e517:	mov    rcx,rdi
   14001e51a:	call   QWORD PTR [rax+0x28]
   14001e51d:	mov    rax,QWORD PTR [rbx]
   14001e520:	mov    rdx,rdi
   14001e523:	mov    rcx,rbx
   14001e526:	call   QWORD PTR [rax+0x10]
   14001e529:	mov    rdi,QWORD PTR [rsi+0x50]
   14001e52d:	test   rdi,rdi
   14001e530:	je     0x14001e55a
   14001e532:	mov    rax,QWORD PTR [rbx]
   14001e535:	mov    rdx,rdi
   14001e538:	mov    rcx,rbx
   14001e53b:	call   QWORD PTR [rax+0x8]
   14001e53e:	test   al,al
   14001e540:	je     0x14001e54e
   14001e542:	mov    rax,QWORD PTR [rdi]
   14001e545:	mov    rdx,rbx
   14001e548:	mov    rcx,rdi
   14001e54b:	call   QWORD PTR [rax+0x28]
   14001e54e:	mov    rax,QWORD PTR [rbx]
   14001e551:	mov    rdx,rdi
   14001e554:	mov    rcx,rbx
   14001e557:	call   QWORD PTR [rax+0x10]
   14001e55a:	mov    rdi,QWORD PTR [rsp+0x30]
   14001e55f:	mov    rax,QWORD PTR [rbx]
   14001e562:	mov    rdx,rsi
   14001e565:	mov    rcx,rbx
   14001e568:	mov    rbx,QWORD PTR [rsp+0x38]
   14001e56d:	add    rsp,0x20
   14001e571:	pop    rsi
   14001e572:	rex.W jmp QWORD PTR [rax+0x5b0]
   14001e579:	int3   
   14001e57a:	int3   
   14001e57b:	int3   
   14001e57c:	int3   
   14001e57d:	int3   
   14001e57e:	int3   
   14001e57f:	int3   
   14001e580:	mov    QWORD PTR [rsp+0x10],rbx
   14001e585:	push   rsi
   14001e586:	sub    rsp,0x20
   14001e58a:	mov    rax,QWORD PTR [rdx]
   14001e58d:	mov    rbx,rdx
   14001e590:	mov    rsi,rcx
   14001e593:	mov    rdx,rcx
   14001e596:	mov    rcx,rbx
   14001e599:	call   QWORD PTR [rax+0x2c0]
   14001e59f:	test   al,al
   14001e5a1:	je     0x14001e60f
   14001e5a3:	mov    QWORD PTR [rsp+0x30],rdi
   14001e5a8:	mov    rdi,QWORD PTR [rsi+0x10]
   14001e5ac:	test   rdi,rdi
   14001e5af:	je     0x14001e5d9
   14001e5b1:	mov    rax,QWORD PTR [rbx]
   14001e5b4:	mov    rdx,rdi
   14001e5b7:	mov    rcx,rbx
   14001e5ba:	call   QWORD PTR [rax+0x8]
   14001e5bd:	test   al,al
   14001e5bf:	je     0x14001e5cd
   14001e5c1:	mov    rax,QWORD PTR [rdi]
   14001e5c4:	mov    rdx,rbx
   14001e5c7:	mov    rcx,rdi
   14001e5ca:	call   QWORD PTR [rax+0x28]
   14001e5cd:	mov    rax,QWORD PTR [rbx]
   14001e5d0:	mov    rdx,rdi
   14001e5d3:	mov    rcx,rbx
   14001e5d6:	call   QWORD PTR [rax+0x10]
   14001e5d9:	mov    rdi,QWORD PTR [rsi+0x18]
   14001e5dd:	test   rdi,rdi
   14001e5e0:	je     0x14001e60a
   14001e5e2:	mov    rax,QWORD PTR [rbx]
   14001e5e5:	mov    rdx,rdi
   14001e5e8:	mov    rcx,rbx
   14001e5eb:	call   QWORD PTR [rax+0x8]
   14001e5ee:	test   al,al
   14001e5f0:	je     0x14001e5fe
   14001e5f2:	mov    rax,QWORD PTR [rdi]
   14001e5f5:	mov    rdx,rbx
   14001e5f8:	mov    rcx,rdi
   14001e5fb:	call   QWORD PTR [rax+0x28]
   14001e5fe:	mov    rax,QWORD PTR [rbx]
   14001e601:	mov    rdx,rdi
   14001e604:	mov    rcx,rbx
   14001e607:	call   QWORD PTR [rax+0x10]
   14001e60a:	mov    rdi,QWORD PTR [rsp+0x30]
   14001e60f:	mov    rax,QWORD PTR [rbx]
   14001e612:	mov    rdx,rsi
   14001e615:	mov    rcx,rbx
   14001e618:	mov    rbx,QWORD PTR [rsp+0x38]
   14001e61d:	add    rsp,0x20
   14001e621:	pop    rsi
   14001e622:	rex.W jmp QWORD PTR [rax+0x5a0]
   14001e629:	int3   
   14001e62a:	int3   
   14001e62b:	int3   
   14001e62c:	int3   
   14001e62d:	int3   
   14001e62e:	int3   
   14001e62f:	int3   
   14001e630:	mov    QWORD PTR [rsp+0x10],rbx
   14001e635:	push   rsi
   14001e636:	sub    rsp,0x20
   14001e63a:	mov    rax,QWORD PTR [rdx]
   14001e63d:	mov    rbx,rdx
   14001e640:	mov    rsi,rcx
   14001e643:	mov    rdx,rcx
   14001e646:	mov    rcx,rbx
   14001e649:	call   QWORD PTR [rax+0x2b8]
   14001e64f:	test   al,al
   14001e651:	je     0x14001e68e
   14001e653:	mov    QWORD PTR [rsp+0x30],rdi
   14001e658:	mov    rdi,QWORD PTR [rsi+0x20]
   14001e65c:	test   rdi,rdi
   14001e65f:	je     0x14001e689
   14001e661:	mov    rax,QWORD PTR [rbx]
   14001e664:	mov    rdx,rdi
   14001e667:	mov    rcx,rbx
   14001e66a:	call   QWORD PTR [rax+0x8]
   14001e66d:	test   al,al
   14001e66f:	je     0x14001e67d
   14001e671:	mov    rax,QWORD PTR [rdi]
   14001e674:	mov    rdx,rbx
   14001e677:	mov    rcx,rdi
   14001e67a:	call   QWORD PTR [rax+0x28]
   14001e67d:	mov    rax,QWORD PTR [rbx]
   14001e680:	mov    rdx,rdi
   14001e683:	mov    rcx,rbx
   14001e686:	call   QWORD PTR [rax+0x10]
   14001e689:	mov    rdi,QWORD PTR [rsp+0x30]
   14001e68e:	mov    rax,QWORD PTR [rbx]
   14001e691:	mov    rdx,rsi
   14001e694:	mov    rcx,rbx
   14001e697:	mov    rbx,QWORD PTR [rsp+0x38]
   14001e69c:	add    rsp,0x20
   14001e6a0:	pop    rsi
   14001e6a1:	rex.W jmp QWORD PTR [rax+0x598]
   14001e6a8:	int3   
   14001e6a9:	int3   
   14001e6aa:	int3   
   14001e6ab:	int3   
   14001e6ac:	int3   
   14001e6ad:	int3   
   14001e6ae:	int3   
   14001e6af:	int3   
   14001e6b0:	mov    QWORD PTR [rsp+0x8],rbx
   14001e6b5:	push   rdi
   14001e6b6:	sub    rsp,0x20
   14001e6ba:	mov    rax,QWORD PTR [rdx]
   14001e6bd:	mov    rdi,rdx
   14001e6c0:	mov    rbx,rcx
   14001e6c3:	mov    rdx,rcx
   14001e6c6:	mov    rcx,rdi
   14001e6c9:	call   QWORD PTR [rax+0x298]
   14001e6cf:	mov    r11,QWORD PTR [rdi]
   14001e6d2:	mov    rdx,rbx
   14001e6d5:	mov    rcx,rdi
   14001e6d8:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e6dd:	add    rsp,0x20
   14001e6e1:	pop    rdi
   14001e6e2:	rex.WB jmp QWORD PTR [r11+0x578]
   14001e6e9:	int3   
   14001e6ea:	int3   
   14001e6eb:	int3   
   14001e6ec:	int3   
   14001e6ed:	int3   
   14001e6ee:	int3   
   14001e6ef:	int3   
   14001e6f0:	mov    QWORD PTR [rsp+0x10],rbx
   14001e6f5:	push   rsi
   14001e6f6:	sub    rsp,0x20
   14001e6fa:	mov    rax,QWORD PTR [rdx]
   14001e6fd:	mov    rbx,rdx
   14001e700:	mov    rsi,rcx
   14001e703:	mov    rdx,rcx
   14001e706:	mov    rcx,rbx
   14001e709:	call   QWORD PTR [rax+0x2b0]
   14001e70f:	test   al,al
   14001e711:	je     0x14001e7b4
   14001e717:	mov    QWORD PTR [rsp+0x30],rdi
   14001e71c:	mov    rdi,QWORD PTR [rsi+0x10]
   14001e720:	test   rdi,rdi
   14001e723:	je     0x14001e74d
   14001e725:	mov    rax,QWORD PTR [rbx]
   14001e728:	mov    rdx,rdi
   14001e72b:	mov    rcx,rbx
   14001e72e:	call   QWORD PTR [rax+0x8]
   14001e731:	test   al,al
   14001e733:	je     0x14001e741
   14001e735:	mov    rax,QWORD PTR [rdi]
   14001e738:	mov    rdx,rbx
   14001e73b:	mov    rcx,rdi
   14001e73e:	call   QWORD PTR [rax+0x28]
   14001e741:	mov    rax,QWORD PTR [rbx]
   14001e744:	mov    rdx,rdi
   14001e747:	mov    rcx,rbx
   14001e74a:	call   QWORD PTR [rax+0x10]
   14001e74d:	mov    rdi,QWORD PTR [rsi+0x18]
   14001e751:	test   rdi,rdi
   14001e754:	je     0x14001e77e
   14001e756:	mov    rax,QWORD PTR [rbx]
   14001e759:	mov    rdx,rdi
   14001e75c:	mov    rcx,rbx
   14001e75f:	call   QWORD PTR [rax+0x8]
   14001e762:	test   al,al
   14001e764:	je     0x14001e772
   14001e766:	mov    rax,QWORD PTR [rdi]
   14001e769:	mov    rdx,rbx
   14001e76c:	mov    rcx,rdi
   14001e76f:	call   QWORD PTR [rax+0x28]
   14001e772:	mov    rax,QWORD PTR [rbx]
   14001e775:	mov    rdx,rdi
   14001e778:	mov    rcx,rbx
   14001e77b:	call   QWORD PTR [rax+0x10]
   14001e77e:	mov    rdi,QWORD PTR [rsi+0x20]
   14001e782:	test   rdi,rdi
   14001e785:	je     0x14001e7af
   14001e787:	mov    rax,QWORD PTR [rbx]
   14001e78a:	mov    rdx,rdi
   14001e78d:	mov    rcx,rbx
   14001e790:	call   QWORD PTR [rax+0x8]
   14001e793:	test   al,al
   14001e795:	je     0x14001e7a3
   14001e797:	mov    rax,QWORD PTR [rdi]
   14001e79a:	mov    rdx,rbx
   14001e79d:	mov    rcx,rdi
   14001e7a0:	call   QWORD PTR [rax+0x28]
   14001e7a3:	mov    rax,QWORD PTR [rbx]
   14001e7a6:	mov    rdx,rdi
   14001e7a9:	mov    rcx,rbx
   14001e7ac:	call   QWORD PTR [rax+0x10]
   14001e7af:	mov    rdi,QWORD PTR [rsp+0x30]
   14001e7b4:	mov    rax,QWORD PTR [rbx]
   14001e7b7:	mov    rdx,rsi
   14001e7ba:	mov    rcx,rbx
   14001e7bd:	mov    rbx,QWORD PTR [rsp+0x38]
   14001e7c2:	add    rsp,0x20
   14001e7c6:	pop    rsi
   14001e7c7:	rex.W jmp QWORD PTR [rax+0x590]
   14001e7ce:	int3   
   14001e7cf:	int3   
   14001e7d0:	mov    QWORD PTR [rsp+0x10],rbx
   14001e7d5:	push   rsi
   14001e7d6:	sub    rsp,0x20
   14001e7da:	mov    rax,QWORD PTR [rdx]
   14001e7dd:	mov    rbx,rdx
   14001e7e0:	mov    rsi,rcx
   14001e7e3:	mov    rdx,rcx
   14001e7e6:	mov    rcx,rbx
   14001e7e9:	call   QWORD PTR [rax+0x2a8]
   14001e7ef:	test   al,al
   14001e7f1:	je     0x14001e85f
   14001e7f3:	mov    QWORD PTR [rsp+0x30],rdi
   14001e7f8:	mov    rdi,QWORD PTR [rsi+0x10]
   14001e7fc:	test   rdi,rdi
   14001e7ff:	je     0x14001e829
   14001e801:	mov    rax,QWORD PTR [rbx]
   14001e804:	mov    rdx,rdi
   14001e807:	mov    rcx,rbx
   14001e80a:	call   QWORD PTR [rax+0x8]
   14001e80d:	test   al,al
   14001e80f:	je     0x14001e81d
   14001e811:	mov    rax,QWORD PTR [rdi]
   14001e814:	mov    rdx,rbx
   14001e817:	mov    rcx,rdi
   14001e81a:	call   QWORD PTR [rax+0x28]
   14001e81d:	mov    rax,QWORD PTR [rbx]
   14001e820:	mov    rdx,rdi
   14001e823:	mov    rcx,rbx
   14001e826:	call   QWORD PTR [rax+0x10]
   14001e829:	mov    rdi,QWORD PTR [rsi+0x18]
   14001e82d:	test   rdi,rdi
   14001e830:	je     0x14001e85a
   14001e832:	mov    rax,QWORD PTR [rbx]
   14001e835:	mov    rdx,rdi
   14001e838:	mov    rcx,rbx
   14001e83b:	call   QWORD PTR [rax+0x8]
   14001e83e:	test   al,al
   14001e840:	je     0x14001e84e
   14001e842:	mov    rax,QWORD PTR [rdi]
   14001e845:	mov    rdx,rbx
   14001e848:	mov    rcx,rdi
   14001e84b:	call   QWORD PTR [rax+0x28]
   14001e84e:	mov    rax,QWORD PTR [rbx]
   14001e851:	mov    rdx,rdi
   14001e854:	mov    rcx,rbx
   14001e857:	call   QWORD PTR [rax+0x10]
   14001e85a:	mov    rdi,QWORD PTR [rsp+0x30]
   14001e85f:	mov    rax,QWORD PTR [rbx]
   14001e862:	mov    rdx,rsi
   14001e865:	mov    rcx,rbx
   14001e868:	mov    rbx,QWORD PTR [rsp+0x38]
   14001e86d:	add    rsp,0x20
   14001e871:	pop    rsi
   14001e872:	rex.W jmp QWORD PTR [rax+0x588]
   14001e879:	int3   
   14001e87a:	int3   
   14001e87b:	int3   
   14001e87c:	int3   
   14001e87d:	int3   
   14001e87e:	int3   
   14001e87f:	int3   
   14001e880:	mov    QWORD PTR [rsp+0x10],rbx
   14001e885:	push   rsi
   14001e886:	sub    rsp,0x20
   14001e88a:	mov    rax,QWORD PTR [rdx]
   14001e88d:	mov    rbx,rdx
   14001e890:	mov    rsi,rcx
   14001e893:	mov    rdx,rcx
   14001e896:	mov    rcx,rbx
   14001e899:	call   QWORD PTR [rax+0x2a0]
   14001e89f:	test   al,al
   14001e8a1:	je     0x14001e90f
   14001e8a3:	mov    QWORD PTR [rsp+0x30],rdi
   14001e8a8:	mov    rdi,QWORD PTR [rsi+0x10]
   14001e8ac:	test   rdi,rdi
   14001e8af:	je     0x14001e8d9
   14001e8b1:	mov    rax,QWORD PTR [rbx]
   14001e8b4:	mov    rdx,rdi
   14001e8b7:	mov    rcx,rbx
   14001e8ba:	call   QWORD PTR [rax+0x8]
   14001e8bd:	test   al,al
   14001e8bf:	je     0x14001e8cd
   14001e8c1:	mov    rax,QWORD PTR [rdi]
   14001e8c4:	mov    rdx,rbx
   14001e8c7:	mov    rcx,rdi
   14001e8ca:	call   QWORD PTR [rax+0x28]
   14001e8cd:	mov    rax,QWORD PTR [rbx]
   14001e8d0:	mov    rdx,rdi
   14001e8d3:	mov    rcx,rbx
   14001e8d6:	call   QWORD PTR [rax+0x10]
   14001e8d9:	mov    rdi,QWORD PTR [rsi+0x18]
   14001e8dd:	test   rdi,rdi
   14001e8e0:	je     0x14001e90a
   14001e8e2:	mov    rax,QWORD PTR [rbx]
   14001e8e5:	mov    rdx,rdi
   14001e8e8:	mov    rcx,rbx
   14001e8eb:	call   QWORD PTR [rax+0x8]
   14001e8ee:	test   al,al
   14001e8f0:	je     0x14001e8fe
   14001e8f2:	mov    rax,QWORD PTR [rdi]
   14001e8f5:	mov    rdx,rbx
   14001e8f8:	mov    rcx,rdi
   14001e8fb:	call   QWORD PTR [rax+0x28]
   14001e8fe:	mov    rax,QWORD PTR [rbx]
   14001e901:	mov    rdx,rdi
   14001e904:	mov    rcx,rbx
   14001e907:	call   QWORD PTR [rax+0x10]
   14001e90a:	mov    rdi,QWORD PTR [rsp+0x30]
   14001e90f:	mov    rax,QWORD PTR [rbx]
   14001e912:	mov    rdx,rsi
   14001e915:	mov    rcx,rbx
   14001e918:	mov    rbx,QWORD PTR [rsp+0x38]
   14001e91d:	add    rsp,0x20
   14001e921:	pop    rsi
   14001e922:	rex.W jmp QWORD PTR [rax+0x580]
   14001e929:	int3   
   14001e92a:	int3   
   14001e92b:	int3   
   14001e92c:	int3   
   14001e92d:	int3   
   14001e92e:	int3   
   14001e92f:	int3   
   14001e930:	mov    QWORD PTR [rsp+0x18],rbp
   14001e935:	push   rsi
   14001e936:	sub    rsp,0x20
   14001e93a:	mov    rax,QWORD PTR [rdx]
   14001e93d:	mov    rsi,rdx
   14001e940:	mov    rbp,rcx
   14001e943:	mov    rdx,rcx
   14001e946:	mov    rcx,rsi
   14001e949:	call   QWORD PTR [rax+0x290]
   14001e94f:	test   al,al
   14001e951:	je     0x14001e9a9
   14001e953:	mov    QWORD PTR [rsp+0x30],rbx
   14001e958:	mov    rbx,rbp
   14001e95b:	test   rbp,rbp
   14001e95e:	je     0x14001e9a4
   14001e960:	mov    QWORD PTR [rsp+0x38],rdi
   14001e965:	mov    rdi,QWORD PTR [rbx+0x18]
   14001e969:	test   rdi,rdi
   14001e96c:	je     0x14001e996
   14001e96e:	mov    rax,QWORD PTR [rsi]
   14001e971:	mov    rdx,rdi
   14001e974:	mov    rcx,rsi
   14001e977:	call   QWORD PTR [rax+0x8]
   14001e97a:	test   al,al
   14001e97c:	je     0x14001e98a
   14001e97e:	mov    rax,QWORD PTR [rdi]
   14001e981:	mov    rdx,rsi
   14001e984:	mov    rcx,rdi
   14001e987:	call   QWORD PTR [rax+0x28]
   14001e98a:	mov    rax,QWORD PTR [rsi]
   14001e98d:	mov    rdx,rdi
   14001e990:	mov    rcx,rsi
   14001e993:	call   QWORD PTR [rax+0x10]
   14001e996:	mov    rbx,QWORD PTR [rbx+0x10]
   14001e99a:	test   rbx,rbx
   14001e99d:	jne    0x14001e965
   14001e99f:	mov    rdi,QWORD PTR [rsp+0x38]
   14001e9a4:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e9a9:	mov    rax,QWORD PTR [rsi]
   14001e9ac:	mov    rdx,rbp
   14001e9af:	mov    rcx,rsi
   14001e9b2:	mov    rbp,QWORD PTR [rsp+0x40]
   14001e9b7:	add    rsp,0x20
   14001e9bb:	pop    rsi
   14001e9bc:	rex.W jmp QWORD PTR [rax+0x570]
   14001e9c3:	int3   
   14001e9c4:	int3   
   14001e9c5:	int3   
   14001e9c6:	int3   
   14001e9c7:	int3   
   14001e9c8:	int3   
   14001e9c9:	int3   
   14001e9ca:	int3   
   14001e9cb:	int3   
   14001e9cc:	int3   
   14001e9cd:	int3   
   14001e9ce:	int3   
   14001e9cf:	int3   
   14001e9d0:	mov    QWORD PTR [rsp+0x18],rbp
   14001e9d5:	push   rsi
   14001e9d6:	sub    rsp,0x20
   14001e9da:	mov    rax,QWORD PTR [rdx]
   14001e9dd:	mov    rsi,rdx
   14001e9e0:	mov    rbp,rcx
   14001e9e3:	mov    rdx,rcx
   14001e9e6:	mov    rcx,rsi
   14001e9e9:	call   QWORD PTR [rax+0x288]
   14001e9ef:	test   al,al
   14001e9f1:	je     0x14001ea49
   14001e9f3:	mov    QWORD PTR [rsp+0x30],rbx
   14001e9f8:	mov    rbx,rbp
   14001e9fb:	test   rbp,rbp
   14001e9fe:	je     0x14001ea44
   14001ea00:	mov    QWORD PTR [rsp+0x38],rdi
   14001ea05:	mov    rdi,QWORD PTR [rbx+0x18]
   14001ea09:	test   rdi,rdi
   14001ea0c:	je     0x14001ea36
   14001ea0e:	mov    rax,QWORD PTR [rsi]
   14001ea11:	mov    rdx,rdi
   14001ea14:	mov    rcx,rsi
   14001ea17:	call   QWORD PTR [rax+0x8]
   14001ea1a:	test   al,al
   14001ea1c:	je     0x14001ea2a
   14001ea1e:	mov    rax,QWORD PTR [rdi]
   14001ea21:	mov    rdx,rsi
   14001ea24:	mov    rcx,rdi
   14001ea27:	call   QWORD PTR [rax+0x28]
   14001ea2a:	mov    rax,QWORD PTR [rsi]
   14001ea2d:	mov    rdx,rdi
   14001ea30:	mov    rcx,rsi
   14001ea33:	call   QWORD PTR [rax+0x10]
   14001ea36:	mov    rbx,QWORD PTR [rbx+0x10]
   14001ea3a:	test   rbx,rbx
   14001ea3d:	jne    0x14001ea05
   14001ea3f:	mov    rdi,QWORD PTR [rsp+0x38]
   14001ea44:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ea49:	mov    rax,QWORD PTR [rsi]
   14001ea4c:	mov    rdx,rbp
   14001ea4f:	mov    rcx,rsi
   14001ea52:	mov    rbp,QWORD PTR [rsp+0x40]
   14001ea57:	add    rsp,0x20
   14001ea5b:	pop    rsi
   14001ea5c:	rex.W jmp QWORD PTR [rax+0x568]
   14001ea63:	int3   
   14001ea64:	int3   
   14001ea65:	int3   
   14001ea66:	int3   
   14001ea67:	int3   
   14001ea68:	int3   
   14001ea69:	int3   
   14001ea6a:	int3   
   14001ea6b:	int3   
   14001ea6c:	int3   
   14001ea6d:	int3   
   14001ea6e:	int3   
   14001ea6f:	int3   
   14001ea70:	mov    QWORD PTR [rsp+0x8],rbx
   14001ea75:	push   rdi
   14001ea76:	sub    rsp,0x20
   14001ea7a:	mov    rax,QWORD PTR [rdx]
   14001ea7d:	mov    rdi,rdx
   14001ea80:	mov    rbx,rcx
   14001ea83:	mov    rdx,rcx
   14001ea86:	mov    rcx,rdi
   14001ea89:	call   QWORD PTR [rax+0x280]
   14001ea8f:	mov    r11,QWORD PTR [rdi]
   14001ea92:	mov    rdx,rbx
   14001ea95:	mov    rcx,rdi
   14001ea98:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ea9d:	add    rsp,0x20
   14001eaa1:	pop    rdi
   14001eaa2:	rex.WB jmp QWORD PTR [r11+0x560]
   14001eaa9:	int3   
   14001eaaa:	int3   
   14001eaab:	int3   
   14001eaac:	int3   
   14001eaad:	int3   
   14001eaae:	int3   
   14001eaaf:	int3   
   14001eab0:	mov    QWORD PTR [rsp+0x10],rbx
   14001eab5:	push   rsi
   14001eab6:	sub    rsp,0x20
   14001eaba:	mov    rax,QWORD PTR [rdx]
   14001eabd:	mov    rbx,rdx
   14001eac0:	mov    rsi,rcx
   14001eac3:	mov    rdx,rcx
   14001eac6:	mov    rcx,rbx
   14001eac9:	call   QWORD PTR [rax+0x2d8]
   14001eacf:	test   al,al
   14001ead1:	je     0x14001eb0e
   14001ead3:	mov    QWORD PTR [rsp+0x30],rdi
   14001ead8:	mov    rdi,QWORD PTR [rsi+0x20]
   14001eadc:	test   rdi,rdi
   14001eadf:	je     0x14001eb09
   14001eae1:	mov    rax,QWORD PTR [rbx]
   14001eae4:	mov    rdx,rdi
   14001eae7:	mov    rcx,rbx
   14001eaea:	call   QWORD PTR [rax+0x8]
   14001eaed:	test   al,al
   14001eaef:	je     0x14001eafd
   14001eaf1:	mov    rax,QWORD PTR [rdi]
   14001eaf4:	mov    rdx,rbx
   14001eaf7:	mov    rcx,rdi
   14001eafa:	call   QWORD PTR [rax+0x28]
   14001eafd:	mov    rax,QWORD PTR [rbx]
   14001eb00:	mov    rdx,rdi
   14001eb03:	mov    rcx,rbx
   14001eb06:	call   QWORD PTR [rax+0x10]
   14001eb09:	mov    rdi,QWORD PTR [rsp+0x30]
   14001eb0e:	mov    rax,QWORD PTR [rbx]
   14001eb11:	mov    rdx,rsi
   14001eb14:	mov    rcx,rbx
   14001eb17:	mov    rbx,QWORD PTR [rsp+0x38]
   14001eb1c:	add    rsp,0x20
   14001eb20:	pop    rsi
   14001eb21:	rex.W jmp QWORD PTR [rax+0x5c8]
   14001eb28:	int3   
   14001eb29:	int3   
   14001eb2a:	int3   
   14001eb2b:	int3   
   14001eb2c:	int3   
   14001eb2d:	int3   
   14001eb2e:	int3   
   14001eb2f:	int3   
   14001eb30:	mov    QWORD PTR [rsp+0x8],rbx
   14001eb35:	push   rdi
   14001eb36:	sub    rsp,0x20
   14001eb3a:	mov    rax,QWORD PTR [rdx]
   14001eb3d:	mov    rdi,rdx
   14001eb40:	mov    rbx,rcx
   14001eb43:	mov    rdx,rcx
   14001eb46:	mov    rcx,rdi
   14001eb49:	call   QWORD PTR [rax+0x278]
   14001eb4f:	mov    r11,QWORD PTR [rdi]
   14001eb52:	mov    rdx,rbx
   14001eb55:	mov    rcx,rdi
   14001eb58:	mov    rbx,QWORD PTR [rsp+0x30]
   14001eb5d:	add    rsp,0x20
   14001eb61:	pop    rdi
   14001eb62:	rex.WB jmp QWORD PTR [r11+0x558]
   14001eb69:	int3   
   14001eb6a:	int3   
   14001eb6b:	int3   
   14001eb6c:	int3   
   14001eb6d:	int3   
   14001eb6e:	int3   
   14001eb6f:	int3   
   14001eb70:	mov    QWORD PTR [rsp+0x10],rbx
   14001eb75:	push   rsi
   14001eb76:	sub    rsp,0x20
   14001eb7a:	mov    rax,QWORD PTR [rdx]
   14001eb7d:	mov    rbx,rdx
   14001eb80:	mov    rsi,rcx
   14001eb83:	mov    rdx,rcx
   14001eb86:	mov    rcx,rbx
   14001eb89:	call   QWORD PTR [rax+0x2e0]
   14001eb8f:	test   al,al
   14001eb91:	je     0x14001ebce
   14001eb93:	mov    QWORD PTR [rsp+0x30],rdi
   14001eb98:	mov    rdi,QWORD PTR [rsi+0x10]
   14001eb9c:	test   rdi,rdi
   14001eb9f:	je     0x14001ebc9
   14001eba1:	mov    rax,QWORD PTR [rbx]
   14001eba4:	mov    rdx,rdi
   14001eba7:	mov    rcx,rbx
   14001ebaa:	call   QWORD PTR [rax+0x8]
   14001ebad:	test   al,al
   14001ebaf:	je     0x14001ebbd
   14001ebb1:	mov    rax,QWORD PTR [rdi]
   14001ebb4:	mov    rdx,rbx
   14001ebb7:	mov    rcx,rdi
   14001ebba:	call   QWORD PTR [rax+0x28]
   14001ebbd:	mov    rax,QWORD PTR [rbx]
   14001ebc0:	mov    rdx,rdi
   14001ebc3:	mov    rcx,rbx
   14001ebc6:	call   QWORD PTR [rax+0x10]
   14001ebc9:	mov    rdi,QWORD PTR [rsp+0x30]
   14001ebce:	mov    rax,QWORD PTR [rbx]
   14001ebd1:	mov    rdx,rsi
   14001ebd4:	mov    rcx,rbx
   14001ebd7:	mov    rbx,QWORD PTR [rsp+0x38]
   14001ebdc:	add    rsp,0x20
   14001ebe0:	pop    rsi
   14001ebe1:	rex.W jmp QWORD PTR [rax+0x5b8]
   14001ebe8:	int3   
   14001ebe9:	int3   
   14001ebea:	int3   
   14001ebeb:	int3   
   14001ebec:	int3   
   14001ebed:	int3   
   14001ebee:	int3   
   14001ebef:	int3   
   14001ebf0:	mov    QWORD PTR [rsp+0x10],rbx
   14001ebf5:	push   rsi
   14001ebf6:	sub    rsp,0x20
   14001ebfa:	mov    rax,QWORD PTR [rdx]
   14001ebfd:	mov    rbx,rdx
   14001ec00:	mov    rsi,rcx
   14001ec03:	mov    rdx,rcx
   14001ec06:	mov    rcx,rbx
   14001ec09:	call   QWORD PTR [rax+0x2e8]
   14001ec0f:	test   al,al
   14001ec11:	je     0x14001ec7f
   14001ec13:	mov    QWORD PTR [rsp+0x30],rdi
   14001ec18:	mov    rdi,QWORD PTR [rsi+0x10]
   14001ec1c:	test   rdi,rdi
   14001ec1f:	je     0x14001ec49
   14001ec21:	mov    rax,QWORD PTR [rbx]
   14001ec24:	mov    rdx,rdi
   14001ec27:	mov    rcx,rbx
   14001ec2a:	call   QWORD PTR [rax+0x8]
   14001ec2d:	test   al,al
   14001ec2f:	je     0x14001ec3d
   14001ec31:	mov    rax,QWORD PTR [rdi]
   14001ec34:	mov    rdx,rbx
   14001ec37:	mov    rcx,rdi
   14001ec3a:	call   QWORD PTR [rax+0x28]
   14001ec3d:	mov    rax,QWORD PTR [rbx]
   14001ec40:	mov    rdx,rdi
   14001ec43:	mov    rcx,rbx
   14001ec46:	call   QWORD PTR [rax+0x10]
   14001ec49:	mov    rdi,QWORD PTR [rsi+0x18]
   14001ec4d:	test   rdi,rdi
   14001ec50:	je     0x14001ec7a
   14001ec52:	mov    rax,QWORD PTR [rbx]
   14001ec55:	mov    rdx,rdi
   14001ec58:	mov    rcx,rbx
   14001ec5b:	call   QWORD PTR [rax+0x8]
   14001ec5e:	test   al,al
   14001ec60:	je     0x14001ec6e
   14001ec62:	mov    rax,QWORD PTR [rdi]
   14001ec65:	mov    rdx,rbx
   14001ec68:	mov    rcx,rdi
   14001ec6b:	call   QWORD PTR [rax+0x28]
   14001ec6e:	mov    rax,QWORD PTR [rbx]
   14001ec71:	mov    rdx,rdi
   14001ec74:	mov    rcx,rbx
   14001ec77:	call   QWORD PTR [rax+0x10]
   14001ec7a:	mov    rdi,QWORD PTR [rsp+0x30]
   14001ec7f:	mov    rax,QWORD PTR [rbx]
   14001ec82:	mov    rdx,rsi
   14001ec85:	mov    rcx,rbx
   14001ec88:	mov    rbx,QWORD PTR [rsp+0x38]
   14001ec8d:	add    rsp,0x20
   14001ec91:	pop    rsi
   14001ec92:	rex.W jmp QWORD PTR [rax+0x5c0]
   14001ec99:	int3   
   14001ec9a:	int3   
   14001ec9b:	int3   
   14001ec9c:	int3   
   14001ec9d:	int3   
   14001ec9e:	int3   
   14001ec9f:	int3   
   14001eca0:	mov    QWORD PTR [rsp+0x10],rbx
   14001eca5:	push   rsi
   14001eca6:	sub    rsp,0x20
   14001ecaa:	mov    rax,QWORD PTR [rdx]
   14001ecad:	mov    rbx,rdx
   14001ecb0:	mov    rsi,rcx
   14001ecb3:	mov    rdx,rcx
   14001ecb6:	mov    rcx,rbx
   14001ecb9:	call   QWORD PTR [rax+0x2c8]
   14001ecbf:	test   al,al
   14001ecc1:	je     0x14001ecfe
   14001ecc3:	mov    QWORD PTR [rsp+0x30],rdi
   14001ecc8:	mov    rdi,QWORD PTR [rsi+0x10]
   14001eccc:	test   rdi,rdi
   14001eccf:	je     0x14001ecf9
   14001ecd1:	mov    rax,QWORD PTR [rbx]
   14001ecd4:	mov    rdx,rdi
   14001ecd7:	mov    rcx,rbx
   14001ecda:	call   QWORD PTR [rax+0x8]
   14001ecdd:	test   al,al
   14001ecdf:	je     0x14001eced
   14001ece1:	mov    rax,QWORD PTR [rdi]
   14001ece4:	mov    rdx,rbx
   14001ece7:	mov    rcx,rdi
   14001ecea:	call   QWORD PTR [rax+0x28]
   14001eced:	mov    rax,QWORD PTR [rbx]
   14001ecf0:	mov    rdx,rdi
   14001ecf3:	mov    rcx,rbx
   14001ecf6:	call   QWORD PTR [rax+0x10]
   14001ecf9:	mov    rdi,QWORD PTR [rsp+0x30]
   14001ecfe:	mov    rax,QWORD PTR [rbx]
   14001ed01:	mov    rdx,rsi
   14001ed04:	mov    rcx,rbx
   14001ed07:	mov    rbx,QWORD PTR [rsp+0x38]
   14001ed0c:	add    rsp,0x20
   14001ed10:	pop    rsi
   14001ed11:	rex.W jmp QWORD PTR [rax+0x5a8]
   14001ed18:	rex push rbx
   14001ed1a:	sub    rsp,0x20
   14001ed1e:	lea    rcx,[rsp+0x30]
   14001ed23:	xor    edx,edx
   14001ed25:	call   QWORD PTR [rip+0x1385]        # 0x1400200b0
   14001ed2b:	jmp    0x14001ed5c
   14001ed2d:	mov    rax,QWORD PTR [rbx]
   14001ed30:	mov    rcx,QWORD PTR [rbx+0x8]
   14001ed34:	mov    QWORD PTR [rip+0x1389d],rax        # 0x1400325d8
   14001ed3b:	call   QWORD PTR [rip+0x142f]        # 0x140020170
   14001ed41:	test   rax,rax
   14001ed44:	je     0x14001ed54
   14001ed46:	mov    r8,QWORD PTR [rax]
   14001ed49:	mov    edx,0x1
   14001ed4e:	mov    rcx,rax
   14001ed51:	call   QWORD PTR [r8]
   14001ed54:	mov    rcx,rbx
   14001ed57:	call   0x14001ee46
   14001ed5c:	mov    rbx,QWORD PTR [rip+0x13875]        # 0x1400325d8
   14001ed63:	test   rbx,rbx
   14001ed66:	jne    0x14001ed2d
   14001ed68:	lea    rcx,[rsp+0x30]
   14001ed6d:	call   QWORD PTR [rip+0x130d]        # 0x140020080
   14001ed73:	add    rsp,0x20
   14001ed77:	pop    rbx
   14001ed78:	ret    
   14001ed79:	int3   
   14001ed7a:	int3   
   14001ed7b:	int3   
   14001ed7c:	rex push rbx
   14001ed7e:	sub    rsp,0x20
   14001ed82:	cmp    QWORD PTR [rip+0x1384e],0x0        # 0x1400325d8
   14001ed8a:	mov    rbx,rcx
   14001ed8d:	jne    0x14001eda5
   14001ed8f:	lea    rcx,[rip+0xffffffffffffff82]        # 0x14001ed18
   14001ed96:	call   0x14001efe0
   14001ed9b:	test   eax,eax
   14001ed9d:	je     0x14001eda5
   14001ed9f:	call   QWORD PTR [rip+0x1453]        # 0x1400201f8
   14001eda5:	mov    ecx,0x10
   14001edaa:	call   0x14001ee64
   14001edaf:	test   rax,rax
   14001edb2:	je     0x14001edc4
   14001edb4:	mov    rcx,QWORD PTR [rip+0x1381d]        # 0x1400325d8
   14001edbb:	mov    QWORD PTR [rax+0x8],rbx
   14001edbf:	mov    QWORD PTR [rax],rcx
   14001edc2:	jmp    0x14001edc6
   14001edc4:	xor    eax,eax
   14001edc6:	mov    QWORD PTR [rip+0x1380b],rax        # 0x1400325d8
   14001edcd:	add    rsp,0x20
   14001edd1:	pop    rbx
   14001edd2:	ret    
   14001edd3:	int3   
   14001edd4:	jmp    QWORD PTR [rip+0x13d6]        # 0x1400201b0
   14001edda:	int3   
   14001eddb:	int3   
   14001eddc:	mov    QWORD PTR [rsp+0x8],rbx
   14001ede1:	mov    QWORD PTR [rsp+0x10],rsi
   14001ede6:	push   rdi
   14001ede7:	sub    rsp,0x20
   14001edeb:	mov    esi,edx
   14001eded:	mov    rbx,rcx
   14001edf0:	test   dl,0x2
   14001edf3:	je     0x14001ee1f
   14001edf5:	mov    r8d,DWORD PTR [rcx-0x8]
   14001edf9:	lea    r9,[rip+0x95e]        # 0x14001f75e
   14001ee00:	mov    edx,0x18
   14001ee05:	call   0x14001f32c
   14001ee0a:	test   sil,0x1
   14001ee0e:	je     0x14001ee19
   14001ee10:	lea    rcx,[rbx-0x8]
   14001ee14:	call   0x14001ee46
   14001ee19:	lea    rax,[rbx-0x8]
   14001ee1d:	jmp    0x14001ee35
   14001ee1f:	call   0x14001f75e
   14001ee24:	test   sil,0x1
   14001ee28:	je     0x14001ee32
   14001ee2a:	mov    rcx,rbx
   14001ee2d:	call   0x14001ee46
   14001ee32:	mov    rax,rbx
   14001ee35:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ee3a:	mov    rsi,QWORD PTR [rsp+0x38]
   14001ee3f:	add    rsp,0x20
   14001ee43:	pop    rdi
   14001ee44:	ret    
   14001ee45:	int3   
   14001ee46:	jmp    QWORD PTR [rip+0x135c]        # 0x1400201a8
   14001ee4c:	jmp    QWORD PTR [rip+0x145e]        # 0x1400202b0
   14001ee52:	jmp    QWORD PTR [rip+0x1338]        # 0x140020190
   14001ee58:	jmp    QWORD PTR [rip+0x132a]        # 0x140020188
   14001ee5e:	jmp    QWORD PTR [rip+0x1334]        # 0x140020198
   14001ee64:	jmp    QWORD PTR [rip+0x134e]        # 0x1400201b8
   14001ee6a:	jmp    QWORD PTR [rip+0x1350]        # 0x1400201c0
   14001ee70:	rex push rbx
   14001ee72:	sub    rsp,0x20
   14001ee76:	mov    r11d,DWORD PTR [r8]
   14001ee79:	mov    rbx,rdx
   14001ee7c:	mov    r9,rcx
   14001ee7f:	and    r11d,0xfffffff8
   14001ee83:	test   BYTE PTR [r8],0x4
   14001ee87:	mov    r10,rcx
   14001ee8a:	je     0x14001ee9f
   14001ee8c:	mov    eax,DWORD PTR [r8+0x8]
   14001ee90:	movsxd r10,DWORD PTR [r8+0x4]
   14001ee94:	neg    eax
   14001ee96:	add    r10,rcx
   14001ee99:	movsxd rcx,eax
   14001ee9c:	and    r10,rcx
   14001ee9f:	movsxd rax,r11d
   14001eea2:	mov    rdx,QWORD PTR [rax+r10*1]
   14001eea6:	mov    rax,QWORD PTR [rbx+0x10]
   14001eeaa:	mov    ecx,DWORD PTR [rax+0x8]
   14001eead:	add    rcx,QWORD PTR [rbx+0x8]
   14001eeb1:	test   BYTE PTR [rcx+0x3],0xf
   14001eeb5:	je     0x14001eec3
   14001eeb7:	movzx  eax,BYTE PTR [rcx+0x3]
   14001eebb:	and    eax,0xfffffff0
   14001eebe:	cdqe   
   14001eec0:	add    r9,rax
   14001eec3:	xor    r9,rdx
   14001eec6:	mov    rcx,r9
   14001eec9:	add    rsp,0x20
   14001eecd:	pop    rbx
   14001eece:	jmp    0x14001ef10
   14001eed3:	int3   
   14001eed4:	sub    rsp,0x28
   14001eed8:	mov    r8,QWORD PTR [r9+0x38]
   14001eedc:	mov    rcx,rdx
   14001eedf:	mov    rdx,r9
   14001eee2:	call   0x14001ee70
   14001eee7:	mov    eax,0x1
   14001eeec:	add    rsp,0x28
   14001eef0:	ret    
   14001eef1:	int3   
   14001eef2:	int3   
   14001eef3:	int3   
   14001eef4:	int3   
   14001eef5:	int3   
   14001eef6:	int3   
   14001eef7:	int3   
   14001eef8:	int3   
   14001eef9:	int3   
   14001eefa:	int3   
   14001eefb:	int3   
   14001eefc:	int3   
   14001eefd:	int3   
   14001eefe:	int3   
   14001eeff:	int3   
   14001ef00:	int3   
   14001ef01:	int3   
   14001ef02:	int3   
   14001ef03:	int3   
   14001ef04:	int3   
   14001ef05:	int3   
   14001ef06:	data16 nop WORD PTR [rax+rax*1+0x0]
   14001ef10:	cmp    rcx,QWORD PTR [rip+0x13679]        # 0x140032590
   14001ef17:	jne    0x14001ef2a
   14001ef19:	rol    rcx,0x10
   14001ef1d:	test   cx,0xffff
   14001ef22:	jne    0x14001ef26
   14001ef24:	repz ret 
   14001ef26:	ror    rcx,0x10
   14001ef2a:	jmp    0x14001f38c
   14001ef2f:	int3   
   14001ef30:	rex push rbx
   14001ef32:	sub    rsp,0x20
   14001ef36:	mov    rbx,rcx
   14001ef39:	mov    rcx,QWORD PTR [rip+0x13c70]        # 0x140032bb0
   14001ef40:	call   QWORD PTR [rip+0x12ea]        # 0x140020230
   14001ef46:	mov    QWORD PTR [rsp+0x38],rax
   14001ef4b:	cmp    rax,0xffffffffffffffff
   14001ef4f:	jne    0x14001ef5c
   14001ef51:	mov    rcx,rbx
   14001ef54:	call   QWORD PTR [rip+0x12ce]        # 0x140020228
   14001ef5a:	jmp    0x14001efda
   14001ef5c:	mov    ecx,0x8
   14001ef61:	call   0x14001f4e8
   14001ef66:	nop
   14001ef67:	mov    rcx,QWORD PTR [rip+0x13c42]        # 0x140032bb0
   14001ef6e:	call   QWORD PTR [rip+0x12bc]        # 0x140020230
   14001ef74:	mov    QWORD PTR [rsp+0x38],rax
   14001ef79:	mov    rcx,QWORD PTR [rip+0x13c28]        # 0x140032ba8
   14001ef80:	call   QWORD PTR [rip+0x12aa]        # 0x140020230
   14001ef86:	mov    QWORD PTR [rsp+0x40],rax
   14001ef8b:	mov    rcx,rbx
   14001ef8e:	call   QWORD PTR [rip+0x1284]        # 0x140020218
   14001ef94:	mov    rcx,rax
   14001ef97:	lea    r8,[rsp+0x40]
   14001ef9c:	lea    rdx,[rsp+0x38]
   14001efa1:	call   0x14001f4e2
   14001efa6:	mov    rbx,rax
   14001efa9:	mov    rcx,QWORD PTR [rsp+0x38]
   14001efae:	call   QWORD PTR [rip+0x1264]        # 0x140020218
   14001efb4:	mov    QWORD PTR [rip+0x13bf5],rax        # 0x140032bb0
   14001efbb:	mov    rcx,QWORD PTR [rsp+0x40]
   14001efc0:	call   QWORD PTR [rip+0x1252]        # 0x140020218
   14001efc6:	mov    QWORD PTR [rip+0x13bdb],rax        # 0x140032ba8
   14001efcd:	mov    ecx,0x8
   14001efd2:	call   0x14001f4dc
   14001efd7:	mov    rax,rbx
   14001efda:	add    rsp,0x20
   14001efde:	pop    rbx
   14001efdf:	ret    
   14001efe0:	sub    rsp,0x28
   14001efe4:	call   0x14001ef30
   14001efe9:	neg    rax
   14001efec:	sbb    eax,eax
   14001efee:	neg    eax
   14001eff0:	dec    eax
   14001eff2:	add    rsp,0x28
   14001eff6:	ret    
   14001eff7:	int3   
   14001eff8:	sub    rsp,0x38
   14001effc:	lea    rcx,[rip+0x589]        # 0x14001f58c
   14001f003:	call   0x14001efe0
   14001f008:	mov    r11d,DWORD PTR [rip+0x13b79]        # 0x140032b88
   14001f00f:	mov    r9d,DWORD PTR [rip+0x13b6e]        # 0x140032b84
   14001f016:	lea    rax,[rip+0x135df]        # 0x1400325fc
   14001f01d:	lea    r8,[rip+0x135c4]        # 0x1400325e8
   14001f024:	lea    rdx,[rip+0x135c5]        # 0x1400325f0
   14001f02b:	lea    rcx,[rip+0x135ae]        # 0x1400325e0
   14001f032:	mov    DWORD PTR [rip+0x135c3],r11d        # 0x1400325fc
   14001f039:	mov    QWORD PTR [rsp+0x20],rax
   14001f03e:	call   QWORD PTR [rip+0x11fc]        # 0x140020240
   14001f044:	mov    DWORD PTR [rip+0x135ae],eax        # 0x1400325f8
   14001f04a:	test   eax,eax
   14001f04c:	jns    0x14001f058
   14001f04e:	mov    ecx,0x8
   14001f053:	call   0x14001f54c
   14001f058:	add    rsp,0x38
   14001f05c:	ret    
   14001f05d:	int3   
   14001f05e:	int3   
   14001f05f:	int3   
   14001f060:	mov    QWORD PTR [rsp+0x8],rsi
   14001f065:	push   rdi
   14001f066:	sub    rsp,0x20
   14001f06a:	mov    rax,QWORD PTR gs:0x30
   14001f073:	mov    rdi,QWORD PTR [rax+0x8]
   14001f077:	xor    esi,esi
   14001f079:	xor    eax,eax
   14001f07b:	lock cmpxchg QWORD PTR [rip+0x13b14],rdi        # 0x140032b98
   14001f084:	je     0x14001f0a1
   14001f086:	cmp    rax,rdi
   14001f089:	jne    0x14001f094
   14001f08b:	mov    edi,0x1
   14001f090:	mov    esi,edi
   14001f092:	jmp    0x14001f0a6
   14001f094:	mov    ecx,0x3e8
   14001f099:	call   QWORD PTR [rip+0xfc1]        # 0x140020060
   14001f09f:	jmp    0x14001f079
   14001f0a1:	mov    edi,0x1
   14001f0a6:	mov    eax,DWORD PTR [rip+0x13ae8]        # 0x140032b94
   14001f0ac:	cmp    eax,edi
   14001f0ae:	jne    0x14001f0bc
   14001f0b0:	mov    ecx,0x1f
   14001f0b5:	call   0x14001f54c
   14001f0ba:	jmp    0x14001f0f3
   14001f0bc:	mov    eax,DWORD PTR [rip+0x13ad2]        # 0x140032b94
   14001f0c2:	test   eax,eax
   14001f0c4:	jne    0x14001f0ed
   14001f0c6:	mov    DWORD PTR [rip+0x13ac8],edi        # 0x140032b94
   14001f0cc:	lea    rdx,[rip+0x171d]        # 0x1400207f0
   14001f0d3:	lea    rcx,[rip+0x16fe]        # 0x1400207d8
   14001f0da:	call   0x14001f698
   14001f0df:	test   eax,eax
   14001f0e1:	je     0x14001f0f3
   14001f0e3:	mov    eax,0xff
   14001f0e8:	jmp    0x14001f1d5
   14001f0ed:	mov    DWORD PTR [rip+0x13511],edi        # 0x140032604
   14001f0f3:	mov    eax,DWORD PTR [rip+0x13a9b]        # 0x140032b94
   14001f0f9:	cmp    eax,edi
   14001f0fb:	jne    0x14001f11a
   14001f0fd:	lea    rdx,[rip+0x16cc]        # 0x1400207d0
   14001f104:	lea    rcx,[rip+0x16ad]        # 0x1400207b8
   14001f10b:	call   0x14001f692
   14001f110:	mov    DWORD PTR [rip+0x13a7a],0x2        # 0x140032b94
   14001f11a:	test   esi,esi
   14001f11c:	jne    0x14001f127
   14001f11e:	xor    eax,eax
   14001f120:	xchg   QWORD PTR [rip+0x13a71],rax        # 0x140032b98
   14001f127:	cmp    QWORD PTR [rip+0x13a71],0x0        # 0x140032ba0
   14001f12f:	je     0x14001f150
   14001f131:	lea    rcx,[rip+0x13a68]        # 0x140032ba0
   14001f138:	call   0x14001f650
   14001f13d:	test   eax,eax
   14001f13f:	je     0x14001f150
   14001f141:	xor    r8d,r8d
   14001f144:	lea    edx,[r8+0x2]
   14001f148:	xor    ecx,ecx
   14001f14a:	call   QWORD PTR [rip+0x13a50]        # 0x140032ba0
   14001f150:	mov    rcx,QWORD PTR [rip+0x1111]        # 0x140020268
   14001f157:	mov    rax,QWORD PTR [rip+0x1348a]        # 0x1400325e8
   14001f15e:	mov    QWORD PTR [rcx],rax
   14001f161:	mov    r8,QWORD PTR [rip+0x13480]        # 0x1400325e8
   14001f168:	mov    rdx,QWORD PTR [rip+0x13481]        # 0x1400325f0
   14001f16f:	mov    ecx,DWORD PTR [rip+0x1346b]        # 0x1400325e0
   14001f175:	call   0x14000c170
   14001f17a:	mov    DWORD PTR [rip+0x13480],eax        # 0x140032600
   14001f180:	cmp    DWORD PTR [rip+0x1345d],0x0        # 0x1400325e4
   14001f187:	jne    0x14001f191
   14001f189:	mov    ecx,eax
   14001f18b:	call   QWORD PTR [rip+0x10cf]        # 0x140020260
   14001f191:	cmp    DWORD PTR [rip+0x1346c],0x0        # 0x140032604
   14001f198:	jne    0x14001f1a6
   14001f19a:	call   QWORD PTR [rip+0x10b8]        # 0x140020258
   14001f1a0:	mov    eax,DWORD PTR [rip+0x1345a]        # 0x140032600
   14001f1a6:	jmp    0x14001f1d5
   14001f1a8:	mov    DWORD PTR [rip+0x13452],eax        # 0x140032600
   14001f1ae:	cmp    DWORD PTR [rip+0x1342f],0x0        # 0x1400325e4
   14001f1b5:	jne    0x14001f1c0
   14001f1b7:	mov    ecx,eax
   14001f1b9:	call   QWORD PTR [rip+0x1091]        # 0x140020250
   14001f1bf:	int3   
   14001f1c0:	cmp    DWORD PTR [rip+0x1343d],0x0        # 0x140032604
   14001f1c7:	jne    0x14001f1d5
   14001f1c9:	call   QWORD PTR [rip+0x1089]        # 0x140020258
   14001f1cf:	mov    eax,DWORD PTR [rip+0x1342b]        # 0x140032600
   14001f1d5:	mov    rsi,QWORD PTR [rsp+0x30]
   14001f1da:	add    rsp,0x20
   14001f1de:	pop    rdi
   14001f1df:	ret    
   14001f1e0:	sub    rsp,0x28
   14001f1e4:	mov    eax,0x5a4d
   14001f1e9:	cmp    WORD PTR [rip+0xfffffffffffe0e10],ax        # 0x140000000
   14001f1f0:	je     0x14001f1f6
   14001f1f2:	xor    eax,eax
   14001f1f4:	jmp    0x14001f245
   14001f1f6:	movsxd rcx,DWORD PTR [rip+0xfffffffffffe0e3f]        # 0x14000003c
   14001f1fd:	lea    rax,[rip+0xfffffffffffe0dfc]        # 0x140000000
   14001f204:	add    rcx,rax
   14001f207:	cmp    DWORD PTR [rcx],0x4550
   14001f20d:	jne    0x14001f1f2
   14001f20f:	movzx  eax,WORD PTR [rcx+0x18]
   14001f213:	cmp    eax,0x10b
   14001f218:	je     0x14001f234
   14001f21a:	cmp    eax,0x20b
   14001f21f:	jne    0x14001f1f2
   14001f221:	xor    eax,eax
   14001f223:	cmp    DWORD PTR [rcx+0x84],0xe
   14001f22a:	jbe    0x14001f245
   14001f22c:	cmp    DWORD PTR [rcx+0xf8],eax
   14001f232:	jmp    0x14001f242
   14001f234:	xor    eax,eax
   14001f236:	cmp    DWORD PTR [rcx+0x74],0xe
   14001f23a:	jbe    0x14001f245
   14001f23c:	cmp    DWORD PTR [rcx+0xe8],eax
   14001f242:	setne  al
   14001f245:	mov    ecx,0x1
   14001f24a:	mov    DWORD PTR [rip+0x13394],eax        # 0x1400325e4
   14001f250:	call   QWORD PTR [rip+0x104a]        # 0x1400202a0
   14001f256:	or     rcx,0xffffffffffffffff
   14001f25a:	call   QWORD PTR [rip+0xfb8]        # 0x140020218
   14001f260:	mov    rcx,QWORD PTR [rip+0x1031]        # 0x140020298
   14001f267:	mov    QWORD PTR [rip+0x1393a],rax        # 0x140032ba8
   14001f26e:	mov    QWORD PTR [rip+0x1393b],rax        # 0x140032bb0
   14001f275:	mov    eax,DWORD PTR [rip+0x13915]        # 0x140032b90
   14001f27b:	mov    DWORD PTR [rcx],eax
   14001f27d:	mov    rdx,QWORD PTR [rip+0x100c]        # 0x140020290
   14001f284:	mov    eax,DWORD PTR [rip+0x13902]        # 0x140032b8c
   14001f28a:	mov    DWORD PTR [rdx],eax
   14001f28c:	call   0x14001f554
   14001f291:	call   0x14001f6a0
   14001f296:	cmp    DWORD PTR [rip+0x13313],0x0        # 0x1400325b0
   14001f29d:	jne    0x14001f2ac
   14001f29f:	lea    rcx,[rip+0x3fa]        # 0x14001f6a0
   14001f2a6:	call   QWORD PTR [rip+0xfdc]        # 0x140020288
   14001f2ac:	cmp    DWORD PTR [rip+0x132f9],0xffffffff        # 0x1400325ac
   14001f2b3:	jne    0x14001f2be
   14001f2b5:	or     ecx,0xffffffff
   14001f2b8:	call   QWORD PTR [rip+0xfc2]        # 0x140020280
   14001f2be:	xor    eax,eax
   14001f2c0:	add    rsp,0x28
   14001f2c4:	ret    
   14001f2c5:	int3   
   14001f2c6:	int3   
   14001f2c7:	int3   
   14001f2c8:	sub    rsp,0x28
   14001f2cc:	call   0x14001f6a4
   14001f2d1:	add    rsp,0x28
   14001f2d5:	jmp    0x14001f060
   14001f2da:	jmp    QWORD PTR [rip+0xf00]        # 0x1400201e0
   14001f2e0:	mov    QWORD PTR [rsp+0x10],rbx
   14001f2e5:	mov    DWORD PTR [rsp+0x18],r8d
   14001f2ea:	mov    QWORD PTR [rsp+0x8],rcx
   14001f2ef:	push   rsi
   14001f2f0:	push   rdi
   14001f2f1:	push   r12
   14001f2f3:	sub    rsp,0x40
   14001f2f7:	mov    rsi,r9
   14001f2fa:	mov    edi,r8d
   14001f2fd:	mov    r12,rdx
   14001f300:	mov    rbx,rcx
   14001f303:	sub    edi,0x1
   14001f306:	mov    DWORD PTR [rsp+0x70],edi
   14001f30a:	js     0x14001f31b
   14001f30c:	sub    rbx,r12
   14001f30f:	mov    QWORD PTR [rsp+0x60],rbx
   14001f314:	mov    rcx,rbx
   14001f317:	call   rsi
   14001f319:	jmp    0x14001f303
   14001f31b:	jmp    0x14001f31d
   14001f31d:	mov    rbx,QWORD PTR [rsp+0x68]
   14001f322:	add    rsp,0x40
   14001f326:	pop    r12
   14001f328:	pop    rdi
   14001f329:	pop    rsi
   14001f32a:	ret    
   14001f32b:	int3   
   14001f32c:	mov    rax,rsp
   14001f32f:	mov    QWORD PTR [rax+0x20],r9
   14001f333:	mov    DWORD PTR [rax+0x18],r8d
   14001f337:	mov    QWORD PTR [rax+0x10],rdx
   14001f33b:	push   rbx
   14001f33c:	push   rsi
   14001f33d:	push   rdi
   14001f33e:	push   r12
   14001f340:	sub    rsp,0x38
   14001f344:	mov    r12,r9
   14001f347:	movsxd rdi,r8d
   14001f34a:	mov    rsi,rdx
   14001f34d:	and    DWORD PTR [rax-0x38],0x0
   14001f351:	mov    rbx,rdi
   14001f354:	imul   rbx,rdx
   14001f358:	add    rbx,rcx
   14001f35b:	mov    QWORD PTR [rax+0x8],rbx
   14001f35f:	sub    edi,0x1
   14001f362:	mov    DWORD PTR [rsp+0x70],edi
   14001f366:	js     0x14001f378
   14001f368:	sub    rbx,rsi
   14001f36b:	mov    QWORD PTR [rsp+0x60],rbx
   14001f370:	mov    rcx,rbx
   14001f373:	call   r12
   14001f376:	jmp    0x14001f35f
   14001f378:	mov    DWORD PTR [rsp+0x20],0x1
   14001f380:	add    rsp,0x38
   14001f384:	pop    r12
   14001f386:	pop    rdi
   14001f387:	pop    rsi
   14001f388:	pop    rbx
   14001f389:	ret    
   14001f38a:	int3   
   14001f38b:	int3   
   14001f38c:	mov    QWORD PTR [rsp+0x8],rcx
   14001f391:	sub    rsp,0x88
   14001f398:	lea    rcx,[rip+0x13311]        # 0x1400326b0
   14001f39f:	call   QWORD PTR [rip+0xc7b]        # 0x140020020
   14001f3a5:	mov    r11,QWORD PTR [rip+0x133fc]        # 0x1400327a8
   14001f3ac:	mov    QWORD PTR [rsp+0x58],r11
   14001f3b1:	xor    r8d,r8d
   14001f3b4:	lea    rdx,[rsp+0x60]
   14001f3b9:	mov    rcx,QWORD PTR [rsp+0x58]
   14001f3be:	call   0x14001f770
   14001f3c3:	mov    QWORD PTR [rsp+0x50],rax
   14001f3c8:	cmp    QWORD PTR [rsp+0x50],0x0
   14001f3ce:	je     0x14001f411
   14001f3d0:	mov    QWORD PTR [rsp+0x38],0x0
   14001f3d9:	lea    rax,[rsp+0x48]
   14001f3de:	mov    QWORD PTR [rsp+0x30],rax
   14001f3e3:	lea    rax,[rsp+0x40]
   14001f3e8:	mov    QWORD PTR [rsp+0x28],rax
   14001f3ed:	lea    rax,[rip+0x132bc]        # 0x1400326b0
   14001f3f4:	mov    QWORD PTR [rsp+0x20],rax
   14001f3f9:	mov    r9,QWORD PTR [rsp+0x50]
   14001f3fe:	mov    r8,QWORD PTR [rsp+0x58]
   14001f403:	mov    rdx,QWORD PTR [rsp+0x60]
   14001f408:	xor    ecx,ecx
   14001f40a:	call   0x14001f76a
   14001f40f:	jmp    0x14001f433
   14001f411:	mov    rax,QWORD PTR [rsp+0x88]
   14001f419:	mov    QWORD PTR [rip+0x13388],rax        # 0x1400327a8
   14001f420:	lea    rax,[rsp+0x88]
   14001f428:	add    rax,0x8
   14001f42c:	mov    QWORD PTR [rip+0x13315],rax        # 0x140032748
   14001f433:	mov    rax,QWORD PTR [rip+0x1336e]        # 0x1400327a8
   14001f43a:	mov    QWORD PTR [rip+0x131df],rax        # 0x140032620
   14001f441:	mov    rax,QWORD PTR [rsp+0x90]
   14001f449:	mov    QWORD PTR [rip+0x132e0],rax        # 0x140032730
   14001f450:	mov    DWORD PTR [rip+0x131b6],0xc0000409        # 0x140032610
   14001f45a:	mov    DWORD PTR [rip+0x131b0],0x1        # 0x140032614
   14001f464:	mov    rax,QWORD PTR [rip+0x13125]        # 0x140032590
   14001f46b:	mov    QWORD PTR [rsp+0x68],rax
   14001f470:	mov    rax,QWORD PTR [rip+0x13121]        # 0x140032598
   14001f477:	mov    QWORD PTR [rsp+0x70],rax
   14001f47c:	call   QWORD PTR [rip+0xbb6]        # 0x140020038
   14001f482:	mov    DWORD PTR [rip+0x13220],eax        # 0x1400326a8
   14001f488:	mov    ecx,0x1
   14001f48d:	call   0x14001f764
   14001f492:	xor    ecx,ecx
   14001f494:	call   QWORD PTR [rip+0xba6]        # 0x140020040
   14001f49a:	lea    rcx,[rip+0x8dcf]        # 0x140028270
   14001f4a1:	call   QWORD PTR [rip+0xba1]        # 0x140020048
   14001f4a7:	cmp    DWORD PTR [rip+0x131fa],0x0        # 0x1400326a8
   14001f4ae:	jne    0x14001f4ba
   14001f4b0:	mov    ecx,0x1
   14001f4b5:	call   0x14001f764
   14001f4ba:	call   QWORD PTR [rip+0xb90]        # 0x140020050
   14001f4c0:	mov    edx,0xc0000409
   14001f4c5:	mov    rcx,rax
   14001f4c8:	call   QWORD PTR [rip+0xb8a]        # 0x140020058
   14001f4ce:	add    rsp,0x88
   14001f4d5:	ret    
   14001f4d6:	jmp    QWORD PTR [rip+0xd24]        # 0x140020200
   14001f4dc:	jmp    QWORD PTR [rip+0xd26]        # 0x140020208
   14001f4e2:	jmp    QWORD PTR [rip+0xd28]        # 0x140020210
   14001f4e8:	jmp    QWORD PTR [rip+0xd32]        # 0x140020220
   14001f4ee:	int3   
   14001f4ef:	int3   
   14001f4f0:	sub    rsp,0x28
   14001f4f4:	mov    rax,QWORD PTR [rcx]
   14001f4f7:	cmp    DWORD PTR [rax],0xe06d7363
   14001f4fd:	jne    0x14001f52a
   14001f4ff:	cmp    DWORD PTR [rax+0x18],0x4
   14001f503:	jne    0x14001f52a
   14001f505:	mov    eax,DWORD PTR [rax+0x20]
   14001f508:	cmp    eax,0x19930520
   14001f50d:	je     0x14001f524
   14001f50f:	cmp    eax,0x19930521
   14001f514:	je     0x14001f524
   14001f516:	cmp    eax,0x19930522
   14001f51b:	je     0x14001f524
   14001f51d:	cmp    eax,0x1994000
   14001f522:	jne    0x14001f52a
   14001f524:	call   0x14001f758
   14001f529:	int3   
   14001f52a:	xor    eax,eax
   14001f52c:	add    rsp,0x28
   14001f530:	ret    
   14001f531:	int3   
   14001f532:	int3   
   14001f533:	int3   
   14001f534:	sub    rsp,0x28
   14001f538:	lea    rcx,[rip+0xffffffffffffffb1]        # 0x14001f4f0
   14001f53f:	call   QWORD PTR [rip+0xafb]        # 0x140020040
   14001f545:	xor    eax,eax
   14001f547:	add    rsp,0x28
   14001f54b:	ret    
   14001f54c:	jmp    QWORD PTR [rip+0xce6]        # 0x140020238
   14001f552:	int3   
   14001f553:	int3   
   14001f554:	mov    QWORD PTR [rsp+0x8],rbx
   14001f559:	push   rdi
   14001f55a:	sub    rsp,0x20
   14001f55e:	lea    rbx,[rip+0xc4bb]        # 0x14002ba20
   14001f565:	lea    rdi,[rip+0xc4b4]        # 0x14002ba20
   14001f56c:	jmp    0x14001f57c
   14001f56e:	mov    rax,QWORD PTR [rbx]
   14001f571:	test   rax,rax
   14001f574:	je     0x14001f578
   14001f576:	call   rax
   14001f578:	add    rbx,0x8
   14001f57c:	cmp    rbx,rdi
   14001f57f:	jb     0x14001f56e
   14001f581:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f586:	add    rsp,0x20
   14001f58a:	pop    rdi
   14001f58b:	ret    
   14001f58c:	mov    QWORD PTR [rsp+0x8],rbx
   14001f591:	push   rdi
   14001f592:	sub    rsp,0x20
   14001f596:	lea    rbx,[rip+0xc493]        # 0x14002ba30
   14001f59d:	lea    rdi,[rip+0xc48c]        # 0x14002ba30
   14001f5a4:	jmp    0x14001f5b4
   14001f5a6:	mov    rax,QWORD PTR [rbx]
   14001f5a9:	test   rax,rax
   14001f5ac:	je     0x14001f5b0
   14001f5ae:	call   rax
   14001f5b0:	add    rbx,0x8
   14001f5b4:	cmp    rbx,rdi
   14001f5b7:	jb     0x14001f5a6
   14001f5b9:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f5be:	add    rsp,0x20
   14001f5c2:	pop    rdi
   14001f5c3:	ret    
   14001f5c4:	jmp    QWORD PTR [rip+0xc7e]        # 0x140020248
   14001f5ca:	int3   
   14001f5cb:	int3   
   14001f5cc:	int3   
   14001f5cd:	int3   
   14001f5ce:	int3   
   14001f5cf:	int3   
   14001f5d0:	mov    rax,rcx
   14001f5d3:	mov    ecx,0x5a4d
   14001f5d8:	cmp    WORD PTR [rax],cx
   14001f5db:	je     0x14001f5e0
   14001f5dd:	xor    eax,eax
   14001f5df:	ret    
   14001f5e0:	movsxd rcx,DWORD PTR [rax+0x3c]
   14001f5e4:	add    rcx,rax
   14001f5e7:	xor    eax,eax
   14001f5e9:	cmp    DWORD PTR [rcx],0x4550
   14001f5ef:	jne    0x14001f5fd
   14001f5f1:	mov    edx,0x20b
   14001f5f6:	cmp    WORD PTR [rcx+0x18],dx
   14001f5fa:	sete   al
   14001f5fd:	repz ret 
   14001f5ff:	int3   
   14001f600:	movsxd r8,DWORD PTR [rcx+0x3c]
   14001f604:	xor    r9d,r9d
   14001f607:	mov    r10,rdx
   14001f60a:	add    r8,rcx
   14001f60d:	movzx  eax,WORD PTR [r8+0x14]
   14001f612:	movzx  r11d,WORD PTR [r8+0x6]
   14001f617:	lea    rcx,[rax+r8*1+0x18]
   14001f61c:	test   r11d,r11d
   14001f61f:	je     0x14001f63f
   14001f621:	mov    edx,DWORD PTR [rcx+0xc]
   14001f624:	cmp    r10,rdx
   14001f627:	jb     0x14001f633
   14001f629:	mov    eax,DWORD PTR [rcx+0x8]
   14001f62c:	add    eax,edx
   14001f62e:	cmp    r10,rax
   14001f631:	jb     0x14001f642
   14001f633:	inc    r9d
   14001f636:	add    rcx,0x28
   14001f63a:	cmp    r9d,r11d
   14001f63d:	jb     0x14001f621
   14001f63f:	xor    eax,eax
   14001f641:	ret    
   14001f642:	mov    rax,rcx
   14001f645:	ret    
   14001f646:	int3   
   14001f647:	int3   
   14001f648:	int3   
   14001f649:	int3   
   14001f64a:	int3   
   14001f64b:	int3   
   14001f64c:	int3   
   14001f64d:	int3   
   14001f64e:	int3   
   14001f64f:	int3   
   14001f650:	sub    rsp,0x28
   14001f654:	mov    r8,rcx
   14001f657:	lea    r9,[rip+0xfffffffffffe09a2]        # 0x140000000
   14001f65e:	mov    rcx,r9
   14001f661:	call   0x14001f5d0
   14001f666:	test   eax,eax
   14001f668:	je     0x14001f68c
   14001f66a:	sub    r8,r9
   14001f66d:	mov    rdx,r8
   14001f670:	mov    rcx,r9
   14001f673:	call   0x14001f600
   14001f678:	test   rax,rax
   14001f67b:	je     0x14001f68c
   14001f67d:	mov    eax,DWORD PTR [rax+0x24]
   14001f680:	shr    eax,0x1f
   14001f683:	not    eax
   14001f685:	and    eax,0x1
   14001f688:	jmp    0x14001f68c
   14001f68a:	xor    eax,eax
   14001f68c:	add    rsp,0x28
   14001f690:	ret    
   14001f691:	int3   
   14001f692:	jmp    QWORD PTR [rip+0xbd8]        # 0x140020270
   14001f698:	jmp    QWORD PTR [rip+0xbda]        # 0x140020278
   14001f69e:	int3   
   14001f69f:	int3   
   14001f6a0:	xor    eax,eax
   14001f6a2:	ret    
   14001f6a3:	int3   
   14001f6a4:	mov    QWORD PTR [rsp+0x18],rbx
   14001f6a9:	push   rdi
   14001f6aa:	sub    rsp,0x20
   14001f6ae:	mov    rax,QWORD PTR [rip+0x12edb]        # 0x140032590
   14001f6b5:	and    QWORD PTR [rsp+0x30],0x0
   14001f6bb:	movabs rdi,0x2b992ddfa232
   14001f6c5:	cmp    rax,rdi
   14001f6c8:	je     0x14001f6d6
   14001f6ca:	not    rax
   14001f6cd:	mov    QWORD PTR [rip+0x12ec4],rax        # 0x140032598
   14001f6d4:	jmp    0x14001f74c
   14001f6d6:	lea    rcx,[rsp+0x30]
   14001f6db:	call   QWORD PTR [rip+0x987]        # 0x140020068
   14001f6e1:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f6e6:	call   QWORD PTR [rip+0x914]        # 0x140020000
   14001f6ec:	mov    r11d,eax
   14001f6ef:	xor    rbx,r11
   14001f6f2:	call   QWORD PTR [rip+0x910]        # 0x140020008
   14001f6f8:	mov    r11d,eax
   14001f6fb:	xor    rbx,r11
   14001f6fe:	call   QWORD PTR [rip+0x90c]        # 0x140020010
   14001f704:	lea    rcx,[rsp+0x38]
   14001f709:	mov    r11d,eax
   14001f70c:	xor    rbx,r11
   14001f70f:	call   QWORD PTR [rip+0x903]        # 0x140020018
   14001f715:	mov    r11,QWORD PTR [rsp+0x38]
   14001f71a:	xor    r11,rbx
   14001f71d:	movabs rax,0xffffffffffff
   14001f727:	and    r11,rax
   14001f72a:	movabs rax,0x2b992ddfa233
   14001f734:	cmp    r11,rdi
   14001f737:	cmove  r11,rax
   14001f73b:	mov    QWORD PTR [rip+0x12e4e],r11        # 0x140032590
   14001f742:	not    r11
   14001f745:	mov    QWORD PTR [rip+0x12e4c],r11        # 0x140032598
   14001f74c:	mov    rbx,QWORD PTR [rsp+0x40]
   14001f751:	add    rsp,0x20
   14001f755:	pop    rdi
   14001f756:	ret    
   14001f757:	int3   
   14001f758:	jmp    QWORD PTR [rip+0xb4a]        # 0x1400202a8
   14001f75e:	jmp    QWORD PTR [rip+0xb5c]        # 0x1400202c0
   14001f764:	jmp    QWORD PTR [rip+0xb4e]        # 0x1400202b8
   14001f76a:	jmp    QWORD PTR [rip+0x8c0]        # 0x140020030
   14001f770:	jmp    QWORD PTR [rip+0x8b2]        # 0x140020028
   14001f776:	int3   
   14001f777:	int3   
   14001f778:	int3   
   14001f779:	int3   
   14001f77a:	int3   
   14001f77b:	int3   
   14001f77c:	int3   
   14001f77d:	int3   
   14001f77e:	int3   
   14001f77f:	int3   
   14001f780:	mov    QWORD PTR [rsp+0x10],rdx
   14001f785:	push   rbp
   14001f786:	push   r15
   14001f788:	sub    rsp,0x28
   14001f78c:	mov    rbp,rdx
   14001f78f:	mov    rdx,QWORD PTR [rbp+0x90]
   14001f796:	mov    rax,QWORD PTR [rdx]
   14001f799:	movsxd rcx,DWORD PTR [rax+0x4]
   14001f79d:	add    rcx,rdx
   14001f7a0:	mov    r8b,0x1
   14001f7a3:	mov    edx,0x4
   14001f7a8:	call   QWORD PTR [rip+0x932]        # 0x1400200e0
   14001f7ae:	nop
   14001f7af:	lea    rax,[rip+0xfffffffffffe1dac]        # 0x140001562
   14001f7b6:	jmp    0x14001f7b8
   14001f7b8:	add    rsp,0x28
   14001f7bc:	pop    r15
   14001f7be:	pop    rbp
   14001f7bf:	ret    
   14001f7c0:	int3   
   14001f7c1:	int3   
   14001f7c2:	int3   
   14001f7c3:	int3   
   14001f7c4:	int3   
   14001f7c5:	int3   
   14001f7c6:	int3   
   14001f7c7:	int3   
   14001f7c8:	int3   
   14001f7c9:	int3   
   14001f7ca:	int3   
   14001f7cb:	int3   
   14001f7cc:	int3   
   14001f7cd:	int3   
   14001f7ce:	int3   
   14001f7cf:	int3   
   14001f7d0:	mov    QWORD PTR [rsp+0x10],rdx
   14001f7d5:	push   rbp
   14001f7d6:	push   r13
   14001f7d8:	sub    rsp,0x28
   14001f7dc:	mov    rbp,rdx
   14001f7df:	mov    rdx,QWORD PTR [rbp+0x90]
   14001f7e6:	mov    rax,QWORD PTR [rdx]
   14001f7e9:	movsxd rcx,DWORD PTR [rax+0x4]
   14001f7ed:	add    rcx,rdx
   14001f7f0:	mov    r8b,0x1
   14001f7f3:	mov    edx,0x4
   14001f7f8:	call   QWORD PTR [rip+0x8e2]        # 0x1400200e0
   14001f7fe:	nop
   14001f7ff:	lea    rax,[rip+0xfffffffffffe1f78]        # 0x14000177e
   14001f806:	jmp    0x14001f808
   14001f808:	add    rsp,0x28
   14001f80c:	pop    r13
   14001f80e:	pop    rbp
   14001f80f:	ret    
   14001f810:	int3   
   14001f811:	int3   
   14001f812:	int3   
   14001f813:	int3   
   14001f814:	int3   
   14001f815:	int3   
   14001f816:	int3   
   14001f817:	int3   
   14001f818:	int3   
   14001f819:	int3   
   14001f81a:	int3   
   14001f81b:	int3   
   14001f81c:	int3   
   14001f81d:	int3   
   14001f81e:	int3   
   14001f81f:	int3   
   14001f820:	mov    QWORD PTR [rsp+0x10],rdx
   14001f825:	push   rbx
   14001f826:	push   rbp
   14001f827:	sub    rsp,0x28
   14001f82b:	mov    rbp,rdx
   14001f82e:	mov    rdx,QWORD PTR [rbp+0x70]
   14001f832:	mov    rax,QWORD PTR [rdx]
   14001f835:	movsxd rcx,DWORD PTR [rax+0x4]
   14001f839:	add    rcx,rdx
   14001f83c:	mov    r8b,0x1
   14001f83f:	mov    edx,0x4
   14001f844:	call   QWORD PTR [rip+0x8be]        # 0x140020108
   14001f84a:	nop
   14001f84b:	lea    rax,[rip+0xfffffffffffe2124]        # 0x140001976
   14001f852:	jmp    0x14001f854
   14001f854:	add    rsp,0x28
   14001f858:	pop    rbp
   14001f859:	pop    rbx
   14001f85a:	ret    
   14001f85b:	int3   
   14001f85c:	int3   
   14001f85d:	int3   
   14001f85e:	int3   
   14001f85f:	int3   
   14001f860:	mov    QWORD PTR [rsp+0x10],rdx
   14001f865:	push   rbp
   14001f866:	push   r12
   14001f868:	sub    rsp,0x28
   14001f86c:	mov    rbp,rdx
   14001f86f:	mov    rdx,QWORD PTR [rbp+0x70]
   14001f873:	mov    rax,QWORD PTR [rdx]
   14001f876:	movsxd rcx,DWORD PTR [rax+0x4]
   14001f87a:	add    rcx,rdx
   14001f87d:	mov    r8b,0x1
   14001f880:	mov    edx,0x4
   14001f885:	call   QWORD PTR [rip+0x87d]        # 0x140020108
   14001f88b:	nop
   14001f88c:	lea    rax,[rip+0xfffffffffffe22a9]        # 0x140001b3c
   14001f893:	jmp    0x14001f895
   14001f895:	add    rsp,0x28
   14001f899:	pop    r12
   14001f89b:	pop    rbp
   14001f89c:	ret    
   14001f89d:	int3   
   14001f89e:	rex push rbp
   14001f8a0:	sub    rsp,0x20
   14001f8a4:	mov    rbp,rdx
   14001f8a7:	mov    ecx,0x8
   14001f8ac:	call   0x14001f4dc
   14001f8b1:	add    rsp,0x20
   14001f8b5:	pop    rbp
   14001f8b6:	ret    
   14001f8b7:	rex push rbp
   14001f8b9:	sub    rsp,0x20
   14001f8bd:	mov    rbp,rdx
   14001f8c0:	mov    rax,QWORD PTR [rcx]
   14001f8c3:	mov    rdx,rcx
   14001f8c6:	mov    ecx,DWORD PTR [rax]
   14001f8c8:	call   0x14001f5c4
   14001f8cd:	add    rsp,0x20
   14001f8d1:	pop    rbp
   14001f8d2:	ret    
   14001f8d3:	rex push rbp
   14001f8d5:	sub    rsp,0x20
   14001f8d9:	mov    rbp,rdx
   14001f8dc:	mov    QWORD PTR [rbp+0x38],rcx
   14001f8e0:	mov    QWORD PTR [rbp+0x28],rcx
   14001f8e4:	mov    rax,QWORD PTR [rbp+0x28]
   14001f8e8:	mov    rcx,QWORD PTR [rax]
   14001f8eb:	mov    QWORD PTR [rbp+0x30],rcx
   14001f8ef:	mov    rax,QWORD PTR [rbp+0x30]
   14001f8f3:	cmp    DWORD PTR [rax],0xe06d7363
   14001f8f9:	je     0x14001f907
   14001f8fb:	mov    DWORD PTR [rbp+0x20],0x0
   14001f902:	mov    eax,DWORD PTR [rbp+0x20]
   14001f905:	jmp    0x14001f90c
   14001f907:	call   0x14001f758
   14001f90c:	add    rsp,0x20
   14001f910:	pop    rbp
   14001f911:	ret    
   14001f912:	rex push rbp
   14001f914:	sub    rsp,0x20
   14001f918:	mov    rbp,rdx
   14001f91b:	cmp    DWORD PTR [rbp+0x20],0x0
   14001f91f:	jne    0x14001f936
   14001f921:	mov    r9,QWORD PTR [rbp+0x78]
   14001f925:	mov    r8d,DWORD PTR [rbp+0x70]
   14001f929:	mov    rdx,QWORD PTR [rbp+0x68]
   14001f92d:	mov    rcx,QWORD PTR [rbp+0x60]
   14001f931:	call   0x14001f2e0
   14001f936:	add    rsp,0x20
   14001f93a:	pop    rbp
   14001f93b:	ret    
   14001f93c:	int3   
   14001f93d:	int3   
   14001f93e:	int3   
   14001f93f:	int3   
   14001f940:	rex push rbp
   14001f942:	sub    rsp,0x20
   14001f946:	mov    rbp,rdx
   14001f949:	mov    rax,QWORD PTR [rcx]
   14001f94c:	xor    ecx,ecx
   14001f94e:	cmp    DWORD PTR [rax],0xc0000005
   14001f954:	sete   cl
   14001f957:	mov    eax,ecx
   14001f959:	mov    eax,ecx
   14001f95b:	add    rsp,0x20
   14001f95f:	pop    rbp
   14001f960:	ret    
   14001f961:	int3   
   14001f962:	int3   
   14001f963:	int3   
   14001f964:	int3   
   14001f965:	int3   
   14001f966:	int3   
   14001f967:	int3   
   14001f968:	int3   
   14001f969:	int3   
   14001f96a:	int3   
   14001f96b:	int3   
   14001f96c:	int3   
   14001f96d:	int3   
   14001f96e:	int3   
   14001f96f:	int3   
   14001f970:	mov    rax,QWORD PTR [rip+0xde9]        # 0x140020760
   14001f977:	lea    rcx,[rip+0x12]        # 0x14001f990
   14001f97e:	mov    QWORD PTR [rip+0x12c4b],rax        # 0x1400325d0
   14001f985:	jmp    0x14001efe0
   14001f98a:	int3   
   14001f98b:	int3   
   14001f98c:	int3   
   14001f98d:	int3   
   14001f98e:	int3   
   14001f98f:	int3   
   14001f990:	rex push rdi
   14001f992:	sub    rsp,0x20
   14001f996:	mov    rdi,QWORD PTR [rip+0x12c33]        # 0x1400325d0
   14001f99d:	mov    eax,DWORD PTR [rdi]
   14001f99f:	test   eax,eax
   14001f9a1:	je     0x14001f9ba
   14001f9a3:	cmp    eax,0xffffffff
   14001f9a6:	je     0x14001fa05
   14001f9a8:	lock add DWORD PTR [rdi],0xffffffff
   14001f9ac:	setne  al
   14001f9af:	test   al,al
   14001f9b1:	jne    0x14001fa05
   14001f9b3:	mov    rdi,QWORD PTR [rip+0x12c16]        # 0x1400325d0
   14001f9ba:	movsxd rax,DWORD PTR [rdi+0xc]
   14001f9be:	mov    QWORD PTR [rsp+0x30],rbx
   14001f9c3:	mov    QWORD PTR [rsp+0x38],rsi
   14001f9c8:	lea    rbx,[rdi+rax*8+0x10]
   14001f9cd:	movsxd rax,DWORD PTR [rdi+0x8]
   14001f9d1:	lea    rsi,[rdi+rax*8+0x10]
   14001f9d6:	cmp    rsi,rbx
   14001f9d9:	je     0x14001f9f2
   14001f9db:	nop    DWORD PTR [rax+rax*1+0x0]
   14001f9e0:	sub    rbx,0x8
   14001f9e4:	mov    rcx,rbx
   14001f9e7:	call   QWORD PTR [rip+0xd93]        # 0x140020780
   14001f9ed:	cmp    rbx,rsi
   14001f9f0:	jne    0x14001f9e0
   14001f9f2:	mov    rcx,rdi
   14001f9f5:	call   QWORD PTR [rip+0xcd5]        # 0x1400206d0
   14001f9fb:	mov    rsi,QWORD PTR [rsp+0x38]
   14001fa00:	mov    rbx,QWORD PTR [rsp+0x30]
   14001fa05:	add    rsp,0x20
   14001fa09:	pop    rdi
   14001fa0a:	ret    
